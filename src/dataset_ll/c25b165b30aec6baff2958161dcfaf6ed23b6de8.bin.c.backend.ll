source_filename = "test"
target datalayout = "e-p:32:32:32-f80:32:32"

%sockaddr = type { i32, [14 x i8] }
%_TYPEDEF_sigset_t = type { [1 x i32] }
%tms = type { i32, i32, i32, i32 }
%timespec = type { i32, i32 }
%sigaction = type { void (i32)*, i32, void ()*, %_TYPEDEF_sigset_t }
%stat = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%linux_dirent64 = type { i32 }

@r0 = internal unnamed_addr global i32 0
@r1 = internal unnamed_addr global i32 0
@r2 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@sb = internal unnamed_addr global i32 0
@sl = internal unnamed_addr global i32 0
@fp = internal unnamed_addr global i32 0
@ip = internal unnamed_addr global i32 0
@sp = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@cpsr_z = internal unnamed_addr global i1 false
@0 = external global i32
@global_var_80a0.1 = constant i32 -352321502
@global_var_1d858.5 = global i32 0
@global_var_1d868.6 = global i32* @global_var_1d858.5
@global_var_1d9c4.12 = global i32 0
@global_var_e0a0.18 = constant i32 -382906384
@global_var_1d9e0.23 = global i32 0
@global_var_8314.24 = constant i32 -352321546
@global_var_136c4.25 = constant i32 -481296384
@global_var_a4c4.31 = constant i32 -382906384
@global_var_a988.33 = constant i32 -382906384
@global_var_89d8.35 = constant i32 -382906384
@global_var_c96c.37 = constant i32 -382906384
@global_var_c1f8.39 = constant i32 -382906384
@global_var_b998.41 = constant i32 -382906384
@global_var_9da8.44 = constant i32 -382906384
@global_var_962c.46 = constant i32 -382906384
@global_var_1da7c.49 = global i32 0
@global_var_15304.61 = constant i32 47
@global_var_1da84.63 = global i32 0
@global_var_1d9e4.65 = global i32 0
@global_var_1da80.67 = global i32 0
@global_var_df60.70 = constant i32 -382910448
@global_var_1d874.72 = global i32 74832
@global_var_15308.74 = constant [11 x i8] c"92.53.72.6\00"
@global_var_1da8c.77 = local_unnamed_addr global i32 0
@global_var_1da8b.78 = local_unnamed_addr global i32 0
@global_var_1da8a.79 = local_unnamed_addr global i32 0
@global_var_1d9e8.81 = global i32 0
@global_var_df48.83 = constant i32 -442556408
@global_var_1da89.87 = local_unnamed_addr global i32 0
@global_var_15314.91 = constant i32 10
@global_var_1d86c.93 = global i32 -1
@global_var_1d870.95 = global i32 -1
@global_var_12a9c.98 = constant i32 -382910448
@global_var_12450.99 = constant i32 -382910224
@global_var_15318.101 = constant i32 16777216
@global_var_1d9f0.103 = global i32 0
@global_var_1d9fc.105 = global i32 0
@global_var_1d9f4.107 = global i32 0
@global_var_1d9f8.109 = global i32 0
@global_var_1da34.123 = global i32 0
@global_var_1da00.126 = global i32 0
@global_var_1da2c.128 = global i32 0
@global_var_1daa0.133 = global i32 0
@global_var_1da98.137 = global i32 0
@global_var_1da9c.139 = global i32 0
@global_var_1da07.142 = local_unnamed_addr global i32 0
@global_var_1da06.143 = local_unnamed_addr global i32 0
@global_var_1da18.145 = global i32 0
@global_var_1da09.147 = local_unnamed_addr global i32 0
@global_var_1da0c.148 = local_unnamed_addr global i32 0
@global_var_1da19.149 = local_unnamed_addr global i32 0
@global_var_1da1a.150 = local_unnamed_addr global i32 0
@global_var_1da1b.151 = local_unnamed_addr global i32 0
@global_var_1da08.152 = local_unnamed_addr global i32 0
@global_var_1da0d.153 = local_unnamed_addr global i32 0
@global_var_1da27.155 = local_unnamed_addr global i32 0
@global_var_1539c.157 = constant i32 593413
@global_var_15354.159 = constant i32 0
@global_var_1da26.160 = local_unnamed_addr global i32 0
@global_var_15320.162 = constant i32 167904771
@global_var_15328.164 = constant i32 100729347
@global_var_15330.166 = constant i32 536958260
@global_var_1533c.168 = constant i32 185540392
@global_var_15348.170 = constant i32 101848082
@global_var_15350.172 = constant i32 319293461
@global_var_15358.174 = constant i32 302920747
@global_var_15368.176 = constant i32 656134
@global_var_1536c.178 = constant i32 235537158
@global_var_15374.180 = constant i32 1444087300
@global_var_1537c.182 = constant i32 101913617
@global_var_1538c.184 = constant [9 x i8] c"UWVRWQWU\00"
@global_var_1da10.185 = local_unnamed_addr global i32 0
@global_var_1da14.187 = local_unnamed_addr global i32 0
@global_var_1da0e.188 = local_unnamed_addr global i32 0
@global_var_1da0f.189 = local_unnamed_addr global i32 0
@global_var_1da1c.191 = local_unnamed_addr global i32 0
@global_var_1da28.192 = local_unnamed_addr global i32 0
@global_var_1da29.193 = local_unnamed_addr global i32 0
@global_var_15398.203 = constant [3 x i8] c"\0D\0A\00"
@global_var_153a9.205 = constant i32 1646263295
@global_var_1daa8.209 = global i32 0
@global_var_1d878.212 = global i32 -554828881
@global_var_153ac.217 = constant [3 x i8] c"b^\00"
@global_var_1dab0.218 = local_unnamed_addr global i32 0
@global_var_1dab4.219 = local_unnamed_addr global i32 0
@global_var_1dab5.220 = local_unnamed_addr global i32 0
@global_var_153b0.222 = constant i32 60256
@global_var_1dab8.223 = local_unnamed_addr global i32 0
@global_var_1dabc.224 = local_unnamed_addr global i32 0
@global_var_1dabd.225 = local_unnamed_addr global i32 0
@global_var_153b4.227 = constant i32 33622318
@global_var_1dac4.228 = local_unnamed_addr global i32 0
@global_var_1dac0.229 = local_unnamed_addr global i32 0
@global_var_1dac5.230 = local_unnamed_addr global i32 0
@global_var_153cc.232 = constant i32 184684308
@global_var_1dac8.233 = local_unnamed_addr global i32 0
@global_var_1dacc.234 = local_unnamed_addr global i32 0
@global_var_1dacd.235 = local_unnamed_addr global i32 0
@global_var_153d4.237 = constant i32 84281602
@global_var_1dad0.238 = local_unnamed_addr global i32 0
@global_var_1dad4.239 = local_unnamed_addr global i32 0
@global_var_1dad5.240 = local_unnamed_addr global i32 0
@global_var_153dc.242 = constant i32 320085524
@global_var_1dad8.243 = local_unnamed_addr global i32 0
@global_var_1dadc.244 = local_unnamed_addr global i32 0
@global_var_1dadd.245 = local_unnamed_addr global i32 0
@global_var_153e4.247 = constant i32 6754068
@global_var_1dae4.248 = local_unnamed_addr global i32 0
@global_var_1dae0.249 = local_unnamed_addr global i32 0
@global_var_1dae5.250 = local_unnamed_addr global i32 0
@global_var_153e8.252 = constant i32 151913800
@global_var_1daec.253 = local_unnamed_addr global i32 0
@global_var_1dae8.254 = local_unnamed_addr global i32 0
@global_var_1daed.255 = local_unnamed_addr global i32 0
@global_var_15400.257 = constant i32 353568300
@global_var_1daf4.258 = local_unnamed_addr global i32 0
@global_var_1daf0.259 = local_unnamed_addr global i32 0
@global_var_1daf5.260 = local_unnamed_addr global i32 0
@global_var_1541c.262 = constant i32 352846857
@global_var_1dafc.263 = local_unnamed_addr global i32 0
@global_var_1daf8.264 = local_unnamed_addr global i32 0
@global_var_1dafd.265 = local_unnamed_addr global i32 0
@global_var_15428.267 = constant i32 151913800
@global_var_1db00.268 = local_unnamed_addr global i32 0
@global_var_1db04.269 = local_unnamed_addr global i32 0
@global_var_1db05.270 = local_unnamed_addr global i32 0
@global_var_1543c.272 = constant i32 151913800
@global_var_1db0c.273 = local_unnamed_addr global i32 0
@global_var_1db08.274 = local_unnamed_addr global i32 0
@global_var_1db0d.275 = local_unnamed_addr global i32 0
@global_var_15454.277 = constant i32 135599944
@global_var_1db10.278 = local_unnamed_addr global i32 0
@global_var_1db14.279 = local_unnamed_addr global i32 0
@global_var_1db15.280 = local_unnamed_addr global i32 0
@global_var_1545c.282 = constant i32 35586632
@global_var_1db1c.283 = local_unnamed_addr global i32 0
@global_var_1db18.284 = local_unnamed_addr global i32 0
@global_var_1db1d.285 = local_unnamed_addr global i32 0
@global_var_15464.287 = constant i32 1728250184
@global_var_1db24.288 = local_unnamed_addr global i32 0
@global_var_1db20.289 = local_unnamed_addr global i32 0
@global_var_1db25.290 = local_unnamed_addr global i32 0
@global_var_1546c.292 = constant i32 386271816
@global_var_1db28.293 = local_unnamed_addr global i32 0
@global_var_1db2c.294 = local_unnamed_addr global i32 0
@global_var_1db2d.295 = local_unnamed_addr global i32 0
@global_var_15474.297 = constant i32 135599944
@global_var_1db30.298 = local_unnamed_addr global i32 0
@global_var_1db34.299 = local_unnamed_addr global i32 0
@global_var_1db35.300 = local_unnamed_addr global i32 0
@global_var_15484.302 = constant i32 101913672
@global_var_1db90.303 = local_unnamed_addr global i32 0
@global_var_1db94.304 = local_unnamed_addr global i32 0
@global_var_1db95.305 = local_unnamed_addr global i32 0
@global_var_15490.307 = constant i32 235472457
@global_var_1db98.308 = local_unnamed_addr global i32 0
@global_var_1db9c.309 = local_unnamed_addr global i32 0
@global_var_1db9d.310 = local_unnamed_addr global i32 0
@global_var_15498.312 = constant i32 135599944
@global_var_1db38.313 = local_unnamed_addr global i32 0
@global_var_1db3c.314 = local_unnamed_addr global i32 0
@global_var_1db3d.315 = local_unnamed_addr global i32 0
@global_var_154ac.317 = constant i32 269751302
@global_var_1db40.318 = local_unnamed_addr global i32 0
@global_var_1db44.319 = local_unnamed_addr global i32 0
@global_var_1db45.320 = local_unnamed_addr global i32 0
@global_var_154e0.322 = constant i32 302527539
@global_var_1db4c.323 = local_unnamed_addr global i32 0
@global_var_1db48.324 = local_unnamed_addr global i32 0
@global_var_1db4d.325 = local_unnamed_addr global i32 0
@global_var_154b8.327 = constant i32 68354632
@global_var_1db54.328 = local_unnamed_addr global i32 0
@global_var_1db50.329 = local_unnamed_addr global i32 0
@global_var_1db55.330 = local_unnamed_addr global i32 0
@global_var_154cc.332 = constant i32 34211337
@global_var_1db5c.333 = local_unnamed_addr global i32 0
@global_var_1db58.334 = local_unnamed_addr global i32 0
@global_var_1db5d.335 = local_unnamed_addr global i32 0
@global_var_154f8.337 = constant i32 285344584
@global_var_1db60.338 = local_unnamed_addr global i32 0
@global_var_1db64.339 = local_unnamed_addr global i32 0
@global_var_1db65.340 = local_unnamed_addr global i32 0
@global_var_15508.342 = constant i32 285344584
@global_var_1db6c.343 = local_unnamed_addr global i32 0
@global_var_1db68.344 = local_unnamed_addr global i32 0
@global_var_1db6d.345 = local_unnamed_addr global i32 0
@global_var_1db70.346 = local_unnamed_addr global i32 0
@global_var_1db74.347 = local_unnamed_addr global i32 0
@global_var_1db75.348 = local_unnamed_addr global i32 0
@global_var_1551c.350 = constant i32 151912456
@global_var_1db7c.351 = local_unnamed_addr global i32 0
@global_var_1db78.352 = local_unnamed_addr global i32 0
@global_var_1db7d.353 = local_unnamed_addr global i32 0
@global_var_154d8.355 = constant i32 34801922
@global_var_1db80.356 = local_unnamed_addr global i32 0
@global_var_1db84.357 = local_unnamed_addr global i32 0
@global_var_1db85.358 = local_unnamed_addr global i32 0
@global_var_15524.360 = constant i32 100991062
@global_var_1db8d.361 = local_unnamed_addr global i32 0
@global_var_1db88.362 = local_unnamed_addr global i32 0
@global_var_1db8c.363 = local_unnamed_addr global i32 0
@global_var_140ac.366 = constant i32 -476053504
@global_var_12e6c.370 = constant i32 -443219956
@global_var_12fd8.375 = constant i32 -376111092
@global_var_1da70.378 = global i32 0
@global_var_1314c.380 = constant i32 -456978431
@global_var_1dba0.382 = global i32 0
@global_var_1da38.384 = global i32 0
@global_var_1d978.387 = global i32 256
@global_var_1d87c.388 = global i32* @global_var_1d978.387
@global_var_1da60.391 = global i32 0
@global_var_1dc20.393 = global i32 0
@global_var_14860.394 = constant i32 -382910416
@global_var_130d0.395 = constant i32 -509595648
@global_var_13744.402 = constant i32 -442564520
@global_var_1d984.408 = global i32 0
@global_var_12d18.410 = constant i32 -481230848
@global_var_1da50.412 = global i32 0
@global_var_144b0.414 = constant i32 -509587456
@global_var_15648.416 = constant i32 33554944
@global_var_1d9bc.417 = global i32* @global_var_15648.416
@global_var_1d99c.420 = global i32 0
@global_var_1da54.424 = local_unnamed_addr global i32 0
@global_var_13e64.426 = constant i32 -352321419
@global_var_1d84c.430 = global i32 -1
@global_var_1da64.433 = global i32 0
@global_var_1da68.435 = local_unnamed_addr global i32 0
@global_var_14098.436 = constant i32 -390234096
@global_var_1553c.438 = constant [10 x i8] c"/dev/null\00"
@global_var_1da6c.440 = global i32 0
@global_var_1da58.445 = local_unnamed_addr global i32 0
@global_var_1da5c.447 = global i32 0
@global_var_130b0.449 = constant i32 -369096958
@global_var_1d9b4 = external local_unnamed_addr global i32
@global_var_13070.459 = constant i32 -442564608
@global_var_14360.461 = constant i32 -335544664
@global_var_1447c.464 = constant i32 -275775369
@global_var_14bf4.465 = constant i32 -382910352
@global_var_1da78.467 = global i32 0
@global_var_1dc38.470 = global i32 0
@global_var_1dc3c.472 = global i32 0
@global_var_1d850.475 = global i32 0
@global_var_1d9c0.3 = external global i8*
@global_var_1d9dc.21 = external global i8*
@global_var_1d9dd.29 = global i8 0
@global_var_1da88.76 = external global i8*
@global_var_1d9ec.97 = external global i8*
@global_var_1da30.130 = external global i8*
@global_var_1da31.131 = local_unnamed_addr global i8 0
@global_var_1da04.141 = external global i8*
@global_var_1da24.146 = local_unnamed_addr global i8 0
@global_var_1da25.154 = local_unnamed_addr global i8 0
@global_var_153a0.207 = constant i8 -1

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @function_8094() local_unnamed_addr {
entry:
  %v3_8098 = load i32, i32* @r4, align 4
  %v0_80a0 = call i32 @function_8130()
  %v1_80a4 = call i32 @function_152b4(i32 %v0_80a0)
  call void @__pseudo_branch(i32 %v3_8098)
  ret i32 %v1_80a4
}

define i32 @function_80b0() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_80b0 = load i32, i32* @r4, align 4
  store i32 %v3_80b0, i32* %stack_var_-12, align 4
  store i32 ptrtoint (i8** @global_var_1d9c0.3 to i32), i32* %r5.global-to-local, align 4
  %v2_80b8 = load i8, i8* bitcast (i8** @global_var_1d9c0.3 to i8*), align 4
  %v2_80bc = icmp eq i8 %v2_80b8, 0
  br i1 %v2_80bc, label %bb7, label %bb

bb:                                               ; preds = %entry
  %v12_80c0 = load i32, i32* @r0, align 4
  ret i32 %v12_80c0

bb7:                                              ; preds = %entry
  store i32 ptrtoint (i32** @global_var_1d868.6 to i32), i32* %r4.global-to-local, align 4
  %v2_80c8 = load i32, i32* bitcast (i32** @global_var_1d868.6 to i32*), align 4
  store i32 %v2_80c8, i32* %r2.global-to-local, align 4
  %v2_80d0 = icmp eq i32 %v2_80c8, 0
  br i1 %v2_80d0, label %bb8, label %dec_label_pc_80d8

dec_label_pc_80d8:                                ; preds = %bb7, %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge
  %v1_80dc = phi i32 [ %v1_80dc.pre, %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge ], [ ptrtoint (i32** @global_var_1d868.6 to i32), %bb7 ]
  %v0_80d8 = phi i32 [ %v2_80e8, %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge ], [ %v2_80c8, %bb7 ]
  %v1_80d8 = add i32 %v0_80d8, 4
  %v2_80dc = inttoptr i32 %v1_80dc to i32*
  store i32 %v1_80d8, i32* %v2_80dc, align 4
  %v0_80e4 = load i32, i32* %r2.global-to-local, align 4
  call void @__pseudo_branch(i32 %v0_80e4)
  %v2_80e8 = load i32, i32* bitcast (i32** @global_var_1d868.6 to i32*), align 4
  store i32 %v2_80e8, i32* %r2.global-to-local, align 4
  %v2_80f0 = icmp eq i32 %v2_80e8, 0
  br i1 %v2_80f0, label %.loopexit, label %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge

dec_label_pc_80d8.dec_label_pc_80d8_crit_edge:    ; preds = %dec_label_pc_80d8
  %v1_80dc.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_80d8

.loopexit:                                        ; preds = %dec_label_pc_80d8
  %v2_8110.pre = load i32, i32* %r5.global-to-local, align 4
  br label %bb8

bb8:                                              ; preds = %.loopexit, %bb7
  %v2_8110 = phi i32 [ %v2_8110.pre, %.loopexit ], [ ptrtoint (i8** @global_var_1d9c0.3 to i32), %bb7 ]
  %v3_8110 = inttoptr i32 %v2_8110 to i8*
  store i8 1, i8* %v3_8110, align 1
  %v2_8114 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8114, i32* %r4.global-to-local, align 4
  %v11_8114 = load i32, i32* @r0, align 4
  ret i32 %v11_8114

; uselistorder directives
  uselistorder i32 %v2_80e8, { 1, 2, 0 }
  uselistorder i32** @global_var_1d868.6, { 1, 0 }
  uselistorder i8** @global_var_1d9c0.3, { 1, 0 }
  uselistorder label %dec_label_pc_80d8, { 1, 0 }
}

define i32 @function_8124(i32 %arg1) local_unnamed_addr {
dec_label_pc_8124:
  %v0_8124 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_8124, label %bb, label %bb2

bb:                                               ; preds = %dec_label_pc_8124
  br label %bb2

bb2:                                              ; preds = %dec_label_pc_8124, %bb
  %v5_812c = load i32, i32* @r0, align 4
  ret i32 %v5_812c

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @function_8130() local_unnamed_addr {
.thread:
  %v2_8150 = load i32, i32* inttoptr (i32 120924 to i32*), align 4
  %v2_8154 = icmp eq i32 %v2_8150, 0
  br i1 %v2_8154, label %bb, label %bb2

bb:                                               ; preds = %.thread
  ret i32 120924

bb2:                                              ; preds = %.thread
  ret i32 120924

; uselistorder directives
  uselistorder i32 120924, { 1, 0, 2 }
}

define i32 @function_8188() local_unnamed_addr {
dec_label_pc_8188:
  %v5_818c = load i32, i32* @r0, align 4
  ret i32 %v5_818c
}

define i32 @entry_point(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_4 = alloca i32, align 4
  %v4_8198 = ptrtoint i32* %stack_var_4 to i32
  %v8_81b8 = call i32 @function_1414c(i32 ptrtoint (i32* @global_var_e0a0.18 to i32), i32 %arg2, i32* nonnull %stack_var_4, i32 32916, i32 86768, i32 %arg1, i32 %v4_8198)
  %v0_81bc = call i32 @function_13b14()
  ret i32 %v0_81bc
}

define i32 @function_81cc(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_81cc:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v1_81cc = urem i32 %arg1, 256
  %v2_81d0 = icmp eq i32 %v1_81cc, 0
  %v1_81d8 = urem i32 %arg3, 256
  br i1 %v2_81d0, label %dec_label_pc_821c, label %dec_label_pc_81e4

dec_label_pc_81e4:                                ; preds = %dec_label_pc_81cc
  %v0_81e4 = load i32, i32* %r1.global-to-local, align 4
  %v1_81e4 = add i32 %v0_81e4, 4
  %v2_81e4 = inttoptr i32 %v1_81e4 to i8*
  %v3_81e4 = load i8, i8* %v2_81e4, align 1
  %v4_81e4 = zext i8 %v3_81e4 to i32
  %v9_81e8 = icmp eq i32 %v4_81e4, %v1_81d8
  br i1 %v9_81e8, label %dec_label_pc_8224, label %dec_label_pc_820c.preheader

dec_label_pc_820c.preheader:                      ; preds = %dec_label_pc_81e4
  br label %dec_label_pc_820c

dec_label_pc_81fc:                                ; preds = %dec_label_pc_820c
  %v1_81fc = add i32 %v0_8204.in, 12
  %v2_81fc = inttoptr i32 %v1_81fc to i8*
  %v3_81fc = load i8, i8* %v2_81fc, align 1
  %v4_81fc = zext i8 %v3_81fc to i32
  %v9_8200 = icmp eq i32 %v4_81fc, %v1_81d8
  br i1 %v9_8200, label %dec_label_pc_8224, label %dec_label_pc_820c

dec_label_pc_820c:                                ; preds = %dec_label_pc_820c.preheader, %dec_label_pc_81fc
  %v0_8204.in = phi i32 [ %v0_81e4, %dec_label_pc_820c.preheader ], [ %v0_8204, %dec_label_pc_81fc ]
  %v0_820c = phi i32 [ 0, %dec_label_pc_820c.preheader ], [ %v1_820c, %dec_label_pc_81fc ]
  %v0_8204 = add i32 %v0_8204.in, 8
  %v1_820c = add i32 %v0_820c, 1
  %v9_8210 = icmp eq i32 %v1_820c, %v1_81cc
  store i32 %v0_8204, i32* %r1.global-to-local, align 4
  br i1 %v9_8210, label %dec_label_pc_821c, label %dec_label_pc_81fc

dec_label_pc_821c:                                ; preds = %dec_label_pc_820c, %dec_label_pc_81cc
  ret i32 %arg4

dec_label_pc_8224:                                ; preds = %dec_label_pc_81fc, %dec_label_pc_81e4
  %v0_8224 = phi i32 [ %v0_81e4, %dec_label_pc_81e4 ], [ %v0_8204, %dec_label_pc_81fc ]
  %v1_8224 = inttoptr i32 %v0_8224 to i32*
  %v2_8224 = load i32, i32* %v1_8224, align 4
  ret i32 %v2_8224

; uselistorder directives
  uselistorder i32 %v1_820c, { 1, 0 }
  uselistorder i32 %v0_8204, { 1, 0, 2 }
  uselistorder i32 %v0_8204.in, { 1, 0 }
  uselistorder i32 %v0_81e4, { 1, 0, 2 }
  uselistorder i32 %v1_81d8, { 1, 0 }
  uselistorder i32 %v1_81cc, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_820c, { 1, 0 }
}

define i32 @function_8230(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_8230:
  store i32 %arg1, i32* @r6, align 4
  %v1_823c = urem i32 %arg2, 256
  store i32 %v1_823c, i32* @r7, align 4
  %v0_8248 = call i32 @function_12ac8()
  %v7_824c = icmp eq i32 %v0_8248, -1
  %tmp23 = icmp slt i32 %v0_8248, 1
  br i1 %tmp23, label %bb24, label %.thread2

.thread2:                                         ; preds = %dec_label_pc_8230
  br label %bb25

bb24:                                             ; preds = %dec_label_pc_8230
  %. = zext i1 %v7_824c to i32
  store i32 %., i32* @r5, align 4
  %v2_8264 = icmp eq i1 %v7_824c, false
  br i1 %v2_8264, label %bb26, label %bb25

bb25:                                             ; preds = %.thread2, %bb24
  ret i32 %v0_8248

bb26:                                             ; preds = %bb24
  %v0_826c = call i32 @function_12ac8()
  %v7_8270 = icmp eq i32 %v0_826c, -1
  store i32 %v0_826c, i32* @r4, align 4
  br i1 %v7_8270, label %dec_label_pc_82a0, label %dec_label_pc_827c

dec_label_pc_827c:                                ; preds = %bb26
  %v2_827c = icmp eq i32 %v0_826c, 0
  br i1 %v2_827c, label %dec_label_pc_8284, label %dec_label_pc_82a8

dec_label_pc_8284:                                ; preds = %dec_label_pc_827c
  %v0_8284 = load i32, i32* @r6, align 4
  %v1_8288 = call i32 @function_13e9c(i32 %v0_8284)
  %v0_828c = call i32 @function_12b20()
  %v2_8294 = call i32 @function_12b9c(i32 %v0_828c, i32 9)
  %v0_8298 = load i32, i32* @r4, align 4
  %v1_829c = call i32 @function_13e08(i32 %v0_8298)
  br label %dec_label_pc_82a0

dec_label_pc_82a0:                                ; preds = %bb26, %dec_label_pc_8284
  %v0_82a0 = load i32, i32* @r5, align 4
  %v1_82a4 = call i32 @function_13e08(i32 %v0_82a0)
  br label %dec_label_pc_82a8

dec_label_pc_82a8:                                ; preds = %dec_label_pc_827c, %dec_label_pc_82a0
  %v2_82ac = load i8, i8* bitcast (i8** @global_var_1d9dc.21 to i8*), align 4
  %v3_82ac = zext i8 %v2_82ac to i32
  %v2_82b0 = icmp eq i8 %v2_82ac, 0
  br i1 %v2_82b0, label %dec_label_pc_82f4, label %dec_label_pc_82b8

dec_label_pc_82b8:                                ; preds = %dec_label_pc_82a8
  %v2_82bc = load i32, i32* @global_var_1d9e0.23, align 4
  %v1_82c0 = inttoptr i32 %v2_82bc to i32*
  %v2_82c0 = load i32, i32* %v1_82c0, align 4
  store i32 %v2_82c0, i32* @ip, align 4
  %v1_82c4 = add i32 %v2_82c0, 4
  %v2_82c4 = inttoptr i32 %v1_82c4 to i8*
  %v3_82c4 = load i8, i8* %v2_82c4, align 1
  %v4_82c4 = zext i8 %v3_82c4 to i32
  %v1_82c8 = load i32, i32* @r7, align 4
  %v9_82c8 = icmp eq i32 %v4_82c4, %v1_82c8
  br i1 %v9_82c8, label %dec_label_pc_82fc, label %dec_label_pc_82e8.preheader

dec_label_pc_82e8.preheader:                      ; preds = %dec_label_pc_82b8
  %v1_82cc = load i32, i32* @r5, align 4
  br label %dec_label_pc_82e8

dec_label_pc_82d8:                                ; preds = %dec_label_pc_82e8
  %v4_82d8 = mul i32 %v1_82e8, 4
  %v5_82d8 = add i32 %v4_82d8, %v2_82bc
  %v6_82d8 = inttoptr i32 %v5_82d8 to i32*
  %v7_82d8 = load i32, i32* %v6_82d8, align 4
  store i32 %v7_82d8, i32* @ip, align 4
  %v1_82dc = add i32 %v7_82d8, 4
  %v2_82dc = inttoptr i32 %v1_82dc to i8*
  %v3_82dc = load i8, i8* %v2_82dc, align 1
  %v4_82dc = zext i8 %v3_82dc to i32
  %v9_82e0 = icmp eq i32 %v4_82dc, %v1_82c8
  br i1 %v9_82e0, label %dec_label_pc_82fc, label %dec_label_pc_82e8

dec_label_pc_82e8:                                ; preds = %dec_label_pc_82e8.preheader, %dec_label_pc_82d8
  %v0_82e8 = phi i32 [ %v1_82cc, %dec_label_pc_82e8.preheader ], [ %v1_82e8, %dec_label_pc_82d8 ]
  %v1_82e8 = add i32 %v0_82e8, 1
  %v9_82ec = icmp eq i32 %v1_82e8, %v3_82ac
  br i1 %v9_82ec, label %dec_label_pc_82f4, label %dec_label_pc_82d8

dec_label_pc_82f4:                                ; preds = %dec_label_pc_82e8, %dec_label_pc_82a8, %dec_label_pc_82fc
  %v1_82f8 = call i32 @function_13e08(i32 0)
  %v0_8310.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_82fc

dec_label_pc_82fc:                                ; preds = %dec_label_pc_82d8, %dec_label_pc_82b8, %dec_label_pc_82f4
  %v0_8310 = phi i32 [ %v2_82c0, %dec_label_pc_82b8 ], [ %v0_8310.pre, %dec_label_pc_82f4 ], [ %v7_82d8, %dec_label_pc_82d8 ]
  %v1_8310 = inttoptr i32 %v0_8310 to i32*
  %v2_8310 = load i32, i32* %v1_8310, align 4
  call void @__pseudo_branch(i32 %v2_8310)
  br label %dec_label_pc_82f4

; uselistorder directives
  uselistorder i32 %v1_82e8, { 2, 0, 1 }
  uselistorder i32 %v0_826c, { 1, 2, 0 }
  uselistorder i1 %v7_824c, { 1, 0 }
  uselistorder i32 %v0_8248, { 2, 1, 0 }
  uselistorder label %dec_label_pc_82fc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_82f4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_82e8, { 1, 0 }
  uselistorder label %dec_label_pc_82a8, { 1, 0 }
  uselistorder label %dec_label_pc_82a0, { 1, 0 }
  uselistorder label %bb25, { 1, 0 }
}

define i32 @function_8320(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8320:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_8320 = load i32, i32* @r4, align 4
  %v6_8320 = load i32, i32* @r5, align 4
  %v9_8320 = load i32, i32* @r6, align 4
  %v12_8320 = load i32, i32* @r7, align 4
  %v15_8320 = load i32, i32* @r8, align 4
  %v18_8320 = load i32, i32* @sb, align 4
  %v21_8320 = load i32, i32* @sl, align 4
  %v27_8320 = load i32, i32* @lr, align 4
  %v7_8324 = icmp eq i32 %arg2, 3
  store i1 %v7_8324, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg2, i32* @r5, align 4
  %v0_8330 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_8330, i32* @r4, align 4
  %tmp33 = icmp ult i32 %arg2, 4
  br i1 %tmp33, label %dec_label_pc_8344, label %dec_label_pc_8338

dec_label_pc_8338:                                ; preds = %dec_label_pc_8320
  %v7_8338 = icmp eq i32 %arg2, 4
  store i1 %v7_8338, i1* %cpsr_z.global-to-local, align 1
  %v1_833c = inttoptr i32 %v0_8330 to i32*
  %v2_833c = load i32, i32* %v1_833c, align 4
  store i32 %v2_833c, i32* @sl, align 4
  br i1 %v7_8338, label %dec_label_pc_8344, label %dec_label_pc_834c

dec_label_pc_8344:                                ; preds = %dec_label_pc_8368, %.dec_label_pc_8344_crit_edge, %dec_label_pc_8338, %dec_label_pc_835c, %dec_label_pc_834c, %dec_label_pc_8320
  %v29_8348 = phi i32 [ %v29_8348.pre, %.dec_label_pc_8344_crit_edge ], [ %v0_8330, %dec_label_pc_8368 ], [ %v0_8330, %dec_label_pc_8338 ], [ %v0_8330, %dec_label_pc_835c ], [ %v0_8330, %dec_label_pc_834c ], [ %v0_8330, %dec_label_pc_8320 ]
  store i32 %v6_8320, i32* @r5, align 4
  store i32 %v9_8320, i32* @r6, align 4
  store i32 %v12_8320, i32* @r7, align 4
  store i32 %v18_8320, i32* @sb, align 4
  store i32 %v21_8320, i32* @sl, align 4
  ret i32 %v29_8348

dec_label_pc_834c:                                ; preds = %dec_label_pc_8338
  %v7_834c = icmp eq i32 %arg2, 5
  store i1 %v7_834c, i1* %cpsr_z.global-to-local, align 1
  %v1_8350 = add i32 %v0_8330, 4
  %v2_8350 = inttoptr i32 %v1_8350 to i8*
  %v3_8350 = load i8, i8* %v2_8350, align 1
  %v4_8350 = zext i8 %v3_8350 to i32
  store i32 %v4_8350, i32* %r1.global-to-local, align 4
  br i1 %v7_834c, label %dec_label_pc_8344, label %dec_label_pc_835c

dec_label_pc_835c:                                ; preds = %dec_label_pc_834c
  %v1_835c = add i32 %v0_8330, 5
  %v2_835c = inttoptr i32 %v1_835c to i8*
  %v3_835c = load i8, i8* %v2_835c, align 1
  %v4_835c = zext i8 %v3_835c to i32
  store i32 %v4_835c, i32* @r7, align 4
  %v2_8360 = icmp eq i8 %v3_835c, 0
  store i1 %v2_8360, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8360, label %dec_label_pc_8344, label %dec_label_pc_8368

dec_label_pc_8368:                                ; preds = %dec_label_pc_835c
  %v3_8368 = mul nuw nsw i32 %v4_835c, 4
  store i32 %v3_8368, i32* @sb, align 4
  %v1_836c = add i32 %arg2, -6
  store i32 %v1_836c, i32* @r6, align 4
  %v2_8370 = mul nuw nsw i32 %v4_835c, 5
  store i32 %v2_8370, i32* @r8, align 4
  %v3_8374 = icmp ult i32 %v1_836c, %v2_8370
  %v9_8374 = icmp eq i32 %v1_836c, %v2_8370
  store i1 %v9_8374, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_8374, label %dec_label_pc_8344, label %dec_label_pc_837c

dec_label_pc_837c:                                ; preds = %dec_label_pc_8368
  store i32 %v4_835c, i32* %r0.global-to-local, align 4
  store i32 24, i32* %r1.global-to-local, align 4
  %v2_8384 = call i32 @function_1366c(i32 %v4_835c, i32 24)
  store i32 %v2_8384, i32* %r0.global-to-local, align 4
  %v0_8388 = load i32, i32* @r7, align 4
  %v2_8388 = icmp eq i32 %v0_8388, 0
  store i1 %v2_8388, i1* %cpsr_z.global-to-local, align 1
  %v0_8390 = load i32, i32* @r4, align 4
  %v1_8390 = add i32 %v0_8390, 6
  store i32 %v1_8390, i32* %fp.global-to-local, align 4
  %tmp27 = icmp slt i32 %v0_8388, 1
  br i1 %tmp27, label %dec_label_pc_83e8thread-pre-split, label %dec_label_pc_8398

dec_label_pc_8398:                                ; preds = %dec_label_pc_837c
  store i32 %v2_8384, i32* %r1.global-to-local, align 4
  %v1_839c = load i32, i32* @r8, align 4
  %v2_839c = add i32 %v1_839c, %v0_8390
  store i32 %v2_839c, i32* %ip.global-to-local, align 4
  store i32 %v0_8390, i32* %r0.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  store i32 2, i32* @r4, align 4
  br label %dec_label_pc_83ac

dec_label_pc_83ac:                                ; preds = %dec_label_pc_83ac.dec_label_pc_83ac_crit_edge, %dec_label_pc_8398
  %v2_83bc = phi i32 [ %v1_83d0, %dec_label_pc_83ac.dec_label_pc_83ac_crit_edge ], [ %v2_8384, %dec_label_pc_8398 ]
  %v1_83b8 = phi i32 [ %v1_83b8.pre, %dec_label_pc_83ac.dec_label_pc_83ac_crit_edge ], [ %v2_839c, %dec_label_pc_8398 ]
  %v0_83b4 = phi i32 [ %v0_83ac.pre, %dec_label_pc_83ac.dec_label_pc_83ac_crit_edge ], [ %v0_8390, %dec_label_pc_8398 ]
  %v1_83ac = add i32 %v0_83b4, 10
  %v2_83ac = inttoptr i32 %v1_83ac to i8*
  %v3_83ac = load i8, i8* %v2_83ac, align 1
  %v1_83b0 = add i32 %v0_83b4, 6
  %v2_83b0 = inttoptr i32 %v1_83b0 to i32*
  %v3_83b0 = load i32, i32* %v2_83b0, align 4
  store i32 %v3_83b0, i32* %r2.global-to-local, align 4
  %v1_83b4 = add i32 %v0_83b4, 5
  store i32 %v1_83b4, i32* %r0.global-to-local, align 4
  %v9_83b8 = icmp eq i32 %v1_83b4, %v1_83b8
  store i1 %v9_83b8, i1* %cpsr_z.global-to-local, align 1
  %v3_83bc = add i32 %v2_83bc, 20
  %v4_83bc = inttoptr i32 %v3_83bc to i8*
  store i8 %v3_83ac, i8* %v4_83bc, align 1
  %v0_83c0 = load i32, i32* %r2.global-to-local, align 4
  %v1_83c0 = load i32, i32* %r1.global-to-local, align 4
  %v2_83c0 = add i32 %v1_83c0, 4
  %v3_83c0 = inttoptr i32 %v2_83c0 to i32*
  store i32 %v0_83c0, i32* %v3_83c0, align 4
  %v0_83c4 = load i32, i32* %r2.global-to-local, align 4
  %v1_83c4 = load i32, i32* %r1.global-to-local, align 4
  %v2_83c4 = add i32 %v1_83c4, 16
  %v3_83c4 = inttoptr i32 %v2_83c4 to i32*
  store i32 %v0_83c4, i32* %v3_83c4, align 4
  %v0_83c8 = load i32, i32* @r4, align 4
  %v1_83c8 = trunc i32 %v0_83c8 to i8
  %v2_83c8 = load i32, i32* %r1.global-to-local, align 4
  %v3_83c8 = inttoptr i32 %v2_83c8 to i8*
  store i8 %v1_83c8, i8* %v3_83c8, align 1
  %v0_83cc = load i32, i32* @lr, align 4
  %v1_83cc = trunc i32 %v0_83cc to i8
  %v2_83cc = load i32, i32* %r1.global-to-local, align 4
  %v3_83cc = add i32 %v2_83cc, 1
  %v4_83cc = inttoptr i32 %v3_83cc to i8*
  store i8 %v1_83cc, i8* %v4_83cc, align 1
  %v0_83d0 = load i32, i32* %r1.global-to-local, align 4
  %v1_83d0 = add i32 %v0_83d0, 24
  store i32 %v1_83d0, i32* %r1.global-to-local, align 4
  %v0_83d4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_83d4, label %dec_label_pc_83d8, label %dec_label_pc_83ac.dec_label_pc_83ac_crit_edge

dec_label_pc_83ac.dec_label_pc_83ac_crit_edge:    ; preds = %dec_label_pc_83ac
  %v0_83ac.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_83b8.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_83ac

dec_label_pc_83d8:                                ; preds = %dec_label_pc_83ac
  %v0_83d8 = load i32, i32* @sb, align 4
  %v1_83d8 = load i32, i32* @r7, align 4
  %v1_83dc = load i32, i32* @r5, align 4
  %sum = add i32 %v1_83d8, %v0_83d8
  %v2_83dc = sub i32 %v1_83dc, %sum
  %v0_83e0 = load i32, i32* %r0.global-to-local, align 4
  %v1_83e0 = add i32 %v0_83e0, 6
  store i32 %v1_83e0, i32* %fp.global-to-local, align 4
  %v1_83e4 = add i32 %v2_83dc, -6
  store i32 %v1_83e4, i32* @r6, align 4
  br label %dec_label_pc_83e8

dec_label_pc_83e8thread-pre-split:                ; preds = %dec_label_pc_837c
  %v0_83e8.pr = load i32, i32* @r6, align 4
  br label %dec_label_pc_83e8

dec_label_pc_83e8:                                ; preds = %dec_label_pc_83e8thread-pre-split, %dec_label_pc_83d8
  %v0_83f4 = phi i32 [ %v1_8390, %dec_label_pc_83e8thread-pre-split ], [ %v1_83e0, %dec_label_pc_83d8 ]
  %v1_83ec = phi i32 [ %v0_83e8.pr, %dec_label_pc_83e8thread-pre-split ], [ %v1_83e4, %dec_label_pc_83d8 ]
  %v2_83e8 = icmp eq i32 %v1_83ec, 0
  store i1 %v2_83e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_83e8, label %dec_label_pc_8520, label %dec_label_pc_83f4

dec_label_pc_83f4:                                ; preds = %dec_label_pc_83e8
  %v1_83f4 = inttoptr i32 %v0_83f4 to i8*
  %v2_83f4 = load i8, i8* %v1_83f4, align 1
  %v3_83f4 = zext i8 %v2_83f4 to i32
  store i32 %v3_83f4, i32* @sb, align 4
  %v2_83f8 = icmp eq i8 %v2_83f4, 0
  store i1 %v2_83f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_83f8, label %dec_label_pc_84d8, label %dec_label_pc_8408

dec_label_pc_8408:                                ; preds = %dec_label_pc_83f4
  store i32 %v3_83f4, i32* %r0.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v2_8410 = call i32 @function_1366c(i32 %v3_83f4, i32 8)
  store i32 %v2_8410, i32* %r0.global-to-local, align 4
  %v0_8414 = load i32, i32* @sb, align 4
  %v2_8414 = icmp eq i32 %v0_8414, 0
  store i1 %v2_8414, i1* %cpsr_z.global-to-local, align 1
  %tmp28 = icmp slt i32 %v0_8414, 1
  br i1 %tmp28, label %dec_label_pc_84d8, label %dec_label_pc_8424

dec_label_pc_8424:                                ; preds = %dec_label_pc_8408
  %v0_8424 = load i32, i32* @r6, align 4
  %v1_8424 = add i32 %v0_8424, -1
  store i32 %v1_8424, i32* %r2.global-to-local, align 4
  %v7_8424 = icmp eq i32 %v0_8424, 1
  store i1 %v7_8424, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8424, label %dec_label_pc_8520, label %dec_label_pc_842c

dec_label_pc_842c:                                ; preds = %dec_label_pc_8424
  %v0_842c = load i32, i32* %fp.global-to-local, align 4
  %v1_842c = add i32 %v0_842c, 1
  %v2_842c = inttoptr i32 %v1_842c to i8*
  %v3_842c = load i8, i8* %v2_842c, align 1
  %v1_8430 = add i32 %v0_8424, -2
  store i32 %v1_8430, i32* %r2.global-to-local, align 4
  %v7_8430 = icmp eq i32 %v1_8424, 1
  store i1 %v7_8430, i1* %cpsr_z.global-to-local, align 1
  %v3_8434 = add i32 %v2_8410, 4
  %v4_8434 = inttoptr i32 %v3_8434 to i8*
  store i8 %v3_842c, i8* %v4_8434, align 1
  %v0_8438 = load i32, i32* %fp.global-to-local, align 4
  %v1_8438 = add i32 %v0_8438, 1
  store i32 %v1_8438, i32* %r0.global-to-local, align 4
  %v0_843c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_843c, label %dec_label_pc_8520, label %dec_label_pc_8440

dec_label_pc_8440:                                ; preds = %dec_label_pc_842c
  %v1_8440 = add i32 %v0_8438, 2
  %v2_8440 = inttoptr i32 %v1_8440 to i8*
  %v3_8440 = load i8, i8* %v2_8440, align 1
  %v4_8440 = zext i8 %v3_8440 to i32
  store i32 %v4_8440, i32* @r4, align 4
  %v0_8444 = load i32, i32* %r2.global-to-local, align 4
  %v1_8444 = add i32 %v0_8444, -1
  store i32 %v1_8444, i32* @r8, align 4
  %v9_8448 = icmp eq i32 %v1_8444, %v4_8440
  store i1 %v9_8448, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_8440, i32* %r0.global-to-local, align 4
  %v5_8450 = icmp slt i32 %v1_8444, %v4_8440
  br i1 %v5_8450, label %dec_label_pc_8520, label %dec_label_pc_8454

dec_label_pc_8454:                                ; preds = %dec_label_pc_8440
  store i32 %v2_8410, i32* @r5, align 4
  %v1_845c = add i32 %v2_8410, 8
  %v1_8460 = add i32 %v0_8438, 3
  store i32 %v1_8460, i32* @r6, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_84a4

dec_label_pc_8470:                                ; preds = %dec_label_pc_84a4
  %v0_8470 = load i32, i32* @r8, align 4
  %v1_8470 = load i32, i32* @r4, align 4
  %v2_8470 = sub i32 %v0_8470, %v1_8470
  store i32 %v2_8470, i32* %r2.global-to-local, align 4
  %v9_8470 = icmp eq i32 %v0_8470, %v1_8470
  store i1 %v9_8470, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_8470, label %dec_label_pc_8520, label %dec_label_pc_8478

dec_label_pc_8478:                                ; preds = %dec_label_pc_8470
  %v1_8478 = load i32, i32* @r6, align 4
  %v2_8478 = add i32 %v1_8478, %v1_8470
  %v3_8478 = inttoptr i32 %v2_8478 to i8*
  %v4_8478 = load i8, i8* %v3_8478, align 1
  store i32 %v2_8478, i32* %r0.global-to-local, align 4
  %v1_8480 = add i32 %v2_8470, -1
  store i32 %v1_8480, i32* %r2.global-to-local, align 4
  %v7_8480 = icmp eq i32 %v2_8470, 1
  store i1 %v7_8480, i1* %cpsr_z.global-to-local, align 1
  %v3_8484 = add i32 %v2_8484, 4
  %v4_8484 = inttoptr i32 %v3_8484 to i8*
  store i8 %v4_8478, i8* %v4_8484, align 1
  %v0_8488 = load i32, i32* %r0.global-to-local, align 4
  %v0_848c = load i32, i32* %r2.global-to-local, align 4
  %v1_848c = add i32 %v0_848c, -1
  store i32 %v1_848c, i32* @r8, align 4
  %v1_8490 = add i32 %v0_8488, 2
  store i32 %v1_8490, i32* @r6, align 4
  %v0_8494 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_8494, label %dec_label_pc_8520, label %dec_label_pc_8498

dec_label_pc_8498:                                ; preds = %dec_label_pc_8478
  %v1_8488 = add i32 %v0_8488, 1
  %v2_8498 = inttoptr i32 %v1_8488 to i8*
  %v3_8498 = load i8, i8* %v2_8498, align 1
  %v4_8498 = zext i8 %v3_8498 to i32
  store i32 %v4_8498, i32* @r4, align 4
  %v2_849c = sub i32 %v1_848c, %v4_8498
  %tmp30 = sub i32 0, %v2_849c
  %v6_849c = and i32 %v1_848c, %tmp30
  %v7_849c = icmp slt i32 %v6_849c, 0
  %v8_849c = icmp slt i32 %v2_849c, 0
  %v9_849c = icmp eq i32 %v1_848c, %v4_8498
  store i1 %v9_849c, i1* %cpsr_z.global-to-local, align 1
  %v2_84a0 = xor i1 %v8_849c, %v7_849c
  br i1 %v2_84a0, label %dec_label_pc_8520, label %dec_label_pc_84a4

dec_label_pc_84a4:                                ; preds = %dec_label_pc_8498, %dec_label_pc_8454
  %v0_84a8 = phi i32 [ %v4_8440, %dec_label_pc_8454 ], [ %v4_8498, %dec_label_pc_8498 ]
  %v2_8484 = phi i32 [ %v1_845c, %dec_label_pc_8454 ], [ %v1_84c8, %dec_label_pc_8498 ]
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_84a8 = add nuw nsw i32 %v0_84a8, 1
  store i32 %v1_84a8, i32* %r0.global-to-local, align 4
  %v2_84ac = call i32 @function_1366c(i32 %v1_84a8, i32 1)
  store i32 %v2_84ac, i32* %r0.global-to-local, align 4
  %v0_84b0 = load i32, i32* @r6, align 4
  store i32 %v0_84b0, i32* %r1.global-to-local, align 4
  %v1_84b4 = load i32, i32* @r5, align 4
  %v2_84b4 = inttoptr i32 %v1_84b4 to i32*
  store i32 %v2_84ac, i32* %v2_84b4, align 4
  %v0_84b8 = load i32, i32* @r4, align 4
  store i32 %v0_84b8, i32* %r2.global-to-local, align 4
  %v3_84bc = call i32 @function_12214(i32 %v2_84ac, i32 %v0_84b0, i32 %v0_84b8)
  store i32 %v3_84bc, i32* %r0.global-to-local, align 4
  store i32 %v2_8484, i32* @r5, align 4
  %v0_84c4 = load i32, i32* %fp.global-to-local, align 4
  %v1_84c4 = add i32 %v0_84c4, 1
  store i32 %v1_84c4, i32* %fp.global-to-local, align 4
  %v1_84c8 = add i32 %v2_8484, 8
  store i32 %v1_84c8, i32* %ip.global-to-local, align 4
  %v1_84cc = load i32, i32* @sb, align 4
  %v9_84cc = icmp eq i32 %v1_84c4, %v1_84cc
  store i1 %v9_84cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_84cc, label %dec_label_pc_84d8, label %dec_label_pc_8470

dec_label_pc_84d8:                                ; preds = %dec_label_pc_84a4, %dec_label_pc_8408, %dec_label_pc_83f4
  %stack_var_-48.1 = phi i32 [ %v3_83f4, %dec_label_pc_83f4 ], [ %v0_8414, %dec_label_pc_8408 ], [ %v0_8414, %dec_label_pc_84a4 ]
  %stack_var_-52.2 = phi i32 [ %v3_83f4, %dec_label_pc_83f4 ], [ %v2_8410, %dec_label_pc_8408 ], [ %v2_8410, %dec_label_pc_84a4 ]
  %v0_84d8 = call i32 @function_13070()
  %v0_84dc = load i32, i32* @sl, align 4
  store i32 %stack_var_-48.1, i32* %ip.global-to-local, align 4
  %v3_84e8 = mul i32 %v0_84dc, 16777216
  %v1_84dc = mul i32 %v0_84dc, 256
  %v4_84ec = and i32 %v1_84dc, 16711680
  %v5_84ec = or i32 %v4_84ec, %v3_84e8
  store i32 %v5_84ec, i32* %r1.global-to-local, align 4
  %v1_84e4 = udiv i32 %v0_84dc, 256
  %v3_84f0 = and i32 %v1_84e4, 65280
  store i32 %v3_84f0, i32* %r2.global-to-local, align 4
  %v2_84f8 = inttoptr i32 %v0_84d8 to i32*
  store i32 0, i32* %v2_84f8, align 4
  %v0_84fc = load i32, i32* %r2.global-to-local, align 4
  %v1_84fc = load i32, i32* @sl, align 4
  %v4_84fc = udiv i32 %v1_84fc, 16777216
  %v5_84fc = or i32 %v4_84fc, %v0_84fc
  %v0_8500 = load i32, i32* %ip.global-to-local, align 4
  store i32 %stack_var_-52.2, i32* @ip, align 4
  %v1_8508 = load i32, i32* %r1.global-to-local, align 4
  %v2_8508 = or i32 %v5_84fc, %v1_8508
  store i32 %v2_8508, i32* %r0.global-to-local, align 4
  store i32 %v4_8350, i32* %r1.global-to-local, align 4
  %v0_8514 = load i32, i32* @r7, align 4
  store i32 %v0_8514, i32* %r2.global-to-local, align 4
  %v6_851c = trunc i32 %v0_8500 to i8
  %v7_851c = call i32 @function_8230(i32 %v2_8508, i32 %v4_8350, i32 %v0_8514, i32 %v2_8384, i8 %v6_851c, i32 %stack_var_-52.2)
  store i32 %v7_851c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8520

dec_label_pc_8520:                                ; preds = %dec_label_pc_8498, %dec_label_pc_8478, %dec_label_pc_8470, %dec_label_pc_8440, %dec_label_pc_842c, %dec_label_pc_8424, %dec_label_pc_83e8, %dec_label_pc_84d8
  %stack_var_-52.3 = phi i32 [ 0, %dec_label_pc_83e8 ], [ %stack_var_-52.2, %dec_label_pc_84d8 ], [ %v2_8410, %dec_label_pc_8424 ], [ %v2_8410, %dec_label_pc_842c ], [ %v2_8410, %dec_label_pc_8440 ], [ %v2_8410, %dec_label_pc_8470 ], [ %v2_8410, %dec_label_pc_8478 ], [ %v2_8410, %dec_label_pc_8498 ]
  store i32 %v2_8384, i32* %r1.global-to-local, align 4
  %v2_8524 = icmp eq i32 %v2_8384, 0
  store i1 %v2_8524, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8524, label %bb31, label %bb

bb:                                               ; preds = %dec_label_pc_8520
  store i32 %v2_8384, i32* %r0.global-to-local, align 4
  br label %bb31

bb31:                                             ; preds = %dec_label_pc_8520, %bb
  %v1_852c = xor i1 %v2_8524, true
  call void @__pseudo_cond_branch(i1 %v1_852c, i32 ptrtoint (i32* @global_var_136c4.25 to i32))
  %v2_8534 = icmp eq i32 %stack_var_-52.3, 0
  store i1 %v2_8534, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8534, label %.dec_label_pc_8344_crit_edge, label %dec_label_pc_853c

.dec_label_pc_8344_crit_edge:                     ; preds = %bb31
  %v29_8348.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8344

dec_label_pc_853c:                                ; preds = %bb31
  %v0_853c = load i32, i32* @sb, align 4
  %v2_853c = icmp eq i32 %v0_853c, 0
  store i1 %v2_853c, i1* %cpsr_z.global-to-local, align 1
  %tmp32 = icmp slt i32 %v0_853c, 1
  br i1 %tmp32, label %dec_label_pc_8564, label %dec_label_pc_8544

dec_label_pc_8544:                                ; preds = %dec_label_pc_853c
  br label %dec_label_pc_8548

dec_label_pc_8548:                                ; preds = %dec_label_pc_8548, %dec_label_pc_8544
  %v0_8554 = phi i32 [ %v1_8554, %dec_label_pc_8548 ], [ 0, %dec_label_pc_8544 ]
  store i32 %stack_var_-52.3, i32* %ip.global-to-local, align 4
  %v4_854c = mul i32 %v0_8554, 8
  %v5_854c = add i32 %v4_854c, %stack_var_-52.3
  %v6_854c = inttoptr i32 %v5_854c to i32*
  %v7_854c = load i32, i32* %v6_854c, align 4
  store i32 %v7_854c, i32* %r0.global-to-local, align 4
  %v2_8550 = icmp eq i32 %v7_854c, 0
  store i1 %v2_8550, i1* %cpsr_z.global-to-local, align 1
  %v1_8554 = add i32 %v0_8554, 1
  %v1_8558 = xor i1 %v2_8550, true
  call void @__pseudo_cond_branch(i1 %v1_8558, i32 ptrtoint (i32* @global_var_136c4.25 to i32))
  %v0_855c = load i32, i32* @sb, align 4
  %v9_855c = icmp eq i32 %v0_855c, %v1_8554
  store i1 %v9_855c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_855c, label %dec_label_pc_8564, label %dec_label_pc_8548

dec_label_pc_8564:                                ; preds = %dec_label_pc_8548, %dec_label_pc_853c
  store i32 %stack_var_-52.3, i32* @r0, align 4
  store i32 %v3_8320, i32* @r4, align 4
  store i32 %v6_8320, i32* @r5, align 4
  store i32 %v9_8320, i32* @r6, align 4
  store i32 %v12_8320, i32* @r7, align 4
  store i32 %v15_8320, i32* @r8, align 4
  store i32 %v18_8320, i32* @sb, align 4
  store i32 %v21_8320, i32* @sl, align 4
  store i32 %v27_8320, i32* @lr, align 4
  %v0_8570 = call i32 @function_136c4()
  store i32 %v0_8570, i32* %r0.global-to-local, align 4
  ret i32 %v0_8570

; uselistorder directives
  uselistorder i32 %stack_var_-52.3, { 2, 0, 1, 3 }
  uselistorder i32 %v0_84dc, { 2, 0, 1 }
  uselistorder i32 %stack_var_-52.2, { 1, 0, 2 }
  uselistorder i32 %v1_84c8, { 1, 0 }
  uselistorder i32 %v2_8484, { 2, 1, 0 }
  uselistorder i32 %v2_849c, { 1, 0 }
  uselistorder i32 %v4_8498, { 0, 2, 1, 3 }
  uselistorder i32 %v1_848c, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8488, { 1, 0 }
  uselistorder i32 %v0_8424, { 0, 2, 1 }
  uselistorder i32 %v0_8414, { 0, 2, 1, 3 }
  uselistorder i32 %v2_8410, { 0, 1, 2, 8, 7, 6, 3, 5, 9, 10, 4, 11 }
  uselistorder i32 %v3_83f4, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v1_83d0, { 1, 0 }
  uselistorder i32 %v0_83b4, { 0, 2, 1 }
  uselistorder i32 %v0_8390, { 1, 2, 0, 3 }
  uselistorder i32 %v2_8384, { 0, 3, 4, 5, 1, 2, 6 }
  uselistorder i32 %v2_8370, { 2, 1, 0 }
  uselistorder i32 %v4_835c, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v4_8350, { 1, 0, 2 }
  uselistorder i32 %v0_8330, { 5, 6, 0, 1, 2, 3, 4, 7, 8 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 6, 3, 4, 5, 7, 8, 9, 10, 11, 12 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0 }
  uselistorder i32* %r0.global-to-local, { 22, 3, 20, 4, 2, 5, 8, 12, 9, 6, 7, 10, 11, 18, 13, 15, 14, 16, 17, 21, 19, 0, 1 }
  uselistorder i32* %fp.global-to-local, { 0, 1, 2, 4, 5, 3, 6 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 9, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32 %arg2, { 1, 5, 4, 0, 2, 3, 6 }
  uselistorder label %bb31, { 1, 0 }
  uselistorder label %dec_label_pc_8520, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_8344, { 1, 0, 3, 4, 2, 5 }
}

define i32 @function_8574(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_8574:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v1_8574 = urem i32 %arg1, 256
  %v2_8578 = icmp eq i32 %v1_8574, 0
  %v3_857c = load i32, i32* @r4, align 4
  br i1 %v2_8578, label %dec_label_pc_85c4, label %dec_label_pc_8588

dec_label_pc_8588:                                ; preds = %dec_label_pc_8574
  %v0_8588 = load i32, i32* %r1.global-to-local, align 4
  %v1_8588 = add i32 %v0_8588, 4
  %v2_8588 = inttoptr i32 %v1_8588 to i8*
  %v3_8588 = load i8, i8* %v2_8588, align 1
  %v4_8588 = zext i8 %v3_8588 to i32
  %v1_858c = urem i32 %arg3, 256
  %v9_8590 = icmp eq i32 %v4_8588, %v1_858c
  br i1 %v9_8590, label %dec_label_pc_85cc, label %dec_label_pc_85b4.preheader

dec_label_pc_85b4.preheader:                      ; preds = %dec_label_pc_8588
  br label %dec_label_pc_85b4

dec_label_pc_85a4:                                ; preds = %dec_label_pc_85b4
  %v1_85a4 = add i32 %v0_85ac.in, 12
  %v2_85a4 = inttoptr i32 %v1_85a4 to i8*
  %v3_85a4 = load i8, i8* %v2_85a4, align 1
  %v4_85a4 = zext i8 %v3_85a4 to i32
  %v9_85a8 = icmp eq i32 %v1_858c, %v4_85a4
  br i1 %v9_85a8, label %dec_label_pc_85cc, label %dec_label_pc_85b4

dec_label_pc_85b4:                                ; preds = %dec_label_pc_85b4.preheader, %dec_label_pc_85a4
  %v0_85ac.in = phi i32 [ %v0_8588, %dec_label_pc_85b4.preheader ], [ %v0_85ac, %dec_label_pc_85a4 ]
  %v0_85b4 = phi i32 [ 0, %dec_label_pc_85b4.preheader ], [ %v1_85b4, %dec_label_pc_85a4 ]
  %v0_85ac = add i32 %v0_85ac.in, 8
  %v1_85b4 = add i32 %v0_85b4, 1
  %v9_85b8 = icmp eq i32 %v1_8574, %v1_85b4
  store i32 %v0_85ac, i32* %r1.global-to-local, align 4
  br i1 %v9_85b8, label %dec_label_pc_85c4, label %dec_label_pc_85a4

dec_label_pc_85c4:                                ; preds = %dec_label_pc_85b4, %dec_label_pc_85cc, %dec_label_pc_8574
  store i32 %v3_857c, i32* @r4, align 4
  ret i32 %arg4

dec_label_pc_85cc:                                ; preds = %dec_label_pc_85a4, %dec_label_pc_8588
  %v0_85cc = phi i32 [ %v0_8588, %dec_label_pc_8588 ], [ %v0_85ac, %dec_label_pc_85a4 ]
  %v1_85cc = inttoptr i32 %v0_85cc to i32*
  %v2_85cc = load i32, i32* %v1_85cc, align 4
  store i32 %v2_85cc, i32* @r0, align 4
  %v2_85d0 = icmp eq i32 %v2_85cc, 0
  br i1 %v2_85d0, label %dec_label_pc_85c4, label %dec_label_pc_85d8

dec_label_pc_85d8:                                ; preds = %dec_label_pc_85cc
  store i32 %v3_857c, i32* @r4, align 4
  %v1_85dc = call i32 @function_1318c(i32 %v2_85cc)
  ret i32 %v1_85dc

; uselistorder directives
  uselistorder i32 %v1_85b4, { 1, 0 }
  uselistorder i32 %v0_85ac, { 1, 0, 2 }
  uselistorder i32 %v0_85ac.in, { 1, 0 }
  uselistorder i32 %v1_858c, { 1, 0 }
  uselistorder i32 %v0_8588, { 1, 0, 2 }
  uselistorder i32 %v3_857c, { 1, 0 }
  uselistorder i32 %v1_8574, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_85c4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_85b4, { 1, 0 }
}

define i32 @function_85e0(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_85e0:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v1_85e0 = urem i32 %arg1, 256
  %v2_85e4 = icmp eq i32 %v1_85e0, 0
  %v3_85e8 = load i32, i32* @r4, align 4
  %v6_85e8 = load i32, i32* @lr, align 4
  br i1 %v2_85e4, label %dec_label_pc_8630, label %dec_label_pc_85f4

dec_label_pc_85f4:                                ; preds = %dec_label_pc_85e0
  %v0_85f4 = load i32, i32* %r1.global-to-local, align 4
  %v1_85f4 = add i32 %v0_85f4, 4
  %v2_85f4 = inttoptr i32 %v1_85f4 to i8*
  %v3_85f4 = load i8, i8* %v2_85f4, align 1
  %v4_85f4 = zext i8 %v3_85f4 to i32
  %v1_85f8 = urem i32 %arg3, 256
  %v9_85fc = icmp eq i32 %v4_85f4, %v1_85f8
  br i1 %v9_85fc, label %dec_label_pc_8638, label %dec_label_pc_8620.preheader

dec_label_pc_8620.preheader:                      ; preds = %dec_label_pc_85f4
  br label %dec_label_pc_8620

dec_label_pc_8610:                                ; preds = %dec_label_pc_8620
  %v1_8610 = add i32 %v0_8618.in, 12
  %v2_8610 = inttoptr i32 %v1_8610 to i8*
  %v3_8610 = load i8, i8* %v2_8610, align 1
  %v4_8610 = zext i8 %v3_8610 to i32
  %v9_8614 = icmp eq i32 %v1_85f8, %v4_8610
  br i1 %v9_8614, label %dec_label_pc_8638, label %dec_label_pc_8620

dec_label_pc_8620:                                ; preds = %dec_label_pc_8620.preheader, %dec_label_pc_8610
  %v0_8618.in = phi i32 [ %v0_85f4, %dec_label_pc_8620.preheader ], [ %v0_8618, %dec_label_pc_8610 ]
  %v0_8620 = phi i32 [ 0, %dec_label_pc_8620.preheader ], [ %v1_8620, %dec_label_pc_8610 ]
  %v0_8618 = add i32 %v0_8618.in, 8
  %v1_8620 = add i32 %v0_8620, 1
  store i32 %v1_8620, i32* @lr, align 4
  %v9_8624 = icmp eq i32 %v1_85e0, %v1_8620
  store i32 %v0_8618, i32* %r1.global-to-local, align 4
  br i1 %v9_8624, label %dec_label_pc_8630, label %dec_label_pc_8610

dec_label_pc_8630:                                ; preds = %dec_label_pc_8620, %dec_label_pc_8638, %dec_label_pc_85e0
  store i32 %v3_85e8, i32* @r4, align 4
  ret i32 %arg4

dec_label_pc_8638:                                ; preds = %dec_label_pc_8610, %dec_label_pc_85f4
  %v0_8638 = phi i32 [ %v0_85f4, %dec_label_pc_85f4 ], [ %v0_8618, %dec_label_pc_8610 ]
  %v1_8638 = inttoptr i32 %v0_8638 to i32*
  %v2_8638 = load i32, i32* %v1_8638, align 4
  %v2_863c = icmp eq i32 %v2_8638, 0
  br i1 %v2_863c, label %dec_label_pc_8630, label %dec_label_pc_8644

dec_label_pc_8644:                                ; preds = %dec_label_pc_8638
  store i32 10, i32* %r1.global-to-local, align 4
  store i32 %v3_85e8, i32* @r4, align 4
  store i32 %v6_85e8, i32* @lr, align 4
  %v2_864c = inttoptr i32 %v2_8638 to i8*
  %v3_864c = call i32 @function_122c4(i8* %v2_864c, i32 10)
  ret i32 %v3_864c

; uselistorder directives
  uselistorder i32 %v1_8620, { 1, 2, 0 }
  uselistorder i32 %v0_8618, { 1, 0, 2 }
  uselistorder i32 %v0_8618.in, { 1, 0 }
  uselistorder i32 %v1_85f8, { 1, 0 }
  uselistorder i32 %v0_85f4, { 1, 0, 2 }
  uselistorder i32 %v3_85e8, { 1, 0 }
  uselistorder i32 %v1_85e0, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_8630, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8620, { 1, 0 }
}

define i32 @function_8650(i32 %arg1) local_unnamed_addr {
dec_label_pc_8650:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_8650 = load i32, i32* @r4, align 4
  store i32 %v3_8650, i32* %stack_var_-24, align 4
  %v6_8650 = load i32, i32* @r5, align 4
  %v9_8650 = load i32, i32* @r6, align 4
  %v12_8650 = load i32, i32* @r7, align 4
  %v15_8650 = load i32, i32* @r8, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v2_865c = call i32 @function_1366c(i32 1, i32 8)
  store i32 ptrtoint (i8** @global_var_1d9dc.21 to i32), i32* @r4, align 4
  %v2_8664 = load i8, i8* bitcast (i8** @global_var_1d9dc.21 to i8*), align 4
  %v3_8664 = zext i8 %v2_8664 to i32
  store i32 ptrtoint (i32* @global_var_1d9e0.23 to i32), i32* @r6, align 4
  store i32 36768, i32* %r2.global-to-local, align 4
  store i32 %v2_865c, i32* @r5, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_8678 = mul nuw nsw i32 %v3_8664, 4
  store i32 %v3_8678, i32* %r1.global-to-local, align 4
  %v2_867c = load i32, i32* @global_var_1d9e0.23, align 4
  %v2_8680 = inttoptr i32 %v2_865c to i32*
  store i32 36768, i32* %v2_8680, align 4
  %v3_8684 = load i32, i32* @r5, align 4
  %v4_8684 = add i32 %v3_8684, 4
  %v5_8684 = inttoptr i32 %v4_8684 to i8*
  store i8 0, i8* %v5_8684, align 1
  %v0_8688 = load i32, i32* %r1.global-to-local, align 4
  %v1_8688 = add i32 %v0_8688, 4
  store i32 %v1_8688, i32* %r1.global-to-local, align 4
  %v5_868c = call i32 @function_137b4(i32 %v2_867c, i32 %v1_8688, i32 36768, i32 0)
  %v2_8690 = load i8, i8* bitcast (i8** @global_var_1d9dc.21 to i8*), align 4
  %v3_8690 = zext i8 %v2_8690 to i32
  store i32 %v3_8690, i32* %r3.global-to-local, align 4
  store i32 %v5_868c, i32* %ip.global-to-local, align 4
  %v0_8698 = load i32, i32* @r5, align 4
  %v5_8698 = mul nuw nsw i32 %v3_8690, 4
  %v6_8698 = add i32 %v5_8698, %v5_868c
  %v7_8698 = inttoptr i32 %v6_8698 to i32*
  store i32 %v0_8698, i32* %v7_8698, align 4
  store i32 ptrtoint (i8* @global_var_1d9dd.29 to i32), i32* %r2.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v3_86a8 = load i32, i32* @r4, align 4
  %v4_86a8 = inttoptr i32 %v3_86a8 to i8*
  store i8 ptrtoint (i8* @global_var_1d9dd.29 to i8), i8* %v4_86a8, align 1
  %v0_86ac = load i32, i32* %ip.global-to-local, align 4
  %v1_86ac = load i32, i32* @r6, align 4
  %v2_86ac = inttoptr i32 %v1_86ac to i32*
  store i32 %v0_86ac, i32* %v2_86ac, align 4
  %v2_86b0 = call i32 @function_1366c(i32 1, i32 8)
  %v2_86b4 = load i8, i8* bitcast (i8** @global_var_1d9dc.21 to i8*), align 4
  %v3_86b4 = zext i8 %v2_86b4 to i32
  store i32 ptrtoint (i32* @global_var_a4c4.31 to i32), i32* %r3.global-to-local, align 4
  store i32 1, i32* @r8, align 4
  store i32 %v2_86b0, i32* @r5, align 4
  %v3_86c4 = mul nuw nsw i32 %v3_86b4, 4
  store i32 %v3_86c4, i32* %r1.global-to-local, align 4
  %v2_86c8 = load i32, i32* @global_var_1d9e0.23, align 4
  %v2_86cc = inttoptr i32 %v2_86b0 to i32*
  store i32 ptrtoint (i32* @global_var_a4c4.31 to i32), i32* %v2_86cc, align 4
  %v0_86d0 = load i32, i32* @r8, align 4
  %v1_86d0 = trunc i32 %v0_86d0 to i8
  %v2_86d0 = load i32, i32* @r5, align 4
  %v3_86d0 = add i32 %v2_86d0, 4
  %v4_86d0 = inttoptr i32 %v3_86d0 to i8*
  store i8 %v1_86d0, i8* %v4_86d0, align 1
  %v0_86d4 = load i32, i32* %r1.global-to-local, align 4
  %v1_86d4 = add i32 %v0_86d4, 4
  store i32 %v1_86d4, i32* %r1.global-to-local, align 4
  %v5_86d8 = call i32 @function_137b4(i32 %v2_86c8, i32 %v1_86d4, i32 sext (i8 ptrtoint (i8* @global_var_1d9dd.29 to i8) to i32), i32 ptrtoint (i32* @global_var_a4c4.31 to i32))
  %v2_86dc = load i8, i8* bitcast (i8** @global_var_1d9dc.21 to i8*), align 4
  %v3_86dc = zext i8 %v2_86dc to i32
  store i32 %v3_86dc, i32* %r3.global-to-local, align 4
  store i32 %v5_86d8, i32* %ip.global-to-local, align 4
  %v0_86e4 = load i32, i32* @r5, align 4
  %v5_86e4 = mul nuw nsw i32 %v3_86dc, 4
  %v6_86e4 = add i32 %v5_86e4, %v5_86d8
  %v7_86e4 = inttoptr i32 %v6_86e4 to i32*
  store i32 %v0_86e4, i32* %v7_86e4, align 4
  %v0_86e8 = load i32, i32* %r3.global-to-local, align 4
  %v1_86e8 = load i32, i32* @r8, align 4
  %v2_86e8 = add i32 %v1_86e8, %v0_86e8
  store i32 %v2_86e8, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_86f4 = load i32, i32* %ip.global-to-local, align 4
  %v1_86f4 = load i32, i32* @r6, align 4
  %v2_86f4 = inttoptr i32 %v1_86f4 to i32*
  store i32 %v0_86f4, i32* %v2_86f4, align 4
  %v0_86f8 = load i32, i32* %r2.global-to-local, align 4
  %v1_86f8 = trunc i32 %v0_86f8 to i8
  %v2_86f8 = load i32, i32* @r4, align 4
  %v3_86f8 = inttoptr i32 %v2_86f8 to i8*
  store i8 %v1_86f8, i8* %v3_86f8, align 1
  %v2_86fc = call i32 @function_1366c(i32 %v1_86e8, i32 8)
  %v2_8700 = load i8, i8* bitcast (i8** @global_var_1d9dc.21 to i8*), align 4
  %v3_8700 = zext i8 %v2_8700 to i32
  store i32 ptrtoint (i32* @global_var_a988.33 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_86fc, i32* @r5, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v3_8710 = mul nuw nsw i32 %v3_8700, 4
  store i32 %v3_8710, i32* %r1.global-to-local, align 4
  %v2_8714 = load i32, i32* @global_var_1d9e0.23, align 4
  %v2_8718 = inttoptr i32 %v2_86fc to i32*
  store i32 ptrtoint (i32* @global_var_a988.33 to i32), i32* %v2_8718, align 4
  %v3_871c = load i32, i32* @r5, align 4
  %v4_871c = add i32 %v3_871c, 4
  %v5_871c = inttoptr i32 %v4_871c to i8*
  store i8 2, i8* %v5_871c, align 1
  %v0_8720 = load i32, i32* %r1.global-to-local, align 4
  %v1_8720 = add i32 %v0_8720, 4
  store i32 %v1_8720, i32* %r1.global-to-local, align 4
  %v5_8724 = call i32 @function_137b4(i32 %v2_8714, i32 %v1_8720, i32 ptrtoint (i32* @global_var_a988.33 to i32), i32 2)
  %v2_8728 = load i8, i8* bitcast (i8** @global_var_1d9dc.21 to i8*), align 4
  %v3_8728 = zext i8 %v2_8728 to i32
  store i32 %v3_8728, i32* %r3.global-to-local, align 4
  store i32 %v5_8724, i32* %ip.global-to-local, align 4
  %v1_8730 = load i32, i32* @r8, align 4
  %v2_8730 = add i32 %v1_8730, %v3_8728
  %v3_8730 = trunc i32 %v2_8730 to i8
  store i32 %v2_8730, i32* %r2.global-to-local, align 4
  %v0_8734 = load i32, i32* @r5, align 4
  %v5_8734 = mul nuw nsw i32 %v3_8728, 4
  %v6_8734 = add i32 %v5_8734, %v5_8724
  %v7_8734 = inttoptr i32 %v6_8734 to i32*
  store i32 %v0_8734, i32* %v7_8734, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_873c = load i32, i32* @r8, align 4
  %v3_8740 = load i32, i32* @r4, align 4
  %v4_8740 = inttoptr i32 %v3_8740 to i8*
  store i8 %v3_8730, i8* %v4_8740, align 1
  %v0_8744 = load i32, i32* %ip.global-to-local, align 4
  %v1_8744 = load i32, i32* @r6, align 4
  %v2_8744 = inttoptr i32 %v1_8744 to i32*
  store i32 %v0_8744, i32* %v2_8744, align 4
  %v2_8748 = call i32 @function_1366c(i32 %v0_873c, i32 8)
  %v2_874c = load i8, i8* bitcast (i8** @global_var_1d9dc.21 to i8*), align 4
  %v3_874c = zext i8 %v2_874c to i32
  store i32 ptrtoint (i32* @global_var_89d8.35 to i32), i32* %r3.global-to-local, align 4
  store i32 8, i32* @r7, align 4
  store i32 %v2_8748, i32* @r5, align 4
  %v3_875c = mul nuw nsw i32 %v3_874c, 4
  store i32 %v3_875c, i32* %r1.global-to-local, align 4
  %v2_8760 = load i32, i32* @global_var_1d9e0.23, align 4
  %v2_8764 = inttoptr i32 %v2_8748 to i32*
  store i32 ptrtoint (i32* @global_var_89d8.35 to i32), i32* %v2_8764, align 4
  %v0_8768 = load i32, i32* @r7, align 4
  %v1_8768 = trunc i32 %v0_8768 to i8
  %v2_8768 = load i32, i32* @r5, align 4
  %v3_8768 = add i32 %v2_8768, 4
  %v4_8768 = inttoptr i32 %v3_8768 to i8*
  store i8 %v1_8768, i8* %v4_8768, align 1
  %v0_876c = load i32, i32* %r1.global-to-local, align 4
  %v1_876c = add i32 %v0_876c, 4
  store i32 %v1_876c, i32* %r1.global-to-local, align 4
  %v5_8770 = call i32 @function_137b4(i32 %v2_8760, i32 %v1_876c, i32 %v2_8730, i32 ptrtoint (i32* @global_var_89d8.35 to i32))
  %v2_8774 = load i8, i8* bitcast (i8** @global_var_1d9dc.21 to i8*), align 4
  %v3_8774 = zext i8 %v2_8774 to i32
  store i32 %v3_8774, i32* %r3.global-to-local, align 4
  store i32 %v5_8770, i32* %ip.global-to-local, align 4
  %v0_877c = load i32, i32* @r5, align 4
  %v5_877c = mul nuw nsw i32 %v3_8774, 4
  %v6_877c = add i32 %v5_877c, %v5_8770
  %v7_877c = inttoptr i32 %v6_877c to i32*
  store i32 %v0_877c, i32* %v7_877c, align 4
  %v0_8780 = load i32, i32* %r3.global-to-local, align 4
  %v1_8780 = load i32, i32* @r8, align 4
  %v2_8780 = add i32 %v1_8780, %v0_8780
  store i32 %v2_8780, i32* %r2.global-to-local, align 4
  %v0_8784 = load i32, i32* @r7, align 4
  store i32 %v0_8784, i32* %r1.global-to-local, align 4
  %v0_878c = load i32, i32* %ip.global-to-local, align 4
  %v1_878c = load i32, i32* @r6, align 4
  %v2_878c = inttoptr i32 %v1_878c to i32*
  store i32 %v0_878c, i32* %v2_878c, align 4
  %v0_8790 = load i32, i32* %r2.global-to-local, align 4
  %v1_8790 = trunc i32 %v0_8790 to i8
  %v2_8790 = load i32, i32* @r4, align 4
  %v3_8790 = inttoptr i32 %v2_8790 to i8*
  store i8 %v1_8790, i8* %v3_8790, align 1
  %v2_8794 = call i32 @function_1366c(i32 %v1_8780, i32 %v0_8784)
  %v2_8798 = load i8, i8* bitcast (i8** @global_var_1d9dc.21 to i8*), align 4
  %v3_8798 = zext i8 %v2_8798 to i32
  store i32 ptrtoint (i32* @global_var_c96c.37 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_8794, i32* @r5, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v3_87a8 = mul nuw nsw i32 %v3_8798, 4
  store i32 %v3_87a8, i32* %r1.global-to-local, align 4
  %v2_87ac = load i32, i32* @global_var_1d9e0.23, align 4
  %v2_87b0 = inttoptr i32 %v2_8794 to i32*
  store i32 ptrtoint (i32* @global_var_c96c.37 to i32), i32* %v2_87b0, align 4
  %v3_87b4 = load i32, i32* @r5, align 4
  %v4_87b4 = add i32 %v3_87b4, 4
  %v5_87b4 = inttoptr i32 %v4_87b4 to i8*
  store i8 3, i8* %v5_87b4, align 1
  %v0_87b8 = load i32, i32* %r1.global-to-local, align 4
  %v1_87b8 = add i32 %v0_87b8, 4
  store i32 %v1_87b8, i32* %r1.global-to-local, align 4
  %v5_87bc = call i32 @function_137b4(i32 %v2_87ac, i32 %v1_87b8, i32 ptrtoint (i32* @global_var_c96c.37 to i32), i32 3)
  %v2_87c0 = load i8, i8* bitcast (i8** @global_var_1d9dc.21 to i8*), align 4
  %v3_87c0 = zext i8 %v2_87c0 to i32
  store i32 %v3_87c0, i32* %r3.global-to-local, align 4
  store i32 %v5_87bc, i32* %ip.global-to-local, align 4
  %v0_87c8 = load i32, i32* @r5, align 4
  %v5_87c8 = mul nuw nsw i32 %v3_87c0, 4
  %v6_87c8 = add i32 %v5_87c8, %v5_87bc
  %v7_87c8 = inttoptr i32 %v6_87c8 to i32*
  store i32 %v0_87c8, i32* %v7_87c8, align 4
  %v0_87cc = load i32, i32* %r3.global-to-local, align 4
  %v1_87cc = load i32, i32* @r8, align 4
  %v2_87cc = add i32 %v1_87cc, %v0_87cc
  store i32 %v2_87cc, i32* %r2.global-to-local, align 4
  %v0_87d0 = load i32, i32* @r7, align 4
  store i32 %v0_87d0, i32* %r1.global-to-local, align 4
  %v0_87d8 = load i32, i32* %ip.global-to-local, align 4
  %v1_87d8 = load i32, i32* @r6, align 4
  %v2_87d8 = inttoptr i32 %v1_87d8 to i32*
  store i32 %v0_87d8, i32* %v2_87d8, align 4
  %v0_87dc = load i32, i32* %r2.global-to-local, align 4
  %v1_87dc = trunc i32 %v0_87dc to i8
  %v2_87dc = load i32, i32* @r4, align 4
  %v3_87dc = inttoptr i32 %v2_87dc to i8*
  store i8 %v1_87dc, i8* %v3_87dc, align 1
  %v2_87e0 = call i32 @function_1366c(i32 %v1_87cc, i32 %v0_87d0)
  %v2_87e4 = load i8, i8* bitcast (i8** @global_var_1d9dc.21 to i8*), align 4
  %v3_87e4 = zext i8 %v2_87e4 to i32
  store i32 ptrtoint (i32* @global_var_c1f8.39 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_87e0, i32* @r5, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v3_87f4 = mul nuw nsw i32 %v3_87e4, 4
  store i32 %v3_87f4, i32* %r1.global-to-local, align 4
  %v2_87f8 = load i32, i32* @global_var_1d9e0.23, align 4
  %v2_87fc = inttoptr i32 %v2_87e0 to i32*
  store i32 ptrtoint (i32* @global_var_c1f8.39 to i32), i32* %v2_87fc, align 4
  %v3_8800 = load i32, i32* @r5, align 4
  %v4_8800 = add i32 %v3_8800, 4
  %v5_8800 = inttoptr i32 %v4_8800 to i8*
  store i8 4, i8* %v5_8800, align 1
  %v0_8804 = load i32, i32* %r1.global-to-local, align 4
  %v1_8804 = add i32 %v0_8804, 4
  store i32 %v1_8804, i32* %r1.global-to-local, align 4
  %v5_8808 = call i32 @function_137b4(i32 %v2_87f8, i32 %v1_8804, i32 ptrtoint (i32* @global_var_c1f8.39 to i32), i32 4)
  %v2_880c = load i8, i8* bitcast (i8** @global_var_1d9dc.21 to i8*), align 4
  %v3_880c = zext i8 %v2_880c to i32
  store i32 %v3_880c, i32* %r3.global-to-local, align 4
  store i32 %v5_8808, i32* %ip.global-to-local, align 4
  %v0_8814 = load i32, i32* @r5, align 4
  %v5_8814 = mul nuw nsw i32 %v3_880c, 4
  %v6_8814 = add i32 %v5_8814, %v5_8808
  %v7_8814 = inttoptr i32 %v6_8814 to i32*
  store i32 %v0_8814, i32* %v7_8814, align 4
  %v0_8818 = load i32, i32* %r3.global-to-local, align 4
  %v1_8818 = load i32, i32* @r8, align 4
  %v2_8818 = add i32 %v1_8818, %v0_8818
  store i32 %v2_8818, i32* %r2.global-to-local, align 4
  %v0_881c = load i32, i32* @r7, align 4
  store i32 %v0_881c, i32* %r1.global-to-local, align 4
  %v0_8824 = load i32, i32* %ip.global-to-local, align 4
  %v1_8824 = load i32, i32* @r6, align 4
  %v2_8824 = inttoptr i32 %v1_8824 to i32*
  store i32 %v0_8824, i32* %v2_8824, align 4
  %v0_8828 = load i32, i32* %r2.global-to-local, align 4
  %v1_8828 = trunc i32 %v0_8828 to i8
  %v2_8828 = load i32, i32* @r4, align 4
  %v3_8828 = inttoptr i32 %v2_8828 to i8*
  store i8 %v1_8828, i8* %v3_8828, align 1
  %v2_882c = call i32 @function_1366c(i32 %v1_8818, i32 %v0_881c)
  %v2_8830 = load i8, i8* bitcast (i8** @global_var_1d9dc.21 to i8*), align 4
  %v3_8830 = zext i8 %v2_8830 to i32
  store i32 ptrtoint (i32* @global_var_b998.41 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_882c, i32* @r5, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v3_8840 = mul nuw nsw i32 %v3_8830, 4
  store i32 %v3_8840, i32* %r1.global-to-local, align 4
  %v2_8844 = load i32, i32* @global_var_1d9e0.23, align 4
  %v2_8848 = inttoptr i32 %v2_882c to i32*
  store i32 ptrtoint (i32* @global_var_b998.41 to i32), i32* %v2_8848, align 4
  %v3_884c = load i32, i32* @r5, align 4
  %v4_884c = add i32 %v3_884c, 4
  %v5_884c = inttoptr i32 %v4_884c to i8*
  store i8 5, i8* %v5_884c, align 1
  %v0_8850 = load i32, i32* %r1.global-to-local, align 4
  %v1_8850 = add i32 %v0_8850, 4
  store i32 %v1_8850, i32* %r1.global-to-local, align 4
  %v5_8854 = call i32 @function_137b4(i32 %v2_8844, i32 %v1_8850, i32 ptrtoint (i32* @global_var_b998.41 to i32), i32 5)
  %v2_8858 = load i8, i8* bitcast (i8** @global_var_1d9dc.21 to i8*), align 4
  %v3_8858 = zext i8 %v2_8858 to i32
  store i32 %v3_8858, i32* %r3.global-to-local, align 4
  store i32 %v5_8854, i32* %ip.global-to-local, align 4
  %v0_8860 = load i32, i32* @r5, align 4
  %v5_8860 = mul nuw nsw i32 %v3_8858, 4
  %v6_8860 = add i32 %v5_8860, %v5_8854
  %v7_8860 = inttoptr i32 %v6_8860 to i32*
  store i32 %v0_8860, i32* %v7_8860, align 4
  %v0_8864 = load i32, i32* %r3.global-to-local, align 4
  %v1_8864 = load i32, i32* @r8, align 4
  %v2_8864 = add i32 %v1_8864, %v0_8864
  store i32 %v2_8864, i32* %r2.global-to-local, align 4
  %v0_8868 = load i32, i32* @r7, align 4
  store i32 %v0_8868, i32* %r1.global-to-local, align 4
  %v0_8870 = load i32, i32* %ip.global-to-local, align 4
  %v1_8870 = load i32, i32* @r6, align 4
  %v2_8870 = inttoptr i32 %v1_8870 to i32*
  store i32 %v0_8870, i32* %v2_8870, align 4
  %v0_8874 = load i32, i32* %r2.global-to-local, align 4
  %v1_8874 = trunc i32 %v0_8874 to i8
  %v2_8874 = load i32, i32* @r4, align 4
  %v3_8874 = inttoptr i32 %v2_8874 to i8*
  store i8 %v1_8874, i8* %v3_8874, align 1
  %v2_8878 = call i32 @function_1366c(i32 %v1_8864, i32 %v0_8868)
  %v2_887c = load i8, i8* bitcast (i8** @global_var_1d9dc.21 to i8*), align 4
  %v3_887c = zext i8 %v2_887c to i32
  store i32 45368, i32* %r2.global-to-local, align 4
  store i32 %v2_8878, i32* @r5, align 4
  store i32 10, i32* %r3.global-to-local, align 4
  %v3_888c = mul nuw nsw i32 %v3_887c, 4
  store i32 %v3_888c, i32* %r1.global-to-local, align 4
  %v2_8890 = load i32, i32* @global_var_1d9e0.23, align 4
  %v2_8894 = inttoptr i32 %v2_8878 to i32*
  store i32 45368, i32* %v2_8894, align 4
  %v3_8898 = load i32, i32* @r5, align 4
  %v4_8898 = add i32 %v3_8898, 4
  %v5_8898 = inttoptr i32 %v4_8898 to i8*
  store i8 10, i8* %v5_8898, align 1
  %v0_889c = load i32, i32* %r1.global-to-local, align 4
  %v1_889c = add i32 %v0_889c, 4
  store i32 %v1_889c, i32* %r1.global-to-local, align 4
  %v5_88a0 = call i32 @function_137b4(i32 %v2_8890, i32 %v1_889c, i32 45368, i32 10)
  %v2_88a4 = load i8, i8* bitcast (i8** @global_var_1d9dc.21 to i8*), align 4
  %v3_88a4 = zext i8 %v2_88a4 to i32
  store i32 %v3_88a4, i32* %r3.global-to-local, align 4
  store i32 %v5_88a0, i32* %ip.global-to-local, align 4
  %v0_88ac = load i32, i32* @r5, align 4
  %v5_88ac = mul nuw nsw i32 %v3_88a4, 4
  %v6_88ac = add i32 %v5_88ac, %v5_88a0
  %v7_88ac = inttoptr i32 %v6_88ac to i32*
  store i32 %v0_88ac, i32* %v7_88ac, align 4
  %v0_88b0 = load i32, i32* %r3.global-to-local, align 4
  %v1_88b0 = load i32, i32* @r8, align 4
  %v2_88b0 = add i32 %v1_88b0, %v0_88b0
  store i32 %v2_88b0, i32* %r2.global-to-local, align 4
  %v0_88b4 = load i32, i32* @r7, align 4
  store i32 %v0_88b4, i32* %r1.global-to-local, align 4
  %v0_88bc = load i32, i32* %ip.global-to-local, align 4
  %v1_88bc = load i32, i32* @r6, align 4
  %v2_88bc = inttoptr i32 %v1_88bc to i32*
  store i32 %v0_88bc, i32* %v2_88bc, align 4
  %v0_88c0 = load i32, i32* %r2.global-to-local, align 4
  %v1_88c0 = trunc i32 %v0_88c0 to i8
  %v2_88c0 = load i32, i32* @r4, align 4
  %v3_88c0 = inttoptr i32 %v2_88c0 to i8*
  store i8 %v1_88c0, i8* %v3_88c0, align 1
  %v2_88c4 = call i32 @function_1366c(i32 %v1_88b0, i32 %v0_88b4)
  %v2_88c8 = load i8, i8* bitcast (i8** @global_var_1d9dc.21 to i8*), align 4
  %v3_88c8 = zext i8 %v2_88c8 to i32
  store i32 ptrtoint (i32* @global_var_9da8.44 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_88c4, i32* @r5, align 4
  store i32 6, i32* %r3.global-to-local, align 4
  %v3_88d8 = mul nuw nsw i32 %v3_88c8, 4
  store i32 %v3_88d8, i32* %r1.global-to-local, align 4
  %v2_88dc = load i32, i32* @global_var_1d9e0.23, align 4
  %v2_88e0 = inttoptr i32 %v2_88c4 to i32*
  store i32 ptrtoint (i32* @global_var_9da8.44 to i32), i32* %v2_88e0, align 4
  %v3_88e4 = load i32, i32* @r5, align 4
  %v4_88e4 = add i32 %v3_88e4, 4
  %v5_88e4 = inttoptr i32 %v4_88e4 to i8*
  store i8 6, i8* %v5_88e4, align 1
  %v0_88e8 = load i32, i32* %r1.global-to-local, align 4
  %v1_88e8 = add i32 %v0_88e8, 4
  store i32 %v1_88e8, i32* %r1.global-to-local, align 4
  %v5_88ec = call i32 @function_137b4(i32 %v2_88dc, i32 %v1_88e8, i32 ptrtoint (i32* @global_var_9da8.44 to i32), i32 6)
  %v2_88f0 = load i8, i8* bitcast (i8** @global_var_1d9dc.21 to i8*), align 4
  %v3_88f0 = zext i8 %v2_88f0 to i32
  store i32 %v3_88f0, i32* %r3.global-to-local, align 4
  store i32 %v5_88ec, i32* %ip.global-to-local, align 4
  %v0_88f8 = load i32, i32* @r5, align 4
  %v5_88f8 = mul nuw nsw i32 %v3_88f0, 4
  %v6_88f8 = add i32 %v5_88f8, %v5_88ec
  %v7_88f8 = inttoptr i32 %v6_88f8 to i32*
  store i32 %v0_88f8, i32* %v7_88f8, align 4
  %v0_88fc = load i32, i32* %r3.global-to-local, align 4
  %v1_88fc = load i32, i32* @r8, align 4
  %v2_88fc = add i32 %v1_88fc, %v0_88fc
  store i32 %v2_88fc, i32* %r2.global-to-local, align 4
  %v0_8900 = load i32, i32* @r7, align 4
  store i32 %v0_8900, i32* %r1.global-to-local, align 4
  %v0_8908 = load i32, i32* %ip.global-to-local, align 4
  %v1_8908 = load i32, i32* @r6, align 4
  %v2_8908 = inttoptr i32 %v1_8908 to i32*
  store i32 %v0_8908, i32* %v2_8908, align 4
  %v0_890c = load i32, i32* %r2.global-to-local, align 4
  %v1_890c = trunc i32 %v0_890c to i8
  %v2_890c = load i32, i32* @r4, align 4
  %v3_890c = inttoptr i32 %v2_890c to i8*
  store i8 %v1_890c, i8* %v3_890c, align 1
  %v2_8910 = call i32 @function_1366c(i32 %v1_88fc, i32 %v0_8900)
  %v2_8914 = load i8, i8* bitcast (i8** @global_var_1d9dc.21 to i8*), align 4
  %v3_8914 = zext i8 %v2_8914 to i32
  store i32 ptrtoint (i32* @global_var_962c.46 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_8910, i32* @r5, align 4
  store i32 7, i32* %r3.global-to-local, align 4
  %v3_8924 = mul nuw nsw i32 %v3_8914, 4
  store i32 %v3_8924, i32* %r1.global-to-local, align 4
  %v2_8928 = load i32, i32* @global_var_1d9e0.23, align 4
  %v2_892c = inttoptr i32 %v2_8910 to i32*
  store i32 ptrtoint (i32* @global_var_962c.46 to i32), i32* %v2_892c, align 4
  %v3_8930 = load i32, i32* @r5, align 4
  %v4_8930 = add i32 %v3_8930, 4
  %v5_8930 = inttoptr i32 %v4_8930 to i8*
  store i8 7, i8* %v5_8930, align 1
  %v0_8934 = load i32, i32* %r1.global-to-local, align 4
  %v1_8934 = add i32 %v0_8934, 4
  store i32 %v1_8934, i32* %r1.global-to-local, align 4
  %v5_8938 = call i32 @function_137b4(i32 %v2_8928, i32 %v1_8934, i32 ptrtoint (i32* @global_var_962c.46 to i32), i32 7)
  %v2_893c = load i8, i8* bitcast (i8** @global_var_1d9dc.21 to i8*), align 4
  %v3_893c = zext i8 %v2_893c to i32
  store i32 %v3_893c, i32* %r3.global-to-local, align 4
  store i32 %v5_8938, i32* %ip.global-to-local, align 4
  %v0_8944 = load i32, i32* @r5, align 4
  %v5_8944 = mul nuw nsw i32 %v3_893c, 4
  %v6_8944 = add i32 %v5_8944, %v5_8938
  %v7_8944 = inttoptr i32 %v6_8944 to i32*
  store i32 %v0_8944, i32* %v7_8944, align 4
  %v0_8948 = load i32, i32* %r3.global-to-local, align 4
  %v1_8948 = load i32, i32* @r8, align 4
  %v2_8948 = add i32 %v1_8948, %v0_8948
  store i32 %v2_8948, i32* %r2.global-to-local, align 4
  %v0_894c = load i32, i32* @r7, align 4
  store i32 %v0_894c, i32* %r1.global-to-local, align 4
  %v1_8954 = trunc i32 %v2_8948 to i8
  %v2_8954 = load i32, i32* @r4, align 4
  %v3_8954 = inttoptr i32 %v2_8954 to i8*
  store i8 %v1_8954, i8* %v3_8954, align 1
  %v0_8958 = load i32, i32* %ip.global-to-local, align 4
  %v1_8958 = load i32, i32* @r6, align 4
  %v2_8958 = inttoptr i32 %v1_8958 to i32*
  store i32 %v0_8958, i32* %v2_8958, align 4
  %v2_895c = call i32 @function_1366c(i32 %v1_8948, i32 %v0_894c)
  %v2_8960 = load i8, i8* bitcast (i8** @global_var_1d9dc.21 to i8*), align 4
  %v3_8960 = zext i8 %v2_8960 to i32
  store i32 36028, i32* %r2.global-to-local, align 4
  store i32 %v2_895c, i32* @r5, align 4
  store i32 9, i32* %r3.global-to-local, align 4
  %v3_8970 = mul nuw nsw i32 %v3_8960, 4
  store i32 %v3_8970, i32* %r1.global-to-local, align 4
  %v2_8974 = load i32, i32* @global_var_1d9e0.23, align 4
  %v2_8978 = inttoptr i32 %v2_895c to i32*
  store i32 36028, i32* %v2_8978, align 4
  %v3_897c = load i32, i32* @r5, align 4
  %v4_897c = add i32 %v3_897c, 4
  %v5_897c = inttoptr i32 %v4_897c to i8*
  store i8 9, i8* %v5_897c, align 1
  %v0_8980 = load i32, i32* %r1.global-to-local, align 4
  %v1_8980 = add i32 %v0_8980, 4
  store i32 %v1_8980, i32* %r1.global-to-local, align 4
  %v5_8984 = call i32 @function_137b4(i32 %v2_8974, i32 %v1_8980, i32 36028, i32 9)
  %v2_8988 = load i8, i8* bitcast (i8** @global_var_1d9dc.21 to i8*), align 4
  %v3_8988 = zext i8 %v2_8988 to i32
  store i32 %v3_8988, i32* %r3.global-to-local, align 4
  %v1_898c = load i32, i32* @r6, align 4
  %v2_898c = inttoptr i32 %v1_898c to i32*
  store i32 %v5_8984, i32* %v2_898c, align 4
  %v0_8990 = load i32, i32* @r5, align 4
  %v2_8990 = load i32, i32* %r3.global-to-local, align 4
  %v5_8990 = mul i32 %v2_8990, 4
  %v6_8990 = add i32 %v5_8990, %v5_8984
  %v7_8990 = inttoptr i32 %v6_8990 to i32*
  store i32 %v0_8990, i32* %v7_8990, align 4
  %v0_8994 = load i32, i32* %r3.global-to-local, align 4
  %v1_8994 = load i32, i32* @r8, align 4
  %v2_8994 = add i32 %v1_8994, %v0_8994
  store i32 %v2_8994, i32* %r2.global-to-local, align 4
  %v1_899c = trunc i32 %v2_8994 to i8
  %v2_899c = load i32, i32* @r4, align 4
  %v3_899c = inttoptr i32 %v2_899c to i8*
  store i8 %v1_899c, i8* %v3_899c, align 1
  %v2_89a0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_89a0, i32* @r4, align 4
  store i32 %v6_8650, i32* @r5, align 4
  store i32 %v9_8650, i32* @r6, align 4
  store i32 %v12_8650, i32* @r7, align 4
  store i32 %v15_8650, i32* @r8, align 4
  ret i32 %v1_8994

; uselistorder directives
  uselistorder i32 %v1_8994, { 1, 0 }
  uselistorder i32 %v1_8948, { 1, 0 }
  uselistorder i32 %v1_88fc, { 1, 0 }
  uselistorder i32 %v1_88b0, { 1, 0 }
  uselistorder i32 %v1_8864, { 1, 0 }
  uselistorder i32 %v1_8818, { 1, 0 }
  uselistorder i32 %v1_87cc, { 1, 0 }
  uselistorder i32 %v1_8780, { 1, 0 }
  uselistorder i32 %v2_8730, { 0, 2, 1 }
  uselistorder i32 %v3_8728, { 1, 0, 2 }
  uselistorder i32 %v1_86e8, { 1, 0 }
  uselistorder i32* @global_var_1d9e0.23, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11 }
  uselistorder i8* bitcast (i8** @global_var_1d9dc.21 to i8*), { 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_89d8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_89d8:
  %fp.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-80 = alloca i8, align 1
  %v24_89d8 = load i32, i32* @fp, align 4
  %v1_89dc = urem i32 %arg1, 256
  store i32 %v1_89dc, i32* @r7, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r6, align 4
  %v1_89f4 = urem i32 %arg3, 256
  store i32 %v1_89f4, i32* @r4, align 4
  %v2_89f8 = call i32 @function_1366c(i32 %v1_89dc, i32 4)
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %v2_89f8, i32* @sl, align 4
  %v0_8a04 = load i32, i32* @r7, align 4
  %v2_8a08 = call i32 @function_1366c(i32 %v0_8a04, i32 4)
  store i32 65535, i32* @r5, align 4
  %v0_8a14 = load i32, i32* @r6, align 4
  store i32 %v0_8a14, i32* %r1.global-to-local, align 4
  store i32 %v2_8a08, i32* @sb, align 4
  %v0_8a24 = load i32, i32* @r4, align 4
  %v4_8a28 = inttoptr i32 %v0_8a14 to i32*
  %v5_8a28 = call i32 @function_85e0(i32 %v0_8a24, i32* %v4_8a28, i32 7, i32 65535)
  %v3_8a30 = urem i32 %v5_8a28, 65536
  %v0_8a34 = load i32, i32* @r6, align 4
  store i32 %v0_8a34, i32* %r1.global-to-local, align 4
  %v0_8a3c = load i32, i32* @r5, align 4
  %v0_8a40 = load i32, i32* @r4, align 4
  %v5_8a48 = inttoptr i32 %v0_8a34 to i32*
  %v6_8a48 = call i32 @function_85e0(i32 %v0_8a40, i32* %v5_8a48, i32 6, i32 %v0_8a3c)
  %v0_8a4c = load i32, i32* @r6, align 4
  store i32 %v0_8a4c, i32* %r1.global-to-local, align 4
  %v3_8a50 = mul i32 %v6_8a48, 65536
  store i32 %v3_8a50, i32* %fp.global-to-local, align 4
  %v0_8a5c = load i32, i32* @r4, align 4
  %v4_8a60 = inttoptr i32 %v0_8a4c to i32*
  %v5_8a60 = call i32 @function_85e0(i32 %v0_8a5c, i32* %v4_8a60, i32 0, i32 512)
  %v0_8a6c = load i32, i32* @r6, align 4
  store i32 %v0_8a6c, i32* %r1.global-to-local, align 4
  %v0_8a70 = load i32, i32* @r4, align 4
  %v3_8a78 = urem i32 %v5_8a60, 65536
  store i32 %v3_8a78, i32* @r6, align 4
  %v4_8a7c = inttoptr i32 %v0_8a6c to i32*
  %v5_8a7c = call i32 @function_85e0(i32 %v0_8a70, i32* %v4_8a7c, i32 1, i32 1)
  %v0_8a80 = load i32, i32* %fp.global-to-local, align 4
  %v3_8a80 = udiv i32 %v0_8a80, 65536
  %v1_8a88 = load i32, i32* @r5, align 4
  %v9_8a88 = icmp eq i32 %v3_8a80, %v1_8a88
  store i32 0, i32* %stack_var_-52, align 4
  br i1 %v9_8a88, label %dec_label_pc_8ab0, label %bb

bb:                                               ; preds = %dec_label_pc_89d8
  %v2_8a9c = mul nuw nsw i32 %v3_8a80, 256
  %v4_8aa0 = and i32 %v2_8a9c, 65280
  %v1_8aa4 = urem i32 %v5_8a7c, 256
  store i32 %v1_8aa4, i32* @r8, align 4
  %v5_8aa8 = udiv i32 %v0_8a80, 16777216
  %v6_8aa8 = or i32 %v4_8aa0, %v5_8aa8
  br label %dec_label_pc_8abc

dec_label_pc_8ab0:                                ; preds = %dec_label_pc_89d8
  %v1_8aa47 = urem i32 %v5_8a7c, 256
  store i32 %v1_8aa47, i32* @r8, align 4
  %v0_8ab0 = call i32 @function_e7cc()
  %v3_8ab8 = urem i32 %v0_8ab0, 65536
  br label %dec_label_pc_8abc

dec_label_pc_8abc:                                ; preds = %bb, %dec_label_pc_8ab0
  %storemerge17 = phi i32 [ %v6_8aa8, %bb ], [ %v3_8ab8, %dec_label_pc_8ab0 ]
  store i32 %storemerge17, i32* %fp.global-to-local, align 4
  %v0_8abc = load i32, i32* @r7, align 4
  %tmp41 = icmp slt i32 %v0_8abc, 1
  br i1 %tmp41, label %dec_label_pc_8c64.preheader, label %dec_label_pc_8ac4

dec_label_pc_8c64.preheader:                      ; preds = %dec_label_pc_8bc0, %dec_label_pc_8abc
  %storemerge3.in12.ph = phi i32 [ %v0_8abc, %dec_label_pc_8abc ], [ %v1_8b18, %dec_label_pc_8bc0 ]
  %tmp424750 = icmp slt i32 %storemerge3.in12.ph, 1
  br i1 %tmp424750, label %dec_label_pc_8c2c, label %dec_label_pc_8c30.lr.ph

dec_label_pc_8ac4:                                ; preds = %dec_label_pc_8abc
  store i32 %v3_8a30, i32* %r1.global-to-local, align 4
  %v3_8ac8 = udiv i32 %v5_8a28, 256
  %v5_8ad4 = trunc i32 %v3_8ac8 to i8
  store i32 %arg2, i32* @r5, align 4
  %v3_8aec = udiv i32 %v5_8a28, 65536
  store i32 %v3_8aec, i32* @r4, align 4
  %v4_8afc = trunc i32 %v3_8aec to i8
  store i8 %v4_8afc, i8* %stack_var_-80, align 1
  %v3_8c0c = icmp eq i32 %v3_8a30, 65535
  %v2_8b34 = ptrtoint i32* %stack_var_-52 to i32
  %v3_8b64 = bitcast i32* %stack_var_-52 to %sockaddr*
  br label %dec_label_pc_8bf0

dec_label_pc_8b04:                                ; preds = %dec_label_pc_8bf0
  %v2_8b04 = load i8, i8* %stack_var_-80, align 1
  %v3_8b04 = sext i8 %v2_8b04 to i32
  store i32 %v3_8b04, i32* %r1.global-to-local, align 4
  store i32 %v3_8ac8, i32* @r4, align 4
  %v2_8b08 = load i32, i32* @r5, align 4
  %v3_8b08 = add i32 %v2_8b08, 2
  %v4_8b08 = inttoptr i32 %v3_8b08 to i8*
  store i8 %v5_8ad4, i8* %v4_8b08, align 1
  %v0_8b0c = load i32, i32* %r1.global-to-local, align 4
  %v1_8b0c = trunc i32 %v0_8b0c to i8
  %v2_8b0c = load i32, i32* @r5, align 4
  %v3_8b0c = add i32 %v2_8b0c, 3
  %v4_8b0c = inttoptr i32 %v3_8b0c to i8*
  store i8 %v1_8b0c, i8* %v4_8b0c, align 1
  br label %dec_label_pc_8b10

dec_label_pc_8b10:                                ; preds = %dec_label_pc_8c18, %dec_label_pc_8b04
  %v1_8b18 = add i32 %stack_var_-56.0, 1
  store i32 2, i32* %r1.global-to-local, align 4
  %v3_8b28 = call i32 @function_13380(i32 2, i32 2, i32 17)
  store i32 %stack_var_-60.0, i32* @r4, align 4
  %v7_8b30 = icmp eq i32 %v3_8b28, -1
  store i32 %v2_8b34, i32* %r1.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  %v2_8b44 = load i32, i32* @sb, align 4
  %v3_8b44 = add i32 %v2_8b44, %stack_var_-60.0
  %v4_8b44 = inttoptr i32 %v3_8b44 to i32*
  store i32 %v3_8b28, i32* %v4_8b44, align 4
  br i1 %v7_8b30, label %dec_label_pc_8c70, label %dec_label_pc_8b4c

dec_label_pc_8b4c:                                ; preds = %dec_label_pc_8b10
  store i32 2, i32* %stack_var_-52, align 4
  %v4_8b64 = call i32 @function_131b0(i32 %v3_8b28, %sockaddr* %v3_8b64, i32 16)
  %v0_8b68 = load i32, i32* @r5, align 4
  %v1_8b68 = add i32 %v0_8b68, 20
  %v2_8b68 = inttoptr i32 %v1_8b68 to i8*
  %v3_8b68 = load i8, i8* %v2_8b68, align 1
  %tmp = icmp ugt i8 %v3_8b68, 31
  br i1 %tmp, label %dec_label_pc_8bc0, label %dec_label_pc_8b74

dec_label_pc_8b74:                                ; preds = %dec_label_pc_8b4c
  %v1_8b74 = add i32 %v0_8b68, 16
  %v2_8b74 = inttoptr i32 %v1_8b74 to i32*
  %v3_8b74 = load i32, i32* %v2_8b74, align 4
  store i32 %v3_8b74, i32* @r4, align 4
  %v0_8b78 = call i32 @function_e7cc()
  %v0_8b7c = load i32, i32* @r4, align 4
  %v1_8b80 = and i32 %v0_8b7c, 65280
  %v3_8b88 = mul i32 %v0_8b7c, 16777216
  %v4_8b8c = mul nuw nsw i32 %v1_8b80, 256
  %v5_8b8c = or i32 %v4_8b8c, %v3_8b88
  store i32 %v5_8b8c, i32* %r1.global-to-local, align 4
  %v0_8b94 = load i32, i32* @r5, align 4
  %v1_8b94 = add i32 %v0_8b94, 20
  %v2_8b94 = inttoptr i32 %v1_8b94 to i8*
  %v3_8b94 = load i8, i8* %v2_8b94, align 1
  %v4_8b94 = zext i8 %v3_8b94 to i32
  %v2_8b98 = call i32 @llvm.bswap.i32(i32 %v0_8b7c)
  %v7_8b9c = lshr i32 %v0_8b78, %v4_8b94
  %v8_8b9c = add i32 %v7_8b9c, %v2_8b98
  %v3_8ba8 = mul i32 %v8_8b9c, 16777216
  %v1_8bac = and i32 %v8_8b9c, 65280
  %v4_8bb0 = mul nuw nsw i32 %v1_8bac, 256
  %v5_8bb0 = or i32 %v4_8bb0, %v3_8ba8
  store i32 %v5_8bb0, i32* %r1.global-to-local, align 4
  %v2_8bb8 = call i32 @llvm.bswap.i32(i32 %v8_8b9c)
  %v2_8bbc = add i32 %v0_8b94, 4
  %v3_8bbc = inttoptr i32 %v2_8bbc to i32*
  store i32 %v2_8bb8, i32* %v3_8bbc, align 4
  %v0_8bcc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_8bc0

dec_label_pc_8bc0:                                ; preds = %dec_label_pc_8b4c, %dec_label_pc_8b74
  %v0_8bcc = phi i32 [ %v0_8b68, %dec_label_pc_8b4c ], [ %v0_8bcc.pre, %dec_label_pc_8b74 ]
  store i32 %stack_var_-60.0, i32* %r1.global-to-local, align 4
  %v1_8bc8 = load i32, i32* @sb, align 4
  %v2_8bc8 = add i32 %v1_8bc8, %stack_var_-60.0
  %v3_8bc8 = inttoptr i32 %v2_8bc8 to i32*
  %v4_8bc8 = load i32, i32* %v3_8bc8, align 4
  store i32 %v0_8bcc, i32* %r1.global-to-local, align 4
  %v3_8bd0 = inttoptr i32 %v0_8bcc to %sockaddr*
  %v4_8bd0 = call i32 @function_131dc(i32 %v4_8bc8, %sockaddr* %v3_8bd0, i32 16)
  %v1_8bdc = add i32 %stack_var_-60.0, 4
  %v1_8be0 = load i32, i32* @r7, align 4
  %v9_8be0 = icmp eq i32 %v1_8b18, %v1_8be0
  %v0_8be8 = load i32, i32* @r5, align 4
  %v1_8be8 = add i32 %v0_8be8, 24
  store i32 %v1_8be8, i32* @r5, align 4
  br i1 %v9_8be0, label %dec_label_pc_8c64.preheader, label %dec_label_pc_8bf0

dec_label_pc_8bf0:                                ; preds = %dec_label_pc_8bc0, %dec_label_pc_8ac4
  %stack_var_-60.0 = phi i32 [ 0, %dec_label_pc_8ac4 ], [ %v1_8bdc, %dec_label_pc_8bc0 ]
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_8ac4 ], [ %v1_8b18, %dec_label_pc_8bc0 ]
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_8bfc = call i32 @function_1366c(i32 65535, i32 1)
  store i32 %v3_8a30, i32* %r1.global-to-local, align 4
  %v2_8c10 = load i32, i32* @sl, align 4
  %v3_8c10 = add i32 %v2_8c10, %stack_var_-60.0
  %v4_8c10 = inttoptr i32 %v3_8c10 to i32*
  store i32 %v2_8bfc, i32* %v4_8c10, align 4
  br i1 %v3_8c0c, label %dec_label_pc_8c18, label %dec_label_pc_8b04

dec_label_pc_8c18:                                ; preds = %dec_label_pc_8bf0
  %v0_8c18 = call i32 @function_e7cc()
  %v1_8c18 = trunc i32 %v0_8c18 to i8
  %v4_8c1c = sdiv i32 %v0_8c18, 256
  %v1_8c20 = trunc i32 %v4_8c1c to i8
  %v2_8c20 = load i32, i32* @r5, align 4
  %v3_8c20 = add i32 %v2_8c20, 3
  %v4_8c20 = inttoptr i32 %v3_8c20 to i8*
  store i8 %v1_8c20, i8* %v4_8c20, align 1
  %v3_8c24 = load i32, i32* @r5, align 4
  %v4_8c24 = add i32 %v3_8c24, 2
  %v5_8c24 = inttoptr i32 %v4_8c24 to i8*
  store i8 %v1_8c18, i8* %v5_8c24, align 1
  br label %dec_label_pc_8b10

dec_label_pc_8c2c:                                ; preds = %dec_label_pc_8c64.loopexit, %dec_label_pc_8c64.preheader, %dec_label_pc_8c68.loopexit, %dec_label_pc_8c2c
  br label %dec_label_pc_8c2c

dec_label_pc_8c30:                                ; preds = %dec_label_pc_8c30.lr.ph, %dec_label_pc_8c68.loopexit
  %v0_8c30 = load i32, i32* @r8, align 4
  %v2_8c30 = icmp eq i32 %v0_8c30, 0
  store i32 0, i32* @r5, align 4
  br i1 %v2_8c30, label %dec_label_pc_8c38, label %dec_label_pc_8c78

dec_label_pc_8c38:                                ; preds = %dec_label_pc_8c30
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_8c40

dec_label_pc_8c40:                                ; preds = %dec_label_pc_8c40, %dec_label_pc_8c38
  %v0_8c48 = phi i32 [ %v1_8c48, %dec_label_pc_8c40 ], [ 0, %dec_label_pc_8c38 ]
  %v0_8c40 = phi i32 [ %v1_8c5c, %dec_label_pc_8c40 ], [ 0, %dec_label_pc_8c38 ]
  %v1_8c40 = load i32, i32* @sb, align 4
  %v2_8c40 = add i32 %v1_8c40, %v0_8c40
  %v3_8c40 = inttoptr i32 %v2_8c40 to i32*
  %v4_8c40 = load i32, i32* %v3_8c40, align 4
  %v1_8c44 = load i32, i32* @sl, align 4
  %v2_8c44 = add i32 %v1_8c44, %v0_8c40
  %v3_8c44 = inttoptr i32 %v2_8c44 to i32*
  %v4_8c44 = load i32, i32* %v3_8c44, align 4
  store i32 %v4_8c44, i32* %r1.global-to-local, align 4
  %v1_8c48 = add i32 %v0_8c48, 1
  %v0_8c4c = load i32, i32* @r6, align 4
  %v4_8c54 = inttoptr i32 %v4_8c44 to i32*
  %v5_8c54 = call i32 @function_132f0(i32 %v4_8c40, i32* %v4_8c54, i32 %v0_8c4c, i32 16384)
  %v1_8c58 = load i32, i32* @r7, align 4
  %v9_8c58 = icmp eq i32 %v1_8c48, %v1_8c58
  %v0_8c5c = load i32, i32* @r4, align 4
  %v1_8c5c = add i32 %v0_8c5c, 4
  store i32 %v1_8c5c, i32* @r4, align 4
  br i1 %v9_8c58, label %dec_label_pc_8c64.loopexit, label %dec_label_pc_8c40

dec_label_pc_8c64.loopexit:                       ; preds = %dec_label_pc_8c40
  %tmp4247 = icmp slt i32 %v1_8c48, 1
  br i1 %tmp4247, label %dec_label_pc_8c2c, label %dec_label_pc_8c30.lr.ph

dec_label_pc_8c30.lr.ph:                          ; preds = %dec_label_pc_8c64.preheader, %dec_label_pc_8c64.loopexit
  br label %dec_label_pc_8c30

dec_label_pc_8c68.loopexit:                       ; preds = %dec_label_pc_8c80
  %tmp42 = icmp slt i32 %v0_8ca8, 1
  br i1 %tmp42, label %dec_label_pc_8c2c, label %dec_label_pc_8c30

dec_label_pc_8c70:                                ; preds = %dec_label_pc_8b10
  store i32 %v24_89d8, i32* %fp.global-to-local, align 4
  ret i32 %v3_8b28

dec_label_pc_8c78:                                ; preds = %dec_label_pc_8c30
  store i32 0, i32* @fp, align 4
  br label %dec_label_pc_8c80

dec_label_pc_8c80:                                ; preds = %dec_label_pc_8c80, %dec_label_pc_8c78
  %v0_8c80 = phi i32 [ %v1_8cac, %dec_label_pc_8c80 ], [ 0, %dec_label_pc_8c78 ]
  %v1_8c80 = load i32, i32* @sl, align 4
  %v2_8c80 = add i32 %v1_8c80, %v0_8c80
  %v3_8c80 = inttoptr i32 %v2_8c80 to i32*
  %v4_8c80 = load i32, i32* %v3_8c80, align 4
  store i32 %v4_8c80, i32* @r4, align 4
  %v0_8c84 = load i32, i32* @r6, align 4
  store i32 %v0_8c84, i32* @r1, align 4
  %v1_8c8c = inttoptr i32 %v4_8c80 to i8*
  %v2_8c8c = call i32 @function_e94c(i8* %v1_8c8c)
  %v0_8c90 = load i32, i32* @r5, align 4
  %v1_8c90 = add i32 %v0_8c90, 1
  store i32 %v1_8c90, i32* @r5, align 4
  %v0_8c94 = load i32, i32* @fp, align 4
  %v1_8c94 = load i32, i32* @sb, align 4
  %v2_8c94 = add i32 %v1_8c94, %v0_8c94
  %v3_8c94 = inttoptr i32 %v2_8c94 to i32*
  %v4_8c94 = load i32, i32* %v3_8c94, align 4
  %v0_8c98 = load i32, i32* @r4, align 4
  store i32 %v0_8c98, i32* %r1.global-to-local, align 4
  %v0_8c9c = load i32, i32* @r6, align 4
  %v4_8ca4 = inttoptr i32 %v0_8c98 to i32*
  %v5_8ca4 = call i32 @function_132f0(i32 %v4_8c94, i32* %v4_8ca4, i32 %v0_8c9c, i32 16384)
  %v0_8ca8 = load i32, i32* @r5, align 4
  %v1_8ca8 = load i32, i32* @r7, align 4
  %v9_8ca8 = icmp eq i32 %v0_8ca8, %v1_8ca8
  %v0_8cac = load i32, i32* @fp, align 4
  %v1_8cac = add i32 %v0_8cac, 4
  store i32 %v1_8cac, i32* @fp, align 4
  br i1 %v9_8ca8, label %dec_label_pc_8c68.loopexit, label %dec_label_pc_8c80

; uselistorder directives
  uselistorder i32 %v1_8cac, { 1, 0 }
  uselistorder i32 %v0_8ca8, { 1, 0 }
  uselistorder i32 %v1_8c5c, { 1, 0 }
  uselistorder i32 %v1_8c48, { 2, 0, 1 }
  uselistorder i32 %stack_var_-60.0, { 0, 5, 2, 4, 1, 3 }
  uselistorder i32 %v0_8bcc, { 1, 0 }
  uselistorder i32 %v8_8b9c, { 1, 2, 0 }
  uselistorder i32 %v0_8b7c, { 1, 0, 2 }
  uselistorder i32 %v3_8b28, { 1, 2, 3, 0 }
  uselistorder i32 %v1_8b18, { 1, 2, 0 }
  uselistorder i32 %v3_8aec, { 1, 0 }
  uselistorder i32 %v3_8ac8, { 1, 0 }
  uselistorder i32 %v3_8a30, { 0, 2, 1 }
  uselistorder i32 %v1_89dc, { 1, 0 }
  uselistorder i8* %stack_var_-80, { 1, 0 }
  uselistorder i32* %stack_var_-52, { 1, 0, 3, 2 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 11, 12, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 16, 15, 17, 19, 18, 0 }
  uselistorder label %dec_label_pc_8c30.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_8c30, { 1, 0 }
  uselistorder label %dec_label_pc_8c2c, { 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_8bc0, { 1, 0 }
  uselistorder label %dec_label_pc_8abc, { 1, 0 }
}

define i32 @function_8cbc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8cbc:
  %fp.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-80 = alloca i8, align 1
  %v24_8cbc = load i32, i32* @fp, align 4
  %v1_8cc0 = urem i32 %arg1, 256
  store i32 %v1_8cc0, i32* @r7, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r6, align 4
  %v1_8cd8 = urem i32 %arg3, 256
  store i32 %v1_8cd8, i32* @r4, align 4
  %v2_8cdc = call i32 @function_1366c(i32 %v1_8cc0, i32 4)
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %v2_8cdc, i32* @sl, align 4
  %v0_8ce8 = load i32, i32* @r7, align 4
  %v2_8cec = call i32 @function_1366c(i32 %v0_8ce8, i32 4)
  store i32 65535, i32* @r5, align 4
  %v0_8cf8 = load i32, i32* @r6, align 4
  store i32 %v0_8cf8, i32* %r1.global-to-local, align 4
  store i32 %v2_8cec, i32* @sb, align 4
  %v0_8d08 = load i32, i32* @r4, align 4
  %v4_8d0c = inttoptr i32 %v0_8cf8 to i32*
  %v5_8d0c = call i32 @function_85e0(i32 %v0_8d08, i32* %v4_8d0c, i32 7, i32 65535)
  %v3_8d14 = urem i32 %v5_8d0c, 65536
  %v0_8d18 = load i32, i32* @r6, align 4
  store i32 %v0_8d18, i32* %r1.global-to-local, align 4
  %v0_8d20 = load i32, i32* @r5, align 4
  %v0_8d24 = load i32, i32* @r4, align 4
  %v5_8d2c = inttoptr i32 %v0_8d18 to i32*
  %v6_8d2c = call i32 @function_85e0(i32 %v0_8d24, i32* %v5_8d2c, i32 6, i32 %v0_8d20)
  %v0_8d30 = load i32, i32* @r6, align 4
  store i32 %v0_8d30, i32* %r1.global-to-local, align 4
  %v3_8d34 = mul i32 %v6_8d2c, 65536
  store i32 %v3_8d34, i32* %fp.global-to-local, align 4
  %v0_8d40 = load i32, i32* @r4, align 4
  %v4_8d44 = inttoptr i32 %v0_8d30 to i32*
  %v5_8d44 = call i32 @function_85e0(i32 %v0_8d40, i32* %v4_8d44, i32 0, i32 1024)
  %v0_8d50 = load i32, i32* @r6, align 4
  store i32 %v0_8d50, i32* %r1.global-to-local, align 4
  %v0_8d54 = load i32, i32* @r4, align 4
  %v3_8d5c = urem i32 %v5_8d44, 65536
  store i32 %v3_8d5c, i32* @r6, align 4
  %v4_8d60 = inttoptr i32 %v0_8d50 to i32*
  %v5_8d60 = call i32 @function_85e0(i32 %v0_8d54, i32* %v4_8d60, i32 1, i32 1)
  %v0_8d64 = load i32, i32* %fp.global-to-local, align 4
  %v3_8d64 = udiv i32 %v0_8d64, 65536
  %v1_8d6c = load i32, i32* @r5, align 4
  %v9_8d6c = icmp eq i32 %v3_8d64, %v1_8d6c
  store i32 0, i32* %stack_var_-52, align 4
  br i1 %v9_8d6c, label %dec_label_pc_8d94, label %bb

bb:                                               ; preds = %dec_label_pc_8cbc
  %v2_8d80 = mul nuw nsw i32 %v3_8d64, 256
  %v4_8d84 = and i32 %v2_8d80, 65280
  %v1_8d88 = urem i32 %v5_8d60, 256
  store i32 %v1_8d88, i32* @r8, align 4
  %v5_8d8c = udiv i32 %v0_8d64, 16777216
  %v6_8d8c = or i32 %v4_8d84, %v5_8d8c
  br label %dec_label_pc_8da0

dec_label_pc_8d94:                                ; preds = %dec_label_pc_8cbc
  %v1_8d887 = urem i32 %v5_8d60, 256
  store i32 %v1_8d887, i32* @r8, align 4
  %v0_8d94 = call i32 @function_e7cc()
  %v3_8d9c = urem i32 %v0_8d94, 65536
  br label %dec_label_pc_8da0

dec_label_pc_8da0:                                ; preds = %bb, %dec_label_pc_8d94
  %storemerge17 = phi i32 [ %v6_8d8c, %bb ], [ %v3_8d9c, %dec_label_pc_8d94 ]
  store i32 %storemerge17, i32* %fp.global-to-local, align 4
  %v0_8da0 = load i32, i32* @r7, align 4
  %tmp41 = icmp slt i32 %v0_8da0, 1
  br i1 %tmp41, label %dec_label_pc_8f48.preheader, label %dec_label_pc_8da8

dec_label_pc_8f48.preheader:                      ; preds = %dec_label_pc_8ea4, %dec_label_pc_8da0
  %storemerge3.in12.ph = phi i32 [ %v0_8da0, %dec_label_pc_8da0 ], [ %v1_8dfc, %dec_label_pc_8ea4 ]
  %tmp424750 = icmp slt i32 %storemerge3.in12.ph, 1
  br i1 %tmp424750, label %dec_label_pc_8f10, label %dec_label_pc_8f14.lr.ph

dec_label_pc_8da8:                                ; preds = %dec_label_pc_8da0
  store i32 %v3_8d14, i32* %r1.global-to-local, align 4
  %v3_8dac = udiv i32 %v5_8d0c, 256
  %v5_8db8 = trunc i32 %v3_8dac to i8
  store i32 %arg2, i32* @r5, align 4
  %v3_8dd0 = udiv i32 %v5_8d0c, 65536
  store i32 %v3_8dd0, i32* @r4, align 4
  %v4_8de0 = trunc i32 %v3_8dd0 to i8
  store i8 %v4_8de0, i8* %stack_var_-80, align 1
  %v3_8ef0 = icmp eq i32 %v3_8d14, 65535
  %v2_8e18 = ptrtoint i32* %stack_var_-52 to i32
  %v3_8e48 = bitcast i32* %stack_var_-52 to %sockaddr*
  br label %dec_label_pc_8ed4

dec_label_pc_8de8:                                ; preds = %dec_label_pc_8ed4
  %v2_8de8 = load i8, i8* %stack_var_-80, align 1
  %v3_8de8 = sext i8 %v2_8de8 to i32
  store i32 %v3_8de8, i32* %r1.global-to-local, align 4
  store i32 %v3_8dac, i32* @r4, align 4
  %v2_8dec = load i32, i32* @r5, align 4
  %v3_8dec = add i32 %v2_8dec, 2
  %v4_8dec = inttoptr i32 %v3_8dec to i8*
  store i8 %v5_8db8, i8* %v4_8dec, align 1
  %v0_8df0 = load i32, i32* %r1.global-to-local, align 4
  %v1_8df0 = trunc i32 %v0_8df0 to i8
  %v2_8df0 = load i32, i32* @r5, align 4
  %v3_8df0 = add i32 %v2_8df0, 3
  %v4_8df0 = inttoptr i32 %v3_8df0 to i8*
  store i8 %v1_8df0, i8* %v4_8df0, align 1
  br label %dec_label_pc_8df4

dec_label_pc_8df4:                                ; preds = %dec_label_pc_8efc, %dec_label_pc_8de8
  %v1_8dfc = add i32 %stack_var_-56.0, 1
  store i32 2, i32* %r1.global-to-local, align 4
  %v3_8e0c = call i32 @function_13380(i32 2, i32 2, i32 0)
  store i32 %stack_var_-60.0, i32* @r4, align 4
  %v7_8e14 = icmp eq i32 %v3_8e0c, -1
  store i32 %v2_8e18, i32* %r1.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  %v2_8e28 = load i32, i32* @sb, align 4
  %v3_8e28 = add i32 %v2_8e28, %stack_var_-60.0
  %v4_8e28 = inttoptr i32 %v3_8e28 to i32*
  store i32 %v3_8e0c, i32* %v4_8e28, align 4
  br i1 %v7_8e14, label %dec_label_pc_8f54, label %dec_label_pc_8e30

dec_label_pc_8e30:                                ; preds = %dec_label_pc_8df4
  store i32 2, i32* %stack_var_-52, align 4
  %v4_8e48 = call i32 @function_131b0(i32 %v3_8e0c, %sockaddr* %v3_8e48, i32 16)
  %v0_8e4c = load i32, i32* @r5, align 4
  %v1_8e4c = add i32 %v0_8e4c, 20
  %v2_8e4c = inttoptr i32 %v1_8e4c to i8*
  %v3_8e4c = load i8, i8* %v2_8e4c, align 1
  %tmp = icmp ugt i8 %v3_8e4c, 31
  br i1 %tmp, label %dec_label_pc_8ea4, label %dec_label_pc_8e58

dec_label_pc_8e58:                                ; preds = %dec_label_pc_8e30
  %v1_8e58 = add i32 %v0_8e4c, 16
  %v2_8e58 = inttoptr i32 %v1_8e58 to i32*
  %v3_8e58 = load i32, i32* %v2_8e58, align 4
  store i32 %v3_8e58, i32* @r4, align 4
  %v0_8e5c = call i32 @function_e7cc()
  %v0_8e60 = load i32, i32* @r4, align 4
  %v1_8e64 = and i32 %v0_8e60, 65280
  %v3_8e6c = mul i32 %v0_8e60, 16777216
  %v4_8e70 = mul nuw nsw i32 %v1_8e64, 256
  %v5_8e70 = or i32 %v4_8e70, %v3_8e6c
  store i32 %v5_8e70, i32* %r1.global-to-local, align 4
  %v0_8e78 = load i32, i32* @r5, align 4
  %v1_8e78 = add i32 %v0_8e78, 20
  %v2_8e78 = inttoptr i32 %v1_8e78 to i8*
  %v3_8e78 = load i8, i8* %v2_8e78, align 1
  %v4_8e78 = zext i8 %v3_8e78 to i32
  %v2_8e7c = call i32 @llvm.bswap.i32(i32 %v0_8e60)
  %v7_8e80 = lshr i32 %v0_8e5c, %v4_8e78
  %v8_8e80 = add i32 %v7_8e80, %v2_8e7c
  %v3_8e8c = mul i32 %v8_8e80, 16777216
  %v1_8e90 = and i32 %v8_8e80, 65280
  %v4_8e94 = mul nuw nsw i32 %v1_8e90, 256
  %v5_8e94 = or i32 %v4_8e94, %v3_8e8c
  store i32 %v5_8e94, i32* %r1.global-to-local, align 4
  %v2_8e9c = call i32 @llvm.bswap.i32(i32 %v8_8e80)
  %v2_8ea0 = add i32 %v0_8e78, 4
  %v3_8ea0 = inttoptr i32 %v2_8ea0 to i32*
  store i32 %v2_8e9c, i32* %v3_8ea0, align 4
  %v0_8eb0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_8ea4

dec_label_pc_8ea4:                                ; preds = %dec_label_pc_8e30, %dec_label_pc_8e58
  %v0_8eb0 = phi i32 [ %v0_8e4c, %dec_label_pc_8e30 ], [ %v0_8eb0.pre, %dec_label_pc_8e58 ]
  store i32 %stack_var_-60.0, i32* %r1.global-to-local, align 4
  %v1_8eac = load i32, i32* @sb, align 4
  %v2_8eac = add i32 %v1_8eac, %stack_var_-60.0
  %v3_8eac = inttoptr i32 %v2_8eac to i32*
  %v4_8eac = load i32, i32* %v3_8eac, align 4
  store i32 %v0_8eb0, i32* %r1.global-to-local, align 4
  %v3_8eb4 = inttoptr i32 %v0_8eb0 to %sockaddr*
  %v4_8eb4 = call i32 @function_131dc(i32 %v4_8eac, %sockaddr* %v3_8eb4, i32 16)
  %v1_8ec0 = add i32 %stack_var_-60.0, 4
  %v1_8ec4 = load i32, i32* @r7, align 4
  %v9_8ec4 = icmp eq i32 %v1_8dfc, %v1_8ec4
  %v0_8ecc = load i32, i32* @r5, align 4
  %v1_8ecc = add i32 %v0_8ecc, 24
  store i32 %v1_8ecc, i32* @r5, align 4
  br i1 %v9_8ec4, label %dec_label_pc_8f48.preheader, label %dec_label_pc_8ed4

dec_label_pc_8ed4:                                ; preds = %dec_label_pc_8ea4, %dec_label_pc_8da8
  %stack_var_-60.0 = phi i32 [ 0, %dec_label_pc_8da8 ], [ %v1_8ec0, %dec_label_pc_8ea4 ]
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_8da8 ], [ %v1_8dfc, %dec_label_pc_8ea4 ]
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_8ee0 = call i32 @function_1366c(i32 65535, i32 1)
  store i32 %v3_8d14, i32* %r1.global-to-local, align 4
  %v2_8ef4 = load i32, i32* @sl, align 4
  %v3_8ef4 = add i32 %v2_8ef4, %stack_var_-60.0
  %v4_8ef4 = inttoptr i32 %v3_8ef4 to i32*
  store i32 %v2_8ee0, i32* %v4_8ef4, align 4
  br i1 %v3_8ef0, label %dec_label_pc_8efc, label %dec_label_pc_8de8

dec_label_pc_8efc:                                ; preds = %dec_label_pc_8ed4
  %v0_8efc = call i32 @function_e7cc()
  %v1_8efc = trunc i32 %v0_8efc to i8
  %v4_8f00 = sdiv i32 %v0_8efc, 256
  %v1_8f04 = trunc i32 %v4_8f00 to i8
  %v2_8f04 = load i32, i32* @r5, align 4
  %v3_8f04 = add i32 %v2_8f04, 3
  %v4_8f04 = inttoptr i32 %v3_8f04 to i8*
  store i8 %v1_8f04, i8* %v4_8f04, align 1
  %v3_8f08 = load i32, i32* @r5, align 4
  %v4_8f08 = add i32 %v3_8f08, 2
  %v5_8f08 = inttoptr i32 %v4_8f08 to i8*
  store i8 %v1_8efc, i8* %v5_8f08, align 1
  br label %dec_label_pc_8df4

dec_label_pc_8f10:                                ; preds = %dec_label_pc_8f48.loopexit, %dec_label_pc_8f48.preheader, %dec_label_pc_8f4c.loopexit, %dec_label_pc_8f10
  br label %dec_label_pc_8f10

dec_label_pc_8f14:                                ; preds = %dec_label_pc_8f14.lr.ph, %dec_label_pc_8f4c.loopexit
  %v0_8f14 = load i32, i32* @r8, align 4
  %v2_8f14 = icmp eq i32 %v0_8f14, 0
  store i32 0, i32* @r5, align 4
  br i1 %v2_8f14, label %dec_label_pc_8f1c, label %dec_label_pc_8f5c

dec_label_pc_8f1c:                                ; preds = %dec_label_pc_8f14
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_8f24

dec_label_pc_8f24:                                ; preds = %dec_label_pc_8f24, %dec_label_pc_8f1c
  %v0_8f2c = phi i32 [ %v1_8f2c, %dec_label_pc_8f24 ], [ 0, %dec_label_pc_8f1c ]
  %v0_8f24 = phi i32 [ %v1_8f40, %dec_label_pc_8f24 ], [ 0, %dec_label_pc_8f1c ]
  %v1_8f24 = load i32, i32* @sb, align 4
  %v2_8f24 = add i32 %v1_8f24, %v0_8f24
  %v3_8f24 = inttoptr i32 %v2_8f24 to i32*
  %v4_8f24 = load i32, i32* %v3_8f24, align 4
  %v1_8f28 = load i32, i32* @sl, align 4
  %v2_8f28 = add i32 %v1_8f28, %v0_8f24
  %v3_8f28 = inttoptr i32 %v2_8f28 to i32*
  %v4_8f28 = load i32, i32* %v3_8f28, align 4
  store i32 %v4_8f28, i32* %r1.global-to-local, align 4
  %v1_8f2c = add i32 %v0_8f2c, 1
  %v0_8f30 = load i32, i32* @r6, align 4
  %v4_8f38 = inttoptr i32 %v4_8f28 to i32*
  %v5_8f38 = call i32 @function_132f0(i32 %v4_8f24, i32* %v4_8f38, i32 %v0_8f30, i32 16384)
  %v1_8f3c = load i32, i32* @r7, align 4
  %v9_8f3c = icmp eq i32 %v1_8f2c, %v1_8f3c
  %v0_8f40 = load i32, i32* @r4, align 4
  %v1_8f40 = add i32 %v0_8f40, 4
  store i32 %v1_8f40, i32* @r4, align 4
  br i1 %v9_8f3c, label %dec_label_pc_8f48.loopexit, label %dec_label_pc_8f24

dec_label_pc_8f48.loopexit:                       ; preds = %dec_label_pc_8f24
  %tmp4247 = icmp slt i32 %v1_8f2c, 1
  br i1 %tmp4247, label %dec_label_pc_8f10, label %dec_label_pc_8f14.lr.ph

dec_label_pc_8f14.lr.ph:                          ; preds = %dec_label_pc_8f48.preheader, %dec_label_pc_8f48.loopexit
  br label %dec_label_pc_8f14

dec_label_pc_8f4c.loopexit:                       ; preds = %dec_label_pc_8f64
  %tmp42 = icmp slt i32 %v0_8f8c, 1
  br i1 %tmp42, label %dec_label_pc_8f10, label %dec_label_pc_8f14

dec_label_pc_8f54:                                ; preds = %dec_label_pc_8df4
  store i32 %v24_8cbc, i32* %fp.global-to-local, align 4
  ret i32 %v3_8e0c

dec_label_pc_8f5c:                                ; preds = %dec_label_pc_8f14
  store i32 0, i32* @fp, align 4
  br label %dec_label_pc_8f64

dec_label_pc_8f64:                                ; preds = %dec_label_pc_8f64, %dec_label_pc_8f5c
  %v0_8f64 = phi i32 [ %v1_8f90, %dec_label_pc_8f64 ], [ 0, %dec_label_pc_8f5c ]
  %v1_8f64 = load i32, i32* @sl, align 4
  %v2_8f64 = add i32 %v1_8f64, %v0_8f64
  %v3_8f64 = inttoptr i32 %v2_8f64 to i32*
  %v4_8f64 = load i32, i32* %v3_8f64, align 4
  store i32 %v4_8f64, i32* @r4, align 4
  %v0_8f68 = load i32, i32* @r6, align 4
  store i32 %v0_8f68, i32* @r1, align 4
  %v1_8f70 = inttoptr i32 %v4_8f64 to i8*
  %v2_8f70 = call i32 @function_e94c(i8* %v1_8f70)
  %v0_8f74 = load i32, i32* @r5, align 4
  %v1_8f74 = add i32 %v0_8f74, 1
  store i32 %v1_8f74, i32* @r5, align 4
  %v0_8f78 = load i32, i32* @fp, align 4
  %v1_8f78 = load i32, i32* @sb, align 4
  %v2_8f78 = add i32 %v1_8f78, %v0_8f78
  %v3_8f78 = inttoptr i32 %v2_8f78 to i32*
  %v4_8f78 = load i32, i32* %v3_8f78, align 4
  %v0_8f7c = load i32, i32* @r4, align 4
  store i32 %v0_8f7c, i32* %r1.global-to-local, align 4
  %v0_8f80 = load i32, i32* @r6, align 4
  %v4_8f88 = inttoptr i32 %v0_8f7c to i32*
  %v5_8f88 = call i32 @function_132f0(i32 %v4_8f78, i32* %v4_8f88, i32 %v0_8f80, i32 16384)
  %v0_8f8c = load i32, i32* @r5, align 4
  %v1_8f8c = load i32, i32* @r7, align 4
  %v9_8f8c = icmp eq i32 %v0_8f8c, %v1_8f8c
  %v0_8f90 = load i32, i32* @fp, align 4
  %v1_8f90 = add i32 %v0_8f90, 4
  store i32 %v1_8f90, i32* @fp, align 4
  br i1 %v9_8f8c, label %dec_label_pc_8f4c.loopexit, label %dec_label_pc_8f64

; uselistorder directives
  uselistorder i32 %v1_8f90, { 1, 0 }
  uselistorder i32 %v0_8f8c, { 1, 0 }
  uselistorder i32 %v1_8f40, { 1, 0 }
  uselistorder i32 %v1_8f2c, { 2, 0, 1 }
  uselistorder i32 %stack_var_-60.0, { 0, 5, 2, 4, 1, 3 }
  uselistorder i32 %v0_8eb0, { 1, 0 }
  uselistorder i32 %v8_8e80, { 1, 2, 0 }
  uselistorder i32 %v0_8e60, { 1, 0, 2 }
  uselistorder i32 %v3_8e0c, { 1, 3, 2, 0 }
  uselistorder i32 %v1_8dfc, { 1, 2, 0 }
  uselistorder i32 %v3_8dd0, { 1, 0 }
  uselistorder i32 %v3_8dac, { 1, 0 }
  uselistorder i32 %v3_8d14, { 0, 2, 1 }
  uselistorder i32 %v1_8cc0, { 1, 0 }
  uselistorder i8* %stack_var_-80, { 1, 0 }
  uselistorder i32* %stack_var_-52, { 1, 0, 3, 2 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 11, 12, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 16, 15, 17, 19, 18, 0 }
  uselistorder label %dec_label_pc_8f14.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_8f14, { 1, 0 }
  uselistorder label %dec_label_pc_8f10, { 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_8ea4, { 1, 0 }
  uselistorder label %dec_label_pc_8da0, { 1, 0 }
}

define i32 @function_8fa0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8fa0:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %v18_8fa0 = load i32, i32* @sb, align 4
  %v24_8fa0 = load i32, i32* @fp, align 4
  %v1_8fa4 = urem i32 %arg1, 256
  store i32 %v1_8fa4, i32* @sl, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 %v1_8fa4, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  %v1_8fbc = urem i32 %arg3, 256
  store i32 %v1_8fbc, i32* @r4, align 4
  %v2_8fc0 = call i32 @function_1366c(i32 %v1_8fa4, i32 4)
  %v0_8fc4 = load i32, i32* @r5, align 4
  store i32 %v0_8fc4, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_8fd4 = load i32, i32* @r4, align 4
  store i32 %v0_8fd4, i32* %r0.global-to-local, align 4
  %v5_8fd8 = inttoptr i32 %v0_8fc4 to i32*
  %v6_8fd8 = call i32 @function_85e0(i32 %v0_8fd4, i32* %v5_8fd8, i32 2, i32 0)
  %v1_8fe4 = urem i32 %v6_8fd8, 256
  store i32 %v1_8fe4, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_8ff0 = load i32, i32* @r5, align 4
  store i32 %v0_8ff0, i32* %r1.global-to-local, align 4
  %v0_8ff4 = load i32, i32* @r4, align 4
  store i32 %v0_8ff4, i32* %r0.global-to-local, align 4
  %v5_8ff8 = trunc i32 %v6_8fd8 to i8
  %v6_8ffc = inttoptr i32 %v0_8ff0 to i32*
  %v7_8ffc = call i32 @function_85e0(i32 %v0_8ff4, i32* %v6_8ffc, i32 3, i32 65535)
  %v0_9000 = load i32, i32* @r5, align 4
  store i32 %v0_9000, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_8ffc, i32* %fp.global-to-local, align 4
  %v0_9010 = load i32, i32* @r4, align 4
  store i32 %v0_9010, i32* %r0.global-to-local, align 4
  %v4_9014 = inttoptr i32 %v0_9000 to i32*
  %v5_9014 = call i32 @function_85e0(i32 %v0_9010, i32* %v4_9014, i32 4, i32 64)
  %v1_901c = urem i32 %v5_9014, 256
  store i32 %v1_901c, i32* %ip.global-to-local, align 4
  %v0_9020 = load i32, i32* @r5, align 4
  store i32 %v0_9020, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_902c = load i32, i32* @r4, align 4
  store i32 %v0_902c, i32* %r0.global-to-local, align 4
  %v5_9030 = trunc i32 %v5_9014 to i8
  %v6_9034 = inttoptr i32 %v0_9020 to i32*
  %v7_9034 = call i32 @function_85e0(i32 %v0_902c, i32* %v6_9034, i32 5, i32 0)
  %v1_9040 = urem i32 %v7_9034, 256
  store i32 %v1_9040, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_904c = load i32, i32* @r5, align 4
  store i32 %v0_904c, i32* %r1.global-to-local, align 4
  %v0_9050 = load i32, i32* @r4, align 4
  store i32 %v0_9050, i32* %r0.global-to-local, align 4
  %v5_9058 = inttoptr i32 %v0_904c to i32*
  %v6_9058 = call i32 @function_85e0(i32 %v0_9050, i32* %v5_9058, i32 6, i32 65535)
  %v0_9060 = load i32, i32* @r5, align 4
  store i32 %v0_9060, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_9058, i32* @r7, align 4
  %v0_9070 = load i32, i32* @r4, align 4
  store i32 %v0_9070, i32* %r0.global-to-local, align 4
  %v4_9074 = inttoptr i32 %v0_9060 to i32*
  %v5_9074 = call i32 @function_85e0(i32 %v0_9070, i32* %v4_9074, i32 7, i32 65535)
  %v0_9078 = load i32, i32* @r5, align 4
  store i32 %v0_9078, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v5_9074, i32* %sb.global-to-local, align 4
  %v0_9088 = load i32, i32* @r4, align 4
  store i32 %v0_9088, i32* %r0.global-to-local, align 4
  %v4_908c = inttoptr i32 %v0_9078 to i32*
  %v5_908c = call i32 @function_85e0(i32 %v0_9088, i32* %v4_908c, i32 0, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_9098 = load i32, i32* @r5, align 4
  store i32 %v0_9098, i32* %r1.global-to-local, align 4
  store i32 %v5_908c, i32* @r6, align 4
  %v0_90a0 = load i32, i32* @r4, align 4
  store i32 %v0_90a0, i32* %r0.global-to-local, align 4
  %v4_90a4 = inttoptr i32 %v0_9098 to i32*
  %v5_90a4 = call i32 @function_85e0(i32 %v0_90a0, i32* %v4_90a4, i32 1, i32 1)
  %v2_90b0 = load i32, i32* @global_var_1da7c.49, align 4
  store i32 %v2_90b0, i32* %r3.global-to-local, align 4
  %v1_90b4 = urem i32 %v5_90a4, 256
  store i32 %v1_90b4, i32* %ip.global-to-local, align 4
  %v0_90b8 = load i32, i32* @r5, align 4
  store i32 %v0_90b8, i32* %r1.global-to-local, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_90c0 = load i32, i32* @r4, align 4
  store i32 %v0_90c0, i32* %r0.global-to-local, align 4
  %v5_90c8 = inttoptr i32 %v0_90b8 to i32*
  %v6_90c8 = call i32 @function_85e0(i32 %v0_90c0, i32* %v5_90c8, i32 25, i32 %v2_90b0)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_90dc = call i32 @function_13380(i32 2, i32 3, i32 17)
  store i32 %v3_90dc, i32* %r0.global-to-local, align 4
  %v7_90e0 = icmp eq i32 %v3_90dc, -1
  store i1 %v7_90e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_90e0, label %dec_label_pc_9508, label %dec_label_pc_90ec

dec_label_pc_90ec:                                ; preds = %dec_label_pc_8fa0
  store i32 1, i32* %stack_var_-40, align 4
  %v6_90f4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v6_90f4, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v6_9108 = call i32 @function_13350(i32 %v3_90dc, i32 0, i32 3, i32* nonnull %stack_var_-40, i32 4)
  store i32 %v6_9108, i32* %r0.global-to-local, align 4
  %v7_910c = icmp eq i32 %v6_9108, -1
  store i1 %v7_910c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_910c, label %dec_label_pc_9500, label %dec_label_pc_9114

dec_label_pc_9114:                                ; preds = %dec_label_pc_90ec
  %v0_9114 = load i32, i32* @r6, align 4
  store i32 1460, i32* %r3.global-to-local, align 4
  %v3_9120 = urem i32 %v0_9114, 65536
  store i32 %v3_9120, i32* %r2.global-to-local, align 4
  %v3_9124 = icmp ugt i32 %v3_9120, 1459
  %v9_9124 = icmp eq i32 %v3_9120, 1460
  store i1 %v9_9124, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_9124, label %bb, label %bb71

bb:                                               ; preds = %dec_label_pc_9114
  store i32 1460, i32* %r2.global-to-local, align 4
  br label %bb71

bb71:                                             ; preds = %dec_label_pc_9114, %bb
  %v0_912c = phi i32 [ %v3_9120, %dec_label_pc_9114 ], [ 1460, %bb ]
  %v0_9130 = load i32, i32* %fp.global-to-local, align 4
  %v3_9130 = mul i32 %v0_9130, 65536
  store i32 %v3_9130, i32* %r0.global-to-local, align 4
  %v3_9134 = urem i32 %v0_9130, 65536
  store i32 %v3_9134, i32* %r2.global-to-local, align 4
  %v0_9138 = load i32, i32* @sl, align 4
  %v2_9138 = icmp eq i32 %v0_9138, 0
  store i1 %v2_9138, i1* %cpsr_z.global-to-local, align 1
  %v0_913c = load i32, i32* %sb.global-to-local, align 4
  %v0_9140 = load i32, i32* @r7, align 4
  %tmp72 = icmp slt i32 %v0_9138, 1
  br i1 %tmp72, label %bb73, label %bb74

bb73:                                             ; preds = %bb71
  store i32 %v0_912c, i32* %r2.global-to-local, align 4
  br label %bb74

bb74:                                             ; preds = %bb71, %bb73
  %v5_9168 = phi i32 [ %v3_9134, %bb71 ], [ %v0_912c, %bb73 ]
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_9150 = urem i32 %v0_9140, 65536
  store i32 %v3_9150, i32* %r3.global-to-local, align 4
  %v3_9154 = urem i32 %v0_913c, 65536
  store i32 %v3_9154, i32* %ip.global-to-local, align 4
  store i32 0, i32* %stack_var_-40, align 4
  br i1 %tmp72, label %.thread, label %dec_label_pc_9170

.thread:                                          ; preds = %bb74
  %v6_9164 = add nsw i32 %v5_9168, 28
  store i32 %v6_9164, i32* @fp, align 4
  %v6_9168 = add nsw i32 %v5_9168, 8
  store i32 %v6_9168, i32* @sb, align 4
  br label %dec_label_pc_92e4

dec_label_pc_9170:                                ; preds = %bb74
  %v1_9174 = add nuw nsw i32 %v0_912c, 28
  store i32 %v1_9174, i32* @fp, align 4
  %tmp75 = mul nuw nsw i32 %v1_9174, 256
  %v1_9180 = and i32 %tmp75, 65280
  %tmp76 = udiv i32 %v0_9130, 256
  %v3_9184 = urem i32 %tmp76, 256
  %v2_9198 = icmp eq i32 %v1_9040, 0
  store i1 %v2_9198, i1* %cpsr_z.global-to-local, align 1
  %v1_919c = urem i32 %v0_9130, 256
  %v1_91a4 = add nuw nsw i32 %v0_912c, 8
  store i32 %v1_91a4, i32* @sb, align 4
  %v1_91ac = urem i32 %v0_9140, 256
  %v1_91b0 = urem i32 %v0_913c, 256
  store i32 %v1_91b0, i32* %ip.global-to-local, align 4
  store i32 %v1_9180, i32* %r3.global-to-local, align 4
  %tmp77 = mul nuw nsw i32 %v1_91a4, 256
  %v4_91bc = mul nuw nsw i32 %v1_919c, 256
  %v5_91bc = or i32 %v4_91bc, %v3_9184
  store i32 %v5_91bc, i32* %r0.global-to-local, align 4
  %v3_91c0 = mul nuw nsw i32 %v1_91ac, 256
  store i32 %v3_91c0, i32* %r2.global-to-local, align 4
  %tmp78 = udiv i32 %v0_913c, 256
  %v3_91c4 = urem i32 %tmp78, 256
  %v1_91c8 = and i32 %tmp77, 65280
  store i32 %v1_91c8, i32* %r1.global-to-local, align 4
  %tmp79 = udiv i32 %v1_9174, 256
  %v4_91cc = urem i32 %tmp79, 256
  %v5_91cc = or i32 %v4_91cc, %v1_9180
  store i32 %v5_91cc, i32* @lr, align 4
  %tmp80 = udiv i32 %v0_9140, 256
  %v4_91d0 = urem i32 %tmp80, 256
  %v5_91d0 = or i32 %v4_91d0, %v3_91c0
  store i32 %v5_91d0, i32* @r4, align 4
  %v5_91d4 = trunc i32 %tmp79 to i8
  %v5_91d8 = trunc i32 %tmp76 to i8
  %v4_91dc = mul nuw nsw i32 %v1_91b0, 256
  %v5_91dc = or i32 %v4_91dc, %v3_91c4
  store i32 %v5_91dc, i32* @r5, align 4
  %tmp81 = udiv i32 %v1_91a4, 256
  %v4_91e0 = urem i32 %tmp81, 256
  %v5_91e0 = or i32 %v4_91e0, %v1_91c8
  store i32 %v5_91e0, i32* @r7, align 4
  br i1 %v2_9198, label %dec_label_pc_91e8, label %dec_label_pc_9510

dec_label_pc_91e8:                                ; preds = %dec_label_pc_9170
  %v3_91e836 = udiv i32 %v1_9180, 256
  store i32 %v3_91e836, i32* %ip.global-to-local, align 4
  store i32 %v1_919c, i32* %r0.global-to-local, align 4
  store i32 %v1_91ac, i32* %r1.global-to-local, align 4
  store i32 %v1_91b0, i32* %r2.global-to-local, align 4
  %v3_91f837 = udiv i32 %v1_91c8, 256
  store i32 %v3_91f837, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  %v4_925c = sext i8 %v5_8ff8 to i32
  %v4_929c = sext i8 %v5_91d8 to i32
  %sext15 = mul i32 %v0_9130, 16777216
  %v4_92a0 = sdiv i32 %sext15, 16777216
  %sext16 = mul i32 %v0_9140, 16777216
  %v4_92b8 = sdiv i32 %sext16, 16777216
  %sext17 = mul i32 %v1_91a4, 16777216
  %v4_92bc = sdiv i32 %sext17, 16777216
  %sext18 = mul i32 %v0_913c, 16777216
  %v4_92c0 = sdiv i32 %sext18, 16777216
  %v1_92a8 = trunc i32 %v1_9174 to i8
  %v1_92c8 = trunc i32 %v4_92bc to i8
  br label %dec_label_pc_9214

dec_label_pc_9214:                                ; preds = %dec_label_pc_9214, %dec_label_pc_91e8
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_9220 = call i32 @function_1366c(i32 1510, i32 1)
  store i32 %v2_9220, i32* %r0.global-to-local, align 4
  store i32 %v2_8fc0, i32* %ip.global-to-local, align 4
  %v3_9228 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_9228, i32* %r2.global-to-local, align 4
  %v2_922c = load i32, i32* @r6, align 4
  %v5_922c = mul i32 %v2_922c, 4
  %v6_922c = add i32 %v5_922c, %v2_8fc0
  %v7_922c = inttoptr i32 %v6_922c to i32*
  store i32 %v2_9220, i32* %v7_922c, align 4
  %v0_9230 = load i32, i32* %ip.global-to-local, align 4
  %v1_9230 = load i32, i32* %r2.global-to-local, align 4
  %v4_9230 = mul i32 %v1_9230, 4
  %v5_9230 = add i32 %v4_9230, %v0_9230
  %v6_9230 = inttoptr i32 %v5_9230 to i32*
  %v7_9230 = load i32, i32* %v6_9230, align 4
  store i32 %v7_9230, i32* %r1.global-to-local, align 4
  %v1_9234 = inttoptr i32 %v7_9230 to i8*
  %v2_9234 = load i8, i8* %v1_9234, align 1
  %tmp = urem i8 %v2_9234, 16
  %v1_9238 = zext i8 %tmp to i32
  %v1_923c = or i32 %v1_9238, 64
  store i32 %v1_923c, i32* %r3.global-to-local, align 4
  %v1_9240 = trunc i32 %v1_923c to i8
  store i8 %v1_9240, i8* %v1_9234, align 1
  %v0_9244 = load i32, i32* %r1.global-to-local, align 4
  %v1_9244 = inttoptr i32 %v0_9244 to i8*
  %v2_9244 = load i8, i8* %v1_9244, align 1
  %v3_9244 = zext i8 %v2_9244 to i32
  %v1_9248 = and i32 %v3_9244, 240
  %v1_924c = or i32 %v1_9248, 5
  store i32 %v1_924c, i32* %r2.global-to-local, align 4
  %v3_9254 = add i32 %v0_9244, 9
  %v4_9254 = inttoptr i32 %v3_9254 to i8*
  store i8 17, i8* %v4_9254, align 1
  %v0_9258 = load i32, i32* %r2.global-to-local, align 4
  %v1_9258 = trunc i32 %v0_9258 to i8
  %v2_9258 = load i32, i32* %r1.global-to-local, align 4
  %v3_9258 = inttoptr i32 %v2_9258 to i8*
  store i8 %v1_9258, i8* %v3_9258, align 1
  store i32 %v4_925c, i32* %r0.global-to-local, align 4
  %v2_9260 = load i32, i32* %r1.global-to-local, align 4
  %v3_9260 = add i32 %v2_9260, 1
  %v4_9260 = inttoptr i32 %v3_9260 to i8*
  store i8 %v5_8ff8, i8* %v4_9260, align 1
  %v2_9268 = load i32, i32* %r1.global-to-local, align 4
  %v3_9268 = add i32 %v2_9268, 8
  %v4_9268 = inttoptr i32 %v3_9268 to i8*
  store i8 %v5_9030, i8* %v4_9268, align 1
  %v3_926c = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_926c, i32* %r2.global-to-local, align 4
  store i32 %v6_90c8, i32* %ip.global-to-local, align 4
  %v3_9274 = mul i32 %v3_926c, 32
  store i32 %v3_9274, i32* %r3.global-to-local, align 4
  %v1_9278 = load i32, i32* %r1.global-to-local, align 4
  %v2_9278 = add i32 %v1_9278, 12
  %v3_9278 = inttoptr i32 %v2_9278 to i32*
  store i32 %v6_90c8, i32* %v3_9278, align 4
  %v0_927c = load i32, i32* %r3.global-to-local, align 4
  %v1_927c = load i32, i32* %r2.global-to-local, align 4
  %tmp83 = mul i32 %v1_927c, -8
  %v5_927c = add i32 %v0_927c, %tmp83
  %v1_9280 = load i32, i32* @r8, align 4
  %v2_9280 = add i32 %v5_927c, %v1_9280
  store i32 %v2_9280, i32* %r3.global-to-local, align 4
  %v1_9284 = add i32 %v2_9280, 16
  %v2_9284 = inttoptr i32 %v1_9284 to i32*
  %v3_9284 = load i32, i32* %v2_9284, align 4
  %v1_9288 = load i32, i32* %r1.global-to-local, align 4
  %v2_9288 = add i32 %v1_9288, 16
  %v3_9288 = inttoptr i32 %v2_9288 to i32*
  store i32 %v3_9284, i32* %v3_9288, align 4
  %v0_9290 = load i32, i32* %r2.global-to-local, align 4
  %v1_9290 = add i32 %v0_9290, 1
  store i32 %v1_9290, i32* @r6, align 4
  %v2_9294 = load i32, i32* %r1.global-to-local, align 4
  %v3_9294 = add i32 %v2_9294, 2
  %v4_9294 = inttoptr i32 %v3_9294 to i8*
  store i8 %v5_91d4, i8* %v4_9294, align 1
  store i32 %v4_929c, i32* %ip.global-to-local, align 4
  store i32 %v4_92a0, i32* %r0.global-to-local, align 4
  %v0_92a4 = load i32, i32* %r1.global-to-local, align 4
  %v1_92a4 = add i32 %v0_92a4, 20
  store i32 %v1_92a4, i32* %r3.global-to-local, align 4
  %v3_92a8 = add i32 %v0_92a4, 3
  %v4_92a8 = inttoptr i32 %v3_92a8 to i8*
  store i8 %v1_92a8, i8* %v4_92a8, align 1
  %v0_92ac = load i32, i32* %ip.global-to-local, align 4
  %v1_92ac = trunc i32 %v0_92ac to i8
  %v2_92ac = load i32, i32* %r1.global-to-local, align 4
  %v3_92ac = add i32 %v2_92ac, 4
  %v4_92ac = inttoptr i32 %v3_92ac to i8*
  store i8 %v1_92ac, i8* %v4_92ac, align 1
  %v0_92b0 = load i32, i32* %r0.global-to-local, align 4
  %v1_92b0 = trunc i32 %v0_92b0 to i8
  %v2_92b0 = load i32, i32* %r1.global-to-local, align 4
  %v3_92b0 = add i32 %v2_92b0, 5
  %v4_92b0 = inttoptr i32 %v3_92b0 to i8*
  store i8 %v1_92b0, i8* %v4_92b0, align 1
  %v0_92b4 = load i32, i32* @r4, align 4
  %v1_92b4 = trunc i32 %v0_92b4 to i8
  %v2_92b4 = load i32, i32* %r1.global-to-local, align 4
  %v3_92b4 = add i32 %v2_92b4, 20
  %v4_92b4 = inttoptr i32 %v3_92b4 to i8*
  store i8 %v1_92b4, i8* %v4_92b4, align 1
  store i32 %v4_92b8, i32* %r2.global-to-local, align 4
  store i32 %v4_92bc, i32* %r1.global-to-local, align 4
  store i32 %v4_92c0, i32* %ip.global-to-local, align 4
  %v0_92c4 = load i32, i32* @r6, align 4
  %v1_92c4 = load i32, i32* @sl, align 4
  %v9_92c4 = icmp eq i32 %v0_92c4, %v1_92c4
  store i1 %v9_92c4, i1* %cpsr_z.global-to-local, align 1
  %v2_92c8 = load i32, i32* %r3.global-to-local, align 4
  %v3_92c8 = add i32 %v2_92c8, 5
  %v4_92c8 = inttoptr i32 %v3_92c8 to i8*
  store i8 %v1_92c8, i8* %v4_92c8, align 1
  %v0_92cc = load i32, i32* %r2.global-to-local, align 4
  %v1_92cc = trunc i32 %v0_92cc to i8
  %v2_92cc = load i32, i32* %r3.global-to-local, align 4
  %v3_92cc = add i32 %v2_92cc, 1
  %v4_92cc = inttoptr i32 %v3_92cc to i8*
  store i8 %v1_92cc, i8* %v4_92cc, align 1
  %v0_92d0 = load i32, i32* @r5, align 4
  %v1_92d0 = trunc i32 %v0_92d0 to i8
  %v2_92d0 = load i32, i32* %r3.global-to-local, align 4
  %v3_92d0 = add i32 %v2_92d0, 2
  %v4_92d0 = inttoptr i32 %v3_92d0 to i8*
  store i8 %v1_92d0, i8* %v4_92d0, align 1
  %v0_92d4 = load i32, i32* %ip.global-to-local, align 4
  %v1_92d4 = trunc i32 %v0_92d4 to i8
  %v2_92d4 = load i32, i32* %r3.global-to-local, align 4
  %v3_92d4 = add i32 %v2_92d4, 3
  %v4_92d4 = inttoptr i32 %v3_92d4 to i8*
  store i8 %v1_92d4, i8* %v4_92d4, align 1
  %v0_92d8 = load i32, i32* @r7, align 4
  %v1_92d8 = trunc i32 %v0_92d8 to i8
  %v2_92d8 = load i32, i32* %r3.global-to-local, align 4
  %v3_92d8 = add i32 %v2_92d8, 4
  %v4_92d8 = inttoptr i32 %v3_92d8 to i8*
  store i8 %v1_92d8, i8* %v4_92d8, align 1
  %v0_92dc = load i32, i32* @r6, align 4
  store i32 %v0_92dc, i32* %stack_var_-40, align 4
  %v5_92e0 = icmp slt i32 %v0_92c4, %v1_92c4
  br i1 %v5_92e0, label %dec_label_pc_9214, label %dec_label_pc_92e4

dec_label_pc_92e4:                                ; preds = %dec_label_pc_9544, %dec_label_pc_9214, %.thread
  %v0_92e4 = load i32, i32* @sl, align 4
  %v2_92e4 = icmp eq i32 %v0_92e4, 0
  store i1 %v2_92e4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_9490 = icmp eq i32 %v3_9134, 65535
  %v2_935c = icmp eq i32 %v1_90b4, 0
  %v2_9324 = icmp eq i32 %v6_90c8, -1
  %v7_9324 = icmp eq i32 %v6_90c8, -1
  br label %dec_label_pc_92ec.outer

dec_label_pc_92ec.outer:                          ; preds = %dec_label_pc_940c, %dec_label_pc_92e4
  %v1_92ec.ph.in = phi i32 [ %v1_9400, %dec_label_pc_940c ], [ %v0_92e4, %dec_label_pc_92e4 ]
  %v0_92ec.ph = phi i1 [ %v2_940c, %dec_label_pc_940c ], [ %v2_92e4, %dec_label_pc_92e4 ]
  %v1_92ec.ph = icmp slt i32 %v1_92ec.ph.in, 0
  %v4_92ec = or i1 %v1_92ec.ph, %v0_92ec.ph
  br label %dec_label_pc_92ec

dec_label_pc_92ec:                                ; preds = %dec_label_pc_92ec.outer, %dec_label_pc_92ec
  br i1 %v4_92ec, label %dec_label_pc_92ec, label %dec_label_pc_92f0

dec_label_pc_92f0:                                ; preds = %dec_label_pc_92ec
  store i32 0, i32* %stack_var_-40, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_92fc

dec_label_pc_92fc:                                ; preds = %dec_label_pc_9364, %dec_label_pc_92f0
  %v1_9310 = phi i32 [ %v1_93fc, %dec_label_pc_9364 ], [ 0, %dec_label_pc_92f0 ]
  %v5_9300 = mul i32 %v1_9310, 24
  %v1_9304 = load i32, i32* @r8, align 4
  %v2_9304 = add i32 %v1_9304, %v5_9300
  store i32 %v2_9304, i32* %r3.global-to-local, align 4
  store i32 %v2_8fc0, i32* %ip.global-to-local, align 4
  %v1_930c = add i32 %v2_9304, 20
  %v2_930c = inttoptr i32 %v1_930c to i8*
  %v3_930c = load i8, i8* %v2_930c, align 1
  %v4_930c = zext i8 %v3_930c to i32
  store i32 %v4_930c, i32* %r2.global-to-local, align 4
  %v4_9310 = mul i32 %v1_9310, 4
  %v5_9310 = add i32 %v4_9310, %v2_8fc0
  %v6_9310 = inttoptr i32 %v5_9310 to i32*
  %v7_9310 = load i32, i32* %v6_9310, align 4
  store i32 %v7_9310, i32* @r5, align 4
  %v7_9314 = icmp eq i8 %v3_930c, 31
  store i1 %v7_9314, i1* %cpsr_z.global-to-local, align 1
  %v1_9318 = add i32 %v7_9310, 20
  store i32 %v1_9318, i32* @r6, align 4
  %tmp84 = icmp ult i8 %v3_930c, 32
  br i1 %tmp84, label %dec_label_pc_9418, label %dec_label_pc_9320

dec_label_pc_9320:                                ; preds = %dec_label_pc_92fc
  store i32 %v6_90c8, i32* %r0.global-to-local, align 4
  store i1 %v7_9324, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9324, label %dec_label_pc_9480, label %dec_label_pc_932c

dec_label_pc_932c:                                ; preds = %dec_label_pc_9418, %dec_label_pc_9320
  store i32 %v3_9134, i32* %r1.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_9490, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_9490, label %dec_label_pc_949c, label %dec_label_pc_9340

dec_label_pc_9340:                                ; preds = %dec_label_pc_9480.dec_label_pc_9340_crit_edge, %dec_label_pc_932c
  %v1_9344 = phi i32 [ %v1_9344.pre, %dec_label_pc_9480.dec_label_pc_9340_crit_edge ], [ 65535, %dec_label_pc_932c ]
  store i32 %v3_9150, i32* %r2.global-to-local, align 4
  %v9_9344 = icmp eq i32 %v3_9150, %v1_9344
  store i1 %v9_9344, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9344, label %dec_label_pc_94b8, label %dec_label_pc_934c

dec_label_pc_934c:                                ; preds = %dec_label_pc_949c.dec_label_pc_934c_crit_edge, %dec_label_pc_9340
  %v1_9350 = phi i32 [ %v1_9350.pre, %dec_label_pc_949c.dec_label_pc_934c_crit_edge ], [ %v1_9344, %dec_label_pc_9340 ]
  store i32 %v3_9154, i32* %r3.global-to-local, align 4
  %v9_9350 = icmp eq i32 %v3_9154, %v1_9350
  store i1 %v9_9350, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9350, label %dec_label_pc_94d4, label %dec_label_pc_9358

dec_label_pc_9358:                                ; preds = %dec_label_pc_94b8, %dec_label_pc_934c
  store i32 %v1_90b4, i32* %ip.global-to-local, align 4
  store i1 %v2_935c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_935c, label %dec_label_pc_9364, label %dec_label_pc_94f0

dec_label_pc_9364:                                ; preds = %dec_label_pc_9358, %dec_label_pc_94d4, %dec_label_pc_94f0
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_9368 = load i32, i32* @r7, align 4
  %v1_9368 = trunc i32 %v0_9368 to i8
  %v2_9368 = load i32, i32* @r5, align 4
  %v3_9368 = add i32 %v2_9368, 10
  %v4_9368 = inttoptr i32 %v3_9368 to i8*
  store i8 %v1_9368, i8* %v4_9368, align 1
  %v0_936c = load i32, i32* @r7, align 4
  %v1_936c = trunc i32 %v0_936c to i8
  %v2_936c = load i32, i32* @r5, align 4
  %v3_936c = add i32 %v2_936c, 11
  %v4_936c = inttoptr i32 %v3_936c to i8*
  store i8 %v1_936c, i8* %v4_936c, align 1
  %v0_9370 = load i32, i32* @r5, align 4
  store i32 %v0_9370, i32* @r0, align 4
  %v2_9374 = call i32 @function_d0b8(i32 %v0_9370, i32 20)
  %v3_9374 = trunc i32 %v2_9374 to i8
  store i32 %v2_9374, i32* %r0.global-to-local, align 4
  %v4_9378 = sdiv i32 %v2_9374, 256
  store i32 %v4_9378, i32* %r3.global-to-local, align 4
  %v1_937c = trunc i32 %v4_9378 to i8
  %v2_937c = load i32, i32* @r5, align 4
  %v3_937c = add i32 %v2_937c, 11
  %v4_937c = inttoptr i32 %v3_937c to i8*
  store i8 %v1_937c, i8* %v4_937c, align 1
  %v3_9380 = load i32, i32* @r5, align 4
  %v4_9380 = add i32 %v3_9380, 10
  %v5_9380 = inttoptr i32 %v4_9380 to i8*
  store i8 %v3_9374, i8* %v5_9380, align 1
  %v0_9384 = load i32, i32* @r7, align 4
  %v1_9384 = trunc i32 %v0_9384 to i8
  %v2_9384 = load i32, i32* @r6, align 4
  %v3_9384 = add i32 %v2_9384, 6
  %v4_9384 = inttoptr i32 %v3_9384 to i8*
  store i8 %v1_9384, i8* %v4_9384, align 1
  %v0_9388 = load i32, i32* @r7, align 4
  %v1_9388 = trunc i32 %v0_9388 to i8
  %v2_9388 = load i32, i32* @r6, align 4
  %v3_9388 = add i32 %v2_9388, 7
  %v4_9388 = inttoptr i32 %v3_9388 to i8*
  store i8 %v1_9388, i8* %v4_9388, align 1
  %v0_938c = load i32, i32* @r5, align 4
  %v1_938c = add i32 %v0_938c, 24
  %v2_938c = inttoptr i32 %v1_938c to i8*
  %v3_938c = load i8, i8* %v2_938c, align 1
  %v4_938c = zext i8 %v3_938c to i32
  store i32 %v4_938c, i32* %r3.global-to-local, align 4
  %v1_9390 = add i32 %v0_938c, 25
  %v2_9390 = inttoptr i32 %v1_9390 to i8*
  %v3_9390 = load i8, i8* %v2_9390, align 1
  %v4_9390 = zext i8 %v3_9390 to i32
  %v0_9394 = load i32, i32* @r6, align 4
  store i32 %v0_9394, i32* @r1, align 4
  %v4_9398 = mul nuw nsw i32 %v4_9390, 256
  %v5_9398 = or i32 %v4_9398, %v4_938c
  store i32 %v5_9398, i32* %r2.global-to-local, align 4
  store i32 %v0_938c, i32* %r0.global-to-local, align 4
  %v0_93a0 = load i32, i32* @sb, align 4
  store i32 %v0_93a0, i32* %r3.global-to-local, align 4
  %v4_93a4 = call i32 @function_d114(i32 %v0_938c, i32 %v0_9394, i32 %v5_9398, i32 %v0_93a0)
  %v5_93a4 = trunc i32 %v4_93a4 to i8
  store i32 %v4_93a4, i32* %r0.global-to-local, align 4
  %v4_93a838 = udiv i32 %v4_93a4, 256
  %v1_93ac = trunc i32 %v4_93a838 to i8
  %v2_93ac = load i32, i32* @r6, align 4
  %v3_93ac = add i32 %v2_93ac, 7
  %v4_93ac = inttoptr i32 %v3_93ac to i8*
  store i8 %v1_93ac, i8* %v4_93ac, align 1
  %v3_93b0 = load i32, i32* @r6, align 4
  %v4_93b0 = add i32 %v3_93b0, 6
  %v5_93b0 = inttoptr i32 %v4_93b0 to i8*
  store i8 %v5_93a4, i8* %v5_93b0, align 1
  %v3_93b4 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_93b4, i32* %r3.global-to-local, align 4
  %v0_93b8 = load i32, i32* @r5, align 4
  %v1_93b8 = add i32 %v0_93b8, 20
  %v2_93b8 = inttoptr i32 %v1_93b8 to i32*
  %v3_93b8 = load i32, i32* %v2_93b8, align 4
  %v3_93c0 = udiv i32 %v3_93b8, 65536
  store i32 %v3_93c0, i32* %r2.global-to-local, align 4
  %v5_93c4 = mul i32 %v3_93b4, 24
  %v1_93c8 = load i32, i32* @r8, align 4
  %v2_93c8 = add i32 %v1_93c8, %v5_93c4
  store i32 %v2_93c8, i32* %ip.global-to-local, align 4
  %v3_93cc35 = udiv i32 %v3_93b8, 16777216
  %v1_93d0 = trunc i32 %v3_93cc35 to i8
  %v3_93d0 = add i32 %v2_93c8, 3
  %v4_93d0 = inttoptr i32 %v3_93d0 to i8*
  store i8 %v1_93d0, i8* %v4_93d0, align 1
  %v0_93d4 = load i32, i32* %r2.global-to-local, align 4
  %v1_93d4 = trunc i32 %v0_93d4 to i8
  %v2_93d4 = load i32, i32* %ip.global-to-local, align 4
  %v3_93d4 = add i32 %v2_93d4, 2
  %v4_93d4 = inttoptr i32 %v3_93d4 to i8*
  store i8 %v1_93d4, i8* %v4_93d4, align 1
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_93dc = load i32, i32* @r5, align 4
  store i32 %v0_93dc, i32* %r1.global-to-local, align 4
  store i32 %v3_90dc, i32* %r0.global-to-local, align 4
  %v0_93e4 = load i32, i32* @fp, align 4
  store i32 %v0_93e4, i32* %r2.global-to-local, align 4
  store i32 16, i32* @r4, align 4
  %v0_93ec = load i32, i32* %ip.global-to-local, align 4
  %v6_93f4 = inttoptr i32 %v0_93dc to i32*
  %v7_93f4 = call i32 @function_1331c(i32 %v3_90dc, i32* %v6_93f4, i32 %v0_93e4, i32 16384, i32 %v0_93ec, i32 16)
  %v3_93f8 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_93f8, i32* %r3.global-to-local, align 4
  %v1_93fc = add i32 %v3_93f8, 1
  store i32 %v1_93fc, i32* %r0.global-to-local, align 4
  %v1_9400 = load i32, i32* @sl, align 4
  %v9_9400 = icmp eq i32 %v1_93fc, %v1_9400
  store i1 %v9_9400, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_93fc, i32* %stack_var_-40, align 4
  %v5_9408 = icmp slt i32 %v1_93fc, %v1_9400
  br i1 %v5_9408, label %dec_label_pc_92fc, label %dec_label_pc_940c

dec_label_pc_940c:                                ; preds = %dec_label_pc_9364
  %v2_940c = icmp eq i32 %v1_9400, 0
  store i1 %v2_940c, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_92ec.outer

dec_label_pc_9418:                                ; preds = %dec_label_pc_92fc
  %v1_9418 = add i32 %v2_9304, 16
  %v2_9418 = inttoptr i32 %v1_9418 to i32*
  %v3_9418 = load i32, i32* %v2_9418, align 4
  %v0_941c = call i32 @function_e7cc()
  store i32 %v0_941c, i32* %r0.global-to-local, align 4
  %v3_9420 = load i32, i32* %stack_var_-40, align 4
  %v5_9428 = mul i32 %v3_9420, 24
  %v1_9430 = load i32, i32* @r8, align 4
  %v2_9430 = add i32 %v1_9430, %v5_9428
  store i32 %v2_9430, i32* %r1.global-to-local, align 4
  %v1_9434 = and i32 %v3_9418, 65280
  store i32 %v1_9434, i32* %r3.global-to-local, align 4
  %v1_942c = udiv i32 %v3_9418, 256
  %v3_9438 = and i32 %v1_942c, 65280
  store i32 %v3_9438, i32* %r2.global-to-local, align 4
  %v3_943c = mul i32 %v3_9418, 16777216
  store i32 %v3_943c, i32* %ip.global-to-local, align 4
  %v1_9440 = add i32 %v2_9430, 20
  %v2_9440 = inttoptr i32 %v1_9440 to i8*
  %v3_9440 = load i8, i8* %v2_9440, align 1
  %v4_9440 = zext i8 %v3_9440 to i32
  %v4_9444 = mul nuw nsw i32 %v1_9434, 256
  %v5_9444 = or i32 %v4_9444, %v3_943c
  store i32 %v5_9444, i32* %ip.global-to-local, align 4
  %v2_944c = call i32 @llvm.bswap.i32(i32 %v3_9418)
  %v7_9450 = lshr i32 %v0_941c, %v4_9440
  %v8_9450 = add i32 %v7_9450, %v2_944c
  store i32 %v8_9450, i32* %r2.global-to-local, align 4
  %v3_945c = mul i32 %v8_9450, 16777216
  %v1_9454 = mul i32 %v8_9450, 256
  %v4_9460 = and i32 %v1_9454, 16711680
  %v5_9460 = or i32 %v4_9460, %v3_945c
  store i32 %v5_9460, i32* %r1.global-to-local, align 4
  store i32 %v6_90c8, i32* %r0.global-to-local, align 4
  %v2_9470 = call i32 @llvm.bswap.i32(i32 %v8_9450)
  store i32 %v2_9470, i32* %r3.global-to-local, align 4
  store i1 %v7_9324, i1* %cpsr_z.global-to-local, align 1
  %v1_9478 = load i32, i32* @r5, align 4
  %v2_9478 = add i32 %v1_9478, 16
  %v3_9478 = inttoptr i32 %v2_9478 to i32*
  store i32 %v2_9470, i32* %v3_9478, align 4
  br i1 %v2_9324, label %dec_label_pc_9480, label %dec_label_pc_932c

dec_label_pc_9480:                                ; preds = %dec_label_pc_9418, %dec_label_pc_9320
  %v0_9480 = call i32 @function_e7cc()
  store i32 %v0_9480, i32* %r0.global-to-local, align 4
  store i32 %v3_9134, i32* %r1.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_9490, i1* %cpsr_z.global-to-local, align 1
  %v1_9494 = load i32, i32* @r5, align 4
  %v2_9494 = add i32 %v1_9494, 12
  %v3_9494 = inttoptr i32 %v2_9494 to i32*
  store i32 %v0_9480, i32* %v3_9494, align 4
  br i1 %v3_9490, label %dec_label_pc_949c, label %dec_label_pc_9480.dec_label_pc_9340_crit_edge

dec_label_pc_9480.dec_label_pc_9340_crit_edge:    ; preds = %dec_label_pc_9480
  %v1_9344.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_9340

dec_label_pc_949c:                                ; preds = %dec_label_pc_9480, %dec_label_pc_932c
  %v0_949c = call i32 @function_e7cc()
  %v1_949c = trunc i32 %v0_949c to i8
  store i32 %v0_949c, i32* %r0.global-to-local, align 4
  store i32 %v3_9150, i32* %r2.global-to-local, align 4
  %v4_94a4 = sdiv i32 %v0_949c, 256
  store i32 %v4_94a4, i32* %r3.global-to-local, align 4
  %v1_94a8 = load i32, i32* @r4, align 4
  %v9_94a8 = icmp eq i32 %v3_9150, %v1_94a8
  store i1 %v9_94a8, i1* %cpsr_z.global-to-local, align 1
  %v1_94ac = trunc i32 %v4_94a4 to i8
  %v2_94ac = load i32, i32* @r5, align 4
  %v3_94ac = add i32 %v2_94ac, 5
  %v4_94ac = inttoptr i32 %v3_94ac to i8*
  store i8 %v1_94ac, i8* %v4_94ac, align 1
  %v3_94b0 = load i32, i32* @r5, align 4
  %v4_94b0 = add i32 %v3_94b0, 4
  %v5_94b0 = inttoptr i32 %v4_94b0 to i8*
  store i8 %v1_949c, i8* %v5_94b0, align 1
  %v0_94b4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_94b4, label %dec_label_pc_94b8, label %dec_label_pc_949c.dec_label_pc_934c_crit_edge

dec_label_pc_949c.dec_label_pc_934c_crit_edge:    ; preds = %dec_label_pc_949c
  %v1_9350.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_934c

dec_label_pc_94b8:                                ; preds = %dec_label_pc_949c, %dec_label_pc_9340
  %v0_94b8 = call i32 @function_e7cc()
  %v1_94b8 = trunc i32 %v0_94b8 to i8
  store i32 %v0_94b8, i32* %r0.global-to-local, align 4
  %v4_94bc = sdiv i32 %v0_94b8, 256
  store i32 %v4_94bc, i32* %r3.global-to-local, align 4
  %v3_94c0 = load i32, i32* @r5, align 4
  %v4_94c0 = add i32 %v3_94c0, 20
  %v5_94c0 = inttoptr i32 %v4_94c0 to i8*
  store i8 %v1_94b8, i8* %v5_94c0, align 1
  %v0_94c4 = load i32, i32* %r3.global-to-local, align 4
  %v1_94c4 = trunc i32 %v0_94c4 to i8
  %v2_94c4 = load i32, i32* @r6, align 4
  %v3_94c4 = add i32 %v2_94c4, 1
  %v4_94c4 = inttoptr i32 %v3_94c4 to i8*
  store i8 %v1_94c4, i8* %v4_94c4, align 1
  store i32 %v3_9154, i32* %r3.global-to-local, align 4
  %v1_94cc = load i32, i32* @r4, align 4
  %v9_94cc = icmp eq i32 %v3_9154, %v1_94cc
  store i1 %v9_94cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_94cc, label %dec_label_pc_94d4, label %dec_label_pc_9358

dec_label_pc_94d4:                                ; preds = %dec_label_pc_94b8, %dec_label_pc_934c
  %v0_94d4 = call i32 @function_e7cc()
  %v1_94d4 = trunc i32 %v0_94d4 to i8
  store i32 %v0_94d4, i32* %r0.global-to-local, align 4
  store i32 %v1_90b4, i32* %ip.global-to-local, align 4
  %v4_94dc = sdiv i32 %v0_94d4, 256
  store i32 %v4_94dc, i32* %r3.global-to-local, align 4
  store i1 %v2_935c, i1* %cpsr_z.global-to-local, align 1
  %v1_94e4 = trunc i32 %v4_94dc to i8
  %v2_94e4 = load i32, i32* @r6, align 4
  %v3_94e4 = add i32 %v2_94e4, 3
  %v4_94e4 = inttoptr i32 %v3_94e4 to i8*
  store i8 %v1_94e4, i8* %v4_94e4, align 1
  %v3_94e8 = load i32, i32* @r6, align 4
  %v4_94e8 = add i32 %v3_94e8, 2
  %v5_94e8 = inttoptr i32 %v4_94e8 to i8*
  store i8 %v1_94d4, i8* %v5_94e8, align 1
  %v0_94ec = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_94ec, label %dec_label_pc_9364, label %dec_label_pc_94f0

dec_label_pc_94f0:                                ; preds = %dec_label_pc_9358, %dec_label_pc_94d4
  %v0_94f0 = load i32, i32* @r5, align 4
  %v1_94f0 = add i32 %v0_94f0, 28
  store i32 %v1_94f0, i32* %r0.global-to-local, align 4
  store i32 %v0_912c, i32* @r1, align 4
  %v1_94f8 = inttoptr i32 %v1_94f0 to i8*
  %v2_94f8 = call i32 @function_e94c(i8* %v1_94f8)
  store i32 %v2_94f8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9364

dec_label_pc_9500:                                ; preds = %dec_label_pc_90ec
  store i32 %v3_90dc, i32* %r0.global-to-local, align 4
  %v1_9504 = call i32 @function_12a9c(i32 %v3_90dc)
  store i32 %v1_9504, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9508

dec_label_pc_9508:                                ; preds = %dec_label_pc_8fa0, %dec_label_pc_9500
  %v29_950c = phi i32 [ %v3_90dc, %dec_label_pc_8fa0 ], [ %v1_9504, %dec_label_pc_9500 ]
  store i32 %v18_8fa0, i32* %sb.global-to-local, align 4
  store i32 %v24_8fa0, i32* %fp.global-to-local, align 4
  ret i32 %v29_950c

dec_label_pc_9510:                                ; preds = %dec_label_pc_9170
  %v3_9514 = sext i8 %v5_91d4 to i32
  %v7_9514 = sext i8 %v5_91d8 to i32
  %v3_9518 = sdiv i32 %v3_9514, 256
  store i32 %v3_9518, i32* %r0.global-to-local, align 4
  %v3_951c = sdiv i32 %v7_9514, 256
  store i32 %v3_951c, i32* %r1.global-to-local, align 4
  store i32 %v1_91ac, i32* %r2.global-to-local, align 4
  store i32 %v1_91b0, i32* %r3.global-to-local, align 4
  %v3_952834 = udiv i32 %v1_91c8, 256
  store i32 %v3_952834, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  %v4_9594 = sext i8 %v5_9030 to i32
  %sext11 = mul i32 %v1_91a4, 16777216
  %v4_95ec = sdiv i32 %sext11, 16777216
  %sext12 = mul i32 %v0_9140, 16777216
  %v4_95f0 = sdiv i32 %sext12, 16777216
  %sext13 = mul i32 %v0_913c, 16777216
  %v4_960c = sdiv i32 %sext13, 16777216
  %v1_95f8 = trunc i32 %v3_951c to i8
  %v1_9614 = trunc i32 %v4_960c to i8
  br label %dec_label_pc_9544

dec_label_pc_9544:                                ; preds = %dec_label_pc_9544, %dec_label_pc_9510
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_9550 = call i32 @function_1366c(i32 1510, i32 1)
  store i32 %v2_9550, i32* %r0.global-to-local, align 4
  store i32 %v2_8fc0, i32* %r1.global-to-local, align 4
  %v3_9558 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_9558, i32* %r2.global-to-local, align 4
  %v2_955c = load i32, i32* @r6, align 4
  %v5_955c = mul i32 %v2_955c, 4
  %v6_955c = add i32 %v5_955c, %v2_8fc0
  %v7_955c = inttoptr i32 %v6_955c to i32*
  store i32 %v2_9550, i32* %v7_955c, align 4
  %v0_9560 = load i32, i32* %r1.global-to-local, align 4
  %v1_9560 = load i32, i32* %r2.global-to-local, align 4
  %v4_9560 = mul i32 %v1_9560, 4
  %v5_9560 = add i32 %v4_9560, %v0_9560
  %v6_9560 = inttoptr i32 %v5_9560 to i32*
  %v7_9560 = load i32, i32* %v6_9560, align 4
  store i32 %v7_9560, i32* %r1.global-to-local, align 4
  %v1_9564 = inttoptr i32 %v7_9560 to i8*
  %v2_9564 = load i8, i8* %v1_9564, align 1
  %tmp85 = urem i8 %v2_9564, 16
  %v1_9568 = zext i8 %tmp85 to i32
  %v1_956c = or i32 %v1_9568, 64
  store i32 %v1_956c, i32* %r3.global-to-local, align 4
  %v1_9570 = trunc i32 %v1_956c to i8
  store i8 %v1_9570, i8* %v1_9564, align 1
  %v0_9574 = load i32, i32* %r1.global-to-local, align 4
  %v1_9574 = inttoptr i32 %v0_9574 to i8*
  %v2_9574 = load i8, i8* %v1_9574, align 1
  %v3_9574 = zext i8 %v2_9574 to i32
  %v1_9578 = and i32 %v3_9574, 240
  %v1_957c = or i32 %v1_9578, 5
  store i32 %v1_957c, i32* %r2.global-to-local, align 4
  %v3_9584 = add i32 %v0_9574, 9
  %v4_9584 = inttoptr i32 %v3_9584 to i8*
  store i8 17, i8* %v4_9584, align 1
  %v0_9588 = load i32, i32* %r2.global-to-local, align 4
  %v1_9588 = trunc i32 %v0_9588 to i8
  %v2_9588 = load i32, i32* %r1.global-to-local, align 4
  %v3_9588 = inttoptr i32 %v2_9588 to i8*
  store i8 %v1_9588, i8* %v3_9588, align 1
  %v2_9590 = load i32, i32* %r1.global-to-local, align 4
  %v3_9590 = add i32 %v2_9590, 1
  %v4_9590 = inttoptr i32 %v3_9590 to i8*
  store i8 %v5_8ff8, i8* %v4_9590, align 1
  store i32 %v4_9594, i32* %r0.global-to-local, align 4
  %v2_9598 = load i32, i32* %r1.global-to-local, align 4
  %v3_9598 = add i32 %v2_9598, 8
  %v4_9598 = inttoptr i32 %v3_9598 to i8*
  store i8 %v5_9030, i8* %v4_9598, align 1
  %v3_959c = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_959c, i32* %r2.global-to-local, align 4
  store i32 %v6_90c8, i32* %ip.global-to-local, align 4
  %v3_95a4 = mul i32 %v3_959c, 32
  store i32 %v3_95a4, i32* %r3.global-to-local, align 4
  %v1_95a8 = load i32, i32* %r1.global-to-local, align 4
  %v2_95a8 = add i32 %v1_95a8, 12
  %v3_95a8 = inttoptr i32 %v2_95a8 to i32*
  store i32 %v6_90c8, i32* %v3_95a8, align 4
  %v0_95ac = load i32, i32* %r3.global-to-local, align 4
  %v1_95ac = load i32, i32* %r2.global-to-local, align 4
  %tmp86 = mul i32 %v1_95ac, -8
  %v5_95ac = add i32 %v0_95ac, %tmp86
  %v1_95b0 = load i32, i32* @r8, align 4
  %v2_95b0 = add i32 %v5_95ac, %v1_95b0
  store i32 %v2_95b0, i32* %r3.global-to-local, align 4
  %v1_95b4 = add i32 %v2_95b0, 16
  %v2_95b4 = inttoptr i32 %v1_95b4 to i32*
  %v3_95b4 = load i32, i32* %v2_95b4, align 4
  store i32 %v3_95b4, i32* %ip.global-to-local, align 4
  %v1_95b8 = add i32 %v1_95ac, 1
  store i32 %v1_95b8, i32* @r6, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_95c4 = load i32, i32* %r1.global-to-local, align 4
  %v3_95c4 = add i32 %v2_95c4, 6
  %v4_95c4 = inttoptr i32 %v3_95c4 to i8*
  store i8 64, i8* %v4_95c4, align 1
  %v0_95c8 = load i32, i32* %r2.global-to-local, align 4
  %v1_95c8 = trunc i32 %v0_95c8 to i8
  %v2_95c8 = load i32, i32* %r1.global-to-local, align 4
  %v3_95c8 = add i32 %v2_95c8, 7
  %v4_95c8 = inttoptr i32 %v3_95c8 to i8*
  store i8 %v1_95c8, i8* %v4_95c8, align 1
  %v0_95cc = load i32, i32* %ip.global-to-local, align 4
  %v1_95cc = load i32, i32* %r1.global-to-local, align 4
  %v2_95cc = add i32 %v1_95cc, 16
  %v3_95cc = inttoptr i32 %v2_95cc to i32*
  store i32 %v0_95cc, i32* %v3_95cc, align 4
  store i32 %v3_9518, i32* %r3.global-to-local, align 4
  store i32 %v7_9514, i32* %ip.global-to-local, align 4
  %v2_95dc = load i32, i32* %r1.global-to-local, align 4
  %v3_95dc = add i32 %v2_95dc, 2
  %v4_95dc = inttoptr i32 %v3_95dc to i8*
  store i8 %v5_91d4, i8* %v4_95dc, align 1
  %v0_95e0 = load i32, i32* %r3.global-to-local, align 4
  %v1_95e0 = trunc i32 %v0_95e0 to i8
  %v2_95e0 = load i32, i32* %r1.global-to-local, align 4
  %v3_95e0 = add i32 %v2_95e0, 3
  %v4_95e0 = inttoptr i32 %v3_95e0 to i8*
  store i8 %v1_95e0, i8* %v4_95e0, align 1
  %v0_95e4 = load i32, i32* %ip.global-to-local, align 4
  %v1_95e4 = trunc i32 %v0_95e4 to i8
  %v2_95e4 = load i32, i32* %r1.global-to-local, align 4
  %v3_95e4 = add i32 %v2_95e4, 4
  %v4_95e4 = inttoptr i32 %v3_95e4 to i8*
  store i8 %v1_95e4, i8* %v4_95e4, align 1
  store i32 %v3_951c, i32* %r2.global-to-local, align 4
  store i32 %v4_95ec, i32* %r3.global-to-local, align 4
  store i32 %v4_95f0, i32* %ip.global-to-local, align 4
  %v0_95f4 = load i32, i32* %r1.global-to-local, align 4
  %v1_95f4 = add i32 %v0_95f4, 20
  store i32 %v1_95f4, i32* %r0.global-to-local, align 4
  %v3_95f8 = add i32 %v0_95f4, 5
  %v4_95f8 = inttoptr i32 %v3_95f8 to i8*
  store i8 %v1_95f8, i8* %v4_95f8, align 1
  %v0_95fc = load i32, i32* @r4, align 4
  %v1_95fc = trunc i32 %v0_95fc to i8
  %v2_95fc = load i32, i32* %r1.global-to-local, align 4
  %v3_95fc = add i32 %v2_95fc, 20
  %v4_95fc = inttoptr i32 %v3_95fc to i8*
  store i8 %v1_95fc, i8* %v4_95fc, align 1
  %v0_9600 = load i32, i32* %r3.global-to-local, align 4
  %v1_9600 = trunc i32 %v0_9600 to i8
  %v2_9600 = load i32, i32* %r0.global-to-local, align 4
  %v3_9600 = add i32 %v2_9600, 5
  %v4_9600 = inttoptr i32 %v3_9600 to i8*
  store i8 %v1_9600, i8* %v4_9600, align 1
  %v0_9604 = load i32, i32* %ip.global-to-local, align 4
  %v1_9604 = trunc i32 %v0_9604 to i8
  %v2_9604 = load i32, i32* %r0.global-to-local, align 4
  %v3_9604 = add i32 %v2_9604, 1
  %v4_9604 = inttoptr i32 %v3_9604 to i8*
  store i8 %v1_9604, i8* %v4_9604, align 1
  %v0_9608 = load i32, i32* @r5, align 4
  %v1_9608 = trunc i32 %v0_9608 to i8
  %v2_9608 = load i32, i32* %r0.global-to-local, align 4
  %v3_9608 = add i32 %v2_9608, 2
  %v4_9608 = inttoptr i32 %v3_9608 to i8*
  store i8 %v1_9608, i8* %v4_9608, align 1
  store i32 %v4_960c, i32* %r1.global-to-local, align 4
  %v0_9610 = load i32, i32* @r6, align 4
  %v1_9610 = load i32, i32* @sl, align 4
  %v9_9610 = icmp eq i32 %v0_9610, %v1_9610
  store i1 %v9_9610, i1* %cpsr_z.global-to-local, align 1
  %v2_9614 = load i32, i32* %r0.global-to-local, align 4
  %v3_9614 = add i32 %v2_9614, 3
  %v4_9614 = inttoptr i32 %v3_9614 to i8*
  store i8 %v1_9614, i8* %v4_9614, align 1
  %v0_9618 = load i32, i32* @r7, align 4
  %v1_9618 = trunc i32 %v0_9618 to i8
  %v2_9618 = load i32, i32* %r0.global-to-local, align 4
  %v3_9618 = add i32 %v2_9618, 4
  %v4_9618 = inttoptr i32 %v3_9618 to i8*
  store i8 %v1_9618, i8* %v4_9618, align 1
  %v0_961c = load i32, i32* @r6, align 4
  store i32 %v0_961c, i32* %stack_var_-40, align 4
  %v5_9620 = icmp slt i32 %v0_9610, %v1_9610
  br i1 %v5_9620, label %dec_label_pc_9544, label %dec_label_pc_92e4

; uselistorder directives
  uselistorder i32 %v1_95ac, { 1, 0 }
  uselistorder i32 %v3_951c, { 2, 1, 0 }
  uselistorder i32 %v3_9518, { 1, 0 }
  uselistorder i32 %v7_9514, { 1, 0 }
  uselistorder i32 %v4_94dc, { 1, 0 }
  uselistorder i32 %v0_94d4, { 0, 2, 1 }
  uselistorder i32 %v0_94b8, { 0, 2, 1 }
  uselistorder i32 %v4_94a4, { 1, 0 }
  uselistorder i32 %v0_949c, { 0, 2, 1 }
  uselistorder i32 %v2_9470, { 1, 0 }
  uselistorder i32 %v8_9450, { 2, 0, 1, 3 }
  uselistorder i32 %v3_943c, { 1, 0 }
  uselistorder i32 %v3_9418, { 1, 3, 2, 0 }
  uselistorder i1 %v2_940c, { 1, 0 }
  uselistorder i32 %v1_9400, { 1, 2, 3, 0 }
  uselistorder i32 %v1_93fc, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v4_93a4, { 0, 2, 1 }
  uselistorder i32 %v0_938c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_9378, { 1, 0 }
  uselistorder i32 %v2_9374, { 0, 2, 1 }
  uselistorder i1 %v7_9324, { 2, 1, 0 }
  uselistorder i1 %v3_9490, { 1, 0, 2, 3 }
  uselistorder i8 %v5_91d4, { 0, 2, 1 }
  uselistorder i32 %v3_91c0, { 1, 0 }
  uselistorder i32 %v1_91b0, { 2, 3, 0, 1 }
  uselistorder i32 %v1_91ac, { 1, 2, 0 }
  uselistorder i32 %v1_91a4, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v1_919c, { 1, 0 }
  uselistorder i32 %v1_9174, { 2, 1, 0, 3 }
  uselistorder i32 %v3_9154, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v3_9134, { 2, 1, 4, 3, 0 }
  uselistorder i32 %v0_9130, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v0_912c, { 3, 0, 4, 1, 2 }
  uselistorder i32 %v3_9120, { 3, 1, 2, 0 }
  uselistorder i1 %v7_910c, { 1, 0 }
  uselistorder i1 %v7_90e0, { 1, 0 }
  uselistorder i32 %v3_90dc, { 1, 3, 4, 5, 6, 2, 0, 7 }
  uselistorder i32 %v6_90c8, { 2, 1, 7, 5, 0, 6, 4, 3 }
  uselistorder i32 %v1_90b4, { 3, 1, 2, 0 }
  uselistorder i32 %v1_9040, { 1, 0 }
  uselistorder i8 %v5_9030, { 1, 0, 2 }
  uselistorder i32 %v5_9014, { 1, 0 }
  uselistorder i8 %v5_8ff8, { 0, 2, 1 }
  uselistorder i32 %v6_8fd8, { 1, 0 }
  uselistorder i32 %v2_8fc0, { 0, 3, 1, 5, 2, 4 }
  uselistorder i32 %v1_8fa4, { 2, 1, 0 }
  uselistorder i32* %stack_var_-40, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 0, 14, 13 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 38, 40, 41, 42, 43, 44, 45, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 14, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 44, 46, 48, 47, 49, 50, 52, 51, 54, 53, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 11, 9, 10, 13, 12, 15, 14, 16, 17, 18, 20, 19, 22, 21, 23, 25, 24, 31, 26, 27, 28, 29, 30, 36, 32, 33, 34, 35, 1, 38, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 0 }
  uselistorder label %dec_label_pc_9508, { 1, 0 }
  uselistorder label %dec_label_pc_94f0, { 1, 0 }
  uselistorder label %dec_label_pc_9364, { 2, 1, 0 }
  uselistorder label %dec_label_pc_92ec, { 1, 0 }
  uselistorder label %bb74, { 1, 0 }
  uselistorder label %bb71, { 1, 0 }
}

define i32 @function_962c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_962c:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-50 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_962c = load i32, i32* @r4, align 4
  %v15_962c = load i32, i32* @r8, align 4
  %v21_962c = load i32, i32* @sl, align 4
  %v1_9630 = urem i32 %arg1, 256
  store i32 %v1_9630, i32* @fp, align 4
  store i32 %arg2, i32* @sb, align 4
  store i32 %v1_9630, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  %v1_9648 = urem i32 %arg3, 256
  store i32 %v1_9648, i32* @r4, align 4
  %v2_964c = call i32 @function_1366c(i32 %v1_9630, i32 4)
  %v0_9650 = load i32, i32* @r5, align 4
  store i32 %v0_9650, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_9660 = load i32, i32* @r4, align 4
  store i32 %v0_9660, i32* %r0.global-to-local, align 4
  %v5_9664 = inttoptr i32 %v0_9650 to i32*
  %v6_9664 = call i32 @function_85e0(i32 %v0_9660, i32* %v5_9664, i32 2, i32 0)
  %v1_9670 = urem i32 %v6_9664, 256
  store i32 %v1_9670, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_967c = load i32, i32* @r5, align 4
  store i32 %v0_967c, i32* %r1.global-to-local, align 4
  %v0_9680 = load i32, i32* @r4, align 4
  store i32 %v0_9680, i32* %r0.global-to-local, align 4
  %v5_9684 = trunc i32 %v6_9664 to i8
  %v6_9688 = inttoptr i32 %v0_967c to i32*
  %v7_9688 = call i32 @function_85e0(i32 %v0_9680, i32* %v6_9688, i32 3, i32 65535)
  %v0_968c = load i32, i32* @r5, align 4
  store i32 %v0_968c, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_9688, i32* @r7, align 4
  %v0_969c = load i32, i32* @r4, align 4
  store i32 %v0_969c, i32* %r0.global-to-local, align 4
  %v4_96a0 = inttoptr i32 %v0_968c to i32*
  %v5_96a0 = call i32 @function_85e0(i32 %v0_969c, i32* %v4_96a0, i32 4, i32 64)
  %v1_96a8 = urem i32 %v5_96a0, 256
  store i32 %v1_96a8, i32* %ip.global-to-local, align 4
  %v0_96ac = load i32, i32* @r5, align 4
  store i32 %v0_96ac, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_96b8 = load i32, i32* @r4, align 4
  store i32 %v0_96b8, i32* %r0.global-to-local, align 4
  %v5_96bc = trunc i32 %v5_96a0 to i8
  %v6_96c0 = inttoptr i32 %v0_96ac to i32*
  %v7_96c0 = call i32 @function_85e0(i32 %v0_96b8, i32* %v6_96c0, i32 5, i32 1)
  %v1_96cc = urem i32 %v7_96c0, 256
  store i32 %v1_96cc, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_96d8 = load i32, i32* @r5, align 4
  store i32 %v0_96d8, i32* %r1.global-to-local, align 4
  %v0_96dc = load i32, i32* @r4, align 4
  store i32 %v0_96dc, i32* %r0.global-to-local, align 4
  %v5_96e4 = inttoptr i32 %v0_96d8 to i32*
  %v6_96e4 = call i32 @function_85e0(i32 %v0_96dc, i32* %v5_96e4, i32 6, i32 65535)
  %v0_96ec = load i32, i32* @r5, align 4
  store i32 %v0_96ec, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_96e4, i32* @sl, align 4
  %v0_96fc = load i32, i32* @r4, align 4
  store i32 %v0_96fc, i32* %r0.global-to-local, align 4
  %v4_9700 = inttoptr i32 %v0_96ec to i32*
  %v5_9700 = call i32 @function_85e0(i32 %v0_96fc, i32* %v4_9700, i32 7, i32 65535)
  %v0_9704 = load i32, i32* @r5, align 4
  store i32 %v0_9704, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v5_9700, i32* @r8, align 4
  %v0_9714 = load i32, i32* @r4, align 4
  store i32 %v0_9714, i32* %r0.global-to-local, align 4
  %v4_9718 = inttoptr i32 %v0_9704 to i32*
  %v5_9718 = call i32 @function_85e0(i32 %v0_9714, i32* %v4_9718, i32 0, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_9728 = load i32, i32* @r5, align 4
  store i32 %v0_9728, i32* %r1.global-to-local, align 4
  %v0_972c = load i32, i32* @r4, align 4
  store i32 %v0_972c, i32* %r0.global-to-local, align 4
  %v4_9730 = inttoptr i32 %v0_9728 to i32*
  %v5_9730 = call i32 @function_85e0(i32 %v0_972c, i32* %v4_9730, i32 1, i32 1)
  %v1_9738 = urem i32 %v5_9730, 256
  store i32 %v1_9738, i32* %ip.global-to-local, align 4
  %v0_973c = load i32, i32* @r5, align 4
  store i32 %v0_973c, i32* %r1.global-to-local, align 4
  store i32 19, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_9748 = load i32, i32* @r4, align 4
  store i32 %v0_9748, i32* %r0.global-to-local, align 4
  %v5_9750 = inttoptr i32 %v0_973c to i32*
  %v6_9750 = call i32 @function_85e0(i32 %v0_9748, i32* %v5_9750, i32 19, i32 0)
  %v0_9758 = load i32, i32* @r5, align 4
  store i32 %v0_9758, i32* %r1.global-to-local, align 4
  %v2_975c = load i32, i32* @global_var_1da7c.49, align 4
  store i32 %v2_975c, i32* %r3.global-to-local, align 4
  store i32 %v6_9750, i32* @r6, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_9768 = load i32, i32* @r4, align 4
  store i32 %v0_9768, i32* %r0.global-to-local, align 4
  %v4_976c = inttoptr i32 %v0_9758 to i32*
  %v5_976c = call i32 @function_85e0(i32 %v0_9768, i32* %v4_976c, i32 25, i32 %v2_975c)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_9780 = call i32 @function_13380(i32 2, i32 3, i32 6)
  store i32 %v3_9780, i32* %r0.global-to-local, align 4
  %v7_9784 = icmp eq i32 %v3_9780, -1
  store i1 %v7_9784, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9784, label %dec_label_pc_9c68, label %dec_label_pc_9790

dec_label_pc_9790:                                ; preds = %dec_label_pc_962c
  store i32 1, i32* %stack_var_-40, align 4
  %v6_9798 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v6_9798, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v6_97ac = call i32 @function_13350(i32 %v3_9780, i32 0, i32 3, i32* nonnull %stack_var_-40, i32 4)
  store i32 %v6_97ac, i32* %r0.global-to-local, align 4
  %v7_97b0 = icmp eq i32 %v6_97ac, -1
  store i1 %v7_97b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_97b0, label %dec_label_pc_9c60, label %dec_label_pc_97b8

dec_label_pc_97b8:                                ; preds = %dec_label_pc_9790
  %v0_97b8 = load i32, i32* @sl, align 4
  %v3_97b8 = mul i32 %v0_97b8, 65536
  store i32 %v3_97b8, i32* %sl.global-to-local, align 4
  %v0_97bc = load i32, i32* @r8, align 4
  %v3_97bc = mul i32 %v0_97bc, 65536
  store i32 %v3_97bc, i32* %r8.global-to-local, align 4
  %v0_97c4 = load i32, i32* @r7, align 4
  %v3_97c4 = mul i32 %v0_97c4, 65536
  %v0_97c8 = load i32, i32* @r6, align 4
  %v1_97c8 = urem i32 %v0_97c8, 256
  store i32 0, i32* %stack_var_-40, align 4
  %v3_97d0 = urem i32 %v0_97c4, 65536
  store i32 %v3_97d0, i32* %r2.global-to-local, align 4
  %v3_97d4 = urem i32 %v0_97b8, 65536
  store i32 %v3_97d4, i32* %r3.global-to-local, align 4
  %v3_97d8 = urem i32 %v0_97bc, 65536
  store i32 %v3_97d8, i32* %r1.global-to-local, align 4
  %v0_97dc = load i32, i32* @fp, align 4
  %v2_97dc = icmp eq i32 %v0_97dc, 0
  store i1 %v2_97dc, i1* %cpsr_z.global-to-local, align 1
  %tmp88 = icmp slt i32 %v0_97dc, 1
  br i1 %tmp88, label %dec_label_pc_9d88, label %dec_label_pc_97fc

dec_label_pc_97fc:                                ; preds = %dec_label_pc_97b8
  %v3_9800 = mul i32 %v5_9718, 65536
  %v0_97c4.not = or i32 %v0_97c4, -65536
  %v1_9808 = xor i32 %v0_97c4.not, 65535
  %v1_9810 = add i32 %v3_9800, 4325376
  %v1_9814 = urem i32 %v0_97b8, 256
  %v3_981c = udiv i32 %v1_9810, 256
  %v1_9820 = add i32 %v3_9800, 524288
  %v1_9828 = add i32 %v3_9800, 1835008
  %v1_982c = urem i32 %v0_97bc, 256
  %v1_9830 = and i32 %v3_981c, 65280
  store i32 %v1_9830, i32* %r0.global-to-local, align 4
  %v3_9838 = udiv i32 %v1_9828, 256
  %tmp89 = mul nsw i32 %v1_9808, 256
  %v1_9850 = and i32 %v3_9838, 65280
  store i32 %v1_9850, i32* %ip.global-to-local, align 4
  %v1_9854 = and i32 %tmp89, 65280
  store i32 %v1_9854, i32* @lr, align 4
  %tmp91 = udiv i32 %v1_9808, 256
  %v4_9840 = sdiv i32 %v1_9810, 16777216
  %v5_9870 = trunc i32 %tmp91 to i8
  %v3_987c = mul nuw nsw i32 %v1_9814, 256
  %v3_9884 = ashr i32 %v1_9810, 31
  %v3_9888 = mul nuw nsw i32 %v1_982c, 256
  store i32 %v3_9888, i32* @r5, align 4
  %tmp92 = udiv i32 %v0_97b8, 256
  %v4_988c = urem i32 %tmp92, 256
  %v5_988c = or i32 %v4_988c, %v3_987c
  store i32 %v5_988c, i32* @r7, align 4
  %v3_9890 = udiv i32 %v1_9820, 256
  %tmp93 = udiv i32 %v0_97bc, 256
  %v4_9894 = urem i32 %tmp93, 256
  %v5_9894 = or i32 %v4_9894, %v3_9888
  store i32 %v5_9894, i32* %sl.global-to-local, align 4
  %v5_9898 = trunc i32 %v3_9884 to i8
  %v3_98a0 = sdiv i32 %v3_97c4, 16777216
  %v7_98a0 = sdiv i32 %v1_9828, 16777216
  %v1_98a4 = and i32 %v3_9890, 65280
  store i32 %v1_98a4, i32* @r6, align 4
  %v3_98a8 = ashr i32 %v3_97c4, 31
  %v3_98ac = ashr i32 %v1_9828, 31
  %v3_98b0 = udiv i32 %v1_9808, 65536
  %v4_98b4 = udiv i32 %v1_9820, 16777216
  %v5_98b4 = or i32 %v4_98b4, %v1_98a4
  store i32 %v5_98b4, i32* %r8.global-to-local, align 4
  store i32 %v1_9814, i32* %r1.global-to-local, align 4
  store i32 %v1_982c, i32* %r2.global-to-local, align 4
  %v3_98cc37 = udiv i32 %v1_98a4, 256
  store i32 %v3_98cc37, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v4_992c = sext i8 %v5_96bc to i32
  %v2_9a2c = icmp eq i32 %v1_97c8, 0
  %sext16 = mul i32 %v0_97b8, 16777216
  %v4_9a40 = sdiv i32 %sext16, 16777216
  %sext17 = mul i32 %v1_9820, 256
  %v4_9a54 = sdiv i32 %sext17, 16777216
  %sext18 = mul i32 %v0_97bc, 16777216
  %v4_9a5c = sdiv i32 %sext18, 16777216
  %v1_9a64 = trunc i32 %v4_9a54 to i8
  br label %dec_label_pc_98e0

dec_label_pc_98e0:                                ; preds = %bb105, %dec_label_pc_97fc
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_98ec = call i32 @function_1366c(i32 1510, i32 4)
  store i32 %v2_98ec, i32* %r0.global-to-local, align 4
  store i32 %v2_964c, i32* %r1.global-to-local, align 4
  %v3_98f4 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_98f4, i32* %r3.global-to-local, align 4
  %v2_98f8 = load i32, i32* @r4, align 4
  %v5_98f8 = mul i32 %v2_98f8, 4
  %v6_98f8 = add i32 %v5_98f8, %v2_964c
  %v7_98f8 = inttoptr i32 %v6_98f8 to i32*
  store i32 %v2_98ec, i32* %v7_98f8, align 4
  %v0_98fc = load i32, i32* %r1.global-to-local, align 4
  %v1_98fc = load i32, i32* %r3.global-to-local, align 4
  %v4_98fc = mul i32 %v1_98fc, 4
  %v5_98fc = add i32 %v4_98fc, %v0_98fc
  %v6_98fc = inttoptr i32 %v5_98fc to i32*
  %v7_98fc = load i32, i32* %v6_98fc, align 4
  store i32 %v7_98fc, i32* %r4.global-to-local, align 4
  %v1_9900 = inttoptr i32 %v7_98fc to i8*
  %v2_9900 = load i8, i8* %v1_9900, align 1
  %tmp = urem i8 %v2_9900, 16
  %v1_9904 = zext i8 %tmp to i32
  %v1_9908 = or i32 %v1_9904, 64
  store i32 %v1_9908, i32* %r2.global-to-local, align 4
  %v1_990c = trunc i32 %v1_9908 to i8
  store i8 %v1_990c, i8* %v1_9900, align 1
  %v0_9910 = load i32, i32* %r4.global-to-local, align 4
  %v1_9910 = inttoptr i32 %v0_9910 to i8*
  %v2_9910 = load i8, i8* %v1_9910, align 1
  %v1_9914 = and i8 %v2_9910, -16
  %v1_9918 = or i8 %v1_9914, 5
  store i32 %v1_96cc, i32* %r2.global-to-local, align 4
  store i8 %v1_9918, i8* %v1_9910, align 1
  %v2_9928 = load i32, i32* %r4.global-to-local, align 4
  %v3_9928 = add i32 %v2_9928, 1
  %v4_9928 = inttoptr i32 %v3_9928 to i8*
  store i8 %v5_9684, i8* %v4_9928, align 1
  store i32 %v4_992c, i32* %r1.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v2_9934 = load i32, i32* %r4.global-to-local, align 4
  %v3_9934 = add i32 %v2_9934, 8
  %v4_9934 = inttoptr i32 %v3_9934 to i8*
  store i8 %v5_96bc, i8* %v4_9934, align 1
  %v0_9938 = load i32, i32* %r2.global-to-local, align 4
  %v1_9938 = load i32, i32* %ip.global-to-local, align 4
  %v9_9938 = icmp eq i32 %v0_9938, %v1_9938
  store i1 %v9_9938, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_9884, i32* %r3.global-to-local, align 4
  store i32 %v4_9840, i32* %r2.global-to-local, align 4
  %v2_9944 = load i32, i32* %r4.global-to-local, align 4
  %v3_9944 = add i32 %v2_9944, 3
  %v4_9944 = inttoptr i32 %v3_9944 to i8*
  store i8 %v5_9898, i8* %v4_9944, align 1
  %v0_9948 = load i32, i32* %r2.global-to-local, align 4
  %v1_9948 = trunc i32 %v0_9948 to i8
  %v2_9948 = load i32, i32* %r4.global-to-local, align 4
  %v3_9948 = add i32 %v2_9948, 2
  %v4_9948 = inttoptr i32 %v3_9948 to i8*
  store i8 %v1_9948, i8* %v4_9948, align 1
  %v0_994c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_994c, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_98e0
  store i32 %v3_98a8, i32* %r2.global-to-local, align 4
  %extract.t114 = trunc i32 %v3_98a8 to i8
  br label %bb94

bb:                                               ; preds = %dec_label_pc_98e0
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v3_98a8, i32* %r2.global-to-local, align 4
  %v3_9954 = load i32, i32* %r4.global-to-local, align 4
  %v4_9954 = add i32 %v3_9954, 6
  %v5_9954 = inttoptr i32 %v4_9954 to i8*
  store i8 64, i8* %v5_9954, align 1
  %v0_995c.pre = load i32, i32* %r2.global-to-local, align 4
  %extract.t115 = trunc i32 %v0_995c.pre to i8
  br label %bb94

bb94:                                             ; preds = %.thread, %bb
  %v3_98a8.sink.off0 = phi i8 [ %extract.t114, %.thread ], [ %extract.t115, %bb ]
  store i32 47, i32* %r3.global-to-local, align 4
  %v2_995c = load i32, i32* %r4.global-to-local, align 4
  %v3_995c = add i32 %v2_995c, 5
  %v4_995c = inttoptr i32 %v3_995c to i8*
  store i8 %v3_98a8.sink.off0, i8* %v4_995c, align 1
  store i32 %v3_98a0, i32* %r1.global-to-local, align 4
  %v0_9964 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_9964, label %bb96, label %bb95

bb95:                                             ; preds = %bb94
  %v1_9964 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v1_9964, i32* %r2.global-to-local, align 4
  br label %bb96

bb96:                                             ; preds = %bb94, %bb95
  %v0_9968 = load i32, i32* %r3.global-to-local, align 4
  %v1_9968 = trunc i32 %v0_9968 to i8
  %v2_9968 = load i32, i32* %r4.global-to-local, align 4
  %v3_9968 = add i32 %v2_9968, 9
  %v4_9968 = inttoptr i32 %v3_9968 to i8*
  store i8 %v1_9968, i8* %v4_9968, align 1
  %v0_996c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_996c, label %bb98, label %bb97

bb97:                                             ; preds = %bb96
  %v1_996c = load i32, i32* %r2.global-to-local, align 4
  %v2_996c = trunc i32 %v1_996c to i8
  %v3_996c = load i32, i32* %r4.global-to-local, align 4
  %v4_996c = add i32 %v3_996c, 7
  %v5_996c = inttoptr i32 %v4_996c to i8*
  store i8 %v2_996c, i8* %v5_996c, align 1
  br label %bb98

bb98:                                             ; preds = %bb96, %bb97
  %v3_9970 = load i32, i32* %stack_var_-40, align 4
  %v5_9978 = mul i32 %v3_9970, 24
  store i32 %v5_9978, i32* %r3.global-to-local, align 4
  store i32 %v5_976c, i32* %r2.global-to-local, align 4
  %v1_9980 = load i32, i32* %r4.global-to-local, align 4
  %v2_9980 = add i32 %v1_9980, 12
  %v3_9980 = inttoptr i32 %v2_9980 to i32*
  store i32 %v5_976c, i32* %v3_9980, align 4
  %v0_9984 = load i32, i32* %r3.global-to-local, align 4
  %v1_9984 = load i32, i32* @sb, align 4
  %v2_9984 = add i32 %v1_9984, %v0_9984
  store i32 %v2_9984, i32* %r3.global-to-local, align 4
  %v1_9988 = add i32 %v2_9984, 16
  %v2_9988 = inttoptr i32 %v1_9988 to i32*
  %v3_9988 = load i32, i32* %v2_9988, align 4
  store i32 %v3_9988, i32* %r2.global-to-local, align 4
  %v0_998c = load i32, i32* %r1.global-to-local, align 4
  %v1_998c = trunc i32 %v0_998c to i8
  %v2_998c = load i32, i32* %r4.global-to-local, align 4
  %v3_998c = add i32 %v2_998c, 4
  %v4_998c = inttoptr i32 %v3_998c to i8*
  store i8 %v1_998c, i8* %v4_998c, align 1
  store i32 101, i32* %r3.global-to-local, align 4
  %v0_9994 = load i32, i32* %r4.global-to-local, align 4
  %v1_9994 = add i32 %v0_9994, 20
  store i32 %v1_9994, i32* %r1.global-to-local, align 4
  %v3_9998 = add i32 %v0_9994, 22
  %v4_9998 = inttoptr i32 %v3_9998 to i8*
  store i8 101, i8* %v4_9998, align 1
  %v0_999c = load i32, i32* %r2.global-to-local, align 4
  %v1_999c = load i32, i32* %r4.global-to-local, align 4
  %v2_999c = add i32 %v1_999c, 16
  %v3_999c = inttoptr i32 %v2_999c to i32*
  store i32 %v0_999c, i32* %v3_999c, align 4
  %v0_99a0 = load i32, i32* %r4.global-to-local, align 4
  %v1_99a0 = add i32 %v0_99a0, 24
  store i32 %v1_99a0, i32* %r0.global-to-local, align 4
  store i32 88, i32* %r2.global-to-local, align 4
  %v0_99a8 = load i32, i32* %r3.global-to-local, align 4
  %v1_99a8 = add i32 %v0_99a8, -93
  store i32 %v1_99a8, i32* %r3.global-to-local, align 4
  %v2_99ac = load i32, i32* %r1.global-to-local, align 4
  %v3_99ac = add i32 %v2_99ac, 3
  %v4_99ac = inttoptr i32 %v3_99ac to i8*
  store i8 88, i8* %v4_99ac, align 1
  %v0_99b0 = load i32, i32* %r3.global-to-local, align 4
  %v1_99b0 = trunc i32 %v0_99b0 to i8
  %v2_99b0 = load i32, i32* %r0.global-to-local, align 4
  %v3_99b0 = add i32 %v2_99b0, 12
  %v4_99b0 = inttoptr i32 %v3_99b0 to i8*
  store i8 %v1_99b0, i8* %v4_99b0, align 1
  %v0_99b4 = load i32, i32* %ip.global-to-local, align 4
  %v1_99b4 = trunc i32 %v0_99b4 to i8
  %v2_99b4 = load i32, i32* %r0.global-to-local, align 4
  %v3_99b4 = add i32 %v2_99b4, 13
  %v4_99b4 = inttoptr i32 %v3_99b4 to i8*
  store i8 %v1_99b4, i8* %v4_99b4, align 1
  %v0_99b8 = load i32, i32* %r4.global-to-local, align 4
  %v1_99b8 = add i32 %v0_99b8, 38
  %v2_99b8 = inttoptr i32 %v1_99b8 to i8*
  %v3_99b8 = load i8, i8* %v2_99b8, align 1
  %tmp116 = urem i8 %v3_99b8, 16
  %v1_99bc = zext i8 %tmp116 to i32
  %v1_99c0 = or i32 %v1_99bc, 64
  store i32 %v1_99c0, i32* %r3.global-to-local, align 4
  %v1_99c4 = trunc i32 %v1_99c0 to i8
  store i8 %v1_99c4, i8* %v2_99b8, align 1
  %v0_99c8 = load i32, i32* %r4.global-to-local, align 4
  %v1_99c8 = add i32 %v0_99c8, 38
  %v2_99c8 = inttoptr i32 %v1_99c8 to i8*
  %v3_99c8 = load i8, i8* %v2_99c8, align 1
  %v1_99cc = and i8 %v3_99c8, -16
  %v1_99d0 = or i8 %v1_99cc, 5
  store i8 %v1_99d0, i8* %v2_99c8, align 1
  %v0_99dc = load i32, i32* %r4.global-to-local, align 4
  %v1_99dc = add i32 %v0_99dc, 38
  store i32 %v1_99dc, i32* @r5, align 4
  %v3_99e0 = add i32 %v0_99dc, 39
  %v4_99e0 = inttoptr i32 %v3_99e0 to i8*
  store i8 %v5_9684, i8* %v4_99e0, align 1
  store i32 %v7_98a0, i32* %r1.global-to-local, align 4
  store i32 %tmp91, i32* %r3.global-to-local, align 4
  store i32 %v3_98ac, i32* %r2.global-to-local, align 4
  %v2_99f0 = load i32, i32* @r5, align 4
  %v3_99f0 = add i32 %v2_99f0, 4
  %v4_99f0 = inttoptr i32 %v3_99f0 to i8*
  store i8 %v5_9870, i8* %v4_99f0, align 1
  %v0_99f4 = load i32, i32* %r1.global-to-local, align 4
  %v1_99f4 = trunc i32 %v0_99f4 to i8
  %v2_99f4 = load i32, i32* @r5, align 4
  %v3_99f4 = add i32 %v2_99f4, 2
  %v4_99f4 = inttoptr i32 %v3_99f4 to i8*
  store i8 %v1_99f4, i8* %v4_99f4, align 1
  %v0_99f8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_99f8, label %bb100, label %bb99

bb99:                                             ; preds = %bb98
  store i32 64, i32* %r3.global-to-local, align 4
  br label %bb100

bb100:                                            ; preds = %bb98, %bb99
  store i32 %v3_98b0, i32* %r1.global-to-local, align 4
  %v0_9a00 = load i32, i32* %r2.global-to-local, align 4
  %v1_9a00 = trunc i32 %v0_9a00 to i8
  %v2_9a00 = load i32, i32* @r5, align 4
  %v3_9a00 = add i32 %v2_9a00, 3
  %v4_9a00 = inttoptr i32 %v3_9a00 to i8*
  store i8 %v1_9a00, i8* %v4_9a00, align 1
  store i32 %v4_992c, i32* %r2.global-to-local, align 4
  %v0_9a08 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_9a08, label %bb102, label %bb101

bb101:                                            ; preds = %bb100
  %v1_9a08 = load i32, i32* %r3.global-to-local, align 4
  %v2_9a08 = trunc i32 %v1_9a08 to i8
  %v3_9a08 = load i32, i32* @r5, align 4
  %v4_9a08 = add i32 %v3_9a08, 6
  %v5_9a08 = inttoptr i32 %v4_9a08 to i8*
  store i8 %v2_9a08, i8* %v5_9a08, align 1
  br label %bb102

bb102:                                            ; preds = %bb100, %bb101
  store i32 17, i32* %r3.global-to-local, align 4
  %v0_9a10 = load i32, i32* %r1.global-to-local, align 4
  %v1_9a10 = trunc i32 %v0_9a10 to i8
  %v2_9a10 = load i32, i32* @r5, align 4
  %v3_9a10 = add i32 %v2_9a10, 5
  %v4_9a10 = inttoptr i32 %v3_9a10 to i8*
  store i8 %v1_9a10, i8* %v4_9a10, align 1
  %v0_9a14 = load i32, i32* %r2.global-to-local, align 4
  %v1_9a14 = trunc i32 %v0_9a14 to i8
  %v2_9a14 = load i32, i32* @r5, align 4
  %v3_9a14 = add i32 %v2_9a14, 8
  %v4_9a14 = inttoptr i32 %v3_9a14 to i8*
  store i8 %v1_9a14, i8* %v4_9a14, align 1
  %v0_9a18 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_9a18, label %bb104, label %bb103

bb103:                                            ; preds = %bb102
  %v1_9a18 = load i32, i32* %ip.global-to-local, align 4
  %v2_9a18 = trunc i32 %v1_9a18 to i8
  %v3_9a18 = load i32, i32* @r5, align 4
  %v4_9a18 = add i32 %v3_9a18, 7
  %v5_9a18 = inttoptr i32 %v4_9a18 to i8*
  store i8 %v2_9a18, i8* %v5_9a18, align 1
  br label %bb104

bb104:                                            ; preds = %bb102, %bb103
  %v0_9a1c = load i32, i32* %r3.global-to-local, align 4
  %v1_9a1c = trunc i32 %v0_9a1c to i8
  %v2_9a1c = load i32, i32* @r5, align 4
  %v3_9a1c = add i32 %v2_9a1c, 9
  %v4_9a1c = inttoptr i32 %v3_9a1c to i8*
  store i8 %v1_9a1c, i8* %v4_9a1c, align 1
  %v0_9a20 = call i32 @function_e7cc()
  store i32 %v0_9a20, i32* %r0.global-to-local, align 4
  store i32 %v1_97c8, i32* %r1.global-to-local, align 4
  store i1 %v2_9a2c, i1* %cpsr_z.global-to-local, align 1
  %v1_9a30 = sub i32 1023, %v0_9a20
  store i32 %v1_9a30, i32* %r3.global-to-local, align 4
  br i1 %v2_9a2c, label %.thread21, label %.thread22

.thread21:                                        ; preds = %bb104
  %v2_9a38 = load i32, i32* @r5, align 4
  %v3_9a38 = add i32 %v2_9a38, 16
  %v4_9a38 = inttoptr i32 %v3_9a38 to i32*
  store i32 %v1_9a30, i32* %v4_9a38, align 4
  br label %bb105

.thread22:                                        ; preds = %bb104
  %v1_9a34 = load i32, i32* %r4.global-to-local, align 4
  %v2_9a34 = add i32 %v1_9a34, 16
  %v3_9a34 = inttoptr i32 %v2_9a34 to i32*
  %v4_9a34 = load i32, i32* %v3_9a34, align 4
  store i32 %v4_9a34, i32* %r3.global-to-local, align 4
  %v2_9a3c = load i32, i32* @r5, align 4
  %v3_9a3c = add i32 %v2_9a3c, 16
  %v4_9a3c = inttoptr i32 %v3_9a3c to i32*
  store i32 %v4_9a34, i32* %v4_9a3c, align 4
  br label %bb105

bb105:                                            ; preds = %.thread21, %.thread22
  store i32 %v4_9a40, i32* %r3.global-to-local, align 4
  %v0_9a44 = load i32, i32* %r4.global-to-local, align 4
  %v1_9a44 = add i32 %v0_9a44, 58
  store i32 %v1_9a44, i32* @r6, align 4
  %v1_9a48 = load i32, i32* @r5, align 4
  %v2_9a48 = add i32 %v1_9a48, 12
  %v3_9a48 = inttoptr i32 %v2_9a48 to i32*
  store i32 %v0_9a20, i32* %v3_9a48, align 4
  %v0_9a4c = load i32, i32* %r3.global-to-local, align 4
  %v1_9a4c = trunc i32 %v0_9a4c to i8
  %v2_9a4c = load i32, i32* @r6, align 4
  %v3_9a4c = add i32 %v2_9a4c, 1
  %v4_9a4c = inttoptr i32 %v3_9a4c to i8*
  store i8 %v1_9a4c, i8* %v4_9a4c, align 1
  %v3_9a50 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_9a50, i32* %r3.global-to-local, align 4
  store i32 %v4_9a54, i32* %r2.global-to-local, align 4
  %v1_9a58 = add i32 %v3_9a50, 1
  store i32 %v1_9a58, i32* @r4, align 4
  store i32 %v4_9a5c, i32* %r1.global-to-local, align 4
  %v1_9a60 = load i32, i32* @fp, align 4
  %v9_9a60 = icmp eq i32 %v1_9a58, %v1_9a60
  store i1 %v9_9a60, i1* %cpsr_z.global-to-local, align 1
  %v2_9a64 = load i32, i32* @r6, align 4
  %v3_9a64 = add i32 %v2_9a64, 5
  %v4_9a64 = inttoptr i32 %v3_9a64 to i8*
  store i8 %v1_9a64, i8* %v4_9a64, align 1
  %v0_9a68 = load i32, i32* @r7, align 4
  %v1_9a68 = trunc i32 %v0_9a68 to i8
  %v2_9a68 = load i32, i32* @r6, align 4
  %v3_9a68 = inttoptr i32 %v2_9a68 to i8*
  store i8 %v1_9a68, i8* %v3_9a68, align 1
  %v0_9a6c = load i32, i32* %sl.global-to-local, align 4
  %v1_9a6c = trunc i32 %v0_9a6c to i8
  %v2_9a6c = load i32, i32* @r6, align 4
  %v3_9a6c = add i32 %v2_9a6c, 2
  %v4_9a6c = inttoptr i32 %v3_9a6c to i8*
  store i8 %v1_9a6c, i8* %v4_9a6c, align 1
  %v0_9a70 = load i32, i32* %r1.global-to-local, align 4
  %v1_9a70 = trunc i32 %v0_9a70 to i8
  %v2_9a70 = load i32, i32* @r6, align 4
  %v3_9a70 = add i32 %v2_9a70, 3
  %v4_9a70 = inttoptr i32 %v3_9a70 to i8*
  store i8 %v1_9a70, i8* %v4_9a70, align 1
  %v0_9a74 = load i32, i32* %r8.global-to-local, align 4
  %v1_9a74 = trunc i32 %v0_9a74 to i8
  %v2_9a74 = load i32, i32* @r6, align 4
  %v3_9a74 = add i32 %v2_9a74, 4
  %v4_9a74 = inttoptr i32 %v3_9a74 to i8*
  store i8 %v1_9a74, i8* %v4_9a74, align 1
  %v0_9a78 = load i32, i32* @r4, align 4
  store i32 %v0_9a78, i32* %stack_var_-40, align 4
  %v5_9a7c = icmp slt i32 %v1_9a58, %v1_9a60
  br i1 %v5_9a7c, label %dec_label_pc_98e0, label %dec_label_pc_9a80

dec_label_pc_9a80:                                ; preds = %bb105
  %v1_9a88 = add i32 %v5_9718, 8
  store i32 %v1_9a88, i32* %r2.global-to-local, align 4
  %v1_9a8c = add i32 %v5_9718, 66
  store i32 %v1_9a8c, i32* %r3.global-to-local, align 4
  %v0_9a98.pre.pre = load i32, i32* @fp, align 4
  br label %dec_label_pc_9a98.preheader

dec_label_pc_9a98.preheader:                      ; preds = %dec_label_pc_9a80, %dec_label_pc_9d88
  %v0_9a98.pre = phi i32 [ %v0_9a98.pre.pre, %dec_label_pc_9a80 ], [ %v0_97dc, %dec_label_pc_9d88 ]
  %stack_var_-160.0.ph = phi i32 [ %v1_9a8c, %dec_label_pc_9a80 ], [ %v1_9d94, %dec_label_pc_9d88 ]
  %stack_var_-156.0.ph = phi i32 [ %v1_9a88, %dec_label_pc_9a80 ], [ %v1_9d90, %dec_label_pc_9d88 ]
  %v3_9ce8 = icmp eq i32 %v3_97d0, 65535
  %v2_9d58 = icmp eq i32 %v1_97c8, 0
  %v2_9b3c = ptrtoint i32* %stack_var_-44 to i32
  %v2_9b54 = ptrtoint i32* %stack_var_-48 to i32
  %v2_9b64 = ptrtoint i32* %stack_var_-52 to i32
  %v2_9b70 = ptrtoint i32* %stack_var_-50 to i32
  %v2_9b84 = icmp eq i32 %v1_9738, 0
  %v2_9ae0 = icmp eq i32 %v5_976c, -1
  %v7_9ae0 = icmp eq i32 %v5_976c, -1
  br label %dec_label_pc_9a98

dec_label_pc_9a98:                                ; preds = %dec_label_pc_9b8c, %dec_label_pc_9a98.preheader
  %v0_9a98 = phi i32 [ %v0_9a98.pre, %dec_label_pc_9a98.preheader ], [ %v1_9c50, %dec_label_pc_9b8c ]
  %v2_9a98 = icmp eq i32 %v0_9a98, 0
  store i1 %v2_9a98, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  %tmp106 = icmp slt i32 %v0_9a98, 1
  br label %dec_label_pc_9aa0

dec_label_pc_9aa0:                                ; preds = %dec_label_pc_9aa0, %dec_label_pc_9a98
  br i1 %tmp106, label %dec_label_pc_9aa0, label %dec_label_pc_9aa4

dec_label_pc_9aa4:                                ; preds = %dec_label_pc_9aa0
  store i32 0, i32* %stack_var_-40, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @sl, align 4
  br label %dec_label_pc_9ab0

dec_label_pc_9ab0:                                ; preds = %dec_label_pc_9b8c, %dec_label_pc_9aa4
  %v1_9ac4 = phi i32 [ %v1_9c4c, %dec_label_pc_9b8c ], [ 0, %dec_label_pc_9aa4 ]
  %v5_9ab4 = mul i32 %v1_9ac4, 24
  %v1_9ab8 = load i32, i32* @sb, align 4
  %v2_9ab8 = add i32 %v1_9ab8, %v5_9ab4
  store i32 %v2_9ab8, i32* %r3.global-to-local, align 4
  store i32 %v2_964c, i32* %r1.global-to-local, align 4
  %v1_9ac0 = add i32 %v2_9ab8, 20
  %v2_9ac0 = inttoptr i32 %v1_9ac0 to i8*
  %v3_9ac0 = load i8, i8* %v2_9ac0, align 1
  %v4_9ac0 = zext i8 %v3_9ac0 to i32
  store i32 %v4_9ac0, i32* %r2.global-to-local, align 4
  %v4_9ac4 = mul i32 %v1_9ac4, 4
  %v5_9ac4 = add i32 %v4_9ac4, %v2_964c
  %v6_9ac4 = inttoptr i32 %v5_9ac4 to i32*
  %v7_9ac4 = load i32, i32* %v6_9ac4, align 4
  store i32 %v7_9ac4, i32* @r5, align 4
  %v7_9ac8 = icmp eq i8 %v3_9ac0, 31
  store i1 %v7_9ac8, i1* %cpsr_z.global-to-local, align 1
  %v1_9acc = add i32 %v7_9ac4, 24
  store i32 %v1_9acc, i32* @r8, align 4
  %v1_9ad0 = add i32 %v7_9ac4, 38
  store i32 %v1_9ad0, i32* @r6, align 4
  %v1_9ad4 = add i32 %v7_9ac4, 58
  store i32 %v1_9ad4, i32* @r7, align 4
  %tmp117 = icmp ult i8 %v3_9ac0, 32
  br i1 %tmp117, label %dec_label_pc_9c70, label %dec_label_pc_9adc

dec_label_pc_9adc:                                ; preds = %dec_label_pc_9ab0
  store i32 %v5_976c, i32* %r2.global-to-local, align 4
  store i1 %v7_9ae0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9ae0, label %dec_label_pc_9cd8, label %dec_label_pc_9ae8

dec_label_pc_9ae8:                                ; preds = %dec_label_pc_9c70, %dec_label_pc_9adc
  store i32 %v3_97d0, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_9ce8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_9ce8, label %dec_label_pc_9cf4, label %dec_label_pc_9afc

dec_label_pc_9afc:                                ; preds = %dec_label_pc_9cd8.dec_label_pc_9afc_crit_edge, %dec_label_pc_9ae8
  %v1_9b00 = phi i32 [ %v1_9b00.pre, %dec_label_pc_9cd8.dec_label_pc_9afc_crit_edge ], [ 65535, %dec_label_pc_9ae8 ]
  store i32 %v3_97d4, i32* %r1.global-to-local, align 4
  %v9_9b00 = icmp eq i32 %v3_97d4, %v1_9b00
  store i1 %v9_9b00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9b00, label %dec_label_pc_9d2c, label %dec_label_pc_9b08

dec_label_pc_9b08:                                ; preds = %dec_label_pc_9cf4.dec_label_pc_9b08_crit_edge, %dec_label_pc_9afc
  %v1_9b0c = phi i32 [ %v1_9b0c.pre, %dec_label_pc_9cf4.dec_label_pc_9b08_crit_edge ], [ %v1_9b00, %dec_label_pc_9afc ]
  store i32 %v3_97d8, i32* %r2.global-to-local, align 4
  %v9_9b0c = icmp eq i32 %v3_97d8, %v1_9b0c
  store i1 %v9_9b0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9b0c, label %dec_label_pc_9d48, label %dec_label_pc_9b14

dec_label_pc_9b14:                                ; preds = %dec_label_pc_9d2c, %dec_label_pc_9b08
  store i32 %v1_97c8, i32* %r3.global-to-local, align 4
  store i1 %v2_9d58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9d58, label %dec_label_pc_9d6c, label %.thread23

.thread23:                                        ; preds = %dec_label_pc_9b14
  %v1_9b1c = load i32, i32* @r5, align 4
  %v2_9b1c = add i32 %v1_9b1c, 16
  %v3_9b1c = inttoptr i32 %v2_9b1c to i32*
  %v4_9b1c = load i32, i32* %v3_9b1c, align 4
  store i32 %v4_9b1c, i32* %r3.global-to-local, align 4
  %v2_9b20 = load i32, i32* @r6, align 4
  %v3_9b20 = add i32 %v2_9b20, 16
  %v4_9b20 = inttoptr i32 %v3_9b20 to i32*
  store i32 %v4_9b1c, i32* %v4_9b20, align 4
  br label %dec_label_pc_9b28

dec_label_pc_9b28:                                ; preds = %bb109, %.thread23, %dec_label_pc_9d6c
  %v0_9b28 = call i32 @function_e7cc()
  store i32 %v0_9b28, i32* %r0.global-to-local, align 4
  store i32 %v0_9b28, i32* %stack_var_-44, align 4
  %v0_9b30 = call i32 @function_e7cc()
  store i32 %v0_9b30, i32* %r0.global-to-local, align 4
  store i32 %v0_9b30, i32* %stack_var_-48, align 4
  %v0_9b38 = call i32 @function_e7cc()
  store i32 %v2_9b3c, i32* %r1.global-to-local, align 4
  store i32 %v0_9b38, i32* %stack_var_-52, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v0_9b48 = load i32, i32* @r8, align 4
  store i32 %v0_9b48, i32* %r0.global-to-local, align 4
  %v3_9b4c = call i32 @function_12214(i32 %v0_9b48, i32 %v2_9b3c, i32 4)
  %v0_9b50 = load i32, i32* @r8, align 4
  %v1_9b50 = add i32 %v0_9b50, 6
  store i32 %v1_9b50, i32* %r0.global-to-local, align 4
  store i32 %v2_9b54, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v3_9b5c = call i32 @function_12214(i32 %v1_9b50, i32 %v2_9b54, i32 4)
  %v0_9b60 = load i32, i32* @r8, align 4
  %v1_9b60 = add i32 %v0_9b60, 4
  store i32 %v1_9b60, i32* %r0.global-to-local, align 4
  store i32 %v2_9b64, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v3_9b6c = call i32 @function_12214(i32 %v1_9b60, i32 %v2_9b64, i32 2)
  store i32 %v2_9b70, i32* %r1.global-to-local, align 4
  %v0_9b74 = load i32, i32* @r8, align 4
  %v1_9b74 = add i32 %v0_9b74, 10
  store i32 %v1_9b74, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v3_9b7c = call i32 @function_12214(i32 %v1_9b74, i32 %v2_9b70, i32 2)
  store i32 %v3_9b7c, i32* %r0.global-to-local, align 4
  store i32 %v1_9738, i32* %r1.global-to-local, align 4
  store i1 %v2_9b84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9b84, label %dec_label_pc_9b8c, label %dec_label_pc_9d78

dec_label_pc_9b8c:                                ; preds = %dec_label_pc_9b28, %dec_label_pc_9d78
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_9b90 = load i32, i32* @sl, align 4
  %v1_9b90 = trunc i32 %v0_9b90 to i8
  %v2_9b90 = load i32, i32* @r5, align 4
  %v3_9b90 = add i32 %v2_9b90, 10
  %v4_9b90 = inttoptr i32 %v3_9b90 to i8*
  store i8 %v1_9b90, i8* %v4_9b90, align 1
  %v0_9b94 = load i32, i32* @sl, align 4
  %v1_9b94 = trunc i32 %v0_9b94 to i8
  %v2_9b94 = load i32, i32* @r5, align 4
  %v3_9b94 = add i32 %v2_9b94, 11
  %v4_9b94 = inttoptr i32 %v3_9b94 to i8*
  store i8 %v1_9b94, i8* %v4_9b94, align 1
  %v0_9b98 = load i32, i32* @r5, align 4
  store i32 %v0_9b98, i32* @r0, align 4
  %v2_9b9c = call i32 @function_d0b8(i32 %v0_9b98, i32 20)
  %v3_9b9c = trunc i32 %v2_9b9c to i8
  %v4_9ba0 = sdiv i32 %v2_9b9c, 256
  store i32 %v4_9ba0, i32* %r3.global-to-local, align 4
  %v1_9ba4 = trunc i32 %v4_9ba0 to i8
  %v2_9ba4 = load i32, i32* @r5, align 4
  %v3_9ba4 = add i32 %v2_9ba4, 11
  %v4_9ba4 = inttoptr i32 %v3_9ba4 to i8*
  store i8 %v1_9ba4, i8* %v4_9ba4, align 1
  %v3_9ba8 = load i32, i32* @r5, align 4
  %v4_9ba8 = add i32 %v3_9ba8, 10
  %v5_9ba8 = inttoptr i32 %v4_9ba8 to i8*
  store i8 %v3_9b9c, i8* %v5_9ba8, align 1
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_9bb0 = load i32, i32* @sl, align 4
  %v1_9bb0 = trunc i32 %v0_9bb0 to i8
  %v2_9bb0 = load i32, i32* @r6, align 4
  %v3_9bb0 = add i32 %v2_9bb0, 10
  %v4_9bb0 = inttoptr i32 %v3_9bb0 to i8*
  store i8 %v1_9bb0, i8* %v4_9bb0, align 1
  %v0_9bb4 = load i32, i32* @sl, align 4
  %v1_9bb4 = trunc i32 %v0_9bb4 to i8
  %v2_9bb4 = load i32, i32* @r6, align 4
  %v3_9bb4 = add i32 %v2_9bb4, 11
  %v4_9bb4 = inttoptr i32 %v3_9bb4 to i8*
  store i8 %v1_9bb4, i8* %v4_9bb4, align 1
  %v0_9bb8 = load i32, i32* @r6, align 4
  store i32 %v0_9bb8, i32* @r0, align 4
  %v2_9bbc = call i32 @function_d0b8(i32 %v0_9bb8, i32 20)
  %v3_9bbc = trunc i32 %v2_9bbc to i8
  store i32 %v2_9bbc, i32* %r0.global-to-local, align 4
  %v4_9bc0 = sdiv i32 %v2_9bbc, 256
  store i32 %v4_9bc0, i32* %r3.global-to-local, align 4
  %v3_9bc4 = load i32, i32* @r6, align 4
  %v4_9bc4 = add i32 %v3_9bc4, 10
  %v5_9bc4 = inttoptr i32 %v4_9bc4 to i8*
  store i8 %v3_9bbc, i8* %v5_9bc4, align 1
  %v0_9bc8 = load i32, i32* %r3.global-to-local, align 4
  %v1_9bc8 = trunc i32 %v0_9bc8 to i8
  %v2_9bc8 = load i32, i32* @r6, align 4
  %v3_9bc8 = add i32 %v2_9bc8, 11
  %v4_9bc8 = inttoptr i32 %v3_9bc8 to i8*
  store i8 %v1_9bc8, i8* %v4_9bc8, align 1
  %v0_9bcc = load i32, i32* @r7, align 4
  %v1_9bcc = add i32 %v0_9bcc, 4
  %v2_9bcc = inttoptr i32 %v1_9bcc to i8*
  %v3_9bcc = load i8, i8* %v2_9bcc, align 1
  %v4_9bcc = zext i8 %v3_9bcc to i32
  store i32 %v4_9bcc, i32* %r3.global-to-local, align 4
  %v1_9bd0 = add i32 %v0_9bcc, 5
  %v2_9bd0 = inttoptr i32 %v1_9bd0 to i8*
  %v3_9bd0 = load i8, i8* %v2_9bd0, align 1
  %v4_9bd0 = zext i8 %v3_9bd0 to i32
  store i32 %v0_9bcc, i32* @r1, align 4
  %v4_9bd8 = mul nuw nsw i32 %v4_9bd0, 256
  %v5_9bd8 = or i32 %v4_9bd8, %v4_9bcc
  store i32 %v5_9bd8, i32* %r2.global-to-local, align 4
  %v0_9bdc = load i32, i32* @sl, align 4
  %v1_9bdc = trunc i32 %v0_9bdc to i8
  %v3_9bdc = add i32 %v0_9bcc, 6
  %v4_9bdc = inttoptr i32 %v3_9bdc to i8*
  store i8 %v1_9bdc, i8* %v4_9bdc, align 1
  store i32 %stack_var_-156.0.ph, i32* %r3.global-to-local, align 4
  %v0_9be4 = load i32, i32* @sl, align 4
  %v1_9be4 = trunc i32 %v0_9be4 to i8
  %v2_9be4 = load i32, i32* @r7, align 4
  %v3_9be4 = add i32 %v2_9be4, 7
  %v4_9be4 = inttoptr i32 %v3_9be4 to i8*
  store i8 %v1_9be4, i8* %v4_9be4, align 1
  %v0_9be8 = load i32, i32* @r6, align 4
  store i32 %v0_9be8, i32* %r0.global-to-local, align 4
  %v4_9bec = call i32 @function_d114(i32 %v0_9be8, i32 %v0_9bcc, i32 %v5_9bd8, i32 %stack_var_-156.0.ph)
  %v5_9bec = trunc i32 %v4_9bec to i8
  store i32 %v4_9bec, i32* %r0.global-to-local, align 4
  %v3_9bf0 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_9bf0, i32* %r3.global-to-local, align 4
  %v3_9bf4 = mul i32 %v3_9bf0, 32
  store i32 %v3_9bf4, i32* %r2.global-to-local, align 4
  %v0_9bf8 = load i32, i32* @r5, align 4
  %v1_9bf8 = add i32 %v0_9bf8, 16
  %v2_9bf8 = inttoptr i32 %v1_9bf8 to i32*
  %v3_9bf8 = load i32, i32* %v2_9bf8, align 4
  store i32 %v3_9bf8, i32* %r1.global-to-local, align 4
  %v5_9bfc = mul i32 %v3_9bf0, 24
  store i32 %v5_9bfc, i32* %r2.global-to-local, align 4
  %v4_9c0042 = udiv i32 %v4_9bec, 256
  %v1_9c04 = trunc i32 %v4_9c0042 to i8
  %v2_9c04 = load i32, i32* @r7, align 4
  %v3_9c04 = add i32 %v2_9c04, 7
  %v4_9c04 = inttoptr i32 %v3_9c04 to i8*
  store i8 %v1_9c04, i8* %v4_9c04, align 1
  %v0_9c08 = load i32, i32* %r2.global-to-local, align 4
  %v1_9c08 = load i32, i32* @sb, align 4
  %v2_9c08 = add i32 %v1_9c08, %v0_9c08
  store i32 %v2_9c08, i32* %lr.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v3_9c10 = load i32, i32* @r7, align 4
  %v4_9c10 = add i32 %v3_9c10, 6
  %v5_9c10 = inttoptr i32 %v4_9c10 to i8*
  store i8 %v5_9bec, i8* %v5_9c10, align 1
  %v0_9c14 = load i32, i32* %r1.global-to-local, align 4
  %v1_9c14 = load i32, i32* %lr.global-to-local, align 4
  %v2_9c14 = add i32 %v1_9c14, 4
  %v3_9c14 = inttoptr i32 %v2_9c14 to i32*
  store i32 %v0_9c14, i32* %v3_9c14, align 4
  %v0_9c18 = load i32, i32* %r3.global-to-local, align 4
  %v1_9c18 = trunc i32 %v0_9c18 to i8
  %v2_9c18 = load i32, i32* %r2.global-to-local, align 4
  %v3_9c18 = load i32, i32* @sb, align 4
  %v4_9c18 = add i32 %v3_9c18, %v2_9c18
  %v5_9c18 = inttoptr i32 %v4_9c18 to i8*
  store i8 %v1_9c18, i8* %v5_9c18, align 1
  %v0_9c1c = load i32, i32* @sl, align 4
  %v1_9c1c = trunc i32 %v0_9c1c to i8
  %v2_9c1c = load i32, i32* %lr.global-to-local, align 4
  %v3_9c1c = add i32 %v2_9c1c, 2
  %v4_9c1c = inttoptr i32 %v3_9c1c to i8*
  store i8 %v1_9c1c, i8* %v4_9c1c, align 1
  %v0_9c20 = load i32, i32* @sl, align 4
  %v1_9c20 = trunc i32 %v0_9c20 to i8
  %v2_9c20 = load i32, i32* %lr.global-to-local, align 4
  %v3_9c20 = add i32 %v2_9c20, 1
  %v4_9c20 = inttoptr i32 %v3_9c20 to i8*
  store i8 %v1_9c20, i8* %v4_9c20, align 1
  %v0_9c24 = load i32, i32* @sl, align 4
  %v1_9c24 = trunc i32 %v0_9c24 to i8
  %v2_9c24 = load i32, i32* %lr.global-to-local, align 4
  %v3_9c24 = add i32 %v2_9c24, 3
  %v4_9c24 = inttoptr i32 %v3_9c24 to i8*
  store i8 %v1_9c24, i8* %v4_9c24, align 1
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_9c30 = load i32, i32* @r5, align 4
  store i32 %v0_9c30, i32* %r1.global-to-local, align 4
  store i32 %v3_9780, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-160.0.ph, i32* %r2.global-to-local, align 4
  %v0_9c3c = load i32, i32* %lr.global-to-local, align 4
  %v6_9c44 = inttoptr i32 %v0_9c30 to i32*
  %v7_9c44 = call i32 @function_1331c(i32 %v3_9780, i32* %v6_9c44, i32 %stack_var_-160.0.ph, i32 16384, i32 %v0_9c3c, i32 16)
  %v3_9c48 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_9c48, i32* %r3.global-to-local, align 4
  %v1_9c4c = add i32 %v3_9c48, 1
  store i32 %v1_9c4c, i32* %r0.global-to-local, align 4
  %v1_9c50 = load i32, i32* @fp, align 4
  %v9_9c50 = icmp eq i32 %v1_9c4c, %v1_9c50
  store i1 %v9_9c50, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_9c4c, i32* %stack_var_-40, align 4
  %v6_9c58 = icmp slt i32 %v1_9c4c, %v1_9c50
  br i1 %v6_9c58, label %dec_label_pc_9ab0, label %dec_label_pc_9a98

dec_label_pc_9c60:                                ; preds = %dec_label_pc_9790
  store i32 %v3_9780, i32* %r0.global-to-local, align 4
  %v1_9c64 = call i32 @function_12a9c(i32 %v3_9780)
  store i32 %v1_9c64, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9c68

dec_label_pc_9c68:                                ; preds = %dec_label_pc_962c, %dec_label_pc_9c60
  %v29_9c6c = phi i32 [ %v3_9780, %dec_label_pc_962c ], [ %v1_9c64, %dec_label_pc_9c60 ]
  store i32 %v3_962c, i32* %r4.global-to-local, align 4
  store i32 %v15_962c, i32* %r8.global-to-local, align 4
  store i32 %v21_962c, i32* %sl.global-to-local, align 4
  ret i32 %v29_9c6c

dec_label_pc_9c70:                                ; preds = %dec_label_pc_9ab0
  %v1_9c70 = add i32 %v2_9ab8, 16
  %v2_9c70 = inttoptr i32 %v1_9c70 to i32*
  %v3_9c70 = load i32, i32* %v2_9c70, align 4
  store i32 %v3_9c70, i32* %r4.global-to-local, align 4
  %v0_9c74 = call i32 @function_e7cc()
  store i32 %v0_9c74, i32* %r0.global-to-local, align 4
  %v3_9c78 = load i32, i32* %stack_var_-40, align 4
  %v5_9c80 = mul i32 %v3_9c78, 24
  %v0_9c84 = load i32, i32* %r4.global-to-local, align 4
  %v1_9c88 = load i32, i32* @sb, align 4
  %v2_9c88 = add i32 %v1_9c88, %v5_9c80
  store i32 %v2_9c88, i32* %r1.global-to-local, align 4
  %v1_9c8c = and i32 %v0_9c84, 65280
  store i32 %v1_9c8c, i32* %r3.global-to-local, align 4
  %v1_9c84 = udiv i32 %v0_9c84, 256
  %v3_9c90 = and i32 %v1_9c84, 65280
  store i32 %v3_9c90, i32* %r2.global-to-local, align 4
  %v3_9c94 = mul i32 %v0_9c84, 16777216
  store i32 %v3_9c94, i32* %ip.global-to-local, align 4
  %v1_9c98 = add i32 %v2_9c88, 20
  %v2_9c98 = inttoptr i32 %v1_9c98 to i8*
  %v3_9c98 = load i8, i8* %v2_9c98, align 1
  %v4_9c98 = zext i8 %v3_9c98 to i32
  store i32 %v4_9c98, i32* %lr.global-to-local, align 4
  %v4_9c9c = mul nuw nsw i32 %v1_9c8c, 256
  %v5_9c9c = or i32 %v4_9c9c, %v3_9c94
  store i32 %v5_9c9c, i32* %ip.global-to-local, align 4
  %v2_9ca4 = call i32 @llvm.bswap.i32(i32 %v0_9c84)
  %v7_9ca8 = lshr i32 %v0_9c74, %v4_9c98
  %v8_9ca8 = add i32 %v7_9ca8, %v2_9ca4
  %v3_9cb4 = mul i32 %v8_9ca8, 16777216
  %v1_9cb8 = and i32 %v8_9ca8, 65280
  store i32 %v1_9cb8, i32* %r0.global-to-local, align 4
  store i32 %v5_976c, i32* %r2.global-to-local, align 4
  %v4_9cc4 = mul nuw nsw i32 %v1_9cb8, 256
  %v5_9cc4 = or i32 %v4_9cc4, %v3_9cb4
  store i32 %v5_9cc4, i32* %r1.global-to-local, align 4
  %v2_9cc8 = call i32 @llvm.bswap.i32(i32 %v8_9ca8)
  store i32 %v2_9cc8, i32* %r3.global-to-local, align 4
  store i1 %v7_9ae0, i1* %cpsr_z.global-to-local, align 1
  %v1_9cd0 = load i32, i32* @r5, align 4
  %v2_9cd0 = add i32 %v1_9cd0, 16
  %v3_9cd0 = inttoptr i32 %v2_9cd0 to i32*
  store i32 %v2_9cc8, i32* %v3_9cd0, align 4
  br i1 %v2_9ae0, label %dec_label_pc_9cd8, label %dec_label_pc_9ae8

dec_label_pc_9cd8:                                ; preds = %dec_label_pc_9c70, %dec_label_pc_9adc
  %v0_9cd8 = call i32 @function_e7cc()
  store i32 %v0_9cd8, i32* %r0.global-to-local, align 4
  store i32 %v3_97d0, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_9ce8, i1* %cpsr_z.global-to-local, align 1
  %v1_9cec = load i32, i32* @r5, align 4
  %v2_9cec = add i32 %v1_9cec, 12
  %v3_9cec = inttoptr i32 %v2_9cec to i32*
  store i32 %v0_9cd8, i32* %v3_9cec, align 4
  br i1 %v3_9ce8, label %dec_label_pc_9cf4, label %dec_label_pc_9cd8.dec_label_pc_9afc_crit_edge

dec_label_pc_9cd8.dec_label_pc_9afc_crit_edge:    ; preds = %dec_label_pc_9cd8
  %v1_9b00.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_9afc

dec_label_pc_9cf4:                                ; preds = %dec_label_pc_9cd8, %dec_label_pc_9ae8
  %v0_9cf4 = call i32 @function_e7cc()
  %v3_9cfc = urem i32 %v0_9cf4, 65536
  store i32 %v3_9cfc, i32* %r0.global-to-local, align 4
  %v1_9d04 = sub nsw i32 999, %v3_9cfc
  store i32 %v1_9d04, i32* %r2.global-to-local, align 4
  %v3_9d08 = sdiv i32 %v1_9d04, 256
  store i32 %v3_9d08, i32* %r1.global-to-local, align 4
  %v3_9d0c39 = udiv i32 %v3_9cfc, 256
  store i32 %v3_9d0c39, i32* %r3.global-to-local, align 4
  %v1_9d10 = trunc i32 %v3_9d0c39 to i8
  %v2_9d10 = load i32, i32* @r5, align 4
  %v3_9d10 = add i32 %v2_9d10, 5
  %v4_9d10 = inttoptr i32 %v3_9d10 to i8*
  store i8 %v1_9d10, i8* %v4_9d10, align 1
  %v0_9d14 = load i32, i32* %r0.global-to-local, align 4
  %v1_9d14 = trunc i32 %v0_9d14 to i8
  %v2_9d14 = load i32, i32* @r5, align 4
  %v3_9d14 = add i32 %v2_9d14, 4
  %v4_9d14 = inttoptr i32 %v3_9d14 to i8*
  store i8 %v1_9d14, i8* %v4_9d14, align 1
  %v0_9d18 = load i32, i32* %r1.global-to-local, align 4
  %v1_9d18 = trunc i32 %v0_9d18 to i8
  %v2_9d18 = load i32, i32* @r6, align 4
  %v3_9d18 = add i32 %v2_9d18, 5
  %v4_9d18 = inttoptr i32 %v3_9d18 to i8*
  store i8 %v1_9d18, i8* %v4_9d18, align 1
  store i32 %v3_97d4, i32* %r1.global-to-local, align 4
  %v1_9d20 = load i32, i32* @r4, align 4
  %v9_9d20 = icmp eq i32 %v3_97d4, %v1_9d20
  store i1 %v9_9d20, i1* %cpsr_z.global-to-local, align 1
  %v0_9d24 = load i32, i32* %r2.global-to-local, align 4
  %v1_9d24 = trunc i32 %v0_9d24 to i8
  %v2_9d24 = load i32, i32* @r6, align 4
  %v3_9d24 = add i32 %v2_9d24, 4
  %v4_9d24 = inttoptr i32 %v3_9d24 to i8*
  store i8 %v1_9d24, i8* %v4_9d24, align 1
  %v0_9d28 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_9d28, label %dec_label_pc_9d2c, label %dec_label_pc_9cf4.dec_label_pc_9b08_crit_edge

dec_label_pc_9cf4.dec_label_pc_9b08_crit_edge:    ; preds = %dec_label_pc_9cf4
  %v1_9b0c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_9b08

dec_label_pc_9d2c:                                ; preds = %dec_label_pc_9cf4, %dec_label_pc_9afc
  %v0_9d2c = call i32 @function_e7cc()
  %v1_9d2c = trunc i32 %v0_9d2c to i8
  store i32 %v0_9d2c, i32* %r0.global-to-local, align 4
  store i32 %v3_97d8, i32* %r2.global-to-local, align 4
  %v4_9d34 = sdiv i32 %v0_9d2c, 256
  store i32 %v4_9d34, i32* %r3.global-to-local, align 4
  %v1_9d38 = load i32, i32* @r4, align 4
  %v9_9d38 = icmp eq i32 %v3_97d8, %v1_9d38
  store i1 %v9_9d38, i1* %cpsr_z.global-to-local, align 1
  %v3_9d3c = load i32, i32* @r5, align 4
  %v4_9d3c = add i32 %v3_9d3c, 58
  %v5_9d3c = inttoptr i32 %v4_9d3c to i8*
  store i8 %v1_9d2c, i8* %v5_9d3c, align 1
  %v0_9d40 = load i32, i32* %r3.global-to-local, align 4
  %v1_9d40 = trunc i32 %v0_9d40 to i8
  %v2_9d40 = load i32, i32* @r7, align 4
  %v3_9d40 = add i32 %v2_9d40, 1
  %v4_9d40 = inttoptr i32 %v3_9d40 to i8*
  store i8 %v1_9d40, i8* %v4_9d40, align 1
  %v0_9d44 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_9d44, label %dec_label_pc_9d48, label %dec_label_pc_9b14

dec_label_pc_9d48:                                ; preds = %dec_label_pc_9d2c, %dec_label_pc_9b08
  %v0_9d48 = call i32 @function_e7cc()
  %v1_9d48 = trunc i32 %v0_9d48 to i8
  store i32 %v0_9d48, i32* %r0.global-to-local, align 4
  %v4_9d4c43 = udiv i32 %v0_9d48, 256
  %v1_9d50 = trunc i32 %v4_9d4c43 to i8
  %v2_9d50 = load i32, i32* @r7, align 4
  %v3_9d50 = add i32 %v2_9d50, 3
  %v4_9d50 = inttoptr i32 %v3_9d50 to i8*
  store i8 %v1_9d50, i8* %v4_9d50, align 1
  store i32 %v1_97c8, i32* %r3.global-to-local, align 4
  store i1 %v2_9d58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9d58, label %bb108, label %bb107

bb107:                                            ; preds = %dec_label_pc_9d48
  %v1_9d5c = load i32, i32* @r5, align 4
  %v2_9d5c = add i32 %v1_9d5c, 16
  %v3_9d5c = inttoptr i32 %v2_9d5c to i32*
  %v4_9d5c = load i32, i32* %v3_9d5c, align 4
  store i32 %v4_9d5c, i32* %r3.global-to-local, align 4
  br label %bb108

bb108:                                            ; preds = %dec_label_pc_9d48, %bb107
  %v3_9d60 = load i32, i32* @r7, align 4
  %v4_9d60 = add i32 %v3_9d60, 2
  %v5_9d60 = inttoptr i32 %v4_9d60 to i8*
  store i8 %v1_9d48, i8* %v5_9d60, align 1
  %v0_9d64 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_9d64, label %dec_label_pc_9d6c, label %bb109

bb109:                                            ; preds = %bb108
  %v1_9d64 = load i32, i32* %r3.global-to-local, align 4
  %v2_9d64 = load i32, i32* @r6, align 4
  %v3_9d64 = add i32 %v2_9d64, 16
  %v4_9d64 = inttoptr i32 %v3_9d64 to i32*
  store i32 %v1_9d64, i32* %v4_9d64, align 4
  br label %dec_label_pc_9b28

dec_label_pc_9d6c:                                ; preds = %dec_label_pc_9b14, %bb108
  %v0_9d6c = call i32 @function_e7cc()
  store i32 %v0_9d6c, i32* %r0.global-to-local, align 4
  %v1_9d70 = load i32, i32* @r6, align 4
  %v2_9d70 = add i32 %v1_9d70, 16
  %v3_9d70 = inttoptr i32 %v2_9d70 to i32*
  store i32 %v0_9d6c, i32* %v3_9d70, align 4
  br label %dec_label_pc_9b28

dec_label_pc_9d78:                                ; preds = %dec_label_pc_9b28
  %v0_9d78 = load i32, i32* @r7, align 4
  %v1_9d78 = add i32 %v0_9d78, 8
  store i32 %v1_9d78, i32* %r0.global-to-local, align 4
  store i32 %v5_9718, i32* @r1, align 4
  %v1_9d80 = inttoptr i32 %v1_9d78 to i8*
  %v2_9d80 = call i32 @function_e94c(i8* %v1_9d80)
  store i32 %v2_9d80, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9b8c

dec_label_pc_9d88:                                ; preds = %dec_label_pc_97b8
  %v1_9d90 = add i32 %v5_9718, 8
  store i32 %v1_9d90, i32* %r1.global-to-local, align 4
  %v1_9d94 = add i32 %v5_9718, 66
  store i32 %v1_9d94, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_9a98.preheader

; uselistorder directives
  uselistorder i32 %v1_9d94, { 1, 0 }
  uselistorder i32 %v1_9d90, { 1, 0 }
  uselistorder i32 %v0_9d48, { 0, 2, 1 }
  uselistorder i32 %v0_9d2c, { 0, 2, 1 }
  uselistorder i32 %v3_9cfc, { 0, 2, 1 }
  uselistorder i32 %v2_9cc8, { 1, 0 }
  uselistorder i32 %v8_9ca8, { 1, 2, 0 }
  uselistorder i32 %v3_9c94, { 1, 0 }
  uselistorder i32 %v0_9c84, { 2, 0, 1, 3 }
  uselistorder i32 %v1_9c50, { 1, 2, 0 }
  uselistorder i32 %v1_9c4c, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v3_9bf0, { 1, 0, 2 }
  uselistorder i32 %v4_9bec, { 0, 2, 1 }
  uselistorder i32 %v0_9bcc, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v2_9bbc, { 0, 2, 1 }
  uselistorder i32 %v4_9ba0, { 1, 0 }
  uselistorder i32 %v7_9ac4, { 2, 1, 0, 3 }
  uselistorder i32 %v0_9a98, { 1, 0 }
  uselistorder i1 %v7_9ae0, { 2, 1, 0 }
  uselistorder i1 %v2_9d58, { 2, 3, 1, 0 }
  uselistorder i1 %v3_9ce8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_9a20, { 1, 0, 2 }
  uselistorder i32 %v3_98a8, { 1, 0, 2 }
  uselistorder i32 %v3_9888, { 1, 0 }
  uselistorder i32 %tmp91, { 1, 0 }
  uselistorder i32 %v1_982c, { 1, 0 }
  uselistorder i32 %v1_9828, { 2, 1, 0 }
  uselistorder i32 %v1_9814, { 1, 0 }
  uselistorder i32 %v1_9810, { 2, 1, 0 }
  uselistorder i32 %v1_9808, { 0, 2, 1 }
  uselistorder i32 %v3_9800, { 2, 1, 0 }
  uselistorder i32 %v0_97dc, { 1, 0, 2 }
  uselistorder i32 %v3_97d0, { 2, 1, 3, 0 }
  uselistorder i32 %v1_97c8, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v3_97c4, { 1, 0 }
  uselistorder i32 %v0_97c4, { 2, 1, 0 }
  uselistorder i32 %v0_97bc, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_97b8, { 0, 1, 2, 4, 3 }
  uselistorder i1 %v7_97b0, { 1, 0 }
  uselistorder i1 %v7_9784, { 1, 0 }
  uselistorder i32 %v3_9780, { 1, 3, 4, 5, 6, 2, 0, 7 }
  uselistorder i32 %v5_976c, { 5, 3, 0, 4, 2, 1 }
  uselistorder i32 %v1_9738, { 1, 2, 0 }
  uselistorder i32 %v5_9718, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_96cc, { 1, 0 }
  uselistorder i8 %v5_96bc, { 1, 0 }
  uselistorder i32 %v5_96a0, { 1, 0 }
  uselistorder i32 %v6_9664, { 1, 0 }
  uselistorder i32 %v2_964c, { 0, 3, 1, 2 }
  uselistorder i32 %v1_9630, { 2, 1, 0 }
  uselistorder i32* %stack_var_-40, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 12, 11 }
  uselistorder i32* %sl.global-to-local, { 3, 0, 1, 2 }
  uselistorder i32* %r8.global-to-local, { 3, 0, 1, 2 }
  uselistorder i32* %r4.global-to-local, { 20, 21, 22, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i32* %r3.global-to-local, { 2, 1, 3, 4, 5, 6, 7, 8, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 62, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 6, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 18, 19, 21, 1, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 33, 35, 36, 37, 38, 39, 53, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 34, 35, 36, 37, 38, 40, 39, 41, 42, 43, 44, 45, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 30, 29, 31, 32, 46, 33, 48, 47, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 4, 7, 8, 5, 6, 10, 9, 32, 31, 33, 34, 35, 1, 36, 37, 39, 38, 40, 41, 42, 43, 44, 11, 15, 12, 13, 14, 18, 16, 17, 19, 21, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 45, 46, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 13, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 22, 23, 24, 25, 26, 27, 28, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder label %dec_label_pc_9d6c, { 1, 0 }
  uselistorder label %bb108, { 1, 0 }
  uselistorder label %dec_label_pc_9c68, { 1, 0 }
  uselistorder label %dec_label_pc_9b8c, { 1, 0 }
  uselistorder label %dec_label_pc_9b28, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9a98.preheader, { 1, 0 }
  uselistorder label %bb105, { 1, 0 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %bb102, { 1, 0 }
  uselistorder label %bb100, { 1, 0 }
  uselistorder label %bb98, { 1, 0 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %bb94, { 1, 0 }
}

define i32 @function_9da8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_9da8:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_9da8 = load i32, i32* @r4, align 4
  %v15_9da8 = load i32, i32* @r8, align 4
  %v1_9dac = urem i32 %arg1, 256
  store i32 %v1_9dac, i32* @fp, align 4
  store i32 %arg2, i32* @sb, align 4
  store i32 %v1_9dac, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  %v1_9dc4 = urem i32 %arg3, 256
  store i32 %v1_9dc4, i32* @r4, align 4
  %v2_9dc8 = call i32 @function_1366c(i32 %v1_9dac, i32 4)
  %v0_9dcc = load i32, i32* @r5, align 4
  store i32 %v0_9dcc, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_9ddc = load i32, i32* @r4, align 4
  store i32 %v0_9ddc, i32* %r0.global-to-local, align 4
  %v5_9de0 = inttoptr i32 %v0_9dcc to i32*
  %v6_9de0 = call i32 @function_85e0(i32 %v0_9ddc, i32* %v5_9de0, i32 2, i32 0)
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_9df8 = load i32, i32* @r5, align 4
  store i32 %v0_9df8, i32* %r1.global-to-local, align 4
  %v0_9dfc = load i32, i32* @r4, align 4
  store i32 %v0_9dfc, i32* %r0.global-to-local, align 4
  %v5_9e00 = trunc i32 %v6_9de0 to i8
  %v6_9e04 = inttoptr i32 %v0_9df8 to i32*
  %v7_9e04 = call i32 @function_85e0(i32 %v0_9dfc, i32* %v6_9e04, i32 3, i32 65535)
  %v0_9e08 = load i32, i32* @r5, align 4
  store i32 %v0_9e08, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_9e04, i32* @r7, align 4
  %v0_9e18 = load i32, i32* @r4, align 4
  store i32 %v0_9e18, i32* %r0.global-to-local, align 4
  %v4_9e1c = inttoptr i32 %v0_9e08 to i32*
  %v5_9e1c = call i32 @function_85e0(i32 %v0_9e18, i32* %v4_9e1c, i32 4, i32 64)
  %v0_9e28 = load i32, i32* @r5, align 4
  store i32 %v0_9e28, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_9e34 = load i32, i32* @r4, align 4
  store i32 %v0_9e34, i32* %r0.global-to-local, align 4
  %v5_9e38 = trunc i32 %v5_9e1c to i8
  %v6_9e3c = inttoptr i32 %v0_9e28 to i32*
  %v7_9e3c = call i32 @function_85e0(i32 %v0_9e34, i32* %v6_9e3c, i32 5, i32 1)
  %v1_9e48 = urem i32 %v7_9e3c, 256
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_9e54 = load i32, i32* @r5, align 4
  store i32 %v0_9e54, i32* %r1.global-to-local, align 4
  %v0_9e58 = load i32, i32* @r4, align 4
  store i32 %v0_9e58, i32* %r0.global-to-local, align 4
  %v5_9e60 = inttoptr i32 %v0_9e54 to i32*
  %v6_9e60 = call i32 @function_85e0(i32 %v0_9e58, i32* %v5_9e60, i32 6, i32 65535)
  %v0_9e68 = load i32, i32* @r5, align 4
  store i32 %v0_9e68, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_9e60, i32* @sl, align 4
  %v0_9e78 = load i32, i32* @r4, align 4
  store i32 %v0_9e78, i32* %r0.global-to-local, align 4
  %v4_9e7c = inttoptr i32 %v0_9e68 to i32*
  %v5_9e7c = call i32 @function_85e0(i32 %v0_9e78, i32* %v4_9e7c, i32 7, i32 65535)
  %v0_9e80 = load i32, i32* @r5, align 4
  store i32 %v0_9e80, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v5_9e7c, i32* @r8, align 4
  %v0_9e90 = load i32, i32* @r4, align 4
  store i32 %v0_9e90, i32* %r0.global-to-local, align 4
  %v4_9e94 = inttoptr i32 %v0_9e80 to i32*
  %v5_9e94 = call i32 @function_85e0(i32 %v0_9e90, i32* %v4_9e94, i32 0, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_9ea4 = load i32, i32* @r5, align 4
  store i32 %v0_9ea4, i32* %r1.global-to-local, align 4
  %v0_9ea8 = load i32, i32* @r4, align 4
  store i32 %v0_9ea8, i32* %r0.global-to-local, align 4
  %v4_9eac = inttoptr i32 %v0_9ea4 to i32*
  %v5_9eac = call i32 @function_85e0(i32 %v0_9ea8, i32* %v4_9eac, i32 1, i32 1)
  %v1_9eb4 = urem i32 %v5_9eac, 256
  %v0_9eb8 = load i32, i32* @r5, align 4
  store i32 %v0_9eb8, i32* %r1.global-to-local, align 4
  store i32 19, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_9ec4 = load i32, i32* @r4, align 4
  store i32 %v0_9ec4, i32* %r0.global-to-local, align 4
  %v5_9ecc = inttoptr i32 %v0_9eb8 to i32*
  %v6_9ecc = call i32 @function_85e0(i32 %v0_9ec4, i32* %v5_9ecc, i32 19, i32 0)
  %v0_9ed4 = load i32, i32* @r5, align 4
  store i32 %v0_9ed4, i32* %r1.global-to-local, align 4
  %v2_9ed8 = load i32, i32* @global_var_1da7c.49, align 4
  store i32 %v2_9ed8, i32* %r3.global-to-local, align 4
  store i32 %v6_9ecc, i32* @r6, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_9ee4 = load i32, i32* @r4, align 4
  store i32 %v0_9ee4, i32* %r0.global-to-local, align 4
  %v4_9ee8 = inttoptr i32 %v0_9ed4 to i32*
  %v5_9ee8 = call i32 @function_85e0(i32 %v0_9ee4, i32* %v4_9ee8, i32 25, i32 %v2_9ed8)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_9efc = call i32 @function_13380(i32 2, i32 3, i32 6)
  store i32 %v3_9efc, i32* %r0.global-to-local, align 4
  %v7_9f00 = icmp eq i32 %v3_9efc, -1
  store i1 %v7_9f00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9f00, label %dec_label_pc_a380, label %dec_label_pc_9f0c

dec_label_pc_9f0c:                                ; preds = %dec_label_pc_9da8
  store i32 1, i32* %stack_var_-40, align 4
  %v6_9f14 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v6_9f14, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v6_9f28 = call i32 @function_13350(i32 %v3_9efc, i32 0, i32 3, i32* nonnull %stack_var_-40, i32 4)
  store i32 %v6_9f28, i32* %r0.global-to-local, align 4
  %v7_9f2c = icmp eq i32 %v6_9f28, -1
  store i1 %v7_9f2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9f2c, label %dec_label_pc_a378, label %dec_label_pc_9f34

dec_label_pc_9f34:                                ; preds = %dec_label_pc_9f0c
  %v0_9f34 = load i32, i32* @sl, align 4
  %v0_9f40 = load i32, i32* @r8, align 4
  %v3_9f40 = mul i32 %v0_9f40, 65536
  store i32 %v3_9f40, i32* %r8.global-to-local, align 4
  %v0_9f44 = load i32, i32* @r7, align 4
  %v0_9f48 = load i32, i32* @r6, align 4
  %v1_9f48 = urem i32 %v0_9f48, 256
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_9f50 = urem i32 %v0_9f34, 65536
  store i32 %v3_9f50, i32* %r2.global-to-local, align 4
  %v3_9f54 = urem i32 %v0_9f40, 65536
  store i32 %v3_9f54, i32* %r3.global-to-local, align 4
  %v0_9f58 = load i32, i32* @fp, align 4
  %v2_9f58 = icmp eq i32 %v0_9f58, 0
  store i1 %v2_9f58, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-40, align 4
  %v3_9f68 = urem i32 %v0_9f44, 65536
  store i32 %v3_9f68, i32* @sl, align 4
  %tmp84 = icmp slt i32 %v0_9f58, 1
  br i1 %tmp84, label %dec_label_pc_a4a4, label %dec_label_pc_9f78

dec_label_pc_9f78:                                ; preds = %dec_label_pc_9f34
  %v3_9f7c = mul i32 %v5_9e94, 65536
  %v1_9f80 = add i32 %v3_9f7c, 3407872
  %v3_9f88 = udiv i32 %v1_9f80, 256
  %v0_9f44.not = or i32 %v0_9f44, -65536
  %v1_9f98 = xor i32 %v0_9f44.not, 65535
  %v1_9f9c = urem i32 %v0_9f40, 256
  %tmp85 = mul nsw i32 %v1_9f98, 256
  %v1_9fb4 = and i32 %v3_9f88, 65280
  %v1_9fb8 = add i32 %v3_9f7c, 524288
  %v4_9fbc = udiv i32 %v1_9f80, 16777216
  %v5_9fbc = or i32 %v1_9fb4, %v4_9fbc
  store i32 %v5_9fbc, i32* %r0.global-to-local, align 4
  %v1_9fc0 = add i32 %v3_9f7c, 1835008
  %v1_9fc8 = and i32 %tmp85, 65280
  store i32 %v1_9fc8, i32* @lr, align 4
  %tmp86 = udiv i32 %v1_9f98, 256
  %tmp87 = udiv i32 %v0_9f44, 256
  %v5_9fdc = trunc i32 %tmp86 to i8
  %tmp88 = udiv i32 %v0_9f34, 256
  %sext29 = mul i32 %tmp87, 16777216
  %v4_9ffc = sdiv i32 %sext29, 16777216
  %v3_a008 = mul nuw nsw i32 %v1_9f9c, 256
  store i32 %v3_a008, i32* @r5, align 4
  %v3_a00c = udiv i32 %v1_9fb8, 256
  %tmp89 = udiv i32 %v0_9f40, 256
  %v4_a014 = urem i32 %tmp89, 256
  %v5_a014 = or i32 %v4_a014, %v3_a008
  store i32 %v5_a014, i32* @r7, align 4
  %v3_a018 = ashr i32 %sext29, 31
  %v3_a024 = sdiv i32 %v1_9fc0, 16777216
  %v1_a028 = and i32 %v3_a00c, 65280
  store i32 %v1_a028, i32* @r6, align 4
  %sext30 = mul i32 %tmp88, 16777216
  %v4_a030 = sdiv i32 %sext30, 16777216
  %v3_a034 = ashr i32 %v1_9fc0, 31
  %v3_a038 = udiv i32 %v1_9f98, 65536
  %v4_a03c = udiv i32 %v1_9fb8, 16777216
  %v5_a03c = or i32 %v1_a028, %v4_a03c
  store i32 %v5_a03c, i32* %r8.global-to-local, align 4
  %v3_a048 = ashr i32 %sext30, 31
  store i32 %v3_a048, i32* %r1.global-to-local, align 4
  store i32 %v1_9f9c, i32* %r2.global-to-local, align 4
  %v3_a05041 = udiv i32 %v1_a028, 256
  store i32 %v3_a05041, i32* %r3.global-to-local, align 4
  %v5_a058 = trunc i32 %v3_a048 to i8
  store i32 0, i32* @r4, align 4
  %v4_a0b4 = sext i8 %v5_9e38 to i32
  %sext = mul i32 %v1_9f80, 256
  %v4_a0bc = sdiv i32 %sext, 16777216
  %sext16 = mul nuw i32 %v4_9fbc, 16777216
  %v4_a0cc = sdiv i32 %sext16, 16777216
  %v2_a1a0 = icmp eq i32 %v1_9f48, 0
  %sext20 = mul i32 %v1_9fb8, 256
  %v4_a1c0 = sdiv i32 %sext20, 16777216
  %sext21 = mul i32 %v0_9f40, 16777216
  %v7_a1d8 = sdiv i32 %sext21, 16777216
  %v1_a0c8 = trunc i32 %v4_a0bc to i8
  br label %dec_label_pc_a068

dec_label_pc_a068:                                ; preds = %bb96, %dec_label_pc_9f78
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_a074 = call i32 @function_1366c(i32 1510, i32 4)
  store i32 %v2_a074, i32* %r0.global-to-local, align 4
  store i32 %v2_9dc8, i32* %r1.global-to-local, align 4
  %v3_a07c = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_a07c, i32* %r3.global-to-local, align 4
  %v2_a080 = load i32, i32* @r4, align 4
  %v5_a080 = mul i32 %v2_a080, 4
  %v6_a080 = add i32 %v5_a080, %v2_9dc8
  %v7_a080 = inttoptr i32 %v6_a080 to i32*
  store i32 %v2_a074, i32* %v7_a080, align 4
  %v0_a084 = load i32, i32* %r1.global-to-local, align 4
  %v1_a084 = load i32, i32* %r3.global-to-local, align 4
  %v4_a084 = mul i32 %v1_a084, 4
  %v5_a084 = add i32 %v4_a084, %v0_a084
  %v6_a084 = inttoptr i32 %v5_a084 to i32*
  %v7_a084 = load i32, i32* %v6_a084, align 4
  store i32 %v7_a084, i32* %r4.global-to-local, align 4
  %v1_a088 = inttoptr i32 %v7_a084 to i8*
  %v2_a088 = load i8, i8* %v1_a088, align 1
  %tmp = urem i8 %v2_a088, 16
  %v1_a08c = zext i8 %tmp to i32
  %v1_a090 = or i32 %v1_a08c, 64
  store i32 %v1_a090, i32* %r2.global-to-local, align 4
  %v1_a094 = trunc i32 %v1_a090 to i8
  store i8 %v1_a094, i8* %v1_a088, align 1
  %v0_a098 = load i32, i32* %r4.global-to-local, align 4
  %v1_a098 = inttoptr i32 %v0_a098 to i8*
  %v2_a098 = load i8, i8* %v1_a098, align 1
  %v1_a09c = and i8 %v2_a098, -16
  %v1_a0a0 = or i8 %v1_a09c, 5
  store i32 %v1_9e48, i32* %r2.global-to-local, align 4
  store i8 %v1_a0a0, i8* %v1_a098, align 1
  %v2_a0b0 = load i32, i32* %r4.global-to-local, align 4
  %v3_a0b0 = add i32 %v2_a0b0, 1
  %v4_a0b0 = inttoptr i32 %v3_a0b0 to i8*
  store i8 %v5_9e00, i8* %v4_a0b0, align 1
  store i32 %v4_a0b4, i32* %r1.global-to-local, align 4
  %v2_a0b8 = load i32, i32* %r4.global-to-local, align 4
  %v3_a0b8 = add i32 %v2_a0b8, 8
  %v4_a0b8 = inttoptr i32 %v3_a0b8 to i8*
  store i8 %v5_9e38, i8* %v4_a0b8, align 1
  store i32 %v4_a0bc, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_a0c4 = load i32, i32* %r2.global-to-local, align 4
  %v9_a0c4 = icmp eq i32 %v0_a0c4, 0
  store i1 %v9_a0c4, i1* %cpsr_z.global-to-local, align 1
  %v2_a0c8 = load i32, i32* %r4.global-to-local, align 4
  %v3_a0c8 = add i32 %v2_a0c8, 3
  %v4_a0c8 = inttoptr i32 %v3_a0c8 to i8*
  store i8 %v1_a0c8, i8* %v4_a0c8, align 1
  store i32 %v4_a0cc, i32* %r2.global-to-local, align 4
  %v0_a0d0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a0d0, label %.thread23, label %.thread

.thread:                                          ; preds = %dec_label_pc_a068
  %v1_a0d0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v1_a0d0, i32* %r3.global-to-local, align 4
  %v2_a0d4 = trunc i32 %v1_a0d0 to i8
  %v3_a0d4 = load i32, i32* %r4.global-to-local, align 4
  %v4_a0d4 = add i32 %v3_a0d4, 7
  %v5_a0d4 = inttoptr i32 %v4_a0d4 to i8*
  store i8 %v2_a0d4, i8* %v5_a0d4, align 1
  %v0_a0d8.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a0d8.pr.pr, label %.thread23, label %bb

bb:                                               ; preds = %.thread
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_a0dc = load i32, i32* %r4.global-to-local, align 4
  %v4_a0dc = add i32 %v3_a0dc, 6
  %v5_a0dc = inttoptr i32 %v4_a0dc to i8*
  store i8 64, i8* %v5_a0dc, align 1
  br label %.thread23

.thread23:                                        ; preds = %dec_label_pc_a068, %.thread, %bb
  %v0_a0e0 = load i32, i32* %r2.global-to-local, align 4
  %v1_a0e0 = trunc i32 %v0_a0e0 to i8
  %v2_a0e0 = load i32, i32* %r4.global-to-local, align 4
  %v3_a0e0 = add i32 %v2_a0e0, 2
  %v4_a0e0 = inttoptr i32 %v3_a0e0 to i8*
  store i8 %v1_a0e0, i8* %v4_a0e0, align 1
  store i32 %v3_a018, i32* %r2.global-to-local, align 4
  store i32 %v4_9ffc, i32* %r1.global-to-local, align 4
  %v2_a0f0 = load i32, i32* %r4.global-to-local, align 4
  %v3_a0f0 = add i32 %v2_a0f0, 9
  %v4_a0f0 = inttoptr i32 %v3_a0f0 to i8*
  store i8 47, i8* %v4_a0f0, align 1
  %v0_a0f4 = load i32, i32* %r2.global-to-local, align 4
  %v1_a0f4 = trunc i32 %v0_a0f4 to i8
  %v2_a0f4 = load i32, i32* %r4.global-to-local, align 4
  %v3_a0f4 = add i32 %v2_a0f4, 5
  %v4_a0f4 = inttoptr i32 %v3_a0f4 to i8*
  store i8 %v1_a0f4, i8* %v4_a0f4, align 1
  %v3_a0f8 = load i32, i32* %stack_var_-40, align 4
  %v5_a100 = mul i32 %v3_a0f8, 24
  store i32 %v5_a100, i32* %r3.global-to-local, align 4
  store i32 %v5_9ee8, i32* %r2.global-to-local, align 4
  %v1_a108 = load i32, i32* %r4.global-to-local, align 4
  %v2_a108 = add i32 %v1_a108, 12
  %v3_a108 = inttoptr i32 %v2_a108 to i32*
  store i32 %v5_9ee8, i32* %v3_a108, align 4
  %v0_a10c = load i32, i32* %r3.global-to-local, align 4
  %v1_a10c = load i32, i32* @sb, align 4
  %v2_a10c = add i32 %v1_a10c, %v0_a10c
  store i32 %v2_a10c, i32* %r3.global-to-local, align 4
  %v0_a110 = load i32, i32* %r1.global-to-local, align 4
  %v1_a110 = trunc i32 %v0_a110 to i8
  %v2_a110 = load i32, i32* %r4.global-to-local, align 4
  %v3_a110 = add i32 %v2_a110, 4
  %v4_a110 = inttoptr i32 %v3_a110 to i8*
  store i8 %v1_a110, i8* %v4_a110, align 1
  %v0_a114 = load i32, i32* %r3.global-to-local, align 4
  %v1_a114 = add i32 %v0_a114, 16
  %v2_a114 = inttoptr i32 %v1_a114 to i32*
  %v3_a114 = load i32, i32* %v2_a114, align 4
  store i32 %v3_a114, i32* %r2.global-to-local, align 4
  %v0_a118 = load i32, i32* %r4.global-to-local, align 4
  %v1_a118 = add i32 %v0_a118, 20
  store i32 %v1_a118, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  %v0_a120 = load i32, i32* %r0.global-to-local, align 4
  %v1_a120 = trunc i32 %v0_a120 to i8
  %v3_a120 = add i32 %v0_a118, 23
  %v4_a120 = inttoptr i32 %v3_a120 to i8*
  store i8 %v1_a120, i8* %v4_a120, align 1
  %v0_a124 = load i32, i32* %r3.global-to-local, align 4
  %v1_a124 = trunc i32 %v0_a124 to i8
  %v2_a124 = load i32, i32* %r1.global-to-local, align 4
  %v3_a124 = add i32 %v2_a124, 2
  %v4_a124 = inttoptr i32 %v3_a124 to i8*
  store i8 %v1_a124, i8* %v4_a124, align 1
  %v0_a128 = load i32, i32* %r4.global-to-local, align 4
  %v1_a128 = add i32 %v0_a128, 24
  %v2_a128 = inttoptr i32 %v1_a128 to i8*
  %v3_a128 = load i8, i8* %v2_a128, align 1
  %tmp104 = urem i8 %v3_a128, 16
  %v1_a12c = zext i8 %tmp104 to i32
  %v1_a130 = or i32 %v1_a12c, 64
  store i32 %v1_a130, i32* %r3.global-to-local, align 4
  %v1_a134 = trunc i32 %v1_a130 to i8
  store i8 %v1_a134, i8* %v2_a128, align 1
  %v0_a138 = load i32, i32* %r2.global-to-local, align 4
  %v1_a138 = load i32, i32* %r4.global-to-local, align 4
  %v2_a138 = add i32 %v1_a138, 16
  %v3_a138 = inttoptr i32 %v2_a138 to i32*
  store i32 %v0_a138, i32* %v3_a138, align 4
  %v0_a13c = load i32, i32* %r4.global-to-local, align 4
  %v1_a13c = add i32 %v0_a13c, 24
  %v2_a13c = inttoptr i32 %v1_a13c to i8*
  %v3_a13c = load i8, i8* %v2_a13c, align 1
  %v1_a140 = and i8 %v3_a13c, -16
  %v1_a144 = or i8 %v1_a140, 5
  store i8 %v1_a144, i8* %v2_a13c, align 1
  %v0_a150 = load i32, i32* %r4.global-to-local, align 4
  %v1_a150 = add i32 %v0_a150, 24
  store i32 %v1_a150, i32* @r5, align 4
  %v3_a154 = add i32 %v0_a150, 25
  %v4_a154 = inttoptr i32 %v3_a154 to i8*
  store i8 %v5_9e00, i8* %v4_a154, align 1
  store i32 %v3_a024, i32* %r1.global-to-local, align 4
  store i32 %tmp86, i32* %r3.global-to-local, align 4
  store i32 %v3_a034, i32* %r2.global-to-local, align 4
  %v2_a164 = load i32, i32* @r5, align 4
  %v3_a164 = add i32 %v2_a164, 4
  %v4_a164 = inttoptr i32 %v3_a164 to i8*
  store i8 %v5_9fdc, i8* %v4_a164, align 1
  %v0_a168 = load i32, i32* %r1.global-to-local, align 4
  %v1_a168 = trunc i32 %v0_a168 to i8
  %v2_a168 = load i32, i32* @r5, align 4
  %v3_a168 = add i32 %v2_a168, 2
  %v4_a168 = inttoptr i32 %v3_a168 to i8*
  store i8 %v1_a168, i8* %v4_a168, align 1
  %v0_a16c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a16c, label %bb91, label %bb90

bb90:                                             ; preds = %.thread23
  store i32 64, i32* %r3.global-to-local, align 4
  br label %bb91

bb91:                                             ; preds = %.thread23, %bb90
  store i32 %v3_a038, i32* %r1.global-to-local, align 4
  %v0_a174 = load i32, i32* %r2.global-to-local, align 4
  %v1_a174 = trunc i32 %v0_a174 to i8
  %v2_a174 = load i32, i32* @r5, align 4
  %v3_a174 = add i32 %v2_a174, 3
  %v4_a174 = inttoptr i32 %v3_a174 to i8*
  store i8 %v1_a174, i8* %v4_a174, align 1
  store i32 %v4_a0b4, i32* %r2.global-to-local, align 4
  %v0_a17c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a17c, label %bb93, label %bb92

bb92:                                             ; preds = %bb91
  %v1_a17c = load i32, i32* %r3.global-to-local, align 4
  %v2_a17c = trunc i32 %v1_a17c to i8
  %v3_a17c = load i32, i32* @r5, align 4
  %v4_a17c = add i32 %v3_a17c, 6
  %v5_a17c = inttoptr i32 %v4_a17c to i8*
  store i8 %v2_a17c, i8* %v5_a17c, align 1
  br label %bb93

bb93:                                             ; preds = %bb91, %bb92
  store i32 17, i32* %r3.global-to-local, align 4
  %v0_a184 = load i32, i32* %r1.global-to-local, align 4
  %v1_a184 = trunc i32 %v0_a184 to i8
  %v2_a184 = load i32, i32* @r5, align 4
  %v3_a184 = add i32 %v2_a184, 5
  %v4_a184 = inttoptr i32 %v3_a184 to i8*
  store i8 %v1_a184, i8* %v4_a184, align 1
  %v0_a188 = load i32, i32* %r2.global-to-local, align 4
  %v1_a188 = trunc i32 %v0_a188 to i8
  %v2_a188 = load i32, i32* @r5, align 4
  %v3_a188 = add i32 %v2_a188, 8
  %v4_a188 = inttoptr i32 %v3_a188 to i8*
  store i8 %v1_a188, i8* %v4_a188, align 1
  %v0_a18c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a18c, label %bb95, label %bb94

bb94:                                             ; preds = %bb93
  %v1_a18c = load i32, i32* %r0.global-to-local, align 4
  %v2_a18c = trunc i32 %v1_a18c to i8
  %v3_a18c = load i32, i32* @r5, align 4
  %v4_a18c = add i32 %v3_a18c, 7
  %v5_a18c = inttoptr i32 %v4_a18c to i8*
  store i8 %v2_a18c, i8* %v5_a18c, align 1
  br label %bb95

bb95:                                             ; preds = %bb93, %bb94
  %v0_a190 = load i32, i32* %r3.global-to-local, align 4
  %v1_a190 = trunc i32 %v0_a190 to i8
  %v2_a190 = load i32, i32* @r5, align 4
  %v3_a190 = add i32 %v2_a190, 9
  %v4_a190 = inttoptr i32 %v3_a190 to i8*
  store i8 %v1_a190, i8* %v4_a190, align 1
  %v0_a194 = call i32 @function_e7cc()
  store i32 %v0_a194, i32* %r0.global-to-local, align 4
  store i32 %v1_9f48, i32* %r1.global-to-local, align 4
  store i1 %v2_a1a0, i1* %cpsr_z.global-to-local, align 1
  %v1_a1a4 = sub i32 1023, %v0_a194
  store i32 %v1_a1a4, i32* %r3.global-to-local, align 4
  br i1 %v2_a1a0, label %.thread24, label %.thread25

.thread24:                                        ; preds = %bb95
  %v2_a1ac = load i32, i32* @r5, align 4
  %v3_a1ac = add i32 %v2_a1ac, 16
  %v4_a1ac = inttoptr i32 %v3_a1ac to i32*
  store i32 %v1_a1a4, i32* %v4_a1ac, align 4
  br label %bb96

.thread25:                                        ; preds = %bb95
  %v1_a1a8 = load i32, i32* %r4.global-to-local, align 4
  %v2_a1a8 = add i32 %v1_a1a8, 16
  %v3_a1a8 = inttoptr i32 %v2_a1a8 to i32*
  %v4_a1a8 = load i32, i32* %v3_a1a8, align 4
  store i32 %v4_a1a8, i32* %r3.global-to-local, align 4
  %v2_a1b0 = load i32, i32* @r5, align 4
  %v3_a1b0 = add i32 %v2_a1b0, 16
  %v4_a1b0 = inttoptr i32 %v3_a1b0 to i32*
  store i32 %v4_a1a8, i32* %v4_a1b0, align 4
  br label %bb96

bb96:                                             ; preds = %.thread24, %.thread25
  store i32 %v4_a030, i32* %r3.global-to-local, align 4
  %v0_a1b8 = load i32, i32* %r4.global-to-local, align 4
  %v1_a1b8 = add i32 %v0_a1b8, 44
  store i32 %v1_a1b8, i32* @r6, align 4
  %v1_a1bc = load i32, i32* @r5, align 4
  %v2_a1bc = add i32 %v1_a1bc, 12
  %v3_a1bc = inttoptr i32 %v2_a1bc to i32*
  store i32 %v0_a194, i32* %v3_a1bc, align 4
  store i32 %v4_a1c0, i32* %r2.global-to-local, align 4
  %v0_a1c4 = load i32, i32* %r3.global-to-local, align 4
  %v1_a1c4 = trunc i32 %v0_a1c4 to i8
  %v2_a1c4 = load i32, i32* @r6, align 4
  %v3_a1c4 = inttoptr i32 %v2_a1c4 to i8*
  store i8 %v1_a1c4, i8* %v3_a1c4, align 1
  %v3_a1c8 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_a1c8, i32* %r3.global-to-local, align 4
  %v0_a1cc = load i32, i32* %r2.global-to-local, align 4
  %v1_a1cc = trunc i32 %v0_a1cc to i8
  %v2_a1cc = load i32, i32* @r6, align 4
  %v3_a1cc = add i32 %v2_a1cc, 5
  %v4_a1cc = inttoptr i32 %v3_a1cc to i8*
  store i8 %v1_a1cc, i8* %v4_a1cc, align 1
  %v0_a1d0 = load i32, i32* %r3.global-to-local, align 4
  %v1_a1d0 = add i32 %v0_a1d0, 1
  store i32 %v1_a1d0, i32* @r4, align 4
  store i32 %v3_a048, i32* %r1.global-to-local, align 4
  store i32 %v7_a1d8, i32* %r2.global-to-local, align 4
  %v1_a1dc = load i32, i32* @fp, align 4
  %v9_a1dc = icmp eq i32 %v1_a1d0, %v1_a1dc
  store i1 %v9_a1dc, i1* %cpsr_z.global-to-local, align 1
  %v2_a1e0 = load i32, i32* @r6, align 4
  %v3_a1e0 = add i32 %v2_a1e0, 1
  %v4_a1e0 = inttoptr i32 %v3_a1e0 to i8*
  store i8 %v5_a058, i8* %v4_a1e0, align 1
  %v0_a1e4 = load i32, i32* @r7, align 4
  %v1_a1e4 = trunc i32 %v0_a1e4 to i8
  %v2_a1e4 = load i32, i32* @r6, align 4
  %v3_a1e4 = add i32 %v2_a1e4, 2
  %v4_a1e4 = inttoptr i32 %v3_a1e4 to i8*
  store i8 %v1_a1e4, i8* %v4_a1e4, align 1
  %v0_a1e8 = load i32, i32* %r2.global-to-local, align 4
  %v1_a1e8 = trunc i32 %v0_a1e8 to i8
  %v2_a1e8 = load i32, i32* @r6, align 4
  %v3_a1e8 = add i32 %v2_a1e8, 3
  %v4_a1e8 = inttoptr i32 %v3_a1e8 to i8*
  store i8 %v1_a1e8, i8* %v4_a1e8, align 1
  %v0_a1ec = load i32, i32* %r8.global-to-local, align 4
  %v1_a1ec = trunc i32 %v0_a1ec to i8
  %v2_a1ec = load i32, i32* @r6, align 4
  %v3_a1ec = add i32 %v2_a1ec, 4
  %v4_a1ec = inttoptr i32 %v3_a1ec to i8*
  store i8 %v1_a1ec, i8* %v4_a1ec, align 1
  %v0_a1f0 = load i32, i32* @r4, align 4
  store i32 %v0_a1f0, i32* %stack_var_-40, align 4
  %v5_a1f4 = icmp slt i32 %v1_a1d0, %v1_a1dc
  br i1 %v5_a1f4, label %dec_label_pc_a068, label %dec_label_pc_a1f8

dec_label_pc_a1f8:                                ; preds = %bb96
  %v1_a200 = add i32 %v5_9e94, 8
  store i32 %v1_a200, i32* %r3.global-to-local, align 4
  %v1_a204 = add i32 %v5_9e94, 52
  store i32 %v1_a204, i32* %r1.global-to-local, align 4
  %v0_a210.pre.pre = load i32, i32* @fp, align 4
  br label %dec_label_pc_a210.preheader

dec_label_pc_a210.preheader:                      ; preds = %dec_label_pc_a1f8, %dec_label_pc_a4a4
  %v0_a210.pre = phi i32 [ %v0_a210.pre.pre, %dec_label_pc_a1f8 ], [ %v0_9f58, %dec_label_pc_a4a4 ]
  %stack_var_-120.0.ph = phi i32 [ %v1_a204, %dec_label_pc_a1f8 ], [ %v1_a4b0, %dec_label_pc_a4a4 ]
  %stack_var_-152.0.ph = phi i32 [ %v1_a200, %dec_label_pc_a1f8 ], [ %v1_a4ac, %dec_label_pc_a4a4 ]
  %v2_a488 = icmp eq i32 %v1_9eb4, 0
  %v2_a288 = icmp eq i32 %v1_9f48, 0
  %v2_a254 = icmp eq i32 %v5_9ee8, -1
  %v7_a254 = icmp eq i32 %v5_9ee8, -1
  br label %dec_label_pc_a210

dec_label_pc_a210:                                ; preds = %dec_label_pc_a2a4, %dec_label_pc_a210.preheader
  %v0_a210 = phi i32 [ %v0_a210.pre, %dec_label_pc_a210.preheader ], [ %v1_a368, %dec_label_pc_a2a4 ]
  %v2_a210 = icmp eq i32 %v0_a210, 0
  store i1 %v2_a210, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  %tmp97 = icmp slt i32 %v0_a210, 1
  br label %dec_label_pc_a218

dec_label_pc_a218:                                ; preds = %dec_label_pc_a218, %dec_label_pc_a210
  br i1 %tmp97, label %dec_label_pc_a218, label %dec_label_pc_a21c

dec_label_pc_a21c:                                ; preds = %dec_label_pc_a218
  store i32 0, i32* %stack_var_-40, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r8, align 4
  br label %dec_label_pc_a228

dec_label_pc_a228:                                ; preds = %dec_label_pc_a2a4, %dec_label_pc_a21c
  %v1_a23c = phi i32 [ %v1_a364, %dec_label_pc_a2a4 ], [ 0, %dec_label_pc_a21c ]
  %v5_a22c = mul i32 %v1_a23c, 24
  %v1_a230 = load i32, i32* @sb, align 4
  %v2_a230 = add i32 %v1_a230, %v5_a22c
  store i32 %v2_a230, i32* %r3.global-to-local, align 4
  store i32 %v2_9dc8, i32* %r1.global-to-local, align 4
  %v1_a238 = add i32 %v2_a230, 20
  %v2_a238 = inttoptr i32 %v1_a238 to i8*
  %v3_a238 = load i8, i8* %v2_a238, align 1
  %v4_a238 = zext i8 %v3_a238 to i32
  store i32 %v4_a238, i32* %r2.global-to-local, align 4
  %v4_a23c = mul i32 %v1_a23c, 4
  %v5_a23c = add i32 %v4_a23c, %v2_9dc8
  %v6_a23c = inttoptr i32 %v5_a23c to i32*
  %v7_a23c = load i32, i32* %v6_a23c, align 4
  store i32 %v7_a23c, i32* @r5, align 4
  %v7_a240 = icmp eq i8 %v3_a238, 31
  store i1 %v7_a240, i1* %cpsr_z.global-to-local, align 1
  %v1_a244 = add i32 %v7_a23c, 24
  store i32 %v1_a244, i32* @r6, align 4
  %v1_a248 = add i32 %v7_a23c, 44
  store i32 %v1_a248, i32* @r7, align 4
  %tmp105 = icmp ult i8 %v3_a238, 32
  br i1 %tmp105, label %dec_label_pc_a388, label %dec_label_pc_a250

dec_label_pc_a250:                                ; preds = %dec_label_pc_a228
  store i32 %v5_9ee8, i32* %r2.global-to-local, align 4
  store i1 %v7_a254, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a254, label %dec_label_pc_a3f0, label %dec_label_pc_a25c

dec_label_pc_a25c:                                ; preds = %dec_label_pc_a388, %dec_label_pc_a250
  store i32 65535, i32* @r4, align 4
  %v0_a264 = load i32, i32* @sl, align 4
  %v9_a264 = icmp eq i32 %v0_a264, 65535
  store i1 %v9_a264, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a264, label %dec_label_pc_a408, label %dec_label_pc_a26c

dec_label_pc_a26c:                                ; preds = %dec_label_pc_a3f0.dec_label_pc_a26c_crit_edge, %dec_label_pc_a25c
  %v1_a270 = phi i32 [ %v1_a270.pre, %dec_label_pc_a3f0.dec_label_pc_a26c_crit_edge ], [ 65535, %dec_label_pc_a25c ]
  store i32 %v3_9f50, i32* %r3.global-to-local, align 4
  %v9_a270 = icmp eq i32 %v3_9f50, %v1_a270
  store i1 %v9_a270, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a270, label %dec_label_pc_a440, label %dec_label_pc_a278

dec_label_pc_a278:                                ; preds = %dec_label_pc_a408.dec_label_pc_a278_crit_edge, %dec_label_pc_a26c
  %v1_a27c = phi i32 [ %v1_a27c.pre, %dec_label_pc_a408.dec_label_pc_a278_crit_edge ], [ %v1_a270, %dec_label_pc_a26c ]
  store i32 %v3_9f54, i32* %r1.global-to-local, align 4
  %v9_a27c = icmp eq i32 %v3_9f54, %v1_a27c
  store i1 %v9_a27c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a27c, label %dec_label_pc_a45c, label %dec_label_pc_a284

dec_label_pc_a284:                                ; preds = %dec_label_pc_a440, %dec_label_pc_a278
  store i32 %v1_9f48, i32* %r2.global-to-local, align 4
  store i1 %v2_a288, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a288, label %dec_label_pc_a480, label %.thread26

.thread26:                                        ; preds = %dec_label_pc_a284
  %v1_a28c = load i32, i32* @r5, align 4
  %v2_a28c = add i32 %v1_a28c, 16
  %v3_a28c = inttoptr i32 %v2_a28c to i32*
  %v4_a28c = load i32, i32* %v3_a28c, align 4
  store i32 %v4_a28c, i32* %r3.global-to-local, align 4
  %v2_a290 = load i32, i32* @r6, align 4
  %v3_a290 = add i32 %v2_a290, 16
  %v4_a290 = inttoptr i32 %v3_a290 to i32*
  store i32 %v4_a28c, i32* %v4_a290, align 4
  br label %dec_label_pc_a298

dec_label_pc_a298:                                ; preds = %bb102, %.thread26
  store i32 %v1_9eb4, i32* %r3.global-to-local, align 4
  store i1 %v2_a488, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a488, label %dec_label_pc_a2a4, label %dec_label_pc_a494

dec_label_pc_a2a4:                                ; preds = %dec_label_pc_a298, %dec_label_pc_a480, %dec_label_pc_a494
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_a2a8 = load i32, i32* @r8, align 4
  %v1_a2a8 = trunc i32 %v0_a2a8 to i8
  %v2_a2a8 = load i32, i32* @r5, align 4
  %v3_a2a8 = add i32 %v2_a2a8, 10
  %v4_a2a8 = inttoptr i32 %v3_a2a8 to i8*
  store i8 %v1_a2a8, i8* %v4_a2a8, align 1
  %v0_a2ac = load i32, i32* @r8, align 4
  %v1_a2ac = trunc i32 %v0_a2ac to i8
  %v2_a2ac = load i32, i32* @r5, align 4
  %v3_a2ac = add i32 %v2_a2ac, 11
  %v4_a2ac = inttoptr i32 %v3_a2ac to i8*
  store i8 %v1_a2ac, i8* %v4_a2ac, align 1
  %v0_a2b0 = load i32, i32* @r5, align 4
  store i32 %v0_a2b0, i32* @r0, align 4
  %v2_a2b4 = call i32 @function_d0b8(i32 %v0_a2b0, i32 20)
  %v3_a2b4 = trunc i32 %v2_a2b4 to i8
  %v4_a2b8 = sdiv i32 %v2_a2b4, 256
  store i32 %v4_a2b8, i32* %r3.global-to-local, align 4
  %v1_a2bc = trunc i32 %v4_a2b8 to i8
  %v2_a2bc = load i32, i32* @r5, align 4
  %v3_a2bc = add i32 %v2_a2bc, 11
  %v4_a2bc = inttoptr i32 %v3_a2bc to i8*
  store i8 %v1_a2bc, i8* %v4_a2bc, align 1
  %v3_a2c0 = load i32, i32* @r5, align 4
  %v4_a2c0 = add i32 %v3_a2c0, 10
  %v5_a2c0 = inttoptr i32 %v4_a2c0 to i8*
  store i8 %v3_a2b4, i8* %v5_a2c0, align 1
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_a2c8 = load i32, i32* @r8, align 4
  %v1_a2c8 = trunc i32 %v0_a2c8 to i8
  %v2_a2c8 = load i32, i32* @r6, align 4
  %v3_a2c8 = add i32 %v2_a2c8, 10
  %v4_a2c8 = inttoptr i32 %v3_a2c8 to i8*
  store i8 %v1_a2c8, i8* %v4_a2c8, align 1
  %v0_a2cc = load i32, i32* @r8, align 4
  %v1_a2cc = trunc i32 %v0_a2cc to i8
  %v2_a2cc = load i32, i32* @r6, align 4
  %v3_a2cc = add i32 %v2_a2cc, 11
  %v4_a2cc = inttoptr i32 %v3_a2cc to i8*
  store i8 %v1_a2cc, i8* %v4_a2cc, align 1
  %v0_a2d0 = load i32, i32* @r6, align 4
  store i32 %v0_a2d0, i32* @r0, align 4
  %v2_a2d4 = call i32 @function_d0b8(i32 %v0_a2d0, i32 20)
  %v3_a2d4 = trunc i32 %v2_a2d4 to i8
  store i32 %v2_a2d4, i32* %r0.global-to-local, align 4
  %v4_a2d8 = sdiv i32 %v2_a2d4, 256
  store i32 %v4_a2d8, i32* %r3.global-to-local, align 4
  %v3_a2dc = load i32, i32* @r6, align 4
  %v4_a2dc = add i32 %v3_a2dc, 10
  %v5_a2dc = inttoptr i32 %v4_a2dc to i8*
  store i8 %v3_a2d4, i8* %v5_a2dc, align 1
  %v0_a2e0 = load i32, i32* %r3.global-to-local, align 4
  %v1_a2e0 = trunc i32 %v0_a2e0 to i8
  %v2_a2e0 = load i32, i32* @r6, align 4
  %v3_a2e0 = add i32 %v2_a2e0, 11
  %v4_a2e0 = inttoptr i32 %v3_a2e0 to i8*
  store i8 %v1_a2e0, i8* %v4_a2e0, align 1
  %v0_a2e4 = load i32, i32* @r7, align 4
  %v1_a2e4 = add i32 %v0_a2e4, 4
  %v2_a2e4 = inttoptr i32 %v1_a2e4 to i8*
  %v3_a2e4 = load i8, i8* %v2_a2e4, align 1
  %v4_a2e4 = zext i8 %v3_a2e4 to i32
  store i32 %v4_a2e4, i32* %r3.global-to-local, align 4
  %v1_a2e8 = add i32 %v0_a2e4, 5
  %v2_a2e8 = inttoptr i32 %v1_a2e8 to i8*
  %v3_a2e8 = load i8, i8* %v2_a2e8, align 1
  %v4_a2e8 = zext i8 %v3_a2e8 to i32
  store i32 %v0_a2e4, i32* @r1, align 4
  %v4_a2f0 = mul nuw nsw i32 %v4_a2e8, 256
  %v5_a2f0 = or i32 %v4_a2f0, %v4_a2e4
  store i32 %v5_a2f0, i32* %r2.global-to-local, align 4
  %v0_a2f4 = load i32, i32* @r8, align 4
  %v1_a2f4 = trunc i32 %v0_a2f4 to i8
  %v3_a2f4 = add i32 %v0_a2e4, 6
  %v4_a2f4 = inttoptr i32 %v3_a2f4 to i8*
  store i8 %v1_a2f4, i8* %v4_a2f4, align 1
  store i32 %stack_var_-152.0.ph, i32* %r3.global-to-local, align 4
  %v0_a2fc = load i32, i32* @r8, align 4
  %v1_a2fc = trunc i32 %v0_a2fc to i8
  %v2_a2fc = load i32, i32* @r7, align 4
  %v3_a2fc = add i32 %v2_a2fc, 7
  %v4_a2fc = inttoptr i32 %v3_a2fc to i8*
  store i8 %v1_a2fc, i8* %v4_a2fc, align 1
  %v0_a300 = load i32, i32* @r6, align 4
  store i32 %v0_a300, i32* %r0.global-to-local, align 4
  %v4_a304 = call i32 @function_d114(i32 %v0_a300, i32 %v0_a2e4, i32 %v5_a2f0, i32 %stack_var_-152.0.ph)
  %v5_a304 = trunc i32 %v4_a304 to i8
  store i32 %v4_a304, i32* %r0.global-to-local, align 4
  %v3_a308 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_a308, i32* %r3.global-to-local, align 4
  %v3_a30c = mul i32 %v3_a308, 32
  store i32 %v3_a30c, i32* %r2.global-to-local, align 4
  %v0_a310 = load i32, i32* @r5, align 4
  %v1_a310 = add i32 %v0_a310, 16
  %v2_a310 = inttoptr i32 %v1_a310 to i32*
  %v3_a310 = load i32, i32* %v2_a310, align 4
  store i32 %v3_a310, i32* %r1.global-to-local, align 4
  %v5_a314 = mul i32 %v3_a308, 24
  store i32 %v5_a314, i32* %r2.global-to-local, align 4
  %v4_a31842 = udiv i32 %v4_a304, 256
  %v1_a31c = trunc i32 %v4_a31842 to i8
  %v2_a31c = load i32, i32* @r7, align 4
  %v3_a31c = add i32 %v2_a31c, 7
  %v4_a31c = inttoptr i32 %v3_a31c to i8*
  store i8 %v1_a31c, i8* %v4_a31c, align 1
  %v0_a320 = load i32, i32* %r2.global-to-local, align 4
  %v1_a320 = load i32, i32* @sb, align 4
  %v2_a320 = add i32 %v1_a320, %v0_a320
  store i32 %v2_a320, i32* %lr.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v3_a328 = load i32, i32* @r7, align 4
  %v4_a328 = add i32 %v3_a328, 6
  %v5_a328 = inttoptr i32 %v4_a328 to i8*
  store i8 %v5_a304, i8* %v5_a328, align 1
  %v0_a32c = load i32, i32* %r1.global-to-local, align 4
  %v1_a32c = load i32, i32* %lr.global-to-local, align 4
  %v2_a32c = add i32 %v1_a32c, 4
  %v3_a32c = inttoptr i32 %v2_a32c to i32*
  store i32 %v0_a32c, i32* %v3_a32c, align 4
  %v0_a330 = load i32, i32* %r3.global-to-local, align 4
  %v1_a330 = trunc i32 %v0_a330 to i8
  %v2_a330 = load i32, i32* %r2.global-to-local, align 4
  %v3_a330 = load i32, i32* @sb, align 4
  %v4_a330 = add i32 %v3_a330, %v2_a330
  %v5_a330 = inttoptr i32 %v4_a330 to i8*
  store i8 %v1_a330, i8* %v5_a330, align 1
  %v0_a334 = load i32, i32* @r8, align 4
  %v1_a334 = trunc i32 %v0_a334 to i8
  %v2_a334 = load i32, i32* %lr.global-to-local, align 4
  %v3_a334 = add i32 %v2_a334, 2
  %v4_a334 = inttoptr i32 %v3_a334 to i8*
  store i8 %v1_a334, i8* %v4_a334, align 1
  %v0_a338 = load i32, i32* @r8, align 4
  %v1_a338 = trunc i32 %v0_a338 to i8
  %v2_a338 = load i32, i32* %lr.global-to-local, align 4
  %v3_a338 = add i32 %v2_a338, 1
  %v4_a338 = inttoptr i32 %v3_a338 to i8*
  store i8 %v1_a338, i8* %v4_a338, align 1
  %v0_a33c = load i32, i32* @r8, align 4
  %v1_a33c = trunc i32 %v0_a33c to i8
  %v2_a33c = load i32, i32* %lr.global-to-local, align 4
  %v3_a33c = add i32 %v2_a33c, 3
  %v4_a33c = inttoptr i32 %v3_a33c to i8*
  store i8 %v1_a33c, i8* %v4_a33c, align 1
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_a348 = load i32, i32* @r5, align 4
  store i32 %v0_a348, i32* %r1.global-to-local, align 4
  store i32 %v3_9efc, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-120.0.ph, i32* %r2.global-to-local, align 4
  %v0_a354 = load i32, i32* %lr.global-to-local, align 4
  %v6_a35c = inttoptr i32 %v0_a348 to i32*
  %v7_a35c = call i32 @function_1331c(i32 %v3_9efc, i32* %v6_a35c, i32 %stack_var_-120.0.ph, i32 16384, i32 %v0_a354, i32 16)
  %v3_a360 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_a360, i32* %r3.global-to-local, align 4
  %v1_a364 = add i32 %v3_a360, 1
  store i32 %v1_a364, i32* %r0.global-to-local, align 4
  %v1_a368 = load i32, i32* @fp, align 4
  %v9_a368 = icmp eq i32 %v1_a364, %v1_a368
  store i1 %v9_a368, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_a364, i32* %stack_var_-40, align 4
  %v6_a370 = icmp slt i32 %v1_a364, %v1_a368
  br i1 %v6_a370, label %dec_label_pc_a228, label %dec_label_pc_a210

dec_label_pc_a378:                                ; preds = %dec_label_pc_9f0c
  store i32 %v3_9efc, i32* %r0.global-to-local, align 4
  %v1_a37c = call i32 @function_12a9c(i32 %v3_9efc)
  store i32 %v1_a37c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a380

dec_label_pc_a380:                                ; preds = %dec_label_pc_9da8, %dec_label_pc_a378
  %v29_a384 = phi i32 [ %v3_9efc, %dec_label_pc_9da8 ], [ %v1_a37c, %dec_label_pc_a378 ]
  store i32 %v3_9da8, i32* %r4.global-to-local, align 4
  store i32 %v15_9da8, i32* %r8.global-to-local, align 4
  ret i32 %v29_a384

dec_label_pc_a388:                                ; preds = %dec_label_pc_a228
  %v1_a388 = add i32 %v2_a230, 16
  %v2_a388 = inttoptr i32 %v1_a388 to i32*
  %v3_a388 = load i32, i32* %v2_a388, align 4
  store i32 %v3_a388, i32* %r4.global-to-local, align 4
  %v0_a38c = call i32 @function_e7cc()
  store i32 %v0_a38c, i32* %r0.global-to-local, align 4
  %v3_a390 = load i32, i32* %stack_var_-40, align 4
  %v5_a398 = mul i32 %v3_a390, 24
  %v0_a39c = load i32, i32* %r4.global-to-local, align 4
  %v1_a3a0 = load i32, i32* @sb, align 4
  %v2_a3a0 = add i32 %v1_a3a0, %v5_a398
  store i32 %v2_a3a0, i32* %r1.global-to-local, align 4
  %v1_a3a4 = and i32 %v0_a39c, 65280
  store i32 %v1_a3a4, i32* %r3.global-to-local, align 4
  %v1_a39c = udiv i32 %v0_a39c, 256
  %v3_a3a8 = and i32 %v1_a39c, 65280
  store i32 %v3_a3a8, i32* %r2.global-to-local, align 4
  %v1_a3b0 = add i32 %v2_a3a0, 20
  %v2_a3b0 = inttoptr i32 %v1_a3b0 to i8*
  %v3_a3b0 = load i8, i8* %v2_a3b0, align 1
  %v4_a3b0 = zext i8 %v3_a3b0 to i32
  store i32 %v4_a3b0, i32* %lr.global-to-local, align 4
  %v2_a3bc = call i32 @llvm.bswap.i32(i32 %v0_a39c)
  %v7_a3c0 = lshr i32 %v0_a38c, %v4_a3b0
  %v8_a3c0 = add i32 %v7_a3c0, %v2_a3bc
  %v3_a3cc = mul i32 %v8_a3c0, 16777216
  %v1_a3d0 = and i32 %v8_a3c0, 65280
  store i32 %v1_a3d0, i32* %r0.global-to-local, align 4
  store i32 %v5_9ee8, i32* %r2.global-to-local, align 4
  %v4_a3dc = mul nuw nsw i32 %v1_a3d0, 256
  %v5_a3dc = or i32 %v4_a3dc, %v3_a3cc
  store i32 %v5_a3dc, i32* %r1.global-to-local, align 4
  %v2_a3e0 = call i32 @llvm.bswap.i32(i32 %v8_a3c0)
  store i32 %v2_a3e0, i32* %r3.global-to-local, align 4
  store i1 %v7_a254, i1* %cpsr_z.global-to-local, align 1
  %v1_a3e8 = load i32, i32* @r5, align 4
  %v2_a3e8 = add i32 %v1_a3e8, 16
  %v3_a3e8 = inttoptr i32 %v2_a3e8 to i32*
  store i32 %v2_a3e0, i32* %v3_a3e8, align 4
  br i1 %v2_a254, label %dec_label_pc_a3f0, label %dec_label_pc_a25c

dec_label_pc_a3f0:                                ; preds = %dec_label_pc_a388, %dec_label_pc_a250
  %v0_a3f0 = call i32 @function_e7cc()
  store i32 %v0_a3f0, i32* %r0.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  %v0_a3fc = load i32, i32* @sl, align 4
  %v9_a3fc = icmp eq i32 %v0_a3fc, 65535
  store i1 %v9_a3fc, i1* %cpsr_z.global-to-local, align 1
  %v1_a400 = load i32, i32* @r5, align 4
  %v2_a400 = add i32 %v1_a400, 12
  %v3_a400 = inttoptr i32 %v2_a400 to i32*
  store i32 %v0_a3f0, i32* %v3_a400, align 4
  br i1 %v9_a3fc, label %dec_label_pc_a408, label %dec_label_pc_a3f0.dec_label_pc_a26c_crit_edge

dec_label_pc_a3f0.dec_label_pc_a26c_crit_edge:    ; preds = %dec_label_pc_a3f0
  %v1_a270.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_a26c

dec_label_pc_a408:                                ; preds = %dec_label_pc_a3f0, %dec_label_pc_a25c
  %v0_a408 = call i32 @function_e7cc()
  %v3_a410 = urem i32 %v0_a408, 65536
  store i32 %v3_a410, i32* %r0.global-to-local, align 4
  %v3_a41415 = udiv i32 %v0_a408, 256
  %v1_a418 = trunc i32 %v3_a41415 to i8
  %v2_a418 = load i32, i32* @r5, align 4
  %v3_a418 = add i32 %v2_a418, 5
  %v4_a418 = inttoptr i32 %v3_a418 to i8*
  store i8 %v1_a418, i8* %v4_a418, align 1
  %v0_a41c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v3_9f50, i32* %r3.global-to-local, align 4
  %v1_a424 = sub i32 999, %v0_a41c
  store i32 %v1_a424, i32* %r2.global-to-local, align 4
  %v3_a428 = sdiv i32 %v1_a424, 256
  store i32 %v3_a428, i32* %r1.global-to-local, align 4
  %v1_a42c = load i32, i32* @r4, align 4
  %v9_a42c = icmp eq i32 %v3_9f50, %v1_a42c
  store i1 %v9_a42c, i1* %cpsr_z.global-to-local, align 1
  %v1_a430 = trunc i32 %v0_a41c to i8
  %v2_a430 = load i32, i32* @r5, align 4
  %v3_a430 = add i32 %v2_a430, 4
  %v4_a430 = inttoptr i32 %v3_a430 to i8*
  store i8 %v1_a430, i8* %v4_a430, align 1
  %v0_a434 = load i32, i32* %r1.global-to-local, align 4
  %v1_a434 = trunc i32 %v0_a434 to i8
  %v2_a434 = load i32, i32* @r6, align 4
  %v3_a434 = add i32 %v2_a434, 5
  %v4_a434 = inttoptr i32 %v3_a434 to i8*
  store i8 %v1_a434, i8* %v4_a434, align 1
  %v0_a438 = load i32, i32* %r2.global-to-local, align 4
  %v1_a438 = trunc i32 %v0_a438 to i8
  %v2_a438 = load i32, i32* @r6, align 4
  %v3_a438 = add i32 %v2_a438, 4
  %v4_a438 = inttoptr i32 %v3_a438 to i8*
  store i8 %v1_a438, i8* %v4_a438, align 1
  %v0_a43c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a43c, label %dec_label_pc_a440, label %dec_label_pc_a408.dec_label_pc_a278_crit_edge

dec_label_pc_a408.dec_label_pc_a278_crit_edge:    ; preds = %dec_label_pc_a408
  %v1_a27c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_a278

dec_label_pc_a440:                                ; preds = %dec_label_pc_a408, %dec_label_pc_a26c
  %v0_a440 = call i32 @function_e7cc()
  %v1_a440 = trunc i32 %v0_a440 to i8
  store i32 %v0_a440, i32* %r0.global-to-local, align 4
  store i32 %v3_9f54, i32* %r1.global-to-local, align 4
  %v4_a448 = sdiv i32 %v0_a440, 256
  store i32 %v4_a448, i32* %r3.global-to-local, align 4
  %v1_a44c = load i32, i32* @r4, align 4
  %v9_a44c = icmp eq i32 %v3_9f54, %v1_a44c
  store i1 %v9_a44c, i1* %cpsr_z.global-to-local, align 1
  %v3_a450 = load i32, i32* @r5, align 4
  %v4_a450 = add i32 %v3_a450, 44
  %v5_a450 = inttoptr i32 %v4_a450 to i8*
  store i8 %v1_a440, i8* %v5_a450, align 1
  %v0_a454 = load i32, i32* %r3.global-to-local, align 4
  %v1_a454 = trunc i32 %v0_a454 to i8
  %v2_a454 = load i32, i32* @r7, align 4
  %v3_a454 = add i32 %v2_a454, 1
  %v4_a454 = inttoptr i32 %v3_a454 to i8*
  store i8 %v1_a454, i8* %v4_a454, align 1
  %v0_a458 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a458, label %dec_label_pc_a45c, label %dec_label_pc_a284

dec_label_pc_a45c:                                ; preds = %dec_label_pc_a440, %dec_label_pc_a278
  %v0_a45c = call i32 @function_e7cc()
  %v1_a45c = trunc i32 %v0_a45c to i8
  store i32 %v0_a45c, i32* %r0.global-to-local, align 4
  store i32 %v1_9f48, i32* %r2.global-to-local, align 4
  %v4_a464 = sdiv i32 %v0_a45c, 256
  store i32 %v4_a464, i32* %r3.global-to-local, align 4
  store i1 %v2_a288, i1* %cpsr_z.global-to-local, align 1
  %v1_a46c = trunc i32 %v4_a464 to i8
  %v2_a46c = load i32, i32* @r7, align 4
  %v3_a46c = add i32 %v2_a46c, 3
  %v4_a46c = inttoptr i32 %v3_a46c to i8*
  store i8 %v1_a46c, i8* %v4_a46c, align 1
  %v0_a470 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a470, label %bb101, label %bb100

bb100:                                            ; preds = %dec_label_pc_a45c
  %v1_a470 = load i32, i32* @r5, align 4
  %v2_a470 = add i32 %v1_a470, 16
  %v3_a470 = inttoptr i32 %v2_a470 to i32*
  %v4_a470 = load i32, i32* %v3_a470, align 4
  store i32 %v4_a470, i32* %r3.global-to-local, align 4
  br label %bb101

bb101:                                            ; preds = %dec_label_pc_a45c, %bb100
  %v3_a474 = load i32, i32* @r7, align 4
  %v4_a474 = add i32 %v3_a474, 2
  %v5_a474 = inttoptr i32 %v4_a474 to i8*
  store i8 %v1_a45c, i8* %v5_a474, align 1
  %v0_a478 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a478, label %dec_label_pc_a480, label %bb102

bb102:                                            ; preds = %bb101
  %v1_a478 = load i32, i32* %r3.global-to-local, align 4
  %v2_a478 = load i32, i32* @r6, align 4
  %v3_a478 = add i32 %v2_a478, 16
  %v4_a478 = inttoptr i32 %v3_a478 to i32*
  store i32 %v1_a478, i32* %v4_a478, align 4
  br label %dec_label_pc_a298

dec_label_pc_a480:                                ; preds = %dec_label_pc_a284, %bb101
  %v0_a480 = call i32 @function_e7cc()
  store i32 %v0_a480, i32* %r0.global-to-local, align 4
  store i32 %v1_9eb4, i32* %r3.global-to-local, align 4
  store i1 %v2_a488, i1* %cpsr_z.global-to-local, align 1
  %v1_a48c = load i32, i32* @r6, align 4
  %v2_a48c = add i32 %v1_a48c, 16
  %v3_a48c = inttoptr i32 %v2_a48c to i32*
  store i32 %v0_a480, i32* %v3_a48c, align 4
  br i1 %v2_a488, label %dec_label_pc_a2a4, label %dec_label_pc_a494

dec_label_pc_a494:                                ; preds = %dec_label_pc_a298, %dec_label_pc_a480
  %v0_a494 = load i32, i32* @r7, align 4
  %v1_a494 = add i32 %v0_a494, 8
  store i32 %v1_a494, i32* %r0.global-to-local, align 4
  store i32 %v5_9e94, i32* @r1, align 4
  %v1_a49c = inttoptr i32 %v1_a494 to i8*
  %v2_a49c = call i32 @function_e94c(i8* %v1_a49c)
  store i32 %v2_a49c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a2a4

dec_label_pc_a4a4:                                ; preds = %dec_label_pc_9f34
  %v1_a4ac = add i32 %v5_9e94, 8
  store i32 %v1_a4ac, i32* %r2.global-to-local, align 4
  %v1_a4b0 = add i32 %v5_9e94, 52
  store i32 %v1_a4b0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_a210.preheader

; uselistorder directives
  uselistorder i32 %v1_a4b0, { 1, 0 }
  uselistorder i32 %v1_a4ac, { 1, 0 }
  uselistorder i32 %v4_a464, { 1, 0 }
  uselistorder i32 %v0_a45c, { 0, 2, 1 }
  uselistorder i32 %v0_a440, { 0, 2, 1 }
  uselistorder i32 %v2_a3e0, { 1, 0 }
  uselistorder i32 %v8_a3c0, { 1, 2, 0 }
  uselistorder i32 %v0_a39c, { 1, 0, 2 }
  uselistorder i32 %v1_a368, { 1, 2, 0 }
  uselistorder i32 %v1_a364, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v3_a308, { 1, 0, 2 }
  uselistorder i32 %v4_a304, { 0, 2, 1 }
  uselistorder i32 %v0_a2e4, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v2_a2d4, { 0, 2, 1 }
  uselistorder i32 %v4_a2b8, { 1, 0 }
  uselistorder i32 %v7_a23c, { 1, 0, 2 }
  uselistorder i32 %v0_a210, { 1, 0 }
  uselistorder i1 %v7_a254, { 2, 1, 0 }
  uselistorder i1 %v2_a488, { 2, 3, 1, 0 }
  uselistorder i32 %v1_a1d0, { 1, 0, 2 }
  uselistorder i32 %v0_a194, { 1, 0, 2 }
  uselistorder i32 %v3_a048, { 0, 2, 1 }
  uselistorder i32 %v3_a008, { 1, 0 }
  uselistorder i32 %tmp86, { 1, 0 }
  uselistorder i32 %v1_9fc0, { 1, 0 }
  uselistorder i32 %v1_9f9c, { 1, 0 }
  uselistorder i32 %v1_9f98, { 0, 2, 1 }
  uselistorder i32 %v3_9f7c, { 2, 1, 0 }
  uselistorder i32 %v0_9f58, { 1, 0, 2 }
  uselistorder i32 %v1_9f48, { 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_9f44, { 0, 2, 1 }
  uselistorder i32 %v0_9f40, { 0, 1, 2, 4, 3 }
  uselistorder i1 %v7_9f2c, { 1, 0 }
  uselistorder i1 %v7_9f00, { 1, 0 }
  uselistorder i32 %v3_9efc, { 1, 3, 4, 5, 6, 2, 0, 7 }
  uselistorder i32 %v5_9ee8, { 5, 3, 0, 4, 2, 1 }
  uselistorder i32 %v1_9eb4, { 1, 0, 2 }
  uselistorder i32 %v5_9e94, { 5, 4, 3, 2, 1, 0 }
  uselistorder i8 %v5_9e38, { 1, 0 }
  uselistorder i32 %v2_9dc8, { 0, 3, 1, 2 }
  uselistorder i32 %v1_9dac, { 2, 1, 0 }
  uselistorder i32* %stack_var_-40, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 12, 11 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 20, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 40, 42, 43, 44, 45, 46, 47, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 31, 33, 34, 36, 35, 37, 38, 40, 39, 42, 41, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 3, 6, 7, 4, 5, 9, 8, 10, 13, 11, 12, 14, 16, 15, 17, 18, 23, 19, 20, 21, 22, 26, 24, 25, 27, 29, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 21, 25, 26, 27, 28, 29 }
  uselistorder label %dec_label_pc_a494, { 1, 0 }
  uselistorder label %dec_label_pc_a480, { 1, 0 }
  uselistorder label %bb101, { 1, 0 }
  uselistorder label %dec_label_pc_a380, { 1, 0 }
  uselistorder label %dec_label_pc_a2a4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_a210.preheader, { 1, 0 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %bb95, { 1, 0 }
  uselistorder label %bb93, { 1, 0 }
  uselistorder label %bb91, { 1, 0 }
  uselistorder label %.thread23, { 2, 1, 0 }
}

define i32 @function_a4c4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_a4c4:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_a4c4 = load i32, i32* @r4, align 4
  %v12_a4c4 = load i32, i32* @r7, align 4
  %v1_a4c8 = urem i32 %arg1, 256
  store i32 %v1_a4c8, i32* %sb.global-to-local, align 4
  store i32 %arg2, i32* @sl, align 4
  %v1_a4dc = urem i32 %arg3, 256
  store i32 %v1_a4dc, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  %v2_a4e4 = call i32 @function_1366c(i32 %v1_a4c8, i32 4)
  %v0_a4e8 = load i32, i32* @r5, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_a4f4 = load i32, i32* @r4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v5_a4fc = inttoptr i32 %v0_a4e8 to i32*
  %v6_a4fc = call i32 @function_85e0(i32 %v0_a4f4, i32* %v5_a4fc, i32 2, i32 0)
  %v1_a508 = urem i32 %v6_a4fc, 256
  store i32 %v1_a508, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_a514 = load i32, i32* @r4, align 4
  %v0_a518 = load i32, i32* @r5, align 4
  %v5_a51c = trunc i32 %v6_a4fc to i8
  %v6_a520 = inttoptr i32 %v0_a518 to i32*
  %v7_a520 = call i32 @function_85e0(i32 %v0_a514, i32* %v6_a520, i32 3, i32 65535)
  %v0_a524 = load i32, i32* @r5, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_a520, i32* @r7, align 4
  %v0_a534 = load i32, i32* @r4, align 4
  %v4_a538 = inttoptr i32 %v0_a524 to i32*
  %v5_a538 = call i32 @function_85e0(i32 %v0_a534, i32* %v4_a538, i32 4, i32 64)
  %v1_a540 = urem i32 %v5_a538, 256
  store i32 %v1_a540, i32* %ip.global-to-local, align 4
  %v0_a544 = load i32, i32* @r5, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a550 = load i32, i32* @r4, align 4
  %v5_a554 = trunc i32 %v5_a538 to i8
  %v6_a558 = inttoptr i32 %v0_a544 to i32*
  %v7_a558 = call i32 @function_85e0(i32 %v0_a550, i32* %v6_a558, i32 5, i32 0)
  %v1_a564 = urem i32 %v7_a558, 256
  store i32 %v1_a564, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_a570 = load i32, i32* @r4, align 4
  %v0_a574 = load i32, i32* @r5, align 4
  %v5_a57c = inttoptr i32 %v0_a574 to i32*
  %v6_a57c = call i32 @function_85e0(i32 %v0_a570, i32* %v5_a57c, i32 6, i32 65535)
  store i32 27015, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_a58c = load i32, i32* @r5, align 4
  store i32 %v6_a57c, i32* @r6, align 4
  %v0_a594 = load i32, i32* @r4, align 4
  %v4_a598 = inttoptr i32 %v0_a58c to i32*
  %v5_a598 = call i32 @function_85e0(i32 %v0_a594, i32* %v4_a598, i32 7, i32 27015)
  store i32 %v5_a598, i32* @r4, align 4
  %v1_a5a4 = call i32 @function_11bcc(i32 20)
  %v3_a5b0 = call i32 @function_11ae8(i32 20, i32* nonnull %stack_var_-44)
  store i32 %v3_a5b0, i32* %r8.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  %v3_a5c4 = call i32 @function_13380(i32 2, i32 3, i32 17)
  %v7_a5c8 = icmp eq i32 %v3_a5c4, -1
  store i1 %v7_a5c8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_a5c4, i32* %fp.global-to-local, align 4
  br i1 %v7_a5c8, label %dec_label_pc_a97c, label %dec_label_pc_a5d4

dec_label_pc_a5d4:                                ; preds = %dec_label_pc_a4c4
  store i32 1, i32* %stack_var_-40, align 4
  %v6_a5dc = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v6_a5dc, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v6_a5f0 = call i32 @function_13350(i32 %v3_a5c4, i32 0, i32 3, i32* nonnull %stack_var_-40, i32 ptrtoint (i32* @0 to i32))
  %v7_a5f4 = icmp eq i32 %v6_a5f0, -1
  store i1 %v7_a5f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a5f4, label %dec_label_pc_a974, label %dec_label_pc_a5fc

dec_label_pc_a5fc:                                ; preds = %dec_label_pc_a5d4
  %v0_a5fc = load i32, i32* @r4, align 4
  %v3_a5fc = mul i32 %v0_a5fc, 65536
  store i32 %v3_a5fc, i32* @lr, align 4
  %v0_a600 = load i32, i32* @r7, align 4
  %v0_a604 = load i32, i32* @r6, align 4
  %v3_a604 = mul i32 %v0_a604, 65536
  store i32 %v3_a604, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v3_a60c = urem i32 %v0_a600, 65536
  %v3_a610 = urem i32 %v0_a604, 65536
  store i32 %v3_a610, i32* %r2.global-to-local, align 4
  %v3_a614 = urem i32 %v0_a5fc, 65536
  store i32 %v3_a614, i32* %r3.global-to-local, align 4
  %v0_a618 = load i32, i32* %sb.global-to-local, align 4
  %v2_a618 = icmp eq i32 %v0_a618, 0
  store i1 %v2_a618, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-40, align 4
  %tmp50 = icmp slt i32 %v0_a618, 1
  br i1 %tmp50, label %dec_label_pc_a79c, label %dec_label_pc_a630

dec_label_pc_a630:                                ; preds = %dec_label_pc_a5fc
  %v1_a634 = urem i32 %v0_a5fc, 256
  %v1_a638 = urem i32 %v0_a604, 256
  %v1_a63c = urem i32 %v0_a600, 256
  %v3_a640 = mul nuw nsw i32 %v1_a638, 256
  %v3_a644 = mul nuw nsw i32 %v1_a634, 256
  %tmp51 = udiv i32 %v0_a600, 256
  %v3_a648 = urem i32 %tmp51, 256
  %v4_a64c = mul nuw nsw i32 %v1_a63c, 256
  %v5_a64c = or i32 %v4_a64c, %v3_a648
  store i32 %v5_a64c, i32* @r7, align 4
  %tmp52 = udiv i32 %v0_a5fc, 256
  %v4_a650 = urem i32 %tmp52, 256
  %v5_a650 = or i32 %v4_a650, %v3_a644
  store i32 %v5_a650, i32* @r5, align 4
  %tmp53 = udiv i32 %v0_a604, 256
  %v4_a654 = urem i32 %tmp53, 256
  %v5_a654 = or i32 %v4_a654, %v3_a640
  store i32 %v5_a654, i32* @r6, align 4
  store i32 %v1_a638, i32* %r2.global-to-local, align 4
  store i32 %v1_a634, i32* %r3.global-to-local, align 4
  %v2_a6d0 = icmp eq i32 %v1_a564, 0
  %v4_a6d4 = sext i8 %v5_a554 to i32
  %sext = mul i32 %v0_a600, 16777216
  %v4_a6f0 = sdiv i32 %sext, 16777216
  %sext6 = mul i32 %v0_a604, 16777216
  %v4_a74c = sdiv i32 %sext6, 16777216
  %sext7 = mul i32 %v0_a5fc, 16777216
  %v4_a76c = sdiv i32 %sext7, 16777216
  br label %dec_label_pc_a670

dec_label_pc_a670:                                ; preds = %bb57, %dec_label_pc_a630
  %v2_a678 = call i32 @function_1366c(i32 128, i32 1)
  store i32 %v2_a4e4, i32* %r2.global-to-local, align 4
  %v3_a680 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_a680, i32* %r3.global-to-local, align 4
  %v2_a684 = load i32, i32* @r4, align 4
  %v5_a684 = mul i32 %v2_a684, 4
  %v6_a684 = add i32 %v5_a684, %v2_a4e4
  %v7_a684 = inttoptr i32 %v6_a684 to i32*
  store i32 %v2_a678, i32* %v7_a684, align 4
  %v0_a688 = load i32, i32* %r2.global-to-local, align 4
  %v1_a688 = load i32, i32* %r3.global-to-local, align 4
  %v4_a688 = mul i32 %v1_a688, 4
  %v5_a688 = add i32 %v4_a688, %v0_a688
  %v6_a688 = inttoptr i32 %v5_a688 to i32*
  %v7_a688 = load i32, i32* %v6_a688, align 4
  store i32 %v7_a688, i32* @lr, align 4
  %v1_a68c = inttoptr i32 %v7_a688 to i8*
  %v2_a68c = load i8, i8* %v1_a68c, align 1
  %tmp = urem i8 %v2_a68c, 16
  %v1_a690 = zext i8 %tmp to i32
  %v1_a694 = or i32 %v1_a690, 64
  store i32 %v1_a694, i32* %r3.global-to-local, align 4
  %v1_a698 = trunc i32 %v1_a694 to i8
  store i8 %v1_a698, i8* %v1_a68c, align 1
  %v0_a69c = load i32, i32* @lr, align 4
  %v1_a69c = inttoptr i32 %v0_a69c to i8*
  %v2_a69c = load i8, i8* %v1_a69c, align 1
  %v1_a6a0 = and i8 %v2_a69c, -16
  %v1_a6a4 = or i8 %v1_a6a0, 5
  store i8 %v1_a6a4, i8* %v1_a69c, align 1
  %v2_a6b0 = load i32, i32* @lr, align 4
  %v3_a6b0 = add i32 %v2_a6b0, 1
  %v4_a6b0 = inttoptr i32 %v3_a6b0 to i8*
  store i8 %v5_a51c, i8* %v4_a6b0, align 1
  %v3_a6b4 = load i32, i32* %stack_var_-44, align 4
  %v1_a6b8 = add i32 %v3_a6b4, 32
  %tmp54 = mul i32 %v1_a6b8, 256
  %v1_a6c4 = and i32 %tmp54, 65280
  %tmp55 = udiv i32 %v1_a6b8, 256
  %v4_a6c8 = urem i32 %tmp55, 256
  %v5_a6c8 = or i32 %v4_a6c8, %v1_a6c4
  store i32 %v5_a6c8, i32* %r2.global-to-local, align 4
  store i1 %v2_a6d0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v4_a6d4, i32* %r3.global-to-local, align 4
  %v2_a6d8 = load i32, i32* @lr, align 4
  %v3_a6d8 = add i32 %v2_a6d8, 8
  %v4_a6d8 = inttoptr i32 %v3_a6d8 to i8*
  store i8 %v5_a554, i8* %v4_a6d8, align 1
  %v0_a6dc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a6dc, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_a670
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_a6e0 = load i32, i32* @lr, align 4
  %v4_a6e0 = add i32 %v3_a6e0, 6
  %v5_a6e0 = inttoptr i32 %v4_a6e0 to i8*
  store i8 64, i8* %v5_a6e0, align 1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_a670, %bb
  %v0_a6e4 = load i32, i32* %r2.global-to-local, align 4
  %v1_a6e4 = trunc i32 %v0_a6e4 to i8
  %v2_a6e4 = load i32, i32* @lr, align 4
  %v3_a6e4 = add i32 %v2_a6e4, 2
  %v4_a6e4 = inttoptr i32 %v3_a6e4 to i8*
  store i8 %v1_a6e4, i8* %v4_a6e4, align 1
  %v0_a6e8 = load i32, i32* %r2.global-to-local, align 4
  %v3_a6e8 = sdiv i32 %v0_a6e8, 256
  store i32 %v3_a6e8, i32* %ip.global-to-local, align 4
  store i32 %v4_a6f0, i32* %r2.global-to-local, align 4
  %v2_a6f4 = load i32, i32* @lr, align 4
  %v3_a6f4 = add i32 %v2_a6f4, 9
  %v4_a6f4 = inttoptr i32 %v3_a6f4 to i8*
  store i8 17, i8* %v4_a6f4, align 1
  store i32 ptrtoint (i32* @global_var_1da7c.49 to i32), i32* %r3.global-to-local, align 4
  %v0_a6fc = load i32, i32* %r2.global-to-local, align 4
  %v1_a6fc = trunc i32 %v0_a6fc to i8
  %v2_a6fc = load i32, i32* @lr, align 4
  %v3_a6fc = add i32 %v2_a6fc, 5
  %v4_a6fc = inttoptr i32 %v3_a6fc to i8*
  store i8 %v1_a6fc, i8* %v4_a6fc, align 1
  %v0_a700 = load i32, i32* %ip.global-to-local, align 4
  %v1_a700 = trunc i32 %v0_a700 to i8
  %v2_a700 = load i32, i32* @lr, align 4
  %v3_a700 = add i32 %v2_a700, 3
  %v4_a700 = inttoptr i32 %v3_a700 to i8*
  store i8 %v1_a700, i8* %v4_a700, align 1
  %v0_a704 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a704, label %.thread8, label %bb56

.thread8:                                         ; preds = %.thread
  %v3_a7089 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_a7089, i32* %ip.global-to-local, align 4
  br label %bb57

bb56:                                             ; preds = %.thread
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_a708 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_a708, i32* %ip.global-to-local, align 4
  %v3_a70c = load i32, i32* @lr, align 4
  %v4_a70c = add i32 %v3_a70c, 7
  %v5_a70c = inttoptr i32 %v4_a70c to i8*
  store i8 0, i8* %v5_a70c, align 1
  %v0_a714.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb57

bb57:                                             ; preds = %.thread8, %bb56
  %v0_a714 = phi i32 [ %v3_a7089, %.thread8 ], [ %v0_a714.pre, %bb56 ]
  %v2_a710 = load i32, i32* @global_var_1da7c.49, align 4
  store i32 %v2_a710, i32* %r2.global-to-local, align 4
  %v3_a714 = mul i32 %v0_a714, 32
  store i32 %v3_a714, i32* %r3.global-to-local, align 4
  %v1_a718 = load i32, i32* @lr, align 4
  %v2_a718 = add i32 %v1_a718, 12
  %v3_a718 = inttoptr i32 %v2_a718 to i32*
  store i32 %v2_a710, i32* %v3_a718, align 4
  %v0_a71c = load i32, i32* %r3.global-to-local, align 4
  %v1_a71c = load i32, i32* %ip.global-to-local, align 4
  %tmp60 = mul i32 %v1_a71c, -8
  %v5_a71c = add i32 %v0_a71c, %tmp60
  %v1_a720 = load i32, i32* @sl, align 4
  %v2_a720 = add i32 %v5_a71c, %v1_a720
  store i32 %v2_a720, i32* %r3.global-to-local, align 4
  %v1_a724 = add i32 %v2_a720, 16
  %v2_a724 = inttoptr i32 %v1_a724 to i32*
  %v3_a724 = load i32, i32* %v2_a724, align 4
  %v1_a728 = load i32, i32* @lr, align 4
  %v2_a728 = add i32 %v1_a728, 16
  %v3_a728 = inttoptr i32 %v2_a728 to i32*
  store i32 %v3_a724, i32* %v3_a728, align 4
  %v3_a72c = load i32, i32* %stack_var_-44, align 4
  %v1_a730 = add i32 %v3_a72c, 12
  %tmp58 = mul i32 %v1_a730, 256
  %v1_a740 = and i32 %tmp58, 65280
  %tmp59 = udiv i32 %v1_a730, 256
  %v4_a744 = urem i32 %tmp59, 256
  %v5_a744 = or i32 %v4_a744, %v1_a740
  store i32 %v5_a744, i32* %ip.global-to-local, align 4
  %v1_a748 = load i32, i32* @lr, align 4
  %v2_a748 = add i32 %v1_a748, 28
  %v3_a748 = inttoptr i32 %v2_a748 to i32*
  store i32 -1, i32* %v3_a748, align 4
  store i32 %v4_a74c, i32* %r2.global-to-local, align 4
  %v0_a750 = load i32, i32* @lr, align 4
  %v1_a750 = add i32 %v0_a750, 20
  store i32 %v1_a750, i32* %r4.global-to-local, align 4
  %v0_a754 = load i32, i32* %ip.global-to-local, align 4
  %v3_a754 = sdiv i32 %v0_a754, 256
  store i32 %v3_a754, i32* %r3.global-to-local, align 4
  %v0_a758 = load i32, i32* @r7, align 4
  %v1_a758 = trunc i32 %v0_a758 to i8
  %v3_a758 = add i32 %v0_a750, 4
  %v4_a758 = inttoptr i32 %v3_a758 to i8*
  store i8 %v1_a758, i8* %v4_a758, align 1
  %v0_a75c = load i32, i32* @r6, align 4
  %v1_a75c = trunc i32 %v0_a75c to i8
  %v2_a75c = load i32, i32* @lr, align 4
  %v3_a75c = add i32 %v2_a75c, 20
  %v4_a75c = inttoptr i32 %v3_a75c to i8*
  store i8 %v1_a75c, i8* %v4_a75c, align 1
  %v0_a760 = load i32, i32* %r3.global-to-local, align 4
  %v1_a760 = trunc i32 %v0_a760 to i8
  %v2_a760 = load i32, i32* %r4.global-to-local, align 4
  %v3_a760 = add i32 %v2_a760, 5
  %v4_a760 = inttoptr i32 %v3_a760 to i8*
  store i8 %v1_a760, i8* %v4_a760, align 1
  %v0_a764 = load i32, i32* @r5, align 4
  %v1_a764 = trunc i32 %v0_a764 to i8
  %v2_a764 = load i32, i32* %r4.global-to-local, align 4
  %v3_a764 = add i32 %v2_a764, 2
  %v4_a764 = inttoptr i32 %v3_a764 to i8*
  store i8 %v1_a764, i8* %v4_a764, align 1
  %v0_a768 = load i32, i32* %r2.global-to-local, align 4
  %v1_a768 = trunc i32 %v0_a768 to i8
  %v2_a768 = load i32, i32* %r4.global-to-local, align 4
  %v3_a768 = add i32 %v2_a768, 1
  %v4_a768 = inttoptr i32 %v3_a768 to i8*
  store i8 %v1_a768, i8* %v4_a768, align 1
  store i32 %v4_a76c, i32* %r3.global-to-local, align 4
  %v0_a770 = load i32, i32* %ip.global-to-local, align 4
  %v1_a770 = trunc i32 %v0_a770 to i8
  %v2_a770 = load i32, i32* %r4.global-to-local, align 4
  %v3_a770 = add i32 %v2_a770, 4
  %v4_a770 = inttoptr i32 %v3_a770 to i8*
  store i8 %v1_a770, i8* %v4_a770, align 1
  %v0_a774 = load i32, i32* %r3.global-to-local, align 4
  %v1_a774 = trunc i32 %v0_a774 to i8
  %v2_a774 = load i32, i32* %r4.global-to-local, align 4
  %v3_a774 = add i32 %v2_a774, 3
  %v4_a774 = inttoptr i32 %v3_a774 to i8*
  store i8 %v1_a774, i8* %v4_a774, align 1
  %v0_a778 = load i32, i32* %r8.global-to-local, align 4
  %v0_a77c = load i32, i32* @lr, align 4
  %v1_a77c = add i32 %v0_a77c, 32
  %v3_a780 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a780, i32* %r2.global-to-local, align 4
  %v3_a784 = call i32 @function_12214(i32 %v1_a77c, i32 %v0_a778, i32 %v3_a780)
  %v3_a788 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_a788, i32* %r3.global-to-local, align 4
  %v1_a78c = add i32 %v3_a788, 1
  store i32 %v1_a78c, i32* @r4, align 4
  %v1_a790 = load i32, i32* %sb.global-to-local, align 4
  %v9_a790 = icmp eq i32 %v1_a78c, %v1_a790
  store i1 %v9_a790, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_a78c, i32* %stack_var_-40, align 4
  %v5_a798 = icmp slt i32 %v1_a78c, %v1_a790
  br i1 %v5_a798, label %dec_label_pc_a670, label %dec_label_pc_a79c

dec_label_pc_a79c:                                ; preds = %bb57, %dec_label_pc_a5fc
  %v0_a79c = phi i32 [ %v0_a618, %dec_label_pc_a5fc ], [ %v1_a790, %bb57 ]
  %v2_a79c = icmp eq i32 %v0_a79c, 0
  store i1 %v2_a79c, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_a7e4 = icmp eq i32 %v3_a60c, 65535
  br label %dec_label_pc_a7a4.outer

dec_label_pc_a7a4.outer:                          ; preds = %dec_label_pc_a8b4, %dec_label_pc_a79c
  %v1_a7a4.ph.in = phi i32 [ %v1_a8a8, %dec_label_pc_a8b4 ], [ %v0_a79c, %dec_label_pc_a79c ]
  %v0_a7a4.ph = phi i1 [ %v2_a8b4, %dec_label_pc_a8b4 ], [ %v2_a79c, %dec_label_pc_a79c ]
  %v1_a7a4.ph = icmp slt i32 %v1_a7a4.ph.in, 0
  %v4_a7a4 = or i1 %v1_a7a4.ph, %v0_a7a4.ph
  br label %dec_label_pc_a7a4

dec_label_pc_a7a4:                                ; preds = %dec_label_pc_a7a4.outer, %dec_label_pc_a7a4
  br i1 %v4_a7a4, label %dec_label_pc_a7a4, label %dec_label_pc_a7a8

dec_label_pc_a7a8:                                ; preds = %dec_label_pc_a7a4
  store i32 0, i32* %stack_var_-40, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_a7b4

dec_label_pc_a7b4:                                ; preds = %dec_label_pc_a804, %dec_label_pc_a7a8
  %v1_a7c8 = phi i32 [ %v1_a8a4, %dec_label_pc_a804 ], [ 0, %dec_label_pc_a7a8 ]
  %v5_a7b8 = mul i32 %v1_a7c8, 24
  %v1_a7bc = load i32, i32* @sl, align 4
  %v2_a7bc = add i32 %v1_a7bc, %v5_a7b8
  store i32 %v2_a7bc, i32* %r3.global-to-local, align 4
  %v1_a7c4 = add i32 %v2_a7bc, 20
  %v2_a7c4 = inttoptr i32 %v1_a7c4 to i8*
  %v3_a7c4 = load i8, i8* %v2_a7c4, align 1
  %v4_a7c4 = zext i8 %v3_a7c4 to i32
  store i32 %v4_a7c4, i32* %r2.global-to-local, align 4
  %v4_a7c8 = mul i32 %v1_a7c8, 4
  %v5_a7c8 = add i32 %v4_a7c8, %v2_a4e4
  %v6_a7c8 = inttoptr i32 %v5_a7c8 to i32*
  %v7_a7c8 = load i32, i32* %v6_a7c8, align 4
  store i32 %v7_a7c8, i32* @r5, align 4
  %v7_a7d0 = icmp eq i8 %v3_a7c4, 31
  store i1 %v7_a7d0, i1* %cpsr_z.global-to-local, align 1
  store i32 65535, i32* %r7.global-to-local, align 4
  %v1_a7d8 = add i32 %v7_a7c8, 20
  store i32 %v1_a7d8, i32* @r6, align 4
  %tmp61 = icmp ult i8 %v3_a7c4, 32
  br i1 %tmp61, label %dec_label_pc_a8c0, label %dec_label_pc_a7e0

dec_label_pc_a7e0:                                ; preds = %dec_label_pc_a7b4
  store i32 %v3_a60c, i32* %r2.global-to-local, align 4
  store i1 %v3_a7e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_a7e4, label %dec_label_pc_a928, label %dec_label_pc_a7ec

dec_label_pc_a7ec:                                ; preds = %dec_label_pc_a8c0.dec_label_pc_a7ec_crit_edge, %dec_label_pc_a7e0
  %v1_a7f0 = phi i32 [ %v1_a7f0.pre, %dec_label_pc_a8c0.dec_label_pc_a7ec_crit_edge ], [ 65535, %dec_label_pc_a7e0 ]
  store i32 %v3_a610, i32* %r3.global-to-local, align 4
  %v9_a7f0 = icmp eq i32 %v3_a610, %v1_a7f0
  store i1 %v9_a7f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a7f0, label %dec_label_pc_a944, label %dec_label_pc_a7f8

dec_label_pc_a7f8:                                ; preds = %dec_label_pc_a928.dec_label_pc_a7f8_crit_edge, %dec_label_pc_a7ec
  %v1_a7fc = phi i32 [ %v1_a7fc.pre, %dec_label_pc_a928.dec_label_pc_a7f8_crit_edge ], [ %v1_a7f0, %dec_label_pc_a7ec ]
  %v9_a7fc = icmp eq i32 %v3_a614, %v1_a7fc
  store i1 %v9_a7fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a7fc, label %dec_label_pc_a960, label %dec_label_pc_a804

dec_label_pc_a804:                                ; preds = %dec_label_pc_a944, %dec_label_pc_a7f8, %dec_label_pc_a960
  %v0_a808 = load i32, i32* %r8.global-to-local, align 4
  %v1_a808 = trunc i32 %v0_a808 to i8
  %v2_a808 = load i32, i32* @r5, align 4
  %v3_a808 = add i32 %v2_a808, 10
  %v4_a808 = inttoptr i32 %v3_a808 to i8*
  store i8 %v1_a808, i8* %v4_a808, align 1
  %v0_a80c = load i32, i32* %r8.global-to-local, align 4
  %v1_a80c = trunc i32 %v0_a80c to i8
  %v2_a80c = load i32, i32* @r5, align 4
  %v3_a80c = add i32 %v2_a80c, 11
  %v4_a80c = inttoptr i32 %v3_a80c to i8*
  store i8 %v1_a80c, i8* %v4_a80c, align 1
  %v0_a810 = load i32, i32* @r5, align 4
  store i32 %v0_a810, i32* @r0, align 4
  %v2_a814 = call i32 @function_d0b8(i32 %v0_a810, i32 20)
  %v3_a814 = trunc i32 %v2_a814 to i8
  %v4_a818 = sdiv i32 %v2_a814, 256
  store i32 %v4_a818, i32* %r3.global-to-local, align 4
  %v1_a81c = trunc i32 %v4_a818 to i8
  %v2_a81c = load i32, i32* @r5, align 4
  %v3_a81c = add i32 %v2_a81c, 11
  %v4_a81c = inttoptr i32 %v3_a81c to i8*
  store i8 %v1_a81c, i8* %v4_a81c, align 1
  %v3_a820 = load i32, i32* @r5, align 4
  %v4_a820 = add i32 %v3_a820, 10
  %v5_a820 = inttoptr i32 %v4_a820 to i8*
  store i8 %v3_a814, i8* %v5_a820, align 1
  %v0_a824 = load i32, i32* %r8.global-to-local, align 4
  %v1_a824 = trunc i32 %v0_a824 to i8
  %v2_a824 = load i32, i32* @r6, align 4
  %v3_a824 = add i32 %v2_a824, 6
  %v4_a824 = inttoptr i32 %v3_a824 to i8*
  store i8 %v1_a824, i8* %v4_a824, align 1
  %v0_a828 = load i32, i32* %r8.global-to-local, align 4
  %v1_a828 = trunc i32 %v0_a828 to i8
  %v2_a828 = load i32, i32* @r6, align 4
  %v3_a828 = add i32 %v2_a828, 7
  %v4_a828 = inttoptr i32 %v3_a828 to i8*
  store i8 %v1_a828, i8* %v4_a828, align 1
  %v0_a82c = load i32, i32* @r5, align 4
  %v1_a82c = add i32 %v0_a82c, 24
  %v2_a82c = inttoptr i32 %v1_a82c to i8*
  %v3_a82c = load i8, i8* %v2_a82c, align 1
  %v4_a82c = zext i8 %v3_a82c to i32
  store i32 %v4_a82c, i32* %r3.global-to-local, align 4
  %v1_a830 = add i32 %v0_a82c, 25
  %v2_a830 = inttoptr i32 %v1_a830 to i8*
  %v3_a830 = load i8, i8* %v2_a830, align 1
  %v4_a830 = zext i8 %v3_a830 to i32
  %v4_a834 = mul nuw nsw i32 %v4_a830, 256
  %v5_a834 = or i32 %v4_a834, %v4_a82c
  store i32 %v5_a834, i32* %r2.global-to-local, align 4
  %v3_a838 = load i32, i32* %stack_var_-44, align 4
  %v0_a83c = load i32, i32* @r6, align 4
  store i32 %v0_a83c, i32* @r1, align 4
  %v1_a840 = add i32 %v3_a838, 12
  store i32 %v1_a840, i32* %r3.global-to-local, align 4
  %v4_a848 = call i32 @function_d114(i32 %v0_a82c, i32 %v0_a83c, i32 %v5_a834, i32 %v1_a840)
  %v5_a848 = trunc i32 %v4_a848 to i8
  %v4_a84c24 = udiv i32 %v4_a848, 256
  %v1_a850 = trunc i32 %v4_a84c24 to i8
  %v2_a850 = load i32, i32* @r6, align 4
  %v3_a850 = add i32 %v2_a850, 7
  %v4_a850 = inttoptr i32 %v3_a850 to i8*
  store i8 %v1_a850, i8* %v4_a850, align 1
  %v3_a854 = load i32, i32* @r6, align 4
  %v4_a854 = add i32 %v3_a854, 6
  %v5_a854 = inttoptr i32 %v4_a854 to i8*
  store i8 %v5_a848, i8* %v5_a854, align 1
  %v3_a858 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_a858, i32* %r3.global-to-local, align 4
  %v0_a85c = load i32, i32* @r5, align 4
  %v1_a85c = add i32 %v0_a85c, 20
  %v2_a85c = inttoptr i32 %v1_a85c to i32*
  %v3_a85c = load i32, i32* %v2_a85c, align 4
  %v5_a864 = mul i32 %v3_a858, 24
  %v1_a868 = load i32, i32* @sl, align 4
  %v2_a868 = add i32 %v1_a868, %v5_a864
  store i32 %v2_a868, i32* %ip.global-to-local, align 4
  %v3_a86c = udiv i32 %v3_a85c, 65536
  store i32 %v3_a86c, i32* %r2.global-to-local, align 4
  %v1_a870 = trunc i32 %v3_a86c to i8
  %v3_a870 = add i32 %v2_a868, 2
  %v4_a870 = inttoptr i32 %v3_a870 to i8*
  store i8 %v1_a870, i8* %v4_a870, align 1
  %v0_a874 = load i32, i32* %r2.global-to-local, align 4
  %v3_a87425 = udiv i32 %v0_a874, 256
  %v3_a878 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a878, i32* %r2.global-to-local, align 4
  %v1_a87c = trunc i32 %v3_a87425 to i8
  %v2_a87c = load i32, i32* %ip.global-to-local, align 4
  %v3_a87c = add i32 %v2_a87c, 3
  %v4_a87c = inttoptr i32 %v3_a87c to i8*
  store i8 %v1_a87c, i8* %v4_a87c, align 1
  %v0_a880 = load i32, i32* @r5, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_a888 = load i32, i32* %r2.global-to-local, align 4
  %v1_a888 = add i32 %v0_a888, 32
  store i32 %v1_a888, i32* %r2.global-to-local, align 4
  %v0_a88c = load i32, i32* %fp.global-to-local, align 4
  store i32 16, i32* @r4, align 4
  %v0_a894 = load i32, i32* %ip.global-to-local, align 4
  %v6_a89c = inttoptr i32 %v0_a880 to i32*
  %v7_a89c = call i32 @function_1331c(i32 %v0_a88c, i32* %v6_a89c, i32 %v1_a888, i32 16384, i32 %v0_a894, i32 16)
  %v3_a8a0 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_a8a0, i32* %r3.global-to-local, align 4
  %v1_a8a4 = add i32 %v3_a8a0, 1
  %v1_a8a8 = load i32, i32* %sb.global-to-local, align 4
  %v9_a8a8 = icmp eq i32 %v1_a8a4, %v1_a8a8
  store i1 %v9_a8a8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_a8a4, i32* %stack_var_-40, align 4
  %v5_a8b0 = icmp slt i32 %v1_a8a4, %v1_a8a8
  br i1 %v5_a8b0, label %dec_label_pc_a7b4, label %dec_label_pc_a8b4

dec_label_pc_a8b4:                                ; preds = %dec_label_pc_a804
  %v2_a8b4 = icmp eq i32 %v1_a8a8, 0
  store i1 %v2_a8b4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_a7a4.outer

dec_label_pc_a8c0:                                ; preds = %dec_label_pc_a7b4
  %v1_a8c0 = add i32 %v2_a7bc, 16
  %v2_a8c0 = inttoptr i32 %v1_a8c0 to i32*
  %v3_a8c0 = load i32, i32* %v2_a8c0, align 4
  store i32 %v3_a8c0, i32* @r4, align 4
  %v0_a8c4 = call i32 @function_e7cc()
  %v3_a8c8 = load i32, i32* %stack_var_-40, align 4
  %v5_a8d0 = mul i32 %v3_a8c8, 24
  %v0_a8d4 = load i32, i32* @r4, align 4
  %v1_a8d8 = and i32 %v0_a8d4, 65280
  store i32 %v1_a8d8, i32* %r3.global-to-local, align 4
  %v1_a8d4 = udiv i32 %v0_a8d4, 256
  %v3_a8dc = and i32 %v1_a8d4, 65280
  store i32 %v3_a8dc, i32* %r2.global-to-local, align 4
  %v1_a8e0 = load i32, i32* @sl, align 4
  %v2_a8e0 = add i32 %v1_a8e0, %v5_a8d0
  store i32 %v2_a8e0, i32* %ip.global-to-local, align 4
  %v1_a8ec = add i32 %v2_a8e0, 20
  %v2_a8ec = inttoptr i32 %v1_a8ec to i8*
  %v3_a8ec = load i8, i8* %v2_a8ec, align 1
  %v4_a8ec = zext i8 %v3_a8ec to i32
  %v2_a8f4 = call i32 @llvm.bswap.i32(i32 %v0_a8d4)
  %v7_a8f8 = lshr i32 %v0_a8c4, %v4_a8ec
  %v8_a8f8 = add i32 %v7_a8f8, %v2_a8f4
  store i32 %v3_a60c, i32* %r2.global-to-local, align 4
  %v2_a918 = call i32 @llvm.bswap.i32(i32 %v8_a8f8)
  store i32 %v2_a918, i32* %r3.global-to-local, align 4
  %v1_a91c = load i32, i32* %r7.global-to-local, align 4
  %v9_a91c = icmp eq i32 %v3_a60c, %v1_a91c
  store i1 %v9_a91c, i1* %cpsr_z.global-to-local, align 1
  %v1_a920 = load i32, i32* @r5, align 4
  %v2_a920 = add i32 %v1_a920, 16
  %v3_a920 = inttoptr i32 %v2_a920 to i32*
  store i32 %v2_a918, i32* %v3_a920, align 4
  br i1 %v9_a91c, label %dec_label_pc_a928, label %dec_label_pc_a8c0.dec_label_pc_a7ec_crit_edge

dec_label_pc_a8c0.dec_label_pc_a7ec_crit_edge:    ; preds = %dec_label_pc_a8c0
  %v1_a7f0.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_a7ec

dec_label_pc_a928:                                ; preds = %dec_label_pc_a8c0, %dec_label_pc_a7e0
  %v0_a928 = call i32 @function_e7cc()
  %v1_a928 = trunc i32 %v0_a928 to i8
  %v4_a92c26 = udiv i32 %v0_a928, 256
  %v1_a930 = trunc i32 %v4_a92c26 to i8
  %v2_a930 = load i32, i32* @r5, align 4
  %v3_a930 = add i32 %v2_a930, 5
  %v4_a930 = inttoptr i32 %v3_a930 to i8*
  store i8 %v1_a930, i8* %v4_a930, align 1
  store i32 %v3_a610, i32* %r3.global-to-local, align 4
  %v1_a938 = load i32, i32* %r7.global-to-local, align 4
  %v9_a938 = icmp eq i32 %v3_a610, %v1_a938
  store i1 %v9_a938, i1* %cpsr_z.global-to-local, align 1
  %v3_a93c = load i32, i32* @r5, align 4
  %v4_a93c = add i32 %v3_a93c, 4
  %v5_a93c = inttoptr i32 %v4_a93c to i8*
  store i8 %v1_a928, i8* %v5_a93c, align 1
  %v0_a940 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a940, label %dec_label_pc_a944, label %dec_label_pc_a928.dec_label_pc_a7f8_crit_edge

dec_label_pc_a928.dec_label_pc_a7f8_crit_edge:    ; preds = %dec_label_pc_a928
  %v1_a7fc.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_a7f8

dec_label_pc_a944:                                ; preds = %dec_label_pc_a928, %dec_label_pc_a7ec
  %v0_a944 = call i32 @function_e7cc()
  %v1_a944 = trunc i32 %v0_a944 to i8
  %v4_a94c = sdiv i32 %v0_a944, 256
  store i32 %v4_a94c, i32* %r3.global-to-local, align 4
  %v1_a950 = load i32, i32* %r7.global-to-local, align 4
  %v9_a950 = icmp eq i32 %v3_a614, %v1_a950
  store i1 %v9_a950, i1* %cpsr_z.global-to-local, align 1
  %v3_a954 = load i32, i32* @r5, align 4
  %v4_a954 = add i32 %v3_a954, 20
  %v5_a954 = inttoptr i32 %v4_a954 to i8*
  store i8 %v1_a944, i8* %v5_a954, align 1
  %v0_a958 = load i32, i32* %r3.global-to-local, align 4
  %v1_a958 = trunc i32 %v0_a958 to i8
  %v2_a958 = load i32, i32* @r6, align 4
  %v3_a958 = add i32 %v2_a958, 1
  %v4_a958 = inttoptr i32 %v3_a958 to i8*
  store i8 %v1_a958, i8* %v4_a958, align 1
  %v0_a95c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a95c, label %dec_label_pc_a960, label %dec_label_pc_a804

dec_label_pc_a960:                                ; preds = %dec_label_pc_a944, %dec_label_pc_a7f8
  %v0_a960 = call i32 @function_e7cc()
  %v1_a960 = trunc i32 %v0_a960 to i8
  %v4_a964 = sdiv i32 %v0_a960, 256
  store i32 %v4_a964, i32* %r3.global-to-local, align 4
  %v1_a968 = trunc i32 %v4_a964 to i8
  %v2_a968 = load i32, i32* @r6, align 4
  %v3_a968 = add i32 %v2_a968, 3
  %v4_a968 = inttoptr i32 %v3_a968 to i8*
  store i8 %v1_a968, i8* %v4_a968, align 1
  %v3_a96c = load i32, i32* @r6, align 4
  %v4_a96c = add i32 %v3_a96c, 2
  %v5_a96c = inttoptr i32 %v4_a96c to i8*
  store i8 %v1_a960, i8* %v5_a96c, align 1
  br label %dec_label_pc_a804

dec_label_pc_a974:                                ; preds = %dec_label_pc_a5d4
  %v0_a974 = load i32, i32* %fp.global-to-local, align 4
  %v1_a978 = call i32 @function_12a9c(i32 %v0_a974)
  br label %dec_label_pc_a97c

dec_label_pc_a97c:                                ; preds = %dec_label_pc_a4c4, %dec_label_pc_a974
  %v29_a980 = phi i32 [ %v3_a5c4, %dec_label_pc_a4c4 ], [ %v1_a978, %dec_label_pc_a974 ]
  store i32 %v3_a4c4, i32* %r4.global-to-local, align 4
  store i32 %v12_a4c4, i32* %r7.global-to-local, align 4
  ret i32 %v29_a980

; uselistorder directives
  uselistorder i32 %v4_a964, { 1, 0 }
  uselistorder i32 %v2_a918, { 1, 0 }
  uselistorder i32 %v0_a8d4, { 1, 0, 2 }
  uselistorder i1 %v2_a8b4, { 1, 0 }
  uselistorder i32 %v1_a8a8, { 1, 2, 3, 0 }
  uselistorder i32 %v1_a8a4, { 2, 0, 3, 1 }
  uselistorder i32 %v3_a86c, { 1, 0 }
  uselistorder i32 %v4_a818, { 1, 0 }
  uselistorder i1 %v3_a7e4, { 1, 0 }
  uselistorder i32 %v1_a78c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_a730, { 1, 0 }
  uselistorder i32 %v1_a6b8, { 1, 0 }
  uselistorder i32 %v1_a638, { 1, 0 }
  uselistorder i32 %v1_a634, { 1, 0 }
  uselistorder i32 %v0_a604, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_a5fc, { 0, 1, 2, 4, 3 }
  uselistorder i1 %v7_a5f4, { 1, 0 }
  uselistorder i1 %v7_a5c8, { 1, 0 }
  uselistorder i32 %v3_a5c4, { 1, 2, 3, 0 }
  uselistorder i32 %v1_a564, { 1, 0 }
  uselistorder i8 %v5_a554, { 1, 0 }
  uselistorder i32 %v5_a538, { 1, 0 }
  uselistorder i32 %v6_a4fc, { 1, 0 }
  uselistorder i32 %v1_a4c8, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %stack_var_-40, { 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 1, 13, 12 }
  uselistorder i32* %r7.global-to-local, { 0, 3, 1, 4, 2, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 0, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder label %dec_label_pc_a97c, { 1, 0 }
  uselistorder label %dec_label_pc_a804, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a7a4, { 1, 0 }
  uselistorder label %bb57, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_a988(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_a988:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-2120 = alloca i32, align 4
  %v3_a988 = load i32, i32* @r4, align 4
  %v15_a988 = load i32, i32* @r8, align 4
  %v18_a988 = load i32, i32* @sb, align 4
  %v21_a988 = load i32, i32* @sl, align 4
  %v24_a988 = load i32, i32* @fp, align 4
  %v1_a994 = urem i32 %arg1, 256
  store i32 %v1_a994, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_a9a0 = urem i32 %arg3, 256
  store i32 %v1_a9a0, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  %v2_a9ac = call i32 @function_1366c(i32 %v1_a994, i32 4)
  %v0_a9b0 = load i32, i32* @r5, align 4
  store i32 %v0_a9b0, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_a9bc = load i32, i32* @r4, align 4
  store i32 %v0_a9bc, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v5_a9c4 = inttoptr i32 %v0_a9b0 to i32*
  %v6_a9c4 = call i32 @function_85e0(i32 %v0_a9bc, i32* %v5_a9c4, i32 2, i32 0)
  %v1_a9d0 = urem i32 %v6_a9c4, 256
  store i32 %v1_a9d0, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_a9dc = load i32, i32* @r4, align 4
  store i32 %v0_a9dc, i32* %r0.global-to-local, align 4
  %v0_a9e0 = load i32, i32* @r5, align 4
  store i32 %v0_a9e0, i32* %r1.global-to-local, align 4
  %v5_a9e4 = trunc i32 %v6_a9c4 to i8
  %v6_a9e8 = inttoptr i32 %v0_a9e0 to i32*
  %v7_a9e8 = call i32 @function_85e0(i32 %v0_a9dc, i32* %v6_a9e8, i32 3, i32 65535)
  %v0_a9ec = load i32, i32* @r5, align 4
  store i32 %v0_a9ec, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v0_a9f8 = load i32, i32* @r4, align 4
  store i32 %v0_a9f8, i32* %r0.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v5_aa00 = inttoptr i32 %v0_a9ec to i32*
  %v6_aa00 = call i32 @function_85e0(i32 %v0_a9f8, i32* %v5_aa00, i32 4, i32 64)
  %v1_aa08 = urem i32 %v6_aa00, 256
  store i32 %v1_aa08, i32* %ip.global-to-local, align 4
  %v0_aa0c = load i32, i32* @r5, align 4
  store i32 %v0_aa0c, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_aa18 = load i32, i32* @r4, align 4
  store i32 %v0_aa18, i32* %r0.global-to-local, align 4
  %v6_aa20 = inttoptr i32 %v0_aa0c to i32*
  %v7_aa20 = call i32 @function_85e0(i32 %v0_aa18, i32* %v6_aa20, i32 5, i32 0)
  %v1_aa2c = urem i32 %v7_aa20, 256
  store i32 %v1_aa2c, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_aa38 = load i32, i32* @r4, align 4
  store i32 %v0_aa38, i32* %r0.global-to-local, align 4
  %v0_aa3c = load i32, i32* @r5, align 4
  store i32 %v0_aa3c, i32* %r1.global-to-local, align 4
  %v5_aa44 = inttoptr i32 %v0_aa3c to i32*
  %v6_aa44 = call i32 @function_85e0(i32 %v0_aa38, i32* %v5_aa44, i32 6, i32 65535)
  %v0_aa48 = load i32, i32* @r5, align 4
  store i32 %v0_aa48, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 53, i32* %r3.global-to-local, align 4
  store i32 %v6_aa44, i32* %fp.global-to-local, align 4
  %v0_aa58 = load i32, i32* @r4, align 4
  store i32 %v0_aa58, i32* %r0.global-to-local, align 4
  %v4_aa5c = inttoptr i32 %v0_aa48 to i32*
  %v5_aa5c = call i32 @function_85e0(i32 %v0_aa58, i32* %v4_aa5c, i32 7, i32 53)
  %v0_aa64 = load i32, i32* @r5, align 4
  store i32 %v0_aa64, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  store i32 %v5_aa5c, i32* %sb.global-to-local, align 4
  %v0_aa74 = load i32, i32* @r4, align 4
  store i32 %v0_aa74, i32* %r0.global-to-local, align 4
  %v4_aa78 = inttoptr i32 %v0_aa64 to i32*
  %v5_aa78 = call i32 @function_85e0(i32 %v0_aa74, i32* %v4_aa78, i32 9, i32 65535)
  %v0_aa7c = load i32, i32* @r5, align 4
  store i32 %v0_aa7c, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  store i32 %v5_aa78, i32* @sl, align 4
  %v0_aa8c = load i32, i32* @r4, align 4
  store i32 %v0_aa8c, i32* %r0.global-to-local, align 4
  %v4_aa90 = inttoptr i32 %v0_aa7c to i32*
  %v5_aa90 = call i32 @function_85e0(i32 %v0_aa8c, i32* %v4_aa90, i32 0, i32 12)
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_aa9c = load i32, i32* @r5, align 4
  store i32 %v0_aa9c, i32* %r1.global-to-local, align 4
  store i32 %v5_aa90, i32* %r8.global-to-local, align 4
  %v0_aaa4 = load i32, i32* @r4, align 4
  store i32 %v0_aaa4, i32* %r0.global-to-local, align 4
  %v4_aaa8 = inttoptr i32 %v0_aa9c to i32*
  %v5_aaa8 = call i32 @function_81cc(i32 %v0_aaa4, i32* %v4_aaa8, i32 8, i32 0)
  store i32 21, i32* %r0.global-to-local, align 4
  %v1_aab4 = call i32 @function_11bcc(i32 21)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 21, i32* %r0.global-to-local, align 4
  %v3_aac0 = call i32 @function_11ae8(i32 21, i32* null)
  store i32 %v3_aac0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_aac8 = inttoptr i32 %v3_aac0 to i8*
  %v3_aac8 = call i32 @function_12bc8(i8* %v2_aac8, i32 0)
  store i32 %v3_aac8, i32* @r4, align 4
  store i32 21, i32* %r0.global-to-local, align 4
  %v1_aad4 = call i32 @function_11b14(i32 21)
  store i32 %v1_aad4, i32* %r0.global-to-local, align 4
  %v0_aad8 = load i32, i32* @r4, align 4
  %v1_aad8 = icmp slt i32 %v0_aad8, 0
  %v2_aad8 = icmp eq i32 %v0_aad8, 0
  store i1 %v2_aad8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_aad8, label %dec_label_pc_b0a4, label %dec_label_pc_aae0

dec_label_pc_aae0:                                ; preds = %dec_label_pc_a988
  %v2_aae4 = ptrtoint i32* %stack_var_-2120 to i32
  store i32 %v2_aae4, i32* @r6, align 4
  store i32 2048, i32* %r2.global-to-local, align 4
  store i32 %v2_aae4, i32* %r1.global-to-local, align 4
  store i32 %v0_aad8, i32* %r0.global-to-local, align 4
  %v4_aaf4 = call i32 @function_12c64(i32 %v0_aad8, i32* nonnull %stack_var_-2120, i32 2048)
  store i32 %v4_aaf4, i32* @r5, align 4
  %v0_aafc = load i32, i32* @r4, align 4
  store i32 %v0_aafc, i32* %r0.global-to-local, align 4
  %v1_ab00 = call i32 @function_12a9c(i32 %v0_aafc)
  store i32 22, i32* %r0.global-to-local, align 4
  %v1_ab08 = call i32 @function_11bcc(i32 22)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v3_ab14 = call i32 @function_11ae8(i32 22, i32* null)
  %v0_ab18 = load i32, i32* @r5, align 4
  store i32 %v0_ab18, i32* @r1, align 4
  store i32 %v3_ab14, i32* %r2.global-to-local, align 4
  store i32 %v2_aae4, i32* %r0.global-to-local, align 4
  %v3_ab24 = bitcast i32* %stack_var_-2120 to i8*
  %v4_ab24 = call i32 @function_124ec(i8* %v3_ab24, i32 %v0_ab18, i32 %v3_ab14)
  store i32 %v4_ab24, i32* @r4, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v1_ab30 = call i32 @function_11b14(i32 22)
  store i32 %v1_ab30, i32* %r0.global-to-local, align 4
  %v0_ab34 = load i32, i32* @r4, align 4
  %v7_ab34 = icmp eq i32 %v0_ab34, -1
  store i1 %v7_ab34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ab34, label %dec_label_pc_b0a4, label %dec_label_pc_ab3c

dec_label_pc_ab3c:                                ; preds = %dec_label_pc_aae0
  %v0_ab3c = load i32, i32* @r5, align 4
  %v9_ab3c = icmp eq i32 %v0_ab3c, %v0_ab34
  store i1 %v9_ab3c, i1* %cpsr_z.global-to-local, align 1
  %v7_ab40 = icmp sgt i32 %v0_ab3c, %v0_ab34
  br i1 %v7_ab40, label %dec_label_pc_ab44, label %dec_label_pc_b0a4

dec_label_pc_ab44:                                ; preds = %dec_label_pc_ab3c
  store i32 %v0_ab3c, i32* %r3.global-to-local, align 4
  store i32 %v0_ab34, i32* %r2.global-to-local, align 4
  %v0_ab54 = load i32, i32* @r6, align 4
  %v2_ab54 = add i32 %v0_ab54, %v0_ab34
  store i32 %v2_ab54, i32* %r1.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  %v2_ab5c = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_ab5c, i32* @r7, align 4
  %v1_ab8c = add i32 %v0_ab3c, -1
  br label %dec_label_pc_ab84

dec_label_pc_ab68:                                ; preds = %dec_label_pc_abac, %bb138
  %v9_ab68 = icmp eq i32 %v0_ab74, %v1_ab8c
  store i1 %v9_ab68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ab68, label %dec_label_pc_abb8, label %dec_label_pc_ab70

dec_label_pc_ab70:                                ; preds = %dec_label_pc_ab9c, %dec_label_pc_ab68, %bb
  %v0_aba842 = phi i32 [ %v0_aba8, %dec_label_pc_ab9c ], [ %v0_aba843, %dec_label_pc_ab68 ], [ %v0_aba8, %bb ]
  %v0_ab8838 = phi i32 [ 0, %dec_label_pc_ab9c ], [ %v0_ab8839, %dec_label_pc_ab68 ], [ 0, %bb ]
  store i32 %v0_ab3c, i32* %r0.global-to-local, align 4
  %v1_ab74 = add i32 %v0_ab74, 1
  store i32 %v1_ab74, i32* %r2.global-to-local, align 4
  %v9_ab78 = icmp eq i32 %v0_ab3c, %v1_ab74
  store i1 %v9_ab78, i1* %cpsr_z.global-to-local, align 1
  %v1_ab7c = add i32 %v0_ab7c, 1
  store i32 %v1_ab7c, i32* @r7, align 4
  br i1 %v9_ab78, label %dec_label_pc_b0a4, label %dec_label_pc_ab84

dec_label_pc_ab84:                                ; preds = %dec_label_pc_ab70, %dec_label_pc_ab44
  %v0_ab7c = phi i32 [ %v1_ab7c, %dec_label_pc_ab70 ], [ %v2_ab5c, %dec_label_pc_ab44 ]
  %v0_ab74 = phi i32 [ %v1_ab74, %dec_label_pc_ab70 ], [ %v0_ab34, %dec_label_pc_ab44 ]
  %v0_aba8 = phi i32 [ %v0_aba842, %dec_label_pc_ab70 ], [ 0, %dec_label_pc_ab44 ]
  %v0_ab88 = phi i32 [ %v0_ab8838, %dec_label_pc_ab70 ], [ 0, %dec_label_pc_ab44 ]
  %v0_ab90 = phi i32 [ %v1_ab90, %dec_label_pc_ab70 ], [ %v2_ab54, %dec_label_pc_ab44 ]
  %v1_ab84 = inttoptr i32 %v0_ab90 to i8*
  %v2_ab84 = load i8, i8* %v1_ab84, align 1
  %v3_ab84 = zext i8 %v2_ab84 to i32
  store i32 %v3_ab84, i32* %r3.global-to-local, align 4
  %v2_ab88 = icmp eq i32 %v0_ab88, 0
  store i1 %v2_ab88, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_ab8c, i32* %ip.global-to-local, align 4
  %v1_ab90 = add i32 %v0_ab90, 1
  store i32 %v1_ab90, i32* %r1.global-to-local, align 4
  %v1_ab94 = add nsw i32 %v3_ab84, -48
  store i32 %v1_ab94, i32* %r0.global-to-local, align 4
  br i1 %v2_ab88, label %dec_label_pc_ab9c, label %dec_label_pc_abac

dec_label_pc_ab9c:                                ; preds = %dec_label_pc_ab84
  %v7_ab9c = icmp eq i8 %v2_ab84, 9
  store i1 %v7_ab9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ab9c, label %dec_label_pc_ab70, label %bb

bb:                                               ; preds = %dec_label_pc_ab9c
  %v8_aba0 = icmp eq i8 %v2_ab84, 32
  store i1 %v8_aba0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_aba0, label %dec_label_pc_ab70, label %dec_label_pc_aba8

dec_label_pc_aba8:                                ; preds = %bb
  %v1_aba8 = add i32 %v0_aba8, 1
  store i32 %v1_aba8, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_abac

dec_label_pc_abac:                                ; preds = %dec_label_pc_ab84, %dec_label_pc_aba8
  %v0_aba843 = phi i32 [ %v0_aba8, %dec_label_pc_ab84 ], [ %v1_aba8, %dec_label_pc_aba8 ]
  %v0_ab8839 = phi i32 [ %v0_ab88, %dec_label_pc_ab84 ], [ %v1_aba8, %dec_label_pc_aba8 ]
  %v7_abac = icmp eq i8 %v2_ab84, 46
  store i1 %v7_abac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_abac, label %dec_label_pc_ab68, label %bb138

bb138:                                            ; preds = %dec_label_pc_abac
  %v8_abb0 = icmp eq i32 %v1_ab94, 9
  store i1 %v8_abb0, i1* %cpsr_z.global-to-local, align 1
  %tmp = icmp ult i32 %v1_ab94, 10
  br i1 %tmp, label %dec_label_pc_ab68, label %dec_label_pc_abb8

dec_label_pc_abb8:                                ; preds = %dec_label_pc_ab68, %bb138
  %v0_ab74.lcssa = phi i32 [ %v1_ab8c, %dec_label_pc_ab68 ], [ %v0_ab74, %bb138 ]
  %v2_abbc = sub i32 %v0_ab74.lcssa, %v0_ab34
  store i32 %v2_abbc, i32* %r2.global-to-local, align 4
  store i32 %v2_ab54, i32* %r1.global-to-local, align 4
  store i32 %v2_ab5c, i32* %r0.global-to-local, align 4
  %v3_abc8 = call i32 @function_12214(i32 %v2_ab5c, i32 %v2_ab54, i32 %v2_abbc)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_ab5c, i32* @r0, align 4
  %v2_abd8 = load i32, i32* @r7, align 4
  %v3_abd8 = inttoptr i32 %v2_abd8 to i8*
  store i8 0, i8* %v3_abd8, align 1
  %v1_abdc = call i32 @function_1318c(i32 %v2_ab5c)
  store i32 %v1_abdc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_abe4

dec_label_pc_abe420:                              ; preds = %dec_label_pc_b0a4
  unreachable

dec_label_pc_abe4:                                ; preds = %dec_label_pc_b11c, %dec_label_pc_b10c, %dec_label_pc_b100, %dec_label_pc_b0ec, %dec_label_pc_abb8
  %v29_b0e874 = phi i32 [ %v1_b0a8, %dec_label_pc_b11c ], [ %v1_b0a8, %dec_label_pc_b10c ], [ %v1_b0a8, %dec_label_pc_b100 ], [ %v1_b0a8, %dec_label_pc_b0ec ], [ %v1_abdc, %dec_label_pc_abb8 ]
  %stack_var_-2176.0 = phi i32 [ 33686020, %dec_label_pc_b11c ], [ 104859200, %dec_label_pc_b10c ], [ 707416650, %dec_label_pc_b100 ], [ 134744072, %dec_label_pc_b0ec ], [ %v1_abdc, %dec_label_pc_abb8 ]
  store i32 %v5_aaa8, i32* %ip.global-to-local, align 4
  %v2_abe8 = icmp eq i32 %v5_aaa8, 0
  store i1 %v2_abe8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_abe8, label %dec_label_pc_b0e0, label %dec_label_pc_abf0

dec_label_pc_abf0:                                ; preds = %dec_label_pc_abe4
  store i32 %v5_aaa8, i32* %r0.global-to-local, align 4
  %v1_abf4 = inttoptr i32 %v5_aaa8 to i8*
  %v2_abf4 = call i32 @function_12198(i8* %v1_abf4)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_ac08 = call i32 @function_13380(i32 2, i32 3, i32 17)
  store i32 %v3_ac08, i32* %r0.global-to-local, align 4
  %v7_ac0c = icmp eq i32 %v3_ac08, -1
  store i1 %v7_ac0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ac0c, label %dec_label_pc_b0e0, label %dec_label_pc_ac18

dec_label_pc_ac18:                                ; preds = %dec_label_pc_abf0
  store i32 1, i32* %stack_var_-40, align 4
  %v6_ac24 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v6_ac24, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v6_ac38 = call i32 @function_13350(i32 %v3_ac08, i32 0, i32 3, i32* nonnull %stack_var_-40, i32 4)
  store i32 %v6_ac38, i32* %r0.global-to-local, align 4
  %v7_ac3c = icmp eq i32 %v6_ac38, -1
  store i1 %v7_ac3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ac3c, label %dec_label_pc_b0d8, label %dec_label_pc_ac44

dec_label_pc_ac44:                                ; preds = %dec_label_pc_ac18
  store i32 %v1_a994, i32* %r0.global-to-local, align 4
  %v3_ac4c = mul i32 %v7_a9e8, 65536
  store i32 %v3_ac4c, i32* %lr.global-to-local, align 4
  %v0_ac50 = load i32, i32* @sl, align 4
  %v3_ac50 = mul i32 %v0_ac50, 65536
  store i32 %v3_ac50, i32* %sl.global-to-local, align 4
  %v0_ac54 = load i32, i32* %r8.global-to-local, align 4
  %v0_ac58 = load i32, i32* %fp.global-to-local, align 4
  %v0_ac5c = load i32, i32* %sb.global-to-local, align 4
  %v3_ac5c = mul i32 %v0_ac5c, 65536
  store i32 %v3_ac5c, i32* %sb.global-to-local, align 4
  %v5_ac60 = trunc i32 %v0_ac54 to i8
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_ac68 = urem i32 %v7_a9e8, 65536
  store i32 %v3_ac68, i32* %r2.global-to-local, align 4
  %v3_ac6c = urem i32 %v0_ac58, 65536
  store i32 %v3_ac6c, i32* %r3.global-to-local, align 4
  %v3_ac70 = urem i32 %v0_ac5c, 65536
  store i32 %v3_ac70, i32* %r4.global-to-local, align 4
  %v3_ac74 = urem i32 %v0_ac50, 65536
  store i32 %v3_ac74, i32* %r8.global-to-local, align 4
  %v2_ac78 = icmp eq i32 %v1_a994, 0
  store i1 %v2_ac78, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-40, align 4
  br i1 %v2_ac78, label %dec_label_pc_b0c8, label %dec_label_pc_ac9c

dec_label_pc_ac9c:                                ; preds = %dec_label_pc_ac44
  %v4_aca0 = sext i8 %v5_ac60 to i32
  %v2_aca4 = add i32 %v4_aca0, %v2_abf4
  store i32 %v2_aca4, i32* @fp, align 4
  %v3_aca8 = mul i32 %v2_aca4, 65536
  %v1_acac = add i32 %v3_aca8, 1769472
  store i32 %v1_acac, i32* @r6, align 4
  %v1_acb0 = add i32 %v3_aca8, 3080192
  %v1_acc4 = urem i32 %v0_ac50, 256
  %v3_acd4 = udiv i32 %v1_acac, 256
  %v1_acd8 = urem i32 %v7_a9e8, 256
  %v1_acdc = and i32 %v3_acd4, 65280
  %v1_ace0 = urem i32 %v0_ac5c, 256
  %v3_ace4 = mul nuw nsw i32 %v1_acc4, 256
  %v1_acec = urem i32 %v0_ac58, 256
  %v3_acf0 = mul nuw nsw i32 %v1_ace0, 256
  %tmp139 = udiv i32 %v0_ac50, 256
  %v4_acf4 = urem i32 %tmp139, 256
  %v5_acf4 = or i32 %v4_acf4, %v3_ace4
  store i32 %v5_acf4, i32* %r8.global-to-local, align 4
  %v4_acf8 = udiv i32 %v1_acac, 16777216
  %v5_acf8 = or i32 %v1_acdc, %v4_acf8
  store i32 %v5_acf8, i32* %sl.global-to-local, align 4
  %tmp140 = udiv i32 %v0_ac58, 256
  %v3_ad04 = urem i32 %tmp140, 256
  %v4_ad08 = sdiv i32 %v1_acb0, 16777216
  %tmp141 = udiv i32 %v7_a9e8, 256
  %v4_ad10 = mul nuw nsw i32 %v1_acec, 256
  %v5_ad10 = or i32 %v4_ad10, %v3_ad04
  store i32 %v5_ad10, i32* @r5, align 4
  %tmp142 = udiv i32 %v0_ac5c, 256
  %v4_ad14 = urem i32 %tmp142, 256
  %v5_ad14 = or i32 %v4_ad14, %v3_acf0
  store i32 %v5_ad14, i32* %sb.global-to-local, align 4
  store i32 %v1_acd8, i32* %r0.global-to-local, align 4
  %v1_ad20 = add i32 %v2_abf4, 1
  store i32 %v1_ad20, i32* @r7, align 4
  %v3_ad24 = ashr i32 %v1_acb0, 31
  store i32 %v3_ad24, i32* @lr, align 4
  store i32 %v1_acec, i32* %r1.global-to-local, align 4
  store i32 %v1_ace0, i32* %r2.global-to-local, align 4
  %v3_ad3075 = udiv i32 %v1_acdc, 256
  store i32 %v3_ad3075, i32* %r3.global-to-local, align 4
  store i32 %v1_acc4, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v4_ad94 = sext i8 %v5_a9e4 to i32
  %sext13 = mul i32 %v6_aa00, 16777216
  %v4_adac = sdiv i32 %sext13, 16777216
  %sext14 = mul i32 %tmp141, 16777216
  %v4_adc0 = sdiv i32 %sext14, 16777216
  %sext15 = mul i32 %v7_a9e8, 16777216
  %v4_adc4 = sdiv i32 %sext15, 16777216
  %sext16 = mul i32 %v1_acac, 256
  %v4_adf4 = sdiv i32 %sext16, 16777216
  %sext17 = mul i32 %v0_ac5c, 16777216
  %v4_adf8 = sdiv i32 %sext17, 16777216
  %sext18 = mul i32 %v0_ac58, 16777216
  %v4_ae1c = sdiv i32 %sext18, 16777216
  %sext19 = mul i32 %v0_ac50, 16777216
  %v4_ae28 = sdiv i32 %sext19, 16777216
  %v1_ada4 = trunc i32 %v4_ad08 to i8
  %extract.t = trunc i32 %v3_ad24 to i8
  br label %dec_label_pc_ad54

dec_label_pc_ad54:                                ; preds = %dec_label_pc_aebc, %dec_label_pc_ac9c
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 600, i32* %r0.global-to-local, align 4
  %v2_ad5c = call i32 @function_1366c(i32 600, i32 1)
  store i32 %v2_ad5c, i32* %r0.global-to-local, align 4
  store i32 %v2_a9ac, i32* %lr.global-to-local, align 4
  %v3_ad64 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_ad64, i32* %r3.global-to-local, align 4
  %v2_ad68 = load i32, i32* @r4, align 4
  %v5_ad68 = mul i32 %v2_ad68, 4
  %v6_ad68 = add i32 %v5_ad68, %v2_a9ac
  %v7_ad68 = inttoptr i32 %v6_ad68 to i32*
  store i32 %v2_ad5c, i32* %v7_ad68, align 4
  %v0_ad6c = load i32, i32* %lr.global-to-local, align 4
  %v1_ad6c = load i32, i32* %r3.global-to-local, align 4
  %v4_ad6c = mul i32 %v1_ad6c, 4
  %v5_ad6c = add i32 %v4_ad6c, %v0_ad6c
  %v6_ad6c = inttoptr i32 %v5_ad6c to i32*
  %v7_ad6c = load i32, i32* %v6_ad6c, align 4
  store i32 %v7_ad6c, i32* %r1.global-to-local, align 4
  %v1_ad70 = inttoptr i32 %v7_ad6c to i8*
  %v2_ad70 = load i8, i8* %v1_ad70, align 1
  %tmp154 = urem i8 %v2_ad70, 16
  %v1_ad74 = zext i8 %tmp154 to i32
  %v1_ad78 = or i32 %v1_ad74, 64
  store i32 %v1_ad78, i32* %r2.global-to-local, align 4
  %v1_ad7c = trunc i32 %v1_ad78 to i8
  store i8 %v1_ad7c, i8* %v1_ad70, align 1
  %v0_ad80 = load i32, i32* %r1.global-to-local, align 4
  %v1_ad80 = inttoptr i32 %v0_ad80 to i8*
  %v2_ad80 = load i8, i8* %v1_ad80, align 1
  %v1_ad84 = and i8 %v2_ad80, -16
  %v1_ad88 = or i8 %v1_ad84, 5
  store i32 %v1_aa2c, i32* %r0.global-to-local, align 4
  store i8 %v1_ad88, i8* %v1_ad80, align 1
  store i32 %v4_ad94, i32* %r2.global-to-local, align 4
  %v2_ad98 = load i32, i32* %r1.global-to-local, align 4
  %v3_ad98 = add i32 %v2_ad98, 1
  %v4_ad98 = inttoptr i32 %v3_ad98 to i8*
  store i8 %v5_a9e4, i8* %v4_ad98, align 1
  store i32 %v4_ad08, i32* %r3.global-to-local, align 4
  %v0_ada0 = load i32, i32* %r0.global-to-local, align 4
  %v2_ada0 = icmp eq i32 %v0_ada0, 0
  store i1 %v2_ada0, i1* %cpsr_z.global-to-local, align 1
  %v2_ada4 = load i32, i32* %r1.global-to-local, align 4
  %v3_ada4 = add i32 %v2_ada4, 2
  %v4_ada4 = inttoptr i32 %v3_ada4 to i8*
  store i8 %v1_ada4, i8* %v4_ada4, align 1
  store i32 %v3_ad24, i32* %r4.global-to-local, align 4
  store i32 %v4_adac, i32* %r0.global-to-local, align 4
  %v0_adb0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_adb0, label %.thread21, label %bb143

bb143:                                            ; preds = %dec_label_pc_ad54
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_adb4 = load i32, i32* %r1.global-to-local, align 4
  %v4_adb4 = add i32 %v3_adb4, 6
  %v5_adb4 = inttoptr i32 %v4_adb4 to i8*
  store i8 64, i8* %v5_adb4, align 1
  %v0_adbc.pre = load i32, i32* %r4.global-to-local, align 4
  %extract.t76 = trunc i32 %v0_adbc.pre to i8
  br label %.thread21

.thread21:                                        ; preds = %dec_label_pc_ad54, %bb143
  %v0_adbc.off0 = phi i8 [ %extract.t, %dec_label_pc_ad54 ], [ %extract.t76, %bb143 ]
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_adbc = load i32, i32* %r1.global-to-local, align 4
  %v3_adbc = add i32 %v2_adbc, 3
  %v4_adbc = inttoptr i32 %v3_adbc to i8*
  store i8 %v0_adbc.off0, i8* %v4_adbc, align 1
  store i32 %v4_adc0, i32* %ip.global-to-local, align 4
  store i32 %v4_adc4, i32* %lr.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1da7c.49 to i32), i32* %r4.global-to-local, align 4
  %v0_adcc = load i32, i32* %r0.global-to-local, align 4
  %v1_adcc = trunc i32 %v0_adcc to i8
  %v2_adcc = load i32, i32* %r1.global-to-local, align 4
  %v3_adcc = add i32 %v2_adcc, 8
  %v4_adcc = inttoptr i32 %v3_adcc to i8*
  store i8 %v1_adcc, i8* %v4_adcc, align 1
  %v0_add0 = load i32, i32* %r3.global-to-local, align 4
  %v1_add0 = trunc i32 %v0_add0 to i8
  %v2_add0 = load i32, i32* %r1.global-to-local, align 4
  %v3_add0 = add i32 %v2_add0, 9
  %v4_add0 = inttoptr i32 %v3_add0 to i8*
  store i8 %v1_add0, i8* %v4_add0, align 1
  %v0_add4 = load i32, i32* %lr.global-to-local, align 4
  %v1_add4 = trunc i32 %v0_add4 to i8
  %v2_add4 = load i32, i32* %r1.global-to-local, align 4
  %v3_add4 = add i32 %v2_add4, 5
  %v4_add4 = inttoptr i32 %v3_add4 to i8*
  store i8 %v1_add4, i8* %v4_add4, align 1
  %v0_add8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_add8, label %.thread22, label %bb144

.thread22:                                        ; preds = %.thread21
  %v2_addc23 = load i32, i32* @global_var_1da7c.49, align 4
  store i32 %v2_addc23, i32* %r3.global-to-local, align 4
  store i32 %v4_aca0, i32* %lr.global-to-local, align 4
  br label %bb145

bb144:                                            ; preds = %.thread21
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_addc = load i32, i32* @global_var_1da7c.49, align 4
  store i32 %v2_addc, i32* %r3.global-to-local, align 4
  store i32 %v4_aca0, i32* %lr.global-to-local, align 4
  %v3_ade4 = load i32, i32* %r1.global-to-local, align 4
  %v4_ade4 = add i32 %v3_ade4, 7
  %v5_ade4 = inttoptr i32 %v4_ade4 to i8*
  store i8 0, i8* %v5_ade4, align 1
  %v0_adec.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_adf0.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb145

bb145:                                            ; preds = %.thread22, %bb144
  %v0_adf0 = phi i32 [ %v2_addc23, %.thread22 ], [ %v0_adf0.pre, %bb144 ]
  %v0_adec = phi i32 [ %v4_aca0, %.thread22 ], [ %v0_adec.pre, %bb144 ]
  %v0_ade8 = load i32, i32* %r1.global-to-local, align 4
  %v1_ade8 = add i32 %v0_adec, 41
  %v2_adec = add i32 %v1_ade8, %v0_ade8
  store i32 %v2_adec, i32* %r4.global-to-local, align 4
  %v2_adf0 = add i32 %v0_ade8, 12
  %v3_adf0 = inttoptr i32 %v2_adf0 to i32*
  store i32 %v0_adf0, i32* %v3_adf0, align 4
  store i32 %v4_adf4, i32* %r2.global-to-local, align 4
  store i32 %v4_adf8, i32* %r3.global-to-local, align 4
  %v0_adfc = load i32, i32* %r1.global-to-local, align 4
  %v1_adfc = add i32 %v0_adfc, 20
  store i32 %v1_adfc, i32* %r0.global-to-local, align 4
  %v0_ae00 = load i32, i32* %ip.global-to-local, align 4
  %v1_ae00 = trunc i32 %v0_ae00 to i8
  %v3_ae00 = add i32 %v0_adfc, 4
  %v4_ae00 = inttoptr i32 %v3_ae00 to i8*
  store i8 %v1_ae00, i8* %v4_ae00, align 1
  %v0_ae04 = load i32, i32* %r2.global-to-local, align 4
  %v1_ae04 = trunc i32 %v0_ae04 to i8
  %v2_ae04 = load i32, i32* %r0.global-to-local, align 4
  %v3_ae04 = add i32 %v2_ae04, 5
  %v4_ae04 = inttoptr i32 %v3_ae04 to i8*
  store i8 %v1_ae04, i8* %v4_ae04, align 1
  %v0_ae08 = load i32, i32* %r3.global-to-local, align 4
  %v1_ae08 = trunc i32 %v0_ae08 to i8
  %v2_ae08 = load i32, i32* %r0.global-to-local, align 4
  %v3_ae08 = add i32 %v2_ae08, 3
  %v4_ae08 = inttoptr i32 %v3_ae08 to i8*
  store i8 %v1_ae08, i8* %v4_ae08, align 1
  %v0_ae0c = load i32, i32* %sb.global-to-local, align 4
  %v1_ae0c = trunc i32 %v0_ae0c to i8
  %v2_ae0c = load i32, i32* %r0.global-to-local, align 4
  %v3_ae0c = add i32 %v2_ae0c, 2
  %v4_ae0c = inttoptr i32 %v3_ae0c to i8*
  store i8 %v1_ae0c, i8* %v4_ae0c, align 1
  %v0_ae10 = load i32, i32* %sl.global-to-local, align 4
  %v1_ae10 = trunc i32 %v0_ae10 to i8
  %v2_ae10 = load i32, i32* %r0.global-to-local, align 4
  %v3_ae10 = add i32 %v2_ae10, 4
  %v4_ae10 = inttoptr i32 %v3_ae10 to i8*
  store i8 %v1_ae10, i8* %v4_ae10, align 1
  %v0_ae14 = load i32, i32* @r5, align 4
  %v1_ae14 = trunc i32 %v0_ae14 to i8
  %v2_ae14 = load i32, i32* %r1.global-to-local, align 4
  %v3_ae14 = add i32 %v2_ae14, 20
  %v4_ae14 = inttoptr i32 %v3_ae14 to i8*
  store i8 %v1_ae14, i8* %v4_ae14, align 1
  store i32 %v4_ae1c, i32* %r2.global-to-local, align 4
  %v1_ae20 = load i32, i32* %r1.global-to-local, align 4
  %v2_ae20 = add i32 %v1_ae20, 16
  %v3_ae20 = inttoptr i32 %v2_ae20 to i32*
  store i32 %stack_var_-2176.0, i32* %v3_ae20, align 4
  %v0_ae24 = load i32, i32* %r2.global-to-local, align 4
  %v1_ae24 = trunc i32 %v0_ae24 to i8
  %v2_ae24 = load i32, i32* %r0.global-to-local, align 4
  %v3_ae24 = add i32 %v2_ae24, 1
  %v4_ae24 = inttoptr i32 %v3_ae24 to i8*
  store i8 %v1_ae24, i8* %v4_ae24, align 1
  store i32 %v4_ae28, i32* %lr.global-to-local, align 4
  store i32 %v4_aca0, i32* %r0.global-to-local, align 4
  %v0_ae30 = load i32, i32* %r1.global-to-local, align 4
  %v1_ae30 = add i32 %v0_ae30, 28
  store i32 %v1_ae30, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_ae3c = load i32, i32* %r8.global-to-local, align 4
  %v1_ae3c = trunc i32 %v0_ae3c to i8
  %v4_ae3c = inttoptr i32 %v1_ae30 to i8*
  store i8 %v1_ae3c, i8* %v4_ae3c, align 1
  %v0_ae40 = load i32, i32* %r3.global-to-local, align 4
  %v1_ae40 = trunc i32 %v0_ae40 to i8
  %v2_ae40 = load i32, i32* %ip.global-to-local, align 4
  %v3_ae40 = add i32 %v2_ae40, 5
  %v4_ae40 = inttoptr i32 %v3_ae40 to i8*
  store i8 %v1_ae40, i8* %v4_ae40, align 1
  %v0_ae44 = load i32, i32* %lr.global-to-local, align 4
  %v1_ae44 = trunc i32 %v0_ae44 to i8
  %v2_ae44 = load i32, i32* %ip.global-to-local, align 4
  %v3_ae44 = add i32 %v2_ae44, 1
  %v4_ae44 = inttoptr i32 %v3_ae44 to i8*
  store i8 %v1_ae44, i8* %v4_ae44, align 1
  %v0_ae48 = load i32, i32* %r3.global-to-local, align 4
  %v1_ae48 = trunc i32 %v0_ae48 to i8
  %v2_ae48 = load i32, i32* %ip.global-to-local, align 4
  %v3_ae48 = add i32 %v2_ae48, 2
  %v4_ae48 = inttoptr i32 %v3_ae48 to i8*
  store i8 %v1_ae48, i8* %v4_ae48, align 1
  %v0_ae4c = load i32, i32* @r6, align 4
  %v1_ae4c = trunc i32 %v0_ae4c to i8
  %v2_ae4c = load i32, i32* %ip.global-to-local, align 4
  %v3_ae4c = add i32 %v2_ae4c, 3
  %v4_ae4c = inttoptr i32 %v3_ae4c to i8*
  store i8 %v1_ae4c, i8* %v4_ae4c, align 1
  %v0_ae50 = load i32, i32* @r6, align 4
  %v1_ae50 = trunc i32 %v0_ae50 to i8
  %v2_ae50 = load i32, i32* %ip.global-to-local, align 4
  %v3_ae50 = add i32 %v2_ae50, 4
  %v4_ae50 = inttoptr i32 %v3_ae50 to i8*
  store i8 %v1_ae50, i8* %v4_ae50, align 1
  %v0_ae54 = load i32, i32* %r0.global-to-local, align 4
  %v1_ae54 = trunc i32 %v0_ae54 to i8
  %v2_ae54 = load i32, i32* %r1.global-to-local, align 4
  %v3_ae54 = add i32 %v2_ae54, 40
  %v4_ae54 = inttoptr i32 %v3_ae54 to i8*
  store i8 %v1_ae54, i8* %v4_ae54, align 1
  store i32 %v5_aaa8, i32* %r1.global-to-local, align 4
  %v0_ae5c = load i32, i32* @r7, align 4
  store i32 %v0_ae5c, i32* %r2.global-to-local, align 4
  %v0_ae60 = load i32, i32* %r4.global-to-local, align 4
  %v1_ae60 = add i32 %v0_ae60, 1
  store i32 %v1_ae60, i32* %r0.global-to-local, align 4
  %v3_ae64 = call i32 @function_12214(i32 %v1_ae60, i32 %v5_aaa8, i32 %v0_ae5c)
  store i32 %v3_ae64, i32* %r0.global-to-local, align 4
  store i32 %v2_abf4, i32* %r1.global-to-local, align 4
  %v1_ae6c = load i32, i32* @r6, align 4
  %v9_ae6c = icmp eq i32 %v2_abf4, %v1_ae6c
  store i1 %v9_ae6c, i1* %cpsr_z.global-to-local, align 1
  %v7_ae70 = icmp sgt i32 %v2_abf4, %v1_ae6c
  store i32 %v1_ae6c, i32* %lr.global-to-local, align 4
  %v0_ae80 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_ae80, i32* %r2.global-to-local, align 4
  %extract.t78 = trunc i32 %v1_ae6c to i8
  br i1 %v7_ae70, label %dec_label_pc_ae7c, label %dec_label_pc_aebc

dec_label_pc_ae7c:                                ; preds = %bb145
  store i32 %v1_ae6c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_ae88

dec_label_pc_ae88:                                ; preds = %bb148, %dec_label_pc_ae7c
  %v0_aea485151 = phi i32 [ %v0_aea485152, %bb148 ], [ %v1_ae6c, %dec_label_pc_ae7c ]
  %v1_ae9833 = phi i32 [ %v1_aea891, %bb148 ], [ %v1_ae6c, %dec_label_pc_ae7c ]
  %v1_ae94.off0 = phi i8 [ %v1_ae9456.off0, %bb148 ], [ %extract.t78, %dec_label_pc_ae7c ]
  %v0_ae9832 = phi i32 [ %v0_ae98325488, %bb148 ], [ %v0_ae80, %dec_label_pc_ae7c ]
  store i32 %v5_aaa8, i32* %ip.global-to-local, align 4
  %v2_ae8c = add i32 %v1_ae9833, %v5_aaa8
  %v3_ae8c = inttoptr i32 %v2_ae8c to i8*
  %v4_ae8c = load i8, i8* %v3_ae8c, align 1
  %v6_ae8c = zext i8 %v4_ae8c to i32
  store i32 %v6_ae8c, i32* %r3.global-to-local, align 4
  %v7_ae90 = icmp eq i8 %v4_ae8c, 46
  store i1 %v7_ae90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ae90, label %bb146, label %.thread31

.thread31:                                        ; preds = %dec_label_pc_ae88
  %v2_ae9834 = add i32 %v1_ae9833, %v0_ae9832
  store i32 %v2_ae9834, i32* %r0.global-to-local, align 4
  br label %.thread35

bb146:                                            ; preds = %dec_label_pc_ae88
  %v3_ae94 = load i32, i32* %r2.global-to-local, align 4
  %v4_ae94 = inttoptr i32 %v3_ae94 to i8*
  store i8 %v1_ae94.off0, i8* %v4_ae94, align 1
  %v0_ae9c.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_ae98 = load i32, i32* %r4.global-to-local, align 4
  %v1_ae98 = load i32, i32* %r1.global-to-local, align 4
  %v2_ae98 = add i32 %v1_ae98, %v0_ae98
  store i32 %v2_ae98, i32* %r0.global-to-local, align 4
  br i1 %v0_ae9c.pr, label %bb147, label %bb146..thread35_crit_edge

bb146..thread35_crit_edge:                        ; preds = %bb146
  %v0_aea485.pre = load i32, i32* %lr.global-to-local, align 4
  br label %.thread35

bb147:                                            ; preds = %bb146
  %v2_ae9c = add i32 %v2_ae98, 1
  store i32 %v2_ae9c, i32* %r2.global-to-local, align 4
  store i32 %v2_abf4, i32* %r0.global-to-local, align 4
  %v0_aea4 = load i32, i32* %lr.global-to-local, align 4
  %v1_aea4 = add i32 %v0_aea4, 1
  store i32 %v1_aea4, i32* %ip.global-to-local, align 4
  %v1_aea8 = add i32 %v1_ae98, 1
  store i32 %v1_aea8, i32* %r1.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  br label %bb148

.thread35:                                        ; preds = %bb146..thread35_crit_edge, %.thread31
  %v0_aea485 = phi i32 [ %v0_aea485.pre, %bb146..thread35_crit_edge ], [ %v0_aea485151, %.thread31 ]
  %v0_aea8.ph = phi i32 [ %v1_ae98, %bb146..thread35_crit_edge ], [ %v1_ae9833, %.thread31 ]
  %v0_ae983254.ph = phi i32 [ %v0_ae98, %bb146..thread35_crit_edge ], [ %v0_ae9832, %.thread31 ]
  store i32 %v2_abf4, i32* %r0.global-to-local, align 4
  %v1_aea486 = add i32 %v0_aea485, 1
  store i32 %v1_aea486, i32* %ip.global-to-local, align 4
  %v1_aea887 = add i32 %v0_aea8.ph, 1
  store i32 %v1_aea887, i32* %r1.global-to-local, align 4
  %v2_aeb0 = urem i32 %v1_aea486, 256
  store i32 %v2_aeb0, i32* %lr.global-to-local, align 4
  %extract.t81 = trunc i32 %v1_aea486 to i8
  br label %bb148

bb148:                                            ; preds = %bb147, %.thread35
  %v0_aea485152 = phi i32 [ 0, %bb147 ], [ %v2_aeb0, %.thread35 ]
  %v1_aea891 = phi i32 [ %v1_aea8, %bb147 ], [ %v1_aea887, %.thread35 ]
  %v0_ae98325488 = phi i32 [ %v0_ae98, %bb147 ], [ %v0_ae983254.ph, %.thread35 ]
  %v1_ae9456.off0 = phi i8 [ 0, %bb147 ], [ %extract.t81, %.thread35 ]
  %v9_aeb4 = icmp eq i32 %v2_abf4, %v1_aea891
  store i1 %v9_aeb4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_aeb4, label %dec_label_pc_aebc.loopexit, label %dec_label_pc_ae88

dec_label_pc_aebc.loopexit:                       ; preds = %bb148
  %v2_aebc.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_aebc

dec_label_pc_aebc:                                ; preds = %dec_label_pc_aebc.loopexit, %bb145
  %v2_aebc = phi i32 [ %v2_aebc.pre, %dec_label_pc_aebc.loopexit ], [ %v0_ae80, %bb145 ]
  %v0_aebc.off0 = phi i8 [ %v1_ae9456.off0, %dec_label_pc_aebc.loopexit ], [ %extract.t78, %bb145 ]
  %v3_aebc = inttoptr i32 %v2_aebc to i8*
  store i8 %v0_aebc.off0, i8* %v3_aebc, align 1
  %v3_aec0 = load i32, i32* %stack_var_-40, align 4
  store i32 %v2_abf4, i32* %r1.global-to-local, align 4
  %v0_aec8 = load i32, i32* %r4.global-to-local, align 4
  %v2_aec8 = add i32 %v0_aec8, %v2_abf4
  store i32 %v2_aec8, i32* %r3.global-to-local, align 4
  %v1_aecc = add i32 %v3_aec0, 1
  store i32 %v1_aecc, i32* @r4, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 1, i32* @lr, align 4
  %v9_aedc = icmp eq i32 %v1_a994, %v1_aecc
  store i1 %v9_aedc, i1* %cpsr_z.global-to-local, align 1
  %v1_aee0 = add i32 %v2_aec8, 2
  store i32 %v1_aee0, i32* %r2.global-to-local, align 4
  %v4_aee4 = inttoptr i32 %v1_aee0 to i8*
  store i8 0, i8* %v4_aee4, align 1
  %v0_aee8 = load i32, i32* @lr, align 4
  %v1_aee8 = trunc i32 %v0_aee8 to i8
  %v2_aee8 = load i32, i32* %r2.global-to-local, align 4
  %v3_aee8 = add i32 %v2_aee8, 3
  %v4_aee8 = inttoptr i32 %v3_aee8 to i8*
  store i8 %v1_aee8, i8* %v4_aee8, align 1
  %v0_aeec = load i32, i32* @lr, align 4
  %v1_aeec = trunc i32 %v0_aeec to i8
  %v2_aeec = load i32, i32* %r2.global-to-local, align 4
  %v3_aeec = add i32 %v2_aeec, 1
  %v4_aeec = inttoptr i32 %v3_aeec to i8*
  store i8 %v1_aeec, i8* %v4_aeec, align 1
  %v0_aef0 = load i32, i32* %ip.global-to-local, align 4
  %v1_aef0 = trunc i32 %v0_aef0 to i8
  %v2_aef0 = load i32, i32* %r2.global-to-local, align 4
  %v3_aef0 = add i32 %v2_aef0, 2
  %v4_aef0 = inttoptr i32 %v3_aef0 to i8*
  store i8 %v1_aef0, i8* %v4_aef0, align 1
  %v0_aef4 = load i32, i32* @r4, align 4
  store i32 %v0_aef4, i32* %stack_var_-40, align 4
  %v8_aef8 = icmp sgt i32 %v1_a994, %v1_aecc
  br i1 %v8_aef8, label %dec_label_pc_ad54, label %dec_label_pc_aefc

dec_label_pc_aefc:                                ; preds = %dec_label_pc_aebc, %dec_label_pc_b0c8
  %v4_af6c.pre-phi = phi i32 [ %v4_b0cc, %dec_label_pc_b0c8 ], [ %v4_aca0, %dec_label_pc_aebc ]
  store i32 %v1_a994, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 %v2_ac78, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_af08

dec_label_pc_af08:                                ; preds = %dec_label_pc_af08, %dec_label_pc_b02c, %dec_label_pc_aefc
  br i1 %v2_ac78, label %dec_label_pc_af08, label %dec_label_pc_af0c

dec_label_pc_af0c:                                ; preds = %dec_label_pc_af08
  store i32 0, i32* %stack_var_-40, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 65535, i32* @r6, align 4
  %v0_af1c = load i32, i32* @fp, align 4
  %v1_af1c = add i32 %v0_af1c, 27
  store i32 %v1_af1c, i32* @sb, align 4
  %v1_af20 = add i32 %v0_af1c, 47
  store i32 %v1_af20, i32* @sl, align 4
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_af28

dec_label_pc_af28:                                ; preds = %dec_label_pc_af68.dec_label_pc_af28_crit_edge, %dec_label_pc_af0c
  %v1_af48 = phi i32 [ %v1_af34.pre, %dec_label_pc_af68.dec_label_pc_af28_crit_edge ], [ 65535, %dec_label_pc_af0c ]
  %v1_af30 = phi i32 [ %v1_b018, %dec_label_pc_af68.dec_label_pc_af28_crit_edge ], [ 0, %dec_label_pc_af0c ]
  store i32 %v2_a9ac, i32* %r3.global-to-local, align 4
  store i32 %v3_ac68, i32* %r8.global-to-local, align 4
  %v4_af30 = mul i32 %v1_af30, 4
  %v5_af30 = add i32 %v4_af30, %v2_a9ac
  %v6_af30 = inttoptr i32 %v5_af30 to i32*
  %v7_af30 = load i32, i32* %v6_af30, align 4
  store i32 %v7_af30, i32* @r4, align 4
  %v9_af34 = icmp eq i32 %v3_ac68, %v1_af48
  store i1 %v9_af34, i1* %cpsr_z.global-to-local, align 1
  %v1_af38 = add i32 %v7_af30, 20
  store i32 %v1_af38, i32* @r5, align 4
  %v1_af3c = add i32 %v7_af30, 28
  store i32 %v1_af3c, i32* @r8, align 4
  br i1 %v9_af34, label %dec_label_pc_b03c, label %dec_label_pc_af44

dec_label_pc_af44:                                ; preds = %dec_label_pc_af28
  store i32 %v3_ac6c, i32* %ip.global-to-local, align 4
  %v9_af48 = icmp eq i32 %v3_ac6c, %v1_af48
  store i1 %v9_af48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_af48, label %dec_label_pc_b058, label %dec_label_pc_af50

dec_label_pc_af50:                                ; preds = %dec_label_pc_b03c.dec_label_pc_af50_crit_edge, %dec_label_pc_af44
  %v1_af54 = phi i32 [ %v1_af54.pre, %dec_label_pc_b03c.dec_label_pc_af50_crit_edge ], [ %v1_af48, %dec_label_pc_af44 ]
  store i32 %v3_ac70, i32* %lr.global-to-local, align 4
  %v9_af54 = icmp eq i32 %v3_ac70, %v1_af54
  store i1 %v9_af54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_af54, label %dec_label_pc_b074, label %dec_label_pc_af5c

dec_label_pc_af5c:                                ; preds = %dec_label_pc_b058.dec_label_pc_af5c_crit_edge, %dec_label_pc_af50
  %v1_af60 = phi i32 [ %v1_af60.pre, %dec_label_pc_b058.dec_label_pc_af5c_crit_edge ], [ %v1_af54, %dec_label_pc_af50 ]
  store i32 %v3_ac74, i32* %r0.global-to-local, align 4
  %v9_af60 = icmp eq i32 %v3_ac74, %v1_af60
  store i1 %v9_af60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_af60, label %dec_label_pc_b090, label %dec_label_pc_af68

dec_label_pc_af68:                                ; preds = %dec_label_pc_b074, %dec_label_pc_af5c, %dec_label_pc_b090
  %v0_af68 = load i32, i32* @r4, align 4
  %v1_af68 = add i32 %v0_af68, 41
  store i32 %v1_af68, i32* %r0.global-to-local, align 4
  store i32 %v4_af6c.pre-phi, i32* %r1.global-to-local, align 4
  %v2_af70 = call i32 @function_e880(i32 %v1_af68, i32 %v4_af6c.pre-phi)
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_af78 = load i32, i32* @r7, align 4
  %v1_af78 = trunc i32 %v0_af78 to i8
  %v2_af78 = load i32, i32* @r4, align 4
  %v3_af78 = add i32 %v2_af78, 10
  %v4_af78 = inttoptr i32 %v3_af78 to i8*
  store i8 %v1_af78, i8* %v4_af78, align 1
  %v0_af7c = load i32, i32* @r7, align 4
  %v1_af7c = trunc i32 %v0_af7c to i8
  %v2_af7c = load i32, i32* @r4, align 4
  %v3_af7c = add i32 %v2_af7c, 11
  %v4_af7c = inttoptr i32 %v3_af7c to i8*
  store i8 %v1_af7c, i8* %v4_af7c, align 1
  %v0_af80 = load i32, i32* @r4, align 4
  store i32 %v0_af80, i32* @r0, align 4
  %v2_af84 = call i32 @function_d0b8(i32 %v0_af80, i32 20)
  %v3_af84 = trunc i32 %v2_af84 to i8
  store i32 %v2_af84, i32* %r0.global-to-local, align 4
  %v4_af88 = sdiv i32 %v2_af84, 256
  store i32 %v4_af88, i32* %r3.global-to-local, align 4
  %v1_af8c = trunc i32 %v4_af88 to i8
  %v2_af8c = load i32, i32* @r4, align 4
  %v3_af8c = add i32 %v2_af8c, 11
  %v4_af8c = inttoptr i32 %v3_af8c to i8*
  store i8 %v1_af8c, i8* %v4_af8c, align 1
  %v3_af90 = load i32, i32* @r4, align 4
  %v4_af90 = add i32 %v3_af90, 10
  %v5_af90 = inttoptr i32 %v4_af90 to i8*
  store i8 %v3_af84, i8* %v5_af90, align 1
  %v0_af94 = load i32, i32* @r7, align 4
  %v1_af94 = trunc i32 %v0_af94 to i8
  %v2_af94 = load i32, i32* @r5, align 4
  %v3_af94 = add i32 %v2_af94, 6
  %v4_af94 = inttoptr i32 %v3_af94 to i8*
  store i8 %v1_af94, i8* %v4_af94, align 1
  %v0_af98 = load i32, i32* @r7, align 4
  %v1_af98 = trunc i32 %v0_af98 to i8
  %v2_af98 = load i32, i32* @r5, align 4
  %v3_af98 = add i32 %v2_af98, 7
  %v4_af98 = inttoptr i32 %v3_af98 to i8*
  store i8 %v1_af98, i8* %v4_af98, align 1
  %v0_af9c = load i32, i32* @r4, align 4
  %v1_af9c = add i32 %v0_af9c, 24
  %v2_af9c = inttoptr i32 %v1_af9c to i8*
  %v3_af9c = load i8, i8* %v2_af9c, align 1
  %v4_af9c = zext i8 %v3_af9c to i32
  store i32 %v4_af9c, i32* %r3.global-to-local, align 4
  %v1_afa0 = add i32 %v0_af9c, 25
  %v2_afa0 = inttoptr i32 %v1_afa0 to i8*
  %v3_afa0 = load i8, i8* %v2_afa0, align 1
  %v4_afa0 = zext i8 %v3_afa0 to i32
  %v0_afa4 = load i32, i32* @r5, align 4
  store i32 %v0_afa4, i32* @r1, align 4
  %v4_afa8 = mul nuw nsw i32 %v4_afa0, 256
  %v5_afa8 = or i32 %v4_afa8, %v4_af9c
  store i32 %v5_afa8, i32* %r2.global-to-local, align 4
  store i32 %v0_af9c, i32* %r0.global-to-local, align 4
  %v0_afb0 = load i32, i32* @sb, align 4
  store i32 %v0_afb0, i32* %r3.global-to-local, align 4
  %v4_afb4 = call i32 @function_d114(i32 %v0_af9c, i32 %v0_afa4, i32 %v5_afa8, i32 %v0_afb0)
  %v5_afb4 = trunc i32 %v4_afb4 to i8
  store i32 %v4_afb4, i32* %r0.global-to-local, align 4
  %v3_afb8 = load i32, i32* %stack_var_-40, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %stack_var_-2176.0, i32* %r2.global-to-local, align 4
  %v5_afc8 = mul i32 %v3_afb8, 24
  %v2_afcc = add i32 %v5_afc8, %arg2
  store i32 %v2_afcc, i32* %lr.global-to-local, align 4
  %v4_afd0 = sdiv i32 %v4_afb4, 256
  store i32 %v4_afd0, i32* %r3.global-to-local, align 4
  %v3_afd4 = load i32, i32* @r5, align 4
  %v4_afd4 = add i32 %v3_afd4, 6
  %v5_afd4 = inttoptr i32 %v4_afd4 to i8*
  store i8 %v5_afb4, i8* %v5_afd4, align 1
  %v0_afd8 = load i32, i32* %r3.global-to-local, align 4
  %v1_afd8 = trunc i32 %v0_afd8 to i8
  %v2_afd8 = load i32, i32* @r5, align 4
  %v3_afd8 = add i32 %v2_afd8, 7
  %v4_afd8 = inttoptr i32 %v3_afd8 to i8*
  store i8 %v1_afd8, i8* %v4_afd8, align 1
  %v0_afdc = load i32, i32* %r2.global-to-local, align 4
  %v1_afdc = load i32, i32* %lr.global-to-local, align 4
  %v2_afdc = add i32 %v1_afdc, 4
  %v3_afdc = inttoptr i32 %v2_afdc to i32*
  store i32 %v0_afdc, i32* %v3_afdc, align 4
  %v0_afe0 = load i32, i32* @r4, align 4
  %v1_afe0 = add i32 %v0_afe0, 20
  %v2_afe0 = inttoptr i32 %v1_afe0 to i32*
  %v3_afe0 = load i32, i32* %v2_afe0, align 4
  %v3_afe4 = udiv i32 %v3_afe0, 65536
  store i32 %v3_afe4, i32* %r3.global-to-local, align 4
  %v3_afe812 = udiv i32 %v3_afe0, 16777216
  %v1_afec = trunc i32 %v3_afe812 to i8
  %v2_afec = load i32, i32* %lr.global-to-local, align 4
  %v3_afec = add i32 %v2_afec, 3
  %v4_afec = inttoptr i32 %v3_afec to i8*
  store i8 %v1_afec, i8* %v4_afec, align 1
  %v0_aff0 = load i32, i32* %r3.global-to-local, align 4
  %v1_aff0 = trunc i32 %v0_aff0 to i8
  %v2_aff0 = load i32, i32* %lr.global-to-local, align 4
  %v3_aff0 = add i32 %v2_aff0, 2
  %v4_aff0 = inttoptr i32 %v3_aff0 to i8*
  store i8 %v1_aff0, i8* %v4_aff0, align 1
  store i32 16, i32* %ip.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_affc = load i32, i32* @r4, align 4
  store i32 %v0_affc, i32* %r1.global-to-local, align 4
  store i32 %v3_ac08, i32* %r0.global-to-local, align 4
  %v0_b004 = load i32, i32* @sl, align 4
  store i32 %v0_b004, i32* %r2.global-to-local, align 4
  %v0_b008 = load i32, i32* %lr.global-to-local, align 4
  %v6_b010 = inttoptr i32 %v0_affc to i32*
  %v7_b010 = call i32 @function_1331c(i32 %v3_ac08, i32* %v6_b010, i32 %v0_b004, i32 16384, i32 %v0_b008, i32 16)
  %v3_b014 = load i32, i32* %stack_var_-40, align 4
  %v1_b018 = add i32 %v3_b014, 1
  store i32 %v1_b018, i32* %r0.global-to-local, align 4
  store i32 %v1_a994, i32* %r3.global-to-local, align 4
  %v9_b020 = icmp eq i32 %v1_a994, %v1_b018
  store i1 %v9_b020, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_b018, i32* %stack_var_-40, align 4
  %v8_b028 = icmp sgt i32 %v1_a994, %v1_b018
  br i1 %v8_b028, label %dec_label_pc_af68.dec_label_pc_af28_crit_edge, label %dec_label_pc_b02c

dec_label_pc_af68.dec_label_pc_af28_crit_edge:    ; preds = %dec_label_pc_af68
  %v1_af34.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_af28

dec_label_pc_b02c:                                ; preds = %dec_label_pc_af68
  store i32 %v1_a994, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_af08

dec_label_pc_b03c:                                ; preds = %dec_label_pc_af28
  %v0_b03c = call i32 @function_e7cc()
  %v1_b03c = trunc i32 %v0_b03c to i8
  store i32 %v0_b03c, i32* %r0.global-to-local, align 4
  store i32 %v3_ac6c, i32* %ip.global-to-local, align 4
  %v4_b044 = sdiv i32 %v0_b03c, 256
  store i32 %v4_b044, i32* %r3.global-to-local, align 4
  %v1_b048 = load i32, i32* @r6, align 4
  %v9_b048 = icmp eq i32 %v3_ac6c, %v1_b048
  store i1 %v9_b048, i1* %cpsr_z.global-to-local, align 1
  %v1_b04c = trunc i32 %v4_b044 to i8
  %v2_b04c = load i32, i32* @r4, align 4
  %v3_b04c = add i32 %v2_b04c, 5
  %v4_b04c = inttoptr i32 %v3_b04c to i8*
  store i8 %v1_b04c, i8* %v4_b04c, align 1
  %v3_b050 = load i32, i32* @r4, align 4
  %v4_b050 = add i32 %v3_b050, 4
  %v5_b050 = inttoptr i32 %v4_b050 to i8*
  store i8 %v1_b03c, i8* %v5_b050, align 1
  %v0_b054 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b054, label %dec_label_pc_b058, label %dec_label_pc_b03c.dec_label_pc_af50_crit_edge

dec_label_pc_b03c.dec_label_pc_af50_crit_edge:    ; preds = %dec_label_pc_b03c
  %v1_af54.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_af50

dec_label_pc_b058:                                ; preds = %dec_label_pc_b03c, %dec_label_pc_af44
  %v0_b058 = call i32 @function_e7cc()
  %v1_b058 = trunc i32 %v0_b058 to i8
  store i32 %v0_b058, i32* %r0.global-to-local, align 4
  store i32 %v3_ac70, i32* %lr.global-to-local, align 4
  %v4_b060 = sdiv i32 %v0_b058, 256
  store i32 %v4_b060, i32* %r3.global-to-local, align 4
  %v1_b064 = load i32, i32* @r6, align 4
  %v9_b064 = icmp eq i32 %v3_ac70, %v1_b064
  store i1 %v9_b064, i1* %cpsr_z.global-to-local, align 1
  %v3_b068 = load i32, i32* @r4, align 4
  %v4_b068 = add i32 %v3_b068, 20
  %v5_b068 = inttoptr i32 %v4_b068 to i8*
  store i8 %v1_b058, i8* %v5_b068, align 1
  %v0_b06c = load i32, i32* %r3.global-to-local, align 4
  %v1_b06c = trunc i32 %v0_b06c to i8
  %v2_b06c = load i32, i32* @r5, align 4
  %v3_b06c = add i32 %v2_b06c, 1
  %v4_b06c = inttoptr i32 %v3_b06c to i8*
  store i8 %v1_b06c, i8* %v4_b06c, align 1
  %v0_b070 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b070, label %dec_label_pc_b074, label %dec_label_pc_b058.dec_label_pc_af5c_crit_edge

dec_label_pc_b058.dec_label_pc_af5c_crit_edge:    ; preds = %dec_label_pc_b058
  %v1_af60.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_af5c

dec_label_pc_b074:                                ; preds = %dec_label_pc_b058, %dec_label_pc_af50
  %v0_b074 = call i32 @function_e7cc()
  %v1_b074 = trunc i32 %v0_b074 to i8
  %v4_b078 = sdiv i32 %v0_b074, 256
  store i32 %v4_b078, i32* %r3.global-to-local, align 4
  %v3_b07c = load i32, i32* @r5, align 4
  %v4_b07c = add i32 %v3_b07c, 2
  %v5_b07c = inttoptr i32 %v4_b07c to i8*
  store i8 %v1_b074, i8* %v5_b07c, align 1
  store i32 %v3_ac74, i32* %r0.global-to-local, align 4
  %v1_b084 = load i32, i32* @r6, align 4
  %v9_b084 = icmp eq i32 %v3_ac74, %v1_b084
  store i1 %v9_b084, i1* %cpsr_z.global-to-local, align 1
  %v0_b088 = load i32, i32* %r3.global-to-local, align 4
  %v1_b088 = trunc i32 %v0_b088 to i8
  %v2_b088 = load i32, i32* @r5, align 4
  %v3_b088 = add i32 %v2_b088, 3
  %v4_b088 = inttoptr i32 %v3_b088 to i8*
  store i8 %v1_b088, i8* %v4_b088, align 1
  %v0_b08c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b08c, label %dec_label_pc_b090, label %dec_label_pc_af68

dec_label_pc_b090:                                ; preds = %dec_label_pc_b074, %dec_label_pc_af5c
  %v0_b090 = call i32 @function_e7cc()
  %v1_b090 = trunc i32 %v0_b090 to i8
  store i32 %v0_b090, i32* %r0.global-to-local, align 4
  %v4_b094 = sdiv i32 %v0_b090, 256
  store i32 %v4_b094, i32* %r3.global-to-local, align 4
  %v3_b098 = load i32, i32* @r4, align 4
  %v4_b098 = add i32 %v3_b098, 28
  %v5_b098 = inttoptr i32 %v4_b098 to i8*
  store i8 %v1_b090, i8* %v5_b098, align 1
  %v0_b09c = load i32, i32* %r3.global-to-local, align 4
  %v1_b09c = trunc i32 %v0_b09c to i8
  %v2_b09c = load i32, i32* @r8, align 4
  %v3_b09c = add i32 %v2_b09c, 1
  %v4_b09c = inttoptr i32 %v3_b09c to i8*
  store i8 %v1_b09c, i8* %v4_b09c, align 1
  br label %dec_label_pc_af68

dec_label_pc_b0a4:                                ; preds = %dec_label_pc_ab70, %dec_label_pc_ab3c, %dec_label_pc_aae0, %dec_label_pc_a988
  %v0_b0a4 = call i32 @function_e7cc()
  %v1_b0a8 = urem i32 %v0_b0a4, 4
  store i32 %v1_b0a8, i32* %r0.global-to-local, align 4
  %v2_b0ac = icmp eq i32 %v1_b0a8, 3
  store i1 %v2_b0ac, i1* %cpsr_z.global-to-local, align 1
  %trunc = trunc i32 %v0_b0a4 to i2
  switch i2 %trunc, label %dec_label_pc_abe420 [
    i2 0, label %dec_label_pc_b0ec
    i2 1, label %dec_label_pc_b100
    i2 -2, label %dec_label_pc_b10c
    i2 -1, label %dec_label_pc_b11c
  ]

dec_label_pc_b0c8:                                ; preds = %dec_label_pc_ac44
  store i32 %v2_abf4, i32* %r0.global-to-local, align 4
  %v4_b0cc = sext i8 %v5_ac60 to i32
  store i32 %v4_b0cc, i32* %r1.global-to-local, align 4
  %v2_b0d0 = add i32 %v4_b0cc, %v2_abf4
  store i32 %v2_b0d0, i32* @fp, align 4
  br label %dec_label_pc_aefc

dec_label_pc_b0d8:                                ; preds = %dec_label_pc_ac18
  store i32 %v3_ac08, i32* %r0.global-to-local, align 4
  %v1_b0dc = call i32 @function_12a9c(i32 %v3_ac08)
  store i32 %v1_b0dc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b0e0

dec_label_pc_b0e0:                                ; preds = %dec_label_pc_abf0, %dec_label_pc_abe4, %dec_label_pc_b0d8
  %v29_b0e8 = phi i32 [ %v3_ac08, %dec_label_pc_abf0 ], [ %v29_b0e874, %dec_label_pc_abe4 ], [ %v1_b0dc, %dec_label_pc_b0d8 ]
  store i32 %v3_a988, i32* %r4.global-to-local, align 4
  store i32 %v15_a988, i32* %r8.global-to-local, align 4
  store i32 %v18_a988, i32* %sb.global-to-local, align 4
  store i32 %v21_a988, i32* %sl.global-to-local, align 4
  store i32 %v24_a988, i32* %fp.global-to-local, align 4
  ret i32 %v29_b0e8

dec_label_pc_b0ec:                                ; preds = %dec_label_pc_b0a4
  store i32 134744072, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_abe4

dec_label_pc_b100:                                ; preds = %dec_label_pc_b0a4
  store i32 707416650, i32* @r4, align 4
  br label %dec_label_pc_abe4

dec_label_pc_b10c:                                ; preds = %dec_label_pc_b0a4
  store i32 104859200, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_abe4

dec_label_pc_b11c:                                ; preds = %dec_label_pc_b0a4
  store i32 33686020, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_abe4

; uselistorder directives
  uselistorder i32 %v4_b0cc, { 0, 2, 1 }
  uselistorder i32 %v1_b0a8, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v0_b0a4, { 1, 0 }
  uselistorder i32 %v0_b090, { 0, 2, 1 }
  uselistorder i32 %v0_b058, { 0, 2, 1 }
  uselistorder i32 %v4_b044, { 1, 0 }
  uselistorder i32 %v0_b03c, { 0, 2, 1 }
  uselistorder i32 %v1_b018, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v4_afb4, { 0, 2, 1 }
  uselistorder i32 %v0_af9c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_af88, { 1, 0 }
  uselistorder i32 %v2_af84, { 0, 2, 1 }
  uselistorder i32 %v7_af30, { 1, 0, 2 }
  uselistorder i32 %v4_af6c.pre-phi, { 1, 0 }
  uselistorder i32 %v2_aeb0, { 1, 0 }
  uselistorder i32 %v1_aea486, { 1, 0, 2 }
  uselistorder i32 %v1_ae98, { 2, 1, 0 }
  uselistorder i32 %v0_ae98, { 1, 2, 0 }
  uselistorder i32 %v0_ae9832, { 1, 0 }
  uselistorder i32 %v1_ae9833, { 2, 0, 1 }
  uselistorder i8 %extract.t78, { 1, 0 }
  uselistorder i32 %v1_ae6c, { 2, 0, 4, 1, 3, 5, 6 }
  uselistorder i32 %v0_ade8, { 1, 0 }
  uselistorder i32 %v3_ad24, { 1, 0, 2 }
  uselistorder i32 %v1_acec, { 1, 0 }
  uselistorder i32 %v1_ace0, { 1, 0 }
  uselistorder i32 %v1_acc4, { 1, 0 }
  uselistorder i32 %v1_acb0, { 1, 0 }
  uselistorder i32 %v3_aca8, { 1, 0 }
  uselistorder i32 %v4_aca0, { 0, 4, 2, 5, 3, 1 }
  uselistorder i8 %v5_ac60, { 1, 0 }
  uselistorder i32 %v0_ac5c, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_ac50, { 0, 1, 2, 4, 3 }
  uselistorder i1 %v7_ac3c, { 1, 0 }
  uselistorder i1 %v7_ac0c, { 1, 0 }
  uselistorder i32 %v3_ac08, { 1, 3, 4, 5, 6, 2, 0, 7 }
  uselistorder i32 %v2_abf4, { 0, 11, 1, 6, 4, 3, 7, 10, 9, 8, 5, 2 }
  uselistorder i32 %stack_var_-2176.0, { 1, 0 }
  uselistorder i32 %v1_abdc, { 1, 0, 2 }
  uselistorder i1 %v7_abac, { 1, 0 }
  uselistorder i32 %v1_aba8, { 1, 0, 2 }
  uselistorder i1 %v8_aba0, { 1, 0 }
  uselistorder i1 %v7_ab9c, { 1, 0 }
  uselistorder i32 %v1_ab90, { 1, 0 }
  uselistorder i8 %v2_ab84, { 2, 0, 1, 3 }
  uselistorder i32 %v0_ab88, { 1, 0 }
  uselistorder i32 %v0_aba8, { 3, 0, 2, 1 }
  uselistorder i32 %v0_ab74, { 0, 2, 1 }
  uselistorder i32 %v1_ab8c, { 0, 2, 1 }
  uselistorder i32 %v2_ab5c, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %v2_ab54, { 1, 0, 2, 3 }
  uselistorder i32 %v0_ab3c, { 1, 2, 0, 3, 4, 5 }
  uselistorder i1 %v7_ab34, { 1, 0 }
  uselistorder i32 %v0_ab34, { 2, 3, 1, 4, 6, 5, 0 }
  uselistorder i32 %v0_aad8, { 1, 0, 3, 2 }
  uselistorder i32 %v5_aaa8, { 0, 3, 5, 4, 2, 1, 7, 6 }
  uselistorder i32 %v1_aa2c, { 1, 0 }
  uselistorder i32 %v7_a9e8, { 0, 1, 2, 4, 3 }
  uselistorder i8 %v5_a9e4, { 1, 0 }
  uselistorder i32 %v6_a9c4, { 1, 0 }
  uselistorder i32 %v2_a9ac, { 0, 3, 1, 2 }
  uselistorder i32 %v1_a994, { 7, 4, 5, 6, 3, 8, 9, 10, 2, 1, 0 }
  uselistorder i32* %stack_var_-40, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 10, 9 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 1, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 33, 35, 36, 37, 38, 39, 40, 41, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 6, 5, 7, 13, 8, 12, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 43, 46, 45, 47, 49, 48, 51, 50, 0 }
  uselistorder i32* %r0.global-to-local, { 6, 3, 4, 5, 8, 7, 9, 11, 10, 12, 14, 13, 15, 16, 17, 18, 30, 19, 20, 1, 35, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 39, 36, 37, 38, 40, 42, 41, 43, 2, 44, 46, 45, 48, 47, 49, 50, 52, 51, 53, 55, 54, 57, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 0 }
  uselistorder i32* %lr.global-to-local, { 1, 5, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 13, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 29, 26, 33, 34, 35 }
  uselistorder i32 134744072, { 1, 0 }
  uselistorder i32 707416650, { 1, 0 }
  uselistorder i32 104859200, { 1, 0 }
  uselistorder i32 33686020, { 1, 0 }
  uselistorder label %dec_label_pc_b0e0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_af68, { 2, 0, 1 }
  uselistorder label %dec_label_pc_af08, { 1, 0, 2 }
  uselistorder label %dec_label_pc_aefc, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
  uselistorder label %bb145, { 1, 0 }
  uselistorder label %.thread21, { 1, 0 }
  uselistorder label %dec_label_pc_abb8, { 1, 0 }
  uselistorder label %dec_label_pc_abac, { 1, 0 }
  uselistorder label %dec_label_pc_ab70, { 2, 0, 1 }
  uselistorder label %dec_label_pc_ab68, { 1, 0 }
}

define i32 @function_b138(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_b138:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp = call i8 @__decompiler_undefined_function_1()
  %tmp30 = call i8 @__decompiler_undefined_function_1()
  %tmp31 = call i8 @__decompiler_undefined_function_1()
  %tmp32 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v1_b13c = urem i32 %arg1, 256
  store i32 %v1_b13c, i32* @fp, align 4
  store i32 %v1_b13c, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  %v1_b154 = urem i32 %arg3, 256
  store i32 %v1_b154, i32* @r4, align 4
  %v2_b158 = call i32 @function_1366c(i32 %v1_b13c, i32 16)
  store i32 4, i32* %r1.global-to-local, align 4
  %v0_b164 = load i32, i32* @fp, align 4
  store i32 %v0_b164, i32* %r0.global-to-local, align 4
  %v2_b168 = call i32 @function_1366c(i32 %v0_b164, i32 4)
  %v0_b16c = load i32, i32* @r5, align 4
  store i32 %v0_b16c, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b17c = load i32, i32* @r4, align 4
  store i32 %v0_b17c, i32* %r0.global-to-local, align 4
  %v5_b180 = inttoptr i32 %v0_b16c to i32*
  %v6_b180 = call i32 @function_85e0(i32 %v0_b17c, i32* %v5_b180, i32 2, i32 0)
  %v1_b18c = urem i32 %v6_b180, 256
  store i32 %v1_b18c, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_b198 = load i32, i32* @r5, align 4
  store i32 %v0_b198, i32* %r1.global-to-local, align 4
  %v0_b19c = load i32, i32* @r4, align 4
  store i32 %v0_b19c, i32* %r0.global-to-local, align 4
  %v6_b1a4 = inttoptr i32 %v0_b198 to i32*
  %v7_b1a4 = call i32 @function_85e0(i32 %v0_b19c, i32* %v6_b1a4, i32 3, i32 65535)
  %v0_b1a8 = load i32, i32* @r5, align 4
  store i32 %v0_b1a8, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_b1a4, i32* @r6, align 4
  %v0_b1b8 = load i32, i32* @r4, align 4
  store i32 %v0_b1b8, i32* %r0.global-to-local, align 4
  %v4_b1bc = inttoptr i32 %v0_b1a8 to i32*
  %v5_b1bc = call i32 @function_85e0(i32 %v0_b1b8, i32* %v4_b1bc, i32 4, i32 64)
  %v1_b1c4 = urem i32 %v5_b1bc, 256
  store i32 %v1_b1c4, i32* %ip.global-to-local, align 4
  %v0_b1c8 = load i32, i32* @r5, align 4
  store i32 %v0_b1c8, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b1d4 = load i32, i32* @r4, align 4
  store i32 %v0_b1d4, i32* %r0.global-to-local, align 4
  %v6_b1dc = inttoptr i32 %v0_b1c8 to i32*
  %v7_b1dc = call i32 @function_85e0(i32 %v0_b1d4, i32* %v6_b1dc, i32 5, i32 1)
  %v1_b1e8 = urem i32 %v7_b1dc, 256
  store i32 %v1_b1e8, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  %v0_b1f0 = load i32, i32* @r5, align 4
  store i32 %v0_b1f0, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_b1f8 = load i32, i32* @r4, align 4
  store i32 %v0_b1f8, i32* %r0.global-to-local, align 4
  %v5_b200 = inttoptr i32 %v0_b1f0 to i32*
  %v6_b200 = call i32 @function_85e0(i32 %v0_b1f8, i32* %v5_b200, i32 7, i32 65535)
  %v0_b204 = load i32, i32* @r5, align 4
  store i32 %v0_b204, i32* %r1.global-to-local, align 4
  %v3_b208 = mul i32 %v6_b200, 65536
  store i32 %v3_b208, i32* @r7, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b214 = load i32, i32* @r4, align 4
  store i32 %v0_b214, i32* %r0.global-to-local, align 4
  %v4_b218 = inttoptr i32 %v0_b204 to i32*
  %v5_b218 = call i32 @function_85e0(i32 %v0_b214, i32* %v4_b218, i32 11, i32 1)
  %v1_b220 = urem i32 %v5_b218, 256
  store i32 %v1_b220, i32* %ip.global-to-local, align 4
  %v0_b224 = load i32, i32* @r5, align 4
  store i32 %v0_b224, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b230 = load i32, i32* @r4, align 4
  store i32 %v0_b230, i32* %r0.global-to-local, align 4
  %v5_b238 = inttoptr i32 %v0_b224 to i32*
  %v6_b238 = call i32 @function_85e0(i32 %v0_b230, i32* %v5_b238, i32 12, i32 1)
  %v1_b240 = urem i32 %v6_b238, 256
  store i32 %v1_b240, i32* %ip.global-to-local, align 4
  %v0_b244 = load i32, i32* @r5, align 4
  store i32 %v0_b244, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b250 = load i32, i32* @r4, align 4
  store i32 %v0_b250, i32* %r0.global-to-local, align 4
  %v5_b258 = inttoptr i32 %v0_b244 to i32*
  %v6_b258 = call i32 @function_85e0(i32 %v0_b250, i32* %v5_b258, i32 13, i32 1)
  %v1_b260 = urem i32 %v6_b258, 256
  store i32 %v1_b260, i32* %ip.global-to-local, align 4
  %v0_b264 = load i32, i32* @r5, align 4
  store i32 %v0_b264, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b270 = load i32, i32* @r4, align 4
  store i32 %v0_b270, i32* %r0.global-to-local, align 4
  %v5_b278 = inttoptr i32 %v0_b264 to i32*
  %v6_b278 = call i32 @function_85e0(i32 %v0_b270, i32* %v5_b278, i32 14, i32 1)
  %v1_b280 = urem i32 %v6_b278, 256
  store i32 %v1_b280, i32* %ip.global-to-local, align 4
  %v0_b284 = load i32, i32* @r5, align 4
  store i32 %v0_b284, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b290 = load i32, i32* @r4, align 4
  store i32 %v0_b290, i32* %r0.global-to-local, align 4
  %v5_b298 = inttoptr i32 %v0_b284 to i32*
  %v6_b298 = call i32 @function_85e0(i32 %v0_b290, i32* %v5_b298, i32 15, i32 1)
  %v1_b2a0 = urem i32 %v6_b298, 256
  store i32 %v1_b2a0, i32* %ip.global-to-local, align 4
  %v0_b2a4 = load i32, i32* @r5, align 4
  store i32 %v0_b2a4, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b2b0 = load i32, i32* @r4, align 4
  store i32 %v0_b2b0, i32* %r0.global-to-local, align 4
  %v5_b2b8 = inttoptr i32 %v0_b2a4 to i32*
  %v6_b2b8 = call i32 @function_85e0(i32 %v0_b2b0, i32* %v5_b2b8, i32 16, i32 1)
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %v6_b2b8, i32* %ip.global-to-local, align 4
  store i32 768, i32* %r3.global-to-local, align 4
  %v0_b2c8 = load i32, i32* @r5, align 4
  store i32 %v0_b2c8, i32* %r1.global-to-local, align 4
  %v0_b2cc = load i32, i32* @r4, align 4
  store i32 %v0_b2cc, i32* %r0.global-to-local, align 4
  %v1_b2d0 = urem i32 %v6_b2b8, 256
  store i32 %v1_b2d0, i32* @r8, align 4
  %v4_b2d4 = inttoptr i32 %v0_b2c8 to i32*
  %v5_b2d4 = call i32 @function_85e0(i32 %v0_b2cc, i32* %v4_b2d4, i32 0, i32 768)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b2e0 = load i32, i32* @r5, align 4
  store i32 %v0_b2e0, i32* %r1.global-to-local, align 4
  store i32 %v5_b2d4, i32* @sb, align 4
  %v0_b2e8 = load i32, i32* @r4, align 4
  store i32 %v0_b2e8, i32* %r0.global-to-local, align 4
  %v4_b2ec = inttoptr i32 %v0_b2e0 to i32*
  %v5_b2ec = call i32 @function_85e0(i32 %v0_b2e8, i32* %v4_b2ec, i32 1, i32 1)
  store i32 3, i32* %r1.global-to-local, align 4
  %v1_b2f8 = urem i32 %v5_b2ec, 256
  store i32 %v1_b2f8, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_b308 = call i32 @function_13380(i32 2, i32 3, i32 6)
  store i32 %v3_b308, i32* %r0.global-to-local, align 4
  %v0_b30c = load i32, i32* @r7, align 4
  %v3_b30c = udiv i32 %v0_b30c, 65536
  store i32 %v3_b30c, i32* %r1.global-to-local, align 4
  %v7_b310 = icmp eq i32 %v3_b308, -1
  store i1 %v7_b310, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_b310, label %dec_label_pc_b56c, label %dec_label_pc_b320

dec_label_pc_b320:                                ; preds = %dec_label_pc_b138
  store i32 1, i32* %stack_var_-40, align 4
  %v6_b328 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v6_b328, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v6_b33c = call i32 @function_13350(i32 %v3_b308, i32 0, i32 3, i32* nonnull %stack_var_-40, i32 4)
  store i32 %v6_b33c, i32* %r0.global-to-local, align 4
  %v7_b340 = icmp eq i32 %v6_b33c, -1
  store i1 %v7_b340, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_b340, label %dec_label_pc_b564, label %dec_label_pc_b348

dec_label_pc_b348:                                ; preds = %dec_label_pc_b320
  %v0_b348 = load i32, i32* @fp, align 4
  %v2_b348 = icmp eq i32 %v0_b348, 0
  store i1 %v2_b348, i1* %cpsr_z.global-to-local, align 1
  %v0_b34c = load i32, i32* @r6, align 4
  %v3_b34c = mul i32 %v0_b34c, 65536
  store i32 %v3_b34c, i32* %r0.global-to-local, align 4
  %v3_b350 = urem i32 %v0_b34c, 65536
  store i32 %v3_b350, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %tmp72 = icmp slt i32 %v0_b348, 1
  br i1 %tmp72, label %.thread18, label %dec_label_pc_b374.preheader

.thread18:                                        ; preds = %dec_label_pc_b348
  store i32 0, i32* %stack_var_-40, align 4
  br label %dec_label_pc_b7f8

dec_label_pc_b374.preheader:                      ; preds = %dec_label_pc_b348
  %v5_b358 = load i32, i32* @r7, align 4
  %v8_b358 = udiv i32 %v5_b358, 16777216
  %tmp73 = udiv i32 %v0_b34c, 256
  %v8_b35c = urem i32 %tmp73, 256
  store i32 %v8_b35c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-40, align 4
  %v3_b460 = icmp ugt i32 %v0_b30c, -65537
  %v2_b484 = ptrtoint i32* %stack_var_-60 to i32
  %v3_b490 = bitcast i32* %stack_var_-60 to %sockaddr*
  %v2_b4c0 = ptrtoint i32* %stack_var_-76 to i32
  %v2_b4c4 = ptrtoint i32* %stack_var_-44 to i32
  %v2_b4c8 = ptrtoint i32* %stack_var_-332 to i32
  %v4_b514 = zext i8 %tmp31 to i32
  %v4_b518 = zext i8 %tmp30 to i32
  %v4_b524 = mul nuw nsw i32 %v4_b518, 256
  %v4_b534 = zext i8 %tmp to i32
  %v1_b538 = and i32 %v4_b534, 18
  %v2_b53c = icmp eq i32 %v1_b538, 18
  %v1_b470 = mul nuw nsw i32 %v3_b30c, 256
  %v4_b474 = and i32 %v1_b470, 65280
  %v5_b474 = or i32 %v8_b358, %v4_b474
  %v3_b47893 = udiv i32 %v4_b474, 256
  %v1_b47c = trunc i32 %v3_b47893 to i8
  %v1_b640 = mul i32 %v0_b34c, 256
  %v4_b648 = and i32 %v1_b640, 65280
  %sext = mul i32 %v6_b180, 16777216
  %v4_b658 = sdiv i32 %sext, 16777216
  %sext5 = mul i32 %v5_b1bc, 16777216
  %v4_b67c = sdiv i32 %sext5, 16777216
  %v5_b524 = or i32 %v4_b514, %v4_b524
  %v1_b544 = and i32 %v4_b534, 5
  %v2_b544 = icmp eq i32 %v1_b544, 0
  %v1_b480 = trunc i32 %v8_b358 to i8
  %v5_b648 = or i32 %v8_b35c, %v4_b648
  %v1_b668 = trunc i32 %v4_b658 to i8
  %v1_b748 = urem i32 %v5_b218, 2
  %tmp94 = sub nsw i32 0, %v1_b748
  %v4_b750 = and i32 %tmp94, 32
  %v1_b760 = urem i32 %v6_b238, 2
  %tmp95 = sub nsw i32 0, %v1_b760
  %v4_b768 = and i32 %tmp95, 16
  %v1_b778 = urem i32 %v6_b258, 2
  %tmp96 = sub nsw i32 0, %v1_b778
  %v4_b780 = and i32 %tmp96, 8
  %v1_b790 = urem i32 %v6_b278, 2
  %tmp97 = sub nsw i32 0, %v1_b790
  %v4_b798 = and i32 %tmp97, 4
  %v1_b7a8 = urem i32 %v6_b298, 2
  %tmp98 = sub nsw i32 0, %v1_b7a8
  %v3_b7b0 = and i32 %tmp98, 2
  br label %dec_label_pc_b374

dec_label_pc_b374:                                ; preds = %dec_label_pc_b7e4, %dec_label_pc_b54c, %dec_label_pc_b374.preheader
  store i32 %v8_b35c, i32* %r3.global-to-local, align 4
  %v0_b380 = load i32, i32* @sb, align 4
  %v1_b380 = add i32 %v0_b380, 40
  store i32 %v1_b380, i32* @sl, align 4
  br label %dec_label_pc_b384

dec_label_pc_b384:                                ; preds = %dec_label_pc_b558, %dec_label_pc_b374
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_b390 = call i32 @function_13380(i32 2, i32 1, i32 0)
  store i32 %v3_b390, i32* %r0.global-to-local, align 4
  %v7_b394 = icmp eq i32 %v3_b390, -1
  store i1 %v7_b394, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_b390, i32* @r7, align 4
  br i1 %v7_b394, label %dec_label_pc_b7e4, label %dec_label_pc_b3a0

dec_label_pc_b3a0:                                ; preds = %dec_label_pc_b384
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  %v2_b3a8 = call i32 @function_129d8(i32 %v3_b390, i32 3)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_b3b0 = or i32 %v2_b3a8, 2048
  store i32 %v1_b3b0, i32* @r2, align 4
  %v0_b3b4 = load i32, i32* @r7, align 4
  store i32 %v0_b3b4, i32* %r0.global-to-local, align 4
  %v2_b3b8 = call i32 @function_129d8(i32 %v0_b3b4, i32 4)
  store i32 %v2_b3b8, i32* %r0.global-to-local, align 4
  %v3_b3bc = load i32, i32* %stack_var_-40, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_b3cc = mul i32 %v3_b3bc, 24
  store i32 %v5_b3cc, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  store i32 2, i32* %stack_var_-60, align 4
  %v2_b3dc = add i32 %v5_b3cc, %arg2
  store i32 %v2_b3dc, i32* %r2.global-to-local, align 4
  %v1_b3e0 = add i32 %v2_b3dc, 20
  %v2_b3e0 = inttoptr i32 %v1_b3e0 to i8*
  %v3_b3e0 = load i8, i8* %v2_b3e0, align 1
  %v4_b3e0 = zext i8 %v3_b3e0 to i32
  store i32 %v4_b3e0, i32* %r3.global-to-local, align 4
  %v2_b3e4 = icmp ugt i8 %v3_b3e0, 30
  %v7_b3e4 = icmp eq i8 %v3_b3e0, 31
  store i1 %v7_b3e4, i1* %cpsr_z.global-to-local, align 1
  %v2_b3e8 = xor i1 %v7_b3e4, true
  %v3_b3e8 = and i1 %v2_b3e4, %v2_b3e8
  %v5_b3e8 = add i32 %v2_b3dc, 16
  %v6_b3e8 = inttoptr i32 %v5_b3e8 to i32*
  %v7_b3e8 = load i32, i32* %v6_b3e8, align 4
  br i1 %v3_b3e8, label %dec_label_pc_b454, label %dec_label_pc_b3f4

dec_label_pc_b3f4:                                ; preds = %dec_label_pc_b3a0
  store i32 %v7_b3e8, i32* @r4, align 4
  %v0_b3f8 = call i32 @function_e7cc()
  store i32 %v0_b3f8, i32* %r0.global-to-local, align 4
  %v3_b3fc = load i32, i32* %stack_var_-40, align 4
  store i32 %arg2, i32* %lr.global-to-local, align 4
  %v5_b408 = mul i32 %v3_b3fc, 24
  %v0_b40c = load i32, i32* @r4, align 4
  %v2_b410 = add i32 %v5_b408, %arg2
  store i32 %v2_b410, i32* %r1.global-to-local, align 4
  %v1_b414 = and i32 %v0_b40c, 65280
  store i32 %v1_b414, i32* %r3.global-to-local, align 4
  %v1_b40c = udiv i32 %v0_b40c, 256
  %v3_b418 = and i32 %v1_b40c, 65280
  store i32 %v3_b418, i32* %r2.global-to-local, align 4
  %v3_b41c = mul i32 %v0_b40c, 16777216
  store i32 %v3_b41c, i32* %ip.global-to-local, align 4
  %v1_b420 = add i32 %v2_b410, 20
  %v2_b420 = inttoptr i32 %v1_b420 to i8*
  %v3_b420 = load i8, i8* %v2_b420, align 1
  %v4_b420 = zext i8 %v3_b420 to i32
  store i32 %v4_b420, i32* %lr.global-to-local, align 4
  %v4_b424 = mul nuw nsw i32 %v1_b414, 256
  %v5_b424 = or i32 %v4_b424, %v3_b41c
  store i32 %v5_b424, i32* %ip.global-to-local, align 4
  %v2_b42c = call i32 @llvm.bswap.i32(i32 %v0_b40c)
  %v7_b430 = lshr i32 %v0_b3f8, %v4_b420
  %v8_b430 = add i32 %v7_b430, %v2_b42c
  store i32 %v8_b430, i32* %r2.global-to-local, align 4
  %v3_b43c = mul i32 %v8_b430, 16777216
  %v1_b440 = and i32 %v8_b430, 65280
  store i32 %v1_b440, i32* %r0.global-to-local, align 4
  %v4_b444 = mul nuw nsw i32 %v1_b440, 256
  %v5_b444 = or i32 %v4_b444, %v3_b43c
  store i32 %v5_b444, i32* %r1.global-to-local, align 4
  %v2_b44c = call i32 @llvm.bswap.i32(i32 %v8_b430)
  br label %dec_label_pc_b454

dec_label_pc_b454:                                ; preds = %dec_label_pc_b3a0, %dec_label_pc_b3f4
  %storemerge25 = phi i32 [ %v2_b44c, %dec_label_pc_b3f4 ], [ %v7_b3e8, %dec_label_pc_b3a0 ]
  store i32 %v3_b30c, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i1 %v3_b460, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_b460, label %dec_label_pc_b574, label %dec_label_pc_b468

dec_label_pc_b468:                                ; preds = %dec_label_pc_b454
  store i32 %v8_b358, i32* %ip.global-to-local, align 4
  store i32 %v5_b474, i32* %r3.global-to-local, align 4
  store i32 %v3_b47893, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_b484

dec_label_pc_b484:                                ; preds = %dec_label_pc_b574, %dec_label_pc_b468
  %stack_var_-57.0 = phi i8 [ %v1_b57c, %dec_label_pc_b574 ], [ %v1_b47c, %dec_label_pc_b468 ]
  %storemerge = phi i8 [ %v1_b574, %dec_label_pc_b574 ], [ %v1_b480, %dec_label_pc_b468 ]
  store i32 %v2_b484, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v0_b48c = load i32, i32* @r7, align 4
  store i32 %v0_b48c, i32* %r0.global-to-local, align 4
  %v4_b490 = call i32 @function_131dc(i32 %v0_b48c, %sockaddr* nonnull %v3_b490, i32 16)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_b498 = call i32 @function_12d6c(i32* null)
  store i32 %v2_b498, i32* %r0.global-to-local, align 4
  store i32 %v2_b498, i32* @r4, align 4
  %v9_b4f8 = icmp eq i32 %tmp32, %storemerge25
  %v4_b51c = zext i8 %storemerge to i32
  %v4_b520 = zext i8 %stack_var_-57.0 to i32
  %. = zext i1 %v9_b4f8 to i32
  %v9_b50c = icmp eq i1 %v9_b4f8, false
  %v4_b528 = mul nuw nsw i32 %v4_b520, 256
  %v5_b528 = or i32 %v4_b528, %v4_b51c
  %v9_b52c = icmp eq i32 %v5_b528, %v5_b524
  br label %dec_label_pc_b4b4

dec_label_pc_b4a4:                                ; preds = %.thread23, %dec_label_pc_b514, %dec_label_pc_b544, %bb75
  %v2_b4a4 = call i32 @function_12d6c(i32* null)
  %v0_b4a8 = load i32, i32* @r4, align 4
  %v2_b4a8 = sub i32 %v2_b4a4, %v0_b4a8
  store i32 %v2_b4a8, i32* %r0.global-to-local, align 4
  %v7_b4ac = icmp eq i32 %v2_b4a8, 10
  store i1 %v7_b4ac, i1* %cpsr_z.global-to-local, align 1
  %v8_b4b0 = icmp sgt i32 %v2_b4a8, 10
  br i1 %v8_b4b0, label %dec_label_pc_b558, label %dec_label_pc_b4b4

dec_label_pc_b4b4:                                ; preds = %dec_label_pc_b4a4, %dec_label_pc_b484
  store i32 256, i32* %r2.global-to-local, align 4
  store i32 16, i32* %stack_var_-44, align 4
  store i32 %v2_b4c0, i32* %lr.global-to-local, align 4
  store i32 %v2_b4c4, i32* %ip.global-to-local, align 4
  store i32 %v2_b4c8, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 %v3_b308, i32* %r0.global-to-local, align 4
  %v7_b4dc = call i32 @function_132bc(i32 %v3_b308, i32* nonnull %stack_var_-332, i32 256, i32 16384, i32 %v2_b4c0, i32 %v2_b4c4)
  store i32 %v7_b4dc, i32* %r2.global-to-local, align 4
  %v7_b4e4 = icmp eq i32 %v7_b4dc, -1
  store i1 %v7_b4e4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v7_b4e4, label %dec_label_pc_b56c, label %dec_label_pc_b4f0

dec_label_pc_b4f0:                                ; preds = %dec_label_pc_b4b4
  store i32 %tmp32, i32* %r3.global-to-local, align 4
  store i32 %., i32* %r1.global-to-local, align 4
  %v7_b504 = icmp eq i32 %v7_b4dc, 40
  store i1 %v7_b504, i1* %cpsr_z.global-to-local, align 1
  %tmp99 = icmp ult i32 %v7_b4dc, 41
  br i1 %tmp99, label %.thread23, label %bb75

.thread23:                                        ; preds = %dec_label_pc_b4f0
  store i32 0, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_b4a4

bb75:                                             ; preds = %dec_label_pc_b4f0
  store i1 %v9_b50c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b50c, label %dec_label_pc_b4a4, label %dec_label_pc_b514

dec_label_pc_b514:                                ; preds = %bb75
  store i32 %v4_b518, i32* %r1.global-to-local, align 4
  store i32 %v4_b51c, i32* %ip.global-to-local, align 4
  store i32 %v4_b520, i32* %r2.global-to-local, align 4
  store i32 %v5_b524, i32* %r3.global-to-local, align 4
  store i32 %v5_b528, i32* @r5, align 4
  store i1 %v9_b52c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b52c, label %dec_label_pc_b534, label %dec_label_pc_b4a4

dec_label_pc_b534:                                ; preds = %dec_label_pc_b514
  store i32 %v4_b534, i32* %r2.global-to-local, align 4
  store i32 %v1_b538, i32* %r3.global-to-local, align 4
  store i1 %v2_b53c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b53c, label %dec_label_pc_b588, label %dec_label_pc_b544

dec_label_pc_b544:                                ; preds = %dec_label_pc_b534
  store i1 %v2_b544, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b544, label %dec_label_pc_b4a4, label %dec_label_pc_b54c

dec_label_pc_b54c:                                ; preds = %dec_label_pc_b544
  %v0_b54c = load i32, i32* @r7, align 4
  store i32 %v0_b54c, i32* %r0.global-to-local, align 4
  %v1_b550 = call i32 @function_12a9c(i32 %v0_b54c)
  store i32 %v1_b550, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b374

dec_label_pc_b558:                                ; preds = %dec_label_pc_b4a4
  %v0_b558 = load i32, i32* @r7, align 4
  store i32 %v0_b558, i32* %r0.global-to-local, align 4
  %v1_b55c = call i32 @function_12a9c(i32 %v0_b558)
  store i32 %v1_b55c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b384

dec_label_pc_b564:                                ; preds = %dec_label_pc_b320
  store i32 %v3_b308, i32* %r0.global-to-local, align 4
  %v1_b568 = call i32 @function_12a9c(i32 %v3_b308)
  store i32 %v1_b568, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b56c

dec_label_pc_b56c:                                ; preds = %dec_label_pc_b4b4, %dec_label_pc_b138, %dec_label_pc_b564
  %v29_b570 = phi i32 [ %v3_b308, %dec_label_pc_b138 ], [ %v1_b568, %dec_label_pc_b564 ], [ 0, %dec_label_pc_b4b4 ]
  ret i32 %v29_b570

dec_label_pc_b574:                                ; preds = %dec_label_pc_b454
  %v0_b574 = call i32 @function_e7cc()
  %v1_b574 = trunc i32 %v0_b574 to i8
  store i32 %v0_b574, i32* %r0.global-to-local, align 4
  %v4_b578 = sdiv i32 %v0_b574, 256
  store i32 %v4_b578, i32* %r3.global-to-local, align 4
  %v1_b57c = trunc i32 %v4_b578 to i8
  br label %dec_label_pc_b484

dec_label_pc_b588:                                ; preds = %dec_label_pc_b534
  %v3_b588 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_b588, i32* @r4, align 4
  store i32 %v2_b158, i32* %r2.global-to-local, align 4
  %v3_b590 = mul i32 %v3_b588, 16
  store i32 %v3_b590, i32* %ip.global-to-local, align 4
  %v3_b594 = add i32 %v3_b590, %v2_b158
  %v4_b594 = inttoptr i32 %v3_b594 to i32*
  store i32 %storemerge25, i32* %v4_b594, align 4
  %v0_b598 = load i32, i32* @r6, align 4
  %v1_b598 = add i32 %v0_b598, 4
  %v2_b598 = inttoptr i32 %v1_b598 to i32*
  %v3_b598 = load i32, i32* %v2_b598, align 4
  store i32 %v3_b598, i32* %r0.global-to-local, align 4
  %v1_b5a0 = and i32 %v3_b598, 65280
  store i32 %v1_b5a0, i32* %r1.global-to-local, align 4
  store i32 %v2_b158, i32* %lr.global-to-local, align 4
  %v3_b5a8 = mul i32 %v3_b598, 16777216
  %v4_b5b0 = mul nuw nsw i32 %v1_b5a0, 256
  %v5_b5b0 = or i32 %v4_b5b0, %v3_b5a8
  store i32 %v5_b5b0, i32* %r2.global-to-local, align 4
  %v1_b5b8 = load i32, i32* %ip.global-to-local, align 4
  %v2_b5b8 = add i32 %v1_b5b8, %v2_b158
  store i32 %v2_b5b8, i32* %ip.global-to-local, align 4
  %v2_b5bc = call i32 @llvm.bswap.i32(i32 %v3_b598)
  store i32 %v2_b5bc, i32* %r3.global-to-local, align 4
  %v2_b5c0 = add i32 %v2_b5b8, 4
  %v3_b5c0 = inttoptr i32 %v2_b5c0 to i32*
  store i32 %v2_b5bc, i32* %v3_b5c0, align 4
  %v0_b5c4 = load i32, i32* @r6, align 4
  %v1_b5c4 = add i32 %v0_b5c4, 8
  %v2_b5c4 = inttoptr i32 %v1_b5c4 to i32*
  %v3_b5c4 = load i32, i32* %v2_b5c4, align 4
  store i32 %v3_b5c4, i32* %r0.global-to-local, align 4
  %v1_b5cc = and i32 %v3_b5c4, 65280
  store i32 %v1_b5cc, i32* %r1.global-to-local, align 4
  %v3_b5d0 = mul i32 %v3_b5c4, 16777216
  %v4_b5d8 = mul nuw nsw i32 %v1_b5cc, 256
  %v5_b5d8 = or i32 %v4_b5d8, %v3_b5d0
  store i32 %v5_b5d8, i32* %r2.global-to-local, align 4
  %v2_b5e0 = call i32 @llvm.bswap.i32(i32 %v3_b5c4)
  store i32 %v2_b5e0, i32* %r3.global-to-local, align 4
  %v1_b5e4 = load i32, i32* %ip.global-to-local, align 4
  %v2_b5e4 = add i32 %v1_b5e4, 8
  %v3_b5e4 = inttoptr i32 %v2_b5e4 to i32*
  store i32 %v2_b5e0, i32* %v3_b5e4, align 4
  %v0_b5e8 = load i32, i32* @r6, align 4
  %v1_b5e8 = inttoptr i32 %v0_b5e8 to i32*
  %v2_b5e8 = load i32, i32* %v1_b5e8, align 4
  %v3_b5ec = udiv i32 %v2_b5e8, 65536
  store i32 %v3_b5ec, i32* %r2.global-to-local, align 4
  %v3_b5f03 = udiv i32 %v2_b5e8, 16777216
  store i32 %v3_b5f03, i32* %r1.global-to-local, align 4
  %v0_b5f4 = load i32, i32* @r5, align 4
  %v3_b5f4 = sdiv i32 %v0_b5f4, 256
  store i32 %v3_b5f4, i32* %r3.global-to-local, align 4
  %v1_b5f8 = trunc i32 %v3_b5f4 to i8
  %v2_b5f8 = load i32, i32* %ip.global-to-local, align 4
  %v3_b5f8 = add i32 %v2_b5f8, 15
  %v4_b5f8 = inttoptr i32 %v3_b5f8 to i8*
  store i8 %v1_b5f8, i8* %v4_b5f8, align 1
  %v0_b5fc = load i32, i32* %r1.global-to-local, align 4
  %v1_b5fc = trunc i32 %v0_b5fc to i8
  %v2_b5fc = load i32, i32* %ip.global-to-local, align 4
  %v3_b5fc = add i32 %v2_b5fc, 13
  %v4_b5fc = inttoptr i32 %v3_b5fc to i8*
  store i8 %v1_b5fc, i8* %v4_b5fc, align 1
  %v0_b600 = load i32, i32* %r2.global-to-local, align 4
  %v1_b600 = trunc i32 %v0_b600 to i8
  %v2_b600 = load i32, i32* %ip.global-to-local, align 4
  %v3_b600 = add i32 %v2_b600, 12
  %v4_b600 = inttoptr i32 %v3_b600 to i8*
  store i8 %v1_b600, i8* %v4_b600, align 1
  %v0_b604 = load i32, i32* @r5, align 4
  %v1_b604 = trunc i32 %v0_b604 to i8
  %v2_b604 = load i32, i32* %ip.global-to-local, align 4
  %v3_b604 = add i32 %v2_b604, 14
  %v4_b604 = inttoptr i32 %v3_b604 to i8*
  store i8 %v1_b604, i8* %v4_b604, align 1
  %v0_b608 = load i32, i32* @sl, align 4
  store i32 %v0_b608, i32* %r0.global-to-local, align 4
  %v1_b60c = call i32 @function_13518(i32 %v0_b608)
  store i32 %v1_b60c, i32* %r0.global-to-local, align 4
  store i32 %v2_b168, i32* %r1.global-to-local, align 4
  %v3_b614 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_b614, i32* %r2.global-to-local, align 4
  %v2_b618 = load i32, i32* @r4, align 4
  %v5_b618 = mul i32 %v2_b618, 4
  %v6_b618 = add i32 %v5_b618, %v2_b168
  %v7_b618 = inttoptr i32 %v6_b618 to i32*
  store i32 %v1_b60c, i32* %v7_b618, align 4
  %v0_b61c = load i32, i32* %r1.global-to-local, align 4
  %v1_b61c = load i32, i32* %r2.global-to-local, align 4
  %v4_b61c = mul i32 %v1_b61c, 4
  %v5_b61c = add i32 %v4_b61c, %v0_b61c
  %v6_b61c = inttoptr i32 %v5_b61c to i32*
  %v7_b61c = load i32, i32* %v6_b61c, align 4
  store i32 %v7_b61c, i32* @r4, align 4
  %v1_b620 = inttoptr i32 %v7_b61c to i8*
  %v2_b620 = load i8, i8* %v1_b620, align 1
  %tmp100 = urem i8 %v2_b620, 16
  %v1_b624 = zext i8 %tmp100 to i32
  %v1_b628 = or i32 %v1_b624, 64
  store i32 %v1_b628, i32* %r3.global-to-local, align 4
  %v1_b62c = trunc i32 %v1_b628 to i8
  store i8 %v1_b62c, i8* %v1_b620, align 1
  %v0_b630 = load i32, i32* @r4, align 4
  %v1_b630 = inttoptr i32 %v0_b630 to i8*
  %v2_b630 = load i8, i8* %v1_b630, align 1
  store i32 %v3_b350, i32* %ip.global-to-local, align 4
  %v1_b63c = and i8 %v2_b630, -16
  %v1_b644 = or i8 %v1_b63c, 5
  store i32 %v5_b648, i32* %r0.global-to-local, align 4
  %v0_b64c = load i32, i32* @sl, align 4
  %v3_b64c = mul i32 %v0_b64c, 65536
  store i32 %v3_b64c, i32* %r2.global-to-local, align 4
  store i32 %v1_b1e8, i32* %lr.global-to-local, align 4
  store i8 %v1_b644, i8* %v1_b630, align 1
  store i32 %v4_b658, i32* %r1.global-to-local, align 4
  %v0_b65c = load i32, i32* %r2.global-to-local, align 4
  %v3_b65c = udiv i32 %v0_b65c, 65536
  %v1_b660 = urem i32 %v3_b65c, 256
  store i32 %v1_b660, i32* %r3.global-to-local, align 4
  %v3_b664 = udiv i32 %v0_b65c, 16777216
  store i32 %v3_b664, i32* %r2.global-to-local, align 4
  %v2_b668 = load i32, i32* @r4, align 4
  %v3_b668 = add i32 %v2_b668, 1
  %v4_b668 = inttoptr i32 %v3_b668 to i8*
  store i8 %v1_b668, i8* %v4_b668, align 1
  %v0_b66c = load i32, i32* %r2.global-to-local, align 4
  %v1_b66c = load i32, i32* %r3.global-to-local, align 4
  %v4_b66c = mul i32 %v1_b66c, 256
  %v5_b66c = or i32 %v4_b66c, %v0_b66c
  store i32 %v5_b66c, i32* %r2.global-to-local, align 4
  %v1_b670 = trunc i32 %v0_b66c to i8
  %v2_b670 = load i32, i32* @r4, align 4
  %v3_b670 = add i32 %v2_b670, 2
  %v4_b670 = inttoptr i32 %v3_b670 to i8*
  store i8 %v1_b670, i8* %v4_b670, align 1
  %v0_b674 = load i32, i32* %lr.global-to-local, align 4
  %v2_b674 = icmp eq i32 %v0_b674, 0
  store i1 %v2_b674, i1* %cpsr_z.global-to-local, align 1
  %v0_b678 = load i32, i32* %r2.global-to-local, align 4
  %v3_b678 = sdiv i32 %v0_b678, 256
  store i32 %v3_b678, i32* %r3.global-to-local, align 4
  store i32 %v4_b67c, i32* %r2.global-to-local, align 4
  %v1_b680 = trunc i32 %v3_b678 to i8
  %v2_b680 = load i32, i32* @r4, align 4
  %v3_b680 = add i32 %v2_b680, 3
  %v4_b680 = inttoptr i32 %v3_b680 to i8*
  store i8 %v1_b680, i8* %v4_b680, align 1
  %v0_b684 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b684, label %bb77, label %bb76

bb76:                                             ; preds = %dec_label_pc_b588
  store i32 64, i32* %r3.global-to-local, align 4
  br label %bb77

bb77:                                             ; preds = %dec_label_pc_b588, %bb76
  %v0_b688 = load i32, i32* %r2.global-to-local, align 4
  %v1_b688 = trunc i32 %v0_b688 to i8
  %v2_b688 = load i32, i32* @r4, align 4
  %v3_b688 = add i32 %v2_b688, 8
  %v4_b688 = inttoptr i32 %v3_b688 to i8*
  store i8 %v1_b688, i8* %v4_b688, align 1
  %v0_b68c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b68c, label %.thread6, label %bb78

bb78:                                             ; preds = %bb77
  %v1_b68c = load i32, i32* %r3.global-to-local, align 4
  %v2_b68c = trunc i32 %v1_b68c to i8
  %v3_b68c = load i32, i32* @r4, align 4
  %v4_b68c = add i32 %v3_b68c, 6
  %v5_b68c = inttoptr i32 %v4_b68c to i8*
  store i8 %v2_b68c, i8* %v5_b68c, align 1
  %v0_b690.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b690.pr, label %.thread6, label %bb79

bb79:                                             ; preds = %bb78
  store i32 0, i32* %r2.global-to-local, align 4
  br label %.thread6

.thread6:                                         ; preds = %bb77, %bb78, %bb79
  store i32 6, i32* %r3.global-to-local, align 4
  %v2_b698 = load i32, i32* @r4, align 4
  %v3_b698 = add i32 %v2_b698, 9
  %v4_b698 = inttoptr i32 %v3_b698 to i8*
  store i8 6, i8* %v4_b698, align 1
  %v0_b69c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b69c, label %bb81, label %bb80

bb80:                                             ; preds = %.thread6
  %v1_b69c = load i32, i32* %r2.global-to-local, align 4
  %v2_b69c = trunc i32 %v1_b69c to i8
  %v3_b69c = load i32, i32* @r4, align 4
  %v4_b69c = add i32 %v3_b69c, 7
  %v5_b69c = inttoptr i32 %v4_b69c to i8*
  store i8 %v2_b69c, i8* %v5_b69c, align 1
  br label %bb81

bb81:                                             ; preds = %.thread6, %bb80
  %v2_b6a4 = load i32, i32* @global_var_1da7c.49, align 4
  store i32 %v2_b6a4, i32* %r3.global-to-local, align 4
  %v0_b6a8 = load i32, i32* %r0.global-to-local, align 4
  %v3_b6a8 = sdiv i32 %v0_b6a8, 256
  store i32 %v3_b6a8, i32* %ip.global-to-local, align 4
  %v1_b6ac = load i32, i32* @r4, align 4
  %v2_b6ac = add i32 %v1_b6ac, 12
  %v3_b6ac = inttoptr i32 %v2_b6ac to i32*
  store i32 %v2_b6a4, i32* %v3_b6ac, align 4
  %v0_b6b0 = load i32, i32* %ip.global-to-local, align 4
  %v1_b6b0 = trunc i32 %v0_b6b0 to i8
  %v2_b6b0 = load i32, i32* @r4, align 4
  %v3_b6b0 = add i32 %v2_b6b0, 5
  %v4_b6b0 = inttoptr i32 %v3_b6b0 to i8*
  store i8 %v1_b6b0, i8* %v4_b6b0, align 1
  %v3_b6b4 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_b6b4, i32* %r2.global-to-local, align 4
  store i32 %v2_b158, i32* %ip.global-to-local, align 4
  %v4_b6bc = mul i32 %v3_b6b4, 16
  %v5_b6bc = add i32 %v4_b6bc, %v2_b158
  %v6_b6bc = inttoptr i32 %v5_b6bc to i32*
  %v7_b6bc = load i32, i32* %v6_b6bc, align 4
  store i32 %v7_b6bc, i32* %r3.global-to-local, align 4
  %v0_b6c0 = load i32, i32* %r0.global-to-local, align 4
  %v1_b6c0 = trunc i32 %v0_b6c0 to i8
  %v2_b6c0 = load i32, i32* @r4, align 4
  %v3_b6c0 = add i32 %v2_b6c0, 4
  %v4_b6c0 = inttoptr i32 %v3_b6c0 to i8*
  store i8 %v1_b6c0, i8* %v4_b6c0, align 1
  %v0_b6c4 = load i32, i32* %r3.global-to-local, align 4
  %v1_b6c4 = load i32, i32* @r4, align 4
  %v2_b6c4 = add i32 %v1_b6c4, 16
  %v3_b6c4 = inttoptr i32 %v2_b6c4 to i32*
  store i32 %v0_b6c4, i32* %v3_b6c4, align 4
  %v0_b6c8 = load i32, i32* %r2.global-to-local, align 4
  %v3_b6c8 = mul i32 %v0_b6c8, 16
  %v1_b6cc = load i32, i32* %ip.global-to-local, align 4
  %v2_b6cc = add i32 %v1_b6cc, %v3_b6c8
  store i32 %v2_b6cc, i32* %r2.global-to-local, align 4
  %v1_b6d0 = add i32 %v2_b6cc, 13
  %v2_b6d0 = inttoptr i32 %v1_b6d0 to i8*
  %v3_b6d0 = load i8, i8* %v2_b6d0, align 1
  %v4_b6d0 = zext i8 %v3_b6d0 to i32
  store i32 %v4_b6d0, i32* %r1.global-to-local, align 4
  %v1_b6d4 = add i32 %v2_b6cc, 12
  %v2_b6d4 = inttoptr i32 %v1_b6d4 to i8*
  %v3_b6d4 = load i8, i8* %v2_b6d4, align 1
  %v4_b6d4 = zext i8 %v3_b6d4 to i32
  %v4_b6d8 = mul nuw nsw i32 %v4_b6d0, 256
  %v5_b6d8 = or i32 %v4_b6d4, %v4_b6d8
  store i32 %v5_b6d8, i32* %r3.global-to-local, align 4
  %v2_b6dc = load i32, i32* @r4, align 4
  %v3_b6dc = add i32 %v2_b6dc, 20
  %v4_b6dc = inttoptr i32 %v3_b6dc to i8*
  store i8 %v3_b6d4, i8* %v4_b6dc, align 1
  %v0_b6e0 = load i32, i32* @r4, align 4
  %v1_b6e0 = add i32 %v0_b6e0, 20
  store i32 %v1_b6e0, i32* @r6, align 4
  %v0_b6e4 = load i32, i32* %r3.global-to-local, align 4
  %v3_b6e4 = sdiv i32 %v0_b6e4, 256
  store i32 %v3_b6e4, i32* %r3.global-to-local, align 4
  %v1_b6e8 = trunc i32 %v3_b6e4 to i8
  %v3_b6e8 = add i32 %v0_b6e0, 21
  %v4_b6e8 = inttoptr i32 %v3_b6e8 to i8*
  store i8 %v1_b6e8, i8* %v4_b6e8, align 1
  %v0_b6ec = load i32, i32* @r6, align 4
  %v1_b6ec = add i32 %v0_b6ec, 13
  %v2_b6ec = inttoptr i32 %v1_b6ec to i8*
  %v3_b6ec = load i8, i8* %v2_b6ec, align 1
  %v4_b6ec = zext i8 %v3_b6ec to i32
  store i32 %v4_b6ec, i32* %r3.global-to-local, align 4
  %v0_b6f0 = load i32, i32* %r2.global-to-local, align 4
  %v1_b6f0 = add i32 %v0_b6f0, 8
  %v2_b6f0 = inttoptr i32 %v1_b6f0 to i32*
  %v3_b6f0 = load i32, i32* %v2_b6f0, align 4
  store i32 %v3_b6f0, i32* %r1.global-to-local, align 4
  %v1_b6f4 = or i32 %v4_b6ec, 1
  store i32 %v1_b6f4, i32* %r3.global-to-local, align 4
  %v1_b6f8 = add i32 %v0_b6f0, 15
  %v2_b6f8 = inttoptr i32 %v1_b6f8 to i8*
  %v3_b6f8 = load i8, i8* %v2_b6f8, align 1
  %v4_b6f8 = zext i8 %v3_b6f8 to i32
  store i32 %v4_b6f8, i32* %ip.global-to-local, align 4
  %v1_b6fc = add i32 %v0_b6f0, 14
  %v2_b6fc = inttoptr i32 %v1_b6fc to i8*
  %v3_b6fc = load i8, i8* %v2_b6fc, align 1
  %v4_b6fc = zext i8 %v3_b6fc to i32
  store i32 %v4_b6fc, i32* %r0.global-to-local, align 4
  %v2_b700 = add i32 %v0_b6ec, 4
  %v3_b700 = inttoptr i32 %v2_b700 to i32*
  store i32 %v3_b6f0, i32* %v3_b700, align 4
  %v0_b704 = load i32, i32* %r2.global-to-local, align 4
  %v1_b704 = add i32 %v0_b704, 4
  %v2_b704 = inttoptr i32 %v1_b704 to i32*
  %v3_b704 = load i32, i32* %v2_b704, align 4
  store i32 %v3_b704, i32* %lr.global-to-local, align 4
  %v0_b708 = load i32, i32* %r3.global-to-local, align 4
  %v1_b708 = trunc i32 %v0_b708 to i8
  %v2_b708 = load i32, i32* @r6, align 4
  %v3_b708 = add i32 %v2_b708, 13
  %v4_b708 = inttoptr i32 %v3_b708 to i8*
  store i8 %v1_b708, i8* %v4_b708, align 1
  %v0_b70c = load i32, i32* @r6, align 4
  %v1_b70c = add i32 %v0_b70c, 12
  %v2_b70c = inttoptr i32 %v1_b70c to i8*
  %v3_b70c = load i8, i8* %v2_b70c, align 1
  %v4_b70c = zext i8 %v3_b70c to i32
  store i32 %v4_b70c, i32* %r2.global-to-local, align 4
  %v1_b710 = add i32 %v0_b70c, 13
  %v2_b710 = inttoptr i32 %v1_b710 to i8*
  %v3_b710 = load i8, i8* %v2_b710, align 1
  %v4_b710 = zext i8 %v3_b710 to i32
  %v0_b714 = load i32, i32* %r0.global-to-local, align 4
  %v1_b714 = load i32, i32* %ip.global-to-local, align 4
  %v4_b714 = mul i32 %v1_b714, 256
  %v5_b714 = or i32 %v4_b714, %v0_b714
  store i32 %v5_b714, i32* %r0.global-to-local, align 4
  %tmp101 = urem i8 %v3_b70c, 16
  %v1_b718 = zext i8 %tmp101 to i32
  %v3_b71c = sdiv i32 %v5_b714, 256
  store i32 %v3_b71c, i32* %r1.global-to-local, align 4
  %v1_b720 = or i32 %v1_b718, 128
  store i32 %v1_b720, i32* %r2.global-to-local, align 4
  %v1_b724 = or i32 %v4_b710, 16
  store i32 %v1_b724, i32* %r3.global-to-local, align 4
  %v1_b728 = trunc i32 %v3_b71c to i8
  %v3_b728 = add i32 %v0_b70c, 3
  %v4_b728 = inttoptr i32 %v3_b728 to i8*
  store i8 %v1_b728, i8* %v4_b728, align 1
  %v0_b72c = load i32, i32* %lr.global-to-local, align 4
  %v1_b72c = load i32, i32* @r6, align 4
  %v2_b72c = add i32 %v1_b72c, 8
  %v3_b72c = inttoptr i32 %v2_b72c to i32*
  store i32 %v0_b72c, i32* %v3_b72c, align 4
  %v0_b730 = load i32, i32* %r2.global-to-local, align 4
  %v1_b730 = trunc i32 %v0_b730 to i8
  %v2_b730 = load i32, i32* @r6, align 4
  %v3_b730 = add i32 %v2_b730, 12
  %v4_b730 = inttoptr i32 %v3_b730 to i8*
  store i8 %v1_b730, i8* %v4_b730, align 1
  %v0_b734 = load i32, i32* %r3.global-to-local, align 4
  %v1_b734 = trunc i32 %v0_b734 to i8
  %v2_b734 = load i32, i32* @r6, align 4
  %v3_b734 = add i32 %v2_b734, 13
  %v4_b734 = inttoptr i32 %v3_b734 to i8*
  store i8 %v1_b734, i8* %v4_b734, align 1
  %v0_b738 = load i32, i32* %r0.global-to-local, align 4
  %v1_b738 = trunc i32 %v0_b738 to i8
  %v2_b738 = load i32, i32* @r6, align 4
  %v3_b738 = add i32 %v2_b738, 2
  %v4_b738 = inttoptr i32 %v3_b738 to i8*
  store i8 %v1_b738, i8* %v4_b738, align 1
  %v0_b73c = call i32 @function_e7cc()
  %v1_b73c = trunc i32 %v0_b73c to i8
  store i32 %v0_b73c, i32* %r0.global-to-local, align 4
  store i32 %v1_b220, i32* %lr.global-to-local, align 4
  %v0_b744 = load i32, i32* @r6, align 4
  %v1_b744 = add i32 %v0_b744, 13
  %v2_b744 = inttoptr i32 %v1_b744 to i8*
  %v3_b744 = load i8, i8* %v2_b744, align 1
  %v4_b744 = zext i8 %v3_b744 to i32
  store i32 %v1_b748, i32* %r2.global-to-local, align 4
  %v1_b74c = and i32 %v4_b744, 223
  %v5_b750 = or i32 %v1_b74c, %v4_b750
  store i32 %v5_b750, i32* %r3.global-to-local, align 4
  %v1_b754 = trunc i32 %v5_b750 to i8
  store i8 %v1_b754, i8* %v2_b744, align 1
  store i32 %v1_b240, i32* %r1.global-to-local, align 4
  %v0_b75c = load i32, i32* @r6, align 4
  %v1_b75c = add i32 %v0_b75c, 13
  %v2_b75c = inttoptr i32 %v1_b75c to i8*
  %v3_b75c = load i8, i8* %v2_b75c, align 1
  %v4_b75c = zext i8 %v3_b75c to i32
  store i32 %v1_b760, i32* %r3.global-to-local, align 4
  %v1_b764 = and i32 %v4_b75c, 239
  %v5_b768 = or i32 %v1_b764, %v4_b768
  store i32 %v5_b768, i32* %r2.global-to-local, align 4
  %v1_b76c = trunc i32 %v5_b768 to i8
  store i8 %v1_b76c, i8* %v2_b75c, align 1
  store i32 %v1_b260, i32* %ip.global-to-local, align 4
  %v0_b774 = load i32, i32* @r6, align 4
  %v1_b774 = add i32 %v0_b774, 13
  %v2_b774 = inttoptr i32 %v1_b774 to i8*
  %v3_b774 = load i8, i8* %v2_b774, align 1
  %v4_b774 = zext i8 %v3_b774 to i32
  store i32 %v1_b778, i32* %r2.global-to-local, align 4
  %v1_b77c = and i32 %v4_b774, 247
  %v5_b780 = or i32 %v1_b77c, %v4_b780
  store i32 %v5_b780, i32* %r3.global-to-local, align 4
  %v1_b784 = trunc i32 %v5_b780 to i8
  store i8 %v1_b784, i8* %v2_b774, align 1
  %v0_b78c = load i32, i32* @r6, align 4
  %v1_b78c = add i32 %v0_b78c, 13
  %v2_b78c = inttoptr i32 %v1_b78c to i8*
  %v3_b78c = load i8, i8* %v2_b78c, align 1
  %v4_b78c = zext i8 %v3_b78c to i32
  store i32 %v1_b790, i32* %r3.global-to-local, align 4
  %v1_b794 = and i32 %v4_b78c, 251
  %v5_b798 = or i32 %v1_b794, %v4_b798
  store i32 %v5_b798, i32* %r2.global-to-local, align 4
  %v1_b79c = trunc i32 %v5_b798 to i8
  store i8 %v1_b79c, i8* %v2_b78c, align 1
  store i32 %v1_b2a0, i32* %r1.global-to-local, align 4
  %v0_b7a4 = load i32, i32* @r6, align 4
  %v1_b7a4 = add i32 %v0_b7a4, 13
  %v2_b7a4 = inttoptr i32 %v1_b7a4 to i8*
  %v3_b7a4 = load i8, i8* %v2_b7a4, align 1
  %v4_b7a4 = zext i8 %v3_b7a4 to i32
  store i32 %v1_b7a8, i32* %r2.global-to-local, align 4
  %v1_b7ac = and i32 %v4_b7a4, 253
  %v4_b7b0 = or i32 %v1_b7ac, %v3_b7b0
  store i32 %v4_b7b0, i32* %r3.global-to-local, align 4
  %v1_b7b4 = trunc i32 %v4_b7b0 to i8
  store i8 %v1_b7b4, i8* %v2_b7a4, align 1
  %v0_b7b8 = load i32, i32* @r6, align 4
  %v1_b7b8 = add i32 %v0_b7b8, 13
  %v2_b7b8 = inttoptr i32 %v1_b7b8 to i8*
  %v3_b7b8 = load i8, i8* %v2_b7b8, align 1
  %v4_b7b8 = zext i8 %v3_b7b8 to i32
  %v0_b7bc = load i32, i32* @r8, align 4
  %v1_b7bc = urem i32 %v0_b7bc, 2
  %v1_b7c0 = and i32 %v4_b7b8, 254
  store i32 %v1_b7c0, i32* %r2.global-to-local, align 4
  %v4_b7c427 = udiv i32 %v0_b73c, 256
  %v2_b7c8 = or i32 %v1_b7c0, %v1_b7bc
  store i32 %v2_b7c8, i32* %r3.global-to-local, align 4
  %v1_b7cc = trunc i32 %v4_b7c427 to i8
  %v3_b7cc = add i32 %v0_b7b8, 15
  %v4_b7cc = inttoptr i32 %v3_b7cc to i8*
  store i8 %v1_b7cc, i8* %v4_b7cc, align 1
  %v3_b7d0 = load i32, i32* @r6, align 4
  %v4_b7d0 = add i32 %v3_b7d0, 14
  %v5_b7d0 = inttoptr i32 %v4_b7d0 to i8*
  store i8 %v1_b73c, i8* %v5_b7d0, align 1
  %v0_b7d4 = load i32, i32* %r3.global-to-local, align 4
  %v1_b7d4 = trunc i32 %v0_b7d4 to i8
  %v2_b7d4 = load i32, i32* @r6, align 4
  %v3_b7d4 = add i32 %v2_b7d4, 13
  %v4_b7d4 = inttoptr i32 %v3_b7d4 to i8*
  store i8 %v1_b7d4, i8* %v4_b7d4, align 1
  %v0_b7d8 = load i32, i32* @r4, align 4
  %v1_b7d8 = add i32 %v0_b7d8, 40
  store i32 %v1_b7d8, i32* %r0.global-to-local, align 4
  %v0_b7dc = load i32, i32* @sb, align 4
  store i32 %v0_b7dc, i32* @r1, align 4
  %v1_b7e0 = inttoptr i32 %v1_b7d8 to i8*
  %v2_b7e0 = call i32 @function_e94c(i8* %v1_b7e0)
  store i32 %v2_b7e0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b7e4

dec_label_pc_b7e4:                                ; preds = %dec_label_pc_b384, %bb81
  %v3_b7e4 = load i32, i32* %stack_var_-40, align 4
  %v1_b7e8 = add i32 %v3_b7e4, 1
  store i32 %v1_b7e8, i32* %r3.global-to-local, align 4
  %v1_b7ec = load i32, i32* @fp, align 4
  %v9_b7ec = icmp eq i32 %v1_b7e8, %v1_b7ec
  store i1 %v9_b7ec, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_b7e8, i32* %stack_var_-40, align 4
  %v5_b7f4 = icmp slt i32 %v1_b7e8, %v1_b7ec
  br i1 %v5_b7f4, label %dec_label_pc_b374, label %dec_label_pc_b7f8

dec_label_pc_b7f8:                                ; preds = %dec_label_pc_b7e4, %.thread18
  %v0_b80012 = phi i32 [ %v0_b348, %.thread18 ], [ %v1_b7ec, %dec_label_pc_b7e4 ]
  %v0_b7f8 = load i32, i32* @sb, align 4
  %v1_b7f8 = add i32 %v0_b7f8, 40
  store i32 %v1_b7f8, i32* @sl, align 4
  %v1_b7fc = add i32 %v0_b7f8, 20
  store i32 %v1_b7fc, i32* @r7, align 4
  %v2_b84c = icmp eq i32 %v1_b2f8, 0
  %v6_b82c = inttoptr i32 %v2_b168 to i32*
  %v3_b834 = icmp eq i32 %v3_b350, 65535
  br label %dec_label_pc_b800

dec_label_pc_b800:                                ; preds = %dec_label_pc_b85c, %dec_label_pc_b7f8
  %v0_b800 = phi i32 [ %v1_b93c, %dec_label_pc_b85c ], [ %v0_b80012, %dec_label_pc_b7f8 ]
  %v2_b800 = icmp eq i32 %v0_b800, 0
  store i1 %v2_b800, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r1.global-to-local, align 4
  %tmp82 = icmp slt i32 %v0_b800, 1
  br label %dec_label_pc_b808

dec_label_pc_b808:                                ; preds = %dec_label_pc_b808, %dec_label_pc_b800
  br i1 %tmp82, label %dec_label_pc_b808, label %dec_label_pc_b80c

dec_label_pc_b80c:                                ; preds = %dec_label_pc_b808
  %v0_b80c = load i32, i32* @r7, align 4
  %tmp83 = mul i32 %v0_b80c, 256
  %v1_b814 = and i32 %tmp83, 65280
  %tmp84 = udiv i32 %v0_b80c, 256
  %v4_b818 = urem i32 %tmp84, 256
  %v5_b818 = or i32 %v4_b818, %v1_b814
  store i32 %v5_b818, i32* @r8, align 4
  store i32 %v2_b168, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 65536, i32* %r3.global-to-local, align 4
  store i32 %v3_b350, i32* %ip.global-to-local, align 4
  %v7_b82c = load i32, i32* %v6_b82c, align 4
  store i32 %v7_b82c, i32* @r4, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i1 %v3_b834, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-40, align 4
  store i32 0, i32* @r6, align 4
  %v1_b840 = add i32 %v7_b82c, 20
  store i32 %v1_b840, i32* @r5, align 4
  br i1 %v3_b834, label %dec_label_pc_b968, label %dec_label_pc_b848

dec_label_pc_b848:                                ; preds = %dec_label_pc_b948, %dec_label_pc_b80c
  %v0_b850 = phi i32 [ %v7_b954, %dec_label_pc_b948 ], [ %v7_b82c, %dec_label_pc_b80c ]
  store i32 %v1_b2f8, i32* %lr.global-to-local, align 4
  store i1 %v2_b84c, i1* %cpsr_z.global-to-local, align 1
  %v1_b850 = add i32 %v0_b850, 40
  store i32 %v1_b850, i32* %r0.global-to-local, align 4
  %v0_b854 = load i32, i32* @sb, align 4
  store i32 %v0_b854, i32* @r1, align 4
  br i1 %v2_b84c, label %dec_label_pc_b85c, label %dec_label_pc_b98c

dec_label_pc_b85c:                                ; preds = %dec_label_pc_b848, %dec_label_pc_b968, %dec_label_pc_b98c
  %v2_b85c = phi i32 [ %v0_b850, %dec_label_pc_b848 ], [ %v0_b980, %dec_label_pc_b968 ], [ %v2_b85c.pre, %dec_label_pc_b98c ]
  %v0_b85c = load i32, i32* @r6, align 4
  %v1_b85c = trunc i32 %v0_b85c to i8
  %v3_b85c = add i32 %v2_b85c, 10
  %v4_b85c = inttoptr i32 %v3_b85c to i8*
  store i8 %v1_b85c, i8* %v4_b85c, align 1
  %v0_b860 = load i32, i32* @r6, align 4
  %v1_b860 = trunc i32 %v0_b860 to i8
  %v2_b860 = load i32, i32* @r4, align 4
  %v3_b860 = add i32 %v2_b860, 11
  %v4_b860 = inttoptr i32 %v3_b860 to i8*
  store i8 %v1_b860, i8* %v4_b860, align 1
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_b868 = load i32, i32* @r4, align 4
  store i32 %v0_b868, i32* @r0, align 4
  %v2_b86c = call i32 @function_d0b8(i32 %v0_b868, i32 20)
  %v3_b86c = trunc i32 %v2_b86c to i8
  store i32 %v2_b86c, i32* %r0.global-to-local, align 4
  %v3_b870 = load i32, i32* %stack_var_-40, align 4
  store i32 %v2_b158, i32* %r2.global-to-local, align 4
  %v3_b878 = mul i32 %v3_b870, 16
  %v2_b87c = add i32 %v3_b878, %v2_b158
  store i32 %v2_b87c, i32* %r1.global-to-local, align 4
  %v1_b880 = add i32 %v2_b87c, 4
  %v2_b880 = inttoptr i32 %v1_b880 to i32*
  %v3_b880 = load i32, i32* %v2_b880, align 4
  %v3_b884 = mul i32 %v3_b880, 65536
  store i32 %v3_b884, i32* %ip.global-to-local, align 4
  %tmp85 = mul i32 %v3_b880, 256
  %v1_b88c = and i32 %tmp85, 65280
  %tmp86 = udiv i32 %v3_b880, 256
  %v4_b890 = urem i32 %tmp86, 256
  %v5_b890 = or i32 %v4_b890, %v1_b88c
  store i32 %v5_b890, i32* %r2.global-to-local, align 4
  %v1_b894 = add i32 %v3_b880, 1
  store i32 %v1_b894, i32* %r3.global-to-local, align 4
  store i32 %v1_b894, i32* %v2_b880, align 4
  %v0_b89c = load i32, i32* %r2.global-to-local, align 4
  %v1_b89c = load i32, i32* @r5, align 4
  %v2_b89c = add i32 %v1_b89c, 4
  %v3_b89c = inttoptr i32 %v2_b89c to i32*
  store i32 %v0_b89c, i32* %v3_b89c, align 4
  %v0_b8a0 = load i32, i32* %r1.global-to-local, align 4
  %v1_b8a0 = add i32 %v0_b8a0, 8
  %v2_b8a0 = inttoptr i32 %v1_b8a0 to i32*
  %v3_b8a0 = load i32, i32* %v2_b8a0, align 4
  %tmp87 = mul i32 %v3_b8a0, 256
  %v1_b8ac = and i32 %tmp87, 65280
  %tmp88 = udiv i32 %v3_b8a0, 256
  %v4_b8b0 = urem i32 %tmp88, 256
  %v5_b8b0 = or i32 %v4_b8b0, %v1_b8ac
  store i32 %v5_b8b0, i32* %r2.global-to-local, align 4
  %v4_b8b428 = udiv i32 %v2_b86c, 256
  %v1_b8b8 = trunc i32 %v4_b8b428 to i8
  %v2_b8b8 = load i32, i32* @r4, align 4
  %v3_b8b8 = add i32 %v2_b8b8, 11
  %v4_b8b8 = inttoptr i32 %v3_b8b8 to i8*
  store i8 %v1_b8b8, i8* %v4_b8b8, align 1
  %v3_b8bc = load i32, i32* @r4, align 4
  %v4_b8bc = add i32 %v3_b8bc, 10
  %v5_b8bc = inttoptr i32 %v4_b8bc to i8*
  store i8 %v3_b86c, i8* %v5_b8bc, align 1
  %v0_b8c0 = load i32, i32* %r2.global-to-local, align 4
  %v1_b8c0 = load i32, i32* @r5, align 4
  %v2_b8c0 = add i32 %v1_b8c0, 8
  %v3_b8c0 = inttoptr i32 %v2_b8c0 to i32*
  store i32 %v0_b8c0, i32* %v3_b8c0, align 4
  %v0_b8c4 = load i32, i32* @r5, align 4
  store i32 %v0_b8c4, i32* @r1, align 4
  %v0_b8c8 = load i32, i32* @r8, align 4
  store i32 %v0_b8c8, i32* %r2.global-to-local, align 4
  %v0_b8cc = load i32, i32* @r7, align 4
  store i32 %v0_b8cc, i32* %r3.global-to-local, align 4
  %v0_b8d0 = load i32, i32* @r4, align 4
  store i32 %v0_b8d0, i32* %r0.global-to-local, align 4
  %v0_b8d4 = load i32, i32* @r6, align 4
  %v1_b8d4 = trunc i32 %v0_b8d4 to i8
  %v3_b8d4 = add i32 %v0_b8c4, 16
  %v4_b8d4 = inttoptr i32 %v3_b8d4 to i8*
  store i8 %v1_b8d4, i8* %v4_b8d4, align 1
  %v0_b8d8 = load i32, i32* @r6, align 4
  %v1_b8d8 = trunc i32 %v0_b8d8 to i8
  %v2_b8d8 = load i32, i32* @r5, align 4
  %v3_b8d8 = add i32 %v2_b8d8, 17
  %v4_b8d8 = inttoptr i32 %v3_b8d8 to i8*
  store i8 %v1_b8d8, i8* %v4_b8d8, align 1
  %v4_b8dc = call i32 @function_d114(i32 %v0_b8d0, i32 %v0_b8c4, i32 %v0_b8c8, i32 %v0_b8cc)
  %v5_b8dc = trunc i32 %v4_b8dc to i8
  store i32 %v4_b8dc, i32* %r0.global-to-local, align 4
  %v4_b8e029 = udiv i32 %v4_b8dc, 256
  %v1_b8e4 = trunc i32 %v4_b8e029 to i8
  %v2_b8e4 = load i32, i32* @r5, align 4
  %v3_b8e4 = add i32 %v2_b8e4, 17
  %v4_b8e4 = inttoptr i32 %v3_b8e4 to i8*
  store i8 %v1_b8e4, i8* %v4_b8e4, align 1
  %v3_b8e8 = load i32, i32* @r5, align 4
  %v4_b8e8 = add i32 %v3_b8e8, 16
  %v5_b8e8 = inttoptr i32 %v4_b8e8 to i8*
  store i8 %v5_b8dc, i8* %v5_b8e8, align 1
  %v3_b8ec = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_b8ec, i32* %r3.global-to-local, align 4
  %v0_b8f0 = load i32, i32* @r4, align 4
  %v1_b8f0 = add i32 %v0_b8f0, 20
  %v2_b8f0 = inttoptr i32 %v1_b8f0 to i32*
  %v3_b8f0 = load i32, i32* %v2_b8f0, align 4
  %v5_b8f8 = mul i32 %v3_b8ec, 24
  %v3_b900 = udiv i32 %v3_b8f0, 65536
  store i32 %v3_b900, i32* %r2.global-to-local, align 4
  %v2_b904 = add i32 %v5_b8f8, %arg2
  store i32 %v2_b904, i32* %ip.global-to-local, align 4
  %v3_b9084 = udiv i32 %v3_b8f0, 16777216
  %v1_b90c = trunc i32 %v3_b9084 to i8
  %v3_b90c = add i32 %v2_b904, 3
  %v4_b90c = inttoptr i32 %v3_b90c to i8*
  store i8 %v1_b90c, i8* %v4_b90c, align 1
  %v0_b910 = load i32, i32* %r2.global-to-local, align 4
  %v1_b910 = trunc i32 %v0_b910 to i8
  %v2_b910 = load i32, i32* %ip.global-to-local, align 4
  %v3_b910 = add i32 %v2_b910, 2
  %v4_b910 = inttoptr i32 %v3_b910 to i8*
  store i8 %v1_b910, i8* %v4_b910, align 1
  %v0_b914 = load i32, i32* @r4, align 4
  store i32 %v0_b914, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 %v3_b308, i32* %r0.global-to-local, align 4
  %v0_b920 = load i32, i32* @sl, align 4
  store i32 %v0_b920, i32* %r2.global-to-local, align 4
  store i32 16, i32* @r4, align 4
  %v0_b928 = load i32, i32* %ip.global-to-local, align 4
  %v6_b930 = inttoptr i32 %v0_b914 to i32*
  %v7_b930 = call i32 @function_1331c(i32 %v3_b308, i32* %v6_b930, i32 %v0_b920, i32 16384, i32 %v0_b928, i32 16)
  %v3_b934 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_b934, i32* %r3.global-to-local, align 4
  %v1_b938 = add i32 %v3_b934, 1
  store i32 %v1_b938, i32* %r0.global-to-local, align 4
  %v1_b93c = load i32, i32* @fp, align 4
  %v9_b93c = icmp eq i32 %v1_b938, %v1_b93c
  store i1 %v9_b93c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_b938, i32* %stack_var_-40, align 4
  %v6_b944 = icmp slt i32 %v1_b938, %v1_b93c
  br i1 %v6_b944, label %dec_label_pc_b948, label %dec_label_pc_b800

dec_label_pc_b948:                                ; preds = %dec_label_pc_b85c
  store i32 %v2_b168, i32* %r2.global-to-local, align 4
  store i32 65536, i32* %r3.global-to-local, align 4
  store i32 %v3_b350, i32* %ip.global-to-local, align 4
  %v4_b954 = mul i32 %v1_b938, 4
  %v5_b954 = add i32 %v4_b954, %v2_b168
  %v6_b954 = inttoptr i32 %v5_b954 to i32*
  %v7_b954 = load i32, i32* %v6_b954, align 4
  store i32 %v7_b954, i32* @r4, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i1 %v3_b834, i1* %cpsr_z.global-to-local, align 1
  %v1_b960 = add i32 %v7_b954, 20
  store i32 %v1_b960, i32* @r5, align 4
  br i1 %v3_b834, label %dec_label_pc_b968, label %dec_label_pc_b848

dec_label_pc_b968:                                ; preds = %dec_label_pc_b948, %dec_label_pc_b80c
  %v0_b968 = call i32 @function_e7cc()
  %v1_b968 = trunc i32 %v0_b968 to i8
  store i32 %v1_b2f8, i32* %lr.global-to-local, align 4
  %v4_b970 = sdiv i32 %v0_b968, 256
  store i32 %v4_b970, i32* %r3.global-to-local, align 4
  store i1 %v2_b84c, i1* %cpsr_z.global-to-local, align 1
  %v3_b978 = load i32, i32* @r4, align 4
  %v4_b978 = add i32 %v3_b978, 4
  %v5_b978 = inttoptr i32 %v4_b978 to i8*
  store i8 %v1_b968, i8* %v5_b978, align 1
  %v0_b97c = load i32, i32* %r3.global-to-local, align 4
  %v1_b97c = trunc i32 %v0_b97c to i8
  %v2_b97c = load i32, i32* @r4, align 4
  %v3_b97c = add i32 %v2_b97c, 5
  %v4_b97c = inttoptr i32 %v3_b97c to i8*
  store i8 %v1_b97c, i8* %v4_b97c, align 1
  %v0_b980 = load i32, i32* @r4, align 4
  %v1_b980 = add i32 %v0_b980, 40
  store i32 %v1_b980, i32* %r0.global-to-local, align 4
  %v0_b984 = load i32, i32* @sb, align 4
  store i32 %v0_b984, i32* @r1, align 4
  %v0_b988 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b988, label %dec_label_pc_b85c, label %dec_label_pc_b98c

dec_label_pc_b98c:                                ; preds = %dec_label_pc_b848, %dec_label_pc_b968
  %v0_b98c = phi i32 [ %v1_b850, %dec_label_pc_b848 ], [ %v1_b980, %dec_label_pc_b968 ]
  %v1_b98c = inttoptr i32 %v0_b98c to i8*
  %v2_b98c = call i32 @function_e94c(i8* %v1_b98c)
  store i32 %v2_b98c, i32* %r0.global-to-local, align 4
  %v2_b85c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_b85c

; uselistorder directives
  uselistorder i32 %v0_b980, { 1, 0 }
  uselistorder i32 %v7_b954, { 1, 2, 0 }
  uselistorder i32 %v1_b93c, { 1, 2, 0 }
  uselistorder i32 %v1_b938, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v4_b8dc, { 0, 2, 1 }
  uselistorder i32 %v0_b8c4, { 1, 0, 2 }
  uselistorder i32 %v3_b8a0, { 1, 0 }
  uselistorder i32 %v3_b880, { 3, 2, 0, 1 }
  uselistorder i32 %v2_b86c, { 0, 2, 1 }
  uselistorder i32 %v0_b850, { 1, 0 }
  uselistorder i32 %v0_b80c, { 1, 0 }
  uselistorder i32 %v0_b800, { 1, 0 }
  uselistorder i1 %v3_b834, { 2, 3, 1, 0 }
  uselistorder i32 %v1_b7e8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_b73c, { 0, 2, 1 }
  uselistorder i32 %v3_b71c, { 1, 0 }
  uselistorder i32 %v0_b6f0, { 1, 0, 2 }
  uselistorder i32 %v3_b6e4, { 1, 0 }
  uselistorder i32 %v3_b678, { 1, 0 }
  uselistorder i32 %v0_b66c, { 1, 0 }
  uselistorder i32 %v3_b5f4, { 1, 0 }
  uselistorder i32 %v2_b5e0, { 1, 0 }
  uselistorder i32 %v3_b5c4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_b5bc, { 1, 0 }
  uselistorder i32 %v3_b598, { 1, 0, 2, 3 }
  uselistorder i32 %v3_b590, { 1, 0 }
  uselistorder i32 %v4_b578, { 1, 0 }
  uselistorder i32 %v0_b574, { 0, 2, 1 }
  uselistorder i1 %v7_b4e4, { 1, 0 }
  uselistorder i32 %v7_b4dc, { 0, 2, 1, 3 }
  uselistorder i32 %v5_b528, { 1, 0 }
  uselistorder i1 %v9_b50c, { 1, 0 }
  uselistorder i32 %v4_b520, { 1, 0 }
  uselistorder i32 %v4_b51c, { 1, 0 }
  uselistorder i32 %v8_b430, { 1, 2, 0, 3 }
  uselistorder i32 %v3_b41c, { 1, 0 }
  uselistorder i32 %v0_b40c, { 2, 0, 1, 3 }
  uselistorder i1 %v7_b394, { 1, 0 }
  uselistorder i32 %v3_b390, { 1, 2, 0, 3 }
  uselistorder i32 %v1_b7a8, { 1, 0 }
  uselistorder i32 %v1_b790, { 1, 0 }
  uselistorder i32 %v1_b778, { 1, 0 }
  uselistorder i32 %v1_b760, { 1, 0 }
  uselistorder i32 %v1_b748, { 1, 0 }
  uselistorder i32 %v5_b524, { 1, 0 }
  uselistorder i32 %v3_b47893, { 1, 0 }
  uselistorder i1 %v2_b53c, { 1, 0 }
  uselistorder i32 %v1_b538, { 1, 0 }
  uselistorder i32 %v4_b534, { 2, 0, 1 }
  uselistorder i32 %v4_b518, { 1, 0 }
  uselistorder i1 %v3_b460, { 1, 0 }
  uselistorder i32 %v8_b35c, { 2, 1, 0 }
  uselistorder i32 %v8_b358, { 1, 2, 0 }
  uselistorder i32 %v3_b350, { 2, 3, 4, 1, 0 }
  uselistorder i32 %v0_b34c, { 0, 1, 3, 2 }
  uselistorder i1 %v7_b340, { 1, 0 }
  uselistorder i1 %v7_b310, { 1, 0 }
  uselistorder i32 %v3_b30c, { 2, 0, 1 }
  uselistorder i32 %v3_b308, { 5, 6, 1, 3, 4, 7, 8, 2, 0, 9 }
  uselistorder i32 %v1_b2f8, { 1, 3, 2, 0 }
  uselistorder i32 %v1_b2a0, { 1, 0 }
  uselistorder i32 %v1_b260, { 1, 0 }
  uselistorder i32 %v1_b240, { 1, 0 }
  uselistorder i32 %v1_b220, { 1, 0 }
  uselistorder i32 %v1_b1e8, { 1, 0 }
  uselistorder i32 %v2_b168, { 0, 4, 5, 2, 1, 3 }
  uselistorder i32 %v2_b158, { 0, 7, 1, 4, 2, 5, 3, 6 }
  uselistorder i32 %v1_b13c, { 2, 1, 0 }
  uselistorder i32* %stack_var_-40, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 1, 16, 15 }
  uselistorder i32* %stack_var_-60, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 40, 42, 44, 43, 45, 47, 46, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 3, 4, 6, 5, 10, 7, 8, 11, 9, 19, 12, 13, 14, 15, 16, 17, 18, 23, 20, 21, 22, 24, 26, 25, 28, 27, 31, 29, 32, 33, 30, 34, 36, 35, 37, 38, 40, 39, 44, 41, 42, 43, 45, 47, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10, 12, 13, 14, 15, 17, 26, 18, 19, 16, 20, 21, 22, 23, 24, 25 }
  uselistorder i32 %arg2, { 0, 1, 3, 2, 4, 5 }
  uselistorder label %dec_label_pc_b98c, { 1, 0 }
  uselistorder label %dec_label_pc_b85c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_b7e4, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %.thread6, { 2, 1, 0 }
  uselistorder label %bb77, { 1, 0 }
  uselistorder label %dec_label_pc_b56c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_b4a4, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_b454, { 1, 0 }
}

define i32 @function_b998(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_b998:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp = call i8 @__decompiler_undefined_function_1()
  %tmp30 = call i8 @__decompiler_undefined_function_1()
  %tmp31 = call i8 @__decompiler_undefined_function_1()
  %tmp32 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v1_b99c = urem i32 %arg1, 256
  store i32 %v1_b99c, i32* @fp, align 4
  store i32 %v1_b99c, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  %v1_b9b4 = urem i32 %arg3, 256
  store i32 %v1_b9b4, i32* @r4, align 4
  %v2_b9b8 = call i32 @function_1366c(i32 %v1_b99c, i32 16)
  store i32 4, i32* %r1.global-to-local, align 4
  %v0_b9c4 = load i32, i32* @fp, align 4
  store i32 %v0_b9c4, i32* %r0.global-to-local, align 4
  %v2_b9c8 = call i32 @function_1366c(i32 %v0_b9c4, i32 4)
  %v0_b9cc = load i32, i32* @r5, align 4
  store i32 %v0_b9cc, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b9dc = load i32, i32* @r4, align 4
  store i32 %v0_b9dc, i32* %r0.global-to-local, align 4
  %v5_b9e0 = inttoptr i32 %v0_b9cc to i32*
  %v6_b9e0 = call i32 @function_85e0(i32 %v0_b9dc, i32* %v5_b9e0, i32 2, i32 0)
  %v1_b9ec = urem i32 %v6_b9e0, 256
  store i32 %v1_b9ec, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_b9f8 = load i32, i32* @r5, align 4
  store i32 %v0_b9f8, i32* %r1.global-to-local, align 4
  %v0_b9fc = load i32, i32* @r4, align 4
  store i32 %v0_b9fc, i32* %r0.global-to-local, align 4
  %v6_ba04 = inttoptr i32 %v0_b9f8 to i32*
  %v7_ba04 = call i32 @function_85e0(i32 %v0_b9fc, i32* %v6_ba04, i32 3, i32 65535)
  %v0_ba08 = load i32, i32* @r5, align 4
  store i32 %v0_ba08, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_ba04, i32* @r6, align 4
  %v0_ba18 = load i32, i32* @r4, align 4
  store i32 %v0_ba18, i32* %r0.global-to-local, align 4
  %v4_ba1c = inttoptr i32 %v0_ba08 to i32*
  %v5_ba1c = call i32 @function_85e0(i32 %v0_ba18, i32* %v4_ba1c, i32 4, i32 64)
  %v1_ba24 = urem i32 %v5_ba1c, 256
  store i32 %v1_ba24, i32* %ip.global-to-local, align 4
  %v0_ba28 = load i32, i32* @r5, align 4
  store i32 %v0_ba28, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_ba34 = load i32, i32* @r4, align 4
  store i32 %v0_ba34, i32* %r0.global-to-local, align 4
  %v6_ba3c = inttoptr i32 %v0_ba28 to i32*
  %v7_ba3c = call i32 @function_85e0(i32 %v0_ba34, i32* %v6_ba3c, i32 5, i32 1)
  %v1_ba48 = urem i32 %v7_ba3c, 256
  store i32 %v1_ba48, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  %v0_ba50 = load i32, i32* @r5, align 4
  store i32 %v0_ba50, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_ba58 = load i32, i32* @r4, align 4
  store i32 %v0_ba58, i32* %r0.global-to-local, align 4
  %v5_ba60 = inttoptr i32 %v0_ba50 to i32*
  %v6_ba60 = call i32 @function_85e0(i32 %v0_ba58, i32* %v5_ba60, i32 7, i32 65535)
  %v0_ba64 = load i32, i32* @r5, align 4
  store i32 %v0_ba64, i32* %r1.global-to-local, align 4
  %v3_ba68 = mul i32 %v6_ba60, 65536
  store i32 %v3_ba68, i32* @r7, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_ba74 = load i32, i32* @r4, align 4
  store i32 %v0_ba74, i32* %r0.global-to-local, align 4
  %v4_ba78 = inttoptr i32 %v0_ba64 to i32*
  %v5_ba78 = call i32 @function_85e0(i32 %v0_ba74, i32* %v4_ba78, i32 11, i32 0)
  %v1_ba80 = urem i32 %v5_ba78, 256
  store i32 %v1_ba80, i32* %ip.global-to-local, align 4
  %v0_ba84 = load i32, i32* @r5, align 4
  store i32 %v0_ba84, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_ba90 = load i32, i32* @r4, align 4
  store i32 %v0_ba90, i32* %r0.global-to-local, align 4
  %v5_ba98 = inttoptr i32 %v0_ba84 to i32*
  %v6_ba98 = call i32 @function_85e0(i32 %v0_ba90, i32* %v5_ba98, i32 12, i32 1)
  %v1_baa0 = urem i32 %v6_ba98, 256
  store i32 %v1_baa0, i32* %ip.global-to-local, align 4
  %v0_baa4 = load i32, i32* @r5, align 4
  store i32 %v0_baa4, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_bab0 = load i32, i32* @r4, align 4
  store i32 %v0_bab0, i32* %r0.global-to-local, align 4
  %v5_bab8 = inttoptr i32 %v0_baa4 to i32*
  %v6_bab8 = call i32 @function_85e0(i32 %v0_bab0, i32* %v5_bab8, i32 13, i32 1)
  %v1_bac0 = urem i32 %v6_bab8, 256
  store i32 %v1_bac0, i32* %ip.global-to-local, align 4
  %v0_bac4 = load i32, i32* @r5, align 4
  store i32 %v0_bac4, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_bad0 = load i32, i32* @r4, align 4
  store i32 %v0_bad0, i32* %r0.global-to-local, align 4
  %v5_bad8 = inttoptr i32 %v0_bac4 to i32*
  %v6_bad8 = call i32 @function_85e0(i32 %v0_bad0, i32* %v5_bad8, i32 14, i32 0)
  %v1_bae0 = urem i32 %v6_bad8, 256
  store i32 %v1_bae0, i32* %ip.global-to-local, align 4
  %v0_bae4 = load i32, i32* @r5, align 4
  store i32 %v0_bae4, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_baf0 = load i32, i32* @r4, align 4
  store i32 %v0_baf0, i32* %r0.global-to-local, align 4
  %v5_baf8 = inttoptr i32 %v0_bae4 to i32*
  %v6_baf8 = call i32 @function_85e0(i32 %v0_baf0, i32* %v5_baf8, i32 15, i32 0)
  %v1_bb00 = urem i32 %v6_baf8, 256
  store i32 %v1_bb00, i32* %ip.global-to-local, align 4
  %v0_bb04 = load i32, i32* @r5, align 4
  store i32 %v0_bb04, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_bb10 = load i32, i32* @r4, align 4
  store i32 %v0_bb10, i32* %r0.global-to-local, align 4
  %v5_bb18 = inttoptr i32 %v0_bb04 to i32*
  %v6_bb18 = call i32 @function_85e0(i32 %v0_bb10, i32* %v5_bb18, i32 16, i32 0)
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %v6_bb18, i32* %ip.global-to-local, align 4
  store i32 768, i32* %r3.global-to-local, align 4
  %v0_bb28 = load i32, i32* @r5, align 4
  store i32 %v0_bb28, i32* %r1.global-to-local, align 4
  %v0_bb2c = load i32, i32* @r4, align 4
  store i32 %v0_bb2c, i32* %r0.global-to-local, align 4
  %v1_bb30 = urem i32 %v6_bb18, 256
  store i32 %v1_bb30, i32* @r8, align 4
  %v4_bb34 = inttoptr i32 %v0_bb28 to i32*
  %v5_bb34 = call i32 @function_85e0(i32 %v0_bb2c, i32* %v4_bb34, i32 0, i32 768)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_bb40 = load i32, i32* @r5, align 4
  store i32 %v0_bb40, i32* %r1.global-to-local, align 4
  store i32 %v5_bb34, i32* @sb, align 4
  %v0_bb48 = load i32, i32* @r4, align 4
  store i32 %v0_bb48, i32* %r0.global-to-local, align 4
  %v4_bb4c = inttoptr i32 %v0_bb40 to i32*
  %v5_bb4c = call i32 @function_85e0(i32 %v0_bb48, i32* %v4_bb4c, i32 1, i32 1)
  store i32 3, i32* %r1.global-to-local, align 4
  %v1_bb58 = urem i32 %v5_bb4c, 256
  store i32 %v1_bb58, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_bb68 = call i32 @function_13380(i32 2, i32 3, i32 6)
  store i32 %v3_bb68, i32* %r0.global-to-local, align 4
  %v0_bb6c = load i32, i32* @r7, align 4
  %v3_bb6c = udiv i32 %v0_bb6c, 65536
  store i32 %v3_bb6c, i32* %r1.global-to-local, align 4
  %v7_bb70 = icmp eq i32 %v3_bb68, -1
  store i1 %v7_bb70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_bb70, label %dec_label_pc_bdcc, label %dec_label_pc_bb80

dec_label_pc_bb80:                                ; preds = %dec_label_pc_b998
  store i32 1, i32* %stack_var_-40, align 4
  %v6_bb88 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v6_bb88, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v6_bb9c = call i32 @function_13350(i32 %v3_bb68, i32 0, i32 3, i32* nonnull %stack_var_-40, i32 4)
  store i32 %v6_bb9c, i32* %r0.global-to-local, align 4
  %v7_bba0 = icmp eq i32 %v6_bb9c, -1
  store i1 %v7_bba0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_bba0, label %dec_label_pc_bdc4, label %dec_label_pc_bba8

dec_label_pc_bba8:                                ; preds = %dec_label_pc_bb80
  %v0_bba8 = load i32, i32* @fp, align 4
  %v2_bba8 = icmp eq i32 %v0_bba8, 0
  store i1 %v2_bba8, i1* %cpsr_z.global-to-local, align 1
  %v0_bbac = load i32, i32* @r6, align 4
  %v3_bbac = mul i32 %v0_bbac, 65536
  store i32 %v3_bbac, i32* %r0.global-to-local, align 4
  %v3_bbb0 = urem i32 %v0_bbac, 65536
  store i32 %v3_bbb0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %tmp72 = icmp slt i32 %v0_bba8, 1
  br i1 %tmp72, label %.thread18, label %dec_label_pc_bbd4.preheader

.thread18:                                        ; preds = %dec_label_pc_bba8
  store i32 0, i32* %stack_var_-40, align 4
  br label %dec_label_pc_c058

dec_label_pc_bbd4.preheader:                      ; preds = %dec_label_pc_bba8
  %v5_bbb8 = load i32, i32* @r7, align 4
  %v8_bbb8 = udiv i32 %v5_bbb8, 16777216
  %tmp73 = udiv i32 %v0_bbac, 256
  %v8_bbbc = urem i32 %tmp73, 256
  store i32 %v8_bbbc, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-40, align 4
  %v3_bcc0 = icmp ugt i32 %v0_bb6c, -65537
  %v2_bce4 = ptrtoint i32* %stack_var_-60 to i32
  %v3_bcf0 = bitcast i32* %stack_var_-60 to %sockaddr*
  %v2_bd20 = ptrtoint i32* %stack_var_-76 to i32
  %v2_bd24 = ptrtoint i32* %stack_var_-44 to i32
  %v2_bd28 = ptrtoint i32* %stack_var_-332 to i32
  %v4_bd74 = zext i8 %tmp31 to i32
  %v4_bd78 = zext i8 %tmp30 to i32
  %v4_bd84 = mul nuw nsw i32 %v4_bd78, 256
  %v4_bd94 = zext i8 %tmp to i32
  %v1_bd98 = and i32 %v4_bd94, 18
  %v2_bd9c = icmp eq i32 %v1_bd98, 18
  %v1_bcd0 = mul nuw nsw i32 %v3_bb6c, 256
  %v4_bcd4 = and i32 %v1_bcd0, 65280
  %v5_bcd4 = or i32 %v8_bbb8, %v4_bcd4
  %v3_bcd893 = udiv i32 %v4_bcd4, 256
  %v1_bcdc = trunc i32 %v3_bcd893 to i8
  %v1_bea0 = mul i32 %v0_bbac, 256
  %v4_bea8 = and i32 %v1_bea0, 65280
  %sext = mul i32 %v6_b9e0, 16777216
  %v4_beb8 = sdiv i32 %sext, 16777216
  %sext5 = mul i32 %v5_ba1c, 16777216
  %v4_bedc = sdiv i32 %sext5, 16777216
  %v5_bd84 = or i32 %v4_bd74, %v4_bd84
  %v1_bda4 = and i32 %v4_bd94, 5
  %v2_bda4 = icmp eq i32 %v1_bda4, 0
  %v1_bce0 = trunc i32 %v8_bbb8 to i8
  %v5_bea8 = or i32 %v8_bbbc, %v4_bea8
  %v1_bec8 = trunc i32 %v4_beb8 to i8
  %v1_bfa8 = urem i32 %v5_ba78, 2
  %tmp94 = sub nsw i32 0, %v1_bfa8
  %v4_bfb0 = and i32 %tmp94, 32
  %v1_bfc0 = urem i32 %v6_ba98, 2
  %tmp95 = sub nsw i32 0, %v1_bfc0
  %v4_bfc8 = and i32 %tmp95, 16
  %v1_bfd8 = urem i32 %v6_bab8, 2
  %tmp96 = sub nsw i32 0, %v1_bfd8
  %v4_bfe0 = and i32 %tmp96, 8
  %v1_bff0 = urem i32 %v6_bad8, 2
  %tmp97 = sub nsw i32 0, %v1_bff0
  %v4_bff8 = and i32 %tmp97, 4
  %v1_c008 = urem i32 %v6_baf8, 2
  %tmp98 = sub nsw i32 0, %v1_c008
  %v3_c010 = and i32 %tmp98, 2
  br label %dec_label_pc_bbd4

dec_label_pc_bbd4:                                ; preds = %dec_label_pc_c044, %dec_label_pc_bdac, %dec_label_pc_bbd4.preheader
  store i32 %v8_bbbc, i32* %r3.global-to-local, align 4
  %v0_bbe0 = load i32, i32* @sb, align 4
  %v1_bbe0 = add i32 %v0_bbe0, 40
  store i32 %v1_bbe0, i32* @sl, align 4
  br label %dec_label_pc_bbe4

dec_label_pc_bbe4:                                ; preds = %dec_label_pc_bdb8, %dec_label_pc_bbd4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_bbf0 = call i32 @function_13380(i32 2, i32 1, i32 0)
  store i32 %v3_bbf0, i32* %r0.global-to-local, align 4
  %v7_bbf4 = icmp eq i32 %v3_bbf0, -1
  store i1 %v7_bbf4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_bbf0, i32* @r7, align 4
  br i1 %v7_bbf4, label %dec_label_pc_c044, label %dec_label_pc_bc00

dec_label_pc_bc00:                                ; preds = %dec_label_pc_bbe4
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  %v2_bc08 = call i32 @function_129d8(i32 %v3_bbf0, i32 3)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_bc10 = or i32 %v2_bc08, 2048
  store i32 %v1_bc10, i32* @r2, align 4
  %v0_bc14 = load i32, i32* @r7, align 4
  store i32 %v0_bc14, i32* %r0.global-to-local, align 4
  %v2_bc18 = call i32 @function_129d8(i32 %v0_bc14, i32 4)
  store i32 %v2_bc18, i32* %r0.global-to-local, align 4
  %v3_bc1c = load i32, i32* %stack_var_-40, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_bc2c = mul i32 %v3_bc1c, 24
  store i32 %v5_bc2c, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  store i32 2, i32* %stack_var_-60, align 4
  %v2_bc3c = add i32 %v5_bc2c, %arg2
  store i32 %v2_bc3c, i32* %r2.global-to-local, align 4
  %v1_bc40 = add i32 %v2_bc3c, 20
  %v2_bc40 = inttoptr i32 %v1_bc40 to i8*
  %v3_bc40 = load i8, i8* %v2_bc40, align 1
  %v4_bc40 = zext i8 %v3_bc40 to i32
  store i32 %v4_bc40, i32* %r3.global-to-local, align 4
  %v2_bc44 = icmp ugt i8 %v3_bc40, 30
  %v7_bc44 = icmp eq i8 %v3_bc40, 31
  store i1 %v7_bc44, i1* %cpsr_z.global-to-local, align 1
  %v2_bc48 = xor i1 %v7_bc44, true
  %v3_bc48 = and i1 %v2_bc44, %v2_bc48
  %v5_bc48 = add i32 %v2_bc3c, 16
  %v6_bc48 = inttoptr i32 %v5_bc48 to i32*
  %v7_bc48 = load i32, i32* %v6_bc48, align 4
  br i1 %v3_bc48, label %dec_label_pc_bcb4, label %dec_label_pc_bc54

dec_label_pc_bc54:                                ; preds = %dec_label_pc_bc00
  store i32 %v7_bc48, i32* @r4, align 4
  %v0_bc58 = call i32 @function_e7cc()
  store i32 %v0_bc58, i32* %r0.global-to-local, align 4
  %v3_bc5c = load i32, i32* %stack_var_-40, align 4
  store i32 %arg2, i32* %lr.global-to-local, align 4
  %v5_bc68 = mul i32 %v3_bc5c, 24
  %v0_bc6c = load i32, i32* @r4, align 4
  %v2_bc70 = add i32 %v5_bc68, %arg2
  store i32 %v2_bc70, i32* %r1.global-to-local, align 4
  %v1_bc74 = and i32 %v0_bc6c, 65280
  store i32 %v1_bc74, i32* %r3.global-to-local, align 4
  %v1_bc6c = udiv i32 %v0_bc6c, 256
  %v3_bc78 = and i32 %v1_bc6c, 65280
  store i32 %v3_bc78, i32* %r2.global-to-local, align 4
  %v3_bc7c = mul i32 %v0_bc6c, 16777216
  store i32 %v3_bc7c, i32* %ip.global-to-local, align 4
  %v1_bc80 = add i32 %v2_bc70, 20
  %v2_bc80 = inttoptr i32 %v1_bc80 to i8*
  %v3_bc80 = load i8, i8* %v2_bc80, align 1
  %v4_bc80 = zext i8 %v3_bc80 to i32
  store i32 %v4_bc80, i32* %lr.global-to-local, align 4
  %v4_bc84 = mul nuw nsw i32 %v1_bc74, 256
  %v5_bc84 = or i32 %v4_bc84, %v3_bc7c
  store i32 %v5_bc84, i32* %ip.global-to-local, align 4
  %v2_bc8c = call i32 @llvm.bswap.i32(i32 %v0_bc6c)
  %v7_bc90 = lshr i32 %v0_bc58, %v4_bc80
  %v8_bc90 = add i32 %v7_bc90, %v2_bc8c
  store i32 %v8_bc90, i32* %r2.global-to-local, align 4
  %v3_bc9c = mul i32 %v8_bc90, 16777216
  %v1_bca0 = and i32 %v8_bc90, 65280
  store i32 %v1_bca0, i32* %r0.global-to-local, align 4
  %v4_bca4 = mul nuw nsw i32 %v1_bca0, 256
  %v5_bca4 = or i32 %v4_bca4, %v3_bc9c
  store i32 %v5_bca4, i32* %r1.global-to-local, align 4
  %v2_bcac = call i32 @llvm.bswap.i32(i32 %v8_bc90)
  br label %dec_label_pc_bcb4

dec_label_pc_bcb4:                                ; preds = %dec_label_pc_bc00, %dec_label_pc_bc54
  %storemerge25 = phi i32 [ %v2_bcac, %dec_label_pc_bc54 ], [ %v7_bc48, %dec_label_pc_bc00 ]
  store i32 %v3_bb6c, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i1 %v3_bcc0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_bcc0, label %dec_label_pc_bdd4, label %dec_label_pc_bcc8

dec_label_pc_bcc8:                                ; preds = %dec_label_pc_bcb4
  store i32 %v8_bbb8, i32* %ip.global-to-local, align 4
  store i32 %v5_bcd4, i32* %r3.global-to-local, align 4
  store i32 %v3_bcd893, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_bce4

dec_label_pc_bce4:                                ; preds = %dec_label_pc_bdd4, %dec_label_pc_bcc8
  %stack_var_-57.0 = phi i8 [ %v1_bddc, %dec_label_pc_bdd4 ], [ %v1_bcdc, %dec_label_pc_bcc8 ]
  %storemerge = phi i8 [ %v1_bdd4, %dec_label_pc_bdd4 ], [ %v1_bce0, %dec_label_pc_bcc8 ]
  store i32 %v2_bce4, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v0_bcec = load i32, i32* @r7, align 4
  store i32 %v0_bcec, i32* %r0.global-to-local, align 4
  %v4_bcf0 = call i32 @function_131dc(i32 %v0_bcec, %sockaddr* nonnull %v3_bcf0, i32 16)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_bcf8 = call i32 @function_12d6c(i32* null)
  store i32 %v2_bcf8, i32* %r0.global-to-local, align 4
  store i32 %v2_bcf8, i32* @r4, align 4
  %v9_bd58 = icmp eq i32 %tmp32, %storemerge25
  %v4_bd7c = zext i8 %storemerge to i32
  %v4_bd80 = zext i8 %stack_var_-57.0 to i32
  %. = zext i1 %v9_bd58 to i32
  %v9_bd6c = icmp eq i1 %v9_bd58, false
  %v4_bd88 = mul nuw nsw i32 %v4_bd80, 256
  %v5_bd88 = or i32 %v4_bd88, %v4_bd7c
  %v9_bd8c = icmp eq i32 %v5_bd88, %v5_bd84
  br label %dec_label_pc_bd14

dec_label_pc_bd04:                                ; preds = %.thread23, %dec_label_pc_bd74, %dec_label_pc_bda4, %bb75
  %v2_bd04 = call i32 @function_12d6c(i32* null)
  %v0_bd08 = load i32, i32* @r4, align 4
  %v2_bd08 = sub i32 %v2_bd04, %v0_bd08
  store i32 %v2_bd08, i32* %r0.global-to-local, align 4
  %v7_bd0c = icmp eq i32 %v2_bd08, 10
  store i1 %v7_bd0c, i1* %cpsr_z.global-to-local, align 1
  %v8_bd10 = icmp sgt i32 %v2_bd08, 10
  br i1 %v8_bd10, label %dec_label_pc_bdb8, label %dec_label_pc_bd14

dec_label_pc_bd14:                                ; preds = %dec_label_pc_bd04, %dec_label_pc_bce4
  store i32 256, i32* %r2.global-to-local, align 4
  store i32 16, i32* %stack_var_-44, align 4
  store i32 %v2_bd20, i32* %lr.global-to-local, align 4
  store i32 %v2_bd24, i32* %ip.global-to-local, align 4
  store i32 %v2_bd28, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 %v3_bb68, i32* %r0.global-to-local, align 4
  %v7_bd3c = call i32 @function_132bc(i32 %v3_bb68, i32* nonnull %stack_var_-332, i32 256, i32 16384, i32 %v2_bd20, i32 %v2_bd24)
  store i32 %v7_bd3c, i32* %r2.global-to-local, align 4
  %v7_bd44 = icmp eq i32 %v7_bd3c, -1
  store i1 %v7_bd44, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v7_bd44, label %dec_label_pc_bdcc, label %dec_label_pc_bd50

dec_label_pc_bd50:                                ; preds = %dec_label_pc_bd14
  store i32 %tmp32, i32* %r3.global-to-local, align 4
  store i32 %., i32* %r1.global-to-local, align 4
  %v7_bd64 = icmp eq i32 %v7_bd3c, 40
  store i1 %v7_bd64, i1* %cpsr_z.global-to-local, align 1
  %tmp99 = icmp ult i32 %v7_bd3c, 41
  br i1 %tmp99, label %.thread23, label %bb75

.thread23:                                        ; preds = %dec_label_pc_bd50
  store i32 0, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_bd04

bb75:                                             ; preds = %dec_label_pc_bd50
  store i1 %v9_bd6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_bd6c, label %dec_label_pc_bd04, label %dec_label_pc_bd74

dec_label_pc_bd74:                                ; preds = %bb75
  store i32 %v4_bd78, i32* %r1.global-to-local, align 4
  store i32 %v4_bd7c, i32* %ip.global-to-local, align 4
  store i32 %v4_bd80, i32* %r2.global-to-local, align 4
  store i32 %v5_bd84, i32* %r3.global-to-local, align 4
  store i32 %v5_bd88, i32* @r5, align 4
  store i1 %v9_bd8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_bd8c, label %dec_label_pc_bd94, label %dec_label_pc_bd04

dec_label_pc_bd94:                                ; preds = %dec_label_pc_bd74
  store i32 %v4_bd94, i32* %r2.global-to-local, align 4
  store i32 %v1_bd98, i32* %r3.global-to-local, align 4
  store i1 %v2_bd9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_bd9c, label %dec_label_pc_bde8, label %dec_label_pc_bda4

dec_label_pc_bda4:                                ; preds = %dec_label_pc_bd94
  store i1 %v2_bda4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_bda4, label %dec_label_pc_bd04, label %dec_label_pc_bdac

dec_label_pc_bdac:                                ; preds = %dec_label_pc_bda4
  %v0_bdac = load i32, i32* @r7, align 4
  store i32 %v0_bdac, i32* %r0.global-to-local, align 4
  %v1_bdb0 = call i32 @function_12a9c(i32 %v0_bdac)
  store i32 %v1_bdb0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_bbd4

dec_label_pc_bdb8:                                ; preds = %dec_label_pc_bd04
  %v0_bdb8 = load i32, i32* @r7, align 4
  store i32 %v0_bdb8, i32* %r0.global-to-local, align 4
  %v1_bdbc = call i32 @function_12a9c(i32 %v0_bdb8)
  store i32 %v1_bdbc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_bbe4

dec_label_pc_bdc4:                                ; preds = %dec_label_pc_bb80
  store i32 %v3_bb68, i32* %r0.global-to-local, align 4
  %v1_bdc8 = call i32 @function_12a9c(i32 %v3_bb68)
  store i32 %v1_bdc8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_bdcc

dec_label_pc_bdcc:                                ; preds = %dec_label_pc_bd14, %dec_label_pc_b998, %dec_label_pc_bdc4
  %v29_bdd0 = phi i32 [ %v3_bb68, %dec_label_pc_b998 ], [ %v1_bdc8, %dec_label_pc_bdc4 ], [ 0, %dec_label_pc_bd14 ]
  ret i32 %v29_bdd0

dec_label_pc_bdd4:                                ; preds = %dec_label_pc_bcb4
  %v0_bdd4 = call i32 @function_e7cc()
  %v1_bdd4 = trunc i32 %v0_bdd4 to i8
  store i32 %v0_bdd4, i32* %r0.global-to-local, align 4
  %v4_bdd8 = sdiv i32 %v0_bdd4, 256
  store i32 %v4_bdd8, i32* %r3.global-to-local, align 4
  %v1_bddc = trunc i32 %v4_bdd8 to i8
  br label %dec_label_pc_bce4

dec_label_pc_bde8:                                ; preds = %dec_label_pc_bd94
  %v3_bde8 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_bde8, i32* @r4, align 4
  store i32 %v2_b9b8, i32* %r2.global-to-local, align 4
  %v3_bdf0 = mul i32 %v3_bde8, 16
  store i32 %v3_bdf0, i32* %ip.global-to-local, align 4
  %v3_bdf4 = add i32 %v3_bdf0, %v2_b9b8
  %v4_bdf4 = inttoptr i32 %v3_bdf4 to i32*
  store i32 %storemerge25, i32* %v4_bdf4, align 4
  %v0_bdf8 = load i32, i32* @r6, align 4
  %v1_bdf8 = add i32 %v0_bdf8, 4
  %v2_bdf8 = inttoptr i32 %v1_bdf8 to i32*
  %v3_bdf8 = load i32, i32* %v2_bdf8, align 4
  store i32 %v3_bdf8, i32* %r0.global-to-local, align 4
  %v1_be00 = and i32 %v3_bdf8, 65280
  store i32 %v1_be00, i32* %r1.global-to-local, align 4
  store i32 %v2_b9b8, i32* %lr.global-to-local, align 4
  %v3_be08 = mul i32 %v3_bdf8, 16777216
  %v4_be10 = mul nuw nsw i32 %v1_be00, 256
  %v5_be10 = or i32 %v4_be10, %v3_be08
  store i32 %v5_be10, i32* %r2.global-to-local, align 4
  %v1_be18 = load i32, i32* %ip.global-to-local, align 4
  %v2_be18 = add i32 %v1_be18, %v2_b9b8
  store i32 %v2_be18, i32* %ip.global-to-local, align 4
  %v2_be1c = call i32 @llvm.bswap.i32(i32 %v3_bdf8)
  store i32 %v2_be1c, i32* %r3.global-to-local, align 4
  %v2_be20 = add i32 %v2_be18, 4
  %v3_be20 = inttoptr i32 %v2_be20 to i32*
  store i32 %v2_be1c, i32* %v3_be20, align 4
  %v0_be24 = load i32, i32* @r6, align 4
  %v1_be24 = add i32 %v0_be24, 8
  %v2_be24 = inttoptr i32 %v1_be24 to i32*
  %v3_be24 = load i32, i32* %v2_be24, align 4
  store i32 %v3_be24, i32* %r0.global-to-local, align 4
  %v1_be2c = and i32 %v3_be24, 65280
  store i32 %v1_be2c, i32* %r1.global-to-local, align 4
  %v3_be30 = mul i32 %v3_be24, 16777216
  %v4_be38 = mul nuw nsw i32 %v1_be2c, 256
  %v5_be38 = or i32 %v4_be38, %v3_be30
  store i32 %v5_be38, i32* %r2.global-to-local, align 4
  %v2_be40 = call i32 @llvm.bswap.i32(i32 %v3_be24)
  store i32 %v2_be40, i32* %r3.global-to-local, align 4
  %v1_be44 = load i32, i32* %ip.global-to-local, align 4
  %v2_be44 = add i32 %v1_be44, 8
  %v3_be44 = inttoptr i32 %v2_be44 to i32*
  store i32 %v2_be40, i32* %v3_be44, align 4
  %v0_be48 = load i32, i32* @r6, align 4
  %v1_be48 = inttoptr i32 %v0_be48 to i32*
  %v2_be48 = load i32, i32* %v1_be48, align 4
  %v3_be4c = udiv i32 %v2_be48, 65536
  store i32 %v3_be4c, i32* %r2.global-to-local, align 4
  %v3_be503 = udiv i32 %v2_be48, 16777216
  store i32 %v3_be503, i32* %r1.global-to-local, align 4
  %v0_be54 = load i32, i32* @r5, align 4
  %v3_be54 = sdiv i32 %v0_be54, 256
  store i32 %v3_be54, i32* %r3.global-to-local, align 4
  %v1_be58 = trunc i32 %v3_be54 to i8
  %v2_be58 = load i32, i32* %ip.global-to-local, align 4
  %v3_be58 = add i32 %v2_be58, 15
  %v4_be58 = inttoptr i32 %v3_be58 to i8*
  store i8 %v1_be58, i8* %v4_be58, align 1
  %v0_be5c = load i32, i32* %r1.global-to-local, align 4
  %v1_be5c = trunc i32 %v0_be5c to i8
  %v2_be5c = load i32, i32* %ip.global-to-local, align 4
  %v3_be5c = add i32 %v2_be5c, 13
  %v4_be5c = inttoptr i32 %v3_be5c to i8*
  store i8 %v1_be5c, i8* %v4_be5c, align 1
  %v0_be60 = load i32, i32* %r2.global-to-local, align 4
  %v1_be60 = trunc i32 %v0_be60 to i8
  %v2_be60 = load i32, i32* %ip.global-to-local, align 4
  %v3_be60 = add i32 %v2_be60, 12
  %v4_be60 = inttoptr i32 %v3_be60 to i8*
  store i8 %v1_be60, i8* %v4_be60, align 1
  %v0_be64 = load i32, i32* @r5, align 4
  %v1_be64 = trunc i32 %v0_be64 to i8
  %v2_be64 = load i32, i32* %ip.global-to-local, align 4
  %v3_be64 = add i32 %v2_be64, 14
  %v4_be64 = inttoptr i32 %v3_be64 to i8*
  store i8 %v1_be64, i8* %v4_be64, align 1
  %v0_be68 = load i32, i32* @sl, align 4
  store i32 %v0_be68, i32* %r0.global-to-local, align 4
  %v1_be6c = call i32 @function_13518(i32 %v0_be68)
  store i32 %v1_be6c, i32* %r0.global-to-local, align 4
  store i32 %v2_b9c8, i32* %r1.global-to-local, align 4
  %v3_be74 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_be74, i32* %r2.global-to-local, align 4
  %v2_be78 = load i32, i32* @r4, align 4
  %v5_be78 = mul i32 %v2_be78, 4
  %v6_be78 = add i32 %v5_be78, %v2_b9c8
  %v7_be78 = inttoptr i32 %v6_be78 to i32*
  store i32 %v1_be6c, i32* %v7_be78, align 4
  %v0_be7c = load i32, i32* %r1.global-to-local, align 4
  %v1_be7c = load i32, i32* %r2.global-to-local, align 4
  %v4_be7c = mul i32 %v1_be7c, 4
  %v5_be7c = add i32 %v4_be7c, %v0_be7c
  %v6_be7c = inttoptr i32 %v5_be7c to i32*
  %v7_be7c = load i32, i32* %v6_be7c, align 4
  store i32 %v7_be7c, i32* @r4, align 4
  %v1_be80 = inttoptr i32 %v7_be7c to i8*
  %v2_be80 = load i8, i8* %v1_be80, align 1
  %tmp100 = urem i8 %v2_be80, 16
  %v1_be84 = zext i8 %tmp100 to i32
  %v1_be88 = or i32 %v1_be84, 64
  store i32 %v1_be88, i32* %r3.global-to-local, align 4
  %v1_be8c = trunc i32 %v1_be88 to i8
  store i8 %v1_be8c, i8* %v1_be80, align 1
  %v0_be90 = load i32, i32* @r4, align 4
  %v1_be90 = inttoptr i32 %v0_be90 to i8*
  %v2_be90 = load i8, i8* %v1_be90, align 1
  store i32 %v3_bbb0, i32* %ip.global-to-local, align 4
  %v1_be9c = and i8 %v2_be90, -16
  %v1_bea4 = or i8 %v1_be9c, 5
  store i32 %v5_bea8, i32* %r0.global-to-local, align 4
  %v0_beac = load i32, i32* @sl, align 4
  %v3_beac = mul i32 %v0_beac, 65536
  store i32 %v3_beac, i32* %r2.global-to-local, align 4
  store i32 %v1_ba48, i32* %lr.global-to-local, align 4
  store i8 %v1_bea4, i8* %v1_be90, align 1
  store i32 %v4_beb8, i32* %r1.global-to-local, align 4
  %v0_bebc = load i32, i32* %r2.global-to-local, align 4
  %v3_bebc = udiv i32 %v0_bebc, 65536
  %v1_bec0 = urem i32 %v3_bebc, 256
  store i32 %v1_bec0, i32* %r3.global-to-local, align 4
  %v3_bec4 = udiv i32 %v0_bebc, 16777216
  store i32 %v3_bec4, i32* %r2.global-to-local, align 4
  %v2_bec8 = load i32, i32* @r4, align 4
  %v3_bec8 = add i32 %v2_bec8, 1
  %v4_bec8 = inttoptr i32 %v3_bec8 to i8*
  store i8 %v1_bec8, i8* %v4_bec8, align 1
  %v0_becc = load i32, i32* %r2.global-to-local, align 4
  %v1_becc = load i32, i32* %r3.global-to-local, align 4
  %v4_becc = mul i32 %v1_becc, 256
  %v5_becc = or i32 %v4_becc, %v0_becc
  store i32 %v5_becc, i32* %r2.global-to-local, align 4
  %v1_bed0 = trunc i32 %v0_becc to i8
  %v2_bed0 = load i32, i32* @r4, align 4
  %v3_bed0 = add i32 %v2_bed0, 2
  %v4_bed0 = inttoptr i32 %v3_bed0 to i8*
  store i8 %v1_bed0, i8* %v4_bed0, align 1
  %v0_bed4 = load i32, i32* %lr.global-to-local, align 4
  %v2_bed4 = icmp eq i32 %v0_bed4, 0
  store i1 %v2_bed4, i1* %cpsr_z.global-to-local, align 1
  %v0_bed8 = load i32, i32* %r2.global-to-local, align 4
  %v3_bed8 = sdiv i32 %v0_bed8, 256
  store i32 %v3_bed8, i32* %r3.global-to-local, align 4
  store i32 %v4_bedc, i32* %r2.global-to-local, align 4
  %v1_bee0 = trunc i32 %v3_bed8 to i8
  %v2_bee0 = load i32, i32* @r4, align 4
  %v3_bee0 = add i32 %v2_bee0, 3
  %v4_bee0 = inttoptr i32 %v3_bee0 to i8*
  store i8 %v1_bee0, i8* %v4_bee0, align 1
  %v0_bee4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_bee4, label %bb77, label %bb76

bb76:                                             ; preds = %dec_label_pc_bde8
  store i32 64, i32* %r3.global-to-local, align 4
  br label %bb77

bb77:                                             ; preds = %dec_label_pc_bde8, %bb76
  %v0_bee8 = load i32, i32* %r2.global-to-local, align 4
  %v1_bee8 = trunc i32 %v0_bee8 to i8
  %v2_bee8 = load i32, i32* @r4, align 4
  %v3_bee8 = add i32 %v2_bee8, 8
  %v4_bee8 = inttoptr i32 %v3_bee8 to i8*
  store i8 %v1_bee8, i8* %v4_bee8, align 1
  %v0_beec = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_beec, label %.thread6, label %bb78

bb78:                                             ; preds = %bb77
  %v1_beec = load i32, i32* %r3.global-to-local, align 4
  %v2_beec = trunc i32 %v1_beec to i8
  %v3_beec = load i32, i32* @r4, align 4
  %v4_beec = add i32 %v3_beec, 6
  %v5_beec = inttoptr i32 %v4_beec to i8*
  store i8 %v2_beec, i8* %v5_beec, align 1
  %v0_bef0.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_bef0.pr, label %.thread6, label %bb79

bb79:                                             ; preds = %bb78
  store i32 0, i32* %r2.global-to-local, align 4
  br label %.thread6

.thread6:                                         ; preds = %bb77, %bb78, %bb79
  store i32 6, i32* %r3.global-to-local, align 4
  %v2_bef8 = load i32, i32* @r4, align 4
  %v3_bef8 = add i32 %v2_bef8, 9
  %v4_bef8 = inttoptr i32 %v3_bef8 to i8*
  store i8 6, i8* %v4_bef8, align 1
  %v0_befc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_befc, label %bb81, label %bb80

bb80:                                             ; preds = %.thread6
  %v1_befc = load i32, i32* %r2.global-to-local, align 4
  %v2_befc = trunc i32 %v1_befc to i8
  %v3_befc = load i32, i32* @r4, align 4
  %v4_befc = add i32 %v3_befc, 7
  %v5_befc = inttoptr i32 %v4_befc to i8*
  store i8 %v2_befc, i8* %v5_befc, align 1
  br label %bb81

bb81:                                             ; preds = %.thread6, %bb80
  %v2_bf04 = load i32, i32* @global_var_1da7c.49, align 4
  store i32 %v2_bf04, i32* %r3.global-to-local, align 4
  %v0_bf08 = load i32, i32* %r0.global-to-local, align 4
  %v3_bf08 = sdiv i32 %v0_bf08, 256
  store i32 %v3_bf08, i32* %ip.global-to-local, align 4
  %v1_bf0c = load i32, i32* @r4, align 4
  %v2_bf0c = add i32 %v1_bf0c, 12
  %v3_bf0c = inttoptr i32 %v2_bf0c to i32*
  store i32 %v2_bf04, i32* %v3_bf0c, align 4
  %v0_bf10 = load i32, i32* %ip.global-to-local, align 4
  %v1_bf10 = trunc i32 %v0_bf10 to i8
  %v2_bf10 = load i32, i32* @r4, align 4
  %v3_bf10 = add i32 %v2_bf10, 5
  %v4_bf10 = inttoptr i32 %v3_bf10 to i8*
  store i8 %v1_bf10, i8* %v4_bf10, align 1
  %v3_bf14 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_bf14, i32* %r2.global-to-local, align 4
  store i32 %v2_b9b8, i32* %ip.global-to-local, align 4
  %v4_bf1c = mul i32 %v3_bf14, 16
  %v5_bf1c = add i32 %v4_bf1c, %v2_b9b8
  %v6_bf1c = inttoptr i32 %v5_bf1c to i32*
  %v7_bf1c = load i32, i32* %v6_bf1c, align 4
  store i32 %v7_bf1c, i32* %r3.global-to-local, align 4
  %v0_bf20 = load i32, i32* %r0.global-to-local, align 4
  %v1_bf20 = trunc i32 %v0_bf20 to i8
  %v2_bf20 = load i32, i32* @r4, align 4
  %v3_bf20 = add i32 %v2_bf20, 4
  %v4_bf20 = inttoptr i32 %v3_bf20 to i8*
  store i8 %v1_bf20, i8* %v4_bf20, align 1
  %v0_bf24 = load i32, i32* %r3.global-to-local, align 4
  %v1_bf24 = load i32, i32* @r4, align 4
  %v2_bf24 = add i32 %v1_bf24, 16
  %v3_bf24 = inttoptr i32 %v2_bf24 to i32*
  store i32 %v0_bf24, i32* %v3_bf24, align 4
  %v0_bf28 = load i32, i32* %r2.global-to-local, align 4
  %v3_bf28 = mul i32 %v0_bf28, 16
  %v1_bf2c = load i32, i32* %ip.global-to-local, align 4
  %v2_bf2c = add i32 %v1_bf2c, %v3_bf28
  store i32 %v2_bf2c, i32* %r2.global-to-local, align 4
  %v1_bf30 = add i32 %v2_bf2c, 13
  %v2_bf30 = inttoptr i32 %v1_bf30 to i8*
  %v3_bf30 = load i8, i8* %v2_bf30, align 1
  %v4_bf30 = zext i8 %v3_bf30 to i32
  store i32 %v4_bf30, i32* %r1.global-to-local, align 4
  %v1_bf34 = add i32 %v2_bf2c, 12
  %v2_bf34 = inttoptr i32 %v1_bf34 to i8*
  %v3_bf34 = load i8, i8* %v2_bf34, align 1
  %v4_bf34 = zext i8 %v3_bf34 to i32
  %v4_bf38 = mul nuw nsw i32 %v4_bf30, 256
  %v5_bf38 = or i32 %v4_bf34, %v4_bf38
  store i32 %v5_bf38, i32* %r3.global-to-local, align 4
  %v2_bf3c = load i32, i32* @r4, align 4
  %v3_bf3c = add i32 %v2_bf3c, 20
  %v4_bf3c = inttoptr i32 %v3_bf3c to i8*
  store i8 %v3_bf34, i8* %v4_bf3c, align 1
  %v0_bf40 = load i32, i32* @r4, align 4
  %v1_bf40 = add i32 %v0_bf40, 20
  store i32 %v1_bf40, i32* @r6, align 4
  %v0_bf44 = load i32, i32* %r3.global-to-local, align 4
  %v3_bf44 = sdiv i32 %v0_bf44, 256
  store i32 %v3_bf44, i32* %r3.global-to-local, align 4
  %v1_bf48 = trunc i32 %v3_bf44 to i8
  %v3_bf48 = add i32 %v0_bf40, 21
  %v4_bf48 = inttoptr i32 %v3_bf48 to i8*
  store i8 %v1_bf48, i8* %v4_bf48, align 1
  %v0_bf4c = load i32, i32* @r6, align 4
  %v1_bf4c = add i32 %v0_bf4c, 13
  %v2_bf4c = inttoptr i32 %v1_bf4c to i8*
  %v3_bf4c = load i8, i8* %v2_bf4c, align 1
  %v4_bf4c = zext i8 %v3_bf4c to i32
  store i32 %v4_bf4c, i32* %r3.global-to-local, align 4
  %v0_bf50 = load i32, i32* %r2.global-to-local, align 4
  %v1_bf50 = add i32 %v0_bf50, 8
  %v2_bf50 = inttoptr i32 %v1_bf50 to i32*
  %v3_bf50 = load i32, i32* %v2_bf50, align 4
  store i32 %v3_bf50, i32* %r1.global-to-local, align 4
  %v1_bf54 = or i32 %v4_bf4c, 1
  store i32 %v1_bf54, i32* %r3.global-to-local, align 4
  %v1_bf58 = add i32 %v0_bf50, 15
  %v2_bf58 = inttoptr i32 %v1_bf58 to i8*
  %v3_bf58 = load i8, i8* %v2_bf58, align 1
  %v4_bf58 = zext i8 %v3_bf58 to i32
  store i32 %v4_bf58, i32* %ip.global-to-local, align 4
  %v1_bf5c = add i32 %v0_bf50, 14
  %v2_bf5c = inttoptr i32 %v1_bf5c to i8*
  %v3_bf5c = load i8, i8* %v2_bf5c, align 1
  %v4_bf5c = zext i8 %v3_bf5c to i32
  store i32 %v4_bf5c, i32* %r0.global-to-local, align 4
  %v2_bf60 = add i32 %v0_bf4c, 4
  %v3_bf60 = inttoptr i32 %v2_bf60 to i32*
  store i32 %v3_bf50, i32* %v3_bf60, align 4
  %v0_bf64 = load i32, i32* %r2.global-to-local, align 4
  %v1_bf64 = add i32 %v0_bf64, 4
  %v2_bf64 = inttoptr i32 %v1_bf64 to i32*
  %v3_bf64 = load i32, i32* %v2_bf64, align 4
  store i32 %v3_bf64, i32* %lr.global-to-local, align 4
  %v0_bf68 = load i32, i32* %r3.global-to-local, align 4
  %v1_bf68 = trunc i32 %v0_bf68 to i8
  %v2_bf68 = load i32, i32* @r6, align 4
  %v3_bf68 = add i32 %v2_bf68, 13
  %v4_bf68 = inttoptr i32 %v3_bf68 to i8*
  store i8 %v1_bf68, i8* %v4_bf68, align 1
  %v0_bf6c = load i32, i32* @r6, align 4
  %v1_bf6c = add i32 %v0_bf6c, 12
  %v2_bf6c = inttoptr i32 %v1_bf6c to i8*
  %v3_bf6c = load i8, i8* %v2_bf6c, align 1
  %v4_bf6c = zext i8 %v3_bf6c to i32
  store i32 %v4_bf6c, i32* %r2.global-to-local, align 4
  %v1_bf70 = add i32 %v0_bf6c, 13
  %v2_bf70 = inttoptr i32 %v1_bf70 to i8*
  %v3_bf70 = load i8, i8* %v2_bf70, align 1
  %v4_bf70 = zext i8 %v3_bf70 to i32
  %v0_bf74 = load i32, i32* %r0.global-to-local, align 4
  %v1_bf74 = load i32, i32* %ip.global-to-local, align 4
  %v4_bf74 = mul i32 %v1_bf74, 256
  %v5_bf74 = or i32 %v4_bf74, %v0_bf74
  store i32 %v5_bf74, i32* %r0.global-to-local, align 4
  %tmp101 = urem i8 %v3_bf6c, 16
  %v1_bf78 = zext i8 %tmp101 to i32
  %v3_bf7c = sdiv i32 %v5_bf74, 256
  store i32 %v3_bf7c, i32* %r1.global-to-local, align 4
  %v1_bf80 = or i32 %v1_bf78, 128
  store i32 %v1_bf80, i32* %r2.global-to-local, align 4
  %v1_bf84 = or i32 %v4_bf70, 16
  store i32 %v1_bf84, i32* %r3.global-to-local, align 4
  %v1_bf88 = trunc i32 %v3_bf7c to i8
  %v3_bf88 = add i32 %v0_bf6c, 3
  %v4_bf88 = inttoptr i32 %v3_bf88 to i8*
  store i8 %v1_bf88, i8* %v4_bf88, align 1
  %v0_bf8c = load i32, i32* %lr.global-to-local, align 4
  %v1_bf8c = load i32, i32* @r6, align 4
  %v2_bf8c = add i32 %v1_bf8c, 8
  %v3_bf8c = inttoptr i32 %v2_bf8c to i32*
  store i32 %v0_bf8c, i32* %v3_bf8c, align 4
  %v0_bf90 = load i32, i32* %r2.global-to-local, align 4
  %v1_bf90 = trunc i32 %v0_bf90 to i8
  %v2_bf90 = load i32, i32* @r6, align 4
  %v3_bf90 = add i32 %v2_bf90, 12
  %v4_bf90 = inttoptr i32 %v3_bf90 to i8*
  store i8 %v1_bf90, i8* %v4_bf90, align 1
  %v0_bf94 = load i32, i32* %r3.global-to-local, align 4
  %v1_bf94 = trunc i32 %v0_bf94 to i8
  %v2_bf94 = load i32, i32* @r6, align 4
  %v3_bf94 = add i32 %v2_bf94, 13
  %v4_bf94 = inttoptr i32 %v3_bf94 to i8*
  store i8 %v1_bf94, i8* %v4_bf94, align 1
  %v0_bf98 = load i32, i32* %r0.global-to-local, align 4
  %v1_bf98 = trunc i32 %v0_bf98 to i8
  %v2_bf98 = load i32, i32* @r6, align 4
  %v3_bf98 = add i32 %v2_bf98, 2
  %v4_bf98 = inttoptr i32 %v3_bf98 to i8*
  store i8 %v1_bf98, i8* %v4_bf98, align 1
  %v0_bf9c = call i32 @function_e7cc()
  %v1_bf9c = trunc i32 %v0_bf9c to i8
  store i32 %v0_bf9c, i32* %r0.global-to-local, align 4
  store i32 %v1_ba80, i32* %lr.global-to-local, align 4
  %v0_bfa4 = load i32, i32* @r6, align 4
  %v1_bfa4 = add i32 %v0_bfa4, 13
  %v2_bfa4 = inttoptr i32 %v1_bfa4 to i8*
  %v3_bfa4 = load i8, i8* %v2_bfa4, align 1
  %v4_bfa4 = zext i8 %v3_bfa4 to i32
  store i32 %v1_bfa8, i32* %r2.global-to-local, align 4
  %v1_bfac = and i32 %v4_bfa4, 223
  %v5_bfb0 = or i32 %v1_bfac, %v4_bfb0
  store i32 %v5_bfb0, i32* %r3.global-to-local, align 4
  %v1_bfb4 = trunc i32 %v5_bfb0 to i8
  store i8 %v1_bfb4, i8* %v2_bfa4, align 1
  store i32 %v1_baa0, i32* %r1.global-to-local, align 4
  %v0_bfbc = load i32, i32* @r6, align 4
  %v1_bfbc = add i32 %v0_bfbc, 13
  %v2_bfbc = inttoptr i32 %v1_bfbc to i8*
  %v3_bfbc = load i8, i8* %v2_bfbc, align 1
  %v4_bfbc = zext i8 %v3_bfbc to i32
  store i32 %v1_bfc0, i32* %r3.global-to-local, align 4
  %v1_bfc4 = and i32 %v4_bfbc, 239
  %v5_bfc8 = or i32 %v1_bfc4, %v4_bfc8
  store i32 %v5_bfc8, i32* %r2.global-to-local, align 4
  %v1_bfcc = trunc i32 %v5_bfc8 to i8
  store i8 %v1_bfcc, i8* %v2_bfbc, align 1
  store i32 %v1_bac0, i32* %ip.global-to-local, align 4
  %v0_bfd4 = load i32, i32* @r6, align 4
  %v1_bfd4 = add i32 %v0_bfd4, 13
  %v2_bfd4 = inttoptr i32 %v1_bfd4 to i8*
  %v3_bfd4 = load i8, i8* %v2_bfd4, align 1
  %v4_bfd4 = zext i8 %v3_bfd4 to i32
  store i32 %v1_bfd8, i32* %r2.global-to-local, align 4
  %v1_bfdc = and i32 %v4_bfd4, 247
  %v5_bfe0 = or i32 %v1_bfdc, %v4_bfe0
  store i32 %v5_bfe0, i32* %r3.global-to-local, align 4
  %v1_bfe4 = trunc i32 %v5_bfe0 to i8
  store i8 %v1_bfe4, i8* %v2_bfd4, align 1
  %v0_bfec = load i32, i32* @r6, align 4
  %v1_bfec = add i32 %v0_bfec, 13
  %v2_bfec = inttoptr i32 %v1_bfec to i8*
  %v3_bfec = load i8, i8* %v2_bfec, align 1
  %v4_bfec = zext i8 %v3_bfec to i32
  store i32 %v1_bff0, i32* %r3.global-to-local, align 4
  %v1_bff4 = and i32 %v4_bfec, 251
  %v5_bff8 = or i32 %v1_bff4, %v4_bff8
  store i32 %v5_bff8, i32* %r2.global-to-local, align 4
  %v1_bffc = trunc i32 %v5_bff8 to i8
  store i8 %v1_bffc, i8* %v2_bfec, align 1
  store i32 %v1_bb00, i32* %r1.global-to-local, align 4
  %v0_c004 = load i32, i32* @r6, align 4
  %v1_c004 = add i32 %v0_c004, 13
  %v2_c004 = inttoptr i32 %v1_c004 to i8*
  %v3_c004 = load i8, i8* %v2_c004, align 1
  %v4_c004 = zext i8 %v3_c004 to i32
  store i32 %v1_c008, i32* %r2.global-to-local, align 4
  %v1_c00c = and i32 %v4_c004, 253
  %v4_c010 = or i32 %v1_c00c, %v3_c010
  store i32 %v4_c010, i32* %r3.global-to-local, align 4
  %v1_c014 = trunc i32 %v4_c010 to i8
  store i8 %v1_c014, i8* %v2_c004, align 1
  %v0_c018 = load i32, i32* @r6, align 4
  %v1_c018 = add i32 %v0_c018, 13
  %v2_c018 = inttoptr i32 %v1_c018 to i8*
  %v3_c018 = load i8, i8* %v2_c018, align 1
  %v4_c018 = zext i8 %v3_c018 to i32
  %v0_c01c = load i32, i32* @r8, align 4
  %v1_c01c = urem i32 %v0_c01c, 2
  %v1_c020 = and i32 %v4_c018, 254
  store i32 %v1_c020, i32* %r2.global-to-local, align 4
  %v4_c02427 = udiv i32 %v0_bf9c, 256
  %v2_c028 = or i32 %v1_c020, %v1_c01c
  store i32 %v2_c028, i32* %r3.global-to-local, align 4
  %v1_c02c = trunc i32 %v4_c02427 to i8
  %v3_c02c = add i32 %v0_c018, 15
  %v4_c02c = inttoptr i32 %v3_c02c to i8*
  store i8 %v1_c02c, i8* %v4_c02c, align 1
  %v3_c030 = load i32, i32* @r6, align 4
  %v4_c030 = add i32 %v3_c030, 14
  %v5_c030 = inttoptr i32 %v4_c030 to i8*
  store i8 %v1_bf9c, i8* %v5_c030, align 1
  %v0_c034 = load i32, i32* %r3.global-to-local, align 4
  %v1_c034 = trunc i32 %v0_c034 to i8
  %v2_c034 = load i32, i32* @r6, align 4
  %v3_c034 = add i32 %v2_c034, 13
  %v4_c034 = inttoptr i32 %v3_c034 to i8*
  store i8 %v1_c034, i8* %v4_c034, align 1
  %v0_c038 = load i32, i32* @r4, align 4
  %v1_c038 = add i32 %v0_c038, 40
  store i32 %v1_c038, i32* %r0.global-to-local, align 4
  %v0_c03c = load i32, i32* @sb, align 4
  store i32 %v0_c03c, i32* @r1, align 4
  %v1_c040 = inttoptr i32 %v1_c038 to i8*
  %v2_c040 = call i32 @function_e94c(i8* %v1_c040)
  store i32 %v2_c040, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c044

dec_label_pc_c044:                                ; preds = %dec_label_pc_bbe4, %bb81
  %v3_c044 = load i32, i32* %stack_var_-40, align 4
  %v1_c048 = add i32 %v3_c044, 1
  store i32 %v1_c048, i32* %r3.global-to-local, align 4
  %v1_c04c = load i32, i32* @fp, align 4
  %v9_c04c = icmp eq i32 %v1_c048, %v1_c04c
  store i1 %v9_c04c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_c048, i32* %stack_var_-40, align 4
  %v5_c054 = icmp slt i32 %v1_c048, %v1_c04c
  br i1 %v5_c054, label %dec_label_pc_bbd4, label %dec_label_pc_c058

dec_label_pc_c058:                                ; preds = %dec_label_pc_c044, %.thread18
  %v0_c06012 = phi i32 [ %v0_bba8, %.thread18 ], [ %v1_c04c, %dec_label_pc_c044 ]
  %v0_c058 = load i32, i32* @sb, align 4
  %v1_c058 = add i32 %v0_c058, 40
  store i32 %v1_c058, i32* @sl, align 4
  %v1_c05c = add i32 %v0_c058, 20
  store i32 %v1_c05c, i32* @r7, align 4
  %v2_c0ac = icmp eq i32 %v1_bb58, 0
  %v6_c08c = inttoptr i32 %v2_b9c8 to i32*
  %v3_c094 = icmp eq i32 %v3_bbb0, 65535
  br label %dec_label_pc_c060

dec_label_pc_c060:                                ; preds = %dec_label_pc_c0bc, %dec_label_pc_c058
  %v0_c060 = phi i32 [ %v1_c19c, %dec_label_pc_c0bc ], [ %v0_c06012, %dec_label_pc_c058 ]
  %v2_c060 = icmp eq i32 %v0_c060, 0
  store i1 %v2_c060, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r1.global-to-local, align 4
  %tmp82 = icmp slt i32 %v0_c060, 1
  br label %dec_label_pc_c068

dec_label_pc_c068:                                ; preds = %dec_label_pc_c068, %dec_label_pc_c060
  br i1 %tmp82, label %dec_label_pc_c068, label %dec_label_pc_c06c

dec_label_pc_c06c:                                ; preds = %dec_label_pc_c068
  %v0_c06c = load i32, i32* @r7, align 4
  %tmp83 = mul i32 %v0_c06c, 256
  %v1_c074 = and i32 %tmp83, 65280
  %tmp84 = udiv i32 %v0_c06c, 256
  %v4_c078 = urem i32 %tmp84, 256
  %v5_c078 = or i32 %v4_c078, %v1_c074
  store i32 %v5_c078, i32* @r8, align 4
  store i32 %v2_b9c8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 65536, i32* %r3.global-to-local, align 4
  store i32 %v3_bbb0, i32* %ip.global-to-local, align 4
  %v7_c08c = load i32, i32* %v6_c08c, align 4
  store i32 %v7_c08c, i32* @r4, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i1 %v3_c094, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-40, align 4
  store i32 0, i32* @r6, align 4
  %v1_c0a0 = add i32 %v7_c08c, 20
  store i32 %v1_c0a0, i32* @r5, align 4
  br i1 %v3_c094, label %dec_label_pc_c1c8, label %dec_label_pc_c0a8

dec_label_pc_c0a8:                                ; preds = %dec_label_pc_c1a8, %dec_label_pc_c06c
  %v0_c0b0 = phi i32 [ %v7_c1b4, %dec_label_pc_c1a8 ], [ %v7_c08c, %dec_label_pc_c06c ]
  store i32 %v1_bb58, i32* %lr.global-to-local, align 4
  store i1 %v2_c0ac, i1* %cpsr_z.global-to-local, align 1
  %v1_c0b0 = add i32 %v0_c0b0, 40
  store i32 %v1_c0b0, i32* %r0.global-to-local, align 4
  %v0_c0b4 = load i32, i32* @sb, align 4
  store i32 %v0_c0b4, i32* @r1, align 4
  br i1 %v2_c0ac, label %dec_label_pc_c0bc, label %dec_label_pc_c1ec

dec_label_pc_c0bc:                                ; preds = %dec_label_pc_c0a8, %dec_label_pc_c1c8, %dec_label_pc_c1ec
  %v2_c0bc = phi i32 [ %v0_c0b0, %dec_label_pc_c0a8 ], [ %v0_c1e0, %dec_label_pc_c1c8 ], [ %v2_c0bc.pre, %dec_label_pc_c1ec ]
  %v0_c0bc = load i32, i32* @r6, align 4
  %v1_c0bc = trunc i32 %v0_c0bc to i8
  %v3_c0bc = add i32 %v2_c0bc, 10
  %v4_c0bc = inttoptr i32 %v3_c0bc to i8*
  store i8 %v1_c0bc, i8* %v4_c0bc, align 1
  %v0_c0c0 = load i32, i32* @r6, align 4
  %v1_c0c0 = trunc i32 %v0_c0c0 to i8
  %v2_c0c0 = load i32, i32* @r4, align 4
  %v3_c0c0 = add i32 %v2_c0c0, 11
  %v4_c0c0 = inttoptr i32 %v3_c0c0 to i8*
  store i8 %v1_c0c0, i8* %v4_c0c0, align 1
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_c0c8 = load i32, i32* @r4, align 4
  store i32 %v0_c0c8, i32* @r0, align 4
  %v2_c0cc = call i32 @function_d0b8(i32 %v0_c0c8, i32 20)
  %v3_c0cc = trunc i32 %v2_c0cc to i8
  store i32 %v2_c0cc, i32* %r0.global-to-local, align 4
  %v3_c0d0 = load i32, i32* %stack_var_-40, align 4
  store i32 %v2_b9b8, i32* %r2.global-to-local, align 4
  %v3_c0d8 = mul i32 %v3_c0d0, 16
  %v2_c0dc = add i32 %v3_c0d8, %v2_b9b8
  store i32 %v2_c0dc, i32* %r1.global-to-local, align 4
  %v1_c0e0 = add i32 %v2_c0dc, 4
  %v2_c0e0 = inttoptr i32 %v1_c0e0 to i32*
  %v3_c0e0 = load i32, i32* %v2_c0e0, align 4
  %v3_c0e4 = mul i32 %v3_c0e0, 65536
  store i32 %v3_c0e4, i32* %ip.global-to-local, align 4
  %tmp85 = mul i32 %v3_c0e0, 256
  %v1_c0ec = and i32 %tmp85, 65280
  %tmp86 = udiv i32 %v3_c0e0, 256
  %v4_c0f0 = urem i32 %tmp86, 256
  %v5_c0f0 = or i32 %v4_c0f0, %v1_c0ec
  store i32 %v5_c0f0, i32* %r2.global-to-local, align 4
  %v1_c0f4 = add i32 %v3_c0e0, 1
  store i32 %v1_c0f4, i32* %r3.global-to-local, align 4
  store i32 %v1_c0f4, i32* %v2_c0e0, align 4
  %v0_c0fc = load i32, i32* %r2.global-to-local, align 4
  %v1_c0fc = load i32, i32* @r5, align 4
  %v2_c0fc = add i32 %v1_c0fc, 4
  %v3_c0fc = inttoptr i32 %v2_c0fc to i32*
  store i32 %v0_c0fc, i32* %v3_c0fc, align 4
  %v0_c100 = load i32, i32* %r1.global-to-local, align 4
  %v1_c100 = add i32 %v0_c100, 8
  %v2_c100 = inttoptr i32 %v1_c100 to i32*
  %v3_c100 = load i32, i32* %v2_c100, align 4
  %tmp87 = mul i32 %v3_c100, 256
  %v1_c10c = and i32 %tmp87, 65280
  %tmp88 = udiv i32 %v3_c100, 256
  %v4_c110 = urem i32 %tmp88, 256
  %v5_c110 = or i32 %v4_c110, %v1_c10c
  store i32 %v5_c110, i32* %r2.global-to-local, align 4
  %v4_c11428 = udiv i32 %v2_c0cc, 256
  %v1_c118 = trunc i32 %v4_c11428 to i8
  %v2_c118 = load i32, i32* @r4, align 4
  %v3_c118 = add i32 %v2_c118, 11
  %v4_c118 = inttoptr i32 %v3_c118 to i8*
  store i8 %v1_c118, i8* %v4_c118, align 1
  %v3_c11c = load i32, i32* @r4, align 4
  %v4_c11c = add i32 %v3_c11c, 10
  %v5_c11c = inttoptr i32 %v4_c11c to i8*
  store i8 %v3_c0cc, i8* %v5_c11c, align 1
  %v0_c120 = load i32, i32* %r2.global-to-local, align 4
  %v1_c120 = load i32, i32* @r5, align 4
  %v2_c120 = add i32 %v1_c120, 8
  %v3_c120 = inttoptr i32 %v2_c120 to i32*
  store i32 %v0_c120, i32* %v3_c120, align 4
  %v0_c124 = load i32, i32* @r5, align 4
  store i32 %v0_c124, i32* @r1, align 4
  %v0_c128 = load i32, i32* @r8, align 4
  store i32 %v0_c128, i32* %r2.global-to-local, align 4
  %v0_c12c = load i32, i32* @r7, align 4
  store i32 %v0_c12c, i32* %r3.global-to-local, align 4
  %v0_c130 = load i32, i32* @r4, align 4
  store i32 %v0_c130, i32* %r0.global-to-local, align 4
  %v0_c134 = load i32, i32* @r6, align 4
  %v1_c134 = trunc i32 %v0_c134 to i8
  %v3_c134 = add i32 %v0_c124, 16
  %v4_c134 = inttoptr i32 %v3_c134 to i8*
  store i8 %v1_c134, i8* %v4_c134, align 1
  %v0_c138 = load i32, i32* @r6, align 4
  %v1_c138 = trunc i32 %v0_c138 to i8
  %v2_c138 = load i32, i32* @r5, align 4
  %v3_c138 = add i32 %v2_c138, 17
  %v4_c138 = inttoptr i32 %v3_c138 to i8*
  store i8 %v1_c138, i8* %v4_c138, align 1
  %v4_c13c = call i32 @function_d114(i32 %v0_c130, i32 %v0_c124, i32 %v0_c128, i32 %v0_c12c)
  %v5_c13c = trunc i32 %v4_c13c to i8
  store i32 %v4_c13c, i32* %r0.global-to-local, align 4
  %v4_c14029 = udiv i32 %v4_c13c, 256
  %v1_c144 = trunc i32 %v4_c14029 to i8
  %v2_c144 = load i32, i32* @r5, align 4
  %v3_c144 = add i32 %v2_c144, 17
  %v4_c144 = inttoptr i32 %v3_c144 to i8*
  store i8 %v1_c144, i8* %v4_c144, align 1
  %v3_c148 = load i32, i32* @r5, align 4
  %v4_c148 = add i32 %v3_c148, 16
  %v5_c148 = inttoptr i32 %v4_c148 to i8*
  store i8 %v5_c13c, i8* %v5_c148, align 1
  %v3_c14c = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_c14c, i32* %r3.global-to-local, align 4
  %v0_c150 = load i32, i32* @r4, align 4
  %v1_c150 = add i32 %v0_c150, 20
  %v2_c150 = inttoptr i32 %v1_c150 to i32*
  %v3_c150 = load i32, i32* %v2_c150, align 4
  %v5_c158 = mul i32 %v3_c14c, 24
  %v3_c160 = udiv i32 %v3_c150, 65536
  store i32 %v3_c160, i32* %r2.global-to-local, align 4
  %v2_c164 = add i32 %v5_c158, %arg2
  store i32 %v2_c164, i32* %ip.global-to-local, align 4
  %v3_c1684 = udiv i32 %v3_c150, 16777216
  %v1_c16c = trunc i32 %v3_c1684 to i8
  %v3_c16c = add i32 %v2_c164, 3
  %v4_c16c = inttoptr i32 %v3_c16c to i8*
  store i8 %v1_c16c, i8* %v4_c16c, align 1
  %v0_c170 = load i32, i32* %r2.global-to-local, align 4
  %v1_c170 = trunc i32 %v0_c170 to i8
  %v2_c170 = load i32, i32* %ip.global-to-local, align 4
  %v3_c170 = add i32 %v2_c170, 2
  %v4_c170 = inttoptr i32 %v3_c170 to i8*
  store i8 %v1_c170, i8* %v4_c170, align 1
  %v0_c174 = load i32, i32* @r4, align 4
  store i32 %v0_c174, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 %v3_bb68, i32* %r0.global-to-local, align 4
  %v0_c180 = load i32, i32* @sl, align 4
  store i32 %v0_c180, i32* %r2.global-to-local, align 4
  store i32 16, i32* @r4, align 4
  %v0_c188 = load i32, i32* %ip.global-to-local, align 4
  %v6_c190 = inttoptr i32 %v0_c174 to i32*
  %v7_c190 = call i32 @function_1331c(i32 %v3_bb68, i32* %v6_c190, i32 %v0_c180, i32 16384, i32 %v0_c188, i32 16)
  %v3_c194 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_c194, i32* %r3.global-to-local, align 4
  %v1_c198 = add i32 %v3_c194, 1
  store i32 %v1_c198, i32* %r0.global-to-local, align 4
  %v1_c19c = load i32, i32* @fp, align 4
  %v9_c19c = icmp eq i32 %v1_c198, %v1_c19c
  store i1 %v9_c19c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_c198, i32* %stack_var_-40, align 4
  %v6_c1a4 = icmp slt i32 %v1_c198, %v1_c19c
  br i1 %v6_c1a4, label %dec_label_pc_c1a8, label %dec_label_pc_c060

dec_label_pc_c1a8:                                ; preds = %dec_label_pc_c0bc
  store i32 %v2_b9c8, i32* %r2.global-to-local, align 4
  store i32 65536, i32* %r3.global-to-local, align 4
  store i32 %v3_bbb0, i32* %ip.global-to-local, align 4
  %v4_c1b4 = mul i32 %v1_c198, 4
  %v5_c1b4 = add i32 %v4_c1b4, %v2_b9c8
  %v6_c1b4 = inttoptr i32 %v5_c1b4 to i32*
  %v7_c1b4 = load i32, i32* %v6_c1b4, align 4
  store i32 %v7_c1b4, i32* @r4, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i1 %v3_c094, i1* %cpsr_z.global-to-local, align 1
  %v1_c1c0 = add i32 %v7_c1b4, 20
  store i32 %v1_c1c0, i32* @r5, align 4
  br i1 %v3_c094, label %dec_label_pc_c1c8, label %dec_label_pc_c0a8

dec_label_pc_c1c8:                                ; preds = %dec_label_pc_c1a8, %dec_label_pc_c06c
  %v0_c1c8 = call i32 @function_e7cc()
  %v1_c1c8 = trunc i32 %v0_c1c8 to i8
  store i32 %v1_bb58, i32* %lr.global-to-local, align 4
  %v4_c1d0 = sdiv i32 %v0_c1c8, 256
  store i32 %v4_c1d0, i32* %r3.global-to-local, align 4
  store i1 %v2_c0ac, i1* %cpsr_z.global-to-local, align 1
  %v3_c1d8 = load i32, i32* @r4, align 4
  %v4_c1d8 = add i32 %v3_c1d8, 4
  %v5_c1d8 = inttoptr i32 %v4_c1d8 to i8*
  store i8 %v1_c1c8, i8* %v5_c1d8, align 1
  %v0_c1dc = load i32, i32* %r3.global-to-local, align 4
  %v1_c1dc = trunc i32 %v0_c1dc to i8
  %v2_c1dc = load i32, i32* @r4, align 4
  %v3_c1dc = add i32 %v2_c1dc, 5
  %v4_c1dc = inttoptr i32 %v3_c1dc to i8*
  store i8 %v1_c1dc, i8* %v4_c1dc, align 1
  %v0_c1e0 = load i32, i32* @r4, align 4
  %v1_c1e0 = add i32 %v0_c1e0, 40
  store i32 %v1_c1e0, i32* %r0.global-to-local, align 4
  %v0_c1e4 = load i32, i32* @sb, align 4
  store i32 %v0_c1e4, i32* @r1, align 4
  %v0_c1e8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c1e8, label %dec_label_pc_c0bc, label %dec_label_pc_c1ec

dec_label_pc_c1ec:                                ; preds = %dec_label_pc_c0a8, %dec_label_pc_c1c8
  %v0_c1ec = phi i32 [ %v1_c0b0, %dec_label_pc_c0a8 ], [ %v1_c1e0, %dec_label_pc_c1c8 ]
  %v1_c1ec = inttoptr i32 %v0_c1ec to i8*
  %v2_c1ec = call i32 @function_e94c(i8* %v1_c1ec)
  store i32 %v2_c1ec, i32* %r0.global-to-local, align 4
  %v2_c0bc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c0bc

; uselistorder directives
  uselistorder i32 %v0_c1e0, { 1, 0 }
  uselistorder i32 %v7_c1b4, { 1, 2, 0 }
  uselistorder i32 %v1_c19c, { 1, 2, 0 }
  uselistorder i32 %v1_c198, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v4_c13c, { 0, 2, 1 }
  uselistorder i32 %v0_c124, { 1, 0, 2 }
  uselistorder i32 %v3_c100, { 1, 0 }
  uselistorder i32 %v3_c0e0, { 3, 2, 0, 1 }
  uselistorder i32 %v2_c0cc, { 0, 2, 1 }
  uselistorder i32 %v0_c0b0, { 1, 0 }
  uselistorder i32 %v0_c06c, { 1, 0 }
  uselistorder i32 %v0_c060, { 1, 0 }
  uselistorder i1 %v3_c094, { 2, 3, 1, 0 }
  uselistorder i32 %v1_c048, { 1, 0, 2, 3 }
  uselistorder i32 %v0_bf9c, { 0, 2, 1 }
  uselistorder i32 %v3_bf7c, { 1, 0 }
  uselistorder i32 %v0_bf50, { 1, 0, 2 }
  uselistorder i32 %v3_bf44, { 1, 0 }
  uselistorder i32 %v3_bed8, { 1, 0 }
  uselistorder i32 %v0_becc, { 1, 0 }
  uselistorder i32 %v3_be54, { 1, 0 }
  uselistorder i32 %v2_be40, { 1, 0 }
  uselistorder i32 %v3_be24, { 1, 0, 2, 3 }
  uselistorder i32 %v2_be1c, { 1, 0 }
  uselistorder i32 %v3_bdf8, { 1, 0, 2, 3 }
  uselistorder i32 %v3_bdf0, { 1, 0 }
  uselistorder i32 %v4_bdd8, { 1, 0 }
  uselistorder i32 %v0_bdd4, { 0, 2, 1 }
  uselistorder i1 %v7_bd44, { 1, 0 }
  uselistorder i32 %v7_bd3c, { 0, 2, 1, 3 }
  uselistorder i32 %v5_bd88, { 1, 0 }
  uselistorder i1 %v9_bd6c, { 1, 0 }
  uselistorder i32 %v4_bd80, { 1, 0 }
  uselistorder i32 %v4_bd7c, { 1, 0 }
  uselistorder i32 %v8_bc90, { 1, 2, 0, 3 }
  uselistorder i32 %v3_bc7c, { 1, 0 }
  uselistorder i32 %v0_bc6c, { 2, 0, 1, 3 }
  uselistorder i1 %v7_bbf4, { 1, 0 }
  uselistorder i32 %v3_bbf0, { 1, 2, 0, 3 }
  uselistorder i32 %v1_c008, { 1, 0 }
  uselistorder i32 %v1_bff0, { 1, 0 }
  uselistorder i32 %v1_bfd8, { 1, 0 }
  uselistorder i32 %v1_bfc0, { 1, 0 }
  uselistorder i32 %v1_bfa8, { 1, 0 }
  uselistorder i32 %v5_bd84, { 1, 0 }
  uselistorder i32 %v3_bcd893, { 1, 0 }
  uselistorder i1 %v2_bd9c, { 1, 0 }
  uselistorder i32 %v1_bd98, { 1, 0 }
  uselistorder i32 %v4_bd94, { 2, 0, 1 }
  uselistorder i32 %v4_bd78, { 1, 0 }
  uselistorder i1 %v3_bcc0, { 1, 0 }
  uselistorder i32 %v8_bbbc, { 2, 1, 0 }
  uselistorder i32 %v8_bbb8, { 1, 2, 0 }
  uselistorder i32 %v3_bbb0, { 2, 3, 4, 1, 0 }
  uselistorder i32 %v0_bbac, { 0, 1, 3, 2 }
  uselistorder i1 %v7_bba0, { 1, 0 }
  uselistorder i1 %v7_bb70, { 1, 0 }
  uselistorder i32 %v3_bb6c, { 2, 0, 1 }
  uselistorder i32 %v3_bb68, { 5, 6, 1, 3, 4, 7, 8, 2, 0, 9 }
  uselistorder i32 %v1_bb58, { 1, 3, 2, 0 }
  uselistorder i32 %v1_bb00, { 1, 0 }
  uselistorder i32 %v1_bac0, { 1, 0 }
  uselistorder i32 %v1_baa0, { 1, 0 }
  uselistorder i32 %v1_ba80, { 1, 0 }
  uselistorder i32 %v1_ba48, { 1, 0 }
  uselistorder i32 %v2_b9c8, { 0, 4, 5, 2, 1, 3 }
  uselistorder i32 %v2_b9b8, { 0, 7, 1, 4, 2, 5, 3, 6 }
  uselistorder i32 %v1_b99c, { 2, 1, 0 }
  uselistorder i32* %stack_var_-40, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 1, 16, 15 }
  uselistorder i32* %stack_var_-60, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 0 }
  uselistorder i32* %r2.global-to-local, { 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 0 }
  uselistorder i32* %r1.global-to-local, { 41, 42, 43, 44, 45, 46, 47, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 18, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 33, 35, 37, 36, 38, 40, 39, 0 }
  uselistorder i32* %r0.global-to-local, { 53, 52, 54, 55, 57, 56, 61, 58, 59, 62, 60, 8, 1, 2, 3, 4, 5, 6, 7, 12, 9, 10, 11, 13, 15, 14, 17, 16, 20, 18, 21, 22, 19, 23, 25, 24, 26, 27, 29, 28, 33, 30, 31, 32, 34, 36, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 0 }
  uselistorder i32* %lr.global-to-local, { 9, 10, 0, 1, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32* %ip.global-to-local, { 31, 32, 33, 34, 35, 36, 37, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30 }
  uselistorder i1* %cpsr_z.global-to-local, { 19, 20, 21, 22, 23, 24, 25, 26, 0, 3, 1, 2, 4, 5, 6, 7, 9, 18, 10, 11, 8, 12, 13, 14, 15, 16, 17 }
  uselistorder i32 768, { 0, 2, 1, 3 }
  uselistorder i32 %arg2, { 0, 1, 3, 2, 4, 5 }
  uselistorder label %dec_label_pc_c1ec, { 1, 0 }
  uselistorder label %dec_label_pc_c0bc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_c044, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %.thread6, { 2, 1, 0 }
  uselistorder label %bb77, { 1, 0 }
  uselistorder label %dec_label_pc_bdcc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_bd04, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_bcb4, { 1, 0 }
}

define i32 @function_c1f8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_c1f8:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %v1_c1fc = urem i32 %arg1, 256
  store i32 %v1_c1fc, i32* @fp, align 4
  store i32 %arg2, i32* @sb, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  %v1_c214 = urem i32 %arg3, 256
  store i32 %v1_c214, i32* @r4, align 4
  %v2_c218 = call i32 @function_1366c(i32 %v1_c1fc, i32 4)
  %v0_c21c = load i32, i32* @r5, align 4
  store i32 %v0_c21c, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c22c = load i32, i32* @r4, align 4
  %v5_c230 = inttoptr i32 %v0_c21c to i32*
  %v6_c230 = call i32 @function_85e0(i32 %v0_c22c, i32* %v5_c230, i32 2, i32 0)
  %v1_c23c = urem i32 %v6_c230, 256
  store i32 %v1_c23c, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_c248 = load i32, i32* @r5, align 4
  store i32 %v0_c248, i32* %r1.global-to-local, align 4
  %v0_c24c = load i32, i32* @r4, align 4
  %v5_c250 = trunc i32 %v6_c230 to i8
  %v6_c254 = inttoptr i32 %v0_c248 to i32*
  %v7_c254 = call i32 @function_85e0(i32 %v0_c24c, i32* %v6_c254, i32 3, i32 65535)
  %v0_c258 = load i32, i32* @r5, align 4
  store i32 %v0_c258, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_c254, i32* @r8, align 4
  %v0_c268 = load i32, i32* @r4, align 4
  %v4_c26c = inttoptr i32 %v0_c258 to i32*
  %v5_c26c = call i32 @function_85e0(i32 %v0_c268, i32* %v4_c26c, i32 4, i32 64)
  %v1_c274 = urem i32 %v5_c26c, 256
  store i32 %v1_c274, i32* %ip.global-to-local, align 4
  %v0_c278 = load i32, i32* @r5, align 4
  store i32 %v0_c278, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c284 = load i32, i32* @r4, align 4
  %v6_c28c = inttoptr i32 %v0_c278 to i32*
  %v7_c28c = call i32 @function_85e0(i32 %v0_c284, i32* %v6_c28c, i32 5, i32 0)
  %v1_c298 = urem i32 %v7_c28c, 256
  store i32 %v1_c298, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_c2a4 = load i32, i32* @r5, align 4
  store i32 %v0_c2a4, i32* %r1.global-to-local, align 4
  %v0_c2a8 = load i32, i32* @r4, align 4
  %v5_c2b0 = inttoptr i32 %v0_c2a4 to i32*
  %v6_c2b0 = call i32 @function_85e0(i32 %v0_c2a8, i32* %v5_c2b0, i32 6, i32 65535)
  %v0_c2b8 = load i32, i32* @r5, align 4
  store i32 %v0_c2b8, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_c2b0, i32* @r7, align 4
  %v0_c2c8 = load i32, i32* @r4, align 4
  %v4_c2cc = inttoptr i32 %v0_c2b8 to i32*
  %v5_c2cc = call i32 @function_85e0(i32 %v0_c2c8, i32* %v4_c2cc, i32 7, i32 65535)
  %v0_c2d4 = load i32, i32* @r5, align 4
  store i32 %v0_c2d4, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 %v5_c2cc, i32* @r6, align 4
  %v0_c2e4 = load i32, i32* @r4, align 4
  %v4_c2e8 = inttoptr i32 %v0_c2d4 to i32*
  %v5_c2e8 = call i32 @function_85e0(i32 %v0_c2e4, i32* %v4_c2e8, i32 17, i32 65535)
  %v0_c2f4 = load i32, i32* @r5, align 4
  store i32 %v0_c2f4, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 18, i32* %r2.global-to-local, align 4
  %v0_c300 = load i32, i32* @r4, align 4
  %v5_c304 = inttoptr i32 %v0_c2f4 to i32*
  %v6_c304 = call i32 @function_85e0(i32 %v0_c300, i32* %v5_c304, i32 18, i32 65535)
  %v0_c308 = load i32, i32* @r5, align 4
  store i32 %v0_c308, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c318 = load i32, i32* @r4, align 4
  %v5_c31c = inttoptr i32 %v0_c308 to i32*
  %v6_c31c = call i32 @function_85e0(i32 %v0_c318, i32* %v5_c31c, i32 11, i32 0)
  %v0_c320 = load i32, i32* @r5, align 4
  store i32 %v0_c320, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_c330 = load i32, i32* @r4, align 4
  %v5_c334 = inttoptr i32 %v0_c320 to i32*
  %v6_c334 = call i32 @function_85e0(i32 %v0_c330, i32* %v5_c334, i32 12, i32 1)
  %v0_c338 = load i32, i32* @r5, align 4
  store i32 %v0_c338, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c348 = load i32, i32* @r4, align 4
  %v5_c34c = inttoptr i32 %v0_c338 to i32*
  %v6_c34c = call i32 @function_85e0(i32 %v0_c348, i32* %v5_c34c, i32 13, i32 0)
  %v0_c350 = load i32, i32* @r5, align 4
  store i32 %v0_c350, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c360 = load i32, i32* @r4, align 4
  %v5_c364 = inttoptr i32 %v0_c350 to i32*
  %v6_c364 = call i32 @function_85e0(i32 %v0_c360, i32* %v5_c364, i32 14, i32 0)
  %v0_c368 = load i32, i32* @r5, align 4
  store i32 %v0_c368, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c378 = load i32, i32* @r4, align 4
  %v5_c37c = inttoptr i32 %v0_c368 to i32*
  %v6_c37c = call i32 @function_85e0(i32 %v0_c378, i32* %v5_c37c, i32 15, i32 0)
  %v0_c380 = load i32, i32* @r5, align 4
  store i32 %v0_c380, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c390 = load i32, i32* @r4, align 4
  %v5_c394 = inttoptr i32 %v0_c380 to i32*
  %v6_c394 = call i32 @function_85e0(i32 %v0_c390, i32* %v5_c394, i32 16, i32 0)
  %v0_c398 = load i32, i32* @r5, align 4
  store i32 %v0_c398, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  %v0_c3a8 = load i32, i32* @r4, align 4
  %v5_c3ac = inttoptr i32 %v0_c398 to i32*
  %v6_c3ac = call i32 @function_85e0(i32 %v0_c3a8, i32* %v5_c3ac, i32 0, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_c3bc = load i32, i32* @r5, align 4
  store i32 %v0_c3bc, i32* %r1.global-to-local, align 4
  %v0_c3c0 = load i32, i32* @r4, align 4
  %v4_c3c4 = inttoptr i32 %v0_c3bc to i32*
  %v5_c3c4 = call i32 @function_85e0(i32 %v0_c3c0, i32* %v4_c3c4, i32 1, i32 1)
  %v2_c3d0 = load i32, i32* @global_var_1da7c.49, align 4
  store i32 %v2_c3d0, i32* %r3.global-to-local, align 4
  %v1_c3d4 = urem i32 %v5_c3c4, 256
  store i32 %v1_c3d4, i32* %ip.global-to-local, align 4
  %v0_c3d8 = load i32, i32* @r5, align 4
  store i32 %v0_c3d8, i32* %r1.global-to-local, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_c3e0 = load i32, i32* @r4, align 4
  %v5_c3e8 = inttoptr i32 %v0_c3d8 to i32*
  %v6_c3e8 = call i32 @function_8574(i32 %v0_c3e0, i32* %v5_c3e8, i32 25, i32 %v2_c3d0, i32 %v1_c3d4)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_c3fc = call i32 @function_13380(i32 2, i32 3, i32 6)
  %v7_c400 = icmp eq i32 %v3_c3fc, -1
  store i1 %v7_c400, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_c400, label %dec_label_pc_c838, label %dec_label_pc_c40c

dec_label_pc_c40c:                                ; preds = %dec_label_pc_c1f8
  store i32 1, i32* %stack_var_-40, align 4
  %v6_c414 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v6_c414, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v6_c428 = call i32 @function_13350(i32 %v3_c3fc, i32 0, i32 3, i32* nonnull %stack_var_-40, i32 4)
  %v7_c42c = icmp eq i32 %v6_c428, -1
  store i1 %v7_c42c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_c42c, label %dec_label_pc_c830, label %dec_label_pc_c434

dec_label_pc_c434:                                ; preds = %dec_label_pc_c40c
  %v0_c434 = load i32, i32* @r8, align 4
  %v0_c438 = load i32, i32* @r7, align 4
  %v0_c43c = load i32, i32* @r6, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_c444 = urem i32 %v0_c434, 65536
  store i32 %v3_c444, i32* %r2.global-to-local, align 4
  %v3_c448 = urem i32 %v0_c438, 65536
  store i32 %v3_c448, i32* %r3.global-to-local, align 4
  %v3_c44c = urem i32 %v0_c43c, 65536
  store i32 %v3_c44c, i32* %ip.global-to-local, align 4
  %v0_c450 = load i32, i32* @fp, align 4
  %v2_c450 = icmp eq i32 %v0_c450, 0
  store i1 %v2_c450, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-40, align 4
  %tmp75 = icmp slt i32 %v0_c450, 1
  br i1 %tmp75, label %dec_label_pc_c950, label %dec_label_pc_c468

dec_label_pc_c468:                                ; preds = %dec_label_pc_c434
  %v1_c470 = add i32 %v6_c3ac, 40
  %tmp76 = mul i32 %v1_c470, 256
  %v1_c484 = urem i32 %v0_c438, 256
  %v1_c488 = and i32 %tmp76, 65280
  %v3_c48c = mul nuw nsw i32 %v1_c484, 256
  %v1_c494 = urem i32 %v0_c43c, 256
  %tmp77 = udiv i32 %v0_c43c, 256
  %v3_c498 = urem i32 %tmp77, 256
  %tmp78 = udiv i32 %v1_c470, 256
  %v4_c49c = urem i32 %tmp78, 256
  %v5_c49c = or i32 %v4_c49c, %v1_c488
  store i32 %v5_c49c, i32* @lr, align 4
  %tmp79 = udiv i32 %v0_c438, 256
  %v4_c4a0 = urem i32 %tmp79, 256
  %v5_c4a0 = or i32 %v4_c4a0, %v3_c48c
  store i32 %v5_c4a0, i32* @sl, align 4
  %v4_c4a4 = mul nuw nsw i32 %v1_c494, 256
  %v5_c4a4 = or i32 %v4_c4a4, %v3_c498
  store i32 %v5_c4a4, i32* @r6, align 4
  %tmp80 = udiv i32 %v0_c434, 256
  %v3_c4b4 = urem i32 %tmp80, 256
  %v1_c4b8 = urem i32 %v0_c434, 256
  %tmp81 = mul i32 %v5_c2e8, 256
  %v1_c4c0 = and i32 %tmp81, 65280
  %v1_c4c4 = urem i32 %v6_c31c, 2
  %v1_c4c8 = urem i32 %v6_c334, 2
  %v1_c4cc = urem i32 %v6_c34c, 2
  %tmp82 = udiv i32 %v5_c2e8, 256
  %v4_c4d0 = urem i32 %tmp82, 256
  %v5_c4d0 = or i32 %v4_c4d0, %v1_c4c0
  store i32 %v5_c4d0, i32* @r8, align 4
  %v1_c4f0 = urem i32 %v6_c364, 2
  %v1_c4f4 = urem i32 %v6_c37c, 2
  %v1_c4f8 = urem i32 %v6_c394, 2
  %v1_c4fc = urem i32 %v6_c34c, 256
  %v4_c500 = mul nuw nsw i32 %v1_c4b8, 256
  %v5_c500 = or i32 %v4_c500, %v3_c4b4
  store i32 %v5_c500, i32* @r5, align 4
  %v3_c51425 = udiv i32 %v1_c488, 256
  store i32 %v3_c51425, i32* %r3.global-to-local, align 4
  store i32 %v1_c4b8, i32* %ip.global-to-local, align 4
  store i32 %v1_c484, i32* %r1.global-to-local, align 4
  store i32 %v1_c494, i32* %r2.global-to-local, align 4
  %v5_c530 = trunc i32 %v0_c438 to i8
  store i32 0, i32* @r4, align 4
  %sext8 = mul i32 %v5_c26c, 16777216
  %v4_c58c = sdiv i32 %sext8, 16777216
  %sext9 = mul i32 %v0_c434, 16777216
  %v4_c598 = sdiv i32 %sext9, 16777216
  %sext10 = mul i32 %tmp78, 16777216
  %v4_c5ac = sdiv i32 %sext10, 16777216
  %sext11 = mul i32 %v1_c470, 16777216
  %v4_c5b0 = sdiv i32 %sext11, 16777216
  %tmp = sub nsw i32 0, %v1_c4c4
  %v4_c600 = and i32 %tmp, 32
  %tmp93 = sub nsw i32 0, %v1_c4c8
  %v4_c614 = and i32 %tmp93, 16
  %tmp94 = sub nsw i32 0, %v1_c4cc
  %v4_c628 = and i32 %tmp94, 8
  %tmp95 = sub nsw i32 0, %v1_c4f0
  %v4_c63c = and i32 %tmp95, 4
  %tmp96 = sub nsw i32 0, %v1_c4f4
  %v3_c650 = and i32 %tmp96, 2
  %sext12 = mul i32 %v0_c43c, 16777216
  %v7_c680 = sdiv i32 %sext12, 16777216
  %v1_c594 = trunc i32 %v4_c58c to i8
  %extract.t = trunc i32 %v4_c598 to i8
  %v3_c680 = sext i8 %v5_c530 to i32
  %v2_c6a4 = icmp eq i32 %v1_c4fc, 0
  br label %dec_label_pc_c53c

dec_label_pc_c53c:                                ; preds = %bb89, %dec_label_pc_c468
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_c548 = call i32 @function_1366c(i32 1510, i32 1)
  store i32 %v2_c218, i32* %ip.global-to-local, align 4
  %v2_c554 = load i32, i32* @r4, align 4
  %v5_c554 = mul i32 %v2_c554, 4
  %v6_c554 = add i32 %v5_c554, %v2_c218
  %v7_c554 = inttoptr i32 %v6_c554 to i32*
  store i32 %v2_c548, i32* %v7_c554, align 4
  %v3_c558 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_c558, i32* %r3.global-to-local, align 4
  %v0_c55c = load i32, i32* %ip.global-to-local, align 4
  %v4_c55c = mul i32 %v3_c558, 4
  %v5_c55c = add i32 %v0_c55c, %v4_c55c
  %v6_c55c = inttoptr i32 %v5_c55c to i32*
  %v7_c55c = load i32, i32* %v6_c55c, align 4
  store i32 %v7_c55c, i32* @r7, align 4
  %v1_c560 = inttoptr i32 %v7_c55c to i8*
  %v2_c560 = load i8, i8* %v1_c560, align 1
  %tmp97 = urem i8 %v2_c560, 16
  %v1_c564 = zext i8 %tmp97 to i32
  %v1_c568 = or i32 %v1_c564, 64
  store i32 %v1_c568, i32* %r2.global-to-local, align 4
  %v1_c56c = trunc i32 %v1_c568 to i8
  store i8 %v1_c56c, i8* %v1_c560, align 1
  %v0_c570 = load i32, i32* @r7, align 4
  %v1_c570 = inttoptr i32 %v0_c570 to i8*
  %v2_c570 = load i8, i8* %v1_c570, align 1
  %v1_c574 = and i8 %v2_c570, -16
  %v1_c578 = or i8 %v1_c574, 5
  store i32 %v1_c298, i32* %r1.global-to-local, align 4
  store i8 %v1_c578, i8* %v1_c570, align 1
  %v2_c588 = load i32, i32* @r7, align 4
  %v3_c588 = add i32 %v2_c588, 1
  %v4_c588 = inttoptr i32 %v3_c588 to i8*
  store i8 %v5_c250, i8* %v4_c588, align 1
  store i32 %v4_c58c, i32* %r3.global-to-local, align 4
  %v0_c590 = load i32, i32* %r1.global-to-local, align 4
  %v2_c590 = icmp eq i32 %v0_c590, 0
  store i1 %v2_c590, i1* %cpsr_z.global-to-local, align 1
  %v2_c594 = load i32, i32* @r7, align 4
  %v3_c594 = add i32 %v2_c594, 8
  %v4_c594 = inttoptr i32 %v3_c594 to i8*
  store i8 %v1_c594, i8* %v4_c594, align 1
  store i32 %v4_c598, i32* %r2.global-to-local, align 4
  %v0_c59c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c59c, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_c53c
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_c5a0 = load i32, i32* @r7, align 4
  %v4_c5a0 = add i32 %v3_c5a0, 6
  %v5_c5a0 = inttoptr i32 %v4_c5a0 to i8*
  store i8 64, i8* %v5_c5a0, align 1
  %v0_c5a8.pre = load i32, i32* %r2.global-to-local, align 4
  %extract.t26 = trunc i32 %v0_c5a8.pre to i8
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_c53c, %bb
  %v0_c5a8.off0 = phi i8 [ %extract.t, %dec_label_pc_c53c ], [ %extract.t26, %bb ]
  store i32 6, i32* %r3.global-to-local, align 4
  %v2_c5a8 = load i32, i32* @r7, align 4
  %v3_c5a8 = add i32 %v2_c5a8, 5
  %v4_c5a8 = inttoptr i32 %v3_c5a8 to i8*
  store i8 %v0_c5a8.off0, i8* %v4_c5a8, align 1
  store i32 %v4_c5ac, i32* %ip.global-to-local, align 4
  store i32 %v4_c5b0, i32* %r1.global-to-local, align 4
  %v0_c5b4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c5b4, label %bb84, label %bb83

bb83:                                             ; preds = %.thread
  store i32 0, i32* %r2.global-to-local, align 4
  br label %bb84

bb84:                                             ; preds = %.thread, %bb83
  %v0_c5b8 = load i32, i32* %r3.global-to-local, align 4
  %v1_c5b8 = trunc i32 %v0_c5b8 to i8
  %v2_c5b8 = load i32, i32* @r7, align 4
  %v3_c5b8 = add i32 %v2_c5b8, 9
  %v4_c5b8 = inttoptr i32 %v3_c5b8 to i8*
  store i8 %v1_c5b8, i8* %v4_c5b8, align 1
  %v0_c5bc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c5bc, label %bb86, label %bb85

bb85:                                             ; preds = %bb84
  %v1_c5bc = load i32, i32* %r2.global-to-local, align 4
  %v2_c5bc = trunc i32 %v1_c5bc to i8
  %v3_c5bc = load i32, i32* @r7, align 4
  %v4_c5bc = add i32 %v3_c5bc, 7
  %v5_c5bc = inttoptr i32 %v4_c5bc to i8*
  store i8 %v2_c5bc, i8* %v5_c5bc, align 1
  br label %bb86

bb86:                                             ; preds = %bb84, %bb85
  %v3_c5c0 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_c5c0, i32* %r2.global-to-local, align 4
  %v0_c5c4 = load i32, i32* %ip.global-to-local, align 4
  %v1_c5c4 = trunc i32 %v0_c5c4 to i8
  %v2_c5c4 = load i32, i32* @r7, align 4
  %v3_c5c4 = add i32 %v2_c5c4, 2
  %v4_c5c4 = inttoptr i32 %v3_c5c4 to i8*
  store i8 %v1_c5c4, i8* %v4_c5c4, align 1
  store i32 %v6_c3e8, i32* %ip.global-to-local, align 4
  %v0_c5cc = load i32, i32* %r2.global-to-local, align 4
  %v3_c5cc = mul i32 %v0_c5cc, 32
  store i32 %v3_c5cc, i32* %r3.global-to-local, align 4
  %v1_c5d0 = load i32, i32* @r7, align 4
  %v2_c5d0 = add i32 %v1_c5d0, 12
  %v3_c5d0 = inttoptr i32 %v2_c5d0 to i32*
  store i32 %v6_c3e8, i32* %v3_c5d0, align 4
  %v0_c5d4 = load i32, i32* %r3.global-to-local, align 4
  %v1_c5d4 = load i32, i32* %r2.global-to-local, align 4
  %tmp98 = mul i32 %v1_c5d4, -8
  %v5_c5d4 = add i32 %v0_c5d4, %tmp98
  %v1_c5d8 = load i32, i32* @sb, align 4
  %v2_c5d8 = add i32 %v1_c5d8, %v5_c5d4
  store i32 %v2_c5d8, i32* %r3.global-to-local, align 4
  %v1_c5dc = add i32 %v2_c5d8, 16
  %v2_c5dc = inttoptr i32 %v1_c5dc to i32*
  %v3_c5dc = load i32, i32* %v2_c5dc, align 4
  store i32 %v3_c5dc, i32* %r2.global-to-local, align 4
  %v0_c5e0 = load i32, i32* %r1.global-to-local, align 4
  %v1_c5e0 = trunc i32 %v0_c5e0 to i8
  %v2_c5e0 = load i32, i32* @r7, align 4
  %v3_c5e0 = add i32 %v2_c5e0, 3
  %v4_c5e0 = inttoptr i32 %v3_c5e0 to i8*
  store i8 %v1_c5e0, i8* %v4_c5e0, align 1
  %v0_c5e4 = load i32, i32* @r5, align 4
  %v1_c5e4 = trunc i32 %v0_c5e4 to i8
  %v2_c5e4 = load i32, i32* @r7, align 4
  %v3_c5e4 = add i32 %v2_c5e4, 4
  %v4_c5e4 = inttoptr i32 %v3_c5e4 to i8*
  store i8 %v1_c5e4, i8* %v4_c5e4, align 1
  %v0_c5e8 = load i32, i32* %r2.global-to-local, align 4
  %v1_c5e8 = load i32, i32* @r7, align 4
  %v2_c5e8 = add i32 %v1_c5e8, 16
  %v3_c5e8 = inttoptr i32 %v2_c5e8 to i32*
  store i32 %v0_c5e8, i32* %v3_c5e8, align 4
  %v0_c5ec = load i32, i32* @sl, align 4
  %v1_c5ec = trunc i32 %v0_c5ec to i8
  %v2_c5ec = load i32, i32* @r7, align 4
  %v3_c5ec = add i32 %v2_c5ec, 20
  %v4_c5ec = inttoptr i32 %v3_c5ec to i8*
  store i8 %v1_c5ec, i8* %v4_c5ec, align 1
  %v0_c5f0 = load i32, i32* @r7, align 4
  %v1_c5f0 = add i32 %v0_c5f0, 20
  store i32 %v1_c5f0, i32* @r4, align 4
  %v1_c5f4 = add i32 %v0_c5f0, 33
  %v2_c5f4 = inttoptr i32 %v1_c5f4 to i8*
  %v3_c5f4 = load i8, i8* %v2_c5f4, align 1
  %v4_c5f4 = zext i8 %v3_c5f4 to i32
  store i32 %v1_c4c4, i32* %r1.global-to-local, align 4
  %v1_c5fc = and i32 %v4_c5f4, 223
  %v5_c600 = or i32 %v1_c5fc, %v4_c600
  store i32 %v5_c600, i32* %r3.global-to-local, align 4
  %v1_c604 = trunc i32 %v5_c600 to i8
  store i8 %v1_c604, i8* %v2_c5f4, align 1
  %v0_c608 = load i32, i32* @r4, align 4
  %v1_c608 = add i32 %v0_c608, 13
  %v2_c608 = inttoptr i32 %v1_c608 to i8*
  %v3_c608 = load i8, i8* %v2_c608, align 1
  %v4_c608 = zext i8 %v3_c608 to i32
  store i32 %v1_c4c8, i32* %r3.global-to-local, align 4
  %v1_c610 = and i32 %v4_c608, 239
  %v5_c614 = or i32 %v1_c610, %v4_c614
  store i32 %v5_c614, i32* %r2.global-to-local, align 4
  %v1_c618 = trunc i32 %v5_c614 to i8
  store i8 %v1_c618, i8* %v2_c608, align 1
  %v0_c61c = load i32, i32* @r4, align 4
  %v1_c61c = add i32 %v0_c61c, 13
  %v2_c61c = inttoptr i32 %v1_c61c to i8*
  %v3_c61c = load i8, i8* %v2_c61c, align 1
  %v4_c61c = zext i8 %v3_c61c to i32
  store i32 %v1_c4cc, i32* %ip.global-to-local, align 4
  %v1_c624 = and i32 %v4_c61c, 247
  %v5_c628 = or i32 %v1_c624, %v4_c628
  store i32 %v5_c628, i32* %r3.global-to-local, align 4
  %v1_c62c = trunc i32 %v5_c628 to i8
  store i8 %v1_c62c, i8* %v2_c61c, align 1
  %v0_c630 = load i32, i32* @r4, align 4
  %v1_c630 = add i32 %v0_c630, 13
  %v2_c630 = inttoptr i32 %v1_c630 to i8*
  %v3_c630 = load i8, i8* %v2_c630, align 1
  %v4_c630 = zext i8 %v3_c630 to i32
  store i32 %v1_c4f0, i32* %r1.global-to-local, align 4
  %v1_c638 = and i32 %v4_c630, 251
  %v5_c63c = or i32 %v1_c638, %v4_c63c
  store i32 %v5_c63c, i32* %r2.global-to-local, align 4
  %v1_c640 = trunc i32 %v5_c63c to i8
  store i8 %v1_c640, i8* %v2_c630, align 1
  %v0_c644 = load i32, i32* @r4, align 4
  %v1_c644 = add i32 %v0_c644, 13
  %v2_c644 = inttoptr i32 %v1_c644 to i8*
  %v3_c644 = load i8, i8* %v2_c644, align 1
  %v4_c644 = zext i8 %v3_c644 to i32
  store i32 %v1_c4f4, i32* %r2.global-to-local, align 4
  %v1_c64c = and i32 %v4_c644, 253
  %v4_c650 = or i32 %v1_c64c, %v3_c650
  store i32 %v4_c650, i32* %r3.global-to-local, align 4
  %v1_c654 = trunc i32 %v4_c650 to i8
  store i8 %v1_c654, i8* %v2_c644, align 1
  %v0_c658 = load i32, i32* @r4, align 4
  %v1_c658 = add i32 %v0_c658, 12
  %v2_c658 = inttoptr i32 %v1_c658 to i8*
  %v3_c658 = load i8, i8* %v2_c658, align 1
  %v4_c658 = zext i8 %v3_c658 to i32
  store i32 %v4_c658, i32* %r2.global-to-local, align 4
  %v1_c65c = add i32 %v0_c658, 13
  %v2_c65c = inttoptr i32 %v1_c65c to i8*
  %v3_c65c = load i8, i8* %v2_c65c, align 1
  %v4_c65c = zext i8 %v3_c65c to i32
  store i32 %v1_c4f8, i32* %ip.global-to-local, align 4
  %tmp99 = urem i8 %v3_c658, 16
  %v1_c664 = zext i8 %tmp99 to i32
  %v1_c668 = and i32 %v4_c65c, 254
  %v2_c66c = or i32 %v1_c668, %v1_c4f8
  store i32 %v2_c66c, i32* %r3.global-to-local, align 4
  %v1_c670 = or i32 %v1_c664, 80
  store i32 %v1_c670, i32* %r2.global-to-local, align 4
  %v1_c674 = trunc i32 %v2_c66c to i8
  store i8 %v1_c674, i8* %v2_c65c, align 1
  %v0_c678 = load i32, i32* %r2.global-to-local, align 4
  %v1_c678 = trunc i32 %v0_c678 to i8
  %v2_c678 = load i32, i32* @r4, align 4
  %v3_c678 = add i32 %v2_c678, 12
  %v4_c678 = inttoptr i32 %v3_c678 to i8*
  store i8 %v1_c678, i8* %v4_c678, align 1
  store i32 %v3_c680, i32* %r1.global-to-local, align 4
  store i32 %v7_c680, i32* %r2.global-to-local, align 4
  %v2_c684 = load i32, i32* @r4, align 4
  %v3_c684 = add i32 %v2_c684, 1
  %v4_c684 = inttoptr i32 %v3_c684 to i8*
  store i8 %v5_c530, i8* %v4_c684, align 1
  %v0_c688 = load i32, i32* %r2.global-to-local, align 4
  %v1_c688 = trunc i32 %v0_c688 to i8
  %v2_c688 = load i32, i32* @r4, align 4
  %v3_c688 = add i32 %v2_c688, 3
  %v4_c688 = inttoptr i32 %v3_c688 to i8*
  store i8 %v1_c688, i8* %v4_c688, align 1
  %v0_c68c = load i32, i32* @r6, align 4
  %v1_c68c = trunc i32 %v0_c68c to i8
  %v2_c68c = load i32, i32* @r4, align 4
  %v3_c68c = add i32 %v2_c68c, 2
  %v4_c68c = inttoptr i32 %v3_c68c to i8*
  store i8 %v1_c68c, i8* %v4_c68c, align 1
  %v0_c690 = load i32, i32* @r8, align 4
  %v1_c690 = load i32, i32* @r4, align 4
  %v2_c690 = add i32 %v1_c690, 4
  %v3_c690 = inttoptr i32 %v2_c690 to i32*
  store i32 %v0_c690, i32* %v3_c690, align 4
  %v0_c694 = call i32 @function_e7cc()
  store i32 %v1_c4fc, i32* %ip.global-to-local, align 4
  %sext = mul i32 %v0_c694, 16777216
  %v1_c69c = sdiv i32 %sext, 16777216
  store i32 %v1_c69c, i32* %r2.global-to-local, align 4
  %v3_c6a0 = ashr i32 %sext, 31
  store i32 %v3_c6a0, i32* %r3.global-to-local, align 4
  store i1 %v2_c6a4, i1* %cpsr_z.global-to-local, align 1
  %v1_c6a8 = trunc i32 %v3_c6a0 to i8
  %v2_c6a8 = load i32, i32* @r4, align 4
  %v3_c6a8 = add i32 %v2_c6a8, 15
  %v4_c6a8 = inttoptr i32 %v3_c6a8 to i8*
  store i8 %v1_c6a8, i8* %v4_c6a8, align 1
  %v0_c6ac = load i1, i1* %cpsr_z.global-to-local, align 1
  %v2_c6b8.pre = load i32, i32* @r4, align 4
  br i1 %v0_c6ac, label %.thread13, label %bb87

bb87:                                             ; preds = %bb86
  %v2_c6ac = add i32 %v2_c6b8.pre, 13
  %v3_c6ac = inttoptr i32 %v2_c6ac to i8*
  %v4_c6ac = load i8, i8* %v3_c6ac, align 1
  %v5_c6ac = zext i8 %v4_c6ac to i32
  %v2_c6b0 = or i32 %v5_c6ac, 8
  store i32 %v2_c6b0, i32* %r3.global-to-local, align 4
  br label %.thread13

.thread13:                                        ; preds = %bb86, %bb87
  store i32 %v6_c3ac, i32* @r1, align 4
  %v0_c6b8 = load i32, i32* %r2.global-to-local, align 4
  %v1_c6b8 = trunc i32 %v0_c6b8 to i8
  %v3_c6b8 = add i32 %v2_c6b8.pre, 14
  %v4_c6b8 = inttoptr i32 %v3_c6b8 to i8*
  store i8 %v1_c6b8, i8* %v4_c6b8, align 1
  %v0_c6bc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c6bc, label %bb89, label %bb88

bb88:                                             ; preds = %.thread13
  %v1_c6bc = load i32, i32* %r3.global-to-local, align 4
  %v2_c6bc = trunc i32 %v1_c6bc to i8
  %v3_c6bc = load i32, i32* @r4, align 4
  %v4_c6bc = add i32 %v3_c6bc, 13
  %v5_c6bc = inttoptr i32 %v4_c6bc to i8*
  store i8 %v2_c6bc, i8* %v5_c6bc, align 1
  br label %bb89

bb89:                                             ; preds = %.thread13, %bb88
  %v0_c6c0 = load i32, i32* @r7, align 4
  %v1_c6c0 = add i32 %v0_c6c0, 40
  %v1_c6c4 = inttoptr i32 %v1_c6c0 to i8*
  %v2_c6c4 = call i32 @function_e94c(i8* %v1_c6c4)
  %v3_c6c8 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_c6c8, i32* %r3.global-to-local, align 4
  %v1_c6cc = add i32 %v3_c6c8, 1
  store i32 %v1_c6cc, i32* @r4, align 4
  %v0_c6d0 = load i32, i32* @fp, align 4
  %v9_c6d0 = icmp eq i32 %v0_c6d0, %v1_c6cc
  store i1 %v9_c6d0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_c6cc, i32* %stack_var_-40, align 4
  %v8_c6d8 = icmp sgt i32 %v0_c6d0, %v1_c6cc
  br i1 %v8_c6d8, label %dec_label_pc_c53c, label %dec_label_pc_c6dc

dec_label_pc_c6dc:                                ; preds = %bb89
  store i32 %v6_c3ac, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_c6e4.preheader

dec_label_pc_c6e4.preheader:                      ; preds = %dec_label_pc_c6dc, %dec_label_pc_c950
  %v0_c6e417 = phi i32 [ %v0_c6d0, %dec_label_pc_c6dc ], [ %v0_c450, %dec_label_pc_c950 ]
  %stack_var_-168.0.ph = phi i32 [ %v1_c470, %dec_label_pc_c6dc ], [ %v1_c958, %dec_label_pc_c950 ]
  %storemerge = add i32 %v6_c3ac, 20
  store i32 %storemerge, i32* @r8, align 4
  %v3_c89c = icmp eq i32 %v6_c3e8, -1
  %v8_c89c = icmp eq i32 %v6_c3e8, -1
  %v3_c8b8 = icmp eq i32 %v3_c444, 65535
  %v2_c934 = icmp eq i32 %v1_c3d4, 0
  br label %dec_label_pc_c6e4

dec_label_pc_c6e4:                                ; preds = %dec_label_pc_c78c, %dec_label_pc_c6e4.preheader
  %v0_c6e4 = phi i32 [ %v0_c6e417, %dec_label_pc_c6e4.preheader ], [ %v0_c820, %dec_label_pc_c78c ]
  %v2_c6e4 = icmp eq i32 %v0_c6e4, 0
  store i1 %v2_c6e4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r1.global-to-local, align 4
  %tmp90 = icmp slt i32 %v0_c6e4, 1
  br label %dec_label_pc_c6ec

dec_label_pc_c6ec:                                ; preds = %dec_label_pc_c6ec, %dec_label_pc_c6e4
  br i1 %tmp90, label %dec_label_pc_c6ec, label %dec_label_pc_c6f0

dec_label_pc_c6f0:                                ; preds = %dec_label_pc_c6ec
  %v0_c6f0 = load i32, i32* @r8, align 4
  %v3_c6f0 = mul i32 %v0_c6f0, 65536
  store i32 %v3_c6f0, i32* %r2.global-to-local, align 4
  %tmp91 = mul i32 %v0_c6f0, 256
  %v1_c6f8 = and i32 %tmp91, 65280
  store i32 %v1_c6f8, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-40, align 4
  %tmp92 = udiv i32 %v0_c6f0, 256
  %v4_c704 = urem i32 %tmp92, 256
  %v5_c704 = or i32 %v4_c704, %v1_c6f8
  store i32 %v5_c704, i32* @sl, align 4
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_c70c

dec_label_pc_c70c:                                ; preds = %dec_label_pc_c78c, %dec_label_pc_c6f0
  %v1_c720 = phi i32 [ %v1_c81c, %dec_label_pc_c78c ], [ 0, %dec_label_pc_c6f0 ]
  %v5_c710 = mul i32 %v1_c720, 24
  %v1_c714 = load i32, i32* @sb, align 4
  %v2_c714 = add i32 %v1_c714, %v5_c710
  store i32 %v2_c714, i32* %r3.global-to-local, align 4
  store i32 %v2_c218, i32* %ip.global-to-local, align 4
  %v1_c71c = add i32 %v2_c714, 20
  %v2_c71c = inttoptr i32 %v1_c71c to i8*
  %v3_c71c = load i8, i8* %v2_c71c, align 1
  %v4_c71c = zext i8 %v3_c71c to i32
  store i32 %v4_c71c, i32* %r2.global-to-local, align 4
  %v4_c720 = mul i32 %v1_c720, 4
  %v5_c720 = add i32 %v4_c720, %v2_c218
  %v6_c720 = inttoptr i32 %v5_c720 to i32*
  %v7_c720 = load i32, i32* %v6_c720, align 4
  store i32 %v7_c720, i32* @r5, align 4
  %v7_c724 = icmp eq i8 %v3_c71c, 31
  store i1 %v7_c724, i1* %cpsr_z.global-to-local, align 1
  %v1_c728 = add i32 %v7_c720, 20
  store i32 %v1_c728, i32* @r6, align 4
  %tmp100 = icmp ult i8 %v3_c71c, 32
  br i1 %tmp100, label %dec_label_pc_c840, label %dec_label_pc_c730

dec_label_pc_c730:                                ; preds = %dec_label_pc_c70c
  store i32 %v6_c3e8, i32* %r1.global-to-local, align 4
  store i1 %v8_c89c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_c89c, label %dec_label_pc_c8a8, label %dec_label_pc_c73c

dec_label_pc_c73c:                                ; preds = %dec_label_pc_c840, %dec_label_pc_c730
  store i32 %v3_c444, i32* %r2.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_c8b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_c8b8, label %dec_label_pc_c8c4, label %dec_label_pc_c750

dec_label_pc_c750:                                ; preds = %dec_label_pc_c8a8.dec_label_pc_c750_crit_edge, %dec_label_pc_c73c
  %v1_c754 = phi i32 [ %v1_c754.pre, %dec_label_pc_c8a8.dec_label_pc_c750_crit_edge ], [ 65535, %dec_label_pc_c73c ]
  store i32 %v3_c448, i32* %r3.global-to-local, align 4
  %v9_c754 = icmp eq i32 %v3_c448, %v1_c754
  store i1 %v9_c754, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c754, label %dec_label_pc_c8e0, label %dec_label_pc_c75c

dec_label_pc_c75c:                                ; preds = %dec_label_pc_c8c4.dec_label_pc_c75c_crit_edge, %dec_label_pc_c750
  %v1_c760 = phi i32 [ %v1_c760.pre, %dec_label_pc_c8c4.dec_label_pc_c75c_crit_edge ], [ %v1_c754, %dec_label_pc_c750 ]
  store i32 %v3_c44c, i32* %ip.global-to-local, align 4
  %v9_c760 = icmp eq i32 %v3_c44c, %v1_c760
  store i1 %v9_c760, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c760, label %dec_label_pc_c8fc, label %dec_label_pc_c768

dec_label_pc_c768:                                ; preds = %dec_label_pc_c8e0.dec_label_pc_c768_crit_edge, %dec_label_pc_c75c
  %v1_c76c = phi i32 [ %v1_c76c.pre, %dec_label_pc_c8e0.dec_label_pc_c768_crit_edge ], [ %v1_c760, %dec_label_pc_c75c ]
  store i32 %v5_c2e8, i32* %r1.global-to-local, align 4
  %v9_c76c = icmp eq i32 %v5_c2e8, %v1_c76c
  store i1 %v9_c76c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c76c, label %dec_label_pc_c918, label %dec_label_pc_c774

dec_label_pc_c774:                                ; preds = %dec_label_pc_c8fc.dec_label_pc_c774_crit_edge, %dec_label_pc_c768
  %v1_c778 = phi i32 [ %v1_c778.pre, %dec_label_pc_c8fc.dec_label_pc_c774_crit_edge ], [ %v1_c76c, %dec_label_pc_c768 ]
  store i32 %v6_c304, i32* %r2.global-to-local, align 4
  %v9_c778 = icmp eq i32 %v6_c304, %v1_c778
  store i1 %v9_c778, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c778, label %dec_label_pc_c92c, label %dec_label_pc_c780

dec_label_pc_c780:                                ; preds = %dec_label_pc_c918, %dec_label_pc_c774
  store i32 %v1_c3d4, i32* %r3.global-to-local, align 4
  store i1 %v2_c934, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_c934, label %dec_label_pc_c78c, label %dec_label_pc_c940

dec_label_pc_c78c:                                ; preds = %dec_label_pc_c780, %dec_label_pc_c92c, %dec_label_pc_c940
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_c790 = load i32, i32* @r7, align 4
  %v1_c790 = trunc i32 %v0_c790 to i8
  %v2_c790 = load i32, i32* @r5, align 4
  %v3_c790 = add i32 %v2_c790, 10
  %v4_c790 = inttoptr i32 %v3_c790 to i8*
  store i8 %v1_c790, i8* %v4_c790, align 1
  %v0_c794 = load i32, i32* @r7, align 4
  %v1_c794 = trunc i32 %v0_c794 to i8
  %v2_c794 = load i32, i32* @r5, align 4
  %v3_c794 = add i32 %v2_c794, 11
  %v4_c794 = inttoptr i32 %v3_c794 to i8*
  store i8 %v1_c794, i8* %v4_c794, align 1
  %v0_c798 = load i32, i32* @r5, align 4
  store i32 %v0_c798, i32* @r0, align 4
  %v2_c79c = call i32 @function_d0b8(i32 %v0_c798, i32 20)
  %v3_c79c = trunc i32 %v2_c79c to i8
  %v4_c7a028 = udiv i32 %v2_c79c, 256
  %v1_c7a4 = trunc i32 %v4_c7a028 to i8
  %v2_c7a4 = load i32, i32* @r5, align 4
  %v3_c7a4 = add i32 %v2_c7a4, 11
  %v4_c7a4 = inttoptr i32 %v3_c7a4 to i8*
  store i8 %v1_c7a4, i8* %v4_c7a4, align 1
  %v3_c7a8 = load i32, i32* @r5, align 4
  %v4_c7a8 = add i32 %v3_c7a8, 10
  %v5_c7a8 = inttoptr i32 %v4_c7a8 to i8*
  store i8 %v3_c79c, i8* %v5_c7a8, align 1
  %v0_c7ac = load i32, i32* @r6, align 4
  store i32 %v0_c7ac, i32* @r1, align 4
  %v0_c7b0 = load i32, i32* @sl, align 4
  store i32 %v0_c7b0, i32* %r2.global-to-local, align 4
  %v0_c7b4 = load i32, i32* @r8, align 4
  store i32 %v0_c7b4, i32* %r3.global-to-local, align 4
  %v0_c7b8 = load i32, i32* @r7, align 4
  %v1_c7b8 = trunc i32 %v0_c7b8 to i8
  %v3_c7b8 = add i32 %v0_c7ac, 16
  %v4_c7b8 = inttoptr i32 %v3_c7b8 to i8*
  store i8 %v1_c7b8, i8* %v4_c7b8, align 1
  %v0_c7bc = load i32, i32* @r7, align 4
  %v1_c7bc = trunc i32 %v0_c7bc to i8
  %v2_c7bc = load i32, i32* @r6, align 4
  %v3_c7bc = add i32 %v2_c7bc, 17
  %v4_c7bc = inttoptr i32 %v3_c7bc to i8*
  store i8 %v1_c7bc, i8* %v4_c7bc, align 1
  %v0_c7c0 = load i32, i32* @r5, align 4
  %v4_c7c4 = call i32 @function_d114(i32 %v0_c7c0, i32 %v0_c7ac, i32 %v0_c7b0, i32 %v0_c7b4)
  %v5_c7c4 = trunc i32 %v4_c7c4 to i8
  %v4_c7c829 = udiv i32 %v4_c7c4, 256
  %v1_c7cc = trunc i32 %v4_c7c829 to i8
  %v2_c7cc = load i32, i32* @r6, align 4
  %v3_c7cc = add i32 %v2_c7cc, 17
  %v4_c7cc = inttoptr i32 %v3_c7cc to i8*
  store i8 %v1_c7cc, i8* %v4_c7cc, align 1
  %v3_c7d0 = load i32, i32* @r6, align 4
  %v4_c7d0 = add i32 %v3_c7d0, 16
  %v5_c7d0 = inttoptr i32 %v4_c7d0 to i8*
  store i8 %v5_c7c4, i8* %v5_c7d0, align 1
  %v3_c7d4 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_c7d4, i32* %r3.global-to-local, align 4
  %v0_c7d8 = load i32, i32* @r5, align 4
  %v1_c7d8 = add i32 %v0_c7d8, 20
  %v2_c7d8 = inttoptr i32 %v1_c7d8 to i32*
  %v3_c7d8 = load i32, i32* %v2_c7d8, align 4
  %v3_c7e0 = udiv i32 %v3_c7d8, 65536
  store i32 %v3_c7e0, i32* %r2.global-to-local, align 4
  %v5_c7e4 = mul i32 %v3_c7d4, 24
  %v1_c7e8 = load i32, i32* @sb, align 4
  %v2_c7e8 = add i32 %v1_c7e8, %v5_c7e4
  store i32 %v2_c7e8, i32* %ip.global-to-local, align 4
  %v3_c7ec27 = udiv i32 %v3_c7d8, 16777216
  %v1_c7f0 = trunc i32 %v3_c7ec27 to i8
  %v3_c7f0 = add i32 %v2_c7e8, 3
  %v4_c7f0 = inttoptr i32 %v3_c7f0 to i8*
  store i8 %v1_c7f0, i8* %v4_c7f0, align 1
  %v0_c7f4 = load i32, i32* %r2.global-to-local, align 4
  %v1_c7f4 = trunc i32 %v0_c7f4 to i8
  %v2_c7f4 = load i32, i32* %ip.global-to-local, align 4
  %v3_c7f4 = add i32 %v2_c7f4, 2
  %v4_c7f4 = inttoptr i32 %v3_c7f4 to i8*
  store i8 %v1_c7f4, i8* %v4_c7f4, align 1
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_c7fc = load i32, i32* @r5, align 4
  store i32 %v0_c7fc, i32* %r1.global-to-local, align 4
  store i32 %stack_var_-168.0.ph, i32* %r2.global-to-local, align 4
  store i32 16, i32* @r4, align 4
  %v0_c80c = load i32, i32* %ip.global-to-local, align 4
  %v6_c814 = inttoptr i32 %v0_c7fc to i32*
  %v7_c814 = call i32 @function_1331c(i32 %v3_c3fc, i32* %v6_c814, i32 %stack_var_-168.0.ph, i32 16384, i32 %v0_c80c, i32 16)
  %v3_c818 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_c818, i32* %r3.global-to-local, align 4
  %v1_c81c = add i32 %v3_c818, 1
  %v0_c820 = load i32, i32* @fp, align 4
  %v9_c820 = icmp eq i32 %v0_c820, %v1_c81c
  store i1 %v9_c820, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_c81c, i32* %stack_var_-40, align 4
  %v7_c828 = icmp sgt i32 %v0_c820, %v1_c81c
  br i1 %v7_c828, label %dec_label_pc_c70c, label %dec_label_pc_c6e4

dec_label_pc_c830:                                ; preds = %dec_label_pc_c40c
  %v1_c834 = call i32 @function_12a9c(i32 %v3_c3fc)
  br label %dec_label_pc_c838

dec_label_pc_c838:                                ; preds = %dec_label_pc_c1f8, %dec_label_pc_c830
  %v29_c83c = phi i32 [ %v3_c3fc, %dec_label_pc_c1f8 ], [ %v1_c834, %dec_label_pc_c830 ]
  ret i32 %v29_c83c

dec_label_pc_c840:                                ; preds = %dec_label_pc_c70c
  %v1_c840 = add i32 %v2_c714, 16
  %v2_c840 = inttoptr i32 %v1_c840 to i32*
  %v3_c840 = load i32, i32* %v2_c840, align 4
  %v0_c844 = call i32 @function_e7cc()
  %v3_c848 = load i32, i32* %stack_var_-40, align 4
  %v5_c850 = mul i32 %v3_c848, 24
  %v1_c858 = load i32, i32* @sb, align 4
  %v2_c858 = add i32 %v1_c858, %v5_c850
  store i32 %v2_c858, i32* %r1.global-to-local, align 4
  %v1_c85c = and i32 %v3_c840, 65280
  store i32 %v1_c85c, i32* %r3.global-to-local, align 4
  %v1_c854 = udiv i32 %v3_c840, 256
  %v3_c860 = and i32 %v1_c854, 65280
  store i32 %v3_c860, i32* %r2.global-to-local, align 4
  %v3_c864 = mul i32 %v3_c840, 16777216
  store i32 %v3_c864, i32* %ip.global-to-local, align 4
  %v1_c868 = add i32 %v2_c858, 20
  %v2_c868 = inttoptr i32 %v1_c868 to i8*
  %v3_c868 = load i8, i8* %v2_c868, align 1
  %v4_c868 = zext i8 %v3_c868 to i32
  %v4_c86c = mul nuw nsw i32 %v1_c85c, 256
  %v5_c86c = or i32 %v4_c86c, %v3_c864
  store i32 %v5_c86c, i32* %ip.global-to-local, align 4
  %v2_c874 = call i32 @llvm.bswap.i32(i32 %v3_c840)
  %v7_c878 = lshr i32 %v0_c844, %v4_c868
  %v8_c878 = add i32 %v7_c878, %v2_c874
  store i32 %v8_c878, i32* %r2.global-to-local, align 4
  %v2_c894 = call i32 @llvm.bswap.i32(i32 %v8_c878)
  store i32 %v2_c894, i32* %r3.global-to-local, align 4
  store i32 %v6_c3e8, i32* %r1.global-to-local, align 4
  store i1 %v8_c89c, i1* %cpsr_z.global-to-local, align 1
  %v1_c8a0 = load i32, i32* @r5, align 4
  %v2_c8a0 = add i32 %v1_c8a0, 16
  %v3_c8a0 = inttoptr i32 %v2_c8a0 to i32*
  store i32 %v2_c894, i32* %v3_c8a0, align 4
  br i1 %v3_c89c, label %dec_label_pc_c8a8, label %dec_label_pc_c73c

dec_label_pc_c8a8:                                ; preds = %dec_label_pc_c840, %dec_label_pc_c730
  %v0_c8a8 = call i32 @function_e7cc()
  store i32 %v3_c444, i32* %r2.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_c8b8, i1* %cpsr_z.global-to-local, align 1
  %v1_c8bc = load i32, i32* @r5, align 4
  %v2_c8bc = add i32 %v1_c8bc, 12
  %v3_c8bc = inttoptr i32 %v2_c8bc to i32*
  store i32 %v0_c8a8, i32* %v3_c8bc, align 4
  br i1 %v3_c8b8, label %dec_label_pc_c8c4, label %dec_label_pc_c8a8.dec_label_pc_c750_crit_edge

dec_label_pc_c8a8.dec_label_pc_c750_crit_edge:    ; preds = %dec_label_pc_c8a8
  %v1_c754.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c750

dec_label_pc_c8c4:                                ; preds = %dec_label_pc_c8a8, %dec_label_pc_c73c
  %v0_c8c4 = call i32 @function_e7cc()
  %v1_c8c4 = trunc i32 %v0_c8c4 to i8
  %v4_c8c830 = udiv i32 %v0_c8c4, 256
  %v1_c8cc = trunc i32 %v4_c8c830 to i8
  %v2_c8cc = load i32, i32* @r5, align 4
  %v3_c8cc = add i32 %v2_c8cc, 5
  %v4_c8cc = inttoptr i32 %v3_c8cc to i8*
  store i8 %v1_c8cc, i8* %v4_c8cc, align 1
  store i32 %v3_c448, i32* %r3.global-to-local, align 4
  %v1_c8d4 = load i32, i32* @r4, align 4
  %v9_c8d4 = icmp eq i32 %v3_c448, %v1_c8d4
  store i1 %v9_c8d4, i1* %cpsr_z.global-to-local, align 1
  %v3_c8d8 = load i32, i32* @r5, align 4
  %v4_c8d8 = add i32 %v3_c8d8, 4
  %v5_c8d8 = inttoptr i32 %v4_c8d8 to i8*
  store i8 %v1_c8c4, i8* %v5_c8d8, align 1
  %v0_c8dc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c8dc, label %dec_label_pc_c8e0, label %dec_label_pc_c8c4.dec_label_pc_c75c_crit_edge

dec_label_pc_c8c4.dec_label_pc_c75c_crit_edge:    ; preds = %dec_label_pc_c8c4
  %v1_c760.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c75c

dec_label_pc_c8e0:                                ; preds = %dec_label_pc_c8c4, %dec_label_pc_c750
  %v0_c8e0 = call i32 @function_e7cc()
  %v1_c8e0 = trunc i32 %v0_c8e0 to i8
  store i32 %v3_c44c, i32* %ip.global-to-local, align 4
  %v4_c8e8 = sdiv i32 %v0_c8e0, 256
  store i32 %v4_c8e8, i32* %r3.global-to-local, align 4
  %v1_c8ec = load i32, i32* @r4, align 4
  %v9_c8ec = icmp eq i32 %v3_c44c, %v1_c8ec
  store i1 %v9_c8ec, i1* %cpsr_z.global-to-local, align 1
  %v3_c8f0 = load i32, i32* @r5, align 4
  %v4_c8f0 = add i32 %v3_c8f0, 20
  %v5_c8f0 = inttoptr i32 %v4_c8f0 to i8*
  store i8 %v1_c8e0, i8* %v5_c8f0, align 1
  %v0_c8f4 = load i32, i32* %r3.global-to-local, align 4
  %v1_c8f4 = trunc i32 %v0_c8f4 to i8
  %v2_c8f4 = load i32, i32* @r6, align 4
  %v3_c8f4 = add i32 %v2_c8f4, 1
  %v4_c8f4 = inttoptr i32 %v3_c8f4 to i8*
  store i8 %v1_c8f4, i8* %v4_c8f4, align 1
  %v0_c8f8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c8f8, label %dec_label_pc_c8fc, label %dec_label_pc_c8e0.dec_label_pc_c768_crit_edge

dec_label_pc_c8e0.dec_label_pc_c768_crit_edge:    ; preds = %dec_label_pc_c8e0
  %v1_c76c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c768

dec_label_pc_c8fc:                                ; preds = %dec_label_pc_c8e0, %dec_label_pc_c75c
  %v0_c8fc = call i32 @function_e7cc()
  %v1_c8fc = trunc i32 %v0_c8fc to i8
  store i32 %v5_c2e8, i32* %r1.global-to-local, align 4
  %v4_c904 = sdiv i32 %v0_c8fc, 256
  store i32 %v4_c904, i32* %r3.global-to-local, align 4
  %v1_c908 = load i32, i32* @r4, align 4
  %v9_c908 = icmp eq i32 %v5_c2e8, %v1_c908
  store i1 %v9_c908, i1* %cpsr_z.global-to-local, align 1
  %v1_c90c = trunc i32 %v4_c904 to i8
  %v2_c90c = load i32, i32* @r6, align 4
  %v3_c90c = add i32 %v2_c90c, 3
  %v4_c90c = inttoptr i32 %v3_c90c to i8*
  store i8 %v1_c90c, i8* %v4_c90c, align 1
  %v3_c910 = load i32, i32* @r6, align 4
  %v4_c910 = add i32 %v3_c910, 2
  %v5_c910 = inttoptr i32 %v4_c910 to i8*
  store i8 %v1_c8fc, i8* %v5_c910, align 1
  %v0_c914 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c914, label %dec_label_pc_c918, label %dec_label_pc_c8fc.dec_label_pc_c774_crit_edge

dec_label_pc_c8fc.dec_label_pc_c774_crit_edge:    ; preds = %dec_label_pc_c8fc
  %v1_c778.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c774

dec_label_pc_c918:                                ; preds = %dec_label_pc_c8fc, %dec_label_pc_c768
  %v0_c918 = call i32 @function_e7cc()
  store i32 %v6_c304, i32* %r2.global-to-local, align 4
  %v1_c920 = load i32, i32* @r4, align 4
  %v9_c920 = icmp eq i32 %v6_c304, %v1_c920
  store i1 %v9_c920, i1* %cpsr_z.global-to-local, align 1
  %v1_c924 = load i32, i32* @r6, align 4
  %v2_c924 = add i32 %v1_c924, 4
  %v3_c924 = inttoptr i32 %v2_c924 to i32*
  store i32 %v0_c918, i32* %v3_c924, align 4
  br i1 %v9_c920, label %dec_label_pc_c92c, label %dec_label_pc_c780

dec_label_pc_c92c:                                ; preds = %dec_label_pc_c918, %dec_label_pc_c774
  %v0_c92c = call i32 @function_e7cc()
  store i32 %v1_c3d4, i32* %r3.global-to-local, align 4
  store i1 %v2_c934, i1* %cpsr_z.global-to-local, align 1
  %v1_c938 = load i32, i32* @r6, align 4
  %v2_c938 = add i32 %v1_c938, 8
  %v3_c938 = inttoptr i32 %v2_c938 to i32*
  store i32 %v0_c92c, i32* %v3_c938, align 4
  br i1 %v2_c934, label %dec_label_pc_c78c, label %dec_label_pc_c940

dec_label_pc_c940:                                ; preds = %dec_label_pc_c780, %dec_label_pc_c92c
  %v0_c940 = load i32, i32* @r5, align 4
  %v1_c940 = add i32 %v0_c940, 40
  store i32 %v6_c3ac, i32* @r1, align 4
  %v1_c948 = inttoptr i32 %v1_c940 to i8*
  %v2_c948 = call i32 @function_e94c(i8* %v1_c948)
  br label %dec_label_pc_c78c

dec_label_pc_c950:                                ; preds = %dec_label_pc_c434
  store i32 %v6_c3ac, i32* %r3.global-to-local, align 4
  %v1_c958 = add i32 %v6_c3ac, 40
  store i32 %v1_c958, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_c6e4.preheader

; uselistorder directives
  uselistorder i32 %v1_c958, { 1, 0 }
  uselistorder i32 %v4_c904, { 1, 0 }
  uselistorder i32 %v2_c894, { 1, 0 }
  uselistorder i32 %v3_c864, { 1, 0 }
  uselistorder i32 %v3_c840, { 1, 3, 2, 0 }
  uselistorder i32 %v0_c820, { 1, 2, 0 }
  uselistorder i32 %v1_c81c, { 2, 0, 3, 1 }
  uselistorder i32 %v0_c7ac, { 1, 0, 2 }
  uselistorder i32 %v0_c6f0, { 2, 0, 1 }
  uselistorder i32 %v0_c6e4, { 1, 0 }
  uselistorder i1 %v2_c934, { 2, 3, 1, 0 }
  uselistorder i1 %v3_c8b8, { 1, 0, 2, 3 }
  uselistorder i32 %v1_c6cc, { 1, 0, 2, 3 }
  uselistorder i8 %v5_c530, { 1, 0 }
  uselistorder i32 %v1_c4f8, { 1, 0 }
  uselistorder i32 %v1_c4f4, { 1, 0 }
  uselistorder i32 %v1_c4f0, { 1, 0 }
  uselistorder i32 %v1_c4cc, { 1, 0 }
  uselistorder i32 %v1_c4c8, { 1, 0 }
  uselistorder i32 %v1_c4c4, { 1, 0 }
  uselistorder i32 %v1_c4b8, { 1, 0 }
  uselistorder i32 %v1_c494, { 1, 0 }
  uselistorder i32 %v1_c484, { 1, 0 }
  uselistorder i32 %v1_c470, { 3, 0, 2, 1 }
  uselistorder i32 %v0_c450, { 1, 0, 2 }
  uselistorder i32 %v3_c444, { 0, 1, 3, 2 }
  uselistorder i32 %v0_c438, { 3, 0, 1, 2 }
  uselistorder i32 %v0_c434, { 0, 2, 1, 3 }
  uselistorder i1 %v7_c42c, { 1, 0 }
  uselistorder i1 %v7_c400, { 1, 0 }
  uselistorder i32 %v3_c3fc, { 1, 3, 4, 2, 0 }
  uselistorder i32 %v6_c3e8, { 4, 3, 0, 5, 1, 2 }
  uselistorder i32 %v1_c3d4, { 2, 1, 3, 4, 0 }
  uselistorder i32 %v6_c3ac, { 5, 4, 3, 0, 1, 2, 6 }
  uselistorder i32 %v6_c304, { 3, 2, 1, 0 }
  uselistorder i32 %v5_c2e8, { 2, 5, 4, 3, 1, 0 }
  uselistorder i32 %v1_c298, { 1, 0 }
  uselistorder i32 %v6_c230, { 1, 0 }
  uselistorder i32 %v2_c218, { 0, 3, 1, 2 }
  uselistorder i32 %v1_c1fc, { 1, 0 }
  uselistorder i32* %stack_var_-40, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 12, 11 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21, 23, 24, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 37, 36, 39, 38, 0 }
  uselistorder i32 (i8*)* @function_e94c, { 0, 1, 6, 7, 2, 3, 4, 5, 8, 9, 10 }
  uselistorder label %dec_label_pc_c940, { 1, 0 }
  uselistorder label %dec_label_pc_c838, { 1, 0 }
  uselistorder label %dec_label_pc_c78c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_c6e4.preheader, { 1, 0 }
  uselistorder label %bb89, { 1, 0 }
  uselistorder label %.thread13, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
  uselistorder label %bb84, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_c96c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_c96c:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_c96c = load i32, i32* @r4, align 4
  %v12_c96c = load i32, i32* @r7, align 4
  %v1_c970 = urem i32 %arg1, 256
  store i32 %v1_c970, i32* @sl, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 %v1_c970, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  %v1_c988 = urem i32 %arg3, 256
  store i32 %v1_c988, i32* @r4, align 4
  %v2_c98c = call i32 @function_1366c(i32 %v1_c970, i32 4)
  %v0_c990 = load i32, i32* @r5, align 4
  store i32 %v0_c990, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_c98c, i32* %fp.global-to-local, align 4
  %v0_c9a0 = load i32, i32* @r4, align 4
  store i32 %v0_c9a0, i32* %r0.global-to-local, align 4
  %v4_c9a4 = inttoptr i32 %v0_c990 to i32*
  %v5_c9a4 = call i32 @function_85e0(i32 %v0_c9a0, i32* %v4_c9a4, i32 2, i32 0)
  %v1_c9b0 = urem i32 %v5_c9a4, 256
  store i32 %v1_c9b0, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_c9bc = load i32, i32* @r5, align 4
  store i32 %v0_c9bc, i32* %r1.global-to-local, align 4
  %v0_c9c0 = load i32, i32* @r4, align 4
  store i32 %v0_c9c0, i32* %r0.global-to-local, align 4
  %v5_c9c4 = trunc i32 %v5_c9a4 to i8
  %v6_c9c8 = inttoptr i32 %v0_c9bc to i32*
  %v7_c9c8 = call i32 @function_85e0(i32 %v0_c9c0, i32* %v6_c9c8, i32 3, i32 65535)
  %v0_c9cc = load i32, i32* @r5, align 4
  store i32 %v0_c9cc, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_c9dc = load i32, i32* @r4, align 4
  store i32 %v0_c9dc, i32* %r0.global-to-local, align 4
  %v5_c9e0 = inttoptr i32 %v0_c9cc to i32*
  %v6_c9e0 = call i32 @function_85e0(i32 %v0_c9dc, i32* %v5_c9e0, i32 4, i32 64)
  %v1_c9e8 = urem i32 %v6_c9e0, 256
  store i32 %v1_c9e8, i32* %ip.global-to-local, align 4
  %v0_c9ec = load i32, i32* @r5, align 4
  store i32 %v0_c9ec, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_c9f8 = load i32, i32* @r4, align 4
  store i32 %v0_c9f8, i32* %r0.global-to-local, align 4
  %v6_ca00 = inttoptr i32 %v0_c9ec to i32*
  %v7_ca00 = call i32 @function_85e0(i32 %v0_c9f8, i32* %v6_ca00, i32 5, i32 1)
  %v1_ca0c = urem i32 %v7_ca00, 256
  store i32 %v1_ca0c, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_ca18 = load i32, i32* @r5, align 4
  store i32 %v0_ca18, i32* %r1.global-to-local, align 4
  %v0_ca1c = load i32, i32* @r4, align 4
  store i32 %v0_ca1c, i32* %r0.global-to-local, align 4
  %v5_ca24 = inttoptr i32 %v0_ca18 to i32*
  %v6_ca24 = call i32 @function_85e0(i32 %v0_ca1c, i32* %v5_ca24, i32 6, i32 65535)
  %v0_ca2c = load i32, i32* @r5, align 4
  store i32 %v0_ca2c, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_ca24, i32* @r7, align 4
  %v0_ca3c = load i32, i32* @r4, align 4
  store i32 %v0_ca3c, i32* %r0.global-to-local, align 4
  %v4_ca40 = inttoptr i32 %v0_ca2c to i32*
  %v5_ca40 = call i32 @function_85e0(i32 %v0_ca3c, i32* %v4_ca40, i32 7, i32 65535)
  %v0_ca48 = load i32, i32* @r5, align 4
  store i32 %v0_ca48, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 %v5_ca40, i32* @r6, align 4
  %v0_ca58 = load i32, i32* @r4, align 4
  store i32 %v0_ca58, i32* %r0.global-to-local, align 4
  %v4_ca5c = inttoptr i32 %v0_ca48 to i32*
  %v5_ca5c = call i32 @function_85e0(i32 %v0_ca58, i32* %v4_ca5c, i32 17, i32 65535)
  %v0_ca60 = load i32, i32* @r5, align 4
  store i32 %v0_ca60, i32* %r1.global-to-local, align 4
  store i32 18, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_ca70 = load i32, i32* @r4, align 4
  store i32 %v0_ca70, i32* %r0.global-to-local, align 4
  %v5_ca74 = inttoptr i32 %v0_ca60 to i32*
  %v6_ca74 = call i32 @function_85e0(i32 %v0_ca70, i32* %v5_ca74, i32 18, i32 0)
  %v0_ca78 = load i32, i32* @r5, align 4
  store i32 %v0_ca78, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_ca88 = load i32, i32* @r4, align 4
  store i32 %v0_ca88, i32* %r0.global-to-local, align 4
  %v5_ca8c = inttoptr i32 %v0_ca78 to i32*
  %v6_ca8c = call i32 @function_85e0(i32 %v0_ca88, i32* %v5_ca8c, i32 11, i32 0)
  %v0_ca90 = load i32, i32* @r5, align 4
  store i32 %v0_ca90, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_caa0 = load i32, i32* @r4, align 4
  store i32 %v0_caa0, i32* %r0.global-to-local, align 4
  %v5_caa4 = inttoptr i32 %v0_ca90 to i32*
  %v6_caa4 = call i32 @function_85e0(i32 %v0_caa0, i32* %v5_caa4, i32 12, i32 0)
  %v0_caa8 = load i32, i32* @r5, align 4
  store i32 %v0_caa8, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_cab8 = load i32, i32* @r4, align 4
  store i32 %v0_cab8, i32* %r0.global-to-local, align 4
  %v5_cabc = inttoptr i32 %v0_caa8 to i32*
  %v6_cabc = call i32 @function_85e0(i32 %v0_cab8, i32* %v5_cabc, i32 13, i32 0)
  %v0_cac0 = load i32, i32* @r5, align 4
  store i32 %v0_cac0, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_cad0 = load i32, i32* @r4, align 4
  store i32 %v0_cad0, i32* %r0.global-to-local, align 4
  %v5_cad4 = inttoptr i32 %v0_cac0 to i32*
  %v6_cad4 = call i32 @function_85e0(i32 %v0_cad0, i32* %v5_cad4, i32 14, i32 0)
  %v0_cad8 = load i32, i32* @r5, align 4
  store i32 %v0_cad8, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_cae8 = load i32, i32* @r4, align 4
  store i32 %v0_cae8, i32* %r0.global-to-local, align 4
  %v5_caec = inttoptr i32 %v0_cad8 to i32*
  %v6_caec = call i32 @function_85e0(i32 %v0_cae8, i32* %v5_caec, i32 15, i32 1)
  %v0_caf0 = load i32, i32* @r5, align 4
  store i32 %v0_caf0, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_cb00 = load i32, i32* @r4, align 4
  store i32 %v0_cb00, i32* %r0.global-to-local, align 4
  %v5_cb04 = inttoptr i32 %v0_caf0 to i32*
  %v6_cb04 = call i32 @function_85e0(i32 %v0_cb00, i32* %v5_cb04, i32 16, i32 0)
  %v2_cb10 = load i32, i32* @global_var_1da7c.49, align 4
  store i32 %v2_cb10, i32* %r3.global-to-local, align 4
  %v0_cb14 = load i32, i32* @r5, align 4
  store i32 %v0_cb14, i32* %r1.global-to-local, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_cb1c = load i32, i32* @r4, align 4
  store i32 %v0_cb1c, i32* %r0.global-to-local, align 4
  %v5_cb20 = inttoptr i32 %v0_cb14 to i32*
  %v6_cb20 = call i32 @function_8574(i32 %v0_cb1c, i32* %v5_cb20, i32 25, i32 %v2_cb10, i32 %v6_cb04)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_cb34 = call i32 @function_13380(i32 2, i32 3, i32 6)
  store i32 %v3_cb34, i32* %r0.global-to-local, align 4
  %v7_cb38 = icmp eq i32 %v3_cb34, -1
  store i1 %v7_cb38, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_cb34, i32* %sb.global-to-local, align 4
  br i1 %v7_cb38, label %dec_label_pc_d0ac, label %dec_label_pc_cb44

dec_label_pc_cb44:                                ; preds = %dec_label_pc_c96c
  store i32 1, i32* %stack_var_-40, align 4
  %v6_cb4c = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v6_cb4c, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v6_cb60 = call i32 @function_13350(i32 %v3_cb34, i32 0, i32 3, i32* nonnull %stack_var_-40, i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_cb60, i32* %r0.global-to-local, align 4
  %v7_cb64 = icmp eq i32 %v6_cb60, -1
  store i1 %v7_cb64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_cb64, label %dec_label_pc_d0a4, label %dec_label_pc_cb6c

dec_label_pc_cb6c:                                ; preds = %dec_label_pc_cb44
  %v3_cb70 = mul i32 %v7_c9c8, 65536
  store i32 %v3_cb70, i32* %r4.global-to-local, align 4
  %v3_cb74 = urem i32 %v7_c9c8, 65536
  %v0_cb84 = load i32, i32* @r7, align 4
  %v3_cb84 = mul i32 %v0_cb84, 65536
  store i32 %v3_cb84, i32* %r0.global-to-local, align 4
  %v0_cb88 = load i32, i32* @r6, align 4
  store i32 0, i32* %stack_var_-40, align 4
  %v3_cb90 = urem i32 %v0_cb84, 65536
  store i32 %v3_cb90, i32* %ip.global-to-local, align 4
  %v3_cb94 = urem i32 %v0_cb88, 65536
  store i32 %v3_cb94, i32* %r2.global-to-local, align 4
  %v1_cb98 = urem i32 %v6_ca8c, 256
  store i32 %v1_cb98, i32* %r3.global-to-local, align 4
  %v0_cb9c = load i32, i32* @sl, align 4
  %v2_cb9c = icmp eq i32 %v0_cb9c, 0
  store i1 %v2_cb9c, i1* %cpsr_z.global-to-local, align 1
  %tmp69 = icmp slt i32 %v0_cb9c, 1
  br i1 %tmp69, label %dec_label_pc_ce50, label %dec_label_pc_cbb0

dec_label_pc_cbb0:                                ; preds = %dec_label_pc_cb6c
  %v3_cbb8 = mul i32 %v5_ca5c, 65536
  store i32 %v3_cbb8, i32* @lr, align 4
  %v1_cbc8 = urem i32 %v0_cb88, 256
  %tmp70 = udiv i32 %v0_cb84, 256
  %v3_cbcc = urem i32 %tmp70, 256
  %v1_cbd0 = urem i32 %v0_cb84, 256
  %v4_cbd4 = mul nuw nsw i32 %v1_cbd0, 256
  %v5_cbd4 = or i32 %v4_cbd4, %v3_cbcc
  store i32 %v5_cbd4, i32* @r7, align 4
  %tmp71 = udiv i32 %v7_c9c8, 256
  %tmp72 = mul i32 %v5_ca5c, 256
  %v1_cbf0 = and i32 %tmp72, 65280
  %v1_cbf4 = urem i32 %v6_ca8c, 2
  %v3_cbf8 = mul nuw nsw i32 %v1_cbc8, 256
  store i32 %v3_cbf8, i32* %r1.global-to-local, align 4
  %v5_cbfc = trunc i32 %tmp71 to i8
  %tmp73 = udiv i32 %v0_cb88, 256
  %v4_cc00 = urem i32 %tmp73, 256
  %v5_cc00 = or i32 %v4_cc00, %v3_cbf8
  store i32 %v5_cc00, i32* @r6, align 4
  %v1_cc04 = urem i32 %v6_caa4, 2
  %v1_cc08 = urem i32 %v6_cabc, 2
  %tmp74 = udiv i32 %v5_ca5c, 256
  %v4_cc0c = urem i32 %tmp74, 256
  %v5_cc0c = or i32 %v4_cc0c, %v1_cbf0
  store i32 %v5_cc0c, i32* @r5, align 4
  %v1_cc2c = urem i32 %v6_cad4, 2
  %v1_cc30 = urem i32 %v6_caec, 2
  %v1_cc3c = urem i32 %v6_cb04, 2
  store i32 %v1_cc3c, i32* %r0.global-to-local, align 4
  %v3_cc40 = udiv i32 %v7_c9c8, 65536
  store i32 %v3_cc40, i32* %r2.global-to-local, align 4
  store i32 %v1_cbd0, i32* %r3.global-to-local, align 4
  store i32 %v1_cbc8, i32* %ip.global-to-local, align 4
  %v5_cc58 = trunc i32 %v0_cb88 to i8
  store i32 0, i32* @r4, align 4
  %sext = mul i32 %v6_c9e0, 16777216
  %v4_cca8 = sdiv i32 %sext, 16777216
  %tmp = sub nsw i32 0, %v1_cbf4
  %v4_cd1c = and i32 %tmp, 32
  %tmp78 = sub nsw i32 0, %v1_cc04
  %v4_cd30 = and i32 %tmp78, 16
  %tmp79 = sub nsw i32 0, %v1_cc08
  %v4_cd44 = and i32 %tmp79, 8
  %tmp80 = sub nsw i32 0, %v1_cc2c
  %v4_cd58 = and i32 %tmp80, 4
  %tmp81 = sub nsw i32 0, %v1_cc30
  %v3_cd6c = and i32 %tmp81, 2
  %v7_cd9c = sext i8 %v5_cc58 to i32
  %sext77 = mul i32 %v0_cb84, 16777216
  %v3_cd9c = sdiv i32 %sext77, 16777216
  br label %dec_label_pc_cc60

dec_label_pc_cc60:                                ; preds = %bb76, %dec_label_pc_cbb0
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 128, i32* %r0.global-to-local, align 4
  %v2_cc68 = call i32 @function_1366c(i32 128, i32 1)
  store i32 %v2_cc68, i32* %r0.global-to-local, align 4
  %v3_cc6c = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_cc6c, i32* %r2.global-to-local, align 4
  %v1_cc70 = load i32, i32* %fp.global-to-local, align 4
  %v2_cc70 = load i32, i32* @r4, align 4
  %v5_cc70 = mul i32 %v2_cc70, 4
  %v6_cc70 = add i32 %v5_cc70, %v1_cc70
  %v7_cc70 = inttoptr i32 %v6_cc70 to i32*
  store i32 %v2_cc68, i32* %v7_cc70, align 4
  %v0_cc74 = load i32, i32* %fp.global-to-local, align 4
  %v1_cc74 = load i32, i32* %r2.global-to-local, align 4
  %v4_cc74 = mul i32 %v1_cc74, 4
  %v5_cc74 = add i32 %v4_cc74, %v0_cc74
  %v6_cc74 = inttoptr i32 %v5_cc74 to i32*
  %v7_cc74 = load i32, i32* %v6_cc74, align 4
  store i32 %v7_cc74, i32* %r4.global-to-local, align 4
  %v1_cc78 = inttoptr i32 %v7_cc74 to i8*
  %v2_cc78 = load i8, i8* %v1_cc78, align 1
  %tmp82 = urem i8 %v2_cc78, 16
  %v1_cc7c = zext i8 %tmp82 to i32
  %v1_cc80 = or i32 %v1_cc7c, 64
  store i32 %v1_cc80, i32* %r3.global-to-local, align 4
  %v1_cc84 = trunc i32 %v1_cc80 to i8
  store i8 %v1_cc84, i8* %v1_cc78, align 1
  %v0_cc88 = load i32, i32* %r4.global-to-local, align 4
  %v1_cc88 = inttoptr i32 %v0_cc88 to i8*
  %v2_cc88 = load i8, i8* %v1_cc88, align 1
  %v1_cc8c = and i8 %v2_cc88, -16
  %v1_cc90 = or i8 %v1_cc8c, 5
  store i32 %v1_ca0c, i32* %r0.global-to-local, align 4
  store i8 %v1_cc90, i8* %v1_cc88, align 1
  %v2_cca0 = load i32, i32* %r4.global-to-local, align 4
  %v3_cca0 = add i32 %v2_cca0, 1
  %v4_cca0 = inttoptr i32 %v3_cca0 to i8*
  store i8 %v5_c9c4, i8* %v4_cca0, align 1
  store i32 %v4_cca8, i32* %r2.global-to-local, align 4
  %v2_ccac = load i32, i32* %r4.global-to-local, align 4
  %v3_ccac = add i32 %v2_ccac, 4
  %v4_ccac = inttoptr i32 %v3_ccac to i8*
  store i8 %v5_cbfc, i8* %v4_ccac, align 1
  store i32 6, i32* %ip.global-to-local, align 4
  %v0_ccb8 = load i32, i32* %r0.global-to-local, align 4
  %v2_ccb8 = icmp eq i32 %v0_ccb8, 0
  store i1 %v2_ccb8, i1* %cpsr_z.global-to-local, align 1
  %v2_ccbc = load i32, i32* %r4.global-to-local, align 4
  %v3_ccbc = add i32 %v2_ccbc, 3
  %v4_ccbc = inttoptr i32 %v3_ccbc to i8*
  store i8 60, i8* %v4_ccbc, align 1
  store i32 %v3_cc40, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_ccc8 = load i32, i32* %r2.global-to-local, align 4
  %v1_ccc8 = trunc i32 %v0_ccc8 to i8
  %v2_ccc8 = load i32, i32* %r4.global-to-local, align 4
  %v3_ccc8 = add i32 %v2_ccc8, 8
  %v4_ccc8 = inttoptr i32 %v3_ccc8 to i8*
  store i8 %v1_ccc8, i8* %v4_ccc8, align 1
  %v0_cccc = load i32, i32* %ip.global-to-local, align 4
  %v1_cccc = trunc i32 %v0_cccc to i8
  %v2_cccc = load i32, i32* %r4.global-to-local, align 4
  %v3_cccc = add i32 %v2_cccc, 9
  %v4_cccc = inttoptr i32 %v3_cccc to i8*
  store i8 %v1_cccc, i8* %v4_cccc, align 1
  %v0_ccd0 = load i32, i32* %r3.global-to-local, align 4
  %v1_ccd0 = trunc i32 %v0_ccd0 to i8
  %v2_ccd0 = load i32, i32* %r4.global-to-local, align 4
  %v3_ccd0 = add i32 %v2_ccd0, 2
  %v4_ccd0 = inttoptr i32 %v3_ccd0 to i8*
  store i8 %v1_ccd0, i8* %v4_ccd0, align 1
  %v3_ccd4 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_ccd4, i32* %r2.global-to-local, align 4
  %v0_ccd8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_ccd8, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_cc60
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_ccdc = load i32, i32* %r4.global-to-local, align 4
  %v4_ccdc = add i32 %v3_ccdc, 6
  %v5_ccdc = inttoptr i32 %v4_ccdc to i8*
  store i8 64, i8* %v5_ccdc, align 1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_cc60, %bb
  %v0_cce0 = load i32, i32* %r0.global-to-local, align 4
  %v1_cce0 = trunc i32 %v0_cce0 to i8
  %v2_cce0 = load i32, i32* %r4.global-to-local, align 4
  %v3_cce0 = add i32 %v2_cce0, 5
  %v4_cce0 = inttoptr i32 %v3_cce0 to i8*
  store i8 %v1_cce0, i8* %v4_cce0, align 1
  %v0_cce4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_cce4, label %.thread9, label %bb75

.thread9:                                         ; preds = %.thread
  store i32 %v6_cb20, i32* %r0.global-to-local, align 4
  br label %bb76

bb75:                                             ; preds = %.thread
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v6_cb20, i32* %r0.global-to-local, align 4
  %v3_ccec = load i32, i32* %r4.global-to-local, align 4
  %v4_ccec = add i32 %v3_ccec, 7
  %v5_ccec = inttoptr i32 %v4_ccec to i8*
  store i8 0, i8* %v5_ccec, align 1
  %v0_ccf4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb76

bb76:                                             ; preds = %.thread9, %bb75
  %v0_ccf4 = phi i32 [ %v6_cb20, %.thread9 ], [ %v0_ccf4.pre, %bb75 ]
  %v0_ccf0 = load i32, i32* %r2.global-to-local, align 4
  %v3_ccf0 = mul i32 %v0_ccf0, 32
  store i32 %v3_ccf0, i32* %r3.global-to-local, align 4
  %v1_ccf4 = load i32, i32* %r4.global-to-local, align 4
  %v2_ccf4 = add i32 %v1_ccf4, 12
  %v3_ccf4 = inttoptr i32 %v2_ccf4 to i32*
  store i32 %v0_ccf4, i32* %v3_ccf4, align 4
  %v0_ccf8 = load i32, i32* %r3.global-to-local, align 4
  %v1_ccf8 = load i32, i32* %r2.global-to-local, align 4
  %tmp83 = mul i32 %v1_ccf8, -8
  %v5_ccf8 = add i32 %v0_ccf8, %tmp83
  %v1_ccfc = load i32, i32* @r8, align 4
  %v2_ccfc = add i32 %v1_ccfc, %v5_ccf8
  store i32 %v2_ccfc, i32* %r3.global-to-local, align 4
  %v1_cd00 = add i32 %v2_ccfc, 16
  %v2_cd00 = inttoptr i32 %v1_cd00 to i32*
  %v3_cd00 = load i32, i32* %v2_cd00, align 4
  store i32 %v3_cd00, i32* %r2.global-to-local, align 4
  %v0_cd04 = load i32, i32* @r7, align 4
  %v1_cd04 = trunc i32 %v0_cd04 to i8
  %v2_cd04 = load i32, i32* %r4.global-to-local, align 4
  %v3_cd04 = add i32 %v2_cd04, 20
  %v4_cd04 = inttoptr i32 %v3_cd04 to i8*
  store i8 %v1_cd04, i8* %v4_cd04, align 1
  %v0_cd08 = load i32, i32* %r2.global-to-local, align 4
  %v1_cd08 = load i32, i32* %r4.global-to-local, align 4
  %v2_cd08 = add i32 %v1_cd08, 16
  %v3_cd08 = inttoptr i32 %v2_cd08 to i32*
  store i32 %v0_cd08, i32* %v3_cd08, align 4
  %v0_cd0c = load i32, i32* %r4.global-to-local, align 4
  %v1_cd0c = add i32 %v0_cd0c, 20
  store i32 %v1_cd0c, i32* %r1.global-to-local, align 4
  %v1_cd10 = add i32 %v0_cd0c, 33
  %v2_cd10 = inttoptr i32 %v1_cd10 to i8*
  %v3_cd10 = load i8, i8* %v2_cd10, align 1
  %v4_cd10 = zext i8 %v3_cd10 to i32
  store i32 %v1_cbf4, i32* %r2.global-to-local, align 4
  %v1_cd18 = and i32 %v4_cd10, 223
  %v5_cd1c = or i32 %v1_cd18, %v4_cd1c
  store i32 %v5_cd1c, i32* %r3.global-to-local, align 4
  %v1_cd20 = trunc i32 %v5_cd1c to i8
  store i8 %v1_cd20, i8* %v2_cd10, align 1
  %v0_cd24 = load i32, i32* %r1.global-to-local, align 4
  %v1_cd24 = add i32 %v0_cd24, 13
  %v2_cd24 = inttoptr i32 %v1_cd24 to i8*
  %v3_cd24 = load i8, i8* %v2_cd24, align 1
  %v4_cd24 = zext i8 %v3_cd24 to i32
  store i32 %v1_cc04, i32* %r3.global-to-local, align 4
  %v1_cd2c = and i32 %v4_cd24, 239
  %v5_cd30 = or i32 %v1_cd2c, %v4_cd30
  store i32 %v5_cd30, i32* %r2.global-to-local, align 4
  %v1_cd34 = trunc i32 %v5_cd30 to i8
  store i8 %v1_cd34, i8* %v2_cd24, align 1
  %v0_cd38 = load i32, i32* %r1.global-to-local, align 4
  %v1_cd38 = add i32 %v0_cd38, 13
  %v2_cd38 = inttoptr i32 %v1_cd38 to i8*
  %v3_cd38 = load i8, i8* %v2_cd38, align 1
  %v4_cd38 = zext i8 %v3_cd38 to i32
  store i32 %v1_cc08, i32* %ip.global-to-local, align 4
  %v1_cd40 = and i32 %v4_cd38, 247
  %v5_cd44 = or i32 %v1_cd40, %v4_cd44
  store i32 %v5_cd44, i32* %r3.global-to-local, align 4
  %v1_cd48 = trunc i32 %v5_cd44 to i8
  store i8 %v1_cd48, i8* %v2_cd38, align 1
  %v0_cd4c = load i32, i32* %r1.global-to-local, align 4
  %v1_cd4c = add i32 %v0_cd4c, 13
  %v2_cd4c = inttoptr i32 %v1_cd4c to i8*
  %v3_cd4c = load i8, i8* %v2_cd4c, align 1
  %v4_cd4c = zext i8 %v3_cd4c to i32
  store i32 %v1_cc2c, i32* %r0.global-to-local, align 4
  %v1_cd54 = and i32 %v4_cd4c, 251
  %v5_cd58 = or i32 %v1_cd54, %v4_cd58
  store i32 %v5_cd58, i32* %r2.global-to-local, align 4
  %v1_cd5c = trunc i32 %v5_cd58 to i8
  store i8 %v1_cd5c, i8* %v2_cd4c, align 1
  %v0_cd60 = load i32, i32* %r1.global-to-local, align 4
  %v1_cd60 = add i32 %v0_cd60, 13
  %v2_cd60 = inttoptr i32 %v1_cd60 to i8*
  %v3_cd60 = load i8, i8* %v2_cd60, align 1
  %v4_cd60 = zext i8 %v3_cd60 to i32
  store i32 %v1_cc30, i32* %r2.global-to-local, align 4
  %v1_cd68 = and i32 %v4_cd60, 253
  %v4_cd6c = or i32 %v1_cd68, %v3_cd6c
  store i32 %v4_cd6c, i32* %r3.global-to-local, align 4
  %v1_cd70 = trunc i32 %v4_cd6c to i8
  store i8 %v1_cd70, i8* %v2_cd60, align 1
  %v0_cd74 = load i32, i32* %r1.global-to-local, align 4
  %v1_cd74 = add i32 %v0_cd74, 12
  %v2_cd74 = inttoptr i32 %v1_cd74 to i8*
  %v3_cd74 = load i8, i8* %v2_cd74, align 1
  %v4_cd74 = zext i8 %v3_cd74 to i32
  store i32 %v4_cd74, i32* %r2.global-to-local, align 4
  %v1_cd78 = add i32 %v0_cd74, 13
  %v2_cd78 = inttoptr i32 %v1_cd78 to i8*
  %v3_cd78 = load i8, i8* %v2_cd78, align 1
  %v4_cd78 = zext i8 %v3_cd78 to i32
  %tmp84 = urem i8 %v3_cd74, 16
  %v1_cd80 = zext i8 %tmp84 to i32
  %v1_cd84 = and i32 %v4_cd78, 254
  %v2_cd88 = or i32 %v1_cd84, %v1_cc3c
  %v1_cd8c = or i32 %v1_cd80, 160
  store i32 %v1_cd8c, i32* %r2.global-to-local, align 4
  %v1_cd90 = trunc i32 %v2_cd88 to i8
  store i8 %v1_cd90, i8* %v2_cd78, align 1
  %v0_cd94 = load i32, i32* %r2.global-to-local, align 4
  %v1_cd94 = trunc i32 %v0_cd94 to i8
  %v2_cd94 = load i32, i32* %r1.global-to-local, align 4
  %v3_cd94 = add i32 %v2_cd94, 12
  %v4_cd94 = inttoptr i32 %v3_cd94 to i8*
  store i8 %v1_cd94, i8* %v4_cd94, align 1
  store i32 %v3_cd9c, i32* %r0.global-to-local, align 4
  store i32 %v7_cd9c, i32* %r2.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v2_cda8 = load i32, i32* %r1.global-to-local, align 4
  %v3_cda8 = add i32 %v2_cda8, 3
  %v4_cda8 = inttoptr i32 %v3_cda8 to i8*
  store i8 %v5_cc58, i8* %v4_cda8, align 1
  %v0_cdac = load i32, i32* %r0.global-to-local, align 4
  %v1_cdac = trunc i32 %v0_cdac to i8
  %v2_cdac = load i32, i32* %r1.global-to-local, align 4
  %v3_cdac = add i32 %v2_cdac, 1
  %v4_cdac = inttoptr i32 %v3_cdac to i8*
  store i8 %v1_cdac, i8* %v4_cdac, align 1
  %v0_cdb0 = load i32, i32* @r6, align 4
  %v1_cdb0 = trunc i32 %v0_cdb0 to i8
  %v2_cdb0 = load i32, i32* %r1.global-to-local, align 4
  %v3_cdb0 = add i32 %v2_cdb0, 2
  %v4_cdb0 = inttoptr i32 %v3_cdb0 to i8*
  store i8 %v1_cdb0, i8* %v4_cdb0, align 1
  %v0_cdb4 = load i32, i32* @r5, align 4
  %v1_cdb4 = load i32, i32* %r1.global-to-local, align 4
  %v2_cdb4 = add i32 %v1_cdb4, 4
  %v3_cdb4 = inttoptr i32 %v2_cdb4 to i32*
  store i32 %v0_cdb4, i32* %v3_cdb4, align 4
  %v0_cdb8 = load i32, i32* %ip.global-to-local, align 4
  %v1_cdb8 = trunc i32 %v0_cdb8 to i8
  %v2_cdb8 = load i32, i32* %r4.global-to-local, align 4
  %v3_cdb8 = add i32 %v2_cdb8, 41
  %v4_cdb8 = inttoptr i32 %v3_cdb8 to i8*
  store i8 %v1_cdb8, i8* %v4_cdb8, align 1
  %v0_cdbc = load i32, i32* %r3.global-to-local, align 4
  %v1_cdbc = trunc i32 %v0_cdbc to i8
  %v2_cdbc = load i32, i32* %r4.global-to-local, align 4
  %v3_cdbc = add i32 %v2_cdbc, 40
  %v4_cdbc = inttoptr i32 %v3_cdbc to i8*
  store i8 %v1_cdbc, i8* %v4_cdbc, align 1
  %v0_cdc0 = call i32 @function_e7cc()
  %v1_cdc4 = mul i32 %v0_cdc0, 256
  %v1_cdc8 = and i32 %v1_cdc4, 3840
  %v1_cdcc = or i32 %v1_cdc8, 28672
  %v3_cdd4 = add nuw nsw i32 %v1_cdcc, 2048
  %v3_cde07 = udiv i32 %v3_cdd4, 256
  store i32 %v3_cde07, i32* %r1.global-to-local, align 4
  %v0_cde4 = load i32, i32* %r4.global-to-local, align 4
  %v1_cde4 = add i32 %v0_cde4, 42
  store i32 %v1_cde4, i32* %r2.global-to-local, align 4
  %v4_cde8 = inttoptr i32 %v1_cde4 to i8*
  store i8 5, i8* %v4_cde8, align 1
  %v0_cdec = load i32, i32* %r1.global-to-local, align 4
  %v1_cdec = trunc i32 %v0_cdec to i8
  %v2_cdec = load i32, i32* %r2.global-to-local, align 4
  %v3_cdec = add i32 %v2_cdec, 1
  %v4_cdec = inttoptr i32 %v3_cdec to i8*
  store i8 %v1_cdec, i8* %v4_cdec, align 1
  store i32 8, i32* %r3.global-to-local, align 4
  %v2_cdf8 = load i32, i32* %r4.global-to-local, align 4
  %v3_cdf8 = add i32 %v2_cdf8, 47
  %v4_cdf8 = inttoptr i32 %v3_cdf8 to i8*
  store i8 10, i8* %v4_cdf8, align 1
  store i32 4, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_ce04 = load i32, i32* %r3.global-to-local, align 4
  %v1_ce04 = trunc i32 %v0_ce04 to i8
  %v2_ce04 = load i32, i32* %r4.global-to-local, align 4
  %v3_ce04 = add i32 %v2_ce04, 46
  %v4_ce04 = inttoptr i32 %v3_ce04 to i8*
  store i8 %v1_ce04, i8* %v4_ce04, align 1
  %v0_ce08 = load i32, i32* %r2.global-to-local, align 4
  %v1_ce08 = trunc i32 %v0_ce08 to i8
  %v2_ce08 = load i32, i32* %r4.global-to-local, align 4
  %v3_ce08 = add i32 %v2_ce08, 45
  %v4_ce08 = inttoptr i32 %v3_ce08 to i8*
  store i8 %v1_ce08, i8* %v4_ce08, align 1
  %v0_ce0c = load i32, i32* %r0.global-to-local, align 4
  %v1_ce0c = trunc i32 %v0_ce0c to i8
  %v2_ce0c = load i32, i32* %r4.global-to-local, align 4
  %v3_ce0c = add i32 %v2_ce0c, 44
  %v4_ce0c = inttoptr i32 %v3_ce0c to i8*
  store i8 %v1_ce0c, i8* %v4_ce0c, align 1
  %v0_ce10 = call i32 @function_e7cc()
  store i32 %v0_ce10, i32* %r0.global-to-local, align 4
  %v2_ce18 = load i32, i32* %r4.global-to-local, align 4
  %v3_ce18 = add i32 %v2_ce18, 56
  %v4_ce18 = inttoptr i32 %v3_ce18 to i8*
  store i8 1, i8* %v4_ce18, align 1
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 6, i32* %r3.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v1_ce28 = load i32, i32* %r4.global-to-local, align 4
  %v2_ce28 = add i32 %v1_ce28, 48
  %v3_ce28 = inttoptr i32 %v2_ce28 to i32*
  store i32 %v0_ce10, i32* %v3_ce28, align 4
  %v0_ce2c = load i32, i32* %r2.global-to-local, align 4
  %v1_ce2c = trunc i32 %v0_ce2c to i8
  %v2_ce2c = load i32, i32* %r4.global-to-local, align 4
  %v3_ce2c = add i32 %v2_ce2c, 58
  %v4_ce2c = inttoptr i32 %v3_ce2c to i8*
  store i8 %v1_ce2c, i8* %v4_ce2c, align 1
  %v0_ce30 = load i32, i32* %r3.global-to-local, align 4
  %v1_ce30 = trunc i32 %v0_ce30 to i8
  %v2_ce30 = load i32, i32* %r4.global-to-local, align 4
  %v3_ce30 = add i32 %v2_ce30, 59
  %v4_ce30 = inttoptr i32 %v3_ce30 to i8*
  store i8 %v1_ce30, i8* %v4_ce30, align 1
  %v0_ce34 = load i32, i32* %ip.global-to-local, align 4
  %v1_ce34 = load i32, i32* %r4.global-to-local, align 4
  %v2_ce34 = add i32 %v1_ce34, 52
  %v3_ce34 = inttoptr i32 %v2_ce34 to i32*
  store i32 %v0_ce34, i32* %v3_ce34, align 4
  %v0_ce38 = load i32, i32* %r2.global-to-local, align 4
  %v1_ce38 = trunc i32 %v0_ce38 to i8
  %v2_ce38 = load i32, i32* %r4.global-to-local, align 4
  %v3_ce38 = add i32 %v2_ce38, 57
  %v4_ce38 = inttoptr i32 %v3_ce38 to i8*
  store i8 %v1_ce38, i8* %v4_ce38, align 1
  %v3_ce3c = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_ce3c, i32* %r3.global-to-local, align 4
  %v1_ce40 = add i32 %v3_ce3c, 1
  store i32 %v1_ce40, i32* @r4, align 4
  %v0_ce44 = load i32, i32* @sl, align 4
  %v9_ce44 = icmp eq i32 %v0_ce44, %v1_ce40
  store i1 %v9_ce44, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_ce40, i32* %stack_var_-40, align 4
  %v8_ce4c = icmp sgt i32 %v0_ce44, %v1_ce40
  br i1 %v8_ce4c, label %dec_label_pc_cc60, label %dec_label_pc_ce50

dec_label_pc_ce50:                                ; preds = %bb76, %dec_label_pc_cb6c
  %v0_ce50 = phi i32 [ %v0_cb9c, %dec_label_pc_cb6c ], [ %v0_ce44, %bb76 ]
  %v2_ce50 = icmp eq i32 %v0_ce50, 0
  store i1 %v2_ce50, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_d008 = icmp eq i32 %v3_cb74, 65535
  %v2_d084 = icmp eq i32 %v1_cb98, 0
  %v2_ce8c = icmp eq i32 %v6_cb20, -1
  %v7_ce8c = icmp eq i32 %v6_cb20, -1
  br label %dec_label_pc_ce58.outer

dec_label_pc_ce58.outer:                          ; preds = %dec_label_pc_cf84, %dec_label_pc_ce50
  %v1_ce58.ph.in = phi i32 [ %v1_cf78, %dec_label_pc_cf84 ], [ %v0_ce50, %dec_label_pc_ce50 ]
  %v0_ce58.ph = phi i1 [ %v2_cf84, %dec_label_pc_cf84 ], [ %v2_ce50, %dec_label_pc_ce50 ]
  %v1_ce58.ph = icmp slt i32 %v1_ce58.ph.in, 0
  %v4_ce58 = or i1 %v1_ce58.ph, %v0_ce58.ph
  br label %dec_label_pc_ce58

dec_label_pc_ce58:                                ; preds = %dec_label_pc_ce58.outer, %dec_label_pc_ce58
  br i1 %v4_ce58, label %dec_label_pc_ce58, label %dec_label_pc_ce5c

dec_label_pc_ce5c:                                ; preds = %dec_label_pc_ce58
  store i32 0, i32* %stack_var_-40, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_ce68

dec_label_pc_ce68:                                ; preds = %dec_label_pc_cee4, %dec_label_pc_ce5c
  %v1_ce78 = phi i32 [ %v1_cf74, %dec_label_pc_cee4 ], [ 0, %dec_label_pc_ce5c ]
  %v5_ce6c = mul i32 %v1_ce78, 24
  %v1_ce70 = load i32, i32* @r8, align 4
  %v2_ce70 = add i32 %v1_ce70, %v5_ce6c
  store i32 %v2_ce70, i32* %r3.global-to-local, align 4
  %v1_ce74 = add i32 %v2_ce70, 20
  %v2_ce74 = inttoptr i32 %v1_ce74 to i8*
  %v3_ce74 = load i8, i8* %v2_ce74, align 1
  %v4_ce74 = zext i8 %v3_ce74 to i32
  store i32 %v4_ce74, i32* %r2.global-to-local, align 4
  %v0_ce78 = load i32, i32* %fp.global-to-local, align 4
  %v4_ce78 = mul i32 %v1_ce78, 4
  %v5_ce78 = add i32 %v0_ce78, %v4_ce78
  %v6_ce78 = inttoptr i32 %v5_ce78 to i32*
  %v7_ce78 = load i32, i32* %v6_ce78, align 4
  store i32 %v7_ce78, i32* @r5, align 4
  %v7_ce7c = icmp eq i8 %v3_ce74, 31
  store i1 %v7_ce7c, i1* %cpsr_z.global-to-local, align 1
  %v1_ce80 = add i32 %v7_ce78, 20
  store i32 %v1_ce80, i32* @r6, align 4
  %tmp85 = icmp ult i8 %v3_ce74, 32
  br i1 %tmp85, label %dec_label_pc_cf90, label %dec_label_pc_ce88

dec_label_pc_ce88:                                ; preds = %dec_label_pc_ce68
  store i32 %v6_cb20, i32* %r0.global-to-local, align 4
  store i1 %v7_ce8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ce8c, label %dec_label_pc_cff8, label %dec_label_pc_ce94

dec_label_pc_ce94:                                ; preds = %dec_label_pc_cf90, %dec_label_pc_ce88
  store i32 %v3_cb74, i32* %r2.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_d008, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_d008, label %dec_label_pc_d014, label %dec_label_pc_cea8

dec_label_pc_cea8:                                ; preds = %dec_label_pc_cff8.dec_label_pc_cea8_crit_edge, %dec_label_pc_ce94
  %v1_ceac = phi i32 [ %v1_ceac.pre, %dec_label_pc_cff8.dec_label_pc_cea8_crit_edge ], [ 65535, %dec_label_pc_ce94 ]
  store i32 %v3_cb90, i32* %r3.global-to-local, align 4
  %v9_ceac = icmp eq i32 %v3_cb90, %v1_ceac
  store i1 %v9_ceac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ceac, label %dec_label_pc_d030, label %dec_label_pc_ceb4

dec_label_pc_ceb4:                                ; preds = %dec_label_pc_d014.dec_label_pc_ceb4_crit_edge, %dec_label_pc_cea8
  %v1_ceb8 = phi i32 [ %v1_ceb8.pre, %dec_label_pc_d014.dec_label_pc_ceb4_crit_edge ], [ %v1_ceac, %dec_label_pc_cea8 ]
  store i32 %v3_cb94, i32* %ip.global-to-local, align 4
  %v9_ceb8 = icmp eq i32 %v3_cb94, %v1_ceb8
  store i1 %v9_ceb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ceb8, label %dec_label_pc_d04c, label %dec_label_pc_cec0

dec_label_pc_cec0:                                ; preds = %dec_label_pc_d030.dec_label_pc_cec0_crit_edge, %dec_label_pc_ceb4
  %v1_cec4 = phi i32 [ %v1_cec4.pre, %dec_label_pc_d030.dec_label_pc_cec0_crit_edge ], [ %v1_ceb8, %dec_label_pc_ceb4 ]
  store i32 %v5_ca5c, i32* %r0.global-to-local, align 4
  %v9_cec4 = icmp eq i32 %v5_ca5c, %v1_cec4
  store i1 %v9_cec4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_cec4, label %dec_label_pc_d068, label %dec_label_pc_cecc

dec_label_pc_cecc:                                ; preds = %dec_label_pc_d04c.dec_label_pc_cecc_crit_edge, %dec_label_pc_cec0
  %v1_ced0 = phi i32 [ %v1_ced0.pre, %dec_label_pc_d04c.dec_label_pc_cecc_crit_edge ], [ %v1_cec4, %dec_label_pc_cec0 ]
  store i32 %v6_ca74, i32* %r2.global-to-local, align 4
  %v9_ced0 = icmp eq i32 %v6_ca74, %v1_ced0
  store i1 %v9_ced0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ced0, label %dec_label_pc_d07c, label %dec_label_pc_ced8

dec_label_pc_ced8:                                ; preds = %dec_label_pc_d068, %dec_label_pc_cecc
  store i32 %v1_cb98, i32* %r3.global-to-local, align 4
  store i1 %v2_d084, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_d084, label %dec_label_pc_cee4, label %dec_label_pc_d090

dec_label_pc_cee4:                                ; preds = %dec_label_pc_ced8, %dec_label_pc_d07c, %dec_label_pc_d090
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_cee8 = load i32, i32* %r7.global-to-local, align 4
  %v1_cee8 = trunc i32 %v0_cee8 to i8
  %v2_cee8 = load i32, i32* @r5, align 4
  %v3_cee8 = add i32 %v2_cee8, 10
  %v4_cee8 = inttoptr i32 %v3_cee8 to i8*
  store i8 %v1_cee8, i8* %v4_cee8, align 1
  %v0_ceec = load i32, i32* %r7.global-to-local, align 4
  %v1_ceec = trunc i32 %v0_ceec to i8
  %v2_ceec = load i32, i32* @r5, align 4
  %v3_ceec = add i32 %v2_ceec, 11
  %v4_ceec = inttoptr i32 %v3_ceec to i8*
  store i8 %v1_ceec, i8* %v4_ceec, align 1
  %v0_cef0 = load i32, i32* @r5, align 4
  store i32 %v0_cef0, i32* @r0, align 4
  %v2_cef4 = call i32 @function_d0b8(i32 %v0_cef0, i32 20)
  %v3_cef4 = trunc i32 %v2_cef4 to i8
  %v4_cef827 = udiv i32 %v2_cef4, 256
  %v1_cefc = trunc i32 %v4_cef827 to i8
  %v2_cefc = load i32, i32* @r5, align 4
  %v3_cefc = add i32 %v2_cefc, 11
  %v4_cefc = inttoptr i32 %v3_cefc to i8*
  store i8 %v1_cefc, i8* %v4_cefc, align 1
  %v3_cf00 = load i32, i32* @r5, align 4
  %v4_cf00 = add i32 %v3_cf00, 10
  %v5_cf00 = inttoptr i32 %v4_cf00 to i8*
  store i8 %v3_cef4, i8* %v5_cf00, align 1
  %v0_cf04 = load i32, i32* @r6, align 4
  store i32 %v0_cf04, i32* @r1, align 4
  store i32 10240, i32* %r2.global-to-local, align 4
  store i32 40, i32* %r3.global-to-local, align 4
  %v0_cf10 = load i32, i32* %r7.global-to-local, align 4
  %v1_cf10 = trunc i32 %v0_cf10 to i8
  %v3_cf10 = add i32 %v0_cf04, 16
  %v4_cf10 = inttoptr i32 %v3_cf10 to i8*
  store i8 %v1_cf10, i8* %v4_cf10, align 1
  %v0_cf14 = load i32, i32* %r7.global-to-local, align 4
  %v1_cf14 = trunc i32 %v0_cf14 to i8
  %v2_cf14 = load i32, i32* @r6, align 4
  %v3_cf14 = add i32 %v2_cf14, 17
  %v4_cf14 = inttoptr i32 %v3_cf14 to i8*
  store i8 %v1_cf14, i8* %v4_cf14, align 1
  %v0_cf18 = load i32, i32* @r5, align 4
  store i32 %v0_cf18, i32* %r0.global-to-local, align 4
  %v4_cf1c = call i32 @function_d114(i32 %v0_cf18, i32 %v0_cf04, i32 10240, i32 40)
  %v5_cf1c = trunc i32 %v4_cf1c to i8
  store i32 %v4_cf1c, i32* %r0.global-to-local, align 4
  %v4_cf2028 = udiv i32 %v4_cf1c, 256
  %v1_cf24 = trunc i32 %v4_cf2028 to i8
  %v2_cf24 = load i32, i32* @r6, align 4
  %v3_cf24 = add i32 %v2_cf24, 17
  %v4_cf24 = inttoptr i32 %v3_cf24 to i8*
  store i8 %v1_cf24, i8* %v4_cf24, align 1
  %v3_cf28 = load i32, i32* @r6, align 4
  %v4_cf28 = add i32 %v3_cf28, 16
  %v5_cf28 = inttoptr i32 %v4_cf28 to i8*
  store i8 %v5_cf1c, i8* %v5_cf28, align 1
  %v3_cf2c = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_cf2c, i32* %r3.global-to-local, align 4
  %v0_cf30 = load i32, i32* @r5, align 4
  %v1_cf30 = add i32 %v0_cf30, 20
  %v2_cf30 = inttoptr i32 %v1_cf30 to i32*
  %v3_cf30 = load i32, i32* %v2_cf30, align 4
  %v3_cf38 = udiv i32 %v3_cf30, 65536
  store i32 %v3_cf38, i32* %r2.global-to-local, align 4
  %v5_cf3c = mul i32 %v3_cf2c, 24
  %v1_cf40 = load i32, i32* @r8, align 4
  %v2_cf40 = add i32 %v1_cf40, %v5_cf3c
  store i32 %v2_cf40, i32* %ip.global-to-local, align 4
  %v3_cf4426 = udiv i32 %v3_cf30, 16777216
  %v1_cf48 = trunc i32 %v3_cf4426 to i8
  %v3_cf48 = add i32 %v2_cf40, 3
  %v4_cf48 = inttoptr i32 %v3_cf48 to i8*
  store i8 %v1_cf48, i8* %v4_cf48, align 1
  %v0_cf4c = load i32, i32* %r2.global-to-local, align 4
  %v1_cf4c = trunc i32 %v0_cf4c to i8
  %v2_cf4c = load i32, i32* %ip.global-to-local, align 4
  %v3_cf4c = add i32 %v2_cf4c, 2
  %v4_cf4c = inttoptr i32 %v3_cf4c to i8*
  store i8 %v1_cf4c, i8* %v4_cf4c, align 1
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_cf54 = load i32, i32* @r5, align 4
  store i32 %v0_cf54, i32* %r1.global-to-local, align 4
  %v0_cf58 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_cf58, i32* %r0.global-to-local, align 4
  store i32 60, i32* %r2.global-to-local, align 4
  store i32 16, i32* @r4, align 4
  %v0_cf64 = load i32, i32* %ip.global-to-local, align 4
  %v6_cf6c = inttoptr i32 %v0_cf54 to i32*
  %v7_cf6c = call i32 @function_1331c(i32 %v0_cf58, i32* %v6_cf6c, i32 60, i32 16384, i32 %v0_cf64, i32 16)
  %v3_cf70 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_cf70, i32* %r3.global-to-local, align 4
  %v1_cf74 = add i32 %v3_cf70, 1
  store i32 %v1_cf74, i32* %r0.global-to-local, align 4
  %v1_cf78 = load i32, i32* @sl, align 4
  %v9_cf78 = icmp eq i32 %v1_cf74, %v1_cf78
  store i1 %v9_cf78, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_cf74, i32* %stack_var_-40, align 4
  %v5_cf80 = icmp slt i32 %v1_cf74, %v1_cf78
  br i1 %v5_cf80, label %dec_label_pc_ce68, label %dec_label_pc_cf84

dec_label_pc_cf84:                                ; preds = %dec_label_pc_cee4
  %v2_cf84 = icmp eq i32 %v1_cf78, 0
  store i1 %v2_cf84, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_ce58.outer

dec_label_pc_cf90:                                ; preds = %dec_label_pc_ce68
  %v1_cf90 = add i32 %v2_ce70, 16
  %v2_cf90 = inttoptr i32 %v1_cf90 to i32*
  %v3_cf90 = load i32, i32* %v2_cf90, align 4
  store i32 %v3_cf90, i32* %r4.global-to-local, align 4
  %v0_cf94 = call i32 @function_e7cc()
  store i32 %v0_cf94, i32* %r0.global-to-local, align 4
  %v3_cf98 = load i32, i32* %stack_var_-40, align 4
  %v5_cfa0 = mul i32 %v3_cf98, 24
  %v0_cfa4 = load i32, i32* %r4.global-to-local, align 4
  %v1_cfa8 = load i32, i32* @r8, align 4
  %v2_cfa8 = add i32 %v1_cfa8, %v5_cfa0
  store i32 %v2_cfa8, i32* %r1.global-to-local, align 4
  %v1_cfac = and i32 %v0_cfa4, 65280
  store i32 %v1_cfac, i32* %r3.global-to-local, align 4
  %v1_cfa4 = udiv i32 %v0_cfa4, 256
  %v3_cfb0 = and i32 %v1_cfa4, 65280
  store i32 %v3_cfb0, i32* %r2.global-to-local, align 4
  %v3_cfb4 = mul i32 %v0_cfa4, 16777216
  store i32 %v3_cfb4, i32* %ip.global-to-local, align 4
  %v1_cfb8 = add i32 %v2_cfa8, 20
  %v2_cfb8 = inttoptr i32 %v1_cfb8 to i8*
  %v3_cfb8 = load i8, i8* %v2_cfb8, align 1
  %v4_cfb8 = zext i8 %v3_cfb8 to i32
  %v4_cfbc = mul nuw nsw i32 %v1_cfac, 256
  %v5_cfbc = or i32 %v4_cfbc, %v3_cfb4
  store i32 %v5_cfbc, i32* %ip.global-to-local, align 4
  %v2_cfc4 = call i32 @llvm.bswap.i32(i32 %v0_cfa4)
  %v7_cfc8 = lshr i32 %v0_cf94, %v4_cfb8
  %v8_cfc8 = add i32 %v7_cfc8, %v2_cfc4
  store i32 %v8_cfc8, i32* %r2.global-to-local, align 4
  %v3_cfd4 = mul i32 %v8_cfc8, 16777216
  %v1_cfcc = mul i32 %v8_cfc8, 256
  %v4_cfd8 = and i32 %v1_cfcc, 16711680
  %v5_cfd8 = or i32 %v4_cfd8, %v3_cfd4
  store i32 %v5_cfd8, i32* %r1.global-to-local, align 4
  store i32 %v6_cb20, i32* %r0.global-to-local, align 4
  %v2_cfe8 = call i32 @llvm.bswap.i32(i32 %v8_cfc8)
  store i32 %v2_cfe8, i32* %r3.global-to-local, align 4
  store i1 %v7_ce8c, i1* %cpsr_z.global-to-local, align 1
  %v1_cff0 = load i32, i32* @r5, align 4
  %v2_cff0 = add i32 %v1_cff0, 16
  %v3_cff0 = inttoptr i32 %v2_cff0 to i32*
  store i32 %v2_cfe8, i32* %v3_cff0, align 4
  br i1 %v2_ce8c, label %dec_label_pc_cff8, label %dec_label_pc_ce94

dec_label_pc_cff8:                                ; preds = %dec_label_pc_cf90, %dec_label_pc_ce88
  %v0_cff8 = call i32 @function_e7cc()
  store i32 %v0_cff8, i32* %r0.global-to-local, align 4
  store i32 %v3_cb74, i32* %r2.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_d008, i1* %cpsr_z.global-to-local, align 1
  %v1_d00c = load i32, i32* @r5, align 4
  %v2_d00c = add i32 %v1_d00c, 12
  %v3_d00c = inttoptr i32 %v2_d00c to i32*
  store i32 %v0_cff8, i32* %v3_d00c, align 4
  br i1 %v3_d008, label %dec_label_pc_d014, label %dec_label_pc_cff8.dec_label_pc_cea8_crit_edge

dec_label_pc_cff8.dec_label_pc_cea8_crit_edge:    ; preds = %dec_label_pc_cff8
  %v1_ceac.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_cea8

dec_label_pc_d014:                                ; preds = %dec_label_pc_cff8, %dec_label_pc_ce94
  %v0_d014 = call i32 @function_e7cc()
  %v1_d014 = trunc i32 %v0_d014 to i8
  store i32 %v0_d014, i32* %r0.global-to-local, align 4
  %v4_d01829 = udiv i32 %v0_d014, 256
  %v1_d01c = trunc i32 %v4_d01829 to i8
  %v2_d01c = load i32, i32* @r5, align 4
  %v3_d01c = add i32 %v2_d01c, 5
  %v4_d01c = inttoptr i32 %v3_d01c to i8*
  store i8 %v1_d01c, i8* %v4_d01c, align 1
  store i32 %v3_cb90, i32* %r3.global-to-local, align 4
  %v1_d024 = load i32, i32* @r4, align 4
  %v9_d024 = icmp eq i32 %v3_cb90, %v1_d024
  store i1 %v9_d024, i1* %cpsr_z.global-to-local, align 1
  %v3_d028 = load i32, i32* @r5, align 4
  %v4_d028 = add i32 %v3_d028, 4
  %v5_d028 = inttoptr i32 %v4_d028 to i8*
  store i8 %v1_d014, i8* %v5_d028, align 1
  %v0_d02c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_d02c, label %dec_label_pc_d030, label %dec_label_pc_d014.dec_label_pc_ceb4_crit_edge

dec_label_pc_d014.dec_label_pc_ceb4_crit_edge:    ; preds = %dec_label_pc_d014
  %v1_ceb8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_ceb4

dec_label_pc_d030:                                ; preds = %dec_label_pc_d014, %dec_label_pc_cea8
  %v0_d030 = call i32 @function_e7cc()
  %v1_d030 = trunc i32 %v0_d030 to i8
  store i32 %v0_d030, i32* %r0.global-to-local, align 4
  store i32 %v3_cb94, i32* %ip.global-to-local, align 4
  %v4_d038 = sdiv i32 %v0_d030, 256
  store i32 %v4_d038, i32* %r3.global-to-local, align 4
  %v1_d03c = load i32, i32* @r4, align 4
  %v9_d03c = icmp eq i32 %v3_cb94, %v1_d03c
  store i1 %v9_d03c, i1* %cpsr_z.global-to-local, align 1
  %v3_d040 = load i32, i32* @r5, align 4
  %v4_d040 = add i32 %v3_d040, 20
  %v5_d040 = inttoptr i32 %v4_d040 to i8*
  store i8 %v1_d030, i8* %v5_d040, align 1
  %v0_d044 = load i32, i32* %r3.global-to-local, align 4
  %v1_d044 = trunc i32 %v0_d044 to i8
  %v2_d044 = load i32, i32* @r6, align 4
  %v3_d044 = add i32 %v2_d044, 1
  %v4_d044 = inttoptr i32 %v3_d044 to i8*
  store i8 %v1_d044, i8* %v4_d044, align 1
  %v0_d048 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_d048, label %dec_label_pc_d04c, label %dec_label_pc_d030.dec_label_pc_cec0_crit_edge

dec_label_pc_d030.dec_label_pc_cec0_crit_edge:    ; preds = %dec_label_pc_d030
  %v1_cec4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_cec0

dec_label_pc_d04c:                                ; preds = %dec_label_pc_d030, %dec_label_pc_ceb4
  %v0_d04c = call i32 @function_e7cc()
  %v1_d04c = trunc i32 %v0_d04c to i8
  %v4_d050 = sdiv i32 %v0_d04c, 256
  store i32 %v4_d050, i32* %r3.global-to-local, align 4
  %v3_d054 = load i32, i32* @r6, align 4
  %v4_d054 = add i32 %v3_d054, 2
  %v5_d054 = inttoptr i32 %v4_d054 to i8*
  store i8 %v1_d04c, i8* %v5_d054, align 1
  store i32 %v5_ca5c, i32* %r0.global-to-local, align 4
  %v1_d05c = load i32, i32* @r4, align 4
  %v9_d05c = icmp eq i32 %v5_ca5c, %v1_d05c
  store i1 %v9_d05c, i1* %cpsr_z.global-to-local, align 1
  %v0_d060 = load i32, i32* %r3.global-to-local, align 4
  %v1_d060 = trunc i32 %v0_d060 to i8
  %v2_d060 = load i32, i32* @r6, align 4
  %v3_d060 = add i32 %v2_d060, 3
  %v4_d060 = inttoptr i32 %v3_d060 to i8*
  store i8 %v1_d060, i8* %v4_d060, align 1
  %v0_d064 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_d064, label %dec_label_pc_d068, label %dec_label_pc_d04c.dec_label_pc_cecc_crit_edge

dec_label_pc_d04c.dec_label_pc_cecc_crit_edge:    ; preds = %dec_label_pc_d04c
  %v1_ced0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_cecc

dec_label_pc_d068:                                ; preds = %dec_label_pc_d04c, %dec_label_pc_cec0
  %v0_d068 = call i32 @function_e7cc()
  store i32 %v0_d068, i32* %r0.global-to-local, align 4
  store i32 %v6_ca74, i32* %r2.global-to-local, align 4
  %v1_d070 = load i32, i32* @r4, align 4
  %v9_d070 = icmp eq i32 %v6_ca74, %v1_d070
  store i1 %v9_d070, i1* %cpsr_z.global-to-local, align 1
  %v1_d074 = load i32, i32* @r6, align 4
  %v2_d074 = add i32 %v1_d074, 4
  %v3_d074 = inttoptr i32 %v2_d074 to i32*
  store i32 %v0_d068, i32* %v3_d074, align 4
  br i1 %v9_d070, label %dec_label_pc_d07c, label %dec_label_pc_ced8

dec_label_pc_d07c:                                ; preds = %dec_label_pc_d068, %dec_label_pc_cecc
  %v0_d07c = call i32 @function_e7cc()
  store i32 %v0_d07c, i32* %r0.global-to-local, align 4
  store i32 %v1_cb98, i32* %r3.global-to-local, align 4
  store i1 %v2_d084, i1* %cpsr_z.global-to-local, align 1
  %v1_d088 = load i32, i32* @r6, align 4
  %v2_d088 = add i32 %v1_d088, 8
  %v3_d088 = inttoptr i32 %v2_d088 to i32*
  store i32 %v0_d07c, i32* %v3_d088, align 4
  br i1 %v2_d084, label %dec_label_pc_cee4, label %dec_label_pc_d090

dec_label_pc_d090:                                ; preds = %dec_label_pc_ced8, %dec_label_pc_d07c
  %v0_d090 = call i32 @function_e7cc()
  %v1_d090 = trunc i32 %v0_d090 to i8
  store i32 %v0_d090, i32* %r0.global-to-local, align 4
  %v4_d094 = sdiv i32 %v0_d090, 256
  store i32 %v4_d094, i32* %r3.global-to-local, align 4
  %v1_d098 = trunc i32 %v4_d094 to i8
  %v2_d098 = load i32, i32* @r6, align 4
  %v3_d098 = add i32 %v2_d098, 19
  %v4_d098 = inttoptr i32 %v3_d098 to i8*
  store i8 %v1_d098, i8* %v4_d098, align 1
  %v3_d09c = load i32, i32* @r6, align 4
  %v4_d09c = add i32 %v3_d09c, 18
  %v5_d09c = inttoptr i32 %v4_d09c to i8*
  store i8 %v1_d090, i8* %v5_d09c, align 1
  br label %dec_label_pc_cee4

dec_label_pc_d0a4:                                ; preds = %dec_label_pc_cb44
  %v0_d0a4 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_d0a4, i32* %r0.global-to-local, align 4
  %v1_d0a8 = call i32 @function_12a9c(i32 %v0_d0a4)
  store i32 %v1_d0a8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d0ac

dec_label_pc_d0ac:                                ; preds = %dec_label_pc_c96c, %dec_label_pc_d0a4
  %v29_d0b0 = phi i32 [ %v3_cb34, %dec_label_pc_c96c ], [ %v1_d0a8, %dec_label_pc_d0a4 ]
  store i32 %v3_c96c, i32* %r4.global-to-local, align 4
  store i32 %v12_c96c, i32* %r7.global-to-local, align 4
  ret i32 %v29_d0b0

; uselistorder directives
  uselistorder i32 %v4_d094, { 1, 0 }
  uselistorder i32 %v0_d090, { 0, 2, 1 }
  uselistorder i32 %v0_d030, { 0, 2, 1 }
  uselistorder i32 %v0_d014, { 0, 2, 1 }
  uselistorder i32 %v2_cfe8, { 1, 0 }
  uselistorder i32 %v8_cfc8, { 2, 0, 1, 3 }
  uselistorder i32 %v3_cfb4, { 1, 0 }
  uselistorder i32 %v0_cfa4, { 2, 0, 1, 3 }
  uselistorder i1 %v2_cf84, { 1, 0 }
  uselistorder i32 %v1_cf78, { 1, 2, 3, 0 }
  uselistorder i32 %v1_cf74, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v4_cf1c, { 0, 2, 1 }
  uselistorder i32 %v0_cf04, { 1, 0, 2 }
  uselistorder i1 %v7_ce8c, { 2, 1, 0 }
  uselistorder i1 %v2_d084, { 2, 3, 1, 0 }
  uselistorder i1 %v3_d008, { 3, 2, 0, 1 }
  uselistorder i32 %v1_ce40, { 1, 0, 2, 3 }
  uselistorder i8 %v5_cc58, { 1, 0 }
  uselistorder i32 %v3_cc40, { 1, 0 }
  uselistorder i32 %v1_cc3c, { 1, 0 }
  uselistorder i32 %v1_cc30, { 1, 0 }
  uselistorder i32 %v1_cc2c, { 1, 0 }
  uselistorder i32 %v1_cc08, { 1, 0 }
  uselistorder i32 %v1_cc04, { 1, 0 }
  uselistorder i32 %v3_cbf8, { 1, 0 }
  uselistorder i32 %v1_cbf4, { 1, 0 }
  uselistorder i32 %v1_cbd0, { 1, 0 }
  uselistorder i32 %v1_cbc8, { 1, 0 }
  uselistorder i32 %v1_cb98, { 2, 1, 3, 0 }
  uselistorder i32 %v3_cb90, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_cb88, { 3, 0, 1, 2 }
  uselistorder i32 %v0_cb84, { 0, 2, 1, 4, 3 }
  uselistorder i1 %v7_cb64, { 1, 0 }
  uselistorder i1 %v7_cb38, { 1, 0 }
  uselistorder i32 %v3_cb34, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v6_cb20, { 6, 4, 0, 5, 1, 3, 2 }
  uselistorder i32 %v6_ca74, { 3, 2, 1, 0 }
  uselistorder i32 %v5_ca5c, { 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 %v1_ca0c, { 1, 0 }
  uselistorder i32 %v7_c9c8, { 0, 1, 3, 2 }
  uselistorder i32 %v5_c9a4, { 1, 0 }
  uselistorder i32 %v1_c970, { 2, 1, 0 }
  uselistorder i32* %stack_var_-40, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 12, 11 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 29, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21, 23, 24, 25, 26, 27, 28, 30, 29, 31, 32, 33, 35, 34, 37, 36, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 4, 6, 7, 5, 8, 9, 11, 10, 13, 12, 14, 16, 15, 17, 18, 19, 22, 20, 21, 23, 24, 25, 26, 27, 1, 28, 29, 30, 31, 35, 32, 33, 34, 36, 38, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 0 }
  uselistorder i32 (i32, i32*, i32, i32)* @function_85e0, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 80, 81, 82, 83, 84, 85, 86, 87, 88, 106, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105 }
  uselistorder label %dec_label_pc_d0ac, { 1, 0 }
  uselistorder label %dec_label_pc_d090, { 1, 0 }
  uselistorder label %dec_label_pc_cee4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_ce58, { 1, 0 }
  uselistorder label %bb76, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_d0b8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_d0b8:
  %tmp = or i32 %arg1, 1
  %tmp9 = icmp eq i32 %tmp, 1
  br i1 %tmp9, label %dec_label_pc_d0e8, label %dec_label_pc_d0c4

dec_label_pc_d0c4:                                ; preds = %dec_label_pc_d0b8
  %v0_d0c8.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_d0c8

dec_label_pc_d0c8:                                ; preds = %dec_label_pc_d0c8, %dec_label_pc_d0c4
  %v0_d0dc = phi i32 [ %v2_d0dc, %dec_label_pc_d0c8 ], [ 0, %dec_label_pc_d0c4 ]
  %v0_d0d0 = phi i32 [ %v1_d0d0, %dec_label_pc_d0c8 ], [ %arg1, %dec_label_pc_d0c4 ]
  %v0_d0e0 = phi i32 [ %v1_d0e0, %dec_label_pc_d0c8 ], [ %v0_d0c8.pre, %dec_label_pc_d0c4 ]
  %v1_d0c8 = inttoptr i32 %v0_d0e0 to i8*
  %v2_d0c8 = load i8, i8* %v1_d0c8, align 1
  %v3_d0c8 = zext i8 %v2_d0c8 to i32
  %v1_d0cc = add i32 %v0_d0e0, 1
  %v2_d0cc = inttoptr i32 %v1_d0cc to i8*
  %v3_d0cc = load i8, i8* %v2_d0cc, align 1
  %v4_d0cc = zext i8 %v3_d0cc to i32
  %v1_d0d0 = add i32 %v0_d0d0, -2
  %v4_d0d4 = mul nuw nsw i32 %v4_d0cc, 256
  %v5_d0d4 = or i32 %v4_d0d4, %v3_d0c8
  %v2_d0dc = add i32 %v5_d0d4, %v0_d0dc
  %v1_d0e0 = add i32 %v0_d0e0, 2
  store i32 %v1_d0e0, i32* @r0, align 4
  %v1_d0d0.cmp = icmp ugt i32 %v1_d0d0, 1
  br i1 %v1_d0d0.cmp, label %dec_label_pc_d0c8, label %dec_label_pc_d0e8

dec_label_pc_d0e8:                                ; preds = %dec_label_pc_d0c8, %dec_label_pc_d0b8
  %v1_d0f0 = phi i32 [ 0, %dec_label_pc_d0b8 ], [ %v2_d0dc, %dec_label_pc_d0c8 ]
  %v0_d0e8 = phi i32 [ %arg1, %dec_label_pc_d0b8 ], [ %v1_d0d0, %dec_label_pc_d0c8 ]
  %v7_d0e8 = icmp eq i32 %v0_d0e8, 1
  br i1 %v7_d0e8, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_d0e8
  %v1_d0ec = load i32, i32* @r0, align 4
  %v2_d0ec = inttoptr i32 %v1_d0ec to i8*
  %v3_d0ec = load i8, i8* %v2_d0ec, align 1
  %v4_d0ec = zext i8 %v3_d0ec to i32
  %v3_d0f0 = add i32 %v1_d0f0, %v4_d0ec
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_d0e8, %bb
  %v0_d0f4 = phi i32 [ %v1_d0f0, %dec_label_pc_d0e8 ], [ %v3_d0f0, %bb ]
  %v3_d0f8 = urem i32 %v0_d0f4, 65536
  %v4_d0fc = udiv i32 %v0_d0f4, 65536
  %v5_d0fc = add nuw nsw i32 %v4_d0fc, %v3_d0f8
  %v4_d100 = udiv i32 %v5_d0fc, 65536
  %v5_d100 = add nuw nsw i32 %v4_d100, %v5_d0fc
  %v1_d104 = urem i32 %v5_d100, 65536
  %v3_d10c = xor i32 %v1_d104, 65535
  ret i32 %v3_d10c

; uselistorder directives
  uselistorder i32 %v5_d0fc, { 1, 0 }
  uselistorder i32 %v1_d0e0, { 1, 0 }
  uselistorder i32 %v1_d0d0, { 1, 0, 2 }
  uselistorder i32 %v0_d0e0, { 0, 2, 1 }
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_d114(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_d114:
  %v3_d124 = urem i32 %arg2, 65536
  %v1_d128 = add i32 %arg1, 12
  %v1_d12c = inttoptr i32 %v1_d128 to i32*
  %v2_d12c = load i32, i32* %v1_d12c, align 4
  %v3_d12c = add i32 %arg1, 16
  %v4_d12c = inttoptr i32 %v3_d12c to i32*
  %v5_d12c = load i32, i32* %v4_d12c, align 4
  %v7_d130 = icmp sgt i32 %arg3, 1
  br i1 %v7_d130, label %dec_label_pc_d13c.preheader, label %dec_label_pc_d15c

dec_label_pc_d13c.preheader:                      ; preds = %dec_label_pc_d114
  %v0_d13c.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_d13c

dec_label_pc_d13c:                                ; preds = %dec_label_pc_d13c.preheader, %dec_label_pc_d13c
  %v0_d150 = phi i32 [ 0, %dec_label_pc_d13c.preheader ], [ %v2_d150, %dec_label_pc_d13c ]
  %v0_d144 = phi i32 [ %arg3, %dec_label_pc_d13c.preheader ], [ %v1_d144, %dec_label_pc_d13c ]
  %v0_d154 = phi i32 [ %v0_d13c.pre, %dec_label_pc_d13c.preheader ], [ %v1_d154, %dec_label_pc_d13c ]
  %v1_d13c = inttoptr i32 %v0_d154 to i8*
  %v2_d13c = load i8, i8* %v1_d13c, align 1
  %v3_d13c = zext i8 %v2_d13c to i32
  %v1_d140 = add i32 %v0_d154, 1
  %v2_d140 = inttoptr i32 %v1_d140 to i8*
  %v3_d140 = load i8, i8* %v2_d140, align 1
  %v4_d140 = zext i8 %v3_d140 to i32
  %v1_d144 = add nsw i32 %v0_d144, -2
  %v4_d148 = mul nuw nsw i32 %v4_d140, 256
  %v5_d148 = or i32 %v4_d148, %v3_d13c
  %v2_d150 = add i32 %v5_d148, %v0_d150
  %v1_d154 = add i32 %v0_d154, 2
  store i32 %v1_d154, i32* @r1, align 4
  %v8_d158 = icmp sgt i32 %v1_d144, 1
  br i1 %v8_d158, label %dec_label_pc_d13c, label %dec_label_pc_d15c

dec_label_pc_d15c:                                ; preds = %dec_label_pc_d13c, %dec_label_pc_d114
  %v1_d164 = phi i32 [ 0, %dec_label_pc_d114 ], [ %v2_d150, %dec_label_pc_d13c ]
  %v0_d15c = phi i32 [ %arg3, %dec_label_pc_d114 ], [ %v1_d144, %dec_label_pc_d13c ]
  %v7_d15c = icmp eq i32 %v0_d15c, 1
  br i1 %v7_d15c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_d15c
  %v1_d160 = load i32, i32* @r1, align 4
  %v2_d160 = inttoptr i32 %v1_d160 to i8*
  %v3_d160 = load i8, i8* %v2_d160, align 1
  %v4_d160 = zext i8 %v3_d160 to i32
  %v3_d164 = add i32 %v4_d160, %v1_d164
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_d15c, %bb
  %v0_d188 = phi i32 [ %v1_d164, %dec_label_pc_d15c ], [ %v3_d164, %bb ]
  %v3_d16c = urem i32 %v2_d12c, 65536
  %v1_d174 = add i32 %arg1, 9
  %v2_d174 = inttoptr i32 %v1_d174 to i8*
  %v3_d174 = load i8, i8* %v2_d174, align 1
  %v4_d174 = zext i8 %v3_d174 to i32
  %v3_d178 = urem i32 %v5_d12c, 65536
  %v4_d17c = udiv i32 %v2_d12c, 65536
  %v3_d184 = mul nuw nsw i32 %v4_d174, 256
  %v4_d188 = udiv i32 %v5_d12c, 65536
  %v5_d188 = add i32 %v0_d188, %v4_d188
  %v2_d18c = add i32 %v5_d188, %v3_d184
  %v5_d17c = add nuw nsw i32 %v3_d16c, %v3_d124
  %v2_d180 = add nuw nsw i32 %v5_d17c, %v4_d17c
  %v2_d190 = add nuw nsw i32 %v2_d180, %v3_d178
  %v2_d194 = add i32 %v2_d18c, %v2_d190
  %tmp = icmp ult i32 %v2_d194, 65536
  br i1 %tmp, label %dec_label_pc_d1b4, label %dec_label_pc_d1a0

dec_label_pc_d1a0:                                ; preds = %.thread, %dec_label_pc_d1a0
  %v2_d1a81 = phi i32 [ %v2_d1a8, %dec_label_pc_d1a0 ], [ %v2_d194, %.thread ]
  %v3_d1ac2.in = phi i32 [ %v2_d1a8, %dec_label_pc_d1a0 ], [ %v2_d194, %.thread ]
  %v3_d1ac2 = udiv i32 %v3_d1ac2.in, 65536
  %v3_d1a4 = urem i32 %v2_d1a81, 65536
  %v2_d1a8 = add nuw nsw i32 %v3_d1a4, %v3_d1ac2
  %tmp14 = icmp ult i32 %v2_d1a8, 65536
  br i1 %tmp14, label %dec_label_pc_d1b4.loopexit, label %dec_label_pc_d1a0

dec_label_pc_d1b4.loopexit:                       ; preds = %dec_label_pc_d1a0
  br label %dec_label_pc_d1b4

dec_label_pc_d1b4:                                ; preds = %dec_label_pc_d1b4.loopexit, %.thread
  %v0_d1b4 = phi i32 [ %v2_d1a8, %dec_label_pc_d1b4.loopexit ], [ %v2_d194, %.thread ]
  %v1_d1b4 = urem i32 %v0_d1b4, 65536
  %v3_d1bc = xor i32 %v1_d1b4, 65535
  ret i32 %v3_d1bc

; uselistorder directives
  uselistorder i32 %v2_d1a8, { 2, 1, 3, 0 }
  uselistorder i32 %v2_d194, { 3, 0, 2, 1 }
  uselistorder i32 %v1_d164, { 1, 0 }
  uselistorder i32 %v1_d154, { 1, 0 }
  uselistorder i32 %v1_d144, { 0, 2, 1 }
  uselistorder i32 %v0_d154, { 0, 2, 1 }
  uselistorder i32 %arg3, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d1a0, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_d13c, { 1, 0 }
}

define i32 @function_d1c4(i32 %arg1) local_unnamed_addr {
dec_label_pc_d1c4:
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-68 = alloca i8, align 1
  %stack_var_-581 = alloca i8, align 1
  %stack_var_-8773 = alloca i32, align 4
  %stack_var_-4677 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_d1c4 = load i32, i32* @r4, align 4
  store i32 %v3_d1c4, i32* %stack_var_-36, align 4
  %v6_d1c4 = load i32, i32* @r5, align 4
  %v9_d1c4 = load i32, i32* @r6, align 4
  %v12_d1c4 = load i32, i32* @r7, align 4
  %v15_d1c4 = load i32, i32* @r8, align 4
  %v18_d1c4 = load i32, i32* @sb, align 4
  %v21_d1c4 = load i32, i32* @sl, align 4
  %v24_d1c4 = load i32, i32* @fp, align 4
  %v2_d1d8 = ptrtoint i32* %stack_var_-4677 to i32
  store i32 %v2_d1d8, i32* @sl, align 4
  %v3_d1e0 = mul i32 %arg1, 65536
  store i32 %v3_d1e0, i32* @r5, align 4
  store i32 4096, i32* @r2, align 4
  %v2_d1ec = ptrtoint i32* %stack_var_-8773 to i32
  %v2_d1f8 = bitcast i32* %stack_var_-4677 to i8*
  %v3_d1f8 = call i32 @function_130d0(i8* %v2_d1f8, i32 0)
  store i32 4096, i32* @r2, align 4
  %v2_d210 = bitcast i32* %stack_var_-8773 to i8*
  %v3_d210 = call i32 @function_130d0(i8* %v2_d210, i32 0)
  %v2_d214 = ptrtoint i8* %stack_var_-581 to i32
  store i32 %v2_d214, i32* @r6, align 4
  store i32 513, i32* @r2, align 4
  %v3_d234 = call i32 @function_130d0(i8* nonnull %stack_var_-581, i32 0)
  %v2_d238 = ptrtoint i8* %stack_var_-68 to i32
  %v1_d240 = load i32, i32* @r5, align 4
  %v4_d240 = udiv i32 %v1_d240, 16777216
  store i32 0, i32* @r4, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v3_d260 = trunc i32 %v4_d240 to i8
  %v4_d260 = call i32 @function_125fc(i8 %v3_d260, i32 16, i32 %v2_d238)
  %v2_d268 = call i32 @function_12198(i8* nonnull %stack_var_-68)
  %v7_d26c = icmp eq i32 %v2_d268, 2
  br i1 %v7_d26c, label %dec_label_pc_d734, label %dec_label_pc_d274

dec_label_pc_d274:                                ; preds = %dec_label_pc_d1c4, %dec_label_pc_d734
  %v1_d278 = call i32 @function_11bcc(i32 13)
  %v1_d280 = call i32 @function_11bcc(i32 14)
  %v1_d288 = call i32 @function_11bcc(i32 15)
  %v1_d290 = call i32 @function_11bcc(i32 17)
  %v0_d294 = load i32, i32* @r4, align 4
  %v2_d29c = inttoptr i32 %v0_d294 to i32*
  %v3_d29c = call i32 @function_11ae8(i32 17, i32* %v2_d29c)
  %v0_d2a0 = load i32, i32* @r4, align 4
  %v2_d2a4 = inttoptr i32 %v3_d29c to i8*
  %v3_d2a4 = call i32 @function_12bc8(i8* %v2_d2a4, i32 %v0_d2a0)
  %v7_d2a8 = icmp eq i32 %v3_d2a4, -1
  store i32 %v3_d2a4, i32* @r8, align 4
  br i1 %v7_d2a8, label %dec_label_pc_d6d0, label %dec_label_pc_d2b4.preheader

dec_label_pc_d2b4.preheader:                      ; preds = %dec_label_pc_d274
  %v4_d2c058 = call i32 @function_123f0(i8* nonnull %stack_var_-581, i32 512, i32 %v3_d2a4)
  %v2_d2c460 = icmp eq i32 %v4_d2c058, 0
  br i1 %v2_d2c460, label %dec_label_pc_d454.loopexit, label %dec_label_pc_d2cc.lr.ph

dec_label_pc_d2cc.lr.ph:                          ; preds = %dec_label_pc_d2b4.preheader
  %v2_d314 = ptrtoint i32* %stack_var_-36 to i32
  br label %dec_label_pc_d2cc

dec_label_pc_d2cc:                                ; preds = %dec_label_pc_d2cc.lr.ph, %dec_label_pc_d2b4.backedge
  %v3_d2d0 = load i8, i8* %stack_var_-581, align 1
  %v4_d2d0 = sext i8 %v3_d2d0 to i32
  %v2_d2d4 = icmp eq i8 %v3_d2d0, 0
  br i1 %v2_d2d4, label %bb126, label %bb

bb:                                               ; preds = %dec_label_pc_d2cc
  %v8_d2d8 = icmp eq i8 %v3_d2d0, 58
  br i1 %v8_d2d8, label %.thread6, label %dec_label_pc_d2ec

.thread6:                                         ; preds = %bb
  br label %dec_label_pc_d304

bb126:                                            ; preds = %dec_label_pc_d2cc
  br label %dec_label_pc_d304

dec_label_pc_d2ec:                                ; preds = %bb
  %v1_d2f4.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_d2f0

dec_label_pc_d2f0:                                ; preds = %bb127, %dec_label_pc_d2ec
  %v0_d2f0 = phi i32 [ %v1_d2f0, %bb127 ], [ 0, %dec_label_pc_d2ec ]
  %v1_d2f0 = add i32 %v0_d2f0, 1
  %v2_d2f4 = add i32 %v1_d2f0, %v1_d2f4.pre
  %v3_d2f4 = inttoptr i32 %v2_d2f4 to i8*
  %v4_d2f4 = load i8, i8* %v3_d2f4, align 1
  %v6_d2f4 = zext i8 %v4_d2f4 to i32
  %v2_d2f8 = icmp eq i8 %v4_d2f4, 0
  br i1 %v2_d2f8, label %dec_label_pc_d304, label %bb127

bb127:                                            ; preds = %dec_label_pc_d2f0
  %v8_d2fc = icmp eq i8 %v4_d2f4, 58
  br i1 %v8_d2fc, label %dec_label_pc_d304, label %dec_label_pc_d2f0

dec_label_pc_d304:                                ; preds = %dec_label_pc_d2f0, %bb127, %bb126, %.thread6
  %v1_d330 = phi i32 [ 0, %.thread6 ], [ 0, %bb126 ], [ %v1_d2f0, %bb127 ], [ %v1_d2f0, %dec_label_pc_d2f0 ]
  %v0_d304 = phi i32 [ %v4_d2d0, %.thread6 ], [ %v4_d2d0, %bb126 ], [ %v6_d2f4, %bb127 ], [ %v6_d2f4, %dec_label_pc_d2f0 ]
  %v2_d304 = icmp eq i32 %v0_d304, 0
  br i1 %v2_d304, label %dec_label_pc_d2b4.backedge, label %dec_label_pc_d30c

dec_label_pc_d2b4.backedge:                       ; preds = %dec_label_pc_d304, %dec_label_pc_d3dc, %dec_label_pc_d428, %dec_label_pc_d350
  %v0_d2bc = load i32, i32* @r8, align 4
  %v4_d2c0 = call i32 @function_123f0(i8* nonnull %stack_var_-581, i32 512, i32 %v0_d2bc)
  %v2_d2c4 = icmp eq i32 %v4_d2c0, 0
  br i1 %v2_d2c4, label %dec_label_pc_d454.loopexit, label %dec_label_pc_d2cc

dec_label_pc_d30c:                                ; preds = %dec_label_pc_d304
  %v1_d310 = add i32 %v1_d330, 2
  %v2_d318 = add i32 %v1_d310, %v2_d314
  %v1_d31c = add i32 %v2_d318, -545
  %v2_d31c = inttoptr i32 %v1_d31c to i8*
  %v3_d31c = load i8, i8* %v2_d31c, align 1
  %v2_d320 = icmp eq i8 %v3_d31c, 0
  br i1 %v2_d320, label %bb129, label %bb128

bb128:                                            ; preds = %dec_label_pc_d30c
  %v8_d324 = icmp eq i8 %v3_d31c, 32
  br i1 %v8_d324, label %.thread10, label %dec_label_pc_d330

.thread10:                                        ; preds = %bb128
  store i32 %v1_d310, i32* @r5, align 4
  br label %dec_label_pc_d350

bb129:                                            ; preds = %dec_label_pc_d30c
  store i32 %v1_d310, i32* @r5, align 4
  br label %dec_label_pc_d350

dec_label_pc_d330:                                ; preds = %bb128
  %v0_d330 = load i32, i32* @r6, align 4
  %v2_d330 = add i32 %v0_d330, %v1_d330
  br label %dec_label_pc_d334

dec_label_pc_d334:                                ; preds = %bb130, %dec_label_pc_d330
  %v0_d34013 = phi i32 [ %v1_d340, %bb130 ], [ %v2_d330, %dec_label_pc_d330 ]
  %v1_d334 = add i32 %v0_d34013, 3
  %v2_d334 = inttoptr i32 %v1_d334 to i8*
  %v3_d334 = load i8, i8* %v2_d334, align 1
  %v2_d338 = icmp eq i8 %v3_d334, 0
  br i1 %v2_d338, label %.thread12, label %bb130

.thread12:                                        ; preds = %dec_label_pc_d334
  %v1_d34014 = add i32 %v0_d34013, 1
  br label %dec_label_pc_d348

bb130:                                            ; preds = %dec_label_pc_d334
  %v8_d33c = icmp eq i8 %v3_d334, 32
  %v1_d340 = add i32 %v0_d34013, 1
  br i1 %v8_d33c, label %dec_label_pc_d348, label %dec_label_pc_d334

dec_label_pc_d348:                                ; preds = %bb130, %.thread12
  %v1_d34015 = phi i32 [ %v1_d34014, %.thread12 ], [ %v1_d340, %bb130 ]
  %v2_d348 = sub i32 %v1_d34015, %v0_d330
  %v1_d34c = add i32 %v2_d348, 2
  store i32 %v1_d34c, i32* @r5, align 4
  br label %dec_label_pc_d350

dec_label_pc_d350:                                ; preds = %bb129, %.thread10, %dec_label_pc_d348
  %v1_d35c = phi i32 [ %v1_d310, %.thread10 ], [ %v1_d310, %bb129 ], [ %v1_d34c, %dec_label_pc_d348 ]
  %v0_d350 = load i32, i32* @r6, align 4
  %v2_d350 = add i32 %v0_d350, %v1_d310
  store i32 %v2_d350, i32* @r4, align 4
  %v2_d35c = add i32 %v1_d35c, %v2_d314
  store i32 0, i32* @r7, align 4
  %v3_d368 = add i32 %v2_d35c, -545
  %v4_d368 = inttoptr i32 %v3_d368 to i8*
  store i8 0, i8* %v4_d368, align 1
  %v1_d36c = inttoptr i32 %v2_d350 to i8*
  %v2_d36c = call i32 @function_12198(i8* %v1_d36c)
  store i32 %v2_d36c, i32* @r1, align 4
  %v0_d378 = load i32, i32* @r4, align 4
  %v3_d37c = inttoptr i32 %v0_d378 to i8*
  %v4_d37c = call i32 @function_124ec(i8* %v3_d37c, i32 %v2_d36c, i32 %v2_d238)
  %v7_d380 = icmp eq i32 %v4_d37c, -1
  br i1 %v7_d380, label %dec_label_pc_d2b4.backedge, label %dec_label_pc_d39c.preheader

dec_label_pc_d39c.preheader:                      ; preds = %dec_label_pc_d350
  %v1_d384 = load i32, i32* @r7, align 4
  %v1_d388 = load i32, i32* @r6, align 4
  %v2_d388 = load i32, i32* @r5, align 4
  %v3_d388 = add i32 %v2_d388, %v1_d388
  store i32 %v1_d384, i32* @lr, align 4
  store i32 %v1_d384, i32* @r4, align 4
  %v1_d39c50 = add i32 %v3_d388, 2
  %v2_d39c51 = inttoptr i32 %v1_d39c50 to i8*
  %v3_d39c52 = load i8, i8* %v2_d39c51, align 1
  %v2_d3a054 = icmp eq i8 %v3_d39c52, 0
  %v1_d3a456 = add i32 %v2_d388, 2
  br i1 %v2_d3a054, label %dec_label_pc_d3dc, label %dec_label_pc_d3ac

dec_label_pc_d3ac:                                ; preds = %dec_label_pc_d39c.preheader, %dec_label_pc_d39c.backedge
  %v0_d3dc86 = phi i32 [ %v0_d3dc85, %dec_label_pc_d39c.backedge ], [ %v1_d384, %dec_label_pc_d39c.preheader ]
  %v0_d3c4.pr = phi i32 [ %v0_d3c4.pr71, %dec_label_pc_d39c.backedge ], [ %v1_d384, %dec_label_pc_d39c.preheader ]
  %v0_d6e0 = phi i32 [ %v0_d6e074, %dec_label_pc_d39c.backedge ], [ %v1_d384, %dec_label_pc_d39c.preheader ]
  %v0_d3a482 = phi i32 [ %v1_d3a4, %dec_label_pc_d39c.backedge ], [ %v1_d3a456, %dec_label_pc_d39c.preheader ]
  %v0_d3d4 = phi i32 [ %v0_d39c, %dec_label_pc_d39c.backedge ], [ %v3_d388, %dec_label_pc_d39c.preheader ]
  %v1_d3b0.in = phi i8 [ %v3_d39c, %dec_label_pc_d39c.backedge ], [ %v3_d39c52, %dec_label_pc_d39c.preheader ]
  %v7_d3ac = icmp eq i8 %v1_d3b0.in, 9
  br i1 %v7_d3ac, label %.thread23, label %bb131

bb131:                                            ; preds = %dec_label_pc_d3ac
  %v8_d3b0 = icmp eq i8 %v1_d3b0.in, 32
  br i1 %v8_d3b0, label %.thread23.thread35, label %dec_label_pc_d3c4

.thread23.thread35:                               ; preds = %bb131
  br label %dec_label_pc_d3d0

.thread23:                                        ; preds = %dec_label_pc_d3ac
  br label %dec_label_pc_d3d0

dec_label_pc_d3c4:                                ; preds = %bb131
  %v7_d3c4 = icmp eq i32 %v0_d3c4.pr, 1
  br i1 %v7_d3c4, label %dec_label_pc_d6e0, label %dec_label_pc_d3cc

dec_label_pc_d3cc:                                ; preds = %dec_label_pc_d6e0, %dec_label_pc_d3c4
  %v0_d3d079 = phi i32 [ %v1_d6e0, %dec_label_pc_d6e0 ], [ %v0_d6e0, %dec_label_pc_d3c4 ]
  br label %dec_label_pc_d3d0

dec_label_pc_d3d0:                                ; preds = %.thread23, %.thread23.thread35, %dec_label_pc_d3cc
  %v0_d3d0 = phi i32 [ %v0_d6e0, %.thread23.thread35 ], [ %v0_d6e0, %.thread23 ], [ %v0_d3d079, %dec_label_pc_d3cc ]
  %v0_d3c4.pr72 = phi i32 [ 1, %.thread23.thread35 ], [ 1, %.thread23 ], [ 0, %dec_label_pc_d3cc ]
  %v7_d3d8 = icmp sgt i32 %v0_d3d0, 6
  br i1 %v7_d3d8, label %dec_label_pc_d3dc, label %dec_label_pc_d39c.backedge

dec_label_pc_d3dc:                                ; preds = %dec_label_pc_d39c.backedge, %dec_label_pc_d3d0, %dec_label_pc_d39c.preheader
  %v1_d42c = phi i32 [ %v1_d3a456, %dec_label_pc_d39c.preheader ], [ %v1_d3a4, %dec_label_pc_d39c.backedge ], [ %v0_d3a482, %dec_label_pc_d3d0 ]
  %v0_d3dc = phi i32 [ %v1_d384, %dec_label_pc_d39c.preheader ], [ %v0_d3dc85, %dec_label_pc_d39c.backedge ], [ %v0_d3dc86, %dec_label_pc_d3d0 ]
  %v2_d3dc = icmp eq i32 %v0_d3dc, 0
  br i1 %v2_d3dc, label %dec_label_pc_d2b4.backedge, label %dec_label_pc_d3e8

dec_label_pc_d3e8:                                ; preds = %dec_label_pc_d3dc
  %v2_d3f0 = add i32 %v1_d42c, %v2_d314
  %v1_d3f4 = add i32 %v2_d3f0, -545
  %v2_d3f4 = inttoptr i32 %v1_d3f4 to i8*
  %v3_d3f4 = load i8, i8* %v2_d3f4, align 1
  %v2_d3f8 = icmp eq i8 %v3_d3f4, 0
  br i1 %v2_d3f8, label %dec_label_pc_d428, label %bb132

bb132:                                            ; preds = %dec_label_pc_d3e8
  %v8_d3fc = icmp eq i8 %v3_d3f4, 32
  br i1 %v8_d3fc, label %dec_label_pc_d428, label %dec_label_pc_d404

dec_label_pc_d404:                                ; preds = %bb132
  %v2_d404 = add i32 %v1_d42c, %v1_d388
  br label %dec_label_pc_d408

dec_label_pc_d408:                                ; preds = %bb133, %dec_label_pc_d404
  %v0_d41428 = phi i32 [ %v1_d414, %bb133 ], [ %v1_d42c, %dec_label_pc_d404 ]
  %v0_d408 = phi i32 [ %v1_d408, %bb133 ], [ %v2_d404, %dec_label_pc_d404 ]
  %v1_d408 = add i32 %v0_d408, 1
  %v2_d408 = inttoptr i32 %v1_d408 to i8*
  %v3_d408 = load i8, i8* %v2_d408, align 1
  %v2_d40c = icmp eq i8 %v3_d408, 0
  br i1 %v2_d40c, label %.thread27, label %bb133

.thread27:                                        ; preds = %dec_label_pc_d408
  %v1_d41429 = add i32 %v0_d41428, 1
  br label %dec_label_pc_d41c

bb133:                                            ; preds = %dec_label_pc_d408
  %v8_d410 = icmp eq i8 %v3_d408, 32
  %v1_d414 = add i32 %v0_d41428, 1
  br i1 %v8_d410, label %dec_label_pc_d41c, label %dec_label_pc_d408

dec_label_pc_d41c:                                ; preds = %bb133, %.thread27
  %v1_d424 = phi i32 [ %v1_d41429, %.thread27 ], [ %v1_d414, %bb133 ]
  %v2_d424 = add i32 %v1_d424, %v2_d314
  br label %dec_label_pc_d428

dec_label_pc_d428:                                ; preds = %dec_label_pc_d3e8, %bb132, %dec_label_pc_d41c
  %v2_d434 = phi i32 [ %v2_d3f0, %dec_label_pc_d3e8 ], [ %v2_d3f0, %bb132 ], [ %v2_d424, %dec_label_pc_d41c ]
  %v2_d42c = add i32 %v1_d42c, %v1_d388
  store i32 %v2_d42c, i32* @r4, align 4
  %v3_d434 = add i32 %v2_d434, -545
  %v4_d434 = inttoptr i32 %v3_d434 to i8*
  store i8 0, i8* %v4_d434, align 1
  %v1_d438 = inttoptr i32 %v2_d42c to i8*
  %v2_d438 = call i32 @function_12198(i8* %v1_d438)
  %v8_d440 = icmp sgt i32 %v2_d438, 15
  br i1 %v8_d440, label %dec_label_pc_d2b4.backedge, label %dec_label_pc_d444

dec_label_pc_d444:                                ; preds = %dec_label_pc_d428
  %v0_d448 = load i32, i32* @r4, align 4
  %v2_d44c = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_d44c, i32* @r0, align 4
  %v2_d450 = bitcast i32* %stack_var_-52 to i8*
  %v3_d450 = call i32 @function_121c0(i8* %v2_d450, i32 %v0_d448)
  br label %dec_label_pc_d454

dec_label_pc_d454.loopexit:                       ; preds = %dec_label_pc_d2b4.backedge, %dec_label_pc_d2b4.preheader
  %.pre = ptrtoint i32* %stack_var_-52 to i32
  %.pre95 = bitcast i32* %stack_var_-52 to i8*
  br label %dec_label_pc_d454

dec_label_pc_d454:                                ; preds = %dec_label_pc_d454.loopexit, %dec_label_pc_d444
  %v1_d464.pre-phi = phi i8* [ %.pre95, %dec_label_pc_d454.loopexit ], [ %v2_d450, %dec_label_pc_d444 ]
  %v2_d460.pre-phi = phi i32 [ %.pre, %dec_label_pc_d454.loopexit ], [ %v2_d44c, %dec_label_pc_d444 ]
  %v0_d454 = load i32, i32* @r8, align 4
  %v1_d458 = call i32 @function_12a9c(i32 %v0_d454)
  %v2_d464 = call i32 @function_12198(i8* %v1_d464.pre-phi)
  store i32 %v2_d464, i32* @r4, align 4
  %v2_d468 = icmp eq i32 %v2_d464, 0
  br i1 %v2_d468, label %dec_label_pc_d710, label %dec_label_pc_d470

dec_label_pc_d470:                                ; preds = %dec_label_pc_d454
  %v3_d478 = call i32 @function_11ae8(i32 13, i32* null)
  store i32 %v3_d478, i32* @r0, align 4
  %v1_d47c = call i32 @function_12ea4(i32 %v3_d478)
  store i32 %v1_d47c, i32* @r8, align 4
  %v2_d480 = icmp eq i32 %v1_d47c, 0
  br i1 %v2_d480, label %dec_label_pc_d6b0, label %dec_label_pc_d490.preheader

dec_label_pc_d490.preheader:                      ; preds = %dec_label_pc_d470
  store i32 0, i32* @r5, align 4
  %v1_d49445 = inttoptr i32 %v1_d47c to i32*
  %v2_d49446 = call i32 @function_12fa0(i32* %v1_d49445)
  %v2_d49848 = icmp eq i32 %v2_d49446, 0
  br i1 %v2_d49848, label %dec_label_pc_d6a4, label %dec_label_pc_d4a0.preheader

dec_label_pc_d490.loopexit:                       ; preds = %dec_label_pc_d4a8, %dec_label_pc_d4bc, %dec_label_pc_d524
  %v0_d490 = load i32, i32* @r8, align 4
  %v1_d494 = inttoptr i32 %v0_d490 to i32*
  %v2_d494 = call i32 @function_12fa0(i32* %v1_d494)
  %v2_d498 = icmp eq i32 %v2_d494, 0
  br i1 %v2_d498, label %dec_label_pc_d6a4, label %dec_label_pc_d4a0.preheader

dec_label_pc_d4a0.preheader:                      ; preds = %dec_label_pc_d490.preheader, %dec_label_pc_d490.loopexit
  %v0_d4a894 = phi i32 [ %v2_d494, %dec_label_pc_d490.loopexit ], [ %v2_d49446, %dec_label_pc_d490.preheader ]
  br label %dec_label_pc_d4a0

dec_label_pc_d4a0:                                ; preds = %dec_label_pc_d4a0.preheader, %dec_label_pc_d68c
  %v0_d4b4 = phi i32 [ %v0_d4a894, %dec_label_pc_d4a0.preheader ], [ %v2_d698, %dec_label_pc_d68c ]
  %v0_d4a0 = load i32, i32* @r5, align 4
  %v2_d4a0 = icmp eq i32 %v0_d4a0, 0
  br i1 %v2_d4a0, label %dec_label_pc_d4a8, label %dec_label_pc_d6a4

dec_label_pc_d4a8:                                ; preds = %dec_label_pc_d4a0
  %v1_d4a8 = add i32 %v0_d4b4, 11
  %v2_d4a8 = inttoptr i32 %v1_d4a8 to i8*
  %v3_d4a8 = load i8, i8* %v2_d4a8, align 1
  %v4_d4a8 = zext i8 %v3_d4a8 to i32
  %v1_d4ac = add nsw i32 %v4_d4a8, -48
  store i32 %v1_d4a8, i32* @r7, align 4
  %tmp = icmp ugt i32 %v1_d4ac, 9
  br i1 %tmp, label %dec_label_pc_d490.loopexit, label %dec_label_pc_d4bc

dec_label_pc_d4bc:                                ; preds = %dec_label_pc_d4a8
  %v3_d4c4 = call i32 @function_11ae8(i32 13, i32* null)
  store i32 %v2_d1d8, i32* @r0, align 4
  %v3_d4d0 = call i32 @function_121c0(i8* %v2_d1f8, i32 %v3_d4c4)
  %v2_d4d8 = call i32 @function_12198(i8* %v2_d1f8)
  %v0_d4dc = load i32, i32* @r7, align 4
  %v0_d4e0 = load i32, i32* @sl, align 4
  %v2_d4e0 = add i32 %v0_d4e0, %v2_d4d8
  store i32 %v2_d4e0, i32* @r0, align 4
  %v2_d4e4 = inttoptr i32 %v2_d4e0 to i8*
  %v3_d4e4 = call i32 @function_121c0(i8* %v2_d4e4, i32 %v0_d4dc)
  %v2_d4ec = call i32 @function_12198(i8* %v2_d1f8)
  %v0_d4f0 = load i32, i32* @r5, align 4
  store i32 %v2_d4ec, i32* @r4, align 4
  %v2_d4fc = inttoptr i32 %v0_d4f0 to i32*
  %v3_d4fc = call i32 @function_11ae8(i32 14, i32* %v2_d4fc)
  %v0_d504 = load i32, i32* @sl, align 4
  %v1_d504 = load i32, i32* @r4, align 4
  %v2_d504 = add i32 %v1_d504, %v0_d504
  store i32 %v2_d504, i32* @r0, align 4
  %v2_d508 = inttoptr i32 %v2_d504 to i8*
  %v3_d508 = call i32 @function_121c0(i8* %v2_d508, i32 %v3_d4fc)
  %v4_d518 = call i32 @function_12c90(i8* %v2_d1f8, i32 %v2_d1ec, i32 4096)
  %v7_d51c = icmp eq i32 %v4_d518, -1
  br i1 %v7_d51c, label %dec_label_pc_d490.loopexit, label %dec_label_pc_d524

dec_label_pc_d524:                                ; preds = %dec_label_pc_d4bc
  %v0_d524 = load i32, i32* @r5, align 4
  %v2_d52c = inttoptr i32 %v0_d524 to i32*
  %v3_d52c = call i32 @function_11ae8(i32 13, i32* %v2_d52c)
  store i32 %v2_d1d8, i32* @r0, align 4
  %v3_d538 = call i32 @function_121c0(i8* %v2_d1f8, i32 %v3_d52c)
  %v2_d540 = call i32 @function_12198(i8* %v2_d1f8)
  %v0_d544 = load i32, i32* @r7, align 4
  %v0_d548 = load i32, i32* @sl, align 4
  %v2_d548 = add i32 %v0_d548, %v2_d540
  store i32 %v2_d548, i32* @r0, align 4
  %v2_d54c = inttoptr i32 %v2_d548 to i8*
  %v3_d54c = call i32 @function_121c0(i8* %v2_d54c, i32 %v0_d544)
  %v2_d554 = call i32 @function_12198(i8* %v2_d1f8)
  %v0_d558 = load i32, i32* @r5, align 4
  store i32 %v2_d554, i32* @r4, align 4
  %v2_d564 = inttoptr i32 %v0_d558 to i32*
  %v3_d564 = call i32 @function_11ae8(i32 15, i32* %v2_d564)
  %v0_d56c = load i32, i32* @sl, align 4
  %v1_d56c = load i32, i32* @r4, align 4
  %v2_d56c = add i32 %v1_d56c, %v0_d56c
  store i32 %v2_d56c, i32* @r0, align 4
  %v2_d570 = inttoptr i32 %v2_d56c to i8*
  %v3_d570 = call i32 @function_121c0(i8* %v2_d570, i32 %v3_d564)
  store i32 %v2_d1d8, i32* @r0, align 4
  %v1_d578 = call i32 @function_12ea4(i32 %v2_d1d8)
  store i32 %v1_d578, i32* @sb, align 4
  %v2_d57c = icmp eq i32 %v1_d578, 0
  br i1 %v2_d57c, label %dec_label_pc_d490.loopexit, label %dec_label_pc_d584.preheader

dec_label_pc_d584.preheader:                      ; preds = %dec_label_pc_d524
  %v1_d58840 = inttoptr i32 %v1_d578 to i32*
  %v2_d58841 = call i32 @function_12fa0(i32* %v1_d58840)
  store i32 %v2_d58841, i32* @r6, align 4
  %v2_d58c43 = icmp eq i32 %v2_d58841, 0
  store i32 4096, i32* @r1, align 4
  store i32 %v2_d1ec, i32* @r0, align 4
  br i1 %v2_d58c43, label %dec_label_pc_d68c, label %dec_label_pc_d59cthread-pre-split

dec_label_pc_d584.loopexit:                       ; preds = %dec_label_pc_d5a4, %dec_label_pc_d63c
  %v0_d584 = load i32, i32* @sb, align 4
  %v1_d588 = inttoptr i32 %v0_d584 to i32*
  %v2_d588 = call i32 @function_12fa0(i32* %v1_d588)
  store i32 %v2_d588, i32* @r6, align 4
  %v2_d58c = icmp eq i32 %v2_d588, 0
  store i32 4096, i32* @r1, align 4
  store i32 %v2_d1ec, i32* @r0, align 4
  br i1 %v2_d58c, label %dec_label_pc_d68c, label %dec_label_pc_d59cthread-pre-split

dec_label_pc_d59cthread-pre-split:                ; preds = %dec_label_pc_d584.preheader, %dec_label_pc_d584.loopexit
  %v0_d59c.pr = load i32, i32* @r5, align 4
  br label %dec_label_pc_d59c

dec_label_pc_d59c:                                ; preds = %dec_label_pc_d59cthread-pre-split, %dec_label_pc_d664
  %v0_d59c = phi i32 [ %v0_d59c.pr, %dec_label_pc_d59cthread-pre-split ], [ 1, %dec_label_pc_d664 ]
  %v2_d59c = icmp eq i32 %v0_d59c, 0
  br i1 %v2_d59c, label %dec_label_pc_d5a4, label %dec_label_pc_d68c

dec_label_pc_d5a4:                                ; preds = %dec_label_pc_d59c
  %v0_d5a4 = call i32 @function_12238()
  %v0_d5a8 = load i32, i32* @r5, align 4
  %v2_d5b0 = inttoptr i32 %v0_d5a8 to i32*
  %v3_d5b0 = call i32 @function_11ae8(i32 13, i32* %v2_d5b0)
  store i32 %v2_d1d8, i32* @r0, align 4
  %v3_d5bc = call i32 @function_121c0(i8* %v2_d1f8, i32 %v3_d5b0)
  %v2_d5c4 = call i32 @function_12198(i8* %v2_d1f8)
  %v0_d5c8 = load i32, i32* @r7, align 4
  %v0_d5cc = load i32, i32* @sl, align 4
  %v2_d5cc = add i32 %v0_d5cc, %v2_d5c4
  store i32 %v2_d5cc, i32* @r0, align 4
  %v2_d5d0 = inttoptr i32 %v2_d5cc to i8*
  %v3_d5d0 = call i32 @function_121c0(i8* %v2_d5d0, i32 %v0_d5c8)
  %v2_d5d8 = call i32 @function_12198(i8* %v2_d1f8)
  %v0_d5dc = load i32, i32* @r5, align 4
  store i32 %v2_d5d8, i32* @r4, align 4
  %v2_d5e8 = inttoptr i32 %v0_d5dc to i32*
  %v3_d5e8 = call i32 @function_11ae8(i32 15, i32* %v2_d5e8)
  %v0_d5f0 = load i32, i32* @sl, align 4
  %v1_d5f0 = load i32, i32* @r4, align 4
  %v2_d5f0 = add i32 %v1_d5f0, %v0_d5f0
  store i32 %v2_d5f0, i32* @r0, align 4
  %v2_d5f4 = inttoptr i32 %v2_d5f0 to i8*
  %v3_d5f4 = call i32 @function_121c0(i8* %v2_d5f4, i32 %v3_d5e8)
  %v2_d5fc = call i32 @function_12198(i8* %v2_d1f8)
  %v0_d604 = load i32, i32* @sl, align 4
  %v2_d604 = add i32 %v0_d604, %v2_d5fc
  store i32 %v2_d604, i32* @r0, align 4
  %v2_d608 = inttoptr i32 %v2_d604 to i8*
  %v3_d608 = call i32 @function_121c0(i8* %v2_d608, i32 ptrtoint (i32* @global_var_15304.61 to i32))
  %v2_d610 = call i32 @function_12198(i8* %v2_d1f8)
  %v0_d614 = load i32, i32* @r6, align 4
  %v1_d614 = add i32 %v0_d614, 11
  %v0_d618 = load i32, i32* @sl, align 4
  %v2_d618 = add i32 %v0_d618, %v2_d610
  store i32 %v2_d618, i32* @r0, align 4
  %v2_d61c = inttoptr i32 %v2_d618 to i8*
  %v3_d61c = call i32 @function_121c0(i8* %v2_d61c, i32 %v1_d614)
  %v4_d62c = call i32 @function_12c90(i8* %v2_d1f8, i32 %v2_d1ec, i32 4096)
  %v7_d630 = icmp eq i32 %v4_d62c, -1
  br i1 %v7_d630, label %dec_label_pc_d584.loopexit, label %dec_label_pc_d63c

dec_label_pc_d63c:                                ; preds = %dec_label_pc_d5a4
  %v2_d63c = call i32 @function_12198(i8* %v2_d210)
  store i32 %v2_d63c, i32* @r1, align 4
  %v4_d650 = call i32 @function_124ec(i8* %v2_d210, i32 %v2_d63c, i32 %v2_d460.pre-phi)
  %v7_d654 = icmp eq i32 %v4_d650, -1
  br i1 %v7_d654, label %dec_label_pc_d584.loopexit, label %dec_label_pc_d664

dec_label_pc_d664:                                ; preds = %dec_label_pc_d63c
  %v0_d65c = load i32, i32* @r7, align 4
  %v2_d664 = inttoptr i32 %v0_d65c to i8*
  %v3_d664 = call i32 @function_122c4(i8* %v2_d664, i32 10)
  %v2_d66c = call i32 @function_12b9c(i32 %v3_d664, i32 9)
  %v0_d670 = load i32, i32* @sb, align 4
  %v1_d674 = inttoptr i32 %v0_d670 to i32*
  %v2_d674 = call i32 @function_12fa0(i32* %v1_d674)
  store i32 %v2_d674, i32* @r6, align 4
  %v2_d678 = icmp eq i32 %v2_d674, 0
  store i32 1, i32* @r5, align 4
  store i32 4096, i32* @r1, align 4
  store i32 %v2_d1ec, i32* @r0, align 4
  br i1 %v2_d678, label %dec_label_pc_d68c, label %dec_label_pc_d59c

dec_label_pc_d68c:                                ; preds = %dec_label_pc_d584.loopexit, %dec_label_pc_d664, %dec_label_pc_d59c, %dec_label_pc_d584.preheader
  %v0_d68c = load i32, i32* @sb, align 4
  %v1_d690 = inttoptr i32 %v0_d68c to i32*
  %v2_d690 = call i32 @function_12df0(i32* %v1_d690)
  %v0_d694 = load i32, i32* @r8, align 4
  %v1_d698 = inttoptr i32 %v0_d694 to i32*
  %v2_d698 = call i32 @function_12fa0(i32* %v1_d698)
  %v2_d69c = icmp eq i32 %v2_d698, 0
  br i1 %v2_d69c, label %dec_label_pc_d6a4, label %dec_label_pc_d4a0

dec_label_pc_d6a4:                                ; preds = %dec_label_pc_d490.loopexit, %dec_label_pc_d68c, %dec_label_pc_d4a0, %dec_label_pc_d490.preheader
  %v0_d6a4 = load i32, i32* @r8, align 4
  %v1_d6a8 = inttoptr i32 %v0_d6a4 to i32*
  %v2_d6a8 = call i32 @function_12df0(i32* %v1_d6a8)
  %v0_d6ac = load i32, i32* @r5, align 4
  %v1_d6ac = urem i32 %v0_d6ac, 256
  br label %dec_label_pc_d6b0

dec_label_pc_d6b0:                                ; preds = %dec_label_pc_d470, %dec_label_pc_d6a4
  %storemerge = phi i32 [ %v1_d6ac, %dec_label_pc_d6a4 ], [ 0, %dec_label_pc_d470 ]
  store i32 %storemerge, i32* @r4, align 4
  %v1_d6b4 = call i32 @function_13e9c(i32 1)
  %v1_d6bc = call i32 @function_11b14(i32 13)
  %v1_d6c4 = call i32 @function_11b14(i32 14)
  %v1_d6cc = call i32 @function_11b14(i32 15)
  br label %dec_label_pc_d6d0

dec_label_pc_d6d0:                                ; preds = %dec_label_pc_d274, %dec_label_pc_d710, %dec_label_pc_d6b0
  %v0_d6d0 = load i32, i32* @r4, align 4
  %v2_d6dc = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_d6dc, i32* @r4, align 4
  store i32 %v6_d1c4, i32* @r5, align 4
  store i32 %v9_d1c4, i32* @r6, align 4
  store i32 %v12_d1c4, i32* @r7, align 4
  store i32 %v15_d1c4, i32* @r8, align 4
  store i32 %v18_d1c4, i32* @sb, align 4
  store i32 %v21_d1c4, i32* @sl, align 4
  store i32 %v24_d1c4, i32* @fp, align 4
  ret i32 %v0_d6d0

dec_label_pc_d6e0:                                ; preds = %dec_label_pc_d3c4
  %v1_d6e0 = add i32 %v0_d6e0, 1
  store i32 %v1_d6e0, i32* @lr, align 4
  %v7_d6e4 = icmp eq i32 %v0_d6e0, 0
  br i1 %v7_d6e4, label %dec_label_pc_d6ec, label %dec_label_pc_d3cc

dec_label_pc_d6ec:                                ; preds = %dec_label_pc_d6e0
  %v1_d6ec = add i32 %v0_d3d4, 3
  %v2_d6ec = inttoptr i32 %v1_d6ec to i8*
  %v3_d6ec = load i8, i8* %v2_d6ec, align 1
  %v7_d6f0 = icmp eq i8 %v3_d6ec, 65
  br i1 %v7_d6f0, label %dec_label_pc_d700, label %.thread33

.thread33:                                        ; preds = %dec_label_pc_d6ec
  br label %dec_label_pc_d39c.backedge

dec_label_pc_d700:                                ; preds = %dec_label_pc_d6ec
  store i32 %v1_d6e0, i32* @r4, align 4
  br label %dec_label_pc_d39c.backedge

dec_label_pc_d39c.backedge:                       ; preds = %.thread33, %dec_label_pc_d700, %dec_label_pc_d3d0
  %v0_d3dc85 = phi i32 [ %v1_d6e0, %dec_label_pc_d700 ], [ %v0_d3dc86, %dec_label_pc_d3d0 ], [ %v0_d3dc86, %.thread33 ]
  %v0_d6e074 = phi i32 [ %v1_d6e0, %dec_label_pc_d700 ], [ %v0_d3d0, %dec_label_pc_d3d0 ], [ %v1_d6e0, %.thread33 ]
  %v0_d3c4.pr71 = phi i32 [ 0, %dec_label_pc_d700 ], [ %v0_d3c4.pr72, %dec_label_pc_d3d0 ], [ 0, %.thread33 ]
  %v0_d39c = add i32 %v0_d3d4, 1
  %v1_d39c = add i32 %v0_d3d4, 3
  %v2_d39c = inttoptr i32 %v1_d39c to i8*
  %v3_d39c = load i8, i8* %v2_d39c, align 1
  %v2_d3a0 = icmp eq i8 %v3_d39c, 0
  %v1_d3a4 = add i32 %v0_d3a482, 1
  br i1 %v2_d3a0, label %dec_label_pc_d3dc, label %dec_label_pc_d3ac

dec_label_pc_d710:                                ; preds = %dec_label_pc_d454
  %v1_d714 = call i32 @function_11b14(i32 13)
  %v1_d71c = call i32 @function_11b14(i32 14)
  %v1_d724 = call i32 @function_11b14(i32 15)
  %v1_d72c = call i32 @function_11b14(i32 17)
  br label %dec_label_pc_d6d0

dec_label_pc_d734:                                ; preds = %dec_label_pc_d1c4
  store i8 48, i8* %stack_var_-68, align 1
  br label %dec_label_pc_d274

; uselistorder directives
  uselistorder i32 %v1_d3a4, { 1, 0 }
  uselistorder i8 %v3_d39c, { 1, 0 }
  uselistorder i32 %v0_d3dc85, { 1, 0 }
  uselistorder i32 %v1_d6e0, { 4, 3, 0, 2, 5, 1 }
  uselistorder i32 %v2_d698, { 1, 0 }
  uselistorder i32 %v1_d408, { 1, 0 }
  uselistorder i32 %v0_d41428, { 1, 0 }
  uselistorder i32 %v1_d42c, { 0, 3, 1, 2 }
  uselistorder i32 %v0_d3d0, { 1, 0 }
  uselistorder i32 %v0_d3a482, { 1, 0 }
  uselistorder i32 %v0_d6e0, { 4, 3, 0, 1, 2 }
  uselistorder i32 %v0_d3dc86, { 1, 2, 0 }
  uselistorder i32 %v1_d3a456, { 1, 0 }
  uselistorder i32 %v2_d388, { 1, 0 }
  uselistorder i32 %v1_d384, { 3, 1, 0, 2, 4, 5 }
  uselistorder i32 %v0_d34013, { 1, 0, 2 }
  uselistorder i32 %v0_d330, { 1, 0 }
  uselistorder i32 %v1_d310, { 0, 2, 3, 4, 5, 1 }
  uselistorder i32 %v3_d2a4, { 1, 2, 0 }
  uselistorder i32 %v2_d1ec, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_d1d8, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32* %stack_var_-36, { 0, 2, 1 }
  uselistorder i8* %stack_var_-581, { 1, 4, 0, 2, 3 }
  uselistorder i8* %stack_var_-68, { 2, 0, 1 }
  uselistorder i32* %stack_var_-52, { 0, 1, 2, 4, 3 }
  uselistorder i32 (i8*, i32)* @function_122c4, { 1, 0 }
  uselistorder i32 (i8*, i32, i32)* @function_123f0, { 1, 0 }
  uselistorder label %dec_label_pc_d39c.backedge, { 1, 0, 2 }
  uselistorder label %dec_label_pc_d6d0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_d6b0, { 1, 0 }
  uselistorder label %dec_label_pc_d6a4, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_d68c, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_d59c, { 1, 0 }
  uselistorder label %dec_label_pc_d59cthread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_d584.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_d4a0, { 1, 0 }
  uselistorder label %dec_label_pc_d4a0.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_d490.loopexit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d428, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d3d0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_d3ac, { 1, 0 }
  uselistorder label %dec_label_pc_d350, { 2, 0, 1 }
  uselistorder label %dec_label_pc_d2b4.backedge, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_d304, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_d2cc, { 1, 0 }
  uselistorder label %dec_label_pc_d274, { 1, 0 }
}

define i32 @function_d760(i32 %arg1) local_unnamed_addr {
dec_label_pc_d760:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-220 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-124 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %stack_var_-8476 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-4380 = alloca i32, align 4
  %stack_var_-8484 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_d760 = load i32, i32* @r4, align 4
  store i32 %v3_d760, i32* %stack_var_-36, align 4
  %v6_d760 = load i32, i32* @r5, align 4
  %v9_d760 = load i32, i32* @r6, align 4
  %v12_d760 = load i32, i32* @r7, align 4
  %v15_d760 = load i32, i32* @r8, align 4
  %v18_d760 = load i32, i32* @sb, align 4
  %v21_d760 = load i32, i32* @sl, align 4
  %v24_d760 = load i32, i32* @fp, align 4
  %v28_d760 = ptrtoint i32* %stack_var_-36 to i32
  %v2_d76c = call i32 @function_12d6c(i32* null)
  store i32 %v2_d76c, i32* @r7, align 4
  %v0_d774 = call i32 @function_12ac8()
  %v7_d778 = icmp eq i32 %v0_d774, -1
  %. = zext i1 %v7_d778 to i32
  %tmp130 = icmp slt i32 %v0_d774, 1
  %storemerge86 = select i1 %tmp130, i32 %., i32 1
  store i32 %storemerge86, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_1da84.63 to i32), i32* %r3.global-to-local, align 4
  %v2_d794 = icmp eq i32 %storemerge86, 0
  store i32 %v0_d774, i32* @global_var_1da84.63, align 4
  br i1 %v2_d794, label %dec_label_pc_d7a8, label %dec_label_pc_d7a0

dec_label_pc_d7a0:                                ; preds = %dec_label_pc_d8bc, %dec_label_pc_d7a8, %dec_label_pc_d760
  %v29_d7a4 = phi i32 [ %v3_d84c, %dec_label_pc_d7a8 ], [ %v0_d774, %dec_label_pc_d760 ], [ 0, %dec_label_pc_d8bc ]
  %v2_d7a4 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_d7a4, i32* @r4, align 4
  store i32 %v6_d760, i32* @r5, align 4
  store i32 %v9_d760, i32* @r6, align 4
  store i32 %v12_d760, i32* @r7, align 4
  store i32 %v15_d760, i32* @r8, align 4
  store i32 %v18_d760, i32* @sb, align 4
  store i32 %v21_d760, i32* @sl, align 4
  store i32 %v24_d760, i32* @fp, align 4
  ret i32 %v29_d7a4

dec_label_pc_d7a8:                                ; preds = %dec_label_pc_d760
  %v1_d7ac = call i32 @function_13e9c(i32 5)
  %v1_d7b4 = call i32 @function_13518(i32 4096)
  store i32 ptrtoint (i32* @global_var_1d9e4.65 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1da80.67 to i32), i32* %r1.global-to-local, align 4
  store i32 %v1_d7b4, i32* %r2.global-to-local, align 4
  %v0_d7c4 = load i32, i32* @r5, align 4
  %v1_d7c4 = trunc i32 %v0_d7c4 to i8
  %v3_d7c4 = inttoptr i32 %v1_d7b4 to i8*
  store i8 %v1_d7c4, i8* %v3_d7c4, align 1
  %v0_d7cc = load i32, i32* @r5, align 4
  %v1_d7cc = load i32, i32* %r3.global-to-local, align 4
  %v2_d7cc = inttoptr i32 %v1_d7cc to i32*
  store i32 %v0_d7cc, i32* %v2_d7cc, align 4
  %v0_d7d0 = load i32, i32* %r2.global-to-local, align 4
  %v1_d7d0 = load i32, i32* %r1.global-to-local, align 4
  %v2_d7d0 = inttoptr i32 %v1_d7d0 to i32*
  store i32 %v0_d7d0, i32* %v2_d7d0, align 4
  %v1_d7d4 = call i32 @function_11bcc(i32 13)
  %v1_d7dc = call i32 @function_11bcc(i32 14)
  %v0_d7e0 = load i32, i32* @r5, align 4
  store i32 %v0_d7e0, i32* %r1.global-to-local, align 4
  %v2_d7e8 = inttoptr i32 %v0_d7e0 to i32*
  %v3_d7e8 = call i32 @function_11ae8(i32 13, i32* %v2_d7e8)
  %v2_d7f0 = ptrtoint i32* %stack_var_-4380 to i32
  store i32 %v2_d7f0, i32* @fp, align 4
  store i32 %v3_d7e8, i32* %r1.global-to-local, align 4
  store i32 %v2_d7f0, i32* @r0, align 4
  %v2_d7fc = bitcast i32* %stack_var_-4380 to i8*
  %v3_d7fc = call i32 @function_121c0(i8* %v2_d7fc, i32 %v3_d7e8)
  %v0_d800 = load i32, i32* @fp, align 4
  %v2_d800 = add i32 %v0_d800, %v3_d7fc
  store i32 %v2_d800, i32* @r4, align 4
  %v0_d804 = call i32 @function_12af4()
  %v2_d80c = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v2_d80c, i32* %r2.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v3_d814 = trunc i32 %v0_d804 to i8
  %v4_d814 = call i32 @function_125fc(i8 %v3_d814, i32 10, i32 %v2_d80c)
  store i32 %v4_d814, i32* %r1.global-to-local, align 4
  %v0_d81c = load i32, i32* @r4, align 4
  store i32 %v0_d81c, i32* @r0, align 4
  %v2_d820 = inttoptr i32 %v0_d81c to i8*
  %v3_d820 = call i32 @function_121c0(i8* %v2_d820, i32 %v4_d814)
  %v0_d824 = load i32, i32* @r5, align 4
  store i32 %v0_d824, i32* %r1.global-to-local, align 4
  %v0_d828 = load i32, i32* @r4, align 4
  %v2_d828 = add i32 %v0_d828, %v3_d820
  store i32 %v2_d828, i32* @r4, align 4
  %v2_d830 = inttoptr i32 %v0_d824 to i32*
  %v3_d830 = call i32 @function_11ae8(i32 14, i32* %v2_d830)
  store i32 %v3_d830, i32* %r1.global-to-local, align 4
  %v0_d838 = load i32, i32* @r4, align 4
  store i32 %v0_d838, i32* @r0, align 4
  %v2_d83c = inttoptr i32 %v0_d838 to i8*
  %v3_d83c = call i32 @function_121c0(i8* %v2_d83c, i32 %v3_d830)
  %v0_d840 = load i32, i32* @r5, align 4
  store i32 %v0_d840, i32* %r1.global-to-local, align 4
  store i32 %v3_d83c, i32* @r6, align 4
  %v3_d84c = call i32 @function_12bc8(i8* %v2_d7fc, i32 %v0_d840)
  %v7_d850 = icmp eq i32 %v3_d84c, -1
  br i1 %v7_d850, label %dec_label_pc_d7a0, label %dec_label_pc_d858

dec_label_pc_d858:                                ; preds = %dec_label_pc_d7a8
  %v1_d858 = call i32 @function_12a9c(i32 %v3_d84c)
  %v1_d860 = call i32 @function_11b14(i32 13)
  %v1_d868 = call i32 @function_11b14(i32 14)
  store i32 ptrtoint (i32* @global_var_1da80.67 to i32), i32* %r3.global-to-local, align 4
  %v2_d874 = load i32, i32* @global_var_1da80.67, align 4
  store i32 %v2_d874, i32* %r1.global-to-local, align 4
  store i32 4095, i32* %r2.global-to-local, align 4
  %v4_d880 = call i32 @function_12c90(i8* %v2_d7fc, i32 %v2_d874, i32 4095)
  %v7_d884 = icmp eq i32 %v4_d880, -1
  br i1 %v7_d884, label %.thread2.thread, label %bb133

.thread2.thread:                                  ; preds = %dec_label_pc_d858
  %v0_d89024 = load i32, i32* @r4, align 4
  %v1_d89025 = load i32, i32* @r6, align 4
  %v2_d89026 = add i32 %v1_d89025, %v0_d89024
  store i32 %v2_d89026, i32* %r1.global-to-local, align 4
  br label %bb134

bb133:                                            ; preds = %dec_label_pc_d858
  %v3_d88c = load i32, i32* @global_var_1da80.67, align 4
  store i32 %v3_d88c, i32* %r3.global-to-local, align 4
  %v0_d890 = load i32, i32* @r4, align 4
  %v1_d890 = load i32, i32* @r6, align 4
  %v2_d890 = add i32 %v1_d890, %v0_d890
  store i32 %v2_d890, i32* %r1.global-to-local, align 4
  %v1_d894 = load i32, i32* @r5, align 4
  %v2_d894 = trunc i32 %v1_d894 to i8
  %v5_d894 = add i32 %v3_d88c, %v4_d880
  %v6_d894 = inttoptr i32 %v5_d894 to i8*
  store i8 %v2_d894, i8* %v6_d894, align 1
  %v1_d898.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb134

bb134:                                            ; preds = %.thread2.thread, %bb133
  %v1_d898 = phi i32 [ %v2_d89026, %.thread2.thread ], [ %v1_d898.pre, %bb133 ]
  %v0_d898 = load i32, i32* @fp, align 4
  %v2_d898 = sub i32 %v1_d898, %v0_d898
  store i32 %v2_d898, i32* @r1, align 4
  store i32 %v2_d7f0, i32* @r0, align 4
  %v0_d8a0 = call i32 @function_12238()
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_d8b0 = load i32, i32* @r7, align 4
  store i32 %v0_d8b0, i32* @r5, align 4
  %v2_d8b4 = ptrtoint i32* %stack_var_-8476 to i32
  store i32 %v2_d8b4, i32* @sl, align 4
  store i32 400, i32* @r8, align 4
  %v2_d9a0 = ptrtoint i32* %stack_var_-292 to i32
  %v2_dbf0 = ptrtoint i32* %stack_var_-284 to i32
  %v2_dbf4 = bitcast i32* %stack_var_-284 to i8*
  %v2_dc40 = ptrtoint i32* %stack_var_-220 to i32
  %v2_dc44 = bitcast i32* %stack_var_-220 to i8*
  %v2_dd9c = ptrtoint i32* %stack_var_-40 to i32
  %v2_ddb0 = ptrtoint i32* %stack_var_-44 to i32
  %v2_db0c = ptrtoint i32* %stack_var_-108 to i32
  %v3_db14 = bitcast i32* %stack_var_-108 to %sockaddr*
  %v2_dad4 = ptrtoint i32* %stack_var_-92 to i32
  %v3_dadc = bitcast i32* %stack_var_-92 to %sockaddr*
  %v2_da9c = ptrtoint i32* %stack_var_-140 to i32
  %v3_daa4 = bitcast i32* %stack_var_-140 to %sockaddr*
  %v2_da64 = ptrtoint i32* %stack_var_-124 to i32
  %v3_da6c = bitcast i32* %stack_var_-124 to %sockaddr*
  %v2_da2c = ptrtoint i32* %stack_var_-76 to i32
  %v3_da34 = bitcast i32* %stack_var_-76 to %sockaddr*
  %v2_d9e4 = ptrtoint i32* %stack_var_-60 to i32
  %v3_d9ec = bitcast i32* %stack_var_-60 to %sockaddr*
  br label %dec_label_pc_d8bc

dec_label_pc_d8bc:                                ; preds = %dec_label_pc_dbb4, %bb134
  %stack_var_-8480.0 = phi i32 [ 0, %bb134 ], [ %stack_var_-8480.3, %dec_label_pc_dbb4 ]
  %v1_d8c0 = call i32 @function_11bcc(i32 13)
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_d8cc = call i32 @function_11ae8(i32 13, i32* null)
  store i32 %v3_d8cc, i32* @r0, align 4
  %v1_d8d0 = call i32 @function_12ea4(i32 %v3_d8cc)
  store i32 %v1_d8d0, i32* @sb, align 4
  %v2_d8d4 = icmp eq i32 %v1_d8d0, 0
  br i1 %v2_d8d4, label %dec_label_pc_d7a0, label %dec_label_pc_d8dc

dec_label_pc_d8dc:                                ; preds = %dec_label_pc_d8bc
  %v1_d8e0 = call i32 @function_11b14(i32 13)
  %v1_d8ec = call i32 @function_d1c4(i32 58811)
  %v1_d8f8 = call i32 @function_d1c4(i32 50951)
  %v1_d904 = call i32 @function_d1c4(i32 14853)
  %v1_d90c = call i32 @function_d1c4(i32 20480)
  %v1_d918 = call i32 @function_d1c4(i32 47873)
  %v1_d924 = call i32 @function_d1c4(i32 57616)
  %v1_d930 = call i32 @function_d1c4(i32 2842)
  %v1_d93c = call i32 @function_d1c4(i32 10522)
  %v1_d944 = call i32 @function_d1c4(i32 5632)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_d9d0 = call i32 @function_13380(i32 2, i32 1, i32 0)
  %v7_d9d4 = icmp eq i32 %v3_d9d0, -1
  store i32 %v3_d9d0, i32* @r4, align 4
  br i1 %v7_d9d4, label %dec_label_pc_d9fc, label %dec_label_pc_d9e0

dec_label_pc_d9e0:                                ; preds = %dec_label_pc_d8dc
  store i32 %v2_d9e4, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v4_d9ec = call i32 @function_131b0(i32 %v3_d9d0, %sockaddr* %v3_d9ec, i32 16)
  %v0_d9f0 = load i32, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_d9f8 = call i32 @function_13264(i32 %v0_d9f0, i32 1)
  br label %dec_label_pc_d9fc

dec_label_pc_d9fc:                                ; preds = %dec_label_pc_d8dc, %dec_label_pc_d9e0
  %v1_da00 = call i32 @function_d1c4(i32 5888)
  %v2_da04 = icmp eq i32 %v1_da00, 0
  br i1 %v2_da04, label %dec_label_pc_dec8, label %dec_label_pc_da0c

dec_label_pc_da0c:                                ; preds = %dec_label_pc_deec, %dec_label_pc_dedc, %dec_label_pc_dec8, %dec_label_pc_d9fc, %dec_label_pc_df00
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_da18 = call i32 @function_13380(i32 2, i32 1, i32 0)
  %v7_da1c = icmp eq i32 %v3_da18, -1
  store i32 %v3_da18, i32* @r4, align 4
  br i1 %v7_da1c, label %dec_label_pc_da44, label %dec_label_pc_da28

dec_label_pc_da28:                                ; preds = %dec_label_pc_da0c
  store i32 %v2_da2c, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v4_da34 = call i32 @function_131b0(i32 %v3_da18, %sockaddr* %v3_da34, i32 16)
  %v0_da38 = load i32, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_da40 = call i32 @function_13264(i32 %v0_da38, i32 1)
  br label %dec_label_pc_da44

dec_label_pc_da44:                                ; preds = %dec_label_pc_da0c, %dec_label_pc_da28
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_da50 = call i32 @function_13380(i32 2, i32 1, i32 0)
  %v7_da54 = icmp eq i32 %v3_da50, -1
  store i32 %v3_da50, i32* @r4, align 4
  br i1 %v7_da54, label %dec_label_pc_da7c, label %dec_label_pc_da60

dec_label_pc_da60:                                ; preds = %dec_label_pc_da44
  store i32 %v2_da64, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v4_da6c = call i32 @function_131b0(i32 %v3_da50, %sockaddr* %v3_da6c, i32 16)
  %v0_da70 = load i32, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_da78 = call i32 @function_13264(i32 %v0_da70, i32 1)
  br label %dec_label_pc_da7c

dec_label_pc_da7c:                                ; preds = %dec_label_pc_da44, %dec_label_pc_da60
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_da88 = call i32 @function_13380(i32 2, i32 1, i32 0)
  %v7_da8c = icmp eq i32 %v3_da88, -1
  store i32 %v3_da88, i32* @r4, align 4
  br i1 %v7_da8c, label %dec_label_pc_dab4, label %dec_label_pc_da98

dec_label_pc_da98:                                ; preds = %dec_label_pc_da7c
  store i32 %v2_da9c, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v4_daa4 = call i32 @function_131b0(i32 %v3_da88, %sockaddr* %v3_daa4, i32 16)
  %v0_daa8 = load i32, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_dab0 = call i32 @function_13264(i32 %v0_daa8, i32 1)
  br label %dec_label_pc_dab4

dec_label_pc_dab4:                                ; preds = %dec_label_pc_da7c, %dec_label_pc_da98
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_dac0 = call i32 @function_13380(i32 2, i32 1, i32 0)
  %v7_dac4 = icmp eq i32 %v3_dac0, -1
  store i32 %v3_dac0, i32* @r4, align 4
  br i1 %v7_dac4, label %dec_label_pc_daec, label %dec_label_pc_dad0

dec_label_pc_dad0:                                ; preds = %dec_label_pc_dab4
  store i32 %v2_dad4, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v4_dadc = call i32 @function_131b0(i32 %v3_dac0, %sockaddr* %v3_dadc, i32 16)
  %v0_dae0 = load i32, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_dae8 = call i32 @function_13264(i32 %v0_dae0, i32 1)
  br label %dec_label_pc_daec

dec_label_pc_daec:                                ; preds = %dec_label_pc_dab4, %dec_label_pc_dad0
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_daf8 = call i32 @function_13380(i32 2, i32 1, i32 0)
  %v7_dafc = icmp eq i32 %v3_daf8, -1
  store i32 %v3_daf8, i32* @r4, align 4
  br i1 %v7_dafc, label %dec_label_pc_db24.preheader, label %dec_label_pc_db08

dec_label_pc_db08:                                ; preds = %dec_label_pc_daec
  store i32 %v2_db0c, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v4_db14 = call i32 @function_131b0(i32 %v3_daf8, %sockaddr* %v3_db14, i32 16)
  %v0_db18 = load i32, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_db20 = call i32 @function_13264(i32 %v0_db18, i32 1)
  br label %dec_label_pc_db24.preheader

dec_label_pc_db24.preheader:                      ; preds = %dec_label_pc_db08, %dec_label_pc_daec
  %v0_db2453 = load i32, i32* @sb, align 4
  %v1_db2854 = inttoptr i32 %v0_db2453 to i32*
  %v2_db2855 = call i32 @function_12fa0(i32* %v1_db2854)
  %v2_db2c57 = icmp eq i32 %v2_db2855, 0
  br i1 %v2_db2c57, label %dec_label_pc_dbb4, label %dec_label_pc_db34.preheader

dec_label_pc_db34.preheader:                      ; preds = %dec_label_pc_db24.preheader, %dec_label_pc_db24.backedge
  %v0_db3466 = phi i32 [ %v2_db28, %dec_label_pc_db24.backedge ], [ %v2_db2855, %dec_label_pc_db24.preheader ]
  %stack_var_-8480.158 = phi i32 [ %stack_var_-8480.1.be, %dec_label_pc_db24.backedge ], [ %stack_var_-8480.0, %dec_label_pc_db24.preheader ]
  br label %dec_label_pc_db34

dec_label_pc_db34:                                ; preds = %dec_label_pc_db34.preheader, %dec_label_pc_db9c
  %v0_db44 = phi i32 [ %v2_dba8, %dec_label_pc_db9c ], [ %v0_db3466, %dec_label_pc_db34.preheader ]
  %stack_var_-8480.2 = phi i32 [ %v1_db58, %dec_label_pc_db9c ], [ %stack_var_-8480.158, %dec_label_pc_db34.preheader ]
  %v1_db34 = add i32 %v0_db44, 11
  %v2_db34 = inttoptr i32 %v1_db34 to i8*
  %v3_db34 = load i8, i8* %v2_db34, align 1
  %v4_db34 = zext i8 %v3_db34 to i32
  %v1_db38 = add nsw i32 %v4_db34, -48
  store i32 %v1_db38, i32* %r3.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_db38, 9
  br i1 %tmp, label %dec_label_pc_db24.backedge, label %dec_label_pc_db44

dec_label_pc_db44:                                ; preds = %dec_label_pc_db34
  store i32 %v1_db34, i32* @r6, align 4
  %v2_db4c = call i32 @function_13c5c(i8* %v2_db34)
  %v0_db54 = load i32, i32* @r8, align 4
  %v1_db58 = add i32 %stack_var_-8480.2, 1
  store i32 %v2_db4c, i32* @r7, align 4
  %v5_db64 = icmp slt i32 %v0_db54, %v2_db4c
  %v2_dbc4 = call i32 @function_12d6c(i32* null)
  br i1 %v5_db64, label %dec_label_pc_dbc0, label %dec_label_pc_db68

dec_label_pc_db68:                                ; preds = %dec_label_pc_db44
  %v0_db70 = load i32, i32* @r5, align 4
  %v2_db70 = sub i32 %v2_dbc4, %v0_db70
  %v7_db78 = icmp slt i32 %v2_db70, 601
  br i1 %v7_db78, label %dec_label_pc_db80, label %.thread8

.thread8:                                         ; preds = %dec_label_pc_db68
  store i32 400, i32* @r8, align 4
  br label %dec_label_pc_db24.backedge

dec_label_pc_db80:                                ; preds = %dec_label_pc_db68
  %v0_db80 = load i32, i32* @r7, align 4
  %v7_db84 = icmp slt i32 %v0_db80, 401
  br i1 %v7_db84, label %dec_label_pc_db24.backedge, label %dec_label_pc_db88

dec_label_pc_db88:                                ; preds = %dec_label_pc_db80
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_db90 = call i32 @function_12824(i32 %v1_db58, i32 10)
  %v2_db94 = icmp eq i32 %v2_db90, 0
  br i1 %v2_db94, label %dec_label_pc_db9c, label %dec_label_pc_db24.backedge

dec_label_pc_db9c:                                ; preds = %dec_label_pc_db88
  %v1_dba0 = call i32 @function_13e9c(i32 1)
  %v0_dba4 = load i32, i32* @sb, align 4
  %v1_dba8 = inttoptr i32 %v0_dba4 to i32*
  %v2_dba8 = call i32 @function_12fa0(i32* %v1_dba8)
  %v2_dbac = icmp eq i32 %v2_dba8, 0
  br i1 %v2_dbac, label %dec_label_pc_dbb4, label %dec_label_pc_db34

dec_label_pc_dbb4:                                ; preds = %dec_label_pc_db24.backedge, %dec_label_pc_db9c, %dec_label_pc_db24.preheader
  %stack_var_-8480.3 = phi i32 [ %stack_var_-8480.0, %dec_label_pc_db24.preheader ], [ %v1_db58, %dec_label_pc_db9c ], [ %stack_var_-8480.1.be, %dec_label_pc_db24.backedge ]
  %v0_dbb4 = load i32, i32* @sb, align 4
  %v1_dbb8 = inttoptr i32 %v0_dbb4 to i32*
  %v2_dbb8 = call i32 @function_12df0(i32* %v1_dbb8)
  br label %dec_label_pc_d8bc

dec_label_pc_dbc0:                                ; preds = %dec_label_pc_db44
  store i32 %v2_dbc4, i32* %stack_var_-8484, align 4
  %v1_dbd0 = call i32 @function_11bcc(i32 13)
  %v1_dbd8 = call i32 @function_11bcc(i32 14)
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_dbe4 = call i32 @function_11ae8(i32 13, i32* null)
  store i32 %v3_dbe4, i32* %r1.global-to-local, align 4
  store i32 %v2_dbf0, i32* @r0, align 4
  %v3_dbf4 = call i32 @function_121c0(i8* %v2_dbf4, i32 %v3_dbe4)
  %v2_dc00 = add i32 %v3_dbf4, %v2_dbf0
  store i32 %v2_dc00, i32* %r5.global-to-local, align 4
  store i32 %v2_dc00, i32* @r0, align 4
  %v0_dc08 = load i32, i32* @r6, align 4
  store i32 %v0_dc08, i32* %r1.global-to-local, align 4
  %v2_dc0c = inttoptr i32 %v2_dc00 to i8*
  %v3_dc0c = call i32 @function_121c0(i8* %v2_dc0c, i32 %v0_dc08)
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_dc1c = call i32 @function_11ae8(i32 14, i32* null)
  store i32 %v3_dc1c, i32* %r1.global-to-local, align 4
  %v0_dc24 = load i32, i32* %r5.global-to-local, align 4
  %v2_dc24 = add i32 %v3_dc0c, %v0_dc24
  store i32 %v2_dc24, i32* @r0, align 4
  %v2_dc28 = inttoptr i32 %v2_dc24 to i8*
  %v3_dc28 = call i32 @function_121c0(i8* %v2_dc28, i32 %v3_dc1c)
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_dc34 = call i32 @function_11ae8(i32 13, i32* null)
  store i32 %v3_dc34, i32* %r1.global-to-local, align 4
  store i32 %v2_dc40, i32* @r0, align 4
  %v3_dc44 = call i32 @function_121c0(i8* %v2_dc44, i32 %v3_dc34)
  store i32 %v2_dc40, i32* %r2.global-to-local, align 4
  %v2_dc50 = add i32 %v3_dc44, %v2_dc40
  store i32 %v2_dc50, i32* @r5, align 4
  %v0_dc54 = load i32, i32* @r6, align 4
  store i32 %v0_dc54, i32* %r1.global-to-local, align 4
  store i32 %v2_dc50, i32* @r0, align 4
  %v2_dc5c = inttoptr i32 %v2_dc50 to i8*
  %v3_dc5c = call i32 @function_121c0(i8* %v2_dc5c, i32 %v0_dc54)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v3_dc5c, i32* @r4, align 4
  %v3_dc6c = call i32 @function_11ae8(i32 29, i32* null)
  store i32 %v3_dc6c, i32* %r1.global-to-local, align 4
  %v0_dc74 = load i32, i32* @r5, align 4
  %v1_dc74 = load i32, i32* @r4, align 4
  %v2_dc74 = add i32 %v1_dc74, %v0_dc74
  store i32 %v2_dc74, i32* @r0, align 4
  %v2_dc78 = inttoptr i32 %v2_dc74 to i8*
  %v3_dc78 = call i32 @function_121c0(i8* %v2_dc78, i32 %v3_dc6c)
  %v1_dc80 = call i32 @function_11b14(i32 13)
  %v1_dc88 = call i32 @function_11b14(i32 14)
  store i32 4095, i32* %r2.global-to-local, align 4
  store i32 %v2_d7f0, i32* %r1.global-to-local, align 4
  %v4_dca0 = call i32 @function_12c90(i8* %v2_dbf4, i32 %v2_d7f0, i32 4095)
  %v7_dca8 = icmp eq i32 %v4_dca0, -1
  store i32 %v4_dca0, i32* @r4, align 4
  store i32 -4344, i32* @r2, align 4
  br i1 %v7_dca8, label %dec_label_pc_dd6c, label %dec_label_pc_dcb8

dec_label_pc_dcb8:                                ; preds = %dec_label_pc_dbc0
  %v2_dcbc = add i32 %v4_dca0, %v28_d760
  store i32 %v2_dcbc, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v4_dcc4 = add i32 %v2_dcbc, -4344
  %v5_dcc4 = inttoptr i32 %v4_dcc4 to i8*
  store i8 0, i8* %v5_dcc4, align 1
  %v1_dccc = call i32 @function_11bcc(i32 30)
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_dcd8 = call i32 @function_11ae8(i32 30, i32* null)
  %v0_dcdc = load i32, i32* @r4, align 4
  %v1_dcdc = add i32 %v0_dcdc, -1
  store i32 %v1_dcdc, i32* @r1, align 4
  store i32 %v3_dcd8, i32* %r2.global-to-local, align 4
  %v4_dce8 = call i32 @function_124ec(i8* %v2_d7fc, i32 %v1_dcdc, i32 %v3_dcd8)
  %v7_dcec = icmp eq i32 %v4_dce8, -1
  br i1 %v7_dcec, label %dec_label_pc_dd08, label %dec_label_pc_dcf4

dec_label_pc_dcf4:                                ; preds = %dec_label_pc_dcb8
  %v2_dcf8 = call i32 @function_12d98(i8* %v2_d7fc)
  %v0_dcfc = load i32, i32* @r7, align 4
  store i32 9, i32* %r1.global-to-local, align 4
  %v2_dd04 = call i32 @function_12b9c(i32 %v0_dcfc, i32 9)
  br label %dec_label_pc_dd08

dec_label_pc_dd08:                                ; preds = %dec_label_pc_dcb8, %dec_label_pc_dcf4
  %v1_dd0c = call i32 @function_11b14(i32 30)
  %v0_dd10 = call i32 @function_12af4()
  %v0_dd14 = load i32, i32* @r7, align 4
  %v9_dd14 = icmp eq i32 %v0_dd14, %v0_dd10
  br i1 %v9_dd14, label %dec_label_pc_dd40, label %dec_label_pc_dd1c

dec_label_pc_dd1c:                                ; preds = %dec_label_pc_dd08
  %v0_dd1c = call i32 @function_12b20()
  %v0_dd20 = load i32, i32* @r7, align 4
  %v9_dd20 = icmp eq i32 %v0_dd20, %v0_dd1c
  br i1 %v9_dd20, label %dec_label_pc_dd40, label %dec_label_pc_dd28

dec_label_pc_dd28:                                ; preds = %dec_label_pc_dd1c
  store i32 ptrtoint (i32* @global_var_1da80.67 to i32), i32* %r2.global-to-local, align 4
  %v2_dd30 = load i32, i32* @global_var_1da80.67, align 4
  store i32 %v2_dd30, i32* %r1.global-to-local, align 4
  %v4_dd34 = call i32 @function_12578(i8* %v2_d7fc, i32 %v2_dd30, i32 ptrtoint (i32* @global_var_1da80.67 to i32))
  %v2_dd38 = icmp eq i32 %v4_dd34, 0
  br i1 %v2_dd38, label %dec_label_pc_dd4c, label %dec_label_pc_dd28.dec_label_pc_dd40_crit_edge

dec_label_pc_dd28.dec_label_pc_dd40_crit_edge:    ; preds = %dec_label_pc_dd28
  %v0_dd44.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_dd40

dec_label_pc_dd40:                                ; preds = %dec_label_pc_dd28.dec_label_pc_dd40_crit_edge, %dec_label_pc_dd1c, %dec_label_pc_dd08
  %v0_dd44 = phi i32 [ %v0_dd44.pre, %dec_label_pc_dd28.dec_label_pc_dd40_crit_edge ], [ %v0_dd1c, %dec_label_pc_dd1c ], [ %v0_dd10, %dec_label_pc_dd08 ]
  %v2_dd40 = load i32, i32* %stack_var_-8484, align 4
  store i32 %v2_dd40, i32* @r5, align 4
  store i32 %v0_dd44, i32* @r8, align 4
  br label %dec_label_pc_db24.backedge

dec_label_pc_db24.backedge:                       ; preds = %dec_label_pc_db88, %dec_label_pc_db80, %dec_label_pc_db34, %dec_label_pc_dd40, %dec_label_pc_de94, %.thread8
  %stack_var_-8480.1.be = phi i32 [ %v1_db58, %dec_label_pc_de94 ], [ %v1_db58, %dec_label_pc_dd40 ], [ %v1_db58, %.thread8 ], [ %stack_var_-8480.2, %dec_label_pc_db34 ], [ %v1_db58, %dec_label_pc_db80 ], [ %v1_db58, %dec_label_pc_db88 ]
  %v0_db24 = load i32, i32* @sb, align 4
  %v1_db28 = inttoptr i32 %v0_db24 to i32*
  %v2_db28 = call i32 @function_12fa0(i32* %v1_db28)
  %v2_db2c = icmp eq i32 %v2_db28, 0
  br i1 %v2_db2c, label %dec_label_pc_dbb4, label %dec_label_pc_db34.preheader

dec_label_pc_dd4c:                                ; preds = %dec_label_pc_dd28
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_dd54 = call i32 @function_12bc8(i8* %v2_d7fc, i32 0)
  %v7_dd58 = icmp eq i32 %v3_dd54, -1
  store i32 %v3_dd54, i32* @r4, align 4
  br i1 %v7_dd58, label %dec_label_pc_df2c, label %dec_label_pc_dd64

dec_label_pc_dd64:                                ; preds = %dec_label_pc_dd4c, %dec_label_pc_df2c
  %v0_dd64 = phi i32 [ %v3_dd54, %dec_label_pc_dd4c ], [ %v0_dd64.pre, %dec_label_pc_df2c ]
  %v1_dd68 = call i32 @function_12a9c(i32 %v0_dd64)
  br label %dec_label_pc_dd6c

dec_label_pc_dd6c:                                ; preds = %dec_label_pc_dbc0, %dec_label_pc_dd64
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_dd78 = call i32 @function_12bc8(i8* %v2_dbf4, i32 0)
  %v7_dd7c = icmp eq i32 %v3_dd78, -1
  store i32 %v3_dd78, i32* %r8.global-to-local, align 4
  br i1 %v7_dd7c, label %dec_label_pc_de94, label %dec_label_pc_dd88

dec_label_pc_dd88:                                ; preds = %dec_label_pc_dd6c
  %v1_dd8c = call i32 @function_11bcc(i32 18)
  %v1_dd94 = call i32 @function_11bcc(i32 19)
  store i32 %v2_dd9c, i32* %r1.global-to-local, align 4
  %v3_dda4 = call i32 @function_11ae8(i32 18, i32* nonnull %stack_var_-40)
  store i32 %v3_dda4, i32* @r5, align 4
  store i32 %v2_ddb0, i32* %r1.global-to-local, align 4
  %v3_ddb8 = call i32 @function_11ae8(i32 19, i32* nonnull %stack_var_-44)
  store i32 %v3_ddb8, i32* @r6, align 4
  br label %dec_label_pc_ddc0

dec_label_pc_ddc0:                                ; preds = %dec_label_pc_de2c, %.thread22, %dec_label_pc_ddf4, %dec_label_pc_dd88
  %v0_ddc0 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v2_d8b4, i32* %r1.global-to-local, align 4
  store i32 4096, i32* %r2.global-to-local, align 4
  %v4_ddcc = call i32 @function_12c64(i32 %v0_ddc0, i32* nonnull %stack_var_-8476, i32 4096)
  %tmp135 = icmp slt i32 %v4_ddcc, 1
  br i1 %tmp135, label %dec_label_pc_df10, label %dec_label_pc_ddd8

dec_label_pc_ddd8:                                ; preds = %dec_label_pc_ddc0
  store i32 %v2_d9a0, i32* %r3.global-to-local, align 4
  %v3_dddc = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_dddc, i32* @r4, align 4
  %v5_dde4 = icmp slt i32 %v4_ddcc, %v3_dddc
  br i1 %v5_dde4, label %dec_label_pc_ddf4, label %dec_label_pc_de48.lr.ph

dec_label_pc_de48.lr.ph:                          ; preds = %dec_label_pc_ddd8
  %v1_de4036 = add i32 %v4_ddcc, -1
  store i32 %v1_de4036, i32* %r1.global-to-local, align 4
  %v0_de48.pre = load i32, i32* @r5, align 4
  %v1_de4c.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_de48

dec_label_pc_ddf4:                                ; preds = %dec_label_pc_de40.backedge, %dec_label_pc_ddd8
  %v3_ddf8 = load i32, i32* %stack_var_-44, align 4
  %v5_de00 = icmp slt i32 %v4_ddcc, %v3_ddf8
  br i1 %v5_de00, label %dec_label_pc_ddc0, label %.thread22

.thread22:                                        ; preds = %dec_label_pc_ddf4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_de0c46 = icmp eq i32 %v4_ddcc, 0
  br i1 %v2_de0c46, label %dec_label_pc_ddc0, label %dec_label_pc_de14.lr.ph

dec_label_pc_de14.lr.ph:                          ; preds = %.thread22
  %v0_de14.pre = load i32, i32* @r6, align 4
  %v1_de18.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_de14

dec_label_pc_de14:                                ; preds = %dec_label_pc_de2c, %dec_label_pc_de14.lr.ph
  %v0_de0c.in = phi i32 [ %v4_ddcc, %dec_label_pc_de14.lr.ph ], [ %v0_de0c, %dec_label_pc_de2c ]
  %v0_de2c = phi i32 [ 0, %dec_label_pc_de14.lr.ph ], [ %v1_de2c, %dec_label_pc_de2c ]
  %v0_de20 = phi i32 [ 0, %dec_label_pc_de14.lr.ph ], [ %v1_de20., %dec_label_pc_de2c ]
  %v0_de0c = add i32 %v0_de0c.in, -1
  %v2_de14 = add i32 %v0_de20, %v0_de14.pre
  %v3_de14 = inttoptr i32 %v2_de14 to i8*
  %v4_de14 = load i8, i8* %v3_de14, align 1
  %v6_de14 = zext i8 %v4_de14 to i32
  store i32 %v6_de14, i32* %r2.global-to-local, align 4
  %v2_de18 = add i32 %v0_de2c, %v1_de18.pre
  %v3_de18 = inttoptr i32 %v2_de18 to i8*
  %v4_de18 = load i8, i8* %v3_de18, align 1
  %v6_de18 = zext i8 %v4_de18 to i32
  store i32 %v6_de18, i32* %r3.global-to-local, align 4
  %v9_de1c = icmp eq i8 %v4_de18, %v4_de14
  %v1_de20 = add i32 %v0_de20, 1
  %v1_de20. = select i1 %v9_de1c, i32 %v1_de20, i32 0
  store i32 %v1_de20., i32* %r1.global-to-local, align 4
  br i1 %v9_de1c, label %dec_label_pc_de68, label %dec_label_pc_de2c

dec_label_pc_de2c:                                ; preds = %dec_label_pc_de68, %dec_label_pc_de14
  %v1_de2c = add i32 %v0_de2c, 1
  %v2_de0c = icmp eq i32 %v0_de0c, 0
  br i1 %v2_de0c, label %dec_label_pc_ddc0, label %dec_label_pc_de14

dec_label_pc_de34:                                ; preds = %dec_label_pc_de48
  %v9_de34 = icmp eq i32 %v3_dddc, %v1_de54.
  br i1 %v9_de34, label %dec_label_pc_de70, label %dec_label_pc_de40.backedge

dec_label_pc_de40.backedge:                       ; preds = %dec_label_pc_de48, %dec_label_pc_de34
  %storemerge = add i32 %storemerge.in, 1
  %v1_de40 = add i32 %v0_de40, -1
  store i32 %v1_de40, i32* %r1.global-to-local, align 4
  %v2_de40 = icmp eq i32 %v0_de40, 0
  br i1 %v2_de40, label %dec_label_pc_ddf4, label %dec_label_pc_de48

dec_label_pc_de48:                                ; preds = %dec_label_pc_de40.backedge, %dec_label_pc_de48.lr.ph
  %v0_de40 = phi i32 [ %v1_de4036, %dec_label_pc_de48.lr.ph ], [ %v1_de40, %dec_label_pc_de40.backedge ]
  %storemerge.in = phi i32 [ 0, %dec_label_pc_de48.lr.ph ], [ %storemerge, %dec_label_pc_de40.backedge ]
  %v0_de54 = phi i32 [ 0, %dec_label_pc_de48.lr.ph ], [ %v1_de54., %dec_label_pc_de40.backedge ]
  %v2_de48 = add i32 %v0_de54, %v0_de48.pre
  %v3_de48 = inttoptr i32 %v2_de48 to i8*
  %v4_de48 = load i8, i8* %v3_de48, align 1
  %v6_de48 = zext i8 %v4_de48 to i32
  store i32 %v6_de48, i32* %r2.global-to-local, align 4
  %v2_de4c = add i32 %storemerge.in, %v1_de4c.pre
  %v3_de4c = inttoptr i32 %v2_de4c to i8*
  %v4_de4c = load i8, i8* %v3_de4c, align 1
  %v6_de4c = zext i8 %v4_de4c to i32
  store i32 %v6_de4c, i32* %r3.global-to-local, align 4
  %v9_de50 = icmp eq i8 %v4_de4c, %v4_de48
  %v1_de54 = add i32 %v0_de54, 1
  %v1_de54. = select i1 %v9_de50, i32 %v1_de54, i32 0
  br i1 %v9_de50, label %dec_label_pc_de34, label %dec_label_pc_de40.backedge

dec_label_pc_de68:                                ; preds = %dec_label_pc_de14
  %v9_de68 = icmp eq i32 %v3_ddf8, %v1_de20.
  br i1 %v9_de68, label %dec_label_pc_de70, label %dec_label_pc_de2c

dec_label_pc_de70:                                ; preds = %dec_label_pc_de34, %dec_label_pc_de68
  %v1_de74 = call i32 @function_11b14(i32 18)
  %v1_de7c = call i32 @function_11b14(i32 19)
  %v0_de80 = load i32, i32* %r8.global-to-local, align 4
  %v1_de84 = call i32 @function_12a9c(i32 %v0_de80)
  %v0_de88 = load i32, i32* @r7, align 4
  store i32 9, i32* %r1.global-to-local, align 4
  %v2_de90 = call i32 @function_12b9c(i32 %v0_de88, i32 9)
  br label %dec_label_pc_de94

dec_label_pc_de94:                                ; preds = %dec_label_pc_dd6c, %dec_label_pc_df10, %dec_label_pc_de70
  store i32 64, i32* @r1, align 4
  store i32 %v2_dbf0, i32* @r0, align 4
  %v0_dea0 = call i32 @function_12238()
  store i32 %v2_dc40, i32* @r0, align 4
  store i32 64, i32* @r1, align 4
  %v0_deb0 = call i32 @function_12238()
  %v1_deb8 = call i32 @function_13e9c(i32 1)
  %v2_debc = load i32, i32* %stack_var_-8484, align 4
  store i32 %v2_debc, i32* @r5, align 4
  %v0_dec0 = load i32, i32* @r7, align 4
  store i32 %v0_dec0, i32* @r8, align 4
  br label %dec_label_pc_db24.backedge

dec_label_pc_dec8:                                ; preds = %dec_label_pc_d9fc
  %v1_ded0 = call i32 @function_d1c4(i32 42448)
  %v2_ded4 = icmp eq i32 %v1_ded0, 0
  br i1 %v2_ded4, label %dec_label_pc_dedc, label %dec_label_pc_da0c

dec_label_pc_dedc:                                ; preds = %dec_label_pc_dec8
  %v1_dee0 = call i32 @function_d1c4(i32 20480)
  %v2_dee4 = icmp eq i32 %v1_dee0, 0
  br i1 %v2_dee4, label %dec_label_pc_deec, label %dec_label_pc_da0c

dec_label_pc_deec:                                ; preds = %dec_label_pc_dedc
  %v1_def4 = call i32 @function_d1c4(i32 34254)
  %v2_def8 = icmp eq i32 %v1_def4, 0
  br i1 %v2_def8, label %dec_label_pc_df00, label %dec_label_pc_da0c

dec_label_pc_df00:                                ; preds = %dec_label_pc_deec
  %v1_df08 = call i32 @function_d1c4(i32 24465)
  br label %dec_label_pc_da0c

dec_label_pc_df10:                                ; preds = %dec_label_pc_ddc0
  %v1_df14 = call i32 @function_11b14(i32 18)
  %v1_df1c = call i32 @function_11b14(i32 19)
  %v0_df20 = load i32, i32* %r8.global-to-local, align 4
  %v1_df24 = call i32 @function_12a9c(i32 %v0_df20)
  br label %dec_label_pc_de94

dec_label_pc_df2c:                                ; preds = %dec_label_pc_dd4c
  %v0_df2c = load i32, i32* @r7, align 4
  store i32 9, i32* %r1.global-to-local, align 4
  %v2_df34 = call i32 @function_12b9c(i32 %v0_df2c, i32 9)
  %v0_dd64.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_dd64

; uselistorder directives
  uselistorder i32 %v1_de54., { 1, 0 }
  uselistorder i1 %v9_de50, { 1, 0 }
  uselistorder i32 %v0_de54, { 1, 0 }
  uselistorder i32 %v1_de20., { 1, 2, 0 }
  uselistorder i1 %v9_de1c, { 1, 0 }
  uselistorder i32 %v0_de20, { 1, 0 }
  uselistorder i32 %v0_de2c, { 1, 0 }
  uselistorder i32 %v3_dd78, { 1, 0 }
  uselistorder i32 %v3_dd54, { 1, 2, 0 }
  uselistorder i32 %v2_db28, { 1, 0 }
  uselistorder i32 %stack_var_-8480.1.be, { 1, 0 }
  uselistorder i32 %v4_dca0, { 1, 2, 0 }
  uselistorder i32 %v2_dba8, { 1, 0 }
  uselistorder i32 %v1_db58, { 0, 1, 5, 4, 3, 2, 7, 6 }
  uselistorder i32 %v3_daf8, { 1, 2, 0 }
  uselistorder i32 %v3_dac0, { 1, 2, 0 }
  uselistorder i32 %v3_da88, { 1, 2, 0 }
  uselistorder i32 %v3_da50, { 2, 1, 0 }
  uselistorder i32 %v3_da18, { 2, 1, 0 }
  uselistorder i32 %v3_d9d0, { 1, 2, 0 }
  uselistorder i32 %stack_var_-8480.0, { 1, 0 }
  uselistorder i32 %v2_dc40, { 1, 0, 2, 3 }
  uselistorder i32 %v2_dbf0, { 1, 0, 2 }
  uselistorder i32 %v4_d880, { 1, 0 }
  uselistorder i32 %v3_d84c, { 2, 0, 1 }
  uselistorder i8* %v2_d7fc, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i32 %v2_d7f0, { 1, 0, 2, 3, 4 }
  uselistorder i32 %storemerge86, { 1, 0 }
  uselistorder i32 %v0_d774, { 1, 2, 3, 0 }
  uselistorder i32* %stack_var_-36, { 0, 2, 1 }
  uselistorder i32* %stack_var_-40, { 1, 0, 2 }
  uselistorder i32* %stack_var_-44, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 6, 7, 8, 9, 10, 0, 1, 2, 3, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 14, 15, 16, 17, 18, 19, 20, 21, 22, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %r1.global-to-local, { 0, 33, 34, 35, 30, 32, 36, 37, 38, 39, 40, 41, 42, 44, 43, 45, 46, 48, 47, 49, 50, 51, 53, 52, 54, 55, 56, 57, 58, 59, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 17, 18, 31, 20, 21, 22, 23, 25, 24, 26, 27, 28, 29 }
  uselistorder i32 (i8*, i32, i32)* @function_124ec, { 3, 0, 1, 2 }
  uselistorder i32 (i32*)* @function_12df0, { 2, 0, 1 }
  uselistorder i32 (i32*)* @function_12fa0, { 8, 7, 0, 3, 4, 5, 2, 6, 1 }
  uselistorder i32 (i32, i32)* @function_13264, { 1, 0, 5, 4, 3, 2 }
  uselistorder i32 (i32, %sockaddr*, i32)* @function_131b0, { 5, 0, 1, 2, 3, 4, 6, 7 }
  uselistorder i32 (i32)* @function_d1c4, { 13, 12, 1, 0, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 (i32)* @function_12ea4, { 2, 1, 0 }
  uselistorder i32 (i8*, i32, i32)* @function_12c90, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_de94, { 1, 2, 0 }
  uselistorder label %dec_label_pc_de70, { 1, 0 }
  uselistorder label %dec_label_pc_dd6c, { 1, 0 }
  uselistorder label %dec_label_pc_dd64, { 1, 0 }
  uselistorder label %dec_label_pc_db24.backedge, { 4, 3, 0, 1, 5, 2 }
  uselistorder label %dec_label_pc_dd08, { 1, 0 }
  uselistorder label %dec_label_pc_db34, { 1, 0 }
  uselistorder label %dec_label_pc_db34.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_daec, { 1, 0 }
  uselistorder label %dec_label_pc_dab4, { 1, 0 }
  uselistorder label %dec_label_pc_da7c, { 1, 0 }
  uselistorder label %dec_label_pc_da44, { 1, 0 }
  uselistorder label %dec_label_pc_da0c, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_d9fc, { 1, 0 }
  uselistorder label %bb134, { 1, 0 }
}

define i32 @function_df48(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_df48:
  store i32 ptrtoint (i32* @global_var_df60.70 to i32), i32* @global_var_1d874.72, align 4
  ret i32 %arg1
}

define i32 @function_df60() local_unnamed_addr {
dec_label_pc_df60:
  %stack_var_-8 = alloca i32, align 4
  %v3_df60 = load i32, i32* @r4, align 4
  store i32 %v3_df60, i32* %stack_var_-8, align 4
  %v1_df68 = call i32 @function_11bcc(i32 1)
  store i32 ptrtoint ([11 x i8]* @global_var_15308.74 to i32), i32* @r0, align 4
  %v2_df70 = call i32 @function_1318c(i32 ptrtoint ([11 x i8]* @global_var_15308.74 to i32))
  store i32 %v2_df70, i32* @global_var_1da8c.77, align 4
  %v3_df84 = call i32 @function_11ae8(i32 1, i32* null)
  %v4_df84 = inttoptr i32 %v3_df84 to i8*
  %v2_df88 = add i32 %v3_df84, 1
  %v3_df88 = inttoptr i32 %v2_df88 to i8*
  %v4_df88 = load i8, i8* %v3_df88, align 1
  %v3_df8c = load i8, i8* %v4_df84, align 1
  store i8 %v4_df88, i8* bitcast (i32* @global_var_1da8b.78 to i8*), align 4
  store i8 %v3_df8c, i8* bitcast (i32* @global_var_1da8a.79 to i8*), align 4
  %v2_dfa4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_dfa4, i32* @r4, align 4
  %v1_dfa8 = call i32 @function_11b14(i32 1)
  %v0_dfac = load i1, i1* @cpsr_z, align 1
  br i1 %v0_dfac, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_df60
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_df60, %bb
  ret i32 %v1_dfa8

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_dfb4(i32 %arg1) local_unnamed_addr {
dec_label_pc_dfb4:
  %stack_var_-16 = alloca i32, align 4
  %v3_dfb4 = load i32, i32* @r4, align 4
  %v6_dfb4 = load i32, i32* @r5, align 4
  %v2_dfb8 = ptrtoint i32* %stack_var_-16 to i32
  %v0_dfbc = call i32 @function_12ac8()
  %v7_dfc0 = icmp eq i32 %v0_dfbc, -1
  %. = zext i1 %v7_dfc0 to i32
  %tmp10 = icmp slt i32 %v0_dfbc, 1
  %storemerge4 = select i1 %tmp10, i32 %., i32 1
  store i32 %storemerge4, i32* @r5, align 4
  %v2_dfdc = icmp eq i32 %storemerge4, 0
  store i32 %v0_dfbc, i32* @global_var_1d9e8.81, align 4
  br i1 %v2_dfdc, label %dec_label_pc_dff0, label %dec_label_pc_dfe8

dec_label_pc_dfe8:                                ; preds = %dec_label_pc_dfb4
  store i32 %v3_dfb4, i32* @r4, align 4
  store i32 %v6_dfb4, i32* @r5, align 4
  ret i32 %v0_dfbc

dec_label_pc_dff0:                                ; preds = %dec_label_pc_dfb4
  store i32 1, i32* %stack_var_-16, align 4
  %v1_dffc = call i32 @function_11bcc(i32 23)
  %v1_e004 = call i32 @function_11bcc(i32 24)
  %v0_e008 = load i32, i32* @r5, align 4
  %v2_e010 = inttoptr i32 %v0_e008 to i32*
  %v3_e010 = call i32 @function_11ae8(i32 23, i32* %v2_e010)
  %v2_e018 = inttoptr i32 %v3_e010 to i8*
  %v3_e018 = call i32 @function_12bc8(i8* %v2_e018, i32 2)
  %v7_e01c = icmp eq i32 %v3_e018, -1
  store i32 %v3_e018, i32* @r4, align 4
  br i1 %v7_e01c, label %dec_label_pc_e064, label %dec_label_pc_e028

dec_label_pc_e028:                                ; preds = %dec_label_pc_e064, %dec_label_pc_dff0
  %v0_e034 = phi i32 [ %v3_e074, %dec_label_pc_e064 ], [ %v3_e018, %dec_label_pc_dff0 ]
  %v3_e03c = call i32 @function_12b4c(i32 %v0_e034, i32 -2147199228, i32 %v2_dfb8)
  br label %dec_label_pc_e040

dec_label_pc_e040:                                ; preds = %dec_label_pc_e040, %dec_label_pc_e028
  %v0_e04c = load i32, i32* @r4, align 4
  %v3_e054 = call i32 @function_12b4c(i32 %v0_e04c, i32 -2147199227, i32 0)
  %v1_e05c = call i32 @function_13e9c(i32 10)
  br label %dec_label_pc_e040

dec_label_pc_e064:                                ; preds = %dec_label_pc_dff0
  %v0_e064 = load i32, i32* @r5, align 4
  %v2_e06c = inttoptr i32 %v0_e064 to i32*
  %v3_e06c = call i32 @function_11ae8(i32 24, i32* %v2_e06c)
  %v2_e074 = inttoptr i32 %v3_e06c to i8*
  %v3_e074 = call i32 @function_12bc8(i8* %v2_e074, i32 2)
  %v3_e078 = icmp eq i32 %v3_e074, -1
  store i32 %v3_e074, i32* @r4, align 4
  br i1 %v3_e078, label %dec_label_pc_e084, label %dec_label_pc_e028

dec_label_pc_e084:                                ; preds = %dec_label_pc_e064
  %v1_e088 = call i32 @function_11b14(i32 23)
  %v1_e090 = call i32 @function_11b14(i32 24)
  %v0_e094 = load i32, i32* @r5, align 4
  %v1_e098 = call i32 @function_13e08(i32 %v0_e094)
  %v0_e09c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_e09c, label %bb13, label %bb14

bb13:                                             ; preds = %dec_label_pc_e084
  br label %bb14

bb14:                                             ; preds = %dec_label_pc_e084, %bb13
  ret i32 %v1_e098

; uselistorder directives
  uselistorder i32 %v3_e074, { 1, 2, 0 }
  uselistorder i32 %v3_e018, { 1, 2, 0 }
  uselistorder i32 %storemerge4, { 1, 0 }
  uselistorder i32 %v0_dfbc, { 2, 1, 3, 0 }
  uselistorder i32 (i32, i32, i32)* @function_12b4c, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
}

define i32 @function_e0a0(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_e0a0:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-38 = alloca i8*, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-380 = alloca i32, align 4
  %stack_var_-252 = alloca i32, align 4
  %stack_var_-1532 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-124 = alloca i32, align 4
  %stack_var_-508 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_e0a0 = load i32, i32* @r4, align 4
  store i32 %v3_e0a0, i32* %stack_var_-36, align 4
  %v9_e0a0 = load i32, i32* @r6, align 4
  %v15_e0a0 = load i32, i32* @r8, align 4
  %v2_e0ac = ptrtoint i32* %stack_var_-508 to i32
  store i32 %v2_e0ac, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %v2_e0ac, i32* @r0, align 4
  store i32 %tmp, i32* @r8, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v1_e0c4 = call i32 @function_133dc(i32 %v2_e0ac)
  store i32 %v2_e0ac, i32* @r0, align 4
  %v2_e0d0 = call i32 @function_133ac(i32 %v2_e0ac, i32 2)
  %v0_e0d4 = load i32, i32* @r5, align 4
  store i32 %v0_e0d4, i32* %r2.global-to-local, align 4
  %v3_e0e0 = bitcast i32* %stack_var_-508 to %_TYPEDEF_sigset_t*
  %v4_e0e0 = call i32 @function_12d18(i32 %v0_e0d4, %_TYPEDEF_sigset_t* %v3_e0e0, i32 %v0_e0d4)
  %v2_e0ec = call i32 @function_133f4(i32 17, i32 1)
  %v2_e0f8 = call i32 @function_133f4(i32 5, i32 ptrtoint (i32* @global_var_df48.83 to i32))
  %v0_e0fc = call i32 @function_12450()
  store i32 %v0_e0fc, i32* @global_var_1da7c.49, align 4
  store i32 902487617, i32* %r2.global-to-local, align 4
  store i8 23, i8* bitcast (i32* @global_var_1da8b.78 to i8*), align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i8 2, i8* bitcast (i8** @global_var_1da88.76 to i8*), align 4
  store i32 902487617, i32* @global_var_1da8c.77, align 4
  %v0_e124 = load i32, i32* @r5, align 4
  %v1_e124 = trunc i32 %v0_e124 to i8
  store i8 %v1_e124, i8* bitcast (i32* @global_var_1da8a.79 to i8*), align 4
  store i8 %v1_e124, i8* bitcast (i32* @global_var_1da89.87 to i8*), align 4
  %v6_e12c = call i32 @function_11c84(i32 %v0_e0fc, i32 ptrtoint (i8** @global_var_1da88.76 to i32), i32 902487617, i32 2)
  store i32 ptrtoint (i32* @global_var_df60.70 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_df60.70 to i32), i32* @global_var_1d874.72, align 4
  %v1_e13c = call i32 @function_e824(i32 %v6_e12c)
  %v2_e144 = ptrtoint i32* %stack_var_-124 to i32
  store i32 %v2_e144, i32* @r0, align 4
  store i32 32, i32* @r1, align 4
  %v0_e14c = call i32 @function_12238()
  %v0_e150 = load i32, i32* @r6, align 4
  %v7_e150 = icmp eq i32 %v0_e150, 2
  br i1 %v7_e150, label %dec_label_pc_e278, label %dec_label_pc_e158

dec_label_pc_e158:                                ; preds = %dec_label_pc_e278, %dec_label_pc_e0a0, %dec_label_pc_e288
  %v0_e158 = call i32 @function_e7cc()
  store i32 %v0_e158, i32* %r6.global-to-local, align 4
  %v0_e160 = load i32, i32* @r8, align 4
  %v1_e160 = inttoptr i32 %v0_e160 to i32*
  %v2_e160 = load i32, i32* %v1_e160, align 4
  %v1_e164 = inttoptr i32 %v2_e160 to i8*
  %v2_e164 = call i32 @function_12198(i8* %v1_e164)
  %v0_e16c = load i32, i32* @r8, align 4
  %v1_e16c = inttoptr i32 %v0_e16c to i32*
  %v2_e16c = load i32, i32* %v1_e16c, align 4
  %v1_e170 = inttoptr i32 %v2_e16c to i8*
  %v2_e170 = call i32 @function_12198(i8* %v1_e170)
  %v1_e174 = sub i32 20, %v2_e164
  store i32 %v2_e170, i32* @r5, align 4
  %v0_e17c = load i32, i32* %r6.global-to-local, align 4
  %v2_e180 = call i32 @function_12824(i32 %v0_e17c, i32 %v1_e174)
  %v1_e188 = load i32, i32* @r5, align 4
  %v2_e188 = add i32 %v1_e188, %v2_e180
  store i32 %v2_e188, i32* @r4, align 4
  %v2_e18c = ptrtoint i32* %stack_var_-92 to i32
  store i32 %v2_e18c, i32* @r6, align 4
  %v2_e198 = call i32 @function_e880(i32 %v2_e18c, i32 %v2_e188)
  %v2_e19c = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_e19c, i32* %r2.global-to-local, align 4
  %v1_e1a0 = load i32, i32* @r4, align 4
  %v2_e1a0 = add i32 %v1_e1a0, %v2_e19c
  store i32 %v2_e1a0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @sb, align 4
  %v0_e1ac = load i32, i32* @r8, align 4
  %v1_e1ac = inttoptr i32 %v0_e1ac to i32*
  %v2_e1ac = load i32, i32* %v1_e1ac, align 4
  store i32 %v2_e1ac, i32* @r0, align 4
  %v3_e1b0 = add i32 %v2_e1a0, -56
  %v4_e1b0 = inttoptr i32 %v3_e1b0 to i8*
  store i8 0, i8* %v4_e1b0, align 1
  %v2_e1b4 = inttoptr i32 %v2_e1ac to i8*
  %v3_e1b4 = call i32 @function_121c0(i8* %v2_e1b4, i32 %v2_e18c)
  store i32 32, i32* @r1, align 4
  store i32 %v2_e18c, i32* @r0, align 4
  %v0_e1c0 = call i32 @function_12238()
  %v0_e1c4 = call i32 @function_e7cc()
  store i32 %v0_e1c4, i32* @r7, align 4
  %v0_e1cc = load i32, i32* @r8, align 4
  %v1_e1cc = inttoptr i32 %v0_e1cc to i32*
  %v2_e1cc = load i32, i32* %v1_e1cc, align 4
  %v1_e1d0 = inttoptr i32 %v2_e1cc to i8*
  %v2_e1d0 = call i32 @function_12198(i8* %v1_e1d0)
  %v0_e1d8 = load i32, i32* @r8, align 4
  %v1_e1d8 = inttoptr i32 %v0_e1d8 to i32*
  %v2_e1d8 = load i32, i32* %v1_e1d8, align 4
  %v1_e1dc = inttoptr i32 %v2_e1d8 to i8*
  %v2_e1dc = call i32 @function_12198(i8* %v1_e1dc)
  %v1_e1e0 = sub i32 20, %v2_e1d0
  store i32 %v2_e1dc, i32* @r5, align 4
  %v0_e1e8 = load i32, i32* @r7, align 4
  %v2_e1ec = call i32 @function_12824(i32 %v0_e1e8, i32 %v1_e1e0)
  %v1_e1f0 = load i32, i32* @r5, align 4
  %v2_e1f0 = add i32 %v1_e1f0, %v2_e1ec
  store i32 %v2_e1f0, i32* @r4, align 4
  %v2_e1fc = call i32 @function_e880(i32 %v2_e18c, i32 %v2_e1f0)
  %v1_e204 = load i32, i32* @r4, align 4
  %v2_e204 = add i32 %v1_e204, %v2_e19c
  store i32 %v2_e204, i32* @r3, align 4
  %v0_e208 = load i32, i32* @sb, align 4
  %v1_e208 = trunc i32 %v0_e208 to i8
  %v3_e208 = add i32 %v2_e204, -56
  %v4_e208 = inttoptr i32 %v3_e208 to i8*
  store i8 %v1_e208, i8* %v4_e208, align 1
  %v2_e214 = call i32 @function_12c34(i32 15, i32 %v2_e18c)
  %v1_e21c = call i32 @function_11bcc(i32 3)
  %v3_e228 = call i32 @function_11ae8(i32 3, i32* nonnull %stack_var_-52)
  %v3_e22c = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_e22c, i32* %r2.global-to-local, align 4
  %v3_e238 = inttoptr i32 %v3_e228 to i32*
  %v4_e238 = call i32 @function_12dc4(i32 1, i32* %v3_e238, i32 %v3_e22c)
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_e248 = call i32 @function_12dc4(i32 1, i32* nonnull @global_var_15314.91, i32 1)
  %v1_e250 = call i32 @function_11b14(i32 3)
  %v1_e254 = call i32 @function_8650(i32 %v1_e250)
  %v1_e258 = call i32 @function_d760(i32 %v1_e254)
  %v1_e25c = call i32 @function_dfb4(i32 %v1_e258)
  %v0_e260 = call i32 @function_12ac8()
  %v1_e264 = load i32, i32* @sb, align 4
  %v7_e268 = icmp sgt i32 %v0_e260, %v1_e264
  br i1 %v7_e268, label %dec_label_pc_e26c, label %dec_label_pc_e2b4

dec_label_pc_e26c:                                ; preds = %dec_label_pc_e158
  store i32 %v9_e0a0, i32* %r6.global-to-local, align 4
  store i32 %v15_e0a0, i32* %r8.global-to-local, align 4
  ret i32 0

dec_label_pc_e278:                                ; preds = %dec_label_pc_e0a0
  %v0_e278 = load i32, i32* @r8, align 4
  %v1_e278 = add i32 %v0_e278, 4
  %v2_e278 = inttoptr i32 %v1_e278 to i32*
  %v3_e278 = load i32, i32* %v2_e278, align 4
  %v1_e27c = inttoptr i32 %v3_e278 to i8*
  %v2_e27c = call i32 @function_12198(i8* %v1_e27c)
  %v8_e284 = icmp sgt i32 %v2_e27c, 31
  br i1 %v8_e284, label %dec_label_pc_e158, label %dec_label_pc_e288

dec_label_pc_e288:                                ; preds = %dec_label_pc_e278
  %v0_e28c = load i32, i32* @r8, align 4
  %v1_e28c = add i32 %v0_e28c, 4
  %v2_e28c = inttoptr i32 %v1_e28c to i32*
  %v3_e28c = load i32, i32* %v2_e28c, align 4
  store i32 %v2_e144, i32* @r0, align 4
  %v2_e294 = bitcast i32* %stack_var_-124 to i8*
  %v3_e294 = call i32 @function_121c0(i8* %v2_e294, i32 %v3_e28c)
  %v0_e298 = load i32, i32* @r8, align 4
  %v1_e298 = add i32 %v0_e298, 4
  %v2_e298 = inttoptr i32 %v1_e298 to i32*
  %v3_e298 = load i32, i32* %v2_e298, align 4
  %v1_e2a0 = inttoptr i32 %v3_e298 to i8*
  %v2_e2a0 = call i32 @function_12198(i8* %v1_e2a0)
  store i32 %v2_e2a0, i32* @r1, align 4
  store i32 %v3_e298, i32* @r0, align 4
  %v0_e2ac = call i32 @function_12238()
  br label %dec_label_pc_e158

dec_label_pc_e2b4:                                ; preds = %dec_label_pc_e158
  %v1_e2b4 = call i32 @function_12cec(i32 %v0_e260)
  %v0_e2b8 = load i32, i32* @sb, align 4
  %v1_e2bc = call i32 @function_12a9c(i32 %v0_e2b8)
  %v1_e2c4 = call i32 @function_12a9c(i32 1)
  %v1_e2cc = call i32 @function_12a9c(i32 2)
  %v1_e2d0 = call i32 @function_8650(i32 %v1_e2cc)
  %v1_e2d4 = call i32 @function_d760(i32 %v1_e2d0)
  %v1_e2d8 = call i32 @function_dfb4(i32 %v1_e2d4)
  %v1_e2dc = call i32 @function_ee14(i32 %v1_e2d8)
  %v2_e2e4 = ptrtoint i32* %stack_var_-1532 to i32
  store i32 %v2_e2e4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1d870.95 to i32), i32* @sl, align 4
  %v2_e2fc = ptrtoint i32* %stack_var_-252 to i32
  store i32 %v2_e2fc, i32* @r6, align 4
  %v2_e300 = ptrtoint i32* %stack_var_-380 to i32
  store i32 %v2_e300, i32* @r7, align 4
  %v2_e3d0 = ptrtoint i32* %stack_var_-60 to i32
  %v4_e688 = bitcast i8** %stack_var_-38 to i32*
  %v2_e620 = ptrtoint i32* %stack_var_-44 to i32
  %v2_e624 = ptrtoint i32* %stack_var_-48 to i32
  %v1_e698 = bitcast i32* %stack_var_-124 to i8*
  br label %dec_label_pc_e304

dec_label_pc_e304:                                ; preds = %dec_label_pc_e304.backedge, %dec_label_pc_e2b4
  %v2_e30c43 = phi i32 [ %v2_e30c43.pre, %dec_label_pc_e304.backedge ], [ %v2_e2fc, %dec_label_pc_e2b4 ]
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v4_e30c45 = inttoptr i32 %v2_e30c43 to i32*
  store i32 0, i32* %v4_e30c45, align 4
  %v0_e31046 = load i32, i32* %r3.global-to-local, align 4
  %v1_e31047 = add i32 %v0_e31046, 4
  store i32 %v1_e31047, i32* %r3.global-to-local, align 4
  %v7_e31448 = icmp eq i32 %v1_e31047, 128
  br i1 %v7_e31448, label %dec_label_pc_e31c, label %dec_label_pc_e30c.dec_label_pc_e30c_crit_edge

dec_label_pc_e30c.dec_label_pc_e30c_crit_edge:    ; preds = %dec_label_pc_e304, %dec_label_pc_e30c.dec_label_pc_e30c_crit_edge
  %v1_e31049 = phi i32 [ %v1_e310, %dec_label_pc_e30c.dec_label_pc_e30c_crit_edge ], [ %v1_e31047, %dec_label_pc_e304 ]
  %v0_e30c.pre = load i32, i32* %r2.global-to-local, align 4
  %v2_e30c = load i32, i32* @r6, align 4
  %v3_e30c = add i32 %v2_e30c, %v1_e31049
  %v4_e30c = inttoptr i32 %v3_e30c to i32*
  store i32 %v0_e30c.pre, i32* %v4_e30c, align 4
  %v0_e310 = load i32, i32* %r3.global-to-local, align 4
  %v1_e310 = add i32 %v0_e310, 4
  store i32 %v1_e310, i32* %r3.global-to-local, align 4
  %v7_e314 = icmp eq i32 %v1_e310, 128
  br i1 %v7_e314, label %dec_label_pc_e31c, label %dec_label_pc_e30c.dec_label_pc_e30c_crit_edge

dec_label_pc_e31c:                                ; preds = %dec_label_pc_e30c.dec_label_pc_e30c_crit_edge, %dec_label_pc_e304
  %v0_e31c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_e31c, i32* %r3.global-to-local, align 4
  store i32 %v0_e31c, i32* @r4, align 4
  %v2_e32450 = load i32, i32* @r7, align 4
  %v3_e32451 = add i32 %v2_e32450, %v0_e31c
  %v4_e32452 = inttoptr i32 %v3_e32451 to i32*
  store i32 %v0_e31c, i32* %v4_e32452, align 4
  %v0_e32853 = load i32, i32* %r3.global-to-local, align 4
  %v1_e32854 = add i32 %v0_e32853, 4
  store i32 %v1_e32854, i32* %r3.global-to-local, align 4
  %v7_e32c55 = icmp eq i32 %v1_e32854, 128
  br i1 %v7_e32c55, label %dec_label_pc_e334, label %dec_label_pc_e324.dec_label_pc_e324_crit_edge

dec_label_pc_e324.dec_label_pc_e324_crit_edge:    ; preds = %dec_label_pc_e31c, %dec_label_pc_e324.dec_label_pc_e324_crit_edge
  %v1_e32856 = phi i32 [ %v1_e328, %dec_label_pc_e324.dec_label_pc_e324_crit_edge ], [ %v1_e32854, %dec_label_pc_e31c ]
  %v0_e324.pre = load i32, i32* @r4, align 4
  %v2_e324 = load i32, i32* @r7, align 4
  %v3_e324 = add i32 %v2_e324, %v1_e32856
  %v4_e324 = inttoptr i32 %v3_e324 to i32*
  store i32 %v0_e324.pre, i32* %v4_e324, align 4
  %v0_e328 = load i32, i32* %r3.global-to-local, align 4
  %v1_e328 = add i32 %v0_e328, 4
  store i32 %v1_e328, i32* %r3.global-to-local, align 4
  %v7_e32c = icmp eq i32 %v1_e328, 128
  br i1 %v7_e32c, label %dec_label_pc_e334, label %dec_label_pc_e324.dec_label_pc_e324_crit_edge

dec_label_pc_e334:                                ; preds = %dec_label_pc_e324.dec_label_pc_e324_crit_edge, %dec_label_pc_e31c
  %v2_e334 = load i32, i32* @global_var_1d86c.93, align 4
  %v7_e338 = icmp eq i32 %v2_e334, -1
  br i1 %v7_e338, label %dec_label_pc_e364, label %dec_label_pc_e340

dec_label_pc_e340:                                ; preds = %dec_label_pc_e334
  %v3_e340 = udiv i32 %v2_e334, 32
  %v3_e344 = mul nuw nsw i32 %v3_e340, 4
  %v2_e34c = add i32 %v3_e344, %v2_e19c
  store i32 %v2_e34c, i32* %r3.global-to-local, align 4
  %v1_e350 = add i32 %v2_e34c, -216
  %v2_e350 = inttoptr i32 %v1_e350 to i32*
  %v3_e350 = load i32, i32* %v2_e350, align 4
  %v1_e354 = urem i32 %v2_e334, 32
  %v7_e35c = shl i32 1, %v1_e354
  %v8_e35c = or i32 %v3_e350, %v7_e35c
  store i32 %v8_e35c, i32* %r2.global-to-local, align 4
  store i32 %v8_e35c, i32* %v2_e350, align 4
  br label %dec_label_pc_e364

dec_label_pc_e364:                                ; preds = %dec_label_pc_e334, %dec_label_pc_e340
  %v2_e364 = load i32, i32* @global_var_1d870.95, align 4
  store i32 %v2_e364, i32* %r3.global-to-local, align 4
  %v7_e368 = icmp eq i32 %v2_e364, -1
  store i32 ptrtoint (i32* @global_var_1d870.95 to i32), i32* %r8.global-to-local, align 4
  br i1 %v7_e368, label %dec_label_pc_e5a0, label %dec_label_pc_e374

dec_label_pc_e374:                                ; preds = %dec_label_pc_e5a0, %dec_label_pc_e364, %.thread
  store i32 ptrtoint (i8** @global_var_1d9ec.97 to i32), i32* %r2.global-to-local, align 4
  %v2_e378 = load i8, i8* bitcast (i8** @global_var_1d9ec.97 to i8*), align 4
  %v2_e37c = icmp eq i8 %v2_e378, 0
  %v2_e484 = load i32, i32* @global_var_1d870.95, align 4
  %v3_e488 = udiv i32 %v2_e484, 32
  store i32 %v3_e488, i32* %r3.global-to-local, align 4
  br i1 %v2_e37c, label %dec_label_pc_e484, label %dec_label_pc_e384

dec_label_pc_e384:                                ; preds = %dec_label_pc_e374
  %v3_e38c = mul nuw nsw i32 %v3_e488, 4
  %v2_e394 = add i32 %v3_e38c, %v2_e19c
  store i32 %v2_e394, i32* %r3.global-to-local, align 4
  %v1_e398 = add i32 %v2_e394, -344
  %v2_e398 = inttoptr i32 %v1_e398 to i32*
  %v3_e398 = load i32, i32* %v2_e398, align 4
  %v1_e39c = urem i32 %v2_e484, 32
  %v7_e3a4 = shl i32 1, %v1_e39c
  %v8_e3a4 = or i32 %v3_e398, %v7_e3a4
  store i32 %v8_e3a4, i32* %r2.global-to-local, align 4
  store i32 %v8_e3a4, i32* %v2_e398, align 4
  br label %dec_label_pc_e3ac

dec_label_pc_e3ac:                                ; preds = %dec_label_pc_e484, %dec_label_pc_e384
  %v2_e3ac = load i32, i32* @global_var_1d86c.93, align 4
  %v2_e3b0 = load i32, i32* @global_var_1d870.95, align 4
  store i32 %v2_e3b0, i32* %r3.global-to-local, align 4
  %v5_e3bc = icmp slt i32 %v2_e3ac, %v2_e3b0
  br i1 %v5_e3bc, label %bb, label %bb40

bb:                                               ; preds = %dec_label_pc_e3ac
  br label %bb40

bb40:                                             ; preds = %dec_label_pc_e3ac, %bb
  %v0_e3d4 = phi i32 [ %v2_e3ac, %dec_label_pc_e3ac ], [ %v2_e3b0, %bb ]
  store i32 0, i32* @lr, align 4
  store i32 10, i32* %stack_var_-60, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_e3d4 = add i32 %v0_e3d4, 1
  store i32 %v2_e300, i32* %r2.global-to-local, align 4
  %v5_e3e8 = call i32 @function_12cbc(i32 %v1_e3d4, i32 %v2_e2fc, i32 %v2_e300, i32 0, i32 %v2_e3d0)
  %v8_e3ec = icmp eq i32 %v5_e3e8, -1
  store i32 %v5_e3e8, i32* %r3.global-to-local, align 4
  br i1 %v8_e3ec, label %dec_label_pc_e304.backedge, label %dec_label_pc_e3f8

dec_label_pc_e3f8:                                ; preds = %bb40
  %v6_e3e8 = trunc i32 %v5_e3e8 to i8
  %v3_e3f8 = icmp eq i8 %v6_e3e8, 0
  br i1 %v3_e3f8, label %dec_label_pc_e400, label %dec_label_pc_e420

dec_label_pc_e400:                                ; preds = %dec_label_pc_e3f8
  %v0_e400 = load i32, i32* @sb, align 4
  %v6_e40c = inttoptr i32 %v5_e3e8 to i8*
  store i8* %v6_e40c, i8** %stack_var_-38, align 4
  %v2_e410 = call i32 @function_128f0(i32 %v0_e400, i32 6)
  %v2_e414 = icmp eq i32 %v2_e410, 0
  %v0_e418 = load i32, i32* @sb, align 4
  %v1_e418 = add i32 %v0_e418, 1
  store i32 %v1_e418, i32* @sb, align 4
  br i1 %v2_e414, label %dec_label_pc_e670, label %dec_label_pc_e420

dec_label_pc_e420:                                ; preds = %dec_label_pc_e3f8, %dec_label_pc_e400, %dec_label_pc_e670
  store i32 ptrtoint (i8** @global_var_1d9ec.97 to i32), i32* %r2.global-to-local, align 4
  %v2_e424 = load i8, i8* bitcast (i8** @global_var_1d9ec.97 to i8*), align 4
  %v3_e424 = zext i8 %v2_e424 to i32
  store i32 %v3_e424, i32* @r4, align 4
  %v2_e428 = icmp eq i8 %v2_e424, 0
  %v2_e4b0 = load i32, i32* @global_var_1d870.95, align 4
  br i1 %v2_e428, label %dec_label_pc_e4b0, label %dec_label_pc_e430

dec_label_pc_e430:                                ; preds = %dec_label_pc_e420
  %v3_e434 = udiv i32 %v2_e4b0, 32
  %v3_e43c = mul nuw nsw i32 %v3_e434, 4
  %v2_e440 = add i32 %v3_e43c, %v2_e19c
  store i32 %v2_e440, i32* %r3.global-to-local, align 4
  %v1_e444 = add i32 %v2_e440, -344
  %v2_e444 = inttoptr i32 %v1_e444 to i32*
  %v3_e444 = load i32, i32* %v2_e444, align 4
  %v1_e448 = urem i32 %v2_e4b0, 32
  %v6_e44c = lshr i32 %v3_e444, %v1_e448
  store i32 %v6_e44c, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_1d9ec.97 to i32), i32* %r3.global-to-local, align 4
  %v1_e458 = urem i32 %v6_e44c, 2
  %v2_e458 = icmp eq i32 %v1_e458, 0
  store i8 0, i8* bitcast (i8** @global_var_1d9ec.97 to i8*), align 4
  store i32 ptrtoint (i32* @global_var_1d870.95 to i32), i32* @r4, align 4
  br i1 %v2_e458, label %dec_label_pc_e468, label %dec_label_pc_e610

dec_label_pc_e468:                                ; preds = %dec_label_pc_e430
  store i32 58480, i32* @lr, align 4
  %v1_e46c = icmp ne i32 %v2_e4b0, -1
  call void @__pseudo_cond_branch(i1 %v1_e46c, i32 ptrtoint (i32* @global_var_12a9c.98 to i32))
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_e474 = load i32, i32* @r4, align 4
  %v2_e474 = inttoptr i32 %v1_e474 to i32*
  store i32 -1, i32* %v2_e474, align 4
  %v1_e47c = call i32 @function_13e9c(i32 1)
  br label %dec_label_pc_e304.backedge

dec_label_pc_e304.backedge:                       ; preds = %dec_label_pc_e468, %dec_label_pc_e57c, %dec_label_pc_e648, %dec_label_pc_e6e4, %dec_label_pc_e710, %dec_label_pc_e72c, %dec_label_pc_e794, %bb40, %dec_label_pc_e4b0, %dec_label_pc_e4c0, %dec_label_pc_e690, %bb42, %dec_label_pc_e740, %dec_label_pc_e6fc
  %v2_e30c43.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_e304

dec_label_pc_e484:                                ; preds = %dec_label_pc_e374
  store i32 %v2_e19c, i32* %r2.global-to-local, align 4
  %v3_e490 = mul nuw nsw i32 %v3_e488, 4
  %v2_e494 = add i32 %v3_e490, %v2_e19c
  store i32 %v2_e494, i32* %r3.global-to-local, align 4
  %v1_e498 = add i32 %v2_e494, -216
  %v2_e498 = inttoptr i32 %v1_e498 to i32*
  %v3_e498 = load i32, i32* %v2_e498, align 4
  %v1_e49c = urem i32 %v2_e484, 32
  %v7_e4a4 = shl i32 1, %v1_e49c
  %v8_e4a4 = or i32 %v3_e498, %v7_e4a4
  store i32 %v8_e4a4, i32* %r2.global-to-local, align 4
  store i32 %v8_e4a4, i32* %v2_e498, align 4
  br label %dec_label_pc_e3ac

dec_label_pc_e4b0:                                ; preds = %dec_label_pc_e420
  %v7_e4b4 = icmp eq i32 %v2_e4b0, -1
  store i32 ptrtoint (i32* @global_var_1d870.95 to i32), i32* @r8, align 4
  br i1 %v7_e4b4, label %dec_label_pc_e304.backedge, label %dec_label_pc_e4c0

dec_label_pc_e4c0:                                ; preds = %dec_label_pc_e4b0
  %v3_e4c0 = udiv i32 %v2_e4b0, 32
  %v3_e4c4 = mul nuw nsw i32 %v3_e4c0, 4
  %v2_e4cc = add i32 %v3_e4c4, %v2_e19c
  store i32 %v2_e4cc, i32* %r3.global-to-local, align 4
  %v1_e4d0 = add i32 %v2_e4cc, -216
  %v2_e4d0 = inttoptr i32 %v1_e4d0 to i32*
  %v3_e4d0 = load i32, i32* %v2_e4d0, align 4
  %v1_e4d4 = urem i32 %v2_e4b0, 32
  %v6_e4d8 = lshr i32 %v3_e4d0, %v1_e4d4
  store i32 %v6_e4d8, i32* %r2.global-to-local, align 4
  %v1_e4dc = urem i32 %v6_e4d8, 2
  %v2_e4dc = icmp eq i32 %v1_e4dc, 0
  br i1 %v2_e4dc, label %dec_label_pc_e304.backedge, label %dec_label_pc_e4e4

dec_label_pc_e4e4:                                ; preds = %dec_label_pc_e4c0
  %v6_e4e4 = inttoptr i32 %v3_e424 to i8*
  store i8* %v6_e4e4, i8** %stack_var_-38, align 4
  %v0_e4ec = call i32 @function_13070()
  %v0_e4f0 = load i32, i32* @r4, align 4
  %v2_e4f0 = inttoptr i32 %v0_e4ec to i32*
  store i32 %v0_e4f0, i32* %v2_e4f0, align 4
  store i32 %v0_e4ec, i32* @r5, align 4
  store i32 16386, i32* %r3.global-to-local, align 4
  %v2_e504 = load i32, i32* @global_var_1d870.95, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v5_e510 = call i32 @function_13290(i32 %v2_e504, i32* %v4_e688, i32 2, i32 16386)
  %v7_e514 = icmp eq i32 %v5_e510, -1
  br i1 %v7_e514, label %dec_label_pc_e6fc, label %dec_label_pc_e51c

dec_label_pc_e51c:                                ; preds = %dec_label_pc_e4e4
  %v2_e51c = icmp eq i32 %v5_e510, 0
  br i1 %v2_e51c, label %dec_label_pc_e57c, label %dec_label_pc_e524

dec_label_pc_e524:                                ; preds = %dec_label_pc_e51c
  %v3_e524 = load i8*, i8** %stack_var_-38, align 4
  %v4_e524 = ptrtoint i8* %v3_e524 to i32
  store i32 %v3_e424, i32* %r3.global-to-local, align 4
  %v4_e52c = mul nuw nsw i32 %v3_e424, 256
  %v5_e52c = or i32 %v4_e524, %v4_e52c
  store i32 %v5_e52c, i32* %r2.global-to-local, align 4
  %v7_e52c = icmp eq i32 %v5_e52c, 0
  br i1 %v7_e52c, label %dec_label_pc_e710, label %dec_label_pc_e534

dec_label_pc_e534:                                ; preds = %dec_label_pc_e524
  %v1_e534 = mul i32 %v4_e524, 256
  %v3_e538 = and i32 %v1_e534, 65280
  %v4_e53c = udiv i32 %v5_e52c, 256
  %v5_e53c = or i32 %v3_e538, %v4_e53c
  %v6_e53c = trunc i32 %v4_e53c to i8
  store i32 %v5_e53c, i32* %r2.global-to-local, align 4
  %v4_e540 = udiv i32 %v5_e52c, 65536
  store i32 %v4_e540, i32* %r3.global-to-local, align 4
  %v3_e544 = icmp slt i8 %v6_e53c, 0
  %v7_e54c = inttoptr i32 %v4_e53c to i8*
  store i8* %v7_e54c, i8** %stack_var_-38, align 4
  br i1 %v3_e544, label %dec_label_pc_e72c, label %dec_label_pc_e554

dec_label_pc_e554:                                ; preds = %dec_label_pc_e534
  %v0_e554 = load i32, i32* @r4, align 4
  %v1_e554 = load i32, i32* @r5, align 4
  %v2_e554 = inttoptr i32 %v1_e554 to i32*
  store i32 %v0_e554, i32* %v2_e554, align 4
  store i32 16386, i32* %r3.global-to-local, align 4
  %v2_e560 = load i32, i32* @global_var_1d870.95, align 4
  %v9_e568 = call i32 @function_13290(i32 %v2_e560, i32* nonnull %stack_var_-1532, i32 %v4_e53c, i32 16386)
  %v7_e56c = icmp eq i32 %v9_e568, -1
  br i1 %v7_e56c, label %dec_label_pc_e6fc, label %dec_label_pc_e574

dec_label_pc_e574:                                ; preds = %dec_label_pc_e554
  %v2_e574 = icmp eq i32 %v9_e568, 0
  br i1 %v2_e574, label %dec_label_pc_e57c, label %dec_label_pc_e740

dec_label_pc_e57c:                                ; preds = %bb42, %dec_label_pc_e574, %dec_label_pc_e51c
  %v2_e57c = load i32, i32* @global_var_1d870.95, align 4
  store i32 58760, i32* @lr, align 4
  %v1_e584 = icmp ne i32 %v2_e57c, -1
  call void @__pseudo_cond_branch(i1 %v1_e584, i32 ptrtoint (i32* @global_var_12a9c.98 to i32))
  store i32 ptrtoint (i32* @global_var_1d870.95 to i32), i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  store i32 -1, i32* @global_var_1d870.95, align 4
  %v1_e598 = call i32 @function_13e9c(i32 1)
  br label %dec_label_pc_e304.backedge

dec_label_pc_e5a0:                                ; preds = %dec_label_pc_e364
  %v0_e5a8 = load i32, i32* @r4, align 4
  store i32 %v0_e5a8, i32* %r2.global-to-local, align 4
  %v3_e5ac = call i32 @function_13380(i32 2, i32 1, i32 %v0_e5a8)
  %v7_e5b0 = icmp eq i32 %v3_e5ac, -1
  store i32 %v3_e5ac, i32* @r5, align 4
  %v1_e5b8 = load i32, i32* %r8.global-to-local, align 4
  %v2_e5b8 = inttoptr i32 %v1_e5b8 to i32*
  store i32 %v3_e5ac, i32* %v2_e5b8, align 4
  br i1 %v7_e5b0, label %dec_label_pc_e374, label %dec_label_pc_e5c0

dec_label_pc_e5c0:                                ; preds = %dec_label_pc_e5a0
  %v0_e5c0 = load i32, i32* @r4, align 4
  store i32 %v0_e5c0, i32* @r2, align 4
  %v2_e5c8 = call i32 @function_129d8(i32 %v3_e5ac, i32 3)
  %v1_e5d0 = or i32 %v2_e5c8, 2048
  store i32 %v1_e5d0, i32* @r2, align 4
  %v0_e5d4 = load i32, i32* @r5, align 4
  %v2_e5d8 = call i32 @function_129d8(i32 %v0_e5d4, i32 4)
  store i32 ptrtoint (i32* @global_var_1d874.72 to i32), i32* %r2.global-to-local, align 4
  %v2_e5e0 = load i32, i32* @global_var_1d874.72, align 4
  store i32 %v2_e5e0, i32* %r3.global-to-local, align 4
  %v2_e5e4 = icmp eq i32 %v2_e5e0, 0
  br i1 %v2_e5e4, label %.thread, label %bb41

bb41:                                             ; preds = %dec_label_pc_e5c0
  call void @__pseudo_branch(i32 ptrtoint (i32* @global_var_12450.99 to i32))
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_e5c0, %bb41
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_e5f8 = load i32, i32* @global_var_1d870.95, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i8 1, i8* bitcast (i8** @global_var_1d9ec.97 to i8*), align 4
  %v5_e608 = call i32 @function_131dc(i32 %v2_e5f8, %sockaddr* bitcast (i8** @global_var_1da88.76 to %sockaddr*), i32 16)
  br label %dec_label_pc_e374

dec_label_pc_e610:                                ; preds = %dec_label_pc_e430
  store i32 4, i32* @r5, align 4
  store i32 0, i32* %stack_var_-44, align 4
  store i32 %v2_e620, i32* %r3.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 4, i32* %stack_var_-48, align 4
  %v6_e638 = call i32 @function_13234(i32 %v2_e4b0, i32 1, i32 4, i32* nonnull %stack_var_-44, i32 %v2_e624)
  %v3_e63c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_e63c, i32* %r3.global-to-local, align 4
  %v2_e640 = icmp eq i32 %v3_e63c, 0
  br i1 %v2_e640, label %dec_label_pc_e690, label %dec_label_pc_e648

dec_label_pc_e648:                                ; preds = %dec_label_pc_e610
  %v2_e648 = load i32, i32* @global_var_1d870.95, align 4
  %v1_e64c = call i32 @function_12a9c(i32 %v2_e648)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_e654 = load i32, i32* @r4, align 4
  %v2_e654 = inttoptr i32 %v1_e654 to i32*
  store i32 -1, i32* %v2_e654, align 4
  %v0_e658 = call i32 @function_e7cc()
  %v2_e660 = call i32 @function_12824(i32 %v0_e658, i32 10)
  %v1_e664 = add i32 %v2_e660, 1
  %v1_e668 = call i32 @function_13e9c(i32 %v1_e664)
  br label %dec_label_pc_e304.backedge

dec_label_pc_e670:                                ; preds = %dec_label_pc_e400
  %v2_e678 = load i32, i32* @global_var_1d870.95, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_e688 = call i32 @function_132f0(i32 %v2_e678, i32* nonnull %v4_e688, i32 2, i32 16384)
  br label %dec_label_pc_e420

dec_label_pc_e690:                                ; preds = %dec_label_pc_e610
  %v2_e698 = call i32 @function_12198(i8* %v1_e698)
  %sext = mul i32 %v2_e698, 16777216
  %v1_e69c = sdiv i32 %sext, 16777216
  %v7_e69c = inttoptr i32 %v1_e69c to i8*
  store i8* %v7_e69c, i8** %stack_var_-38, align 4
  %v0_e6a0 = call i32 @function_12450()
  store i32 %v0_e6a0, i32* @global_var_1da7c.49, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_e6b4 = load i32, i32* @r5, align 4
  store i32 %v0_e6b4, i32* %r2.global-to-local, align 4
  %v2_e6b8 = load i32, i32* @global_var_1d870.95, align 4
  %v5_e6bc = call i32 @function_132f0(i32 %v2_e6b8, i32* nonnull @global_var_15318.101, i32 %v0_e6b4, i32 16384)
  store i32 1, i32* %r2.global-to-local, align 4
  %v2_e6c8 = load i32, i32* @global_var_1d870.95, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_e6d4 = call i32 @function_132f0(i32 %v2_e6c8, i32* %v4_e688, i32 1, i32 16384)
  %v3_e6d8 = load i8*, i8** %stack_var_-38, align 4
  %v4_e6d8 = ptrtoint i8* %v3_e6d8 to i32
  store i32 %v4_e6d8, i32* %r2.global-to-local, align 4
  %v3_e6dc = icmp eq i8* %v3_e6d8, null
  br i1 %v3_e6dc, label %dec_label_pc_e304.backedge, label %dec_label_pc_e6e4

dec_label_pc_e6e4:                                ; preds = %dec_label_pc_e690
  %v2_e6e8 = load i32, i32* @global_var_1d870.95, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v6_e6f4 = call i32 @function_132f0(i32 %v2_e6e8, i32* nonnull %stack_var_-124, i32 %v4_e6d8, i32 16384)
  br label %dec_label_pc_e304.backedge

dec_label_pc_e6fc:                                ; preds = %dec_label_pc_e554, %dec_label_pc_e4e4
  %v0_e6fc = load i32, i32* @r5, align 4
  %v1_e6fc = inttoptr i32 %v0_e6fc to i32*
  %v2_e6fc = load i32, i32* %v1_e6fc, align 4
  store i32 %v2_e6fc, i32* %r3.global-to-local, align 4
  %v7_e700 = icmp eq i32 %v2_e6fc, 4
  br i1 %v7_e700, label %dec_label_pc_e304.backedge, label %bb42

bb42:                                             ; preds = %dec_label_pc_e6fc
  %v8_e704 = icmp eq i32 %v2_e6fc, 11
  br i1 %v8_e704, label %dec_label_pc_e304.backedge, label %dec_label_pc_e57c

dec_label_pc_e710:                                ; preds = %dec_label_pc_e524
  %v2_e714 = load i32, i32* @global_var_1d870.95, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_e724 = call i32 @function_13290(i32 %v2_e714, i32* nonnull %v4_e688, i32 2, i32 16384)
  br label %dec_label_pc_e304.backedge

dec_label_pc_e72c:                                ; preds = %dec_label_pc_e534
  %v2_e72c = load i32, i32* @global_var_1d870.95, align 4
  %v1_e730 = call i32 @function_12a9c(i32 %v2_e72c)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_e738 = load i32, i32* @r8, align 4
  %v2_e738 = inttoptr i32 %v1_e738 to i32*
  store i32 -1, i32* %v2_e738, align 4
  br label %dec_label_pc_e304.backedge

dec_label_pc_e740:                                ; preds = %dec_label_pc_e574
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v2_e750 = load i32, i32* @global_var_1d870.95, align 4
  %v5_e754 = call i32 @function_13290(i32 %v2_e750, i32* nonnull %v4_e688, i32 2, i32 16384)
  %v3_e758 = load i8*, i8** %stack_var_-38, align 4
  %v4_e758 = ptrtoint i8* %v3_e758 to i32
  %v4_e75c = urem i32 %v4_e540, 256
  %v4_e760 = mul i32 %v4_e758, 256
  %v5_e760 = or i32 %v4_e760, %v4_e75c
  store i32 %v5_e760, i32* %r2.global-to-local, align 4
  %v3_e768 = sdiv i32 %v4_e760, 256
  store i32 %v3_e768, i32* @lr, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v2_e774 = load i32, i32* @global_var_1d870.95, align 4
  %v6_e77c = inttoptr i32 %v5_e760 to i8*
  store i8* %v6_e77c, i8** %stack_var_-38, align 4
  %v8_e780 = call i32 @function_13290(i32 %v2_e774, i32* nonnull %stack_var_-1532, i32 %v5_e760, i32 16384)
  %v3_e784 = load i8*, i8** %stack_var_-38, align 4
  %v4_e784 = ptrtoint i8* %v3_e784 to i32
  store i32 %v4_e784, i32* %r2.global-to-local, align 4
  %v4_e788 = urem i32 %v3_e768, 256
  store i32 %v4_e788, i32* %r3.global-to-local, align 4
  %v6_e78c = mul nuw nsw i32 %v4_e788, 256
  %v7_e78c = or i32 %v4_e784, %v6_e78c
  %v9_e78c = icmp eq i32 %v7_e78c, 0
  br i1 %v9_e78c, label %dec_label_pc_e304.backedge, label %dec_label_pc_e794

dec_label_pc_e794:                                ; preds = %dec_label_pc_e740
  %v7_e798 = call i32 @function_8320(i32* nonnull %stack_var_-1532, i32 %v7_e78c, i32 %v4_e784, i32 %v4_e788)
  br label %dec_label_pc_e304.backedge

; uselistorder directives
  uselistorder i32 %v4_e788, { 2, 0, 1 }
  uselistorder i32 %v4_e784, { 1, 0, 2 }
  uselistorder i32 %v3_e768, { 1, 0 }
  uselistorder i32 %v5_e760, { 1, 0, 2 }
  uselistorder i32 %v4_e760, { 1, 0 }
  uselistorder i32 %v3_e5ac, { 3, 2, 1, 0 }
  uselistorder i32 %v9_e568, { 1, 0 }
  uselistorder i32 %v4_e53c, { 2, 3, 0, 1 }
  uselistorder i32 %v5_e510, { 1, 0 }
  uselistorder i32 %v2_e4b0, { 6, 3, 2, 0, 1, 5, 4 }
  uselistorder i32 %v5_e3e8, { 2, 3, 1, 0 }
  uselistorder i32 %v2_e334, { 2, 1, 0 }
  uselistorder i32 %v1_e328, { 1, 2, 0 }
  uselistorder i32 %v1_e310, { 1, 2, 0 }
  uselistorder i32* %v4_e688, { 3, 2, 0, 4, 1 }
  uselistorder i32 %v2_e300, { 1, 0, 2 }
  uselistorder i32 %v2_e2fc, { 1, 0, 2 }
  uselistorder i32 %v2_e19c, { 0, 1, 7, 2, 3, 4, 5, 6, 8 }
  uselistorder i32 %v2_e18c, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %v2_e0ac, { 1, 0, 3, 2, 4 }
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder i32* %stack_var_-124, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-52, { 1, 0, 2 }
  uselistorder i8** %stack_var_-38, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %stack_var_-44, { 1, 0, 2, 3 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 22, 30, 31, 32, 41, 42, 36, 37, 33, 43, 44, 34, 35, 38, 39, 40 }
  uselistorder i32 16386, { 0, 2, 1, 3 }
  uselistorder i32 (i32)* @function_13e9c, { 8, 7, 6, 5, 1, 0, 4, 3, 2 }
  uselistorder i8* bitcast (i8** @global_var_1d9ec.97 to i8*), { 0, 1, 3, 2 }
  uselistorder i8** @global_var_1d9ec.97, { 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_1d9ec.97 to i32), { 2, 1, 0 }
  uselistorder i32* @global_var_1d870.95, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 11, 12, 13, 14, 16, 15, 17, 18 }
  uselistorder i32 (i32)* @function_dfb4, { 1, 0 }
  uselistorder i32 (i32)* @function_d760, { 1, 0 }
  uselistorder i32 (i32)* @function_8650, { 1, 0 }
  uselistorder i32 (i8*, i32)* @function_121c0, { 0, 1, 17, 18, 19, 20, 21, 22, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i32 (i32, i32)* @function_e880, { 2, 1, 0 }
  uselistorder i32* @global_var_1d874.72, { 2, 3, 0, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_df60.70 to i32), { 0, 2, 1 }
  uselistorder i8** @global_var_1da88.76, { 0, 2, 1 }
  uselistorder i32 (i32, i32)* @function_133f4, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_e304.backedge, { 6, 12, 5, 4, 11, 13, 3, 10, 2, 1, 9, 8, 0, 7 }
  uselistorder label %dec_label_pc_e420, { 2, 1, 0 }
  uselistorder label %bb40, { 1, 0 }
  uselistorder label %dec_label_pc_e374, { 2, 0, 1 }
  uselistorder label %dec_label_pc_e364, { 1, 0 }
  uselistorder label %dec_label_pc_e324.dec_label_pc_e324_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_e30c.dec_label_pc_e30c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_e158, { 2, 0, 1 }
}

define i32 @function_e7cc() local_unnamed_addr {
dec_label_pc_e7cc:
  %v2_e7d8 = load i32, i32* @global_var_1d9f0.103, align 4
  %v2_e7dc = load i32, i32* @global_var_1d9fc.105, align 4
  store i32 ptrtoint (i32* @global_var_1d9f4.107 to i32), i32* @lr, align 4
  %v4_e7e8 = mul i32 %v2_e7d8, 2048
  %v5_e7e8 = xor i32 %v4_e7e8, %v2_e7d8
  %v4_e7ec = udiv i32 %v2_e7dc, 524288
  %v5_e7ec = xor i32 %v4_e7ec, %v2_e7dc
  %v2_e7f0 = load i32, i32* @global_var_1d9f4.107, align 4
  %v2_e7f4 = load i32, i32* @global_var_1d9f8.109, align 4
  %v2_e7f8 = xor i32 %v5_e7ec, %v5_e7e8
  %v4_e7fc = udiv i32 %v5_e7e8, 256
  %v5_e7fc = xor i32 %v2_e7f8, %v4_e7fc
  store i32 %v2_e7f0, i32* @global_var_1d9f0.103, align 4
  store i32 %v2_e7f4, i32* @global_var_1d9f4.107, align 4
  store i32 %v2_e7dc, i32* @global_var_1d9f8.109, align 4
  store i32 %v5_e7fc, i32* @global_var_1d9fc.105, align 4
  ret i32 %v5_e7fc

; uselistorder directives
  uselistorder i32 %v2_e7dc, { 2, 1, 0 }
  uselistorder i32 %v2_e7d8, { 1, 0 }
}

define i32 @function_e824(i32 %arg1) local_unnamed_addr {
dec_label_pc_e824:
  %stack_var_-12 = alloca i32, align 4
  %v3_e824 = load i32, i32* @r4, align 4
  store i32 %v3_e824, i32* %stack_var_-12, align 4
  %v2_e82c = call i32 @function_12d6c(i32* null)
  store i32 %v2_e82c, i32* @global_var_1d9f0.103, align 4
  %v0_e838 = call i32 @function_12af4()
  store i32 %v0_e838, i32* @r4, align 4
  %v0_e840 = call i32 @function_12b20()
  %v0_e848 = load i32, i32* @r4, align 4
  %v2_e848 = xor i32 %v0_e848, %v0_e840
  store i32 %v2_e848, i32* @r4, align 4
  store i32 %v2_e848, i32* @global_var_1d9f4.107, align 4
  %v1_e850 = call i32 @function_1307c(i32 %v0_e840)
  %v2_e854 = load i32, i32* @global_var_1d9f4.107, align 4
  %v2_e860 = xor i32 %v2_e854, %v1_e850
  store i32 %v2_e860, i32* @global_var_1d9fc.105, align 4
  store i32 %v1_e850, i32* @global_var_1d9f8.109, align 4
  %v2_e86c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_e86c, i32* @r4, align 4
  ret i32 %v1_e850

; uselistorder directives
  uselistorder i32 %v1_e850, { 1, 2, 0 }
  uselistorder i32 %v0_e840, { 1, 0 }
  uselistorder i32 ()* @function_12b20, { 2, 0, 1 }
}

define i32 @function_e880(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e880:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_e880 = load i32, i32* @r4, align 4
  store i32 %v3_e880, i32* %stack_var_-36, align 4
  %v6_e880 = load i32, i32* @r5, align 4
  %v9_e880 = load i32, i32* @r6, align 4
  %v12_e880 = load i32, i32* @r7, align 4
  %v28_e880 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %arg1, i32* %fp.global-to-local, align 4
  %v2_e888 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %arg2, i32* %sb.global-to-local, align 4
  %v1_e894 = call i32 @function_11bcc(i32 28)
  %v3_e8a0 = call i32 @function_11ae8(i32 28, i32* null)
  %v2_e8ac = inttoptr i32 %v3_e8a0 to i8*
  %v3_e8ac = call i32 @function_13170(i32 %v2_e888, i8* %v2_e8ac)
  %v2_e8b0 = icmp eq i32 %arg2, 0
  br i1 %v2_e8b0, label %dec_label_pc_e92c, label %dec_label_pc_e8b8

dec_label_pc_e8b8:                                ; preds = %dec_label_pc_e880
  store i32 ptrtoint (i32* @global_var_1d9f0.103 to i32), i32* %sl.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1d9f4.107 to i32), i32* %r8.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1d9f8.109 to i32), i32* @r7, align 4
  store i32 ptrtoint (i32* @global_var_1d9fc.105 to i32), i32* @r6, align 4
  store i32 0, i32* @r5, align 4
  %v1_e900 = bitcast i32* %stack_var_-68 to i8*
  br label %dec_label_pc_e8cc

dec_label_pc_e8cc:                                ; preds = %dec_label_pc_e8cc.dec_label_pc_e8cc_crit_edge, %dec_label_pc_e8b8
  %v1_e8f0 = phi i32 [ %v1_e8f0.pre, %dec_label_pc_e8cc.dec_label_pc_e8cc_crit_edge ], [ ptrtoint (i32* @global_var_1d9f0.103 to i32), %dec_label_pc_e8b8 ]
  %v2_e8cc = load i32, i32* @global_var_1d9fc.105, align 4
  store i32 %v2_e8cc, i32* %r2.global-to-local, align 4
  %v2_e8d0 = load i32, i32* @global_var_1d9f0.103, align 4
  %v4_e8d4 = udiv i32 %v2_e8cc, 524288
  %v5_e8d4 = xor i32 %v4_e8d4, %v2_e8cc
  %v4_e8d8 = mul i32 %v2_e8d0, 2048
  %v5_e8d8 = xor i32 %v4_e8d8, %v2_e8d0
  %v2_e8dc = xor i32 %v5_e8d4, %v5_e8d8
  %v2_e8e0 = load i32, i32* @global_var_1d9f4.107, align 4
  %v2_e8e4 = load i32, i32* @global_var_1d9f8.109, align 4
  store i32 %v2_e8e4, i32* %ip.global-to-local, align 4
  %v4_e8e8 = udiv i32 %v5_e8d8, 256
  %v5_e8e8 = xor i32 %v2_e8dc, %v4_e8e8
  store i32 %v5_e8e8, i32* @r4, align 4
  %v2_e8f0 = inttoptr i32 %v1_e8f0 to i32*
  store i32 %v2_e8e0, i32* %v2_e8f0, align 4
  %v0_e8f4 = load i32, i32* %ip.global-to-local, align 4
  %v1_e8f4 = load i32, i32* %r8.global-to-local, align 4
  %v2_e8f4 = inttoptr i32 %v1_e8f4 to i32*
  store i32 %v0_e8f4, i32* %v2_e8f4, align 4
  %v0_e8f8 = load i32, i32* %r2.global-to-local, align 4
  %v1_e8f8 = load i32, i32* @r7, align 4
  %v2_e8f8 = inttoptr i32 %v1_e8f8 to i32*
  store i32 %v0_e8f8, i32* %v2_e8f8, align 4
  %v0_e8fc = load i32, i32* @r4, align 4
  %v1_e8fc = load i32, i32* @r6, align 4
  %v2_e8fc = inttoptr i32 %v1_e8fc to i32*
  store i32 %v0_e8fc, i32* %v2_e8fc, align 4
  %v2_e900 = call i32 @function_12198(i8* %v1_e900)
  %v0_e908 = load i32, i32* @r4, align 4
  %v2_e90c = call i32 @function_12824(i32 %v0_e908, i32 %v2_e900)
  %v2_e914 = add i32 %v2_e90c, %v28_e880
  %v1_e918 = add i32 %v2_e914, -32
  %v2_e918 = inttoptr i32 %v1_e918 to i8*
  %v3_e918 = load i8, i8* %v2_e918, align 1
  %v2_e91c = load i32, i32* @r5, align 4
  %v3_e91c = load i32, i32* %fp.global-to-local, align 4
  %v4_e91c = add i32 %v3_e91c, %v2_e91c
  %v5_e91c = inttoptr i32 %v4_e91c to i8*
  store i8 %v3_e918, i8* %v5_e91c, align 1
  %v0_e920 = load i32, i32* @r5, align 4
  %v1_e920 = add i32 %v0_e920, 1
  store i32 %v1_e920, i32* @r5, align 4
  %v1_e924 = load i32, i32* %sb.global-to-local, align 4
  %v9_e924 = icmp eq i32 %v1_e920, %v1_e924
  br i1 %v9_e924, label %dec_label_pc_e92c, label %dec_label_pc_e8cc.dec_label_pc_e8cc_crit_edge

dec_label_pc_e8cc.dec_label_pc_e8cc_crit_edge:    ; preds = %dec_label_pc_e8cc
  %v1_e8f0.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_e8cc

dec_label_pc_e92c:                                ; preds = %dec_label_pc_e8cc, %dec_label_pc_e880
  %v1_e930 = call i32 @function_11b14(i32 28)
  %v2_e938 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_e938, i32* @r4, align 4
  store i32 %v6_e880, i32* @r5, align 4
  store i32 %v9_e880, i32* @r6, align 4
  store i32 %v12_e880, i32* @r7, align 4
  ret i32 %v1_e930

; uselistorder directives
  uselistorder i32 %v2_e8d0, { 1, 0 }
  uselistorder i32 %v2_e8cc, { 1, 0, 2 }
  uselistorder i32* %stack_var_-36, { 0, 2, 1 }
}

define i32 @function_e94c(i8* %arg1) local_unnamed_addr {
dec_label_pc_e94c:
  %fp.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-36 = alloca i32, align 4
  %v3_e94c = load i32, i32* @r4, align 4
  store i32 %v3_e94c, i32* %stack_var_-36, align 4
  %v9_e94c = load i32, i32* @r6, align 4
  %v12_e94c = load i32, i32* @r7, align 4
  %v15_e94c = load i32, i32* @r8, align 4
  %v18_e94c = load i32, i32* @sb, align 4
  %v21_e94c = load i32, i32* @sl, align 4
  %v24_e94c = load i32, i32* @fp, align 4
  %v0_e950 = load i32, i32* @r1, align 4
  store i32 %v0_e950, i32* %r4.global-to-local, align 4
  store i32 %tmp, i32* %r5.global-to-local, align 4
  %tmp20 = icmp slt i32 %v0_e950, 1
  br i1 %tmp20, label %bb, label %bb21

bb:                                               ; preds = %dec_label_pc_e94c
  store i32 %v3_e94c, i32* @r4, align 4
  ret i32 %tmp

bb21:                                             ; preds = %dec_label_pc_e94c
  store i32 ptrtoint (i32* @global_var_1d9fc.105 to i32), i32* %fp.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1d9f8.109 to i32), i32* %sb.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1d9f4.107 to i32), i32* %sl.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1d9f0.103 to i32), i32* %r8.global-to-local, align 4
  %v2_e96c = load i32, i32* @global_var_1d9fc.105, align 4
  store i32 %v2_e96c, i32* @lr, align 4
  %v2_e970 = load i32, i32* @global_var_1d9f8.109, align 4
  store i32 %v2_e970, i32* %r7.global-to-local, align 4
  %v2_e974 = load i32, i32* @global_var_1d9f4.107, align 4
  store i32 %v2_e974, i32* %r6.global-to-local, align 4
  %v2_e978 = load i32, i32* @global_var_1d9f0.103, align 4
  br label %dec_label_pc_e9a4

dec_label_pc_e980:                                ; preds = %dec_label_pc_e9d0
  %v3_e9d8 = sdiv i32 %v5_e9bc, 256
  %v1_e980 = trunc i32 %v3_e9d8 to i8
  %v3_e980 = add i32 %v9_e9c4, 1
  %v4_e980 = inttoptr i32 %v3_e980 to i8*
  store i8 %v1_e980, i8* %v4_e980, align 1
  %v0_e984 = load i32, i32* %r3.global-to-local, align 4
  %v1_e984 = trunc i32 %v0_e984 to i8
  %v2_e984 = load i32, i32* %r5.global-to-local, align 4
  %v3_e984 = inttoptr i32 %v2_e984 to i8*
  store i8 %v1_e984, i8* %v3_e984, align 1
  %v0_e988 = load i32, i32* %r5.global-to-local, align 4
  %v1_e988 = add i32 %v0_e988, 2
  store i32 %v1_e988, i32* %r5.global-to-local, align 4
  %v0_e98c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_e98c

dec_label_pc_e98c:                                ; preds = %.thread, %dec_label_pc_e980
  %v0_e98c = phi i32 [ %v9_e9c8, %.thread ], [ %v0_e98c.pre, %dec_label_pc_e980 ]
  %v2_e9807 = phi i32 [ %v12_e9c4, %.thread ], [ %v1_e988, %dec_label_pc_e980 ]
  %tmp22 = icmp slt i32 %v0_e98c, 1
  br i1 %tmp22, label %dec_label_pc_ea0c, label %dec_label_pc_e998

dec_label_pc_e998:                                ; preds = %dec_label_pc_e98c
  %v0_e990 = load i32, i32* %r6.global-to-local, align 4
  %v0_e998 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_e998, i32* %r6.global-to-local, align 4
  %v0_e99c = load i32, i32* @lr, align 4
  store i32 %v0_e99c, i32* %r7.global-to-local, align 4
  %v0_e9a0 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_e9a0, i32* @lr, align 4
  br label %dec_label_pc_e9a4

dec_label_pc_e9a4:                                ; preds = %bb21, %dec_label_pc_e998
  %v0_e9f4 = phi i32 [ %v2_e974, %bb21 ], [ %v0_e998, %dec_label_pc_e998 ]
  %v9_e9c4 = phi i32 [ %tmp, %bb21 ], [ %v2_e9807, %dec_label_pc_e998 ]
  %v0_e9dc = phi i32 [ %v0_e950, %bb21 ], [ %v0_e98c, %dec_label_pc_e998 ]
  %v0_e9e8 = phi i32 [ %v2_e96c, %bb21 ], [ %v0_e9a0, %dec_label_pc_e998 ]
  %v0_e9e4 = phi i32 [ %v2_e978, %bb21 ], [ %v0_e990, %dec_label_pc_e998 ]
  %v4_e9a4 = mul i32 %v0_e9e4, 2048
  %v5_e9a4 = xor i32 %v4_e9a4, %v0_e9e4
  %v4_e9a8 = udiv i32 %v0_e9e8, 524288
  %v5_e9a8 = xor i32 %v4_e9a8, %v0_e9e8
  %v2_e9ac = xor i32 %v5_e9a8, %v5_e9a4
  %v4_e9bc = udiv i32 %v5_e9a4, 256
  %v5_e9bc = xor i32 %v4_e9bc, %v2_e9ac
  store i32 %v5_e9bc, i32* %r3.global-to-local, align 4
  %v7_e9c4 = icmp sgt i32 %v0_e9dc, 3
  br i1 %v7_e9c4, label %.thread, label %dec_label_pc_e9d0

.thread:                                          ; preds = %dec_label_pc_e9a4
  %v10_e9c4 = inttoptr i32 %v9_e9c4 to i32*
  store i32 %v5_e9bc, i32* %v10_e9c4, align 4
  %v11_e9c4 = load i32, i32* %r5.global-to-local, align 4
  %v12_e9c4 = add i32 %v11_e9c4, 4
  store i32 %v12_e9c4, i32* %r5.global-to-local, align 4
  %v8_e9c8 = load i32, i32* %r4.global-to-local, align 4
  %v9_e9c8 = add i32 %v8_e9c8, -4
  store i32 %v9_e9c8, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_e98c

dec_label_pc_e9d0:                                ; preds = %dec_label_pc_e9a4
  store i32 %v5_e9bc, i32* %r3.global-to-local, align 4
  %v7_e9d4 = icmp eq i32 %v0_e9dc, 1
  %v1_e9dc = add i32 %v0_e9dc, -2
  store i32 %v1_e9dc, i32* %r4.global-to-local, align 4
  br i1 %v7_e9d4, label %dec_label_pc_e9e4, label %dec_label_pc_e980

dec_label_pc_e9e4:                                ; preds = %dec_label_pc_e9d0
  store i32 %v5_e9bc, i32* %r3.global-to-local, align 4
  %v1_e9f4 = load i32, i32* %r8.global-to-local, align 4
  %v2_e9f4 = inttoptr i32 %v1_e9f4 to i32*
  store i32 %v0_e9f4, i32* %v2_e9f4, align 4
  %v0_e9f8 = load i32, i32* %r7.global-to-local, align 4
  %v1_e9f8 = load i32, i32* %sl.global-to-local, align 4
  %v2_e9f8 = inttoptr i32 %v1_e9f8 to i32*
  store i32 %v0_e9f8, i32* %v2_e9f8, align 4
  %v0_e9fc = load i32, i32* @lr, align 4
  %v1_e9fc = load i32, i32* %sb.global-to-local, align 4
  %v2_e9fc = inttoptr i32 %v1_e9fc to i32*
  store i32 %v0_e9fc, i32* %v2_e9fc, align 4
  %v0_ea00 = load i32, i32* %r3.global-to-local, align 4
  %v1_ea00 = load i32, i32* %fp.global-to-local, align 4
  %v2_ea00 = inttoptr i32 %v1_ea00 to i32*
  store i32 %v0_ea00, i32* %v2_ea00, align 4
  %v0_ea04 = load i32, i32* %r3.global-to-local, align 4
  %v1_ea04 = trunc i32 %v0_ea04 to i8
  %v2_ea04 = load i32, i32* %r5.global-to-local, align 4
  %v3_ea04 = inttoptr i32 %v2_ea04 to i8*
  store i8 %v1_ea04, i8* %v3_ea04, align 1
  %v2_ea08 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_ea08, i32* @r4, align 4
  store i32 %v9_e94c, i32* @r6, align 4
  store i32 %v12_e94c, i32* @r7, align 4
  store i32 %v15_e94c, i32* @r8, align 4
  store i32 %v18_e94c, i32* @sb, align 4
  store i32 %v21_e94c, i32* @sl, align 4
  store i32 %v24_e94c, i32* @fp, align 4
  ret i32 %v5_e9a4

dec_label_pc_ea0c:                                ; preds = %dec_label_pc_e98c
  %v0_ea0c = load i32, i32* %r3.global-to-local, align 4
  %v1_ea0c = load i32, i32* %fp.global-to-local, align 4
  %v2_ea0c = inttoptr i32 %v1_ea0c to i32*
  store i32 %v0_ea0c, i32* %v2_ea0c, align 4
  %v0_ea10 = load i32, i32* @lr, align 4
  %v1_ea10 = load i32, i32* %sb.global-to-local, align 4
  %v2_ea10 = inttoptr i32 %v1_ea10 to i32*
  store i32 %v0_ea10, i32* %v2_ea10, align 4
  %v0_ea14 = load i32, i32* %r7.global-to-local, align 4
  %v1_ea14 = load i32, i32* %sl.global-to-local, align 4
  %v2_ea14 = inttoptr i32 %v1_ea14 to i32*
  store i32 %v0_ea14, i32* %v2_ea14, align 4
  %v0_ea18 = load i32, i32* %r6.global-to-local, align 4
  %v1_ea18 = load i32, i32* %r8.global-to-local, align 4
  %v2_ea18 = inttoptr i32 %v1_ea18 to i32*
  store i32 %v0_ea18, i32* %v2_ea18, align 4
  %v2_ea1c = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_ea1c, i32* @r4, align 4
  store i32 %v9_e94c, i32* @r6, align 4
  store i32 %v12_e94c, i32* @r7, align 4
  store i32 %v15_e94c, i32* @r8, align 4
  store i32 %v18_e94c, i32* @sb, align 4
  store i32 %v21_e94c, i32* @sl, align 4
  store i32 %v24_e94c, i32* @fp, align 4
  ret i32 %v5_e9a4

; uselistorder directives
  uselistorder i32 %v9_e9c8, { 1, 0 }
  uselistorder i32 %v12_e9c4, { 1, 0 }
  uselistorder i32 %v5_e9bc, { 1, 3, 2, 4, 0 }
  uselistorder i32 %v5_e9a4, { 1, 2, 0, 3 }
  uselistorder i32 %v0_e9e4, { 1, 0 }
  uselistorder i32 %v0_e9e8, { 1, 0 }
  uselistorder i32 %v0_e98c, { 1, 0 }
  uselistorder i32 %v24_e94c, { 1, 0 }
  uselistorder i32 %v21_e94c, { 1, 0 }
  uselistorder i32 %v18_e94c, { 1, 0 }
  uselistorder i32 %v15_e94c, { 1, 0 }
  uselistorder i32 %v12_e94c, { 1, 0 }
  uselistorder i32 %v9_e94c, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 5, 0, 3, 4, 6 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 0, 4 }
  uselistorder i32* %r3.global-to-local, { 5, 0, 1, 2, 4, 7, 6, 3 }
  uselistorder i32* @global_var_1d9f0.103, { 2, 3, 5, 1, 0, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_1d9f0.103 to i32), { 1, 0, 2 }
  uselistorder i32* @global_var_1d9f4.107, { 2, 3, 4, 1, 0, 5, 6 }
  uselistorder i32* @global_var_1d9f8.109, { 2, 3, 5, 1, 0, 4 }
  uselistorder i32* @global_var_1d9fc.105, { 2, 3, 5, 1, 0, 4 }
  uselistorder i32* @sl, { 79, 80, 81, 2, 0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 82, 83, 84, 85, 35, 36, 37, 38, 39, 40 }
  uselistorder i32* @sb, { 71, 72, 73, 1, 2, 3, 4, 5, 6, 7, 10, 8, 9, 0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 76, 77, 78, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46 }
  uselistorder label %dec_label_pc_e9a4, { 1, 0 }
}

define i32 @function_ea30() local_unnamed_addr {
dec_label_pc_ea30:
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_ea30 = load i32, i32* @r4, align 4
  store i32 %v3_ea30, i32* %stack_var_-16, align 4
  %v0_ea34 = load i32, i32* @r0, align 4
  store i32 %v0_ea34, i32* %r5.global-to-local, align 4
  %v1_ea38 = add i32 %v0_ea34, 4
  %v2_ea38 = inttoptr i32 %v1_ea38 to i32*
  %v3_ea38 = load i32, i32* %v2_ea38, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 0, i32* %stack_var_-32, align 4
  store i32 59996, i32* @lr, align 4
  %v1_ea58 = icmp ne i32 %v3_ea38, -1
  call void @__pseudo_cond_branch(i1 %v1_ea58, i32 ptrtoint (i32* @global_var_12a9c.98 to i32))
  %v3_ea68 = call i32 @function_13380(i32 2, i32 1, i32 0)
  store i32 %v3_ea68, i32* %r3.global-to-local, align 4
  %v7_ea70 = icmp eq i32 %v3_ea68, -1
  store i32 256, i32* @r1, align 4
  %v0_ea78 = load i32, i32* %r5.global-to-local, align 4
  %v1_ea78 = add i32 %v0_ea78, 28
  store i32 %v1_ea78, i32* @r0, align 4
  %v2_ea7c = add i32 %v0_ea78, 4
  %v3_ea7c = inttoptr i32 %v2_ea7c to i32*
  store i32 %v3_ea68, i32* %v3_ea7c, align 4
  br i1 %v7_ea70, label %dec_label_pc_ea30.dec_label_pc_eaf8_crit_edge, label %dec_label_pc_ea84

dec_label_pc_ea30.dec_label_pc_eaf8_crit_edge:    ; preds = %dec_label_pc_ea30
  %v14_eafc.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_eaf8

dec_label_pc_ea84:                                ; preds = %dec_label_pc_ea30
  %v0_ea84 = load i32, i32* %r6.global-to-local, align 4
  %v1_ea84 = load i32, i32* %r5.global-to-local, align 4
  %v2_ea84 = add i32 %v1_ea84, 24
  %v3_ea84 = inttoptr i32 %v2_ea84 to i32*
  store i32 %v0_ea84, i32* %v3_ea84, align 4
  %v0_ea88 = call i32 @function_12238()
  %v0_ea8c = load i32, i32* %r5.global-to-local, align 4
  %v1_ea8c = add i32 %v0_ea8c, 4
  %v2_ea8c = inttoptr i32 %v1_ea8c to i32*
  %v3_ea8c = load i32, i32* %v2_ea8c, align 4
  store i32 %v3_ea8c, i32* @r4, align 4
  %v0_ea94 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_ea94, i32* @r2, align 4
  %v2_ea9c = call i32 @function_129d8(i32 %v3_ea8c, i32 3)
  %v1_eaa4 = or i32 %v2_ea9c, 2048
  store i32 %v1_eaa4, i32* @r2, align 4
  %v0_eaa8 = load i32, i32* @r4, align 4
  %v2_eaac = call i32 @function_129d8(i32 %v0_eaa8, i32 4)
  store i32 ptrtoint (i32* @global_var_1da34.123 to i32), i32* %r3.global-to-local, align 4
  %v0_eab4 = load i32, i32* %r5.global-to-local, align 4
  %v1_eab4 = add i32 %v0_eab4, 20
  %v2_eab4 = inttoptr i32 %v1_eab4 to i32*
  %v3_eab4 = load i32, i32* %v2_eab4, align 4
  store i32 %v3_eab4, i32* @r4, align 4
  %v2_eab8 = load i32, i32* @global_var_1da34.123, align 4
  %v1_eabc = add i32 %v0_eab4, 16
  %v2_eabc = inttoptr i32 %v1_eabc to i32*
  %v3_eabc = load i32, i32* %v2_eabc, align 4
  store i32 %v3_eabc, i32* @lr, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_eac4 = add i32 %v0_eab4, 8
  %v3_eac4 = inttoptr i32 %v2_eac4 to i32*
  store i32 %v2_eab8, i32* %v3_eac4, align 4
  %v0_eac8 = load i32, i32* %r3.global-to-local, align 4
  %v1_eac8 = load i32, i32* %r5.global-to-local, align 4
  %v2_eac8 = add i32 %v1_eac8, 12
  %v3_eac8 = inttoptr i32 %v2_eac8 to i32*
  store i32 %v0_eac8, i32* %v3_eac8, align 4
  %v0_ead0 = load i32, i32* %r5.global-to-local, align 4
  %v1_ead0 = add i32 %v0_ead0, 4
  %v2_ead0 = inttoptr i32 %v1_ead0 to i32*
  %v3_ead0 = load i32, i32* %v2_ead0, align 4
  %v0_ead4 = load i32, i32* %r3.global-to-local, align 4
  %v2_ead4 = mul i32 %v0_ead4, 2
  store i32 %v2_ead4, i32* %r3.global-to-local, align 4
  store i32 %v2_ead4, i32* %stack_var_-32, align 4
  %v3_eaf4 = bitcast i32* %stack_var_-32 to %sockaddr*
  %v4_eaf4 = call i32 @function_131dc(i32 %v3_ead0, %sockaddr* %v3_eaf4, i32 16)
  br label %dec_label_pc_eaf8

dec_label_pc_eaf8:                                ; preds = %dec_label_pc_ea30.dec_label_pc_eaf8_crit_edge, %dec_label_pc_ea84
  %v14_eafc = phi i32 [ %v14_eafc.pre, %dec_label_pc_ea30.dec_label_pc_eaf8_crit_edge ], [ %v4_eaf4, %dec_label_pc_ea84 ]
  %v2_eafc = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_eafc, i32* @r4, align 4
  ret i32 %v14_eafc

; uselistorder directives
  uselistorder i32 %v2_ead4, { 1, 0 }
  uselistorder i32 %v3_ea68, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 5, 4, 3, 6 }
  uselistorder i32 ()* @function_12238, { 7, 6, 5, 4, 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_eaf8, { 1, 0 }
}

define i32 @function_eb04(i32 %arg1, i8 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_eb04:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-21 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-48 = alloca i8, align 1
  %v3_eb04 = load i32, i32* @r4, align 4
  %v6_eb04 = load i32, i32* @r5, align 4
  %v9_eb04 = load i32, i32* @r6, align 4
  %v12_eb04 = load i32, i32* @r7, align 4
  store i32 %arg3, i32* @r6, align 4
  store i8 %arg2, i8* %stack_var_-48, align 1
  store i32 %arg1, i32* %stack_var_-44, align 4
  %v0_eb20 = call i32 @function_12ac8()
  %v7_eb24 = icmp eq i32 %v0_eb20, -1
  %. = zext i1 %v7_eb24 to i32
  %tmp22 = icmp slt i32 %v0_eb20, 1
  %storemerge5 = select i1 %tmp22, i32 %., i32 1
  store i32 %storemerge5, i32* @r4, align 4
  store i32 2, i32* @r7, align 4
  %v2_eb40 = icmp eq i32 %storemerge5, 0
  br i1 %v2_eb40, label %dec_label_pc_eb5c, label %dec_label_pc_eb54

dec_label_pc_eb54:                                ; preds = %dec_label_pc_eb04, %dec_label_pc_ebc8
  %v17_eb58 = phi i32 [ 2, %dec_label_pc_eb04 ], [ %v1_ec5c, %dec_label_pc_ebc8 ]
  store i32 %v3_eb04, i32* @r4, align 4
  store i32 %v6_eb04, i32* @r5, align 4
  store i32 %v9_eb04, i32* @r6, align 4
  store i32 %v12_eb04, i32* @r7, align 4
  ret i32 %v17_eb58

dec_label_pc_eb5c:                                ; preds = %dec_label_pc_eb04
  %v3_eb5c = call i32 @function_13380(i32 2, i32 1, i32 0)
  store i32 %v3_eb5c, i32* @r5, align 4
  %v0_eb64 = load i32, i32* @r7, align 4
  %v1_eb68 = call i32 @function_11bcc(i32 %v0_eb64)
  store i32 ptrtoint ([11 x i8]* @global_var_15308.74 to i32), i32* @r0, align 4
  %v0_eb70 = load i32, i32* @r7, align 4
  store i32 %v0_eb70, i32* %stack_var_-40, align 4
  %v2_eb78 = call i32 @function_1318c(i32 ptrtoint ([11 x i8]* @global_var_15308.74 to i32))
  %v0_eb7c = load i32, i32* @r4, align 4
  %v0_eb84 = load i32, i32* @r7, align 4
  %v2_eb88 = inttoptr i32 %v0_eb7c to i32*
  %v3_eb88 = call i32 @function_11ae8(i32 %v0_eb84, i32* %v2_eb88)
  %v0_eb9c = load i32, i32* @r7, align 4
  %v1_eba8 = call i32 @function_11b14(i32 %v0_eb9c)
  %v0_ebac = load i32, i32* @r5, align 4
  %v3_ebb8 = bitcast i32* %stack_var_-40 to %sockaddr*
  %v4_ebb8 = call i32 @function_131dc(i32 %v0_ebac, %sockaddr* %v3_ebb8, i32 16)
  %v7_ebbc = icmp eq i32 %v4_ebb8, -1
  %v0_ebc0 = load i32, i32* @r5, align 4
  br i1 %v7_ebbc, label %dec_label_pc_ec64, label %dec_label_pc_ebc8

dec_label_pc_ebc8:                                ; preds = %dec_label_pc_eb5c, %dec_label_pc_ec64
  %v0_ebd8 = phi i32 [ %v0_ebc0, %dec_label_pc_eb5c ], [ %v0_ebd8.pre, %dec_label_pc_ec64 ]
  %v0_ebcc = load i32, i32* @r4, align 4
  store i32 %v0_ebcc, i32* %stack_var_-21, align 4
  %v6_ebdc = call i32 @function_132f0(i32 %v0_ebd8, i32* nonnull %stack_var_-21, i32 1, i32 16384)
  %v0_ebe4 = load i32, i32* @r5, align 4
  %v5_ebf0 = call i32 @function_132f0(i32 %v0_ebe4, i32* nonnull %stack_var_-44, i32 4, i32 16384)
  %v0_ebf4 = load i32, i32* @r7, align 4
  %v0_ebfc = load i32, i32* @r5, align 4
  %v4_ec04 = bitcast i8* %stack_var_-48 to i32*
  %v5_ec04 = call i32 @function_132f0(i32 %v0_ebfc, i32* %v4_ec04, i32 %v0_ebf4, i32 16384)
  %v0_ec08 = load i32, i32* @r6, align 4
  %v1_ec08 = add i32 %v0_ec08, 12
  %v0_ec0c = load i32, i32* @r5, align 4
  %v4_ec18 = inttoptr i32 %v1_ec08 to i32*
  %v5_ec18 = call i32 @function_132f0(i32 %v0_ec0c, i32* %v4_ec18, i32 1, i32 16384)
  %v0_ec1c = load i32, i32* @r6, align 4
  %v1_ec1c = inttoptr i32 %v0_ec1c to i32*
  %v2_ec1c = load i32, i32* %v1_ec1c, align 4
  %v1_ec20 = add i32 %v0_ec1c, 12
  %v2_ec20 = inttoptr i32 %v1_ec20 to i8*
  %v3_ec20 = load i8, i8* %v2_ec20, align 1
  %v4_ec20 = zext i8 %v3_ec20 to i32
  %v0_ec24 = load i32, i32* @r5, align 4
  %v4_ec2c = inttoptr i32 %v2_ec1c to i32*
  %v5_ec2c = call i32 @function_132f0(i32 %v0_ec24, i32* %v4_ec2c, i32 %v4_ec20, i32 16384)
  %v0_ec30 = load i32, i32* @r6, align 4
  %v1_ec30 = add i32 %v0_ec30, 13
  %v0_ec34 = load i32, i32* @r5, align 4
  %v4_ec40 = inttoptr i32 %v1_ec30 to i32*
  %v5_ec40 = call i32 @function_132f0(i32 %v0_ec34, i32* %v4_ec40, i32 1, i32 16384)
  %v0_ec44 = load i32, i32* @r5, align 4
  %v0_ec48 = load i32, i32* @r6, align 4
  %v1_ec48 = add i32 %v0_ec48, 13
  %v2_ec48 = inttoptr i32 %v1_ec48 to i8*
  %v3_ec48 = load i8, i8* %v2_ec48, align 1
  %v4_ec48 = zext i8 %v3_ec48 to i32
  %v1_ec4c = add i32 %v0_ec48, 4
  %v2_ec4c = inttoptr i32 %v1_ec4c to i32*
  %v3_ec4c = load i32, i32* %v2_ec4c, align 4
  %v4_ec54 = inttoptr i32 %v3_ec4c to i32*
  %v5_ec54 = call i32 @function_132f0(i32 %v0_ec44, i32* %v4_ec54, i32 %v4_ec48, i32 16384)
  %v0_ec58 = load i32, i32* @r5, align 4
  %v1_ec5c = call i32 @function_12a9c(i32 %v0_ec58)
  br label %dec_label_pc_eb54

dec_label_pc_ec64:                                ; preds = %dec_label_pc_eb5c
  %v1_ec64 = call i32 @function_12a9c(i32 %v0_ebc0)
  %v0_ebd8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_ebc8

; uselistorder directives
  uselistorder i32 %v0_ebc0, { 1, 0 }
  uselistorder i32 %storemerge5, { 1, 0 }
  uselistorder i32 %v0_eb20, { 1, 0 }
  uselistorder i32 (i32)* @function_1318c, { 1, 2, 0, 3 }
  uselistorder i32 ptrtoint ([11 x i8]* @global_var_15308.74 to i32), { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_ebc8, { 1, 0 }
  uselistorder label %dec_label_pc_eb54, { 1, 0 }
}

define i32 @function_ec70(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_ec70:
  %fp.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_ec70 = load i32, i32* @r4, align 4
  %v6_ec70 = load i32, i32* @r5, align 4
  %v9_ec70 = load i32, i32* @r6, align 4
  %v12_ec70 = load i32, i32* @r7, align 4
  %v15_ec70 = load i32, i32* @r8, align 4
  store i32 ptrtoint (i32* @global_var_1da00.126 to i32), i32* @r8, align 4
  %v2_ec78 = load i32, i32* @global_var_1da00.126, align 4
  store i32 ptrtoint (i32* @global_var_1da2c.128 to i32), i32* %sb.global-to-local, align 4
  %v3_ec84 = mul i32 %v2_ec78, 16
  store i32 %v3_ec84, i32* %r3.global-to-local, align 4
  %v3_ec8c = urem i32 %arg3, 65536
  store i32 %v3_ec8c, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r5, align 4
  %v2_ec98 = load i32, i32* @global_var_1da2c.128, align 4
  %v1_ec9c = add i32 %v3_ec84, 16
  store i32 %v1_ec9c, i32* %r1.global-to-local, align 4
  store i32 %v3_ec8c, i32* %stack_var_-44, align 4
  %v15_eca4 = call i32 @function_137b4(i32 %v2_ec98, i32 %v1_ec9c, i32 %v3_ec8c, i32 %v3_ec84)
  store i32 %v15_eca4, i32* %sl.global-to-local, align 4
  %v0_ecac = load i32, i32* @r5, align 4
  %v1_ecb0 = load i32, i32* %sb.global-to-local, align 4
  %v2_ecb0 = inttoptr i32 %v1_ecb0 to i32*
  store i32 %v15_eca4, i32* %v2_ecb0, align 4
  %v2_ecb4 = load i32, i32* @global_var_1da00.126, align 4
  store i32 %v2_ecb4, i32* %fp.global-to-local, align 4
  %v1_ecb8 = inttoptr i32 %v0_ecac to i8*
  %v2_ecb8 = call i32 @function_12198(i8* %v1_ecb8)
  %sext = mul i32 %v2_ecb8, 16777216
  %v1_ecbc = sdiv i32 %sext, 16777216
  %v2_ecbc = add nsw i32 %v1_ecbc, 1
  store i32 %v2_ecbc, i32* @r4, align 4
  store i32 %v1_ecbc, i32* @r7, align 4
  %v1_ecc8 = call i32 @function_13518(i32 %v2_ecbc)
  %v0_eccc = load i32, i32* @r5, align 4
  store i32 %v0_eccc, i32* %r1.global-to-local, align 4
  %v0_ecd0 = load i32, i32* @r4, align 4
  store i32 %v0_ecd0, i32* %r2.global-to-local, align 4
  store i32 %v1_ecc8, i32* @r6, align 4
  %v3_ecd8 = call i32 @function_12214(i32 %v1_ecc8, i32 %v0_eccc, i32 %v0_ecd0)
  %v0_ecdc = load i32, i32* @r7, align 4
  %tmp21 = icmp slt i32 %v0_ecdc, 1
  %extract.t6 = trunc i32 %v0_ecdc to i8
  br i1 %tmp21, label %dec_label_pc_ed00, label %dec_label_pc_ece4

dec_label_pc_ece4:                                ; preds = %dec_label_pc_ec70
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_ece8

dec_label_pc_ece8:                                ; preds = %dec_label_pc_ece8, %dec_label_pc_ece4
  %v2_ecf0 = phi i32 [ %v1_ecf4, %dec_label_pc_ece8 ], [ 0, %dec_label_pc_ece4 ]
  %v1_ece8 = load i32, i32* @r6, align 4
  %v2_ece8 = add i32 %v1_ece8, %v2_ecf0
  %v3_ece8 = inttoptr i32 %v2_ece8 to i8*
  %v4_ece8 = load i8, i8* %v3_ece8, align 1
  %v6_ece8 = zext i8 %v4_ece8 to i32
  %v1_ecec = xor i32 %v6_ece8, 103
  store i32 %v1_ecec, i32* %r3.global-to-local, align 4
  %v1_ecf0 = trunc i32 %v1_ecec to i8
  store i8 %v1_ecf0, i8* %v3_ece8, align 1
  %v0_ecf4 = load i32, i32* %r2.global-to-local, align 4
  %v1_ecf4 = add i32 %v0_ecf4, 1
  store i32 %v1_ecf4, i32* %r2.global-to-local, align 4
  %v0_ecf8 = load i32, i32* @r7, align 4
  %v9_ecf8 = icmp eq i32 %v0_ecf8, %v1_ecf4
  br i1 %v9_ecf8, label %dec_label_pc_ed00.loopexit, label %dec_label_pc_ece8

dec_label_pc_ed00.loopexit:                       ; preds = %dec_label_pc_ece8
  %extract.t = trunc i32 %v1_ecf4 to i8
  br label %dec_label_pc_ed00

dec_label_pc_ed00:                                ; preds = %dec_label_pc_ed00.loopexit, %dec_label_pc_ec70
  %v0_ed10.off0 = phi i8 [ %extract.t, %dec_label_pc_ed00.loopexit ], [ %extract.t6, %dec_label_pc_ec70 ]
  %v2_ed00 = load i32, i32* @global_var_1da00.126, align 4
  %v2_ed04 = load i32, i32* @global_var_1da2c.128, align 4
  store i32 %v2_ed04, i32* %r2.global-to-local, align 4
  %v3_ed08 = mul i32 %v2_ed00, 16
  %v2_ed0c = add i32 %v2_ed04, %v3_ed08
  store i32 %v2_ed0c, i32* %r3.global-to-local, align 4
  %v3_ed10 = add i32 %v2_ed0c, 12
  %v4_ed10 = inttoptr i32 %v3_ed10 to i8*
  store i8 %v0_ed10.off0, i8* %v4_ed10, align 1
  %v0_ed14 = load i32, i32* @r6, align 4
  %v1_ed14 = load i32, i32* %sl.global-to-local, align 4
  %v2_ed14 = load i32, i32* %fp.global-to-local, align 4
  %v5_ed14 = mul i32 %v2_ed14, 16
  %v6_ed14 = add i32 %v5_ed14, %v1_ed14
  %v7_ed14 = inttoptr i32 %v6_ed14 to i32*
  store i32 %v0_ed14, i32* %v7_ed14, align 4
  %v2_ed1c = load i32, i32* @global_var_1da00.126, align 4
  store i32 %v2_ed1c, i32* @r7, align 4
  %v2_ed20 = load i32, i32* @global_var_1da2c.128, align 4
  store i32 %v2_ed20, i32* %sl.global-to-local, align 4
  %v1_ed24 = inttoptr i32 %arg2 to i8*
  %v2_ed24 = call i32 @function_12198(i8* %v1_ed24)
  %sext1 = mul i32 %v2_ed24, 16777216
  %v1_ed28 = sdiv i32 %sext1, 16777216
  %v2_ed28 = add nsw i32 %v1_ed28, 1
  store i32 %v2_ed28, i32* @r4, align 4
  store i32 %v1_ed28, i32* @r5, align 4
  %v1_ed34 = call i32 @function_13518(i32 %v2_ed28)
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v0_ed3c = load i32, i32* @r4, align 4
  store i32 %v0_ed3c, i32* %r2.global-to-local, align 4
  store i32 %v1_ed34, i32* %r6.global-to-local, align 4
  %v3_ed44 = call i32 @function_12214(i32 %v1_ed34, i32 %arg2, i32 %v0_ed3c)
  %v0_ed48 = load i32, i32* @r5, align 4
  %tmp22 = icmp slt i32 %v0_ed48, 1
  %extract.t8 = trunc i32 %v0_ed48 to i8
  br i1 %tmp22, label %dec_label_pc_ed6c, label %dec_label_pc_ed50

dec_label_pc_ed50:                                ; preds = %dec_label_pc_ed00
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_ed54

dec_label_pc_ed54:                                ; preds = %dec_label_pc_ed54, %dec_label_pc_ed50
  %v2_ed5c = phi i32 [ %v1_ed60, %dec_label_pc_ed54 ], [ 0, %dec_label_pc_ed50 ]
  %v1_ed54 = load i32, i32* %r6.global-to-local, align 4
  %v2_ed54 = add i32 %v1_ed54, %v2_ed5c
  %v3_ed54 = inttoptr i32 %v2_ed54 to i8*
  %v4_ed54 = load i8, i8* %v3_ed54, align 1
  %v6_ed54 = zext i8 %v4_ed54 to i32
  %v1_ed58 = xor i32 %v6_ed54, 103
  store i32 %v1_ed58, i32* %r3.global-to-local, align 4
  %v1_ed5c = trunc i32 %v1_ed58 to i8
  store i8 %v1_ed5c, i8* %v3_ed54, align 1
  %v0_ed60 = load i32, i32* %r2.global-to-local, align 4
  %v1_ed60 = add i32 %v0_ed60, 1
  store i32 %v1_ed60, i32* %r2.global-to-local, align 4
  %v0_ed64 = load i32, i32* @r5, align 4
  %v9_ed64 = icmp eq i32 %v0_ed64, %v1_ed60
  br i1 %v9_ed64, label %dec_label_pc_ed6c.loopexit, label %dec_label_pc_ed54

dec_label_pc_ed6c.loopexit:                       ; preds = %dec_label_pc_ed54
  %extract.t7 = trunc i32 %v1_ed60 to i8
  br label %dec_label_pc_ed6c

dec_label_pc_ed6c:                                ; preds = %dec_label_pc_ed6c.loopexit, %dec_label_pc_ed00
  %v0_ed7c.off0 = phi i8 [ %extract.t7, %dec_label_pc_ed6c.loopexit ], [ %extract.t8, %dec_label_pc_ed00 ]
  %v2_ed6c = load i32, i32* @global_var_1da00.126, align 4
  %v2_ed70 = load i32, i32* @global_var_1da2c.128, align 4
  %v3_ed74 = mul i32 %v2_ed6c, 16
  %v2_ed78 = or i32 %v3_ed74, 13
  %v3_ed7c = add i32 %v2_ed78, %v2_ed70
  %v4_ed7c = inttoptr i32 %v3_ed7c to i8*
  store i8 %v0_ed7c.off0, i8* %v4_ed7c, align 1
  %v2_ed84 = load i32, i32* @global_var_1da00.126, align 4
  store i32 %v2_ed84, i32* %lr.global-to-local, align 4
  %v4_ed88 = load i8, i8* @global_var_1da31.131, align 1
  %v5_ed88 = zext i8 %v4_ed88 to i32
  %v3_ed8c = load i8, i8* bitcast (i8** @global_var_1da30.130 to i8*), align 4
  %v4_ed8c = zext i8 %v3_ed8c to i32
  %v2_ed90 = load i32, i32* @global_var_1da2c.128, align 4
  %v4_ed94 = mul nuw nsw i32 %v5_ed88, 256
  %v5_ed94 = or i32 %v4_ed8c, %v4_ed94
  store i32 %v5_ed94, i32* %r2.global-to-local, align 4
  %v3_ed98 = mul i32 %v2_ed84, 16
  %v2_ed9c = add i32 %v2_ed90, %v3_ed98
  store i32 %v2_ed9c, i32* %r1.global-to-local, align 4
  %v3_eda4 = add i32 %v2_ed9c, 9
  %v4_eda4 = inttoptr i32 %v3_eda4 to i8*
  store i8 %v4_ed88, i8* %v4_eda4, align 1
  %v0_eda8 = load i32, i32* %r2.global-to-local, align 4
  %v1_eda8 = trunc i32 %v0_eda8 to i8
  %v2_eda8 = load i32, i32* %r1.global-to-local, align 4
  %v3_eda8 = add i32 %v2_eda8, 8
  %v4_eda8 = inttoptr i32 %v3_eda8 to i8*
  store i8 %v1_eda8, i8* %v4_eda8, align 1
  %v4_edac = load i8, i8* @global_var_1da31.131, align 1
  %v5_edac = zext i8 %v4_edac to i32
  %v3_edb0 = load i8, i8* bitcast (i8** @global_var_1da30.130 to i8*), align 4
  %v4_edb0 = zext i8 %v3_edb0 to i32
  %v4_edb4 = mul nuw nsw i32 %v5_edac, 256
  %v5_edb4 = or i32 %v4_edb0, %v4_edb4
  %v2_edb8 = load i32, i32* %stack_var_-44, align 4
  %v2_edbc = add i32 %v5_edb4, %v2_edb8
  store i32 %v2_edbc, i32* %r3.global-to-local, align 4
  %v3_edc09 = udiv i32 %v2_edbc, 256
  %v1_edc4 = trunc i32 %v3_edc09 to i8
  %v2_edc4 = load i32, i32* %r1.global-to-local, align 4
  %v3_edc4 = add i32 %v2_edc4, 11
  %v4_edc4 = inttoptr i32 %v3_edc4 to i8*
  store i8 %v1_edc4, i8* %v4_edc4, align 1
  %v0_edc8 = load i32, i32* %r3.global-to-local, align 4
  %v1_edc8 = trunc i32 %v0_edc8 to i8
  %v2_edc8 = load i32, i32* %r1.global-to-local, align 4
  %v3_edc8 = add i32 %v2_edc8, 10
  %v4_edc8 = inttoptr i32 %v3_edc8 to i8*
  store i8 %v1_edc8, i8* %v4_edc8, align 1
  %v4_edcc = load i8, i8* @global_var_1da31.131, align 1
  %v5_edcc = zext i8 %v4_edcc to i32
  %v3_edd0 = load i8, i8* bitcast (i8** @global_var_1da30.130 to i8*), align 4
  %v4_edd0 = zext i8 %v3_edd0 to i32
  %v4_edd4 = mul nuw nsw i32 %v5_edcc, 256
  %v5_edd4 = or i32 %v4_edd0, %v4_edd4
  %v2_edd8 = load i32, i32* %stack_var_-44, align 4
  %v2_eddc = add i32 %v5_edd4, %v2_edd8
  store i32 %v2_eddc, i32* %r2.global-to-local, align 4
  %v0_ede0 = load i32, i32* @r7, align 4
  %v3_ede0 = mul i32 %v0_ede0, 16
  %v1_ede4 = load i32, i32* %sl.global-to-local, align 4
  %v2_ede4 = add i32 %v1_ede4, %v3_ede0
  store i32 %v2_ede4, i32* %r3.global-to-local, align 4
  %v0_ede8 = load i32, i32* %lr.global-to-local, align 4
  %v1_ede8 = add i32 %v0_ede8, 1
  store i32 %v1_ede8, i32* @lr, align 4
  %v3_edec = sdiv i32 %v2_eddc, 256
  store i32 %v3_edec, i32* %r1.global-to-local, align 4
  %v0_edf0 = load i32, i32* %r6.global-to-local, align 4
  %v2_edf0 = add i32 %v2_ede4, 4
  %v3_edf0 = inttoptr i32 %v2_edf0 to i32*
  store i32 %v0_edf0, i32* %v3_edf0, align 4
  %v0_edf4 = load i32, i32* @lr, align 4
  %v1_edf4 = load i32, i32* @r8, align 4
  %v2_edf4 = inttoptr i32 %v1_edf4 to i32*
  store i32 %v0_edf4, i32* %v2_edf4, align 4
  %v0_edf8 = load i32, i32* %r1.global-to-local, align 4
  %v1_edf8 = trunc i32 %v0_edf8 to i8
  store i8 %v1_edf8, i8* @global_var_1da31.131, align 1
  %v0_edfc = load i32, i32* %r2.global-to-local, align 4
  %v1_edfc = trunc i32 %v0_edfc to i8
  store i8 %v1_edfc, i8* bitcast (i8** @global_var_1da30.130 to i8*), align 4
  store i32 %v3_ec70, i32* @r4, align 4
  store i32 %v6_ec70, i32* @r5, align 4
  store i32 %v9_ec70, i32* @r6, align 4
  store i32 %v12_ec70, i32* @r7, align 4
  store i32 %v15_ec70, i32* @r8, align 4
  ret i32 ptrtoint (i8** @global_var_1da30.130 to i32)

; uselistorder directives
  uselistorder i32 %v1_ed60, { 0, 2, 3, 1 }
  uselistorder i32 %v1_ed34, { 1, 0 }
  uselistorder i32 %v1_ecf4, { 0, 2, 3, 1 }
  uselistorder i32 %v1_ecc8, { 1, 0 }
  uselistorder i32 %v3_ec8c, { 1, 2, 0 }
  uselistorder i32 %v3_ec84, { 1, 2, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32 (i8*)* @function_12198, { 0, 1, 22, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23 }
  uselistorder i32 (i32, i32, i32, i32)* @function_137b4, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
}

define i32 @function_ee14(i32 %arg1) local_unnamed_addr {
dec_label_pc_ee14:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-69 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %stack_var_-39 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-344 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-1858 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_ee14 = load i32, i32* @r4, align 4
  store i32 %v3_ee14, i32* %stack_var_-36, align 4
  %v6_ee14 = load i32, i32* @r5, align 4
  %v0_ee1c = call i32 @function_12ac8()
  store i32 %v0_ee1c, i32* %r0.global-to-local, align 4
  %v7_ee20 = icmp eq i32 %v0_ee1c, -1
  %. = zext i1 %v7_ee20 to i32
  %tmp1325 = icmp slt i32 %v0_ee1c, 1
  %storemerge1243 = select i1 %tmp1325, i32 %., i32 1
  store i32 %storemerge1243, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_1daa0.133 to i32), i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ee3c = icmp eq i32 %storemerge1243, 0
  store i1 %v2_ee3c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_ee1c, i32* @global_var_1daa0.133, align 4
  br i1 %v2_ee3c, label %dec_label_pc_eea4, label %dec_label_pc_ee48

dec_label_pc_ee48:                                ; preds = %dec_label_pc_ee14
  store i32 %v3_ee14, i32* %r4.global-to-local, align 4
  store i32 %v6_ee14, i32* @r5, align 4
  ret i32 %v0_ee1c

dec_label_pc_eea4:                                ; preds = %dec_label_pc_ee14
  %v0_eea4 = call i32 @function_12450()
  store i32 %v0_eea4, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1da7c.49 to i32), i32* %r1.global-to-local, align 4
  store i32 %v0_eea4, i32* @global_var_1da7c.49, align 4
  %v1_eeb0 = call i32 @function_e824(i32 %v0_eea4)
  %v0_eeb4 = load i32, i32* @r4, align 4
  store i32 %v0_eeb4, i32* %r0.global-to-local, align 4
  %v1_eeb8 = inttoptr i32 %v0_eeb4 to i32*
  %v2_eeb8 = call i32 @function_12d6c(i32* %v1_eeb8)
  store i32 ptrtoint (i32* @global_var_1da34.123 to i32), i32* %r2.global-to-local, align 4
  store i32 288, i32* %r1.global-to-local, align 4
  store i32 %v2_eeb8, i32* @global_var_1da34.123, align 4
  store i32 256, i32* %r0.global-to-local, align 4
  %v2_eecc = call i32 @function_1366c(i32 256, i32 288)
  store i32 %v2_eecc, i32* @lr, align 4
  %v0_eed8 = load i32, i32* @r4, align 4
  store i32 %v0_eed8, i32* %stack_var_-44, align 4
  store i32 %v2_eecc, i32* @global_var_1da98.137, align 4
  store i32 %v0_eed8, i32* %r3.global-to-local, align 4
  store i32 %v0_eed8, i32* %r5.global-to-local, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 %v0_eed8, i32* %ip.global-to-local, align 4
  %v1_eef0 = add i32 %v2_eecc, 4
  store i32 %v1_eef0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_eef4

dec_label_pc_eef4:                                ; preds = %dec_label_pc_eef4.dec_label_pc_eef4_crit_edge, %dec_label_pc_eea4
  %v0_ef0c = phi i32 [ %v0_ef0c.pre, %dec_label_pc_eef4.dec_label_pc_eef4_crit_edge ], [ %v0_eed8, %dec_label_pc_eea4 ]
  %v0_eefc = phi i32 [ %v0_ef14, %dec_label_pc_eef4.dec_label_pc_eef4_crit_edge ], [ %v0_eed8, %dec_label_pc_eea4 ]
  %v1_ef04 = phi i32 [ %v1_ef04.pre, %dec_label_pc_eef4.dec_label_pc_eef4_crit_edge ], [ %v2_eecc, %dec_label_pc_eea4 ]
  %v3_eef4 = mul i32 %v0_eefc, 256
  store i32 %v3_eef4, i32* %r2.global-to-local, align 4
  %v1_eefc = add i32 %v0_eefc, 1
  store i32 %v1_eefc, i32* %ip.global-to-local, align 4
  %v2_ef00 = mul i32 %v0_eefc, 288
  %v2_ef04 = add i32 %v1_ef04, 12
  %v2_ef0c = add i32 %v2_ef04, %v2_ef00
  %v3_ef0c = inttoptr i32 %v2_ef0c to i32*
  store i32 %v0_ef0c, i32* %v3_ef0c, align 4
  %v0_ef10 = load i32, i32* %r0.global-to-local, align 4
  %v1_ef10 = load i32, i32* %r1.global-to-local, align 4
  %v2_ef10 = inttoptr i32 %v1_ef10 to i32*
  store i32 %v0_ef10, i32* %v2_ef10, align 4
  %v3_ef10 = load i32, i32* %r1.global-to-local, align 4
  %v4_ef10 = add i32 %v3_ef10, 288
  store i32 %v4_ef10, i32* %r1.global-to-local, align 4
  %v0_ef14 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_ef14, i32* %r3.global-to-local, align 4
  %v7_ef18 = icmp sgt i32 %v1_eefc, 255
  br i1 %v7_ef18, label %dec_label_pc_ef1c, label %dec_label_pc_eef4.dec_label_pc_eef4_crit_edge

dec_label_pc_eef4.dec_label_pc_eef4_crit_edge:    ; preds = %dec_label_pc_eef4
  %v1_ef04.pre = load i32, i32* @lr, align 4
  %v0_ef0c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_eef4

dec_label_pc_ef1c:                                ; preds = %dec_label_pc_eef4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 %v0_ef14, i32* %stack_var_-44, align 4
  %v3_ef2c = call i32 @function_13380(i32 2, i32 3, i32 6)
  store i32 %v3_ef2c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1da9c.139 to i32), i32* %ip.global-to-local, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 %v3_ef2c, i32* @global_var_1da9c.139, align 4
  %v0_ef3c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_ef3c, i32* @r2, align 4
  store i32 %v3_ef2c, i32* @r4, align 4
  %v2_ef44 = call i32 @function_129d8(i32 %v3_ef2c, i32 3)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_ef4c = or i32 %v2_ef44, 2048
  store i32 %v1_ef4c, i32* @r2, align 4
  %v0_ef50 = load i32, i32* @r4, align 4
  store i32 %v0_ef50, i32* %r0.global-to-local, align 4
  %v2_ef54 = call i32 @function_129d8(i32 %v0_ef50, i32 4)
  %v2_ef5c = ptrtoint i32* %stack_var_-52 to i32
  %v2_ef60 = load i32, i32* @global_var_1da9c.139, align 4
  store i32 %v2_ef60, i32* %r0.global-to-local, align 4
  store i32 1, i32* %ip.global-to-local, align 4
  %v0_ef68 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_ef68, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v2_ef70 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_ef70, i32* %r3.global-to-local, align 4
  store i32 4, i32* @r4, align 4
  store i32 1, i32* %stack_var_-44, align 4
  %v6_ef80 = call i32 @function_13350(i32 %v2_ef60, i32 %v0_ef68, i32 3, i32* nonnull %stack_var_-44, i32 4)
  store i32 %v6_ef80, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ef84 = icmp eq i32 %v6_ef80, 0
  store i1 %v2_ef84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ef84, label %dec_label_pc_ef8c, label %dec_label_pc_10cf4

dec_label_pc_ef8c:                                ; preds = %dec_label_pc_ef1c, %dec_label_pc_10cf4, %dec_label_pc_ef8c
  %v0_ef8c = call i32 @function_e7cc()
  %v3_ef90 = mul i32 %v0_ef8c, 65536
  store i32 %v3_ef90, i32* %r0.global-to-local, align 4
  %v3_ef94 = urem i32 %v0_ef8c, 65536
  store i32 %v3_ef94, i32* %r2.global-to-local, align 4
  %v1_ef98 = mul i32 %v0_ef8c, 256
  %v3_ef9c = and i32 %v1_ef98, 65280
  %tmp1328 = udiv i32 %v0_ef8c, 256
  %v4_efa0 = urem i32 %tmp1328, 256
  %v5_efa0 = or i32 %v4_efa0, %v3_ef9c
  store i32 %v5_efa0, i32* %r3.global-to-local, align 4
  %v2_efa4 = icmp ugt i32 %v5_efa0, 1023
  store i1 %v2_efa4, i1* %cpsr_c.global-to-local, align 1
  %v7_efa4 = icmp eq i32 %v5_efa0, 1024
  store i1 %v7_efa4, i1* %cpsr_z.global-to-local, align 1
  %v3_efac = icmp ult i32 %v5_efa0, 1022
  br i1 %v3_efac, label %dec_label_pc_ef8c, label %dec_label_pc_efb0

dec_label_pc_efb0:                                ; preds = %dec_label_pc_ef8c
  store i32 69, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 40, i32* %r3.global-to-local, align 4
  store i8 69, i8* bitcast (i8** @global_var_1da04.141 to i8*), align 4
  store i8 40, i8* bitcast (i32* @global_var_1da07.142 to i8*), align 4
  store i8 0, i8* bitcast (i32* @global_var_1da06.143 to i8*), align 4
  %v0_efe8 = call i32 @function_e7cc()
  %v1_efe8 = trunc i32 %v0_efe8 to i8
  store i32 %v0_efe8, i32* %r0.global-to-local, align 4
  %v3_eff0 = load i8, i8* @global_var_1da24.146, align 1
  %sext690 = mul i32 %v0_ef8c, 16777216
  %v4_eff4 = sdiv i32 %sext690, 16777216
  %v4_eff81165 = udiv i32 %v0_efe8, 256
  %v1_effc = trunc i32 %v4_eff81165 to i8
  store i8 %v1_effc, i8* bitcast (i32* @global_var_1da09.147 to i8*), align 4
  store i32 ptrtoint (i32* @global_var_1da18.145 to i32), i32* %r1.global-to-local, align 4
  %tmp = urem i8 %v3_eff0, 16
  %v1_f008 = zext i8 %tmp to i32
  %v1_f00c = and i32 %v4_eff4, 128
  %v2_f00c = icmp ne i32 %v1_f00c, 0
  store i1 %v2_f00c, i1* %cpsr_c.global-to-local, align 1
  %v3_f00c = ashr i32 %sext690, 31
  store i32 %v3_f00c, i32* %ip.global-to-local, align 4
  store i8 64, i8* bitcast (i32* @global_var_1da0c.148 to i8*), align 4
  %v1_f014 = or i32 %v1_f008, 80
  store i32 %v1_f014, i32* %r2.global-to-local, align 4
  store i32 23, i32* %r3.global-to-local, align 4
  store i32 6, i32* @r5, align 4
  %v1_f020 = trunc i32 %v3_f00c to i8
  store i8 %v1_f020, i8* bitcast (i32* @global_var_1da19.149 to i8*), align 4
  %v1_f024 = trunc i32 %v1_f014 to i8
  store i8 %v1_f024, i8* @global_var_1da24.146, align 1
  %v0_f028 = load i32, i32* %r4.global-to-local, align 4
  %v1_f028 = trunc i32 %v0_f028 to i8
  store i8 %v1_f028, i8* bitcast (i32* @global_var_1da1a.150 to i8*), align 4
  %v1_f02c = trunc i32 %v4_eff4 to i8
  store i8 %v1_f02c, i8* bitcast (i32* @global_var_1da18.145 to i8*), align 4
  store i8 23, i8* bitcast (i32* @global_var_1da1b.151 to i8*), align 4
  store i8 %v1_efe8, i8* bitcast (i32* @global_var_1da08.152 to i8*), align 4
  store i8 6, i8* bitcast (i32* @global_var_1da0d.153 to i8*), align 4
  %v0_f03c = call i32 @function_e7cc()
  %v3_f044 = load i8, i8* @global_var_1da25.154, align 1
  %v4_f044 = zext i8 %v3_f044 to i32
  store i32 ptrtoint (i32* @global_var_1da18.145 to i32), i32* @fp, align 4
  %sext691 = mul i32 %v0_f03c, 16777216
  %v1_f04c = sdiv i32 %sext691, 16777216
  %v2_f04c = and i32 %v1_f04c, 128
  %v3_f04c = icmp ne i32 %v2_f04c, 0
  store i1 %v3_f04c, i1* %cpsr_c.global-to-local, align 1
  %v4_f04c = ashr i32 %sext691, 31
  store i32 %v4_f04c, i32* %ip.global-to-local, align 4
  %v1_f050 = or i32 %v4_f044, 2
  store i32 %v1_f050, i32* %r3.global-to-local, align 4
  store i32 %v1_f04c, i32* @r4, align 4
  %v1_f058 = trunc i32 %v4_f04c to i8
  store i8 %v1_f058, i8* bitcast (i32* @global_var_1da27.155 to i8*), align 4
  %v1_f05c = trunc i32 %v1_f050 to i8
  store i8 %v1_f05c, i8* @global_var_1da25.154, align 1
  store i32 ptrtoint (i32* @global_var_1539c.157 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_15354.159 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v1_f06c = trunc i32 %v1_f04c to i8
  store i8 %v1_f06c, i8* bitcast (i32* @global_var_1da26.160 to i8*), align 4
  %v3_f070 = call i32 @function_ec70(i32 ptrtoint (i32* @global_var_1539c.157 to i32), i32 ptrtoint (i32* @global_var_15354.159 to i32), i32 3)
  %v0_f074 = load i32, i32* @r5, align 4
  store i32 %v0_f074, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_15320.162 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_15354.159 to i32), i32* %r1.global-to-local, align 4
  %v3_f080 = call i32 @function_ec70(i32 ptrtoint (i32* @global_var_15320.162 to i32), i32 ptrtoint (i32* @global_var_15354.159 to i32), i32 %v0_f074)
  store i32 ptrtoint (i32* @global_var_15328.164 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_15330.166 to i32), i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v3_f090 = call i32 @function_ec70(i32 ptrtoint (i32* @global_var_15328.164 to i32), i32 ptrtoint (i32* @global_var_15330.166 to i32), i32 15)
  store i32 ptrtoint (i32* @global_var_15328.164 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1533c.168 to i32), i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v3_f0a0 = call i32 @function_ec70(i32 ptrtoint (i32* @global_var_15328.164 to i32), i32 ptrtoint (i32* @global_var_1533c.168 to i32), i32 15)
  store i32 ptrtoint (i32* @global_var_15348.170 to i32), i32* %r0.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_15348.170 to i32), i32* %r1.global-to-local, align 4
  %v3_f0b0 = call i32 @function_ec70(i32 ptrtoint (i32* @global_var_15348.170 to i32), i32 ptrtoint (i32* @global_var_15348.170 to i32), i32 14)
  store i32 ptrtoint (i32* @global_var_15350.172 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_15358.174 to i32), i32* %r1.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  %v3_f0c0 = call i32 @function_ec70(i32 ptrtoint (i32* @global_var_15350.172 to i32), i32 ptrtoint (i32* @global_var_15358.174 to i32), i32 17)
  store i32 ptrtoint (i32* @global_var_15328.164 to i32), i32* %r0.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_15328.164 to i32), i32* %r1.global-to-local, align 4
  %v3_f0d0 = call i32 @function_ec70(i32 ptrtoint (i32* @global_var_15328.164 to i32), i32 ptrtoint (i32* @global_var_15328.164 to i32), i32 14)
  store i32 ptrtoint (i32* @global_var_15368.176 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_15354.159 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v3_f0e0 = call i32 @function_ec70(i32 ptrtoint (i32* @global_var_15368.176 to i32), i32 ptrtoint (i32* @global_var_15354.159 to i32), i32 3)
  store i32 ptrtoint (i32* @global_var_1536c.178 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_15374.180 to i32), i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v3_f0f0 = call i32 @function_ec70(i32 ptrtoint (i32* @global_var_1536c.178 to i32), i32 ptrtoint (i32* @global_var_15374.180 to i32), i32 12)
  store i32 ptrtoint (i32* @global_var_15350.172 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_15374.180 to i32), i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  %v3_f100 = call i32 @function_ec70(i32 ptrtoint (i32* @global_var_15350.172 to i32), i32 ptrtoint (i32* @global_var_15374.180 to i32), i32 11)
  store i32 ptrtoint (i32* @global_var_1537c.182 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1538c.184 to i32), i32* %r1.global-to-local, align 4
  store i32 20, i32* %r2.global-to-local, align 4
  %v4_f110 = call i32 @function_ec70(i32 ptrtoint (i32* @global_var_1537c.182 to i32), i32 ptrtoint ([9 x i8]* @global_var_1538c.184 to i32), i32 20)
  store i32 %v4_f110, i32* %r0.global-to-local, align 4
  %v2_f118 = ptrtoint i32* %stack_var_-1858 to i32
  store i32 %v2_f118, i32* %ip.global-to-local, align 4
  %v1_10b74 = add i32 %v2_f118, 20
  %v1_10bcc = add i32 %v2_f118, 16
  %v2_10bcc = inttoptr i32 %v1_10bcc to i32*
  %v2_10e18 = ptrtoint i32* %stack_var_-36 to i32
  %v2_10ea4 = ptrtoint i32* %stack_var_-60 to i32
  %v2_10ea8 = ptrtoint i32* %stack_var_-216 to i32
  %v2_10eac = ptrtoint i32* %stack_var_-344 to i32
  %v2_1184c = ptrtoint i32* %stack_var_-39 to i32
  %v2_11854 = ptrtoint i32* %stack_var_-84 to i32
  %v2_1185c = ptrtoint i32* %stack_var_-69 to i32
  %v2_11034 = ptrtoint i32* %stack_var_-48 to i32
  %v2_10b3c = ptrtoint i32* %stack_var_-88 to i32
  %v1_10bdc = add i32 %v2_f118, 9
  %v2_10bdc = inttoptr i32 %v1_10bdc to i8*
  %v1_10c78 = add i32 %v2_f118, 12
  %v2_10c78 = inttoptr i32 %v1_10c78 to i32*
  br label %dec_label_pc_f120

dec_label_pc_f120:                                ; preds = %dec_label_pc_10f00, %dec_label_pc_efb0
  %v2_f124 = load i32, i32* @global_var_1da34.123, align 4
  %v0_f128 = load i32, i32* @fp, align 4
  %v3_f128 = icmp uge i32 %v0_f128, %v2_f124
  store i1 %v3_f128, i1* %cpsr_c.global-to-local, align 1
  %v9_f128 = icmp eq i32 %v0_f128, %v2_f124
  store i1 %v9_f128, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_f128, label %dec_label_pc_10b68, label %dec_label_pc_f134

dec_label_pc_f134:                                ; preds = %dec_label_pc_f120
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-44, align 4
  br label %dec_label_pc_f13c

dec_label_pc_f13c:                                ; preds = %dec_label_pc_10a64, %dec_label_pc_f134
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-88, align 4
  store i32 0, i32* %stack_var_-84, align 4
  %v0_f150 = call i32 @function_e7cc()
  %v1_f150 = trunc i32 %v0_f150 to i8
  store i32 %v0_f150, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1da7c.49 to i32), i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_1da04.141 to i32), i32* %r4.global-to-local, align 4
  %v2_f15c = load i32, i32* @global_var_1da7c.49, align 4
  store i32 %v2_f15c, i32* %r2.global-to-local, align 4
  %v2_f160 = and i32 %v0_f150, 128
  %v3_f160 = icmp ne i32 %v2_f160, 0
  store i1 %v3_f160, i1* %cpsr_c.global-to-local, align 1
  %v4_f160 = sdiv i32 %v0_f150, 256
  store i32 %v4_f160, i32* %r3.global-to-local, align 4
  %v1_f164 = trunc i32 %v4_f160 to i8
  store i8 %v1_f164, i8* bitcast (i32* @global_var_1da09.147 to i8*), align 4
  store i32 %v2_f15c, i32* @global_var_1da10.185, align 4
  store i8 %v1_f150, i8* bitcast (i32* @global_var_1da08.152 to i8*), align 4
  br label %dec_label_pc_f170

dec_label_pc_f170:                                ; preds = %.thread647.thread, %dec_label_pc_f204, %dec_label_pc_f1f8, %dec_label_pc_f1ec, %dec_label_pc_f1e0, %dec_label_pc_f1d4, %dec_label_pc_f1c8, %dec_label_pc_f1bc, %dec_label_pc_f1b0, %dec_label_pc_f1a4, %dec_label_pc_f198, %bb1880, %dec_label_pc_10a38, %dec_label_pc_10a04, %dec_label_pc_109c0, %bb1852, %dec_label_pc_108bc, %.thread595, %dec_label_pc_10848, %dec_label_pc_1080c, %bb1820, %bb1813, %bb1808, %bb1803, %bb1797, %bb1792, %bb1786, %bb1781, %bb1776, %bb1771, %bb1766, %bb1761, %bb1756, %bb1751, %bb1746, %.thread467, %dec_label_pc_10438, %.thread461, %dec_label_pc_103f4, %.thread455, %dec_label_pc_103c8, %.thread451, %dec_label_pc_103a0, %dec_label_pc_10390, %.thread446, %.thread442, %.thread438, %.thread434, %bb1734, %bb1727, %bb1722, %bb1714, %bb1708, %bb1701, %bb1696, %bb1691, %bb1686, %bb1681, %bb1676, %.thread361, %bb1668, %bb1664, %bb1661, %bb1655, %bb1647, %bb1644, %bb1640, %bb1632, %bb1625, %bb1620, %bb1617, %bb1613, %bb1609, %bb1601, %bb1594, %bb1589, %bb1584, %bb1582, %bb1578, %bb1571, %dec_label_pc_fd10, %dec_label_pc_fd00, %.thread241, %dec_label_pc_fcc0, %.thread235, %.thread231, %dec_label_pc_fc68, %dec_label_pc_fc4c, %.thread224, %.thread220, %.thread216, %dec_label_pc_f93c, %dec_label_pc_f70c, %dec_label_pc_f64c, %.thread112, %dec_label_pc_f568, %dec_label_pc_f544, %.thread89, %dec_label_pc_f4c4, %dec_label_pc_f4a0, %.thread73, %.thread69, %dec_label_pc_f424, %dec_label_pc_f3e0, %.thread58, %dec_label_pc_f394, %dec_label_pc_f37c, %dec_label_pc_f348, %.thread46, %.thread42, %.thread38, %dec_label_pc_f2f8, %.thread33, %.thread29, %dec_label_pc_f270, %dec_label_pc_f25c, %dec_label_pc_f248, %dec_label_pc_10a5c, %dec_label_pc_10a30, %bb1874, %bb1873, %dec_label_pc_109e4, %dec_label_pc_1099c, %dec_label_pc_10978, %dec_label_pc_10958, %dec_label_pc_10934, %bb1847, %dec_label_pc_1088c, %dec_label_pc_10870, %dec_label_pc_1082c, %dec_label_pc_107f0, %dec_label_pc_107d0, %dec_label_pc_107ac, %bb1814, %bb1787, %bb1762, %bb1742, %bb1741, %bb1736, %bb1735, %bb1702, %bb1671, %bb1595, %bb1557, %dec_label_pc_fbe4, %dec_label_pc_fbc0, %dec_label_pc_fba0, %dec_label_pc_fb80, %dec_label_pc_fb50, %dec_label_pc_fb30, %dec_label_pc_fb10, %dec_label_pc_faf8, %dec_label_pc_fad0, %dec_label_pc_fab8, %dec_label_pc_fa98, %dec_label_pc_fa74, %dec_label_pc_fa4c, %dec_label_pc_fa30, %dec_label_pc_fa10, %dec_label_pc_f9f0, %dec_label_pc_f9d0, %dec_label_pc_f9b0, %dec_label_pc_f99c, %dec_label_pc_f978, %dec_label_pc_f958, %dec_label_pc_f920, %dec_label_pc_f904, %dec_label_pc_f8e8, %dec_label_pc_f8c8, %dec_label_pc_f8b4, %dec_label_pc_f898, %dec_label_pc_f874, %dec_label_pc_f848, %dec_label_pc_f81c, %dec_label_pc_f7f0, %dec_label_pc_f7c0, %dec_label_pc_f79c, %dec_label_pc_f774, %dec_label_pc_f758, %dec_label_pc_f730, %dec_label_pc_f6e8, %dec_label_pc_f6bc, %dec_label_pc_f69c, %dec_label_pc_f644, %dec_label_pc_f614, %bb1419, %bb1416, %bb1413, %bb1404, %bb1401, %bb1398, %bb1389, %bb1386, %bb1385, %bb1382, %bb1375, %bb1368, %bb1361, %bb1358, %bb1355, %bb1346, %bb1343, %dec_label_pc_f210, %bb1340, %bb1339, %bb1338, %bb1337, %bb1336, %bb1335, %bb1334, %bb1333, %bb1332, %bb1331, %bb1330, %dec_label_pc_f13c
  %v0_f170 = call i32 @function_e7cc()
  store i32 %v0_f170, i32* %r0.global-to-local, align 4
  %v1_f174 = urem i32 %v0_f170, 256
  store i32 %v1_f174, i32* %r1.global-to-local, align 4
  %v3_f178 = udiv i32 %v0_f170, 256
  store i32 %v3_f178, i32* %r3.global-to-local, align 4
  %v3_f17c = udiv i32 %v0_f170, 65536
  store i32 %v3_f17c, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f180 = icmp eq i32 %v1_f174, 0
  store i1 %v2_f180, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f180, label %bb1330, label %bb1329

bb1329:                                           ; preds = %dec_label_pc_f170
  %v3_f184 = icmp ugt i32 %v1_f174, 126
  store i1 %v3_f184, i1* %cpsr_c.global-to-local, align 1
  %v8_f184 = icmp eq i32 %v1_f174, 127
  store i1 %v8_f184, i1* %cpsr_z.global-to-local, align 1
  br label %bb1330

bb1330:                                           ; preds = %dec_label_pc_f170, %bb1329
  %v0_f194 = phi i1 [ true, %dec_label_pc_f170 ], [ %v8_f184, %bb1329 ]
  %v1_f188 = urem i32 %v3_f178, 256
  store i32 %v1_f188, i32* %ip.global-to-local, align 4
  %v1_f18c = urem i32 %v3_f17c, 256
  store i32 %v1_f18c, i32* %r2.global-to-local, align 4
  %v1_f190 = and i32 %v0_f170, 8388608
  %v2_f190 = icmp ne i32 %v1_f190, 0
  store i1 %v2_f190, i1* %cpsr_c.global-to-local, align 1
  %v3_f190 = udiv i32 %v0_f170, 16777216
  store i32 %v3_f190, i32* %r0.global-to-local, align 4
  br i1 %v0_f194, label %dec_label_pc_f170, label %dec_label_pc_f198

dec_label_pc_f198:                                ; preds = %bb1330
  %v2_f198 = icmp ugt i32 %v1_f174, 14
  store i1 %v2_f198, i1* %cpsr_c.global-to-local, align 1
  %v7_f198 = icmp eq i32 %v1_f174, 15
  store i1 %v7_f198, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f198, label %dec_label_pc_f170, label %bb1331

bb1331:                                           ; preds = %dec_label_pc_f198
  %v3_f19c = icmp ugt i32 %v1_f174, 2
  store i1 %v3_f19c, i1* %cpsr_c.global-to-local, align 1
  %v8_f19c = icmp eq i32 %v1_f174, 3
  store i1 %v8_f19c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f19c, label %dec_label_pc_f170, label %dec_label_pc_f1a4

dec_label_pc_f1a4:                                ; preds = %bb1331
  %v2_f1a4 = icmp ugt i32 %v1_f174, 9
  store i1 %v2_f1a4, i1* %cpsr_c.global-to-local, align 1
  %v7_f1a4 = icmp eq i32 %v1_f174, 10
  store i1 %v7_f1a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f1a4, label %dec_label_pc_f170, label %bb1332

bb1332:                                           ; preds = %dec_label_pc_f1a4
  %v3_f1a8 = icmp ugt i32 %v1_f174, 55
  store i1 %v3_f1a8, i1* %cpsr_c.global-to-local, align 1
  %v8_f1a8 = icmp eq i32 %v1_f174, 56
  store i1 %v8_f1a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f1a8, label %dec_label_pc_f170, label %dec_label_pc_f1b0

dec_label_pc_f1b0:                                ; preds = %bb1332
  %v2_f1b0 = icmp ugt i32 %v1_f174, 48
  store i1 %v2_f1b0, i1* %cpsr_c.global-to-local, align 1
  %v7_f1b0 = icmp eq i32 %v1_f174, 49
  store i1 %v7_f1b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f1b0, label %dec_label_pc_f170, label %bb1333

bb1333:                                           ; preds = %dec_label_pc_f1b0
  %v3_f1b4 = icmp ugt i32 %v1_f174, 24
  store i1 %v3_f1b4, i1* %cpsr_c.global-to-local, align 1
  %v8_f1b4 = icmp eq i32 %v1_f174, 25
  store i1 %v8_f1b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f1b4, label %dec_label_pc_f170, label %dec_label_pc_f1bc

dec_label_pc_f1bc:                                ; preds = %bb1333
  %v2_f1bc = icmp ugt i32 %v1_f174, 136
  store i1 %v2_f1bc, i1* %cpsr_c.global-to-local, align 1
  %v7_f1bc = icmp eq i32 %v1_f174, 137
  store i1 %v7_f1bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f1bc, label %dec_label_pc_f170, label %bb1334

bb1334:                                           ; preds = %dec_label_pc_f1bc
  %v3_f1c0 = icmp ugt i32 %v1_f174, 49
  store i1 %v3_f1c0, i1* %cpsr_c.global-to-local, align 1
  %v8_f1c0 = icmp eq i32 %v1_f174, 50
  store i1 %v8_f1c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f1c0, label %dec_label_pc_f170, label %dec_label_pc_f1c8

dec_label_pc_f1c8:                                ; preds = %bb1334
  %v2_f1c8 = icmp ugt i32 %v1_f174, 6
  store i1 %v2_f1c8, i1* %cpsr_c.global-to-local, align 1
  %v7_f1c8 = icmp eq i32 %v1_f174, 7
  store i1 %v7_f1c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f1c8, label %dec_label_pc_f170, label %bb1335

bb1335:                                           ; preds = %dec_label_pc_f1c8
  %v3_f1cc = icmp ugt i32 %v1_f174, 5
  store i1 %v3_f1cc, i1* %cpsr_c.global-to-local, align 1
  %v8_f1cc = icmp eq i32 %v1_f174, 6
  store i1 %v8_f1cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f1cc, label %dec_label_pc_f170, label %dec_label_pc_f1d4

dec_label_pc_f1d4:                                ; preds = %bb1335
  %v2_f1d4 = icmp ugt i32 %v1_f174, 20
  store i1 %v2_f1d4, i1* %cpsr_c.global-to-local, align 1
  %v7_f1d4 = icmp eq i32 %v1_f174, 21
  store i1 %v7_f1d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f1d4, label %dec_label_pc_f170, label %bb1336

bb1336:                                           ; preds = %dec_label_pc_f1d4
  %v3_f1d8 = icmp ugt i32 %v1_f174, 10
  store i1 %v3_f1d8, i1* %cpsr_c.global-to-local, align 1
  %v8_f1d8 = icmp eq i32 %v1_f174, 11
  store i1 %v8_f1d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f1d8, label %dec_label_pc_f170, label %dec_label_pc_f1e0

dec_label_pc_f1e0:                                ; preds = %bb1336
  %v2_f1e0 = icmp ugt i32 %v1_f174, 25
  store i1 %v2_f1e0, i1* %cpsr_c.global-to-local, align 1
  %v7_f1e0 = icmp eq i32 %v1_f174, 26
  store i1 %v7_f1e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f1e0, label %dec_label_pc_f170, label %bb1337

bb1337:                                           ; preds = %dec_label_pc_f1e0
  %v3_f1e4 = icmp ugt i32 %v1_f174, 21
  store i1 %v3_f1e4, i1* %cpsr_c.global-to-local, align 1
  %v8_f1e4 = icmp eq i32 %v1_f174, 22
  store i1 %v8_f1e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f1e4, label %dec_label_pc_f170, label %dec_label_pc_f1ec

dec_label_pc_f1ec:                                ; preds = %bb1337
  %v2_f1ec = icmp ugt i32 %v1_f174, 28
  store i1 %v2_f1ec, i1* %cpsr_c.global-to-local, align 1
  %v7_f1ec = icmp eq i32 %v1_f174, 29
  store i1 %v7_f1ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f1ec, label %dec_label_pc_f170, label %bb1338

bb1338:                                           ; preds = %dec_label_pc_f1ec
  %v3_f1f0 = icmp ugt i32 %v1_f174, 27
  store i1 %v3_f1f0, i1* %cpsr_c.global-to-local, align 1
  %v8_f1f0 = icmp eq i32 %v1_f174, 28
  store i1 %v8_f1f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f1f0, label %dec_label_pc_f170, label %dec_label_pc_f1f8

dec_label_pc_f1f8:                                ; preds = %bb1338
  %v2_f1f8 = icmp ugt i32 %v1_f174, 32
  store i1 %v2_f1f8, i1* %cpsr_c.global-to-local, align 1
  %v7_f1f8 = icmp eq i32 %v1_f174, 33
  store i1 %v7_f1f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f1f8, label %dec_label_pc_f170, label %bb1339

bb1339:                                           ; preds = %dec_label_pc_f1f8
  %v3_f1fc = icmp ugt i32 %v1_f174, 29
  store i1 %v3_f1fc, i1* %cpsr_c.global-to-local, align 1
  %v8_f1fc = icmp eq i32 %v1_f174, 30
  store i1 %v8_f1fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f1fc, label %dec_label_pc_f170, label %dec_label_pc_f204

dec_label_pc_f204:                                ; preds = %bb1339
  %v2_f204 = icmp ugt i32 %v1_f174, 213
  store i1 %v2_f204, i1* %cpsr_c.global-to-local, align 1
  %v7_f204 = icmp eq i32 %v1_f174, 214
  store i1 %v7_f204, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f204, label %dec_label_pc_f170, label %bb1340

bb1340:                                           ; preds = %dec_label_pc_f204
  %v3_f208 = icmp ugt i32 %v1_f174, 54
  store i1 %v3_f208, i1* %cpsr_c.global-to-local, align 1
  %v8_f208 = icmp eq i32 %v1_f174, 55
  store i1 %v8_f208, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f208, label %dec_label_pc_f170, label %dec_label_pc_f210

dec_label_pc_f210:                                ; preds = %bb1340
  %v2_f210 = icmp ugt i32 %v1_f174, 214
  store i1 %v2_f210, i1* %cpsr_c.global-to-local, align 1
  %v7_f210 = icmp eq i32 %v1_f174, 215
  store i1 %v7_f210, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f210, label %dec_label_pc_f170, label %dec_label_pc_f218

dec_label_pc_f218:                                ; preds = %dec_label_pc_f210
  %v7_f218 = icmp eq i32 %v1_f174, 192
  %.1930 = zext i1 %v7_f218 to i32
  store i32 %.1930, i32* %r5.global-to-local, align 4
  %v2_f224 = icmp ugt i32 %v1_f188, 167
  store i1 %v2_f224, i1* %cpsr_c.global-to-local, align 1
  %v7_f224 = icmp eq i32 %v1_f188, 168
  store i1 %v7_f224, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f224, label %bb1343, label %dec_label_pc_f230

bb1343:                                           ; preds = %dec_label_pc_f218
  %v2_f218 = icmp ugt i32 %v1_f174, 191
  store i1 %v2_f218, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f218, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f218, label %dec_label_pc_f170, label %dec_label_pc_f230

dec_label_pc_f230:                                ; preds = %dec_label_pc_f218, %bb1343
  %v7_f230 = icmp eq i32 %v1_f174, 146
  %.1931 = zext i1 %v7_f230 to i32
  %v2_f23c = icmp ugt i32 %v1_f188, 16
  store i1 %v2_f23c, i1* %cpsr_c.global-to-local, align 1
  %v7_f23c = icmp eq i32 %v1_f188, 17
  store i1 %v7_f23c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f23c, label %bb1346, label %dec_label_pc_f248

bb1346:                                           ; preds = %dec_label_pc_f230
  %v2_f230 = icmp ugt i32 %v1_f174, 145
  store i1 %v2_f230, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f230, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f230, label %dec_label_pc_f170, label %dec_label_pc_f248

dec_label_pc_f248:                                ; preds = %dec_label_pc_f230, %bb1346
  %v2_f248 = icmp ugt i32 %v1_f188, 79
  store i1 %v2_f248, i1* %cpsr_c.global-to-local, align 1
  %v7_f248 = icmp eq i32 %v1_f188, 80
  %.1932 = zext i1 %v7_f248 to i32
  %v2_f254 = and i32 %.1932, %.1931
  %v4_f254 = icmp eq i32 %v2_f254, 0
  store i1 %v4_f254, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f254, label %dec_label_pc_f25c, label %dec_label_pc_f170

dec_label_pc_f25c:                                ; preds = %dec_label_pc_f248
  %v2_f25c = icmp ugt i32 %v1_f188, 97
  store i1 %v2_f25c, i1* %cpsr_c.global-to-local, align 1
  %v7_f25c = icmp eq i32 %v1_f188, 98
  %.1933 = zext i1 %v7_f25c to i32
  store i32 %.1933, i32* %r8.global-to-local, align 4
  %v2_f268 = and i32 %.1933, %.1931
  %v4_f268 = icmp eq i32 %v2_f268, 0
  store i1 %v4_f268, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f268, label %dec_label_pc_f270, label %dec_label_pc_f170

dec_label_pc_f270:                                ; preds = %dec_label_pc_f25c
  %v2_f270 = icmp ugt i32 %v1_f188, 153
  store i1 %v2_f270, i1* %cpsr_c.global-to-local, align 1
  %v7_f270 = icmp eq i32 %v1_f188, 154
  %.1934 = zext i1 %v7_f270 to i32
  store i32 %.1934, i32* %sl.global-to-local, align 4
  %v2_f27c = and i32 %.1934, %.1931
  %v4_f27c = icmp eq i32 %v2_f27c, 0
  store i1 %v4_f27c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f27c, label %dec_label_pc_f284, label %dec_label_pc_f170

dec_label_pc_f284:                                ; preds = %dec_label_pc_f270
  %v7_f284 = icmp eq i32 %v1_f174, 147
  %.1935 = zext i1 %v7_f284 to i32
  store i32 %.1935, i32* %sb.global-to-local, align 4
  %v2_f290 = icmp ugt i32 %v1_f188, 158
  store i1 %v2_f290, i1* %cpsr_c.global-to-local, align 1
  %v7_f290 = icmp eq i32 %v1_f188, 159
  store i1 %v7_f290, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f290, label %bb1355, label %dec_label_pc_f29c

bb1355:                                           ; preds = %dec_label_pc_f284
  %v2_f284 = icmp ugt i32 %v1_f174, 146
  store i1 %v2_f284, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f284, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f284, label %dec_label_pc_f170, label %dec_label_pc_f29c

dec_label_pc_f29c:                                ; preds = %dec_label_pc_f284, %bb1355
  %v2_f29c = icmp ugt i32 %v1_f188, 113
  %v7_f29c = icmp eq i32 %v1_f188, 114
  %.1936 = zext i1 %v7_f29c to i32
  %v2_f2a8 = icmp ugt i32 %v1_f174, 147
  store i1 %v2_f2a8, i1* %cpsr_c.global-to-local, align 1
  %v7_f2a8 = icmp eq i32 %v1_f174, 148
  store i1 %v7_f2a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f2a8, label %bb1358, label %dec_label_pc_f2b8

bb1358:                                           ; preds = %dec_label_pc_f29c
  store i1 %v2_f29c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f29c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f29c, label %dec_label_pc_f170, label %dec_label_pc_f2b8

dec_label_pc_f2b8:                                ; preds = %dec_label_pc_f29c, %bb1358
  %v7_f2b8 = icmp eq i32 %v1_f174, 150
  %.1937 = zext i1 %v7_f2b8 to i32
  store i32 %.1937, i32* %r4.global-to-local, align 4
  %v2_f2c4 = icmp ugt i32 %v1_f188, 124
  store i1 %v2_f2c4, i1* %cpsr_c.global-to-local, align 1
  %v7_f2c4 = icmp eq i32 %v1_f188, 125
  store i1 %v7_f2c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f2c4, label %bb1361, label %dec_label_pc_f2d0

bb1361:                                           ; preds = %dec_label_pc_f2b8
  %v2_f2b8 = icmp ugt i32 %v1_f174, 149
  store i1 %v2_f2b8, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f2b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f2b8, label %dec_label_pc_f170, label %dec_label_pc_f2d0

dec_label_pc_f2d0:                                ; preds = %dec_label_pc_f2b8, %bb1361
  %v2_f2d0 = icmp ugt i32 %v1_f188, 132
  store i1 %v2_f2d0, i1* %cpsr_c.global-to-local, align 1
  %v7_f2d0 = icmp eq i32 %v1_f188, 133
  store i1 %v7_f2d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f2d0, label %.thread29, label %.thread30

.thread30:                                        ; preds = %dec_label_pc_f2d0
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f2e4

.thread29:                                        ; preds = %dec_label_pc_f2d0
  store i32 %.1937, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f2dc = icmp eq i1 %v7_f2b8, false
  store i1 %v2_f2dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f2dc, label %dec_label_pc_f2e4, label %dec_label_pc_f170

dec_label_pc_f2e4:                                ; preds = %.thread30, %.thread29
  %v2_f2e4 = icmp ugt i32 %v1_f188, 143
  store i1 %v2_f2e4, i1* %cpsr_c.global-to-local, align 1
  %v7_f2e4 = icmp eq i32 %v1_f188, 144
  store i1 %v7_f2e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f2e4, label %.thread33, label %.thread34

.thread34:                                        ; preds = %dec_label_pc_f2e4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f2f8

.thread33:                                        ; preds = %dec_label_pc_f2e4
  store i32 %.1937, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f2f0 = icmp eq i1 %v7_f2b8, false
  store i1 %v2_f2f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f2f0, label %dec_label_pc_f2f8, label %dec_label_pc_f170

dec_label_pc_f2f8:                                ; preds = %.thread34, %.thread33
  %v2_f2f8 = icmp ugt i32 %v1_f188, 148
  store i1 %v2_f2f8, i1* %cpsr_c.global-to-local, align 1
  %v7_f2f8 = icmp eq i32 %v1_f188, 149
  %.1938 = zext i1 %v7_f2f8 to i32
  %v2_f304 = and i32 %.1938, %.1937
  %v4_f304 = icmp eq i32 %v2_f304, 0
  store i1 %v4_f304, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f304, label %dec_label_pc_f30c, label %dec_label_pc_f170

dec_label_pc_f30c:                                ; preds = %dec_label_pc_f2f8
  %v2_f30c = icmp ugt i32 %v1_f188, 156
  store i1 %v2_f30c, i1* %cpsr_c.global-to-local, align 1
  %v7_f30c = icmp eq i32 %v1_f188, 157
  store i1 %v7_f30c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f30c, label %.thread38, label %.thread39

.thread39:                                        ; preds = %dec_label_pc_f30c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f320

.thread38:                                        ; preds = %dec_label_pc_f30c
  store i32 %.1937, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f318 = icmp eq i1 %v7_f2b8, false
  store i1 %v2_f318, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f318, label %dec_label_pc_f320, label %dec_label_pc_f170

dec_label_pc_f320:                                ; preds = %.thread39, %.thread38
  %v2_f320 = icmp ugt i32 %v1_f188, 183
  store i1 %v2_f320, i1* %cpsr_c.global-to-local, align 1
  %v7_f320 = icmp eq i32 %v1_f188, 184
  store i1 %v7_f320, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f320, label %.thread42, label %.thread43

.thread43:                                        ; preds = %dec_label_pc_f320
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f334

.thread42:                                        ; preds = %dec_label_pc_f320
  store i32 %.1937, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f32c = icmp eq i1 %v7_f2b8, false
  store i1 %v2_f32c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f32c, label %dec_label_pc_f334, label %dec_label_pc_f170

dec_label_pc_f334:                                ; preds = %.thread43, %.thread42
  %v2_f334 = icmp ugt i32 %v1_f188, 189
  store i1 %v2_f334, i1* %cpsr_c.global-to-local, align 1
  %v7_f334 = icmp eq i32 %v1_f188, 190
  store i1 %v7_f334, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f334, label %.thread46, label %.thread47

.thread47:                                        ; preds = %dec_label_pc_f334
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f348

.thread46:                                        ; preds = %dec_label_pc_f334
  store i32 %.1937, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f340 = icmp eq i1 %v7_f2b8, false
  store i1 %v2_f340, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f340, label %dec_label_pc_f348, label %dec_label_pc_f170

dec_label_pc_f348:                                ; preds = %.thread47, %.thread46
  %v2_f348 = icmp ugt i32 %v1_f188, 195
  store i1 %v2_f348, i1* %cpsr_c.global-to-local, align 1
  %v7_f348 = icmp eq i32 %v1_f188, 196
  %.1939 = zext i1 %v7_f348 to i32
  store i32 %.1939, i32* %r3.global-to-local, align 4
  %v2_f354 = and i32 %.1939, %.1937
  %v4_f354 = icmp eq i32 %v2_f354, 0
  store i1 %v4_f354, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f354, label %dec_label_pc_f360, label %dec_label_pc_f170

dec_label_pc_f360:                                ; preds = %dec_label_pc_f348
  %v7_f360 = icmp eq i32 %v1_f174, 152
  %.1940 = zext i1 %v7_f360 to i32
  %v2_f36c = icmp ugt i32 %v1_f188, 81
  store i1 %v2_f36c, i1* %cpsr_c.global-to-local, align 1
  %v7_f36c = icmp eq i32 %v1_f188, 82
  store i1 %v7_f36c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f36c, label %bb1368, label %dec_label_pc_f37c

bb1368:                                           ; preds = %dec_label_pc_f360
  %v2_f360 = icmp ugt i32 %v1_f174, 151
  store i1 %v2_f360, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f360, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f360, label %dec_label_pc_f170, label %dec_label_pc_f37c

dec_label_pc_f37c:                                ; preds = %dec_label_pc_f360, %bb1368
  %v2_f37c = icmp ugt i32 %v1_f188, 228
  store i1 %v2_f37c, i1* %cpsr_c.global-to-local, align 1
  %v7_f37c = icmp eq i32 %v1_f188, 229
  %.1941 = zext i1 %v7_f37c to i32
  store i32 %.1941, i32* %r3.global-to-local, align 4
  %v2_f388 = and i32 %.1941, %.1940
  %v4_f388 = icmp eq i32 %v2_f388, 0
  store i1 %v4_f388, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f388, label %dec_label_pc_f394, label %dec_label_pc_f170

dec_label_pc_f394:                                ; preds = %dec_label_pc_f37c
  %v7_f394 = icmp eq i32 %v1_f174, 157
  %.1942 = zext i1 %v7_f394 to i32
  %v2_f3a0 = icmp ugt i32 %v1_f188, 201
  store i1 %v2_f3a0, i1* %cpsr_c.global-to-local, align 1
  %v7_f3a0 = icmp eq i32 %v1_f188, 202
  %storemerge1179 = zext i1 %v7_f3a0 to i32
  store i32 %storemerge1179, i32* %r3.global-to-local, align 4
  %v2_f3ac = and i32 %storemerge1179, %.1942
  %v4_f3ac = icmp eq i32 %v2_f3ac, 0
  store i1 %v4_f3ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f3ac, label %dec_label_pc_f3bc, label %dec_label_pc_f170

dec_label_pc_f3bc:                                ; preds = %dec_label_pc_f394
  store i32 %.1942, i32* %r3.global-to-local, align 4
  %v2_f3c0 = icmp ugt i32 %v1_f188, 216
  store i1 %v2_f3c0, i1* %cpsr_c.global-to-local, align 1
  %v7_f3c0 = icmp eq i32 %v1_f188, 217
  store i1 %v7_f3c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f3c0, label %.thread58, label %.thread59

.thread59:                                        ; preds = %dec_label_pc_f3bc
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f3d4

.thread58:                                        ; preds = %dec_label_pc_f3bc
  store i32 %.1942, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f3cc = icmp eq i1 %v7_f394, false
  store i1 %v2_f3cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f3cc, label %dec_label_pc_f3d4, label %dec_label_pc_f170

dec_label_pc_f3d4:                                ; preds = %.thread59, %.thread58
  %v2_f3d4 = icmp ugt i32 %v1_f174, 160
  store i1 %v2_f3d4, i1* %cpsr_c.global-to-local, align 1
  %v7_f3d4 = icmp eq i32 %v1_f174, 161
  store i1 %v7_f3d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f3d4, label %bb1375, label %dec_label_pc_f3e0

bb1375:                                           ; preds = %dec_label_pc_f3d4
  %v3_f3d8 = icmp ugt i32 %v1_f188, 123
  store i1 %v3_f3d8, i1* %cpsr_c.global-to-local, align 1
  %v8_f3d8 = icmp eq i32 %v1_f188, 124
  store i1 %v8_f3d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f3d8, label %dec_label_pc_f170, label %dec_label_pc_f3e0

dec_label_pc_f3e0:                                ; preds = %dec_label_pc_f3d4, %bb1375
  %v7_f3e0 = icmp eq i32 %v1_f174, 162
  %.1943 = zext i1 %v7_f3e0 to i32
  %v2_f3ec = icmp ugt i32 %v1_f188, 31
  store i1 %v2_f3ec, i1* %cpsr_c.global-to-local, align 1
  %v7_f3ec = icmp eq i32 %v1_f188, 32
  %storemerge1181 = zext i1 %v7_f3ec to i32
  store i32 %storemerge1181, i32* %r3.global-to-local, align 4
  %v2_f3f8 = and i32 %storemerge1181, %.1943
  %v4_f3f8 = icmp eq i32 %v2_f3f8, 0
  store i1 %v4_f3f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f3f8, label %dec_label_pc_f408, label %dec_label_pc_f170

dec_label_pc_f408:                                ; preds = %dec_label_pc_f3e0
  %v7_f408 = icmp eq i32 %v1_f174, 155
  %.1944 = zext i1 %v7_f408 to i32
  %v2_f414 = icmp ugt i32 %v1_f188, 95
  store i1 %v2_f414, i1* %cpsr_c.global-to-local, align 1
  %v7_f414 = icmp eq i32 %v1_f188, 96
  store i1 %v7_f414, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f414, label %bb1382, label %dec_label_pc_f424

bb1382:                                           ; preds = %dec_label_pc_f408
  %v2_f408 = icmp ugt i32 %v1_f174, 154
  store i1 %v2_f408, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f408, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f408, label %dec_label_pc_f170, label %dec_label_pc_f424

dec_label_pc_f424:                                ; preds = %dec_label_pc_f408, %bb1382
  %v2_f424 = and i32 %.1938, %.1944
  %v4_f424 = icmp eq i32 %v2_f424, 0
  store i1 %v4_f424, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f424, label %dec_label_pc_f42c, label %dec_label_pc_f170

dec_label_pc_f42c:                                ; preds = %dec_label_pc_f424
  store i32 %.1944, i32* %r3.global-to-local, align 4
  %v2_f430 = icmp ugt i32 %v1_f188, 154
  store i1 %v2_f430, i1* %cpsr_c.global-to-local, align 1
  %v7_f430 = icmp eq i32 %v1_f188, 155
  store i1 %v7_f430, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f430, label %.thread69, label %.thread70

.thread70:                                        ; preds = %dec_label_pc_f42c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f444

.thread69:                                        ; preds = %dec_label_pc_f42c
  store i32 %.1944, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f43c = icmp eq i1 %v7_f408, false
  store i1 %v2_f43c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f43c, label %dec_label_pc_f444, label %dec_label_pc_f170

dec_label_pc_f444:                                ; preds = %.thread70, %.thread69
  store i32 %.1944, i32* %r3.global-to-local, align 4
  %v2_f448 = icmp ugt i32 %v1_f188, 177
  store i1 %v2_f448, i1* %cpsr_c.global-to-local, align 1
  %v7_f448 = icmp eq i32 %v1_f188, 178
  store i1 %v7_f448, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f448, label %.thread73, label %.thread74

.thread74:                                        ; preds = %dec_label_pc_f444
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f45c

.thread73:                                        ; preds = %dec_label_pc_f444
  store i32 %.1944, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f454 = icmp eq i1 %v7_f408, false
  store i1 %v2_f454, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f454, label %dec_label_pc_f45c, label %dec_label_pc_f170

dec_label_pc_f45c:                                ; preds = %.thread74, %.thread73
  %v7_f45c = icmp eq i32 %v1_f174, 164
  %.1945 = zext i1 %v7_f45c to i32
  %v2_f468 = icmp ugt i32 %v1_f188, 157
  store i1 %v2_f468, i1* %cpsr_c.global-to-local, align 1
  %v7_f468 = icmp eq i32 %v1_f188, 158
  store i1 %v7_f468, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f468, label %bb1385, label %dec_label_pc_f478

bb1385:                                           ; preds = %dec_label_pc_f45c
  %v2_f45c = icmp ugt i32 %v1_f174, 163
  store i1 %v2_f45c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f45c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f45c, label %dec_label_pc_f170, label %dec_label_pc_f478

dec_label_pc_f478:                                ; preds = %dec_label_pc_f45c, %bb1385
  %v2_f478 = icmp ugt i32 %v1_f174, 155
  store i1 %v2_f478, i1* %cpsr_c.global-to-local, align 1
  %v7_f478 = icmp eq i32 %v1_f174, 156
  store i1 %v7_f478, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f478, label %bb1386, label %dec_label_pc_f484

bb1386:                                           ; preds = %dec_label_pc_f478
  %v3_f47c = icmp ugt i32 %v1_f188, 8
  store i1 %v3_f47c, i1* %cpsr_c.global-to-local, align 1
  %v8_f47c = icmp eq i32 %v1_f188, 9
  store i1 %v8_f47c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f47c, label %dec_label_pc_f170, label %dec_label_pc_f484

dec_label_pc_f484:                                ; preds = %dec_label_pc_f478, %bb1386
  %v7_f484 = icmp eq i32 %v1_f174, 167
  %.1946 = zext i1 %v7_f484 to i32
  store i32 %.1946, i32* %r3.global-to-local, align 4
  %v2_f490 = icmp ugt i32 %v1_f188, 43
  store i1 %v2_f490, i1* %cpsr_c.global-to-local, align 1
  %v7_f490 = icmp eq i32 %v1_f188, 44
  store i1 %v7_f490, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f490, label %bb1389, label %dec_label_pc_f4a0

bb1389:                                           ; preds = %dec_label_pc_f484
  %v2_f484 = icmp ugt i32 %v1_f174, 166
  store i1 %v2_f484, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f484, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f484, label %dec_label_pc_f170, label %dec_label_pc_f4a0

dec_label_pc_f4a0:                                ; preds = %dec_label_pc_f484, %bb1389
  %v2_f4a0 = icmp ugt i32 %v1_f188, 67
  %v7_f4a0 = icmp eq i32 %v1_f188, 68
  %.1947 = zext i1 %v7_f4a0 to i32
  %v2_f4ac = icmp ugt i32 %v1_f174, 167
  store i1 %v2_f4ac, i1* %cpsr_c.global-to-local, align 1
  %v7_f4ac = icmp eq i32 %v1_f174, 168
  %storemerge1186 = zext i1 %v7_f4ac to i32
  store i32 %storemerge1186, i32* %r3.global-to-local, align 4
  %v2_f4b8 = and i32 %.1947, %storemerge1186
  %v4_f4b8 = icmp eq i32 %v2_f4b8, 0
  store i1 %v4_f4b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f4b8, label %dec_label_pc_f4c4, label %dec_label_pc_f170

dec_label_pc_f4c4:                                ; preds = %dec_label_pc_f4a0
  %v2_f4c4 = icmp ugt i32 %v1_f188, 84
  store i1 %v2_f4c4, i1* %cpsr_c.global-to-local, align 1
  %v7_f4c4 = icmp eq i32 %v1_f188, 85
  %.1948 = zext i1 %v7_f4c4 to i32
  %v2_f4d0 = and i32 %.1948, %storemerge1186
  %v4_f4d0 = icmp eq i32 %v2_f4d0, 0
  store i1 %v4_f4d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f4d0, label %dec_label_pc_f4dc, label %dec_label_pc_f170

dec_label_pc_f4dc:                                ; preds = %dec_label_pc_f4c4
  %v2_f4dc = icmp ugt i32 %v1_f188, 101
  store i1 %v2_f4dc, i1* %cpsr_c.global-to-local, align 1
  %v7_f4dc = icmp eq i32 %v1_f188, 102
  store i1 %v7_f4dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f4dc, label %.thread89, label %.thread90

.thread90:                                        ; preds = %dec_label_pc_f4dc
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f4f0

.thread89:                                        ; preds = %dec_label_pc_f4dc
  store i32 %storemerge1186, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f4e8 = icmp eq i1 %v7_f4ac, false
  store i1 %v2_f4e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f4e8, label %dec_label_pc_f4f0, label %dec_label_pc_f170

dec_label_pc_f4f0:                                ; preds = %.thread90, %.thread89
  %v2_f4f0 = icmp ugt i32 %v1_f188, 58
  %v7_f4f0 = icmp eq i32 %v1_f188, 59
  %.1949 = zext i1 %v7_f4f0 to i32
  store i32 %.1949, i32* %r3.global-to-local, align 4
  %v2_f4fc = icmp ugt i32 %v1_f174, 202
  store i1 %v2_f4fc, i1* %cpsr_c.global-to-local, align 1
  %v7_f4fc = icmp eq i32 %v1_f174, 203
  store i1 %v7_f4fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f4fc, label %bb1398, label %dec_label_pc_f50c

bb1398:                                           ; preds = %dec_label_pc_f4f0
  store i1 %v2_f4f0, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f4f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f4f0, label %dec_label_pc_f170, label %dec_label_pc_f50c

dec_label_pc_f50c:                                ; preds = %dec_label_pc_f4f0, %bb1398
  %v2_f50c = icmp ugt i32 %v1_f188, 33
  %v7_f50c = icmp eq i32 %v1_f188, 34
  %.1950 = zext i1 %v7_f50c to i32
  %v2_f518 = icmp ugt i32 %v1_f174, 203
  store i1 %v2_f518, i1* %cpsr_c.global-to-local, align 1
  %v7_f518 = icmp eq i32 %v1_f174, 204
  store i1 %v7_f518, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f518, label %bb1401, label %dec_label_pc_f528

bb1401:                                           ; preds = %dec_label_pc_f50c
  store i1 %v2_f50c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f50c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f50c, label %dec_label_pc_f170, label %dec_label_pc_f528

dec_label_pc_f528:                                ; preds = %dec_label_pc_f50c, %bb1401
  %v7_f528 = icmp eq i32 %v1_f174, 207
  %.1951 = zext i1 %v7_f528 to i32
  %v2_f534 = icmp ugt i32 %v1_f188, 29
  store i1 %v2_f534, i1* %cpsr_c.global-to-local, align 1
  %v7_f534 = icmp eq i32 %v1_f188, 30
  store i1 %v7_f534, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f534, label %bb1404, label %dec_label_pc_f544

bb1404:                                           ; preds = %dec_label_pc_f528
  %v2_f528 = icmp ugt i32 %v1_f174, 206
  store i1 %v2_f528, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f528, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f528, label %dec_label_pc_f170, label %dec_label_pc_f544

dec_label_pc_f544:                                ; preds = %dec_label_pc_f528, %bb1404
  %v7_f544 = icmp eq i32 %v1_f188, 55
  %.1952 = zext i1 %v7_f544 to i32
  %v2_f550 = icmp ugt i32 %v1_f174, 116
  store i1 %v2_f550, i1* %cpsr_c.global-to-local, align 1
  %v7_f550 = icmp eq i32 %v1_f174, 117
  %storemerge1192 = zext i1 %v7_f550 to i32
  store i32 %storemerge1192, i32* %r3.global-to-local, align 4
  %v2_f55c = and i32 %.1952, %storemerge1192
  %v4_f55c = icmp eq i32 %v2_f55c, 0
  store i1 %v4_f55c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f55c, label %dec_label_pc_f568, label %dec_label_pc_f170

dec_label_pc_f568:                                ; preds = %dec_label_pc_f544
  %v2_f568 = icmp ugt i32 %v1_f188, 55
  store i1 %v2_f568, i1* %cpsr_c.global-to-local, align 1
  %v7_f568 = icmp eq i32 %v1_f188, 56
  %.1953 = zext i1 %v7_f568 to i32
  %v2_f574 = and i32 %.1953, %storemerge1192
  %v4_f574 = icmp eq i32 %v2_f574, 0
  store i1 %v4_f574, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f574, label %dec_label_pc_f580, label %dec_label_pc_f170

dec_label_pc_f580:                                ; preds = %dec_label_pc_f568
  %v7_f580 = icmp eq i32 %v1_f174, 80
  %.1954 = zext i1 %v7_f580 to i32
  store i32 %.1954, i32* %r3.global-to-local, align 4
  %v2_f58c = icmp ugt i32 %v1_f188, 234
  store i1 %v2_f58c, i1* %cpsr_c.global-to-local, align 1
  %v7_f58c = icmp eq i32 %v1_f188, 235
  store i1 %v7_f58c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f58c, label %bb1413, label %dec_label_pc_f59c

bb1413:                                           ; preds = %dec_label_pc_f580
  %v2_f580 = icmp ugt i32 %v1_f174, 79
  store i1 %v2_f580, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f580, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f580, label %dec_label_pc_f170, label %dec_label_pc_f59c

dec_label_pc_f59c:                                ; preds = %dec_label_pc_f580, %bb1413
  store i32 %.1951, i32* %r3.global-to-local, align 4
  %v2_f5a0 = icmp ugt i32 %v1_f188, 119
  store i1 %v2_f5a0, i1* %cpsr_c.global-to-local, align 1
  %v7_f5a0 = icmp eq i32 %v1_f188, 120
  store i1 %v7_f5a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f5a0, label %.thread112, label %.thread113

.thread113:                                       ; preds = %dec_label_pc_f59c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f5b4

.thread112:                                       ; preds = %dec_label_pc_f59c
  store i32 %.1951, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f5ac = icmp eq i1 %v7_f528, false
  store i1 %v2_f5ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f5ac, label %dec_label_pc_f5b4, label %dec_label_pc_f170

dec_label_pc_f5b4:                                ; preds = %.thread113, %.thread112
  %v7_f5b4 = icmp eq i32 %v1_f174, 209
  %.1955 = zext i1 %v7_f5b4 to i32
  %v2_f5c0 = icmp ugt i32 %v1_f188, 34
  store i1 %v2_f5c0, i1* %cpsr_c.global-to-local, align 1
  %v7_f5c0 = icmp eq i32 %v1_f188, 35
  store i1 %v7_f5c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f5c0, label %bb1416, label %dec_label_pc_f5d0

bb1416:                                           ; preds = %dec_label_pc_f5b4
  %v2_f5b4 = icmp ugt i32 %v1_f174, 208
  store i1 %v2_f5b4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f5b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f5b4, label %dec_label_pc_f170, label %dec_label_pc_f5d0

dec_label_pc_f5d0:                                ; preds = %dec_label_pc_f5b4, %bb1416
  %v7_f5d0 = icmp eq i32 %v1_f174, 64
  %.1956 = zext i1 %v7_f5d0 to i32
  %v2_f5dc = icmp ugt i32 %v1_f188, 69
  store i1 %v2_f5dc, i1* %cpsr_c.global-to-local, align 1
  %v7_f5dc = icmp eq i32 %v1_f188, 70
  store i1 %v7_f5dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f5dc, label %bb1419, label %dec_label_pc_f5ec

bb1419:                                           ; preds = %dec_label_pc_f5d0
  %v2_f5d0 = icmp ugt i32 %v1_f174, 63
  store i1 %v2_f5d0, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f5d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f5d0, label %dec_label_pc_f170, label %dec_label_pc_f5ec

dec_label_pc_f5ec:                                ; preds = %dec_label_pc_f5d0, %bb1419
  %v7_f5ec = icmp eq i32 %v1_f174, 172
  %.1957 = zext i1 %v7_f5ec to i32
  store i32 %.1957, i32* %r3.global-to-local, align 4
  %v2_f5f8 = icmp ugt i32 %v1_f188, 14
  store i1 %v2_f5f8, i1* %cpsr_c.global-to-local, align 1
  %v7_f5f8 = icmp eq i32 %v1_f188, 15
  store i1 %v7_f5f8, i1* %cpsr_z.global-to-local, align 1
  %v2_f5fc = xor i1 %v2_f5f8, true
  %v3_f5fc = or i1 %v7_f5f8, %v2_f5fc
  br i1 %v3_f5fc, label %bb1422, label %bb1423

bb1422:                                           ; preds = %dec_label_pc_f5ec
  br label %bb1423

bb1423:                                           ; preds = %dec_label_pc_f5ec, %bb1422
  %v1_f604764 = phi i32 [ %.1955, %dec_label_pc_f5ec ], [ 0, %bb1422 ]
  %v2_f600 = xor i1 %v7_f5f8, true
  %v3_f600 = and i1 %v2_f5f8, %v2_f600
  br i1 %v3_f600, label %bb1424, label %bb1425

bb1424:                                           ; preds = %bb1423
  br label %bb1425

bb1425:                                           ; preds = %bb1423, %bb1424
  %v0_fbd8 = phi i32 [ %v1_f604764, %bb1423 ], [ 1, %bb1424 ]
  %v2_f604 = and i32 %v0_fbd8, %.1957
  %v4_f604 = icmp eq i32 %v2_f604, 0
  store i1 %v4_f604, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f604, label %dec_label_pc_f61c, label %dec_label_pc_f614

dec_label_pc_f614:                                ; preds = %bb1425
  %v2_f614 = icmp ugt i32 %v1_f188, 30
  store i1 %v2_f614, i1* %cpsr_c.global-to-local, align 1
  %v7_f614 = icmp eq i32 %v1_f188, 31
  store i1 %v7_f614, i1* %cpsr_z.global-to-local, align 1
  %v2_f618 = xor i1 %v2_f614, true
  %v3_f618 = or i1 %v7_f614, %v2_f618
  br i1 %v3_f618, label %dec_label_pc_f170, label %dec_label_pc_f61c

dec_label_pc_f61c:                                ; preds = %dec_label_pc_f614, %bb1425
  %v2_f61c = icmp ugt i32 %v1_f188, 62
  store i1 %v2_f61c, i1* %cpsr_c.global-to-local, align 1
  %v7_f61c = icmp eq i32 %v1_f188, 63
  store i1 %v7_f61c, i1* %cpsr_z.global-to-local, align 1
  %v2_f620 = xor i1 %v2_f61c, true
  %v3_f620 = or i1 %v7_f61c, %v2_f620
  br i1 %v3_f620, label %bb1426, label %bb1427

bb1426:                                           ; preds = %dec_label_pc_f61c
  br label %bb1427

bb1427:                                           ; preds = %dec_label_pc_f61c, %bb1426
  %v0_f628766 = phi i32 [ %.1956, %dec_label_pc_f61c ], [ 0, %bb1426 ]
  %v2_f624 = xor i1 %v7_f61c, true
  %v3_f624 = and i1 %v2_f61c, %v2_f624
  br i1 %v3_f624, label %bb1428, label %bb1429

bb1428:                                           ; preds = %bb1427
  br label %bb1429

bb1429:                                           ; preds = %bb1427, %bb1428
  %v0_10824 = phi i32 [ %v0_f628766, %bb1427 ], [ 1, %bb1428 ]
  store i32 %v0_10824, i32* %r3.global-to-local, align 4
  %v2_f62c = icmp ugt i32 %v1_f174, 99
  store i1 %v2_f62c, i1* %cpsr_c.global-to-local, align 1
  %v7_f62c = icmp eq i32 %v1_f174, 100
  store i1 %v7_f62c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f62c, label %bb1430, label %.thread1116

.thread1116:                                      ; preds = %bb1429
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f64c

bb1430:                                           ; preds = %bb1429
  %v2_f634 = urem i32 %v0_10824, 2
  store i32 %v2_f634, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f638 = icmp eq i32 %v2_f634, 0
  store i1 %v2_f638, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f638, label %dec_label_pc_f64c, label %dec_label_pc_f644

dec_label_pc_f644:                                ; preds = %bb1430
  %v2_f644 = icmp ugt i32 %v1_f188, 125
  store i1 %v2_f644, i1* %cpsr_c.global-to-local, align 1
  %v7_f644 = icmp eq i32 %v1_f188, 126
  store i1 %v7_f644, i1* %cpsr_z.global-to-local, align 1
  %v2_f648 = xor i1 %v2_f644, true
  %v3_f648 = or i1 %v7_f644, %v2_f648
  br i1 %v3_f648, label %dec_label_pc_f170, label %dec_label_pc_f64c

dec_label_pc_f64c:                                ; preds = %.thread1116, %dec_label_pc_f644, %bb1430
  %v7_f64c = icmp eq i32 %v1_f174, 169
  %.1958 = zext i1 %v7_f64c to i32
  store i32 %.1958, i32* %r3.global-to-local, align 4
  %v2_f658 = icmp ugt i32 %v1_f188, 253
  store i1 %v2_f658, i1* %cpsr_c.global-to-local, align 1
  %v7_f658 = icmp eq i32 %v1_f188, 254
  %storemerge1199 = zext i1 %v7_f658 to i32
  %v2_f664 = and i32 %storemerge1199, %.1958
  %v4_f664 = icmp eq i32 %v2_f664, 0
  store i1 %v4_f664, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f664, label %dec_label_pc_f674, label %dec_label_pc_f170

dec_label_pc_f674:                                ; preds = %dec_label_pc_f64c
  %v7_f674 = icmp eq i32 %v1_f174, 198
  %.1959 = zext i1 %v7_f674 to i32
  store i32 %.1959, i32* %r3.global-to-local, align 4
  store i1 %v2_f23c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f23c, i1* %cpsr_z.global-to-local, align 1
  %v2_f688 = xor i1 %v2_f23c, true
  %v3_f688 = or i1 %v7_f23c, %v2_f688
  br i1 %v3_f688, label %bb1437, label %bb1438

bb1437:                                           ; preds = %dec_label_pc_f674
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1438

bb1438:                                           ; preds = %dec_label_pc_f674, %bb1437
  %v4_f68c = phi i32 [ %.1959, %dec_label_pc_f674 ], [ 0, %bb1437 ]
  %v2_f68c = xor i1 %v7_f23c, true
  %v3_f68c = and i1 %v2_f23c, %v2_f68c
  br i1 %v3_f68c, label %bb1439, label %thread-pre-split129

bb1439:                                           ; preds = %bb1438
  store i32 %v4_f68c, i32* %r3.global-to-local, align 4
  br label %thread-pre-split129

thread-pre-split129:                              ; preds = %bb1438, %bb1439
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f690 = icmp eq i32 %v4_f68c, 0
  store i1 %v2_f690, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f690, label %dec_label_pc_f6a4, label %dec_label_pc_f69c

dec_label_pc_f69c:                                ; preds = %thread-pre-split129
  %v2_f69c = icmp ugt i32 %v1_f188, 18
  store i1 %v2_f69c, i1* %cpsr_c.global-to-local, align 1
  %v7_f69c = icmp eq i32 %v1_f188, 19
  store i1 %v7_f69c, i1* %cpsr_z.global-to-local, align 1
  %v2_f6a0 = xor i1 %v2_f69c, true
  %v3_f6a0 = or i1 %v7_f69c, %v2_f6a0
  br i1 %v3_f6a0, label %dec_label_pc_f170, label %dec_label_pc_f6a4

dec_label_pc_f6a4:                                ; preds = %dec_label_pc_f69c, %thread-pre-split129
  store i32 %.1956, i32* %r3.global-to-local, align 4
  store i1 %v2_f4a0, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f4a0, i1* %cpsr_z.global-to-local, align 1
  %v2_f6ac = xor i1 %v2_f4a0, true
  %v3_f6ac = or i1 %v7_f4a0, %v2_f6ac
  br i1 %v3_f6ac, label %bb1440, label %bb1441

bb1440:                                           ; preds = %dec_label_pc_f6a4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1441

bb1441:                                           ; preds = %dec_label_pc_f6a4, %bb1440
  %v4_f6b0 = phi i32 [ %.1956, %dec_label_pc_f6a4 ], [ 0, %bb1440 ]
  %v2_f6b0 = xor i1 %v7_f4a0, true
  %v3_f6b0 = and i1 %v2_f4a0, %v2_f6b0
  br i1 %v3_f6b0, label %bb1442, label %thread-pre-split130

bb1442:                                           ; preds = %bb1441
  store i32 %v4_f6b0, i32* %r3.global-to-local, align 4
  br label %thread-pre-split130

thread-pre-split130:                              ; preds = %bb1441, %bb1442
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f6b4 = icmp eq i32 %v4_f6b0, 0
  store i1 %v2_f6b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f6b4, label %dec_label_pc_f6c4, label %dec_label_pc_f6bc

dec_label_pc_f6bc:                                ; preds = %thread-pre-split130
  %v2_f6bc = icmp ugt i32 %v1_f188, 225
  store i1 %v2_f6bc, i1* %cpsr_c.global-to-local, align 1
  %v7_f6bc = icmp eq i32 %v1_f188, 226
  store i1 %v7_f6bc, i1* %cpsr_z.global-to-local, align 1
  %v2_f6c0 = xor i1 %v2_f6bc, true
  %v3_f6c0 = or i1 %v7_f6bc, %v2_f6c0
  br i1 %v3_f6c0, label %dec_label_pc_f170, label %dec_label_pc_f6c4

dec_label_pc_f6c4:                                ; preds = %dec_label_pc_f6bc, %thread-pre-split130
  store i1 %v2_f50c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f50c, i1* %cpsr_z.global-to-local, align 1
  %v2_f6c8 = xor i1 %v2_f50c, true
  %v3_f6c8 = or i1 %v7_f50c, %v2_f6c8
  br i1 %v3_f6c8, label %bb1443, label %bb1444

bb1443:                                           ; preds = %dec_label_pc_f6c4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1444

bb1444:                                           ; preds = %dec_label_pc_f6c4, %bb1443
  %v0_f6d0774 = phi i32 [ %v4_f6b0, %dec_label_pc_f6c4 ], [ 0, %bb1443 ]
  %v2_f6cc = xor i1 %v7_f50c, true
  %v3_f6cc = and i1 %v2_f50c, %v2_f6cc
  br i1 %v3_f6cc, label %bb1445, label %bb1446

bb1445:                                           ; preds = %bb1444
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1446

bb1446:                                           ; preds = %bb1444, %bb1445
  %v0_f6d0 = phi i32 [ %v0_f6d0774, %bb1444 ], [ 1, %bb1445 ]
  %v2_f6d4 = icmp ugt i32 %v1_f174, 127
  store i1 %v2_f6d4, i1* %cpsr_c.global-to-local, align 1
  %v7_f6d4 = icmp eq i32 %v1_f174, 128
  store i1 %v7_f6d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f6d4, label %.thread131, label %.thread132

.thread132:                                       ; preds = %bb1446
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f6f0

.thread131:                                       ; preds = %bb1446
  %v2_f6dc = urem i32 %v0_f6d0, 2
  store i32 %v2_f6dc, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f6e0 = icmp eq i32 %v2_f6dc, 0
  store i1 %v2_f6e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f6e0, label %dec_label_pc_f6f0, label %dec_label_pc_f6e8

dec_label_pc_f6e8:                                ; preds = %.thread131
  %v2_f6e8 = icmp ugt i32 %v1_f188, 235
  store i1 %v2_f6e8, i1* %cpsr_c.global-to-local, align 1
  %v7_f6e8 = icmp eq i32 %v1_f188, 236
  store i1 %v7_f6e8, i1* %cpsr_z.global-to-local, align 1
  %v2_f6ec = xor i1 %v2_f6e8, true
  %v3_f6ec = or i1 %v7_f6e8, %v2_f6ec
  br i1 %v3_f6ec, label %dec_label_pc_f170, label %dec_label_pc_f6f0

dec_label_pc_f6f0:                                ; preds = %.thread132, %dec_label_pc_f6e8, %.thread131
  %v7_f6f0 = icmp eq i32 %v1_f174, 129
  %.1960 = zext i1 %v7_f6f0 to i32
  store i32 %.1960, i32* %r3.global-to-local, align 4
  %v2_f6fc = icmp ugt i32 %v1_f188, 20
  store i1 %v2_f6fc, i1* %cpsr_c.global-to-local, align 1
  %v7_f6fc = icmp eq i32 %v1_f188, 21
  store i1 %v7_f6fc, i1* %cpsr_z.global-to-local, align 1
  %v2_f700 = xor i1 %v2_f6fc, true
  %v3_f700 = or i1 %v7_f6fc, %v2_f700
  br i1 %v3_f700, label %.thread137, label %bb1449

.thread137:                                       ; preds = %dec_label_pc_f6f0
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f714

bb1449:                                           ; preds = %dec_label_pc_f6f0
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f704 = icmp eq i1 %v7_f6f0, false
  store i1 %v2_f704, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f704, label %dec_label_pc_f714, label %dec_label_pc_f70c

dec_label_pc_f70c:                                ; preds = %bb1449
  %v2_f70c = icmp eq i32 %v1_f188, 255
  store i1 %v2_f70c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_f70c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f70c, label %dec_label_pc_f714, label %dec_label_pc_f170

dec_label_pc_f714:                                ; preds = %.thread137, %dec_label_pc_f70c, %bb1449
  %v7_f714 = icmp eq i32 %v1_f174, 130
  %.1961 = zext i1 %v7_f714 to i32
  store i32 %.1961, i32* %r3.global-to-local, align 4
  %v2_f720 = icmp ugt i32 %v1_f188, 38
  store i1 %v2_f720, i1* %cpsr_c.global-to-local, align 1
  %v7_f720 = icmp eq i32 %v1_f188, 39
  store i1 %v7_f720, i1* %cpsr_z.global-to-local, align 1
  %v2_f724 = xor i1 %v2_f720, true
  %v3_f724 = or i1 %v7_f720, %v2_f724
  br i1 %v3_f724, label %.thread142, label %bb1452

.thread142:                                       ; preds = %dec_label_pc_f714
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f738

bb1452:                                           ; preds = %dec_label_pc_f714
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f728 = icmp eq i1 %v7_f714, false
  store i1 %v2_f728, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f728, label %dec_label_pc_f738, label %dec_label_pc_f730

dec_label_pc_f730:                                ; preds = %bb1452
  %v2_f730 = icmp ugt i32 %v1_f188, 166
  store i1 %v2_f730, i1* %cpsr_c.global-to-local, align 1
  %v7_f730 = icmp eq i32 %v1_f188, 167
  store i1 %v7_f730, i1* %cpsr_z.global-to-local, align 1
  %v2_f734 = xor i1 %v2_f730, true
  %v3_f734 = or i1 %v7_f730, %v2_f734
  br i1 %v3_f734, label %dec_label_pc_f170, label %dec_label_pc_f738

dec_label_pc_f738:                                ; preds = %.thread142, %dec_label_pc_f730, %bb1452
  %v2_f738 = icmp ugt i32 %v1_f188, 1
  store i1 %v2_f738, i1* %cpsr_c.global-to-local, align 1
  %v7_f738 = icmp eq i32 %v1_f188, 2
  store i1 %v7_f738, i1* %cpsr_z.global-to-local, align 1
  %v2_f73c = xor i1 %v2_f738, true
  %v3_f73c = or i1 %v7_f738, %v2_f73c
  br i1 %v3_f73c, label %bb1453, label %bb1454

bb1453:                                           ; preds = %dec_label_pc_f738
  br label %bb1454

bb1454:                                           ; preds = %dec_label_pc_f738, %bb1453
  %v1_f74c779 = phi i32 [ %.1959, %dec_label_pc_f738 ], [ 0, %bb1453 ]
  %v2_f740 = xor i1 %v7_f738, true
  %v3_f740 = and i1 %v2_f738, %v2_f740
  br i1 %v3_f740, label %bb1455, label %bb1456

bb1455:                                           ; preds = %bb1454
  br label %bb1456

bb1456:                                           ; preds = %bb1454, %bb1455
  %v1_f768 = phi i32 [ %v1_f74c779, %bb1454 ], [ 1, %bb1455 ]
  %v2_f744 = icmp ugt i32 %v1_f174, 130
  store i1 %v2_f744, i1* %cpsr_c.global-to-local, align 1
  %v7_f744 = icmp eq i32 %v1_f174, 131
  store i1 %v7_f744, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f744, label %.thread145, label %.thread146

.thread146:                                       ; preds = %bb1456
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f760

.thread145:                                       ; preds = %bb1456
  %v2_f74c = urem i32 %v1_f768, 2
  store i32 %v2_f74c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f750 = icmp eq i32 %v2_f74c, 0
  store i1 %v2_f750, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f750, label %dec_label_pc_f760, label %dec_label_pc_f758

dec_label_pc_f758:                                ; preds = %.thread145
  %v2_f758 = icmp ugt i32 %v1_f188, 249
  store i1 %v2_f758, i1* %cpsr_c.global-to-local, align 1
  %v7_f758 = icmp eq i32 %v1_f188, 250
  store i1 %v7_f758, i1* %cpsr_z.global-to-local, align 1
  %v2_f75c = xor i1 %v2_f758, true
  %v3_f75c = or i1 %v7_f758, %v2_f75c
  br i1 %v3_f75c, label %dec_label_pc_f170, label %dec_label_pc_f760

dec_label_pc_f760:                                ; preds = %.thread146, %dec_label_pc_f758, %.thread145
  %v2_f760 = icmp ugt i32 %v1_f174, 131
  store i1 %v2_f760, i1* %cpsr_c.global-to-local, align 1
  %v7_f760 = icmp eq i32 %v1_f174, 132
  store i1 %v7_f760, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f760, label %.thread149, label %.thread150

.thread150:                                       ; preds = %dec_label_pc_f760
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f77c

.thread149:                                       ; preds = %dec_label_pc_f760
  %v2_f768 = urem i32 %v1_f768, 2
  store i32 %v2_f768, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f76c = icmp eq i32 %v2_f768, 0
  store i1 %v2_f76c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f76c, label %dec_label_pc_f77c, label %dec_label_pc_f774

dec_label_pc_f774:                                ; preds = %.thread149
  %v2_f774 = icmp ugt i32 %v1_f188, 249
  store i1 %v2_f774, i1* %cpsr_c.global-to-local, align 1
  %v7_f774 = icmp eq i32 %v1_f188, 250
  store i1 %v7_f774, i1* %cpsr_z.global-to-local, align 1
  %v2_f778 = xor i1 %v2_f774, true
  %v3_f778 = or i1 %v7_f774, %v2_f778
  br i1 %v3_f778, label %dec_label_pc_f170, label %dec_label_pc_f77c

dec_label_pc_f77c:                                ; preds = %.thread150, %dec_label_pc_f774, %.thread149
  %v2_f77c = icmp ugt i32 %v1_f188, 3
  store i1 %v2_f77c, i1* %cpsr_c.global-to-local, align 1
  %v7_f77c = icmp eq i32 %v1_f188, 4
  store i1 %v7_f77c, i1* %cpsr_z.global-to-local, align 1
  %v2_f780 = xor i1 %v2_f77c, true
  %v3_f780 = or i1 %v7_f77c, %v2_f780
  br i1 %v3_f780, label %bb1457, label %bb1458

bb1457:                                           ; preds = %dec_label_pc_f77c
  br label %bb1458

bb1458:                                           ; preds = %dec_label_pc_f77c, %bb1457
  %v1_f790781 = phi i32 [ %v1_f768, %dec_label_pc_f77c ], [ 0, %bb1457 ]
  %v2_f784 = xor i1 %v7_f77c, true
  %v3_f784 = and i1 %v2_f77c, %v2_f784
  br i1 %v3_f784, label %bb1459, label %bb1460

bb1459:                                           ; preds = %bb1458
  br label %bb1460

bb1460:                                           ; preds = %bb1458, %bb1459
  %v1_f9a8 = phi i32 [ %v1_f790781, %bb1458 ], [ 1, %bb1459 ]
  %v2_f788 = icmp ugt i32 %v1_f174, 133
  store i1 %v2_f788, i1* %cpsr_c.global-to-local, align 1
  %v7_f788 = icmp eq i32 %v1_f174, 134
  store i1 %v7_f788, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f788, label %.thread153, label %.thread154

.thread154:                                       ; preds = %bb1460
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f7a4

.thread153:                                       ; preds = %bb1460
  %v2_f790 = urem i32 %v1_f9a8, 2
  store i32 %v2_f790, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f794 = icmp eq i32 %v2_f790, 0
  store i1 %v2_f794, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f794, label %dec_label_pc_f7a4, label %dec_label_pc_f79c

dec_label_pc_f79c:                                ; preds = %.thread153
  %v2_f79c = icmp ugt i32 %v1_f188, 233
  store i1 %v2_f79c, i1* %cpsr_c.global-to-local, align 1
  %v7_f79c = icmp eq i32 %v1_f188, 234
  store i1 %v7_f79c, i1* %cpsr_z.global-to-local, align 1
  %v2_f7a0 = xor i1 %v2_f79c, true
  %v3_f7a0 = or i1 %v7_f79c, %v2_f7a0
  br i1 %v3_f7a0, label %dec_label_pc_f170, label %dec_label_pc_f7a4

dec_label_pc_f7a4:                                ; preds = %.thread154, %dec_label_pc_f79c, %.thread153
  %v7_f7a4 = icmp eq i32 %v1_f174, 136
  %.1962 = zext i1 %v7_f7a4 to i32
  store i32 %.1962, i32* %r3.global-to-local, align 4
  %v2_f7b0 = icmp ugt i32 %v1_f188, 175
  store i1 %v2_f7b0, i1* %cpsr_c.global-to-local, align 1
  %v7_f7b0 = icmp eq i32 %v1_f188, 176
  store i1 %v7_f7b0, i1* %cpsr_z.global-to-local, align 1
  %v2_f7b4 = xor i1 %v2_f7b0, true
  %v3_f7b4 = or i1 %v7_f7b0, %v2_f7b4
  br i1 %v3_f7b4, label %.thread159, label %bb1463

.thread159:                                       ; preds = %dec_label_pc_f7a4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f7c8

bb1463:                                           ; preds = %dec_label_pc_f7a4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f7b8 = icmp eq i1 %v7_f7a4, false
  store i1 %v2_f7b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f7b8, label %dec_label_pc_f7c8, label %dec_label_pc_f7c0

dec_label_pc_f7c0:                                ; preds = %bb1463
  %v2_f7c0 = icmp ugt i32 %v1_f188, 221
  store i1 %v2_f7c0, i1* %cpsr_c.global-to-local, align 1
  %v7_f7c0 = icmp eq i32 %v1_f188, 222
  store i1 %v7_f7c0, i1* %cpsr_z.global-to-local, align 1
  %v2_f7c4 = xor i1 %v2_f7c0, true
  %v3_f7c4 = or i1 %v7_f7c0, %v2_f7c4
  br i1 %v3_f7c4, label %dec_label_pc_f170, label %dec_label_pc_f7c8

dec_label_pc_f7c8:                                ; preds = %.thread159, %dec_label_pc_f7c0, %bb1463
  %v7_f7c8 = icmp eq i32 %v1_f174, 138
  %.1963 = zext i1 %v7_f7c8 to i32
  store i32 %.1963, i32* %r3.global-to-local, align 4
  %v2_f7d8 = icmp ugt i32 %v1_f188, 11
  store i1 %v2_f7d8, i1* %cpsr_c.global-to-local, align 1
  %v7_f7d8 = icmp eq i32 %v1_f188, 12
  store i1 %v7_f7d8, i1* %cpsr_z.global-to-local, align 1
  %v2_f7dc = xor i1 %v2_f7d8, true
  %v3_f7dc = or i1 %v7_f7d8, %v2_f7dc
  br i1 %v3_f7dc, label %bb1466, label %bb1467

bb1466:                                           ; preds = %dec_label_pc_f7c8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1467

bb1467:                                           ; preds = %dec_label_pc_f7c8, %bb1466
  %v4_f7e0 = phi i32 [ %.1963, %dec_label_pc_f7c8 ], [ 0, %bb1466 ]
  %v2_f7e0 = xor i1 %v7_f7d8, true
  %v3_f7e0 = and i1 %v2_f7d8, %v2_f7e0
  br i1 %v3_f7e0, label %bb1468, label %thread-pre-split163

bb1468:                                           ; preds = %bb1467
  store i32 %v4_f7e0, i32* %r3.global-to-local, align 4
  br label %thread-pre-split163

thread-pre-split163:                              ; preds = %bb1467, %bb1468
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f7e4 = icmp eq i32 %v4_f7e0, 0
  store i1 %v2_f7e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f7e4, label %dec_label_pc_f7f8, label %dec_label_pc_f7f0

dec_label_pc_f7f0:                                ; preds = %thread-pre-split163
  %v2_f7f0 = icmp ugt i32 %v1_f188, 192
  store i1 %v2_f7f0, i1* %cpsr_c.global-to-local, align 1
  %v7_f7f0 = icmp eq i32 %v1_f188, 193
  store i1 %v7_f7f0, i1* %cpsr_z.global-to-local, align 1
  %v2_f7f4 = xor i1 %v2_f7f0, true
  %v3_f7f4 = or i1 %v7_f7f0, %v2_f7f4
  br i1 %v3_f7f4, label %dec_label_pc_f170, label %dec_label_pc_f7f8

dec_label_pc_f7f8:                                ; preds = %dec_label_pc_f7f0, %thread-pre-split163
  %v7_f7f8 = icmp eq i32 %v1_f174, 139
  %.1964 = zext i1 %v7_f7f8 to i32
  store i32 %.1964, i32* %r3.global-to-local, align 4
  store i1 %v2_f534, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f534, i1* %cpsr_z.global-to-local, align 1
  %v2_f80c = xor i1 %v2_f534, true
  %v3_f80c = or i1 %v7_f534, %v2_f80c
  br i1 %v3_f80c, label %bb1471, label %bb1472

bb1471:                                           ; preds = %dec_label_pc_f7f8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1472

bb1472:                                           ; preds = %dec_label_pc_f7f8, %bb1471
  %v4_f810 = phi i32 [ %.1964, %dec_label_pc_f7f8 ], [ 0, %bb1471 ]
  %v2_f810 = xor i1 %v7_f534, true
  %v3_f810 = and i1 %v2_f534, %v2_f810
  br i1 %v3_f810, label %bb1473, label %thread-pre-split165

bb1473:                                           ; preds = %bb1472
  store i32 %v4_f810, i32* %r3.global-to-local, align 4
  br label %thread-pre-split165

thread-pre-split165:                              ; preds = %bb1472, %bb1473
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f814 = icmp eq i32 %v4_f810, 0
  store i1 %v2_f814, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f814, label %dec_label_pc_f824, label %dec_label_pc_f81c

dec_label_pc_f81c:                                ; preds = %thread-pre-split165
  %v2_f81c = icmp ugt i32 %v1_f188, 141
  store i1 %v2_f81c, i1* %cpsr_c.global-to-local, align 1
  %v7_f81c = icmp eq i32 %v1_f188, 142
  store i1 %v7_f81c, i1* %cpsr_z.global-to-local, align 1
  %v2_f820 = xor i1 %v2_f81c, true
  %v3_f820 = or i1 %v7_f81c, %v2_f820
  br i1 %v3_f820, label %dec_label_pc_f170, label %dec_label_pc_f824

dec_label_pc_f824:                                ; preds = %dec_label_pc_f81c, %thread-pre-split165
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f824 = icmp eq i32 %v1_f188, 0
  store i1 %v2_f824, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f824, label %bb1475, label %bb1474

bb1474:                                           ; preds = %dec_label_pc_f824
  br label %bb1475

bb1475:                                           ; preds = %dec_label_pc_f824, %bb1474
  %v0_107e8 = phi i32 [ 0, %dec_label_pc_f824 ], [ 1, %bb1474 ]
  store i32 %v0_107e8, i32* %r3.global-to-local, align 4
  %v2_f830 = icmp ugt i32 %v1_f174, 139
  store i1 %v2_f830, i1* %cpsr_c.global-to-local, align 1
  %v7_f830 = icmp eq i32 %v1_f174, 140
  store i1 %v7_f830, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f830, label %bb1476, label %.thread1118

.thread1118:                                      ; preds = %bb1475
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f850

bb1476:                                           ; preds = %bb1475
  store i32 %v0_107e8, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f83c = icmp eq i32 %v0_107e8, 0
  store i1 %v2_f83c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f83c, label %dec_label_pc_f850, label %dec_label_pc_f848

dec_label_pc_f848:                                ; preds = %bb1476
  store i1 %v2_f3a0, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f3a0, i1* %cpsr_z.global-to-local, align 1
  %v2_f84c = xor i1 %v2_f3a0, true
  %v3_f84c = or i1 %v7_f3a0, %v2_f84c
  br i1 %v3_f84c, label %dec_label_pc_f170, label %dec_label_pc_f850

dec_label_pc_f850:                                ; preds = %.thread1118, %dec_label_pc_f848, %bb1476
  %v0_f83c1120 = phi i32 [ 0, %.thread1118 ], [ 1, %dec_label_pc_f848 ], [ 0, %bb1476 ]
  store i1 %v2_f490, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f490, i1* %cpsr_z.global-to-local, align 1
  %v2_f854 = xor i1 %v2_f490, true
  %v3_f854 = or i1 %v7_f490, %v2_f854
  br i1 %v3_f854, label %bb1477, label %bb1478

bb1477:                                           ; preds = %dec_label_pc_f850
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1478

bb1478:                                           ; preds = %dec_label_pc_f850, %bb1477
  %v0_f85c790 = phi i32 [ %v0_f83c1120, %dec_label_pc_f850 ], [ 0, %bb1477 ]
  %v2_f858 = xor i1 %v7_f490, true
  %v3_f858 = and i1 %v2_f490, %v2_f858
  br i1 %v3_f858, label %bb1479, label %bb1480

bb1479:                                           ; preds = %bb1478
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1480

bb1480:                                           ; preds = %bb1478, %bb1479
  %v0_f85c = phi i32 [ %v0_f85c790, %bb1478 ], [ 1, %bb1479 ]
  %v2_f860 = icmp ugt i32 %v1_f174, 142
  store i1 %v2_f860, i1* %cpsr_c.global-to-local, align 1
  %v7_f860 = icmp eq i32 %v1_f174, 143
  store i1 %v7_f860, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f860, label %.thread167, label %.thread168

.thread168:                                       ; preds = %bb1480
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f87c

.thread167:                                       ; preds = %bb1480
  %v2_f868 = urem i32 %v0_f85c, 2
  store i32 %v2_f868, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f86c = icmp eq i32 %v2_f868, 0
  store i1 %v2_f86c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f86c, label %dec_label_pc_f87c, label %dec_label_pc_f874

dec_label_pc_f874:                                ; preds = %.thread167
  %v2_f874 = icmp ugt i32 %v1_f188, 231
  store i1 %v2_f874, i1* %cpsr_c.global-to-local, align 1
  %v7_f874 = icmp eq i32 %v1_f188, 232
  store i1 %v7_f874, i1* %cpsr_z.global-to-local, align 1
  %v2_f878 = xor i1 %v2_f874, true
  %v3_f878 = or i1 %v7_f874, %v2_f878
  br i1 %v3_f878, label %dec_label_pc_f170, label %dec_label_pc_f87c

dec_label_pc_f87c:                                ; preds = %.thread168, %dec_label_pc_f874, %.thread167
  %v7_f87c = icmp eq i32 %v1_f174, 144
  %.1965 = zext i1 %v7_f87c to i32
  store i32 %.1965, i32* %r3.global-to-local, align 4
  store i1 %v2_f25c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f25c, i1* %cpsr_z.global-to-local, align 1
  %v2_f88c = xor i1 %v2_f25c, true
  %v3_f88c = or i1 %v7_f25c, %v2_f88c
  br i1 %v3_f88c, label %.thread173, label %bb1483

.thread173:                                       ; preds = %dec_label_pc_f87c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f8a0

bb1483:                                           ; preds = %dec_label_pc_f87c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f890 = icmp eq i1 %v7_f87c, false
  store i1 %v2_f890, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f890, label %dec_label_pc_f8a0, label %dec_label_pc_f898

dec_label_pc_f898:                                ; preds = %bb1483
  %v2_f898 = icmp ugt i32 %v1_f188, 251
  store i1 %v2_f898, i1* %cpsr_c.global-to-local, align 1
  %v7_f898 = icmp eq i32 %v1_f188, 252
  store i1 %v7_f898, i1* %cpsr_z.global-to-local, align 1
  %v2_f89c = xor i1 %v2_f898, true
  %v3_f89c = or i1 %v7_f898, %v2_f89c
  br i1 %v3_f89c, label %dec_label_pc_f170, label %dec_label_pc_f8a0

dec_label_pc_f8a0:                                ; preds = %.thread173, %dec_label_pc_f898, %bb1483
  %v0_f8ac.pr794 = phi i32 [ 0, %.thread173 ], [ 1, %dec_label_pc_f898 ], [ 0, %bb1483 ]
  %v2_f8a0 = icmp ugt i32 %v1_f188, 163
  store i1 %v2_f8a0, i1* %cpsr_c.global-to-local, align 1
  %v7_f8a0 = icmp eq i32 %v1_f188, 164
  store i1 %v7_f8a0, i1* %cpsr_z.global-to-local, align 1
  %v2_f8a4 = xor i1 %v2_f8a0, true
  %v3_f8a4 = or i1 %v7_f8a0, %v2_f8a4
  br i1 %v3_f8a4, label %bb1484, label %bb1485

bb1484:                                           ; preds = %dec_label_pc_f8a0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1485

bb1485:                                           ; preds = %dec_label_pc_f8a0, %bb1484
  %v0_f8ac.pr = phi i32 [ %v0_f8ac.pr794, %dec_label_pc_f8a0 ], [ 0, %bb1484 ]
  %v2_f8a8 = xor i1 %v7_f8a0, true
  %v3_f8a8 = and i1 %v2_f8a0, %v2_f8a8
  br i1 %v3_f8a8, label %bb1486, label %thread-pre-split176

bb1486:                                           ; preds = %bb1485
  store i32 %.1931, i32* %r3.global-to-local, align 4
  br label %thread-pre-split176

thread-pre-split176:                              ; preds = %bb1485, %bb1486
  %v0_f8ac = phi i32 [ %.1931, %bb1486 ], [ %v0_f8ac.pr, %bb1485 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f8ac = icmp eq i32 %v0_f8ac, 0
  store i1 %v2_f8ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f8ac, label %dec_label_pc_f8bc, label %dec_label_pc_f8b4

dec_label_pc_f8b4:                                ; preds = %thread-pre-split176
  %v2_f8b4 = icmp ugt i32 %v1_f188, 164
  store i1 %v2_f8b4, i1* %cpsr_c.global-to-local, align 1
  %v7_f8b4 = icmp eq i32 %v1_f188, 165
  store i1 %v7_f8b4, i1* %cpsr_z.global-to-local, align 1
  %v2_f8b8 = xor i1 %v2_f8b4, true
  %v3_f8b8 = or i1 %v7_f8b4, %v2_f8b8
  br i1 %v3_f8b8, label %dec_label_pc_f170, label %dec_label_pc_f8bc

dec_label_pc_f8bc:                                ; preds = %dec_label_pc_f8b4, %thread-pre-split176
  %v2_f8c0 = and i32 %v0_f6d0, %.1935
  %v4_f8c0 = icmp eq i32 %v2_f8c0, 0
  store i1 %v4_f8c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f8c0, label %dec_label_pc_f8d0, label %dec_label_pc_f8c8

dec_label_pc_f8c8:                                ; preds = %dec_label_pc_f8bc
  %v2_f8c8 = icmp ugt i32 %v1_f188, 41
  store i1 %v2_f8c8, i1* %cpsr_c.global-to-local, align 1
  %v7_f8c8 = icmp eq i32 %v1_f188, 42
  store i1 %v7_f8c8, i1* %cpsr_z.global-to-local, align 1
  %v2_f8cc = xor i1 %v2_f8c8, true
  %v3_f8cc = or i1 %v7_f8c8, %v2_f8cc
  br i1 %v3_f8cc, label %dec_label_pc_f170, label %dec_label_pc_f8d0

dec_label_pc_f8d0:                                ; preds = %dec_label_pc_f8c8, %dec_label_pc_f8bc
  store i1 %v2_f4dc, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f4dc, i1* %cpsr_z.global-to-local, align 1
  %v2_f8d4 = xor i1 %v2_f4dc, true
  %v3_f8d4 = or i1 %v7_f4dc, %v2_f8d4
  br i1 %v3_f8d4, label %bb1487, label %bb1488

bb1487:                                           ; preds = %dec_label_pc_f8d0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1488

bb1488:                                           ; preds = %dec_label_pc_f8d0, %bb1487
  %v1_f8dc797 = phi i32 [ %v0_f8ac, %dec_label_pc_f8d0 ], [ 0, %bb1487 ]
  %v2_f8d8 = xor i1 %v7_f4dc, true
  %v3_f8d8 = and i1 %v2_f4dc, %v2_f8d8
  br i1 %v3_f8d8, label %bb1489, label %bb1490

bb1489:                                           ; preds = %bb1488
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1490

bb1490:                                           ; preds = %bb1488, %bb1489
  %v1_f8dc = phi i32 [ %v1_f8dc797, %bb1488 ], [ 1, %bb1489 ]
  %v2_f8dc = and i32 %v1_f8dc, %.1935
  %v4_f8dc = icmp eq i32 %v2_f8dc, 0
  store i1 %v4_f8dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f8dc, label %dec_label_pc_f8f0, label %dec_label_pc_f8e8

dec_label_pc_f8e8:                                ; preds = %bb1490
  %v2_f8e8 = icmp ugt i32 %v1_f188, 103
  store i1 %v2_f8e8, i1* %cpsr_c.global-to-local, align 1
  %v7_f8e8 = icmp eq i32 %v1_f188, 104
  store i1 %v7_f8e8, i1* %cpsr_z.global-to-local, align 1
  %v2_f8ec = xor i1 %v2_f8e8, true
  %v3_f8ec = or i1 %v7_f8e8, %v2_f8ec
  br i1 %v3_f8ec, label %dec_label_pc_f170, label %dec_label_pc_f8f0

dec_label_pc_f8f0:                                ; preds = %dec_label_pc_f8e8, %bb1490
  %v2_f8f0 = icmp ugt i32 %v1_f188, 166
  store i1 %v2_f8f0, i1* %cpsr_c.global-to-local, align 1
  %v7_f8f0 = icmp eq i32 %v1_f188, 167
  store i1 %v7_f8f0, i1* %cpsr_z.global-to-local, align 1
  %v2_f8f4 = xor i1 %v2_f8f0, true
  %v3_f8f4 = or i1 %v7_f8f0, %v2_f8f4
  br i1 %v3_f8f4, label %bb1491, label %bb1492

bb1491:                                           ; preds = %dec_label_pc_f8f0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1492

bb1492:                                           ; preds = %dec_label_pc_f8f0, %bb1491
  %v0_f8fc.pr = phi i32 [ %v1_f8dc, %dec_label_pc_f8f0 ], [ 0, %bb1491 ]
  %v2_f8f8 = xor i1 %v7_f8f0, true
  %v3_f8f8 = and i1 %v2_f8f0, %v2_f8f8
  br i1 %v3_f8f8, label %bb1493, label %thread-pre-split177

bb1493:                                           ; preds = %bb1492
  store i32 %.1935, i32* %r3.global-to-local, align 4
  br label %thread-pre-split177

thread-pre-split177:                              ; preds = %bb1492, %bb1493
  %v0_f8fc = phi i32 [ %.1935, %bb1493 ], [ %v0_f8fc.pr, %bb1492 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f8fc = icmp eq i32 %v0_f8fc, 0
  store i1 %v2_f8fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f8fc, label %dec_label_pc_f90c, label %dec_label_pc_f904

dec_label_pc_f904:                                ; preds = %thread-pre-split177
  %v2_f904 = icmp ugt i32 %v1_f188, 168
  store i1 %v2_f904, i1* %cpsr_c.global-to-local, align 1
  %v7_f904 = icmp eq i32 %v1_f188, 169
  store i1 %v7_f904, i1* %cpsr_z.global-to-local, align 1
  %v2_f908 = xor i1 %v2_f904, true
  %v3_f908 = or i1 %v7_f904, %v2_f908
  br i1 %v3_f908, label %dec_label_pc_f170, label %dec_label_pc_f90c

dec_label_pc_f90c:                                ; preds = %dec_label_pc_f904, %thread-pre-split177
  %v2_f90c = icmp ugt i32 %v1_f188, 196
  store i1 %v2_f90c, i1* %cpsr_c.global-to-local, align 1
  %v7_f90c = icmp eq i32 %v1_f188, 197
  store i1 %v7_f90c, i1* %cpsr_z.global-to-local, align 1
  %v2_f910 = xor i1 %v2_f90c, true
  %v3_f910 = or i1 %v7_f90c, %v2_f910
  br i1 %v3_f910, label %bb1494, label %bb1495

bb1494:                                           ; preds = %dec_label_pc_f90c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1495

bb1495:                                           ; preds = %dec_label_pc_f90c, %bb1494
  %v0_f918.pr = phi i32 [ %v0_f8fc, %dec_label_pc_f90c ], [ 0, %bb1494 ]
  %v2_f914 = xor i1 %v7_f90c, true
  %v3_f914 = and i1 %v2_f90c, %v2_f914
  br i1 %v3_f914, label %bb1496, label %thread-pre-split178

bb1496:                                           ; preds = %bb1495
  store i32 %.1935, i32* %r3.global-to-local, align 4
  br label %thread-pre-split178

thread-pre-split178:                              ; preds = %bb1495, %bb1496
  %v0_f918 = phi i32 [ %.1935, %bb1496 ], [ %v0_f918.pr, %bb1495 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f918 = icmp eq i32 %v0_f918, 0
  store i1 %v2_f918, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f918, label %dec_label_pc_f928, label %dec_label_pc_f920

dec_label_pc_f920:                                ; preds = %thread-pre-split178
  %v2_f920 = icmp ugt i32 %v1_f188, 198
  store i1 %v2_f920, i1* %cpsr_c.global-to-local, align 1
  %v7_f920 = icmp eq i32 %v1_f188, 199
  store i1 %v7_f920, i1* %cpsr_z.global-to-local, align 1
  %v2_f924 = xor i1 %v2_f920, true
  %v3_f924 = or i1 %v7_f920, %v2_f924
  br i1 %v3_f924, label %dec_label_pc_f170, label %dec_label_pc_f928

dec_label_pc_f928:                                ; preds = %dec_label_pc_f920, %thread-pre-split178
  %v2_f928 = icmp ugt i32 %v1_f188, 236
  store i1 %v2_f928, i1* %cpsr_c.global-to-local, align 1
  %v7_f928 = icmp eq i32 %v1_f188, 237
  store i1 %v7_f928, i1* %cpsr_z.global-to-local, align 1
  %v2_f92c = xor i1 %v2_f928, true
  %v3_f92c = or i1 %v7_f928, %v2_f92c
  br i1 %v3_f92c, label %bb1497, label %bb1498

bb1497:                                           ; preds = %dec_label_pc_f928
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1498

bb1498:                                           ; preds = %dec_label_pc_f928, %bb1497
  %v0_f934.pr = phi i32 [ %v0_f918, %dec_label_pc_f928 ], [ 0, %bb1497 ]
  %v2_f930 = xor i1 %v7_f928, true
  %v3_f930 = and i1 %v2_f928, %v2_f930
  br i1 %v3_f930, label %bb1499, label %thread-pre-split179

bb1499:                                           ; preds = %bb1498
  store i32 %.1935, i32* %r3.global-to-local, align 4
  br label %thread-pre-split179

thread-pre-split179:                              ; preds = %bb1498, %bb1499
  %v0_f934 = phi i32 [ %.1935, %bb1499 ], [ %v0_f934.pr, %bb1498 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f934 = icmp eq i32 %v0_f934, 0
  store i1 %v2_f934, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f934, label %dec_label_pc_f944, label %dec_label_pc_f93c

dec_label_pc_f93c:                                ; preds = %thread-pre-split179
  %v2_f93c = icmp eq i32 %v1_f188, 255
  store i1 %v2_f93c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_f93c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f93c, label %dec_label_pc_f944, label %dec_label_pc_f170

dec_label_pc_f944:                                ; preds = %dec_label_pc_f93c, %thread-pre-split179
  %v2_f944 = icmp ugt i32 %v1_f188, 111
  store i1 %v2_f944, i1* %cpsr_c.global-to-local, align 1
  %v7_f944 = icmp eq i32 %v1_f188, 112
  store i1 %v7_f944, i1* %cpsr_z.global-to-local, align 1
  %v2_f948 = xor i1 %v2_f944, true
  %v3_f948 = or i1 %v7_f944, %v2_f948
  br i1 %v3_f948, label %bb1500, label %bb1501

bb1500:                                           ; preds = %dec_label_pc_f944
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1501

bb1501:                                           ; preds = %dec_label_pc_f944, %bb1500
  %v0_f950.pr = phi i32 [ %v0_f934, %dec_label_pc_f944 ], [ 0, %bb1500 ]
  %v2_f94c = xor i1 %v7_f944, true
  %v3_f94c = and i1 %v2_f944, %v2_f94c
  br i1 %v3_f94c, label %bb1502, label %thread-pre-split180

bb1502:                                           ; preds = %bb1501
  store i32 %.1937, i32* %r3.global-to-local, align 4
  br label %thread-pre-split180

thread-pre-split180:                              ; preds = %bb1501, %bb1502
  %v0_f950 = phi i32 [ %.1937, %bb1502 ], [ %v0_f950.pr, %bb1501 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f950 = icmp eq i32 %v0_f950, 0
  store i1 %v2_f950, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f950, label %dec_label_pc_f960, label %dec_label_pc_f958

dec_label_pc_f958:                                ; preds = %thread-pre-split180
  store i1 %v2_f29c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f29c, i1* %cpsr_z.global-to-local, align 1
  %v2_f95c = xor i1 %v2_f29c, true
  %v3_f95c = or i1 %v7_f29c, %v2_f95c
  br i1 %v3_f95c, label %dec_label_pc_f170, label %dec_label_pc_f960

dec_label_pc_f960:                                ; preds = %dec_label_pc_f958, %thread-pre-split180
  store i32 %.1940, i32* %r3.global-to-local, align 4
  %v2_f964 = icmp ugt i32 %v1_f188, 149
  store i1 %v2_f964, i1* %cpsr_c.global-to-local, align 1
  %v7_f964 = icmp eq i32 %v1_f188, 150
  store i1 %v7_f964, i1* %cpsr_z.global-to-local, align 1
  %v2_f968 = xor i1 %v2_f964, true
  %v3_f968 = or i1 %v7_f964, %v2_f968
  br i1 %v3_f968, label %bb1503, label %bb1504

bb1503:                                           ; preds = %dec_label_pc_f960
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1504

bb1504:                                           ; preds = %dec_label_pc_f960, %bb1503
  %v4_f96c = phi i32 [ %.1940, %dec_label_pc_f960 ], [ 0, %bb1503 ]
  %v2_f96c = xor i1 %v7_f964, true
  %v3_f96c = and i1 %v2_f964, %v2_f96c
  br i1 %v3_f96c, label %bb1505, label %thread-pre-split181

bb1505:                                           ; preds = %bb1504
  store i32 %v4_f96c, i32* %r3.global-to-local, align 4
  br label %thread-pre-split181

thread-pre-split181:                              ; preds = %bb1504, %bb1505
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f970 = icmp eq i32 %v4_f96c, 0
  store i1 %v2_f970, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f970, label %dec_label_pc_f980, label %dec_label_pc_f978

dec_label_pc_f978:                                ; preds = %thread-pre-split181
  store i1 %v2_f270, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f270, i1* %cpsr_z.global-to-local, align 1
  %v2_f97c = xor i1 %v2_f270, true
  %v3_f97c = or i1 %v7_f270, %v2_f97c
  br i1 %v3_f97c, label %dec_label_pc_f170, label %dec_label_pc_f980

dec_label_pc_f980:                                ; preds = %dec_label_pc_f978, %thread-pre-split181
  %v7_f980 = icmp eq i32 %v1_f174, 153
  %.1966 = zext i1 %v7_f980 to i32
  store i32 %.1966, i32* %r3.global-to-local, align 4
  %v2_f98c = icmp ugt i32 %v1_f188, 19
  store i1 %v2_f98c, i1* %cpsr_c.global-to-local, align 1
  %v7_f98c = icmp eq i32 %v1_f188, 20
  store i1 %v7_f98c, i1* %cpsr_z.global-to-local, align 1
  %v2_f990 = xor i1 %v2_f98c, true
  %v3_f990 = or i1 %v7_f98c, %v2_f990
  br i1 %v3_f990, label %.thread184, label %bb1508

.thread184:                                       ; preds = %dec_label_pc_f980
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f9a4

bb1508:                                           ; preds = %dec_label_pc_f980
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f994 = icmp eq i1 %v7_f980, false
  store i1 %v2_f994, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f994, label %dec_label_pc_f9a4, label %dec_label_pc_f99c

dec_label_pc_f99c:                                ; preds = %bb1508
  %v2_f99c = icmp ugt i32 %v1_f188, 30
  store i1 %v2_f99c, i1* %cpsr_c.global-to-local, align 1
  %v7_f99c = icmp eq i32 %v1_f188, 31
  store i1 %v7_f99c, i1* %cpsr_z.global-to-local, align 1
  %v2_f9a0 = xor i1 %v2_f99c, true
  %v3_f9a0 = or i1 %v7_f99c, %v2_f9a0
  br i1 %v3_f9a0, label %dec_label_pc_f170, label %dec_label_pc_f9a4

dec_label_pc_f9a4:                                ; preds = %.thread184, %dec_label_pc_f99c, %bb1508
  store i32 %.1944, i32* %r4.global-to-local, align 4
  %v2_f9a8 = and i32 %v1_f9a8, %.1944
  %v4_f9a8 = icmp eq i32 %v2_f9a8, 0
  store i1 %v4_f9a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f9a8, label %dec_label_pc_f9b8, label %dec_label_pc_f9b0

dec_label_pc_f9b0:                                ; preds = %dec_label_pc_f9a4
  %v2_f9b0 = icmp ugt i32 %v1_f188, 8
  store i1 %v2_f9b0, i1* %cpsr_c.global-to-local, align 1
  %v7_f9b0 = icmp eq i32 %v1_f188, 9
  store i1 %v7_f9b0, i1* %cpsr_z.global-to-local, align 1
  %v2_f9b4 = xor i1 %v2_f9b0, true
  %v3_f9b4 = or i1 %v7_f9b0, %v2_f9b4
  br i1 %v3_f9b4, label %dec_label_pc_f170, label %dec_label_pc_f9b8

dec_label_pc_f9b8:                                ; preds = %dec_label_pc_f9b0, %dec_label_pc_f9a4
  store i32 %.1944, i32* %r3.global-to-local, align 4
  %v2_f9bc = icmp ugt i32 %v1_f188, 72
  store i1 %v2_f9bc, i1* %cpsr_c.global-to-local, align 1
  %v7_f9bc = icmp eq i32 %v1_f188, 73
  store i1 %v7_f9bc, i1* %cpsr_z.global-to-local, align 1
  %v2_f9c0 = xor i1 %v2_f9bc, true
  %v3_f9c0 = or i1 %v7_f9bc, %v2_f9c0
  br i1 %v3_f9c0, label %bb1509, label %bb1510

bb1509:                                           ; preds = %dec_label_pc_f9b8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1510

bb1510:                                           ; preds = %dec_label_pc_f9b8, %bb1509
  %v4_f9c4 = phi i32 [ %.1944, %dec_label_pc_f9b8 ], [ 0, %bb1509 ]
  %v2_f9c4 = xor i1 %v7_f9bc, true
  %v3_f9c4 = and i1 %v2_f9bc, %v2_f9c4
  br i1 %v3_f9c4, label %bb1511, label %thread-pre-split187

bb1511:                                           ; preds = %bb1510
  store i32 %v4_f9c4, i32* %r3.global-to-local, align 4
  br label %thread-pre-split187

thread-pre-split187:                              ; preds = %bb1510, %bb1511
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f9c8 = icmp eq i32 %v4_f9c4, 0
  store i1 %v2_f9c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f9c8, label %dec_label_pc_f9d8, label %dec_label_pc_f9d0

dec_label_pc_f9d0:                                ; preds = %thread-pre-split187
  %v2_f9d0 = icmp ugt i32 %v1_f188, 87
  store i1 %v2_f9d0, i1* %cpsr_c.global-to-local, align 1
  %v7_f9d0 = icmp eq i32 %v1_f188, 88
  store i1 %v7_f9d0, i1* %cpsr_z.global-to-local, align 1
  %v2_f9d4 = xor i1 %v2_f9d0, true
  %v3_f9d4 = or i1 %v7_f9d0, %v2_f9d4
  br i1 %v3_f9d4, label %dec_label_pc_f170, label %dec_label_pc_f9d8

dec_label_pc_f9d8:                                ; preds = %dec_label_pc_f9d0, %thread-pre-split187
  store i32 %.1944, i32* %r3.global-to-local, align 4
  %v2_f9dc = icmp ugt i32 %v1_f188, 211
  store i1 %v2_f9dc, i1* %cpsr_c.global-to-local, align 1
  %v7_f9dc = icmp eq i32 %v1_f188, 212
  store i1 %v7_f9dc, i1* %cpsr_z.global-to-local, align 1
  %v2_f9e0 = xor i1 %v2_f9dc, true
  %v3_f9e0 = or i1 %v7_f9dc, %v2_f9e0
  br i1 %v3_f9e0, label %bb1512, label %bb1513

bb1512:                                           ; preds = %dec_label_pc_f9d8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1513

bb1513:                                           ; preds = %dec_label_pc_f9d8, %bb1512
  %v4_f9e4 = phi i32 [ %.1944, %dec_label_pc_f9d8 ], [ 0, %bb1512 ]
  %v2_f9e4 = xor i1 %v7_f9dc, true
  %v3_f9e4 = and i1 %v2_f9dc, %v2_f9e4
  br i1 %v3_f9e4, label %bb1514, label %thread-pre-split188

bb1514:                                           ; preds = %bb1513
  store i32 %v4_f9e4, i32* %r3.global-to-local, align 4
  br label %thread-pre-split188

thread-pre-split188:                              ; preds = %bb1513, %bb1514
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f9e8 = icmp eq i32 %v4_f9e4, 0
  store i1 %v2_f9e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f9e8, label %dec_label_pc_f9f8, label %dec_label_pc_f9f0

dec_label_pc_f9f0:                                ; preds = %thread-pre-split188
  %v2_f9f0 = icmp ugt i32 %v1_f188, 220
  store i1 %v2_f9f0, i1* %cpsr_c.global-to-local, align 1
  %v7_f9f0 = icmp eq i32 %v1_f188, 221
  store i1 %v7_f9f0, i1* %cpsr_z.global-to-local, align 1
  %v2_f9f4 = xor i1 %v2_f9f0, true
  %v3_f9f4 = or i1 %v7_f9f0, %v2_f9f4
  br i1 %v3_f9f4, label %dec_label_pc_f170, label %dec_label_pc_f9f8

dec_label_pc_f9f8:                                ; preds = %dec_label_pc_f9f0, %thread-pre-split188
  store i32 %.1942, i32* %r3.global-to-local, align 4
  store i1 %v2_f2f8, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f2f8, i1* %cpsr_z.global-to-local, align 1
  %v2_fa00 = xor i1 %v2_f2f8, true
  %v3_fa00 = or i1 %v7_f2f8, %v2_fa00
  br i1 %v3_fa00, label %bb1515, label %bb1516

bb1515:                                           ; preds = %dec_label_pc_f9f8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1516

bb1516:                                           ; preds = %dec_label_pc_f9f8, %bb1515
  %v4_fa04 = phi i32 [ %.1942, %dec_label_pc_f9f8 ], [ 0, %bb1515 ]
  %v2_fa04 = xor i1 %v7_f2f8, true
  %v3_fa04 = and i1 %v2_f2f8, %v2_fa04
  br i1 %v3_fa04, label %bb1517, label %thread-pre-split189

bb1517:                                           ; preds = %bb1516
  store i32 %v4_fa04, i32* %r3.global-to-local, align 4
  br label %thread-pre-split189

thread-pre-split189:                              ; preds = %bb1516, %bb1517
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fa08 = icmp eq i32 %v4_fa04, 0
  store i1 %v2_fa08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fa08, label %dec_label_pc_fa18, label %dec_label_pc_fa10

dec_label_pc_fa10:                                ; preds = %thread-pre-split189
  %v2_fa10 = icmp ugt i32 %v1_f188, 152
  store i1 %v2_fa10, i1* %cpsr_c.global-to-local, align 1
  %v7_fa10 = icmp eq i32 %v1_f188, 153
  store i1 %v7_fa10, i1* %cpsr_z.global-to-local, align 1
  %v2_fa14 = xor i1 %v2_fa10, true
  %v3_fa14 = or i1 %v7_fa10, %v2_fa14
  br i1 %v3_fa14, label %dec_label_pc_f170, label %dec_label_pc_fa18

dec_label_pc_fa18:                                ; preds = %dec_label_pc_fa10, %thread-pre-split189
  %v2_fa1c = icmp ugt i32 %v1_f174, 157
  store i1 %v2_fa1c, i1* %cpsr_c.global-to-local, align 1
  %v7_fa1c = icmp eq i32 %v1_f174, 158
  %.1967 = zext i1 %v7_fa1c to i32
  store i32 %.1967, i32* %r3.global-to-local, align 4
  %v2_fa28 = and i32 %v0_107e8, %.1967
  %v4_fa28 = icmp eq i32 %v2_fa28, 0
  store i1 %v4_fa28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_fa28, label %dec_label_pc_fa38, label %dec_label_pc_fa30

dec_label_pc_fa30:                                ; preds = %dec_label_pc_fa18
  store i1 %v2_f98c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f98c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_f990, label %dec_label_pc_f170, label %dec_label_pc_fa38

dec_label_pc_fa38:                                ; preds = %dec_label_pc_fa30, %dec_label_pc_fa18
  %v2_fa38 = icmp ugt i32 %v1_f188, 233
  store i1 %v2_fa38, i1* %cpsr_c.global-to-local, align 1
  %v7_fa38 = icmp eq i32 %v1_f188, 234
  store i1 %v7_fa38, i1* %cpsr_z.global-to-local, align 1
  %v2_fa3c = xor i1 %v2_fa38, true
  %v3_fa3c = or i1 %v7_fa38, %v2_fa3c
  br i1 %v3_fa3c, label %bb1520, label %bb1521

bb1520:                                           ; preds = %dec_label_pc_fa38
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1521

bb1521:                                           ; preds = %dec_label_pc_fa38, %bb1520
  %v4_fa40 = phi i32 [ %.1967, %dec_label_pc_fa38 ], [ 0, %bb1520 ]
  %v2_fa40 = xor i1 %v7_fa38, true
  %v3_fa40 = and i1 %v2_fa38, %v2_fa40
  br i1 %v3_fa40, label %bb1522, label %thread-pre-split191

bb1522:                                           ; preds = %bb1521
  store i32 %v4_fa40, i32* %r3.global-to-local, align 4
  br label %thread-pre-split191

thread-pre-split191:                              ; preds = %bb1521, %bb1522
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fa44 = icmp eq i32 %v4_fa40, 0
  store i1 %v2_fa44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fa44, label %dec_label_pc_fa54, label %dec_label_pc_fa4c

dec_label_pc_fa4c:                                ; preds = %thread-pre-split191
  %v2_fa4c = icmp ugt i32 %v1_f188, 245
  store i1 %v2_fa4c, i1* %cpsr_c.global-to-local, align 1
  %v7_fa4c = icmp eq i32 %v1_f188, 246
  store i1 %v7_fa4c, i1* %cpsr_z.global-to-local, align 1
  %v2_fa50 = xor i1 %v2_fa4c, true
  %v3_fa50 = or i1 %v7_fa4c, %v2_fa50
  br i1 %v3_fa50, label %dec_label_pc_f170, label %dec_label_pc_fa54

dec_label_pc_fa54:                                ; preds = %dec_label_pc_fa4c, %thread-pre-split191
  %v7_fa54 = icmp eq i32 %v1_f174, 159
  %.1968 = zext i1 %v7_fa54 to i32
  %v2_fa60 = icmp ugt i32 %v1_f188, 118
  store i1 %v2_fa60, i1* %cpsr_c.global-to-local, align 1
  %v7_fa60 = icmp eq i32 %v1_f188, 119
  store i1 %v7_fa60, i1* %cpsr_z.global-to-local, align 1
  %v2_fa64 = xor i1 %v2_fa60, true
  %v3_fa64 = or i1 %v7_fa60, %v2_fa64
  br i1 %v3_fa64, label %bb1525, label %bb1526

bb1525:                                           ; preds = %dec_label_pc_fa54
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1526

bb1526:                                           ; preds = %dec_label_pc_fa54, %bb1525
  %v0_fa6c.pr = phi i32 [ %v4_fa40, %dec_label_pc_fa54 ], [ 0, %bb1525 ]
  %v2_fa68 = xor i1 %v7_fa60, true
  %v3_fa68 = and i1 %v2_fa60, %v2_fa68
  br i1 %v3_fa68, label %bb1527, label %thread-pre-split193

bb1527:                                           ; preds = %bb1526
  store i32 %.1968, i32* %r3.global-to-local, align 4
  br label %thread-pre-split193

thread-pre-split193:                              ; preds = %bb1526, %bb1527
  %v0_fa6c = phi i32 [ %.1968, %bb1527 ], [ %v0_fa6c.pr, %bb1526 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fa6c = icmp eq i32 %v0_fa6c, 0
  store i1 %v2_fa6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fa6c, label %dec_label_pc_fa7c, label %dec_label_pc_fa74

dec_label_pc_fa74:                                ; preds = %thread-pre-split193
  store i1 %v2_f5a0, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f5a0, i1* %cpsr_z.global-to-local, align 1
  %v2_fa78 = xor i1 %v2_f5a0, true
  %v3_fa78 = or i1 %v7_f5a0, %v2_fa78
  br i1 %v3_fa78, label %dec_label_pc_f170, label %dec_label_pc_fa7c

dec_label_pc_fa7c:                                ; preds = %dec_label_pc_fa74, %thread-pre-split193
  %v7_fa7c = icmp eq i32 %v1_f174, 160
  %.1969 = zext i1 %v7_fa7c to i32
  store i32 %.1969, i32* %r3.global-to-local, align 4
  %v2_fa88 = icmp ugt i32 %v1_f188, 130
  store i1 %v2_fa88, i1* %cpsr_c.global-to-local, align 1
  %v7_fa88 = icmp eq i32 %v1_f188, 131
  store i1 %v7_fa88, i1* %cpsr_z.global-to-local, align 1
  %v2_fa8c = xor i1 %v2_fa88, true
  %v3_fa8c = or i1 %v7_fa88, %v2_fa8c
  br i1 %v3_fa8c, label %.thread196, label %bb1530

.thread196:                                       ; preds = %dec_label_pc_fa7c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_faa0

bb1530:                                           ; preds = %dec_label_pc_fa7c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fa90 = icmp eq i1 %v7_fa7c, false
  store i1 %v2_fa90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fa90, label %dec_label_pc_faa0, label %dec_label_pc_fa98

dec_label_pc_fa98:                                ; preds = %bb1530
  store i1 %v2_f964, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f964, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_f968, label %dec_label_pc_f170, label %dec_label_pc_faa0

dec_label_pc_faa0:                                ; preds = %.thread196, %dec_label_pc_fa98, %bb1530
  store i32 %.1956, i32* %r3.global-to-local, align 4
  %v2_faa4 = icmp ugt i32 %v1_f188, 222
  store i1 %v2_faa4, i1* %cpsr_c.global-to-local, align 1
  %v7_faa4 = icmp eq i32 %v1_f188, 223
  store i1 %v7_faa4, i1* %cpsr_z.global-to-local, align 1
  %v2_faa8 = xor i1 %v2_faa4, true
  %v3_faa8 = or i1 %v7_faa4, %v2_faa8
  br i1 %v3_faa8, label %bb1531, label %bb1532

bb1531:                                           ; preds = %dec_label_pc_faa0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1532

bb1532:                                           ; preds = %dec_label_pc_faa0, %bb1531
  %v4_faac = phi i32 [ %.1956, %dec_label_pc_faa0 ], [ 0, %bb1531 ]
  %v2_faac = xor i1 %v7_faa4, true
  %v3_faac = and i1 %v2_faa4, %v2_faac
  br i1 %v3_faac, label %bb1533, label %thread-pre-split199

bb1533:                                           ; preds = %bb1532
  store i32 %v4_faac, i32* %r3.global-to-local, align 4
  br label %thread-pre-split199

thread-pre-split199:                              ; preds = %bb1532, %bb1533
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fab0 = icmp eq i32 %v4_faac, 0
  store i1 %v2_fab0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fab0, label %dec_label_pc_fac0, label %dec_label_pc_fab8

dec_label_pc_fab8:                                ; preds = %thread-pre-split199
  %v2_fab8 = icmp ugt i32 %v1_f188, 225
  store i1 %v2_fab8, i1* %cpsr_c.global-to-local, align 1
  %v7_fab8 = icmp eq i32 %v1_f188, 226
  store i1 %v7_fab8, i1* %cpsr_z.global-to-local, align 1
  %v2_fabc = xor i1 %v2_fab8, true
  %v3_fabc = or i1 %v7_fab8, %v2_fabc
  br i1 %v3_fabc, label %dec_label_pc_f170, label %dec_label_pc_fac0

dec_label_pc_fac0:                                ; preds = %dec_label_pc_fab8, %thread-pre-split199
  store i32 %.1943, i32* %r3.global-to-local, align 4
  store i32 %v0_f85c, i32* %r4.global-to-local, align 4
  %v2_fac8 = and i32 %v0_f85c, %.1943
  %v4_fac8 = icmp eq i32 %v2_fac8, 0
  store i1 %v4_fac8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_fac8, label %dec_label_pc_fad8, label %dec_label_pc_fad0

dec_label_pc_fad0:                                ; preds = %dec_label_pc_fac0
  %v2_fad0 = icmp ugt i32 %v1_f188, 45
  store i1 %v2_fad0, i1* %cpsr_c.global-to-local, align 1
  %v7_fad0 = icmp eq i32 %v1_f188, 46
  store i1 %v7_fad0, i1* %cpsr_z.global-to-local, align 1
  %v2_fad4 = xor i1 %v2_fad0, true
  %v3_fad4 = or i1 %v7_fad0, %v2_fad4
  br i1 %v3_fad4, label %dec_label_pc_f170, label %dec_label_pc_fad8

dec_label_pc_fad8:                                ; preds = %dec_label_pc_fad0, %dec_label_pc_fac0
  %v7_fad8 = icmp eq i32 %v1_f174, 163
  %.1970 = zext i1 %v7_fad8 to i32
  store i32 %.1970, i32* %sb.global-to-local, align 4
  %v2_fae4 = icmp ugt i32 %v1_f188, 203
  store i1 %v2_fae4, i1* %cpsr_c.global-to-local, align 1
  %v7_fae4 = icmp eq i32 %v1_f188, 204
  store i1 %v7_fae4, i1* %cpsr_z.global-to-local, align 1
  %v2_fae8 = xor i1 %v2_fae4, true
  %v3_fae8 = or i1 %v7_fae4, %v2_fae8
  br i1 %v3_fae8, label %bb1536, label %bb1537

bb1536:                                           ; preds = %dec_label_pc_fad8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1537

bb1537:                                           ; preds = %dec_label_pc_fad8, %bb1536
  %v0_faf0.pr = phi i32 [ %.1943, %dec_label_pc_fad8 ], [ 0, %bb1536 ]
  %v2_faec = xor i1 %v7_fae4, true
  %v3_faec = and i1 %v2_fae4, %v2_faec
  br i1 %v3_faec, label %bb1538, label %thread-pre-split201

bb1538:                                           ; preds = %bb1537
  store i32 %.1970, i32* %r3.global-to-local, align 4
  br label %thread-pre-split201

thread-pre-split201:                              ; preds = %bb1537, %bb1538
  %v0_faf0 = phi i32 [ %.1970, %bb1538 ], [ %v0_faf0.pr, %bb1537 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_faf0 = icmp eq i32 %v0_faf0, 0
  store i1 %v2_faf0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_faf0, label %dec_label_pc_fb00, label %dec_label_pc_faf8

dec_label_pc_faf8:                                ; preds = %thread-pre-split201
  %v2_faf8 = icmp ugt i32 %v1_f188, 205
  store i1 %v2_faf8, i1* %cpsr_c.global-to-local, align 1
  %v7_faf8 = icmp eq i32 %v1_f188, 206
  store i1 %v7_faf8, i1* %cpsr_z.global-to-local, align 1
  %v2_fafc = xor i1 %v2_faf8, true
  %v3_fafc = or i1 %v7_faf8, %v2_fafc
  br i1 %v3_fafc, label %dec_label_pc_f170, label %dec_label_pc_fb00

dec_label_pc_fb00:                                ; preds = %dec_label_pc_faf8, %thread-pre-split201
  store i32 %v0_f85c, i32* %r3.global-to-local, align 4
  %v2_fb08 = and i32 %v0_f85c, %.1945
  %v4_fb08 = icmp eq i32 %v2_fb08, 0
  store i1 %v4_fb08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_fb08, label %dec_label_pc_fb18, label %dec_label_pc_fb10

dec_label_pc_fb10:                                ; preds = %dec_label_pc_fb00
  %v2_fb10 = icmp ugt i32 %v1_f188, 48
  store i1 %v2_fb10, i1* %cpsr_c.global-to-local, align 1
  %v7_fb10 = icmp eq i32 %v1_f188, 49
  store i1 %v7_fb10, i1* %cpsr_z.global-to-local, align 1
  %v2_fb14 = xor i1 %v2_fb10, true
  %v3_fb14 = or i1 %v7_fb10, %v2_fb14
  br i1 %v3_fb14, label %dec_label_pc_f170, label %dec_label_pc_fb18

dec_label_pc_fb18:                                ; preds = %dec_label_pc_fb10, %dec_label_pc_fb00
  store i32 %.1945, i32* %r3.global-to-local, align 4
  %v2_fb1c = icmp ugt i32 %v1_f188, 215
  store i1 %v2_fb1c, i1* %cpsr_c.global-to-local, align 1
  %v7_fb1c = icmp eq i32 %v1_f188, 216
  store i1 %v7_fb1c, i1* %cpsr_z.global-to-local, align 1
  %v2_fb20 = xor i1 %v2_fb1c, true
  %v3_fb20 = or i1 %v7_fb1c, %v2_fb20
  br i1 %v3_fb20, label %bb1539, label %bb1540

bb1539:                                           ; preds = %dec_label_pc_fb18
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1540

bb1540:                                           ; preds = %dec_label_pc_fb18, %bb1539
  %v4_fb24 = phi i32 [ %.1945, %dec_label_pc_fb18 ], [ 0, %bb1539 ]
  %v2_fb24 = xor i1 %v7_fb1c, true
  %v3_fb24 = and i1 %v2_fb1c, %v2_fb24
  br i1 %v3_fb24, label %bb1541, label %thread-pre-split202

bb1541:                                           ; preds = %bb1540
  store i32 %v4_fb24, i32* %r3.global-to-local, align 4
  br label %thread-pre-split202

thread-pre-split202:                              ; preds = %bb1540, %bb1541
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fb28 = icmp eq i32 %v4_fb24, 0
  store i1 %v2_fb28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fb28, label %dec_label_pc_fb38, label %dec_label_pc_fb30

dec_label_pc_fb30:                                ; preds = %thread-pre-split202
  %v2_fb30 = icmp ugt i32 %v1_f188, 231
  store i1 %v2_fb30, i1* %cpsr_c.global-to-local, align 1
  %v7_fb30 = icmp eq i32 %v1_f188, 232
  store i1 %v7_fb30, i1* %cpsr_z.global-to-local, align 1
  %v2_fb34 = xor i1 %v2_fb30, true
  %v3_fb34 = or i1 %v7_fb30, %v2_fb34
  br i1 %v3_fb34, label %dec_label_pc_f170, label %dec_label_pc_fb38

dec_label_pc_fb38:                                ; preds = %dec_label_pc_fb30, %thread-pre-split202
  store i32 %.1958, i32* %r3.global-to-local, align 4
  %v2_fb3c = icmp ugt i32 %v1_f188, 250
  store i1 %v2_fb3c, i1* %cpsr_c.global-to-local, align 1
  %v7_fb3c = icmp eq i32 %v1_f188, 251
  store i1 %v7_fb3c, i1* %cpsr_z.global-to-local, align 1
  %v2_fb40 = xor i1 %v2_fb3c, true
  %v3_fb40 = or i1 %v7_fb3c, %v2_fb40
  br i1 %v3_fb40, label %bb1542, label %bb1543

bb1542:                                           ; preds = %dec_label_pc_fb38
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1543

bb1543:                                           ; preds = %dec_label_pc_fb38, %bb1542
  %v4_fb44 = phi i32 [ %.1958, %dec_label_pc_fb38 ], [ 0, %bb1542 ]
  %v2_fb44 = xor i1 %v7_fb3c, true
  %v3_fb44 = and i1 %v2_fb3c, %v2_fb44
  br i1 %v3_fb44, label %bb1544, label %thread-pre-split203

bb1544:                                           ; preds = %bb1543
  store i32 %v4_fb44, i32* %r3.global-to-local, align 4
  br label %thread-pre-split203

thread-pre-split203:                              ; preds = %bb1543, %bb1544
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fb48 = icmp eq i32 %v4_fb44, 0
  store i1 %v2_fb48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fb48, label %dec_label_pc_fb58, label %dec_label_pc_fb50

dec_label_pc_fb50:                                ; preds = %thread-pre-split203
  %v2_fb50 = icmp ugt i32 %v1_f188, 252
  store i1 %v2_fb50, i1* %cpsr_c.global-to-local, align 1
  %v7_fb50 = icmp eq i32 %v1_f188, 253
  store i1 %v7_fb50, i1* %cpsr_z.global-to-local, align 1
  %v2_fb54 = xor i1 %v2_fb50, true
  %v3_fb54 = or i1 %v7_fb50, %v2_fb54
  br i1 %v3_fb54, label %dec_label_pc_f170, label %dec_label_pc_fb58

dec_label_pc_fb58:                                ; preds = %dec_label_pc_fb50, %thread-pre-split203
  %v7_fb58 = icmp eq i32 %v1_f174, 199
  %.1971 = zext i1 %v7_fb58 to i32
  store i32 %.1971, i32* %r4.global-to-local, align 4
  store i32 %.1971, i32* %r3.global-to-local, align 4
  store i1 %v2_f5a0, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f5a0, i1* %cpsr_z.global-to-local, align 1
  %v2_fb6c = xor i1 %v2_f5a0, true
  %v3_fb6c = or i1 %v7_f5a0, %v2_fb6c
  br i1 %v3_fb6c, label %bb1547, label %bb1548

bb1547:                                           ; preds = %dec_label_pc_fb58
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1548

bb1548:                                           ; preds = %dec_label_pc_fb58, %bb1547
  %v4_fb70 = phi i32 [ %.1971, %dec_label_pc_fb58 ], [ 0, %bb1547 ]
  %v2_fb70 = xor i1 %v7_f5a0, true
  %v3_fb70 = and i1 %v2_f5a0, %v2_fb70
  br i1 %v3_fb70, label %bb1549, label %thread-pre-split205

bb1549:                                           ; preds = %bb1548
  store i32 %v4_fb70, i32* %r3.global-to-local, align 4
  br label %thread-pre-split205

thread-pre-split205:                              ; preds = %bb1548, %bb1549
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fb74 = icmp eq i32 %v4_fb70, 0
  store i1 %v2_fb74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fb74, label %dec_label_pc_fb88, label %dec_label_pc_fb80

dec_label_pc_fb80:                                ; preds = %thread-pre-split205
  %v2_fb80 = icmp ugt i32 %v1_f188, 252
  store i1 %v2_fb80, i1* %cpsr_c.global-to-local, align 1
  %v7_fb80 = icmp eq i32 %v1_f188, 253
  store i1 %v7_fb80, i1* %cpsr_z.global-to-local, align 1
  %v2_fb84 = xor i1 %v2_fb80, true
  %v3_fb84 = or i1 %v7_fb80, %v2_fb84
  br i1 %v3_fb84, label %dec_label_pc_f170, label %dec_label_pc_fb88

dec_label_pc_fb88:                                ; preds = %dec_label_pc_fb80, %thread-pre-split205
  store i32 %v0_107e8, i32* %r3.global-to-local, align 4
  %v2_fb8c = icmp ugt i32 %v1_f174, 204
  store i1 %v2_fb8c, i1* %cpsr_c.global-to-local, align 1
  %v7_fb8c = icmp eq i32 %v1_f174, 205
  store i1 %v7_fb8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fb8c, label %.thread206, label %.thread207

.thread207:                                       ; preds = %dec_label_pc_fb88
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fba8

.thread206:                                       ; preds = %dec_label_pc_fb88
  store i32 %v0_107e8, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fb98 = icmp eq i32 %v0_107e8, 0
  store i1 %v2_fb98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fb98, label %dec_label_pc_fba8, label %dec_label_pc_fba0

dec_label_pc_fba0:                                ; preds = %.thread206
  %v2_fba0 = icmp ugt i32 %v1_f188, 116
  store i1 %v2_fba0, i1* %cpsr_c.global-to-local, align 1
  %v7_fba0 = icmp eq i32 %v1_f188, 117
  store i1 %v7_fba0, i1* %cpsr_z.global-to-local, align 1
  %v2_fba4 = xor i1 %v2_fba0, true
  %v3_fba4 = or i1 %v7_fba0, %v2_fba4
  br i1 %v3_fba4, label %dec_label_pc_f170, label %dec_label_pc_fba8

dec_label_pc_fba8:                                ; preds = %.thread207, %dec_label_pc_fba0, %.thread206
  store i32 %.1951, i32* %r3.global-to-local, align 4
  store i1 %v2_f4f0, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f4f0, i1* %cpsr_z.global-to-local, align 1
  %v2_fbb0 = xor i1 %v2_f4f0, true
  %v3_fbb0 = or i1 %v7_f4f0, %v2_fbb0
  br i1 %v3_fbb0, label %bb1550, label %bb1551

bb1550:                                           ; preds = %dec_label_pc_fba8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1551

bb1551:                                           ; preds = %dec_label_pc_fba8, %bb1550
  %v4_fbb4 = phi i32 [ %.1951, %dec_label_pc_fba8 ], [ 0, %bb1550 ]
  %v2_fbb4 = xor i1 %v7_f4f0, true
  %v3_fbb4 = and i1 %v2_f4f0, %v2_fbb4
  br i1 %v3_fbb4, label %bb1552, label %thread-pre-split210

bb1552:                                           ; preds = %bb1551
  store i32 %v4_fbb4, i32* %r3.global-to-local, align 4
  br label %thread-pre-split210

thread-pre-split210:                              ; preds = %bb1551, %bb1552
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fbb8 = icmp eq i32 %v4_fbb4, 0
  store i1 %v2_fbb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fbb8, label %dec_label_pc_fbc8, label %dec_label_pc_fbc0

dec_label_pc_fbc0:                                ; preds = %thread-pre-split210
  %v2_fbc0 = icmp ugt i32 %v1_f188, 60
  store i1 %v2_fbc0, i1* %cpsr_c.global-to-local, align 1
  %v7_fbc0 = icmp eq i32 %v1_f188, 61
  store i1 %v7_fbc0, i1* %cpsr_z.global-to-local, align 1
  %v2_fbc4 = xor i1 %v2_fbc0, true
  %v3_fbc4 = or i1 %v7_fbc0, %v2_fbc4
  br i1 %v3_fbc4, label %dec_label_pc_f170, label %dec_label_pc_fbc8

dec_label_pc_fbc8:                                ; preds = %dec_label_pc_fbc0, %thread-pre-split210
  store i32 %v0_fbd8, i32* %r3.global-to-local, align 4
  %v2_fbcc = icmp ugt i32 %v1_f174, 103
  store i1 %v2_fbcc, i1* %cpsr_c.global-to-local, align 1
  %v7_fbcc = icmp eq i32 %v1_f174, 104
  %.1972 = zext i1 %v7_fbcc to i32
  %v2_fbd8 = and i32 %v0_fbd8, %.1972
  %v4_fbd8 = icmp eq i32 %v2_fbd8, 0
  store i1 %v4_fbd8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_fbd8, label %dec_label_pc_fbec, label %dec_label_pc_fbe4

dec_label_pc_fbe4:                                ; preds = %dec_label_pc_fbc8
  store i1 %v2_f534, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f534, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_f80c, label %dec_label_pc_f170, label %dec_label_pc_fbec

dec_label_pc_fbec:                                ; preds = %dec_label_pc_fbe4, %dec_label_pc_fbc8
  %v7_fbec = icmp eq i32 %v1_f174, 188
  %.1973 = zext i1 %v7_fbec to i32
  store i32 %.1973, i32* %r4.global-to-local, align 4
  %v2_fbf8 = icmp ugt i32 %v1_f188, 165
  store i1 %v2_fbf8, i1* %cpsr_c.global-to-local, align 1
  %v7_fbf8 = icmp eq i32 %v1_f188, 166
  store i1 %v7_fbf8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fbf8, label %bb1557, label %dec_label_pc_fc08

bb1557:                                           ; preds = %dec_label_pc_fbec
  %v2_fbec = icmp ugt i32 %v1_f174, 187
  store i1 %v2_fbec, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_fbec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fbec, label %dec_label_pc_f170, label %dec_label_pc_fc08

dec_label_pc_fc08:                                ; preds = %dec_label_pc_fbec, %bb1557
  store i32 %.1973, i32* %r3.global-to-local, align 4
  %v2_fc0c = icmp ugt i32 %v1_f188, 225
  store i1 %v2_fc0c, i1* %cpsr_c.global-to-local, align 1
  %v7_fc0c = icmp eq i32 %v1_f188, 226
  store i1 %v7_fc0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fc0c, label %.thread216, label %.thread217

.thread217:                                       ; preds = %dec_label_pc_fc08
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fc20

.thread216:                                       ; preds = %dec_label_pc_fc08
  store i32 %.1973, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fc18 = icmp eq i1 %v7_fbec, false
  store i1 %v2_fc18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fc18, label %dec_label_pc_fc20, label %dec_label_pc_f170

dec_label_pc_fc20:                                ; preds = %.thread217, %.thread216
  %v2_fc20 = icmp ugt i32 %v1_f188, 202
  store i1 %v2_fc20, i1* %cpsr_c.global-to-local, align 1
  %v7_fc20 = icmp eq i32 %v1_f188, 203
  store i1 %v7_fc20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fc20, label %.thread220, label %.thread221

.thread221:                                       ; preds = %dec_label_pc_fc20
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fc34

.thread220:                                       ; preds = %dec_label_pc_fc20
  store i32 %.1968, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fc2c = icmp eq i1 %v7_fa54, false
  store i1 %v2_fc2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fc2c, label %dec_label_pc_fc34, label %dec_label_pc_f170

dec_label_pc_fc34:                                ; preds = %.thread221, %.thread220
  store i32 %.1943, i32* %r3.global-to-local, align 4
  %v2_fc38 = icmp ugt i32 %v1_f188, 242
  store i1 %v2_fc38, i1* %cpsr_c.global-to-local, align 1
  %v7_fc38 = icmp eq i32 %v1_f188, 243
  store i1 %v7_fc38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fc38, label %.thread224, label %.thread225

.thread225:                                       ; preds = %dec_label_pc_fc34
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fc4c

.thread224:                                       ; preds = %dec_label_pc_fc34
  store i32 %.1943, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fc44 = icmp eq i1 %v7_f3e0, false
  store i1 %v2_fc44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fc44, label %dec_label_pc_fc4c, label %dec_label_pc_f170

dec_label_pc_fc4c:                                ; preds = %.thread225, %.thread224
  %v2_fc50 = icmp ugt i32 %v1_f174, 44
  store i1 %v2_fc50, i1* %cpsr_c.global-to-local, align 1
  %v7_fc50 = icmp eq i32 %v1_f174, 45
  %.1974 = zext i1 %v7_fc50 to i32
  %v2_fc5c = and i32 %.1952, %.1974
  %v4_fc5c = icmp eq i32 %v2_fc5c, 0
  store i1 %v4_fc5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_fc5c, label %dec_label_pc_fc68, label %dec_label_pc_f170

dec_label_pc_fc68:                                ; preds = %dec_label_pc_fc4c
  %v7_fc68 = icmp eq i32 %v1_f174, 178
  %.1975 = zext i1 %v7_fc68 to i32
  store i32 %.1975, i32* %r3.global-to-local, align 4
  %v2_fc74 = icmp ugt i32 %v1_f188, 61
  store i1 %v2_fc74, i1* %cpsr_c.global-to-local, align 1
  %v7_fc74 = icmp eq i32 %v1_f188, 62
  %storemerge1217 = zext i1 %v7_fc74 to i32
  store i32 %storemerge1217, i32* %r4.global-to-local, align 4
  %v2_fc80 = and i32 %storemerge1217, %.1975
  %v4_fc80 = icmp eq i32 %v2_fc80, 0
  store i1 %v4_fc80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_fc80, label %dec_label_pc_fc90, label %dec_label_pc_f170

dec_label_pc_fc90:                                ; preds = %dec_label_pc_fc68
  store i32 %.1972, i32* %r3.global-to-local, align 4
  store i1 %v2_fa88, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_fa88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fa88, label %.thread231, label %.thread232

.thread232:                                       ; preds = %dec_label_pc_fc90
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fca8

.thread231:                                       ; preds = %dec_label_pc_fc90
  store i32 %.1972, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fca0 = icmp eq i1 %v7_fbcc, false
  store i1 %v2_fca0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fca0, label %dec_label_pc_fca8, label %dec_label_pc_f170

dec_label_pc_fca8:                                ; preds = %.thread232, %.thread231
  store i32 %.1972, i32* %r3.global-to-local, align 4
  %v2_fcac = icmp ugt i32 %v1_f188, 235
  store i1 %v2_fcac, i1* %cpsr_c.global-to-local, align 1
  %v7_fcac = icmp eq i32 %v1_f188, 236
  store i1 %v7_fcac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fcac, label %.thread235, label %.thread236

.thread236:                                       ; preds = %dec_label_pc_fca8
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fcc0

.thread235:                                       ; preds = %dec_label_pc_fca8
  store i32 %.1972, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fcb8 = icmp eq i1 %v7_fbcc, false
  store i1 %v2_fcb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fcb8, label %dec_label_pc_fcc0, label %dec_label_pc_f170

dec_label_pc_fcc0:                                ; preds = %.thread236, %.thread235
  %v7_fcc0 = icmp eq i32 %v1_f174, 107
  %.1976 = zext i1 %v7_fcc0 to i32
  %v2_fccc = icmp ugt i32 %v1_f188, 169
  store i1 %v2_fccc, i1* %cpsr_c.global-to-local, align 1
  %v7_fccc = icmp eq i32 %v1_f188, 170
  %storemerge1219 = zext i1 %v7_fccc to i32
  %v2_fcd8 = and i32 %storemerge1219, %.1976
  %v4_fcd8 = icmp eq i32 %v2_fcd8, 0
  store i1 %v4_fcd8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_fcd8, label %dec_label_pc_fce8, label %dec_label_pc_f170

dec_label_pc_fce8:                                ; preds = %dec_label_pc_fcc0
  store i32 %.1963, i32* %r3.global-to-local, align 4
  store i1 %v2_f90c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f90c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f90c, label %.thread241, label %.thread242

.thread242:                                       ; preds = %dec_label_pc_fce8
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fd00

.thread241:                                       ; preds = %dec_label_pc_fce8
  store i32 %.1963, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fcf8 = icmp eq i1 %v7_f7c8, false
  store i1 %v2_fcf8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fcf8, label %dec_label_pc_fd00, label %dec_label_pc_f170

dec_label_pc_fd00:                                ; preds = %.thread242, %.thread241
  store i32 %.1947, i32* %r3.global-to-local, align 4
  store i32 %.1963, i32* %r4.global-to-local, align 4
  %v2_fd08 = and i32 %.1947, %.1963
  %v4_fd08 = icmp eq i32 %v2_fd08, 0
  store i1 %v4_fd08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_fd08, label %dec_label_pc_fd10, label %dec_label_pc_f170

dec_label_pc_fd10:                                ; preds = %dec_label_pc_fd00
  %v2_fd18 = and i32 %.1949, %.1964
  %v4_fd18 = icmp eq i32 %v2_fd18, 0
  store i1 %v4_fd18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_fd18, label %dec_label_pc_fd20, label %dec_label_pc_f170

dec_label_pc_fd20:                                ; preds = %dec_label_pc_fd10
  %v2_fd20 = icmp ugt i32 %v1_f188, 184
  store i1 %v2_fd20, i1* %cpsr_c.global-to-local, align 1
  %v7_fd20 = icmp eq i32 %v1_f188, 185
  store i1 %v7_fd20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fd20, label %.thread245, label %.thread246

.thread246:                                       ; preds = %dec_label_pc_fd20
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fd48

.thread245:                                       ; preds = %dec_label_pc_fd20
  store i32 %.1931, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fd2c = icmp eq i1 %v7_f230, false
  store i1 %v2_fd2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fd2c, label %dec_label_pc_fd48, label %dec_label_pc_fd34

dec_label_pc_fd34:                                ; preds = %.thread245
  %v2_fd34 = icmp ugt i32 %v1_f18c, 189
  store i1 %v2_fd34, i1* %cpsr_c.global-to-local, align 1
  %v7_fd34 = icmp eq i32 %v1_f18c, 190
  store i1 %v7_fd34, i1* %cpsr_z.global-to-local, align 1
  %v2_fd38 = xor i1 %v7_fd34, true
  %v3_fd38 = and i1 %v2_fd34, %v2_fd38
  br i1 %v3_fd38, label %bb1568, label %bb1569

bb1568:                                           ; preds = %dec_label_pc_fd34
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1569

bb1569:                                           ; preds = %dec_label_pc_fd34, %bb1568
  %v0_fd40834 = phi i32 [ %.1931, %dec_label_pc_fd34 ], [ 0, %bb1568 ]
  %v2_fd3c = xor i1 %v2_fd34, true
  %v3_fd3c = or i1 %v7_fd34, %v2_fd3c
  br i1 %v3_fd3c, label %bb1570, label %bb1571

bb1570:                                           ; preds = %bb1569
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1571

bb1571:                                           ; preds = %bb1569, %bb1570
  %v0_fd40 = phi i32 [ %v0_fd40834, %bb1569 ], [ 1, %bb1570 ]
  %v2_fd40 = and i32 %v3_f17c, 64
  %v3_fd40 = icmp ne i32 %v2_fd40, 0
  store i1 %v3_fd40, i1* %cpsr_c.global-to-local, align 1
  %v4_fd40 = udiv i32 %v1_f18c, 128
  %v5_fd40 = and i32 %v0_fd40, %v4_fd40
  store i32 %v5_fd40, i32* %r3.global-to-local, align 4
  %v6_fd40 = icmp eq i32 %v5_fd40, 0
  store i1 %v6_fd40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_fd40, label %dec_label_pc_fd48, label %dec_label_pc_f170

dec_label_pc_fd48:                                ; preds = %.thread246, %bb1571, %.thread245
  %v2_fd48 = icmp ugt i32 %v1_f188, 46
  store i1 %v2_fd48, i1* %cpsr_c.global-to-local, align 1
  %v7_fd48 = icmp eq i32 %v1_f188, 47
  %.1977 = zext i1 %v7_fd48 to i32
  %v2_fd54 = and i32 %.1977, %.1970
  %v4_fd54 = icmp eq i32 %v2_fd54, 0
  store i1 %v4_fd54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_fd54, label %dec_label_pc_fd78, label %dec_label_pc_fd5c

dec_label_pc_fd5c:                                ; preds = %dec_label_pc_fd48
  %v2_fd5c = icmp ugt i32 %v1_f18c, 8
  store i1 %v2_fd5c, i1* %cpsr_c.global-to-local, align 1
  %v7_fd5c = icmp eq i32 %v1_f18c, 9
  store i1 %v7_fd5c, i1* %cpsr_z.global-to-local, align 1
  %v2_fd60 = xor i1 %v2_fd5c, true
  %v3_fd60 = or i1 %v7_fd5c, %v2_fd60
  br i1 %v3_fd60, label %bb1574, label %bb1575

bb1574:                                           ; preds = %dec_label_pc_fd5c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1575

bb1575:                                           ; preds = %dec_label_pc_fd5c, %bb1574
  %v2_fd64 = xor i1 %v7_fd5c, true
  %v3_fd64 = and i1 %v2_fd5c, %v2_fd64
  br i1 %v3_fd64, label %bb1576, label %bb1577

bb1576:                                           ; preds = %bb1575
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1577

bb1577:                                           ; preds = %bb1575, %bb1576
  %v0_fd70.pr = phi i32 [ 0, %bb1575 ], [ 1, %bb1576 ]
  %v2_fd68 = icmp ugt i32 %v1_f18c, 9
  store i1 %v2_fd68, i1* %cpsr_c.global-to-local, align 1
  %v7_fd68 = icmp eq i32 %v1_f18c, 10
  store i1 %v7_fd68, i1* %cpsr_z.global-to-local, align 1
  %v2_fd6c = xor i1 %v7_fd68, true
  %v3_fd6c = and i1 %v2_fd68, %v2_fd6c
  br i1 %v3_fd6c, label %.thread251, label %bb1578

.thread251:                                       ; preds = %bb1577
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fd78

bb1578:                                           ; preds = %bb1577
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fd70 = icmp eq i32 %v0_fd70.pr, 0
  store i1 %v2_fd70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fd70, label %dec_label_pc_fd78, label %dec_label_pc_f170

dec_label_pc_fd78:                                ; preds = %.thread251, %bb1578, %dec_label_pc_fd48
  %v2_fd78 = icmp ugt i32 %v1_f174, 173
  store i1 %v2_fd78, i1* %cpsr_c.global-to-local, align 1
  %v7_fd78 = icmp eq i32 %v1_f174, 174
  store i1 %v7_fd78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fd78, label %bb1579, label %dec_label_pc_fd9c

bb1579:                                           ; preds = %dec_label_pc_fd78
  %v3_fd7c = icmp ugt i32 %v1_f188, 137
  store i1 %v3_fd7c, i1* %cpsr_c.global-to-local, align 1
  %v8_fd7c = icmp eq i32 %v1_f188, 138
  store i1 %v8_fd7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fd7c, label %dec_label_pc_fd84, label %dec_label_pc_fd9c

dec_label_pc_fd84:                                ; preds = %bb1579
  store i32 %v1_f18c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fd84 = icmp eq i32 %v1_f18c, 0
  store i1 %v2_fd84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fd84, label %bb1581, label %bb1580

bb1580:                                           ; preds = %dec_label_pc_fd84
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1581

bb1581:                                           ; preds = %dec_label_pc_fd84, %bb1580
  %v0_fd94.pr = phi i32 [ 0, %dec_label_pc_fd84 ], [ 1, %bb1580 ]
  %v2_fd8c = icmp ugt i32 %v1_f18c, 125
  store i1 %v2_fd8c, i1* %cpsr_c.global-to-local, align 1
  %v7_fd8c = icmp eq i32 %v1_f18c, 126
  store i1 %v7_fd8c, i1* %cpsr_z.global-to-local, align 1
  %v2_fd90 = xor i1 %v7_fd8c, true
  %v3_fd90 = and i1 %v2_fd8c, %v2_fd90
  br i1 %v3_fd90, label %.thread256, label %bb1582

.thread256:                                       ; preds = %bb1581
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fd9c

bb1582:                                           ; preds = %bb1581
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fd94 = icmp eq i32 %v0_fd94.pr, 0
  store i1 %v2_fd94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fd94, label %dec_label_pc_fd9c, label %dec_label_pc_f170

dec_label_pc_fd9c:                                ; preds = %dec_label_pc_fd78, %.thread256, %bb1582, %bb1579
  %v2_fd9c = icmp ugt i32 %v1_f188, 240
  store i1 %v2_fd9c, i1* %cpsr_c.global-to-local, align 1
  %v7_fd9c = icmp eq i32 %v1_f188, 241
  store i1 %v7_fd9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fd9c, label %.thread259, label %.thread260

.thread260:                                       ; preds = %dec_label_pc_fd9c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fdc0

.thread259:                                       ; preds = %dec_label_pc_fd9c
  store i32 %.1930, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fda8 = icmp eq i1 %v7_f218, false
  store i1 %v2_fda8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fda8, label %dec_label_pc_fdc0, label %dec_label_pc_fdb0

dec_label_pc_fdb0:                                ; preds = %.thread259
  %v1_fdb0 = add nsw i32 %v1_f18c, -255
  store i32 %v1_fdb0, i32* %r3.global-to-local, align 4
  %v2_fdb0 = icmp eq i32 %v1_f18c, 255
  store i1 %v2_fdb0, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_fdb0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fdb0, label %bb1584, label %bb1583

bb1583:                                           ; preds = %dec_label_pc_fdb0
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1584

bb1584:                                           ; preds = %dec_label_pc_fdb0, %bb1583
  %v0_fdb8 = phi i32 [ %v1_fdb0, %dec_label_pc_fdb0 ], [ 1, %bb1583 ]
  %v2_fdb8 = and i32 %v3_f17c, 64
  %v3_fdb8 = icmp ne i32 %v2_fdb8, 0
  store i1 %v3_fdb8, i1* %cpsr_c.global-to-local, align 1
  %v4_fdb8 = udiv i32 %v1_f18c, 128
  %v5_fdb8 = and i32 %v0_fdb8, %v4_fdb8
  store i32 %v5_fdb8, i32* %r3.global-to-local, align 4
  %v6_fdb8 = icmp eq i32 %v5_fdb8, 0
  store i1 %v6_fdb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_fdb8, label %dec_label_pc_fdc0, label %dec_label_pc_f170

dec_label_pc_fdc0:                                ; preds = %.thread260, %bb1584, %.thread259
  store i32 %.1959, i32* %r3.global-to-local, align 4
  %v2_fdc4 = icmp ugt i32 %v1_f188, 198
  store i1 %v2_fdc4, i1* %cpsr_c.global-to-local, align 1
  %v7_fdc4 = icmp eq i32 %v1_f188, 199
  store i1 %v7_fdc4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fdc4, label %.thread263, label %.thread264

.thread264:                                       ; preds = %dec_label_pc_fdc0
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fdf4

.thread263:                                       ; preds = %dec_label_pc_fdc0
  store i32 %.1959, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fdd0 = icmp eq i1 %v7_f674, false
  store i1 %v2_fdd0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fdd0, label %dec_label_pc_fdf4, label %dec_label_pc_fdd8

dec_label_pc_fdd8:                                ; preds = %.thread263
  %v2_fdd8 = icmp ugt i32 %v1_f18c, 62
  store i1 %v2_fdd8, i1* %cpsr_c.global-to-local, align 1
  %v7_fdd8 = icmp eq i32 %v1_f18c, 63
  store i1 %v7_fdd8, i1* %cpsr_z.global-to-local, align 1
  %v2_fddc = xor i1 %v2_fdd8, true
  %v3_fddc = or i1 %v7_fdd8, %v2_fddc
  br i1 %v3_fddc, label %bb1585, label %bb1586

bb1585:                                           ; preds = %dec_label_pc_fdd8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1586

bb1586:                                           ; preds = %dec_label_pc_fdd8, %bb1585
  %v0_fdec.pr844 = phi i32 [ %.1959, %dec_label_pc_fdd8 ], [ 0, %bb1585 ]
  %v2_fde0 = xor i1 %v7_fdd8, true
  %v3_fde0 = and i1 %v2_fdd8, %v2_fde0
  br i1 %v3_fde0, label %bb1587, label %bb1588

bb1587:                                           ; preds = %bb1586
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1588

bb1588:                                           ; preds = %bb1586, %bb1587
  %v0_fdec.pr = phi i32 [ %v0_fdec.pr844, %bb1586 ], [ 1, %bb1587 ]
  %v2_fde4 = icmp ugt i32 %v1_f18c, 125
  store i1 %v2_fde4, i1* %cpsr_c.global-to-local, align 1
  %v7_fde4 = icmp eq i32 %v1_f18c, 126
  store i1 %v7_fde4, i1* %cpsr_z.global-to-local, align 1
  %v2_fde8 = xor i1 %v7_fde4, true
  %v3_fde8 = and i1 %v2_fde4, %v2_fde8
  br i1 %v3_fde8, label %.thread268, label %bb1589

.thread268:                                       ; preds = %bb1588
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fdf4

bb1589:                                           ; preds = %bb1588
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fdec = icmp eq i32 %v0_fdec.pr, 0
  store i1 %v2_fdec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fdec, label %dec_label_pc_fdf4, label %dec_label_pc_f170

dec_label_pc_fdf4:                                ; preds = %.thread268, %.thread264, %bb1589, %.thread263
  store i32 %.1959, i32* %r3.global-to-local, align 4
  %v2_fdf8 = icmp ugt i32 %v1_f188, 210
  store i1 %v2_fdf8, i1* %cpsr_c.global-to-local, align 1
  %v7_fdf8 = icmp eq i32 %v1_f188, 211
  store i1 %v7_fdf8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fdf8, label %.thread271, label %.thread272

.thread272:                                       ; preds = %dec_label_pc_fdf4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fe28

.thread271:                                       ; preds = %dec_label_pc_fdf4
  store i32 %.1959, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fe04 = icmp eq i1 %v7_f674, false
  store i1 %v2_fe04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fe04, label %dec_label_pc_fe28, label %dec_label_pc_fe0c

dec_label_pc_fe0c:                                ; preds = %.thread271
  %v2_fe0c = icmp ugt i32 %v1_f18c, 94
  store i1 %v2_fe0c, i1* %cpsr_c.global-to-local, align 1
  %v7_fe0c = icmp eq i32 %v1_f18c, 95
  store i1 %v7_fe0c, i1* %cpsr_z.global-to-local, align 1
  %v2_fe10 = xor i1 %v2_fe0c, true
  %v3_fe10 = or i1 %v7_fe0c, %v2_fe10
  br i1 %v3_fe10, label %bb1590, label %bb1591

bb1590:                                           ; preds = %dec_label_pc_fe0c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1591

bb1591:                                           ; preds = %dec_label_pc_fe0c, %bb1590
  %v0_fe20.pr847 = phi i32 [ %.1959, %dec_label_pc_fe0c ], [ 0, %bb1590 ]
  %v2_fe14 = xor i1 %v7_fe0c, true
  %v3_fe14 = and i1 %v2_fe0c, %v2_fe14
  br i1 %v3_fe14, label %bb1592, label %bb1593

bb1592:                                           ; preds = %bb1591
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1593

bb1593:                                           ; preds = %bb1591, %bb1592
  %v0_fe20.pr = phi i32 [ %v0_fe20.pr847, %bb1591 ], [ 1, %bb1592 ]
  %v2_fe18 = icmp ugt i32 %v1_f18c, 125
  store i1 %v2_fe18, i1* %cpsr_c.global-to-local, align 1
  %v7_fe18 = icmp eq i32 %v1_f18c, 126
  store i1 %v7_fe18, i1* %cpsr_z.global-to-local, align 1
  %v2_fe1c = xor i1 %v7_fe18, true
  %v3_fe1c = and i1 %v2_fe18, %v2_fe1c
  br i1 %v3_fe1c, label %.thread276, label %bb1594

.thread276:                                       ; preds = %bb1593
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fe28

bb1594:                                           ; preds = %bb1593
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fe20 = icmp eq i32 %v0_fe20.pr, 0
  store i1 %v2_fe20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fe20, label %dec_label_pc_fe28, label %dec_label_pc_f170

dec_label_pc_fe28:                                ; preds = %.thread276, %.thread272, %bb1594, %.thread271
  store i32 %.1951, i32* %r3.global-to-local, align 4
  %v2_fe2c = and i32 %.1934, %.1951
  %v4_fe2c = icmp eq i32 %v2_fe2c, 0
  store i1 %v4_fe2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_fe2c, label %dec_label_pc_fe40, label %dec_label_pc_fe34

dec_label_pc_fe34:                                ; preds = %dec_label_pc_fe28
  %v2_fe34 = icmp eq i32 %v1_f18c, 255
  store i1 %v2_fe34, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_fe34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fe34, label %dec_label_pc_fe40, label %bb1595

bb1595:                                           ; preds = %dec_label_pc_fe34
  %v3_fe38 = icmp ugt i32 %v1_f18c, 190
  store i1 %v3_fe38, i1* %cpsr_c.global-to-local, align 1
  %v8_fe38 = icmp eq i32 %v1_f18c, 191
  store i1 %v8_fe38, i1* %cpsr_z.global-to-local, align 1
  %v2_fe3c = xor i1 %v8_fe38, true
  %v3_fe3c = and i1 %v3_fe38, %v2_fe3c
  br i1 %v3_fe3c, label %dec_label_pc_f170, label %dec_label_pc_fe40

dec_label_pc_fe40:                                ; preds = %dec_label_pc_fe34, %bb1595, %dec_label_pc_fe28
  %v7_fe40 = icmp eq i32 %v1_f174, 37
  %.1978 = zext i1 %v7_fe40 to i32
  store i32 %.1978, i32* %sl.global-to-local, align 4
  %v2_fe4c = icmp ugt i32 %v1_f188, 138
  store i1 %v2_fe4c, i1* %cpsr_c.global-to-local, align 1
  %v7_fe4c = icmp eq i32 %v1_f188, 139
  store i1 %v7_fe4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fe4c, label %bb1598, label %dec_label_pc_fe70

bb1598:                                           ; preds = %dec_label_pc_fe40
  %v2_fe40 = icmp ugt i32 %v1_f174, 36
  store i1 %v2_fe40, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_fe40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fe40, label %dec_label_pc_fe58, label %dec_label_pc_fe70

dec_label_pc_fe58:                                ; preds = %bb1598
  store i32 %v1_f18c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fe58 = icmp eq i32 %v1_f18c, 0
  store i1 %v2_fe58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fe58, label %bb1600, label %bb1599

bb1599:                                           ; preds = %dec_label_pc_fe58
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1600

bb1600:                                           ; preds = %dec_label_pc_fe58, %bb1599
  %v0_fe68.pr = phi i32 [ 0, %dec_label_pc_fe58 ], [ 1, %bb1599 ]
  %v2_fe60 = icmp ugt i32 %v1_f18c, 29
  store i1 %v2_fe60, i1* %cpsr_c.global-to-local, align 1
  %v7_fe60 = icmp eq i32 %v1_f18c, 30
  store i1 %v7_fe60, i1* %cpsr_z.global-to-local, align 1
  %v2_fe64 = xor i1 %v7_fe60, true
  %v3_fe64 = and i1 %v2_fe60, %v2_fe64
  br i1 %v3_fe64, label %.thread282, label %bb1601

.thread282:                                       ; preds = %bb1600
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fe70

bb1601:                                           ; preds = %bb1600
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fe68 = icmp eq i32 %v0_fe68.pr, 0
  store i1 %v2_fe68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fe68, label %dec_label_pc_fe70, label %dec_label_pc_f170

dec_label_pc_fe70:                                ; preds = %dec_label_pc_fe40, %.thread282, %bb1601, %bb1598
  %v0_fe9c.pr853 = phi i32 [ %.1951, %dec_label_pc_fe40 ], [ 0, %.thread282 ], [ 0, %bb1601 ], [ %.1951, %bb1598 ]
  %v7_fe70 = icmp eq i32 %v1_f174, 67
  %.1979 = zext i1 %v7_fe70 to i32
  %v2_fe7c = icmp ugt i32 %v1_f188, 206
  store i1 %v2_fe7c, i1* %cpsr_c.global-to-local, align 1
  %v7_fe7c = icmp eq i32 %v1_f188, 207
  store i1 %v7_fe7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fe7c, label %bb1604, label %dec_label_pc_fea4

bb1604:                                           ; preds = %dec_label_pc_fe70
  %v2_fe70 = icmp ugt i32 %v1_f174, 66
  store i1 %v2_fe70, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_fe70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fe70, label %dec_label_pc_fe88, label %dec_label_pc_fea4

dec_label_pc_fe88:                                ; preds = %bb1604
  %v2_fe88 = icmp ugt i32 %v1_f18c, 62
  store i1 %v2_fe88, i1* %cpsr_c.global-to-local, align 1
  %v7_fe88 = icmp eq i32 %v1_f18c, 63
  store i1 %v7_fe88, i1* %cpsr_z.global-to-local, align 1
  %v2_fe8c = xor i1 %v2_fe88, true
  %v3_fe8c = or i1 %v7_fe88, %v2_fe8c
  br i1 %v3_fe8c, label %bb1605, label %bb1606

bb1605:                                           ; preds = %dec_label_pc_fe88
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1606

bb1606:                                           ; preds = %dec_label_pc_fe88, %bb1605
  %v0_fe9c.pr852 = phi i32 [ %v0_fe9c.pr853, %dec_label_pc_fe88 ], [ 0, %bb1605 ]
  %v2_fe90 = xor i1 %v7_fe88, true
  %v3_fe90 = and i1 %v2_fe88, %v2_fe90
  br i1 %v3_fe90, label %bb1607, label %bb1608

bb1607:                                           ; preds = %bb1606
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1608

bb1608:                                           ; preds = %bb1606, %bb1607
  %v0_fe9c.pr = phi i32 [ %v0_fe9c.pr852, %bb1606 ], [ 1, %bb1607 ]
  %v2_fe94 = icmp ugt i32 %v1_f18c, 93
  store i1 %v2_fe94, i1* %cpsr_c.global-to-local, align 1
  %v7_fe94 = icmp eq i32 %v1_f18c, 94
  store i1 %v7_fe94, i1* %cpsr_z.global-to-local, align 1
  %v2_fe98 = xor i1 %v7_fe94, true
  %v3_fe98 = and i1 %v2_fe94, %v2_fe98
  br i1 %v3_fe98, label %.thread288, label %bb1609

.thread288:                                       ; preds = %bb1608
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fea4

bb1609:                                           ; preds = %bb1608
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fe9c = icmp eq i32 %v0_fe9c.pr, 0
  store i1 %v2_fe9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fe9c, label %dec_label_pc_fea4, label %dec_label_pc_f170

dec_label_pc_fea4:                                ; preds = %dec_label_pc_fe70, %.thread288, %bb1609, %bb1604
  %v2_fea4 = icmp ugt i32 %v1_f188, 204
  store i1 %v2_fea4, i1* %cpsr_c.global-to-local, align 1
  %v7_fea4 = icmp eq i32 %v1_f188, 205
  store i1 %v7_fea4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fea4, label %.thread291, label %.thread292

.thread292:                                       ; preds = %dec_label_pc_fea4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fecc

.thread291:                                       ; preds = %dec_label_pc_fea4
  store i32 %.1979, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_feb0 = icmp eq i1 %v7_fe70, false
  store i1 %v2_feb0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_feb0, label %dec_label_pc_fecc, label %dec_label_pc_feb8

dec_label_pc_feb8:                                ; preds = %.thread291
  %v2_feb8 = icmp ugt i32 %v1_f18c, 189
  store i1 %v2_feb8, i1* %cpsr_c.global-to-local, align 1
  %v7_feb8 = icmp eq i32 %v1_f18c, 190
  store i1 %v7_feb8, i1* %cpsr_z.global-to-local, align 1
  %v2_febc = xor i1 %v7_feb8, true
  %v3_febc = and i1 %v2_feb8, %v2_febc
  br i1 %v3_febc, label %bb1610, label %bb1611

bb1610:                                           ; preds = %dec_label_pc_feb8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1611

bb1611:                                           ; preds = %dec_label_pc_feb8, %bb1610
  %v0_fec4856 = phi i32 [ %.1979, %dec_label_pc_feb8 ], [ 0, %bb1610 ]
  %v2_fec0 = xor i1 %v2_feb8, true
  %v3_fec0 = or i1 %v7_feb8, %v2_fec0
  br i1 %v3_fec0, label %bb1612, label %bb1613

bb1612:                                           ; preds = %bb1611
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1613

bb1613:                                           ; preds = %bb1611, %bb1612
  %v0_fec4 = phi i32 [ %v0_fec4856, %bb1611 ], [ 1, %bb1612 ]
  %v2_fec4 = and i32 %v3_f17c, 64
  %v3_fec4 = icmp ne i32 %v2_fec4, 0
  store i1 %v3_fec4, i1* %cpsr_c.global-to-local, align 1
  %v4_fec4 = udiv i32 %v1_f18c, 128
  %v5_fec4 = and i32 %v0_fec4, %v4_fec4
  store i32 %v5_fec4, i32* %r3.global-to-local, align 4
  %v6_fec4 = icmp eq i32 %v5_fec4, 0
  store i1 %v6_fec4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_fec4, label %dec_label_pc_fecc, label %dec_label_pc_f170

dec_label_pc_fecc:                                ; preds = %.thread292, %bb1613, %.thread291
  store i32 %.1954, i32* %r3.global-to-local, align 4
  %v2_fed0 = icmp ugt i32 %v1_f188, 239
  store i1 %v2_fed0, i1* %cpsr_c.global-to-local, align 1
  %v7_fed0 = icmp eq i32 %v1_f188, 240
  store i1 %v7_fed0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fed0, label %.thread295, label %.thread296

.thread296:                                       ; preds = %dec_label_pc_fecc
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fef8

.thread295:                                       ; preds = %dec_label_pc_fecc
  store i32 %.1954, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fedc = icmp eq i1 %v7_f580, false
  store i1 %v2_fedc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fedc, label %dec_label_pc_fef8, label %dec_label_pc_fee4

dec_label_pc_fee4:                                ; preds = %.thread295
  %v2_fee4 = icmp ugt i32 %v1_f18c, 141
  store i1 %v2_fee4, i1* %cpsr_c.global-to-local, align 1
  %v7_fee4 = icmp eq i32 %v1_f18c, 142
  store i1 %v7_fee4, i1* %cpsr_z.global-to-local, align 1
  %v2_fee8 = xor i1 %v7_fee4, true
  %v3_fee8 = and i1 %v2_fee4, %v2_fee8
  br i1 %v3_fee8, label %bb1614, label %bb1615

bb1614:                                           ; preds = %dec_label_pc_fee4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1615

bb1615:                                           ; preds = %dec_label_pc_fee4, %bb1614
  %v0_fef0859 = phi i32 [ %.1954, %dec_label_pc_fee4 ], [ 0, %bb1614 ]
  %v2_feec = xor i1 %v2_fee4, true
  %v3_feec = or i1 %v7_fee4, %v2_feec
  br i1 %v3_feec, label %bb1616, label %bb1617

bb1616:                                           ; preds = %bb1615
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1617

bb1617:                                           ; preds = %bb1615, %bb1616
  %v0_fef0 = phi i32 [ %v0_fef0859, %bb1615 ], [ 1, %bb1616 ]
  %v2_fef0 = and i32 %v3_f17c, 64
  %v3_fef0 = icmp ne i32 %v2_fef0, 0
  store i1 %v3_fef0, i1* %cpsr_c.global-to-local, align 1
  %v4_fef0 = udiv i32 %v1_f18c, 128
  %v5_fef0 = and i32 %v0_fef0, %v4_fef0
  store i32 %v5_fef0, i32* %r3.global-to-local, align 4
  %v6_fef0 = icmp eq i32 %v5_fef0, 0
  store i1 %v6_fef0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_fef0, label %dec_label_pc_fef8, label %dec_label_pc_f170

dec_label_pc_fef8:                                ; preds = %.thread296, %bb1617, %.thread295
  store i32 %.1939, i32* %r3.global-to-local, align 4
  %v2_fefc = icmp ugt i32 %v1_f174, 81
  store i1 %v2_fefc, i1* %cpsr_c.global-to-local, align 1
  %v7_fefc = icmp eq i32 %v1_f174, 82
  store i1 %v7_fefc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fefc, label %.thread299, label %.thread300

.thread300:                                       ; preds = %dec_label_pc_fef8
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ff28

.thread299:                                       ; preds = %dec_label_pc_fef8
  store i32 %.1939, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ff08 = icmp eq i1 %v7_f348, false
  store i1 %v2_ff08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ff08, label %dec_label_pc_ff28, label %dec_label_pc_ff10

dec_label_pc_ff10:                                ; preds = %.thread299
  store i32 %v1_f18c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ff10 = icmp eq i32 %v1_f18c, 0
  store i1 %v2_ff10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ff10, label %bb1619, label %bb1618

bb1618:                                           ; preds = %dec_label_pc_ff10
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1619

bb1619:                                           ; preds = %dec_label_pc_ff10, %bb1618
  %v0_ff20.pr = phi i32 [ 0, %dec_label_pc_ff10 ], [ 1, %bb1618 ]
  %v2_ff18 = icmp ugt i32 %v1_f18c, 13
  store i1 %v2_ff18, i1* %cpsr_c.global-to-local, align 1
  %v7_ff18 = icmp eq i32 %v1_f18c, 14
  store i1 %v7_ff18, i1* %cpsr_z.global-to-local, align 1
  %v2_ff1c = xor i1 %v7_ff18, true
  %v3_ff1c = and i1 %v2_ff18, %v2_ff1c
  br i1 %v3_ff1c, label %.thread304, label %bb1620

.thread304:                                       ; preds = %bb1619
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ff28

bb1620:                                           ; preds = %bb1619
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ff20 = icmp eq i32 %v0_ff20.pr, 0
  store i1 %v2_ff20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ff20, label %dec_label_pc_ff28, label %dec_label_pc_f170

dec_label_pc_ff28:                                ; preds = %.thread304, %.thread300, %bb1620, %.thread299
  store i32 %.1948, i32* %r3.global-to-local, align 4
  %v2_ff2c = icmp ugt i32 %v1_f174, 94
  store i1 %v2_ff2c, i1* %cpsr_c.global-to-local, align 1
  %v7_ff2c = icmp eq i32 %v1_f174, 95
  store i1 %v7_ff2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ff2c, label %.thread307, label %.thread308

.thread308:                                       ; preds = %dec_label_pc_ff28
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ff5c

.thread307:                                       ; preds = %dec_label_pc_ff28
  store i32 %.1948, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ff38 = icmp eq i1 %v7_f4c4, false
  store i1 %v2_ff38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ff38, label %dec_label_pc_ff5c, label %dec_label_pc_ff40

dec_label_pc_ff40:                                ; preds = %.thread307
  %v2_ff40 = icmp ugt i32 %v1_f18c, 6
  store i1 %v2_ff40, i1* %cpsr_c.global-to-local, align 1
  %v7_ff40 = icmp eq i32 %v1_f18c, 7
  store i1 %v7_ff40, i1* %cpsr_z.global-to-local, align 1
  %v2_ff44 = xor i1 %v2_ff40, true
  %v3_ff44 = or i1 %v7_ff40, %v2_ff44
  br i1 %v3_ff44, label %bb1621, label %bb1622

bb1621:                                           ; preds = %dec_label_pc_ff40
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1622

bb1622:                                           ; preds = %dec_label_pc_ff40, %bb1621
  %v0_ff54.pr864 = phi i32 [ %.1948, %dec_label_pc_ff40 ], [ 0, %bb1621 ]
  %v2_ff48 = xor i1 %v7_ff40, true
  %v3_ff48 = and i1 %v2_ff40, %v2_ff48
  br i1 %v3_ff48, label %bb1623, label %bb1624

bb1623:                                           ; preds = %bb1622
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1624

bb1624:                                           ; preds = %bb1622, %bb1623
  %v0_ff54.pr = phi i32 [ %v0_ff54.pr864, %bb1622 ], [ 1, %bb1623 ]
  %v2_ff4c = icmp ugt i32 %v1_f18c, 61
  store i1 %v2_ff4c, i1* %cpsr_c.global-to-local, align 1
  %v7_ff4c = icmp eq i32 %v1_f18c, 62
  store i1 %v7_ff4c, i1* %cpsr_z.global-to-local, align 1
  %v2_ff50 = xor i1 %v7_ff4c, true
  %v3_ff50 = and i1 %v2_ff4c, %v2_ff50
  br i1 %v3_ff50, label %.thread312, label %bb1625

.thread312:                                       ; preds = %bb1624
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ff5c

bb1625:                                           ; preds = %bb1624
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ff54 = icmp eq i32 %v0_ff54.pr, 0
  store i1 %v2_ff54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ff54, label %dec_label_pc_ff5c, label %dec_label_pc_f170

dec_label_pc_ff5c:                                ; preds = %.thread312, %.thread308, %bb1625, %.thread307
  store i1 %v2_f928, i1* %cpsr_c.global-to-local, align 1
  %.1980 = zext i1 %v7_f928 to i32
  store i32 %.1980, i32* %r4.global-to-local, align 4
  %v2_ff6c = and i32 %.1980, %.1956
  %v4_ff6c = icmp eq i32 %v2_ff6c, 0
  store i1 %v4_ff6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_ff6c, label %dec_label_pc_ff90, label %dec_label_pc_ff74

dec_label_pc_ff74:                                ; preds = %dec_label_pc_ff5c
  %v2_ff74 = icmp ugt i32 %v1_f18c, 30
  store i1 %v2_ff74, i1* %cpsr_c.global-to-local, align 1
  %v7_ff74 = icmp eq i32 %v1_f18c, 31
  store i1 %v7_ff74, i1* %cpsr_z.global-to-local, align 1
  %v2_ff78 = xor i1 %v2_ff74, true
  %v3_ff78 = or i1 %v7_ff74, %v2_ff78
  br i1 %v3_ff78, label %bb1628, label %bb1629

bb1628:                                           ; preds = %dec_label_pc_ff74
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1629

bb1629:                                           ; preds = %dec_label_pc_ff74, %bb1628
  %v2_ff7c = xor i1 %v7_ff74, true
  %v3_ff7c = and i1 %v2_ff74, %v2_ff7c
  br i1 %v3_ff7c, label %bb1630, label %bb1631

bb1630:                                           ; preds = %bb1629
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1631

bb1631:                                           ; preds = %bb1629, %bb1630
  %v0_ff88.pr = phi i32 [ 0, %bb1629 ], [ 1, %bb1630 ]
  %v2_ff80 = icmp ugt i32 %v1_f18c, 41
  store i1 %v2_ff80, i1* %cpsr_c.global-to-local, align 1
  %v7_ff80 = icmp eq i32 %v1_f18c, 42
  store i1 %v7_ff80, i1* %cpsr_z.global-to-local, align 1
  %v2_ff84 = xor i1 %v7_ff80, true
  %v3_ff84 = and i1 %v2_ff80, %v2_ff84
  br i1 %v3_ff84, label %.thread317, label %bb1632

.thread317:                                       ; preds = %bb1631
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ff90

bb1632:                                           ; preds = %bb1631
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ff88 = icmp eq i32 %v0_ff88.pr, 0
  store i1 %v2_ff88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ff88, label %dec_label_pc_ff90, label %dec_label_pc_f170

dec_label_pc_ff90:                                ; preds = %.thread317, %bb1632, %dec_label_pc_ff5c
  %v7_ff90 = icmp eq i32 %v1_f174, 185
  %.1981 = zext i1 %v7_ff90 to i32
  %v2_ff9c = icmp ugt i32 %v1_f188, 91
  store i1 %v2_ff9c, i1* %cpsr_c.global-to-local, align 1
  %v7_ff9c = icmp eq i32 %v1_f188, 92
  store i1 %v7_ff9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ff9c, label %bb1635, label %dec_label_pc_ffc4

bb1635:                                           ; preds = %dec_label_pc_ff90
  %v2_ff90 = icmp ugt i32 %v1_f174, 184
  store i1 %v2_ff90, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ff90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ff90, label %dec_label_pc_ffa8, label %dec_label_pc_ffc4

dec_label_pc_ffa8:                                ; preds = %bb1635
  %v2_ffa8 = icmp ugt i32 %v1_f18c, 218
  store i1 %v2_ffa8, i1* %cpsr_c.global-to-local, align 1
  %v7_ffa8 = icmp eq i32 %v1_f18c, 219
  store i1 %v7_ffa8, i1* %cpsr_z.global-to-local, align 1
  %v2_ffac = xor i1 %v2_ffa8, true
  %v3_ffac = or i1 %v7_ffa8, %v2_ffac
  br i1 %v3_ffac, label %bb1636, label %bb1637

bb1636:                                           ; preds = %dec_label_pc_ffa8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1637

bb1637:                                           ; preds = %dec_label_pc_ffa8, %bb1636
  %v2_ffb0 = xor i1 %v7_ffa8, true
  %v3_ffb0 = and i1 %v2_ffa8, %v2_ffb0
  br i1 %v3_ffb0, label %bb1638, label %bb1639

bb1638:                                           ; preds = %bb1637
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1639

bb1639:                                           ; preds = %bb1637, %bb1638
  %v0_ffbc.pr = phi i32 [ 0, %bb1637 ], [ 1, %bb1638 ]
  %v2_ffb4 = icmp ugt i32 %v1_f18c, 221
  store i1 %v2_ffb4, i1* %cpsr_c.global-to-local, align 1
  %v7_ffb4 = icmp eq i32 %v1_f18c, 222
  store i1 %v7_ffb4, i1* %cpsr_z.global-to-local, align 1
  %v2_ffb8 = xor i1 %v7_ffb4, true
  %v3_ffb8 = and i1 %v2_ffb4, %v2_ffb8
  br i1 %v3_ffb8, label %.thread323, label %bb1640

.thread323:                                       ; preds = %bb1639
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ffc4

bb1640:                                           ; preds = %bb1639
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ffbc = icmp eq i32 %v0_ffbc.pr, 0
  store i1 %v2_ffbc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ffbc, label %dec_label_pc_ffc4, label %dec_label_pc_f170

dec_label_pc_ffc4:                                ; preds = %dec_label_pc_ff90, %.thread323, %bb1640, %bb1635
  store i32 %.1972, i32* %r3.global-to-local, align 4
  %v2_ffc8 = icmp ugt i32 %v1_f188, 237
  store i1 %v2_ffc8, i1* %cpsr_c.global-to-local, align 1
  %v7_ffc8 = icmp eq i32 %v1_f188, 238
  store i1 %v7_ffc8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ffc8, label %.thread326, label %.thread327

.thread327:                                       ; preds = %dec_label_pc_ffc4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fff0

.thread326:                                       ; preds = %dec_label_pc_ffc4
  store i32 %.1972, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ffd4 = icmp eq i1 %v7_fbcc, false
  store i1 %v2_ffd4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ffd4, label %dec_label_pc_fff0, label %dec_label_pc_ffdc

dec_label_pc_ffdc:                                ; preds = %.thread326
  %v2_ffdc = icmp ugt i32 %v1_f18c, 189
  store i1 %v2_ffdc, i1* %cpsr_c.global-to-local, align 1
  %v7_ffdc = icmp eq i32 %v1_f18c, 190
  store i1 %v7_ffdc, i1* %cpsr_z.global-to-local, align 1
  %v2_ffe0 = xor i1 %v7_ffdc, true
  %v3_ffe0 = and i1 %v2_ffdc, %v2_ffe0
  br i1 %v3_ffe0, label %bb1641, label %bb1642

bb1641:                                           ; preds = %dec_label_pc_ffdc
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1642

bb1642:                                           ; preds = %dec_label_pc_ffdc, %bb1641
  %v0_ffe8874 = phi i32 [ %.1972, %dec_label_pc_ffdc ], [ 0, %bb1641 ]
  %v2_ffe4 = xor i1 %v2_ffdc, true
  %v3_ffe4 = or i1 %v7_ffdc, %v2_ffe4
  br i1 %v3_ffe4, label %bb1643, label %bb1644

bb1643:                                           ; preds = %bb1642
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1644

bb1644:                                           ; preds = %bb1642, %bb1643
  %v0_ffe8 = phi i32 [ %v0_ffe8874, %bb1642 ], [ 1, %bb1643 ]
  %v2_ffe8 = and i32 %v3_f17c, 64
  %v3_ffe8 = icmp ne i32 %v2_ffe8, 0
  store i1 %v3_ffe8, i1* %cpsr_c.global-to-local, align 1
  %v4_ffe8 = udiv i32 %v1_f18c, 128
  %v5_ffe8 = and i32 %v0_ffe8, %v4_ffe8
  store i32 %v5_ffe8, i32* %r3.global-to-local, align 4
  %v6_ffe8 = icmp eq i32 %v5_ffe8, 0
  store i1 %v6_ffe8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_ffe8, label %dec_label_pc_fff0, label %dec_label_pc_f170

dec_label_pc_fff0:                                ; preds = %.thread327, %bb1644, %.thread326
  store i32 %.1955, i32* %r3.global-to-local, align 4
  %v2_fff4 = icmp ugt i32 %v1_f188, 221
  store i1 %v2_fff4, i1* %cpsr_c.global-to-local, align 1
  %v7_fff4 = icmp eq i32 %v1_f188, 222
  store i1 %v7_fff4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fff4, label %.thread330, label %.thread331

.thread331:                                       ; preds = %dec_label_pc_fff0
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10020

.thread330:                                       ; preds = %dec_label_pc_fff0
  store i32 %.1955, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10000 = icmp eq i1 %v7_f5b4, false
  store i1 %v2_10000, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10000, label %dec_label_pc_10020, label %dec_label_pc_10008

dec_label_pc_10008:                               ; preds = %.thread330
  store i32 %v1_f18c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10008 = icmp eq i32 %v1_f18c, 0
  store i1 %v2_10008, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10008, label %bb1646, label %bb1645

bb1645:                                           ; preds = %dec_label_pc_10008
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1646

bb1646:                                           ; preds = %dec_label_pc_10008, %bb1645
  %v0_10018.pr = phi i32 [ 0, %dec_label_pc_10008 ], [ 1, %bb1645 ]
  %v2_10010 = icmp ugt i32 %v1_f18c, 29
  store i1 %v2_10010, i1* %cpsr_c.global-to-local, align 1
  %v7_10010 = icmp eq i32 %v1_f18c, 30
  store i1 %v7_10010, i1* %cpsr_z.global-to-local, align 1
  %v2_10014 = xor i1 %v7_10010, true
  %v3_10014 = and i1 %v2_10010, %v2_10014
  br i1 %v3_10014, label %.thread335, label %bb1647

.thread335:                                       ; preds = %bb1646
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10020

bb1647:                                           ; preds = %bb1646
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10018 = icmp eq i32 %v0_10018.pr, 0
  store i1 %v2_10018, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10018, label %dec_label_pc_10020, label %dec_label_pc_f170

dec_label_pc_10020:                               ; preds = %.thread335, %.thread331, %bb1647, %.thread330
  %v7_10020 = icmp eq i32 %v1_f174, 208
  %.1982 = zext i1 %v7_10020 to i32
  store i32 %.1982, i32* %r3.global-to-local, align 4
  store i1 %v2_f8f0, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f8f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f8f0, label %bb1650, label %dec_label_pc_10058

bb1650:                                           ; preds = %dec_label_pc_10020
  %v2_10020 = icmp ugt i32 %v1_f174, 207
  store i1 %v2_10020, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_10020, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10020, label %dec_label_pc_1003c, label %dec_label_pc_10058

dec_label_pc_1003c:                               ; preds = %bb1650
  %v2_1003c = icmp ugt i32 %v1_f18c, 230
  store i1 %v2_1003c, i1* %cpsr_c.global-to-local, align 1
  %v7_1003c = icmp eq i32 %v1_f18c, 231
  store i1 %v7_1003c, i1* %cpsr_z.global-to-local, align 1
  %v2_10040 = xor i1 %v2_1003c, true
  %v3_10040 = or i1 %v7_1003c, %v2_10040
  br i1 %v3_10040, label %bb1651, label %bb1652

bb1651:                                           ; preds = %dec_label_pc_1003c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1652

bb1652:                                           ; preds = %dec_label_pc_1003c, %bb1651
  %v0_10050.pr879 = phi i32 [ %.1982, %dec_label_pc_1003c ], [ 0, %bb1651 ]
  %v2_10044 = xor i1 %v7_1003c, true
  %v3_10044 = and i1 %v2_1003c, %v2_10044
  br i1 %v3_10044, label %bb1653, label %bb1654

bb1653:                                           ; preds = %bb1652
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1654

bb1654:                                           ; preds = %bb1652, %bb1653
  %v0_10050.pr = phi i32 [ %v0_10050.pr879, %bb1652 ], [ 1, %bb1653 ]
  %v2_10048 = icmp ugt i32 %v1_f18c, 250
  store i1 %v2_10048, i1* %cpsr_c.global-to-local, align 1
  %v7_10048 = icmp eq i32 %v1_f18c, 251
  store i1 %v7_10048, i1* %cpsr_z.global-to-local, align 1
  %v2_1004c = xor i1 %v7_10048, true
  %v3_1004c = and i1 %v2_10048, %v2_1004c
  br i1 %v3_1004c, label %.thread343, label %bb1655

.thread343:                                       ; preds = %bb1654
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10058

bb1655:                                           ; preds = %bb1654
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10050 = icmp eq i32 %v0_10050.pr, 0
  store i1 %v2_10050, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10050, label %dec_label_pc_10058, label %dec_label_pc_f170

dec_label_pc_10058:                               ; preds = %dec_label_pc_10020, %.thread343, %bb1655, %bb1650
  store i32 %.1952, i32* %r3.global-to-local, align 4
  %v2_1005c = icmp ugt i32 %v1_f174, 65
  store i1 %v2_1005c, i1* %cpsr_c.global-to-local, align 1
  %v7_1005c = icmp eq i32 %v1_f174, 66
  %.1983 = zext i1 %v7_1005c to i32
  %v2_10068 = and i32 %.1952, %.1983
  %v4_10068 = icmp eq i32 %v2_10068, 0
  store i1 %v4_10068, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_10068, label %dec_label_pc_10088, label %dec_label_pc_10074

dec_label_pc_10074:                               ; preds = %dec_label_pc_10058
  %v2_10074 = icmp ugt i32 %v1_f18c, 157
  store i1 %v2_10074, i1* %cpsr_c.global-to-local, align 1
  %v7_10074 = icmp eq i32 %v1_f18c, 158
  store i1 %v7_10074, i1* %cpsr_z.global-to-local, align 1
  %v2_10078 = xor i1 %v7_10074, true
  %v3_10078 = and i1 %v2_10074, %v2_10078
  br i1 %v3_10078, label %bb1658, label %bb1659

bb1658:                                           ; preds = %dec_label_pc_10074
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1659

bb1659:                                           ; preds = %dec_label_pc_10074, %bb1658
  %v0_10080882 = phi i32 [ %.1952, %dec_label_pc_10074 ], [ 0, %bb1658 ]
  %v2_1007c = xor i1 %v2_10074, true
  %v3_1007c = or i1 %v7_10074, %v2_1007c
  br i1 %v3_1007c, label %bb1660, label %bb1661

bb1660:                                           ; preds = %bb1659
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1661

bb1661:                                           ; preds = %bb1659, %bb1660
  %v0_10080 = phi i32 [ %v0_10080882, %bb1659 ], [ 1, %bb1660 ]
  %v2_10080 = and i32 %v3_f17c, 64
  %v3_10080 = icmp ne i32 %v2_10080, 0
  store i1 %v3_10080, i1* %cpsr_c.global-to-local, align 1
  %v4_10080 = udiv i32 %v1_f18c, 128
  %v5_10080 = and i32 %v0_10080, %v4_10080
  store i32 %v5_10080, i32* %r3.global-to-local, align 4
  %v6_10080 = icmp eq i32 %v5_10080, 0
  store i1 %v6_10080, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_10080, label %dec_label_pc_10088, label %dec_label_pc_f170

dec_label_pc_10088:                               ; preds = %bb1661, %dec_label_pc_10058
  store i32 %.1974, i32* %r3.global-to-local, align 4
  store i1 %v2_f61c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f61c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f61c, label %.thread347, label %.thread348

.thread348:                                       ; preds = %dec_label_pc_10088
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_100b8

.thread347:                                       ; preds = %dec_label_pc_10088
  store i32 %.1974, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10098 = icmp eq i1 %v7_fc50, false
  store i1 %v2_10098, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10098, label %dec_label_pc_100b8, label %dec_label_pc_100a0

dec_label_pc_100a0:                               ; preds = %.thread347
  store i32 %v1_f18c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_100a0 = icmp eq i32 %v1_f18c, 0
  store i1 %v2_100a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_100a0, label %bb1663, label %bb1662

bb1662:                                           ; preds = %dec_label_pc_100a0
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1663

bb1663:                                           ; preds = %dec_label_pc_100a0, %bb1662
  %v0_100b0.pr = phi i32 [ 0, %dec_label_pc_100a0 ], [ 1, %bb1662 ]
  %v2_100a8 = icmp ugt i32 %v1_f18c, 125
  store i1 %v2_100a8, i1* %cpsr_c.global-to-local, align 1
  %v7_100a8 = icmp eq i32 %v1_f18c, 126
  store i1 %v7_100a8, i1* %cpsr_z.global-to-local, align 1
  %v2_100ac = xor i1 %v7_100a8, true
  %v3_100ac = and i1 %v2_100a8, %v2_100ac
  br i1 %v3_100ac, label %.thread352, label %bb1664

.thread352:                                       ; preds = %bb1663
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_100b8

bb1664:                                           ; preds = %bb1663
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_100b0 = icmp eq i32 %v0_100b0.pr, 0
  store i1 %v2_100b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_100b0, label %dec_label_pc_100b8, label %dec_label_pc_f170

dec_label_pc_100b8:                               ; preds = %.thread352, %.thread348, %bb1664, %.thread347
  %v2_100b8 = icmp ugt i32 %v1_f174, 215
  store i1 %v2_100b8, i1* %cpsr_c.global-to-local, align 1
  %v7_100b8 = icmp eq i32 %v1_f174, 216
  store i1 %v7_100b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_100b8, label %.thread355, label %.thread356

.thread356:                                       ; preds = %dec_label_pc_100b8
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_100e0

.thread355:                                       ; preds = %dec_label_pc_100b8
  store i32 %.1980, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_100c4 = icmp eq i1 %v7_f928, false
  store i1 %v2_100c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_100c4, label %dec_label_pc_100e0, label %dec_label_pc_100cc

dec_label_pc_100cc:                               ; preds = %.thread355
  %v2_100cc = icmp ugt i32 %v1_f18c, 157
  store i1 %v2_100cc, i1* %cpsr_c.global-to-local, align 1
  %v7_100cc = icmp eq i32 %v1_f18c, 158
  store i1 %v7_100cc, i1* %cpsr_z.global-to-local, align 1
  %v2_100d0 = xor i1 %v7_100cc, true
  %v3_100d0 = and i1 %v2_100cc, %v2_100d0
  br i1 %v3_100d0, label %bb1665, label %bb1666

bb1665:                                           ; preds = %dec_label_pc_100cc
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1666

bb1666:                                           ; preds = %dec_label_pc_100cc, %bb1665
  %v0_100d8886 = phi i32 [ %.1980, %dec_label_pc_100cc ], [ 0, %bb1665 ]
  %v2_100d4 = xor i1 %v2_100cc, true
  %v3_100d4 = or i1 %v7_100cc, %v2_100d4
  br i1 %v3_100d4, label %bb1667, label %bb1668

bb1667:                                           ; preds = %bb1666
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1668

bb1668:                                           ; preds = %bb1666, %bb1667
  %v0_100d8 = phi i32 [ %v0_100d8886, %bb1666 ], [ 1, %bb1667 ]
  %v2_100d8 = and i32 %v3_f17c, 64
  %v3_100d8 = icmp ne i32 %v2_100d8, 0
  store i1 %v3_100d8, i1* %cpsr_c.global-to-local, align 1
  %v4_100d8 = udiv i32 %v1_f18c, 128
  %v5_100d8 = and i32 %v0_100d8, %v4_100d8
  store i32 %v5_100d8, i32* %r3.global-to-local, align 4
  %v6_100d8 = icmp eq i32 %v5_100d8, 0
  store i1 %v6_100d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_100d8, label %dec_label_pc_100e0, label %dec_label_pc_f170

dec_label_pc_100e0:                               ; preds = %.thread356, %bb1668, %.thread355
  %v2_100e0 = icmp ugt i32 %v1_f188, 60
  %v7_100e0 = icmp eq i32 %v1_f188, 61
  %.1984 = zext i1 %v7_100e0 to i32
  store i32 %.1984, i32* %r4.global-to-local, align 4
  %v2_100ec = icmp ugt i32 %v1_f174, 107
  store i1 %v2_100ec, i1* %cpsr_c.global-to-local, align 1
  %v7_100ec = icmp eq i32 %v1_f174, 108
  store i1 %v7_100ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_100ec, label %bb1671, label %dec_label_pc_100f8

bb1671:                                           ; preds = %dec_label_pc_100e0
  store i1 %v2_100e0, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_100e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_100e0, label %dec_label_pc_f170, label %dec_label_pc_100f8

dec_label_pc_100f8:                               ; preds = %dec_label_pc_100e0, %bb1671
  store i32 %.1974, i32* %r3.global-to-local, align 4
  %v2_100fc = icmp ugt i32 %v1_f188, 75
  store i1 %v2_100fc, i1* %cpsr_c.global-to-local, align 1
  %v7_100fc = icmp eq i32 %v1_f188, 76
  store i1 %v7_100fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_100fc, label %.thread361, label %.thread362

.thread362:                                       ; preds = %dec_label_pc_100f8
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10110

.thread361:                                       ; preds = %dec_label_pc_100f8
  store i32 %.1974, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10108 = icmp eq i1 %v7_fc50, false
  store i1 %v2_10108, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10108, label %dec_label_pc_10110, label %dec_label_pc_f170

dec_label_pc_10110:                               ; preds = %.thread362, %.thread361
  %v2_10110 = icmp ugt i32 %v1_f188, 10
  store i1 %v2_10110, i1* %cpsr_c.global-to-local, align 1
  %v7_10110 = icmp eq i32 %v1_f188, 11
  store i1 %v7_10110, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10110, label %.thread365, label %.thread366

.thread366:                                       ; preds = %dec_label_pc_10110
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10140

.thread365:                                       ; preds = %dec_label_pc_10110
  store i32 %.1981, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1011c = icmp eq i1 %v7_ff90, false
  store i1 %v2_1011c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1011c, label %dec_label_pc_10140, label %dec_label_pc_10124

dec_label_pc_10124:                               ; preds = %.thread365
  %v2_10124 = icmp ugt i32 %v1_f18c, 142
  store i1 %v2_10124, i1* %cpsr_c.global-to-local, align 1
  %v7_10124 = icmp eq i32 %v1_f18c, 143
  store i1 %v7_10124, i1* %cpsr_z.global-to-local, align 1
  %v2_10128 = xor i1 %v2_10124, true
  %v3_10128 = or i1 %v7_10124, %v2_10128
  br i1 %v3_10128, label %bb1672, label %bb1673

bb1672:                                           ; preds = %dec_label_pc_10124
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1673

bb1673:                                           ; preds = %dec_label_pc_10124, %bb1672
  %v0_10138.pr890 = phi i32 [ %.1981, %dec_label_pc_10124 ], [ 0, %bb1672 ]
  %v2_1012c = xor i1 %v7_10124, true
  %v3_1012c = and i1 %v2_10124, %v2_1012c
  br i1 %v3_1012c, label %bb1674, label %bb1675

bb1674:                                           ; preds = %bb1673
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1675

bb1675:                                           ; preds = %bb1673, %bb1674
  %v0_10138.pr = phi i32 [ %v0_10138.pr890, %bb1673 ], [ 1, %bb1674 ]
  %v2_10130 = icmp ugt i32 %v1_f18c, 146
  store i1 %v2_10130, i1* %cpsr_c.global-to-local, align 1
  %v7_10130 = icmp eq i32 %v1_f18c, 147
  store i1 %v7_10130, i1* %cpsr_z.global-to-local, align 1
  %v2_10134 = xor i1 %v7_10130, true
  %v3_10134 = and i1 %v2_10130, %v2_10134
  br i1 %v3_10134, label %.thread370, label %bb1676

.thread370:                                       ; preds = %bb1675
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10140

bb1676:                                           ; preds = %bb1675
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10138 = icmp eq i32 %v0_10138.pr, 0
  store i1 %v2_10138, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10138, label %dec_label_pc_10140, label %dec_label_pc_f170

dec_label_pc_10140:                               ; preds = %.thread370, %.thread366, %bb1676, %.thread365
  %v2_10144 = and i32 %.1953, %.1981
  %v4_10144 = icmp eq i32 %v2_10144, 0
  store i1 %v4_10144, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_10144, label %dec_label_pc_10168, label %dec_label_pc_1014c

dec_label_pc_1014c:                               ; preds = %dec_label_pc_10140
  %v2_1014c = icmp ugt i32 %v1_f18c, 19
  store i1 %v2_1014c, i1* %cpsr_c.global-to-local, align 1
  %v7_1014c = icmp eq i32 %v1_f18c, 20
  store i1 %v7_1014c, i1* %cpsr_z.global-to-local, align 1
  %v2_10150 = xor i1 %v2_1014c, true
  %v3_10150 = or i1 %v7_1014c, %v2_10150
  br i1 %v3_10150, label %bb1677, label %bb1678

bb1677:                                           ; preds = %dec_label_pc_1014c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1678

bb1678:                                           ; preds = %dec_label_pc_1014c, %bb1677
  %v2_10154 = xor i1 %v7_1014c, true
  %v3_10154 = and i1 %v2_1014c, %v2_10154
  br i1 %v3_10154, label %bb1679, label %bb1680

bb1679:                                           ; preds = %bb1678
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1680

bb1680:                                           ; preds = %bb1678, %bb1679
  %v0_10160.pr = phi i32 [ 0, %bb1678 ], [ 1, %bb1679 ]
  %v2_10158 = icmp ugt i32 %v1_f18c, 21
  store i1 %v2_10158, i1* %cpsr_c.global-to-local, align 1
  %v7_10158 = icmp eq i32 %v1_f18c, 22
  store i1 %v7_10158, i1* %cpsr_z.global-to-local, align 1
  %v2_1015c = xor i1 %v7_10158, true
  %v3_1015c = and i1 %v2_10158, %v2_1015c
  br i1 %v3_1015c, label %.thread374, label %bb1681

.thread374:                                       ; preds = %bb1680
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10168

bb1681:                                           ; preds = %bb1680
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10160 = icmp eq i32 %v0_10160.pr, 0
  store i1 %v2_10160, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10160, label %dec_label_pc_10168, label %dec_label_pc_f170

dec_label_pc_10168:                               ; preds = %.thread374, %bb1681, %dec_label_pc_10140
  %v2_10168 = and i32 %.1984, %.1981
  %v4_10168 = icmp eq i32 %v2_10168, 0
  store i1 %v4_10168, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_10168, label %dec_label_pc_1018c, label %dec_label_pc_10170

dec_label_pc_10170:                               ; preds = %dec_label_pc_10168
  %v2_10170 = icmp ugt i32 %v1_f18c, 134
  store i1 %v2_10170, i1* %cpsr_c.global-to-local, align 1
  %v7_10170 = icmp eq i32 %v1_f18c, 135
  store i1 %v7_10170, i1* %cpsr_z.global-to-local, align 1
  %v2_10174 = xor i1 %v2_10170, true
  %v3_10174 = or i1 %v7_10170, %v2_10174
  br i1 %v3_10174, label %bb1682, label %bb1683

bb1682:                                           ; preds = %dec_label_pc_10170
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1683

bb1683:                                           ; preds = %dec_label_pc_10170, %bb1682
  %v2_10178 = xor i1 %v7_10170, true
  %v3_10178 = and i1 %v2_10170, %v2_10178
  br i1 %v3_10178, label %bb1684, label %bb1685

bb1684:                                           ; preds = %bb1683
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1685

bb1685:                                           ; preds = %bb1683, %bb1684
  %v0_10184.pr = phi i32 [ 0, %bb1683 ], [ 1, %bb1684 ]
  %v2_1017c = icmp ugt i32 %v1_f18c, 137
  store i1 %v2_1017c, i1* %cpsr_c.global-to-local, align 1
  %v7_1017c = icmp eq i32 %v1_f18c, 138
  store i1 %v7_1017c, i1* %cpsr_z.global-to-local, align 1
  %v2_10180 = xor i1 %v7_1017c, true
  %v3_10180 = and i1 %v2_1017c, %v2_10180
  br i1 %v3_10180, label %.thread378, label %bb1686

.thread378:                                       ; preds = %bb1685
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1018c

bb1686:                                           ; preds = %bb1685
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10184 = icmp eq i32 %v0_10184.pr, 0
  store i1 %v2_10184, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10184, label %dec_label_pc_1018c, label %dec_label_pc_f170

dec_label_pc_1018c:                               ; preds = %.thread378, %bb1686, %dec_label_pc_10168
  store i32 %storemerge1217, i32* %r3.global-to-local, align 4
  %v2_10190 = and i32 %storemerge1217, %.1981
  %v4_10190 = icmp eq i32 %v2_10190, 0
  store i1 %v4_10190, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_10190, label %dec_label_pc_101b4, label %dec_label_pc_10198

dec_label_pc_10198:                               ; preds = %dec_label_pc_1018c
  %v2_10198 = icmp ugt i32 %v1_f18c, 185
  store i1 %v2_10198, i1* %cpsr_c.global-to-local, align 1
  %v7_10198 = icmp eq i32 %v1_f18c, 186
  store i1 %v7_10198, i1* %cpsr_z.global-to-local, align 1
  %v2_1019c = xor i1 %v2_10198, true
  %v3_1019c = or i1 %v7_10198, %v2_1019c
  br i1 %v3_1019c, label %bb1687, label %bb1688

bb1687:                                           ; preds = %dec_label_pc_10198
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1688

bb1688:                                           ; preds = %dec_label_pc_10198, %bb1687
  %v0_101ac.pr899 = phi i32 [ %storemerge1217, %dec_label_pc_10198 ], [ 0, %bb1687 ]
  %v2_101a0 = xor i1 %v7_10198, true
  %v3_101a0 = and i1 %v2_10198, %v2_101a0
  br i1 %v3_101a0, label %bb1689, label %bb1690

bb1689:                                           ; preds = %bb1688
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1690

bb1690:                                           ; preds = %bb1688, %bb1689
  %v0_101ac.pr = phi i32 [ %v0_101ac.pr899, %bb1688 ], [ 1, %bb1689 ]
  %v2_101a4 = icmp ugt i32 %v1_f18c, 189
  store i1 %v2_101a4, i1* %cpsr_c.global-to-local, align 1
  %v7_101a4 = icmp eq i32 %v1_f18c, 190
  store i1 %v7_101a4, i1* %cpsr_z.global-to-local, align 1
  %v2_101a8 = xor i1 %v7_101a4, true
  %v3_101a8 = and i1 %v2_101a4, %v2_101a8
  br i1 %v3_101a8, label %.thread382, label %bb1691

.thread382:                                       ; preds = %bb1690
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_101b4

bb1691:                                           ; preds = %bb1690
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_101ac = icmp eq i32 %v0_101ac.pr, 0
  store i1 %v2_101ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_101ac, label %dec_label_pc_101b4, label %dec_label_pc_f170

dec_label_pc_101b4:                               ; preds = %.thread382, %bb1691, %dec_label_pc_1018c
  store i32 %.1983, i32* %r3.global-to-local, align 4
  store i1 %v2_f964, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f964, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f964, label %.thread385, label %.thread386

.thread386:                                       ; preds = %dec_label_pc_101b4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_101e8

.thread385:                                       ; preds = %dec_label_pc_101b4
  store i32 %.1983, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_101c4 = icmp eq i1 %v7_1005c, false
  store i1 %v2_101c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_101c4, label %dec_label_pc_101e8, label %dec_label_pc_101cc

dec_label_pc_101cc:                               ; preds = %.thread385
  %v2_101cc = icmp ugt i32 %v1_f18c, 118
  store i1 %v2_101cc, i1* %cpsr_c.global-to-local, align 1
  %v7_101cc = icmp eq i32 %v1_f18c, 119
  store i1 %v7_101cc, i1* %cpsr_z.global-to-local, align 1
  %v2_101d0 = xor i1 %v2_101cc, true
  %v3_101d0 = or i1 %v7_101cc, %v2_101d0
  br i1 %v3_101d0, label %bb1692, label %bb1693

bb1692:                                           ; preds = %dec_label_pc_101cc
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1693

bb1693:                                           ; preds = %dec_label_pc_101cc, %bb1692
  %v0_101e0.pr902 = phi i32 [ %.1983, %dec_label_pc_101cc ], [ 0, %bb1692 ]
  %v2_101d4 = xor i1 %v7_101cc, true
  %v3_101d4 = and i1 %v2_101cc, %v2_101d4
  br i1 %v3_101d4, label %bb1694, label %bb1695

bb1694:                                           ; preds = %bb1693
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1695

bb1695:                                           ; preds = %bb1693, %bb1694
  %v0_101e0.pr = phi i32 [ %v0_101e0.pr902, %bb1693 ], [ 1, %bb1694 ]
  %v2_101d8 = icmp ugt i32 %v1_f18c, 213
  store i1 %v2_101d8, i1* %cpsr_c.global-to-local, align 1
  %v7_101d8 = icmp eq i32 %v1_f18c, 214
  store i1 %v7_101d8, i1* %cpsr_z.global-to-local, align 1
  %v2_101dc = xor i1 %v7_101d8, true
  %v3_101dc = and i1 %v2_101d8, %v2_101dc
  br i1 %v3_101dc, label %.thread390, label %bb1696

.thread390:                                       ; preds = %bb1695
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_101e8

bb1696:                                           ; preds = %bb1695
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_101e0 = icmp eq i32 %v0_101e0.pr, 0
  store i1 %v2_101e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_101e0, label %dec_label_pc_101e8, label %dec_label_pc_f170

dec_label_pc_101e8:                               ; preds = %.thread390, %.thread386, %bb1696, %.thread385
  store i32 %.1983, i32* %r3.global-to-local, align 4
  %v2_101ec = icmp ugt i32 %v1_f188, 150
  store i1 %v2_101ec, i1* %cpsr_c.global-to-local, align 1
  %v7_101ec = icmp eq i32 %v1_f188, 151
  store i1 %v7_101ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_101ec, label %.thread393, label %.thread394

.thread394:                                       ; preds = %dec_label_pc_101e8
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1021c

.thread393:                                       ; preds = %dec_label_pc_101e8
  store i32 %.1983, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_101f8 = icmp eq i1 %v7_1005c, false
  store i1 %v2_101f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_101f8, label %dec_label_pc_1021c, label %dec_label_pc_10200

dec_label_pc_10200:                               ; preds = %.thread393
  %v2_10200 = icmp ugt i32 %v1_f18c, 135
  store i1 %v2_10200, i1* %cpsr_c.global-to-local, align 1
  %v7_10200 = icmp eq i32 %v1_f18c, 136
  store i1 %v7_10200, i1* %cpsr_z.global-to-local, align 1
  %v2_10204 = xor i1 %v2_10200, true
  %v3_10204 = or i1 %v7_10200, %v2_10204
  br i1 %v3_10204, label %bb1697, label %bb1698

bb1697:                                           ; preds = %dec_label_pc_10200
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1698

bb1698:                                           ; preds = %dec_label_pc_10200, %bb1697
  %v0_10214.pr905 = phi i32 [ %.1983, %dec_label_pc_10200 ], [ 0, %bb1697 ]
  %v2_10208 = xor i1 %v7_10200, true
  %v3_10208 = and i1 %v2_10200, %v2_10208
  br i1 %v3_10208, label %bb1699, label %bb1700

bb1699:                                           ; preds = %bb1698
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1700

bb1700:                                           ; preds = %bb1698, %bb1699
  %v0_10214.pr = phi i32 [ %v0_10214.pr905, %bb1698 ], [ 1, %bb1699 ]
  %v2_1020c = icmp ugt i32 %v1_f18c, 137
  store i1 %v2_1020c, i1* %cpsr_c.global-to-local, align 1
  %v7_1020c = icmp eq i32 %v1_f18c, 138
  store i1 %v7_1020c, i1* %cpsr_z.global-to-local, align 1
  %v2_10210 = xor i1 %v7_1020c, true
  %v3_10210 = and i1 %v2_1020c, %v2_10210
  br i1 %v3_10210, label %.thread398, label %bb1701

.thread398:                                       ; preds = %bb1700
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1021c

bb1701:                                           ; preds = %bb1700
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10214 = icmp eq i32 %v0_10214.pr, 0
  store i1 %v2_10214, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10214, label %dec_label_pc_1021c, label %dec_label_pc_f170

dec_label_pc_1021c:                               ; preds = %.thread398, %.thread394, %bb1701, %.thread393
  store i32 %.1956, i32* %r3.global-to-local, align 4
  %v2_10220 = icmp ugt i32 %v1_f188, 93
  store i1 %v2_10220, i1* %cpsr_c.global-to-local, align 1
  %v7_10220 = icmp eq i32 %v1_f188, 94
  store i1 %v7_10220, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10220, label %.thread401, label %.thread402

.thread402:                                       ; preds = %dec_label_pc_1021c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10240

.thread401:                                       ; preds = %dec_label_pc_1021c
  store i32 %.1956, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1022c = icmp eq i1 %v7_f5d0, false
  store i1 %v2_1022c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1022c, label %dec_label_pc_10240, label %dec_label_pc_10234

dec_label_pc_10234:                               ; preds = %.thread401
  %v2_10234 = icmp eq i32 %v1_f18c, 255
  store i1 %v2_10234, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_10234, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10234, label %dec_label_pc_10240, label %bb1702

bb1702:                                           ; preds = %dec_label_pc_10234
  %v3_10238 = icmp ugt i32 %v1_f18c, 235
  store i1 %v3_10238, i1* %cpsr_c.global-to-local, align 1
  %v8_10238 = icmp eq i32 %v1_f18c, 236
  store i1 %v8_10238, i1* %cpsr_z.global-to-local, align 1
  %v2_1023c = xor i1 %v8_10238, true
  %v3_1023c = and i1 %v3_10238, %v2_1023c
  br i1 %v3_1023c, label %dec_label_pc_f170, label %dec_label_pc_10240

dec_label_pc_10240:                               ; preds = %dec_label_pc_10234, %.thread402, %bb1702, %.thread401
  %v0_10260.pr911 = phi i32 [ 0, %.thread402 ], [ %.1956, %bb1702 ], [ 0, %.thread401 ], [ %.1956, %dec_label_pc_10234 ]
  %v2_10240 = icmp ugt i32 %v1_f174, 62
  store i1 %v2_10240, i1* %cpsr_c.global-to-local, align 1
  %v7_10240 = icmp eq i32 %v1_f174, 63
  store i1 %v7_10240, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10240, label %bb1703, label %dec_label_pc_10268

bb1703:                                           ; preds = %dec_label_pc_10240
  store i1 %v2_fb3c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_fb3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fb3c, label %dec_label_pc_1024c, label %dec_label_pc_10268

dec_label_pc_1024c:                               ; preds = %bb1703
  %v2_1024c = icmp ugt i32 %v1_f18c, 17
  store i1 %v2_1024c, i1* %cpsr_c.global-to-local, align 1
  %v7_1024c = icmp eq i32 %v1_f18c, 18
  store i1 %v7_1024c, i1* %cpsr_z.global-to-local, align 1
  %v2_10250 = xor i1 %v2_1024c, true
  %v3_10250 = or i1 %v7_1024c, %v2_10250
  br i1 %v3_10250, label %bb1704, label %bb1705

bb1704:                                           ; preds = %dec_label_pc_1024c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1705

bb1705:                                           ; preds = %dec_label_pc_1024c, %bb1704
  %v0_10260.pr910 = phi i32 [ %v0_10260.pr911, %dec_label_pc_1024c ], [ 0, %bb1704 ]
  %v2_10254 = xor i1 %v7_1024c, true
  %v3_10254 = and i1 %v2_1024c, %v2_10254
  br i1 %v3_10254, label %bb1706, label %bb1707

bb1706:                                           ; preds = %bb1705
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1707

bb1707:                                           ; preds = %bb1705, %bb1706
  %v0_10260.pr = phi i32 [ %v0_10260.pr910, %bb1705 ], [ 1, %bb1706 ]
  %v2_10258 = icmp ugt i32 %v1_f18c, 19
  store i1 %v2_10258, i1* %cpsr_c.global-to-local, align 1
  %v7_10258 = icmp eq i32 %v1_f18c, 20
  store i1 %v7_10258, i1* %cpsr_z.global-to-local, align 1
  %v2_1025c = xor i1 %v7_10258, true
  %v3_1025c = and i1 %v2_10258, %v2_1025c
  br i1 %v3_1025c, label %.thread407, label %bb1708

.thread407:                                       ; preds = %bb1707
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10268

bb1708:                                           ; preds = %bb1707
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10260 = icmp eq i32 %v0_10260.pr, 0
  store i1 %v2_10260, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10260, label %dec_label_pc_10268, label %dec_label_pc_f170

dec_label_pc_10268:                               ; preds = %dec_label_pc_10240, %.thread407, %bb1708, %bb1703
  %v0_10288.pr914 = phi i32 [ %v0_10260.pr911, %dec_label_pc_10240 ], [ 0, %.thread407 ], [ 0, %bb1708 ], [ %v0_10260.pr911, %bb1703 ]
  %v2_10268 = icmp ugt i32 %v1_f174, 69
  store i1 %v2_10268, i1* %cpsr_c.global-to-local, align 1
  %v7_10268 = icmp eq i32 %v1_f174, 70
  store i1 %v7_10268, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10268, label %bb1709, label %dec_label_pc_10290

bb1709:                                           ; preds = %dec_label_pc_10268
  %v3_1026c = icmp ugt i32 %v1_f188, 41
  store i1 %v3_1026c, i1* %cpsr_c.global-to-local, align 1
  %v8_1026c = icmp eq i32 %v1_f188, 42
  store i1 %v8_1026c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_1026c, label %dec_label_pc_10274, label %dec_label_pc_10290

dec_label_pc_10274:                               ; preds = %bb1709
  %v2_10274 = icmp ugt i32 %v1_f18c, 71
  store i1 %v2_10274, i1* %cpsr_c.global-to-local, align 1
  %v7_10274 = icmp eq i32 %v1_f18c, 72
  store i1 %v7_10274, i1* %cpsr_z.global-to-local, align 1
  %v2_10278 = xor i1 %v2_10274, true
  %v3_10278 = or i1 %v7_10274, %v2_10278
  br i1 %v3_10278, label %bb1710, label %bb1711

bb1710:                                           ; preds = %dec_label_pc_10274
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1711

bb1711:                                           ; preds = %dec_label_pc_10274, %bb1710
  %v0_10288.pr913 = phi i32 [ %v0_10288.pr914, %dec_label_pc_10274 ], [ 0, %bb1710 ]
  %v2_1027c = xor i1 %v7_10274, true
  %v3_1027c = and i1 %v2_10274, %v2_1027c
  br i1 %v3_1027c, label %bb1712, label %bb1713

bb1712:                                           ; preds = %bb1711
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1713

bb1713:                                           ; preds = %bb1711, %bb1712
  %v0_10288.pr = phi i32 [ %v0_10288.pr913, %bb1711 ], [ 1, %bb1712 ]
  %v2_10280 = icmp ugt i32 %v1_f18c, 73
  store i1 %v2_10280, i1* %cpsr_c.global-to-local, align 1
  %v7_10280 = icmp eq i32 %v1_f18c, 74
  store i1 %v7_10280, i1* %cpsr_z.global-to-local, align 1
  %v2_10284 = xor i1 %v7_10280, true
  %v3_10284 = and i1 %v2_10280, %v2_10284
  br i1 %v3_10284, label %.thread412, label %bb1714

.thread412:                                       ; preds = %bb1713
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10290

bb1714:                                           ; preds = %bb1713
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10288 = icmp eq i32 %v0_10288.pr, 0
  store i1 %v2_10288, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10288, label %dec_label_pc_10290, label %dec_label_pc_f170

dec_label_pc_10290:                               ; preds = %dec_label_pc_10268, %.thread412, %bb1714, %bb1709
  %v0_102bc.pr917 = phi i32 [ %v0_10288.pr914, %dec_label_pc_10268 ], [ 0, %.thread412 ], [ 0, %bb1714 ], [ %v0_10288.pr914, %bb1709 ]
  %v7_10290 = icmp eq i32 %v1_f174, 74
  %.1985 = zext i1 %v7_10290 to i32
  %v2_1029c = icmp ugt i32 %v1_f188, 90
  store i1 %v2_1029c, i1* %cpsr_c.global-to-local, align 1
  %v7_1029c = icmp eq i32 %v1_f188, 91
  store i1 %v7_1029c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1029c, label %bb1717, label %dec_label_pc_102c4

bb1717:                                           ; preds = %dec_label_pc_10290
  %v2_10290 = icmp ugt i32 %v1_f174, 73
  store i1 %v2_10290, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_10290, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10290, label %dec_label_pc_102a8, label %dec_label_pc_102c4

dec_label_pc_102a8:                               ; preds = %bb1717
  %v2_102a8 = icmp ugt i32 %v1_f18c, 111
  store i1 %v2_102a8, i1* %cpsr_c.global-to-local, align 1
  %v7_102a8 = icmp eq i32 %v1_f18c, 112
  store i1 %v7_102a8, i1* %cpsr_z.global-to-local, align 1
  %v2_102ac = xor i1 %v2_102a8, true
  %v3_102ac = or i1 %v7_102a8, %v2_102ac
  br i1 %v3_102ac, label %bb1718, label %bb1719

bb1718:                                           ; preds = %dec_label_pc_102a8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1719

bb1719:                                           ; preds = %dec_label_pc_102a8, %bb1718
  %v0_102bc.pr916 = phi i32 [ %v0_102bc.pr917, %dec_label_pc_102a8 ], [ 0, %bb1718 ]
  %v2_102b0 = xor i1 %v7_102a8, true
  %v3_102b0 = and i1 %v2_102a8, %v2_102b0
  br i1 %v3_102b0, label %bb1720, label %bb1721

bb1720:                                           ; preds = %bb1719
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1721

bb1721:                                           ; preds = %bb1719, %bb1720
  %v0_102bc.pr = phi i32 [ %v0_102bc.pr916, %bb1719 ], [ 1, %bb1720 ]
  %v2_102b4 = icmp ugt i32 %v1_f18c, 113
  store i1 %v2_102b4, i1* %cpsr_c.global-to-local, align 1
  %v7_102b4 = icmp eq i32 %v1_f18c, 114
  store i1 %v7_102b4, i1* %cpsr_z.global-to-local, align 1
  %v2_102b8 = xor i1 %v7_102b4, true
  %v3_102b8 = and i1 %v2_102b4, %v2_102b8
  br i1 %v3_102b8, label %.thread418, label %bb1722

.thread418:                                       ; preds = %bb1721
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_102c4

bb1722:                                           ; preds = %bb1721
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_102bc = icmp eq i32 %v0_102bc.pr, 0
  store i1 %v2_102bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_102bc, label %dec_label_pc_102c4, label %dec_label_pc_f170

dec_label_pc_102c4:                               ; preds = %dec_label_pc_10290, %.thread418, %bb1722, %bb1717
  %v2_102c4 = icmp ugt i32 %v1_f188, 200
  store i1 %v2_102c4, i1* %cpsr_c.global-to-local, align 1
  %v7_102c4 = icmp eq i32 %v1_f188, 201
  store i1 %v7_102c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_102c4, label %.thread421, label %.thread422

.thread422:                                       ; preds = %dec_label_pc_102c4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_102f4

.thread421:                                       ; preds = %dec_label_pc_102c4
  store i32 %.1985, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_102d0 = icmp eq i1 %v7_10290, false
  store i1 %v2_102d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_102d0, label %dec_label_pc_102f4, label %dec_label_pc_102d8

dec_label_pc_102d8:                               ; preds = %.thread421
  %v2_102d8 = icmp ugt i32 %v1_f18c, 54
  store i1 %v2_102d8, i1* %cpsr_c.global-to-local, align 1
  %v7_102d8 = icmp eq i32 %v1_f18c, 55
  store i1 %v7_102d8, i1* %cpsr_z.global-to-local, align 1
  %v2_102dc = xor i1 %v2_102d8, true
  %v3_102dc = or i1 %v7_102d8, %v2_102dc
  br i1 %v3_102dc, label %bb1723, label %bb1724

bb1723:                                           ; preds = %dec_label_pc_102d8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1724

bb1724:                                           ; preds = %dec_label_pc_102d8, %bb1723
  %v0_102ec.pr920 = phi i32 [ %.1985, %dec_label_pc_102d8 ], [ 0, %bb1723 ]
  %v2_102e0 = xor i1 %v7_102d8, true
  %v3_102e0 = and i1 %v2_102d8, %v2_102e0
  br i1 %v3_102e0, label %bb1725, label %bb1726

bb1725:                                           ; preds = %bb1724
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1726

bb1726:                                           ; preds = %bb1724, %bb1725
  %v0_102ec.pr = phi i32 [ %v0_102ec.pr920, %bb1724 ], [ 1, %bb1725 ]
  %v2_102e4 = icmp ugt i32 %v1_f18c, 56
  store i1 %v2_102e4, i1* %cpsr_c.global-to-local, align 1
  %v7_102e4 = icmp eq i32 %v1_f18c, 57
  store i1 %v7_102e4, i1* %cpsr_z.global-to-local, align 1
  %v2_102e8 = xor i1 %v7_102e4, true
  %v3_102e8 = and i1 %v2_102e4, %v2_102e8
  br i1 %v3_102e8, label %.thread426, label %bb1727

.thread426:                                       ; preds = %bb1726
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_102f4

bb1727:                                           ; preds = %bb1726
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_102ec = icmp eq i32 %v0_102ec.pr, 0
  store i1 %v2_102ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_102ec, label %dec_label_pc_102f4, label %dec_label_pc_f170

dec_label_pc_102f4:                               ; preds = %.thread426, %.thread422, %bb1727, %.thread421
  %v2_102f8 = icmp ugt i32 %v1_f188, 208
  store i1 %v2_102f8, i1* %cpsr_c.global-to-local, align 1
  %v7_102f8 = icmp eq i32 %v1_f188, 209
  %.1986 = zext i1 %v7_102f8 to i32
  store i32 %.1986, i32* %r4.global-to-local, align 4
  %v2_10304 = and i32 %.1986, %.1973
  %v4_10304 = icmp eq i32 %v2_10304, 0
  store i1 %v4_10304, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_10304, label %dec_label_pc_10328, label %dec_label_pc_1030c

dec_label_pc_1030c:                               ; preds = %dec_label_pc_102f4
  %v2_1030c = icmp ugt i32 %v1_f18c, 46
  store i1 %v2_1030c, i1* %cpsr_c.global-to-local, align 1
  %v7_1030c = icmp eq i32 %v1_f18c, 47
  store i1 %v7_1030c, i1* %cpsr_z.global-to-local, align 1
  %v2_10310 = xor i1 %v2_1030c, true
  %v3_10310 = or i1 %v7_1030c, %v2_10310
  br i1 %v3_10310, label %bb1730, label %bb1731

bb1730:                                           ; preds = %dec_label_pc_1030c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1731

bb1731:                                           ; preds = %dec_label_pc_1030c, %bb1730
  %v2_10314 = xor i1 %v7_1030c, true
  %v3_10314 = and i1 %v2_1030c, %v2_10314
  br i1 %v3_10314, label %bb1732, label %bb1733

bb1732:                                           ; preds = %bb1731
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1733

bb1733:                                           ; preds = %bb1731, %bb1732
  %v0_10320.pr = phi i32 [ 0, %bb1731 ], [ 1, %bb1732 ]
  %v2_10318 = icmp ugt i32 %v1_f18c, 51
  store i1 %v2_10318, i1* %cpsr_c.global-to-local, align 1
  %v7_10318 = icmp eq i32 %v1_f18c, 52
  store i1 %v7_10318, i1* %cpsr_z.global-to-local, align 1
  %v2_1031c = xor i1 %v7_10318, true
  %v3_1031c = and i1 %v2_10318, %v2_1031c
  br i1 %v3_1031c, label %.thread431, label %bb1734

.thread431:                                       ; preds = %bb1733
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10328

bb1734:                                           ; preds = %bb1733
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10320 = icmp eq i32 %v0_10320.pr, 0
  store i1 %v2_10320, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10320, label %dec_label_pc_10328, label %dec_label_pc_f170

dec_label_pc_10328:                               ; preds = %.thread431, %bb1734, %dec_label_pc_102f4
  store i32 %.1973, i32* %r3.global-to-local, align 4
  %v2_1032c = icmp ugt i32 %v1_f188, 164
  store i1 %v2_1032c, i1* %cpsr_c.global-to-local, align 1
  %v7_1032c = icmp eq i32 %v1_f188, 165
  store i1 %v7_1032c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1032c, label %.thread434, label %.thread435

.thread435:                                       ; preds = %dec_label_pc_10328
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10340

.thread434:                                       ; preds = %dec_label_pc_10328
  store i32 %.1973, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10338 = icmp eq i1 %v7_fbec, false
  store i1 %v2_10338, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10338, label %dec_label_pc_10340, label %dec_label_pc_f170

dec_label_pc_10340:                               ; preds = %.thread435, %.thread434
  store i32 %storemerge1179, i32* %r3.global-to-local, align 4
  %v2_10344 = icmp ugt i32 %v1_f174, 148
  store i1 %v2_10344, i1* %cpsr_c.global-to-local, align 1
  %v7_10344 = icmp eq i32 %v1_f174, 149
  store i1 %v7_10344, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10344, label %.thread438, label %.thread439

.thread439:                                       ; preds = %dec_label_pc_10340
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10358

.thread438:                                       ; preds = %dec_label_pc_10340
  store i32 %storemerge1179, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10350 = icmp eq i1 %v7_f3a0, false
  store i1 %v2_10350, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10350, label %dec_label_pc_10358, label %dec_label_pc_f170

dec_label_pc_10358:                               ; preds = %.thread439, %.thread438
  %v2_10358 = icmp ugt i32 %v1_f174, 150
  store i1 %v2_10358, i1* %cpsr_c.global-to-local, align 1
  %v7_10358 = icmp eq i32 %v1_f174, 151
  store i1 %v7_10358, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10358, label %.thread442, label %.thread443

.thread443:                                       ; preds = %dec_label_pc_10358
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1036c

.thread442:                                       ; preds = %dec_label_pc_10358
  store i32 %.1932, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10364 = icmp eq i1 %v7_f248, false
  store i1 %v2_10364, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10364, label %dec_label_pc_1036c, label %dec_label_pc_f170

dec_label_pc_1036c:                               ; preds = %.thread443, %.thread442
  store i32 %.1945, i32* %r3.global-to-local, align 4
  %v2_10370 = icmp ugt i32 %v1_f188, 131
  store i1 %v2_10370, i1* %cpsr_c.global-to-local, align 1
  %v7_10370 = icmp eq i32 %v1_f188, 132
  store i1 %v7_10370, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10370, label %.thread446, label %.thread447

.thread447:                                       ; preds = %dec_label_pc_1036c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10384

.thread446:                                       ; preds = %dec_label_pc_1036c
  store i32 %.1945, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1037c = icmp eq i1 %v7_f45c, false
  store i1 %v2_1037c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1037c, label %dec_label_pc_10384, label %dec_label_pc_f170

dec_label_pc_10384:                               ; preds = %.thread447, %.thread446
  %v2_10384 = icmp ugt i32 %v1_f174, 175
  store i1 %v2_10384, i1* %cpsr_c.global-to-local, align 1
  %v7_10384 = icmp eq i32 %v1_f174, 176
  store i1 %v7_10384, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10384, label %bb1735, label %dec_label_pc_10390

bb1735:                                           ; preds = %dec_label_pc_10384
  %v3_10388 = icmp ugt i32 %v1_f188, 30
  store i1 %v3_10388, i1* %cpsr_c.global-to-local, align 1
  %v8_10388 = icmp eq i32 %v1_f188, 31
  store i1 %v8_10388, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10388, label %dec_label_pc_f170, label %dec_label_pc_10390

dec_label_pc_10390:                               ; preds = %dec_label_pc_10384, %bb1735
  store i32 %.1946, i32* %r3.global-to-local, align 4
  %v2_10398 = and i32 %.1936, %.1946
  %v4_10398 = icmp eq i32 %v2_10398, 0
  store i1 %v4_10398, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_10398, label %dec_label_pc_103a0, label %dec_label_pc_f170

dec_label_pc_103a0:                               ; preds = %dec_label_pc_10390
  %v2_103a8 = and i32 %storemerge1181, %.1975
  %v4_103a8 = icmp eq i32 %v2_103a8, 0
  store i1 %v4_103a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_103a8, label %dec_label_pc_103b0, label %dec_label_pc_f170

dec_label_pc_103b0:                               ; preds = %dec_label_pc_103a0
  store i32 %.1975, i32* %r3.global-to-local, align 4
  %v2_103b4 = icmp ugt i32 %v1_f188, 32
  store i1 %v2_103b4, i1* %cpsr_c.global-to-local, align 1
  %v7_103b4 = icmp eq i32 %v1_f188, 33
  store i1 %v7_103b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_103b4, label %.thread451, label %.thread452

.thread452:                                       ; preds = %dec_label_pc_103b0
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_103c8

.thread451:                                       ; preds = %dec_label_pc_103b0
  store i32 %.1975, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_103c0 = icmp eq i1 %v7_fc68, false
  store i1 %v2_103c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_103c0, label %dec_label_pc_103c8, label %dec_label_pc_f170

dec_label_pc_103c8:                               ; preds = %.thread452, %.thread451
  store i32 %.1949, i32* %r3.global-to-local, align 4
  %v2_103cc = and i32 %.1949, %.1978
  %v4_103cc = icmp eq i32 %v2_103cc, 0
  store i1 %v4_103cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_103cc, label %dec_label_pc_103d4, label %dec_label_pc_f170

dec_label_pc_103d4:                               ; preds = %dec_label_pc_103c8
  %v2_103d4 = icmp ugt i32 %v1_f188, 186
  store i1 %v2_103d4, i1* %cpsr_c.global-to-local, align 1
  %v7_103d4 = icmp eq i32 %v1_f188, 187
  store i1 %v7_103d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_103d4, label %.thread455, label %.thread456

.thread456:                                       ; preds = %dec_label_pc_103d4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_103e8

.thread455:                                       ; preds = %dec_label_pc_103d4
  store i32 %.1978, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_103e0 = icmp eq i1 %v7_fe40, false
  store i1 %v2_103e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_103e0, label %dec_label_pc_103e8, label %dec_label_pc_f170

dec_label_pc_103e8:                               ; preds = %.thread456, %.thread455
  %v2_103e8 = icmp ugt i32 %v1_f174, 45
  store i1 %v2_103e8, i1* %cpsr_c.global-to-local, align 1
  %v7_103e8 = icmp eq i32 %v1_f174, 46
  store i1 %v7_103e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_103e8, label %bb1736, label %dec_label_pc_103f4

bb1736:                                           ; preds = %dec_label_pc_103e8
  %v3_103ec = icmp ugt i32 %v1_f188, 104
  store i1 %v3_103ec, i1* %cpsr_c.global-to-local, align 1
  %v8_103ec = icmp eq i32 %v1_f188, 105
  store i1 %v8_103ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_103ec, label %dec_label_pc_f170, label %dec_label_pc_103f4

dec_label_pc_103f4:                               ; preds = %dec_label_pc_103e8, %bb1736
  %v2_103f8 = icmp ugt i32 %v1_f174, 50
  store i1 %v2_103f8, i1* %cpsr_c.global-to-local, align 1
  %v7_103f8 = icmp eq i32 %v1_f174, 51
  %.1987 = zext i1 %v7_103f8 to i32
  %v2_10404 = and i32 %storemerge1199, %.1987
  %v4_10404 = icmp eq i32 %v2_10404, 0
  store i1 %v4_10404, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_10404, label %dec_label_pc_1040c, label %dec_label_pc_f170

dec_label_pc_1040c:                               ; preds = %dec_label_pc_103f4
  %v2_1040c = icmp eq i32 %v1_f188, 255
  store i1 %v2_1040c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_1040c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1040c, label %.thread461, label %.thread462

.thread462:                                       ; preds = %dec_label_pc_1040c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10420

.thread461:                                       ; preds = %dec_label_pc_1040c
  store i32 %.1987, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10418 = icmp eq i1 %v7_103f8, false
  store i1 %v2_10418, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10418, label %dec_label_pc_10420, label %dec_label_pc_f170

dec_label_pc_10420:                               ; preds = %.thread462, %.thread461
  %v7_10420 = icmp eq i32 %v1_f174, 5
  %.1988 = zext i1 %v7_10420 to i32
  store i32 %.1988, i32* %r3.global-to-local, align 4
  %v2_1042c = icmp ugt i32 %v1_f188, 134
  store i1 %v2_1042c, i1* %cpsr_c.global-to-local, align 1
  %v7_1042c = icmp eq i32 %v1_f188, 135
  store i1 %v7_1042c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1042c, label %bb1741, label %dec_label_pc_10438

bb1741:                                           ; preds = %dec_label_pc_10420
  %v2_10420 = icmp ugt i32 %v1_f174, 4
  store i1 %v2_10420, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_10420, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10420, label %dec_label_pc_f170, label %dec_label_pc_10438

dec_label_pc_10438:                               ; preds = %dec_label_pc_10420, %bb1741
  %v2_1043c = and i32 %.1939, %.1988
  %v4_1043c = icmp eq i32 %v2_1043c, 0
  store i1 %v4_1043c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_1043c, label %dec_label_pc_10444, label %dec_label_pc_f170

dec_label_pc_10444:                               ; preds = %dec_label_pc_10438
  store i1 %v2_f720, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f720, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f720, label %.thread467, label %.thread468

.thread468:                                       ; preds = %dec_label_pc_10444
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10458

.thread467:                                       ; preds = %dec_label_pc_10444
  store i32 %.1988, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10450 = icmp eq i1 %v7_10420, false
  store i1 %v2_10450, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10450, label %dec_label_pc_10458, label %dec_label_pc_f170

dec_label_pc_10458:                               ; preds = %.thread468, %.thread467
  %v2_10458 = icmp ugt i32 %v1_f174, 90
  store i1 %v2_10458, i1* %cpsr_c.global-to-local, align 1
  %v7_10458 = icmp eq i32 %v1_f174, 91
  store i1 %v7_10458, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10458, label %bb1742, label %dec_label_pc_10464

bb1742:                                           ; preds = %dec_label_pc_10458
  %v3_1045c = icmp ugt i32 %v1_f188, 133
  store i1 %v3_1045c, i1* %cpsr_c.global-to-local, align 1
  %v8_1045c = icmp eq i32 %v1_f188, 134
  store i1 %v8_1045c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_1045c, label %dec_label_pc_f170, label %dec_label_pc_10464

dec_label_pc_10464:                               ; preds = %dec_label_pc_10458, %bb1742
  store i32 %.1972, i32* %r3.global-to-local, align 4
  %v2_10468 = icmp ugt i32 %v1_f188, 199
  store i1 %v2_10468, i1* %cpsr_c.global-to-local, align 1
  %v7_10468 = icmp eq i32 %v1_f188, 200
  store i1 %v7_10468, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10468, label %.thread472, label %.thread473

.thread473:                                       ; preds = %dec_label_pc_10464
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10490

.thread472:                                       ; preds = %dec_label_pc_10464
  store i32 %.1972, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10474 = icmp eq i1 %v7_fbcc, false
  store i1 %v2_10474, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10474, label %dec_label_pc_10490, label %dec_label_pc_1047c

dec_label_pc_1047c:                               ; preds = %.thread472
  %v2_1047c = icmp ugt i32 %v1_f18c, 157
  store i1 %v2_1047c, i1* %cpsr_c.global-to-local, align 1
  %v7_1047c = icmp eq i32 %v1_f18c, 158
  store i1 %v7_1047c, i1* %cpsr_z.global-to-local, align 1
  %v2_10480 = xor i1 %v7_1047c, true
  %v3_10480 = and i1 %v2_1047c, %v2_10480
  br i1 %v3_10480, label %bb1743, label %bb1744

bb1743:                                           ; preds = %dec_label_pc_1047c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1744

bb1744:                                           ; preds = %dec_label_pc_1047c, %bb1743
  %v0_10488935 = phi i32 [ %.1972, %dec_label_pc_1047c ], [ 0, %bb1743 ]
  %v2_10484 = xor i1 %v2_1047c, true
  %v3_10484 = or i1 %v7_1047c, %v2_10484
  br i1 %v3_10484, label %bb1745, label %bb1746

bb1745:                                           ; preds = %bb1744
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1746

bb1746:                                           ; preds = %bb1744, %bb1745
  %v0_10488 = phi i32 [ %v0_10488935, %bb1744 ], [ 1, %bb1745 ]
  %v2_10488 = and i32 %v3_f17c, 64
  %v3_10488 = icmp ne i32 %v2_10488, 0
  store i1 %v3_10488, i1* %cpsr_c.global-to-local, align 1
  %v4_10488 = udiv i32 %v1_f18c, 128
  %v5_10488 = and i32 %v0_10488, %v4_10488
  store i32 %v5_10488, i32* %r3.global-to-local, align 4
  %v6_10488 = icmp eq i32 %v5_10488, 0
  store i1 %v6_10488, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_10488, label %dec_label_pc_10490, label %dec_label_pc_f170

dec_label_pc_10490:                               ; preds = %.thread473, %bb1746, %.thread472
  store i32 %.1976, i32* %r3.global-to-local, align 4
  %v2_10494 = icmp ugt i32 %v1_f188, 151
  store i1 %v2_10494, i1* %cpsr_c.global-to-local, align 1
  %v7_10494 = icmp eq i32 %v1_f188, 152
  store i1 %v7_10494, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10494, label %.thread476, label %.thread477

.thread477:                                       ; preds = %dec_label_pc_10490
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_104c4

.thread476:                                       ; preds = %dec_label_pc_10490
  store i32 %.1976, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_104a0 = icmp eq i1 %v7_fcc0, false
  store i1 %v2_104a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_104a0, label %dec_label_pc_104c4, label %dec_label_pc_104a8

dec_label_pc_104a8:                               ; preds = %.thread476
  %v2_104a8 = icmp ugt i32 %v1_f18c, 94
  store i1 %v2_104a8, i1* %cpsr_c.global-to-local, align 1
  %v7_104a8 = icmp eq i32 %v1_f18c, 95
  store i1 %v7_104a8, i1* %cpsr_z.global-to-local, align 1
  %v2_104ac = xor i1 %v2_104a8, true
  %v3_104ac = or i1 %v7_104a8, %v2_104ac
  br i1 %v3_104ac, label %bb1747, label %bb1748

bb1747:                                           ; preds = %dec_label_pc_104a8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1748

bb1748:                                           ; preds = %dec_label_pc_104a8, %bb1747
  %v0_104bc.pr938 = phi i32 [ %.1976, %dec_label_pc_104a8 ], [ 0, %bb1747 ]
  %v2_104b0 = xor i1 %v7_104a8, true
  %v3_104b0 = and i1 %v2_104a8, %v2_104b0
  br i1 %v3_104b0, label %bb1749, label %bb1750

bb1749:                                           ; preds = %bb1748
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1750

bb1750:                                           ; preds = %bb1748, %bb1749
  %v0_104bc.pr = phi i32 [ %v0_104bc.pr938, %bb1748 ], [ 1, %bb1749 ]
  %v2_104b4 = icmp ugt i32 %v1_f18c, 109
  store i1 %v2_104b4, i1* %cpsr_c.global-to-local, align 1
  %v7_104b4 = icmp eq i32 %v1_f18c, 110
  store i1 %v7_104b4, i1* %cpsr_z.global-to-local, align 1
  %v2_104b8 = xor i1 %v7_104b4, true
  %v3_104b8 = and i1 %v2_104b4, %v2_104b8
  br i1 %v3_104b8, label %.thread481, label %bb1751

.thread481:                                       ; preds = %bb1750
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_104c4

bb1751:                                           ; preds = %bb1750
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_104bc = icmp eq i32 %v0_104bc.pr, 0
  store i1 %v2_104bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_104bc, label %dec_label_pc_104c4, label %dec_label_pc_f170

dec_label_pc_104c4:                               ; preds = %.thread481, %.thread477, %bb1751, %.thread476
  store i32 %.1976, i32* %r3.global-to-local, align 4
  %v2_104c8 = icmp ugt i32 %v1_f188, 180
  store i1 %v2_104c8, i1* %cpsr_c.global-to-local, align 1
  %v7_104c8 = icmp eq i32 %v1_f188, 181
  store i1 %v7_104c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_104c8, label %.thread484, label %.thread485

.thread485:                                       ; preds = %dec_label_pc_104c4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_104f8

.thread484:                                       ; preds = %dec_label_pc_104c4
  store i32 %.1976, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_104d4 = icmp eq i1 %v7_fcc0, false
  store i1 %v2_104d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_104d4, label %dec_label_pc_104f8, label %dec_label_pc_104dc

dec_label_pc_104dc:                               ; preds = %.thread484
  %v2_104dc = icmp ugt i32 %v1_f18c, 158
  store i1 %v2_104dc, i1* %cpsr_c.global-to-local, align 1
  %v7_104dc = icmp eq i32 %v1_f18c, 159
  store i1 %v7_104dc, i1* %cpsr_z.global-to-local, align 1
  %v2_104e0 = xor i1 %v2_104dc, true
  %v3_104e0 = or i1 %v7_104dc, %v2_104e0
  br i1 %v3_104e0, label %bb1752, label %bb1753

bb1752:                                           ; preds = %dec_label_pc_104dc
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1753

bb1753:                                           ; preds = %dec_label_pc_104dc, %bb1752
  %v0_104f0.pr941 = phi i32 [ %.1976, %dec_label_pc_104dc ], [ 0, %bb1752 ]
  %v2_104e4 = xor i1 %v7_104dc, true
  %v3_104e4 = and i1 %v2_104dc, %v2_104e4
  br i1 %v3_104e4, label %bb1754, label %bb1755

bb1754:                                           ; preds = %bb1753
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1755

bb1755:                                           ; preds = %bb1753, %bb1754
  %v0_104f0.pr = phi i32 [ %v0_104f0.pr941, %bb1753 ], [ 1, %bb1754 ]
  %v2_104e8 = icmp ugt i32 %v1_f18c, 187
  store i1 %v2_104e8, i1* %cpsr_c.global-to-local, align 1
  %v7_104e8 = icmp eq i32 %v1_f18c, 188
  store i1 %v7_104e8, i1* %cpsr_z.global-to-local, align 1
  %v2_104ec = xor i1 %v7_104e8, true
  %v3_104ec = and i1 %v2_104e8, %v2_104ec
  br i1 %v3_104ec, label %.thread489, label %bb1756

.thread489:                                       ; preds = %bb1755
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_104f8

bb1756:                                           ; preds = %bb1755
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_104f0 = icmp eq i32 %v0_104f0.pr, 0
  store i1 %v2_104f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_104f0, label %dec_label_pc_104f8, label %dec_label_pc_f170

dec_label_pc_104f8:                               ; preds = %.thread489, %.thread485, %bb1756, %.thread484
  store i32 %.1957, i32* %r3.global-to-local, align 4
  %v2_104fc = and i32 %.1933, %.1957
  %v4_104fc = icmp eq i32 %v2_104fc, 0
  store i1 %v4_104fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_104fc, label %dec_label_pc_10520, label %dec_label_pc_10504

dec_label_pc_10504:                               ; preds = %dec_label_pc_104f8
  %v2_10504 = icmp ugt i32 %v1_f18c, 62
  store i1 %v2_10504, i1* %cpsr_c.global-to-local, align 1
  %v7_10504 = icmp eq i32 %v1_f18c, 63
  store i1 %v7_10504, i1* %cpsr_z.global-to-local, align 1
  %v2_10508 = xor i1 %v2_10504, true
  %v3_10508 = or i1 %v7_10504, %v2_10508
  br i1 %v3_10508, label %bb1757, label %bb1758

bb1757:                                           ; preds = %dec_label_pc_10504
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1758

bb1758:                                           ; preds = %dec_label_pc_10504, %bb1757
  %v0_10518.pr943 = phi i32 [ %.1957, %dec_label_pc_10504 ], [ 0, %bb1757 ]
  %v2_1050c = xor i1 %v7_10504, true
  %v3_1050c = and i1 %v2_10504, %v2_1050c
  br i1 %v3_1050c, label %bb1759, label %bb1760

bb1759:                                           ; preds = %bb1758
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1760

bb1760:                                           ; preds = %bb1758, %bb1759
  %v0_10518.pr = phi i32 [ %v0_10518.pr943, %bb1758 ], [ 1, %bb1759 ]
  %v2_10510 = icmp ugt i32 %v1_f18c, 93
  store i1 %v2_10510, i1* %cpsr_c.global-to-local, align 1
  %v7_10510 = icmp eq i32 %v1_f18c, 94
  store i1 %v7_10510, i1* %cpsr_z.global-to-local, align 1
  %v2_10514 = xor i1 %v7_10510, true
  %v3_10514 = and i1 %v2_10510, %v2_10514
  br i1 %v3_10514, label %.thread493, label %bb1761

.thread493:                                       ; preds = %bb1760
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10520

bb1761:                                           ; preds = %bb1760
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10518 = icmp eq i32 %v0_10518.pr, 0
  store i1 %v2_10518, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10518, label %dec_label_pc_10520, label %dec_label_pc_f170

dec_label_pc_10520:                               ; preds = %.thread493, %bb1761, %dec_label_pc_104f8
  store i32 %storemerge1219, i32* %r3.global-to-local, align 4
  %v2_10524 = icmp ugt i32 %v1_f174, 183
  store i1 %v2_10524, i1* %cpsr_c.global-to-local, align 1
  %v7_10524 = icmp eq i32 %v1_f174, 184
  store i1 %v7_10524, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10524, label %.thread496, label %.thread497

.thread497:                                       ; preds = %dec_label_pc_10520
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10544

.thread496:                                       ; preds = %dec_label_pc_10520
  store i32 %storemerge1219, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10530 = icmp eq i1 %v7_fccc, false
  store i1 %v2_10530, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10530, label %dec_label_pc_10544, label %dec_label_pc_10538

dec_label_pc_10538:                               ; preds = %.thread496
  %v2_10538 = icmp eq i32 %v1_f18c, 255
  store i1 %v2_10538, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_10538, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10538, label %dec_label_pc_10544, label %bb1762

bb1762:                                           ; preds = %dec_label_pc_10538
  %v3_1053c = icmp ugt i32 %v1_f18c, 238
  store i1 %v3_1053c, i1* %cpsr_c.global-to-local, align 1
  %v8_1053c = icmp eq i32 %v1_f18c, 239
  store i1 %v8_1053c, i1* %cpsr_z.global-to-local, align 1
  %v2_10540 = xor i1 %v8_1053c, true
  %v3_10540 = and i1 %v3_1053c, %v2_10540
  br i1 %v3_10540, label %dec_label_pc_f170, label %dec_label_pc_10544

dec_label_pc_10544:                               ; preds = %dec_label_pc_10538, %.thread497, %bb1762, %.thread496
  %v2_10544 = icmp ugt i32 %v1_f188, 110
  store i1 %v2_10544, i1* %cpsr_c.global-to-local, align 1
  %v7_10544 = icmp eq i32 %v1_f188, 111
  store i1 %v7_10544, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10544, label %.thread500, label %.thread501

.thread501:                                       ; preds = %dec_label_pc_10544
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1056c

.thread500:                                       ; preds = %dec_label_pc_10544
  store i32 %.1930, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10550 = icmp eq i1 %v7_f218, false
  store i1 %v2_10550, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10550, label %dec_label_pc_1056c, label %dec_label_pc_10558

dec_label_pc_10558:                               ; preds = %.thread500
  %v2_10558 = icmp ugt i32 %v1_f18c, 141
  store i1 %v2_10558, i1* %cpsr_c.global-to-local, align 1
  %v7_10558 = icmp eq i32 %v1_f18c, 142
  store i1 %v7_10558, i1* %cpsr_z.global-to-local, align 1
  %v2_1055c = xor i1 %v7_10558, true
  %v3_1055c = and i1 %v2_10558, %v2_1055c
  br i1 %v3_1055c, label %bb1763, label %bb1764

bb1763:                                           ; preds = %dec_label_pc_10558
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1764

bb1764:                                           ; preds = %dec_label_pc_10558, %bb1763
  %v0_10564948 = phi i32 [ %.1930, %dec_label_pc_10558 ], [ 0, %bb1763 ]
  %v2_10560 = xor i1 %v2_10558, true
  %v3_10560 = or i1 %v7_10558, %v2_10560
  br i1 %v3_10560, label %bb1765, label %bb1766

bb1765:                                           ; preds = %bb1764
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1766

bb1766:                                           ; preds = %bb1764, %bb1765
  %v0_10564 = phi i32 [ %v0_10564948, %bb1764 ], [ 1, %bb1765 ]
  %v2_10564 = and i32 %v3_f17c, 64
  %v3_10564 = icmp ne i32 %v2_10564, 0
  store i1 %v3_10564, i1* %cpsr_c.global-to-local, align 1
  %v4_10564 = udiv i32 %v1_f18c, 128
  %v5_10564 = and i32 %v0_10564, %v4_10564
  store i32 %v5_10564, i32* %r3.global-to-local, align 4
  %v6_10564 = icmp eq i32 %v5_10564, 0
  store i1 %v6_10564, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_10564, label %dec_label_pc_1056c, label %dec_label_pc_f170

dec_label_pc_1056c:                               ; preds = %.thread501, %bb1766, %.thread500
  %v2_1056c = icmp ugt i32 %v1_f188, 251
  store i1 %v2_1056c, i1* %cpsr_c.global-to-local, align 1
  %v7_1056c = icmp eq i32 %v1_f188, 252
  store i1 %v7_1056c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1056c, label %.thread504, label %.thread505

.thread505:                                       ; preds = %dec_label_pc_1056c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1059c

.thread504:                                       ; preds = %dec_label_pc_1056c
  store i32 %.1930, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10578 = icmp eq i1 %v7_f218, false
  store i1 %v2_10578, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10578, label %dec_label_pc_1059c, label %dec_label_pc_10580

dec_label_pc_10580:                               ; preds = %.thread504
  %v2_10580 = icmp ugt i32 %v1_f18c, 206
  store i1 %v2_10580, i1* %cpsr_c.global-to-local, align 1
  %v7_10580 = icmp eq i32 %v1_f18c, 207
  store i1 %v7_10580, i1* %cpsr_z.global-to-local, align 1
  %v2_10584 = xor i1 %v2_10580, true
  %v3_10584 = or i1 %v7_10580, %v2_10584
  br i1 %v3_10584, label %bb1767, label %bb1768

bb1767:                                           ; preds = %dec_label_pc_10580
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1768

bb1768:                                           ; preds = %dec_label_pc_10580, %bb1767
  %v0_10594.pr950 = phi i32 [ %.1930, %dec_label_pc_10580 ], [ 0, %bb1767 ]
  %v2_10588 = xor i1 %v7_10580, true
  %v3_10588 = and i1 %v2_10580, %v2_10588
  br i1 %v3_10588, label %bb1769, label %bb1770

bb1769:                                           ; preds = %bb1768
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1770

bb1770:                                           ; preds = %bb1768, %bb1769
  %v0_10594.pr = phi i32 [ %v0_10594.pr950, %bb1768 ], [ 1, %bb1769 ]
  %v2_1058c = icmp ugt i32 %v1_f18c, 221
  store i1 %v2_1058c, i1* %cpsr_c.global-to-local, align 1
  %v7_1058c = icmp eq i32 %v1_f18c, 222
  store i1 %v7_1058c, i1* %cpsr_z.global-to-local, align 1
  %v2_10590 = xor i1 %v7_1058c, true
  %v3_10590 = and i1 %v2_1058c, %v2_10590
  br i1 %v3_10590, label %.thread509, label %bb1771

.thread509:                                       ; preds = %bb1770
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1059c

bb1771:                                           ; preds = %bb1770
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10594 = icmp eq i32 %v0_10594.pr, 0
  store i1 %v2_10594, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10594, label %dec_label_pc_1059c, label %dec_label_pc_f170

dec_label_pc_1059c:                               ; preds = %.thread509, %.thread505, %bb1771, %.thread504
  %v2_1059c = icmp ugt i32 %v1_f188, 39
  store i1 %v2_1059c, i1* %cpsr_c.global-to-local, align 1
  %v7_1059c = icmp eq i32 %v1_f188, 40
  store i1 %v7_1059c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1059c, label %.thread512, label %.thread513

.thread513:                                       ; preds = %dec_label_pc_1059c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_105cc

.thread512:                                       ; preds = %dec_label_pc_1059c
  store i32 %.1930, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_105a8 = icmp eq i1 %v7_f218, false
  store i1 %v2_105a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_105a8, label %dec_label_pc_105cc, label %dec_label_pc_105b0

dec_label_pc_105b0:                               ; preds = %.thread512
  %v2_105b0 = icmp ugt i32 %v1_f18c, 54
  store i1 %v2_105b0, i1* %cpsr_c.global-to-local, align 1
  %v7_105b0 = icmp eq i32 %v1_f18c, 55
  store i1 %v7_105b0, i1* %cpsr_z.global-to-local, align 1
  %v2_105b4 = xor i1 %v2_105b0, true
  %v3_105b4 = or i1 %v7_105b0, %v2_105b4
  br i1 %v3_105b4, label %bb1772, label %bb1773

bb1772:                                           ; preds = %dec_label_pc_105b0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1773

bb1773:                                           ; preds = %dec_label_pc_105b0, %bb1772
  %v0_105c4.pr952 = phi i32 [ %.1930, %dec_label_pc_105b0 ], [ 0, %bb1772 ]
  %v2_105b8 = xor i1 %v7_105b0, true
  %v3_105b8 = and i1 %v2_105b0, %v2_105b8
  br i1 %v3_105b8, label %bb1774, label %bb1775

bb1774:                                           ; preds = %bb1773
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1775

bb1775:                                           ; preds = %bb1773, %bb1774
  %v0_105c4.pr = phi i32 [ %v0_105c4.pr952, %bb1773 ], [ 1, %bb1774 ]
  %v2_105bc = icmp ugt i32 %v1_f18c, 57
  store i1 %v2_105bc, i1* %cpsr_c.global-to-local, align 1
  %v7_105bc = icmp eq i32 %v1_f18c, 58
  store i1 %v7_105bc, i1* %cpsr_z.global-to-local, align 1
  %v2_105c0 = xor i1 %v7_105bc, true
  %v3_105c0 = and i1 %v2_105bc, %v2_105c0
  br i1 %v3_105c0, label %.thread517, label %bb1776

.thread517:                                       ; preds = %bb1775
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_105cc

bb1776:                                           ; preds = %bb1775
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_105c4 = icmp eq i32 %v0_105c4.pr, 0
  store i1 %v2_105c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_105c4, label %dec_label_pc_105cc, label %dec_label_pc_f170

dec_label_pc_105cc:                               ; preds = %.thread517, %.thread513, %bb1776, %.thread512
  store i32 %.1959, i32* %r3.global-to-local, align 4
  %v2_105d0 = icmp ugt i32 %v1_f188, 7
  store i1 %v2_105d0, i1* %cpsr_c.global-to-local, align 1
  %v7_105d0 = icmp eq i32 %v1_f188, 8
  store i1 %v7_105d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_105d0, label %.thread520, label %.thread521

.thread521:                                       ; preds = %dec_label_pc_105cc
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10600

.thread520:                                       ; preds = %dec_label_pc_105cc
  store i32 %.1959, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_105dc = icmp eq i1 %v7_f674, false
  store i1 %v2_105dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_105dc, label %dec_label_pc_10600, label %dec_label_pc_105e4

dec_label_pc_105e4:                               ; preds = %.thread520
  %v2_105e4 = icmp ugt i32 %v1_f18c, 79
  store i1 %v2_105e4, i1* %cpsr_c.global-to-local, align 1
  %v7_105e4 = icmp eq i32 %v1_f18c, 80
  store i1 %v7_105e4, i1* %cpsr_z.global-to-local, align 1
  %v2_105e8 = xor i1 %v2_105e4, true
  %v3_105e8 = or i1 %v7_105e4, %v2_105e8
  br i1 %v3_105e8, label %bb1777, label %bb1778

bb1777:                                           ; preds = %dec_label_pc_105e4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1778

bb1778:                                           ; preds = %dec_label_pc_105e4, %bb1777
  %v0_105f8.pr955 = phi i32 [ %.1959, %dec_label_pc_105e4 ], [ 0, %bb1777 ]
  %v2_105ec = xor i1 %v7_105e4, true
  %v3_105ec = and i1 %v2_105e4, %v2_105ec
  br i1 %v3_105ec, label %bb1779, label %bb1780

bb1779:                                           ; preds = %bb1778
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1780

bb1780:                                           ; preds = %bb1778, %bb1779
  %v0_105f8.pr = phi i32 [ %v0_105f8.pr955, %bb1778 ], [ 1, %bb1779 ]
  %v2_105f0 = icmp ugt i32 %v1_f18c, 93
  store i1 %v2_105f0, i1* %cpsr_c.global-to-local, align 1
  %v7_105f0 = icmp eq i32 %v1_f18c, 94
  store i1 %v7_105f0, i1* %cpsr_z.global-to-local, align 1
  %v2_105f4 = xor i1 %v7_105f0, true
  %v3_105f4 = and i1 %v2_105f0, %v2_105f4
  br i1 %v3_105f4, label %.thread525, label %bb1781

.thread525:                                       ; preds = %bb1780
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10600

bb1781:                                           ; preds = %bb1780
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_105f8 = icmp eq i32 %v0_105f8.pr, 0
  store i1 %v2_105f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_105f8, label %dec_label_pc_10600, label %dec_label_pc_f170

dec_label_pc_10600:                               ; preds = %.thread525, %.thread521, %bb1781, %.thread520
  store i32 %.1971, i32* %r3.global-to-local, align 4
  %v2_10604 = icmp ugt i32 %v1_f188, 115
  store i1 %v2_10604, i1* %cpsr_c.global-to-local, align 1
  %v7_10604 = icmp eq i32 %v1_f188, 116
  store i1 %v7_10604, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10604, label %.thread528, label %.thread529

.thread529:                                       ; preds = %dec_label_pc_10600
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10634

.thread528:                                       ; preds = %dec_label_pc_10600
  store i32 %.1971, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10610 = icmp eq i1 %v7_fb58, false
  store i1 %v2_10610, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10610, label %dec_label_pc_10634, label %dec_label_pc_10618

dec_label_pc_10618:                               ; preds = %.thread528
  %v2_10618 = icmp ugt i32 %v1_f18c, 110
  store i1 %v2_10618, i1* %cpsr_c.global-to-local, align 1
  %v7_10618 = icmp eq i32 %v1_f18c, 111
  store i1 %v7_10618, i1* %cpsr_z.global-to-local, align 1
  %v2_1061c = xor i1 %v2_10618, true
  %v3_1061c = or i1 %v7_10618, %v2_1061c
  br i1 %v3_1061c, label %bb1782, label %bb1783

bb1782:                                           ; preds = %dec_label_pc_10618
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1783

bb1783:                                           ; preds = %dec_label_pc_10618, %bb1782
  %v0_1062c.pr958 = phi i32 [ %.1971, %dec_label_pc_10618 ], [ 0, %bb1782 ]
  %v2_10620 = xor i1 %v7_10618, true
  %v3_10620 = and i1 %v2_10618, %v2_10620
  br i1 %v3_10620, label %bb1784, label %bb1785

bb1784:                                           ; preds = %bb1783
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1785

bb1785:                                           ; preds = %bb1783, %bb1784
  %v0_1062c.pr = phi i32 [ %v0_1062c.pr958, %bb1783 ], [ 1, %bb1784 ]
  %v2_10624 = icmp ugt i32 %v1_f18c, 117
  store i1 %v2_10624, i1* %cpsr_c.global-to-local, align 1
  %v7_10624 = icmp eq i32 %v1_f18c, 118
  store i1 %v7_10624, i1* %cpsr_z.global-to-local, align 1
  %v2_10628 = xor i1 %v7_10624, true
  %v3_10628 = and i1 %v2_10624, %v2_10628
  br i1 %v3_10628, label %.thread533, label %bb1786

.thread533:                                       ; preds = %bb1785
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10634

bb1786:                                           ; preds = %bb1785
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1062c = icmp eq i32 %v0_1062c.pr, 0
  store i1 %v2_1062c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1062c, label %dec_label_pc_10634, label %dec_label_pc_f170

dec_label_pc_10634:                               ; preds = %.thread533, %.thread529, %bb1786, %.thread528
  %v2_1063c = and i32 %.1941, %.1971
  %v4_1063c = icmp eq i32 %v2_1063c, 0
  store i1 %v4_1063c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_1063c, label %dec_label_pc_10650, label %dec_label_pc_10644

dec_label_pc_10644:                               ; preds = %dec_label_pc_10634
  %v2_10644 = icmp eq i32 %v1_f18c, 255
  store i1 %v2_10644, i1* %cpsr_c.global-to-local, align 1
  %v7_10644 = icmp eq i32 %v1_f18c, 255
  store i1 %v7_10644, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10644, label %dec_label_pc_10650, label %bb1787

bb1787:                                           ; preds = %dec_label_pc_10644
  %v3_10648 = icmp ugt i32 %v1_f18c, 246
  store i1 %v3_10648, i1* %cpsr_c.global-to-local, align 1
  %v8_10648 = icmp eq i32 %v1_f18c, 247
  store i1 %v8_10648, i1* %cpsr_z.global-to-local, align 1
  %v2_1064c = xor i1 %v8_10648, true
  %v3_1064c = and i1 %v3_10648, %v2_1064c
  br i1 %v3_1064c, label %dec_label_pc_f170, label %dec_label_pc_10650

dec_label_pc_10650:                               ; preds = %dec_label_pc_10644, %bb1787, %dec_label_pc_10634
  store i32 %.1971, i32* %r3.global-to-local, align 4
  %v2_10654 = icmp ugt i32 %v1_f188, 35
  store i1 %v2_10654, i1* %cpsr_c.global-to-local, align 1
  %v7_10654 = icmp eq i32 %v1_f188, 36
  store i1 %v7_10654, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10654, label %.thread536, label %.thread537

.thread537:                                       ; preds = %dec_label_pc_10650
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10684

.thread536:                                       ; preds = %dec_label_pc_10650
  store i32 %.1971, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10660 = icmp eq i1 %v7_fb58, false
  store i1 %v2_10660, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10660, label %dec_label_pc_10684, label %dec_label_pc_10668

dec_label_pc_10668:                               ; preds = %.thread536
  %v2_10668 = icmp ugt i32 %v1_f18c, 218
  store i1 %v2_10668, i1* %cpsr_c.global-to-local, align 1
  %v7_10668 = icmp eq i32 %v1_f18c, 219
  store i1 %v7_10668, i1* %cpsr_z.global-to-local, align 1
  %v2_1066c = xor i1 %v2_10668, true
  %v3_1066c = or i1 %v7_10668, %v2_1066c
  br i1 %v3_1066c, label %bb1788, label %bb1789

bb1788:                                           ; preds = %dec_label_pc_10668
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1789

bb1789:                                           ; preds = %dec_label_pc_10668, %bb1788
  %v0_1067c.pr963 = phi i32 [ %.1971, %dec_label_pc_10668 ], [ 0, %bb1788 ]
  %v2_10670 = xor i1 %v7_10668, true
  %v3_10670 = and i1 %v2_10668, %v2_10670
  br i1 %v3_10670, label %bb1790, label %bb1791

bb1790:                                           ; preds = %bb1789
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1791

bb1791:                                           ; preds = %bb1789, %bb1790
  %v0_1067c.pr = phi i32 [ %v0_1067c.pr963, %bb1789 ], [ 1, %bb1790 ]
  %v2_10674 = icmp ugt i32 %v1_f18c, 221
  store i1 %v2_10674, i1* %cpsr_c.global-to-local, align 1
  %v7_10674 = icmp eq i32 %v1_f18c, 222
  store i1 %v7_10674, i1* %cpsr_z.global-to-local, align 1
  %v2_10678 = xor i1 %v7_10674, true
  %v3_10678 = and i1 %v2_10674, %v2_10678
  br i1 %v3_10678, label %.thread541, label %bb1792

.thread541:                                       ; preds = %bb1791
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10684

bb1792:                                           ; preds = %bb1791
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1067c = icmp eq i32 %v0_1067c.pr, 0
  store i1 %v2_1067c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1067c, label %dec_label_pc_10684, label %dec_label_pc_f170

dec_label_pc_10684:                               ; preds = %.thread541, %.thread537, %bb1792, %.thread536
  store i32 %.1971, i32* %r3.global-to-local, align 4
  %v2_10688 = icmp ugt i32 %v1_f188, 57
  store i1 %v2_10688, i1* %cpsr_c.global-to-local, align 1
  %v7_10688 = icmp eq i32 %v1_f188, 58
  store i1 %v7_10688, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10688, label %.thread544, label %.thread545

.thread545:                                       ; preds = %dec_label_pc_10684
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_106b8

.thread544:                                       ; preds = %dec_label_pc_10684
  store i32 %.1971, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10694 = icmp eq i1 %v7_fb58, false
  store i1 %v2_10694, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10694, label %dec_label_pc_106b8, label %dec_label_pc_1069c

dec_label_pc_1069c:                               ; preds = %.thread544
  %v2_1069c = icmp ugt i32 %v1_f18c, 182
  store i1 %v2_1069c, i1* %cpsr_c.global-to-local, align 1
  %v7_1069c = icmp eq i32 %v1_f18c, 183
  store i1 %v7_1069c, i1* %cpsr_z.global-to-local, align 1
  %v2_106a0 = xor i1 %v2_1069c, true
  %v3_106a0 = or i1 %v7_1069c, %v2_106a0
  br i1 %v3_106a0, label %bb1793, label %bb1794

bb1793:                                           ; preds = %dec_label_pc_1069c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1794

bb1794:                                           ; preds = %dec_label_pc_1069c, %bb1793
  %v0_106b0.pr966 = phi i32 [ %.1971, %dec_label_pc_1069c ], [ 0, %bb1793 ]
  %v2_106a4 = xor i1 %v7_1069c, true
  %v3_106a4 = and i1 %v2_1069c, %v2_106a4
  br i1 %v3_106a4, label %bb1795, label %bb1796

bb1795:                                           ; preds = %bb1794
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1796

bb1796:                                           ; preds = %bb1794, %bb1795
  %v0_106b0.pr = phi i32 [ %v0_106b0.pr966, %bb1794 ], [ 1, %bb1795 ]
  %v2_106a8 = icmp ugt i32 %v1_f18c, 185
  store i1 %v2_106a8, i1* %cpsr_c.global-to-local, align 1
  %v7_106a8 = icmp eq i32 %v1_f18c, 186
  store i1 %v7_106a8, i1* %cpsr_z.global-to-local, align 1
  %v2_106ac = xor i1 %v7_106a8, true
  %v3_106ac = and i1 %v2_106a8, %v2_106ac
  br i1 %v3_106ac, label %.thread549, label %bb1797

.thread549:                                       ; preds = %bb1796
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_106b8

bb1797:                                           ; preds = %bb1796
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_106b0 = icmp eq i32 %v0_106b0.pr, 0
  store i1 %v2_106b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_106b0, label %dec_label_pc_106b8, label %dec_label_pc_f170

dec_label_pc_106b8:                               ; preds = %.thread549, %.thread545, %bb1797, %.thread544
  %v2_106b8 = icmp ugt i32 %v1_f174, 205
  store i1 %v2_106b8, i1* %cpsr_c.global-to-local, align 1
  %v7_106b8 = icmp eq i32 %v1_f174, 206
  store i1 %v7_106b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_106b8, label %bb1798, label %dec_label_pc_106e0

bb1798:                                           ; preds = %dec_label_pc_106b8
  %v3_106bc = icmp ugt i32 %v1_f188, 219
  store i1 %v3_106bc, i1* %cpsr_c.global-to-local, align 1
  %v8_106bc = icmp eq i32 %v1_f188, 220
  store i1 %v8_106bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_106bc, label %dec_label_pc_106c4, label %dec_label_pc_106e0

dec_label_pc_106c4:                               ; preds = %bb1798
  %v2_106c4 = icmp ugt i32 %v1_f18c, 170
  store i1 %v2_106c4, i1* %cpsr_c.global-to-local, align 1
  %v7_106c4 = icmp eq i32 %v1_f18c, 171
  store i1 %v7_106c4, i1* %cpsr_z.global-to-local, align 1
  %v2_106c8 = xor i1 %v2_106c4, true
  %v3_106c8 = or i1 %v7_106c4, %v2_106c8
  br i1 %v3_106c8, label %bb1799, label %bb1800

bb1799:                                           ; preds = %dec_label_pc_106c4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1800

bb1800:                                           ; preds = %dec_label_pc_106c4, %bb1799
  %v2_106cc = xor i1 %v7_106c4, true
  %v3_106cc = and i1 %v2_106c4, %v2_106cc
  br i1 %v3_106cc, label %bb1801, label %bb1802

bb1801:                                           ; preds = %bb1800
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1802

bb1802:                                           ; preds = %bb1800, %bb1801
  %v0_106d8.pr = phi i32 [ 0, %bb1800 ], [ 1, %bb1801 ]
  %v2_106d0 = icmp ugt i32 %v1_f18c, 173
  store i1 %v2_106d0, i1* %cpsr_c.global-to-local, align 1
  %v7_106d0 = icmp eq i32 %v1_f18c, 174
  store i1 %v7_106d0, i1* %cpsr_z.global-to-local, align 1
  %v2_106d4 = xor i1 %v7_106d0, true
  %v3_106d4 = and i1 %v2_106d0, %v2_106d4
  br i1 %v3_106d4, label %.thread554, label %bb1803

.thread554:                                       ; preds = %bb1802
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_106e0

bb1803:                                           ; preds = %bb1802
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_106d8 = icmp eq i32 %v0_106d8.pr, 0
  store i1 %v2_106d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_106d8, label %dec_label_pc_106e0, label %dec_label_pc_f170

dec_label_pc_106e0:                               ; preds = %dec_label_pc_106b8, %.thread554, %bb1803, %bb1798
  store i32 %.1982, i32* %r3.global-to-local, align 4
  %v2_106e4 = icmp ugt i32 %v1_f188, 77
  store i1 %v2_106e4, i1* %cpsr_c.global-to-local, align 1
  %v7_106e4 = icmp eq i32 %v1_f188, 78
  store i1 %v7_106e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_106e4, label %.thread557, label %.thread558

.thread558:                                       ; preds = %dec_label_pc_106e0
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10714

.thread557:                                       ; preds = %dec_label_pc_106e0
  store i32 %.1982, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_106f0 = icmp eq i1 %v7_10020, false
  store i1 %v2_106f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_106f0, label %dec_label_pc_10714, label %dec_label_pc_106f8

dec_label_pc_106f8:                               ; preds = %.thread557
  %v2_106f8 = icmp ugt i32 %v1_f18c, 38
  store i1 %v2_106f8, i1* %cpsr_c.global-to-local, align 1
  %v7_106f8 = icmp eq i32 %v1_f18c, 39
  store i1 %v7_106f8, i1* %cpsr_z.global-to-local, align 1
  %v2_106fc = xor i1 %v2_106f8, true
  %v3_106fc = or i1 %v7_106f8, %v2_106fc
  br i1 %v3_106fc, label %bb1804, label %bb1805

bb1804:                                           ; preds = %dec_label_pc_106f8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1805

bb1805:                                           ; preds = %dec_label_pc_106f8, %bb1804
  %v0_1070c.pr972 = phi i32 [ %.1982, %dec_label_pc_106f8 ], [ 0, %bb1804 ]
  %v2_10700 = xor i1 %v7_106f8, true
  %v3_10700 = and i1 %v2_106f8, %v2_10700
  br i1 %v3_10700, label %bb1806, label %bb1807

bb1806:                                           ; preds = %bb1805
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1807

bb1807:                                           ; preds = %bb1805, %bb1806
  %v0_1070c.pr = phi i32 [ %v0_1070c.pr972, %bb1805 ], [ 1, %bb1806 ]
  %v2_10704 = icmp ugt i32 %v1_f18c, 41
  store i1 %v2_10704, i1* %cpsr_c.global-to-local, align 1
  %v7_10704 = icmp eq i32 %v1_f18c, 42
  store i1 %v7_10704, i1* %cpsr_z.global-to-local, align 1
  %v2_10708 = xor i1 %v7_10704, true
  %v3_10708 = and i1 %v2_10704, %v2_10708
  br i1 %v3_10708, label %.thread562, label %bb1808

.thread562:                                       ; preds = %bb1807
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10714

bb1808:                                           ; preds = %bb1807
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1070c = icmp eq i32 %v0_1070c.pr, 0
  store i1 %v2_1070c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1070c, label %dec_label_pc_10714, label %dec_label_pc_f170

dec_label_pc_10714:                               ; preds = %.thread562, %.thread558, %bb1808, %.thread557
  store i32 %.1982, i32* %r3.global-to-local, align 4
  %v2_10718 = icmp ugt i32 %v1_f188, 92
  store i1 %v2_10718, i1* %cpsr_c.global-to-local, align 1
  %v7_10718 = icmp eq i32 %v1_f188, 93
  store i1 %v7_10718, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10718, label %.thread565, label %.thread566

.thread566:                                       ; preds = %dec_label_pc_10714
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10748

.thread565:                                       ; preds = %dec_label_pc_10714
  store i32 %.1982, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10724 = icmp eq i1 %v7_10020, false
  store i1 %v2_10724, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10724, label %dec_label_pc_10748, label %dec_label_pc_1072c

dec_label_pc_1072c:                               ; preds = %.thread565
  %v2_1072c = icmp ugt i32 %v1_f18c, 190
  store i1 %v2_1072c, i1* %cpsr_c.global-to-local, align 1
  %v7_1072c = icmp eq i32 %v1_f18c, 191
  store i1 %v7_1072c, i1* %cpsr_z.global-to-local, align 1
  %v2_10730 = xor i1 %v2_1072c, true
  %v3_10730 = or i1 %v7_1072c, %v2_10730
  br i1 %v3_10730, label %bb1809, label %bb1810

bb1809:                                           ; preds = %dec_label_pc_1072c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1810

bb1810:                                           ; preds = %dec_label_pc_1072c, %bb1809
  %v0_10740.pr975 = phi i32 [ %.1982, %dec_label_pc_1072c ], [ 0, %bb1809 ]
  %v2_10734 = xor i1 %v7_1072c, true
  %v3_10734 = and i1 %v2_1072c, %v2_10734
  br i1 %v3_10734, label %bb1811, label %bb1812

bb1811:                                           ; preds = %bb1810
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1812

bb1812:                                           ; preds = %bb1810, %bb1811
  %v0_10740.pr = phi i32 [ %v0_10740.pr975, %bb1810 ], [ 1, %bb1811 ]
  %v2_10738 = icmp ugt i32 %v1_f18c, 191
  store i1 %v2_10738, i1* %cpsr_c.global-to-local, align 1
  %v7_10738 = icmp eq i32 %v1_f18c, 192
  store i1 %v7_10738, i1* %cpsr_z.global-to-local, align 1
  %v2_1073c = xor i1 %v7_10738, true
  %v3_1073c = and i1 %v2_10738, %v2_1073c
  br i1 %v3_1073c, label %.thread570, label %bb1813

.thread570:                                       ; preds = %bb1812
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10748

bb1813:                                           ; preds = %bb1812
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10740 = icmp eq i32 %v0_10740.pr, 0
  store i1 %v2_10740, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10740, label %dec_label_pc_10748, label %dec_label_pc_f170

dec_label_pc_10748:                               ; preds = %.thread570, %.thread566, %bb1813, %.thread565
  store i32 %.1983, i32* %r3.global-to-local, align 4
  %v2_1074c = icmp ugt i32 %v1_f188, 70
  store i1 %v2_1074c, i1* %cpsr_c.global-to-local, align 1
  %v7_1074c = icmp eq i32 %v1_f188, 71
  store i1 %v7_1074c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1074c, label %.thread573, label %.thread574

.thread574:                                       ; preds = %dec_label_pc_10748
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1076c

.thread573:                                       ; preds = %dec_label_pc_10748
  store i32 %.1983, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10758 = icmp eq i1 %v7_1005c, false
  store i1 %v2_10758, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10758, label %dec_label_pc_1076c, label %dec_label_pc_10760

dec_label_pc_10760:                               ; preds = %.thread573
  %v2_10760 = icmp eq i32 %v1_f18c, 255
  store i1 %v2_10760, i1* %cpsr_c.global-to-local, align 1
  %v7_10760 = icmp eq i32 %v1_f18c, 255
  store i1 %v7_10760, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10760, label %dec_label_pc_1076c, label %bb1814

bb1814:                                           ; preds = %dec_label_pc_10760
  %v3_10764 = icmp ugt i32 %v1_f18c, 238
  store i1 %v3_10764, i1* %cpsr_c.global-to-local, align 1
  %v8_10764 = icmp eq i32 %v1_f18c, 239
  store i1 %v8_10764, i1* %cpsr_z.global-to-local, align 1
  %v2_10768 = xor i1 %v8_10764, true
  %v3_10768 = and i1 %v3_10764, %v2_10768
  br i1 %v3_10768, label %dec_label_pc_f170, label %dec_label_pc_1076c

dec_label_pc_1076c:                               ; preds = %dec_label_pc_10760, %.thread574, %bb1814, %.thread573
  %v0_1078c.pr981 = phi i32 [ 0, %.thread574 ], [ %.1983, %bb1814 ], [ 0, %.thread573 ], [ %.1983, %dec_label_pc_10760 ]
  %v2_1076c = icmp ugt i32 %v1_f174, 97
  store i1 %v2_1076c, i1* %cpsr_c.global-to-local, align 1
  %v7_1076c = icmp eq i32 %v1_f174, 98
  store i1 %v7_1076c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1076c, label %bb1815, label %dec_label_pc_10794

bb1815:                                           ; preds = %dec_label_pc_1076c
  %v3_10770 = icmp ugt i32 %v1_f188, 141
  store i1 %v3_10770, i1* %cpsr_c.global-to-local, align 1
  %v8_10770 = icmp eq i32 %v1_f188, 142
  store i1 %v8_10770, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10770, label %dec_label_pc_10778, label %dec_label_pc_10794

dec_label_pc_10778:                               ; preds = %bb1815
  %v2_10778 = icmp ugt i32 %v1_f18c, 206
  store i1 %v2_10778, i1* %cpsr_c.global-to-local, align 1
  %v7_10778 = icmp eq i32 %v1_f18c, 207
  store i1 %v7_10778, i1* %cpsr_z.global-to-local, align 1
  %v2_1077c = xor i1 %v2_10778, true
  %v3_1077c = or i1 %v7_10778, %v2_1077c
  br i1 %v3_1077c, label %bb1816, label %bb1817

bb1816:                                           ; preds = %dec_label_pc_10778
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1817

bb1817:                                           ; preds = %dec_label_pc_10778, %bb1816
  %v0_1078c.pr980 = phi i32 [ %v0_1078c.pr981, %dec_label_pc_10778 ], [ 0, %bb1816 ]
  %v2_10780 = xor i1 %v7_10778, true
  %v3_10780 = and i1 %v2_10778, %v2_10780
  br i1 %v3_10780, label %bb1818, label %bb1819

bb1818:                                           ; preds = %bb1817
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1819

bb1819:                                           ; preds = %bb1817, %bb1818
  %v0_1078c.pr = phi i32 [ %v0_1078c.pr980, %bb1817 ], [ 1, %bb1818 ]
  %v2_10784 = icmp ugt i32 %v1_f18c, 221
  store i1 %v2_10784, i1* %cpsr_c.global-to-local, align 1
  %v7_10784 = icmp eq i32 %v1_f18c, 222
  store i1 %v7_10784, i1* %cpsr_z.global-to-local, align 1
  %v2_10788 = xor i1 %v7_10784, true
  %v3_10788 = and i1 %v2_10784, %v2_10788
  br i1 %v3_10788, label %.thread579, label %bb1820

.thread579:                                       ; preds = %bb1819
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10794

bb1820:                                           ; preds = %bb1819
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1078c = icmp eq i32 %v0_1078c.pr, 0
  store i1 %v2_1078c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1078c, label %dec_label_pc_10794, label %dec_label_pc_f170

dec_label_pc_10794:                               ; preds = %dec_label_pc_1076c, %.thread579, %bb1820, %bb1815
  store i32 %.1976, i32* %r3.global-to-local, align 4
  %v2_10798 = icmp ugt i32 %v1_f188, 18
  store i1 %v2_10798, i1* %cpsr_c.global-to-local, align 1
  %v7_10798 = icmp eq i32 %v1_f188, 19
  store i1 %v7_10798, i1* %cpsr_z.global-to-local, align 1
  %v2_1079c = xor i1 %v2_10798, true
  %v3_1079c = or i1 %v7_10798, %v2_1079c
  br i1 %v3_1079c, label %bb1821, label %bb1822

bb1821:                                           ; preds = %dec_label_pc_10794
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1822

bb1822:                                           ; preds = %dec_label_pc_10794, %bb1821
  %v4_107a0 = phi i32 [ %.1976, %dec_label_pc_10794 ], [ 0, %bb1821 ]
  %v2_107a0 = xor i1 %v7_10798, true
  %v3_107a0 = and i1 %v2_10798, %v2_107a0
  br i1 %v3_107a0, label %bb1823, label %thread-pre-split582

bb1823:                                           ; preds = %bb1822
  store i32 %v4_107a0, i32* %r3.global-to-local, align 4
  br label %thread-pre-split582

thread-pre-split582:                              ; preds = %bb1822, %bb1823
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_107a4 = icmp eq i32 %v4_107a0, 0
  store i1 %v2_107a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_107a4, label %dec_label_pc_107b4, label %dec_label_pc_107ac

dec_label_pc_107ac:                               ; preds = %thread-pre-split582
  %v2_107ac = icmp ugt i32 %v1_f188, 22
  store i1 %v2_107ac, i1* %cpsr_c.global-to-local, align 1
  %v7_107ac = icmp eq i32 %v1_f188, 23
  store i1 %v7_107ac, i1* %cpsr_z.global-to-local, align 1
  %v2_107b0 = xor i1 %v2_107ac, true
  %v3_107b0 = or i1 %v7_107ac, %v2_107b0
  br i1 %v3_107b0, label %dec_label_pc_f170, label %dec_label_pc_107b4

dec_label_pc_107b4:                               ; preds = %dec_label_pc_107ac, %thread-pre-split582
  %v7_107b4 = icmp eq i32 %v1_f174, 35
  %.1989 = zext i1 %v7_107b4 to i32
  store i32 %.1989, i32* %r3.global-to-local, align 4
  store i1 %v2_f468, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f468, i1* %cpsr_z.global-to-local, align 1
  %v2_107c4 = xor i1 %v2_f468, true
  %v3_107c4 = or i1 %v7_f468, %v2_107c4
  br i1 %v3_107c4, label %.thread585, label %bb1826

.thread585:                                       ; preds = %dec_label_pc_107b4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_107d8

bb1826:                                           ; preds = %dec_label_pc_107b4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_107c8 = icmp eq i1 %v7_107b4, false
  store i1 %v2_107c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_107c8, label %dec_label_pc_107d8, label %dec_label_pc_107d0

dec_label_pc_107d0:                               ; preds = %bb1826
  %v2_107d0 = icmp ugt i32 %v1_f188, 181
  store i1 %v2_107d0, i1* %cpsr_c.global-to-local, align 1
  %v7_107d0 = icmp eq i32 %v1_f188, 182
  store i1 %v7_107d0, i1* %cpsr_z.global-to-local, align 1
  %v2_107d4 = xor i1 %v2_107d0, true
  %v3_107d4 = or i1 %v7_107d0, %v2_107d4
  br i1 %v3_107d4, label %dec_label_pc_f170, label %dec_label_pc_107d8

dec_label_pc_107d8:                               ; preds = %.thread585, %dec_label_pc_107d0, %bb1826
  %v2_107dc = icmp ugt i32 %v1_f174, 51
  store i1 %v2_107dc, i1* %cpsr_c.global-to-local, align 1
  %v7_107dc = icmp eq i32 %v1_f174, 52
  %.1990 = zext i1 %v7_107dc to i32
  store i32 %.1990, i32* %r3.global-to-local, align 4
  %v2_107e8 = and i32 %.1990, %v0_107e8
  %v4_107e8 = icmp eq i32 %v2_107e8, 0
  store i1 %v4_107e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_107e8, label %dec_label_pc_107f8, label %dec_label_pc_107f0

dec_label_pc_107f0:                               ; preds = %dec_label_pc_107d8
  store i1 %v2_10220, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_10220, i1* %cpsr_z.global-to-local, align 1
  %v2_107f4 = xor i1 %v2_10220, true
  %v3_107f4 = or i1 %v7_10220, %v2_107f4
  br i1 %v3_107f4, label %dec_label_pc_f170, label %dec_label_pc_107f8.thread

dec_label_pc_107f8.thread:                        ; preds = %dec_label_pc_107f0
  store i1 %v2_10220, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_10220, i1* %cpsr_z.global-to-local, align 1
  br label %bb1830

dec_label_pc_107f8:                               ; preds = %dec_label_pc_107d8
  %.pre2078 = xor i1 %v2_10220, true
  %.pre2079 = or i1 %v7_10220, %.pre2078
  store i1 %v2_10220, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_10220, i1* %cpsr_z.global-to-local, align 1
  br i1 %.pre2079, label %bb1829, label %bb1830

bb1829:                                           ; preds = %dec_label_pc_107f8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1830

bb1830:                                           ; preds = %dec_label_pc_107f8.thread, %dec_label_pc_107f8, %bb1829
  %v4_10800 = phi i32 [ %.1990, %dec_label_pc_107f8 ], [ 0, %bb1829 ], [ %.1990, %dec_label_pc_107f8.thread ]
  %v3_107fc.pre-phi2081 = phi i1 [ false, %dec_label_pc_107f8 ], [ true, %bb1829 ], [ false, %dec_label_pc_107f8.thread ]
  %v2_10800 = xor i1 %v7_10220, true
  %v3_10800 = and i1 %v2_10220, %v2_10800
  br i1 %v3_10800, label %bb1831, label %thread-pre-split589

bb1831:                                           ; preds = %bb1830
  store i32 %v4_10800, i32* %r3.global-to-local, align 4
  br label %thread-pre-split589

thread-pre-split589:                              ; preds = %bb1830, %bb1831
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10804 = icmp eq i32 %v4_10800, 0
  store i1 %v2_10804, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10804, label %dec_label_pc_10814, label %dec_label_pc_1080c

dec_label_pc_1080c:                               ; preds = %thread-pre-split589
  %v2_1080c = icmp eq i32 %v1_f188, 255
  store i1 %v2_1080c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_1040c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1040c, label %dec_label_pc_10814, label %dec_label_pc_f170

dec_label_pc_10814:                               ; preds = %dec_label_pc_1080c, %thread-pre-split589
  %v2_10818 = icmp ugt i32 %v1_f174, 53
  store i1 %v2_10818, i1* %cpsr_c.global-to-local, align 1
  %v7_10818 = icmp eq i32 %v1_f174, 54
  %.1991 = zext i1 %v7_10818 to i32
  store i32 %.1991, i32* %r3.global-to-local, align 4
  %v2_10824 = and i32 %.1991, %v0_10824
  %v4_10824 = icmp eq i32 %v2_10824, 0
  store i1 %v4_10824, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_10824, label %dec_label_pc_10834, label %dec_label_pc_1082c

dec_label_pc_1082c:                               ; preds = %dec_label_pc_10814
  store i1 %v2_10220, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_10220, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_107fc.pre-phi2081, label %dec_label_pc_f170, label %dec_label_pc_10834

dec_label_pc_10834:                               ; preds = %dec_label_pc_1082c, %dec_label_pc_10814
  %v2_10834 = icmp ugt i32 %v1_f188, 142
  store i1 %v2_10834, i1* %cpsr_c.global-to-local, align 1
  %v7_10834 = icmp eq i32 %v1_f188, 143
  store i1 %v7_10834, i1* %cpsr_z.global-to-local, align 1
  %v2_10838 = xor i1 %v2_10834, true
  %v3_10838 = or i1 %v7_10834, %v2_10838
  br i1 %v3_10838, label %bb1834, label %bb1835

bb1834:                                           ; preds = %dec_label_pc_10834
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1835

bb1835:                                           ; preds = %dec_label_pc_10834, %bb1834
  %v4_1083c = phi i32 [ %.1991, %dec_label_pc_10834 ], [ 0, %bb1834 ]
  %v2_1083c = xor i1 %v7_10834, true
  %v3_1083c = and i1 %v2_10834, %v2_1083c
  br i1 %v3_1083c, label %bb1836, label %thread-pre-split591

bb1836:                                           ; preds = %bb1835
  store i32 %v4_1083c, i32* %r3.global-to-local, align 4
  br label %thread-pre-split591

thread-pre-split591:                              ; preds = %bb1835, %bb1836
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10840 = icmp eq i32 %v4_1083c, 0
  store i1 %v2_10840, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10840, label %dec_label_pc_10850, label %dec_label_pc_10848

dec_label_pc_10848:                               ; preds = %thread-pre-split591
  %v2_10848 = icmp eq i32 %v1_f188, 255
  store i1 %v2_10848, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_1040c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1040c, label %dec_label_pc_10850, label %dec_label_pc_f170

dec_label_pc_10850:                               ; preds = %dec_label_pc_10848, %thread-pre-split591
  %v7_10850 = icmp eq i32 %v1_f174, 13
  %.1992 = zext i1 %v7_10850 to i32
  %v2_1085c = icmp ugt i32 %v1_f188, 50
  store i1 %v2_1085c, i1* %cpsr_c.global-to-local, align 1
  %v7_1085c = icmp eq i32 %v1_f188, 51
  store i1 %v7_1085c, i1* %cpsr_z.global-to-local, align 1
  %v2_10860 = xor i1 %v2_1085c, true
  %v3_10860 = or i1 %v7_1085c, %v2_10860
  br i1 %v3_10860, label %bb1839, label %bb1840

bb1839:                                           ; preds = %dec_label_pc_10850
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1840

bb1840:                                           ; preds = %dec_label_pc_10850, %bb1839
  %v0_10868.pr = phi i32 [ %v4_1083c, %dec_label_pc_10850 ], [ 0, %bb1839 ]
  %v2_10864 = xor i1 %v7_1085c, true
  %v3_10864 = and i1 %v2_1085c, %v2_10864
  br i1 %v3_10864, label %bb1841, label %thread-pre-split593

bb1841:                                           ; preds = %bb1840
  store i32 %.1992, i32* %r3.global-to-local, align 4
  br label %thread-pre-split593

thread-pre-split593:                              ; preds = %bb1840, %bb1841
  %v0_10868 = phi i32 [ %.1992, %bb1841 ], [ %v0_10868.pr, %bb1840 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10868 = icmp eq i32 %v0_10868, 0
  store i1 %v2_10868, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10868, label %dec_label_pc_10878, label %dec_label_pc_10870

dec_label_pc_10870:                               ; preds = %thread-pre-split593
  store i1 %v2_f4f0, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f4f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_fbb0, label %dec_label_pc_f170, label %dec_label_pc_10878

dec_label_pc_10878:                               ; preds = %dec_label_pc_10870, %thread-pre-split593
  store i1 %v2_10544, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_10544, i1* %cpsr_z.global-to-local, align 1
  %v2_1087c = xor i1 %v2_10544, true
  %v3_1087c = or i1 %v7_10544, %v2_1087c
  br i1 %v3_1087c, label %bb1842, label %bb1843

bb1842:                                           ; preds = %dec_label_pc_10878
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1843

bb1843:                                           ; preds = %dec_label_pc_10878, %bb1842
  %v0_10884.pr = phi i32 [ %v0_10868, %dec_label_pc_10878 ], [ 0, %bb1842 ]
  %v2_10880 = xor i1 %v7_10544, true
  %v3_10880 = and i1 %v2_10544, %v2_10880
  br i1 %v3_10880, label %bb1844, label %thread-pre-split594

bb1844:                                           ; preds = %bb1843
  store i32 %.1992, i32* %r3.global-to-local, align 4
  br label %thread-pre-split594

thread-pre-split594:                              ; preds = %bb1843, %bb1844
  %v0_10884 = phi i32 [ %.1992, %bb1844 ], [ %v0_10884.pr, %bb1843 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10884 = icmp eq i32 %v0_10884, 0
  store i1 %v2_10884, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10884, label %dec_label_pc_10894, label %dec_label_pc_1088c

dec_label_pc_1088c:                               ; preds = %thread-pre-split594
  store i1 %v2_f29c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f29c, i1* %cpsr_z.global-to-local, align 1
  %v2_10890 = xor i1 %v2_f29c, true
  %v3_10890 = or i1 %v7_f29c, %v2_10890
  br i1 %v3_10890, label %dec_label_pc_f170, label %dec_label_pc_10894

dec_label_pc_10894:                               ; preds = %dec_label_pc_1088c, %thread-pre-split594
  %v2_10894 = icmp ugt i32 %v1_f188, 171
  store i1 %v2_10894, i1* %cpsr_c.global-to-local, align 1
  %v7_10894 = icmp eq i32 %v1_f188, 172
  store i1 %v7_10894, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10894, label %.thread595, label %.thread596

.thread596:                                       ; preds = %dec_label_pc_10894
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_108a8

.thread595:                                       ; preds = %dec_label_pc_10894
  store i32 %.1970, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_108a0 = icmp eq i1 %v7_fad8, false
  store i1 %v2_108a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_108a0, label %dec_label_pc_108a8, label %dec_label_pc_f170

dec_label_pc_108a8:                               ; preds = %.thread596, %.thread595
  %v2_108a8 = icmp ugt i32 %v1_f188, 13
  store i1 %v2_108a8, i1* %cpsr_c.global-to-local, align 1
  %v7_108a8 = icmp eq i32 %v1_f188, 14
  store i1 %v7_108a8, i1* %cpsr_z.global-to-local, align 1
  %v2_108ac = xor i1 %v2_108a8, true
  %v3_108ac = or i1 %v7_108a8, %v2_108ac
  br i1 %v3_108ac, label %bb1845, label %bb1846

bb1845:                                           ; preds = %dec_label_pc_108a8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1846

bb1846:                                           ; preds = %dec_label_pc_108a8, %bb1845
  %v2_108b0 = xor i1 %v7_108a8, true
  %v3_108b0 = and i1 %v2_108a8, %v2_108b0
  br i1 %v3_108b0, label %thread-pre-split599, label %thread-pre-split599.thread

thread-pre-split599.thread:                       ; preds = %bb1846
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10d04

thread-pre-split599:                              ; preds = %bb1846
  store i32 %.1987, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_108b4 = icmp eq i1 %v7_103f8, false
  store i1 %v2_108b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_108b4, label %dec_label_pc_10d04, label %dec_label_pc_108bc

dec_label_pc_108bc:                               ; preds = %thread-pre-split599
  %v2_108bc = icmp eq i32 %v1_f188, 255
  store i1 %v2_108bc, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_1040c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1040c, label %dec_label_pc_108c4, label %dec_label_pc_f170

dec_label_pc_108c4:                               ; preds = %dec_label_pc_10d04, %bb1880, %bb1878, %dec_label_pc_108bc
  %v2_108c4 = icmp ugt i32 %v1_f174, 211
  store i1 %v2_108c4, i1* %cpsr_c.global-to-local, align 1
  %v7_108c4 = icmp eq i32 %v1_f174, 212
  store i1 %v7_108c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_108c4, label %.thread600, label %.thread601

.thread601:                                       ; preds = %dec_label_pc_108c4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_108e4

.thread600:                                       ; preds = %dec_label_pc_108c4
  store i32 %.1977, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_108d0 = icmp eq i1 %v7_fd48, false
  store i1 %v2_108d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_108d0, label %dec_label_pc_108e4, label %dec_label_pc_108d8

dec_label_pc_108d8:                               ; preds = %.thread600
  %v2_108d8 = icmp eq i32 %v1_f18c, 255
  store i1 %v2_108d8, i1* %cpsr_c.global-to-local, align 1
  %v7_108d8 = icmp eq i32 %v1_f18c, 255
  store i1 %v7_108d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_108d8, label %dec_label_pc_108e4, label %bb1847

bb1847:                                           ; preds = %dec_label_pc_108d8
  %v3_108dc = icmp ugt i32 %v1_f18c, 222
  store i1 %v3_108dc, i1* %cpsr_c.global-to-local, align 1
  %v8_108dc = icmp eq i32 %v1_f18c, 223
  store i1 %v8_108dc, i1* %cpsr_z.global-to-local, align 1
  %v2_108e0 = xor i1 %v8_108dc, true
  %v3_108e0 = and i1 %v3_108dc, %v2_108e0
  br i1 %v3_108e0, label %dec_label_pc_f170, label %dec_label_pc_108e4

dec_label_pc_108e4:                               ; preds = %dec_label_pc_108d8, %.thread601, %bb1847, %.thread600
  store i32 %.1950, i32* %r3.global-to-local, align 4
  %v2_108e8 = icmp ugt i32 %v1_f174, 88
  store i1 %v2_108e8, i1* %cpsr_c.global-to-local, align 1
  %v7_108e8 = icmp eq i32 %v1_f174, 89
  store i1 %v7_108e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_108e8, label %.thread604, label %.thread605

.thread605:                                       ; preds = %dec_label_pc_108e4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10918

.thread604:                                       ; preds = %dec_label_pc_108e4
  store i32 %.1950, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_108f4 = icmp eq i1 %v7_f50c, false
  store i1 %v2_108f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_108f4, label %dec_label_pc_10918, label %dec_label_pc_108fc

dec_label_pc_108fc:                               ; preds = %.thread604
  %v2_108fc = icmp ugt i32 %v1_f18c, 94
  store i1 %v2_108fc, i1* %cpsr_c.global-to-local, align 1
  %v7_108fc = icmp eq i32 %v1_f18c, 95
  store i1 %v7_108fc, i1* %cpsr_z.global-to-local, align 1
  %v2_10900 = xor i1 %v2_108fc, true
  %v3_10900 = or i1 %v7_108fc, %v2_10900
  br i1 %v3_10900, label %bb1848, label %bb1849

bb1848:                                           ; preds = %dec_label_pc_108fc
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1849

bb1849:                                           ; preds = %dec_label_pc_108fc, %bb1848
  %v0_10910.pr998 = phi i32 [ %.1950, %dec_label_pc_108fc ], [ 0, %bb1848 ]
  %v2_10904 = xor i1 %v7_108fc, true
  %v3_10904 = and i1 %v2_108fc, %v2_10904
  br i1 %v3_10904, label %bb1850, label %bb1851

bb1850:                                           ; preds = %bb1849
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1851

bb1851:                                           ; preds = %bb1849, %bb1850
  %v0_10910.pr = phi i32 [ %v0_10910.pr998, %bb1849 ], [ 1, %bb1850 ]
  %v2_10908 = icmp ugt i32 %v1_f18c, 95
  store i1 %v2_10908, i1* %cpsr_c.global-to-local, align 1
  %v7_10908 = icmp eq i32 %v1_f18c, 96
  store i1 %v7_10908, i1* %cpsr_z.global-to-local, align 1
  %v2_1090c = xor i1 %v7_10908, true
  %v3_1090c = and i1 %v2_10908, %v2_1090c
  br i1 %v3_1090c, label %.thread609, label %bb1852

.thread609:                                       ; preds = %bb1851
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10918

bb1852:                                           ; preds = %bb1851
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10910 = icmp eq i32 %v0_10910.pr, 0
  store i1 %v2_10910, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10910, label %dec_label_pc_10918, label %dec_label_pc_f170

dec_label_pc_10918:                               ; preds = %.thread609, %.thread605, %bb1852, %.thread604
  %v7_10918 = icmp eq i32 %v1_f174, 219
  %.1993 = zext i1 %v7_10918 to i32
  store i32 %.1993, i32* %r3.global-to-local, align 4
  %v2_10924 = icmp ugt i32 %v1_f188, 214
  store i1 %v2_10924, i1* %cpsr_c.global-to-local, align 1
  %v7_10924 = icmp eq i32 %v1_f188, 215
  store i1 %v7_10924, i1* %cpsr_z.global-to-local, align 1
  %v2_10928 = xor i1 %v2_10924, true
  %v3_10928 = or i1 %v7_10924, %v2_10928
  br i1 %v3_10928, label %.thread614, label %bb1855

.thread614:                                       ; preds = %dec_label_pc_10918
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1093c

bb1855:                                           ; preds = %dec_label_pc_10918
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1092c = icmp eq i1 %v7_10918, false
  store i1 %v2_1092c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1092c, label %dec_label_pc_1093c, label %dec_label_pc_10934

dec_label_pc_10934:                               ; preds = %bb1855
  %v2_10934 = icmp ugt i32 %v1_f188, 229
  store i1 %v2_10934, i1* %cpsr_c.global-to-local, align 1
  %v7_10934 = icmp eq i32 %v1_f188, 230
  store i1 %v7_10934, i1* %cpsr_z.global-to-local, align 1
  %v2_10938 = xor i1 %v2_10934, true
  %v3_10938 = or i1 %v7_10934, %v2_10938
  br i1 %v3_10938, label %dec_label_pc_f170, label %dec_label_pc_1093c

dec_label_pc_1093c:                               ; preds = %.thread614, %dec_label_pc_10934, %bb1855
  %v7_1093c = icmp eq i32 %v1_f174, 23
  %.1994 = zext i1 %v7_1093c to i32
  store i32 %.1994, i32* %r3.global-to-local, align 4
  store i1 %v2_10718, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_10718, i1* %cpsr_z.global-to-local, align 1
  %v2_1094c = xor i1 %v2_10718, true
  %v3_1094c = or i1 %v7_10718, %v2_1094c
  br i1 %v3_1094c, label %.thread619, label %bb1858

.thread619:                                       ; preds = %dec_label_pc_1093c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10960

bb1858:                                           ; preds = %dec_label_pc_1093c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10950 = icmp eq i1 %v7_1093c, false
  store i1 %v2_10950, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10950, label %dec_label_pc_10960, label %dec_label_pc_10958

dec_label_pc_10958:                               ; preds = %bb1858
  %v2_10958 = icmp ugt i32 %v1_f188, 107
  store i1 %v2_10958, i1* %cpsr_c.global-to-local, align 1
  %v7_10958 = icmp eq i32 %v1_f188, 108
  store i1 %v7_10958, i1* %cpsr_z.global-to-local, align 1
  %v2_1095c = xor i1 %v2_10958, true
  %v3_1095c = or i1 %v7_10958, %v2_1095c
  br i1 %v3_1095c, label %dec_label_pc_f170, label %dec_label_pc_10960

dec_label_pc_10960:                               ; preds = %.thread619, %dec_label_pc_10958, %bb1858
  store i32 %.1975, i32* %r3.global-to-local, align 4
  store i1 %v2_100e0, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_100e0, i1* %cpsr_z.global-to-local, align 1
  %v2_10968 = xor i1 %v2_100e0, true
  %v3_10968 = or i1 %v7_100e0, %v2_10968
  br i1 %v3_10968, label %bb1859, label %bb1860

bb1859:                                           ; preds = %dec_label_pc_10960
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1860

bb1860:                                           ; preds = %dec_label_pc_10960, %bb1859
  %v4_1096c = phi i32 [ %.1975, %dec_label_pc_10960 ], [ 0, %bb1859 ]
  %v2_1096c = xor i1 %v7_100e0, true
  %v3_1096c = and i1 %v2_100e0, %v2_1096c
  br i1 %v3_1096c, label %bb1861, label %thread-pre-split622

bb1861:                                           ; preds = %bb1860
  store i32 %v4_1096c, i32* %r3.global-to-local, align 4
  br label %thread-pre-split622

thread-pre-split622:                              ; preds = %bb1860, %bb1861
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10970 = icmp eq i32 %v4_1096c, 0
  store i1 %v2_10970, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10970, label %dec_label_pc_10980, label %dec_label_pc_10978

dec_label_pc_10978:                               ; preds = %thread-pre-split622
  store i1 %v2_fc74, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_fc74, i1* %cpsr_z.global-to-local, align 1
  %v2_1097c = xor i1 %v2_fc74, true
  %v3_1097c = or i1 %v7_fc74, %v2_1097c
  br i1 %v3_1097c, label %dec_label_pc_f170, label %dec_label_pc_10980

dec_label_pc_10980:                               ; preds = %dec_label_pc_10978, %thread-pre-split622
  %v7_10980 = icmp eq i32 %v1_f174, 106
  %.1995 = zext i1 %v7_10980 to i32
  store i32 %.1995, i32* %r3.global-to-local, align 4
  store i1 %v2_104c8, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_104c8, i1* %cpsr_z.global-to-local, align 1
  %v2_10990 = xor i1 %v2_104c8, true
  %v3_10990 = or i1 %v7_104c8, %v2_10990
  br i1 %v3_10990, label %.thread625, label %bb1864

.thread625:                                       ; preds = %dec_label_pc_10980
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_109a4

bb1864:                                           ; preds = %dec_label_pc_10980
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10994 = icmp eq i1 %v7_10980, false
  store i1 %v2_10994, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10994, label %dec_label_pc_109a4, label %dec_label_pc_1099c

dec_label_pc_1099c:                               ; preds = %bb1864
  %v2_1099c = icmp ugt i32 %v1_f188, 187
  store i1 %v2_1099c, i1* %cpsr_c.global-to-local, align 1
  %v7_1099c = icmp eq i32 %v1_f188, 188
  store i1 %v7_1099c, i1* %cpsr_z.global-to-local, align 1
  %v2_109a0 = xor i1 %v2_1099c, true
  %v3_109a0 = or i1 %v7_1099c, %v2_109a0
  br i1 %v3_109a0, label %dec_label_pc_f170, label %dec_label_pc_109a4

dec_label_pc_109a4:                               ; preds = %.thread625, %dec_label_pc_1099c, %bb1864
  %v7_109a4 = icmp eq i32 %v1_f174, 34
  %.1996 = zext i1 %v7_109a4 to i32
  store i32 %.1996, i32* %r3.global-to-local, align 4
  %v2_109b0 = icmp ugt i32 %v1_f188, 243
  store i1 %v2_109b0, i1* %cpsr_c.global-to-local, align 1
  %v7_109b0 = icmp eq i32 %v1_f188, 244
  store i1 %v7_109b0, i1* %cpsr_z.global-to-local, align 1
  %v2_109b4 = xor i1 %v2_109b0, true
  %v3_109b4 = or i1 %v7_109b0, %v2_109b4
  br i1 %v3_109b4, label %.thread630, label %bb1867

.thread630:                                       ; preds = %dec_label_pc_109a4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_109c8

bb1867:                                           ; preds = %dec_label_pc_109a4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_109b8 = icmp eq i1 %v7_109a4, false
  store i1 %v2_109b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_109b8, label %dec_label_pc_109c8, label %dec_label_pc_109c0

dec_label_pc_109c0:                               ; preds = %bb1867
  %v2_109c0 = icmp eq i32 %v1_f188, 255
  store i1 %v2_109c0, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_1040c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1040c, label %dec_label_pc_109c8, label %dec_label_pc_f170

dec_label_pc_109c8:                               ; preds = %.thread630, %dec_label_pc_109c0, %bb1867
  %v7_109c8 = icmp eq i32 %v1_f174, 87
  %.1997 = zext i1 %v7_109c8 to i32
  store i32 %.1997, i32* %r3.global-to-local, align 4
  store i1 %v2_f414, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f414, i1* %cpsr_z.global-to-local, align 1
  %v2_109d8 = xor i1 %v2_f414, true
  %v3_109d8 = or i1 %v7_f414, %v2_109d8
  br i1 %v3_109d8, label %.thread635, label %bb1870

.thread635:                                       ; preds = %dec_label_pc_109c8
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_109ec

bb1870:                                           ; preds = %dec_label_pc_109c8
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_109dc = icmp eq i1 %v7_109c8, false
  store i1 %v2_109dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_109dc, label %dec_label_pc_109ec, label %dec_label_pc_109e4

dec_label_pc_109e4:                               ; preds = %bb1870
  store i1 %v2_f25c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f25c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_f88c, label %dec_label_pc_f170, label %dec_label_pc_109ec

dec_label_pc_109ec:                               ; preds = %.thread635, %dec_label_pc_109e4, %bb1870
  %v7_109ec = icmp eq i32 %v1_f174, 86
  %.1998 = zext i1 %v7_109ec to i32
  store i32 %.1998, i32* %r3.global-to-local, align 4
  %v2_109f8 = icmp ugt i32 %v1_f188, 207
  store i1 %v2_109f8, i1* %cpsr_c.global-to-local, align 1
  %v7_109f8 = icmp eq i32 %v1_f188, 208
  store i1 %v7_109f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_109f8, label %bb1873, label %dec_label_pc_10a04

bb1873:                                           ; preds = %dec_label_pc_109ec
  %v2_109ec = icmp ugt i32 %v1_f174, 85
  store i1 %v2_109ec, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_109ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_109ec, label %dec_label_pc_f170, label %dec_label_pc_10a04

dec_label_pc_10a04:                               ; preds = %dec_label_pc_109ec, %bb1873
  %v2_10a04 = and i32 %.1998, %.1986
  %v4_10a04 = icmp eq i32 %v2_10a04, 0
  store i1 %v4_10a04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_10a04, label %dec_label_pc_10a0c, label %dec_label_pc_f170

dec_label_pc_10a0c:                               ; preds = %dec_label_pc_10a04
  %v2_10a0c = icmp ugt i32 %v1_f174, 192
  store i1 %v2_10a0c, i1* %cpsr_c.global-to-local, align 1
  %v7_10a0c = icmp eq i32 %v1_f174, 193
  store i1 %v7_10a0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10a0c, label %bb1874, label %dec_label_pc_10a18

bb1874:                                           ; preds = %dec_label_pc_10a0c
  store i1 %v2_f8a0, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f8a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f8a0, label %dec_label_pc_f170, label %dec_label_pc_10a18

dec_label_pc_10a18:                               ; preds = %dec_label_pc_10a0c, %bb1874
  store i32 %v1_f8dc, i32* %r3.global-to-local, align 4
  %v2_10a1c = icmp ugt i32 %v1_f174, 119
  store i1 %v2_10a1c, i1* %cpsr_c.global-to-local, align 1
  %v7_10a1c = icmp eq i32 %v1_f174, 120
  store i1 %v7_10a1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10a1c, label %.thread641, label %.thread642

.thread642:                                       ; preds = %dec_label_pc_10a18
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10a38

.thread641:                                       ; preds = %dec_label_pc_10a18
  %v2_10a24 = urem i32 %v1_f8dc, 2
  store i32 %v2_10a24, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10a28 = icmp eq i32 %v2_10a24, 0
  store i1 %v2_10a28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10a28, label %dec_label_pc_10a38, label %dec_label_pc_10a30

dec_label_pc_10a30:                               ; preds = %.thread641
  %v2_10a30 = icmp ugt i32 %v1_f188, 106
  store i1 %v2_10a30, i1* %cpsr_c.global-to-local, align 1
  %v7_10a30 = icmp eq i32 %v1_f188, 107
  store i1 %v7_10a30, i1* %cpsr_z.global-to-local, align 1
  %v2_10a34 = xor i1 %v2_10a30, true
  %v3_10a34 = or i1 %v7_10a30, %v2_10a34
  br i1 %v3_10a34, label %dec_label_pc_f170, label %dec_label_pc_10a38

dec_label_pc_10a38:                               ; preds = %.thread642, %dec_label_pc_10a30, %.thread641
  store i32 %.1947, i32* %r3.global-to-local, align 4
  store i32 %.1973, i32* %r4.global-to-local, align 4
  %v2_10a40 = and i32 %.1947, %.1973
  %v4_10a40 = icmp eq i32 %v2_10a40, 0
  store i1 %v4_10a40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_10a40, label %dec_label_pc_10a48, label %dec_label_pc_f170

dec_label_pc_10a48:                               ; preds = %dec_label_pc_10a38
  %v2_10a48 = icmp ugt i32 %v1_f174, 77
  store i1 %v2_10a48, i1* %cpsr_c.global-to-local, align 1
  %v7_10a48 = icmp eq i32 %v1_f174, 78
  store i1 %v7_10a48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10a48, label %bb1875, label %dec_label_pc_10a5c

bb1875:                                           ; preds = %dec_label_pc_10a48
  %v3_10a4c = icmp ugt i32 %v1_f188, 45
  store i1 %v3_10a4c, i1* %cpsr_c.global-to-local, align 1
  %v8_10a4c = icmp eq i32 %v1_f188, 46
  store i1 %v8_10a4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10a4c, label %.thread647.thread, label %dec_label_pc_10a5c

.thread647.thread:                                ; preds = %bb1875
  store i32 1, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_f170

dec_label_pc_10a5c:                               ; preds = %bb1875, %dec_label_pc_10a48
  store i32 0, i32* %r8.global-to-local, align 4
  %v2_10a5c = icmp ugt i32 %v1_f174, 223
  store i1 %v2_10a5c, i1* %cpsr_c.global-to-local, align 1
  %v7_10a5c = icmp eq i32 %v1_f174, 224
  store i1 %v7_10a5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10a5c, label %dec_label_pc_f170, label %dec_label_pc_10a64

dec_label_pc_10a64:                               ; preds = %dec_label_pc_10a5c
  %v5_10a70 = call i32 @llvm.bswap.i32(i32 %v0_f170)
  store i32 %v5_10a70, i32* %r3.global-to-local, align 4
  %v3_10a7c = mul nuw i32 %v3_f190, 16777216
  %v1_10a74 = udiv i32 %v5_10a70, 256
  %v3_10a80 = and i32 %v1_10a74, 65280
  %v1_10a78 = mul i32 %v5_10a70, 256
  %v4_10a84 = and i32 %v1_10a78, 16711680
  %tmp2087 = and i32 %v0_f170, 32768
  %v3_10a88 = icmp ne i32 %tmp2087, 0
  store i1 %v3_10a88, i1* %cpsr_c.global-to-local, align 1
  %v4_10a88 = udiv i32 %v5_10a70, 16777216
  store i32 ptrtoint (i8** @global_var_1da04.141 to i32), i32* @r0, align 4
  %v5_10a88 = or i32 %v4_10a88, %v3_10a7c
  %v5_10a84 = or i32 %v5_10a88, %v4_10a84
  %v2_10a90 = or i32 %v5_10a84, %v3_10a80
  store i32 %v2_10a90, i32* %r2.global-to-local, align 4
  store i32 %v2_10a90, i32* @global_var_1da14.187, align 4
  store i32 20, i32* %r1.global-to-local, align 4
  store i8 0, i8* bitcast (i32* @global_var_1da0e.188 to i8*), align 4
  store i8 0, i8* bitcast (i32* @global_var_1da0f.189 to i8*), align 4
  %v3_10aa4 = call i32 @function_d0b8(i32 ptrtoint (i8** @global_var_1da04.141 to i32), i32 20)
  %sext = mul i32 %v3_10aa4, 16777216
  %v1_10aa8 = sdiv i32 %sext, 16777216
  store i32 ptrtoint (i8** @global_var_1da04.141 to i32), i32* %r0.global-to-local, align 4
  %v4_10ab4 = load i32, i32* @global_var_1da14.187, align 4
  %v1_10ab8 = and i32 %v1_10aa8, 128
  %v2_10ab8 = icmp ne i32 %v1_10ab8, 0
  store i1 %v2_10ab8, i1* %cpsr_c.global-to-local, align 1
  %v3_10ab8 = ashr i32 %sext, 31
  store i32 23, i32* %ip.global-to-local, align 4
  %v1_10ac0 = trunc i32 %v3_10ab8 to i8
  store i8 %v1_10ac0, i8* bitcast (i32* @global_var_1da0f.189 to i8*), align 4
  store i32 ptrtoint (i32* @global_var_1da18.145 to i32), i32* @r1, align 4
  store i8 23, i8* bitcast (i32* @global_var_1da1b.151 to i8*), align 4
  store i32 5120, i32* %r2.global-to-local, align 4
  %v1_10ad0 = trunc i32 %v1_10aa8 to i8
  store i8 %v1_10ad0, i8* bitcast (i32* @global_var_1da0e.188 to i8*), align 4
  store i32 20, i32* %r3.global-to-local, align 4
  store i32 %v4_10ab4, i32* @global_var_1da1c.191, align 4
  %v0_10adc = load i32, i32* %r8.global-to-local, align 4
  %v1_10adc = trunc i32 %v0_10adc to i8
  store i8 %v1_10adc, i8* bitcast (i32* @global_var_1da1a.150 to i8*), align 4
  store i8 %v1_10adc, i8* bitcast (i32* @global_var_1da28.192 to i8*), align 4
  store i8 %v1_10adc, i8* bitcast (i32* @global_var_1da29.193 to i8*), align 4
  %v5_10ae8 = call i32 @function_d114(i32 ptrtoint (i8** @global_var_1da04.141 to i32), i32 ptrtoint (i32* @global_var_1da18.145 to i32), i32 5120, i32 20)
  %v2_10aec = load i32, i32* @global_var_1da18.145, align 4
  %sext2 = mul i32 %v5_10ae8, 16777216
  %v1_10af4 = sdiv i32 %sext2, 16777216
  store i32 ptrtoint (i8** @global_var_1da04.141 to i32), i32* %r1.global-to-local, align 4
  %v2_10afc = load i32, i32* @global_var_1da9c.139, align 4
  store i32 %v2_10afc, i32* %r0.global-to-local, align 4
  %v3_10b00 = udiv i32 %v2_10aec, 65536
  %v3_10b04 = ashr i32 %sext2, 31
  %v1_10b0c = trunc i32 %v3_10b04 to i8
  store i8 %v1_10b0c, i8* bitcast (i32* @global_var_1da29.193 to i8*), align 4
  %v4_10b10 = load i32, i32* @global_var_1da14.187, align 4
  store i32 2, i32* %stack_var_-88, align 4
  %v1_10b18 = and i32 %v3_10b00, 128
  %v2_10b18 = icmp ne i32 %v1_10b18, 0
  store i1 %v2_10b18, i1* %cpsr_c.global-to-local, align 1
  store i32 16, i32* %ip.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 40, i32* %r2.global-to-local, align 4
  %v1_10b38 = trunc i32 %v1_10af4 to i8
  store i8 %v1_10b38, i8* bitcast (i32* @global_var_1da28.192 to i8*), align 4
  store i32 %v2_10b3c, i32* @r4, align 4
  store i32 %v4_10b10, i32* %stack_var_-84, align 4
  %v8_10b4c = call i32 @function_1331c(i32 %v2_10afc, i32* bitcast (i8** @global_var_1da04.141 to i32*), i32 40, i32 16384, i32 %v2_10b3c, i32 16)
  store i32 %v8_10b4c, i32* %r0.global-to-local, align 4
  %v3_10b50 = load i32, i32* %stack_var_-44, align 4
  %v1_10b54 = add i32 %v3_10b50, 1
  store i32 %v1_10b54, i32* %r3.global-to-local, align 4
  %v3_10b58 = icmp ugt i32 %v1_10b54, 383
  store i1 %v3_10b58, i1* %cpsr_c.global-to-local, align 1
  %v8_10b58 = icmp eq i32 %v1_10b54, 384
  store i1 %v8_10b58, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_10b54, i32* %stack_var_-44, align 4
  %v5_10b60 = icmp slt i32 %v1_10b54, 384
  br i1 %v5_10b60, label %dec_label_pc_f13c, label %dec_label_pc_10b64

dec_label_pc_10b64:                               ; preds = %dec_label_pc_10a64
  store i32 %v2_f124, i32* @fp, align 4
  br label %dec_label_pc_10b68

dec_label_pc_10b68:                               ; preds = %dec_label_pc_f120, %dec_label_pc_10b64
  %v0_10b68 = call i32 @function_13070()
  store i32 %v0_10b68, i32* %r0.global-to-local, align 4
  store i32 %v2_f118, i32* %ip.global-to-local, align 4
  store i32 %v0_10b68, i32* %sb.global-to-local, align 4
  store i32 %v1_10b74, i32* @r5, align 4
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_10b7c

dec_label_pc_10b7c:                               ; preds = %dec_label_pc_10c38, %dec_label_pc_10c30, %dec_label_pc_10c28, %dec_label_pc_10bfc, %dec_label_pc_10be8, %dec_label_pc_10bdc, %dec_label_pc_10bc4, %dec_label_pc_10c20, %dec_label_pc_10c14, %dec_label_pc_10bbc, %dec_label_pc_10cd8, %dec_label_pc_10b68
  %v1_10b80 = phi i32 [ %v0_10b68, %dec_label_pc_10b68 ], [ %v1_10b80.pre.pre, %dec_label_pc_10cd8 ], [ %v0_10bb0, %dec_label_pc_10bbc ], [ %v0_10bb0, %dec_label_pc_10c14 ], [ %v0_10bb0, %dec_label_pc_10c20 ], [ %v0_10bb0, %dec_label_pc_10bc4 ], [ %v0_10bb0, %dec_label_pc_10bdc ], [ %v0_10bb0, %dec_label_pc_10be8 ], [ %v0_10bb0, %dec_label_pc_10bfc ], [ %v0_10bb0, %dec_label_pc_10c28 ], [ %v0_10bb0, %dec_label_pc_10c30 ], [ %v0_10bb0, %dec_label_pc_10c38 ]
  store i32 0, i32* %ip.global-to-local, align 4
  %v2_10b80 = inttoptr i32 %v1_10b80 to i32*
  store i32 0, i32* %v2_10b80, align 4
  %v2_10b8c = load i32, i32* @global_var_1da9c.139, align 4
  store i32 %v2_10b8c, i32* %r0.global-to-local, align 4
  store i32 1514, i32* %r2.global-to-local, align 4
  store i32 %v2_f118, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10b9c = load i32, i32* %ip.global-to-local, align 4
  %v7_10ba4 = call i32 @function_132bc(i32 %v2_10b8c, i32* nonnull %stack_var_-1858, i32 1514, i32 16384, i32 %v0_10b9c, i32 %v0_10b9c)
  store i32 %v7_10ba4, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10ba8 = icmp eq i32 %v7_10ba4, 0
  store i1 %v2_10ba8, i1* %cpsr_z.global-to-local, align 1
  %tmp1877 = icmp slt i32 %v7_10ba4, 1
  br i1 %tmp1877, label %dec_label_pc_10d24, label %dec_label_pc_10bb0

dec_label_pc_10bb0:                               ; preds = %dec_label_pc_10b7c
  %v0_10bb0 = load i32, i32* %sb.global-to-local, align 4
  %v1_10bb0 = inttoptr i32 %v0_10bb0 to i32*
  %v2_10bb0 = load i32, i32* %v1_10bb0, align 4
  store i32 %v2_10bb0, i32* %r3.global-to-local, align 4
  %v2_10bb4 = icmp ugt i32 %v2_10bb0, 10
  store i1 %v2_10bb4, i1* %cpsr_c.global-to-local, align 1
  %v7_10bb4 = icmp eq i32 %v2_10bb0, 11
  store i1 %v7_10bb4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10bb4, label %dec_label_pc_10d24, label %dec_label_pc_10bbc

dec_label_pc_10bbc:                               ; preds = %dec_label_pc_10bb0
  %v2_10bbc = icmp ugt i32 %v7_10ba4, 38
  store i1 %v2_10bbc, i1* %cpsr_c.global-to-local, align 1
  %v7_10bbc = icmp eq i32 %v7_10ba4, 39
  store i1 %v7_10bbc, i1* %cpsr_z.global-to-local, align 1
  %v2_10bc0 = xor i1 %v2_10bbc, true
  %v3_10bc0 = or i1 %v7_10bbc, %v2_10bc0
  br i1 %v3_10bc0, label %dec_label_pc_10b7c, label %dec_label_pc_10bc4

dec_label_pc_10bc4:                               ; preds = %dec_label_pc_10bbc
  store i32 %v2_f118, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1da7c.49 to i32), i32* %r1.global-to-local, align 4
  %v3_10bcc = load i32, i32* %v2_10bcc, align 4
  store i32 %v3_10bcc, i32* %r2.global-to-local, align 4
  %v2_10bd0 = load i32, i32* @global_var_1da7c.49, align 4
  store i32 %v2_10bd0, i32* %r3.global-to-local, align 4
  %v3_10bd4 = icmp uge i32 %v3_10bcc, %v2_10bd0
  store i1 %v3_10bd4, i1* %cpsr_c.global-to-local, align 1
  %v9_10bd4 = icmp eq i32 %v3_10bcc, %v2_10bd0
  store i1 %v9_10bd4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_10bd4, label %dec_label_pc_10bdc, label %dec_label_pc_10b7c

dec_label_pc_10bdc:                               ; preds = %dec_label_pc_10bc4
  %v3_10bdc = load i8, i8* %v2_10bdc, align 1
  %v4_10bdc = zext i8 %v3_10bdc to i32
  store i32 %v4_10bdc, i32* %r3.global-to-local, align 4
  %v2_10be0 = icmp ugt i8 %v3_10bdc, 5
  store i1 %v2_10be0, i1* %cpsr_c.global-to-local, align 1
  %v7_10be0 = icmp eq i8 %v3_10bdc, 6
  store i1 %v7_10be0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10be0, label %dec_label_pc_10be8, label %dec_label_pc_10b7c

dec_label_pc_10be8:                               ; preds = %dec_label_pc_10bdc
  %v0_10be8 = load i32, i32* @r5, align 4
  %v1_10be8 = inttoptr i32 %v0_10be8 to i8*
  %v2_10be8 = load i8, i8* %v1_10be8, align 1
  %v3_10be8 = zext i8 %v2_10be8 to i32
  store i32 %v3_10be8, i32* %r3.global-to-local, align 4
  %v1_10bec = add i32 %v0_10be8, 1
  %v2_10bec = inttoptr i32 %v1_10bec to i8*
  %v3_10bec = load i8, i8* %v2_10bec, align 1
  %v4_10bec = zext i8 %v3_10bec to i32
  store i32 %v4_10bec, i32* %r2.global-to-local, align 4
  %v4_10bf0 = mul nuw nsw i32 %v4_10bec, 256
  %v5_10bf0 = or i32 %v4_10bf0, %v3_10be8
  store i32 %v5_10bf0, i32* %r3.global-to-local, align 4
  %v2_10bf4 = icmp ugt i32 %v5_10bf0, 5887
  store i1 %v2_10bf4, i1* %cpsr_c.global-to-local, align 1
  %v7_10bf4 = icmp eq i32 %v5_10bf0, 5888
  store i1 %v7_10bf4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10bf4, label %dec_label_pc_10bfc, label %dec_label_pc_10b7c

dec_label_pc_10bfc:                               ; preds = %dec_label_pc_10be8
  %v1_10bfc = add i32 %v0_10be8, 3
  %v2_10bfc = inttoptr i32 %v1_10bfc to i8*
  %v3_10bfc = load i8, i8* %v2_10bfc, align 1
  %v4_10bfc = zext i8 %v3_10bfc to i32
  store i32 %v4_10bfc, i32* %r2.global-to-local, align 4
  %v1_10c00 = add i32 %v0_10be8, 2
  %v2_10c00 = inttoptr i32 %v1_10c00 to i8*
  %v3_10c00 = load i8, i8* %v2_10c00, align 1
  %v4_10c00 = zext i8 %v3_10c00 to i32
  %v4_10c04 = mul nuw nsw i32 %v4_10bfc, 256
  %v5_10c04 = or i32 %v4_10c00, %v4_10c04
  store i32 %v5_10c04, i32* %r3.global-to-local, align 4
  store i32 %v4_eff4, i32* %r2.global-to-local, align 4
  %v3_10c0c = icmp uge i32 %v5_10c04, %v4_eff4
  store i1 %v3_10c0c, i1* %cpsr_c.global-to-local, align 1
  %v9_10c0c = icmp eq i32 %v5_10c04, %v4_eff4
  store i1 %v9_10c0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_10c0c, label %dec_label_pc_10c14, label %dec_label_pc_10b7c

dec_label_pc_10c14:                               ; preds = %dec_label_pc_10bfc
  %v1_10c14 = add i32 %v0_10be8, 13
  %v2_10c14 = inttoptr i32 %v1_10c14 to i8*
  %v3_10c14 = load i8, i8* %v2_10c14, align 1
  %v4_10c14 = zext i8 %v3_10c14 to i32
  store i32 %v4_10c14, i32* %r3.global-to-local, align 4
  %v1_10c18 = and i32 %v4_10c14, 2
  %v2_10c18 = icmp eq i32 %v1_10c18, 0
  store i1 %v2_10c18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10c18, label %dec_label_pc_10b7c, label %dec_label_pc_10c20

dec_label_pc_10c20:                               ; preds = %dec_label_pc_10c14
  %v1_10c20 = and i32 %v4_10c14, 16
  %v2_10c20 = icmp eq i32 %v1_10c20, 0
  store i1 %v2_10c20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10c20, label %dec_label_pc_10b7c, label %dec_label_pc_10c28

dec_label_pc_10c28:                               ; preds = %dec_label_pc_10c20
  %v1_10c28 = and i32 %v4_10c14, 4
  %v2_10c28 = icmp eq i32 %v1_10c28, 0
  store i1 %v2_10c28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10c28, label %dec_label_pc_10c30, label %dec_label_pc_10b7c

dec_label_pc_10c30:                               ; preds = %dec_label_pc_10c28
  %tmp2088 = urem i8 %v3_10c14, 2
  %v2_10c30 = icmp eq i8 %tmp2088, 0
  store i1 %v2_10c30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10c30, label %dec_label_pc_10c38, label %dec_label_pc_10b7c

dec_label_pc_10c38:                               ; preds = %dec_label_pc_10c30
  %v1_10c38 = add i32 %v0_10be8, 8
  %v2_10c38 = inttoptr i32 %v1_10c38 to i32*
  %v3_10c38 = load i32, i32* %v2_10c38, align 4
  %v2_10c54 = call i32 @llvm.bswap.i32(i32 %v3_10c38)
  %v1_10c58 = add i32 %v2_10c54, -1
  %v1_10c5c = udiv i32 %v1_10c58, 256
  %v3_10c60 = and i32 %v1_10c5c, 65280
  %v1_10c64 = and i32 %v1_10c58, 65280
  store i32 %v1_10c64, i32* %r2.global-to-local, align 4
  %v3_10c68 = mul i32 %v1_10c58, 16777216
  %v4_10c6c = udiv i32 %v1_10c58, 16777216
  %v5_10c6c = or i32 %v3_10c60, %v4_10c6c
  store i32 %v5_10c6c, i32* %r1.global-to-local, align 4
  store i32 %v2_f118, i32* %r3.global-to-local, align 4
  %v4_10c74 = mul nuw nsw i32 %v1_10c64, 256
  %v5_10c74 = or i32 %v4_10c74, %v3_10c68
  store i32 %v5_10c74, i32* %r0.global-to-local, align 4
  %v3_10c78 = load i32, i32* %v2_10c78, align 4
  store i32 %v3_10c78, i32* %r2.global-to-local, align 4
  %v2_10c7c = call i32 @llvm.bswap.i32(i32 %v1_10c58)
  store i32 %v2_10c7c, i32* %ip.global-to-local, align 4
  %v3_10c80 = icmp uge i32 %v2_10c7c, %v3_10c78
  store i1 %v3_10c80, i1* %cpsr_c.global-to-local, align 1
  %v9_10c80 = icmp eq i32 %v2_10c7c, %v3_10c78
  store i1 %v9_10c80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_10c80, label %dec_label_pc_10c88, label %dec_label_pc_10b7c

dec_label_pc_10c88:                               ; preds = %dec_label_pc_10c38
  %v0_10c88 = load i32, i32* @r4, align 4
  %v2_10c88 = icmp ugt i32 %v0_10c88, 254
  store i1 %v2_10c88, i1* %cpsr_c.global-to-local, align 1
  %v7_10c88 = icmp eq i32 %v0_10c88, 255
  store i1 %v7_10c88, i1* %cpsr_z.global-to-local, align 1
  %v8_10c8c = icmp sgt i32 %v0_10c88, 255
  br i1 %v8_10c8c, label %dec_label_pc_10d24, label %dec_label_pc_10c90

dec_label_pc_10c90:                               ; preds = %dec_label_pc_10c88
  %v3_10c94 = mul i32 %v0_10c88, 256
  store i32 %v3_10c94, i32* %r2.global-to-local, align 4
  %v2_10c98 = load i32, i32* @global_var_1da98.137, align 4
  store i32 %v2_10c98, i32* %r1.global-to-local, align 4
  %v2_10ca0 = mul i32 %v0_10c88, 288
  store i32 %v2_10ca0, i32* %r3.global-to-local, align 4
  %v2_10ca4 = add i32 %v2_10c98, %v2_10ca0
  store i32 %v2_10ca4, i32* @r0, align 4
  %v1_10ca8 = add i32 %v2_10ca4, 12
  %v2_10ca8 = inttoptr i32 %v1_10ca8 to i32*
  %v3_10ca8 = load i32, i32* %v2_10ca8, align 4
  store i32 %v3_10ca8, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10cac = icmp eq i32 %v3_10ca8, 0
  store i1 %v2_10cac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10cac, label %dec_label_pc_10cd8, label %dec_label_pc_10cb8.preheader

dec_label_pc_10cb8.preheader:                     ; preds = %dec_label_pc_10c90
  %v2_10cb0 = add i32 %v2_10ca4, 288
  store i32 %v2_10cb0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10cb8

dec_label_pc_10cb8:                               ; preds = %dec_label_pc_10cb8.preheader, %dec_label_pc_10ccc
  %v0_10ccc = phi i32 [ %v2_10cb0, %dec_label_pc_10cb8.preheader ], [ %v1_10cc4, %dec_label_pc_10ccc ]
  %v0_10cb8 = phi i32 [ %v0_10c88, %dec_label_pc_10cb8.preheader ], [ %v1_10cb8, %dec_label_pc_10ccc ]
  %v1_10cb8 = add i32 %v0_10cb8, 1
  store i32 %v1_10cb8, i32* @r4, align 4
  %v7_10cbc = icmp eq i32 %v1_10cb8, 256
  store i32 %v0_10ccc, i32* @r0, align 4
  %v1_10cc4 = add i32 %v0_10ccc, 288
  store i32 %v1_10cc4, i32* %r2.global-to-local, align 4
  br i1 %v7_10cbc, label %dec_label_pc_10d24.loopexit, label %dec_label_pc_10ccc

dec_label_pc_10ccc:                               ; preds = %dec_label_pc_10cb8
  %v1_10ccc = add i32 %v0_10ccc, 12
  %v2_10ccc = inttoptr i32 %v1_10ccc to i32*
  %v3_10ccc = load i32, i32* %v2_10ccc, align 4
  store i32 %v3_10ccc, i32* %r3.global-to-local, align 4
  %v2_10cd0 = icmp eq i32 %v3_10ccc, 0
  br i1 %v2_10cd0, label %dec_label_pc_10cd8.loopexit, label %dec_label_pc_10cb8

dec_label_pc_10cd8.loopexit:                      ; preds = %dec_label_pc_10ccc
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10cd8

dec_label_pc_10cd8:                               ; preds = %dec_label_pc_10cd8.loopexit, %dec_label_pc_10c90
  %v1_10cd8 = phi i32 [ %v0_10ccc, %dec_label_pc_10cd8.loopexit ], [ %v2_10ca4, %dec_label_pc_10c90 ]
  %v2_10cd8 = add i32 %v1_10cd8, 16
  %v3_10cd8 = inttoptr i32 %v2_10cd8 to i32*
  store i32 %v3_10c78, i32* %v3_10cd8, align 4
  %v0_10cdc = load i32, i32* @r5, align 4
  %v1_10cdc = inttoptr i32 %v0_10cdc to i32*
  %v2_10cdc = load i32, i32* %v1_10cdc, align 4
  store i32 %v2_10cdc, i32* %r2.global-to-local, align 4
  %v1_10ce0 = and i32 %v2_10cdc, 128
  %v2_10ce0 = icmp ne i32 %v1_10ce0, 0
  store i1 %v2_10ce0, i1* %cpsr_c.global-to-local, align 1
  %v3_10ce0 = sdiv i32 %v2_10cdc, 256
  store i32 %v3_10ce0, i32* %r3.global-to-local, align 4
  %v1_10ce4 = trunc i32 %v3_10ce0 to i8
  %v2_10ce4 = load i32, i32* @r0, align 4
  %v3_10ce4 = add i32 %v2_10ce4, 21
  %v4_10ce4 = inttoptr i32 %v3_10ce4 to i8*
  store i8 %v1_10ce4, i8* %v4_10ce4, align 1
  %v0_10ce8 = load i32, i32* %r2.global-to-local, align 4
  %v1_10ce8 = trunc i32 %v0_10ce8 to i8
  %v2_10ce8 = load i32, i32* @r0, align 4
  %v3_10ce8 = add i32 %v2_10ce8, 20
  %v4_10ce8 = inttoptr i32 %v3_10ce8 to i8*
  store i8 %v1_10ce8, i8* %v4_10ce8, align 1
  %v0_10cec = call i32 @function_ea30()
  store i32 %v0_10cec, i32* %r0.global-to-local, align 4
  %v1_10b80.pre.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_10b7c

dec_label_pc_10cf4:                               ; preds = %dec_label_pc_ef1c
  store i32 ptrtoint (i32* @global_var_1da9c.139 to i32), i32* %r1.global-to-local, align 4
  %v2_10cf8 = load i32, i32* @global_var_1da9c.139, align 4
  store i32 %v2_10cf8, i32* %r0.global-to-local, align 4
  %v1_10cfc = call i32 @function_12a9c(i32 %v2_10cf8)
  store i32 %v1_10cfc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ef8c

dec_label_pc_10d04:                               ; preds = %thread-pre-split599.thread, %thread-pre-split599
  %v2_10d04 = icmp ugt i32 %v1_f174, 78
  store i1 %v2_10d04, i1* %cpsr_c.global-to-local, align 1
  %v7_10d04 = icmp eq i32 %v1_f174, 79
  store i1 %v7_10d04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10d04, label %bb1878, label %dec_label_pc_108c4

bb1878:                                           ; preds = %dec_label_pc_10d04
  %v3_10d08 = icmp ugt i32 %v1_f188, 120
  store i1 %v3_10d08, i1* %cpsr_c.global-to-local, align 1
  %v8_10d08 = icmp eq i32 %v1_f188, 121
  store i1 %v8_10d08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10d08, label %dec_label_pc_10d10, label %dec_label_pc_108c4

dec_label_pc_10d10:                               ; preds = %bb1878
  %v1_10d10 = add nsw i32 %v1_f18c, -255
  store i32 %v1_10d10, i32* %r3.global-to-local, align 4
  %v2_10d10 = icmp eq i32 %v1_f18c, 255
  store i1 %v2_10d10, i1* %cpsr_c.global-to-local, align 1
  %v7_10d10 = icmp eq i32 %v1_f18c, 255
  store i1 %v7_10d10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10d10, label %bb1880, label %bb1879

bb1879:                                           ; preds = %dec_label_pc_10d10
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1880

bb1880:                                           ; preds = %dec_label_pc_10d10, %bb1879
  %v0_10d18 = phi i32 [ %v1_10d10, %dec_label_pc_10d10 ], [ 1, %bb1879 ]
  %v2_10d18 = and i32 %v3_f17c, 64
  %v3_10d18 = icmp ne i32 %v2_10d18, 0
  store i1 %v3_10d18, i1* %cpsr_c.global-to-local, align 1
  %v4_10d18 = udiv i32 %v1_f18c, 128
  %v5_10d18 = and i32 %v0_10d18, %v4_10d18
  store i32 %v5_10d18, i32* %r3.global-to-local, align 4
  %v6_10d18 = icmp eq i32 %v5_10d18, 0
  store i1 %v6_10d18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_10d18, label %dec_label_pc_108c4, label %dec_label_pc_f170

dec_label_pc_10d24.loopexit:                      ; preds = %dec_label_pc_10cb8
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10d24

dec_label_pc_10d24:                               ; preds = %dec_label_pc_10c88, %dec_label_pc_10bb0, %dec_label_pc_10b7c, %dec_label_pc_10d24.loopexit
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 1836, i32* %r0.global-to-local, align 4
  %v2_10d3c2038 = load i32, i32* @sp, align 4
  %v3_10d3c2039 = add i32 %v2_10d3c2038, 1836
  %v4_10d3c2040 = inttoptr i32 %v3_10d3c2039 to i32*
  store i32 0, i32* %v4_10d3c2040, align 4
  br label %dec_label_pc_10d2c.dec_label_pc_10d2c_crit_edge

dec_label_pc_10d2c.dec_label_pc_10d2c_crit_edge:  ; preds = %dec_label_pc_10d24, %dec_label_pc_10d2c.dec_label_pc_10d2c_crit_edge
  %v0_10d2c.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_10d3c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_10d30 = add i32 %v0_10d2c.pre, 4
  store i32 %v1_10d30, i32* %r3.global-to-local, align 4
  %v1_10d34 = add i32 %v0_10d2c.pre, 1836
  store i32 %v1_10d34, i32* %r0.global-to-local, align 4
  %v7_10d38 = icmp eq i32 %v1_10d30, 128
  %v2_10d3c = load i32, i32* @sp, align 4
  %v3_10d3c = add i32 %v2_10d3c, %v1_10d34
  %v4_10d3c = inttoptr i32 %v3_10d3c to i32*
  store i32 %v0_10d3c.pre, i32* %v4_10d3c, align 4
  br i1 %v7_10d38, label %dec_label_pc_10d44, label %dec_label_pc_10d2c.dec_label_pc_10d2c_crit_edge

dec_label_pc_10d44:                               ; preds = %dec_label_pc_10d2c.dec_label_pc_10d2c_crit_edge
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_10d44 = load i32, i32* %r2.global-to-local, align 4
  %v1_10d4c2041 = add i32 %v0_10d44, 4
  store i32 %v1_10d4c2041, i32* %r3.global-to-local, align 4
  %v1_10d502042 = add i32 %v0_10d44, 1708
  store i32 %v1_10d502042, i32* %r1.global-to-local, align 4
  %v7_10d542043 = icmp eq i32 %v1_10d4c2041, 128
  %v2_10d582044 = load i32, i32* @sp, align 4
  %v3_10d582045 = add i32 %v2_10d582044, %v1_10d502042
  %v4_10d582046 = inttoptr i32 %v3_10d582045 to i32*
  store i32 %v0_10d44, i32* %v4_10d582046, align 4
  br i1 %v7_10d542043, label %dec_label_pc_10d60, label %dec_label_pc_10d48.dec_label_pc_10d48_crit_edge

dec_label_pc_10d48.dec_label_pc_10d48_crit_edge:  ; preds = %dec_label_pc_10d44, %dec_label_pc_10d48.dec_label_pc_10d48_crit_edge
  %v0_10d48.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_10d58.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_10d4c = add i32 %v0_10d48.pre, 4
  store i32 %v1_10d4c, i32* %r3.global-to-local, align 4
  %v1_10d50 = add i32 %v0_10d48.pre, 1708
  store i32 %v1_10d50, i32* %r1.global-to-local, align 4
  %v7_10d54 = icmp eq i32 %v1_10d4c, 128
  %v2_10d58 = load i32, i32* @sp, align 4
  %v3_10d58 = add i32 %v2_10d58, %v1_10d50
  %v4_10d58 = inttoptr i32 %v3_10d58 to i32*
  store i32 %v0_10d58.pre, i32* %v4_10d58, align 4
  br i1 %v7_10d54, label %dec_label_pc_10d60, label %dec_label_pc_10d48.dec_label_pc_10d48_crit_edge

dec_label_pc_10d60:                               ; preds = %dec_label_pc_10d48.dec_label_pc_10d48_crit_edge, %dec_label_pc_10d44
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_10d60 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_10d60, i32* @r6, align 4
  store i32 %v0_10d60, i32* @r5, align 4
  store i32 %v0_10d60, i32* @r7, align 4
  store i32 %v0_10d60, i32* %stack_var_-44, align 4
  br label %dec_label_pc_10dd8

dec_label_pc_10d74:                               ; preds = %dec_label_pc_10e00, %dec_label_pc_10dd8
  %storemerge1242 = phi i32 [ 30, %dec_label_pc_10dd8 ], [ 5, %dec_label_pc_10e00 ]
  store i32 %storemerge1242, i32* %r1.global-to-local, align 4
  %v1_10d78 = add i32 %v2_10dec, 8
  %v2_10d78 = inttoptr i32 %v1_10d78 to i32*
  %v3_10d78 = load i32, i32* %v2_10d78, align 4
  store i32 %v3_10d78, i32* %r2.global-to-local, align 4
  %v2_10d7c = load i32, i32* @global_var_1da34.123, align 4
  %v2_10d80 = sub i32 %v2_10d7c, %v3_10d78
  store i32 %v2_10d80, i32* %r3.global-to-local, align 4
  %v3_10d84 = icmp uge i32 %v2_10d80, %storemerge1242
  store i1 %v3_10d84, i1* %cpsr_c.global-to-local, align 1
  %v9_10d84 = icmp eq i32 %v2_10d80, %storemerge1242
  store i1 %v9_10d84, i1* %cpsr_z.global-to-local, align 1
  %v2_10d88 = xor i1 %v9_10d84, true
  %v3_10d88 = and i1 %v3_10d84, %v2_10d88
  br i1 %v3_10d88, label %dec_label_pc_10e40, label %dec_label_pc_10d8c

dec_label_pc_10d8c:                               ; preds = %dec_label_pc_10d74
  store i1 %v2_10df4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_10df4, i1* %cpsr_z.global-to-local, align 1
  %v1_10e10 = add i32 %v2_10dec, 4
  %v2_10e10 = inttoptr i32 %v1_10e10 to i32*
  %v3_10e10 = load i32, i32* %v2_10e10, align 4
  br i1 %v7_10df4, label %dec_label_pc_10e10, label %dec_label_pc_10d94

dec_label_pc_10d94:                               ; preds = %dec_label_pc_10d8c
  store i32 %v3_10e10, i32* %ip.global-to-local, align 4
  %v3_10d98 = udiv i32 %v3_10e10, 32
  store i32 %v2_10e18, i32* %r2.global-to-local, align 4
  %v3_10da0 = mul nuw nsw i32 %v3_10d98, 4
  %v2_10da4 = add i32 %v3_10da0, %v2_10e18
  store i32 %v2_10da4, i32* %r3.global-to-local, align 4
  %v1_10da8 = add i32 %v2_10da4, -180
  %v2_10da8 = inttoptr i32 %v1_10da8 to i32*
  %v3_10da8 = load i32, i32* %v2_10da8, align 4
  %v1_10dac = urem i32 %v3_10e10, 32
  store i32 %v1_10dac, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v7_10db4 = shl i32 1, %v1_10dac
  %v8_10db4 = or i32 %v3_10da8, %v7_10db4
  store i32 %v8_10db4, i32* %r2.global-to-local, align 4
  store i32 %v8_10db4, i32* %v2_10da8, align 4
  %v0_10dbc = load i32, i32* @r6, align 4
  %v1_10dbc = load i32, i32* %ip.global-to-local, align 4
  %v3_10dbc = icmp uge i32 %v0_10dbc, %v1_10dbc
  store i1 %v3_10dbc, i1* %cpsr_c.global-to-local, align 1
  %v9_10dbc = icmp eq i32 %v0_10dbc, %v1_10dbc
  store i1 %v9_10dbc, i1* %cpsr_z.global-to-local, align 1
  %v5_10dc0 = icmp slt i32 %v0_10dbc, %v1_10dbc
  br i1 %v5_10dc0, label %bb1882, label %bb1883

bb1882:                                           ; preds = %dec_label_pc_10d94
  store i32 %v1_10dbc, i32* @r6, align 4
  br label %bb1883

bb1883:                                           ; preds = %dec_label_pc_10e00, %dec_label_pc_11ad0, %dec_label_pc_10e74, %bb1885, %dec_label_pc_10d94, %bb1882
  %v3_10dc4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_10dc4, i32* %r3.global-to-local, align 4
  %v1_10dc8 = add i32 %v3_10dc4, 1
  store i32 %v1_10dc8, i32* %r2.global-to-local, align 4
  %v2_10dcc = icmp ugt i32 %v1_10dc8, 254
  store i1 %v2_10dcc, i1* %cpsr_c.global-to-local, align 1
  %v7_10dcc = icmp eq i32 %v1_10dc8, 255
  store i1 %v7_10dcc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_10dc8, i32* %stack_var_-44, align 4
  %v8_10dd4 = icmp sgt i32 %v1_10dc8, 255
  br i1 %v8_10dd4, label %dec_label_pc_10e80, label %dec_label_pc_10dd8

dec_label_pc_10dd8:                               ; preds = %bb1883, %dec_label_pc_10d60
  %v0_10de4 = phi i32 [ %v1_10dc8, %bb1883 ], [ %v0_10d60, %dec_label_pc_10d60 ]
  %v3_10ddc = mul i32 %v0_10de4, 256
  store i32 %v3_10ddc, i32* %r3.global-to-local, align 4
  %v2_10de0 = load i32, i32* @global_var_1da98.137, align 4
  store i32 %v2_10de0, i32* %r1.global-to-local, align 4
  %v2_10de8 = mul i32 %v0_10de4, 288
  store i32 %v2_10de8, i32* %r2.global-to-local, align 4
  %v2_10dec = add i32 %v2_10de0, %v2_10de8
  store i32 %v2_10dec, i32* @r4, align 4
  %v1_10df0 = add i32 %v2_10dec, 12
  %v2_10df0 = inttoptr i32 %v1_10df0 to i32*
  %v3_10df0 = load i32, i32* %v2_10df0, align 4
  store i32 %v3_10df0, i32* %ip.global-to-local, align 4
  %v2_10df4 = icmp ne i32 %v3_10df0, 0
  store i1 %v2_10df4, i1* %cpsr_c.global-to-local, align 1
  %v7_10df4 = icmp eq i32 %v3_10df0, 1
  store i1 %v7_10df4, i1* %cpsr_z.global-to-local, align 1
  %v2_10df8 = xor i1 %v7_10df4, true
  %v3_10df8 = and i1 %v2_10df4, %v2_10df8
  br i1 %v3_10df8, label %dec_label_pc_10d74, label %dec_label_pc_10e00

dec_label_pc_10e00:                               ; preds = %dec_label_pc_10dd8
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10e00 = icmp eq i32 %v3_10df0, 0
  store i1 %v2_10e00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10e00, label %bb1883, label %dec_label_pc_10d74

dec_label_pc_10e10:                               ; preds = %dec_label_pc_10d8c
  store i32 %v3_10e10, i32* %r0.global-to-local, align 4
  %v3_10e14 = udiv i32 %v3_10e10, 32
  store i32 %v2_10e18, i32* %r1.global-to-local, align 4
  %v3_10e1c = mul nuw nsw i32 %v3_10e14, 4
  %v2_10e20 = add i32 %v3_10e1c, %v2_10e18
  store i32 %v2_10e20, i32* %r3.global-to-local, align 4
  %v1_10e24 = add i32 %v2_10e20, -308
  %v2_10e24 = inttoptr i32 %v1_10e24 to i32*
  %v3_10e24 = load i32, i32* %v2_10e24, align 4
  %v1_10e28 = urem i32 %v3_10e10, 32
  store i32 %v1_10e28, i32* %r1.global-to-local, align 4
  %v7_10e2c = shl i32 1, %v1_10e28
  %v8_10e2c = or i32 %v3_10e24, %v7_10e2c
  store i32 %v8_10e2c, i32* %r2.global-to-local, align 4
  %v0_10e30 = load i32, i32* @r5, align 4
  %v3_10e30 = icmp uge i32 %v0_10e30, %v3_10e10
  store i1 %v3_10e30, i1* %cpsr_c.global-to-local, align 1
  %v9_10e30 = icmp eq i32 %v0_10e30, %v3_10e10
  store i1 %v9_10e30, i1* %cpsr_z.global-to-local, align 1
  %v5_10e34 = icmp slt i32 %v0_10e30, %v3_10e10
  br i1 %v5_10e34, label %bb1884, label %bb1885

bb1884:                                           ; preds = %dec_label_pc_10e10
  store i32 %v3_10e10, i32* @r5, align 4
  br label %bb1885

bb1885:                                           ; preds = %dec_label_pc_10e10, %bb1884
  store i32 %v8_10e2c, i32* %v2_10e24, align 4
  br label %bb1883

dec_label_pc_10e40:                               ; preds = %dec_label_pc_10d74
  %v1_10e40 = add i32 %v2_10dec, 4
  %v2_10e40 = inttoptr i32 %v1_10e40 to i32*
  %v3_10e40 = load i32, i32* %v2_10e40, align 4
  store i32 %v3_10e40, i32* %r0.global-to-local, align 4
  %v1_10e44 = call i32 @function_12a9c(i32 %v3_10e40)
  store i32 %v1_10e44, i32* %r0.global-to-local, align 4
  %v0_10e48 = load i32, i32* @r4, align 4
  %v1_10e48 = add i32 %v0_10e48, 12
  %v2_10e48 = inttoptr i32 %v1_10e48 to i32*
  %v3_10e48 = load i32, i32* %v2_10e48, align 4
  store i32 %v3_10e48, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_10e50 = icmp ugt i32 %v3_10e48, 1
  store i1 %v2_10e50, i1* %cpsr_c.global-to-local, align 1
  %v7_10e50 = icmp eq i32 %v3_10e48, 2
  store i1 %v7_10e50, i1* %cpsr_z.global-to-local, align 1
  %v2_10e54 = add i32 %v0_10e48, 4
  %v3_10e54 = inttoptr i32 %v2_10e54 to i32*
  store i32 -1, i32* %v3_10e54, align 4
  %v2_10e58 = xor i1 %v2_10e50, true
  %v3_10e58 = or i1 %v7_10e50, %v2_10e58
  br i1 %v3_10e58, label %dec_label_pc_11ad0, label %dec_label_pc_10e5c

dec_label_pc_10e5c:                               ; preds = %dec_label_pc_10e40
  %v0_10e5c = load i32, i32* @r4, align 4
  %v1_10e5c = add i32 %v0_10e5c, 284
  %v2_10e5c = inttoptr i32 %v1_10e5c to i8*
  %v3_10e5c = load i8, i8* %v2_10e5c, align 1
  %v4_10e5c = zext i8 %v3_10e5c to i32
  %v1_10e60 = add nuw nsw i32 %v4_10e5c, 1
  %v1_10e64 = urem i32 %v1_10e60, 256
  store i32 %v1_10e64, i32* %r3.global-to-local, align 4
  %v2_10e68 = icmp ugt i32 %v1_10e64, 9
  store i1 %v2_10e68, i1* %cpsr_c.global-to-local, align 1
  %v7_10e68 = icmp eq i32 %v1_10e64, 10
  store i1 %v7_10e68, i1* %cpsr_z.global-to-local, align 1
  %v1_10e6c = trunc i32 %v1_10e60 to i8
  store i8 %v1_10e6c, i8* %v2_10e5c, align 1
  %v0_10e70 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_10e70, label %dec_label_pc_11ad0, label %dec_label_pc_10e74

dec_label_pc_10e74:                               ; preds = %dec_label_pc_10e5c
  %v0_10e74 = load i32, i32* @r4, align 4
  store i32 %v0_10e74, i32* @r0, align 4
  %v0_10e78 = call i32 @function_ea30()
  store i32 %v0_10e78, i32* %r0.global-to-local, align 4
  br label %bb1883

dec_label_pc_10e80:                               ; preds = %bb1883
  store i32 0, i32* @r4, align 4
  store i32 1, i32* %stack_var_-60, align 4
  %v0_10e8c = load i32, i32* @r6, align 4
  %v1_10e8c = load i32, i32* @r5, align 4
  %v3_10e8c = icmp uge i32 %v0_10e8c, %v1_10e8c
  store i1 %v3_10e8c, i1* %cpsr_c.global-to-local, align 1
  %v9_10e8c = icmp eq i32 %v0_10e8c, %v1_10e8c
  store i1 %v9_10e8c, i1* %cpsr_z.global-to-local, align 1
  %v5_10e90 = icmp slt i32 %v0_10e8c, %v1_10e8c
  %storemerge692 = select i1 %v5_10e90, i32 %v1_10e8c, i32 %v0_10e8c
  store i32 %v2_10ea4, i32* %ip.global-to-local, align 4
  store i32 %v2_10ea8, i32* %r1.global-to-local, align 4
  store i32 %v2_10eac, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10eb4 = add i32 %storemerge692, 1
  store i32 %v1_10eb4, i32* %r0.global-to-local, align 4
  %v5_10ec0 = call i32 @function_12cbc(i32 %v1_10eb4, i32 %v2_10ea8, i32 %v2_10eac, i32 0, i32 %v2_10ea4)
  %v0_10ec4 = load i32, i32* @r4, align 4
  store i32 %v0_10ec4, i32* %r0.global-to-local, align 4
  %v1_10ec8 = inttoptr i32 %v0_10ec4 to i32*
  %v2_10ec8 = call i32 @function_12d6c(i32* %v1_10ec8)
  store i32 %v2_10ec8, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1da34.123 to i32), i32* @lr, align 4
  %v0_10ed0 = load i32, i32* @r4, align 4
  store i32 %v0_10ed0, i32* %stack_var_-44, align 4
  store i32 %v2_10ec8, i32* @global_var_1da34.123, align 4
  br label %dec_label_pc_10f14

dec_label_pc_10edc:                               ; preds = %dec_label_pc_10f38, %dec_label_pc_11a48
  %v0_10ef0 = phi i32 [ %v3_10f2c, %dec_label_pc_10f38 ], [ %v0_10edc.pre, %dec_label_pc_11a48 ]
  %v3_10edc = udiv i32 %v0_10ef0, 32
  %v3_10ee0 = mul nuw nsw i32 %v3_10edc, 4
  store i32 %v2_10e18, i32* %ip.global-to-local, align 4
  %v2_10ee8 = add i32 %v3_10ee0, %v2_10e18
  store i32 %v2_10ee8, i32* %r3.global-to-local, align 4
  %v1_10eec = add i32 %v2_10ee8, -180
  %v2_10eec = inttoptr i32 %v1_10eec to i32*
  %v3_10eec = load i32, i32* %v2_10eec, align 4
  %v1_10ef0 = urem i32 %v0_10ef0, 32
  store i32 %v1_10ef0, i32* %r1.global-to-local, align 4
  %v2_10ef4 = add nsw i32 %v1_10ef0, -1
  %v3_10ef4 = shl i32 1, %v2_10ef4
  %v4_10ef4 = and i32 %v3_10ef4, %v3_10eec
  %v5_10ef4 = icmp ne i32 %v4_10ef4, 0
  store i1 %v5_10ef4, i1* %cpsr_c.global-to-local, align 1
  %v6_10ef4 = lshr i32 %v3_10eec, %v1_10ef0
  store i32 %v6_10ef4, i32* %r2.global-to-local, align 4
  %v1_10ef8 = urem i32 %v6_10ef4, 2
  %v2_10ef8 = icmp eq i32 %v1_10ef8, 0
  store i1 %v2_10ef8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10ef8, label %dec_label_pc_10f00, label %dec_label_pc_110c0.preheader

dec_label_pc_110c0.preheader:                     ; preds = %dec_label_pc_10edc
  %v0_110c0714 = load i32, i32* @r5, align 4
  %v1_110c0715 = add i32 %v0_110c0714, 12
  %v2_110c0716 = inttoptr i32 %v1_110c0715 to i32*
  %v3_110c0717 = load i32, i32* %v2_110c0716, align 4
  store i32 %v3_110c0717, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_110c4713719 = icmp eq i32 %v3_110c0717, 0
  store i1 %v2_110c4713719, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_110c4713719, label %dec_label_pc_10f00, label %dec_label_pc_110cc.lr.ph

dec_label_pc_10f00:                               ; preds = %dec_label_pc_110c0.loopexit, %dec_label_pc_110c4.backedge, %dec_label_pc_110c0.preheader, %dec_label_pc_10edc, %bb1928, %dec_label_pc_11908, %dec_label_pc_10f14, %dec_label_pc_11a5c, %dec_label_pc_1194c
  %v3_10f00 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_10f00, i32* %r3.global-to-local, align 4
  %v1_10f04 = add i32 %v3_10f00, 1
  store i32 %v1_10f04, i32* %r4.global-to-local, align 4
  %v2_10f08 = icmp ugt i32 %v1_10f04, 254
  store i1 %v2_10f08, i1* %cpsr_c.global-to-local, align 1
  %v7_10f08 = icmp eq i32 %v1_10f04, 255
  store i1 %v7_10f08, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_10f04, i32* %stack_var_-44, align 4
  %v8_10f10 = icmp sgt i32 %v1_10f04, 255
  br i1 %v8_10f10, label %dec_label_pc_f120, label %dec_label_pc_10f14

dec_label_pc_10f14:                               ; preds = %dec_label_pc_10f00, %dec_label_pc_10e80
  %v0_10f18 = phi i32 [ %v1_10f04, %dec_label_pc_10f00 ], [ %v0_10ed0, %dec_label_pc_10e80 ]
  store i32 ptrtoint (i32* @global_var_1da98.137 to i32), i32* %r0.global-to-local, align 4
  %v3_10f18 = mul i32 %v0_10f18, 256
  store i32 %v3_10f18, i32* %r3.global-to-local, align 4
  %v2_10f20 = load i32, i32* @global_var_1da98.137, align 4
  store i32 %v2_10f20, i32* %r1.global-to-local, align 4
  %v2_10f24 = mul i32 %v0_10f18, 288
  store i32 %v2_10f24, i32* %r2.global-to-local, align 4
  %v2_10f28 = add i32 %v2_10f20, %v2_10f24
  store i32 %v2_10f28, i32* @r5, align 4
  %v1_10f2c = add i32 %v2_10f28, 4
  %v2_10f2c = inttoptr i32 %v1_10f2c to i32*
  %v3_10f2c = load i32, i32* %v2_10f2c, align 4
  store i32 %v3_10f2c, i32* @r4, align 4
  %v2_10f30 = icmp eq i32 %v3_10f2c, -1
  store i1 %v2_10f30, i1* %cpsr_c.global-to-local, align 1
  %v7_10f30 = icmp eq i32 %v3_10f2c, -1
  store i1 %v7_10f30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10f30, label %dec_label_pc_10f00, label %dec_label_pc_10f38

dec_label_pc_10f38:                               ; preds = %dec_label_pc_10f14
  %v3_10f38 = udiv i32 %v3_10f2c, 32
  store i32 %v2_10e18, i32* %r1.global-to-local, align 4
  %v3_10f40 = mul nuw nsw i32 %v3_10f38, 4
  %v2_10f44 = add i32 %v3_10f40, %v2_10e18
  store i32 %v2_10f44, i32* %r3.global-to-local, align 4
  %v1_10f48 = add i32 %v2_10f44, -308
  %v2_10f48 = inttoptr i32 %v1_10f48 to i32*
  %v3_10f48 = load i32, i32* %v2_10f48, align 4
  %v1_10f4c = urem i32 %v3_10f2c, 32
  store i32 %v1_10f4c, i32* %r1.global-to-local, align 4
  %v2_10f50 = add nsw i32 %v1_10f4c, -1
  %v3_10f50 = shl i32 1, %v2_10f50
  %v4_10f50 = and i32 %v3_10f48, %v3_10f50
  %v5_10f50 = icmp ne i32 %v4_10f50, 0
  store i1 %v5_10f50, i1* %cpsr_c.global-to-local, align 1
  %v6_10f50 = lshr i32 %v3_10f48, %v1_10f4c
  store i32 %v6_10f50, i32* %r2.global-to-local, align 4
  %v1_10f54 = urem i32 %v6_10f50, 2
  %v2_10f54 = icmp eq i32 %v1_10f54, 0
  store i1 %v2_10f54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10f54, label %dec_label_pc_10edc, label %dec_label_pc_10f5c

dec_label_pc_10f5c:                               ; preds = %dec_label_pc_10f38
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 %v3_10f2c, i32* %r0.global-to-local, align 4
  store i32 %v2_11034, i32* %r3.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v2_ef5c, i32* @r4, align 4
  store i32 0, i32* %stack_var_-48, align 4
  store i32 4, i32* %stack_var_-52, align 4
  %v6_10f88 = call i32 @function_13234(i32 %v3_10f2c, i32 1, i32 4, i32* nonnull %stack_var_-48, i32 %v2_ef5c)
  %v3_10f8c = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_10f8c, i32* %r3.global-to-local, align 4
  %v2_10f90 = or i32 %v3_10f8c, %v6_10f88
  store i32 %v2_10f90, i32* %r0.global-to-local, align 4
  %v4_10f90 = icmp eq i32 %v2_10f90, 0
  store i1 %v4_10f90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_10f90, label %dec_label_pc_10f98, label %dec_label_pc_11a5c

dec_label_pc_10f98:                               ; preds = %dec_label_pc_10f5c
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_10f9c = load i32, i32* @r5, align 4
  %v2_10f9c = add i32 %v1_10f9c, 12
  %v3_10f9c = inttoptr i32 %v2_10f9c to i32*
  store i32 2, i32* %v3_10f9c, align 4
  %v0_10fa0 = call i32 @function_e7cc()
  store i32 %v0_10fa0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_1da30.130 to i32), i32* %ip.global-to-local, align 4
  %v2_10fa8 = load i8, i8* bitcast (i8** @global_var_1da30.130 to i8*), align 4
  %v3_10fa8 = zext i8 %v2_10fa8 to i32
  %v3_10fac = load i8, i8* @global_var_1da31.131, align 1
  %v4_10fac = zext i8 %v3_10fac to i32
  store i32 %v4_10fac, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v4_10fb0 = mul nuw nsw i32 %v4_10fac, 256
  %v5_10fb0 = or i32 %v4_10fb0, %v3_10fa8
  store i32 %v5_10fb0, i32* %r1.global-to-local, align 4
  %v2_10fb4 = call i32 @function_12824(i32 %v0_10fa0, i32 %v5_10fb0)
  store i32 ptrtoint (i32* @global_var_1da00.126 to i32), i32* %r1.global-to-local, align 4
  %v2_10fbc = load i32, i32* @global_var_1da00.126, align 4
  store i32 %v2_10fbc, i32* @lr, align 4
  %v1_10fc4 = load i32, i32* @r6, align 4
  %v9_10fc4 = icmp eq i32 %v2_10fbc, %v1_10fc4
  store i1 %v9_10fc4, i1* %cpsr_z.global-to-local, align 1
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_10fc8 = urem i32 %v2_10fb4, 65536
  store i32 %v3_10fc8, i32* %r0.global-to-local, align 4
  %v7_10fcc = icmp sgt i32 %v2_10fbc, %v1_10fc4
  br i1 %v7_10fcc, label %dec_label_pc_10fd0, label %dec_label_pc_11a44

dec_label_pc_10fd0:                               ; preds = %dec_label_pc_10f98
  store i32 ptrtoint (i32* @global_var_1da2c.128 to i32), i32* %r2.global-to-local, align 4
  %v2_10fd4 = load i32, i32* @global_var_1da2c.128, align 4
  store i32 %v2_10fd4, i32* %r4.global-to-local, align 4
  store i32 %v1_10fc4, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_10fe8

dec_label_pc_10fe0:                               ; preds = %dec_label_pc_11008, %dec_label_pc_10fe8
  %v3_10fe0 = icmp uge i32 %v1_10ffc, %v2_10fbc
  store i1 %v3_10fe0, i1* %cpsr_c.global-to-local, align 1
  %v9_10fe0 = icmp eq i32 %v1_10ffc, %v2_10fbc
  store i1 %v9_10fe0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_10fe0, label %dec_label_pc_11a44, label %dec_label_pc_10fe8

dec_label_pc_10fe8:                               ; preds = %dec_label_pc_10fe0, %dec_label_pc_10fd0
  %v0_10ffc = phi i32 [ %v1_10ffc, %dec_label_pc_10fe0 ], [ %v1_10fc4, %dec_label_pc_10fd0 ]
  %v0_11008 = phi i32 [ %v1_11000, %dec_label_pc_10fe0 ], [ %v2_10fd4, %dec_label_pc_10fd0 ]
  store i32 %v0_11008, i32* %r1.global-to-local, align 4
  %v1_10fec = add i32 %v0_11008, 8
  %v2_10fec = inttoptr i32 %v1_10fec to i8*
  %v3_10fec = load i8, i8* %v2_10fec, align 1
  %v4_10fec = zext i8 %v3_10fec to i32
  store i32 %v4_10fec, i32* %r3.global-to-local, align 4
  %v1_10ff0 = add i32 %v0_11008, 9
  %v2_10ff0 = inttoptr i32 %v1_10ff0 to i8*
  %v3_10ff0 = load i8, i8* %v2_10ff0, align 1
  %v4_10ff0 = zext i8 %v3_10ff0 to i32
  store i32 %v4_10ff0, i32* %r2.global-to-local, align 4
  %v4_10ff4 = mul nuw nsw i32 %v4_10ff0, 256
  %v5_10ff4 = or i32 %v4_10ff4, %v4_10fec
  store i32 %v5_10ff4, i32* %r3.global-to-local, align 4
  %v3_10ff8 = icmp uge i32 %v5_10ff4, %v3_10fc8
  store i1 %v3_10ff8, i1* %cpsr_c.global-to-local, align 1
  %v9_10ff8 = icmp eq i32 %v5_10ff4, %v3_10fc8
  store i1 %v9_10ff8, i1* %cpsr_z.global-to-local, align 1
  %v1_10ffc = add i32 %v0_10ffc, 1
  store i32 %v1_10ffc, i32* %ip.global-to-local, align 4
  %v1_11000 = add i32 %v0_11008, 16
  store i32 %v1_11000, i32* %r4.global-to-local, align 4
  %v2_11004 = xor i1 %v9_10ff8, true
  %v3_11004 = and i1 %v3_10ff8, %v2_11004
  br i1 %v3_11004, label %dec_label_pc_10fe0, label %dec_label_pc_11008

dec_label_pc_11008:                               ; preds = %dec_label_pc_10fe8
  %v1_11008 = add i32 %v0_11008, 10
  %v2_11008 = inttoptr i32 %v1_11008 to i8*
  %v3_11008 = load i8, i8* %v2_11008, align 1
  %v4_11008 = zext i8 %v3_11008 to i32
  store i32 %v4_11008, i32* %r3.global-to-local, align 4
  %v1_1100c = add i32 %v0_11008, 11
  %v2_1100c = inttoptr i32 %v1_1100c to i8*
  %v3_1100c = load i8, i8* %v2_1100c, align 1
  %v4_1100c = zext i8 %v3_1100c to i32
  store i32 %v4_1100c, i32* %r2.global-to-local, align 4
  %v4_11010 = mul nuw nsw i32 %v4_1100c, 256
  %v5_11010 = or i32 %v4_11010, %v4_11008
  store i32 %v5_11010, i32* %r3.global-to-local, align 4
  %v3_11014 = icmp uge i32 %v5_11010, %v3_10fc8
  store i1 %v3_11014, i1* %cpsr_c.global-to-local, align 1
  %v9_11014 = icmp eq i32 %v5_11010, %v3_10fc8
  store i1 %v9_11014, i1* %cpsr_z.global-to-local, align 1
  %v2_11018 = xor i1 %v3_11014, true
  %v3_11018 = or i1 %v9_11014, %v2_11018
  br i1 %v3_11018, label %dec_label_pc_10fe0, label %dec_label_pc_11a48

dec_label_pc_11020:                               ; preds = %dec_label_pc_11294, %dec_label_pc_112b8, %dec_label_pc_1125c
  store i32 26, i32* %r0.global-to-local, align 4
  %v1_11024 = call i32 @function_11bcc(i32 26)
  store i32 27, i32* %r0.global-to-local, align 4
  %v1_1102c = call i32 @function_11bcc(i32 27)
  store i32 %v2_11034, i32* %r1.global-to-local, align 4
  store i32 26, i32* %r0.global-to-local, align 4
  %v3_1103c = call i32 @function_11ae8(i32 26, i32* nonnull %stack_var_-48)
  store i32 %v3_1103c, i32* @r4, align 4
  store i32 %v2_11034, i32* %r1.global-to-local, align 4
  store i32 27, i32* %r0.global-to-local, align 4
  %v3_11050 = call i32 @function_11ae8(i32 27, i32* nonnull %stack_var_-48)
  %v3_11054 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_11050, i32* @r6, align 4
  %v0_1105c = load i32, i32* @r4, align 4
  store i32 %v0_1105c, i32* %r2.global-to-local, align 4
  %v1_11060 = add i32 %v3_11054, -1
  store i32 %v1_11060, i32* %r3.global-to-local, align 4
  %v0_11064 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_11064, i32* %r0.global-to-local, align 4
  %v0_11068 = load i32, i32* @r5, align 4
  %v1_11068 = add i32 %v0_11068, 24
  %v2_11068 = inttoptr i32 %v1_11068 to i32*
  %v3_11068 = load i32, i32* %v2_11068, align 4
  store i32 %v3_11068, i32* %r1.global-to-local, align 4
  %v4_1106c = call i32 @function_1225c(i32 %v0_11064, i32 %v3_11068, i32 %v0_1105c, i32 %v1_11060)
  store i32 %v4_1106c, i32* %r0.global-to-local, align 4
  %v2_11070 = icmp eq i32 %v4_1106c, -1
  store i1 %v2_11070, i1* %cpsr_c.global-to-local, align 1
  %v7_11070 = icmp eq i32 %v4_1106c, -1
  store i1 %v7_11070, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11070, label %dec_label_pc_11080, label %dec_label_pc_110a8

dec_label_pc_11080:                               ; preds = %dec_label_pc_11020
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v3_11080 = load i32, i32* %stack_var_-48, align 4
  %v0_11084 = load i32, i32* @r6, align 4
  store i32 %v0_11084, i32* %r2.global-to-local, align 4
  %v1_11088 = add i32 %v3_11080, -1
  store i32 %v1_11088, i32* %r3.global-to-local, align 4
  %v0_1108c = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_1108c, i32* %r0.global-to-local, align 4
  %v0_11090 = load i32, i32* @r5, align 4
  %v1_11090 = add i32 %v0_11090, 24
  %v2_11090 = inttoptr i32 %v1_11090 to i32*
  %v3_11090 = load i32, i32* %v2_11090, align 4
  store i32 %v3_11090, i32* %r1.global-to-local, align 4
  %v4_11094 = call i32 @function_1225c(i32 %v0_1108c, i32 %v3_11090, i32 %v0_11084, i32 %v1_11088)
  store i32 %v4_11094, i32* %r0.global-to-local, align 4
  %v2_11098 = icmp eq i32 %v4_11094, -1
  store i1 %v2_11098, i1* %cpsr_c.global-to-local, align 1
  %v7_11098 = icmp eq i32 %v4_11094, -1
  store i1 %v7_11098, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11098, label %dec_label_pc_11aa8, label %dec_label_pc_110a8

dec_label_pc_110a8:                               ; preds = %dec_label_pc_11080, %dec_label_pc_11020
  store i32 1, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  store i32 26, i32* %r0.global-to-local, align 4
  %v1_110ac = call i32 @function_11b14(i32 26)
  store i32 27, i32* %r0.global-to-local, align 4
  %v1_110b4 = call i32 @function_11b14(i32 27)
  store i32 %v1_110b4, i32* %r0.global-to-local, align 4
  %v0_110b8 = load i32, i32* @r7, align 4
  %v3_110b8 = icmp eq i32 %v0_110b8, -1
  store i1 %v3_110b8, i1* %cpsr_c.global-to-local, align 1
  %v8_110b8 = icmp eq i32 %v0_110b8, -1
  store i1 %v8_110b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_110b8, label %dec_label_pc_110c0.loopexit, label %dec_label_pc_112d4

dec_label_pc_110c0.loopexit:                      ; preds = %dec_label_pc_1124c, %dec_label_pc_119bc, %dec_label_pc_11140, %dec_label_pc_110a8, %dec_label_pc_118e8
  %v0_110c0 = load i32, i32* @r5, align 4
  %v1_110c0 = add i32 %v0_110c0, 12
  %v2_110c0 = inttoptr i32 %v1_110c0 to i32*
  %v3_110c0 = load i32, i32* %v2_110c0, align 4
  store i32 %v3_110c0, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_110c4713 = icmp eq i32 %v3_110c0, 0
  store i1 %v2_110c4713, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_110c4713, label %dec_label_pc_10f00, label %dec_label_pc_110cc.lr.ph

dec_label_pc_110cc.lr.ph:                         ; preds = %dec_label_pc_110c0.preheader, %dec_label_pc_110c0.loopexit
  %v0_110cc1049 = phi i32 [ %v0_110c0, %dec_label_pc_110c0.loopexit ], [ %v0_110c0714, %dec_label_pc_110c0.preheader ]
  br label %dec_label_pc_110cc

dec_label_pc_110cc:                               ; preds = %dec_label_pc_110c4.backedge.thread, %dec_label_pc_110c4.backedge, %dec_label_pc_110c4.backedge.thread2083, %dec_label_pc_110cc.lr.ph
  %v0_11998 = phi i32 [ %v0_110cc1049, %dec_label_pc_110cc.lr.ph ], [ %v0_110cc1031, %dec_label_pc_110c4.backedge ], [ %v0_11140, %dec_label_pc_110c4.backedge.thread ], [ %v0_11140, %dec_label_pc_110c4.backedge.thread2083 ]
  %v1_110cc = add i32 %v0_11998, 24
  %v2_110cc = inttoptr i32 %v1_110cc to i32*
  %v3_110cc = load i32, i32* %v2_110cc, align 4
  store i32 %v3_110cc, i32* %r3.global-to-local, align 4
  %v2_110d0 = icmp ugt i32 %v3_110cc, 255
  store i1 %v2_110d0, i1* %cpsr_c.global-to-local, align 1
  %v7_110d0 = icmp eq i32 %v3_110cc, 256
  store i1 %v7_110d0, i1* %cpsr_z.global-to-local, align 1
  %.pre = add i32 %v0_11998, 28
  store i32 %.pre, i32* %r8.global-to-local, align 4
  br i1 %v7_110d0, label %dec_label_pc_11998, label %dec_label_pc_110dc

dec_label_pc_110dc:                               ; preds = %dec_label_pc_110cc, %dec_label_pc_11998
  store i32 0, i32* @r6, align 4
  %v1_110e0 = load i32, i32* %sb.global-to-local, align 4
  %v2_110e0 = inttoptr i32 %v1_110e0 to i32*
  store i32 0, i32* %v2_110e0, align 4
  %v0_110e4 = load i32, i32* @r5, align 4
  %v1_110e4 = add i32 %v0_110e4, 24
  %v2_110e4 = inttoptr i32 %v1_110e4 to i32*
  %v3_110e4 = load i32, i32* %v2_110e4, align 4
  store i32 %v3_110e4, i32* %r2.global-to-local, align 4
  %v0_110e8 = load i32, i32* %r8.global-to-local, align 4
  %v2_110e8 = add i32 %v0_110e8, %v3_110e4
  store i32 %v2_110e8, i32* @r4, align 4
  %v1_110ec = add i32 %v0_110e4, 4
  %v2_110ec = inttoptr i32 %v1_110ec to i32*
  %v3_110ec = load i32, i32* %v2_110ec, align 4
  store i32 %v3_110ec, i32* %r0.global-to-local, align 4
  %v1_110f0 = sub i32 256, %v3_110e4
  store i32 %v1_110f0, i32* %r2.global-to-local, align 4
  store i32 %v2_110e8, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_110fc = inttoptr i32 %v2_110e8 to i32*
  %v5_110fc = call i32 @function_13290(i32 %v3_110ec, i32* %v4_110fc, i32 %v1_110f0, i32 16384)
  store i32 %v5_110fc, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11100 = icmp eq i32 %v5_110fc, 0
  store i1 %v2_11100, i1* %cpsr_z.global-to-local, align 1
  %tmp1886 = icmp slt i32 %v5_110fc, 1
  br i1 %tmp1886, label %dec_label_pc_118fc, label %dec_label_pc_11108

dec_label_pc_11108:                               ; preds = %dec_label_pc_110dc
  %v0_11108 = load i32, i32* @r6, align 4
  store i32 %v0_11108, i32* %r2.global-to-local, align 4
  store i32 65, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11110

dec_label_pc_11110:                               ; preds = %bb1888, %dec_label_pc_11108
  %v3_11118 = phi i32 [ %v1_1111c, %bb1888 ], [ %v0_11108, %dec_label_pc_11108 ]
  %v1_11110 = load i32, i32* @r4, align 4
  %v2_11110 = add i32 %v1_11110, %v3_11118
  %v3_11110 = inttoptr i32 %v2_11110 to i8*
  %v4_11110 = load i8, i8* %v3_11110, align 1
  %v6_11110 = zext i8 %v4_11110 to i32
  store i32 %v6_11110, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11114 = icmp eq i8 %v4_11110, 0
  store i1 %v2_11114, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11114, label %bb1887, label %bb1888

bb1887:                                           ; preds = %dec_label_pc_11110
  %v1_11118 = load i32, i32* %r1.global-to-local, align 4
  %v2_11118 = trunc i32 %v1_11118 to i8
  store i8 %v2_11118, i8* %v3_11110, align 1
  %v0_1111c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb1888

bb1888:                                           ; preds = %dec_label_pc_11110, %bb1887
  %v0_1111c = phi i32 [ %v3_11118, %dec_label_pc_11110 ], [ %v0_1111c.pre, %bb1887 ]
  %v1_1111c = add i32 %v0_1111c, 1
  store i32 %v1_1111c, i32* %r2.global-to-local, align 4
  %v3_11120 = icmp uge i32 %v5_110fc, %v1_1111c
  store i1 %v3_11120, i1* %cpsr_c.global-to-local, align 1
  %v9_11120 = icmp eq i32 %v5_110fc, %v1_1111c
  store i1 %v9_11120, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_11120, label %dec_label_pc_11128, label %dec_label_pc_11110

dec_label_pc_11128:                               ; preds = %bb1888, %dec_label_pc_11900
  store i32 ptrtoint (i32* @global_var_1da34.123 to i32), i32* @lr, align 4
  %v0_1112c = load i32, i32* @r5, align 4
  %v1_1112c = add i32 %v0_1112c, 24
  %v2_1112c = inttoptr i32 %v1_1112c to i32*
  %v3_1112c = load i32, i32* %v2_1112c, align 4
  %v2_11130 = load i32, i32* @global_var_1da34.123, align 4
  store i32 %v2_11130, i32* %r3.global-to-local, align 4
  %v2_11134 = add i32 %v3_1112c, %v5_110fc
  store i32 %v2_11134, i32* %ip.global-to-local, align 4
  store i32 %v2_11134, i32* %v2_1112c, align 4
  %v0_1113c = load i32, i32* %r3.global-to-local, align 4
  %v1_1113c = load i32, i32* @r5, align 4
  %v2_1113c = add i32 %v1_1113c, 8
  %v3_1113c = inttoptr i32 %v2_1113c to i32*
  store i32 %v0_1113c, i32* %v3_1113c, align 4
  br label %dec_label_pc_11140

dec_label_pc_11140:                               ; preds = %dec_label_pc_11758, %dec_label_pc_11128
  %v0_11140 = load i32, i32* @r5, align 4
  %v1_11140 = add i32 %v0_11140, 12
  %v2_11140 = inttoptr i32 %v1_11140 to i32*
  %v3_11140 = load i32, i32* %v2_11140, align 4
  store i32 %v3_11140, i32* %r2.global-to-local, align 4
  %v1_11144 = add i32 %v3_11140, -2
  store i32 %v1_11144, i32* %r3.global-to-local, align 4
  %v7_11148 = icmp eq i32 %v1_11144, 8
  store i1 %v7_11148, i1* %cpsr_z.global-to-local, align 1
  %v5_1114c = and i32 %v1_11144, 1073741824
  %v6_1114c = icmp ne i32 %v5_1114c, 0
  store i1 %v6_1114c, i1* %cpsr_c.global-to-local, align 1
  switch i32 %v3_11140, label %dec_label_pc_110c0.loopexit [
    i32 2, label %dec_label_pc_11178
    i32 3, label %dec_label_pc_1125c
    i32 4, label %dec_label_pc_11318
    i32 5, label %dec_label_pc_113c4
    i32 6, label %dec_label_pc_11488
    i32 7, label %dec_label_pc_11614
    i32 8, label %dec_label_pc_11550
    i32 9, label %dec_label_pc_1177c
    i32 10, label %dec_label_pc_116d8
  ]

dec_label_pc_11178:                               ; preds = %dec_label_pc_11140
  %v1_11178 = add i32 %v0_11140, 24
  %v2_11178 = inttoptr i32 %v1_11178 to i32*
  %v3_11178 = load i32, i32* %v2_11178, align 4
  store i32 %v3_11178, i32* %ip.global-to-local, align 4
  %v0_1117c = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_1117c, i32* @r6, align 4
  store i32 0, i32* @r7, align 4
  store i32 -4, i32* %sl.global-to-local, align 4
  %v1_11188 = add i32 %v0_11140, 29
  store i32 %v1_11188, i32* @r4, align 4
  %v3_1118c704 = icmp eq i32 %v3_11178, 0
  store i1 %v3_1118c704, i1* %cpsr_c.global-to-local, align 1
  store i1 %v3_1118c704, i1* %cpsr_z.global-to-local, align 1
  %v6_11190711 = icmp sgt i32 %v3_11178, 0
  br i1 %v6_11190711, label %dec_label_pc_11194.preheader, label %dec_label_pc_1123c

dec_label_pc_1118c.loopexit:                      ; preds = %dec_label_pc_111ac
  %v2_111b4 = add i32 %v1_111b4, 2
  store i32 %v2_111b4, i32* @r6, align 4
  %v2_111b8 = add i32 %v1_111b8, 2
  store i32 %v2_111b8, i32* @r4, align 4
  %v2_111bc = add i32 %v1_111bc, 2
  store i32 %v2_111bc, i32* @r7, align 4
  %v3_1118c = icmp uge i32 %v2_111bc, %v1_1118c
  store i1 %v3_1118c, i1* %cpsr_c.global-to-local, align 1
  %v9_1118c = icmp eq i32 %v2_111bc, %v1_1118c
  store i1 %v9_1118c, i1* %cpsr_z.global-to-local, align 1
  %v6_11190 = icmp slt i32 %v2_111bc, %v1_1118c
  br i1 %v6_11190, label %dec_label_pc_11194.preheader, label %dec_label_pc_1123c

dec_label_pc_11194.preheader:                     ; preds = %dec_label_pc_11178, %dec_label_pc_1118c.loopexit
  %v6_112441103 = phi i32 [ %v6_112441104, %dec_label_pc_1118c.loopexit ], [ %v0_11140, %dec_label_pc_11178 ]
  %v1_111bc1092 = phi i32 [ %v2_111bc, %dec_label_pc_1118c.loopexit ], [ 0, %dec_label_pc_11178 ]
  %v1_111b41090 = phi i32 [ %v2_111b4, %dec_label_pc_1118c.loopexit ], [ %v0_1117c, %dec_label_pc_11178 ]
  %v1_111a01088 = phi i32 [ %v1_1118c, %dec_label_pc_1118c.loopexit ], [ %v3_11178, %dec_label_pc_11178 ]
  %v0_111941086 = phi i32 [ %v2_111b8, %dec_label_pc_1118c.loopexit ], [ %v1_11188, %dec_label_pc_11178 ]
  br label %dec_label_pc_11194

dec_label_pc_11194:                               ; preds = %dec_label_pc_11194.preheader, %dec_label_pc_1121c
  %v6_112441104 = phi i32 [ %v6_112441103, %dec_label_pc_11194.preheader ], [ %v0_11224, %dec_label_pc_1121c ]
  %v1_111bc = phi i32 [ %v1_111bc1092, %dec_label_pc_11194.preheader ], [ %v1_11228, %dec_label_pc_1121c ]
  %v1_111b4 = phi i32 [ %v1_111b41090, %dec_label_pc_11194.preheader ], [ %v1_11230, %dec_label_pc_1121c ]
  %v1_1118c = phi i32 [ %v1_111a01088, %dec_label_pc_11194.preheader ], [ %v3_11224, %dec_label_pc_1121c ]
  %v1_111b8 = phi i32 [ %v0_111941086, %dec_label_pc_11194.preheader ], [ %v1_11234, %dec_label_pc_1121c ]
  %v1_11194 = add i32 %v1_111b8, -1
  %v2_11194 = inttoptr i32 %v1_11194 to i8*
  %v3_11194 = load i8, i8* %v2_11194, align 1
  %v4_11194 = zext i8 %v3_11194 to i32
  store i32 %v4_11194, i32* %r3.global-to-local, align 4
  %v2_11198 = icmp eq i8 %v3_11194, -1
  store i1 %v2_11198, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_11198, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11198, label %dec_label_pc_111a0, label %dec_label_pc_1123c

dec_label_pc_111a0:                               ; preds = %dec_label_pc_11194
  %v0_111a0 = load i32, i32* %r8.global-to-local, align 4
  %v2_111a0 = add i32 %v0_111a0, %v1_1118c
  store i32 %v2_111a0, i32* %r2.global-to-local, align 4
  %v3_111a4 = icmp uge i32 %v2_111a0, %v1_111b8
  store i1 %v3_111a4, i1* %cpsr_c.global-to-local, align 1
  %v9_111a4 = icmp eq i32 %v2_111a0, %v1_111b8
  store i1 %v9_111a4, i1* %cpsr_z.global-to-local, align 1
  %v2_111a8 = xor i1 %v3_111a4, true
  %v3_111a8 = or i1 %v9_111a4, %v2_111a8
  br i1 %v3_111a8, label %dec_label_pc_1123c, label %dec_label_pc_111ac

dec_label_pc_111ac:                               ; preds = %dec_label_pc_111a0
  %v1_111ac = inttoptr i32 %v1_111b8 to i8*
  %v2_111ac = load i8, i8* %v1_111ac, align 1
  %v3_111ac = zext i8 %v2_111ac to i32
  store i32 %v3_111ac, i32* %r3.global-to-local, align 4
  %v2_111b0 = icmp eq i8 %v2_111ac, -1
  store i1 %v2_111b0, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_111b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_111b0, label %dec_label_pc_1118c.loopexit, label %dec_label_pc_111c4

dec_label_pc_111c4:                               ; preds = %dec_label_pc_111ac
  %v2_111c4 = icmp ugt i8 %v2_111ac, -4
  store i1 %v2_111c4, i1* %cpsr_c.global-to-local, align 1
  %v7_111c4 = icmp eq i8 %v2_111ac, -3
  store i1 %v7_111c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_111c4, label %dec_label_pc_11840, label %dec_label_pc_111cc

dec_label_pc_111cc:                               ; preds = %dec_label_pc_111c4
  %v1_111cc = add i32 %v1_111b4, 2
  store i32 %v1_111cc, i32* %r3.global-to-local, align 4
  %v3_111d0 = icmp uge i32 %v2_111a0, %v1_111cc
  store i1 %v3_111d0, i1* %cpsr_c.global-to-local, align 1
  %v9_111d0 = icmp eq i32 %v2_111a0, %v1_111cc
  store i1 %v9_111d0, i1* %cpsr_z.global-to-local, align 1
  %v2_111d4 = xor i1 %v3_111d0, true
  %v3_111d4 = or i1 %v9_111d0, %v2_111d4
  br i1 %v3_111d4, label %dec_label_pc_1123c, label %dec_label_pc_111d8

dec_label_pc_111d8:                               ; preds = %dec_label_pc_11898, %bb1925, %bb1924, %dec_label_pc_111cc
  %v0_111d8 = load i32, i32* @r4, align 4
  %v1_111d8 = inttoptr i32 %v0_111d8 to i8*
  %v2_111d8 = load i8, i8* %v1_111d8, align 1
  %v3_111d8 = zext i8 %v2_111d8 to i32
  store i32 %v3_111d8, i32* %r3.global-to-local, align 4
  %v2_111dc = icmp ugt i8 %v2_111d8, -4
  store i1 %v2_111dc, i1* %cpsr_c.global-to-local, align 1
  %v7_111dc = icmp eq i8 %v2_111d8, -3
  store i1 %v7_111dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_111dc, label %bb1889, label %dec_label_pc_111e8

bb1889:                                           ; preds = %dec_label_pc_111d8
  %v1_111e0 = load i32, i32* %sl.global-to-local, align 4
  %v2_111e0 = trunc i32 %v1_111e0 to i8
  store i8 %v2_111e0, i8* %v1_111d8, align 1
  %v0_111e4.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_111e4.pr, label %.thread670, label %.dec_label_pc_111e8_crit_edge

.dec_label_pc_111e8_crit_edge:                    ; preds = %bb1889
  %v0_111e8.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_111e8

dec_label_pc_111e8:                               ; preds = %.dec_label_pc_111e8_crit_edge, %dec_label_pc_111d8
  %v0_111e8 = phi i32 [ %v0_111e8.pre, %.dec_label_pc_111e8_crit_edge ], [ %v3_111d8, %dec_label_pc_111d8 ]
  %v2_111e8 = icmp ugt i32 %v0_111e8, 250
  store i1 %v2_111e8, i1* %cpsr_c.global-to-local, align 1
  %v7_111e8 = icmp eq i32 %v0_111e8, 251
  store i1 %v7_111e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_111e8, label %bb1890, label %.thread670

bb1890:                                           ; preds = %dec_label_pc_111e8
  store i32 -3, i32* %r1.global-to-local, align 4
  %v3_111f0 = load i32, i32* @r4, align 4
  %v4_111f0 = inttoptr i32 %v3_111f0 to i8*
  store i8 -3, i8* %v4_111f0, align 1
  br label %.thread670

.thread670:                                       ; preds = %dec_label_pc_111e8, %bb1889, %bb1890
  %v0_111f4 = load i32, i32* @r4, align 4
  %v1_111f4 = add i32 %v0_111f4, 1
  %v2_111f4 = inttoptr i32 %v1_111f4 to i8*
  %v3_111f4 = load i8, i8* %v2_111f4, align 1
  %v4_111f4 = zext i8 %v3_111f4 to i32
  store i32 %v4_111f4, i32* %r3.global-to-local, align 4
  %v2_111f8 = icmp ugt i8 %v3_111f4, -4
  store i1 %v2_111f8, i1* %cpsr_c.global-to-local, align 1
  %v7_111f8 = icmp eq i8 %v3_111f4, -3
  store i1 %v7_111f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_111f8, label %bb1891, label %dec_label_pc_11204

bb1891:                                           ; preds = %.thread670
  %v1_111fc = load i32, i32* %sl.global-to-local, align 4
  %v2_111fc = trunc i32 %v1_111fc to i8
  store i8 %v2_111fc, i8* %v2_111f4, align 1
  %v0_11200.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11200.pr, label %.thread672, label %.dec_label_pc_11204_crit_edge

.dec_label_pc_11204_crit_edge:                    ; preds = %bb1891
  %v0_11204.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_11204

dec_label_pc_11204:                               ; preds = %.dec_label_pc_11204_crit_edge, %.thread670
  %v0_11204 = phi i32 [ %v0_11204.pre, %.dec_label_pc_11204_crit_edge ], [ %v4_111f4, %.thread670 ]
  %v2_11204 = icmp ugt i32 %v0_11204, 250
  store i1 %v2_11204, i1* %cpsr_c.global-to-local, align 1
  %v7_11204 = icmp eq i32 %v0_11204, 251
  store i1 %v7_11204, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11204, label %bb1892, label %.thread672

bb1892:                                           ; preds = %dec_label_pc_11204
  store i32 -3, i32* %r2.global-to-local, align 4
  %v3_1120c = load i32, i32* @r4, align 4
  %v4_1120c = add i32 %v3_1120c, 1
  %v5_1120c = inttoptr i32 %v4_1120c to i8*
  store i8 -3, i8* %v5_1120c, align 1
  br label %.thread672

.thread672:                                       ; preds = %dec_label_pc_11204, %bb1891, %bb1892
  %v0_11210 = load i32, i32* @r5, align 4
  %v1_11210 = add i32 %v0_11210, 4
  %v2_11210 = inttoptr i32 %v1_11210 to i32*
  %v3_11210 = load i32, i32* %v2_11210, align 4
  store i32 %v3_11210, i32* %r0.global-to-local, align 4
  %v0_11214 = load i32, i32* @r6, align 4
  br label %dec_label_pc_1121c

dec_label_pc_1121c:                               ; preds = %dec_label_pc_11958, %.thread672
  %v0_11220 = phi i32 [ %v3_11974, %dec_label_pc_11958 ], [ %v3_11210, %.thread672 ]
  %storemerge3 = phi i32 [ %v2_1185c, %dec_label_pc_11958 ], [ %v0_11214, %.thread672 ]
  %storemerge = phi i32 [ 9, %dec_label_pc_11958 ], [ 3, %.thread672 ]
  store i32 %storemerge3, i32* %r1.global-to-local, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_11220 = inttoptr i32 %storemerge3 to i32*
  %v5_11220 = call i32 @function_132f0(i32 %v0_11220, i32* %v4_11220, i32 %storemerge, i32 16384)
  store i32 %v5_11220, i32* %r0.global-to-local, align 4
  %v0_11224 = load i32, i32* @r5, align 4
  %v1_11224 = add i32 %v0_11224, 24
  %v2_11224 = inttoptr i32 %v1_11224 to i32*
  %v3_11224 = load i32, i32* %v2_11224, align 4
  store i32 %v3_11224, i32* %ip.global-to-local, align 4
  %v0_11228 = load i32, i32* @r7, align 4
  %v1_11228 = add i32 %v0_11228, 3
  store i32 %v1_11228, i32* @r7, align 4
  %v3_1122c = icmp uge i32 %v1_11228, %v3_11224
  store i1 %v3_1122c, i1* %cpsr_c.global-to-local, align 1
  %v9_1122c = icmp eq i32 %v1_11228, %v3_11224
  store i1 %v9_1122c, i1* %cpsr_z.global-to-local, align 1
  %v0_11230 = load i32, i32* @r6, align 4
  %v1_11230 = add i32 %v0_11230, 3
  store i32 %v1_11230, i32* @r6, align 4
  %v0_11234 = load i32, i32* @r4, align 4
  %v1_11234 = add i32 %v0_11234, 3
  store i32 %v1_11234, i32* @r4, align 4
  %v5_11238 = icmp slt i32 %v1_11228, %v3_11224
  br i1 %v5_11238, label %dec_label_pc_11194, label %dec_label_pc_1123c

dec_label_pc_1123c:                               ; preds = %dec_label_pc_1118c.loopexit, %dec_label_pc_11194, %dec_label_pc_1121c, %dec_label_pc_111cc, %dec_label_pc_111a0, %dec_label_pc_11178, %dec_label_pc_11840.dec_label_pc_1123c.loopexit_crit_edge
  %v6_11244 = phi i32 [ %v0_11868, %dec_label_pc_11840.dec_label_pc_1123c.loopexit_crit_edge ], [ %v0_11140, %dec_label_pc_11178 ], [ %v6_112441104, %dec_label_pc_11194 ], [ %v0_11224, %dec_label_pc_1121c ], [ %v6_112441104, %dec_label_pc_111cc ], [ %v6_112441104, %dec_label_pc_111a0 ], [ %v6_112441104, %dec_label_pc_1118c.loopexit ]
  %v0_1124c.pre = phi i32 [ %v0_1123c.pre.pre, %dec_label_pc_11840.dec_label_pc_1123c.loopexit_crit_edge ], [ 0, %dec_label_pc_11178 ], [ %v1_111bc, %dec_label_pc_11194 ], [ %v1_11228, %dec_label_pc_1121c ], [ %v1_111bc, %dec_label_pc_111cc ], [ %v1_111bc, %dec_label_pc_111a0 ], [ %v2_111bc, %dec_label_pc_1118c.loopexit ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1123c = icmp eq i32 %v0_1124c.pre, 0
  store i1 %v2_1123c, i1* %cpsr_z.global-to-local, align 1
  %tmp1893 = icmp slt i32 %v0_1124c.pre, 1
  br i1 %tmp1893, label %dec_label_pc_1124c, label %.thread1144

.thread1144:                                      ; preds = %dec_label_pc_1123c
  store i32 3, i32* %r2.global-to-local, align 4
  %v7_11244 = add i32 %v6_11244, 12
  %v8_11244 = inttoptr i32 %v7_11244 to i32*
  store i32 3, i32* %v8_11244, align 4
  br label %dec_label_pc_11758

dec_label_pc_1124c:                               ; preds = %dec_label_pc_1123c, %dec_label_pc_117e4, %dec_label_pc_11a08, %dec_label_pc_1167c, %dec_label_pc_115b8, %dec_label_pc_114f0, %dec_label_pc_1142c, %dec_label_pc_11380, %dec_label_pc_112d4
  %v0_1124c = phi i32 [ %v1_117d8, %dec_label_pc_117e4 ], [ %v0_11a00, %dec_label_pc_11a08 ], [ %v1_11670, %dec_label_pc_1167c ], [ %v1_115ac, %dec_label_pc_115b8 ], [ %v1_114e4, %dec_label_pc_114f0 ], [ %v1_11420, %dec_label_pc_1142c ], [ %v0_11380, %dec_label_pc_11380 ], [ %v0_112d4, %dec_label_pc_112d4 ], [ %v0_1124c.pre, %dec_label_pc_1123c ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1124c = icmp eq i32 %v0_1124c, 0
  store i1 %v2_1124c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1124c, label %dec_label_pc_110c0.loopexit, label %dec_label_pc_11254

dec_label_pc_11254:                               ; preds = %dec_label_pc_1124c
  %v0_11254 = load i32, i32* @r5, align 4
  %v1_11254 = add i32 %v0_11254, 24
  %v2_11254 = inttoptr i32 %v1_11254 to i32*
  %v3_11254 = load i32, i32* %v2_11254, align 4
  store i32 %v3_11254, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_11758

dec_label_pc_1125c:                               ; preds = %dec_label_pc_11140
  %v1_1125c = add i32 %v0_11140, 24
  %v2_1125c = inttoptr i32 %v1_1125c to i32*
  %v3_1125c = load i32, i32* %v2_1125c, align 4
  store i32 %v3_1125c, i32* %r3.global-to-local, align 4
  %v1_11260 = add i32 %v3_1125c, -1
  store i32 %v1_11260, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11264 = icmp eq i32 %v1_11260, 0
  store i1 %v2_11264, i1* %cpsr_z.global-to-local, align 1
  %tmp1894 = icmp slt i32 %v1_11260, 1
  br i1 %tmp1894, label %dec_label_pc_11020, label %dec_label_pc_1126c

dec_label_pc_1126c:                               ; preds = %dec_label_pc_1125c
  %v2_1126c = add i32 %v1_11260, %v0_11140
  store i32 %v2_1126c, i32* %r3.global-to-local, align 4
  %v1_11270 = add i32 %v2_1126c, 28
  %v2_11270 = inttoptr i32 %v1_11270 to i8*
  %v3_11270 = load i8, i8* %v2_11270, align 1
  %v4_11270 = zext i8 %v3_11270 to i32
  store i32 %v4_11270, i32* %r3.global-to-local, align 4
  %v2_11274 = icmp ugt i8 %v3_11270, 61
  store i1 %v2_11274, i1* %cpsr_c.global-to-local, align 1
  %v7_11274 = icmp eq i8 %v3_11270, 62
  store i1 %v7_11274, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11274, label %dec_label_pc_112b8, label %bb1895

bb1895:                                           ; preds = %dec_label_pc_1126c
  %v3_11278 = icmp ugt i8 %v3_11270, 57
  store i1 %v3_11278, i1* %cpsr_c.global-to-local, align 1
  %v8_11278 = icmp eq i8 %v3_11270, 58
  store i1 %v8_11278, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11278, label %dec_label_pc_112b8, label %dec_label_pc_112b0

dec_label_pc_11284:                               ; preds = %dec_label_pc_112b0
  %v2_11284 = icmp ugt i32 %v0_1128c, 34
  store i1 %v2_11284, i1* %cpsr_c.global-to-local, align 1
  %v7_11284 = icmp eq i32 %v0_1128c, 35
  store i1 %v7_11284, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11284, label %dec_label_pc_112b8, label %dec_label_pc_1128c

dec_label_pc_1128c:                               ; preds = %dec_label_pc_11284
  %v2_1128c = icmp ugt i32 %v0_1128c, 36
  store i1 %v2_1128c, i1* %cpsr_c.global-to-local, align 1
  %v7_1128c = icmp eq i32 %v0_1128c, 37
  store i1 %v7_1128c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1128c, label %dec_label_pc_112b8, label %dec_label_pc_11294

dec_label_pc_11294:                               ; preds = %dec_label_pc_1128c
  %v1_11294 = add i32 %v0_11294, -1
  store i32 %v1_11294, i32* %r0.global-to-local, align 4
  %v2_11294 = icmp ne i32 %v0_11294, 0
  store i1 %v2_11294, i1* %cpsr_c.global-to-local, align 1
  %v7_11294 = icmp eq i32 %v0_11294, 1
  store i1 %v7_11294, i1* %cpsr_z.global-to-local, align 1
  %v2_11298 = add i32 %v1_11294, %v0_11140
  store i32 %v2_11298, i32* %r3.global-to-local, align 4
  br i1 %v7_11294, label %dec_label_pc_11020, label %dec_label_pc_112a0

dec_label_pc_112a0:                               ; preds = %dec_label_pc_11294
  %v1_112a0 = add i32 %v2_11298, 28
  %v2_112a0 = inttoptr i32 %v1_112a0 to i8*
  %v3_112a0 = load i8, i8* %v2_112a0, align 1
  %v4_112a0 = zext i8 %v3_112a0 to i32
  store i32 %v4_112a0, i32* %r3.global-to-local, align 4
  %v2_112a4 = icmp ugt i8 %v3_112a0, 61
  store i1 %v2_112a4, i1* %cpsr_c.global-to-local, align 1
  %v7_112a4 = icmp eq i8 %v3_112a0, 62
  store i1 %v7_112a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_112a4, label %dec_label_pc_112b8, label %bb1896

bb1896:                                           ; preds = %dec_label_pc_112a0
  %v3_112a8 = icmp ugt i8 %v3_112a0, 57
  store i1 %v3_112a8, i1* %cpsr_c.global-to-local, align 1
  %v8_112a8 = icmp eq i8 %v3_112a0, 58
  store i1 %v8_112a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_112a8, label %dec_label_pc_112b8, label %dec_label_pc_112b0

dec_label_pc_112b0:                               ; preds = %bb1895, %bb1896
  %v0_11294 = phi i32 [ %v1_11294, %bb1896 ], [ %v1_11260, %bb1895 ]
  %v0_1128c = phi i32 [ %v4_112a0, %bb1896 ], [ %v4_11270, %bb1895 ]
  %v2_112b0 = icmp ugt i32 %v0_1128c, 35
  store i1 %v2_112b0, i1* %cpsr_c.global-to-local, align 1
  %v7_112b0 = icmp eq i32 %v0_1128c, 36
  store i1 %v7_112b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_112b0, label %dec_label_pc_112b8, label %dec_label_pc_11284

dec_label_pc_112b8:                               ; preds = %dec_label_pc_112a0, %dec_label_pc_112b0, %bb1896, %dec_label_pc_1128c, %dec_label_pc_11284, %dec_label_pc_1126c, %bb1895
  %v0_112b8 = phi i32 [ %v1_11260, %dec_label_pc_1126c ], [ %v1_11260, %bb1895 ], [ %v1_11294, %dec_label_pc_112a0 ], [ %v0_11294, %dec_label_pc_112b0 ], [ %v1_11294, %bb1896 ], [ %v0_11294, %dec_label_pc_1128c ], [ %v0_11294, %dec_label_pc_11284 ]
  %v1_112b8 = add i32 %v0_112b8, 1
  store i32 %v1_112b8, i32* @r7, align 4
  %v2_112bc = icmp eq i32 %v1_112b8, -1
  store i1 %v2_112bc, i1* %cpsr_c.global-to-local, align 1
  %v7_112bc = icmp eq i32 %v0_112b8, -2
  store i1 %v7_112bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_112bc, label %dec_label_pc_11020, label %dec_label_pc_112c4

dec_label_pc_112c4:                               ; preds = %dec_label_pc_112b8
  store i32 26, i32* %r0.global-to-local, align 4
  %v1_112c8 = call i32 @function_11b14(i32 26)
  store i32 27, i32* %r0.global-to-local, align 4
  %v1_112d0 = call i32 @function_11b14(i32 27)
  store i32 %v1_112d0, i32* %r0.global-to-local, align 4
  %v0_112d4.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_112d4

dec_label_pc_112d4:                               ; preds = %dec_label_pc_110a8, %dec_label_pc_112c4
  %v0_112d4 = phi i32 [ %v0_110b8, %dec_label_pc_110a8 ], [ %v0_112d4.pre, %dec_label_pc_112c4 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_112d4 = icmp eq i32 %v0_112d4, 0
  store i1 %v2_112d4, i1* %cpsr_z.global-to-local, align 1
  %tmp1897 = icmp slt i32 %v0_112d4, 1
  br i1 %tmp1897, label %dec_label_pc_1124c, label %dec_label_pc_112dc

dec_label_pc_112dc:                               ; preds = %dec_label_pc_112d4
  %v0_112dc = load i32, i32* @r5, align 4
  %v1_112dc = inttoptr i32 %v0_112dc to i32*
  %v2_112dc = load i32, i32* %v1_112dc, align 4
  store i32 %v2_112dc, i32* %r3.global-to-local, align 4
  %v1_112e0 = add i32 %v0_112dc, 4
  %v2_112e0 = inttoptr i32 %v1_112e0 to i32*
  %v3_112e0 = load i32, i32* %v2_112e0, align 4
  store i32 %v3_112e0, i32* %r0.global-to-local, align 4
  %v1_112e4 = add i32 %v2_112dc, 12
  %v2_112e4 = inttoptr i32 %v1_112e4 to i8*
  %v3_112e4 = load i8, i8* %v2_112e4, align 1
  %v4_112e4 = zext i8 %v3_112e4 to i32
  store i32 %v4_112e4, i32* %r2.global-to-local, align 4
  %v1_112e8 = inttoptr i32 %v2_112dc to i32*
  %v2_112e8 = load i32, i32* %v1_112e8, align 4
  store i32 %v2_112e8, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_112f0 = inttoptr i32 %v2_112e8 to i32*
  %v5_112f0 = call i32 @function_132f0(i32 %v3_112e0, i32* %v4_112f0, i32 %v4_112e4, i32 16384)
  store i32 %v5_112f0, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_112f8 = load i32, i32* @r5, align 4
  %v1_112f8 = add i32 %v0_112f8, 4
  %v2_112f8 = inttoptr i32 %v1_112f8 to i32*
  %v3_112f8 = load i32, i32* %v2_112f8, align 4
  store i32 %v3_112f8, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_15398.203 to i32), i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_11304 = call i32 @function_132f0(i32 %v3_112f8, i32* bitcast ([3 x i8]* @global_var_15398.203 to i32*), i32 2, i32 16384)
  store i32 %v5_11304, i32* %r0.global-to-local, align 4
  %v0_11308 = load i32, i32* @r5, align 4
  %v1_11308 = add i32 %v0_11308, 24
  %v2_11308 = inttoptr i32 %v1_11308 to i32*
  %v3_11308 = load i32, i32* %v2_11308, align 4
  store i32 %v3_11308, i32* %ip.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v2_11310 = add i32 %v0_11308, 12
  %v3_11310 = inttoptr i32 %v2_11310 to i32*
  store i32 4, i32* %v3_11310, align 4
  br label %dec_label_pc_11758

dec_label_pc_11318:                               ; preds = %dec_label_pc_11140
  %v1_11318 = add i32 %v0_11140, 24
  %v2_11318 = inttoptr i32 %v1_11318 to i32*
  %v3_11318 = load i32, i32* %v2_11318, align 4
  store i32 %v3_11318, i32* %r3.global-to-local, align 4
  %v1_1131c = add i32 %v3_11318, -1
  store i32 %v1_1131c, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11320 = icmp eq i32 %v1_1131c, 0
  store i1 %v2_11320, i1* %cpsr_z.global-to-local, align 1
  %tmp1898 = icmp slt i32 %v1_1131c, 1
  br i1 %tmp1898, label %dec_label_pc_118a8, label %dec_label_pc_11328

dec_label_pc_11328:                               ; preds = %dec_label_pc_11318
  %v2_11328 = add i32 %v1_1131c, %v0_11140
  store i32 %v2_11328, i32* %r3.global-to-local, align 4
  %v1_1132c = add i32 %v2_11328, 28
  %v2_1132c = inttoptr i32 %v1_1132c to i8*
  %v3_1132c = load i8, i8* %v2_1132c, align 1
  %v4_1132c = zext i8 %v3_1132c to i32
  store i32 %v4_1132c, i32* %r3.global-to-local, align 4
  %v2_11330 = icmp ugt i8 %v3_1132c, 57
  store i1 %v2_11330, i1* %cpsr_c.global-to-local, align 1
  %v7_11330 = icmp eq i8 %v3_1132c, 58
  store i1 %v7_11330, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11330, label %dec_label_pc_1136c, label %bb1899

bb1899:                                           ; preds = %dec_label_pc_11328
  %v3_11334 = icmp ugt i8 %v3_1132c, 61
  store i1 %v3_11334, i1* %cpsr_c.global-to-local, align 1
  %v8_11334 = icmp eq i8 %v3_1132c, 62
  store i1 %v8_11334, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11334, label %dec_label_pc_1136c, label %dec_label_pc_11364

dec_label_pc_11340:                               ; preds = %dec_label_pc_11364
  %v2_11340 = icmp ugt i32 %v0_11340, 34
  store i1 %v2_11340, i1* %cpsr_c.global-to-local, align 1
  %v7_11340 = icmp eq i32 %v0_11340, 35
  store i1 %v7_11340, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11340, label %dec_label_pc_1136c, label %dec_label_pc_11348

dec_label_pc_11348:                               ; preds = %dec_label_pc_11340
  %v1_11348 = add i32 %v0_11348, -1
  store i32 %v1_11348, i32* %r0.global-to-local, align 4
  %v2_11348 = icmp ne i32 %v0_11348, 0
  store i1 %v2_11348, i1* %cpsr_c.global-to-local, align 1
  %v7_11348 = icmp eq i32 %v0_11348, 1
  store i1 %v7_11348, i1* %cpsr_z.global-to-local, align 1
  %v2_1134c = add i32 %v1_11348, %v0_11140
  store i32 %v2_1134c, i32* %r3.global-to-local, align 4
  br i1 %v7_11348, label %dec_label_pc_118a8, label %dec_label_pc_11354

dec_label_pc_11354:                               ; preds = %dec_label_pc_11348
  %v1_11354 = add i32 %v2_1134c, 28
  %v2_11354 = inttoptr i32 %v1_11354 to i8*
  %v3_11354 = load i8, i8* %v2_11354, align 1
  %v4_11354 = zext i8 %v3_11354 to i32
  store i32 %v4_11354, i32* %r3.global-to-local, align 4
  %v2_11358 = icmp ugt i8 %v3_11354, 61
  store i1 %v2_11358, i1* %cpsr_c.global-to-local, align 1
  %v7_11358 = icmp eq i8 %v3_11354, 62
  store i1 %v7_11358, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11358, label %dec_label_pc_1136c, label %bb1900

bb1900:                                           ; preds = %dec_label_pc_11354
  %v3_1135c = icmp ugt i8 %v3_11354, 57
  store i1 %v3_1135c, i1* %cpsr_c.global-to-local, align 1
  %v8_1135c = icmp eq i8 %v3_11354, 58
  store i1 %v8_1135c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_1135c, label %dec_label_pc_1136c, label %dec_label_pc_11364

dec_label_pc_11364:                               ; preds = %bb1899, %bb1900
  %v0_11348 = phi i32 [ %v1_11348, %bb1900 ], [ %v1_1131c, %bb1899 ]
  %v0_11340 = phi i32 [ %v4_11354, %bb1900 ], [ %v4_1132c, %bb1899 ]
  %v2_11364 = icmp ugt i32 %v0_11340, 35
  store i1 %v2_11364, i1* %cpsr_c.global-to-local, align 1
  %v7_11364 = icmp eq i32 %v0_11340, 36
  store i1 %v7_11364, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11364, label %dec_label_pc_1136c, label %dec_label_pc_11340

dec_label_pc_1136c:                               ; preds = %dec_label_pc_11354, %dec_label_pc_11364, %bb1900, %dec_label_pc_11340, %dec_label_pc_11328, %bb1899
  %v0_1136c = phi i32 [ %v1_1131c, %dec_label_pc_11328 ], [ %v1_1131c, %bb1899 ], [ %v1_11348, %dec_label_pc_11354 ], [ %v0_11348, %dec_label_pc_11364 ], [ %v1_11348, %bb1900 ], [ %v0_11348, %dec_label_pc_11340 ]
  %v1_1136c = add i32 %v0_1136c, 1
  store i32 %v1_1136c, i32* @r7, align 4
  %v2_11370 = icmp eq i32 %v1_1136c, -1
  store i1 %v2_11370, i1* %cpsr_c.global-to-local, align 1
  %v7_11370 = icmp eq i32 %v0_1136c, -2
  store i1 %v7_11370, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11370, label %dec_label_pc_118a8, label %dec_label_pc_11378

dec_label_pc_11378:                               ; preds = %dec_label_pc_1136c
  store i32 25, i32* %r0.global-to-local, align 4
  %v1_1137c = call i32 @function_11b14(i32 25)
  store i32 %v1_1137c, i32* %r0.global-to-local, align 4
  %v0_11380.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_11380

dec_label_pc_11380:                               ; preds = %dec_label_pc_118e8, %dec_label_pc_11378
  %v0_11380 = phi i32 [ %v0_118f0, %dec_label_pc_118e8 ], [ %v0_11380.pre, %dec_label_pc_11378 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11380 = icmp eq i32 %v0_11380, 0
  store i1 %v2_11380, i1* %cpsr_z.global-to-local, align 1
  %tmp1901 = icmp slt i32 %v0_11380, 1
  br i1 %tmp1901, label %dec_label_pc_1124c, label %dec_label_pc_11388

dec_label_pc_11388:                               ; preds = %dec_label_pc_11380
  %v0_11388 = load i32, i32* @r5, align 4
  %v1_11388 = inttoptr i32 %v0_11388 to i32*
  %v2_11388 = load i32, i32* %v1_11388, align 4
  store i32 %v2_11388, i32* %r3.global-to-local, align 4
  %v1_1138c = add i32 %v0_11388, 4
  %v2_1138c = inttoptr i32 %v1_1138c to i32*
  %v3_1138c = load i32, i32* %v2_1138c, align 4
  store i32 %v3_1138c, i32* %r0.global-to-local, align 4
  %v1_11390 = add i32 %v2_11388, 13
  %v2_11390 = inttoptr i32 %v1_11390 to i8*
  %v3_11390 = load i8, i8* %v2_11390, align 1
  %v4_11390 = zext i8 %v3_11390 to i32
  store i32 %v4_11390, i32* %r2.global-to-local, align 4
  %v1_11394 = add i32 %v2_11388, 4
  %v2_11394 = inttoptr i32 %v1_11394 to i32*
  %v3_11394 = load i32, i32* %v2_11394, align 4
  store i32 %v3_11394, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_1139c = inttoptr i32 %v3_11394 to i32*
  %v5_1139c = call i32 @function_132f0(i32 %v3_1138c, i32* %v4_1139c, i32 %v4_11390, i32 16384)
  store i32 %v5_1139c, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_113a4 = load i32, i32* @r5, align 4
  %v1_113a4 = add i32 %v0_113a4, 4
  %v2_113a4 = inttoptr i32 %v1_113a4 to i32*
  %v3_113a4 = load i32, i32* %v2_113a4, align 4
  store i32 %v3_113a4, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_15398.203 to i32), i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_113b0 = call i32 @function_132f0(i32 %v3_113a4, i32* bitcast ([3 x i8]* @global_var_15398.203 to i32*), i32 2, i32 16384)
  store i32 %v5_113b0, i32* %r0.global-to-local, align 4
  %v0_113b4 = load i32, i32* @r5, align 4
  %v1_113b4 = add i32 %v0_113b4, 24
  %v2_113b4 = inttoptr i32 %v1_113b4 to i32*
  %v3_113b4 = load i32, i32* %v2_113b4, align 4
  store i32 %v3_113b4, i32* %ip.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v2_113bc = add i32 %v0_113b4, 12
  %v3_113bc = inttoptr i32 %v2_113bc to i32*
  store i32 5, i32* %v3_113bc, align 4
  br label %dec_label_pc_11758

dec_label_pc_113c4:                               ; preds = %dec_label_pc_11140
  %v1_113c4 = add i32 %v0_11140, 24
  %v2_113c4 = inttoptr i32 %v1_113c4 to i32*
  %v3_113c4 = load i32, i32* %v2_113c4, align 4
  store i32 %v3_113c4, i32* %ip.global-to-local, align 4
  %v1_113c8 = add i32 %v3_113c4, -1
  store i32 %v1_113c8, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_113cc = icmp eq i32 %v1_113c8, 0
  store i1 %v2_113cc, i1* %cpsr_z.global-to-local, align 1
  %tmp1902 = icmp slt i32 %v1_113c8, 1
  br i1 %tmp1902, label %dec_label_pc_110c4.backedge.thread, label %dec_label_pc_113d4

dec_label_pc_113d4:                               ; preds = %dec_label_pc_113c4
  %v2_113d4 = add i32 %v1_113c8, %v0_11140
  store i32 %v2_113d4, i32* %r3.global-to-local, align 4
  %v1_113d8 = add i32 %v2_113d4, 28
  %v2_113d8 = inttoptr i32 %v1_113d8 to i8*
  %v3_113d8 = load i8, i8* %v2_113d8, align 1
  %v4_113d8 = zext i8 %v3_113d8 to i32
  store i32 %v4_113d8, i32* %r3.global-to-local, align 4
  %v2_113dc = icmp ugt i8 %v3_113d8, 57
  store i1 %v2_113dc, i1* %cpsr_c.global-to-local, align 1
  %v7_113dc = icmp eq i8 %v3_113d8, 58
  store i1 %v7_113dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_113dc, label %dec_label_pc_11420, label %bb1903

bb1903:                                           ; preds = %dec_label_pc_113d4
  %v3_113e0 = icmp ugt i8 %v3_113d8, 61
  store i1 %v3_113e0, i1* %cpsr_c.global-to-local, align 1
  %v8_113e0 = icmp eq i8 %v3_113d8, 62
  store i1 %v8_113e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_113e0, label %dec_label_pc_11420, label %dec_label_pc_11418

dec_label_pc_113ec:                               ; preds = %dec_label_pc_11418
  %v2_113ec = icmp ugt i32 %v0_113f4, 34
  store i1 %v2_113ec, i1* %cpsr_c.global-to-local, align 1
  %v7_113ec = icmp eq i32 %v0_113f4, 35
  store i1 %v7_113ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_113ec, label %dec_label_pc_11420, label %dec_label_pc_113f4

dec_label_pc_113f4:                               ; preds = %dec_label_pc_113ec
  %v2_113f4 = icmp ugt i32 %v0_113f4, 36
  store i1 %v2_113f4, i1* %cpsr_c.global-to-local, align 1
  %v7_113f4 = icmp eq i32 %v0_113f4, 37
  store i1 %v7_113f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_113f4, label %dec_label_pc_11420, label %dec_label_pc_113fc

dec_label_pc_113fc:                               ; preds = %dec_label_pc_113f4
  %v1_113fc = add i32 %v0_113fc, -1
  store i32 %v1_113fc, i32* %r0.global-to-local, align 4
  %v2_113fc = icmp ne i32 %v0_113fc, 0
  store i1 %v2_113fc, i1* %cpsr_c.global-to-local, align 1
  %v7_113fc = icmp eq i32 %v0_113fc, 1
  store i1 %v7_113fc, i1* %cpsr_z.global-to-local, align 1
  %v2_11400 = add i32 %v1_113fc, %v0_11140
  store i32 %v2_11400, i32* %r3.global-to-local, align 4
  br i1 %v7_113fc, label %dec_label_pc_110c4.backedge.thread2083, label %dec_label_pc_11408

dec_label_pc_11408:                               ; preds = %dec_label_pc_113fc
  %v1_11408 = add i32 %v2_11400, 28
  %v2_11408 = inttoptr i32 %v1_11408 to i8*
  %v3_11408 = load i8, i8* %v2_11408, align 1
  %v4_11408 = zext i8 %v3_11408 to i32
  store i32 %v4_11408, i32* %r3.global-to-local, align 4
  %v2_1140c = icmp ugt i8 %v3_11408, 61
  store i1 %v2_1140c, i1* %cpsr_c.global-to-local, align 1
  %v7_1140c = icmp eq i8 %v3_11408, 62
  store i1 %v7_1140c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1140c, label %dec_label_pc_11420, label %bb1904

bb1904:                                           ; preds = %dec_label_pc_11408
  %v3_11410 = icmp ugt i8 %v3_11408, 57
  store i1 %v3_11410, i1* %cpsr_c.global-to-local, align 1
  %v8_11410 = icmp eq i8 %v3_11408, 58
  store i1 %v8_11410, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11410, label %dec_label_pc_11420, label %dec_label_pc_11418

dec_label_pc_11418:                               ; preds = %bb1903, %bb1904
  %v0_113fc = phi i32 [ %v1_113fc, %bb1904 ], [ %v1_113c8, %bb1903 ]
  %v0_113f4 = phi i32 [ %v4_11408, %bb1904 ], [ %v4_113d8, %bb1903 ]
  %v2_11418 = icmp ugt i32 %v0_113f4, 35
  store i1 %v2_11418, i1* %cpsr_c.global-to-local, align 1
  %v7_11418 = icmp eq i32 %v0_113f4, 36
  store i1 %v7_11418, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11418, label %dec_label_pc_11420, label %dec_label_pc_113ec

dec_label_pc_11420:                               ; preds = %dec_label_pc_11408, %dec_label_pc_11418, %bb1904, %dec_label_pc_113f4, %dec_label_pc_113ec, %dec_label_pc_113d4, %bb1903
  %v0_11420 = phi i32 [ %v1_113c8, %dec_label_pc_113d4 ], [ %v1_113c8, %bb1903 ], [ %v1_113fc, %dec_label_pc_11408 ], [ %v0_113fc, %dec_label_pc_11418 ], [ %v1_113fc, %bb1904 ], [ %v0_113fc, %dec_label_pc_113f4 ], [ %v0_113fc, %dec_label_pc_113ec ]
  %v1_11420 = add i32 %v0_11420, 1
  store i32 %v1_11420, i32* @r7, align 4
  %v2_11424 = icmp eq i32 %v1_11420, -1
  store i1 %v2_11424, i1* %cpsr_c.global-to-local, align 1
  %v7_11424 = icmp eq i32 %v0_11420, -2
  store i1 %v7_11424, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11424, label %dec_label_pc_110c4.backedge.thread2083, label %dec_label_pc_1142c

dec_label_pc_1142c:                               ; preds = %dec_label_pc_11420
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1142c = icmp eq i32 %v1_11420, 0
  store i1 %v2_1142c, i1* %cpsr_z.global-to-local, align 1
  %tmp1905 = icmp slt i32 %v1_11420, 1
  br i1 %tmp1905, label %dec_label_pc_1124c, label %dec_label_pc_11434

dec_label_pc_11434:                               ; preds = %dec_label_pc_1142c
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_11438 = call i32 @function_11bcc(i32 5)
  store i32 %v2_ef5c, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v3_11444 = call i32 @function_11ae8(i32 5, i32* nonnull %stack_var_-52)
  store i32 %v3_11444, i32* %r0.global-to-local, align 4
  %v3_11448 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_11448, i32* %r2.global-to-local, align 4
  store i32 %v3_11444, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11454 = load i32, i32* @r5, align 4
  %v1_11454 = add i32 %v0_11454, 4
  %v2_11454 = inttoptr i32 %v1_11454 to i32*
  %v3_11454 = load i32, i32* %v2_11454, align 4
  store i32 %v3_11454, i32* %r0.global-to-local, align 4
  %v4_11458 = inttoptr i32 %v3_11444 to i32*
  %v5_11458 = call i32 @function_132f0(i32 %v3_11454, i32* %v4_11458, i32 %v3_11448, i32 16384)
  store i32 %v5_11458, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_15398.203 to i32), i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11468 = load i32, i32* @r5, align 4
  %v1_11468 = add i32 %v0_11468, 4
  %v2_11468 = inttoptr i32 %v1_11468 to i32*
  %v3_11468 = load i32, i32* %v2_11468, align 4
  store i32 %v3_11468, i32* %r0.global-to-local, align 4
  %v5_1146c = call i32 @function_132f0(i32 %v3_11468, i32* bitcast ([3 x i8]* @global_var_15398.203 to i32*), i32 2, i32 16384)
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_11474 = call i32 @function_11b14(i32 5)
  store i32 %v1_11474, i32* %r0.global-to-local, align 4
  %v0_11478 = load i32, i32* @r5, align 4
  %v1_11478 = add i32 %v0_11478, 24
  %v2_11478 = inttoptr i32 %v1_11478 to i32*
  %v3_11478 = load i32, i32* %v2_11478, align 4
  store i32 %v3_11478, i32* %ip.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v2_11480 = add i32 %v0_11478, 12
  %v3_11480 = inttoptr i32 %v2_11480 to i32*
  store i32 6, i32* %v3_11480, align 4
  br label %dec_label_pc_11758

dec_label_pc_11488:                               ; preds = %dec_label_pc_11140
  %v1_11488 = add i32 %v0_11140, 24
  %v2_11488 = inttoptr i32 %v1_11488 to i32*
  %v3_11488 = load i32, i32* %v2_11488, align 4
  store i32 %v3_11488, i32* %ip.global-to-local, align 4
  %v1_1148c = add i32 %v3_11488, -1
  store i32 %v1_1148c, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11490 = icmp eq i32 %v1_1148c, 0
  store i1 %v2_11490, i1* %cpsr_z.global-to-local, align 1
  %tmp1906 = icmp slt i32 %v1_1148c, 1
  br i1 %tmp1906, label %dec_label_pc_110c4.backedge.thread, label %dec_label_pc_11498

dec_label_pc_11498:                               ; preds = %dec_label_pc_11488
  %v2_11498 = add i32 %v1_1148c, %v0_11140
  store i32 %v2_11498, i32* %r3.global-to-local, align 4
  %v1_1149c = add i32 %v2_11498, 28
  %v2_1149c = inttoptr i32 %v1_1149c to i8*
  %v3_1149c = load i8, i8* %v2_1149c, align 1
  %v4_1149c = zext i8 %v3_1149c to i32
  store i32 %v4_1149c, i32* %r3.global-to-local, align 4
  %v2_114a0 = icmp ugt i8 %v3_1149c, 57
  store i1 %v2_114a0, i1* %cpsr_c.global-to-local, align 1
  %v7_114a0 = icmp eq i8 %v3_1149c, 58
  store i1 %v7_114a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_114a0, label %dec_label_pc_114e4, label %bb1907

bb1907:                                           ; preds = %dec_label_pc_11498
  %v3_114a4 = icmp ugt i8 %v3_1149c, 61
  store i1 %v3_114a4, i1* %cpsr_c.global-to-local, align 1
  %v8_114a4 = icmp eq i8 %v3_1149c, 62
  store i1 %v8_114a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_114a4, label %dec_label_pc_114e4, label %dec_label_pc_114dc

dec_label_pc_114b0:                               ; preds = %dec_label_pc_114dc
  %v2_114b0 = icmp ugt i32 %v0_114b8, 34
  store i1 %v2_114b0, i1* %cpsr_c.global-to-local, align 1
  %v7_114b0 = icmp eq i32 %v0_114b8, 35
  store i1 %v7_114b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_114b0, label %dec_label_pc_114e4, label %dec_label_pc_114b8

dec_label_pc_114b8:                               ; preds = %dec_label_pc_114b0
  %v2_114b8 = icmp ugt i32 %v0_114b8, 36
  store i1 %v2_114b8, i1* %cpsr_c.global-to-local, align 1
  %v7_114b8 = icmp eq i32 %v0_114b8, 37
  store i1 %v7_114b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_114b8, label %dec_label_pc_114e4, label %dec_label_pc_114c0

dec_label_pc_114c0:                               ; preds = %dec_label_pc_114b8
  %v1_114c0 = add i32 %v0_114c0, -1
  store i32 %v1_114c0, i32* %r0.global-to-local, align 4
  %v2_114c0 = icmp ne i32 %v0_114c0, 0
  store i1 %v2_114c0, i1* %cpsr_c.global-to-local, align 1
  %v7_114c0 = icmp eq i32 %v0_114c0, 1
  store i1 %v7_114c0, i1* %cpsr_z.global-to-local, align 1
  %v2_114c4 = add i32 %v1_114c0, %v0_11140
  store i32 %v2_114c4, i32* %r3.global-to-local, align 4
  br i1 %v7_114c0, label %dec_label_pc_110c4.backedge.thread2083, label %dec_label_pc_114cc

dec_label_pc_114cc:                               ; preds = %dec_label_pc_114c0
  %v1_114cc = add i32 %v2_114c4, 28
  %v2_114cc = inttoptr i32 %v1_114cc to i8*
  %v3_114cc = load i8, i8* %v2_114cc, align 1
  %v4_114cc = zext i8 %v3_114cc to i32
  store i32 %v4_114cc, i32* %r3.global-to-local, align 4
  %v2_114d0 = icmp ugt i8 %v3_114cc, 61
  store i1 %v2_114d0, i1* %cpsr_c.global-to-local, align 1
  %v7_114d0 = icmp eq i8 %v3_114cc, 62
  store i1 %v7_114d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_114d0, label %dec_label_pc_114e4, label %bb1908

bb1908:                                           ; preds = %dec_label_pc_114cc
  %v3_114d4 = icmp ugt i8 %v3_114cc, 57
  store i1 %v3_114d4, i1* %cpsr_c.global-to-local, align 1
  %v8_114d4 = icmp eq i8 %v3_114cc, 58
  store i1 %v8_114d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_114d4, label %dec_label_pc_114e4, label %dec_label_pc_114dc

dec_label_pc_114dc:                               ; preds = %bb1907, %bb1908
  %v0_114c0 = phi i32 [ %v1_114c0, %bb1908 ], [ %v1_1148c, %bb1907 ]
  %v0_114b8 = phi i32 [ %v4_114cc, %bb1908 ], [ %v4_1149c, %bb1907 ]
  %v2_114dc = icmp ugt i32 %v0_114b8, 35
  store i1 %v2_114dc, i1* %cpsr_c.global-to-local, align 1
  %v7_114dc = icmp eq i32 %v0_114b8, 36
  store i1 %v7_114dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_114dc, label %dec_label_pc_114e4, label %dec_label_pc_114b0

dec_label_pc_114e4:                               ; preds = %dec_label_pc_114cc, %dec_label_pc_114dc, %bb1908, %dec_label_pc_114b8, %dec_label_pc_114b0, %dec_label_pc_11498, %bb1907
  %v0_114e4 = phi i32 [ %v1_1148c, %dec_label_pc_11498 ], [ %v1_1148c, %bb1907 ], [ %v1_114c0, %dec_label_pc_114cc ], [ %v0_114c0, %dec_label_pc_114dc ], [ %v1_114c0, %bb1908 ], [ %v0_114c0, %dec_label_pc_114b8 ], [ %v0_114c0, %dec_label_pc_114b0 ]
  %v1_114e4 = add i32 %v0_114e4, 1
  store i32 %v1_114e4, i32* @r7, align 4
  %v2_114e8 = icmp eq i32 %v1_114e4, -1
  store i1 %v2_114e8, i1* %cpsr_c.global-to-local, align 1
  %v7_114e8 = icmp eq i32 %v0_114e4, -2
  store i1 %v7_114e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_114e8, label %dec_label_pc_110c4.backedge.thread2083, label %dec_label_pc_114f0

dec_label_pc_114f0:                               ; preds = %dec_label_pc_114e4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_114f0 = icmp eq i32 %v1_114e4, 0
  store i1 %v2_114f0, i1* %cpsr_z.global-to-local, align 1
  %tmp1909 = icmp slt i32 %v1_114e4, 1
  br i1 %tmp1909, label %dec_label_pc_1124c, label %dec_label_pc_114f8

dec_label_pc_114f8:                               ; preds = %dec_label_pc_114f0
  store i32 6, i32* %r0.global-to-local, align 4
  %v1_114fc = call i32 @function_11bcc(i32 6)
  store i32 %v2_11034, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r0.global-to-local, align 4
  %v3_1150c = call i32 @function_11ae8(i32 6, i32* nonnull %stack_var_-48)
  store i32 %v3_1150c, i32* %r0.global-to-local, align 4
  %v3_11510 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_11510, i32* %r2.global-to-local, align 4
  store i32 %v3_1150c, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_1151c = load i32, i32* @r5, align 4
  %v1_1151c = add i32 %v0_1151c, 4
  %v2_1151c = inttoptr i32 %v1_1151c to i32*
  %v3_1151c = load i32, i32* %v2_1151c, align 4
  store i32 %v3_1151c, i32* %r0.global-to-local, align 4
  %v4_11520 = inttoptr i32 %v3_1150c to i32*
  %v5_11520 = call i32 @function_132f0(i32 %v3_1151c, i32* %v4_11520, i32 %v3_11510, i32 16384)
  store i32 %v5_11520, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_15398.203 to i32), i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11530 = load i32, i32* @r5, align 4
  %v1_11530 = add i32 %v0_11530, 4
  %v2_11530 = inttoptr i32 %v1_11530 to i32*
  %v3_11530 = load i32, i32* %v2_11530, align 4
  store i32 %v3_11530, i32* %r0.global-to-local, align 4
  %v5_11534 = call i32 @function_132f0(i32 %v3_11530, i32* bitcast ([3 x i8]* @global_var_15398.203 to i32*), i32 2, i32 16384)
  store i32 6, i32* %r0.global-to-local, align 4
  %v1_1153c = call i32 @function_11b14(i32 6)
  store i32 %v1_1153c, i32* %r0.global-to-local, align 4
  %v0_11540 = load i32, i32* @r5, align 4
  %v1_11540 = add i32 %v0_11540, 24
  %v2_11540 = inttoptr i32 %v1_11540 to i32*
  %v3_11540 = load i32, i32* %v2_11540, align 4
  store i32 %v3_11540, i32* %ip.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v2_11548 = add i32 %v0_11540, 12
  %v3_11548 = inttoptr i32 %v2_11548 to i32*
  store i32 7, i32* %v3_11548, align 4
  br label %dec_label_pc_11758

dec_label_pc_11550:                               ; preds = %dec_label_pc_11140
  %v1_11550 = add i32 %v0_11140, 24
  %v2_11550 = inttoptr i32 %v1_11550 to i32*
  %v3_11550 = load i32, i32* %v2_11550, align 4
  store i32 %v3_11550, i32* %ip.global-to-local, align 4
  %v1_11554 = add i32 %v3_11550, -1
  store i32 %v1_11554, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11558 = icmp eq i32 %v1_11554, 0
  store i1 %v2_11558, i1* %cpsr_z.global-to-local, align 1
  %tmp1910 = icmp slt i32 %v1_11554, 1
  br i1 %tmp1910, label %dec_label_pc_110c4.backedge.thread, label %dec_label_pc_11560

dec_label_pc_11560:                               ; preds = %dec_label_pc_11550
  %v2_11560 = add i32 %v1_11554, %v0_11140
  store i32 %v2_11560, i32* %r3.global-to-local, align 4
  %v1_11564 = add i32 %v2_11560, 28
  %v2_11564 = inttoptr i32 %v1_11564 to i8*
  %v3_11564 = load i8, i8* %v2_11564, align 1
  %v4_11564 = zext i8 %v3_11564 to i32
  store i32 %v4_11564, i32* %r3.global-to-local, align 4
  %v2_11568 = icmp ugt i8 %v3_11564, 61
  store i1 %v2_11568, i1* %cpsr_c.global-to-local, align 1
  %v7_11568 = icmp eq i8 %v3_11564, 62
  store i1 %v7_11568, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11568, label %dec_label_pc_115ac, label %bb1911

bb1911:                                           ; preds = %dec_label_pc_11560
  %v3_1156c = icmp ugt i8 %v3_11564, 57
  store i1 %v3_1156c, i1* %cpsr_c.global-to-local, align 1
  %v8_1156c = icmp eq i8 %v3_11564, 58
  store i1 %v8_1156c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_1156c, label %dec_label_pc_115ac, label %dec_label_pc_115a4

dec_label_pc_11578:                               ; preds = %dec_label_pc_115a4
  %v2_11578 = icmp ugt i32 %v0_11580, 34
  store i1 %v2_11578, i1* %cpsr_c.global-to-local, align 1
  %v7_11578 = icmp eq i32 %v0_11580, 35
  store i1 %v7_11578, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11578, label %dec_label_pc_115ac, label %dec_label_pc_11580

dec_label_pc_11580:                               ; preds = %dec_label_pc_11578
  %v2_11580 = icmp ugt i32 %v0_11580, 36
  store i1 %v2_11580, i1* %cpsr_c.global-to-local, align 1
  %v7_11580 = icmp eq i32 %v0_11580, 37
  store i1 %v7_11580, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11580, label %dec_label_pc_115ac, label %dec_label_pc_11588

dec_label_pc_11588:                               ; preds = %dec_label_pc_11580
  %v1_11588 = add i32 %v0_11588, -1
  store i32 %v1_11588, i32* %r0.global-to-local, align 4
  %v2_11588 = icmp ne i32 %v0_11588, 0
  store i1 %v2_11588, i1* %cpsr_c.global-to-local, align 1
  %v7_11588 = icmp eq i32 %v0_11588, 1
  store i1 %v7_11588, i1* %cpsr_z.global-to-local, align 1
  %v2_1158c = add i32 %v1_11588, %v0_11140
  store i32 %v2_1158c, i32* %r3.global-to-local, align 4
  br i1 %v7_11588, label %dec_label_pc_110c4.backedge.thread2083, label %dec_label_pc_11594

dec_label_pc_11594:                               ; preds = %dec_label_pc_11588
  %v1_11594 = add i32 %v2_1158c, 28
  %v2_11594 = inttoptr i32 %v1_11594 to i8*
  %v3_11594 = load i8, i8* %v2_11594, align 1
  %v4_11594 = zext i8 %v3_11594 to i32
  store i32 %v4_11594, i32* %r3.global-to-local, align 4
  %v2_11598 = icmp ugt i8 %v3_11594, 61
  store i1 %v2_11598, i1* %cpsr_c.global-to-local, align 1
  %v7_11598 = icmp eq i8 %v3_11594, 62
  store i1 %v7_11598, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11598, label %dec_label_pc_115ac, label %bb1912

bb1912:                                           ; preds = %dec_label_pc_11594
  %v3_1159c = icmp ugt i8 %v3_11594, 57
  store i1 %v3_1159c, i1* %cpsr_c.global-to-local, align 1
  %v8_1159c = icmp eq i8 %v3_11594, 58
  store i1 %v8_1159c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_1159c, label %dec_label_pc_115ac, label %dec_label_pc_115a4

dec_label_pc_115a4:                               ; preds = %bb1911, %bb1912
  %v0_11588 = phi i32 [ %v1_11588, %bb1912 ], [ %v1_11554, %bb1911 ]
  %v0_11580 = phi i32 [ %v4_11594, %bb1912 ], [ %v4_11564, %bb1911 ]
  %v2_115a4 = icmp ugt i32 %v0_11580, 35
  store i1 %v2_115a4, i1* %cpsr_c.global-to-local, align 1
  %v7_115a4 = icmp eq i32 %v0_11580, 36
  store i1 %v7_115a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_115a4, label %dec_label_pc_115ac, label %dec_label_pc_11578

dec_label_pc_115ac:                               ; preds = %dec_label_pc_11594, %dec_label_pc_115a4, %bb1912, %dec_label_pc_11580, %dec_label_pc_11578, %dec_label_pc_11560, %bb1911
  %v0_115ac = phi i32 [ %v1_11554, %dec_label_pc_11560 ], [ %v1_11554, %bb1911 ], [ %v1_11588, %dec_label_pc_11594 ], [ %v0_11588, %dec_label_pc_115a4 ], [ %v1_11588, %bb1912 ], [ %v0_11588, %dec_label_pc_11580 ], [ %v0_11588, %dec_label_pc_11578 ]
  %v1_115ac = add i32 %v0_115ac, 1
  store i32 %v1_115ac, i32* @r7, align 4
  %v2_115b0 = icmp eq i32 %v1_115ac, -1
  store i1 %v2_115b0, i1* %cpsr_c.global-to-local, align 1
  %v7_115b0 = icmp eq i32 %v0_115ac, -2
  store i1 %v7_115b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_115b0, label %dec_label_pc_110c4.backedge.thread2083, label %dec_label_pc_115b8

dec_label_pc_115b8:                               ; preds = %dec_label_pc_115ac
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_115b8 = icmp eq i32 %v1_115ac, 0
  store i1 %v2_115b8, i1* %cpsr_z.global-to-local, align 1
  %tmp1913 = icmp slt i32 %v1_115ac, 1
  br i1 %tmp1913, label %dec_label_pc_1124c, label %dec_label_pc_115c0

dec_label_pc_115c0:                               ; preds = %dec_label_pc_115b8
  store i32 7, i32* %r0.global-to-local, align 4
  %v1_115c4 = call i32 @function_11bcc(i32 7)
  store i32 %v2_ef5c, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r0.global-to-local, align 4
  %v3_115d0 = call i32 @function_11ae8(i32 7, i32* nonnull %stack_var_-52)
  store i32 %v3_115d0, i32* %r0.global-to-local, align 4
  %v3_115d4 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_115d4, i32* %r2.global-to-local, align 4
  store i32 %v3_115d0, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_115e0 = load i32, i32* @r5, align 4
  %v1_115e0 = add i32 %v0_115e0, 4
  %v2_115e0 = inttoptr i32 %v1_115e0 to i32*
  %v3_115e0 = load i32, i32* %v2_115e0, align 4
  store i32 %v3_115e0, i32* %r0.global-to-local, align 4
  %v4_115e4 = inttoptr i32 %v3_115d0 to i32*
  %v5_115e4 = call i32 @function_132f0(i32 %v3_115e0, i32* %v4_115e4, i32 %v3_115d4, i32 16384)
  store i32 %v5_115e4, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_15398.203 to i32), i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_115f4 = load i32, i32* @r5, align 4
  %v1_115f4 = add i32 %v0_115f4, 4
  %v2_115f4 = inttoptr i32 %v1_115f4 to i32*
  %v3_115f4 = load i32, i32* %v2_115f4, align 4
  store i32 %v3_115f4, i32* %r0.global-to-local, align 4
  %v5_115f8 = call i32 @function_132f0(i32 %v3_115f4, i32* bitcast ([3 x i8]* @global_var_15398.203 to i32*), i32 2, i32 16384)
  store i32 7, i32* %r0.global-to-local, align 4
  %v1_11600 = call i32 @function_11b14(i32 7)
  store i32 %v1_11600, i32* %r0.global-to-local, align 4
  %v0_11604 = load i32, i32* @r5, align 4
  %v1_11604 = add i32 %v0_11604, 24
  %v2_11604 = inttoptr i32 %v1_11604 to i32*
  %v3_11604 = load i32, i32* %v2_11604, align 4
  store i32 %v3_11604, i32* %ip.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v2_1160c = add i32 %v0_11604, 12
  %v3_1160c = inttoptr i32 %v2_1160c to i32*
  store i32 9, i32* %v3_1160c, align 4
  br label %dec_label_pc_11758

dec_label_pc_11614:                               ; preds = %dec_label_pc_11140
  %v1_11614 = add i32 %v0_11140, 24
  %v2_11614 = inttoptr i32 %v1_11614 to i32*
  %v3_11614 = load i32, i32* %v2_11614, align 4
  store i32 %v3_11614, i32* %ip.global-to-local, align 4
  %v1_11618 = add i32 %v3_11614, -1
  store i32 %v1_11618, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1161c = icmp eq i32 %v1_11618, 0
  store i1 %v2_1161c, i1* %cpsr_z.global-to-local, align 1
  %tmp1914 = icmp slt i32 %v1_11618, 1
  br i1 %tmp1914, label %dec_label_pc_110c4.backedge.thread, label %dec_label_pc_11624

dec_label_pc_11624:                               ; preds = %dec_label_pc_11614
  %v2_11624 = add i32 %v1_11618, %v0_11140
  store i32 %v2_11624, i32* %r3.global-to-local, align 4
  %v1_11628 = add i32 %v2_11624, 28
  %v2_11628 = inttoptr i32 %v1_11628 to i8*
  %v3_11628 = load i8, i8* %v2_11628, align 1
  %v4_11628 = zext i8 %v3_11628 to i32
  store i32 %v4_11628, i32* %r3.global-to-local, align 4
  %v2_1162c = icmp ugt i8 %v3_11628, 57
  store i1 %v2_1162c, i1* %cpsr_c.global-to-local, align 1
  %v7_1162c = icmp eq i8 %v3_11628, 58
  store i1 %v7_1162c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1162c, label %dec_label_pc_11670, label %bb1915

bb1915:                                           ; preds = %dec_label_pc_11624
  %v3_11630 = icmp ugt i8 %v3_11628, 61
  store i1 %v3_11630, i1* %cpsr_c.global-to-local, align 1
  %v8_11630 = icmp eq i8 %v3_11628, 62
  store i1 %v8_11630, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11630, label %dec_label_pc_11670, label %dec_label_pc_11668

dec_label_pc_1163c:                               ; preds = %dec_label_pc_11668
  %v2_1163c = icmp ugt i32 %v0_11644, 34
  store i1 %v2_1163c, i1* %cpsr_c.global-to-local, align 1
  %v7_1163c = icmp eq i32 %v0_11644, 35
  store i1 %v7_1163c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1163c, label %dec_label_pc_11670, label %dec_label_pc_11644

dec_label_pc_11644:                               ; preds = %dec_label_pc_1163c
  %v2_11644 = icmp ugt i32 %v0_11644, 36
  store i1 %v2_11644, i1* %cpsr_c.global-to-local, align 1
  %v7_11644 = icmp eq i32 %v0_11644, 37
  store i1 %v7_11644, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11644, label %dec_label_pc_11670, label %dec_label_pc_1164c

dec_label_pc_1164c:                               ; preds = %dec_label_pc_11644
  %v1_1164c = add i32 %v0_1164c, -1
  store i32 %v1_1164c, i32* %r0.global-to-local, align 4
  %v2_1164c = icmp ne i32 %v0_1164c, 0
  store i1 %v2_1164c, i1* %cpsr_c.global-to-local, align 1
  %v7_1164c = icmp eq i32 %v0_1164c, 1
  store i1 %v7_1164c, i1* %cpsr_z.global-to-local, align 1
  %v2_11650 = add i32 %v1_1164c, %v0_11140
  store i32 %v2_11650, i32* %r3.global-to-local, align 4
  br i1 %v7_1164c, label %dec_label_pc_110c4.backedge.thread2083, label %dec_label_pc_11658

dec_label_pc_11658:                               ; preds = %dec_label_pc_1164c
  %v1_11658 = add i32 %v2_11650, 28
  %v2_11658 = inttoptr i32 %v1_11658 to i8*
  %v3_11658 = load i8, i8* %v2_11658, align 1
  %v4_11658 = zext i8 %v3_11658 to i32
  store i32 %v4_11658, i32* %r3.global-to-local, align 4
  %v2_1165c = icmp ugt i8 %v3_11658, 61
  store i1 %v2_1165c, i1* %cpsr_c.global-to-local, align 1
  %v7_1165c = icmp eq i8 %v3_11658, 62
  store i1 %v7_1165c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1165c, label %dec_label_pc_11670, label %bb1916

bb1916:                                           ; preds = %dec_label_pc_11658
  %v3_11660 = icmp ugt i8 %v3_11658, 57
  store i1 %v3_11660, i1* %cpsr_c.global-to-local, align 1
  %v8_11660 = icmp eq i8 %v3_11658, 58
  store i1 %v8_11660, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11660, label %dec_label_pc_11670, label %dec_label_pc_11668

dec_label_pc_11668:                               ; preds = %bb1915, %bb1916
  %v0_1164c = phi i32 [ %v1_1164c, %bb1916 ], [ %v1_11618, %bb1915 ]
  %v0_11644 = phi i32 [ %v4_11658, %bb1916 ], [ %v4_11628, %bb1915 ]
  %v2_11668 = icmp ugt i32 %v0_11644, 35
  store i1 %v2_11668, i1* %cpsr_c.global-to-local, align 1
  %v7_11668 = icmp eq i32 %v0_11644, 36
  store i1 %v7_11668, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11668, label %dec_label_pc_11670, label %dec_label_pc_1163c

dec_label_pc_11670:                               ; preds = %dec_label_pc_11658, %dec_label_pc_11668, %bb1916, %dec_label_pc_11644, %dec_label_pc_1163c, %dec_label_pc_11624, %bb1915
  %v0_11670 = phi i32 [ %v1_11618, %dec_label_pc_11624 ], [ %v1_11618, %bb1915 ], [ %v1_1164c, %dec_label_pc_11658 ], [ %v0_1164c, %dec_label_pc_11668 ], [ %v1_1164c, %bb1916 ], [ %v0_1164c, %dec_label_pc_11644 ], [ %v0_1164c, %dec_label_pc_1163c ]
  %v1_11670 = add i32 %v0_11670, 1
  store i32 %v1_11670, i32* @r7, align 4
  %v2_11674 = icmp eq i32 %v1_11670, -1
  store i1 %v2_11674, i1* %cpsr_c.global-to-local, align 1
  %v7_11674 = icmp eq i32 %v0_11670, -2
  store i1 %v7_11674, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11674, label %dec_label_pc_110c4.backedge.thread2083, label %dec_label_pc_1167c

dec_label_pc_1167c:                               ; preds = %dec_label_pc_11670
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1167c = icmp eq i32 %v1_11670, 0
  store i1 %v2_1167c, i1* %cpsr_z.global-to-local, align 1
  %tmp1917 = icmp slt i32 %v1_11670, 1
  br i1 %tmp1917, label %dec_label_pc_1124c, label %dec_label_pc_11684

dec_label_pc_11684:                               ; preds = %dec_label_pc_1167c
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_11688 = call i32 @function_11bcc(i32 4)
  store i32 %v2_ef5c, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v3_11694 = call i32 @function_11ae8(i32 4, i32* nonnull %stack_var_-52)
  store i32 %v3_11694, i32* %r0.global-to-local, align 4
  %v3_11698 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_11698, i32* %r2.global-to-local, align 4
  store i32 %v3_11694, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_116a4 = load i32, i32* @r5, align 4
  %v1_116a4 = add i32 %v0_116a4, 4
  %v2_116a4 = inttoptr i32 %v1_116a4 to i32*
  %v3_116a4 = load i32, i32* %v2_116a4, align 4
  store i32 %v3_116a4, i32* %r0.global-to-local, align 4
  %v4_116a8 = inttoptr i32 %v3_11694 to i32*
  %v5_116a8 = call i32 @function_132f0(i32 %v3_116a4, i32* %v4_116a8, i32 %v3_11698, i32 16384)
  store i32 %v5_116a8, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_15398.203 to i32), i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_116b8 = load i32, i32* @r5, align 4
  %v1_116b8 = add i32 %v0_116b8, 4
  %v2_116b8 = inttoptr i32 %v1_116b8 to i32*
  %v3_116b8 = load i32, i32* %v2_116b8, align 4
  store i32 %v3_116b8, i32* %r0.global-to-local, align 4
  %v5_116bc = call i32 @function_132f0(i32 %v3_116b8, i32* bitcast ([3 x i8]* @global_var_15398.203 to i32*), i32 2, i32 16384)
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_116c4 = call i32 @function_11b14(i32 4)
  store i32 %v1_116c4, i32* %r0.global-to-local, align 4
  %v0_116c8 = load i32, i32* @r5, align 4
  %v1_116c8 = add i32 %v0_116c8, 24
  %v2_116c8 = inttoptr i32 %v1_116c8 to i32*
  %v3_116c8 = load i32, i32* %v2_116c8, align 4
  store i32 %v3_116c8, i32* %ip.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v2_116d0 = add i32 %v0_116c8, 12
  %v3_116d0 = inttoptr i32 %v2_116d0 to i32*
  store i32 8, i32* %v3_116d0, align 4
  br label %dec_label_pc_11758

dec_label_pc_116d8:                               ; preds = %dec_label_pc_11140
  store i32 10, i32* %r0.global-to-local, align 4
  %v1_116dc = call i32 @function_11bcc(i32 10)
  store i32 %v2_11034, i32* %r1.global-to-local, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  %v3_116ec = call i32 @function_11ae8(i32 10, i32* nonnull %stack_var_-48)
  %v3_116f0 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_116ec, i32* %r2.global-to-local, align 4
  %v1_116f8 = add i32 %v3_116f0, -1
  store i32 %v1_116f8, i32* %r3.global-to-local, align 4
  %v0_116fc = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_116fc, i32* %r0.global-to-local, align 4
  %v0_11700 = load i32, i32* @r5, align 4
  %v1_11700 = add i32 %v0_11700, 24
  %v2_11700 = inttoptr i32 %v1_11700 to i32*
  %v3_11700 = load i32, i32* %v2_11700, align 4
  store i32 %v3_11700, i32* %r1.global-to-local, align 4
  %v4_11704 = call i32 @function_1225c(i32 %v0_116fc, i32 %v3_11700, i32 %v3_116ec, i32 %v1_116f8)
  %v2_11708 = icmp eq i32 %v4_11704, -1
  store i1 %v2_11708, i1* %cpsr_c.global-to-local, align 1
  %v7_11708 = icmp eq i32 %v4_11704, -1
  store i1 %v7_11708, i1* %cpsr_z.global-to-local, align 1
  store i32 %v4_11704, i32* @r4, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  %v1_119c0 = call i32 @function_11b14(i32 10)
  br i1 %v7_11708, label %dec_label_pc_119bc, label %dec_label_pc_11714

dec_label_pc_11714:                               ; preds = %dec_label_pc_116d8
  store i32 %v1_119c0, i32* %r0.global-to-local, align 4
  %v0_1171c = load i32, i32* @r5, align 4
  %v1_1171c = add i32 %v0_1171c, 4
  %v2_1171c = inttoptr i32 %v1_1171c to i32*
  %v3_1171c = load i32, i32* %v2_1171c, align 4
  store i32 %v3_1171c, i32* %r0.global-to-local, align 4
  %v1_11720 = call i32 @function_12a9c(i32 %v3_1171c)
  store i32 %v1_11720, i32* %r0.global-to-local, align 4
  %v0_11724 = load i32, i32* @r5, align 4
  %v1_11724 = add i32 %v0_11724, 284
  %v2_11724 = inttoptr i32 %v1_11724 to i8*
  %v3_11724 = load i8, i8* %v2_11724, align 1
  %v4_11724 = zext i8 %v3_11724 to i32
  %v1_11728 = add nuw nsw i32 %v4_11724, 1
  %v1_1172c = urem i32 %v1_11728, 256
  store i32 %v1_1172c, i32* %r3.global-to-local, align 4
  store i32 -1, i32* @r4, align 4
  %v2_11734 = icmp ugt i32 %v1_1172c, 9
  store i1 %v2_11734, i1* %cpsr_c.global-to-local, align 1
  %v7_11734 = icmp eq i32 %v1_1172c, 10
  store i1 %v7_11734, i1* %cpsr_z.global-to-local, align 1
  %v2_11738 = add i32 %v0_11724, 4
  %v3_11738 = inttoptr i32 %v2_11738 to i32*
  store i32 -1, i32* %v3_11738, align 4
  %v0_1173c = load i32, i32* %r3.global-to-local, align 4
  %v1_1173c = trunc i32 %v0_1173c to i8
  %v2_1173c = load i32, i32* @r5, align 4
  %v3_1173c = add i32 %v2_1173c, 284
  %v4_1173c = inttoptr i32 %v3_1173c to i8*
  store i8 %v1_1173c, i8* %v4_1173c, align 1
  %v0_11740 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11740, label %dec_label_pc_11744, label %dec_label_pc_11984

dec_label_pc_11744:                               ; preds = %dec_label_pc_11714
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_11748 = load i32, i32* @r5, align 4
  %v1_11748 = add i32 %v0_11748, 24
  %v2_11748 = inttoptr i32 %v1_11748 to i32*
  %v3_11748 = load i32, i32* %v2_11748, align 4
  store i32 %v3_11748, i32* %ip.global-to-local, align 4
  %v2_1174c = add i32 %v0_11748, 12
  %v3_1174c = inttoptr i32 %v2_1174c to i32*
  store i32 0, i32* %v3_1174c, align 4
  %v0_11750 = load i32, i32* %r3.global-to-local, align 4
  %v1_11750 = trunc i32 %v0_11750 to i8
  %v2_11750 = load i32, i32* @r5, align 4
  %v3_11750 = add i32 %v2_11750, 284
  %v4_11750 = inttoptr i32 %v3_11750 to i8*
  store i8 %v1_11750, i8* %v4_11750, align 1
  store i32 -1, i32* @r7, align 4
  br label %dec_label_pc_11758

dec_label_pc_11758:                               ; preds = %.thread1144, %dec_label_pc_117ec, %dec_label_pc_11a10, %dec_label_pc_11984, %dec_label_pc_11684, %dec_label_pc_115c0, %dec_label_pc_114f8, %dec_label_pc_11434, %dec_label_pc_11388, %dec_label_pc_112dc, %dec_label_pc_11254, %dec_label_pc_11744
  %v0_11758 = load i32, i32* %ip.global-to-local, align 4
  %v1_11758 = load i32, i32* @r7, align 4
  %v2_11758 = sub i32 %v0_11758, %v1_11758
  %v3_11758 = icmp uge i32 %v0_11758, %v1_11758
  store i1 %v3_11758, i1* %cpsr_c.global-to-local, align 1
  %v4_11758 = xor i32 %v1_11758, %v0_11758
  %v5_11758 = xor i32 %v2_11758, %v0_11758
  %v6_11758 = and i32 %v5_11758, %v4_11758
  %v7_11758 = icmp slt i32 %v6_11758, 0
  %v8_11758 = icmp slt i32 %v2_11758, 0
  %v9_11758 = icmp eq i32 %v0_11758, %v1_11758
  store i1 %v9_11758, i1* %cpsr_z.global-to-local, align 1
  %v2_1175c = xor i1 %v8_11758, %v7_11758
  %v0_11758.v1_11758 = select i1 %v2_1175c, i32 %v0_11758, i32 %v1_11758
  store i32 %v0_11758.v1_11758, i32* %r1.global-to-local, align 4
  %v2_11764 = sub i32 %v0_11758, %v0_11758.v1_11758
  store i32 %v2_11764, i32* @r2, align 4
  %v1_11768 = load i32, i32* @r5, align 4
  %v2_11768 = add i32 %v1_11768, 24
  %v3_11768 = inttoptr i32 %v2_11768 to i32*
  store i32 %v2_11764, i32* %v3_11768, align 4
  %v0_1176c = load i32, i32* %r8.global-to-local, align 4
  %v1_1176c = load i32, i32* %r1.global-to-local, align 4
  %v2_1176c = add i32 %v1_1176c, %v0_1176c
  store i32 %v2_1176c, i32* @r1, align 4
  store i32 %v0_1176c, i32* @r0, align 4
  %v3_11774 = call i32 @function_130c0(i32 %v0_1176c, i32 %v2_1176c, i32 %v2_11764)
  store i32 %v3_11774, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11140

dec_label_pc_1177c:                               ; preds = %dec_label_pc_11140
  %v1_1177c = add i32 %v0_11140, 24
  %v2_1177c = inttoptr i32 %v1_1177c to i32*
  %v3_1177c = load i32, i32* %v2_1177c, align 4
  store i32 %v3_1177c, i32* %ip.global-to-local, align 4
  %v1_11780 = add i32 %v3_1177c, -1
  store i32 %v1_11780, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11784 = icmp eq i32 %v1_11780, 0
  store i1 %v2_11784, i1* %cpsr_z.global-to-local, align 1
  %tmp1920 = icmp slt i32 %v1_11780, 1
  br i1 %tmp1920, label %dec_label_pc_110c4.backedge.thread, label %dec_label_pc_1178c

dec_label_pc_1178c:                               ; preds = %dec_label_pc_1177c
  %v2_1178c = add i32 %v1_11780, %v0_11140
  store i32 %v2_1178c, i32* %r3.global-to-local, align 4
  %v1_11790 = add i32 %v2_1178c, 28
  %v2_11790 = inttoptr i32 %v1_11790 to i8*
  %v3_11790 = load i8, i8* %v2_11790, align 1
  %v4_11790 = zext i8 %v3_11790 to i32
  store i32 %v4_11790, i32* %r3.global-to-local, align 4
  %v2_11794 = icmp ugt i8 %v3_11790, 61
  store i1 %v2_11794, i1* %cpsr_c.global-to-local, align 1
  %v7_11794 = icmp eq i8 %v3_11790, 62
  store i1 %v7_11794, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11794, label %dec_label_pc_117d8, label %bb1921

bb1921:                                           ; preds = %dec_label_pc_1178c
  %v3_11798 = icmp ugt i8 %v3_11790, 57
  store i1 %v3_11798, i1* %cpsr_c.global-to-local, align 1
  %v8_11798 = icmp eq i8 %v3_11790, 58
  store i1 %v8_11798, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11798, label %dec_label_pc_117d8, label %dec_label_pc_117d0

dec_label_pc_117a4:                               ; preds = %dec_label_pc_117d0
  %v2_117a4 = icmp ugt i32 %v0_117ac, 34
  store i1 %v2_117a4, i1* %cpsr_c.global-to-local, align 1
  %v7_117a4 = icmp eq i32 %v0_117ac, 35
  store i1 %v7_117a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_117a4, label %dec_label_pc_117d8, label %dec_label_pc_117ac

dec_label_pc_117ac:                               ; preds = %dec_label_pc_117a4
  %v2_117ac = icmp ugt i32 %v0_117ac, 36
  store i1 %v2_117ac, i1* %cpsr_c.global-to-local, align 1
  %v7_117ac = icmp eq i32 %v0_117ac, 37
  store i1 %v7_117ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_117ac, label %dec_label_pc_117d8, label %dec_label_pc_117b4

dec_label_pc_117b4:                               ; preds = %dec_label_pc_117ac
  %v1_117b4 = add i32 %v0_117b4, -1
  store i32 %v1_117b4, i32* %r0.global-to-local, align 4
  %v2_117b4 = icmp ne i32 %v0_117b4, 0
  store i1 %v2_117b4, i1* %cpsr_c.global-to-local, align 1
  %v7_117b4 = icmp eq i32 %v0_117b4, 1
  store i1 %v7_117b4, i1* %cpsr_z.global-to-local, align 1
  %v2_117b8 = add i32 %v1_117b4, %v0_11140
  store i32 %v2_117b8, i32* %r3.global-to-local, align 4
  br i1 %v7_117b4, label %dec_label_pc_110c4.backedge.thread2083, label %dec_label_pc_117c0

dec_label_pc_117c0:                               ; preds = %dec_label_pc_117b4
  %v1_117c0 = add i32 %v2_117b8, 28
  %v2_117c0 = inttoptr i32 %v1_117c0 to i8*
  %v3_117c0 = load i8, i8* %v2_117c0, align 1
  %v4_117c0 = zext i8 %v3_117c0 to i32
  store i32 %v4_117c0, i32* %r3.global-to-local, align 4
  %v2_117c4 = icmp ugt i8 %v3_117c0, 61
  store i1 %v2_117c4, i1* %cpsr_c.global-to-local, align 1
  %v7_117c4 = icmp eq i8 %v3_117c0, 62
  store i1 %v7_117c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_117c4, label %dec_label_pc_117d8, label %bb1922

bb1922:                                           ; preds = %dec_label_pc_117c0
  %v3_117c8 = icmp ugt i8 %v3_117c0, 57
  store i1 %v3_117c8, i1* %cpsr_c.global-to-local, align 1
  %v8_117c8 = icmp eq i8 %v3_117c0, 58
  store i1 %v8_117c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_117c8, label %dec_label_pc_117d8, label %dec_label_pc_117d0

dec_label_pc_117d0:                               ; preds = %bb1921, %bb1922
  %v0_117b4 = phi i32 [ %v1_117b4, %bb1922 ], [ %v1_11780, %bb1921 ]
  %v0_117ac = phi i32 [ %v4_117c0, %bb1922 ], [ %v4_11790, %bb1921 ]
  %v2_117d0 = icmp ugt i32 %v0_117ac, 35
  store i1 %v2_117d0, i1* %cpsr_c.global-to-local, align 1
  %v7_117d0 = icmp eq i32 %v0_117ac, 36
  store i1 %v7_117d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_117d0, label %dec_label_pc_117d8, label %dec_label_pc_117a4

dec_label_pc_117d8:                               ; preds = %dec_label_pc_117c0, %dec_label_pc_117d0, %bb1922, %dec_label_pc_117ac, %dec_label_pc_117a4, %dec_label_pc_1178c, %bb1921
  %v0_117d8 = phi i32 [ %v1_11780, %dec_label_pc_1178c ], [ %v1_11780, %bb1921 ], [ %v1_117b4, %dec_label_pc_117c0 ], [ %v0_117b4, %dec_label_pc_117d0 ], [ %v1_117b4, %bb1922 ], [ %v0_117b4, %dec_label_pc_117ac ], [ %v0_117b4, %dec_label_pc_117a4 ]
  %v1_117d8 = add i32 %v0_117d8, 1
  store i32 %v1_117d8, i32* @r7, align 4
  %v2_117dc = icmp eq i32 %v1_117d8, -1
  store i1 %v2_117dc, i1* %cpsr_c.global-to-local, align 1
  %v7_117dc = icmp eq i32 %v0_117d8, -2
  store i1 %v7_117dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_117dc, label %dec_label_pc_110c4.backedge.thread2083, label %dec_label_pc_117e4

dec_label_pc_117e4:                               ; preds = %dec_label_pc_117d8
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_117e4 = icmp eq i32 %v1_117d8, 0
  store i1 %v2_117e4, i1* %cpsr_z.global-to-local, align 1
  %tmp1923 = icmp slt i32 %v1_117d8, 1
  br i1 %tmp1923, label %dec_label_pc_1124c, label %dec_label_pc_117ec

dec_label_pc_117ec:                               ; preds = %dec_label_pc_117e4
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_117f0 = call i32 @function_11bcc(i32 8)
  store i32 %v2_ef5c, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r0.global-to-local, align 4
  %v3_117fc = call i32 @function_11ae8(i32 8, i32* nonnull %stack_var_-52)
  store i32 %v3_117fc, i32* %r0.global-to-local, align 4
  %v3_11800 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_11800, i32* %r2.global-to-local, align 4
  store i32 %v3_117fc, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_1180c = load i32, i32* @r5, align 4
  %v1_1180c = add i32 %v0_1180c, 4
  %v2_1180c = inttoptr i32 %v1_1180c to i32*
  %v3_1180c = load i32, i32* %v2_1180c, align 4
  store i32 %v3_1180c, i32* %r0.global-to-local, align 4
  %v4_11810 = inttoptr i32 %v3_117fc to i32*
  %v5_11810 = call i32 @function_132f0(i32 %v3_1180c, i32* %v4_11810, i32 %v3_11800, i32 16384)
  store i32 %v5_11810, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_15398.203 to i32), i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11820 = load i32, i32* @r5, align 4
  %v1_11820 = add i32 %v0_11820, 4
  %v2_11820 = inttoptr i32 %v1_11820 to i32*
  %v3_11820 = load i32, i32* %v2_11820, align 4
  store i32 %v3_11820, i32* %r0.global-to-local, align 4
  %v5_11824 = call i32 @function_132f0(i32 %v3_11820, i32* bitcast ([3 x i8]* @global_var_15398.203 to i32*), i32 2, i32 16384)
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_1182c = call i32 @function_11b14(i32 8)
  store i32 %v1_1182c, i32* %r0.global-to-local, align 4
  %v0_11830 = load i32, i32* @r5, align 4
  %v1_11830 = add i32 %v0_11830, 24
  %v2_11830 = inttoptr i32 %v1_11830 to i32*
  %v3_11830 = load i32, i32* %v2_11830, align 4
  store i32 %v3_11830, i32* %ip.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v2_11838 = add i32 %v0_11830, 12
  %v3_11838 = inttoptr i32 %v2_11838 to i32*
  store i32 10, i32* %v3_11838, align 4
  br label %dec_label_pc_11758

dec_label_pc_11840:                               ; preds = %dec_label_pc_111c4
  store i32 ptrtoint (i32* @global_var_153a9.205 to i32), i32* @r1, align 4
  store i32 3, i32* @r2, align 4
  store i32 %v2_1184c, i32* @r0, align 4
  %v3_11850 = call i32 @function_130b0(i32 %v2_1184c, i32 ptrtoint (i32* @global_var_153a9.205 to i32), i32 3)
  store i32 9, i32* @r2, align 4
  store i32 %v2_1185c, i32* @r0, align 4
  store i32 ptrtoint (i8* @global_var_153a0.207 to i32), i32* @r1, align 4
  %v3_11864 = call i32 @function_130b0(i32 %v2_1185c, i32 ptrtoint (i8* @global_var_153a0.207 to i32), i32 9)
  store i32 %v3_11864, i32* %r0.global-to-local, align 4
  %v0_11868 = load i32, i32* @r5, align 4
  %v1_11868 = add i32 %v0_11868, 24
  %v2_11868 = inttoptr i32 %v1_11868 to i32*
  %v3_11868 = load i32, i32* %v2_11868, align 4
  store i32 %v3_11868, i32* %ip.global-to-local, align 4
  %v0_1186c = load i32, i32* @r6, align 4
  %v1_1186c = add i32 %v0_1186c, 2
  store i32 %v1_1186c, i32* %r2.global-to-local, align 4
  %v0_11870 = load i32, i32* %r8.global-to-local, align 4
  %v2_11870 = add i32 %v0_11870, %v3_11868
  store i32 %v2_11870, i32* %r3.global-to-local, align 4
  %v3_11874 = icmp uge i32 %v2_11870, %v1_1186c
  store i1 %v3_11874, i1* %cpsr_c.global-to-local, align 1
  %v9_11874 = icmp eq i32 %v2_11870, %v1_1186c
  store i1 %v9_11874, i1* %cpsr_z.global-to-local, align 1
  %v2_11878 = xor i1 %v3_11874, true
  %v3_11878 = or i1 %v9_11874, %v2_11878
  br i1 %v3_11878, label %dec_label_pc_11840.dec_label_pc_1123c.loopexit_crit_edge, label %dec_label_pc_1187c

dec_label_pc_11840.dec_label_pc_1123c.loopexit_crit_edge: ; preds = %dec_label_pc_11840
  %v0_1123c.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1123c

dec_label_pc_1187c:                               ; preds = %dec_label_pc_11840
  %v0_1187c = load i32, i32* @r4, align 4
  %v1_1187c = add i32 %v0_1187c, 1
  %v2_1187c = inttoptr i32 %v1_1187c to i8*
  %v3_1187c = load i8, i8* %v2_1187c, align 1
  %v4_1187c = zext i8 %v3_1187c to i32
  store i32 %v4_1187c, i32* %r3.global-to-local, align 4
  %v2_11880 = icmp ugt i8 %v3_1187c, 30
  store i1 %v2_11880, i1* %cpsr_c.global-to-local, align 1
  %v7_11880 = icmp eq i8 %v3_1187c, 31
  store i1 %v7_11880, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11880, label %dec_label_pc_11958, label %dec_label_pc_11888

dec_label_pc_11888:                               ; preds = %dec_label_pc_1187c
  %v1_11888 = add i32 %v0_1187c, -1
  %v2_11888 = inttoptr i32 %v1_11888 to i8*
  %v3_11888 = load i8, i8* %v2_11888, align 1
  %v4_11888 = zext i8 %v3_11888 to i32
  store i32 %v4_11888, i32* %r3.global-to-local, align 4
  %v2_1188c = icmp ugt i8 %v3_11888, -4
  store i1 %v2_1188c, i1* %cpsr_c.global-to-local, align 1
  %v7_1188c = icmp eq i8 %v3_11888, -3
  store i1 %v7_1188c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1188c, label %bb1924, label %dec_label_pc_11898

bb1924:                                           ; preds = %dec_label_pc_11888
  %v1_11890 = load i32, i32* %sl.global-to-local, align 4
  %v2_11890 = trunc i32 %v1_11890 to i8
  store i8 %v2_11890, i8* %v2_11888, align 1
  %v0_11894.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11894.pr, label %dec_label_pc_111d8, label %.dec_label_pc_11898_crit_edge

.dec_label_pc_11898_crit_edge:                    ; preds = %bb1924
  %v0_11898.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_11898

dec_label_pc_11898:                               ; preds = %.dec_label_pc_11898_crit_edge, %dec_label_pc_11888
  %v0_11898 = phi i32 [ %v0_11898.pre, %.dec_label_pc_11898_crit_edge ], [ %v4_11888, %dec_label_pc_11888 ]
  %v2_11898 = icmp ugt i32 %v0_11898, 250
  store i1 %v2_11898, i1* %cpsr_c.global-to-local, align 1
  %v7_11898 = icmp eq i32 %v0_11898, 251
  store i1 %v7_11898, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11898, label %bb1925, label %dec_label_pc_111d8

bb1925:                                           ; preds = %dec_label_pc_11898
  store i32 -3, i32* %r0.global-to-local, align 4
  %v3_118a0 = load i32, i32* @r4, align 4
  %v4_118a0 = add i32 %v3_118a0, -1
  %v5_118a0 = inttoptr i32 %v4_118a0 to i8*
  store i8 -3, i8* %v5_118a0, align 1
  br label %dec_label_pc_111d8

dec_label_pc_118a8:                               ; preds = %dec_label_pc_11348, %dec_label_pc_1136c, %dec_label_pc_11318
  store i32 25, i32* %r0.global-to-local, align 4
  %v1_118ac = call i32 @function_11bcc(i32 25)
  store i32 %v2_11034, i32* %r1.global-to-local, align 4
  store i32 25, i32* %r0.global-to-local, align 4
  %v3_118bc = call i32 @function_11ae8(i32 25, i32* nonnull %stack_var_-48)
  %v3_118c0 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_118bc, i32* %r2.global-to-local, align 4
  %v1_118c8 = add i32 %v3_118c0, -1
  store i32 %v1_118c8, i32* %r3.global-to-local, align 4
  %v0_118cc = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_118cc, i32* %r0.global-to-local, align 4
  %v0_118d0 = load i32, i32* @r5, align 4
  %v1_118d0 = add i32 %v0_118d0, 24
  %v2_118d0 = inttoptr i32 %v1_118d0 to i32*
  %v3_118d0 = load i32, i32* %v2_118d0, align 4
  store i32 %v3_118d0, i32* %r1.global-to-local, align 4
  %v4_118d4 = call i32 @function_1225c(i32 %v0_118cc, i32 %v3_118d0, i32 %v3_118bc, i32 %v1_118c8)
  store i32 %v4_118d4, i32* %r0.global-to-local, align 4
  %v1_118d8 = add i32 %v4_118d4, 1
  store i32 %v1_118d8, i32* @r7, align 4
  %v2_118d8 = icmp eq i32 %v4_118d4, -1
  store i1 %v2_118d8, i1* %cpsr_c.global-to-local, align 1
  %v7_118d8 = icmp eq i32 %v1_118d8, 0
  store i1 %v7_118d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_118d8, label %thread-pre-split689, label %bb1926

bb1926:                                           ; preds = %dec_label_pc_118a8
  store i32 1, i32* @r7, align 4
  br label %thread-pre-split689

thread-pre-split689:                              ; preds = %dec_label_pc_118a8, %bb1926
  %v0_118e0 = phi i1 [ false, %bb1926 ], [ true, %dec_label_pc_118a8 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 %v0_118e0, i1* %cpsr_z.global-to-local, align 1
  store i32 25, i32* %r0.global-to-local, align 4
  %v1_11ac4 = call i32 @function_11b14(i32 25)
  store i32 %v1_11ac4, i32* %r0.global-to-local, align 4
  br i1 %v0_118e0, label %dec_label_pc_11ac0, label %dec_label_pc_118e8

dec_label_pc_118e8:                               ; preds = %thread-pre-split689
  %v0_118f0 = load i32, i32* @r7, align 4
  %v3_118f0 = icmp eq i32 %v0_118f0, -1
  store i1 %v3_118f0, i1* %cpsr_c.global-to-local, align 1
  %v8_118f0 = icmp eq i32 %v0_118f0, -1
  store i1 %v8_118f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_118f0, label %dec_label_pc_110c0.loopexit, label %dec_label_pc_11380

dec_label_pc_118fc:                               ; preds = %dec_label_pc_110dc
  br i1 %v2_11100, label %dec_label_pc_11adc, label %dec_label_pc_11900

dec_label_pc_11900:                               ; preds = %dec_label_pc_118fc
  %v3_11900 = icmp eq i32 %v5_110fc, -1
  store i1 %v3_11900, i1* %cpsr_c.global-to-local, align 1
  %v8_11900 = icmp eq i32 %v5_110fc, -1
  store i1 %v8_11900, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_11900, label %dec_label_pc_11908, label %dec_label_pc_11128

dec_label_pc_11908:                               ; preds = %dec_label_pc_11900
  %v0_11908 = load i32, i32* %sb.global-to-local, align 4
  %v1_11908 = inttoptr i32 %v0_11908 to i32*
  %v2_11908 = load i32, i32* %v1_11908, align 4
  store i32 %v2_11908, i32* %r3.global-to-local, align 4
  %v2_1190c = icmp ugt i32 %v2_11908, 10
  store i1 %v2_1190c, i1* %cpsr_c.global-to-local, align 1
  %v7_1190c = icmp eq i32 %v2_11908, 11
  store i1 %v7_1190c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1190c, label %dec_label_pc_10f00, label %dec_label_pc_11914

dec_label_pc_11914:                               ; preds = %dec_label_pc_11908, %dec_label_pc_11adc
  %v0_11914 = load i32, i32* @r5, align 4
  %v1_11914 = add i32 %v0_11914, 4
  %v2_11914 = inttoptr i32 %v1_11914 to i32*
  %v3_11914 = load i32, i32* %v2_11914, align 4
  store i32 %v3_11914, i32* %r0.global-to-local, align 4
  %v1_11918 = call i32 @function_12a9c(i32 %v3_11914)
  store i32 %v1_11918, i32* %r0.global-to-local, align 4
  %v0_1191c = load i32, i32* @r5, align 4
  %v1_1191c = add i32 %v0_1191c, 284
  %v2_1191c = inttoptr i32 %v1_1191c to i8*
  %v3_1191c = load i8, i8* %v2_1191c, align 1
  %v4_1191c = zext i8 %v3_1191c to i32
  %v1_11920 = add nuw nsw i32 %v4_1191c, 1
  %v1_11924 = urem i32 %v1_11920, 256
  store i32 %v1_11924, i32* %r3.global-to-local, align 4
  %v2_11928 = icmp ugt i32 %v1_11924, 8
  store i1 %v2_11928, i1* %cpsr_c.global-to-local, align 1
  %v7_11928 = icmp eq i32 %v1_11924, 9
  store i1 %v7_11928, i1* %cpsr_z.global-to-local, align 1
  %v1_1192c = trunc i32 %v1_11920 to i8
  store i8 %v1_1192c, i8* %v2_1191c, align 1
  %v0_11930 = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_11930 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v2_11930 = xor i1 %v1_11930, true
  %v3_11930 = and i1 %v0_11930, %v2_11930
  br i1 %v3_11930, label %bb1927, label %.thread1158

.thread1158:                                      ; preds = %dec_label_pc_11914
  store i32 -1, i32* @r4, align 4
  %v1_1193c11541159 = load i32, i32* @r5, align 4
  %v2_1193c11551160 = add i32 %v1_1193c11541159, 4
  %v3_1193c11561161 = inttoptr i32 %v2_1193c11551160 to i32*
  store i32 -1, i32* %v3_1193c11561161, align 4
  br label %bb1928

bb1927:                                           ; preds = %dec_label_pc_11914
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 -1, i32* @r4, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_1193c1150 = load i32, i32* @r5, align 4
  %v2_1193c1151 = add i32 %v1_1193c1150, 4
  %v3_1193c1152 = inttoptr i32 %v2_1193c1151 to i32*
  store i32 -1, i32* %v3_1193c1152, align 4
  %v4_11940 = load i32, i32* %r2.global-to-local, align 4
  %v5_11940 = load i32, i32* @r5, align 4
  %v6_11940 = add i32 %v5_11940, 12
  %v7_11940 = inttoptr i32 %v6_11940 to i32*
  store i32 %v4_11940, i32* %v7_11940, align 4
  %v4_11944 = load i32, i32* %r3.global-to-local, align 4
  %v5_11944 = trunc i32 %v4_11944 to i8
  %v6_11944 = load i32, i32* @r5, align 4
  %v7_11944 = add i32 %v6_11944, 284
  %v8_11944 = inttoptr i32 %v7_11944 to i8*
  store i8 %v5_11944, i8* %v8_11944, align 1
  %v0_11948.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_11948.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %bb1928

bb1928:                                           ; preds = %.thread1158, %bb1927
  %v1_11948 = phi i1 [ %v1_11948.pre, %bb1927 ], [ %v1_11930, %.thread1158 ]
  %v0_11948 = phi i1 [ %v0_11948.pre, %bb1927 ], [ %v0_11930, %.thread1158 ]
  %v2_11948 = xor i1 %v1_11948, true
  %v3_11948 = and i1 %v0_11948, %v2_11948
  br i1 %v3_11948, label %dec_label_pc_10f00, label %dec_label_pc_1194c

dec_label_pc_1194c:                               ; preds = %bb1928
  %v0_1194c = load i32, i32* @r5, align 4
  store i32 %v0_1194c, i32* @r0, align 4
  %v0_11950 = call i32 @function_ea30()
  store i32 %v0_11950, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10f00

dec_label_pc_11958:                               ; preds = %dec_label_pc_1187c
  store i32 %v2_1184c, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v1_11968 = add i32 %v0_11868, 4
  %v2_11968 = inttoptr i32 %v1_11968 to i32*
  %v3_11968 = load i32, i32* %v2_11968, align 4
  store i32 %v3_11968, i32* %r0.global-to-local, align 4
  %v5_1196c = call i32 @function_132f0(i32 %v3_11968, i32* nonnull %stack_var_-39, i32 3, i32 16384)
  store i32 %v5_1196c, i32* %r0.global-to-local, align 4
  store i32 %v2_11854, i32* %r1.global-to-local, align 4
  %v0_11974 = load i32, i32* @r5, align 4
  %v1_11974 = add i32 %v0_11974, 4
  %v2_11974 = inttoptr i32 %v1_11974 to i32*
  %v3_11974 = load i32, i32* %v2_11974, align 4
  store i32 %v3_11974, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1121c

dec_label_pc_11984:                               ; preds = %dec_label_pc_11714
  %v0_11984 = load i32, i32* @r5, align 4
  store i32 %v0_11984, i32* @r0, align 4
  %v0_11988 = call i32 @function_ea30()
  store i32 %v0_11988, i32* %r0.global-to-local, align 4
  %v0_1198c = load i32, i32* @r5, align 4
  %v1_1198c = add i32 %v0_1198c, 24
  %v2_1198c = inttoptr i32 %v1_1198c to i32*
  %v3_1198c = load i32, i32* %v2_1198c, align 4
  store i32 %v3_1198c, i32* %ip.global-to-local, align 4
  %v0_11990 = load i32, i32* @r4, align 4
  store i32 %v0_11990, i32* @r7, align 4
  br label %dec_label_pc_11758

dec_label_pc_11998:                               ; preds = %dec_label_pc_110cc
  store i32 %.pre, i32* @r0, align 4
  %v1_119a0 = add i32 %v0_11998, 92
  store i32 %v1_119a0, i32* @r1, align 4
  store i32 192, i32* @r2, align 4
  %v3_119a8 = call i32 @function_130c0(i32 %.pre, i32 %v1_119a0, i32 192)
  store i32 %v3_119a8, i32* %r0.global-to-local, align 4
  %v0_119ac = load i32, i32* @r5, align 4
  %v1_119ac = add i32 %v0_119ac, 24
  %v2_119ac = inttoptr i32 %v1_119ac to i32*
  %v3_119ac = load i32, i32* %v2_119ac, align 4
  store i32 %v3_119ac, i32* %r3.global-to-local, align 4
  %v1_119b0 = add i32 %v3_119ac, -64
  store i32 %v1_119b0, i32* %ip.global-to-local, align 4
  store i32 %v1_119b0, i32* %v2_119ac, align 4
  br label %dec_label_pc_110dc

dec_label_pc_119bc:                               ; preds = %dec_label_pc_116d8
  store i32 9, i32* %r0.global-to-local, align 4
  %v1_119c8 = call i32 @function_11bcc(i32 9)
  store i32 %v2_11034, i32* %r1.global-to-local, align 4
  store i32 9, i32* %r0.global-to-local, align 4
  %v3_119d8 = call i32 @function_11ae8(i32 9, i32* nonnull %stack_var_-48)
  store i32 %v3_119d8, i32* %r0.global-to-local, align 4
  %v3_119dc = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_119d8, i32* %r2.global-to-local, align 4
  %v1_119e4 = add i32 %v3_119dc, -1
  store i32 %v1_119e4, i32* %r3.global-to-local, align 4
  %v0_119e8 = load i32, i32* @r5, align 4
  %v1_119e8 = add i32 %v0_119e8, 24
  %v2_119e8 = inttoptr i32 %v1_119e8 to i32*
  %v3_119e8 = load i32, i32* %v2_119e8, align 4
  store i32 %v3_119e8, i32* %r1.global-to-local, align 4
  %v0_119ec = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_119ec, i32* %r0.global-to-local, align 4
  %v4_119f0 = call i32 @function_1225c(i32 %v0_119ec, i32 %v3_119e8, i32 %v3_119d8, i32 %v1_119e4)
  store i32 %v4_119f0, i32* @r7, align 4
  store i32 9, i32* %r0.global-to-local, align 4
  %v1_119fc = call i32 @function_11b14(i32 9)
  store i32 %v1_119fc, i32* %r0.global-to-local, align 4
  %v0_11a00 = load i32, i32* @r7, align 4
  %v2_11a00 = icmp eq i32 %v0_11a00, -1
  store i1 %v2_11a00, i1* %cpsr_c.global-to-local, align 1
  %v7_11a00 = icmp eq i32 %v0_11a00, -1
  store i1 %v7_11a00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11a00, label %dec_label_pc_110c0.loopexit, label %dec_label_pc_11a08

dec_label_pc_11a08:                               ; preds = %dec_label_pc_119bc
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11a08 = icmp eq i32 %v0_11a00, 0
  store i1 %v2_11a08, i1* %cpsr_z.global-to-local, align 1
  %tmp1929 = icmp slt i32 %v0_11a00, 1
  br i1 %tmp1929, label %dec_label_pc_1124c, label %dec_label_pc_11a10

dec_label_pc_11a10:                               ; preds = %dec_label_pc_11a08
  %v0_11a10 = load i32, i32* @r5, align 4
  %v1_11a10 = add i32 %v0_11a10, 20
  %v2_11a10 = inttoptr i32 %v1_11a10 to i8*
  %v3_11a10 = load i8, i8* %v2_11a10, align 1
  %v4_11a10 = zext i8 %v3_11a10 to i32
  store i32 %v4_11a10, i32* %r3.global-to-local, align 4
  %v1_11a14 = add i32 %v0_11a10, 21
  %v2_11a14 = inttoptr i32 %v1_11a14 to i8*
  %v3_11a14 = load i8, i8* %v2_11a14, align 1
  %v4_11a14 = zext i8 %v3_11a14 to i32
  store i32 %v4_11a14, i32* %r1.global-to-local, align 4
  %v1_11a18 = inttoptr i32 %v0_11a10 to i32*
  %v2_11a18 = load i32, i32* %v1_11a18, align 4
  store i32 %v2_11a18, i32* %r2.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v4_11a1c = mul nuw nsw i32 %v4_11a14, 256
  %v5_11a1c = or i32 %v4_11a1c, %v4_11a10
  store i32 %v5_11a1c, i32* %r1.global-to-local, align 4
  %v1_11a20 = add i32 %v0_11a10, 16
  %v2_11a20 = inttoptr i32 %v1_11a20 to i32*
  %v3_11a20 = load i32, i32* %v2_11a20, align 4
  store i32 %v3_11a20, i32* %r0.global-to-local, align 4
  %v5_11a24 = call i32 @function_eb04(i32 %v3_11a20, i8 %v3_11a10, i32 %v2_11a18, i32 %v4_11a10)
  store i32 %v5_11a24, i32* %r0.global-to-local, align 4
  %v0_11a28 = load i32, i32* @r5, align 4
  %v1_11a28 = add i32 %v0_11a28, 4
  %v2_11a28 = inttoptr i32 %v1_11a28 to i32*
  %v3_11a28 = load i32, i32* %v2_11a28, align 4
  store i32 %v3_11a28, i32* %r0.global-to-local, align 4
  %v1_11a2c = call i32 @function_12a9c(i32 %v3_11a28)
  store i32 %v1_11a2c, i32* %r0.global-to-local, align 4
  %v0_11a30 = load i32, i32* @r5, align 4
  %v1_11a30 = add i32 %v0_11a30, 24
  %v2_11a30 = inttoptr i32 %v1_11a30 to i32*
  %v3_11a30 = load i32, i32* %v2_11a30, align 4
  store i32 %v3_11a30, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_11a38 = load i32, i32* @r4, align 4
  %v2_11a38 = add i32 %v0_11a30, 4
  %v3_11a38 = inttoptr i32 %v2_11a38 to i32*
  store i32 %v0_11a38, i32* %v3_11a38, align 4
  %v0_11a3c = load i32, i32* %r2.global-to-local, align 4
  %v1_11a3c = load i32, i32* @r5, align 4
  %v2_11a3c = add i32 %v1_11a3c, 12
  %v3_11a3c = inttoptr i32 %v2_11a3c to i32*
  store i32 %v0_11a3c, i32* %v3_11a3c, align 4
  br label %dec_label_pc_11758

dec_label_pc_11a44:                               ; preds = %dec_label_pc_10fe0, %dec_label_pc_10f98
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11a48

dec_label_pc_11a48:                               ; preds = %dec_label_pc_11008, %dec_label_pc_11a44
  %v0_11a50 = phi i32 [ 0, %dec_label_pc_11a44 ], [ %v0_11008, %dec_label_pc_11008 ]
  %v0_11a48 = load i32, i32* @r5, align 4
  %v1_11a48 = add i32 %v0_11a48, 4
  %v2_11a48 = inttoptr i32 %v1_11a48 to i32*
  %v3_11a48 = load i32, i32* %v2_11a48, align 4
  store i32 %v3_11a48, i32* @r4, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v2_11a50 = inttoptr i32 %v0_11a48 to i32*
  store i32 %v0_11a50, i32* %v2_11a50, align 4
  %v0_11a54 = load i32, i32* %ip.global-to-local, align 4
  %v1_11a54 = load i32, i32* @r5, align 4
  %v2_11a54 = add i32 %v1_11a54, 24
  %v3_11a54 = inttoptr i32 %v2_11a54 to i32*
  store i32 %v0_11a54, i32* %v3_11a54, align 4
  %v0_10edc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10edc

dec_label_pc_11a5c:                               ; preds = %dec_label_pc_10f5c
  %v0_11a5c = load i32, i32* @r5, align 4
  %v1_11a5c = add i32 %v0_11a5c, 4
  %v2_11a5c = inttoptr i32 %v1_11a5c to i32*
  %v3_11a5c = load i32, i32* %v2_11a5c, align 4
  store i32 %v3_11a5c, i32* %r0.global-to-local, align 4
  %v1_11a60 = call i32 @function_12a9c(i32 %v3_11a5c)
  store i32 %v1_11a60, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v0_11a68 = load i32, i32* @r6, align 4
  %v1_11a68 = load i32, i32* @r5, align 4
  %v2_11a68 = add i32 %v1_11a68, 12
  %v3_11a68 = inttoptr i32 %v2_11a68 to i32*
  store i32 %v0_11a68, i32* %v3_11a68, align 4
  %v0_11a6c = load i32, i32* %r4.global-to-local, align 4
  %v1_11a6c = load i32, i32* @r5, align 4
  %v2_11a6c = add i32 %v1_11a6c, 4
  %v3_11a6c = inttoptr i32 %v2_11a6c to i32*
  store i32 %v0_11a6c, i32* %v3_11a6c, align 4
  %v0_11a70 = load i32, i32* @r6, align 4
  %v1_11a70 = trunc i32 %v0_11a70 to i8
  %v2_11a70 = load i32, i32* @r5, align 4
  %v3_11a70 = add i32 %v2_11a70, 284
  %v4_11a70 = inttoptr i32 %v3_11a70 to i8*
  store i8 %v1_11a70, i8* %v4_11a70, align 1
  br label %dec_label_pc_10f00

dec_label_pc_11aa8:                               ; preds = %dec_label_pc_11080
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 26, i32* %r0.global-to-local, align 4
  %v1_11aac = call i32 @function_11b14(i32 26)
  store i32 27, i32* %r0.global-to-local, align 4
  %v1_11ab4 = call i32 @function_11b14(i32 27)
  store i32 %v1_11ab4, i32* %r0.global-to-local, align 4
  %v0_11ab8 = load i32, i32* @r5, align 4
  %v1_11ab8 = add i32 %v0_11ab8, 12
  %v2_11ab8 = inttoptr i32 %v1_11ab8 to i32*
  %v3_11ab8 = load i32, i32* %v2_11ab8, align 4
  br label %dec_label_pc_110c4.backedge

dec_label_pc_110c4.backedge.thread:               ; preds = %dec_label_pc_113c4, %dec_label_pc_11488, %dec_label_pc_11550, %dec_label_pc_11614, %dec_label_pc_1177c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_110cc

dec_label_pc_110c4.backedge.thread2083:           ; preds = %dec_label_pc_113fc, %dec_label_pc_114c0, %dec_label_pc_1164c, %dec_label_pc_11588, %dec_label_pc_117b4, %dec_label_pc_11420, %dec_label_pc_114e4, %dec_label_pc_115ac, %dec_label_pc_11670, %dec_label_pc_117d8
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_110cc

dec_label_pc_110c4.backedge:                      ; preds = %dec_label_pc_11aa8, %dec_label_pc_11ac0
  %storemerge2086 = phi i32 [ %v3_11ac8, %dec_label_pc_11ac0 ], [ %v3_11ab8, %dec_label_pc_11aa8 ]
  %v0_110c4.be = phi i32 [ %v3_11ac8, %dec_label_pc_11ac0 ], [ %v3_11ab8, %dec_label_pc_11aa8 ]
  %v0_110cc1031 = phi i32 [ %v0_11ac8, %dec_label_pc_11ac0 ], [ %v0_11ab8, %dec_label_pc_11aa8 ]
  store i32 %storemerge2086, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_110c4 = icmp eq i32 %v0_110c4.be, 0
  store i1 %v2_110c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_110c4, label %dec_label_pc_10f00, label %dec_label_pc_110cc

dec_label_pc_11ac0:                               ; preds = %thread-pre-split689
  %v0_11ac8 = load i32, i32* @r5, align 4
  %v1_11ac8 = add i32 %v0_11ac8, 12
  %v2_11ac8 = inttoptr i32 %v1_11ac8 to i32*
  %v3_11ac8 = load i32, i32* %v2_11ac8, align 4
  br label %dec_label_pc_110c4.backedge

dec_label_pc_11ad0:                               ; preds = %dec_label_pc_10e5c, %dec_label_pc_10e40
  %v0_11ad0 = load i32, i32* @r7, align 4
  %v1_11ad0 = load i32, i32* @r4, align 4
  %v2_11ad0 = add i32 %v1_11ad0, 12
  %v3_11ad0 = inttoptr i32 %v2_11ad0 to i32*
  store i32 %v0_11ad0, i32* %v3_11ad0, align 4
  %v0_11ad4 = load i32, i32* @r7, align 4
  %v1_11ad4 = trunc i32 %v0_11ad4 to i8
  %v2_11ad4 = load i32, i32* @r4, align 4
  %v3_11ad4 = add i32 %v2_11ad4, 284
  %v4_11ad4 = inttoptr i32 %v3_11ad4 to i8*
  store i8 %v1_11ad4, i8* %v4_11ad4, align 1
  br label %bb1883

dec_label_pc_11adc:                               ; preds = %dec_label_pc_118fc
  store i32 104, i32* %r3.global-to-local, align 4
  %v1_11ae0 = load i32, i32* %sb.global-to-local, align 4
  %v2_11ae0 = inttoptr i32 %v1_11ae0 to i32*
  store i32 104, i32* %v2_11ae0, align 4
  br label %dec_label_pc_11914

; uselistorder directives
  uselistorder i32 %v0_11ac8, { 1, 0 }
  uselistorder i32 %v3_11ab8, { 1, 0 }
  uselistorder i32 %v4_11a10, { 1, 0, 2 }
  uselistorder i32 %v0_11a10, { 0, 2, 1, 3 }
  uselistorder i1 %v7_11a00, { 1, 0 }
  uselistorder i32 %v0_11a00, { 3, 2, 0, 4, 1 }
  uselistorder i32 %v3_11974, { 1, 0 }
  uselistorder i1 %v1_11930, { 1, 0 }
  uselistorder i32 %v1_11924, { 2, 1, 0 }
  uselistorder i32 %v1_11920, { 1, 0 }
  uselistorder i32 %v0_118f0, { 0, 2, 1 }
  uselistorder i1 %v0_118e0, { 1, 0 }
  uselistorder i32 %v4_118d4, { 1, 0, 2 }
  uselistorder i32 %v0_11868, { 1, 2, 0 }
  uselistorder i1 %v7_117dc, { 1, 0 }
  uselistorder i32 %v1_117d8, { 2, 1, 3, 4, 0 }
  uselistorder i32 %v0_117ac, { 4, 5, 3, 2, 1, 0 }
  uselistorder i32 %v0_117b4, { 0, 1, 2, 4, 5, 3 }
  uselistorder i1 %v8_117c8, { 1, 0 }
  uselistorder i32 %v1_117b4, { 0, 1, 3, 2, 4 }
  uselistorder i1 %v8_11798, { 1, 0 }
  uselistorder i32 %v1_11780, { 2, 3, 0, 1, 4, 5, 6 }
  uselistorder i32 %v0_1176c, { 1, 2, 0 }
  uselistorder i32 %v2_11758, { 1, 0 }
  uselistorder i32 %v1_11758, { 1, 3, 0, 2, 4 }
  uselistorder i32 %v0_11758, { 3, 2, 5, 0, 1, 4, 6 }
  uselistorder i32 %v1_1172c, { 2, 1, 0 }
  uselistorder i1 %v7_11708, { 1, 0 }
  uselistorder i32 %v4_11704, { 1, 0, 2 }
  uselistorder i1 %v7_11674, { 1, 0 }
  uselistorder i32 %v1_11670, { 2, 1, 3, 4, 0 }
  uselistorder i32 %v0_11644, { 4, 5, 3, 2, 1, 0 }
  uselistorder i32 %v0_1164c, { 0, 1, 2, 4, 5, 3 }
  uselistorder i1 %v8_11660, { 1, 0 }
  uselistorder i32 %v1_1164c, { 0, 1, 3, 2, 4 }
  uselistorder i1 %v8_11630, { 1, 0 }
  uselistorder i32 %v1_11618, { 2, 3, 0, 1, 4, 5, 6 }
  uselistorder i1 %v7_115b0, { 1, 0 }
  uselistorder i32 %v1_115ac, { 2, 1, 3, 4, 0 }
  uselistorder i32 %v0_11580, { 4, 5, 3, 2, 1, 0 }
  uselistorder i32 %v0_11588, { 0, 1, 2, 4, 5, 3 }
  uselistorder i1 %v8_1159c, { 1, 0 }
  uselistorder i32 %v1_11588, { 0, 1, 3, 2, 4 }
  uselistorder i1 %v8_1156c, { 1, 0 }
  uselistorder i32 %v1_11554, { 2, 3, 0, 1, 4, 5, 6 }
  uselistorder i1 %v7_114e8, { 1, 0 }
  uselistorder i32 %v1_114e4, { 2, 1, 3, 4, 0 }
  uselistorder i32 %v0_114b8, { 4, 5, 3, 2, 1, 0 }
  uselistorder i32 %v0_114c0, { 0, 1, 2, 4, 5, 3 }
  uselistorder i1 %v8_114d4, { 1, 0 }
  uselistorder i32 %v1_114c0, { 0, 1, 3, 2, 4 }
  uselistorder i1 %v8_114a4, { 1, 0 }
  uselistorder i32 %v1_1148c, { 2, 3, 0, 1, 4, 5, 6 }
  uselistorder i1 %v7_11424, { 1, 0 }
  uselistorder i32 %v1_11420, { 2, 1, 3, 4, 0 }
  uselistorder i32 %v0_113f4, { 4, 5, 3, 2, 1, 0 }
  uselistorder i32 %v0_113fc, { 0, 1, 2, 4, 5, 3 }
  uselistorder i1 %v8_11410, { 1, 0 }
  uselistorder i32 %v1_113fc, { 0, 1, 3, 2, 4 }
  uselistorder i1 %v8_113e0, { 1, 0 }
  uselistorder i32 %v1_113c8, { 2, 3, 0, 1, 4, 5, 6 }
  uselistorder i32 %v0_11380, { 2, 1, 0 }
  uselistorder i1 %v7_11370, { 1, 0 }
  uselistorder i32 %v0_11340, { 2, 3, 1, 0 }
  uselistorder i32 %v0_11348, { 0, 1, 3, 4, 2 }
  uselistorder i1 %v8_1135c, { 1, 0 }
  uselistorder i32 %v1_11348, { 0, 1, 3, 2, 4 }
  uselistorder i1 %v8_11334, { 1, 0 }
  uselistorder i32 %v1_1131c, { 2, 3, 0, 1, 4, 5, 6 }
  uselistorder i32 %v0_112d4, { 2, 1, 0 }
  uselistorder i1 %v7_112bc, { 1, 0 }
  uselistorder i32 %v0_1128c, { 4, 5, 3, 2, 1, 0 }
  uselistorder i32 %v0_11294, { 0, 1, 2, 4, 5, 3 }
  uselistorder i1 %v8_112a8, { 1, 0 }
  uselistorder i32 %v1_11294, { 0, 1, 3, 2, 4 }
  uselistorder i1 %v8_11278, { 1, 0 }
  uselistorder i32 %v1_11260, { 2, 3, 0, 1, 4, 5, 6 }
  uselistorder i32 %v0_1124c.pre, { 0, 2, 1 }
  uselistorder i32 %v1_11234, { 1, 0 }
  uselistorder i32 %v1_11230, { 1, 0 }
  uselistorder i32 %v1_11228, { 0, 2, 3, 4, 5, 1 }
  uselistorder i32 %v3_11224, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_11224, { 0, 2, 1 }
  uselistorder i1 %v7_111c4, { 1, 0 }
  uselistorder i1 %v2_111b0, { 1, 0, 2 }
  uselistorder i1 %v2_11198, { 1, 0, 2 }
  uselistorder i32 %v1_111b8, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v1_1118c, { 4, 2, 1, 3, 0 }
  uselistorder i32 %v1_111b4, { 1, 0 }
  uselistorder i32 %v2_111bc, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 %v3_11178, { 0, 2, 1, 3 }
  uselistorder i32 %v0_11140, { 4, 5, 26, 6, 7, 24, 8, 9, 25, 10, 11, 23, 12, 13, 22, 14, 15, 21, 16, 17, 20, 3, 2, 18, 19, 27, 1, 0 }
  uselistorder i32 %v1_1111c, { 1, 2, 3, 0 }
  uselistorder i32 %v3_11118, { 1, 0 }
  uselistorder i32 %v5_110fc, { 0, 4, 1, 2, 3, 5, 6, 7 }
  uselistorder i32 %v2_110e8, { 1, 0, 2 }
  uselistorder i32 %v3_110e4, { 1, 0, 2 }
  uselistorder i32 %v0_11998, { 1, 0, 2 }
  uselistorder i32 %v0_110b8, { 1, 0, 2 }
  uselistorder i1 %v7_11098, { 1, 0 }
  uselistorder i1 %v7_11070, { 1, 0 }
  uselistorder i32 %v1_11000, { 1, 0 }
  uselistorder i32 %v1_10ffc, { 3, 1, 0, 2 }
  uselistorder i32 %v0_11008, { 0, 2, 1, 3, 6, 5, 4 }
  uselistorder i32 %v3_10fc8, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v2_10fbc, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_10f4c, { 2, 1, 0 }
  uselistorder i32 %v3_10f48, { 1, 0 }
  uselistorder i1 %v7_10f30, { 1, 0 }
  uselistorder i32 %v3_10f2c, { 5, 4, 2, 1, 0, 6, 7, 3 }
  uselistorder i32 %v0_10f18, { 1, 0 }
  uselistorder i32 %v1_10f04, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 %v1_10ef0, { 2, 1, 0 }
  uselistorder i32 %v3_10eec, { 1, 0 }
  uselistorder i32 %v0_10ef0, { 1, 0 }
  uselistorder i32 %v1_10e8c, { 0, 1, 3, 2 }
  uselistorder i32 %v0_10e8c, { 0, 1, 3, 2 }
  uselistorder i32 %v1_10e64, { 2, 1, 0 }
  uselistorder i32 %v1_10e60, { 1, 0 }
  uselistorder i32 %v0_10e30, { 0, 2, 1 }
  uselistorder i32 %v1_10e28, { 1, 0 }
  uselistorder i1 %v7_10df4, { 0, 3, 1, 2 }
  uselistorder i1 %v2_10df4, { 1, 2, 0 }
  uselistorder i32 %v2_10dec, { 0, 3, 4, 2, 1 }
  uselistorder i32 %v0_10de4, { 1, 0 }
  uselistorder i32 %v1_10dc8, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 %v1_10dbc, { 0, 1, 3, 2 }
  uselistorder i32 %v0_10dbc, { 0, 2, 1 }
  uselistorder i32 %v1_10dac, { 1, 0 }
  uselistorder i32 %v3_10e10, { 4, 7, 5, 6, 1, 0, 9, 3, 2, 8 }
  uselistorder i32 %storemerge1242, { 1, 0, 2 }
  uselistorder i32 %v3_10ce0, { 1, 0 }
  uselistorder i32 %v1_10cc4, { 1, 0 }
  uselistorder i32 %v1_10cb8, { 1, 2, 0 }
  uselistorder i32 %v0_10ccc, { 0, 1, 3, 2 }
  uselistorder i32 %v0_10c88, { 2, 1, 0, 3, 5, 4 }
  uselistorder i32 %v2_10c7c, { 2, 1, 0 }
  uselistorder i32 %v1_10c58, { 3, 1, 0, 4, 2 }
  uselistorder i1 %v2_10c30, { 1, 0 }
  uselistorder i32 %v0_10be8, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %v0_10bb0, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_10b54, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_10aa8, { 1, 0 }
  uselistorder i32 %v5_10a70, { 1, 0, 2, 3 }
  uselistorder i32 %v2_10a24, { 1, 0 }
  uselistorder i1 %v7_109ec, { 2, 1, 0 }
  uselistorder i1 %v2_109dc, { 1, 0 }
  uselistorder i1 %v2_109b8, { 1, 0 }
  uselistorder i1 %v2_10994, { 1, 0 }
  uselistorder i1 %v2_10950, { 1, 0 }
  uselistorder i1 %v2_1092c, { 1, 0 }
  uselistorder i1 %v2_108fc, { 1, 0, 2 }
  uselistorder i1 %v2_108f4, { 1, 0 }
  uselistorder i1 %v2_108d0, { 1, 0 }
  uselistorder i1 %v2_108b4, { 1, 0 }
  uselistorder i1 %v2_108a8, { 1, 0, 2 }
  uselistorder i1 %v2_108a0, { 1, 0 }
  uselistorder i1 %v2_1085c, { 1, 0, 2 }
  uselistorder i32 %.1992, { 0, 3, 1, 2 }
  uselistorder i32 %v4_1083c, { 1, 0, 2 }
  uselistorder i1 %v2_10834, { 1, 0, 2 }
  uselistorder i32 %.1991, { 2, 0, 1 }
  uselistorder i1 %v2_107c8, { 1, 0 }
  uselistorder i1 %v2_10798, { 1, 0, 2 }
  uselistorder i1 %v2_10778, { 1, 0, 2 }
  uselistorder i1 %v2_10758, { 1, 0 }
  uselistorder i1 %v2_1072c, { 1, 0, 2 }
  uselistorder i1 %v2_10724, { 1, 0 }
  uselistorder i1 %v7_10718, { 1, 0, 2, 3 }
  uselistorder i1 %v2_106f8, { 1, 0, 2 }
  uselistorder i1 %v2_106f0, { 1, 0 }
  uselistorder i1 %v2_106c4, { 1, 0, 2 }
  uselistorder i1 %v2_1069c, { 1, 0, 2 }
  uselistorder i1 %v2_10694, { 1, 0 }
  uselistorder i1 %v2_10668, { 1, 0, 2 }
  uselistorder i1 %v2_10660, { 1, 0 }
  uselistorder i1 %v2_10618, { 1, 0, 2 }
  uselistorder i1 %v2_10610, { 1, 0 }
  uselistorder i1 %v2_105e4, { 1, 0, 2 }
  uselistorder i1 %v2_105dc, { 1, 0 }
  uselistorder i1 %v2_105b0, { 1, 0, 2 }
  uselistorder i1 %v2_105a8, { 1, 0 }
  uselistorder i1 %v2_10580, { 1, 0, 2 }
  uselistorder i1 %v2_10578, { 1, 0 }
  uselistorder i1 %v7_10558, { 1, 0, 2 }
  uselistorder i1 %v2_10550, { 1, 0 }
  uselistorder i1 %v7_10544, { 0, 2, 1, 3, 4 }
  uselistorder i1 %v2_10544, { 2, 0, 1, 3 }
  uselistorder i1 %v2_10538, { 1, 0, 2 }
  uselistorder i1 %v2_10530, { 1, 0 }
  uselistorder i1 %v2_10504, { 1, 0, 2 }
  uselistorder i1 %v2_104dc, { 1, 0, 2 }
  uselistorder i1 %v2_104d4, { 1, 0 }
  uselistorder i1 %v7_104c8, { 1, 0, 2, 3 }
  uselistorder i1 %v2_104a8, { 1, 0, 2 }
  uselistorder i1 %v2_104a0, { 1, 0 }
  uselistorder i1 %v7_1047c, { 1, 0, 2 }
  uselistorder i1 %v2_10474, { 1, 0 }
  uselistorder i1 %v2_10450, { 1, 0 }
  uselistorder i32 %.1988, { 2, 0, 1 }
  uselistorder i1 %v7_10420, { 0, 3, 2, 1 }
  uselistorder i1 %v2_10418, { 1, 0 }
  uselistorder i1 %v2_1040c, { 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 10 }
  uselistorder i32 %.1987, { 2, 1, 0 }
  uselistorder i1 %v7_103f8, { 1, 0, 2 }
  uselistorder i1 %v2_103e0, { 1, 0 }
  uselistorder i1 %v2_103c0, { 1, 0 }
  uselistorder i1 %v2_1037c, { 1, 0 }
  uselistorder i1 %v2_10364, { 1, 0 }
  uselistorder i1 %v2_10350, { 1, 0 }
  uselistorder i1 %v2_10338, { 1, 0 }
  uselistorder i1 %v2_1030c, { 1, 0, 2 }
  uselistorder i1 %v2_102d8, { 1, 0, 2 }
  uselistorder i1 %v2_102d0, { 1, 0 }
  uselistorder i1 %v2_102a8, { 1, 0, 2 }
  uselistorder i32 %.1985, { 1, 0 }
  uselistorder i1 %v7_10290, { 0, 3, 2, 1 }
  uselistorder i1 %v2_10274, { 1, 0, 2 }
  uselistorder i1 %v2_1024c, { 1, 0, 2 }
  uselistorder i1 %v2_10234, { 1, 0, 2 }
  uselistorder i1 %v2_1022c, { 1, 0 }
  uselistorder i1 %v7_10220, { 4, 0, 3, 2, 1, 6, 5, 7, 8 }
  uselistorder i1 %v2_10220, { 5, 4, 3, 0, 2, 1, 6, 7 }
  uselistorder i1 %v2_10200, { 1, 0, 2 }
  uselistorder i1 %v2_101f8, { 1, 0 }
  uselistorder i1 %v2_101cc, { 1, 0, 2 }
  uselistorder i1 %v2_101c4, { 1, 0 }
  uselistorder i1 %v2_10198, { 1, 0, 2 }
  uselistorder i1 %v2_10170, { 1, 0, 2 }
  uselistorder i1 %v2_1014c, { 1, 0, 2 }
  uselistorder i1 %v2_10124, { 1, 0, 2 }
  uselistorder i1 %v2_1011c, { 1, 0 }
  uselistorder i1 %v2_10108, { 1, 0 }
  uselistorder i1 %v7_100e0, { 0, 2, 1, 5, 4, 3 }
  uselistorder i1 %v2_100e0, { 2, 0, 1, 3 }
  uselistorder i1 %v7_100cc, { 1, 0, 2 }
  uselistorder i1 %v2_100c4, { 1, 0 }
  uselistorder i1 %v2_10098, { 1, 0 }
  uselistorder i1 %v7_10074, { 1, 0, 2 }
  uselistorder i32 %.1983, { 1, 2, 7, 10, 6, 5, 9, 4, 3, 8, 0 }
  uselistorder i1 %v7_1005c, { 2, 1, 0, 3 }
  uselistorder i1 %v2_1003c, { 1, 0, 2 }
  uselistorder i32 %.1982, { 4, 3, 6, 2, 1, 5, 7, 0 }
  uselistorder i1 %v7_10020, { 1, 0, 4, 3, 2 }
  uselistorder i1 %v2_10000, { 1, 0 }
  uselistorder i1 %v7_ffdc, { 1, 0, 2 }
  uselistorder i1 %v2_ffd4, { 1, 0 }
  uselistorder i1 %v2_ffa8, { 1, 0, 2 }
  uselistorder i32 %.1981, { 0, 1, 2, 4, 3 }
  uselistorder i1 %v7_ff90, { 0, 3, 2, 1 }
  uselistorder i1 %v2_ff74, { 1, 0, 2 }
  uselistorder i32 %.1980, { 3, 2, 0, 1 }
  uselistorder i1 %v2_ff40, { 1, 0, 2 }
  uselistorder i1 %v2_ff38, { 1, 0 }
  uselistorder i1 %v2_ff08, { 1, 0 }
  uselistorder i1 %v7_fee4, { 1, 0, 2 }
  uselistorder i1 %v2_fedc, { 1, 0 }
  uselistorder i1 %v7_feb8, { 1, 0, 2 }
  uselistorder i1 %v2_feb0, { 1, 0 }
  uselistorder i1 %v2_fe88, { 1, 0, 2 }
  uselistorder i32 %.1979, { 1, 0 }
  uselistorder i1 %v7_fe70, { 0, 3, 2, 1 }
  uselistorder i32 %.1978, { 2, 0, 1 }
  uselistorder i1 %v7_fe40, { 0, 3, 2, 1 }
  uselistorder i1 %v2_fe34, { 1, 0, 2 }
  uselistorder i1 %v2_fe0c, { 1, 0, 2 }
  uselistorder i1 %v2_fe04, { 1, 0 }
  uselistorder i1 %v2_fdd8, { 1, 0, 2 }
  uselistorder i1 %v2_fdd0, { 1, 0 }
  uselistorder i1 %v2_fdb0, { 1, 0, 2 }
  uselistorder i1 %v2_fda8, { 1, 0 }
  uselistorder i1 %v2_fd5c, { 1, 0, 2 }
  uselistorder i32 %.1977, { 1, 0 }
  uselistorder i1 %v7_fd34, { 1, 0, 2 }
  uselistorder i1 %v2_fd2c, { 1, 0 }
  uselistorder i1 %v2_fcf8, { 1, 0 }
  uselistorder i32 %storemerge1219, { 2, 1, 0 }
  uselistorder i32 %.1976, { 5, 8, 4, 3, 7, 2, 1, 6, 0 }
  uselistorder i1 %v7_fcc0, { 1, 0, 2 }
  uselistorder i1 %v2_fcb8, { 1, 0 }
  uselistorder i1 %v2_fca0, { 1, 0 }
  uselistorder i32 %storemerge1217, { 3, 0, 2, 1, 4 }
  uselistorder i1 %v7_fc74, { 1, 0, 2 }
  uselistorder i32 %.1975, { 4, 6, 3, 5, 0, 1, 2 }
  uselistorder i32 %.1974, { 2, 4, 1, 3, 0 }
  uselistorder i1 %v7_fc50, { 1, 0, 2 }
  uselistorder i1 %v2_fc44, { 1, 0 }
  uselistorder i1 %v2_fc2c, { 1, 0 }
  uselistorder i1 %v2_fc18, { 1, 0 }
  uselistorder i32 %.1973, { 0, 6, 4, 7, 1, 3, 5, 2 }
  uselistorder i1 %v7_fbec, { 1, 0, 4, 3, 2 }
  uselistorder i32 %.1972, { 6, 5, 10, 4, 3, 9, 2, 8, 1, 7, 0 }
  uselistorder i1 %v7_fbcc, { 3, 2, 1, 0, 4 }
  uselistorder i32 %.1971, { 7, 6, 10, 5, 4, 9, 0, 3, 2, 8, 11, 12, 1 }
  uselistorder i1 %v7_fb58, { 2, 1, 0, 3 }
  uselistorder i1 %v7_fb3c, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v2_fb3c, { 1, 2, 0, 3 }
  uselistorder i1 %v2_fb1c, { 1, 0, 2 }
  uselistorder i1 %v2_fae4, { 1, 0, 2 }
  uselistorder i32 %.1970, { 4, 0, 2, 3, 1 }
  uselistorder i1 %v2_faa4, { 1, 0, 2 }
  uselistorder i1 %v2_fa90, { 1, 0 }
  uselistorder i1 %v7_fa88, { 1, 0, 2, 3 }
  uselistorder i1 %v2_fa88, { 1, 0, 2 }
  uselistorder i1 %v2_fa60, { 1, 0, 2 }
  uselistorder i32 %.1968, { 2, 0, 1 }
  uselistorder i32 %v4_fa40, { 1, 0, 2 }
  uselistorder i1 %v2_fa38, { 1, 0, 2 }
  uselistorder i32 %.1967, { 2, 0, 1 }
  uselistorder i1 %v2_f9dc, { 1, 0, 2 }
  uselistorder i1 %v2_f9bc, { 1, 0, 2 }
  uselistorder i1 %v2_f994, { 1, 0 }
  uselistorder i1 %v2_f98c, { 1, 0, 2 }
  uselistorder i1 %v7_f964, { 2, 1, 3, 0, 4, 5 }
  uselistorder i1 %v2_f964, { 1, 2, 3, 0, 4 }
  uselistorder i1 %v2_f944, { 1, 0, 2 }
  uselistorder i1 %v2_f93c, { 1, 0, 2 }
  uselistorder i1 %v7_f928, { 1, 2, 0, 3, 4 }
  uselistorder i1 %v2_f928, { 1, 2, 0, 3 }
  uselistorder i1 %v7_f90c, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v2_f90c, { 1, 2, 0, 3 }
  uselistorder i1 %v7_f8f0, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v2_f8f0, { 1, 2, 0, 3 }
  uselistorder i32 %v1_f8dc, { 0, 3, 2, 1 }
  uselistorder i1 %v7_f8a0, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v2_f8a0, { 1, 2, 0, 3 }
  uselistorder i1 %v2_f890, { 1, 0 }
  uselistorder i32 %v2_f868, { 1, 0 }
  uselistorder i32 %v0_f85c, { 1, 4, 2, 3, 0 }
  uselistorder i32 %v0_107e8, { 0, 5, 4, 6, 1, 2, 3, 7 }
  uselistorder i32 %.1964, { 0, 2, 1 }
  uselistorder i1 %v2_f7d8, { 1, 0, 2 }
  uselistorder i32 %.1963, { 0, 3, 1, 2, 4, 5 }
  uselistorder i1 %v2_f7b8, { 1, 0 }
  uselistorder i32 %v2_f790, { 1, 0 }
  uselistorder i32 %v1_f9a8, { 1, 0 }
  uselistorder i1 %v2_f77c, { 1, 0, 2 }
  uselistorder i32 %v2_f768, { 1, 0 }
  uselistorder i32 %v2_f74c, { 1, 0 }
  uselistorder i32 %v1_f768, { 2, 0, 1 }
  uselistorder i1 %v2_f738, { 1, 0, 2 }
  uselistorder i1 %v2_f728, { 1, 0 }
  uselistorder i1 %v7_f720, { 1, 0, 2, 3 }
  uselistorder i1 %v2_f720, { 1, 0, 2 }
  uselistorder i1 %v2_f70c, { 1, 0, 2 }
  uselistorder i1 %v2_f704, { 1, 0 }
  uselistorder i32 %v2_f6dc, { 1, 0 }
  uselistorder i32 %v0_f6d0, { 1, 0 }
  uselistorder i32 %v4_f6b0, { 1, 0, 2 }
  uselistorder i32 %.1959, { 5, 4, 9, 3, 2, 8, 1, 0, 7, 6, 10, 11 }
  uselistorder i1 %v7_f674, { 2, 1, 0, 3 }
  uselistorder i32 %.1958, { 2, 3, 0, 1 }
  uselistorder i32 %v2_f634, { 1, 0 }
  uselistorder i32 %v0_10824, { 1, 0, 2 }
  uselistorder i1 %v7_f61c, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v2_f61c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_fbd8, { 0, 2, 1 }
  uselistorder i1 %v2_f5f8, { 1, 0, 2 }
  uselistorder i32 %.1957, { 3, 0, 4, 1, 2 }
  uselistorder i32 %.1956, { 1, 2, 3, 7, 0, 4, 8, 5, 9, 6 }
  uselistorder i1 %v7_f5d0, { 0, 3, 2, 1 }
  uselistorder i32 %.1955, { 0, 2, 1 }
  uselistorder i1 %v7_f5b4, { 0, 3, 2, 1 }
  uselistorder i1 %v2_f5ac, { 1, 0 }
  uselistorder i1 %v7_f5a0, { 0, 2, 1, 4, 3, 5, 6 }
  uselistorder i1 %v2_f5a0, { 2, 0, 3, 1, 4, 5 }
  uselistorder i32 %.1954, { 2, 1, 3, 0 }
  uselistorder i1 %v7_f580, { 0, 3, 2, 1 }
  uselistorder i32 %.1952, { 3, 0, 4, 1, 2 }
  uselistorder i1 %v7_f534, { 1, 0, 3, 2, 4, 5 }
  uselistorder i1 %v2_f534, { 1, 2, 0, 3, 4 }
  uselistorder i32 %.1951, { 2, 3, 0, 5, 4, 6, 1, 7 }
  uselistorder i1 %v7_f528, { 0, 3, 2, 1 }
  uselistorder i32 %.1950, { 1, 0, 2 }
  uselistorder i1 %v7_f50c, { 1, 0, 4, 3, 6, 5, 2 }
  uselistorder i1 %v2_f50c, { 1, 0, 2, 3 }
  uselistorder i32 %.1949, { 0, 3, 1, 2 }
  uselistorder i1 %v7_f4f0, { 1, 0, 4, 3, 6, 5, 2 }
  uselistorder i1 %v2_f4f0, { 1, 2, 0, 3, 4 }
  uselistorder i1 %v2_f4e8, { 1, 0 }
  uselistorder i1 %v7_f4dc, { 0, 2, 1, 3, 4 }
  uselistorder i1 %v2_f4dc, { 1, 0, 2, 3 }
  uselistorder i32 %.1948, { 2, 1, 3, 0 }
  uselistorder i32 %storemerge1186, { 2, 0, 1, 3 }
  uselistorder i32 %.1947, { 0, 4, 1, 3, 2 }
  uselistorder i1 %v7_f4a0, { 0, 3, 2, 1 }
  uselistorder i1 %v2_f4a0, { 1, 0, 2 }
  uselistorder i1 %v7_f490, { 0, 2, 1, 3, 4 }
  uselistorder i1 %v2_f490, { 1, 0, 2, 3 }
  uselistorder i32 %.1946, { 0, 2, 1 }
  uselistorder i1 %v7_f484, { 2, 1, 0 }
  uselistorder i1 %v7_f468, { 1, 0, 2, 3 }
  uselistorder i32 %.1945, { 1, 3, 2, 4, 0 }
  uselistorder i1 %v7_f45c, { 0, 3, 2, 1 }
  uselistorder i1 %v2_f454, { 1, 0 }
  uselistorder i1 %v2_f43c, { 1, 0 }
  uselistorder i1 %v7_f414, { 1, 0, 2, 3 }
  uselistorder i32 %.1944, { 4, 8, 5, 9, 0, 10, 3, 6, 2, 7, 1 }
  uselistorder i1 %v7_f408, { 1, 0, 4, 3, 2 }
  uselistorder i32 %.1943, { 2, 5, 3, 0, 4, 1 }
  uselistorder i1 %v2_f3cc, { 1, 0 }
  uselistorder i32 %storemerge1179, { 2, 1, 0, 3 }
  uselistorder i1 %v7_f3a0, { 0, 3, 2, 1 }
  uselistorder i32 %.1942, { 2, 3, 1, 4, 0 }
  uselistorder i32 %.1940, { 1, 2, 0 }
  uselistorder i1 %v7_f360, { 2, 1, 0 }
  uselistorder i32 %.1939, { 0, 3, 4, 1, 2 }
  uselistorder i1 %v2_f340, { 1, 0 }
  uselistorder i1 %v2_f32c, { 1, 0 }
  uselistorder i1 %v2_f318, { 1, 0 }
  uselistorder i1 %v7_f2f8, { 0, 3, 2, 1 }
  uselistorder i1 %v2_f2f8, { 1, 0, 2, 3 }
  uselistorder i1 %v2_f2f0, { 1, 0 }
  uselistorder i1 %v2_f2dc, { 1, 0 }
  uselistorder i32 %.1937, { 3, 9, 0, 8, 7, 6, 1, 5, 4, 2 }
  uselistorder i1 %v7_f2b8, { 4, 3, 2, 1, 0, 7, 6, 5 }
  uselistorder i1 %v7_f29c, { 1, 0, 4, 3, 6, 5, 2 }
  uselistorder i1 %v2_f29c, { 0, 2, 1, 3, 4 }
  uselistorder i32 %.1935, { 3, 8, 4, 7, 5, 6, 0, 1, 2 }
  uselistorder i1 %v7_f284, { 2, 1, 0 }
  uselistorder i1 %v7_f270, { 2, 1, 0 }
  uselistorder i1 %v7_f25c, { 0, 3, 2, 1 }
  uselistorder i1 %v2_f25c, { 1, 0, 2, 3 }
  uselistorder i32 %.1932, { 1, 0 }
  uselistorder i1 %v7_f23c, { 0, 2, 1, 3, 4 }
  uselistorder i1 %v2_f23c, { 1, 0, 2, 3 }
  uselistorder i32 %.1931, { 6, 5, 3, 4, 0, 1, 2 }
  uselistorder i1 %v7_f230, { 0, 3, 2, 1 }
  uselistorder i32 %.1930, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i1 %v7_f218, { 3, 2, 1, 0, 6, 5, 4 }
  uselistorder i32 %v1_f18c, { 0, 193, 203, 192, 197, 198, 200, 199, 194, 195, 196, 202, 188, 189, 191, 190, 185, 186, 187, 204, 181, 182, 184, 183, 177, 178, 180, 179, 173, 174, 176, 175, 169, 170, 172, 171, 165, 166, 168, 167, 162, 163, 164, 201, 158, 159, 161, 160, 154, 155, 157, 156, 149, 148, 147, 146, 145, 144, 143, 142, 1, 141, 140, 139, 138, 151, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 2, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 152, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 3, 77, 76, 75, 74, 73, 72, 4, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 5, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 6, 43, 42, 7, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 150, 29, 28, 27, 26, 25, 24, 23, 22, 8, 153, 21, 20, 19, 18, 17, 16, 15, 14, 13, 9, 12, 11, 10 }
  uselistorder i32 %v1_f188, { 304, 305, 288, 289, 290, 291, 292, 293, 338, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 339, 306, 307, 308, 309, 310, 311, 337, 312, 313, 336, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 334, 284, 283, 282, 281, 280, 279, 278, 277, 276, 275, 274, 273, 272, 271, 270, 269, 268, 267, 287, 266, 265, 264, 263, 262, 261, 260, 259, 258, 257, 256, 255, 254, 253, 252, 251, 250, 249, 248, 247, 246, 245, 244, 243, 242, 241, 240, 239, 238, 237, 236, 235, 234, 233, 232, 231, 230, 229, 228, 227, 226, 225, 224, 223, 222, 221, 220, 219, 218, 217, 216, 215, 214, 213, 212, 211, 210, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 286, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 285, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v3_f17c, { 11, 3, 4, 5, 2, 6, 7, 8, 9, 10, 0, 1 }
  uselistorder i32 %v1_f174, { 187, 188, 168, 169, 170, 171, 172, 173, 174, 175, 177, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 198, 197, 167, 166, 165, 164, 162, 163, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 150, 151, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 138, 139, 136, 137, 135, 134, 133, 132, 130, 131, 128, 129, 127, 126, 125, 124, 123, 122, 120, 121, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 84, 85, 82, 83, 80, 81, 79, 78, 76, 77, 75, 74, 73, 72, 71, 70, 68, 69, 67, 66, 64, 65, 62, 63, 61, 60, 59, 58, 56, 57, 54, 55, 53, 52, 50, 51, 48, 49, 46, 47, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_f170, { 4, 5, 0, 6, 1, 2, 3, 7 }
  uselistorder i32 %v4_f160, { 1, 0 }
  uselistorder i32 %v0_f150, { 0, 1, 3, 2 }
  uselistorder i32 %v0_f128, { 1, 0 }
  uselistorder i32 %v2_11034, { 2, 4, 1, 3, 5, 6, 0 }
  uselistorder i32 %v2_1185c, { 1, 2, 0 }
  uselistorder i32 %v2_10e18, { 0, 4, 1, 5, 2, 7, 3, 6 }
  uselistorder i32 %v2_f118, { 2, 3, 5, 6, 0, 1, 4, 7, 8 }
  uselistorder i32 %v4_f04c, { 1, 0 }
  uselistorder i32 %v1_f04c, { 2, 0, 1 }
  uselistorder i32 %v3_f00c, { 1, 0 }
  uselistorder i32 %v4_eff4, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v0_efe8, { 0, 2, 1 }
  uselistorder i32 %v0_ef8c, { 0, 3, 1, 4, 2 }
  uselistorder i32 %v2_ef5c, { 2, 4, 3, 5, 0, 1 }
  uselistorder i32 %v3_ef2c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_ef14, { 0, 2, 1 }
  uselistorder i32 %v0_eefc, { 2, 1, 0 }
  uselistorder i32 %v0_eed8, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %storemerge1243, { 1, 0 }
  uselistorder i32 %v0_ee1c, { 2, 1, 3, 0, 4 }
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder i32* %stack_var_-52, { 4, 3, 5, 1, 6, 2, 7, 0, 8, 9 }
  uselistorder i32* %stack_var_-44, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 13, 11, 12 }
  uselistorder i32* %stack_var_-48, { 7, 5, 8, 3, 9, 6, 10, 4, 11, 12, 1, 2, 13, 0, 14, 15 }
  uselistorder i32* %sl.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* %sb.global-to-local, { 1, 2, 3, 0, 4, 5, 6, 7 }
  uselistorder i32* %r8.global-to-local, { 0, 3, 4, 7, 1, 6, 5, 2, 10, 8, 9, 11, 12, 14, 13 }
  uselistorder i32* %r5.global-to-local, { 4, 1, 2, 0, 3 }
  uselistorder i32* %r3.global-to-local, { 29, 6, 7, 30, 565, 31, 32, 33, 34, 551, 566, 567, 568, 569, 0, 1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 578, 579, 580, 560, 561, 562, 563, 564, 570, 571, 572, 573, 574, 575, 576, 577, 35, 36, 37, 38, 39, 40, 581, 582, 41, 42, 43, 44, 45, 46, 47, 49, 51, 50, 48, 52, 53, 54, 55, 59, 56, 57, 58, 60, 583, 584, 61, 541, 542, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 85, 88, 87, 90, 89, 95, 91, 92, 93, 94, 97, 96, 114, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 119, 117, 118, 121, 120, 212, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 215, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 317, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 424, 422, 423, 425, 426, 437, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 454, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 464, 455, 456, 457, 458, 459, 460, 461, 462, 463, 468, 465, 466, 467, 469, 477, 470, 471, 472, 473, 474, 475, 476, 479, 478, 490, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 494, 491, 492, 493, 495, 496, 497, 498, 499, 500, 503, 501, 502, 504, 505, 506, 507, 510, 508, 509, 511, 512, 513, 514, 516, 515, 517, 524, 518, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540 }
  uselistorder i32* %r2.global-to-local, { 84, 3, 4, 5, 6, 92, 17, 18, 88, 93, 0, 1, 2, 7, 8, 10, 9, 11, 13, 12, 14, 16, 15, 85, 87, 86, 89, 91, 90, 98, 100, 99, 94, 96, 95, 97, 19, 20, 21, 22, 23, 24, 25, 101, 102, 26, 27, 28, 29, 30, 32, 33, 103, 31, 34, 35, 36, 41, 37, 38, 39, 40, 42, 44, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83 }
  uselistorder i32* %r1.global-to-local, { 19, 3, 4, 5, 6, 79, 80, 75, 76, 0, 1, 2, 35, 36, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 72, 73, 74, 77, 78, 82, 83, 47, 81, 20, 21, 22, 84, 85, 86, 87, 23, 24, 25, 26, 28, 29, 30, 27, 31, 32, 33, 37, 34, 46, 38, 18, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 63, 69, 65, 66, 67, 68, 70, 71 }
  uselistorder i32* %r0.global-to-local, { 160, 159, 161, 58, 57, 11, 10, 56, 12, 14, 13, 15, 17, 16, 18, 59, 20, 152, 155, 153, 60, 62, 61, 134, 133, 136, 135, 137, 138, 154, 156, 1, 0, 2, 4, 3, 6, 5, 7, 8, 9, 91, 22, 21, 23, 19, 24, 25, 26, 27, 29, 28, 31, 30, 33, 32, 34, 35, 36, 37, 39, 38, 41, 40, 43, 42, 44, 45, 46, 47, 49, 48, 51, 50, 53, 52, 54, 55, 122, 123, 125, 124, 127, 126, 129, 128, 130, 131, 132, 140, 139, 142, 141, 146, 143, 144, 145, 163, 162, 165, 164, 148, 147, 149, 150, 151, 158, 157, 65, 63, 167, 166, 168, 170, 169, 92, 171, 172, 173, 174, 75, 64, 67, 66, 68, 69, 70, 72, 71, 73, 79, 74, 76, 77, 78, 121, 81, 80, 90, 82, 83, 85, 84, 86, 88, 87, 89, 93, 94, 95, 97, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 108, 111, 110, 112, 116, 113, 114, 115, 117, 118, 119, 120 }
  uselistorder i32* %ip.global-to-local, { 10, 11, 2, 12, 3, 42, 0, 1, 46, 4, 5, 7, 6, 9, 8, 39, 38, 40, 41, 45, 47, 43, 44, 13, 14, 15, 16, 18, 17, 19, 22, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37 }
  uselistorder i1* %cpsr_z.global-to-local, { 57, 852, 850, 838, 11, 12, 47, 48, 49, 50, 51, 792, 793, 794, 815, 816, 817, 818, 819, 0, 1, 7, 2, 3, 4, 5, 6, 8, 9, 10, 834, 13, 14, 15, 16, 17, 23, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 34, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 45, 40, 41, 42, 43, 44, 46, 779, 780, 781, 782, 788, 783, 784, 785, 786, 787, 789, 790, 791, 795, 796, 801, 797, 798, 799, 800, 802, 803, 804, 836, 805, 811, 806, 807, 808, 809, 810, 812, 813, 814, 835, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 853, 52, 53, 54, 55, 56, 854, 837, 77, 839, 840, 841, 58, 60, 59, 61, 62, 64, 66, 65, 855, 63, 67, 68, 69, 70, 71, 72, 78, 73, 74, 75, 76, 845, 844, 842, 79, 80, 81, 82, 843, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 778, 104, 105, 106, 107, 108, 109, 110, 111, 777, 112, 113, 114, 776, 115, 116, 117, 775, 118, 119, 120, 121, 122, 123, 774, 124, 125, 126, 773, 127, 128, 772, 129, 130, 131, 771, 132, 133, 134, 135, 770, 136, 137, 138, 849, 139, 140, 769, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 851, 156, 157, 158, 159, 768, 160, 161, 162, 163, 164, 767, 165, 166, 167, 168, 169, 170, 171, 766, 172, 173, 765, 174, 175, 176, 764, 177, 178, 763, 179, 180, 181, 762, 182, 183, 761, 184, 185, 186, 187, 188, 760, 189, 190, 191, 759, 192, 193, 757, 194, 195, 196, 756, 197, 198, 199, 200, 201, 755, 202, 203, 204, 754, 205, 206, 753, 207, 208, 209, 752, 210, 211, 751, 212, 213, 214, 750, 215, 216, 749, 217, 218, 219, 758, 220, 221, 222, 223, 748, 224, 225, 226, 227, 747, 228, 229, 746, 230, 231, 232, 233, 745, 234, 235, 236, 744, 237, 238, 743, 239, 240, 241, 742, 242, 243, 244, 245, 741, 246, 247, 248, 249, 740, 250, 251, 252, 253, 254, 739, 255, 256, 257, 258, 259, 738, 260, 261, 262, 737, 263, 264, 265, 266, 267, 268, 736, 269, 270, 735, 271, 272, 734, 273, 274, 733, 275, 276, 732, 277, 278, 279, 280, 731, 281, 282, 283, 730, 284, 285, 729, 286, 287, 288, 289, 290, 728, 291, 292, 293, 294, 295, 727, 296, 297, 298, 299, 300, 301, 302, 726, 303, 304, 725, 305, 306, 307, 724, 308, 309, 723, 310, 311, 312, 722, 313, 314, 721, 315, 316, 317, 318, 720, 319, 320, 321, 322, 719, 323, 324, 325, 326, 718, 327, 328, 329, 717, 330, 331, 716, 332, 333, 334, 335, 336, 337, 715, 338, 339, 714, 340, 341, 342, 713, 343, 344, 345, 346, 347, 712, 348, 349, 350, 351, 352, 711, 353, 354, 355, 710, 356, 357, 358, 359, 709, 360, 361, 708, 362, 363, 364, 365, 366, 707, 367, 368, 369, 370, 706, 371, 372, 373, 705, 374, 375, 704, 376, 377, 378, 703, 379, 380, 381, 382, 702, 383, 384, 385, 386, 701, 387, 388, 700, 389, 390, 391, 392, 393, 699, 394, 395, 396, 397, 398, 399, 400, 401, 698, 402, 403, 404, 697, 405, 406, 696, 407, 408, 409, 695, 410, 411, 412, 413, 694, 414, 415, 693, 416, 417, 418, 419, 420, 692, 421, 422, 423, 424, 425, 426, 691, 427, 428, 429, 430, 690, 431, 432, 433, 689, 434, 435, 688, 436, 437, 438, 439, 687, 440, 441, 686, 442, 443, 685, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 863, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 862, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 861, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 860, 524, 525, 526, 859, 527, 528, 529, 530, 848, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 858, 541, 542, 543, 857, 544, 545, 546, 547, 856, 548, 549, 550, 684, 551, 552, 553, 554, 683, 555, 556, 557, 682, 558, 559, 560, 681, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 847, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 680, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 679, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 678, 604, 605, 677, 606, 607, 608, 609, 610, 611, 612, 613, 676, 614, 615, 616, 617, 618, 619, 620, 675, 621, 622, 674, 623, 624, 673, 625, 626, 627, 672, 628, 629, 671, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 846, 670 }
  uselistorder i1* %cpsr_c.global-to-local, { 56, 830, 829, 816, 11, 12, 13, 46, 47, 48, 49, 50, 773, 774, 775, 796, 797, 798, 799, 0, 1, 7, 2, 3, 4, 5, 6, 8, 9, 10, 812, 14, 15, 16, 17, 23, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 34, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 45, 40, 41, 42, 43, 44, 759, 760, 761, 762, 763, 769, 764, 765, 766, 767, 768, 770, 771, 772, 776, 777, 782, 778, 779, 780, 781, 783, 784, 785, 814, 786, 792, 787, 788, 789, 790, 791, 793, 794, 795, 813, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 831, 51, 52, 53, 54, 55, 832, 815, 758, 817, 818, 819, 57, 59, 58, 60, 61, 63, 65, 64, 833, 62, 66, 67, 68, 69, 70, 75, 71, 72, 73, 74, 823, 822, 820, 76, 77, 78, 79, 80, 821, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 757, 100, 101, 102, 103, 104, 105, 106, 756, 107, 108, 109, 755, 110, 111, 112, 754, 113, 114, 115, 116, 117, 118, 753, 119, 120, 121, 752, 122, 123, 751, 124, 125, 126, 750, 127, 128, 129, 130, 749, 131, 132, 133, 828, 134, 135, 748, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 825, 151, 152, 153, 154, 747, 155, 156, 157, 158, 159, 746, 160, 161, 162, 163, 164, 165, 166, 745, 167, 168, 744, 169, 170, 171, 743, 172, 173, 742, 174, 175, 176, 741, 177, 178, 740, 179, 180, 181, 182, 183, 739, 184, 185, 186, 738, 187, 188, 737, 189, 190, 191, 736, 192, 193, 194, 195, 735, 196, 197, 198, 734, 199, 200, 733, 201, 202, 203, 732, 204, 205, 731, 206, 207, 208, 730, 209, 210, 729, 211, 212, 213, 728, 214, 215, 216, 217, 727, 218, 219, 220, 221, 726, 222, 223, 725, 224, 225, 226, 724, 227, 228, 229, 723, 230, 231, 722, 232, 233, 234, 721, 235, 236, 237, 238, 720, 239, 240, 241, 242, 719, 243, 244, 245, 246, 718, 247, 248, 249, 250, 251, 717, 252, 253, 716, 254, 255, 256, 257, 715, 258, 259, 714, 260, 261, 713, 262, 263, 712, 264, 265, 711, 266, 267, 268, 269, 710, 270, 271, 272, 709, 273, 274, 708, 275, 276, 277, 278, 279, 707, 280, 281, 282, 283, 284, 706, 285, 286, 287, 288, 289, 290, 291, 705, 292, 293, 704, 294, 295, 296, 703, 297, 298, 702, 299, 300, 301, 701, 302, 303, 700, 304, 305, 306, 699, 307, 308, 309, 698, 310, 311, 312, 697, 313, 314, 315, 696, 316, 317, 695, 318, 319, 320, 321, 322, 323, 694, 324, 325, 693, 326, 327, 328, 692, 329, 330, 331, 332, 333, 691, 334, 335, 336, 337, 338, 690, 339, 340, 341, 689, 342, 343, 344, 345, 688, 346, 347, 687, 348, 349, 350, 351, 352, 686, 353, 354, 355, 356, 685, 357, 358, 359, 684, 360, 361, 683, 362, 363, 364, 682, 365, 366, 367, 368, 681, 369, 370, 371, 372, 680, 373, 374, 679, 375, 376, 377, 378, 379, 678, 380, 381, 382, 383, 384, 385, 386, 677, 387, 388, 389, 676, 390, 391, 675, 392, 393, 394, 674, 395, 396, 397, 398, 673, 399, 400, 672, 401, 402, 403, 404, 405, 671, 406, 407, 408, 409, 410, 411, 670, 412, 413, 669, 414, 415, 416, 668, 417, 418, 667, 419, 420, 421, 422, 666, 423, 424, 665, 425, 426, 842, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 841, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 840, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 839, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 838, 502, 503, 504, 837, 505, 506, 507, 508, 827, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 836, 519, 520, 521, 835, 522, 523, 524, 525, 834, 526, 527, 528, 664, 529, 530, 531, 532, 663, 533, 534, 535, 662, 536, 537, 538, 661, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 826, 550, 551, 552, 553, 554, 555, 556, 557, 558, 660, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 659, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 658, 581, 582, 657, 583, 584, 585, 586, 587, 588, 589, 656, 590, 591, 592, 593, 594, 595, 596, 655, 597, 598, 654, 599, 600, 653, 601, 602, 603, 652, 604, 605, 651, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 824, 650 }
  uselistorder i8 31, { 8, 2, 3, 9, 10, 4, 5, 6, 7, 0, 1 }
  uselistorder i32* bitcast ([3 x i8]* @global_var_15398.203 to i32*), { 4, 2, 3, 1, 0, 6, 5 }
  uselistorder [3 x i8]* @global_var_15398.203, { 1, 0 }
  uselistorder i8 58, { 8, 9, 5, 15, 6, 7, 4, 14, 3, 13, 2, 12, 0, 1, 10, 11 }
  uselistorder i8 57, { 8, 9, 5, 13, 6, 7, 4, 12, 3, 11, 2, 10, 0, 1 }
  uselistorder i8 62, { 12, 13, 9, 3, 10, 11, 8, 2, 7, 1, 6, 0, 4, 5 }
  uselistorder i8 61, { 12, 13, 9, 3, 10, 11, 8, 2, 7, 1, 6, 0, 4, 5 }
  uselistorder i32 (i32, i32*, i32, i32)* @function_132f0, { 16, 0, 1, 2, 3, 4, 5, 6, 7, 12, 13, 14, 15, 18, 19, 17, 20, 21, 22, 23, 24, 25, 26, 8, 9, 10, 11, 27, 28, 29, 30 }
  uselistorder i8 -3, { 3, 4, 1, 5, 2, 6, 0 }
  uselistorder i8 -4, { 1, 2, 3, 0 }
  uselistorder i32 (i32)* @function_11b14, { 12, 11, 37, 16, 38, 36, 35, 34, 33, 17, 15, 14, 13, 10, 9, 8, 7, 32, 31, 30, 39, 29, 28, 4, 3, 2, 1, 0, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 6, 5 }
  uselistorder i32 (i32, i32, i32, i32)* @function_1225c, { 4, 2, 3, 1, 0 }
  uselistorder i32 (i32, i32*)* @function_11ae8, { 1, 22, 0, 2, 3, 4, 5, 21, 23, 24, 25, 26, 6, 7, 8, 9, 30, 31, 32, 33, 34, 35, 36, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 27, 28, 29 }
  uselistorder i32 (i32)* @function_11bcc, { 29, 12, 30, 28, 27, 26, 25, 13, 11, 10, 9, 8, 24, 23, 22, 21, 4, 3, 2, 1, 0, 20, 19, 18, 17, 16, 15, 14, 7, 6, 5 }
  uselistorder i8* @global_var_1da31.131, { 4, 3, 2, 1, 0 }
  uselistorder i8* bitcast (i8** @global_var_1da30.130 to i8*), { 4, 0, 3, 2, 1 }
  uselistorder i32 ptrtoint (i8** @global_var_1da30.130 to i32), { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_12cbc, { 1, 0 }
  uselistorder i32 284, { 3, 4, 5, 6, 0, 1, 2, 7 }
  uselistorder i32 1708, { 1, 0 }
  uselistorder i32 1836, { 2, 0, 1 }
  uselistorder i32 ()* @function_ea30, { 3, 2, 1, 0 }
  uselistorder i8 2, { 0, 2, 1 }
  uselistorder i32 5888, { 1, 0 }
  uselistorder i32 (i32, i32*, i32, i32, i32, i32)* @function_1331c, { 0, 1, 2, 7, 3, 4, 5, 6, 9, 8 }
  uselistorder i32 16384, { 12, 60, 11, 48, 10, 49, 9, 50, 8, 51, 7, 52, 6, 53, 5, 54, 4, 55, 3, 56, 2, 57, 29, 58, 30, 59, 27, 62, 28, 63, 26, 61, 31, 64, 0, 65, 1, 66, 32, 33, 34, 35, 36, 37, 38, 14, 67, 41, 68, 40, 69, 42, 70, 43, 71, 13, 72, 39, 73, 15, 74, 16, 75, 18, 76, 17, 77, 20, 78, 19, 79, 21, 80, 22, 81, 23, 82, 24, 83, 25, 84, 44, 45, 46, 47 }
  uselistorder i32 (i32, i32, i32, i32)* @function_d114, { 9, 8, 7, 2, 6, 5, 4, 3, 0, 1 }
  uselistorder i32 (i32, i32)* @function_d0b8, { 11, 10, 9, 3, 8, 7, 6, 5, 4, 1, 0, 2 }
  uselistorder i32 182, { 1, 0 }
  uselistorder i32 247, { 4, 0, 1, 2, 3 }
  uselistorder i32 200, { 1, 0 }
  uselistorder i32 186, { 1, 0, 2 }
  uselistorder i32 135, { 1, 0, 2 }
  uselistorder i32 230, { 1, 0 }
  uselistorder i32 238, { 1, 0, 2 }
  uselistorder i32 219, { 1, 0, 2, 3 }
  uselistorder i32 239, { 5, 6, 4, 0, 1, 2, 3 }
  uselistorder i32 240, { 3, 2, 1, 0 }
  uselistorder i32 107, { 2, 0, 1, 3 }
  uselistorder i32 187, { 0, 1, 3, 2 }
  uselistorder i32 205, { 0, 2, 3, 1 }
  uselistorder i32 223, { 4, 5, 6, 0, 1, 2, 3 }
  uselistorder i32 118, { 2, 0, 1 }
  uselistorder i32 220, { 1, 0 }
  uselistorder i32 211, { 0, 2, 1 }
  uselistorder i32 111, { 2, 3, 0, 1 }
  uselistorder i32 104, { 0, 2, 1, 3, 4 }
  uselistorder i32 41, { 3, 2, 4, 5, 6, 0, 1, 7, 8 }
  uselistorder i32 165, { 1, 0, 2 }
  uselistorder i32 252, { 2, 0, 1, 3 }
  uselistorder i32 251, { 6, 7, 8, 4, 9, 10, 5, 0, 1, 2, 3 }
  uselistorder i32 231, { 2, 0, 1 }
  uselistorder i32 142, { 0, 3, 4, 1, 5, 2, 6 }
  uselistorder i32 139, { 1, 0, 2 }
  uselistorder i32 138, { 1, 2, 0, 3, 4 }
  uselistorder i32 222, { 0, 2, 3, 4, 5, 6, 1, 7 }
  uselistorder i32 221, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 134, { 2, 0, 1, 3 }
  uselistorder i32 131, { 0, 2, 1, 3 }
  uselistorder i32 236, { 1, 2, 0, 3 }
  uselistorder i32 254, { 4, 5, 6, 7, 0, 1, 2, 3 }
  uselistorder i32 253, { 5, 6, 4, 0, 1, 2, 3 }
  uselistorder i32 208, { 2, 0, 3, 1 }
  uselistorder i32 119, { 0, 2, 3, 1 }
  uselistorder i32 234, { 1, 2, 0 }
  uselistorder i32 116, { 2, 0, 1 }
  uselistorder i32 206, { 0, 4, 1, 2, 5, 3 }
  uselistorder i32 207, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32 203, { 2, 0, 1, 3 }
  uselistorder i32 166, { 3, 0, 1, 2 }
  uselistorder i32 163, { 2, 0, 1 }
  uselistorder i32 160, { 1, 0, 2 }
  uselistorder i32 216, { 1, 2, 0 }
  uselistorder i32 201, { 1, 0 }
  uselistorder i32 151, { 0, 2, 3, 1 }
  uselistorder i32 152, { 1, 0, 2 }
  uselistorder i32 190, { 1, 2, 3, 4, 0, 5, 6 }
  uselistorder i32 184, { 2, 0, 1, 3 }
  uselistorder i32 183, { 2, 0, 1 }
  uselistorder i32 156, { 1, 0 }
  uselistorder i32 143, { 1, 2, 3, 0 }
  uselistorder i32 149, { 2, 0, 3, 1 }
  uselistorder i32 158, { 0, 2, 3, 4, 5, 6, 1 }
  uselistorder i32 147, { 1, 0, 2 }
  uselistorder i32 153, { 1, 2, 0 }
  uselistorder i32 191, { 0, 2, 3, 1 }
  uselistorder i32 167, { 2, 3, 0, 4, 1 }
  uselistorder i32 192, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 215, { 2, 0, 1, 3 }
  uselistorder i32 214, { 0, 2, 1, 3 }
  uselistorder i32 137, { 1, 2, 0, 3 }
  uselistorder i32 126, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_1da04.141 to i32), { 5, 0, 4, 1, 3, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_15374.180 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_15350.172 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_15328.164 to i32), { 0, 1, 2, 5, 3, 6, 4, 7 }
  uselistorder i32 (i32, i32, i32)* @function_ec70, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_15354.159 to i32), { 1, 3, 2, 4, 0, 5 }
  uselistorder i32* @fp, { 2, 3, 4, 47, 48, 49, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 0, 31, 32, 33, 34, 1, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54 }
  uselistorder i8* @global_var_1da25.154, { 1, 0 }
  uselistorder i8* @global_var_1da24.146, { 1, 0 }
  uselistorder i32 1024, { 1, 0 }
  uselistorder i32 1023, { 2, 0, 1 }
  uselistorder i32 65280, { 35, 0, 1, 2, 3, 4, 36, 19, 5, 37, 25, 20, 21, 26, 27, 28, 38, 39, 40, 6, 41, 7, 8, 29, 30, 31, 42, 43, 44, 9, 45, 10, 11, 46, 12, 47, 32, 33, 48, 13, 49, 50, 22, 51, 52, 14, 53, 54, 23, 55, 56, 15, 57, 24, 34, 58, 59, 16, 60, 61, 17, 18 }
  uselistorder i32 ()* @function_e7cc, { 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 16, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 6, 5, 4, 3, 15, 14, 13, 12, 11, 10, 9, 8, 7, 2, 1, 0 }
  uselistorder i32 2048, { 6, 5, 0, 1, 2, 7, 3, 8, 9, 4, 10 }
  uselistorder i32* @global_var_1da9c.139, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* @global_var_1da98.137, { 1, 4, 2, 3, 0 }
  uselistorder i32 288, { 0, 1, 5, 6, 2, 7, 3, 4, 8 }
  uselistorder i32* @global_var_1da34.123, { 2, 0, 3, 4, 1, 5, 6 }
  uselistorder i32 (i32*)* @function_12d6c, { 0, 1, 2, 8, 3, 4, 5, 6, 7 }
  uselistorder i32 (i32)* @function_e824, { 1, 0 }
  uselistorder i32* @global_var_1da7c.49, { 4, 5, 1, 2, 3, 6, 7, 8, 9, 10, 0, 11, 15, 12, 13, 14 }
  uselistorder i32 ()* @function_12450, { 2, 1, 0 }
  uselistorder i32 ()* @function_12ac8, { 6, 2, 5, 4, 3, 1, 0 }
  uselistorder label %dec_label_pc_110c4.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_110c4.backedge.thread2083, { 9, 4, 8, 2, 7, 3, 6, 1, 5, 0 }
  uselistorder label %dec_label_pc_110c4.backedge.thread, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_11a48, { 1, 0 }
  uselistorder label %bb1928, { 1, 0 }
  uselistorder label %dec_label_pc_11914, { 1, 0 }
  uselistorder label %thread-pre-split689, { 1, 0 }
  uselistorder label %dec_label_pc_118a8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_117d8, { 1, 2, 0, 3, 4, 6, 5 }
  uselistorder label %dec_label_pc_117d0, { 1, 0 }
  uselistorder label %dec_label_pc_11758, { 2, 3, 1, 11, 4, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder label %dec_label_pc_11670, { 1, 2, 0, 3, 4, 6, 5 }
  uselistorder label %dec_label_pc_11668, { 1, 0 }
  uselistorder label %dec_label_pc_115ac, { 1, 2, 0, 3, 4, 6, 5 }
  uselistorder label %dec_label_pc_115a4, { 1, 0 }
  uselistorder label %dec_label_pc_114e4, { 1, 2, 0, 3, 4, 6, 5 }
  uselistorder label %dec_label_pc_114dc, { 1, 0 }
  uselistorder label %dec_label_pc_11420, { 1, 2, 0, 3, 4, 6, 5 }
  uselistorder label %dec_label_pc_11418, { 1, 0 }
  uselistorder label %dec_label_pc_1136c, { 1, 2, 0, 3, 5, 4 }
  uselistorder label %dec_label_pc_11364, { 1, 0 }
  uselistorder label %dec_label_pc_112d4, { 1, 0 }
  uselistorder label %dec_label_pc_112b8, { 1, 2, 0, 3, 4, 6, 5 }
  uselistorder label %dec_label_pc_112b0, { 1, 0 }
  uselistorder label %dec_label_pc_1124c, { 2, 1, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder label %dec_label_pc_1123c, { 6, 2, 3, 4, 1, 0, 5 }
  uselistorder label %.thread672, { 2, 0, 1 }
  uselistorder label %.thread670, { 2, 0, 1 }
  uselistorder label %dec_label_pc_111d8, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_11194, { 1, 0 }
  uselistorder label %dec_label_pc_11194.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_11128, { 1, 0 }
  uselistorder label %bb1888, { 1, 0 }
  uselistorder label %dec_label_pc_110dc, { 1, 0 }
  uselistorder label %dec_label_pc_110cc, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_110cc.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_110c0.loopexit, { 1, 4, 0, 2, 3 }
  uselistorder label %dec_label_pc_11020, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10f00, { 1, 7, 8, 4, 5, 0, 6, 2, 3 }
  uselistorder label %dec_label_pc_10edc, { 1, 0 }
  uselistorder label %bb1885, { 1, 0 }
  uselistorder label %bb1883, { 1, 2, 3, 0, 5, 4 }
  uselistorder label %dec_label_pc_10d48.dec_label_pc_10d48_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10d2c.dec_label_pc_10d2c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10d24, { 3, 0, 1, 2 }
  uselistorder label %bb1880, { 1, 0 }
  uselistorder label %dec_label_pc_10d04, { 1, 0 }
  uselistorder label %dec_label_pc_10cb8, { 1, 0 }
  uselistorder label %dec_label_pc_10b7c, { 10, 0, 1, 2, 7, 8, 3, 4, 5, 6, 9, 11 }
  uselistorder label %dec_label_pc_10b68, { 1, 0 }
  uselistorder label %dec_label_pc_10a38, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10a18, { 1, 0 }
  uselistorder label %dec_label_pc_10a04, { 1, 0 }
  uselistorder label %dec_label_pc_109ec, { 1, 2, 0 }
  uselistorder label %dec_label_pc_109c8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_109a4, { 1, 2, 0 }
  uselistorder label %thread-pre-split622, { 1, 0 }
  uselistorder label %bb1860, { 1, 0 }
  uselistorder label %dec_label_pc_10960, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1093c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10918, { 2, 0, 3, 1 }
  uselistorder label %bb1851, { 1, 0 }
  uselistorder label %bb1849, { 1, 0 }
  uselistorder label %dec_label_pc_108e4, { 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_108c4, { 1, 2, 0, 3 }
  uselistorder label %bb1846, { 1, 0 }
  uselistorder label %dec_label_pc_108a8, { 1, 0 }
  uselistorder label %thread-pre-split594, { 1, 0 }
  uselistorder label %bb1843, { 1, 0 }
  uselistorder label %thread-pre-split593, { 1, 0 }
  uselistorder label %bb1840, { 1, 0 }
  uselistorder label %thread-pre-split591, { 1, 0 }
  uselistorder label %bb1835, { 1, 0 }
  uselistorder label %thread-pre-split589, { 1, 0 }
  uselistorder label %bb1830, { 2, 1, 0 }
  uselistorder label %dec_label_pc_107d8, { 1, 2, 0 }
  uselistorder label %thread-pre-split582, { 1, 0 }
  uselistorder label %bb1822, { 1, 0 }
  uselistorder label %dec_label_pc_10794, { 2, 1, 3, 0 }
  uselistorder label %bb1819, { 1, 0 }
  uselistorder label %bb1817, { 1, 0 }
  uselistorder label %dec_label_pc_1076c, { 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_10748, { 2, 0, 3, 1 }
  uselistorder label %bb1812, { 1, 0 }
  uselistorder label %bb1810, { 1, 0 }
  uselistorder label %dec_label_pc_10714, { 2, 0, 3, 1 }
  uselistorder label %bb1807, { 1, 0 }
  uselistorder label %bb1805, { 1, 0 }
  uselistorder label %dec_label_pc_106e0, { 2, 1, 3, 0 }
  uselistorder label %bb1802, { 1, 0 }
  uselistorder label %bb1800, { 1, 0 }
  uselistorder label %dec_label_pc_106b8, { 2, 0, 3, 1 }
  uselistorder label %bb1796, { 1, 0 }
  uselistorder label %bb1794, { 1, 0 }
  uselistorder label %dec_label_pc_10684, { 2, 0, 3, 1 }
  uselistorder label %bb1791, { 1, 0 }
  uselistorder label %bb1789, { 1, 0 }
  uselistorder label %dec_label_pc_10650, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10634, { 2, 0, 3, 1 }
  uselistorder label %bb1785, { 1, 0 }
  uselistorder label %bb1783, { 1, 0 }
  uselistorder label %dec_label_pc_10600, { 2, 0, 3, 1 }
  uselistorder label %bb1780, { 1, 0 }
  uselistorder label %bb1778, { 1, 0 }
  uselistorder label %dec_label_pc_105cc, { 2, 0, 3, 1 }
  uselistorder label %bb1775, { 1, 0 }
  uselistorder label %bb1773, { 1, 0 }
  uselistorder label %dec_label_pc_1059c, { 2, 0, 3, 1 }
  uselistorder label %bb1770, { 1, 0 }
  uselistorder label %bb1768, { 1, 0 }
  uselistorder label %dec_label_pc_1056c, { 1, 2, 0 }
  uselistorder label %bb1766, { 1, 0 }
  uselistorder label %bb1764, { 1, 0 }
  uselistorder label %dec_label_pc_10544, { 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_10520, { 1, 0, 2 }
  uselistorder label %bb1760, { 1, 0 }
  uselistorder label %bb1758, { 1, 0 }
  uselistorder label %dec_label_pc_104f8, { 2, 0, 3, 1 }
  uselistorder label %bb1755, { 1, 0 }
  uselistorder label %bb1753, { 1, 0 }
  uselistorder label %dec_label_pc_104c4, { 2, 0, 3, 1 }
  uselistorder label %bb1750, { 1, 0 }
  uselistorder label %bb1748, { 1, 0 }
  uselistorder label %dec_label_pc_10490, { 1, 2, 0 }
  uselistorder label %bb1746, { 1, 0 }
  uselistorder label %bb1744, { 1, 0 }
  uselistorder label %dec_label_pc_10464, { 1, 0 }
  uselistorder label %dec_label_pc_10458, { 1, 0 }
  uselistorder label %dec_label_pc_10438, { 1, 0 }
  uselistorder label %dec_label_pc_10420, { 1, 0 }
  uselistorder label %dec_label_pc_103f4, { 1, 0 }
  uselistorder label %dec_label_pc_103e8, { 1, 0 }
  uselistorder label %dec_label_pc_103c8, { 1, 0 }
  uselistorder label %dec_label_pc_10390, { 1, 0 }
  uselistorder label %dec_label_pc_10384, { 1, 0 }
  uselistorder label %dec_label_pc_1036c, { 1, 0 }
  uselistorder label %dec_label_pc_10358, { 1, 0 }
  uselistorder label %dec_label_pc_10340, { 1, 0 }
  uselistorder label %dec_label_pc_10328, { 1, 0, 2 }
  uselistorder label %bb1733, { 1, 0 }
  uselistorder label %bb1731, { 1, 0 }
  uselistorder label %dec_label_pc_102f4, { 2, 0, 3, 1 }
  uselistorder label %bb1726, { 1, 0 }
  uselistorder label %bb1724, { 1, 0 }
  uselistorder label %dec_label_pc_102c4, { 2, 1, 3, 0 }
  uselistorder label %bb1721, { 1, 0 }
  uselistorder label %bb1719, { 1, 0 }
  uselistorder label %dec_label_pc_10290, { 2, 1, 3, 0 }
  uselistorder label %bb1713, { 1, 0 }
  uselistorder label %bb1711, { 1, 0 }
  uselistorder label %dec_label_pc_10268, { 2, 1, 3, 0 }
  uselistorder label %bb1707, { 1, 0 }
  uselistorder label %bb1705, { 1, 0 }
  uselistorder label %dec_label_pc_10240, { 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_1021c, { 2, 0, 3, 1 }
  uselistorder label %bb1700, { 1, 0 }
  uselistorder label %bb1698, { 1, 0 }
  uselistorder label %dec_label_pc_101e8, { 2, 0, 3, 1 }
  uselistorder label %bb1695, { 1, 0 }
  uselistorder label %bb1693, { 1, 0 }
  uselistorder label %dec_label_pc_101b4, { 1, 0, 2 }
  uselistorder label %bb1690, { 1, 0 }
  uselistorder label %bb1688, { 1, 0 }
  uselistorder label %dec_label_pc_1018c, { 1, 0, 2 }
  uselistorder label %bb1685, { 1, 0 }
  uselistorder label %bb1683, { 1, 0 }
  uselistorder label %dec_label_pc_10168, { 1, 0, 2 }
  uselistorder label %bb1680, { 1, 0 }
  uselistorder label %bb1678, { 1, 0 }
  uselistorder label %dec_label_pc_10140, { 2, 0, 3, 1 }
  uselistorder label %bb1675, { 1, 0 }
  uselistorder label %bb1673, { 1, 0 }
  uselistorder label %dec_label_pc_10110, { 1, 0 }
  uselistorder label %dec_label_pc_100f8, { 1, 0 }
  uselistorder label %dec_label_pc_100e0, { 1, 2, 0 }
  uselistorder label %bb1668, { 1, 0 }
  uselistorder label %bb1666, { 1, 0 }
  uselistorder label %dec_label_pc_100b8, { 2, 0, 3, 1 }
  uselistorder label %bb1663, { 1, 0 }
  uselistorder label %bb1661, { 1, 0 }
  uselistorder label %bb1659, { 1, 0 }
  uselistorder label %dec_label_pc_10058, { 2, 1, 3, 0 }
  uselistorder label %bb1654, { 1, 0 }
  uselistorder label %bb1652, { 1, 0 }
  uselistorder label %dec_label_pc_10020, { 2, 0, 3, 1 }
  uselistorder label %bb1646, { 1, 0 }
  uselistorder label %dec_label_pc_fff0, { 1, 2, 0 }
  uselistorder label %bb1644, { 1, 0 }
  uselistorder label %bb1642, { 1, 0 }
  uselistorder label %dec_label_pc_ffc4, { 2, 1, 3, 0 }
  uselistorder label %bb1639, { 1, 0 }
  uselistorder label %bb1637, { 1, 0 }
  uselistorder label %dec_label_pc_ff90, { 1, 0, 2 }
  uselistorder label %bb1631, { 1, 0 }
  uselistorder label %bb1629, { 1, 0 }
  uselistorder label %dec_label_pc_ff5c, { 2, 0, 3, 1 }
  uselistorder label %bb1624, { 1, 0 }
  uselistorder label %bb1622, { 1, 0 }
  uselistorder label %dec_label_pc_ff28, { 2, 0, 3, 1 }
  uselistorder label %bb1619, { 1, 0 }
  uselistorder label %dec_label_pc_fef8, { 1, 2, 0 }
  uselistorder label %bb1617, { 1, 0 }
  uselistorder label %bb1615, { 1, 0 }
  uselistorder label %dec_label_pc_fecc, { 1, 2, 0 }
  uselistorder label %bb1613, { 1, 0 }
  uselistorder label %bb1611, { 1, 0 }
  uselistorder label %dec_label_pc_fea4, { 2, 1, 3, 0 }
  uselistorder label %bb1608, { 1, 0 }
  uselistorder label %bb1606, { 1, 0 }
  uselistorder label %dec_label_pc_fe70, { 2, 1, 3, 0 }
  uselistorder label %bb1600, { 1, 0 }
  uselistorder label %dec_label_pc_fe40, { 1, 0, 2 }
  uselistorder label %dec_label_pc_fe28, { 2, 0, 3, 1 }
  uselistorder label %bb1593, { 1, 0 }
  uselistorder label %bb1591, { 1, 0 }
  uselistorder label %dec_label_pc_fdf4, { 2, 0, 3, 1 }
  uselistorder label %bb1588, { 1, 0 }
  uselistorder label %bb1586, { 1, 0 }
  uselistorder label %dec_label_pc_fdc0, { 1, 2, 0 }
  uselistorder label %bb1584, { 1, 0 }
  uselistorder label %dec_label_pc_fd9c, { 2, 1, 3, 0 }
  uselistorder label %bb1581, { 1, 0 }
  uselistorder label %dec_label_pc_fd78, { 1, 0, 2 }
  uselistorder label %bb1577, { 1, 0 }
  uselistorder label %bb1575, { 1, 0 }
  uselistorder label %dec_label_pc_fd48, { 1, 2, 0 }
  uselistorder label %bb1571, { 1, 0 }
  uselistorder label %bb1569, { 1, 0 }
  uselistorder label %dec_label_pc_fd00, { 1, 0 }
  uselistorder label %dec_label_pc_fcc0, { 1, 0 }
  uselistorder label %dec_label_pc_fca8, { 1, 0 }
  uselistorder label %dec_label_pc_fc4c, { 1, 0 }
  uselistorder label %dec_label_pc_fc34, { 1, 0 }
  uselistorder label %dec_label_pc_fc20, { 1, 0 }
  uselistorder label %dec_label_pc_fc08, { 1, 0 }
  uselistorder label %thread-pre-split210, { 1, 0 }
  uselistorder label %bb1551, { 1, 0 }
  uselistorder label %dec_label_pc_fba8, { 1, 2, 0 }
  uselistorder label %thread-pre-split205, { 1, 0 }
  uselistorder label %bb1548, { 1, 0 }
  uselistorder label %thread-pre-split203, { 1, 0 }
  uselistorder label %bb1543, { 1, 0 }
  uselistorder label %thread-pre-split202, { 1, 0 }
  uselistorder label %bb1540, { 1, 0 }
  uselistorder label %thread-pre-split201, { 1, 0 }
  uselistorder label %bb1537, { 1, 0 }
  uselistorder label %thread-pre-split199, { 1, 0 }
  uselistorder label %bb1532, { 1, 0 }
  uselistorder label %dec_label_pc_faa0, { 1, 2, 0 }
  uselistorder label %thread-pre-split193, { 1, 0 }
  uselistorder label %bb1526, { 1, 0 }
  uselistorder label %thread-pre-split191, { 1, 0 }
  uselistorder label %bb1521, { 1, 0 }
  uselistorder label %thread-pre-split189, { 1, 0 }
  uselistorder label %bb1516, { 1, 0 }
  uselistorder label %thread-pre-split188, { 1, 0 }
  uselistorder label %bb1513, { 1, 0 }
  uselistorder label %thread-pre-split187, { 1, 0 }
  uselistorder label %bb1510, { 1, 0 }
  uselistorder label %dec_label_pc_f9a4, { 1, 2, 0 }
  uselistorder label %thread-pre-split181, { 1, 0 }
  uselistorder label %bb1504, { 1, 0 }
  uselistorder label %thread-pre-split180, { 1, 0 }
  uselistorder label %bb1501, { 1, 0 }
  uselistorder label %thread-pre-split179, { 1, 0 }
  uselistorder label %bb1498, { 1, 0 }
  uselistorder label %thread-pre-split178, { 1, 0 }
  uselistorder label %bb1495, { 1, 0 }
  uselistorder label %thread-pre-split177, { 1, 0 }
  uselistorder label %bb1492, { 1, 0 }
  uselistorder label %bb1490, { 1, 0 }
  uselistorder label %bb1488, { 1, 0 }
  uselistorder label %thread-pre-split176, { 1, 0 }
  uselistorder label %bb1485, { 1, 0 }
  uselistorder label %dec_label_pc_f8a0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_f87c, { 1, 2, 0 }
  uselistorder label %bb1480, { 1, 0 }
  uselistorder label %bb1478, { 1, 0 }
  uselistorder label %dec_label_pc_f850, { 1, 2, 0 }
  uselistorder label %bb1475, { 1, 0 }
  uselistorder label %thread-pre-split165, { 1, 0 }
  uselistorder label %bb1472, { 1, 0 }
  uselistorder label %thread-pre-split163, { 1, 0 }
  uselistorder label %bb1467, { 1, 0 }
  uselistorder label %dec_label_pc_f7c8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_f7a4, { 1, 2, 0 }
  uselistorder label %bb1460, { 1, 0 }
  uselistorder label %bb1458, { 1, 0 }
  uselistorder label %dec_label_pc_f77c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_f760, { 1, 2, 0 }
  uselistorder label %bb1456, { 1, 0 }
  uselistorder label %bb1454, { 1, 0 }
  uselistorder label %dec_label_pc_f738, { 1, 2, 0 }
  uselistorder label %dec_label_pc_f714, { 1, 2, 0 }
  uselistorder label %dec_label_pc_f6f0, { 1, 2, 0 }
  uselistorder label %bb1446, { 1, 0 }
  uselistorder label %bb1444, { 1, 0 }
  uselistorder label %thread-pre-split130, { 1, 0 }
  uselistorder label %bb1441, { 1, 0 }
  uselistorder label %thread-pre-split129, { 1, 0 }
  uselistorder label %bb1438, { 1, 0 }
  uselistorder label %dec_label_pc_f64c, { 1, 2, 0 }
  uselistorder label %bb1429, { 1, 0 }
  uselistorder label %bb1427, { 1, 0 }
  uselistorder label %bb1425, { 1, 0 }
  uselistorder label %bb1423, { 1, 0 }
  uselistorder label %dec_label_pc_f5ec, { 1, 0 }
  uselistorder label %dec_label_pc_f5d0, { 1, 0 }
  uselistorder label %dec_label_pc_f5b4, { 1, 0 }
  uselistorder label %dec_label_pc_f59c, { 1, 0 }
  uselistorder label %dec_label_pc_f544, { 1, 0 }
  uselistorder label %dec_label_pc_f528, { 1, 0 }
  uselistorder label %dec_label_pc_f50c, { 1, 0 }
  uselistorder label %dec_label_pc_f4f0, { 1, 0 }
  uselistorder label %dec_label_pc_f4a0, { 1, 0 }
  uselistorder label %dec_label_pc_f484, { 1, 0 }
  uselistorder label %dec_label_pc_f478, { 1, 0 }
  uselistorder label %dec_label_pc_f45c, { 1, 0 }
  uselistorder label %dec_label_pc_f444, { 1, 0 }
  uselistorder label %dec_label_pc_f424, { 1, 0 }
  uselistorder label %dec_label_pc_f3e0, { 1, 0 }
  uselistorder label %dec_label_pc_f3d4, { 1, 0 }
  uselistorder label %dec_label_pc_f37c, { 1, 0 }
  uselistorder label %dec_label_pc_f348, { 1, 0 }
  uselistorder label %dec_label_pc_f334, { 1, 0 }
  uselistorder label %dec_label_pc_f320, { 1, 0 }
  uselistorder label %dec_label_pc_f2f8, { 1, 0 }
  uselistorder label %dec_label_pc_f2e4, { 1, 0 }
  uselistorder label %dec_label_pc_f2d0, { 1, 0 }
  uselistorder label %dec_label_pc_f2b8, { 1, 0 }
  uselistorder label %dec_label_pc_f29c, { 1, 0 }
  uselistorder label %dec_label_pc_f248, { 1, 0 }
  uselistorder label %dec_label_pc_f230, { 1, 0 }
  uselistorder label %bb1330, { 1, 0 }
  uselistorder label %dec_label_pc_f170, { 11, 117, 0, 12, 118, 119, 13, 120, 121, 14, 122, 123, 124, 125, 15, 126, 16, 17, 127, 128, 18, 129, 19, 130, 131, 132, 20, 133, 21, 22, 23, 24, 25, 134, 26, 27, 28, 29, 30, 135, 31, 32, 33, 34, 136, 35, 36, 137, 37, 38, 138, 39, 40, 41, 42, 43, 139, 44, 45, 46, 47, 48, 49, 50, 51, 52, 140, 53, 54, 55, 56, 57, 58, 59, 141, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 142, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 91, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 92, 180, 181, 182, 93, 183, 184, 185, 186, 94, 187, 95, 96, 188, 189, 190, 97, 98, 99, 191, 192, 193, 100, 101, 102, 194, 103, 195, 104, 105, 106, 196, 107, 108, 109, 110, 111, 112, 113, 197, 198, 199, 114, 115, 116, 200, 201, 202, 203, 1, 204, 2, 205, 3, 206, 4, 207, 5, 208, 6, 209, 7, 210, 8, 211, 9, 212, 10, 213, 214 }
  uselistorder label %dec_label_pc_ef8c, { 1, 2, 0 }
}

define i32 @function_11ae8(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_11ae8:
  %v3_11aec = mul i32 %arg1, 8
  %v2_11af0 = add i32 %v3_11aec, ptrtoint (i32* @global_var_1daa8.209 to i32)
  %v2_11af4 = icmp eq i32* %arg2, null
  br i1 %v2_11af4, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_11ae8
  %v3_11b0011 = inttoptr i32 %v2_11af0 to i32*
  %v4_11b0012 = load i32, i32* %v3_11b0011, align 4
  br label %bb15

bb:                                               ; preds = %dec_label_pc_11ae8
  %v2_11af8 = add i32 %v3_11aec, add (i32 ptrtoint (i32* @global_var_1daa8.209 to i32), i32 5)
  %v3_11af8 = inttoptr i32 %v2_11af8 to i8*
  %v4_11af8 = load i8, i8* %v3_11af8, align 1
  %v5_11af8 = zext i8 %v4_11af8 to i32
  store i32 %v5_11af8, i32* @r2, align 4
  %v2_11afc = add i32 %v3_11aec, add (i32 ptrtoint (i32* @global_var_1daa8.209 to i32), i32 4)
  %v3_11afc = inttoptr i32 %v2_11afc to i8*
  %v4_11afc = load i8, i8* %v3_11afc, align 4
  %v5_11afc = zext i8 %v4_11afc to i32
  %v3_11b00 = inttoptr i32 %v2_11af0 to i32*
  %v4_11b00 = load i32, i32* %v3_11b00, align 4
  %v5_11b04 = mul nuw nsw i32 %v5_11af8, 256
  %v6_11b04 = or i32 %v5_11afc, %v5_11b04
  store i32 %v6_11b04, i32* %arg2, align 4
  br label %bb15

bb15:                                             ; preds = %.thread, %bb
  %v4_11b00714 = phi i32 [ %v4_11b0012, %.thread ], [ %v4_11b00, %bb ]
  ret i32 %v4_11b00714

; uselistorder directives
  uselistorder i32 %v2_11af0, { 1, 0 }
  uselistorder i32 %v3_11aec, { 2, 1, 0 }
  uselistorder label %bb15, { 1, 0 }
}

define i32 @function_11b14(i32 %arg1) local_unnamed_addr {
dec_label_pc_11b14:
  %ip.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_11b14 = mul i32 %arg1, 8
  %v3_11b18 = load i32, i32* @r4, align 4
  store i32 %v3_11b18, i32* %stack_var_-20, align 4
  %v3_11b28 = and i32 %v3_11b14, 2040
  %v2_11b2c = add i32 %v3_11b28, ptrtoint (i32* @global_var_1daa8.209 to i32)
  store i32 %v2_11b2c, i32* @lr, align 4
  %v1_11b34 = add i32 %v3_11b28, add (i32 ptrtoint (i32* @global_var_1daa8.209 to i32), i32 4)
  store i32 %v1_11b34, i32* %r7.global-to-local, align 4
  %v2_11b38 = load i32, i32* @global_var_1d878.212, align 4
  store i32 %v2_11b38, i32* @r2, align 4
  %v2_11b3c = inttoptr i32 %v1_11b34 to i8*
  %v3_11b3c = load i8, i8* %v2_11b3c, align 4
  %v4_11b3c = zext i8 %v3_11b3c to i32
  store i32 %v4_11b3c, i32* @r1, align 4
  %v1_11b40 = add i32 %v3_11b28, add (i32 ptrtoint (i32* @global_var_1daa8.209 to i32), i32 5)
  %v2_11b40 = inttoptr i32 %v1_11b40 to i8*
  %v3_11b40 = load i8, i8* %v2_11b40, align 1
  %v4_11b40 = zext i8 %v3_11b40 to i32
  %v3_11b44 = udiv i32 %v2_11b38, 256
  %v4_11b48 = mul nuw nsw i32 %v4_11b40, 256
  %v5_11b48 = or i32 %v4_11b48, %v4_11b3c
  %v7_11b48 = icmp eq i32 %v5_11b48, 0
  store i1 %v7_11b48, i1* @cpsr_z, align 1
  %v3_11b4c = udiv i32 %v2_11b38, 65536
  %v1_11b50 = urem i32 %v3_11b44, 256
  store i32 %v1_11b50, i32* %r6.global-to-local, align 4
  %v1_11b54 = urem i32 %v3_11b4c, 256
  store i32 %v1_11b54, i32* %r5.global-to-local, align 4
  %v3_11b58 = udiv i32 %v2_11b38, 16777216
  store i32 %v3_11b58, i32* %r4.global-to-local, align 4
  %v1_11b5c = urem i32 %v2_11b38, 256
  br i1 %v7_11b48, label %bb, label %bb8

bb:                                               ; preds = %dec_label_pc_11b14
  store i32 %v3_11b18, i32* @r4, align 4
  ret i32 %v1_11b5c

bb8:                                              ; preds = %dec_label_pc_11b14
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_11b68

dec_label_pc_11b68:                               ; preds = %dec_label_pc_11b68, %bb8
  %v2_11b74 = phi i32 [ %v1_11bb0, %dec_label_pc_11b68 ], [ 0, %bb8 ]
  %v0_11b68 = phi i32 [ %v0_11ba8, %dec_label_pc_11b68 ], [ %v2_11b2c, %bb8 ]
  %v1_11b68 = inttoptr i32 %v0_11b68 to i32*
  %v2_11b68 = load i32, i32* %v1_11b68, align 4
  %v2_11b6c = add i32 %v2_11b68, %v2_11b74
  %v3_11b6c = inttoptr i32 %v2_11b6c to i8*
  %v4_11b6c = load i8, i8* %v3_11b6c, align 1
  %v6_11b6c = zext i8 %v4_11b6c to i32
  %v2_11b70 = xor i32 %v6_11b6c, %v1_11b5c
  %v1_11b74 = trunc i32 %v2_11b70 to i8
  store i8 %v1_11b74, i8* %v3_11b6c, align 1
  %v0_11b78 = load i32, i32* @lr, align 4
  %v1_11b78 = inttoptr i32 %v0_11b78 to i32*
  %v2_11b78 = load i32, i32* %v1_11b78, align 4
  %v0_11b7c = load i32, i32* %ip.global-to-local, align 4
  %v2_11b7c = add i32 %v0_11b7c, %v2_11b78
  %v3_11b7c = inttoptr i32 %v2_11b7c to i8*
  %v4_11b7c = load i8, i8* %v3_11b7c, align 1
  %v6_11b7c = zext i8 %v4_11b7c to i32
  %v0_11b80 = load i32, i32* %r6.global-to-local, align 4
  %v2_11b80 = xor i32 %v0_11b80, %v6_11b7c
  %v1_11b84 = trunc i32 %v2_11b80 to i8
  store i8 %v1_11b84, i8* %v3_11b7c, align 1
  %v0_11b88 = load i32, i32* @lr, align 4
  %v1_11b88 = inttoptr i32 %v0_11b88 to i32*
  %v2_11b88 = load i32, i32* %v1_11b88, align 4
  %v0_11b8c = load i32, i32* %ip.global-to-local, align 4
  %v2_11b8c = add i32 %v0_11b8c, %v2_11b88
  %v3_11b8c = inttoptr i32 %v2_11b8c to i8*
  %v4_11b8c = load i8, i8* %v3_11b8c, align 1
  %v6_11b8c = zext i8 %v4_11b8c to i32
  %v0_11b90 = load i32, i32* %r5.global-to-local, align 4
  %v2_11b90 = xor i32 %v0_11b90, %v6_11b8c
  %v1_11b94 = trunc i32 %v2_11b90 to i8
  store i8 %v1_11b94, i8* %v3_11b8c, align 1
  %v0_11b98 = load i32, i32* @lr, align 4
  %v1_11b98 = inttoptr i32 %v0_11b98 to i32*
  %v2_11b98 = load i32, i32* %v1_11b98, align 4
  store i32 %v2_11b98, i32* @r1, align 4
  %v0_11b9c = load i32, i32* %ip.global-to-local, align 4
  %v2_11b9c = add i32 %v0_11b9c, %v2_11b98
  %v3_11b9c = inttoptr i32 %v2_11b9c to i8*
  %v4_11b9c = load i8, i8* %v3_11b9c, align 1
  %v6_11b9c = zext i8 %v4_11b9c to i32
  %v0_11ba0 = load i32, i32* %r4.global-to-local, align 4
  %v2_11ba0 = xor i32 %v0_11ba0, %v6_11b9c
  %v1_11ba4 = trunc i32 %v2_11ba0 to i8
  store i8 %v1_11ba4, i8* %v3_11b9c, align 1
  %v0_11ba8 = load i32, i32* @lr, align 4
  %v1_11ba8 = add i32 %v0_11ba8, 4
  %v2_11ba8 = inttoptr i32 %v1_11ba8 to i8*
  %v3_11ba8 = load i8, i8* %v2_11ba8, align 1
  %v4_11ba8 = zext i8 %v3_11ba8 to i32
  %v0_11bac = load i32, i32* %r7.global-to-local, align 4
  %v1_11bac = add i32 %v0_11bac, 1
  %v2_11bac = inttoptr i32 %v1_11bac to i8*
  %v3_11bac = load i8, i8* %v2_11bac, align 1
  %v4_11bac = zext i8 %v3_11bac to i32
  %v0_11bb0 = load i32, i32* %ip.global-to-local, align 4
  %v1_11bb0 = add i32 %v0_11bb0, 1
  store i32 %v1_11bb0, i32* %ip.global-to-local, align 4
  %v4_11bb4 = mul nuw nsw i32 %v4_11bac, 256
  %v5_11bb4 = or i32 %v4_11bb4, %v4_11ba8
  store i32 %v5_11bb4, i32* @r2, align 4
  %v9_11bb8 = icmp eq i32 %v5_11bb4, %v1_11bb0
  store i1 %v9_11bb8, i1* @cpsr_z, align 1
  %v8_11bbc = icmp sgt i32 %v5_11bb4, %v1_11bb0
  br i1 %v8_11bbc, label %dec_label_pc_11b68, label %dec_label_pc_11bc0

dec_label_pc_11bc0:                               ; preds = %dec_label_pc_11b68
  %v2_11bc0 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_11bc0, i32* @r4, align 4
  ret i32 %v1_11b5c

; uselistorder directives
  uselistorder i32 %v1_11bb0, { 1, 2, 3, 0 }
  uselistorder i32 %v0_11ba8, { 1, 0 }
  uselistorder i32 %v1_11b5c, { 1, 2, 0 }
  uselistorder i32 %v2_11b38, { 3, 0, 1, 2, 4 }
}

define i32 @function_11bcc(i32 %arg1) local_unnamed_addr {
dec_label_pc_11bcc:
  %ip.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_11bcc = mul i32 %arg1, 8
  %v3_11bd0 = load i32, i32* @r4, align 4
  store i32 %v3_11bd0, i32* %stack_var_-20, align 4
  %v3_11be0 = and i32 %v3_11bcc, 2040
  %v2_11be4 = add i32 %v3_11be0, ptrtoint (i32* @global_var_1daa8.209 to i32)
  store i32 %v2_11be4, i32* @lr, align 4
  %v1_11bec = add i32 %v3_11be0, add (i32 ptrtoint (i32* @global_var_1daa8.209 to i32), i32 4)
  store i32 %v1_11bec, i32* %r7.global-to-local, align 4
  %v2_11bf0 = load i32, i32* @global_var_1d878.212, align 4
  store i32 %v2_11bf0, i32* @r2, align 4
  %v2_11bf4 = inttoptr i32 %v1_11bec to i8*
  %v3_11bf4 = load i8, i8* %v2_11bf4, align 4
  %v4_11bf4 = zext i8 %v3_11bf4 to i32
  %v1_11bf8 = add i32 %v3_11be0, add (i32 ptrtoint (i32* @global_var_1daa8.209 to i32), i32 5)
  %v2_11bf8 = inttoptr i32 %v1_11bf8 to i8*
  %v3_11bf8 = load i8, i8* %v2_11bf8, align 1
  %v4_11bf8 = zext i8 %v3_11bf8 to i32
  %v3_11bfc = udiv i32 %v2_11bf0, 256
  %v4_11c00 = mul nuw nsw i32 %v4_11bf8, 256
  %v5_11c00 = or i32 %v4_11c00, %v4_11bf4
  %v7_11c00 = icmp eq i32 %v5_11c00, 0
  %v3_11c04 = udiv i32 %v2_11bf0, 65536
  %v1_11c08 = urem i32 %v3_11bfc, 256
  store i32 %v1_11c08, i32* %r6.global-to-local, align 4
  %v1_11c0c = urem i32 %v3_11c04, 256
  store i32 %v1_11c0c, i32* %r5.global-to-local, align 4
  %v3_11c10 = udiv i32 %v2_11bf0, 16777216
  store i32 %v3_11c10, i32* %r4.global-to-local, align 4
  %v1_11c14 = urem i32 %v2_11bf0, 256
  br i1 %v7_11c00, label %bb, label %bb8

bb:                                               ; preds = %dec_label_pc_11bcc
  store i32 %v3_11bd0, i32* @r4, align 4
  ret i32 %v1_11c14

bb8:                                              ; preds = %dec_label_pc_11bcc
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_11c20

dec_label_pc_11c20:                               ; preds = %dec_label_pc_11c20, %bb8
  %v2_11c2c = phi i32 [ %v1_11c68, %dec_label_pc_11c20 ], [ 0, %bb8 ]
  %v0_11c20 = phi i32 [ %v0_11c60, %dec_label_pc_11c20 ], [ %v2_11be4, %bb8 ]
  %v1_11c20 = inttoptr i32 %v0_11c20 to i32*
  %v2_11c20 = load i32, i32* %v1_11c20, align 4
  %v2_11c24 = add i32 %v2_11c20, %v2_11c2c
  %v3_11c24 = inttoptr i32 %v2_11c24 to i8*
  %v4_11c24 = load i8, i8* %v3_11c24, align 1
  %v6_11c24 = zext i8 %v4_11c24 to i32
  %v2_11c28 = xor i32 %v6_11c24, %v1_11c14
  %v1_11c2c = trunc i32 %v2_11c28 to i8
  store i8 %v1_11c2c, i8* %v3_11c24, align 1
  %v0_11c30 = load i32, i32* @lr, align 4
  %v1_11c30 = inttoptr i32 %v0_11c30 to i32*
  %v2_11c30 = load i32, i32* %v1_11c30, align 4
  %v0_11c34 = load i32, i32* %ip.global-to-local, align 4
  %v2_11c34 = add i32 %v0_11c34, %v2_11c30
  %v3_11c34 = inttoptr i32 %v2_11c34 to i8*
  %v4_11c34 = load i8, i8* %v3_11c34, align 1
  %v6_11c34 = zext i8 %v4_11c34 to i32
  %v0_11c38 = load i32, i32* %r6.global-to-local, align 4
  %v2_11c38 = xor i32 %v0_11c38, %v6_11c34
  %v1_11c3c = trunc i32 %v2_11c38 to i8
  store i8 %v1_11c3c, i8* %v3_11c34, align 1
  %v0_11c40 = load i32, i32* @lr, align 4
  %v1_11c40 = inttoptr i32 %v0_11c40 to i32*
  %v2_11c40 = load i32, i32* %v1_11c40, align 4
  %v0_11c44 = load i32, i32* %ip.global-to-local, align 4
  %v2_11c44 = add i32 %v0_11c44, %v2_11c40
  %v3_11c44 = inttoptr i32 %v2_11c44 to i8*
  %v4_11c44 = load i8, i8* %v3_11c44, align 1
  %v6_11c44 = zext i8 %v4_11c44 to i32
  %v0_11c48 = load i32, i32* %r5.global-to-local, align 4
  %v2_11c48 = xor i32 %v0_11c48, %v6_11c44
  %v1_11c4c = trunc i32 %v2_11c48 to i8
  store i8 %v1_11c4c, i8* %v3_11c44, align 1
  %v0_11c50 = load i32, i32* @lr, align 4
  %v1_11c50 = inttoptr i32 %v0_11c50 to i32*
  %v2_11c50 = load i32, i32* %v1_11c50, align 4
  %v0_11c54 = load i32, i32* %ip.global-to-local, align 4
  %v2_11c54 = add i32 %v0_11c54, %v2_11c50
  %v3_11c54 = inttoptr i32 %v2_11c54 to i8*
  %v4_11c54 = load i8, i8* %v3_11c54, align 1
  %v6_11c54 = zext i8 %v4_11c54 to i32
  %v0_11c58 = load i32, i32* %r4.global-to-local, align 4
  %v2_11c58 = xor i32 %v0_11c58, %v6_11c54
  %v1_11c5c = trunc i32 %v2_11c58 to i8
  store i8 %v1_11c5c, i8* %v3_11c54, align 1
  %v0_11c60 = load i32, i32* @lr, align 4
  %v1_11c60 = add i32 %v0_11c60, 4
  %v2_11c60 = inttoptr i32 %v1_11c60 to i8*
  %v3_11c60 = load i8, i8* %v2_11c60, align 1
  %v4_11c60 = zext i8 %v3_11c60 to i32
  %v0_11c64 = load i32, i32* %r7.global-to-local, align 4
  %v1_11c64 = add i32 %v0_11c64, 1
  %v2_11c64 = inttoptr i32 %v1_11c64 to i8*
  %v3_11c64 = load i8, i8* %v2_11c64, align 1
  %v4_11c64 = zext i8 %v3_11c64 to i32
  %v0_11c68 = load i32, i32* %ip.global-to-local, align 4
  %v1_11c68 = add i32 %v0_11c68, 1
  store i32 %v1_11c68, i32* %ip.global-to-local, align 4
  %v4_11c6c = mul nuw nsw i32 %v4_11c64, 256
  %v5_11c6c = or i32 %v4_11c6c, %v4_11c60
  store i32 %v5_11c6c, i32* @r2, align 4
  %v8_11c74 = icmp sgt i32 %v5_11c6c, %v1_11c68
  br i1 %v8_11c74, label %dec_label_pc_11c20, label %dec_label_pc_11c78

dec_label_pc_11c78:                               ; preds = %dec_label_pc_11c20
  %v2_11c78 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_11c78, i32* @r4, align 4
  ret i32 %v1_11c14

; uselistorder directives
  uselistorder i32 %v1_11c68, { 1, 2, 0 }
  uselistorder i32 %v0_11c60, { 1, 0 }
  uselistorder i32 %v1_11c14, { 1, 2, 0 }
  uselistorder i32 %v2_11bf0, { 3, 0, 1, 2, 4 }
}

define i32 @function_11c84(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_11c84:
  %fp.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_11c84 = load i32, i32* @r4, align 4
  store i32 %v3_11c84, i32* %stack_var_-36, align 4
  %v9_11c84 = load i32, i32* @r6, align 4
  %v12_11c84 = load i32, i32* @r7, align 4
  %v1_11c8c = call i32 @function_13518(i32 2)
  store i32 2, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_1daa8.209 to i32), i32* @r4, align 4
  store i32 0, i32* @r6, align 4
  store i32 %v1_11c8c, i32* @r7, align 4
  %v4_11ca8 = call i32 @function_12214(i32 %v1_11c8c, i32 ptrtoint ([3 x i8]* @global_var_153ac.217 to i32), i32 2)
  %v0_11cac = load i32, i32* @r5, align 4
  %v0_11cb0 = load i32, i32* @r7, align 4
  store i32 %v0_11cb0, i32* @global_var_1dab0.218, align 4
  %v1_11cb4 = trunc i32 %v0_11cac to i8
  store i8 %v1_11cb4, i8* bitcast (i32* @global_var_1dab4.219 to i8*), align 4
  %v0_11cb8 = load i32, i32* @r6, align 4
  %v1_11cb8 = trunc i32 %v0_11cb8 to i8
  store i8 %v1_11cb8, i8* bitcast (i32* @global_var_1dab5.220 to i8*), align 4
  %v1_11cbc = call i32 @function_13518(i32 %v0_11cac)
  %v0_11cc0 = load i32, i32* @r5, align 4
  store i32 %v1_11cbc, i32* @r7, align 4
  %v3_11ccc = call i32 @function_12214(i32 %v1_11cbc, i32 ptrtoint (i32* @global_var_153b0.222 to i32), i32 %v0_11cc0)
  %v0_11cd4 = load i32, i32* @r7, align 4
  store i32 %v0_11cd4, i32* @global_var_1dab8.223, align 4
  %v0_11cd8 = load i32, i32* @r5, align 4
  %v1_11cd8 = trunc i32 %v0_11cd8 to i8
  store i8 %v1_11cd8, i8* bitcast (i32* @global_var_1dabc.224 to i8*), align 4
  %v0_11cdc = load i32, i32* @r6, align 4
  %v1_11cdc = trunc i32 %v0_11cdc to i8
  store i8 %v1_11cdc, i8* bitcast (i32* @global_var_1dabd.225 to i8*), align 4
  %v1_11ce0 = call i32 @function_13518(i32 20)
  store i32 %v1_11ce0, i32* @r5, align 4
  %v3_11cf0 = call i32 @function_12214(i32 %v1_11ce0, i32 ptrtoint (i32* @global_var_153b4.227 to i32), i32 20)
  store i8 20, i8* bitcast (i32* @global_var_1dac4.228 to i8*), align 4
  %v0_11d00 = load i32, i32* @r5, align 4
  store i32 %v0_11d00, i32* @global_var_1dac0.229, align 4
  %v0_11d04 = load i32, i32* @r6, align 4
  %v1_11d04 = trunc i32 %v0_11d04 to i8
  store i8 %v1_11d04, i8* bitcast (i32* @global_var_1dac5.230 to i8*), align 4
  %v1_11d08 = call i32 @function_13518(i32 6)
  store i32 6, i32* %fp.global-to-local, align 4
  store i32 %v1_11d08, i32* @r5, align 4
  %v3_11d1c = call i32 @function_12214(i32 %v1_11d08, i32 ptrtoint (i32* @global_var_153cc.232 to i32), i32 6)
  %v0_11d24 = load i32, i32* @r5, align 4
  store i32 %v0_11d24, i32* @global_var_1dac8.233, align 4
  store i8 6, i8* bitcast (i32* @global_var_1dacc.234 to i8*), align 4
  %v0_11d2c = load i32, i32* @r6, align 4
  %v1_11d2c = trunc i32 %v0_11d2c to i8
  store i8 %v1_11d2c, i8* bitcast (i32* @global_var_1dacd.235 to i8*), align 4
  %v1_11d30 = call i32 @function_13518(i32 7)
  store i32 7, i32* %r8.global-to-local, align 4
  store i32 %v1_11d30, i32* @r5, align 4
  %v3_11d44 = call i32 @function_12214(i32 %v1_11d30, i32 ptrtoint (i32* @global_var_153d4.237 to i32), i32 7)
  %v0_11d4c = load i32, i32* @r5, align 4
  store i32 %v0_11d4c, i32* @global_var_1dad0.238, align 4
  store i8 7, i8* bitcast (i32* @global_var_1dad4.239 to i8*), align 4
  %v0_11d54 = load i32, i32* @r6, align 4
  %v1_11d54 = trunc i32 %v0_11d54 to i8
  store i8 %v1_11d54, i8* bitcast (i32* @global_var_1dad5.240 to i8*), align 4
  %v1_11d58 = call i32 @function_13518(i32 7)
  %v0_11d5c = load i32, i32* %r8.global-to-local, align 4
  store i32 %v1_11d58, i32* @r5, align 4
  %v3_11d68 = call i32 @function_12214(i32 %v1_11d58, i32 ptrtoint (i32* @global_var_153dc.242 to i32), i32 %v0_11d5c)
  %v0_11d70 = load i32, i32* @r5, align 4
  store i32 %v0_11d70, i32* @global_var_1dad8.243, align 4
  %v1_11d74 = trunc i32 %v0_11d5c to i8
  store i8 %v1_11d74, i8* bitcast (i32* @global_var_1dadc.244 to i8*), align 4
  %v0_11d78 = load i32, i32* @r6, align 4
  %v1_11d78 = trunc i32 %v0_11d78 to i8
  store i8 %v1_11d78, i8* bitcast (i32* @global_var_1dadd.245 to i8*), align 4
  %v1_11d7c = call i32 @function_13518(i32 3)
  store i32 %v1_11d7c, i32* @r5, align 4
  %v3_11d8c = call i32 @function_12214(i32 %v1_11d7c, i32 ptrtoint (i32* @global_var_153e4.247 to i32), i32 3)
  store i8 3, i8* bitcast (i32* @global_var_1dae4.248 to i8*), align 4
  %v0_11d9c = load i32, i32* @r5, align 4
  store i32 %v0_11d9c, i32* @global_var_1dae0.249, align 4
  %v0_11da0 = load i32, i32* @r6, align 4
  %v1_11da0 = trunc i32 %v0_11da0 to i8
  store i8 %v1_11da0, i8* bitcast (i32* @global_var_1dae5.250 to i8*), align 4
  %v1_11da4 = call i32 @function_13518(i32 21)
  store i32 %v1_11da4, i32* @r5, align 4
  %v3_11db4 = call i32 @function_12214(i32 %v1_11da4, i32 ptrtoint (i32* @global_var_153e8.252 to i32), i32 21)
  store i8 21, i8* bitcast (i32* @global_var_1daec.253 to i8*), align 4
  %v0_11dc4 = load i32, i32* @r5, align 4
  store i32 %v0_11dc4, i32* @global_var_1dae8.254, align 4
  %v0_11dc8 = load i32, i32* @r6, align 4
  %v1_11dc8 = trunc i32 %v0_11dc8 to i8
  store i8 %v1_11dc8, i8* bitcast (i32* @global_var_1daed.255 to i8*), align 4
  %v1_11dcc = call i32 @function_13518(i32 26)
  store i32 %v1_11dcc, i32* @r5, align 4
  %v3_11ddc = call i32 @function_12214(i32 %v1_11dcc, i32 ptrtoint (i32* @global_var_15400.257 to i32), i32 26)
  store i8 26, i8* bitcast (i32* @global_var_1daf4.258 to i8*), align 4
  %v0_11dec = load i32, i32* @r5, align 4
  store i32 %v0_11dec, i32* @global_var_1daf0.259, align 4
  %v0_11df0 = load i32, i32* @r6, align 4
  %v1_11df0 = trunc i32 %v0_11df0 to i8
  store i8 %v1_11df0, i8* bitcast (i32* @global_var_1daf5.260 to i8*), align 4
  %v1_11df4 = call i32 @function_13518(i32 9)
  store i32 %v1_11df4, i32* @r5, align 4
  %v3_11e04 = call i32 @function_12214(i32 %v1_11df4, i32 ptrtoint (i32* @global_var_1541c.262 to i32), i32 9)
  store i8 9, i8* bitcast (i32* @global_var_1dafc.263 to i8*), align 4
  %v0_11e14 = load i32, i32* @r5, align 4
  store i32 %v0_11e14, i32* @global_var_1daf8.264, align 4
  %v0_11e18 = load i32, i32* @r6, align 4
  %v1_11e18 = trunc i32 %v0_11e18 to i8
  store i8 %v1_11e18, i8* bitcast (i32* @global_var_1dafd.265 to i8*), align 4
  %v1_11e1c = call i32 @function_13518(i32 16)
  store i32 %v1_11e1c, i32* @r5, align 4
  store i32 16, i32* %sb.global-to-local, align 4
  %v3_11e30 = call i32 @function_12214(i32 %v1_11e1c, i32 ptrtoint (i32* @global_var_15428.267 to i32), i32 16)
  %v0_11e38 = load i32, i32* @r5, align 4
  store i32 %v0_11e38, i32* @global_var_1db00.268, align 4
  store i8 16, i8* bitcast (i32* @global_var_1db04.269 to i8*), align 4
  %v0_11e40 = load i32, i32* @r6, align 4
  %v1_11e40 = trunc i32 %v0_11e40 to i8
  store i8 %v1_11e40, i8* bitcast (i32* @global_var_1db05.270 to i8*), align 4
  %v1_11e44 = call i32 @function_13518(i32 22)
  store i32 %v1_11e44, i32* @r5, align 4
  %v3_11e54 = call i32 @function_12214(i32 %v1_11e44, i32 ptrtoint (i32* @global_var_1543c.272 to i32), i32 22)
  %v0_11e5c = load i32, i32* %r8.global-to-local, align 4
  store i8 22, i8* bitcast (i32* @global_var_1db0c.273 to i8*), align 4
  %v0_11e64 = load i32, i32* @r5, align 4
  store i32 %v0_11e64, i32* @global_var_1db08.274, align 4
  %v0_11e68 = load i32, i32* @r6, align 4
  %v1_11e68 = trunc i32 %v0_11e68 to i8
  store i8 %v1_11e68, i8* bitcast (i32* @global_var_1db0d.275 to i8*), align 4
  %v1_11e6c = call i32 @function_13518(i32 %v0_11e5c)
  %v0_11e70 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v1_11e6c, i32* @r5, align 4
  %v3_11e7c = call i32 @function_12214(i32 %v1_11e6c, i32 ptrtoint (i32* @global_var_15454.277 to i32), i32 %v0_11e70)
  %v0_11e84 = load i32, i32* @r5, align 4
  store i32 %v0_11e84, i32* @global_var_1db10.278, align 4
  %v1_11e88 = trunc i32 %v0_11e70 to i8
  store i8 %v1_11e88, i8* bitcast (i32* @global_var_1db14.279 to i8*), align 4
  %v0_11e8c = load i32, i32* @r6, align 4
  %v1_11e8c = trunc i32 %v0_11e8c to i8
  store i8 %v1_11e8c, i8* bitcast (i32* @global_var_1db15.280 to i8*), align 4
  %v1_11e90 = call i32 @function_13518(i32 5)
  store i32 %v1_11e90, i32* @r5, align 4
  %v3_11ea0 = call i32 @function_12214(i32 %v1_11e90, i32 ptrtoint (i32* @global_var_1545c.282 to i32), i32 5)
  store i8 5, i8* bitcast (i32* @global_var_1db1c.283 to i8*), align 4
  %v0_11eb0 = load i32, i32* @r5, align 4
  store i32 %v0_11eb0, i32* @global_var_1db18.284, align 4
  %v0_11eb4 = load i32, i32* @r6, align 4
  %v1_11eb4 = trunc i32 %v0_11eb4 to i8
  store i8 %v1_11eb4, i8* bitcast (i32* @global_var_1db1d.285 to i8*), align 4
  %v1_11eb8 = call i32 @function_13518(i32 4)
  store i32 %v1_11eb8, i32* @r5, align 4
  %v3_11ec8 = call i32 @function_12214(i32 %v1_11eb8, i32 ptrtoint (i32* @global_var_15464.287 to i32), i32 4)
  %v0_11ed0 = load i32, i32* %fp.global-to-local, align 4
  store i8 4, i8* bitcast (i32* @global_var_1db24.288 to i8*), align 4
  %v0_11ed8 = load i32, i32* @r5, align 4
  store i32 %v0_11ed8, i32* @global_var_1db20.289, align 4
  %v0_11edc = load i32, i32* @r6, align 4
  %v1_11edc = trunc i32 %v0_11edc to i8
  store i8 %v1_11edc, i8* bitcast (i32* @global_var_1db25.290 to i8*), align 4
  %v1_11ee0 = call i32 @function_13518(i32 %v0_11ed0)
  %v0_11ee8 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v1_11ee0, i32* @r5, align 4
  %v3_11ef0 = call i32 @function_12214(i32 %v1_11ee0, i32 ptrtoint (i32* @global_var_1546c.292 to i32), i32 %v0_11ee8)
  %v0_11ef8 = load i32, i32* @r5, align 4
  store i32 %v0_11ef8, i32* @global_var_1db28.293, align 4
  %v1_11efc = trunc i32 %v0_11ee8 to i8
  store i8 %v1_11efc, i8* bitcast (i32* @global_var_1db2c.294 to i8*), align 4
  %v0_11f00 = load i32, i32* @r6, align 4
  %v1_11f00 = trunc i32 %v0_11f00 to i8
  store i8 %v1_11f00, i8* bitcast (i32* @global_var_1db2d.295 to i8*), align 4
  %v1_11f04 = call i32 @function_13518(i32 14)
  store i32 %v1_11f04, i32* @r5, align 4
  store i32 14, i32* %sl.global-to-local, align 4
  %v3_11f18 = call i32 @function_12214(i32 %v1_11f04, i32 ptrtoint (i32* @global_var_15474.297 to i32), i32 14)
  %v0_11f20 = load i32, i32* @r5, align 4
  store i32 %v0_11f20, i32* @global_var_1db30.298, align 4
  store i8 14, i8* bitcast (i32* @global_var_1db34.299 to i8*), align 4
  %v0_11f28 = load i32, i32* @r6, align 4
  %v1_11f28 = trunc i32 %v0_11f28 to i8
  store i8 %v1_11f28, i8* bitcast (i32* @global_var_1db35.300 to i8*), align 4
  %v1_11f2c = call i32 @function_13518(i32 8)
  store i32 8, i32* @r7, align 4
  store i32 %v1_11f2c, i32* @r5, align 4
  %v3_11f40 = call i32 @function_12214(i32 %v1_11f2c, i32 ptrtoint (i32* @global_var_15484.302 to i32), i32 8)
  %v0_11f44 = load i32, i32* %r8.global-to-local, align 4
  %v0_11f48 = load i32, i32* @r5, align 4
  store i32 %v0_11f48, i32* @global_var_1db90.303, align 4
  %v0_11f4c = load i32, i32* @r7, align 4
  %v1_11f4c = trunc i32 %v0_11f4c to i8
  store i8 %v1_11f4c, i8* bitcast (i32* @global_var_1db94.304 to i8*), align 4
  %v0_11f50 = load i32, i32* @r6, align 4
  %v1_11f50 = trunc i32 %v0_11f50 to i8
  store i8 %v1_11f50, i8* bitcast (i32* @global_var_1db95.305 to i8*), align 4
  %v1_11f54 = call i32 @function_13518(i32 %v0_11f44)
  %v0_11f58 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v1_11f54, i32* @r5, align 4
  %v3_11f64 = call i32 @function_12214(i32 %v1_11f54, i32 ptrtoint (i32* @global_var_15490.307 to i32), i32 %v0_11f58)
  %v0_11f68 = load i32, i32* %sb.global-to-local, align 4
  %v0_11f6c = load i32, i32* @r5, align 4
  store i32 %v0_11f6c, i32* @global_var_1db98.308, align 4
  %v1_11f70 = trunc i32 %v0_11f58 to i8
  store i8 %v1_11f70, i8* bitcast (i32* @global_var_1db9c.309 to i8*), align 4
  %v0_11f74 = load i32, i32* @r6, align 4
  %v1_11f74 = trunc i32 %v0_11f74 to i8
  store i8 %v1_11f74, i8* bitcast (i32* @global_var_1db9d.310 to i8*), align 4
  %v1_11f78 = call i32 @function_13518(i32 %v0_11f68)
  %v0_11f80 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v1_11f78, i32* @r5, align 4
  %v3_11f88 = call i32 @function_12214(i32 %v1_11f78, i32 ptrtoint (i32* @global_var_15498.312 to i32), i32 %v0_11f80)
  %v0_11f8c = load i32, i32* @r7, align 4
  %v0_11f90 = load i32, i32* @r5, align 4
  store i32 %v0_11f90, i32* @global_var_1db38.313, align 4
  %v1_11f94 = trunc i32 %v0_11f80 to i8
  store i8 %v1_11f94, i8* bitcast (i32* @global_var_1db3c.314 to i8*), align 4
  %v0_11f98 = load i32, i32* @r6, align 4
  %v1_11f98 = trunc i32 %v0_11f98 to i8
  store i8 %v1_11f98, i8* bitcast (i32* @global_var_1db3d.315 to i8*), align 4
  %v1_11f9c = call i32 @function_13518(i32 %v0_11f8c)
  store i32 ptrtoint (i32* @global_var_154ac.317 to i32), i32* %r8.global-to-local, align 4
  %v0_11fa4 = load i32, i32* @r7, align 4
  store i32 %v1_11f9c, i32* @r5, align 4
  %v3_11fb0 = call i32 @function_12214(i32 %v1_11f9c, i32 ptrtoint (i32* @global_var_154ac.317 to i32), i32 %v0_11fa4)
  %v0_11fb8 = load i32, i32* @r5, align 4
  store i32 %v0_11fb8, i32* @global_var_1db40.318, align 4
  %v0_11fbc = load i32, i32* @r7, align 4
  %v1_11fbc = trunc i32 %v0_11fbc to i8
  store i8 %v1_11fbc, i8* bitcast (i32* @global_var_1db44.319 to i8*), align 4
  %v0_11fc0 = load i32, i32* @r6, align 4
  %v1_11fc0 = trunc i32 %v0_11fc0 to i8
  store i8 %v1_11fc0, i8* bitcast (i32* @global_var_1db45.320 to i8*), align 4
  %v1_11fc4 = call i32 @function_13518(i32 21)
  store i32 %v1_11fc4, i32* @r5, align 4
  %v3_11fd4 = call i32 @function_12214(i32 %v1_11fc4, i32 ptrtoint (i32* @global_var_154e0.322 to i32), i32 21)
  store i8 21, i8* bitcast (i32* @global_var_1db4c.323 to i8*), align 4
  %v0_11fe4 = load i32, i32* @r5, align 4
  store i32 %v0_11fe4, i32* @global_var_1db48.324, align 4
  %v0_11fe8 = load i32, i32* @r6, align 4
  %v1_11fe8 = trunc i32 %v0_11fe8 to i8
  store i8 %v1_11fe8, i8* bitcast (i32* @global_var_1db4d.325 to i8*), align 4
  %v1_11fec = call i32 @function_13518(i32 17)
  store i32 %v1_11fec, i32* @r5, align 4
  %v3_11ffc = call i32 @function_12214(i32 %v1_11fec, i32 ptrtoint (i32* @global_var_154b8.327 to i32), i32 17)
  store i8 17, i8* bitcast (i32* @global_var_1db54.328 to i8*), align 4
  %v0_1200c = load i32, i32* @r5, align 4
  store i32 %v0_1200c, i32* @global_var_1db50.329, align 4
  %v0_12010 = load i32, i32* @r6, align 4
  %v1_12010 = trunc i32 %v0_12010 to i8
  store i8 %v1_12010, i8* bitcast (i32* @global_var_1db55.330 to i8*), align 4
  %v1_12014 = call i32 @function_13518(i32 11)
  store i32 %v1_12014, i32* @r5, align 4
  %v3_12024 = call i32 @function_12214(i32 %v1_12014, i32 ptrtoint (i32* @global_var_154cc.332 to i32), i32 11)
  %v0_1202c = load i32, i32* %sl.global-to-local, align 4
  store i8 11, i8* bitcast (i32* @global_var_1db5c.333 to i8*), align 4
  %v0_12034 = load i32, i32* @r5, align 4
  store i32 %v0_12034, i32* @global_var_1db58.334, align 4
  %v0_12038 = load i32, i32* @r6, align 4
  %v1_12038 = trunc i32 %v0_12038 to i8
  store i8 %v1_12038, i8* bitcast (i32* @global_var_1db5d.335 to i8*), align 4
  %v1_1203c = call i32 @function_13518(i32 %v0_1202c)
  %v0_12044 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v1_1203c, i32* @r5, align 4
  %v3_1204c = call i32 @function_12214(i32 %v1_1203c, i32 ptrtoint (i32* @global_var_154f8.337 to i32), i32 %v0_12044)
  %v0_12054 = load i32, i32* @r5, align 4
  store i32 %v0_12054, i32* @global_var_1db60.338, align 4
  %v1_12058 = trunc i32 %v0_12044 to i8
  store i8 %v1_12058, i8* bitcast (i32* @global_var_1db64.339 to i8*), align 4
  %v0_1205c = load i32, i32* @r6, align 4
  %v1_1205c = trunc i32 %v0_1205c to i8
  store i8 %v1_1205c, i8* bitcast (i32* @global_var_1db65.340 to i8*), align 4
  %v1_12060 = call i32 @function_13518(i32 19)
  store i32 %v1_12060, i32* @r5, align 4
  %v3_12070 = call i32 @function_12214(i32 %v1_12060, i32 ptrtoint (i32* @global_var_15508.342 to i32), i32 19)
  %v0_12078 = load i32, i32* @r7, align 4
  store i8 19, i8* bitcast (i32* @global_var_1db6c.343 to i8*), align 4
  %v0_12080 = load i32, i32* @r5, align 4
  store i32 %v0_12080, i32* @global_var_1db68.344, align 4
  %v0_12084 = load i32, i32* @r6, align 4
  %v1_12084 = trunc i32 %v0_12084 to i8
  store i8 %v1_12084, i8* bitcast (i32* @global_var_1db6d.345 to i8*), align 4
  %v1_12088 = call i32 @function_13518(i32 %v0_12078)
  %v0_1208c = load i32, i32* %r8.global-to-local, align 4
  %v0_12090 = load i32, i32* @r7, align 4
  store i32 %v1_12088, i32* @r5, align 4
  %v3_12098 = call i32 @function_12214(i32 %v1_12088, i32 %v0_1208c, i32 %v0_12090)
  %v0_120a0 = load i32, i32* @r5, align 4
  store i32 %v0_120a0, i32* @global_var_1db70.346, align 4
  %v0_120a4 = load i32, i32* @r7, align 4
  %v1_120a4 = trunc i32 %v0_120a4 to i8
  store i8 %v1_120a4, i8* bitcast (i32* @global_var_1db74.347 to i8*), align 4
  %v0_120a8 = load i32, i32* @r6, align 4
  %v1_120a8 = trunc i32 %v0_120a8 to i8
  store i8 %v1_120a8, i8* bitcast (i32* @global_var_1db75.348 to i8*), align 4
  %v1_120ac = call i32 @function_13518(i32 5)
  store i32 %v1_120ac, i32* @r5, align 4
  %v3_120bc = call i32 @function_12214(i32 %v1_120ac, i32 ptrtoint (i32* @global_var_1551c.350 to i32), i32 5)
  %v0_120c4 = load i32, i32* %fp.global-to-local, align 4
  store i8 5, i8* bitcast (i32* @global_var_1db7c.351 to i8*), align 4
  %v0_120cc = load i32, i32* @r5, align 4
  store i32 %v0_120cc, i32* @global_var_1db78.352, align 4
  %v0_120d0 = load i32, i32* @r6, align 4
  %v1_120d0 = trunc i32 %v0_120d0 to i8
  store i8 %v1_120d0, i8* bitcast (i32* @global_var_1db7d.353 to i8*), align 4
  %v1_120d4 = call i32 @function_13518(i32 %v0_120c4)
  %v0_120dc = load i32, i32* %fp.global-to-local, align 4
  store i32 %v1_120d4, i32* @r5, align 4
  %v3_120e4 = call i32 @function_12214(i32 %v1_120d4, i32 ptrtoint (i32* @global_var_154d8.355 to i32), i32 %v0_120dc)
  %v0_120ec = load i32, i32* @r5, align 4
  store i32 %v0_120ec, i32* @global_var_1db80.356, align 4
  %v1_120f0 = trunc i32 %v0_120dc to i8
  store i8 %v1_120f0, i8* bitcast (i32* @global_var_1db84.357 to i8*), align 4
  %v0_120f4 = load i32, i32* @r6, align 4
  %v1_120f4 = trunc i32 %v0_120f4 to i8
  store i8 %v1_120f4, i8* bitcast (i32* @global_var_1db85.358 to i8*), align 4
  %v1_120f8 = call i32 @function_13518(i32 23)
  %v3_12108 = call i32 @function_12214(i32 %v1_120f8, i32 ptrtoint (i32* @global_var_15524.360 to i32), i32 23)
  %v0_12110 = load i32, i32* @r6, align 4
  %v1_12110 = trunc i32 %v0_12110 to i8
  store i8 %v1_12110, i8* bitcast (i32* @global_var_1db8d.361 to i8*), align 4
  store i32 %v1_120f8, i32* @global_var_1db88.362, align 4
  store i8 23, i8* bitcast (i32* @global_var_1db8c.363 to i8*), align 4
  %v2_1211c = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_1211c, i32* @r4, align 4
  store i32 %v9_11c84, i32* @r6, align 4
  store i32 %v12_11c84, i32* @r7, align 4
  ret i32 %v3_12108

; uselistorder directives
  uselistorder i32 %v1_120d4, { 1, 0 }
  uselistorder i32 %v1_12088, { 1, 0 }
  uselistorder i32 %v1_1203c, { 1, 0 }
  uselistorder i32 %v1_11f9c, { 1, 0 }
  uselistorder i32 %v1_11f78, { 1, 0 }
  uselistorder i32 %v1_11f54, { 1, 0 }
  uselistorder i32 %v1_11f2c, { 1, 0 }
  uselistorder i32 %v1_11ee0, { 1, 0 }
  uselistorder i32 %v1_11e6c, { 1, 0 }
  uselistorder i32 %v1_11d58, { 1, 0 }
  uselistorder i32 %v1_11d30, { 1, 0 }
  uselistorder i32 %v1_11d08, { 1, 0 }
  uselistorder i32 %v1_11cbc, { 1, 0 }
  uselistorder i32 %v1_11c8c, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7 }
  uselistorder i8 23, { 1, 2, 0, 3 }
  uselistorder i8 4, { 1, 0 }
  uselistorder i8 5, { 12, 13, 14, 10, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11 }
  uselistorder i8 16, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 16 }
  uselistorder i8 3, { 1, 0 }
  uselistorder i8 6, { 0, 3, 1, 4, 5, 2 }
  uselistorder i32 (i32, i32, i32)* @function_12214, { 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 6, 5, 4, 3, 2, 1, 0, 7 }
  uselistorder i32 ptrtoint (i32* @global_var_1daa8.209 to i32), { 5, 0, 1, 2, 3, 4 }
}

define i32 @function_12198(i8* %arg1) local_unnamed_addr {
dec_label_pc_12198:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r2, align 4
  %v3_1219c = load i8, i8* %arg1, align 1
  %v4_1219c = zext i8 %v3_1219c to i32
  %v2_121a0 = icmp eq i8 %v3_1219c, 0
  br i1 %v2_121a0, label %dec_label_pc_121bc, label %bb

dec_label_pc_121bc:                               ; preds = %dec_label_pc_121ac, %dec_label_pc_12198
  %merge = phi i32 [ %v4_1219c, %dec_label_pc_12198 ], [ %v1_121ac, %dec_label_pc_121ac ]
  ret i32 %merge

bb:                                               ; preds = %dec_label_pc_12198
  br label %dec_label_pc_121ac

dec_label_pc_121ac:                               ; preds = %dec_label_pc_121ac, %bb
  %v0_121ac = phi i32 [ %v1_121ac, %dec_label_pc_121ac ], [ 0, %bb ]
  %v1_121ac = add i32 %v0_121ac, 1
  %v2_121b0 = add i32 %v1_121ac, %tmp
  %v3_121b0 = inttoptr i32 %v2_121b0 to i8*
  %v4_121b0 = load i8, i8* %v3_121b0, align 1
  %v2_121b4 = icmp eq i8 %v4_121b0, 0
  br i1 %v2_121b4, label %dec_label_pc_121bc, label %dec_label_pc_121ac

; uselistorder directives
  uselistorder i32 %v1_121ac, { 1, 0, 2 }
}

define i32 @function_121c0(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_121c0:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_121c0 = load i8, i8* %arg1, align 1
  %v3_121c0 = zext i8 %v2_121c0 to i32
  %v2_121c4 = icmp eq i8 %v2_121c0, 0
  br i1 %v2_121c4, label %dec_label_pc_12208, label %dec_label_pc_121cc

dec_label_pc_121cc:                               ; preds = %dec_label_pc_121c0
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_121d0

dec_label_pc_121d0:                               ; preds = %dec_label_pc_121d0, %dec_label_pc_121cc
  %v0_121d0 = phi i32 [ %v1_121d0, %dec_label_pc_121d0 ], [ 0, %dec_label_pc_121cc ]
  %v1_121d0 = add i32 %v0_121d0, 1
  store i32 %v1_121d0, i32* %ip.global-to-local, align 4
  %v2_121d4 = add i32 %v1_121d0, %tmp
  %v3_121d4 = inttoptr i32 %v2_121d4 to i8*
  %v4_121d4 = load i8, i8* %v3_121d4, align 1
  %v2_121d8 = icmp eq i8 %v4_121d4, 0
  br i1 %v2_121d8, label %dec_label_pc_121e0, label %dec_label_pc_121d0

dec_label_pc_121e0:                               ; preds = %dec_label_pc_121d0
  %v7_121e0 = icmp eq i32 %v0_121d0, -2
  br i1 %v7_121e0, label %dec_label_pc_12200, label %dec_label_pc_121ec.preheader

dec_label_pc_121ec.preheader:                     ; preds = %dec_label_pc_121e0, %dec_label_pc_12208
  %storemerge = phi i32 [ %v3_121c0, %dec_label_pc_12208 ], [ %v1_121d0, %dec_label_pc_121e0 ]
  %v2_121f8.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_121ec

dec_label_pc_121ec:                               ; preds = %dec_label_pc_121ec.dec_label_pc_121ec_crit_edge, %dec_label_pc_121ec.preheader
  %v2_121f8 = phi i32 [ %v5_121f8, %dec_label_pc_121ec.dec_label_pc_121ec_crit_edge ], [ %v2_121f8.pre, %dec_label_pc_121ec.preheader ]
  %v0_121f0 = phi i32 [ %v0_121f0.pre, %dec_label_pc_121ec.dec_label_pc_121ec_crit_edge ], [ %tmp, %dec_label_pc_121ec.preheader ]
  %v0_121ec = phi i32 [ %v0_121ec.pre, %dec_label_pc_121ec.dec_label_pc_121ec_crit_edge ], [ %storemerge, %dec_label_pc_121ec.preheader ]
  %v1_121ec = add i32 %v0_121ec, -1
  store i32 %v1_121ec, i32* @r2, align 4
  %v1_121f0 = inttoptr i32 %v0_121f0 to i8*
  %v2_121f0 = load i8, i8* %v1_121f0, align 1
  %v5_121f0 = add i32 %v0_121f0, 1
  store i32 %v5_121f0, i32* %r1.global-to-local, align 4
  %v3_121f4 = icmp eq i32 %v0_121ec, 0
  %v3_121f8 = inttoptr i32 %v2_121f8 to i8*
  store i8 %v2_121f0, i8* %v3_121f8, align 1
  %v4_121f8 = load i32, i32* @r0, align 4
  %v5_121f8 = add i32 %v4_121f8, 1
  store i32 %v5_121f8, i32* @r0, align 4
  br i1 %v3_121f4, label %dec_label_pc_12200.loopexit, label %dec_label_pc_121ec.dec_label_pc_121ec_crit_edge

dec_label_pc_121ec.dec_label_pc_121ec_crit_edge:  ; preds = %dec_label_pc_121ec
  %v0_121ec.pre = load i32, i32* @r2, align 4
  %v0_121f0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_121ec

dec_label_pc_12200.loopexit:                      ; preds = %dec_label_pc_121ec
  %v0_12200.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_12200

dec_label_pc_12200:                               ; preds = %dec_label_pc_12200.loopexit, %dec_label_pc_121e0
  %v0_12200 = phi i32 [ %v0_12200.pre, %dec_label_pc_12200.loopexit ], [ %v1_121d0, %dec_label_pc_121e0 ]
  ret i32 %v0_12200

dec_label_pc_12208:                               ; preds = %dec_label_pc_121c0
  store i32 %v3_121c0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_121ec.preheader

; uselistorder directives
  uselistorder i32 %v5_121f8, { 1, 0 }
  uselistorder i32 %v0_121f0, { 1, 0 }
  uselistorder i32 %v1_121d0, { 1, 0, 2, 4, 3 }
  uselistorder i32 %v3_121c0, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0 }
  uselistorder label %dec_label_pc_121ec.preheader, { 1, 0 }
}

define i32 @function_12214(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12214:
  %ip.global-to-local = alloca i32, align 4
  %v2_12214 = icmp eq i32 %arg3, 0
  br i1 %v2_12214, label %.loopexit, label %bb

.loopexit:                                        ; preds = %dec_label_pc_12220, %dec_label_pc_12214
  ret i32 %arg1

bb:                                               ; preds = %dec_label_pc_12214
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_12220

dec_label_pc_12220:                               ; preds = %dec_label_pc_12220, %bb
  %v0_12220 = phi i32 [ %v1_12228, %dec_label_pc_12220 ], [ 0, %bb ]
  %v2_12220 = add i32 %v0_12220, %arg2
  %v3_12220 = inttoptr i32 %v2_12220 to i8*
  %v4_12220 = load i8, i8* %v3_12220, align 1
  %v4_12224 = add i32 %v0_12220, %arg1
  %v5_12224 = inttoptr i32 %v4_12224 to i8*
  store i8 %v4_12220, i8* %v5_12224, align 1
  %v0_12228 = load i32, i32* %ip.global-to-local, align 4
  %v1_12228 = add i32 %v0_12228, 1
  store i32 %v1_12228, i32* %ip.global-to-local, align 4
  %v9_1222c = icmp eq i32 %v1_12228, %arg3
  br i1 %v9_1222c, label %.loopexit, label %dec_label_pc_12220

; uselistorder directives
  uselistorder i32 %v1_12228, { 1, 2, 0 }
}

define i32 @function_12238() local_unnamed_addr {
dec_label_pc_12238:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %v0_12238 = load i32, i32* @r1, align 4
  %v2_12238 = icmp eq i32 %v0_12238, 0
  br i1 %v2_12238, label %bb, label %bb3

bb:                                               ; preds = %dec_label_pc_12238
  %v2_1223c = load i32, i32* @r0, align 4
  ret i32 %v2_1223c

bb3:                                              ; preds = %dec_label_pc_12238
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12248

dec_label_pc_12248:                               ; preds = %dec_label_pc_12248.dec_label_pc_12248_crit_edge, %bb3
  %v2_12248 = phi i32 [ %v1_1224c, %dec_label_pc_12248.dec_label_pc_12248_crit_edge ], [ 0, %bb3 ]
  %v0_12248.off0 = phi i8 [ %extract.t, %dec_label_pc_12248.dec_label_pc_12248_crit_edge ], [ 0, %bb3 ]
  %v3_12248 = load i32, i32* @r0, align 4
  %v4_12248 = add i32 %v3_12248, %v2_12248
  %v5_12248 = inttoptr i32 %v4_12248 to i8*
  store i8 %v0_12248.off0, i8* %v5_12248, align 1
  %v0_1224c = load i32, i32* %r3.global-to-local, align 4
  %v1_1224c = add i32 %v0_1224c, 1
  store i32 %v1_1224c, i32* %r3.global-to-local, align 4
  %v1_12250 = load i32, i32* @r1, align 4
  %v9_12250 = icmp eq i32 %v1_1224c, %v1_12250
  br i1 %v9_12250, label %dec_label_pc_12258, label %dec_label_pc_12248.dec_label_pc_12248_crit_edge

dec_label_pc_12248.dec_label_pc_12248_crit_edge:  ; preds = %dec_label_pc_12248
  %v0_12248.pre = load i32, i32* %r2.global-to-local, align 4
  %extract.t = trunc i32 %v0_12248.pre to i8
  br label %dec_label_pc_12248

dec_label_pc_12258:                               ; preds = %dec_label_pc_12248
  %v1_12258 = load i32, i32* @r0, align 4
  ret i32 %v1_12258

; uselistorder directives
  uselistorder i32 %v1_1224c, { 1, 2, 0 }
}

define i32 @function_1225c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1225c:
  %v7_12270 = icmp sgt i32 %arg4, %arg2
  br i1 %v7_12270, label %dec_label_pc_12274, label %dec_label_pc_1227c

dec_label_pc_12274:                               ; preds = %dec_label_pc_12290, %dec_label_pc_1225c, %dec_label_pc_1227c
  ret i32 -1

dec_label_pc_1227c:                               ; preds = %dec_label_pc_1225c
  %tmp10 = icmp slt i32 %arg2, 1
  br i1 %tmp10, label %dec_label_pc_12274, label %dec_label_pc_12284

dec_label_pc_12284:                               ; preds = %dec_label_pc_1227c
  br label %dec_label_pc_1229c

dec_label_pc_12290:                               ; preds = %dec_label_pc_122b4, %dec_label_pc_1229c
  %v1_12290 = add i32 %v0_122bc, 1
  %v9_12294 = icmp eq i32 %v1_12290, %arg2
  br i1 %v9_12294, label %dec_label_pc_12274, label %dec_label_pc_1229c

dec_label_pc_1229c:                               ; preds = %dec_label_pc_12290, %dec_label_pc_12284
  %v0_122bc = phi i32 [ %v1_12290, %dec_label_pc_12290 ], [ 0, %dec_label_pc_12284 ]
  %v0_122a8 = phi i32 [ %v1_122a8., %dec_label_pc_12290 ], [ 0, %dec_label_pc_12284 ]
  %v2_1229c = add i32 %v0_122a8, %arg3
  %v3_1229c = inttoptr i32 %v2_1229c to i8*
  %v4_1229c = load i8, i8* %v3_1229c, align 1
  %v2_122a0 = add i32 %v0_122bc, %arg1
  %v3_122a0 = inttoptr i32 %v2_122a0 to i8*
  %v4_122a0 = load i8, i8* %v3_122a0, align 1
  %v9_122a4 = icmp eq i8 %v4_122a0, %v4_1229c
  %v1_122a8 = add i32 %v0_122a8, 1
  %v1_122a8. = select i1 %v9_122a4, i32 %v1_122a8, i32 0
  br i1 %v9_122a4, label %dec_label_pc_122b4, label %dec_label_pc_12290

dec_label_pc_122b4:                               ; preds = %dec_label_pc_1229c
  %v9_122b4 = icmp eq i32 %v1_122a8., %arg4
  br i1 %v9_122b4, label %dec_label_pc_122bc, label %dec_label_pc_12290

dec_label_pc_122bc:                               ; preds = %dec_label_pc_122b4
  %v1_122bc = add i32 %v0_122bc, 1
  ret i32 %v1_122bc

; uselistorder directives
  uselistorder i1 %v9_122a4, { 1, 0 }
  uselistorder i32 %v0_122a8, { 1, 0 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_12274, { 0, 2, 1 }
}

define i32 @function_122c4(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_122c4:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-28 = alloca i32, align 4
  %v3_122c4 = load i32, i32* @r4, align 4
  store i32 %v3_122c4, i32* %stack_var_-28, align 4
  store i32 %tmp, i32* %r5.global-to-local, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_122d0

dec_label_pc_122d0:                               ; preds = %.thread, %dec_label_pc_122e8, %bb, %dec_label_pc_122c4
  %v0_122d0 = phi i32 [ %tmp, %dec_label_pc_122c4 ], [ %v5_122d0, %bb ], [ %v5_122d0, %dec_label_pc_122e8 ], [ %v5_122d0, %.thread ]
  %v1_122d0 = inttoptr i32 %v0_122d0 to i8*
  %v2_122d0 = load i8, i8* %v1_122d0, align 1
  %v3_122d0 = zext i8 %v2_122d0 to i32
  %v5_122d0 = add i32 %v0_122d0, 1
  store i32 %v5_122d0, i32* %r5.global-to-local, align 4
  %v7_122d8 = icmp eq i8 %v2_122d0, 9
  br i1 %v7_122d8, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_122d0
  store i32 %v3_122d0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_122d0

bb:                                               ; preds = %dec_label_pc_122d0
  %v8_122dc = icmp eq i8 %v2_122d0, 32
  store i32 %v3_122d0, i32* %r4.global-to-local, align 4
  br i1 %v8_122dc, label %dec_label_pc_122d0, label %dec_label_pc_122e8

dec_label_pc_122e8:                               ; preds = %bb
  %v7_122e8 = icmp eq i8 %v2_122d0, 10
  br i1 %v7_122e8, label %dec_label_pc_122d0, label %dec_label_pc_122f0

dec_label_pc_122f0:                               ; preds = %dec_label_pc_122e8
  %v7_122f0 = icmp eq i8 %v2_122d0, 45
  br i1 %v7_122f0, label %dec_label_pc_123d0, label %dec_label_pc_122f8

dec_label_pc_122f8:                               ; preds = %dec_label_pc_122f0
  %v7_122f8 = icmp eq i8 %v2_122d0, 43
  br i1 %v7_122f8, label %bb48, label %dec_label_pc_12308

bb48:                                             ; preds = %dec_label_pc_122f8
  %v2_122fc = inttoptr i32 %v5_122d0 to i8*
  %v3_122fc = load i8, i8* %v2_122fc, align 1
  %v4_122fc = zext i8 %v3_122fc to i32
  store i32 %v4_122fc, i32* %r4.global-to-local, align 4
  %v6_122fc = add i32 %v0_122d0, 2
  store i32 %v6_122fc, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_12308

dec_label_pc_12308:                               ; preds = %bb48, %dec_label_pc_122f8, %dec_label_pc_123d0
  %storemerge1 = phi i32 [ -2147483648, %dec_label_pc_123d0 ], [ 2147483647, %dec_label_pc_122f8 ], [ 2147483647, %bb48 ]
  %storemerge = phi i32 [ 1, %dec_label_pc_123d0 ], [ 0, %dec_label_pc_122f8 ], [ 0, %bb48 ]
  store i32 %storemerge, i32* %sl.global-to-local, align 4
  %v2_12310 = call i32 @function_12824(i32 %storemerge1, i32 %arg2)
  %v0_12314 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_12314, i32* @r1, align 4
  store i32 %v2_12310, i32* %r8.global-to-local, align 4
  store i32 %storemerge1, i32* @r0, align 4
  %v0_12320 = call i32 @function_12714()
  store i32 %v0_12320, i32* @lr, align 4
  %v0_12330.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12330

dec_label_pc_12330:                               ; preds = %.thread8, %dec_label_pc_12308
  %v2_123ac11 = phi i32 [ %v1_123c826, %.thread8 ], [ 0, %dec_label_pc_12308 ]
  %v1_12388 = phi i32 [ %v0_123bc24, %.thread8 ], [ 0, %dec_label_pc_12308 ]
  %v1_12370 = phi i32 [ %v3_123b4, %.thread8 ], [ %v0_12330.pre, %dec_label_pc_12308 ]
  %v1_12330 = urem i32 %v1_12370, 256
  %v1_12334 = add nsw i32 %v1_12330, -48
  %v1_1233c = add nsw i32 %v1_12330, -97
  %v1_12340 = add i32 %v1_12370, -48
  %v1_12344 = add nsw i32 %v1_12330, -65
  %tmp71 = icmp ult i32 %v1_12334, 10
  br i1 %tmp71, label %dec_label_pc_12374, label %dec_label_pc_1234c

dec_label_pc_1234c:                               ; preds = %dec_label_pc_12330
  %v2_1234c = icmp ugt i32 %v1_12344, 24
  %v7_1234c = icmp eq i32 %v1_12344, 25
  %v2_12350 = xor i1 %v7_1234c, true
  %v3_12350 = and i1 %v2_1234c, %v2_12350
  br i1 %v3_12350, label %bb49, label %bb50

bb49:                                             ; preds = %dec_label_pc_1234c
  br label %bb50

bb50:                                             ; preds = %dec_label_pc_1234c, %bb49
  %v0_1236420 = phi i32 [ %v1_12340, %dec_label_pc_1234c ], [ 0, %bb49 ]
  %v2_12354 = xor i1 %v2_1234c, true
  %v3_12354 = or i1 %v7_1234c, %v2_12354
  br i1 %v3_12354, label %bb51, label %bb52

bb51:                                             ; preds = %bb50
  br label %bb52

bb52:                                             ; preds = %bb50, %bb51
  %v0_12364 = phi i32 [ %v0_1236420, %bb50 ], [ 1, %bb51 ]
  br i1 %v3_12350, label %bb53, label %bb54

bb53:                                             ; preds = %bb52
  %v6_1235c = icmp ugt i32 %v1_1233c, 24
  %v11_1235c = icmp eq i32 %v1_1233c, 25
  br label %bb54

bb54:                                             ; preds = %bb52, %bb53
  %v1_12360 = phi i1 [ %v7_1234c, %bb52 ], [ %v11_1235c, %bb53 ]
  %v0_12360 = phi i1 [ %v2_1234c, %bb52 ], [ %v6_1235c, %bb53 ]
  %v2_12360 = xor i1 %v1_12360, true
  %v3_12360 = and i1 %v0_12360, %v2_12360
  br i1 %v3_12360, label %dec_label_pc_123bc, label %dec_label_pc_12364

dec_label_pc_12364:                               ; preds = %bb54
  %v2_12364 = icmp eq i32 %v0_12364, 0
  %. = select i1 %v2_12364, i32 87, i32 55
  %v2_12370 = sub i32 %v1_12370, %.
  br label %dec_label_pc_12374

dec_label_pc_12374:                               ; preds = %dec_label_pc_12330, %dec_label_pc_12364
  %v0_1238834 = phi i32 [ %v1_12344, %dec_label_pc_12330 ], [ %., %dec_label_pc_12364 ]
  %v3_123ac12 = phi i32 [ %v1_12340, %dec_label_pc_12330 ], [ %v2_12370, %dec_label_pc_12364 ]
  %v1_12374 = load i32, i32* %r6.global-to-local, align 4
  %v6_12378 = icmp slt i32 %v3_123ac12, %v1_12374
  br i1 %v6_12378, label %dec_label_pc_1237c, label %dec_label_pc_123bc

dec_label_pc_1237c:                               ; preds = %dec_label_pc_12374
  %v3_1237c = icmp uge i32 %v2_123ac11, %v0_12320
  %v9_1237c = icmp eq i32 %v2_123ac11, %v0_12320
  %v2_12380 = xor i1 %v3_1237c, true
  %v3_12380 = or i1 %v9_1237c, %v2_12380
  br i1 %v3_12380, label %bb57, label %bb58

bb57:                                             ; preds = %dec_label_pc_1237c
  br label %bb58

bb58:                                             ; preds = %dec_label_pc_1237c, %bb57
  %v0_1238833 = phi i32 [ %v0_1238834, %dec_label_pc_1237c ], [ 0, %bb57 ]
  %v2_12384 = xor i1 %v9_1237c, true
  %v3_12384 = and i1 %v3_1237c, %v2_12384
  br i1 %v3_12384, label %bb59, label %bb60

bb59:                                             ; preds = %bb58
  br label %bb60

bb60:                                             ; preds = %bb58, %bb59
  %v0_12388 = phi i32 [ %v0_1238833, %bb58 ], [ 1, %bb59 ]
  %tmp72 = icmp slt i32 %v1_12388, 0
  %v4_12388 = zext i1 %tmp72 to i32
  %v5_12388 = or i32 %v0_12388, %v4_12388
  %v7_12388 = icmp eq i32 %v5_12388, 0
  br i1 %v7_12388, label %dec_label_pc_12394, label %.thread8

dec_label_pc_12394:                               ; preds = %bb60
  %v1_123a0 = load i32, i32* %r8.global-to-local, align 4
  %v7_123a4 = icmp sgt i32 %v3_123ac12, %v1_123a0
  br i1 %v7_123a4, label %bb63, label %.thread5

.thread5:                                         ; preds = %dec_label_pc_12394
  br label %bb64

bb63:                                             ; preds = %dec_label_pc_12394
  %v2_123a8 = icmp eq i1 %v9_1237c, false
  br i1 %v2_123a8, label %bb64, label %.thread8

bb64:                                             ; preds = %bb63, %.thread5
  %v4_123ac13 = mul i32 %v1_12374, %v2_123ac11
  %v5_123ac14 = add i32 %v4_123ac13, %v3_123ac12
  br label %.thread8

.thread8:                                         ; preds = %bb63, %bb60, %bb64
  %v1_123c826 = phi i32 [ %v2_123ac11, %bb63 ], [ %v2_123ac11, %bb60 ], [ %v5_123ac14, %bb64 ]
  %v0_123bc24 = phi i32 [ -1, %bb63 ], [ -1, %bb60 ], [ 1, %bb64 ]
  %v0_123b4 = load i32, i32* %r5.global-to-local, align 4
  %v1_123b4 = inttoptr i32 %v0_123b4 to i8*
  %v2_123b4 = load i8, i8* %v1_123b4, align 1
  %v3_123b4 = zext i8 %v2_123b4 to i32
  store i32 %v3_123b4, i32* %r4.global-to-local, align 4
  %v5_123b4 = add i32 %v0_123b4, 1
  store i32 %v5_123b4, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_12330

dec_label_pc_123bc:                               ; preds = %dec_label_pc_12374, %bb54
  %v1_123bc = icmp slt i32 %v1_12388, 0
  %v0_123e0 = load i32, i32* %sl.global-to-local, align 4
  %v2_123e0 = icmp eq i32 %v0_123e0, 0
  br i1 %v1_123bc, label %dec_label_pc_123e0, label %dec_label_pc_123c4

dec_label_pc_123c4:                               ; preds = %dec_label_pc_123bc
  br i1 %v2_123e0, label %bb66, label %bb65

bb65:                                             ; preds = %dec_label_pc_123c4
  %v2_123c8 = sub i32 0, %v2_123ac11
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_123c4, %bb65
  %v23_123cc = phi i32 [ %v2_123ac11, %dec_label_pc_123c4 ], [ %v2_123c8, %bb65 ]
  %v2_123cc = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_123cc, i32* @r4, align 4
  ret i32 %v23_123cc

dec_label_pc_123d0:                               ; preds = %dec_label_pc_122f0
  %v1_123d0 = inttoptr i32 %v5_122d0 to i8*
  %v2_123d0 = load i8, i8* %v1_123d0, align 1
  %v3_123d0 = zext i8 %v2_123d0 to i32
  store i32 %v3_123d0, i32* %r4.global-to-local, align 4
  %v5_123d0 = add i32 %v0_122d0, 2
  store i32 %v5_123d0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_12308

dec_label_pc_123e0:                               ; preds = %dec_label_pc_123bc
  %.70 = select i1 %v2_123e0, i32 2147483647, i32 -2147483648
  %v2_123ec = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_123ec, i32* @r4, align 4
  ret i32 %.70

; uselistorder directives
  uselistorder i32 %v3_123b4, { 1, 0 }
  uselistorder i1 %v9_1237c, { 1, 0, 2 }
  uselistorder i1 %v3_1237c, { 1, 0 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i1 %v7_1234c, { 1, 2, 0 }
  uselistorder i1 %v2_1234c, { 1, 0, 2 }
  uselistorder i32 %v1_12330, { 1, 2, 0 }
  uselistorder i32 %v1_12370, { 1, 2, 0 }
  uselistorder i32 %v1_12388, { 1, 0 }
  uselistorder i32 %v2_123ac11, { 0, 1, 6, 3, 2, 4, 5 }
  uselistorder i32 %v0_12320, { 1, 0, 2 }
  uselistorder i32 %v5_122d0, { 3, 4, 5, 2, 1, 0 }
  uselistorder i32 %v3_122d0, { 1, 0 }
  uselistorder i32 %v0_122d0, { 0, 1, 3, 2 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 4, 3, 5, 0 }
  uselistorder i8 9, { 3, 4, 0, 1, 2 }
  uselistorder label %bb66, { 1, 0 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %bb60, { 1, 0 }
  uselistorder label %bb58, { 1, 0 }
  uselistorder label %dec_label_pc_12374, { 1, 0 }
  uselistorder label %bb54, { 1, 0 }
  uselistorder label %bb52, { 1, 0 }
  uselistorder label %bb50, { 1, 0 }
  uselistorder label %dec_label_pc_12308, { 2, 0, 1 }
  uselistorder label %dec_label_pc_122d0, { 1, 2, 0, 3 }
}

define i32 @function_123f0(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_123f0:
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_123f0 = load i32, i32* @r4, align 4
  store i32 %v3_123f0, i32* %stack_var_-24, align 4
  store i32 %tmp, i32* %r8.global-to-local, align 4
  store i32 %arg2, i32* %r7.global-to-local, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_12408

dec_label_pc_12408:                               ; preds = %dec_label_pc_12434.dec_label_pc_12408_crit_edge, %dec_label_pc_123f0
  %v0_1240c = phi i32 [ %v0_1240c.pre, %dec_label_pc_12434.dec_label_pc_12408_crit_edge ], [ %arg3, %dec_label_pc_123f0 ]
  %v0_12408 = phi i32 [ %v1_12420, %dec_label_pc_12434.dec_label_pc_12408_crit_edge ], [ %tmp, %dec_label_pc_123f0 ]
  %tmp12 = inttoptr i32 %v0_12408 to i32*
  %v5_12414 = call i32 @function_12c64(i32 %v0_1240c, i32* %tmp12, i32 1)
  %v7_12418 = icmp eq i32 %v5_12414, 1
  %v0_1241c = load i32, i32* @r4, align 4
  %v1_12420 = add i32 %v0_1241c, 1
  store i32 %v1_12420, i32* @r4, align 4
  %v0_12428 = load i32, i32* %r5.global-to-local, align 4
  br i1 %v7_12418, label %dec_label_pc_12428, label %dec_label_pc_12440

dec_label_pc_12428:                               ; preds = %dec_label_pc_12408
  %v1_12428 = add i32 %v0_12428, 1
  store i32 %v1_12428, i32* %r5.global-to-local, align 4
  %v0_1242c = load i32, i32* %r7.global-to-local, align 4
  %v7_12430 = icmp sgt i32 %v0_1242c, %v1_12428
  br i1 %v7_12430, label %dec_label_pc_12434, label %dec_label_pc_12440

dec_label_pc_12434:                               ; preds = %dec_label_pc_12428
  %v1_12434 = inttoptr i32 %v0_1241c to i8*
  %v2_12434 = load i8, i8* %v1_12434, align 1
  %v7_12438 = icmp eq i8 %v2_12434, 10
  br i1 %v7_12438, label %dec_label_pc_12440, label %dec_label_pc_12434.dec_label_pc_12408_crit_edge

dec_label_pc_12434.dec_label_pc_12408_crit_edge:  ; preds = %dec_label_pc_12434
  %v0_1240c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_12408

dec_label_pc_12440:                               ; preds = %dec_label_pc_12408, %dec_label_pc_12434, %dec_label_pc_12428
  %v0_12440 = phi i32 [ %v1_12428, %dec_label_pc_12434 ], [ %v1_12428, %dec_label_pc_12428 ], [ %v0_12428, %dec_label_pc_12408 ]
  %v2_12440 = icmp eq i32 %v0_12440, 0
  %v1_12444 = load i32, i32* %r8.global-to-local, align 4
  %storemerge = select i1 %v2_12440, i32 0, i32 %v1_12444
  %v2_1244c = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_1244c, i32* @r4, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_12420, { 1, 0 }
  uselistorder i8 10, { 2, 0, 3, 1 }
  uselistorder i32 (i32, i32*, i32)* @function_12c64, { 0, 2, 1 }
  uselistorder label %dec_label_pc_12440, { 1, 2, 0 }
}

define i32 @function_12450() local_unnamed_addr {
dec_label_pc_12450:
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_12450 = load i32, i32* @r4, align 4
  store i32 16, i32* @r4, align 4
  store i32 16, i32* %stack_var_-24, align 4
  %v0_12460 = call i32 @function_13070()
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_12468 = inttoptr i32 %v0_12460 to i32*
  store i32 0, i32* %v2_12468, align 4
  %v0_12474 = load i32, i32* %r6.global-to-local, align 4
  %v3_12478 = call i32 @function_13380(i32 2, i32 2, i32 %v0_12474)
  %v7_12484 = icmp eq i32 %v3_12478, -1
  store i32 %v3_12478, i32* %r5.global-to-local, align 4
  %v2_12490 = load i32, i32* @r4, align 4
  br i1 %v7_12484, label %dec_label_pc_124e0, label %dec_label_pc_124a4

dec_label_pc_124a4:                               ; preds = %dec_label_pc_12450
  %v7_12490 = shl i32 2056, %v2_12490
  %v8_12490 = or i32 %v7_12490, 2056
  store i32 2, i32* %stack_var_-40, align 4
  %v3_124c0 = bitcast i32* %stack_var_-40 to %sockaddr*
  %v4_124c0 = call i32 @function_131dc(i32 %v3_12478, %sockaddr* %v3_124c0, i32 %v2_12490)
  %v2_124c8 = ptrtoint i32* %stack_var_-24 to i32
  %v0_124cc = load i32, i32* %r5.global-to-local, align 4
  %v4_124d0 = call i32 @function_13208(i32 %v0_124cc, %sockaddr* %v3_124c0, i32 %v2_124c8)
  %v1_124d8 = call i32 @function_12a9c(i32 %v0_124cc)
  br label %dec_label_pc_124e0

dec_label_pc_124e0:                               ; preds = %dec_label_pc_12450, %dec_label_pc_124a4
  %v0_124e0 = phi i32 [ %v0_12474, %dec_label_pc_12450 ], [ %v8_12490, %dec_label_pc_124a4 ]
  store i32 %v3_12450, i32* @r4, align 4
  ret i32 %v0_124e0

; uselistorder directives
  uselistorder i32 %v3_12478, { 1, 2, 0 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 (i32, %sockaddr*, i32)* @function_131dc, { 0, 3, 1, 2, 4, 5, 6, 7 }
  uselistorder i32 2056, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_13380, { 23, 21, 12, 22, 20, 3, 19, 18, 17, 16, 15, 14, 13, 11, 10, 9, 8, 7, 6, 5, 4, 2, 1, 0 }
  uselistorder label %dec_label_pc_124e0, { 1, 0 }
}

define i32 @function_124ec(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_124ec:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp20 = ptrtoint i8* %arg1 to i32
  %v3_124f0 = load i8, i8* %tmp, align 1
  %v2_124f4 = icmp eq i8 %v3_124f0, 0
  br i1 %v2_124f4, label %bb, label %dec_label_pc_12508

bb:                                               ; preds = %dec_label_pc_124ec
  %v4_124f0 = zext i8 %v3_124f0 to i32
  br label %dec_label_pc_1251c

dec_label_pc_12508:                               ; preds = %dec_label_pc_124ec
  br label %dec_label_pc_1250c

dec_label_pc_1250c:                               ; preds = %dec_label_pc_1250c, %dec_label_pc_12508
  %v0_1250c = phi i32 [ %v1_1250c, %dec_label_pc_1250c ], [ 0, %dec_label_pc_12508 ]
  %v1_1250c = add i32 %v0_1250c, 1
  %v2_12510 = add i32 %v1_1250c, %arg2
  %v3_12510 = inttoptr i32 %v2_12510 to i8*
  %v4_12510 = load i8, i8* %v3_12510, align 1
  %v2_12514 = icmp eq i8 %v4_12510, 0
  br i1 %v2_12514, label %dec_label_pc_1251c, label %dec_label_pc_1250c

dec_label_pc_1251c:                               ; preds = %dec_label_pc_1250c, %bb
  %v0_1256018 = phi i32 [ %v4_124f0, %bb ], [ %v1_1250c, %dec_label_pc_1250c ]
  %v0_125241 = load i32, i32* @r1, align 4
  %tmp27 = icmp slt i32 %v0_125241, 1
  br i1 %tmp27, label %dec_label_pc_12570, label %dec_label_pc_12530

dec_label_pc_12530:                               ; preds = %dec_label_pc_1251c, %dec_label_pc_12524.backedge
  %v0_12528.in = phi i32 [ %v0_12528, %dec_label_pc_12524.backedge ], [ %v0_125241, %dec_label_pc_1251c ]
  %v0_12554 = phi i32 [ %v1_12554., %dec_label_pc_12524.backedge ], [ 0, %dec_label_pc_1251c ]
  %v0_12530 = phi i32 [ %v5_12530, %dec_label_pc_12524.backedge ], [ %tmp20, %dec_label_pc_1251c ]
  %v0_12528 = add i32 %v0_12528.in, -1
  %v1_12530 = inttoptr i32 %v0_12530 to i8*
  %v2_12530 = load i8, i8* %v1_12530, align 1
  %v3_12530 = zext i8 %v2_12530 to i32
  store i32 %v3_12530, i32* @lr, align 4
  %v5_12530 = add i32 %v0_12530, 1
  %v2_12534 = add i32 %v0_12554, %arg2
  %v3_12534 = inttoptr i32 %v2_12534 to i8*
  %v4_12534 = load i8, i8* %v3_12534, align 1
  %v6_12534 = zext i8 %v4_12534 to i32
  %v1_12538 = add nsw i32 %v3_12530, -65
  %v1_1253c = add nsw i32 %v6_12534, -65
  %tmp35 = icmp ult i32 %v1_12538, 26
  br i1 %tmp35, label %bb28, label %bb29

bb28:                                             ; preds = %dec_label_pc_12530
  %v5_12544 = or i32 %v3_12530, 96
  store i32 %v5_12544, i32* @lr, align 4
  br label %bb29

bb29:                                             ; preds = %dec_label_pc_12530, %bb28
  %v0_12550 = phi i32 [ %v3_12530, %dec_label_pc_12530 ], [ %v5_12544, %bb28 ]
  %tmp36 = icmp ult i32 %v1_1253c, 26
  br i1 %tmp36, label %bb30, label %bb31

bb30:                                             ; preds = %bb29
  %v5_1254c = or i32 %v6_12534, 96
  br label %bb31

bb31:                                             ; preds = %bb29, %bb30
  %v1_12550 = phi i32 [ %v6_12534, %bb29 ], [ %v5_1254c, %bb30 ]
  %v9_12550 = icmp eq i32 %v0_12550, %v1_12550
  %v1_12554 = add i32 %v0_12554, 1
  %v1_12554. = select i1 %v9_12550, i32 %v1_12554, i32 0
  br i1 %v9_12550, label %dec_label_pc_12560, label %dec_label_pc_12524.backedge

dec_label_pc_12524.backedge:                      ; preds = %bb31, %dec_label_pc_12560
  %tmp32 = icmp slt i32 %v0_12528, 1
  br i1 %tmp32, label %dec_label_pc_12570, label %dec_label_pc_12530

dec_label_pc_12560:                               ; preds = %bb31
  %v9_12560 = icmp eq i32 %v0_1256018, %v1_12554.
  br i1 %v9_12560, label %dec_label_pc_12568, label %dec_label_pc_12524.backedge

dec_label_pc_12568:                               ; preds = %dec_label_pc_12560
  %v2_12568 = sub i32 %v5_12530, %tmp20
  ret i32 %v2_12568

dec_label_pc_12570:                               ; preds = %dec_label_pc_12524.backedge, %dec_label_pc_1251c
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v1_12554., { 1, 0 }
  uselistorder i32 %v0_12530, { 1, 0 }
  uselistorder i32 %v0_12554, { 1, 0 }
  uselistorder i8 %v3_124f0, { 1, 0 }
  uselistorder i32 %tmp20, { 1, 0 }
  uselistorder label %dec_label_pc_12524.backedge, { 1, 0 }
  uselistorder label %bb31, { 1, 0 }
  uselistorder label %bb29, { 1, 0 }
  uselistorder label %dec_label_pc_12530, { 1, 0 }
}

define i32 @function_12578(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12578:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_12578 = load i8, i8* %arg1, align 1
  %v2_1257c = icmp eq i8 %v2_12578, 0
  br i1 %v2_1257c, label %bb, label %dec_label_pc_12588

bb:                                               ; preds = %dec_label_pc_12578
  %v3_12578 = zext i8 %v2_12578 to i32
  br label %dec_label_pc_1259c

dec_label_pc_12588:                               ; preds = %dec_label_pc_12578
  br label %dec_label_pc_1258c

dec_label_pc_1258c:                               ; preds = %dec_label_pc_1258c, %dec_label_pc_12588
  %v0_1258c = phi i32 [ %v1_1258c, %dec_label_pc_1258c ], [ 0, %dec_label_pc_12588 ]
  %v1_1258c = add i32 %v0_1258c, 1
  %v2_12590 = add i32 %v1_1258c, %tmp
  %v3_12590 = inttoptr i32 %v2_12590 to i8*
  %v4_12590 = load i8, i8* %v3_12590, align 1
  %v2_12594 = icmp eq i8 %v4_12590, 0
  br i1 %v2_12594, label %dec_label_pc_1259c, label %dec_label_pc_1258c

dec_label_pc_1259c:                               ; preds = %dec_label_pc_1258c, %bb
  %v0_125c0 = phi i32 [ %v3_12578, %bb ], [ %v1_1258c, %dec_label_pc_1258c ]
  %v1_1259c = inttoptr i32 %arg2 to i8*
  %v2_1259c = load i8, i8* %v1_1259c, align 1
  %v3_1259c = zext i8 %v2_1259c to i32
  %v2_125a0 = icmp eq i8 %v2_1259c, 0
  br i1 %v2_125a0, label %bb22, label %dec_label_pc_125ac

bb22:                                             ; preds = %dec_label_pc_1259c
  store i32 %v3_1259c, i32* @r2, align 4
  br label %dec_label_pc_125c0

dec_label_pc_125ac:                               ; preds = %dec_label_pc_1259c
  br label %dec_label_pc_125b0

dec_label_pc_125b0:                               ; preds = %dec_label_pc_125b0, %dec_label_pc_125ac
  %v0_125b0 = phi i32 [ %v1_125b0, %dec_label_pc_125b0 ], [ 0, %dec_label_pc_125ac ]
  %v1_125b0 = add i32 %v0_125b0, 1
  store i32 %v1_125b0, i32* @r2, align 4
  %v2_125b4 = add i32 %v1_125b0, %arg2
  %v3_125b4 = inttoptr i32 %v2_125b4 to i8*
  %v4_125b4 = load i8, i8* %v3_125b4, align 1
  %v2_125b8 = icmp eq i8 %v4_125b4, 0
  br i1 %v2_125b8, label %dec_label_pc_125c0, label %dec_label_pc_125b0

dec_label_pc_125c0:                               ; preds = %dec_label_pc_125b0, %bb22
  %v0_125ec4 = phi i32 [ %v3_1259c, %bb22 ], [ %v1_125b0, %dec_label_pc_125b0 ]
  %v9_125c0 = icmp eq i32 %v0_125c0, %v0_125ec4
  br i1 %v9_125c0, label %dec_label_pc_125ec.preheader, label %dec_label_pc_125cc

dec_label_pc_125ec.preheader:                     ; preds = %dec_label_pc_125c0
  %v2_125ec6 = icmp eq i32 %v0_125c0, 0
  br i1 %v2_125ec6, label %dec_label_pc_125f4, label %dec_label_pc_125d4

dec_label_pc_125cc:                               ; preds = %dec_label_pc_125d4, %dec_label_pc_125c0
  ret i32 0

dec_label_pc_125d4:                               ; preds = %dec_label_pc_125e4, %dec_label_pc_125ec.preheader
  %v0_125ec.in = phi i32 [ %v0_125ec, %dec_label_pc_125e4 ], [ %v0_125c0, %dec_label_pc_125ec.preheader ]
  %v0_125e8 = phi i32 [ %v1_125e8, %dec_label_pc_125e4 ], [ %arg2, %dec_label_pc_125ec.preheader ]
  %v0_125e4 = phi i32 [ %v1_125e4, %dec_label_pc_125e4 ], [ %tmp, %dec_label_pc_125ec.preheader ]
  %v0_125ec = add i32 %v0_125ec.in, -1
  %v1_125d4 = inttoptr i32 %v0_125e4 to i8*
  %v2_125d4 = load i8, i8* %v1_125d4, align 1
  %v3_125d4 = zext i8 %v2_125d4 to i32
  store i32 %v3_125d4, i32* @r2, align 4
  %v1_125d8 = inttoptr i32 %v0_125e8 to i8*
  %v2_125d8 = load i8, i8* %v1_125d8, align 1
  %v9_125dc = icmp eq i8 %v2_125d4, %v2_125d8
  br i1 %v9_125dc, label %dec_label_pc_125e4, label %dec_label_pc_125cc

dec_label_pc_125e4:                               ; preds = %dec_label_pc_125d4
  %v1_125e4 = add i32 %v0_125e4, 1
  %v1_125e8 = add i32 %v0_125e8, 1
  %v2_125ec = icmp eq i32 %v0_125ec, 0
  br i1 %v2_125ec, label %dec_label_pc_125f4, label %dec_label_pc_125d4

dec_label_pc_125f4:                               ; preds = %dec_label_pc_125e4, %dec_label_pc_125ec.preheader
  ret i32 1

; uselistorder directives
  uselistorder i32 %v1_125b0, { 0, 1, 3, 2 }
  uselistorder i8 %v2_12578, { 1, 0 }
}

define i32 @function_125fc(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_125fc:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r2, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = sext i8 %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-62 = alloca i32, align 4
  %stack_var_-30 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_125fc = load i32, i32* @r4, align 4
  store i32 %v3_125fc, i32* %stack_var_-28, align 4
  %v22_125fc = ptrtoint i32* %stack_var_-28 to i32
  %v0_12600 = load i32, i32* @r2, align 4
  store i32 %v0_12600, i32* %r8.global-to-local, align 4
  %v2_12600 = icmp eq i32 %v0_12600, 0
  store i1 %v2_12600, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg2, i32* %r5.global-to-local, align 4
  br i1 %v2_12600, label %dec_label_pc_126f0, label %dec_label_pc_12610

dec_label_pc_12610:                               ; preds = %dec_label_pc_125fc
  %v3_12610 = icmp eq i8 %arg1, 0
  store i1 %v3_12610, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_12610, label %.thread, label %dec_label_pc_12624

.thread:                                          ; preds = %dec_label_pc_12610
  %v4_12618 = inttoptr i32 %v0_12600 to i8*
  store i8 48, i8* %v4_12618, align 1
  %v0_1261c.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1261c.pr.pr, label %.thread1, label %dec_label_pc_12624

.thread1:                                         ; preds = %.thread
  %v4_1261c = load i32, i32* %r8.global-to-local, align 4
  %v5_1261c = add i32 %v4_1261c, 1
  %v6_1261c = inttoptr i32 %v5_1261c to i8*
  store i8 0, i8* %v6_1261c, align 1
  %v0_12620.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12620.pr.pr, label %dec_label_pc_126f0, label %dec_label_pc_12624

dec_label_pc_12624:                               ; preds = %dec_label_pc_12610, %.thread, %.thread1
  %v7_12628 = icmp eq i32 %arg2, 10
  store i1 %v7_12628, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12628, label %bb, label %.thread21

.thread21:                                        ; preds = %dec_label_pc_12624
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %.thread4

bb:                                               ; preds = %dec_label_pc_12624
  %tmp39 = icmp slt i8 %arg1, 0
  %phitmp = icmp eq i1 %tmp39, false
  store i1 %phitmp, i1* %cpsr_z.global-to-local, align 1
  br i1 %phitmp, label %.thread4, label %dec_label_pc_1264c

.thread4:                                         ; preds = %bb, %.thread21
  store i32 %tmp, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1265c

dec_label_pc_1264c:                               ; preds = %bb
  %v2_1264c = sub nsw i32 0, %tmp
  store i32 %v2_1264c, i32* %r4.global-to-local, align 4
  store i1 %v3_12610, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_12610, label %dec_label_pc_126fc, label %dec_label_pc_1265c

dec_label_pc_1265c:                               ; preds = %dec_label_pc_1264c, %.thread4
  %v0_1266410 = phi i32 [ %tmp, %.thread4 ], [ %v2_1264c, %dec_label_pc_1264c ]
  %storemerge = phi i32 [ 0, %.thread4 ], [ 1, %dec_label_pc_1264c ]
  store i32 %storemerge, i32* %sl.global-to-local, align 4
  store i32 32, i32* %r6.global-to-local, align 4
  %v2_12660 = ptrtoint i32* %stack_var_-30 to i32
  store i32 %v2_12660, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_12664

dec_label_pc_12664:                               ; preds = %bb37, %dec_label_pc_1265c
  %v0_12664 = phi i32 [ %v0_12688, %bb37 ], [ %v0_1266410, %dec_label_pc_1265c ]
  store i32 %v0_12664, i32* %r0.global-to-local, align 4
  %v0_12668 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_12668, i32* %r1.global-to-local, align 4
  %sext = mul i32 %v0_12664, 16777216
  %v1_1266c = sdiv i32 %sext, 16777216
  %v3_1266c = call i32 @function_12824(i32 %v1_1266c, i32 %v0_12668)
  store i32 %v3_1266c, i32* %r0.global-to-local, align 4
  %v7_12670 = icmp eq i32 %v3_1266c, 9
  store i1 %v7_12670, i1* %cpsr_z.global-to-local, align 1
  %v1_12674 = add i32 %v3_1266c, 48
  %v0_12678 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_12678, i32* @r1, align 4
  %v7_1267c = icmp sgt i32 %v3_1266c, 9
  %extract.t = trunc i32 %v1_12674 to i8
  br i1 %v7_1267c, label %bb36, label %bb37

bb36:                                             ; preds = %dec_label_pc_12664
  %v9_1267c = add i32 %v3_1266c, 55
  %extract.t20 = trunc i32 %v9_1267c to i8
  br label %bb37

bb37:                                             ; preds = %dec_label_pc_12664, %bb36
  %v0_12684.off0 = phi i8 [ %extract.t, %dec_label_pc_12664 ], [ %extract.t20, %bb36 ]
  %v0_12680 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_12680, i32* @r0, align 4
  %v2_12684 = load i32, i32* %r7.global-to-local, align 4
  %v3_12684 = inttoptr i32 %v2_12684 to i8*
  store i8 %v0_12684.off0, i8* %v3_12684, align 1
  %v4_12684 = load i32, i32* %r7.global-to-local, align 4
  %v5_12684 = add i32 %v4_12684, -1
  store i32 %v5_12684, i32* %r7.global-to-local, align 4
  %v0_12688 = call i32 @function_12714()
  store i32 %v0_12688, i32* %r0.global-to-local, align 4
  store i32 %v0_12688, i32* %r4.global-to-local, align 4
  %v2_1268c = icmp eq i32 %v0_12688, 0
  store i1 %v2_1268c, i1* %cpsr_z.global-to-local, align 1
  %v0_12690 = load i32, i32* %r6.global-to-local, align 4
  %v1_12690 = add i32 %v0_12690, -1
  store i32 %v1_12690, i32* %r6.global-to-local, align 4
  br i1 %v2_1268c, label %dec_label_pc_12698, label %dec_label_pc_12664

dec_label_pc_12698:                               ; preds = %bb37
  %v0_12698 = load i32, i32* %sl.global-to-local, align 4
  %v2_12698 = icmp eq i32 %v0_12698, 0
  store i1 %v2_12698, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12698, label %bb38, label %dec_label_pc_12700

bb38:                                             ; preds = %dec_label_pc_12698
  store i32 %v0_12690, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_126a4

dec_label_pc_126a4:                               ; preds = %bb38, %dec_label_pc_12700
  %v1_126b0 = phi i32 [ %v0_12690, %bb38 ], [ %v1_126a8.pre, %dec_label_pc_12700 ]
  %v2_126a4 = ptrtoint i32* %stack_var_-62 to i32
  %v2_126a8 = add i32 %v1_126b0, %v2_126a4
  %v3_126a8 = inttoptr i32 %v2_126a8 to i8*
  %v4_126a8 = load i8, i8* %v3_126a8, align 1
  %v6_126a8 = zext i8 %v4_126a8 to i32
  %v2_126ac = icmp eq i8 %v4_126a8, 0
  store i1 %v2_126ac, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_126a8, i32* %r1.global-to-local, align 4
  br i1 %v2_126ac, label %dec_label_pc_126d4, label %dec_label_pc_126b8

dec_label_pc_126b8:                               ; preds = %dec_label_pc_126a4
  br label %dec_label_pc_126bc

dec_label_pc_126bc:                               ; preds = %dec_label_pc_126bc, %dec_label_pc_126b8
  %v0_126bc = phi i32 [ %v1_126bc, %dec_label_pc_126bc ], [ 0, %dec_label_pc_126b8 ]
  %v1_126bc = add i32 %v0_126bc, 1
  store i32 %v1_126bc, i32* @r2, align 4
  %v2_126c0 = add i32 %v1_126bc, %v2_126a8
  %v3_126c0 = inttoptr i32 %v2_126c0 to i8*
  %v4_126c0 = load i8, i8* %v3_126c0, align 1
  %v2_126c4 = icmp eq i8 %v4_126c0, 0
  store i1 %v2_126c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_126c4, label %dec_label_pc_126cc, label %dec_label_pc_126bc

dec_label_pc_126cc:                               ; preds = %dec_label_pc_126bc
  %v7_126cc = icmp eq i32 %v0_126bc, -2
  store i1 %v7_126cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_126cc, label %dec_label_pc_126f0, label %dec_label_pc_126d4

dec_label_pc_126d4:                               ; preds = %dec_label_pc_126cc, %dec_label_pc_126a4
  %v0_126dc17 = phi i32 [ %v1_126bc, %dec_label_pc_126cc ], [ %v6_126a8, %dec_label_pc_126a4 ]
  store i32 %v2_126a8, i32* %r0.global-to-local, align 4
  %v0_126d8 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_126d8, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_126dc

dec_label_pc_126dc:                               ; preds = %dec_label_pc_126dc.dec_label_pc_126dc_crit_edge, %dec_label_pc_126d4
  %v2_126e8 = phi i32 [ %v5_126e8, %dec_label_pc_126dc.dec_label_pc_126dc_crit_edge ], [ %v0_126d8, %dec_label_pc_126d4 ]
  %v0_126e0 = phi i32 [ %v0_126e0.pre, %dec_label_pc_126dc.dec_label_pc_126dc_crit_edge ], [ %v2_126a8, %dec_label_pc_126d4 ]
  %v0_126dc = phi i32 [ %v0_126dc.pre, %dec_label_pc_126dc.dec_label_pc_126dc_crit_edge ], [ %v0_126dc17, %dec_label_pc_126d4 ]
  %v1_126dc = add i32 %v0_126dc, -1
  store i32 %v1_126dc, i32* @r2, align 4
  %v1_126e0 = inttoptr i32 %v0_126e0 to i8*
  %v2_126e0 = load i8, i8* %v1_126e0, align 1
  %v5_126e0 = add i32 %v0_126e0, 1
  store i32 %v5_126e0, i32* %r0.global-to-local, align 4
  %v3_126e4 = icmp eq i32 %v0_126dc, 0
  store i1 %v3_126e4, i1* %cpsr_z.global-to-local, align 1
  %v3_126e8 = inttoptr i32 %v2_126e8 to i8*
  store i8 %v2_126e0, i8* %v3_126e8, align 1
  %v4_126e8 = load i32, i32* %r1.global-to-local, align 4
  %v5_126e8 = add i32 %v4_126e8, 1
  store i32 %v5_126e8, i32* %r1.global-to-local, align 4
  br i1 %v3_126e4, label %dec_label_pc_126f0, label %dec_label_pc_126dc.dec_label_pc_126dc_crit_edge

dec_label_pc_126dc.dec_label_pc_126dc_crit_edge:  ; preds = %dec_label_pc_126dc
  %v0_126dc.pre = load i32, i32* @r2, align 4
  %v0_126e0.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_126dc

dec_label_pc_126f0:                               ; preds = %dec_label_pc_126dc, %dec_label_pc_126cc, %.thread1, %dec_label_pc_125fc
  %v0_126f0 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_126f0, i32* %r0.global-to-local, align 4
  %v2_126f8 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_126f8, i32* @r4, align 4
  ret i32 %v0_126f0

dec_label_pc_126fc:                               ; preds = %dec_label_pc_1264c
  store i32 32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_12700

dec_label_pc_12700:                               ; preds = %dec_label_pc_12698, %dec_label_pc_126fc
  %v1_12704 = phi i32 [ %v1_12690, %dec_label_pc_12698 ], [ 32, %dec_label_pc_126fc ]
  %v2_12704 = add i32 %v1_12704, %v22_125fc
  %v3_1270c = add i32 %v2_12704, -34
  %v4_1270c = inttoptr i32 %v3_1270c to i8*
  store i8 45, i8* %v4_1270c, align 1
  %v1_126a8.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_126a4

; uselistorder directives
  uselistorder i32 %v5_126e8, { 1, 0 }
  uselistorder i1 %v3_126e4, { 1, 0 }
  uselistorder i32 %v0_126e0, { 1, 0 }
  uselistorder i1 %v7_126cc, { 1, 0 }
  uselistorder i32 %v1_126bc, { 0, 1, 3, 2 }
  uselistorder i32 %v2_126a8, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_12688, { 1, 2, 3, 0 }
  uselistorder i32 %v3_1266c, { 1, 0, 2, 3, 4 }
  uselistorder i1 %phitmp, { 1, 0 }
  uselistorder i1 %v3_12610, { 1, 0, 2, 3 }
  uselistorder i32 %v0_12600, { 0, 2, 1 }
  uselistorder i32* %stack_var_-28, { 0, 2, 1 }
  uselistorder i32* %r6.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 14, 9, 10, 11, 12, 13 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12700, { 1, 0 }
  uselistorder label %dec_label_pc_126a4, { 1, 0 }
  uselistorder label %bb37, { 1, 0 }
  uselistorder label %dec_label_pc_12624, { 2, 1, 0 }
}

define i32 @function_12714() local_unnamed_addr {
dec_label_pc_12714:
  %v0_12714 = load i32, i32* @r1, align 4
  %v1_12714 = add i32 %v0_12714, -1
  %v7_12714 = icmp eq i32 %v0_12714, 1
  br i1 %v7_12714, label %bb, label %bb82

bb:                                               ; preds = %dec_label_pc_12714
  %v2_12718 = load i32, i32* @r0, align 4
  ret i32 %v2_12718

bb82:                                             ; preds = %dec_label_pc_12714
  %v2_12714 = icmp eq i32 %v0_12714, 0
  br i1 %v2_12714, label %dec_label_pc_127fc, label %dec_label_pc_12720

dec_label_pc_12720:                               ; preds = %bb82
  %v0_12720 = load i32, i32* @r0, align 4
  %tmp = icmp ugt i32 %v0_12720, %v0_12714
  br i1 %tmp, label %dec_label_pc_12728, label %dec_label_pc_127b4

dec_label_pc_12728:                               ; preds = %dec_label_pc_12720
  %v2_12728 = and i32 %v1_12714, %v0_12714
  %v4_12728 = icmp eq i32 %v2_12728, 0
  br i1 %v4_12728, label %dec_label_pc_127c0, label %dec_label_pc_12730

dec_label_pc_12730:                               ; preds = %dec_label_pc_12728
  %v3_12730 = icmp ult i32 %v0_12714, 536870912
  br i1 %v3_12730, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_12730
  %v4_12734 = mul i32 %v0_12714, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_12730, %.thread
  %v0_12754.pr36.ph = phi i32 [ %v4_12734, %.thread ], [ %v0_12714, %dec_label_pc_12730 ]
  %storemerge137 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_12730 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb85
  %v0_12754.pr36 = phi i32 [ %v4_12748, %bb85 ], [ %v0_12754.pr36.ph, %.preheader.preheader ]
  %v1_1274c = phi i32 [ %v4_1274c, %bb85 ], [ %storemerge137, %.preheader.preheader ]
  %v2_12740 = icmp ugt i32 %v0_12754.pr36, 268435455
  br i1 %v2_12740, label %.thread2, label %bb83

.thread2:                                         ; preds = %.preheader
  br label %dec_label_pc_12754thread-pre-split.loopexit

bb83:                                             ; preds = %.preheader
  %v4_12744 = icmp ult i32 %v0_12754.pr36, %v0_12720
  br i1 %v4_12744, label %bb84, label %dec_label_pc_12754thread-pre-split.loopexit.loopexit

bb84:                                             ; preds = %bb83
  %v2_12748 = and i32 %v0_12754.pr36, 268435456
  %v3_12748 = icmp eq i32 %v2_12748, 0
  %v4_12748 = mul i32 %v0_12754.pr36, 16
  br i1 %v3_12748, label %bb85, label %dec_label_pc_12754.loopexit

bb85:                                             ; preds = %bb84
  %v2_1274c = and i32 %v1_1274c, 268435456
  %v3_1274c = icmp eq i32 %v2_1274c, 0
  %v4_1274c = mul i32 %v1_1274c, 16
  br i1 %v3_1274c, label %.preheader, label %dec_label_pc_12754thread-pre-split.loopexit.loopexit

dec_label_pc_12754thread-pre-split.loopexit.loopexit: ; preds = %bb85, %bb83
  %v1_1276048.ph = phi i32 [ %v1_1274c, %bb83 ], [ %v4_1274c, %bb85 ]
  %v0_12754.pr38.ph = phi i32 [ %v0_12754.pr36, %bb83 ], [ %v4_12748, %bb85 ]
  br label %dec_label_pc_12754thread-pre-split.loopexit

dec_label_pc_12754thread-pre-split.loopexit:      ; preds = %dec_label_pc_12754thread-pre-split.loopexit.loopexit, %.thread2
  %v1_1276048 = phi i32 [ %v1_1274c, %.thread2 ], [ %v1_1276048.ph, %dec_label_pc_12754thread-pre-split.loopexit.loopexit ]
  %v0_12754.pr38 = phi i32 [ %v0_12754.pr36, %.thread2 ], [ %v0_12754.pr38.ph, %dec_label_pc_12754thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_12754thread-pre-split

dec_label_pc_12754thread-pre-split:               ; preds = %dec_label_pc_12754thread-pre-split.loopexit, %bb87
  %v1_1276046 = phi i32 [ %v1_1276048, %dec_label_pc_12754thread-pre-split.loopexit ], [ %v3_12760, %bb87 ]
  %v0_12754.pr = phi i32 [ %v0_12754.pr38, %dec_label_pc_12754thread-pre-split.loopexit ], [ %v3_1275c, %bb87 ]
  br label %dec_label_pc_12754

dec_label_pc_12754.loopexit:                      ; preds = %bb84
  br label %dec_label_pc_12754

dec_label_pc_12754:                               ; preds = %dec_label_pc_12754.loopexit, %dec_label_pc_12754thread-pre-split
  %v1_12760 = phi i32 [ %v1_1276046, %dec_label_pc_12754thread-pre-split ], [ %v1_1274c, %dec_label_pc_12754.loopexit ]
  %v1_1275c = phi i32 [ %v0_12754.pr, %dec_label_pc_12754thread-pre-split ], [ %v4_12748, %dec_label_pc_12754.loopexit ]
  %v2_12754 = icmp slt i32 %v1_1275c, 0
  br i1 %v2_12754, label %dec_label_pc_12768, label %bb86

bb86:                                             ; preds = %dec_label_pc_12754
  %v4_12758 = icmp ult i32 %v1_1275c, %v0_12720
  br i1 %v4_12758, label %bb87, label %dec_label_pc_12768

bb87:                                             ; preds = %bb86
  %v3_1275c = mul i32 %v1_1275c, 2
  %v2_12760 = icmp slt i32 %v1_12760, 0
  %v3_12760 = mul i32 %v1_12760, 2
  br i1 %v2_12760, label %dec_label_pc_12768, label %dec_label_pc_12754thread-pre-split

dec_label_pc_12768:                               ; preds = %bb86, %dec_label_pc_12754, %bb87
  %v2_1277459 = phi i32 [ %v3_12760, %bb87 ], [ %v1_12760, %bb86 ], [ %v1_12760, %dec_label_pc_12754 ]
  %v1_1276c51 = phi i32 [ %v3_1275c, %bb87 ], [ %v1_1275c, %bb86 ], [ %v1_1275c, %dec_label_pc_12754 ]
  br label %dec_label_pc_1276c

dec_label_pc_1276c:                               ; preds = %.thread11, %dec_label_pc_12768
  %v1_127a0 = phi i32 [ %v4_127a0, %.thread11 ], [ %v2_1277459, %dec_label_pc_12768 ]
  %v1_12774 = phi i32 [ %v0_127ac, %.thread11 ], [ 0, %dec_label_pc_12768 ]
  %v1_127a4 = phi i32 [ %v4_127a4, %.thread11 ], [ %v1_1276c51, %dec_label_pc_12768 ]
  %v1_12770 = phi i32 [ %v0_1279c, %.thread11 ], [ %v0_12720, %dec_label_pc_12768 ]
  %v3_1276c = icmp ult i32 %v1_12770, %v1_127a4
  br i1 %v3_1276c, label %.thread7, label %bb88

bb88:                                             ; preds = %dec_label_pc_1276c
  %v3_12770 = sub i32 %v1_12770, %v1_127a4
  %v3_12774 = or i32 %v1_12774, %v1_127a0
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_1276c, %bb88
  %v1_1277c = phi i32 [ %v1_12770, %dec_label_pc_1276c ], [ %v3_12770, %bb88 ]
  %v1_12780 = phi i32 [ %v1_12774, %dec_label_pc_1276c ], [ %v3_12774, %bb88 ]
  %v4_12778 = udiv i32 %v1_127a4, 2
  %v6_12778 = icmp ult i32 %v1_1277c, %v4_12778
  br i1 %v6_12778, label %.thread8, label %bb89

bb89:                                             ; preds = %.thread7
  %v3_1277c = urem i32 %v1_127a4, 2
  %v4_1277c = icmp eq i32 %v3_1277c, 0
  %v6_1277c = sub i32 %v1_1277c, %v4_12778
  br i1 %v4_1277c, label %.thread8, label %bb90

bb90:                                             ; preds = %bb89
  %v5_12780 = udiv i32 %v1_127a0, 2
  %v6_12780 = or i32 %v1_12780, %v5_12780
  br label %.thread8

.thread8:                                         ; preds = %bb89, %.thread7, %bb90
  %v1_12788 = phi i32 [ %v6_1277c, %bb89 ], [ %v1_1277c, %.thread7 ], [ %v6_1277c, %bb90 ]
  %v1_1278c = phi i32 [ %v1_12780, %bb89 ], [ %v1_12780, %.thread7 ], [ %v6_12780, %bb90 ]
  %v4_12784 = udiv i32 %v1_127a4, 4
  %v6_12784 = icmp ult i32 %v1_12788, %v4_12784
  br i1 %v6_12784, label %.thread9, label %bb91

bb91:                                             ; preds = %.thread8
  %v3_12788 = and i32 %v1_127a4, 2
  %v4_12788 = icmp eq i32 %v3_12788, 0
  %v6_12788 = sub i32 %v1_12788, %v4_12784
  br i1 %v4_12788, label %.thread9, label %bb92

bb92:                                             ; preds = %bb91
  %v5_1278c = udiv i32 %v1_127a0, 4
  %v6_1278c = or i32 %v1_1278c, %v5_1278c
  br label %.thread9

.thread9:                                         ; preds = %bb91, %.thread8, %bb92
  %v1_12794 = phi i32 [ %v6_12788, %bb91 ], [ %v1_12788, %.thread8 ], [ %v6_12788, %bb92 ]
  %v1_12798 = phi i32 [ %v1_1278c, %bb91 ], [ %v1_1278c, %.thread8 ], [ %v6_1278c, %bb92 ]
  %v4_12790 = udiv i32 %v1_127a4, 8
  %v6_12790 = icmp ult i32 %v1_12794, %v4_12790
  br i1 %v6_12790, label %thread-pre-split, label %bb93

bb93:                                             ; preds = %.thread9
  %v3_12794 = and i32 %v1_127a4, 4
  %v4_12794 = icmp eq i32 %v3_12794, 0
  %v6_12794 = sub i32 %v1_12794, %v4_12790
  br i1 %v4_12794, label %thread-pre-split, label %bb94

bb94:                                             ; preds = %bb93
  %v5_12798 = udiv i32 %v1_127a0, 8
  %v6_12798 = or i32 %v1_12798, %v5_12798
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb94, %.thread9, %bb93
  %v0_127ac = phi i32 [ %v1_12798, %bb93 ], [ %v1_12798, %.thread9 ], [ %v6_12798, %bb94 ]
  %v0_1279c = phi i32 [ %v6_12794, %bb93 ], [ %v1_12794, %.thread9 ], [ %v6_12794, %bb94 ]
  %v2_1279c = icmp eq i32 %v0_1279c, 0
  br i1 %v2_1279c, label %dec_label_pc_127ac, label %bb95

bb95:                                             ; preds = %thread-pre-split
  %tmp142 = icmp ult i32 %v1_127a0, 16
  br i1 %tmp142, label %dec_label_pc_127ac, label %.thread11

.thread11:                                        ; preds = %bb95
  %v4_127a0 = udiv i32 %v1_127a0, 16
  %v4_127a4 = udiv i32 %v1_127a4, 16
  br label %dec_label_pc_1276c

dec_label_pc_127ac:                               ; preds = %thread-pre-split, %bb95
  ret i32 %v0_127ac

dec_label_pc_127b4:                               ; preds = %dec_label_pc_12720
  %v9_12720 = icmp eq i32 %v0_12720, %v0_12714
  %. = zext i1 %v9_12720 to i32
  ret i32 %.

dec_label_pc_127c0:                               ; preds = %dec_label_pc_12728
  %v2_127c0 = icmp ugt i32 %v0_12714, 65535
  br i1 %v2_127c0, label %bb99, label %.thread16

bb99:                                             ; preds = %dec_label_pc_127c0
  %v2_127c4 = and i32 %v0_12714, 32768
  %v3_127c4 = icmp eq i32 %v2_127c4, 0
  %v4_127c4 = udiv i32 %v0_12714, 65536
  br i1 %v3_127c4, label %.thread16, label %bb100

.thread16:                                        ; preds = %bb99, %dec_label_pc_127c0
  %v0_127d065 = phi i32 [ %v0_12714, %dec_label_pc_127c0 ], [ %v4_127c4, %bb99 ]
  br label %bb100

bb100:                                            ; preds = %bb99, %.thread16
  %v1_127d4 = phi i32 [ %v0_127d065, %.thread16 ], [ %v4_127c4, %bb99 ]
  %storemerge = phi i32 [ 0, %.thread16 ], [ 16, %bb99 ]
  %v2_127d0 = icmp ugt i32 %v1_127d4, 255
  br i1 %v2_127d0, label %bb101, label %.thread17

bb101:                                            ; preds = %bb100
  %v2_127d4 = and i32 %v1_127d4, 128
  %v3_127d4 = icmp eq i32 %v2_127d4, 0
  %v4_127d4 = udiv i32 %v1_127d4, 256
  br i1 %v3_127d4, label %.thread17, label %bb102

bb102:                                            ; preds = %bb101
  %v2_127d8 = or i32 %storemerge, 8
  br label %.thread17

.thread17:                                        ; preds = %bb101, %bb100, %bb102
  %v1_127e4 = phi i32 [ %storemerge, %bb100 ], [ %storemerge, %bb101 ], [ %v2_127d8, %bb102 ]
  %v1_127e0 = phi i32 [ %v1_127d4, %bb100 ], [ %v4_127d4, %bb101 ], [ %v4_127d4, %bb102 ]
  %v2_127dc = icmp ugt i32 %v1_127e0, 15
  br i1 %v2_127dc, label %bb103, label %.thread18

bb103:                                            ; preds = %.thread17
  %v2_127e0 = and i32 %v1_127e0, 8
  %v3_127e0 = icmp eq i32 %v2_127e0, 0
  %v4_127e0 = udiv i32 %v1_127e0, 16
  br i1 %v3_127e0, label %.thread18, label %bb104

bb104:                                            ; preds = %bb103
  %v2_127e4 = add nsw i32 %v1_127e4, 4
  br label %.thread18

.thread18:                                        ; preds = %bb103, %.thread17, %bb104
  %v4_127ec = phi i32 [ %v1_127e4, %.thread17 ], [ %v1_127e4, %bb103 ], [ %v2_127e4, %bb104 ]
  %v5_127f0 = phi i32 [ %v1_127e0, %.thread17 ], [ %v4_127e0, %bb103 ], [ %v4_127e0, %bb104 ]
  %v2_127e8 = icmp ugt i32 %v5_127f0, 3
  %v7_127e8 = icmp eq i32 %v5_127f0, 4
  %v2_127ec = xor i1 %v7_127e8, true
  %v3_127ec = and i1 %v2_127e8, %v2_127ec
  br i1 %v3_127ec, label %bb105, label %bb106

bb105:                                            ; preds = %.thread18
  %v5_127ec = add nsw i32 %v4_127ec, 3
  br label %bb106

bb106:                                            ; preds = %.thread18, %bb105
  %v4_127f0 = phi i32 [ %v4_127ec, %.thread18 ], [ %v5_127ec, %bb105 ]
  %v2_127f0 = xor i1 %v2_127e8, true
  %v3_127f0 = or i1 %v7_127e8, %v2_127f0
  br i1 %v3_127f0, label %bb107, label %bb108

bb107:                                            ; preds = %bb106
  %v8_127f0 = udiv i32 %v5_127f0, 2
  %v9_127f0 = add i32 %v4_127f0, %v8_127f0
  br label %bb108

bb108:                                            ; preds = %bb106, %bb107
  %v1_127f4 = phi i32 [ %v4_127f0, %bb106 ], [ %v9_127f0, %bb107 ]
  %v6_127f4 = lshr i32 %v0_12720, %v1_127f4
  ret i32 %v6_127f4

dec_label_pc_127fc:                               ; preds = %bb82
  %v0_127fc = load i32, i32* @lr, align 4
  %v0_12800 = call i32 @function_129d4()
  store i32 0, i32* @r0, align 4
  call void @__pseudo_branch(i32 %v0_127fc)
  %v9_1280c = load i32, i32* @lr, align 4
  %v0_12810 = call i32 @function_12714()
  store i32 %v9_1280c, i32* @lr, align 4
  ret i32 %v0_12810

; uselistorder directives
  uselistorder i32 %v4_127f0, { 1, 0 }
  uselistorder i1 %v7_127e8, { 1, 0 }
  uselistorder i32 %v4_127e0, { 1, 0 }
  uselistorder i32 %v1_127e0, { 1, 0, 2, 3 }
  uselistorder i32 %v4_127d4, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_127d4, { 1, 0, 2, 3 }
  uselistorder i32 %v4_127c4, { 1, 0 }
  uselistorder i32 %v0_1279c, { 1, 0 }
  uselistorder i32 %v4_12790, { 1, 0 }
  uselistorder i32 %v1_12798, { 1, 2, 0 }
  uselistorder i32 %v4_12784, { 1, 0 }
  uselistorder i32 %v1_1278c, { 1, 2, 0 }
  uselistorder i32 %v4_12778, { 1, 0 }
  uselistorder i32 %v1_12780, { 1, 2, 0 }
  uselistorder i32 %v1_127a4, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_12774, { 1, 0 }
  uselistorder i32 %v1_127a0, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_12760, { 1, 0 }
  uselistorder i32 %v3_1275c, { 1, 0 }
  uselistorder i32 %v1_1275c, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_12760, { 1, 2, 0, 3 }
  uselistorder i32 %v4_1274c, { 1, 0 }
  uselistorder i32 %v4_12748, { 2, 1, 0 }
  uselistorder i32 %v1_1274c, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_12754.pr36, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %v0_12720, { 2, 5, 3, 1, 4, 0 }
  uselistorder i32 %v0_12714, { 6, 2, 7, 8, 9, 4, 3, 0, 5, 1, 10, 12, 11 }
  uselistorder i32 65535, { 100, 0, 1, 53, 12, 54, 24, 28, 55, 25, 56, 26, 57, 27, 58, 59, 13, 60, 2, 61, 62, 32, 63, 31, 64, 29, 65, 30, 66, 14, 15, 3, 67, 33, 68, 34, 69, 16, 17, 4, 70, 35, 71, 36, 72, 18, 73, 39, 74, 38, 75, 37, 76, 19, 20, 5, 41, 77, 40, 78, 79, 80, 21, 81, 82, 6, 44, 83, 42, 84, 43, 85, 86, 22, 87, 7, 8, 47, 88, 45, 89, 46, 90, 91, 23, 92, 9, 48, 93, 49, 94, 50, 95, 96, 10, 51, 97, 98, 11, 52, 99 }
  uselistorder label %bb108, { 1, 0 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %.thread18, { 2, 0, 1 }
  uselistorder label %.thread17, { 2, 0, 1 }
  uselistorder label %bb100, { 1, 0 }
  uselistorder label %dec_label_pc_127ac, { 1, 0 }
  uselistorder label %thread-pre-split, { 0, 2, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_12768, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12754thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
}

define i32 @function_12824(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12824:
  store i32 %arg1, i32* @r0, align 4
  %v1_12824 = add i32 %arg2, -1
  %v2_12824 = icmp eq i32 %arg2, 0
  br i1 %v2_12824, label %dec_label_pc_128e0, label %dec_label_pc_1282c

dec_label_pc_1282c:                               ; preds = %dec_label_pc_12824
  %v7_12824 = icmp eq i32 %arg2, 1
  br i1 %v7_12824, label %.thread65, label %bb

bb:                                               ; preds = %dec_label_pc_1282c
  %v1_1282c = load i32, i32* @r0, align 4
  %v10_1282c = icmp eq i32 %v1_1282c, %arg2
  br i1 %v10_1282c, label %.thread65, label %bb74

.thread65:                                        ; preds = %dec_label_pc_1282c, %bb
  br label %.thread67

bb74:                                             ; preds = %bb
  %v4_1282c = icmp ult i32 %v1_1282c, %arg2
  br i1 %v4_1282c, label %bb76, label %bb75

bb75:                                             ; preds = %bb74
  %v6_12834 = and i32 %v1_12824, %arg2
  %v8_12834 = icmp eq i32 %v6_12834, 0
  br i1 %v8_12834, label %.thread67, label %dec_label_pc_12844.preheader

.thread67:                                        ; preds = %bb75, %.thread65
  %v1_12838 = phi i32 [ %v1_1282c, %bb75 ], [ 0, %.thread65 ]
  %v3_12838 = and i32 %v1_12838, %v1_12824
  br label %bb76

dec_label_pc_12844.preheader:                     ; preds = %bb75
  %v2_1284499 = icmp ugt i32 %arg2, 268435455
  br i1 %v2_1284499, label %.thread, label %bb77

bb76:                                             ; preds = %dec_label_pc_128d4, %bb74, %bb89, %bb84, %dec_label_pc_128a4, %.thread67
  %v5_1283c = phi i32 [ %v1_1282c, %bb74 ], [ %v3_12838, %.thread67 ], [ %v1_12880.v6_12880.v6_12888.v6_12890, %dec_label_pc_128a4 ], [ 0, %bb84 ], [ %v1_128d8, %dec_label_pc_128d4 ], [ %v2_128d4, %bb89 ]
  ret i32 %v5_1283c

.thread:                                          ; preds = %.thread1.thread9, %dec_label_pc_12844.preheader
  %v0_12858.pr33.lcssa = phi i32 [ %arg2, %dec_label_pc_12844.preheader ], [ %v4_1284c, %.thread1.thread9 ]
  %storemerge.lcssa = phi i32 [ 0, %dec_label_pc_12844.preheader ], [ %v2_1285011, %.thread1.thread9 ]
  br label %dec_label_pc_12858thread-pre-split.loopexit

bb77:                                             ; preds = %dec_label_pc_12844.preheader, %.thread1.thread9
  %storemerge101 = phi i32 [ %v2_1285011, %.thread1.thread9 ], [ 0, %dec_label_pc_12844.preheader ]
  %v0_12858.pr33100 = phi i32 [ %v4_1284c, %.thread1.thread9 ], [ %arg2, %dec_label_pc_12844.preheader ]
  %v4_12848 = icmp ult i32 %v0_12858.pr33100, %v1_1282c
  br i1 %v4_12848, label %bb78, label %dec_label_pc_12858thread-pre-split.loopexit.loopexit

bb78:                                             ; preds = %bb77
  %v2_1284c = and i32 %v0_12858.pr33100, 268435456
  %v3_1284c = icmp eq i32 %v2_1284c, 0
  %v4_1284c = mul i32 %v0_12858.pr33100, 16
  br i1 %v3_1284c, label %.thread1.thread9, label %dec_label_pc_12858.loopexit

.thread1.thread9:                                 ; preds = %bb78
  %v2_1285011 = add i32 %storemerge101, 4
  %v2_12844 = icmp ugt i32 %v4_1284c, 268435455
  br i1 %v2_12844, label %.thread, label %bb77

dec_label_pc_12858thread-pre-split.loopexit.loopexit: ; preds = %bb77
  br label %dec_label_pc_12858thread-pre-split.loopexit

dec_label_pc_12858thread-pre-split.loopexit:      ; preds = %dec_label_pc_12858thread-pre-split.loopexit.loopexit, %.thread
  %v0_12858.pr3398 = phi i32 [ %v0_12858.pr33.lcssa, %.thread ], [ %v0_12858.pr33100, %dec_label_pc_12858thread-pre-split.loopexit.loopexit ]
  %storemerge95 = phi i32 [ %storemerge.lcssa, %.thread ], [ %storemerge101, %dec_label_pc_12858thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_12858thread-pre-split

dec_label_pc_12858thread-pre-split:               ; preds = %.thread4, %dec_label_pc_12858thread-pre-split.loopexit
  %v1_1286439 = phi i32 [ %storemerge95, %dec_label_pc_12858thread-pre-split.loopexit ], [ %v2_12864, %.thread4 ]
  %v0_12858.pr = phi i32 [ %v0_12858.pr3398, %dec_label_pc_12858thread-pre-split.loopexit ], [ %v3_12860, %.thread4 ]
  br label %dec_label_pc_12858

dec_label_pc_12858.loopexit:                      ; preds = %bb78
  br label %dec_label_pc_12858

dec_label_pc_12858:                               ; preds = %dec_label_pc_12858.loopexit, %dec_label_pc_12858thread-pre-split
  %v0_1286c.pr = phi i32 [ %v1_1286439, %dec_label_pc_12858thread-pre-split ], [ %storemerge101, %dec_label_pc_12858.loopexit ]
  %v1_12860 = phi i32 [ %v0_12858.pr, %dec_label_pc_12858thread-pre-split ], [ %v4_1284c, %dec_label_pc_12858.loopexit ]
  %v2_12858 = icmp slt i32 %v1_12860, 0
  br i1 %v2_12858, label %dec_label_pc_1286c, label %bb79

bb79:                                             ; preds = %dec_label_pc_12858
  %v4_1285c = icmp ult i32 %v1_12860, %v1_1282c
  br i1 %v4_1285c, label %.thread4, label %dec_label_pc_1286c

.thread4:                                         ; preds = %bb79
  %v3_12860 = mul i32 %v1_12860, 2
  %v2_12864 = add i32 %v0_1286c.pr, 1
  br label %dec_label_pc_12858thread-pre-split

dec_label_pc_1286c:                               ; preds = %bb79, %dec_label_pc_12858
  %v2_1286c = add i32 %v0_1286c.pr, -3
  %v5_12870 = icmp slt i32 %v0_1286c.pr, 3
  br i1 %v5_12870, label %dec_label_pc_128b0, label %dec_label_pc_12874

dec_label_pc_12874:                               ; preds = %dec_label_pc_1286c, %bb83
  %v6_1289c = phi i32 [ %v0_128a4, %bb83 ], [ %v2_1286c, %dec_label_pc_1286c ]
  %v1_12878 = phi i32 [ %v1_12880.v6_12880.v6_12888.v6_12890, %bb83 ], [ %v1_1282c, %dec_label_pc_1286c ]
  %v3_1289812 = phi i32 [ %v3_12898, %bb83 ], [ %v1_12860, %dec_label_pc_1286c ]
  %v3_12874 = icmp ult i32 %v1_12878, %v3_1289812
  %v3_12878 = select i1 %v3_12874, i32 0, i32 %v3_1289812
  %v1_12880 = sub i32 %v1_12878, %v3_12878
  %v4_1287c = udiv i32 %v3_1289812, 2
  %v6_1287c = icmp ult i32 %v1_12880, %v4_1287c
  %v6_12880 = select i1 %v6_1287c, i32 0, i32 %v4_1287c
  %v1_12880.v6_12880 = sub i32 %v1_12880, %v6_12880
  %.demorgan = and i1 %v3_12874, %v6_1287c
  %v4_12884 = udiv i32 %v3_1289812, 4
  %v6_12884 = icmp ult i32 %v1_12880.v6_12880, %v4_12884
  %v6_12888 = select i1 %v6_12884, i32 0, i32 %v4_12884
  %v1_12880.v6_12880.v6_12888 = sub i32 %v1_12880.v6_12880, %v6_12888
  %.demorgan71 = and i1 %.demorgan, %v6_12884
  %v4_1288c = udiv i32 %v3_1289812, 8
  %v6_1288c = icmp ult i32 %v1_12880.v6_12880.v6_12888, %v4_1288c
  %v6_12890 = select i1 %v6_1288c, i32 0, i32 %v4_1288c
  %v1_12880.v6_12880.v6_12888.v6_12890 = sub i32 %v1_12880.v6_12880.v6_12888, %v6_12890
  %.demorgan72 = and i1 %.demorgan71, %v6_1288c
  br i1 %.demorgan72, label %bb81, label %bb80

bb80:                                             ; preds = %dec_label_pc_12874
  br label %bb81

bb81:                                             ; preds = %dec_label_pc_12874, %bb80
  %v2_12894 = add i32 %v1_12880.v6_12880.v6_12888.v6_12890, -1
  %v4_12894 = sub i32 0, %v1_12880.v6_12880.v6_12888.v6_12890
  %v5_12894 = and i32 %v1_12880.v6_12880.v6_12888.v6_12890, %v4_12894
  %v3_12898 = udiv i32 %v3_1289812, 16
  %v5_1289c = icmp slt i32 %v1_12880.v6_12880.v6_12888.v6_12890, 1
  br i1 %v5_1289c, label %bb83, label %bb82

bb82:                                             ; preds = %bb81
  %v7_1289c = add i32 %v6_1289c, -4
  %v9_1289c = sub i32 3, %v6_1289c
  %v10_1289c = and i32 %v9_1289c, %v6_1289c
  br label %bb83

bb83:                                             ; preds = %bb81, %bb82
  %v0_128a4 = phi i32 [ %v6_1289c, %bb81 ], [ %v7_1289c, %bb82 ]
  %v0_128a015.in = phi i32 [ %v2_12894, %bb81 ], [ %v7_1289c, %bb82 ]
  %v1_128a014.in = phi i32 [ %v5_12894, %bb81 ], [ %v10_1289c, %bb82 ]
  %v1_128a014 = icmp slt i32 %v1_128a014.in, 0
  %v0_128a015 = icmp slt i32 %v0_128a015.in, 0
  %v2_128a0 = xor i1 %v0_128a015, %v1_128a014
  br i1 %v2_128a0, label %dec_label_pc_128a4, label %dec_label_pc_12874

dec_label_pc_128a4:                               ; preds = %bb83
  %v1_128a4 = urem i32 %v0_128a4, 4
  %v2_128a4 = icmp eq i32 %v1_128a4, 0
  br i1 %v2_128a4, label %bb76, label %bb84

bb84:                                             ; preds = %dec_label_pc_128a4
  %v3_128a8 = icmp eq i32 %v1_12880.v6_12880.v6_12888.v6_12890, 0
  br i1 %v3_128a8, label %bb76, label %dec_label_pc_128b0

dec_label_pc_128b0:                               ; preds = %bb84, %dec_label_pc_1286c
  %v0_128c4 = phi i32 [ %v3_12898, %bb84 ], [ %v1_12860, %dec_label_pc_1286c ]
  %v1_128c0 = phi i32 [ %v1_12880.v6_12880.v6_12888.v6_12890, %bb84 ], [ %v1_1282c, %dec_label_pc_1286c ]
  %v0_128b0 = phi i32 [ %v0_128a4, %bb84 ], [ %v2_1286c, %dec_label_pc_1286c ]
  %v5_128b4 = icmp slt i32 %v0_128b0, -2
  br i1 %v5_128b4, label %dec_label_pc_128d4, label %dec_label_pc_128b8

dec_label_pc_128b8:                               ; preds = %dec_label_pc_128b0
  %v8_128b0 = icmp eq i32 %v0_128b0, -2
  br i1 %v8_128b0, label %dec_label_pc_128c8, label %dec_label_pc_128bc

dec_label_pc_128bc:                               ; preds = %dec_label_pc_128b8
  %v3_128bc = icmp ult i32 %v1_128c0, %v0_128c4
  br i1 %v3_128bc, label %bb86, label %bb85

bb85:                                             ; preds = %dec_label_pc_128bc
  %v2_128bc = sub i32 %v1_128c0, %v0_128c4
  br label %bb86

bb86:                                             ; preds = %dec_label_pc_128bc, %bb85
  %v0_128c852 = phi i32 [ %v1_128c0, %dec_label_pc_128bc ], [ %v2_128bc, %bb85 ]
  %v3_128c4 = udiv i32 %v0_128c4, 2
  br label %dec_label_pc_128c8

dec_label_pc_128c8:                               ; preds = %dec_label_pc_128b8, %bb86
  %v0_128d0 = phi i32 [ %v0_128c4, %dec_label_pc_128b8 ], [ %v3_128c4, %bb86 ]
  %v1_128cc = phi i32 [ %v1_128c0, %dec_label_pc_128b8 ], [ %v0_128c852, %bb86 ]
  %v3_128c8 = icmp ult i32 %v1_128cc, %v0_128d0
  br i1 %v3_128c8, label %bb88, label %bb87

bb87:                                             ; preds = %dec_label_pc_128c8
  %v2_128c8 = sub i32 %v1_128cc, %v0_128d0
  br label %bb88

bb88:                                             ; preds = %dec_label_pc_128c8, %bb87
  %v0_128d455 = phi i32 [ %v1_128cc, %dec_label_pc_128c8 ], [ %v2_128c8, %bb87 ]
  %v3_128d0 = udiv i32 %v0_128d0, 2
  br label %dec_label_pc_128d4

dec_label_pc_128d4:                               ; preds = %dec_label_pc_128b0, %bb88
  %v2_128d8 = phi i32 [ %v0_128c4, %dec_label_pc_128b0 ], [ %v3_128d0, %bb88 ]
  %v1_128d8 = phi i32 [ %v1_128c0, %dec_label_pc_128b0 ], [ %v0_128d455, %bb88 ]
  %v3_128d4 = icmp ult i32 %v1_128d8, %v2_128d8
  br i1 %v3_128d4, label %bb76, label %bb89

bb89:                                             ; preds = %dec_label_pc_128d4
  %v2_128d4 = sub i32 %v1_128d8, %v2_128d8
  br label %bb76

dec_label_pc_128e0:                               ; preds = %dec_label_pc_12824
  %v0_128e0 = load i32, i32* @lr, align 4
  %v0_128e4 = call i32 @function_129d4()
  call void @__pseudo_branch(i32 %v0_128e0)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_128d8, { 1, 2, 0 }
  uselistorder i32 %v0_128c4, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_128a4, { 1, 0, 2 }
  uselistorder i32 %v7_1289c, { 1, 0 }
  uselistorder i32 %v3_12898, { 1, 0 }
  uselistorder i32 %v1_12880.v6_12880.v6_12888.v6_12890, { 1, 2, 7, 5, 6, 4, 0, 3 }
  uselistorder i32 %v4_1288c, { 1, 0 }
  uselistorder i32 %v4_12884, { 1, 0 }
  uselistorder i32 %v4_1287c, { 1, 0 }
  uselistorder i32 %v6_1289c, { 3, 0, 2, 1 }
  uselistorder i32 %v2_1286c, { 1, 0 }
  uselistorder i32 %v1_12860, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v4_1284c, { 1, 0, 3, 2 }
  uselistorder i32 %v0_12858.pr33100, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1282c, { 4, 1, 5, 3, 0, 2, 6, 7 }
  uselistorder i32 %arg2, { 7, 8, 6, 5, 3, 4, 0, 2, 1 }
  uselistorder label %dec_label_pc_128d4, { 1, 0 }
  uselistorder label %bb88, { 1, 0 }
  uselistorder label %dec_label_pc_128c8, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
  uselistorder label %bb83, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %dec_label_pc_12874, { 1, 0 }
  uselistorder label %bb77, { 1, 0 }
  uselistorder label %bb76, { 2, 0, 3, 4, 5, 1 }
  uselistorder label %.thread65, { 1, 0 }
}

define i32 @function_128f0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_128f0:
  store i32 %arg1, i32* @r0, align 4
  %v2_128f0 = icmp eq i32 %arg2, 0
  br i1 %v2_128f0, label %dec_label_pc_129c4, label %dec_label_pc_128f8

dec_label_pc_128f8:                               ; preds = %dec_label_pc_128f0
  %v1_128f0 = icmp slt i32 %arg2, 0
  br i1 %v1_128f0, label %bb, label %bb79

bb:                                               ; preds = %dec_label_pc_128f8
  %v2_128f8 = sub i32 0, %arg2
  br label %bb79

bb79:                                             ; preds = %dec_label_pc_128f8, %bb
  %v4_12910 = phi i32 [ %arg2, %dec_label_pc_128f8 ], [ %v2_128f8, %bb ]
  %v0_128fc = load i32, i32* @r0, align 4
  %v1_128fc = icmp slt i32 %v0_128fc, 0
  br i1 %v1_128fc, label %bb80, label %bb81

bb80:                                             ; preds = %bb79
  %v2_12900 = sub i32 0, %v0_128fc
  br label %bb81

bb81:                                             ; preds = %bb79, %bb80
  %v1_12908 = phi i32 [ %v0_128fc, %bb79 ], [ %v2_12900, %bb80 ]
  %v1_12904 = add i32 %v4_12910, -1
  %v7_12904 = icmp eq i32 %v4_12910, 1
  br i1 %v7_12904, label %.thread70, label %bb82

bb82:                                             ; preds = %bb81
  %v10_12908 = icmp eq i32 %v1_12908, %v4_12910
  br i1 %v10_12908, label %.thread70, label %bb83

.thread70:                                        ; preds = %bb81, %bb82
  br label %.thread72

bb83:                                             ; preds = %bb82
  %v4_12908 = icmp ult i32 %v1_12908, %v4_12910
  br i1 %v4_12908, label %.thread6, label %bb84

bb84:                                             ; preds = %bb83
  %v6_12910 = and i32 %v1_12904, %v4_12910
  %v8_12910 = icmp eq i32 %v6_12910, 0
  br i1 %v8_12910, label %.thread72, label %dec_label_pc_12920.preheader

dec_label_pc_12920.preheader:                     ; preds = %bb84
  %v2_12920109 = icmp ugt i32 %v4_12910, 268435455
  br i1 %v2_12920109, label %.thread1, label %bb85

.thread72:                                        ; preds = %bb84, %.thread70
  %v1_1291464 = phi i32 [ %v1_12908, %bb84 ], [ 0, %.thread70 ]
  %v3_12914 = and i32 %v1_1291464, %v1_12904
  br label %.thread6

.thread1:                                         ; preds = %.thread2.thread7, %dec_label_pc_12920.preheader
  %v0_12934.pr35.lcssa = phi i32 [ %v4_12910, %dec_label_pc_12920.preheader ], [ %v4_12928, %.thread2.thread7 ]
  %storemerge.lcssa = phi i32 [ 0, %dec_label_pc_12920.preheader ], [ %v2_1292c9, %.thread2.thread7 ]
  br label %dec_label_pc_12934thread-pre-split.loopexit

bb85:                                             ; preds = %dec_label_pc_12920.preheader, %.thread2.thread7
  %storemerge111 = phi i32 [ %v2_1292c9, %.thread2.thread7 ], [ 0, %dec_label_pc_12920.preheader ]
  %v0_12934.pr35110 = phi i32 [ %v4_12928, %.thread2.thread7 ], [ %v4_12910, %dec_label_pc_12920.preheader ]
  %v4_12924 = icmp ult i32 %v0_12934.pr35110, %v1_12908
  br i1 %v4_12924, label %bb86, label %dec_label_pc_12934thread-pre-split.loopexit.loopexit

bb86:                                             ; preds = %bb85
  %v2_12928 = and i32 %v0_12934.pr35110, 268435456
  %v3_12928 = icmp eq i32 %v2_12928, 0
  %v4_12928 = mul i32 %v0_12934.pr35110, 16
  br i1 %v3_12928, label %.thread2.thread7, label %dec_label_pc_12934.loopexit

.thread2.thread7:                                 ; preds = %bb86
  %v2_1292c9 = add i32 %storemerge111, 4
  %v2_12920 = icmp ugt i32 %v4_12928, 268435455
  br i1 %v2_12920, label %.thread1, label %bb85

dec_label_pc_12934thread-pre-split.loopexit.loopexit: ; preds = %bb85
  br label %dec_label_pc_12934thread-pre-split.loopexit

dec_label_pc_12934thread-pre-split.loopexit:      ; preds = %dec_label_pc_12934thread-pre-split.loopexit.loopexit, %.thread1
  %v0_12934.pr35108 = phi i32 [ %v0_12934.pr35.lcssa, %.thread1 ], [ %v0_12934.pr35110, %dec_label_pc_12934thread-pre-split.loopexit.loopexit ]
  %storemerge105 = phi i32 [ %storemerge.lcssa, %.thread1 ], [ %storemerge111, %dec_label_pc_12934thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_12934thread-pre-split

dec_label_pc_12934thread-pre-split:               ; preds = %.thread4, %dec_label_pc_12934thread-pre-split.loopexit
  %v1_1294041 = phi i32 [ %storemerge105, %dec_label_pc_12934thread-pre-split.loopexit ], [ %v2_12940, %.thread4 ]
  %v2_1293836 = phi i32 [ %v1_12908, %dec_label_pc_12934thread-pre-split.loopexit ], [ %v2_12938, %.thread4 ]
  %v0_12934.pr = phi i32 [ %v0_12934.pr35108, %dec_label_pc_12934thread-pre-split.loopexit ], [ %v3_1293c, %.thread4 ]
  br label %dec_label_pc_12934

dec_label_pc_12934.loopexit:                      ; preds = %bb86
  br label %dec_label_pc_12934

dec_label_pc_12934:                               ; preds = %dec_label_pc_12934.loopexit, %dec_label_pc_12934thread-pre-split
  %v0_12948.pr = phi i32 [ %v1_1294041, %dec_label_pc_12934thread-pre-split ], [ %storemerge111, %dec_label_pc_12934.loopexit ]
  %v2_12938 = phi i32 [ %v2_1293836, %dec_label_pc_12934thread-pre-split ], [ %v1_12908, %dec_label_pc_12934.loopexit ]
  %v1_1293c = phi i32 [ %v0_12934.pr, %dec_label_pc_12934thread-pre-split ], [ %v4_12928, %dec_label_pc_12934.loopexit ]
  %v2_12934 = icmp slt i32 %v1_1293c, 0
  br i1 %v2_12934, label %dec_label_pc_12948, label %bb87

bb87:                                             ; preds = %dec_label_pc_12934
  %v4_12938 = icmp ult i32 %v1_1293c, %v2_12938
  br i1 %v4_12938, label %.thread4, label %dec_label_pc_12948

.thread4:                                         ; preds = %bb87
  %v3_1293c = mul i32 %v1_1293c, 2
  %v2_12940 = add i32 %v0_12948.pr, 1
  br label %dec_label_pc_12934thread-pre-split

dec_label_pc_12948:                               ; preds = %bb87, %dec_label_pc_12934
  %v2_12948 = add i32 %v0_12948.pr, -3
  %v5_1294c = icmp slt i32 %v0_12948.pr, 3
  br i1 %v5_1294c, label %dec_label_pc_1298c, label %dec_label_pc_12950

dec_label_pc_12950:                               ; preds = %dec_label_pc_12948, %bb91
  %v6_12978 = phi i32 [ %v0_12980, %bb91 ], [ %v2_12948, %dec_label_pc_12948 ]
  %v1_12954 = phi i32 [ %v1_1295c.v6_1295c.v6_12964.v6_1296c, %bb91 ], [ %v2_12938, %dec_label_pc_12948 ]
  %v3_1297410 = phi i32 [ %v3_12974, %bb91 ], [ %v1_1293c, %dec_label_pc_12948 ]
  %v3_12950 = icmp ult i32 %v1_12954, %v3_1297410
  %v3_12954 = select i1 %v3_12950, i32 0, i32 %v3_1297410
  %v1_1295c = sub i32 %v1_12954, %v3_12954
  %v4_12958 = udiv i32 %v3_1297410, 2
  %v6_12958 = icmp ult i32 %v1_1295c, %v4_12958
  %v6_1295c = select i1 %v6_12958, i32 0, i32 %v4_12958
  %v1_1295c.v6_1295c = sub i32 %v1_1295c, %v6_1295c
  %.demorgan = and i1 %v3_12950, %v6_12958
  %v4_12960 = udiv i32 %v3_1297410, 4
  %v6_12960 = icmp ult i32 %v1_1295c.v6_1295c, %v4_12960
  %v6_12964 = select i1 %v6_12960, i32 0, i32 %v4_12960
  %v1_1295c.v6_1295c.v6_12964 = sub i32 %v1_1295c.v6_1295c, %v6_12964
  %.demorgan76 = and i1 %.demorgan, %v6_12960
  %v4_12968 = udiv i32 %v3_1297410, 8
  %v6_12968 = icmp ult i32 %v1_1295c.v6_1295c.v6_12964, %v4_12968
  %v6_1296c = select i1 %v6_12968, i32 0, i32 %v4_12968
  %v1_1295c.v6_1295c.v6_12964.v6_1296c = sub i32 %v1_1295c.v6_1295c.v6_12964, %v6_1296c
  %.demorgan77 = and i1 %.demorgan76, %v6_12968
  br i1 %.demorgan77, label %bb89, label %bb88

bb88:                                             ; preds = %dec_label_pc_12950
  br label %bb89

bb89:                                             ; preds = %dec_label_pc_12950, %bb88
  %v2_12970 = add i32 %v1_1295c.v6_1295c.v6_12964.v6_1296c, -1
  %v4_12970 = sub i32 0, %v1_1295c.v6_1295c.v6_12964.v6_1296c
  %v5_12970 = and i32 %v1_1295c.v6_1295c.v6_12964.v6_1296c, %v4_12970
  %v3_12974 = udiv i32 %v3_1297410, 16
  %v5_12978 = icmp slt i32 %v1_1295c.v6_1295c.v6_12964.v6_1296c, 1
  br i1 %v5_12978, label %bb91, label %bb90

bb90:                                             ; preds = %bb89
  %v7_12978 = add i32 %v6_12978, -4
  %v9_12978 = sub i32 3, %v6_12978
  %v10_12978 = and i32 %v9_12978, %v6_12978
  br label %bb91

bb91:                                             ; preds = %bb89, %bb90
  %v0_12980 = phi i32 [ %v6_12978, %bb89 ], [ %v7_12978, %bb90 ]
  %v0_1297c13.in = phi i32 [ %v2_12970, %bb89 ], [ %v7_12978, %bb90 ]
  %v1_1297c12.in = phi i32 [ %v5_12970, %bb89 ], [ %v10_12978, %bb90 ]
  %v1_1297c12 = icmp slt i32 %v1_1297c12.in, 0
  %v0_1297c13 = icmp slt i32 %v0_1297c13.in, 0
  %v2_1297c = xor i1 %v0_1297c13, %v1_1297c12
  br i1 %v2_1297c, label %dec_label_pc_12980, label %dec_label_pc_12950

dec_label_pc_12980:                               ; preds = %bb91
  %v1_12980 = urem i32 %v0_12980, 4
  %v2_12980 = icmp eq i32 %v1_12980, 0
  br i1 %v2_12980, label %.thread6, label %bb92

bb92:                                             ; preds = %dec_label_pc_12980
  %v3_12984 = icmp eq i32 %v1_1295c.v6_1295c.v6_12964.v6_1296c, 0
  br i1 %v3_12984, label %.thread6, label %dec_label_pc_1298c

dec_label_pc_1298c:                               ; preds = %bb92, %dec_label_pc_12948
  %v0_129a0 = phi i32 [ %v3_12974, %bb92 ], [ %v1_1293c, %dec_label_pc_12948 ]
  %v1_1299c = phi i32 [ %v1_1295c.v6_1295c.v6_12964.v6_1296c, %bb92 ], [ %v2_12938, %dec_label_pc_12948 ]
  %v0_1298c = phi i32 [ %v0_12980, %bb92 ], [ %v2_12948, %dec_label_pc_12948 ]
  %v5_12990 = icmp slt i32 %v0_1298c, -2
  br i1 %v5_12990, label %dec_label_pc_129b0, label %dec_label_pc_12994

dec_label_pc_12994:                               ; preds = %dec_label_pc_1298c
  %v8_1298c = icmp eq i32 %v0_1298c, -2
  br i1 %v8_1298c, label %dec_label_pc_129a4, label %dec_label_pc_12998

dec_label_pc_12998:                               ; preds = %dec_label_pc_12994
  %v3_12998 = icmp ult i32 %v1_1299c, %v0_129a0
  br i1 %v3_12998, label %bb94, label %bb93

bb93:                                             ; preds = %dec_label_pc_12998
  %v2_12998 = sub i32 %v1_1299c, %v0_129a0
  br label %bb94

bb94:                                             ; preds = %dec_label_pc_12998, %bb93
  %v0_129a454 = phi i32 [ %v1_1299c, %dec_label_pc_12998 ], [ %v2_12998, %bb93 ]
  %v3_129a0 = udiv i32 %v0_129a0, 2
  br label %dec_label_pc_129a4

dec_label_pc_129a4:                               ; preds = %dec_label_pc_12994, %bb94
  %v0_129ac = phi i32 [ %v0_129a0, %dec_label_pc_12994 ], [ %v3_129a0, %bb94 ]
  %v1_129a8 = phi i32 [ %v1_1299c, %dec_label_pc_12994 ], [ %v0_129a454, %bb94 ]
  %v3_129a4 = icmp ult i32 %v1_129a8, %v0_129ac
  br i1 %v3_129a4, label %bb96, label %bb95

bb95:                                             ; preds = %dec_label_pc_129a4
  %v2_129a4 = sub i32 %v1_129a8, %v0_129ac
  br label %bb96

bb96:                                             ; preds = %dec_label_pc_129a4, %bb95
  %v0_129b057 = phi i32 [ %v1_129a8, %dec_label_pc_129a4 ], [ %v2_129a4, %bb95 ]
  %v3_129ac = udiv i32 %v0_129ac, 2
  br label %dec_label_pc_129b0

dec_label_pc_129b0:                               ; preds = %dec_label_pc_1298c, %bb96
  %v2_129b4 = phi i32 [ %v0_129a0, %dec_label_pc_1298c ], [ %v3_129ac, %bb96 ]
  %v1_129b4 = phi i32 [ %v1_1299c, %dec_label_pc_1298c ], [ %v0_129b057, %bb96 ]
  %v3_129b0 = icmp ult i32 %v1_129b4, %v2_129b4
  br i1 %v3_129b0, label %.thread6, label %bb97

bb97:                                             ; preds = %dec_label_pc_129b0
  %v2_129b0 = sub i32 %v1_129b4, %v2_129b4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_129b0, %bb83, %.thread72, %dec_label_pc_12980, %bb92, %bb97
  %v1_129bc = phi i32 [ %v1_1295c.v6_1295c.v6_12964.v6_1296c, %dec_label_pc_12980 ], [ 0, %bb92 ], [ %v1_129b4, %dec_label_pc_129b0 ], [ %v2_129b0, %bb97 ], [ %v3_12914, %.thread72 ], [ %v1_12908, %bb83 ]
  br i1 %v1_128fc, label %bb98, label %bb99

bb98:                                             ; preds = %.thread6
  %v2_129bc = sub i32 0, %v1_129bc
  br label %bb99

bb99:                                             ; preds = %.thread6, %bb98
  %v1_129c0 = phi i32 [ %v1_129bc, %.thread6 ], [ %v2_129bc, %bb98 ]
  ret i32 %v1_129c0

dec_label_pc_129c4:                               ; preds = %dec_label_pc_128f0
  %v0_129c4 = load i32, i32* @lr, align 4
  %v0_129c8 = call i32 @function_129d4()
  call void @__pseudo_branch(i32 %v0_129c4)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_129a0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_12980, { 1, 0, 2 }
  uselistorder i32 %v7_12978, { 1, 0 }
  uselistorder i32 %v3_12974, { 1, 0 }
  uselistorder i32 %v1_1295c.v6_1295c.v6_12964.v6_1296c, { 0, 1, 2, 7, 5, 6, 4, 3 }
  uselistorder i32 %v4_12968, { 1, 0 }
  uselistorder i32 %v4_12960, { 1, 0 }
  uselistorder i32 %v4_12958, { 1, 0 }
  uselistorder i32 %v6_12978, { 3, 0, 2, 1 }
  uselistorder i32 %v2_12948, { 1, 0 }
  uselistorder i32 %v1_1293c, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v2_12938, { 1, 0, 3, 2 }
  uselistorder i32 %v4_12928, { 1, 0, 3, 2 }
  uselistorder i32 %v0_12934.pr35110, { 1, 0, 2, 3 }
  uselistorder i32 %v1_12908, { 0, 2, 3, 1, 4, 6, 5 }
  uselistorder i32 %v4_12910, { 1, 0, 2, 3, 5, 4, 6, 7 }
  uselistorder i32 ()* @function_129d4, { 2, 1, 0 }
  uselistorder i32 268435455, { 2, 0, 3, 1, 4 }
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
  uselistorder label %bb99, { 1, 0 }
  uselistorder label %.thread6, { 5, 0, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_129b0, { 1, 0 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %dec_label_pc_129a4, { 1, 0 }
  uselistorder label %bb94, { 1, 0 }
  uselistorder label %bb91, { 1, 0 }
  uselistorder label %bb89, { 1, 0 }
  uselistorder label %dec_label_pc_12950, { 1, 0 }
  uselistorder label %bb85, { 1, 0 }
  uselistorder label %.thread70, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
}

define i32 @function_129d4() local_unnamed_addr {
dec_label_pc_129d4:
  %v1_129d4 = load i32, i32* @r0, align 4
  ret i32 %v1_129d4
}

define i32 @function_129d8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_129d8:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %v6_129d8 = load i32, i32* @r2, align 4
  %v1_129e8 = add i32 %arg2, -12
  store i32 %v6_129d8, i32* @r3, align 4
  %tmp = icmp ugt i32 %v1_129e8, 2
  br i1 %tmp, label %dec_label_pc_12a10, label %dec_label_pc_12a08

dec_label_pc_12a08:                               ; preds = %dec_label_pc_129d8
  %v0_12a08 = call i32 @function_12a4c()
  br label %dec_label_pc_12a3c

dec_label_pc_12a10:                               ; preds = %dec_label_pc_129d8
  %v2_12a18 = call i32 (i32, i32, ...) @fcntl(i32 %arg1, i32 %arg2)
  store i32 %v2_12a18, i32* %r4.global-to-local, align 4
  %tmp8 = icmp ult i32 %v2_12a18, -4095
  br i1 %tmp8, label %dec_label_pc_12a3c, label %dec_label_pc_12a28

dec_label_pc_12a28:                               ; preds = %dec_label_pc_12a10
  %v0_12a28 = call i32 @function_13070()
  %v0_12a2c = load i32, i32* %r4.global-to-local, align 4
  %v1_12a2c = sub i32 0, %v0_12a2c
  %v2_12a30 = inttoptr i32 %v0_12a28 to i32*
  store i32 %v1_12a2c, i32* %v2_12a30, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12a3c

dec_label_pc_12a3c:                               ; preds = %dec_label_pc_12a28, %dec_label_pc_12a10, %dec_label_pc_12a08
  %storemerge = phi i32 [ %v0_12a08, %dec_label_pc_12a08 ], [ %v2_12a18, %dec_label_pc_12a10 ], [ -1, %dec_label_pc_12a28 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_12a18, { 1, 0, 2 }
}

define i32 @function_12a4c() local_unnamed_addr {
dec_label_pc_12a4c:
  %r4.global-to-local = alloca i32, align 4
  %v0_12a6c = load i32, i32* @r0, align 4
  store i32 %v0_12a6c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12a6c, -4095
  br i1 %tmp, label %dec_label_pc_12a88, label %dec_label_pc_12a78

dec_label_pc_12a78:                               ; preds = %dec_label_pc_12a4c
  %v0_12a78 = call i32 @function_13070()
  %v0_12a7c = load i32, i32* %r4.global-to-local, align 4
  %v1_12a7c = sub i32 0, %v0_12a7c
  %v2_12a80 = inttoptr i32 %v0_12a78 to i32*
  store i32 %v1_12a7c, i32* %v2_12a80, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12a88

dec_label_pc_12a88:                               ; preds = %dec_label_pc_12a4c, %dec_label_pc_12a78
  %v0_12a88 = phi i32 [ %v0_12a6c, %dec_label_pc_12a4c ], [ -1, %dec_label_pc_12a78 ]
  ret i32 %v0_12a88

; uselistorder directives
  uselistorder i32 %v0_12a6c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12a88, { 1, 0 }
}

define i32 @function_12a9c(i32 %arg1) local_unnamed_addr {
dec_label_pc_12a9c:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12a9c = load i32, i32* @r4, align 4
  store i32 %v3_12a9c, i32* %stack_var_-8, align 4
  %v1_12aa0 = call i32 @close(i32 %arg1)
  store i32 %v1_12aa0, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v1_12aa0, -4095
  br i1 %tmp, label %dec_label_pc_12ac0, label %dec_label_pc_12ab0

dec_label_pc_12ab0:                               ; preds = %dec_label_pc_12a9c
  %v0_12ab0 = call i32 @function_13070()
  %v0_12ab4 = load i32, i32* %r4.global-to-local, align 4
  %v1_12ab4 = sub i32 0, %v0_12ab4
  %v2_12ab8 = inttoptr i32 %v0_12ab0 to i32*
  store i32 %v1_12ab4, i32* %v2_12ab8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12ac0

dec_label_pc_12ac0:                               ; preds = %dec_label_pc_12a9c, %dec_label_pc_12ab0
  %v0_12ac0 = phi i32 [ %v1_12aa0, %dec_label_pc_12a9c ], [ -1, %dec_label_pc_12ab0 ]
  %v2_12ac4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12ac4, i32* @r4, align 4
  ret i32 %v0_12ac0

; uselistorder directives
  uselistorder i32 %v1_12aa0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12ac0, { 1, 0 }
}

define i32 @function_12ac8() local_unnamed_addr {
dec_label_pc_12ac8:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12ac8 = load i32, i32* @r4, align 4
  store i32 %v3_12ac8, i32* %stack_var_-8, align 4
  %v0_12acc = call i32 @fork()
  store i32 %v0_12acc, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12acc, -4095
  br i1 %tmp, label %dec_label_pc_12aec, label %dec_label_pc_12adc

dec_label_pc_12adc:                               ; preds = %dec_label_pc_12ac8
  %v0_12adc = call i32 @function_13070()
  %v0_12ae0 = load i32, i32* %r4.global-to-local, align 4
  %v1_12ae0 = sub i32 0, %v0_12ae0
  %v2_12ae4 = inttoptr i32 %v0_12adc to i32*
  store i32 %v1_12ae0, i32* %v2_12ae4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12aec

dec_label_pc_12aec:                               ; preds = %dec_label_pc_12ac8, %dec_label_pc_12adc
  %v0_12aec = phi i32 [ %v0_12acc, %dec_label_pc_12ac8 ], [ -1, %dec_label_pc_12adc ]
  %v2_12af0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12af0, i32* @r4, align 4
  ret i32 %v0_12aec

; uselistorder directives
  uselistorder i32 %v0_12acc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12aec, { 1, 0 }
}

define i32 @function_12af4() local_unnamed_addr {
dec_label_pc_12af4:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12af4 = load i32, i32* @r4, align 4
  store i32 %v3_12af4, i32* %stack_var_-8, align 4
  %v0_12af8 = call i32 @getpid()
  store i32 %v0_12af8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12af8, -4095
  br i1 %tmp, label %dec_label_pc_12b18, label %dec_label_pc_12b08

dec_label_pc_12b08:                               ; preds = %dec_label_pc_12af4
  %v0_12b08 = call i32 @function_13070()
  %v0_12b0c = load i32, i32* %r4.global-to-local, align 4
  %v1_12b0c = sub i32 0, %v0_12b0c
  %v2_12b10 = inttoptr i32 %v0_12b08 to i32*
  store i32 %v1_12b0c, i32* %v2_12b10, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12b18

dec_label_pc_12b18:                               ; preds = %dec_label_pc_12af4, %dec_label_pc_12b08
  %v0_12b18 = phi i32 [ %v0_12af8, %dec_label_pc_12af4 ], [ -1, %dec_label_pc_12b08 ]
  %v2_12b1c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12b1c, i32* @r4, align 4
  ret i32 %v0_12b18

; uselistorder directives
  uselistorder i32 %v0_12af8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12b18, { 1, 0 }
}

define i32 @function_12b20() local_unnamed_addr {
dec_label_pc_12b20:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12b20 = load i32, i32* @r4, align 4
  store i32 %v3_12b20, i32* %stack_var_-8, align 4
  %v0_12b24 = call i32 @getppid()
  store i32 %v0_12b24, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12b24, -4095
  br i1 %tmp, label %dec_label_pc_12b44, label %dec_label_pc_12b34

dec_label_pc_12b34:                               ; preds = %dec_label_pc_12b20
  %v0_12b34 = call i32 @function_13070()
  %v0_12b38 = load i32, i32* %r4.global-to-local, align 4
  %v1_12b38 = sub i32 0, %v0_12b38
  %v2_12b3c = inttoptr i32 %v0_12b34 to i32*
  store i32 %v1_12b38, i32* %v2_12b3c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12b44

dec_label_pc_12b44:                               ; preds = %dec_label_pc_12b20, %dec_label_pc_12b34
  %v0_12b44 = phi i32 [ %v0_12b24, %dec_label_pc_12b20 ], [ -1, %dec_label_pc_12b34 ]
  %v2_12b48 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12b48, i32* @r4, align 4
  ret i32 %v0_12b44

; uselistorder directives
  uselistorder i32 %v0_12b24, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12b44, { 1, 0 }
}

define i32 @function_12b4c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12b4c:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v9_12b4c = load i32, i32* @r3, align 4
  store i32 %v9_12b4c, i32* %stack_var_-4, align 4
  %v2_12b58 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_12b58, i32* @r3, align 4
  %v2_12b68 = call i32 (i32, i32, ...) @ioctl(i32 %arg1, i32 %arg2)
  store i32 %v2_12b68, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_12b68, -4095
  br i1 %tmp, label %dec_label_pc_12b88, label %dec_label_pc_12b78

dec_label_pc_12b78:                               ; preds = %dec_label_pc_12b4c
  %v0_12b78 = call i32 @function_13070()
  %v0_12b7c = load i32, i32* %r4.global-to-local, align 4
  %v1_12b7c = sub i32 0, %v0_12b7c
  store i32 %v1_12b7c, i32* @r3, align 4
  %v2_12b80 = inttoptr i32 %v0_12b78 to i32*
  store i32 %v1_12b7c, i32* %v2_12b80, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12b88

dec_label_pc_12b88:                               ; preds = %dec_label_pc_12b4c, %dec_label_pc_12b78
  %v0_12b88 = phi i32 [ %v2_12b68, %dec_label_pc_12b4c ], [ -1, %dec_label_pc_12b78 ]
  ret i32 %v0_12b88

; uselistorder directives
  uselistorder i32 %v2_12b68, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_12b88, { 1, 0 }
}

define i32 @function_12b9c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12b9c:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12b9c = load i32, i32* @r4, align 4
  store i32 %v3_12b9c, i32* %stack_var_-8, align 4
  %v2_12ba0 = call i32 @kill(i32 %arg1, i32 %arg2)
  store i32 %v2_12ba0, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_12ba0, -4095
  br i1 %tmp, label %dec_label_pc_12bc0, label %dec_label_pc_12bb0

dec_label_pc_12bb0:                               ; preds = %dec_label_pc_12b9c
  %v0_12bb0 = call i32 @function_13070()
  %v0_12bb4 = load i32, i32* %r4.global-to-local, align 4
  %v1_12bb4 = sub i32 0, %v0_12bb4
  %v2_12bb8 = inttoptr i32 %v0_12bb0 to i32*
  store i32 %v1_12bb4, i32* %v2_12bb8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12bc0

dec_label_pc_12bc0:                               ; preds = %dec_label_pc_12b9c, %dec_label_pc_12bb0
  %v0_12bc0 = phi i32 [ %v2_12ba0, %dec_label_pc_12b9c ], [ -1, %dec_label_pc_12bb0 ]
  %v2_12bc4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12bc4, i32* @r4, align 4
  ret i32 %v0_12bc0

; uselistorder directives
  uselistorder i32 %v2_12ba0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12bc0, { 1, 0 }
}

define i32 @function_12bc8(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12bc8:
  %r4.global-to-local = alloca i32, align 4
  %v6_12bc8 = load i32, i32* @r2, align 4
  %v1_12bd8 = and i32 %arg2, 64
  store i32 %v1_12bd8, i32* @r3, align 4
  %v2_12bd8 = icmp eq i32 %v1_12bd8, 0
  br i1 %v2_12bd8, label %.thread1, label %bb

bb:                                               ; preds = %dec_label_pc_12bc8
  store i32 %v6_12bc8, i32* @r3, align 4
  %phitmp = urem i32 %v6_12bc8, 65536
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_12bc8, %bb
  %v0_12be8 = phi i32 [ 0, %dec_label_pc_12bc8 ], [ %phitmp, %bb ]
  store i32 %v0_12be8, i32* @r2, align 4
  %v4_12bf0 = call i32 (i8*, i32, ...) @open(i8* %arg1, i32 %arg2)
  %v7_12bf4 = icmp eq i32 %v4_12bf0, -4096
  store i1 %v7_12bf4, i1* @cpsr_z, align 1
  store i32 %v4_12bf0, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_12bf0, -4095
  br i1 %tmp, label %dec_label_pc_12c10, label %dec_label_pc_12c00

dec_label_pc_12c00:                               ; preds = %.thread1
  %v0_12c00 = call i32 @function_13070()
  %v0_12c04 = load i32, i32* %r4.global-to-local, align 4
  %v1_12c04 = sub i32 0, %v0_12c04
  store i32 %v1_12c04, i32* @r3, align 4
  %v2_12c08 = inttoptr i32 %v0_12c00 to i32*
  store i32 %v1_12c04, i32* %v2_12c08, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12c10

dec_label_pc_12c10:                               ; preds = %.thread1, %dec_label_pc_12c00
  %v0_12c10 = phi i32 [ %v4_12bf0, %.thread1 ], [ -1, %dec_label_pc_12c00 ]
  ret i32 %v0_12c10

; uselistorder directives
  uselistorder i32 %v4_12bf0, { 2, 0, 3, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_12c10, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_12c24(i32 %arg1) local_unnamed_addr {
dec_label_pc_12c24:
  store i32 %arg1, i32* @r2, align 4
  %v0_12c2c = load i32, i32* @r0, align 4
  %v2_12c2c = inttoptr i32 %v0_12c2c to i8*
  %v3_12c2c = call i32 @function_12bc8(i8* %v2_12c2c, i32 577)
  %v0_12c30 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12c30, label %bb, label %bb2

bb:                                               ; preds = %dec_label_pc_12c24
  %v6_12c30 = and i32 %v3_12c2c, 36
  br label %bb2

bb2:                                              ; preds = %dec_label_pc_12c24, %bb
  %v7_12c30 = phi i32 [ %v3_12c2c, %dec_label_pc_12c24 ], [ %v6_12c30, %bb ]
  ret i32 %v7_12c30

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @function_12c34(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12c34:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12c34 = load i32, i32* @r4, align 4
  store i32 %v3_12c34, i32* %stack_var_-8, align 4
  %v2_12c3c = load i32, i32* @r2, align 4
  %v3_12c3c = load i32, i32* @r3, align 4
  %v4_12c3c = call i32 @prctl(i32 %arg1, i32 %arg2, i32 %v2_12c3c, i32 %v3_12c3c, i32 0)
  store i32 %v4_12c3c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_12c3c, -4095
  br i1 %tmp, label %dec_label_pc_12c5c, label %dec_label_pc_12c4c

dec_label_pc_12c4c:                               ; preds = %dec_label_pc_12c34
  %v0_12c4c = call i32 @function_13070()
  %v0_12c50 = load i32, i32* %r4.global-to-local, align 4
  %v1_12c50 = sub i32 0, %v0_12c50
  %v2_12c54 = inttoptr i32 %v0_12c4c to i32*
  store i32 %v1_12c50, i32* %v2_12c54, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12c5c

dec_label_pc_12c5c:                               ; preds = %dec_label_pc_12c34, %dec_label_pc_12c4c
  %v0_12c5c = phi i32 [ %v4_12c3c, %dec_label_pc_12c34 ], [ -1, %dec_label_pc_12c4c ]
  %v2_12c60 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12c60, i32* @r4, align 4
  ret i32 %v0_12c5c

; uselistorder directives
  uselistorder i32 %v4_12c3c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12c5c, { 1, 0 }
}

define i32 @function_12c64(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12c64:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12c64 = load i32, i32* @r4, align 4
  store i32 %v3_12c64, i32* %stack_var_-8, align 4
  %v4_12c68 = call i32 @read(i32 %arg1, i32* %arg2, i32 %arg3)
  store i32 %v4_12c68, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_12c68, -4095
  br i1 %tmp, label %dec_label_pc_12c88, label %dec_label_pc_12c78

dec_label_pc_12c78:                               ; preds = %dec_label_pc_12c64
  %v0_12c78 = call i32 @function_13070()
  %v0_12c7c = load i32, i32* %r4.global-to-local, align 4
  %v1_12c7c = sub i32 0, %v0_12c7c
  %v2_12c80 = inttoptr i32 %v0_12c78 to i32*
  store i32 %v1_12c7c, i32* %v2_12c80, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12c88

dec_label_pc_12c88:                               ; preds = %dec_label_pc_12c64, %dec_label_pc_12c78
  %v0_12c88 = phi i32 [ %v4_12c68, %dec_label_pc_12c64 ], [ -1, %dec_label_pc_12c78 ]
  %v2_12c8c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12c8c, i32* @r4, align 4
  ret i32 %v0_12c88

; uselistorder directives
  uselistorder i32 %v4_12c68, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12c88, { 1, 0 }
}

define i32 @function_12c90(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12c90:
  %r4.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v3_12c90 = load i32, i32* @r4, align 4
  store i32 %v3_12c90, i32* %stack_var_-8, align 4
  %v7_12c94 = call i32 @readlink(i8* %arg1, i8* %tmp, i32 %arg3)
  store i32 %v7_12c94, i32* %r4.global-to-local, align 4
  %tmp6 = icmp ult i32 %v7_12c94, -4095
  br i1 %tmp6, label %dec_label_pc_12cb4, label %dec_label_pc_12ca4

dec_label_pc_12ca4:                               ; preds = %dec_label_pc_12c90
  %v0_12ca4 = call i32 @function_13070()
  %v0_12ca8 = load i32, i32* %r4.global-to-local, align 4
  %v1_12ca8 = sub i32 0, %v0_12ca8
  %v2_12cac = inttoptr i32 %v0_12ca4 to i32*
  store i32 %v1_12ca8, i32* %v2_12cac, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12cb4

dec_label_pc_12cb4:                               ; preds = %dec_label_pc_12c90, %dec_label_pc_12ca4
  %v0_12cb4 = phi i32 [ %v7_12c94, %dec_label_pc_12c90 ], [ -1, %dec_label_pc_12ca4 ]
  %v2_12cb8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12cb8, i32* @r4, align 4
  ret i32 %v0_12cb4

; uselistorder directives
  uselistorder i32 %v7_12c94, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12cb4, { 1, 0 }
}

define i32 @function_12cbc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_12cbc:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12cbc = load i32, i32* @r4, align 4
  store i32 %v3_12cbc, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_12ce4, label %dec_label_pc_12cd4

dec_label_pc_12cd4:                               ; preds = %dec_label_pc_12cbc
  %v0_12cd4 = call i32 @function_13070()
  %v0_12cd8 = load i32, i32* %r4.global-to-local, align 4
  %v1_12cd8 = sub i32 0, %v0_12cd8
  %v2_12cdc = inttoptr i32 %v0_12cd4 to i32*
  store i32 %v1_12cd8, i32* %v2_12cdc, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_12ce8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12ce4

dec_label_pc_12ce4:                               ; preds = %dec_label_pc_12cbc, %dec_label_pc_12cd4
  %v2_12ce8 = phi i32 [ %v3_12cbc, %dec_label_pc_12cbc ], [ %v2_12ce8.pre, %dec_label_pc_12cd4 ]
  %v0_12ce4 = phi i32 [ %arg1, %dec_label_pc_12cbc ], [ -1, %dec_label_pc_12cd4 ]
  store i32 %v2_12ce8, i32* @r4, align 4
  ret i32 %v0_12ce4

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12ce4, { 1, 0 }
}

define i32 @function_12cec(i32 %arg1) local_unnamed_addr {
dec_label_pc_12cec:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12cec = load i32, i32* @r4, align 4
  store i32 %v3_12cec, i32* %stack_var_-8, align 4
  %v0_12cf0 = call i32 @setsid()
  store i32 %v0_12cf0, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12cf0, -4095
  br i1 %tmp, label %dec_label_pc_12d10, label %dec_label_pc_12d00

dec_label_pc_12d00:                               ; preds = %dec_label_pc_12cec
  %v0_12d00 = call i32 @function_13070()
  %v0_12d04 = load i32, i32* %r4.global-to-local, align 4
  %v1_12d04 = sub i32 0, %v0_12d04
  %v2_12d08 = inttoptr i32 %v0_12d00 to i32*
  store i32 %v1_12d04, i32* %v2_12d08, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12d10

dec_label_pc_12d10:                               ; preds = %dec_label_pc_12cec, %dec_label_pc_12d00
  %v0_12d10 = phi i32 [ %v0_12cf0, %dec_label_pc_12cec ], [ -1, %dec_label_pc_12d00 ]
  %v2_12d14 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12d14, i32* @r4, align 4
  ret i32 %v0_12d10

; uselistorder directives
  uselistorder i32 %v0_12cf0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12d10, { 1, 0 }
}

define i32 @function_12d18(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12d18:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg3 to %_TYPEDEF_sigset_t*
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12d18 = icmp eq %_TYPEDEF_sigset_t* %arg2, null
  br i1 %v3_12d18, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_12d18
  %v3_12d205 = load i32, i32* @r4, align 4
  store i32 %v3_12d205, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12d40

bb:                                               ; preds = %dec_label_pc_12d18
  %v3_12d20 = load i32, i32* @r4, align 4
  store i32 %v3_12d20, i32* %stack_var_-8, align 4
  %tmp12 = icmp ult i32 %arg1, 3
  br i1 %tmp12, label %dec_label_pc_12d40, label %dec_label_pc_12d2c

dec_label_pc_12d2c:                               ; preds = %bb
  %v0_12d2c = call i32 @function_13070()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_12d38 = inttoptr i32 %v0_12d2c to i32*
  store i32 22, i32* %v2_12d38, align 4
  %v0_12d64.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12d64

dec_label_pc_12d40:                               ; preds = %.thread, %bb
  %v7_12d40 = call i32 @sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, %_TYPEDEF_sigset_t* %tmp)
  store i32 %v7_12d40, i32* %r4.global-to-local, align 4
  %tmp13 = icmp ult i32 %v7_12d40, -4095
  br i1 %tmp13, label %dec_label_pc_12d60, label %dec_label_pc_12d50

dec_label_pc_12d50:                               ; preds = %dec_label_pc_12d40
  %v0_12d50 = call i32 @function_13070()
  %v0_12d54 = load i32, i32* %r4.global-to-local, align 4
  %v1_12d54 = sub i32 0, %v0_12d54
  %v2_12d58 = inttoptr i32 %v0_12d50 to i32*
  store i32 %v1_12d54, i32* %v2_12d58, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12d60

dec_label_pc_12d60:                               ; preds = %dec_label_pc_12d40, %dec_label_pc_12d50
  %v0_12d60 = phi i32 [ %v7_12d40, %dec_label_pc_12d40 ], [ -1, %dec_label_pc_12d50 ]
  store i32 %v0_12d60, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12d64

dec_label_pc_12d64:                               ; preds = %dec_label_pc_12d2c, %dec_label_pc_12d60
  %v0_12d64 = phi i32 [ %v0_12d64.pre, %dec_label_pc_12d2c ], [ %v0_12d60, %dec_label_pc_12d60 ]
  %v2_12d68 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12d68, i32* @r4, align 4
  ret i32 %v0_12d64

; uselistorder directives
  uselistorder i32 %v7_12d40, { 1, 0, 2 }
  uselistorder i32* %stack_var_-8, { 1, 2, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_12d64, { 1, 0 }
  uselistorder label %dec_label_pc_12d60, { 1, 0 }
  uselistorder label %dec_label_pc_12d40, { 1, 0 }
}

define i32 @function_12d6c(i32* %arg1) local_unnamed_addr {
dec_label_pc_12d6c:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12d6c = load i32, i32* @r4, align 4
  store i32 %v3_12d6c, i32* %stack_var_-8, align 4
  %v2_12d70 = call i32 @time(i32* %arg1)
  store i32 %v2_12d70, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_12d70, -4095
  br i1 %tmp, label %dec_label_pc_12d90, label %dec_label_pc_12d80

dec_label_pc_12d80:                               ; preds = %dec_label_pc_12d6c
  %v0_12d80 = call i32 @function_13070()
  %v0_12d84 = load i32, i32* %r4.global-to-local, align 4
  %v1_12d84 = sub i32 0, %v0_12d84
  %v2_12d88 = inttoptr i32 %v0_12d80 to i32*
  store i32 %v1_12d84, i32* %v2_12d88, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12d90

dec_label_pc_12d90:                               ; preds = %dec_label_pc_12d6c, %dec_label_pc_12d80
  %v0_12d90 = phi i32 [ %v2_12d70, %dec_label_pc_12d6c ], [ -1, %dec_label_pc_12d80 ]
  %v2_12d94 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12d94, i32* @r4, align 4
  ret i32 %v0_12d90

; uselistorder directives
  uselistorder i32 %v2_12d70, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12d90, { 1, 0 }
}

define i32 @function_12d98(i8* %arg1) local_unnamed_addr {
dec_label_pc_12d98:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12d98 = load i32, i32* @r4, align 4
  store i32 %v3_12d98, i32* %stack_var_-8, align 4
  %v3_12d9c = call i32 @unlink(i8* %arg1)
  store i32 %v3_12d9c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v3_12d9c, -4095
  br i1 %tmp, label %dec_label_pc_12dbc, label %dec_label_pc_12dac

dec_label_pc_12dac:                               ; preds = %dec_label_pc_12d98
  %v0_12dac = call i32 @function_13070()
  %v0_12db0 = load i32, i32* %r4.global-to-local, align 4
  %v1_12db0 = sub i32 0, %v0_12db0
  %v2_12db4 = inttoptr i32 %v0_12dac to i32*
  store i32 %v1_12db0, i32* %v2_12db4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12dbc

dec_label_pc_12dbc:                               ; preds = %dec_label_pc_12d98, %dec_label_pc_12dac
  %v0_12dbc = phi i32 [ %v3_12d9c, %dec_label_pc_12d98 ], [ -1, %dec_label_pc_12dac ]
  %v2_12dc0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12dc0, i32* @r4, align 4
  ret i32 %v0_12dbc

; uselistorder directives
  uselistorder i32 %v3_12d9c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12dbc, { 1, 0 }
}

define i32 @function_12dc4(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12dc4:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12dc4 = load i32, i32* @r4, align 4
  store i32 %v3_12dc4, i32* %stack_var_-8, align 4
  %v4_12dc8 = call i32 @write(i32 %arg1, i32* %arg2, i32 %arg3)
  store i32 %v4_12dc8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_12dc8, -4095
  br i1 %tmp, label %dec_label_pc_12de8, label %dec_label_pc_12dd8

dec_label_pc_12dd8:                               ; preds = %dec_label_pc_12dc4
  %v0_12dd8 = call i32 @function_13070()
  %v0_12ddc = load i32, i32* %r4.global-to-local, align 4
  %v1_12ddc = sub i32 0, %v0_12ddc
  %v2_12de0 = inttoptr i32 %v0_12dd8 to i32*
  store i32 %v1_12ddc, i32* %v2_12de0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12de8

dec_label_pc_12de8:                               ; preds = %dec_label_pc_12dc4, %dec_label_pc_12dd8
  %v0_12de8 = phi i32 [ %v4_12dc8, %dec_label_pc_12dc4 ], [ -1, %dec_label_pc_12dd8 ]
  %v2_12dec = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12dec, i32* @r4, align 4
  ret i32 %v0_12de8

; uselistorder directives
  uselistorder i32 %v4_12dc8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12de8, { 1, 0 }
}

define i32 @function_12df0(i32* %arg1) local_unnamed_addr {
dec_label_pc_12df0:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_12df0 = load i32, i32* @r4, align 4
  store i32 %v3_12df0, i32* %stack_var_-20, align 4
  %v6_12df0 = load i32, i32* @r5, align 4
  %v9_12df0 = load i32, i32* @r6, align 4
  %v12_12df0 = load i32, i32* @r7, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_12df8 = load i32, i32* %arg1, align 4
  store i32 %v2_12df8, i32* %r4.global-to-local, align 4
  %v2_12dfc = ptrtoint i32* %stack_var_-36 to i32
  %v1_12e00 = add i32 %tmp, 24
  store i32 %v1_12e00, i32* @r6, align 4
  %v3_12e04 = icmp eq i32 %v2_12df8, -1
  store i32 %v2_12dfc, i32* @r7, align 4
  store i32 %v1_12e00, i32* %r2.global-to-local, align 4
  store i32 %v2_12dfc, i32* @r0, align 4
  br i1 %v3_12e04, label %dec_label_pc_12e1c, label %dec_label_pc_12e30

dec_label_pc_12e1c:                               ; preds = %dec_label_pc_12df0
  %v0_12e1c = call i32 @function_13070()
  %v0_12e24 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_12e24, i32* %r2.global-to-local, align 4
  %v2_12e28 = inttoptr i32 %v0_12e1c to i32*
  store i32 9, i32* %v2_12e28, align 4
  %v0_12e88.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12e88

dec_label_pc_12e30:                               ; preds = %dec_label_pc_12df0
  %v8_12e38 = call i32 @function_140b4(i32 %v2_12dfc, i32 ptrtoint (i32* @global_var_140ac.366 to i32), i32 %v1_12e00, i32 82100, i32 %v3_12df0, i32 %v6_12df0, i32 %v9_12df0)
  %v1_12e48 = call i32 @function_140ac()
  %v0_12e54 = load i32, i32* @r5, align 4
  %v1_12e54 = inttoptr i32 %v0_12e54 to i32*
  %v2_12e54 = load i32, i32* %v1_12e54, align 4
  store i32 %v2_12e54, i32* @r4, align 4
  store i32 %v2_12dfc, i32* @r0, align 4
  store i32 -1, i32* %v1_12e54, align 4
  store i32 ptrtoint (i32* @global_var_12e6c.370 to i32), i32* @lr, align 4
  %v8_12e68 = call i32 @function_140b4(i32 %v2_12dfc, i32 1, i32 %v1_12e00, i32 82100, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_12e6c = load i32, i32* @r5, align 4
  %v1_12e6c = add i32 %v0_12e6c, 12
  %v2_12e6c = inttoptr i32 %v1_12e6c to i32*
  %v3_12e6c = load i32, i32* %v2_12e6c, align 4
  store i32 %v3_12e6c, i32* @r0, align 4
  %v0_12e70 = call i32 @function_136c4()
  %v0_12e74 = load i32, i32* @r5, align 4
  store i32 %v0_12e74, i32* @r0, align 4
  %v0_12e78 = call i32 @function_136c4()
  %v0_12e7c = load i32, i32* @r4, align 4
  %v1_12e80 = call i32 @function_12a9c(i32 %v0_12e7c)
  store i32 %v1_12e80, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12e88

dec_label_pc_12e88:                               ; preds = %dec_label_pc_12e1c, %dec_label_pc_12e30
  %v0_12e88 = phi i32 [ %v0_12e88.pre, %dec_label_pc_12e1c ], [ %v1_12e80, %dec_label_pc_12e30 ]
  %v2_12e90 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_12e90, i32* @r4, align 4
  store i32 %v6_12df0, i32* @r5, align 4
  store i32 %v9_12df0, i32* @r6, align 4
  store i32 %v12_12df0, i32* @r7, align 4
  ret i32 %v0_12e88

; uselistorder directives
  uselistorder i32 %v1_12e00, { 2, 1, 0, 3 }
  uselistorder i32 %v2_12dfc, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v9_12df0, { 1, 0 }
  uselistorder i32 %v6_12df0, { 1, 0 }
  uselistorder label %dec_label_pc_12e88, { 1, 0 }
}

define i32 @function_12ea4(i32 %arg1) local_unnamed_addr {
dec_label_pc_12ea4:
  %r5.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-108 = alloca i32, align 4
  %v3_12ea4 = load i32, i32* @r4, align 4
  %v9_12ea4 = load i32, i32* @r6, align 4
  %v12_12ea4 = load i32, i32* @r7, align 4
  %v0_12eb0 = load i32, i32* @r0, align 4
  %v2_12eb0 = inttoptr i32 %v0_12eb0 to i8*
  %v3_12eb0 = call i32 @function_12bc8(i8* %v2_12eb0, i32 18432)
  store i32 %v3_12eb0, i32* @r0, align 4
  store i32 %v3_12eb0, i32* @r7, align 4
  %v1_12eb4 = icmp slt i32 %v3_12eb0, 0
  br i1 %v1_12eb4, label %.thread1, label %dec_label_pc_12ec0

.thread1:                                         ; preds = %dec_label_pc_12ea4
  store i32 0, i32* @r6, align 4
  br label %dec_label_pc_12f90

dec_label_pc_12ec0:                               ; preds = %dec_label_pc_12ea4
  %v2_12eac = ptrtoint i32* %stack_var_-108 to i32
  store i32 %v2_12eac, i32* @r1, align 4
  %v0_12ec4 = call i32 @function_144d8()
  %v1_12ec8 = icmp slt i32 %v0_12ec4, 0
  br i1 %v1_12ec8, label %dec_label_pc_12ee8, label %dec_label_pc_12ed0

dec_label_pc_12ed0:                               ; preds = %dec_label_pc_12ec0
  %v0_12ed0 = load i32, i32* @r7, align 4
  store i32 1, i32* @r2, align 4
  %v2_12edc = call i32 @function_129d8(i32 %v0_12ed0, i32 2)
  %v1_12ee0 = icmp slt i32 %v2_12edc, 0
  br i1 %v1_12ee0, label %dec_label_pc_12ee8, label %dec_label_pc_12f08

dec_label_pc_12ee8:                               ; preds = %dec_label_pc_12ed0, %dec_label_pc_12ec0
  %v0_12ee8 = call i32 @function_13070()
  store i32 %v0_12ee8, i32* %r5.global-to-local, align 4
  %v0_12ef0 = load i32, i32* @r7, align 4
  %v1_12ef4 = inttoptr i32 %v0_12ee8 to i32*
  %v2_12ef4 = load i32, i32* %v1_12ef4, align 4
  store i32 %v2_12ef4, i32* @r4, align 4
  %v1_12ef8 = call i32 @function_12a9c(i32 %v0_12ef0)
  store i32 0, i32* @r6, align 4
  %v0_12f00 = load i32, i32* @r4, align 4
  %v1_12f00 = load i32, i32* %r5.global-to-local, align 4
  %v2_12f00 = inttoptr i32 %v1_12f00 to i32*
  store i32 %v0_12f00, i32* %v2_12f00, align 4
  br label %dec_label_pc_12f90

dec_label_pc_12f08:                               ; preds = %dec_label_pc_12ed0
  %v1_12f0c = call i32 @function_13518(i32 48)
  store i32 %v1_12f0c, i32* @r6, align 4
  %v2_12f10 = icmp eq i32 %v1_12f0c, 0
  br i1 %v2_12f10, label %dec_label_pc_12f60, label %dec_label_pc_12f18

dec_label_pc_12f18:                               ; preds = %dec_label_pc_12f08
  store i32 0, i32* @r4, align 4
  %v2_12f1c = add i32 %v1_12f0c, 16
  %v3_12f1c = inttoptr i32 %v2_12f1c to i32*
  store i32 0, i32* %v3_12f1c, align 4
  %v2_12f24 = icmp ugt i32 %tmp, 511
  %v1_12f28 = load i32, i32* @r6, align 4
  %v2_12f28 = add i32 %v1_12f28, 20
  %v3_12f28 = inttoptr i32 %v2_12f28 to i32*
  store i32 %tmp, i32* %v3_12f28, align 4
  br i1 %v2_12f24, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_12f18
  %v2_12f30 = load i32, i32* @r6, align 4
  %v3_12f30 = add i32 %v2_12f30, 20
  %v4_12f30 = inttoptr i32 %v3_12f30 to i32*
  store i32 512, i32* %v4_12f30, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_12f18, %bb
  %v0_12f34 = load i32, i32* @r7, align 4
  %v1_12f34 = load i32, i32* @r6, align 4
  %v2_12f34 = inttoptr i32 %v1_12f34 to i32*
  store i32 %v0_12f34, i32* %v2_12f34, align 4
  %v0_12f38 = load i32, i32* @r4, align 4
  %v1_12f38 = load i32, i32* @r6, align 4
  %v2_12f38 = add i32 %v1_12f38, 8
  %v3_12f38 = inttoptr i32 %v2_12f38 to i32*
  store i32 %v0_12f38, i32* %v3_12f38, align 4
  %v0_12f3c = load i32, i32* @r4, align 4
  %v1_12f3c = load i32, i32* @r6, align 4
  %v2_12f3c = add i32 %v1_12f3c, 4
  %v3_12f3c = inttoptr i32 %v2_12f3c to i32*
  store i32 %v0_12f3c, i32* %v3_12f3c, align 4
  %v0_12f44 = load i32, i32* @r6, align 4
  %v1_12f44 = add i32 %v0_12f44, 20
  %v2_12f44 = inttoptr i32 %v1_12f44 to i32*
  %v3_12f44 = load i32, i32* %v2_12f44, align 4
  %v2_12f48 = call i32 @function_1366c(i32 1, i32 %v3_12f44)
  %v2_12f4c = icmp eq i32 %v2_12f48, 0
  %v1_12f50 = load i32, i32* @r6, align 4
  %v2_12f50 = add i32 %v1_12f50, 12
  %v3_12f50 = inttoptr i32 %v2_12f50 to i32*
  store i32 %v2_12f48, i32* %v3_12f50, align 4
  br i1 %v2_12f4c, label %dec_label_pc_12f58, label %dec_label_pc_12f7c

dec_label_pc_12f58:                               ; preds = %.thread
  %v0_12f58 = load i32, i32* @r6, align 4
  store i32 %v0_12f58, i32* @r0, align 4
  %v0_12f5c = call i32 @function_136c4()
  br label %dec_label_pc_12f60

dec_label_pc_12f60:                               ; preds = %dec_label_pc_12f08, %dec_label_pc_12f58
  %v0_12f60 = load i32, i32* @r7, align 4
  %v1_12f64 = call i32 @function_12a9c(i32 %v0_12f60)
  %v0_12f68 = call i32 @function_13070()
  store i32 0, i32* @r6, align 4
  %v2_12f74 = inttoptr i32 %v0_12f68 to i32*
  store i32 12, i32* %v2_12f74, align 4
  br label %dec_label_pc_12f90

dec_label_pc_12f7c:                               ; preds = %.thread
  store i32 77712, i32* @lr, align 4
  %v1_12f8c = call i32 @function_140ac()
  br label %dec_label_pc_12f90

dec_label_pc_12f90:                               ; preds = %.thread1, %dec_label_pc_12f60, %dec_label_pc_12ee8, %dec_label_pc_12f7c
  %v0_12f90 = load i32, i32* @r6, align 4
  store i32 %v3_12ea4, i32* @r4, align 4
  store i32 %v9_12ea4, i32* @r6, align 4
  store i32 %v12_12ea4, i32* @r7, align 4
  ret i32 %v0_12f90

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_1366c, { 39, 40, 38, 37, 36, 22, 35, 34, 33, 32, 28, 27, 26, 25, 24, 23, 21, 0, 20, 19, 18, 17, 16, 15, 3, 2, 1, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 31, 30, 29 }
  uselistorder i32 512, { 0, 5, 1, 6, 8, 2, 9, 3, 10, 4, 11, 7 }
  uselistorder i32 (i32)* @function_12a9c, { 21, 20, 19, 33, 32, 35, 31, 34, 30, 29, 15, 14, 28, 27, 26, 25, 24, 23, 3, 2, 22, 18, 17, 16, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 0, 1 }
  uselistorder label %dec_label_pc_12f90, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_12f60, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_12fa0(i32* %arg1) local_unnamed_addr {
dec_label_pc_12fa0:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_12fa0 = load i32, i32* @r4, align 4
  %v6_12fa0 = load i32, i32* @r5, align 4
  %v9_12fa0 = load i32, i32* @lr, align 4
  %v1_12fa4 = add i32 %tmp, 24
  store i32 %v1_12fa4, i32* @r4, align 4
  %v2_12fa8 = ptrtoint i32* %stack_var_-28 to i32
  store i32 82100, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 %v2_12fa8, i32* @r0, align 4
  store i32 %v1_12fa4, i32* %r2.global-to-local, align 4
  %v8_12fc4 = call i32 @function_140b4(i32 %v2_12fa8, i32 ptrtoint (i32* @global_var_140ac.366 to i32), i32 %v1_12fa4, i32 82100, i32 %v3_12fa0, i32 %v6_12fa0, i32 %v9_12fa0)
  %v0_12fc8 = load i32, i32* @r4, align 4
  store i32 %v0_12fc8, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_140ac.366 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_12fd8.375 to i32), i32* @lr, align 4
  %v1_12fd4 = call i32 @function_140ac()
  store i32 %v1_12fd4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12fd8

dec_label_pc_12fd8:                               ; preds = %dec_label_pc_1300c, %dec_label_pc_12fa0
  %v0_12fd8 = load i32, i32* @r5, align 4
  %v1_12fd8 = add i32 %v0_12fd8, 4
  %v2_12fd8 = inttoptr i32 %v1_12fd8 to i32*
  %v3_12fd8 = load i32, i32* %v2_12fd8, align 4
  store i32 %v3_12fd8, i32* %r2.global-to-local, align 4
  %v4_12fd8 = add i32 %v0_12fd8, 8
  %v5_12fd8 = inttoptr i32 %v4_12fd8 to i32*
  %v6_12fd8 = load i32, i32* %v5_12fd8, align 4
  store i32 %v6_12fd8, i32* %r3.global-to-local, align 4
  %tmp8 = icmp ugt i32 %v6_12fd8, %v3_12fd8
  br i1 %tmp8, label %dec_label_pc_1300c, label %dec_label_pc_12fe4

dec_label_pc_12fe4:                               ; preds = %dec_label_pc_12fd8
  %v1_12fe4 = inttoptr i32 %v0_12fd8 to i32*
  %v2_12fe4 = load i32, i32* %v1_12fe4, align 4
  store i32 %v2_12fe4, i32* @r0, align 4
  %v1_12fe8 = add i32 %v0_12fd8, 12
  %v2_12fe8 = inttoptr i32 %v1_12fe8 to i32*
  %v3_12fe8 = load i32, i32* %v2_12fe8, align 4
  %v1_12fec = add i32 %v0_12fd8, 20
  %v2_12fec = inttoptr i32 %v1_12fec to i32*
  %v3_12fec = load i32, i32* %v2_12fec, align 4
  store i32 %v3_12fec, i32* @r2, align 4
  %v4_12ff0 = call i32 @function_14528(i32 %v2_12fe4, i32 %v3_12fe8, i32 %v3_12fec, i32 %v6_12fd8)
  store i32 %v4_12ff0, i32* %r0.global-to-local, align 4
  %tmp7 = icmp slt i32 %v4_12ff0, 1
  br i1 %tmp7, label %.thread, label %dec_label_pc_13000

.thread:                                          ; preds = %dec_label_pc_12fe4
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_13040

dec_label_pc_13000:                               ; preds = %dec_label_pc_12fe4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_13004 = load i32, i32* @r5, align 4
  %v2_13004 = add i32 %v1_13004, 4
  %v3_13004 = inttoptr i32 %v2_13004 to i32*
  store i32 0, i32* %v3_13004, align 4
  %v1_13008 = load i32, i32* @r5, align 4
  %v2_13008 = add i32 %v1_13008, 8
  %v3_13008 = inttoptr i32 %v2_13008 to i32*
  store i32 %v4_12ff0, i32* %v3_13008, align 4
  %v0_1300c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1300c

dec_label_pc_1300c:                               ; preds = %dec_label_pc_12fd8, %dec_label_pc_13000
  %v1_13024 = phi i32 [ %v0_12fd8, %dec_label_pc_12fd8 ], [ %v0_1300c.pre, %dec_label_pc_13000 ]
  %v1_1300c = add i32 %v1_13024, 4
  %v2_1300c = inttoptr i32 %v1_1300c to i32*
  %v3_1300c = load i32, i32* %v2_1300c, align 4
  store i32 %v3_1300c, i32* %r2.global-to-local, align 4
  %v1_13010 = add i32 %v1_13024, 12
  %v2_13010 = inttoptr i32 %v1_13010 to i32*
  %v3_13010 = load i32, i32* %v2_13010, align 4
  store i32 %v3_13010, i32* %ip.global-to-local, align 4
  %v2_13014 = add i32 %v3_13010, %v3_1300c
  store i32 %v2_13014, i32* @r4, align 4
  %v1_13018 = add i32 %v2_13014, 4
  %v2_13018 = inttoptr i32 %v1_13018 to i32*
  %v3_13018 = load i32, i32* %v2_13018, align 4
  %v1_1301c = add i32 %v2_13014, 8
  %v2_1301c = inttoptr i32 %v1_1301c to i8*
  %v3_1301c = load i8, i8* %v2_1301c, align 1
  %v4_1301c = zext i8 %v3_1301c to i32
  store i32 %v4_1301c, i32* %r3.global-to-local, align 4
  %v1_13020 = add i32 %v2_13014, 9
  %v2_13020 = inttoptr i32 %v1_13020 to i8*
  %v3_13020 = load i8, i8* %v2_13020, align 1
  %v4_13020 = zext i8 %v3_13020 to i32
  store i32 %v4_13020, i32* %r0.global-to-local, align 4
  %v2_13024 = add i32 %v1_13024, 16
  %v3_13024 = inttoptr i32 %v2_13024 to i32*
  store i32 %v3_13018, i32* %v3_13024, align 4
  %v0_13028 = load i32, i32* %r2.global-to-local, align 4
  %v1_13028 = load i32, i32* %ip.global-to-local, align 4
  %v2_13028 = add i32 %v1_13028, %v0_13028
  %v3_13028 = inttoptr i32 %v2_13028 to i32*
  %v4_13028 = load i32, i32* %v3_13028, align 4
  %v0_1302c = load i32, i32* %r3.global-to-local, align 4
  %v1_1302c = load i32, i32* %r0.global-to-local, align 4
  %v4_1302c = mul i32 %v1_1302c, 256
  %v5_1302c = or i32 %v4_1302c, %v0_1302c
  store i32 %v5_1302c, i32* %r3.global-to-local, align 4
  %v2_13030 = add i32 %v5_1302c, %v0_13028
  store i32 %v2_13030, i32* @r2, align 4
  %v2_13034 = icmp eq i32 %v4_13028, 0
  %v1_13038 = load i32, i32* @r5, align 4
  %v2_13038 = add i32 %v1_13038, 4
  %v3_13038 = inttoptr i32 %v2_13038 to i32*
  store i32 %v2_13030, i32* %v3_13038, align 4
  br i1 %v2_13034, label %dec_label_pc_12fd8, label %dec_label_pc_13040

dec_label_pc_13040:                               ; preds = %dec_label_pc_1300c, %.thread
  store i32 %v2_12fa8, i32* @r0, align 4
  store i32 82100, i32* %r3.global-to-local, align 4
  store i32 77908, i32* @lr, align 4
  %v3_13050 = load i32, i32* @r2, align 4
  %v8_13050 = call i32 @function_140b4(i32 %v2_12fa8, i32 1, i32 %v3_13050, i32 82100, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_13054 = load i32, i32* @r4, align 4
  store i32 %v0_13054, i32* %r0.global-to-local, align 4
  store i32 %v3_12fa0, i32* @r4, align 4
  store i32 %v6_12fa0, i32* @r5, align 4
  ret i32 %v0_13054

; uselistorder directives
  uselistorder i32 %v1_13024, { 0, 2, 1 }
  uselistorder i32 %v6_12fd8, { 1, 0, 2 }
  uselistorder i32 %v0_12fd8, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %v2_12fa8, { 1, 0, 3, 2 }
  uselistorder i32 %v1_12fa4, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 5, 2, 1, 6, 0 }
  uselistorder label %dec_label_pc_1300c, { 1, 0 }
}

define i32 @function_13070() local_unnamed_addr {
dec_label_pc_13070:
  ret i32 ptrtoint (i32* @global_var_1da70.378 to i32)
}

define i32 @function_1307c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1307c:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20 = alloca i32, align 4
  %v1_13088 = bitcast i32* %stack_var_-20 to %tms*
  %v2_13088 = call i32 @function_148b8(%tms* %v1_13088)
  %v2_13090 = load i32, i32* %stack_var_-20, align 4
  %v2_13094 = add i32 %v2_13090, %tmp
  %v2_1309c = mul i32 %v2_13094, 10000
  %v1_130a0 = and i32 %v2_1309c, 2147483632
  ret i32 %v1_130a0

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @function_130b0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_130b0:
  %v0_130b0 = call i32 @function_14cc0()
  ret i32 %v0_130b0
}

define i32 @function_130c0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_130c0:
  %v0_130c0 = call i32 @function_14cc0()
  ret i32 %v0_130c0

; uselistorder directives
  uselistorder i32 ()* @function_14cc0, { 1, 0 }
}

define i32 @function_130d0(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_130d0:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_130d4 = load i32, i32* @r2, align 4
  %v8_130d4 = icmp eq i32 %v0_130d4, 8
  store i1 %v8_130d4, i1* %cpsr_z.global-to-local, align 1
  %v5_130d8 = icmp slt i32 %v0_130d4, 8
  br i1 %v5_130d8, label %dec_label_pc_13138, label %dec_label_pc_130dc

dec_label_pc_130dc:                               ; preds = %dec_label_pc_130d0
  %v4_130dc = mul i32 %arg2, 256
  %v5_130dc = or i32 %v4_130dc, %arg2
  %v4_130e0 = mul i32 %v5_130dc, 65536
  %v5_130e0 = or i32 %v4_130e0, %v5_130dc
  store i32 %v5_130e0, i32* %r1.global-to-local, align 4
  %v1_130e457 = urem i32 %tmp, 4
  %v2_130e458 = icmp eq i32 %v1_130e457, 0
  store i1 %v2_130e458, i1* %cpsr_z.global-to-local, align 1
  %extract.t83 = trunc i32 %arg2 to i8
  br i1 %v2_130e458, label %dec_label_pc_130f4, label %bb

bb:                                               ; preds = %dec_label_pc_130dc, %.thread.bb_crit_edge
  %arg2.sink.off0 = phi i8 [ %extract.t82, %.thread.bb_crit_edge ], [ %extract.t83, %dec_label_pc_130dc ]
  %v3_130e859 = phi i32 [ %v6_130e8, %.thread.bb_crit_edge ], [ %tmp, %dec_label_pc_130dc ]
  %v4_130e8 = inttoptr i32 %v3_130e859 to i8*
  store i8 %arg2.sink.off0, i8* %v4_130e8, align 1
  %v5_130e8 = load i32, i32* %r3.global-to-local, align 4
  %v6_130e8 = add i32 %v5_130e8, 1
  store i32 %v6_130e8, i32* %r3.global-to-local, align 4
  %v0_130ec.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_130f8.pr.pre = load i32, i32* @r2, align 4
  br i1 %v0_130ec.pr, label %dec_label_pc_130f4, label %.thread

.thread:                                          ; preds = %bb
  %v2_130ec = add i32 %v0_130f8.pr.pre, -1
  store i32 %v2_130ec, i32* @r2, align 4
  %v1_130e4 = urem i32 %v6_130e8, 4
  %v2_130e4 = icmp eq i32 %v1_130e4, 0
  store i1 %v2_130e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_130e4, label %dec_label_pc_130f4, label %.thread.bb_crit_edge

.thread.bb_crit_edge:                             ; preds = %.thread
  %v1_130e8.pre = load i32, i32* %r1.global-to-local, align 4
  %extract.t82 = trunc i32 %v1_130e8.pre to i8
  br label %bb

dec_label_pc_130f4:                               ; preds = %.thread, %bb, %dec_label_pc_130dc
  %v0_1310028 = phi i32 [ %tmp, %dec_label_pc_130dc ], [ %v6_130e8, %bb ], [ %v6_130e8, %.thread ]
  %v0_130f8.pr = phi i32 [ %v0_130d4, %dec_label_pc_130dc ], [ %v0_130f8.pr.pre, %bb ], [ %v2_130ec, %.thread ]
  %v0_130f4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_130f4, i32* %ip.global-to-local, align 4
  %v8_130f810 = icmp eq i32 %v0_130f8.pr, 8
  store i1 %v8_130f810, i1* %cpsr_z.global-to-local, align 1
  %v5_130fc11 = icmp slt i32 %v0_130f8.pr, 8
  br i1 %v5_130fc11, label %dec_label_pc_13138, label %dec_label_pc_13100.preheader

dec_label_pc_13100.preheader:                     ; preds = %dec_label_pc_130f4
  %v1_1310046 = inttoptr i32 %v0_1310028 to i32*
  store i32 %v0_130f4, i32* %v1_1310046, align 4
  %v3_1310047 = add i32 %v0_1310028, 4
  %v4_1310048 = inttoptr i32 %v3_1310047 to i32*
  %v5_1310049 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_1310049, i32* %v4_1310048, align 4
  %v6_1310050 = add i32 %v0_1310028, 8
  store i32 %v6_1310050, i32* %r3.global-to-local, align 4
  %v0_1310451 = load i32, i32* @r2, align 4
  %v1_1310452 = add i32 %v0_1310451, -8
  store i32 %v1_1310452, i32* %r2.global-to-local, align 4
  %v5_1310c53 = icmp slt i32 %v1_1310452, 8
  br i1 %v5_1310c53, label %dec_label_pc_13100.dec_label_pc_13138.loopexit_crit_edge, label %dec_label_pc_13110

dec_label_pc_13110:                               ; preds = %dec_label_pc_13100.preheader, %dec_label_pc_130f8.dec_label_pc_13100_crit_edge
  %v6_1310055 = phi i32 [ %v6_13100, %dec_label_pc_130f8.dec_label_pc_13100_crit_edge ], [ %v6_1310050, %dec_label_pc_13100.preheader ]
  %v0_1310054 = phi i32 [ %v12_1312c, %dec_label_pc_130f8.dec_label_pc_13100_crit_edge ], [ %v0_1310028, %dec_label_pc_13100.preheader ]
  %v1_13110 = inttoptr i32 %v6_1310055 to i32*
  %v2_13110 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_13110, i32* %v1_13110, align 4
  %v3_13110 = add i32 %v0_1310054, 12
  %v4_13110 = inttoptr i32 %v3_13110 to i32*
  %v5_13110 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_13110, i32* %v4_13110, align 4
  %v6_13110 = add i32 %v0_1310054, 16
  store i32 %v6_13110, i32* %r3.global-to-local, align 4
  %v0_13114 = load i32, i32* %r2.global-to-local, align 4
  %v1_13114 = add i32 %v0_13114, -8
  store i32 %v1_13114, i32* %r2.global-to-local, align 4
  %v5_1311c = icmp slt i32 %v1_13114, 8
  br i1 %v5_1311c, label %dec_label_pc_13110.dec_label_pc_13138.loopexit_crit_edge, label %dec_label_pc_13120

dec_label_pc_13120:                               ; preds = %dec_label_pc_13110
  %v1_13120 = inttoptr i32 %v6_13110 to i32*
  %v2_13120 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_13120, i32* %v1_13120, align 4
  %v3_13120 = add i32 %v0_1310054, 20
  %v4_13120 = inttoptr i32 %v3_13120 to i32*
  %v5_13120 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_13120, i32* %v4_13120, align 4
  %v6_13120 = add i32 %v0_1310054, 24
  store i32 %v6_13120, i32* %r3.global-to-local, align 4
  %v0_13124 = load i32, i32* %r2.global-to-local, align 4
  %v1_13124 = add i32 %v0_13124, -8
  store i32 %v1_13124, i32* %r2.global-to-local, align 4
  %v5_1312c = icmp slt i32 %v1_13124, 8
  br i1 %v5_1312c, label %dec_label_pc_13120.dec_label_pc_13138.loopexit_crit_edge, label %dec_label_pc_130f8

dec_label_pc_130f8:                               ; preds = %dec_label_pc_13120
  %v7_1312c = inttoptr i32 %v6_13120 to i32*
  %v8_1312c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v8_1312c, i32* %v7_1312c, align 4
  %v9_1312c = add i32 %v0_1310054, 28
  %v10_1312c = inttoptr i32 %v9_1312c to i32*
  %v11_1312c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v11_1312c, i32* %v10_1312c, align 4
  %v12_1312c = add i32 %v0_1310054, 32
  store i32 %v12_1312c, i32* %r3.global-to-local, align 4
  %v6_13130 = load i32, i32* %r2.global-to-local, align 4
  %v7_13130 = add i32 %v6_13130, -8
  store i32 %v7_13130, i32* %r2.global-to-local, align 4
  %v5_130fc = icmp slt i32 %v7_13130, 8
  br i1 %v5_130fc, label %dec_label_pc_130f8.dec_label_pc_13138.loopexit_crit_edge, label %dec_label_pc_130f8.dec_label_pc_13100_crit_edge

dec_label_pc_130f8.dec_label_pc_13100_crit_edge:  ; preds = %dec_label_pc_130f8
  %v2_13100.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_13100 = inttoptr i32 %v12_1312c to i32*
  store i32 %v2_13100.pre, i32* %v1_13100, align 4
  %v3_13100 = add i32 %v0_1310054, 36
  %v4_13100 = inttoptr i32 %v3_13100 to i32*
  %v5_13100 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_13100, i32* %v4_13100, align 4
  %v6_13100 = add i32 %v0_1310054, 40
  store i32 %v6_13100, i32* %r3.global-to-local, align 4
  %v0_13104 = load i32, i32* %r2.global-to-local, align 4
  %v1_13104 = add i32 %v0_13104, -8
  store i32 %v1_13104, i32* %r2.global-to-local, align 4
  %v5_1310c = icmp slt i32 %v1_13104, 8
  br i1 %v5_1310c, label %dec_label_pc_13100.dec_label_pc_13138.loopexit_crit_edge, label %dec_label_pc_13110

dec_label_pc_13100.dec_label_pc_13138.loopexit_crit_edge: ; preds = %dec_label_pc_130f8.dec_label_pc_13100_crit_edge, %dec_label_pc_13100.preheader
  %v1_13104.lcssa = phi i32 [ %v1_1310452, %dec_label_pc_13100.preheader ], [ %v1_13104, %dec_label_pc_130f8.dec_label_pc_13100_crit_edge ]
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13138

dec_label_pc_130f8.dec_label_pc_13138.loopexit_crit_edge: ; preds = %dec_label_pc_130f8
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13138

dec_label_pc_13110.dec_label_pc_13138.loopexit_crit_edge: ; preds = %dec_label_pc_13110
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13138

dec_label_pc_13120.dec_label_pc_13138.loopexit_crit_edge: ; preds = %dec_label_pc_13120
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13138

dec_label_pc_13138:                               ; preds = %dec_label_pc_130f4, %dec_label_pc_13100.dec_label_pc_13138.loopexit_crit_edge, %dec_label_pc_130f8.dec_label_pc_13138.loopexit_crit_edge, %dec_label_pc_13110.dec_label_pc_13138.loopexit_crit_edge, %dec_label_pc_13120.dec_label_pc_13138.loopexit_crit_edge, %dec_label_pc_130d0
  %v0_13140 = phi i32 [ %v0_130d4, %dec_label_pc_130d0 ], [ %v1_13124, %dec_label_pc_13120.dec_label_pc_13138.loopexit_crit_edge ], [ %v1_13114, %dec_label_pc_13110.dec_label_pc_13138.loopexit_crit_edge ], [ %v7_13130, %dec_label_pc_130f8.dec_label_pc_13138.loopexit_crit_edge ], [ %v1_13104.lcssa, %dec_label_pc_13100.dec_label_pc_13138.loopexit_crit_edge ], [ %v0_130f8.pr, %dec_label_pc_130f4 ]
  %v2_13138 = icmp eq i32 %v0_13140, 0
  store i1 %v2_13138, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13138, label %bb32, label %bb33

bb32:                                             ; preds = %dec_label_pc_13138
  ret i32 %tmp

bb33:                                             ; preds = %dec_label_pc_13138
  %v1_13140 = sub i32 7, %v0_13140
  store i32 %v1_13140, i32* %r2.global-to-local, align 4
  %v3_13144 = mul i32 %v1_13140, 4
  %v4_13144 = add i32 %v3_13144, ptrtoint (i32* @global_var_1314c.380 to i32)
  call void @__pseudo_branch(i32 %v4_13144)
  %v0_1314c = load i32, i32* %r1.global-to-local, align 4
  %v1_1314c = trunc i32 %v0_1314c to i8
  %v2_1314c = load i32, i32* %r3.global-to-local, align 4
  %v3_1314c = inttoptr i32 %v2_1314c to i8*
  store i8 %v1_1314c, i8* %v3_1314c, align 1
  %v4_1314c = load i32, i32* %r3.global-to-local, align 4
  %v5_1314c = add i32 %v4_1314c, 1
  store i32 %v5_1314c, i32* %r3.global-to-local, align 4
  %v0_13150 = load i32, i32* %r1.global-to-local, align 4
  %v1_13150 = trunc i32 %v0_13150 to i8
  %v3_13150 = inttoptr i32 %v5_1314c to i8*
  store i8 %v1_13150, i8* %v3_13150, align 1
  %v4_13150 = load i32, i32* %r3.global-to-local, align 4
  %v5_13150 = add i32 %v4_13150, 1
  store i32 %v5_13150, i32* %r3.global-to-local, align 4
  %v0_13154 = load i32, i32* %r1.global-to-local, align 4
  %v1_13154 = trunc i32 %v0_13154 to i8
  %v3_13154 = inttoptr i32 %v5_13150 to i8*
  store i8 %v1_13154, i8* %v3_13154, align 1
  %v4_13154 = load i32, i32* %r3.global-to-local, align 4
  %v5_13154 = add i32 %v4_13154, 1
  store i32 %v5_13154, i32* %r3.global-to-local, align 4
  %v0_13158 = load i32, i32* %r1.global-to-local, align 4
  %v1_13158 = trunc i32 %v0_13158 to i8
  %v3_13158 = inttoptr i32 %v5_13154 to i8*
  store i8 %v1_13158, i8* %v3_13158, align 1
  %v4_13158 = load i32, i32* %r3.global-to-local, align 4
  %v5_13158 = add i32 %v4_13158, 1
  store i32 %v5_13158, i32* %r3.global-to-local, align 4
  %v0_1315c = load i32, i32* %r1.global-to-local, align 4
  %v1_1315c = trunc i32 %v0_1315c to i8
  %v3_1315c = inttoptr i32 %v5_13158 to i8*
  store i8 %v1_1315c, i8* %v3_1315c, align 1
  %v4_1315c = load i32, i32* %r3.global-to-local, align 4
  %v5_1315c = add i32 %v4_1315c, 1
  store i32 %v5_1315c, i32* %r3.global-to-local, align 4
  %v0_13160 = load i32, i32* %r1.global-to-local, align 4
  %v1_13160 = trunc i32 %v0_13160 to i8
  %v3_13160 = inttoptr i32 %v5_1315c to i8*
  store i8 %v1_13160, i8* %v3_13160, align 1
  %v4_13160 = load i32, i32* %r3.global-to-local, align 4
  %v5_13160 = add i32 %v4_13160, 1
  store i32 %v5_13160, i32* %r3.global-to-local, align 4
  %v0_13164 = load i32, i32* %r1.global-to-local, align 4
  %v1_13164 = trunc i32 %v0_13164 to i8
  %v3_13164 = inttoptr i32 %v5_13160 to i8*
  store i8 %v1_13164, i8* %v3_13164, align 1
  %v4_13164 = load i32, i32* %r3.global-to-local, align 4
  %v5_13164 = add i32 %v4_13164, 1
  store i32 %v5_13164, i32* %r3.global-to-local, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v6_13100, { 1, 0 }
  uselistorder i32 %v12_1312c, { 1, 2, 0 }
  uselistorder i32 %v0_1310054, { 0, 1, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_130f8.pr, { 0, 2, 1 }
  uselistorder i32 %v6_130e8, { 2, 3, 0, 4, 1 }
  uselistorder i32 %v5_130dc, { 1, 0 }
  uselistorder i32 %v0_130d4, { 1, 0, 2, 3 }
  uselistorder i32 %tmp, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 19, 20, 17, 14, 15, 16, 13, 18, 21, 22 }
  uselistorder i32* %r2.global-to-local, { 1, 9, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 8, 14, 0 }
  uselistorder i32* %ip.global-to-local, { 4, 1, 2, 3, 0, 5 }
  uselistorder i1* %cpsr_z.global-to-local, { 6, 4, 3, 5, 2, 1, 8, 7, 0, 9 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_13138, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_13110, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @function_13170(i32 %arg1, i8* %arg2) local_unnamed_addr {
dec_label_pc_13170:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_13170 = sub i32 %arg1, %tmp
  %v1_13174 = add i32 %v2_13170, -1
  store i32 %v1_13174, i32* %r2.global-to-local, align 4
  %v2_131784 = load i8, i8* %arg2, align 1
  %v5_131786 = add i32 %tmp, 1
  store i32 %v5_131786, i32* %r1.global-to-local, align 4
  %v2_1317c7 = icmp eq i8 %v2_131784, 0
  store i1 %v2_1317c7, i1* %cpsr_z.global-to-local, align 1
  %v5_131808 = inttoptr i32 %arg1 to i8*
  store i8 %v2_131784, i8* %v5_131808, align 1
  %v0_131849 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_131849, label %dec_label_pc_13188, label %dec_label_pc_13178.dec_label_pc_13178_crit_edge

dec_label_pc_13178.dec_label_pc_13178_crit_edge:  ; preds = %dec_label_pc_13170, %dec_label_pc_13178.dec_label_pc_13178_crit_edge
  %v0_13178.pre = load i32, i32* %r1.global-to-local, align 4
  %v3_13180.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_13178 = inttoptr i32 %v0_13178.pre to i8*
  %v2_13178 = load i8, i8* %v1_13178, align 1
  %v5_13178 = add i32 %v0_13178.pre, 1
  store i32 %v5_13178, i32* %r1.global-to-local, align 4
  %v2_1317c = icmp eq i8 %v2_13178, 0
  store i1 %v2_1317c, i1* %cpsr_z.global-to-local, align 1
  %v4_13180 = add i32 %v5_13178, %v3_13180.pre
  %v5_13180 = inttoptr i32 %v4_13180 to i8*
  store i8 %v2_13178, i8* %v5_13180, align 1
  %v0_13184 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13184, label %dec_label_pc_13188, label %dec_label_pc_13178.dec_label_pc_13178_crit_edge

dec_label_pc_13188:                               ; preds = %dec_label_pc_13178.dec_label_pc_13178_crit_edge, %dec_label_pc_13170
  ret i32 %arg1

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 3, 2, 1, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13178.dec_label_pc_13178_crit_edge, { 1, 0 }
}

define i32 @function_1318c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1318c:
  %stack_var_-8 = alloca i32, align 4
  %v2_13190 = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_13190, i32* @r1, align 4
  %v0_13198 = call i32 @function_15150()
  %v2_1319c = icmp eq i32 %v0_13198, 0
  br i1 %v2_1319c, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_1318c
  %v3_131a4 = load i32, i32* %stack_var_-8, align 4
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_1318c, %bb
  %v5_131ac = phi i32 [ -1, %dec_label_pc_1318c ], [ %v3_131a4, %bb ]
  ret i32 %v5_131ac

; uselistorder directives
  uselistorder label %bb4, { 1, 0 }
}

define i32 @function_131b0(i32 %arg1, %sockaddr* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_131b0:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_131b0 = load i32, i32* @r4, align 4
  store i32 %v3_131b0, i32* %stack_var_-8, align 4
  %v5_131b4 = call i32 @bind(i32 %arg1, %sockaddr* %arg2, i32 %arg3)
  store i32 %v5_131b4, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_131b4, -4095
  br i1 %tmp, label %dec_label_pc_131d4, label %dec_label_pc_131c4

dec_label_pc_131c4:                               ; preds = %dec_label_pc_131b0
  %v0_131c4 = call i32 @function_13070()
  %v0_131c8 = load i32, i32* %r4.global-to-local, align 4
  %v1_131c8 = sub i32 0, %v0_131c8
  %v2_131cc = inttoptr i32 %v0_131c4 to i32*
  store i32 %v1_131c8, i32* %v2_131cc, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_131d4

dec_label_pc_131d4:                               ; preds = %dec_label_pc_131b0, %dec_label_pc_131c4
  %v0_131d4 = phi i32 [ %v5_131b4, %dec_label_pc_131b0 ], [ -1, %dec_label_pc_131c4 ]
  %v2_131d8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_131d8, i32* @r4, align 4
  ret i32 %v0_131d4

; uselistorder directives
  uselistorder i32 %v5_131b4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_131d4, { 1, 0 }
}

define i32 @function_131dc(i32 %arg1, %sockaddr* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_131dc:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_131dc = load i32, i32* @r4, align 4
  store i32 %v3_131dc, i32* %stack_var_-8, align 4
  %v5_131e0 = call i32 @connect(i32 %arg1, %sockaddr* %arg2, i32 %arg3)
  store i32 %v5_131e0, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_131e0, -4095
  br i1 %tmp, label %dec_label_pc_13200, label %dec_label_pc_131f0

dec_label_pc_131f0:                               ; preds = %dec_label_pc_131dc
  %v0_131f0 = call i32 @function_13070()
  %v0_131f4 = load i32, i32* %r4.global-to-local, align 4
  %v1_131f4 = sub i32 0, %v0_131f4
  %v2_131f8 = inttoptr i32 %v0_131f0 to i32*
  store i32 %v1_131f4, i32* %v2_131f8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13200

dec_label_pc_13200:                               ; preds = %dec_label_pc_131dc, %dec_label_pc_131f0
  %v0_13200 = phi i32 [ %v5_131e0, %dec_label_pc_131dc ], [ -1, %dec_label_pc_131f0 ]
  %v2_13204 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13204, i32* @r4, align 4
  ret i32 %v0_13200

; uselistorder directives
  uselistorder i32 %v5_131e0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13200, { 1, 0 }
}

define i32 @function_13208(i32 %arg1, %sockaddr* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13208:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13208 = load i32, i32* @r4, align 4
  store i32 %v3_13208, i32* %stack_var_-8, align 4
  %v5_1320c = inttoptr i32 %arg3 to i32*
  %v6_1320c = call i32 @getsockname(i32 %arg1, %sockaddr* %arg2, i32* %v5_1320c)
  store i32 %v6_1320c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v6_1320c, -4095
  br i1 %tmp, label %dec_label_pc_1322c, label %dec_label_pc_1321c

dec_label_pc_1321c:                               ; preds = %dec_label_pc_13208
  %v0_1321c = call i32 @function_13070()
  %v0_13220 = load i32, i32* %r4.global-to-local, align 4
  %v1_13220 = sub i32 0, %v0_13220
  %v2_13224 = inttoptr i32 %v0_1321c to i32*
  store i32 %v1_13220, i32* %v2_13224, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1322c

dec_label_pc_1322c:                               ; preds = %dec_label_pc_13208, %dec_label_pc_1321c
  %v0_1322c = phi i32 [ %v6_1320c, %dec_label_pc_13208 ], [ -1, %dec_label_pc_1321c ]
  %v2_13230 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13230, i32* @r4, align 4
  ret i32 %v0_1322c

; uselistorder directives
  uselistorder i32 %v6_1320c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1322c, { 1, 0 }
}

define i32 @function_13234(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_13234:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13234 = load i32, i32* @r4, align 4
  store i32 %v3_13234, i32* %stack_var_-8, align 4
  store i32 %arg5, i32* %r4.global-to-local, align 4
  %v5_1323c = call i32 @getsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32* null)
  store i32 %v5_1323c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_1323c, -4095
  br i1 %tmp, label %dec_label_pc_1325c, label %dec_label_pc_1324c

dec_label_pc_1324c:                               ; preds = %dec_label_pc_13234
  %v0_1324c = call i32 @function_13070()
  %v0_13250 = load i32, i32* %r4.global-to-local, align 4
  %v1_13250 = sub i32 0, %v0_13250
  %v2_13254 = inttoptr i32 %v0_1324c to i32*
  store i32 %v1_13250, i32* %v2_13254, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1325c

dec_label_pc_1325c:                               ; preds = %dec_label_pc_13234, %dec_label_pc_1324c
  %v0_1325c = phi i32 [ %v5_1323c, %dec_label_pc_13234 ], [ -1, %dec_label_pc_1324c ]
  %v2_13260 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13260, i32* @r4, align 4
  ret i32 %v0_1325c

; uselistorder directives
  uselistorder i32 %v5_1323c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1325c, { 1, 0 }
}

define i32 @function_13264(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13264:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13264 = load i32, i32* @r4, align 4
  store i32 %v3_13264, i32* %stack_var_-8, align 4
  %v2_13268 = call i32 @listen(i32 %arg1, i32 %arg2)
  store i32 %v2_13268, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_13268, -4095
  br i1 %tmp, label %dec_label_pc_13288, label %dec_label_pc_13278

dec_label_pc_13278:                               ; preds = %dec_label_pc_13264
  %v0_13278 = call i32 @function_13070()
  %v0_1327c = load i32, i32* %r4.global-to-local, align 4
  %v1_1327c = sub i32 0, %v0_1327c
  %v2_13280 = inttoptr i32 %v0_13278 to i32*
  store i32 %v1_1327c, i32* %v2_13280, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13288

dec_label_pc_13288:                               ; preds = %dec_label_pc_13264, %dec_label_pc_13278
  %v0_13288 = phi i32 [ %v2_13268, %dec_label_pc_13264 ], [ -1, %dec_label_pc_13278 ]
  %v2_1328c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1328c, i32* @r4, align 4
  ret i32 %v0_13288

; uselistorder directives
  uselistorder i32 %v2_13268, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13288, { 1, 0 }
}

define i32 @function_13290(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_13290:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13290 = load i32, i32* @r4, align 4
  store i32 %v3_13290, i32* %stack_var_-8, align 4
  %v5_13294 = call i32 @recv(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4)
  store i32 %v5_13294, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_13294, -4095
  br i1 %tmp, label %dec_label_pc_132b4, label %dec_label_pc_132a4

dec_label_pc_132a4:                               ; preds = %dec_label_pc_13290
  %v0_132a4 = call i32 @function_13070()
  %v0_132a8 = load i32, i32* %r4.global-to-local, align 4
  %v1_132a8 = sub i32 0, %v0_132a8
  %v2_132ac = inttoptr i32 %v0_132a4 to i32*
  store i32 %v1_132a8, i32* %v2_132ac, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_132b4

dec_label_pc_132b4:                               ; preds = %dec_label_pc_13290, %dec_label_pc_132a4
  %v0_132b4 = phi i32 [ %v5_13294, %dec_label_pc_13290 ], [ -1, %dec_label_pc_132a4 ]
  %v2_132b8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_132b8, i32* @r4, align 4
  ret i32 %v0_132b4

; uselistorder directives
  uselistorder i32 %v5_13294, { 1, 0, 2 }
  uselistorder label %dec_label_pc_132b4, { 1, 0 }
}

define i32 @function_132bc(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_132bc:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_132bc = load i32, i32* @r4, align 4
  store i32 %v3_132bc, i32* %stack_var_-12, align 4
  store i32 %arg5, i32* %r4.global-to-local, align 4
  %v5_132c8 = call i32 @recvfrom(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, %sockaddr* null, i32* null)
  store i32 %v5_132c8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_132c8, -4095
  br i1 %tmp, label %dec_label_pc_132e8, label %dec_label_pc_132d8

dec_label_pc_132d8:                               ; preds = %dec_label_pc_132bc
  %v0_132d8 = call i32 @function_13070()
  %v0_132dc = load i32, i32* %r4.global-to-local, align 4
  %v1_132dc = sub i32 0, %v0_132dc
  %v2_132e0 = inttoptr i32 %v0_132d8 to i32*
  store i32 %v1_132dc, i32* %v2_132e0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_132e8

dec_label_pc_132e8:                               ; preds = %dec_label_pc_132bc, %dec_label_pc_132d8
  %v0_132e8 = phi i32 [ %v5_132c8, %dec_label_pc_132bc ], [ -1, %dec_label_pc_132d8 ]
  %v2_132ec = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_132ec, i32* @r4, align 4
  ret i32 %v0_132e8

; uselistorder directives
  uselistorder i32 %v5_132c8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_132e8, { 1, 0 }
}

define i32 @function_132f0(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_132f0:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_132f0 = load i32, i32* @r4, align 4
  store i32 %v3_132f0, i32* %stack_var_-8, align 4
  %v5_132f4 = call i32 @send(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4)
  store i32 %v5_132f4, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_132f4, -4095
  br i1 %tmp, label %dec_label_pc_13314, label %dec_label_pc_13304

dec_label_pc_13304:                               ; preds = %dec_label_pc_132f0
  %v0_13304 = call i32 @function_13070()
  %v0_13308 = load i32, i32* %r4.global-to-local, align 4
  %v1_13308 = sub i32 0, %v0_13308
  %v2_1330c = inttoptr i32 %v0_13304 to i32*
  store i32 %v1_13308, i32* %v2_1330c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13314

dec_label_pc_13314:                               ; preds = %dec_label_pc_132f0, %dec_label_pc_13304
  %v0_13314 = phi i32 [ %v5_132f4, %dec_label_pc_132f0 ], [ -1, %dec_label_pc_13304 ]
  %v2_13318 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13318, i32* @r4, align 4
  ret i32 %v0_13314

; uselistorder directives
  uselistorder i32 %v5_132f4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13314, { 1, 0 }
}

define i32 @function_1331c(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1331c:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg5, i32* %r4.global-to-local, align 4
  %v5_13328 = call i32 @sendto(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, %sockaddr* null, i32 0)
  store i32 %v5_13328, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_13328, -4095
  br i1 %tmp, label %dec_label_pc_13348, label %dec_label_pc_13338

dec_label_pc_13338:                               ; preds = %dec_label_pc_1331c
  %v0_13338 = call i32 @function_13070()
  %v0_1333c = load i32, i32* %r4.global-to-local, align 4
  %v1_1333c = sub i32 0, %v0_1333c
  %v2_13340 = inttoptr i32 %v0_13338 to i32*
  store i32 %v1_1333c, i32* %v2_13340, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13348

dec_label_pc_13348:                               ; preds = %dec_label_pc_1331c, %dec_label_pc_13338
  %v0_13348 = phi i32 [ %v5_13328, %dec_label_pc_1331c ], [ -1, %dec_label_pc_13338 ]
  ret i32 %v0_13348

; uselistorder directives
  uselistorder i32 %v5_13328, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13348, { 1, 0 }
}

define i32 @function_13350(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_13350:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13350 = load i32, i32* @r4, align 4
  store i32 %v3_13350, i32* %stack_var_-8, align 4
  store i32 %arg5, i32* %r4.global-to-local, align 4
  %v5_13358 = call i32 @setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32 0)
  store i32 %v5_13358, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_13358, -4095
  br i1 %tmp, label %dec_label_pc_13378, label %dec_label_pc_13368

dec_label_pc_13368:                               ; preds = %dec_label_pc_13350
  %v0_13368 = call i32 @function_13070()
  %v0_1336c = load i32, i32* %r4.global-to-local, align 4
  %v1_1336c = sub i32 0, %v0_1336c
  %v2_13370 = inttoptr i32 %v0_13368 to i32*
  store i32 %v1_1336c, i32* %v2_13370, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13378

dec_label_pc_13378:                               ; preds = %dec_label_pc_13350, %dec_label_pc_13368
  %v0_13378 = phi i32 [ %v5_13358, %dec_label_pc_13350 ], [ -1, %dec_label_pc_13368 ]
  %v2_1337c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1337c, i32* @r4, align 4
  ret i32 %v0_13378

; uselistorder directives
  uselistorder i32 %v5_13358, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13378, { 1, 0 }
}

define i32 @function_13380(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13380:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13380 = load i32, i32* @r4, align 4
  store i32 %v3_13380, i32* %stack_var_-8, align 4
  %v3_13384 = call i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_13384, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v3_13384, -4095
  br i1 %tmp, label %dec_label_pc_133a4, label %dec_label_pc_13394

dec_label_pc_13394:                               ; preds = %dec_label_pc_13380
  %v0_13394 = call i32 @function_13070()
  %v0_13398 = load i32, i32* %r4.global-to-local, align 4
  %v1_13398 = sub i32 0, %v0_13398
  %v2_1339c = inttoptr i32 %v0_13394 to i32*
  store i32 %v1_13398, i32* %v2_1339c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_133a4

dec_label_pc_133a4:                               ; preds = %dec_label_pc_13380, %dec_label_pc_13394
  %v0_133a4 = phi i32 [ %v3_13384, %dec_label_pc_13380 ], [ -1, %dec_label_pc_13394 ]
  %v2_133a8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_133a8, i32* @r4, align 4
  ret i32 %v0_133a4

; uselistorder directives
  uselistorder i32 %v3_13384, { 1, 0, 2 }
  uselistorder label %dec_label_pc_133a4, { 1, 0 }
}

define i32 @function_133ac(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_133ac:
  store i32 %arg1, i32* @r1, align 4
  %tmp2 = icmp slt i32 %arg1, 1
  br i1 %tmp2, label %dec_label_pc_133c8, label %dec_label_pc_133b8

dec_label_pc_133b8:                               ; preds = %dec_label_pc_133ac
  %v8_133bc = icmp sgt i32 %arg1, 64
  br i1 %v8_133bc, label %dec_label_pc_133c8, label %dec_label_pc_133c0

dec_label_pc_133c0:                               ; preds = %dec_label_pc_133b8
  %v0_133c4 = call i32 @function_134d0()
  br label %dec_label_pc_133c8

dec_label_pc_133c8:                               ; preds = %dec_label_pc_133b8, %dec_label_pc_133ac, %dec_label_pc_133c0
  %v0_133c8 = call i32 @function_13070()
  %v2_133d0 = inttoptr i32 %v0_133c8 to i32*
  store i32 22, i32* %v2_133d0, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_133c8, { 2, 0, 1 }
}

define i32 @function_133dc(i32 %arg1) local_unnamed_addr {
dec_label_pc_133dc:
  store i32 128, i32* @r2, align 4
  %v0_133e8 = load i32, i32* @r0, align 4
  %v2_133e8 = inttoptr i32 %v0_133e8 to i8*
  %v3_133e8 = call i32 @function_130d0(i8* %v2_133e8, i32 0)
  ret i32 0
}

define i32 @function_133f4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_133f4:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_133f4 = load i32, i32* @r4, align 4
  store i32 %v3_133f4, i32* %stack_var_-12, align 4
  %v6_133f4 = load i32, i32* @r5, align 4
  %v10_133f4 = ptrtoint i32* %stack_var_-12 to i32
  %v7_133f8 = icmp eq i32 %arg2, -1
  %v0_13404.pre = load i32, i32* %r0.global-to-local, align 4
  br i1 %v7_133f8, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_133f4
  br label %dec_label_pc_1341c

bb:                                               ; preds = %dec_label_pc_133f4
  %v2_13400 = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v0_13404.pre, i32* @r4, align 4
  %tmp19 = icmp slt i32 %v0_13404.pre, 1
  br i1 %tmp19, label %dec_label_pc_1341c, label %dec_label_pc_1340c

dec_label_pc_1340c:                               ; preds = %bb
  %v7_13410 = icmp sgt i32 %v0_13404.pre, 64
  br i1 %v7_13410, label %dec_label_pc_1341c, label %bb20

bb20:                                             ; preds = %dec_label_pc_1340c
  store i32 %arg2, i32* %stack_var_-152, align 4
  store i32 31, i32* %r0.global-to-local, align 4
  %v5_1344024 = add i32 %v10_133f4, 124
  store i32 %v5_1344024, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13430

dec_label_pc_1341c:                               ; preds = %.thread, %dec_label_pc_1340c, %bb
  %v0_1341c = call i32 @function_13070()
  store i32 %v0_1341c, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_13428 = inttoptr i32 %v0_1341c to i32*
  store i32 22, i32* %v2_13428, align 4
  %v0_1349c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1349c

dec_label_pc_13430:                               ; preds = %bb20, %dec_label_pc_13430
  %v5_1344025 = phi i32 [ %v5_1344024, %bb20 ], [ %v5_13440, %dec_label_pc_13430 ]
  %v2_13434 = add i32 %v5_1344025, -136
  %v3_13434 = inttoptr i32 %v2_13434 to i32*
  store i32 0, i32* %v3_13434, align 4
  %v0_13438.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_13438 = add i32 %v0_13438.pre, -1
  store i32 %v1_13438, i32* %r0.global-to-local, align 4
  %v6_13438 = icmp slt i32 %v1_13438, 0
  %v4_13440 = mul i32 %v1_13438, 4
  %v5_13440 = add i32 %v4_13440, %v10_133f4
  store i32 %v5_13440, i32* %r2.global-to-local, align 4
  br i1 %v6_13438, label %dec_label_pc_13448, label %dec_label_pc_13430

dec_label_pc_13448:                               ; preds = %dec_label_pc_13430
  %v2_13448 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_13448, i32* @r5, align 4
  %v2_1344c = ptrtoint i32* %stack_var_-148 to i32
  store i32 %v2_1344c, i32* @r0, align 4
  %v0_13450 = load i32, i32* @r4, align 4
  store i32 %v0_13450, i32* @r1, align 4
  %v0_13454 = call i32 @function_134d0()
  store i32 %v0_13454, i32* %r0.global-to-local, align 4
  %v1_13458 = icmp slt i32 %v0_13454, 0
  br i1 %v1_13458, label %dec_label_pc_13498, label %dec_label_pc_13460

dec_label_pc_13460:                               ; preds = %dec_label_pc_13448
  %v0_13460 = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_1dba0.382 to i32), i32* %r0.global-to-local, align 4
  %v2_13468 = call i32 @function_134ac(i32 ptrtoint (i32* @global_var_1dba0.382 to i32), i32 %v0_13460)
  store i32 %v2_13400, i32* %r2.global-to-local, align 4
  %v0_13480 = load i32, i32* @r4, align 4
  store i32 %v0_13480, i32* %r0.global-to-local, align 4
  %v4_13488 = call i32 @function_14398(i32 %v0_13480, i32* nonnull %stack_var_-152, i32 %v2_13400)
  store i32 %v4_13488, i32* %r0.global-to-local, align 4
  %v1_1348c = icmp slt i32 %v4_13488, 0
  br i1 %v1_1348c, label %dec_label_pc_13498, label %bb23

bb23:                                             ; preds = %dec_label_pc_13460
  %v5_13490 = load i32, i32* %stack_var_-292, align 4
  store i32 %v5_13490, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1349c

dec_label_pc_13498:                               ; preds = %dec_label_pc_13460, %dec_label_pc_13448
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1349c

dec_label_pc_1349c:                               ; preds = %bb23, %dec_label_pc_1341c, %dec_label_pc_13498
  %v0_1349c = phi i32 [ %v5_13490, %bb23 ], [ %v0_1349c.pre, %dec_label_pc_1341c ], [ -1, %dec_label_pc_13498 ]
  store i32 %v0_1349c, i32* %r0.global-to-local, align 4
  %v2_134a4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_134a4, i32* @r4, align 4
  store i32 %v6_133f4, i32* @r5, align 4
  ret i32 %v0_1349c

; uselistorder directives
  uselistorder i32 %v0_1349c, { 1, 0 }
  uselistorder i32 %v5_13440, { 1, 0 }
  uselistorder i32 %v1_13438, { 0, 2, 1 }
  uselistorder i32 %v2_13400, { 1, 0 }
  uselistorder i32 %v0_13404.pre, { 1, 0, 2 }
  uselistorder i32 %v10_133f4, { 1, 0 }
  uselistorder i32* %stack_var_-12, { 0, 2, 1 }
  uselistorder i32* %stack_var_-152, { 0, 2, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 3, 5, 7, 6, 9, 8, 10, 0, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_1349c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13430, { 1, 0 }
  uselistorder label %dec_label_pc_1341c, { 1, 2, 0 }
}

define i32 @function_134ac(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_134ac:
  %v1_134ac = add i32 %arg2, -1
  %v3_134b0 = udiv i32 %v1_134ac, 32
  %v4_134b4 = mul nuw nsw i32 %v3_134b0, 4
  %v5_134b4 = add i32 %v4_134b4, %arg1
  %v6_134b4 = inttoptr i32 %v5_134b4 to i32*
  %v7_134b4 = load i32, i32* %v6_134b4, align 4
  %v1_134b8 = urem i32 %v1_134ac, 32
  %v7_134c0 = shl i32 1, %v1_134b8
  %v8_134c0 = and i32 %v7_134b4, %v7_134c0
  %v10_134c0 = icmp ne i32 %v8_134c0, 0
  %. = zext i1 %v10_134c0 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v1_134ac, { 1, 0 }
}

define i32 @function_134d0() local_unnamed_addr {
dec_label_pc_134d0:
  %v0_134d0 = load i32, i32* @r1, align 4
  %v1_134d0 = add i32 %v0_134d0, -1
  %v3_134d4 = udiv i32 %v1_134d0, 32
  store i32 %v3_134d4, i32* @ip, align 4
  %v0_134d8 = load i32, i32* @r0, align 4
  %v4_134d8 = mul nuw nsw i32 %v3_134d4, 4
  %v5_134d8 = add i32 %v0_134d8, %v4_134d8
  %v6_134d8 = inttoptr i32 %v5_134d8 to i32*
  %v7_134d8 = load i32, i32* %v6_134d8, align 4
  %v1_134dc = urem i32 %v1_134d0, 32
  %v7_134e4 = shl i32 1, %v1_134dc
  %v8_134e4 = or i32 %v7_134d8, %v7_134e4
  store i32 %v8_134e4, i32* %v6_134d8, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_134d4, { 1, 0 }
  uselistorder i32 %v1_134d0, { 1, 0 }
}

define i32 @function_134f4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_134f4:
  %v1_134f4 = add i32 %arg2, -1
  %v3_134f8 = udiv i32 %v1_134f4, 32
  %v4_134fc = mul nuw nsw i32 %v3_134f8, 4
  %v5_134fc = add i32 %v4_134fc, %arg1
  %v6_134fc = inttoptr i32 %v5_134fc to i32*
  %v7_134fc = load i32, i32* %v6_134fc, align 4
  %v1_13500 = urem i32 %v1_134f4, 32
  %tmp = shl i32 -1, %v1_13500
  %v8_13508 = add i32 %tmp, -1
  %v9_13508 = and i32 %v7_134fc, %v8_13508
  store i32 %v9_13508, i32* %v6_134fc, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_134f4, { 1, 0 }
}

define i32 @function_13518(i32 %arg1) local_unnamed_addr {
dec_label_pc_13518:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_13518 = load i32, i32* @r4, align 4
  %v6_13518 = load i32, i32* @r5, align 4
  %v9_13518 = load i32, i32* @r6, align 4
  %v0_1351c = load i32, i32* %r0.global-to-local, align 4
  %v2_1351c = icmp eq i32 %v0_1351c, 0
  %v2_13520 = ptrtoint i32* %stack_var_-20 to i32
  br i1 %v2_1351c, label %bb, label %dec_label_pc_1352c

bb:                                               ; preds = %dec_label_pc_13518
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13534

dec_label_pc_1352c:                               ; preds = %dec_label_pc_13518
  %tmp = icmp ugt i32 %v0_1351c, -8
  br i1 %tmp, label %dec_label_pc_13638, label %dec_label_pc_13534

dec_label_pc_13534:                               ; preds = %bb, %dec_label_pc_1352c
  %v0_13534 = phi i32 [ %v0_1351c, %dec_label_pc_1352c ], [ 1, %bb ]
  %v1_13534 = add i32 %v0_13534, 4
  store i32 %v1_13534, i32* %stack_var_-20, align 4
  store i32 %v2_13520, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_1da38.384 to i32), i32* %r0.global-to-local, align 4
  %v1_1354c = call i32 @function_140ac()
  store i32 ptrtoint (i32** @global_var_1d87c.388 to i32), i32* %r0.global-to-local, align 4
  %v3_13558 = call i32 @function_138cc(i32* bitcast (i32** @global_var_1d87c.388 to i32*), i32 %v2_13520)
  store i32 %v3_13558, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1da38.384 to i32), i32* %r0.global-to-local, align 4
  store i32 79216, i32* @lr, align 4
  %v1_1356c = call i32 @function_140ac()
  store i32 %v1_1356c, i32* %r0.global-to-local, align 4
  %v2_13570 = icmp eq i32 %v3_13558, 0
  br i1 %v2_13570, label %dec_label_pc_13578, label %dec_label_pc_13628

dec_label_pc_13578:                               ; preds = %dec_label_pc_13534
  %v2_1357c = load i32, i32* @global_var_1da60.391, align 4
  store i32 %v2_1357c, i32* @r4, align 4
  %v2_13580 = load i32, i32* %stack_var_-20, align 4
  %v3_13584 = icmp ult i32 %v2_13580, %v2_1357c
  br i1 %v3_13584, label %.thread3, label %bb14

bb14:                                             ; preds = %dec_label_pc_13578
  %v3_13588 = add i32 %v2_1357c, -1
  %v2_1358c = add i32 %v3_13588, %v2_13580
  %v2_13590 = sub i32 0, %v2_1357c
  %v3_13594 = and i32 %v2_1358c, %v2_13590
  store i32 %v3_13594, i32* @r4, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_13578, %bb14
  store i32 ptrtoint (i32* @global_var_1dc20.393 to i32), i32* %r0.global-to-local, align 4
  %v1_135a0 = call i32 @function_140ac()
  %v0_135a4 = load i32, i32* @r4, align 4
  store i32 %v0_135a4, i32* %r0.global-to-local, align 4
  %v1_135a8 = call i32 @function_14860(i32 %v0_135a4)
  store i32 %v1_135a8, i32* %r0.global-to-local, align 4
  %v7_135ac = icmp eq i32 %v1_135a8, -1
  br i1 %v7_135ac, label %bb15, label %dec_label_pc_135b8

bb15:                                             ; preds = %.thread3
  store i32 %v1_135a8, i32* @r5, align 4
  br label %dec_label_pc_135cc

dec_label_pc_135b8:                               ; preds = %.thread3
  %v1_135b8 = add i32 %v1_135a8, 3
  %v1_135bc = and i32 %v1_135b8, -4
  store i32 %v1_135bc, i32* @r5, align 4
  %v9_135c0 = icmp eq i32 %v1_135bc, %v1_135a8
  br i1 %v9_135c0, label %bb17, label %bb16

bb16:                                             ; preds = %dec_label_pc_135b8
  %v3_135c4 = sub i32 %v1_135bc, %v1_135a8
  store i32 %v3_135c4, i32* %r0.global-to-local, align 4
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_135b8, %bb16
  %v1_135c8 = xor i1 %v9_135c0, true
  call void @__pseudo_cond_branch(i1 %v1_135c8, i32 ptrtoint (i32* @global_var_14860.394 to i32))
  br label %dec_label_pc_135cc

dec_label_pc_135cc:                               ; preds = %bb15, %bb17
  store i32 ptrtoint (i32* @global_var_1dc20.393 to i32), i32* %r0.global-to-local, align 4
  store i32 79324, i32* @lr, align 4
  %v1_135d8 = call i32 @function_140ac()
  store i32 %v1_135d8, i32* %r0.global-to-local, align 4
  %v0_135dc = load i32, i32* @r5, align 4
  %v7_135dc = icmp eq i32 %v0_135dc, -1
  br i1 %v7_135dc, label %dec_label_pc_13638, label %dec_label_pc_135e4

dec_label_pc_135e4:                               ; preds = %dec_label_pc_135cc
  store i32 ptrtoint (i32* @global_var_1da38.384 to i32), i32* %r0.global-to-local, align 4
  %v1_135f0 = call i32 @function_140ac()
  %v0_135f4 = load i32, i32* @r4, align 4
  %v0_135f8 = load i32, i32* @r5, align 4
  store i32 ptrtoint (i32** @global_var_1d87c.388 to i32), i32* %r0.global-to-local, align 4
  %v4_13600 = call i32 @function_13a20(i32* bitcast (i32** @global_var_1d87c.388 to i32*), i32 %v0_135f8, i32 %v0_135f4)
  store i32 ptrtoint (i32** @global_var_1d87c.388 to i32), i32* %r0.global-to-local, align 4
  %v3_1360c = call i32 @function_138cc(i32* bitcast (i32** @global_var_1d87c.388 to i32*), i32 %v2_13520)
  store i32 %v3_1360c, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1da38.384 to i32), i32* %r0.global-to-local, align 4
  store i32 79392, i32* @lr, align 4
  %v1_1361c = call i32 @function_140ac()
  store i32 %v1_1361c, i32* %r0.global-to-local, align 4
  %v2_13620 = icmp eq i32 %v3_1360c, 0
  br i1 %v2_13620, label %dec_label_pc_13638, label %dec_label_pc_13628

dec_label_pc_13628:                               ; preds = %dec_label_pc_13534, %dec_label_pc_135e4
  %v1_1362c = phi i32 [ %v3_13558, %dec_label_pc_13534 ], [ %v3_1360c, %dec_label_pc_135e4 ]
  %v2_13628 = load i32, i32* %stack_var_-20, align 4
  %v2_1362c = inttoptr i32 %v1_1362c to i32*
  store i32 %v2_13628, i32* %v2_1362c, align 4
  %v3_1362c = load i32, i32* %r4.global-to-local, align 4
  %v4_1362c = add i32 %v3_1362c, 4
  store i32 %v4_1362c, i32* %r4.global-to-local, align 4
  %v2_13630 = icmp eq i32 %v4_1362c, 0
  br i1 %v2_13630, label %dec_label_pc_13638, label %dec_label_pc_13648

dec_label_pc_13638:                               ; preds = %dec_label_pc_13628, %dec_label_pc_135e4, %dec_label_pc_135cc, %dec_label_pc_1352c
  %v0_13638 = call i32 @function_13070()
  store i32 %v0_13638, i32* %r0.global-to-local, align 4
  %v2_13640 = inttoptr i32 %v0_13638 to i32*
  store i32 12, i32* %v2_13640, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13648

dec_label_pc_13648:                               ; preds = %dec_label_pc_13628, %dec_label_pc_13638
  %v0_13648 = phi i32 [ %v4_1362c, %dec_label_pc_13628 ], [ 0, %dec_label_pc_13638 ]
  store i32 %v0_13648, i32* %r0.global-to-local, align 4
  store i32 %v3_13518, i32* @r4, align 4
  store i32 %v6_13518, i32* @r5, align 4
  store i32 %v9_13518, i32* @r6, align 4
  ret i32 %v0_13648

; uselistorder directives
  uselistorder i32 %v0_13648, { 1, 0 }
  uselistorder i32 %v3_1360c, { 1, 0, 2 }
  uselistorder i32 %v1_135bc, { 1, 0, 2 }
  uselistorder i32 %v1_135a8, { 3, 0, 2, 4, 1, 5 }
  uselistorder i32 %v3_13558, { 1, 0, 2 }
  uselistorder i32 %v0_1351c, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 4, 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 18, 19, 2, 6, 7, 8, 9, 3, 11, 10, 5, 13, 12, 4, 14, 15, 16, 17, 0, 1 }
  uselistorder label %dec_label_pc_13648, { 1, 0 }
  uselistorder label %dec_label_pc_13628, { 1, 0 }
  uselistorder label %dec_label_pc_135cc, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_13534, { 1, 0 }
}

define i32 @function_1366c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1366c:
  %stack_var_-12 = alloca i32, align 4
  %v3_1366c = load i32, i32* @r4, align 4
  store i32 %v3_1366c, i32* %stack_var_-12, align 4
  %v6_1366c = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @r5, align 4
  %v2_13674 = mul i32 %arg2, %arg1
  store i32 %v2_13674, i32* @r4, align 4
  store i32 %arg1, i32* @r1, align 4
  %v2_13678 = icmp eq i32 %arg1, 0
  store i32 %v2_13674, i32* @r0, align 4
  br i1 %v2_13678, label %dec_label_pc_136a4, label %dec_label_pc_13684

dec_label_pc_13684:                               ; preds = %dec_label_pc_1366c
  %v0_13684 = call i32 @function_12714()
  %v0_13688 = load i32, i32* @r5, align 4
  %v9_13688 = icmp eq i32 %v0_13688, %v0_13684
  store i32 0, i32* @r5, align 4
  br i1 %v9_13688, label %dec_label_pc_13684.dec_label_pc_136a4_crit_edge, label %dec_label_pc_13694

dec_label_pc_13684.dec_label_pc_136a4_crit_edge:  ; preds = %dec_label_pc_13684
  %v0_136a4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_136a4

dec_label_pc_13694:                               ; preds = %dec_label_pc_13684
  %v0_13694 = call i32 @function_13070()
  %v2_1369c = inttoptr i32 %v0_13694 to i32*
  store i32 12, i32* %v2_1369c, align 4
  br label %dec_label_pc_136bc

dec_label_pc_136a4:                               ; preds = %dec_label_pc_13684.dec_label_pc_136a4_crit_edge, %dec_label_pc_1366c
  %v0_136a4 = phi i32 [ %v0_136a4.pre, %dec_label_pc_13684.dec_label_pc_136a4_crit_edge ], [ %v2_13674, %dec_label_pc_1366c ]
  %v1_136a8 = call i32 @function_13518(i32 %v0_136a4)
  store i32 %v1_136a8, i32* @r5, align 4
  store i32 79548, i32* @lr, align 4
  %v1_136b8 = icmp ne i32 %v1_136a8, 0
  call void @__pseudo_cond_branch(i1 %v1_136b8, i32 ptrtoint (i32* @global_var_130d0.395 to i32))
  br label %dec_label_pc_136bc

dec_label_pc_136bc:                               ; preds = %dec_label_pc_13694, %dec_label_pc_136a4
  %v0_136bc = load i32, i32* @r5, align 4
  %v2_136c0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_136c0, i32* @r4, align 4
  store i32 %v6_1366c, i32* @r5, align 4
  ret i32 %v0_136bc

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_136bc, { 1, 0 }
}

define i32 @function_136c4() local_unnamed_addr {
dec_label_pc_136c4:
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_136c4 = load i32, i32* @r0, align 4
  %v2_136c4 = icmp eq i32 %v0_136c4, 0
  %v3_136c8 = load i32, i32* @r4, align 4
  store i32 %v3_136c8, i32* %stack_var_-24, align 4
  %v6_136c8 = load i32, i32* @r5, align 4
  %v9_136c8 = load i32, i32* @r6, align 4
  %v15_136c8 = load i32, i32* @r8, align 4
  br i1 %v2_136c4, label %bb, label %bb11

bb:                                               ; preds = %dec_label_pc_136c4
  ret i32 0

bb11:                                             ; preds = %dec_label_pc_136c4
  %v1_136d0 = add i32 %v0_136c4, -4
  %v2_136d0 = inttoptr i32 %v1_136d0 to i32*
  %v3_136d0 = load i32, i32* %v2_136d0, align 4
  store i32 %v3_136d0, i32* @r5, align 4
  store i32 ptrtoint (i32** @global_var_1d87c.388 to i32), i32* %r8.global-to-local, align 4
  store i32 %v1_136d0, i32* @r4, align 4
  %v1_136e8 = call i32 @function_140ac()
  %v0_136ec = load i32, i32* @r4, align 4
  %v0_136f0 = load i32, i32* @r5, align 4
  %v4_136f8 = call i32 @function_13a20(i32* bitcast (i32** @global_var_1d87c.388 to i32*), i32 %v0_136ec, i32 %v0_136f0)
  %v1_13700 = inttoptr i32 %v4_136f8 to i32*
  %v2_13700 = load i32, i32* %v1_13700, align 4
  store i32 %v2_13700, i32* %r6.global-to-local, align 4
  %v2_13704 = load i32, i32* @global_var_1da60.391, align 4
  %v4_13708 = mul i32 %v2_13704, 8
  %v6_13708 = icmp ult i32 %v2_13700, %v4_13708
  store i32 %v4_136f8, i32* @r4, align 4
  br i1 %v6_13708, label %dec_label_pc_13748, label %dec_label_pc_13714

dec_label_pc_13714:                               ; preds = %bb11
  %v1_1371c = call i32 @function_140ac()
  %v1_13724 = call i32 @function_14860(i32 0)
  %v0_13728 = load i32, i32* @r4, align 4
  %v1_13728 = add i32 %v0_13728, 12
  store i32 %v1_13728, i32* @r5, align 4
  %v9_1372c = icmp eq i32 %v1_13728, %v1_13724
  br i1 %v9_1372c, label %dec_label_pc_13750, label %dec_label_pc_13734

dec_label_pc_13734:                               ; preds = %dec_label_pc_13714
  %v1_13740 = call i32 @function_140ac()
  br label %dec_label_pc_13748

dec_label_pc_13748:                               ; preds = %bb11, %dec_label_pc_13734, %bb14
  %v2_13748 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_13748, i32* @r4, align 4
  store i32 %v6_136c8, i32* @r5, align 4
  store i32 %v9_136c8, i32* %r6.global-to-local, align 4
  store i32 %v15_136c8, i32* %r8.global-to-local, align 4
  %v0_1374c = call i32 @function_140ac()
  %v0_13750.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_13750

dec_label_pc_13750:                               ; preds = %dec_label_pc_13714, %dec_label_pc_13748
  %v1_13758 = phi i32 [ %v0_13728, %dec_label_pc_13714 ], [ %v0_13750.pre, %dec_label_pc_13748 ]
  %v1_13750 = add i32 %v1_13758, 4
  %v2_13750 = inttoptr i32 %v1_13750 to i32*
  %v3_13750 = load i32, i32* %v2_13750, align 4
  %v2_13754 = icmp eq i32 %v3_13750, 0
  br i1 %v2_13754, label %.thread, label %bb12

bb12:                                             ; preds = %dec_label_pc_13750
  %v2_13758 = add i32 %v1_13758, 8
  %v3_13758 = inttoptr i32 %v2_13758 to i32*
  %v4_13758 = load i32, i32* %v3_13758, align 4
  %v3_1375c = add i32 %v3_13750, 8
  %v4_1375c = inttoptr i32 %v3_1375c to i32*
  store i32 %v4_13758, i32* %v4_1375c, align 4
  %v0_13760.pre = load i32, i32* @r4, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_13750, %bb12
  %v0_13760 = phi i32 [ %v1_13758, %dec_label_pc_13750 ], [ %v0_13760.pre, %bb12 ]
  %v1_13760 = add i32 %v0_13760, 8
  %v2_13760 = inttoptr i32 %v1_13760 to i32*
  %v3_13760 = load i32, i32* %v2_13760, align 4
  %v1_13764 = add i32 %v0_13760, 4
  %v2_13764 = inttoptr i32 %v1_13764 to i32*
  %v3_13764 = load i32, i32* %v2_13764, align 4
  %v2_13768 = icmp eq i32 %v3_13760, 0
  br i1 %v2_13768, label %.thread1, label %bb13

bb13:                                             ; preds = %.thread
  %v3_1376c = add i32 %v3_13760, 4
  %v4_1376c = inttoptr i32 %v3_1376c to i32*
  store i32 %v3_13764, i32* %v4_1376c, align 4
  br label %bb14

.thread1:                                         ; preds = %.thread
  %v2_13770 = load i32, i32* %r8.global-to-local, align 4
  %v3_13770 = inttoptr i32 %v2_13770 to i32*
  store i32 %v3_13764, i32* %v3_13770, align 4
  br label %bb14

bb14:                                             ; preds = %bb13, %.thread1
  %v1_13780 = call i32 @function_140ac()
  %v0_13784 = load i32, i32* %r6.global-to-local, align 4
  %v1_13784 = load i32, i32* @r4, align 4
  %v0_1378c = load i32, i32* @r5, align 4
  %v2_13784 = sub i32 12, %v0_13784
  %v1_13788 = add i32 %v2_13784, %v1_13784
  %v2_1378c = sub i32 %v1_13788, %v0_1378c
  %v1_13790 = call i32 @function_14860(i32 %v2_1378c)
  br label %dec_label_pc_13748

; uselistorder directives
  uselistorder i32 %v0_13760, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_14860, { 2, 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_13750, { 1, 0 }
  uselistorder label %dec_label_pc_13748, { 2, 1, 0 }
}

define i32 @function_137b4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_137b4:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_137b4 = load i32, i32* @r4, align 4
  store i32 %v3_137b4, i32* %stack_var_-24, align 4
  %v6_137b4 = load i32, i32* @r5, align 4
  %v9_137b4 = load i32, i32* @r6, align 4
  %v12_137b4 = load i32, i32* @r7, align 4
  %v15_137b4 = load i32, i32* @r8, align 4
  %v18_137b4 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r4, align 4
  %v2_137b8 = icmp eq i32 %arg2, 0
  %v0_137bc = load i32, i32* @r0, align 4
  store i32 %v0_137bc, i32* @r7, align 4
  br i1 %v2_137b8, label %dec_label_pc_137c4, label %dec_label_pc_137cc

dec_label_pc_137c4:                               ; preds = %dec_label_pc_137b4
  %v0_137c4 = call i32 @function_136c4()
  %v0_137d4.pre = load i32, i32* @r4, align 4
  %v2_137d8.pre = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_137d4

dec_label_pc_137cc:                               ; preds = %dec_label_pc_137b4
  %v2_137cc = icmp eq i32 %v0_137bc, 0
  br i1 %v2_137cc, label %dec_label_pc_137d4, label %dec_label_pc_137e0

dec_label_pc_137d4:                               ; preds = %dec_label_pc_137cc, %dec_label_pc_137c4
  %v2_137d8 = phi i32 [ %v3_137b4, %dec_label_pc_137cc ], [ %v2_137d8.pre, %dec_label_pc_137c4 ]
  %v0_137d4 = phi i32 [ %arg2, %dec_label_pc_137cc ], [ %v0_137d4.pre, %dec_label_pc_137c4 ]
  store i32 %v2_137d8, i32* @r4, align 4
  store i32 %v6_137b4, i32* @r5, align 4
  store i32 %v9_137b4, i32* @r6, align 4
  store i32 %v12_137b4, i32* @r7, align 4
  store i32 %v18_137b4, i32* @lr, align 4
  %v1_137dc = call i32 @function_13518(i32 %v0_137d4)
  %v0_137e0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_137e0

dec_label_pc_137e0:                               ; preds = %dec_label_pc_137cc, %dec_label_pc_137d4
  %v0_137f8 = phi i32 [ %v0_137bc, %dec_label_pc_137cc ], [ %v1_137dc, %dec_label_pc_137d4 ]
  %v0_137e0 = phi i32 [ %arg2, %dec_label_pc_137cc ], [ %v0_137e0.pre, %dec_label_pc_137d4 ]
  %v1_137e0 = add i32 %v0_137e0, 7
  %v1_137e4 = and i32 %v1_137e0, -4
  store i32 %v1_137e4, i32* @r5, align 4
  %v2_137e8 = icmp ugt i32 %v1_137e4, 10
  %v1_137ec = add i32 %v0_137f8, -4
  %v2_137ec = inttoptr i32 %v1_137ec to i32*
  %v3_137ec = load i32, i32* %v2_137ec, align 4
  store i32 %v3_137ec, i32* @r6, align 4
  br i1 %v2_137e8, label %bb14, label %bb

bb:                                               ; preds = %dec_label_pc_137e0
  store i32 12, i32* @r5, align 4
  br label %bb14

bb14:                                             ; preds = %dec_label_pc_137e0, %bb
  %v0_13874 = phi i32 [ %v1_137e4, %dec_label_pc_137e0 ], [ 12, %bb ]
  store i32 %v1_137ec, i32* @r8, align 4
  %tmp = icmp ugt i32 %v0_13874, %v3_137ec
  br i1 %tmp, label %dec_label_pc_13800, label %dec_label_pc_13874

dec_label_pc_13800:                               ; preds = %bb14
  %v2_137f4 = sub i32 %v0_13874, %v3_137ec
  %v1_13810 = call i32 @function_140ac()
  %v0_13818 = load i32, i32* @r8, align 4
  %v1_13818 = load i32, i32* @r6, align 4
  %v2_13818 = add i32 %v1_13818, %v0_13818
  %v4_13820 = call i32 @function_13960(i32* bitcast (i32** @global_var_1d87c.388 to i32*), i32 %v2_13818, i32 %v2_137f4)
  store i32 %v4_13820, i32* @r4, align 4
  store i32 79928, i32* @lr, align 4
  %v1_13834 = call i32 @function_140ac()
  %v0_13838 = load i32, i32* @r4, align 4
  %v2_13838 = icmp eq i32 %v0_13838, 0
  br i1 %v2_13838, label %dec_label_pc_13848, label %.thread

.thread:                                          ; preds = %dec_label_pc_13800
  %v1_1383c = load i32, i32* @r6, align 4
  %v3_1383c = add i32 %v1_1383c, %v0_13838
  %v2_13840 = load i32, i32* @r7, align 4
  %v3_13840 = add i32 %v2_13840, -4
  %v4_13840 = inttoptr i32 %v3_13840 to i32*
  store i32 %v3_1383c, i32* %v4_13840, align 4
  br label %dec_label_pc_138b4

dec_label_pc_13848:                               ; preds = %dec_label_pc_13800
  %v0_13848 = load i32, i32* @r5, align 4
  %v1_13848 = add i32 %v0_13848, -4
  %v1_1384c = call i32 @function_13518(i32 %v1_13848)
  store i32 %v1_1384c, i32* @r0, align 4
  store i32 %v1_1384c, i32* @r4, align 4
  %v2_13850 = icmp eq i32 %v1_1384c, 0
  br i1 %v2_13850, label %dec_label_pc_1386c, label %dec_label_pc_13858

dec_label_pc_13858:                               ; preds = %dec_label_pc_13848
  %v0_13858 = load i32, i32* @r6, align 4
  %v1_13858 = add i32 %v0_13858, -4
  store i32 %v1_13858, i32* @r2, align 4
  %v0_1385c = load i32, i32* @r7, align 4
  store i32 %v0_1385c, i32* @r1, align 4
  %v3_13860 = call i32 @function_130b0(i32 %v1_1384c, i32 %v0_1385c, i32 %v1_13858)
  %v0_13864 = load i32, i32* @r7, align 4
  store i32 %v0_13864, i32* @r0, align 4
  %v0_13868 = call i32 @function_136c4()
  %v0_1386c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1386c

dec_label_pc_1386c:                               ; preds = %dec_label_pc_13848, %dec_label_pc_13858
  %v0_1386c = phi i32 [ 0, %dec_label_pc_13848 ], [ %v0_1386c.pre, %dec_label_pc_13858 ]
  store i32 %v0_1386c, i32* @r7, align 4
  br label %dec_label_pc_138b4

dec_label_pc_13874:                               ; preds = %bb14
  %v1_13874 = add i32 %v0_13874, 28
  %tmp15 = icmp ugt i32 %v1_13874, %v3_137ec
  br i1 %tmp15, label %dec_label_pc_138b4, label %dec_label_pc_13880

dec_label_pc_13880:                               ; preds = %dec_label_pc_13874
  %v1_1388c = call i32 @function_140ac()
  %v0_13890 = load i32, i32* @r8, align 4
  %v1_13890 = load i32, i32* @r5, align 4
  %v2_13890 = add i32 %v1_13890, %v0_13890
  %v1_13894 = load i32, i32* @r6, align 4
  %v2_13894 = sub i32 %v1_13894, %v1_13890
  %v4_1389c = call i32 @function_13a20(i32* bitcast (i32** @global_var_1d87c.388 to i32*), i32 %v2_13890, i32 %v2_13894)
  store i32 80048, i32* @lr, align 4
  %v1_138ac = call i32 @function_140ac()
  %v0_138b0 = load i32, i32* @r5, align 4
  %v1_138b0 = load i32, i32* @r7, align 4
  %v2_138b0 = add i32 %v1_138b0, -4
  %v3_138b0 = inttoptr i32 %v2_138b0 to i32*
  store i32 %v0_138b0, i32* %v3_138b0, align 4
  br label %dec_label_pc_138b4

dec_label_pc_138b4:                               ; preds = %.thread, %dec_label_pc_13874, %dec_label_pc_1386c, %dec_label_pc_13880
  %v0_138b4 = load i32, i32* @r7, align 4
  %v2_138b8 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_138b8, i32* @r4, align 4
  store i32 %v6_137b4, i32* @r5, align 4
  store i32 %v9_137b4, i32* @r6, align 4
  store i32 %v12_137b4, i32* @r7, align 4
  store i32 %v15_137b4, i32* @r8, align 4
  ret i32 %v0_138b4

; uselistorder directives
  uselistorder i32 %v1_13890, { 1, 0 }
  uselistorder i32 %v0_13874, { 1, 2, 0 }
  uselistorder i32 %v3_137ec, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-24, { 1, 0, 2 }
  uselistorder i32** @global_var_1d87c.388, { 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_1d87c.388 to i32*), { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 (i32)* @function_13518, { 1, 38, 0, 4, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 3, 2 }
  uselistorder i32 ()* @function_136c4, { 1, 0, 4, 3, 2, 5 }
  uselistorder i32* @r8, { 93, 94, 95, 96, 98, 97, 3, 4, 5, 6, 114, 115, 116, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 1, 92, 117, 2, 118, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 54, 55, 56, 57, 58, 59, 60 }
  uselistorder i32* @r7, { 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 7, 8, 9, 15, 16, 17, 2, 6, 24, 10, 11, 12, 13, 14, 4, 18, 3, 19, 20, 21, 22, 23, 25, 1, 50, 51, 52, 53, 54, 55, 56, 57, 26, 27, 28, 29, 30, 31, 32, 33, 234, 235, 236, 152, 153, 154, 155, 58, 0, 59, 60, 61, 62, 63, 64, 5, 65, 66, 67, 68, 69, 70, 71, 72, 73, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 237, 238, 239, 240, 241, 242, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 143, 144, 145, 146, 147, 148, 149, 150, 151 }
  uselistorder label %dec_label_pc_138b4, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1386c, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %dec_label_pc_137e0, { 1, 0 }
}

define i32 @function_138cc(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_138cc:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v1_138cc = inttoptr i32 %arg2 to i32*
  %v2_138cc = load i32, i32* %v1_138cc, align 4
  %v3_138d0 = load i32, i32* @r4, align 4
  store i32 %v3_138d0, i32* %stack_var_-8, align 4
  %v1_138d4 = add i32 %v2_138cc, 3
  %v1_138d8 = and i32 %v1_138d4, -4
  store i32 %v1_138d8, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v2_138e0 = icmp ugt i32 %v1_138d8, 10
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_138e8 = load i32, i32* %arg1, align 4
  store i32 %v2_138e8, i32* %r0.global-to-local, align 4
  br i1 %v2_138e0, label %dec_label_pc_13954.preheader, label %bb

bb:                                               ; preds = %dec_label_pc_138cc
  store i32 12, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13954.preheader

dec_label_pc_13954.preheader:                     ; preds = %dec_label_pc_138cc, %bb
  %v1_13908 = phi i32 [ %v1_138d8, %dec_label_pc_138cc ], [ 12, %bb ]
  %v2_139549 = icmp eq i32 %v2_138e8, 0
  br i1 %v2_139549, label %dec_label_pc_1395c, label %dec_label_pc_138f4

dec_label_pc_138f4:                               ; preds = %dec_label_pc_13954.preheader, %dec_label_pc_13950
  %v2_1390c = phi i32 [ %v3_13950, %dec_label_pc_13950 ], [ %v2_138e8, %dec_label_pc_13954.preheader ]
  %v1_138f4 = inttoptr i32 %v2_1390c to i32*
  %v2_138f4 = load i32, i32* %v1_138f4, align 4
  store i32 %v2_138f4, i32* %ip.global-to-local, align 4
  %v3_138f8 = icmp ult i32 %v2_138f4, %v1_13908
  br i1 %v3_138f8, label %dec_label_pc_13950, label %dec_label_pc_13900

dec_label_pc_13900:                               ; preds = %dec_label_pc_138f4
  %v1_13900 = add i32 %v1_13908, 44
  %v3_13904 = icmp ult i32 %v2_138f4, %v1_13900
  br i1 %v3_13904, label %dec_label_pc_13914, label %.thread._crit_edge

.thread._crit_edge:                               ; preds = %dec_label_pc_13900
  %v2_138f8.le = sub i32 %v2_138f4, %v1_13908
  store i32 %v2_138f8.le, i32* %v1_138f4, align 4
  %v0_13940.pre = load i32, i32* %ip.global-to-local, align 4
  %v0_13948.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb29

dec_label_pc_13914:                               ; preds = %dec_label_pc_13900
  %v1_13914 = add i32 %v2_1390c, 4
  %v2_13914 = inttoptr i32 %v1_13914 to i32*
  %v3_13914 = load i32, i32* %v2_13914, align 4
  store i32 %v3_13914, i32* %r2.global-to-local, align 4
  %v2_13918 = icmp eq i32 %v3_13914, 0
  br i1 %v2_13918, label %.thread2, label %bb27

bb27:                                             ; preds = %dec_label_pc_13914
  %v2_1391c = add i32 %v2_1390c, 8
  %v3_1391c = inttoptr i32 %v2_1391c to i32*
  %v4_1391c = load i32, i32* %v3_1391c, align 4
  %v3_13920 = add i32 %v3_13914, 8
  %v4_13920 = inttoptr i32 %v3_13920 to i32*
  store i32 %v4_1391c, i32* %v4_13920, align 4
  %v0_13924.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_13914, %bb27
  %v0_13924 = phi i32 [ %v2_1390c, %dec_label_pc_13914 ], [ %v0_13924.pre, %bb27 ]
  %v1_13924 = add i32 %v0_13924, 8
  %v2_13924 = inttoptr i32 %v1_13924 to i32*
  %v3_13924 = load i32, i32* %v2_13924, align 4
  %v1_13928 = add i32 %v0_13924, 4
  %v2_13928 = inttoptr i32 %v1_13928 to i32*
  %v3_13928 = load i32, i32* %v2_13928, align 4
  %v2_1392c = icmp eq i32 %v3_13924, 0
  br i1 %v2_1392c, label %.thread5, label %bb28

bb28:                                             ; preds = %.thread2
  %v3_13930 = add i32 %v3_13924, 4
  %v4_13930 = inttoptr i32 %v3_13930 to i32*
  store i32 %v3_13928, i32* %v4_13930, align 4
  %v1_13938 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v1_13938, i32* %r2.global-to-local, align 4
  br label %bb29

.thread5:                                         ; preds = %.thread2
  %v2_13934 = load i32, i32* %r1.global-to-local, align 4
  %v3_13934 = inttoptr i32 %v2_13934 to i32*
  store i32 %v3_13928, i32* %v3_13934, align 4
  %v1_1393c.pre = load i32, i32* %ip.global-to-local, align 4
  store i32 %v1_1393c.pre, i32* %r2.global-to-local, align 4
  br label %bb29

bb29:                                             ; preds = %bb28, %.thread._crit_edge, %.thread5
  %v0_13948 = phi i32 [ %v0_13948.pre, %.thread._crit_edge ], [ %v1_13938, %bb28 ], [ %v1_1393c.pre, %.thread5 ]
  %v0_13940 = phi i32 [ %v0_13940.pre, %.thread._crit_edge ], [ %v1_13938, %bb28 ], [ %v1_1393c.pre, %.thread5 ]
  %v1_13940 = load i32, i32* %r0.global-to-local, align 4
  %v2_13940 = sub i32 %v1_13940, %v0_13940
  %v1_13944 = add i32 %v2_13940, 12
  store i32 %v1_13944, i32* %r0.global-to-local, align 4
  %v1_13948 = load i32, i32* %r4.global-to-local, align 4
  %v2_13948 = inttoptr i32 %v1_13948 to i32*
  store i32 %v0_13948, i32* %v2_13948, align 4
  %v2_1394c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1394c, i32* %r4.global-to-local, align 4
  ret i32 %v1_13944

dec_label_pc_13950:                               ; preds = %dec_label_pc_138f4
  %v1_13950 = add i32 %v2_1390c, 4
  %v2_13950 = inttoptr i32 %v1_13950 to i32*
  %v3_13950 = load i32, i32* %v2_13950, align 4
  store i32 %v3_13950, i32* %r0.global-to-local, align 4
  %v2_13954 = icmp eq i32 %v3_13950, 0
  br i1 %v2_13954, label %dec_label_pc_13954.dec_label_pc_1395c_crit_edge, label %dec_label_pc_138f4

dec_label_pc_13954.dec_label_pc_1395c_crit_edge:  ; preds = %dec_label_pc_13950
  br label %dec_label_pc_1395c

dec_label_pc_1395c:                               ; preds = %dec_label_pc_13954.dec_label_pc_1395c_crit_edge, %dec_label_pc_13954.preheader
  store i32 %v3_138d0, i32* %r4.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_13950, { 1, 2, 0 }
  uselistorder i32 %v0_13924, { 1, 0 }
  uselistorder i32 %v2_138f4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1390c, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_13908, { 0, 2, 1 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 4, 3, 5, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 2, 1, 3 }
  uselistorder label %bb29, { 2, 0, 1 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_138f4, { 1, 0 }
  uselistorder label %dec_label_pc_13954.preheader, { 1, 0 }
}

define i32 @function_13960(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13960:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v2_13964 = load i32, i32* %arg1, align 4
  store i32 %v2_13964, i32* %ip.global-to-local, align 4
  store i32 %tmp, i32* %lr.global-to-local, align 4
  %v2_139dc6 = icmp eq i32 %v2_13964, 0
  br i1 %v2_139dc6, label %dec_label_pc_139e4, label %dec_label_pc_13970

dec_label_pc_13970:                               ; preds = %dec_label_pc_13960, %dec_label_pc_139d8
  %v0_139b0 = phi i32 [ %v3_139d8, %dec_label_pc_139d8 ], [ %v2_13964, %dec_label_pc_13960 ]
  %v1_13970 = inttoptr i32 %v0_139b0 to i32*
  %v2_13970 = load i32, i32* %v1_13970, align 4
  store i32 %v2_13970, i32* %r0.global-to-local, align 4
  %v2_13974 = sub i32 %v0_139b0, %v2_13970
  %v1_13978 = add i32 %v2_13974, 12
  %v3_1397c = icmp uge i32 %v1_13978, %arg2
  %v9_1397c = icmp eq i32 %v1_13978, %arg2
  %v2_13980 = xor i1 %v9_1397c, true
  %v3_13980 = and i1 %v3_1397c, %v2_13980
  br i1 %v3_13980, label %dec_label_pc_139d8, label %dec_label_pc_13984

dec_label_pc_13984:                               ; preds = %dec_label_pc_13970
  br i1 %v9_1397c, label %dec_label_pc_13988, label %dec_label_pc_139e4

dec_label_pc_13988:                               ; preds = %dec_label_pc_13984
  %v1_13988 = add i32 %arg3, 3
  %v1_1398c = and i32 %v1_13988, -4
  store i32 %v1_1398c, i32* %r2.global-to-local, align 4
  %v2_13990 = sub i32 %v2_13970, %v1_1398c
  %v3_13990 = icmp ult i32 %v2_13970, %v1_1398c
  br i1 %v3_13990, label %dec_label_pc_139e4, label %dec_label_pc_13998

dec_label_pc_13998:                               ; preds = %dec_label_pc_13988
  %v1_13998 = add i32 %v1_1398c, 44
  %v3_1399c = icmp ult i32 %v2_13970, %v1_13998
  br i1 %v3_1399c, label %.thread2, label %bb

bb:                                               ; preds = %dec_label_pc_13998
  store i32 %v2_13990, i32* %v1_13970, align 4
  %v1_139a8 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_139a8, i32* %r0.global-to-local, align 4
  ret i32 %v1_139a8

.thread2:                                         ; preds = %dec_label_pc_13998
  %v1_139b0 = add i32 %v0_139b0, 4
  %v2_139b0 = inttoptr i32 %v1_139b0 to i32*
  %v3_139b0 = load i32, i32* %v2_139b0, align 4
  store i32 %v3_139b0, i32* %r2.global-to-local, align 4
  %v2_139b4 = icmp eq i32 %v3_139b0, 0
  br i1 %v2_139b4, label %.thread3, label %bb17

bb17:                                             ; preds = %.thread2
  %v2_139b8 = add i32 %v0_139b0, 8
  %v3_139b8 = inttoptr i32 %v2_139b8 to i32*
  %v4_139b8 = load i32, i32* %v3_139b8, align 4
  %v3_139bc = add i32 %v3_139b0, 8
  %v4_139bc = inttoptr i32 %v3_139bc to i32*
  store i32 %v4_139b8, i32* %v4_139bc, align 4
  %v0_139c0.pre = load i32, i32* %ip.global-to-local, align 4
  br label %.thread3

.thread3:                                         ; preds = %.thread2, %bb17
  %v0_139c0 = phi i32 [ %v0_139b0, %.thread2 ], [ %v0_139c0.pre, %bb17 ]
  %v1_139c0 = add i32 %v0_139c0, 8
  %v2_139c0 = inttoptr i32 %v1_139c0 to i32*
  %v3_139c0 = load i32, i32* %v2_139c0, align 4
  store i32 %v3_139c0, i32* %r2.global-to-local, align 4
  %v1_139c4 = add i32 %v0_139c0, 4
  %v2_139c4 = inttoptr i32 %v1_139c4 to i32*
  %v3_139c4 = load i32, i32* %v2_139c4, align 4
  %v2_139c8 = icmp eq i32 %v3_139c0, 0
  br i1 %v2_139c8, label %.thread4, label %bb18

bb18:                                             ; preds = %.thread3
  %v3_139cc = add i32 %v3_139c0, 4
  %v4_139cc = inttoptr i32 %v3_139cc to i32*
  store i32 %v3_139c4, i32* %v4_139cc, align 4
  br label %bb19

.thread4:                                         ; preds = %.thread3
  %v2_139d0 = load i32, i32* %lr.global-to-local, align 4
  %v3_139d0 = inttoptr i32 %v2_139d0 to i32*
  store i32 %v3_139c4, i32* %v3_139d0, align 4
  br label %bb19

bb19:                                             ; preds = %bb18, %.thread4
  %v5_139d4 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v5_139d4

dec_label_pc_139d8:                               ; preds = %dec_label_pc_13970
  %v1_139d8 = add i32 %v0_139b0, 4
  %v2_139d8 = inttoptr i32 %v1_139d8 to i32*
  %v3_139d8 = load i32, i32* %v2_139d8, align 4
  store i32 %v3_139d8, i32* %ip.global-to-local, align 4
  %v2_139dc = icmp eq i32 %v3_139d8, 0
  br i1 %v2_139dc, label %dec_label_pc_139dc.dec_label_pc_139e4.loopexit_crit_edge, label %dec_label_pc_13970

dec_label_pc_139dc.dec_label_pc_139e4.loopexit_crit_edge: ; preds = %dec_label_pc_139d8
  br label %dec_label_pc_139e4

dec_label_pc_139e4:                               ; preds = %dec_label_pc_13988, %dec_label_pc_13960, %dec_label_pc_139dc.dec_label_pc_139e4.loopexit_crit_edge, %dec_label_pc_13984
  store i32 0, i32* %r0.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_139d8, { 1, 2, 0 }
  uselistorder i32 %v0_139c0, { 1, 0 }
  uselistorder i32 %v1_1398c, { 0, 2, 1, 3 }
  uselistorder i1 %v9_1397c, { 1, 0 }
  uselistorder i32 %v2_13970, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v0_139b0, { 3, 2, 1, 0, 5, 4 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 4, 0 }
  uselistorder label %dec_label_pc_139e4, { 2, 0, 3, 1 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_13970, { 1, 0 }
}

define i32 @function_139ec() local_unnamed_addr {
dec_label_pc_139ec:
  %v0_139ec = load i32, i32* @r2, align 4
  %v2_139ec = icmp eq i32 %v0_139ec, 0
  %v0_139f0 = load i32, i32* @r3, align 4
  %v1_139f0 = load i32, i32* @r1, align 4
  %v2_139f0 = add i32 %v1_139f0, 4
  %v3_139f0 = inttoptr i32 %v2_139f0 to i32*
  store i32 %v0_139f0, i32* %v3_139f0, align 4
  %v0_139f4 = load i32, i32* @r2, align 4
  %v1_139f4 = load i32, i32* @r1, align 4
  %v2_139f4 = add i32 %v1_139f4, 8
  %v3_139f4 = inttoptr i32 %v2_139f4 to i32*
  store i32 %v0_139f4, i32* %v3_139f4, align 4
  %v1_139fc = load i32, i32* @r1, align 4
  br i1 %v2_139ec, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_139ec
  %v2_139f8 = load i32, i32* @r2, align 4
  %v3_139f8 = add i32 %v2_139f8, 4
  %v4_139f8 = inttoptr i32 %v3_139f8 to i32*
  store i32 %v1_139fc, i32* %v4_139f8, align 4
  br label %bb1

.thread:                                          ; preds = %dec_label_pc_139ec
  %v2_139fc = load i32, i32* @r0, align 4
  %v3_139fc = inttoptr i32 %v2_139fc to i32*
  store i32 %v1_139fc, i32* %v3_139fc, align 4
  br label %bb1

bb1:                                              ; preds = %bb, %.thread
  %v0_13a00 = load i32, i32* @r3, align 4
  %v2_13a00 = icmp eq i32 %v0_13a00, 0
  br i1 %v2_13a00, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  %v1_13a04 = load i32, i32* @r1, align 4
  %v3_13a04 = add i32 %v0_13a00, 8
  %v4_13a04 = inttoptr i32 %v3_13a04 to i32*
  store i32 %v1_13a04, i32* %v4_13a04, align 4
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %v1_13a08 = load i32, i32* @r0, align 4
  ret i32 %v1_13a08

; uselistorder directives
  uselistorder i32 %v1_139fc, { 1, 0 }
  uselistorder label %bb3, { 1, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @function_13a0c() local_unnamed_addr {
dec_label_pc_13a0c:
  %v0_13a0c = load i32, i32* @r2, align 4
  %v2_13a0c = icmp eq i32 %v0_13a0c, 0
  %v1_13a10 = load i32, i32* @r1, align 4
  br i1 %v2_13a0c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_13a0c
  %v2_13a10 = load i32, i32* @r0, align 4
  %v3_13a10 = inttoptr i32 %v2_13a10 to i32*
  store i32 %v1_13a10, i32* %v3_13a10, align 4
  br label %bb2

.thread:                                          ; preds = %dec_label_pc_13a0c
  %v3_13a14 = add i32 %v0_13a0c, 4
  %v4_13a14 = inttoptr i32 %v3_13a14 to i32*
  store i32 %v1_13a10, i32* %v4_13a14, align 4
  br label %bb2

bb2:                                              ; preds = %bb, %.thread
  %v0_13a18 = load i32, i32* @r2, align 4
  %v1_13a18 = load i32, i32* @r1, align 4
  %v2_13a18 = add i32 %v1_13a18, 8
  %v3_13a18 = inttoptr i32 %v2_13a18 to i32*
  store i32 %v0_13a18, i32* %v3_13a18, align 4
  %v1_13a1c = load i32, i32* @r0, align 4
  ret i32 %v1_13a1c

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @function_13a20(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13a20:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_13a20 = load i32, i32* @r4, align 4
  store i32 %v3_13a20, i32* %stack_var_-20, align 4
  %v2_13a24 = load i32, i32* %arg1, align 4
  store i32 %v2_13a24, i32* %r4.global-to-local, align 4
  %v2_13a28 = add i32 %arg3, %arg2
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_13a442 = icmp eq i32 %v2_13a24, 0
  br i1 %v2_13a442, label %dec_label_pc_13af4, label %dec_label_pc_13a34

dec_label_pc_13a34:                               ; preds = %dec_label_pc_13a20, %dec_label_pc_13a3c
  %v0_13a84 = phi i32 [ %v0_13a8c, %dec_label_pc_13a3c ], [ 0, %dec_label_pc_13a20 ]
  %v0_13a8c = phi i32 [ %v3_13a40, %dec_label_pc_13a3c ], [ %v2_13a24, %dec_label_pc_13a20 ]
  %v1_13a485.in = phi i32 [ %v3_13a40, %dec_label_pc_13a3c ], [ %v2_13a24, %dec_label_pc_13a20 ]
  %v1_13a485 = add i32 %v1_13a485.in, 12
  %v3_13a34 = icmp ult i32 %v1_13a485, %arg2
  br i1 %v3_13a34, label %dec_label_pc_13a3c, label %dec_label_pc_13a54

dec_label_pc_13a3c:                               ; preds = %dec_label_pc_13a34
  store i32 %v0_13a8c, i32* %r6.global-to-local, align 4
  %v1_13a40 = add i32 %v0_13a8c, 4
  %v2_13a40 = inttoptr i32 %v1_13a40 to i32*
  %v3_13a40 = load i32, i32* %v2_13a40, align 4
  store i32 %v3_13a40, i32* %r4.global-to-local, align 4
  %v2_13a44 = icmp eq i32 %v3_13a40, 0
  br i1 %v2_13a44, label %dec_label_pc_13a44.dec_label_pc_13af4.loopexit_crit_edge, label %dec_label_pc_13a34

dec_label_pc_13a54:                               ; preds = %dec_label_pc_13a34
  %v1_13a54 = inttoptr i32 %v0_13a8c to i32*
  %v2_13a54 = load i32, i32* %v1_13a54, align 4
  %v2_13a58 = sub i32 %v0_13a8c, %v2_13a54
  %v1_13a5c = add i32 %v2_13a58, 12
  %v3_13a60 = icmp uge i32 %v1_13a5c, %v2_13a28
  %v9_13a60 = icmp eq i32 %v1_13a5c, %v2_13a28
  %v2_13a64 = xor i1 %v9_13a60, true
  %v3_13a64 = and i1 %v3_13a60, %v2_13a64
  br i1 %v3_13a64, label %dec_label_pc_13af4, label %dec_label_pc_13a68

dec_label_pc_13a68:                               ; preds = %dec_label_pc_13a54
  %v2_13a68 = add i32 %v2_13a54, %arg3
  store i32 %v2_13a68, i32* %r7.global-to-local, align 4
  br i1 %v9_13a60, label %dec_label_pc_13a70, label %dec_label_pc_13a9c

dec_label_pc_13a70:                               ; preds = %dec_label_pc_13a68
  %v2_13a70 = icmp eq i32 %v0_13a84, 0
  br i1 %v2_13a70, label %dec_label_pc_13ae8, label %dec_label_pc_13a78

dec_label_pc_13a78:                               ; preds = %dec_label_pc_13a70
  %v1_13a78 = add i32 %v0_13a84, 12
  %v9_13a7c = icmp eq i32 %v1_13a78, %arg2
  br i1 %v9_13a7c, label %dec_label_pc_13a84, label %dec_label_pc_13ae8

dec_label_pc_13a84:                               ; preds = %dec_label_pc_13a78
  %v1_13a84 = inttoptr i32 %v0_13a84 to i32*
  %v2_13a84 = load i32, i32* %v1_13a84, align 4
  %v1_13a88 = add i32 %v0_13a84, 8
  %v2_13a88 = inttoptr i32 %v1_13a88 to i32*
  %v3_13a88 = load i32, i32* %v2_13a88, align 4
  store i32 %v3_13a88, i32* @r2, align 4
  store i32 %v0_13a8c, i32* @r1, align 4
  %v2_13a90 = add i32 %v2_13a84, %v2_13a68
  store i32 %v2_13a90, i32* %r7.global-to-local, align 4
  %v0_13a94 = call i32 @function_13a0c()
  br label %dec_label_pc_13ae8

dec_label_pc_13a9c:                               ; preds = %dec_label_pc_13a68
  %v1_13a9c = add i32 %v0_13a8c, 4
  %v2_13a9c = inttoptr i32 %v1_13a9c to i32*
  %v3_13a9c = load i32, i32* %v2_13a9c, align 4
  store i32 %v3_13a9c, i32* %r5.global-to-local, align 4
  %v2_13aa0 = icmp eq i32 %v3_13a9c, 0
  br i1 %v2_13aa0, label %dec_label_pc_13ad4, label %dec_label_pc_13aa8

dec_label_pc_13aa8:                               ; preds = %dec_label_pc_13a9c
  %v1_13aa8 = inttoptr i32 %v3_13a9c to i32*
  %v2_13aa8 = load i32, i32* %v1_13aa8, align 4
  %v2_13aac = sub i32 %v3_13a9c, %v2_13aa8
  %v1_13ab0 = add i32 %v2_13aac, 12
  %v9_13ab4 = icmp eq i32 %v2_13a28, %v1_13ab0
  br i1 %v9_13ab4, label %dec_label_pc_13abc, label %dec_label_pc_13ad4

dec_label_pc_13abc:                               ; preds = %dec_label_pc_13aa8
  store i32 %v0_13a84, i32* @r2, align 4
  store i32 %v3_13a9c, i32* @r1, align 4
  %v2_13ac4 = add i32 %v2_13aa8, %v2_13a68
  store i32 %v2_13ac4, i32* %r7.global-to-local, align 4
  %v0_13ac8 = call i32 @function_13a0c()
  %v0_13acc = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_13acc, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13ae8

dec_label_pc_13ad4:                               ; preds = %dec_label_pc_13aa8, %dec_label_pc_13a9c
  %v2_13ad4 = add i32 %v0_13a8c, %arg3
  store i32 %v2_13ad4, i32* %r4.global-to-local, align 4
  store i32 %v3_13a9c, i32* @r3, align 4
  store i32 %v0_13a84, i32* @r2, align 4
  store i32 %v2_13ad4, i32* @r1, align 4
  %v0_13ae4 = call i32 @function_139ec()
  br label %dec_label_pc_13ae8

dec_label_pc_13ae8:                               ; preds = %dec_label_pc_13a78, %dec_label_pc_13a70, %dec_label_pc_13abc, %dec_label_pc_13a84, %dec_label_pc_13ad4
  %v0_13ae8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_13ae8, i32* %r5.global-to-local, align 4
  %v0_13aec = load i32, i32* %r7.global-to-local, align 4
  %v2_13aec = inttoptr i32 %v0_13ae8 to i32*
  store i32 %v0_13aec, i32* %v2_13aec, align 4
  br label %dec_label_pc_13b0c

dec_label_pc_13a44.dec_label_pc_13af4.loopexit_crit_edge: ; preds = %dec_label_pc_13a3c
  br label %dec_label_pc_13af4

dec_label_pc_13af4:                               ; preds = %dec_label_pc_13a20, %dec_label_pc_13a44.dec_label_pc_13af4.loopexit_crit_edge, %dec_label_pc_13a54
  %v1_13af4 = add i32 %v2_13a28, -12
  store i32 %v1_13af4, i32* %r5.global-to-local, align 4
  %v3_13af8 = inttoptr i32 %v1_13af4 to i32*
  store i32 %arg3, i32* %v3_13af8, align 4
  %v0_13afc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_13afc, i32* @r3, align 4
  %v0_13b00 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_13b00, i32* @r2, align 4
  %v0_13b04 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_13b04, i32* @r1, align 4
  %v0_13b08 = call i32 @function_139ec()
  br label %dec_label_pc_13b0c

dec_label_pc_13b0c:                               ; preds = %dec_label_pc_13ae8, %dec_label_pc_13af4
  %v0_13b0c = load i32, i32* %r5.global-to-local, align 4
  %v2_13b10 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_13b10, i32* @r4, align 4
  ret i32 %v0_13b0c

; uselistorder directives
  uselistorder i32 %v3_13a9c, { 0, 1, 3, 2, 4, 5 }
  uselistorder i1 %v9_13a60, { 1, 0 }
  uselistorder i32 %v3_13a40, { 2, 3, 1, 0 }
  uselistorder i32 %v0_13a8c, { 0, 2, 1, 3, 4, 6, 7, 5 }
  uselistorder i32 %v0_13a84, { 4, 5, 1, 0, 2, 3 }
  uselistorder i32* %r7.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* %r4.global-to-local, { 3, 4, 0, 1, 2, 5 }
  uselistorder i32 ()* @function_139ec, { 1, 0 }
  uselistorder i32* @r3, { 5, 8, 6, 7, 0, 9, 10, 11, 1, 2, 3, 12, 4 }
  uselistorder i32 ()* @function_13a0c, { 1, 0 }
  uselistorder i32 %arg3, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 1, 2, 0 }
  uselistorder label %dec_label_pc_13b0c, { 1, 0 }
  uselistorder label %dec_label_pc_13af4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_13ae8, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_13a34, { 1, 0 }
}

define i32 @function_13b14() local_unnamed_addr {
dec_label_pc_13b30.lr.ph:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %stack_var_-268 = alloca i32, align 4
  %v2_13b14 = ptrtoint i32* %stack_var_-268 to i32
  %v1_13b24 = call i32 @function_140ac()
  store i32 31, i32* %r1.global-to-local, align 4
  %v2_13b30 = ptrtoint i32* %stack_var_0 to i32
  br label %dec_label_pc_13b30

dec_label_pc_13b30:                               ; preds = %dec_label_pc_13b30.lr.ph, %dec_label_pc_13b30
  %v1_13b34 = phi i32 [ 31, %dec_label_pc_13b30.lr.ph ], [ %v1_13b40, %dec_label_pc_13b30 ]
  %v4_13b34 = mul i32 %v1_13b34, 4
  %v5_13b34 = add i32 %v4_13b34, %v2_13b30
  %v2_13b3c = add i32 %v5_13b34, -128
  %v3_13b3c = inttoptr i32 %v2_13b3c to i32*
  store i32 0, i32* %v3_13b3c, align 4
  %v0_13b40 = load i32, i32* %r1.global-to-local, align 4
  %v1_13b40 = add i32 %v0_13b40, -1
  store i32 %v1_13b40, i32* %r1.global-to-local, align 4
  %v6_13b40 = icmp slt i32 %v1_13b40, 0
  br i1 %v6_13b40, label %dec_label_pc_13b48, label %dec_label_pc_13b30

dec_label_pc_13b48:                               ; preds = %dec_label_pc_13b30
  %v2_13b48 = ptrtoint i32* %stack_var_-128 to i32
  store i32 %v2_13b48, i32* @r4, align 4
  store i32 %v2_13b48, i32* @r0, align 4
  store i32 6, i32* @r1, align 4
  %v0_13b54 = call i32 @function_134d0()
  %v2_13b58 = icmp eq i32 %v0_13b54, 0
  br i1 %v2_13b58, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_13b48
  store i32 %v2_13b48, i32* %r1.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_13b48, %bb
  store i32 80748, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_13b58, i32 ptrtoint (i32* @global_var_12d18.410 to i32))
  %v2_13b70 = load i32, i32* @global_var_1da50.412, align 4
  %v2_13b74 = icmp eq i32 %v2_13b70, 0
  br i1 %v2_13b74, label %dec_label_pc_13b7c, label %dec_label_pc_13bac

dec_label_pc_13b7c:                               ; preds = %.thread1
  store i32 1, i32* @global_var_1da50.412, align 4
  br label %dec_label_pc_13b84

dec_label_pc_13b84:                               ; preds = %dec_label_pc_13bfc, %dec_label_pc_13b7c
  %v1_13b90 = call i32 @function_140ac()
  %v1_13b98 = call i32 @function_1523c(i32 6)
  store i32 80812, i32* @lr, align 4
  %v1_13ba8 = call i32 @function_140ac()
  %v2_13bb0.pre = load i32, i32* @global_var_1da50.412, align 4
  br label %dec_label_pc_13bac

dec_label_pc_13bac:                               ; preds = %.thread1, %dec_label_pc_13b84
  %v0_13c20 = phi i32 [ %v2_13b70, %.thread1 ], [ %v2_13bb0.pre, %dec_label_pc_13b84 ]
  store i32 ptrtoint (i32* @global_var_1da50.412 to i32), i32* %ip.global-to-local, align 4
  %v7_13bb4 = icmp eq i32 %v0_13c20, 1
  br i1 %v7_13bb4, label %dec_label_pc_13be4.lr.ph, label %dec_label_pc_13c18

dec_label_pc_13be4.lr.ph:                         ; preds = %dec_label_pc_13bac
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 140, i32* @r2, align 4
  store i32 2, i32* @global_var_1da50.412, align 4
  %v2_13bd0 = bitcast i32* %stack_var_-268 to i8*
  %v3_13bd0 = call i32 @function_130d0(i8* %v2_13bd0, i32 0)
  store i32 0, i32* %stack_var_-268, align 4
  store i32 31, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13be4

dec_label_pc_13be4:                               ; preds = %dec_label_pc_13be4.lr.ph, %dec_label_pc_13be4
  %v1_13be8 = phi i32 [ 31, %dec_label_pc_13be4.lr.ph ], [ %v1_13bf4, %dec_label_pc_13be4 ]
  %v4_13be8 = mul i32 %v1_13be8, 4
  %v5_13be8 = add i32 %v4_13be8, %v2_13b30
  %v2_13bf0 = add i32 %v5_13be8, -264
  %v3_13bf0 = inttoptr i32 %v2_13bf0 to i32*
  store i32 -1, i32* %v3_13bf0, align 4
  %v0_13bf4 = load i32, i32* %r1.global-to-local, align 4
  %v1_13bf4 = add i32 %v0_13bf4, -1
  store i32 %v1_13bf4, i32* %r1.global-to-local, align 4
  %v6_13bf4 = icmp slt i32 %v1_13bf4, 0
  br i1 %v6_13bf4, label %dec_label_pc_13bfc, label %dec_label_pc_13be4

dec_label_pc_13bfc:                               ; preds = %dec_label_pc_13be4
  store i32 %v2_13b14, i32* %r1.global-to-local, align 4
  %v4_13c10 = call i32 @function_14398(i32 6, i32* nonnull %stack_var_-268, i32 0)
  br label %dec_label_pc_13b84

dec_label_pc_13c18:                               ; preds = %dec_label_pc_13bac
  %v7_13c18 = icmp eq i32 %v0_13c20, 2
  br i1 %v7_13c18, label %dec_label_pc_13c20, label %dec_label_pc_13c2c

dec_label_pc_13c20:                               ; preds = %dec_label_pc_13c18
  store i32 3, i32* @global_var_1da50.412, align 4
  %v0_13c28 = call i32 @function_13b14()
  %v2_13c2c.pre = load i32, i32* @global_var_1da50.412, align 4
  br label %dec_label_pc_13c2c

dec_label_pc_13c2c:                               ; preds = %dec_label_pc_13c18, %dec_label_pc_13c20
  %v1_13c34 = phi i32 [ %v0_13c20, %dec_label_pc_13c18 ], [ %v2_13c2c.pre, %dec_label_pc_13c20 ]
  %v7_13c30 = icmp eq i32 %v1_13c34, 3
  br i1 %v7_13c30, label %bb27, label %.thread3

bb27:                                             ; preds = %dec_label_pc_13c2c
  %v2_13c3c = load i32, i32* %ip.global-to-local, align 4
  %v3_13c3c = inttoptr i32 %v2_13c3c to i32*
  store i32 4, i32* %v3_13c3c, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_13c2c, %bb27
  call void @__pseudo_cond_branch(i1 %v7_13c30, i32 ptrtoint (i32* @global_var_144b0.414 to i32))
  br label %dec_label_pc_13c44

dec_label_pc_13c44:                               ; preds = %dec_label_pc_13c44, %.thread3
  %v0_13c44 = call i32 @function_13b14()
  br label %dec_label_pc_13c44

; uselistorder directives
  uselistorder i32 %v1_13bf4, { 2, 1, 0 }
  uselistorder i32 %v1_13b40, { 2, 1, 0 }
  uselistorder i32* %stack_var_-268, { 1, 2, 0, 3 }
  uselistorder i32* %r1.global-to-local, { 3, 4, 0, 1, 5, 6, 8, 7, 2 }
  uselistorder i32 140, { 1, 0 }
  uselistorder i32* @global_var_1da50.412, { 1, 2, 0, 6, 3, 4, 5 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_13c2c, { 1, 0 }
  uselistorder label %dec_label_pc_13be4, { 1, 0 }
  uselistorder label %dec_label_pc_13bac, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_13b30, { 1, 0 }
}

define i32 @function_13c5c(i8* %arg1) local_unnamed_addr {
dec_label_pc_13c5c:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-36 = alloca i32, align 4
  %v3_13c70 = load i32, i32* @r4, align 4
  store i32 %v3_13c70, i32* %stack_var_-36, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 1, i32* %fp.global-to-local, align 4
  %v2_13c94.pre = load i32, i32* bitcast (i32** @global_var_1d9bc.417 to i32*), align 4
  br label %dec_label_pc_13c8c

dec_label_pc_13c8c:                               ; preds = %dec_label_pc_13c8c, %dec_label_pc_13c5c
  %v0_13cc4 = phi i32 [ %tmp, %dec_label_pc_13c5c ], [ %v1_13c88, %dec_label_pc_13c8c ]
  store i32 %v0_13cc4, i32* %r4.global-to-local, align 4
  %v1_13c90 = inttoptr i32 %v0_13cc4 to i8*
  %v2_13c90 = load i8, i8* %v1_13c90, align 1
  %v3_13c90 = zext i8 %v2_13c90 to i32
  %v3_13c98 = mul nuw nsw i32 %v3_13c90, 2
  %v4_13c98 = add i32 %v3_13c98, %v2_13c94.pre
  %v5_13c98 = inttoptr i32 %v4_13c98 to i8*
  %v6_13c98 = load i8, i8* %v5_13c98, align 1
  %v1_13c9c = and i8 %v6_13c98, 32
  %v2_13c9c = icmp eq i8 %v1_13c9c, 0
  %v1_13c88 = add i32 %v0_13cc4, 1
  br i1 %v2_13c9c, label %dec_label_pc_13ca4, label %dec_label_pc_13c8c

dec_label_pc_13ca4:                               ; preds = %dec_label_pc_13c8c
  %v7_13ca4 = icmp eq i8 %v2_13c90, 43
  br i1 %v7_13ca4, label %dec_label_pc_13cc4, label %dec_label_pc_13cac

dec_label_pc_13cac:                               ; preds = %dec_label_pc_13ca4
  %v7_13cac = icmp eq i8 %v2_13c90, 45
  br i1 %v7_13cac, label %dec_label_pc_13cc4, label %bb

bb:                                               ; preds = %dec_label_pc_13cac
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_13d20

dec_label_pc_13cc4:                               ; preds = %dec_label_pc_13ca4, %dec_label_pc_13cac
  %storemerge30 = phi i32 [ 1, %dec_label_pc_13cac ], [ 0, %dec_label_pc_13ca4 ]
  store i32 %storemerge30, i32* %r7.global-to-local, align 4
  store i32 %v1_13c88, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13d20

dec_label_pc_13d20:                               ; preds = %bb, %dec_label_pc_13cc4
  store i32 %tmp, i32* %r6.global-to-local, align 4
  %v2_13d28 = call i32 @function_12824(i32 -1, i32 10)
  %v0_13d2c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_13d2c, i32* @r1, align 4
  store i32 -1, i32* @r0, align 4
  %v1_13d38 = urem i32 %v2_13d28, 256
  store i32 %v1_13d38, i32* %sl.global-to-local, align 4
  %v0_13d3c = call i32 @function_12714()
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 %v0_13d3c, i32* %r8.global-to-local, align 4
  %v0_13d50.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13d50

dec_label_pc_13d4c:                               ; preds = %bb48, %dec_label_pc_13dac
  %v0_13d4c = phi i32 [ %v1_13d7c, %bb48 ], [ %v0_13d4c.pre, %dec_label_pc_13dac ]
  store i32 %v0_13d4c, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_13d50

dec_label_pc_13d50:                               ; preds = %dec_label_pc_13d20, %dec_label_pc_13d4c
  %v0_13d7c = phi i32 [ %v0_13d50.pre, %dec_label_pc_13d20 ], [ %v0_13d4c, %dec_label_pc_13d4c ]
  %v1_13d50 = inttoptr i32 %v0_13d7c to i8*
  %v2_13d50 = load i8, i8* %v1_13d50, align 1
  %v3_13d50 = zext i8 %v2_13d50 to i32
  %v1_13d54 = add nsw i32 %v3_13d50, -48
  %v1_13d58 = urem i32 %v1_13d54, 256
  %v1_13d60 = or i32 %v3_13d50, 32
  %tmp56 = icmp ult i32 %v1_13d58, 10
  br i1 %tmp56, label %bb43, label %dec_label_pc_13d68

dec_label_pc_13d68:                               ; preds = %dec_label_pc_13d50
  %tmp57 = icmp ugt i32 %v1_13d60, 96
  br i1 %tmp57, label %bb42, label %bb43

bb42:                                             ; preds = %dec_label_pc_13d68
  %v1_13d6c = add nsw i32 %v1_13d60, -87
  %v5_13d74 = urem i32 %v1_13d6c, 256
  br label %bb43

bb43:                                             ; preds = %dec_label_pc_13d50, %dec_label_pc_13d68, %bb42
  %v3_13da4 = phi i32 [ %v1_13d58, %dec_label_pc_13d50 ], [ 40, %dec_label_pc_13d68 ], [ %v5_13d74, %bb42 ]
  %v1_13d78 = load i32, i32* %r5.global-to-local, align 4
  %v1_13d7c = add i32 %v0_13d7c, 1
  store i32 %v1_13d7c, i32* %r4.global-to-local, align 4
  %v6_13d80 = icmp slt i32 %v3_13da4, %v1_13d78
  br i1 %v6_13d80, label %dec_label_pc_13d84, label %dec_label_pc_13dc4

dec_label_pc_13d84:                               ; preds = %bb43
  %v0_13d84 = load i32, i32* %ip.global-to-local, align 4
  %v1_13d84 = load i32, i32* %r8.global-to-local, align 4
  %v9_13d84 = icmp eq i32 %v0_13d84, %v1_13d84
  br i1 %v9_13d84, label %.thread, label %bb44

.thread:                                          ; preds = %dec_label_pc_13d84
  br label %dec_label_pc_13d94

bb44:                                             ; preds = %dec_label_pc_13d84
  %v3_13d84 = icmp ult i32 %v0_13d84, %v1_13d84
  br i1 %v3_13d84, label %dec_label_pc_13d94, label %dec_label_pc_13dac

dec_label_pc_13d94:                               ; preds = %bb44, %.thread
  %v4_13d9c1727 = phi i32 [ 1, %.thread ], [ 0, %bb44 ]
  %v1_13d94 = load i32, i32* %sl.global-to-local, align 4
  %v3_13d94 = icmp uge i32 %v3_13da4, %v1_13d94
  %v9_13d94 = icmp eq i32 %v3_13da4, %v1_13d94
  %v2_13d98 = xor i1 %v3_13d94, true
  %v3_13d98 = or i1 %v9_13d94, %v2_13d98
  br i1 %v3_13d98, label %bb45, label %bb46

bb45:                                             ; preds = %dec_label_pc_13d94
  br label %bb46

bb46:                                             ; preds = %dec_label_pc_13d94, %bb45
  %v4_13d9c = phi i32 [ %v4_13d9c1727, %dec_label_pc_13d94 ], [ 0, %bb45 ]
  %v2_13d9c = xor i1 %v9_13d94, true
  %v3_13d9c = and i1 %v3_13d94, %v2_13d9c
  br i1 %v3_13d9c, label %bb47, label %thread-pre-split

bb47:                                             ; preds = %bb46
  %v5_13d9c = urem i32 %v4_13d9c, 2
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb46, %bb47
  %v0_13da0 = phi i32 [ %v5_13d9c, %bb47 ], [ %v4_13d9c, %bb46 ]
  %v2_13da0 = icmp eq i32 %v0_13da0, 0
  br i1 %v2_13da0, label %bb48, label %dec_label_pc_13dac

bb48:                                             ; preds = %thread-pre-split
  %v4_13da4 = mul i32 %v0_13d84, %v1_13d78
  %v5_13da4 = add i32 %v4_13da4, %v3_13da4
  store i32 %v5_13da4, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13d4c

dec_label_pc_13dac:                               ; preds = %bb44, %thread-pre-split
  %v0_13dac = call i32 @function_13070()
  %v0_13db0 = load i32, i32* %r7.global-to-local, align 4
  %v1_13db0 = load i32, i32* %fp.global-to-local, align 4
  %v2_13db0 = and i32 %v1_13db0, %v0_13db0
  store i32 %v2_13db0, i32* %r7.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  %v2_13dbc = inttoptr i32 %v0_13dac to i32*
  store i32 34, i32* %v2_13dbc, align 4
  %v0_13d4c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13d4c

dec_label_pc_13dc4:                               ; preds = %bb43
  %v0_13dc4.pre = load i32, i32* %sb.global-to-local, align 4
  %v2_13dc4 = icmp eq i32 %v0_13dc4.pre, 0
  br i1 %v2_13dc4, label %bb50, label %bb49

bb49:                                             ; preds = %dec_label_pc_13dc4
  %v1_13dc8 = load i32, i32* %r6.global-to-local, align 4
  %v3_13dc8 = inttoptr i32 %v0_13dc4.pre to i32*
  store i32 %v1_13dc8, i32* %v3_13dc8, align 4
  br label %bb50

bb50:                                             ; preds = %dec_label_pc_13dc4, %bb49
  %v0_13dcc = load i32, i32* %r7.global-to-local, align 4
  %v2_13dcc = icmp eq i32 %v0_13dcc, 0
  %. = select i1 %v2_13dcc, i32 2147483647, i32 -2147483648
  store i32 %., i32* %r4.global-to-local, align 4
  %v0_13dd8 = load i32, i32* %fp.global-to-local, align 4
  %v2_13dd8 = icmp eq i32 %v0_13dd8, 0
  %v0_13dfc.pre.pre = load i32, i32* %ip.global-to-local, align 4
  br i1 %v2_13dd8, label %dec_label_pc_13df4, label %bb53

bb53:                                             ; preds = %bb50
  %tmp58 = icmp ugt i32 %v0_13dfc.pre.pre, %.
  br i1 %tmp58, label %dec_label_pc_13de4, label %dec_label_pc_13df4

dec_label_pc_13de4:                               ; preds = %bb53
  %v0_13de4 = call i32 @function_13070()
  %v2_13dec = inttoptr i32 %v0_13de4 to i32*
  store i32 34, i32* %v2_13dec, align 4
  %v0_13df0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_13df0, i32* %ip.global-to-local, align 4
  %v0_13df4.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_13df4

dec_label_pc_13df4:                               ; preds = %bb53, %bb50, %dec_label_pc_13de4
  %v0_13dfc.pre = phi i32 [ %v0_13dfc.pre.pre, %bb53 ], [ %v0_13df0, %dec_label_pc_13de4 ], [ %v0_13dfc.pre.pre, %bb50 ]
  %v0_13df4 = phi i32 [ %v0_13dcc, %bb53 ], [ %v0_13df4.pre, %dec_label_pc_13de4 ], [ %v0_13dcc, %bb50 ]
  %v2_13df4 = icmp eq i32 %v0_13df4, 0
  br i1 %v2_13df4, label %dec_label_pc_13df4._crit_edge, label %bb54

bb54:                                             ; preds = %dec_label_pc_13df4
  %v2_13df8 = sub i32 0, %v0_13dfc.pre
  store i32 %v2_13df8, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13df4._crit_edge

dec_label_pc_13df4._crit_edge:                    ; preds = %dec_label_pc_13df4, %bb54
  %v0_13dfc = phi i32 [ %v2_13df8, %bb54 ], [ %v0_13dfc.pre, %dec_label_pc_13df4 ]
  %v2_13e00 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_13e00, i32* @r4, align 4
  ret i32 %v0_13dfc

; uselistorder directives
  uselistorder i32 %v0_13dfc.pre, { 1, 0 }
  uselistorder i32 %v0_13dfc.pre.pre, { 1, 2, 0 }
  uselistorder i32 %v0_13dc4.pre, { 1, 0 }
  uselistorder i32 %v4_13d9c, { 1, 0 }
  uselistorder i1 %v3_13d94, { 1, 0 }
  uselistorder i32 %v1_13d94, { 1, 0 }
  uselistorder i32 %v1_13d7c, { 1, 0 }
  uselistorder i32 %v1_13d60, { 1, 0 }
  uselistorder i32 %v1_13d58, { 1, 0 }
  uselistorder i32 %v0_13d4c, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 1, 4, 0, 5 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 5, 6, 0, 1, 3, 2, 4 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 5, 2, 3, 4, 6 }
  uselistorder i32 ()* @function_12714, { 3, 1, 4, 2, 0 }
  uselistorder i32 (i32, i32)* @function_12824, { 4, 3, 0, 8, 2, 7, 6, 5, 1 }
  uselistorder i8 45, { 0, 2, 1 }
  uselistorder i8 32, { 0, 8, 9, 10, 1, 11, 12, 2, 3, 13, 4, 5, 6, 7 }
  uselistorder label %dec_label_pc_13df4._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_13df4, { 2, 0, 1 }
  uselistorder label %bb50, { 1, 0 }
  uselistorder label %dec_label_pc_13dac, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %bb43, { 2, 1, 0 }
  uselistorder label %dec_label_pc_13d50, { 1, 0 }
  uselistorder label %dec_label_pc_13d4c, { 1, 0 }
  uselistorder label %dec_label_pc_13d20, { 1, 0 }
  uselistorder label %dec_label_pc_13cc4, { 1, 0 }
}

define i32 @function_13e08(i32 %arg1) local_unnamed_addr {
dec_label_pc_13e08:
  %stack_var_-16 = alloca i32, align 4
  %v2_13e08 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg1, i32* @r4, align 4
  store i32 %v2_13e08, i32* @r0, align 4
  %v8_13e24 = call i32 @function_140b4(i32 %v2_13e08, i32 ptrtoint (i32* @global_var_140ac.366 to i32), i32 ptrtoint (i32* @global_var_1d99c.420 to i32), i32 82100, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v1_13e34 = call i32 @function_140ac()
  %v2_13e3c = load i32, i32* @global_var_1da54.424, align 4
  %v2_13e40 = icmp eq i32 %v2_13e3c, 0
  br i1 %v2_13e40, label %.thread1, label %bb

bb:                                               ; preds = %dec_label_pc_13e08
  call void @__pseudo_branch(i32 %v2_13e3c)
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_13e08, %bb
  store i32 %v2_13e08, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_13e64.426 to i32), i32* @lr, align 4
  %v8_13e60 = call i32 @function_140b4(i32 %v2_13e08, i32 1, i32 ptrtoint (i32* @global_var_1d99c.420 to i32), i32 82100, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v8_13e60, i32* @r0, align 4
  %v1_13e64 = call i32 @function_14040(i32 %v8_13e60)
  store i1 true, i1* @cpsr_z, align 1
  %v0_13e78 = load i32, i32* @r4, align 4
  %v1_13e7c = call i32 @function_144b0(i32 %v0_13e78)
  unreachable

; uselistorder directives
  uselistorder i32 %v2_13e08, { 1, 0, 3, 2 }
  uselistorder i32 ()* @function_140ac, { 4, 3, 2, 1, 18, 17, 16, 15, 14, 0, 13, 12, 11, 10, 9, 8, 7, 6, 5, 21, 20, 19 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @function_140b4, { 1, 0, 5, 4, 3, 2 }
  uselistorder i32 82100, { 1, 0, 3, 4, 2, 5, 6, 7 }
  uselistorder i32 ptrtoint (i32* @global_var_1d99c.420 to i32), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_140ac.366 to i32), { 0, 3, 1, 2 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_13e9c(i32 %arg1) local_unnamed_addr {
dec_label_pc_13e9c:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-424 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_13e9c = load i32, i32* @r4, align 4
  store i32 %v3_13e9c, i32* %stack_var_-20, align 4
  %v6_13e9c = load i32, i32* @r5, align 4
  %v9_13e9c = load i32, i32* @r6, align 4
  %v16_13e9c = ptrtoint i32* %stack_var_-20 to i32
  store i32 %arg1, i32* @ip, align 4
  %v2_13ea0 = icmp eq i32 %arg1, 0
  %v2_13ea4 = ptrtoint i32* %stack_var_-424 to i32
  br i1 %v2_13ea0, label %dec_label_pc_14028, label %dec_label_pc_13ebc.preheader

dec_label_pc_13ebc.preheader:                     ; preds = %dec_label_pc_13e9c
  store i32 31, i32* %r1.global-to-local, align 4
  %v5_13ec417 = add i32 %v16_13e9c, 124
  br label %dec_label_pc_13eb4

dec_label_pc_13eb4:                               ; preds = %dec_label_pc_13ebc.preheader, %dec_label_pc_13eb4
  %v5_13ec418 = phi i32 [ %v5_13ec417, %dec_label_pc_13ebc.preheader ], [ %v5_13ec4, %dec_label_pc_13eb4 ]
  %v2_13eb8 = add i32 %v5_13ec418, -136
  %v3_13eb8 = inttoptr i32 %v2_13eb8 to i32*
  store i32 0, i32* %v3_13eb8, align 4
  %v0_13ebc.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_13ebc = add i32 %v0_13ebc.pre, -1
  store i32 %v1_13ebc, i32* %r1.global-to-local, align 4
  %v6_13ebc = icmp slt i32 %v1_13ebc, 0
  %v4_13ec4 = mul i32 %v1_13ebc, 4
  %v5_13ec4 = add i32 %v4_13ec4, %v16_13e9c
  br i1 %v6_13ebc, label %dec_label_pc_13ecc, label %dec_label_pc_13eb4

dec_label_pc_13ecc:                               ; preds = %dec_label_pc_13eb4
  %v2_13ecc = ptrtoint i32* %stack_var_-156 to i32
  store i32 0, i32* @r5, align 4
  store i32 %v2_13ecc, i32* @r0, align 4
  store i32 17, i32* @r1, align 4
  %v0_13edc = load i32, i32* @ip, align 4
  store i32 %v0_13edc, i32* %stack_var_-28, align 4
  %v0_13ee4 = call i32 @function_134d0()
  store i32 %v0_13ee4, i32* %r0.global-to-local, align 4
  %v1_13ee8 = load i32, i32* @r5, align 4
  %v5_13eec = icmp slt i32 %v0_13ee4, %v1_13ee8
  br i1 %v5_13eec, label %dec_label_pc_14030, label %dec_label_pc_13ef0

dec_label_pc_13ef0:                               ; preds = %dec_label_pc_13ecc
  %v2_13ef0 = ptrtoint i32* %stack_var_-284 to i32
  store i32 %v2_13ef0, i32* @r4, align 4
  store i32 %v1_13ee8, i32* %r0.global-to-local, align 4
  store i32 %v2_13ecc, i32* %r1.global-to-local, align 4
  %v3_13f00 = bitcast i32* %stack_var_-156 to %_TYPEDEF_sigset_t*
  %v4_13f00 = call i32 @function_12d18(i32 %v1_13ee8, %_TYPEDEF_sigset_t* %v3_13f00, i32 %v2_13ef0)
  store i32 %v4_13f00, i32* %r0.global-to-local, align 4
  %v1_13f04 = load i32, i32* @r5, align 4
  %v9_13f04 = icmp eq i32 %v4_13f00, %v1_13f04
  br i1 %v9_13f04, label %dec_label_pc_13f0c, label %dec_label_pc_14030

dec_label_pc_13f0c:                               ; preds = %dec_label_pc_13ef0
  store i32 17, i32* %r1.global-to-local, align 4
  store i32 %v2_13ef0, i32* %r0.global-to-local, align 4
  %v2_13f14 = call i32 @function_134ac(i32 %v2_13ef0, i32 17)
  store i32 %v2_13f14, i32* %r0.global-to-local, align 4
  %v1_13f18 = load i32, i32* @r5, align 4
  %v9_13f18 = icmp eq i32 %v2_13f14, %v1_13f18
  br i1 %v9_13f18, label %dec_label_pc_13f30.preheader, label %dec_label_pc_13f0c.dec_label_pc_13ff8_crit_edge

dec_label_pc_13f0c.dec_label_pc_13ff8_crit_edge:  ; preds = %dec_label_pc_13f0c
  %.pre = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_13ff8

dec_label_pc_13f30.preheader:                     ; preds = %dec_label_pc_13f0c
  store i32 31, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13f28

dec_label_pc_13f28:                               ; preds = %dec_label_pc_13f30.preheader, %dec_label_pc_13f28
  %v5_13f3816 = phi i32 [ %v5_13ec417, %dec_label_pc_13f30.preheader ], [ %v5_13f38, %dec_label_pc_13f28 ]
  %v2_13f2c = add i32 %v5_13f3816, -136
  %v3_13f2c = inttoptr i32 %v2_13f2c to i32*
  store i32 0, i32* %v3_13f2c, align 4
  %v0_13f30.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_13f30 = add i32 %v0_13f30.pre, -1
  store i32 %v1_13f30, i32* %r1.global-to-local, align 4
  %v6_13f30 = icmp slt i32 %v1_13f30, 0
  %v4_13f38 = mul i32 %v1_13f30, 4
  %v5_13f38 = add i32 %v4_13f38, %v16_13e9c
  br i1 %v6_13f30, label %dec_label_pc_13f40, label %dec_label_pc_13f28

dec_label_pc_13f40:                               ; preds = %dec_label_pc_13f28
  store i32 %v2_13ecc, i32* @r0, align 4
  store i32 17, i32* @r1, align 4
  %v0_13f48 = call i32 @function_134d0()
  store i32 %v0_13f48, i32* %r0.global-to-local, align 4
  %v1_13f4c = icmp slt i32 %v0_13f48, 0
  br i1 %v1_13f4c, label %dec_label_pc_14030, label %dec_label_pc_13f54

dec_label_pc_13f54:                               ; preds = %dec_label_pc_13f40
  store i32 17, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v4_13f60 = call i32 @function_14398(i32 17, i32* null, i32 %v2_13ea4)
  store i32 %v4_13f60, i32* %r0.global-to-local, align 4
  %v1_13f64 = icmp slt i32 %v4_13f60, 0
  br i1 %v1_13f64, label %dec_label_pc_13f6c, label %dec_label_pc_13f94

dec_label_pc_13f6c:                               ; preds = %dec_label_pc_13f54
  %v0_13f6c = call i32 @function_13070()
  store i32 %v2_13ef0, i32* %r1.global-to-local, align 4
  store i32 %v0_13f6c, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_13f80 = inttoptr i32 %v0_13f6c to i32*
  %v2_13f80 = load i32, i32* %v1_13f80, align 4
  store i32 %v2_13f80, i32* @r4, align 4
  %v3_13f84 = bitcast i32* %stack_var_-284 to %_TYPEDEF_sigset_t*
  %v4_13f84 = call i32 @function_12d18(i32 2, %_TYPEDEF_sigset_t* %v3_13f84, i32 0)
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_13f8c = load i32, i32* @r4, align 4
  %v1_13f8c = load i32, i32* %r5.global-to-local, align 4
  %v2_13f8c = inttoptr i32 %v1_13f8c to i32*
  store i32 %v0_13f8c, i32* %v2_13f8c, align 4
  %v17_14038.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14034

dec_label_pc_13f94:                               ; preds = %dec_label_pc_13f54
  %v2_13f94 = load i32, i32* %stack_var_-424, align 4
  %v7_13f98 = icmp eq i32 %v2_13f94, 1
  %v2_13fa0 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_13fa0, i32* @r4, align 4
  br i1 %v7_13f98, label %dec_label_pc_13fa8, label %dec_label_pc_13fdc

dec_label_pc_13fa8:                               ; preds = %dec_label_pc_13f94
  store i32 %v2_13fa0, i32* %r1.global-to-local, align 4
  store i32 %v2_13fa0, i32* %r0.global-to-local, align 4
  %v2_13fb0 = bitcast i32* %stack_var_-28 to %timespec*
  %v3_13fb0 = call i32 @function_14834(%timespec* %v2_13fb0, i32 %v2_13fa0)
  store i32 %v3_13fb0, i32* %r0.global-to-local, align 4
  store i32 %v3_13fb0, i32* %r6.global-to-local, align 4
  %v0_13fb8 = call i32 @function_13070()
  store i32 %v2_13ef0, i32* %r1.global-to-local, align 4
  store i32 %v0_13fb8, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_13fcc = inttoptr i32 %v0_13fb8 to i32*
  %v2_13fcc = load i32, i32* %v1_13fcc, align 4
  store i32 %v2_13fcc, i32* @r4, align 4
  %v3_13fd0 = bitcast i32* %stack_var_-284 to %_TYPEDEF_sigset_t*
  %v4_13fd0 = call i32 @function_12d18(i32 2, %_TYPEDEF_sigset_t* %v3_13fd0, i32 0)
  store i32 %v4_13fd0, i32* %r0.global-to-local, align 4
  %v0_13fd4 = load i32, i32* @r4, align 4
  %v1_13fd4 = load i32, i32* %r5.global-to-local, align 4
  %v2_13fd4 = inttoptr i32 %v1_13fd4 to i32*
  store i32 %v0_13fd4, i32* %v2_13fd4, align 4
  %v0_14004.pr = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14004

dec_label_pc_13fdc:                               ; preds = %dec_label_pc_13f94
  store i32 %v2_13ef0, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_13fe8 = bitcast i32* %stack_var_-284 to %_TYPEDEF_sigset_t*
  %v4_13fe8 = call i32 @function_12d18(i32 2, %_TYPEDEF_sigset_t* %v3_13fe8, i32 0)
  store i32 %v4_13fe8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13ff8

dec_label_pc_13ff8:                               ; preds = %dec_label_pc_13f0c.dec_label_pc_13ff8_crit_edge, %dec_label_pc_13fdc
  %storemerge.pre-phi = phi i32 [ %.pre, %dec_label_pc_13f0c.dec_label_pc_13ff8_crit_edge ], [ %v2_13fa0, %dec_label_pc_13fdc ]
  store i32 %storemerge.pre-phi, i32* %r0.global-to-local, align 4
  store i32 %storemerge.pre-phi, i32* %r1.global-to-local, align 4
  %v2_13ffc = bitcast i32* %stack_var_-28 to %timespec*
  %v3_13ffc = call i32 @function_14834(%timespec* %v2_13ffc, i32 %storemerge.pre-phi)
  store i32 %v3_13ffc, i32* %r0.global-to-local, align 4
  store i32 %v3_13ffc, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14004

dec_label_pc_14004:                               ; preds = %dec_label_pc_13fa8, %dec_label_pc_13ff8
  %v0_14004 = phi i32 [ %v0_14004.pr, %dec_label_pc_13fa8 ], [ %v3_13ffc, %dec_label_pc_13ff8 ]
  %v2_14004 = icmp eq i32 %v0_14004, 0
  br i1 %v2_14004, label %dec_label_pc_14028, label %dec_label_pc_1400c

dec_label_pc_1400c:                               ; preds = %dec_label_pc_14004
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_14014 = load i32, i32* %stack_var_-28, align 4
  store i32 %v3_14014, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14034

dec_label_pc_14028:                               ; preds = %dec_label_pc_13e9c, %dec_label_pc_14004
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14034

dec_label_pc_14030:                               ; preds = %dec_label_pc_13ef0, %dec_label_pc_13f40, %dec_label_pc_13ecc
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14034

dec_label_pc_14034:                               ; preds = %dec_label_pc_1400c, %dec_label_pc_14028, %dec_label_pc_13f6c, %dec_label_pc_14030
  %v17_14038 = phi i32 [ %v3_14014, %dec_label_pc_1400c ], [ 0, %dec_label_pc_14028 ], [ %v17_14038.pre, %dec_label_pc_13f6c ], [ -1, %dec_label_pc_14030 ]
  %v2_14038 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_14038, i32* @r4, align 4
  store i32 %v6_13e9c, i32* @r5, align 4
  store i32 %v9_13e9c, i32* @r6, align 4
  ret i32 %v17_14038

; uselistorder directives
  uselistorder i32 %storemerge.pre-phi, { 1, 2, 0 }
  uselistorder i32 %v2_13fa0, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v1_13f30, { 0, 2, 1 }
  uselistorder i32 %v2_13ef0, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32 %v1_13ee8, { 1, 0, 2 }
  uselistorder i32 %v1_13ebc, { 0, 2, 1 }
  uselistorder i32 %v16_13e9c, { 1, 2, 0 }
  uselistorder i32* %stack_var_-20, { 0, 2, 1 }
  uselistorder i32* %stack_var_-284, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-28, { 3, 2, 1, 5, 0, 4 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 10, 9, 0, 11, 12, 14, 13, 1 }
  uselistorder i32* %r0.global-to-local, { 5, 6, 7, 8, 0, 10, 9, 12, 11, 2, 13, 15, 16, 14, 18, 17, 19, 4, 20, 3, 21, 22, 1 }
  uselistorder i32 (i32, i32*, i32)* @function_14398, { 1, 2, 0 }
  uselistorder i32 (i32, %_TYPEDEF_sigset_t*, i32)* @function_12d18, { 1, 2, 3, 4, 0 }
  uselistorder i32 ()* @function_134d0, { 2, 1, 0, 3, 4 }
  uselistorder i32 -136, { 1, 2, 0 }
  uselistorder i32 124, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_14034, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_14030, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14028, { 1, 0 }
  uselistorder label %dec_label_pc_14004, { 1, 0 }
  uselistorder label %dec_label_pc_13ff8, { 1, 0 }
  uselistorder label %dec_label_pc_13f28, { 1, 0 }
  uselistorder label %dec_label_pc_13eb4, { 1, 0 }
}

define i32 @function_14040(i32 %arg1) local_unnamed_addr {
dec_label_pc_1406c:
  %stack_var_-8 = alloca i32, align 4
  %v3_14040 = load i32, i32* @r4, align 4
  store i32 %v3_14040, i32* %stack_var_-8, align 4
  %v2_14070 = load i32, i32* @global_var_1da64.433, align 4
  %v2_14074 = icmp eq i32 %v2_14070, 0
  br i1 %v2_14074, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_1406c
  store i32 82048, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v2_14070)
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1406c, %bb
  %v2_14084 = load i32, i32* @global_var_1da68.435, align 4
  %v2_14088 = icmp eq i32 %v2_14084, 0
  br i1 %v2_14088, label %bb12, label %bb13

bb12:                                             ; preds = %.thread
  %v3_1408c = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_1408c, i32* @r4, align 4
  %v9_1408c = load i32, i32* @r0, align 4
  ret i32 %v9_1408c

bb13:                                             ; preds = %.thread
  store i32 ptrtoint (i32* @global_var_14098.436 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v2_14084)
  %v2_14098 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14098, i32* @r4, align 4
  %v8_14098 = load i32, i32* @r0, align 4
  ret i32 %v8_14098

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_140ac() local_unnamed_addr {
dec_label_pc_140ac:
  ret i32 0
}

define i32 @function_140b4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_140b4:
  %v1_140b4 = load i32, i32* @r0, align 4
  ret i32 %v1_140b4
}

define i32 @function_140b8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_140b8:
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_140b8 = load i32, i32* @r4, align 4
  store i32 %v3_140b8, i32* %stack_var_-12, align 4
  %v6_140b8 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* %r5.global-to-local, align 4
  %v2_140c8 = call i32 @function_129d8(i32 %arg1, i32 1)
  %v7_140cc = icmp eq i32 %v2_140c8, -1
  br i1 %v7_140cc, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_140b8
  %v3_140d0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_140d0, i32* @r4, align 4
  store i32 %v6_140b8, i32* @r5, align 4
  ret i32 %v2_140c8

bb4:                                              ; preds = %dec_label_pc_140b8
  %v0_140d4 = load i32, i32* @r4, align 4
  %v4_140dc = call i32 @function_12bc8(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1553c.438, i32 0, i32 0), i32 %v0_140d4)
  %v1_140e0 = load i32, i32* %r5.global-to-local, align 4
  %v9_140e0 = icmp eq i32 %v4_140dc, %v1_140e0
  br i1 %v9_140e0, label %bb5, label %bb6

bb5:                                              ; preds = %bb4
  %v3_140e4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_140e4, i32* @r4, align 4
  store i32 %v6_140b8, i32* @r5, align 4
  ret i32 %v4_140dc

bb6:                                              ; preds = %bb4
  %v0_140e8 = call i32 @function_13b14()
  %v0_140ec = load i1, i1* @cpsr_z, align 1
  br i1 %v0_140ec, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  %v2_140ec = load i32, i32* @ip, align 4
  %v3_140ec = load i32, i32* @r5, align 4
  %v8_140ec = lshr i32 %v2_140ec, %v3_140ec
  %v9_140ec = and i32 %v8_140ec, %v0_140d4
  store i32 %v9_140ec, i32* @r5, align 4
  br label %bb8

bb8:                                              ; preds = %bb6, %bb7
  ret i32 %v0_140e8

; uselistorder directives
  uselistorder i32 %v2_140c8, { 1, 0 }
  uselistorder i32 %v6_140b8, { 1, 0 }
  uselistorder i1* @cpsr_z, { 7, 6, 0, 8, 3, 4, 1, 2, 5 }
  uselistorder i32 ()* @function_13b14, { 0, 2, 1, 3 }
  uselistorder i32 (i8*, i32)* @function_12bc8, { 9, 4, 0, 1, 2, 7, 8, 3, 5, 6 }
  uselistorder i32 (i32, i32)* @function_129d8, { 0, 5, 9, 8, 11, 10, 7, 6, 4, 3, 2, 1 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %bb8, { 1, 0 }
}

define i32 @function_140f0(i32 %arg1) local_unnamed_addr {
dec_label_pc_140f0:
  %v2_140f4 = load i32, i32* @global_var_1da6c.440, align 4
  %v2_140f8 = icmp eq i32 %v2_140f4, 0
  br i1 %v2_140f8, label %bb2, label %bb

bb:                                               ; preds = %dec_label_pc_140f0
  %v6_14104 = load i32, i32* @r0, align 4
  ret i32 %v6_14104

bb2:                                              ; preds = %dec_label_pc_140f0
  store i32 1, i32* @global_var_1da6c.440, align 4
  store i32 4096, i32* @global_var_1da60.391, align 4
  ret i32 undef
}

define i32 @function_1414c(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_1414c:
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %tmp36 = call i32 @__decompiler_undefined_function_0()
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-120 = alloca i32, align 4
  store i32 %tmp, i32* %r6.global-to-local, align 4
  %v4_14150 = mul i32 %arg2, 4
  %v5_14150 = add i32 %tmp, %v4_14150
  %v2_14154 = load i32, i32* %arg3, align 4
  %v2_14158 = ptrtoint i32* %stack_var_-120 to i32
  %v1_1415c = add i32 %v5_14150, 4
  %v9_14160 = icmp eq i32 %v1_1415c, %v2_14154
  store i32 %arg2, i32* %r8.global-to-local, align 4
  store i32 %arg7, i32* @global_var_1da58.445, align 4
  store i32 %v1_1415c, i32* @global_var_1da5c.447, align 4
  store i32 %arg6, i32* @global_var_1da68.435, align 4
  store i32 120, i32* @r2, align 4
  br i1 %v9_14160, label %bb, label %bb41

bb:                                               ; preds = %dec_label_pc_1414c
  store i32 %v5_14150, i32* @global_var_1da5c.447, align 4
  br label %bb41

bb41:                                             ; preds = %dec_label_pc_1414c, %bb
  %v2_141a0 = bitcast i32* %stack_var_-120 to i8*
  %v3_141a0 = call i32 @function_130d0(i8* %v2_141a0, i32 0)
  %storemerge.pre = load i32, i32* @global_var_1da5c.447, align 4
  br label %dec_label_pc_141b0

dec_label_pc_141b0:                               ; preds = %dec_label_pc_141b0, %bb41
  %storemerge = phi i32 [ %storemerge.pre, %bb41 ], [ %v4_141b0, %dec_label_pc_141b0 ]
  %v1_141b0 = inttoptr i32 %storemerge to i32*
  %v2_141b0 = load i32, i32* %v1_141b0, align 4
  %v4_141b0 = add i32 %storemerge, 4
  %v2_141b4 = icmp eq i32 %v2_141b0, 0
  br i1 %v2_141b4, label %dec_label_pc_141c0, label %dec_label_pc_141b0

dec_label_pc_141c0:                               ; preds = %dec_label_pc_141b0
  store i32 %v4_141b0, i32* @r4, align 4
  %v1_141e022 = inttoptr i32 %v4_141b0 to i32*
  %v2_141e023 = load i32, i32* %v1_141e022, align 4
  %v2_141e425 = icmp eq i32 %v2_141e023, 0
  br i1 %v2_141e425, label %dec_label_pc_141ec, label %dec_label_pc_141c8

dec_label_pc_141c8:                               ; preds = %dec_label_pc_141c0, %dec_label_pc_141e0
  %v5_141cc = phi i32 [ %v2_141e0, %dec_label_pc_141e0 ], [ %v2_141e023, %dec_label_pc_141c0 ]
  %v2_141c8 = icmp ugt i32 %v5_141cc, 13
  %v7_141c8 = icmp eq i32 %v5_141cc, 14
  %v2_141cc = xor i1 %v2_141c8, true
  %v3_141cc = or i1 %v7_141c8, %v2_141cc
  br i1 %v3_141cc, label %bb42, label %bb43

bb42:                                             ; preds = %dec_label_pc_141c8
  %v6_141cc = and i32 %v5_141cc, 536870912
  %v7_141cc = icmp ne i32 %v6_141cc, 0
  br label %bb43

bb43:                                             ; preds = %dec_label_pc_141c8, %bb42
  %v1_141d8 = phi i1 [ %v2_141c8, %dec_label_pc_141c8 ], [ %v7_141cc, %bb42 ]
  %v2_141d0 = xor i1 %v1_141d8, true
  %v3_141d0 = or i1 %v7_141c8, %v2_141d0
  br i1 %v3_141d0, label %bb44, label %dec_label_pc_141e0

bb44:                                             ; preds = %bb43
  br label %dec_label_pc_141e0

dec_label_pc_141e0:                               ; preds = %bb43, %bb44
  call void @__pseudo_cond_branch(i1 %v3_141d0, i32 ptrtoint (i32* @global_var_130b0.449 to i32))
  %v0_141dc = load i32, i32* @r4, align 4
  %v1_141dc = add i32 %v0_141dc, 8
  store i32 %v1_141dc, i32* @r4, align 4
  %v1_141e0 = inttoptr i32 %v1_141dc to i32*
  %v2_141e0 = load i32, i32* %v1_141e0, align 4
  %v2_141e4 = icmp eq i32 %v2_141e0, 0
  br i1 %v2_141e4, label %dec_label_pc_141ec, label %dec_label_pc_141c8

dec_label_pc_141ec:                               ; preds = %dec_label_pc_141e0, %dec_label_pc_141c0
  %v1_141f0 = call i32 @function_15254(i32 %v2_14158)
  store i32 %v1_141f0, i32* @r0, align 4
  %v1_141f4 = call i32 @function_140f0(i32 %v1_141f0)
  store i32 %v1_141f4, i32* @r0, align 4
  %v2_14200 = icmp eq i32 %tmp37, 0
  br i1 %v2_14200, label %bb45, label %bb46

bb45:                                             ; preds = %dec_label_pc_141ec
  br label %bb46

bb46:                                             ; preds = %dec_label_pc_141ec, %bb45
  %v0_14210 = phi i32 [ %tmp37, %dec_label_pc_141ec ], [ 4096, %bb45 ]
  %v3_14208 = icmp eq i32 %tmp36, -1
  %v8_14208 = icmp eq i32 %tmp36, -1
  store i32 ptrtoint (i32* @global_var_1da60.391 to i32), i32* @r2, align 4
  store i32 %v0_14210, i32* @global_var_1da60.391, align 4
  br i1 %v3_14208, label %dec_label_pc_14218, label %dec_label_pc_14240

dec_label_pc_14218:                               ; preds = %bb46
  %v0_14218 = call i32 @function_147a4()
  store i32 %v0_14218, i32* @r0, align 4
  store i32 %v0_14218, i32* @r4, align 4
  %v0_14220 = call i32 @function_1474c()
  %v0_14224 = load i32, i32* @r4, align 4
  %v9_14224 = icmp eq i32 %v0_14224, %v0_14220
  br i1 %v9_14224, label %dec_label_pc_1422c, label %dec_label_pc_14268

dec_label_pc_1422c:                               ; preds = %dec_label_pc_14218
  %v1_1422c = call i32 @function_14778(i32 %v0_14220)
  store i32 %v1_1422c, i32* @r0, align 4
  store i32 %v1_1422c, i32* @r4, align 4
  %v0_14234 = call i32 @function_14720()
  %v0_14238 = load i32, i32* @r4, align 4
  %v9_14238 = icmp eq i32 %v0_14238, %v0_14234
  br i1 %v9_14238, label %dec_label_pc_14240, label %dec_label_pc_14268

dec_label_pc_14240:                               ; preds = %dec_label_pc_1422c, %bb46
  store i32 %tmp36, i32* @r2, align 4
  br i1 %v8_14208, label %dec_label_pc_142d4, label %dec_label_pc_1424c

dec_label_pc_1424c:                               ; preds = %dec_label_pc_14240
  %v9_14250 = icmp eq i32 %tmp36, %tmp35
  br i1 %v9_14250, label %dec_label_pc_14258, label %dec_label_pc_14268

dec_label_pc_14258:                               ; preds = %dec_label_pc_1424c
  br label %dec_label_pc_14268

dec_label_pc_14268:                               ; preds = %dec_label_pc_14258, %dec_label_pc_1424c, %dec_label_pc_1422c, %dec_label_pc_14218
  %v2_14270 = call i32 @function_140b8(i32 0, i32 32768)
  %v2_1427c = call i32 @function_140b8(i32 1, i32 32770)
  %v2_14288 = call i32 @function_140b8(i32 2, i32 32770)
  br label %dec_label_pc_142d4

dec_label_pc_142d4:                               ; preds = %dec_label_pc_14268, %dec_label_pc_14240
  %v0_14298 = load i32, i32* %r6.global-to-local, align 4
  %v1_14298 = inttoptr i32 %v0_14298 to i32*
  %v2_14298 = load i32, i32* %v1_14298, align 4
  store i32 %v2_14298, i32* @global_var_1d9b4, align 4
  store i32 %arg5, i32* @global_var_1da64.433, align 4
  %v2_142d4 = icmp eq i32 %arg4, 0
  br i1 %v2_142d4, label %dec_label_pc_14310, label %bb47

bb47:                                             ; preds = %dec_label_pc_142d4
  br label %dec_label_pc_14310

dec_label_pc_14310:                               ; preds = %dec_label_pc_142d4, %bb47
  call void @__pseudo_branch(i32 %arg4)
  %v1_14320 = call i32 @function_13070()
  %v2_14328 = inttoptr i32 %v1_14320 to i32*
  store i32 0, i32* %v2_14328, align 4
  %v0_14354 = load i32, i32* %r8.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg1)
  %v1_14360 = call i32 @function_13e08(i32 %v0_14354)
  ret i32 %v1_14360

; uselistorder directives
  uselistorder i32 %v2_141e0, { 1, 0 }
  uselistorder i32 %v1_141dc, { 1, 0 }
  uselistorder i1 %v2_141c8, { 1, 0 }
  uselistorder i32 %v4_141b0, { 1, 0, 2 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %tmp36, { 1, 3, 0, 2 }
  uselistorder i32 (i32)* @function_13e08, { 0, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32)* @function_140b8, { 2, 1, 0 }
  uselistorder i32 32768, { 1, 2, 0 }
  uselistorder i32* @global_var_1da60.391, { 1, 4, 0, 2, 3 }
  uselistorder i32 4096, { 0, 1, 3, 7, 4, 8, 5, 9, 2, 6, 10, 11 }
  uselistorder i32 536870912, { 1, 0 }
  uselistorder i1 true, { 0, 1, 544, 2, 3, 4, 5, 6, 7, 8, 287, 9, 10, 11, 12, 13, 565, 285, 288, 299, 566, 545, 128, 129, 546, 289, 130, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 131, 132, 563, 564, 311, 286, 300, 567, 126, 127, 310, 125, 568, 134, 133, 301, 305, 302, 306, 303, 307, 304, 309, 569, 135, 570, 124, 571, 312, 313, 572, 314, 315, 136, 573, 316, 317, 137, 138, 574, 318, 319, 139, 140, 575, 141, 142, 143, 576, 320, 321, 144, 145, 577, 322, 323, 146, 578, 324, 325, 121, 122, 123, 579, 326, 327, 120, 580, 328, 329, 581, 290, 291, 147, 148, 582, 330, 331, 149, 583, 150, 151, 584, 152, 153, 585, 154, 155, 586, 156, 284, 119, 157, 158, 587, 332, 333, 159, 160, 588, 161, 162, 589, 334, 335, 116, 117, 118, 115, 590, 336, 337, 591, 338, 339, 112, 113, 114, 592, 340, 341, 593, 342, 343, 109, 110, 111, 594, 344, 345, 595, 346, 347, 106, 107, 108, 596, 348, 349, 103, 104, 105, 597, 350, 351, 598, 352, 353, 100, 101, 102, 599, 354, 355, 163, 600, 356, 357, 97, 98, 99, 601, 358, 359, 602, 360, 361, 94, 95, 96, 603, 362, 363, 604, 364, 365, 91, 92, 93, 605, 366, 367, 606, 368, 369, 88, 89, 90, 607, 370, 371, 86, 87, 608, 372, 373, 85, 609, 374, 375, 610, 376, 377, 164, 165, 166, 611, 378, 379, 82, 83, 84, 612, 380, 381, 613, 382, 383, 79, 80, 81, 614, 384, 385, 77, 78, 615, 386, 387, 616, 388, 389, 617, 390, 391, 618, 392, 393, 619, 394, 395, 620, 396, 397, 621, 398, 399, 622, 400, 401, 623, 402, 403, 624, 404, 405, 167, 168, 169, 625, 406, 407, 74, 75, 76, 626, 408, 409, 627, 410, 411, 71, 72, 73, 628, 412, 413, 68, 69, 70, 629, 414, 415, 65, 66, 67, 64, 630, 416, 417, 631, 418, 419, 61, 62, 63, 632, 420, 421, 633, 422, 423, 58, 59, 60, 634, 424, 425, 635, 426, 427, 170, 171, 172, 636, 428, 429, 173, 174, 175, 637, 430, 431, 176, 177, 178, 638, 432, 433, 55, 56, 57, 639, 434, 435, 640, 436, 437, 53, 54, 641, 438, 439, 642, 440, 441, 52, 643, 644, 442, 443, 179, 180, 645, 444, 445, 49, 50, 51, 646, 446, 447, 48, 647, 648, 448, 449, 46, 47, 649, 450, 451, 650, 452, 453, 43, 44, 45, 651, 454, 455, 181, 182, 183, 652, 456, 457, 40, 41, 42, 653, 458, 459, 654, 460, 461, 39, 655, 656, 462, 463, 37, 38, 657, 464, 465, 35, 36, 658, 466, 467, 659, 468, 469, 32, 33, 34, 660, 470, 471, 31, 661, 184, 662, 472, 473, 28, 29, 30, 663, 474, 475, 664, 476, 477, 25, 26, 27, 665, 478, 479, 666, 480, 481, 667, 482, 483, 24, 668, 669, 484, 485, 185, 186, 187, 22, 23, 670, 486, 487, 671, 488, 489, 672, 490, 491, 673, 492, 493, 674, 494, 495, 675, 496, 497, 676, 498, 499, 188, 677, 189, 190, 21, 678, 500, 501, 191, 679, 192, 193, 194, 680, 195, 196, 197, 681, 198, 199, 200, 201, 682, 202, 203, 204, 205, 683, 206, 207, 684, 502, 503, 208, 209, 685, 210, 211, 212, 686, 213, 214, 215, 687, 216, 217, 218, 688, 219, 220, 221, 689, 222, 223, 224, 225, 690, 504, 505, 226, 227, 691, 228, 229, 230, 692, 231, 232, 693, 233, 234, 235, 694, 236, 237, 238, 695, 239, 240, 241, 242, 243, 244, 245, 696, 246, 247, 248, 697, 506, 507, 249, 20, 698, 508, 509, 250, 251, 19, 699, 292, 293, 700, 252, 701, 253, 254, 255, 702, 256, 257, 258, 703, 510, 511, 259, 18, 704, 512, 513, 260, 261, 17, 705, 514, 515, 16, 706, 516, 517, 262, 263, 264, 707, 518, 519, 265, 708, 520, 521, 266, 15, 709, 522, 523, 267, 268, 269, 710, 270, 271, 272, 711, 273, 274, 14, 712, 294, 295, 275, 276, 277, 278, 279, 713, 524, 525, 714, 526, 527, 715, 528, 529, 716, 530, 531, 717, 532, 533, 718, 534, 535, 719, 536, 537, 720, 538, 539, 721, 540, 541, 722, 542, 543, 298, 723, 724, 308, 725, 296, 280, 297, 281, 282, 283 }
  uselistorder i32 120, { 3, 0, 1, 2 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_14310, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %dec_label_pc_141e0, { 1, 0 }
  uselistorder label %bb43, { 1, 0 }
  uselistorder label %dec_label_pc_141c8, { 1, 0 }
  uselistorder label %bb41, { 1, 0 }
}

define i32 @function_14398(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_14398:
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v3_14398 = load i32, i32* @r4, align 4
  %v6_14398 = load i32, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_1439c = icmp eq i32* %arg2, null
  %v2_143a0 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %arg1, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* @r5, align 4
  br i1 %v2_1439c, label %dec_label_pc_1440c, label %dec_label_pc_143b0

dec_label_pc_143b0:                               ; preds = %dec_label_pc_14398
  %v2_143b4 = load i32, i32* %arg2, align 4
  %v4_143b4 = add i32 %tmp, 4
  store i32 %v4_143b4, i32* @r1, align 4
  %v2_143b8 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_143b8, i32* @r0, align 4
  store i32 128, i32* @r2, align 4
  store i32 %v2_143b4, i32* %stack_var_-156, align 4
  %v3_143c4 = call i32 @function_130b0(i32 %v2_143b8, i32 %v4_143b4, i32 128)
  store i32 %v3_143c4, i32* %r0.global-to-local, align 4
  %v0_143c8 = load i32, i32* @r4, align 4
  %v1_143c8 = add i32 %v0_143c8, 132
  %v2_143c8 = inttoptr i32 %v1_143c8 to i32*
  %v3_143c8 = load i32, i32* %v2_143c8, align 4
  %v1_143cc = and i32 %v3_143c8, 67108864
  %v2_143cc = icmp eq i32 %v1_143cc, 0
  br i1 %v2_143cc, label %dec_label_pc_143e0, label %bb

bb:                                               ; preds = %dec_label_pc_143b0
  br label %dec_label_pc_143fc

dec_label_pc_143e0:                               ; preds = %dec_label_pc_143b0
  %v1_143e8 = and i32 %v3_143c8, 4
  %v2_143e8 = icmp eq i32 %v1_143e8, 0
  br i1 %v2_143e8, label %bb21, label %bb20

bb20:                                             ; preds = %dec_label_pc_143e0
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_143e0, %bb20
  br label %dec_label_pc_143fc

dec_label_pc_143fc:                               ; preds = %bb, %bb21
  %v2_143fc = icmp eq i32 %v0_143c8, 0
  %v3_14400 = ptrtoint i32* %stack_var_-156 to i32
  %.v3_14400 = select i1 %v2_143fc, i32 0, i32 %v3_14400
  %v0_1440c.pre = load i32, i32* @r5, align 4
  %v0_1441c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1440c

dec_label_pc_1440c:                               ; preds = %dec_label_pc_143fc, %dec_label_pc_14398
  %v0_1441c = phi i32 [ %arg1, %dec_label_pc_14398 ], [ %v0_1441c.pre, %dec_label_pc_143fc ]
  %v0_1440c = phi i32 [ %arg3, %dec_label_pc_14398 ], [ %v0_1440c.pre, %dec_label_pc_143fc ]
  %storemerge = phi i32 [ 0, %dec_label_pc_14398 ], [ %.v3_14400, %dec_label_pc_143fc ]
  store i32 %storemerge, i32* @r1, align 4
  %v2_1440c = icmp eq i32 %v0_1440c, 0
  %.v2_143a0 = select i1 %v2_1440c, i32 0, i32 %v2_143a0
  store i32 %.v2_143a0, i32* @r2, align 4
  store i32 %v0_1441c, i32* %r0.global-to-local, align 4
  %v1_14420 = call i32 @function_14484(i32 %v0_1441c)
  store i32 %v1_14420, i32* %r0.global-to-local, align 4
  %v0_14424 = load i32, i32* @r5, align 4
  %v2_14424 = icmp eq i32 %v0_14424, 0
  br i1 %v2_14424, label %bb26, label %bb25

bb25:                                             ; preds = %dec_label_pc_1440c
  br label %bb26

bb26:                                             ; preds = %dec_label_pc_1440c, %bb25
  %v0_14434.pr = phi i32 [ 0, %dec_label_pc_1440c ], [ 1, %bb25 ]
  %v1_1442c = icmp slt i32 %v1_14420, 0
  br i1 %v1_1442c, label %thread-pre-split.thread, label %thread-pre-split

thread-pre-split.thread:                          ; preds = %bb26
  br label %dec_label_pc_14468

thread-pre-split:                                 ; preds = %bb26
  %v2_14434 = icmp eq i32 %v0_14434.pr, 0
  store i32 %v1_14420, i32* @r4, align 4
  br i1 %v2_14434, label %dec_label_pc_14468, label %dec_label_pc_14440

dec_label_pc_14440:                               ; preds = %thread-pre-split
  %v2_14440 = load i32, i32* %stack_var_-296, align 4
  store i32 %v0_14424, i32* %r0.global-to-local, align 4
  %v2_14448 = inttoptr i32 %v0_14424 to i32*
  store i32 %v2_14440, i32* %v2_14448, align 4
  %v3_14448 = load i32, i32* %r0.global-to-local, align 4
  %v4_14448 = add i32 %v3_14448, 4
  store i32 %v4_14448, i32* @r0, align 4
  %v2_1444c = ptrtoint i32* %stack_var_-284 to i32
  store i32 %v2_1444c, i32* @r1, align 4
  store i32 128, i32* @r2, align 4
  %v3_14454 = call i32 @function_130b0(i32 %v4_14448, i32 %v2_1444c, i32 128)
  store i32 %v3_14454, i32* %r0.global-to-local, align 4
  %v1_1445c = load i32, i32* @r5, align 4
  %v2_1445c = add i32 %v1_1445c, 136
  %v3_1445c = inttoptr i32 %v2_1445c to i32*
  %v1_14464 = load i32, i32* @r5, align 4
  %v2_14464 = add i32 %v1_14464, 132
  %v3_14464 = inttoptr i32 %v2_14464 to i32*
  %v0_14468.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_14468

dec_label_pc_14468:                               ; preds = %thread-pre-split.thread, %thread-pre-split, %dec_label_pc_14440
  %v0_14468 = phi i32 [ %v1_14420, %thread-pre-split ], [ %v0_14468.pre, %dec_label_pc_14440 ], [ %v1_14420, %thread-pre-split.thread ]
  store i32 %v0_14468, i32* %r0.global-to-local, align 4
  store i32 %v3_14398, i32* @r4, align 4
  store i32 %v6_14398, i32* @r5, align 4
  ret i32 %v0_14468

; uselistorder directives
  uselistorder i32 %v0_14468, { 1, 0 }
  uselistorder i32 %v0_14424, { 1, 0, 2 }
  uselistorder i32 %v0_1441c, { 1, 0 }
  uselistorder i32* %stack_var_-156, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 6, 4, 5, 2, 7, 1, 0 }
  uselistorder i32 136, { 3, 1, 2, 0 }
  uselistorder i32 132, { 3, 4, 1, 2, 0 }
  uselistorder label %dec_label_pc_14468, { 2, 1, 0 }
  uselistorder label %bb26, { 1, 0 }
  uselistorder label %dec_label_pc_143fc, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
}

define i32 @function_14484(i32 %arg1) local_unnamed_addr {
dec_label_pc_14484:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14484 = load i32, i32* @r4, align 4
  store i32 %v3_14484, i32* %stack_var_-8, align 4
  %v1_14488 = load i32, i32* @r1, align 4
  %v2_14488 = inttoptr i32 %v1_14488 to %sigaction*
  %v3_14488 = load i32, i32* @r2, align 4
  %v4_14488 = inttoptr i32 %v3_14488 to %sigaction*
  %v5_14488 = call i32 @sigaction(i32 %arg1, %sigaction* %v2_14488, %sigaction* %v4_14488)
  store i32 %v5_14488, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_14488, -4095
  br i1 %tmp, label %dec_label_pc_144a8, label %dec_label_pc_14498

dec_label_pc_14498:                               ; preds = %dec_label_pc_14484
  %v0_14498 = call i32 @function_13070()
  %v0_1449c = load i32, i32* %r4.global-to-local, align 4
  %v1_1449c = sub i32 0, %v0_1449c
  %v2_144a0 = inttoptr i32 %v0_14498 to i32*
  store i32 %v1_1449c, i32* %v2_144a0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_144a8

dec_label_pc_144a8:                               ; preds = %dec_label_pc_14484, %dec_label_pc_14498
  %v0_144a8 = phi i32 [ %v5_14488, %dec_label_pc_14484 ], [ -1, %dec_label_pc_14498 ]
  %v2_144ac = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_144ac, i32* %r4.global-to-local, align 4
  ret i32 %v0_144a8

; uselistorder directives
  uselistorder i32 %v5_14488, { 1, 0, 2 }
  uselistorder label %dec_label_pc_144a8, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @function_144b0(i32 %arg1) local_unnamed_addr #0 {
dec_label_pc_144b0:
  store i32 %arg1, i32* @r5, align 4
  call void @exit(i32 %arg1)
  unreachable
}

define i32 @function_144d8() local_unnamed_addr {
dec_label_pc_144d8:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %tmp4 = bitcast i32* %stack_var_-72 to %stat*
  %v0_144e8 = load i32, i32* @r0, align 4
  %v4_144e8 = call i32 @fstat(i32 %v0_144e8, %stat* %tmp4)
  store i32 %v4_144e8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_144e8, -4095
  br i1 %tmp, label %dec_label_pc_1450c, label %dec_label_pc_144f8

dec_label_pc_144f8:                               ; preds = %dec_label_pc_144d8
  %v0_144f8 = call i32 @function_13070()
  %v0_144fc = load i32, i32* %r4.global-to-local, align 4
  %v1_144fc = sub i32 0, %v0_144fc
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_14504 = inttoptr i32 %v0_144f8 to i32*
  store i32 %v1_144fc, i32* %v2_14504, align 4
  br label %dec_label_pc_1451c

dec_label_pc_1450c:                               ; preds = %dec_label_pc_144d8
  %v2_1450c = icmp eq i32 %v4_144e8, 0
  store i32 83228, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1450c, i32 ptrtoint (i32* @global_var_14bf4.465 to i32))
  br label %dec_label_pc_1451c

dec_label_pc_1451c:                               ; preds = %dec_label_pc_144f8, %dec_label_pc_1450c
  %v0_1451c = load i32, i32* %r4.global-to-local, align 4
  ret i32 %v0_1451c

; uselistorder directives
  uselistorder i32 %v4_144e8, { 2, 0, 1 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2, 3 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 3, 10, 8, 9, 6, 7, 0, 1, 2, 4, 5 }
  uselistorder label %dec_label_pc_1451c, { 1, 0 }
}

define i32 @function_14528(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_14528:
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r1, align 4
  %v6_14528 = load i32, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_14530 = call i32 @function_145bc()
  store i32 %v0_14530, i32* %r6.global-to-local, align 4
  %tmp8 = icmp slt i32 %v0_14530, 1
  br i1 %tmp8, label %dec_label_pc_145b4, label %dec_label_pc_145a0.preheader

dec_label_pc_145a0.preheader:                     ; preds = %dec_label_pc_14528
  %v5_14538 = load i32, i32* @r4, align 4
  %v7_14538 = add i32 %v5_14538, %v0_14530
  store i32 %v7_14538, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_145a0

dec_label_pc_14544:                               ; preds = %dec_label_pc_145a0
  %v1_14544 = add i32 %v2_14554, 16
  %v2_14544 = inttoptr i32 %v1_14544 to i32*
  %v3_14544 = load i32, i32* %v2_14544, align 4
  store i32 %v3_14544, i32* @lr, align 4
  %v2_14548 = inttoptr i32 %v1_145a4 to i32*
  %v3_14548 = load i32, i32* %v2_14548, align 4
  store i32 %v3_14548, i32* %r2.global-to-local, align 4
  %v1_1454c = add i32 %v2_14554, 18
  %v2_1454c = inttoptr i32 %v1_1454c to i8*
  %v3_1454c = load i8, i8* %v2_1454c, align 1
  %v4_1454c = zext i8 %v3_1454c to i32
  store i32 %v4_1454c, i32* %ip.global-to-local, align 4
  %v3_14550 = sdiv i32 %v3_14544, 256
  store i32 %v3_14550, i32* %r3.global-to-local, align 4
  %v1_14554 = trunc i32 %v3_14544 to i8
  %v4_14554 = inttoptr i32 %v1_145a4 to i8*
  store i8 %v1_14554, i8* %v4_14554, align 1
  %v0_14558 = load i32, i32* %r2.global-to-local, align 4
  %v1_14558 = load i32, i32* @r4, align 4
  %v2_14558 = add i32 %v1_14558, 4
  %v3_14558 = inttoptr i32 %v2_14558 to i32*
  store i32 %v0_14558, i32* %v3_14558, align 4
  %v0_1455c = load i32, i32* %ip.global-to-local, align 4
  %v1_1455c = trunc i32 %v0_1455c to i8
  %v2_1455c = load i32, i32* @r4, align 4
  %v3_1455c = add i32 %v2_1455c, 10
  %v4_1455c = inttoptr i32 %v3_1455c to i8*
  store i8 %v1_1455c, i8* %v4_1455c, align 1
  %v0_14560 = load i32, i32* %r3.global-to-local, align 4
  %v1_14560 = trunc i32 %v0_14560 to i8
  %v2_14560 = load i32, i32* @r4, align 4
  %v3_14560 = add i32 %v2_14560, 9
  %v4_14560 = inttoptr i32 %v3_14560 to i8*
  store i8 %v1_14560, i8* %v4_14560, align 1
  %v0_14564 = load i32, i32* @r4, align 4
  %v1_14564 = add i32 %v0_14564, 8
  %v2_14564 = inttoptr i32 %v1_14564 to i8*
  %v3_14564 = load i8, i8* %v2_14564, align 1
  %v4_14564 = zext i8 %v3_14564 to i32
  store i32 %v4_14564, i32* %r2.global-to-local, align 4
  %v0_14568 = load i32, i32* @r5, align 4
  %v1_14568 = add i32 %v0_14568, 1
  %v2_14568 = inttoptr i32 %v1_14568 to i8*
  %v3_14568 = load i8, i8* %v2_14568, align 1
  %v4_14568 = zext i8 %v3_14568 to i32
  store i32 %v4_14568, i32* %r3.global-to-local, align 4
  %v4_1456c = mul nuw nsw i32 %v4_14568, 256
  %v5_1456c = or i32 %v4_1456c, %v4_14564
  %v1_14570 = add nsw i32 %v5_1456c, -19
  store i32 %v1_14570, i32* @r2, align 4
  %v3_14574 = call i32 @function_130c0(i32 %v1_145ac, i32 %v1_145a8, i32 %v1_14570)
  %v0_14578 = load i32, i32* @r4, align 4
  %v1_14578 = add i32 %v0_14578, 8
  %v2_14578 = inttoptr i32 %v1_14578 to i8*
  %v3_14578 = load i8, i8* %v2_14578, align 1
  %v4_14578 = zext i8 %v3_14578 to i32
  store i32 %v4_14578, i32* %r3.global-to-local, align 4
  %v0_1457c = load i32, i32* @r5, align 4
  %v1_1457c = add i32 %v0_1457c, 1
  %v2_1457c = inttoptr i32 %v1_1457c to i8*
  %v3_1457c = load i8, i8* %v2_1457c, align 1
  %v4_1457c = zext i8 %v3_1457c to i32
  store i32 %v0_14578, i32* @r0, align 4
  %v4_14584 = mul nuw nsw i32 %v4_1457c, 256
  %v5_14584 = or i32 %v4_14584, %v4_14578
  store i32 %v5_14584, i32* @r2, align 4
  store i32 %v0_14578, i32* @r1, align 4
  %v3_1458c = call i32 @function_130c0(i32 %v0_14578, i32 %v0_14578, i32 %v5_14584)
  %v0_14590 = load i32, i32* @r4, align 4
  %v1_14590 = add i32 %v0_14590, 8
  %v2_14590 = inttoptr i32 %v1_14590 to i8*
  %v3_14590 = load i8, i8* %v2_14590, align 1
  %v4_14590 = zext i8 %v3_14590 to i32
  store i32 %v4_14590, i32* %r3.global-to-local, align 4
  %v0_14594 = load i32, i32* @r5, align 4
  %v1_14594 = add i32 %v0_14594, 1
  %v2_14594 = inttoptr i32 %v1_14594 to i8*
  %v3_14594 = load i8, i8* %v2_14594, align 1
  %v4_14594 = zext i8 %v3_14594 to i32
  store i32 %v4_14594, i32* @r2, align 4
  %v4_14598 = mul nuw nsw i32 %v4_14594, 256
  %v5_14598 = or i32 %v4_14598, %v4_14590
  store i32 %v5_14598, i32* %r3.global-to-local, align 4
  %v2_1459c = add i32 %v5_14598, %v0_14590
  store i32 %v2_1459c, i32* @r4, align 4
  %v1_145a0.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_145a0

dec_label_pc_145a0:                               ; preds = %dec_label_pc_145a0.preheader, %dec_label_pc_14544
  %v1_145a0 = phi i32 [ %v7_14538, %dec_label_pc_145a0.preheader ], [ %v1_145a0.pre, %dec_label_pc_14544 ]
  %v2_14554 = phi i32 [ %v5_14538, %dec_label_pc_145a0.preheader ], [ %v2_1459c, %dec_label_pc_14544 ]
  %v3_145a0 = icmp ult i32 %v2_14554, %v1_145a0
  %v1_145a4 = add i32 %v2_14554, 8
  store i32 %v1_145a4, i32* @r5, align 4
  %v1_145a8 = add i32 %v2_14554, 19
  store i32 %v1_145a8, i32* @r1, align 4
  %v1_145ac = add i32 %v2_14554, 11
  store i32 %v1_145ac, i32* @r0, align 4
  br i1 %v3_145a0, label %dec_label_pc_14544, label %dec_label_pc_145b4.loopexit

dec_label_pc_145b4.loopexit:                      ; preds = %dec_label_pc_145a0
  %v0_145b4.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_145b4

dec_label_pc_145b4:                               ; preds = %dec_label_pc_14528, %dec_label_pc_145b4.loopexit
  %v0_145b4 = phi i32 [ %v0_145b4.pre, %dec_label_pc_145b4.loopexit ], [ %v0_14530, %dec_label_pc_14528 ]
  store i32 %v6_14528, i32* @r5, align 4
  ret i32 %v0_145b4

; uselistorder directives
  uselistorder i32 %v1_145ac, { 1, 0 }
  uselistorder i32 %v1_145a8, { 1, 0 }
  uselistorder i32 %v1_145a4, { 2, 1, 0 }
  uselistorder i32 %v2_14554, { 4, 3, 2, 5, 1, 0 }
  uselistorder i32 %v0_14578, { 1, 3, 0, 2, 4 }
  uselistorder i32 %v3_14544, { 1, 0, 2 }
  uselistorder i32 %v5_14538, { 1, 0 }
  uselistorder i32 %v0_14530, { 1, 0, 2, 3 }
  uselistorder i32 (i32, i32, i32)* @function_130c0, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_145b4, { 1, 0 }
  uselistorder label %dec_label_pc_145a0, { 1, 0 }
}

define i32 @function_145bc() local_unnamed_addr {
dec_label_pc_145bc:
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %v3_145c0 = load i32, i32* @r4, align 4
  %v9_145c0 = load i32, i32* @r6, align 4
  %v0_145c4 = load i32, i32* @r2, align 4
  %v1_145c4 = add i32 %v0_145c4, 6
  %v2_145cc = ptrtoint i32* %stack_var_-60 to i32
  %v1_145d0 = and i32 %v1_145c4, -4
  store i32 %v1_145d0, i32* %r3.global-to-local, align 4
  %v2_145d4 = sub i32 %v2_145cc, %v1_145d0
  %v0_145d8 = load i32, i32* @r1, align 4
  store i32 %v0_145d8, i32* %r8.global-to-local, align 4
  store i32 %v0_145c4, i32* %stack_var_-60, align 4
  store i32 %v2_145d4, i32* %sl.global-to-local, align 4
  %v0_145e4 = load i32, i32* @r0, align 4
  %v1_145e8 = inttoptr i32 %v2_145d4 to %linux_dirent64*
  store i32 %v2_145d4, i32* %r1.global-to-local, align 4
  %v5_145ec = call i32 @getdents64(i32 %v0_145e4, %linux_dirent64* %v1_145e8, i32 %v0_145c4)
  store i32 %v5_145ec, i32* @r6, align 4
  %tmp = icmp ult i32 %v5_145ec, -4095
  br i1 %tmp, label %dec_label_pc_14610, label %dec_label_pc_145fc

dec_label_pc_145fc:                               ; preds = %dec_label_pc_145bc
  %v0_145fc = call i32 @function_13070()
  %v0_14600 = load i32, i32* @r6, align 4
  %v1_14600 = sub i32 0, %v0_14600
  store i32 %v1_14600, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r6.global-to-local, align 4
  %v2_14608 = inttoptr i32 %v0_145fc to i32*
  store i32 %v1_14600, i32* %v2_14608, align 4
  %v0_14618.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14618

dec_label_pc_14610:                               ; preds = %dec_label_pc_145bc
  br i1 false, label %dec_label_pc_14618, label %dec_label_pc_14620

dec_label_pc_14618:                               ; preds = %dec_label_pc_14610, %dec_label_pc_145fc
  %v0_14618 = phi i32 [ -1, %dec_label_pc_14610 ], [ %v0_14618.pre, %dec_label_pc_145fc ]
  store i32 %v0_14618, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14714

dec_label_pc_14620:                               ; preds = %dec_label_pc_14610
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_14628 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_14628, i32* @r5, align 4
  %v0_1462c = load i32, i32* @sp, align 4
  store i32 %v0_1462c, i32* @r4, align 4
  br label %dec_label_pc_146f0

dec_label_pc_1463c:                               ; preds = %dec_label_pc_146f0
  %v2_14708 = add i32 %v3_146f4, %v0_14708
  %v1_1463c = add i32 %v0_14640, 17
  %v2_1463c = inttoptr i32 %v1_1463c to i8*
  %v3_1463c = load i8, i8* %v2_1463c, align 1
  %v4_1463c = zext i8 %v3_1463c to i32
  %v2_14640 = inttoptr i32 %v1_146fc to i8*
  %v3_14640 = load i8, i8* %v2_14640, align 1
  %v4_14640 = zext i8 %v3_14640 to i32
  %v4_14644 = mul nuw nsw i32 %v4_1463c, 256
  %v5_14644 = or i32 %v4_14640, %v4_14644
  %v1_14648 = add nuw nsw i32 %v5_14644, 3
  %v1_1464c = and i32 %v1_14648, 131068
  store i32 %v1_1464c, i32* %r3.global-to-local, align 4
  %v2_14650 = add i32 %v1_1464c, %v2_14690
  store i32 %v2_14650, i32* %sb.global-to-local, align 4
  %v9_14654 = icmp eq i32 %v2_14650, %v2_14708
  %v1_14658 = and i32 %v1_14648, 128
  %v2_1465c = icmp eq i32 %v1_14658, 0
  %v3_1465c = or i1 %v9_14654, %v2_1465c
  br i1 %v3_1465c, label %dec_label_pc_14690, label %dec_label_pc_14660

dec_label_pc_14660:                               ; preds = %dec_label_pc_1463c
  store i32 %stack_var_-52.0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v4_14670 = call i32 @function_147d0(i32 %v0_145e4, i32 %stack_var_-52.0, i32 %stack_var_-48.0, i32 0)
  %v0_14674 = load i32, i32* @r5, align 4
  %v1_14674 = load i32, i32* %r8.global-to-local, align 4
  %v9_14674 = icmp eq i32 %v0_14674, %v1_14674
  br i1 %v9_14674, label %dec_label_pc_1467c, label %dec_label_pc_14710

dec_label_pc_1467c:                               ; preds = %dec_label_pc_14660
  %v0_1467c = call i32 @function_13070()
  store i32 22, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r1.global-to-local, align 4
  %v2_14688 = inttoptr i32 %v0_1467c to i32*
  store i32 22, i32* %v2_14688, align 4
  %v0_14714.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14714

dec_label_pc_14690:                               ; preds = %dec_label_pc_1463c
  %v3_1465811 = udiv i32 %v1_14648, 256
  %v1_14690 = trunc i32 %v3_1465811 to i8
  %v3_14690 = add i32 %v2_14690, 17
  %v4_14690 = inttoptr i32 %v3_14690 to i8*
  store i8 %v1_14690, i8* %v4_14690, align 1
  %v0_14694 = load i32, i32* %r3.global-to-local, align 4
  %v1_14694 = trunc i32 %v0_14694 to i8
  %v2_14694 = load i32, i32* @r5, align 4
  %v3_14694 = add i32 %v2_14694, 16
  %v4_14694 = inttoptr i32 %v3_14694 to i8*
  store i8 %v1_14694, i8* %v4_14694, align 1
  %v0_14698 = load i32, i32* @r4, align 4
  %v1_14698 = add i32 %v0_14698, 8
  %v1_1469c = inttoptr i32 %v1_14698 to i32*
  %v2_1469c = load i32, i32* %v1_1469c, align 4
  %v3_1469c = add i32 %v0_14698, 12
  %v4_1469c = inttoptr i32 %v3_1469c to i32*
  %v5_1469c = load i32, i32* %v4_1469c, align 4
  store i32 %v5_1469c, i32* %r3.global-to-local, align 4
  %v1_146a8 = inttoptr i32 %v0_14698 to i32*
  %v2_146a8 = load i32, i32* %v1_146a8, align 4
  %v3_146a8 = add i32 %v0_14698, 4
  %v4_146a8 = inttoptr i32 %v3_146a8 to i32*
  %v5_146a8 = load i32, i32* %v4_146a8, align 4
  store i32 %v5_146a8, i32* %r3.global-to-local, align 4
  %v0_146ac = load i32, i32* @r5, align 4
  %v1_146ac = inttoptr i32 %v0_146ac to i32*
  store i32 %v2_146a8, i32* %v1_146ac, align 4
  %v3_146ac = add i32 %v0_146ac, 4
  %v4_146ac = inttoptr i32 %v3_146ac to i32*
  %v5_146ac = load i32, i32* %r3.global-to-local, align 4
  store i32 %v5_146ac, i32* %v4_146ac, align 4
  %v0_146b0 = load i32, i32* @r4, align 4
  %v1_146b0 = add i32 %v0_146b0, 8
  %v1_146b4 = inttoptr i32 %v1_146b0 to i32*
  %v2_146b4 = load i32, i32* %v1_146b4, align 4
  %v3_146b4 = add i32 %v0_146b0, 12
  %v4_146b4 = inttoptr i32 %v3_146b4 to i32*
  %v5_146b4 = load i32, i32* %v4_146b4, align 4
  store i32 %v5_146b4, i32* %r3.global-to-local, align 4
  %v1_146b8 = load i32, i32* @r5, align 4
  %v2_146b8 = add i32 %v1_146b8, 8
  %v3_146b8 = inttoptr i32 %v2_146b8 to i32*
  store i32 %v2_146b4, i32* %v3_146b8, align 4
  %v0_146bc = load i32, i32* %r3.global-to-local, align 4
  %v1_146bc = load i32, i32* @r5, align 4
  %v2_146bc = add i32 %v1_146bc, 12
  %v3_146bc = inttoptr i32 %v2_146bc to i32*
  store i32 %v0_146bc, i32* %v3_146bc, align 4
  %v0_146c0 = load i32, i32* @r4, align 4
  %v1_146c0 = add i32 %v0_146c0, 18
  %v2_146c0 = inttoptr i32 %v1_146c0 to i8*
  %v3_146c0 = load i8, i8* %v2_146c0, align 1
  %v4_146c0 = zext i8 %v3_146c0 to i32
  store i32 %v4_146c0, i32* %r3.global-to-local, align 4
  %v2_146c4 = load i32, i32* @r5, align 4
  %v3_146c4 = add i32 %v2_146c4, 18
  %v4_146c4 = inttoptr i32 %v3_146c4 to i8*
  store i8 %v3_146c0, i8* %v4_146c4, align 1
  %v0_146c8 = load i32, i32* @r4, align 4
  %v1_146c8 = add i32 %v0_146c8, 16
  %v2_146c8 = inttoptr i32 %v1_146c8 to i8*
  %v3_146c8 = load i8, i8* %v2_146c8, align 1
  %v4_146c8 = zext i8 %v3_146c8 to i32
  %v0_146cc = load i32, i32* %r7.global-to-local, align 4
  %v1_146cc = add i32 %v0_146cc, 1
  %v2_146cc = inttoptr i32 %v1_146cc to i8*
  %v3_146cc = load i8, i8* %v2_146cc, align 1
  %v4_146cc = zext i8 %v3_146cc to i32
  store i32 %v4_146cc, i32* %r3.global-to-local, align 4
  %v4_146d0 = mul nuw nsw i32 %v4_146cc, 256
  %v5_146d0 = or i32 %v4_146d0, %v4_146c8
  %v1_146d4 = add nsw i32 %v5_146d0, -19
  store i32 %v1_146d4, i32* @r2, align 4
  %v3_146d8 = call i32 @function_130b0(i32 %v1_14700, i32 %v1_14704, i32 %v1_146d4)
  %v0_146dc = load i32, i32* @r4, align 4
  %v1_146dc = add i32 %v0_146dc, 16
  %v2_146dc = inttoptr i32 %v1_146dc to i8*
  %v3_146dc = load i8, i8* %v2_146dc, align 1
  %v4_146dc = zext i8 %v3_146dc to i32
  store i32 %v4_146dc, i32* %r3.global-to-local, align 4
  %v0_146e0 = load i32, i32* %r7.global-to-local, align 4
  %v1_146e0 = add i32 %v0_146e0, 1
  %v2_146e0 = inttoptr i32 %v1_146e0 to i8*
  %v3_146e0 = load i8, i8* %v2_146e0, align 1
  %v4_146e0 = zext i8 %v3_146e0 to i32
  %v4_146e4 = mul nuw nsw i32 %v4_146e0, 256
  %v5_146e4 = or i32 %v4_146e4, %v4_146dc
  store i32 %v5_146e4, i32* %r3.global-to-local, align 4
  %v2_146e8 = add i32 %v5_146e4, %v0_146dc
  store i32 %v2_146e8, i32* @r4, align 4
  %v0_146ec = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_146ec, i32* @r5, align 4
  %v1_146f0.pre = load i32, i32* @r6, align 4
  %v0_14708.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_146f0

dec_label_pc_146f0:                               ; preds = %dec_label_pc_14620, %dec_label_pc_14690
  %stack_var_-52.0 = phi i32 [ -1, %dec_label_pc_14620 ], [ %v2_1469c, %dec_label_pc_14690 ]
  %v0_14708 = phi i32 [ %v0_14628, %dec_label_pc_14620 ], [ %v0_14708.pre, %dec_label_pc_14690 ]
  %v2_14690 = phi i32 [ %v0_14628, %dec_label_pc_14620 ], [ %v0_146ec, %dec_label_pc_14690 ]
  %v0_14640 = phi i32 [ %v0_1462c, %dec_label_pc_14620 ], [ %v2_146e8, %dec_label_pc_14690 ]
  %v1_146f0 = phi i32 [ %v5_145ec, %dec_label_pc_14620 ], [ %v1_146f0.pre, %dec_label_pc_14690 ]
  %stack_var_-48.0 = phi i32 [ -1, %dec_label_pc_14620 ], [ %v5_1469c, %dec_label_pc_14690 ]
  %v0_146f0 = load i32, i32* %sl.global-to-local, align 4
  %v2_146f0 = add i32 %v0_146f0, %v1_146f0
  store i32 %v2_146f0, i32* %r3.global-to-local, align 4
  %v3_146f4 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_146f4, i32* @r2, align 4
  %v3_146f8 = icmp ult i32 %v0_14640, %v2_146f0
  %v1_146fc = add i32 %v0_14640, 16
  store i32 %v1_146fc, i32* %r7.global-to-local, align 4
  %v1_14700 = add i32 %v2_14690, 19
  store i32 %v1_14700, i32* @r0, align 4
  %v1_14704 = add i32 %v0_14640, 19
  store i32 %v1_14704, i32* @r1, align 4
  br i1 %v3_146f8, label %dec_label_pc_1463c, label %dec_label_pc_14710

dec_label_pc_14710:                               ; preds = %dec_label_pc_146f0, %dec_label_pc_14660
  %v1_14710 = phi i32 [ %v0_14674, %dec_label_pc_14660 ], [ %v2_14690, %dec_label_pc_146f0 ]
  %v0_14710 = phi i32 [ %v1_14674, %dec_label_pc_14660 ], [ %v0_14708, %dec_label_pc_146f0 ]
  %v2_14710 = sub i32 %v1_14710, %v0_14710
  store i32 %v2_14710, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14714

dec_label_pc_14714:                               ; preds = %dec_label_pc_1467c, %dec_label_pc_14618, %dec_label_pc_14710
  %v0_14714 = phi i32 [ %v0_14714.pre, %dec_label_pc_1467c ], [ %v0_14618, %dec_label_pc_14618 ], [ %v2_14710, %dec_label_pc_14710 ]
  store i32 %v3_145c0, i32* @r4, align 4
  store i32 %v9_145c0, i32* %r6.global-to-local, align 4
  ret i32 %v0_14714

; uselistorder directives
  uselistorder i32 %v1_14704, { 1, 0 }
  uselistorder i32 %v1_14700, { 1, 0 }
  uselistorder i32 %v1_146fc, { 1, 0 }
  uselistorder i32 %v3_146f4, { 1, 0 }
  uselistorder i32 %v0_14640, { 2, 1, 3, 0 }
  uselistorder i32 %v2_14690, { 0, 3, 1, 2 }
  uselistorder i32 %v0_14698, { 1, 0, 2, 3 }
  uselistorder i32 %v0_14628, { 1, 0, 2 }
  uselistorder i32 %v5_145ec, { 1, 0, 2 }
  uselistorder i32* %r7.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r3.global-to-local, { 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10, 12, 14, 15, 16 }
  uselistorder i32 (i32, i32, i32)* @function_130b0, { 5, 1, 0, 2, 4, 3 }
  uselistorder i32 128, { 13, 14, 34, 15, 35, 25, 18, 26, 10, 27, 0, 19, 20, 21, 1, 2, 3, 4, 5, 6, 7, 8, 9, 28, 22, 23, 24, 29, 11, 30, 12, 16, 31, 32, 33, 17 }
  uselistorder i32* @sp, { 4, 2, 0, 3, 1 }
  uselistorder i32* @r6, { 1, 87, 88, 89, 209, 210, 315, 316, 317, 318, 319, 320, 321, 323, 322, 338, 339, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 10, 11, 12, 13, 14, 15, 60, 61, 16, 17, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 18, 19, 20, 21, 22, 23, 24, 340, 341, 342, 213, 214, 215, 216, 0, 73, 74, 75, 76, 77, 78, 2, 79, 80, 81, 82, 83, 8, 84, 85, 86, 108, 109, 110, 111, 7, 112, 113, 114, 3, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 217, 4, 218, 5, 219, 6, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 343, 344, 345, 346, 347, 348, 349, 350, 351, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 199, 202, 200, 201, 203, 204, 9, 205, 206, 207, 208, 211, 212 }
  uselistorder label %dec_label_pc_14714, { 2, 0, 1 }
  uselistorder label %dec_label_pc_146f0, { 1, 0 }
}

define i32 @function_14720() local_unnamed_addr {
dec_label_pc_14720:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14720 = load i32, i32* @r4, align 4
  store i32 %v3_14720, i32* %stack_var_-8, align 4
  %v0_14728 = load i32, i32* @r0, align 4
  store i32 %v0_14728, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_14728, -4095
  br i1 %tmp, label %dec_label_pc_14744, label %dec_label_pc_14734

dec_label_pc_14734:                               ; preds = %dec_label_pc_14720
  %v0_14734 = call i32 @function_13070()
  %v0_14738 = load i32, i32* %r4.global-to-local, align 4
  %v1_14738 = sub i32 0, %v0_14738
  %v2_1473c = inttoptr i32 %v0_14734 to i32*
  store i32 %v1_14738, i32* %v2_1473c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_14748.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_14744

dec_label_pc_14744:                               ; preds = %dec_label_pc_14720, %dec_label_pc_14734
  %v2_14748 = phi i32 [ %v3_14720, %dec_label_pc_14720 ], [ %v2_14748.pre, %dec_label_pc_14734 ]
  %v0_14744 = phi i32 [ %v0_14728, %dec_label_pc_14720 ], [ -1, %dec_label_pc_14734 ]
  store i32 %v2_14748, i32* @r4, align 4
  ret i32 %v0_14744

; uselistorder directives
  uselistorder i32 %v0_14728, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14744, { 1, 0 }
}

define i32 @function_1474c() local_unnamed_addr {
dec_label_pc_1474c:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1474c = load i32, i32* @r4, align 4
  store i32 %v3_1474c, i32* %stack_var_-8, align 4
  %v0_14754 = load i32, i32* @r0, align 4
  store i32 %v0_14754, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_14754, -4095
  br i1 %tmp, label %dec_label_pc_14770, label %dec_label_pc_14760

dec_label_pc_14760:                               ; preds = %dec_label_pc_1474c
  %v0_14760 = call i32 @function_13070()
  %v0_14764 = load i32, i32* %r4.global-to-local, align 4
  %v1_14764 = sub i32 0, %v0_14764
  %v2_14768 = inttoptr i32 %v0_14760 to i32*
  store i32 %v1_14764, i32* %v2_14768, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_14774.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_14770

dec_label_pc_14770:                               ; preds = %dec_label_pc_1474c, %dec_label_pc_14760
  %v2_14774 = phi i32 [ %v3_1474c, %dec_label_pc_1474c ], [ %v2_14774.pre, %dec_label_pc_14760 ]
  %v0_14770 = phi i32 [ %v0_14754, %dec_label_pc_1474c ], [ -1, %dec_label_pc_14760 ]
  store i32 %v2_14774, i32* @r4, align 4
  ret i32 %v0_14770

; uselistorder directives
  uselistorder i32 %v0_14754, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14770, { 1, 0 }
}

define i32 @function_14778(i32 %arg1) local_unnamed_addr {
dec_label_pc_14778:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14778 = load i32, i32* @r4, align 4
  store i32 %v3_14778, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_1479c, label %dec_label_pc_1478c

dec_label_pc_1478c:                               ; preds = %dec_label_pc_14778
  %v0_1478c = call i32 @function_13070()
  %v0_14790 = load i32, i32* %r4.global-to-local, align 4
  %v1_14790 = sub i32 0, %v0_14790
  %v2_14794 = inttoptr i32 %v0_1478c to i32*
  store i32 %v1_14790, i32* %v2_14794, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_147a0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1479c

dec_label_pc_1479c:                               ; preds = %dec_label_pc_14778, %dec_label_pc_1478c
  %v2_147a0 = phi i32 [ %v3_14778, %dec_label_pc_14778 ], [ %v2_147a0.pre, %dec_label_pc_1478c ]
  %v0_1479c = phi i32 [ %arg1, %dec_label_pc_14778 ], [ -1, %dec_label_pc_1478c ]
  store i32 %v2_147a0, i32* %r4.global-to-local, align 4
  ret i32 %v0_1479c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1479c, { 1, 0 }
}

define i32 @function_147a4() local_unnamed_addr {
dec_label_pc_147a4:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_147a4 = load i32, i32* @r4, align 4
  store i32 %v3_147a4, i32* %stack_var_-8, align 4
  %v0_147ac = load i32, i32* @r0, align 4
  store i32 %v0_147ac, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_147ac, -4095
  br i1 %tmp, label %dec_label_pc_147c8, label %dec_label_pc_147b8

dec_label_pc_147b8:                               ; preds = %dec_label_pc_147a4
  %v0_147b8 = call i32 @function_13070()
  %v0_147bc = load i32, i32* %r4.global-to-local, align 4
  %v1_147bc = sub i32 0, %v0_147bc
  %v2_147c0 = inttoptr i32 %v0_147b8 to i32*
  store i32 %v1_147bc, i32* %v2_147c0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_147cc.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_147c8

dec_label_pc_147c8:                               ; preds = %dec_label_pc_147a4, %dec_label_pc_147b8
  %v2_147cc = phi i32 [ %v3_147a4, %dec_label_pc_147a4 ], [ %v2_147cc.pre, %dec_label_pc_147b8 ]
  %v0_147c8 = phi i32 [ %v0_147ac, %dec_label_pc_147a4 ], [ -1, %dec_label_pc_147b8 ]
  store i32 %v2_147cc, i32* %r4.global-to-local, align 4
  ret i32 %v0_147c8

; uselistorder directives
  uselistorder i32 %v0_147ac, { 1, 0, 2 }
  uselistorder label %dec_label_pc_147c8, { 1, 0 }
}

define i32 @function_147d0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_147d0:
  %r4.global-to-local = alloca i32, align 4
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_14814, label %dec_label_pc_14800

dec_label_pc_14800:                               ; preds = %dec_label_pc_147d0
  %v0_14800 = call i32 @function_13070()
  %v0_14804 = load i32, i32* %r4.global-to-local, align 4
  %v1_14804 = sub i32 0, %v0_14804
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_1480c = inttoptr i32 %v0_14800 to i32*
  store i32 %v1_14804, i32* %v2_1480c, align 4
  %v0_1481c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1481c

dec_label_pc_14814:                               ; preds = %dec_label_pc_147d0
  %v2_14814 = icmp eq i32 %arg1, 0
  br i1 %v2_14814, label %dec_label_pc_14828, label %dec_label_pc_1481c

dec_label_pc_1481c:                               ; preds = %dec_label_pc_14814, %dec_label_pc_14800
  %v0_1481c = phi i32 [ %arg1, %dec_label_pc_14814 ], [ %v0_1481c.pre, %dec_label_pc_14800 ]
  br label %dec_label_pc_1482c

dec_label_pc_14828:                               ; preds = %dec_label_pc_14814
  br label %dec_label_pc_1482c

dec_label_pc_1482c:                               ; preds = %dec_label_pc_1481c, %dec_label_pc_14828
  %v14_14830 = phi i32 [ %v0_1481c, %dec_label_pc_1481c ], [ %tmp9, %dec_label_pc_14828 ]
  ret i32 %v14_14830

; uselistorder directives
  uselistorder i32 %arg1, { 1, 3, 0, 2 }
  uselistorder label %dec_label_pc_1482c, { 1, 0 }
}

define i32 @function_14834(%timespec* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14834:
  %r4.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg2 to %timespec*
  %stack_var_-8 = alloca i32, align 4
  %v3_14834 = load i32, i32* @r4, align 4
  store i32 %v3_14834, i32* %stack_var_-8, align 4
  %v6_14838 = call i32 @nanosleep(%timespec* %arg1, %timespec* %tmp)
  store i32 %v6_14838, i32* %r4.global-to-local, align 4
  %tmp6 = icmp ult i32 %v6_14838, -4095
  br i1 %tmp6, label %dec_label_pc_14858, label %dec_label_pc_14848

dec_label_pc_14848:                               ; preds = %dec_label_pc_14834
  %v0_14848 = call i32 @function_13070()
  %v0_1484c = load i32, i32* %r4.global-to-local, align 4
  %v1_1484c = sub i32 0, %v0_1484c
  %v2_14850 = inttoptr i32 %v0_14848 to i32*
  store i32 %v1_1484c, i32* %v2_14850, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14858

dec_label_pc_14858:                               ; preds = %dec_label_pc_14834, %dec_label_pc_14848
  %v0_14858 = phi i32 [ %v6_14838, %dec_label_pc_14834 ], [ -1, %dec_label_pc_14848 ]
  %v2_1485c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1485c, i32* %r4.global-to-local, align 4
  ret i32 %v0_14858

; uselistorder directives
  uselistorder i32 %v6_14838, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14858, { 1, 0 }
}

define i32 @function_14860(i32 %arg1) local_unnamed_addr {
dec_label_pc_14860:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_14860 = load i32, i32* @r4, align 4
  store i32 %v3_14860, i32* %stack_var_-12, align 4
  store i32 ptrtoint (i32* @global_var_1da78.467 to i32), i32* %r4.global-to-local, align 4
  %v2_14868 = load i32, i32* @global_var_1da78.467, align 4
  %v2_1486c = icmp eq i32 %v2_14868, 0
  store i32 %arg1, i32* %r5.global-to-local, align 4
  br i1 %v2_1486c, label %dec_label_pc_1487c, label %dec_label_pc_14888

dec_label_pc_1487c:                               ; preds = %dec_label_pc_14860
  %v2_1487c = call i32 @function_15278(i32* null)
  %v1_14880 = icmp slt i32 %v2_1487c, 0
  br i1 %v1_14880, label %dec_label_pc_148a8, label %dec_label_pc_14888thread-pre-split

dec_label_pc_14888thread-pre-split:               ; preds = %dec_label_pc_1487c
  %v0_1488c.pr = load i32, i32* %r5.global-to-local, align 4
  %v2_14888.pre = load i32, i32* @global_var_1da78.467, align 4
  br label %dec_label_pc_14888

dec_label_pc_14888:                               ; preds = %dec_label_pc_14888thread-pre-split, %dec_label_pc_14860
  %v2_14888 = phi i32 [ %v2_14888.pre, %dec_label_pc_14888thread-pre-split ], [ %v2_14868, %dec_label_pc_14860 ]
  %v1_14894 = phi i32 [ %v0_1488c.pr, %dec_label_pc_14888thread-pre-split ], [ %arg1, %dec_label_pc_14860 ]
  %v2_1488c = icmp eq i32 %v1_14894, 0
  store i32 %v2_14888, i32* %r4.global-to-local, align 4
  br i1 %v2_1488c, label %dec_label_pc_148ac, label %dec_label_pc_1489c

dec_label_pc_1489c:                               ; preds = %dec_label_pc_14888
  %v2_14894 = add i32 %v1_14894, %v2_14888
  %v1_1489c = inttoptr i32 %v2_14894 to i32*
  %v2_1489c = call i32 @function_15278(i32* %v1_1489c)
  %v1_148a0 = icmp slt i32 %v2_1489c, 0
  br i1 %v1_148a0, label %dec_label_pc_148a8, label %dec_label_pc_1489c.dec_label_pc_148ac_crit_edge

dec_label_pc_1489c.dec_label_pc_148ac_crit_edge:  ; preds = %dec_label_pc_1489c
  %v0_148ac.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_148ac

dec_label_pc_148a8:                               ; preds = %dec_label_pc_1489c, %dec_label_pc_1487c
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_148ac

dec_label_pc_148ac:                               ; preds = %dec_label_pc_1489c.dec_label_pc_148ac_crit_edge, %dec_label_pc_14888, %dec_label_pc_148a8
  %v0_148ac = phi i32 [ %v0_148ac.pre, %dec_label_pc_1489c.dec_label_pc_148ac_crit_edge ], [ %v2_14888, %dec_label_pc_14888 ], [ -1, %dec_label_pc_148a8 ]
  %v2_148b0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_148b0, i32* @r4, align 4
  ret i32 %v0_148ac

; uselistorder directives
  uselistorder i32 %v2_14888, { 1, 0, 2 }
  uselistorder i32* null, { 0, 4, 6, 23, 24, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1, 18, 2, 19, 3, 20, 21, 22 }
  uselistorder label %dec_label_pc_148ac, { 2, 0, 1 }
}

define i32 @function_148b8(%tms* %arg1) local_unnamed_addr {
dec_label_pc_148b8:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_148b8 = load i32, i32* @r4, align 4
  store i32 %v3_148b8, i32* %stack_var_-8, align 4
  %v3_148bc = call i32 @times(%tms* %arg1)
  store i32 %v3_148bc, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v3_148bc, -4095
  br i1 %tmp, label %dec_label_pc_148dc, label %dec_label_pc_148cc

dec_label_pc_148cc:                               ; preds = %dec_label_pc_148b8
  %v0_148cc = call i32 @function_13070()
  %v0_148d0 = load i32, i32* %r4.global-to-local, align 4
  %v1_148d0 = sub i32 0, %v0_148d0
  %v2_148d4 = inttoptr i32 %v0_148cc to i32*
  store i32 %v1_148d0, i32* %v2_148d4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_148dc

dec_label_pc_148dc:                               ; preds = %dec_label_pc_148b8, %dec_label_pc_148cc
  %v0_148dc = phi i32 [ %v3_148bc, %dec_label_pc_148b8 ], [ -1, %dec_label_pc_148cc ]
  %v2_148e0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_148e0, i32* %r4.global-to-local, align 4
  ret i32 %v0_148dc

; uselistorder directives
  uselistorder i32 %v3_148bc, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_148dc, { 1, 0 }
}

define i32 @function_148e4(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_148e4:
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %arg2, i32* %r7.global-to-local, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 96, i32* @r2, align 4
  %v2_14900 = inttoptr i32 %arg2 to i8*
  %v3_14900 = call i32 @function_130d0(i8* %v2_14900, i32 0)
  %v1_14904 = add i32 %tmp, 1
  %v2_14904 = inttoptr i32 %v1_14904 to i8*
  %v3_14904 = load i8, i8* %v2_14904, align 1
  %v4_14904 = zext i8 %v3_14904 to i32
  %v1_14908 = add i32 %tmp, 5
  %v2_14908 = inttoptr i32 %v1_14908 to i8*
  %v3_14908 = load i8, i8* %v2_14908, align 1
  %v4_14908 = zext i8 %v3_14908 to i32
  %v2_1490c = load i8, i8* %arg1, align 1
  %v3_1490c = zext i8 %v2_1490c to i32
  %v1_14910 = add i32 %tmp, 4
  %v2_14910 = inttoptr i32 %v1_14910 to i8*
  %v3_14910 = load i8, i8* %v2_14910, align 1
  %v4_14910 = zext i8 %v3_14910 to i32
  %v1_14914 = add i32 %tmp, 2
  %v2_14914 = inttoptr i32 %v1_14914 to i8*
  %v3_14914 = load i8, i8* %v2_14914, align 1
  %v4_14914 = zext i8 %v3_14914 to i32
  %v1_14918 = add i32 %tmp, 6
  %v2_14918 = inttoptr i32 %v1_14918 to i8*
  %v3_14918 = load i8, i8* %v2_14918, align 1
  %v4_14918 = zext i8 %v3_14918 to i32
  %v1_1491c = add i32 %tmp, 3
  %v2_1491c = inttoptr i32 %v1_1491c to i8*
  %v3_1491c = load i8, i8* %v2_1491c, align 1
  %v4_1491c = zext i8 %v3_1491c to i32
  %v4_14920 = mul nuw nsw i32 %v4_14904, 256
  %v5_14920 = or i32 %v3_1490c, %v4_14920
  %v4_14924 = mul nuw nsw i32 %v4_14908, 256
  %v5_14924 = or i32 %v4_14910, %v4_14924
  %v1_14928 = add i32 %tmp, 7
  %v2_14928 = inttoptr i32 %v1_14928 to i8*
  %v3_14928 = load i8, i8* %v2_14928, align 1
  %v4_14928 = zext i8 %v3_14928 to i32
  %v4_1492c = mul nuw nsw i32 %v4_14914, 65536
  %v5_1492c = or i32 %v4_1492c, %v5_14920
  %v4_14930 = mul nuw nsw i32 %v4_14918, 65536
  %v5_14930 = or i32 %v4_14930, %v5_14924
  %v4_14934 = mul nuw i32 %v4_1491c, 16777216
  %v5_14934 = or i32 %v4_14934, %v5_1492c
  %v4_14938 = mul nuw i32 %v4_14928, 16777216
  %v5_14938 = or i32 %v4_14938, %v5_14930
  store i32 %v5_14938, i32* %r3.global-to-local, align 4
  %v0_1493c = load i32, i32* %r7.global-to-local, align 4
  %v1_1493c = inttoptr i32 %v0_1493c to i32*
  store i32 %v5_14934, i32* %v1_1493c, align 4
  %v3_1493c = add i32 %v0_1493c, 4
  %v4_1493c = inttoptr i32 %v3_1493c to i32*
  %v5_1493c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v5_1493c, i32* %v4_1493c, align 4
  %v0_14940 = load i32, i32* %r4.global-to-local, align 4
  %v1_14940 = add i32 %v0_14940, 89
  %v2_14940 = inttoptr i32 %v1_14940 to i8*
  %v3_14940 = load i8, i8* %v2_14940, align 1
  %v4_14940 = zext i8 %v3_14940 to i32
  %v1_14944 = add i32 %v0_14940, 93
  %v2_14944 = inttoptr i32 %v1_14944 to i8*
  %v3_14944 = load i8, i8* %v2_14944, align 1
  %v4_14944 = zext i8 %v3_14944 to i32
  %v1_14948 = add i32 %v0_14940, 88
  %v2_14948 = inttoptr i32 %v1_14948 to i8*
  %v3_14948 = load i8, i8* %v2_14948, align 1
  %v4_14948 = zext i8 %v3_14948 to i32
  %v1_1494c = add i32 %v0_14940, 92
  %v2_1494c = inttoptr i32 %v1_1494c to i8*
  %v3_1494c = load i8, i8* %v2_1494c, align 1
  %v4_1494c = zext i8 %v3_1494c to i32
  store i32 %v4_1494c, i32* %r3.global-to-local, align 4
  %v1_14950 = add i32 %v0_14940, 94
  %v2_14950 = inttoptr i32 %v1_14950 to i8*
  %v3_14950 = load i8, i8* %v2_14950, align 1
  %v4_14950 = zext i8 %v3_14950 to i32
  %v1_14954 = add i32 %v0_14940, 90
  %v2_14954 = inttoptr i32 %v1_14954 to i8*
  %v3_14954 = load i8, i8* %v2_14954, align 1
  %v4_14954 = zext i8 %v3_14954 to i32
  %v1_14958 = add i32 %v0_14940, 91
  %v2_14958 = inttoptr i32 %v1_14958 to i8*
  %v3_14958 = load i8, i8* %v2_14958, align 1
  %v4_14958 = zext i8 %v3_14958 to i32
  %v4_1495c = mul nuw nsw i32 %v4_14940, 256
  %v5_1495c = or i32 %v4_14948, %v4_1495c
  %v4_14960 = mul nuw nsw i32 %v4_14944, 256
  %v5_14960 = or i32 %v4_1494c, %v4_14960
  store i32 %v5_14960, i32* %r3.global-to-local, align 4
  %v1_14964 = add i32 %v0_14940, 95
  %v2_14964 = inttoptr i32 %v1_14964 to i8*
  %v3_14964 = load i8, i8* %v2_14964, align 1
  %v4_14964 = zext i8 %v3_14964 to i32
  %v4_14968 = mul nuw nsw i32 %v4_14950, 65536
  %v5_14968 = or i32 %v4_14968, %v5_14960
  store i32 %v5_14968, i32* %r3.global-to-local, align 4
  %v4_1496c = mul nuw nsw i32 %v4_14954, 65536
  %v5_1496c = or i32 %v4_1496c, %v5_1495c
  %v4_14970 = mul nuw i32 %v4_14958, 16777216
  %v5_14970 = or i32 %v4_14970, %v5_1496c
  %v4_14974 = mul nuw i32 %v4_14964, 16777216
  %v5_14974 = or i32 %v4_14974, %v5_14968
  store i32 %v5_14974, i32* %r6.global-to-local, align 4
  %v1_14978 = load i32, i32* %r7.global-to-local, align 4
  %v2_14978 = add i32 %v1_14978, 88
  %v3_14978 = inttoptr i32 %v2_14978 to i32*
  store i32 %v5_14970, i32* %v3_14978, align 4
  %v0_1497c = load i32, i32* %r6.global-to-local, align 4
  %v1_1497c = load i32, i32* %r7.global-to-local, align 4
  %v2_1497c = add i32 %v1_1497c, 92
  %v3_1497c = inttoptr i32 %v2_1497c to i32*
  store i32 %v0_1497c, i32* %v3_1497c, align 4
  %v0_14980 = load i32, i32* %r4.global-to-local, align 4
  %v1_14980 = add i32 %v0_14980, 13
  %v2_14980 = inttoptr i32 %v1_14980 to i8*
  %v3_14980 = load i8, i8* %v2_14980, align 1
  %v4_14980 = zext i8 %v3_14980 to i32
  %v1_14984 = add i32 %v0_14980, 12
  %v2_14984 = inttoptr i32 %v1_14984 to i8*
  %v3_14984 = load i8, i8* %v2_14984, align 1
  %v4_14984 = zext i8 %v3_14984 to i32
  store i32 %v4_14984, i32* %r3.global-to-local, align 4
  %v1_14988 = add i32 %v0_14980, 14
  %v2_14988 = inttoptr i32 %v1_14988 to i8*
  %v3_14988 = load i8, i8* %v2_14988, align 1
  %v4_14988 = zext i8 %v3_14988 to i32
  %v4_1498c = mul nuw nsw i32 %v4_14980, 256
  %v5_1498c = or i32 %v4_14984, %v4_1498c
  store i32 %v5_1498c, i32* %r3.global-to-local, align 4
  %v1_14990 = add i32 %v0_14980, 15
  %v2_14990 = inttoptr i32 %v1_14990 to i8*
  %v3_14990 = load i8, i8* %v2_14990, align 1
  %v4_14990 = zext i8 %v3_14990 to i32
  %v4_14994 = mul nuw nsw i32 %v4_14988, 65536
  %v5_14994 = or i32 %v4_14994, %v5_1498c
  %v4_14998 = mul nuw i32 %v4_14990, 16777216
  %v5_14998 = or i32 %v5_14994, %v4_14998
  store i32 %v5_14998, i32* %r3.global-to-local, align 4
  %v1_1499c = load i32, i32* %r7.global-to-local, align 4
  %v2_1499c = add i32 %v1_1499c, 12
  %v3_1499c = inttoptr i32 %v2_1499c to i32*
  store i32 %v5_14998, i32* %v3_1499c, align 4
  %v0_149a0 = load i32, i32* %r4.global-to-local, align 4
  %v1_149a0 = add i32 %v0_149a0, 17
  %v2_149a0 = inttoptr i32 %v1_149a0 to i8*
  %v3_149a0 = load i8, i8* %v2_149a0, align 1
  %v4_149a0 = zext i8 %v3_149a0 to i32
  %v1_149a4 = add i32 %v0_149a0, 16
  %v2_149a4 = inttoptr i32 %v1_149a4 to i8*
  %v3_149a4 = load i8, i8* %v2_149a4, align 1
  %v4_149a4 = zext i8 %v3_149a4 to i32
  store i32 %v4_149a4, i32* %r3.global-to-local, align 4
  %v1_149a8 = add i32 %v0_149a0, 18
  %v2_149a8 = inttoptr i32 %v1_149a8 to i8*
  %v3_149a8 = load i8, i8* %v2_149a8, align 1
  %v4_149a8 = zext i8 %v3_149a8 to i32
  %v4_149ac = mul nuw nsw i32 %v4_149a0, 256
  %v5_149ac = or i32 %v4_149a4, %v4_149ac
  store i32 %v5_149ac, i32* %r3.global-to-local, align 4
  %v1_149b0 = add i32 %v0_149a0, 19
  %v2_149b0 = inttoptr i32 %v1_149b0 to i8*
  %v3_149b0 = load i8, i8* %v2_149b0, align 1
  %v4_149b0 = zext i8 %v3_149b0 to i32
  %v4_149b4 = mul nuw nsw i32 %v4_149a8, 65536
  %v5_149b4 = or i32 %v4_149b4, %v5_149ac
  %v4_149b8 = mul nuw i32 %v4_149b0, 16777216
  %v5_149b8 = or i32 %v5_149b4, %v4_149b8
  store i32 %v5_149b8, i32* %r3.global-to-local, align 4
  %v1_149bc = load i32, i32* %r7.global-to-local, align 4
  %v2_149bc = add i32 %v1_149bc, 16
  %v3_149bc = inttoptr i32 %v2_149bc to i32*
  store i32 %v5_149b8, i32* %v3_149bc, align 4
  %v0_149c0 = load i32, i32* %r4.global-to-local, align 4
  %v1_149c0 = add i32 %v0_149c0, 21
  %v2_149c0 = inttoptr i32 %v1_149c0 to i8*
  %v3_149c0 = load i8, i8* %v2_149c0, align 1
  %v4_149c0 = zext i8 %v3_149c0 to i32
  %v1_149c4 = add i32 %v0_149c0, 20
  %v2_149c4 = inttoptr i32 %v1_149c4 to i8*
  %v3_149c4 = load i8, i8* %v2_149c4, align 1
  %v4_149c4 = zext i8 %v3_149c4 to i32
  store i32 %v4_149c4, i32* %r3.global-to-local, align 4
  %v1_149c8 = add i32 %v0_149c0, 22
  %v2_149c8 = inttoptr i32 %v1_149c8 to i8*
  %v3_149c8 = load i8, i8* %v2_149c8, align 1
  %v4_149c8 = zext i8 %v3_149c8 to i32
  %v4_149cc = mul nuw nsw i32 %v4_149c0, 256
  %v5_149cc = or i32 %v4_149c4, %v4_149cc
  store i32 %v5_149cc, i32* %r3.global-to-local, align 4
  %v1_149d0 = add i32 %v0_149c0, 23
  %v2_149d0 = inttoptr i32 %v1_149d0 to i8*
  %v3_149d0 = load i8, i8* %v2_149d0, align 1
  %v4_149d0 = zext i8 %v3_149d0 to i32
  %v4_149d4 = mul nuw nsw i32 %v4_149c8, 65536
  %v5_149d4 = or i32 %v4_149d4, %v5_149cc
  %v4_149d8 = mul nuw i32 %v4_149d0, 16777216
  %v5_149d8 = or i32 %v5_149d4, %v4_149d8
  store i32 %v5_149d8, i32* %r3.global-to-local, align 4
  %v1_149dc = load i32, i32* %r7.global-to-local, align 4
  %v2_149dc = add i32 %v1_149dc, 20
  %v3_149dc = inttoptr i32 %v2_149dc to i32*
  store i32 %v5_149d8, i32* %v3_149dc, align 4
  %v0_149e0 = load i32, i32* %r4.global-to-local, align 4
  %v1_149e0 = add i32 %v0_149e0, 25
  %v2_149e0 = inttoptr i32 %v1_149e0 to i8*
  %v3_149e0 = load i8, i8* %v2_149e0, align 1
  %v4_149e0 = zext i8 %v3_149e0 to i32
  %v1_149e4 = add i32 %v0_149e0, 24
  %v2_149e4 = inttoptr i32 %v1_149e4 to i8*
  %v3_149e4 = load i8, i8* %v2_149e4, align 1
  %v4_149e4 = zext i8 %v3_149e4 to i32
  store i32 %v4_149e4, i32* %r3.global-to-local, align 4
  %v1_149e8 = add i32 %v0_149e0, 26
  %v2_149e8 = inttoptr i32 %v1_149e8 to i8*
  %v3_149e8 = load i8, i8* %v2_149e8, align 1
  %v4_149e8 = zext i8 %v3_149e8 to i32
  %v4_149ec = mul nuw nsw i32 %v4_149e0, 256
  %v5_149ec = or i32 %v4_149e4, %v4_149ec
  store i32 %v5_149ec, i32* %r3.global-to-local, align 4
  %v1_149f0 = add i32 %v0_149e0, 27
  %v2_149f0 = inttoptr i32 %v1_149f0 to i8*
  %v3_149f0 = load i8, i8* %v2_149f0, align 1
  %v4_149f0 = zext i8 %v3_149f0 to i32
  %v4_149f4 = mul nuw nsw i32 %v4_149e8, 65536
  %v5_149f4 = or i32 %v4_149f4, %v5_149ec
  %v4_149f8 = mul nuw i32 %v4_149f0, 16777216
  %v5_149f8 = or i32 %v5_149f4, %v4_149f8
  store i32 %v5_149f8, i32* %r3.global-to-local, align 4
  %v1_149fc = load i32, i32* %r7.global-to-local, align 4
  %v2_149fc = add i32 %v1_149fc, 24
  %v3_149fc = inttoptr i32 %v2_149fc to i32*
  store i32 %v5_149f8, i32* %v3_149fc, align 4
  %v0_14a00 = load i32, i32* %r4.global-to-local, align 4
  %v1_14a00 = add i32 %v0_14a00, 29
  %v2_14a00 = inttoptr i32 %v1_14a00 to i8*
  %v3_14a00 = load i8, i8* %v2_14a00, align 1
  %v4_14a00 = zext i8 %v3_14a00 to i32
  %v1_14a04 = add i32 %v0_14a00, 28
  %v2_14a04 = inttoptr i32 %v1_14a04 to i8*
  %v3_14a04 = load i8, i8* %v2_14a04, align 1
  %v4_14a04 = zext i8 %v3_14a04 to i32
  store i32 %v4_14a04, i32* %r3.global-to-local, align 4
  %v1_14a08 = add i32 %v0_14a00, 30
  %v2_14a08 = inttoptr i32 %v1_14a08 to i8*
  %v3_14a08 = load i8, i8* %v2_14a08, align 1
  %v4_14a08 = zext i8 %v3_14a08 to i32
  %v4_14a0c = mul nuw nsw i32 %v4_14a00, 256
  %v5_14a0c = or i32 %v4_14a04, %v4_14a0c
  store i32 %v5_14a0c, i32* %r3.global-to-local, align 4
  %v1_14a10 = add i32 %v0_14a00, 31
  %v2_14a10 = inttoptr i32 %v1_14a10 to i8*
  %v3_14a10 = load i8, i8* %v2_14a10, align 1
  %v4_14a10 = zext i8 %v3_14a10 to i32
  %v4_14a14 = mul nuw nsw i32 %v4_14a08, 65536
  %v5_14a14 = or i32 %v4_14a14, %v5_14a0c
  %v4_14a18 = mul nuw i32 %v4_14a10, 16777216
  %v5_14a18 = or i32 %v5_14a14, %v4_14a18
  store i32 %v5_14a18, i32* %r3.global-to-local, align 4
  %v1_14a1c = load i32, i32* %r7.global-to-local, align 4
  %v2_14a1c = add i32 %v1_14a1c, 28
  %v3_14a1c = inttoptr i32 %v2_14a1c to i32*
  store i32 %v5_14a18, i32* %v3_14a1c, align 4
  %v0_14a20 = load i32, i32* %r4.global-to-local, align 4
  %v1_14a20 = add i32 %v0_14a20, 33
  %v2_14a20 = inttoptr i32 %v1_14a20 to i8*
  %v3_14a20 = load i8, i8* %v2_14a20, align 1
  %v4_14a20 = zext i8 %v3_14a20 to i32
  %v1_14a24 = add i32 %v0_14a20, 37
  %v2_14a24 = inttoptr i32 %v1_14a24 to i8*
  %v3_14a24 = load i8, i8* %v2_14a24, align 1
  %v4_14a24 = zext i8 %v3_14a24 to i32
  %v1_14a28 = add i32 %v0_14a20, 32
  %v2_14a28 = inttoptr i32 %v1_14a28 to i8*
  %v3_14a28 = load i8, i8* %v2_14a28, align 1
  %v4_14a28 = zext i8 %v3_14a28 to i32
  %v1_14a2c = add i32 %v0_14a20, 36
  %v2_14a2c = inttoptr i32 %v1_14a2c to i8*
  %v3_14a2c = load i8, i8* %v2_14a2c, align 1
  %v4_14a2c = zext i8 %v3_14a2c to i32
  store i32 %v4_14a2c, i32* %r3.global-to-local, align 4
  %v1_14a30 = add i32 %v0_14a20, 34
  %v2_14a30 = inttoptr i32 %v1_14a30 to i8*
  %v3_14a30 = load i8, i8* %v2_14a30, align 1
  %v4_14a30 = zext i8 %v3_14a30 to i32
  %v1_14a34 = add i32 %v0_14a20, 38
  %v2_14a34 = inttoptr i32 %v1_14a34 to i8*
  %v3_14a34 = load i8, i8* %v2_14a34, align 1
  %v4_14a34 = zext i8 %v3_14a34 to i32
  %v1_14a38 = add i32 %v0_14a20, 35
  %v2_14a38 = inttoptr i32 %v1_14a38 to i8*
  %v3_14a38 = load i8, i8* %v2_14a38, align 1
  %v4_14a38 = zext i8 %v3_14a38 to i32
  %v4_14a3c = mul nuw nsw i32 %v4_14a20, 256
  %v5_14a3c = or i32 %v4_14a28, %v4_14a3c
  %v4_14a40 = mul nuw nsw i32 %v4_14a24, 256
  %v5_14a40 = or i32 %v4_14a2c, %v4_14a40
  store i32 %v5_14a40, i32* %r3.global-to-local, align 4
  %v1_14a44 = add i32 %v0_14a20, 39
  %v2_14a44 = inttoptr i32 %v1_14a44 to i8*
  %v3_14a44 = load i8, i8* %v2_14a44, align 1
  %v4_14a44 = zext i8 %v3_14a44 to i32
  %v4_14a48 = mul nuw nsw i32 %v4_14a30, 65536
  %v5_14a48 = or i32 %v4_14a48, %v5_14a3c
  %v4_14a4c = mul nuw nsw i32 %v4_14a34, 65536
  %v5_14a4c = or i32 %v4_14a4c, %v5_14a40
  %v4_14a50 = mul nuw i32 %v4_14a38, 16777216
  %v5_14a50 = or i32 %v5_14a48, %v4_14a50
  %v4_14a54 = mul nuw i32 %v4_14a44, 16777216
  %v5_14a54 = or i32 %v5_14a4c, %v4_14a54
  store i32 %v5_14a54, i32* %r3.global-to-local, align 4
  %v1_14a68 = load i32, i32* %r7.global-to-local, align 4
  %v2_14a68 = add i32 %v1_14a68, 32
  %v3_14a68 = inttoptr i32 %v2_14a68 to i32*
  store i32 %v5_14a50, i32* %v3_14a68, align 4
  %v0_14a6c = load i32, i32* %r3.global-to-local, align 4
  %v1_14a6c = load i32, i32* %r7.global-to-local, align 4
  %v2_14a6c = add i32 %v1_14a6c, 36
  %v3_14a6c = inttoptr i32 %v2_14a6c to i32*
  store i32 %v0_14a6c, i32* %v3_14a6c, align 4
  %v0_14a70 = load i32, i32* %r4.global-to-local, align 4
  %v1_14a70 = add i32 %v0_14a70, 45
  %v2_14a70 = inttoptr i32 %v1_14a70 to i8*
  %v3_14a70 = load i8, i8* %v2_14a70, align 1
  %v4_14a70 = zext i8 %v3_14a70 to i32
  %v1_14a74 = add i32 %v0_14a70, 49
  %v2_14a74 = inttoptr i32 %v1_14a74 to i8*
  %v3_14a74 = load i8, i8* %v2_14a74, align 1
  %v4_14a74 = zext i8 %v3_14a74 to i32
  %v1_14a78 = add i32 %v0_14a70, 44
  %v2_14a78 = inttoptr i32 %v1_14a78 to i8*
  %v3_14a78 = load i8, i8* %v2_14a78, align 1
  %v4_14a78 = zext i8 %v3_14a78 to i32
  %v1_14a7c = add i32 %v0_14a70, 48
  %v2_14a7c = inttoptr i32 %v1_14a7c to i8*
  %v3_14a7c = load i8, i8* %v2_14a7c, align 1
  %v4_14a7c = zext i8 %v3_14a7c to i32
  store i32 %v4_14a7c, i32* %r3.global-to-local, align 4
  %v1_14a80 = add i32 %v0_14a70, 46
  %v2_14a80 = inttoptr i32 %v1_14a80 to i8*
  %v3_14a80 = load i8, i8* %v2_14a80, align 1
  %v4_14a80 = zext i8 %v3_14a80 to i32
  %v1_14a84 = add i32 %v0_14a70, 50
  %v2_14a84 = inttoptr i32 %v1_14a84 to i8*
  %v3_14a84 = load i8, i8* %v2_14a84, align 1
  %v4_14a84 = zext i8 %v3_14a84 to i32
  %v1_14a88 = add i32 %v0_14a70, 47
  %v2_14a88 = inttoptr i32 %v1_14a88 to i8*
  %v3_14a88 = load i8, i8* %v2_14a88, align 1
  %v4_14a88 = zext i8 %v3_14a88 to i32
  %v4_14a8c = mul nuw nsw i32 %v4_14a70, 256
  %v5_14a8c = or i32 %v4_14a78, %v4_14a8c
  %v4_14a90 = mul nuw nsw i32 %v4_14a74, 256
  %v5_14a90 = or i32 %v4_14a7c, %v4_14a90
  store i32 %v5_14a90, i32* %r3.global-to-local, align 4
  %v1_14a94 = add i32 %v0_14a70, 51
  %v2_14a94 = inttoptr i32 %v1_14a94 to i8*
  %v3_14a94 = load i8, i8* %v2_14a94, align 1
  %v4_14a94 = zext i8 %v3_14a94 to i32
  %v4_14a98 = mul nuw nsw i32 %v4_14a80, 65536
  %v5_14a98 = or i32 %v4_14a98, %v5_14a8c
  %v4_14a9c = mul nuw nsw i32 %v4_14a84, 65536
  %v5_14a9c = or i32 %v4_14a9c, %v5_14a90
  %v4_14aa0 = mul nuw i32 %v4_14a88, 16777216
  %v5_14aa0 = or i32 %v5_14a98, %v4_14aa0
  %v4_14aa4 = mul nuw i32 %v4_14a94, 16777216
  %v5_14aa4 = or i32 %v5_14a9c, %v4_14aa4
  store i32 %v5_14aa4, i32* %r3.global-to-local, align 4
  %v1_14ab8 = load i32, i32* %r7.global-to-local, align 4
  %v2_14ab8 = add i32 %v1_14ab8, 44
  %v3_14ab8 = inttoptr i32 %v2_14ab8 to i32*
  store i32 %v5_14aa0, i32* %v3_14ab8, align 4
  %v0_14abc = load i32, i32* %r3.global-to-local, align 4
  %v1_14abc = load i32, i32* %r7.global-to-local, align 4
  %v2_14abc = add i32 %v1_14abc, 48
  %v3_14abc = inttoptr i32 %v2_14abc to i32*
  store i32 %v0_14abc, i32* %v3_14abc, align 4
  %v0_14ac0 = load i32, i32* %r4.global-to-local, align 4
  %v1_14ac0 = add i32 %v0_14ac0, 53
  %v2_14ac0 = inttoptr i32 %v1_14ac0 to i8*
  %v3_14ac0 = load i8, i8* %v2_14ac0, align 1
  %v4_14ac0 = zext i8 %v3_14ac0 to i32
  %v1_14ac4 = add i32 %v0_14ac0, 52
  %v2_14ac4 = inttoptr i32 %v1_14ac4 to i8*
  %v3_14ac4 = load i8, i8* %v2_14ac4, align 1
  %v4_14ac4 = zext i8 %v3_14ac4 to i32
  store i32 %v4_14ac4, i32* %r3.global-to-local, align 4
  %v1_14ac8 = add i32 %v0_14ac0, 54
  %v2_14ac8 = inttoptr i32 %v1_14ac8 to i8*
  %v3_14ac8 = load i8, i8* %v2_14ac8, align 1
  %v4_14ac8 = zext i8 %v3_14ac8 to i32
  %v4_14acc = mul nuw nsw i32 %v4_14ac0, 256
  %v5_14acc = or i32 %v4_14ac4, %v4_14acc
  store i32 %v5_14acc, i32* %r3.global-to-local, align 4
  %v1_14ad0 = add i32 %v0_14ac0, 55
  %v2_14ad0 = inttoptr i32 %v1_14ad0 to i8*
  %v3_14ad0 = load i8, i8* %v2_14ad0, align 1
  %v4_14ad0 = zext i8 %v3_14ad0 to i32
  %v4_14ad4 = mul nuw nsw i32 %v4_14ac8, 65536
  %v5_14ad4 = or i32 %v4_14ad4, %v5_14acc
  %v4_14ad8 = mul nuw i32 %v4_14ad0, 16777216
  %v5_14ad8 = or i32 %v5_14ad4, %v4_14ad8
  store i32 %v5_14ad8, i32* %r3.global-to-local, align 4
  %v1_14adc = load i32, i32* %r7.global-to-local, align 4
  %v2_14adc = add i32 %v1_14adc, 52
  %v3_14adc = inttoptr i32 %v2_14adc to i32*
  store i32 %v5_14ad8, i32* %v3_14adc, align 4
  %v0_14ae0 = load i32, i32* %r4.global-to-local, align 4
  %v1_14ae0 = add i32 %v0_14ae0, 57
  %v2_14ae0 = inttoptr i32 %v1_14ae0 to i8*
  %v3_14ae0 = load i8, i8* %v2_14ae0, align 1
  %v4_14ae0 = zext i8 %v3_14ae0 to i32
  %v1_14ae4 = add i32 %v0_14ae0, 56
  %v2_14ae4 = inttoptr i32 %v1_14ae4 to i8*
  %v3_14ae4 = load i8, i8* %v2_14ae4, align 1
  %v4_14ae4 = zext i8 %v3_14ae4 to i32
  %v1_14ae8 = add i32 %v0_14ae0, 60
  %v2_14ae8 = inttoptr i32 %v1_14ae8 to i8*
  %v3_14ae8 = load i8, i8* %v2_14ae8, align 1
  %v4_14ae8 = zext i8 %v3_14ae8 to i32
  store i32 %v4_14ae8, i32* %r3.global-to-local, align 4
  %v1_14aec = add i32 %v0_14ae0, 61
  %v2_14aec = inttoptr i32 %v1_14aec to i8*
  %v3_14aec = load i8, i8* %v2_14aec, align 1
  %v4_14aec = zext i8 %v3_14aec to i32
  %v1_14af0 = add i32 %v0_14ae0, 58
  %v2_14af0 = inttoptr i32 %v1_14af0 to i8*
  %v3_14af0 = load i8, i8* %v2_14af0, align 1
  %v4_14af0 = zext i8 %v3_14af0 to i32
  %v1_14af4 = add i32 %v0_14ae0, 62
  %v2_14af4 = inttoptr i32 %v1_14af4 to i8*
  %v3_14af4 = load i8, i8* %v2_14af4, align 1
  %v4_14af4 = zext i8 %v3_14af4 to i32
  %v1_14af8 = add i32 %v0_14ae0, 59
  %v2_14af8 = inttoptr i32 %v1_14af8 to i8*
  %v3_14af8 = load i8, i8* %v2_14af8, align 1
  %v4_14af8 = zext i8 %v3_14af8 to i32
  %v4_14afc = mul nuw nsw i32 %v4_14ae0, 256
  %v5_14afc = or i32 %v4_14ae4, %v4_14afc
  %v4_14b00 = mul nuw nsw i32 %v4_14aec, 256
  %v5_14b00 = or i32 %v4_14b00, %v4_14ae8
  store i32 %v5_14b00, i32* %r3.global-to-local, align 4
  %v1_14b04 = add i32 %v0_14ae0, 63
  %v2_14b04 = inttoptr i32 %v1_14b04 to i8*
  %v3_14b04 = load i8, i8* %v2_14b04, align 1
  %v4_14b04 = zext i8 %v3_14b04 to i32
  %v4_14b08 = mul nuw nsw i32 %v4_14af0, 65536
  %v5_14b08 = or i32 %v4_14b08, %v5_14afc
  %v4_14b0c = mul nuw nsw i32 %v4_14af4, 65536
  %v5_14b0c = or i32 %v4_14b0c, %v5_14b00
  %v4_14b10 = mul nuw i32 %v4_14b04, 16777216
  %v5_14b10 = or i32 %v5_14b0c, %v4_14b10
  %v4_14b14 = mul nuw i32 %v4_14af8, 16777216
  %v5_14b14 = or i32 %v5_14b08, %v4_14b14
  store i32 %v5_14b10, i32* %r3.global-to-local, align 4
  %v1_14b24 = load i32, i32* %r7.global-to-local, align 4
  %v2_14b24 = add i32 %v1_14b24, 56
  %v3_14b24 = inttoptr i32 %v2_14b24 to i32*
  store i32 %v5_14b14, i32* %v3_14b24, align 4
  %v0_14b28 = load i32, i32* %r3.global-to-local, align 4
  %v1_14b28 = load i32, i32* %r7.global-to-local, align 4
  %v2_14b28 = add i32 %v1_14b28, 60
  %v3_14b28 = inttoptr i32 %v2_14b28 to i32*
  store i32 %v0_14b28, i32* %v3_14b28, align 4
  %v0_14b2c = load i32, i32* %r4.global-to-local, align 4
  %v1_14b2c = add i32 %v0_14b2c, 65
  %v2_14b2c = inttoptr i32 %v1_14b2c to i8*
  %v3_14b2c = load i8, i8* %v2_14b2c, align 1
  %v4_14b2c = zext i8 %v3_14b2c to i32
  %v1_14b30 = add i32 %v0_14b2c, 64
  %v2_14b30 = inttoptr i32 %v1_14b30 to i8*
  %v3_14b30 = load i8, i8* %v2_14b30, align 1
  %v4_14b30 = zext i8 %v3_14b30 to i32
  store i32 %v4_14b30, i32* %r3.global-to-local, align 4
  %v1_14b34 = add i32 %v0_14b2c, 66
  %v2_14b34 = inttoptr i32 %v1_14b34 to i8*
  %v3_14b34 = load i8, i8* %v2_14b34, align 1
  %v4_14b34 = zext i8 %v3_14b34 to i32
  %v4_14b38 = mul nuw nsw i32 %v4_14b2c, 256
  %v5_14b38 = or i32 %v4_14b30, %v4_14b38
  store i32 %v5_14b38, i32* %r3.global-to-local, align 4
  %v1_14b3c = add i32 %v0_14b2c, 67
  %v2_14b3c = inttoptr i32 %v1_14b3c to i8*
  %v3_14b3c = load i8, i8* %v2_14b3c, align 1
  %v4_14b3c = zext i8 %v3_14b3c to i32
  %v4_14b40 = mul nuw nsw i32 %v4_14b34, 65536
  %v5_14b40 = or i32 %v4_14b40, %v5_14b38
  %v4_14b44 = mul nuw i32 %v4_14b3c, 16777216
  %v5_14b44 = or i32 %v5_14b40, %v4_14b44
  store i32 %v5_14b44, i32* %r3.global-to-local, align 4
  %v1_14b48 = load i32, i32* %r7.global-to-local, align 4
  %v2_14b48 = add i32 %v1_14b48, 64
  %v3_14b48 = inttoptr i32 %v2_14b48 to i32*
  store i32 %v5_14b44, i32* %v3_14b48, align 4
  %v0_14b4c = load i32, i32* %r4.global-to-local, align 4
  %v1_14b4c = add i32 %v0_14b4c, 73
  %v2_14b4c = inttoptr i32 %v1_14b4c to i8*
  %v3_14b4c = load i8, i8* %v2_14b4c, align 1
  %v4_14b4c = zext i8 %v3_14b4c to i32
  %v1_14b50 = add i32 %v0_14b4c, 72
  %v2_14b50 = inttoptr i32 %v1_14b50 to i8*
  %v3_14b50 = load i8, i8* %v2_14b50, align 1
  %v4_14b50 = zext i8 %v3_14b50 to i32
  store i32 %v4_14b50, i32* %r3.global-to-local, align 4
  %v1_14b54 = add i32 %v0_14b4c, 74
  %v2_14b54 = inttoptr i32 %v1_14b54 to i8*
  %v3_14b54 = load i8, i8* %v2_14b54, align 1
  %v4_14b54 = zext i8 %v3_14b54 to i32
  %v4_14b58 = mul nuw nsw i32 %v4_14b4c, 256
  %v5_14b58 = or i32 %v4_14b50, %v4_14b58
  store i32 %v5_14b58, i32* %r3.global-to-local, align 4
  %v1_14b5c = add i32 %v0_14b4c, 75
  %v2_14b5c = inttoptr i32 %v1_14b5c to i8*
  %v3_14b5c = load i8, i8* %v2_14b5c, align 1
  %v4_14b5c = zext i8 %v3_14b5c to i32
  %v4_14b60 = mul nuw nsw i32 %v4_14b54, 65536
  %v5_14b60 = or i32 %v4_14b60, %v5_14b58
  %v4_14b64 = mul nuw i32 %v4_14b5c, 16777216
  %v5_14b64 = or i32 %v5_14b60, %v4_14b64
  store i32 %v5_14b64, i32* %r3.global-to-local, align 4
  %v1_14b68 = load i32, i32* %r7.global-to-local, align 4
  %v2_14b68 = add i32 %v1_14b68, 72
  %v3_14b68 = inttoptr i32 %v2_14b68 to i32*
  store i32 %v5_14b64, i32* %v3_14b68, align 4
  %v0_14b6c = load i32, i32* %r4.global-to-local, align 4
  %v1_14b6c = add i32 %v0_14b6c, 81
  %v2_14b6c = inttoptr i32 %v1_14b6c to i8*
  %v3_14b6c = load i8, i8* %v2_14b6c, align 1
  %v4_14b6c = zext i8 %v3_14b6c to i32
  %v1_14b70 = add i32 %v0_14b6c, 80
  %v2_14b70 = inttoptr i32 %v1_14b70 to i8*
  %v3_14b70 = load i8, i8* %v2_14b70, align 1
  %v4_14b70 = zext i8 %v3_14b70 to i32
  store i32 %v4_14b70, i32* %r3.global-to-local, align 4
  %v1_14b74 = add i32 %v0_14b6c, 82
  %v2_14b74 = inttoptr i32 %v1_14b74 to i8*
  %v3_14b74 = load i8, i8* %v2_14b74, align 1
  %v4_14b74 = zext i8 %v3_14b74 to i32
  %v4_14b78 = mul nuw nsw i32 %v4_14b6c, 256
  %v5_14b78 = or i32 %v4_14b70, %v4_14b78
  store i32 %v5_14b78, i32* %r3.global-to-local, align 4
  %v1_14b7c = add i32 %v0_14b6c, 83
  %v2_14b7c = inttoptr i32 %v1_14b7c to i8*
  %v3_14b7c = load i8, i8* %v2_14b7c, align 1
  %v4_14b7c = zext i8 %v3_14b7c to i32
  %v4_14b80 = mul nuw nsw i32 %v4_14b74, 65536
  %v5_14b80 = or i32 %v4_14b80, %v5_14b78
  %v4_14b84 = mul nuw i32 %v4_14b7c, 16777216
  %v5_14b84 = or i32 %v5_14b80, %v4_14b84
  store i32 %v5_14b84, i32* %r3.global-to-local, align 4
  %v1_14b88 = load i32, i32* %r7.global-to-local, align 4
  %v2_14b88 = add i32 %v1_14b88, 80
  %v3_14b88 = inttoptr i32 %v2_14b88 to i32*
  store i32 %v5_14b84, i32* %v3_14b88, align 4
  %v0_14b8c = load i32, i32* %r4.global-to-local, align 4
  %v1_14b8c = add i32 %v0_14b8c, 69
  %v2_14b8c = inttoptr i32 %v1_14b8c to i8*
  %v3_14b8c = load i8, i8* %v2_14b8c, align 1
  %v4_14b8c = zext i8 %v3_14b8c to i32
  %v1_14b90 = add i32 %v0_14b8c, 68
  %v2_14b90 = inttoptr i32 %v1_14b90 to i8*
  %v3_14b90 = load i8, i8* %v2_14b90, align 1
  %v4_14b90 = zext i8 %v3_14b90 to i32
  store i32 %v4_14b90, i32* %r3.global-to-local, align 4
  %v1_14b94 = add i32 %v0_14b8c, 70
  %v2_14b94 = inttoptr i32 %v1_14b94 to i8*
  %v3_14b94 = load i8, i8* %v2_14b94, align 1
  %v4_14b94 = zext i8 %v3_14b94 to i32
  %v4_14b98 = mul nuw nsw i32 %v4_14b8c, 256
  %v5_14b98 = or i32 %v4_14b90, %v4_14b98
  store i32 %v5_14b98, i32* %r3.global-to-local, align 4
  %v1_14b9c = add i32 %v0_14b8c, 71
  %v2_14b9c = inttoptr i32 %v1_14b9c to i8*
  %v3_14b9c = load i8, i8* %v2_14b9c, align 1
  %v4_14b9c = zext i8 %v3_14b9c to i32
  %v4_14ba0 = mul nuw nsw i32 %v4_14b94, 65536
  %v5_14ba0 = or i32 %v4_14ba0, %v5_14b98
  %v4_14ba4 = mul nuw i32 %v4_14b9c, 16777216
  %v5_14ba4 = or i32 %v5_14ba0, %v4_14ba4
  store i32 %v5_14ba4, i32* %r3.global-to-local, align 4
  %v1_14ba8 = load i32, i32* %r7.global-to-local, align 4
  %v2_14ba8 = add i32 %v1_14ba8, 68
  %v3_14ba8 = inttoptr i32 %v2_14ba8 to i32*
  store i32 %v5_14ba4, i32* %v3_14ba8, align 4
  %v0_14bac = load i32, i32* %r4.global-to-local, align 4
  %v1_14bac = add i32 %v0_14bac, 77
  %v2_14bac = inttoptr i32 %v1_14bac to i8*
  %v3_14bac = load i8, i8* %v2_14bac, align 1
  %v4_14bac = zext i8 %v3_14bac to i32
  %v1_14bb0 = add i32 %v0_14bac, 76
  %v2_14bb0 = inttoptr i32 %v1_14bb0 to i8*
  %v3_14bb0 = load i8, i8* %v2_14bb0, align 1
  %v4_14bb0 = zext i8 %v3_14bb0 to i32
  store i32 %v4_14bb0, i32* %r3.global-to-local, align 4
  %v1_14bb4 = add i32 %v0_14bac, 78
  %v2_14bb4 = inttoptr i32 %v1_14bb4 to i8*
  %v3_14bb4 = load i8, i8* %v2_14bb4, align 1
  %v4_14bb4 = zext i8 %v3_14bb4 to i32
  %v4_14bb8 = mul nuw nsw i32 %v4_14bac, 256
  %v5_14bb8 = or i32 %v4_14bb0, %v4_14bb8
  store i32 %v5_14bb8, i32* %r3.global-to-local, align 4
  %v1_14bbc = add i32 %v0_14bac, 79
  %v2_14bbc = inttoptr i32 %v1_14bbc to i8*
  %v3_14bbc = load i8, i8* %v2_14bbc, align 1
  %v4_14bbc = zext i8 %v3_14bbc to i32
  %v4_14bc0 = mul nuw nsw i32 %v4_14bb4, 65536
  %v5_14bc0 = or i32 %v4_14bc0, %v5_14bb8
  %v4_14bc4 = mul nuw i32 %v4_14bbc, 16777216
  %v5_14bc4 = or i32 %v5_14bc0, %v4_14bc4
  store i32 %v5_14bc4, i32* %r3.global-to-local, align 4
  %v1_14bc8 = load i32, i32* %r7.global-to-local, align 4
  %v2_14bc8 = add i32 %v1_14bc8, 76
  %v3_14bc8 = inttoptr i32 %v2_14bc8 to i32*
  store i32 %v5_14bc4, i32* %v3_14bc8, align 4
  %v0_14bcc = load i32, i32* %r4.global-to-local, align 4
  %v1_14bcc = add i32 %v0_14bcc, 85
  %v2_14bcc = inttoptr i32 %v1_14bcc to i8*
  %v3_14bcc = load i8, i8* %v2_14bcc, align 1
  %v4_14bcc = zext i8 %v3_14bcc to i32
  %v1_14bd0 = add i32 %v0_14bcc, 84
  %v2_14bd0 = inttoptr i32 %v1_14bd0 to i8*
  %v3_14bd0 = load i8, i8* %v2_14bd0, align 1
  %v4_14bd0 = zext i8 %v3_14bd0 to i32
  store i32 %v4_14bd0, i32* %r3.global-to-local, align 4
  %v1_14bd4 = add i32 %v0_14bcc, 86
  %v2_14bd4 = inttoptr i32 %v1_14bd4 to i8*
  %v3_14bd4 = load i8, i8* %v2_14bd4, align 1
  %v4_14bd4 = zext i8 %v3_14bd4 to i32
  %v4_14bd8 = mul nuw nsw i32 %v4_14bcc, 256
  %v5_14bd8 = or i32 %v4_14bd0, %v4_14bd8
  store i32 %v5_14bd8, i32* %r3.global-to-local, align 4
  %v1_14bdc = add i32 %v0_14bcc, 87
  %v2_14bdc = inttoptr i32 %v1_14bdc to i8*
  %v3_14bdc = load i8, i8* %v2_14bdc, align 1
  %v4_14bdc = zext i8 %v3_14bdc to i32
  %v4_14be0 = mul nuw nsw i32 %v4_14bd4, 65536
  %v5_14be0 = or i32 %v4_14be0, %v5_14bd8
  %v4_14be4 = mul nuw i32 %v4_14bdc, 16777216
  %v5_14be4 = or i32 %v5_14be0, %v4_14be4
  store i32 %v5_14be4, i32* %r3.global-to-local, align 4
  %v1_14be8 = load i32, i32* %r7.global-to-local, align 4
  %v2_14be8 = add i32 %v1_14be8, 84
  %v3_14be8 = inttoptr i32 %v2_14be8 to i32*
  store i32 %v5_14be4, i32* %v3_14be8, align 4
  ret i32 %v4_14aec

; uselistorder directives
  uselistorder i32 %v4_14aec, { 1, 0 }
  uselistorder i32 %v0_14ae0, { 0, 1, 3, 2, 5, 4, 6, 7 }
  uselistorder i32 %v0_14a70, { 0, 1, 3, 2, 5, 4, 6, 7 }
  uselistorder i32 %v0_14a20, { 0, 1, 3, 2, 5, 4, 6, 7 }
  uselistorder i32 %v0_14940, { 0, 1, 3, 2, 5, 4, 6, 7 }
  uselistorder i32 %tmp, { 6, 5, 3, 4, 2, 1, 0, 7 }
  uselistorder i32 87, { 2, 0, 3, 1 }
  uselistorder i32 84, { 1, 2, 0 }
  uselistorder i32 85, { 1, 0, 2 }
  uselistorder i32 79, { 3, 4, 0, 1, 2 }
  uselistorder i32 78, { 1, 0, 2, 3 }
  uselistorder i32 77, { 2, 0, 1 }
  uselistorder i32 71, { 1, 2, 0 }
  uselistorder i32 70, { 1, 0, 2, 3 }
  uselistorder i32 69, { 3, 1, 2, 0 }
  uselistorder i32 81, { 2, 0, 1 }
  uselistorder i32 75, { 1, 0 }
  uselistorder i32 73, { 2, 0, 1, 3 }
  uselistorder i32 67, { 1, 2, 0 }
  uselistorder i32 66, { 1, 2, 0, 3, 4 }
  uselistorder i32 65, { 1, 2, 0 }
  uselistorder i32 63, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 62, { 5, 0, 1, 6, 2, 3, 7, 4 }
  uselistorder i32 58, { 1, 2, 3, 0, 4, 5, 6, 7 }
  uselistorder i32 61, { 2, 3, 0, 1, 4 }
  uselistorder i32 57, { 2, 0, 1, 3, 4 }
  uselistorder i32 55, { 3, 8, 0, 4, 5, 2, 6, 7, 1 }
  uselistorder i32 54, { 3, 4, 1, 2, 0 }
  uselistorder i32 53, { 2, 1, 0, 3 }
  uselistorder i32 51, { 2, 3, 0, 4, 1 }
  uselistorder i32 47, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 50, { 2, 0, 1, 3 }
  uselistorder i32 46, { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32 49, { 1, 2, 0, 3 }
  uselistorder i32 45, { 3, 0, 1, 4, 2, 5 }
  uselistorder i32 39, { 2, 3, 4, 1, 5, 0 }
  uselistorder i32 35, { 8, 0, 9, 1, 10, 2, 11, 3, 12, 4, 13, 5, 14, 6, 15, 16, 7, 17 }
  uselistorder i32 38, { 3, 0, 1, 2, 4, 5, 6, 7 }
  uselistorder i32 34, { 10, 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 12 }
  uselistorder i32 33, { 3, 4, 2, 5, 0, 1 }
  uselistorder i32 30, { 8, 0, 4, 9, 5, 10, 6, 7, 11, 12, 1, 2, 3 }
  uselistorder i32 29, { 5, 6, 2, 3, 4, 1, 7, 0 }
  uselistorder i32 26, { 9, 0, 1, 3, 2, 4, 11, 8, 10, 5, 12, 6, 13, 7, 14, 15 }
  uselistorder i32 25, { 11, 25, 26, 2, 12, 3, 13, 4, 14, 5, 15, 10, 16, 6, 17, 0, 18, 19, 20, 7, 8, 21, 9, 22, 23, 1, 24 }
  uselistorder i32 23, { 7, 2, 1, 8, 9, 10, 0, 3, 4, 5, 6 }
  uselistorder i32 22, { 11, 1, 14, 2, 3, 4, 5, 0, 10, 12, 13, 6, 15, 7, 16, 8, 17, 9 }
  uselistorder i32 21, { 11, 4, 2, 5, 3, 12, 13, 10, 14, 9, 15, 0, 1, 6, 16, 7, 17, 8, 18 }
  uselistorder i32 19, { 11, 14, 15, 16, 3, 0, 12, 8, 9, 10, 13, 4, 5, 6, 7, 17, 1, 18, 2, 19 }
  uselistorder i32 18, { 10, 12, 13, 14, 8, 11, 9, 0, 1, 2, 3, 15, 4, 16, 5, 17, 6, 18, 7, 19 }
  uselistorder i32 17, { 17, 20, 0, 4, 31, 32, 5, 33, 34, 6, 1, 16, 18, 7, 19, 8, 9, 10, 11, 21, 22, 2, 23, 24, 25, 3, 26, 27, 28, 29, 30, 35, 12, 36, 13, 37, 38, 39, 14, 40, 15 }
  uselistorder i32 95, { 2, 0, 3, 4, 5, 6, 1 }
  uselistorder i32 91, { 1, 2, 3, 0 }
  uselistorder i32 90, { 2, 0, 1 }
  uselistorder i32 94, { 4, 0, 5, 6, 1, 7, 2, 8, 3 }
  uselistorder i32 92, { 1, 2, 3, 0, 4 }
  uselistorder i32 93, { 4, 5, 0, 1, 2, 3 }
  uselistorder i32 6, { 30, 39, 14, 15, 84, 16, 35, 2, 18, 31, 19, 32, 20, 33, 17, 34, 0, 28, 36, 29, 37, 21, 38, 3, 4, 40, 41, 42, 22, 43, 5, 44, 45, 46, 23, 47, 6, 48, 49, 50, 24, 51, 52, 53, 25, 54, 58, 59, 60, 7, 61, 62, 63, 64, 8, 65, 66, 67, 68, 69, 26, 70, 9, 71, 72, 73, 74, 75, 76, 27, 77, 10, 78, 79, 80, 81, 11, 82, 12, 13, 1, 83, 55, 56, 57 }
  uselistorder i32 96, { 1, 0, 4, 5, 2, 3 }
}

define i32 @function_14bf4(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14bf4:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_14bf4 = load i32, i32* @r4, align 4
  store i32 %v3_14bf4, i32* %stack_var_-16, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 88, i32* @r2, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v2_14c0c = inttoptr i32 %arg2 to i8*
  %v3_14c0c = call i32 @function_130d0(i8* %v2_14c0c, i32 0)
  store i32 %v3_14c0c, i32* %r0.global-to-local, align 4
  %v0_14c10 = load i32, i32* %r5.global-to-local, align 4
  %v1_14c10 = inttoptr i32 %v0_14c10 to i32*
  %v2_14c10 = load i32, i32* %v1_14c10, align 4
  store i32 %v2_14c10, i32* %r3.global-to-local, align 4
  %v1_14c14 = add i32 %v0_14c10, 4
  %v2_14c14 = inttoptr i32 %v1_14c14 to i32*
  %v3_14c14 = load i32, i32* %v2_14c14, align 4
  store i32 %v3_14c14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v0_14c1c = load i32, i32* %r6.global-to-local, align 4
  %v1_14c1c = inttoptr i32 %v0_14c1c to i32*
  store i32 %v2_14c10, i32* %v1_14c1c, align 4
  %v3_14c1c = add i32 %v0_14c1c, 4
  %v4_14c1c = inttoptr i32 %v3_14c1c to i32*
  %v5_14c1c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_14c1c, i32* %v4_14c1c, align 4
  %v0_14c20 = load i32, i32* %r2.global-to-local, align 4
  %v1_14c20 = load i32, i32* %r6.global-to-local, align 4
  %v2_14c20 = add i32 %v1_14c20, 12
  %v3_14c20 = inttoptr i32 %v2_14c20 to i32*
  store i32 %v0_14c20, i32* %v3_14c20, align 4
  %v0_14c24 = load i32, i32* %r5.global-to-local, align 4
  %v1_14c24 = add i32 %v0_14c24, 9
  %v2_14c24 = inttoptr i32 %v1_14c24 to i8*
  %v3_14c24 = load i8, i8* %v2_14c24, align 1
  %v4_14c24 = zext i8 %v3_14c24 to i32
  store i32 %v4_14c24, i32* %r2.global-to-local, align 4
  %v1_14c28 = add i32 %v0_14c24, 8
  %v2_14c28 = inttoptr i32 %v1_14c28 to i8*
  %v3_14c28 = load i8, i8* %v2_14c28, align 1
  %v4_14c28 = zext i8 %v3_14c28 to i32
  %v4_14c2c = mul nuw nsw i32 %v4_14c24, 256
  %v5_14c2c = or i32 %v4_14c28, %v4_14c2c
  store i32 %v5_14c2c, i32* %r3.global-to-local, align 4
  %v1_14c30 = load i32, i32* %r6.global-to-local, align 4
  %v2_14c30 = add i32 %v1_14c30, 16
  %v3_14c30 = inttoptr i32 %v2_14c30 to i32*
  store i32 %v5_14c2c, i32* %v3_14c30, align 4
  %v0_14c34 = load i32, i32* %r5.global-to-local, align 4
  %v1_14c34 = add i32 %v0_14c34, 11
  %v2_14c34 = inttoptr i32 %v1_14c34 to i8*
  %v3_14c34 = load i8, i8* %v2_14c34, align 1
  %v4_14c34 = zext i8 %v3_14c34 to i32
  store i32 %v4_14c34, i32* %r2.global-to-local, align 4
  %v1_14c38 = add i32 %v0_14c34, 10
  %v2_14c38 = inttoptr i32 %v1_14c38 to i8*
  %v3_14c38 = load i8, i8* %v2_14c38, align 1
  %v4_14c38 = zext i8 %v3_14c38 to i32
  %v4_14c3c = mul nuw nsw i32 %v4_14c34, 256
  %v5_14c3c = or i32 %v4_14c38, %v4_14c3c
  store i32 %v5_14c3c, i32* %r3.global-to-local, align 4
  %v1_14c40 = load i32, i32* %r6.global-to-local, align 4
  %v2_14c40 = add i32 %v1_14c40, 20
  %v3_14c40 = inttoptr i32 %v2_14c40 to i32*
  store i32 %v5_14c3c, i32* %v3_14c40, align 4
  %v0_14c44 = load i32, i32* %r5.global-to-local, align 4
  %v1_14c44 = add i32 %v0_14c44, 13
  %v2_14c44 = inttoptr i32 %v1_14c44 to i8*
  %v3_14c44 = load i8, i8* %v2_14c44, align 1
  %v4_14c44 = zext i8 %v3_14c44 to i32
  store i32 %v4_14c44, i32* %r2.global-to-local, align 4
  %v1_14c48 = add i32 %v0_14c44, 12
  %v2_14c48 = inttoptr i32 %v1_14c48 to i8*
  %v3_14c48 = load i8, i8* %v2_14c48, align 1
  %v4_14c48 = zext i8 %v3_14c48 to i32
  %v4_14c4c = mul nuw nsw i32 %v4_14c44, 256
  %v5_14c4c = or i32 %v4_14c48, %v4_14c4c
  store i32 %v5_14c4c, i32* %r3.global-to-local, align 4
  %v1_14c50 = load i32, i32* %r6.global-to-local, align 4
  %v2_14c50 = add i32 %v1_14c50, 24
  %v3_14c50 = inttoptr i32 %v2_14c50 to i32*
  store i32 %v5_14c4c, i32* %v3_14c50, align 4
  %v0_14c54 = load i32, i32* %r5.global-to-local, align 4
  %v1_14c54 = add i32 %v0_14c54, 20
  %v2_14c54 = inttoptr i32 %v1_14c54 to i32*
  %v3_14c54 = load i32, i32* %v2_14c54, align 4
  store i32 %v3_14c54, i32* %r3.global-to-local, align 4
  %v1_14c58 = add i32 %v0_14c54, 14
  %v2_14c58 = inttoptr i32 %v1_14c58 to i8*
  %v3_14c58 = load i8, i8* %v2_14c58, align 1
  %v4_14c58 = zext i8 %v3_14c58 to i32
  store i32 %v4_14c58, i32* %r0.global-to-local, align 4
  %v1_14c5c = add i32 %v0_14c54, 15
  %v2_14c5c = inttoptr i32 %v1_14c5c to i8*
  %v3_14c5c = load i8, i8* %v2_14c5c, align 1
  %v4_14c5c = zext i8 %v3_14c5c to i32
  store i32 %v4_14c5c, i32* %ip.global-to-local, align 4
  %v1_14c60 = add i32 %v0_14c54, 16
  %v2_14c60 = inttoptr i32 %v1_14c60 to i32*
  %v3_14c60 = load i32, i32* %v2_14c60, align 4
  store i32 %v3_14c60, i32* %r1.global-to-local, align 4
  %v1_14c64 = load i32, i32* %r6.global-to-local, align 4
  %v2_14c64 = add i32 %v1_14c64, 44
  %v3_14c64 = inttoptr i32 %v2_14c64 to i32*
  store i32 %v3_14c54, i32* %v3_14c64, align 4
  %v0_14c68 = load i32, i32* %r5.global-to-local, align 4
  %v1_14c68 = add i32 %v0_14c68, 24
  %v2_14c68 = inttoptr i32 %v1_14c68 to i32*
  %v3_14c68 = load i32, i32* %v2_14c68, align 4
  store i32 %v3_14c68, i32* %r3.global-to-local, align 4
  %v1_14c6c = load i32, i32* %r6.global-to-local, align 4
  %v2_14c6c = add i32 %v1_14c6c, 48
  %v3_14c6c = inttoptr i32 %v2_14c6c to i32*
  store i32 %v3_14c68, i32* %v3_14c6c, align 4
  %v0_14c70 = load i32, i32* %r5.global-to-local, align 4
  %v1_14c70 = add i32 %v0_14c70, 28
  %v2_14c70 = inttoptr i32 %v1_14c70 to i32*
  %v3_14c70 = load i32, i32* %v2_14c70, align 4
  store i32 %v3_14c70, i32* %r3.global-to-local, align 4
  %v1_14c74 = load i32, i32* %r6.global-to-local, align 4
  %v2_14c74 = add i32 %v1_14c74, 52
  %v3_14c74 = inttoptr i32 %v2_14c74 to i32*
  store i32 %v3_14c70, i32* %v3_14c74, align 4
  %v0_14c78 = load i32, i32* %r5.global-to-local, align 4
  %v1_14c78 = add i32 %v0_14c78, 32
  %v2_14c78 = inttoptr i32 %v1_14c78 to i32*
  %v3_14c78 = load i32, i32* %v2_14c78, align 4
  store i32 %v3_14c78, i32* %r3.global-to-local, align 4
  %v1_14c7c = load i32, i32* %r6.global-to-local, align 4
  %v2_14c7c = add i32 %v1_14c7c, 56
  %v3_14c7c = inttoptr i32 %v2_14c7c to i32*
  store i32 %v3_14c78, i32* %v3_14c7c, align 4
  %v0_14c80 = load i32, i32* %r5.global-to-local, align 4
  %v1_14c80 = add i32 %v0_14c80, 40
  %v2_14c80 = inttoptr i32 %v1_14c80 to i32*
  %v3_14c80 = load i32, i32* %v2_14c80, align 4
  store i32 %v3_14c80, i32* %r3.global-to-local, align 4
  %v1_14c84 = load i32, i32* %r6.global-to-local, align 4
  %v2_14c84 = add i32 %v1_14c84, 64
  %v3_14c84 = inttoptr i32 %v2_14c84 to i32*
  store i32 %v3_14c80, i32* %v3_14c84, align 4
  %v0_14c88 = load i32, i32* %r5.global-to-local, align 4
  %v1_14c88 = add i32 %v0_14c88, 48
  %v2_14c88 = inttoptr i32 %v1_14c88 to i32*
  %v3_14c88 = load i32, i32* %v2_14c88, align 4
  store i32 %v3_14c88, i32* %r3.global-to-local, align 4
  %v1_14c8c = load i32, i32* %r6.global-to-local, align 4
  %v2_14c8c = add i32 %v1_14c8c, 72
  %v3_14c8c = inttoptr i32 %v2_14c8c to i32*
  store i32 %v3_14c88, i32* %v3_14c8c, align 4
  %v0_14c90 = load i32, i32* %r5.global-to-local, align 4
  %v1_14c90 = add i32 %v0_14c90, 36
  %v2_14c90 = inttoptr i32 %v1_14c90 to i32*
  %v3_14c90 = load i32, i32* %v2_14c90, align 4
  store i32 %v3_14c90, i32* %r3.global-to-local, align 4
  %v1_14c94 = load i32, i32* %r6.global-to-local, align 4
  %v2_14c94 = add i32 %v1_14c94, 60
  %v3_14c94 = inttoptr i32 %v2_14c94 to i32*
  store i32 %v3_14c90, i32* %v3_14c94, align 4
  %v0_14c98 = load i32, i32* %r5.global-to-local, align 4
  %v1_14c98 = add i32 %v0_14c98, 44
  %v2_14c98 = inttoptr i32 %v1_14c98 to i32*
  %v3_14c98 = load i32, i32* %v2_14c98, align 4
  store i32 %v3_14c98, i32* %r3.global-to-local, align 4
  %v0_14c9c = load i32, i32* %r0.global-to-local, align 4
  %v1_14c9c = load i32, i32* %ip.global-to-local, align 4
  %v4_14c9c = mul i32 %v1_14c9c, 256
  %v5_14c9c = or i32 %v4_14c9c, %v0_14c9c
  store i32 %v5_14c9c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_14ca4 = load i32, i32* %r6.global-to-local, align 4
  %v2_14ca4 = add i32 %v1_14ca4, 28
  %v3_14ca4 = inttoptr i32 %v2_14ca4 to i32*
  store i32 %v5_14c9c, i32* %v3_14ca4, align 4
  %v0_14ca8 = load i32, i32* %r1.global-to-local, align 4
  %v1_14ca8 = load i32, i32* %r6.global-to-local, align 4
  %v2_14ca8 = add i32 %v1_14ca8, 32
  %v3_14ca8 = inttoptr i32 %v2_14ca8 to i32*
  store i32 %v0_14ca8, i32* %v3_14ca8, align 4
  %v0_14cac = load i32, i32* %r2.global-to-local, align 4
  %v1_14cac = load i32, i32* %r6.global-to-local, align 4
  %v2_14cac = add i32 %v1_14cac, 36
  %v3_14cac = inttoptr i32 %v2_14cac to i32*
  store i32 %v0_14cac, i32* %v3_14cac, align 4
  %v0_14cb0 = load i32, i32* %r3.global-to-local, align 4
  %v1_14cb0 = load i32, i32* %r6.global-to-local, align 4
  %v2_14cb0 = add i32 %v1_14cb0, 68
  %v3_14cb0 = inttoptr i32 %v2_14cb0 to i32*
  store i32 %v0_14cb0, i32* %v3_14cb0, align 4
  %v0_14cb4 = load i32, i32* %r5.global-to-local, align 4
  %v1_14cb4 = add i32 %v0_14cb4, 52
  %v2_14cb4 = inttoptr i32 %v1_14cb4 to i32*
  %v3_14cb4 = load i32, i32* %v2_14cb4, align 4
  store i32 %v3_14cb4, i32* %r3.global-to-local, align 4
  %v1_14cb8 = load i32, i32* %r6.global-to-local, align 4
  %v2_14cb8 = add i32 %v1_14cb8, 76
  %v3_14cb8 = inttoptr i32 %v2_14cb8 to i32*
  store i32 %v3_14cb4, i32* %v3_14cb8, align 4
  %v2_14cbc = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_14cbc, i32* %r4.global-to-local, align 4
  ret i32 %v5_14c9c

; uselistorder directives
  uselistorder i32 %v0_14c54, { 1, 0, 2, 3 }
  uselistorder i32* %r6.global-to-local, { 0, 11, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 5, 4, 0 }
  uselistorder i32 76, { 3, 0, 1, 2 }
  uselistorder i32 68, { 3, 0, 1, 2 }
  uselistorder i32 60, { 5, 3, 4, 1, 2, 0, 6 }
  uselistorder i32 72, { 4, 1, 2, 3, 0 }
  uselistorder i32 64, { 26, 21, 22, 10, 18, 58, 0, 8, 7, 6, 9, 5, 4, 3, 2, 1, 23, 24, 25, 27, 28, 19, 29, 30, 31, 11, 32, 33, 34, 12, 35, 36, 37, 13, 38, 39, 40, 20, 41, 42, 43, 14, 44, 45, 46, 47, 48, 15, 49, 50, 51, 52, 53, 16, 54, 55, 56, 17, 57 }
  uselistorder i32 56, { 5, 1, 2, 0, 3, 4, 6 }
  uselistorder i32 52, { 4, 5, 0, 1, 2, 3, 6, 7, 8 }
  uselistorder i32 15, { 19, 14, 13, 15, 16, 2, 17, 3, 18, 4, 5, 6, 7, 8, 9, 10, 11, 20, 21, 12, 22, 23, 24, 25, 0, 26, 27, 28, 29, 1, 30 }
  uselistorder i32 14, { 26, 20, 38, 3, 21, 0, 22, 23, 18, 19, 4, 24, 5, 25, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 27, 28, 17, 29, 30, 31, 32, 1, 33, 34, 35, 36, 2, 37 }
  uselistorder i32 13, { 31, 25, 22, 26, 29, 23, 30, 24, 0, 27, 28, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 13, 14, 15, 16, 17, 18, 19, 32, 33, 34, 35, 36, 20, 37, 38, 39, 40, 41, 42, 43, 44, 21, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 2, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 3, 73, 74 }
  uselistorder i32 9, { 39, 40, 41, 7, 4, 42, 8, 5, 12, 24, 13, 25, 14, 26, 29, 10, 28, 20, 11, 27, 9, 2, 30, 21, 22, 32, 33, 34, 23, 31, 35, 15, 36, 16, 37, 17, 38, 0, 18, 1, 55, 43, 44, 45, 46, 47, 48, 6, 49, 50, 51, 52, 53, 54, 56, 57, 3, 58, 19 }
  uselistorder i32 (i8*, i32)* @function_130d0, { 2, 0, 7, 6, 1, 3, 4, 5 }
  uselistorder i32 88, { 4, 1, 2, 0, 3, 5 }
  uselistorder i32 %arg2, { 2, 1, 0, 3 }
}

define i32 @function_14cc0() local_unnamed_addr {
dec_label_pc_14cc0:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_14cc0 = load i32, i32* @r1, align 4
  %v1_14cc0 = load i32, i32* @r0, align 4
  %v2_14cc0 = sub i32 %v0_14cc0, %v1_14cc0
  %v3_14cc0 = icmp ult i32 %v0_14cc0, %v1_14cc0
  %v4_14cc0 = xor i32 %v1_14cc0, %v0_14cc0
  %v5_14cc0 = xor i32 %v2_14cc0, %v0_14cc0
  %v6_14cc0 = and i32 %v5_14cc0, %v4_14cc0
  %v7_14cc0 = icmp slt i32 %v6_14cc0, 0
  store i1 %v7_14cc0, i1* %cpsr_v.global-to-local, align 1
  %v8_14cc0 = icmp slt i32 %v2_14cc0, 0
  store i1 %v8_14cc0, i1* %cpsr_n.global-to-local, align 1
  %v9_14cc0 = icmp eq i32 %v0_14cc0, %v1_14cc0
  store i1 %v9_14cc0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_14cc0, label %dec_label_pc_14f0c, label %dec_label_pc_14cc8

dec_label_pc_14cc8:                               ; preds = %dec_label_pc_14cc0
  br i1 %v9_14cc0, label %.thread122, label %bb

.thread122:                                       ; preds = %bb144, %.thread121, %bb141, %dec_label_pc_14cc8
  %merge = phi i32 [ %v0_14cc0, %dec_label_pc_14cc8 ], [ %v2_14fa0, %bb141 ], [ %v11_14fbc, %bb144 ], [ %v7_14fbc, %.thread121 ]
  ret i32 %merge

bb:                                               ; preds = %dec_label_pc_14cc8
  store i32 %v1_14cc0, i32* %stack_var_-8, align 4
  %v0_14cd0 = load i32, i32* @r2, align 4
  %v2_14cd0 = add i32 %v0_14cd0, -4
  store i32 %v2_14cd0, i32* %r2.global-to-local, align 4
  %v4_14cd0 = sub i32 3, %v0_14cd0
  %v5_14cd0 = and i32 %v4_14cd0, %v0_14cd0
  %v6_14cd0 = icmp slt i32 %v5_14cd0, 0
  store i1 %v6_14cd0, i1* %cpsr_v.global-to-local, align 1
  %v7_14cd0 = icmp slt i32 %v2_14cd0, 0
  store i1 %v7_14cd0, i1* %cpsr_n.global-to-local, align 1
  %v8_14cd0 = icmp eq i32 %v0_14cd0, 4
  store i1 %v8_14cd0, i1* %cpsr_z.global-to-local, align 1
  %v5_14cd4 = icmp slt i32 %v0_14cd0, 4
  br i1 %v5_14cd4, label %bb131, label %dec_label_pc_14cd8

dec_label_pc_14cd8:                               ; preds = %bb
  %v1_14cd8 = urem i32 %v1_14cc0, 4
  store i32 %v1_14cd8, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_14cd8 = icmp eq i32 %v1_14cd8, 0
  store i1 %v2_14cd8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14cd8, label %dec_label_pc_14ce0, label %dec_label_pc_14d84

dec_label_pc_14ce0:                               ; preds = %dec_label_pc_14cd8
  %v1_14ce0 = urem i32 %v0_14cc0, 4
  store i32 %v1_14ce0, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_14ce0 = icmp eq i32 %v1_14ce0, 0
  store i1 %v2_14ce0, i1* %cpsr_z.global-to-local, align 1
  %extract.t = trunc i32 %v0_14cc0 to i2
  br i1 %v2_14ce0, label %dec_label_pc_14ce8, label %dec_label_pc_14db4

dec_label_pc_14ce8:                               ; preds = %dec_label_pc_14ce0, %dec_label_pc_14dac
  %v0_14d0092 = phi i32 [ %v1_14cc0, %dec_label_pc_14ce0 ], [ %v0_14dfc75, %dec_label_pc_14dac ]
  %v0_14cfc91 = phi i32 [ %v0_14cc0, %dec_label_pc_14ce0 ], [ %v0_14dac, %dec_label_pc_14dac ]
  %v0_14ce8 = phi i32 [ %v2_14cd0, %dec_label_pc_14ce0 ], [ %v2_14da4, %dec_label_pc_14dac ]
  %v2_14ce8 = add i32 %v0_14ce8, -8
  store i32 %v2_14ce8, i32* %r2.global-to-local, align 4
  %v4_14ce8 = sub i32 7, %v0_14ce8
  %v5_14ce8 = and i32 %v4_14ce8, %v0_14ce8
  %v6_14ce8 = icmp slt i32 %v5_14ce8, 0
  store i1 %v6_14ce8, i1* %cpsr_v.global-to-local, align 1
  %v7_14ce8 = icmp slt i32 %v2_14ce8, 0
  store i1 %v7_14ce8, i1* %cpsr_n.global-to-local, align 1
  %v8_14ce8 = icmp eq i32 %v0_14ce8, 8
  store i1 %v8_14ce8, i1* %cpsr_z.global-to-local, align 1
  %v5_14cec = icmp slt i32 %v0_14ce8, 8
  br i1 %v5_14cec, label %dec_label_pc_14d3c, label %dec_label_pc_14cf0

dec_label_pc_14cf0:                               ; preds = %dec_label_pc_14ce8
  %v2_14cf0 = add i32 %v0_14ce8, -28
  store i32 %v2_14cf0, i32* %r2.global-to-local, align 4
  %v4_14cf0 = sub i32 27, %v0_14ce8
  %v5_14cf0 = and i32 %v4_14cf0, %v2_14ce8
  %v6_14cf0 = icmp slt i32 %v5_14cf0, 0
  store i1 %v6_14cf0, i1* %cpsr_v.global-to-local, align 1
  %v7_14cf0 = icmp slt i32 %v2_14cf0, 0
  store i1 %v7_14cf0, i1* %cpsr_n.global-to-local, align 1
  %v8_14cf0 = icmp eq i32 %v2_14ce8, 20
  store i1 %v8_14cf0, i1* %cpsr_z.global-to-local, align 1
  %v5_14cf4 = icmp slt i32 %v2_14ce8, 20
  br i1 %v5_14cf4, label %dec_label_pc_14d28, label %dec_label_pc_14cf8

dec_label_pc_14cf8:                               ; preds = %dec_label_pc_14cf0
  %v0_14cf8 = load i32, i32* @r4, align 4
  store i32 %v0_14cf8, i32* %stack_var_-12, align 4
  br label %dec_label_pc_14cfc

dec_label_pc_14cfc:                               ; preds = %dec_label_pc_14cfc.dec_label_pc_14cfc_crit_edge, %dec_label_pc_14cf8
  %v0_14d00 = phi i32 [ %v12_14d08, %dec_label_pc_14cfc.dec_label_pc_14cfc_crit_edge ], [ %v0_14d0092, %dec_label_pc_14cf8 ]
  %v0_14cfc = phi i32 [ %v0_14cfc.pre, %dec_label_pc_14cfc.dec_label_pc_14cfc_crit_edge ], [ %v0_14cfc91, %dec_label_pc_14cf8 ]
  %v1_14cfc = inttoptr i32 %v0_14cfc to i32*
  %v2_14cfc = load i32, i32* %v1_14cfc, align 4
  store i32 %v2_14cfc, i32* %r3.global-to-local, align 4
  %v3_14cfc = add i32 %v0_14cfc, 4
  %v4_14cfc = inttoptr i32 %v3_14cfc to i32*
  %v5_14cfc = load i32, i32* %v4_14cfc, align 4
  store i32 %v5_14cfc, i32* %r4.global-to-local, align 4
  %v6_14cfc = add i32 %v0_14cfc, 8
  %v7_14cfc = inttoptr i32 %v6_14cfc to i32*
  %v8_14cfc = load i32, i32* %v7_14cfc, align 4
  store i32 %v8_14cfc, i32* %ip.global-to-local, align 4
  %v9_14cfc = add i32 %v0_14cfc, 12
  %v10_14cfc = inttoptr i32 %v9_14cfc to i32*
  %v11_14cfc = load i32, i32* %v10_14cfc, align 4
  store i32 %v11_14cfc, i32* %lr.global-to-local, align 4
  %v12_14cfc = add i32 %v0_14cfc, 16
  store i32 %v12_14cfc, i32* %r1.global-to-local, align 4
  %v1_14d00 = inttoptr i32 %v0_14d00 to i32*
  store i32 %v2_14cfc, i32* %v1_14d00, align 4
  %v3_14d00 = add i32 %v0_14d00, 4
  %v4_14d00 = inttoptr i32 %v3_14d00 to i32*
  %v5_14d00 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_14d00, i32* %v4_14d00, align 4
  %v6_14d00 = add i32 %v0_14d00, 8
  %v7_14d00 = inttoptr i32 %v6_14d00 to i32*
  %v8_14d00 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v8_14d00, i32* %v7_14d00, align 4
  %v9_14d00 = add i32 %v0_14d00, 12
  %v10_14d00 = inttoptr i32 %v9_14d00 to i32*
  %v11_14d00 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_14d00, i32* %v10_14d00, align 4
  %v12_14d00 = add i32 %v0_14d00, 16
  store i32 %v12_14d00, i32* %r0.global-to-local, align 4
  %v0_14d04 = load i32, i32* %r1.global-to-local, align 4
  %v1_14d04 = inttoptr i32 %v0_14d04 to i32*
  %v2_14d04 = load i32, i32* %v1_14d04, align 4
  store i32 %v2_14d04, i32* %r3.global-to-local, align 4
  %v3_14d04 = add i32 %v0_14d04, 4
  %v4_14d04 = inttoptr i32 %v3_14d04 to i32*
  %v5_14d04 = load i32, i32* %v4_14d04, align 4
  store i32 %v5_14d04, i32* %r4.global-to-local, align 4
  %v6_14d04 = add i32 %v0_14d04, 8
  %v7_14d04 = inttoptr i32 %v6_14d04 to i32*
  %v8_14d04 = load i32, i32* %v7_14d04, align 4
  store i32 %v8_14d04, i32* @ip, align 4
  %v9_14d04 = add i32 %v0_14d04, 12
  %v10_14d04 = inttoptr i32 %v9_14d04 to i32*
  %v11_14d04 = load i32, i32* %v10_14d04, align 4
  store i32 %v11_14d04, i32* @lr, align 4
  %v12_14d04 = add i32 %v0_14d04, 16
  store i32 %v12_14d04, i32* @r1, align 4
  %v1_14d08 = inttoptr i32 %v12_14d00 to i32*
  store i32 %v2_14d04, i32* %v1_14d08, align 4
  %v3_14d08 = add i32 %v0_14d00, 20
  %v4_14d08 = inttoptr i32 %v3_14d08 to i32*
  %v5_14d08 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_14d08, i32* %v4_14d08, align 4
  %v6_14d08 = add i32 %v0_14d00, 24
  %v7_14d08 = inttoptr i32 %v6_14d08 to i32*
  %v8_14d08 = load i32, i32* @ip, align 4
  store i32 %v8_14d08, i32* %v7_14d08, align 4
  %v9_14d08 = add i32 %v0_14d00, 28
  %v10_14d08 = inttoptr i32 %v9_14d08 to i32*
  %v11_14d08 = load i32, i32* @lr, align 4
  store i32 %v11_14d08, i32* %v10_14d08, align 4
  %v12_14d08 = add i32 %v0_14d00, 32
  store i32 %v12_14d08, i32* @r0, align 4
  %v0_14d0c = load i32, i32* %r2.global-to-local, align 4
  %v2_14d0c = add i32 %v0_14d0c, -32
  store i32 %v2_14d0c, i32* %r2.global-to-local, align 4
  %v6_14d10 = icmp slt i32 %v0_14d0c, 32
  br i1 %v6_14d10, label %dec_label_pc_14d14, label %dec_label_pc_14cfc.dec_label_pc_14cfc_crit_edge

dec_label_pc_14cfc.dec_label_pc_14cfc_crit_edge:  ; preds = %dec_label_pc_14cfc
  %v0_14cfc.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_14cfc

dec_label_pc_14d14:                               ; preds = %dec_label_pc_14cfc
  %v4_14d14 = add i32 %v0_14d0c, -16
  %v6_14d14 = add i32 %v0_14d0c, 2147483616
  %v7_14d14 = and i32 %v4_14d14, %v6_14d14
  %v8_14d14 = icmp slt i32 %v7_14d14, 0
  store i1 %v8_14d14, i1* %cpsr_v.global-to-local, align 1
  %v9_14d14 = icmp slt i32 %v4_14d14, 0
  store i1 %v9_14d14, i1* %cpsr_n.global-to-local, align 1
  %v10_14d14 = icmp eq i32 %v4_14d14, 0
  store i1 %v10_14d14, i1* %cpsr_z.global-to-local, align 1
  %v5_14d18 = icmp slt i32 %v2_14d0c, -16
  br i1 %v5_14d18, label %.thread1, label %bb128

bb128:                                            ; preds = %dec_label_pc_14d14
  %v6_14d18 = load i32, i32* @r1, align 4
  %v7_14d18 = inttoptr i32 %v6_14d18 to i32*
  %v8_14d18 = load i32, i32* %v7_14d18, align 4
  store i32 %v8_14d18, i32* %r3.global-to-local, align 4
  %v9_14d18 = add i32 %v6_14d18, 4
  %v10_14d18 = inttoptr i32 %v9_14d18 to i32*
  %v11_14d18 = load i32, i32* %v10_14d18, align 4
  store i32 %v11_14d18, i32* %r4.global-to-local, align 4
  %v12_14d18 = add i32 %v6_14d18, 8
  %v13_14d18 = inttoptr i32 %v12_14d18 to i32*
  %v14_14d18 = load i32, i32* %v13_14d18, align 4
  store i32 %v14_14d18, i32* @ip, align 4
  %v15_14d18 = add i32 %v6_14d18, 12
  %v16_14d18 = inttoptr i32 %v15_14d18 to i32*
  %v17_14d18 = load i32, i32* %v16_14d18, align 4
  store i32 %v17_14d18, i32* @lr, align 4
  %v18_14d18 = add i32 %v6_14d18, 16
  store i32 %v18_14d18, i32* @r1, align 4
  %v7_14d1c = inttoptr i32 %v12_14d08 to i32*
  store i32 %v8_14d18, i32* %v7_14d1c, align 4
  %v9_14d1c = add i32 %v0_14d00, 36
  %v10_14d1c = inttoptr i32 %v9_14d1c to i32*
  %v11_14d1c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v11_14d1c, i32* %v10_14d1c, align 4
  %v12_14d1c = add i32 %v0_14d00, 40
  %v13_14d1c = inttoptr i32 %v12_14d1c to i32*
  %v14_14d1c = load i32, i32* @ip, align 4
  store i32 %v14_14d1c, i32* %v13_14d1c, align 4
  %v15_14d1c = add i32 %v0_14d00, 44
  %v16_14d1c = inttoptr i32 %v15_14d1c to i32*
  %v17_14d1c = load i32, i32* @lr, align 4
  store i32 %v17_14d1c, i32* %v16_14d1c, align 4
  %v18_14d1c = add i32 %v0_14d00, 48
  store i32 %v18_14d1c, i32* @r0, align 4
  %v6_14d20 = load i32, i32* %r2.global-to-local, align 4
  %v7_14d20 = add i32 %v6_14d20, -16
  store i32 %v7_14d20, i32* %r2.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_14d14, %bb128
  %v3_14d30101 = phi i32 [ %v12_14d08, %dec_label_pc_14d14 ], [ %v18_14d1c, %bb128 ]
  %v0_14d2895 = phi i32 [ %v2_14d0c, %dec_label_pc_14d14 ], [ %v7_14d20, %bb128 ]
  %v2_14d24 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_14d24, i32* @r4, align 4
  br label %dec_label_pc_14d28

dec_label_pc_14d28:                               ; preds = %dec_label_pc_14cf0, %.thread1
  %v3_14d30100 = phi i32 [ %v0_14d0092, %dec_label_pc_14cf0 ], [ %v3_14d30101, %.thread1 ]
  %v0_14d28 = phi i32 [ %v2_14cf0, %dec_label_pc_14cf0 ], [ %v0_14d2895, %.thread1 ]
  %v1_14d28 = add i32 %v0_14d28, 20
  store i32 %v1_14d28, i32* %r2.global-to-local, align 4
  %v3_14d28 = sub i32 0, %v0_14d28
  %v4_14d28 = and i32 %v1_14d28, %v3_14d28
  %v5_14d28 = icmp slt i32 %v4_14d28, 0
  store i1 %v5_14d28, i1* %cpsr_v.global-to-local, align 1
  %v6_14d28 = icmp slt i32 %v1_14d28, 0
  store i1 %v6_14d28, i1* %cpsr_n.global-to-local, align 1
  %v7_14d28 = icmp eq i32 %v1_14d28, 0
  store i1 %v7_14d28, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_14d2c

dec_label_pc_14d2c:                               ; preds = %.thread117, %dec_label_pc_14d28
  %v0_14d3c.pre147 = phi i32 [ %v0_14d3c.pre, %.thread117 ], [ %v1_14d28, %dec_label_pc_14d28 ]
  %v3_14d30 = phi i32 [ %v3_14d3098118, %.thread117 ], [ %v3_14d30100, %dec_label_pc_14d28 ]
  %v1_14d34 = phi i1 [ %v1_14d38, %.thread117 ], [ %v5_14d28, %dec_label_pc_14d28 ]
  %v0_14d34 = phi i1 [ %v0_14d38, %.thread117 ], [ %v6_14d28, %dec_label_pc_14d28 ]
  %v2_14d2c = xor i1 %v1_14d34, %v0_14d34
  br i1 %v2_14d2c, label %.thread117, label %bb129

bb129:                                            ; preds = %dec_label_pc_14d2c
  %v3_14d2c = load i32, i32* @r1, align 4
  %v4_14d2c = inttoptr i32 %v3_14d2c to i32*
  %v5_14d2c = load i32, i32* %v4_14d2c, align 4
  store i32 %v5_14d2c, i32* %r3.global-to-local, align 4
  %v6_14d2c = add i32 %v3_14d2c, 4
  %v7_14d2c = inttoptr i32 %v6_14d2c to i32*
  %v8_14d2c = load i32, i32* %v7_14d2c, align 4
  store i32 %v8_14d2c, i32* @ip, align 4
  %v9_14d2c = add i32 %v3_14d2c, 8
  %v10_14d2c = inttoptr i32 %v9_14d2c to i32*
  %v11_14d2c = load i32, i32* %v10_14d2c, align 4
  store i32 %v11_14d2c, i32* @lr, align 4
  %v12_14d2c = add i32 %v3_14d2c, 12
  store i32 %v12_14d2c, i32* @r1, align 4
  %v4_14d30 = inttoptr i32 %v3_14d30 to i32*
  store i32 %v5_14d2c, i32* %v4_14d30, align 4
  %v6_14d30 = add i32 %v3_14d30, 4
  %v7_14d30 = inttoptr i32 %v6_14d30 to i32*
  %v8_14d30 = load i32, i32* @ip, align 4
  store i32 %v8_14d30, i32* %v7_14d30, align 4
  %v9_14d30 = add i32 %v3_14d30, 8
  %v10_14d30 = inttoptr i32 %v9_14d30 to i32*
  %v11_14d30 = load i32, i32* @lr, align 4
  store i32 %v11_14d30, i32* %v10_14d30, align 4
  %v12_14d30 = add i32 %v3_14d30, 12
  store i32 %v12_14d30, i32* @r0, align 4
  %v3_14d34 = load i32, i32* %r2.global-to-local, align 4
  %v4_14d34 = add i32 %v3_14d34, -12
  store i32 %v4_14d34, i32* %r2.global-to-local, align 4
  %v6_14d34 = sub i32 11, %v3_14d34
  %v7_14d34 = and i32 %v6_14d34, %v3_14d34
  %v8_14d34 = icmp slt i32 %v7_14d34, 0
  store i1 %v8_14d34, i1* %cpsr_v.global-to-local, align 1
  %v9_14d34 = icmp slt i32 %v4_14d34, 0
  store i1 %v9_14d34, i1* %cpsr_n.global-to-local, align 1
  %v10_14d34 = icmp eq i32 %v3_14d34, 12
  store i1 %v10_14d34, i1* %cpsr_z.global-to-local, align 1
  br label %.thread117

.thread117:                                       ; preds = %dec_label_pc_14d2c, %bb129
  %v0_14d3c.pre = phi i32 [ %v4_14d34, %bb129 ], [ %v0_14d3c.pre147, %dec_label_pc_14d2c ]
  %v3_14d3098118 = phi i32 [ %v12_14d30, %bb129 ], [ %v3_14d30, %dec_label_pc_14d2c ]
  %v1_14d38 = phi i1 [ %v8_14d34, %bb129 ], [ %v1_14d34, %dec_label_pc_14d2c ]
  %v0_14d38 = phi i1 [ %v9_14d34, %bb129 ], [ %v0_14d34, %dec_label_pc_14d2c ]
  %v2_14d38 = xor i1 %v1_14d38, %v0_14d38
  br i1 %v2_14d38, label %dec_label_pc_14d3c, label %dec_label_pc_14d2c

dec_label_pc_14d3c:                               ; preds = %.thread117, %dec_label_pc_14ce8
  %v7_14d4c = phi i32 [ %v0_14d0092, %dec_label_pc_14ce8 ], [ %v3_14d3098118, %.thread117 ]
  %v0_14d3c = phi i32 [ %v2_14ce8, %dec_label_pc_14ce8 ], [ %v0_14d3c.pre, %.thread117 ]
  %v2_14d3c = add i32 %v0_14d3c, 8
  store i32 %v2_14d3c, i32* %r2.global-to-local, align 4
  %v4_14d3c = sub i32 0, %v0_14d3c
  %v5_14d3c = and i32 %v2_14d3c, %v4_14d3c
  %v6_14d3c = icmp slt i32 %v5_14d3c, 0
  store i1 %v6_14d3c, i1* %cpsr_v.global-to-local, align 1
  %v7_14d3c = icmp slt i32 %v2_14d3c, 0
  store i1 %v7_14d3c, i1* %cpsr_n.global-to-local, align 1
  %v8_14d3c = icmp eq i32 %v2_14d3c, 0
  store i1 %v8_14d3c, i1* %cpsr_z.global-to-local, align 1
  %v5_14d40 = icmp slt i32 %v0_14d3c, -8
  br i1 %v5_14d40, label %bb131, label %dec_label_pc_14d44

dec_label_pc_14d44:                               ; preds = %dec_label_pc_14d3c
  %v6_14d44 = add i32 %v0_14d3c, 4
  store i32 %v6_14d44, i32* %r2.global-to-local, align 4
  %v8_14d44 = sub i32 -5, %v0_14d3c
  %v9_14d44 = and i32 %v8_14d44, %v2_14d3c
  %v10_14d44 = icmp slt i32 %v9_14d44, 0
  store i1 %v10_14d44, i1* %cpsr_v.global-to-local, align 1
  %v11_14d44 = icmp slt i32 %v6_14d44, 0
  store i1 %v11_14d44, i1* %cpsr_n.global-to-local, align 1
  %v12_14d44 = icmp eq i32 %v2_14d3c, 4
  store i1 %v12_14d44, i1* %cpsr_z.global-to-local, align 1
  %v5_14d48 = icmp slt i32 %v2_14d3c, 4
  %v6_14d48 = load i32, i32* @r1, align 4
  %v7_14d48 = inttoptr i32 %v6_14d48 to i32*
  %v8_14d48 = load i32, i32* %v7_14d48, align 4
  store i32 %v8_14d48, i32* %r3.global-to-local, align 4
  %v10_14d48 = add i32 %v6_14d48, 4
  br i1 %v5_14d48, label %.thread5, label %bb130

.thread5:                                         ; preds = %dec_label_pc_14d44
  store i32 %v10_14d48, i32* @r1, align 4
  %v8_14d4c = inttoptr i32 %v7_14d4c to i32*
  store i32 %v8_14d48, i32* %v8_14d4c, align 4
  %v9_14d4c = load i32, i32* @r0, align 4
  %v10_14d4c = add i32 %v9_14d4c, 4
  store i32 %v10_14d4c, i32* @r0, align 4
  %v0_14d5c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb131

bb130:                                            ; preds = %dec_label_pc_14d44
  %v10_14d50 = inttoptr i32 %v10_14d48 to i32*
  %v11_14d50 = load i32, i32* %v10_14d50, align 4
  store i32 %v11_14d50, i32* @ip, align 4
  %v12_14d50 = add i32 %v6_14d48, 8
  store i32 %v12_14d50, i32* @r1, align 4
  %v7_14d54 = inttoptr i32 %v7_14d4c to i32*
  store i32 %v8_14d48, i32* %v7_14d54, align 4
  %v9_14d54 = add i32 %v7_14d4c, 4
  %v10_14d54 = inttoptr i32 %v9_14d54 to i32*
  %v11_14d54 = load i32, i32* @ip, align 4
  store i32 %v11_14d54, i32* %v10_14d54, align 4
  %v12_14d54 = add i32 %v7_14d4c, 8
  store i32 %v12_14d54, i32* @r0, align 4
  %v6_14d58 = load i32, i32* %r2.global-to-local, align 4
  %v7_14d58 = add i32 %v6_14d58, -4
  store i32 %v7_14d58, i32* %r2.global-to-local, align 4
  br label %bb131

bb131:                                            ; preds = %.thread5, %.thread11, %dec_label_pc_14d3c, %bb, %dec_label_pc_14f04, %dec_label_pc_14e98, %dec_label_pc_14e2c, %bb130
  %v2_14d6c = phi i32 [ %v10_14d4c, %.thread5 ], [ %v0_14dfc75, %.thread11 ], [ %v7_14d4c, %dec_label_pc_14d3c ], [ %v1_14cc0, %bb ], [ %v2_14d6c113, %dec_label_pc_14f04 ], [ %v2_14d6c112, %dec_label_pc_14e98 ], [ %v2_14d6c111, %dec_label_pc_14e2c ], [ %v12_14d54, %bb130 ]
  %v0_14d5c = phi i32 [ %v0_14d5c.pre, %.thread5 ], [ %v2_14da4, %.thread11 ], [ %v2_14d3c, %dec_label_pc_14d3c ], [ %v2_14cd0, %bb ], [ %v0_14d5c109, %dec_label_pc_14f04 ], [ %v0_14d5c108, %dec_label_pc_14e98 ], [ %v0_14d5c107, %dec_label_pc_14e2c ], [ %v7_14d58, %bb130 ]
  %v1_14d5c = add i32 %v0_14d5c, 4
  store i32 %v1_14d5c, i32* %r2.global-to-local, align 4
  %v3_14d5c = sub i32 0, %v0_14d5c
  %v4_14d5c = and i32 %v1_14d5c, %v3_14d5c
  %v5_14d5c = icmp slt i32 %v4_14d5c, 0
  store i1 %v5_14d5c, i1* %cpsr_v.global-to-local, align 1
  %v6_14d5c = icmp slt i32 %v1_14d5c, 0
  store i1 %v6_14d5c, i1* %cpsr_n.global-to-local, align 1
  %v7_14d5c = icmp eq i32 %v1_14d5c, 0
  store i1 %v7_14d5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_14d5c, label %bb132, label %bb133

bb132:                                            ; preds = %bb131
  %v3_14d60 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_14d60, i32* %r0.global-to-local, align 4
  ret i32 %v3_14d60

bb133:                                            ; preds = %bb131
  %v1_14d64 = add i32 %v0_14d5c, 2
  %v3_14d64 = sub i32 -3, %v0_14d5c
  %v4_14d64 = and i32 %v3_14d64, %v1_14d5c
  %v5_14d64 = icmp slt i32 %v4_14d64, 0
  store i1 %v5_14d64, i1* %cpsr_v.global-to-local, align 1
  %v6_14d64 = icmp slt i32 %v1_14d64, 0
  store i1 %v6_14d64, i1* %cpsr_n.global-to-local, align 1
  %v7_14d64 = icmp eq i32 %v1_14d5c, 2
  store i1 %v7_14d64, i1* %cpsr_z.global-to-local, align 1
  %v0_14d68 = load i32, i32* @r1, align 4
  %v1_14d68 = inttoptr i32 %v0_14d68 to i8*
  %v2_14d68 = load i8, i8* %v1_14d68, align 1
  %v3_14d68 = zext i8 %v2_14d68 to i32
  store i32 %v3_14d68, i32* %r3.global-to-local, align 4
  %v5_14d68 = add i32 %v0_14d68, 1
  store i32 %v5_14d68, i32* %r1.global-to-local, align 4
  %v3_14d6c = inttoptr i32 %v2_14d6c to i8*
  store i8 %v2_14d68, i8* %v3_14d6c, align 1
  %v4_14d6c = load i32, i32* @r0, align 4
  %v5_14d6c = add i32 %v4_14d6c, 1
  store i32 %v5_14d6c, i32* %r0.global-to-local, align 4
  %v0_14d70 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_14d70 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_14d70 = xor i1 %v0_14d70, %v1_14d70
  br i1 %v2_14d70, label %.thread119, label %bb134

bb134:                                            ; preds = %bb133
  %v3_14d70 = load i32, i32* %r1.global-to-local, align 4
  %v4_14d70 = inttoptr i32 %v3_14d70 to i8*
  %v5_14d70 = load i8, i8* %v4_14d70, align 1
  %v6_14d70 = zext i8 %v5_14d70 to i32
  store i32 %v6_14d70, i32* %r3.global-to-local, align 4
  %v8_14d70 = add i32 %v3_14d70, 1
  store i32 %v8_14d70, i32* %r1.global-to-local, align 4
  %v6_14d74 = inttoptr i32 %v5_14d6c to i8*
  store i8 %v5_14d70, i8* %v6_14d74, align 1
  %v7_14d74 = load i32, i32* %r0.global-to-local, align 4
  %v8_14d74 = add i32 %v7_14d74, 1
  store i32 %v8_14d74, i32* %r0.global-to-local, align 4
  %v1_14d78.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_14d78.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread119

.thread119:                                       ; preds = %bb133, %bb134
  %v7_14d7c = phi i32 [ %v8_14d74, %bb134 ], [ %v5_14d6c, %bb133 ]
  %v2_14d7c = phi i1 [ %v2_14d78.pre, %bb134 ], [ %v1_14d70, %bb133 ]
  %v1_14d7c = phi i1 [ %v1_14d78.pre, %bb134 ], [ %v0_14d70, %bb133 ]
  %v0_14d78 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_14d78 = xor i1 %v2_14d7c, %v1_14d7c
  %v4_14d78 = or i1 %v0_14d78, %v3_14d78
  br i1 %v4_14d78, label %.thread120, label %bb135

bb135:                                            ; preds = %.thread119
  %v5_14d78 = load i32, i32* %r1.global-to-local, align 4
  %v6_14d78 = inttoptr i32 %v5_14d78 to i8*
  %v7_14d78 = load i8, i8* %v6_14d78, align 1
  %v8_14d78 = zext i8 %v7_14d78 to i32
  store i32 %v8_14d78, i32* %r3.global-to-local, align 4
  %v10_14d78 = add i32 %v5_14d78, 1
  store i32 %v10_14d78, i32* %r1.global-to-local, align 4
  %v8_14d7c = inttoptr i32 %v7_14d7c to i8*
  store i8 %v7_14d78, i8* %v8_14d7c, align 1
  %v9_14d7c = load i32, i32* %r0.global-to-local, align 4
  %v10_14d7c = add i32 %v9_14d7c, 1
  store i32 %v10_14d7c, i32* %r0.global-to-local, align 4
  br label %.thread120

.thread120:                                       ; preds = %.thread119, %bb135
  %v2_14d80 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14d80, i32* %r0.global-to-local, align 4
  ret i32 %v2_14d80

dec_label_pc_14d84:                               ; preds = %dec_label_pc_14cd8
  %v1_14d84 = sub nsw i32 4, %v1_14cd8
  store i32 %v1_14d84, i32* @ip, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_14d88 = icmp ult i32 %v1_14d84, 2
  store i1 %v8_14d88, i1* %cpsr_n.global-to-local, align 1
  %v9_14d88 = icmp eq i32 %v1_14d84, 2
  store i1 %v9_14d88, i1* %cpsr_z.global-to-local, align 1
  %v1_14d8c = inttoptr i32 %v0_14cc0 to i8*
  %v2_14d8c = load i8, i8* %v1_14d8c, align 1
  %v3_14d8c = zext i8 %v2_14d8c to i32
  store i32 %v3_14d8c, i32* %r3.global-to-local, align 4
  %v5_14d8c = add i32 %v0_14cc0, 1
  store i32 %v5_14d8c, i32* @r1, align 4
  %v3_14d90 = inttoptr i32 %v1_14cc0 to i8*
  store i8 %v2_14d8c, i8* %v3_14d90, align 1
  %v4_14d90 = load i32, i32* @r0, align 4
  %v5_14d90 = add i32 %v4_14d90, 1
  store i32 %v5_14d90, i32* @r0, align 4
  br i1 %v8_14d88, label %.thread11, label %bb136

bb136:                                            ; preds = %dec_label_pc_14d84
  %v6_14d94 = load i32, i32* @r1, align 4
  %v7_14d94 = inttoptr i32 %v6_14d94 to i8*
  %v8_14d94 = load i8, i8* %v7_14d94, align 1
  %v9_14d94 = zext i8 %v8_14d94 to i32
  store i32 %v9_14d94, i32* %r3.global-to-local, align 4
  %v11_14d94 = add i32 %v6_14d94, 1
  store i32 %v11_14d94, i32* @r1, align 4
  %v9_14d98 = inttoptr i32 %v5_14d90 to i8*
  store i8 %v8_14d94, i8* %v9_14d98, align 1
  %v10_14d98 = load i32, i32* @r0, align 4
  %v11_14d98 = add i32 %v10_14d98, 1
  store i32 %v11_14d98, i32* @r0, align 4
  br i1 %v9_14d88, label %.thread11, label %bb137

bb137:                                            ; preds = %bb136
  %v8_14d9c = load i32, i32* @r1, align 4
  %v9_14d9c = inttoptr i32 %v8_14d9c to i8*
  %v10_14d9c = load i8, i8* %v9_14d9c, align 1
  %v11_14d9c = zext i8 %v10_14d9c to i32
  store i32 %v11_14d9c, i32* %r3.global-to-local, align 4
  %v13_14d9c = add i32 %v8_14d9c, 1
  store i32 %v13_14d9c, i32* @r1, align 4
  %v11_14da0 = inttoptr i32 %v11_14d98 to i8*
  store i8 %v10_14d9c, i8* %v11_14da0, align 1
  %v12_14da0 = load i32, i32* @r0, align 4
  %v13_14da0 = add i32 %v12_14da0, 1
  store i32 %v13_14da0, i32* @r0, align 4
  br label %.thread11

.thread11:                                        ; preds = %bb136, %dec_label_pc_14d84, %bb137
  %v0_14dfc75 = phi i32 [ %v11_14d98, %bb136 ], [ %v5_14d90, %dec_label_pc_14d84 ], [ %v13_14da0, %bb137 ]
  %v0_14da4 = load i32, i32* %r2.global-to-local, align 4
  %v1_14da4 = load i32, i32* @ip, align 4
  %v2_14da4 = sub i32 %v0_14da4, %v1_14da4
  store i32 %v2_14da4, i32* %r2.global-to-local, align 4
  %v4_14da4 = xor i32 %v1_14da4, %v0_14da4
  %v5_14da4 = xor i32 %v2_14da4, %v0_14da4
  %v6_14da4 = and i32 %v5_14da4, %v4_14da4
  %v7_14da4 = icmp slt i32 %v6_14da4, 0
  store i1 %v7_14da4, i1* %cpsr_v.global-to-local, align 1
  %v8_14da4 = icmp slt i32 %v2_14da4, 0
  store i1 %v8_14da4, i1* %cpsr_n.global-to-local, align 1
  %v9_14da4 = icmp eq i32 %v0_14da4, %v1_14da4
  store i1 %v9_14da4, i1* %cpsr_z.global-to-local, align 1
  %v5_14da8 = icmp slt i32 %v0_14da4, %v1_14da4
  br i1 %v5_14da8, label %bb131, label %dec_label_pc_14dac

dec_label_pc_14dac:                               ; preds = %.thread11
  %v0_14dac = load i32, i32* @r1, align 4
  %v1_14dac = urem i32 %v0_14dac, 4
  store i32 %v1_14dac, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_14dac = icmp eq i32 %v1_14dac, 0
  store i1 %v2_14dac, i1* %cpsr_z.global-to-local, align 1
  %extract.t123 = trunc i32 %v0_14dac to i2
  br i1 %v2_14dac, label %dec_label_pc_14ce8, label %dec_label_pc_14db4

dec_label_pc_14db4:                               ; preds = %dec_label_pc_14ce0, %dec_label_pc_14dac
  %v0_14dfc74 = phi i32 [ %v1_14cc0, %dec_label_pc_14ce0 ], [ %v0_14dfc75, %dec_label_pc_14dac ]
  %v0_14ea8 = phi i32 [ %v2_14cd0, %dec_label_pc_14ce0 ], [ %v2_14da4, %dec_label_pc_14dac ]
  %v0_14dbc.off0 = phi i2 [ %extract.t, %dec_label_pc_14ce0 ], [ %extract.t123, %dec_label_pc_14dac ]
  %v0_14db4 = phi i32 [ %v0_14cc0, %dec_label_pc_14ce0 ], [ %v0_14dac, %dec_label_pc_14dac ]
  %v1_14db4 = and i32 %v0_14db4, -4
  store i32 %v1_14db4, i32* %r1.global-to-local, align 4
  %v1_14db8 = inttoptr i32 %v1_14db4 to i32*
  %v2_14db8 = load i32, i32* %v1_14db8, align 4
  store i32 %v2_14db8, i32* @lr, align 4
  %v4_14db8 = add i32 %v1_14db4, 4
  store i32 %v4_14db8, i32* %r1.global-to-local, align 4
  %v2_14ea0 = add i32 %v0_14ea8, -12
  %v4_14ea0 = sub i32 11, %v0_14ea8
  %v5_14ea0 = and i32 %v4_14ea0, %v0_14ea8
  %v6_14ea0 = icmp slt i32 %v5_14ea0, 0
  store i1 %v6_14ea0, i1* %cpsr_v.global-to-local, align 1
  %v7_14ea0 = icmp slt i32 %v2_14ea0, 0
  store i1 %v7_14ea0, i1* %cpsr_n.global-to-local, align 1
  %v8_14ea0 = icmp eq i32 %v0_14ea8, 12
  store i1 %v8_14ea0, i1* %cpsr_z.global-to-local, align 1
  %v5_14ea4 = icmp slt i32 %v0_14ea8, 12
  switch i2 %v0_14dbc.off0, label %dec_label_pc_14dc8 [
    i2 -1, label %dec_label_pc_14ea0
    i2 -2, label %dec_label_pc_14e34
  ]

dec_label_pc_14dc8:                               ; preds = %dec_label_pc_14db4
  br i1 %v5_14ea4, label %dec_label_pc_14e14, label %dec_label_pc_14dd0

dec_label_pc_14dd0:                               ; preds = %dec_label_pc_14dc8
  store i32 %v2_14ea0, i32* %r2.global-to-local, align 4
  %v3_14dd4 = load i32, i32* @r4, align 4
  store i32 %v3_14dd4, i32* %stack_var_-16, align 4
  %v6_14dd4 = load i32, i32* @r5, align 4
  store i32 %v6_14dd4, i32* %stack_var_-12, align 4
  br label %dec_label_pc_14dd8

dec_label_pc_14dd8:                               ; preds = %dec_label_pc_14dd8.dec_label_pc_14dd8_crit_edge, %dec_label_pc_14dd0
  %v0_14dfc = phi i32 [ %v12_14dfc, %dec_label_pc_14dd8.dec_label_pc_14dd8_crit_edge ], [ %v0_14dfc74, %dec_label_pc_14dd0 ]
  %v0_14ddc = phi i32 [ %v0_14ddc.pre, %dec_label_pc_14dd8.dec_label_pc_14dd8_crit_edge ], [ %v4_14db8, %dec_label_pc_14dd0 ]
  %v0_14dd8 = phi i32 [ %v0_14dd8.pre, %dec_label_pc_14dd8.dec_label_pc_14dd8_crit_edge ], [ %v2_14db8, %dec_label_pc_14dd0 ]
  %v3_14dd8 = udiv i32 %v0_14dd8, 256
  store i32 %v3_14dd8, i32* %r3.global-to-local, align 4
  %v1_14ddc = inttoptr i32 %v0_14ddc to i32*
  %v2_14ddc = load i32, i32* %v1_14ddc, align 4
  store i32 %v2_14ddc, i32* %r4.global-to-local, align 4
  %v3_14ddc = add i32 %v0_14ddc, 4
  %v4_14ddc = inttoptr i32 %v3_14ddc to i32*
  %v5_14ddc = load i32, i32* %v4_14ddc, align 4
  store i32 %v5_14ddc, i32* %r5.global-to-local, align 4
  %v6_14ddc = add i32 %v0_14ddc, 8
  %v7_14ddc = inttoptr i32 %v6_14ddc to i32*
  %v8_14ddc = load i32, i32* %v7_14ddc, align 4
  store i32 %v8_14ddc, i32* %ip.global-to-local, align 4
  %v9_14ddc = add i32 %v0_14ddc, 12
  %v10_14ddc = inttoptr i32 %v9_14ddc to i32*
  %v11_14ddc = load i32, i32* %v10_14ddc, align 4
  store i32 %v11_14ddc, i32* @lr, align 4
  %v12_14ddc = add i32 %v0_14ddc, 16
  store i32 %v12_14ddc, i32* %r1.global-to-local, align 4
  %v4_14de0 = mul i32 %v2_14ddc, 16777216
  %v5_14de0 = or i32 %v4_14de0, %v3_14dd8
  store i32 %v5_14de0, i32* %r3.global-to-local, align 4
  %v3_14de4 = udiv i32 %v2_14ddc, 256
  %v4_14de8 = mul i32 %v5_14ddc, 16777216
  %v5_14de8 = or i32 %v4_14de8, %v3_14de4
  store i32 %v5_14de8, i32* %r4.global-to-local, align 4
  %v3_14dec = udiv i32 %v5_14ddc, 256
  %v4_14df0 = mul i32 %v8_14ddc, 16777216
  %v5_14df0 = or i32 %v4_14df0, %v3_14dec
  store i32 %v5_14df0, i32* %r5.global-to-local, align 4
  %v3_14df4 = udiv i32 %v8_14ddc, 256
  %v4_14df8 = mul i32 %v11_14ddc, 16777216
  %v5_14df8 = or i32 %v4_14df8, %v3_14df4
  store i32 %v5_14df8, i32* @ip, align 4
  %v1_14dfc = inttoptr i32 %v0_14dfc to i32*
  store i32 %v5_14de0, i32* %v1_14dfc, align 4
  %v3_14dfc = add i32 %v0_14dfc, 4
  %v4_14dfc = inttoptr i32 %v3_14dfc to i32*
  %v5_14dfc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_14dfc, i32* %v4_14dfc, align 4
  %v6_14dfc = add i32 %v0_14dfc, 8
  %v7_14dfc = inttoptr i32 %v6_14dfc to i32*
  %v8_14dfc = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_14dfc, i32* %v7_14dfc, align 4
  %v9_14dfc = add i32 %v0_14dfc, 12
  %v10_14dfc = inttoptr i32 %v9_14dfc to i32*
  %v11_14dfc = load i32, i32* @ip, align 4
  store i32 %v11_14dfc, i32* %v10_14dfc, align 4
  %v12_14dfc = add i32 %v0_14dfc, 16
  store i32 %v12_14dfc, i32* @r0, align 4
  %v0_14e00 = load i32, i32* %r2.global-to-local, align 4
  %v2_14e00 = add i32 %v0_14e00, -16
  store i32 %v2_14e00, i32* %r2.global-to-local, align 4
  %v6_14e04 = icmp slt i32 %v0_14e00, 16
  br i1 %v6_14e04, label %dec_label_pc_14e08, label %dec_label_pc_14dd8.dec_label_pc_14dd8_crit_edge

dec_label_pc_14dd8.dec_label_pc_14dd8_crit_edge:  ; preds = %dec_label_pc_14dd8
  %v0_14dd8.pre = load i32, i32* @lr, align 4
  %v0_14ddc.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14dd8

dec_label_pc_14e08:                               ; preds = %dec_label_pc_14dd8
  %v2_14e08 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_14e08, i32* @r4, align 4
  %v5_14e08 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_14e08, i32* @r5, align 4
  %v2_14e0c = add i32 %v0_14e00, -4
  store i32 %v2_14e0c, i32* %r2.global-to-local, align 4
  %v4_14e0c = add i32 %v0_14e00, 2147483632
  %v5_14e0c = and i32 %v2_14e0c, %v4_14e0c
  %v6_14e0c = icmp slt i32 %v5_14e0c, 0
  store i1 %v6_14e0c, i1* %cpsr_v.global-to-local, align 1
  %v7_14e0c = icmp slt i32 %v2_14e0c, 0
  store i1 %v7_14e0c, i1* %cpsr_n.global-to-local, align 1
  %v8_14e0c = icmp eq i32 %v2_14e0c, 0
  store i1 %v8_14e0c, i1* %cpsr_z.global-to-local, align 1
  %v5_14e10 = icmp slt i32 %v2_14e00, -12
  br i1 %v5_14e10, label %dec_label_pc_14e2c, label %dec_label_pc_14e14

dec_label_pc_14e14:                               ; preds = %dec_label_pc_14e08, %dec_label_pc_14dc8, %dec_label_pc_14e14
  %v1_14e20 = phi i32 [ %v4_14e20, %dec_label_pc_14e14 ], [ %v12_14dfc, %dec_label_pc_14e08 ], [ %v0_14dfc74, %dec_label_pc_14dc8 ]
  %v0_14e14 = load i32, i32* @lr, align 4
  %v3_14e14 = udiv i32 %v0_14e14, 256
  store i32 %v3_14e14, i32* %ip.global-to-local, align 4
  %v0_14e18 = load i32, i32* %r1.global-to-local, align 4
  %v1_14e18 = inttoptr i32 %v0_14e18 to i32*
  %v2_14e18 = load i32, i32* %v1_14e18, align 4
  store i32 %v2_14e18, i32* @lr, align 4
  %v4_14e18 = add i32 %v0_14e18, 4
  store i32 %v4_14e18, i32* %r1.global-to-local, align 4
  %v4_14e1c = mul i32 %v2_14e18, 16777216
  %v5_14e1c = or i32 %v4_14e1c, %v3_14e14
  store i32 %v5_14e1c, i32* @ip, align 4
  %v2_14e20 = inttoptr i32 %v1_14e20 to i32*
  store i32 %v5_14e1c, i32* %v2_14e20, align 4
  %v3_14e20 = load i32, i32* @r0, align 4
  %v4_14e20 = add i32 %v3_14e20, 4
  store i32 %v4_14e20, i32* @r0, align 4
  %v0_14e24 = load i32, i32* %r2.global-to-local, align 4
  %v2_14e24 = add i32 %v0_14e24, -4
  store i32 %v2_14e24, i32* %r2.global-to-local, align 4
  %v6_14e28 = icmp slt i32 %v0_14e24, 4
  br i1 %v6_14e28, label %dec_label_pc_14e2c.loopexit, label %dec_label_pc_14e14

dec_label_pc_14e2c.loopexit:                      ; preds = %dec_label_pc_14e14
  %v4_14e24 = sub i32 3, %v0_14e24
  %v5_14e24 = and i32 %v4_14e24, %v0_14e24
  %v6_14e24 = icmp slt i32 %v5_14e24, 0
  %v7_14e24 = icmp slt i32 %v2_14e24, 0
  store i1 %v6_14e24, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_14e24, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_14e2c

dec_label_pc_14e2c:                               ; preds = %dec_label_pc_14e2c.loopexit, %dec_label_pc_14e08
  %v2_14d6c111 = phi i32 [ %v4_14e20, %dec_label_pc_14e2c.loopexit ], [ %v12_14dfc, %dec_label_pc_14e08 ]
  %v0_14d5c107 = phi i32 [ %v2_14e24, %dec_label_pc_14e2c.loopexit ], [ %v2_14e0c, %dec_label_pc_14e08 ]
  %v0_14e2c = load i32, i32* %r1.global-to-local, align 4
  %v1_14e2c = add i32 %v0_14e2c, -3
  store i32 %v1_14e2c, i32* @r1, align 4
  br label %bb131

dec_label_pc_14e34:                               ; preds = %dec_label_pc_14db4
  br i1 %v5_14ea4, label %dec_label_pc_14e80, label %dec_label_pc_14e3c

dec_label_pc_14e3c:                               ; preds = %dec_label_pc_14e34
  store i32 %v2_14ea0, i32* %r2.global-to-local, align 4
  %v3_14e40 = load i32, i32* @r4, align 4
  store i32 %v3_14e40, i32* %stack_var_-16, align 4
  %v6_14e40 = load i32, i32* @r5, align 4
  store i32 %v6_14e40, i32* %stack_var_-12, align 4
  br label %dec_label_pc_14e44

dec_label_pc_14e44:                               ; preds = %dec_label_pc_14e44.dec_label_pc_14e44_crit_edge, %dec_label_pc_14e3c
  %v0_14e68 = phi i32 [ %v12_14e68, %dec_label_pc_14e44.dec_label_pc_14e44_crit_edge ], [ %v0_14dfc74, %dec_label_pc_14e3c ]
  %v0_14e48 = phi i32 [ %v0_14e48.pre, %dec_label_pc_14e44.dec_label_pc_14e44_crit_edge ], [ %v4_14db8, %dec_label_pc_14e3c ]
  %v0_14e44 = phi i32 [ %v0_14e44.pre, %dec_label_pc_14e44.dec_label_pc_14e44_crit_edge ], [ %v2_14db8, %dec_label_pc_14e3c ]
  %v3_14e44 = udiv i32 %v0_14e44, 65536
  store i32 %v3_14e44, i32* %r3.global-to-local, align 4
  %v1_14e48 = inttoptr i32 %v0_14e48 to i32*
  %v2_14e48 = load i32, i32* %v1_14e48, align 4
  store i32 %v2_14e48, i32* %r4.global-to-local, align 4
  %v3_14e48 = add i32 %v0_14e48, 4
  %v4_14e48 = inttoptr i32 %v3_14e48 to i32*
  %v5_14e48 = load i32, i32* %v4_14e48, align 4
  store i32 %v5_14e48, i32* %r5.global-to-local, align 4
  %v6_14e48 = add i32 %v0_14e48, 8
  %v7_14e48 = inttoptr i32 %v6_14e48 to i32*
  %v8_14e48 = load i32, i32* %v7_14e48, align 4
  store i32 %v8_14e48, i32* %ip.global-to-local, align 4
  %v9_14e48 = add i32 %v0_14e48, 12
  %v10_14e48 = inttoptr i32 %v9_14e48 to i32*
  %v11_14e48 = load i32, i32* %v10_14e48, align 4
  store i32 %v11_14e48, i32* @lr, align 4
  %v12_14e48 = add i32 %v0_14e48, 16
  store i32 %v12_14e48, i32* %r1.global-to-local, align 4
  %v4_14e4c = mul i32 %v2_14e48, 65536
  %v5_14e4c = or i32 %v4_14e4c, %v3_14e44
  store i32 %v5_14e4c, i32* %r3.global-to-local, align 4
  %v3_14e50 = udiv i32 %v2_14e48, 65536
  %v4_14e54 = mul i32 %v5_14e48, 65536
  %v5_14e54 = or i32 %v4_14e54, %v3_14e50
  store i32 %v5_14e54, i32* %r4.global-to-local, align 4
  %v3_14e58 = udiv i32 %v5_14e48, 65536
  %v4_14e5c = mul i32 %v8_14e48, 65536
  %v5_14e5c = or i32 %v4_14e5c, %v3_14e58
  store i32 %v5_14e5c, i32* %r5.global-to-local, align 4
  %v3_14e60 = udiv i32 %v8_14e48, 65536
  %v4_14e64 = mul i32 %v11_14e48, 65536
  %v5_14e64 = or i32 %v4_14e64, %v3_14e60
  store i32 %v5_14e64, i32* @ip, align 4
  %v1_14e68 = inttoptr i32 %v0_14e68 to i32*
  store i32 %v5_14e4c, i32* %v1_14e68, align 4
  %v3_14e68 = add i32 %v0_14e68, 4
  %v4_14e68 = inttoptr i32 %v3_14e68 to i32*
  %v5_14e68 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_14e68, i32* %v4_14e68, align 4
  %v6_14e68 = add i32 %v0_14e68, 8
  %v7_14e68 = inttoptr i32 %v6_14e68 to i32*
  %v8_14e68 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_14e68, i32* %v7_14e68, align 4
  %v9_14e68 = add i32 %v0_14e68, 12
  %v10_14e68 = inttoptr i32 %v9_14e68 to i32*
  %v11_14e68 = load i32, i32* @ip, align 4
  store i32 %v11_14e68, i32* %v10_14e68, align 4
  %v12_14e68 = add i32 %v0_14e68, 16
  store i32 %v12_14e68, i32* @r0, align 4
  %v0_14e6c = load i32, i32* %r2.global-to-local, align 4
  %v2_14e6c = add i32 %v0_14e6c, -16
  store i32 %v2_14e6c, i32* %r2.global-to-local, align 4
  %v6_14e70 = icmp slt i32 %v0_14e6c, 16
  br i1 %v6_14e70, label %dec_label_pc_14e74, label %dec_label_pc_14e44.dec_label_pc_14e44_crit_edge

dec_label_pc_14e44.dec_label_pc_14e44_crit_edge:  ; preds = %dec_label_pc_14e44
  %v0_14e44.pre = load i32, i32* @lr, align 4
  %v0_14e48.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14e44

dec_label_pc_14e74:                               ; preds = %dec_label_pc_14e44
  %v2_14e74 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_14e74, i32* @r4, align 4
  %v5_14e74 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_14e74, i32* @r5, align 4
  %v2_14e78 = add i32 %v0_14e6c, -4
  store i32 %v2_14e78, i32* %r2.global-to-local, align 4
  %v4_14e78 = add i32 %v0_14e6c, 2147483632
  %v5_14e78 = and i32 %v2_14e78, %v4_14e78
  %v6_14e78 = icmp slt i32 %v5_14e78, 0
  store i1 %v6_14e78, i1* %cpsr_v.global-to-local, align 1
  %v7_14e78 = icmp slt i32 %v2_14e78, 0
  store i1 %v7_14e78, i1* %cpsr_n.global-to-local, align 1
  %v8_14e78 = icmp eq i32 %v2_14e78, 0
  store i1 %v8_14e78, i1* %cpsr_z.global-to-local, align 1
  %v5_14e7c = icmp slt i32 %v2_14e6c, -12
  br i1 %v5_14e7c, label %dec_label_pc_14e98, label %dec_label_pc_14e80

dec_label_pc_14e80:                               ; preds = %dec_label_pc_14e74, %dec_label_pc_14e34, %dec_label_pc_14e80
  %v1_14e8c = phi i32 [ %v4_14e8c, %dec_label_pc_14e80 ], [ %v12_14e68, %dec_label_pc_14e74 ], [ %v0_14dfc74, %dec_label_pc_14e34 ]
  %v0_14e80 = load i32, i32* @lr, align 4
  %v3_14e80 = udiv i32 %v0_14e80, 65536
  store i32 %v3_14e80, i32* %ip.global-to-local, align 4
  %v0_14e84 = load i32, i32* %r1.global-to-local, align 4
  %v1_14e84 = inttoptr i32 %v0_14e84 to i32*
  %v2_14e84 = load i32, i32* %v1_14e84, align 4
  store i32 %v2_14e84, i32* @lr, align 4
  %v4_14e84 = add i32 %v0_14e84, 4
  store i32 %v4_14e84, i32* %r1.global-to-local, align 4
  %v4_14e88 = mul i32 %v2_14e84, 65536
  %v5_14e88 = or i32 %v4_14e88, %v3_14e80
  store i32 %v5_14e88, i32* @ip, align 4
  %v2_14e8c = inttoptr i32 %v1_14e8c to i32*
  store i32 %v5_14e88, i32* %v2_14e8c, align 4
  %v3_14e8c = load i32, i32* @r0, align 4
  %v4_14e8c = add i32 %v3_14e8c, 4
  store i32 %v4_14e8c, i32* @r0, align 4
  %v0_14e90 = load i32, i32* %r2.global-to-local, align 4
  %v2_14e90 = add i32 %v0_14e90, -4
  store i32 %v2_14e90, i32* %r2.global-to-local, align 4
  %v6_14e94 = icmp slt i32 %v0_14e90, 4
  br i1 %v6_14e94, label %dec_label_pc_14e98.loopexit, label %dec_label_pc_14e80

dec_label_pc_14e98.loopexit:                      ; preds = %dec_label_pc_14e80
  %v4_14e90 = sub i32 3, %v0_14e90
  %v5_14e90 = and i32 %v4_14e90, %v0_14e90
  %v6_14e90 = icmp slt i32 %v5_14e90, 0
  %v7_14e90 = icmp slt i32 %v2_14e90, 0
  store i1 %v6_14e90, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_14e90, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_14e98

dec_label_pc_14e98:                               ; preds = %dec_label_pc_14e98.loopexit, %dec_label_pc_14e74
  %v2_14d6c112 = phi i32 [ %v4_14e8c, %dec_label_pc_14e98.loopexit ], [ %v12_14e68, %dec_label_pc_14e74 ]
  %v0_14d5c108 = phi i32 [ %v2_14e90, %dec_label_pc_14e98.loopexit ], [ %v2_14e78, %dec_label_pc_14e74 ]
  %v0_14e98 = load i32, i32* %r1.global-to-local, align 4
  %v1_14e98 = add i32 %v0_14e98, -2
  store i32 %v1_14e98, i32* @r1, align 4
  br label %bb131

dec_label_pc_14ea0:                               ; preds = %dec_label_pc_14db4
  br i1 %v5_14ea4, label %dec_label_pc_14eec, label %dec_label_pc_14ea8

dec_label_pc_14ea8:                               ; preds = %dec_label_pc_14ea0
  store i32 %v2_14ea0, i32* %r2.global-to-local, align 4
  %v3_14eac = load i32, i32* @r4, align 4
  store i32 %v3_14eac, i32* %stack_var_-16, align 4
  %v6_14eac = load i32, i32* @r5, align 4
  store i32 %v6_14eac, i32* %stack_var_-12, align 4
  br label %dec_label_pc_14eb0

dec_label_pc_14eb0:                               ; preds = %dec_label_pc_14eb0.dec_label_pc_14eb0_crit_edge, %dec_label_pc_14ea8
  %v0_14ed4 = phi i32 [ %v12_14ed4, %dec_label_pc_14eb0.dec_label_pc_14eb0_crit_edge ], [ %v0_14dfc74, %dec_label_pc_14ea8 ]
  %v0_14eb4 = phi i32 [ %v0_14eb4.pre, %dec_label_pc_14eb0.dec_label_pc_14eb0_crit_edge ], [ %v4_14db8, %dec_label_pc_14ea8 ]
  %v0_14eb0 = phi i32 [ %v0_14eb0.pre, %dec_label_pc_14eb0.dec_label_pc_14eb0_crit_edge ], [ %v2_14db8, %dec_label_pc_14ea8 ]
  %v3_14eb0 = udiv i32 %v0_14eb0, 16777216
  store i32 %v3_14eb0, i32* %r3.global-to-local, align 4
  %v1_14eb4 = inttoptr i32 %v0_14eb4 to i32*
  %v2_14eb4 = load i32, i32* %v1_14eb4, align 4
  store i32 %v2_14eb4, i32* %r4.global-to-local, align 4
  %v3_14eb4 = add i32 %v0_14eb4, 4
  %v4_14eb4 = inttoptr i32 %v3_14eb4 to i32*
  %v5_14eb4 = load i32, i32* %v4_14eb4, align 4
  store i32 %v5_14eb4, i32* %r5.global-to-local, align 4
  %v6_14eb4 = add i32 %v0_14eb4, 8
  %v7_14eb4 = inttoptr i32 %v6_14eb4 to i32*
  %v8_14eb4 = load i32, i32* %v7_14eb4, align 4
  store i32 %v8_14eb4, i32* %ip.global-to-local, align 4
  %v9_14eb4 = add i32 %v0_14eb4, 12
  %v10_14eb4 = inttoptr i32 %v9_14eb4 to i32*
  %v11_14eb4 = load i32, i32* %v10_14eb4, align 4
  store i32 %v11_14eb4, i32* @lr, align 4
  %v12_14eb4 = add i32 %v0_14eb4, 16
  store i32 %v12_14eb4, i32* %r1.global-to-local, align 4
  %v4_14eb8 = mul i32 %v2_14eb4, 256
  %v5_14eb8 = or i32 %v4_14eb8, %v3_14eb0
  store i32 %v5_14eb8, i32* %r3.global-to-local, align 4
  %v3_14ebc = udiv i32 %v2_14eb4, 16777216
  %v4_14ec0 = mul i32 %v5_14eb4, 256
  %v5_14ec0 = or i32 %v4_14ec0, %v3_14ebc
  store i32 %v5_14ec0, i32* %r4.global-to-local, align 4
  %v3_14ec4 = udiv i32 %v5_14eb4, 16777216
  %v4_14ec8 = mul i32 %v8_14eb4, 256
  %v5_14ec8 = or i32 %v4_14ec8, %v3_14ec4
  store i32 %v5_14ec8, i32* %r5.global-to-local, align 4
  %v3_14ecc = udiv i32 %v8_14eb4, 16777216
  %v4_14ed0 = mul i32 %v11_14eb4, 256
  %v5_14ed0 = or i32 %v4_14ed0, %v3_14ecc
  store i32 %v5_14ed0, i32* @ip, align 4
  %v1_14ed4 = inttoptr i32 %v0_14ed4 to i32*
  store i32 %v5_14eb8, i32* %v1_14ed4, align 4
  %v3_14ed4 = add i32 %v0_14ed4, 4
  %v4_14ed4 = inttoptr i32 %v3_14ed4 to i32*
  %v5_14ed4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_14ed4, i32* %v4_14ed4, align 4
  %v6_14ed4 = add i32 %v0_14ed4, 8
  %v7_14ed4 = inttoptr i32 %v6_14ed4 to i32*
  %v8_14ed4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_14ed4, i32* %v7_14ed4, align 4
  %v9_14ed4 = add i32 %v0_14ed4, 12
  %v10_14ed4 = inttoptr i32 %v9_14ed4 to i32*
  %v11_14ed4 = load i32, i32* @ip, align 4
  store i32 %v11_14ed4, i32* %v10_14ed4, align 4
  %v12_14ed4 = add i32 %v0_14ed4, 16
  store i32 %v12_14ed4, i32* @r0, align 4
  %v0_14ed8 = load i32, i32* %r2.global-to-local, align 4
  %v2_14ed8 = add i32 %v0_14ed8, -16
  store i32 %v2_14ed8, i32* %r2.global-to-local, align 4
  %v6_14edc = icmp slt i32 %v0_14ed8, 16
  br i1 %v6_14edc, label %dec_label_pc_14ee0, label %dec_label_pc_14eb0.dec_label_pc_14eb0_crit_edge

dec_label_pc_14eb0.dec_label_pc_14eb0_crit_edge:  ; preds = %dec_label_pc_14eb0
  %v0_14eb0.pre = load i32, i32* @lr, align 4
  %v0_14eb4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14eb0

dec_label_pc_14ee0:                               ; preds = %dec_label_pc_14eb0
  %v2_14ee0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_14ee0, i32* @r4, align 4
  %v5_14ee0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_14ee0, i32* @r5, align 4
  %v2_14ee4 = add i32 %v0_14ed8, -4
  store i32 %v2_14ee4, i32* %r2.global-to-local, align 4
  %v4_14ee4 = add i32 %v0_14ed8, 2147483632
  %v5_14ee4 = and i32 %v2_14ee4, %v4_14ee4
  %v6_14ee4 = icmp slt i32 %v5_14ee4, 0
  store i1 %v6_14ee4, i1* %cpsr_v.global-to-local, align 1
  %v7_14ee4 = icmp slt i32 %v2_14ee4, 0
  store i1 %v7_14ee4, i1* %cpsr_n.global-to-local, align 1
  %v8_14ee4 = icmp eq i32 %v2_14ee4, 0
  store i1 %v8_14ee4, i1* %cpsr_z.global-to-local, align 1
  %v5_14ee8 = icmp slt i32 %v2_14ed8, -12
  br i1 %v5_14ee8, label %dec_label_pc_14f04, label %dec_label_pc_14eec

dec_label_pc_14eec:                               ; preds = %dec_label_pc_14ee0, %dec_label_pc_14ea0, %dec_label_pc_14eec
  %v1_14ef8 = phi i32 [ %v4_14ef8, %dec_label_pc_14eec ], [ %v12_14ed4, %dec_label_pc_14ee0 ], [ %v0_14dfc74, %dec_label_pc_14ea0 ]
  %v0_14eec = load i32, i32* @lr, align 4
  %v3_14eec = udiv i32 %v0_14eec, 16777216
  store i32 %v3_14eec, i32* %ip.global-to-local, align 4
  %v0_14ef0 = load i32, i32* %r1.global-to-local, align 4
  %v1_14ef0 = inttoptr i32 %v0_14ef0 to i32*
  %v2_14ef0 = load i32, i32* %v1_14ef0, align 4
  store i32 %v2_14ef0, i32* @lr, align 4
  %v4_14ef0 = add i32 %v0_14ef0, 4
  store i32 %v4_14ef0, i32* %r1.global-to-local, align 4
  %v4_14ef4 = mul i32 %v2_14ef0, 256
  %v5_14ef4 = or i32 %v4_14ef4, %v3_14eec
  store i32 %v5_14ef4, i32* @ip, align 4
  %v2_14ef8 = inttoptr i32 %v1_14ef8 to i32*
  store i32 %v5_14ef4, i32* %v2_14ef8, align 4
  %v3_14ef8 = load i32, i32* @r0, align 4
  %v4_14ef8 = add i32 %v3_14ef8, 4
  store i32 %v4_14ef8, i32* @r0, align 4
  %v0_14efc = load i32, i32* %r2.global-to-local, align 4
  %v2_14efc = add i32 %v0_14efc, -4
  store i32 %v2_14efc, i32* %r2.global-to-local, align 4
  %v6_14f00 = icmp slt i32 %v0_14efc, 4
  br i1 %v6_14f00, label %dec_label_pc_14f04.loopexit, label %dec_label_pc_14eec

dec_label_pc_14f04.loopexit:                      ; preds = %dec_label_pc_14eec
  %v4_14efc = sub i32 3, %v0_14efc
  %v5_14efc = and i32 %v4_14efc, %v0_14efc
  %v6_14efc = icmp slt i32 %v5_14efc, 0
  %v7_14efc = icmp slt i32 %v2_14efc, 0
  store i1 %v6_14efc, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_14efc, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_14f04

dec_label_pc_14f04:                               ; preds = %dec_label_pc_14f04.loopexit, %dec_label_pc_14ee0
  %v2_14d6c113 = phi i32 [ %v4_14ef8, %dec_label_pc_14f04.loopexit ], [ %v12_14ed4, %dec_label_pc_14ee0 ]
  %v0_14d5c109 = phi i32 [ %v2_14efc, %dec_label_pc_14f04.loopexit ], [ %v2_14ee4, %dec_label_pc_14ee0 ]
  %v0_14f04 = load i32, i32* %r1.global-to-local, align 4
  %v1_14f04 = add i32 %v0_14f04, -1
  store i32 %v1_14f04, i32* @r1, align 4
  br label %bb131

dec_label_pc_14f0c:                               ; preds = %dec_label_pc_14cc0
  %v1_14f0c = load i32, i32* @r2, align 4
  %v2_14f0c = add i32 %v1_14f0c, %v0_14cc0
  store i32 %v2_14f0c, i32* %r1.global-to-local, align 4
  %v2_14f10 = add i32 %v1_14f0c, %v1_14cc0
  store i32 %v2_14f10, i32* %r0.global-to-local, align 4
  %v2_14f14 = add i32 %v1_14f0c, -4
  store i32 %v2_14f14, i32* %r2.global-to-local, align 4
  %v4_14f14 = sub i32 3, %v1_14f0c
  %v5_14f14 = and i32 %v4_14f14, %v1_14f0c
  %v6_14f14 = icmp slt i32 %v5_14f14, 0
  store i1 %v6_14f14, i1* %cpsr_v.global-to-local, align 1
  %v7_14f14 = icmp slt i32 %v2_14f14, 0
  store i1 %v7_14f14, i1* %cpsr_n.global-to-local, align 1
  %v8_14f14 = icmp eq i32 %v1_14f0c, 4
  store i1 %v8_14f14, i1* %cpsr_z.global-to-local, align 1
  %v5_14f18 = icmp slt i32 %v1_14f0c, 4
  br i1 %v5_14f18, label %bb141, label %dec_label_pc_14f1c

dec_label_pc_14f1c:                               ; preds = %dec_label_pc_14f0c
  %v1_14f1c = urem i32 %v2_14f10, 4
  store i32 %v1_14f1c, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_14f1c = icmp eq i32 %v1_14f1c, 0
  store i1 %v2_14f1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14f1c, label %dec_label_pc_14f24, label %dec_label_pc_14fc4

dec_label_pc_14f24:                               ; preds = %dec_label_pc_14f1c
  %v1_14f24 = urem i32 %v2_14f0c, 4
  store i32 %v1_14f24, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_14f24 = icmp eq i32 %v1_14f24, 0
  store i1 %v2_14f24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14f24, label %dec_label_pc_14f2c, label %dec_label_pc_14ff0

dec_label_pc_14f2c:                               ; preds = %dec_label_pc_14f24, %dec_label_pc_14fe8
  %v0_14f4448 = phi i32 [ %v2_14f10, %dec_label_pc_14f24 ], [ %v0_1503831, %dec_label_pc_14fe8 ]
  %v0_14f4047 = phi i32 [ %v2_14f0c, %dec_label_pc_14f24 ], [ %v0_14fe8, %dec_label_pc_14fe8 ]
  %v0_14f2c = phi i32 [ %v2_14f14, %dec_label_pc_14f24 ], [ %v2_14fe0, %dec_label_pc_14fe8 ]
  %v2_14f2c = add i32 %v0_14f2c, -8
  store i32 %v2_14f2c, i32* %r2.global-to-local, align 4
  %v4_14f2c = sub i32 7, %v0_14f2c
  %v5_14f2c = and i32 %v4_14f2c, %v0_14f2c
  %v6_14f2c = icmp slt i32 %v5_14f2c, 0
  store i1 %v6_14f2c, i1* %cpsr_v.global-to-local, align 1
  %v7_14f2c = icmp slt i32 %v2_14f2c, 0
  store i1 %v7_14f2c, i1* %cpsr_n.global-to-local, align 1
  %v8_14f2c = icmp eq i32 %v0_14f2c, 8
  store i1 %v8_14f2c, i1* %cpsr_z.global-to-local, align 1
  %v5_14f30 = icmp slt i32 %v0_14f2c, 8
  br i1 %v5_14f30, label %dec_label_pc_14f7c, label %dec_label_pc_14f34

dec_label_pc_14f34:                               ; preds = %dec_label_pc_14f2c
  %v3_14f34 = load i32, i32* @r4, align 4
  store i32 %v3_14f34, i32* %stack_var_-8, align 4
  %v6_14f34 = load i32, i32* @lr, align 4
  %v2_14f38 = add i32 %v0_14f2c, -28
  store i32 %v2_14f38, i32* %r2.global-to-local, align 4
  %v4_14f38 = sub i32 27, %v0_14f2c
  %v5_14f38 = and i32 %v4_14f38, %v2_14f2c
  %v6_14f38 = icmp slt i32 %v5_14f38, 0
  store i1 %v6_14f38, i1* %cpsr_v.global-to-local, align 1
  %v7_14f38 = icmp slt i32 %v2_14f38, 0
  store i1 %v7_14f38, i1* %cpsr_n.global-to-local, align 1
  %v8_14f38 = icmp eq i32 %v2_14f2c, 20
  store i1 %v8_14f38, i1* %cpsr_z.global-to-local, align 1
  %v5_14f3c = icmp slt i32 %v2_14f2c, 20
  br i1 %v5_14f3c, label %dec_label_pc_14f58, label %dec_label_pc_14f40

dec_label_pc_14f40:                               ; preds = %dec_label_pc_14f34, %dec_label_pc_14f40.dec_label_pc_14f40_crit_edge
  %v0_14f44 = phi i32 [ %v1_14f4c, %dec_label_pc_14f40.dec_label_pc_14f40_crit_edge ], [ %v0_14f4448, %dec_label_pc_14f34 ]
  %v0_14f40 = phi i32 [ %v0_14f40.pre, %dec_label_pc_14f40.dec_label_pc_14f40_crit_edge ], [ %v0_14f4047, %dec_label_pc_14f34 ]
  %v1_14f40 = add i32 %v0_14f40, -4
  %v2_14f40 = inttoptr i32 %v1_14f40 to i32*
  %v3_14f40 = load i32, i32* %v2_14f40, align 4
  store i32 %v3_14f40, i32* %r3.global-to-local, align 4
  %v4_14f40 = add i32 %v0_14f40, -8
  %v5_14f40 = inttoptr i32 %v4_14f40 to i32*
  %v6_14f40 = load i32, i32* %v5_14f40, align 4
  store i32 %v6_14f40, i32* %r4.global-to-local, align 4
  %v7_14f40 = add i32 %v0_14f40, -12
  %v8_14f40 = inttoptr i32 %v7_14f40 to i32*
  %v9_14f40 = load i32, i32* %v8_14f40, align 4
  store i32 %v9_14f40, i32* %ip.global-to-local, align 4
  %v10_14f40 = add i32 %v0_14f40, -16
  %v11_14f40 = inttoptr i32 %v10_14f40 to i32*
  %v12_14f40 = load i32, i32* %v11_14f40, align 4
  store i32 %v12_14f40, i32* %lr.global-to-local, align 4
  store i32 %v10_14f40, i32* %r1.global-to-local, align 4
  %v1_14f44 = add i32 %v0_14f44, -16
  %v2_14f44 = inttoptr i32 %v1_14f44 to i32*
  store i32 %v3_14f40, i32* %v2_14f44, align 4
  %v4_14f44 = add i32 %v0_14f44, -12
  %v5_14f44 = inttoptr i32 %v4_14f44 to i32*
  %v6_14f44 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_14f44, i32* %v5_14f44, align 4
  %v7_14f44 = add i32 %v0_14f44, -8
  %v8_14f44 = inttoptr i32 %v7_14f44 to i32*
  %v9_14f44 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_14f44, i32* %v8_14f44, align 4
  %v10_14f44 = add i32 %v0_14f44, -4
  %v11_14f44 = inttoptr i32 %v10_14f44 to i32*
  %v12_14f44 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_14f44, i32* %v11_14f44, align 4
  store i32 %v1_14f44, i32* %r0.global-to-local, align 4
  %v0_14f48 = load i32, i32* %r1.global-to-local, align 4
  %v1_14f48 = add i32 %v0_14f48, -4
  %v2_14f48 = inttoptr i32 %v1_14f48 to i32*
  %v3_14f48 = load i32, i32* %v2_14f48, align 4
  store i32 %v3_14f48, i32* %r3.global-to-local, align 4
  %v4_14f48 = add i32 %v0_14f48, -8
  %v5_14f48 = inttoptr i32 %v4_14f48 to i32*
  %v6_14f48 = load i32, i32* %v5_14f48, align 4
  store i32 %v6_14f48, i32* %r4.global-to-local, align 4
  %v7_14f48 = add i32 %v0_14f48, -12
  %v8_14f48 = inttoptr i32 %v7_14f48 to i32*
  %v9_14f48 = load i32, i32* %v8_14f48, align 4
  store i32 %v9_14f48, i32* @ip, align 4
  %v10_14f48 = add i32 %v0_14f48, -16
  %v11_14f48 = inttoptr i32 %v10_14f48 to i32*
  %v12_14f48 = load i32, i32* %v11_14f48, align 4
  store i32 %v12_14f48, i32* %lr.global-to-local, align 4
  store i32 %v10_14f48, i32* %r1.global-to-local, align 4
  %v1_14f4c = add i32 %v0_14f44, -32
  %v2_14f4c = inttoptr i32 %v1_14f4c to i32*
  store i32 %v3_14f48, i32* %v2_14f4c, align 4
  %v4_14f4c = add i32 %v0_14f44, -28
  %v5_14f4c = inttoptr i32 %v4_14f4c to i32*
  %v6_14f4c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_14f4c, i32* %v5_14f4c, align 4
  %v7_14f4c = add i32 %v0_14f44, -24
  %v8_14f4c = inttoptr i32 %v7_14f4c to i32*
  %v9_14f4c = load i32, i32* @ip, align 4
  store i32 %v9_14f4c, i32* %v8_14f4c, align 4
  %v10_14f4c = add i32 %v0_14f44, -20
  %v11_14f4c = inttoptr i32 %v10_14f4c to i32*
  %v12_14f4c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_14f4c, i32* %v11_14f4c, align 4
  store i32 %v1_14f4c, i32* %r0.global-to-local, align 4
  %v0_14f50 = load i32, i32* %r2.global-to-local, align 4
  %v2_14f50 = add i32 %v0_14f50, -32
  store i32 %v2_14f50, i32* %r2.global-to-local, align 4
  %v6_14f54 = icmp slt i32 %v0_14f50, 32
  br i1 %v6_14f54, label %dec_label_pc_14f58.loopexit, label %dec_label_pc_14f40.dec_label_pc_14f40_crit_edge

dec_label_pc_14f40.dec_label_pc_14f40_crit_edge:  ; preds = %dec_label_pc_14f40
  %v0_14f40.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14f40

dec_label_pc_14f58.loopexit:                      ; preds = %dec_label_pc_14f40
  %v4_14f50 = sub i32 31, %v0_14f50
  %v5_14f50 = and i32 %v4_14f50, %v0_14f50
  %v6_14f50 = icmp slt i32 %v5_14f50, 0
  %v7_14f50 = icmp slt i32 %v2_14f50, 0
  store i1 %v6_14f50, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_14f50, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_14f58

dec_label_pc_14f58:                               ; preds = %dec_label_pc_14f58.loopexit, %dec_label_pc_14f34
  %v6_14f60 = phi i32 [ %v1_14f4c, %dec_label_pc_14f58.loopexit ], [ %v0_14f4448, %dec_label_pc_14f34 ]
  %v0_14f68.pr = phi i32 [ %v2_14f50, %dec_label_pc_14f58.loopexit ], [ %v2_14f38, %dec_label_pc_14f34 ]
  %v4_14f58 = add i32 %v0_14f68.pr, 16
  %v6_14f58 = sub i32 0, %v0_14f68.pr
  %v7_14f58 = and i32 %v4_14f58, %v6_14f58
  %v8_14f58 = icmp slt i32 %v7_14f58, 0
  store i1 %v8_14f58, i1* %cpsr_v.global-to-local, align 1
  %v9_14f58 = icmp slt i32 %v4_14f58, 0
  store i1 %v9_14f58, i1* %cpsr_n.global-to-local, align 1
  %v10_14f58 = icmp eq i32 %v4_14f58, 0
  store i1 %v10_14f58, i1* %cpsr_z.global-to-local, align 1
  %v5_14f5c = icmp slt i32 %v0_14f68.pr, -16
  br i1 %v5_14f5c, label %.thread13, label %bb138

bb138:                                            ; preds = %dec_label_pc_14f58
  %v6_14f5c = load i32, i32* %r1.global-to-local, align 4
  %v7_14f5c = add i32 %v6_14f5c, -4
  %v8_14f5c = inttoptr i32 %v7_14f5c to i32*
  %v9_14f5c = load i32, i32* %v8_14f5c, align 4
  store i32 %v9_14f5c, i32* %r3.global-to-local, align 4
  %v10_14f5c = add i32 %v6_14f5c, -8
  %v11_14f5c = inttoptr i32 %v10_14f5c to i32*
  %v12_14f5c = load i32, i32* %v11_14f5c, align 4
  store i32 %v12_14f5c, i32* %r4.global-to-local, align 4
  %v13_14f5c = add i32 %v6_14f5c, -12
  %v14_14f5c = inttoptr i32 %v13_14f5c to i32*
  %v15_14f5c = load i32, i32* %v14_14f5c, align 4
  store i32 %v15_14f5c, i32* @ip, align 4
  %v16_14f5c = add i32 %v6_14f5c, -16
  %v17_14f5c = inttoptr i32 %v16_14f5c to i32*
  %v18_14f5c = load i32, i32* %v17_14f5c, align 4
  store i32 %v18_14f5c, i32* %lr.global-to-local, align 4
  store i32 %v16_14f5c, i32* %r1.global-to-local, align 4
  %v7_14f60 = add i32 %v6_14f60, -16
  %v8_14f60 = inttoptr i32 %v7_14f60 to i32*
  store i32 %v9_14f5c, i32* %v8_14f60, align 4
  %v10_14f60 = add i32 %v6_14f60, -12
  %v11_14f60 = inttoptr i32 %v10_14f60 to i32*
  %v12_14f60 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v12_14f60, i32* %v11_14f60, align 4
  %v13_14f60 = add i32 %v6_14f60, -8
  %v14_14f60 = inttoptr i32 %v13_14f60 to i32*
  %v15_14f60 = load i32, i32* @ip, align 4
  store i32 %v15_14f60, i32* %v14_14f60, align 4
  %v16_14f60 = add i32 %v6_14f60, -4
  %v17_14f60 = inttoptr i32 %v16_14f60 to i32*
  %v18_14f60 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v18_14f60, i32* %v17_14f60, align 4
  store i32 %v7_14f60, i32* %r0.global-to-local, align 4
  %v6_14f64 = load i32, i32* %r2.global-to-local, align 4
  %v7_14f64 = add i32 %v6_14f64, -16
  store i32 %v7_14f64, i32* %r2.global-to-local, align 4
  br label %.thread13

.thread13:                                        ; preds = %dec_label_pc_14f58, %bb138
  %v6_14f70 = phi i32 [ %v7_14f60, %bb138 ], [ %v6_14f60, %dec_label_pc_14f58 ]
  %v0_14f68 = phi i32 [ %v7_14f64, %bb138 ], [ %v0_14f68.pr, %dec_label_pc_14f58 ]
  %v4_14f68 = add i32 %v0_14f68, 20
  store i32 %v4_14f68, i32* %r2.global-to-local, align 4
  %v6_14f68 = sub i32 0, %v0_14f68
  %v7_14f68 = and i32 %v4_14f68, %v6_14f68
  %v8_14f68 = icmp slt i32 %v7_14f68, 0
  store i1 %v8_14f68, i1* %cpsr_v.global-to-local, align 1
  %v9_14f68 = icmp slt i32 %v4_14f68, 0
  store i1 %v9_14f68, i1* %cpsr_n.global-to-local, align 1
  %v10_14f68 = icmp eq i32 %v4_14f68, 0
  store i1 %v10_14f68, i1* %cpsr_z.global-to-local, align 1
  %v5_14f6c = icmp slt i32 %v0_14f68, -20
  br i1 %v5_14f6c, label %.thread15, label %bb139

bb139:                                            ; preds = %.thread13
  %v6_14f6c = load i32, i32* %r1.global-to-local, align 4
  %v7_14f6c = add i32 %v6_14f6c, -4
  %v8_14f6c = inttoptr i32 %v7_14f6c to i32*
  %v9_14f6c = load i32, i32* %v8_14f6c, align 4
  store i32 %v9_14f6c, i32* %r3.global-to-local, align 4
  %v10_14f6c = add i32 %v6_14f6c, -8
  %v11_14f6c = inttoptr i32 %v10_14f6c to i32*
  %v12_14f6c = load i32, i32* %v11_14f6c, align 4
  store i32 %v12_14f6c, i32* @ip, align 4
  %v13_14f6c = add i32 %v6_14f6c, -12
  %v14_14f6c = inttoptr i32 %v13_14f6c to i32*
  %v15_14f6c = load i32, i32* %v14_14f6c, align 4
  store i32 %v15_14f6c, i32* %lr.global-to-local, align 4
  store i32 %v13_14f6c, i32* %r1.global-to-local, align 4
  %v7_14f70 = add i32 %v6_14f70, -12
  %v8_14f70 = inttoptr i32 %v7_14f70 to i32*
  store i32 %v9_14f6c, i32* %v8_14f70, align 4
  %v10_14f70 = add i32 %v6_14f70, -8
  %v11_14f70 = inttoptr i32 %v10_14f70 to i32*
  %v12_14f70 = load i32, i32* @ip, align 4
  store i32 %v12_14f70, i32* %v11_14f70, align 4
  %v13_14f70 = add i32 %v6_14f70, -4
  %v14_14f70 = inttoptr i32 %v13_14f70 to i32*
  %v15_14f70 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v15_14f70, i32* %v14_14f70, align 4
  store i32 %v7_14f70, i32* %r0.global-to-local, align 4
  %v6_14f74 = load i32, i32* %r2.global-to-local, align 4
  %v7_14f74 = add i32 %v6_14f74, -12
  store i32 %v7_14f74, i32* %r2.global-to-local, align 4
  br label %.thread15

.thread15:                                        ; preds = %.thread13, %bb139
  %v6_14f9456 = phi i32 [ %v6_14f70, %.thread13 ], [ %v7_14f70, %bb139 ]
  %v0_14f7c54 = phi i32 [ %v4_14f68, %.thread13 ], [ %v7_14f74, %bb139 ]
  %v2_14f78 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14f78, i32* @r4, align 4
  store i32 %v6_14f34, i32* @lr, align 4
  br label %dec_label_pc_14f7c

dec_label_pc_14f7c:                               ; preds = %dec_label_pc_14f2c, %.thread15
  %v7_14f8c = phi i32 [ %v0_14f4448, %dec_label_pc_14f2c ], [ %v6_14f9456, %.thread15 ]
  %v0_14f7c = phi i32 [ %v2_14f2c, %dec_label_pc_14f2c ], [ %v0_14f7c54, %.thread15 ]
  %v2_14f7c = add i32 %v0_14f7c, 8
  store i32 %v2_14f7c, i32* %r2.global-to-local, align 4
  %v4_14f7c = sub i32 0, %v0_14f7c
  %v5_14f7c = and i32 %v2_14f7c, %v4_14f7c
  %v6_14f7c = icmp slt i32 %v5_14f7c, 0
  store i1 %v6_14f7c, i1* %cpsr_v.global-to-local, align 1
  %v7_14f7c = icmp slt i32 %v2_14f7c, 0
  store i1 %v7_14f7c, i1* %cpsr_n.global-to-local, align 1
  %v8_14f7c = icmp eq i32 %v2_14f7c, 0
  store i1 %v8_14f7c, i1* %cpsr_z.global-to-local, align 1
  %v5_14f80 = icmp slt i32 %v0_14f7c, -8
  br i1 %v5_14f80, label %bb141, label %dec_label_pc_14f84

dec_label_pc_14f84:                               ; preds = %dec_label_pc_14f7c
  %v6_14f84 = add i32 %v0_14f7c, 4
  store i32 %v6_14f84, i32* %r2.global-to-local, align 4
  %v8_14f84 = sub i32 -5, %v0_14f7c
  %v9_14f84 = and i32 %v8_14f84, %v2_14f7c
  %v10_14f84 = icmp slt i32 %v9_14f84, 0
  store i1 %v10_14f84, i1* %cpsr_v.global-to-local, align 1
  %v11_14f84 = icmp slt i32 %v6_14f84, 0
  store i1 %v11_14f84, i1* %cpsr_n.global-to-local, align 1
  %v12_14f84 = icmp eq i32 %v2_14f7c, 4
  store i1 %v12_14f84, i1* %cpsr_z.global-to-local, align 1
  %v5_14f88 = icmp slt i32 %v2_14f7c, 4
  %v6_14f88 = load i32, i32* %r1.global-to-local, align 4
  %v7_14f88 = add i32 %v6_14f88, -4
  %v8_14f88 = inttoptr i32 %v7_14f88 to i32*
  %v9_14f88 = load i32, i32* %v8_14f88, align 4
  store i32 %v9_14f88, i32* %r3.global-to-local, align 4
  br i1 %v5_14f88, label %.thread19, label %bb140

.thread19:                                        ; preds = %dec_label_pc_14f84
  store i32 %v7_14f88, i32* %r1.global-to-local, align 4
  %v8_14f8c = add i32 %v7_14f8c, -4
  %v9_14f8c = inttoptr i32 %v8_14f8c to i32*
  store i32 %v9_14f88, i32* %v9_14f8c, align 4
  %v10_14f8c = load i32, i32* %r0.global-to-local, align 4
  %v11_14f8c = add i32 %v10_14f8c, -4
  store i32 %v11_14f8c, i32* %r0.global-to-local, align 4
  %v0_14f9c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb141

bb140:                                            ; preds = %dec_label_pc_14f84
  %v10_14f90 = add i32 %v6_14f88, -8
  %v11_14f90 = inttoptr i32 %v10_14f90 to i32*
  %v12_14f90 = load i32, i32* %v11_14f90, align 4
  store i32 %v12_14f90, i32* @ip, align 4
  store i32 %v10_14f90, i32* %r1.global-to-local, align 4
  %v7_14f94 = add i32 %v7_14f8c, -8
  %v8_14f94 = inttoptr i32 %v7_14f94 to i32*
  store i32 %v9_14f88, i32* %v8_14f94, align 4
  %v10_14f94 = add i32 %v7_14f8c, -4
  %v11_14f94 = inttoptr i32 %v10_14f94 to i32*
  %v12_14f94 = load i32, i32* @ip, align 4
  store i32 %v12_14f94, i32* %v11_14f94, align 4
  store i32 %v7_14f94, i32* %r0.global-to-local, align 4
  %v6_14f98 = load i32, i32* %r2.global-to-local, align 4
  %v7_14f98 = add i32 %v6_14f98, -4
  store i32 %v7_14f98, i32* %r2.global-to-local, align 4
  br label %bb141

bb141:                                            ; preds = %.thread19, %.thread25, %dec_label_pc_14f7c, %dec_label_pc_14f0c, %dec_label_pc_15140, %dec_label_pc_150d4, %dec_label_pc_15068, %bb140
  %v2_14fa0 = phi i32 [ %v11_14f8c, %.thread19 ], [ %v0_1503831, %.thread25 ], [ %v7_14f8c, %dec_label_pc_14f7c ], [ %v2_14f10, %dec_label_pc_14f0c ], [ %v2_14fac64, %dec_label_pc_15140 ], [ %v2_14fac63, %dec_label_pc_150d4 ], [ %v2_14fac62, %dec_label_pc_15068 ], [ %v7_14f94, %bb140 ]
  %v0_14f9c = phi i32 [ %v0_14f9c.pre, %.thread19 ], [ %v2_14fe0, %.thread25 ], [ %v2_14f7c, %dec_label_pc_14f7c ], [ %v2_14f14, %dec_label_pc_14f0c ], [ %v0_14f9c60, %dec_label_pc_15140 ], [ %v0_14f9c59, %dec_label_pc_150d4 ], [ %v0_14f9c58, %dec_label_pc_15068 ], [ %v7_14f98, %bb140 ]
  %v1_14f9c = add i32 %v0_14f9c, 4
  store i32 %v1_14f9c, i32* %r2.global-to-local, align 4
  %v3_14f9c = sub i32 0, %v0_14f9c
  %v4_14f9c = and i32 %v1_14f9c, %v3_14f9c
  %v5_14f9c = icmp slt i32 %v4_14f9c, 0
  store i1 %v5_14f9c, i1* %cpsr_v.global-to-local, align 1
  %v6_14f9c = icmp slt i32 %v1_14f9c, 0
  store i1 %v6_14f9c, i1* %cpsr_n.global-to-local, align 1
  %v7_14f9c = icmp eq i32 %v1_14f9c, 0
  store i1 %v7_14f9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_14f9c, label %.thread122, label %bb142

bb142:                                            ; preds = %bb141
  %v1_14fa4 = add i32 %v0_14f9c, 2
  %v3_14fa4 = sub i32 -3, %v0_14f9c
  %v4_14fa4 = and i32 %v3_14fa4, %v1_14f9c
  %v5_14fa4 = icmp slt i32 %v4_14fa4, 0
  store i1 %v5_14fa4, i1* %cpsr_v.global-to-local, align 1
  %v6_14fa4 = icmp slt i32 %v1_14fa4, 0
  store i1 %v6_14fa4, i1* %cpsr_n.global-to-local, align 1
  %v7_14fa4 = icmp eq i32 %v1_14f9c, 2
  store i1 %v7_14fa4, i1* %cpsr_z.global-to-local, align 1
  %v0_14fa8 = load i32, i32* %r1.global-to-local, align 4
  %v1_14fa8 = add i32 %v0_14fa8, -1
  %v2_14fa8 = inttoptr i32 %v1_14fa8 to i8*
  %v3_14fa8 = load i8, i8* %v2_14fa8, align 1
  %v4_14fa8 = zext i8 %v3_14fa8 to i32
  store i32 %v4_14fa8, i32* %r3.global-to-local, align 4
  store i32 %v1_14fa8, i32* %r1.global-to-local, align 4
  %v3_14fac = add i32 %v2_14fa0, -1
  %v4_14fac = inttoptr i32 %v3_14fac to i8*
  store i8 %v3_14fa8, i8* %v4_14fac, align 1
  %v5_14fac = load i32, i32* %r0.global-to-local, align 4
  %v6_14fac = add i32 %v5_14fac, -1
  store i32 %v6_14fac, i32* %r0.global-to-local, align 4
  %v0_14fb0 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_14fb0 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_14fb0 = xor i1 %v0_14fb0, %v1_14fb0
  br i1 %v2_14fb0, label %.thread121, label %bb143

bb143:                                            ; preds = %bb142
  %v3_14fb0 = load i32, i32* %r1.global-to-local, align 4
  %v4_14fb0 = add i32 %v3_14fb0, -1
  %v5_14fb0 = inttoptr i32 %v4_14fb0 to i8*
  %v6_14fb0 = load i8, i8* %v5_14fb0, align 1
  %v7_14fb0 = zext i8 %v6_14fb0 to i32
  store i32 %v7_14fb0, i32* %r3.global-to-local, align 4
  store i32 %v4_14fb0, i32* %r1.global-to-local, align 4
  %v6_14fb4 = add i32 %v5_14fac, -2
  %v7_14fb4 = inttoptr i32 %v6_14fb4 to i8*
  store i8 %v6_14fb0, i8* %v7_14fb4, align 1
  %v8_14fb4 = load i32, i32* %r0.global-to-local, align 4
  %v9_14fb4 = add i32 %v8_14fb4, -1
  store i32 %v9_14fb4, i32* %r0.global-to-local, align 4
  %v1_14fb8.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_14fb8.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread121

.thread121:                                       ; preds = %bb142, %bb143
  %v7_14fbc = phi i32 [ %v9_14fb4, %bb143 ], [ %v6_14fac, %bb142 ]
  %v2_14fbc = phi i1 [ %v2_14fb8.pre, %bb143 ], [ %v1_14fb0, %bb142 ]
  %v1_14fbc = phi i1 [ %v1_14fb8.pre, %bb143 ], [ %v0_14fb0, %bb142 ]
  %v0_14fb8 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_14fb8 = xor i1 %v2_14fbc, %v1_14fbc
  %v4_14fb8 = or i1 %v0_14fb8, %v3_14fb8
  br i1 %v4_14fb8, label %.thread122, label %bb144

bb144:                                            ; preds = %.thread121
  %v5_14fb8 = load i32, i32* %r1.global-to-local, align 4
  %v6_14fb8 = add i32 %v5_14fb8, -1
  %v7_14fb8 = inttoptr i32 %v6_14fb8 to i8*
  %v8_14fb8 = load i8, i8* %v7_14fb8, align 1
  %v9_14fb8 = zext i8 %v8_14fb8 to i32
  store i32 %v9_14fb8, i32* %r3.global-to-local, align 4
  store i32 %v6_14fb8, i32* %r1.global-to-local, align 4
  %v8_14fbc = add i32 %v7_14fbc, -1
  %v9_14fbc = inttoptr i32 %v8_14fbc to i8*
  store i8 %v8_14fb8, i8* %v9_14fbc, align 1
  %v10_14fbc = load i32, i32* %r0.global-to-local, align 4
  %v11_14fbc = add i32 %v10_14fbc, -1
  store i32 %v11_14fbc, i32* %r0.global-to-local, align 4
  br label %.thread122

dec_label_pc_14fc4:                               ; preds = %dec_label_pc_14f1c
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_14fc4 = icmp eq i32 %v1_14f1c, 1
  store i1 %v8_14fc4, i1* %cpsr_n.global-to-local, align 1
  %v9_14fc4 = icmp eq i32 %v1_14f1c, 2
  store i1 %v9_14fc4, i1* %cpsr_z.global-to-local, align 1
  %v1_14fc8 = add i32 %v2_14f0c, -1
  %v2_14fc8 = inttoptr i32 %v1_14fc8 to i8*
  %v3_14fc8 = load i8, i8* %v2_14fc8, align 1
  %v4_14fc8 = zext i8 %v3_14fc8 to i32
  store i32 %v4_14fc8, i32* %r3.global-to-local, align 4
  store i32 %v1_14fc8, i32* %r1.global-to-local, align 4
  %v3_14fcc = add i32 %v2_14f10, -1
  %v4_14fcc = inttoptr i32 %v3_14fcc to i8*
  store i8 %v3_14fc8, i8* %v4_14fcc, align 1
  %v5_14fcc = load i32, i32* %r0.global-to-local, align 4
  %v6_14fcc = add i32 %v5_14fcc, -1
  store i32 %v6_14fcc, i32* %r0.global-to-local, align 4
  br i1 %v8_14fc4, label %.thread25, label %bb145

bb145:                                            ; preds = %dec_label_pc_14fc4
  %v6_14fd0 = load i32, i32* %r1.global-to-local, align 4
  %v7_14fd0 = add i32 %v6_14fd0, -1
  %v8_14fd0 = inttoptr i32 %v7_14fd0 to i8*
  %v9_14fd0 = load i8, i8* %v8_14fd0, align 1
  %v10_14fd0 = zext i8 %v9_14fd0 to i32
  store i32 %v10_14fd0, i32* %r3.global-to-local, align 4
  store i32 %v7_14fd0, i32* %r1.global-to-local, align 4
  %v9_14fd4 = add i32 %v5_14fcc, -2
  %v10_14fd4 = inttoptr i32 %v9_14fd4 to i8*
  store i8 %v9_14fd0, i8* %v10_14fd4, align 1
  %v11_14fd4 = load i32, i32* %r0.global-to-local, align 4
  %v12_14fd4 = add i32 %v11_14fd4, -1
  store i32 %v12_14fd4, i32* %r0.global-to-local, align 4
  br i1 %v9_14fc4, label %.thread25, label %bb146

bb146:                                            ; preds = %bb145
  %v8_14fd8 = load i32, i32* %r1.global-to-local, align 4
  %v9_14fd8 = add i32 %v8_14fd8, -1
  %v10_14fd8 = inttoptr i32 %v9_14fd8 to i8*
  %v11_14fd8 = load i8, i8* %v10_14fd8, align 1
  %v12_14fd8 = zext i8 %v11_14fd8 to i32
  store i32 %v12_14fd8, i32* %r3.global-to-local, align 4
  store i32 %v9_14fd8, i32* %r1.global-to-local, align 4
  %v11_14fdc = add i32 %v11_14fd4, -2
  %v12_14fdc = inttoptr i32 %v11_14fdc to i8*
  store i8 %v11_14fd8, i8* %v12_14fdc, align 1
  %v13_14fdc = load i32, i32* %r0.global-to-local, align 4
  %v14_14fdc = add i32 %v13_14fdc, -1
  store i32 %v14_14fdc, i32* %r0.global-to-local, align 4
  br label %.thread25

.thread25:                                        ; preds = %bb145, %dec_label_pc_14fc4, %bb146
  %v0_1503831 = phi i32 [ %v12_14fd4, %bb145 ], [ %v6_14fcc, %dec_label_pc_14fc4 ], [ %v14_14fdc, %bb146 ]
  %v0_14fe0 = load i32, i32* %r2.global-to-local, align 4
  %v1_14fe0 = load i32, i32* @ip, align 4
  %v2_14fe0 = sub i32 %v0_14fe0, %v1_14fe0
  store i32 %v2_14fe0, i32* %r2.global-to-local, align 4
  %v4_14fe0 = xor i32 %v1_14fe0, %v0_14fe0
  %v5_14fe0 = xor i32 %v2_14fe0, %v0_14fe0
  %v6_14fe0 = and i32 %v5_14fe0, %v4_14fe0
  %v7_14fe0 = icmp slt i32 %v6_14fe0, 0
  store i1 %v7_14fe0, i1* %cpsr_v.global-to-local, align 1
  %v8_14fe0 = icmp slt i32 %v2_14fe0, 0
  store i1 %v8_14fe0, i1* %cpsr_n.global-to-local, align 1
  %v9_14fe0 = icmp eq i32 %v0_14fe0, %v1_14fe0
  store i1 %v9_14fe0, i1* %cpsr_z.global-to-local, align 1
  %v5_14fe4 = icmp slt i32 %v0_14fe0, %v1_14fe0
  br i1 %v5_14fe4, label %bb141, label %dec_label_pc_14fe8

dec_label_pc_14fe8:                               ; preds = %.thread25
  %v0_14fe8 = load i32, i32* %r1.global-to-local, align 4
  %v1_14fe8 = urem i32 %v0_14fe8, 4
  store i32 %v1_14fe8, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_14fe8 = icmp eq i32 %v1_14fe8, 0
  store i1 %v2_14fe8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14fe8, label %dec_label_pc_14f2c, label %dec_label_pc_14ff0

dec_label_pc_14ff0:                               ; preds = %dec_label_pc_14f24, %dec_label_pc_14fe8
  %v0_1503830 = phi i32 [ %v2_14f10, %dec_label_pc_14f24 ], [ %v0_1503831, %dec_label_pc_14fe8 ]
  %v0_150e4 = phi i32 [ %v2_14f14, %dec_label_pc_14f24 ], [ %v2_14fe0, %dec_label_pc_14fe8 ]
  %v0_14ff0 = phi i32 [ %v2_14f0c, %dec_label_pc_14f24 ], [ %v0_14fe8, %dec_label_pc_14fe8 ]
  %v0_14ff8 = phi i32 [ %v1_14f24, %dec_label_pc_14f24 ], [ %v1_14fe8, %dec_label_pc_14fe8 ]
  %v1_14ff0 = and i32 %v0_14ff0, -4
  store i32 %v1_14ff0, i32* %r1.global-to-local, align 4
  %v1_14ff4 = inttoptr i32 %v1_14ff0 to i32*
  %v2_14ff4 = load i32, i32* %v1_14ff4, align 4
  store i32 %v2_14ff4, i32* %r3.global-to-local, align 4
  %v7_14ff8 = icmp ult i32 %v0_14ff8, 2
  %v2_150dc = add i32 %v0_150e4, -12
  %v4_150dc = sub i32 11, %v0_150e4
  %v5_150dc = and i32 %v4_150dc, %v0_150e4
  %v6_150dc = icmp slt i32 %v5_150dc, 0
  store i1 %v6_150dc, i1* %cpsr_v.global-to-local, align 1
  %v7_150dc = icmp slt i32 %v2_150dc, 0
  store i1 %v7_150dc, i1* %cpsr_n.global-to-local, align 1
  %v8_150dc = icmp eq i32 %v0_150e4, 12
  store i1 %v8_150dc, i1* %cpsr_z.global-to-local, align 1
  %v5_150e0 = icmp slt i32 %v0_150e4, 12
  br i1 %v7_14ff8, label %dec_label_pc_150dc, label %dec_label_pc_15000

dec_label_pc_15000:                               ; preds = %dec_label_pc_14ff0
  %v8_14ff8 = icmp eq i32 %v0_14ff8, 2
  br i1 %v8_14ff8, label %dec_label_pc_15070, label %dec_label_pc_15004

dec_label_pc_15004:                               ; preds = %dec_label_pc_15000
  br i1 %v5_150e0, label %dec_label_pc_15050, label %dec_label_pc_1500c

dec_label_pc_1500c:                               ; preds = %dec_label_pc_15004
  store i32 %v2_150dc, i32* %r2.global-to-local, align 4
  %v3_15010 = load i32, i32* @r4, align 4
  store i32 %v3_15010, i32* %stack_var_-12, align 4
  %v6_15010 = load i32, i32* @r5, align 4
  store i32 %v6_15010, i32* %stack_var_-8, align 4
  %v9_15010 = load i32, i32* @lr, align 4
  br label %dec_label_pc_15014

dec_label_pc_15014:                               ; preds = %dec_label_pc_15014.dec_label_pc_15014_crit_edge, %dec_label_pc_1500c
  %v0_15038 = phi i32 [ %v1_15038, %dec_label_pc_15014.dec_label_pc_15014_crit_edge ], [ %v0_1503830, %dec_label_pc_1500c ]
  %v0_15018 = phi i32 [ %v0_15018.pre, %dec_label_pc_15014.dec_label_pc_15014_crit_edge ], [ %v1_14ff0, %dec_label_pc_1500c ]
  %v0_15014 = phi i32 [ %v0_15014.pre, %dec_label_pc_15014.dec_label_pc_15014_crit_edge ], [ %v2_14ff4, %dec_label_pc_1500c ]
  %v3_15014 = mul i32 %v0_15014, 256
  store i32 %v3_15014, i32* %lr.global-to-local, align 4
  %v1_15018 = add i32 %v0_15018, -4
  %v2_15018 = inttoptr i32 %v1_15018 to i32*
  %v3_15018 = load i32, i32* %v2_15018, align 4
  store i32 %v3_15018, i32* %r3.global-to-local, align 4
  %v4_15018 = add i32 %v0_15018, -8
  %v5_15018 = inttoptr i32 %v4_15018 to i32*
  %v6_15018 = load i32, i32* %v5_15018, align 4
  store i32 %v6_15018, i32* %r4.global-to-local, align 4
  %v7_15018 = add i32 %v0_15018, -12
  %v8_15018 = inttoptr i32 %v7_15018 to i32*
  %v9_15018 = load i32, i32* %v8_15018, align 4
  store i32 %v9_15018, i32* %r5.global-to-local, align 4
  %v10_15018 = add i32 %v0_15018, -16
  %v11_15018 = inttoptr i32 %v10_15018 to i32*
  %v12_15018 = load i32, i32* %v11_15018, align 4
  store i32 %v10_15018, i32* %r1.global-to-local, align 4
  %v4_1501c = udiv i32 %v12_15018, 16777216
  %v5_1501c = or i32 %v4_1501c, %v3_15014
  store i32 %v5_1501c, i32* %lr.global-to-local, align 4
  %v3_15020 = mul i32 %v12_15018, 256
  %v4_15024 = udiv i32 %v9_15018, 16777216
  %v5_15024 = or i32 %v3_15020, %v4_15024
  store i32 %v5_15024, i32* @ip, align 4
  %v3_15028 = mul i32 %v9_15018, 256
  %v4_1502c = udiv i32 %v6_15018, 16777216
  %v5_1502c = or i32 %v3_15028, %v4_1502c
  store i32 %v5_1502c, i32* %r5.global-to-local, align 4
  %v3_15030 = mul i32 %v6_15018, 256
  %v4_15034 = udiv i32 %v3_15018, 16777216
  %v5_15034 = or i32 %v3_15030, %v4_15034
  store i32 %v5_15034, i32* %r4.global-to-local, align 4
  %v1_15038 = add i32 %v0_15038, -16
  %v2_15038 = inttoptr i32 %v1_15038 to i32*
  store i32 %v5_15034, i32* %v2_15038, align 4
  %v4_15038 = add i32 %v0_15038, -12
  %v5_15038 = inttoptr i32 %v4_15038 to i32*
  %v6_15038 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_15038, i32* %v5_15038, align 4
  %v7_15038 = add i32 %v0_15038, -8
  %v8_15038 = inttoptr i32 %v7_15038 to i32*
  %v9_15038 = load i32, i32* @ip, align 4
  store i32 %v9_15038, i32* %v8_15038, align 4
  %v10_15038 = add i32 %v0_15038, -4
  %v11_15038 = inttoptr i32 %v10_15038 to i32*
  %v12_15038 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_15038, i32* %v11_15038, align 4
  store i32 %v1_15038, i32* %r0.global-to-local, align 4
  %v0_1503c = load i32, i32* %r2.global-to-local, align 4
  %v2_1503c = add i32 %v0_1503c, -16
  store i32 %v2_1503c, i32* %r2.global-to-local, align 4
  %v6_15040 = icmp slt i32 %v0_1503c, 16
  br i1 %v6_15040, label %dec_label_pc_15044, label %dec_label_pc_15014.dec_label_pc_15014_crit_edge

dec_label_pc_15014.dec_label_pc_15014_crit_edge:  ; preds = %dec_label_pc_15014
  %v0_15014.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_15018.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15014

dec_label_pc_15044:                               ; preds = %dec_label_pc_15014
  %v2_15044 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_15044, i32* @r4, align 4
  %v5_15044 = load i32, i32* %stack_var_-8, align 4
  store i32 %v5_15044, i32* @r5, align 4
  store i32 %v9_15010, i32* @lr, align 4
  %v2_15048 = add i32 %v0_1503c, -4
  store i32 %v2_15048, i32* %r2.global-to-local, align 4
  %v4_15048 = add i32 %v0_1503c, 2147483632
  %v5_15048 = and i32 %v2_15048, %v4_15048
  %v6_15048 = icmp slt i32 %v5_15048, 0
  store i1 %v6_15048, i1* %cpsr_v.global-to-local, align 1
  %v7_15048 = icmp slt i32 %v2_15048, 0
  store i1 %v7_15048, i1* %cpsr_n.global-to-local, align 1
  %v8_15048 = icmp eq i32 %v2_15048, 0
  store i1 %v8_15048, i1* %cpsr_z.global-to-local, align 1
  %v5_1504c = icmp slt i32 %v2_1503c, -12
  br i1 %v5_1504c, label %dec_label_pc_15068, label %dec_label_pc_15050

dec_label_pc_15050:                               ; preds = %dec_label_pc_15044, %dec_label_pc_15004, %dec_label_pc_15050
  %v1_1505c = phi i32 [ %v5_1505c, %dec_label_pc_15050 ], [ %v1_15038, %dec_label_pc_15044 ], [ %v0_1503830, %dec_label_pc_15004 ]
  %v0_15050 = load i32, i32* %r3.global-to-local, align 4
  %v3_15050 = mul i32 %v0_15050, 256
  store i32 %v3_15050, i32* %ip.global-to-local, align 4
  %v0_15054 = load i32, i32* %r1.global-to-local, align 4
  %v1_15054 = add i32 %v0_15054, -4
  %v2_15054 = inttoptr i32 %v1_15054 to i32*
  %v3_15054 = load i32, i32* %v2_15054, align 4
  store i32 %v3_15054, i32* %r3.global-to-local, align 4
  store i32 %v1_15054, i32* %r1.global-to-local, align 4
  %v4_15058 = udiv i32 %v3_15054, 16777216
  %v5_15058 = or i32 %v4_15058, %v3_15050
  store i32 %v5_15058, i32* @ip, align 4
  %v2_1505c = add i32 %v1_1505c, -4
  %v3_1505c = inttoptr i32 %v2_1505c to i32*
  store i32 %v5_15058, i32* %v3_1505c, align 4
  %v4_1505c = load i32, i32* %r0.global-to-local, align 4
  %v5_1505c = add i32 %v4_1505c, -4
  store i32 %v5_1505c, i32* %r0.global-to-local, align 4
  %v0_15060 = load i32, i32* %r2.global-to-local, align 4
  %v2_15060 = add i32 %v0_15060, -4
  store i32 %v2_15060, i32* %r2.global-to-local, align 4
  %v6_15064 = icmp slt i32 %v0_15060, 4
  br i1 %v6_15064, label %dec_label_pc_15068.loopexit, label %dec_label_pc_15050

dec_label_pc_15068.loopexit:                      ; preds = %dec_label_pc_15050
  %v4_15060 = sub i32 3, %v0_15060
  %v5_15060 = and i32 %v4_15060, %v0_15060
  %v6_15060 = icmp slt i32 %v5_15060, 0
  %v7_15060 = icmp slt i32 %v2_15060, 0
  store i1 %v6_15060, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_15060, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_15068

dec_label_pc_15068:                               ; preds = %dec_label_pc_15068.loopexit, %dec_label_pc_15044
  %v2_14fac62 = phi i32 [ %v5_1505c, %dec_label_pc_15068.loopexit ], [ %v1_15038, %dec_label_pc_15044 ]
  %v0_14f9c58 = phi i32 [ %v2_15060, %dec_label_pc_15068.loopexit ], [ %v2_15048, %dec_label_pc_15044 ]
  %v0_15068 = load i32, i32* %r1.global-to-local, align 4
  %v1_15068 = add i32 %v0_15068, 3
  store i32 %v1_15068, i32* %r1.global-to-local, align 4
  br label %bb141

dec_label_pc_15070:                               ; preds = %dec_label_pc_15000
  br i1 %v5_150e0, label %dec_label_pc_150bc, label %dec_label_pc_15078

dec_label_pc_15078:                               ; preds = %dec_label_pc_15070
  store i32 %v2_150dc, i32* %r2.global-to-local, align 4
  %v3_1507c = load i32, i32* @r4, align 4
  store i32 %v3_1507c, i32* %stack_var_-12, align 4
  %v6_1507c = load i32, i32* @r5, align 4
  store i32 %v6_1507c, i32* %stack_var_-8, align 4
  %v9_1507c = load i32, i32* @lr, align 4
  br label %dec_label_pc_15080

dec_label_pc_15080:                               ; preds = %dec_label_pc_15080.dec_label_pc_15080_crit_edge, %dec_label_pc_15078
  %v0_150a4 = phi i32 [ %v1_150a4, %dec_label_pc_15080.dec_label_pc_15080_crit_edge ], [ %v0_1503830, %dec_label_pc_15078 ]
  %v0_15084 = phi i32 [ %v0_15084.pre, %dec_label_pc_15080.dec_label_pc_15080_crit_edge ], [ %v1_14ff0, %dec_label_pc_15078 ]
  %v0_15080 = phi i32 [ %v0_15080.pre, %dec_label_pc_15080.dec_label_pc_15080_crit_edge ], [ %v2_14ff4, %dec_label_pc_15078 ]
  %v3_15080 = mul i32 %v0_15080, 65536
  store i32 %v3_15080, i32* %lr.global-to-local, align 4
  %v1_15084 = add i32 %v0_15084, -4
  %v2_15084 = inttoptr i32 %v1_15084 to i32*
  %v3_15084 = load i32, i32* %v2_15084, align 4
  store i32 %v3_15084, i32* %r3.global-to-local, align 4
  %v4_15084 = add i32 %v0_15084, -8
  %v5_15084 = inttoptr i32 %v4_15084 to i32*
  %v6_15084 = load i32, i32* %v5_15084, align 4
  store i32 %v6_15084, i32* %r4.global-to-local, align 4
  %v7_15084 = add i32 %v0_15084, -12
  %v8_15084 = inttoptr i32 %v7_15084 to i32*
  %v9_15084 = load i32, i32* %v8_15084, align 4
  store i32 %v9_15084, i32* %r5.global-to-local, align 4
  %v10_15084 = add i32 %v0_15084, -16
  %v11_15084 = inttoptr i32 %v10_15084 to i32*
  %v12_15084 = load i32, i32* %v11_15084, align 4
  store i32 %v10_15084, i32* %r1.global-to-local, align 4
  %v4_15088 = udiv i32 %v12_15084, 65536
  %v5_15088 = or i32 %v4_15088, %v3_15080
  store i32 %v5_15088, i32* %lr.global-to-local, align 4
  %v3_1508c = mul i32 %v12_15084, 65536
  %v4_15090 = udiv i32 %v9_15084, 65536
  %v5_15090 = or i32 %v3_1508c, %v4_15090
  store i32 %v5_15090, i32* @ip, align 4
  %v3_15094 = mul i32 %v9_15084, 65536
  %v4_15098 = udiv i32 %v6_15084, 65536
  %v5_15098 = or i32 %v3_15094, %v4_15098
  store i32 %v5_15098, i32* %r5.global-to-local, align 4
  %v3_1509c = mul i32 %v6_15084, 65536
  %v4_150a0 = udiv i32 %v3_15084, 65536
  %v5_150a0 = or i32 %v3_1509c, %v4_150a0
  store i32 %v5_150a0, i32* %r4.global-to-local, align 4
  %v1_150a4 = add i32 %v0_150a4, -16
  %v2_150a4 = inttoptr i32 %v1_150a4 to i32*
  store i32 %v5_150a0, i32* %v2_150a4, align 4
  %v4_150a4 = add i32 %v0_150a4, -12
  %v5_150a4 = inttoptr i32 %v4_150a4 to i32*
  %v6_150a4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_150a4, i32* %v5_150a4, align 4
  %v7_150a4 = add i32 %v0_150a4, -8
  %v8_150a4 = inttoptr i32 %v7_150a4 to i32*
  %v9_150a4 = load i32, i32* @ip, align 4
  store i32 %v9_150a4, i32* %v8_150a4, align 4
  %v10_150a4 = add i32 %v0_150a4, -4
  %v11_150a4 = inttoptr i32 %v10_150a4 to i32*
  %v12_150a4 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_150a4, i32* %v11_150a4, align 4
  store i32 %v1_150a4, i32* %r0.global-to-local, align 4
  %v0_150a8 = load i32, i32* %r2.global-to-local, align 4
  %v2_150a8 = add i32 %v0_150a8, -16
  store i32 %v2_150a8, i32* %r2.global-to-local, align 4
  %v6_150ac = icmp slt i32 %v0_150a8, 16
  br i1 %v6_150ac, label %dec_label_pc_150b0, label %dec_label_pc_15080.dec_label_pc_15080_crit_edge

dec_label_pc_15080.dec_label_pc_15080_crit_edge:  ; preds = %dec_label_pc_15080
  %v0_15080.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_15084.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15080

dec_label_pc_150b0:                               ; preds = %dec_label_pc_15080
  %v2_150b0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_150b0, i32* @r4, align 4
  %v5_150b0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v5_150b0, i32* @r5, align 4
  store i32 %v9_1507c, i32* @lr, align 4
  %v2_150b4 = add i32 %v0_150a8, -4
  store i32 %v2_150b4, i32* %r2.global-to-local, align 4
  %v4_150b4 = add i32 %v0_150a8, 2147483632
  %v5_150b4 = and i32 %v2_150b4, %v4_150b4
  %v6_150b4 = icmp slt i32 %v5_150b4, 0
  store i1 %v6_150b4, i1* %cpsr_v.global-to-local, align 1
  %v7_150b4 = icmp slt i32 %v2_150b4, 0
  store i1 %v7_150b4, i1* %cpsr_n.global-to-local, align 1
  %v8_150b4 = icmp eq i32 %v2_150b4, 0
  store i1 %v8_150b4, i1* %cpsr_z.global-to-local, align 1
  %v5_150b8 = icmp slt i32 %v2_150a8, -12
  br i1 %v5_150b8, label %dec_label_pc_150d4, label %dec_label_pc_150bc

dec_label_pc_150bc:                               ; preds = %dec_label_pc_150b0, %dec_label_pc_15070, %dec_label_pc_150bc
  %v1_150c8 = phi i32 [ %v5_150c8, %dec_label_pc_150bc ], [ %v1_150a4, %dec_label_pc_150b0 ], [ %v0_1503830, %dec_label_pc_15070 ]
  %v0_150bc = load i32, i32* %r3.global-to-local, align 4
  %v3_150bc = mul i32 %v0_150bc, 65536
  store i32 %v3_150bc, i32* %ip.global-to-local, align 4
  %v0_150c0 = load i32, i32* %r1.global-to-local, align 4
  %v1_150c0 = add i32 %v0_150c0, -4
  %v2_150c0 = inttoptr i32 %v1_150c0 to i32*
  %v3_150c0 = load i32, i32* %v2_150c0, align 4
  store i32 %v3_150c0, i32* %r3.global-to-local, align 4
  store i32 %v1_150c0, i32* %r1.global-to-local, align 4
  %v4_150c4 = udiv i32 %v3_150c0, 65536
  %v5_150c4 = or i32 %v4_150c4, %v3_150bc
  store i32 %v5_150c4, i32* @ip, align 4
  %v2_150c8 = add i32 %v1_150c8, -4
  %v3_150c8 = inttoptr i32 %v2_150c8 to i32*
  store i32 %v5_150c4, i32* %v3_150c8, align 4
  %v4_150c8 = load i32, i32* %r0.global-to-local, align 4
  %v5_150c8 = add i32 %v4_150c8, -4
  store i32 %v5_150c8, i32* %r0.global-to-local, align 4
  %v0_150cc = load i32, i32* %r2.global-to-local, align 4
  %v2_150cc = add i32 %v0_150cc, -4
  store i32 %v2_150cc, i32* %r2.global-to-local, align 4
  %v6_150d0 = icmp slt i32 %v0_150cc, 4
  br i1 %v6_150d0, label %dec_label_pc_150d4.loopexit, label %dec_label_pc_150bc

dec_label_pc_150d4.loopexit:                      ; preds = %dec_label_pc_150bc
  %v4_150cc = sub i32 3, %v0_150cc
  %v5_150cc = and i32 %v4_150cc, %v0_150cc
  %v6_150cc = icmp slt i32 %v5_150cc, 0
  %v7_150cc = icmp slt i32 %v2_150cc, 0
  store i1 %v6_150cc, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_150cc, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_150d4

dec_label_pc_150d4:                               ; preds = %dec_label_pc_150d4.loopexit, %dec_label_pc_150b0
  %v2_14fac63 = phi i32 [ %v5_150c8, %dec_label_pc_150d4.loopexit ], [ %v1_150a4, %dec_label_pc_150b0 ]
  %v0_14f9c59 = phi i32 [ %v2_150cc, %dec_label_pc_150d4.loopexit ], [ %v2_150b4, %dec_label_pc_150b0 ]
  %v0_150d4 = load i32, i32* %r1.global-to-local, align 4
  %v1_150d4 = add i32 %v0_150d4, 2
  store i32 %v1_150d4, i32* %r1.global-to-local, align 4
  br label %bb141

dec_label_pc_150dc:                               ; preds = %dec_label_pc_14ff0
  br i1 %v5_150e0, label %dec_label_pc_15128, label %dec_label_pc_150e4

dec_label_pc_150e4:                               ; preds = %dec_label_pc_150dc
  store i32 %v2_150dc, i32* %r2.global-to-local, align 4
  %v3_150e8 = load i32, i32* @r4, align 4
  store i32 %v3_150e8, i32* %stack_var_-12, align 4
  %v6_150e8 = load i32, i32* @r5, align 4
  store i32 %v6_150e8, i32* %stack_var_-8, align 4
  %v9_150e8 = load i32, i32* @lr, align 4
  br label %dec_label_pc_150ec

dec_label_pc_150ec:                               ; preds = %dec_label_pc_150ec.dec_label_pc_150ec_crit_edge, %dec_label_pc_150e4
  %v0_15110 = phi i32 [ %v1_15110, %dec_label_pc_150ec.dec_label_pc_150ec_crit_edge ], [ %v0_1503830, %dec_label_pc_150e4 ]
  %v0_150f0 = phi i32 [ %v0_150f0.pre, %dec_label_pc_150ec.dec_label_pc_150ec_crit_edge ], [ %v1_14ff0, %dec_label_pc_150e4 ]
  %v0_150ec = phi i32 [ %v0_150ec.pre, %dec_label_pc_150ec.dec_label_pc_150ec_crit_edge ], [ %v2_14ff4, %dec_label_pc_150e4 ]
  %v3_150ec = mul i32 %v0_150ec, 16777216
  store i32 %v3_150ec, i32* %lr.global-to-local, align 4
  %v1_150f0 = add i32 %v0_150f0, -4
  %v2_150f0 = inttoptr i32 %v1_150f0 to i32*
  %v3_150f0 = load i32, i32* %v2_150f0, align 4
  store i32 %v3_150f0, i32* %r3.global-to-local, align 4
  %v4_150f0 = add i32 %v0_150f0, -8
  %v5_150f0 = inttoptr i32 %v4_150f0 to i32*
  %v6_150f0 = load i32, i32* %v5_150f0, align 4
  store i32 %v6_150f0, i32* %r4.global-to-local, align 4
  %v7_150f0 = add i32 %v0_150f0, -12
  %v8_150f0 = inttoptr i32 %v7_150f0 to i32*
  %v9_150f0 = load i32, i32* %v8_150f0, align 4
  store i32 %v9_150f0, i32* %r5.global-to-local, align 4
  %v10_150f0 = add i32 %v0_150f0, -16
  %v11_150f0 = inttoptr i32 %v10_150f0 to i32*
  %v12_150f0 = load i32, i32* %v11_150f0, align 4
  store i32 %v10_150f0, i32* %r1.global-to-local, align 4
  %v4_150f4 = udiv i32 %v12_150f0, 256
  %v5_150f4 = or i32 %v4_150f4, %v3_150ec
  store i32 %v5_150f4, i32* %lr.global-to-local, align 4
  %v3_150f8 = mul i32 %v12_150f0, 16777216
  %v4_150fc = udiv i32 %v9_150f0, 256
  %v5_150fc = or i32 %v3_150f8, %v4_150fc
  store i32 %v5_150fc, i32* @ip, align 4
  %v3_15100 = mul i32 %v9_150f0, 16777216
  %v4_15104 = udiv i32 %v6_150f0, 256
  %v5_15104 = or i32 %v3_15100, %v4_15104
  store i32 %v5_15104, i32* %r5.global-to-local, align 4
  %v3_15108 = mul i32 %v6_150f0, 16777216
  %v4_1510c = udiv i32 %v3_150f0, 256
  %v5_1510c = or i32 %v3_15108, %v4_1510c
  store i32 %v5_1510c, i32* %r4.global-to-local, align 4
  %v1_15110 = add i32 %v0_15110, -16
  %v2_15110 = inttoptr i32 %v1_15110 to i32*
  store i32 %v5_1510c, i32* %v2_15110, align 4
  %v4_15110 = add i32 %v0_15110, -12
  %v5_15110 = inttoptr i32 %v4_15110 to i32*
  %v6_15110 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_15110, i32* %v5_15110, align 4
  %v7_15110 = add i32 %v0_15110, -8
  %v8_15110 = inttoptr i32 %v7_15110 to i32*
  %v9_15110 = load i32, i32* @ip, align 4
  store i32 %v9_15110, i32* %v8_15110, align 4
  %v10_15110 = add i32 %v0_15110, -4
  %v11_15110 = inttoptr i32 %v10_15110 to i32*
  %v12_15110 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_15110, i32* %v11_15110, align 4
  store i32 %v1_15110, i32* %r0.global-to-local, align 4
  %v0_15114 = load i32, i32* %r2.global-to-local, align 4
  %v2_15114 = add i32 %v0_15114, -16
  store i32 %v2_15114, i32* %r2.global-to-local, align 4
  %v6_15118 = icmp slt i32 %v0_15114, 16
  br i1 %v6_15118, label %dec_label_pc_1511c, label %dec_label_pc_150ec.dec_label_pc_150ec_crit_edge

dec_label_pc_150ec.dec_label_pc_150ec_crit_edge:  ; preds = %dec_label_pc_150ec
  %v0_150ec.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_150f0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_150ec

dec_label_pc_1511c:                               ; preds = %dec_label_pc_150ec
  %v2_1511c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1511c, i32* @r4, align 4
  %v5_1511c = load i32, i32* %stack_var_-8, align 4
  store i32 %v5_1511c, i32* @r5, align 4
  store i32 %v9_150e8, i32* @lr, align 4
  %v2_15120 = add i32 %v0_15114, -4
  store i32 %v2_15120, i32* %r2.global-to-local, align 4
  %v4_15120 = add i32 %v0_15114, 2147483632
  %v5_15120 = and i32 %v2_15120, %v4_15120
  %v6_15120 = icmp slt i32 %v5_15120, 0
  store i1 %v6_15120, i1* %cpsr_v.global-to-local, align 1
  %v7_15120 = icmp slt i32 %v2_15120, 0
  store i1 %v7_15120, i1* %cpsr_n.global-to-local, align 1
  %v8_15120 = icmp eq i32 %v2_15120, 0
  store i1 %v8_15120, i1* %cpsr_z.global-to-local, align 1
  %v5_15124 = icmp slt i32 %v2_15114, -12
  br i1 %v5_15124, label %dec_label_pc_15140, label %dec_label_pc_15128

dec_label_pc_15128:                               ; preds = %dec_label_pc_1511c, %dec_label_pc_150dc, %dec_label_pc_15128
  %v1_15134 = phi i32 [ %v5_15134, %dec_label_pc_15128 ], [ %v1_15110, %dec_label_pc_1511c ], [ %v0_1503830, %dec_label_pc_150dc ]
  %v0_15128 = load i32, i32* %r3.global-to-local, align 4
  %v3_15128 = mul i32 %v0_15128, 16777216
  store i32 %v3_15128, i32* %ip.global-to-local, align 4
  %v0_1512c = load i32, i32* %r1.global-to-local, align 4
  %v1_1512c = add i32 %v0_1512c, -4
  %v2_1512c = inttoptr i32 %v1_1512c to i32*
  %v3_1512c = load i32, i32* %v2_1512c, align 4
  store i32 %v3_1512c, i32* %r3.global-to-local, align 4
  store i32 %v1_1512c, i32* %r1.global-to-local, align 4
  %v4_15130 = udiv i32 %v3_1512c, 256
  %v5_15130 = or i32 %v4_15130, %v3_15128
  store i32 %v5_15130, i32* @ip, align 4
  %v2_15134 = add i32 %v1_15134, -4
  %v3_15134 = inttoptr i32 %v2_15134 to i32*
  store i32 %v5_15130, i32* %v3_15134, align 4
  %v4_15134 = load i32, i32* %r0.global-to-local, align 4
  %v5_15134 = add i32 %v4_15134, -4
  store i32 %v5_15134, i32* %r0.global-to-local, align 4
  %v0_15138 = load i32, i32* %r2.global-to-local, align 4
  %v2_15138 = add i32 %v0_15138, -4
  store i32 %v2_15138, i32* %r2.global-to-local, align 4
  %v6_1513c = icmp slt i32 %v0_15138, 4
  br i1 %v6_1513c, label %dec_label_pc_15140.loopexit, label %dec_label_pc_15128

dec_label_pc_15140.loopexit:                      ; preds = %dec_label_pc_15128
  %v4_15138 = sub i32 3, %v0_15138
  %v5_15138 = and i32 %v4_15138, %v0_15138
  %v6_15138 = icmp slt i32 %v5_15138, 0
  %v7_15138 = icmp slt i32 %v2_15138, 0
  store i1 %v6_15138, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_15138, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_15140

dec_label_pc_15140:                               ; preds = %dec_label_pc_15140.loopexit, %dec_label_pc_1511c
  %v2_14fac64 = phi i32 [ %v5_15134, %dec_label_pc_15140.loopexit ], [ %v1_15110, %dec_label_pc_1511c ]
  %v0_14f9c60 = phi i32 [ %v2_15138, %dec_label_pc_15140.loopexit ], [ %v2_15120, %dec_label_pc_1511c ]
  %v0_15140 = load i32, i32* %r1.global-to-local, align 4
  %v1_15140 = add i32 %v0_15140, 1
  store i32 %v1_15140, i32* %r1.global-to-local, align 4
  br label %bb141

; uselistorder directives
  uselistorder i32 %v5_15134, { 0, 2, 1 }
  uselistorder i32 %v3_15128, { 1, 0 }
  uselistorder i32 %v2_15120, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_15110, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_150f0, { 1, 0 }
  uselistorder i32 %v3_150ec, { 1, 0 }
  uselistorder i32 %v0_150f0, { 3, 2, 1, 0 }
  uselistorder i32 %v0_15110, { 3, 2, 1, 0 }
  uselistorder i32 %v5_150c8, { 0, 2, 1 }
  uselistorder i32 %v3_150bc, { 1, 0 }
  uselistorder i32 %v2_150b4, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_150a4, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_15084, { 1, 0 }
  uselistorder i32 %v3_15080, { 1, 0 }
  uselistorder i32 %v0_15084, { 3, 2, 1, 0 }
  uselistorder i32 %v0_150a4, { 3, 2, 1, 0 }
  uselistorder i32 %v5_1505c, { 0, 2, 1 }
  uselistorder i32 %v3_15050, { 1, 0 }
  uselistorder i32 %v2_15048, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_15038, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_15018, { 1, 0 }
  uselistorder i32 %v3_15014, { 1, 0 }
  uselistorder i32 %v0_15018, { 3, 2, 1, 0 }
  uselistorder i32 %v0_15038, { 3, 2, 1, 0 }
  uselistorder i1 %v5_150e0, { 2, 0, 1 }
  uselistorder i32 %v0_14ff8, { 1, 0 }
  uselistorder i32 %v0_150e4, { 4, 1, 0, 3, 2 }
  uselistorder i32 %v0_1503830, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_14fe8, { 2, 1, 0 }
  uselistorder i32 %v0_14fe8, { 2, 0, 1 }
  uselistorder i32 %v2_14fe0, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_14fe0, { 1, 2, 0, 3 }
  uselistorder i32 %v0_14fe0, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_1503831, { 2, 1, 0 }
  uselistorder i32 %v11_14fbc, { 1, 0 }
  uselistorder i32 %v7_14fbc, { 1, 0 }
  uselistorder i32 %v1_14f9c, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_14f9c, { 1, 2, 0, 3 }
  uselistorder i32 %v2_14fa0, { 1, 0 }
  uselistorder i32 %v7_14f94, { 0, 2, 1 }
  uselistorder i32 %v10_14f90, { 1, 0 }
  uselistorder i32 %v9_14f88, { 1, 0, 2 }
  uselistorder i32 %v6_14f84, { 1, 0 }
  uselistorder i32 %v2_14f7c, { 0, 2, 1, 3, 5, 6, 4, 7 }
  uselistorder i32 %v0_14f7c, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_14f8c, { 0, 3, 2, 1 }
  uselistorder i32 %v7_14f70, { 0, 2, 1 }
  uselistorder i32 %v13_14f6c, { 1, 0 }
  uselistorder i32 %v4_14f68, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_14f68, { 2, 0, 1 }
  uselistorder i32 %v6_14f70, { 0, 3, 2, 1 }
  uselistorder i32 %v7_14f60, { 0, 2, 1 }
  uselistorder i32 %v16_14f5c, { 1, 0 }
  uselistorder i32 %v4_14f58, { 1, 2, 0 }
  uselistorder i32 %v0_14f68.pr, { 1, 3, 0, 2 }
  uselistorder i32 %v6_14f60, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_14f4c, { 0, 3, 2, 1 }
  uselistorder i32 %v10_14f48, { 1, 0 }
  uselistorder i32 %v1_14f44, { 1, 0 }
  uselistorder i32 %v10_14f40, { 1, 0 }
  uselistorder i32 %v0_14f40, { 3, 2, 1, 0 }
  uselistorder i32 %v0_14f44, { 0, 1, 2, 3, 7, 6, 5, 4 }
  uselistorder i32 %v2_14f38, { 0, 2, 1 }
  uselistorder i32 %v2_14f2c, { 0, 2, 1, 3, 5, 4 }
  uselistorder i32 %v0_14f2c, { 1, 2, 6, 3, 0, 5, 4 }
  uselistorder i32 %v0_14f4448, { 1, 2, 0 }
  uselistorder i32 %v1_14f24, { 2, 1, 0 }
  uselistorder i32 %v1_14f1c, { 2, 3, 1, 0 }
  uselistorder i32 %v2_14f14, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v2_14f10, { 3, 4, 1, 2, 0, 5 }
  uselistorder i32 %v2_14f0c, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v1_14f0c, { 3, 4, 0, 6, 5, 1, 2 }
  uselistorder i32 %v4_14ef8, { 0, 2, 1 }
  uselistorder i32 %v3_14eec, { 1, 0 }
  uselistorder i32 %v2_14ee4, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v12_14ed4, { 1, 0, 3, 2 }
  uselistorder i32 %v8_14eb4, { 1, 0, 2 }
  uselistorder i32 %v5_14eb4, { 1, 0, 2 }
  uselistorder i32 %v2_14eb4, { 1, 0, 2 }
  uselistorder i32 %v3_14eb0, { 1, 0 }
  uselistorder i32 %v0_14eb4, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_14ed4, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v4_14e8c, { 0, 2, 1 }
  uselistorder i32 %v3_14e80, { 1, 0 }
  uselistorder i32 %v2_14e78, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v12_14e68, { 1, 0, 3, 2 }
  uselistorder i32 %v8_14e48, { 1, 0, 2 }
  uselistorder i32 %v5_14e48, { 1, 0, 2 }
  uselistorder i32 %v2_14e48, { 1, 0, 2 }
  uselistorder i32 %v3_14e44, { 1, 0 }
  uselistorder i32 %v0_14e48, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_14e68, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v4_14e20, { 0, 2, 1 }
  uselistorder i32 %v3_14e14, { 1, 0 }
  uselistorder i32 %v2_14e0c, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v12_14dfc, { 1, 0, 3, 2 }
  uselistorder i32 %v8_14ddc, { 1, 0, 2 }
  uselistorder i32 %v5_14ddc, { 1, 0, 2 }
  uselistorder i32 %v2_14ddc, { 1, 0, 2 }
  uselistorder i32 %v3_14dd8, { 1, 0 }
  uselistorder i32 %v0_14ddc, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_14dfc, { 4, 3, 2, 1, 0 }
  uselistorder i1 %v5_14ea4, { 2, 0, 1 }
  uselistorder i32 %v0_14ea8, { 4, 1, 0, 3, 2 }
  uselistorder i32 %v0_14dfc74, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_14dac, { 1, 0 }
  uselistorder i32 %v0_14dac, { 3, 1, 0, 2 }
  uselistorder i32 %v2_14da4, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_14da4, { 1, 2, 0, 3 }
  uselistorder i32 %v0_14da4, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_14dfc75, { 2, 1, 0 }
  uselistorder i32 %v1_14d84, { 1, 0, 2 }
  uselistorder i32 %v1_14d5c, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_14d5c, { 1, 2, 0, 3 }
  uselistorder i32 %v8_14d48, { 1, 0, 2 }
  uselistorder i32 %v6_14d44, { 1, 0 }
  uselistorder i32 %v2_14d3c, { 0, 2, 1, 3, 5, 6, 4, 7 }
  uselistorder i32 %v0_14d3c, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_14d4c, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v4_14d34, { 0, 2, 1 }
  uselistorder i32 %v3_14d34, { 3, 0, 1, 2 }
  uselistorder i1 %v0_14d34, { 1, 0 }
  uselistorder i1 %v1_14d34, { 1, 0 }
  uselistorder i32 %v3_14d30, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_14d28, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v4_14d14, { 1, 2, 0 }
  uselistorder i32 %v12_14d08, { 0, 1, 3, 2 }
  uselistorder i32 %v0_14cfc, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_14d00, { 0, 1, 2, 3, 4, 5, 6, 7, 12, 11, 10, 9, 8 }
  uselistorder i32 %v2_14cf0, { 0, 2, 1 }
  uselistorder i32 %v2_14ce8, { 0, 2, 1, 3, 5, 4 }
  uselistorder i32 %v0_14ce8, { 1, 2, 6, 3, 0, 5, 4 }
  uselistorder i32 %v1_14ce0, { 1, 0 }
  uselistorder i32 %v1_14cd8, { 2, 1, 0 }
  uselistorder i32 %v2_14cd0, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v0_14cd0, { 1, 4, 0, 2, 3 }
  uselistorder i32 %v2_14cc0, { 1, 0 }
  uselistorder i32 %v1_14cc0, { 1, 5, 6, 3, 4, 0, 7, 9, 2, 8, 10 }
  uselistorder i32 %v0_14cc0, { 1, 7, 9, 8, 6, 4, 0, 5, 11, 2, 3, 10, 12 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 15, 16, 17, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 25, 26, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* %r3.global-to-local, { 0, 37, 1, 2, 3, 38, 4, 5, 6, 39, 35, 36, 40, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34 }
  uselistorder i32* %r2.global-to-local, { 0, 27, 1, 2, 3, 4, 5, 28, 6, 7, 8, 9, 10, 67, 68, 69, 70, 71, 11, 29, 12, 13, 15, 14, 16, 17, 18, 19, 20, 21, 23, 22, 24, 25, 26, 30, 31, 62, 32, 33, 34, 35, 36, 63, 37, 38, 39, 40, 41, 64, 42, 43, 44, 45, 46, 65, 47, 48, 50, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 66 }
  uselistorder i32* %r1.global-to-local, { 1, 3, 0, 12, 2, 4, 6, 8, 5, 13, 7, 9, 11, 65, 10, 64, 63, 66, 14, 19, 15, 16, 17, 18, 20, 21, 23, 22, 24, 25, 34, 26, 27, 35, 28, 36, 29, 37, 30, 31, 32, 33, 38, 41, 39, 51, 40, 42, 45, 43, 52, 44, 46, 49, 47, 53, 48, 50, 54, 55, 56, 58, 57, 59, 60, 61, 62 }
  uselistorder i32* %r0.global-to-local, { 0, 21, 1, 2, 22, 3, 4, 34, 36, 5, 6, 7, 8, 9, 23, 10, 12, 11, 13, 14, 35, 15, 16, 24, 17, 18, 19, 20, 25, 26, 27, 29, 28, 30, 31, 32, 33 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 5, 16, 17, 18, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i1* %cpsr_z.global-to-local, { 6, 7, 4, 9, 5, 45, 8, 46, 10, 11, 12, 13, 14, 15, 16, 17, 18, 3, 19, 20, 21, 22, 23, 0, 24, 1, 26, 2, 27, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44 }
  uselistorder i1* %cpsr_v.global-to-local, { 4, 7, 5, 9, 6, 42, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 3, 20, 21, 22, 0, 23, 1, 25, 2, 26, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41 }
  uselistorder i1* %cpsr_n.global-to-local, { 4, 7, 5, 9, 6, 47, 8, 48, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 3, 20, 21, 22, 23, 24, 0, 25, 1, 27, 2, 28, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46 }
  uselistorder i32 31, { 20, 22, 1, 0, 12, 14, 13, 15, 2, 6, 17, 23, 24, 25, 26, 21, 16, 7, 18, 19, 8, 9, 3, 10, 4, 5, 11 }
  uselistorder i32 -20, { 1, 0 }
  uselistorder i32 -2, { 12, 13, 11, 17, 0, 15, 1, 16, 2, 3, 10, 8, 9, 7, 6, 5, 4, 18, 19, 20, 21, 14 }
  uselistorder i32 65536, { 10, 9, 15, 11, 16, 12, 17, 13, 18, 14, 19, 20, 21, 25, 22, 26, 23, 27, 24, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 59, 61, 1, 62, 63, 2, 64, 0, 3, 65, 66, 67, 68, 69, 72, 70, 71, 73, 74, 4, 75, 78, 79, 76, 80, 77, 81, 82, 83, 84, 85, 149, 87, 86, 150, 89, 88, 90, 92, 91, 94, 93, 151, 96, 95, 152, 98, 97, 99, 101, 100, 103, 102, 104, 105, 109, 110, 111, 112, 106, 107, 108, 113, 116, 117, 118, 114, 115, 119, 5, 120, 122, 123, 124, 121, 125, 6, 126, 130, 131, 132, 127, 128, 129, 133, 134, 135, 137, 136, 138, 7, 139, 141, 142, 140, 143, 8, 144, 146, 147, 145, 148 }
  uselistorder i32 2147483632, { 3, 4, 5, 0, 1, 2, 6 }
  uselistorder i32 16777216, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 42, 44, 45, 47, 46, 52, 48, 53, 49, 51, 50, 54, 57, 55, 58, 56, 60, 59, 62, 61, 64, 63, 65, 66, 67, 68, 71, 69, 72, 70, 73, 74, 76, 75, 82, 77, 83, 78, 84, 79, 85, 80, 86, 81, 87, 90, 91, 88, 89, 92, 93, 97, 94, 98, 95, 96, 99, 102, 103, 100, 101, 104, 105, 109, 106, 110, 107, 108, 111, 119, 112, 120, 113, 121, 114, 122, 123, 115, 124, 116, 125, 117, 126, 118, 130, 127, 131, 128, 132, 129, 133, 140, 134, 141, 142, 135, 143, 138, 144, 136, 145, 146, 137, 139, 147, 148, 152, 149, 153, 154, 150, 151, 155, 156, 157, 161, 158, 162, 159, 163, 160, 164, 165, 166, 171, 167, 172, 168, 173, 169, 174, 170, 175, 176, 177, 178, 179, 180, 182, 181, 183 }
  uselistorder i32* @r5, { 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 203, 204, 205, 206, 207, 208, 209, 210, 211, 215, 212, 213, 214, 216, 644, 645, 646, 647, 648, 0, 649, 650, 651, 652, 653, 654, 655, 371, 372, 373, 374, 375, 376, 554, 555, 556, 557, 558, 559, 560, 567, 561, 562, 563, 564, 565, 566, 603, 604, 605, 612, 613, 614, 615, 606, 607, 608, 609, 610, 611, 70, 71, 72, 217, 218, 5, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 41, 50, 131, 132, 133, 134, 135, 136, 16, 17, 18, 19, 20, 137, 21, 22, 46, 138, 139, 140, 4, 3, 141, 142, 42, 47, 13, 14, 15, 51, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 52, 53, 54, 55, 48, 49, 143, 144, 145, 146, 147, 56, 57, 148, 149, 10, 150, 151, 152, 153, 154, 155, 156, 157, 166, 167, 168, 158, 159, 160, 161, 162, 163, 164, 165, 6, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 380, 381, 382, 383, 384, 385, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 1, 187, 188, 7, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 2, 202, 230, 231, 232, 233, 234, 11, 235, 236, 237, 238, 239, 240, 241, 242, 12, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 8, 546, 547, 548, 549, 550, 551, 552, 553, 616, 617, 618, 619, 620, 621, 622, 623, 9, 624, 625, 626, 627, 628, 629, 630, 631, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 363, 364, 365, 366, 367, 368, 369, 370, 377, 378, 379 }
  uselistorder i32 -3, { 1, 2, 0, 3, 4, 5, 6, 7 }
  uselistorder i32 -5, { 1, 0 }
  uselistorder i32 11, { 7, 8, 9, 20, 21, 1, 0, 11, 12, 13, 14, 10, 15, 2, 16, 17, 18, 19, 22, 23, 24, 25, 3, 26, 27, 28, 4, 29, 30, 31, 5, 32, 33, 34, 6, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }
  uselistorder i32 -12, { 0, 12, 13, 1, 15, 16, 2, 17, 18, 14, 11, 10, 9, 8, 7, 19, 20, 21, 3, 4, 5, 22, 6, 23, 24 }
  uselistorder i32 48, { 0, 6, 7, 4, 5, 1, 8, 2, 3, 9 }
  uselistorder i32 40, { 1, 8, 2, 0, 3, 5, 6, 7, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder i32 36, { 1, 20, 21, 10, 11, 0, 2, 12, 3, 13, 4, 14, 5, 15, 6, 16, 7, 17, 18, 8, 19, 9 }
  uselistorder i32 -16, { 7, 8, 9, 10, 11, 12, 13, 14, 15, 6, 5, 4, 1, 16, 17, 18, 19, 20, 21, 3, 2, 0 }
  uselistorder i32 -32, { 1, 0, 2, 3 }
  uselistorder i32 24, { 0, 71, 72, 36, 37, 1, 73, 74, 34, 35, 65, 40, 41, 66, 42, 53, 57, 38, 39, 60, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 61, 56, 62, 58, 59, 67, 68, 69, 63, 64, 33, 70, 15, 16, 17, 18, 2, 19, 20, 3, 21, 4, 5, 6, 7, 8, 9, 10, 77, 22, 11, 78, 23, 24, 12, 79, 25, 80, 81, 82, 26, 27, 13, 83, 28, 84, 29, 30, 14, 85, 31, 86, 87, 75, 32, 76 }
  uselistorder i32* @lr, { 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 0, 102, 103, 104, 1, 105, 106, 107, 2, 108, 109, 110, 111, 112, 113, 114, 115, 19, 20, 116, 117, 118, 119, 120, 71, 72, 73, 74, 75, 76, 77, 78, 21, 22, 23, 24, 25, 6, 79, 4, 5, 80, 34, 35, 81, 45, 46, 47, 48, 49, 36, 37, 38, 39, 40, 7, 8, 9, 3, 14, 12, 13, 10, 11, 82, 83, 84, 85, 86, 87, 15, 16, 17, 18, 26, 27, 28, 29, 41, 42, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 88, 89, 90, 91, 30, 31, 32, 33 }
  uselistorder i32 16, { 32, 33, 34, 181, 35, 182, 183, 36, 184, 185, 37, 186, 187, 188, 189, 190, 191, 94, 95, 76, 77, 99, 96, 97, 98, 100, 26, 101, 102, 5, 6, 7, 8, 9, 25, 10, 11, 0, 12, 13, 48, 79, 49, 80, 38, 78, 81, 83, 84, 28, 27, 75, 85, 14, 15, 24, 72, 16, 86, 17, 50, 51, 82, 39, 87, 52, 88, 53, 89, 54, 90, 55, 91, 56, 92, 57, 93, 58, 59, 103, 104, 61, 105, 106, 107, 108, 109, 1, 60, 110, 111, 112, 63, 113, 114, 115, 116, 117, 2, 62, 118, 64, 119, 120, 121, 18, 122, 19, 123, 73, 20, 65, 66, 124, 125, 3, 41, 126, 40, 127, 67, 128, 129, 130, 21, 131, 22, 132, 74, 23, 68, 69, 133, 134, 4, 43, 135, 42, 136, 29, 138, 139, 140, 141, 70, 142, 143, 144, 145, 146, 147, 148, 149, 30, 150, 151, 152, 153, 155, 154, 156, 157, 158, 159, 160, 161, 162, 31, 163, 164, 165, 166, 167, 169, 168, 170, 171, 172, 173, 174, 175, 71, 176, 177, 178, 45, 179, 44, 47, 180, 46, 137 }
  uselistorder i32 20, { 117, 3, 118, 119, 0, 4, 120, 39, 40, 25, 26, 1, 41, 42, 43, 44, 17, 5, 27, 29, 6, 31, 7, 32, 33, 34, 35, 23, 24, 30, 18, 36, 28, 37, 38, 45, 46, 47, 8, 48, 49, 50, 51, 52, 53, 54, 55, 9, 56, 57, 58, 2, 59, 60, 61, 62, 19, 63, 64, 65, 66, 67, 68, 69, 70, 71, 20, 72, 73, 74, 75, 76, 77, 78, 80, 81, 10, 82, 83, 84, 85, 86, 87, 88, 11, 89, 90, 91, 92, 21, 22, 93, 13, 94, 12, 95, 96, 97, 98, 15, 99, 14, 100, 101, 102, 103, 104, 105, 106, 107, 16, 108, 109, 110, 111, 112, 113, 114, 115, 116, 79 }
  uselistorder i32 27, { 1, 0, 8, 2, 10, 6, 9, 3, 11, 4, 12, 5, 13, 7, 14 }
  uselistorder i32 -28, { 1, 2, 0 }
  uselistorder i32 7, { 20, 21, 23, 61, 63, 0, 15, 28, 3, 17, 24, 18, 25, 19, 26, 16, 27, 1, 22, 29, 30, 31, 4, 32, 33, 5, 34, 35, 6, 36, 37, 7, 38, 39, 40, 41, 8, 42, 43, 44, 45, 9, 46, 47, 48, 49, 50, 10, 51, 52, 53, 54, 55, 11, 56, 57, 58, 59, 12, 60, 13, 14, 2, 62 }
  uselistorder i32 -8, { 16, 17, 18, 19, 20, 21, 15, 14, 7, 13, 12, 11, 10, 22, 23, 24, 25, 8, 26, 0, 29, 9, 27, 28, 6, 1, 2, 3, 5, 4 }
  uselistorder i32* @ip, { 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 2, 3, 49, 1, 0, 4, 5 }
  uselistorder i1 false, { 92, 93, 94, 102, 86, 91, 103, 104, 88, 89, 90, 105, 85, 106, 107, 0, 97, 96, 98, 95, 1, 5, 4, 83, 100, 84, 82, 87, 101, 66, 67, 68, 69, 70, 65, 64, 63, 62, 2, 3, 71, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 72, 73, 74, 75, 76, 77, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 99, 78, 79, 81, 80, 108 }
  uselistorder i32 4, { 71, 62, 63, 5, 394, 64, 395, 49, 6, 7, 65, 396, 66, 397, 398, 399, 400, 67, 401, 402, 403, 404, 68, 405, 406, 407, 408, 409, 8, 410, 411, 412, 413, 414, 69, 415, 48, 416, 417, 418, 419, 420, 421, 9, 10, 70, 422, 230, 231, 172, 173, 232, 233, 234, 423, 424, 425, 426, 427, 118, 119, 120, 50, 121, 122, 375, 377, 376, 373, 374, 343, 344, 345, 346, 378, 379, 380, 381, 347, 348, 349, 382, 383, 123, 124, 125, 126, 127, 41, 11, 12, 235, 236, 237, 238, 239, 240, 13, 14, 56, 15, 16, 57, 384, 385, 169, 17, 18, 89, 72, 299, 289, 51, 201, 202, 203, 176, 177, 194, 195, 47, 46, 204, 174, 175, 178, 179, 91, 180, 181, 182, 92, 183, 93, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 90, 197, 198, 199, 196, 58, 205, 60, 52, 59, 206, 19, 207, 20, 208, 209, 21, 22, 210, 211, 42, 212, 43, 217, 170, 218, 94, 220, 95, 221, 222, 219, 200, 96, 213, 97, 214, 215, 216, 386, 223, 55, 54, 53, 224, 98, 23, 24, 25, 26, 27, 225, 44, 226, 45, 227, 228, 229, 241, 242, 128, 243, 244, 245, 246, 129, 130, 1, 247, 99, 248, 73, 249, 250, 251, 131, 252, 253, 132, 133, 2, 100, 254, 74, 255, 75, 256, 257, 134, 258, 259, 260, 261, 262, 135, 136, 263, 264, 102, 265, 3, 101, 266, 76, 267, 103, 268, 269, 137, 270, 271, 272, 273, 274, 138, 139, 275, 276, 105, 277, 4, 104, 278, 77, 279, 106, 280, 28, 290, 291, 140, 292, 293, 294, 141, 142, 108, 295, 107, 297, 78, 298, 300, 143, 301, 302, 144, 145, 303, 79, 304, 80, 305, 306, 307, 308, 146, 309, 310, 311, 147, 148, 110, 312, 109, 81, 313, 82, 314, 315, 316, 317, 318, 319, 112, 320, 113, 321, 149, 322, 323, 324, 150, 151, 114, 325, 111, 326, 83, 327, 84, 328, 329, 330, 152, 153, 331, 154, 332, 333, 155, 156, 115, 334, 85, 335, 86, 336, 337, 338, 339, 340, 116, 341, 87, 342, 387, 388, 389, 390, 117, 392, 88, 393, 157, 350, 351, 29, 158, 352, 353, 30, 159, 354, 355, 31, 160, 356, 357, 32, 161, 358, 359, 33, 162, 61, 360, 361, 34, 362, 163, 363, 364, 35, 164, 365, 366, 36, 165, 367, 368, 37, 166, 369, 370, 38, 167, 371, 372, 39, 391, 281, 282, 283, 284, 40, 285, 286, 0, 287, 168, 288, 296, 171 }
  uselistorder i32* @r2, { 64, 65, 26, 9, 27, 29, 28, 30, 31, 32, 33, 7, 66, 1, 67, 72, 73, 76, 68, 55, 59, 60, 63, 61, 62, 56, 57, 58, 54, 14, 0, 74, 2, 75, 5, 34, 35, 36, 8, 10, 69, 70, 71, 3, 37, 38, 39, 6, 22, 23, 24, 4, 40, 48, 51, 52, 49, 50, 53, 15, 11, 12, 13, 18, 19, 16, 17, 20, 21, 25, 41, 42, 43, 44, 45, 46, 47 }
  uselistorder label %dec_label_pc_15128, { 2, 0, 1 }
  uselistorder label %dec_label_pc_150bc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15050, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14ff0, { 1, 0 }
  uselistorder label %.thread25, { 2, 0, 1 }
  uselistorder label %.thread121, { 1, 0 }
  uselistorder label %bb141, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %dec_label_pc_14f7c, { 1, 0 }
  uselistorder label %.thread15, { 1, 0 }
  uselistorder label %.thread13, { 1, 0 }
  uselistorder label %dec_label_pc_14f40, { 1, 0 }
  uselistorder label %dec_label_pc_14f2c, { 1, 0 }
  uselistorder label %dec_label_pc_14eec, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14e80, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14e14, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14db4, { 1, 0 }
  uselistorder label %.thread11, { 2, 0, 1 }
  uselistorder label %.thread120, { 1, 0 }
  uselistorder label %.thread119, { 1, 0 }
  uselistorder label %bb131, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %.thread117, { 1, 0 }
  uselistorder label %dec_label_pc_14d28, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_14ce8, { 1, 0 }
}

define i32 @function_15148(i32 %arg1) local_unnamed_addr {
dec_label_pc_15148:
  ret i32 %arg1
}

define i32 @function_15150() local_unnamed_addr {
dec_label_pc_15150:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_15150 = load i32, i32* @r0, align 4
  %v2_15150 = icmp eq i32 %v0_15150, 0
  %v3_15154 = load i32, i32* @r4, align 4
  store i32 %v3_15154, i32* %stack_var_-20, align 4
  %v0_15158 = load i32, i32* @r1, align 4
  br i1 %v2_15150, label %dec_label_pc_15230, label %dec_label_pc_1516c.lr.ph

dec_label_pc_1516c:                               ; preds = %dec_label_pc_1516c.lr.ph, %dec_label_pc_151f0
  %v1_151f0 = phi i32 [ 0, %dec_label_pc_1516c.lr.ph ], [ %v5_151f0, %dec_label_pc_151f0 ]
  %v0_151f4 = phi i32 [ 1, %dec_label_pc_1516c.lr.ph ], [ %v1_151f4, %dec_label_pc_151f0 ]
  %v0_15174 = phi i32 [ %v0_15150, %dec_label_pc_1516c.lr.ph ], [ %v0_1517425, %dec_label_pc_151f0 ]
  %v1_15174 = inttoptr i32 %v0_15174 to i8*
  %v2_15174 = load i8, i8* %v1_15174, align 1
  %v3_15174 = zext i8 %v2_15174 to i32
  %v3_15178 = mul nuw nsw i32 %v3_15174, 2
  %v4_15178 = add i32 %v3_15178, %v2_15170.pre
  %v5_15178 = inttoptr i32 %v4_15178 to i8*
  %v6_15178 = load i8, i8* %v5_15178, align 1
  %v1_1517c = and i8 %v6_15178, 8
  %v2_1517c = icmp eq i8 %v1_1517c, 0
  br i1 %v2_1517c, label %dec_label_pc_15230, label %dec_label_pc_15184

dec_label_pc_15184:                               ; preds = %dec_label_pc_1516c
  br label %dec_label_pc_151a4

dec_label_pc_1518c:                               ; preds = %dec_label_pc_151a4
  %v3_15190 = mul i32 %v0_151f0, 10
  %v4_15190 = add i32 %v3_151a4, %v3_15190
  %v1_15194 = add i32 %v4_15190, -48
  %v8_1519c = icmp sgt i32 %v1_15194, 255
  br i1 %v8_1519c, label %dec_label_pc_15230, label %dec_label_pc_151a0

dec_label_pc_151a0:                               ; preds = %dec_label_pc_1518c
  %v1_151a0 = add i32 %v0_151e0, 1
  store i32 %v1_151a0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_151a4

dec_label_pc_151a4:                               ; preds = %dec_label_pc_15184, %dec_label_pc_151a0
  %v0_151f0 = phi i32 [ 0, %dec_label_pc_15184 ], [ %v1_15194, %dec_label_pc_151a0 ]
  %v0_151e0 = phi i32 [ %v0_15174, %dec_label_pc_15184 ], [ %v1_151a0, %dec_label_pc_151a0 ]
  %v1_151a4 = inttoptr i32 %v0_151e0 to i8*
  %v2_151a4 = load i8, i8* %v1_151a4, align 1
  %v3_151a4 = zext i8 %v2_151a4 to i32
  %v2_151a8 = mul nuw nsw i32 %v3_151a4, 2
  %v2_151ac = add i32 %v2_151a8, %v2_15170.pre
  %v3_151b0 = inttoptr i32 %v2_151ac to i8*
  %v4_151b0 = load i8, i8* %v3_151b0, align 1
  %v6_151b0 = zext i8 %v4_151b0 to i32
  %v1_151bc = and i32 %v6_151b0, 8
  %v2_151bc = icmp eq i32 %v1_151bc, 0
  br i1 %v2_151bc, label %dec_label_pc_151c4, label %dec_label_pc_1518c

dec_label_pc_151c4:                               ; preds = %dec_label_pc_151a4
  %v8_151c8 = icmp sgt i32 %v0_151f4, 3
  br i1 %v8_151c8, label %dec_label_pc_151dc, label %dec_label_pc_151cc

dec_label_pc_151cc:                               ; preds = %dec_label_pc_151c4
  %v7_151cc = icmp eq i8 %v2_151a4, 46
  br i1 %v7_151cc, label %dec_label_pc_151d4, label %dec_label_pc_15230

dec_label_pc_151d4:                               ; preds = %dec_label_pc_151cc
  %v1_151d4 = add i32 %v0_151e0, 1
  store i32 %v1_151d4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_151f0

dec_label_pc_151dc:                               ; preds = %dec_label_pc_151c4
  %v2_151dc = icmp eq i8 %v2_151a4, 0
  %v1_151e0 = add i32 %v0_151e0, 1
  store i32 %v1_151e0, i32* %r0.global-to-local, align 4
  br i1 %v2_151dc, label %dec_label_pc_151f0, label %dec_label_pc_151e8

dec_label_pc_151e8:                               ; preds = %dec_label_pc_151dc
  %v1_151e8 = and i32 %v6_151b0, 32
  %v2_151e8 = icmp eq i32 %v1_151e8, 0
  br i1 %v2_151e8, label %dec_label_pc_15230, label %dec_label_pc_151f0

dec_label_pc_151f0:                               ; preds = %dec_label_pc_151e8, %dec_label_pc_151dc, %dec_label_pc_151d4
  %v0_1517425 = phi i32 [ %v1_151e0, %dec_label_pc_151e8 ], [ %v1_151e0, %dec_label_pc_151dc ], [ %v1_151d4, %dec_label_pc_151d4 ]
  %v4_151f0 = mul i32 %v1_151f0, 256
  %v5_151f0 = or i32 %v0_151f0, %v4_151f0
  %v1_151f4 = add nuw nsw i32 %v0_151f4, 1
  %v7_151fc = icmp slt i32 %v1_151f4, 5
  br i1 %v7_151fc, label %dec_label_pc_1516c, label %dec_label_pc_15200

dec_label_pc_1516c.lr.ph:                         ; preds = %dec_label_pc_15150
  %v2_15170.pre = load i32, i32* bitcast (i32** @global_var_1d9bc.417 to i32*), align 4
  br label %dec_label_pc_1516c

dec_label_pc_15200:                               ; preds = %dec_label_pc_151f0
  %v2_15200 = icmp eq i32 %v0_15158, 0
  br i1 %v2_15200, label %bb, label %bb40

bb:                                               ; preds = %dec_label_pc_15200
  store i32 1, i32* %r0.global-to-local, align 4
  br label %.thread11

bb40:                                             ; preds = %dec_label_pc_15200
  %v3_1521c = call i32 @llvm.bswap.i32(i32 %v5_151f0)
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_15228 = inttoptr i32 %v0_15158 to i32*
  store i32 %v3_1521c, i32* %v3_15228, align 4
  %v2_1522c.pre = load i32, i32* %stack_var_-20, align 4
  %v17_1522c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread11

.thread11:                                        ; preds = %bb, %bb40
  %v17_1522c = phi i32 [ 1, %bb ], [ %v17_1522c.pre, %bb40 ]
  %v2_1522c = phi i32 [ %v3_15154, %bb ], [ %v2_1522c.pre, %bb40 ]
  store i32 %v2_1522c, i32* @r4, align 4
  ret i32 %v17_1522c

dec_label_pc_15230:                               ; preds = %dec_label_pc_151cc, %dec_label_pc_151e8, %dec_label_pc_1516c, %dec_label_pc_1518c, %dec_label_pc_15150
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v3_15154, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_15170.pre, { 1, 0 }
  uselistorder i32 %v1_151f4, { 1, 0 }
  uselistorder i32 %v0_151e0, { 0, 1, 3, 2 }
  uselistorder i32 %v3_15154, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 0, 5, 6, 1, 2, 3, 4 }
  uselistorder i32 (i32)* @llvm.bswap.i32, { 1, 2, 3, 0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder i32 5, { 16, 26, 17, 5, 18, 6, 2, 20, 27, 21, 28, 22, 29, 19, 30, 3, 0, 31, 25, 23, 24, 32, 33, 7, 34, 35, 36, 8, 37, 38, 39, 40, 9, 41, 42, 43, 44, 10, 45, 49, 50, 51, 52, 11, 53, 54, 55, 56, 12, 57, 58, 59, 60, 61, 62, 63, 13, 64, 65, 66, 67, 68, 69, 70, 14, 71, 72, 73, 74, 75, 76, 77, 78, 15, 79, 4, 80, 46, 1, 47, 48 }
  uselistorder i32 256, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 63, 64, 68, 71, 72, 73, 69, 70, 74, 75, 76, 77, 475, 476, 78, 79, 80, 81, 82, 83, 84, 478, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 99, 98, 101, 473, 479, 106, 102, 105, 103, 104, 477, 108, 107, 109, 110, 111, 114, 113, 112, 115, 117, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 132, 141, 137, 142, 138, 134, 135, 139, 136, 143, 144, 140, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 160, 159, 167, 162, 173, 174, 168, 163, 175, 176, 169, 164, 177, 170, 178, 171, 179, 172, 180, 165, 181, 166, 182, 183, 184, 185, 186, 187, 188, 191, 192, 195, 193, 189, 196, 194, 190, 199, 198, 197, 202, 203, 200, 204, 201, 205, 209, 206, 211, 210, 207, 208, 212, 471, 480, 213, 214, 215, 216, 217, 220, 218, 219, 222, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 238, 239, 242, 240, 236, 243, 241, 237, 246, 245, 244, 249, 250, 247, 251, 248, 252, 256, 253, 258, 257, 254, 255, 259, 472, 481, 260, 261, 262, 263, 264, 267, 265, 266, 269, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 286, 288, 289, 290, 294, 300, 295, 291, 296, 301, 297, 302, 298, 292, 303, 293, 304, 305, 299, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 316, 319, 322, 323, 321, 320, 324, 327, 326, 325, 334, 331, 335, 332, 328, 336, 333, 329, 330, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 347, 349, 350, 352, 351, 353, 354, 355, 356, 359, 366, 360, 361, 357, 362, 363, 364, 358, 367, 365, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 380, 382, 383, 384, 388, 395, 389, 390, 396, 391, 385, 386, 392, 387, 393, 397, 394, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 415, 417, 418, 419, 430, 425, 420, 431, 426, 432, 427, 433, 428, 421, 422, 423, 434, 435, 436, 437, 429, 424, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 449, 451, 452, 453, 454, 455, 456, 457, 459, 458, 460, 461, 462, 463, 464, 465, 467, 466, 468, 469, 470, 474 }
  uselistorder i32 32, { 51, 37, 38, 35, 47, 48, 41, 42, 46, 5, 4, 7, 6, 9, 8, 36, 34, 49, 50, 11, 10, 13, 12, 15, 14, 17, 16, 39, 43, 40, 19, 18, 20, 22, 21, 23, 24, 26, 25, 44, 45, 27, 0, 28, 1, 2, 3, 52, 53, 29, 54, 30, 31, 32, 33 }
  uselistorder i8 46, { 0, 2, 1 }
  uselistorder i32 3, { 42, 64, 65, 165, 66, 67, 68, 69, 70, 71, 76, 90, 166, 4, 158, 160, 161, 0, 72, 23, 73, 24, 162, 74, 43, 25, 29, 77, 46, 78, 2, 79, 80, 81, 82, 44, 5, 83, 75, 84, 47, 85, 26, 86, 27, 87, 28, 88, 45, 89, 48, 30, 49, 50, 51, 52, 1, 91, 92, 93, 94, 95, 96, 97, 7, 6, 53, 98, 31, 99, 100, 101, 102, 103, 9, 8, 54, 104, 32, 105, 106, 107, 108, 55, 109, 11, 10, 34, 110, 33, 111, 112, 113, 114, 56, 115, 13, 12, 36, 116, 35, 117, 57, 119, 120, 121, 122, 123, 124, 58, 125, 59, 126, 37, 127, 128, 129, 130, 131, 15, 14, 60, 38, 132, 133, 134, 135, 136, 137, 17, 16, 61, 138, 39, 139, 140, 141, 142, 143, 144, 145, 19, 18, 62, 146, 40, 147, 148, 149, 150, 151, 152, 153, 21, 20, 63, 154, 41, 155, 156, 157, 163, 164, 22, 159, 3, 118 }
  uselistorder i32 8, { 96, 133, 23, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 24, 150, 61, 62, 63, 64, 68, 65, 66, 67, 151, 129, 128, 126, 127, 115, 116, 117, 130, 131, 132, 118, 119, 120, 7, 27, 28, 25, 26, 17, 18, 20, 21, 29, 152, 69, 70, 71, 72, 8, 9, 44, 19, 10, 11, 16, 12, 35, 52, 30, 13, 14, 15, 45, 37, 48, 38, 49, 39, 50, 36, 51, 22, 53, 54, 55, 56, 58, 59, 46, 47, 43, 60, 57, 73, 74, 75, 3, 76, 77, 78, 4, 79, 80, 81, 82, 83, 84, 85, 5, 86, 87, 88, 89, 90, 91, 92, 6, 97, 31, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 121, 32, 122, 33, 123, 34, 124, 40, 125, 0, 1, 42, 93, 94, 41, 95, 2 }
  uselistorder i32 255, { 16, 20, 21, 17, 22, 18, 23, 24, 2, 19, 25, 4, 26, 3, 1, 5, 6, 27, 0, 28, 7, 10, 11, 9, 12, 8, 13, 14, 15 }
  uselistorder i32 10, { 10, 40, 41, 0, 3, 4, 23, 24, 42, 1, 25, 11, 28, 30, 12, 29, 13, 31, 14, 32, 6, 33, 34, 26, 27, 35, 22, 36, 37, 15, 5, 16, 17, 38, 18, 39, 8, 43, 44, 45, 46, 47, 48, 19, 49, 50, 51, 20, 52, 54, 55, 2, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 7, 69, 9, 70, 53, 21 }
  uselistorder i8 0, { 7, 0, 1, 20, 4, 21, 22, 2, 10, 23, 24, 25, 26, 27, 28, 29, 8, 30, 31, 32, 33, 34, 3, 5, 6, 11, 35, 36, 37, 38, 39, 17, 40, 43, 18, 41, 42, 16, 44, 45, 46, 47, 48, 12, 13, 9, 14, 49, 15, 19, 50, 51, 52, 53, 54, 55, 56, 57 }
  uselistorder i32 2, { 5, 142, 256, 257, 69, 258, 259, 59, 260, 58, 261, 57, 146, 84, 85, 204, 86, 205, 87, 206, 6, 143, 262, 63, 88, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 145, 16, 17, 18, 19, 20, 90, 91, 89, 60, 61, 92, 160, 93, 153, 80, 147, 79, 148, 78, 149, 77, 150, 76, 151, 75, 152, 74, 158, 154, 155, 156, 157, 70, 94, 161, 21, 22, 162, 163, 164, 95, 23, 24, 25, 26, 27, 165, 28, 29, 144, 166, 96, 167, 65, 64, 159, 30, 97, 253, 99, 168, 101, 169, 100, 170, 98, 102, 171, 31, 32, 103, 172, 71, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 62, 68, 173, 174, 175, 240, 241, 176, 177, 178, 179, 180, 181, 1, 33, 34, 35, 36, 37, 38, 114, 182, 81, 183, 184, 185, 186, 187, 2, 39, 40, 41, 42, 43, 44, 116, 115, 188, 189, 45, 190, 191, 66, 192, 118, 193, 3, 46, 47, 48, 49, 50, 119, 194, 117, 195, 196, 51, 197, 198, 67, 199, 121, 200, 4, 52, 53, 54, 55, 56, 122, 201, 120, 202, 207, 208, 209, 210, 211, 212, 213, 124, 214, 123, 215, 216, 217, 218, 219, 126, 125, 220, 221, 222, 223, 224, 225, 226, 227, 128, 228, 127, 229, 230, 231, 232, 130, 233, 131, 234, 235, 236, 237, 132, 238, 129, 239, 242, 243, 244, 245, 246, 247, 134, 248, 133, 249, 250, 135, 136, 82, 137, 251, 254, 138, 139, 83, 140, 255, 72, 252, 141, 73, 203 }
  uselistorder i32* @r1, { 49, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 1, 98, 99, 23, 24, 26, 25, 5, 7, 100, 0, 101, 47, 48, 18, 103, 66, 71, 72, 75, 73, 74, 67, 68, 69, 70, 65, 76, 102, 11, 6, 50, 27, 77, 28, 3, 78, 29, 30, 51, 52, 12, 8, 9, 10, 14, 13, 79, 15, 16, 17, 19, 20, 21, 22, 31, 32, 33, 4, 34, 60, 61, 2, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 80 }
  uselistorder label %dec_label_pc_15230, { 1, 0, 3, 2, 4 }
  uselistorder label %.thread11, { 1, 0 }
  uselistorder label %dec_label_pc_151a4, { 1, 0 }
}

define i32 @function_1523c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1523c:
  %v3_1523c = load i32, i32* @r4, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_15244 = call i32 @function_12af4()
  %v0_15248 = load i32, i32* @r4, align 4
  store i32 %v3_1523c, i32* @r4, align 4
  %v2_15250 = call i32 @function_12b9c(i32 %v0_15244, i32 %v0_15248)
  ret i32 %v2_15250

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_12b9c, { 5, 4, 1, 0, 3, 2 }
  uselistorder i32 ()* @function_12af4, { 0, 3, 1, 2 }
}

define i32 @function_15254(i32 %arg1) local_unnamed_addr {
dec_label_pc_15254:
  %v1_15254 = add i32 %arg1, 28
  %v2_15254 = inttoptr i32 %v1_15254 to i32*
  %v3_15254 = load i32, i32* %v2_15254, align 4
  %v1_1525c = add i32 %arg1, 44
  %v2_1525c = inttoptr i32 %v1_1525c to i32*
  %v3_1525c = load i32, i32* %v2_1525c, align 4
  store i32 %v3_15254, i32* @global_var_1dc38.470, align 4
  store i32 %v3_1525c, i32* @global_var_1dc3c.472, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 44, { 13, 0, 5, 6, 2, 3, 11, 12, 1, 4, 7, 8, 9, 10 }
  uselistorder i32 28, { 35, 0, 25, 26, 7, 8, 34, 1, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 2, 24, 6, 23, 3, 4, 5, 27, 28, 29, 30, 31, 32, 33 }
}

define i32 @function_15278(i32* %arg1) local_unnamed_addr {
dec_label_pc_15278:
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_15280 = call i32 @brk(i32* %arg1)
  %v3_15284 = icmp ult i32 %v2_15280, %tmp
  store i32 %v2_15280, i32* @global_var_1da78.467, align 4
  br i1 %v3_15284, label %dec_label_pc_15298, label %dec_label_pc_152a8

dec_label_pc_15298:                               ; preds = %dec_label_pc_15278
  %v0_15298 = call i32 @function_13070()
  %v2_152a0 = inttoptr i32 %v0_15298 to i32*
  store i32 12, i32* %v2_152a0, align 4
  br label %dec_label_pc_152a8

dec_label_pc_152a8:                               ; preds = %dec_label_pc_15278, %dec_label_pc_15298
  %v0_152a8 = phi i32 [ 0, %dec_label_pc_15278 ], [ -1, %dec_label_pc_15298 ]
  ret i32 %v0_152a8

; uselistorder directives
  uselistorder i32 12, { 15, 10, 109, 110, 111, 113, 114, 115, 116, 11, 112, 117, 118, 119, 120, 121, 122, 123, 56, 57, 24, 25, 58, 16, 17, 104, 105, 106, 0, 101, 107, 7, 108, 8, 102, 4, 103, 18, 19, 6, 59, 60, 20, 61, 62, 41, 33, 36, 42, 27, 43, 26, 28, 29, 30, 31, 32, 34, 37, 38, 35, 44, 45, 46, 9, 47, 48, 50, 51, 53, 52, 21, 54, 5, 55, 39, 40, 49, 97, 63, 64, 65, 66, 22, 67, 68, 69, 70, 71, 23, 72, 73, 74, 75, 76, 77, 12, 78, 79, 80, 81, 82, 83, 13, 84, 85, 14, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 1, 2, 3 }
  uselistorder i32 ()* @function_13070, { 21, 31, 27, 39, 12, 11, 10, 9, 38, 37, 36, 8, 57, 26, 25, 43, 42, 20, 13, 56, 55, 19, 2, 1, 18, 30, 54, 41, 53, 52, 17, 16, 35, 34, 33, 51, 40, 29, 7, 6, 50, 49, 32, 22, 48, 5, 15, 47, 24, 14, 23, 0, 4, 3, 46, 45, 44, 28 }
  uselistorder i32* @global_var_1da78.467, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_152a8, { 1, 0 }
}

define i32 @function_152b4(i32 %arg1) local_unnamed_addr {
dec_label_pc_152b4:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_152b8 = load i32, i32* @global_var_1d84c.430, align 4
  %v7_152bc = icmp eq i32 %v3_152b8, -1
  %v3_152c0 = load i32, i32* @r4, align 4
  store i32 %v3_152c0, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i32* @global_var_1d84c.430 to i32), i32* %r4.global-to-local, align 4
  br i1 %v7_152bc, label %bb, label %.preheader

bb:                                               ; preds = %dec_label_pc_152b4
  store i32 %v3_152c0, i32* %r4.global-to-local, align 4
  ret i32 %arg1

.preheader:                                       ; preds = %dec_label_pc_152b4, %.preheader
  %v0_152d0 = phi i32 [ %v3_152d4, %.preheader ], [ %v3_152b8, %dec_label_pc_152b4 ]
  call void @__pseudo_branch(i32 %v0_152d0)
  %v0_152d4 = load i32, i32* %r4.global-to-local, align 4
  %v1_152d4 = add i32 %v0_152d4, -4
  %v2_152d4 = inttoptr i32 %v1_152d4 to i32*
  %v3_152d4 = load i32, i32* %v2_152d4, align 4
  store i32 %v1_152d4, i32* %r4.global-to-local, align 4
  %v3_152d8 = icmp eq i32 %v3_152d4, -1
  br i1 %v3_152d8, label %dec_label_pc_152e0, label %.preheader

dec_label_pc_152e0:                               ; preds = %.preheader
  %v2_152e0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_152e0, i32* %r4.global-to-local, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v3_152d4, { 1, 0 }
  uselistorder i32 %v3_152b8, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32 -4, { 45, 16, 46, 47, 48, 3, 17, 18, 19, 49, 50, 51, 4, 20, 21, 22, 52, 53, 54, 5, 23, 24, 55, 15, 14, 56, 57, 58, 13, 12, 11, 10, 25, 26, 27, 28, 29, 0, 30, 1, 31, 2, 59, 9, 32, 36, 37, 43, 38, 33, 34, 39, 40, 41, 42, 44, 8, 7, 35, 6 }
  uselistorder i32 -1, { 155, 0, 97, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 156, 98, 233, 99, 272, 100, 263, 255, 101, 294, 102, 295, 103, 296, 104, 297, 144, 91, 256, 257, 105, 258, 259, 106, 298, 1, 157, 2, 107, 264, 265, 158, 159, 251, 252, 145, 160, 146, 161, 3, 4, 90, 82, 83, 162, 163, 164, 89, 234, 165, 235, 5, 6, 108, 273, 109, 269, 110, 270, 111, 274, 112, 261, 113, 236, 114, 253, 115, 237, 116, 238, 117, 275, 118, 276, 119, 166, 154, 120, 167, 121, 239, 122, 254, 123, 262, 124, 299, 300, 125, 240, 126, 241, 127, 260, 128, 268, 129, 242, 130, 301, 131, 277, 132, 243, 133, 266, 134, 278, 135, 267, 136, 271, 137, 302, 92, 303, 168, 169, 170, 171, 172, 173, 174, 175, 7, 8, 9, 10, 138, 139, 11, 176, 244, 17, 177, 178, 95, 96, 93, 94, 12, 179, 16, 180, 181, 182, 230, 231, 183, 184, 185, 228, 140, 229, 18, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 232, 14, 206, 13, 207, 208, 15, 209, 210, 211, 19, 212, 213, 141, 245, 214, 246, 84, 20, 85, 21, 22, 147, 247, 149, 248, 23, 148, 249, 24, 25, 26, 27, 150, 250, 28, 29, 30, 31, 215, 32, 86, 216, 33, 143, 34, 35, 36, 217, 37, 38, 39, 40, 41, 42, 43, 44, 45, 87, 46, 47, 48, 49, 50, 51, 218, 52, 53, 54, 219, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 220, 67, 142, 68, 69, 70, 221, 71, 72, 73, 222, 74, 75, 76, 223, 77, 78, 79, 80, 224, 225, 226, 227, 81, 88, 151, 152, 153 }
  uselistorder i32* @global_var_1d84c.430, { 1, 0 }
  uselistorder i32 1, { 589, 71, 376, 432, 974, 975, 976, 977, 978, 398, 590, 322, 1065, 383, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 593, 592, 591, 350, 351, 354, 353, 349, 348, 352, 346, 355, 347, 356, 594, 163, 162, 158, 160, 159, 161, 164, 157, 759, 155, 152, 154, 153, 595, 165, 596, 51, 52, 597, 156, 118, 598, 323, 599, 132, 600, 324, 601, 325, 894, 895, 602, 340, 336, 341, 337, 338, 342, 339, 896, 897, 898, 479, 145, 146, 142, 144, 143, 603, 328, 604, 107, 0, 608, 607, 606, 605, 47, 46, 480, 609, 166, 167, 399, 481, 610, 233, 611, 972, 616, 615, 614, 613, 612, 114, 115, 116, 117, 482, 617, 377, 872, 366, 873, 400, 618, 169, 175, 168, 172, 171, 174, 176, 170, 173, 1078, 401, 621, 620, 619, 321, 320, 622, 178, 179, 177, 180, 181, 182, 183, 184, 623, 225, 226, 224, 223, 222, 624, 625, 334, 333, 626, 402, 1052, 627, 282, 283, 483, 484, 372, 631, 630, 629, 628, 73, 74, 384, 632, 255, 633, 284, 119, 634, 285, 635, 281, 636, 50, 637, 306, 638, 187, 639, 185, 640, 186, 641, 197, 642, 979, 361, 200, 199, 198, 760, 761, 762, 763, 764, 765, 766, 1079, 191, 192, 188, 189, 190, 643, 485, 486, 644, 195, 194, 196, 193, 438, 899, 645, 48, 439, 647, 646, 308, 307, 648, 201, 649, 202, 650, 207, 651, 203, 204, 652, 149, 653, 318, 654, 205, 655, 206, 656, 141, 221, 657, 256, 658, 246, 659, 330, 660, 329, 661, 335, 662, 257, 319, 49, 440, 790, 791, 441, 1053, 1054, 360, 1055, 900, 901, 902, 367, 903, 665, 664, 663, 220, 217, 213, 214, 216, 215, 212, 218, 219, 1, 874, 875, 876, 877, 385, 980, 981, 386, 982, 667, 666, 327, 326, 904, 905, 906, 487, 668, 211, 210, 209, 208, 1056, 403, 404, 2, 478, 1057, 669, 262, 260, 263, 264, 261, 787, 789, 788, 488, 907, 332, 331, 1023, 108, 908, 909, 910, 258, 259, 983, 670, 133, 134, 135, 136, 1008, 1009, 671, 112, 111, 110, 109, 113, 984, 985, 672, 95, 94, 93, 92, 96, 504, 792, 778, 779, 784, 502, 767, 768, 503, 769, 498, 770, 771, 499, 500, 772, 773, 501, 496, 774, 775, 497, 494, 776, 777, 495, 492, 780, 781, 493, 490, 782, 783, 491, 489, 785, 786, 793, 505, 373, 794, 442, 795, 797, 798, 796, 799, 506, 800, 757, 405, 803, 801, 507, 802, 406, 804, 806, 807, 508, 808, 378, 33, 809, 32, 810, 31, 811, 30, 812, 29, 813, 28, 814, 27, 815, 26, 816, 25, 817, 24, 818, 23, 819, 407, 820, 34, 821, 22, 822, 21, 823, 408, 824, 35, 825, 20, 826, 19, 827, 18, 828, 17, 829, 16, 830, 15, 831, 36, 832, 37, 833, 38, 834, 14, 835, 409, 836, 13, 837, 410, 838, 12, 839, 11, 840, 411, 841, 10, 842, 39, 843, 9, 844, 8, 845, 412, 846, 413, 847, 7, 848, 6, 849, 5, 850, 4, 851, 414, 852, 3, 853, 40, 854, 415, 855, 416, 856, 374, 417, 857, 375, 418, 419, 420, 758, 421, 858, 422, 423, 424, 864, 865, 368, 509, 684, 683, 682, 681, 680, 679, 678, 677, 676, 675, 674, 673, 296, 294, 300, 301, 295, 303, 302, 298, 299, 297, 304, 305, 859, 860, 510, 861, 862, 511, 863, 685, 254, 253, 248, 252, 251, 250, 247, 249, 513, 514, 512, 443, 369, 515, 583, 688, 687, 686, 805, 516, 690, 689, 344, 345, 343, 1059, 387, 1058, 433, 691, 269, 270, 268, 267, 266, 272, 273, 265, 271, 986, 693, 692, 229, 230, 232, 228, 227, 231, 694, 445, 866, 867, 444, 868, 517, 519, 518, 520, 869, 870, 521, 522, 523, 524, 525, 526, 527, 528, 705, 704, 703, 702, 701, 700, 699, 698, 697, 588, 696, 695, 137, 138, 140, 139, 529, 370, 530, 706, 446, 871, 531, 532, 707, 533, 878, 426, 879, 880, 534, 425, 881, 535, 882, 536, 883, 537, 884, 538, 885, 539, 886, 540, 887, 541, 888, 542, 889, 543, 890, 544, 891, 545, 892, 546, 893, 371, 547, 723, 722, 721, 720, 719, 718, 717, 716, 715, 714, 713, 712, 711, 710, 709, 708, 83, 84, 85, 86, 87, 916, 42, 911, 548, 912, 41, 913, 434, 914, 379, 380, 915, 917, 435, 918, 727, 726, 725, 584, 585, 724, 1032, 447, 1033, 448, 1034, 43, 1035, 44, 45, 919, 920, 921, 922, 923, 924, 549, 925, 388, 550, 551, 926, 449, 927, 728, 99, 97, 98, 103, 104, 106, 105, 101, 102, 100, 928, 929, 427, 930, 931, 932, 552, 933, 389, 553, 451, 450, 554, 934, 555, 935, 729, 129, 130, 131, 128, 127, 936, 937, 428, 938, 939, 940, 556, 941, 390, 557, 456, 455, 558, 942, 452, 943, 453, 944, 454, 945, 734, 733, 732, 731, 730, 278, 277, 279, 280, 274, 276, 275, 946, 947, 429, 948, 949, 950, 559, 951, 391, 560, 464, 463, 561, 952, 462, 953, 457, 954, 458, 955, 459, 956, 460, 957, 562, 958, 461, 959, 739, 738, 737, 736, 735, 122, 123, 125, 124, 120, 121, 126, 987, 988, 989, 990, 991, 992, 381, 382, 993, 994, 995, 996, 997, 998, 999, 1000, 563, 1001, 1002, 564, 1003, 1006, 1004, 1005, 742, 741, 740, 235, 239, 238, 234, 242, 243, 245, 244, 236, 241, 240, 237, 1010, 1011, 1012, 1013, 1014, 565, 392, 566, 744, 743, 317, 313, 309, 310, 315, 316, 314, 311, 312, 1015, 1016, 1017, 430, 1018, 1019, 1020, 393, 567, 467, 466, 568, 1021, 465, 1022, 745, 288, 287, 290, 291, 293, 292, 286, 289, 1024, 1025, 1026, 431, 1027, 1028, 1029, 394, 569, 470, 469, 570, 1030, 468, 1031, 750, 749, 748, 747, 746, 53, 54, 55, 59, 60, 62, 61, 57, 56, 58, 1036, 1037, 1038, 571, 1039, 1040, 1041, 1042, 1043, 1044, 572, 1045, 395, 573, 472, 471, 574, 1046, 751, 76, 79, 80, 82, 81, 78, 77, 75, 1047, 436, 363, 1048, 575, 1050, 1049, 362, 576, 474, 473, 586, 752, 148, 147, 1060, 437, 365, 1061, 577, 1063, 1062, 364, 578, 476, 475, 587, 753, 151, 150, 1051, 477, 579, 754, 89, 90, 91, 88, 1064, 63, 960, 64, 961, 580, 964, 581, 965, 966, 962, 963, 967, 968, 969, 970, 396, 971, 397, 65, 68, 70, 66, 67, 69, 973, 582, 1007, 72, 755, 756, 359, 358, 357 }
  uselistorder label %.preheader, { 1, 0 }
}

define i32 @function_152e8() local_unnamed_addr {
dec_label_pc_152e8:
  %v5_152ec = load i32, i32* @r0, align 4
  ret i32 %v5_152ec

; uselistorder directives
  uselistorder i32* @r0, { 5, 114, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 75, 76, 78, 77, 27, 161, 162, 33, 34, 35, 36, 18, 4, 13, 14, 112, 113, 28, 163, 164, 62, 166, 11, 8, 129, 9, 128, 125, 32, 127, 20, 126, 130, 165, 42, 24, 79, 80, 81, 82, 30, 22, 83, 84, 85, 86, 23, 167, 10, 15, 43, 19, 131, 12, 132, 133, 21, 87, 134, 16, 88, 17, 89, 90, 0, 44, 37, 45, 38, 39, 40, 46, 49, 50, 51, 52, 53, 41, 1, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 29, 71, 72, 73, 74, 91, 92, 93, 94, 95, 96, 97, 3, 98, 99, 100, 101, 102, 103, 104, 31, 105, 122, 123, 2, 106, 107, 108, 109, 115, 116, 117, 118, 119, 120, 121, 124, 110, 111, 7, 6, 25, 26 }
}

define i32 @function_152f0() local_unnamed_addr {
entry:
  %v3_152f4 = load i32, i32* @r4, align 4
  %v0_152fc = call i32 @function_80b0()
  call void @__pseudo_branch(i32 %v3_152f4)
  ret i32 %v0_152fc

; uselistorder directives
  uselistorder void (i32)* @__pseudo_branch, { 0, 7, 12, 13, 9, 10, 11, 14, 2, 5, 6, 3, 4, 1, 8 }
  uselistorder i32 0, { 119, 0, 1238, 1239, 1240, 1241, 121, 120, 1242, 1394, 1395, 1396, 1397, 1398, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1399, 1400, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 38, 1419, 1420, 1421, 1422, 1423, 39, 1424, 1425, 1426, 40, 1427, 1428, 1429, 41, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1445, 1446, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 42, 1465, 1466, 1467, 1468, 1469, 43, 1470, 1471, 1472, 1473, 1474, 44, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1090, 1091, 365, 1092, 366, 644, 1344, 1345, 1346, 1347, 1224, 1093, 1094, 1488, 1489, 1490, 1491, 367, 1095, 1, 1096, 1097, 1098, 1492, 1493, 1494, 122, 1495, 69, 1496, 67, 68, 1497, 1498, 1499, 368, 1503, 369, 1514, 1516, 594, 310, 1517, 370, 1515, 371, 372, 2, 1500, 1501, 123, 1225, 325, 1226, 375, 327, 326, 1227, 1228, 1229, 1230, 374, 1232, 1233, 373, 1234, 1502, 1055, 1056, 1057, 1058, 1059, 1060, 125, 87, 1061, 70, 124, 126, 377, 1504, 378, 328, 1505, 1506, 1508, 1509, 376, 1350, 1352, 1353, 48, 311, 1354, 1351, 1348, 1349, 3, 1332, 1335, 1333, 1334, 312, 4, 1357, 1355, 1356, 313, 127, 1336, 1337, 1338, 1342, 1339, 1340, 379, 5, 1341, 6, 1364, 1365, 128, 1358, 1359, 1360, 1361, 1362, 1363, 7, 8, 1231, 645, 646, 647, 380, 9, 381, 1366, 1313, 590, 1314, 591, 1367, 1193, 648, 1062, 649, 650, 1368, 1369, 1243, 1518, 1519, 63, 1099, 382, 1100, 1101, 1102, 1103, 383, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 651, 1063, 1194, 1507, 652, 653, 1111, 1244, 654, 592, 1510, 73, 1511, 1392, 655, 1235, 1393, 1236, 1315, 1512, 1513, 10, 656, 88, 657, 658, 305, 304, 595, 74, 75, 76, 77, 602, 596, 50, 49, 89, 659, 660, 661, 662, 664, 663, 11, 1370, 1371, 307, 306, 597, 78, 79, 80, 81, 603, 598, 52, 51, 47, 60, 1372, 604, 1373, 1374, 1375, 82, 1376, 1377, 1378, 1379, 1380, 129, 599, 605, 600, 601, 1381, 606, 102, 130, 1112, 1113, 83, 1114, 1115, 607, 12, 314, 131, 132, 359, 53, 133, 384, 665, 71, 1116, 1117, 1383, 1382, 1384, 1385, 45, 134, 1386, 137, 136, 135, 360, 361, 362, 139, 138, 140, 385, 1118, 1119, 141, 1299, 1300, 103, 142, 1120, 143, 666, 144, 1274, 1275, 145, 1245, 1246, 672, 667, 90, 668, 622, 623, 84, 669, 633, 620, 608, 621, 639, 640, 386, 624, 625, 609, 626, 627, 610, 628, 629, 611, 630, 631, 612, 632, 634, 613, 635, 642, 614, 636, 641, 637, 66, 54, 308, 309, 638, 593, 670, 387, 671, 316, 673, 388, 674, 677, 678, 315, 675, 676, 164, 163, 679, 680, 615, 64, 389, 681, 682, 684, 685, 686, 687, 688, 689, 690, 390, 691, 692, 693, 694, 59, 85, 695, 696, 697, 698, 699, 700, 701, 702, 165, 703, 704, 705, 706, 707, 166, 708, 709, 710, 711, 712, 713, 167, 714, 715, 168, 716, 717, 169, 718, 719, 720, 55, 721, 722, 723, 724, 170, 725, 726, 727, 171, 728, 91, 92, 729, 730, 731, 172, 732, 733, 734, 735, 173, 736, 737, 738, 739, 146, 740, 741, 742, 174, 743, 744, 745, 746, 175, 747, 748, 749, 750, 751, 176, 752, 753, 754, 755, 177, 756, 757, 758, 759, 178, 760, 761, 762, 763, 179, 764, 765, 766, 767, 180, 768, 769, 770, 771, 772, 181, 773, 774, 775, 776, 182, 777, 778, 779, 780, 183, 781, 782, 783, 784, 184, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 147, 802, 803, 804, 805, 185, 806, 807, 808, 809, 186, 810, 148, 187, 811, 812, 188, 813, 149, 189, 814, 815, 190, 816, 93, 94, 817, 818, 819, 191, 820, 821, 822, 823, 192, 824, 825, 826, 827, 193, 828, 829, 830, 831, 150, 832, 833, 834, 835, 151, 836, 837, 838, 839, 194, 840, 841, 842, 843, 844, 195, 845, 846, 847, 848, 152, 849, 850, 851, 852, 196, 853, 854, 855, 856, 197, 857, 858, 859, 153, 860, 861, 862, 863, 198, 864, 865, 866, 867, 154, 868, 869, 870, 155, 871, 872, 873, 874, 199, 875, 876, 877, 878, 156, 879, 880, 881, 882, 200, 883, 884, 885, 886, 201, 887, 888, 889, 890, 202, 891, 157, 203, 892, 893, 158, 894, 895, 896, 897, 204, 898, 899, 900, 901, 205, 902, 903, 904, 905, 906, 907, 908, 159, 909, 910, 911, 160, 912, 913, 914, 915, 206, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 207, 931, 932, 933, 934, 208, 935, 936, 209, 937, 938, 210, 939, 940, 941, 211, 942, 943, 944, 212, 945, 946, 947, 213, 948, 949, 214, 950, 951, 952, 215, 953, 954, 216, 955, 956, 217, 957, 958, 959, 960, 218, 961, 962, 219, 963, 964, 220, 965, 966, 221, 967, 968, 222, 969, 970, 223, 971, 972, 973, 224, 974, 161, 225, 975, 976, 977, 226, 978, 86, 95, 979, 980, 162, 981, 982, 227, 983, 984, 228, 985, 986, 987, 988, 229, 989, 990, 991, 992, 230, 993, 994, 995, 996, 231, 997, 998, 232, 999, 1000, 233, 1001, 1002, 1003, 1004, 234, 1005, 235, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 391, 392, 1032, 393, 1033, 1036, 1037, 1038, 1039, 1040, 236, 1034, 237, 1035, 238, 643, 13, 239, 683, 1247, 1248, 1041, 1042, 240, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 329, 394, 1050, 65, 395, 1051, 14, 1052, 323, 1053, 396, 1054, 1064, 1065, 1066, 363, 244, 243, 616, 617, 364, 242, 241, 318, 322, 397, 1067, 245, 246, 1077, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 317, 398, 1078, 399, 1079, 400, 1080, 401, 1081, 402, 1082, 1083, 403, 1084, 1085, 1086, 1087, 330, 1088, 56, 1089, 247, 248, 404, 72, 1121, 1122, 1123, 1124, 321, 1125, 1126, 1127, 320, 1128, 1129, 1130, 1131, 98, 1132, 1134, 1133, 96, 97, 249, 319, 405, 1135, 333, 331, 332, 99, 250, 61, 251, 1137, 1138, 107, 104, 105, 106, 15, 1136, 1139, 1140, 1141, 1142, 1143, 1144, 18, 19, 20, 21, 22, 1145, 1146, 252, 335, 1147, 406, 1148, 407, 1149, 408, 1150, 409, 1151, 410, 1152, 411, 1153, 334, 1154, 253, 254, 255, 1156, 1157, 1155, 1159, 1160, 1158, 23, 24, 25, 26, 27, 1161, 256, 1162, 1163, 337, 1164, 412, 1165, 413, 1166, 414, 1167, 415, 1168, 416, 1169, 417, 1170, 336, 1171, 418, 1172, 258, 257, 259, 1174, 1175, 1173, 1176, 1177, 57, 1179, 1180, 1181, 1182, 419, 1183, 28, 29, 30, 31, 32, 1178, 260, 100, 1184, 1185, 342, 1186, 341, 1187, 340, 1188, 338, 1189, 339, 1190, 420, 1191, 421, 1192, 262, 261, 263, 1196, 1197, 1195, 1198, 1199, 58, 1201, 1202, 1203, 1204, 422, 1205, 33, 34, 35, 36, 37, 1200, 264, 101, 1206, 1207, 344, 1208, 343, 1209, 423, 1210, 1249, 111, 110, 108, 109, 1250, 1251, 62, 1252, 1253, 1254, 1255, 1256, 265, 1257, 1258, 424, 1259, 1260, 1261, 1262, 269, 266, 267, 268, 1263, 1264, 1265, 1266, 425, 1267, 1268, 347, 1270, 346, 1271, 345, 1272, 426, 1273, 1276, 1277, 114, 112, 113, 16, 1278, 1279, 1280, 1281, 270, 1282, 1283, 349, 348, 1284, 427, 1285, 271, 274, 273, 272, 1288, 1289, 1287, 1286, 428, 1291, 1290, 1292, 275, 1293, 1294, 352, 1295, 351, 1296, 350, 1297, 429, 1298, 276, 279, 278, 277, 1303, 1304, 1302, 1301, 1306, 1305, 1307, 1308, 280, 355, 1309, 354, 1310, 353, 1311, 430, 1312, 1316, 1317, 1318, 1319, 118, 115, 116, 117, 17, 1320, 1321, 1322, 281, 1323, 282, 1324, 1325, 358, 1326, 357, 1327, 356, 1328, 431, 1329, 287, 433, 285, 286, 283, 284, 1330, 289, 288, 1331, 434, 290, 432, 295, 436, 293, 294, 291, 292, 1387, 297, 296, 1388, 298, 435, 324, 1343, 1389, 299, 1390, 1211, 300, 1212, 1213, 301, 1214, 1215, 1216, 302, 437, 1217, 1218, 46, 1219, 1220, 1221, 1222, 1223, 438, 1237, 303, 1269, 1391, 618, 619, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534 }
  uselistorder i32* @r4, { 37, 664, 668, 669, 672, 673, 445, 446, 447, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 181, 58, 616, 617, 430, 690, 691, 692, 693, 694, 695, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 696, 697, 6, 698, 699, 700, 701, 715, 716, 717, 718, 35, 719, 33, 710, 711, 712, 713, 714, 702, 703, 704, 431, 432, 433, 434, 435, 436, 437, 438, 705, 706, 149, 150, 709, 618, 619, 620, 588, 7, 589, 590, 591, 8, 592, 9, 600, 601, 593, 10, 11, 594, 595, 596, 597, 598, 599, 621, 12, 629, 630, 622, 623, 624, 625, 626, 627, 628, 59, 60, 61, 62, 63, 64, 631, 632, 551, 552, 633, 634, 363, 364, 65, 66, 151, 152, 67, 68, 69, 70, 635, 636, 637, 638, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 71, 72, 153, 154, 365, 366, 707, 708, 3, 73, 74, 75, 76, 218, 219, 448, 449, 77, 78, 666, 667, 439, 440, 670, 671, 441, 442, 553, 554, 220, 221, 79, 80, 81, 82, 222, 223, 224, 225, 226, 639, 640, 641, 83, 84, 85, 492, 493, 494, 450, 451, 452, 86, 87, 13, 88, 38, 39, 5, 4, 42, 43, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 89, 90, 52, 53, 91, 92, 93, 94, 95, 96, 97, 98, 99, 105, 106, 107, 108, 115, 116, 117, 118, 119, 120, 0, 121, 109, 110, 111, 112, 113, 114, 54, 55, 56, 1, 57, 100, 101, 102, 103, 104, 642, 643, 644, 645, 453, 454, 455, 456, 457, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 14, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 15, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 34, 174, 175, 176, 177, 178, 179, 180, 227, 228, 229, 2, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 16, 247, 17, 248, 18, 249, 19, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 20, 274, 21, 275, 22, 276, 23, 277, 278, 279, 280, 281, 24, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 25, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 26, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 27, 512, 28, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 29, 532, 30, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 555, 556, 31, 557, 32, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 662, 663, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 659, 660, 661, 417, 418, 419, 420, 423, 421, 422, 424, 425, 426, 427, 428, 429, 443, 444, 36, 665 }
}

declare i32 @fcntl(i32, i32, ...) local_unnamed_addr

declare i32 @close(i32) local_unnamed_addr

declare i32 @fork() local_unnamed_addr

declare i32 @getpid() local_unnamed_addr

declare i32 @getppid() local_unnamed_addr

declare i32 @ioctl(i32, i32, ...) local_unnamed_addr

declare i32 @kill(i32, i32) local_unnamed_addr

declare i32 @open(i8*, i32, ...) local_unnamed_addr

declare i32 @prctl(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @read(i32, i32*, i32) local_unnamed_addr

declare i32 @readlink(i8*, i8*, i32) local_unnamed_addr

declare i32 @setsid() local_unnamed_addr

declare i32 @sigprocmask(i32, %_TYPEDEF_sigset_t*, %_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32 @time(i32*) local_unnamed_addr

declare i32 @unlink(i8*) local_unnamed_addr

declare i32 @write(i32, i32*, i32) local_unnamed_addr

declare i32 @bind(i32, %sockaddr*, i32) local_unnamed_addr

declare i32 @connect(i32, %sockaddr*, i32) local_unnamed_addr

declare i32 @getsockname(i32, %sockaddr*, i32*) local_unnamed_addr

declare i32 @getsockopt(i32, i32, i32, i32*, i32*) local_unnamed_addr

declare i32 @listen(i32, i32) local_unnamed_addr

declare i32 @recv(i32, i32*, i32, i32) local_unnamed_addr

declare i32 @recvfrom(i32, i32*, i32, i32, %sockaddr*, i32*) local_unnamed_addr

declare i32 @send(i32, i32*, i32, i32) local_unnamed_addr

declare i32 @sendto(i32, i32*, i32, i32, %sockaddr*, i32) local_unnamed_addr

declare i32 @setsockopt(i32, i32, i32, i32*, i32) local_unnamed_addr

declare i32 @socket(i32, i32, i32) local_unnamed_addr

declare i32 @sigaction(i32, %sigaction*, %sigaction*) local_unnamed_addr

declare void @exit(i32) local_unnamed_addr

declare i32 @fstat(i32, %stat*) local_unnamed_addr

declare i32 @getdents64(i32, %linux_dirent64*, i32) local_unnamed_addr

declare i32 @nanosleep(%timespec*, %timespec*) local_unnamed_addr

declare i32 @times(%tms*) local_unnamed_addr

declare i32 @brk(i32*) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i8 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8* @__decompiler_undefined_function_2() local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
