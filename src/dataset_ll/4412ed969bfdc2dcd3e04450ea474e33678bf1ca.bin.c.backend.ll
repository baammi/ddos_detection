source_filename = "test"
target datalayout = "E-p:32:32:32-f80:32:32"

%0 = type { i1, i1, i1, i1, i4, i4, i4, i4, i4, i4, i4 }

@r1 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r9 = internal unnamed_addr global i32 0
@r11 = internal unnamed_addr global i32 0
@r16 = internal unnamed_addr global i32 0
@r17 = internal unnamed_addr global i32 0
@r18 = internal unnamed_addr global i32 0
@r19 = internal unnamed_addr global i32 0
@r20 = internal unnamed_addr global i32 0
@r21 = internal unnamed_addr global i32 0
@r22 = internal unnamed_addr global i32 0
@r23 = internal unnamed_addr global i32 0
@r24 = internal unnamed_addr global i32 0
@r25 = internal unnamed_addr global i32 0
@r26 = internal unnamed_addr global i32 0
@r27 = internal unnamed_addr global i32 0
@r28 = internal unnamed_addr global i32 0
@r29 = internal unnamed_addr global i32 0
@r30 = internal unnamed_addr global i32 0
@r31 = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@global_var_100000a4.1 = constant i32 1208013421
@global_var_1001e00c.3 = global i32 0
@global_var_1001e01c.4 = local_unnamed_addr global i32* @global_var_1001e00c.3
@global_var_1001e1f4.6 = global i32 0
@global_var_1000d3dc.7 = constant [4 x i8] c"GET\00"
@global_var_1000d3e0.8 = constant i32 788529152
@global_var_10000458.9 = constant [3 x i8] c"8`\00"
@global_var_10000460.10 = constant [3 x i8] c"8`\00"
@global_var_10000468.11 = constant [3 x i8] c"8`\00"
@global_var_10000470.12 = constant [3 x i8] c"8`\00"
@global_var_10000478.13 = constant [3 x i8] c"8`\00"
@global_var_10000480.14 = constant [3 x i8] c"8`\00"
@global_var_10000488.15 = constant [3 x i8] c"8`\00"
@global_var_10000490.16 = constant [3 x i8] c"8`\00"
@global_var_10000498.17 = constant [3 x i8] c"8`\00"
@global_var_100004a0.18 = constant [3 x i8] c"8`\00"
@global_var_10000528.19 = constant i32 939524143
@global_var_1000057c.20 = constant i32 1006685388
@global_var_1000d424.21 = constant i32 -47068
@global_var_100005cc.22 = constant [3 x i8] c"9`\00"
@global_var_1000d3d4.23 = constant i32 536870912
@global_var_1000d3d0.24 = constant [3 x i8] c"\0D\0A\00"
@global_var_100006c0.25 = constant [3 x i8] c"8`\00"
@global_var_1000d3ac.26 = constant [24 x i8] c" HTTP/1.1\0D\0AUser-Agent: \00"
@global_var_1000d3c4.27 = constant [9 x i8] c"\0D\0AHost: \00"
@global_var_10000984.28 = constant [3 x i8] c"8`\00"
@global_var_100009b0.29 = constant [3 x i8] c"8`\00"
@global_var_100009cc.30 = constant [3 x i8] c"8`\00"
@global_var_100009f8.31 = constant [3 x i8] c"8`\00"
@global_var_10000a14.32 = constant [3 x i8] c"8`\00"
@global_var_10000a40.33 = constant [3 x i8] c"8`\00"
@global_var_10000a8c.34 = constant [3 x i8] c"8`\00"
@global_var_1000d3e4.35 = constant [9 x i8] c"Cookie: \00"
@global_var_1000d3f0.36 = constant [3 x i8] c"; \00"
@global_var_1000d3f4.37 = constant [5 x i8] c"\0D\0A\0D\0A\00"
@global_var_10000d08.38 = constant i32 939524096
@global_var_1000d3fc.39 = constant i32 989855744
@global_var_1000d400.40 = constant [5 x i8] c"http\00"
@global_var_100014f8.41 = constant i32 939589631
@global_var_10001560.42 = constant i32 939589631
@global_var_1000d408.43 = constant [5 x i8] c"url=\00"
@global_var_10001710.44 = constant [3 x i8] c"8`\00"
@global_var_1000d410.45 = constant [5 x i8] c"POST\00"
@global_var_10001824.46 = constant [3 x i8] c"9`\00"
@global_var_1000d418.47 = constant i32 654311424
@global_var_10001b24.49 = constant [3 x i8] c"9`\00"
@global_var_1000d41c.50 = constant i32 1023410176
@global_var_10001e2c.56 = constant i32 1207995449
@global_var_10001e38.57 = constant [3 x i8] c"8`\00"
@global_var_1001e188.59 = local_unnamed_addr global i32 0
@global_var_100020a0.60 = constant [3 x i8] c";{\00"
@global_var_100020cc.61 = constant i32 939524096
@global_var_1001e20c.62 = global i32 0
@global_var_1001e210.63 = local_unnamed_addr global i32 0
@global_var_1001e214.64 = local_unnamed_addr global i32 0
@global_var_1001e218.65 = local_unnamed_addr global i32 0
@global_var_1001e21c.66 = local_unnamed_addr global i32 0
@global_var_1001e220.67 = local_unnamed_addr global i32 0
@global_var_1001e224.68 = local_unnamed_addr global i32 0
@global_var_1001e228.69 = local_unnamed_addr global i32 0
@global_var_1001e180.71 = local_unnamed_addr global i32 0
@global_var_10002bb4.72 = constant [3 x i8] c"8~\00"
@global_var_10002bc4.73 = constant [3 x i8] c"8~\00"
@global_var_10002bd4.74 = constant [3 x i8] c"8~\00"
@global_var_1000353c.75 = constant [3 x i8] c"8`\00"
@global_var_100041f0.76 = constant i32 939524104
@global_var_10004220.77 = constant i32 939524096
@global_var_10004520.78 = constant i32 939524096
@global_var_100051f4.79 = constant [3 x i8] c"8`\00"
@global_var_100052e4.80 = constant [3 x i8] c"9!\00"
@global_var_1001e194.81 = local_unnamed_addr global i32 0
@global_var_100058a8.82 = constant [3 x i8] c"8`\00"
@global_var_100058b0.83 = constant [3 x i8] c"8`\00"
@global_var_1000d438.84 = constant [14 x i8] c"/proc/net/tcp\00"
@global_var_100059ac.85 = constant [3 x i8] c"9@\00"
@global_var_10005cf4.86 = constant [3 x i8] c"8`\00"
@global_var_10005cfc.87 = constant [3 x i8] c"8`\00"
@global_var_10005d04.88 = constant [3 x i8] c"8`\00"
@global_var_10005d0c.89 = constant [3 x i8] c"8`\00"
@global_var_10005d78.90 = constant [3 x i8] c"8`\00"
@global_var_10005d80.91 = constant [3 x i8] c"8`\00"
@global_var_10005eb8.92 = constant i32 939524119
@global_var_10005ef4.93 = constant [3 x i8] c"8`\00"
@global_var_10005efc.94 = constant i32 939524118
@global_var_10005f38.95 = constant [3 x i8] c"8`\00"
@global_var_1001e18c.96 = local_unnamed_addr global i32 0
@global_var_1001e190.97 = local_unnamed_addr global i32 0
@global_var_10005f6c.98 = constant [3 x i8] c"8`\00"
@global_var_10005fe8.99 = constant [3 x i8] c"8`\00"
@global_var_10005ff0.100 = constant [3 x i8] c"8`\00"
@global_var_10006054.101 = constant i32 1207979653
@global_var_100060f0.102 = constant [3 x i8] c"8`\00"
@global_var_10006180.103 = constant [3 x i8] c"8`\00"
@global_var_10006188.104 = constant [3 x i8] c"8`\00"
@global_var_100061f8.105 = constant [3 x i8] c"8`\00"
@global_var_10006200.106 = constant i32 1207978013
@global_var_100062b0.107 = constant [3 x i8] c"8`\00"
@global_var_100062b8.108 = constant [3 x i8] c"8`\00"
@global_var_100062c0.109 = constant [3 x i8] c"8`\00"
@global_var_100062c8.110 = constant [3 x i8] c"8`\00"
@global_var_10006498.111 = constant [3 x i8] c"8`\00"
@global_var_100064a0.112 = constant [3 x i8] c"8`\00"
@global_var_100064a8.113 = constant [3 x i8] c"8`\00"
@global_var_100064b0.114 = constant [3 x i8] c"8`\00"
@global_var_100064e8.115 = constant [3 x i8] c"8`\00"
@global_var_10006540.116 = constant [3 x i8] c"8`\00"
@global_var_10006548.117 = constant [3 x i8] c"8`\00"
@global_var_10006550.118 = constant [3 x i8] c"8`\00"
@global_var_10006558.119 = constant [3 x i8] c"8`\00"
@global_var_1001e168.120 = local_unnamed_addr global i32 268477444
@global_var_1001e160.121 = local_unnamed_addr global i32 -1
@global_var_10006710.123 = constant [3 x i8] c"8`\00"
@global_var_10006720.124 = constant [3 x i8] c"8`\00"
@global_var_10006798.125 = constant i32 1207963169
@global_var_1001e27c.126 = global i32 0
@global_var_1001e280.127 = local_unnamed_addr global i32 0
@global_var_100067e8.128 = constant [3 x i8] c"8`\00"
@global_var_100067f0.129 = constant [3 x i8] c"8`\00"
@global_var_1001e27e.130 = local_unnamed_addr global i32 0
@global_var_1000d448.131 = constant [14 x i8] c"/dev/watchdog\00"
@global_var_10006924.132 = constant [3 x i8] c";A\00"
@global_var_1000d478.138 = constant i32 268461440
@global_var_100069f4.139 = constant i32 939524098
@global_var_10006a20.140 = constant i32 939524100
@global_var_10006a5c.141 = constant i32 939524102
@global_var_10006a94.142 = constant i32 939524104
@global_var_10006acc.143 = constant i32 939524106
@global_var_10006b04.144 = constant i32 939524108
@global_var_10006b90.145 = constant i32 1207961341
@global_var_10006bdc.146 = constant i32 1207961185
@global_var_10006be0.147 = constant i32 1006676650
@global_var_10006c28.148 = constant [3 x i8] c"8`\00"
@global_var_1000d46c.149 = constant i32 167772160
@global_var_10006c60.150 = constant [3 x i8] c"8`\00"
@global_var_10006c68.151 = constant i32 1207975277
@global_var_1000d458.152 = constant [19 x i8] c"/dev/misc/watchdog\00"
@global_var_10006cfc.153 = constant i32 1207960977
@global_var_10006d60.154 = constant [3 x i8] c"8`\00"
@global_var_10006d68.155 = constant [3 x i8] c"8`\00"
@global_var_10006d70.156 = constant [3 x i8] c":!\00"
@global_var_1001e164.157 = local_unnamed_addr global i32 -1
@global_var_10006f24.159 = constant i32 939589631
@global_var_10006fdc.160 = constant i32 939589631
@global_var_10007024.161 = constant i32 939589631
@global_var_10007108.162 = constant i32 939589631
@global_var_10007114.163 = constant i32 1006685388
@global_var_1000714c.164 = constant i32 1207961993
@global_var_10007158.165 = constant [3 x i8] c"|r\00"
@global_var_10007164.166 = constant [3 x i8] c"8`\00"
@global_var_1000d470.167 = constant i32 1
@global_var_1001e238.168 = local_unnamed_addr global i32 0
@global_var_1001e22c.169 = local_unnamed_addr global i32 0
@global_var_1001e234.170 = local_unnamed_addr global i32 0
@global_var_1001e230.171 = local_unnamed_addr global i32 0
@global_var_1000d4b0.172 = constant [33 x i8] c"abcdefghijklmnopqrstuvw012345678\00"
@global_var_10007624.173 = constant [3 x i8] c"9A\00"
@global_var_100076a8.174 = constant i32 939524096
@global_var_100076dc.175 = constant i32 1006665728
@global_var_10007708.176 = constant i32 939524098
@global_var_10007750.177 = constant [3 x i8] c"8`\00"
@global_var_100077c4.178 = constant i32 939524128
@global_var_10007870.179 = constant [3 x i8] c"8c\00"
@global_var_1001e1b4.180 = local_unnamed_addr global i32 0
@global_var_1001e1a8.181 = local_unnamed_addr global i32 0
@global_var_1001e19c.182 = local_unnamed_addr global i32 0
@global_var_1001e1a0.183 = local_unnamed_addr global i32 0
@global_var_10007e70.185 = constant [3 x i8] c"8`\00"
@global_var_10007e8c.186 = constant i32 939524096
@global_var_1001e1ac.187 = local_unnamed_addr global i32 0
@global_var_1001e1b0.188 = local_unnamed_addr global i32 0
@global_var_1001e23c.189 = global i32 0
@global_var_1001e250.190 = global i32 0
@global_var_1000d63c.191 = constant [5 x i8] c"PMMV\00"
@global_var_1001e23e.192 = local_unnamed_addr global i32 0
@global_var_1001e25c.193 = local_unnamed_addr global i32 0
@global_var_1001e244.194 = local_unnamed_addr global i32 0
@global_var_1001e245.195 = local_unnamed_addr global i32 0
@global_var_1001e240.196 = local_unnamed_addr global i32 0
@global_var_1000d654.197 = constant [6 x i8] c"CFOKL\00"
@global_var_1000d65c.199 = constant i32 437918234
@global_var_1001e25e.200 = local_unnamed_addr global i32 0
@global_var_1000d644.201 = constant i32 1514213655
@global_var_1000d680.202 = constant i32 319820054
@global_var_1000d688.203 = constant i32 387322128
@global_var_1000d3f8.204 = constant i32 0
@global_var_1000d64c.205 = constant [6 x i8] c"TKXZT\00"
@global_var_1000d4d4.206 = constant [9 x i8] c"RCQQUMPF\00"
@global_var_1000d664.207 = constant [8 x i8] c"ZOJFKRA\00"
@global_var_1000d66c.209 = constant [8 x i8] c"FGDCWNV\00"
@global_var_1000d674.210 = constant [9 x i8] c"HWCLVGAJ\00"
@global_var_1000d4e8.211 = constant [5 x i8] c"WQGP\00"
@global_var_1000d690.212 = constant [8 x i8] c"QWRRMPV\00"
@global_var_1000d4f0.213 = constant [5 x i8] c"RCQQ\00"
@global_var_1000d504.214 = constant i32 320017171
@global_var_1000d4f8.215 = constant i32 1128681291
@global_var_1000d50c.216 = constant [9 x i8] c"QOACFOKL\00"
@global_var_1000d518.217 = constant i32 336860180
@global_var_1000d520.218 = constant i32 319820054
@global_var_1000d528.219 = constant i32 1229870099
@global_var_1000d540.220 = constant [7 x i8] c"OGKLQO\00"
@global_var_1000d530.221 = constant [14 x i8] c"cFOKLKQVPCVMP\00"
@global_var_1000d548.222 = constant [8 x i8] c"QGPTKAG\00"
@global_var_1000d55c.223 = constant [6 x i8] c"EWGQV\00"
@global_var_1000d550.224 = constant [11 x i8] c"QWRGPTKQMP\00"
@global_var_1000d564.225 = constant i32 1128681291
@global_var_1000d56c.226 = constant [14 x i8] c"CFOKLKQVPCVMP\00"
@global_var_1000d5c4.227 = constant i32 358041711
@global_var_1000d57c.228 = constant [5 x i8] c"W@LV\00"
@global_var_1000d584.229 = constant i32 1229870099
@global_var_1000d58c.230 = constant i32 2018920215
@global_var_1000d594.231 = constant i32 1246433559
@global_var_1000d59c.232 = constant [6 x i8] c"HT@XF\00"
@global_var_1000d5a4.233 = constant [5 x i8] c"CLIM\00"
@global_var_1000d5ac.234 = constant [6 x i8] c"XNZZ\0C\00"
@global_var_1000d5b4.235 = constant i32 358041711
@global_var_1000d5d4.236 = constant [7 x i8] c"Q[QVGO\00"
@global_var_1000d5dc.237 = constant [5 x i8] c"KIU@\00"
@global_var_1000d5e4.238 = constant [9 x i8] c"FPGCO@MZ\00"
@global_var_1000d5f0.239 = constant [8 x i8] c"PGCNVGI\00"
@global_var_1000d5f8.240 = constant i32 303174162
@global_var_1000d604.241 = constant i32 320017171
@global_var_1000d60c.242 = constant i32 370216979
@global_var_1000d678.243 = constant [5 x i8] c"VGAJ\00"
@global_var_1000d614.244 = constant [7 x i8] c"OMVJGP\00"
@global_var_1000d61c.245 = constant [7 x i8] c"DWAIGP\00"
@global_var_1001e248.246 = local_unnamed_addr global i32 0
@global_var_1000d698.247 = constant i32 -19580
@global_var_1001e24c.248 = local_unnamed_addr global i32 0
@global_var_1001e246.249 = local_unnamed_addr global i32 0
@global_var_1001e260.250 = local_unnamed_addr global i32 0
@global_var_1001e254.251 = local_unnamed_addr global i32 0
@global_var_100087ec.252 = constant i32 939524096
@global_var_1000898c.253 = constant [3 x i8] c"8`\00"
@global_var_10008994.254 = constant i32 939524096
@global_var_10008b60.257 = constant [3 x i8] c"8`\00"
@global_var_1001e28c.278 = global i32 0
@global_var_1001e16c.279 = local_unnamed_addr global i32 -559038737
@global_var_1000d6e0.280 = constant [11 x i8] c"AMMNZP\0CVI\22\00"
@global_var_10009984.281 = constant [3 x i8] c"8`\00"
@global_var_1001e2a4.282 = local_unnamed_addr global i32 0
@global_var_1001e2a8.283 = local_unnamed_addr global i32 0
@global_var_1000d6d4.284 = constant [3 x i8] c"\225\00"
@global_var_100099a8.285 = constant [3 x i8] c"8`\00"
@global_var_1001e2ac.286 = local_unnamed_addr global i32 0
@global_var_1001e2b0.287 = local_unnamed_addr global i32 0
@global_var_1000d6d8.288 = constant [19 x i8] c"PGQWNVQ\0CAMMNZP\0CVI\22\00"
@global_var_100099cc.289 = constant [3 x i8] c"8`\00"
@global_var_1001e31c.290 = local_unnamed_addr global i32 0
@global_var_1001e320.291 = local_unnamed_addr global i32 0
@global_var_1000d6ec.292 = constant i32 -1715011584
@global_var_100099f0.293 = constant [3 x i8] c"8`\00"
@global_var_1001e324.294 = local_unnamed_addr global i32 0
@global_var_1001e328.295 = local_unnamed_addr global i32 0
@global_var_1000d6f0.296 = constant i32 1313558870
@global_var_10009a14.297 = constant i32 939524111
@global_var_1001e2a0.298 = local_unnamed_addr global i32 0
@global_var_1001e29c.299 = local_unnamed_addr global i32 0
@global_var_1000d700.300 = constant i32 1247172178
@global_var_10009a3c.301 = constant i32 939524125
@global_var_1001e2b8.302 = local_unnamed_addr global i32 0
@global_var_1001e2b4.303 = local_unnamed_addr global i32 0
@global_var_1000d720.304 = constant [8 x i8] c"\0DRPMA\0D\22\00"
@global_var_10009a68.305 = constant [3 x i8] c"8`\00"
@global_var_1001e2bc.306 = local_unnamed_addr global i32 0
@global_var_1001e2c0.307 = local_unnamed_addr global i32 0
@global_var_1000d728.308 = constant [6 x i8] c"\0DGZG\22\00"
@global_var_10009a8c.309 = constant i32 939524101
@global_var_1001e2c8.310 = local_unnamed_addr global i32 0
@global_var_1001e2c4.311 = local_unnamed_addr global i32 0
@global_var_1000d730.312 = constant i32 34227783
@global_var_10009ab4.313 = constant [3 x i8] c"8`\00"
@global_var_1001e2cc.314 = local_unnamed_addr global i32 0
@global_var_1001e2d0.315 = local_unnamed_addr global i32 0
@global_var_1000d73c.316 = constant [5 x i8] c"\0DDF\22\00"
@global_var_10009ad8.317 = constant i32 939524100
@global_var_1001e2d8.318 = local_unnamed_addr global i32 0
@global_var_1001e2d4.319 = local_unnamed_addr global i32 0
@global_var_1000d744.320 = constant [8 x i8] c"\0CCLKOG\22\00"
@global_var_10009b00.321 = constant [3 x i8] c"8`\00"
@global_var_1001e2dc.322 = local_unnamed_addr global i32 0
@global_var_1001e2e0.323 = local_unnamed_addr global i32 0
@global_var_1000d74c.324 = constant [9 x i8] c"\0DQVCVWQ\22\00"
@global_var_10009b24.325 = constant [3 x i8] c"8`\00"
@global_var_1001e2e4.326 = local_unnamed_addr global i32 0
@global_var_1001e2e8.327 = local_unnamed_addr global i32 0
@global_var_1000d758.328 = constant i32 1885827693
@global_var_10009b48.329 = constant i32 939524109
@global_var_1001e2f0.330 = local_unnamed_addr global i32 0
@global_var_1001e2ec.331 = local_unnamed_addr global i32 0
@global_var_1000d768.332 = constant [11 x i8] c"jvvrdnmmf\22\00"
@global_var_10009b70.333 = constant [3 x i8] c"8`\00"
@global_var_1001e2f4.334 = local_unnamed_addr global i32 0
@global_var_1001e2f8.335 = local_unnamed_addr global i32 0
@global_var_1000d774.336 = constant [11 x i8] c"nmnlmevdm\22\00"
@global_var_10009b94.337 = constant [3 x i8] c"8`\00"
@global_var_1001e2fc.338 = local_unnamed_addr global i32 0
@global_var_1001e300.339 = local_unnamed_addr global i32 0
@global_var_1000d780.340 = constant i32 2119833370
@global_var_10009bb8.341 = constant i32 939524129
@global_var_1001e308.342 = local_unnamed_addr global i32 0
@global_var_1001e304.343 = local_unnamed_addr global i32 0
@global_var_1000d7a4.344 = constant [9 x i8] c"XMNNCPF\22\00"
@global_var_10009be0.345 = constant [3 x i8] c"8`\00"
@global_var_1001e30c.346 = local_unnamed_addr global i32 0
@global_var_1001e310.347 = local_unnamed_addr global i32 0
@global_var_1000d7b0.348 = constant [12 x i8] c"egvnmacnkr\22\00"
@global_var_10009c04.349 = constant [3 x i8] c"8`\00"
@global_var_1001e314.350 = local_unnamed_addr global i32 0
@global_var_1001e318.351 = local_unnamed_addr global i32 0
@global_var_1000d7bc.352 = constant [7 x i8] c"QJGNN\22\00"
@global_var_10009c28.353 = constant i32 939524102
@global_var_1001e330.354 = local_unnamed_addr global i32 0
@global_var_1001e32c.355 = local_unnamed_addr global i32 0
@global_var_1000d7c4.356 = constant [8 x i8] c"GLC@NG\22\00"
@global_var_10009c50.357 = constant [3 x i8] c"8`\00"
@global_var_1001e334.358 = local_unnamed_addr global i32 0
@global_var_1001e338.359 = local_unnamed_addr global i32 0
@global_var_1000d7cc.360 = constant [8 x i8] c"Q[QVGO\22\00"
@global_var_10009c74.361 = constant [3 x i8] c"8`\00"
@global_var_1001e33c.362 = local_unnamed_addr global i32 0
@global_var_1001e340.363 = local_unnamed_addr global i32 0
@global_var_1000d7d4.364 = constant [4 x i8] c"QJ\22\00"
@global_var_10009c98.365 = constant i32 939524099
@global_var_1001e348.366 = local_unnamed_addr global i32 0
@global_var_1001e344.367 = local_unnamed_addr global i32 0
@global_var_1000d7d8.368 = constant i32 222317388
@global_var_10009cc0.369 = constant [3 x i8] c"8`\00"
@global_var_1001e34c.370 = local_unnamed_addr global i32 0
@global_var_1001e350.371 = local_unnamed_addr global i32 0
@global_var_1000d7ec.372 = constant i32 1869312099
@global_var_10009ce8.373 = constant i32 939524120
@global_var_1001e358.374 = local_unnamed_addr global i32 0
@global_var_1001e354.375 = local_unnamed_addr global i32 0
@global_var_1000d808.376 = constant [10 x i8] c"LAMPPGAV\22\00"
@global_var_10009d10.377 = constant [3 x i8] c"8`\00"
@global_var_1001e35c.378 = local_unnamed_addr global i32 0
@global_var_1001e360.379 = local_unnamed_addr global i32 0
@global_var_1000d814.380 = constant i32 222317388
@global_var_10009d34.381 = constant [3 x i8] c"8`\00"
@global_var_1001e364.382 = local_unnamed_addr global i32 0
@global_var_1001e368.383 = local_unnamed_addr global i32 0
@global_var_1000d828.384 = constant i32 222317388
@global_var_10009d58.385 = constant i32 939524118
@global_var_1001e370.386 = local_unnamed_addr global i32 0
@global_var_1001e36c.387 = local_unnamed_addr global i32 0
@global_var_1000d840.388 = constant i32 1987136855
@global_var_10009d80.389 = constant i32 939524117
@global_var_1001e378.390 = local_unnamed_addr global i32 0
@global_var_1001e374.391 = local_unnamed_addr global i32 0
@global_var_1000d858.392 = constant [18 x i8] c"\0DGVA\0DPGQMNT\0CAMLD\22\00"
@global_var_10009da8.393 = constant i32 939524113
@global_var_1001e380.394 = local_unnamed_addr global i32 0
@global_var_1001e37c.395 = local_unnamed_addr global i32 0
@global_var_1000d86c.396 = constant i32 1279479623
@global_var_10009dd0.397 = constant [3 x i8] c"8`\00"
@global_var_1001e384.398 = local_unnamed_addr global i32 0
@global_var_1001e388.399 = local_unnamed_addr global i32 0
@global_var_1000d87c.400 = constant i32 1632455756
@global_var_10009df4.401 = constant i32 939524119
@global_var_1001e390.402 = local_unnamed_addr global i32 0
@global_var_1001e38c.403 = local_unnamed_addr global i32 0
@global_var_1000d894.404 = constant i32 1665220935
@global_var_10009e1c.405 = constant i32 939524179
@global_var_1001e398.406 = local_unnamed_addr global i32 0
@global_var_1001e394.407 = local_unnamed_addr global i32 0
@global_var_1000d8e8.408 = constant i32 1665220935
@global_var_10009e44.409 = constant i32 939524128
@global_var_1001e3a0.410 = local_unnamed_addr global i32 0
@global_var_1001e39c.411 = local_unnamed_addr global i32 0
@global_var_1000d90c.412 = constant i32 1632455766
@global_var_10009e6c.413 = constant i32 939524144
@global_var_1001e3a8.414 = local_unnamed_addr global i32 0
@global_var_1001e3a4.415 = local_unnamed_addr global i32 0
@global_var_1000d940.416 = constant i32 1363629665
@global_var_10009e94.417 = constant [3 x i8] c"8`\00"
@global_var_1001e3ac.418 = local_unnamed_addr global i32 0
@global_var_1001e3b0.419 = local_unnamed_addr global i32 0
@global_var_1000d950.420 = constant i32 1346847824
@global_var_10009eb8.421 = constant [3 x i8] c"8`\00"
@global_var_1001e3b4.422 = local_unnamed_addr global i32 0
@global_var_1001e3b8.423 = local_unnamed_addr global i32 0
@global_var_1000d95c.424 = constant i32 1313685827
@global_var_10009edc.425 = constant [3 x i8] c"8`\00"
@global_var_1001e3bc.426 = local_unnamed_addr global i32 0
@global_var_1001e3c0.427 = local_unnamed_addr global i32 0
@global_var_1000d968.428 = constant i32 1363629583
@global_var_10009f00.429 = constant [3 x i8] c"8`\00"
@global_var_1001e3c4.430 = local_unnamed_addr global i32 0
@global_var_1001e3c8.431 = local_unnamed_addr global i32 0
@global_var_1000d978.432 = constant i32 1095584854
@global_var_10009f24.433 = constant [3 x i8] c"8`\00"
@global_var_1001e3cc.434 = local_unnamed_addr global i32 0
@global_var_1001e3d0.435 = local_unnamed_addr global i32 0
@global_var_1000d98c.436 = constant i32 1448100684
@global_var_10009f48.437 = constant [3 x i8] c"8`\00"
@global_var_1001e3d4.438 = local_unnamed_addr global i32 0
@global_var_1001e3d8.439 = local_unnamed_addr global i32 0
@global_var_1000d9a0.440 = constant [9 x i8] c"AJWLIGF\22\00"
@global_var_10009f6c.441 = constant [3 x i8] c"8`\00"
@global_var_1001e3dc.442 = local_unnamed_addr global i32 0
@global_var_1001e3e0.443 = local_unnamed_addr global i32 0
@global_var_1000d888.444 = constant i32 1229408082
@global_var_10009f90.445 = constant [3 x i8] c"8`\00"
@global_var_1001e3e4.446 = local_unnamed_addr global i32 0
@global_var_1001e3e8.447 = local_unnamed_addr global i32 0
@global_var_1000d9ac.448 = constant i32 1095584844
@global_var_10009fb4.449 = constant [3 x i8] c"8`\00"
@global_var_1001e3ec.450 = local_unnamed_addr global i32 0
@global_var_1001e3f0.451 = local_unnamed_addr global i32 0
@global_var_1000d9bc.452 = constant i32 1363628116
@global_var_10009fd8.453 = constant [3 x i8] c"8`\00"
@global_var_1001e3f4.454 = local_unnamed_addr global i32 0
@global_var_1001e3f8.455 = local_unnamed_addr global i32 0
@global_var_1000d9d0.456 = constant i32 1363628116
@global_var_1000a000.457 = constant i32 939524121
@global_var_1001e400.458 = local_unnamed_addr global i32 0
@global_var_1001e3fc.459 = local_unnamed_addr global i32 0
@global_var_1000d9ec.460 = constant i32 1867339851
@global_var_1000a028.461 = constant [3 x i8] c"8`\00"
@global_var_1001e404.462 = local_unnamed_addr global i32 0
@global_var_1001e408.463 = local_unnamed_addr global i32 0
@global_var_1000da5c.464 = constant i32 1867339851
@global_var_1000a04c.465 = constant [3 x i8] c"8`\00"
@global_var_1001e40c.466 = local_unnamed_addr global i32 0
@global_var_1001e410.467 = local_unnamed_addr global i32 0
@global_var_1000dacc.468 = constant i32 1867339851
@global_var_1000a074.469 = constant [3 x i8] c"8`\00"
@global_var_1001e414.470 = local_unnamed_addr global i32 0
@global_var_1001e418.471 = local_unnamed_addr global i32 0
@global_var_1000db3c.472 = constant i32 1867339851
@global_var_1000a098.473 = constant [3 x i8] c"8`\00"
@global_var_1001e41c.474 = local_unnamed_addr global i32 0
@global_var_1001e420.475 = local_unnamed_addr global i32 0
@global_var_1000dbac.476 = constant i32 1867339851
@global_var_1000a0bc.477 = constant i32 939524213
@global_var_1001e428.478 = local_unnamed_addr global i32 0
@global_var_1001e424.479 = local_unnamed_addr global i32 0
@global_var_1000a428.480 = constant i32 939524096
@global_var_1000a7f4.481 = constant i32 1207959564
@global_var_1000ad18.482 = constant i32 939524118
@global_var_1000c4e8.483 = constant [3 x i8] c"8`\00"
@global_var_1000ae70.484 = constant i32 939524105
@global_var_1000ae8c.485 = constant i32 939589631
@global_var_1000afb4.486 = constant i32 1207959797
@global_var_1000afb8.487 = constant i32 939524108
@global_var_1001e1d8.488 = global i32 0
@global_var_1000b7dc.489 = constant i32 939524118
@global_var_1000b864.490 = constant i32 939524118
@global_var_1001e42c.491 = global i32 0
@global_var_1001e264.492 = global i32 0
@global_var_1001e170 = external global i32
@global_var_1000dd30.494 = constant i32 33554944
@global_var_1001e1c8.495 = local_unnamed_addr global i32 0
@global_var_1001e4ac.496 = global i32 0
@global_var_1000bac0.497 = constant i32 939524108
@global_var_1000bb14.498 = constant i32 939524108
@global_var_1000bbc8.499 = constant [3 x i8] c"8`\00"
@global_var_1000bc74.500 = constant [3 x i8] c"8`\00"
@global_var_1000bf9c.501 = constant i32 1207959640
@global_var_1000bfd8.502 = constant i32 1207959580
@global_var_1001e17c.503 = local_unnamed_addr global i32* @global_var_1000dd30.494
@global_var_1000c1cc.504 = constant i32 939524130
@global_var_1001e130.505 = global i32 0
@global_var_1001e1bc.506 = local_unnamed_addr global i32 0
@global_var_1000c260.507 = constant i32 1207960053
@global_var_1000c264.508 = constant [3 x i8] c"= \00"
@global_var_1001e000.509 = global i32 -1
@global_var_1001e1cc.510 = local_unnamed_addr global i32 0
@global_var_1001e1d0.511 = local_unnamed_addr global i32 0
@global_var_1000dc24.512 = constant [10 x i8] c"/dev/null\00"
@global_var_1001e1d4.513 = local_unnamed_addr global i32 0
@global_var_1001e1c0.515 = local_unnamed_addr global i32 0
@global_var_1001e1c4.516 = local_unnamed_addr global i32 0
@global_var_1000c800.517 = constant i32 939524096
@global_var_1000ca8c.519 = constant i32 939524118
@global_var_1000cc88.520 = constant i32 939589631
@global_var_1001e1ec.521 = local_unnamed_addr global i32 0
@global_var_1001e148.522 = global i32 0
@global_var_1000d110.523 = constant i32 939524129
@global_var_1001e1e0.524 = local_unnamed_addr global i32 0
@global_var_1000d184.525 = constant [3 x i8] c"8`\00"
@global_var_1000d1bc.526 = constant i32 939524129
@global_var_1001e1e4.527 = local_unnamed_addr global i32 0
@global_var_1001e1e8.528 = local_unnamed_addr global i32 0
@global_var_1001e004.529 = global i32 0
@global_var_1001e1f0.2 = local_unnamed_addr global i8 0
@global_var_1001e184.58 = local_unnamed_addr global i8 0
@global_var_1001e185.70 = global i8 0
@global_var_1001e020.122 = local_unnamed_addr global i8 1
@global_var_1001e198.158 = local_unnamed_addr global i8 0
@global_var_1001e1a4.184 = global i16 0
@global_var_1001e252.198 = local_unnamed_addr global i16 0
@global_var_1000d4e0.208 = constant i8 19
@global_var_1000d4e1.255 = constant i8 16

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @function_10000094() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_100000a4.1 to i32), i32* @lr, align 4
  %v0_100000a0 = call i32 @function_10000168()
  store i32 %v0_100000a0, i32* @r3, align 4
  store i32 268435624, i32* @lr, align 4
  %v1_100000a4 = call i32 @function_1000d310(i32 %v0_100000a0)
  ret i32 %v1_100000a4
}

define i32 @function_100000b8() local_unnamed_addr {
entry:
  %v3_100000cc = load i8, i8* @global_var_1001e1f0.2, align 1
  %v3_100000d4 = icmp eq i8 %v3_100000cc, 0
  br i1 %v3_100000d4, label %dec_label_pc_100000dc, label %dec_label_pc_10000134

dec_label_pc_100000dc:                            ; preds = %entry
  %v3_100000e0 = load i32, i32* bitcast (i32** @global_var_1001e01c.4 to i32*), align 4
  %v3_100000e8 = icmp eq i32 %v3_100000e0, 0
  br i1 %v3_100000e8, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_100000f0:                            ; preds = %dec_label_pc_100000dc, %dec_label_pc_100000f0
  %v0_100000f4 = phi i32 [ %v3_10000100, %dec_label_pc_100000f0 ], [ %v3_100000e0, %dec_label_pc_100000dc ]
  %v1_100000f0 = add i32 %v0_100000f4, 4
  store i32 %v1_100000f0, i32* bitcast (i32** @global_var_1001e01c.4 to i32*), align 4
  call void @__pseudo_call(i32 %v0_100000f4)
  %v3_10000100 = load i32, i32* bitcast (i32** @global_var_1001e01c.4 to i32*), align 4
  %v3_10000108 = icmp eq i32 %v3_10000100, 0
  br i1 %v3_10000108, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_10000110:                            ; preds = %dec_label_pc_100000f0, %dec_label_pc_100000dc
  store i8 1, i8* @global_var_1001e1f0.2, align 1
  br label %dec_label_pc_10000134

dec_label_pc_10000134:                            ; preds = %entry, %dec_label_pc_10000110
  ret i32 undef

; uselistorder directives
  uselistorder i32 %v3_10000100, { 1, 0 }
  uselistorder i8* @global_var_1001e1f0.2, { 1, 0 }
  uselistorder label %dec_label_pc_10000134, { 1, 0 }
  uselistorder label %dec_label_pc_100000f0, { 1, 0 }
}

define i32 @function_1000014c() local_unnamed_addr {
dec_label_pc_1000014c:
  %v0_10000164 = load i32, i32* @r3, align 4
  ret i32 %v0_10000164
}

define i32 @function_10000168() local_unnamed_addr {
dec_label_pc_10000168:
  %v3_100001a0 = load i32, i32* inttoptr (i32 268558352 to i32*), align 16
  %v3_100001ac = icmp eq i32 %v3_100001a0, 0
  br i1 %v3_100001ac, label %dec_label_pc_100001c4, label %dec_label_pc_100001b4

dec_label_pc_100001b4:                            ; preds = %dec_label_pc_10000168
  br label %dec_label_pc_100001c4

dec_label_pc_100001c4:                            ; preds = %dec_label_pc_100001b4, %dec_label_pc_10000168
  ret i32 268558352
}

define i32 @function_100001d4() local_unnamed_addr {
dec_label_pc_100001d4:
  %v0_100001ec = load i32, i32* @r3, align 4
  ret i32 %v0_100001ec
}

define i32 @entry_point(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_gt.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 0, i32* %r15.global-to-local, align 4
  store i32 0, i32* %r14.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_0, align 4
  %v0_100001f4 = load i32, i32* @r1, align 4
  %v1_100001f4 = call i32 @__asm_rlwinm(i32 %v0_100001f4, i32 0, i32 0, i32 27)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10000204 = add i32 %v1_100001f4, -16
  %v3_10000204 = inttoptr i32 %v2_10000204 to i32*
  store i32 %v1_100001f4, i32* %v3_10000204, align 4
  %v0_10000208 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10000208, i32* %lr.global-to-local, align 4
  store i32 %v0_10000208, i32* %v3_10000204, align 4
  %v2_10000210 = load i32, i32* %stack_var_0, align 4
  store i32 %v2_10000210, i32* %r4.global-to-local, align 4
  %v2_10000214 = ptrtoint i32* %stack_var_4 to i32
  store i32 268462120, i32* %r3.global-to-local, align 4
  %v7_10000234 = call i32 @function_1000c5d4(i32 268462120, i32 %v2_10000210, i32* nonnull %stack_var_4, i32 268435604, i32 268489596, i32 %arg1)
  store i32 %v7_10000234, i32* %r3.global-to-local, align 4
  %v0_10000238 = load i32, i32* @r1, align 4
  %v2_10000238 = add i32 %v0_10000238, -20896
  %v3_10000238 = inttoptr i32 %v2_10000238 to i32*
  store i32 %v0_10000238, i32* %v3_10000238, align 4
  %v0_1000023c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v0_1000023c, i32* %r0.global-to-local, align 4
  %v0_10000240 = call i32 @__asm_mfcr()
  %v0_10000244 = load i32, i32* @r29, align 4
  %v1_10000244 = load i32, i32* @r1, align 4
  %v2_10000244 = add i32 %v1_10000244, 20884
  %v3_10000244 = inttoptr i32 %v2_10000244 to i32*
  store i32 %v0_10000244, i32* %v3_10000244, align 4
  store i32 %v2_10000214, i32* %r29.global-to-local, align 4
  %v0_1000024c = load i32, i32* @r22, align 4
  %v1_1000024c = load i32, i32* @r1, align 4
  %v2_1000024c = add i32 %v1_1000024c, 20856
  %v3_1000024c = inttoptr i32 %v2_1000024c to i32*
  store i32 %v0_1000024c, i32* %v3_1000024c, align 4
  %v0_10000254 = load i32, i32* @r23, align 4
  %v1_10000254 = load i32, i32* @r1, align 4
  %v2_10000254 = add i32 %v1_10000254, 20860
  %v3_10000254 = inttoptr i32 %v2_10000254 to i32*
  store i32 %v0_10000254, i32* %v3_10000254, align 4
  store i32 %v2_10000210, i32* %r22.global-to-local, align 4
  %v0_1000025c = load i32, i32* @r28, align 4
  %v1_1000025c = load i32, i32* @r1, align 4
  %v2_1000025c = add i32 %v1_1000025c, 20880
  %v3_1000025c = inttoptr i32 %v2_1000025c to i32*
  store i32 %v0_1000025c, i32* %v3_1000025c, align 4
  store i32 268435604, i32* %r4.global-to-local, align 4
  store i32 268435604, i32* %r28.global-to-local, align 4
  store i32 %v0_10000240, i32* %r23.global-to-local, align 4
  store i32 %v2_10000214, i32* %r3.global-to-local, align 4
  %v0_10000274 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000274 = load i32, i32* @r1, align 4
  %v2_10000274 = add i32 %v1_10000274, 20900
  %v3_10000274 = inttoptr i32 %v2_10000274 to i32*
  store i32 %v0_10000274, i32* %v3_10000274, align 4
  %v1_10000278 = load i32, i32* @r1, align 4
  %v2_10000278 = add i32 %v1_10000278, 20820
  %v3_10000278 = inttoptr i32 %v2_10000278 to i32*
  store i32 %v0_10000240, i32* %v3_10000278, align 4
  %v0_1000027c = load i32, i32* @r20, align 4
  %v1_1000027c = load i32, i32* @r1, align 4
  %v2_1000027c = add i32 %v1_1000027c, 20848
  %v3_1000027c = inttoptr i32 %v2_1000027c to i32*
  store i32 %v0_1000027c, i32* %v3_1000027c, align 4
  %v0_10000280 = load i32, i32* @r1, align 4
  %v1_10000280 = add i32 %v0_10000280, 10540
  store i32 %v1_10000280, i32* %r20.global-to-local, align 4
  %v0_10000284 = load i32, i32* @r25, align 4
  %v2_10000284 = add i32 %v0_10000280, 20868
  %v3_10000284 = inttoptr i32 %v2_10000284 to i32*
  store i32 %v0_10000284, i32* %v3_10000284, align 4
  %v0_10000288 = load i32, i32* @r26, align 4
  %v1_10000288 = load i32, i32* @r1, align 4
  %v2_10000288 = add i32 %v1_10000288, 20872
  %v3_10000288 = inttoptr i32 %v2_10000288 to i32*
  store i32 %v0_10000288, i32* %v3_10000288, align 4
  %v0_1000028c = load i32, i32* @r27, align 4
  %v1_1000028c = load i32, i32* @r1, align 4
  %v2_1000028c = add i32 %v1_1000028c, 20876
  %v3_1000028c = inttoptr i32 %v2_1000028c to i32*
  store i32 %v0_1000028c, i32* %v3_1000028c, align 4
  %v0_10000290 = load i32, i32* @r31, align 4
  %v1_10000290 = load i32, i32* @r1, align 4
  %v2_10000290 = add i32 %v1_10000290, 20892
  %v3_10000290 = inttoptr i32 %v2_10000290 to i32*
  store i32 %v0_10000290, i32* %v3_10000290, align 4
  %v0_10000294 = load i32, i32* %r14.global-to-local, align 4
  %v1_10000294 = load i32, i32* @r1, align 4
  %v2_10000294 = add i32 %v1_10000294, 20824
  %v3_10000294 = inttoptr i32 %v2_10000294 to i32*
  store i32 %v0_10000294, i32* %v3_10000294, align 4
  %v0_10000298 = load i32, i32* %r15.global-to-local, align 4
  %v1_10000298 = load i32, i32* @r1, align 4
  %v2_10000298 = add i32 %v1_10000298, 20828
  %v3_10000298 = inttoptr i32 %v2_10000298 to i32*
  store i32 %v0_10000298, i32* %v3_10000298, align 4
  %v0_1000029c = load i32, i32* @r16, align 4
  %v1_1000029c = load i32, i32* @r1, align 4
  %v2_1000029c = add i32 %v1_1000029c, 20832
  %v3_1000029c = inttoptr i32 %v2_1000029c to i32*
  store i32 %v0_1000029c, i32* %v3_1000029c, align 4
  %v0_100002a0 = load i32, i32* @r17, align 4
  %v1_100002a0 = load i32, i32* @r1, align 4
  %v2_100002a0 = add i32 %v1_100002a0, 20836
  %v3_100002a0 = inttoptr i32 %v2_100002a0 to i32*
  store i32 %v0_100002a0, i32* %v3_100002a0, align 4
  %v0_100002a4 = load i32, i32* @r18, align 4
  %v1_100002a4 = load i32, i32* @r1, align 4
  %v2_100002a4 = add i32 %v1_100002a4, 20840
  %v3_100002a4 = inttoptr i32 %v2_100002a4 to i32*
  store i32 %v0_100002a4, i32* %v3_100002a4, align 4
  %v0_100002a8 = load i32, i32* @r19, align 4
  %v1_100002a8 = load i32, i32* @r1, align 4
  %v2_100002a8 = add i32 %v1_100002a8, 20844
  %v3_100002a8 = inttoptr i32 %v2_100002a8 to i32*
  store i32 %v0_100002a8, i32* %v3_100002a8, align 4
  %v0_100002ac = load i32, i32* @r21, align 4
  %v1_100002ac = load i32, i32* @r1, align 4
  %v2_100002ac = add i32 %v1_100002ac, 20852
  %v3_100002ac = inttoptr i32 %v2_100002ac to i32*
  store i32 %v0_100002ac, i32* %v3_100002ac, align 4
  %v0_100002b0 = load i32, i32* @r24, align 4
  %v1_100002b0 = load i32, i32* @r1, align 4
  %v2_100002b0 = add i32 %v1_100002b0, 20864
  %v3_100002b0 = inttoptr i32 %v2_100002b0 to i32*
  store i32 %v0_100002b0, i32* %v3_100002b0, align 4
  %v0_100002b4 = load i32, i32* @r30, align 4
  %v1_100002b4 = load i32, i32* @r1, align 4
  %v2_100002b4 = add i32 %v1_100002b4, 20888
  %v3_100002b4 = inttoptr i32 %v2_100002b4 to i32*
  store i32 %v0_100002b4, i32* %v3_100002b4, align 4
  store i32 268436156, i32* @lr, align 4
  %v5_100002b8 = call i32 @function_10001d50(i32 %v2_10000214, i32* inttoptr (i32 268435604 to i32*), i32 21, i32 0)
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v1_100002c0 = load i32, i32* @r1, align 4
  %v2_100002c0 = add i32 %v1_100002c0, 20804
  %v3_100002c0 = inttoptr i32 %v2_100002c0 to i32*
  store i32 %v5_100002b8, i32* %v3_100002c0, align 4
  %v0_100002cc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100002cc, i32* %r4.global-to-local, align 4
  store i32 %v2_10000214, i32* %r3.global-to-local, align 4
  store i32 268436184, i32* @lr, align 4
  %v5_100002d4 = inttoptr i32 %v0_100002cc to i32*
  %v6_100002d4 = call i32 @function_10001d50(i32 %v2_10000214, i32* %v5_100002d4, i32 20, i32 ptrtoint ([4 x i8]* @global_var_1000d3dc.7 to i32))
  %v0_100002d8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100002d8, i32* %r4.global-to-local, align 4
  store i32 %v6_100002d4, i32* %r25.global-to-local, align 4
  store i32 %v2_10000214, i32* %r3.global-to-local, align 4
  store i32 268436208, i32* @lr, align 4
  %v4_100002ec = inttoptr i32 %v0_100002d8 to i32*
  %v5_100002ec = call i32 @function_10001d50(i32 %v2_10000214, i32* %v4_100002ec, i32 8, i32 0)
  store i32 %v5_100002ec, i32* %r26.global-to-local, align 4
  %v0_10000300 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10000300, i32* %r4.global-to-local, align 4
  store i32 %v2_10000214, i32* %r3.global-to-local, align 4
  store i32 268436236, i32* @lr, align 4
  %v4_10000308 = inttoptr i32 %v0_10000300 to i32*
  %v5_10000308 = call i32 @function_10001d50(i32 %v2_10000214, i32* %v4_10000308, i32 22, i32 ptrtoint (i32* @global_var_1000d3e0.8 to i32))
  %v0_1000030c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000030c, i32* %r4.global-to-local, align 4
  store i32 %v5_10000308, i32* %r27.global-to-local, align 4
  store i32 %v2_10000214, i32* %r3.global-to-local, align 4
  store i32 268436260, i32* @lr, align 4
  %v4_10000320 = inttoptr i32 %v0_1000030c to i32*
  %v5_10000320 = call i32 @function_1000235c(i32 %v2_10000214, i32* %v4_10000320, i32 24, i32 1)
  %v0_10000324 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10000324, i32* %r4.global-to-local, align 4
  store i32 %v5_10000320, i32* %r31.global-to-local, align 4
  store i32 %v2_10000214, i32* %r3.global-to-local, align 4
  store i32 268436284, i32* @lr, align 4
  %v4_10000338 = inttoptr i32 %v0_10000324 to i32*
  %v5_10000338 = call i32 @function_1000235c(i32 %v2_10000214, i32* %v4_10000338, i32 7, i32 80)
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_10000340 = urem i32 %v5_10000338, 65536
  %v1_10000348 = load i32, i32* @r1, align 4
  %v2_10000348 = add i32 %v1_10000348, 20800
  %v3_10000348 = inttoptr i32 %v2_10000348 to i32*
  store i32 %v1_10000340, i32* %v3_10000348, align 4
  %v0_1000034c = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_1000034c, i32* %r3.global-to-local, align 4
  store i32 268436308, i32* @lr, align 4
  %v3_10000350 = call i32 @function_1000b22c(i32 %v0_1000034c, i32 0, i32 10241)
  store i32 %v3_10000350, i32* %r3.global-to-local, align 4
  %v0_10000354 = load i32, i32* %r26.global-to-local, align 4
  %v1_10000354 = icmp slt i32 %v0_10000354, 0
  %v2_10000354 = icmp sgt i32 %v0_10000354, 0
  %v3_10000354 = icmp eq i32 %v0_10000354, 0
  store i1 %v1_10000354, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000354, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000354, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000354, label %dec_label_pc_10000374, label %dec_label_pc_1000035c

dec_label_pc_1000035c:                            ; preds = %entry
  %v0_1000035c = load i32, i32* %r27.global-to-local, align 4
  %v1_1000035c = icmp slt i32 %v0_1000035c, 0
  %v2_1000035c = icmp sgt i32 %v0_1000035c, 0
  %v3_1000035c = icmp eq i32 %v0_1000035c, 0
  store i1 %v1_1000035c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000035c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000035c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000035c, label %dec_label_pc_10000374, label %dec_label_pc_10000364

dec_label_pc_10000364:                            ; preds = %dec_label_pc_1000035c
  store i32 %v0_1000035c, i32* %r3.global-to-local, align 4
  store i32 268436332, i32* @lr, align 4
  %v1_10000368 = inttoptr i32 %v0_1000035c to i8*
  %v2_10000368 = call i32 @function_1000a100(i8* %v1_10000368)
  store i32 %v2_10000368, i32* %r3.global-to-local, align 4
  %v1_1000036c = icmp slt i32 %v2_10000368, 255
  %v2_1000036c = icmp sgt i32 %v2_10000368, 255
  %v3_1000036c = icmp eq i32 %v2_10000368, 255
  store i1 %v1_1000036c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000036c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000036c, i1* %cr7_eq.global-to-local, align 1
  %tmp65 = icmp slt i32 %v2_10000368, 256
  br i1 %tmp65, label %dec_label_pc_100003d4, label %dec_label_pc_10000374

dec_label_pc_10000374:                            ; preds = %dec_label_pc_100003e4, %dec_label_pc_100003d4, %dec_label_pc_10000364, %dec_label_pc_1000035c, %entry
  %v0_10000374 = load i32, i32* @r1, align 4
  %v1_10000374 = add i32 %v0_10000374, 20900
  %v2_10000374 = inttoptr i32 %v1_10000374 to i32*
  %v3_10000374 = load i32, i32* %v2_10000374, align 4
  store i32 %v3_10000374, i32* %r0.global-to-local, align 4
  %v1_10000378 = add i32 %v0_10000374, 20820
  %v2_10000378 = inttoptr i32 %v1_10000378 to i32*
  %v3_10000378 = load i32, i32* %v2_10000378, align 4
  %v1_1000037c = add i32 %v0_10000374, 20824
  %v2_1000037c = inttoptr i32 %v1_1000037c to i32*
  %v3_1000037c = load i32, i32* %v2_1000037c, align 4
  store i32 %v3_1000037c, i32* %r14.global-to-local, align 4
  store i32 %v3_10000374, i32* %lr.global-to-local, align 4
  %v1_10000384 = add i32 %v0_10000374, 20828
  %v2_10000384 = inttoptr i32 %v1_10000384 to i32*
  %v3_10000384 = load i32, i32* %v2_10000384, align 4
  store i32 %v3_10000384, i32* %r15.global-to-local, align 4
  %v1_10000388 = call %0 @__asm_mtcrf(i32 24, i32 %v3_10000378)
  %v0_1000038c = load i32, i32* @r1, align 4
  %v1_1000038c = add i32 %v0_1000038c, 20832
  %v2_1000038c = inttoptr i32 %v1_1000038c to i32*
  %v3_1000038c = load i32, i32* %v2_1000038c, align 4
  store i32 %v3_1000038c, i32* %r16.global-to-local, align 4
  %v1_10000390 = add i32 %v0_1000038c, 20836
  %v2_10000390 = inttoptr i32 %v1_10000390 to i32*
  %v3_10000390 = load i32, i32* %v2_10000390, align 4
  store i32 %v3_10000390, i32* %r17.global-to-local, align 4
  %v1_10000394 = add i32 %v0_1000038c, 20840
  %v2_10000394 = inttoptr i32 %v1_10000394 to i32*
  %v3_10000394 = load i32, i32* %v2_10000394, align 4
  store i32 %v3_10000394, i32* %r18.global-to-local, align 4
  %v1_10000398 = add i32 %v0_1000038c, 20844
  %v2_10000398 = inttoptr i32 %v1_10000398 to i32*
  %v3_10000398 = load i32, i32* %v2_10000398, align 4
  store i32 %v3_10000398, i32* %r19.global-to-local, align 4
  %v1_1000039c = add i32 %v0_1000038c, 20848
  %v2_1000039c = inttoptr i32 %v1_1000039c to i32*
  %v3_1000039c = load i32, i32* %v2_1000039c, align 4
  store i32 %v3_1000039c, i32* %r20.global-to-local, align 4
  %v1_100003a0 = add i32 %v0_1000038c, 20852
  %v2_100003a0 = inttoptr i32 %v1_100003a0 to i32*
  %v3_100003a0 = load i32, i32* %v2_100003a0, align 4
  store i32 %v3_100003a0, i32* %r21.global-to-local, align 4
  %v1_100003a4 = add i32 %v0_1000038c, 20856
  %v2_100003a4 = inttoptr i32 %v1_100003a4 to i32*
  %v3_100003a4 = load i32, i32* %v2_100003a4, align 4
  store i32 %v3_100003a4, i32* %r22.global-to-local, align 4
  %v1_100003a8 = add i32 %v0_1000038c, 20860
  %v2_100003a8 = inttoptr i32 %v1_100003a8 to i32*
  %v3_100003a8 = load i32, i32* %v2_100003a8, align 4
  store i32 %v3_100003a8, i32* %r23.global-to-local, align 4
  %v1_100003ac = add i32 %v0_1000038c, 20864
  %v2_100003ac = inttoptr i32 %v1_100003ac to i32*
  %v3_100003ac = load i32, i32* %v2_100003ac, align 4
  store i32 %v3_100003ac, i32* %r24.global-to-local, align 4
  %v1_100003b0 = add i32 %v0_1000038c, 20868
  %v2_100003b0 = inttoptr i32 %v1_100003b0 to i32*
  %v3_100003b0 = load i32, i32* %v2_100003b0, align 4
  store i32 %v3_100003b0, i32* %r25.global-to-local, align 4
  %v1_100003b4 = add i32 %v0_1000038c, 20872
  %v2_100003b4 = inttoptr i32 %v1_100003b4 to i32*
  %v3_100003b4 = load i32, i32* %v2_100003b4, align 4
  store i32 %v3_100003b4, i32* %r26.global-to-local, align 4
  %v1_100003b8 = add i32 %v0_1000038c, 20876
  %v2_100003b8 = inttoptr i32 %v1_100003b8 to i32*
  %v3_100003b8 = load i32, i32* %v2_100003b8, align 4
  store i32 %v3_100003b8, i32* %r27.global-to-local, align 4
  %v1_100003bc = add i32 %v0_1000038c, 20880
  %v2_100003bc = inttoptr i32 %v1_100003bc to i32*
  %v3_100003bc = load i32, i32* %v2_100003bc, align 4
  store i32 %v3_100003bc, i32* %r28.global-to-local, align 4
  %v1_100003c0 = add i32 %v0_1000038c, 20884
  %v2_100003c0 = inttoptr i32 %v1_100003c0 to i32*
  %v3_100003c0 = load i32, i32* %v2_100003c0, align 4
  store i32 %v3_100003c0, i32* %r29.global-to-local, align 4
  %v1_100003c4 = add i32 %v0_1000038c, 20888
  %v2_100003c4 = inttoptr i32 %v1_100003c4 to i32*
  %v3_100003c4 = load i32, i32* %v2_100003c4, align 4
  store i32 %v3_100003c4, i32* %r30.global-to-local, align 4
  %v1_100003c8 = add i32 %v0_1000038c, 20892
  %v2_100003c8 = inttoptr i32 %v1_100003c8 to i32*
  %v3_100003c8 = load i32, i32* %v2_100003c8, align 4
  store i32 %v3_100003c8, i32* %r31.global-to-local, align 4
  %v0_100003d0 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100003d0

dec_label_pc_100003d4:                            ; preds = %dec_label_pc_10000364
  %v0_100003d4 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_100003d4, i32* %r3.global-to-local, align 4
  store i32 268436444, i32* @lr, align 4
  %v1_100003d8 = inttoptr i32 %v0_100003d4 to i8*
  %v2_100003d8 = call i32 @function_1000a100(i8* %v1_100003d8)
  store i32 %v2_100003d8, i32* %r3.global-to-local, align 4
  %v1_100003dc = icmp slt i32 %v2_100003d8, 127
  %v2_100003dc = icmp sgt i32 %v2_100003d8, 127
  %v3_100003dc = icmp eq i32 %v2_100003d8, 127
  store i1 %v1_100003dc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100003dc, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100003dc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_100003dc, label %dec_label_pc_10000374, label %dec_label_pc_100003e4

dec_label_pc_100003e4:                            ; preds = %dec_label_pc_100003d4
  %v0_100003e4 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_100003e4, i32* %r3.global-to-local, align 4
  store i32 268436460, i32* @lr, align 4
  %v1_100003e8 = inttoptr i32 %v0_100003e4 to i8*
  %v2_100003e8 = call i32 @function_1000a100(i8* %v1_100003e8)
  store i32 %v2_100003e8, i32* %r3.global-to-local, align 4
  %v1_100003ec = icmp slt i32 %v2_100003e8, 9
  %v2_100003ec = icmp sgt i32 %v2_100003e8, 9
  %v3_100003ec = icmp eq i32 %v2_100003e8, 9
  store i1 %v1_100003ec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100003ec, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100003ec, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_100003ec, label %dec_label_pc_10000374, label %dec_label_pc_100003f4

dec_label_pc_100003f4:                            ; preds = %dec_label_pc_100003e4
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_100003f8 = load i32, i32* @r1, align 4
  %v2_100003f8 = add i32 %v1_100003f8, 8
  %v3_100003f8 = inttoptr i32 %v2_100003f8 to i32*
  store i32 0, i32* %v3_100003f8, align 4
  br label %dec_label_pc_100003fc

dec_label_pc_100003fc:                            ; preds = %dec_label_pc_10000430, %dec_label_pc_100003f4
  %v0_100003fc = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_100003fc, i32* %r3.global-to-local, align 4
  store i32 268436484, i32* @lr, align 4
  %v1_10000400 = inttoptr i32 %v0_100003fc to i8*
  %v2_10000400 = call i32 @function_1000a100(i8* %v1_10000400)
  store i32 %v2_10000400, i32* %r3.global-to-local, align 4
  %v0_10000404 = load i32, i32* @r1, align 4
  %v1_10000404 = add i32 %v0_10000404, 8
  %v2_10000404 = inttoptr i32 %v1_10000404 to i32*
  %v3_10000404 = load i32, i32* %v2_10000404, align 4
  store i32 %v3_10000404, i32* %r11.global-to-local, align 4
  %v2_10000408 = icmp slt i32 %v2_10000400, %v3_10000404
  %v3_10000408 = icmp sgt i32 %v2_10000400, %v3_10000404
  %v4_10000408 = icmp eq i32 %v2_10000400, %v3_10000404
  store i1 %v2_10000408, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10000408, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_10000408, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000408, label %dec_label_pc_10000410, label %dec_label_pc_1000043c

dec_label_pc_10000410:                            ; preds = %dec_label_pc_100003fc
  %v0_10000410 = load i32, i32* %r25.global-to-local, align 4
  %v2_10000410 = add i32 %v0_10000410, %v3_10000404
  %v3_10000410 = inttoptr i32 %v2_10000410 to i8*
  %v4_10000410 = load i8, i8* %v3_10000410, align 1
  %v5_10000410 = zext i8 %v4_10000410 to i32
  store i32 %v5_10000410, i32* %r9.global-to-local, align 4
  %v1_10000414 = add nuw nsw i32 %v5_10000410, 159
  %v1_10000418 = urem i32 %v1_10000414, 256
  store i32 %v1_10000418, i32* %r0.global-to-local, align 4
  %v1_1000041c = icmp ult i32 %v1_10000418, 25
  %v2_1000041c = icmp ugt i32 %v1_10000418, 25
  %v3_1000041c = icmp eq i32 %v1_10000418, 25
  store i1 %v1_1000041c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000041c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000041c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1000041c, label %dec_label_pc_10000430, label %dec_label_pc_10000424

dec_label_pc_10000424:                            ; preds = %dec_label_pc_10000410
  %v1_10000424 = add nsw i32 %v5_10000410, -32
  store i32 %v1_10000424, i32* %r0.global-to-local, align 4
  %v3_10000428 = trunc i32 %v1_10000424 to i8
  store i8 %v3_10000428, i8* %v3_10000410, align 1
  %v0_1000042c = load i32, i32* @r1, align 4
  %v1_1000042c = add i32 %v0_1000042c, 8
  %v2_1000042c = inttoptr i32 %v1_1000042c to i32*
  %v3_1000042c = load i32, i32* %v2_1000042c, align 4
  store i32 %v3_1000042c, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10000430

dec_label_pc_10000430:                            ; preds = %dec_label_pc_10000410, %dec_label_pc_10000424
  %v1_10000434 = phi i32 [ %v0_10000404, %dec_label_pc_10000410 ], [ %v0_1000042c, %dec_label_pc_10000424 ]
  %v0_10000430 = phi i32 [ %v3_10000404, %dec_label_pc_10000410 ], [ %v3_1000042c, %dec_label_pc_10000424 ]
  %v1_10000430 = add i32 %v0_10000430, 1
  store i32 %v1_10000430, i32* %r11.global-to-local, align 4
  %v2_10000434 = add i32 %v1_10000434, 8
  %v3_10000434 = inttoptr i32 %v2_10000434 to i32*
  store i32 %v1_10000430, i32* %v3_10000434, align 4
  br label %dec_label_pc_100003fc

dec_label_pc_1000043c:                            ; preds = %dec_label_pc_100003fc
  %v0_1000043c = load i32, i32* %r31.global-to-local, align 4
  %v1_1000043c = icmp slt i32 %v0_1000043c, 256
  %v2_1000043c = icmp sgt i32 %v0_1000043c, 256
  %v3_1000043c = icmp eq i32 %v0_1000043c, 256
  store i1 %v1_1000043c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000043c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000043c, i1* %cr7_eq.global-to-local, align 1
  %v0_10000440. = select i1 %v2_1000043c, i32 256, i32 %v0_1000043c
  store i32 %v0_10000440., i32* %r21.global-to-local, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  %v1_10000450 = icmp slt i32 %v0_10000440., 0
  %v3_10000450 = icmp eq i32 %v0_10000440., 0
  store i1 %v1_10000450, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10000450, i1* %cr4_eq.global-to-local, align 1
  store i32 ptrtoint ([3 x i8]* @global_var_10000458.9 to i32), i32* @lr, align 4
  %v1_10000454 = call i32 @function_10009880(i32 36)
  store i32 37, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000460.10 to i32), i32* @lr, align 4
  %v1_1000045c = call i32 @function_10009880(i32 37)
  store i32 38, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000468.11 to i32), i32* @lr, align 4
  %v1_10000464 = call i32 @function_10009880(i32 38)
  store i32 39, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000470.12 to i32), i32* @lr, align 4
  %v1_1000046c = call i32 @function_10009880(i32 39)
  store i32 40, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000478.13 to i32), i32* @lr, align 4
  %v1_10000474 = call i32 @function_10009880(i32 40)
  store i32 41, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000480.14 to i32), i32* @lr, align 4
  %v1_1000047c = call i32 @function_10009880(i32 41)
  store i32 42, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000488.15 to i32), i32* @lr, align 4
  %v1_10000484 = call i32 @function_10009880(i32 42)
  store i32 43, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000490.16 to i32), i32* @lr, align 4
  %v1_1000048c = call i32 @function_10009880(i32 43)
  store i32 44, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000498.17 to i32), i32* @lr, align 4
  %v1_10000494 = call i32 @function_10009880(i32 44)
  store i32 45, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100004a0.18 to i32), i32* @lr, align 4
  %v1_1000049c = call i32 @function_10009880(i32 45)
  store i32 46, i32* %r3.global-to-local, align 4
  store i32 268436648, i32* @lr, align 4
  %v1_100004a4 = call i32 @function_10009880(i32 46)
  %v0_100004a8 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_100004a8, i32* %r3.global-to-local, align 4
  store i32 3140, i32* %r4.global-to-local, align 4
  store i32 268436660, i32* @lr, align 4
  %v2_100004b0 = call i32 @function_1000bae4(i32 %v0_100004a8, i32 3140)
  store i32 %v2_100004b0, i32* %r3.global-to-local, align 4
  %v1_100004b4 = load i32, i32* @r1, align 4
  %v2_100004b4 = add i32 %v1_100004b4, 20796
  %v3_100004b4 = inttoptr i32 %v2_100004b4 to i32*
  store i32 %v2_100004b0, i32* %v3_100004b4, align 4
  %v0_100004b8 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100004b8 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_100004b8 = or i1 %v0_100004b8, %v1_100004b8
  br i1 %v2_100004b8, label %dec_label_pc_100005b4, label %dec_label_pc_100004bc

dec_label_pc_100004bc:                            ; preds = %dec_label_pc_1000043c
  store i32 %v2_100004b0, i32* @r31, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  store i32 268500992, i32* %r19.global-to-local, align 4
  br label %dec_label_pc_100004c8

dec_label_pc_100004c8:                            ; preds = %dec_label_pc_10001c70.dec_label_pc_100004c8_crit_edge, %dec_label_pc_100004bc
  %v2_100004d4 = phi i32 [ %v2_100004d4.pre, %dec_label_pc_10001c70.dec_label_pc_100004c8_crit_edge ], [ %v2_100004b0, %dec_label_pc_100004bc ]
  %v0_100004c8 = phi i32 [ %v1_10001c84, %dec_label_pc_10001c70.dec_label_pc_100004c8_crit_edge ], [ 0, %dec_label_pc_100004bc ]
  %v1_100004c8 = load i32, i32* %r23.global-to-local, align 4
  %v2_100004c8 = sdiv i32 %v0_100004c8, %v1_100004c8
  store i32 %v2_100004c8, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 -1, i32* %r11.global-to-local, align 4
  %v3_100004d4 = add i32 %v2_100004d4, 4
  %v4_100004d4 = inttoptr i32 %v3_100004d4 to i8*
  store i8 0, i8* %v4_100004d4, align 1
  %v0_100004d8 = load i32, i32* %r11.global-to-local, align 4
  %v1_100004d8 = load i32, i32* @r31, align 4
  %v2_100004d8 = inttoptr i32 %v1_100004d8 to i32*
  store i32 %v0_100004d8, i32* %v2_100004d8, align 4
  %v0_100004dc = load i32, i32* @r31, align 4
  %v1_100004dc = add i32 %v0_100004dc, 532
  store i32 %v1_100004dc, i32* %r24.global-to-local, align 4
  store i32 %v1_100004dc, i32* @r3, align 4
  %v0_100004e4 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_100004e4, i32* %r4.global-to-local, align 4
  %v0_100004e8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100004e8 = load i32, i32* %r23.global-to-local, align 4
  %v2_100004e8 = mul i32 %v1_100004e8, %v0_100004e8
  %v1_100004ec = load i32, i32* %r28.global-to-local, align 4
  %v2_100004ec = sub i32 %v1_100004ec, %v2_100004e8
  %v1_100004f0 = mul i32 %v2_100004ec, 24
  store i32 %v1_100004f0, i32* %r0.global-to-local, align 4
  %v1_100004f4 = load i32, i32* %r22.global-to-local, align 4
  %v2_100004f4 = add i32 %v1_100004f4, %v1_100004f0
  store i32 %v2_100004f4, i32* %r30.global-to-local, align 4
  %v1_100004f8 = add i32 %v2_100004f4, 16
  %v2_100004f8 = inttoptr i32 %v1_100004f8 to i32*
  %v3_100004f8 = load i32, i32* %v2_100004f8, align 4
  store i32 %v3_100004f8, i32* %r9.global-to-local, align 4
  %v2_100004fc = add i32 %v0_100004dc, 16
  %v3_100004fc = inttoptr i32 %v2_100004fc to i32*
  store i32 %v3_100004f8, i32* %v3_100004fc, align 4
  store i32 268436740, i32* %lr.global-to-local, align 4
  %v2_10000500 = inttoptr i32 %v1_100004dc to i8*
  %v3_10000500 = call i32 @function_1000a128(i8* %v2_10000500, i32 %v0_100004e4)
  store i32 %v3_10000500, i32* %r3.global-to-local, align 4
  %v0_10000504 = load i32, i32* @r31, align 4
  %v1_10000504 = add i32 %v0_10000504, 532
  %v2_10000504 = inttoptr i32 %v1_10000504 to i8*
  %v3_10000504 = load i8, i8* %v2_10000504, align 1
  %v4_10000504 = zext i8 %v3_10000504 to i32
  store i32 %v4_10000504, i32* %r0.global-to-local, align 4
  %v1_10000508 = icmp ult i8 %v3_10000504, 47
  %v2_10000508 = icmp ugt i8 %v3_10000504, 47
  %v3_10000508 = icmp eq i8 %v3_10000504, 47
  store i1 %v1_10000508, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000508, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000508, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000508, label %dec_label_pc_10000530, label %dec_label_pc_10000510

dec_label_pc_10000510:                            ; preds = %dec_label_pc_100004c8
  %v0_10000510 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000510, i32* %r3.global-to-local, align 4
  store i32 268436760, i32* @lr, align 4
  %v1_10000514 = inttoptr i32 %v0_10000510 to i8*
  %v2_10000514 = call i32 @function_1000a100(i8* %v1_10000514)
  %v0_10000518 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000518, i32* %r4.global-to-local, align 4
  %v0_10000520 = load i32, i32* @r31, align 4
  %v1_10000520 = add i32 %v0_10000520, 533
  store i32 %v1_10000520, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10000528.19 to i32), i32* @lr, align 4
  %v3_10000524 = call i32 @function_1000b188(i32 %v1_10000520, i32 %v0_10000518, i32 %v2_10000514)
  store i32 %v3_10000524, i32* %r3.global-to-local, align 4
  store i32 47, i32* %r0.global-to-local, align 4
  %v2_1000052c = load i32, i32* @r31, align 4
  %v3_1000052c = add i32 %v2_1000052c, 532
  %v4_1000052c = inttoptr i32 %v3_1000052c to i8*
  store i8 47, i8* %v4_1000052c, align 1
  %v0_10000534.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10000530

dec_label_pc_10000530:                            ; preds = %dec_label_pc_100004c8, %dec_label_pc_10000510
  %v0_10000534 = phi i32 [ %v0_10000504, %dec_label_pc_100004c8 ], [ %v0_10000534.pre, %dec_label_pc_10000510 ]
  %v0_10000530 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10000530, i32* %r4.global-to-local, align 4
  %v1_10000534 = add i32 %v0_10000534, 1440
  store i32 %v1_10000534, i32* @r3, align 4
  store i32 268436796, i32* %lr.global-to-local, align 4
  %v2_10000538 = inttoptr i32 %v1_10000534 to i8*
  %v3_10000538 = call i32 @function_1000a128(i8* %v2_10000538, i32 %v0_10000530)
  %v0_1000053c = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_1000053c, i32* %r4.global-to-local, align 4
  %v0_10000540 = load i32, i32* @r31, align 4
  %v1_10000540 = add i32 %v0_10000540, 1431
  store i32 %v1_10000540, i32* @r3, align 4
  store i32 268436808, i32* %lr.global-to-local, align 4
  %v2_10000544 = inttoptr i32 %v1_10000540 to i8*
  %v3_10000544 = call i32 @function_1000a128(i8* %v2_10000544, i32 %v0_1000053c)
  %v0_10000548 = load i32, i32* @r31, align 4
  %v1_10000548 = add i32 %v0_10000548, 789
  store i32 %v1_10000548, i32* @r3, align 4
  %v0_1000054c = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_1000054c, i32* %r4.global-to-local, align 4
  store i32 268436820, i32* %lr.global-to-local, align 4
  %v2_10000550 = inttoptr i32 %v1_10000548 to i8*
  %v3_10000550 = call i32 @function_1000a128(i8* %v2_10000550, i32 %v0_1000054c)
  store i32 %v3_10000550, i32* %r3.global-to-local, align 4
  %v0_10000554 = load i32, i32* %r30.global-to-local, align 4
  %v1_10000554 = add i32 %v0_10000554, 20
  %v2_10000554 = inttoptr i32 %v1_10000554 to i8*
  %v3_10000554 = load i8, i8* %v2_10000554, align 1
  %v4_10000554 = zext i8 %v3_10000554 to i32
  store i32 %v4_10000554, i32* %r0.global-to-local, align 4
  %v1_10000558 = icmp ult i8 %v3_10000554, 31
  %v2_10000558 = icmp ugt i8 %v3_10000554, 31
  %v3_10000558 = icmp eq i8 %v3_10000554, 31
  store i1 %v1_10000558, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000558, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000558, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10000558, label %dec_label_pc_10000578, label %dec_label_pc_10000560

dec_label_pc_10000560:                            ; preds = %dec_label_pc_10000530
  %v1_10000560 = add i32 %v0_10000554, 16
  %v2_10000560 = inttoptr i32 %v1_10000560 to i32*
  %v3_10000560 = load i32, i32* %v2_10000560, align 4
  store i32 %v3_10000560, i32* %r29.global-to-local, align 4
  store i32 268436840, i32* %lr.global-to-local, align 4
  %v0_10000564 = call i32 @function_1000723c()
  store i32 %v0_10000564, i32* %r3.global-to-local, align 4
  %v0_10000568 = load i32, i32* %r30.global-to-local, align 4
  %v1_10000568 = add i32 %v0_10000568, 20
  %v2_10000568 = inttoptr i32 %v1_10000568 to i8*
  %v3_10000568 = load i8, i8* %v2_10000568, align 1
  %v4_10000568 = zext i8 %v3_10000568 to i32
  store i32 %v4_10000568, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10000568, 64
  %v2_1000056c = zext i8 %tmp to i32
  %v3_1000056c = lshr i32 %v0_10000564, %v2_1000056c
  store i32 %v3_1000056c, i32* %r3.global-to-local, align 4
  %v0_10000570 = load i32, i32* %r29.global-to-local, align 4
  %v2_10000570 = add i32 %v3_1000056c, %v0_10000570
  store i32 %v2_10000570, i32* %r29.global-to-local, align 4
  %v1_10000574 = load i32, i32* @r31, align 4
  %v2_10000574 = add i32 %v1_10000574, 16
  %v3_10000574 = inttoptr i32 %v2_10000574 to i32*
  store i32 %v2_10000570, i32* %v3_10000574, align 4
  br label %dec_label_pc_10000578

dec_label_pc_10000578:                            ; preds = %dec_label_pc_10000530, %dec_label_pc_10000560
  store i32 ptrtoint (i32* @global_var_1000057c.20 to i32), i32* %lr.global-to-local, align 4
  %v0_10000578 = call i32 @function_1000723c()
  %v1_10000578 = sext i32 %v0_10000578 to i64
  %v5_10000584 = mul nuw nsw i64 %v1_10000578, 3435973837
  %v1_100005881 = udiv i64 %v5_10000584, 17179869184
  %v1_10000588 = trunc i64 %v1_100005881 to i32
  %v1_1000058c = mul i32 %v1_10000588, 5
  store i32 %v1_1000058c, i32* %r0.global-to-local, align 4
  %v3_10000590 = sub i32 %v0_10000578, %v1_1000058c
  store i32 %v3_10000590, i32* %r3.global-to-local, align 4
  %v1_10000594 = icmp ult i32 %v3_10000590, 4
  %v2_10000594 = icmp ugt i32 %v3_10000590, 4
  %v3_10000594 = icmp eq i32 %v3_10000590, 4
  store i1 %v1_10000594, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000594, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000594, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10000594, label %dec_label_pc_10001c70, label %dec_label_pc_1000059c

dec_label_pc_1000059c:                            ; preds = %dec_label_pc_10000578
  store i32 ptrtoint (i32* @global_var_1000d424.21 to i32), i32* %r9.global-to-local, align 4
  %v1_100005a0 = mul i32 %v3_10000590, 4
  store i32 %v1_100005a0, i32* %r11.global-to-local, align 4
  %v2_100005a4 = add i32 %v1_100005a0, ptrtoint (i32* @global_var_1000d424.21 to i32)
  %v3_100005a4 = inttoptr i32 %v2_100005a4 to i32*
  %v4_100005a4 = load i32, i32* %v3_100005a4, align 4
  %v2_100005a8 = add i32 %v4_100005a4, ptrtoint (i32* @global_var_1000d424.21 to i32)
  store i32 %v2_100005a8, i32* %r0.global-to-local, align 4
  store i32 %v2_100005a8, i32* %ctr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v2_100005a8)
  br label %dec_label_pc_100005b4

dec_label_pc_100005b4:                            ; preds = %dec_label_pc_1000043c, %dec_label_pc_1000059c
  %v0_100005b4 = load i32, i32* @r1, align 4
  %v1_100005b4 = add i32 %v0_100005b4, 20804
  %v2_100005b4 = inttoptr i32 %v1_100005b4 to i32*
  %v3_100005b4 = load i32, i32* %v2_100005b4, align 4
  store i32 %v3_100005b4, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100005c4.preheader

dec_label_pc_100005c4.preheader:                  ; preds = %dec_label_pc_100005b4, %dec_label_pc_10001c8c
  %storemerge10.in = phi i32 [ %v0_100005b4, %dec_label_pc_100005b4 ], [ %v0_10001c8c, %dec_label_pc_10001c8c ]
  %storemerge9.in = phi i32 [ %v3_100005b4, %dec_label_pc_100005b4 ], [ %v3_10001c8c, %dec_label_pc_10001c8c ]
  %storemerge11 = add i32 %storemerge10.in, 8
  store i32 %storemerge11, i32* %r18.global-to-local, align 4
  %storemerge10 = add i32 %storemerge10.in, 300
  store i32 %storemerge10, i32* %r22.global-to-local, align 4
  %storemerge = icmp eq i32 %storemerge9.in, 0
  store i1 %storemerge, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_100005c4

dec_label_pc_100005c4:                            ; preds = %dec_label_pc_1000079c, %dec_label_pc_10000794, %dec_label_pc_10000610, %dec_label_pc_10000824, %dec_label_pc_100005c4.preheader
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100005cc.22 to i32), i32* @lr, align 4
  %v0_100005c8 = call i32 @function_1000ad5c()
  store i32 %v0_100005c8, i32* %r3.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 %v0_100005c8, i32* %r25.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 44, i32* %r11.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v2_100005e897 = load i32, i32* @r1, align 4
  %v3_100005e898 = add i32 %v2_100005e897, 44
  %v4_100005e899 = inttoptr i32 %v3_100005e898 to i32*
  store i32 0, i32* %v4_100005e899, align 4
  %v0_100005ec100 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100005ec101 = add i32 %v0_100005ec100, -1
  store i32 %v1_100005ec101, i32* %ctr.global-to-local, align 4
  %v2_100005ec102 = icmp eq i32 %v1_100005ec101, 0
  br i1 %v2_100005ec102, label %dec_label_pc_100005f0, label %dec_label_pc_100005e0.dec_label_pc_100005e0_crit_edge

dec_label_pc_100005e0.dec_label_pc_100005e0_crit_edge: ; preds = %dec_label_pc_100005c4, %dec_label_pc_100005e0.dec_label_pc_100005e0_crit_edge
  %v0_100005e0.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_100005e8.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_100005e0 = add i32 %v0_100005e0.pre, 44
  store i32 %v1_100005e0, i32* %r11.global-to-local, align 4
  %v1_100005e4 = add i32 %v0_100005e0.pre, 4
  store i32 %v1_100005e4, i32* %r9.global-to-local, align 4
  %v2_100005e8 = load i32, i32* @r1, align 4
  %v3_100005e8 = add i32 %v2_100005e8, %v1_100005e0
  %v4_100005e8 = inttoptr i32 %v3_100005e8 to i32*
  store i32 %v0_100005e8.pre, i32* %v4_100005e8, align 4
  %v0_100005ec = load i32, i32* %ctr.global-to-local, align 4
  %v1_100005ec = add i32 %v0_100005ec, -1
  store i32 %v1_100005ec, i32* %ctr.global-to-local, align 4
  %v2_100005ec = icmp eq i32 %v1_100005ec, 0
  br i1 %v2_100005ec, label %dec_label_pc_100005f0, label %dec_label_pc_100005e0.dec_label_pc_100005e0_crit_edge

dec_label_pc_100005f0:                            ; preds = %dec_label_pc_100005e0.dec_label_pc_100005e0_crit_edge, %dec_label_pc_100005c4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 172, i32* %r11.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v2_10000608103 = load i32, i32* @r1, align 4
  %v3_10000608104 = add i32 %v2_10000608103, 172
  %v4_10000608105 = inttoptr i32 %v3_10000608104 to i32*
  store i32 0, i32* %v4_10000608105, align 4
  %v0_1000060c106 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000060c107 = add i32 %v0_1000060c106, -1
  store i32 %v1_1000060c107, i32* %ctr.global-to-local, align 4
  %v2_1000060c108 = icmp eq i32 %v1_1000060c107, 0
  br i1 %v2_1000060c108, label %dec_label_pc_10000610, label %dec_label_pc_10000600.dec_label_pc_10000600_crit_edge

dec_label_pc_10000600.dec_label_pc_10000600_crit_edge: ; preds = %dec_label_pc_100005f0, %dec_label_pc_10000600.dec_label_pc_10000600_crit_edge
  %v0_10000600.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_10000608.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_10000600 = add i32 %v0_10000600.pre, 172
  store i32 %v1_10000600, i32* %r11.global-to-local, align 4
  %v1_10000604 = add i32 %v0_10000600.pre, 4
  store i32 %v1_10000604, i32* %r9.global-to-local, align 4
  %v2_10000608 = load i32, i32* @r1, align 4
  %v3_10000608 = add i32 %v2_10000608, %v1_10000600
  %v4_10000608 = inttoptr i32 %v3_10000608 to i32*
  store i32 %v0_10000608.pre, i32* %v4_10000608, align 4
  %v0_1000060c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000060c = add i32 %v0_1000060c, -1
  store i32 %v1_1000060c, i32* %ctr.global-to-local, align 4
  %v2_1000060c = icmp eq i32 %v1_1000060c, 0
  br i1 %v2_1000060c, label %dec_label_pc_10000610, label %dec_label_pc_10000600.dec_label_pc_10000600_crit_edge

dec_label_pc_10000610:                            ; preds = %dec_label_pc_10000600.dec_label_pc_10000600_crit_edge, %dec_label_pc_100005f0
  %v0_10000610 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10000610 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10000610 = or i1 %v0_10000610, %v1_10000610
  br i1 %v2_10000610, label %dec_label_pc_100005c4, label %dec_label_pc_10000614

dec_label_pc_10000614:                            ; preds = %dec_label_pc_10000610
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 268500992, i32* %r11.global-to-local, align 4
  %v0_1000061c = load i32, i32* @r1, align 4
  %v1_1000061c = add i32 %v0_1000061c, 20796
  %v2_1000061c = inttoptr i32 %v1_1000061c to i32*
  %v3_1000061c = load i32, i32* %v2_1000061c, align 4
  store i32 %v3_1000061c, i32* %r30.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000d3d4.23 to i32), i32* %r16.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000d3d0.24 to i32), i32* %r24.global-to-local, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  store i32 1, i32* %r23.global-to-local, align 4
  store i32 0, i32* %r17.global-to-local, align 4
  store i32 -1, i32* %r19.global-to-local, align 4
  br label %dec_label_pc_10000688

dec_label_pc_10000640:                            ; preds = %dec_label_pc_10000694
  %v2_10000640 = icmp ugt i8 %v3_10000688, 2
  %v3_10000640 = icmp eq i8 %v3_10000688, 2
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000640, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000640, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000640, label %dec_label_pc_10000c94, label %dec_label_pc_10000648

dec_label_pc_10000648:                            ; preds = %dec_label_pc_10000640
  %v1_10000648 = icmp ult i8 %v3_10000688, 4
  %v2_10000648 = icmp ugt i8 %v3_10000688, 4
  %v3_10000648 = icmp eq i8 %v3_10000688, 4
  store i1 %v1_10000648, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000648, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000648, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000648, label %dec_label_pc_100008b0, label %dec_label_pc_10000650

dec_label_pc_10000650:                            ; preds = %dec_label_pc_10000648
  %v1_10000650 = icmp ult i8 %v3_10000688, 6
  %v2_10000650 = icmp ugt i8 %v3_10000688, 6
  %v3_10000650 = icmp eq i8 %v3_10000688, 6
  store i1 %v1_10000650, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000650, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000650, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000650, label %dec_label_pc_10000c5c, label %dec_label_pc_10000658

dec_label_pc_10000658:                            ; preds = %dec_label_pc_10000650
  %v1_10000658 = icmp ult i8 %v3_10000688, 7
  %v2_10000658 = icmp ugt i8 %v3_10000688, 7
  %v3_10000658 = icmp eq i8 %v3_10000688, 7
  store i1 %v1_10000658, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000658, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000658, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000658, label %dec_label_pc_10000c5c, label %dec_label_pc_10000660

dec_label_pc_10000660:                            ; preds = %dec_label_pc_10000658
  %v1_10000660 = icmp ult i8 %v3_10000688, 10
  %v2_10000660 = icmp ugt i8 %v3_10000688, 10
  %v3_10000660 = icmp eq i8 %v3_10000688, 10
  store i1 %v1_10000660, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000660, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000660, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000660, label %dec_label_pc_10000c5c, label %dec_label_pc_10000668

dec_label_pc_10000668:                            ; preds = %dec_label_pc_10000c94, %dec_label_pc_10000660
  %v1_10000668 = inttoptr i32 %v2_10000c8c to i32*
  %v2_10000668 = load i32, i32* %v1_10000668, align 4
  store i32 %v2_10000668, i32* %r3.global-to-local, align 4
  %v0_1000066c = load i32, i32* %r17.global-to-local, align 4
  %v1_1000066c = trunc i32 %v0_1000066c to i8
  store i8 %v1_1000066c, i8* %v2_10000688, align 1
  store i32 268437108, i32* @lr, align 4
  %v0_10000670 = call i32 @function_1000a98c()
  store i32 %v0_10000670, i32* %r3.global-to-local, align 4
  %v0_10000674 = load i32, i32* %r19.global-to-local, align 4
  %v1_10000674 = load i32, i32* %r30.global-to-local, align 4
  %v2_10000674 = inttoptr i32 %v1_10000674 to i32*
  store i32 %v0_10000674, i32* %v2_10000674, align 4
  br label %dec_label_pc_10000678

dec_label_pc_10000678:                            ; preds = %dec_label_pc_10000758, %dec_label_pc_10000c5c, %dec_label_pc_10000c00, %dec_label_pc_100006c0, %dec_label_pc_10000668
  %v0_10000678 = load i32, i32* %r28.global-to-local, align 4
  %v1_10000678 = add i32 %v0_10000678, 1
  store i32 %v1_10000678, i32* %r28.global-to-local, align 4
  %v0_1000067c = load i32, i32* %r30.global-to-local, align 4
  %v1_1000067c = add i32 %v0_1000067c, 3140
  store i32 %v1_1000067c, i32* %r30.global-to-local, align 4
  %v0_10000680 = load i32, i32* %r21.global-to-local, align 4
  %v2_10000680 = icmp slt i32 %v0_10000680, %v1_10000678
  %v3_10000680 = icmp sgt i32 %v0_10000680, %v1_10000678
  %v4_10000680 = icmp eq i32 %v0_10000680, %v1_10000678
  store i1 %v2_10000680, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10000680, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_10000680, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10000680, label %dec_label_pc_10000678.dec_label_pc_10000794_crit_edge, label %dec_label_pc_10000688

dec_label_pc_10000678.dec_label_pc_10000794_crit_edge: ; preds = %dec_label_pc_10000678
  %v0_10000794.pre = load i32, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10000794

dec_label_pc_10000688:                            ; preds = %dec_label_pc_10000784, %dec_label_pc_10000678, %dec_label_pc_10000614
  %v2_10000c8c = phi i32 [ %v3_1000061c, %dec_label_pc_10000614 ], [ %v1_1000067c, %dec_label_pc_10000678 ], [ %v1_10000788, %dec_label_pc_10000784 ]
  %v1_10000688 = add i32 %v2_10000c8c, 4
  %v2_10000688 = inttoptr i32 %v1_10000688 to i8*
  %v3_10000688 = load i8, i8* %v2_10000688, align 1
  %v4_10000688 = zext i8 %v3_10000688 to i32
  store i32 %v4_10000688, i32* %r0.global-to-local, align 4
  %v1_1000068c = icmp eq i8 %v3_10000688, 0
  %v2_1000068c = icmp ugt i8 %v3_10000688, 1
  %v3_1000068c = icmp eq i8 %v3_10000688, 1
  store i1 %v1_1000068c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000068c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000068c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000068c, label %dec_label_pc_1000089c, label %dec_label_pc_10000694

dec_label_pc_10000694:                            ; preds = %dec_label_pc_10000688
  %v2_10000694 = icmp ne i8 %v3_10000688, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000694, i1* %cr7_gt.global-to-local, align 1
  store i1 %v1_1000068c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_1000068c, label %dec_label_pc_1000069c, label %dec_label_pc_10000640

dec_label_pc_1000069c:                            ; preds = %dec_label_pc_10000694, %dec_label_pc_10000c8c
  %v0_1000069c = phi i32 [ %v2_10000c8c, %dec_label_pc_10000694 ], [ %v0_1000069c.pre, %dec_label_pc_10000c8c ]
  %v1_1000069c = inttoptr i32 %v0_1000069c to i32*
  %v2_1000069c = load i32, i32* %v1_1000069c, align 4
  store i32 %v2_1000069c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_100006a4 = load i32, i32* @r1, align 4
  %v2_100006a4 = add i32 %v1_100006a4, 40
  %v3_100006a4 = inttoptr i32 %v2_100006a4 to i32*
  store i32 0, i32* %v3_100006a4, align 4
  %v0_100006a8 = load i32, i32* %r3.global-to-local, align 4
  %v1_100006a8 = icmp slt i32 %v0_100006a8, -1
  %v2_100006a8 = icmp sgt i32 %v0_100006a8, -1
  %v3_100006a8 = icmp eq i32 %v0_100006a8, -1
  store i1 %v1_100006a8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100006a8, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100006a8, i1* %cr7_eq.global-to-local, align 1
  %v0_100006ac = load i32, i32* %r0.global-to-local, align 4
  %v1_100006ac = load i32, i32* @r1, align 4
  %v2_100006ac = add i32 %v1_100006ac, 28
  %v3_100006ac = inttoptr i32 %v2_100006ac to i32*
  store i32 %v0_100006ac, i32* %v3_100006ac, align 4
  %v0_100006b0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100006b0 = load i32, i32* @r1, align 4
  %v2_100006b0 = add i32 %v1_100006b0, 32
  %v3_100006b0 = inttoptr i32 %v2_100006b0 to i32*
  store i32 %v0_100006b0, i32* %v3_100006b0, align 4
  %v0_100006b4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100006b4 = load i32, i32* @r1, align 4
  %v2_100006b4 = add i32 %v1_100006b4, 36
  %v3_100006b4 = inttoptr i32 %v2_100006b4 to i32*
  store i32 %v0_100006b4, i32* %v3_100006b4, align 4
  br i1 %v3_100006a8, label %dec_label_pc_100006c0, label %dec_label_pc_100006bc

dec_label_pc_100006bc:                            ; preds = %dec_label_pc_1000069c
  store i32 ptrtoint ([3 x i8]* @global_var_100006c0.25 to i32), i32* @lr, align 4
  %v0_100006bc = call i32 @function_1000a98c()
  store i32 %v0_100006bc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100006c0

dec_label_pc_100006c0:                            ; preds = %dec_label_pc_1000069c, %dec_label_pc_100006bc
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r4.global-to-local, align 4
  store i32 268437200, i32* @lr, align 4
  %v3_100006cc = call i32 @function_1000b758(i32 2, i32 1, i32 0)
  store i32 %v3_100006cc, i32* %r3.global-to-local, align 4
  %v1_100006d0 = icmp slt i32 %v3_100006cc, -1
  %v2_100006d0 = icmp sgt i32 %v3_100006cc, -1
  %v3_100006d0 = icmp eq i32 %v3_100006cc, -1
  store i1 %v1_100006d0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100006d0, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100006d0, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_100006cc, i32* @r31, align 4
  %v1_100006d8 = load i32, i32* %r30.global-to-local, align 4
  %v2_100006d8 = inttoptr i32 %v1_100006d8 to i32*
  store i32 %v3_100006cc, i32* %v2_100006d8, align 4
  br i1 %v3_100006d0, label %dec_label_pc_10000678, label %dec_label_pc_100006e0

dec_label_pc_100006e0:                            ; preds = %dec_label_pc_100006c0
  store i32 3, i32* @r4, align 4
  store i32 268437232, i32* @lr, align 4
  %v1_100006ec = call i32 @function_1000a85c(i32 3)
  store i32 4, i32* @r4, align 4
  %v0_100006f8 = load i32, i32* @r31, align 4
  store i32 %v0_100006f8, i32* %r3.global-to-local, align 4
  store i32 268437252, i32* @lr, align 4
  %v2_10000700 = call i32 @function_1000a85c(i32 %v0_100006f8)
  store i32 %v2_10000700, i32* %r3.global-to-local, align 4
  %v0_10000704 = load i32, i32* %r30.global-to-local, align 4
  %v1_10000704 = inttoptr i32 %v0_10000704 to i32*
  %v2_10000704 = load i32, i32* %v1_10000704, align 4
  store i32 %v2_10000704, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 65535, i32* %r11.global-to-local, align 4
  %v0_10000718 = load i32, i32* %r18.global-to-local, align 4
  %v1_10000720 = load i32, i32* @r1, align 4
  %v2_10000720 = add i32 %v1_10000720, 8
  %v3_10000720 = inttoptr i32 %v2_10000720 to i32*
  store i32 65535, i32* %v3_10000720, align 4
  store i32 268437288, i32* @lr, align 4
  %v5_10000724 = call i32 @function_1000b71c(i32 %v2_10000704, i32 0, i32 8, i32 %v0_10000718, i32 4)
  store i32 %v5_10000724, i32* %r3.global-to-local, align 4
  %v0_10000728 = load i32, i32* %r30.global-to-local, align 4
  %v1_10000728 = add i32 %v0_10000728, 16
  %v2_10000728 = inttoptr i32 %v1_10000728 to i32*
  %v3_10000728 = load i32, i32* %v2_10000728, align 4
  store i32 %v3_10000728, i32* %r9.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_10000730 = inttoptr i32 %v0_10000728 to i32*
  %v2_10000730 = load i32, i32* %v1_10000730, align 4
  store i32 %v2_10000730, i32* @r3, align 4
  %v0_10000734 = load i32, i32* @r1, align 4
  %v1_10000734 = add i32 %v0_10000734, 28
  store i32 %v1_10000734, i32* %r4.global-to-local, align 4
  %v2_10000738 = add i32 %v0_10000734, 32
  %v3_10000738 = inttoptr i32 %v2_10000738 to i32*
  store i32 %v3_10000728, i32* %v3_10000738, align 4
  %v0_10000740 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000740 = trunc i32 %v0_10000740 to i8
  %v2_10000740 = load i32, i32* %r30.global-to-local, align 4
  %v3_10000740 = add i32 %v2_10000740, 4
  %v4_10000740 = inttoptr i32 %v3_10000740 to i8*
  store i8 %v1_10000740, i8* %v4_10000740, align 1
  %v0_10000744 = load i32, i32* %r25.global-to-local, align 4
  %v1_10000744 = load i32, i32* %r30.global-to-local, align 4
  %v2_10000744 = add i32 %v1_10000744, 8
  %v3_10000744 = inttoptr i32 %v2_10000744 to i32*
  store i32 %v0_10000744, i32* %v3_10000744, align 4
  %v0_10000748 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000748 = trunc i32 %v0_10000748 to i16
  %v2_10000748 = load i32, i32* @r1, align 4
  %v3_10000748 = add i32 %v2_10000748, 28
  %v4_10000748 = inttoptr i32 %v3_10000748 to i16*
  store i16 %v1_10000748, i16* %v4_10000748, align 2
  %v0_1000074c = load i32, i32* @r1, align 4
  %v1_1000074c = add i32 %v0_1000074c, 20800
  %v2_1000074c = inttoptr i32 %v1_1000074c to i32*
  %v3_1000074c = load i32, i32* %v2_1000074c, align 4
  store i32 %v3_1000074c, i32* %r0.global-to-local, align 4
  %v1_10000750 = trunc i32 %v3_1000074c to i16
  %v3_10000750 = add i32 %v0_1000074c, 30
  %v4_10000750 = inttoptr i32 %v3_10000750 to i16*
  store i16 %v1_10000750, i16* %v4_10000750, align 2
  store i32 268437336, i32* @lr, align 4
  %v0_10000754 = call i32 @function_1000b558()
  store i32 %v0_10000754, i32* %r3.global-to-local, align 4
  %v0_10000758.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10000758

dec_label_pc_10000758:                            ; preds = %dec_label_pc_10000c94, %dec_label_pc_100006e0
  %v0_10000758 = phi i32 [ %v2_10000c8c, %dec_label_pc_10000c94 ], [ %v0_10000758.pre, %dec_label_pc_100006e0 ]
  %v1_10000758 = inttoptr i32 %v0_10000758 to i32*
  %v2_10000758 = load i32, i32* %v1_10000758, align 4
  %v1_1000075c = call i32 @__asm_rlwinm(i32 %v2_10000758, i32 29, i32 3, i32 29)
  %v0_10000760 = load i32, i32* %r26.global-to-local, align 4
  %v2_10000760 = icmp slt i32 %v0_10000760, %v2_10000758
  %v3_10000760 = icmp sgt i32 %v0_10000760, %v2_10000758
  %v4_10000760 = icmp eq i32 %v0_10000760, %v2_10000758
  store i1 %v2_10000760, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10000760, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_10000760, i1* %cr7_eq.global-to-local, align 1
  %v1_10000764 = load i32, i32* %r18.global-to-local, align 4
  %v2_10000764 = add i32 %v1_10000764, %v1_1000075c
  store i32 %v2_10000764, i32* %r11.global-to-local, align 4
  %v1_10000768 = urem i32 %v2_10000758, 32
  store i32 %v1_10000768, i32* %r0.global-to-local, align 4
  %v1_1000076c = add i32 %v2_10000764, 164
  %v2_1000076c = inttoptr i32 %v1_1000076c to i32*
  %v3_1000076c = load i32, i32* %v2_1000076c, align 4
  %v0_10000770 = load i32, i32* %r23.global-to-local, align 4
  %v3_10000770 = shl i32 %v0_10000770, %v1_10000768
  store i32 %v3_10000770, i32* %r0.global-to-local, align 4
  %v2_10000774 = or i32 %v3_10000770, %v3_1000076c
  store i32 %v2_10000774, i32* %r9.global-to-local, align 4
  store i32 %v2_10000774, i32* %v2_1000076c, align 4
  br i1 %v2_10000760, label %dec_label_pc_10000780, label %dec_label_pc_10000678

dec_label_pc_10000780:                            ; preds = %dec_label_pc_10000758
  %v1_10000780 = add i32 %v2_10000758, 1
  store i32 %v1_10000780, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10000784

dec_label_pc_10000784:                            ; preds = %dec_label_pc_10000c84, %dec_label_pc_10000c54, %dec_label_pc_10000780
  %v0_1000079426 = phi i32 [ %v1_10000c84, %dec_label_pc_10000c84 ], [ %v1_10000c54, %dec_label_pc_10000c54 ], [ %v1_10000780, %dec_label_pc_10000780 ]
  %v0_10000784 = load i32, i32* %r28.global-to-local, align 4
  %v1_10000784 = add i32 %v0_10000784, 1
  store i32 %v1_10000784, i32* %r28.global-to-local, align 4
  %v0_10000788 = load i32, i32* %r30.global-to-local, align 4
  %v1_10000788 = add i32 %v0_10000788, 3140
  store i32 %v1_10000788, i32* %r30.global-to-local, align 4
  %v0_1000078c = load i32, i32* %r21.global-to-local, align 4
  %v2_1000078c = icmp slt i32 %v0_1000078c, %v1_10000784
  %v3_1000078c = icmp sgt i32 %v0_1000078c, %v1_10000784
  %v4_1000078c = icmp eq i32 %v0_1000078c, %v1_10000784
  store i1 %v2_1000078c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000078c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_1000078c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_1000078c, label %dec_label_pc_10000794, label %dec_label_pc_10000688

dec_label_pc_10000794:                            ; preds = %dec_label_pc_10000784, %dec_label_pc_10000678.dec_label_pc_10000794_crit_edge
  %v0_100007b4 = phi i32 [ %v0_10000794.pre, %dec_label_pc_10000678.dec_label_pc_10000794_crit_edge ], [ %v0_1000079426, %dec_label_pc_10000784 ]
  %v1_10000794 = icmp slt i32 %v0_100007b4, 0
  %v2_10000794 = icmp sgt i32 %v0_100007b4, 0
  %v3_10000794 = icmp eq i32 %v0_100007b4, 0
  store i1 %v1_10000794, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000794, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000794, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000794, label %dec_label_pc_100005c4, label %dec_label_pc_1000079c

dec_label_pc_1000079c:                            ; preds = %dec_label_pc_10000794
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  %v0_100007a4 = load i32, i32* @r1, align 4
  %v1_100007a4 = add i32 %v0_100007a4, 44
  store i32 %v1_100007a4, i32* %r4.global-to-local, align 4
  %v1_100007a8 = add i32 %v0_100007a4, 172
  %v1_100007b0 = add i32 %v0_100007a4, 20
  store i32 %v0_100007b4, i32* %r3.global-to-local, align 4
  %v2_100007b8 = add i32 %v0_100007a4, 24
  %v3_100007b8 = inttoptr i32 %v2_100007b8 to i32*
  store i32 0, i32* %v3_100007b8, align 4
  %v0_100007bc = load i32, i32* %r9.global-to-local, align 4
  %v1_100007bc = load i32, i32* @r1, align 4
  %v2_100007bc = add i32 %v1_100007bc, 20
  %v3_100007bc = inttoptr i32 %v2_100007bc to i32*
  store i32 %v0_100007bc, i32* %v3_100007bc, align 4
  store i32 268437444, i32* @lr, align 4
  %v5_100007c0 = call i32 @function_1000ac54(i32 %v0_100007b4, i32 %v1_100007a4, i32 %v1_100007a8, i32 0, i32 %v1_100007b0)
  store i32 %v5_100007c0, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268437456, i32* @lr, align 4
  %v0_100007cc = call i32 @function_1000ad5c()
  store i32 %v0_100007cc, i32* %r3.global-to-local, align 4
  %v0_100007d0 = load i32, i32* %r29.global-to-local, align 4
  %v1_100007d0 = icmp slt i32 %v0_100007d0, 0
  %v2_100007d0 = icmp sgt i32 %v0_100007d0, 0
  %v3_100007d0 = icmp eq i32 %v0_100007d0, 0
  store i1 %v1_100007d0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100007d0, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100007d0, i1* %cr7_eq.global-to-local, align 1
  %v1_100007d4 = load i32, i32* @r1, align 4
  %v2_100007d4 = add i32 %v1_100007d4, 20792
  %v3_100007d4 = inttoptr i32 %v2_100007d4 to i32*
  store i32 %v0_100007cc, i32* %v3_100007d4, align 4
  %tmp68 = icmp slt i32 %v0_100007d0, 1
  br i1 %tmp68, label %dec_label_pc_100005c4, label %dec_label_pc_100007dc

dec_label_pc_100007dc:                            ; preds = %dec_label_pc_1000079c
  %v0_100007dc = load i32, i32* @r1, align 4
  %v1_100007dc = add i32 %v0_100007dc, 20796
  %v2_100007dc = inttoptr i32 %v1_100007dc to i32*
  %v3_100007dc = load i32, i32* %v2_100007dc, align 4
  store i32 %v3_100007dc, i32* %r23.global-to-local, align 4
  store i32 0, i32* %r19.global-to-local, align 4
  %v1_100007e4 = add i32 %v3_100007dc, 533
  store i32 %v1_100007e4, i32* @r30, align 4
  br label %dec_label_pc_10000838

dec_label_pc_100007ec:                            ; preds = %dec_label_pc_10000844, %dec_label_pc_10000890
  %v0_100007ec = phi i32 [ %v0_10000848, %dec_label_pc_10000844 ], [ %v0_100007ec.pre, %dec_label_pc_10000890 ]
  %v1_100007ec = call i32 @__asm_rlwinm(i32 %v0_100007ec, i32 29, i32 3, i32 29)
  %v0_100007f0 = load i32, i32* %r3.global-to-local, align 4
  %v1_100007f0 = urem i32 %v0_100007f0, 32
  store i32 %v1_100007f0, i32* %r11.global-to-local, align 4
  %v1_100007f4 = load i32, i32* %r18.global-to-local, align 4
  %v2_100007f4 = add i32 %v1_100007f4, %v1_100007ec
  store i32 %v2_100007f4, i32* %r9.global-to-local, align 4
  %v1_100007f8 = add i32 %v2_100007f4, 36
  %v2_100007f8 = inttoptr i32 %v1_100007f8 to i32*
  %v3_100007f8 = load i32, i32* %v2_100007f8, align 4
  %v3_100007fc = lshr i32 %v3_100007f8, %v1_100007f0
  store i32 %v3_100007fc, i32* %r0.global-to-local, align 4
  %v1_10000800 = urem i32 %v3_100007fc, 2
  store i32 %v1_10000800, i32* %r9.global-to-local, align 4
  %v3_10000800 = icmp eq i32 %v1_10000800, 0
  br i1 %v3_10000800, label %dec_label_pc_10000824, label %dec_label_pc_10000808

dec_label_pc_10000808:                            ; preds = %dec_label_pc_100007ec
  %v0_10000808 = load i32, i32* @r30, align 4
  %v1_10000808 = add i32 %v0_10000808, -529
  %v2_10000808 = inttoptr i32 %v1_10000808 to i8*
  %v3_10000808 = load i8, i8* %v2_10000808, align 1
  %v4_10000808 = zext i8 %v3_10000808 to i32
  store i32 %v4_10000808, i32* %r0.global-to-local, align 4
  %v1_1000080c = icmp ult i8 %v3_10000808, 6
  %v2_1000080c = icmp ugt i8 %v3_10000808, 6
  %v3_1000080c = icmp eq i8 %v3_10000808, 6
  store i1 %v1_1000080c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000080c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000080c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000080c, label %dec_label_pc_10000ca8, label %dec_label_pc_10000814

dec_label_pc_10000814:                            ; preds = %dec_label_pc_10000808
  %v1_10000814 = icmp ult i8 %v3_10000808, 7
  %v2_10000814 = icmp ugt i8 %v3_10000808, 7
  %v3_10000814 = icmp eq i8 %v3_10000808, 7
  store i1 %v1_10000814, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000814, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000814, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000814, label %dec_label_pc_10001294, label %dec_label_pc_1000081c

dec_label_pc_1000081c:                            ; preds = %dec_label_pc_10000814
  %v1_1000081c = icmp ult i8 %v3_10000808, 10
  %v2_1000081c = icmp ugt i8 %v3_10000808, 10
  %v3_1000081c = icmp eq i8 %v3_10000808, 10
  store i1 %v1_1000081c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000081c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000081c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000081c, label %dec_label_pc_10001518, label %dec_label_pc_10000824

dec_label_pc_10000824:                            ; preds = %dec_label_pc_100017ec, %dec_label_pc_100013b0, %dec_label_pc_1000190c, %dec_label_pc_100017d4, %dec_label_pc_1000081c, %dec_label_pc_100007ec, %dec_label_pc_10000838, %dec_label_pc_100019ac, %dec_label_pc_100018f0, %dec_label_pc_100017bc, %dec_label_pc_10001758, %dec_label_pc_10001558, %dec_label_pc_100014f0, %dec_label_pc_10001414, %dec_label_pc_100011e4, %dec_label_pc_10001b70
  %v0_10000824 = load i32, i32* %r19.global-to-local, align 4
  %v1_10000824 = add i32 %v0_10000824, 1
  store i32 %v1_10000824, i32* %r19.global-to-local, align 4
  %v0_10000828 = load i32, i32* %r23.global-to-local, align 4
  %v1_10000828 = add i32 %v0_10000828, 3140
  store i32 %v1_10000828, i32* %r23.global-to-local, align 4
  %v1_1000082c = load i32, i32* %r21.global-to-local, align 4
  %v2_1000082c = icmp slt i32 %v1_10000824, %v1_1000082c
  %v3_1000082c = icmp sgt i32 %v1_10000824, %v1_1000082c
  %v4_1000082c = icmp eq i32 %v1_10000824, %v1_1000082c
  store i1 %v2_1000082c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000082c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_1000082c, i1* %cr7_eq.global-to-local, align 1
  %v0_10000830 = load i32, i32* @r30, align 4
  %v1_10000830 = add i32 %v0_10000830, 3140
  store i32 %v1_10000830, i32* @r30, align 4
  br i1 %v4_1000082c, label %dec_label_pc_100005c4, label %dec_label_pc_10000838

dec_label_pc_10000838:                            ; preds = %dec_label_pc_10000824, %dec_label_pc_100007dc
  %v0_10000838 = phi i32 [ %v1_10000830, %dec_label_pc_10000824 ], [ %v1_100007e4, %dec_label_pc_100007dc ]
  %v1_10000838 = add i32 %v0_10000838, -533
  %v2_10000838 = inttoptr i32 %v1_10000838 to i32*
  %v3_10000838 = load i32, i32* %v2_10000838, align 4
  store i32 %v3_10000838, i32* %r3.global-to-local, align 4
  %v1_1000083c = icmp slt i32 %v3_10000838, -1
  %v2_1000083c = icmp sgt i32 %v3_10000838, -1
  %v3_1000083c = icmp eq i32 %v3_10000838, -1
  store i1 %v1_1000083c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000083c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000083c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000083c, label %dec_label_pc_10000824, label %dec_label_pc_10000844

dec_label_pc_10000844:                            ; preds = %dec_label_pc_10000838
  %v1_10000844 = call i32 @__asm_rlwinm(i32 %v3_10000838, i32 29, i32 3, i32 29)
  %v0_10000848 = load i32, i32* %r3.global-to-local, align 4
  %v1_10000848 = urem i32 %v0_10000848, 32
  store i32 %v1_10000848, i32* %r11.global-to-local, align 4
  %v1_1000084c = load i32, i32* %r18.global-to-local, align 4
  %v2_1000084c = add i32 %v1_1000084c, %v1_10000844
  store i32 %v2_1000084c, i32* %r9.global-to-local, align 4
  %v1_10000850 = add i32 %v2_1000084c, 164
  %v2_10000850 = inttoptr i32 %v1_10000850 to i32*
  %v3_10000850 = load i32, i32* %v2_10000850, align 4
  %v3_10000854 = lshr i32 %v3_10000850, %v1_10000848
  store i32 %v3_10000854, i32* %r0.global-to-local, align 4
  %v1_10000858 = urem i32 %v3_10000854, 2
  store i32 %v1_10000858, i32* %r9.global-to-local, align 4
  %v3_10000858 = icmp eq i32 %v1_10000858, 0
  br i1 %v3_10000858, label %dec_label_pc_100007ec, label %dec_label_pc_10000860

dec_label_pc_10000860:                            ; preds = %dec_label_pc_10000844
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 4, i32* @r31, align 4
  store i32 1, i32* %r4.global-to-local, align 4
  %v0_10000870 = load i32, i32* @r1, align 4
  %v1_10000870 = add i32 %v0_10000870, 12
  %v1_10000874 = add i32 %v0_10000870, 16
  %v3_10000878 = inttoptr i32 %v1_10000870 to i32*
  store i32 0, i32* %v3_10000878, align 4
  %v0_1000087c = load i32, i32* @r31, align 4
  %v1_1000087c = load i32, i32* @r1, align 4
  %v2_1000087c = add i32 %v1_1000087c, 16
  %v3_1000087c = inttoptr i32 %v2_1000087c to i32*
  store i32 %v0_1000087c, i32* %v3_1000087c, align 4
  store i32 268437636, i32* @lr, align 4
  %v5_10000880 = call i32 @function_1000b5c0(i32 1, i32 4, i32 %v1_10000870, i32 %v1_10000874, i32 %v1_10000858)
  store i32 %v5_10000880, i32* %r3.global-to-local, align 4
  %v0_10000884 = load i32, i32* @r1, align 4
  %v1_10000884 = add i32 %v0_10000884, 12
  %v2_10000884 = inttoptr i32 %v1_10000884 to i32*
  %v3_10000884 = load i32, i32* %v2_10000884, align 4
  store i32 %v3_10000884, i32* %r0.global-to-local, align 4
  %v2_10000888 = or i32 %v3_10000884, %v5_10000880
  store i32 %v2_10000888, i32* %r9.global-to-local, align 4
  %v5_10000888 = icmp eq i32 %v2_10000888, 0
  %v0_10000890 = load i32, i32* @r30, align 4
  %v1_10000890 = add i32 %v0_10000890, -533
  %v2_10000890 = inttoptr i32 %v1_10000890 to i32*
  %v3_10000890 = load i32, i32* %v2_10000890, align 4
  store i32 %v3_10000890, i32* %r3.global-to-local, align 4
  br i1 %v5_10000888, label %dec_label_pc_10000890, label %dec_label_pc_100014f0

dec_label_pc_10000890:                            ; preds = %dec_label_pc_10000860
  %v0_10000894 = load i32, i32* @r31, align 4
  %v1_10000894 = trunc i32 %v0_10000894 to i8
  %v3_10000894 = add i32 %v0_10000890, -529
  %v4_10000894 = inttoptr i32 %v3_10000894 to i8*
  store i8 %v1_10000894, i8* %v4_10000894, align 1
  %v0_100007ec.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100007ec

dec_label_pc_1000089c:                            ; preds = %dec_label_pc_10000688
  %v1_1000089c = add i32 %v2_10000c8c, 1456
  %v2_1000089c = inttoptr i32 %v1_1000089c to i32*
  %v3_1000089c = load i32, i32* %v2_1000089c, align 4
  store i32 %v3_1000089c, i32* %r0.global-to-local, align 4
  %v1_100008a0 = icmp slt i32 %v3_1000089c, 0
  %v2_100008a0 = icmp sgt i32 %v3_1000089c, 0
  %v3_100008a0 = icmp eq i32 %v3_1000089c, 0
  store i1 %v1_100008a0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100008a0, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100008a0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100008a0, label %dec_label_pc_10000c8c, label %dec_label_pc_100008a8

dec_label_pc_100008a8:                            ; preds = %dec_label_pc_1000089c
  store i32 4, i32* %r0.global-to-local, align 4
  store i8 4, i8* %v2_10000688, align 1
  %v1_100008b4.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_100008b0

dec_label_pc_100008b0:                            ; preds = %dec_label_pc_10000648, %dec_label_pc_100008a8
  %v1_100008b4 = phi i32 [ %v2_10000c8c, %dec_label_pc_10000648 ], [ %v1_100008b4.pre, %dec_label_pc_100008a8 ]
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_100008b4 = load i32, i32* %r19.global-to-local, align 4
  %v2_100008b4 = add i32 %v1_100008b4, 1464
  %v3_100008b4 = inttoptr i32 %v2_100008b4 to i32*
  store i32 %v0_100008b4, i32* %v3_100008b4, align 4
  %v0_100008b8 = load i32, i32* %r29.global-to-local, align 4
  %v1_100008b8 = load i32, i32* %r30.global-to-local, align 4
  %v2_100008b8 = add i32 %v1_100008b8, 1452
  %v3_100008b8 = inttoptr i32 %v2_100008b8 to i32*
  store i32 %v0_100008b8, i32* %v3_100008b8, align 4
  %v0_100008bc = load i32, i32* %r30.global-to-local, align 4
  %v1_100008bc = add i32 %v0_100008bc, 2116
  store i32 %v1_100008bc, i32* @r3, align 4
  store i32 1024, i32* @r4, align 4
  %v1_100008c4 = add i32 %v0_100008bc, 1431
  store i32 %v1_100008c4, i32* %r27.global-to-local, align 4
  store i32 268437708, i32* @lr, align 4
  %v0_100008c8 = call i32 @function_1000a1a8()
  %v0_100008cc = load i32, i32* %r29.global-to-local, align 4
  %v1_100008cc = load i32, i32* %r30.global-to-local, align 4
  %v2_100008cc = add i32 %v1_100008cc, 2112
  %v3_100008cc = inttoptr i32 %v2_100008cc to i32*
  store i32 %v0_100008cc, i32* %v3_100008cc, align 4
  store i32 10240, i32* @r4, align 4
  %v0_100008d4 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_100008d4, i32* @r3, align 4
  store i32 268437724, i32* @lr, align 4
  %v0_100008d8 = call i32 @function_1000a1a8()
  %v0_100008dc = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_100008dc, i32* %r3.global-to-local, align 4
  store i32 268437732, i32* @lr, align 4
  %v1_100008e0 = inttoptr i32 %v0_100008dc to i8*
  %v2_100008e0 = call i32 @function_1000a100(i8* %v1_100008e0)
  %v0_100008e4 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_100008e4, i32* %r4.global-to-local, align 4
  %v0_100008e8 = load i32, i32* %r22.global-to-local, align 4
  %v2_100008e8 = add i32 %v0_100008e8, %v2_100008e0
  store i32 %v2_100008e8, i32* @r3, align 4
  store i32 268437744, i32* %lr.global-to-local, align 4
  %v2_100008ec = inttoptr i32 %v2_100008e8 to i8*
  %v3_100008ec = call i32 @function_1000a128(i8* %v2_100008ec, i32 %v0_100008e4)
  %v0_100008f0 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_100008f0, i32* %r3.global-to-local, align 4
  store i32 268437752, i32* @lr, align 4
  %v1_100008f4 = inttoptr i32 %v0_100008f0 to i8*
  %v2_100008f4 = call i32 @function_1000a100(i8* %v1_100008f4)
  %v0_100008f8 = load i32, i32* %r16.global-to-local, align 4
  store i32 %v0_100008f8, i32* %r4.global-to-local, align 4
  %v0_100008fc = load i32, i32* %r22.global-to-local, align 4
  %v2_100008fc = add i32 %v0_100008fc, %v2_100008f4
  store i32 %v2_100008fc, i32* @r3, align 4
  store i32 268437764, i32* %lr.global-to-local, align 4
  %v2_10000900 = inttoptr i32 %v2_100008fc to i8*
  %v3_10000900 = call i32 @function_1000a128(i8* %v2_10000900, i32 %v0_100008f8)
  %v0_10000904 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000904, i32* %r3.global-to-local, align 4
  store i32 268437772, i32* @lr, align 4
  %v1_10000908 = inttoptr i32 %v0_10000904 to i8*
  %v2_10000908 = call i32 @function_1000a100(i8* %v1_10000908)
  %v0_1000090c = load i32, i32* %r30.global-to-local, align 4
  %v1_1000090c = add i32 %v0_1000090c, 532
  store i32 %v1_1000090c, i32* %r4.global-to-local, align 4
  %v0_10000910 = load i32, i32* %r22.global-to-local, align 4
  %v2_10000910 = add i32 %v0_10000910, %v2_10000908
  store i32 %v2_10000910, i32* @r3, align 4
  store i32 268437784, i32* %lr.global-to-local, align 4
  %v2_10000914 = inttoptr i32 %v2_10000910 to i8*
  %v3_10000914 = call i32 @function_1000a128(i8* %v2_10000914, i32 %v1_1000090c)
  %v0_10000918 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000918, i32* %r3.global-to-local, align 4
  store i32 268437792, i32* @lr, align 4
  %v1_1000091c = inttoptr i32 %v0_10000918 to i8*
  %v2_1000091c = call i32 @function_1000a100(i8* %v1_1000091c)
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([24 x i8]* @global_var_1000d3ac.26 to i32), i32* %r4.global-to-local, align 4
  %v0_10000928 = load i32, i32* %r22.global-to-local, align 4
  %v2_10000928 = add i32 %v0_10000928, %v2_1000091c
  store i32 %v2_10000928, i32* @r3, align 4
  store i32 268437808, i32* %lr.global-to-local, align 4
  %v3_1000092c = inttoptr i32 %v2_10000928 to i8*
  %v4_1000092c = call i32 @function_1000a128(i8* %v3_1000092c, i32 ptrtoint ([24 x i8]* @global_var_1000d3ac.26 to i32))
  %v0_10000930 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000930, i32* %r3.global-to-local, align 4
  store i32 268437816, i32* @lr, align 4
  %v1_10000934 = inttoptr i32 %v0_10000930 to i8*
  %v2_10000934 = call i32 @function_1000a100(i8* %v1_10000934)
  %v0_10000938 = load i32, i32* %r30.global-to-local, align 4
  %v1_10000938 = add i32 %v0_10000938, 20
  store i32 %v1_10000938, i32* %r4.global-to-local, align 4
  %v0_1000093c = load i32, i32* %r22.global-to-local, align 4
  %v2_1000093c = add i32 %v0_1000093c, %v2_10000934
  store i32 %v2_1000093c, i32* @r3, align 4
  store i32 268437828, i32* %lr.global-to-local, align 4
  %v2_10000940 = inttoptr i32 %v2_1000093c to i8*
  %v3_10000940 = call i32 @function_1000a128(i8* %v2_10000940, i32 %v1_10000938)
  %v0_10000944 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000944, i32* %r3.global-to-local, align 4
  store i32 268437836, i32* @lr, align 4
  %v1_10000948 = inttoptr i32 %v0_10000944 to i8*
  %v2_10000948 = call i32 @function_1000a100(i8* %v1_10000948)
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1000d3c4.27 to i32), i32* %r4.global-to-local, align 4
  %v0_10000954 = load i32, i32* %r22.global-to-local, align 4
  %v2_10000954 = add i32 %v0_10000954, %v2_10000948
  store i32 %v2_10000954, i32* @r3, align 4
  store i32 268437852, i32* %lr.global-to-local, align 4
  %v3_10000958 = inttoptr i32 %v2_10000954 to i8*
  %v4_10000958 = call i32 @function_1000a128(i8* %v3_10000958, i32 ptrtoint ([9 x i8]* @global_var_1000d3c4.27 to i32))
  %v0_1000095c = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_1000095c, i32* %r3.global-to-local, align 4
  store i32 268437860, i32* @lr, align 4
  %v1_10000960 = inttoptr i32 %v0_1000095c to i8*
  %v2_10000960 = call i32 @function_1000a100(i8* %v1_10000960)
  %v0_10000964 = load i32, i32* %r30.global-to-local, align 4
  %v1_10000964 = add i32 %v0_10000964, 789
  store i32 %v1_10000964, i32* %r4.global-to-local, align 4
  %v0_10000968 = load i32, i32* %r22.global-to-local, align 4
  %v2_10000968 = add i32 %v0_10000968, %v2_10000960
  store i32 %v2_10000968, i32* @r3, align 4
  store i32 268437872, i32* %lr.global-to-local, align 4
  %v2_1000096c = inttoptr i32 %v2_10000968 to i8*
  %v3_1000096c = call i32 @function_1000a128(i8* %v2_1000096c, i32 %v1_10000964)
  %v0_10000970 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000970, i32* %r3.global-to-local, align 4
  store i32 268437880, i32* @lr, align 4
  %v1_10000974 = inttoptr i32 %v0_10000970 to i8*
  %v2_10000974 = call i32 @function_1000a100(i8* %v1_10000974)
  %v0_10000978 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000978, i32* %r4.global-to-local, align 4
  %v0_1000097c = load i32, i32* %r22.global-to-local, align 4
  %v2_1000097c = add i32 %v0_1000097c, %v2_10000974
  store i32 %v2_1000097c, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000984.28 to i32), i32* %lr.global-to-local, align 4
  %v3_10000980 = inttoptr i32 %v2_1000097c to i8*
  %v4_10000980 = call i32 @function_1000a128(i8* %v3_10000980, i32 %v0_10000978)
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 268437900, i32* @lr, align 4
  %v1_10000988 = call i32 @function_10009880(i32 32)
  %v0_1000098c = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_1000098c, i32* %r3.global-to-local, align 4
  store i32 268437908, i32* @lr, align 4
  %v1_10000990 = inttoptr i32 %v0_1000098c to i8*
  %v2_10000990 = call i32 @function_1000a100(i8* %v1_10000990)
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 %v2_10000990, i32* %r29.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 268437924, i32* %lr.global-to-local, align 4
  %v3_100009a0 = call i32 @function_100097cc(i32 32, i32* null)
  store i32 %v3_100009a0, i32* %r4.global-to-local, align 4
  %v0_100009a8 = load i32, i32* %r22.global-to-local, align 4
  %v1_100009a8 = load i32, i32* %r29.global-to-local, align 4
  %v2_100009a8 = add i32 %v1_100009a8, %v0_100009a8
  store i32 %v2_100009a8, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100009b0.29 to i32), i32* %lr.global-to-local, align 4
  %v2_100009ac = inttoptr i32 %v2_100009a8 to i8*
  %v3_100009ac = call i32 @function_1000a128(i8* %v2_100009ac, i32 %v3_100009a0)
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 268437944, i32* @lr, align 4
  %v1_100009b4 = call i32 @function_100097f4(i32 32)
  %v0_100009b8 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_100009b8, i32* %r3.global-to-local, align 4
  store i32 268437952, i32* @lr, align 4
  %v1_100009bc = inttoptr i32 %v0_100009b8 to i8*
  %v2_100009bc = call i32 @function_1000a100(i8* %v1_100009bc)
  %v0_100009c0 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_100009c0, i32* %r4.global-to-local, align 4
  %v0_100009c4 = load i32, i32* %r22.global-to-local, align 4
  %v2_100009c4 = add i32 %v0_100009c4, %v2_100009bc
  store i32 %v2_100009c4, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100009cc.30 to i32), i32* %lr.global-to-local, align 4
  %v3_100009c8 = inttoptr i32 %v2_100009c4 to i8*
  %v4_100009c8 = call i32 @function_1000a128(i8* %v3_100009c8, i32 %v0_100009c0)
  store i32 33, i32* %r3.global-to-local, align 4
  store i32 268437972, i32* @lr, align 4
  %v1_100009d0 = call i32 @function_10009880(i32 33)
  %v0_100009d4 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_100009d4, i32* %r3.global-to-local, align 4
  store i32 268437980, i32* @lr, align 4
  %v1_100009d8 = inttoptr i32 %v0_100009d4 to i8*
  %v2_100009d8 = call i32 @function_1000a100(i8* %v1_100009d8)
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 %v2_100009d8, i32* %r29.global-to-local, align 4
  store i32 33, i32* %r3.global-to-local, align 4
  store i32 268437996, i32* %lr.global-to-local, align 4
  %v3_100009e8 = call i32 @function_100097cc(i32 33, i32* null)
  store i32 %v3_100009e8, i32* %r4.global-to-local, align 4
  %v0_100009f0 = load i32, i32* %r22.global-to-local, align 4
  %v1_100009f0 = load i32, i32* %r29.global-to-local, align 4
  %v2_100009f0 = add i32 %v1_100009f0, %v0_100009f0
  store i32 %v2_100009f0, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100009f8.31 to i32), i32* %lr.global-to-local, align 4
  %v2_100009f4 = inttoptr i32 %v2_100009f0 to i8*
  %v3_100009f4 = call i32 @function_1000a128(i8* %v2_100009f4, i32 %v3_100009e8)
  store i32 33, i32* %r3.global-to-local, align 4
  store i32 268438016, i32* @lr, align 4
  %v1_100009fc = call i32 @function_100097f4(i32 33)
  %v0_10000a00 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000a00, i32* %r3.global-to-local, align 4
  store i32 268438024, i32* @lr, align 4
  %v1_10000a04 = inttoptr i32 %v0_10000a00 to i8*
  %v2_10000a04 = call i32 @function_1000a100(i8* %v1_10000a04)
  %v0_10000a08 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000a08, i32* %r4.global-to-local, align 4
  %v0_10000a0c = load i32, i32* %r22.global-to-local, align 4
  %v2_10000a0c = add i32 %v0_10000a0c, %v2_10000a04
  store i32 %v2_10000a0c, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000a14.32 to i32), i32* %lr.global-to-local, align 4
  %v3_10000a10 = inttoptr i32 %v2_10000a0c to i8*
  %v4_10000a10 = call i32 @function_1000a128(i8* %v3_10000a10, i32 %v0_10000a08)
  store i32 34, i32* %r3.global-to-local, align 4
  store i32 268438044, i32* @lr, align 4
  %v1_10000a18 = call i32 @function_10009880(i32 34)
  %v0_10000a1c = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000a1c, i32* %r3.global-to-local, align 4
  store i32 268438052, i32* @lr, align 4
  %v1_10000a20 = inttoptr i32 %v0_10000a1c to i8*
  %v2_10000a20 = call i32 @function_1000a100(i8* %v1_10000a20)
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 %v2_10000a20, i32* %r29.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  store i32 268438068, i32* %lr.global-to-local, align 4
  %v3_10000a30 = call i32 @function_100097cc(i32 34, i32* null)
  store i32 %v3_10000a30, i32* %r4.global-to-local, align 4
  %v0_10000a38 = load i32, i32* %r22.global-to-local, align 4
  %v1_10000a38 = load i32, i32* %r29.global-to-local, align 4
  %v2_10000a38 = add i32 %v1_10000a38, %v0_10000a38
  store i32 %v2_10000a38, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000a40.33 to i32), i32* %lr.global-to-local, align 4
  %v2_10000a3c = inttoptr i32 %v2_10000a38 to i8*
  %v3_10000a3c = call i32 @function_1000a128(i8* %v2_10000a3c, i32 %v3_10000a30)
  store i32 34, i32* %r3.global-to-local, align 4
  store i32 268438088, i32* @lr, align 4
  %v1_10000a44 = call i32 @function_100097f4(i32 34)
  %v0_10000a48 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000a48, i32* %r3.global-to-local, align 4
  store i32 268438096, i32* @lr, align 4
  %v1_10000a4c = inttoptr i32 %v0_10000a48 to i8*
  %v2_10000a4c = call i32 @function_1000a100(i8* %v1_10000a4c)
  %v0_10000a50 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000a50, i32* %r4.global-to-local, align 4
  %v0_10000a54 = load i32, i32* %r22.global-to-local, align 4
  %v2_10000a54 = add i32 %v0_10000a54, %v2_10000a4c
  store i32 %v2_10000a54, i32* @r3, align 4
  store i32 268438108, i32* %lr.global-to-local, align 4
  %v3_10000a58 = inttoptr i32 %v2_10000a54 to i8*
  %v4_10000a58 = call i32 @function_1000a128(i8* %v3_10000a58, i32 %v0_10000a50)
  store i32 %v4_10000a58, i32* %r3.global-to-local, align 4
  %v0_10000a5c = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10000a5c, label %dec_label_pc_10000b18, label %dec_label_pc_10000a60

dec_label_pc_10000a60:                            ; preds = %dec_label_pc_100008b0
  store i32 35, i32* %r3.global-to-local, align 4
  store i32 268438120, i32* @lr, align 4
  %v1_10000a64 = call i32 @function_10009880(i32 35)
  %v0_10000a68 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000a68, i32* %r3.global-to-local, align 4
  store i32 268438128, i32* @lr, align 4
  %v1_10000a6c = inttoptr i32 %v0_10000a68 to i8*
  %v2_10000a6c = call i32 @function_1000a100(i8* %v1_10000a6c)
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 %v2_10000a6c, i32* %r29.global-to-local, align 4
  store i32 35, i32* %r3.global-to-local, align 4
  store i32 268438144, i32* %lr.global-to-local, align 4
  %v3_10000a7c = call i32 @function_100097cc(i32 35, i32* null)
  store i32 %v3_10000a7c, i32* %r4.global-to-local, align 4
  %v0_10000a84 = load i32, i32* %r22.global-to-local, align 4
  %v1_10000a84 = load i32, i32* %r29.global-to-local, align 4
  %v2_10000a84 = add i32 %v1_10000a84, %v0_10000a84
  store i32 %v2_10000a84, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000a8c.34 to i32), i32* %lr.global-to-local, align 4
  %v2_10000a88 = inttoptr i32 %v2_10000a84 to i8*
  %v3_10000a88 = call i32 @function_1000a128(i8* %v2_10000a88, i32 %v3_10000a7c)
  store i32 35, i32* %r3.global-to-local, align 4
  store i32 268438164, i32* @lr, align 4
  %v1_10000a90 = call i32 @function_100097f4(i32 35)
  %v0_10000a94 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000a94, i32* %r3.global-to-local, align 4
  store i32 268438172, i32* @lr, align 4
  %v1_10000a98 = inttoptr i32 %v0_10000a94 to i8*
  %v2_10000a98 = call i32 @function_1000a100(i8* %v1_10000a98)
  %v0_10000a9c = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000a9c, i32* %r4.global-to-local, align 4
  %v0_10000aa0 = load i32, i32* %r22.global-to-local, align 4
  %v2_10000aa0 = add i32 %v0_10000aa0, %v2_10000a98
  store i32 %v2_10000aa0, i32* @r3, align 4
  store i32 268438184, i32* %lr.global-to-local, align 4
  %v3_10000aa4 = inttoptr i32 %v2_10000aa0 to i8*
  %v4_10000aa4 = call i32 @function_1000a128(i8* %v3_10000aa4, i32 %v0_10000a9c)
  %v0_10000aa8 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000aa8, i32* %r3.global-to-local, align 4
  store i32 268438192, i32* @lr, align 4
  %v1_10000aac = inttoptr i32 %v0_10000aa8 to i8*
  %v2_10000aac = call i32 @function_1000a100(i8* %v1_10000aac)
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 %v2_10000aac, i32* %r29.global-to-local, align 4
  store i32 40, i32* %r3.global-to-local, align 4
  store i32 268438208, i32* %lr.global-to-local, align 4
  %v3_10000abc = call i32 @function_100097cc(i32 40, i32* null)
  store i32 %v3_10000abc, i32* %r4.global-to-local, align 4
  %v0_10000ac4 = load i32, i32* %r22.global-to-local, align 4
  %v1_10000ac4 = load i32, i32* %r29.global-to-local, align 4
  %v2_10000ac4 = add i32 %v1_10000ac4, %v0_10000ac4
  store i32 %v2_10000ac4, i32* @r3, align 4
  store i32 268438220, i32* %lr.global-to-local, align 4
  %v2_10000ac8 = inttoptr i32 %v2_10000ac4 to i8*
  %v3_10000ac8 = call i32 @function_1000a128(i8* %v2_10000ac8, i32 %v3_10000abc)
  %v0_10000acc = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000acc, i32* %r3.global-to-local, align 4
  store i32 268438228, i32* @lr, align 4
  %v1_10000ad0 = inttoptr i32 %v0_10000acc to i8*
  %v2_10000ad0 = call i32 @function_1000a100(i8* %v1_10000ad0)
  %v0_10000ad4 = load i32, i32* %r16.global-to-local, align 4
  store i32 %v0_10000ad4, i32* %r4.global-to-local, align 4
  %v0_10000ad8 = load i32, i32* %r22.global-to-local, align 4
  %v2_10000ad8 = add i32 %v0_10000ad8, %v2_10000ad0
  store i32 %v2_10000ad8, i32* @r3, align 4
  store i32 268438240, i32* %lr.global-to-local, align 4
  %v2_10000adc = inttoptr i32 %v2_10000ad8 to i8*
  %v3_10000adc = call i32 @function_1000a128(i8* %v2_10000adc, i32 %v0_10000ad4)
  store i32 %v3_10000adc, i32* %r3.global-to-local, align 4
  %v0_10000ae0 = load i32, i32* @r1, align 4
  %v1_10000ae0 = add i32 %v0_10000ae0, 20804
  %v2_10000ae0 = inttoptr i32 %v1_10000ae0 to i32*
  %v3_10000ae0 = load i32, i32* %v2_10000ae0, align 4
  store i32 %v3_10000ae0, i32* %r3.global-to-local, align 4
  store i32 268438248, i32* @lr, align 4
  %v1_10000ae4 = inttoptr i32 %v3_10000ae0 to i8*
  %v2_10000ae4 = call i32 @function_1000a100(i8* %v1_10000ae4)
  store i32 %v2_10000ae4, i32* %r29.global-to-local, align 4
  %v0_10000aec = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000aec, i32* %r3.global-to-local, align 4
  store i32 268438260, i32* @lr, align 4
  %v1_10000af0 = inttoptr i32 %v0_10000aec to i8*
  %v2_10000af0 = call i32 @function_1000a100(i8* %v1_10000af0)
  store i32 10, i32* %r4.global-to-local, align 4
  %v0_10000af8 = load i32, i32* %r22.global-to-local, align 4
  %v2_10000af8 = add i32 %v0_10000af8, %v2_10000af0
  %v0_10000afc = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10000afc, i32* %r3.global-to-local, align 4
  store i32 268438276, i32* %lr.global-to-local, align 4
  %v3_10000b00 = trunc i32 %v0_10000afc to i8
  %v4_10000b00 = call i32 @function_1000a660(i8 %v3_10000b00, i32 10, i32 %v2_10000af8)
  %v0_10000b04 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000b04, i32* %r3.global-to-local, align 4
  store i32 268438284, i32* @lr, align 4
  %v1_10000b08 = inttoptr i32 %v0_10000b04 to i8*
  %v2_10000b08 = call i32 @function_1000a100(i8* %v1_10000b08)
  %v0_10000b0c = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000b0c, i32* %r4.global-to-local, align 4
  %v0_10000b10 = load i32, i32* %r22.global-to-local, align 4
  %v2_10000b10 = add i32 %v0_10000b10, %v2_10000b08
  store i32 %v2_10000b10, i32* @r3, align 4
  store i32 268438296, i32* %lr.global-to-local, align 4
  %v3_10000b14 = inttoptr i32 %v2_10000b10 to i8*
  %v4_10000b14 = call i32 @function_1000a128(i8* %v3_10000b14, i32 %v0_10000b0c)
  store i32 %v4_10000b14, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10000b18

dec_label_pc_10000b18:                            ; preds = %dec_label_pc_100008b0, %dec_label_pc_10000a60
  %v0_10000b18 = load i32, i32* %r30.global-to-local, align 4
  %v1_10000b18 = add i32 %v0_10000b18, 1468
  %v2_10000b18 = inttoptr i32 %v1_10000b18 to i32*
  %v3_10000b18 = load i32, i32* %v2_10000b18, align 4
  store i32 %v3_10000b18, i32* %r0.global-to-local, align 4
  %v1_10000b1c = icmp slt i32 %v3_10000b18, 0
  %v2_10000b1c = icmp sgt i32 %v3_10000b18, 0
  %v3_10000b1c = icmp eq i32 %v3_10000b18, 0
  store i1 %v1_10000b1c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000b1c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000b1c, i1* %cr7_eq.global-to-local, align 1
  %tmp69 = icmp slt i32 %v3_10000b18, 1
  br i1 %tmp69, label %dec_label_pc_10000bb8, label %dec_label_pc_10000b24

dec_label_pc_10000b24:                            ; preds = %dec_label_pc_10000b18
  %v0_10000b24 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000b24, i32* %r3.global-to-local, align 4
  store i32 268438316, i32* @lr, align 4
  %v1_10000b28 = inttoptr i32 %v0_10000b24 to i8*
  %v2_10000b28 = call i32 @function_1000a100(i8* %v1_10000b28)
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v0_10000b30 = load i32, i32* %r22.global-to-local, align 4
  %v2_10000b30 = add i32 %v0_10000b30, %v2_10000b28
  store i32 %v2_10000b30, i32* @r3, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1000d3e4.35 to i32), i32* %r4.global-to-local, align 4
  store i32 268438332, i32* %lr.global-to-local, align 4
  %v3_10000b38 = inttoptr i32 %v2_10000b30 to i8*
  %v4_10000b38 = call i32 @function_1000a128(i8* %v3_10000b38, i32 ptrtoint ([9 x i8]* @global_var_1000d3e4.35 to i32))
  store i32 %v4_10000b38, i32* %r3.global-to-local, align 4
  %v0_10000b3c = load i32, i32* %r30.global-to-local, align 4
  %v1_10000b3c = add i32 %v0_10000b3c, 1468
  %v2_10000b3c = inttoptr i32 %v1_10000b3c to i32*
  %v3_10000b3c = load i32, i32* %v2_10000b3c, align 4
  store i32 %v3_10000b3c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_10000b44 = icmp slt i32 %v3_10000b3c, 0
  %v2_10000b44 = icmp sgt i32 %v3_10000b3c, 0
  %v3_10000b44 = icmp eq i32 %v3_10000b3c, 0
  store i1 %v1_10000b44, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000b44, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000b44, i1* %cr7_eq.global-to-local, align 1
  %v1_10000b48 = load i32, i32* @r1, align 4
  %v2_10000b48 = add i32 %v1_10000b48, 8
  %v3_10000b48 = inttoptr i32 %v2_10000b48 to i32*
  store i32 0, i32* %v3_10000b48, align 4
  %tmp70 = icmp slt i32 %v3_10000b3c, 1
  br i1 %tmp70, label %dec_label_pc_10000ba0, label %dec_label_pc_10000b50

dec_label_pc_10000b50:                            ; preds = %dec_label_pc_10000b24, %dec_label_pc_10000b50
  %v0_10000b50 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000b50, i32* %r3.global-to-local, align 4
  store i32 268438360, i32* @lr, align 4
  %v1_10000b54 = inttoptr i32 %v0_10000b50 to i8*
  %v2_10000b54 = call i32 @function_1000a100(i8* %v1_10000b54)
  store i32 %v2_10000b54, i32* %r3.global-to-local, align 4
  %v0_10000b58 = load i32, i32* @r1, align 4
  %v1_10000b58 = add i32 %v0_10000b58, 8
  %v2_10000b58 = inttoptr i32 %v1_10000b58 to i32*
  %v3_10000b58 = load i32, i32* %v2_10000b58, align 4
  %v0_10000b5c = load i32, i32* %r22.global-to-local, align 4
  %v2_10000b5c = add i32 %v0_10000b5c, %v2_10000b54
  store i32 %v2_10000b5c, i32* @r3, align 4
  %v1_10000b60 = mul i32 %v3_10000b58, 128
  %v1_10000b64 = add i32 %v1_10000b60, 1472
  %v0_10000b68 = load i32, i32* %r30.global-to-local, align 4
  %v2_10000b68 = add i32 %v1_10000b64, %v0_10000b68
  store i32 %v2_10000b68, i32* %r4.global-to-local, align 4
  store i32 268438384, i32* %lr.global-to-local, align 4
  %v2_10000b6c = inttoptr i32 %v2_10000b5c to i8*
  %v3_10000b6c = call i32 @function_1000a128(i8* %v2_10000b6c, i32 %v2_10000b68)
  %v0_10000b70 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000b70, i32* %r3.global-to-local, align 4
  store i32 268438392, i32* @lr, align 4
  %v1_10000b74 = inttoptr i32 %v0_10000b70 to i8*
  %v2_10000b74 = call i32 @function_1000a100(i8* %v1_10000b74)
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000d3f0.36 to i32), i32* %r4.global-to-local, align 4
  %v0_10000b80 = load i32, i32* %r22.global-to-local, align 4
  %v2_10000b80 = add i32 %v0_10000b80, %v2_10000b74
  store i32 %v2_10000b80, i32* @r3, align 4
  store i32 268438408, i32* %lr.global-to-local, align 4
  %v3_10000b84 = inttoptr i32 %v2_10000b80 to i8*
  %v4_10000b84 = call i32 @function_1000a128(i8* %v3_10000b84, i32 ptrtoint ([3 x i8]* @global_var_1000d3f0.36 to i32))
  store i32 %v4_10000b84, i32* %r3.global-to-local, align 4
  %v0_10000b88 = load i32, i32* @r1, align 4
  %v1_10000b88 = add i32 %v0_10000b88, 8
  %v2_10000b88 = inttoptr i32 %v1_10000b88 to i32*
  %v3_10000b88 = load i32, i32* %v2_10000b88, align 4
  store i32 %v3_10000b88, i32* %r9.global-to-local, align 4
  %v0_10000b8c = load i32, i32* %r30.global-to-local, align 4
  %v1_10000b8c = add i32 %v0_10000b8c, 1468
  %v2_10000b8c = inttoptr i32 %v1_10000b8c to i32*
  %v3_10000b8c = load i32, i32* %v2_10000b8c, align 4
  store i32 %v3_10000b8c, i32* %r0.global-to-local, align 4
  %v1_10000b90 = add i32 %v3_10000b88, 1
  store i32 %v1_10000b90, i32* %r11.global-to-local, align 4
  %v2_10000b94 = icmp slt i32 %v3_10000b8c, %v1_10000b90
  %v3_10000b94 = icmp sgt i32 %v3_10000b8c, %v1_10000b90
  %v4_10000b94 = icmp eq i32 %v3_10000b8c, %v1_10000b90
  store i1 %v2_10000b94, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10000b94, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_10000b94, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10000b90, i32* %v2_10000b88, align 4
  br i1 %v3_10000b94, label %dec_label_pc_10000b50, label %dec_label_pc_10000ba0

dec_label_pc_10000ba0:                            ; preds = %dec_label_pc_10000b50, %dec_label_pc_10000b24
  %v0_10000ba0 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000ba0, i32* %r3.global-to-local, align 4
  store i32 268438440, i32* @lr, align 4
  %v1_10000ba4 = inttoptr i32 %v0_10000ba0 to i8*
  %v2_10000ba4 = call i32 @function_1000a100(i8* %v1_10000ba4)
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v0_10000bac = load i32, i32* %r22.global-to-local, align 4
  %v2_10000bac = add i32 %v0_10000bac, %v2_10000ba4
  store i32 %v2_10000bac, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000d3d0.24 to i32), i32* %r4.global-to-local, align 4
  store i32 268438456, i32* %lr.global-to-local, align 4
  %v3_10000bb4 = inttoptr i32 %v2_10000bac to i8*
  %v4_10000bb4 = call i32 @function_1000a128(i8* %v3_10000bb4, i32 ptrtoint ([3 x i8]* @global_var_1000d3d0.24 to i32))
  store i32 %v4_10000bb4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10000bb8

dec_label_pc_10000bb8:                            ; preds = %dec_label_pc_10000b18, %dec_label_pc_10000ba0
  %v0_10000bb8 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000bb8, i32* %r3.global-to-local, align 4
  store i32 268438464, i32* @lr, align 4
  %v1_10000bbc = inttoptr i32 %v0_10000bb8 to i8*
  %v2_10000bbc = call i32 @function_1000a100(i8* %v1_10000bbc)
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v0_10000bc4 = load i32, i32* %r22.global-to-local, align 4
  %v2_10000bc4 = add i32 %v0_10000bc4, %v2_10000bbc
  store i32 %v2_10000bc4, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000d3d0.24 to i32), i32* %r4.global-to-local, align 4
  store i32 268438480, i32* %lr.global-to-local, align 4
  %v3_10000bcc = inttoptr i32 %v2_10000bc4 to i8*
  %v4_10000bcc = call i32 @function_1000a128(i8* %v3_10000bcc, i32 ptrtoint ([3 x i8]* @global_var_1000d3d0.24 to i32))
  store i32 %v4_10000bcc, i32* %r3.global-to-local, align 4
  %v0_10000bd0 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10000bd0, label %dec_label_pc_10000be8, label %dec_label_pc_10000bd4

dec_label_pc_10000bd4:                            ; preds = %dec_label_pc_10000bb8
  %v0_10000bd4 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000bd4, i32* %r3.global-to-local, align 4
  store i32 268438492, i32* @lr, align 4
  %v1_10000bd8 = inttoptr i32 %v0_10000bd4 to i8*
  %v2_10000bd8 = call i32 @function_1000a100(i8* %v1_10000bd8)
  store i32 %v2_10000bd8, i32* %r3.global-to-local, align 4
  %v0_10000bdc = load i32, i32* @r1, align 4
  %v1_10000bdc = add i32 %v0_10000bdc, 20804
  %v2_10000bdc = inttoptr i32 %v1_10000bdc to i32*
  %v3_10000bdc = load i32, i32* %v2_10000bdc, align 4
  store i32 %v3_10000bdc, i32* %r4.global-to-local, align 4
  %v0_10000be0 = load i32, i32* %r22.global-to-local, align 4
  %v2_10000be0 = add i32 %v0_10000be0, %v2_10000bd8
  store i32 %v2_10000be0, i32* @r3, align 4
  store i32 268438504, i32* %lr.global-to-local, align 4
  %v2_10000be4 = inttoptr i32 %v2_10000be0 to i8*
  %v3_10000be4 = call i32 @function_1000a128(i8* %v2_10000be4, i32 %v3_10000bdc)
  store i32 %v3_10000be4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10000be8

dec_label_pc_10000be8:                            ; preds = %dec_label_pc_10000bb8, %dec_label_pc_10000bd4
  %v0_10000be8 = load i32, i32* %r30.global-to-local, align 4
  %v1_10000be8 = add i32 %v0_10000be8, 1440
  store i32 %v1_10000be8, i32* @r31, align 4
  %v0_10000bec = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10000bec, i32* %r3.global-to-local, align 4
  store i32 %v1_10000be8, i32* %r4.global-to-local, align 4
  store i32 268438520, i32* %lr.global-to-local, align 4
  %v2_10000bf4 = inttoptr i32 %v0_10000bec to i8*
  %v3_10000bf4 = call i32 @function_1000a55c(i8* %v2_10000bf4, i32 %v1_10000be8)
  store i32 %v3_10000bf4, i32* %r3.global-to-local, align 4
  %v1_10000bf8 = icmp slt i32 %v3_10000bf4, 0
  %v2_10000bf8 = icmp sgt i32 %v3_10000bf4, 0
  %v3_10000bf8 = icmp eq i32 %v3_10000bf4, 0
  store i1 %v1_10000bf8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000bf8, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000bf8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000bf8, label %dec_label_pc_10001508, label %dec_label_pc_10000c00

dec_label_pc_10000c00:                            ; preds = %dec_label_pc_10000be8, %dec_label_pc_10001508
  %v0_10000c00 = load i32, i32* %r30.global-to-local, align 4
  %v1_10000c00 = inttoptr i32 %v0_10000c00 to i32*
  %v2_10000c00 = load i32, i32* %v1_10000c00, align 4
  store i32 %v2_10000c00, i32* %r29.global-to-local, align 4
  %v0_10000c04 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000c04, i32* %r3.global-to-local, align 4
  store i32 268438540, i32* @lr, align 4
  %v1_10000c08 = inttoptr i32 %v0_10000c04 to i8*
  %v2_10000c08 = call i32 @function_1000a100(i8* %v1_10000c08)
  %v0_10000c0c = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000c0c, i32* %r4.global-to-local, align 4
  %v0_10000c18 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10000c18, i32* %r3.global-to-local, align 4
  store i32 268438560, i32* @lr, align 4
  %v4_10000c1c = call i32 @function_1000b6a4(i32 %v0_10000c18, i32 %v0_10000c0c, i32 %v2_10000c08, i32 16384)
  store i32 %v4_10000c1c, i32* %r3.global-to-local, align 4
  %v0_10000c20 = load i32, i32* %r30.global-to-local, align 4
  %v1_10000c20 = inttoptr i32 %v0_10000c20 to i32*
  %v2_10000c20 = load i32, i32* %v1_10000c20, align 4
  %v0_10000c24 = load i32, i32* %r25.global-to-local, align 4
  %v2_10000c24 = add i32 %v0_10000c20, 12
  %v3_10000c24 = inttoptr i32 %v2_10000c24 to i32*
  store i32 %v0_10000c24, i32* %v3_10000c24, align 4
  %v1_10000c28 = call i32 @__asm_rlwinm(i32 %v2_10000c20, i32 29, i32 3, i32 29)
  %v0_10000c2c = load i32, i32* %r26.global-to-local, align 4
  %v2_10000c2c = icmp slt i32 %v0_10000c2c, %v2_10000c20
  %v3_10000c2c = icmp sgt i32 %v0_10000c2c, %v2_10000c20
  %v4_10000c2c = icmp eq i32 %v0_10000c2c, %v2_10000c20
  store i1 %v2_10000c2c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10000c2c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_10000c2c, i1* %cr7_eq.global-to-local, align 1
  %v1_10000c30 = load i32, i32* %r18.global-to-local, align 4
  %v2_10000c30 = add i32 %v1_10000c30, %v1_10000c28
  store i32 %v2_10000c30, i32* %r11.global-to-local, align 4
  %v1_10000c34 = urem i32 %v2_10000c20, 32
  store i32 %v1_10000c34, i32* %r0.global-to-local, align 4
  %v1_10000c38 = add i32 %v2_10000c30, 36
  %v2_10000c38 = inttoptr i32 %v1_10000c38 to i32*
  %v3_10000c38 = load i32, i32* %v2_10000c38, align 4
  %v0_10000c3c = load i32, i32* %r23.global-to-local, align 4
  %v3_10000c3c = shl i32 %v0_10000c3c, %v1_10000c34
  %v2_10000c40 = or i32 %v3_10000c3c, %v3_10000c38
  store i32 %v2_10000c40, i32* %r9.global-to-local, align 4
  store i32 6, i32* %r0.global-to-local, align 4
  store i32 %v2_10000c40, i32* %v2_10000c38, align 4
  %v0_10000c4c = load i32, i32* %r0.global-to-local, align 4
  %v1_10000c4c = trunc i32 %v0_10000c4c to i8
  %v2_10000c4c = load i32, i32* %r30.global-to-local, align 4
  %v3_10000c4c = add i32 %v2_10000c4c, 4
  %v4_10000c4c = inttoptr i32 %v3_10000c4c to i8*
  store i8 %v1_10000c4c, i8* %v4_10000c4c, align 1
  %v0_10000c50 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_10000c50 = load i1, i1* %cr7_gt.global-to-local, align 1
  %v2_10000c50 = or i1 %v0_10000c50, %v1_10000c50
  br i1 %v2_10000c50, label %dec_label_pc_10000678, label %dec_label_pc_10000c54

dec_label_pc_10000c54:                            ; preds = %dec_label_pc_10000c00
  %v1_10000c54 = add i32 %v2_10000c20, 1
  store i32 %v1_10000c54, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10000784

dec_label_pc_10000c5c:                            ; preds = %dec_label_pc_10000660, %dec_label_pc_10000658, %dec_label_pc_10000650
  %v1_10000c5c = inttoptr i32 %v2_10000c8c to i32*
  %v2_10000c5c = load i32, i32* %v1_10000c5c, align 4
  %v1_10000c60 = call i32 @__asm_rlwinm(i32 %v2_10000c5c, i32 29, i32 3, i32 29)
  %v0_10000c64 = load i32, i32* %r26.global-to-local, align 4
  %v2_10000c64 = icmp slt i32 %v0_10000c64, %v2_10000c5c
  %v3_10000c64 = icmp sgt i32 %v0_10000c64, %v2_10000c5c
  %v4_10000c64 = icmp eq i32 %v0_10000c64, %v2_10000c5c
  store i1 %v2_10000c64, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10000c64, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_10000c64, i1* %cr7_eq.global-to-local, align 1
  %v1_10000c68 = load i32, i32* %r18.global-to-local, align 4
  %v2_10000c68 = add i32 %v1_10000c68, %v1_10000c60
  store i32 %v2_10000c68, i32* %r11.global-to-local, align 4
  %v1_10000c6c = urem i32 %v2_10000c5c, 32
  store i32 %v1_10000c6c, i32* %r0.global-to-local, align 4
  %v1_10000c70 = add i32 %v2_10000c68, 36
  %v2_10000c70 = inttoptr i32 %v1_10000c70 to i32*
  %v3_10000c70 = load i32, i32* %v2_10000c70, align 4
  %v0_10000c74 = load i32, i32* %r23.global-to-local, align 4
  %v3_10000c74 = shl i32 %v0_10000c74, %v1_10000c6c
  store i32 %v3_10000c74, i32* %r0.global-to-local, align 4
  %v2_10000c78 = or i32 %v3_10000c74, %v3_10000c70
  store i32 %v2_10000c78, i32* %r9.global-to-local, align 4
  store i32 %v2_10000c78, i32* %v2_10000c70, align 4
  br i1 %v2_10000c64, label %dec_label_pc_10000c84, label %dec_label_pc_10000678

dec_label_pc_10000c84:                            ; preds = %dec_label_pc_10000c5c
  %v1_10000c84 = add i32 %v2_10000c5c, 1
  store i32 %v1_10000c84, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10000784

dec_label_pc_10000c8c:                            ; preds = %dec_label_pc_1000089c
  store i8 0, i8* %v2_10000688, align 1
  %v0_1000069c.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000069c

dec_label_pc_10000c94:                            ; preds = %dec_label_pc_10000640
  %v1_10000c94 = add i32 %v2_10000c8c, 8
  %v2_10000c94 = inttoptr i32 %v1_10000c94 to i32*
  %v3_10000c94 = load i32, i32* %v2_10000c94, align 4
  %v1_10000c98 = load i32, i32* %r25.global-to-local, align 4
  %v2_10000c98 = sub i32 %v1_10000c98, %v3_10000c94
  store i32 %v2_10000c98, i32* %r0.global-to-local, align 4
  %v1_10000c9c = icmp ult i32 %v2_10000c98, 30
  %v2_10000c9c = icmp ugt i32 %v2_10000c98, 30
  %v3_10000c9c = icmp eq i32 %v2_10000c98, 30
  store i1 %v1_10000c9c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000c9c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000c9c, i1* %cr7_eq.global-to-local, align 1
  %tmp72 = icmp ult i32 %v2_10000c98, 31
  br i1 %tmp72, label %dec_label_pc_10000758, label %dec_label_pc_10000668

dec_label_pc_10000ca8:                            ; preds = %dec_label_pc_10000808
  %v0_10000ca8 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000ca8, i32* @r3, align 4
  store i32 10240, i32* @r4, align 4
  store i32 268438708, i32* @lr, align 4
  %v0_10000cb0 = call i32 @function_1000a1a8()
  store i32 %v0_10000cb0, i32* %r3.global-to-local, align 4
  %v0_10000cb4 = load i32, i32* @r30, align 4
  %v1_10000cb4 = add i32 %v0_10000cb4, -533
  %v2_10000cb4 = inttoptr i32 %v1_10000cb4 to i32*
  %v3_10000cb4 = load i32, i32* %v2_10000cb4, align 4
  store i32 %v3_10000cb4, i32* %r3.global-to-local, align 4
  %v0_10000cb8 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000cb8, i32* %r4.global-to-local, align 4
  store i32 268438728, i32* @lr, align 4
  %v4_10000cc4 = call i32 @function_1000b62c(i32 %v3_10000cb4, i32 %v0_10000cb8, i32 10240, i32 16386)
  store i32 %v4_10000cc4, i32* %r3.global-to-local, align 4
  store i32 %v4_10000cc4, i32* %r24.global-to-local, align 4
  %tmp73 = icmp slt i32 %v4_10000cc4, 1
  br i1 %tmp73, label %dec_label_pc_100018f0, label %dec_label_pc_10000cd0

dec_label_pc_10000cd0:                            ; preds = %dec_label_pc_10000ca8
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v0_10000cd4 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000cd4, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1000d3f4.37 to i32), i32* @r31, align 4
  store i32 %v4_10000cc4, i32* %r4.global-to-local, align 4
  store i32 268438764, i32* %lr.global-to-local, align 4
  %v5_10000ce8 = call i32 @function_1000a1cc(i32 %v0_10000cd4, i32 %v4_10000cc4, i32 ptrtoint ([5 x i8]* @global_var_1000d3f4.37 to i32), i32 4)
  store i32 %v5_10000ce8, i32* %r3.global-to-local, align 4
  %v1_10000cec = icmp slt i32 %v5_10000ce8, -1
  %v2_10000cec = icmp sgt i32 %v5_10000ce8, -1
  %v3_10000cec = icmp eq i32 %v5_10000ce8, -1
  store i1 %v1_10000cec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000cec, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000cec, i1* %cr7_eq.global-to-local, align 1
  %v0_100017d4 = load i32, i32* %r24.global-to-local, align 4
  br i1 %v3_10000cec, label %dec_label_pc_100017d4, label %dec_label_pc_10000cf4

dec_label_pc_10000cf4:                            ; preds = %dec_label_pc_10000cd0, %dec_label_pc_100017d4
  %v0_10000cf4 = load i32, i32* @r31, align 4
  store i32 %v0_100017d4, i32* %r4.global-to-local, align 4
  %v0_10000d00 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000d00, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10000d08.38 to i32), i32* %lr.global-to-local, align 4
  %v5_10000d04 = call i32 @function_1000a1cc(i32 %v0_10000d00, i32 %v0_100017d4, i32 %v0_10000cf4, i32 4)
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10000d0c = load i32, i32* %r18.global-to-local, align 4
  %v2_10000d0c = add i32 %v0_10000d0c, %v5_10000d04
  store i32 %v2_10000d0c, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_10000d14 = add i32 %v2_10000d0c, 10532
  %v4_10000d14 = inttoptr i32 %v3_10000d14 to i8*
  store i8 0, i8* %v4_10000d14, align 1
  store i32 46, i32* %r3.global-to-local, align 4
  store i32 268438816, i32* %lr.global-to-local, align 4
  %v3_10000d1c = call i32 @function_100097cc(i32 46, i32* null)
  %v0_10000d20 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000d20, i32* %r4.global-to-local, align 4
  %v0_10000d28 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000d28, i32* %r3.global-to-local, align 4
  store i32 268438832, i32* %lr.global-to-local, align 4
  %v3_10000d2c = inttoptr i32 %v0_10000d28 to i8*
  %v4_10000d2c = call i32 @function_1000a4b0(i8* %v3_10000d2c, i32 %v0_10000d20, i32 %v3_10000d1c)
  store i32 %v4_10000d2c, i32* %r3.global-to-local, align 4
  %v1_10000d30 = icmp slt i32 %v4_10000d2c, -1
  %v2_10000d30 = icmp sgt i32 %v4_10000d2c, -1
  %v3_10000d30 = icmp eq i32 %v4_10000d2c, -1
  store i1 %v1_10000d30, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000d30, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000d30, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000d30, label %dec_label_pc_10000d40, label %dec_label_pc_10000d38

dec_label_pc_10000d38:                            ; preds = %dec_label_pc_10000cf4
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_10000d3c = load i32, i32* @r30, align 4
  %v2_10000d3c = add i32 %v1_10000d3c, 919
  %v3_10000d3c = inttoptr i32 %v2_10000d3c to i32*
  store i32 2, i32* %v3_10000d3c, align 4
  br label %dec_label_pc_10000d40

dec_label_pc_10000d40:                            ; preds = %dec_label_pc_10000cf4, %dec_label_pc_10000d38
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 45, i32* %r3.global-to-local, align 4
  store i32 268438860, i32* %lr.global-to-local, align 4
  %v3_10000d48 = call i32 @function_100097cc(i32 45, i32* null)
  %v0_10000d4c = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000d4c, i32* %r4.global-to-local, align 4
  %v0_10000d54 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000d54, i32* %r3.global-to-local, align 4
  store i32 268438876, i32* %lr.global-to-local, align 4
  %v3_10000d58 = inttoptr i32 %v0_10000d54 to i8*
  %v4_10000d58 = call i32 @function_1000a4b0(i8* %v3_10000d58, i32 %v0_10000d4c, i32 %v3_10000d48)
  store i32 %v4_10000d58, i32* %r3.global-to-local, align 4
  %v1_10000d5c = icmp slt i32 %v4_10000d58, -1
  %v2_10000d5c = icmp sgt i32 %v4_10000d58, -1
  %v3_10000d5c = icmp eq i32 %v4_10000d58, -1
  store i1 %v1_10000d5c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000d5c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000d5c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000d5c, label %dec_label_pc_10000d6c, label %dec_label_pc_10000d64

dec_label_pc_10000d64:                            ; preds = %dec_label_pc_10000d40
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10000d68 = load i32, i32* @r30, align 4
  %v2_10000d68 = add i32 %v1_10000d68, 919
  %v3_10000d68 = inttoptr i32 %v2_10000d68 to i32*
  store i32 1, i32* %v3_10000d68, align 4
  br label %dec_label_pc_10000d6c

dec_label_pc_10000d6c:                            ; preds = %dec_label_pc_10000d40, %dec_label_pc_10000d64
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_10000d74 = load i32, i32* @r30, align 4
  %v2_10000d74 = add i32 %v1_10000d74, 923
  %v3_10000d74 = inttoptr i32 %v2_10000d74 to i32*
  store i32 0, i32* %v3_10000d74, align 4
  store i32 44, i32* %r3.global-to-local, align 4
  store i32 268438912, i32* %lr.global-to-local, align 4
  %v3_10000d7c = call i32 @function_100097cc(i32 44, i32* null)
  %v0_10000d80 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000d80, i32* %r4.global-to-local, align 4
  %v0_10000d88 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000d88, i32* %r3.global-to-local, align 4
  store i32 268438928, i32* %lr.global-to-local, align 4
  %v3_10000d8c = inttoptr i32 %v0_10000d88 to i8*
  %v4_10000d8c = call i32 @function_1000a4b0(i8* %v3_10000d8c, i32 %v0_10000d80, i32 %v3_10000d7c)
  store i32 %v4_10000d8c, i32* %r3.global-to-local, align 4
  %v1_10000d90 = icmp slt i32 %v4_10000d8c, -1
  %v2_10000d90 = icmp sgt i32 %v4_10000d8c, -1
  %v3_10000d90 = icmp eq i32 %v4_10000d8c, -1
  store i1 %v1_10000d90, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000d90, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000d90, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000d90, label %dec_label_pc_10000e40, label %dec_label_pc_10000d98

dec_label_pc_10000d98:                            ; preds = %dec_label_pc_10000d6c
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 44, i32* %r3.global-to-local, align 4
  store i32 268438948, i32* %lr.global-to-local, align 4
  %v3_10000da0 = call i32 @function_100097cc(i32 44, i32* null)
  %v0_10000da4 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000da4, i32* %r4.global-to-local, align 4
  %v0_10000dac = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000dac, i32* %r3.global-to-local, align 4
  store i32 268438964, i32* %lr.global-to-local, align 4
  %v3_10000db0 = inttoptr i32 %v0_10000dac to i8*
  %v4_10000db0 = call i32 @function_1000a4b0(i8* %v3_10000db0, i32 %v0_10000da4, i32 %v3_10000da0)
  store i32 %v4_10000db0, i32* %r3.global-to-local, align 4
  %v0_10000db8 = load i32, i32* %r18.global-to-local, align 4
  %v2_10000db8 = add i32 %v0_10000db8, %v4_10000db0
  store i32 %v2_10000db8, i32* %r9.global-to-local, align 4
  %v1_10000dbc = add i32 %v2_10000db8, 10532
  %v2_10000dbc = inttoptr i32 %v1_10000dbc to i8*
  %v3_10000dbc = load i8, i8* %v2_10000dbc, align 1
  %v4_10000dbc = zext i8 %v3_10000dbc to i32
  store i32 %v4_10000dbc, i32* %r0.global-to-local, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v1_10000dc8 = xor i32 %v4_10000dbc, 32
  %v1_10000dcc = sub nsw i32 0, %v1_10000dc8
  %v2_10000dcc = xor i32 %v4_10000dbc, -33
  %v4_10000dcc = icmp uge i32 %v2_10000dcc, %v1_10000dcc
  %v2_10000dd0 = zext i1 %v4_10000dcc to i32
  %v3_10000dd0 = add i32 %v2_10000dd0, %v4_10000db0
  store i32 %v3_10000dd0, i32* %r11.global-to-local, align 4
  %v0_10000dd4 = load i32, i32* %r20.global-to-local, align 4
  %v2_10000dd4 = add i32 %v3_10000dd0, %v0_10000dd4
  store i32 %v2_10000dd4, i32* %r28.global-to-local, align 4
  store i32 %v2_10000dd4, i32* %r3.global-to-local, align 4
  %v1_10000ddc = load i32, i32* %r24.global-to-local, align 4
  %v2_10000ddc = sub i32 %v1_10000ddc, %v3_10000dd0
  store i32 %v2_10000ddc, i32* %r4.global-to-local, align 4
  store i32 %v3_10000dd0, i32* %r31.global-to-local, align 4
  store i32 268439016, i32* %lr.global-to-local, align 4
  %v5_10000de4 = call i32 @function_1000a1cc(i32 %v2_10000dd4, i32 %v2_10000ddc, i32 ptrtoint ([3 x i8]* @global_var_1000d3d0.24 to i32), i32 2)
  store i32 %v5_10000de4, i32* %r3.global-to-local, align 4
  %v1_10000de8 = icmp slt i32 %v5_10000de4, -1
  %v2_10000de8 = icmp sgt i32 %v5_10000de4, -1
  %v3_10000de8 = icmp eq i32 %v5_10000de4, -1
  store i1 %v1_10000de8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000de8, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000de8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000de8, label %dec_label_pc_10000e40, label %dec_label_pc_10000df0

dec_label_pc_10000df0:                            ; preds = %dec_label_pc_10000d98
  %v1_10000df0 = icmp slt i32 %v5_10000de4, 1
  %v2_10000df0 = icmp sgt i32 %v5_10000de4, 1
  %v3_10000df0 = icmp eq i32 %v5_10000de4, 1
  store i1 %v1_10000df0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000df0, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000df0, i1* %cr7_eq.global-to-local, align 1
  %tmp74 = icmp slt i32 %v5_10000de4, 2
  br i1 %tmp74, label %dec_label_pc_10000dfc, label %dec_label_pc_10000df8

dec_label_pc_10000df8:                            ; preds = %dec_label_pc_10000df0
  %v1_10000df8 = add i32 %v5_10000de4, -2
  store i32 %v1_10000df8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10000dfc

dec_label_pc_10000dfc:                            ; preds = %dec_label_pc_10000df0, %dec_label_pc_10000df8
  %v1_10000e00 = phi i32 [ %v5_10000de4, %dec_label_pc_10000df0 ], [ %v1_10000df8, %dec_label_pc_10000df8 ]
  %v0_10000dfc = load i32, i32* %r18.global-to-local, align 4
  %v1_10000dfc = load i32, i32* %r31.global-to-local, align 4
  %v2_10000dfc = add i32 %v0_10000dfc, %v1_10000e00
  %v2_10000e00 = add i32 %v2_10000dfc, %v1_10000dfc
  store i32 %v2_10000e00, i32* %r9.global-to-local, align 4
  %v0_10000e04 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10000e04, i32* %r3.global-to-local, align 4
  %v0_10000e08 = load i32, i32* %r29.global-to-local, align 4
  %v1_10000e08 = trunc i32 %v0_10000e08 to i8
  %v3_10000e08 = add i32 %v2_10000e00, 10532
  %v4_10000e08 = inttoptr i32 %v3_10000e08 to i8*
  store i8 %v1_10000e08, i8* %v4_10000e08, align 1
  store i32 268439056, i32* @lr, align 4
  %v1_10000e0c = inttoptr i32 %v0_10000e04 to i8*
  %v2_10000e0c = call i32 @function_1000a100(i8* %v1_10000e0c)
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 %v2_10000e0c, i32* %r29.global-to-local, align 4
  store i32 43, i32* %r3.global-to-local, align 4
  store i32 268439072, i32* %lr.global-to-local, align 4
  %v3_10000e1c = call i32 @function_100097cc(i32 43, i32* null)
  %v0_10000e20 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10000e20, i32* %r4.global-to-local, align 4
  %v0_10000e28 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10000e28, i32* %r3.global-to-local, align 4
  store i32 268439088, i32* %lr.global-to-local, align 4
  %v3_10000e2c = inttoptr i32 %v0_10000e28 to i8*
  %v4_10000e2c = call i32 @function_1000a4b0(i8* %v3_10000e2c, i32 %v0_10000e20, i32 %v3_10000e1c)
  store i32 %v4_10000e2c, i32* %r3.global-to-local, align 4
  %v1_10000e30 = icmp slt i32 %v4_10000e2c, 0
  %v2_10000e30 = icmp sgt i32 %v4_10000e2c, 0
  %v3_10000e30 = icmp eq i32 %v4_10000e2c, 0
  store i1 %v1_10000e30, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000e30, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000e30, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000e30, label %dec_label_pc_10000e40, label %dec_label_pc_10000e38

dec_label_pc_10000e38:                            ; preds = %dec_label_pc_10000dfc
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10000e3c = load i32, i32* @r30, align 4
  %v2_10000e3c = add i32 %v1_10000e3c, 923
  %v3_10000e3c = inttoptr i32 %v2_10000e3c to i32*
  store i32 1, i32* %v3_10000e3c, align 4
  br label %dec_label_pc_10000e40

dec_label_pc_10000e40:                            ; preds = %dec_label_pc_10000dfc, %dec_label_pc_10000d98, %dec_label_pc_10000d6c, %dec_label_pc_10000e38
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_10000e48 = load i32, i32* @r30, align 4
  %v2_10000e48 = add i32 %v1_10000e48, 927
  %v3_10000e48 = inttoptr i32 %v2_10000e48 to i32*
  store i32 0, i32* %v3_10000e48, align 4
  store i32 41, i32* %r3.global-to-local, align 4
  store i32 268439124, i32* %lr.global-to-local, align 4
  %v3_10000e50 = call i32 @function_100097cc(i32 41, i32* null)
  %v0_10000e54 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000e54, i32* %r4.global-to-local, align 4
  %v0_10000e5c = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000e5c, i32* %r3.global-to-local, align 4
  store i32 268439140, i32* %lr.global-to-local, align 4
  %v3_10000e60 = inttoptr i32 %v0_10000e5c to i8*
  %v4_10000e60 = call i32 @function_1000a4b0(i8* %v3_10000e60, i32 %v0_10000e54, i32 %v3_10000e50)
  store i32 %v4_10000e60, i32* %r3.global-to-local, align 4
  %v1_10000e64 = icmp slt i32 %v4_10000e60, -1
  %v2_10000e64 = icmp sgt i32 %v4_10000e60, -1
  %v3_10000e64 = icmp eq i32 %v4_10000e60, -1
  store i1 %v1_10000e64, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000e64, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000e64, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000e64, label %dec_label_pc_10000f14, label %dec_label_pc_10000e6c

dec_label_pc_10000e6c:                            ; preds = %dec_label_pc_10000e40
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 41, i32* %r3.global-to-local, align 4
  store i32 268439160, i32* %lr.global-to-local, align 4
  %v3_10000e74 = call i32 @function_100097cc(i32 41, i32* null)
  %v0_10000e78 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000e78, i32* %r4.global-to-local, align 4
  %v0_10000e80 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000e80, i32* %r3.global-to-local, align 4
  store i32 268439176, i32* %lr.global-to-local, align 4
  %v3_10000e84 = inttoptr i32 %v0_10000e80 to i8*
  %v4_10000e84 = call i32 @function_1000a4b0(i8* %v3_10000e84, i32 %v0_10000e78, i32 %v3_10000e74)
  store i32 %v4_10000e84, i32* %r3.global-to-local, align 4
  %v0_10000e8c = load i32, i32* %r18.global-to-local, align 4
  %v2_10000e8c = add i32 %v0_10000e8c, %v4_10000e84
  store i32 %v2_10000e8c, i32* %r9.global-to-local, align 4
  %v1_10000e90 = add i32 %v2_10000e8c, 10532
  %v2_10000e90 = inttoptr i32 %v1_10000e90 to i8*
  %v3_10000e90 = load i8, i8* %v2_10000e90, align 1
  %v4_10000e90 = zext i8 %v3_10000e90 to i32
  store i32 %v4_10000e90, i32* %r0.global-to-local, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v1_10000e9c = xor i32 %v4_10000e90, 32
  %v1_10000ea0 = sub nsw i32 0, %v1_10000e9c
  %v2_10000ea0 = xor i32 %v4_10000e90, -33
  %v4_10000ea0 = icmp uge i32 %v2_10000ea0, %v1_10000ea0
  %v2_10000ea4 = zext i1 %v4_10000ea0 to i32
  %v3_10000ea4 = add i32 %v2_10000ea4, %v4_10000e84
  store i32 %v3_10000ea4, i32* %r11.global-to-local, align 4
  %v0_10000ea8 = load i32, i32* %r20.global-to-local, align 4
  %v2_10000ea8 = add i32 %v3_10000ea4, %v0_10000ea8
  store i32 %v2_10000ea8, i32* %r28.global-to-local, align 4
  store i32 %v2_10000ea8, i32* %r3.global-to-local, align 4
  %v1_10000eb0 = load i32, i32* %r24.global-to-local, align 4
  %v2_10000eb0 = sub i32 %v1_10000eb0, %v3_10000ea4
  store i32 %v2_10000eb0, i32* %r4.global-to-local, align 4
  store i32 %v3_10000ea4, i32* %r31.global-to-local, align 4
  store i32 268439228, i32* %lr.global-to-local, align 4
  %v5_10000eb8 = call i32 @function_1000a1cc(i32 %v2_10000ea8, i32 %v2_10000eb0, i32 ptrtoint ([3 x i8]* @global_var_1000d3d0.24 to i32), i32 2)
  store i32 %v5_10000eb8, i32* %r3.global-to-local, align 4
  %v1_10000ebc = icmp slt i32 %v5_10000eb8, -1
  %v2_10000ebc = icmp sgt i32 %v5_10000eb8, -1
  %v3_10000ebc = icmp eq i32 %v5_10000eb8, -1
  store i1 %v1_10000ebc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000ebc, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000ebc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000ebc, label %dec_label_pc_10000f14, label %dec_label_pc_10000ec4

dec_label_pc_10000ec4:                            ; preds = %dec_label_pc_10000e6c
  %v1_10000ec4 = icmp slt i32 %v5_10000eb8, 1
  %v2_10000ec4 = icmp sgt i32 %v5_10000eb8, 1
  %v3_10000ec4 = icmp eq i32 %v5_10000eb8, 1
  store i1 %v1_10000ec4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000ec4, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000ec4, i1* %cr7_eq.global-to-local, align 1
  %tmp75 = icmp slt i32 %v5_10000eb8, 2
  br i1 %tmp75, label %dec_label_pc_10000ed0, label %dec_label_pc_10000ecc

dec_label_pc_10000ecc:                            ; preds = %dec_label_pc_10000ec4
  %v1_10000ecc = add i32 %v5_10000eb8, -2
  store i32 %v1_10000ecc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10000ed0

dec_label_pc_10000ed0:                            ; preds = %dec_label_pc_10000ec4, %dec_label_pc_10000ecc
  %v1_10000ed4 = phi i32 [ %v5_10000eb8, %dec_label_pc_10000ec4 ], [ %v1_10000ecc, %dec_label_pc_10000ecc ]
  %v0_10000ed0 = load i32, i32* %r18.global-to-local, align 4
  %v1_10000ed0 = load i32, i32* %r31.global-to-local, align 4
  %v2_10000ed0 = add i32 %v0_10000ed0, %v1_10000ed4
  %v2_10000ed4 = add i32 %v2_10000ed0, %v1_10000ed0
  store i32 %v2_10000ed4, i32* %r9.global-to-local, align 4
  %v0_10000ed8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10000ed8, i32* %r3.global-to-local, align 4
  %v0_10000edc = load i32, i32* %r29.global-to-local, align 4
  %v1_10000edc = trunc i32 %v0_10000edc to i8
  %v3_10000edc = add i32 %v2_10000ed4, 10532
  %v4_10000edc = inttoptr i32 %v3_10000edc to i8*
  store i8 %v1_10000edc, i8* %v4_10000edc, align 1
  store i32 268439268, i32* @lr, align 4
  %v1_10000ee0 = inttoptr i32 %v0_10000ed8 to i8*
  %v2_10000ee0 = call i32 @function_1000a100(i8* %v1_10000ee0)
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 %v2_10000ee0, i32* %r29.global-to-local, align 4
  store i32 42, i32* %r3.global-to-local, align 4
  store i32 268439284, i32* %lr.global-to-local, align 4
  %v3_10000ef0 = call i32 @function_100097cc(i32 42, i32* null)
  %v0_10000ef4 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10000ef4, i32* %r4.global-to-local, align 4
  %v0_10000efc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10000efc, i32* %r3.global-to-local, align 4
  store i32 268439300, i32* %lr.global-to-local, align 4
  %v3_10000f00 = inttoptr i32 %v0_10000efc to i8*
  %v4_10000f00 = call i32 @function_1000a4b0(i8* %v3_10000f00, i32 %v0_10000ef4, i32 %v3_10000ef0)
  store i32 %v4_10000f00, i32* %r3.global-to-local, align 4
  %v1_10000f04 = icmp slt i32 %v4_10000f00, 0
  %v2_10000f04 = icmp sgt i32 %v4_10000f00, 0
  %v3_10000f04 = icmp eq i32 %v4_10000f00, 0
  store i1 %v1_10000f04, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000f04, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000f04, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000f04, label %dec_label_pc_10000f14, label %dec_label_pc_10000f0c

dec_label_pc_10000f0c:                            ; preds = %dec_label_pc_10000ed0
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10000f10 = load i32, i32* @r30, align 4
  %v2_10000f10 = add i32 %v1_10000f10, 927
  %v3_10000f10 = inttoptr i32 %v2_10000f10 to i32*
  store i32 1, i32* %v3_10000f10, align 4
  br label %dec_label_pc_10000f14

dec_label_pc_10000f14:                            ; preds = %dec_label_pc_10000ed0, %dec_label_pc_10000e6c, %dec_label_pc_10000e40, %dec_label_pc_10000f0c
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 40, i32* %r3.global-to-local, align 4
  store i32 268439328, i32* %lr.global-to-local, align 4
  %v3_10000f1c = call i32 @function_100097cc(i32 40, i32* null)
  %v0_10000f20 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000f20, i32* %r4.global-to-local, align 4
  %v0_10000f28 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000f28, i32* %r3.global-to-local, align 4
  store i32 268439344, i32* %lr.global-to-local, align 4
  %v3_10000f2c = inttoptr i32 %v0_10000f28 to i8*
  %v4_10000f2c = call i32 @function_1000a4b0(i8* %v3_10000f2c, i32 %v0_10000f20, i32 %v3_10000f1c)
  store i32 %v4_10000f2c, i32* %r3.global-to-local, align 4
  %v1_10000f30 = icmp slt i32 %v4_10000f2c, -1
  %v2_10000f30 = icmp sgt i32 %v4_10000f2c, -1
  %v3_10000f30 = icmp eq i32 %v4_10000f2c, -1
  store i1 %v1_10000f30, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000f30, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000f30, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000f30, label %dec_label_pc_10001770, label %dec_label_pc_10000f38

dec_label_pc_10000f38:                            ; preds = %dec_label_pc_10000f14
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 40, i32* %r3.global-to-local, align 4
  store i32 268439364, i32* %lr.global-to-local, align 4
  %v3_10000f40 = call i32 @function_100097cc(i32 40, i32* null)
  %v0_10000f44 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000f44, i32* %r4.global-to-local, align 4
  %v0_10000f4c = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000f4c, i32* %r3.global-to-local, align 4
  store i32 268439380, i32* %lr.global-to-local, align 4
  %v3_10000f50 = inttoptr i32 %v0_10000f4c to i8*
  %v4_10000f50 = call i32 @function_1000a4b0(i8* %v3_10000f50, i32 %v0_10000f44, i32 %v3_10000f40)
  store i32 %v4_10000f50, i32* %r3.global-to-local, align 4
  %v0_10000f58 = load i32, i32* %r18.global-to-local, align 4
  %v2_10000f58 = add i32 %v0_10000f58, %v4_10000f50
  store i32 %v2_10000f58, i32* %r9.global-to-local, align 4
  %v1_10000f5c = add i32 %v2_10000f58, 10532
  %v2_10000f5c = inttoptr i32 %v1_10000f5c to i8*
  %v3_10000f5c = load i8, i8* %v2_10000f5c, align 1
  %v4_10000f5c = zext i8 %v3_10000f5c to i32
  store i32 %v4_10000f5c, i32* %r0.global-to-local, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v1_10000f68 = xor i32 %v4_10000f5c, 32
  %v1_10000f6c = sub nsw i32 0, %v1_10000f68
  %v2_10000f6c = xor i32 %v4_10000f5c, -33
  %v4_10000f6c = icmp uge i32 %v2_10000f6c, %v1_10000f6c
  %v2_10000f70 = zext i1 %v4_10000f6c to i32
  %v3_10000f70 = add i32 %v2_10000f70, %v4_10000f50
  store i32 %v3_10000f70, i32* %r11.global-to-local, align 4
  %v0_10000f74 = load i32, i32* %r20.global-to-local, align 4
  %v2_10000f74 = add i32 %v3_10000f70, %v0_10000f74
  store i32 %v2_10000f74, i32* %r29.global-to-local, align 4
  store i32 %v2_10000f74, i32* %r3.global-to-local, align 4
  %v1_10000f7c = load i32, i32* %r24.global-to-local, align 4
  %v2_10000f7c = sub i32 %v1_10000f7c, %v3_10000f70
  store i32 %v2_10000f7c, i32* %r4.global-to-local, align 4
  store i32 %v3_10000f70, i32* %r31.global-to-local, align 4
  store i32 268439432, i32* %lr.global-to-local, align 4
  %v5_10000f84 = call i32 @function_1000a1cc(i32 %v2_10000f74, i32 %v2_10000f7c, i32 ptrtoint ([3 x i8]* @global_var_1000d3d0.24 to i32), i32 2)
  store i32 %v5_10000f84, i32* %r3.global-to-local, align 4
  %v1_10000f88 = icmp slt i32 %v5_10000f84, -1
  %v2_10000f88 = icmp sgt i32 %v5_10000f84, -1
  %v3_10000f88 = icmp eq i32 %v5_10000f84, -1
  store i1 %v1_10000f88, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000f88, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000f88, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000f88, label %dec_label_pc_10000fbc, label %dec_label_pc_10000f90

dec_label_pc_10000f90:                            ; preds = %dec_label_pc_10000f38
  %v1_10000f90 = icmp slt i32 %v5_10000f84, 1
  %v2_10000f90 = icmp sgt i32 %v5_10000f84, 1
  %v3_10000f90 = icmp eq i32 %v5_10000f84, 1
  store i1 %v1_10000f90, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000f90, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000f90, i1* %cr7_eq.global-to-local, align 1
  %tmp76 = icmp slt i32 %v5_10000f84, 2
  br i1 %tmp76, label %dec_label_pc_10000f9c, label %dec_label_pc_10000f98

dec_label_pc_10000f98:                            ; preds = %dec_label_pc_10000f90
  %v1_10000f98 = add i32 %v5_10000f84, -2
  store i32 %v1_10000f98, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10000f9c

dec_label_pc_10000f9c:                            ; preds = %dec_label_pc_10000f90, %dec_label_pc_10000f98
  %v1_10000fa4 = phi i32 [ %v5_10000f84, %dec_label_pc_10000f90 ], [ %v1_10000f98, %dec_label_pc_10000f98 ]
  %v0_10000f9c = load i32, i32* %r18.global-to-local, align 4
  %v1_10000f9c = load i32, i32* %r31.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10000f9c = add i32 %v0_10000f9c, %v1_10000fa4
  %v2_10000fa4 = add i32 %v2_10000f9c, %v1_10000f9c
  store i32 %v2_10000fa4, i32* %r9.global-to-local, align 4
  store i32 10, i32* %r4.global-to-local, align 4
  %v3_10000fac = add i32 %v2_10000fa4, 10532
  %v4_10000fac = inttoptr i32 %v3_10000fac to i8*
  store i8 0, i8* %v4_10000fac, align 1
  %v0_10000fb0 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10000fb0, i32* @r3, align 4
  store i32 268439480, i32* @lr, align 4
  %v2_10000fb4 = call i32 @function_1000a228(i32 %v0_10000fb0, i32 10)
  store i32 %v2_10000fb4, i32* %r3.global-to-local, align 4
  %v1_10000fb8 = load i32, i32* @r30, align 4
  %v2_10000fb8 = add i32 %v1_10000fb8, 931
  %v3_10000fb8 = inttoptr i32 %v2_10000fb8 to i32*
  store i32 %v2_10000fb4, i32* %v3_10000fb8, align 4
  br label %dec_label_pc_10000fbc

dec_label_pc_10000fbc:                            ; preds = %dec_label_pc_10000f38, %dec_label_pc_10001770, %dec_label_pc_10000f9c
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 39, i32* %r3.global-to-local, align 4
  %v0_10000fc8 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000fc8, i32* %r31.global-to-local, align 4
  store i32 268439504, i32* %lr.global-to-local, align 4
  %v3_10000fcc = call i32 @function_100097cc(i32 39, i32* null)
  %v0_10000fd0 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000fd0, i32* %r4.global-to-local, align 4
  %v0_10000fd8 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10000fd8, i32* %r3.global-to-local, align 4
  store i32 268439520, i32* %lr.global-to-local, align 4
  %v3_10000fdc = inttoptr i32 %v0_10000fd8 to i8*
  %v4_10000fdc = call i32 @function_1000a4b0(i8* %v3_10000fdc, i32 %v0_10000fd0, i32 %v3_10000fcc)
  store i32 %v4_10000fdc, i32* %r3.global-to-local, align 4
  %v1_10000fe0 = icmp slt i32 %v4_10000fdc, -1
  %v2_10000fe0 = icmp sgt i32 %v4_10000fdc, -1
  %v3_10000fe0 = icmp eq i32 %v4_10000fdc, -1
  store i1 %v1_10000fe0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000fe0, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000fe0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000fe0, label %dec_label_pc_1000111c, label %dec_label_pc_10000fe8

dec_label_pc_10000fe8:                            ; preds = %dec_label_pc_10000fbc, %dec_label_pc_100010f4
  %v0_10000fe8 = load i32, i32* @r30, align 4
  %v1_10000fe8 = add i32 %v0_10000fe8, 935
  %v2_10000fe8 = inttoptr i32 %v1_10000fe8 to i32*
  %v3_10000fe8 = load i32, i32* %v2_10000fe8, align 4
  store i32 %v3_10000fe8, i32* %r0.global-to-local, align 4
  %v1_10000fec = icmp slt i32 %v3_10000fe8, 4
  %v2_10000fec = icmp sgt i32 %v3_10000fe8, 4
  %v3_10000fec = icmp eq i32 %v3_10000fe8, 4
  store i1 %v1_10000fec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000fec, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000fec, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10000fec, label %dec_label_pc_1000111c, label %dec_label_pc_10000ff4

dec_label_pc_10000ff4:                            ; preds = %dec_label_pc_10000fe8
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 39, i32* %r3.global-to-local, align 4
  store i32 268439552, i32* %lr.global-to-local, align 4
  %v3_10000ffc = call i32 @function_100097cc(i32 39, i32* null)
  %v0_10001000 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10001000, i32* %r4.global-to-local, align 4
  %v0_10001008 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10001008, i32* %r3.global-to-local, align 4
  store i32 268439568, i32* %lr.global-to-local, align 4
  %v3_1000100c = inttoptr i32 %v0_10001008 to i8*
  %v4_1000100c = call i32 @function_1000a4b0(i8* %v3_1000100c, i32 %v0_10001000, i32 %v3_10000ffc)
  store i32 %v4_1000100c, i32* %r3.global-to-local, align 4
  %v0_10001010 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001010 = add i32 %v0_10001010, %v4_1000100c
  store i32 %v2_10001010, i32* %r26.global-to-local, align 4
  %v0_10001014 = load i32, i32* %r18.global-to-local, align 4
  %v2_10001014 = add i32 %v0_10001014, %v2_10001010
  store i32 %v2_10001014, i32* %r9.global-to-local, align 4
  %v1_10001018 = add i32 %v2_10001014, 10532
  %v2_10001018 = inttoptr i32 %v1_10001018 to i8*
  %v3_10001018 = load i8, i8* %v2_10001018, align 1
  %v4_10001018 = zext i8 %v3_10001018 to i32
  store i32 %v4_10001018, i32* %r0.global-to-local, align 4
  %v1_1000101c = icmp ult i8 %v3_10001018, 32
  %v2_1000101c = icmp ugt i8 %v3_10001018, 32
  %v3_1000101c = icmp eq i8 %v3_10001018, 32
  store i1 %v1_1000101c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000101c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000101c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000101c, label %dec_label_pc_1000124c, label %dec_label_pc_10001024

dec_label_pc_10001024:                            ; preds = %dec_label_pc_10000ff4, %dec_label_pc_1000124c
  %v0_1000102c = phi i32 [ %v4_1000100c, %dec_label_pc_10000ff4 ], [ %v1_1000124c, %dec_label_pc_1000124c ]
  %v1_10001024 = load i32, i32* %r24.global-to-local, align 4
  %v2_10001024 = sub i32 %v1_10001024, %v0_10001010
  store i32 %v2_10001024, i32* %r0.global-to-local, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v2_1000102c = sub i32 %v2_10001024, %v0_1000102c
  store i32 %v2_1000102c, i32* %r27.global-to-local, align 4
  %v0_10001030 = load i32, i32* %r31.global-to-local, align 4
  %v2_10001030 = add i32 %v0_10001030, %v0_1000102c
  store i32 %v2_10001030, i32* %r29.global-to-local, align 4
  store i32 %v2_10001030, i32* %r3.global-to-local, align 4
  store i32 %v2_1000102c, i32* %r4.global-to-local, align 4
  store i32 268439624, i32* %lr.global-to-local, align 4
  %v5_10001044 = call i32 @function_1000a1cc(i32 %v2_10001030, i32 %v2_1000102c, i32 ptrtoint ([3 x i8]* @global_var_1000d3d0.24 to i32), i32 2)
  store i32 %v5_10001044, i32* %r3.global-to-local, align 4
  %v1_10001048 = icmp slt i32 %v5_10001044, -1
  %v2_10001048 = icmp sgt i32 %v5_10001044, -1
  %v3_10001048 = icmp eq i32 %v5_10001044, -1
  store i1 %v1_10001048, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001048, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001048, i1* %cr7_eq.global-to-local, align 1
  store i32 %v5_10001044, i32* %r31.global-to-local, align 4
  br i1 %v3_10001048, label %dec_label_pc_100010f0, label %dec_label_pc_10001054

dec_label_pc_10001054:                            ; preds = %dec_label_pc_10001024
  %v1_10001054 = icmp slt i32 %v5_10001044, 1
  %v2_10001054 = icmp sgt i32 %v5_10001044, 1
  %v3_10001054 = icmp eq i32 %v5_10001044, 1
  store i1 %v1_10001054, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001054, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001054, i1* %cr7_eq.global-to-local, align 1
  %v0_10001058 = load i32, i32* %r20.global-to-local, align 4
  %v1_10001058 = load i32, i32* %r26.global-to-local, align 4
  %v2_10001058 = add i32 %v1_10001058, %v0_10001058
  store i32 %v2_10001058, i32* %r28.global-to-local, align 4
  %tmp77 = icmp slt i32 %v5_10001044, 2
  br i1 %tmp77, label %dec_label_pc_10001064, label %dec_label_pc_10001060

dec_label_pc_10001060:                            ; preds = %dec_label_pc_10001054
  %v1_10001060 = add i32 %v5_10001044, -2
  store i32 %v1_10001060, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10001064

dec_label_pc_10001064:                            ; preds = %dec_label_pc_10001054, %dec_label_pc_10001060
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v0_10001068 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10001068, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000d3fc.39 to i32), i32* %r25.global-to-local, align 4
  %v0_10001070 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10001070, i32* %r4.global-to-local, align 4
  store i32 268439680, i32* %lr.global-to-local, align 4
  %v4_1000107c = call i32 @function_1000a1cc(i32 %v0_10001068, i32 %v0_10001070, i32 ptrtoint (i32* @global_var_1000d3fc.39 to i32), i32 1)
  store i32 %v4_1000107c, i32* %r3.global-to-local, align 4
  %v1_10001080 = icmp slt i32 %v4_1000107c, 0
  %v2_10001080 = icmp sgt i32 %v4_1000107c, 0
  %v3_10001080 = icmp eq i32 %v4_1000107c, 0
  store i1 %v1_10001080, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001080, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001080, i1* %cr7_eq.global-to-local, align 1
  %tmp78 = icmp slt i32 %v4_1000107c, 1
  br i1 %tmp78, label %dec_label_pc_10001064.dec_label_pc_100010a0_crit_edge, label %dec_label_pc_10001088

dec_label_pc_10001064.dec_label_pc_100010a0_crit_edge: ; preds = %dec_label_pc_10001064
  %v1_100010a0.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100010a0

dec_label_pc_10001088:                            ; preds = %dec_label_pc_10001064
  %v0_10001088 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10001088, i32* %r3.global-to-local, align 4
  %v0_1000108c = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_1000108c, i32* %r4.global-to-local, align 4
  %v0_10001090 = load i32, i32* %r25.global-to-local, align 4
  store i32 268439708, i32* %lr.global-to-local, align 4
  %v4_10001098 = call i32 @function_1000a1cc(i32 %v0_10001088, i32 %v0_1000108c, i32 %v0_10001090, i32 1)
  store i32 %v4_10001098, i32* %r3.global-to-local, align 4
  %v1_1000109c = add i32 %v4_10001098, -1
  store i32 %v1_1000109c, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100010a0

dec_label_pc_100010a0:                            ; preds = %dec_label_pc_10001064.dec_label_pc_100010a0_crit_edge, %dec_label_pc_10001088
  %v1_100010a0 = phi i32 [ %v1_100010a0.pre, %dec_label_pc_10001064.dec_label_pc_100010a0_crit_edge ], [ %v1_1000109c, %dec_label_pc_10001088 ]
  %v0_100010a0 = load i32, i32* %r18.global-to-local, align 4
  %v2_100010a0 = add i32 %v0_100010a0, %v1_100010a0
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_100010a8 = load i32, i32* %r26.global-to-local, align 4
  %v2_100010a8 = add i32 %v2_100010a0, %v1_100010a8
  store i32 %v2_100010a8, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_100010b0 = add i32 %v2_100010a8, 10532
  %v4_100010b0 = inttoptr i32 %v3_100010b0 to i8*
  store i8 0, i8* %v4_100010b0, align 1
  %v0_100010b4 = load i32, i32* %r11.global-to-local, align 4
  %v1_100010b4 = load i32, i32* @r1, align 4
  %v2_100010b4 = add i32 %v1_100010b4, 8
  %v3_100010b4 = inttoptr i32 %v2_100010b4 to i32*
  store i32 %v0_100010b4, i32* %v3_100010b4, align 4
  br label %dec_label_pc_100010d0

dec_label_pc_100010bc:                            ; preds = %dec_label_pc_100010d0
  br i1 %v3_100010c0, label %dec_label_pc_100011f0, label %dec_label_pc_100010c8

dec_label_pc_100010c8:                            ; preds = %dec_label_pc_100010bc
  %v1_100010c8 = add i32 %v3_100010d8, 1
  store i32 %v1_100010c8, i32* %r11.global-to-local, align 4
  store i32 %v1_100010c8, i32* %v2_100010d8, align 4
  br label %dec_label_pc_100010d0

dec_label_pc_100010d0:                            ; preds = %dec_label_pc_100010a0, %dec_label_pc_100010c8
  %v0_100010d0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100010d0, i32* %r3.global-to-local, align 4
  store i32 268439768, i32* @lr, align 4
  %v1_100010d4 = inttoptr i32 %v0_100010d0 to i8*
  %v2_100010d4 = call i32 @function_1000a100(i8* %v1_100010d4)
  store i32 %v2_100010d4, i32* %r3.global-to-local, align 4
  %v0_100010d8 = load i32, i32* @r1, align 4
  %v1_100010d8 = add i32 %v0_100010d8, 8
  %v2_100010d8 = inttoptr i32 %v1_100010d8 to i32*
  %v3_100010d8 = load i32, i32* %v2_100010d8, align 4
  store i32 %v3_100010d8, i32* %r29.global-to-local, align 4
  %v2_100010dc = icmp slt i32 %v2_100010d4, %v3_100010d8
  %v3_100010dc = icmp sgt i32 %v2_100010d4, %v3_100010d8
  %v4_100010dc = icmp eq i32 %v2_100010d4, %v3_100010d8
  store i1 %v2_100010dc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100010dc, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_100010dc, i1* %cr7_eq.global-to-local, align 1
  %v0_100010bc = load i32, i32* %r28.global-to-local, align 4
  %v2_100010bc = add i32 %v0_100010bc, %v3_100010d8
  %v3_100010bc = inttoptr i32 %v2_100010bc to i8*
  %v4_100010bc = load i8, i8* %v3_100010bc, align 1
  %v5_100010bc = zext i8 %v4_100010bc to i32
  store i32 %v5_100010bc, i32* %r0.global-to-local, align 4
  %v1_100010c0 = icmp ult i8 %v4_100010bc, 61
  %v2_100010c0 = icmp ugt i8 %v4_100010bc, 61
  %v3_100010c0 = icmp eq i8 %v4_100010bc, 61
  store i1 %v1_100010c0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100010c0, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100010c0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100010dc, label %dec_label_pc_100010bc, label %dec_label_pc_100010e4

dec_label_pc_100010e4:                            ; preds = %dec_label_pc_100010d0
  br i1 %v3_100010c0, label %dec_label_pc_100011f0, label %dec_label_pc_100010f0

dec_label_pc_100010f0:                            ; preds = %dec_label_pc_10001228, %dec_label_pc_10001258, %dec_label_pc_100010e4, %dec_label_pc_10001024
  %v0_100010f0 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_100010f0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100010f4

dec_label_pc_100010f4:                            ; preds = %dec_label_pc_10001268, %dec_label_pc_100010f0
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 39, i32* %r3.global-to-local, align 4
  store i32 268439808, i32* %lr.global-to-local, align 4
  %v3_100010fc = call i32 @function_100097cc(i32 39, i32* null)
  %v0_10001100 = load i32, i32* %r20.global-to-local, align 4
  %v1_10001100 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001100 = add i32 %v1_10001100, %v0_10001100
  store i32 %v2_10001100, i32* %r31.global-to-local, align 4
  %v0_10001108 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10001108, i32* %r4.global-to-local, align 4
  store i32 %v2_10001100, i32* %r3.global-to-local, align 4
  store i32 268439828, i32* %lr.global-to-local, align 4
  %v3_10001110 = inttoptr i32 %v2_10001100 to i8*
  %v4_10001110 = call i32 @function_1000a4b0(i8* %v3_10001110, i32 %v0_10001108, i32 %v3_100010fc)
  store i32 %v4_10001110, i32* %r3.global-to-local, align 4
  %v1_10001114 = icmp slt i32 %v4_10001110, -1
  %v2_10001114 = icmp sgt i32 %v4_10001110, -1
  %v3_10001114 = icmp eq i32 %v4_10001110, -1
  store i1 %v1_10001114, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001114, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001114, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001114, label %dec_label_pc_1000111c, label %dec_label_pc_10000fe8

dec_label_pc_1000111c:                            ; preds = %dec_label_pc_100010f4, %dec_label_pc_10000fe8, %dec_label_pc_10000fbc
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 38, i32* %r3.global-to-local, align 4
  store i32 268439848, i32* %lr.global-to-local, align 4
  %v3_10001124 = call i32 @function_100097cc(i32 38, i32* null)
  %v0_10001128 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10001128, i32* %r4.global-to-local, align 4
  %v0_10001130 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10001130, i32* %r3.global-to-local, align 4
  store i32 268439864, i32* %lr.global-to-local, align 4
  %v3_10001134 = inttoptr i32 %v0_10001130 to i8*
  %v4_10001134 = call i32 @function_1000a4b0(i8* %v3_10001134, i32 %v0_10001128, i32 %v3_10001124)
  store i32 %v4_10001134, i32* %r3.global-to-local, align 4
  %v1_10001138 = icmp slt i32 %v4_10001134, -1
  %v2_10001138 = icmp sgt i32 %v4_10001134, -1
  %v3_10001138 = icmp eq i32 %v4_10001134, -1
  store i1 %v1_10001138, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001138, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001138, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001138, label %dec_label_pc_10001574, label %dec_label_pc_10001140

dec_label_pc_10001140:                            ; preds = %dec_label_pc_1000111c
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 38, i32* %r3.global-to-local, align 4
  store i32 268439884, i32* %lr.global-to-local, align 4
  %v3_10001148 = call i32 @function_100097cc(i32 38, i32* null)
  %v0_1000114c = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_1000114c, i32* %r4.global-to-local, align 4
  %v0_10001154 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10001154, i32* %r3.global-to-local, align 4
  store i32 268439900, i32* %lr.global-to-local, align 4
  %v3_10001158 = inttoptr i32 %v0_10001154 to i8*
  %v4_10001158 = call i32 @function_1000a4b0(i8* %v3_10001158, i32 %v0_1000114c, i32 %v3_10001148)
  store i32 %v4_10001158, i32* %r3.global-to-local, align 4
  %v0_10001160 = load i32, i32* %r18.global-to-local, align 4
  %v2_10001160 = add i32 %v0_10001160, %v4_10001158
  store i32 %v2_10001160, i32* %r9.global-to-local, align 4
  %v1_10001164 = add i32 %v2_10001160, 10532
  %v2_10001164 = inttoptr i32 %v1_10001164 to i8*
  %v3_10001164 = load i8, i8* %v2_10001164, align 1
  %v4_10001164 = zext i8 %v3_10001164 to i32
  store i32 %v4_10001164, i32* %r0.global-to-local, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v1_10001170 = xor i32 %v4_10001164, 32
  %v1_10001174 = sub nsw i32 0, %v1_10001170
  %v2_10001174 = xor i32 %v4_10001164, -33
  %v4_10001174 = icmp uge i32 %v2_10001174, %v1_10001174
  %v2_10001178 = zext i1 %v4_10001174 to i32
  %v3_10001178 = add i32 %v2_10001178, %v4_10001158
  store i32 %v3_10001178, i32* %r11.global-to-local, align 4
  %v0_1000117c = load i32, i32* %r20.global-to-local, align 4
  %v2_1000117c = add i32 %v3_10001178, %v0_1000117c
  store i32 %v2_1000117c, i32* %r29.global-to-local, align 4
  store i32 %v2_1000117c, i32* %r3.global-to-local, align 4
  %v1_10001184 = load i32, i32* %r24.global-to-local, align 4
  %v2_10001184 = sub i32 %v1_10001184, %v3_10001178
  store i32 %v2_10001184, i32* %r4.global-to-local, align 4
  store i32 %v3_10001178, i32* @r31, align 4
  store i32 268439952, i32* %lr.global-to-local, align 4
  %v5_1000118c = call i32 @function_1000a1cc(i32 %v2_1000117c, i32 %v2_10001184, i32 ptrtoint ([3 x i8]* @global_var_1000d3d0.24 to i32), i32 2)
  store i32 %v5_1000118c, i32* %r3.global-to-local, align 4
  %v1_10001190 = icmp slt i32 %v5_1000118c, -1
  %v2_10001190 = icmp sgt i32 %v5_1000118c, -1
  %v3_10001190 = icmp eq i32 %v5_1000118c, -1
  store i1 %v1_10001190, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001190, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001190, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001190, label %dec_label_pc_10001574, label %dec_label_pc_10001198

dec_label_pc_10001198:                            ; preds = %dec_label_pc_10001140
  %v1_10001198 = icmp slt i32 %v5_1000118c, 1
  %v2_10001198 = icmp sgt i32 %v5_1000118c, 1
  %v3_10001198 = icmp eq i32 %v5_1000118c, 1
  store i1 %v1_10001198, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001198, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001198, i1* %cr7_eq.global-to-local, align 1
  %tmp79 = icmp slt i32 %v5_1000118c, 2
  br i1 %tmp79, label %dec_label_pc_100011a4, label %dec_label_pc_100011a0

dec_label_pc_100011a0:                            ; preds = %dec_label_pc_10001198
  %v1_100011a0 = add i32 %v5_1000118c, -2
  store i32 %v1_100011a0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100011a4

dec_label_pc_100011a4:                            ; preds = %dec_label_pc_10001198, %dec_label_pc_100011a0
  %v1_100011ac = phi i32 [ %v5_1000118c, %dec_label_pc_10001198 ], [ %v1_100011a0, %dec_label_pc_100011a0 ]
  %v0_100011a4 = load i32, i32* %r18.global-to-local, align 4
  %v1_100011a4 = load i32, i32* @r31, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_100011a4 = add i32 %v0_100011a4, %v1_100011ac
  %v2_100011ac = add i32 %v2_100011a4, %v1_100011a4
  store i32 %v2_100011ac, i32* %r9.global-to-local, align 4
  %v1_100011b0 = add i32 %v1_100011ac, 1
  store i32 %v1_100011b0, i32* %r28.global-to-local, align 4
  store i32 268500992, i32* %r11.global-to-local, align 4
  %v3_100011b8 = add i32 %v2_100011ac, 10532
  %v4_100011b8 = inttoptr i32 %v3_100011b8 to i8*
  store i8 0, i8* %v4_100011b8, align 1
  %v0_100011bc = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_100011bc, i32* %r3.global-to-local, align 4
  %v0_100011c0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100011c0, i32* %r4.global-to-local, align 4
  store i32 268440016, i32* %lr.global-to-local, align 4
  %v5_100011cc = call i32 @function_1000a1cc(i32 %v0_100011bc, i32 %v0_100011c0, i32 ptrtoint ([5 x i8]* @global_var_1000d400.40 to i32), i32 4)
  store i32 %v5_100011cc, i32* %r3.global-to-local, align 4
  %v1_100011d0 = icmp slt i32 %v5_100011cc, 4
  %v2_100011d0 = icmp sgt i32 %v5_100011cc, 4
  %v3_100011d0 = icmp eq i32 %v5_100011cc, 4
  store i1 %v1_100011d0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100011d0, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100011d0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100011d0, label %dec_label_pc_100017fc, label %dec_label_pc_100011d8

dec_label_pc_100011d8:                            ; preds = %dec_label_pc_100011a4
  %v0_100011d8 = load i32, i32* %r20.global-to-local, align 4
  %v1_100011d8 = load i32, i32* @r31, align 4
  %v2_100011d8 = add i32 %v1_100011d8, %v0_100011d8
  %v3_100011d8 = inttoptr i32 %v2_100011d8 to i8*
  %v4_100011d8 = load i8, i8* %v3_100011d8, align 1
  %v5_100011d8 = zext i8 %v4_100011d8 to i32
  store i32 %v5_100011d8, i32* %r0.global-to-local, align 4
  %v1_100011dc = icmp ult i8 %v4_100011d8, 47
  %v2_100011dc = icmp ugt i8 %v4_100011d8, 47
  %v3_100011dc = icmp eq i8 %v4_100011d8, 47
  store i1 %v1_100011dc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100011dc, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100011dc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100011dc, label %dec_label_pc_10001a1c, label %dec_label_pc_100011e4

dec_label_pc_100011e4:                            ; preds = %dec_label_pc_10001350, %dec_label_pc_1000190c, %dec_label_pc_100018b4, %dec_label_pc_1000189c, %dec_label_pc_100011d8, %dec_label_pc_10001a40, %dec_label_pc_10001a1c, %dec_label_pc_100018d8
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_100011e8 = load i32, i32* @r30, align 4
  %v3_100011e8 = add i32 %v2_100011e8, -529
  %v4_100011e8 = inttoptr i32 %v3_100011e8 to i8*
  store i8 1, i8* %v4_100011e8, align 1
  br label %dec_label_pc_10000824

dec_label_pc_100011f0:                            ; preds = %dec_label_pc_100010bc, %dec_label_pc_100010e4
  %v0_100011f0 = load i32, i32* @r30, align 4
  %v1_100011f0 = add i32 %v0_100011f0, 935
  %v2_100011f0 = inttoptr i32 %v1_100011f0 to i32*
  %v3_100011f0 = load i32, i32* %v2_100011f0, align 4
  store i32 %v3_100011f0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 0, i32* %v2_100010d8, align 4
  %v0_100011fc = load i32, i32* %r0.global-to-local, align 4
  %v1_100011fc = icmp slt i32 %v0_100011fc, 0
  %v2_100011fc = icmp sgt i32 %v0_100011fc, 0
  %v3_100011fc = icmp eq i32 %v0_100011fc, 0
  store i1 %v1_100011fc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100011fc, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100011fc, i1* %cr7_eq.global-to-local, align 1
  %tmp80 = icmp slt i32 %v0_100011fc, 1
  br i1 %tmp80, label %dec_label_pc_10001258, label %dec_label_pc_10001204

dec_label_pc_10001204:                            ; preds = %dec_label_pc_100011f0
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10001228

dec_label_pc_1000120c:                            ; preds = %dec_label_pc_10001228
  %v0_1000120c = load i32, i32* @r1, align 4
  %v1_1000120c = add i32 %v0_1000120c, 8
  %v2_1000120c = inttoptr i32 %v1_1000120c to i32*
  %v3_1000120c = load i32, i32* %v2_1000120c, align 4
  store i32 %v3_1000120c, i32* %r9.global-to-local, align 4
  %v0_10001210 = load i32, i32* @r30, align 4
  %v1_10001210 = add i32 %v0_10001210, 935
  %v2_10001210 = inttoptr i32 %v1_10001210 to i32*
  %v3_10001210 = load i32, i32* %v2_10001210, align 4
  store i32 %v3_10001210, i32* %r0.global-to-local, align 4
  %v1_10001214 = add i32 %v3_1000120c, 1
  store i32 %v1_10001214, i32* %r11.global-to-local, align 4
  %v2_10001218 = icmp slt i32 %v3_10001210, %v1_10001214
  %v3_10001218 = icmp sgt i32 %v3_10001210, %v1_10001214
  %v4_10001218 = icmp eq i32 %v3_10001210, %v1_10001214
  store i1 %v2_10001218, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001218, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_10001218, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10001214, i32* %r4.global-to-local, align 4
  store i32 %v1_10001214, i32* %v2_1000120c, align 4
  br i1 %v3_10001218, label %dec_label_pc_1000120c.dec_label_pc_10001228_crit_edge, label %dec_label_pc_10001258

dec_label_pc_1000120c.dec_label_pc_10001228_crit_edge: ; preds = %dec_label_pc_1000120c
  %v0_10001228.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10001228

dec_label_pc_10001228:                            ; preds = %dec_label_pc_1000120c.dec_label_pc_10001228_crit_edge, %dec_label_pc_10001204
  %v0_10001228 = phi i32 [ %v0_10001228.pre, %dec_label_pc_1000120c.dec_label_pc_10001228_crit_edge ], [ 0, %dec_label_pc_10001204 ]
  %v1_10001228 = mul i32 %v0_10001228, 128
  %v0_1000122c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000122c, i32* %r3.global-to-local, align 4
  %v1_10001230 = add i32 %v1_10001228, 1472
  %v0_10001234 = load i32, i32* %r29.global-to-local, align 4
  %v0_10001238 = load i32, i32* %r23.global-to-local, align 4
  %v2_10001238 = add i32 %v1_10001230, %v0_10001238
  store i32 %v2_10001238, i32* %r4.global-to-local, align 4
  store i32 268440128, i32* %lr.global-to-local, align 4
  %v3_1000123c = inttoptr i32 %v0_1000122c to i8*
  %v4_1000123c = call i32 @function_1000a5dc(i8* %v3_1000123c, i32 %v2_10001238, i32 %v0_10001234)
  store i32 %v4_1000123c, i32* %r3.global-to-local, align 4
  %v1_10001240 = icmp slt i32 %v4_1000123c, 0
  %v2_10001240 = icmp sgt i32 %v4_1000123c, 0
  %v3_10001240 = icmp eq i32 %v4_1000123c, 0
  store i1 %v1_10001240, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001240, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001240, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001240, label %dec_label_pc_1000120c, label %dec_label_pc_100010f0

dec_label_pc_1000124c:                            ; preds = %dec_label_pc_10000ff4
  %v1_1000124c = add i32 %v4_1000100c, 1
  store i32 %v1_1000124c, i32* %r3.global-to-local, align 4
  %v2_10001250 = add i32 %v0_10001010, %v1_1000124c
  store i32 %v2_10001250, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10001024

dec_label_pc_10001258:                            ; preds = %dec_label_pc_1000120c, %dec_label_pc_100011f0
  %v0_10001258 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10001258, i32* %r3.global-to-local, align 4
  store i32 268440160, i32* @lr, align 4
  %v1_1000125c = inttoptr i32 %v0_10001258 to i8*
  %v2_1000125c = call i32 @function_1000a100(i8* %v1_1000125c)
  store i32 %v2_1000125c, i32* %r3.global-to-local, align 4
  %v1_10001260 = icmp slt i32 %v2_1000125c, 127
  %v2_10001260 = icmp sgt i32 %v2_1000125c, 127
  %v3_10001260 = icmp eq i32 %v2_1000125c, 127
  store i1 %v1_10001260, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001260, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001260, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10001260, label %dec_label_pc_100010f0, label %dec_label_pc_10001268

dec_label_pc_10001268:                            ; preds = %dec_label_pc_10001258
  %v0_10001268 = load i32, i32* @r30, align 4
  %v1_10001268 = add i32 %v0_10001268, 935
  %v2_10001268 = inttoptr i32 %v1_10001268 to i32*
  %v3_10001268 = load i32, i32* %v2_10001268, align 4
  %v0_1000126c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000126c, i32* %r4.global-to-local, align 4
  %v0_10001270 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10001270, i32* %r29.global-to-local, align 4
  %v1_10001274 = mul i32 %v3_10001268, 128
  %v1_10001278 = add i32 %v1_10001274, 1472
  %v0_1000127c = load i32, i32* %r23.global-to-local, align 4
  %v2_1000127c = add i32 %v1_10001278, %v0_1000127c
  store i32 %v2_1000127c, i32* @r3, align 4
  store i32 268440196, i32* %lr.global-to-local, align 4
  %v2_10001280 = inttoptr i32 %v2_1000127c to i8*
  %v3_10001280 = call i32 @function_1000a128(i8* %v2_10001280, i32 %v0_1000126c)
  store i32 %v3_10001280, i32* %r3.global-to-local, align 4
  %v0_10001284 = load i32, i32* @r30, align 4
  %v1_10001284 = add i32 %v0_10001284, 935
  %v2_10001284 = inttoptr i32 %v1_10001284 to i32*
  %v3_10001284 = load i32, i32* %v2_10001284, align 4
  %v1_10001288 = add i32 %v3_10001284, 1
  store i32 %v1_10001288, i32* %r9.global-to-local, align 4
  store i32 %v1_10001288, i32* %v2_10001284, align 4
  br label %dec_label_pc_100010f4

dec_label_pc_10001294:                            ; preds = %dec_label_pc_10000814
  store i32 268440216, i32* %lr.global-to-local, align 4
  %v0_10001294 = call i32 @function_1000b0a8()
  store i32 %v0_10001294, i32* %r3.global-to-local, align 4
  %v0_10001298 = load i32, i32* %r23.global-to-local, align 4
  %v1_10001298 = add i32 %v0_10001298, 1472
  store i32 %v1_10001298, i32* %r0.global-to-local, align 4
  %v1_1000129c = load i32, i32* @r1, align 4
  %v2_1000129c = add i32 %v1_1000129c, 20808
  %v3_1000129c = inttoptr i32 %v2_1000129c to i32*
  store i32 %v1_10001298, i32* %v3_1000129c, align 4
  store i32 268500992, i32* %r11.global-to-local, align 4
  %v0_100012a4 = load i32, i32* @r30, align 4
  %v1_100012a4 = add i32 %v0_100012a4, 1579
  %v2_100012a4 = inttoptr i32 %v1_100012a4 to i32*
  %v3_100012a4 = load i32, i32* %v2_100012a4, align 4
  store i32 %v3_100012a4, i32* %r0.global-to-local, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 %v0_10001294, i32* %r25.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000d3d0.24 to i32), i32* %r15.global-to-local, align 4
  %v1_100012b4 = icmp slt i32 %v3_100012a4, 1024
  %v2_100012b4 = icmp sgt i32 %v3_100012a4, 1024
  %v3_100012b4 = icmp eq i32 %v3_100012a4, 1024
  store i1 %v1_100012b4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100012b4, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100012b4, i1* %cr7_eq.global-to-local, align 1
  store i32 ptrtoint (i32* @global_var_1000d3fc.39 to i32), i32* %r14.global-to-local, align 4
  %v0_100012bc = load i32, i32* %r23.global-to-local, align 4
  %v1_100012bc = add i32 %v0_100012bc, 2116
  store i32 %v1_100012bc, i32* %r27.global-to-local, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  br i1 %v3_100012b4, label %dec_label_pc_100013c8, label %dec_label_pc_100012c8

dec_label_pc_100012c8:                            ; preds = %dec_label_pc_100013bc.dec_label_pc_100012c8_crit_edge, %dec_label_pc_10001294
  %v1_100012d0 = phi i32 [ %v1_100012d0.pre, %dec_label_pc_100013bc.dec_label_pc_100012c8_crit_edge ], [ %v0_10001294, %dec_label_pc_10001294 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_100012d0 = inttoptr i32 %v1_100012d0 to i32*
  store i32 0, i32* %v2_100012d0, align 4
  %v0_100012d4 = load i32, i32* @r30, align 4
  %v1_100012d4 = add i32 %v0_100012d4, 1579
  %v2_100012d4 = inttoptr i32 %v1_100012d4 to i32*
  %v3_100012d4 = load i32, i32* %v2_100012d4, align 4
  store i32 %v3_100012d4, i32* %r4.global-to-local, align 4
  %v1_100012d8 = add i32 %v0_100012d4, -533
  %v2_100012d8 = inttoptr i32 %v1_100012d8 to i32*
  %v3_100012d8 = load i32, i32* %v2_100012d8, align 4
  store i32 %v3_100012d8, i32* %r3.global-to-local, align 4
  %v1_100012dc = sub i32 1024, %v3_100012d4
  %v0_100012e0 = load i32, i32* %r27.global-to-local, align 4
  %v2_100012e0 = add i32 %v0_100012e0, %v3_100012d4
  store i32 %v2_100012e0, i32* %r4.global-to-local, align 4
  store i32 268440296, i32* @lr, align 4
  %v4_100012e4 = call i32 @function_1000b62c(i32 %v3_100012d8, i32 %v2_100012e0, i32 %v1_100012dc, i32 16384)
  store i32 %v4_100012e4, i32* %r3.global-to-local, align 4
  %v3_100012e8 = icmp eq i32 %v4_100012e4, 0
  br i1 %v3_100012e8, label %dec_label_pc_1000140c, label %dec_label_pc_100012f0

dec_label_pc_100012f0:                            ; preds = %dec_label_pc_100013c8, %dec_label_pc_100012c8
  %v1_10001308 = phi i32 [ %v4_10001400, %dec_label_pc_100013c8 ], [ %v4_100012e4, %dec_label_pc_100012c8 ]
  %v1_100012f0 = icmp slt i32 %v1_10001308, -1
  %v2_100012f0 = icmp sgt i32 %v1_10001308, -1
  %v3_100012f0 = icmp eq i32 %v1_10001308, -1
  store i1 %v1_100012f0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100012f0, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100012f0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100012f0, label %dec_label_pc_100017ec, label %dec_label_pc_100012f8

dec_label_pc_100012f8:                            ; preds = %dec_label_pc_100012f0
  %v0_100012f8 = load i32, i32* @r30, align 4
  %v1_100012f8 = add i32 %v0_100012f8, 1579
  %v2_100012f8 = inttoptr i32 %v1_100012f8 to i32*
  %v3_100012f8 = load i32, i32* %v2_100012f8, align 4
  store i32 %v3_100012f8, i32* %r29.global-to-local, align 4
  %v0_100012fc = load i32, i32* %r15.global-to-local, align 4
  store i32 %v0_100012fc, i32* %r24.global-to-local, align 4
  %v0_10001300 = load i32, i32* @r1, align 4
  %v1_10001300 = add i32 %v0_10001300, 20792
  %v2_10001300 = inttoptr i32 %v1_10001300 to i32*
  %v3_10001300 = load i32, i32* %v2_10001300, align 4
  store i32 %v3_10001300, i32* %r0.global-to-local, align 4
  %v0_10001304 = load i32, i32* %r14.global-to-local, align 4
  store i32 %v0_10001304, i32* %r17.global-to-local, align 4
  %v2_10001308 = add i32 %v3_100012f8, %v1_10001308
  store i32 %v2_10001308, i32* %r29.global-to-local, align 4
  %v2_1000130c = add i32 %v0_100012f8, -525
  %v3_1000130c = inttoptr i32 %v2_1000130c to i32*
  store i32 %v3_10001300, i32* %v3_1000130c, align 4
  %v0_10001310 = load i32, i32* %r29.global-to-local, align 4
  %v1_10001310 = load i32, i32* @r30, align 4
  %v2_10001310 = add i32 %v1_10001310, 1579
  %v3_10001310 = inttoptr i32 %v2_10001310 to i32*
  store i32 %v0_10001310, i32* %v3_10001310, align 4
  br label %dec_label_pc_1000139c

dec_label_pc_10001318:                            ; preds = %dec_label_pc_1000139c
  %v1_10001318 = load i32, i32* %r29.global-to-local, align 4
  %v3_10001318 = icmp sgt i32 %v3_1000139c, %v1_10001318
  %v1_10001318.v3_1000139c = select i1 %v3_10001318, i32 %v1_10001318, i32 %v3_1000139c
  store i32 %v1_10001318.v3_1000139c, i32* %r28.global-to-local, align 4
  %v1_10001328 = add i32 %v0_1000139c, 919
  %v2_10001328 = inttoptr i32 %v1_10001328 to i32*
  %v3_10001328 = load i32, i32* %v2_10001328, align 4
  store i32 %v3_10001328, i32* %r0.global-to-local, align 4
  %v2_1000132c = sub i32 %v3_1000139c, %v1_10001318.v3_1000139c
  store i32 %v2_1000132c, i32* @r31, align 4
  store i32 %v2_1000132c, i32* %v2_1000139c, align 4
  %v0_10001334 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001334 = icmp slt i32 %v0_10001334, 1
  %v2_10001334 = icmp sgt i32 %v0_10001334, 1
  %v3_10001334 = icmp eq i32 %v0_10001334, 1
  store i1 %v1_10001334, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001334, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001334, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001334, label %dec_label_pc_1000142c, label %dec_label_pc_10001328.dec_label_pc_1000133cthread-pre-split_crit_edge

dec_label_pc_10001328.dec_label_pc_1000133cthread-pre-split_crit_edge: ; preds = %dec_label_pc_10001318
  %v0_1000133c.pr.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000133c

dec_label_pc_1000133c:                            ; preds = %dec_label_pc_100013a8, %dec_label_pc_10001328.dec_label_pc_1000133cthread-pre-split_crit_edge, %dec_label_pc_10001454
  %v0_1000133c = phi i32 [ %v3_10001454, %dec_label_pc_10001454 ], [ %v0_1000133c.pr.pre, %dec_label_pc_10001328.dec_label_pc_1000133cthread-pre-split_crit_edge ], [ %v3_1000139c, %dec_label_pc_100013a8 ]
  %v1_1000133c = icmp slt i32 %v0_1000133c, 0
  %v2_1000133c = icmp sgt i32 %v0_1000133c, 0
  %v3_1000133c = icmp eq i32 %v0_1000133c, 0
  store i1 %v1_1000133c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000133c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000133c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000133c, label %dec_label_pc_10001344, label %dec_label_pc_10001364

dec_label_pc_10001344:                            ; preds = %dec_label_pc_1000133c
  %v0_10001344 = load i32, i32* @r30, align 4
  %v1_10001344 = add i32 %v0_10001344, 927
  %v2_10001344 = inttoptr i32 %v1_10001344 to i32*
  %v3_10001344 = load i32, i32* %v2_10001344, align 4
  store i32 %v3_10001344, i32* %r29.global-to-local, align 4
  %v1_10001348 = icmp slt i32 %v3_10001344, 1
  %v2_10001348 = icmp sgt i32 %v3_10001344, 1
  %v3_10001348 = icmp eq i32 %v3_10001344, 1
  store i1 %v1_10001348, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001348, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001348, i1* %cr7_eq.global-to-local, align 1
  %v1_1000145c = add i32 %v0_10001344, 1579
  %v2_1000145c = inttoptr i32 %v1_1000145c to i32*
  %v3_1000145c = load i32, i32* %v2_1000145c, align 4
  br i1 %v3_10001348, label %dec_label_pc_1000145c, label %dec_label_pc_10001350

dec_label_pc_10001350:                            ; preds = %dec_label_pc_10001344
  %v0_10001354 = load i32, i32* %r28.global-to-local, align 4
  %v2_10001354 = sub i32 %v3_1000145c, %v0_10001354
  store i32 %v2_10001354, i32* %r0.global-to-local, align 4
  %v1_10001358 = icmp slt i32 %v2_10001354, 0
  %v2_10001358 = icmp sgt i32 %v2_10001354, 0
  %v3_10001358 = icmp eq i32 %v2_10001354, 0
  store i1 %v1_10001358, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001358, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001358, i1* %cr7_eq.global-to-local, align 1
  %v2_1000135c = add i32 %v0_10001344, 931
  %v3_1000135c = inttoptr i32 %v2_1000135c to i32*
  store i32 %v2_10001354, i32* %v3_1000135c, align 4
  br i1 %v3_10001358, label %dec_label_pc_100011e4, label %dec_label_pc_10001364

dec_label_pc_10001364:                            ; preds = %dec_label_pc_1000133c, %dec_label_pc_1000145c, %dec_label_pc_10001350, %dec_label_pc_100014e4
  %v0_10001364 = load i32, i32* %r28.global-to-local, align 4
  %v1_10001364 = icmp slt i32 %v0_10001364, 0
  %v2_10001364 = icmp sgt i32 %v0_10001364, 0
  %v3_10001364 = icmp eq i32 %v0_10001364, 0
  store i1 %v1_10001364, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001364, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001364, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001364, label %dec_label_pc_100013b0, label %dec_label_pc_1000136c

dec_label_pc_1000136c:                            ; preds = %dec_label_pc_10001364
  %v0_1000136c = load i32, i32* @r30, align 4
  %v1_1000136c = add i32 %v0_1000136c, 1579
  %v2_1000136c = inttoptr i32 %v1_1000136c to i32*
  %v3_1000136c = load i32, i32* %v2_1000136c, align 4
  store i32 %v3_1000136c, i32* %r0.global-to-local, align 4
  %v0_10001370 = load i32, i32* %r27.global-to-local, align 4
  %v2_10001370 = add i32 %v0_10001370, %v0_10001364
  store i32 %v2_10001370, i32* %r4.global-to-local, align 4
  store i32 %v0_10001370, i32* %r3.global-to-local, align 4
  %v2_10001378 = sub i32 %v3_1000136c, %v0_10001364
  store i32 %v2_10001378, i32* %r29.global-to-local, align 4
  store i32 %v2_10001378, i32* %v2_1000136c, align 4
  %v0_10001380 = load i32, i32* %r29.global-to-local, align 4
  store i32 268440456, i32* @lr, align 4
  %v3_10001384 = call i32 @function_1000b188(i32 %v0_10001370, i32 %v2_10001370, i32 %v0_10001380)
  store i32 %v3_10001384, i32* %r3.global-to-local, align 4
  %v0_10001388 = load i32, i32* @r30, align 4
  %v1_10001388 = add i32 %v0_10001388, 1579
  %v2_10001388 = inttoptr i32 %v1_10001388 to i32*
  %v3_10001388 = load i32, i32* %v2_10001388, align 4
  store i32 %v3_10001388, i32* %r29.global-to-local, align 4
  %v1_1000138c = icmp slt i32 %v3_10001388, 0
  %v2_1000138c = icmp sgt i32 %v3_10001388, 0
  %v3_1000138c = icmp eq i32 %v3_10001388, 0
  store i1 %v1_1000138c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000138c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000138c, i1* %cr7_eq.global-to-local, align 1
  %v1_10001390 = load i32, i32* %r23.global-to-local, align 4
  %v2_10001390 = add i32 %v1_10001390, %v3_10001388
  store i32 %v2_10001390, i32* %r9.global-to-local, align 4
  %v0_10001394 = load i32, i32* %r26.global-to-local, align 4
  %v1_10001394 = trunc i32 %v0_10001394 to i8
  %v3_10001394 = add i32 %v2_10001390, 2116
  %v4_10001394 = inttoptr i32 %v3_10001394 to i8*
  store i8 %v1_10001394, i8* %v4_10001394, align 1
  %v0_10001398 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10001398, label %dec_label_pc_100013b0, label %dec_label_pc_1000139c

dec_label_pc_1000139c:                            ; preds = %dec_label_pc_1000136c, %dec_label_pc_100012f8
  %v0_1000139c = load i32, i32* @r30, align 4
  %v1_1000139c = add i32 %v0_1000139c, 931
  %v2_1000139c = inttoptr i32 %v1_1000139c to i32*
  %v3_1000139c = load i32, i32* %v2_1000139c, align 4
  store i32 %v3_1000139c, i32* @r31, align 4
  %v1_100013a0 = icmp slt i32 %v3_1000139c, 0
  %v2_100013a0 = icmp sgt i32 %v3_1000139c, 0
  %v3_100013a0 = icmp eq i32 %v3_1000139c, 0
  store i1 %v1_100013a0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100013a0, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100013a0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_100013a0, label %dec_label_pc_10001318, label %dec_label_pc_100013a8

dec_label_pc_100013a8:                            ; preds = %dec_label_pc_1000139c
  store i32 0, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1000133c

dec_label_pc_100013b0:                            ; preds = %dec_label_pc_1000136c, %dec_label_pc_10001364
  %v0_100013b0 = load i32, i32* @r30, align 4
  %v1_100013b0 = add i32 %v0_100013b0, -529
  %v2_100013b0 = inttoptr i32 %v1_100013b0 to i8*
  %v3_100013b0 = load i8, i8* %v2_100013b0, align 1
  %v4_100013b0 = zext i8 %v3_100013b0 to i32
  store i32 %v4_100013b0, i32* %r0.global-to-local, align 4
  %v1_100013b4 = icmp ult i8 %v3_100013b0, 7
  %v2_100013b4 = icmp ugt i8 %v3_100013b0, 7
  %v3_100013b4 = icmp eq i8 %v3_100013b0, 7
  store i1 %v1_100013b4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100013b4, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100013b4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100013b4, label %dec_label_pc_100013bc, label %dec_label_pc_10000824

dec_label_pc_100013bc:                            ; preds = %dec_label_pc_100013b0
  %v1_100013bc = add i32 %v0_100013b0, 1579
  %v2_100013bc = inttoptr i32 %v1_100013bc to i32*
  %v3_100013bc = load i32, i32* %v2_100013bc, align 4
  store i32 %v3_100013bc, i32* %r0.global-to-local, align 4
  %v1_100013c0 = icmp slt i32 %v3_100013bc, 1024
  %v2_100013c0 = icmp sgt i32 %v3_100013bc, 1024
  %v3_100013c0 = icmp eq i32 %v3_100013bc, 1024
  store i1 %v1_100013c0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100013c0, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100013c0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100013c0, label %dec_label_pc_100013bc.dec_label_pc_100013c8_crit_edge, label %dec_label_pc_100013bc.dec_label_pc_100012c8_crit_edge

dec_label_pc_100013bc.dec_label_pc_100012c8_crit_edge: ; preds = %dec_label_pc_100013bc
  %v1_100012d0.pre = load i32, i32* %r25.global-to-local, align 4
  br label %dec_label_pc_100012c8

dec_label_pc_100013bc.dec_label_pc_100013c8_crit_edge: ; preds = %dec_label_pc_100013bc
  %v0_100013c8.pre = load i32, i32* %r23.global-to-local, align 4
  %v0_100013d0.pre = load i32, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_100013c8

dec_label_pc_100013c8:                            ; preds = %dec_label_pc_100013bc.dec_label_pc_100013c8_crit_edge, %dec_label_pc_10001294
  %v0_100013d0 = phi i32 [ %v0_100013d0.pre, %dec_label_pc_100013bc.dec_label_pc_100013c8_crit_edge ], [ %v1_100012bc, %dec_label_pc_10001294 ]
  %v0_100013c8 = phi i32 [ %v0_100013c8.pre, %dec_label_pc_100013bc.dec_label_pc_100013c8_crit_edge ], [ %v0_100012bc, %dec_label_pc_10001294 ]
  %v1_100013c8 = add i32 %v0_100013c8, 2180
  store i32 %v1_100013c8, i32* %r4.global-to-local, align 4
  store i32 %v0_100013d0, i32* %r3.global-to-local, align 4
  store i32 268440536, i32* @lr, align 4
  %v3_100013d4 = call i32 @function_1000b188(i32 %v0_100013d0, i32 %v1_100013c8, i32 960)
  store i32 %v3_100013d4, i32* %r3.global-to-local, align 4
  %v0_100013d8 = load i32, i32* @r30, align 4
  %v1_100013d8 = add i32 %v0_100013d8, 1579
  %v2_100013d8 = inttoptr i32 %v1_100013d8 to i32*
  %v3_100013d8 = load i32, i32* %v2_100013d8, align 4
  store i32 %v3_100013d8, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_100013e4 = add i32 %v3_100013d8, -64
  store i32 %v1_100013e4, i32* %r29.global-to-local, align 4
  store i32 %v1_100013e4, i32* %v2_100013d8, align 4
  %v0_100013ec = load i32, i32* %r0.global-to-local, align 4
  %v1_100013ec = load i32, i32* %r25.global-to-local, align 4
  %v2_100013ec = inttoptr i32 %v1_100013ec to i32*
  store i32 %v0_100013ec, i32* %v2_100013ec, align 4
  %v0_100013f0 = load i32, i32* @r30, align 4
  %v1_100013f0 = add i32 %v0_100013f0, 1579
  %v2_100013f0 = inttoptr i32 %v1_100013f0 to i32*
  %v3_100013f0 = load i32, i32* %v2_100013f0, align 4
  store i32 %v3_100013f0, i32* %r4.global-to-local, align 4
  %v1_100013f4 = add i32 %v0_100013f0, -533
  %v2_100013f4 = inttoptr i32 %v1_100013f4 to i32*
  %v3_100013f4 = load i32, i32* %v2_100013f4, align 4
  store i32 %v3_100013f4, i32* %r3.global-to-local, align 4
  %v1_100013f8 = sub i32 1024, %v3_100013f0
  %v0_100013fc = load i32, i32* %r27.global-to-local, align 4
  %v2_100013fc = add i32 %v0_100013fc, %v3_100013f0
  store i32 %v2_100013fc, i32* %r4.global-to-local, align 4
  store i32 268440580, i32* @lr, align 4
  %v4_10001400 = call i32 @function_1000b62c(i32 %v3_100013f4, i32 %v2_100013fc, i32 %v1_100013f8, i32 16384)
  store i32 %v4_10001400, i32* %r3.global-to-local, align 4
  %v3_10001404 = icmp eq i32 %v4_10001400, 0
  br i1 %v3_10001404, label %dec_label_pc_1000140c, label %dec_label_pc_100012f0

dec_label_pc_1000140c:                            ; preds = %dec_label_pc_100013c8, %dec_label_pc_100012c8
  store i32 104, i32* %r0.global-to-local, align 4
  %v1_10001410 = load i32, i32* %r25.global-to-local, align 4
  %v2_10001410 = inttoptr i32 %v1_10001410 to i32*
  store i32 104, i32* %v2_10001410, align 4
  br label %dec_label_pc_10001414

dec_label_pc_10001414:                            ; preds = %dec_label_pc_100017ec, %dec_label_pc_1000140c
  %v0_10001414 = load i32, i32* @r30, align 4
  %v1_10001414 = add i32 %v0_10001414, -533
  %v2_10001414 = inttoptr i32 %v1_10001414 to i32*
  %v3_10001414 = load i32, i32* %v2_10001414, align 4
  store i32 %v3_10001414, i32* %r3.global-to-local, align 4
  store i32 268440604, i32* @lr, align 4
  %v0_10001418 = call i32 @function_1000a98c()
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_10001420 = load i32, i32* @r30, align 4
  %v2_10001420 = add i32 %v1_10001420, -533
  %v3_10001420 = inttoptr i32 %v2_10001420 to i32*
  store i32 -1, i32* %v3_10001420, align 4
  %v0_10001424 = load i32, i32* %r26.global-to-local, align 4
  %v1_10001424 = trunc i32 %v0_10001424 to i8
  %v2_10001424 = load i32, i32* @r30, align 4
  %v3_10001424 = add i32 %v2_10001424, -529
  %v4_10001424 = inttoptr i32 %v3_10001424 to i8*
  store i8 %v1_10001424, i8* %v4_10001424, align 1
  br label %dec_label_pc_10000824

dec_label_pc_1000142c:                            ; preds = %dec_label_pc_10001318
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 268440632, i32* %lr.global-to-local, align 4
  %v3_10001434 = call i32 @function_100097cc(i32 36, i32* null)
  %v0_10001438 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10001438, i32* %r4.global-to-local, align 4
  %v0_10001444 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10001444, i32* %r3.global-to-local, align 4
  store i32 268440652, i32* %lr.global-to-local, align 4
  %v4_10001448 = call i32 @function_1000a1cc(i32 %v0_10001444, i32 %v0_10001438, i32 %v3_10001434, i32 11)
  store i32 %v4_10001448, i32* %r3.global-to-local, align 4
  %v1_1000144c = icmp slt i32 %v4_10001448, -1
  %v2_1000144c = icmp sgt i32 %v4_10001448, -1
  %v3_1000144c = icmp eq i32 %v4_10001448, -1
  store i1 %v1_1000144c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000144c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000144c, i1* %cr7_eq.global-to-local, align 1
  %v0_10001454 = load i32, i32* @r30, align 4
  br i1 %v3_1000144c, label %dec_label_pc_10001454, label %dec_label_pc_10001948

dec_label_pc_10001454:                            ; preds = %dec_label_pc_1000142c
  %v1_10001454 = add i32 %v0_10001454, 931
  %v2_10001454 = inttoptr i32 %v1_10001454 to i32*
  %v3_10001454 = load i32, i32* %v2_10001454, align 4
  store i32 %v3_10001454, i32* @r31, align 4
  br label %dec_label_pc_1000133c

dec_label_pc_1000145c:                            ; preds = %dec_label_pc_10001344
  store i32 %v3_1000145c, i32* %r4.global-to-local, align 4
  %v0_10001460 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10001460, i32* %r3.global-to-local, align 4
  %v0_10001464 = load i32, i32* %r24.global-to-local, align 4
  store i32 268440688, i32* %lr.global-to-local, align 4
  %v5_1000146c = call i32 @function_1000a1cc(i32 %v0_10001460, i32 %v3_1000145c, i32 %v0_10001464, i32 2)
  store i32 %v5_1000146c, i32* %r3.global-to-local, align 4
  %v1_10001470 = icmp slt i32 %v5_1000146c, -1
  %v2_10001470 = icmp sgt i32 %v5_1000146c, -1
  %v3_10001470 = icmp eq i32 %v5_1000146c, -1
  store i1 %v1_10001470, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001470, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001470, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001470, label %dec_label_pc_10001364, label %dec_label_pc_10001478

dec_label_pc_10001478:                            ; preds = %dec_label_pc_1000145c
  %v0_10001478 = load i32, i32* @r30, align 4
  %v1_10001478 = add i32 %v0_10001478, 1579
  %v2_10001478 = inttoptr i32 %v1_10001478 to i32*
  %v3_10001478 = load i32, i32* %v2_10001478, align 4
  store i32 %v3_10001478, i32* %r4.global-to-local, align 4
  %v0_1000147c = load i32, i32* %r24.global-to-local, align 4
  %v0_10001484 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10001484, i32* %r3.global-to-local, align 4
  store i32 268440716, i32* %lr.global-to-local, align 4
  %v5_10001488 = call i32 @function_1000a1cc(i32 %v0_10001484, i32 %v3_10001478, i32 %v0_1000147c, i32 2)
  %v0_1000148c = load i32, i32* %r17.global-to-local, align 4
  %v1_10001490 = load i32, i32* %r23.global-to-local, align 4
  %v2_10001490 = add i32 %v1_10001490, %v5_10001488
  store i32 %v2_10001490, i32* %r9.global-to-local, align 4
  store i32 %v5_10001488, i32* %r28.global-to-local, align 4
  %v0_10001498 = load i32, i32* @r31, align 4
  %v1_10001498 = trunc i32 %v0_10001498 to i8
  %v3_10001498 = add i32 %v2_10001490, 2114
  %v4_10001498 = inttoptr i32 %v3_10001498 to i8*
  store i8 %v1_10001498, i8* %v4_10001498, align 1
  %v0_1000149c = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_1000149c, i32* %r3.global-to-local, align 4
  %v0_100014a0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100014a0, i32* %r4.global-to-local, align 4
  store i32 268440748, i32* %lr.global-to-local, align 4
  %v4_100014a8 = call i32 @function_1000a1cc(i32 %v0_1000149c, i32 %v0_100014a0, i32 %v0_1000148c, i32 1)
  store i32 %v4_100014a8, i32* %r3.global-to-local, align 4
  %v1_100014ac = icmp slt i32 %v4_100014a8, -1
  %v2_100014ac = icmp sgt i32 %v4_100014a8, -1
  %v3_100014ac = icmp eq i32 %v4_100014a8, -1
  store i1 %v1_100014ac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100014ac, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100014ac, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100014ac, label %dec_label_pc_100014d0, label %dec_label_pc_100014b4

dec_label_pc_100014b4:                            ; preds = %dec_label_pc_10001478
  %v0_100014b4 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_100014b4, i32* %r3.global-to-local, align 4
  %v0_100014b8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100014b8, i32* %r4.global-to-local, align 4
  %v0_100014bc = load i32, i32* %r17.global-to-local, align 4
  store i32 268440776, i32* %lr.global-to-local, align 4
  %v4_100014c4 = call i32 @function_1000a1cc(i32 %v0_100014b4, i32 %v0_100014b8, i32 %v0_100014bc, i32 1)
  %v1_100014c8 = load i32, i32* %r23.global-to-local, align 4
  %v2_100014c8 = add i32 %v1_100014c8, %v4_100014c4
  store i32 %v2_100014c8, i32* %r3.global-to-local, align 4
  %v0_100014cc = load i32, i32* @r31, align 4
  %v1_100014cc = trunc i32 %v0_100014cc to i8
  %v3_100014cc = add i32 %v2_100014c8, 2116
  %v4_100014cc = inttoptr i32 %v3_100014cc to i8*
  store i8 %v1_100014cc, i8* %v4_100014cc, align 1
  br label %dec_label_pc_100014d0

dec_label_pc_100014d0:                            ; preds = %dec_label_pc_10001478, %dec_label_pc_100014b4
  %v0_100014d0 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_100014d0, i32* @r3, align 4
  store i32 16, i32* %r4.global-to-local, align 4
  store i32 268440796, i32* @lr, align 4
  %v2_100014d8 = call i32 @function_1000a228(i32 %v0_100014d0, i32 16)
  store i32 %v2_100014d8, i32* %r3.global-to-local, align 4
  %v3_100014dc = icmp eq i32 %v2_100014d8, 0
  br i1 %v3_100014dc, label %dec_label_pc_10001b70, label %dec_label_pc_100014e4

dec_label_pc_100014e4:                            ; preds = %dec_label_pc_100014d0
  %v1_100014e4 = add i32 %v2_100014d8, 2
  %v1_100014e8 = load i32, i32* @r30, align 4
  %v2_100014e8 = add i32 %v1_100014e8, 931
  %v3_100014e8 = inttoptr i32 %v2_100014e8 to i32*
  store i32 %v1_100014e4, i32* %v3_100014e8, align 4
  br label %dec_label_pc_10001364

dec_label_pc_100014f0:                            ; preds = %dec_label_pc_10000860
  store i32 ptrtoint (i32* @global_var_100014f8.41 to i32), i32* @lr, align 4
  %v0_100014f4 = call i32 @function_1000a98c()
  store i32 %v0_100014f4, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_100014fc = load i32, i32* %r29.global-to-local, align 4
  %v1_100014fc = trunc i32 %v0_100014fc to i8
  %v2_100014fc = load i32, i32* @r30, align 4
  %v3_100014fc = add i32 %v2_100014fc, -529
  %v4_100014fc = inttoptr i32 %v3_100014fc to i8*
  store i8 %v1_100014fc, i8* %v4_100014fc, align 1
  %v0_10001500 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001500 = load i32, i32* @r30, align 4
  %v2_10001500 = add i32 %v1_10001500, -533
  %v3_10001500 = inttoptr i32 %v2_10001500 to i32*
  store i32 %v0_10001500, i32* %v3_10001500, align 4
  br label %dec_label_pc_10000824

dec_label_pc_10001508:                            ; preds = %dec_label_pc_10000be8
  %v0_10001508 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10001508, i32* @r3, align 4
  %v0_1000150c = load i32, i32* @r31, align 4
  store i32 %v0_1000150c, i32* %r4.global-to-local, align 4
  store i32 268440852, i32* %lr.global-to-local, align 4
  %v2_10001510 = inttoptr i32 %v0_10001508 to i8*
  %v3_10001510 = call i32 @function_1000a128(i8* %v2_10001510, i32 %v0_1000150c)
  store i32 %v3_10001510, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10000c00

dec_label_pc_10001518:                            ; preds = %dec_label_pc_1000081c
  store i32 268440860, i32* %lr.global-to-local, align 4
  %v0_10001518 = call i32 @function_1000b0a8()
  store i32 %v0_10001518, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v0_10001518, i32* @r31, align 4
  br label %dec_label_pc_10001524

dec_label_pc_10001524:                            ; preds = %dec_label_pc_10001544.dec_label_pc_10001524_crit_edge, %dec_label_pc_10001518
  %v1_10001524 = phi i32 [ %v1_10001524.pre, %dec_label_pc_10001544.dec_label_pc_10001524_crit_edge ], [ %v0_10001518, %dec_label_pc_10001518 ]
  %v0_10001524 = phi i32 [ %v0_10001524.pre, %dec_label_pc_10001544.dec_label_pc_10001524_crit_edge ], [ 0, %dec_label_pc_10001518 ]
  %v2_10001524 = inttoptr i32 %v1_10001524 to i32*
  store i32 %v0_10001524, i32* %v2_10001524, align 4
  %v0_10001528 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10001528, i32* %r4.global-to-local, align 4
  %v0_10001534 = load i32, i32* @r30, align 4
  %v1_10001534 = add i32 %v0_10001534, -533
  %v2_10001534 = inttoptr i32 %v1_10001534 to i32*
  %v3_10001534 = load i32, i32* %v2_10001534, align 4
  store i32 %v3_10001534, i32* %r3.global-to-local, align 4
  store i32 268440892, i32* @lr, align 4
  %v4_10001538 = call i32 @function_1000b62c(i32 %v3_10001534, i32 %v0_10001528, i32 10240, i32 16384)
  store i32 %v4_10001538, i32* %r3.global-to-local, align 4
  %v3_1000153c = icmp eq i32 %v4_10001538, 0
  br i1 %v3_1000153c, label %dec_label_pc_100017e0, label %dec_label_pc_10001544

dec_label_pc_10001544:                            ; preds = %dec_label_pc_10001524
  %v1_10001544 = icmp slt i32 %v4_10001538, -1
  %v2_10001544 = icmp sgt i32 %v4_10001538, -1
  %v3_10001544 = icmp eq i32 %v4_10001538, -1
  store i1 %v1_10001544, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001544, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001544, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001544, label %dec_label_pc_1000154c, label %dec_label_pc_10001544.dec_label_pc_10001524_crit_edge

dec_label_pc_10001544.dec_label_pc_10001524_crit_edge: ; preds = %dec_label_pc_10001544
  %v0_10001524.pre = load i32, i32* %r29.global-to-local, align 4
  %v1_10001524.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10001524

dec_label_pc_1000154c:                            ; preds = %dec_label_pc_10001544
  %v0_1000154c = load i32, i32* @r31, align 4
  %v1_1000154c = inttoptr i32 %v0_1000154c to i32*
  %v2_1000154c = load i32, i32* %v1_1000154c, align 4
  store i32 %v2_1000154c, i32* %r0.global-to-local, align 4
  %v1_10001550 = icmp slt i32 %v2_1000154c, 11
  %v2_10001550 = icmp sgt i32 %v2_1000154c, 11
  %v3_10001550 = icmp eq i32 %v2_1000154c, 11
  store i1 %v1_10001550, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001550, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001550, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001550, label %dec_label_pc_1000190c, label %dec_label_pc_10001558

dec_label_pc_10001558:                            ; preds = %dec_label_pc_1000154c, %dec_label_pc_100017e0
  %v0_10001558 = load i32, i32* @r30, align 4
  %v1_10001558 = add i32 %v0_10001558, -533
  %v2_10001558 = inttoptr i32 %v1_10001558 to i32*
  %v3_10001558 = load i32, i32* %v2_10001558, align 4
  store i32 %v3_10001558, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10001560.42 to i32), i32* @lr, align 4
  %v0_1000155c = call i32 @function_1000a98c()
  store i32 %v0_1000155c, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v1_10001568 = load i32, i32* @r30, align 4
  %v2_10001568 = add i32 %v1_10001568, -533
  %v3_10001568 = inttoptr i32 %v2_10001568 to i32*
  store i32 -1, i32* %v3_10001568, align 4
  %v0_1000156c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000156c = trunc i32 %v0_1000156c to i8
  %v2_1000156c = load i32, i32* @r30, align 4
  %v3_1000156c = add i32 %v2_1000156c, -529
  %v4_1000156c = inttoptr i32 %v3_1000156c to i8*
  store i8 %v1_1000156c, i8* %v4_1000156c, align 1
  br label %dec_label_pc_10000824

dec_label_pc_10001574:                            ; preds = %dec_label_pc_10001140, %dec_label_pc_1000111c
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 37, i32* %r3.global-to-local, align 4
  store i32 268440960, i32* %lr.global-to-local, align 4
  %v3_1000157c = call i32 @function_100097cc(i32 37, i32* null)
  %v0_10001580 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10001580, i32* %r4.global-to-local, align 4
  %v0_10001588 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10001588, i32* %r3.global-to-local, align 4
  store i32 268440976, i32* %lr.global-to-local, align 4
  %v3_1000158c = inttoptr i32 %v0_10001588 to i8*
  %v4_1000158c = call i32 @function_1000a4b0(i8* %v3_1000158c, i32 %v0_10001580, i32 %v3_1000157c)
  store i32 %v4_1000158c, i32* %r3.global-to-local, align 4
  %v1_10001590 = icmp slt i32 %v4_1000158c, -1
  %v2_10001590 = icmp sgt i32 %v4_1000158c, -1
  %v3_10001590 = icmp eq i32 %v4_1000158c, -1
  store i1 %v1_10001590, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001590, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001590, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001590, label %dec_label_pc_1000177c, label %dec_label_pc_10001598

dec_label_pc_10001598:                            ; preds = %dec_label_pc_10001574
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 37, i32* %r3.global-to-local, align 4
  store i32 268440996, i32* %lr.global-to-local, align 4
  %v3_100015a0 = call i32 @function_100097cc(i32 37, i32* null)
  %v0_100015a4 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_100015a4, i32* %r4.global-to-local, align 4
  %v0_100015ac = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_100015ac, i32* %r3.global-to-local, align 4
  store i32 268441012, i32* %lr.global-to-local, align 4
  %v3_100015b0 = inttoptr i32 %v0_100015ac to i8*
  %v4_100015b0 = call i32 @function_1000a4b0(i8* %v3_100015b0, i32 %v0_100015a4, i32 %v3_100015a0)
  store i32 %v4_100015b0, i32* %r3.global-to-local, align 4
  %v0_100015b8 = load i32, i32* %r18.global-to-local, align 4
  %v2_100015b8 = add i32 %v0_100015b8, %v4_100015b0
  store i32 %v2_100015b8, i32* %r9.global-to-local, align 4
  %v1_100015bc = add i32 %v2_100015b8, 10532
  %v2_100015bc = inttoptr i32 %v1_100015bc to i8*
  %v3_100015bc = load i8, i8* %v2_100015bc, align 1
  %v4_100015bc = zext i8 %v3_100015bc to i32
  store i32 %v4_100015bc, i32* %r0.global-to-local, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v1_100015c8 = xor i32 %v4_100015bc, 32
  %v1_100015cc = sub nsw i32 0, %v1_100015c8
  %v2_100015cc = xor i32 %v4_100015bc, -33
  %v4_100015cc = icmp uge i32 %v2_100015cc, %v1_100015cc
  %v2_100015d0 = zext i1 %v4_100015cc to i32
  %v3_100015d0 = add i32 %v2_100015d0, %v4_100015b0
  store i32 %v3_100015d0, i32* %r11.global-to-local, align 4
  %v0_100015d4 = load i32, i32* %r20.global-to-local, align 4
  %v2_100015d4 = add i32 %v3_100015d0, %v0_100015d4
  store i32 %v2_100015d4, i32* @r28, align 4
  store i32 %v2_100015d4, i32* %r3.global-to-local, align 4
  %v1_100015dc = load i32, i32* %r24.global-to-local, align 4
  %v2_100015dc = sub i32 %v1_100015dc, %v3_100015d0
  store i32 %v2_100015dc, i32* %r4.global-to-local, align 4
  store i32 %v3_100015d0, i32* %r31.global-to-local, align 4
  store i32 268441064, i32* %lr.global-to-local, align 4
  %v5_100015e4 = call i32 @function_1000a1cc(i32 %v2_100015d4, i32 %v2_100015dc, i32 ptrtoint ([3 x i8]* @global_var_1000d3d0.24 to i32), i32 2)
  store i32 %v5_100015e4, i32* %r3.global-to-local, align 4
  %v1_100015e8 = icmp slt i32 %v5_100015e4, -1
  %v2_100015e8 = icmp sgt i32 %v5_100015e4, -1
  %v3_100015e8 = icmp eq i32 %v5_100015e4, -1
  store i1 %v1_100015e8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100015e8, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100015e8, i1* %cr7_eq.global-to-local, align 1
  store i32 %v5_100015e4, i32* %r27.global-to-local, align 4
  br i1 %v3_100015e8, label %dec_label_pc_1000177c, label %dec_label_pc_100015f4

dec_label_pc_100015f4:                            ; preds = %dec_label_pc_10001598
  %v1_100015f4 = icmp slt i32 %v5_100015e4, 1
  %v2_100015f4 = icmp sgt i32 %v5_100015e4, 1
  %v3_100015f4 = icmp eq i32 %v5_100015e4, 1
  store i1 %v1_100015f4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100015f4, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100015f4, i1* %cr7_eq.global-to-local, align 1
  %tmp82 = icmp slt i32 %v5_100015e4, 2
  br i1 %tmp82, label %dec_label_pc_10001600, label %dec_label_pc_100015fc

dec_label_pc_100015fc:                            ; preds = %dec_label_pc_100015f4
  %v1_100015fc = add i32 %v5_100015e4, -2
  store i32 %v1_100015fc, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10001600

dec_label_pc_10001600:                            ; preds = %dec_label_pc_100015f4, %dec_label_pc_100015fc
  %v1_10001608 = phi i32 [ %v5_100015e4, %dec_label_pc_100015f4 ], [ %v1_100015fc, %dec_label_pc_100015fc ]
  %v0_10001600 = load i32, i32* %r18.global-to-local, align 4
  %v1_10001600 = load i32, i32* %r31.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10001600 = add i32 %v0_10001600, %v1_10001608
  %v2_10001608 = add i32 %v2_10001600, %v1_10001600
  store i32 %v2_10001608, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v3_10001610 = add i32 %v2_10001608, 10532
  %v4_10001610 = inttoptr i32 %v3_10001610 to i8*
  store i8 0, i8* %v4_10001610, align 1
  %v0_10001614 = load i32, i32* @r28, align 4
  store i32 %v0_10001614, i32* %r4.global-to-local, align 4
  %v0_10001618 = load i32, i32* %r11.global-to-local, align 4
  %v1_10001618 = load i32, i32* @r1, align 4
  %v2_10001618 = add i32 %v1_10001618, 8
  %v3_10001618 = inttoptr i32 %v2_10001618 to i32*
  store i32 %v0_10001618, i32* %v3_10001618, align 4
  %v0_1000161c = load i32, i32* %r20.global-to-local, align 4
  %v1_1000161c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000161c = add i32 %v1_1000161c, %v0_1000161c
  %v3_1000161c = inttoptr i32 %v2_1000161c to i8*
  %v4_1000161c = load i8, i8* %v3_1000161c, align 1
  %v5_1000161c = zext i8 %v4_1000161c to i32
  store i32 %v5_1000161c, i32* %r3.global-to-local, align 4
  %v1_10001620 = add nuw nsw i32 %v5_1000161c, 208
  %v1_10001624 = urem i32 %v1_10001620, 256
  store i32 %v1_10001624, i32* %r0.global-to-local, align 4
  %v1_10001628 = icmp ult i32 %v1_10001624, 9
  %v2_10001628 = icmp ugt i32 %v1_10001624, 9
  %v3_10001628 = icmp eq i32 %v1_10001624, 9
  store i1 %v1_10001628, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001628, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001628, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10001628, label %dec_label_pc_10001658, label %dec_label_pc_10001630

dec_label_pc_10001630:                            ; preds = %dec_label_pc_10001600
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10001634

dec_label_pc_10001634:                            ; preds = %dec_label_pc_10001634, %dec_label_pc_10001630
  %v0_10001634 = phi i32 [ %v0_1000163c, %dec_label_pc_10001634 ], [ 0, %dec_label_pc_10001630 ]
  %v1_10001634 = add i32 %v0_10001634, 1
  store i32 %v1_10001634, i32* %r11.global-to-local, align 4
  %v1_10001638 = load i32, i32* @r1, align 4
  %v2_10001638 = add i32 %v1_10001638, 8
  %v3_10001638 = inttoptr i32 %v2_10001638 to i32*
  store i32 %v1_10001634, i32* %v3_10001638, align 4
  %v0_1000163c = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000163c, i32* %r9.global-to-local, align 4
  %v1_10001640 = load i32, i32* @r28, align 4
  %v2_10001640 = add i32 %v1_10001640, %v0_1000163c
  %v3_10001640 = inttoptr i32 %v2_10001640 to i8*
  %v4_10001640 = load i8, i8* %v3_10001640, align 1
  %v5_10001640 = zext i8 %v4_10001640 to i32
  store i32 %v5_10001640, i32* %r3.global-to-local, align 4
  %v1_10001644 = add nuw nsw i32 %v5_10001640, 208
  %v1_10001648 = urem i32 %v1_10001644, 256
  store i32 %v1_10001648, i32* %r0.global-to-local, align 4
  %v1_1000164c = icmp ult i32 %v1_10001648, 9
  %v2_1000164c = icmp ugt i32 %v1_10001648, 9
  %v3_1000164c = icmp eq i32 %v1_10001648, 9
  store i1 %v1_1000164c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000164c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000164c, i1* %cr7_eq.global-to-local, align 1
  %tmp83 = icmp ult i32 %v1_10001648, 10
  br i1 %tmp83, label %dec_label_pc_10001634, label %dec_label_pc_10001654

dec_label_pc_10001654:                            ; preds = %dec_label_pc_10001634
  store i32 %v2_10001640, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10001658

dec_label_pc_10001658:                            ; preds = %dec_label_pc_10001600, %dec_label_pc_10001654
  %v0_10001658 = phi i32 [ %v5_1000161c, %dec_label_pc_10001600 ], [ %v5_10001640, %dec_label_pc_10001654 ]
  %v2_10001658 = icmp ne i32 %v0_10001658, 0
  %v3_10001658 = icmp eq i32 %v0_10001658, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001658, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001658, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001658, label %dec_label_pc_1000177c, label %dec_label_pc_10001660

dec_label_pc_10001660:                            ; preds = %dec_label_pc_10001658
  store i32 0, i32* %r26.global-to-local, align 4
  %v2_10001664 = load i32, i32* %r4.global-to-local, align 4
  %v3_10001664 = inttoptr i32 %v2_10001664 to i8*
  store i8 0, i8* %v3_10001664, align 1
  %v0_10001668 = load i32, i32* @r1, align 4
  %v1_10001668 = add i32 %v0_10001668, 8
  %v2_10001668 = inttoptr i32 %v1_10001668 to i32*
  %v3_10001668 = load i32, i32* %v2_10001668, align 4
  %v1_1000166c = add i32 %v3_10001668, 1
  store i32 %v1_1000166c, i32* %r11.global-to-local, align 4
  store i32 %v1_1000166c, i32* %v2_10001668, align 4
  %v0_10001674 = load i32, i32* @r28, align 4
  %v1_10001674 = load i32, i32* %r11.global-to-local, align 4
  %v2_10001674 = add i32 %v1_10001674, %v0_10001674
  %v3_10001674 = inttoptr i32 %v2_10001674 to i8*
  %v4_10001674 = load i8, i8* %v3_10001674, align 1
  %v5_10001674 = zext i8 %v4_10001674 to i32
  store i32 %v5_10001674, i32* %r0.global-to-local, align 4
  %v1_10001678 = icmp ult i8 %v4_10001674, 32
  %v2_10001678 = icmp ugt i8 %v4_10001674, 32
  %v3_10001678 = icmp eq i8 %v4_10001674, 32
  store i1 %v1_10001678, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001678, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001678, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001678, label %dec_label_pc_10001b84, label %dec_label_pc_10001680

dec_label_pc_10001680:                            ; preds = %dec_label_pc_10001660, %dec_label_pc_10001b84
  %v1_10001680 = phi i32 [ %v1_10001674, %dec_label_pc_10001660 ], [ %v1_10001680.pre, %dec_label_pc_10001b84 ]
  %v0_10001680 = phi i32 [ %v0_10001674, %dec_label_pc_10001660 ], [ %v0_10001680.pre, %dec_label_pc_10001b84 ]
  %v2_10001680 = add i32 %v0_10001680, %v1_10001680
  store i32 %v2_10001680, i32* %r29.global-to-local, align 4
  store i32 %v2_10001680, i32* %r3.global-to-local, align 4
  store i32 268441228, i32* @lr, align 4
  %v1_10001688 = inttoptr i32 %v2_10001680 to i8*
  %v2_10001688 = call i32 @function_1000a100(i8* %v1_10001688)
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1000d408.43 to i32), i32* %r31.global-to-local, align 4
  store i32 %v2_10001688, i32* %r4.global-to-local, align 4
  %v0_1000169c = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_1000169c, i32* %r3.global-to-local, align 4
  store i32 268441252, i32* %lr.global-to-local, align 4
  %v4_100016a0 = inttoptr i32 %v0_1000169c to i8*
  %v5_100016a0 = call i32 @function_1000a4b0(i8* %v4_100016a0, i32 %v2_10001688, i32 ptrtoint ([5 x i8]* @global_var_1000d408.43 to i32))
  store i32 %v5_100016a0, i32* %r3.global-to-local, align 4
  %v1_100016a4 = icmp slt i32 %v5_100016a0, -1
  %v2_100016a4 = icmp sgt i32 %v5_100016a0, -1
  %v3_100016a4 = icmp eq i32 %v5_100016a0, -1
  store i1 %v1_100016a4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100016a4, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100016a4, i1* %cr7_eq.global-to-local, align 1
  %v0_100019cc = load i32, i32* @r1, align 4
  %v1_100019cc = add i32 %v0_100019cc, 8
  %v2_100019cc = inttoptr i32 %v1_100019cc to i32*
  %v3_100019cc = load i32, i32* %v2_100019cc, align 4
  br i1 %v3_100016a4, label %dec_label_pc_100019cc, label %dec_label_pc_100016ac

dec_label_pc_100016ac:                            ; preds = %dec_label_pc_10001680
  %v0_100016b0 = load i32, i32* @r28, align 4
  %v2_100016b0 = add i32 %v0_100016b0, %v3_100019cc
  store i32 %v2_100016b0, i32* %r29.global-to-local, align 4
  store i32 %v2_100016b0, i32* %r3.global-to-local, align 4
  store i32 268441276, i32* @lr, align 4
  %v1_100016b8 = inttoptr i32 %v2_100016b0 to i8*
  %v2_100016b8 = call i32 @function_1000a100(i8* %v1_100016b8)
  %v0_100016bc = load i32, i32* %r31.global-to-local, align 4
  store i32 %v2_100016b8, i32* %r4.global-to-local, align 4
  %v0_100016c4 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_100016c4, i32* %r3.global-to-local, align 4
  store i32 268441292, i32* %lr.global-to-local, align 4
  %v4_100016c8 = inttoptr i32 %v0_100016c4 to i8*
  %v5_100016c8 = call i32 @function_1000a4b0(i8* %v4_100016c8, i32 %v2_100016b8, i32 %v0_100016bc)
  store i32 %v5_100016c8, i32* %r3.global-to-local, align 4
  %v0_100016cc = load i32, i32* @r1, align 4
  %v1_100016cc = add i32 %v0_100016cc, 8
  %v2_100016cc = inttoptr i32 %v1_100016cc to i32*
  %v3_100016cc = load i32, i32* %v2_100016cc, align 4
  %v2_100016d0 = add i32 %v3_100016cc, %v5_100016c8
  store i32 %v2_100016d0, i32* %r11.global-to-local, align 4
  store i32 %v2_100016d0, i32* %v2_100016cc, align 4
  %v0_100016d8 = load i32, i32* @r28, align 4
  %v1_100016d8 = load i32, i32* %r11.global-to-local, align 4
  %v2_100016d8 = add i32 %v1_100016d8, %v0_100016d8
  %v3_100016d8 = inttoptr i32 %v2_100016d8 to i8*
  %v4_100016d8 = load i8, i8* %v3_100016d8, align 1
  %v5_100016d8 = zext i8 %v4_100016d8 to i32
  store i32 %v5_100016d8, i32* %r0.global-to-local, align 4
  %v1_100016dc = icmp ult i8 %v4_100016d8, 34
  %v2_100016dc = icmp ugt i8 %v4_100016d8, 34
  %v3_100016dc = icmp eq i8 %v4_100016d8, 34
  store i1 %v1_100016dc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100016dc, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100016dc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100016dc, label %dec_label_pc_100016ac.dec_label_pc_100019dc_crit_edge, label %dec_label_pc_100016e4

dec_label_pc_100016ac.dec_label_pc_100019dc_crit_edge: ; preds = %dec_label_pc_100016ac
  %v1_100019e4.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_100019dc

dec_label_pc_100016e4:                            ; preds = %dec_label_pc_100019cc, %dec_label_pc_100019dc, %dec_label_pc_100016ac, %dec_label_pc_10001a00
  %v0_100016e4 = load i32, i32* @r28, align 4
  store i32 %v0_100016e4, i32* @r3, align 4
  store i32 10, i32* %r4.global-to-local, align 4
  store i32 268441328, i32* @lr, align 4
  %v2_100016ec = call i32 @function_1000a228(i32 %v0_100016e4, i32 10)
  store i32 %v2_100016ec, i32* %r3.global-to-local, align 4
  %v1_100016f0 = add i32 %v2_100016ec, -1
  store i32 %v1_100016f0, i32* %r0.global-to-local, align 4
  %v1_100016f4 = icmp ult i32 %v1_100016f0, 8
  %v2_100016f4 = icmp ugt i32 %v1_100016f0, 8
  %v3_100016f4 = icmp eq i32 %v1_100016f0, 8
  store i1 %v1_100016f4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100016f4, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100016f4, i1* %cr7_eq.global-to-local, align 1
  %v0_100016f8 = load i32, i32* @r1, align 4
  %v1_100016f8 = add i32 %v0_100016f8, 20792
  %v2_100016f8 = inttoptr i32 %v1_100016f8 to i32*
  %v3_100016f8 = load i32, i32* %v2_100016f8, align 4
  store i32 %v3_100016f8, i32* %r0.global-to-local, align 4
  %v2_100016fc = add i32 %v3_100016f8, %v2_100016ec
  store i32 %v2_100016fc, i32* @r31, align 4
  %tmp84 = icmp ult i32 %v1_100016f0, 9
  br i1 %tmp84, label %dec_label_pc_10001710.preheader, label %dec_label_pc_10001720

dec_label_pc_10001710.preheader:                  ; preds = %dec_label_pc_100016e4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268441368, i32* @lr, align 4
  %v0_100017144 = call i32 @function_1000ad5c()
  store i32 %v0_100017144, i32* %r3.global-to-local, align 4
  %v1_100017185 = load i32, i32* @r31, align 4
  %v2_100017186 = icmp ult i32 %v0_100017144, %v1_100017185
  %v3_100017187 = icmp ugt i32 %v0_100017144, %v1_100017185
  %v4_100017188 = icmp eq i32 %v0_100017144, %v1_100017185
  store i1 %v2_100017186, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100017187, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_100017188, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_100017186, label %dec_label_pc_10001708, label %dec_label_pc_10001720.loopexit

dec_label_pc_10001708:                            ; preds = %dec_label_pc_10001710.preheader, %dec_label_pc_10001708
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10001710.44 to i32), i32* @lr, align 4
  %v1_1000170c = call i32 @function_1000c280(i32 1)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268441368, i32* @lr, align 4
  %v0_10001714 = call i32 @function_1000ad5c()
  store i32 %v0_10001714, i32* %r3.global-to-local, align 4
  %v1_10001718 = load i32, i32* @r31, align 4
  %v2_10001718 = icmp ult i32 %v0_10001714, %v1_10001718
  %v3_10001718 = icmp ugt i32 %v0_10001714, %v1_10001718
  %v4_10001718 = icmp eq i32 %v0_10001714, %v1_10001718
  store i1 %v2_10001718, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001718, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_10001718, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10001718, label %dec_label_pc_10001708, label %dec_label_pc_10001720.loopexit

dec_label_pc_10001720.loopexit:                   ; preds = %dec_label_pc_10001708, %dec_label_pc_10001710.preheader
  %v0_10001720.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_10001720

dec_label_pc_10001720:                            ; preds = %dec_label_pc_10001720.loopexit, %dec_label_pc_100016e4
  %v0_10001720 = phi i32 [ %v0_10001720.pre, %dec_label_pc_10001720.loopexit ], [ %v0_100016f8, %dec_label_pc_100016e4 ]
  %v1_10001720 = add i32 %v0_10001720, 8
  %v2_10001720 = inttoptr i32 %v1_10001720 to i32*
  %v3_10001720 = load i32, i32* %v2_10001720, align 4
  store i32 %v3_10001720, i32* %r29.global-to-local, align 4
  %v0_10001724 = load i32, i32* @r28, align 4
  %v2_10001724 = add i32 %v0_10001724, %v3_10001720
  store i32 %v2_10001724, i32* @r31, align 4
  store i32 %v2_10001724, i32* %r3.global-to-local, align 4
  store i32 268441392, i32* @lr, align 4
  %v1_1000172c = inttoptr i32 %v2_10001724 to i8*
  %v2_1000172c = call i32 @function_1000a100(i8* %v1_1000172c)
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 %v2_1000172c, i32* %r4.global-to-local, align 4
  %v0_1000173c = load i32, i32* @r31, align 4
  store i32 %v0_1000173c, i32* %r3.global-to-local, align 4
  store i32 268441412, i32* %lr.global-to-local, align 4
  %v4_10001740 = inttoptr i32 %v0_1000173c to i8*
  %v5_10001740 = call i32 @function_1000a4b0(i8* %v4_10001740, i32 %v2_1000172c, i32 ptrtoint ([5 x i8]* @global_var_1000d400.40 to i32))
  store i32 %v5_10001740, i32* %r3.global-to-local, align 4
  %v1_10001744 = icmp slt i32 %v5_10001740, 4
  %v2_10001744 = icmp sgt i32 %v5_10001740, 4
  %v3_10001744 = icmp eq i32 %v5_10001740, 4
  store i1 %v1_10001744, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001744, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001744, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001744, label %dec_label_pc_10001af0, label %dec_label_pc_1000174c

dec_label_pc_1000174c:                            ; preds = %dec_label_pc_10001720
  %v0_1000174c = load i32, i32* @r28, align 4
  %v1_1000174c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000174c = add i32 %v1_1000174c, %v0_1000174c
  %v3_1000174c = inttoptr i32 %v2_1000174c to i8*
  %v4_1000174c = load i8, i8* %v3_1000174c, align 1
  %v5_1000174c = zext i8 %v4_1000174c to i32
  store i32 %v5_1000174c, i32* %r0.global-to-local, align 4
  %v1_10001750 = icmp ult i8 %v4_1000174c, 47
  %v2_10001750 = icmp ugt i8 %v4_1000174c, 47
  %v3_10001750 = icmp eq i8 %v4_1000174c, 47
  store i1 %v1_10001750, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001750, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001750, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001750, label %dec_label_pc_10001a9c, label %dec_label_pc_10001758

dec_label_pc_10001758:                            ; preds = %dec_label_pc_1000174c, %dec_label_pc_10001ab4, %dec_label_pc_10001a9c, %dec_label_pc_10001ad8
  store i32 10, i32* %r9.global-to-local, align 4
  store i32 1195725824, i32* %r0.global-to-local, align 4
  %v2_10001764 = load i32, i32* @r30, align 4
  %v3_10001764 = add i32 %v2_10001764, -529
  %v4_10001764 = inttoptr i32 %v3_10001764 to i8*
  store i8 10, i8* %v4_10001764, align 1
  %v0_10001768 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001768 = load i32, i32* @r30, align 4
  %v2_10001768 = add i32 %v1_10001768, 898
  %v3_10001768 = inttoptr i32 %v2_10001768 to i32*
  store i32 %v0_10001768, i32* %v3_10001768, align 4
  br label %dec_label_pc_10000824

dec_label_pc_10001770:                            ; preds = %dec_label_pc_10000f14
  store i32 0, i32* %r31.global-to-local, align 4
  %v1_10001774 = load i32, i32* @r30, align 4
  %v2_10001774 = add i32 %v1_10001774, 931
  %v3_10001774 = inttoptr i32 %v2_10001774 to i32*
  store i32 0, i32* %v3_10001774, align 4
  br label %dec_label_pc_10000fbc

dec_label_pc_1000177c:                            ; preds = %dec_label_pc_10001658, %dec_label_pc_10001598, %dec_label_pc_10001574
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v0_10001780 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10001780, i32* %r4.global-to-local, align 4
  %v0_1000178c = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_1000178c, i32* %r3.global-to-local, align 4
  %v0_10001790 = load i32, i32* %r23.global-to-local, align 4
  %v1_10001790 = add i32 %v0_10001790, 1431
  store i32 %v1_10001790, i32* @r31, align 4
  store i32 268441496, i32* %lr.global-to-local, align 4
  %v5_10001794 = call i32 @function_1000a1cc(i32 %v0_1000178c, i32 %v0_10001780, i32 ptrtoint ([5 x i8]* @global_var_1000d3f4.37 to i32), i32 4)
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 %v5_10001794, i32* %r29.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1000d410.45 to i32), i32* %r4.global-to-local, align 4
  %v0_100017a4 = load i32, i32* @r31, align 4
  store i32 %v0_100017a4, i32* %r3.global-to-local, align 4
  store i32 268441516, i32* %lr.global-to-local, align 4
  %v3_100017a8 = inttoptr i32 %v0_100017a4 to i8*
  %v4_100017a8 = call i32 @function_1000a55c(i8* %v3_100017a8, i32 ptrtoint ([5 x i8]* @global_var_1000d410.45 to i32))
  store i32 %v4_100017a8, i32* %r3.global-to-local, align 4
  %v1_100017ac = icmp slt i32 %v4_100017a8, 0
  %v2_100017ac = icmp sgt i32 %v4_100017a8, 0
  %v3_100017ac = icmp eq i32 %v4_100017a8, 0
  store i1 %v1_100017ac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100017ac, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100017ac, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100017ac, label %dec_label_pc_1000191c, label %dec_label_pc_100017b4

dec_label_pc_100017b4:                            ; preds = %dec_label_pc_1000191c, %dec_label_pc_1000177c
  store i32 7, i32* %r0.global-to-local, align 4
  %v2_100017b8 = load i32, i32* @r30, align 4
  %v3_100017b8 = add i32 %v2_100017b8, -529
  %v4_100017b8 = inttoptr i32 %v3_100017b8 to i8*
  store i8 7, i8* %v4_100017b8, align 1
  br label %dec_label_pc_100017bc

dec_label_pc_100017bc:                            ; preds = %dec_label_pc_1000193c, %dec_label_pc_10001b78, %dec_label_pc_100017b4
  %v0_100017bc = load i32, i32* @r30, align 4
  %v1_100017bc = add i32 %v0_100017bc, -533
  %v2_100017bc = inttoptr i32 %v1_100017bc to i32*
  %v3_100017bc = load i32, i32* %v2_100017bc, align 4
  store i32 %v3_100017bc, i32* %r3.global-to-local, align 4
  %v0_100017c0 = load i32, i32* %r29.global-to-local, align 4
  %v0_100017c4 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_100017c4, i32* %r4.global-to-local, align 4
  store i32 268441552, i32* @lr, align 4
  %v4_100017cc = call i32 @function_1000b62c(i32 %v3_100017bc, i32 %v0_100017c4, i32 %v0_100017c0, i32 16384)
  store i32 %v4_100017cc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10000824

dec_label_pc_100017d4:                            ; preds = %dec_label_pc_10000cd0
  %v1_100017d4 = icmp slt i32 %v0_100017d4, 10239
  %v2_100017d4 = icmp sgt i32 %v0_100017d4, 10239
  %v3_100017d4 = icmp eq i32 %v0_100017d4, 10239
  store i1 %v1_100017d4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100017d4, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100017d4, i1* %cr7_eq.global-to-local, align 1
  %tmp85 = icmp slt i32 %v0_100017d4, 10240
  br i1 %tmp85, label %dec_label_pc_10000824, label %dec_label_pc_10000cf4

dec_label_pc_100017e0:                            ; preds = %dec_label_pc_10001524
  store i32 104, i32* %r0.global-to-local, align 4
  %v1_100017e4 = load i32, i32* @r31, align 4
  %v2_100017e4 = inttoptr i32 %v1_100017e4 to i32*
  store i32 104, i32* %v2_100017e4, align 4
  br label %dec_label_pc_10001558

dec_label_pc_100017ec:                            ; preds = %dec_label_pc_100012f0
  %v0_100017ec = load i32, i32* %r25.global-to-local, align 4
  %v1_100017ec = inttoptr i32 %v0_100017ec to i32*
  %v2_100017ec = load i32, i32* %v1_100017ec, align 4
  store i32 %v2_100017ec, i32* %r0.global-to-local, align 4
  %v1_100017f0 = icmp slt i32 %v2_100017ec, 11
  %v2_100017f0 = icmp sgt i32 %v2_100017ec, 11
  %v3_100017f0 = icmp eq i32 %v2_100017ec, 11
  store i1 %v1_100017f0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100017f0, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100017f0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100017f0, label %dec_label_pc_10000824, label %dec_label_pc_10001414

dec_label_pc_100017fc:                            ; preds = %dec_label_pc_100011a4
  store i32 7, i32* %r11.global-to-local, align 4
  %v1_10001800 = load i32, i32* @r1, align 4
  %v2_10001800 = add i32 %v1_10001800, 8
  %v3_10001800 = inttoptr i32 %v2_10001800 to i32*
  store i32 7, i32* %v3_10001800, align 4
  %v0_10001804 = load i32, i32* %r29.global-to-local, align 4
  %v1_10001804 = add i32 %v0_10001804, 4
  %v2_10001804 = inttoptr i32 %v1_10001804 to i8*
  %v3_10001804 = load i8, i8* %v2_10001804, align 1
  %v4_10001804 = zext i8 %v3_10001804 to i32
  store i32 %v4_10001804, i32* %r0.global-to-local, align 4
  %v1_10001808 = icmp ult i8 %v3_10001804, 115
  %v2_10001808 = icmp ugt i8 %v3_10001804, 115
  %v3_10001808 = icmp eq i8 %v3_10001804, 115
  store i1 %v1_10001808, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001808, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001808, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001808, label %dec_label_pc_10001a5c, label %dec_label_pc_10001810

dec_label_pc_10001810:                            ; preds = %dec_label_pc_100017fc, %dec_label_pc_10001a5c
  %v0_10001814 = phi i32 [ %v0_10001804, %dec_label_pc_100017fc ], [ %v0_10001814.pre, %dec_label_pc_10001a5c ]
  %v0_10001810 = load i32, i32* @r1, align 4
  %v1_10001810 = add i32 %v0_10001810, 8
  %v2_10001810 = inttoptr i32 %v1_10001810 to i32*
  %v3_10001810 = load i32, i32* %v2_10001810, align 4
  store i32 %v0_10001814, i32* %r3.global-to-local, align 4
  %v1_10001818 = load i32, i32* %r28.global-to-local, align 4
  %v2_10001818 = sub i32 %v1_10001818, %v3_10001810
  %v2_1000181c = add i32 %v3_10001810, %v0_10001814
  store i32 %v2_1000181c, i32* %r4.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10001824.46 to i32), i32* @lr, align 4
  %v3_10001820 = call i32 @function_1000b188(i32 %v0_10001814, i32 %v2_1000181c, i32 %v2_10001818)
  store i32 %v3_10001820, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_10001828 = load i32, i32* @r1, align 4
  %v2_10001828 = add i32 %v1_10001828, 8
  %v3_10001828 = inttoptr i32 %v2_10001828 to i32*
  store i32 0, i32* %v3_10001828, align 4
  %v0_1000182c = load i32, i32* %r20.global-to-local, align 4
  %v1_1000182c = load i32, i32* @r31, align 4
  %v2_1000182c = add i32 %v1_1000182c, %v0_1000182c
  %v3_1000182c = inttoptr i32 %v2_1000182c to i8*
  %v4_1000182c = load i8, i8* %v3_1000182c, align 1
  %v5_1000182c = zext i8 %v4_1000182c to i32
  store i32 %v5_1000182c, i32* %r3.global-to-local, align 4
  %v2_10001830 = icmp ne i8 %v4_1000182c, 0
  %v3_10001830 = icmp eq i8 %v4_1000182c, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001830, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001830, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001830, label %dec_label_pc_10001870, label %dec_label_pc_10001838

dec_label_pc_10001838:                            ; preds = %dec_label_pc_10001810
  %v1_10001838 = icmp ult i8 %v4_1000182c, 47
  %v2_10001838 = icmp ugt i8 %v4_1000182c, 47
  %v3_10001838 = icmp eq i8 %v4_1000182c, 47
  store i1 %v1_10001838, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001838, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001838, i1* %cr7_eq.global-to-local, align 1
  %v0_1000183c = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_1000183c, i32* %r9.global-to-local, align 4
  br i1 %v3_10001838, label %dec_label_pc_100019c0, label %dec_label_pc_10001844

dec_label_pc_10001844:                            ; preds = %dec_label_pc_10001838
  store i32 1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10001858

dec_label_pc_1000184c:                            ; preds = %dec_label_pc_10001858
  %v1_1000184c = icmp ult i8 %v4_10001864, 47
  %v2_1000184c = icmp ugt i8 %v4_10001864, 47
  %v3_1000184c = icmp eq i8 %v4_10001864, 47
  store i1 %v1_1000184c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000184c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000184c, i1* %cr7_eq.global-to-local, align 1
  %v1_10001850 = add i32 %v0_1000185c, 1
  store i32 %v1_10001850, i32* %r4.global-to-local, align 4
  br i1 %v3_1000184c, label %dec_label_pc_100019c0, label %dec_label_pc_10001858

dec_label_pc_10001858:                            ; preds = %dec_label_pc_1000184c, %dec_label_pc_10001844
  %v0_10001858 = phi i32 [ %v1_10001850, %dec_label_pc_1000184c ], [ 1, %dec_label_pc_10001844 ]
  %v1_10001858 = load i32, i32* @r1, align 4
  %v2_10001858 = add i32 %v1_10001858, 8
  %v3_10001858 = inttoptr i32 %v2_10001858 to i32*
  store i32 %v0_10001858, i32* %v3_10001858, align 4
  %v0_1000185c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1000185c, i32* %r11.global-to-local, align 4
  %v0_10001860 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001860 = add i32 %v0_10001860, %v0_1000185c
  store i32 %v2_10001860, i32* %r9.global-to-local, align 4
  %v3_10001864 = inttoptr i32 %v2_10001860 to i8*
  %v4_10001864 = load i8, i8* %v3_10001864, align 1
  %v5_10001864 = zext i8 %v4_10001864 to i32
  store i32 %v5_10001864, i32* %r0.global-to-local, align 4
  %v2_10001868 = icmp ne i8 %v4_10001864, 0
  %v3_10001868 = icmp eq i8 %v4_10001864, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001868, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001868, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001868, label %dec_label_pc_10001870, label %dec_label_pc_1000184c

dec_label_pc_10001870:                            ; preds = %dec_label_pc_10001858, %dec_label_pc_10001810, %dec_label_pc_100019c0
  %v0_10001870 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10001870, i32* %r3.global-to-local, align 4
  store i32 268441720, i32* @lr, align 4
  %v1_10001874 = inttoptr i32 %v0_10001870 to i8*
  %v2_10001874 = call i32 @function_1000a100(i8* %v1_10001874)
  store i32 %v2_10001874, i32* %r3.global-to-local, align 4
  %v1_10001878 = icmp slt i32 %v2_10001874, 0
  %v2_10001878 = icmp sgt i32 %v2_10001874, 0
  %v3_10001878 = icmp eq i32 %v2_10001874, 0
  store i1 %v1_10001878, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001878, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001878, i1* %cr7_eq.global-to-local, align 1
  %tmp86 = icmp slt i32 %v2_10001874, 1
  br i1 %tmp86, label %dec_label_pc_1000189c, label %dec_label_pc_10001880

dec_label_pc_10001880:                            ; preds = %dec_label_pc_10001870
  %v0_10001880 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10001880, i32* %r3.global-to-local, align 4
  store i32 268441736, i32* @lr, align 4
  %v1_10001884 = inttoptr i32 %v0_10001880 to i8*
  %v2_10001884 = call i32 @function_1000a100(i8* %v1_10001884)
  store i32 %v2_10001884, i32* %r3.global-to-local, align 4
  %v1_10001888 = icmp slt i32 %v2_10001884, 127
  %v2_10001888 = icmp sgt i32 %v2_10001884, 127
  %v3_10001888 = icmp eq i32 %v2_10001884, 127
  store i1 %v1_10001888, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001888, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001888, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10001888, label %dec_label_pc_1000189c, label %dec_label_pc_10001890

dec_label_pc_10001890:                            ; preds = %dec_label_pc_10001880
  %v0_10001890 = load i32, i32* %r23.global-to-local, align 4
  %v1_10001890 = add i32 %v0_10001890, 789
  store i32 %v1_10001890, i32* @r3, align 4
  %v0_10001894 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10001894, i32* %r4.global-to-local, align 4
  store i32 268441756, i32* %lr.global-to-local, align 4
  %v2_10001898 = inttoptr i32 %v1_10001890 to i8*
  %v3_10001898 = call i32 @function_1000a128(i8* %v2_10001898, i32 %v0_10001894)
  store i32 %v3_10001898, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000189c

dec_label_pc_1000189c:                            ; preds = %dec_label_pc_10001880, %dec_label_pc_10001870, %dec_label_pc_10001890
  %v0_1000189c = load i32, i32* @r1, align 4
  %v1_1000189c = add i32 %v0_1000189c, 8
  %v2_1000189c = inttoptr i32 %v1_1000189c to i32*
  %v3_1000189c = load i32, i32* %v2_1000189c, align 4
  %v0_100018a0 = load i32, i32* %r29.global-to-local, align 4
  %v2_100018a0 = add i32 %v3_1000189c, 1
  %v1_100018a4 = add i32 %v2_100018a0, %v0_100018a0
  store i32 %v1_100018a4, i32* %r3.global-to-local, align 4
  store i32 268441772, i32* @lr, align 4
  %v1_100018a8 = inttoptr i32 %v1_100018a4 to i8*
  %v2_100018a8 = call i32 @function_1000a100(i8* %v1_100018a8)
  store i32 %v2_100018a8, i32* %r3.global-to-local, align 4
  %v1_100018ac = icmp slt i32 %v2_100018a8, 255
  %v2_100018ac = icmp sgt i32 %v2_100018a8, 255
  %v3_100018ac = icmp eq i32 %v2_100018a8, 255
  store i1 %v1_100018ac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100018ac, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100018ac, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_100018ac, label %dec_label_pc_100011e4, label %dec_label_pc_100018b4

dec_label_pc_100018b4:                            ; preds = %dec_label_pc_1000189c
  %v0_100018b4 = load i32, i32* @r30, align 4
  store i32 %v0_100018b4, i32* @r3, align 4
  store i32 255, i32* @r4, align 4
  store i32 268441792, i32* @lr, align 4
  %v0_100018bc = call i32 @function_1000a1a8()
  store i32 %v0_100018bc, i32* %r3.global-to-local, align 4
  %v0_100018c0 = load i32, i32* @r1, align 4
  %v1_100018c0 = add i32 %v0_100018c0, 8
  %v2_100018c0 = inttoptr i32 %v1_100018c0 to i32*
  %v3_100018c0 = load i32, i32* %v2_100018c0, align 4
  %v0_100018c4 = load i32, i32* %r29.global-to-local, align 4
  %v2_100018c4 = add i32 %v3_100018c0, 1
  %v1_100018c8 = add i32 %v2_100018c4, %v0_100018c4
  store i32 %v1_100018c8, i32* %r3.global-to-local, align 4
  store i32 268441808, i32* @lr, align 4
  %v1_100018cc = inttoptr i32 %v1_100018c8 to i8*
  %v2_100018cc = call i32 @function_1000a100(i8* %v1_100018cc)
  store i32 %v2_100018cc, i32* %r3.global-to-local, align 4
  %v1_100018d0 = icmp slt i32 %v2_100018cc, 0
  %v2_100018d0 = icmp sgt i32 %v2_100018cc, 0
  %v3_100018d0 = icmp eq i32 %v2_100018cc, 0
  store i1 %v1_100018d0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100018d0, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100018d0, i1* %cr7_eq.global-to-local, align 1
  %tmp87 = icmp slt i32 %v2_100018cc, 1
  br i1 %tmp87, label %dec_label_pc_100011e4, label %dec_label_pc_100018d8

dec_label_pc_100018d8:                            ; preds = %dec_label_pc_10001a40, %dec_label_pc_100018b4
  %v0_100018d8 = load i32, i32* @r1, align 4
  %v1_100018d8 = add i32 %v0_100018d8, 8
  %v2_100018d8 = inttoptr i32 %v1_100018d8 to i32*
  %v3_100018d8 = load i32, i32* %v2_100018d8, align 4
  %v0_100018dc = load i32, i32* @r30, align 4
  store i32 %v0_100018dc, i32* @r3, align 4
  %v0_100018e0 = load i32, i32* %r29.global-to-local, align 4
  %v2_100018e0 = add i32 %v3_100018d8, 1
  %v1_100018e4 = add i32 %v2_100018e0, %v0_100018e0
  store i32 %v1_100018e4, i32* %r4.global-to-local, align 4
  store i32 268441836, i32* %lr.global-to-local, align 4
  %v2_100018e8 = inttoptr i32 %v0_100018dc to i8*
  %v3_100018e8 = call i32 @function_1000a128(i8* %v2_100018e8, i32 %v1_100018e4)
  store i32 %v3_100018e8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100011e4

dec_label_pc_100018f0:                            ; preds = %dec_label_pc_10000ca8
  %v0_100018f0 = load i32, i32* @r30, align 4
  %v1_100018f0 = add i32 %v0_100018f0, -533
  %v2_100018f0 = inttoptr i32 %v1_100018f0 to i32*
  %v3_100018f0 = load i32, i32* %v2_100018f0, align 4
  store i32 %v3_100018f0, i32* %r3.global-to-local, align 4
  store i32 268441848, i32* @lr, align 4
  %v0_100018f4 = call i32 @function_1000a98c()
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10001900 = load i32, i32* @r30, align 4
  %v2_10001900 = add i32 %v1_10001900, -533
  %v3_10001900 = inttoptr i32 %v2_10001900 to i32*
  store i32 -1, i32* %v3_10001900, align 4
  %v0_10001904 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001904 = trunc i32 %v0_10001904 to i8
  %v2_10001904 = load i32, i32* @r30, align 4
  %v3_10001904 = add i32 %v2_10001904, -529
  %v4_10001904 = inttoptr i32 %v3_10001904 to i8*
  store i8 %v1_10001904, i8* %v4_10001904, align 1
  br label %dec_label_pc_10000824

dec_label_pc_1000190c:                            ; preds = %dec_label_pc_1000154c
  %v0_1000190c = load i32, i32* @r30, align 4
  %v1_1000190c = add i32 %v0_1000190c, -529
  %v2_1000190c = inttoptr i32 %v1_1000190c to i8*
  %v3_1000190c = load i8, i8* %v2_1000190c, align 1
  %v4_1000190c = zext i8 %v3_1000190c to i32
  store i32 %v4_1000190c, i32* %r0.global-to-local, align 4
  %v2_10001910 = icmp ne i8 %v3_1000190c, 0
  %v3_10001910 = icmp eq i8 %v3_1000190c, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001910, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001910, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001910, label %dec_label_pc_10000824, label %dec_label_pc_100011e4

dec_label_pc_1000191c:                            ; preds = %dec_label_pc_1000177c
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v0_10001920 = load i32, i32* @r31, align 4
  store i32 %v0_10001920, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1000d3dc.7 to i32), i32* %r4.global-to-local, align 4
  store i32 268441900, i32* %lr.global-to-local, align 4
  %v3_10001928 = inttoptr i32 %v0_10001920 to i8*
  %v4_10001928 = call i32 @function_1000a55c(i8* %v3_10001928, i32 ptrtoint ([4 x i8]* @global_var_1000d3dc.7 to i32))
  store i32 %v4_10001928, i32* %r3.global-to-local, align 4
  %v1_1000192c = icmp slt i32 %v4_10001928, 0
  %v2_1000192c = icmp sgt i32 %v4_10001928, 0
  %v3_1000192c = icmp eq i32 %v4_10001928, 0
  store i1 %v1_1000192c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000192c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000192c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000192c, label %dec_label_pc_10001934, label %dec_label_pc_100017b4

dec_label_pc_10001934:                            ; preds = %dec_label_pc_1000191c
  %v0_10001934 = load i32, i32* %r24.global-to-local, align 4
  %v1_10001934 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001934 = icmp slt i32 %v0_10001934, %v1_10001934
  %v3_10001934 = icmp sgt i32 %v0_10001934, %v1_10001934
  %v4_10001934 = icmp eq i32 %v0_10001934, %v1_10001934
  store i1 %v2_10001934, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001934, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_10001934, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001934, label %dec_label_pc_1000193c, label %dec_label_pc_10001b78

dec_label_pc_1000193c:                            ; preds = %dec_label_pc_10001934
  store i32 10, i32* %r0.global-to-local, align 4
  %v2_10001940 = load i32, i32* @r30, align 4
  %v3_10001940 = add i32 %v2_10001940, -529
  %v4_10001940 = inttoptr i32 %v3_10001940 to i8*
  store i8 10, i8* %v4_10001940, align 1
  br label %dec_label_pc_100017bc

dec_label_pc_10001948:                            ; preds = %dec_label_pc_1000142c
  %v1_10001948 = add i32 %v0_10001454, 1579
  %v2_10001948 = inttoptr i32 %v1_10001948 to i32*
  %v3_10001948 = load i32, i32* %v2_10001948, align 4
  store i32 %v3_10001948, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  store i32 268441948, i32* %lr.global-to-local, align 4
  %v3_10001958 = call i32 @function_100097cc(i32 36, i32* null)
  %v0_1000195c = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_1000195c, i32* %r4.global-to-local, align 4
  %v0_10001968 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10001968, i32* %r3.global-to-local, align 4
  store i32 268441968, i32* %lr.global-to-local, align 4
  %v4_1000196c = call i32 @function_1000a1cc(i32 %v0_10001968, i32 %v0_1000195c, i32 %v3_10001958, i32 11)
  store i32 %v4_1000196c, i32* %r3.global-to-local, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v0_10001974 = load i32, i32* @r30, align 4
  %v1_10001974 = add i32 %v0_10001974, 1579
  %v2_10001974 = inttoptr i32 %v1_10001974 to i32*
  %v3_10001974 = load i32, i32* %v2_10001974, align 4
  %v0_10001978 = load i32, i32* %r27.global-to-local, align 4
  %v2_10001978 = add i32 %v0_10001978, %v4_1000196c
  store i32 %v2_10001978, i32* %r31.global-to-local, align 4
  store i32 %v4_1000196c, i32* %r29.global-to-local, align 4
  %v2_10001984 = sub i32 %v3_10001974, %v4_1000196c
  store i32 %v2_10001984, i32* %r4.global-to-local, align 4
  store i32 %v2_10001978, i32* %r3.global-to-local, align 4
  store i32 268442004, i32* %lr.global-to-local, align 4
  %v4_10001990 = call i32 @function_1000a1cc(i32 %v2_10001978, i32 %v2_10001984, i32 ptrtoint (i32* @global_var_1000d418.47 to i32), i32 1)
  store i32 %v4_10001990, i32* %r3.global-to-local, align 4
  %v0_10001994 = load i32, i32* @r30, align 4
  %v1_10001994 = add i32 %v0_10001994, 935
  %v2_10001994 = inttoptr i32 %v1_10001994 to i32*
  %v3_10001994 = load i32, i32* %v2_10001994, align 4
  store i32 %v3_10001994, i32* %r0.global-to-local, align 4
  %v0_10001998 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001998 = add i32 %v0_10001998, %v4_10001990
  store i32 %v2_10001998, i32* %r28.global-to-local, align 4
  %v1_1000199c = icmp slt i32 %v3_10001994, 4
  %v2_1000199c = icmp sgt i32 %v3_10001994, 4
  %v3_1000199c = icmp eq i32 %v3_10001994, 4
  store i1 %v1_1000199c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000199c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000199c, i1* %cr7_eq.global-to-local, align 1
  %v1_100019a0 = load i32, i32* %r23.global-to-local, align 4
  %v2_100019a0 = add i32 %v1_100019a0, %v2_10001998
  store i32 %v2_100019a0, i32* %r9.global-to-local, align 4
  %v0_100019a4 = load i32, i32* %r26.global-to-local, align 4
  %v1_100019a4 = trunc i32 %v0_100019a4 to i8
  %v3_100019a4 = add i32 %v2_100019a0, 2115
  %v4_100019a4 = inttoptr i32 %v3_100019a4 to i8*
  store i8 %v1_100019a4, i8* %v4_100019a4, align 1
  %v0_100019a8 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_100019a8 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_100019a8 = or i1 %v0_100019a8, %v1_100019a8
  br i1 %v2_100019a8, label %dec_label_pc_10001b90, label %dec_label_pc_100019ac

dec_label_pc_100019ac:                            ; preds = %dec_label_pc_10001948, %dec_label_pc_10001b90, %dec_label_pc_10001ba0
  store i32 10, i32* %r0.global-to-local, align 4
  %v1_100019b4 = load i32, i32* @r30, align 4
  %v2_100019b4 = add i32 %v1_100019b4, 931
  %v3_100019b4 = inttoptr i32 %v2_100019b4 to i32*
  store i32 -1, i32* %v3_100019b4, align 4
  %v0_100019b8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100019b8 = trunc i32 %v0_100019b8 to i8
  %v2_100019b8 = load i32, i32* @r30, align 4
  %v3_100019b8 = add i32 %v2_100019b8, -529
  %v4_100019b8 = inttoptr i32 %v3_100019b8 to i8*
  store i8 %v1_100019b8, i8* %v4_100019b8, align 1
  br label %dec_label_pc_10000824

dec_label_pc_100019c0:                            ; preds = %dec_label_pc_1000184c, %dec_label_pc_10001838
  %v2_100019c4 = phi i32 [ %v0_1000183c, %dec_label_pc_10001838 ], [ %v2_10001860, %dec_label_pc_1000184c ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_100019c4 = inttoptr i32 %v2_100019c4 to i8*
  store i8 0, i8* %v3_100019c4, align 1
  br label %dec_label_pc_10001870

dec_label_pc_100019cc:                            ; preds = %dec_label_pc_10001680
  store i32 %v3_100019cc, i32* %r11.global-to-local, align 4
  %v0_100019d0 = load i32, i32* @r28, align 4
  %v2_100019d0 = add i32 %v0_100019d0, %v3_100019cc
  %v3_100019d0 = inttoptr i32 %v2_100019d0 to i8*
  %v4_100019d0 = load i8, i8* %v3_100019d0, align 1
  %v5_100019d0 = zext i8 %v4_100019d0 to i32
  store i32 %v5_100019d0, i32* %r0.global-to-local, align 4
  %v1_100019d4 = icmp ult i8 %v4_100019d0, 34
  %v2_100019d4 = icmp ugt i8 %v4_100019d0, 34
  %v3_100019d4 = icmp eq i8 %v4_100019d0, 34
  store i1 %v1_100019d4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100019d4, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100019d4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100019d4, label %dec_label_pc_100019dc, label %dec_label_pc_100016e4

dec_label_pc_100019dc:                            ; preds = %dec_label_pc_100016ac.dec_label_pc_100019dc_crit_edge, %dec_label_pc_100019cc
  %v1_100019e4 = phi i32 [ %v0_100019cc, %dec_label_pc_100019cc ], [ %v1_100019e4.pre, %dec_label_pc_100016ac.dec_label_pc_100019dc_crit_edge ]
  %v0_100019e0 = phi i32 [ %v0_100019d0, %dec_label_pc_100019cc ], [ %v0_100016d8, %dec_label_pc_100016ac.dec_label_pc_100019dc_crit_edge ]
  %v0_100019dc = phi i32 [ %v3_100019cc, %dec_label_pc_100019cc ], [ %v1_100016d8, %dec_label_pc_100016ac.dec_label_pc_100019dc_crit_edge ]
  %v1_100019dc = add i32 %v0_100019dc, 1
  store i32 %v1_100019dc, i32* %r11.global-to-local, align 4
  %v2_100019e0 = add i32 %v1_100019dc, %v0_100019e0
  store i32 %v2_100019e0, i32* %r29.global-to-local, align 4
  %v2_100019e4 = add i32 %v1_100019e4, 8
  %v3_100019e4 = inttoptr i32 %v2_100019e4 to i32*
  store i32 %v1_100019dc, i32* %v3_100019e4, align 4
  %v0_100019e8 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_100019e8, i32* %r3.global-to-local, align 4
  store i32 268442096, i32* @lr, align 4
  %v1_100019ec = inttoptr i32 %v0_100019e8 to i8*
  %v2_100019ec = call i32 @function_1000a100(i8* %v1_100019ec)
  store i32 %v2_100019ec, i32* %r3.global-to-local, align 4
  %v0_100019f0 = load i32, i32* %r29.global-to-local, align 4
  %v2_100019f0 = add i32 %v0_100019f0, %v2_100019ec
  store i32 %v2_100019f0, i32* %r29.global-to-local, align 4
  %v1_100019f4 = add i32 %v2_100019f0, -1
  %v2_100019f4 = inttoptr i32 %v1_100019f4 to i8*
  %v3_100019f4 = load i8, i8* %v2_100019f4, align 1
  %v4_100019f4 = zext i8 %v3_100019f4 to i32
  store i32 %v4_100019f4, i32* %r0.global-to-local, align 4
  %v1_100019f8 = icmp ult i8 %v3_100019f4, 34
  %v2_100019f8 = icmp ugt i8 %v3_100019f4, 34
  %v3_100019f8 = icmp eq i8 %v3_100019f4, 34
  store i1 %v1_100019f8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100019f8, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100019f8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100019f8, label %dec_label_pc_10001a00, label %dec_label_pc_100016e4

dec_label_pc_10001a00:                            ; preds = %dec_label_pc_100019dc
  %v0_10001a00 = load i32, i32* @r1, align 4
  %v1_10001a00 = add i32 %v0_10001a00, 8
  %v2_10001a00 = inttoptr i32 %v1_10001a00 to i32*
  %v3_10001a00 = load i32, i32* %v2_10001a00, align 4
  %v0_10001a04 = load i32, i32* @r28, align 4
  %v2_10001a04 = add i32 %v0_10001a04, %v3_10001a00
  store i32 %v2_10001a04, i32* %r29.global-to-local, align 4
  store i32 %v2_10001a04, i32* %r3.global-to-local, align 4
  store i32 268442128, i32* @lr, align 4
  %v1_10001a0c = inttoptr i32 %v2_10001a04 to i8*
  %v2_10001a0c = call i32 @function_1000a100(i8* %v1_10001a0c)
  store i32 %v2_10001a0c, i32* %r3.global-to-local, align 4
  %v0_10001a10 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001a10 = add i32 %v0_10001a10, %v2_10001a0c
  store i32 %v2_10001a10, i32* %r29.global-to-local, align 4
  %v0_10001a14 = load i32, i32* %r26.global-to-local, align 4
  %v1_10001a14 = trunc i32 %v0_10001a14 to i8
  %v3_10001a14 = add i32 %v2_10001a10, -1
  %v4_10001a14 = inttoptr i32 %v3_10001a14 to i8*
  store i8 %v1_10001a14, i8* %v4_10001a14, align 1
  br label %dec_label_pc_100016e4

dec_label_pc_10001a1c:                            ; preds = %dec_label_pc_100011d8
  %v0_10001a1c = load i32, i32* @r30, align 4
  store i32 %v0_10001a1c, i32* @r3, align 4
  store i32 255, i32* @r4, align 4
  store i32 268442152, i32* @lr, align 4
  %v0_10001a24 = call i32 @function_1000a1a8()
  store i32 %v0_10001a24, i32* %r3.global-to-local, align 4
  %v0_10001a28 = load i32, i32* @r1, align 4
  %v1_10001a28 = add i32 %v0_10001a28, 8
  %v2_10001a28 = inttoptr i32 %v1_10001a28 to i32*
  %v3_10001a28 = load i32, i32* %v2_10001a28, align 4
  %v0_10001a2c = load i32, i32* %r29.global-to-local, align 4
  %v2_10001a2c = add i32 %v3_10001a28, 1
  %v1_10001a30 = add i32 %v2_10001a2c, %v0_10001a2c
  store i32 %v1_10001a30, i32* %r3.global-to-local, align 4
  store i32 268442168, i32* @lr, align 4
  %v1_10001a34 = inttoptr i32 %v1_10001a30 to i8*
  %v2_10001a34 = call i32 @function_1000a100(i8* %v1_10001a34)
  store i32 %v2_10001a34, i32* %r3.global-to-local, align 4
  %v1_10001a38 = icmp slt i32 %v2_10001a34, 0
  %v2_10001a38 = icmp sgt i32 %v2_10001a34, 0
  %v3_10001a38 = icmp eq i32 %v2_10001a34, 0
  store i1 %v1_10001a38, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001a38, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001a38, i1* %cr7_eq.global-to-local, align 1
  %tmp88 = icmp slt i32 %v2_10001a34, 1
  br i1 %tmp88, label %dec_label_pc_100011e4, label %dec_label_pc_10001a40

dec_label_pc_10001a40:                            ; preds = %dec_label_pc_10001a1c
  %v0_10001a40 = load i32, i32* @r1, align 4
  %v1_10001a40 = add i32 %v0_10001a40, 8
  %v2_10001a40 = inttoptr i32 %v1_10001a40 to i32*
  %v3_10001a40 = load i32, i32* %v2_10001a40, align 4
  %v0_10001a44 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001a44 = add i32 %v3_10001a40, 1
  %v1_10001a48 = add i32 %v2_10001a44, %v0_10001a44
  store i32 %v1_10001a48, i32* %r3.global-to-local, align 4
  store i32 268442192, i32* @lr, align 4
  %v1_10001a4c = inttoptr i32 %v1_10001a48 to i8*
  %v2_10001a4c = call i32 @function_1000a100(i8* %v1_10001a4c)
  store i32 %v2_10001a4c, i32* %r3.global-to-local, align 4
  %v1_10001a50 = icmp slt i32 %v2_10001a4c, 255
  %v2_10001a50 = icmp sgt i32 %v2_10001a4c, 255
  %v3_10001a50 = icmp eq i32 %v2_10001a4c, 255
  store i1 %v1_10001a50, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001a50, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001a50, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10001a50, label %dec_label_pc_100011e4, label %dec_label_pc_100018d8

dec_label_pc_10001a5c:                            ; preds = %dec_label_pc_100017fc
  store i32 8, i32* %r11.global-to-local, align 4
  %v1_10001a60 = load i32, i32* @r1, align 4
  %v2_10001a60 = add i32 %v1_10001a60, 8
  %v3_10001a60 = inttoptr i32 %v2_10001a60 to i32*
  store i32 8, i32* %v3_10001a60, align 4
  %v0_10001814.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10001810

dec_label_pc_10001a68:                            ; preds = %dec_label_pc_10001b4c, %dec_label_pc_10001b38
  %v2_10001a6c = phi i32 [ %v0_10001b3c, %dec_label_pc_10001b38 ], [ %v2_10001b5c, %dec_label_pc_10001b4c ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_10001a6c = inttoptr i32 %v2_10001a6c to i8*
  store i8 0, i8* %v3_10001a6c, align 1
  br label %dec_label_pc_10001a70

dec_label_pc_10001a70:                            ; preds = %dec_label_pc_10001b58, %dec_label_pc_10001b0c, %dec_label_pc_10001a68
  %v0_10001a70 = load i32, i32* @r31, align 4
  store i32 %v0_10001a70, i32* %r3.global-to-local, align 4
  store i32 268442232, i32* @lr, align 4
  %v1_10001a74 = inttoptr i32 %v0_10001a70 to i8*
  %v2_10001a74 = call i32 @function_1000a100(i8* %v1_10001a74)
  store i32 %v2_10001a74, i32* %r3.global-to-local, align 4
  %v1_10001a78 = icmp slt i32 %v2_10001a74, 0
  %v2_10001a78 = icmp sgt i32 %v2_10001a74, 0
  %v3_10001a78 = icmp eq i32 %v2_10001a74, 0
  store i1 %v1_10001a78, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001a78, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001a78, i1* %cr7_eq.global-to-local, align 1
  %tmp89 = icmp slt i32 %v2_10001a74, 1
  br i1 %tmp89, label %dec_label_pc_10001a9c, label %dec_label_pc_10001a80

dec_label_pc_10001a80:                            ; preds = %dec_label_pc_10001a70
  %v0_10001a80 = load i32, i32* @r31, align 4
  store i32 %v0_10001a80, i32* %r3.global-to-local, align 4
  store i32 268442248, i32* @lr, align 4
  %v1_10001a84 = inttoptr i32 %v0_10001a80 to i8*
  %v2_10001a84 = call i32 @function_1000a100(i8* %v1_10001a84)
  store i32 %v2_10001a84, i32* %r3.global-to-local, align 4
  %v1_10001a88 = icmp slt i32 %v2_10001a84, 127
  %v2_10001a88 = icmp sgt i32 %v2_10001a84, 127
  %v3_10001a88 = icmp eq i32 %v2_10001a84, 127
  store i1 %v1_10001a88, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001a88, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001a88, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10001a88, label %dec_label_pc_10001a9c, label %dec_label_pc_10001a90

dec_label_pc_10001a90:                            ; preds = %dec_label_pc_10001a80
  %v0_10001a90 = load i32, i32* %r23.global-to-local, align 4
  %v1_10001a90 = add i32 %v0_10001a90, 789
  store i32 %v1_10001a90, i32* @r3, align 4
  %v0_10001a94 = load i32, i32* @r31, align 4
  store i32 %v0_10001a94, i32* %r4.global-to-local, align 4
  store i32 268442268, i32* %lr.global-to-local, align 4
  %v2_10001a98 = inttoptr i32 %v1_10001a90 to i8*
  %v3_10001a98 = call i32 @function_1000a128(i8* %v2_10001a98, i32 %v0_10001a94)
  store i32 %v3_10001a98, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001a9c

dec_label_pc_10001a9c:                            ; preds = %dec_label_pc_1000174c, %dec_label_pc_10001a80, %dec_label_pc_10001a70, %dec_label_pc_10001a90
  %v0_10001a9c = load i32, i32* @r1, align 4
  %v1_10001a9c = add i32 %v0_10001a9c, 8
  %v2_10001a9c = inttoptr i32 %v1_10001a9c to i32*
  %v3_10001a9c = load i32, i32* %v2_10001a9c, align 4
  %v0_10001aa0 = load i32, i32* @r31, align 4
  %v2_10001aa0 = add i32 %v3_10001a9c, 1
  %v1_10001aa4 = add i32 %v2_10001aa0, %v0_10001aa0
  store i32 %v1_10001aa4, i32* %r3.global-to-local, align 4
  store i32 268442284, i32* @lr, align 4
  %v1_10001aa8 = inttoptr i32 %v1_10001aa4 to i8*
  %v2_10001aa8 = call i32 @function_1000a100(i8* %v1_10001aa8)
  store i32 %v2_10001aa8, i32* %r3.global-to-local, align 4
  %v1_10001aac = icmp slt i32 %v2_10001aa8, 255
  %v2_10001aac = icmp sgt i32 %v2_10001aa8, 255
  %v3_10001aac = icmp eq i32 %v2_10001aa8, 255
  store i1 %v1_10001aac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001aac, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001aac, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10001aac, label %dec_label_pc_10001758, label %dec_label_pc_10001ab4

dec_label_pc_10001ab4:                            ; preds = %dec_label_pc_10001a9c
  %v0_10001ab4 = load i32, i32* @r30, align 4
  store i32 %v0_10001ab4, i32* @r3, align 4
  store i32 255, i32* @r4, align 4
  store i32 268442304, i32* @lr, align 4
  %v0_10001abc = call i32 @function_1000a1a8()
  store i32 %v0_10001abc, i32* %r3.global-to-local, align 4
  %v0_10001ac0 = load i32, i32* @r1, align 4
  %v1_10001ac0 = add i32 %v0_10001ac0, 8
  %v2_10001ac0 = inttoptr i32 %v1_10001ac0 to i32*
  %v3_10001ac0 = load i32, i32* %v2_10001ac0, align 4
  %v0_10001ac4 = load i32, i32* @r31, align 4
  %v2_10001ac4 = add i32 %v3_10001ac0, 1
  %v1_10001ac8 = add i32 %v2_10001ac4, %v0_10001ac4
  store i32 %v1_10001ac8, i32* %r3.global-to-local, align 4
  store i32 268442320, i32* @lr, align 4
  %v1_10001acc = inttoptr i32 %v1_10001ac8 to i8*
  %v2_10001acc = call i32 @function_1000a100(i8* %v1_10001acc)
  store i32 %v2_10001acc, i32* %r3.global-to-local, align 4
  %v1_10001ad0 = icmp slt i32 %v2_10001acc, 0
  %v2_10001ad0 = icmp sgt i32 %v2_10001acc, 0
  %v3_10001ad0 = icmp eq i32 %v2_10001acc, 0
  store i1 %v1_10001ad0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001ad0, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001ad0, i1* %cr7_eq.global-to-local, align 1
  %tmp90 = icmp slt i32 %v2_10001acc, 1
  br i1 %tmp90, label %dec_label_pc_10001758, label %dec_label_pc_10001ad8

dec_label_pc_10001ad8:                            ; preds = %dec_label_pc_10001ab4
  %v0_10001ad8 = load i32, i32* @r1, align 4
  %v1_10001ad8 = add i32 %v0_10001ad8, 8
  %v2_10001ad8 = inttoptr i32 %v1_10001ad8 to i32*
  %v3_10001ad8 = load i32, i32* %v2_10001ad8, align 4
  %v0_10001adc = load i32, i32* @r30, align 4
  store i32 %v0_10001adc, i32* @r3, align 4
  %v0_10001ae0 = load i32, i32* @r31, align 4
  %v2_10001ae0 = add i32 %v3_10001ad8, 1
  %v1_10001ae4 = add i32 %v2_10001ae0, %v0_10001ae0
  store i32 %v1_10001ae4, i32* %r4.global-to-local, align 4
  store i32 268442348, i32* %lr.global-to-local, align 4
  %v2_10001ae8 = inttoptr i32 %v0_10001adc to i8*
  %v3_10001ae8 = call i32 @function_1000a128(i8* %v2_10001ae8, i32 %v1_10001ae4)
  store i32 %v3_10001ae8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001758

dec_label_pc_10001af0:                            ; preds = %dec_label_pc_10001720
  store i32 7, i32* %r11.global-to-local, align 4
  %v1_10001af4 = load i32, i32* @r1, align 4
  %v2_10001af4 = add i32 %v1_10001af4, 8
  %v3_10001af4 = inttoptr i32 %v2_10001af4 to i32*
  store i32 7, i32* %v3_10001af4, align 4
  %v0_10001af8 = load i32, i32* @r31, align 4
  %v1_10001af8 = add i32 %v0_10001af8, 4
  %v2_10001af8 = inttoptr i32 %v1_10001af8 to i8*
  %v3_10001af8 = load i8, i8* %v2_10001af8, align 1
  %v4_10001af8 = zext i8 %v3_10001af8 to i32
  store i32 %v4_10001af8, i32* %r0.global-to-local, align 4
  %v1_10001afc = icmp ult i8 %v3_10001af8, 115
  %v2_10001afc = icmp ugt i8 %v3_10001af8, 115
  %v3_10001afc = icmp eq i8 %v3_10001af8, 115
  store i1 %v1_10001afc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001afc, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001afc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001afc, label %dec_label_pc_10001b04, label %dec_label_pc_10001b0c

dec_label_pc_10001b04:                            ; preds = %dec_label_pc_10001af0
  store i32 8, i32* %r11.global-to-local, align 4
  %v1_10001b08 = load i32, i32* @r1, align 4
  %v2_10001b08 = add i32 %v1_10001b08, 8
  %v3_10001b08 = inttoptr i32 %v2_10001b08 to i32*
  store i32 8, i32* %v3_10001b08, align 4
  %v0_10001b14.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10001b0c

dec_label_pc_10001b0c:                            ; preds = %dec_label_pc_10001af0, %dec_label_pc_10001b04
  %v0_10001b14 = phi i32 [ %v0_10001af8, %dec_label_pc_10001af0 ], [ %v0_10001b14.pre, %dec_label_pc_10001b04 ]
  %v0_10001b0c = load i32, i32* @r1, align 4
  %v1_10001b0c = add i32 %v0_10001b0c, 8
  %v2_10001b0c = inttoptr i32 %v1_10001b0c to i32*
  %v3_10001b0c = load i32, i32* %v2_10001b0c, align 4
  %v0_10001b10 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10001b14, i32* %r3.global-to-local, align 4
  %v1_10001b10 = sub i32 1, %v3_10001b0c
  %v2_10001b18 = add i32 %v1_10001b10, %v0_10001b10
  %v2_10001b1c = add i32 %v3_10001b0c, %v0_10001b14
  store i32 %v2_10001b1c, i32* %r4.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10001b24.49 to i32), i32* @lr, align 4
  %v3_10001b20 = call i32 @function_1000b188(i32 %v0_10001b14, i32 %v2_10001b1c, i32 %v2_10001b18)
  store i32 %v3_10001b20, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_10001b28 = load i32, i32* @r1, align 4
  %v2_10001b28 = add i32 %v1_10001b28, 8
  %v3_10001b28 = inttoptr i32 %v2_10001b28 to i32*
  store i32 0, i32* %v3_10001b28, align 4
  %v0_10001b2c = load i32, i32* @r28, align 4
  %v1_10001b2c = load i32, i32* %r29.global-to-local, align 4
  %v2_10001b2c = add i32 %v1_10001b2c, %v0_10001b2c
  %v3_10001b2c = inttoptr i32 %v2_10001b2c to i8*
  %v4_10001b2c = load i8, i8* %v3_10001b2c, align 1
  %v5_10001b2c = zext i8 %v4_10001b2c to i32
  store i32 %v5_10001b2c, i32* %r3.global-to-local, align 4
  %v2_10001b30 = icmp ne i8 %v4_10001b2c, 0
  %v3_10001b30 = icmp eq i8 %v4_10001b2c, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001b30, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001b30, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001b30, label %dec_label_pc_10001a70, label %dec_label_pc_10001b38

dec_label_pc_10001b38:                            ; preds = %dec_label_pc_10001b0c
  %v1_10001b38 = icmp ult i8 %v4_10001b2c, 47
  %v2_10001b38 = icmp ugt i8 %v4_10001b2c, 47
  %v3_10001b38 = icmp eq i8 %v4_10001b2c, 47
  store i1 %v1_10001b38, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001b38, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001b38, i1* %cr7_eq.global-to-local, align 1
  %v0_10001b3c = load i32, i32* @r31, align 4
  store i32 %v0_10001b3c, i32* %r11.global-to-local, align 4
  br i1 %v3_10001b38, label %dec_label_pc_10001a68, label %dec_label_pc_10001b44

dec_label_pc_10001b44:                            ; preds = %dec_label_pc_10001b38
  store i32 1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10001b58

dec_label_pc_10001b4c:                            ; preds = %dec_label_pc_10001b58
  %v1_10001b4c = icmp ult i8 %v4_10001b60, 47
  %v2_10001b4c = icmp ugt i8 %v4_10001b60, 47
  %v3_10001b4c = icmp eq i8 %v4_10001b60, 47
  store i1 %v1_10001b4c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001b4c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001b4c, i1* %cr7_eq.global-to-local, align 1
  %v1_10001b50 = add i32 %v1_10001b5c, 1
  store i32 %v1_10001b50, i32* %r9.global-to-local, align 4
  br i1 %v3_10001b4c, label %dec_label_pc_10001a68, label %dec_label_pc_10001b58

dec_label_pc_10001b58:                            ; preds = %dec_label_pc_10001b4c, %dec_label_pc_10001b44
  %v0_10001b58 = phi i32 [ %v1_10001b50, %dec_label_pc_10001b4c ], [ 1, %dec_label_pc_10001b44 ]
  %v1_10001b58 = load i32, i32* @r1, align 4
  %v2_10001b58 = add i32 %v1_10001b58, 8
  %v3_10001b58 = inttoptr i32 %v2_10001b58 to i32*
  store i32 %v0_10001b58, i32* %v3_10001b58, align 4
  %v0_10001b5c = load i32, i32* @r31, align 4
  %v1_10001b5c = load i32, i32* %r9.global-to-local, align 4
  %v2_10001b5c = add i32 %v1_10001b5c, %v0_10001b5c
  store i32 %v2_10001b5c, i32* %r11.global-to-local, align 4
  %v3_10001b60 = inttoptr i32 %v2_10001b5c to i8*
  %v4_10001b60 = load i8, i8* %v3_10001b60, align 1
  %v5_10001b60 = zext i8 %v4_10001b60 to i32
  store i32 %v5_10001b60, i32* %r0.global-to-local, align 4
  %v2_10001b64 = icmp ne i8 %v4_10001b60, 0
  %v3_10001b64 = icmp eq i8 %v4_10001b60, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001b64, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001b64, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001b64, label %dec_label_pc_10001a70, label %dec_label_pc_10001b4c

dec_label_pc_10001b70:                            ; preds = %dec_label_pc_100014d0
  %v0_10001b70 = load i32, i32* %r29.global-to-local, align 4
  %v1_10001b70 = trunc i32 %v0_10001b70 to i8
  %v2_10001b70 = load i32, i32* @r30, align 4
  %v3_10001b70 = add i32 %v2_10001b70, -529
  %v4_10001b70 = inttoptr i32 %v3_10001b70 to i8*
  store i8 %v1_10001b70, i8* %v4_10001b70, align 1
  br label %dec_label_pc_10000824

dec_label_pc_10001b78:                            ; preds = %dec_label_pc_10001934
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10001b7c = load i32, i32* @r30, align 4
  %v3_10001b7c = add i32 %v2_10001b7c, -529
  %v4_10001b7c = inttoptr i32 %v3_10001b7c to i8*
  store i8 1, i8* %v4_10001b7c, align 1
  br label %dec_label_pc_100017bc

dec_label_pc_10001b84:                            ; preds = %dec_label_pc_10001660
  %v1_10001b84 = add i32 %v1_10001674, 1
  store i32 %v1_10001b84, i32* %r11.global-to-local, align 4
  %v1_10001b88 = load i32, i32* @r1, align 4
  %v2_10001b88 = add i32 %v1_10001b88, 8
  %v3_10001b88 = inttoptr i32 %v2_10001b88 to i32*
  store i32 %v1_10001b84, i32* %v3_10001b88, align 4
  %v0_10001680.pre = load i32, i32* @r28, align 4
  %v1_10001680.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10001680

dec_label_pc_10001b90:                            ; preds = %dec_label_pc_10001948
  %v0_10001b90 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10001b90, i32* %r3.global-to-local, align 4
  store i32 268442520, i32* @lr, align 4
  %v1_10001b94 = inttoptr i32 %v0_10001b90 to i8*
  %v2_10001b94 = call i32 @function_1000a100(i8* %v1_10001b94)
  store i32 %v2_10001b94, i32* %r3.global-to-local, align 4
  %v1_10001b98 = icmp slt i32 %v2_10001b94, 127
  %v2_10001b98 = icmp sgt i32 %v2_10001b94, 127
  %v3_10001b98 = icmp eq i32 %v2_10001b94, 127
  store i1 %v1_10001b98, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001b98, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001b98, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10001b98, label %dec_label_pc_100019ac, label %dec_label_pc_10001ba0

dec_label_pc_10001ba0:                            ; preds = %dec_label_pc_10001b90
  %v0_10001ba0 = load i32, i32* @r30, align 4
  %v1_10001ba0 = add i32 %v0_10001ba0, 935
  %v2_10001ba0 = inttoptr i32 %v1_10001ba0 to i32*
  %v3_10001ba0 = load i32, i32* %v2_10001ba0, align 4
  store i32 %v3_10001ba0, i32* %r3.global-to-local, align 4
  %v0_10001ba4 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10001ba4, i32* %r4.global-to-local, align 4
  %v0_10001ba8 = load i32, i32* @r1, align 4
  %v1_10001ba8 = add i32 %v0_10001ba8, 20808
  %v2_10001ba8 = inttoptr i32 %v1_10001ba8 to i32*
  %v3_10001ba8 = load i32, i32* %v2_10001ba8, align 4
  store i32 %v3_10001ba8, i32* %r0.global-to-local, align 4
  %v0_10001bac = load i32, i32* %r28.global-to-local, align 4
  %v1_10001bac = add i32 %v0_10001bac, 3
  store i32 %v1_10001bac, i32* %r28.global-to-local, align 4
  %v1_10001bb0 = mul i32 %v3_10001ba0, 128
  %v0_10001bb4 = load i32, i32* %r27.global-to-local, align 4
  %v2_10001bb4 = add i32 %v0_10001bb4, %v1_10001bac
  store i32 %v2_10001bb4, i32* %r27.global-to-local, align 4
  %v2_10001bb8 = add i32 %v3_10001ba8, %v1_10001bb0
  store i32 %v2_10001bb8, i32* @r3, align 4
  store i32 268442560, i32* %lr.global-to-local, align 4
  %v2_10001bbc = inttoptr i32 %v2_10001bb8 to i8*
  %v3_10001bbc = call i32 @function_1000a128(i8* %v2_10001bbc, i32 %v0_10001ba4)
  store i32 %v3_10001bbc, i32* %r3.global-to-local, align 4
  %v0_10001bc0 = load i32, i32* @r30, align 4
  %v1_10001bc0 = add i32 %v0_10001bc0, 935
  %v2_10001bc0 = inttoptr i32 %v1_10001bc0 to i32*
  %v3_10001bc0 = load i32, i32* %v2_10001bc0, align 4
  store i32 %v3_10001bc0, i32* %r29.global-to-local, align 4
  %v0_10001bc4 = load i32, i32* @r1, align 4
  %v1_10001bc4 = add i32 %v0_10001bc4, 20808
  %v2_10001bc4 = inttoptr i32 %v1_10001bc4 to i32*
  %v3_10001bc4 = load i32, i32* %v2_10001bc4, align 4
  store i32 %v3_10001bc4, i32* %r0.global-to-local, align 4
  %v1_10001bc8 = mul i32 %v3_10001bc0, 128
  %v2_10001bcc = add i32 %v3_10001bc4, %v1_10001bc8
  store i32 %v2_10001bcc, i32* %r29.global-to-local, align 4
  store i32 %v2_10001bcc, i32* %r3.global-to-local, align 4
  store i32 268442584, i32* @lr, align 4
  %v1_10001bd4 = inttoptr i32 %v2_10001bcc to i8*
  %v2_10001bd4 = call i32 @function_1000a100(i8* %v1_10001bd4)
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000d41c.50 to i32), i32* %r4.global-to-local, align 4
  %v0_10001be0 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001be0 = add i32 %v0_10001be0, %v2_10001bd4
  store i32 %v2_10001be0, i32* @r3, align 4
  store i32 268442600, i32* %lr.global-to-local, align 4
  %v2_10001be4 = inttoptr i32 %v2_10001be0 to i8*
  %v3_10001be4 = call i32 @function_1000a128(i8* %v2_10001be4, i32 ptrtoint (i32* @global_var_1000d41c.50 to i32))
  store i32 %v3_10001be4, i32* %r3.global-to-local, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v0_10001bec = load i32, i32* @r30, align 4
  %v1_10001bec = add i32 %v0_10001bec, 1579
  %v2_10001bec = inttoptr i32 %v1_10001bec to i32*
  %v3_10001bec = load i32, i32* %v2_10001bec, align 4
  %v0_10001bf8 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10001bf8, i32* %r3.global-to-local, align 4
  %v0_10001bfc = load i32, i32* %r28.global-to-local, align 4
  %v2_10001bfc = sub i32 %v3_10001bec, %v0_10001bfc
  store i32 %v2_10001bfc, i32* %r4.global-to-local, align 4
  %v1_10001c00 = load i32, i32* %r23.global-to-local, align 4
  %v2_10001c00 = add i32 %v1_10001c00, %v0_10001bfc
  store i32 %v2_10001c00, i32* %r28.global-to-local, align 4
  store i32 268442632, i32* %lr.global-to-local, align 4
  %v4_10001c04 = call i32 @function_1000a1cc(i32 %v0_10001bf8, i32 %v2_10001bfc, i32 ptrtoint (i32* @global_var_1000d418.47 to i32), i32 1)
  store i32 %v4_10001c04, i32* %r3.global-to-local, align 4
  %v0_10001c08 = load i32, i32* @r30, align 4
  %v1_10001c08 = add i32 %v0_10001c08, 935
  %v2_10001c08 = inttoptr i32 %v1_10001c08 to i32*
  %v3_10001c08 = load i32, i32* %v2_10001c08, align 4
  store i32 %v3_10001c08, i32* %r29.global-to-local, align 4
  %v0_10001c0c = load i32, i32* @r1, align 4
  %v1_10001c0c = add i32 %v0_10001c0c, 20808
  %v2_10001c0c = inttoptr i32 %v1_10001c0c to i32*
  %v3_10001c0c = load i32, i32* %v2_10001c0c, align 4
  store i32 %v3_10001c0c, i32* %r0.global-to-local, align 4
  %v0_10001c10 = load i32, i32* %r28.global-to-local, align 4
  %v2_10001c10 = add i32 %v0_10001c10, %v4_10001c04
  %v1_10001c14 = mul i32 %v3_10001c08, 128
  %v1_10001c18 = add i32 %v2_10001c10, 2111
  store i32 %v1_10001c18, i32* %r28.global-to-local, align 4
  %v2_10001c1c = add i32 %v3_10001c0c, %v1_10001c14
  store i32 %v2_10001c1c, i32* %r29.global-to-local, align 4
  %v0_10001c20 = load i32, i32* %r26.global-to-local, align 4
  %v1_10001c20 = trunc i32 %v0_10001c20 to i8
  %v3_10001c20 = add i32 %v2_10001c10, 2115
  %v4_10001c20 = inttoptr i32 %v3_10001c20 to i8*
  store i8 %v1_10001c20, i8* %v4_10001c20, align 1
  %v0_10001c24 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10001c24, i32* %r3.global-to-local, align 4
  store i32 268442668, i32* @lr, align 4
  %v1_10001c28 = inttoptr i32 %v0_10001c24 to i8*
  %v2_10001c28 = call i32 @function_1000a100(i8* %v1_10001c28)
  %v0_10001c2c = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10001c2c, i32* %r4.global-to-local, align 4
  %v0_10001c30 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001c30 = add i32 %v0_10001c30, %v2_10001c28
  store i32 %v2_10001c30, i32* @r3, align 4
  store i32 268442680, i32* %lr.global-to-local, align 4
  %v2_10001c34 = inttoptr i32 %v2_10001c30 to i8*
  %v3_10001c34 = call i32 @function_1000a128(i8* %v2_10001c34, i32 %v0_10001c2c)
  store i32 %v3_10001c34, i32* %r3.global-to-local, align 4
  %v0_10001c38 = load i32, i32* @r30, align 4
  %v1_10001c38 = add i32 %v0_10001c38, 935
  %v2_10001c38 = inttoptr i32 %v1_10001c38 to i32*
  %v3_10001c38 = load i32, i32* %v2_10001c38, align 4
  %v1_10001c3c = add i32 %v3_10001c38, 1
  store i32 %v1_10001c3c, i32* %r9.global-to-local, align 4
  store i32 %v1_10001c3c, i32* %v2_10001c38, align 4
  br label %dec_label_pc_100019ac

dec_label_pc_10001c70:                            ; preds = %dec_label_pc_10000578
  %v0_10001c70 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10001c70, i32* @r3, align 4
  %v0_10001c74 = load i32, i32* %r28.global-to-local, align 4
  %v1_10001c74 = add i32 %v0_10001c74, 1
  store i32 %v1_10001c74, i32* %r28.global-to-local, align 4
  %v0_10001c78 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10001c78, i32* %r4.global-to-local, align 4
  %v0_10001c7c = load i32, i32* @r31, align 4
  %v1_10001c7c = add i32 %v0_10001c7c, 3140
  store i32 %v1_10001c7c, i32* @r31, align 4
  store i32 268442756, i32* %lr.global-to-local, align 4
  %v2_10001c80 = inttoptr i32 %v0_10001c70 to i8*
  %v3_10001c80 = call i32 @function_1000a128(i8* %v2_10001c80, i32 %v0_10001c78)
  store i32 %v3_10001c80, i32* %r3.global-to-local, align 4
  %v0_10001c84 = load i32, i32* %r21.global-to-local, align 4
  %v1_10001c84 = load i32, i32* %r28.global-to-local, align 4
  %v2_10001c84 = icmp slt i32 %v0_10001c84, %v1_10001c84
  %v3_10001c84 = icmp sgt i32 %v0_10001c84, %v1_10001c84
  %v4_10001c84 = icmp eq i32 %v0_10001c84, %v1_10001c84
  store i1 %v2_10001c84, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001c84, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_10001c84, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10001c84, label %dec_label_pc_10001c8c, label %dec_label_pc_10001c70.dec_label_pc_100004c8_crit_edge

dec_label_pc_10001c70.dec_label_pc_100004c8_crit_edge: ; preds = %dec_label_pc_10001c70
  %v2_100004d4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100004c8

dec_label_pc_10001c8c:                            ; preds = %dec_label_pc_10001c70
  %v0_10001c8c = load i32, i32* @r1, align 4
  %v1_10001c8c = add i32 %v0_10001c8c, 20804
  %v2_10001c8c = inttoptr i32 %v1_10001c8c to i32*
  %v3_10001c8c = load i32, i32* %v2_10001c8c, align 4
  store i32 %v3_10001c8c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_100005c4.preheader

; uselistorder directives
  uselistorder i32 %v3_10001c8c, { 1, 0 }
  uselistorder i32 %v0_10001c8c, { 1, 0 }
  uselistorder i32 %v1_10001c84, { 1, 2, 3, 0 }
  uselistorder i32 %v2_10001b94, { 2, 1, 0, 3 }
  uselistorder i8 %v4_10001b60, { 3, 4, 5, 2, 1, 0 }
  uselistorder i32 %v2_10001b5c, { 1, 2, 0 }
  uselistorder i1 %v3_10001b4c, { 1, 0 }
  uselistorder i32 %v0_10001b3c, { 1, 0 }
  uselistorder i1 %v3_10001b38, { 1, 0 }
  uselistorder i32 %v3_10001b0c, { 1, 0 }
  uselistorder i32 %v0_10001b14, { 2, 0, 1 }
  uselistorder i32 %v2_10001acc, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v2_10001aa8, { 2, 1, 0, 3 }
  uselistorder i32 %v2_10001a84, { 2, 1, 0, 3 }
  uselistorder i32 %v2_10001a74, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v2_10001a4c, { 2, 1, 0, 3 }
  uselistorder i32 %v2_10001a34, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v1_100019dc, { 1, 0, 2 }
  uselistorder i32 %v0_100019d0, { 1, 0 }
  uselistorder i32 %v3_10001994, { 2, 1, 0, 3 }
  uselistorder i32 %v2_10001978, { 1, 0, 2 }
  uselistorder i32 %v4_1000196c, { 2, 1, 0, 3 }
  uselistorder i32 %v4_10001928, { 2, 1, 0, 3 }
  uselistorder i32 %v2_100018cc, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v2_100018a8, { 2, 1, 0, 3 }
  uselistorder i32 %v2_10001884, { 2, 1, 0, 3 }
  uselistorder i32 %v2_10001874, { 0, 3, 2, 1, 4 }
  uselistorder i8 %v4_10001864, { 3, 4, 5, 2, 1, 0 }
  uselistorder i32 %v0_1000185c, { 0, 2, 1 }
  uselistorder i1 %v3_1000184c, { 1, 0 }
  uselistorder i1 %v3_10001838, { 1, 0 }
  uselistorder i32 %v0_10001814, { 2, 0, 1 }
  uselistorder i32 %v2_100017ec, { 2, 1, 0, 3 }
  uselistorder i32 %v4_100017a8, { 2, 1, 0, 3 }
  uselistorder i32 %v5_10001740, { 2, 1, 0, 3 }
  uselistorder i32 %v0_10001714, { 2, 1, 0, 3 }
  uselistorder i32 %v1_100016f0, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v1_100016d8, { 1, 0 }
  uselistorder i32 %v0_100016d8, { 1, 0 }
  uselistorder i32 %v3_100019cc, { 2, 0, 3, 1 }
  uselistorder i32 %v5_100016a0, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10001674, { 2, 1, 0 }
  uselistorder i32 %v0_10001674, { 1, 0 }
  uselistorder i32 %v0_10001658, { 1, 0 }
  uselistorder i32 %v1_10001648, { 4, 1, 2, 3, 0 }
  uselistorder i32 %v0_1000163c, { 0, 2, 1 }
  uselistorder i32 %v1_10001624, { 1, 2, 3, 0 }
  uselistorder i32 %v5_100015e4, { 0, 1, 5, 4, 3, 2, 6, 9, 8, 7, 10 }
  uselistorder i32 %v3_100015d0, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1000158c, { 2, 1, 0, 3 }
  uselistorder i32 %v2_1000154c, { 2, 1, 0, 3 }
  uselistorder i32 %v4_10001538, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v4_100014a8, { 2, 1, 0, 3 }
  uselistorder i32 %v5_10001488, { 1, 0 }
  uselistorder i32 %v5_1000146c, { 2, 1, 0, 3 }
  uselistorder i32 %v3_10001454, { 1, 0 }
  uselistorder i32 %v4_10001448, { 2, 1, 0, 3 }
  uselistorder i32 %v4_10001400, { 1, 2, 0 }
  uselistorder i32 %v0_100013d0, { 1, 0 }
  uselistorder i32 %v3_100013bc, { 2, 1, 0, 3 }
  uselistorder i32 %v3_1000139c, { 6, 5, 4, 7, 3, 0, 2, 1 }
  uselistorder i32* %v2_1000139c, { 1, 0 }
  uselistorder i32 %v0_1000139c, { 1, 0 }
  uselistorder i32 %v3_10001388, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v0_10001370, { 1, 2, 0 }
  uselistorder i32 %v0_10001364, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_10001354, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v3_1000145c, { 0, 2, 1 }
  uselistorder i32 %v3_10001344, { 2, 1, 0, 3 }
  uselistorder i32 %v0_1000133c, { 2, 1, 0 }
  uselistorder i32 %v1_10001308, { 0, 3, 2, 1 }
  uselistorder i32 %v3_100012a4, { 2, 1, 0, 3 }
  uselistorder i32 %v2_1000125c, { 2, 1, 0, 3 }
  uselistorder i32 %v1_1000124c, { 0, 2, 1 }
  uselistorder i32 %v4_1000123c, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10001214, { 1, 0, 4, 3, 2, 5 }
  uselistorder i32 %v3_10001210, { 2, 1, 0, 3 }
  uselistorder i32 %v5_100011cc, { 2, 1, 0, 3 }
  uselistorder i32 %v1_100011ac, { 1, 0 }
  uselistorder i32 %v5_1000118c, { 0, 1, 5, 4, 3, 2, 8, 7, 6, 9 }
  uselistorder i32 %v3_10001178, { 1, 0, 2, 3 }
  uselistorder i32 %v4_10001134, { 2, 1, 0, 3 }
  uselistorder i32 %v4_10001110, { 2, 1, 0, 3 }
  uselistorder i1 %v3_100010c0, { 0, 2, 1 }
  uselistorder i32 %v3_100010d8, { 0, 4, 3, 2, 5, 1 }
  uselistorder i32* %v2_100010d8, { 0, 2, 1 }
  uselistorder i32 %v2_100010d4, { 2, 1, 0, 3 }
  uselistorder i32 %v4_1000107c, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v5_10001044, { 2, 0, 5, 4, 3, 1, 8, 7, 6, 9 }
  uselistorder i32 %v0_10001010, { 0, 2, 1 }
  uselistorder i32 %v4_1000100c, { 2, 1, 0, 3 }
  uselistorder i32 %v3_10000fe8, { 2, 1, 0, 3 }
  uselistorder i32 %v4_10000fdc, { 2, 1, 0, 3 }
  uselistorder i32 %v5_10000f84, { 0, 1, 5, 4, 3, 2, 8, 7, 6, 9 }
  uselistorder i32 %v3_10000f70, { 1, 0, 2, 3 }
  uselistorder i32 %v4_10000f2c, { 2, 1, 0, 3 }
  uselistorder i32 %v4_10000f00, { 2, 1, 0, 3 }
  uselistorder i32 %v5_10000eb8, { 0, 1, 5, 4, 3, 2, 8, 7, 6, 9 }
  uselistorder i32 %v3_10000ea4, { 1, 0, 2, 3 }
  uselistorder i32 %v4_10000e60, { 2, 1, 0, 3 }
  uselistorder i32 %v4_10000e2c, { 2, 1, 0, 3 }
  uselistorder i32 %v5_10000de4, { 0, 1, 5, 4, 3, 2, 8, 7, 6, 9 }
  uselistorder i32 %v3_10000dd0, { 1, 0, 2, 3 }
  uselistorder i32 %v4_10000d8c, { 2, 1, 0, 3 }
  uselistorder i32 %v4_10000d58, { 2, 1, 0, 3 }
  uselistorder i32 %v4_10000d2c, { 2, 1, 0, 3 }
  uselistorder i32 %v0_100017d4, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32 %v5_10000ce8, { 2, 1, 0, 3 }
  uselistorder i32 %v4_10000cc4, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_10000c98, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v1_10000c84, { 1, 0 }
  uselistorder i32 %v1_10000c6c, { 1, 0 }
  uselistorder i32 %v2_10000c5c, { 1, 0, 4, 3, 2, 5 }
  uselistorder i32 %v1_10000c54, { 1, 0 }
  uselistorder i32 %v1_10000c34, { 1, 0 }
  uselistorder i32 %v2_10000c20, { 1, 0, 3, 4, 5, 2 }
  uselistorder i32 %v3_10000bf4, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10000b90, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v3_10000b8c, { 2, 1, 0, 3 }
  uselistorder i32 %v3_10000b3c, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v3_10000b18, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v3_1000089c, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10000870, { 1, 0 }
  uselistorder i32 %v1_10000858, { 2, 1, 0 }
  uselistorder i32 %v1_10000848, { 1, 0 }
  uselistorder i32 %v3_10000838, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v1_10000824, { 2, 1, 0, 3 }
  uselistorder i1 %v3_1000081c, { 1, 0 }
  uselistorder i1 %v3_10000814, { 1, 0 }
  uselistorder i32 %v1_10000800, { 1, 0 }
  uselistorder i32 %v1_100007f0, { 1, 0 }
  uselistorder i32 %v0_100007b4, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v1_10000788, { 1, 0 }
  uselistorder i32 %v1_10000784, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10000768, { 1, 0 }
  uselistorder i32 %v2_10000758, { 1, 0, 4, 3, 2, 5 }
  uselistorder i32 %v3_100006cc, { 1, 0, 4, 3, 2, 5 }
  uselistorder i8 %v3_10000688, { 14, 15, 16, 17, 18, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* %v2_10000688, { 0, 1, 3, 2 }
  uselistorder i32 %v2_10000c8c, { 5, 6, 2, 3, 0, 1, 7, 4 }
  uselistorder i32 %v1_10000678, { 2, 1, 0, 3 }
  uselistorder i1 %v3_10000660, { 1, 0 }
  uselistorder i1 %v3_10000658, { 1, 0 }
  uselistorder i1 %v3_10000650, { 1, 0 }
  uselistorder i1 %v3_10000648, { 1, 0 }
  uselistorder i1 %v3_10000640, { 1, 0 }
  uselistorder i32 %v1_1000060c, { 1, 0 }
  uselistorder i32 %v1_100005ec, { 1, 0 }
  uselistorder i32 %v1_100005a0, { 1, 0 }
  uselistorder i32 %v3_10000590, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v0_10000440., { 1, 2, 0 }
  uselistorder i32 %v1_10000418, { 1, 2, 3, 0 }
  uselistorder i32 %v3_10000404, { 1, 0, 4, 3, 2, 5 }
  uselistorder i32 %v2_10000400, { 2, 1, 0, 3 }
  uselistorder i32 %v2_100003e8, { 2, 1, 0, 3 }
  uselistorder i32 %v2_100003d8, { 2, 1, 0, 3 }
  uselistorder i32 %v0_1000038c, { 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 14, 15 }
  uselistorder i32 %v2_10000368, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v0_1000035c, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_10000238, { 1, 0 }
  uselistorder i32 %v2_10000214, { 2, 1, 4, 3, 6, 5, 8, 7, 10, 9, 0, 11, 12 }
  uselistorder i32 %v1_100001f4, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 72, 73, 74, 76, 75, 77, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 68, 69, 70, 71, 45, 46, 47, 48, 51, 52, 49, 50, 53, 54, 55, 56, 57, 59, 58, 1, 61, 60, 0, 62, 63, 64, 65, 66, 67 }
  uselistorder i32* %r4.global-to-local, { 0, 139, 140, 141, 142, 144, 145, 143, 1, 3, 2, 4, 5, 6, 8, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 59, 61, 62, 63, 64, 66, 65, 67, 68, 69, 70, 71, 73, 72, 74, 75, 76, 77, 78, 80, 79, 82, 81, 84, 83, 85, 86, 87, 131, 132, 133, 134, 135, 136, 137, 138, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 119, 121, 122, 123, 124, 125, 127, 126, 129, 128, 130, 146 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26 }
  uselistorder i32* %r30.global-to-local, { 3, 5, 22, 23, 24, 25, 26, 6, 7, 8, 9, 10, 13, 11, 12, 2, 0, 14, 4, 15, 16, 17, 18, 19, 1, 20, 21, 27, 28, 29, 30, 31 }
  uselistorder i32* %r3.global-to-local, { 10, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 307, 5, 308, 309, 7, 310, 311, 6, 312, 302, 303, 304, 305, 306, 313, 314, 315, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 48, 9, 8, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 1, 170, 171, 172, 173, 174, 175, 176, 177, 3, 277, 278, 4, 279, 280, 281, 282, 283, 285, 284, 286, 287, 288, 289, 290, 291, 178, 179, 181, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 232, 234, 235, 236, 237, 238, 239, 240, 241, 2, 242, 243, 244, 245, 246, 247, 249, 248, 250, 252, 251, 253, 254, 255, 256, 257, 259, 258, 260, 261, 262, 263, 264, 265, 268, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 316, 317, 0 }
  uselistorder i32* %r29.global-to-local, { 94, 95, 96, 97, 98, 99, 100, 27, 15, 35, 47, 36, 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 37, 38, 39, 40, 41, 44, 42, 43, 45, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 83, 29, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 51, 46, 48, 49, 50, 52, 54, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 92, 93, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 80, 82, 84, 85, 86, 87, 88, 89, 90, 91 }
  uselistorder i32* %r28.global-to-local, { 0, 1, 31, 41, 42, 43, 44, 45, 2, 3, 8, 4, 5, 6, 7, 23, 24, 25, 11, 12, 13, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26, 28, 27, 29, 30, 32, 33, 34, 36, 37, 35, 39, 38, 40 }
  uselistorder i32* %r27.global-to-local, { 25, 30, 29, 31, 15, 1, 4, 5, 0, 2, 20, 6, 8, 7, 9, 10, 11, 12, 3, 13, 14, 16, 17, 18, 19, 22, 21, 23, 26, 24, 27, 28 }
  uselistorder i32* %r26.global-to-local, { 1, 3, 0, 2, 4, 5, 6, 7, 9, 8, 12, 10, 11, 13, 14, 18, 15, 19, 16, 20, 17, 21, 23, 24, 22, 25, 26 }
  uselistorder i32* %r25.global-to-local, { 1, 2, 3, 0, 4, 5, 6, 7, 8, 9, 10, 13, 12, 15, 14, 16, 11, 17 }
  uselistorder i32* %r24.global-to-local, { 35, 3, 5, 6, 7, 8, 0, 1, 2, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 4, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39 }
  uselistorder i32* %r23.global-to-local, { 13, 14, 2, 3, 4, 5, 6, 1, 7, 8, 9, 10, 11, 16, 17, 0, 12, 15, 18, 19, 21, 22, 20, 23 }
  uselistorder i32* %r22.global-to-local, { 45, 44, 46, 47, 48, 1, 49, 53, 50, 52, 51, 0, 54, 3, 2, 6, 4, 5, 7, 9, 8, 11, 10, 13, 12, 14, 15, 17, 16, 19, 18, 21, 20, 23, 22, 25, 24, 27, 26, 29, 28, 31, 30, 33, 32, 35, 34, 37, 36, 39, 38, 41, 40, 43, 42, 55, 57, 56, 58 }
  uselistorder i32* %r21.global-to-local, { 4, 0, 1, 2, 3, 5, 6 }
  uselistorder i32* %r20.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 0, 31, 32 }
  uselistorder i32* %r19.global-to-local, { 3, 0, 1, 2, 4, 5, 6, 7 }
  uselistorder i32* %r18.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 15, 17, 18, 19, 20 }
  uselistorder i32* %r15.global-to-local, { 2, 3, 4, 0, 1 }
  uselistorder i32* %r14.global-to-local, { 2, 3, 4, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 45, 46, 47, 48, 49, 50, 51, 52, 3, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 43, 44, 30, 29, 31, 32, 33, 34, 1, 35, 0, 36, 37, 38, 39, 40, 41, 42 }
  uselistorder i32* %r0.global-to-local, { 0, 110, 111, 112, 113, 114, 116, 115, 1, 2, 5, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 41, 42, 44, 45, 46, 48, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 108, 109, 71, 73, 72, 74, 77, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 117, 118 }
  uselistorder i32* %lr.global-to-local, { 0, 107, 108, 109, 110, 112, 111, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 100, 101, 102, 103, 104, 105, 106, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 113, 114 }
  uselistorder i32* %ctr.global-to-local, { 3, 2, 1, 4, 5, 7, 6, 0, 8, 9, 10 }
  uselistorder i1* %cr7_lt.global-to-local, { 1, 120, 122, 121, 123, 126, 127, 128, 129, 124, 125, 130, 131, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 47, 41, 42, 43, 44, 45, 46, 48, 49, 50, 52, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 117, 118, 119, 85, 86, 91, 90, 87, 88, 89, 92, 93, 94, 95, 96, 97, 104, 105, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116 }
  uselistorder i1* %cr7_gt.global-to-local, { 1, 120, 122, 121, 123, 126, 127, 128, 129, 124, 125, 130, 131, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 46, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 117, 118, 119, 85, 86, 91, 90, 87, 88, 89, 92, 93, 94, 95, 96, 97, 104, 105, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116 }
  uselistorder i1* %cr7_eq.global-to-local, { 1, 122, 124, 123, 125, 128, 129, 130, 131, 126, 127, 132, 133, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 48, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 53, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 119, 120, 121, 87, 88, 93, 92, 89, 90, 91, 94, 95, 96, 97, 98, 99, 106, 107, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118 }
  uselistorder i1* %cr3_eq.global-to-local, { 1, 0, 2 }
  uselistorder i32 268441368, { 1, 0 }
  uselistorder i8 34, { 3, 4, 5, 0, 1, 2, 6, 7, 8 }
  uselistorder i32 1579, { 0, 1, 2, 3, 5, 6, 7, 8, 9, 4, 10, 11, 12, 13 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1000d400.40 to i32), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1000d3fc.39 to i32), { 1, 0, 2 }
  uselistorder i32 931, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 (i32, i32, i32, i32)* @function_1000a1cc, { 0, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 35, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 10240, { 2, 0, 1, 3, 4 }
  uselistorder i8 7, { 6, 7, 8, 9, 0, 1, 2, 3, 4, 5 }
  uselistorder i32 ptrtoint ([3 x i8]* @global_var_1000d3d0.24 to i32), { 0, 8, 1, 2, 3, 4, 5, 6, 9, 7, 10, 11 }
  uselistorder i32 3140, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i32 43, { 0, 2, 1, 3 }
  uselistorder i32 37, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_1000d3dc.7 to i32), { 1, 2, 0 }
  uselistorder i32 268435604, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_10001b0c, { 1, 0 }
  uselistorder label %dec_label_pc_10001a9c, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_100019dc, { 1, 0 }
  uselistorder label %dec_label_pc_100019ac, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000189c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10001870, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10001810, { 1, 0 }
  uselistorder label %dec_label_pc_100017bc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10001758, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_10001708, { 1, 0 }
  uselistorder label %dec_label_pc_100016e4, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_10001680, { 1, 0 }
  uselistorder label %dec_label_pc_10001658, { 1, 0 }
  uselistorder label %dec_label_pc_10001600, { 1, 0 }
  uselistorder label %dec_label_pc_10001558, { 1, 0 }
  uselistorder label %dec_label_pc_100014d0, { 1, 0 }
  uselistorder label %dec_label_pc_10001364, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1000133c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100011f0, { 1, 0 }
  uselistorder label %dec_label_pc_100011e4, { 5, 6, 1, 7, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_100011a4, { 1, 0 }
  uselistorder label %dec_label_pc_100010f0, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_100010d0, { 1, 0 }
  uselistorder label %dec_label_pc_100010a0, { 1, 0 }
  uselistorder label %dec_label_pc_10001064, { 1, 0 }
  uselistorder label %dec_label_pc_10001024, { 1, 0 }
  uselistorder label %dec_label_pc_10000fe8, { 1, 0 }
  uselistorder label %dec_label_pc_10000fbc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10000f9c, { 1, 0 }
  uselistorder label %dec_label_pc_10000f14, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10000ed0, { 1, 0 }
  uselistorder label %dec_label_pc_10000e40, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10000dfc, { 1, 0 }
  uselistorder label %dec_label_pc_10000d6c, { 1, 0 }
  uselistorder label %dec_label_pc_10000d40, { 1, 0 }
  uselistorder label %dec_label_pc_10000cf4, { 1, 0 }
  uselistorder label %dec_label_pc_10000c00, { 1, 0 }
  uselistorder label %dec_label_pc_10000be8, { 1, 0 }
  uselistorder label %dec_label_pc_10000bb8, { 1, 0 }
  uselistorder label %dec_label_pc_10000b50, { 1, 0 }
  uselistorder label %dec_label_pc_10000b18, { 1, 0 }
  uselistorder label %dec_label_pc_100008b0, { 1, 0 }
  uselistorder label %dec_label_pc_10000824, { 15, 7, 2, 8, 0, 3, 9, 10, 11, 12, 13, 1, 14, 6, 4, 5 }
  uselistorder label %dec_label_pc_100007ec, { 1, 0 }
  uselistorder label %dec_label_pc_100006c0, { 1, 0 }
  uselistorder label %dec_label_pc_1000069c, { 1, 0 }
  uselistorder label %dec_label_pc_10000678, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_10000600.dec_label_pc_10000600_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_100005e0.dec_label_pc_100005e0_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_100005c4, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_100005c4.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_100005b4, { 1, 0 }
  uselistorder label %dec_label_pc_10000578, { 1, 0 }
  uselistorder label %dec_label_pc_10000530, { 1, 0 }
  uselistorder label %dec_label_pc_10000430, { 1, 0 }
}

define i32 @function_10001d50(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10001d50:
  %ctr.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %ctr.global-to-local, align 4
  %v0_10001d5c = load i32, i32* @lr, align 4
  %tmp4 = icmp slt i32 %arg1, 1
  call void @__pseudo_cond_branch(i1 %tmp4, i32 %v0_10001d5c)
  %v1_10001d60 = add i32 %tmp, 4
  %v2_10001d60 = inttoptr i32 %v1_10001d60 to i8*
  %v3_10001d60 = load i8, i8* %v2_10001d60, align 1
  %v4_10001d60 = zext i8 %v3_10001d60 to i32
  %v4_10001d68 = icmp eq i32 %v4_10001d60, %arg3
  br i1 %v4_10001d68, label %dec_label_pc_10001d90, label %dec_label_pc_10001d84.preheader

dec_label_pc_10001d84.preheader:                  ; preds = %dec_label_pc_10001d50
  %v0_10001d88.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10001d84

dec_label_pc_10001d74:                            ; preds = %dec_label_pc_10001d84
  %v1_10001d74 = add i32 %v0_10001d74.in, 12
  %v2_10001d74 = inttoptr i32 %v1_10001d74 to i8*
  %v3_10001d74 = load i8, i8* %v2_10001d74, align 1
  %v4_10001d74 = zext i8 %v3_10001d74 to i32
  %v4_10001d7c = icmp eq i32 %v4_10001d74, %arg3
  br i1 %v4_10001d7c, label %dec_label_pc_10001d90, label %dec_label_pc_10001d84

dec_label_pc_10001d84:                            ; preds = %dec_label_pc_10001d84.preheader, %dec_label_pc_10001d74
  %v0_10001d88 = phi i32 [ %v0_10001d88.pre, %dec_label_pc_10001d84.preheader ], [ %v1_10001d88, %dec_label_pc_10001d74 ]
  %v0_10001d74.in = phi i32 [ %tmp, %dec_label_pc_10001d84.preheader ], [ %v0_10001d74, %dec_label_pc_10001d74 ]
  %v0_10001d74 = add i32 %v0_10001d74.in, 8
  %v1_10001d88 = add i32 %v0_10001d88, -1
  store i32 %v1_10001d88, i32* %ctr.global-to-local, align 4
  %v2_10001d88 = icmp eq i32 %v1_10001d88, 0
  br i1 %v2_10001d88, label %dec_label_pc_10001d8c, label %dec_label_pc_10001d74

dec_label_pc_10001d8c:                            ; preds = %dec_label_pc_10001d84
  ret i32 %arg4

dec_label_pc_10001d90:                            ; preds = %dec_label_pc_10001d74, %dec_label_pc_10001d50
  %v0_10001d90 = phi i32 [ %tmp, %dec_label_pc_10001d50 ], [ %v0_10001d74, %dec_label_pc_10001d74 ]
  %v1_10001d90 = inttoptr i32 %v0_10001d90 to i32*
  %v2_10001d90 = load i32, i32* %v1_10001d90, align 4
  ret i32 %v2_10001d90

; uselistorder directives
  uselistorder i32 %v1_10001d88, { 2, 1, 0 }
  uselistorder i32 %v0_10001d74.in, { 1, 0 }
  uselistorder i32 %tmp, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10001d84, { 1, 0 }
}

define i32 @function_10001d98(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_10001d98:
  store i32 %arg4, i32* @r28, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 %arg2, i32* @r30, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 268443096, i32* @lr, align 4
  %v0_10001dd4 = call i32 @function_1000a9d4()
  %v3_10001dd8 = icmp eq i32 %v0_10001dd4, -1
  br i1 %v3_10001dd8, label %dec_label_pc_10001de8, label %dec_label_pc_10001de0

dec_label_pc_10001de0:                            ; preds = %dec_label_pc_10001d98
  %tmp14 = icmp slt i32 %v0_10001dd4, 1
  br i1 %tmp14, label %dec_label_pc_10001e10, label %dec_label_pc_10001de8

dec_label_pc_10001de8:                            ; preds = %dec_label_pc_10001de0, %dec_label_pc_10001d98
  ret i32 %v0_10001dd4

dec_label_pc_10001e10:                            ; preds = %dec_label_pc_10001de0
  store i32 268443156, i32* @lr, align 4
  %v0_10001e10 = call i32 @function_1000a9d4()
  %v3_10001e14 = icmp eq i32 %v0_10001e10, -1
  br i1 %v3_10001e14, label %dec_label_pc_10001e38, label %dec_label_pc_10001e1c

dec_label_pc_10001e1c:                            ; preds = %dec_label_pc_10001e10
  %v3_10001e1c = icmp eq i32 %v0_10001e10, 0
  br i1 %v3_10001e1c, label %dec_label_pc_10001e24, label %dec_label_pc_10001e40

dec_label_pc_10001e24:                            ; preds = %dec_label_pc_10001e1c
  %v0_10001e24 = load i32, i32* @r31, align 4
  store i32 ptrtoint (i32* @global_var_10001e2c.56 to i32), i32* @lr, align 4
  %v1_10001e28 = call i32 @function_1000c280(i32 %v0_10001e24)
  store i32 268443184, i32* @lr, align 4
  %v0_10001e2c = call i32 @function_1000aa64()
  store i32 ptrtoint ([3 x i8]* @global_var_10001e38.57 to i32), i32* @lr, align 4
  %v2_10001e34 = call i32 @function_1000aaac(i32 %v0_10001e2c, i32 9)
  br label %dec_label_pc_10001e38

dec_label_pc_10001e38:                            ; preds = %dec_label_pc_10001e70, %dec_label_pc_10001e40, %dec_label_pc_10001e10, %dec_label_pc_10001e8c, %dec_label_pc_10001e24
  %v0_10001e3c = call i32 @function_1000c1fc()
  br label %dec_label_pc_10001e40

dec_label_pc_10001e40:                            ; preds = %dec_label_pc_10001e1c, %dec_label_pc_10001e38
  %v3_10001e44 = load i8, i8* @global_var_1001e184.58, align 1
  %v3_10001e48 = icmp eq i8 %v3_10001e44, 0
  br i1 %v3_10001e48, label %dec_label_pc_10001e38, label %dec_label_pc_10001e50

dec_label_pc_10001e50:                            ; preds = %dec_label_pc_10001e40
  %v4_10001e44 = zext i8 %v3_10001e44 to i32
  %v3_10001e58 = load i32, i32* @global_var_1001e188.59, align 4
  %v1_10001e60 = inttoptr i32 %v3_10001e58 to i32*
  %v2_10001e60 = load i32, i32* %v1_10001e60, align 4
  %v1_10001e64 = add i32 %v2_10001e60, 4
  %v2_10001e64 = inttoptr i32 %v1_10001e64 to i8*
  %v3_10001e64 = load i8, i8* %v2_10001e64, align 1
  %v4_10001e64 = zext i8 %v3_10001e64 to i32
  %v1_10001e68 = load i32, i32* @r30, align 4
  %v4_10001e68 = icmp eq i32 %v4_10001e64, %v1_10001e68
  br i1 %v4_10001e68, label %dec_label_pc_10001e8c, label %dec_label_pc_10001e70

dec_label_pc_10001e70:                            ; preds = %dec_label_pc_10001e50, %dec_label_pc_10001e78
  %v0_10001e74 = phi i32 [ %v1_10001e74, %dec_label_pc_10001e78 ], [ %v4_10001e44, %dec_label_pc_10001e50 ]
  %v0_10001e70 = phi i32 [ %v1_10001e70, %dec_label_pc_10001e78 ], [ 0, %dec_label_pc_10001e50 ]
  %v1_10001e70 = add i32 %v0_10001e70, 1
  %v1_10001e74 = add i32 %v0_10001e74, -1
  %v2_10001e74 = icmp eq i32 %v1_10001e74, 0
  br i1 %v2_10001e74, label %dec_label_pc_10001e38, label %dec_label_pc_10001e78

dec_label_pc_10001e78:                            ; preds = %dec_label_pc_10001e70
  %v1_10001e78 = mul i32 %v1_10001e70, 4
  %v2_10001e7c = add i32 %v1_10001e78, %v3_10001e58
  %v3_10001e7c = inttoptr i32 %v2_10001e7c to i32*
  %v4_10001e7c = load i32, i32* %v3_10001e7c, align 4
  %v1_10001e80 = add i32 %v4_10001e7c, 4
  %v2_10001e80 = inttoptr i32 %v1_10001e80 to i8*
  %v3_10001e80 = load i8, i8* %v2_10001e80, align 1
  %v4_10001e80 = zext i8 %v3_10001e80 to i32
  %v4_10001e84 = icmp eq i32 %v4_10001e80, %v1_10001e68
  br i1 %v4_10001e84, label %dec_label_pc_10001e8c, label %dec_label_pc_10001e70

dec_label_pc_10001e8c:                            ; preds = %dec_label_pc_10001e78, %dec_label_pc_10001e50
  %v0_10001e8c = phi i32 [ %v2_10001e60, %dec_label_pc_10001e50 ], [ %v4_10001e7c, %dec_label_pc_10001e78 ]
  %v1_10001e8c = inttoptr i32 %v0_10001e8c to i32*
  %v2_10001e8c = load i32, i32* %v1_10001e8c, align 4
  call void @__pseudo_call(i32 %v2_10001e8c)
  br label %dec_label_pc_10001e38

; uselistorder directives
  uselistorder i32 %v1_10001e74, { 1, 0 }
  uselistorder i8 %v3_10001e44, { 1, 0 }
  uselistorder i32 %v0_10001dd4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10001e70, { 1, 0 }
  uselistorder label %dec_label_pc_10001e40, { 1, 0 }
  uselistorder label %dec_label_pc_10001e38, { 3, 0, 1, 4, 2 }
}

define i32 @function_10001eac(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10001eac:
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v0_10001eac = call i32 @__asm_mfcr()
  store i32 %v0_10001eac, i32* %r3.global-to-local, align 4
  %v0_10001ec4 = load i32, i32* @r31, align 4
  %v0_10001edc = load i32, i32* @r24, align 4
  %v0_10001ee4 = load i32, i32* @r26, align 4
  %v0_10001ee8 = load i32, i32* @r27, align 4
  %v0_10001eec = load i32, i32* @r28, align 4
  %v0_10001ef0 = load i32, i32* @r29, align 4
  %tmp25 = icmp ult i32 %arg2, 4
  br i1 %tmp25, label %dec_label_pc_10001f0c, label %dec_label_pc_10001f00

dec_label_pc_10001f00:                            ; preds = %dec_label_pc_10001eac
  %v3_10001f00 = icmp eq i32 %arg2, 4
  %v1_10001f04 = inttoptr i32 %v0_10001eac to i32*
  %v2_10001f04 = load i32, i32* %v1_10001f04, align 4
  store i32 %v2_10001f04, i32* %r25.global-to-local, align 4
  br i1 %v3_10001f00, label %dec_label_pc_10001f0c, label %dec_label_pc_10001f54

dec_label_pc_10001f0c:                            ; preds = %dec_label_pc_10001f00, %dec_label_pc_10002100, %dec_label_pc_10001f6c, %dec_label_pc_10001f60, %dec_label_pc_10001f54, %dec_label_pc_10001eac, %dec_label_pc_10002134
  %v1_10001f20 = call %0 @__asm_mtcrf(i32 8, i32 %v0_10001eac)
  store i32 %v0_10001edc, i32* @r24, align 4
  store i32 %v0_10001ee4, i32* @r26, align 4
  store i32 %v0_10001ee8, i32* @r27, align 4
  store i32 %v0_10001eec, i32* @r28, align 4
  store i32 %v0_10001ef0, i32* @r29, align 4
  store i32 %v0_10001ec4, i32* @r31, align 4
  %v0_10001f50 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10001f50

dec_label_pc_10001f54:                            ; preds = %dec_label_pc_10001f00
  %v3_10001f54 = icmp eq i32 %arg2, 5
  %v1_10001f58 = add i32 %v0_10001eac, 4
  %v2_10001f58 = inttoptr i32 %v1_10001f58 to i8*
  %v3_10001f58 = load i8, i8* %v2_10001f58, align 1
  %v4_10001f58 = zext i8 %v3_10001f58 to i32
  store i32 %v4_10001f58, i32* %r22.global-to-local, align 4
  br i1 %v3_10001f54, label %dec_label_pc_10001f0c, label %dec_label_pc_10001f60

dec_label_pc_10001f60:                            ; preds = %dec_label_pc_10001f54
  %v1_10001f60 = add i32 %v0_10001eac, 5
  %v2_10001f60 = inttoptr i32 %v1_10001f60 to i8*
  %v3_10001f60 = load i8, i8* %v2_10001f60, align 1
  %v4_10001f60 = zext i8 %v3_10001f60 to i32
  store i32 %v4_10001f60, i32* @r26, align 4
  %v3_10001f64 = icmp eq i8 %v3_10001f60, 0
  store i1 false, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10001f64, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_10001f64, label %dec_label_pc_10001f0c, label %dec_label_pc_10001f6c

dec_label_pc_10001f6c:                            ; preds = %dec_label_pc_10001f60
  %v1_10001f6c = mul nuw nsw i32 %v4_10001f60, 5
  store i32 %v1_10001f6c, i32* @r27, align 4
  %v1_10001f70 = add i32 %arg2, -6
  store i32 %v1_10001f70, i32* @r28, align 4
  %v2_10001f74 = icmp ult i32 %v1_10001f70, %v1_10001f6c
  br i1 %v2_10001f74, label %dec_label_pc_10001f0c, label %dec_label_pc_10001f7c

dec_label_pc_10001f7c:                            ; preds = %dec_label_pc_10001f6c
  store i32 %v4_10001f60, i32* %r3.global-to-local, align 4
  store i32 268443528, i32* @lr, align 4
  %v2_10001f84 = call i32 @function_1000bae4(i32 %v4_10001f60, i32 24)
  store i32 %v2_10001f84, i32* %r3.global-to-local, align 4
  %v0_10001f88 = load i32, i32* @r31, align 4
  %v1_10001f88 = add i32 %v0_10001f88, 6
  store i32 %v1_10001f88, i32* @r29, align 4
  store i32 %v2_10001f84, i32* %r20.global-to-local, align 4
  %v0_10001f90 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10001f90 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10001f90 = or i1 %v0_10001f90, %v1_10001f90
  br i1 %v2_10001f90, label %dec_label_pc_10001fecthread-pre-split, label %dec_label_pc_10001f94

dec_label_pc_10001f94:                            ; preds = %dec_label_pc_10001f7c
  %v0_10001f94 = load i32, i32* @r27, align 4
  store i32 %v2_10001f84, i32* %r11.global-to-local, align 4
  %tmp29 = mul i32 %v0_10001f94, -858993459
  store i32 2, i32* %r10.global-to-local, align 4
  store i32 %tmp29, i32* %r9.global-to-local, align 4
  store i32 %tmp29, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10001fbc

dec_label_pc_10001fbc:                            ; preds = %dec_label_pc_10001fbc.dec_label_pc_10001fbc_crit_edge, %dec_label_pc_10001f94
  %v2_10001fc8 = phi i32 [ %v1_10001fd8, %dec_label_pc_10001fbc.dec_label_pc_10001fbc_crit_edge ], [ %v2_10001f84, %dec_label_pc_10001f94 ]
  %v0_10001fc4 = phi i32 [ %v0_10001fbc.pre, %dec_label_pc_10001fbc.dec_label_pc_10001fbc_crit_edge ], [ %v1_10001f88, %dec_label_pc_10001f94 ]
  %v1_10001fbc = add i32 %v0_10001fc4, 4
  %v2_10001fbc = inttoptr i32 %v1_10001fbc to i8*
  %v3_10001fbc = load i8, i8* %v2_10001fbc, align 1
  %v1_10001fc0 = inttoptr i32 %v0_10001fc4 to i32*
  %v2_10001fc0 = load i32, i32* %v1_10001fc0, align 4
  store i32 %v2_10001fc0, i32* %r9.global-to-local, align 4
  %v1_10001fc4 = add i32 %v0_10001fc4, 5
  store i32 %v1_10001fc4, i32* @r29, align 4
  %v3_10001fc8 = add i32 %v2_10001fc8, 20
  %v4_10001fc8 = inttoptr i32 %v3_10001fc8 to i8*
  store i8 %v3_10001fbc, i8* %v4_10001fc8, align 1
  %v0_10001fcc = load i32, i32* %r9.global-to-local, align 4
  %v1_10001fcc = load i32, i32* %r11.global-to-local, align 4
  %v2_10001fcc = add i32 %v1_10001fcc, 4
  %v3_10001fcc = inttoptr i32 %v2_10001fcc to i32*
  store i32 %v0_10001fcc, i32* %v3_10001fcc, align 4
  %v0_10001fd0 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001fd0 = load i32, i32* %r11.global-to-local, align 4
  %v2_10001fd0 = add i32 %v1_10001fd0, 16
  %v3_10001fd0 = inttoptr i32 %v2_10001fd0 to i32*
  store i32 %v0_10001fd0, i32* %v3_10001fd0, align 4
  %v0_10001fd4 = load i32, i32* %r10.global-to-local, align 4
  %v1_10001fd4 = trunc i32 %v0_10001fd4 to i16
  %v2_10001fd4 = load i32, i32* %r11.global-to-local, align 4
  %v3_10001fd4 = inttoptr i32 %v2_10001fd4 to i16*
  store i16 %v1_10001fd4, i16* %v3_10001fd4, align 2
  %v0_10001fd8 = load i32, i32* %r11.global-to-local, align 4
  %v1_10001fd8 = add i32 %v0_10001fd8, 24
  store i32 %v1_10001fd8, i32* %r11.global-to-local, align 4
  %v0_10001fdc = load i32, i32* %ctr.global-to-local, align 4
  %v1_10001fdc = add i32 %v0_10001fdc, -1
  store i32 %v1_10001fdc, i32* %ctr.global-to-local, align 4
  %v2_10001fdc = icmp eq i32 %v1_10001fdc, 0
  br i1 %v2_10001fdc, label %dec_label_pc_10001fe0, label %dec_label_pc_10001fbc.dec_label_pc_10001fbc_crit_edge

dec_label_pc_10001fbc.dec_label_pc_10001fbc_crit_edge: ; preds = %dec_label_pc_10001fbc
  %v0_10001fbc.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10001fbc

dec_label_pc_10001fe0:                            ; preds = %dec_label_pc_10001fbc
  %v0_10001fe0 = load i32, i32* @r26, align 4
  %v1_10001fe0 = mul i32 %v0_10001fe0, -5
  %v0_10001fe4 = load i32, i32* @r30, align 4
  %v2_10001fe4 = add i32 %v0_10001fe4, %v1_10001fe0
  store i32 %v2_10001fe4, i32* %r9.global-to-local, align 4
  %v1_10001fe8 = add i32 %v2_10001fe4, -6
  store i32 %v1_10001fe8, i32* @r28, align 4
  br label %dec_label_pc_10001fec

dec_label_pc_10001fecthread-pre-split:            ; preds = %dec_label_pc_10001f7c
  %v0_10001fec.pr = load i32, i32* @r28, align 4
  br label %dec_label_pc_10001fec

dec_label_pc_10001fec:                            ; preds = %dec_label_pc_10001fecthread-pre-split, %dec_label_pc_10001fe0
  %v0_10001fec = phi i32 [ %v0_10001fec.pr, %dec_label_pc_10001fecthread-pre-split ], [ %v1_10001fe8, %dec_label_pc_10001fe0 ]
  %v3_10001fec = icmp eq i32 %v0_10001fec, 0
  store i32 0, i32* %r21.global-to-local, align 4
  br i1 %v3_10001fec, label %dec_label_pc_100020f0, label %dec_label_pc_10001ff8

dec_label_pc_10001ff8:                            ; preds = %dec_label_pc_10001fec
  %v0_10001ff8 = load i32, i32* @r29, align 4
  %v1_10001ff8 = inttoptr i32 %v0_10001ff8 to i8*
  %v2_10001ff8 = load i8, i8* %v1_10001ff8, align 1
  %v3_10001ff8 = zext i8 %v2_10001ff8 to i32
  store i32 %v3_10001ff8, i32* @r24, align 4
  %v3_10001ffc = icmp eq i8 %v2_10001ff8, 0
  store i1 false, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10001ffc, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_10001ffc, label %dec_label_pc_100020c8, label %dec_label_pc_10002004

dec_label_pc_10002004:                            ; preds = %dec_label_pc_10001ff8
  store i32 %v3_10001ff8, i32* %r3.global-to-local, align 4
  store i32 268443664, i32* @lr, align 4
  %v2_1000200c = call i32 @function_1000bae4(i32 %v3_10001ff8, i32 8)
  store i32 %v2_1000200c, i32* %r3.global-to-local, align 4
  store i32 %v2_1000200c, i32* %r21.global-to-local, align 4
  %v0_10002014 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10002014 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10002014 = or i1 %v0_10002014, %v1_10002014
  br i1 %v2_10002014, label %dec_label_pc_100020c8, label %dec_label_pc_10002018

dec_label_pc_10002018:                            ; preds = %dec_label_pc_10002004
  %v0_10002018 = load i32, i32* @r28, align 4
  %v1_10002018 = add i32 %v0_10002018, -1
  %v4_10002018 = icmp eq i32 %v1_10002018, 0
  store i32 %v1_10002018, i32* %ctr.global-to-local, align 4
  br i1 %v4_10002018, label %dec_label_pc_100020f0, label %dec_label_pc_10002024

dec_label_pc_10002024:                            ; preds = %dec_label_pc_10002018
  %v0_10002024 = load i32, i32* @r29, align 4
  %v1_10002024 = add i32 %v0_10002024, 1
  %v2_10002024 = inttoptr i32 %v1_10002024 to i8*
  %v3_10002024 = load i8, i8* %v2_10002024, align 1
  store i32 %v1_10002024, i32* %r9.global-to-local, align 4
  %v3_1000202c = add i32 %v2_1000200c, 4
  %v4_1000202c = inttoptr i32 %v3_1000202c to i8*
  store i8 %v3_10002024, i8* %v4_1000202c, align 1
  %v0_10002030 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10002030 = add i32 %v0_10002030, -1
  store i32 %v1_10002030, i32* %ctr.global-to-local, align 4
  %v2_10002030 = icmp eq i32 %v1_10002030, 0
  br i1 %v2_10002030, label %dec_label_pc_100020f0, label %dec_label_pc_10002034

dec_label_pc_10002034:                            ; preds = %dec_label_pc_10002024
  store i32 %v1_10002030, i32* %r11.global-to-local, align 4
  %v0_10002038 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002038 = add i32 %v0_10002038, 1
  %v2_10002038 = inttoptr i32 %v1_10002038 to i8*
  %v3_10002038 = load i8, i8* %v2_10002038, align 1
  %v4_10002038 = zext i8 %v3_10002038 to i32
  %v1_10002040 = add i32 %v0_10002030, -2
  store i32 %v1_10002040, i32* @r29, align 4
  %v2_10002044 = icmp slt i32 %v1_10002040, %v4_10002038
  br i1 %v2_10002044, label %dec_label_pc_100020f0, label %dec_label_pc_1000204c

dec_label_pc_1000204c:                            ; preds = %dec_label_pc_10002034
  %v1_1000204c = add i32 %v0_10002038, 2
  store i32 %v1_1000204c, i32* @r28, align 4
  %v0_10002050 = load i32, i32* %r3.global-to-local, align 4
  %v1_10002050 = add i32 %v0_10002050, 8
  store i32 %v1_10002050, i32* %r23.global-to-local, align 4
  store i32 0, i32* @r27, align 4
  br label %dec_label_pc_10002094

dec_label_pc_10002060:                            ; preds = %dec_label_pc_10002094
  %v5_100020bc = icmp eq i32 %v2_100020bc, 0
  br i1 %v5_100020bc, label %dec_label_pc_100020f0, label %dec_label_pc_10002064

dec_label_pc_10002064:                            ; preds = %dec_label_pc_10002060
  %v1_10002064 = load i32, i32* @r28, align 4
  %v2_10002064 = add i32 %v1_10002064, %v0_100020bc
  %v3_10002064 = inttoptr i32 %v2_10002064 to i8*
  %v4_10002064 = load i8, i8* %v3_10002064, align 1
  store i32 %v2_10002064, i32* %r3.global-to-local, align 4
  %v1_1000206c = add i32 %v2_10002064, 1
  store i32 %v1_1000206c, i32* %r9.global-to-local, align 4
  %v2_10002070 = load i32, i32* @r30, align 4
  %v3_10002070 = add i32 %v2_10002070, 4
  %v4_10002070 = inttoptr i32 %v3_10002070 to i8*
  store i8 %v4_10002064, i8* %v4_10002070, align 1
  %v0_10002074 = load i32, i32* %r11.global-to-local, align 4
  %v1_10002074 = add i32 %v0_10002074, -1
  %v4_10002074 = icmp eq i32 %v1_10002074, 0
  %v0_10002078 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002078 = add i32 %v0_10002078, 1
  store i32 %v1_10002078, i32* @r28, align 4
  br i1 %v4_10002074, label %dec_label_pc_100020f0, label %dec_label_pc_10002080

dec_label_pc_10002080:                            ; preds = %dec_label_pc_10002064
  %v0_10002080 = load i32, i32* %r3.global-to-local, align 4
  %v1_10002080 = add i32 %v0_10002080, 1
  %v2_10002080 = inttoptr i32 %v1_10002080 to i8*
  %v3_10002080 = load i8, i8* %v2_10002080, align 1
  %v4_10002080 = zext i8 %v3_10002080 to i32
  store i32 %v1_10002074, i32* %r9.global-to-local, align 4
  %v1_10002088 = add i32 %v0_10002074, -2
  store i32 %v1_10002088, i32* @r29, align 4
  %v2_1000208c = icmp slt i32 %v1_10002088, %v4_10002080
  br i1 %v2_1000208c, label %dec_label_pc_100020f0, label %dec_label_pc_10002094

dec_label_pc_10002094:                            ; preds = %dec_label_pc_10002080, %dec_label_pc_1000204c
  %v0_10002098 = phi i32 [ %v4_10002080, %dec_label_pc_10002080 ], [ %v4_10002038, %dec_label_pc_1000204c ]
  %v1_10002098 = add nuw nsw i32 %v0_10002098, 1
  store i32 %v1_10002098, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100020a0.60 to i32), i32* @lr, align 4
  %v2_1000209c = call i32 @function_1000bae4(i32 %v1_10002098, i32 1)
  store i32 %v2_1000209c, i32* %r3.global-to-local, align 4
  %v0_100020a0 = load i32, i32* @r27, align 4
  %v1_100020a0 = add i32 %v0_100020a0, 1
  store i32 %v1_100020a0, i32* @r27, align 4
  %v1_100020a4 = load i32, i32* @r30, align 4
  %v2_100020a4 = inttoptr i32 %v1_100020a4 to i32*
  store i32 %v2_1000209c, i32* %v2_100020a4, align 4
  %v0_100020a8 = load i32, i32* @r28, align 4
  %v0_100020ac = load i32, i32* @r31, align 4
  %v0_100020b0 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_100020b0, i32* @r30, align 4
  store i32 268443832, i32* @lr, align 4
  %v3_100020b4 = call i32 @function_1000a184(i32 %v2_1000209c, i32 %v0_100020a8, i32 %v0_100020ac)
  store i32 %v3_100020b4, i32* %r3.global-to-local, align 4
  %v0_100020b8 = load i32, i32* @r27, align 4
  %v1_100020b8 = load i32, i32* @r24, align 4
  %v4_100020b8 = icmp eq i32 %v0_100020b8, %v1_100020b8
  %v0_100020bc = load i32, i32* @r31, align 4
  %v1_100020bc = load i32, i32* @r29, align 4
  %v2_100020bc = sub i32 %v1_100020bc, %v0_100020bc
  store i32 %v2_100020bc, i32* %r11.global-to-local, align 4
  %v0_100020c0 = load i32, i32* %r23.global-to-local, align 4
  %v1_100020c0 = add i32 %v0_100020c0, 8
  store i32 %v1_100020c0, i32* %r23.global-to-local, align 4
  br i1 %v4_100020b8, label %dec_label_pc_100020c8, label %dec_label_pc_10002060

dec_label_pc_100020c8:                            ; preds = %dec_label_pc_10002094, %dec_label_pc_10002004, %dec_label_pc_10001ff8
  %v0_100020c8 = call i32 @function_1000b0a8()
  %v2_100020d0 = inttoptr i32 %v0_100020c8 to i32*
  store i32 0, i32* %v2_100020d0, align 4
  %v0_100020d4 = load i32, i32* %r22.global-to-local, align 4
  %v0_100020d8 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_100020d8, i32* %r3.global-to-local, align 4
  %v0_100020dc = load i32, i32* @r26, align 4
  %v0_100020e0 = load i32, i32* %r20.global-to-local, align 4
  %v0_100020e4 = load i32, i32* @r24, align 4
  %v0_100020e8 = load i32, i32* %r21.global-to-local, align 4
  store i32 268443888, i32* @lr, align 4
  %v6_100020ec = call i32 @function_10001d98(i32 %v0_100020d8, i32 %v0_100020d4, i32 %v0_100020dc, i32 %v0_100020e0, i32 %v0_100020e4, i32 %v0_100020e8)
  store i32 %v6_100020ec, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100020f0

dec_label_pc_100020f0:                            ; preds = %dec_label_pc_10002080, %dec_label_pc_10002064, %dec_label_pc_10002060, %dec_label_pc_10002034, %dec_label_pc_10002024, %dec_label_pc_10002018, %dec_label_pc_10001fec, %dec_label_pc_100020c8
  %v0_100020f0 = load i32, i32* %r20.global-to-local, align 4
  %v3_100020f0 = icmp eq i32 %v0_100020f0, 0
  br i1 %v3_100020f0, label %dec_label_pc_10002100, label %dec_label_pc_100020f8

dec_label_pc_100020f8:                            ; preds = %dec_label_pc_100020f0
  store i32 %v0_100020f0, i32* @r3, align 4
  store i32 268443904, i32* @lr, align 4
  %v0_100020fc = call i32 @function_1000bb54()
  store i32 %v0_100020fc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002100

dec_label_pc_10002100:                            ; preds = %dec_label_pc_100020f0, %dec_label_pc_100020f8
  %v0_10002100 = load i32, i32* %r21.global-to-local, align 4
  %v3_10002100 = icmp eq i32 %v0_10002100, 0
  br i1 %v3_10002100, label %dec_label_pc_10001f0c, label %dec_label_pc_10002108

dec_label_pc_10002108:                            ; preds = %dec_label_pc_10002100
  %v0_10002108 = load i32, i32* @r24, align 4
  %tmp27 = icmp slt i32 %v0_10002108, 1
  br i1 %tmp27, label %dec_label_pc_10002134, label %dec_label_pc_10002110

dec_label_pc_10002110:                            ; preds = %dec_label_pc_10002108
  br label %dec_label_pc_10002114

dec_label_pc_10002114:                            ; preds = %dec_label_pc_1000212c, %dec_label_pc_10002110
  %v0_1000212c6 = phi i32 [ %v0_10002108, %dec_label_pc_10002110 ], [ %v0_1000212c, %dec_label_pc_1000212c ]
  %v0_1000211c = phi i32 [ %v0_10002100, %dec_label_pc_10002110 ], [ %v0_10002134.pre, %dec_label_pc_1000212c ]
  %v0_10002114 = phi i32 [ 0, %dec_label_pc_10002110 ], [ %v1_1000212c, %dec_label_pc_1000212c ]
  %v1_10002114 = mul i32 %v0_10002114, 8
  %v1_10002118 = add i32 %v0_10002114, 1
  store i32 %v1_10002118, i32* @r31, align 4
  %v2_1000211c = add i32 %v1_10002114, %v0_1000211c
  %v3_1000211c = inttoptr i32 %v2_1000211c to i32*
  %v4_1000211c = load i32, i32* %v3_1000211c, align 4
  store i32 %v4_1000211c, i32* @r3, align 4
  %v3_10002120 = icmp eq i32 %v4_1000211c, 0
  br i1 %v3_10002120, label %dec_label_pc_1000212c, label %dec_label_pc_10002128

dec_label_pc_10002128:                            ; preds = %dec_label_pc_10002114
  store i32 268443948, i32* @lr, align 4
  %v0_10002128 = call i32 @function_1000bb54()
  store i32 %v0_10002128, i32* %r3.global-to-local, align 4
  %v0_1000212c.pre = load i32, i32* @r24, align 4
  %v1_1000212c.pre = load i32, i32* @r31, align 4
  %v0_10002134.pre.pre = load i32, i32* %r21.global-to-local, align 4
  br label %dec_label_pc_1000212c

dec_label_pc_1000212c:                            ; preds = %dec_label_pc_10002114, %dec_label_pc_10002128
  %v0_10002134.pre = phi i32 [ %v0_1000211c, %dec_label_pc_10002114 ], [ %v0_10002134.pre.pre, %dec_label_pc_10002128 ]
  %v1_1000212c = phi i32 [ %v1_10002118, %dec_label_pc_10002114 ], [ %v1_1000212c.pre, %dec_label_pc_10002128 ]
  %v0_1000212c = phi i32 [ %v0_1000212c6, %dec_label_pc_10002114 ], [ %v0_1000212c.pre, %dec_label_pc_10002128 ]
  %v4_1000212c = icmp eq i32 %v0_1000212c, %v1_1000212c
  br i1 %v4_1000212c, label %dec_label_pc_10002134, label %dec_label_pc_10002114

dec_label_pc_10002134:                            ; preds = %dec_label_pc_1000212c, %dec_label_pc_10002108
  %v0_10002134 = phi i32 [ %v0_10002100, %dec_label_pc_10002108 ], [ %v0_10002134.pre, %dec_label_pc_1000212c ]
  store i32 %v0_10002134, i32* @r3, align 4
  store i32 268443964, i32* @lr, align 4
  %v0_10002138 = call i32 @function_1000bb54()
  store i32 %v0_10002138, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001f0c

; uselistorder directives
  uselistorder i32 %v0_1000212c, { 1, 0 }
  uselistorder i32 %v1_1000212c, { 1, 0 }
  uselistorder i32 %v0_10002114, { 1, 0 }
  uselistorder i32 %v2_100020bc, { 1, 0 }
  uselistorder i32 %v0_100020bc, { 1, 0 }
  uselistorder i32 %v2_10002064, { 1, 0, 2 }
  uselistorder i32 %v1_10002030, { 0, 2, 1 }
  uselistorder i32 %v3_10001ff8, { 1, 0, 2 }
  uselistorder i32 %v1_10001fdc, { 1, 0 }
  uselistorder i32 %v1_10001fd8, { 1, 0 }
  uselistorder i32 %v0_10001fc4, { 0, 2, 1 }
  uselistorder i32 %tmp29, { 1, 0 }
  uselistorder i32 %v4_10001f60, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10001eac, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 9, 10, 11, 7, 8, 12, 13, 14, 16, 17, 15, 0, 1 }
  uselistorder i32* %r21.global-to-local, { 1, 2, 3, 0, 4 }
  uselistorder i32* %r20.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 %arg2, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_1000212c, { 1, 0 }
  uselistorder label %dec_label_pc_10002100, { 1, 0 }
  uselistorder label %dec_label_pc_100020f0, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_10001f0c, { 6, 1, 2, 3, 4, 0, 5 }
}

define i32 @function_10002140(i32 %arg1) local_unnamed_addr {
dec_label_pc_10002140:
  store i32 268566528, i32* @r30, align 4
  store i32 ptrtoint (i32* @global_var_1001e20c.62 to i32), i32* @r31, align 4
  %v3_1000215c = load i32, i32* @global_var_1001e20c.62, align 4
  %v3_10002164 = icmp eq i32 %v3_1000215c, 0
  br i1 %v3_10002164, label %dec_label_pc_1000216c, label %dec_label_pc_10002204

dec_label_pc_1000216c:                            ; preds = %dec_label_pc_10002140
  %v3_1000216c = load i32, i32* @global_var_1001e210.63, align 4
  store i32 0, i32* @r29, align 4
  store i32 0, i32* @global_var_1001e20c.62, align 4
  %v3_10002178 = icmp eq i32 %v3_1000216c, 0
  br i1 %v3_10002178, label %dec_label_pc_10002180, label %dec_label_pc_10002220

dec_label_pc_10002180:                            ; preds = %dec_label_pc_1000216c, %dec_label_pc_10002204
  %v0_10002184 = phi i32 [ 0, %dec_label_pc_1000216c ], [ %v0_10002214, %dec_label_pc_10002204 ]
  %v3_10002180 = load i32, i32* @global_var_1001e214.64, align 4
  store i32 %v0_10002184, i32* @global_var_1001e210.63, align 4
  %v3_10002188 = icmp eq i32 %v3_10002180, 0
  br i1 %v3_10002188, label %dec_label_pc_10002190, label %dec_label_pc_10002238

dec_label_pc_10002190:                            ; preds = %dec_label_pc_10002180, %dec_label_pc_10002220
  %v0_10002194 = phi i32 [ %v0_10002184, %dec_label_pc_10002180 ], [ %v0_1000222c, %dec_label_pc_10002220 ]
  %v3_10002190 = load i32, i32* @global_var_1001e218.65, align 4
  store i32 %v0_10002194, i32* @global_var_1001e214.64, align 4
  %v3_10002198 = icmp eq i32 %v3_10002190, 0
  br i1 %v3_10002198, label %dec_label_pc_100021a0, label %dec_label_pc_10002250

dec_label_pc_100021a0:                            ; preds = %dec_label_pc_10002190, %dec_label_pc_10002238
  %v0_100021a4 = phi i32 [ %v0_10002194, %dec_label_pc_10002190 ], [ %v0_10002244, %dec_label_pc_10002238 ]
  %v3_100021a0 = load i32, i32* @global_var_1001e21c.66, align 4
  store i32 %v0_100021a4, i32* @global_var_1001e218.65, align 4
  %v3_100021a8 = icmp eq i32 %v3_100021a0, 0
  br i1 %v3_100021a8, label %dec_label_pc_100021b0, label %dec_label_pc_10002268

dec_label_pc_100021b0:                            ; preds = %dec_label_pc_100021a0, %dec_label_pc_10002250
  %v0_100021b4 = phi i32 [ %v0_100021a4, %dec_label_pc_100021a0 ], [ %v0_1000225c, %dec_label_pc_10002250 ]
  %v3_100021b0 = load i32, i32* @global_var_1001e220.67, align 4
  store i32 %v0_100021b4, i32* @global_var_1001e21c.66, align 4
  %v3_100021b8 = icmp eq i32 %v3_100021b0, 0
  br i1 %v3_100021b8, label %dec_label_pc_100021c0, label %dec_label_pc_10002280

dec_label_pc_100021c0:                            ; preds = %dec_label_pc_100021b0, %dec_label_pc_10002268
  %v0_100021c4 = phi i32 [ %v0_100021b4, %dec_label_pc_100021b0 ], [ %v0_10002274, %dec_label_pc_10002268 ]
  %v3_100021c0 = load i32, i32* @global_var_1001e224.68, align 4
  store i32 %v0_100021c4, i32* @global_var_1001e220.67, align 4
  %v3_100021c8 = icmp eq i32 %v3_100021c0, 0
  br i1 %v3_100021c8, label %dec_label_pc_100021d0, label %dec_label_pc_10002298

dec_label_pc_100021d0:                            ; preds = %dec_label_pc_100021c0, %dec_label_pc_10002280
  %v0_100021d4 = phi i32 [ %v0_100021c4, %dec_label_pc_100021c0 ], [ %v0_1000228c, %dec_label_pc_10002280 ]
  %v3_100021d0 = load i32, i32* @global_var_1001e228.69, align 4
  store i32 %v0_100021d4, i32* @global_var_1001e224.68, align 4
  %v3_100021d8 = icmp eq i32 %v3_100021d0, 0
  br i1 %v3_100021d8, label %dec_label_pc_100021e0, label %dec_label_pc_100022b0

dec_label_pc_100021e0:                            ; preds = %dec_label_pc_100021d0, %dec_label_pc_10002298
  %v0_100021e0 = phi i32 [ %v0_100021d4, %dec_label_pc_100021d0 ], [ %v0_100022a4, %dec_label_pc_10002298 ]
  store i32 %v0_100021e0, i32* @global_var_1001e228.69, align 4
  store i32 268444136, i32* @lr, align 4
  %v0_100021e4 = call i32 @function_10007d98()
  ret i32 %v0_100021e4

dec_label_pc_10002204:                            ; preds = %dec_label_pc_10002140
  store i32 0, i32* @r29, align 4
  store i32 268444176, i32* @lr, align 4
  %v2_1000220c = call i32 @function_1000aaac(i32 %v3_1000215c, i32 9)
  %v3_10002210 = load i32, i32* @global_var_1001e210.63, align 4
  %v0_10002214 = load i32, i32* @r29, align 4
  store i32 %v0_10002214, i32* @global_var_1001e20c.62, align 4
  %v3_10002218 = icmp eq i32 %v3_10002210, 0
  br i1 %v3_10002218, label %dec_label_pc_10002180, label %dec_label_pc_10002220

dec_label_pc_10002220:                            ; preds = %dec_label_pc_1000216c, %dec_label_pc_10002204
  store i32 268444200, i32* @lr, align 4
  %v2_10002224 = call i32 @function_1000aaac(i32 9, i32 9)
  %v3_10002228 = load i32, i32* @global_var_1001e214.64, align 4
  %v0_1000222c = load i32, i32* @r29, align 4
  store i32 %v0_1000222c, i32* @global_var_1001e210.63, align 4
  %v3_10002230 = icmp eq i32 %v3_10002228, 0
  br i1 %v3_10002230, label %dec_label_pc_10002190, label %dec_label_pc_10002238

dec_label_pc_10002238:                            ; preds = %dec_label_pc_10002180, %dec_label_pc_10002220
  store i32 268444224, i32* @lr, align 4
  %v2_1000223c = call i32 @function_1000aaac(i32 9, i32 9)
  %v3_10002240 = load i32, i32* @global_var_1001e218.65, align 4
  %v0_10002244 = load i32, i32* @r29, align 4
  store i32 %v0_10002244, i32* @global_var_1001e214.64, align 4
  %v3_10002248 = icmp eq i32 %v3_10002240, 0
  br i1 %v3_10002248, label %dec_label_pc_100021a0, label %dec_label_pc_10002250

dec_label_pc_10002250:                            ; preds = %dec_label_pc_10002190, %dec_label_pc_10002238
  store i32 268444248, i32* @lr, align 4
  %v2_10002254 = call i32 @function_1000aaac(i32 9, i32 9)
  %v3_10002258 = load i32, i32* @global_var_1001e21c.66, align 4
  %v0_1000225c = load i32, i32* @r29, align 4
  store i32 %v0_1000225c, i32* @global_var_1001e218.65, align 4
  %v3_10002260 = icmp eq i32 %v3_10002258, 0
  br i1 %v3_10002260, label %dec_label_pc_100021b0, label %dec_label_pc_10002268

dec_label_pc_10002268:                            ; preds = %dec_label_pc_100021a0, %dec_label_pc_10002250
  store i32 268444272, i32* @lr, align 4
  %v2_1000226c = call i32 @function_1000aaac(i32 9, i32 9)
  %v3_10002270 = load i32, i32* @global_var_1001e220.67, align 4
  %v0_10002274 = load i32, i32* @r29, align 4
  store i32 %v0_10002274, i32* @global_var_1001e21c.66, align 4
  %v3_10002278 = icmp eq i32 %v3_10002270, 0
  br i1 %v3_10002278, label %dec_label_pc_100021c0, label %dec_label_pc_10002280

dec_label_pc_10002280:                            ; preds = %dec_label_pc_100021b0, %dec_label_pc_10002268
  store i32 268444296, i32* @lr, align 4
  %v2_10002284 = call i32 @function_1000aaac(i32 9, i32 9)
  %v3_10002288 = load i32, i32* @global_var_1001e224.68, align 4
  %v0_1000228c = load i32, i32* @r29, align 4
  store i32 %v0_1000228c, i32* @global_var_1001e220.67, align 4
  %v3_10002290 = icmp eq i32 %v3_10002288, 0
  br i1 %v3_10002290, label %dec_label_pc_100021d0, label %dec_label_pc_10002298

dec_label_pc_10002298:                            ; preds = %dec_label_pc_100021c0, %dec_label_pc_10002280
  store i32 268444320, i32* @lr, align 4
  %v2_1000229c = call i32 @function_1000aaac(i32 9, i32 9)
  %v3_100022a0 = load i32, i32* @global_var_1001e228.69, align 4
  %v0_100022a4 = load i32, i32* @r29, align 4
  store i32 %v0_100022a4, i32* @global_var_1001e224.68, align 4
  %v3_100022a8 = icmp eq i32 %v3_100022a0, 0
  br i1 %v3_100022a8, label %dec_label_pc_100021e0, label %dec_label_pc_100022b0

dec_label_pc_100022b0:                            ; preds = %dec_label_pc_100021d0, %dec_label_pc_10002298
  store i32 268444344, i32* @lr, align 4
  %v2_100022b4 = call i32 @function_1000aaac(i32 9, i32 9)
  %v0_100022b8 = load i32, i32* @r29, align 4
  store i32 %v0_100022b8, i32* @global_var_1001e228.69, align 4
  store i32 268444352, i32* @lr, align 4
  %v0_100022bc = call i32 @function_10007d98()
  ret i32 %v0_100022bc

; uselistorder directives
  uselistorder i32 %v0_100022a4, { 1, 0 }
  uselistorder i32 %v0_1000228c, { 1, 0 }
  uselistorder i32 %v0_10002274, { 1, 0 }
  uselistorder i32 %v0_1000225c, { 1, 0 }
  uselistorder i32 %v0_10002244, { 1, 0 }
  uselistorder i32 %v0_1000222c, { 1, 0 }
  uselistorder i32 %v0_10002214, { 1, 0 }
  uselistorder label %dec_label_pc_100022b0, { 1, 0 }
  uselistorder label %dec_label_pc_10002298, { 1, 0 }
  uselistorder label %dec_label_pc_10002280, { 1, 0 }
  uselistorder label %dec_label_pc_10002268, { 1, 0 }
  uselistorder label %dec_label_pc_10002250, { 1, 0 }
  uselistorder label %dec_label_pc_10002238, { 1, 0 }
  uselistorder label %dec_label_pc_10002220, { 1, 0 }
  uselistorder label %dec_label_pc_100021e0, { 1, 0 }
  uselistorder label %dec_label_pc_100021d0, { 1, 0 }
  uselistorder label %dec_label_pc_100021c0, { 1, 0 }
  uselistorder label %dec_label_pc_100021b0, { 1, 0 }
  uselistorder label %dec_label_pc_100021a0, { 1, 0 }
  uselistorder label %dec_label_pc_10002190, { 1, 0 }
  uselistorder label %dec_label_pc_10002180, { 1, 0 }
}

define i32 @function_100022dc(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_100022dc:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %tmp7 = icmp slt i32 %arg1, 1
  br i1 %tmp7, label %dec_label_pc_10002320, label %dec_label_pc_100022f4

dec_label_pc_100022f4:                            ; preds = %dec_label_pc_100022dc
  %v0_100022f4 = load i32, i32* %r4.global-to-local, align 4
  %v1_100022f4 = add i32 %v0_100022f4, 4
  %v2_100022f4 = inttoptr i32 %v1_100022f4 to i8*
  %v3_100022f4 = load i8, i8* %v2_100022f4, align 1
  %v4_100022f4 = zext i8 %v3_100022f4 to i32
  %v4_100022fc = icmp eq i32 %v4_100022f4, %arg3
  br i1 %v4_100022fc, label %dec_label_pc_10002334, label %dec_label_pc_10002318

dec_label_pc_10002308:                            ; preds = %dec_label_pc_10002318
  %v1_10002308 = add i32 %v0_10002308.in, 12
  %v2_10002308 = inttoptr i32 %v1_10002308 to i8*
  %v3_10002308 = load i8, i8* %v2_10002308, align 1
  %v4_10002308 = zext i8 %v3_10002308 to i32
  %v4_10002310 = icmp eq i32 %v4_10002308, %arg3
  br i1 %v4_10002310, label %dec_label_pc_10002334, label %dec_label_pc_10002318

dec_label_pc_10002318:                            ; preds = %dec_label_pc_100022f4, %dec_label_pc_10002308
  %v0_1000231c = phi i32 [ %v1_1000231c, %dec_label_pc_10002308 ], [ %arg1, %dec_label_pc_100022f4 ]
  %v0_10002308.in = phi i32 [ %v0_10002308, %dec_label_pc_10002308 ], [ %v0_100022f4, %dec_label_pc_100022f4 ]
  %v0_10002308 = add i32 %v0_10002308.in, 8
  store i32 %v0_10002308, i32* %r4.global-to-local, align 4
  %v1_1000231c = add i32 %v0_1000231c, -1
  %v2_1000231c = icmp eq i32 %v1_1000231c, 0
  br i1 %v2_1000231c, label %dec_label_pc_10002320, label %dec_label_pc_10002308

dec_label_pc_10002320:                            ; preds = %dec_label_pc_10002318, %dec_label_pc_10002334, %dec_label_pc_100022dc
  ret i32 %arg4

dec_label_pc_10002334:                            ; preds = %dec_label_pc_10002308, %dec_label_pc_100022f4
  %v0_10002334 = phi i32 [ %v0_100022f4, %dec_label_pc_100022f4 ], [ %v0_10002308, %dec_label_pc_10002308 ]
  %v1_10002334 = inttoptr i32 %v0_10002334 to i32*
  %v2_10002334 = load i32, i32* %v1_10002334, align 4
  %v3_10002338 = icmp eq i32 %v2_10002334, 0
  br i1 %v3_10002338, label %dec_label_pc_10002320, label %dec_label_pc_10002340

dec_label_pc_10002340:                            ; preds = %dec_label_pc_10002334
  store i32 268444484, i32* @lr, align 4
  %v1_10002340 = call i32 @function_1000b4bc(i32 %v2_10002334)
  ret i32 %v1_10002340

; uselistorder directives
  uselistorder i32 %v1_1000231c, { 1, 0 }
  uselistorder i32 %v0_10002308, { 1, 0, 2 }
  uselistorder i32 %v0_10002308.in, { 1, 0 }
  uselistorder i32 %v0_100022f4, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10002320, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10002318, { 1, 0 }
}

define i32 @function_1000235c(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000235c:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %tmp7 = icmp slt i32 %arg1, 1
  br i1 %tmp7, label %dec_label_pc_100023a0, label %dec_label_pc_10002374

dec_label_pc_10002374:                            ; preds = %dec_label_pc_1000235c
  %v0_10002374 = load i32, i32* %r4.global-to-local, align 4
  %v1_10002374 = add i32 %v0_10002374, 4
  %v2_10002374 = inttoptr i32 %v1_10002374 to i8*
  %v3_10002374 = load i8, i8* %v2_10002374, align 1
  %v4_10002374 = zext i8 %v3_10002374 to i32
  %v4_1000237c = icmp eq i32 %v4_10002374, %arg3
  br i1 %v4_1000237c, label %dec_label_pc_100023b4, label %dec_label_pc_10002398

dec_label_pc_10002388:                            ; preds = %dec_label_pc_10002398
  %v1_10002388 = add i32 %v0_10002388.in, 12
  %v2_10002388 = inttoptr i32 %v1_10002388 to i8*
  %v3_10002388 = load i8, i8* %v2_10002388, align 1
  %v4_10002388 = zext i8 %v3_10002388 to i32
  %v4_10002390 = icmp eq i32 %v4_10002388, %arg3
  br i1 %v4_10002390, label %dec_label_pc_100023b4, label %dec_label_pc_10002398

dec_label_pc_10002398:                            ; preds = %dec_label_pc_10002374, %dec_label_pc_10002388
  %v0_1000239c = phi i32 [ %v1_1000239c, %dec_label_pc_10002388 ], [ %arg1, %dec_label_pc_10002374 ]
  %v0_10002388.in = phi i32 [ %v0_10002388, %dec_label_pc_10002388 ], [ %v0_10002374, %dec_label_pc_10002374 ]
  %v0_10002388 = add i32 %v0_10002388.in, 8
  store i32 %v0_10002388, i32* %r4.global-to-local, align 4
  %v1_1000239c = add i32 %v0_1000239c, -1
  %v2_1000239c = icmp eq i32 %v1_1000239c, 0
  br i1 %v2_1000239c, label %dec_label_pc_100023a0, label %dec_label_pc_10002388

dec_label_pc_100023a0:                            ; preds = %dec_label_pc_10002398, %dec_label_pc_100023b4, %dec_label_pc_1000235c
  ret i32 %arg4

dec_label_pc_100023b4:                            ; preds = %dec_label_pc_10002388, %dec_label_pc_10002374
  %v0_100023b4 = phi i32 [ %v0_10002374, %dec_label_pc_10002374 ], [ %v0_10002388, %dec_label_pc_10002388 ]
  %v1_100023b4 = inttoptr i32 %v0_100023b4 to i32*
  %v2_100023b4 = load i32, i32* %v1_100023b4, align 4
  store i32 %v2_100023b4, i32* @r3, align 4
  %v3_100023b8 = icmp eq i32 %v2_100023b4, 0
  br i1 %v3_100023b8, label %dec_label_pc_100023a0, label %dec_label_pc_100023c0

dec_label_pc_100023c0:                            ; preds = %dec_label_pc_100023b4
  store i32 10, i32* %r4.global-to-local, align 4
  store i32 268444616, i32* @lr, align 4
  %v2_100023c4 = call i32 @function_1000a228(i32 %v2_100023b4, i32 10)
  ret i32 %v2_100023c4

; uselistorder directives
  uselistorder i32 %v1_1000239c, { 1, 0 }
  uselistorder i32 %v0_10002388, { 1, 0, 2 }
  uselistorder i32 %v0_10002388.in, { 1, 0 }
  uselistorder i32 %v0_10002374, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_100023a0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10002398, { 1, 0 }
}

define i32 @function_100023e0(i32 %arg1) local_unnamed_addr {
dec_label_pc_100023e0:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %v0_100023e4 = load i32, i32* @lr, align 4
  store i32 %v0_100023e4, i32* %r0.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  %v0_10002400 = load i32, i32* @r28, align 4
  store i32 268444684, i32* @lr, align 4
  %v2_10002408 = call i32 @function_1000bae4(i32 1, i32 8)
  %v3_1000240c = load i8, i8* @global_var_1001e184.58, align 1
  %v4_1000240c = zext i8 %v3_1000240c to i32
  store i32 %v4_1000240c, i32* %r4.global-to-local, align 4
  store i32 %v2_10002408, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_10002420 = load i32, i32* @global_var_1001e188.59, align 4
  %v2_10002424 = inttoptr i32 %v2_10002408 to i32*
  store i32 268453760, i32* %v2_10002424, align 4
  %v0_10002428 = load i32, i32* %r4.global-to-local, align 4
  %v1_10002428 = mul i32 %v0_10002428, 4
  store i32 %v1_10002428, i32* %r4.global-to-local, align 4
  %v0_1000242c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000242c = trunc i32 %v0_1000242c to i8
  %v2_1000242c = load i32, i32* %r28.global-to-local, align 4
  %v3_1000242c = add i32 %v2_1000242c, 4
  %v4_1000242c = inttoptr i32 %v3_1000242c to i8*
  store i8 %v1_1000242c, i8* %v4_1000242c, align 1
  %v0_10002430 = load i32, i32* %r4.global-to-local, align 4
  %v1_10002430 = add i32 %v0_10002430, 4
  store i32 %v1_10002430, i32* %r4.global-to-local, align 4
  store i32 268444728, i32* @lr, align 4
  %v3_10002434 = call i32 @function_1000bc54(i32 %v3_10002420, i32 %v1_10002430, i32 268453760)
  %v3_10002438 = load i8, i8* @global_var_1001e184.58, align 1
  %v4_10002438 = zext i8 %v3_10002438 to i32
  store i32 %v3_10002434, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001e185.70 to i32), i32* %r0.global-to-local, align 4
  %v1_10002448 = mul nuw nsw i32 %v4_10002438, 4
  %v0_1000244c = load i32, i32* @r28, align 4
  %v3_1000244c = add i32 %v1_10002448, %v3_10002434
  %v4_1000244c = inttoptr i32 %v3_1000244c to i32*
  store i32 %v0_1000244c, i32* %v4_1000244c, align 4
  %v0_10002454 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10002454, i32* @global_var_1001e188.59, align 4
  %v0_10002458 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002458 = trunc i32 %v0_10002458 to i8
  store i8 %v1_10002458, i8* @global_var_1001e184.58, align 1
  store i32 268444768, i32* @lr, align 4
  %v2_1000245c = call i32 @function_1000bae4(i32 1, i32 8)
  %v3_10002460 = load i8, i8* @global_var_1001e184.58, align 1
  %v4_10002460 = zext i8 %v3_10002460 to i32
  store i32 %v4_10002460, i32* %r4.global-to-local, align 4
  store i32 %v2_1000245c, i32* %r28.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_10002474 = load i32, i32* @global_var_1001e188.59, align 4
  %v2_10002478 = inttoptr i32 %v2_1000245c to i32*
  store i32 268455004, i32* %v2_10002478, align 4
  %v0_1000247c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000247c = mul i32 %v0_1000247c, 4
  store i32 %v1_1000247c, i32* %r4.global-to-local, align 4
  %v0_10002480 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002480 = trunc i32 %v0_10002480 to i8
  %v2_10002480 = load i32, i32* %r28.global-to-local, align 4
  %v3_10002480 = add i32 %v2_10002480, 4
  %v4_10002480 = inttoptr i32 %v3_10002480 to i8*
  store i8 %v1_10002480, i8* %v4_10002480, align 1
  %v0_10002484 = load i32, i32* %r4.global-to-local, align 4
  %v1_10002484 = add i32 %v0_10002484, 4
  store i32 %v1_10002484, i32* %r4.global-to-local, align 4
  store i32 268444812, i32* @lr, align 4
  %v3_10002488 = call i32 @function_1000bc54(i32 %v3_10002474, i32 %v1_10002484, i32 268455004)
  %v3_1000248c = load i8, i8* @global_var_1001e184.58, align 1
  %v4_1000248c = zext i8 %v3_1000248c to i32
  store i32 %v3_10002488, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001e185.70 to i32), i32* %r0.global-to-local, align 4
  %v1_1000249c = mul nuw nsw i32 %v4_1000248c, 4
  %v0_100024a0 = load i32, i32* @r28, align 4
  %v3_100024a0 = add i32 %v1_1000249c, %v3_10002488
  %v4_100024a0 = inttoptr i32 %v3_100024a0 to i32*
  store i32 %v0_100024a0, i32* %v4_100024a0, align 4
  %v0_100024a8 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100024a8, i32* @global_var_1001e188.59, align 4
  %v0_100024ac = load i32, i32* %r0.global-to-local, align 4
  %v1_100024ac = trunc i32 %v0_100024ac to i8
  store i8 %v1_100024ac, i8* @global_var_1001e184.58, align 1
  store i32 268444852, i32* @lr, align 4
  %v2_100024b0 = call i32 @function_1000bae4(i32 1, i32 8)
  %v3_100024b4 = load i8, i8* @global_var_1001e184.58, align 1
  %v4_100024b4 = zext i8 %v3_100024b4 to i32
  store i32 %v4_100024b4, i32* %r4.global-to-local, align 4
  store i32 %v2_100024b0, i32* %r28.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_100024c8 = load i32, i32* @global_var_1001e188.59, align 4
  %v2_100024cc = inttoptr i32 %v2_100024b0 to i32*
  store i32 268455996, i32* %v2_100024cc, align 4
  %v0_100024d0 = load i32, i32* %r4.global-to-local, align 4
  %v1_100024d0 = mul i32 %v0_100024d0, 4
  store i32 %v1_100024d0, i32* %r4.global-to-local, align 4
  %v0_100024d4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100024d4 = trunc i32 %v0_100024d4 to i8
  %v2_100024d4 = load i32, i32* %r28.global-to-local, align 4
  %v3_100024d4 = add i32 %v2_100024d4, 4
  %v4_100024d4 = inttoptr i32 %v3_100024d4 to i8*
  store i8 %v1_100024d4, i8* %v4_100024d4, align 1
  %v0_100024d8 = load i32, i32* %r4.global-to-local, align 4
  %v1_100024d8 = add i32 %v0_100024d8, 4
  store i32 %v1_100024d8, i32* %r4.global-to-local, align 4
  store i32 268444896, i32* @lr, align 4
  %v3_100024dc = call i32 @function_1000bc54(i32 %v3_100024c8, i32 %v1_100024d8, i32 268455996)
  %v3_100024e0 = load i8, i8* @global_var_1001e184.58, align 1
  %v4_100024e0 = zext i8 %v3_100024e0 to i32
  store i32 %v3_100024dc, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001e185.70 to i32), i32* %r0.global-to-local, align 4
  %v1_100024f0 = mul nuw nsw i32 %v4_100024e0, 4
  %v0_100024f4 = load i32, i32* @r28, align 4
  %v3_100024f4 = add i32 %v1_100024f0, %v3_100024dc
  %v4_100024f4 = inttoptr i32 %v3_100024f4 to i32*
  store i32 %v0_100024f4, i32* %v4_100024f4, align 4
  %v0_100024fc = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100024fc, i32* @global_var_1001e188.59, align 4
  %v0_10002500 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002500 = trunc i32 %v0_10002500 to i8
  store i8 %v1_10002500, i8* @global_var_1001e184.58, align 1
  store i32 268444936, i32* @lr, align 4
  %v2_10002504 = call i32 @function_1000bae4(i32 1, i32 8)
  %v3_10002508 = load i8, i8* @global_var_1001e184.58, align 1
  %v4_10002508 = zext i8 %v3_10002508 to i32
  store i32 %v4_10002508, i32* %r4.global-to-local, align 4
  store i32 %v2_10002504, i32* %r28.global-to-local, align 4
  store i32 9, i32* %r0.global-to-local, align 4
  %v3_1000251c = load i32, i32* @global_var_1001e188.59, align 4
  %v2_10002520 = inttoptr i32 %v2_10002504 to i32*
  store i32 268452936, i32* %v2_10002520, align 4
  %v0_10002524 = load i32, i32* %r4.global-to-local, align 4
  %v1_10002524 = mul i32 %v0_10002524, 4
  store i32 %v1_10002524, i32* %r4.global-to-local, align 4
  %v0_10002528 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002528 = trunc i32 %v0_10002528 to i8
  %v2_10002528 = load i32, i32* %r28.global-to-local, align 4
  %v3_10002528 = add i32 %v2_10002528, 4
  %v4_10002528 = inttoptr i32 %v3_10002528 to i8*
  store i8 %v1_10002528, i8* %v4_10002528, align 1
  %v0_1000252c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000252c = add i32 %v0_1000252c, 4
  store i32 %v1_1000252c, i32* %r4.global-to-local, align 4
  store i32 268444980, i32* @lr, align 4
  %v3_10002530 = call i32 @function_1000bc54(i32 %v3_1000251c, i32 %v1_1000252c, i32 268452936)
  %v3_10002534 = load i8, i8* @global_var_1001e184.58, align 1
  %v4_10002534 = zext i8 %v3_10002534 to i32
  store i32 %v3_10002530, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001e185.70 to i32), i32* %r0.global-to-local, align 4
  %v1_10002544 = mul nuw nsw i32 %v4_10002534, 4
  %v0_10002548 = load i32, i32* @r28, align 4
  %v3_10002548 = add i32 %v1_10002544, %v3_10002530
  %v4_10002548 = inttoptr i32 %v3_10002548 to i32*
  store i32 %v0_10002548, i32* %v4_10002548, align 4
  %v0_10002550 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10002550, i32* @global_var_1001e188.59, align 4
  %v0_10002554 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002554 = trunc i32 %v0_10002554 to i8
  store i8 %v1_10002554, i8* @global_var_1001e184.58, align 1
  store i32 268445020, i32* @lr, align 4
  %v2_10002558 = call i32 @function_1000bae4(i32 1, i32 8)
  %v3_1000255c = load i8, i8* @global_var_1001e184.58, align 1
  %v4_1000255c = zext i8 %v3_1000255c to i32
  store i32 %v4_1000255c, i32* %r4.global-to-local, align 4
  store i32 %v2_10002558, i32* %r28.global-to-local, align 4
  store i32 3, i32* %r0.global-to-local, align 4
  %v3_10002570 = load i32, i32* @global_var_1001e188.59, align 4
  %v2_10002574 = inttoptr i32 %v2_10002558 to i32*
  store i32 268451492, i32* %v2_10002574, align 4
  %v0_10002578 = load i32, i32* %r4.global-to-local, align 4
  %v1_10002578 = mul i32 %v0_10002578, 4
  store i32 %v1_10002578, i32* %r4.global-to-local, align 4
  %v0_1000257c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000257c = trunc i32 %v0_1000257c to i8
  %v2_1000257c = load i32, i32* %r28.global-to-local, align 4
  %v3_1000257c = add i32 %v2_1000257c, 4
  %v4_1000257c = inttoptr i32 %v3_1000257c to i8*
  store i8 %v1_1000257c, i8* %v4_1000257c, align 1
  %v0_10002580 = load i32, i32* %r4.global-to-local, align 4
  %v1_10002580 = add i32 %v0_10002580, 4
  store i32 %v1_10002580, i32* %r4.global-to-local, align 4
  store i32 268445064, i32* @lr, align 4
  %v3_10002584 = call i32 @function_1000bc54(i32 %v3_10002570, i32 %v1_10002580, i32 268451492)
  %v3_10002588 = load i8, i8* @global_var_1001e184.58, align 1
  %v4_10002588 = zext i8 %v3_10002588 to i32
  store i32 %v3_10002584, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001e185.70 to i32), i32* %r0.global-to-local, align 4
  %v1_10002598 = mul nuw nsw i32 %v4_10002588, 4
  %v0_1000259c = load i32, i32* @r28, align 4
  %v3_1000259c = add i32 %v1_10002598, %v3_10002584
  %v4_1000259c = inttoptr i32 %v3_1000259c to i32*
  store i32 %v0_1000259c, i32* %v4_1000259c, align 4
  %v0_100025a4 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100025a4, i32* @global_var_1001e188.59, align 4
  %v0_100025a8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100025a8 = trunc i32 %v0_100025a8 to i8
  store i8 %v1_100025a8, i8* @global_var_1001e184.58, align 1
  store i32 268445104, i32* @lr, align 4
  %v2_100025ac = call i32 @function_1000bae4(i32 1, i32 8)
  %v3_100025b0 = load i8, i8* @global_var_1001e184.58, align 1
  %v4_100025b0 = zext i8 %v3_100025b0 to i32
  store i32 %v4_100025b0, i32* %r4.global-to-local, align 4
  store i32 %v2_100025ac, i32* %r28.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v3_100025c4 = load i32, i32* @global_var_1001e188.59, align 4
  %v2_100025c8 = inttoptr i32 %v2_100025ac to i32*
  store i32 268449984, i32* %v2_100025c8, align 4
  %v0_100025cc = load i32, i32* %r4.global-to-local, align 4
  %v1_100025cc = mul i32 %v0_100025cc, 4
  store i32 %v1_100025cc, i32* %r4.global-to-local, align 4
  %v0_100025d0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100025d0 = trunc i32 %v0_100025d0 to i8
  %v2_100025d0 = load i32, i32* %r28.global-to-local, align 4
  %v3_100025d0 = add i32 %v2_100025d0, 4
  %v4_100025d0 = inttoptr i32 %v3_100025d0 to i8*
  store i8 %v1_100025d0, i8* %v4_100025d0, align 1
  %v0_100025d4 = load i32, i32* %r4.global-to-local, align 4
  %v1_100025d4 = add i32 %v0_100025d4, 4
  store i32 %v1_100025d4, i32* %r4.global-to-local, align 4
  store i32 268445148, i32* @lr, align 4
  %v3_100025d8 = call i32 @function_1000bc54(i32 %v3_100025c4, i32 %v1_100025d4, i32 268449984)
  %v3_100025dc = load i8, i8* @global_var_1001e184.58, align 1
  %v4_100025dc = zext i8 %v3_100025dc to i32
  store i32 %v3_100025d8, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001e185.70 to i32), i32* %r0.global-to-local, align 4
  %v1_100025ec = mul nuw nsw i32 %v4_100025dc, 4
  %v0_100025f0 = load i32, i32* @r28, align 4
  %v3_100025f0 = add i32 %v1_100025ec, %v3_100025d8
  %v4_100025f0 = inttoptr i32 %v3_100025f0 to i32*
  store i32 %v0_100025f0, i32* %v4_100025f0, align 4
  %v0_100025f8 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100025f8, i32* @global_var_1001e188.59, align 4
  %v0_100025fc = load i32, i32* %r0.global-to-local, align 4
  %v1_100025fc = trunc i32 %v0_100025fc to i8
  store i8 %v1_100025fc, i8* @global_var_1001e184.58, align 1
  store i32 268445188, i32* @lr, align 4
  %v2_10002600 = call i32 @function_1000bae4(i32 1, i32 8)
  %v3_10002604 = load i8, i8* @global_var_1001e184.58, align 1
  %v4_10002604 = zext i8 %v3_10002604 to i32
  store i32 %v4_10002604, i32* %r4.global-to-local, align 4
  store i32 %v2_10002600, i32* %r28.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v3_10002618 = load i32, i32* @global_var_1001e188.59, align 4
  %v2_1000261c = inttoptr i32 %v2_10002600 to i32*
  store i32 268448376, i32* %v2_1000261c, align 4
  %v0_10002620 = load i32, i32* %r4.global-to-local, align 4
  %v1_10002620 = mul i32 %v0_10002620, 4
  store i32 %v1_10002620, i32* %r4.global-to-local, align 4
  %v0_10002624 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002624 = trunc i32 %v0_10002624 to i8
  %v2_10002624 = load i32, i32* %r28.global-to-local, align 4
  %v3_10002624 = add i32 %v2_10002624, 4
  %v4_10002624 = inttoptr i32 %v3_10002624 to i8*
  store i8 %v1_10002624, i8* %v4_10002624, align 1
  %v0_10002628 = load i32, i32* %r4.global-to-local, align 4
  %v1_10002628 = add i32 %v0_10002628, 4
  store i32 %v1_10002628, i32* %r4.global-to-local, align 4
  store i32 268445232, i32* @lr, align 4
  %v3_1000262c = call i32 @function_1000bc54(i32 %v3_10002618, i32 %v1_10002628, i32 268448376)
  %v3_10002630 = load i8, i8* @global_var_1001e184.58, align 1
  %v4_10002630 = zext i8 %v3_10002630 to i32
  store i32 %v3_1000262c, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001e185.70 to i32), i32* %r0.global-to-local, align 4
  %v1_10002640 = mul nuw nsw i32 %v4_10002630, 4
  %v0_10002644 = load i32, i32* @r28, align 4
  %v3_10002644 = add i32 %v1_10002640, %v3_1000262c
  %v4_10002644 = inttoptr i32 %v3_10002644 to i32*
  store i32 %v0_10002644, i32* %v4_10002644, align 4
  %v0_1000264c = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000264c, i32* @global_var_1001e188.59, align 4
  %v0_10002650 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002650 = trunc i32 %v0_10002650 to i8
  store i8 %v1_10002650, i8* @global_var_1001e184.58, align 1
  store i32 268445272, i32* @lr, align 4
  %v2_10002654 = call i32 @function_1000bae4(i32 1, i32 8)
  %v3_10002658 = load i8, i8* @global_var_1001e184.58, align 1
  %v4_10002658 = zext i8 %v3_10002658 to i32
  store i32 %v4_10002658, i32* %r4.global-to-local, align 4
  store i32 %v2_10002654, i32* %r28.global-to-local, align 4
  store i32 6, i32* %r0.global-to-local, align 4
  %v3_1000266c = load i32, i32* @global_var_1001e188.59, align 4
  %v2_10002670 = inttoptr i32 %v2_10002654 to i32*
  store i32 268447012, i32* %v2_10002670, align 4
  %v0_10002674 = load i32, i32* %r4.global-to-local, align 4
  %v1_10002674 = mul i32 %v0_10002674, 4
  store i32 %v1_10002674, i32* %r4.global-to-local, align 4
  %v0_10002678 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002678 = trunc i32 %v0_10002678 to i8
  %v2_10002678 = load i32, i32* %r28.global-to-local, align 4
  %v3_10002678 = add i32 %v2_10002678, 4
  %v4_10002678 = inttoptr i32 %v3_10002678 to i8*
  store i8 %v1_10002678, i8* %v4_10002678, align 1
  %v0_1000267c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000267c = add i32 %v0_1000267c, 4
  store i32 %v1_1000267c, i32* %r4.global-to-local, align 4
  store i32 268445316, i32* @lr, align 4
  %v3_10002680 = call i32 @function_1000bc54(i32 %v3_1000266c, i32 %v1_1000267c, i32 268447012)
  %v3_10002684 = load i8, i8* @global_var_1001e184.58, align 1
  %v4_10002684 = zext i8 %v3_10002684 to i32
  store i32 %v3_10002680, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001e185.70 to i32), i32* %r0.global-to-local, align 4
  %v1_10002694 = mul nuw nsw i32 %v4_10002684, 4
  %v0_10002698 = load i32, i32* @r28, align 4
  %v3_10002698 = add i32 %v1_10002694, %v3_10002680
  %v4_10002698 = inttoptr i32 %v3_10002698 to i32*
  store i32 %v0_10002698, i32* %v4_10002698, align 4
  %v0_100026a0 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100026a0, i32* @global_var_1001e188.59, align 4
  %v0_100026a4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100026a4 = trunc i32 %v0_100026a4 to i8
  store i8 %v1_100026a4, i8* @global_var_1001e184.58, align 1
  store i32 268445356, i32* @lr, align 4
  %v2_100026a8 = call i32 @function_1000bae4(i32 1, i32 8)
  %v3_100026ac = load i8, i8* @global_var_1001e184.58, align 1
  %v4_100026ac = zext i8 %v3_100026ac to i32
  store i32 %v4_100026ac, i32* %r4.global-to-local, align 4
  store i32 %v2_100026a8, i32* %r28.global-to-local, align 4
  store i32 7, i32* %r0.global-to-local, align 4
  %v3_100026c0 = load i32, i32* @global_var_1001e188.59, align 4
  %v2_100026c4 = inttoptr i32 %v2_100026a8 to i32*
  store i32 268445540, i32* %v2_100026c4, align 4
  %v0_100026c8 = load i32, i32* %r4.global-to-local, align 4
  %v1_100026c8 = mul i32 %v0_100026c8, 4
  store i32 %v1_100026c8, i32* %r4.global-to-local, align 4
  %v0_100026cc = load i32, i32* %r0.global-to-local, align 4
  %v1_100026cc = trunc i32 %v0_100026cc to i8
  %v2_100026cc = load i32, i32* %r28.global-to-local, align 4
  %v3_100026cc = add i32 %v2_100026cc, 4
  %v4_100026cc = inttoptr i32 %v3_100026cc to i8*
  store i8 %v1_100026cc, i8* %v4_100026cc, align 1
  %v0_100026d0 = load i32, i32* %r4.global-to-local, align 4
  %v1_100026d0 = add i32 %v0_100026d0, 4
  store i32 %v1_100026d0, i32* %r4.global-to-local, align 4
  store i32 268445400, i32* @lr, align 4
  %v3_100026d4 = call i32 @function_1000bc54(i32 %v3_100026c0, i32 %v1_100026d0, i32 268445540)
  %v3_100026d8 = load i8, i8* @global_var_1001e184.58, align 1
  %v4_100026d8 = zext i8 %v3_100026d8 to i32
  store i32 %v3_100026d4, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001e185.70 to i32), i32* %r0.global-to-local, align 4
  %v1_100026e8 = mul nuw nsw i32 %v4_100026d8, 4
  %v0_100026ec = load i32, i32* @r28, align 4
  %v3_100026ec = add i32 %v1_100026e8, %v3_100026d4
  %v4_100026ec = inttoptr i32 %v3_100026ec to i32*
  store i32 %v0_100026ec, i32* %v4_100026ec, align 4
  %v0_100026f4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100026f4 = trunc i32 %v0_100026f4 to i8
  store i8 %v1_100026f4, i8* @global_var_1001e184.58, align 1
  %v0_100026f8 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100026f8, i32* @global_var_1001e188.59, align 4
  store i32 268445440, i32* @lr, align 4
  %v2_100026fc = call i32 @function_1000bae4(i32 1, i32 8)
  %v3_10002700 = load i8, i8* @global_var_1001e184.58, align 1
  %v4_10002700 = zext i8 %v3_10002700 to i32
  store i32 %v4_10002700, i32* %r4.global-to-local, align 4
  store i32 %v2_100026fc, i32* %r28.global-to-local, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  %v3_10002714 = load i32, i32* @global_var_1001e188.59, align 4
  %v2_10002718 = inttoptr i32 %v2_100026fc to i32*
  store i32 268436024, i32* %v2_10002718, align 4
  %v0_1000271c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000271c = mul i32 %v0_1000271c, 4
  store i32 %v1_1000271c, i32* %r4.global-to-local, align 4
  %v0_10002720 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002720 = trunc i32 %v0_10002720 to i8
  %v2_10002720 = load i32, i32* %r28.global-to-local, align 4
  %v3_10002720 = add i32 %v2_10002720, 4
  %v4_10002720 = inttoptr i32 %v3_10002720 to i8*
  store i8 %v1_10002720, i8* %v4_10002720, align 1
  %v0_10002724 = load i32, i32* %r4.global-to-local, align 4
  %v1_10002724 = add i32 %v0_10002724, 4
  store i32 %v1_10002724, i32* %r4.global-to-local, align 4
  store i32 268445484, i32* @lr, align 4
  %v3_10002728 = call i32 @function_1000bc54(i32 %v3_10002714, i32 %v1_10002724, i32 268436024)
  %v3_1000272c = load i8, i8* @global_var_1001e184.58, align 1
  %v4_1000272c = zext i8 %v3_1000272c to i32
  store i32 %v3_10002728, i32* @global_var_1001e188.59, align 4
  store i32 ptrtoint (i8* @global_var_1001e185.70 to i32), i32* %r0.global-to-local, align 4
  %v1_10002738 = mul nuw nsw i32 %v4_1000272c, 4
  %v0_1000273c = load i32, i32* @r28, align 4
  %v3_1000273c = add i32 %v1_10002738, %v3_10002728
  %v4_1000273c = inttoptr i32 %v3_1000273c to i32*
  store i32 %v0_1000273c, i32* %v4_1000273c, align 4
  %v0_10002744 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002744 = trunc i32 %v0_10002744 to i8
  store i8 %v1_10002744, i8* @global_var_1001e184.58, align 1
  store i32 %v0_100023e4, i32* %r0.global-to-local, align 4
  store i32 %v0_10002400, i32* @r28, align 4
  ret i32 1

; uselistorder directives
  uselistorder i32 ptrtoint (i8* @global_var_1001e185.70 to i32), { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_1001e184.58, { 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_10002764(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10002764:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-90 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_10002768 = load i32, i32* @lr, align 4
  store i32 %v0_10002768, i32* %r0.global-to-local, align 4
  %v0_1000276c = call i32 @__asm_mfcr()
  store i32 %v0_1000276c, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r25.global-to-local, align 4
  %v0_1000277c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1000276c, i32* %r18.global-to-local, align 4
  %v0_100027b0 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_100027b8 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_100027c0 = load i32, i32* @r30, align 4
  %v0_100027c4 = load i32, i32* @r31, align 4
  store i32 268445656, i32* @lr, align 4
  %v2_100027d4 = call i32 @function_1000bae4(i32 4, i32 4)
  store i32 %v2_100027d4, i32* %r19.global-to-local, align 4
  %v0_100027dc = load i32, i32* @r28, align 4
  %v0_100027e8 = load i32, i32* @r29, align 4
  store i32 %v0_100027e8, i32* %r3.global-to-local, align 4
  store i32 268445680, i32* @lr, align 4
  %v4_100027ec = inttoptr i32 %v0_100027dc to i32*
  %v5_100027ec = call i32 @function_1000235c(i32 %v0_100027e8, i32* %v4_100027ec, i32 2, i32 0)
  %v0_100027fc = load i32, i32* @r28, align 4
  %v1_10002800 = urem i32 %v5_100027ec, 256
  store i32 %v1_10002800, i32* %r14.global-to-local, align 4
  %v0_10002804 = load i32, i32* @r29, align 4
  store i32 %v0_10002804, i32* %r3.global-to-local, align 4
  store i32 268445708, i32* @lr, align 4
  %v4_10002808 = inttoptr i32 %v0_100027fc to i32*
  %v5_10002808 = call i32 @function_1000235c(i32 %v0_10002804, i32* %v4_10002808, i32 3, i32 65535)
  %v0_1000280c = load i32, i32* @r28, align 4
  store i32 %v5_10002808, i32* %r24.global-to-local, align 4
  %v0_1000281c = load i32, i32* @r29, align 4
  store i32 %v0_1000281c, i32* %r3.global-to-local, align 4
  store i32 268445732, i32* @lr, align 4
  %v4_10002820 = inttoptr i32 %v0_1000280c to i32*
  %v5_10002820 = call i32 @function_1000235c(i32 %v0_1000281c, i32* %v4_10002820, i32 4, i32 64)
  %v0_10002824 = load i32, i32* @r28, align 4
  %v1_10002830 = urem i32 %v5_10002820, 256
  store i32 %v1_10002830, i32* %r20.global-to-local, align 4
  %v0_10002834 = load i32, i32* @r29, align 4
  store i32 %v0_10002834, i32* %r3.global-to-local, align 4
  store i32 268445756, i32* @lr, align 4
  %v4_10002838 = inttoptr i32 %v0_10002824 to i32*
  %v5_10002838 = call i32 @function_1000235c(i32 %v0_10002834, i32* %v4_10002838, i32 5, i32 1)
  %v0_10002848 = load i32, i32* @r28, align 4
  %v1_1000284c = urem i32 %v5_10002838, 256
  store i32 %v1_1000284c, i32* @r31, align 4
  %v0_10002850 = load i32, i32* @r29, align 4
  store i32 %v0_10002850, i32* %r3.global-to-local, align 4
  store i32 268445784, i32* @lr, align 4
  %v4_10002854 = inttoptr i32 %v0_10002848 to i32*
  %v5_10002854 = call i32 @function_1000235c(i32 %v0_10002850, i32* %v4_10002854, i32 6, i32 65535)
  %v0_1000285c = load i32, i32* @r28, align 4
  store i32 %v5_10002854, i32* %r26.global-to-local, align 4
  %v0_1000286c = load i32, i32* @r29, align 4
  store i32 %v0_1000286c, i32* %r3.global-to-local, align 4
  store i32 268445812, i32* @lr, align 4
  %v4_10002870 = inttoptr i32 %v0_1000285c to i32*
  %v5_10002870 = call i32 @function_1000235c(i32 %v0_1000286c, i32* %v4_10002870, i32 7, i32 65535)
  %v0_10002874 = load i32, i32* @r28, align 4
  store i32 %v5_10002870, i32* %r27.global-to-local, align 4
  %v0_10002884 = load i32, i32* @r29, align 4
  store i32 %v0_10002884, i32* %r3.global-to-local, align 4
  store i32 268445836, i32* @lr, align 4
  %v4_10002888 = inttoptr i32 %v0_10002874 to i32*
  %v5_10002888 = call i32 @function_1000235c(i32 %v0_10002884, i32* %v4_10002888, i32 0, i32 512)
  %v0_1000288c = load i32, i32* @r28, align 4
  store i32 %v5_10002888, i32* %r15.global-to-local, align 4
  %v0_1000289c = load i32, i32* @r29, align 4
  store i32 %v0_1000289c, i32* %r3.global-to-local, align 4
  store i32 268445860, i32* @lr, align 4
  %v4_100028a0 = inttoptr i32 %v0_1000288c to i32*
  %v5_100028a0 = call i32 @function_1000235c(i32 %v0_1000289c, i32* %v4_100028a0, i32 1, i32 1)
  %v0_100028a4 = load i32, i32* @r28, align 4
  %v1_100028b0 = urem i32 %v5_100028a0, 256
  store i32 %v1_100028b0, i32* %r21.global-to-local, align 4
  %v0_100028b4 = load i32, i32* @r29, align 4
  store i32 %v0_100028b4, i32* %r3.global-to-local, align 4
  store i32 268445884, i32* @lr, align 4
  %v4_100028b8 = inttoptr i32 %v0_100028a4 to i32*
  %v5_100028b8 = call i32 @function_1000235c(i32 %v0_100028b4, i32* %v4_100028b8, i32 19, i32 0)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_100028c0 = load i32, i32* @global_var_1001e180.71, align 4
  %v0_100028c4 = load i32, i32* @r28, align 4
  store i32 %v5_100028b8, i32* %r30.global-to-local, align 4
  %v0_100028d0 = load i32, i32* @r29, align 4
  store i32 %v0_100028d0, i32* %r3.global-to-local, align 4
  store i32 268445912, i32* @lr, align 4
  %v4_100028d4 = inttoptr i32 %v0_100028c4 to i32*
  %v5_100028d4 = call i32 @function_1000235c(i32 %v0_100028d0, i32* %v4_100028d4, i32 25, i32 %v3_100028c0)
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268445932, i32* @lr, align 4
  %v3_100028e8 = call i32 @function_1000b758(i32 2, i32 3, i32 6)
  store i32 %v3_100028e8, i32* %r3.global-to-local, align 4
  %v3_100028ec = icmp eq i32 %v3_100028e8, -1
  store i1 %v3_100028ec, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_100028e8, i32* %r23.global-to-local, align 4
  br i1 %v3_100028ec, label %dec_label_pc_10002a90, label %dec_label_pc_100028f8

dec_label_pc_100028f8:                            ; preds = %dec_label_pc_10002764
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10002904 = ptrtoint i32* %stack_var_-104 to i32
  store i32 1, i32* %stack_var_-104, align 4
  store i32 268445972, i32* @lr, align 4
  %v5_10002910 = call i32 @function_1000b71c(i32 0, i32 3, i32 %v2_10002904, i32 4, i32 4)
  store i32 %v5_10002910, i32* %r3.global-to-local, align 4
  %v3_10002914 = icmp eq i32 %v5_10002910, -1
  store i1 %v3_10002914, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10002914, label %dec_label_pc_10002a88, label %dec_label_pc_1000291c

dec_label_pc_1000291c:                            ; preds = %dec_label_pc_100028f8
  %v0_1000291c = load i32, i32* %r18.global-to-local, align 4
  %v1_1000291c = icmp slt i32 %v0_1000291c, 0
  %v3_1000291c = icmp eq i32 %v0_1000291c, 0
  store i1 %v1_1000291c, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_1000291c, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  %v0_10002928 = load i32, i32* %r24.global-to-local, align 4
  %v1_10002928 = urem i32 %v0_10002928, 65536
  store i32 %v1_10002928, i32* %r24.global-to-local, align 4
  %v0_1000292c = load i32, i32* %r26.global-to-local, align 4
  %v1_1000292c = urem i32 %v0_1000292c, 65536
  store i32 %v1_1000292c, i32* %r16.global-to-local, align 4
  %v0_10002930 = load i32, i32* %r27.global-to-local, align 4
  %v1_10002930 = urem i32 %v0_10002930, 65536
  store i32 %v1_10002930, i32* %r17.global-to-local, align 4
  %v0_10002934 = load i32, i32* %r30.global-to-local, align 4
  %v1_10002934 = urem i32 %v0_10002934, 256
  store i32 %v1_10002934, i32* %r3.global-to-local, align 4
  %tmp37 = icmp slt i32 %v0_1000291c, 1
  br i1 %tmp37, label %dec_label_pc_10002af0, label %dec_label_pc_1000293c

dec_label_pc_1000293c:                            ; preds = %dec_label_pc_1000291c
  %v0_1000293c = load i32, i32* @r31, align 4
  %v3_1000293c = icmp eq i32 %v0_1000293c, 0
  store i1 %v3_1000293c, i1* %cr2_eq.global-to-local, align 1
  %v3_10002940 = icmp eq i32 %v1_10002934, 0
  store i1 %v3_10002940, i1* %cr3_eq.global-to-local, align 1
  %v0_10002944 = load i32, i32* %r15.global-to-local, align 4
  %v1_10002944 = urem i32 %v0_10002944, 65536
  %v0_10002928.not = or i32 %v0_10002928, -65536
  %v1_10002948 = xor i32 %v0_10002928.not, 65535
  store i32 %v1_10002948, i32* %r11.global-to-local, align 4
  %v1_10002950 = add nuw nsw i32 %v1_10002944, 66
  store i32 %v1_10002950, i32* %r0.global-to-local, align 4
  %v1_10002954 = add nuw nsw i32 %v1_10002944, 28
  store i32 %v1_10002954, i32* %r9.global-to-local, align 4
  %fold = add i32 %v0_10002944, 66
  %v1_10002958 = urem i32 %fold, 65536
  store i32 %v1_10002958, i32* %r22.global-to-local, align 4
  %fold8 = add i32 %v0_10002944, 28
  %v1_1000295c = urem i32 %fold8, 65536
  store i32 %v1_1000295c, i32* %r26.global-to-local, align 4
  %v1_10002960 = urem i32 %v1_10002948, 65536
  store i32 %v1_10002960, i32* %r27.global-to-local, align 4
  %fold9 = add i32 %v0_10002944, 8
  %v1_10002964 = urem i32 %fold9, 65536
  store i32 %v1_10002964, i32* @r28, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10002998

dec_label_pc_10002970:                            ; preds = %dec_label_pc_10002a64
  %v0_10002970 = load i32, i32* %r31.global-to-local, align 4
  %v1_10002970 = add i32 %v0_10002970, 16
  %v2_10002970 = inttoptr i32 %v1_10002970 to i32*
  %v3_10002970 = load i32, i32* %v2_10002970, align 4
  store i32 %v3_10002970, i32* %r0.global-to-local, align 4
  %v1_10002974 = load i32, i32* %r30.global-to-local, align 4
  %v2_10002974 = add i32 %v1_10002974, 16
  %v3_10002974 = inttoptr i32 %v2_10002974 to i32*
  store i32 %v3_10002970, i32* %v3_10002974, align 4
  br label %dec_label_pc_10002978

dec_label_pc_10002978:                            ; preds = %dec_label_pc_10002a80, %dec_label_pc_10002970
  %v3_10002978 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10002978, i32* %r9.global-to-local, align 4
  %v0_1000297c = load i32, i32* @r28, align 4
  %v1_1000297c = trunc i32 %v0_1000297c to i16
  %v2_1000297c = load i32, i32* %r29.global-to-local, align 4
  %v3_1000297c = add i32 %v2_1000297c, 4
  %v4_1000297c = inttoptr i32 %v3_1000297c to i16*
  store i16 %v1_1000297c, i16* %v4_1000297c, align 2
  %v0_10002980 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002980 = add i32 %v0_10002980, 1
  store i32 %v1_10002980, i32* %r31.global-to-local, align 4
  %v0_10002984 = load i32, i32* %r16.global-to-local, align 4
  %v1_10002984 = trunc i32 %v0_10002984 to i16
  %v2_10002984 = load i32, i32* %r29.global-to-local, align 4
  %v3_10002984 = inttoptr i32 %v2_10002984 to i16*
  store i16 %v1_10002984, i16* %v3_10002984, align 2
  %v0_10002988 = load i32, i32* %r31.global-to-local, align 4
  %v1_10002988 = load i32, i32* %r18.global-to-local, align 4
  %v2_10002988 = icmp slt i32 %v0_10002988, %v1_10002988
  %v4_10002988 = icmp eq i32 %v0_10002988, %v1_10002988
  store i1 %v4_10002988, i1* %cr7_eq.global-to-local, align 1
  %v0_1000298c = load i32, i32* %r17.global-to-local, align 4
  %v1_1000298c = trunc i32 %v0_1000298c to i16
  %v2_1000298c = load i32, i32* %r29.global-to-local, align 4
  %v3_1000298c = add i32 %v2_1000298c, 2
  %v4_1000298c = inttoptr i32 %v3_1000298c to i16*
  store i16 %v1_1000298c, i16* %v4_1000298c, align 2
  %v0_10002990 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10002990, i32* %stack_var_-104, align 4
  br i1 %v2_10002988, label %dec_label_pc_10002998, label %dec_label_pc_10002af4

dec_label_pc_10002998:                            ; preds = %dec_label_pc_10002978, %dec_label_pc_1000293c
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268446116, i32* @lr, align 4
  %v2_100029a0 = call i32 @function_1000bae4(i32 1510, i32 4)
  store i32 %v2_100029a0, i32* %r3.global-to-local, align 4
  %v3_100029a4 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_100029a4, i32* %r9.global-to-local, align 4
  %v0_100029a8 = load i32, i32* @r31, align 4
  %v1_100029a8 = mul i32 %v0_100029a8, 4
  store i32 %v1_100029a8, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r11.global-to-local, align 4
  %v1_100029b0 = load i32, i32* %r19.global-to-local, align 4
  %v3_100029b0 = add i32 %v1_100029b0, %v1_100029a8
  %v4_100029b0 = inttoptr i32 %v3_100029b0 to i32*
  store i32 %v2_100029a0, i32* %v4_100029b0, align 4
  %v0_100029b4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100029b4 = mul i32 %v0_100029b4, 4
  store i32 %v1_100029b4, i32* %r9.global-to-local, align 4
  %v1_100029b8 = load i32, i32* %r19.global-to-local, align 4
  %v2_100029b8 = add i32 %v1_100029b8, %v1_100029b4
  %v3_100029b8 = inttoptr i32 %v2_100029b8 to i32*
  %v4_100029b8 = load i32, i32* %v3_100029b8, align 4
  store i32 %v4_100029b8, i32* %r31.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_100029c0 = inttoptr i32 %v4_100029b8 to i32*
  %v2_100029c0 = load i32, i32* %v1_100029c0, align 4
  store i32 %v2_100029c0, i32* %r0.global-to-local, align 4
  %v1_100029c4 = add i32 %v4_100029b8, 38
  store i32 %v1_100029c4, i32* %r30.global-to-local, align 4
  %v0_100029c8 = load i32, i32* %r20.global-to-local, align 4
  %v1_100029c8 = trunc i32 %v0_100029c8 to i8
  %v3_100029c8 = add i32 %v4_100029b8, 8
  %v4_100029c8 = inttoptr i32 %v3_100029c8 to i8*
  store i8 %v1_100029c8, i8* %v4_100029c8, align 1
  %v0_100029cc = load i32, i32* %r31.global-to-local, align 4
  %v1_100029cc = add i32 %v0_100029cc, 58
  store i32 %v1_100029cc, i32* %r29.global-to-local, align 4
  %v1_100029d0 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100029d0, i32* %r0.global-to-local, align 4
  %v0_100029d4 = load i32, i32* %r24.global-to-local, align 4
  %v1_100029d4 = trunc i32 %v0_100029d4 to i16
  %v2_100029d4 = load i32, i32* %r31.global-to-local, align 4
  %v3_100029d4 = add i32 %v2_100029d4, 4
  %v4_100029d4 = inttoptr i32 %v3_100029d4 to i16*
  store i16 %v1_100029d4, i16* %v4_100029d4, align 2
  %v1_100029d8 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_100029d8, i32* %r0.global-to-local, align 4
  %v0_100029dc = load i32, i32* %r31.global-to-local, align 4
  %v1_100029dc = add i32 %v0_100029dc, 20
  store i32 %v1_100029dc, i32* %r9.global-to-local, align 4
  %v2_100029e0 = inttoptr i32 %v0_100029dc to i32*
  store i32 %v1_100029d8, i32* %v2_100029e0, align 4
  %v0_100029e4 = load i32, i32* %r31.global-to-local, align 4
  %v1_100029e4 = add i32 %v0_100029e4, 24
  store i32 %v1_100029e4, i32* %r11.global-to-local, align 4
  %v0_100029e8 = load i32, i32* %r14.global-to-local, align 4
  %v1_100029e8 = trunc i32 %v0_100029e8 to i8
  %v3_100029e8 = add i32 %v0_100029e4, 1
  %v4_100029e8 = inttoptr i32 %v3_100029e8 to i8*
  store i8 %v1_100029e8, i8* %v4_100029e8, align 1
  %v0_100029ec = load i32, i32* %r22.global-to-local, align 4
  %v1_100029ec = trunc i32 %v0_100029ec to i16
  %v2_100029ec = load i32, i32* %r31.global-to-local, align 4
  %v3_100029ec = add i32 %v2_100029ec, 2
  %v4_100029ec = inttoptr i32 %v3_100029ec to i16*
  store i16 %v1_100029ec, i16* %v4_100029ec, align 2
  %v0_100029f0 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_100029f0, label %dec_label_pc_100029fc, label %dec_label_pc_100029f4

dec_label_pc_100029f4:                            ; preds = %dec_label_pc_10002998
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_100029f8 = load i32, i32* %r31.global-to-local, align 4
  %v3_100029f8 = add i32 %v2_100029f8, 6
  %v4_100029f8 = inttoptr i32 %v3_100029f8 to i16*
  store i16 16384, i16* %v4_100029f8, align 2
  br label %dec_label_pc_100029fc

dec_label_pc_100029fc:                            ; preds = %dec_label_pc_10002998, %dec_label_pc_100029f4
  %v2_10002a00 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002a00 = add i32 %v2_10002a00, 9
  %v4_10002a00 = inttoptr i32 %v3_10002a00 to i8*
  store i8 47, i8* %v4_10002a00, align 1
  store i32 25944, i32* %r0.global-to-local, align 4
  %v2_10002a08 = load i32, i32* %r9.global-to-local, align 4
  %v3_10002a08 = add i32 %v2_10002a08, 2
  %v4_10002a08 = inttoptr i32 %v3_10002a08 to i16*
  store i16 25944, i16* %v4_10002a08, align 2
  %v2_10002a10 = load i32, i32* %r11.global-to-local, align 4
  %v3_10002a10 = add i32 %v2_10002a10, 12
  %v4_10002a10 = inttoptr i32 %v3_10002a10 to i16*
  store i16 2048, i16* %v4_10002a10, align 2
  %v3_10002a14 = load i32, i32* %stack_var_-104, align 4
  store i32 %v5_100028d4, i32* %r11.global-to-local, align 4
  %v1_10002a1c = mul i32 %v3_10002a14, 24
  store i32 %v1_10002a1c, i32* %r9.global-to-local, align 4
  %v0_10002a20 = load i32, i32* %r31.global-to-local, align 4
  %v1_10002a20 = add i32 %v0_10002a20, 38
  %v2_10002a20 = inttoptr i32 %v1_10002a20 to i32*
  %v3_10002a20 = load i32, i32* %v2_10002a20, align 4
  store i32 %v3_10002a20, i32* %r0.global-to-local, align 4
  %v2_10002a24 = add i32 %v0_10002a20, 12
  %v3_10002a24 = inttoptr i32 %v2_10002a24 to i32*
  store i32 %v5_100028d4, i32* %v3_10002a24, align 4
  store i32 4, i32* %r11.global-to-local, align 4
  %v0_10002a2c = load i32, i32* %r9.global-to-local, align 4
  %v1_10002a2c = load i32, i32* %r25.global-to-local, align 4
  %v2_10002a2c = add i32 %v1_10002a2c, %v0_10002a2c
  store i32 %v2_10002a2c, i32* %r9.global-to-local, align 4
  %v1_10002a30 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10002a30, i32* %r0.global-to-local, align 4
  %v0_10002a34 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002a34 = add i32 %v0_10002a34, 16
  %v2_10002a34 = inttoptr i32 %v1_10002a34 to i32*
  %v3_10002a34 = load i32, i32* %v2_10002a34, align 4
  store i32 %v3_10002a34, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10002a3c = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10002a3c, i32* %r0.global-to-local, align 4
  %v1_10002a40 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002a40 = add i32 %v1_10002a40, 38
  %v3_10002a40 = inttoptr i32 %v2_10002a40 to i32*
  store i32 %v1_10002a3c, i32* %v3_10002a40, align 4
  %v0_10002a44 = load i32, i32* %r11.global-to-local, align 4
  %v1_10002a44 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002a44 = add i32 %v1_10002a44, 16
  %v3_10002a44 = inttoptr i32 %v2_10002a44 to i32*
  store i32 %v0_10002a44, i32* %v3_10002a44, align 4
  %v0_10002a48 = load i32, i32* %r14.global-to-local, align 4
  %v1_10002a48 = trunc i32 %v0_10002a48 to i8
  %v2_10002a48 = load i32, i32* %r30.global-to-local, align 4
  %v3_10002a48 = add i32 %v2_10002a48, 1
  %v4_10002a48 = inttoptr i32 %v3_10002a48 to i8*
  store i8 %v1_10002a48, i8* %v4_10002a48, align 1
  %v0_10002a4c = load i32, i32* %r26.global-to-local, align 4
  %v1_10002a4c = trunc i32 %v0_10002a4c to i16
  %v2_10002a4c = load i32, i32* %r30.global-to-local, align 4
  %v3_10002a4c = add i32 %v2_10002a4c, 2
  %v4_10002a4c = inttoptr i32 %v3_10002a4c to i16*
  store i16 %v1_10002a4c, i16* %v4_10002a4c, align 2
  %v0_10002a50 = load i32, i32* %r27.global-to-local, align 4
  %v1_10002a50 = trunc i32 %v0_10002a50 to i16
  %v2_10002a50 = load i32, i32* %r30.global-to-local, align 4
  %v3_10002a50 = add i32 %v2_10002a50, 4
  %v4_10002a50 = inttoptr i32 %v3_10002a50 to i16*
  store i16 %v1_10002a50, i16* %v4_10002a50, align 2
  %v0_10002a54 = load i32, i32* %r20.global-to-local, align 4
  %v1_10002a54 = trunc i32 %v0_10002a54 to i8
  %v2_10002a54 = load i32, i32* %r30.global-to-local, align 4
  %v3_10002a54 = add i32 %v2_10002a54, 8
  %v4_10002a54 = inttoptr i32 %v3_10002a54 to i8*
  store i8 %v1_10002a54, i8* %v4_10002a54, align 1
  %v0_10002a58 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002a58, label %dec_label_pc_10002a64, label %dec_label_pc_10002a5c

dec_label_pc_10002a5c:                            ; preds = %dec_label_pc_100029fc
  store i32 16384, i32* %r11.global-to-local, align 4
  %v2_10002a60 = load i32, i32* %r30.global-to-local, align 4
  %v3_10002a60 = add i32 %v2_10002a60, 6
  %v4_10002a60 = inttoptr i32 %v3_10002a60 to i16*
  store i16 16384, i16* %v4_10002a60, align 2
  br label %dec_label_pc_10002a64

dec_label_pc_10002a64:                            ; preds = %dec_label_pc_100029fc, %dec_label_pc_10002a5c
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_10002a68 = load i32, i32* %r30.global-to-local, align 4
  %v3_10002a68 = add i32 %v2_10002a68, 9
  %v4_10002a68 = inttoptr i32 %v3_10002a68 to i8*
  store i8 17, i8* %v4_10002a68, align 1
  %v0_10002a6c = call i32 @function_1000723c()
  store i32 %v0_10002a6c, i32* %r3.global-to-local, align 4
  %v1_10002a70 = add i32 %v0_10002a6c, -1024
  store i32 %v1_10002a70, i32* %r0.global-to-local, align 4
  %v1_10002a74 = load i32, i32* %r30.global-to-local, align 4
  %v2_10002a74 = add i32 %v1_10002a74, 12
  %v3_10002a74 = inttoptr i32 %v2_10002a74 to i32*
  store i32 %v0_10002a6c, i32* %v3_10002a74, align 4
  %v0_10002a78 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002a78 = sub i32 -1, %v0_10002a78
  store i32 %v1_10002a78, i32* %r0.global-to-local, align 4
  %v0_10002a7c = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002a7c, label %dec_label_pc_10002a80, label %dec_label_pc_10002970

dec_label_pc_10002a80:                            ; preds = %dec_label_pc_10002a64
  %v1_10002a80 = load i32, i32* %r30.global-to-local, align 4
  %v2_10002a80 = add i32 %v1_10002a80, 16
  %v3_10002a80 = inttoptr i32 %v2_10002a80 to i32*
  store i32 %v1_10002a78, i32* %v3_10002a80, align 4
  br label %dec_label_pc_10002978

dec_label_pc_10002a88:                            ; preds = %dec_label_pc_100028f8
  %v0_10002a88 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10002a88, i32* %r3.global-to-local, align 4
  store i32 268446352, i32* @lr, align 4
  %v0_10002a8c = call i32 @function_1000a98c()
  store i32 %v0_10002a8c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002a90

dec_label_pc_10002a90:                            ; preds = %dec_label_pc_10002764, %dec_label_pc_10002a88
  store i32 %v0_1000277c, i32* %r0.global-to-local, align 4
  %v1_10002aa4 = call %0 @__asm_mtcrf(i32 56, i32 %v0_1000276c)
  store i32 %v0_100027b0, i32* %r28.global-to-local, align 4
  store i32 %v0_100027b8, i32* %r29.global-to-local, align 4
  store i32 %v0_100027c0, i32* %r30.global-to-local, align 4
  store i32 %v0_100027c4, i32* %r31.global-to-local, align 4
  %v0_10002aec = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10002aec

dec_label_pc_10002af0:                            ; preds = %dec_label_pc_1000291c
  %v3_10002af0 = icmp eq i32 %v1_10002934, 0
  store i1 %v3_10002af0, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_10002af4

dec_label_pc_10002af4:                            ; preds = %dec_label_pc_10002978, %dec_label_pc_10002af0
  store i32 %v5_100028d4, i32* %r0.global-to-local, align 4
  %v0_10002af8 = load i32, i32* %r21.global-to-local, align 4
  %v3_10002af8 = icmp eq i32 %v0_10002af8, 0
  store i1 %v3_10002af8, i1* %cr2_eq.global-to-local, align 1
  %v2_10002afc = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_10002afc, i32* %r14.global-to-local, align 4
  %v0_10002b00 = load i32, i32* %r15.global-to-local, align 4
  %v1_10002b00 = add i32 %v0_10002b00, 8
  store i32 %v1_10002b00, i32* %r21.global-to-local, align 4
  %v3_10002b04 = icmp eq i32 %v5_100028d4, -1
  store i1 %v3_10002b04, i1* %cr7_eq.global-to-local, align 1
  %v1_10002b08 = add i32 %v0_10002b00, 66
  store i32 %v1_10002b08, i32* %r22.global-to-local, align 4
  %v0_10002b0c = call i32 @__asm_mfcr()
  store i32 %v0_10002b0c, i32* %r3.global-to-local, align 4
  %v1_10002b10 = mul i32 %v0_10002b0c, 268435456
  store i32 %v1_10002b10, i32* %r20.global-to-local, align 4
  %v2_10002ba4 = ptrtoint i32* %stack_var_-100 to i32
  %v2_10002bc8 = ptrtoint i32* %stack_var_-92 to i32
  %v2_10002bd8 = ptrtoint i32* %stack_var_-90 to i32
  %v0_10002b14.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10002b14.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10002b14.outer

dec_label_pc_10002b14.outer:                      ; preds = %dec_label_pc_10002c78, %dec_label_pc_10002af4
  %v1_10002b14.ph = phi i1 [ %v1_10002b14.pre, %dec_label_pc_10002af4 ], [ %v1_10002c78, %dec_label_pc_10002c78 ]
  %v0_10002b14.ph = phi i1 [ %v0_10002b14.pre, %dec_label_pc_10002af4 ], [ %v0_10002c78, %dec_label_pc_10002c78 ]
  %v2_10002b14 = or i1 %v1_10002b14.ph, %v0_10002b14.ph
  br label %dec_label_pc_10002b14

dec_label_pc_10002b14:                            ; preds = %dec_label_pc_10002b14.outer, %dec_label_pc_10002b14
  br i1 %v2_10002b14, label %dec_label_pc_10002b14, label %dec_label_pc_10002b18

dec_label_pc_10002b18:                            ; preds = %dec_label_pc_10002b14, %dec_label_pc_10002c78
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10002b28

dec_label_pc_10002b28:                            ; preds = %dec_label_pc_10002be8, %dec_label_pc_10002b18
  %v0_10002b28 = phi i32 [ %v1_10002c68, %dec_label_pc_10002be8 ], [ 0, %dec_label_pc_10002b18 ]
  %v1_10002b28 = mul i32 %v0_10002b28, 24
  store i32 %v1_10002b28, i32* %r0.global-to-local, align 4
  %v1_10002b2c = mul i32 %v0_10002b28, 4
  store i32 %v1_10002b2c, i32* %r11.global-to-local, align 4
  %v1_10002b30 = load i32, i32* %r19.global-to-local, align 4
  %v2_10002b30 = add i32 %v1_10002b30, %v1_10002b2c
  %v3_10002b30 = inttoptr i32 %v2_10002b30 to i32*
  %v4_10002b30 = load i32, i32* %v3_10002b30, align 4
  store i32 %v4_10002b30, i32* %r28.global-to-local, align 4
  %v1_10002b34 = load i32, i32* %r25.global-to-local, align 4
  %v2_10002b34 = add i32 %v1_10002b34, %v1_10002b28
  %v1_10002b38 = add i32 %v2_10002b34, 20
  %v2_10002b38 = inttoptr i32 %v1_10002b38 to i8*
  %v3_10002b38 = load i8, i8* %v2_10002b38, align 1
  %v4_10002b38 = zext i8 %v3_10002b38 to i32
  store i32 %v4_10002b38, i32* %r9.global-to-local, align 4
  %v1_10002b3c = add i32 %v4_10002b30, 24
  store i32 %v1_10002b3c, i32* @r30, align 4
  %v1_10002b40 = add i32 %v4_10002b30, 38
  store i32 %v1_10002b40, i32* @r31, align 4
  %v1_10002b44 = add i32 %v4_10002b30, 58
  store i32 %v1_10002b44, i32* %r27.global-to-local, align 4
  %v3_10002b48 = icmp eq i8 %v3_10002b38, 31
  store i1 %v3_10002b48, i1* %cr7_eq.global-to-local, align 1
  %tmp39 = icmp ult i8 %v3_10002b38, 32
  br i1 %tmp39, label %dec_label_pc_10002c80, label %dec_label_pc_10002b50

dec_label_pc_10002b50:                            ; preds = %dec_label_pc_10002b28
  %v0_10002b50 = load i32, i32* %r20.global-to-local, align 4
  %v1_10002b50 = mul i32 %v0_10002b50, 16
  %v2_10002b50 = udiv i32 %v0_10002b50, 268435456
  %v3_10002b50 = or i32 %v2_10002b50, %v1_10002b50
  store i32 %v3_10002b50, i32* %r20.global-to-local, align 4
  %v1_10002b54 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10002b50)
  %v1_10002b58 = mul nuw i32 %v2_10002b50, 268435456
  %v2_10002b58 = urem i32 %v0_10002b50, 268435456
  %v3_10002b58 = or i32 %v1_10002b58, %v2_10002b58
  store i32 %v3_10002b58, i32* %r20.global-to-local, align 4
  %v0_10002b5c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10002b5c, label %dec_label_pc_10002cb4, label %dec_label_pc_10002b60

dec_label_pc_10002b60:                            ; preds = %dec_label_pc_10002c80, %dec_label_pc_10002b50
  store i32 65535, i32* @r29, align 4
  %v0_10002b68 = load i32, i32* %r24.global-to-local, align 4
  %v4_10002b68 = icmp eq i32 %v0_10002b68, 65535
  store i1 %v4_10002b68, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10002b68, label %dec_label_pc_10002ccc, label %dec_label_pc_10002b70

dec_label_pc_10002b70:                            ; preds = %dec_label_pc_10002cb4, %dec_label_pc_10002b60
  %v1_10002b70 = phi i32 [ %v1_10002cc4, %dec_label_pc_10002cb4 ], [ 65535, %dec_label_pc_10002b60 ]
  %v0_10002b70 = load i32, i32* %r16.global-to-local, align 4
  %v4_10002b70 = icmp eq i32 %v0_10002b70, %v1_10002b70
  store i1 %v4_10002b70, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10002b70, label %dec_label_pc_10002cec, label %dec_label_pc_10002b78

dec_label_pc_10002b78:                            ; preds = %dec_label_pc_10002ccc.dec_label_pc_10002b78_crit_edge, %dec_label_pc_10002b70
  %v1_10002b78 = phi i32 [ %v1_10002b78.pre, %dec_label_pc_10002ccc.dec_label_pc_10002b78_crit_edge ], [ %v1_10002b70, %dec_label_pc_10002b70 ]
  %v0_10002b78 = load i32, i32* %r17.global-to-local, align 4
  %v4_10002b78 = icmp eq i32 %v0_10002b78, %v1_10002b78
  store i1 %v4_10002b78, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10002b78, label %dec_label_pc_10002cfc, label %dec_label_pc_10002b80

dec_label_pc_10002b80:                            ; preds = %dec_label_pc_10002cec, %dec_label_pc_10002b78
  %v0_10002b80 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002b80, label %dec_label_pc_10002d08, label %dec_label_pc_10002b84

dec_label_pc_10002b84:                            ; preds = %dec_label_pc_10002cfc, %dec_label_pc_10002b80
  %v0_10002b84 = load i32, i32* %r28.global-to-local, align 4
  %v1_10002b84 = add i32 %v0_10002b84, 16
  %v2_10002b84 = inttoptr i32 %v1_10002b84 to i32*
  %v3_10002b84 = load i32, i32* %v2_10002b84, align 4
  store i32 %v3_10002b84, i32* %r0.global-to-local, align 4
  %v1_10002b88 = load i32, i32* @r31, align 4
  %v2_10002b88 = add i32 %v1_10002b88, 16
  %v3_10002b88 = inttoptr i32 %v2_10002b88 to i32*
  store i32 %v3_10002b84, i32* %v3_10002b88, align 4
  br label %dec_label_pc_10002b8c

dec_label_pc_10002b8c:                            ; preds = %dec_label_pc_10002d08, %dec_label_pc_10002b84
  %v0_10002b8c = call i32 @function_1000723c()
  store i32 %v0_10002b8c, i32* %r3.global-to-local, align 4
  store i32 %v0_10002b8c, i32* %stack_var_-100, align 4
  %v0_10002b94 = call i32 @function_1000723c()
  store i32 %v0_10002b94, i32* %r3.global-to-local, align 4
  store i32 %v0_10002b94, i32* %stack_var_-96, align 4
  %v0_10002b9c = call i32 @function_1000723c()
  store i32 %v0_10002b9c, i32* %stack_var_-92, align 4
  %v0_10002ba8 = load i32, i32* @r30, align 4
  store i32 %v0_10002ba8, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10002bb4.72 to i32), i32* @lr, align 4
  %v3_10002bb0 = call i32 @function_1000a184(i32 %v0_10002ba8, i32 %v2_10002ba4, i32 4)
  %v0_10002bb4 = load i32, i32* @r30, align 4
  %v1_10002bb4 = add i32 %v0_10002bb4, 6
  store i32 %v1_10002bb4, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10002bc4.73 to i32), i32* @lr, align 4
  %v3_10002bc0 = call i32 @function_1000a184(i32 %v1_10002bb4, i32 %v2_10002afc, i32 4)
  %v0_10002bc4 = load i32, i32* @r30, align 4
  %v1_10002bc4 = add i32 %v0_10002bc4, 4
  store i32 %v1_10002bc4, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10002bd4.74 to i32), i32* @lr, align 4
  %v3_10002bd0 = call i32 @function_1000a184(i32 %v1_10002bc4, i32 %v2_10002bc8, i32 2)
  %v0_10002bd4 = load i32, i32* @r30, align 4
  %v1_10002bd4 = add i32 %v0_10002bd4, 10
  store i32 %v1_10002bd4, i32* %r3.global-to-local, align 4
  store i32 268446692, i32* @lr, align 4
  %v3_10002be0 = call i32 @function_1000a184(i32 %v1_10002bd4, i32 %v2_10002bd8, i32 2)
  store i32 %v3_10002be0, i32* %r3.global-to-local, align 4
  %v0_10002be4 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002be4, label %dec_label_pc_10002be8, label %dec_label_pc_10002d14

dec_label_pc_10002be8:                            ; preds = %dec_label_pc_10002b8c, %dec_label_pc_10002d14
  %v0_10002be8 = load i32, i32* %r26.global-to-local, align 4
  %v1_10002be8 = trunc i32 %v0_10002be8 to i16
  %v2_10002be8 = load i32, i32* %r28.global-to-local, align 4
  %v3_10002be8 = add i32 %v2_10002be8, 10
  %v4_10002be8 = inttoptr i32 %v3_10002be8 to i16*
  store i16 %v1_10002be8, i16* %v4_10002be8, align 2
  %v0_10002bf0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002bf0, i32* @r3, align 4
  %v2_10002bf4 = call i32 @function_100056ac(i32 %v0_10002bf0, i32 20)
  %v3_10002bf4 = trunc i32 %v2_10002bf4 to i16
  %v4_10002bfc = add i32 %v0_10002bf0, 10
  %v5_10002bfc = inttoptr i32 %v4_10002bfc to i16*
  store i16 %v3_10002bf4, i16* %v5_10002bfc, align 2
  %v0_10002c00 = load i32, i32* @r31, align 4
  store i32 %v0_10002c00, i32* @r3, align 4
  %v0_10002c04 = load i32, i32* %r26.global-to-local, align 4
  %v1_10002c04 = trunc i32 %v0_10002c04 to i16
  %v3_10002c04 = add i32 %v0_10002c00, 10
  %v4_10002c04 = inttoptr i32 %v3_10002c04 to i16*
  store i16 %v1_10002c04, i16* %v4_10002c04, align 2
  %v2_10002c08 = call i32 @function_100056ac(i32 %v0_10002c00, i32 20)
  %v3_10002c08 = trunc i32 %v2_10002c08 to i16
  %v0_10002c0c = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10002c0c, i32* @r4, align 4
  %v3_10002c10 = load i32, i32* @r31, align 4
  %v4_10002c10 = add i32 %v3_10002c10, 10
  %v5_10002c10 = inttoptr i32 %v4_10002c10 to i16*
  store i16 %v3_10002c08, i16* %v5_10002c10, align 2
  %v0_10002c14 = load i32, i32* %r21.global-to-local, align 4
  %v0_10002c18 = load i32, i32* %r26.global-to-local, align 4
  %v1_10002c18 = trunc i32 %v0_10002c18 to i16
  %v2_10002c18 = load i32, i32* %r27.global-to-local, align 4
  %v3_10002c18 = add i32 %v2_10002c18, 6
  %v4_10002c18 = inttoptr i32 %v3_10002c18 to i16*
  store i16 %v1_10002c18, i16* %v4_10002c18, align 2
  %v0_10002c1c = load i32, i32* @r31, align 4
  store i32 %v0_10002c1c, i32* %r3.global-to-local, align 4
  %v0_10002c20 = load i32, i32* %r27.global-to-local, align 4
  %v1_10002c20 = add i32 %v0_10002c20, 4
  %v2_10002c20 = inttoptr i32 %v1_10002c20 to i16*
  %v3_10002c20 = load i16, i16* %v2_10002c20, align 2
  %v4_10002c20 = zext i16 %v3_10002c20 to i32
  %v4_10002c24 = call i32 @function_10005710(i32 %v0_10002c1c, i32 %v0_10002c0c, i32 %v4_10002c20, i32 %v0_10002c14)
  %v5_10002c24 = trunc i32 %v4_10002c24 to i16
  store i32 %v4_10002c24, i32* %r3.global-to-local, align 4
  %v3_10002c28 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10002c28, i32* %r0.global-to-local, align 4
  %v0_10002c2c = load i32, i32* %r28.global-to-local, align 4
  %v1_10002c2c = add i32 %v0_10002c2c, 16
  %v2_10002c2c = inttoptr i32 %v1_10002c2c to i32*
  %v3_10002c2c = load i32, i32* %v2_10002c2c, align 4
  store i32 %v3_10002c2c, i32* %r11.global-to-local, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_10002c34 = mul i32 %v3_10002c28, 24
  store i32 %v1_10002c34, i32* %r0.global-to-local, align 4
  %v3_10002c38 = load i32, i32* %r27.global-to-local, align 4
  %v4_10002c38 = add i32 %v3_10002c38, 6
  %v5_10002c38 = inttoptr i32 %v4_10002c38 to i16*
  store i16 %v5_10002c24, i16* %v5_10002c38, align 2
  %v0_10002c3c = load i32, i32* %r28.global-to-local, align 4
  %v0_10002c40 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10002c40, i32* %r3.global-to-local, align 4
  %v0_10002c44 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002c44 = load i32, i32* %r25.global-to-local, align 4
  %v2_10002c44 = add i32 %v1_10002c44, %v0_10002c44
  %v0_10002c48 = load i32, i32* %r9.global-to-local, align 4
  %v3_10002c48 = trunc i32 %v0_10002c48 to i16
  %v5_10002c48 = inttoptr i32 %v2_10002c44 to i16*
  store i16 %v3_10002c48, i16* %v5_10002c48, align 2
  %v0_10002c4c = load i32, i32* %r11.global-to-local, align 4
  %v2_10002c4c = add i32 %v2_10002c44, 4
  %v3_10002c4c = inttoptr i32 %v2_10002c4c to i32*
  store i32 %v0_10002c4c, i32* %v3_10002c4c, align 4
  %v0_10002c50 = load i32, i32* %r22.global-to-local, align 4
  %v0_10002c54 = load i32, i32* %r26.global-to-local, align 4
  %v1_10002c54 = trunc i32 %v0_10002c54 to i16
  %v3_10002c54 = add i32 %v2_10002c44, 2
  %v4_10002c54 = inttoptr i32 %v3_10002c54 to i16*
  store i16 %v1_10002c54, i16* %v4_10002c54, align 2
  store i32 268446820, i32* @lr, align 4
  %v6_10002c60 = call i32 @function_1000b6dc(i32 %v0_10002c40, i32 %v0_10002c3c, i32 %v0_10002c50, i32 16384, i32 %v2_10002c44, i32 16)
  store i32 %v6_10002c60, i32* %r3.global-to-local, align 4
  %v3_10002c64 = load i32, i32* %stack_var_-104, align 4
  %v1_10002c68 = add i32 %v3_10002c64, 1
  store i32 %v1_10002c68, i32* %r9.global-to-local, align 4
  %v1_10002c6c = load i32, i32* %r18.global-to-local, align 4
  %v2_10002c6c = icmp slt i32 %v1_10002c68, %v1_10002c6c
  %v4_10002c6c = icmp eq i32 %v1_10002c68, %v1_10002c6c
  store i1 %v4_10002c6c, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10002c68, i32* %stack_var_-104, align 4
  br i1 %v2_10002c6c, label %dec_label_pc_10002b28, label %dec_label_pc_10002c78

dec_label_pc_10002c78:                            ; preds = %dec_label_pc_10002be8
  %v0_10002c78 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10002c78 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10002c78 = or i1 %v0_10002c78, %v1_10002c78
  br i1 %v2_10002c78, label %dec_label_pc_10002b14.outer, label %dec_label_pc_10002b18

dec_label_pc_10002c80:                            ; preds = %dec_label_pc_10002b28
  %v1_10002c80 = add i32 %v2_10002b34, 16
  %v2_10002c80 = inttoptr i32 %v1_10002c80 to i32*
  %v3_10002c80 = load i32, i32* %v2_10002c80, align 4
  store i32 %v3_10002c80, i32* %r29.global-to-local, align 4
  %v0_10002c84 = call i32 @function_1000723c()
  store i32 %v0_10002c84, i32* %r3.global-to-local, align 4
  %v3_10002c88 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10002c88, i32* %r9.global-to-local, align 4
  %v0_10002c8c = load i32, i32* %r20.global-to-local, align 4
  %v1_10002c8c = mul i32 %v0_10002c8c, 16
  %v2_10002c8c = udiv i32 %v0_10002c8c, 268435456
  %v3_10002c8c = or i32 %v2_10002c8c, %v1_10002c8c
  store i32 %v3_10002c8c, i32* %r20.global-to-local, align 4
  %v1_10002c90 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10002c8c)
  %v1_10002c94 = mul nuw i32 %v2_10002c8c, 268435456
  %v2_10002c94 = urem i32 %v0_10002c8c, 268435456
  %v3_10002c94 = or i32 %v1_10002c94, %v2_10002c94
  store i32 %v3_10002c94, i32* %r20.global-to-local, align 4
  %v0_10002c98 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002c98 = mul i32 %v0_10002c98, 24
  %v1_10002c9c = load i32, i32* %r25.global-to-local, align 4
  %v2_10002c9c = add i32 %v1_10002c9c, %v1_10002c98
  store i32 %v2_10002c9c, i32* %r9.global-to-local, align 4
  %v1_10002ca0 = add i32 %v2_10002c9c, 20
  %v2_10002ca0 = inttoptr i32 %v1_10002ca0 to i8*
  %v3_10002ca0 = load i8, i8* %v2_10002ca0, align 1
  %v4_10002ca0 = zext i8 %v3_10002ca0 to i32
  store i32 %v4_10002ca0, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10002ca0, 64
  %v2_10002ca4 = zext i8 %tmp to i32
  %v3_10002ca4 = lshr i32 %v0_10002c84, %v2_10002ca4
  store i32 %v3_10002ca4, i32* %r3.global-to-local, align 4
  %v0_10002ca8 = load i32, i32* %r29.global-to-local, align 4
  %v2_10002ca8 = add i32 %v3_10002ca4, %v0_10002ca8
  store i32 %v2_10002ca8, i32* %r29.global-to-local, align 4
  %v1_10002cac = load i32, i32* %r28.global-to-local, align 4
  %v2_10002cac = add i32 %v1_10002cac, 16
  %v3_10002cac = inttoptr i32 %v2_10002cac to i32*
  store i32 %v2_10002ca8, i32* %v3_10002cac, align 4
  %v0_10002cb0 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10002cb0, label %dec_label_pc_10002cb4, label %dec_label_pc_10002b60

dec_label_pc_10002cb4:                            ; preds = %dec_label_pc_10002c80, %dec_label_pc_10002b50
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10002cb8 = call i32 @function_1000723c()
  store i32 %v0_10002cb8, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r29, align 4
  %v1_10002cc0 = load i32, i32* %r28.global-to-local, align 4
  %v2_10002cc0 = add i32 %v1_10002cc0, 12
  %v3_10002cc0 = inttoptr i32 %v2_10002cc0 to i32*
  store i32 %v0_10002cb8, i32* %v3_10002cc0, align 4
  %v0_10002cc4 = load i32, i32* %r24.global-to-local, align 4
  %v1_10002cc4 = load i32, i32* @r29, align 4
  %v4_10002cc4 = icmp eq i32 %v0_10002cc4, %v1_10002cc4
  store i1 %v4_10002cc4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10002cc4, label %dec_label_pc_10002ccc, label %dec_label_pc_10002b70

dec_label_pc_10002ccc:                            ; preds = %dec_label_pc_10002cb4, %dec_label_pc_10002b60
  %v0_10002ccc = call i32 @function_1000723c()
  %v0_10002cd0 = load i32, i32* %r16.global-to-local, align 4
  %v1_10002cd0 = load i32, i32* @r29, align 4
  %v4_10002cd0 = icmp eq i32 %v0_10002cd0, %v1_10002cd0
  store i1 %v4_10002cd0, i1* %cr7_eq.global-to-local, align 1
  %v1_10002cd4 = urem i32 %v0_10002ccc, 65536
  store i32 %v1_10002cd4, i32* %r3.global-to-local, align 4
  %v1_10002cd8 = add nsw i32 %v1_10002cd4, -1000
  store i32 %v1_10002cd8, i32* %r0.global-to-local, align 4
  %v1_10002cdc = trunc i32 %v0_10002ccc to i16
  %v2_10002cdc = load i32, i32* %r28.global-to-local, align 4
  %v3_10002cdc = add i32 %v2_10002cdc, 4
  %v4_10002cdc = inttoptr i32 %v3_10002cdc to i16*
  store i16 %v1_10002cdc, i16* %v4_10002cdc, align 2
  %v0_10002ce0 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002ce0 = sub i32 -1, %v0_10002ce0
  store i32 %v1_10002ce0, i32* %r0.global-to-local, align 4
  %v1_10002ce4 = trunc i32 %v1_10002ce0 to i16
  %v2_10002ce4 = load i32, i32* @r31, align 4
  %v3_10002ce4 = add i32 %v2_10002ce4, 4
  %v4_10002ce4 = inttoptr i32 %v3_10002ce4 to i16*
  store i16 %v1_10002ce4, i16* %v4_10002ce4, align 2
  br i1 %v4_10002cd0, label %dec_label_pc_10002cec, label %dec_label_pc_10002ccc.dec_label_pc_10002b78_crit_edge

dec_label_pc_10002ccc.dec_label_pc_10002b78_crit_edge: ; preds = %dec_label_pc_10002ccc
  %v1_10002b78.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10002b78

dec_label_pc_10002cec:                            ; preds = %dec_label_pc_10002ccc, %dec_label_pc_10002b70
  %v0_10002cec = call i32 @function_1000723c()
  %v1_10002cec = trunc i32 %v0_10002cec to i16
  store i32 %v0_10002cec, i32* %r3.global-to-local, align 4
  %v0_10002cf0 = load i32, i32* %r17.global-to-local, align 4
  %v1_10002cf0 = load i32, i32* @r29, align 4
  %v4_10002cf0 = icmp eq i32 %v0_10002cf0, %v1_10002cf0
  store i1 %v4_10002cf0, i1* %cr7_eq.global-to-local, align 1
  %v3_10002cf4 = load i32, i32* %r28.global-to-local, align 4
  %v4_10002cf4 = add i32 %v3_10002cf4, 58
  %v5_10002cf4 = inttoptr i32 %v4_10002cf4 to i16*
  store i16 %v1_10002cec, i16* %v5_10002cf4, align 2
  br i1 %v4_10002cf0, label %dec_label_pc_10002cfc, label %dec_label_pc_10002b80

dec_label_pc_10002cfc:                            ; preds = %dec_label_pc_10002cec, %dec_label_pc_10002b78
  %v0_10002cfc = call i32 @function_1000723c()
  %v1_10002cfc = trunc i32 %v0_10002cfc to i16
  store i32 %v0_10002cfc, i32* %r3.global-to-local, align 4
  %v3_10002d00 = load i32, i32* %r27.global-to-local, align 4
  %v4_10002d00 = add i32 %v3_10002d00, 2
  %v5_10002d00 = inttoptr i32 %v4_10002d00 to i16*
  store i16 %v1_10002cfc, i16* %v5_10002d00, align 2
  %v0_10002d04 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002d04, label %dec_label_pc_10002d08, label %dec_label_pc_10002b84

dec_label_pc_10002d08:                            ; preds = %dec_label_pc_10002cfc, %dec_label_pc_10002b80
  %v0_10002d08 = call i32 @function_1000723c()
  store i32 %v0_10002d08, i32* %r3.global-to-local, align 4
  %v1_10002d0c = load i32, i32* @r31, align 4
  %v2_10002d0c = add i32 %v1_10002d0c, 16
  %v3_10002d0c = inttoptr i32 %v2_10002d0c to i32*
  store i32 %v0_10002d08, i32* %v3_10002d0c, align 4
  br label %dec_label_pc_10002b8c

dec_label_pc_10002d14:                            ; preds = %dec_label_pc_10002b8c
  %v0_10002d14 = load i32, i32* %r27.global-to-local, align 4
  %v1_10002d14 = add i32 %v0_10002d14, 8
  store i32 %v1_10002d14, i32* @r3, align 4
  %v0_10002d18 = load i32, i32* %r15.global-to-local, align 4
  store i32 %v0_10002d18, i32* @r4, align 4
  %v0_10002d1c = call i32 @function_10007468()
  store i32 %v0_10002d1c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002be8

; uselistorder directives
  uselistorder i32 %v0_10002cfc, { 1, 0 }
  uselistorder i32 %v0_10002cec, { 1, 0 }
  uselistorder i32 %v1_10002ce0, { 1, 0 }
  uselistorder i32 %v1_10002cd4, { 1, 0 }
  uselistorder i32 %v0_10002ccc, { 1, 0 }
  uselistorder i32 %v1_10002cc4, { 1, 0 }
  uselistorder i32 %v0_10002c8c, { 2, 1, 0 }
  uselistorder i1 %v1_10002c78, { 1, 0 }
  uselistorder i1 %v0_10002c78, { 1, 0 }
  uselistorder i32 %v1_10002c68, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v2_10002c44, { 0, 2, 1, 3 }
  uselistorder i32 %v4_10002c24, { 1, 0 }
  uselistorder i32 %v0_10002b50, { 2, 1, 0 }
  uselistorder i32 %v4_10002b30, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10002b2c, { 1, 0 }
  uselistorder i32 %v1_10002a78, { 1, 0 }
  uselistorder i32 %v1_100029b4, { 1, 0 }
  uselistorder i32 %v1_100029a8, { 1, 0 }
  uselistorder i32 %v1_10002944, { 1, 0 }
  uselistorder i32 %v0_10002944, { 1, 2, 3, 0 }
  uselistorder i32 %v1_10002934, { 1, 2, 0 }
  uselistorder i32 %v0_10002928, { 1, 0 }
  uselistorder i32 %v5_100028d4, { 0, 3, 1, 2 }
  uselistorder i32* %r9.global-to-local, { 17, 18, 19, 20, 21, 22, 0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 2, 3, 15, 16 }
  uselistorder i32* %r31.global-to-local, { 0, 9, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 1, 2, 3, 4, 16 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 2, 11, 12 }
  uselistorder i32* %r3.global-to-local, { 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 2, 10, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0, 1 }
  uselistorder i32* %r29.global-to-local, { 6, 5, 7, 8, 0, 4, 1, 2, 3 }
  uselistorder i32* %r27.global-to-local, { 5, 0, 1, 2, 3, 4, 6, 7, 8, 9, 10 }
  uselistorder i32* %r25.global-to-local, { 2, 3, 0, 1, 4 }
  uselistorder i32* %r24.global-to-local, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* %r23.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r20.global-to-local, { 4, 5, 7, 8, 9, 6, 0, 1, 2, 3 }
  uselistorder i32* %r18.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r17.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r16.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r15.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r11.global-to-local, { 10, 11, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r0.global-to-local, { 23, 24, 25, 26, 27, 28, 29, 30, 0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 17, 13, 14, 15, 16, 4, 18, 19, 20, 21, 22 }
  uselistorder i1* %cr7_eq.global-to-local, { 7, 8, 9, 0, 10, 11, 12, 13, 1, 2, 3, 4, 5, 6 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr3_eq.global-to-local, { 2, 3, 0, 1, 4 }
  uselistorder i32 38, { 3, 4, 5, 6, 0, 7, 1, 8, 2, 9 }
  uselistorder i32 66, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10002be8, { 1, 0 }
  uselistorder label %dec_label_pc_10002b18, { 1, 0 }
  uselistorder label %dec_label_pc_10002b14, { 1, 0 }
  uselistorder label %dec_label_pc_10002af4, { 1, 0 }
  uselistorder label %dec_label_pc_10002a90, { 1, 0 }
  uselistorder label %dec_label_pc_10002a64, { 1, 0 }
  uselistorder label %dec_label_pc_100029fc, { 1, 0 }
}

define i32 @function_10002d24(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10002d24:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_10002d28 = load i32, i32* @lr, align 4
  store i32 %v0_10002d28, i32* %r0.global-to-local, align 4
  %v0_10002d2c = call i32 @__asm_mfcr()
  store i32 %v0_10002d2c, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r26.global-to-local, align 4
  %v0_10002d3c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10002d2c, i32* %r19.global-to-local, align 4
  %v0_10002d70 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10002d78 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_10002d80 = load i32, i32* @r30, align 4
  %v0_10002d84 = load i32, i32* @r31, align 4
  store i32 268447128, i32* @lr, align 4
  %v2_10002d94 = call i32 @function_1000bae4(i32 4, i32 4)
  store i32 %v2_10002d94, i32* %r20.global-to-local, align 4
  %v0_10002d9c = load i32, i32* @r28, align 4
  %v0_10002da8 = load i32, i32* @r29, align 4
  store i32 %v0_10002da8, i32* %r3.global-to-local, align 4
  store i32 268447152, i32* @lr, align 4
  %v4_10002dac = inttoptr i32 %v0_10002d9c to i32*
  %v5_10002dac = call i32 @function_1000235c(i32 %v0_10002da8, i32* %v4_10002dac, i32 2, i32 0)
  %v0_10002dbc = load i32, i32* @r28, align 4
  %v1_10002dc0 = urem i32 %v5_10002dac, 256
  store i32 %v1_10002dc0, i32* %r14.global-to-local, align 4
  %v0_10002dc4 = load i32, i32* @r29, align 4
  store i32 %v0_10002dc4, i32* %r3.global-to-local, align 4
  store i32 268447180, i32* @lr, align 4
  %v4_10002dc8 = inttoptr i32 %v0_10002dbc to i32*
  %v5_10002dc8 = call i32 @function_1000235c(i32 %v0_10002dc4, i32* %v4_10002dc8, i32 3, i32 65535)
  %v0_10002dcc = load i32, i32* @r28, align 4
  store i32 %v5_10002dc8, i32* %r25.global-to-local, align 4
  %v0_10002ddc = load i32, i32* @r29, align 4
  store i32 %v0_10002ddc, i32* %r3.global-to-local, align 4
  store i32 268447204, i32* @lr, align 4
  %v4_10002de0 = inttoptr i32 %v0_10002dcc to i32*
  %v5_10002de0 = call i32 @function_1000235c(i32 %v0_10002ddc, i32* %v4_10002de0, i32 4, i32 64)
  %v0_10002de4 = load i32, i32* @r28, align 4
  %v1_10002df0 = urem i32 %v5_10002de0, 256
  store i32 %v1_10002df0, i32* %r21.global-to-local, align 4
  %v0_10002df4 = load i32, i32* @r29, align 4
  store i32 %v0_10002df4, i32* %r3.global-to-local, align 4
  store i32 268447228, i32* @lr, align 4
  %v4_10002df8 = inttoptr i32 %v0_10002de4 to i32*
  %v5_10002df8 = call i32 @function_1000235c(i32 %v0_10002df4, i32* %v4_10002df8, i32 5, i32 1)
  %v0_10002e08 = load i32, i32* @r28, align 4
  %v1_10002e0c = urem i32 %v5_10002df8, 256
  store i32 %v1_10002e0c, i32* @r31, align 4
  %v0_10002e10 = load i32, i32* @r29, align 4
  store i32 %v0_10002e10, i32* %r3.global-to-local, align 4
  store i32 268447256, i32* @lr, align 4
  %v4_10002e14 = inttoptr i32 %v0_10002e08 to i32*
  %v5_10002e14 = call i32 @function_1000235c(i32 %v0_10002e10, i32* %v4_10002e14, i32 6, i32 65535)
  %v0_10002e1c = load i32, i32* @r28, align 4
  store i32 %v5_10002e14, i32* %r24.global-to-local, align 4
  %v0_10002e2c = load i32, i32* @r29, align 4
  store i32 %v0_10002e2c, i32* %r3.global-to-local, align 4
  store i32 268447284, i32* @lr, align 4
  %v4_10002e30 = inttoptr i32 %v0_10002e1c to i32*
  %v5_10002e30 = call i32 @function_1000235c(i32 %v0_10002e2c, i32* %v4_10002e30, i32 7, i32 65535)
  %v0_10002e34 = load i32, i32* @r28, align 4
  store i32 %v5_10002e30, i32* %r27.global-to-local, align 4
  %v0_10002e44 = load i32, i32* @r29, align 4
  store i32 %v0_10002e44, i32* %r3.global-to-local, align 4
  store i32 268447308, i32* @lr, align 4
  %v4_10002e48 = inttoptr i32 %v0_10002e34 to i32*
  %v5_10002e48 = call i32 @function_1000235c(i32 %v0_10002e44, i32* %v4_10002e48, i32 0, i32 512)
  %v0_10002e4c = load i32, i32* @r28, align 4
  store i32 %v5_10002e48, i32* %r16.global-to-local, align 4
  %v0_10002e5c = load i32, i32* @r29, align 4
  store i32 %v0_10002e5c, i32* %r3.global-to-local, align 4
  store i32 268447332, i32* @lr, align 4
  %v4_10002e60 = inttoptr i32 %v0_10002e4c to i32*
  %v5_10002e60 = call i32 @function_1000235c(i32 %v0_10002e5c, i32* %v4_10002e60, i32 1, i32 1)
  %v0_10002e64 = load i32, i32* @r28, align 4
  %v1_10002e70 = urem i32 %v5_10002e60, 256
  store i32 %v1_10002e70, i32* %r15.global-to-local, align 4
  %v0_10002e74 = load i32, i32* @r29, align 4
  store i32 %v0_10002e74, i32* %r3.global-to-local, align 4
  store i32 268447356, i32* @lr, align 4
  %v4_10002e78 = inttoptr i32 %v0_10002e64 to i32*
  %v5_10002e78 = call i32 @function_1000235c(i32 %v0_10002e74, i32* %v4_10002e78, i32 19, i32 0)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10002e80 = load i32, i32* @global_var_1001e180.71, align 4
  %v0_10002e84 = load i32, i32* @r28, align 4
  store i32 %v5_10002e78, i32* %r30.global-to-local, align 4
  %v0_10002e90 = load i32, i32* @r29, align 4
  store i32 %v0_10002e90, i32* %r3.global-to-local, align 4
  store i32 268447384, i32* @lr, align 4
  %v4_10002e94 = inttoptr i32 %v0_10002e84 to i32*
  %v5_10002e94 = call i32 @function_1000235c(i32 %v0_10002e90, i32* %v4_10002e94, i32 25, i32 %v3_10002e80)
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268447404, i32* @lr, align 4
  %v3_10002ea8 = call i32 @function_1000b758(i32 2, i32 3, i32 6)
  store i32 %v3_10002ea8, i32* %r3.global-to-local, align 4
  %v3_10002eac = icmp eq i32 %v3_10002ea8, -1
  store i1 %v3_10002eac, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10002ea8, i32* %r23.global-to-local, align 4
  br i1 %v3_10002eac, label %dec_label_pc_10003044, label %dec_label_pc_10002eb8

dec_label_pc_10002eb8:                            ; preds = %dec_label_pc_10002d24
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10002ec4 = ptrtoint i32* %stack_var_-104 to i32
  store i32 1, i32* %stack_var_-104, align 4
  store i32 268447444, i32* @lr, align 4
  %v5_10002ed0 = call i32 @function_1000b71c(i32 0, i32 3, i32 %v2_10002ec4, i32 4, i32 4)
  store i32 %v5_10002ed0, i32* %r3.global-to-local, align 4
  %v3_10002ed4 = icmp eq i32 %v5_10002ed0, -1
  store i1 %v3_10002ed4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10002ed4, label %dec_label_pc_1000303c, label %dec_label_pc_10002edc

dec_label_pc_10002edc:                            ; preds = %dec_label_pc_10002eb8
  %v0_10002edc = load i32, i32* %r19.global-to-local, align 4
  %v1_10002edc = icmp slt i32 %v0_10002edc, 0
  %v3_10002edc = icmp eq i32 %v0_10002edc, 0
  store i1 %v1_10002edc, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10002edc, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  %v0_10002ee8 = load i32, i32* %r25.global-to-local, align 4
  %v1_10002ee8 = urem i32 %v0_10002ee8, 65536
  store i32 %v1_10002ee8, i32* %r25.global-to-local, align 4
  %v0_10002eec = load i32, i32* %r24.global-to-local, align 4
  %v1_10002eec = urem i32 %v0_10002eec, 65536
  store i32 %v1_10002eec, i32* %r17.global-to-local, align 4
  %v0_10002ef0 = load i32, i32* %r27.global-to-local, align 4
  %v1_10002ef0 = urem i32 %v0_10002ef0, 65536
  store i32 %v1_10002ef0, i32* %r18.global-to-local, align 4
  %v0_10002ef4 = load i32, i32* %r30.global-to-local, align 4
  %v1_10002ef4 = urem i32 %v0_10002ef4, 256
  store i32 %v1_10002ef4, i32* %r3.global-to-local, align 4
  %tmp33 = icmp slt i32 %v0_10002edc, 1
  br i1 %tmp33, label %dec_label_pc_100030a4, label %dec_label_pc_10002efc

dec_label_pc_10002efc:                            ; preds = %dec_label_pc_10002edc
  %v0_10002efc = load i32, i32* @r31, align 4
  %v3_10002efc = icmp eq i32 %v0_10002efc, 0
  store i1 %v3_10002efc, i1* %cr2_eq.global-to-local, align 1
  %v3_10002f00 = icmp eq i32 %v1_10002ef4, 0
  store i1 %v3_10002f00, i1* %cr3_eq.global-to-local, align 1
  %v0_10002f04 = load i32, i32* %r16.global-to-local, align 4
  %v1_10002f04 = urem i32 %v0_10002f04, 65536
  %v0_10002ee8.not = or i32 %v0_10002ee8, -65536
  %v1_10002f08 = xor i32 %v0_10002ee8.not, 65535
  store i32 %v1_10002f08, i32* %r11.global-to-local, align 4
  %v1_10002f10 = add nuw nsw i32 %v1_10002f04, 52
  store i32 %v1_10002f10, i32* %r0.global-to-local, align 4
  %v1_10002f14 = add nuw nsw i32 %v1_10002f04, 28
  store i32 %v1_10002f14, i32* %r9.global-to-local, align 4
  %fold = add i32 %v0_10002f04, 52
  %v1_10002f18 = urem i32 %fold, 65536
  store i32 %v1_10002f18, i32* %r22.global-to-local, align 4
  %fold8 = add i32 %v0_10002f04, 28
  %v1_10002f1c = urem i32 %fold8, 65536
  store i32 %v1_10002f1c, i32* %r24.global-to-local, align 4
  %v1_10002f20 = urem i32 %v1_10002f08, 65536
  store i32 %v1_10002f20, i32* %r27.global-to-local, align 4
  %fold9 = add i32 %v0_10002f04, 8
  %v1_10002f24 = urem i32 %fold9, 65536
  store i32 %v1_10002f24, i32* @r28, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10002f58

dec_label_pc_10002f30:                            ; preds = %dec_label_pc_10003018
  %v0_10002f30 = load i32, i32* %r31.global-to-local, align 4
  %v1_10002f30 = add i32 %v0_10002f30, 16
  %v2_10002f30 = inttoptr i32 %v1_10002f30 to i32*
  %v3_10002f30 = load i32, i32* %v2_10002f30, align 4
  store i32 %v3_10002f30, i32* %r0.global-to-local, align 4
  %v1_10002f34 = load i32, i32* %r30.global-to-local, align 4
  %v2_10002f34 = add i32 %v1_10002f34, 16
  %v3_10002f34 = inttoptr i32 %v2_10002f34 to i32*
  store i32 %v3_10002f30, i32* %v3_10002f34, align 4
  br label %dec_label_pc_10002f38

dec_label_pc_10002f38:                            ; preds = %dec_label_pc_10003034, %dec_label_pc_10002f30
  %v3_10002f38 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10002f38, i32* %r9.global-to-local, align 4
  %v0_10002f3c = load i32, i32* @r28, align 4
  %v1_10002f3c = trunc i32 %v0_10002f3c to i16
  %v2_10002f3c = load i32, i32* %r29.global-to-local, align 4
  %v3_10002f3c = add i32 %v2_10002f3c, 4
  %v4_10002f3c = inttoptr i32 %v3_10002f3c to i16*
  store i16 %v1_10002f3c, i16* %v4_10002f3c, align 2
  %v0_10002f40 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002f40 = add i32 %v0_10002f40, 1
  store i32 %v1_10002f40, i32* %r31.global-to-local, align 4
  %v0_10002f44 = load i32, i32* %r17.global-to-local, align 4
  %v1_10002f44 = trunc i32 %v0_10002f44 to i16
  %v2_10002f44 = load i32, i32* %r29.global-to-local, align 4
  %v3_10002f44 = inttoptr i32 %v2_10002f44 to i16*
  store i16 %v1_10002f44, i16* %v3_10002f44, align 2
  %v0_10002f48 = load i32, i32* %r31.global-to-local, align 4
  %v1_10002f48 = load i32, i32* %r19.global-to-local, align 4
  %v2_10002f48 = icmp slt i32 %v0_10002f48, %v1_10002f48
  %v4_10002f48 = icmp eq i32 %v0_10002f48, %v1_10002f48
  store i1 %v4_10002f48, i1* %cr7_eq.global-to-local, align 1
  %v0_10002f4c = load i32, i32* %r18.global-to-local, align 4
  %v1_10002f4c = trunc i32 %v0_10002f4c to i16
  %v2_10002f4c = load i32, i32* %r29.global-to-local, align 4
  %v3_10002f4c = add i32 %v2_10002f4c, 2
  %v4_10002f4c = inttoptr i32 %v3_10002f4c to i16*
  store i16 %v1_10002f4c, i16* %v4_10002f4c, align 2
  %v0_10002f50 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10002f50, i32* %stack_var_-104, align 4
  br i1 %v2_10002f48, label %dec_label_pc_10002f58, label %dec_label_pc_100030a8

dec_label_pc_10002f58:                            ; preds = %dec_label_pc_10002f38, %dec_label_pc_10002efc
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268447588, i32* @lr, align 4
  %v2_10002f60 = call i32 @function_1000bae4(i32 1510, i32 4)
  store i32 %v2_10002f60, i32* %r3.global-to-local, align 4
  %v3_10002f64 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10002f64, i32* %r9.global-to-local, align 4
  %v0_10002f68 = load i32, i32* @r31, align 4
  %v1_10002f68 = mul i32 %v0_10002f68, 4
  store i32 %v1_10002f68, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r11.global-to-local, align 4
  %v1_10002f70 = load i32, i32* %r20.global-to-local, align 4
  %v3_10002f70 = add i32 %v1_10002f70, %v1_10002f68
  %v4_10002f70 = inttoptr i32 %v3_10002f70 to i32*
  store i32 %v2_10002f60, i32* %v4_10002f70, align 4
  %v0_10002f74 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002f74 = mul i32 %v0_10002f74, 4
  store i32 %v1_10002f74, i32* %r9.global-to-local, align 4
  %v1_10002f78 = load i32, i32* %r20.global-to-local, align 4
  %v2_10002f78 = add i32 %v1_10002f78, %v1_10002f74
  %v3_10002f78 = inttoptr i32 %v2_10002f78 to i32*
  %v4_10002f78 = load i32, i32* %v3_10002f78, align 4
  store i32 %v4_10002f78, i32* %r31.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_10002f80 = inttoptr i32 %v4_10002f78 to i32*
  %v2_10002f80 = load i32, i32* %v1_10002f80, align 4
  store i32 %v2_10002f80, i32* %r0.global-to-local, align 4
  %v1_10002f84 = add i32 %v4_10002f78, 24
  store i32 %v1_10002f84, i32* %r30.global-to-local, align 4
  %v0_10002f88 = load i32, i32* %r21.global-to-local, align 4
  %v1_10002f88 = trunc i32 %v0_10002f88 to i8
  %v3_10002f88 = add i32 %v4_10002f78, 8
  %v4_10002f88 = inttoptr i32 %v3_10002f88 to i8*
  store i8 %v1_10002f88, i8* %v4_10002f88, align 1
  %v0_10002f8c = load i32, i32* %r31.global-to-local, align 4
  %v1_10002f8c = add i32 %v0_10002f8c, 44
  store i32 %v1_10002f8c, i32* %r29.global-to-local, align 4
  %v1_10002f90 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10002f90, i32* %r0.global-to-local, align 4
  %v0_10002f94 = load i32, i32* %r25.global-to-local, align 4
  %v1_10002f94 = trunc i32 %v0_10002f94 to i16
  %v2_10002f94 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002f94 = add i32 %v2_10002f94, 4
  %v4_10002f94 = inttoptr i32 %v3_10002f94 to i16*
  store i16 %v1_10002f94, i16* %v4_10002f94, align 2
  %v1_10002f98 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10002f98, i32* %r0.global-to-local, align 4
  %v0_10002f9c = load i32, i32* %r31.global-to-local, align 4
  %v1_10002f9c = add i32 %v0_10002f9c, 20
  store i32 %v1_10002f9c, i32* %r9.global-to-local, align 4
  %v2_10002fa0 = inttoptr i32 %v0_10002f9c to i32*
  store i32 %v1_10002f98, i32* %v2_10002fa0, align 4
  %v0_10002fa4 = load i32, i32* %r14.global-to-local, align 4
  %v1_10002fa4 = trunc i32 %v0_10002fa4 to i8
  %v2_10002fa4 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002fa4 = add i32 %v2_10002fa4, 1
  %v4_10002fa4 = inttoptr i32 %v3_10002fa4 to i8*
  store i8 %v1_10002fa4, i8* %v4_10002fa4, align 1
  %v0_10002fa8 = load i32, i32* %r22.global-to-local, align 4
  %v1_10002fa8 = trunc i32 %v0_10002fa8 to i16
  %v2_10002fa8 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002fa8 = add i32 %v2_10002fa8, 2
  %v4_10002fa8 = inttoptr i32 %v3_10002fa8 to i16*
  store i16 %v1_10002fa8, i16* %v4_10002fa8, align 2
  %v0_10002fac = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002fac, label %dec_label_pc_10002fb8, label %dec_label_pc_10002fb0

dec_label_pc_10002fb0:                            ; preds = %dec_label_pc_10002f58
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10002fb4 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002fb4 = add i32 %v2_10002fb4, 6
  %v4_10002fb4 = inttoptr i32 %v3_10002fb4 to i16*
  store i16 16384, i16* %v4_10002fb4, align 2
  br label %dec_label_pc_10002fb8

dec_label_pc_10002fb8:                            ; preds = %dec_label_pc_10002f58, %dec_label_pc_10002fb0
  store i32 2048, i32* %r0.global-to-local, align 4
  %v2_10002fc0 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002fc0 = add i32 %v2_10002fc0, 9
  %v4_10002fc0 = inttoptr i32 %v3_10002fc0 to i8*
  store i8 47, i8* %v4_10002fc0, align 1
  %v0_10002fc4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002fc4 = trunc i32 %v0_10002fc4 to i16
  %v2_10002fc4 = load i32, i32* %r9.global-to-local, align 4
  %v3_10002fc4 = add i32 %v2_10002fc4, 2
  %v4_10002fc4 = inttoptr i32 %v3_10002fc4 to i16*
  store i16 %v1_10002fc4, i16* %v4_10002fc4, align 2
  %v3_10002fc8 = load i32, i32* %stack_var_-104, align 4
  store i32 %v5_10002e94, i32* %r11.global-to-local, align 4
  %v1_10002fd0 = mul i32 %v3_10002fc8, 24
  store i32 %v1_10002fd0, i32* %r9.global-to-local, align 4
  %v0_10002fd4 = load i32, i32* %r31.global-to-local, align 4
  %v1_10002fd4 = add i32 %v0_10002fd4, 24
  %v2_10002fd4 = inttoptr i32 %v1_10002fd4 to i32*
  %v3_10002fd4 = load i32, i32* %v2_10002fd4, align 4
  store i32 %v3_10002fd4, i32* %r0.global-to-local, align 4
  %v2_10002fd8 = add i32 %v0_10002fd4, 12
  %v3_10002fd8 = inttoptr i32 %v2_10002fd8 to i32*
  store i32 %v5_10002e94, i32* %v3_10002fd8, align 4
  store i32 4, i32* %r11.global-to-local, align 4
  %v0_10002fe0 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002fe0 = load i32, i32* %r26.global-to-local, align 4
  %v2_10002fe0 = add i32 %v1_10002fe0, %v0_10002fe0
  store i32 %v2_10002fe0, i32* %r9.global-to-local, align 4
  %v1_10002fe4 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10002fe4, i32* %r0.global-to-local, align 4
  %v0_10002fe8 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002fe8 = add i32 %v0_10002fe8, 16
  %v2_10002fe8 = inttoptr i32 %v1_10002fe8 to i32*
  %v3_10002fe8 = load i32, i32* %v2_10002fe8, align 4
  store i32 %v3_10002fe8, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10002ff0 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10002ff0, i32* %r0.global-to-local, align 4
  %v1_10002ff4 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002ff4 = add i32 %v1_10002ff4, 24
  %v3_10002ff4 = inttoptr i32 %v2_10002ff4 to i32*
  store i32 %v1_10002ff0, i32* %v3_10002ff4, align 4
  %v0_10002ff8 = load i32, i32* %r11.global-to-local, align 4
  %v1_10002ff8 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002ff8 = add i32 %v1_10002ff8, 16
  %v3_10002ff8 = inttoptr i32 %v2_10002ff8 to i32*
  store i32 %v0_10002ff8, i32* %v3_10002ff8, align 4
  %v0_10002ffc = load i32, i32* %r14.global-to-local, align 4
  %v1_10002ffc = trunc i32 %v0_10002ffc to i8
  %v2_10002ffc = load i32, i32* %r30.global-to-local, align 4
  %v3_10002ffc = add i32 %v2_10002ffc, 1
  %v4_10002ffc = inttoptr i32 %v3_10002ffc to i8*
  store i8 %v1_10002ffc, i8* %v4_10002ffc, align 1
  %v0_10003000 = load i32, i32* %r24.global-to-local, align 4
  %v1_10003000 = trunc i32 %v0_10003000 to i16
  %v2_10003000 = load i32, i32* %r30.global-to-local, align 4
  %v3_10003000 = add i32 %v2_10003000, 2
  %v4_10003000 = inttoptr i32 %v3_10003000 to i16*
  store i16 %v1_10003000, i16* %v4_10003000, align 2
  %v0_10003004 = load i32, i32* %r27.global-to-local, align 4
  %v1_10003004 = trunc i32 %v0_10003004 to i16
  %v2_10003004 = load i32, i32* %r30.global-to-local, align 4
  %v3_10003004 = add i32 %v2_10003004, 4
  %v4_10003004 = inttoptr i32 %v3_10003004 to i16*
  store i16 %v1_10003004, i16* %v4_10003004, align 2
  %v0_10003008 = load i32, i32* %r21.global-to-local, align 4
  %v1_10003008 = trunc i32 %v0_10003008 to i8
  %v2_10003008 = load i32, i32* %r30.global-to-local, align 4
  %v3_10003008 = add i32 %v2_10003008, 8
  %v4_10003008 = inttoptr i32 %v3_10003008 to i8*
  store i8 %v1_10003008, i8* %v4_10003008, align 1
  %v0_1000300c = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_1000300c, label %dec_label_pc_10003018, label %dec_label_pc_10003010

dec_label_pc_10003010:                            ; preds = %dec_label_pc_10002fb8
  store i32 16384, i32* %r11.global-to-local, align 4
  %v2_10003014 = load i32, i32* %r30.global-to-local, align 4
  %v3_10003014 = add i32 %v2_10003014, 6
  %v4_10003014 = inttoptr i32 %v3_10003014 to i16*
  store i16 16384, i16* %v4_10003014, align 2
  br label %dec_label_pc_10003018

dec_label_pc_10003018:                            ; preds = %dec_label_pc_10002fb8, %dec_label_pc_10003010
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_1000301c = load i32, i32* %r30.global-to-local, align 4
  %v3_1000301c = add i32 %v2_1000301c, 9
  %v4_1000301c = inttoptr i32 %v3_1000301c to i8*
  store i8 17, i8* %v4_1000301c, align 1
  %v0_10003020 = call i32 @function_1000723c()
  store i32 %v0_10003020, i32* %r3.global-to-local, align 4
  %v1_10003024 = add i32 %v0_10003020, -1024
  store i32 %v1_10003024, i32* %r0.global-to-local, align 4
  %v1_10003028 = load i32, i32* %r30.global-to-local, align 4
  %v2_10003028 = add i32 %v1_10003028, 12
  %v3_10003028 = inttoptr i32 %v2_10003028 to i32*
  store i32 %v0_10003020, i32* %v3_10003028, align 4
  %v0_1000302c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000302c = sub i32 -1, %v0_1000302c
  store i32 %v1_1000302c, i32* %r0.global-to-local, align 4
  %v0_10003030 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10003030, label %dec_label_pc_10003034, label %dec_label_pc_10002f30

dec_label_pc_10003034:                            ; preds = %dec_label_pc_10003018
  %v1_10003034 = load i32, i32* %r30.global-to-local, align 4
  %v2_10003034 = add i32 %v1_10003034, 16
  %v3_10003034 = inttoptr i32 %v2_10003034 to i32*
  store i32 %v1_1000302c, i32* %v3_10003034, align 4
  br label %dec_label_pc_10002f38

dec_label_pc_1000303c:                            ; preds = %dec_label_pc_10002eb8
  %v0_1000303c = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_1000303c, i32* %r3.global-to-local, align 4
  store i32 268447812, i32* @lr, align 4
  %v0_10003040 = call i32 @function_1000a98c()
  store i32 %v0_10003040, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003044

dec_label_pc_10003044:                            ; preds = %dec_label_pc_10002d24, %dec_label_pc_1000303c
  store i32 %v0_10002d3c, i32* %r0.global-to-local, align 4
  %v1_10003058 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10002d2c)
  store i32 %v0_10002d70, i32* %r28.global-to-local, align 4
  store i32 %v0_10002d78, i32* %r29.global-to-local, align 4
  store i32 %v0_10002d80, i32* %r30.global-to-local, align 4
  store i32 %v0_10002d84, i32* %r31.global-to-local, align 4
  %v0_100030a0 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100030a0

dec_label_pc_100030a4:                            ; preds = %dec_label_pc_10002edc
  %v3_100030a4 = icmp eq i32 %v1_10002ef4, 0
  store i1 %v3_100030a4, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_100030a8

dec_label_pc_100030a8:                            ; preds = %dec_label_pc_10002f38, %dec_label_pc_100030a4
  store i32 %v5_10002e94, i32* %r0.global-to-local, align 4
  %v0_100030ac = load i32, i32* %r15.global-to-local, align 4
  %v3_100030ac = icmp eq i32 %v0_100030ac, 0
  store i1 %v3_100030ac, i1* %cr2_eq.global-to-local, align 1
  %v0_100030b0 = load i32, i32* %r16.global-to-local, align 4
  %v1_100030b0 = add i32 %v0_100030b0, 8
  store i32 %v1_100030b0, i32* %r22.global-to-local, align 4
  %v1_100030b4 = add i32 %v0_100030b0, 52
  store i32 %v1_100030b4, i32* %r24.global-to-local, align 4
  %v3_100030b8 = icmp eq i32 %v5_10002e94, -1
  store i1 %v3_100030b8, i1* %cr7_eq.global-to-local, align 1
  %v0_100030bc = call i32 @__asm_mfcr()
  store i32 %v0_100030bc, i32* %r3.global-to-local, align 4
  %v1_100030c0 = mul i32 %v0_100030bc, 268435456
  store i32 %v1_100030c0, i32* %r21.global-to-local, align 4
  %v0_100030c4.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100030c4.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_100030c4.outer

dec_label_pc_100030c4.outer:                      ; preds = %dec_label_pc_100031cc, %dec_label_pc_100030a8
  %v1_100030c4.ph = phi i1 [ %v1_100030c4.pre, %dec_label_pc_100030a8 ], [ %v1_100031cc, %dec_label_pc_100031cc ]
  %v0_100030c4.ph = phi i1 [ %v0_100030c4.pre, %dec_label_pc_100030a8 ], [ %v0_100031cc, %dec_label_pc_100031cc ]
  %v2_100030c4 = or i1 %v1_100030c4.ph, %v0_100030c4.ph
  br label %dec_label_pc_100030c4

dec_label_pc_100030c4:                            ; preds = %dec_label_pc_100030c4.outer, %dec_label_pc_100030c4
  br i1 %v2_100030c4, label %dec_label_pc_100030c4, label %dec_label_pc_100030c8

dec_label_pc_100030c8:                            ; preds = %dec_label_pc_100030c4, %dec_label_pc_100031cc
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_100030d8

dec_label_pc_100030d8:                            ; preds = %dec_label_pc_1000313c, %dec_label_pc_100030c8
  %v0_100030d8 = phi i32 [ %v1_100031bc, %dec_label_pc_1000313c ], [ 0, %dec_label_pc_100030c8 ]
  %v1_100030d8 = mul i32 %v0_100030d8, 24
  store i32 %v1_100030d8, i32* %r0.global-to-local, align 4
  %v1_100030dc = mul i32 %v0_100030d8, 4
  store i32 %v1_100030dc, i32* %r11.global-to-local, align 4
  %v1_100030e0 = load i32, i32* %r20.global-to-local, align 4
  %v2_100030e0 = add i32 %v1_100030e0, %v1_100030dc
  %v3_100030e0 = inttoptr i32 %v2_100030e0 to i32*
  %v4_100030e0 = load i32, i32* %v3_100030e0, align 4
  store i32 %v4_100030e0, i32* %r28.global-to-local, align 4
  %v1_100030e4 = load i32, i32* %r26.global-to-local, align 4
  %v2_100030e4 = add i32 %v1_100030e4, %v1_100030d8
  %v1_100030e8 = add i32 %v2_100030e4, 20
  %v2_100030e8 = inttoptr i32 %v1_100030e8 to i8*
  %v3_100030e8 = load i8, i8* %v2_100030e8, align 1
  %v4_100030e8 = zext i8 %v3_100030e8 to i32
  store i32 %v4_100030e8, i32* %r9.global-to-local, align 4
  %v1_100030ec = add i32 %v4_100030e0, 24
  store i32 %v1_100030ec, i32* @r31, align 4
  %v1_100030f0 = add i32 %v4_100030e0, 44
  store i32 %v1_100030f0, i32* @r30, align 4
  %v3_100030f4 = icmp eq i8 %v3_100030e8, 31
  store i1 %v3_100030f4, i1* %cr7_eq.global-to-local, align 1
  %tmp35 = icmp ult i8 %v3_100030e8, 32
  br i1 %tmp35, label %dec_label_pc_100031d4, label %dec_label_pc_100030fc

dec_label_pc_100030fc:                            ; preds = %dec_label_pc_100030d8
  %v0_100030fc = load i32, i32* %r21.global-to-local, align 4
  %v1_100030fc = mul i32 %v0_100030fc, 16
  %v2_100030fc = udiv i32 %v0_100030fc, 268435456
  %v3_100030fc = or i32 %v2_100030fc, %v1_100030fc
  store i32 %v3_100030fc, i32* %r21.global-to-local, align 4
  %v1_10003100 = call %0 @__asm_mtcrf(i32 1, i32 %v3_100030fc)
  %v1_10003104 = mul nuw i32 %v2_100030fc, 268435456
  %v2_10003104 = urem i32 %v0_100030fc, 268435456
  %v3_10003104 = or i32 %v1_10003104, %v2_10003104
  store i32 %v3_10003104, i32* %r21.global-to-local, align 4
  %v0_10003108 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10003108, label %dec_label_pc_10003208, label %dec_label_pc_1000310c

dec_label_pc_1000310c:                            ; preds = %dec_label_pc_100031d4, %dec_label_pc_100030fc
  store i32 65535, i32* @r29, align 4
  %v0_10003114 = load i32, i32* %r25.global-to-local, align 4
  %v4_10003114 = icmp eq i32 %v0_10003114, 65535
  store i1 %v4_10003114, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10003114, label %dec_label_pc_10003220, label %dec_label_pc_1000311c

dec_label_pc_1000311c:                            ; preds = %dec_label_pc_10003208, %dec_label_pc_1000310c
  %v1_1000311c = phi i32 [ %v1_10003218, %dec_label_pc_10003208 ], [ 65535, %dec_label_pc_1000310c ]
  %v0_1000311c = load i32, i32* %r17.global-to-local, align 4
  %v4_1000311c = icmp eq i32 %v0_1000311c, %v1_1000311c
  store i1 %v4_1000311c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_1000311c, label %dec_label_pc_10003240, label %dec_label_pc_10003124

dec_label_pc_10003124:                            ; preds = %dec_label_pc_10003220.dec_label_pc_10003124_crit_edge, %dec_label_pc_1000311c
  %v1_10003124 = phi i32 [ %v1_10003124.pre, %dec_label_pc_10003220.dec_label_pc_10003124_crit_edge ], [ %v1_1000311c, %dec_label_pc_1000311c ]
  %v0_10003124 = load i32, i32* %r18.global-to-local, align 4
  %v4_10003124 = icmp eq i32 %v0_10003124, %v1_10003124
  store i1 %v4_10003124, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10003124, label %dec_label_pc_10003250, label %dec_label_pc_1000312c

dec_label_pc_1000312c:                            ; preds = %dec_label_pc_10003240, %dec_label_pc_10003124
  %v0_1000312c = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_1000312c, label %dec_label_pc_1000325c, label %dec_label_pc_10003130

dec_label_pc_10003130:                            ; preds = %dec_label_pc_10003250, %dec_label_pc_1000312c
  %v0_10003130 = load i32, i32* %r28.global-to-local, align 4
  %v1_10003130 = add i32 %v0_10003130, 16
  %v2_10003130 = inttoptr i32 %v1_10003130 to i32*
  %v3_10003130 = load i32, i32* %v2_10003130, align 4
  store i32 %v3_10003130, i32* %r0.global-to-local, align 4
  %v1_10003134 = load i32, i32* @r31, align 4
  %v2_10003134 = add i32 %v1_10003134, 16
  %v3_10003134 = inttoptr i32 %v2_10003134 to i32*
  store i32 %v3_10003130, i32* %v3_10003134, align 4
  %v0_10003138 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10003138, label %dec_label_pc_1000313c, label %dec_label_pc_10003268

dec_label_pc_1000313c:                            ; preds = %dec_label_pc_10003130, %dec_label_pc_1000325c, %dec_label_pc_10003268
  %v0_1000313c = load i32, i32* %r27.global-to-local, align 4
  %v1_1000313c = trunc i32 %v0_1000313c to i16
  %v2_1000313c = load i32, i32* %r28.global-to-local, align 4
  %v3_1000313c = add i32 %v2_1000313c, 10
  %v4_1000313c = inttoptr i32 %v3_1000313c to i16*
  store i16 %v1_1000313c, i16* %v4_1000313c, align 2
  %v0_10003144 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003144, i32* @r3, align 4
  %v2_10003148 = call i32 @function_100056ac(i32 %v0_10003144, i32 20)
  %v3_10003148 = trunc i32 %v2_10003148 to i16
  %v4_10003150 = add i32 %v0_10003144, 10
  %v5_10003150 = inttoptr i32 %v4_10003150 to i16*
  store i16 %v3_10003148, i16* %v5_10003150, align 2
  %v0_10003154 = load i32, i32* @r31, align 4
  store i32 %v0_10003154, i32* @r3, align 4
  %v0_10003158 = load i32, i32* %r27.global-to-local, align 4
  %v1_10003158 = trunc i32 %v0_10003158 to i16
  %v3_10003158 = add i32 %v0_10003154, 10
  %v4_10003158 = inttoptr i32 %v3_10003158 to i16*
  store i16 %v1_10003158, i16* %v4_10003158, align 2
  %v2_1000315c = call i32 @function_100056ac(i32 %v0_10003154, i32 20)
  %v3_1000315c = trunc i32 %v2_1000315c to i16
  %v0_10003160 = load i32, i32* @r30, align 4
  store i32 %v0_10003160, i32* @r4, align 4
  %v3_10003164 = load i32, i32* @r31, align 4
  %v4_10003164 = add i32 %v3_10003164, 10
  %v5_10003164 = inttoptr i32 %v4_10003164 to i16*
  store i16 %v3_1000315c, i16* %v5_10003164, align 2
  %v0_10003168 = load i32, i32* %r22.global-to-local, align 4
  %v0_1000316c = load i32, i32* %r27.global-to-local, align 4
  %v1_1000316c = trunc i32 %v0_1000316c to i16
  %v2_1000316c = load i32, i32* @r30, align 4
  %v3_1000316c = add i32 %v2_1000316c, 6
  %v4_1000316c = inttoptr i32 %v3_1000316c to i16*
  store i16 %v1_1000316c, i16* %v4_1000316c, align 2
  %v0_10003170 = load i32, i32* @r31, align 4
  store i32 %v0_10003170, i32* %r3.global-to-local, align 4
  %v0_10003174 = load i32, i32* @r30, align 4
  %v1_10003174 = add i32 %v0_10003174, 4
  %v2_10003174 = inttoptr i32 %v1_10003174 to i16*
  %v3_10003174 = load i16, i16* %v2_10003174, align 2
  %v4_10003174 = zext i16 %v3_10003174 to i32
  %v4_10003178 = call i32 @function_10005710(i32 %v0_10003170, i32 %v0_10003160, i32 %v4_10003174, i32 %v0_10003168)
  %v5_10003178 = trunc i32 %v4_10003178 to i16
  store i32 %v4_10003178, i32* %r3.global-to-local, align 4
  %v3_1000317c = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_1000317c, i32* %r0.global-to-local, align 4
  %v0_10003180 = load i32, i32* %r28.global-to-local, align 4
  %v1_10003180 = add i32 %v0_10003180, 16
  %v2_10003180 = inttoptr i32 %v1_10003180 to i32*
  %v3_10003180 = load i32, i32* %v2_10003180, align 4
  store i32 %v3_10003180, i32* %r11.global-to-local, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_10003188 = mul i32 %v3_1000317c, 24
  store i32 %v1_10003188, i32* %r0.global-to-local, align 4
  %v3_1000318c = load i32, i32* @r30, align 4
  %v4_1000318c = add i32 %v3_1000318c, 6
  %v5_1000318c = inttoptr i32 %v4_1000318c to i16*
  store i16 %v5_10003178, i16* %v5_1000318c, align 2
  %v0_10003190 = load i32, i32* %r28.global-to-local, align 4
  %v0_10003194 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10003194, i32* %r3.global-to-local, align 4
  %v0_10003198 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003198 = load i32, i32* %r26.global-to-local, align 4
  %v2_10003198 = add i32 %v1_10003198, %v0_10003198
  %v0_1000319c = load i32, i32* %r9.global-to-local, align 4
  %v3_1000319c = trunc i32 %v0_1000319c to i16
  %v5_1000319c = inttoptr i32 %v2_10003198 to i16*
  store i16 %v3_1000319c, i16* %v5_1000319c, align 2
  %v0_100031a0 = load i32, i32* %r11.global-to-local, align 4
  %v2_100031a0 = add i32 %v2_10003198, 4
  %v3_100031a0 = inttoptr i32 %v2_100031a0 to i32*
  store i32 %v0_100031a0, i32* %v3_100031a0, align 4
  %v0_100031a4 = load i32, i32* %r24.global-to-local, align 4
  %v0_100031a8 = load i32, i32* %r27.global-to-local, align 4
  %v1_100031a8 = trunc i32 %v0_100031a8 to i16
  %v3_100031a8 = add i32 %v2_10003198, 2
  %v4_100031a8 = inttoptr i32 %v3_100031a8 to i16*
  store i16 %v1_100031a8, i16* %v4_100031a8, align 2
  store i32 268448184, i32* @lr, align 4
  %v6_100031b4 = call i32 @function_1000b6dc(i32 %v0_10003194, i32 %v0_10003190, i32 %v0_100031a4, i32 16384, i32 %v2_10003198, i32 16)
  store i32 %v6_100031b4, i32* %r3.global-to-local, align 4
  %v3_100031b8 = load i32, i32* %stack_var_-104, align 4
  %v1_100031bc = add i32 %v3_100031b8, 1
  store i32 %v1_100031bc, i32* %r9.global-to-local, align 4
  %v1_100031c0 = load i32, i32* %r19.global-to-local, align 4
  %v2_100031c0 = icmp slt i32 %v1_100031bc, %v1_100031c0
  %v4_100031c0 = icmp eq i32 %v1_100031bc, %v1_100031c0
  store i1 %v4_100031c0, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_100031bc, i32* %stack_var_-104, align 4
  br i1 %v2_100031c0, label %dec_label_pc_100030d8, label %dec_label_pc_100031cc

dec_label_pc_100031cc:                            ; preds = %dec_label_pc_1000313c
  %v0_100031cc = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100031cc = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_100031cc = or i1 %v0_100031cc, %v1_100031cc
  br i1 %v2_100031cc, label %dec_label_pc_100030c4.outer, label %dec_label_pc_100030c8

dec_label_pc_100031d4:                            ; preds = %dec_label_pc_100030d8
  %v1_100031d4 = add i32 %v2_100030e4, 16
  %v2_100031d4 = inttoptr i32 %v1_100031d4 to i32*
  %v3_100031d4 = load i32, i32* %v2_100031d4, align 4
  store i32 %v3_100031d4, i32* %r29.global-to-local, align 4
  %v0_100031d8 = call i32 @function_1000723c()
  store i32 %v0_100031d8, i32* %r3.global-to-local, align 4
  %v3_100031dc = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_100031dc, i32* %r9.global-to-local, align 4
  %v0_100031e0 = load i32, i32* %r21.global-to-local, align 4
  %v1_100031e0 = mul i32 %v0_100031e0, 16
  %v2_100031e0 = udiv i32 %v0_100031e0, 268435456
  %v3_100031e0 = or i32 %v2_100031e0, %v1_100031e0
  store i32 %v3_100031e0, i32* %r21.global-to-local, align 4
  %v1_100031e4 = call %0 @__asm_mtcrf(i32 1, i32 %v3_100031e0)
  %v1_100031e8 = mul nuw i32 %v2_100031e0, 268435456
  %v2_100031e8 = urem i32 %v0_100031e0, 268435456
  %v3_100031e8 = or i32 %v1_100031e8, %v2_100031e8
  store i32 %v3_100031e8, i32* %r21.global-to-local, align 4
  %v0_100031ec = load i32, i32* %r9.global-to-local, align 4
  %v1_100031ec = mul i32 %v0_100031ec, 24
  %v1_100031f0 = load i32, i32* %r26.global-to-local, align 4
  %v2_100031f0 = add i32 %v1_100031f0, %v1_100031ec
  store i32 %v2_100031f0, i32* %r9.global-to-local, align 4
  %v1_100031f4 = add i32 %v2_100031f0, 20
  %v2_100031f4 = inttoptr i32 %v1_100031f4 to i8*
  %v3_100031f4 = load i8, i8* %v2_100031f4, align 1
  %v4_100031f4 = zext i8 %v3_100031f4 to i32
  store i32 %v4_100031f4, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_100031f4, 64
  %v2_100031f8 = zext i8 %tmp to i32
  %v3_100031f8 = lshr i32 %v0_100031d8, %v2_100031f8
  store i32 %v3_100031f8, i32* %r3.global-to-local, align 4
  %v0_100031fc = load i32, i32* %r29.global-to-local, align 4
  %v2_100031fc = add i32 %v3_100031f8, %v0_100031fc
  store i32 %v2_100031fc, i32* %r29.global-to-local, align 4
  %v1_10003200 = load i32, i32* %r28.global-to-local, align 4
  %v2_10003200 = add i32 %v1_10003200, 16
  %v3_10003200 = inttoptr i32 %v2_10003200 to i32*
  store i32 %v2_100031fc, i32* %v3_10003200, align 4
  %v0_10003204 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10003204, label %dec_label_pc_10003208, label %dec_label_pc_1000310c

dec_label_pc_10003208:                            ; preds = %dec_label_pc_100031d4, %dec_label_pc_100030fc
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_1000320c = call i32 @function_1000723c()
  store i32 %v0_1000320c, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r29, align 4
  %v1_10003214 = load i32, i32* %r28.global-to-local, align 4
  %v2_10003214 = add i32 %v1_10003214, 12
  %v3_10003214 = inttoptr i32 %v2_10003214 to i32*
  store i32 %v0_1000320c, i32* %v3_10003214, align 4
  %v0_10003218 = load i32, i32* %r25.global-to-local, align 4
  %v1_10003218 = load i32, i32* @r29, align 4
  %v4_10003218 = icmp eq i32 %v0_10003218, %v1_10003218
  store i1 %v4_10003218, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10003218, label %dec_label_pc_10003220, label %dec_label_pc_1000311c

dec_label_pc_10003220:                            ; preds = %dec_label_pc_10003208, %dec_label_pc_1000310c
  %v0_10003220 = call i32 @function_1000723c()
  %v0_10003224 = load i32, i32* %r17.global-to-local, align 4
  %v1_10003224 = load i32, i32* @r29, align 4
  %v4_10003224 = icmp eq i32 %v0_10003224, %v1_10003224
  store i1 %v4_10003224, i1* %cr7_eq.global-to-local, align 1
  %v1_10003228 = urem i32 %v0_10003220, 65536
  store i32 %v1_10003228, i32* %r3.global-to-local, align 4
  %v1_1000322c = add nsw i32 %v1_10003228, -1000
  store i32 %v1_1000322c, i32* %r0.global-to-local, align 4
  %v1_10003230 = trunc i32 %v0_10003220 to i16
  %v2_10003230 = load i32, i32* %r28.global-to-local, align 4
  %v3_10003230 = add i32 %v2_10003230, 4
  %v4_10003230 = inttoptr i32 %v3_10003230 to i16*
  store i16 %v1_10003230, i16* %v4_10003230, align 2
  %v0_10003234 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003234 = sub i32 -1, %v0_10003234
  store i32 %v1_10003234, i32* %r0.global-to-local, align 4
  %v1_10003238 = trunc i32 %v1_10003234 to i16
  %v2_10003238 = load i32, i32* @r31, align 4
  %v3_10003238 = add i32 %v2_10003238, 4
  %v4_10003238 = inttoptr i32 %v3_10003238 to i16*
  store i16 %v1_10003238, i16* %v4_10003238, align 2
  br i1 %v4_10003224, label %dec_label_pc_10003240, label %dec_label_pc_10003220.dec_label_pc_10003124_crit_edge

dec_label_pc_10003220.dec_label_pc_10003124_crit_edge: ; preds = %dec_label_pc_10003220
  %v1_10003124.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10003124

dec_label_pc_10003240:                            ; preds = %dec_label_pc_10003220, %dec_label_pc_1000311c
  %v0_10003240 = call i32 @function_1000723c()
  %v1_10003240 = trunc i32 %v0_10003240 to i16
  store i32 %v0_10003240, i32* %r3.global-to-local, align 4
  %v0_10003244 = load i32, i32* %r18.global-to-local, align 4
  %v1_10003244 = load i32, i32* @r29, align 4
  %v4_10003244 = icmp eq i32 %v0_10003244, %v1_10003244
  store i1 %v4_10003244, i1* %cr7_eq.global-to-local, align 1
  %v3_10003248 = load i32, i32* %r28.global-to-local, align 4
  %v4_10003248 = add i32 %v3_10003248, 44
  %v5_10003248 = inttoptr i32 %v4_10003248 to i16*
  store i16 %v1_10003240, i16* %v5_10003248, align 2
  br i1 %v4_10003244, label %dec_label_pc_10003250, label %dec_label_pc_1000312c

dec_label_pc_10003250:                            ; preds = %dec_label_pc_10003240, %dec_label_pc_10003124
  %v0_10003250 = call i32 @function_1000723c()
  %v1_10003250 = trunc i32 %v0_10003250 to i16
  store i32 %v0_10003250, i32* %r3.global-to-local, align 4
  %v3_10003254 = load i32, i32* @r30, align 4
  %v4_10003254 = add i32 %v3_10003254, 2
  %v5_10003254 = inttoptr i32 %v4_10003254 to i16*
  store i16 %v1_10003250, i16* %v5_10003254, align 2
  %v0_10003258 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10003258, label %dec_label_pc_1000325c, label %dec_label_pc_10003130

dec_label_pc_1000325c:                            ; preds = %dec_label_pc_10003250, %dec_label_pc_1000312c
  %v0_1000325c = call i32 @function_1000723c()
  store i32 %v0_1000325c, i32* %r3.global-to-local, align 4
  %v1_10003260 = load i32, i32* @r31, align 4
  %v2_10003260 = add i32 %v1_10003260, 16
  %v3_10003260 = inttoptr i32 %v2_10003260 to i32*
  store i32 %v0_1000325c, i32* %v3_10003260, align 4
  %v0_10003264 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10003264, label %dec_label_pc_1000313c, label %dec_label_pc_10003268

dec_label_pc_10003268:                            ; preds = %dec_label_pc_10003130, %dec_label_pc_1000325c
  %v0_10003268 = load i32, i32* @r30, align 4
  %v1_10003268 = add i32 %v0_10003268, 8
  store i32 %v1_10003268, i32* @r3, align 4
  %v0_1000326c = load i32, i32* %r16.global-to-local, align 4
  store i32 %v0_1000326c, i32* @r4, align 4
  %v0_10003270 = call i32 @function_10007468()
  store i32 %v0_10003270, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000313c

; uselistorder directives
  uselistorder i32 %v0_10003250, { 1, 0 }
  uselistorder i32 %v0_10003240, { 1, 0 }
  uselistorder i32 %v1_10003234, { 1, 0 }
  uselistorder i32 %v1_10003228, { 1, 0 }
  uselistorder i32 %v0_10003220, { 1, 0 }
  uselistorder i32 %v1_10003218, { 1, 0 }
  uselistorder i32 %v0_100031e0, { 2, 1, 0 }
  uselistorder i1 %v1_100031cc, { 1, 0 }
  uselistorder i1 %v0_100031cc, { 1, 0 }
  uselistorder i32 %v1_100031bc, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v2_10003198, { 0, 2, 1, 3 }
  uselistorder i32 %v4_10003178, { 1, 0 }
  uselistorder i32 %v0_100030fc, { 2, 1, 0 }
  uselistorder i32 %v4_100030e0, { 1, 0, 2 }
  uselistorder i32 %v1_100030dc, { 1, 0 }
  uselistorder i32 %v1_1000302c, { 1, 0 }
  uselistorder i32 %v1_10002f74, { 1, 0 }
  uselistorder i32 %v1_10002f68, { 1, 0 }
  uselistorder i32 %v1_10002f04, { 1, 0 }
  uselistorder i32 %v0_10002f04, { 1, 2, 3, 0 }
  uselistorder i32 %v1_10002ef4, { 1, 2, 0 }
  uselistorder i32 %v0_10002ee8, { 1, 0 }
  uselistorder i32 %v5_10002e94, { 0, 3, 1, 2 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 8, 9, 21, 22 }
  uselistorder i32* %r31.global-to-local, { 0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1, 2, 3, 4, 16 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 3, 4, 5, 6, 7, 9, 8, 10, 2, 11, 12 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 22, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 1, 2 }
  uselistorder i32* %r29.global-to-local, { 1, 0, 2, 3, 4, 8, 5, 6, 7 }
  uselistorder i32* %r21.global-to-local, { 0, 1, 4, 2, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 22, 23, 24, 25, 12, 27, 28, 29, 30, 31 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 2, 7, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr3_eq.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i8 47, { 12, 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder label %dec_label_pc_10003268, { 1, 0 }
  uselistorder label %dec_label_pc_1000313c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100030c8, { 1, 0 }
  uselistorder label %dec_label_pc_100030c4, { 1, 0 }
  uselistorder label %dec_label_pc_100030a8, { 1, 0 }
  uselistorder label %dec_label_pc_10003044, { 1, 0 }
  uselistorder label %dec_label_pc_10003018, { 1, 0 }
  uselistorder label %dec_label_pc_10002fb8, { 1, 0 }
}

define i32 @function_10003278(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10003278:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr3_lt.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp13 = call i16 @__decompiler_undefined_function_1()
  %tmp14 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-404 = alloca i32, align 4
  %stack_var_-384 = alloca i32, align 4
  %stack_var_-368 = alloca i32, align 4
  %stack_var_-408 = alloca i32, align 4
  %v0_1000327c = load i32, i32* @lr, align 4
  store i32 %v0_1000327c, i32* %r0.global-to-local, align 4
  %v0_10003280 = call i32 @__asm_mfcr()
  store i32 %v0_10003280, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r20.global-to-local, align 4
  %v0_10003290 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10003280, i32* %r21.global-to-local, align 4
  %v0_100032c8 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_100032d0 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 268448492, i32* @lr, align 4
  %v2_100032e8 = call i32 @function_1000bae4(i32 16, i32 16)
  store i32 %v2_100032e8, i32* %r22.global-to-local, align 4
  %v0_100032f4 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_100032f4, i32* %r3.global-to-local, align 4
  store i32 268448508, i32* @lr, align 4
  %v2_100032f8 = call i32 @function_1000bae4(i32 %v0_100032f4, i32 4)
  %v0_100032fc = load i32, i32* @r28, align 4
  store i32 %v2_100032f8, i32* %r23.global-to-local, align 4
  %v0_1000330c = load i32, i32* @r29, align 4
  store i32 %v0_1000330c, i32* %r3.global-to-local, align 4
  store i32 268448532, i32* @lr, align 4
  %v4_10003310 = inttoptr i32 %v0_100032fc to i32*
  %v5_10003310 = call i32 @function_1000235c(i32 %v0_1000330c, i32* %v4_10003310, i32 2, i32 0)
  %v5_10003320 = trunc i32 %v5_10003310 to i8
  %v0_10003328 = load i32, i32* @r28, align 4
  %v0_1000332c = load i32, i32* @r29, align 4
  store i32 %v0_1000332c, i32* %r3.global-to-local, align 4
  store i32 268448564, i32* @lr, align 4
  %v4_10003330 = inttoptr i32 %v0_10003328 to i32*
  %v5_10003330 = call i32 @function_1000235c(i32 %v0_1000332c, i32* %v4_10003330, i32 3, i32 65535)
  %v0_10003334 = load i32, i32* @r28, align 4
  store i32 %v5_10003330, i32* @r31, align 4
  %v0_10003344 = load i32, i32* @r29, align 4
  store i32 %v0_10003344, i32* %r3.global-to-local, align 4
  store i32 268448588, i32* @lr, align 4
  %v4_10003348 = inttoptr i32 %v0_10003334 to i32*
  %v5_10003348 = call i32 @function_1000235c(i32 %v0_10003344, i32* %v4_10003348, i32 4, i32 64)
  %v0_1000334c = load i32, i32* @r28, align 4
  %v5_10003358 = trunc i32 %v5_10003348 to i8
  %v0_10003360 = load i32, i32* @r29, align 4
  store i32 %v0_10003360, i32* %r3.global-to-local, align 4
  store i32 268448616, i32* @lr, align 4
  %v4_10003364 = inttoptr i32 %v0_1000334c to i32*
  %v5_10003364 = call i32 @function_1000235c(i32 %v0_10003360, i32* %v4_10003364, i32 5, i32 1)
  %v1_1000336c = urem i32 %v5_10003364, 256
  %v0_10003378 = load i32, i32* @r28, align 4
  %v0_10003380 = load i32, i32* @r29, align 4
  store i32 %v0_10003380, i32* %r3.global-to-local, align 4
  store i32 268448648, i32* @lr, align 4
  %v4_10003384 = inttoptr i32 %v0_10003378 to i32*
  %v5_10003384 = call i32 @function_1000235c(i32 %v0_10003380, i32* %v4_10003384, i32 7, i32 65535)
  %v0_10003388 = load i32, i32* @r28, align 4
  %v5_10003394 = trunc i32 %v5_10003384 to i16
  %v0_1000339c = load i32, i32* @r29, align 4
  store i32 %v0_1000339c, i32* %r3.global-to-local, align 4
  store i32 268448676, i32* @lr, align 4
  %v4_100033a0 = inttoptr i32 %v0_10003388 to i32*
  %v5_100033a0 = call i32 @function_1000235c(i32 %v0_1000339c, i32* %v4_100033a0, i32 11, i32 0)
  %v0_100033a4 = load i32, i32* @r28, align 4
  %v1_100033a8 = urem i32 %v5_100033a0, 256
  %v0_100033b8 = load i32, i32* @r29, align 4
  store i32 %v0_100033b8, i32* %r3.global-to-local, align 4
  store i32 268448704, i32* @lr, align 4
  %v4_100033bc = inttoptr i32 %v0_100033a4 to i32*
  %v5_100033bc = call i32 @function_1000235c(i32 %v0_100033b8, i32* %v4_100033bc, i32 12, i32 1)
  %v0_100033c0 = load i32, i32* @r28, align 4
  %v1_100033cc = urem i32 %v5_100033bc, 256
  %v0_100033d0 = load i32, i32* @r29, align 4
  store i32 %v0_100033d0, i32* %r3.global-to-local, align 4
  store i32 268448728, i32* @lr, align 4
  %v4_100033d4 = inttoptr i32 %v0_100033c0 to i32*
  %v5_100033d4 = call i32 @function_1000235c(i32 %v0_100033d0, i32* %v4_100033d4, i32 13, i32 1)
  %v0_100033d8 = load i32, i32* @r28, align 4
  %v1_100033e4 = urem i32 %v5_100033d4, 256
  %v0_100033e8 = load i32, i32* @r29, align 4
  store i32 %v0_100033e8, i32* %r3.global-to-local, align 4
  store i32 268448752, i32* @lr, align 4
  %v4_100033ec = inttoptr i32 %v0_100033d8 to i32*
  %v5_100033ec = call i32 @function_1000235c(i32 %v0_100033e8, i32* %v4_100033ec, i32 14, i32 0)
  %v0_100033f0 = load i32, i32* @r28, align 4
  %v1_100033fc = urem i32 %v5_100033ec, 256
  %v0_10003400 = load i32, i32* @r29, align 4
  store i32 %v0_10003400, i32* %r3.global-to-local, align 4
  store i32 268448776, i32* @lr, align 4
  %v4_10003404 = inttoptr i32 %v0_100033f0 to i32*
  %v5_10003404 = call i32 @function_1000235c(i32 %v0_10003400, i32* %v4_10003404, i32 15, i32 0)
  %v0_10003408 = load i32, i32* @r28, align 4
  %v1_10003414 = urem i32 %v5_10003404, 256
  %v0_10003418 = load i32, i32* @r29, align 4
  store i32 %v0_10003418, i32* %r3.global-to-local, align 4
  store i32 268448800, i32* @lr, align 4
  %v4_1000341c = inttoptr i32 %v0_10003408 to i32*
  %v5_1000341c = call i32 @function_1000235c(i32 %v0_10003418, i32* %v4_1000341c, i32 16, i32 0)
  %v0_10003428 = load i32, i32* @r28, align 4
  %v1_1000342c = urem i32 %v5_1000341c, 256
  %v0_10003430 = load i32, i32* @r29, align 4
  store i32 %v0_10003430, i32* %r3.global-to-local, align 4
  store i32 268448824, i32* @lr, align 4
  %v4_10003434 = inttoptr i32 %v0_10003428 to i32*
  %v5_10003434 = call i32 @function_1000235c(i32 %v0_10003430, i32* %v4_10003434, i32 0, i32 768)
  %v0_10003438 = load i32, i32* @r28, align 4
  store i32 %v5_10003434, i32* %r25.global-to-local, align 4
  %v0_10003448 = load i32, i32* @r29, align 4
  store i32 %v0_10003448, i32* %r3.global-to-local, align 4
  store i32 268448848, i32* @lr, align 4
  %v4_1000344c = inttoptr i32 %v0_10003438 to i32*
  %v5_1000344c = call i32 @function_1000235c(i32 %v0_10003448, i32* %v4_1000344c, i32 1, i32 1)
  %v1_10003454 = urem i32 %v5_1000344c, 256
  store i32 %v1_10003454, i32* %r27.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268448868, i32* @lr, align 4
  %v3_10003460 = call i32 @function_1000b758(i32 2, i32 3, i32 6)
  store i32 %v3_10003460, i32* %r3.global-to-local, align 4
  %v3_10003464 = icmp eq i32 %v3_10003460, -1
  store i1 %v3_10003464, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10003460, i32* %r24.global-to-local, align 4
  br i1 %v3_10003464, label %dec_label_pc_10003624, label %dec_label_pc_10003470

dec_label_pc_10003470:                            ; preds = %dec_label_pc_10003278
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_1000347c = ptrtoint i32* %stack_var_-408 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-408, align 4
  store i32 268448908, i32* @lr, align 4
  %v5_10003488 = call i32 @function_1000b71c(i32 0, i32 3, i32 %v2_1000347c, i32 4, i32 4)
  store i32 %v5_10003488, i32* %r3.global-to-local, align 4
  %v3_1000348c = icmp eq i32 %v5_10003488, -1
  store i1 %v3_1000348c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000348c, label %dec_label_pc_1000361c, label %dec_label_pc_10003494

dec_label_pc_10003494:                            ; preds = %dec_label_pc_10003470
  %v0_10003494 = load i32, i32* %r21.global-to-local, align 4
  %v1_10003494 = icmp slt i32 %v0_10003494, 0
  %v3_10003494 = icmp eq i32 %v0_10003494, 0
  store i1 %v1_10003494, i1* %cr3_lt.global-to-local, align 1
  store i1 %v3_10003494, i1* %cr3_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-408, align 4
  %v0_100034a0 = load i32, i32* @r31, align 4
  %v1_100034a0 = urem i32 %v0_100034a0, 65536
  store i32 %v1_100034a0, i32* %r19.global-to-local, align 4
  %tmp49 = icmp slt i32 %v0_10003494, 1
  br i1 %tmp49, label %dec_label_pc_100037bc, label %dec_label_pc_100034a8

dec_label_pc_100034a8:                            ; preds = %dec_label_pc_10003494
  %v4_100034a8 = sext i16 %v5_10003394 to i32
  store i32 %v4_100034a8, i32* %r9.global-to-local, align 4
  store i32 65535, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cr4_eq.global-to-local, align 1
  %v2_1000354c = ptrtoint i32* %stack_var_-368 to i32
  %v2_10003558 = ptrtoint i32* %stack_var_-384 to i32
  %v2_1000355c = ptrtoint i32* %stack_var_-404 to i32
  %v4_10003594 = zext i16 %tmp13 to i32
  %v1_100035c4 = and i32 %tmp, 1179648
  %v3_100036d8 = icmp eq i32 %v1_1000336c, 0
  %v4_100036f8 = sext i8 %v5_10003320 to i32
  %v4_10003700 = sext i8 %v5_10003358 to i32
  %v1_100035c8 = and i32 %tmp, 327680
  %v3_100035c8 = icmp eq i32 %v1_100035c8, 0
  %v4_100035d0 = icmp eq i32 %v1_100035c4, 1179648
  br label %dec_label_pc_100034b4

dec_label_pc_100034b4:                            ; preds = %dec_label_pc_100037a8, %dec_label_pc_100035dc, %dec_label_pc_100034a8
  %v0_100034b4 = load i32, i32* %r25.global-to-local, align 4
  %v1_100034b4 = add i32 %v0_100034b4, 40
  store i32 %v1_100034b4, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_100034b8

dec_label_pc_100034b8:                            ; preds = %dec_label_pc_100035b4, %dec_label_pc_100034b4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268448968, i32* @lr, align 4
  %v3_100034c4 = call i32 @function_1000b758(i32 2, i32 1, i32 0)
  store i32 %v3_100034c4, i32* %r3.global-to-local, align 4
  %v3_100034c8 = icmp eq i32 %v3_100034c4, -1
  store i1 %v3_100034c8, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_100034c4, i32* %r28.global-to-local, align 4
  br i1 %v3_100034c8, label %dec_label_pc_100037a8, label %dec_label_pc_100034d4

dec_label_pc_100034d4:                            ; preds = %dec_label_pc_100034b8
  store i32 3, i32* @r4, align 4
  store i32 268448996, i32* @lr, align 4
  %v1_100034e0 = call i32 @function_1000a85c(i32 3)
  store i32 4, i32* @r4, align 4
  %v0_100034ec = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100034ec, i32* %r3.global-to-local, align 4
  store i32 268449016, i32* @lr, align 4
  %v2_100034f4 = call i32 @function_1000a85c(i32 %v0_100034ec)
  store i32 %v2_100034f4, i32* %r3.global-to-local, align 4
  %v3_100034f8 = load i32, i32* %stack_var_-408, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_10003500 = mul i32 %v3_100034f8, 24
  store i32 %v1_10003500, i32* %r0.global-to-local, align 4
  %v0_10003508 = load i32, i32* %r20.global-to-local, align 4
  %v2_10003508 = add i32 %v0_10003508, %v1_10003500
  store i32 %v2_10003508, i32* %r11.global-to-local, align 4
  %v1_1000350c = add i32 %v2_10003508, 20
  %v2_1000350c = inttoptr i32 %v1_1000350c to i8*
  %v3_1000350c = load i8, i8* %v2_1000350c, align 1
  %v4_1000350c = zext i8 %v3_1000350c to i32
  store i32 %v4_1000350c, i32* %r9.global-to-local, align 4
  %v3_10003510 = icmp eq i8 %v3_1000350c, 31
  store i1 %v3_10003510, i1* %cr7_eq.global-to-local, align 1
  %tmp50 = icmp ult i8 %v3_1000350c, 32
  %v1_100035e8 = add i32 %v2_10003508, 16
  %v2_100035e8 = inttoptr i32 %v1_100035e8 to i32*
  %v3_100035e8 = load i32, i32* %v2_100035e8, align 4
  br i1 %tmp50, label %dec_label_pc_100035e8, label %dec_label_pc_10003518

dec_label_pc_10003518:                            ; preds = %dec_label_pc_100034d4
  store i32 %v3_100035e8, i32* %r0.global-to-local, align 4
  %v0_10003520 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10003520, label %dec_label_pc_10003610, label %dec_label_pc_10003524

dec_label_pc_10003524:                            ; preds = %dec_label_pc_100035e8, %dec_label_pc_10003518
  %stack_var_-396.0 = phi i32 [ %v2_10003604, %dec_label_pc_100035e8 ], [ %v3_100035e8, %dec_label_pc_10003518 ]
  store i32 %v4_100034a8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000352c

dec_label_pc_1000352c:                            ; preds = %dec_label_pc_10003610, %dec_label_pc_10003524
  %stack_var_-396.1 = phi i32 [ %stack_var_-396.2, %dec_label_pc_10003610 ], [ %stack_var_-396.0, %dec_label_pc_10003524 ]
  %storemerge = phi i16 [ %v1_10003610, %dec_label_pc_10003610 ], [ %v5_10003394, %dec_label_pc_10003524 ]
  %v0_10003534 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003534, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000353c.75 to i32), i32* @lr, align 4
  %v0_10003538 = call i32 @function_1000b558()
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268449092, i32* @lr, align 4
  %v0_10003540 = call i32 @function_1000ad5c()
  store i32 %v0_10003540, i32* %r3.global-to-local, align 4
  store i32 %v0_10003540, i32* @r31, align 4
  %v4_10003588 = icmp eq i32 %tmp14, %stack_var_-396.1
  %v4_10003598 = zext i16 %storemerge to i32
  %v4_1000359c = icmp eq i16 %storemerge, %tmp13
  %v4_10003588.not = xor i1 %v4_10003588, true
  br label %dec_label_pc_10003548

dec_label_pc_10003548:                            ; preds = %dec_label_pc_100035a4, %dec_label_pc_1000352c
  store i32 16, i32* %r0.global-to-local, align 4
  store i32 %v2_10003558, i32* %r7.global-to-local, align 4
  store i32 %v2_1000355c, i32* %r8.global-to-local, align 4
  %v0_10003560 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10003560, i32* %r3.global-to-local, align 4
  store i32 16, i32* %stack_var_-404, align 4
  store i32 268449132, i32* @lr, align 4
  %v6_10003568 = call i32 @function_1000b664(i32 %v0_10003560, i32 %v2_1000354c, i32 256, i32 16384, i32 %v2_10003558, i32 %v2_1000355c)
  store i32 %v6_10003568, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_10003574 = icmp eq i32 %v6_10003568, -1
  store i1 %v3_10003574, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10003574, label %dec_label_pc_10003624, label %dec_label_pc_10003580

dec_label_pc_10003580:                            ; preds = %dec_label_pc_10003548
  store i32 %tmp14, i32* %r10.global-to-local, align 4
  store i32 %stack_var_-396.1, i32* %r0.global-to-local, align 4
  store i1 %v4_10003588, i1* %cr7_eq.global-to-local, align 1
  %tmp51 = icmp ult i32 %v6_10003568, 41
  %or.cond = or i1 %tmp51, %v4_10003588.not
  br i1 %or.cond, label %dec_label_pc_100035a4, label %dec_label_pc_10003594

dec_label_pc_10003594:                            ; preds = %dec_label_pc_10003580
  store i32 %v4_10003594, i32* %r0.global-to-local, align 4
  store i32 %v4_10003598, i32* %r8.global-to-local, align 4
  store i1 %v4_1000359c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_1000359c, label %dec_label_pc_100035c0, label %dec_label_pc_100035a4

dec_label_pc_100035a4:                            ; preds = %dec_label_pc_10003580, %dec_label_pc_100035d8, %dec_label_pc_10003594
  store i32 268449192, i32* @lr, align 4
  %v0_100035a4 = call i32 @function_1000ad5c()
  %v0_100035a8 = load i32, i32* @r31, align 4
  %v2_100035a8 = sub i32 %v0_100035a4, %v0_100035a8
  store i32 %v2_100035a8, i32* %r3.global-to-local, align 4
  %v3_100035ac = icmp eq i32 %v2_100035a8, 10
  store i1 %v3_100035ac, i1* %cr7_eq.global-to-local, align 1
  %tmp52 = icmp slt i32 %v2_100035a8, 11
  br i1 %tmp52, label %dec_label_pc_10003548, label %dec_label_pc_100035b4

dec_label_pc_100035b4:                            ; preds = %dec_label_pc_100035a4
  %v0_100035b4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100035b4, i32* %r3.global-to-local, align 4
  store i32 268449212, i32* @lr, align 4
  %v0_100035b8 = call i32 @function_1000a98c()
  store i32 %v0_100035b8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100034b8

dec_label_pc_100035c0:                            ; preds = %dec_label_pc_10003594
  store i32 %tmp, i32* %r9.global-to-local, align 4
  store i32 %v1_100035c4, i32* %r11.global-to-local, align 4
  store i32 1179648, i32* %r0.global-to-local, align 4
  store i1 %v4_100035d0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100035d0, label %dec_label_pc_10003684, label %dec_label_pc_100035d8

dec_label_pc_100035d8:                            ; preds = %dec_label_pc_100035c0
  br i1 %v3_100035c8, label %dec_label_pc_100035a4, label %dec_label_pc_100035dc

dec_label_pc_100035dc:                            ; preds = %dec_label_pc_100035d8
  %v0_100035dc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100035dc, i32* %r3.global-to-local, align 4
  store i32 268449252, i32* @lr, align 4
  %v0_100035e0 = call i32 @function_1000a98c()
  store i32 %v0_100035e0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100034b4

dec_label_pc_100035e8:                            ; preds = %dec_label_pc_100034d4
  store i32 %v3_100035e8, i32* %r29.global-to-local, align 4
  %v0_100035ec = call i32 @function_1000723c()
  store i32 %v0_100035ec, i32* %r3.global-to-local, align 4
  %v3_100035f0 = load i32, i32* %stack_var_-408, align 4
  %v1_100035f4 = mul i32 %v3_100035f0, 24
  %v1_100035f8 = load i32, i32* %r20.global-to-local, align 4
  %v2_100035f8 = add i32 %v1_100035f8, %v1_100035f4
  store i32 %v2_100035f8, i32* %r9.global-to-local, align 4
  %v1_100035fc = add i32 %v2_100035f8, 20
  %v2_100035fc = inttoptr i32 %v1_100035fc to i8*
  %v3_100035fc = load i8, i8* %v2_100035fc, align 1
  %v4_100035fc = zext i8 %v3_100035fc to i32
  store i32 %v4_100035fc, i32* %r0.global-to-local, align 4
  %tmp53 = urem i8 %v3_100035fc, 64
  %v2_10003600 = zext i8 %tmp53 to i32
  %v3_10003600 = lshr i32 %v0_100035ec, %v2_10003600
  store i32 %v3_10003600, i32* %r3.global-to-local, align 4
  %v0_10003604 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003604 = add i32 %v3_10003600, %v0_10003604
  store i32 %v2_10003604, i32* %r29.global-to-local, align 4
  %v0_1000360c = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_1000360c, label %dec_label_pc_10003610, label %dec_label_pc_10003524

dec_label_pc_10003610:                            ; preds = %dec_label_pc_100035e8, %dec_label_pc_10003518
  %stack_var_-396.2 = phi i32 [ %v2_10003604, %dec_label_pc_100035e8 ], [ %v3_100035e8, %dec_label_pc_10003518 ]
  %v0_10003610 = call i32 @function_1000723c()
  %v1_10003610 = trunc i32 %v0_10003610 to i16
  store i32 %v0_10003610, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000352c

dec_label_pc_1000361c:                            ; preds = %dec_label_pc_10003470
  %v0_1000361c = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_1000361c, i32* %r3.global-to-local, align 4
  store i32 268449316, i32* @lr, align 4
  %v0_10003620 = call i32 @function_1000a98c()
  store i32 %v0_10003620, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003624

dec_label_pc_10003624:                            ; preds = %dec_label_pc_10003548, %dec_label_pc_10003278, %dec_label_pc_1000361c
  store i32 %v0_10003290, i32* %r0.global-to-local, align 4
  %v1_10003638 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10003280)
  store i32 %v0_100032c8, i32* %r28.global-to-local, align 4
  store i32 %v0_100032d0, i32* %r29.global-to-local, align 4
  %v0_10003680 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10003680

dec_label_pc_10003684:                            ; preds = %dec_label_pc_100035c0
  %v3_10003684 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10003684, i32* %r29.global-to-local, align 4
  %v0_10003688 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10003688, i32* @r3, align 4
  %v0_1000368c = load i32, i32* @r30, align 4
  %v1_1000368c = add i32 %v0_1000368c, 2
  %v2_1000368c = inttoptr i32 %v1_1000368c to i16*
  %v3_1000368c = load i16, i16* %v2_1000368c, align 2
  %v4_1000368c = zext i16 %v3_1000368c to i32
  store i32 %v4_1000368c, i32* %r11.global-to-local, align 4
  %v1_10003690 = mul i32 %v3_10003684, 16
  store i32 %v1_10003690, i32* %r9.global-to-local, align 4
  %v1_10003694 = mul i32 %v3_10003684, 4
  store i32 %v1_10003694, i32* @r29, align 4
  %v1_10003698 = load i32, i32* %r22.global-to-local, align 4
  %v3_10003698 = add i32 %v1_10003698, %v1_10003690
  %v4_10003698 = inttoptr i32 %v3_10003698 to i32*
  store i32 %tmp14, i32* %v4_10003698, align 4
  %v0_1000369c = load i32, i32* %r22.global-to-local, align 4
  %v1_1000369c = load i32, i32* %r9.global-to-local, align 4
  %v2_1000369c = add i32 %v1_1000369c, %v0_1000369c
  store i32 %v2_1000369c, i32* %r9.global-to-local, align 4
  %v0_100036a0 = load i32, i32* %r8.global-to-local, align 4
  %v1_100036a0 = trunc i32 %v0_100036a0 to i16
  %v3_100036a0 = add i32 %v2_1000369c, 14
  %v4_100036a0 = inttoptr i32 %v3_100036a0 to i16*
  store i16 %v1_100036a0, i16* %v4_100036a0, align 2
  %v0_100036a4 = load i32, i32* @r30, align 4
  %v1_100036a4 = add i32 %v0_100036a4, 4
  %v2_100036a4 = inttoptr i32 %v1_100036a4 to i32*
  %v3_100036a4 = load i32, i32* %v2_100036a4, align 4
  store i32 %v3_100036a4, i32* %r0.global-to-local, align 4
  %v0_100036a8 = load i32, i32* %r11.global-to-local, align 4
  %v1_100036a8 = trunc i32 %v0_100036a8 to i16
  %v2_100036a8 = load i32, i32* %r9.global-to-local, align 4
  %v3_100036a8 = add i32 %v2_100036a8, 12
  %v4_100036a8 = inttoptr i32 %v3_100036a8 to i16*
  store i16 %v1_100036a8, i16* %v4_100036a8, align 2
  %v0_100036ac = load i32, i32* %r0.global-to-local, align 4
  %v1_100036ac = load i32, i32* %r9.global-to-local, align 4
  %v2_100036ac = add i32 %v1_100036ac, 4
  %v3_100036ac = inttoptr i32 %v2_100036ac to i32*
  store i32 %v0_100036ac, i32* %v3_100036ac, align 4
  %v0_100036b0 = load i32, i32* @r30, align 4
  %v1_100036b0 = add i32 %v0_100036b0, 8
  %v2_100036b0 = inttoptr i32 %v1_100036b0 to i32*
  %v3_100036b0 = load i32, i32* %v2_100036b0, align 4
  store i32 %v3_100036b0, i32* %r0.global-to-local, align 4
  %v1_100036b4 = load i32, i32* %r9.global-to-local, align 4
  %v2_100036b4 = add i32 %v1_100036b4, 8
  %v3_100036b4 = inttoptr i32 %v2_100036b4 to i32*
  store i32 %v3_100036b0, i32* %v3_100036b4, align 4
  store i32 268449468, i32* @lr, align 4
  %v0_100036b8 = call i32 @function_1000b98c()
  store i32 %v0_100036b8, i32* %r3.global-to-local, align 4
  %v3_100036bc = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_100036bc, i32* %r0.global-to-local, align 4
  %v1_100036c0 = load i32, i32* @r29, align 4
  %v2_100036c0 = load i32, i32* %r23.global-to-local, align 4
  %v3_100036c0 = add i32 %v2_100036c0, %v1_100036c0
  %v4_100036c0 = inttoptr i32 %v3_100036c0 to i32*
  store i32 %v0_100036b8, i32* %v4_100036c0, align 4
  %v0_100036c4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100036c4 = mul i32 %v0_100036c4, 4
  store i32 %v1_100036c4, i32* %r0.global-to-local, align 4
  %v0_100036c8 = load i32, i32* %r23.global-to-local, align 4
  %v2_100036c8 = add i32 %v0_100036c8, %v1_100036c4
  %v3_100036c8 = inttoptr i32 %v2_100036c8 to i32*
  %v4_100036c8 = load i32, i32* %v3_100036c8, align 4
  store i32 %v4_100036c8, i32* @r31, align 4
  store i32 %v1_1000336c, i32* %r0.global-to-local, align 4
  %v1_100036d0 = inttoptr i32 %v4_100036c8 to i32*
  %v2_100036d0 = load i32, i32* %v1_100036d0, align 4
  store i32 %v2_100036d0, i32* %r9.global-to-local, align 4
  %v1_100036d4 = add i32 %v4_100036c8, 20
  store i32 %v1_100036d4, i32* @r30, align 4
  store i1 %v3_100036d8, i1* %cr7_eq.global-to-local, align 1
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_100036e0 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100036e0, i32* %r9.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_100036e8 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_100036ec = load i32, i32* %r19.global-to-local, align 4
  %v1_100036ec = trunc i32 %v0_100036ec to i16
  %v2_100036ec = load i32, i32* @r31, align 4
  %v3_100036ec = add i32 %v2_100036ec, 4
  %v4_100036ec = inttoptr i32 %v3_100036ec to i16*
  store i16 %v1_100036ec, i16* %v4_100036ec, align 2
  %v1_100036f0 = load i32, i32* @r31, align 4
  %v2_100036f0 = inttoptr i32 %v1_100036f0 to i32*
  store i32 %v1_100036e8, i32* %v2_100036f0, align 4
  %v0_100036f4 = load i32, i32* %r26.global-to-local, align 4
  %v1_100036f4 = trunc i32 %v0_100036f4 to i16
  %v2_100036f4 = load i32, i32* @r31, align 4
  %v3_100036f4 = add i32 %v2_100036f4, 2
  %v4_100036f4 = inttoptr i32 %v3_100036f4 to i16*
  store i16 %v1_100036f4, i16* %v4_100036f4, align 2
  store i32 %v4_100036f8, i32* %r9.global-to-local, align 4
  %v2_100036fc = load i32, i32* @r31, align 4
  %v3_100036fc = add i32 %v2_100036fc, 1
  %v4_100036fc = inttoptr i32 %v3_100036fc to i8*
  store i8 %v5_10003320, i8* %v4_100036fc, align 1
  store i32 %v4_10003700, i32* %r0.global-to-local, align 4
  %v2_10003704 = load i32, i32* @r31, align 4
  %v3_10003704 = add i32 %v2_10003704, 8
  %v4_10003704 = inttoptr i32 %v3_10003704 to i8*
  store i8 %v5_10003358, i8* %v4_10003704, align 1
  %v0_10003708 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10003708, label %dec_label_pc_10003714, label %dec_label_pc_1000370c

dec_label_pc_1000370c:                            ; preds = %dec_label_pc_10003684
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10003710 = load i32, i32* @r31, align 4
  %v3_10003710 = add i32 %v2_10003710, 6
  %v4_10003710 = inttoptr i32 %v3_10003710 to i16*
  store i16 16384, i16* %v4_10003710, align 2
  br label %dec_label_pc_10003714

dec_label_pc_10003714:                            ; preds = %dec_label_pc_10003684, %dec_label_pc_1000370c
  %v2_1000371c = load i32, i32* @r31, align 4
  %v3_1000371c = add i32 %v2_1000371c, 9
  %v4_1000371c = inttoptr i32 %v3_1000371c to i8*
  store i8 6, i8* %v4_1000371c, align 1
  %v3_10003720 = load i32, i32* @global_var_1001e180.71, align 4
  store i32 %v3_10003720, i32* %r0.global-to-local, align 4
  %v1_10003724 = load i32, i32* @r31, align 4
  %v2_10003724 = add i32 %v1_10003724, 12
  %v3_10003724 = inttoptr i32 %v2_10003724 to i32*
  store i32 %v3_10003720, i32* %v3_10003724, align 4
  %v3_10003728 = load i32, i32* %stack_var_-408, align 4
  %v1_1000372c = mul i32 %v3_10003728, 16
  store i32 %v1_1000372c, i32* %r9.global-to-local, align 4
  %v1_10003730 = load i32, i32* %r22.global-to-local, align 4
  %v2_10003730 = add i32 %v1_10003730, %v1_1000372c
  %v3_10003730 = inttoptr i32 %v2_10003730 to i32*
  %v4_10003730 = load i32, i32* %v3_10003730, align 4
  store i32 %v4_10003730, i32* %r0.global-to-local, align 4
  store i32 %v2_10003730, i32* %r9.global-to-local, align 4
  %v1_10003738 = add i32 %v2_10003730, 12
  %v2_10003738 = inttoptr i32 %v1_10003738 to i16*
  %v3_10003738 = load i16, i16* %v2_10003738, align 2
  %v4_10003738 = zext i16 %v3_10003738 to i32
  store i32 %v4_10003738, i32* %r11.global-to-local, align 4
  %v1_1000373c = load i32, i32* @r31, align 4
  %v2_1000373c = add i32 %v1_1000373c, 16
  %v3_1000373c = inttoptr i32 %v2_1000373c to i32*
  store i32 %v4_10003730, i32* %v3_1000373c, align 4
  %v0_10003740 = load i32, i32* %r11.global-to-local, align 4
  %v1_10003740 = trunc i32 %v0_10003740 to i16
  %v2_10003740 = load i32, i32* @r31, align 4
  %v3_10003740 = add i32 %v2_10003740, 20
  %v4_10003740 = inttoptr i32 %v3_10003740 to i16*
  store i16 %v1_10003740, i16* %v4_10003740, align 2
  %v0_10003744 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003744 = add i32 %v0_10003744, 8
  %v2_10003744 = inttoptr i32 %v1_10003744 to i32*
  %v3_10003744 = load i32, i32* %v2_10003744, align 4
  store i32 %v3_10003744, i32* %r0.global-to-local, align 4
  %v0_10003748 = load i32, i32* @r30, align 4
  %v1_10003748 = add i32 %v0_10003748, 12
  %v2_10003748 = inttoptr i32 %v1_10003748 to i32*
  %v3_10003748 = load i32, i32* %v2_10003748, align 4
  store i32 %v3_10003748, i32* %r11.global-to-local, align 4
  %v2_1000374c = add i32 %v0_10003748, 4
  %v3_1000374c = inttoptr i32 %v2_1000374c to i32*
  store i32 %v3_10003744, i32* %v3_1000374c, align 4
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_10003754 = call i32 @__asm_rlwimi(i32 8, i32 28, i32 0, i32 3)
  store i32 %v1_10003754, i32* %r11.global-to-local, align 4
  %v0_10003758 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003758 = add i32 %v0_10003758, 14
  %v2_10003758 = inttoptr i32 %v1_10003758 to i16*
  %v3_10003758 = load i16, i16* %v2_10003758, align 2
  %v4_10003758 = zext i16 %v3_10003758 to i32
  store i32 %v4_10003758, i32* %r0.global-to-local, align 4
  %v1_1000375c = add i32 %v0_10003758, 4
  %v2_1000375c = inttoptr i32 %v1_1000375c to i32*
  %v3_1000375c = load i32, i32* %v2_1000375c, align 4
  store i32 %v3_1000375c, i32* %r10.global-to-local, align 4
  %v1_10003760 = or i32 %v1_10003754, 1114112
  store i32 %v1_10003760, i32* %r11.global-to-local, align 4
  %v2_10003764 = load i32, i32* @r30, align 4
  %v3_10003764 = add i32 %v2_10003764, 2
  %v4_10003764 = inttoptr i32 %v3_10003764 to i16*
  store i16 %v3_10003758, i16* %v4_10003764, align 2
  %v0_10003768 = load i32, i32* %r10.global-to-local, align 4
  %v1_10003768 = load i32, i32* @r30, align 4
  %v2_10003768 = add i32 %v1_10003768, 8
  %v3_10003768 = inttoptr i32 %v2_10003768 to i32*
  store i32 %v0_10003768, i32* %v3_10003768, align 4
  %v0_1000376c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000376c = load i32, i32* @r30, align 4
  %v2_1000376c = add i32 %v1_1000376c, 12
  %v3_1000376c = inttoptr i32 %v2_1000376c to i32*
  store i32 %v0_1000376c, i32* %v3_1000376c, align 4
  %v0_10003770 = call i32 @function_1000723c()
  %v1_10003770 = trunc i32 %v0_10003770 to i16
  store i32 %v1_100033a8, i32* %r9.global-to-local, align 4
  %v3_10003778 = load i32, i32* @r30, align 4
  %v4_10003778 = add i32 %v3_10003778, 14
  %v5_10003778 = inttoptr i32 %v4_10003778 to i16*
  store i16 %v1_10003770, i16* %v5_10003778, align 2
  %v0_1000377c = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_1000377c, i32* @r4, align 4
  %v0_10003780 = load i32, i32* @r31, align 4
  %v1_10003780 = add i32 %v0_10003780, 40
  store i32 %v1_10003780, i32* @r3, align 4
  %v0_10003784 = load i32, i32* @r30, align 4
  %v1_10003784 = add i32 %v0_10003784, 12
  %v2_10003784 = inttoptr i32 %v1_10003784 to i32*
  %v3_10003784 = load i32, i32* %v2_10003784, align 4
  store i32 %v3_10003784, i32* %r0.global-to-local, align 4
  %v1_10003788 = call i32 @__asm_rlwimi(i32 %v1_100033a8, i32 21, i32 10, i32 10)
  store i32 %v1_10003788, i32* %r0.global-to-local, align 4
  %v1_1000378c = call i32 @__asm_rlwimi(i32 %v1_100033cc, i32 20, i32 11, i32 11)
  store i32 %v1_1000378c, i32* %r0.global-to-local, align 4
  %v1_10003790 = call i32 @__asm_rlwimi(i32 %v1_100033e4, i32 19, i32 12, i32 12)
  store i32 %v1_10003790, i32* %r0.global-to-local, align 4
  %v1_10003794 = call i32 @__asm_rlwimi(i32 %v1_100033fc, i32 18, i32 13, i32 13)
  store i32 %v1_10003794, i32* %r0.global-to-local, align 4
  %v1_10003798 = call i32 @__asm_rlwimi(i32 %v1_10003414, i32 17, i32 14, i32 14)
  store i32 %v1_10003798, i32* %r0.global-to-local, align 4
  %v1_1000379c = call i32 @__asm_rlwimi(i32 %v1_1000342c, i32 16, i32 15, i32 15)
  store i32 %v1_1000379c, i32* %r0.global-to-local, align 4
  %v1_100037a0 = load i32, i32* @r30, align 4
  %v2_100037a0 = add i32 %v1_100037a0, 12
  %v3_100037a0 = inttoptr i32 %v2_100037a0 to i32*
  store i32 %v1_1000379c, i32* %v3_100037a0, align 4
  %v0_100037a4 = call i32 @function_10007468()
  store i32 %v0_100037a4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100037a8

dec_label_pc_100037a8:                            ; preds = %dec_label_pc_100034b8, %dec_label_pc_10003714
  %v3_100037a8 = load i32, i32* %stack_var_-408, align 4
  %v1_100037ac = add i32 %v3_100037a8, 1
  store i32 %v1_100037ac, i32* %r9.global-to-local, align 4
  %v1_100037b0 = load i32, i32* %r21.global-to-local, align 4
  %v2_100037b0 = icmp slt i32 %v1_100037ac, %v1_100037b0
  %v4_100037b0 = icmp eq i32 %v1_100037ac, %v1_100037b0
  store i1 %v4_100037b0, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_100037ac, i32* %stack_var_-408, align 4
  br i1 %v2_100037b0, label %dec_label_pc_100034b4, label %dec_label_pc_100037bc.loopexit

dec_label_pc_100037bc.loopexit:                   ; preds = %dec_label_pc_100037a8
  %v0_100037c8.pre.pre = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_100037c8.pre.pre = load i1, i1* %cr3_lt.global-to-local, align 1
  br label %dec_label_pc_100037bc

dec_label_pc_100037bc:                            ; preds = %dec_label_pc_100037bc.loopexit, %dec_label_pc_10003494
  %v1_100037c8.pre = phi i1 [ %v1_100037c8.pre.pre, %dec_label_pc_100037bc.loopexit ], [ %v1_10003494, %dec_label_pc_10003494 ]
  %v0_100037c8.pre = phi i1 [ %v0_100037c8.pre.pre, %dec_label_pc_100037bc.loopexit ], [ %v3_10003494, %dec_label_pc_10003494 ]
  %v0_100037bc = load i32, i32* %r27.global-to-local, align 4
  %v3_100037bc = icmp eq i32 %v0_100037bc, 0
  store i1 %v3_100037bc, i1* %cr2_eq.global-to-local, align 1
  %v0_100037c0 = load i32, i32* %r25.global-to-local, align 4
  %v1_100037c0 = add i32 %v0_100037c0, 40
  store i32 %v1_100037c0, i32* %r26.global-to-local, align 4
  %v1_100037c4 = add i32 %v0_100037c0, 20
  store i32 %v1_100037c4, i32* @r31, align 4
  br label %dec_label_pc_100037c8.outer

dec_label_pc_100037c8.outer:                      ; preds = %dec_label_pc_1000389c, %dec_label_pc_100037bc
  %v1_100037c8.ph = phi i1 [ %v1_100037c8.pre, %dec_label_pc_100037bc ], [ %v1_1000389c, %dec_label_pc_1000389c ]
  %v0_100037c8.ph = phi i1 [ %v0_100037c8.pre, %dec_label_pc_100037bc ], [ %v0_1000389c, %dec_label_pc_1000389c ]
  %v2_100037c8 = or i1 %v1_100037c8.ph, %v0_100037c8.ph
  br label %dec_label_pc_100037c8

dec_label_pc_100037c8:                            ; preds = %dec_label_pc_100037c8.outer, %dec_label_pc_100037c8
  br i1 %v2_100037c8, label %dec_label_pc_100037c8, label %dec_label_pc_100037cc

dec_label_pc_100037cc:                            ; preds = %dec_label_pc_100037c8, %dec_label_pc_1000389c
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-408, align 4
  %v0_100037dc = load i32, i32* %r19.global-to-local, align 4
  %v4_100037dc = icmp eq i32 %v0_100037dc, 65535
  store i1 %v4_100037dc, i1* %cr4_eq.global-to-local, align 1
  %v0_100037e0 = load i32, i32* @r31, align 4
  %v1_100037e0 = urem i32 %v0_100037e0, 65536
  store i32 %v1_100037e0, i32* @r30, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_100037ec

dec_label_pc_100037ec:                            ; preds = %dec_label_pc_10003808.dec_label_pc_100037ec_crit_edge, %dec_label_pc_100037cc
  %v0_100037f8 = phi i1 [ %v0_100037f8.pre, %dec_label_pc_10003808.dec_label_pc_100037ec_crit_edge ], [ %v4_100037dc, %dec_label_pc_100037cc ]
  %v0_100037ec = phi i32 [ %v1_1000388c, %dec_label_pc_10003808.dec_label_pc_100037ec_crit_edge ], [ 0, %dec_label_pc_100037cc ]
  %v1_100037ec = mul i32 %v0_100037ec, 4
  store i32 %v1_100037ec, i32* %r0.global-to-local, align 4
  %v0_100037f0 = load i32, i32* %r23.global-to-local, align 4
  %v2_100037f0 = add i32 %v0_100037f0, %v1_100037ec
  %v3_100037f0 = inttoptr i32 %v2_100037f0 to i32*
  %v4_100037f0 = load i32, i32* %v3_100037f0, align 4
  store i32 %v4_100037f0, i32* @r29, align 4
  %v1_100037f4 = add i32 %v4_100037f0, 20
  store i32 %v1_100037f4, i32* %r28.global-to-local, align 4
  br i1 %v0_100037f8, label %dec_label_pc_100038a4, label %dec_label_pc_100037fc

dec_label_pc_100037fc:                            ; preds = %dec_label_pc_100037ec
  %v1_100037fc = add i32 %v4_100037f0, 40
  store i32 %v1_100037fc, i32* @r3, align 4
  %v0_10003800 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10003800, i32* @r4, align 4
  %v0_10003804 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10003804, label %dec_label_pc_10003808, label %dec_label_pc_100038b8

dec_label_pc_10003808:                            ; preds = %dec_label_pc_100037fc, %dec_label_pc_100038a4, %dec_label_pc_100038b8
  %v2_10003808 = phi i32 [ %v4_100037f0, %dec_label_pc_100037fc ], [ %v0_100038b0, %dec_label_pc_100038a4 ], [ %v2_10003808.pre, %dec_label_pc_100038b8 ]
  %v0_10003808 = load i32, i32* %r27.global-to-local, align 4
  %v1_10003808 = trunc i32 %v0_10003808 to i16
  %v3_10003808 = add i32 %v2_10003808, 10
  %v4_10003808 = inttoptr i32 %v3_10003808 to i16*
  store i16 %v1_10003808, i16* %v4_10003808, align 2
  %v0_10003810 = load i32, i32* @r29, align 4
  store i32 %v0_10003810, i32* @r3, align 4
  %v2_10003814 = call i32 @function_100056ac(i32 %v0_10003810, i32 20)
  %v3_10003814 = trunc i32 %v2_10003814 to i16
  store i32 %v2_10003814, i32* %r3.global-to-local, align 4
  %v3_10003818 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10003818, i32* %r9.global-to-local, align 4
  %v3_1000381c = load i32, i32* @r29, align 4
  %v4_1000381c = add i32 %v3_1000381c, 10
  %v5_1000381c = inttoptr i32 %v4_1000381c to i16*
  store i16 %v3_10003814, i16* %v5_1000381c, align 2
  %v0_10003820 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003820, i32* @r4, align 4
  %v0_10003824 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003824 = mul i32 %v0_10003824, 16
  store i32 %v1_10003824, i32* %r9.global-to-local, align 4
  %v0_10003828 = load i32, i32* %r27.global-to-local, align 4
  %v1_10003828 = trunc i32 %v0_10003828 to i16
  %v3_10003828 = add i32 %v0_10003820, 16
  %v4_10003828 = inttoptr i32 %v3_10003828 to i16*
  store i16 %v1_10003828, i16* %v4_10003828, align 2
  %v0_1000382c = load i32, i32* %r22.global-to-local, align 4
  %v1_1000382c = load i32, i32* %r9.global-to-local, align 4
  %v2_1000382c = add i32 %v1_1000382c, %v0_1000382c
  store i32 %v2_1000382c, i32* %r9.global-to-local, align 4
  %v0_10003830 = load i32, i32* @r30, align 4
  %v1_10003834 = add i32 %v2_1000382c, 4
  %v2_10003834 = inttoptr i32 %v1_10003834 to i32*
  %v3_10003834 = load i32, i32* %v2_10003834, align 4
  store i32 %v3_10003834, i32* %r11.global-to-local, align 4
  %v0_10003838 = load i32, i32* @r31, align 4
  %v0_1000383c = load i32, i32* @r29, align 4
  store i32 %v0_1000383c, i32* %r3.global-to-local, align 4
  %v1_10003840 = load i32, i32* %r28.global-to-local, align 4
  %v2_10003840 = add i32 %v1_10003840, 4
  %v3_10003840 = inttoptr i32 %v2_10003840 to i32*
  store i32 %v3_10003834, i32* %v3_10003840, align 4
  %v0_10003844 = load i32, i32* %r11.global-to-local, align 4
  %v1_10003844 = add i32 %v0_10003844, 1
  store i32 %v1_10003844, i32* %r11.global-to-local, align 4
  %v1_10003848 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003848 = add i32 %v1_10003848, 4
  %v3_10003848 = inttoptr i32 %v2_10003848 to i32*
  store i32 %v1_10003844, i32* %v3_10003848, align 4
  %v0_1000384c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000384c = add i32 %v0_1000384c, 8
  %v2_1000384c = inttoptr i32 %v1_1000384c to i32*
  %v3_1000384c = load i32, i32* %v2_1000384c, align 4
  store i32 %v3_1000384c, i32* %r0.global-to-local, align 4
  %v1_10003850 = load i32, i32* %r28.global-to-local, align 4
  %v2_10003850 = add i32 %v1_10003850, 8
  %v3_10003850 = inttoptr i32 %v2_10003850 to i32*
  store i32 %v3_1000384c, i32* %v3_10003850, align 4
  %v4_10003854 = call i32 @function_10005710(i32 %v0_1000383c, i32 %v0_10003820, i32 %v0_10003830, i32 %v0_10003838)
  %v5_10003854 = trunc i32 %v4_10003854 to i16
  store i32 %v4_10003854, i32* %r3.global-to-local, align 4
  %v3_10003858 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10003858, i32* %r7.global-to-local, align 4
  %v0_1000385c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000385c = add i32 %v0_1000385c, 2
  %v2_1000385c = inttoptr i32 %v1_1000385c to i16*
  %v3_1000385c = load i16, i16* %v2_1000385c, align 2
  %v4_1000385c = zext i16 %v3_1000385c to i32
  store i32 %v4_1000385c, i32* %r0.global-to-local, align 4
  %v0_10003860 = load i32, i32* @r29, align 4
  %v1_10003864 = mul i32 %v3_10003858, 24
  store i32 %v1_10003864, i32* %r7.global-to-local, align 4
  %v4_10003868 = add i32 %v0_1000385c, 16
  %v5_10003868 = inttoptr i32 %v4_10003868 to i16*
  store i16 %v5_10003854, i16* %v5_10003868, align 2
  %v0_1000386c = load i32, i32* %r26.global-to-local, align 4
  %v0_10003870 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10003870, i32* %r3.global-to-local, align 4
  %v0_10003874 = load i32, i32* %r7.global-to-local, align 4
  %v1_10003874 = load i32, i32* %r20.global-to-local, align 4
  %v2_10003874 = add i32 %v1_10003874, %v0_10003874
  store i32 %v2_10003874, i32* %r7.global-to-local, align 4
  %v0_1000387c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000387c = trunc i32 %v0_1000387c to i16
  %v3_1000387c = add i32 %v2_10003874, 2
  %v4_1000387c = inttoptr i32 %v3_1000387c to i16*
  store i16 %v1_1000387c, i16* %v4_1000387c, align 2
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 268449928, i32* @lr, align 4
  %v6_10003884 = call i32 @function_1000b6dc(i32 %v0_10003870, i32 %v0_10003860, i32 %v0_1000386c, i32 16384, i32 %v2_10003874, i32 16)
  store i32 %v6_10003884, i32* %r3.global-to-local, align 4
  %v3_10003888 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10003888, i32* %r9.global-to-local, align 4
  %v1_1000388c = add i32 %v3_10003888, 1
  store i32 %v1_1000388c, i32* %r0.global-to-local, align 4
  %v1_10003890 = load i32, i32* %r21.global-to-local, align 4
  %v2_10003890 = icmp slt i32 %v1_1000388c, %v1_10003890
  %v4_10003890 = icmp eq i32 %v1_1000388c, %v1_10003890
  store i1 %v4_10003890, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_1000388c, i32* %stack_var_-408, align 4
  br i1 %v2_10003890, label %dec_label_pc_10003808.dec_label_pc_100037ec_crit_edge, label %dec_label_pc_1000389c

dec_label_pc_10003808.dec_label_pc_100037ec_crit_edge: ; preds = %dec_label_pc_10003808
  %v0_100037f8.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  br label %dec_label_pc_100037ec

dec_label_pc_1000389c:                            ; preds = %dec_label_pc_10003808
  %v0_1000389c = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_1000389c = load i1, i1* %cr3_lt.global-to-local, align 1
  %v2_1000389c = or i1 %v0_1000389c, %v1_1000389c
  br i1 %v2_1000389c, label %dec_label_pc_100037c8.outer, label %dec_label_pc_100037cc

dec_label_pc_100038a4:                            ; preds = %dec_label_pc_100037ec
  %v0_100038a4 = call i32 @function_1000723c()
  %v1_100038a4 = trunc i32 %v0_100038a4 to i16
  %v0_100038a8 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_100038a8, i32* @r4, align 4
  %v3_100038ac = load i32, i32* @r29, align 4
  %v4_100038ac = add i32 %v3_100038ac, 4
  %v5_100038ac = inttoptr i32 %v4_100038ac to i16*
  store i16 %v1_100038a4, i16* %v5_100038ac, align 2
  %v0_100038b0 = load i32, i32* @r29, align 4
  %v1_100038b0 = add i32 %v0_100038b0, 40
  store i32 %v1_100038b0, i32* @r3, align 4
  %v0_100038b4 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_100038b4, label %dec_label_pc_10003808, label %dec_label_pc_100038b8

dec_label_pc_100038b8:                            ; preds = %dec_label_pc_100037fc, %dec_label_pc_100038a4
  %v0_100038b8 = call i32 @function_10007468()
  store i32 %v0_100038b8, i32* %r3.global-to-local, align 4
  %v2_10003808.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10003808

; uselistorder directives
  uselistorder i32 %v0_100038b0, { 1, 0 }
  uselistorder i1 %v1_1000389c, { 1, 0 }
  uselistorder i1 %v0_1000389c, { 1, 0 }
  uselistorder i32 %v1_1000388c, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v4_10003854, { 1, 0 }
  uselistorder i32 %v0_10003820, { 1, 0, 2 }
  uselistorder i32 %v2_10003814, { 1, 0 }
  uselistorder i32 %v1_100037ec, { 1, 0 }
  uselistorder i32 %v1_100037ac, { 0, 2, 1, 3 }
  uselistorder i32 %v2_10003730, { 1, 0, 2 }
  uselistorder i32 %v1_1000372c, { 1, 0 }
  uselistorder i32 %v1_100036c4, { 1, 0 }
  uselistorder i32 %v1_10003690, { 1, 0 }
  uselistorder i32 %v0_10003610, { 1, 0 }
  uselistorder i32 %v2_10003604, { 1, 2, 0 }
  uselistorder i1 %v4_10003588, { 1, 0 }
  uselistorder i16 %storemerge, { 1, 0 }
  uselistorder i32 %v3_100035e8, { 1, 3, 0, 2 }
  uselistorder i32 %v1_100035c4, { 1, 0 }
  uselistorder i32 %v1_1000336c, { 1, 0 }
  uselistorder i8 %v5_10003358, { 1, 0 }
  uselistorder i8 %v5_10003320, { 1, 0 }
  uselistorder i16 %tmp13, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 29, 10, 11, 12, 13, 14, 15, 16, 17, 19, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 0, 1 }
  uselistorder i32* %r25.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r24.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 25, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 34, 36, 37, 38, 39, 40, 41, 42, 43 }
  uselistorder i1* %cr3_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr3_eq.global-to-local, { 1, 0, 2 }
  uselistorder i32 1179648, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100038b8, { 1, 0 }
  uselistorder label %dec_label_pc_10003808, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100037cc, { 1, 0 }
  uselistorder label %dec_label_pc_100037c8, { 1, 0 }
  uselistorder label %dec_label_pc_100037a8, { 1, 0 }
  uselistorder label %dec_label_pc_10003714, { 1, 0 }
  uselistorder label %dec_label_pc_10003624, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100035a4, { 1, 2, 0 }
}

define i32 @function_100038c0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_100038c0:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-136 = alloca i32, align 4
  %v0_100038c4 = load i32, i32* @lr, align 4
  store i32 %v0_100038c4, i32* %r0.global-to-local, align 4
  %v0_100038c8 = call i32 @__asm_mfcr()
  store i32 %v0_100038c8, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r25.global-to-local, align 4
  %v0_100038d8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_100038c8, i32* %r21.global-to-local, align 4
  %v0_10003918 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10003920 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_10003928 = load i32, i32* @r30, align 4
  store i32 268450100, i32* @lr, align 4
  %v2_10003930 = call i32 @function_1000bae4(i32 4, i32 4)
  store i32 %v2_10003930, i32* %r22.global-to-local, align 4
  %v0_10003938 = load i32, i32* @r28, align 4
  %v0_10003944 = load i32, i32* @r29, align 4
  store i32 %v0_10003944, i32* %r3.global-to-local, align 4
  store i32 268450124, i32* @lr, align 4
  %v4_10003948 = inttoptr i32 %v0_10003938 to i32*
  %v5_10003948 = call i32 @function_1000235c(i32 %v0_10003944, i32* %v4_10003948, i32 2, i32 0)
  %v5_10003958 = trunc i32 %v5_10003948 to i8
  %v0_10003960 = load i32, i32* @r28, align 4
  %v0_10003964 = load i32, i32* @r29, align 4
  store i32 %v0_10003964, i32* %r3.global-to-local, align 4
  store i32 268450156, i32* @lr, align 4
  %v4_10003968 = inttoptr i32 %v0_10003960 to i32*
  %v5_10003968 = call i32 @function_1000235c(i32 %v0_10003964, i32* %v4_10003968, i32 3, i32 65535)
  %v0_1000396c = load i32, i32* @r28, align 4
  store i32 %v5_10003968, i32* %r18.global-to-local, align 4
  %v0_1000397c = load i32, i32* @r29, align 4
  store i32 %v0_1000397c, i32* %r3.global-to-local, align 4
  store i32 268450180, i32* @lr, align 4
  %v4_10003980 = inttoptr i32 %v0_1000396c to i32*
  %v5_10003980 = call i32 @function_1000235c(i32 %v0_1000397c, i32* %v4_10003980, i32 4, i32 64)
  %v0_10003984 = load i32, i32* @r28, align 4
  %v5_10003990 = trunc i32 %v5_10003980 to i8
  %v0_10003998 = load i32, i32* @r29, align 4
  store i32 %v0_10003998, i32* %r3.global-to-local, align 4
  store i32 268450208, i32* @lr, align 4
  %v4_1000399c = inttoptr i32 %v0_10003984 to i32*
  %v5_1000399c = call i32 @function_1000235c(i32 %v0_10003998, i32* %v4_1000399c, i32 5, i32 0)
  %v0_100039ac = load i32, i32* @r28, align 4
  %v1_100039b0 = urem i32 %v5_1000399c, 256
  store i32 %v1_100039b0, i32* @r31, align 4
  %v0_100039b4 = load i32, i32* @r29, align 4
  store i32 %v0_100039b4, i32* %r3.global-to-local, align 4
  store i32 268450236, i32* @lr, align 4
  %v4_100039b8 = inttoptr i32 %v0_100039ac to i32*
  %v5_100039b8 = call i32 @function_1000235c(i32 %v0_100039b4, i32* %v4_100039b8, i32 6, i32 65535)
  %v0_100039c0 = load i32, i32* @r28, align 4
  store i32 %v5_100039b8, i32* %r19.global-to-local, align 4
  %v0_100039d0 = load i32, i32* @r29, align 4
  store i32 %v0_100039d0, i32* %r3.global-to-local, align 4
  store i32 268450264, i32* @lr, align 4
  %v4_100039d4 = inttoptr i32 %v0_100039c0 to i32*
  %v5_100039d4 = call i32 @function_1000235c(i32 %v0_100039d0, i32* %v4_100039d4, i32 7, i32 65535)
  %v0_100039dc = load i32, i32* @r28, align 4
  store i32 %v5_100039d4, i32* %r20.global-to-local, align 4
  %v0_100039ec = load i32, i32* @r29, align 4
  store i32 %v0_100039ec, i32* %r3.global-to-local, align 4
  store i32 268450292, i32* @lr, align 4
  %v4_100039f0 = inttoptr i32 %v0_100039dc to i32*
  %v5_100039f0 = call i32 @function_1000235c(i32 %v0_100039ec, i32* %v4_100039f0, i32 17, i32 65535)
  %v0_100039f8 = load i32, i32* @r28, align 4
  store i32 %v5_100039f0, i32* %r15.global-to-local, align 4
  %v0_10003a08 = load i32, i32* @r29, align 4
  store i32 %v0_10003a08, i32* %r3.global-to-local, align 4
  store i32 268450320, i32* @lr, align 4
  %v4_10003a0c = inttoptr i32 %v0_100039f8 to i32*
  %v5_10003a0c = call i32 @function_1000235c(i32 %v0_10003a08, i32* %v4_10003a0c, i32 18, i32 65535)
  %v0_10003a10 = load i32, i32* @r28, align 4
  store i32 %v5_10003a0c, i32* %r17.global-to-local, align 4
  %v0_10003a20 = load i32, i32* @r29, align 4
  store i32 %v0_10003a20, i32* %r3.global-to-local, align 4
  store i32 268450344, i32* @lr, align 4
  %v4_10003a24 = inttoptr i32 %v0_10003a10 to i32*
  %v5_10003a24 = call i32 @function_1000235c(i32 %v0_10003a20, i32* %v4_10003a24, i32 11, i32 0)
  %v0_10003a28 = load i32, i32* @r28, align 4
  %v0_10003a38 = load i32, i32* @r29, align 4
  store i32 %v0_10003a38, i32* %r3.global-to-local, align 4
  store i32 268450368, i32* @lr, align 4
  %v4_10003a3c = inttoptr i32 %v0_10003a28 to i32*
  %v5_10003a3c = call i32 @function_1000235c(i32 %v0_10003a38, i32* %v4_10003a3c, i32 12, i32 1)
  %v0_10003a40 = load i32, i32* @r28, align 4
  store i32 %v5_10003a3c, i32* %r14.global-to-local, align 4
  %v0_10003a50 = load i32, i32* @r29, align 4
  store i32 %v0_10003a50, i32* %r3.global-to-local, align 4
  store i32 268450392, i32* @lr, align 4
  %v4_10003a54 = inttoptr i32 %v0_10003a40 to i32*
  %v5_10003a54 = call i32 @function_1000235c(i32 %v0_10003a50, i32* %v4_10003a54, i32 13, i32 0)
  %v0_10003a58 = load i32, i32* @r28, align 4
  store i32 %v5_10003a54, i32* %r24.global-to-local, align 4
  %v0_10003a68 = load i32, i32* @r29, align 4
  store i32 %v0_10003a68, i32* %r3.global-to-local, align 4
  store i32 268450416, i32* @lr, align 4
  %v4_10003a6c = inttoptr i32 %v0_10003a58 to i32*
  %v5_10003a6c = call i32 @function_1000235c(i32 %v0_10003a68, i32* %v4_10003a6c, i32 14, i32 0)
  %v0_10003a70 = load i32, i32* @r28, align 4
  store i32 %v5_10003a6c, i32* %r27.global-to-local, align 4
  %v0_10003a80 = load i32, i32* @r29, align 4
  store i32 %v0_10003a80, i32* %r3.global-to-local, align 4
  store i32 268450440, i32* @lr, align 4
  %v4_10003a84 = inttoptr i32 %v0_10003a70 to i32*
  %v5_10003a84 = call i32 @function_1000235c(i32 %v0_10003a80, i32* %v4_10003a84, i32 15, i32 0)
  %v0_10003a88 = load i32, i32* @r28, align 4
  store i32 %v5_10003a84, i32* %r26.global-to-local, align 4
  %v0_10003a98 = load i32, i32* @r29, align 4
  store i32 %v0_10003a98, i32* %r3.global-to-local, align 4
  store i32 268450464, i32* @lr, align 4
  %v4_10003a9c = inttoptr i32 %v0_10003a88 to i32*
  %v5_10003a9c = call i32 @function_1000235c(i32 %v0_10003a98, i32* %v4_10003a9c, i32 16, i32 0)
  %v0_10003aa0 = load i32, i32* @r28, align 4
  store i32 %v5_10003a9c, i32* %r30.global-to-local, align 4
  %v0_10003ab0 = load i32, i32* @r29, align 4
  store i32 %v0_10003ab0, i32* %r3.global-to-local, align 4
  store i32 268450488, i32* @lr, align 4
  %v4_10003ab4 = inttoptr i32 %v0_10003aa0 to i32*
  %v5_10003ab4 = call i32 @function_1000235c(i32 %v0_10003ab0, i32* %v4_10003ab4, i32 0, i32 512)
  %v0_10003ab8 = load i32, i32* @r28, align 4
  store i32 %v5_10003ab4, i32* %r16.global-to-local, align 4
  %v0_10003ac8 = load i32, i32* @r29, align 4
  store i32 %v0_10003ac8, i32* %r3.global-to-local, align 4
  store i32 268450512, i32* @lr, align 4
  %v4_10003acc = inttoptr i32 %v0_10003ab8 to i32*
  %v5_10003acc = call i32 @function_1000235c(i32 %v0_10003ac8, i32* %v4_10003acc, i32 1, i32 1)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10003ad4 = load i32, i32* @global_var_1001e180.71, align 4
  %v1_10003ad8 = urem i32 %v5_10003acc, 256
  %v0_10003adc = load i32, i32* @r28, align 4
  %v0_10003ae8 = load i32, i32* @r29, align 4
  store i32 %v0_10003ae8, i32* %r3.global-to-local, align 4
  store i32 268450544, i32* @lr, align 4
  %v5_10003aec = inttoptr i32 %v0_10003adc to i32*
  %v6_10003aec = call i32 @function_100022dc(i32 %v0_10003ae8, i32* %v5_10003aec, i32 25, i32 %v3_10003ad4, i32 268566528)
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268450564, i32* @lr, align 4
  %v3_10003b00 = call i32 @function_1000b758(i32 2, i32 3, i32 6)
  store i32 %v3_10003b00, i32* %r3.global-to-local, align 4
  %v3_10003b04 = icmp eq i32 %v3_10003b00, -1
  store i32 %v3_10003b00, i32* %r23.global-to-local, align 4
  br i1 %v3_10003b04, label %dec_label_pc_10003e44, label %dec_label_pc_10003b10

dec_label_pc_10003b10:                            ; preds = %dec_label_pc_100038c0
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10003b1c = ptrtoint i32* %stack_var_-136 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-136, align 4
  store i32 268450604, i32* @lr, align 4
  %v5_10003b28 = call i32 @function_1000b71c(i32 0, i32 3, i32 %v2_10003b1c, i32 4, i32 4)
  store i32 %v5_10003b28, i32* %r3.global-to-local, align 4
  %v3_10003b2c = icmp eq i32 %v5_10003b28, -1
  br i1 %v3_10003b2c, label %dec_label_pc_10003e3c, label %dec_label_pc_10003b34

dec_label_pc_10003b34:                            ; preds = %dec_label_pc_10003b10
  %v0_10003b34 = load i32, i32* %r21.global-to-local, align 4
  %v1_10003b34 = icmp slt i32 %v0_10003b34, 0
  %v3_10003b34 = icmp eq i32 %v0_10003b34, 0
  store i1 %v1_10003b34, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10003b34, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-136, align 4
  %v0_10003b40 = load i32, i32* %r18.global-to-local, align 4
  %v1_10003b40 = urem i32 %v0_10003b40, 65536
  store i32 %v1_10003b40, i32* %r18.global-to-local, align 4
  %v0_10003b44 = load i32, i32* %r19.global-to-local, align 4
  %v1_10003b44 = urem i32 %v0_10003b44, 65536
  store i32 %v1_10003b44, i32* %r19.global-to-local, align 4
  %v0_10003b48 = load i32, i32* %r20.global-to-local, align 4
  %v1_10003b48 = urem i32 %v0_10003b48, 65536
  store i32 %v1_10003b48, i32* %r20.global-to-local, align 4
  %tmp40 = icmp slt i32 %v0_10003b34, 1
  br i1 %tmp40, label %dec_label_pc_10003e1c, label %dec_label_pc_10003b50

dec_label_pc_10003b50:                            ; preds = %dec_label_pc_10003b34
  %v0_10003b54 = load i32, i32* %r24.global-to-local, align 4
  %v1_10003b54 = urem i32 %v0_10003b54, 256
  %v0_10003b58 = load i32, i32* %r16.global-to-local, align 4
  %v1_10003b58 = add i32 %v0_10003b58, 40
  store i32 %v1_10003b58, i32* %r24.global-to-local, align 4
  %v3_10003b5c = icmp eq i32 %v1_10003b54, 0
  store i1 %v3_10003b5c, i1* %cr3_eq.global-to-local, align 1
  %v1_10003b60 = urem i32 %v5_10003a24, 2
  store i32 %v1_10003b60, i32* %r9.global-to-local, align 4
  %v0_10003b64 = load i32, i32* %r26.global-to-local, align 4
  %v1_10003b64 = urem i32 %v0_10003b64, 2
  store i32 %v1_10003b64, i32* %r28.global-to-local, align 4
  %v1_10003b68 = urem i32 %v0_10003b54, 2
  store i32 %v1_10003b68, i32* %r26.global-to-local, align 4
  %v1_10003b6c = urem i32 %v1_10003b58, 65536
  store i32 %v1_10003b6c, i32* %r0.global-to-local, align 4
  %v0_10003b74 = load i32, i32* @r31, align 4
  %v3_10003b74 = icmp eq i32 %v0_10003b74, 0
  store i1 %v3_10003b74, i1* %cr2_eq.global-to-local, align 1
  %v5_10003b78 = trunc i32 %v1_10003b58 to i16
  %v0_10003b7c = load i32, i32* %r14.global-to-local, align 4
  %v1_10003b7c = urem i32 %v0_10003b7c, 2
  store i32 %v1_10003b7c, i32* %r14.global-to-local, align 4
  %v0_10003b80 = load i32, i32* %r27.global-to-local, align 4
  %v1_10003b80 = urem i32 %v0_10003b80, 2
  store i32 %v1_10003b80, i32* %r27.global-to-local, align 4
  %v0_10003b84 = load i32, i32* %r30.global-to-local, align 4
  %v1_10003b84 = urem i32 %v0_10003b84, 2
  %v4_10003bd4 = sext i8 %v5_10003958 to i32
  br label %dec_label_pc_10003b8c

dec_label_pc_10003b8c:                            ; preds = %dec_label_pc_10003c6c, %dec_label_pc_10003b50
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268450712, i32* @lr, align 4
  %v2_10003b94 = call i32 @function_1000bae4(i32 1510, i32 1)
  store i32 %v2_10003b94, i32* %r3.global-to-local, align 4
  %v3_10003b98 = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_10003b98, i32* %r9.global-to-local, align 4
  %v0_10003b9c = load i32, i32* @r31, align 4
  %v1_10003b9c = mul i32 %v0_10003b9c, 4
  store i32 %v1_10003b9c, i32* %r0.global-to-local, align 4
  %v1_10003ba0 = load i32, i32* %r22.global-to-local, align 4
  %v3_10003ba0 = add i32 %v1_10003ba0, %v1_10003b9c
  %v4_10003ba0 = inttoptr i32 %v3_10003ba0 to i32*
  store i32 %v2_10003b94, i32* %v4_10003ba0, align 4
  %v0_10003ba4 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003ba4 = mul i32 %v0_10003ba4, 4
  store i32 %v1_10003ba4, i32* %r9.global-to-local, align 4
  %v1_10003ba8 = load i32, i32* %r22.global-to-local, align 4
  %v2_10003ba8 = add i32 %v1_10003ba8, %v1_10003ba4
  %v3_10003ba8 = inttoptr i32 %v2_10003ba8 to i32*
  %v4_10003ba8 = load i32, i32* %v3_10003ba8, align 4
  store i32 %v4_10003ba8, i32* @r31, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_10003bb0 = inttoptr i32 %v4_10003ba8 to i32*
  %v2_10003bb0 = load i32, i32* %v1_10003bb0, align 4
  store i32 %v2_10003bb0, i32* %r0.global-to-local, align 4
  %v1_10003bb4 = add i32 %v4_10003ba8, 20
  store i32 %v1_10003bb4, i32* @r30, align 4
  %v0_10003bb8 = load i32, i32* %r18.global-to-local, align 4
  %v1_10003bb8 = trunc i32 %v0_10003bb8 to i16
  %v3_10003bb8 = add i32 %v4_10003ba8, 4
  %v4_10003bb8 = inttoptr i32 %v3_10003bb8 to i16*
  store i16 %v1_10003bb8, i16* %v4_10003bb8, align 2
  %v1_10003bbc = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10003bbc, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10003bc4 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v1_10003bc8 = load i32, i32* @r31, align 4
  %v2_10003bc8 = inttoptr i32 %v1_10003bc8 to i32*
  store i32 %v1_10003bc4, i32* %v2_10003bc8, align 4
  %v2_10003bd0 = load i32, i32* @r31, align 4
  %v3_10003bd0 = add i32 %v2_10003bd0, 8
  %v4_10003bd0 = inttoptr i32 %v3_10003bd0 to i8*
  store i8 %v5_10003990, i8* %v4_10003bd0, align 1
  store i32 %v4_10003bd4, i32* %r9.global-to-local, align 4
  %v2_10003bd8 = load i32, i32* @r31, align 4
  %v3_10003bd8 = add i32 %v2_10003bd8, 1
  %v4_10003bd8 = inttoptr i32 %v3_10003bd8 to i8*
  store i8 %v5_10003958, i8* %v4_10003bd8, align 1
  store i32 %v1_10003b58, i32* %r0.global-to-local, align 4
  %v2_10003be0 = load i32, i32* @r31, align 4
  %v3_10003be0 = add i32 %v2_10003be0, 2
  %v4_10003be0 = inttoptr i32 %v3_10003be0 to i16*
  store i16 %v5_10003b78, i16* %v4_10003be0, align 2
  %v0_10003be4 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10003be4, label %dec_label_pc_10003bf0, label %dec_label_pc_10003be8

dec_label_pc_10003be8:                            ; preds = %dec_label_pc_10003b8c
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10003bec = load i32, i32* @r31, align 4
  %v3_10003bec = add i32 %v2_10003bec, 6
  %v4_10003bec = inttoptr i32 %v3_10003bec to i16*
  store i16 16384, i16* %v4_10003bec, align 2
  br label %dec_label_pc_10003bf0

dec_label_pc_10003bf0:                            ; preds = %dec_label_pc_10003b8c, %dec_label_pc_10003be8
  store i32 6, i32* %r0.global-to-local, align 4
  %v0_10003bf4 = load i32, i32* %r19.global-to-local, align 4
  %v1_10003bf4 = trunc i32 %v0_10003bf4 to i16
  %v2_10003bf4 = load i32, i32* @r31, align 4
  %v3_10003bf4 = add i32 %v2_10003bf4, 20
  %v4_10003bf4 = inttoptr i32 %v3_10003bf4 to i16*
  store i16 %v1_10003bf4, i16* %v4_10003bf4, align 2
  %v0_10003bf8 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003bf8 = trunc i32 %v0_10003bf8 to i8
  %v2_10003bf8 = load i32, i32* @r31, align 4
  %v3_10003bf8 = add i32 %v2_10003bf8, 9
  %v4_10003bf8 = inttoptr i32 %v3_10003bf8 to i8*
  store i8 %v1_10003bf8, i8* %v4_10003bf8, align 1
  %v0_10003bfc = load i32, i32* %r20.global-to-local, align 4
  %v1_10003bfc = trunc i32 %v0_10003bfc to i16
  %v2_10003bfc = load i32, i32* @r30, align 4
  %v3_10003bfc = add i32 %v2_10003bfc, 2
  %v4_10003bfc = inttoptr i32 %v3_10003bfc to i16*
  store i16 %v1_10003bfc, i16* %v4_10003bfc, align 2
  %v1_10003c04 = load i32, i32* @r31, align 4
  %v2_10003c04 = add i32 %v1_10003c04, 12
  %v3_10003c04 = inttoptr i32 %v2_10003c04 to i32*
  store i32 %v6_10003aec, i32* %v3_10003c04, align 4
  %v3_10003c08 = load i32, i32* %stack_var_-136, align 4
  %v1_10003c0c = mul i32 %v3_10003c08, 24
  %v1_10003c10 = load i32, i32* %r25.global-to-local, align 4
  %v2_10003c10 = add i32 %v1_10003c10, %v1_10003c0c
  store i32 %v2_10003c10, i32* %r9.global-to-local, align 4
  %v1_10003c14 = add i32 %v2_10003c10, 16
  %v2_10003c14 = inttoptr i32 %v1_10003c14 to i32*
  %v3_10003c14 = load i32, i32* %v2_10003c14, align 4
  store i32 %v3_10003c14, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10003c1c = load i32, i32* @r31, align 4
  %v2_10003c1c = add i32 %v1_10003c1c, 16
  %v3_10003c1c = inttoptr i32 %v2_10003c1c to i32*
  store i32 %v3_10003c14, i32* %v3_10003c1c, align 4
  %v0_10003c20 = load i32, i32* %r15.global-to-local, align 4
  %v1_10003c20 = load i32, i32* @r30, align 4
  %v2_10003c20 = add i32 %v1_10003c20, 4
  %v3_10003c20 = inttoptr i32 %v2_10003c20 to i32*
  store i32 %v0_10003c20, i32* %v3_10003c20, align 4
  %v0_10003c24 = load i32, i32* @r30, align 4
  %v1_10003c24 = add i32 %v0_10003c24, 12
  %v2_10003c24 = inttoptr i32 %v1_10003c24 to i32*
  %v3_10003c24 = load i32, i32* %v2_10003c24, align 4
  store i32 %v3_10003c24, i32* %r0.global-to-local, align 4
  %v1_10003c28 = call i32 @__asm_rlwimi(i32 5, i32 28, i32 0, i32 3)
  store i32 %v1_10003c28, i32* %r0.global-to-local, align 4
  store i32 %v1_10003b60, i32* %r9.global-to-local, align 4
  %v1_10003c30 = call i32 @__asm_rlwimi(i32 %v1_10003b60, i32 21, i32 10, i32 10)
  store i32 %v1_10003c30, i32* %r0.global-to-local, align 4
  %v1_10003c34 = call i32 @__asm_rlwimi(i32 %v1_10003b7c, i32 20, i32 11, i32 11)
  store i32 %v1_10003c34, i32* %r0.global-to-local, align 4
  %v1_10003c38 = call i32 @__asm_rlwimi(i32 %v1_10003b68, i32 19, i32 12, i32 12)
  store i32 %v1_10003c38, i32* %r0.global-to-local, align 4
  %v1_10003c3c = call i32 @__asm_rlwimi(i32 %v1_10003b80, i32 18, i32 13, i32 13)
  store i32 %v1_10003c3c, i32* %r0.global-to-local, align 4
  %v1_10003c40 = call i32 @__asm_rlwimi(i32 %v1_10003b64, i32 17, i32 14, i32 14)
  store i32 %v1_10003c40, i32* %r0.global-to-local, align 4
  %v1_10003c44 = call i32 @__asm_rlwimi(i32 %v1_10003b84, i32 16, i32 15, i32 15)
  store i32 %v1_10003c44, i32* %r0.global-to-local, align 4
  %v1_10003c48 = load i32, i32* @r30, align 4
  %v2_10003c48 = add i32 %v1_10003c48, 12
  %v3_10003c48 = inttoptr i32 %v2_10003c48 to i32*
  store i32 %v1_10003c44, i32* %v3_10003c48, align 4
  %v0_10003c4c = call i32 @function_1000723c()
  %v1_10003c4c = trunc i32 %v0_10003c4c to i16
  %v0_10003c50 = load i32, i32* %r16.global-to-local, align 4
  store i32 %v0_10003c50, i32* @r4, align 4
  %v3_10003c54 = load i32, i32* @r30, align 4
  %v4_10003c54 = add i32 %v3_10003c54, 14
  %v5_10003c54 = inttoptr i32 %v4_10003c54 to i16*
  store i16 %v1_10003c4c, i16* %v5_10003c54, align 2
  %v0_10003c58 = load i32, i32* @r31, align 4
  %v1_10003c58 = add i32 %v0_10003c58, 40
  store i32 %v1_10003c58, i32* @r3, align 4
  %v0_10003c5c = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10003c5c, label %dec_label_pc_10003c6c, label %dec_label_pc_10003c60

dec_label_pc_10003c60:                            ; preds = %dec_label_pc_10003bf0
  %v0_10003c60 = load i32, i32* @r30, align 4
  %v1_10003c60 = add i32 %v0_10003c60, 12
  %v2_10003c60 = inttoptr i32 %v1_10003c60 to i32*
  %v3_10003c60 = load i32, i32* %v2_10003c60, align 4
  %v1_10003c64 = or i32 %v3_10003c60, 524288
  store i32 %v1_10003c64, i32* %r0.global-to-local, align 4
  store i32 %v1_10003c64, i32* %v2_10003c60, align 4
  br label %dec_label_pc_10003c6c

dec_label_pc_10003c6c:                            ; preds = %dec_label_pc_10003bf0, %dec_label_pc_10003c60
  %v0_10003c6c = call i32 @function_10007468()
  store i32 %v0_10003c6c, i32* %r3.global-to-local, align 4
  %v3_10003c70 = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_10003c70, i32* %r9.global-to-local, align 4
  %v1_10003c74 = add i32 %v3_10003c70, 1
  %v1_10003c78 = load i32, i32* %r21.global-to-local, align 4
  %v2_10003c78 = icmp slt i32 %v1_10003c74, %v1_10003c78
  store i32 %v1_10003c74, i32* %stack_var_-136, align 4
  br i1 %v2_10003c78, label %dec_label_pc_10003b8c, label %dec_label_pc_10003c84

dec_label_pc_10003c84:                            ; preds = %dec_label_pc_10003c6c
  store i32 %v6_10003aec, i32* %r0.global-to-local, align 4
  %v0_10003c88 = load i32, i32* %r16.global-to-local, align 4
  %v1_10003c88 = add i32 %v0_10003c88, 20
  store i32 %v1_10003c88, i32* @r30, align 4
  store i32 %v1_10003ad8, i32* %r9.global-to-local, align 4
  %v3_10003c90 = icmp eq i32 %v6_10003aec, -1
  store i1 %v3_10003c90, i1* %cr2_eq.global-to-local, align 1
  %v3_10003c94 = icmp eq i32 %v1_10003ad8, 0
  store i1 %v3_10003c94, i1* %cr3_eq.global-to-local, align 1
  %v0_10003c98.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10003c98.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10003c98.preheader

dec_label_pc_10003c98.preheader:                  ; preds = %dec_label_pc_10003d78, %dec_label_pc_10003e1c, %dec_label_pc_10003c84
  %v1_10003c98 = phi i1 [ %v1_10003b34, %dec_label_pc_10003e1c ], [ %v1_10003c98.pre, %dec_label_pc_10003c84 ], [ %v1_10003d78, %dec_label_pc_10003d78 ]
  %v0_10003c98 = phi i1 [ %v3_10003b34, %dec_label_pc_10003e1c ], [ %v0_10003c98.pre, %dec_label_pc_10003c84 ], [ %v0_10003d78, %dec_label_pc_10003d78 ]
  %v2_10003c98 = or i1 %v1_10003c98, %v0_10003c98
  br label %dec_label_pc_10003c98

dec_label_pc_10003c98:                            ; preds = %dec_label_pc_10003c98.preheader, %dec_label_pc_10003c98
  br i1 %v2_10003c98, label %dec_label_pc_10003c98, label %dec_label_pc_10003c9c

dec_label_pc_10003c9c:                            ; preds = %dec_label_pc_10003c98, %dec_label_pc_10003d78
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10003ca0 = load i32, i32* @r30, align 4
  %v1_10003ca0 = urem i32 %v0_10003ca0, 65536
  store i32 %v1_10003ca0, i32* %r27.global-to-local, align 4
  store i32 0, i32* %stack_var_-136, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10003cb0

dec_label_pc_10003cb0:                            ; preds = %dec_label_pc_10003d08, %dec_label_pc_10003c9c
  %v0_10003cb0 = phi i32 [ %v1_10003d68, %dec_label_pc_10003d08 ], [ 0, %dec_label_pc_10003c9c ]
  %v1_10003cb0 = mul i32 %v0_10003cb0, 24
  store i32 %v1_10003cb0, i32* %r0.global-to-local, align 4
  %v1_10003cb4 = mul i32 %v0_10003cb0, 4
  %v1_10003cb8 = load i32, i32* %r22.global-to-local, align 4
  %v2_10003cb8 = add i32 %v1_10003cb8, %v1_10003cb4
  %v3_10003cb8 = inttoptr i32 %v2_10003cb8 to i32*
  %v4_10003cb8 = load i32, i32* %v3_10003cb8, align 4
  store i32 %v4_10003cb8, i32* %r28.global-to-local, align 4
  %v1_10003cbc = load i32, i32* %r25.global-to-local, align 4
  %v2_10003cbc = add i32 %v1_10003cbc, %v1_10003cb0
  %v1_10003cc0 = add i32 %v2_10003cbc, 20
  %v2_10003cc0 = inttoptr i32 %v1_10003cc0 to i8*
  %v3_10003cc0 = load i8, i8* %v2_10003cc0, align 1
  %v4_10003cc0 = zext i8 %v3_10003cc0 to i32
  store i32 %v4_10003cc0, i32* %r9.global-to-local, align 4
  %v1_10003cc4 = add i32 %v4_10003cb8, 20
  store i32 %v1_10003cc4, i32* @r31, align 4
  %tmp41 = icmp ult i8 %v3_10003cc0, 32
  br i1 %tmp41, label %dec_label_pc_10003d80, label %dec_label_pc_10003cd0

dec_label_pc_10003cd0:                            ; preds = %dec_label_pc_10003cb0
  %v0_10003cd0 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10003cd0, label %dec_label_pc_10003da8, label %dec_label_pc_10003cd4

dec_label_pc_10003cd4:                            ; preds = %dec_label_pc_10003d80, %dec_label_pc_10003cd0
  store i32 65535, i32* @r29, align 4
  %v0_10003cdc = load i32, i32* %r18.global-to-local, align 4
  %v4_10003cdc = icmp eq i32 %v0_10003cdc, 65535
  br i1 %v4_10003cdc, label %dec_label_pc_10003dc0, label %dec_label_pc_10003ce4

dec_label_pc_10003ce4:                            ; preds = %dec_label_pc_10003da8, %dec_label_pc_10003cd4
  %v1_10003ce4 = phi i32 [ %v1_10003db8, %dec_label_pc_10003da8 ], [ 65535, %dec_label_pc_10003cd4 ]
  %v0_10003ce4 = load i32, i32* %r19.global-to-local, align 4
  %v4_10003ce4 = icmp eq i32 %v0_10003ce4, %v1_10003ce4
  br i1 %v4_10003ce4, label %dec_label_pc_10003dd0, label %dec_label_pc_10003cec

dec_label_pc_10003cec:                            ; preds = %dec_label_pc_10003dc0.dec_label_pc_10003cec_crit_edge, %dec_label_pc_10003ce4
  %v1_10003cec = phi i32 [ %v1_10003cec.pre, %dec_label_pc_10003dc0.dec_label_pc_10003cec_crit_edge ], [ %v1_10003ce4, %dec_label_pc_10003ce4 ]
  %v0_10003cec = load i32, i32* %r20.global-to-local, align 4
  %v4_10003cec = icmp eq i32 %v0_10003cec, %v1_10003cec
  br i1 %v4_10003cec, label %dec_label_pc_10003de0, label %dec_label_pc_10003cf4

dec_label_pc_10003cf4:                            ; preds = %dec_label_pc_10003dd0.dec_label_pc_10003cf4_crit_edge, %dec_label_pc_10003cec
  %v1_10003cf4 = phi i32 [ %v1_10003cf4.pre, %dec_label_pc_10003dd0.dec_label_pc_10003cf4_crit_edge ], [ %v1_10003cec, %dec_label_pc_10003cec ]
  %v0_10003cf4 = load i32, i32* %r15.global-to-local, align 4
  %v4_10003cf4 = icmp eq i32 %v0_10003cf4, %v1_10003cf4
  br i1 %v4_10003cf4, label %dec_label_pc_10003df0, label %dec_label_pc_10003cfc

dec_label_pc_10003cfc:                            ; preds = %dec_label_pc_10003de0.dec_label_pc_10003cfc_crit_edge, %dec_label_pc_10003cf4
  %v1_10003cfc = phi i32 [ %v1_10003cfc.pre, %dec_label_pc_10003de0.dec_label_pc_10003cfc_crit_edge ], [ %v1_10003cf4, %dec_label_pc_10003cf4 ]
  %v0_10003cfc = load i32, i32* %r17.global-to-local, align 4
  %v4_10003cfc = icmp eq i32 %v0_10003cfc, %v1_10003cfc
  br i1 %v4_10003cfc, label %dec_label_pc_10003e00, label %dec_label_pc_10003d04

dec_label_pc_10003d04:                            ; preds = %dec_label_pc_10003df0, %dec_label_pc_10003cfc
  %v0_10003d04 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10003d04, label %dec_label_pc_10003d08, label %dec_label_pc_10003e0c

dec_label_pc_10003d08:                            ; preds = %dec_label_pc_10003d04, %dec_label_pc_10003e00, %dec_label_pc_10003e0c
  %v0_10003d08 = load i32, i32* %r26.global-to-local, align 4
  %v1_10003d08 = trunc i32 %v0_10003d08 to i16
  %v2_10003d08 = load i32, i32* %r28.global-to-local, align 4
  %v3_10003d08 = add i32 %v2_10003d08, 10
  %v4_10003d08 = inttoptr i32 %v3_10003d08 to i16*
  store i16 %v1_10003d08, i16* %v4_10003d08, align 2
  %v0_10003d10 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003d10, i32* @r3, align 4
  %v2_10003d14 = call i32 @function_100056ac(i32 %v0_10003d10, i32 20)
  %v3_10003d14 = trunc i32 %v2_10003d14 to i16
  %v0_10003d18 = load i32, i32* @r31, align 4
  store i32 %v0_10003d18, i32* @r4, align 4
  %v4_10003d1c = add i32 %v0_10003d10, 10
  %v5_10003d1c = inttoptr i32 %v4_10003d1c to i16*
  store i16 %v3_10003d14, i16* %v5_10003d1c, align 2
  %v0_10003d20 = load i32, i32* %r27.global-to-local, align 4
  %v0_10003d24 = load i32, i32* %r26.global-to-local, align 4
  %v1_10003d24 = trunc i32 %v0_10003d24 to i16
  %v2_10003d24 = load i32, i32* @r31, align 4
  %v3_10003d24 = add i32 %v2_10003d24, 16
  %v4_10003d24 = inttoptr i32 %v3_10003d24 to i16*
  store i16 %v1_10003d24, i16* %v4_10003d24, align 2
  %v0_10003d28 = load i32, i32* @r30, align 4
  %v0_10003d2c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003d2c, i32* %r3.global-to-local, align 4
  %v4_10003d30 = call i32 @function_10005710(i32 %v0_10003d2c, i32 %v0_10003d18, i32 %v0_10003d20, i32 %v0_10003d28)
  %v5_10003d30 = trunc i32 %v4_10003d30 to i16
  store i32 %v4_10003d30, i32* %r3.global-to-local, align 4
  %v3_10003d34 = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_10003d34, i32* %r7.global-to-local, align 4
  %v0_10003d38 = load i32, i32* @r31, align 4
  %v1_10003d38 = add i32 %v0_10003d38, 2
  %v2_10003d38 = inttoptr i32 %v1_10003d38 to i16*
  %v3_10003d38 = load i16, i16* %v2_10003d38, align 2
  %v4_10003d38 = zext i16 %v3_10003d38 to i32
  store i32 %v4_10003d38, i32* %r0.global-to-local, align 4
  %v0_10003d3c = load i32, i32* %r28.global-to-local, align 4
  %v1_10003d40 = mul i32 %v3_10003d34, 24
  store i32 %v1_10003d40, i32* %r7.global-to-local, align 4
  %v4_10003d44 = add i32 %v0_10003d38, 16
  %v5_10003d44 = inttoptr i32 %v4_10003d44 to i16*
  store i16 %v5_10003d30, i16* %v5_10003d44, align 2
  %v0_10003d48 = load i32, i32* %r24.global-to-local, align 4
  %v0_10003d4c = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10003d4c, i32* %r3.global-to-local, align 4
  %v0_10003d50 = load i32, i32* %r7.global-to-local, align 4
  %v1_10003d50 = load i32, i32* %r25.global-to-local, align 4
  %v2_10003d50 = add i32 %v1_10003d50, %v0_10003d50
  store i32 %v2_10003d50, i32* %r7.global-to-local, align 4
  %v0_10003d58 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003d58 = trunc i32 %v0_10003d58 to i16
  %v3_10003d58 = add i32 %v2_10003d50, 2
  %v4_10003d58 = inttoptr i32 %v3_10003d58 to i16*
  store i16 %v1_10003d58, i16* %v4_10003d58, align 2
  store i32 268451172, i32* @lr, align 4
  %v6_10003d60 = call i32 @function_1000b6dc(i32 %v0_10003d4c, i32 %v0_10003d3c, i32 %v0_10003d48, i32 16384, i32 %v2_10003d50, i32 16)
  store i32 %v6_10003d60, i32* %r3.global-to-local, align 4
  %v3_10003d64 = load i32, i32* %stack_var_-136, align 4
  %v1_10003d68 = add i32 %v3_10003d64, 1
  store i32 %v1_10003d68, i32* %r9.global-to-local, align 4
  %v1_10003d6c = load i32, i32* %r21.global-to-local, align 4
  %v2_10003d6c = icmp slt i32 %v1_10003d68, %v1_10003d6c
  store i32 %v1_10003d68, i32* %stack_var_-136, align 4
  br i1 %v2_10003d6c, label %dec_label_pc_10003cb0, label %dec_label_pc_10003d78

dec_label_pc_10003d78:                            ; preds = %dec_label_pc_10003d08
  %v0_10003d78 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10003d78 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10003d78 = or i1 %v0_10003d78, %v1_10003d78
  br i1 %v2_10003d78, label %dec_label_pc_10003c98.preheader, label %dec_label_pc_10003c9c

dec_label_pc_10003d80:                            ; preds = %dec_label_pc_10003cb0
  %v1_10003d80 = add i32 %v2_10003cbc, 16
  %v2_10003d80 = inttoptr i32 %v1_10003d80 to i32*
  %v3_10003d80 = load i32, i32* %v2_10003d80, align 4
  store i32 %v3_10003d80, i32* %r29.global-to-local, align 4
  %v0_10003d84 = call i32 @function_1000723c()
  store i32 %v0_10003d84, i32* %r3.global-to-local, align 4
  %v3_10003d88 = load i32, i32* %stack_var_-136, align 4
  %v1_10003d8c = mul i32 %v3_10003d88, 24
  %v1_10003d90 = load i32, i32* %r25.global-to-local, align 4
  %v2_10003d90 = add i32 %v1_10003d90, %v1_10003d8c
  store i32 %v2_10003d90, i32* %r9.global-to-local, align 4
  %v1_10003d94 = add i32 %v2_10003d90, 20
  %v2_10003d94 = inttoptr i32 %v1_10003d94 to i8*
  %v3_10003d94 = load i8, i8* %v2_10003d94, align 1
  %v4_10003d94 = zext i8 %v3_10003d94 to i32
  store i32 %v4_10003d94, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10003d94, 64
  %v2_10003d98 = zext i8 %tmp to i32
  %v3_10003d98 = lshr i32 %v0_10003d84, %v2_10003d98
  store i32 %v3_10003d98, i32* %r3.global-to-local, align 4
  %v0_10003d9c = load i32, i32* %r29.global-to-local, align 4
  %v2_10003d9c = add i32 %v3_10003d98, %v0_10003d9c
  store i32 %v2_10003d9c, i32* %r29.global-to-local, align 4
  %v1_10003da0 = load i32, i32* %r28.global-to-local, align 4
  %v2_10003da0 = add i32 %v1_10003da0, 16
  %v3_10003da0 = inttoptr i32 %v2_10003da0 to i32*
  store i32 %v2_10003d9c, i32* %v3_10003da0, align 4
  %v0_10003da4 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10003da4, label %dec_label_pc_10003da8, label %dec_label_pc_10003cd4

dec_label_pc_10003da8:                            ; preds = %dec_label_pc_10003d80, %dec_label_pc_10003cd0
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10003dac = call i32 @function_1000723c()
  store i32 %v0_10003dac, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r29, align 4
  %v1_10003db4 = load i32, i32* %r28.global-to-local, align 4
  %v2_10003db4 = add i32 %v1_10003db4, 12
  %v3_10003db4 = inttoptr i32 %v2_10003db4 to i32*
  store i32 %v0_10003dac, i32* %v3_10003db4, align 4
  %v0_10003db8 = load i32, i32* %r18.global-to-local, align 4
  %v1_10003db8 = load i32, i32* @r29, align 4
  %v4_10003db8 = icmp eq i32 %v0_10003db8, %v1_10003db8
  br i1 %v4_10003db8, label %dec_label_pc_10003dc0, label %dec_label_pc_10003ce4

dec_label_pc_10003dc0:                            ; preds = %dec_label_pc_10003da8, %dec_label_pc_10003cd4
  %v0_10003dc0 = call i32 @function_1000723c()
  %v1_10003dc0 = trunc i32 %v0_10003dc0 to i16
  store i32 %v0_10003dc0, i32* %r3.global-to-local, align 4
  %v0_10003dc4 = load i32, i32* %r19.global-to-local, align 4
  %v1_10003dc4 = load i32, i32* @r29, align 4
  %v4_10003dc4 = icmp eq i32 %v0_10003dc4, %v1_10003dc4
  %v3_10003dc8 = load i32, i32* %r28.global-to-local, align 4
  %v4_10003dc8 = add i32 %v3_10003dc8, 4
  %v5_10003dc8 = inttoptr i32 %v4_10003dc8 to i16*
  store i16 %v1_10003dc0, i16* %v5_10003dc8, align 2
  br i1 %v4_10003dc4, label %dec_label_pc_10003dd0, label %dec_label_pc_10003dc0.dec_label_pc_10003cec_crit_edge

dec_label_pc_10003dc0.dec_label_pc_10003cec_crit_edge: ; preds = %dec_label_pc_10003dc0
  %v1_10003cec.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10003cec

dec_label_pc_10003dd0:                            ; preds = %dec_label_pc_10003dc0, %dec_label_pc_10003ce4
  %v0_10003dd0 = call i32 @function_1000723c()
  %v1_10003dd0 = trunc i32 %v0_10003dd0 to i16
  store i32 %v0_10003dd0, i32* %r3.global-to-local, align 4
  %v0_10003dd4 = load i32, i32* %r20.global-to-local, align 4
  %v1_10003dd4 = load i32, i32* @r29, align 4
  %v4_10003dd4 = icmp eq i32 %v0_10003dd4, %v1_10003dd4
  %v3_10003dd8 = load i32, i32* %r28.global-to-local, align 4
  %v4_10003dd8 = add i32 %v3_10003dd8, 20
  %v5_10003dd8 = inttoptr i32 %v4_10003dd8 to i16*
  store i16 %v1_10003dd0, i16* %v5_10003dd8, align 2
  br i1 %v4_10003dd4, label %dec_label_pc_10003de0, label %dec_label_pc_10003dd0.dec_label_pc_10003cf4_crit_edge

dec_label_pc_10003dd0.dec_label_pc_10003cf4_crit_edge: ; preds = %dec_label_pc_10003dd0
  %v1_10003cf4.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10003cf4

dec_label_pc_10003de0:                            ; preds = %dec_label_pc_10003dd0, %dec_label_pc_10003cec
  %v0_10003de0 = call i32 @function_1000723c()
  %v1_10003de0 = trunc i32 %v0_10003de0 to i16
  store i32 %v0_10003de0, i32* %r3.global-to-local, align 4
  %v0_10003de4 = load i32, i32* %r15.global-to-local, align 4
  %v1_10003de4 = load i32, i32* @r29, align 4
  %v4_10003de4 = icmp eq i32 %v0_10003de4, %v1_10003de4
  %v3_10003de8 = load i32, i32* @r31, align 4
  %v4_10003de8 = add i32 %v3_10003de8, 2
  %v5_10003de8 = inttoptr i32 %v4_10003de8 to i16*
  store i16 %v1_10003de0, i16* %v5_10003de8, align 2
  br i1 %v4_10003de4, label %dec_label_pc_10003df0, label %dec_label_pc_10003de0.dec_label_pc_10003cfc_crit_edge

dec_label_pc_10003de0.dec_label_pc_10003cfc_crit_edge: ; preds = %dec_label_pc_10003de0
  %v1_10003cfc.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10003cfc

dec_label_pc_10003df0:                            ; preds = %dec_label_pc_10003de0, %dec_label_pc_10003cf4
  %v0_10003df0 = call i32 @function_1000723c()
  store i32 %v0_10003df0, i32* %r3.global-to-local, align 4
  %v0_10003df4 = load i32, i32* %r17.global-to-local, align 4
  %v1_10003df4 = load i32, i32* @r29, align 4
  %v4_10003df4 = icmp eq i32 %v0_10003df4, %v1_10003df4
  %v1_10003df8 = load i32, i32* @r31, align 4
  %v2_10003df8 = add i32 %v1_10003df8, 4
  %v3_10003df8 = inttoptr i32 %v2_10003df8 to i32*
  store i32 %v0_10003df0, i32* %v3_10003df8, align 4
  br i1 %v4_10003df4, label %dec_label_pc_10003e00, label %dec_label_pc_10003d04

dec_label_pc_10003e00:                            ; preds = %dec_label_pc_10003df0, %dec_label_pc_10003cfc
  %v0_10003e00 = call i32 @function_1000723c()
  store i32 %v0_10003e00, i32* %r3.global-to-local, align 4
  %v1_10003e04 = load i32, i32* @r31, align 4
  %v2_10003e04 = add i32 %v1_10003e04, 8
  %v3_10003e04 = inttoptr i32 %v2_10003e04 to i32*
  store i32 %v0_10003e00, i32* %v3_10003e04, align 4
  %v0_10003e08 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10003e08, label %dec_label_pc_10003d08, label %dec_label_pc_10003e0c

dec_label_pc_10003e0c:                            ; preds = %dec_label_pc_10003d04, %dec_label_pc_10003e00
  %v0_10003e0c = load i32, i32* %r28.global-to-local, align 4
  %v1_10003e0c = add i32 %v0_10003e0c, 40
  store i32 %v1_10003e0c, i32* @r3, align 4
  %v0_10003e10 = load i32, i32* %r16.global-to-local, align 4
  store i32 %v0_10003e10, i32* @r4, align 4
  %v0_10003e14 = call i32 @function_10007468()
  store i32 %v0_10003e14, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003d08

dec_label_pc_10003e1c:                            ; preds = %dec_label_pc_10003b34
  store i32 %v6_10003aec, i32* %r0.global-to-local, align 4
  %v0_10003e20 = load i32, i32* %r16.global-to-local, align 4
  %v1_10003e20 = add i32 %v0_10003e20, 40
  store i32 %v1_10003e20, i32* %r24.global-to-local, align 4
  store i32 %v1_10003ad8, i32* %r9.global-to-local, align 4
  %v1_10003e28 = add i32 %v0_10003e20, 20
  store i32 %v1_10003e28, i32* @r30, align 4
  %v3_10003e2c = icmp eq i32 %v6_10003aec, -1
  store i1 %v3_10003e2c, i1* %cr2_eq.global-to-local, align 1
  %v3_10003e30 = icmp eq i32 %v1_10003ad8, 0
  store i1 %v3_10003e30, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_10003c98.preheader

dec_label_pc_10003e3c:                            ; preds = %dec_label_pc_10003b10
  %v0_10003e3c = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10003e3c, i32* %r3.global-to-local, align 4
  store i32 268451396, i32* @lr, align 4
  %v0_10003e40 = call i32 @function_1000a98c()
  store i32 %v0_10003e40, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003e44

dec_label_pc_10003e44:                            ; preds = %dec_label_pc_100038c0, %dec_label_pc_10003e3c
  store i32 %v0_100038d8, i32* %r0.global-to-local, align 4
  %v1_10003e58 = call %0 @__asm_mtcrf(i32 56, i32 %v0_100038c8)
  store i32 %v0_10003918, i32* %r28.global-to-local, align 4
  store i32 %v0_10003920, i32* %r29.global-to-local, align 4
  store i32 %v0_10003928, i32* %r30.global-to-local, align 4
  %v0_10003ea0 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10003ea0

; uselistorder directives
  uselistorder i32 %v0_10003de0, { 1, 0 }
  uselistorder i32 %v0_10003dd0, { 1, 0 }
  uselistorder i32 %v0_10003dc0, { 1, 0 }
  uselistorder i32 %v1_10003db8, { 1, 0 }
  uselistorder i1 %v1_10003d78, { 1, 0 }
  uselistorder i1 %v0_10003d78, { 1, 0 }
  uselistorder i32 %v1_10003d68, { 0, 2, 3, 1 }
  uselistorder i32 %v4_10003d30, { 1, 0 }
  uselistorder i32 %v1_10003ba4, { 1, 0 }
  uselistorder i32 %v1_10003b9c, { 1, 0 }
  uselistorder i32 %v1_10003b80, { 1, 0 }
  uselistorder i32 %v1_10003b7c, { 1, 0 }
  uselistorder i32 %v1_10003b68, { 1, 0 }
  uselistorder i32 %v1_10003b64, { 1, 0 }
  uselistorder i32 %v1_10003b60, { 2, 1, 0 }
  uselistorder i32 %v1_10003b58, { 1, 2, 0, 3 }
  uselistorder i32 %v6_10003aec, { 0, 4, 2, 1, 3 }
  uselistorder i32 %v1_10003ad8, { 3, 0, 2, 1 }
  uselistorder i8 %v5_10003958, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 21, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 0, 1 }
  uselistorder i32* %r29.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r28.global-to-local, { 0, 9, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 20, 21, 22, 23, 25, 26, 27, 28, 29 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10003e44, { 1, 0 }
  uselistorder label %dec_label_pc_10003e0c, { 1, 0 }
  uselistorder label %dec_label_pc_10003d08, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10003c9c, { 1, 0 }
  uselistorder label %dec_label_pc_10003c98, { 1, 0 }
  uselistorder label %dec_label_pc_10003c98.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10003c6c, { 1, 0 }
  uselistorder label %dec_label_pc_10003bf0, { 1, 0 }
}

define i32 @function_10003ea4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10003ea4:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-120 = alloca i32, align 4
  %v0_10003ea8 = load i32, i32* @lr, align 4
  store i32 %v0_10003ea8, i32* %r0.global-to-local, align 4
  %v0_10003eac = call i32 @__asm_mfcr()
  store i32 %v0_10003eac, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r27.global-to-local, align 4
  %v0_10003ebc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10003eac, i32* %r24.global-to-local, align 4
  %v0_10003efc = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10003f04 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_10003f10 = load i32, i32* @r31, align 4
  store i32 268451608, i32* @lr, align 4
  %v2_10003f14 = call i32 @function_1000bae4(i32 4, i32 4)
  store i32 %v2_10003f14, i32* %r25.global-to-local, align 4
  %v0_10003f1c = load i32, i32* @r28, align 4
  %v0_10003f28 = load i32, i32* @r29, align 4
  store i32 %v0_10003f28, i32* %r3.global-to-local, align 4
  store i32 268451632, i32* @lr, align 4
  %v4_10003f2c = inttoptr i32 %v0_10003f1c to i32*
  %v5_10003f2c = call i32 @function_1000235c(i32 %v0_10003f28, i32* %v4_10003f2c, i32 2, i32 0)
  %v5_10003f3c = trunc i32 %v5_10003f2c to i8
  %v0_10003f44 = load i32, i32* @r28, align 4
  %v0_10003f48 = load i32, i32* @r29, align 4
  store i32 %v0_10003f48, i32* %r3.global-to-local, align 4
  store i32 268451664, i32* @lr, align 4
  %v4_10003f4c = inttoptr i32 %v0_10003f44 to i32*
  %v5_10003f4c = call i32 @function_1000235c(i32 %v0_10003f48, i32* %v4_10003f4c, i32 3, i32 65535)
  %v0_10003f50 = load i32, i32* @r28, align 4
  store i32 %v5_10003f4c, i32* %r21.global-to-local, align 4
  %v0_10003f60 = load i32, i32* @r29, align 4
  store i32 %v0_10003f60, i32* %r3.global-to-local, align 4
  store i32 268451688, i32* @lr, align 4
  %v4_10003f64 = inttoptr i32 %v0_10003f50 to i32*
  %v5_10003f64 = call i32 @function_1000235c(i32 %v0_10003f60, i32* %v4_10003f64, i32 4, i32 64)
  %v0_10003f68 = load i32, i32* @r28, align 4
  %v5_10003f74 = trunc i32 %v5_10003f64 to i8
  %v0_10003f7c = load i32, i32* @r29, align 4
  store i32 %v0_10003f7c, i32* %r3.global-to-local, align 4
  store i32 268451716, i32* @lr, align 4
  %v4_10003f80 = inttoptr i32 %v0_10003f68 to i32*
  %v5_10003f80 = call i32 @function_1000235c(i32 %v0_10003f7c, i32* %v4_10003f80, i32 5, i32 1)
  %v0_10003f90 = load i32, i32* @r28, align 4
  %v1_10003f94 = urem i32 %v5_10003f80, 256
  store i32 %v1_10003f94, i32* @r31, align 4
  %v0_10003f98 = load i32, i32* @r29, align 4
  store i32 %v0_10003f98, i32* %r3.global-to-local, align 4
  store i32 268451744, i32* @lr, align 4
  %v4_10003f9c = inttoptr i32 %v0_10003f90 to i32*
  %v5_10003f9c = call i32 @function_1000235c(i32 %v0_10003f98, i32* %v4_10003f9c, i32 6, i32 65535)
  %v0_10003fa4 = load i32, i32* @r28, align 4
  store i32 %v5_10003f9c, i32* %r22.global-to-local, align 4
  %v0_10003fb4 = load i32, i32* @r29, align 4
  store i32 %v0_10003fb4, i32* %r3.global-to-local, align 4
  store i32 268451772, i32* @lr, align 4
  %v4_10003fb8 = inttoptr i32 %v0_10003fa4 to i32*
  %v5_10003fb8 = call i32 @function_1000235c(i32 %v0_10003fb4, i32* %v4_10003fb8, i32 7, i32 65535)
  %v0_10003fc0 = load i32, i32* @r28, align 4
  store i32 %v5_10003fb8, i32* %r23.global-to-local, align 4
  %v0_10003fd0 = load i32, i32* @r29, align 4
  store i32 %v0_10003fd0, i32* %r3.global-to-local, align 4
  store i32 268451800, i32* @lr, align 4
  %v4_10003fd4 = inttoptr i32 %v0_10003fc0 to i32*
  %v5_10003fd4 = call i32 @function_1000235c(i32 %v0_10003fd0, i32* %v4_10003fd4, i32 17, i32 65535)
  %v0_10003fd8 = load i32, i32* @r28, align 4
  store i32 %v5_10003fd4, i32* %r19.global-to-local, align 4
  %v0_10003fe8 = load i32, i32* @r29, align 4
  store i32 %v0_10003fe8, i32* %r3.global-to-local, align 4
  store i32 268451824, i32* @lr, align 4
  %v4_10003fec = inttoptr i32 %v0_10003fd8 to i32*
  %v5_10003fec = call i32 @function_1000235c(i32 %v0_10003fe8, i32* %v4_10003fec, i32 18, i32 0)
  %v0_10003ff0 = load i32, i32* @r28, align 4
  store i32 %v5_10003fec, i32* %r20.global-to-local, align 4
  %v0_10004000 = load i32, i32* @r29, align 4
  store i32 %v0_10004000, i32* %r3.global-to-local, align 4
  store i32 268451848, i32* @lr, align 4
  %v4_10004004 = inttoptr i32 %v0_10003ff0 to i32*
  %v5_10004004 = call i32 @function_1000235c(i32 %v0_10004000, i32* %v4_10004004, i32 11, i32 0)
  %v0_10004008 = load i32, i32* @r28, align 4
  store i32 %v5_10004004, i32* %r14.global-to-local, align 4
  %v0_10004018 = load i32, i32* @r29, align 4
  store i32 %v0_10004018, i32* %r3.global-to-local, align 4
  store i32 268451872, i32* @lr, align 4
  %v4_1000401c = inttoptr i32 %v0_10004008 to i32*
  %v5_1000401c = call i32 @function_1000235c(i32 %v0_10004018, i32* %v4_1000401c, i32 12, i32 0)
  %v0_10004020 = load i32, i32* @r28, align 4
  store i32 %v5_1000401c, i32* %r17.global-to-local, align 4
  %v0_10004030 = load i32, i32* @r29, align 4
  store i32 %v0_10004030, i32* %r3.global-to-local, align 4
  store i32 268451896, i32* @lr, align 4
  %v4_10004034 = inttoptr i32 %v0_10004020 to i32*
  %v5_10004034 = call i32 @function_1000235c(i32 %v0_10004030, i32* %v4_10004034, i32 13, i32 0)
  %v0_10004038 = load i32, i32* @r28, align 4
  store i32 %v5_10004034, i32* %r18.global-to-local, align 4
  %v0_10004048 = load i32, i32* @r29, align 4
  store i32 %v0_10004048, i32* %r3.global-to-local, align 4
  store i32 268451920, i32* @lr, align 4
  %v4_1000404c = inttoptr i32 %v0_10004038 to i32*
  %v5_1000404c = call i32 @function_1000235c(i32 %v0_10004048, i32* %v4_1000404c, i32 14, i32 0)
  %v0_10004050 = load i32, i32* @r28, align 4
  %v0_10004060 = load i32, i32* @r29, align 4
  store i32 %v0_10004060, i32* %r3.global-to-local, align 4
  store i32 268451944, i32* @lr, align 4
  %v4_10004064 = inttoptr i32 %v0_10004050 to i32*
  %v5_10004064 = call i32 @function_1000235c(i32 %v0_10004060, i32* %v4_10004064, i32 15, i32 1)
  %v0_10004068 = load i32, i32* @r28, align 4
  store i32 %v5_10004064, i32* %r16.global-to-local, align 4
  %v0_10004078 = load i32, i32* @r29, align 4
  store i32 %v0_10004078, i32* %r3.global-to-local, align 4
  store i32 268451968, i32* @lr, align 4
  %v4_1000407c = inttoptr i32 %v0_10004068 to i32*
  %v5_1000407c = call i32 @function_1000235c(i32 %v0_10004078, i32* %v4_1000407c, i32 16, i32 0)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10004084 = load i32, i32* @global_var_1001e180.71, align 4
  %v0_10004088 = load i32, i32* @r28, align 4
  store i32 %v5_1000407c, i32* %r30.global-to-local, align 4
  %v0_10004094 = load i32, i32* @r29, align 4
  store i32 %v0_10004094, i32* %r3.global-to-local, align 4
  store i32 268451996, i32* @lr, align 4
  %v5_10004098 = inttoptr i32 %v0_10004088 to i32*
  %v6_10004098 = call i32 @function_100022dc(i32 %v0_10004094, i32* %v5_10004098, i32 25, i32 %v3_10004084, i32 268566528)
  store i32 %v6_10004098, i32* %r15.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268452016, i32* @lr, align 4
  %v3_100040ac = call i32 @function_1000b758(i32 2, i32 3, i32 6)
  store i32 %v3_100040ac, i32* %r3.global-to-local, align 4
  %v3_100040b0 = icmp eq i32 %v3_100040ac, -1
  store i32 %v3_100040ac, i32* %r26.global-to-local, align 4
  br i1 %v3_100040b0, label %dec_label_pc_100043e8, label %dec_label_pc_100040bc

dec_label_pc_100040bc:                            ; preds = %dec_label_pc_10003ea4
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_100040c8 = ptrtoint i32* %stack_var_-120 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-120, align 4
  store i32 268452056, i32* @lr, align 4
  %v5_100040d4 = call i32 @function_1000b71c(i32 0, i32 3, i32 %v2_100040c8, i32 4, i32 4)
  store i32 %v5_100040d4, i32* %r3.global-to-local, align 4
  %v3_100040d8 = icmp eq i32 %v5_100040d4, -1
  br i1 %v3_100040d8, label %dec_label_pc_100043e0, label %dec_label_pc_100040e0

dec_label_pc_100040e0:                            ; preds = %dec_label_pc_100040bc
  %v0_100040e0 = load i32, i32* %r24.global-to-local, align 4
  %v1_100040e0 = icmp slt i32 %v0_100040e0, 0
  %v3_100040e0 = icmp eq i32 %v0_100040e0, 0
  store i1 %v1_100040e0, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_100040e0, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-120, align 4
  %v0_100040ec = load i32, i32* %r21.global-to-local, align 4
  %v1_100040ec = urem i32 %v0_100040ec, 65536
  store i32 %v1_100040ec, i32* %r21.global-to-local, align 4
  %v0_100040f0 = load i32, i32* %r22.global-to-local, align 4
  %v1_100040f0 = urem i32 %v0_100040f0, 65536
  store i32 %v1_100040f0, i32* %r22.global-to-local, align 4
  %v0_100040f4 = load i32, i32* %r23.global-to-local, align 4
  %v1_100040f4 = urem i32 %v0_100040f4, 65536
  store i32 %v1_100040f4, i32* %r23.global-to-local, align 4
  %v0_100040f8 = load i32, i32* %r14.global-to-local, align 4
  %v1_100040f8 = urem i32 %v0_100040f8, 256
  store i32 %v1_100040f8, i32* %r14.global-to-local, align 4
  %tmp40 = icmp slt i32 %v0_100040e0, 1
  br i1 %tmp40, label %dec_label_pc_1000425c, label %dec_label_pc_10004100

dec_label_pc_10004100:                            ; preds = %dec_label_pc_100040e0
  store i32 %v5_1000404c, i32* %r0.global-to-local, align 4
  %v0_10004104 = load i32, i32* @r31, align 4
  %v3_10004104 = icmp eq i32 %v0_10004104, 0
  store i1 %v3_10004104, i1* %cr3_eq.global-to-local, align 1
  %v0_10004108 = load i32, i32* %r16.global-to-local, align 4
  %v1_10004108 = urem i32 %v0_10004108, 2
  store i32 %v1_10004108, i32* %r29.global-to-local, align 4
  %v0_1000410c = load i32, i32* %r17.global-to-local, align 4
  %v1_1000410c = urem i32 %v0_1000410c, 2
  store i32 %v1_1000410c, i32* %r17.global-to-local, align 4
  %v0_10004110 = load i32, i32* %r18.global-to-local, align 4
  %v1_10004110 = urem i32 %v0_10004110, 2
  store i32 %v1_10004110, i32* %r18.global-to-local, align 4
  %v1_10004114 = urem i32 %v5_1000404c, 2
  store i32 %v1_10004114, i32* %r28.global-to-local, align 4
  %v0_10004118 = load i32, i32* %r30.global-to-local, align 4
  %v1_10004118 = urem i32 %v0_10004118, 2
  store i32 %v1_10004118, i32* %r30.global-to-local, align 4
  %v1_1000411c = urem i32 %v0_100040f8, 2
  store i32 %v1_1000411c, i32* %r16.global-to-local, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  %v4_1000416c = sext i8 %v5_10003f3c to i32
  %v4_10004174 = sext i8 %v5_10003f74 to i32
  br label %dec_label_pc_10004124

dec_label_pc_10004124:                            ; preds = %dec_label_pc_10004188, %dec_label_pc_10004100
  store i32 128, i32* %r3.global-to-local, align 4
  store i32 268452144, i32* @lr, align 4
  %v2_1000412c = call i32 @function_1000bae4(i32 128, i32 1)
  store i32 %v2_1000412c, i32* %r3.global-to-local, align 4
  %v3_10004130 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10004130, i32* %r9.global-to-local, align 4
  %v0_10004134 = load i32, i32* @r31, align 4
  %v1_10004134 = mul i32 %v0_10004134, 4
  store i32 %v1_10004134, i32* %r0.global-to-local, align 4
  %v1_10004138 = load i32, i32* %r25.global-to-local, align 4
  %v3_10004138 = add i32 %v1_10004138, %v1_10004134
  %v4_10004138 = inttoptr i32 %v3_10004138 to i32*
  store i32 %v2_1000412c, i32* %v4_10004138, align 4
  %v0_1000413c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000413c = mul i32 %v0_1000413c, 4
  store i32 %v1_1000413c, i32* %r9.global-to-local, align 4
  %v1_10004140 = load i32, i32* %r25.global-to-local, align 4
  %v2_10004140 = add i32 %v1_10004140, %v1_1000413c
  %v3_10004140 = inttoptr i32 %v2_10004140 to i32*
  %v4_10004140 = load i32, i32* %v3_10004140, align 4
  store i32 %v4_10004140, i32* %r31.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_10004148 = inttoptr i32 %v4_10004140 to i32*
  %v2_10004148 = load i32, i32* %v1_10004148, align 4
  store i32 %v2_10004148, i32* %r0.global-to-local, align 4
  %v1_1000414c = add i32 %v4_10004140, 20
  store i32 %v1_1000414c, i32* %r11.global-to-local, align 4
  %v0_10004150 = load i32, i32* %r21.global-to-local, align 4
  %v1_10004150 = trunc i32 %v0_10004150 to i16
  %v3_10004150 = add i32 %v4_10004140, 4
  %v4_10004150 = inttoptr i32 %v3_10004150 to i16*
  store i16 %v1_10004150, i16* %v4_10004150, align 2
  %v1_10004154 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10004154, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_1000415c = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 60, i32* %r9.global-to-local, align 4
  %v1_10004164 = load i32, i32* %r31.global-to-local, align 4
  %v2_10004164 = inttoptr i32 %v1_10004164 to i32*
  store i32 %v1_1000415c, i32* %v2_10004164, align 4
  %v0_10004168 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004168 = trunc i32 %v0_10004168 to i16
  %v2_10004168 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004168 = add i32 %v2_10004168, 2
  %v4_10004168 = inttoptr i32 %v3_10004168 to i16*
  store i16 %v1_10004168, i16* %v4_10004168, align 2
  store i32 %v4_1000416c, i32* %r0.global-to-local, align 4
  %v2_10004170 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004170 = add i32 %v2_10004170, 1
  %v4_10004170 = inttoptr i32 %v3_10004170 to i8*
  store i8 %v5_10003f3c, i8* %v4_10004170, align 1
  store i32 %v4_10004174, i32* %r9.global-to-local, align 4
  %v2_10004178 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004178 = add i32 %v2_10004178, 8
  %v4_10004178 = inttoptr i32 %v3_10004178 to i8*
  store i8 %v5_10003f74, i8* %v4_10004178, align 1
  %v0_1000417c = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_1000417c, label %dec_label_pc_10004188, label %dec_label_pc_10004180

dec_label_pc_10004180:                            ; preds = %dec_label_pc_10004124
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10004184 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004184 = add i32 %v2_10004184, 6
  %v4_10004184 = inttoptr i32 %v3_10004184 to i16*
  store i16 16384, i16* %v4_10004184, align 2
  br label %dec_label_pc_10004188

dec_label_pc_10004188:                            ; preds = %dec_label_pc_10004124, %dec_label_pc_10004180
  store i32 6, i32* %r0.global-to-local, align 4
  %v0_1000418c = load i32, i32* %r15.global-to-local, align 4
  %v1_1000418c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000418c = add i32 %v1_1000418c, 12
  %v3_1000418c = inttoptr i32 %v2_1000418c to i32*
  store i32 %v0_1000418c, i32* %v3_1000418c, align 4
  %v0_10004190 = load i32, i32* %r0.global-to-local, align 4
  %v1_10004190 = trunc i32 %v0_10004190 to i8
  %v2_10004190 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004190 = add i32 %v2_10004190, 9
  %v4_10004190 = inttoptr i32 %v3_10004190 to i8*
  store i8 %v1_10004190, i8* %v4_10004190, align 1
  %v0_10004194 = load i32, i32* %r22.global-to-local, align 4
  %v1_10004194 = trunc i32 %v0_10004194 to i16
  %v2_10004194 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004194 = add i32 %v2_10004194, 20
  %v4_10004194 = inttoptr i32 %v3_10004194 to i16*
  store i16 %v1_10004194, i16* %v4_10004194, align 2
  %v3_10004198 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10004198, i32* %r9.global-to-local, align 4
  %v0_1000419c = load i32, i32* %r23.global-to-local, align 4
  %v1_1000419c = trunc i32 %v0_1000419c to i16
  %v2_1000419c = load i32, i32* %r11.global-to-local, align 4
  %v3_1000419c = add i32 %v2_1000419c, 2
  %v4_1000419c = inttoptr i32 %v3_1000419c to i16*
  store i16 %v1_1000419c, i16* %v4_1000419c, align 2
  %v0_100041a0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100041a0 = mul i32 %v0_100041a0, 24
  %v1_100041a4 = load i32, i32* %r27.global-to-local, align 4
  %v2_100041a4 = add i32 %v1_100041a4, %v1_100041a0
  store i32 %v2_100041a4, i32* %r9.global-to-local, align 4
  %v1_100041a8 = add i32 %v2_100041a4, 16
  %v2_100041a8 = inttoptr i32 %v1_100041a8 to i32*
  %v3_100041a8 = load i32, i32* %v2_100041a8, align 4
  store i32 %v3_100041a8, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r9.global-to-local, align 4
  %v1_100041b0 = load i32, i32* %r31.global-to-local, align 4
  %v2_100041b0 = add i32 %v1_100041b0, 16
  %v3_100041b0 = inttoptr i32 %v2_100041b0 to i32*
  store i32 %v3_100041a8, i32* %v3_100041b0, align 4
  %v0_100041b4 = load i32, i32* %r19.global-to-local, align 4
  %v1_100041b4 = load i32, i32* %r11.global-to-local, align 4
  %v2_100041b4 = add i32 %v1_100041b4, 4
  %v3_100041b4 = inttoptr i32 %v2_100041b4 to i32*
  store i32 %v0_100041b4, i32* %v3_100041b4, align 4
  %v0_100041b8 = load i32, i32* %r11.global-to-local, align 4
  %v1_100041b8 = add i32 %v0_100041b8, 12
  %v2_100041b8 = inttoptr i32 %v1_100041b8 to i32*
  %v3_100041b8 = load i32, i32* %v2_100041b8, align 4
  store i32 %v3_100041b8, i32* %r0.global-to-local, align 4
  %v1_100041bc = call i32 @__asm_rlwimi(i32 10, i32 28, i32 0, i32 3)
  store i32 %v1_100041bc, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_100041c4 = call i32 @__asm_rlwimi(i32 %v1_1000411c, i32 21, i32 10, i32 10)
  store i32 %v1_100041c4, i32* %r0.global-to-local, align 4
  %v1_100041c8 = call i32 @__asm_rlwimi(i32 %v1_1000410c, i32 20, i32 11, i32 11)
  store i32 %v1_100041c8, i32* %r0.global-to-local, align 4
  %v1_100041cc = call i32 @__asm_rlwimi(i32 %v1_10004110, i32 19, i32 12, i32 12)
  store i32 %v1_100041cc, i32* %r0.global-to-local, align 4
  %v1_100041d0 = call i32 @__asm_rlwimi(i32 %v1_10004114, i32 18, i32 13, i32 13)
  store i32 %v1_100041d0, i32* %r0.global-to-local, align 4
  %v1_100041d4 = call i32 @__asm_rlwimi(i32 %v1_10004108, i32 17, i32 14, i32 14)
  store i32 %v1_100041d4, i32* %r0.global-to-local, align 4
  %v1_100041d8 = call i32 @__asm_rlwimi(i32 %v1_10004118, i32 16, i32 15, i32 15)
  %v1_100041dc = load i32, i32* %r11.global-to-local, align 4
  %v2_100041dc = add i32 %v1_100041dc, 12
  %v3_100041dc = inttoptr i32 %v2_100041dc to i32*
  store i32 %v1_100041d8, i32* %v3_100041dc, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_100041e4 = load i32, i32* %r31.global-to-local, align 4
  %v3_100041e4 = add i32 %v2_100041e4, 40
  %v4_100041e4 = inttoptr i32 %v3_100041e4 to i8*
  store i8 2, i8* %v4_100041e4, align 1
  %v0_100041e8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100041e8 = trunc i32 %v0_100041e8 to i8
  %v2_100041e8 = load i32, i32* %r31.global-to-local, align 4
  %v3_100041e8 = add i32 %v2_100041e8, 41
  %v4_100041e8 = inttoptr i32 %v3_100041e8 to i8*
  store i8 %v1_100041e8, i8* %v4_100041e8, align 1
  %v0_100041ec = call i32 @function_1000723c()
  %v2_100041f4 = load i32, i32* %r31.global-to-local, align 4
  %v3_100041f4 = add i32 %v2_100041f4, 46
  %v4_100041f4 = inttoptr i32 %v3_100041f4 to i8*
  store i8 8, i8* %v4_100041f4, align 1
  %v1_100041f8 = urem i32 %v0_100041ec, 16
  store i32 %v1_100041f8, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v2_10004204 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004204 = add i32 %v2_10004204, 44
  %v4_10004204 = inttoptr i32 %v3_10004204 to i8*
  store i8 4, i8* %v4_10004204, align 1
  %v0_10004208 = load i32, i32* %r3.global-to-local, align 4
  %v1_10004208 = add i32 %v0_10004208, 1400
  store i32 %v1_10004208, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  %v0_10004210 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004210 = trunc i32 %v0_10004210 to i8
  %v2_10004210 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004210 = add i32 %v2_10004210, 45
  %v4_10004210 = inttoptr i32 %v3_10004210 to i8*
  store i8 %v1_10004210, i8* %v4_10004210, align 1
  %v0_10004214 = load i32, i32* %r0.global-to-local, align 4
  %v1_10004214 = trunc i32 %v0_10004214 to i8
  %v2_10004214 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004214 = add i32 %v2_10004214, 47
  %v4_10004214 = inttoptr i32 %v3_10004214 to i8*
  store i8 %v1_10004214, i8* %v4_10004214, align 1
  %v0_10004218 = load i32, i32* %r3.global-to-local, align 4
  %v1_10004218 = trunc i32 %v0_10004218 to i16
  %v2_10004218 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004218 = add i32 %v2_10004218, 42
  %v4_10004218 = inttoptr i32 %v3_10004218 to i16*
  store i16 %v1_10004218, i16* %v4_10004218, align 2
  %v0_1000421c = call i32 @function_1000723c()
  store i32 %v0_1000421c, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  %v1_10004228 = load i32, i32* %r31.global-to-local, align 4
  %v2_10004228 = add i32 %v1_10004228, 52
  %v3_10004228 = inttoptr i32 %v2_10004228 to i32*
  store i32 0, i32* %v3_10004228, align 4
  %v0_1000422c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000422c = trunc i32 %v0_1000422c to i8
  %v2_1000422c = load i32, i32* %r31.global-to-local, align 4
  %v3_1000422c = add i32 %v2_1000422c, 56
  %v4_1000422c = inttoptr i32 %v3_1000422c to i8*
  store i8 %v1_1000422c, i8* %v4_1000422c, align 1
  store i32 6, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r9.global-to-local, align 4
  %v1_10004238 = load i32, i32* %r31.global-to-local, align 4
  %v2_10004238 = add i32 %v1_10004238, 48
  %v3_10004238 = inttoptr i32 %v2_10004238 to i32*
  store i32 %v0_1000421c, i32* %v3_10004238, align 4
  %v0_1000423c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000423c = trunc i32 %v0_1000423c to i8
  %v2_1000423c = load i32, i32* %r31.global-to-local, align 4
  %v3_1000423c = add i32 %v2_1000423c, 59
  %v4_1000423c = inttoptr i32 %v3_1000423c to i8*
  store i8 %v1_1000423c, i8* %v4_1000423c, align 1
  %v0_10004240 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004240 = trunc i32 %v0_10004240 to i8
  %v2_10004240 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004240 = add i32 %v2_10004240, 57
  %v4_10004240 = inttoptr i32 %v3_10004240 to i8*
  store i8 %v1_10004240, i8* %v4_10004240, align 1
  %v0_10004244 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004244 = trunc i32 %v0_10004244 to i8
  %v2_10004244 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004244 = add i32 %v2_10004244, 58
  %v4_10004244 = inttoptr i32 %v3_10004244 to i8*
  store i8 %v1_10004244, i8* %v4_10004244, align 1
  %v3_10004248 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10004248, i32* %r9.global-to-local, align 4
  %v1_1000424c = add i32 %v3_10004248, 1
  store i32 %v1_1000424c, i32* %r31.global-to-local, align 4
  %v1_10004250 = load i32, i32* %r24.global-to-local, align 4
  %v2_10004250 = icmp slt i32 %v1_1000424c, %v1_10004250
  store i32 %v1_1000424c, i32* %stack_var_-120, align 4
  br i1 %v2_10004250, label %dec_label_pc_10004124, label %dec_label_pc_1000425c.loopexit

dec_label_pc_1000425c.loopexit:                   ; preds = %dec_label_pc_10004188
  %v0_10004260.pre = load i32, i32* %r14.global-to-local, align 4
  %v0_10004264.pre.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10004264.pre.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_1000425c

dec_label_pc_1000425c:                            ; preds = %dec_label_pc_1000425c.loopexit, %dec_label_pc_100040e0
  %v1_10004264.pre = phi i1 [ %v1_10004264.pre.pre, %dec_label_pc_1000425c.loopexit ], [ %v1_100040e0, %dec_label_pc_100040e0 ]
  %v0_10004264.pre = phi i1 [ %v0_10004264.pre.pre, %dec_label_pc_1000425c.loopexit ], [ %v3_100040e0, %dec_label_pc_100040e0 ]
  %v0_10004260 = phi i32 [ %v0_10004260.pre, %dec_label_pc_1000425c.loopexit ], [ %v1_100040f8, %dec_label_pc_100040e0 ]
  %v0_1000425c = load i32, i32* %r15.global-to-local, align 4
  %v3_1000425c = icmp eq i32 %v0_1000425c, -1
  store i1 %v3_1000425c, i1* %cr2_eq.global-to-local, align 1
  %v3_10004260 = icmp eq i32 %v0_10004260, 0
  store i1 %v3_10004260, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_10004264.outer

dec_label_pc_10004264.outer:                      ; preds = %dec_label_pc_10004340, %dec_label_pc_1000425c
  %v1_10004264.ph = phi i1 [ %v1_10004264.pre, %dec_label_pc_1000425c ], [ %v1_10004340, %dec_label_pc_10004340 ]
  %v0_10004264.ph = phi i1 [ %v0_10004264.pre, %dec_label_pc_1000425c ], [ %v0_10004340, %dec_label_pc_10004340 ]
  %v2_10004264 = or i1 %v1_10004264.ph, %v0_10004264.ph
  br label %dec_label_pc_10004264

dec_label_pc_10004264:                            ; preds = %dec_label_pc_10004264.outer, %dec_label_pc_10004264
  br i1 %v2_10004264, label %dec_label_pc_10004264, label %dec_label_pc_10004268

dec_label_pc_10004268:                            ; preds = %dec_label_pc_10004264, %dec_label_pc_10004340
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-120, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10004278

dec_label_pc_10004278:                            ; preds = %dec_label_pc_100042d0, %dec_label_pc_10004268
  %v0_10004278 = phi i32 [ %v1_10004330, %dec_label_pc_100042d0 ], [ 0, %dec_label_pc_10004268 ]
  %v1_10004278 = mul i32 %v0_10004278, 24
  store i32 %v1_10004278, i32* %r0.global-to-local, align 4
  %v1_1000427c = mul i32 %v0_10004278, 4
  store i32 %v1_1000427c, i32* %r11.global-to-local, align 4
  %v1_10004280 = load i32, i32* %r25.global-to-local, align 4
  %v2_10004280 = add i32 %v1_10004280, %v1_1000427c
  %v3_10004280 = inttoptr i32 %v2_10004280 to i32*
  %v4_10004280 = load i32, i32* %v3_10004280, align 4
  store i32 %v4_10004280, i32* %r28.global-to-local, align 4
  %v1_10004284 = load i32, i32* %r27.global-to-local, align 4
  %v2_10004284 = add i32 %v1_10004284, %v1_10004278
  %v1_10004288 = add i32 %v2_10004284, 20
  %v2_10004288 = inttoptr i32 %v1_10004288 to i8*
  %v3_10004288 = load i8, i8* %v2_10004288, align 1
  %v4_10004288 = zext i8 %v3_10004288 to i32
  store i32 %v4_10004288, i32* %r9.global-to-local, align 4
  %v1_1000428c = add i32 %v4_10004280, 20
  store i32 %v1_1000428c, i32* @r31, align 4
  %tmp41 = icmp ult i8 %v3_10004288, 32
  br i1 %tmp41, label %dec_label_pc_10004348, label %dec_label_pc_10004298

dec_label_pc_10004298:                            ; preds = %dec_label_pc_10004278
  %v0_10004298 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10004298, label %dec_label_pc_10004370, label %dec_label_pc_1000429c

dec_label_pc_1000429c:                            ; preds = %dec_label_pc_10004348, %dec_label_pc_10004298
  store i32 65535, i32* %r29.global-to-local, align 4
  %v0_100042a4 = load i32, i32* %r21.global-to-local, align 4
  %v4_100042a4 = icmp eq i32 %v0_100042a4, 65535
  br i1 %v4_100042a4, label %dec_label_pc_10004388, label %dec_label_pc_100042ac

dec_label_pc_100042ac:                            ; preds = %dec_label_pc_10004370, %dec_label_pc_1000429c
  %v1_100042ac = phi i32 [ %v1_10004380, %dec_label_pc_10004370 ], [ 65535, %dec_label_pc_1000429c ]
  %v0_100042ac = load i32, i32* %r22.global-to-local, align 4
  %v4_100042ac = icmp eq i32 %v0_100042ac, %v1_100042ac
  br i1 %v4_100042ac, label %dec_label_pc_10004398, label %dec_label_pc_100042b4

dec_label_pc_100042b4:                            ; preds = %dec_label_pc_10004388.dec_label_pc_100042b4_crit_edge, %dec_label_pc_100042ac
  %v1_100042b4 = phi i32 [ %v1_100042b4.pre, %dec_label_pc_10004388.dec_label_pc_100042b4_crit_edge ], [ %v1_100042ac, %dec_label_pc_100042ac ]
  %v0_100042b4 = load i32, i32* %r23.global-to-local, align 4
  %v4_100042b4 = icmp eq i32 %v0_100042b4, %v1_100042b4
  br i1 %v4_100042b4, label %dec_label_pc_100043a8, label %dec_label_pc_100042bc

dec_label_pc_100042bc:                            ; preds = %dec_label_pc_10004398.dec_label_pc_100042bc_crit_edge, %dec_label_pc_100042b4
  %v1_100042bc = phi i32 [ %v1_100042bc.pre, %dec_label_pc_10004398.dec_label_pc_100042bc_crit_edge ], [ %v1_100042b4, %dec_label_pc_100042b4 ]
  %v0_100042bc = load i32, i32* %r19.global-to-local, align 4
  %v4_100042bc = icmp eq i32 %v0_100042bc, %v1_100042bc
  br i1 %v4_100042bc, label %dec_label_pc_100043b8, label %dec_label_pc_100042c4

dec_label_pc_100042c4:                            ; preds = %dec_label_pc_100043a8.dec_label_pc_100042c4_crit_edge, %dec_label_pc_100042bc
  %v1_100042c4 = phi i32 [ %v1_100042c4.pre, %dec_label_pc_100043a8.dec_label_pc_100042c4_crit_edge ], [ %v1_100042bc, %dec_label_pc_100042bc ]
  %v0_100042c4 = load i32, i32* %r20.global-to-local, align 4
  %v4_100042c4 = icmp eq i32 %v0_100042c4, %v1_100042c4
  br i1 %v4_100042c4, label %dec_label_pc_100043c8, label %dec_label_pc_100042cc

dec_label_pc_100042cc:                            ; preds = %dec_label_pc_100043b8, %dec_label_pc_100042c4
  %v0_100042cc = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_100042cc, label %dec_label_pc_100042d0, label %dec_label_pc_100043d4

dec_label_pc_100042d0:                            ; preds = %dec_label_pc_100042cc, %dec_label_pc_100043c8, %dec_label_pc_100043d4
  %v0_100042d0 = load i32, i32* %r30.global-to-local, align 4
  %v1_100042d0 = trunc i32 %v0_100042d0 to i16
  %v2_100042d0 = load i32, i32* %r28.global-to-local, align 4
  %v3_100042d0 = add i32 %v2_100042d0, 10
  %v4_100042d0 = inttoptr i32 %v3_100042d0 to i16*
  store i16 %v1_100042d0, i16* %v4_100042d0, align 2
  %v0_100042d8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100042d8, i32* @r3, align 4
  %v2_100042dc = call i32 @function_100056ac(i32 %v0_100042d8, i32 20)
  %v3_100042dc = trunc i32 %v2_100042dc to i16
  %v0_100042e0 = load i32, i32* @r31, align 4
  store i32 %v0_100042e0, i32* @r4, align 4
  %v4_100042e4 = add i32 %v0_100042d8, 10
  %v5_100042e4 = inttoptr i32 %v4_100042e4 to i16*
  store i16 %v3_100042dc, i16* %v5_100042e4, align 2
  %v0_100042ec = load i32, i32* %r30.global-to-local, align 4
  %v1_100042ec = trunc i32 %v0_100042ec to i16
  %v2_100042ec = load i32, i32* @r31, align 4
  %v3_100042ec = add i32 %v2_100042ec, 16
  %v4_100042ec = inttoptr i32 %v3_100042ec to i16*
  store i16 %v1_100042ec, i16* %v4_100042ec, align 2
  %v0_100042f4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100042f4, i32* %r3.global-to-local, align 4
  %v4_100042f8 = call i32 @function_10005710(i32 %v0_100042f4, i32 %v0_100042e0, i32 40, i32 40)
  %v5_100042f8 = trunc i32 %v4_100042f8 to i16
  store i32 %v4_100042f8, i32* %r3.global-to-local, align 4
  %v3_100042fc = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_100042fc, i32* %r7.global-to-local, align 4
  %v0_10004300 = load i32, i32* @r31, align 4
  %v1_10004300 = add i32 %v0_10004300, 2
  %v2_10004300 = inttoptr i32 %v1_10004300 to i16*
  %v3_10004300 = load i16, i16* %v2_10004300, align 2
  %v4_10004300 = zext i16 %v3_10004300 to i32
  store i32 %v4_10004300, i32* %r0.global-to-local, align 4
  %v0_10004304 = load i32, i32* %r28.global-to-local, align 4
  %v1_10004308 = mul i32 %v3_100042fc, 24
  store i32 %v1_10004308, i32* %r7.global-to-local, align 4
  %v4_1000430c = add i32 %v0_10004300, 16
  %v5_1000430c = inttoptr i32 %v4_1000430c to i16*
  store i16 %v5_100042f8, i16* %v5_1000430c, align 2
  %v0_10004314 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10004314, i32* %r3.global-to-local, align 4
  %v0_10004318 = load i32, i32* %r7.global-to-local, align 4
  %v1_10004318 = load i32, i32* %r27.global-to-local, align 4
  %v2_10004318 = add i32 %v1_10004318, %v0_10004318
  store i32 %v2_10004318, i32* %r7.global-to-local, align 4
  %v0_10004320 = load i32, i32* %r0.global-to-local, align 4
  %v1_10004320 = trunc i32 %v0_10004320 to i16
  %v3_10004320 = add i32 %v2_10004318, 2
  %v4_10004320 = inttoptr i32 %v3_10004320 to i16*
  store i16 %v1_10004320, i16* %v4_10004320, align 2
  store i32 268452652, i32* @lr, align 4
  %v6_10004328 = call i32 @function_1000b6dc(i32 %v0_10004314, i32 %v0_10004304, i32 60, i32 16384, i32 %v2_10004318, i32 16)
  store i32 %v6_10004328, i32* %r3.global-to-local, align 4
  %v3_1000432c = load i32, i32* %stack_var_-120, align 4
  %v1_10004330 = add i32 %v3_1000432c, 1
  store i32 %v1_10004330, i32* %r9.global-to-local, align 4
  %v1_10004334 = load i32, i32* %r24.global-to-local, align 4
  %v2_10004334 = icmp slt i32 %v1_10004330, %v1_10004334
  store i32 %v1_10004330, i32* %stack_var_-120, align 4
  br i1 %v2_10004334, label %dec_label_pc_10004278, label %dec_label_pc_10004340

dec_label_pc_10004340:                            ; preds = %dec_label_pc_100042d0
  %v0_10004340 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10004340 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10004340 = or i1 %v0_10004340, %v1_10004340
  br i1 %v2_10004340, label %dec_label_pc_10004264.outer, label %dec_label_pc_10004268

dec_label_pc_10004348:                            ; preds = %dec_label_pc_10004278
  %v1_10004348 = add i32 %v2_10004284, 16
  %v2_10004348 = inttoptr i32 %v1_10004348 to i32*
  %v3_10004348 = load i32, i32* %v2_10004348, align 4
  store i32 %v3_10004348, i32* %r29.global-to-local, align 4
  %v0_1000434c = call i32 @function_1000723c()
  store i32 %v0_1000434c, i32* %r3.global-to-local, align 4
  %v3_10004350 = load i32, i32* %stack_var_-120, align 4
  %v1_10004354 = mul i32 %v3_10004350, 24
  %v1_10004358 = load i32, i32* %r27.global-to-local, align 4
  %v2_10004358 = add i32 %v1_10004358, %v1_10004354
  store i32 %v2_10004358, i32* %r9.global-to-local, align 4
  %v1_1000435c = add i32 %v2_10004358, 20
  %v2_1000435c = inttoptr i32 %v1_1000435c to i8*
  %v3_1000435c = load i8, i8* %v2_1000435c, align 1
  %v4_1000435c = zext i8 %v3_1000435c to i32
  store i32 %v4_1000435c, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_1000435c, 64
  %v2_10004360 = zext i8 %tmp to i32
  %v3_10004360 = lshr i32 %v0_1000434c, %v2_10004360
  store i32 %v3_10004360, i32* %r3.global-to-local, align 4
  %v0_10004364 = load i32, i32* %r29.global-to-local, align 4
  %v2_10004364 = add i32 %v3_10004360, %v0_10004364
  store i32 %v2_10004364, i32* %r29.global-to-local, align 4
  %v1_10004368 = load i32, i32* %r28.global-to-local, align 4
  %v2_10004368 = add i32 %v1_10004368, 16
  %v3_10004368 = inttoptr i32 %v2_10004368 to i32*
  store i32 %v2_10004364, i32* %v3_10004368, align 4
  %v0_1000436c = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_1000436c, label %dec_label_pc_10004370, label %dec_label_pc_1000429c

dec_label_pc_10004370:                            ; preds = %dec_label_pc_10004348, %dec_label_pc_10004298
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10004374 = call i32 @function_1000723c()
  store i32 %v0_10004374, i32* %r3.global-to-local, align 4
  store i32 65535, i32* %r29.global-to-local, align 4
  %v1_1000437c = load i32, i32* %r28.global-to-local, align 4
  %v2_1000437c = add i32 %v1_1000437c, 12
  %v3_1000437c = inttoptr i32 %v2_1000437c to i32*
  store i32 %v0_10004374, i32* %v3_1000437c, align 4
  %v0_10004380 = load i32, i32* %r21.global-to-local, align 4
  %v1_10004380 = load i32, i32* %r29.global-to-local, align 4
  %v4_10004380 = icmp eq i32 %v0_10004380, %v1_10004380
  br i1 %v4_10004380, label %dec_label_pc_10004388, label %dec_label_pc_100042ac

dec_label_pc_10004388:                            ; preds = %dec_label_pc_10004370, %dec_label_pc_1000429c
  %v0_10004388 = call i32 @function_1000723c()
  %v1_10004388 = trunc i32 %v0_10004388 to i16
  store i32 %v0_10004388, i32* %r3.global-to-local, align 4
  %v0_1000438c = load i32, i32* %r22.global-to-local, align 4
  %v1_1000438c = load i32, i32* %r29.global-to-local, align 4
  %v4_1000438c = icmp eq i32 %v0_1000438c, %v1_1000438c
  %v3_10004390 = load i32, i32* %r28.global-to-local, align 4
  %v4_10004390 = add i32 %v3_10004390, 4
  %v5_10004390 = inttoptr i32 %v4_10004390 to i16*
  store i16 %v1_10004388, i16* %v5_10004390, align 2
  br i1 %v4_1000438c, label %dec_label_pc_10004398, label %dec_label_pc_10004388.dec_label_pc_100042b4_crit_edge

dec_label_pc_10004388.dec_label_pc_100042b4_crit_edge: ; preds = %dec_label_pc_10004388
  %v1_100042b4.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100042b4

dec_label_pc_10004398:                            ; preds = %dec_label_pc_10004388, %dec_label_pc_100042ac
  %v0_10004398 = call i32 @function_1000723c()
  %v1_10004398 = trunc i32 %v0_10004398 to i16
  store i32 %v0_10004398, i32* %r3.global-to-local, align 4
  %v0_1000439c = load i32, i32* %r23.global-to-local, align 4
  %v1_1000439c = load i32, i32* %r29.global-to-local, align 4
  %v4_1000439c = icmp eq i32 %v0_1000439c, %v1_1000439c
  %v3_100043a0 = load i32, i32* %r28.global-to-local, align 4
  %v4_100043a0 = add i32 %v3_100043a0, 20
  %v5_100043a0 = inttoptr i32 %v4_100043a0 to i16*
  store i16 %v1_10004398, i16* %v5_100043a0, align 2
  br i1 %v4_1000439c, label %dec_label_pc_100043a8, label %dec_label_pc_10004398.dec_label_pc_100042bc_crit_edge

dec_label_pc_10004398.dec_label_pc_100042bc_crit_edge: ; preds = %dec_label_pc_10004398
  %v1_100042bc.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100042bc

dec_label_pc_100043a8:                            ; preds = %dec_label_pc_10004398, %dec_label_pc_100042b4
  %v0_100043a8 = call i32 @function_1000723c()
  %v1_100043a8 = trunc i32 %v0_100043a8 to i16
  store i32 %v0_100043a8, i32* %r3.global-to-local, align 4
  %v0_100043ac = load i32, i32* %r19.global-to-local, align 4
  %v1_100043ac = load i32, i32* %r29.global-to-local, align 4
  %v4_100043ac = icmp eq i32 %v0_100043ac, %v1_100043ac
  %v3_100043b0 = load i32, i32* @r31, align 4
  %v4_100043b0 = add i32 %v3_100043b0, 2
  %v5_100043b0 = inttoptr i32 %v4_100043b0 to i16*
  store i16 %v1_100043a8, i16* %v5_100043b0, align 2
  br i1 %v4_100043ac, label %dec_label_pc_100043b8, label %dec_label_pc_100043a8.dec_label_pc_100042c4_crit_edge

dec_label_pc_100043a8.dec_label_pc_100042c4_crit_edge: ; preds = %dec_label_pc_100043a8
  %v1_100042c4.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100042c4

dec_label_pc_100043b8:                            ; preds = %dec_label_pc_100043a8, %dec_label_pc_100042bc
  %v0_100043b8 = call i32 @function_1000723c()
  store i32 %v0_100043b8, i32* %r3.global-to-local, align 4
  %v0_100043bc = load i32, i32* %r20.global-to-local, align 4
  %v1_100043bc = load i32, i32* %r29.global-to-local, align 4
  %v4_100043bc = icmp eq i32 %v0_100043bc, %v1_100043bc
  %v1_100043c0 = load i32, i32* @r31, align 4
  %v2_100043c0 = add i32 %v1_100043c0, 4
  %v3_100043c0 = inttoptr i32 %v2_100043c0 to i32*
  store i32 %v0_100043b8, i32* %v3_100043c0, align 4
  br i1 %v4_100043bc, label %dec_label_pc_100043c8, label %dec_label_pc_100042cc

dec_label_pc_100043c8:                            ; preds = %dec_label_pc_100043b8, %dec_label_pc_100042c4
  %v0_100043c8 = call i32 @function_1000723c()
  store i32 %v0_100043c8, i32* %r3.global-to-local, align 4
  %v1_100043cc = load i32, i32* @r31, align 4
  %v2_100043cc = add i32 %v1_100043cc, 8
  %v3_100043cc = inttoptr i32 %v2_100043cc to i32*
  store i32 %v0_100043c8, i32* %v3_100043cc, align 4
  %v0_100043d0 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_100043d0, label %dec_label_pc_100042d0, label %dec_label_pc_100043d4

dec_label_pc_100043d4:                            ; preds = %dec_label_pc_100042cc, %dec_label_pc_100043c8
  %v0_100043d4 = call i32 @function_1000723c()
  %v1_100043d4 = trunc i32 %v0_100043d4 to i16
  store i32 %v0_100043d4, i32* %r3.global-to-local, align 4
  %v3_100043d8 = load i32, i32* @r31, align 4
  %v4_100043d8 = add i32 %v3_100043d8, 18
  %v5_100043d8 = inttoptr i32 %v4_100043d8 to i16*
  store i16 %v1_100043d4, i16* %v5_100043d8, align 2
  br label %dec_label_pc_100042d0

dec_label_pc_100043e0:                            ; preds = %dec_label_pc_100040bc
  %v0_100043e0 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_100043e0, i32* %r3.global-to-local, align 4
  store i32 268452840, i32* @lr, align 4
  %v0_100043e4 = call i32 @function_1000a98c()
  store i32 %v0_100043e4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100043e8

dec_label_pc_100043e8:                            ; preds = %dec_label_pc_10003ea4, %dec_label_pc_100043e0
  store i32 %v0_10003ebc, i32* %r0.global-to-local, align 4
  %v1_100043fc = call %0 @__asm_mtcrf(i32 56, i32 %v0_10003eac)
  store i32 %v0_10003efc, i32* %r28.global-to-local, align 4
  store i32 %v0_10003f04, i32* %r29.global-to-local, align 4
  store i32 %v0_10003f10, i32* %r31.global-to-local, align 4
  %v0_10004444 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10004444

; uselistorder directives
  uselistorder i32 %v0_100043d4, { 1, 0 }
  uselistorder i32 %v0_100043a8, { 1, 0 }
  uselistorder i32 %v0_10004398, { 1, 0 }
  uselistorder i32 %v0_10004388, { 1, 0 }
  uselistorder i32 %v1_10004380, { 1, 0 }
  uselistorder i1 %v1_10004340, { 1, 0 }
  uselistorder i1 %v0_10004340, { 1, 0 }
  uselistorder i32 %v1_10004330, { 0, 2, 3, 1 }
  uselistorder i32 %v4_100042f8, { 1, 0 }
  uselistorder i32 %v1_1000427c, { 1, 0 }
  uselistorder i32 %v1_1000413c, { 1, 0 }
  uselistorder i32 %v1_10004134, { 1, 0 }
  uselistorder i32 %v1_1000411c, { 1, 0 }
  uselistorder i32 %v1_10004118, { 1, 0 }
  uselistorder i32 %v1_10004114, { 1, 0 }
  uselistorder i32 %v1_10004110, { 1, 0 }
  uselistorder i32 %v1_1000410c, { 1, 0 }
  uselistorder i32 %v1_10004108, { 1, 0 }
  uselistorder i32 %v1_100040f8, { 1, 0 }
  uselistorder i8 %v5_10003f74, { 1, 0 }
  uselistorder i8 %v5_10003f3c, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 25, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 0, 1 }
  uselistorder i32* %r29.global-to-local, { 0, 10, 9, 11, 8, 12, 7, 13, 1, 2, 4, 3, 5, 6, 14, 15 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 21, 22, 23, 24, 26, 27, 28, 29, 30 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder i32 42, { 2, 0, 3, 1, 4 }
  uselistorder i8 4, { 3, 4, 0, 1, 2 }
  uselistorder i32 46, { 2, 0, 3, 1, 4 }
  uselistorder label %dec_label_pc_100043e8, { 1, 0 }
  uselistorder label %dec_label_pc_100043d4, { 1, 0 }
  uselistorder label %dec_label_pc_100042d0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10004268, { 1, 0 }
  uselistorder label %dec_label_pc_10004264, { 1, 0 }
  uselistorder label %dec_label_pc_10004188, { 1, 0 }
}

define i32 @function_10004448(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10004448:
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v0_10004450 = call i32 @__asm_mfcr()
  store i32 %v0_10004450, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r25.global-to-local, align 4
  %v0_1000447c = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10004484 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 268453032, i32* @lr, align 4
  %v2_100044a4 = call i32 @function_1000bae4(i32 4, i32 4)
  store i32 %v2_100044a4, i32* %r27.global-to-local, align 4
  %v0_100044b0 = load i32, i32* @r30, align 4
  store i32 %v0_100044b0, i32* %r3.global-to-local, align 4
  store i32 268453048, i32* @lr, align 4
  %v2_100044b4 = call i32 @function_1000bae4(i32 %v0_100044b0, i32 4)
  %v0_100044bc = load i32, i32* @r28, align 4
  store i32 %v2_100044b4, i32* %r26.global-to-local, align 4
  %v0_100044cc = load i32, i32* @r29, align 4
  store i32 %v0_100044cc, i32* %r3.global-to-local, align 4
  store i32 268453076, i32* @lr, align 4
  %v4_100044d0 = inttoptr i32 %v0_100044bc to i32*
  %v5_100044d0 = call i32 @function_1000235c(i32 %v0_100044cc, i32* %v4_100044d0, i32 7, i32 65535)
  %v0_100044dc = load i32, i32* @r28, align 4
  %v1_100044e4 = urem i32 %v5_100044d0, 65536
  store i32 %v1_100044e4, i32* %r21.global-to-local, align 4
  %v0_100044e8 = load i32, i32* @r29, align 4
  store i32 %v0_100044e8, i32* %r3.global-to-local, align 4
  store i32 268453104, i32* @lr, align 4
  %v4_100044ec = inttoptr i32 %v0_100044dc to i32*
  %v5_100044ec = call i32 @function_1000235c(i32 %v0_100044e8, i32* %v4_100044ec, i32 6, i32 65535)
  %v0_100044f0 = load i32, i32* @r28, align 4
  %v1_100044f4 = urem i32 %v5_100044ec, 65536
  store i32 %v1_100044f4, i32* %r22.global-to-local, align 4
  %v0_10004500 = load i32, i32* @r29, align 4
  store i32 %v0_10004500, i32* %r3.global-to-local, align 4
  store i32 268453128, i32* @lr, align 4
  %v4_10004504 = inttoptr i32 %v0_100044f0 to i32*
  %v5_10004504 = call i32 @function_1000235c(i32 %v0_10004500, i32* %v4_10004504, i32 0, i32 512)
  %v0_10004508 = load i32, i32* @r28, align 4
  %v1_1000450c = urem i32 %v5_10004504, 65536
  store i32 %v1_1000450c, i32* @r31, align 4
  %v0_10004514 = load i32, i32* @r29, align 4
  store i32 %v0_10004514, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10004520.78 to i32), i32* @lr, align 4
  %v4_1000451c = inttoptr i32 %v0_10004508 to i32*
  %v5_1000451c = call i32 @function_1000235c(i32 %v0_10004514, i32* %v4_1000451c, i32 1, i32 1)
  store i32 %v5_1000451c, i32* %r3.global-to-local, align 4
  %v0_1000452c = load i32, i32* %r22.global-to-local, align 4
  %v4_1000452c = icmp eq i32 %v0_1000452c, 65535
  %v1_10004534 = urem i32 %v5_1000451c, 256
  store i32 %v1_10004534, i32* %r23.global-to-local, align 4
  store i32 0, i32* %stack_var_-72, align 4
  br i1 %v4_1000452c, label %dec_label_pc_10004730, label %dec_label_pc_10004548

dec_label_pc_10004548:                            ; preds = %dec_label_pc_10004448, %dec_label_pc_10004730
  %v0_10004548 = load i32, i32* @r30, align 4
  %v1_10004548 = icmp slt i32 %v0_10004548, 0
  %v3_10004548 = icmp eq i32 %v0_10004548, 0
  store i1 %v1_10004548, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10004548, i1* %cr4_eq.global-to-local, align 1
  %tmp38 = icmp slt i32 %v0_10004548, 1
  br i1 %tmp38, label %dec_label_pc_10004608, label %dec_label_pc_10004550

dec_label_pc_10004550:                            ; preds = %dec_label_pc_10004548
  %v0_10004554 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10004554, i32* @r28, align 4
  store i32 0, i32* %r24.global-to-local, align 4
  %v0_10004560 = load i32, i32* %r21.global-to-local, align 4
  %v4_10004560 = icmp eq i32 %v0_10004560, 65535
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 2, i32* %r20.global-to-local, align 4
  %v2_100046b0 = ptrtoint i32* %stack_var_-72 to i32
  br i1 %v4_10004560, label %dec_label_pc_10004680, label %dec_label_pc_10004574

dec_label_pc_10004574:                            ; preds = %dec_label_pc_10004550, %dec_label_pc_100045e8
  %v0_10004580 = phi i32 [ %v0_100045fc, %dec_label_pc_100045e8 ], [ 0, %dec_label_pc_10004550 ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v1_10004580 = add i32 %v0_10004580, 1
  store i32 %v1_10004580, i32* %r24.global-to-local, align 4
  store i32 268453256, i32* @lr, align 4
  %v2_10004584 = call i32 @function_1000bae4(i32 65535, i32 1)
  %v0_10004588 = load i32, i32* %r21.global-to-local, align 4
  %v1_10004588 = trunc i32 %v0_10004588 to i16
  %v2_10004588 = load i32, i32* @r28, align 4
  %v3_10004588 = add i32 %v2_10004588, 2
  %v4_10004588 = inttoptr i32 %v3_10004588 to i16*
  store i16 %v1_10004588, i16* %v4_10004588, align 2
  %v1_1000458c = load i32, i32* %r25.global-to-local, align 4
  %v2_1000458c = load i32, i32* %r27.global-to-local, align 4
  %v3_1000458c = add i32 %v2_1000458c, %v1_1000458c
  %v4_1000458c = inttoptr i32 %v3_1000458c to i32*
  store i32 %v2_10004584, i32* %v4_1000458c, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268453280, i32* @lr, align 4
  %v3_1000459c = call i32 @function_1000b758(i32 2, i32 2, i32 17)
  store i32 %v3_1000459c, i32* %r3.global-to-local, align 4
  %v3_100045a4 = icmp eq i32 %v3_1000459c, -1
  %v1_100045ac = load i32, i32* %r25.global-to-local, align 4
  %v2_100045ac = load i32, i32* %r26.global-to-local, align 4
  %v3_100045ac = add i32 %v2_100045ac, %v1_100045ac
  %v4_100045ac = inttoptr i32 %v3_100045ac to i32*
  store i32 %v3_1000459c, i32* %v4_100045ac, align 4
  br i1 %v3_100045a4, label %dec_label_pc_100046e4, label %dec_label_pc_100045b4

dec_label_pc_100045b4:                            ; preds = %dec_label_pc_10004574
  %v0_100045b4 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_100045b4, i32* %stack_var_-72, align 4
  store i32 268453316, i32* @lr, align 4
  %v0_100045c0 = load i32, i32* %r3.global-to-local, align 4
  %v3_100045c0 = call i32 @function_1000b524(i32 %v0_100045c0, i32 %v2_100046b0, i32 16)
  store i32 %v3_100045c0, i32* %r3.global-to-local, align 4
  %v0_100045c4 = load i32, i32* @r28, align 4
  %v1_100045c4 = add i32 %v0_100045c4, 20
  %v2_100045c4 = inttoptr i32 %v1_100045c4 to i8*
  %v3_100045c4 = load i8, i8* %v2_100045c4, align 1
  %v2_100045c8 = icmp ugt i8 %v3_100045c4, 31
  br i1 %v2_100045c8, label %dec_label_pc_100045e8, label %dec_label_pc_100045d0

dec_label_pc_100045d0:                            ; preds = %dec_label_pc_100045b4
  %v1_100045d0 = add i32 %v0_100045c4, 16
  %v2_100045d0 = inttoptr i32 %v1_100045d0 to i32*
  %v3_100045d0 = load i32, i32* %v2_100045d0, align 4
  store i32 %v3_100045d0, i32* %r29.global-to-local, align 4
  %v0_100045d4 = call i32 @function_1000723c()
  store i32 %v0_100045d4, i32* %r3.global-to-local, align 4
  %v0_100045d8 = load i32, i32* @r28, align 4
  %v1_100045d8 = add i32 %v0_100045d8, 20
  %v2_100045d8 = inttoptr i32 %v1_100045d8 to i8*
  %v3_100045d8 = load i8, i8* %v2_100045d8, align 1
  %tmp = urem i8 %v3_100045d8, 64
  %v2_100045dc = zext i8 %tmp to i32
  %v3_100045dc = lshr i32 %v0_100045d4, %v2_100045dc
  %v0_100045e0 = load i32, i32* %r29.global-to-local, align 4
  %v2_100045e0 = add i32 %v3_100045dc, %v0_100045e0
  store i32 %v2_100045e0, i32* %r3.global-to-local, align 4
  %v2_100045e4 = add i32 %v0_100045d8, 4
  %v3_100045e4 = inttoptr i32 %v2_100045e4 to i32*
  store i32 %v2_100045e0, i32* %v3_100045e4, align 4
  br label %dec_label_pc_100045e8

dec_label_pc_100045e8:                            ; preds = %dec_label_pc_100045b4, %dec_label_pc_100045d0
  %v0_100045e8 = load i32, i32* %r25.global-to-local, align 4
  %v1_100045e8 = load i32, i32* %r26.global-to-local, align 4
  %v2_100045e8 = add i32 %v1_100045e8, %v0_100045e8
  %v3_100045e8 = inttoptr i32 %v2_100045e8 to i32*
  %v4_100045e8 = load i32, i32* %v3_100045e8, align 4
  store i32 %v4_100045e8, i32* @r3, align 4
  %v1_100045f4 = add i32 %v0_100045e8, 4
  store i32 %v1_100045f4, i32* %r25.global-to-local, align 4
  store i32 268453372, i32* @lr, align 4
  %v0_100045f8 = call i32 @function_1000b558()
  store i32 %v0_100045f8, i32* %r3.global-to-local, align 4
  %v0_100045fc = load i32, i32* %r24.global-to-local, align 4
  %v1_100045fc = load i32, i32* @r30, align 4
  %v4_100045fc = icmp eq i32 %v0_100045fc, %v1_100045fc
  %v0_10004600 = load i32, i32* @r28, align 4
  %v1_10004600 = add i32 %v0_10004600, 24
  store i32 %v1_10004600, i32* @r28, align 4
  br i1 %v4_100045fc, label %dec_label_pc_10004608, label %dec_label_pc_10004574

dec_label_pc_10004608:                            ; preds = %dec_label_pc_100045e8, %dec_label_pc_10004660, %dec_label_pc_10004548
  %v0_10004608 = load i32, i32* %r23.global-to-local, align 4
  %v3_10004608 = icmp eq i32 %v0_10004608, 0
  store i1 %v3_10004608, i1* %cr3_eq.global-to-local, align 1
  %v0_1000460c.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_1000460c.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_1000460c.outer

dec_label_pc_1000460c.outer:                      ; preds = %dec_label_pc_10004640, %dec_label_pc_10004778, %dec_label_pc_10004608
  %v1_1000460c.ph39 = phi i1 [ %v1_1000460c.pre, %dec_label_pc_10004608 ], [ %v1_10004778, %dec_label_pc_10004778 ], [ %v1_10004640, %dec_label_pc_10004640 ]
  %v0_1000460c.ph40 = phi i1 [ %v0_1000460c.pre, %dec_label_pc_10004608 ], [ %v0_10004778, %dec_label_pc_10004778 ], [ %v0_10004640, %dec_label_pc_10004640 ]
  %v2_1000460c = or i1 %v1_1000460c.ph39, %v0_1000460c.ph40
  br label %dec_label_pc_1000460c

dec_label_pc_1000460c:                            ; preds = %dec_label_pc_1000460c.outer, %dec_label_pc_1000460c
  br i1 %v2_1000460c, label %dec_label_pc_1000460c, label %dec_label_pc_10004610

dec_label_pc_10004610:                            ; preds = %dec_label_pc_10004778, %dec_label_pc_10004640, %dec_label_pc_1000460c
  %v0_10004610 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10004610, label %dec_label_pc_10004614, label %dec_label_pc_1000473c

dec_label_pc_10004614:                            ; preds = %dec_label_pc_10004610
  store i32 0, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000461c

dec_label_pc_1000461c:                            ; preds = %dec_label_pc_1000461c.dec_label_pc_1000461c_crit_edge, %dec_label_pc_10004614
  %v0_10004620 = phi i32 [ %v0_10004638, %dec_label_pc_1000461c.dec_label_pc_1000461c_crit_edge ], [ 0, %dec_label_pc_10004614 ]
  %v0_10004630 = phi i32 [ %v0_1000461c.pre, %dec_label_pc_1000461c.dec_label_pc_1000461c_crit_edge ], [ 0, %dec_label_pc_10004614 ]
  %v1_1000461c = load i32, i32* %r26.global-to-local, align 4
  %v2_1000461c = add i32 %v1_1000461c, %v0_10004630
  %v3_1000461c = inttoptr i32 %v2_1000461c to i32*
  %v4_1000461c = load i32, i32* %v3_1000461c, align 4
  store i32 %v4_1000461c, i32* %r3.global-to-local, align 4
  %v1_10004620 = add i32 %v0_10004620, 1
  store i32 %v1_10004620, i32* %r28.global-to-local, align 4
  %v1_10004624 = load i32, i32* %r27.global-to-local, align 4
  %v2_10004624 = add i32 %v1_10004624, %v0_10004630
  %v3_10004624 = inttoptr i32 %v2_10004624 to i32*
  %v4_10004624 = load i32, i32* %v3_10004624, align 4
  %v0_10004628 = load i32, i32* @r31, align 4
  %v1_10004630 = add i32 %v0_10004630, 4
  store i32 %v1_10004630, i32* %r29.global-to-local, align 4
  store i32 268453432, i32* @lr, align 4
  %v4_10004634 = call i32 @function_1000b6a4(i32 %v4_1000461c, i32 %v4_10004624, i32 %v0_10004628, i32 16384)
  store i32 %v4_10004634, i32* %r3.global-to-local, align 4
  %v0_10004638 = load i32, i32* %r28.global-to-local, align 4
  %v1_10004638 = load i32, i32* @r30, align 4
  %v4_10004638 = icmp eq i32 %v0_10004638, %v1_10004638
  br i1 %v4_10004638, label %dec_label_pc_10004640, label %dec_label_pc_1000461c.dec_label_pc_1000461c_crit_edge

dec_label_pc_1000461c.dec_label_pc_1000461c_crit_edge: ; preds = %dec_label_pc_1000461c
  %v0_1000461c.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000461c

dec_label_pc_10004640:                            ; preds = %dec_label_pc_1000461c
  %v0_10004640 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10004640 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10004640 = or i1 %v0_10004640, %v1_10004640
  br i1 %v2_10004640, label %dec_label_pc_1000460c.outer, label %dec_label_pc_10004610

dec_label_pc_10004660:                            ; preds = %dec_label_pc_100046c4, %dec_label_pc_100046e0
  %v0_10004660 = load i32, i32* %r25.global-to-local, align 4
  %v1_10004660 = load i32, i32* %r26.global-to-local, align 4
  %v2_10004660 = add i32 %v1_10004660, %v0_10004660
  %v3_10004660 = inttoptr i32 %v2_10004660 to i32*
  %v4_10004660 = load i32, i32* %v3_10004660, align 4
  store i32 %v4_10004660, i32* @r3, align 4
  %v1_1000466c = add i32 %v0_10004660, 4
  store i32 %v1_1000466c, i32* %r25.global-to-local, align 4
  store i32 268453492, i32* @lr, align 4
  %v0_10004670 = call i32 @function_1000b558()
  store i32 %v0_10004670, i32* %r3.global-to-local, align 4
  %v0_10004674 = load i32, i32* %r24.global-to-local, align 4
  %v1_10004674 = load i32, i32* @r30, align 4
  %v4_10004674 = icmp eq i32 %v0_10004674, %v1_10004674
  %v0_10004678 = load i32, i32* @r28, align 4
  %v1_10004678 = add i32 %v0_10004678, 24
  store i32 %v1_10004678, i32* @r28, align 4
  br i1 %v4_10004674, label %dec_label_pc_10004608, label %dec_label_pc_10004680

dec_label_pc_10004680:                            ; preds = %dec_label_pc_10004550, %dec_label_pc_10004660
  %v0_1000468c = phi i32 [ %v0_10004674, %dec_label_pc_10004660 ], [ 0, %dec_label_pc_10004550 ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v1_1000468c = add i32 %v0_1000468c, 1
  store i32 %v1_1000468c, i32* %r24.global-to-local, align 4
  store i32 268453524, i32* @lr, align 4
  %v2_10004690 = call i32 @function_1000bae4(i32 65535, i32 1)
  store i32 %v2_10004690, i32* %r3.global-to-local, align 4
  %v1_10004694 = load i32, i32* %r25.global-to-local, align 4
  %v2_10004694 = load i32, i32* %r27.global-to-local, align 4
  %v3_10004694 = add i32 %v2_10004694, %v1_10004694
  %v4_10004694 = inttoptr i32 %v3_10004694 to i32*
  store i32 %v2_10004690, i32* %v4_10004694, align 4
  %v0_10004698 = call i32 @function_1000723c()
  %v1_10004698 = trunc i32 %v0_10004698 to i16
  %v3_1000469c = load i32, i32* @r28, align 4
  %v4_1000469c = add i32 %v3_1000469c, 2
  %v5_1000469c = inttoptr i32 %v4_1000469c to i16*
  store i16 %v1_10004698, i16* %v5_1000469c, align 2
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268453552, i32* @lr, align 4
  %v3_100046ac = call i32 @function_1000b758(i32 2, i32 2, i32 17)
  store i32 %v3_100046ac, i32* %r3.global-to-local, align 4
  %v3_100046b4 = icmp eq i32 %v3_100046ac, -1
  %v1_100046bc = load i32, i32* %r25.global-to-local, align 4
  %v2_100046bc = load i32, i32* %r26.global-to-local, align 4
  %v3_100046bc = add i32 %v2_100046bc, %v1_100046bc
  %v4_100046bc = inttoptr i32 %v3_100046bc to i32*
  store i32 %v3_100046ac, i32* %v4_100046bc, align 4
  br i1 %v3_100046b4, label %dec_label_pc_100046e4, label %dec_label_pc_100046c4

dec_label_pc_100046c4:                            ; preds = %dec_label_pc_10004680
  %v0_100046c4 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_100046c4, i32* %stack_var_-72, align 4
  store i32 268453588, i32* @lr, align 4
  %v0_100046d0 = load i32, i32* %r3.global-to-local, align 4
  %v3_100046d0 = call i32 @function_1000b524(i32 %v0_100046d0, i32 %v2_100046b0, i32 16)
  store i32 %v3_100046d0, i32* %r3.global-to-local, align 4
  %v0_100046d4 = load i32, i32* @r28, align 4
  %v1_100046d4 = add i32 %v0_100046d4, 20
  %v2_100046d4 = inttoptr i32 %v1_100046d4 to i8*
  %v3_100046d4 = load i8, i8* %v2_100046d4, align 1
  %v2_100046d8 = icmp ugt i8 %v3_100046d4, 31
  br i1 %v2_100046d8, label %dec_label_pc_10004660, label %dec_label_pc_100046e0

dec_label_pc_100046e0:                            ; preds = %dec_label_pc_100046c4
  %v1_10004648 = add i32 %v0_100046d4, 16
  %v2_10004648 = inttoptr i32 %v1_10004648 to i32*
  %v3_10004648 = load i32, i32* %v2_10004648, align 4
  store i32 %v3_10004648, i32* %r29.global-to-local, align 4
  %v0_1000464c = call i32 @function_1000723c()
  store i32 %v0_1000464c, i32* %r3.global-to-local, align 4
  %v0_10004650 = load i32, i32* @r28, align 4
  %v1_10004650 = add i32 %v0_10004650, 20
  %v2_10004650 = inttoptr i32 %v1_10004650 to i8*
  %v3_10004650 = load i8, i8* %v2_10004650, align 1
  %tmp43 = urem i8 %v3_10004650, 64
  %v2_10004654 = zext i8 %tmp43 to i32
  %v3_10004654 = lshr i32 %v0_1000464c, %v2_10004654
  %v0_10004658 = load i32, i32* %r29.global-to-local, align 4
  %v2_10004658 = add i32 %v3_10004654, %v0_10004658
  store i32 %v2_10004658, i32* %r3.global-to-local, align 4
  %v2_1000465c = add i32 %v0_10004650, 4
  %v3_1000465c = inttoptr i32 %v2_1000465c to i32*
  store i32 %v2_10004658, i32* %v3_1000465c, align 4
  br label %dec_label_pc_10004660

dec_label_pc_100046e4:                            ; preds = %dec_label_pc_10004574, %dec_label_pc_10004680
  %v1_100046f8 = call %0 @__asm_mtcrf(i32 24, i32 %v0_10004450)
  store i32 %v0_1000447c, i32* %r28.global-to-local, align 4
  store i32 %v0_10004484, i32* %r29.global-to-local, align 4
  %v0_1000472c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000472c

dec_label_pc_10004730:                            ; preds = %dec_label_pc_10004448
  %v0_10004730 = call i32 @function_1000723c()
  store i32 %v0_10004730, i32* %r3.global-to-local, align 4
  %v1_10004734 = urem i32 %v0_10004730, 65536
  store i32 %v1_10004734, i32* %r22.global-to-local, align 4
  br label %dec_label_pc_10004548

dec_label_pc_1000473c:                            ; preds = %dec_label_pc_10004610
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10004744

dec_label_pc_10004744:                            ; preds = %dec_label_pc_10004744.dec_label_pc_10004744_crit_edge, %dec_label_pc_1000473c
  %v0_1000474c = phi i32 [ %v0_10004770, %dec_label_pc_10004744.dec_label_pc_10004744_crit_edge ], [ 0, %dec_label_pc_1000473c ]
  %v0_10004744 = phi i32 [ %v0_10004744.pre, %dec_label_pc_10004744.dec_label_pc_10004744_crit_edge ], [ 0, %dec_label_pc_1000473c ]
  %v1_10004744 = load i32, i32* %r27.global-to-local, align 4
  %v2_10004744 = add i32 %v1_10004744, %v0_10004744
  %v3_10004744 = inttoptr i32 %v2_10004744 to i32*
  %v4_10004744 = load i32, i32* %v3_10004744, align 4
  store i32 %v4_10004744, i32* @r29, align 4
  %v0_10004748 = load i32, i32* @r31, align 4
  store i32 %v0_10004748, i32* @r4, align 4
  %v1_1000474c = add i32 %v0_1000474c, 1
  store i32 %v1_1000474c, i32* %r25.global-to-local, align 4
  store i32 %v4_10004744, i32* @r3, align 4
  %v0_10004754 = call i32 @function_10007468()
  store i32 %v0_10004754, i32* %r3.global-to-local, align 4
  %v0_10004758 = load i32, i32* %r28.global-to-local, align 4
  %v1_10004758 = load i32, i32* %r26.global-to-local, align 4
  %v2_10004758 = add i32 %v1_10004758, %v0_10004758
  %v3_10004758 = inttoptr i32 %v2_10004758 to i32*
  %v4_10004758 = load i32, i32* %v3_10004758, align 4
  store i32 %v4_10004758, i32* %r3.global-to-local, align 4
  %v0_1000475c = load i32, i32* @r29, align 4
  %v0_10004760 = load i32, i32* @r31, align 4
  %v1_10004768 = add i32 %v0_10004758, 4
  store i32 %v1_10004768, i32* %r28.global-to-local, align 4
  store i32 268453744, i32* @lr, align 4
  %v4_1000476c = call i32 @function_1000b6a4(i32 %v4_10004758, i32 %v0_1000475c, i32 %v0_10004760, i32 16384)
  store i32 %v4_1000476c, i32* %r3.global-to-local, align 4
  %v0_10004770 = load i32, i32* %r25.global-to-local, align 4
  %v1_10004770 = load i32, i32* @r30, align 4
  %v4_10004770 = icmp eq i32 %v0_10004770, %v1_10004770
  br i1 %v4_10004770, label %dec_label_pc_10004778, label %dec_label_pc_10004744.dec_label_pc_10004744_crit_edge

dec_label_pc_10004744.dec_label_pc_10004744_crit_edge: ; preds = %dec_label_pc_10004744
  %v0_10004744.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10004744

dec_label_pc_10004778:                            ; preds = %dec_label_pc_10004744
  %v0_10004778 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10004778 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10004778 = or i1 %v0_10004778, %v1_10004778
  br i1 %v2_10004778, label %dec_label_pc_1000460c.outer, label %dec_label_pc_10004610

; uselistorder directives
  uselistorder i1 %v1_10004778, { 1, 0 }
  uselistorder i1 %v0_10004778, { 1, 0 }
  uselistorder i32 %v0_10004770, { 1, 0 }
  uselistorder i32 %v0_10004758, { 1, 0 }
  uselistorder i32 %v0_10004660, { 1, 0 }
  uselistorder i1 %v1_10004640, { 1, 0 }
  uselistorder i1 %v0_10004640, { 1, 0 }
  uselistorder i32 %v0_10004638, { 1, 0 }
  uselistorder i32 %v0_10004630, { 2, 0, 1 }
  uselistorder i32 %v0_100045fc, { 1, 0 }
  uselistorder i32 %v0_100045e8, { 1, 0 }
  uselistorder i32 %v2_100046b0, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 0, 1, 3, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 22, 6, 7, 9, 10, 11, 12, 13, 14, 8, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 1, 0 }
  uselistorder i32* %r26.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r25.global-to-local, { 0, 1, 2, 6, 7, 3, 5, 4, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %r24.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r21.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 2, 0, 3 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 2, 0, 3 }
  uselistorder i8 31, { 1, 2, 3, 4, 0, 5, 6, 7 }
  uselistorder label %dec_label_pc_100046e4, { 1, 0 }
  uselistorder label %dec_label_pc_10004680, { 1, 0 }
  uselistorder label %dec_label_pc_10004660, { 1, 0 }
  uselistorder label %dec_label_pc_1000460c, { 1, 0 }
  uselistorder label %dec_label_pc_1000460c.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10004608, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100045e8, { 1, 0 }
  uselistorder label %dec_label_pc_10004574, { 1, 0 }
  uselistorder label %dec_label_pc_10004548, { 1, 0 }
}

define i32 @function_10004780(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10004780:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_10004784 = load i32, i32* @lr, align 4
  store i32 %v0_10004784, i32* %r0.global-to-local, align 4
  %v0_10004788 = call i32 @__asm_mfcr()
  store i32 %v0_10004788, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r27.global-to-local, align 4
  %v0_10004798 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10004788, i32* %r19.global-to-local, align 4
  %v0_100047cc = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_100047d4 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_100047dc = load i32, i32* @r30, align 4
  %v0_100047e0 = load i32, i32* @r31, align 4
  store i32 268453876, i32* @lr, align 4
  %v2_100047f0 = call i32 @function_1000bae4(i32 4, i32 4)
  store i32 %v2_100047f0, i32* %r20.global-to-local, align 4
  %v0_100047f8 = load i32, i32* @r28, align 4
  %v0_10004804 = load i32, i32* @r29, align 4
  store i32 %v0_10004804, i32* %r3.global-to-local, align 4
  store i32 268453900, i32* @lr, align 4
  %v4_10004808 = inttoptr i32 %v0_100047f8 to i32*
  %v5_10004808 = call i32 @function_1000235c(i32 %v0_10004804, i32* %v4_10004808, i32 2, i32 0)
  %v0_10004818 = load i32, i32* @r28, align 4
  %v1_1000481c = urem i32 %v5_10004808, 256
  store i32 %v1_1000481c, i32* %r15.global-to-local, align 4
  %v0_10004820 = load i32, i32* @r29, align 4
  store i32 %v0_10004820, i32* %r3.global-to-local, align 4
  store i32 268453928, i32* @lr, align 4
  %v4_10004824 = inttoptr i32 %v0_10004818 to i32*
  %v5_10004824 = call i32 @function_1000235c(i32 %v0_10004820, i32* %v4_10004824, i32 3, i32 65535)
  %v0_10004828 = load i32, i32* @r28, align 4
  store i32 %v5_10004824, i32* %r23.global-to-local, align 4
  %v0_10004838 = load i32, i32* @r29, align 4
  store i32 %v0_10004838, i32* %r3.global-to-local, align 4
  store i32 268453952, i32* @lr, align 4
  %v4_1000483c = inttoptr i32 %v0_10004828 to i32*
  %v5_1000483c = call i32 @function_1000235c(i32 %v0_10004838, i32* %v4_1000483c, i32 4, i32 64)
  %v0_10004840 = load i32, i32* @r28, align 4
  %v1_1000484c = urem i32 %v5_1000483c, 256
  store i32 %v1_1000484c, i32* %r16.global-to-local, align 4
  %v0_10004850 = load i32, i32* @r29, align 4
  store i32 %v0_10004850, i32* %r3.global-to-local, align 4
  store i32 268453976, i32* @lr, align 4
  %v4_10004854 = inttoptr i32 %v0_10004840 to i32*
  %v5_10004854 = call i32 @function_1000235c(i32 %v0_10004850, i32* %v4_10004854, i32 5, i32 0)
  %v0_10004864 = load i32, i32* @r28, align 4
  %v1_10004868 = urem i32 %v5_10004854, 256
  store i32 %v1_10004868, i32* @r31, align 4
  %v0_1000486c = load i32, i32* @r29, align 4
  store i32 %v0_1000486c, i32* %r3.global-to-local, align 4
  store i32 268454004, i32* @lr, align 4
  %v4_10004870 = inttoptr i32 %v0_10004864 to i32*
  %v5_10004870 = call i32 @function_1000235c(i32 %v0_1000486c, i32* %v4_10004870, i32 6, i32 65535)
  %v0_10004878 = load i32, i32* @r28, align 4
  store i32 %v5_10004870, i32* %r24.global-to-local, align 4
  %v0_10004888 = load i32, i32* @r29, align 4
  store i32 %v0_10004888, i32* %r3.global-to-local, align 4
  store i32 268454032, i32* @lr, align 4
  %v4_1000488c = inttoptr i32 %v0_10004878 to i32*
  %v5_1000488c = call i32 @function_1000235c(i32 %v0_10004888, i32* %v4_1000488c, i32 7, i32 65535)
  %v0_10004890 = load i32, i32* @r28, align 4
  store i32 %v5_1000488c, i32* %r25.global-to-local, align 4
  %v0_100048a0 = load i32, i32* @r29, align 4
  store i32 %v0_100048a0, i32* %r3.global-to-local, align 4
  store i32 268454056, i32* @lr, align 4
  %v4_100048a4 = inttoptr i32 %v0_10004890 to i32*
  %v5_100048a4 = call i32 @function_1000235c(i32 %v0_100048a0, i32* %v4_100048a4, i32 0, i32 512)
  %v0_100048a8 = load i32, i32* @r28, align 4
  store i32 %v5_100048a4, i32* %r26.global-to-local, align 4
  %v0_100048b8 = load i32, i32* @r29, align 4
  store i32 %v0_100048b8, i32* %r3.global-to-local, align 4
  store i32 268454080, i32* @lr, align 4
  %v4_100048bc = inttoptr i32 %v0_100048a8 to i32*
  %v5_100048bc = call i32 @function_1000235c(i32 %v0_100048b8, i32* %v4_100048bc, i32 1, i32 1)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_100048c4 = load i32, i32* @global_var_1001e180.71, align 4
  %v0_100048c8 = load i32, i32* @r28, align 4
  %v1_100048d0 = urem i32 %v5_100048bc, 256
  store i32 %v1_100048d0, i32* %r17.global-to-local, align 4
  %v0_100048d4 = load i32, i32* @r29, align 4
  store i32 %v0_100048d4, i32* %r3.global-to-local, align 4
  store i32 268454108, i32* @lr, align 4
  %v4_100048d8 = inttoptr i32 %v0_100048c8 to i32*
  %v5_100048d8 = call i32 @function_1000235c(i32 %v0_100048d4, i32* %v4_100048d8, i32 25, i32 %v3_100048c4)
  store i32 %v5_100048d8, i32* %r30.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268454128, i32* @lr, align 4
  %v3_100048ec = call i32 @function_1000b758(i32 2, i32 3, i32 17)
  store i32 %v3_100048ec, i32* %r3.global-to-local, align 4
  %v3_100048f0 = icmp eq i32 %v3_100048ec, -1
  store i32 %v3_100048ec, i32* %r21.global-to-local, align 4
  br i1 %v3_100048f0, label %dec_label_pc_10004b4c, label %dec_label_pc_100048fc

dec_label_pc_100048fc:                            ; preds = %dec_label_pc_10004780
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10004908 = ptrtoint i32* %stack_var_-104 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-104, align 4
  store i32 268454168, i32* @lr, align 4
  %v5_10004914 = call i32 @function_1000b71c(i32 0, i32 3, i32 %v2_10004908, i32 4, i32 4)
  store i32 %v5_10004914, i32* %r3.global-to-local, align 4
  %v3_10004918 = icmp eq i32 %v5_10004914, -1
  br i1 %v3_10004918, label %dec_label_pc_10004b44, label %dec_label_pc_10004920

dec_label_pc_10004920:                            ; preds = %dec_label_pc_100048fc
  %v0_10004920 = load i32, i32* %r26.global-to-local, align 4
  %v1_10004920 = urem i32 %v0_10004920, 65536
  store i32 %v1_10004920, i32* %r18.global-to-local, align 4
  %v0_10004924 = load i32, i32* %r23.global-to-local, align 4
  %v1_10004924 = urem i32 %v0_10004924, 65536
  store i32 %v1_10004924, i32* %r22.global-to-local, align 4
  %v0_1000492c = load i32, i32* %r24.global-to-local, align 4
  %v1_1000492c = urem i32 %v0_1000492c, 65536
  store i32 %v1_1000492c, i32* %r23.global-to-local, align 4
  %v0_10004930 = load i32, i32* %r25.global-to-local, align 4
  %v1_10004930 = urem i32 %v0_10004930, 65536
  store i32 %v1_10004930, i32* %r24.global-to-local, align 4
  %tmp30 = icmp ult i32 %v1_10004920, 1461
  br i1 %tmp30, label %dec_label_pc_1000493c, label %dec_label_pc_10004938

dec_label_pc_10004938:                            ; preds = %dec_label_pc_10004920
  store i32 1460, i32* %r18.global-to-local, align 4
  br label %dec_label_pc_1000493c

dec_label_pc_1000493c:                            ; preds = %dec_label_pc_10004920, %dec_label_pc_10004938
  %v0_10004c4c = phi i32 [ %v1_10004920, %dec_label_pc_10004920 ], [ 1460, %dec_label_pc_10004938 ]
  %v0_1000493c = load i32, i32* %r19.global-to-local, align 4
  %v1_1000493c = icmp slt i32 %v0_1000493c, 0
  %v3_1000493c = icmp eq i32 %v0_1000493c, 0
  store i1 %v1_1000493c, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_1000493c, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  %tmp31 = icmp slt i32 %v0_1000493c, 1
  br i1 %tmp31, label %dec_label_pc_10004c44, label %dec_label_pc_1000494c

dec_label_pc_1000494c:                            ; preds = %dec_label_pc_1000493c
  %v0_1000494c = load i32, i32* @r31, align 4
  %v3_1000494c = icmp eq i32 %v0_1000494c, 0
  %v1_10004950 = add nuw nsw i32 %v0_10004c4c, 28
  store i32 %v1_10004950, i32* %r25.global-to-local, align 4
  %v1_10004954 = add nuw nsw i32 %v0_10004c4c, 8
  store i32 %v1_10004954, i32* %r26.global-to-local, align 4
  %v1_10004958 = urem i32 %v1_10004950, 65536
  store i32 %v1_10004958, i32* @r28, align 4
  %v1_1000495c = urem i32 %v1_10004954, 65536
  store i32 %v1_1000495c, i32* @r29, align 4
  br i1 %v3_1000494c, label %dec_label_pc_10004964, label %dec_label_pc_10004bac

dec_label_pc_10004964:                            ; preds = %dec_label_pc_1000494c
  br label %dec_label_pc_10004968

dec_label_pc_10004968:                            ; preds = %dec_label_pc_10004968, %dec_label_pc_10004964
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268454260, i32* @lr, align 4
  %v2_10004970 = call i32 @function_1000bae4(i32 1510, i32 1)
  store i32 %v2_10004970, i32* %r3.global-to-local, align 4
  %v3_10004974 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10004974, i32* %r9.global-to-local, align 4
  %v0_10004978 = load i32, i32* @r31, align 4
  %v1_10004978 = mul i32 %v0_10004978, 4
  store i32 %v1_10004978, i32* %r0.global-to-local, align 4
  %v1_1000497c = load i32, i32* %r20.global-to-local, align 4
  %v3_1000497c = add i32 %v1_1000497c, %v1_10004978
  %v4_1000497c = inttoptr i32 %v3_1000497c to i32*
  store i32 %v2_10004970, i32* %v4_1000497c, align 4
  %v0_10004980 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004980 = mul i32 %v0_10004980, 4
  store i32 %v1_10004980, i32* %r9.global-to-local, align 4
  %v1_10004984 = load i32, i32* %r20.global-to-local, align 4
  %v2_10004984 = add i32 %v1_10004984, %v1_10004980
  %v3_10004984 = inttoptr i32 %v2_10004984 to i32*
  %v4_10004984 = load i32, i32* %v3_10004984, align 4
  store i32 %v4_10004984, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_1000498c = inttoptr i32 %v4_10004984 to i32*
  %v2_1000498c = load i32, i32* %v1_1000498c, align 4
  store i32 %v2_1000498c, i32* %r0.global-to-local, align 4
  %v1_10004990 = add i32 %v4_10004984, 20
  store i32 %v1_10004990, i32* %r10.global-to-local, align 4
  %v0_10004994 = load i32, i32* %r16.global-to-local, align 4
  %v1_10004994 = trunc i32 %v0_10004994 to i8
  %v3_10004994 = add i32 %v4_10004984, 8
  %v4_10004994 = inttoptr i32 %v3_10004994 to i8*
  store i8 %v1_10004994, i8* %v4_10004994, align 1
  %v1_10004998 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10004998, i32* %r0.global-to-local, align 4
  %v0_1000499c = load i32, i32* @r30, align 4
  %v1_1000499c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000499c = add i32 %v1_1000499c, 12
  %v3_1000499c = inttoptr i32 %v2_1000499c to i32*
  store i32 %v0_1000499c, i32* %v3_1000499c, align 4
  %v1_100049a0 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_100049a4 = load i32, i32* %r22.global-to-local, align 4
  %v1_100049a4 = trunc i32 %v0_100049a4 to i16
  %v2_100049a4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100049a4 = add i32 %v2_100049a4, 4
  %v4_100049a4 = inttoptr i32 %v3_100049a4 to i16*
  store i16 %v1_100049a4, i16* %v4_100049a4, align 2
  %v1_100049a8 = load i32, i32* %r11.global-to-local, align 4
  %v2_100049a8 = inttoptr i32 %v1_100049a8 to i32*
  store i32 %v1_100049a0, i32* %v2_100049a8, align 4
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_100049b0 = load i32, i32* %r11.global-to-local, align 4
  %v3_100049b0 = add i32 %v2_100049b0, 9
  %v4_100049b0 = inttoptr i32 %v3_100049b0 to i8*
  store i8 17, i8* %v4_100049b0, align 1
  %v0_100049b4 = load i32, i32* %r15.global-to-local, align 4
  %v1_100049b4 = trunc i32 %v0_100049b4 to i8
  %v2_100049b4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100049b4 = add i32 %v2_100049b4, 1
  %v4_100049b4 = inttoptr i32 %v3_100049b4 to i8*
  store i8 %v1_100049b4, i8* %v4_100049b4, align 1
  %v0_100049b8 = load i32, i32* @r28, align 4
  %v1_100049b8 = trunc i32 %v0_100049b8 to i16
  %v2_100049b8 = load i32, i32* %r11.global-to-local, align 4
  %v3_100049b8 = add i32 %v2_100049b8, 2
  %v4_100049b8 = inttoptr i32 %v3_100049b8 to i16*
  store i16 %v1_100049b8, i16* %v4_100049b8, align 2
  %v3_100049bc = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_100049bc, i32* %r9.global-to-local, align 4
  %v0_100049c0 = load i32, i32* %r23.global-to-local, align 4
  %v1_100049c0 = trunc i32 %v0_100049c0 to i16
  %v2_100049c0 = load i32, i32* %r11.global-to-local, align 4
  %v3_100049c0 = add i32 %v2_100049c0, 20
  %v4_100049c0 = inttoptr i32 %v3_100049c0 to i16*
  store i16 %v1_100049c0, i16* %v4_100049c0, align 2
  %v0_100049c4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100049c4 = add i32 %v0_100049c4, 1
  store i32 %v1_100049c4, i32* %r31.global-to-local, align 4
  %v1_100049c8 = mul i32 %v0_100049c4, 24
  store i32 %v1_100049c8, i32* %r9.global-to-local, align 4
  %v1_100049cc = load i32, i32* %r19.global-to-local, align 4
  %v2_100049cc = icmp slt i32 %v1_100049c4, %v1_100049cc
  %v0_100049d0 = load i32, i32* @r29, align 4
  %v1_100049d0 = trunc i32 %v0_100049d0 to i16
  %v2_100049d0 = load i32, i32* %r10.global-to-local, align 4
  %v3_100049d0 = add i32 %v2_100049d0, 4
  %v4_100049d0 = inttoptr i32 %v3_100049d0 to i16*
  store i16 %v1_100049d0, i16* %v4_100049d0, align 2
  %v0_100049d4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100049d4 = load i32, i32* %r27.global-to-local, align 4
  %v2_100049d4 = add i32 %v1_100049d4, %v0_100049d4
  store i32 %v2_100049d4, i32* %r9.global-to-local, align 4
  %v0_100049d8 = load i32, i32* %r24.global-to-local, align 4
  %v1_100049d8 = trunc i32 %v0_100049d8 to i16
  %v2_100049d8 = load i32, i32* %r10.global-to-local, align 4
  %v3_100049d8 = add i32 %v2_100049d8, 2
  %v4_100049d8 = inttoptr i32 %v3_100049d8 to i16*
  store i16 %v1_100049d8, i16* %v4_100049d8, align 2
  %v0_100049dc = load i32, i32* %r9.global-to-local, align 4
  %v1_100049dc = add i32 %v0_100049dc, 16
  %v2_100049dc = inttoptr i32 %v1_100049dc to i32*
  %v3_100049dc = load i32, i32* %v2_100049dc, align 4
  store i32 %v3_100049dc, i32* %r0.global-to-local, align 4
  %v1_100049e0 = load i32, i32* %r11.global-to-local, align 4
  %v2_100049e0 = add i32 %v1_100049e0, 16
  %v3_100049e0 = inttoptr i32 %v2_100049e0 to i32*
  store i32 %v3_100049dc, i32* %v3_100049e0, align 4
  %v0_100049e4 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_100049e4, i32* %stack_var_-104, align 4
  br i1 %v2_100049cc, label %dec_label_pc_10004968, label %dec_label_pc_100049ec

dec_label_pc_100049ec:                            ; preds = %dec_label_pc_10004bb4, %dec_label_pc_10004968
  %v0_100049ec = load i32, i32* @r30, align 4
  %v3_100049ec = icmp eq i32 %v0_100049ec, -1
  store i1 %v3_100049ec, i1* %cr2_eq.global-to-local, align 1
  %v0_100049f0 = load i32, i32* %r17.global-to-local, align 4
  %v3_100049f0 = icmp eq i32 %v0_100049f0, 0
  store i1 %v3_100049f0, i1* %cr3_eq.global-to-local, align 1
  %v0_100049f4.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100049f4.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_100049f4.preheader

dec_label_pc_100049f4.preheader:                  ; preds = %dec_label_pc_10004ac0, %dec_label_pc_10004c44, %dec_label_pc_100049ec
  %v1_100049f4 = phi i1 [ %v1_1000493c, %dec_label_pc_10004c44 ], [ %v1_100049f4.pre, %dec_label_pc_100049ec ], [ %v1_10004ac0, %dec_label_pc_10004ac0 ]
  %v0_100049f4 = phi i1 [ %v3_1000493c, %dec_label_pc_10004c44 ], [ %v0_100049f4.pre, %dec_label_pc_100049ec ], [ %v0_10004ac0, %dec_label_pc_10004ac0 ]
  %v2_100049f4 = or i1 %v1_100049f4, %v0_100049f4
  br label %dec_label_pc_100049f4

dec_label_pc_100049f4:                            ; preds = %dec_label_pc_100049f4.preheader, %dec_label_pc_100049f4
  br i1 %v2_100049f4, label %dec_label_pc_100049f4, label %dec_label_pc_100049f8

dec_label_pc_100049f8:                            ; preds = %dec_label_pc_100049f4, %dec_label_pc_10004ac0
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  store i32 0, i32* @r30, align 4
  br label %dec_label_pc_10004a08

dec_label_pc_10004a08:                            ; preds = %dec_label_pc_10004a50, %dec_label_pc_100049f8
  %v0_10004a08 = phi i32 [ %v1_10004ab0, %dec_label_pc_10004a50 ], [ 0, %dec_label_pc_100049f8 ]
  %v1_10004a08 = mul i32 %v0_10004a08, 24
  store i32 %v1_10004a08, i32* %r0.global-to-local, align 4
  %v1_10004a0c = mul i32 %v0_10004a08, 4
  store i32 %v1_10004a0c, i32* %r11.global-to-local, align 4
  %v1_10004a10 = load i32, i32* %r20.global-to-local, align 4
  %v2_10004a10 = add i32 %v1_10004a10, %v1_10004a0c
  %v3_10004a10 = inttoptr i32 %v2_10004a10 to i32*
  %v4_10004a10 = load i32, i32* %v3_10004a10, align 4
  store i32 %v4_10004a10, i32* %r28.global-to-local, align 4
  %v1_10004a14 = load i32, i32* %r27.global-to-local, align 4
  %v2_10004a14 = add i32 %v1_10004a14, %v1_10004a08
  store i32 %v2_10004a14, i32* %r10.global-to-local, align 4
  %v1_10004a18 = add i32 %v2_10004a14, 20
  %v2_10004a18 = inttoptr i32 %v1_10004a18 to i8*
  %v3_10004a18 = load i8, i8* %v2_10004a18, align 1
  %v4_10004a18 = zext i8 %v3_10004a18 to i32
  store i32 %v4_10004a18, i32* %r9.global-to-local, align 4
  %v1_10004a1c = add i32 %v4_10004a10, 20
  store i32 %v1_10004a1c, i32* @r31, align 4
  %tmp32 = icmp ult i8 %v3_10004a18, 32
  br i1 %tmp32, label %dec_label_pc_10004ac8, label %dec_label_pc_10004a28

dec_label_pc_10004a28:                            ; preds = %dec_label_pc_10004a08
  %v0_10004a28 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10004a28, label %dec_label_pc_10004af0, label %dec_label_pc_10004a2c

dec_label_pc_10004a2c:                            ; preds = %dec_label_pc_10004ac8, %dec_label_pc_10004a28
  store i32 65535, i32* @r29, align 4
  %v0_10004a34 = load i32, i32* %r22.global-to-local, align 4
  %v4_10004a34 = icmp eq i32 %v0_10004a34, 65535
  br i1 %v4_10004a34, label %dec_label_pc_10004b08, label %dec_label_pc_10004a3c

dec_label_pc_10004a3c:                            ; preds = %dec_label_pc_10004af0, %dec_label_pc_10004a2c
  %v1_10004a3c = phi i32 [ %v1_10004b00, %dec_label_pc_10004af0 ], [ 65535, %dec_label_pc_10004a2c ]
  %v0_10004a3c = load i32, i32* %r23.global-to-local, align 4
  %v4_10004a3c = icmp eq i32 %v0_10004a3c, %v1_10004a3c
  br i1 %v4_10004a3c, label %dec_label_pc_10004b18, label %dec_label_pc_10004a44

dec_label_pc_10004a44:                            ; preds = %dec_label_pc_10004b08.dec_label_pc_10004a44_crit_edge, %dec_label_pc_10004a3c
  %v1_10004a44 = phi i32 [ %v1_10004a44.pre, %dec_label_pc_10004b08.dec_label_pc_10004a44_crit_edge ], [ %v1_10004a3c, %dec_label_pc_10004a3c ]
  %v0_10004a44 = load i32, i32* %r24.global-to-local, align 4
  %v4_10004a44 = icmp eq i32 %v0_10004a44, %v1_10004a44
  br i1 %v4_10004a44, label %dec_label_pc_10004b28, label %dec_label_pc_10004a4c

dec_label_pc_10004a4c:                            ; preds = %dec_label_pc_10004b18, %dec_label_pc_10004a44
  %v0_10004a4c = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10004a4c, label %dec_label_pc_10004a50, label %dec_label_pc_10004b34

dec_label_pc_10004a50:                            ; preds = %dec_label_pc_10004a4c, %dec_label_pc_10004b28, %dec_label_pc_10004b34
  %v0_10004a50 = load i32, i32* @r30, align 4
  %v1_10004a50 = trunc i32 %v0_10004a50 to i16
  %v2_10004a50 = load i32, i32* %r28.global-to-local, align 4
  %v3_10004a50 = add i32 %v2_10004a50, 10
  %v4_10004a50 = inttoptr i32 %v3_10004a50 to i16*
  store i16 %v1_10004a50, i16* %v4_10004a50, align 2
  %v0_10004a58 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10004a58, i32* @r3, align 4
  %v2_10004a5c = call i32 @function_100056ac(i32 %v0_10004a58, i32 20)
  %v3_10004a5c = trunc i32 %v2_10004a5c to i16
  %v0_10004a60 = load i32, i32* @r31, align 4
  store i32 %v0_10004a60, i32* @r4, align 4
  %v4_10004a64 = add i32 %v0_10004a58, 10
  %v5_10004a64 = inttoptr i32 %v4_10004a64 to i16*
  store i16 %v3_10004a5c, i16* %v5_10004a64, align 2
  %v0_10004a68 = load i32, i32* %r26.global-to-local, align 4
  %v0_10004a6c = load i32, i32* @r30, align 4
  %v1_10004a6c = trunc i32 %v0_10004a6c to i16
  %v2_10004a6c = load i32, i32* @r31, align 4
  %v3_10004a6c = add i32 %v2_10004a6c, 6
  %v4_10004a6c = inttoptr i32 %v3_10004a6c to i16*
  store i16 %v1_10004a6c, i16* %v4_10004a6c, align 2
  %v0_10004a70 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10004a70, i32* %r3.global-to-local, align 4
  %v0_10004a74 = load i32, i32* @r31, align 4
  %v1_10004a74 = add i32 %v0_10004a74, 4
  %v2_10004a74 = inttoptr i32 %v1_10004a74 to i16*
  %v3_10004a74 = load i16, i16* %v2_10004a74, align 2
  %v4_10004a74 = zext i16 %v3_10004a74 to i32
  %v4_10004a78 = call i32 @function_10005710(i32 %v0_10004a70, i32 %v0_10004a60, i32 %v4_10004a74, i32 %v0_10004a68)
  %v5_10004a78 = trunc i32 %v4_10004a78 to i16
  store i32 %v4_10004a78, i32* %r3.global-to-local, align 4
  %v3_10004a7c = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10004a7c, i32* %r7.global-to-local, align 4
  %v0_10004a80 = load i32, i32* @r31, align 4
  %v1_10004a80 = add i32 %v0_10004a80, 2
  %v2_10004a80 = inttoptr i32 %v1_10004a80 to i16*
  %v3_10004a80 = load i16, i16* %v2_10004a80, align 2
  %v4_10004a80 = zext i16 %v3_10004a80 to i32
  store i32 %v4_10004a80, i32* %r0.global-to-local, align 4
  %v0_10004a84 = load i32, i32* %r28.global-to-local, align 4
  %v1_10004a88 = mul i32 %v3_10004a7c, 24
  store i32 %v1_10004a88, i32* %r7.global-to-local, align 4
  %v4_10004a8c = add i32 %v0_10004a80, 6
  %v5_10004a8c = inttoptr i32 %v4_10004a8c to i16*
  store i16 %v5_10004a78, i16* %v5_10004a8c, align 2
  %v0_10004a90 = load i32, i32* %r25.global-to-local, align 4
  %v0_10004a94 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10004a94, i32* %r3.global-to-local, align 4
  %v0_10004a98 = load i32, i32* %r7.global-to-local, align 4
  %v1_10004a98 = load i32, i32* %r27.global-to-local, align 4
  %v2_10004a98 = add i32 %v1_10004a98, %v0_10004a98
  store i32 %v2_10004a98, i32* %r7.global-to-local, align 4
  %v0_10004aa0 = load i32, i32* %r0.global-to-local, align 4
  %v1_10004aa0 = trunc i32 %v0_10004aa0 to i16
  %v3_10004aa0 = add i32 %v2_10004a98, 2
  %v4_10004aa0 = inttoptr i32 %v3_10004aa0 to i16*
  store i16 %v1_10004aa0, i16* %v4_10004aa0, align 2
  store i32 268454572, i32* @lr, align 4
  %v6_10004aa8 = call i32 @function_1000b6dc(i32 %v0_10004a94, i32 %v0_10004a84, i32 %v0_10004a90, i32 16384, i32 %v2_10004a98, i32 16)
  store i32 %v6_10004aa8, i32* %r3.global-to-local, align 4
  %v3_10004aac = load i32, i32* %stack_var_-104, align 4
  %v1_10004ab0 = add i32 %v3_10004aac, 1
  store i32 %v1_10004ab0, i32* %r9.global-to-local, align 4
  %v1_10004ab4 = load i32, i32* %r19.global-to-local, align 4
  %v2_10004ab4 = icmp slt i32 %v1_10004ab0, %v1_10004ab4
  store i32 %v1_10004ab0, i32* %stack_var_-104, align 4
  br i1 %v2_10004ab4, label %dec_label_pc_10004a08, label %dec_label_pc_10004ac0

dec_label_pc_10004ac0:                            ; preds = %dec_label_pc_10004a50
  %v0_10004ac0 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10004ac0 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10004ac0 = or i1 %v0_10004ac0, %v1_10004ac0
  br i1 %v2_10004ac0, label %dec_label_pc_100049f4.preheader, label %dec_label_pc_100049f8

dec_label_pc_10004ac8:                            ; preds = %dec_label_pc_10004a08
  %v1_10004ac8 = add i32 %v2_10004a14, 16
  %v2_10004ac8 = inttoptr i32 %v1_10004ac8 to i32*
  %v3_10004ac8 = load i32, i32* %v2_10004ac8, align 4
  store i32 %v3_10004ac8, i32* %r29.global-to-local, align 4
  %v0_10004acc = call i32 @function_1000723c()
  store i32 %v0_10004acc, i32* %r3.global-to-local, align 4
  %v3_10004ad0 = load i32, i32* %stack_var_-104, align 4
  %v1_10004ad4 = mul i32 %v3_10004ad0, 24
  %v1_10004ad8 = load i32, i32* %r27.global-to-local, align 4
  %v2_10004ad8 = add i32 %v1_10004ad8, %v1_10004ad4
  store i32 %v2_10004ad8, i32* %r9.global-to-local, align 4
  %v1_10004adc = add i32 %v2_10004ad8, 20
  %v2_10004adc = inttoptr i32 %v1_10004adc to i8*
  %v3_10004adc = load i8, i8* %v2_10004adc, align 1
  %v4_10004adc = zext i8 %v3_10004adc to i32
  store i32 %v4_10004adc, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10004adc, 64
  %v2_10004ae0 = zext i8 %tmp to i32
  %v3_10004ae0 = lshr i32 %v0_10004acc, %v2_10004ae0
  store i32 %v3_10004ae0, i32* %r3.global-to-local, align 4
  %v0_10004ae4 = load i32, i32* %r29.global-to-local, align 4
  %v2_10004ae4 = add i32 %v3_10004ae0, %v0_10004ae4
  store i32 %v2_10004ae4, i32* %r29.global-to-local, align 4
  %v1_10004ae8 = load i32, i32* %r28.global-to-local, align 4
  %v2_10004ae8 = add i32 %v1_10004ae8, 16
  %v3_10004ae8 = inttoptr i32 %v2_10004ae8 to i32*
  store i32 %v2_10004ae4, i32* %v3_10004ae8, align 4
  %v0_10004aec = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10004aec, label %dec_label_pc_10004af0, label %dec_label_pc_10004a2c

dec_label_pc_10004af0:                            ; preds = %dec_label_pc_10004ac8, %dec_label_pc_10004a28
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10004af4 = call i32 @function_1000723c()
  store i32 %v0_10004af4, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r29, align 4
  %v1_10004afc = load i32, i32* %r28.global-to-local, align 4
  %v2_10004afc = add i32 %v1_10004afc, 12
  %v3_10004afc = inttoptr i32 %v2_10004afc to i32*
  store i32 %v0_10004af4, i32* %v3_10004afc, align 4
  %v0_10004b00 = load i32, i32* %r22.global-to-local, align 4
  %v1_10004b00 = load i32, i32* @r29, align 4
  %v4_10004b00 = icmp eq i32 %v0_10004b00, %v1_10004b00
  br i1 %v4_10004b00, label %dec_label_pc_10004b08, label %dec_label_pc_10004a3c

dec_label_pc_10004b08:                            ; preds = %dec_label_pc_10004af0, %dec_label_pc_10004a2c
  %v0_10004b08 = call i32 @function_1000723c()
  %v1_10004b08 = trunc i32 %v0_10004b08 to i16
  store i32 %v0_10004b08, i32* %r3.global-to-local, align 4
  %v0_10004b0c = load i32, i32* %r23.global-to-local, align 4
  %v1_10004b0c = load i32, i32* @r29, align 4
  %v4_10004b0c = icmp eq i32 %v0_10004b0c, %v1_10004b0c
  %v3_10004b10 = load i32, i32* %r28.global-to-local, align 4
  %v4_10004b10 = add i32 %v3_10004b10, 4
  %v5_10004b10 = inttoptr i32 %v4_10004b10 to i16*
  store i16 %v1_10004b08, i16* %v5_10004b10, align 2
  br i1 %v4_10004b0c, label %dec_label_pc_10004b18, label %dec_label_pc_10004b08.dec_label_pc_10004a44_crit_edge

dec_label_pc_10004b08.dec_label_pc_10004a44_crit_edge: ; preds = %dec_label_pc_10004b08
  %v1_10004a44.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10004a44

dec_label_pc_10004b18:                            ; preds = %dec_label_pc_10004b08, %dec_label_pc_10004a3c
  %v0_10004b18 = call i32 @function_1000723c()
  %v1_10004b18 = trunc i32 %v0_10004b18 to i16
  store i32 %v0_10004b18, i32* %r3.global-to-local, align 4
  %v0_10004b1c = load i32, i32* %r24.global-to-local, align 4
  %v1_10004b1c = load i32, i32* @r29, align 4
  %v4_10004b1c = icmp eq i32 %v0_10004b1c, %v1_10004b1c
  %v3_10004b20 = load i32, i32* %r28.global-to-local, align 4
  %v4_10004b20 = add i32 %v3_10004b20, 20
  %v5_10004b20 = inttoptr i32 %v4_10004b20 to i16*
  store i16 %v1_10004b18, i16* %v5_10004b20, align 2
  br i1 %v4_10004b1c, label %dec_label_pc_10004b28, label %dec_label_pc_10004a4c

dec_label_pc_10004b28:                            ; preds = %dec_label_pc_10004b18, %dec_label_pc_10004a44
  %v0_10004b28 = call i32 @function_1000723c()
  %v1_10004b28 = trunc i32 %v0_10004b28 to i16
  store i32 %v0_10004b28, i32* %r3.global-to-local, align 4
  %v3_10004b2c = load i32, i32* @r31, align 4
  %v4_10004b2c = add i32 %v3_10004b2c, 2
  %v5_10004b2c = inttoptr i32 %v4_10004b2c to i16*
  store i16 %v1_10004b28, i16* %v5_10004b2c, align 2
  %v0_10004b30 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10004b30, label %dec_label_pc_10004a50, label %dec_label_pc_10004b34

dec_label_pc_10004b34:                            ; preds = %dec_label_pc_10004a4c, %dec_label_pc_10004b28
  %v0_10004b34 = load i32, i32* %r28.global-to-local, align 4
  %v1_10004b34 = add i32 %v0_10004b34, 28
  store i32 %v1_10004b34, i32* @r3, align 4
  %v0_10004b38 = load i32, i32* %r18.global-to-local, align 4
  store i32 %v0_10004b38, i32* @r4, align 4
  %v0_10004b3c = call i32 @function_10007468()
  store i32 %v0_10004b3c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10004a50

dec_label_pc_10004b44:                            ; preds = %dec_label_pc_100048fc
  %v0_10004b44 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10004b44, i32* %r3.global-to-local, align 4
  store i32 268454732, i32* @lr, align 4
  %v0_10004b48 = call i32 @function_1000a98c()
  store i32 %v0_10004b48, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10004b4c

dec_label_pc_10004b4c:                            ; preds = %dec_label_pc_10004780, %dec_label_pc_10004b44
  store i32 %v0_10004798, i32* %r0.global-to-local, align 4
  %v1_10004b60 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10004788)
  store i32 %v0_100047cc, i32* %r28.global-to-local, align 4
  store i32 %v0_100047d4, i32* %r29.global-to-local, align 4
  store i32 %v0_100047dc, i32* %r30.global-to-local, align 4
  store i32 %v0_100047e0, i32* %r31.global-to-local, align 4
  %v0_10004ba8 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10004ba8

dec_label_pc_10004bac:                            ; preds = %dec_label_pc_1000494c
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10004bb4

dec_label_pc_10004bb4:                            ; preds = %dec_label_pc_10004bb4, %dec_label_pc_10004bac
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268454848, i32* @lr, align 4
  %v2_10004bbc = call i32 @function_1000bae4(i32 1510, i32 1)
  store i32 %v2_10004bbc, i32* %r3.global-to-local, align 4
  %v3_10004bc0 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10004bc0, i32* %r9.global-to-local, align 4
  %v0_10004bc4 = load i32, i32* @r31, align 4
  %v1_10004bc4 = mul i32 %v0_10004bc4, 4
  store i32 %v1_10004bc4, i32* %r0.global-to-local, align 4
  %v1_10004bc8 = load i32, i32* %r20.global-to-local, align 4
  %v3_10004bc8 = add i32 %v1_10004bc8, %v1_10004bc4
  %v4_10004bc8 = inttoptr i32 %v3_10004bc8 to i32*
  store i32 %v2_10004bbc, i32* %v4_10004bc8, align 4
  %v0_10004bcc = load i32, i32* %r9.global-to-local, align 4
  %v1_10004bcc = mul i32 %v0_10004bcc, 4
  store i32 %v1_10004bcc, i32* %r9.global-to-local, align 4
  %v1_10004bd0 = load i32, i32* %r20.global-to-local, align 4
  %v2_10004bd0 = add i32 %v1_10004bd0, %v1_10004bcc
  %v3_10004bd0 = inttoptr i32 %v2_10004bd0 to i32*
  %v4_10004bd0 = load i32, i32* %v3_10004bd0, align 4
  store i32 %v4_10004bd0, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10004bd8 = inttoptr i32 %v4_10004bd0 to i32*
  %v2_10004bd8 = load i32, i32* %v1_10004bd8, align 4
  store i32 %v2_10004bd8, i32* %r0.global-to-local, align 4
  %v1_10004bdc = add i32 %v4_10004bd0, 20
  store i32 %v1_10004bdc, i32* %r10.global-to-local, align 4
  %v0_10004be0 = load i32, i32* %r16.global-to-local, align 4
  %v1_10004be0 = trunc i32 %v0_10004be0 to i8
  %v3_10004be0 = add i32 %v4_10004bd0, 8
  %v4_10004be0 = inttoptr i32 %v3_10004be0 to i8*
  store i8 %v1_10004be0, i8* %v4_10004be0, align 1
  %v1_10004be4 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10004be4, i32* %r0.global-to-local, align 4
  %v0_10004be8 = load i32, i32* @r30, align 4
  %v1_10004be8 = load i32, i32* %r11.global-to-local, align 4
  %v2_10004be8 = add i32 %v1_10004be8, 12
  %v3_10004be8 = inttoptr i32 %v2_10004be8 to i32*
  store i32 %v0_10004be8, i32* %v3_10004be8, align 4
  %v1_10004bec = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_10004bf0 = load i32, i32* %r22.global-to-local, align 4
  %v1_10004bf0 = trunc i32 %v0_10004bf0 to i16
  %v2_10004bf0 = load i32, i32* %r11.global-to-local, align 4
  %v3_10004bf0 = add i32 %v2_10004bf0, 4
  %v4_10004bf0 = inttoptr i32 %v3_10004bf0 to i16*
  store i16 %v1_10004bf0, i16* %v4_10004bf0, align 2
  %v1_10004bf4 = load i32, i32* %r11.global-to-local, align 4
  %v2_10004bf4 = inttoptr i32 %v1_10004bf4 to i32*
  store i32 %v1_10004bec, i32* %v2_10004bf4, align 4
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_10004bfc = load i32, i32* %r11.global-to-local, align 4
  %v3_10004bfc = add i32 %v2_10004bfc, 9
  %v4_10004bfc = inttoptr i32 %v3_10004bfc to i8*
  store i8 17, i8* %v4_10004bfc, align 1
  %v0_10004c00 = load i32, i32* %r15.global-to-local, align 4
  %v1_10004c00 = trunc i32 %v0_10004c00 to i8
  %v2_10004c00 = load i32, i32* %r11.global-to-local, align 4
  %v3_10004c00 = add i32 %v2_10004c00, 1
  %v4_10004c00 = inttoptr i32 %v3_10004c00 to i8*
  store i8 %v1_10004c00, i8* %v4_10004c00, align 1
  %v0_10004c04 = load i32, i32* @r28, align 4
  %v1_10004c04 = trunc i32 %v0_10004c04 to i16
  %v2_10004c04 = load i32, i32* %r11.global-to-local, align 4
  %v3_10004c04 = add i32 %v2_10004c04, 2
  %v4_10004c04 = inttoptr i32 %v3_10004c04 to i16*
  store i16 %v1_10004c04, i16* %v4_10004c04, align 2
  %v3_10004c08 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10004c08, i32* %r9.global-to-local, align 4
  %v0_10004c0c = load i32, i32* %r23.global-to-local, align 4
  %v1_10004c0c = trunc i32 %v0_10004c0c to i16
  %v2_10004c0c = load i32, i32* %r11.global-to-local, align 4
  %v3_10004c0c = add i32 %v2_10004c0c, 20
  %v4_10004c0c = inttoptr i32 %v3_10004c0c to i16*
  store i16 %v1_10004c0c, i16* %v4_10004c0c, align 2
  %v0_10004c10 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004c10 = add i32 %v0_10004c10, 1
  store i32 %v1_10004c10, i32* %r31.global-to-local, align 4
  %v1_10004c14 = mul i32 %v0_10004c10, 24
  %v1_10004c18 = load i32, i32* %r19.global-to-local, align 4
  %v2_10004c18 = icmp slt i32 %v1_10004c10, %v1_10004c18
  %v1_10004c1c = load i32, i32* %r27.global-to-local, align 4
  %v2_10004c1c = add i32 %v1_10004c1c, %v1_10004c14
  store i32 %v2_10004c1c, i32* %r9.global-to-local, align 4
  %v1_10004c20 = add i32 %v2_10004c1c, 16
  %v2_10004c20 = inttoptr i32 %v1_10004c20 to i32*
  %v3_10004c20 = load i32, i32* %v2_10004c20, align 4
  store i32 %v3_10004c20, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r9.global-to-local, align 4
  %v2_10004c28 = load i32, i32* %r11.global-to-local, align 4
  %v3_10004c28 = add i32 %v2_10004c28, 6
  %v4_10004c28 = inttoptr i32 %v3_10004c28 to i16*
  store i16 16384, i16* %v4_10004c28, align 2
  %v0_10004c2c = load i32, i32* %r0.global-to-local, align 4
  %v1_10004c2c = load i32, i32* %r11.global-to-local, align 4
  %v2_10004c2c = add i32 %v1_10004c2c, 16
  %v3_10004c2c = inttoptr i32 %v2_10004c2c to i32*
  store i32 %v0_10004c2c, i32* %v3_10004c2c, align 4
  %v0_10004c30 = load i32, i32* @r29, align 4
  %v1_10004c30 = trunc i32 %v0_10004c30 to i16
  %v2_10004c30 = load i32, i32* %r10.global-to-local, align 4
  %v3_10004c30 = add i32 %v2_10004c30, 4
  %v4_10004c30 = inttoptr i32 %v3_10004c30 to i16*
  store i16 %v1_10004c30, i16* %v4_10004c30, align 2
  %v0_10004c34 = load i32, i32* %r24.global-to-local, align 4
  %v1_10004c34 = trunc i32 %v0_10004c34 to i16
  %v2_10004c34 = load i32, i32* %r10.global-to-local, align 4
  %v3_10004c34 = add i32 %v2_10004c34, 2
  %v4_10004c34 = inttoptr i32 %v3_10004c34 to i16*
  store i16 %v1_10004c34, i16* %v4_10004c34, align 2
  %v0_10004c38 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10004c38, i32* %stack_var_-104, align 4
  br i1 %v2_10004c18, label %dec_label_pc_10004bb4, label %dec_label_pc_100049ec

dec_label_pc_10004c44:                            ; preds = %dec_label_pc_1000493c
  %v0_10004c44 = load i32, i32* %r30.global-to-local, align 4
  %v3_10004c44 = icmp eq i32 %v0_10004c44, -1
  store i1 %v3_10004c44, i1* %cr2_eq.global-to-local, align 1
  %v0_10004c48 = load i32, i32* %r17.global-to-local, align 4
  %v3_10004c48 = icmp eq i32 %v0_10004c48, 0
  store i1 %v3_10004c48, i1* %cr3_eq.global-to-local, align 1
  %v1_10004c4c = add nuw nsw i32 %v0_10004c4c, 28
  store i32 %v1_10004c4c, i32* %r25.global-to-local, align 4
  %v1_10004c50 = add nuw nsw i32 %v0_10004c4c, 8
  store i32 %v1_10004c50, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_100049f4.preheader

; uselistorder directives
  uselistorder i32 %v1_10004bcc, { 1, 0 }
  uselistorder i32 %v1_10004bc4, { 1, 0 }
  uselistorder i32 %v0_10004b28, { 1, 0 }
  uselistorder i32 %v0_10004b18, { 1, 0 }
  uselistorder i32 %v0_10004b08, { 1, 0 }
  uselistorder i32 %v1_10004b00, { 1, 0 }
  uselistorder i1 %v1_10004ac0, { 1, 0 }
  uselistorder i1 %v0_10004ac0, { 1, 0 }
  uselistorder i32 %v1_10004ab0, { 0, 2, 3, 1 }
  uselistorder i32 %v4_10004a78, { 1, 0 }
  uselistorder i32 %v1_10004a0c, { 1, 0 }
  uselistorder i32 %v1_10004980, { 1, 0 }
  uselistorder i32 %v1_10004978, { 1, 0 }
  uselistorder i32 %v0_10004c4c, { 1, 0, 3, 2 }
  uselistorder i32 %v1_10004920, { 1, 2, 0 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32* %r30.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 9, 10, 27, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 2, 3, 4, 5, 6, 7, 8, 1, 0 }
  uselistorder i32* %r29.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r28.global-to-local, { 0, 8, 1, 2, 3, 4, 5, 6, 7, 9, 10 }
  uselistorder i32* %r25.global-to-local, { 2, 3, 4, 0, 1 }
  uselistorder i32* %r24.global-to-local, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32* %r23.global-to-local, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32* %r18.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 0, 1 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder i32 ()* @function_10007468, { 0, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 1510, { 0, 5, 1, 6, 2, 7, 3, 8, 4, 9 }
  uselistorder label %dec_label_pc_10004b4c, { 1, 0 }
  uselistorder label %dec_label_pc_10004b34, { 1, 0 }
  uselistorder label %dec_label_pc_10004a50, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100049f8, { 1, 0 }
  uselistorder label %dec_label_pc_100049f4, { 1, 0 }
  uselistorder label %dec_label_pc_100049f4.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000493c, { 1, 0 }
}

define i32 @function_10004c5c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10004c5c:
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %v0_10004c60 = load i32, i32* @lr, align 4
  store i32 %v0_10004c60, i32* %r0.global-to-local, align 4
  %v0_10004c64 = call i32 @__asm_mfcr()
  store i32 %v0_10004c64, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r27.global-to-local, align 4
  store i32 %v0_10004c64, i32* %r23.global-to-local, align 4
  %v0_10004c9c = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10004ca4 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_10004cac = load i32, i32* @r30, align 4
  store i32 268455116, i32* @lr, align 4
  %v2_10004cc8 = call i32 @function_1000bae4(i32 4, i32 4)
  store i32 %v2_10004cc8, i32* %r24.global-to-local, align 4
  %v0_10004cd0 = load i32, i32* @r28, align 4
  %v0_10004cd4 = load i32, i32* @r29, align 4
  store i32 %v0_10004cd4, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 268455140, i32* @lr, align 4
  %v4_10004ce0 = inttoptr i32 %v0_10004cd0 to i32*
  %v5_10004ce0 = call i32 @function_1000235c(i32 %v0_10004cd4, i32* %v4_10004ce0, i32 2, i32 0)
  store i32 65535, i32* %r6.global-to-local, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  %v0_10004cf0 = load i32, i32* @r28, align 4
  %v1_10004cf4 = urem i32 %v5_10004ce0, 256
  store i32 %v1_10004cf4, i32* %r19.global-to-local, align 4
  %v0_10004cf8 = load i32, i32* @r29, align 4
  store i32 %v0_10004cf8, i32* %r3.global-to-local, align 4
  store i32 268455168, i32* @lr, align 4
  %v4_10004cfc = inttoptr i32 %v0_10004cf0 to i32*
  %v5_10004cfc = call i32 @function_1000235c(i32 %v0_10004cf8, i32* %v4_10004cfc, i32 3, i32 65535)
  %v0_10004d00 = load i32, i32* @r28, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 64, i32* %r6.global-to-local, align 4
  store i32 %v5_10004cfc, i32* %r21.global-to-local, align 4
  %v0_10004d10 = load i32, i32* @r29, align 4
  store i32 %v0_10004d10, i32* %r3.global-to-local, align 4
  store i32 268455192, i32* @lr, align 4
  %v4_10004d14 = inttoptr i32 %v0_10004d00 to i32*
  %v5_10004d14 = call i32 @function_1000235c(i32 %v0_10004d10, i32* %v4_10004d14, i32 4, i32 64)
  %v0_10004d18 = load i32, i32* @r28, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  %v1_10004d24 = urem i32 %v5_10004d14, 256
  store i32 %v1_10004d24, i32* %r26.global-to-local, align 4
  %v0_10004d28 = load i32, i32* @r29, align 4
  store i32 %v0_10004d28, i32* %r3.global-to-local, align 4
  store i32 268455216, i32* @lr, align 4
  %v4_10004d2c = inttoptr i32 %v0_10004d18 to i32*
  %v5_10004d2c = call i32 @function_1000235c(i32 %v0_10004d28, i32* %v4_10004d2c, i32 5, i32 0)
  store i32 65535, i32* %r6.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  %v0_10004d3c = load i32, i32* @r28, align 4
  %v1_10004d40 = urem i32 %v5_10004d2c, 256
  store i32 %v1_10004d40, i32* @r31, align 4
  %v0_10004d44 = load i32, i32* @r29, align 4
  store i32 %v0_10004d44, i32* %r3.global-to-local, align 4
  store i32 268455244, i32* @lr, align 4
  %v4_10004d48 = inttoptr i32 %v0_10004d3c to i32*
  %v5_10004d48 = call i32 @function_1000235c(i32 %v0_10004d44, i32* %v4_10004d48, i32 6, i32 65535)
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 27015, i32* %r6.global-to-local, align 4
  %v0_10004d54 = load i32, i32* @r28, align 4
  store i32 %v5_10004d48, i32* %r22.global-to-local, align 4
  %v0_10004d5c = load i32, i32* @r29, align 4
  store i32 %v0_10004d5c, i32* %r3.global-to-local, align 4
  store i32 268455268, i32* @lr, align 4
  %v4_10004d60 = inttoptr i32 %v0_10004d54 to i32*
  %v5_10004d60 = call i32 @function_1000235c(i32 %v0_10004d5c, i32* %v4_10004d60, i32 7, i32 27015)
  store i32 %v5_10004d60, i32* %r29.global-to-local, align 4
  store i32 29, i32* %r3.global-to-local, align 4
  store i32 268455280, i32* @lr, align 4
  %v1_10004d6c = call i32 @function_10009880(i32 29)
  store i32 29, i32* %r3.global-to-local, align 4
  %v3_10004d78 = call i32 @function_100097cc(i32 29, i32* nonnull %stack_var_-84)
  store i32 %v3_10004d78, i32* %r30.global-to-local, align 4
  store i32 17, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268455312, i32* @lr, align 4
  %v3_10004d8c = call i32 @function_1000b758(i32 2, i32 3, i32 17)
  store i32 %v3_10004d8c, i32* %r3.global-to-local, align 4
  %v3_10004d90 = icmp eq i32 %v3_10004d8c, -1
  store i32 %v3_10004d8c, i32* %r25.global-to-local, align 4
  br i1 %v3_10004d90, label %dec_label_pc_10004fe0, label %dec_label_pc_10004d9c

dec_label_pc_10004d9c:                            ; preds = %dec_label_pc_10004c5c
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  %v2_10004da8 = ptrtoint i32* %stack_var_-88 to i32
  store i32 %v2_10004da8, i32* %r6.global-to-local, align 4
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-88, align 4
  store i32 268455352, i32* @lr, align 4
  %v5_10004db4 = call i32 @function_1000b71c(i32 0, i32 3, i32 %v2_10004da8, i32 4, i32 4)
  store i32 %v5_10004db4, i32* %r3.global-to-local, align 4
  %v3_10004db8 = icmp eq i32 %v5_10004db4, -1
  br i1 %v3_10004db8, label %dec_label_pc_10004fd8, label %dec_label_pc_10004dc0

dec_label_pc_10004dc0:                            ; preds = %dec_label_pc_10004d9c
  %v0_10004dc0 = load i32, i32* %r23.global-to-local, align 4
  %v1_10004dc0 = icmp slt i32 %v0_10004dc0, 0
  %v3_10004dc0 = icmp eq i32 %v0_10004dc0, 0
  store i1 %v1_10004dc0, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10004dc0, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10004dc8 = load i32, i32* %r21.global-to-local, align 4
  %v1_10004dc8 = urem i32 %v0_10004dc8, 65536
  store i32 %v1_10004dc8, i32* %r20.global-to-local, align 4
  store i32 0, i32* %stack_var_-88, align 4
  %v0_10004dd0 = load i32, i32* %r22.global-to-local, align 4
  %v1_10004dd0 = urem i32 %v0_10004dd0, 65536
  store i32 %v1_10004dd0, i32* %r21.global-to-local, align 4
  %v0_10004dd4 = load i32, i32* %r29.global-to-local, align 4
  %v1_10004dd4 = urem i32 %v0_10004dd4, 65536
  store i32 %v1_10004dd4, i32* %r22.global-to-local, align 4
  %tmp32 = icmp slt i32 %v0_10004dc0, 1
  br i1 %tmp32, label %dec_label_pc_10004eac.outer, label %dec_label_pc_10004ddc

dec_label_pc_10004ddc:                            ; preds = %dec_label_pc_10004dc0
  %v0_10004ddc = load i32, i32* @r31, align 4
  %v3_10004ddc = icmp eq i32 %v0_10004ddc, 0
  store i1 %v3_10004ddc, i1* %cr3_eq.global-to-local, align 1
  store i32 4, i32* %r29.global-to-local, align 4
  store i32 5, i32* %r28.global-to-local, align 4
  store i32 16384, i32* %r18.global-to-local, align 4
  store i32 17, i32* %r17.global-to-local, align 4
  store i32 -1, i32* %r16.global-to-local, align 4
  br label %dec_label_pc_10004dfc

dec_label_pc_10004dfc:                            ; preds = %dec_label_pc_10004e58, %dec_label_pc_10004ddc
  store i32 128, i32* %r3.global-to-local, align 4
  store i32 268455432, i32* @lr, align 4
  %v2_10004e04 = call i32 @function_1000bae4(i32 128, i32 1)
  store i32 %v2_10004e04, i32* %r3.global-to-local, align 4
  %v3_10004e08 = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_10004e08, i32* %r0.global-to-local, align 4
  %v0_10004e0c = load i32, i32* @r31, align 4
  %v1_10004e0c = mul i32 %v0_10004e0c, 4
  store i32 %v1_10004e0c, i32* %r9.global-to-local, align 4
  %v0_10004e10 = load i32, i32* @r30, align 4
  %v2_10004e14 = load i32, i32* %r24.global-to-local, align 4
  %v3_10004e14 = add i32 %v2_10004e14, %v1_10004e0c
  %v4_10004e14 = inttoptr i32 %v3_10004e14 to i32*
  store i32 %v2_10004e04, i32* %v4_10004e14, align 4
  %v0_10004e18 = load i32, i32* %r0.global-to-local, align 4
  %v1_10004e18 = mul i32 %v0_10004e18, 4
  store i32 %v1_10004e18, i32* %r0.global-to-local, align 4
  %v0_10004e1c = load i32, i32* %r24.global-to-local, align 4
  %v2_10004e1c = add i32 %v0_10004e1c, %v1_10004e18
  %v3_10004e1c = inttoptr i32 %v2_10004e1c to i32*
  %v4_10004e1c = load i32, i32* %v3_10004e1c, align 4
  store i32 %v4_10004e1c, i32* %r10.global-to-local, align 4
  %v1_10004e20 = inttoptr i32 %v4_10004e1c to i32*
  %v2_10004e20 = load i32, i32* %v1_10004e20, align 4
  store i32 %v2_10004e20, i32* %r0.global-to-local, align 4
  %v1_10004e24 = add i32 %v4_10004e1c, 32
  store i32 %v1_10004e24, i32* %r3.global-to-local, align 4
  %v0_10004e28 = load i32, i32* %r20.global-to-local, align 4
  %v1_10004e28 = trunc i32 %v0_10004e28 to i16
  %v3_10004e28 = add i32 %v4_10004e1c, 4
  %v4_10004e28 = inttoptr i32 %v3_10004e28 to i16*
  store i16 %v1_10004e28, i16* %v4_10004e28, align 2
  %v0_10004e2c = load i32, i32* %r10.global-to-local, align 4
  %v1_10004e2c = add i32 %v0_10004e2c, 20
  store i32 %v1_10004e2c, i32* %r8.global-to-local, align 4
  %v1_10004e30 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10004e30, i32* %r0.global-to-local, align 4
  %v1_10004e34 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10004e34, i32* %r0.global-to-local, align 4
  %v1_10004e38 = load i32, i32* %r10.global-to-local, align 4
  %v2_10004e38 = inttoptr i32 %v1_10004e38 to i32*
  store i32 %v1_10004e34, i32* %v2_10004e38, align 4
  %v0_10004e3c = load i32, i32* %r19.global-to-local, align 4
  %v1_10004e3c = trunc i32 %v0_10004e3c to i8
  %v2_10004e3c = load i32, i32* %r10.global-to-local, align 4
  %v3_10004e3c = add i32 %v2_10004e3c, 1
  %v4_10004e3c = inttoptr i32 %v3_10004e3c to i8*
  store i8 %v1_10004e3c, i8* %v4_10004e3c, align 1
  %v3_10004e40 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10004e40, i32* %r9.global-to-local, align 4
  %v0_10004e44 = load i32, i32* %r26.global-to-local, align 4
  %v1_10004e44 = trunc i32 %v0_10004e44 to i8
  %v2_10004e44 = load i32, i32* %r10.global-to-local, align 4
  %v3_10004e44 = add i32 %v2_10004e44, 8
  %v4_10004e44 = inttoptr i32 %v3_10004e44 to i8*
  store i8 %v1_10004e44, i8* %v4_10004e44, align 1
  %v0_10004e48 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004e48 = add i32 %v0_10004e48, 32
  store i32 %v1_10004e48, i32* %r9.global-to-local, align 4
  %v1_10004e4c = trunc i32 %v1_10004e48 to i16
  %v2_10004e4c = load i32, i32* %r10.global-to-local, align 4
  %v3_10004e4c = add i32 %v2_10004e4c, 2
  %v4_10004e4c = inttoptr i32 %v3_10004e4c to i16*
  store i16 %v1_10004e4c, i16* %v4_10004e4c, align 2
  %v0_10004e50 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10004e50, label %dec_label_pc_10004e58, label %dec_label_pc_10004e54

dec_label_pc_10004e54:                            ; preds = %dec_label_pc_10004dfc
  %v0_10004e54 = load i32, i32* %r18.global-to-local, align 4
  %v1_10004e54 = trunc i32 %v0_10004e54 to i16
  %v2_10004e54 = load i32, i32* %r10.global-to-local, align 4
  %v3_10004e54 = add i32 %v2_10004e54, 6
  %v4_10004e54 = inttoptr i32 %v3_10004e54 to i16*
  store i16 %v1_10004e54, i16* %v4_10004e54, align 2
  br label %dec_label_pc_10004e58

dec_label_pc_10004e58:                            ; preds = %dec_label_pc_10004dfc, %dec_label_pc_10004e54
  %v0_10004e58 = load i32, i32* %r17.global-to-local, align 4
  %v1_10004e58 = trunc i32 %v0_10004e58 to i8
  %v2_10004e58 = load i32, i32* %r10.global-to-local, align 4
  %v3_10004e58 = add i32 %v2_10004e58, 9
  %v4_10004e58 = inttoptr i32 %v3_10004e58 to i8*
  store i8 %v1_10004e58, i8* %v4_10004e58, align 1
  %v0_10004e5c = load i32, i32* %r21.global-to-local, align 4
  %v1_10004e5c = trunc i32 %v0_10004e5c to i16
  %v2_10004e5c = load i32, i32* %r10.global-to-local, align 4
  %v3_10004e5c = add i32 %v2_10004e5c, 20
  %v4_10004e5c = inttoptr i32 %v3_10004e5c to i16*
  store i16 %v1_10004e5c, i16* %v4_10004e5c, align 2
  %v3_10004e60 = load i32, i32* %stack_var_-88, align 4
  %v3_10004e64 = load i32, i32* @global_var_1001e180.71, align 4
  store i32 %v3_10004e64, i32* %r0.global-to-local, align 4
  %v1_10004e68 = mul i32 %v3_10004e60, 24
  store i32 %v1_10004e68, i32* %r9.global-to-local, align 4
  %v0_10004e6c = load i32, i32* %r22.global-to-local, align 4
  %v1_10004e6c = trunc i32 %v0_10004e6c to i16
  %v2_10004e6c = load i32, i32* %r8.global-to-local, align 4
  %v3_10004e6c = add i32 %v2_10004e6c, 2
  %v4_10004e6c = inttoptr i32 %v3_10004e6c to i16*
  store i16 %v1_10004e6c, i16* %v4_10004e6c, align 2
  %v0_10004e70 = load i32, i32* %r0.global-to-local, align 4
  %v1_10004e70 = load i32, i32* %r10.global-to-local, align 4
  %v2_10004e70 = add i32 %v1_10004e70, 12
  %v3_10004e70 = inttoptr i32 %v2_10004e70 to i32*
  store i32 %v0_10004e70, i32* %v3_10004e70, align 4
  %v0_10004e74 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004e74 = load i32, i32* %r27.global-to-local, align 4
  %v2_10004e74 = add i32 %v1_10004e74, %v0_10004e74
  store i32 %v2_10004e74, i32* %r9.global-to-local, align 4
  %v1_10004e78 = add i32 %v2_10004e74, 16
  %v2_10004e78 = inttoptr i32 %v1_10004e78 to i32*
  %v3_10004e78 = load i32, i32* %v2_10004e78, align 4
  store i32 %v3_10004e78, i32* %r0.global-to-local, align 4
  %v3_10004e7c = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10004e7c, i32* %r11.global-to-local, align 4
  %v0_10004e80 = load i32, i32* %r16.global-to-local, align 4
  %v1_10004e80 = load i32, i32* %r10.global-to-local, align 4
  %v2_10004e80 = add i32 %v1_10004e80, 28
  %v3_10004e80 = inttoptr i32 %v2_10004e80 to i32*
  store i32 %v0_10004e80, i32* %v3_10004e80, align 4
  %v0_10004e84 = load i32, i32* %r0.global-to-local, align 4
  %v1_10004e84 = load i32, i32* %r10.global-to-local, align 4
  %v2_10004e84 = add i32 %v1_10004e84, 16
  %v3_10004e84 = inttoptr i32 %v2_10004e84 to i32*
  store i32 %v0_10004e84, i32* %v3_10004e84, align 4
  %v0_10004e88 = load i32, i32* %r11.global-to-local, align 4
  %v1_10004e88 = add i32 %v0_10004e88, 12
  store i32 %v1_10004e88, i32* %r11.global-to-local, align 4
  %v1_10004e8c = trunc i32 %v1_10004e88 to i16
  %v2_10004e8c = load i32, i32* %r8.global-to-local, align 4
  %v3_10004e8c = add i32 %v2_10004e8c, 4
  %v4_10004e8c = inttoptr i32 %v3_10004e8c to i16*
  store i16 %v1_10004e8c, i16* %v4_10004e8c, align 2
  %v3_10004e90 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10004e90, i32* %r5.global-to-local, align 4
  store i32 268455576, i32* @lr, align 4
  %v3_10004e94 = call i32 @function_1000a184(i32 %v3_10004e90, i32 %v0_10004e10, i32 %v3_10004e90)
  store i32 %v3_10004e94, i32* %r3.global-to-local, align 4
  %v3_10004e98 = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_10004e98, i32* %r9.global-to-local, align 4
  %v1_10004e9c = add i32 %v3_10004e98, 1
  %v1_10004ea0 = load i32, i32* %r23.global-to-local, align 4
  %v2_10004ea0 = icmp slt i32 %v1_10004e9c, %v1_10004ea0
  store i32 %v1_10004e9c, i32* %stack_var_-88, align 4
  br i1 %v2_10004ea0, label %dec_label_pc_10004dfc, label %dec_label_pc_10004eac.preheader.loopexit

dec_label_pc_10004eac.preheader.loopexit:         ; preds = %dec_label_pc_10004e58
  %v0_10004eac.pre.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10004eac.pre.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10004eac.outer

dec_label_pc_10004eac.outer:                      ; preds = %dec_label_pc_10004f78, %dec_label_pc_10004dc0, %dec_label_pc_10004eac.preheader.loopexit
  %v1_10004eac.ph34 = phi i1 [ %v1_10004dc0, %dec_label_pc_10004dc0 ], [ %v1_10004eac.pre.pre, %dec_label_pc_10004eac.preheader.loopexit ], [ %v1_10004f78, %dec_label_pc_10004f78 ]
  %v0_10004eac.ph35 = phi i1 [ %v3_10004dc0, %dec_label_pc_10004dc0 ], [ %v0_10004eac.pre.pre, %dec_label_pc_10004eac.preheader.loopexit ], [ %v0_10004f78, %dec_label_pc_10004f78 ]
  %v2_10004eac = or i1 %v1_10004eac.ph34, %v0_10004eac.ph35
  br label %dec_label_pc_10004eac

dec_label_pc_10004eac:                            ; preds = %dec_label_pc_10004eac.outer, %dec_label_pc_10004eac
  br i1 %v2_10004eac, label %dec_label_pc_10004eac, label %dec_label_pc_10004eb0

dec_label_pc_10004eb0:                            ; preds = %dec_label_pc_10004eac, %dec_label_pc_10004f78
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 0, i32* %stack_var_-88, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10004ec0

dec_label_pc_10004ec0:                            ; preds = %dec_label_pc_10004f00, %dec_label_pc_10004eb0
  %v0_10004ed0 = phi i32 [ %v1_10004f68, %dec_label_pc_10004f00 ], [ 0, %dec_label_pc_10004eb0 ]
  %v1_10004ec0 = mul i32 %v0_10004ed0, 24
  store i32 65535, i32* %r30.global-to-local, align 4
  %v1_10004ecc = load i32, i32* %r27.global-to-local, align 4
  %v2_10004ecc = add i32 %v1_10004ecc, %v1_10004ec0
  store i32 %v2_10004ecc, i32* %r10.global-to-local, align 4
  %v1_10004ed0 = mul i32 %v0_10004ed0, 4
  store i32 %v1_10004ed0, i32* %r0.global-to-local, align 4
  %v1_10004ed4 = add i32 %v2_10004ecc, 20
  %v2_10004ed4 = inttoptr i32 %v1_10004ed4 to i8*
  %v3_10004ed4 = load i8, i8* %v2_10004ed4, align 1
  %v4_10004ed4 = zext i8 %v3_10004ed4 to i32
  store i32 %v4_10004ed4, i32* %r9.global-to-local, align 4
  %v0_10004ed8 = load i32, i32* %r24.global-to-local, align 4
  %v2_10004ed8 = add i32 %v0_10004ed8, %v1_10004ed0
  %v3_10004ed8 = inttoptr i32 %v2_10004ed8 to i32*
  %v4_10004ed8 = load i32, i32* %v3_10004ed8, align 4
  store i32 %v4_10004ed8, i32* %r28.global-to-local, align 4
  %v1_10004ee0 = add i32 %v4_10004ed8, 20
  store i32 %v1_10004ee0, i32* @r31, align 4
  %tmp33 = icmp ult i8 %v3_10004ed4, 32
  br i1 %tmp33, label %dec_label_pc_10004f80, label %dec_label_pc_10004ee8

dec_label_pc_10004ee8:                            ; preds = %dec_label_pc_10004ec0
  %v0_10004ee8 = load i32, i32* %r20.global-to-local, align 4
  %v4_10004ee8 = icmp eq i32 %v0_10004ee8, 65535
  br i1 %v4_10004ee8, label %dec_label_pc_10004fac, label %dec_label_pc_10004ef0

dec_label_pc_10004ef0:                            ; preds = %dec_label_pc_10004f80.dec_label_pc_10004ef0_crit_edge, %dec_label_pc_10004ee8
  %v1_10004ef0 = phi i32 [ %v1_10004ef0.pre, %dec_label_pc_10004f80.dec_label_pc_10004ef0_crit_edge ], [ 65535, %dec_label_pc_10004ee8 ]
  %v0_10004ef0 = load i32, i32* %r21.global-to-local, align 4
  %v4_10004ef0 = icmp eq i32 %v0_10004ef0, %v1_10004ef0
  br i1 %v4_10004ef0, label %dec_label_pc_10004fbc, label %dec_label_pc_10004ef8

dec_label_pc_10004ef8:                            ; preds = %dec_label_pc_10004fac.dec_label_pc_10004ef8_crit_edge, %dec_label_pc_10004ef0
  %v1_10004ef8 = phi i32 [ %v1_10004ef8.pre, %dec_label_pc_10004fac.dec_label_pc_10004ef8_crit_edge ], [ %v1_10004ef0, %dec_label_pc_10004ef0 ]
  %v0_10004ef8 = load i32, i32* %r22.global-to-local, align 4
  %v4_10004ef8 = icmp eq i32 %v0_10004ef8, %v1_10004ef8
  br i1 %v4_10004ef8, label %dec_label_pc_10004fcc, label %dec_label_pc_10004f00

dec_label_pc_10004f00:                            ; preds = %dec_label_pc_10004fbc, %dec_label_pc_10004ef8, %dec_label_pc_10004fcc
  %v0_10004f00 = load i32, i32* %r26.global-to-local, align 4
  %v1_10004f00 = trunc i32 %v0_10004f00 to i16
  %v2_10004f00 = load i32, i32* %r28.global-to-local, align 4
  %v3_10004f00 = add i32 %v2_10004f00, 10
  %v4_10004f00 = inttoptr i32 %v3_10004f00 to i16*
  store i16 %v1_10004f00, i16* %v4_10004f00, align 2
  %v0_10004f08 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10004f08, i32* @r3, align 4
  %v2_10004f0c = call i32 @function_100056ac(i32 %v0_10004f08, i32 20)
  %v3_10004f0c = trunc i32 %v2_10004f0c to i16
  store i32 %v2_10004f0c, i32* %r3.global-to-local, align 4
  %v3_10004f10 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10004f10, i32* %r6.global-to-local, align 4
  %v3_10004f14 = load i32, i32* %r28.global-to-local, align 4
  %v4_10004f14 = add i32 %v3_10004f14, 10
  %v5_10004f14 = inttoptr i32 %v4_10004f14 to i16*
  store i16 %v3_10004f0c, i16* %v5_10004f14, align 2
  %v0_10004f18 = load i32, i32* @r31, align 4
  store i32 %v0_10004f18, i32* @r4, align 4
  %v0_10004f1c = load i32, i32* %r26.global-to-local, align 4
  %v1_10004f1c = trunc i32 %v0_10004f1c to i16
  %v3_10004f1c = add i32 %v0_10004f18, 6
  %v4_10004f1c = inttoptr i32 %v3_10004f1c to i16*
  store i16 %v1_10004f1c, i16* %v4_10004f1c, align 2
  %v0_10004f20 = load i32, i32* %r6.global-to-local, align 4
  %v1_10004f20 = add i32 %v0_10004f20, 12
  store i32 %v1_10004f20, i32* %r6.global-to-local, align 4
  %v0_10004f24 = load i32, i32* @r31, align 4
  %v1_10004f24 = add i32 %v0_10004f24, 4
  %v2_10004f24 = inttoptr i32 %v1_10004f24 to i16*
  %v3_10004f24 = load i16, i16* %v2_10004f24, align 2
  %v4_10004f24 = zext i16 %v3_10004f24 to i32
  store i32 %v4_10004f24, i32* %r5.global-to-local, align 4
  %v0_10004f28 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10004f28, i32* %r3.global-to-local, align 4
  %v4_10004f2c = call i32 @function_10005710(i32 %v0_10004f28, i32 %v0_10004f18, i32 %v4_10004f24, i32 %v1_10004f20)
  %v5_10004f2c = trunc i32 %v4_10004f2c to i16
  store i32 %v4_10004f2c, i32* %r3.global-to-local, align 4
  %v3_10004f30 = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_10004f30, i32* %r7.global-to-local, align 4
  %v0_10004f34 = load i32, i32* @r31, align 4
  %v1_10004f34 = add i32 %v0_10004f34, 2
  %v2_10004f34 = inttoptr i32 %v1_10004f34 to i16*
  %v3_10004f34 = load i16, i16* %v2_10004f34, align 2
  %v4_10004f34 = zext i16 %v3_10004f34 to i32
  store i32 %v4_10004f34, i32* %r0.global-to-local, align 4
  %v0_10004f38 = load i32, i32* %r28.global-to-local, align 4
  %v1_10004f3c = mul i32 %v3_10004f30, 24
  store i32 %v1_10004f3c, i32* %r7.global-to-local, align 4
  %v3_10004f40 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10004f40, i32* %r5.global-to-local, align 4
  %v4_10004f44 = add i32 %v0_10004f34, 6
  %v5_10004f44 = inttoptr i32 %v4_10004f44 to i16*
  store i16 %v5_10004f2c, i16* %v5_10004f44, align 2
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_10004f4c = load i32, i32* %r7.global-to-local, align 4
  %v1_10004f4c = load i32, i32* %r27.global-to-local, align 4
  %v2_10004f4c = add i32 %v1_10004f4c, %v0_10004f4c
  store i32 %v2_10004f4c, i32* %r7.global-to-local, align 4
  %v0_10004f50 = load i32, i32* %r5.global-to-local, align 4
  %v1_10004f50 = add i32 %v0_10004f50, 32
  store i32 %v1_10004f50, i32* %r5.global-to-local, align 4
  %v0_10004f54 = load i32, i32* %r0.global-to-local, align 4
  %v1_10004f54 = trunc i32 %v0_10004f54 to i16
  %v3_10004f54 = add i32 %v2_10004f4c, 2
  %v4_10004f54 = inttoptr i32 %v3_10004f54 to i16*
  store i16 %v1_10004f54, i16* %v4_10004f54, align 2
  %v0_10004f58 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10004f58, i32* %r3.global-to-local, align 4
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 268455780, i32* @lr, align 4
  %v6_10004f60 = call i32 @function_1000b6dc(i32 %v0_10004f58, i32 %v0_10004f38, i32 %v1_10004f50, i32 16384, i32 %v2_10004f4c, i32 16)
  store i32 %v6_10004f60, i32* %r3.global-to-local, align 4
  %v3_10004f64 = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_10004f64, i32* %r9.global-to-local, align 4
  %v1_10004f68 = add i32 %v3_10004f64, 1
  store i32 %v1_10004f68, i32* %r11.global-to-local, align 4
  %v1_10004f6c = load i32, i32* %r23.global-to-local, align 4
  %v2_10004f6c = icmp slt i32 %v1_10004f68, %v1_10004f6c
  store i32 %v1_10004f68, i32* %stack_var_-88, align 4
  br i1 %v2_10004f6c, label %dec_label_pc_10004ec0, label %dec_label_pc_10004f78

dec_label_pc_10004f78:                            ; preds = %dec_label_pc_10004f00
  %v0_10004f78 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10004f78 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10004f78 = or i1 %v0_10004f78, %v1_10004f78
  br i1 %v2_10004f78, label %dec_label_pc_10004eac.outer, label %dec_label_pc_10004eb0

dec_label_pc_10004f80:                            ; preds = %dec_label_pc_10004ec0
  %v1_10004f80 = add i32 %v2_10004ecc, 16
  %v2_10004f80 = inttoptr i32 %v1_10004f80 to i32*
  %v3_10004f80 = load i32, i32* %v2_10004f80, align 4
  store i32 %v3_10004f80, i32* %r29.global-to-local, align 4
  %v0_10004f84 = call i32 @function_1000723c()
  store i32 %v0_10004f84, i32* %r3.global-to-local, align 4
  %v3_10004f88 = load i32, i32* %stack_var_-88, align 4
  %v0_10004f8c = load i32, i32* %r20.global-to-local, align 4
  %v1_10004f8c = load i32, i32* %r30.global-to-local, align 4
  %v4_10004f8c = icmp eq i32 %v0_10004f8c, %v1_10004f8c
  %v1_10004f90 = mul i32 %v3_10004f88, 24
  %v1_10004f94 = load i32, i32* %r27.global-to-local, align 4
  %v2_10004f94 = add i32 %v1_10004f94, %v1_10004f90
  store i32 %v2_10004f94, i32* %r9.global-to-local, align 4
  %v1_10004f98 = add i32 %v2_10004f94, 20
  %v2_10004f98 = inttoptr i32 %v1_10004f98 to i8*
  %v3_10004f98 = load i8, i8* %v2_10004f98, align 1
  %v4_10004f98 = zext i8 %v3_10004f98 to i32
  store i32 %v4_10004f98, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10004f98, 64
  %v2_10004f9c = zext i8 %tmp to i32
  %v3_10004f9c = lshr i32 %v0_10004f84, %v2_10004f9c
  store i32 %v3_10004f9c, i32* %r3.global-to-local, align 4
  %v0_10004fa0 = load i32, i32* %r29.global-to-local, align 4
  %v2_10004fa0 = add i32 %v3_10004f9c, %v0_10004fa0
  store i32 %v2_10004fa0, i32* %r29.global-to-local, align 4
  %v1_10004fa4 = load i32, i32* %r28.global-to-local, align 4
  %v2_10004fa4 = add i32 %v1_10004fa4, 16
  %v3_10004fa4 = inttoptr i32 %v2_10004fa4 to i32*
  store i32 %v2_10004fa0, i32* %v3_10004fa4, align 4
  br i1 %v4_10004f8c, label %dec_label_pc_10004fac, label %dec_label_pc_10004f80.dec_label_pc_10004ef0_crit_edge

dec_label_pc_10004f80.dec_label_pc_10004ef0_crit_edge: ; preds = %dec_label_pc_10004f80
  %v1_10004ef0.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10004ef0

dec_label_pc_10004fac:                            ; preds = %dec_label_pc_10004f80, %dec_label_pc_10004ee8
  %v0_10004fac = call i32 @function_1000723c()
  %v1_10004fac = trunc i32 %v0_10004fac to i16
  store i32 %v0_10004fac, i32* %r3.global-to-local, align 4
  %v0_10004fb0 = load i32, i32* %r21.global-to-local, align 4
  %v1_10004fb0 = load i32, i32* %r30.global-to-local, align 4
  %v4_10004fb0 = icmp eq i32 %v0_10004fb0, %v1_10004fb0
  %v3_10004fb4 = load i32, i32* %r28.global-to-local, align 4
  %v4_10004fb4 = add i32 %v3_10004fb4, 4
  %v5_10004fb4 = inttoptr i32 %v4_10004fb4 to i16*
  store i16 %v1_10004fac, i16* %v5_10004fb4, align 2
  br i1 %v4_10004fb0, label %dec_label_pc_10004fbc, label %dec_label_pc_10004fac.dec_label_pc_10004ef8_crit_edge

dec_label_pc_10004fac.dec_label_pc_10004ef8_crit_edge: ; preds = %dec_label_pc_10004fac
  %v1_10004ef8.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10004ef8

dec_label_pc_10004fbc:                            ; preds = %dec_label_pc_10004fac, %dec_label_pc_10004ef0
  %v0_10004fbc = call i32 @function_1000723c()
  %v1_10004fbc = trunc i32 %v0_10004fbc to i16
  store i32 %v0_10004fbc, i32* %r3.global-to-local, align 4
  %v0_10004fc0 = load i32, i32* %r22.global-to-local, align 4
  %v1_10004fc0 = load i32, i32* %r30.global-to-local, align 4
  %v4_10004fc0 = icmp eq i32 %v0_10004fc0, %v1_10004fc0
  %v3_10004fc4 = load i32, i32* %r28.global-to-local, align 4
  %v4_10004fc4 = add i32 %v3_10004fc4, 20
  %v5_10004fc4 = inttoptr i32 %v4_10004fc4 to i16*
  store i16 %v1_10004fbc, i16* %v5_10004fc4, align 2
  br i1 %v4_10004fc0, label %dec_label_pc_10004fcc, label %dec_label_pc_10004f00

dec_label_pc_10004fcc:                            ; preds = %dec_label_pc_10004fbc, %dec_label_pc_10004ef8
  %v0_10004fcc = call i32 @function_1000723c()
  %v1_10004fcc = trunc i32 %v0_10004fcc to i16
  store i32 %v0_10004fcc, i32* %r3.global-to-local, align 4
  %v3_10004fd0 = load i32, i32* @r31, align 4
  %v4_10004fd0 = add i32 %v3_10004fd0, 2
  %v5_10004fd0 = inttoptr i32 %v4_10004fd0 to i16*
  store i16 %v1_10004fcc, i16* %v5_10004fd0, align 2
  br label %dec_label_pc_10004f00

dec_label_pc_10004fd8:                            ; preds = %dec_label_pc_10004d9c
  %v0_10004fd8 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10004fd8, i32* %r3.global-to-local, align 4
  store i32 268455904, i32* @lr, align 4
  %v0_10004fdc = call i32 @function_1000a98c()
  store i32 %v0_10004fdc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10004fe0

dec_label_pc_10004fe0:                            ; preds = %dec_label_pc_10004c5c, %dec_label_pc_10004fd8
  store i32 %v0_10004c60, i32* %r0.global-to-local, align 4
  %v1_10004ff4 = call %0 @__asm_mtcrf(i32 24, i32 %v0_10004c64)
  store i32 %v0_10004c9c, i32* %r28.global-to-local, align 4
  store i32 %v0_10004ca4, i32* %r29.global-to-local, align 4
  store i32 %v0_10004cac, i32* %r30.global-to-local, align 4
  %v0_10005038 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10005038

; uselistorder directives
  uselistorder i32 %v0_10004fcc, { 1, 0 }
  uselistorder i32 %v0_10004fbc, { 1, 0 }
  uselistorder i32 %v0_10004fac, { 1, 0 }
  uselistorder i1 %v1_10004f78, { 1, 0 }
  uselistorder i1 %v0_10004f78, { 1, 0 }
  uselistorder i32 %v1_10004f68, { 0, 2, 3, 1 }
  uselistorder i32 %v4_10004f2c, { 1, 0 }
  uselistorder i32 %v2_10004f0c, { 1, 0 }
  uselistorder i32 %v1_10004ed0, { 1, 0 }
  uselistorder i32 %v1_10004e18, { 1, 0 }
  uselistorder i32 %v1_10004e0c, { 1, 0 }
  uselistorder i32* %stack_var_-84, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 0 }
  uselistorder i32* %r30.global-to-local, { 0, 2, 1, 3, 5, 4, 6, 7 }
  uselistorder i32* %r3.global-to-local, { 19, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 0, 1 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10004fe0, { 1, 0 }
  uselistorder label %dec_label_pc_10004f00, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10004eb0, { 1, 0 }
  uselistorder label %dec_label_pc_10004eac, { 1, 0 }
  uselistorder label %dec_label_pc_10004eac.outer, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10004e58, { 1, 0 }
}

define i32 @function_1000503c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000503c:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr3_lt.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-2184 = alloca i32, align 4
  %stack_var_-2180 = alloca i32, align 4
  %stack_var_-2148 = alloca i32, align 4
  %v0_10005040 = load i32, i32* @lr, align 4
  store i32 %v0_10005040, i32* %r0.global-to-local, align 4
  %v0_10005044 = call i32 @__asm_mfcr()
  store i32 %v0_10005044, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r14.global-to-local, align 4
  %v0_10005054 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10005044, i32* %r15.global-to-local, align 4
  %v0_10005074 = load i32, i32* @r24, align 4
  %v0_10005078 = load i32, i32* @r25, align 4
  %v0_1000507c = load i32, i32* @r26, align 4
  %v0_10005080 = load i32, i32* @r27, align 4
  %v0_10005084 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_10005094 = load i32, i32* @r31, align 4
  %v0_100050a8 = load i32, i32* @r30, align 4
  store i32 268456112, i32* @lr, align 4
  %v2_100050ac = call i32 @function_1000bae4(i32 4, i32 4)
  store i32 %v2_100050ac, i32* %r16.global-to-local, align 4
  %v0_100050b4 = load i32, i32* @r28, align 4
  %v0_100050c0 = load i32, i32* @r29, align 4
  store i32 %v0_100050c0, i32* %r3.global-to-local, align 4
  store i32 268456136, i32* @lr, align 4
  %v4_100050c4 = inttoptr i32 %v0_100050b4 to i32*
  %v5_100050c4 = call i32 @function_1000235c(i32 %v0_100050c0, i32* %v4_100050c4, i32 2, i32 0)
  %v5_100050d4 = trunc i32 %v5_100050c4 to i8
  %v0_100050dc = load i32, i32* @r28, align 4
  %v0_100050e0 = load i32, i32* @r29, align 4
  store i32 %v0_100050e0, i32* %r3.global-to-local, align 4
  store i32 268456168, i32* @lr, align 4
  %v4_100050e4 = inttoptr i32 %v0_100050dc to i32*
  %v5_100050e4 = call i32 @function_1000235c(i32 %v0_100050e0, i32* %v4_100050e4, i32 3, i32 65535)
  %v0_100050e8 = load i32, i32* @r28, align 4
  store i32 %v5_100050e4, i32* %r19.global-to-local, align 4
  %v0_100050f8 = load i32, i32* @r29, align 4
  store i32 %v0_100050f8, i32* %r3.global-to-local, align 4
  store i32 268456192, i32* @lr, align 4
  %v4_100050fc = inttoptr i32 %v0_100050e8 to i32*
  %v5_100050fc = call i32 @function_1000235c(i32 %v0_100050f8, i32* %v4_100050fc, i32 4, i32 64)
  %v0_10005100 = load i32, i32* @r28, align 4
  %v5_1000510c = trunc i32 %v5_100050fc to i8
  %v0_10005114 = load i32, i32* @r29, align 4
  store i32 %v0_10005114, i32* %r3.global-to-local, align 4
  store i32 268456220, i32* @lr, align 4
  %v4_10005118 = inttoptr i32 %v0_10005100 to i32*
  %v5_10005118 = call i32 @function_1000235c(i32 %v0_10005114, i32* %v4_10005118, i32 5, i32 0)
  %v0_10005128 = load i32, i32* @r28, align 4
  %v1_1000512c = urem i32 %v5_10005118, 256
  store i32 %v1_1000512c, i32* %r27.global-to-local, align 4
  %v0_10005130 = load i32, i32* @r29, align 4
  store i32 %v0_10005130, i32* %r3.global-to-local, align 4
  store i32 268456248, i32* @lr, align 4
  %v4_10005134 = inttoptr i32 %v0_10005128 to i32*
  %v5_10005134 = call i32 @function_1000235c(i32 %v0_10005130, i32* %v4_10005134, i32 6, i32 65535)
  %v0_10005138 = load i32, i32* @r28, align 4
  store i32 %v5_10005134, i32* %r20.global-to-local, align 4
  %v0_10005148 = load i32, i32* @r29, align 4
  store i32 %v0_10005148, i32* %r3.global-to-local, align 4
  store i32 268456272, i32* @lr, align 4
  %v4_1000514c = inttoptr i32 %v0_10005138 to i32*
  %v5_1000514c = call i32 @function_1000235c(i32 %v0_10005148, i32* %v4_1000514c, i32 7, i32 53)
  %v0_10005154 = load i32, i32* @r28, align 4
  store i32 %v5_1000514c, i32* %r23.global-to-local, align 4
  %v0_10005164 = load i32, i32* @r29, align 4
  store i32 %v0_10005164, i32* %r3.global-to-local, align 4
  store i32 268456300, i32* @lr, align 4
  %v4_10005168 = inttoptr i32 %v0_10005154 to i32*
  %v5_10005168 = call i32 @function_1000235c(i32 %v0_10005164, i32* %v4_10005168, i32 9, i32 65535)
  %v0_1000516c = load i32, i32* @r28, align 4
  store i32 %v5_10005168, i32* %r24.global-to-local, align 4
  %v0_1000517c = load i32, i32* @r29, align 4
  store i32 %v0_1000517c, i32* %r3.global-to-local, align 4
  store i32 268456324, i32* @lr, align 4
  %v4_10005180 = inttoptr i32 %v0_1000516c to i32*
  %v5_10005180 = call i32 @function_1000235c(i32 %v0_1000517c, i32* %v4_10005180, i32 0, i32 12)
  %v0_1000518c = load i32, i32* @r28, align 4
  store i32 %v5_10005180, i32* %r26.global-to-local, align 4
  %v0_10005194 = load i32, i32* @r29, align 4
  store i32 %v0_10005194, i32* %r3.global-to-local, align 4
  store i32 268456348, i32* @lr, align 4
  %v4_10005198 = inttoptr i32 %v0_1000518c to i32*
  %v5_10005198 = call i32 @function_10001d50(i32 %v0_10005194, i32* %v4_10005198, i32 8, i32 0)
  store i32 %v5_10005198, i32* %r25.global-to-local, align 4
  store i32 30, i32* %r3.global-to-local, align 4
  store i32 268456360, i32* @lr, align 4
  %v1_100051a4 = call i32 @function_10009880(i32 30)
  store i32 30, i32* %r3.global-to-local, align 4
  %v3_100051b0 = call i32 @function_100097cc(i32 30, i32* null)
  store i32 %v3_100051b0, i32* %r3.global-to-local, align 4
  store i32 268456384, i32* @lr, align 4
  %v2_100051bc = call i32 @function_1000aaf4(i32 %v3_100051b0, i32 0)
  store i32 %v2_100051bc, i32* @r31, align 4
  store i32 30, i32* %r3.global-to-local, align 4
  store i32 268456396, i32* @lr, align 4
  %v1_100051c8 = call i32 @function_100097f4(i32 30)
  store i32 %v1_100051c8, i32* %r3.global-to-local, align 4
  %v0_100051cc = load i32, i32* @r31, align 4
  %v1_100051cc = icmp slt i32 %v0_100051cc, 0
  %v3_100051cc = icmp eq i32 %v0_100051cc, 0
  store i1 %v3_100051cc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_100051cc, label %dec_label_pc_1000529c, label %dec_label_pc_100051d4

dec_label_pc_100051d4:                            ; preds = %dec_label_pc_1000503c
  %v2_100051d4 = ptrtoint i32* %stack_var_-2148 to i32
  store i32 %v2_100051d4, i32* %r28.global-to-local, align 4
  store i32 %v0_100051cc, i32* %r3.global-to-local, align 4
  store i32 268456424, i32* @lr, align 4
  %v3_100051e4 = call i32 @function_1000abc4(i32 %v0_100051cc, i32 %v2_100051d4, i32 2048)
  store i32 %v3_100051e4, i32* %r30.global-to-local, align 4
  %v0_100051ec = load i32, i32* @r31, align 4
  store i32 %v0_100051ec, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100051f4.79 to i32), i32* @lr, align 4
  %v0_100051f0 = call i32 @function_1000a98c()
  store i32 31, i32* %r3.global-to-local, align 4
  store i32 268456444, i32* @lr, align 4
  %v1_100051f8 = call i32 @function_10009880(i32 31)
  store i32 31, i32* %r3.global-to-local, align 4
  %v3_10005204 = call i32 @function_100097cc(i32 31, i32* null)
  %v0_10005208 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v2_100051d4, i32* %r3.global-to-local, align 4
  %v3_10005214 = bitcast i32* %stack_var_-2148 to i8*
  %v4_10005214 = call i32 @function_1000a4b0(i8* %v3_10005214, i32 %v0_10005208, i32 %v3_10005204)
  store i32 %v4_10005214, i32* @r31, align 4
  store i32 31, i32* %r3.global-to-local, align 4
  store i32 268456484, i32* @lr, align 4
  %v1_10005220 = call i32 @function_100097f4(i32 31)
  store i32 %v1_10005220, i32* %r3.global-to-local, align 4
  %v0_10005224 = load i32, i32* @r31, align 4
  %v3_10005224 = icmp eq i32 %v0_10005224, -1
  store i1 %v3_10005224, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10005224, label %dec_label_pc_1000529c, label %dec_label_pc_1000522c

dec_label_pc_1000522c:                            ; preds = %dec_label_pc_100051d4
  %v0_1000522c = load i32, i32* %r30.global-to-local, align 4
  %v3_1000522c = icmp sgt i32 %v0_1000522c, %v0_10005224
  %v4_1000522c = icmp eq i32 %v0_1000522c, %v0_10005224
  store i1 %v4_1000522c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000522c, label %dec_label_pc_10005234, label %dec_label_pc_1000529c

dec_label_pc_10005234:                            ; preds = %dec_label_pc_1000522c
  %v2_10005234 = sub i32 %v0_1000522c, %v0_10005224
  store i32 %v2_10005234, i32* %r0.global-to-local, align 4
  %v1_10005238 = add i32 %v0_1000522c, -1
  store i32 %v1_10005238, i32* %r3.global-to-local, align 4
  store i32 %v2_10005234, i32* %ctr.global-to-local, align 4
  %v0_10005244 = load i32, i32* %r28.global-to-local, align 4
  %v2_10005244 = add i32 %v0_10005244, %v0_10005224
  store i32 %v2_10005244, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v2_1000524c = ptrtoint i32* %stack_var_-2180 to i32
  store i32 %v2_1000524c, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10005250

dec_label_pc_10005250:                            ; preds = %dec_label_pc_10005294, %dec_label_pc_10005234
  %v0_10005298 = phi i32 [ %v1_10005298, %dec_label_pc_10005294 ], [ %v2_10005234, %dec_label_pc_10005234 ]
  %v0_10005294 = phi i32 [ %v1_10005294, %dec_label_pc_10005294 ], [ %v0_10005224, %dec_label_pc_10005234 ]
  %v0_1000525c = phi i32 [ %v1_1000525c, %dec_label_pc_10005294 ], [ %v2_10005244, %dec_label_pc_10005234 ]
  %v0_10005250 = phi i32 [ %v0_100052504, %dec_label_pc_10005294 ], [ 0, %dec_label_pc_10005234 ]
  %v3_10005250 = icmp eq i32 %v0_10005250, 0
  store i1 %v3_10005250, i1* %cr7_eq.global-to-local, align 1
  %v1_10005254 = inttoptr i32 %v0_1000525c to i8*
  %v2_10005254 = load i8, i8* %v1_10005254, align 1
  %v3_10005254 = zext i8 %v2_10005254 to i32
  store i32 %v3_10005254, i32* %r9.global-to-local, align 4
  %v4_10005258 = icmp eq i32 %v1_10005238, %v0_10005294
  %v1_1000525c = add i32 %v0_1000525c, 1
  store i32 %v1_1000525c, i32* %r11.global-to-local, align 4
  br i1 %v3_10005250, label %dec_label_pc_1000526c, label %dec_label_pc_1000527c

dec_label_pc_1000526c:                            ; preds = %dec_label_pc_10005250
  %v3_1000526c = icmp eq i8 %v2_10005254, 9
  store i1 %v3_1000526c, i1* %cr7_eq.global-to-local, align 1
  switch i8 %v2_10005254, label %dec_label_pc_10005278 [
    i8 32, label %dec_label_pc_10005294
    i8 9, label %dec_label_pc_10005294
  ]

dec_label_pc_10005278:                            ; preds = %dec_label_pc_1000526c
  store i32 1, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000527c

dec_label_pc_1000527c:                            ; preds = %dec_label_pc_10005250, %dec_label_pc_10005278
  %v0_100052505 = phi i32 [ %v0_10005250, %dec_label_pc_10005250 ], [ 1, %dec_label_pc_10005278 ]
  %v1_1000527c = add nuw nsw i32 %v3_10005254, 208
  %v1_10005280 = urem i32 %v1_1000527c, 256
  store i32 %v1_10005280, i32* %r0.global-to-local, align 4
  %v2_10005284 = icmp ugt i32 %v1_10005280, 9
  %v3_10005284 = icmp eq i32 %v1_10005280, 9
  store i1 %v3_10005284, i1* %cr7_eq.global-to-local, align 1
  %v3_10005260.not = icmp ne i8 %v2_10005254, 46
  %brmerge.not = and i1 %v3_10005260.not, %v2_10005284
  %brmerge26 = or i1 %v4_10005258, %brmerge.not
  br i1 %brmerge26, label %dec_label_pc_100052d0, label %dec_label_pc_10005294

dec_label_pc_10005294:                            ; preds = %dec_label_pc_1000527c, %dec_label_pc_1000526c, %dec_label_pc_1000526c
  %v0_100052504 = phi i32 [ 0, %dec_label_pc_1000526c ], [ 0, %dec_label_pc_1000526c ], [ %v0_100052505, %dec_label_pc_1000527c ]
  %v1_10005294 = add i32 %v0_10005294, 1
  %v1_10005298 = add i32 %v0_10005298, -1
  store i32 %v1_10005298, i32* %ctr.global-to-local, align 4
  %v2_10005298 = icmp eq i32 %v1_10005298, 0
  br i1 %v2_10005298, label %dec_label_pc_1000529c, label %dec_label_pc_10005250

dec_label_pc_1000529c:                            ; preds = %dec_label_pc_10005294, %dec_label_pc_1000522c, %dec_label_pc_100051d4, %dec_label_pc_1000503c
  %v0_1000529c = call i32 @function_1000723c()
  %v1_100052a0 = urem i32 %v0_1000529c, 4
  store i32 %v1_100052a0, i32* %r3.global-to-local, align 4
  %v3_100052a4 = icmp eq i32 %v1_100052a0, 1
  store i1 %v3_100052a4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100052a4, label %dec_label_pc_10005688, label %dec_label_pc_100052ac

dec_label_pc_100052ac:                            ; preds = %dec_label_pc_1000529c
  %v1_100052a4 = icmp eq i32 %v1_100052a0, 0
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_100052a4, label %dec_label_pc_100056a0, label %dec_label_pc_100052b4

dec_label_pc_100052b4:                            ; preds = %dec_label_pc_100052ac
  %v2_100052b4 = icmp eq i32 %v1_100052a0, 3
  %v3_100052b4 = icmp eq i32 %v1_100052a0, 2
  store i1 %v3_100052b4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100052b4, label %dec_label_pc_10005694, label %dec_label_pc_100052bc

dec_label_pc_100052bc:                            ; preds = %dec_label_pc_100052b4
  store i1 %v2_100052b4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_100052b4, label %dec_label_pc_100052c4, label %dec_label_pc_10005300

dec_label_pc_100052c4:                            ; preds = %dec_label_pc_100052bc
  store i32 67240450, i32* @r21, align 4
  br label %dec_label_pc_10005300

dec_label_pc_100052d0:                            ; preds = %dec_label_pc_1000527c
  %v2_100052d0 = sub i32 %v0_10005294, %v0_10005224
  store i32 %v2_1000524c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100052e4.80 to i32), i32* @lr, align 4
  %v3_100052e0 = call i32 @function_1000a184(i32 %v2_1000524c, i32 %v2_10005244, i32 %v2_100052d0)
  %v2_100052e4 = ptrtoint i32* %stack_var_-2184 to i32
  %v2_100052e8 = add i32 %v2_100052d0, %v2_100052e4
  store i32 %v2_100052e8, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_100052f0 = add i32 %v2_100052e8, 4
  %v4_100052f0 = inttoptr i32 %v3_100052f0 to i8*
  store i8 0, i8* %v4_100052f0, align 1
  store i32 %v2_1000524c, i32* %r3.global-to-local, align 4
  store i32 268456700, i32* @lr, align 4
  %v1_100052f8 = call i32 @function_1000b4bc(i32 %v2_1000524c)
  store i32 %v1_100052f8, i32* %r3.global-to-local, align 4
  store i32 %v1_100052f8, i32* @r21, align 4
  br label %dec_label_pc_10005300

dec_label_pc_10005300:                            ; preds = %dec_label_pc_100052bc, %dec_label_pc_100056a0, %dec_label_pc_10005694, %dec_label_pc_10005688, %dec_label_pc_100052c4, %dec_label_pc_100052d0
  %v0_10005300 = load i32, i32* %r25.global-to-local, align 4
  %v3_10005300 = icmp eq i32 %v0_10005300, 0
  store i1 %v3_10005300, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10005300, label %dec_label_pc_10005628, label %dec_label_pc_10005308

dec_label_pc_10005308:                            ; preds = %dec_label_pc_10005300
  store i32 %v0_10005300, i32* %r3.global-to-local, align 4
  store i32 268456720, i32* @lr, align 4
  %v1_1000530c = inttoptr i32 %v0_10005300 to i8*
  %v2_1000530c = call i32 @function_1000a100(i8* %v1_1000530c)
  store i32 %v2_1000530c, i32* @r29, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268456740, i32* @lr, align 4
  %v3_10005320 = call i32 @function_1000b758(i32 2, i32 3, i32 17)
  store i32 %v3_10005320, i32* %r3.global-to-local, align 4
  %v3_10005324 = icmp eq i32 %v3_10005320, -1
  store i1 %v3_10005324, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10005320, i32* %r22.global-to-local, align 4
  br i1 %v3_10005324, label %dec_label_pc_10005628, label %dec_label_pc_10005330

dec_label_pc_10005330:                            ; preds = %dec_label_pc_10005308
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_1000533c = ptrtoint i32* %stack_var_-2184 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-2184, align 4
  store i32 268456780, i32* @lr, align 4
  %v5_10005348 = call i32 @function_1000b71c(i32 0, i32 3, i32 %v2_1000533c, i32 4, i32 4)
  store i32 %v5_10005348, i32* %r3.global-to-local, align 4
  %v3_1000534c = icmp eq i32 %v5_10005348, -1
  store i1 %v3_1000534c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000534c, label %dec_label_pc_10005620, label %dec_label_pc_10005354

dec_label_pc_10005354:                            ; preds = %dec_label_pc_10005330
  %v0_10005354 = load i32, i32* %r15.global-to-local, align 4
  %v1_10005354 = icmp slt i32 %v0_10005354, 0
  %v3_10005354 = icmp eq i32 %v0_10005354, 0
  store i1 %v1_10005354, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10005354, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1000535c = load i32, i32* %r19.global-to-local, align 4
  %v1_1000535c = urem i32 %v0_1000535c, 65536
  store i32 %v1_1000535c, i32* %r17.global-to-local, align 4
  %v0_10005360 = load i32, i32* %r20.global-to-local, align 4
  %v1_10005360 = urem i32 %v0_10005360, 65536
  store i32 %v1_10005360, i32* %r18.global-to-local, align 4
  %v0_10005364 = load i32, i32* %r23.global-to-local, align 4
  %v1_10005364 = urem i32 %v0_10005364, 65536
  store i32 %v1_10005364, i32* %r19.global-to-local, align 4
  store i32 0, i32* %stack_var_-2184, align 4
  %v0_1000536c = load i32, i32* %r24.global-to-local, align 4
  %v1_1000536c = urem i32 %v0_1000536c, 65536
  store i32 %v1_1000536c, i32* %r20.global-to-local, align 4
  %v0_10005370 = load i32, i32* %r26.global-to-local, align 4
  %v1_10005370 = urem i32 %v0_10005370, 256
  store i32 %v1_10005370, i32* %r23.global-to-local, align 4
  %tmp53 = icmp slt i32 %v0_10005354, 1
  %v1_10005614 = load i32, i32* @r29, align 4
  %v2_10005614 = add i32 %v1_10005614, %v1_10005370
  store i32 %v2_10005614, i32* @r24, align 4
  br i1 %tmp53, label %dec_label_pc_100054d8.preheader, label %dec_label_pc_10005378

dec_label_pc_10005378:                            ; preds = %dec_label_pc_10005354
  %v1_1000537c = icmp slt i32 %v1_10005614, 0
  %v3_1000537c = icmp eq i32 %v1_10005614, 0
  store i1 %v1_1000537c, i1* %cr3_lt.global-to-local, align 1
  store i1 %v3_1000537c, i1* %cr3_eq.global-to-local, align 1
  %v1_10005380 = urem i32 %v2_10005614, 65536
  %v0_10005384 = load i32, i32* %r27.global-to-local, align 4
  %v3_10005384 = icmp eq i32 %v0_10005384, 0
  store i1 %v3_10005384, i1* %cr2_eq.global-to-local, align 1
  %v1_10005388 = add nuw nsw i32 %v1_10005380, 27
  store i32 %v1_10005388, i32* %r0.global-to-local, align 4
  %v1_1000538c = add nuw nsw i32 %v1_10005380, 47
  store i32 %v1_1000538c, i32* %r9.global-to-local, align 4
  %fold = add i32 %v2_10005614, 47
  %v1_10005390 = urem i32 %fold, 65536
  store i32 %v1_10005390, i32* %r26.global-to-local, align 4
  %fold3 = add i32 %v2_10005614, 27
  %v1_10005394 = urem i32 %fold3, 65536
  store i32 %v1_10005394, i32* %r27.global-to-local, align 4
  %v1_10005398 = add i32 %v1_10005614, 1
  store i32 %v1_10005398, i32* @r28, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  %v4_100053e8 = sext i8 %v5_100050d4 to i32
  %v4_100053f0 = sext i8 %v5_1000510c to i32
  br label %dec_label_pc_100053a0

dec_label_pc_100053a0:                            ; preds = %dec_label_pc_100054b0, %dec_label_pc_10005378
  store i32 600, i32* %r3.global-to-local, align 4
  store i32 268456876, i32* @lr, align 4
  %v2_100053a8 = call i32 @function_1000bae4(i32 600, i32 1)
  store i32 %v2_100053a8, i32* %r3.global-to-local, align 4
  %v3_100053ac = load i32, i32* %stack_var_-2184, align 4
  store i32 %v3_100053ac, i32* %r0.global-to-local, align 4
  %v0_100053b0 = load i32, i32* @r31, align 4
  %v1_100053b0 = mul i32 %v0_100053b0, 4
  store i32 %v1_100053b0, i32* %r9.global-to-local, align 4
  %v2_100053b4 = load i32, i32* %r16.global-to-local, align 4
  %v3_100053b4 = add i32 %v2_100053b4, %v1_100053b0
  %v4_100053b4 = inttoptr i32 %v3_100053b4 to i32*
  store i32 %v2_100053a8, i32* %v4_100053b4, align 4
  %v0_100053b8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100053b8 = mul i32 %v0_100053b8, 4
  store i32 %v1_100053b8, i32* %r0.global-to-local, align 4
  %v0_100053bc = load i32, i32* %r16.global-to-local, align 4
  %v2_100053bc = add i32 %v0_100053bc, %v1_100053b8
  %v3_100053bc = inttoptr i32 %v2_100053bc to i32*
  %v4_100053bc = load i32, i32* %v3_100053bc, align 4
  store i32 %v4_100053bc, i32* %r11.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_100053c4 = inttoptr i32 %v4_100053bc to i32*
  %v2_100053c4 = load i32, i32* %v1_100053c4, align 4
  store i32 %v2_100053c4, i32* %r9.global-to-local, align 4
  %v1_100053c8 = add i32 %v4_100053bc, 20
  store i32 %v1_100053c8, i32* %r10.global-to-local, align 4
  %v0_100053cc = load i32, i32* %r17.global-to-local, align 4
  %v1_100053cc = trunc i32 %v0_100053cc to i16
  %v3_100053cc = add i32 %v4_100053bc, 4
  %v4_100053cc = inttoptr i32 %v3_100053cc to i16*
  store i16 %v1_100053cc, i16* %v4_100053cc, align 2
  %v0_100053d0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100053d0 = add i32 %v0_100053d0, 28
  store i32 %v1_100053d0, i32* %r8.global-to-local, align 4
  %v1_100053d4 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100053d4, i32* %r9.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_100053dc = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_100053dc, i32* %r9.global-to-local, align 4
  %v1_100053e0 = load i32, i32* %r11.global-to-local, align 4
  %v2_100053e0 = inttoptr i32 %v1_100053e0 to i32*
  store i32 %v1_100053dc, i32* %v2_100053e0, align 4
  %v0_100053e4 = load i32, i32* %r26.global-to-local, align 4
  %v1_100053e4 = trunc i32 %v0_100053e4 to i16
  %v2_100053e4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100053e4 = add i32 %v2_100053e4, 2
  %v4_100053e4 = inttoptr i32 %v3_100053e4 to i16*
  store i16 %v1_100053e4, i16* %v4_100053e4, align 2
  store i32 %v4_100053e8, i32* %r0.global-to-local, align 4
  %v2_100053ec = load i32, i32* %r11.global-to-local, align 4
  %v3_100053ec = add i32 %v2_100053ec, 1
  %v4_100053ec = inttoptr i32 %v3_100053ec to i8*
  store i8 %v5_100050d4, i8* %v4_100053ec, align 1
  store i32 %v4_100053f0, i32* %r7.global-to-local, align 4
  %v2_100053f4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100053f4 = add i32 %v2_100053f4, 8
  %v4_100053f4 = inttoptr i32 %v3_100053f4 to i8*
  store i8 %v5_1000510c, i8* %v4_100053f4, align 1
  %v0_100053f8 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_100053f8, label %dec_label_pc_10005404, label %dec_label_pc_100053fc

dec_label_pc_100053fc:                            ; preds = %dec_label_pc_100053a0
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10005400 = load i32, i32* %r11.global-to-local, align 4
  %v3_10005400 = add i32 %v2_10005400, 6
  %v4_10005400 = inttoptr i32 %v3_10005400 to i16*
  store i16 16384, i16* %v4_10005400, align 2
  br label %dec_label_pc_10005404

dec_label_pc_10005404:                            ; preds = %dec_label_pc_100053a0, %dec_label_pc_100053fc
  store i32 268566528, i32* %r7.global-to-local, align 4
  %v2_1000540c = load i32, i32* %r11.global-to-local, align 4
  %v3_1000540c = add i32 %v2_1000540c, 9
  %v4_1000540c = inttoptr i32 %v3_1000540c to i8*
  store i8 17, i8* %v4_1000540c, align 1
  %v0_10005410 = load i32, i32* %r11.global-to-local, align 4
  %v1_10005410 = add i32 %v0_10005410, 41
  store i32 %v1_10005410, i32* %r9.global-to-local, align 4
  %v0_10005414 = load i32, i32* %r27.global-to-local, align 4
  %v1_10005414 = trunc i32 %v0_10005414 to i16
  %v2_10005414 = load i32, i32* %r10.global-to-local, align 4
  %v3_10005414 = add i32 %v2_10005414, 4
  %v4_10005414 = inttoptr i32 %v3_10005414 to i16*
  store i16 %v1_10005414, i16* %v4_10005414, align 2
  %v0_10005418 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005418 = load i32, i32* %r23.global-to-local, align 4
  %v2_10005418 = add i32 %v1_10005418, %v0_10005418
  store i32 %v2_10005418, i32* %r30.global-to-local, align 4
  %v3_1000541c = load i32, i32* @global_var_1001e180.71, align 4
  store i32 %v3_1000541c, i32* %r0.global-to-local, align 4
  %v1_10005420 = add i32 %v2_10005418, 1
  store i32 %v1_10005420, i32* %r31.global-to-local, align 4
  %v0_10005424 = load i32, i32* %r19.global-to-local, align 4
  %v1_10005424 = trunc i32 %v0_10005424 to i16
  %v2_10005424 = load i32, i32* %r10.global-to-local, align 4
  %v3_10005424 = add i32 %v2_10005424, 2
  %v4_10005424 = inttoptr i32 %v3_10005424 to i16*
  store i16 %v1_10005424, i16* %v4_10005424, align 2
  %v0_10005428 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10005428, i32* %r3.global-to-local, align 4
  %v0_1000542c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000542c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000542c = add i32 %v1_1000542c, 12
  %v3_1000542c = inttoptr i32 %v2_1000542c to i32*
  store i32 %v0_1000542c, i32* %v3_1000542c, align 4
  store i32 256, i32* %r0.global-to-local, align 4
  %v0_10005434 = load i32, i32* %r18.global-to-local, align 4
  %v1_10005434 = trunc i32 %v0_10005434 to i16
  %v2_10005434 = load i32, i32* %r11.global-to-local, align 4
  %v3_10005434 = add i32 %v2_10005434, 20
  %v4_10005434 = inttoptr i32 %v3_10005434 to i16*
  store i16 %v1_10005434, i16* %v4_10005434, align 2
  %v0_10005438 = load i32, i32* %r25.global-to-local, align 4
  %v0_1000543c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000543c = trunc i32 %v0_1000543c to i16
  %v2_1000543c = load i32, i32* %r8.global-to-local, align 4
  %v3_1000543c = add i32 %v2_1000543c, 2
  %v4_1000543c = inttoptr i32 %v3_1000543c to i16*
  store i16 %v1_1000543c, i16* %v4_1000543c, align 2
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10005444 = load i32, i32* %r8.global-to-local, align 4
  %v3_10005444 = add i32 %v2_10005444, 4
  %v4_10005444 = inttoptr i32 %v3_10005444 to i16*
  store i16 1, i16* %v4_10005444, align 2
  %v0_10005448 = load i32, i32* @r28, align 4
  %v0_1000544c = load i32, i32* @r21, align 4
  %v1_1000544c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000544c = add i32 %v1_1000544c, 16
  %v3_1000544c = inttoptr i32 %v2_1000544c to i32*
  store i32 %v0_1000544c, i32* %v3_1000544c, align 4
  %v0_10005450 = load i32, i32* %r20.global-to-local, align 4
  %v1_10005450 = trunc i32 %v0_10005450 to i16
  %v2_10005450 = load i32, i32* %r11.global-to-local, align 4
  %v3_10005450 = add i32 %v2_10005450, 28
  %v4_10005450 = inttoptr i32 %v3_10005450 to i16*
  store i16 %v1_10005450, i16* %v4_10005450, align 2
  %v0_10005454 = load i32, i32* %r23.global-to-local, align 4
  %v1_10005454 = trunc i32 %v0_10005454 to i8
  %v2_10005454 = load i32, i32* %r11.global-to-local, align 4
  %v3_10005454 = add i32 %v2_10005454, 40
  %v4_10005454 = inttoptr i32 %v3_10005454 to i8*
  store i8 %v1_10005454, i8* %v4_10005454, align 1
  store i32 268457052, i32* @lr, align 4
  %v3_10005458 = call i32 @function_1000a184(i32 %v0_10005428, i32 %v0_10005438, i32 %v0_10005448)
  store i32 %v3_10005458, i32* %r3.global-to-local, align 4
  %v0_1000545c = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_1000545c = load i1, i1* %cr3_lt.global-to-local, align 1
  %v2_1000545c = or i1 %v0_1000545c, %v1_1000545c
  br i1 %v2_1000545c, label %dec_label_pc_100054a8, label %dec_label_pc_10005460

dec_label_pc_10005460:                            ; preds = %dec_label_pc_10005404
  %v0_10005460 = load i32, i32* @r29, align 4
  store i32 %v0_10005460, i32* %ctr.global-to-local, align 4
  %v0_10005464 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10005464, i32* %r3.global-to-local, align 4
  %v0_10005468 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_10005468, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10005488

dec_label_pc_10005478:                            ; preds = %dec_label_pc_10005488
  %v1_10005478 = urem i32 %v1_1000548c, 256
  br label %dec_label_pc_1000547c

dec_label_pc_1000547c:                            ; preds = %dec_label_pc_10005498, %dec_label_pc_10005478
  %v0_10005484 = phi i32 [ %v0_10005484.pre, %dec_label_pc_10005498 ], [ %v0_1000548418, %dec_label_pc_10005478 ]
  %v0_10005480 = phi i32 [ %v0_1000549c, %dec_label_pc_10005498 ], [ %v0_1000548016, %dec_label_pc_10005478 ]
  %v2_1000549813 = phi i32 [ %v0_1000549c, %dec_label_pc_10005498 ], [ %v2_10005498, %dec_label_pc_10005478 ]
  %v0_1000547c = phi i32 [ %v0_1000547c.pre, %dec_label_pc_10005498 ], [ %v0_10005488, %dec_label_pc_10005478 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_10005498 ], [ %v1_10005478, %dec_label_pc_10005478 ]
  store i32 %storemerge, i32* %r8.global-to-local, align 4
  %v1_1000547c = add i32 %v0_1000547c, 1
  store i32 %v1_1000547c, i32* %r10.global-to-local, align 4
  %v1_10005480 = add i32 %v0_10005480, 1
  store i32 %v1_10005480, i32* %r3.global-to-local, align 4
  %v1_10005484 = add i32 %v0_10005484, -1
  store i32 %v1_10005484, i32* %ctr.global-to-local, align 4
  %v2_10005484 = icmp eq i32 %v1_10005484, 0
  br i1 %v2_10005484, label %dec_label_pc_100054b0.loopexit, label %dec_label_pc_10005488

dec_label_pc_10005488:                            ; preds = %dec_label_pc_1000547c, %dec_label_pc_10005460
  %v0_1000548418 = phi i32 [ %v1_10005484, %dec_label_pc_1000547c ], [ %v0_10005460, %dec_label_pc_10005460 ]
  %v0_1000548016 = phi i32 [ %v1_10005480, %dec_label_pc_1000547c ], [ %v0_10005464, %dec_label_pc_10005460 ]
  %v2_10005498 = phi i32 [ %v2_1000549813, %dec_label_pc_1000547c ], [ %v0_10005468, %dec_label_pc_10005460 ]
  %v0_10005498 = phi i32 [ %storemerge, %dec_label_pc_1000547c ], [ 0, %dec_label_pc_10005460 ]
  %v0_10005488 = phi i32 [ %v1_1000547c, %dec_label_pc_1000547c ], [ 0, %dec_label_pc_10005460 ]
  %v1_10005488 = load i32, i32* %r25.global-to-local, align 4
  %v2_10005488 = add i32 %v1_10005488, %v0_10005488
  %v3_10005488 = inttoptr i32 %v2_10005488 to i8*
  %v4_10005488 = load i8, i8* %v3_10005488, align 1
  %v5_10005488 = zext i8 %v4_10005488 to i32
  store i32 %v5_10005488, i32* %r0.global-to-local, align 4
  %v1_1000548c = add nsw i32 %v0_10005498, 1
  store i32 %v1_1000548c, i32* %r11.global-to-local, align 4
  %v3_10005490 = icmp eq i8 %v4_10005488, 46
  store i1 %v3_10005490, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10005490, label %dec_label_pc_10005498, label %dec_label_pc_10005478

dec_label_pc_10005498:                            ; preds = %dec_label_pc_10005488
  %v1_10005498 = trunc i32 %v0_10005498 to i8
  %v3_10005498 = inttoptr i32 %v2_10005498 to i8*
  store i8 %v1_10005498, i8* %v3_10005498, align 1
  %v0_1000549c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_1000549c, i32* %r9.global-to-local, align 4
  %v0_1000547c.pre = load i32, i32* %r10.global-to-local, align 4
  %v0_10005484.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000547c

dec_label_pc_100054a8:                            ; preds = %dec_label_pc_10005404
  %v0_100054a8 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_100054a8, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_100054b0

dec_label_pc_100054b0.loopexit:                   ; preds = %dec_label_pc_1000547c
  %extract.t = trunc i32 %storemerge to i8
  br label %dec_label_pc_100054b0

dec_label_pc_100054b0:                            ; preds = %dec_label_pc_100054b0.loopexit, %dec_label_pc_100054a8
  %v2_100054b0 = phi i32 [ %v2_1000549813, %dec_label_pc_100054b0.loopexit ], [ %v0_100054a8, %dec_label_pc_100054a8 ]
  %v0_100054b0.off0 = phi i8 [ %extract.t, %dec_label_pc_100054b0.loopexit ], [ 0, %dec_label_pc_100054a8 ]
  %v3_100054b0 = inttoptr i32 %v2_100054b0 to i8*
  store i8 %v0_100054b0.off0, i8* %v3_100054b0, align 1
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_100054b8 = load i32, i32* %r30.global-to-local, align 4
  %v1_100054b8 = load i32, i32* @r29, align 4
  %v2_100054b8 = add i32 %v1_100054b8, %v0_100054b8
  store i32 %v2_100054b8, i32* %r9.global-to-local, align 4
  %v3_100054bc = load i32, i32* %stack_var_-2184, align 4
  store i32 %v3_100054bc, i32* %r11.global-to-local, align 4
  %v3_100054c0 = add i32 %v2_100054b8, 4
  %v4_100054c0 = inttoptr i32 %v3_100054c0 to i16*
  store i16 1, i16* %v4_100054c0, align 2
  %v0_100054c4 = load i32, i32* %r11.global-to-local, align 4
  %v1_100054c4 = add i32 %v0_100054c4, 1
  store i32 %v1_100054c4, i32* %r31.global-to-local, align 4
  %v0_100054c8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100054c8 = trunc i32 %v0_100054c8 to i16
  %v2_100054c8 = load i32, i32* %r9.global-to-local, align 4
  %v3_100054c8 = add i32 %v2_100054c8, 2
  %v4_100054c8 = inttoptr i32 %v3_100054c8 to i16*
  store i16 %v1_100054c8, i16* %v4_100054c8, align 2
  %v0_100054cc = load i32, i32* %r31.global-to-local, align 4
  %v1_100054cc = load i32, i32* %r15.global-to-local, align 4
  %v2_100054cc = icmp slt i32 %v0_100054cc, %v1_100054cc
  %v4_100054cc = icmp eq i32 %v0_100054cc, %v1_100054cc
  store i1 %v4_100054cc, i1* %cr7_eq.global-to-local, align 1
  store i32 %v0_100054cc, i32* %stack_var_-2184, align 4
  br i1 %v2_100054cc, label %dec_label_pc_100053a0, label %dec_label_pc_100054d8.preheader.loopexit

dec_label_pc_100054d8.preheader.loopexit:         ; preds = %dec_label_pc_100054b0
  %v0_100054d8.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100054d8.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_100054d8.preheader

dec_label_pc_100054d8.preheader:                  ; preds = %dec_label_pc_100055d0, %dec_label_pc_10005354, %dec_label_pc_100054d8.preheader.loopexit
  %v1_100054d8 = phi i1 [ %v1_10005354, %dec_label_pc_10005354 ], [ %v1_100054d8.pre, %dec_label_pc_100054d8.preheader.loopexit ], [ %v1_100055d0, %dec_label_pc_100055d0 ]
  %v0_100054d8 = phi i1 [ %v3_10005354, %dec_label_pc_10005354 ], [ %v0_100054d8.pre, %dec_label_pc_100054d8.preheader.loopexit ], [ %v0_100055d0, %dec_label_pc_100055d0 ]
  %v2_100054d8 = or i1 %v1_100054d8, %v0_100054d8
  br label %dec_label_pc_100054d8

dec_label_pc_100054d8:                            ; preds = %dec_label_pc_100054d8.preheader, %dec_label_pc_100054d8
  br i1 %v2_100054d8, label %dec_label_pc_100054d8, label %dec_label_pc_100054dc

dec_label_pc_100054dc:                            ; preds = %dec_label_pc_100054d8, %dec_label_pc_100055d0
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 65535, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-2184, align 4
  %v0_100054ec = load i32, i32* %r19.global-to-local, align 4
  %v4_100054ec = icmp eq i32 %v0_100054ec, 65535
  store i1 %v4_100054ec, i1* %cr7_eq.global-to-local, align 1
  %v0_100054f0 = load i32, i32* %r18.global-to-local, align 4
  %v2_100054f0 = icmp slt i32 %v0_100054f0, 65535
  %v4_100054f0 = icmp eq i32 %v0_100054f0, 65535
  store i1 %v2_100054f0, i1* %cr3_lt.global-to-local, align 1
  store i1 %v4_100054f0, i1* %cr3_eq.global-to-local, align 1
  %v0_100054f4 = load i32, i32* %r20.global-to-local, align 4
  %v4_100054f4 = icmp eq i32 %v0_100054f4, 65535
  store i1 %v4_100054f4, i1* %cr2_eq.global-to-local, align 1
  %v0_100054f8 = load i32, i32* @r24, align 4
  %v1_100054f8 = add i32 %v0_100054f8, 27
  store i32 %v1_100054f8, i32* @r30, align 4
  %v0_100054fc = call i32 @__asm_mfcr()
  store i32 %v0_100054fc, i32* %r3.global-to-local, align 4
  %v1_10005500 = mul i32 %v0_100054fc, 268435456
  store i32 %v1_10005500, i32* @r26, align 4
  %v0_10005504 = load i32, i32* %r17.global-to-local, align 4
  %v1_10005504 = load i32, i32* %r0.global-to-local, align 4
  %v4_10005504 = icmp eq i32 %v0_10005504, %v1_10005504
  store i1 %v4_10005504, i1* %cr7_eq.global-to-local, align 1
  %v0_10005508 = load i32, i32* @r24, align 4
  %v1_10005508 = add i32 %v0_10005508, 47
  store i32 %v1_10005508, i32* @r31, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10005510 = call i32 @__asm_mfcr()
  store i32 %v0_10005510, i32* %r3.global-to-local, align 4
  %v1_10005514 = mul i32 %v0_10005510, 268435456
  store i32 %v1_10005514, i32* %r27.global-to-local, align 4
  store i32 0, i32* @r25, align 4
  %v0_1000551c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000551c

dec_label_pc_1000551c:                            ; preds = %dec_label_pc_10005550.dec_label_pc_1000551c_crit_edge, %dec_label_pc_100054dc
  %v0_10005520 = phi i32 [ %v0_10005520.pre, %dec_label_pc_10005550.dec_label_pc_1000551c_crit_edge ], [ %v1_10005514, %dec_label_pc_100054dc ]
  %v0_1000551c = phi i32 [ %v1_100055c0, %dec_label_pc_10005550.dec_label_pc_1000551c_crit_edge ], [ %v0_1000551c.pre, %dec_label_pc_100054dc ]
  %v1_1000551c = mul i32 %v0_1000551c, 4
  store i32 %v1_1000551c, i32* %r0.global-to-local, align 4
  %v1_10005520 = mul i32 %v0_10005520, 16
  %v2_10005520 = udiv i32 %v0_10005520, 268435456
  %v3_10005520 = or i32 %v2_10005520, %v1_10005520
  store i32 %v3_10005520, i32* %r27.global-to-local, align 4
  %v1_10005524 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10005520)
  %v1_10005528 = mul nuw i32 %v2_10005520, 268435456
  %v2_10005528 = urem i32 %v0_10005520, 268435456
  %v3_10005528 = or i32 %v1_10005528, %v2_10005528
  store i32 %v3_10005528, i32* @r27, align 4
  %v0_1000552c = load i32, i32* %r16.global-to-local, align 4
  %v1_1000552c = load i32, i32* %r0.global-to-local, align 4
  %v2_1000552c = add i32 %v1_1000552c, %v0_1000552c
  %v3_1000552c = inttoptr i32 %v2_1000552c to i32*
  %v4_1000552c = load i32, i32* %v3_1000552c, align 4
  store i32 %v4_1000552c, i32* @r29, align 4
  %v1_10005530 = add i32 %v4_1000552c, 20
  store i32 %v1_10005530, i32* @r28, align 4
  %v0_10005534 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10005534, label %dec_label_pc_100055d8, label %dec_label_pc_10005538

dec_label_pc_10005538:                            ; preds = %dec_label_pc_1000551c
  %v0_10005538 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10005538, label %dec_label_pc_100055e4, label %dec_label_pc_1000553c

dec_label_pc_1000553c:                            ; preds = %dec_label_pc_100055d8, %dec_label_pc_10005538
  %v0_1000553c = load i32, i32* @r26, align 4
  %v1_1000553c = mul i32 %v0_1000553c, 16
  %v2_1000553c = udiv i32 %v0_1000553c, 268435456
  %v3_1000553c = or i32 %v2_1000553c, %v1_1000553c
  store i32 %v3_1000553c, i32* %r26.global-to-local, align 4
  %v1_10005540 = call %0 @__asm_mtcrf(i32 1, i32 %v3_1000553c)
  %v1_10005544 = mul nuw i32 %v2_1000553c, 268435456
  %v2_10005544 = urem i32 %v0_1000553c, 268435456
  %v3_10005544 = or i32 %v1_10005544, %v2_10005544
  store i32 %v3_10005544, i32* @r26, align 4
  %v0_10005548 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10005548, label %dec_label_pc_100055fc, label %dec_label_pc_1000554c

dec_label_pc_1000554c:                            ; preds = %dec_label_pc_100055e4, %dec_label_pc_1000553c
  %v0_1000554c = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_1000554c, label %dec_label_pc_10005608, label %dec_label_pc_10005550

dec_label_pc_10005550:                            ; preds = %dec_label_pc_100055fc, %dec_label_pc_1000554c, %dec_label_pc_10005608
  %v0_10005550 = load i32, i32* @r29, align 4
  %v1_10005550 = add i32 %v0_10005550, 41
  store i32 %v1_10005550, i32* %r3.global-to-local, align 4
  %v0_10005554 = load i32, i32* %r23.global-to-local, align 4
  store i32 268457308, i32* @lr, align 4
  %v2_10005558 = inttoptr i32 %v1_10005550 to i8*
  %v3_10005558 = call i32 @function_100072fc(i8* %v2_10005558, i32 %v0_10005554)
  %v0_1000555c = load i32, i32* @r25, align 4
  %v1_1000555c = trunc i32 %v0_1000555c to i16
  %v2_1000555c = load i32, i32* @r29, align 4
  %v3_1000555c = add i32 %v2_1000555c, 10
  %v4_1000555c = inttoptr i32 %v3_1000555c to i16*
  store i16 %v1_1000555c, i16* %v4_1000555c, align 2
  %v0_10005564 = load i32, i32* @r29, align 4
  store i32 %v0_10005564, i32* @r3, align 4
  %v2_10005568 = call i32 @function_100056ac(i32 %v0_10005564, i32 20)
  %v3_10005568 = trunc i32 %v2_10005568 to i16
  %v0_1000556c = load i32, i32* @r28, align 4
  store i32 %v0_1000556c, i32* @r4, align 4
  %v3_10005570 = load i32, i32* @r29, align 4
  %v4_10005570 = add i32 %v3_10005570, 10
  %v5_10005570 = inttoptr i32 %v4_10005570 to i16*
  store i16 %v3_10005568, i16* %v5_10005570, align 2
  %v0_10005574 = load i32, i32* @r30, align 4
  %v0_10005578 = load i32, i32* @r25, align 4
  %v1_10005578 = trunc i32 %v0_10005578 to i16
  %v2_10005578 = load i32, i32* @r28, align 4
  %v3_10005578 = add i32 %v2_10005578, 6
  %v4_10005578 = inttoptr i32 %v3_10005578 to i16*
  store i16 %v1_10005578, i16* %v4_10005578, align 2
  %v0_1000557c = load i32, i32* @r29, align 4
  store i32 %v0_1000557c, i32* %r3.global-to-local, align 4
  %v0_10005580 = load i32, i32* @r28, align 4
  %v1_10005580 = add i32 %v0_10005580, 4
  %v2_10005580 = inttoptr i32 %v1_10005580 to i16*
  %v3_10005580 = load i16, i16* %v2_10005580, align 2
  %v4_10005580 = zext i16 %v3_10005580 to i32
  %v4_10005584 = call i32 @function_10005710(i32 %v0_1000557c, i32 %v0_1000556c, i32 %v4_10005580, i32 %v0_10005574)
  %v5_10005584 = trunc i32 %v4_10005584 to i16
  store i32 %v4_10005584, i32* %r3.global-to-local, align 4
  %v3_10005588 = load i32, i32* %stack_var_-2184, align 4
  store i32 %v3_10005588, i32* %r7.global-to-local, align 4
  %v0_1000558c = load i32, i32* @r28, align 4
  %v1_1000558c = add i32 %v0_1000558c, 2
  %v2_1000558c = inttoptr i32 %v1_1000558c to i16*
  %v3_1000558c = load i16, i16* %v2_1000558c, align 2
  %v4_1000558c = zext i16 %v3_1000558c to i32
  store i32 %v4_1000558c, i32* %r0.global-to-local, align 4
  %v0_10005590 = load i32, i32* @r29, align 4
  %v1_10005594 = mul i32 %v3_10005588, 24
  store i32 %v1_10005594, i32* %r7.global-to-local, align 4
  %v4_10005598 = add i32 %v0_1000558c, 6
  %v5_10005598 = inttoptr i32 %v4_10005598 to i16*
  store i16 %v5_10005584, i16* %v5_10005598, align 2
  %v0_1000559c = load i32, i32* @r31, align 4
  %v0_100055a0 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_100055a0, i32* %r3.global-to-local, align 4
  %v0_100055a4 = load i32, i32* %r7.global-to-local, align 4
  %v1_100055a4 = load i32, i32* %r14.global-to-local, align 4
  %v2_100055a4 = add i32 %v1_100055a4, %v0_100055a4
  store i32 %v2_100055a4, i32* %r7.global-to-local, align 4
  %v0_100055ac = load i32, i32* %r0.global-to-local, align 4
  %v1_100055ac = trunc i32 %v0_100055ac to i16
  %v3_100055ac = add i32 %v2_100055a4, 2
  %v4_100055ac = inttoptr i32 %v3_100055ac to i16*
  store i16 %v1_100055ac, i16* %v4_100055ac, align 2
  store i32 16, i32* %r8.global-to-local, align 4
  %v0_100055b4 = load i32, i32* @r21, align 4
  %v2_100055b4 = add i32 %v2_100055a4, 4
  %v3_100055b4 = inttoptr i32 %v2_100055b4 to i32*
  store i32 %v0_100055b4, i32* %v3_100055b4, align 4
  store i32 268457404, i32* @lr, align 4
  %v6_100055b8 = call i32 @function_1000b6dc(i32 %v0_100055a0, i32 %v0_10005590, i32 %v0_1000559c, i32 16384, i32 %v2_100055a4, i32 16)
  store i32 %v6_100055b8, i32* %r3.global-to-local, align 4
  %v3_100055bc = load i32, i32* %stack_var_-2184, align 4
  store i32 %v3_100055bc, i32* %r9.global-to-local, align 4
  %v1_100055c0 = add i32 %v3_100055bc, 1
  store i32 %v1_100055c0, i32* %r0.global-to-local, align 4
  %v1_100055c4 = load i32, i32* %r15.global-to-local, align 4
  %v2_100055c4 = icmp slt i32 %v1_100055c0, %v1_100055c4
  %v4_100055c4 = icmp eq i32 %v1_100055c0, %v1_100055c4
  store i1 %v4_100055c4, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_100055c0, i32* %stack_var_-2184, align 4
  br i1 %v2_100055c4, label %dec_label_pc_10005550.dec_label_pc_1000551c_crit_edge, label %dec_label_pc_100055d0

dec_label_pc_10005550.dec_label_pc_1000551c_crit_edge: ; preds = %dec_label_pc_10005550
  %v0_10005520.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_1000551c

dec_label_pc_100055d0:                            ; preds = %dec_label_pc_10005550
  %v0_100055d0 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100055d0 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_100055d0 = or i1 %v0_100055d0, %v1_100055d0
  br i1 %v2_100055d0, label %dec_label_pc_100054d8.preheader, label %dec_label_pc_100054dc

dec_label_pc_100055d8:                            ; preds = %dec_label_pc_1000551c
  %v0_100055d8 = call i32 @function_1000723c()
  %v1_100055d8 = trunc i32 %v0_100055d8 to i16
  store i32 %v0_100055d8, i32* %r3.global-to-local, align 4
  %v3_100055dc = load i32, i32* @r29, align 4
  %v4_100055dc = add i32 %v3_100055dc, 4
  %v5_100055dc = inttoptr i32 %v4_100055dc to i16*
  store i16 %v1_100055d8, i16* %v5_100055dc, align 2
  %v0_100055e0 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_100055e0, label %dec_label_pc_100055e4, label %dec_label_pc_1000553c

dec_label_pc_100055e4:                            ; preds = %dec_label_pc_100055d8, %dec_label_pc_10005538
  %v0_100055e4 = call i32 @function_1000723c()
  %v1_100055e4 = trunc i32 %v0_100055e4 to i16
  store i32 %v0_100055e4, i32* %r3.global-to-local, align 4
  %v0_100055e8 = load i32, i32* @r26, align 4
  %v1_100055e8 = mul i32 %v0_100055e8, 16
  %v2_100055e8 = udiv i32 %v0_100055e8, 268435456
  %v3_100055e8 = or i32 %v2_100055e8, %v1_100055e8
  store i32 %v3_100055e8, i32* %r26.global-to-local, align 4
  %v1_100055ec = call %0 @__asm_mtcrf(i32 1, i32 %v3_100055e8)
  %v1_100055f0 = mul nuw i32 %v2_100055e8, 268435456
  %v2_100055f0 = urem i32 %v0_100055e8, 268435456
  %v3_100055f0 = or i32 %v1_100055f0, %v2_100055f0
  store i32 %v3_100055f0, i32* @r26, align 4
  %v3_100055f4 = load i32, i32* @r29, align 4
  %v4_100055f4 = add i32 %v3_100055f4, 20
  %v5_100055f4 = inttoptr i32 %v4_100055f4 to i16*
  store i16 %v1_100055e4, i16* %v5_100055f4, align 2
  %v0_100055f8 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_100055f8, label %dec_label_pc_100055fc, label %dec_label_pc_1000554c

dec_label_pc_100055fc:                            ; preds = %dec_label_pc_100055e4, %dec_label_pc_1000553c
  %v0_100055fc = call i32 @function_1000723c()
  %v1_100055fc = trunc i32 %v0_100055fc to i16
  store i32 %v0_100055fc, i32* %r3.global-to-local, align 4
  %v3_10005600 = load i32, i32* @r28, align 4
  %v4_10005600 = add i32 %v3_10005600, 2
  %v5_10005600 = inttoptr i32 %v4_10005600 to i16*
  store i16 %v1_100055fc, i16* %v5_10005600, align 2
  %v0_10005604 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10005604, label %dec_label_pc_10005608, label %dec_label_pc_10005550

dec_label_pc_10005608:                            ; preds = %dec_label_pc_100055fc, %dec_label_pc_1000554c
  %v0_10005608 = call i32 @function_1000723c()
  %v1_10005608 = trunc i32 %v0_10005608 to i16
  store i32 %v0_10005608, i32* %r3.global-to-local, align 4
  %v3_1000560c = load i32, i32* @r29, align 4
  %v4_1000560c = add i32 %v3_1000560c, 28
  %v5_1000560c = inttoptr i32 %v4_1000560c to i16*
  store i16 %v1_10005608, i16* %v5_1000560c, align 2
  br label %dec_label_pc_10005550

dec_label_pc_10005620:                            ; preds = %dec_label_pc_10005330
  %v0_10005620 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10005620, i32* %r3.global-to-local, align 4
  store i32 268457512, i32* @lr, align 4
  %v0_10005624 = call i32 @function_1000a98c()
  store i32 %v0_10005624, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10005628

dec_label_pc_10005628:                            ; preds = %dec_label_pc_10005308, %dec_label_pc_10005300, %dec_label_pc_10005620
  store i32 %v0_10005054, i32* %r0.global-to-local, align 4
  %v1_1000563c = call %0 @__asm_mtcrf(i32 56, i32 %v0_10005044)
  store i32 %v0_10005074, i32* %r24.global-to-local, align 4
  store i32 %v0_10005078, i32* %r25.global-to-local, align 4
  store i32 %v0_1000507c, i32* %r26.global-to-local, align 4
  store i32 %v0_10005080, i32* %r27.global-to-local, align 4
  store i32 %v0_10005084, i32* %r28.global-to-local, align 4
  store i32 %v0_100050a8, i32* %r30.global-to-local, align 4
  store i32 %v0_10005094, i32* %r31.global-to-local, align 4
  %v0_10005684 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10005684

dec_label_pc_10005688:                            ; preds = %dec_label_pc_1000529c
  store i32 1246898730, i32* @r21, align 4
  br label %dec_label_pc_10005300

dec_label_pc_10005694:                            ; preds = %dec_label_pc_100052b4
  store i32 1074151430, i32* @r21, align 4
  br label %dec_label_pc_10005300

dec_label_pc_100056a0:                            ; preds = %dec_label_pc_100052ac
  store i32 134744072, i32* @r21, align 4
  br label %dec_label_pc_10005300

; uselistorder directives
  uselistorder i32 %v0_10005608, { 1, 0 }
  uselistorder i32 %v0_100055fc, { 1, 0 }
  uselistorder i32 %v0_100055e8, { 2, 1, 0 }
  uselistorder i32 %v0_100055e4, { 1, 0 }
  uselistorder i32 %v0_100055d8, { 1, 0 }
  uselistorder i1 %v1_100055d0, { 1, 0 }
  uselistorder i1 %v0_100055d0, { 1, 0 }
  uselistorder i32 %v1_100055c0, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v4_10005584, { 1, 0 }
  uselistorder i32 %v0_1000553c, { 2, 1, 0 }
  uselistorder i32 %v0_10005520, { 2, 1, 0 }
  uselistorder i32 %v1_10005514, { 1, 0 }
  uselistorder i32 %v0_1000549c, { 2, 0, 1 }
  uselistorder i32 %v1_1000548c, { 1, 0 }
  uselistorder i32 %v1_10005484, { 0, 2, 1 }
  uselistorder i32 %v1_100053b8, { 1, 0 }
  uselistorder i32 %v1_100053b0, { 1, 0 }
  uselistorder i32 %v2_10005614, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10005614, { 1, 2, 3, 0 }
  uselistorder i32 %v1_10005370, { 1, 0 }
  uselistorder i32 %v0_10005300, { 1, 0, 2 }
  uselistorder i1 %v2_100052b4, { 1, 0 }
  uselistorder i32 %v1_100052a0, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v1_10005298, { 2, 1, 0 }
  uselistorder i32 %v1_10005280, { 1, 2, 0 }
  uselistorder i32 %v1_1000525c, { 1, 0 }
  uselistorder i32 %v0_10005250, { 1, 0 }
  uselistorder i32 %v2_1000524c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_1000522c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10005224, { 1, 2, 0, 3, 5, 4, 6 }
  uselistorder i32 %v0_100051cc, { 1, 0, 2, 3 }
  uselistorder i8 %v5_1000510c, { 1, 0 }
  uselistorder i8 %v5_100050d4, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7, 8 }
  uselistorder i32* %r3.global-to-local, { 29, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 3, 2, 16, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 37, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 1, 0 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 3, 4, 10, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 24, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i32* %ctr.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i1* %cr7_eq.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder i32 41, { 4, 5, 6, 0, 1, 7, 2, 8, 3, 9 }
  uselistorder i32 47, { 1, 0, 2, 3, 4 }
  uselistorder i32 (i32)* @function_1000b4bc, { 1, 0 }
  uselistorder i32 (i32, i32*, i32, i32)* @function_1000235c, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 88, 89, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 84, 85, 86, 87, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 90, 91 }
  uselistorder label %dec_label_pc_10005628, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10005550, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100054dc, { 1, 0 }
  uselistorder label %dec_label_pc_100054d8, { 1, 0 }
  uselistorder label %dec_label_pc_100054d8.preheader, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10005404, { 1, 0 }
  uselistorder label %dec_label_pc_10005300, { 1, 2, 3, 5, 4, 0 }
  uselistorder label %dec_label_pc_1000527c, { 1, 0 }
}

define i32 @function_100056ac(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100056ac:
  %tmp = or i32 %arg1, 1
  %tmp8 = icmp eq i32 %tmp, 1
  br i1 %tmp8, label %dec_label_pc_100056e0, label %dec_label_pc_100056b8

dec_label_pc_100056b8:                            ; preds = %dec_label_pc_100056ac
  %v1_100056b8 = add i32 %arg1, -2
  %v1_100056bc = udiv i32 %v1_100056b8, 2
  %v1_100056c0 = add nuw i32 %v1_100056bc, 1
  %v0_100056cc.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_100056cc

dec_label_pc_100056cc:                            ; preds = %dec_label_pc_100056cc, %dec_label_pc_100056b8
  %v0_100056dc = phi i32 [ %v1_100056dc, %dec_label_pc_100056cc ], [ %v1_100056c0, %dec_label_pc_100056b8 ]
  %v0_100056d8 = phi i32 [ %v2_100056d8, %dec_label_pc_100056cc ], [ 0, %dec_label_pc_100056b8 ]
  %v0_100056d4 = phi i32 [ %v1_100056d4, %dec_label_pc_100056cc ], [ %v0_100056cc.pre, %dec_label_pc_100056b8 ]
  %v1_100056cc = inttoptr i32 %v0_100056d4 to i16*
  %v2_100056cc = load i16, i16* %v1_100056cc, align 2
  %v3_100056cc = zext i16 %v2_100056cc to i32
  %v1_100056d4 = add i32 %v0_100056d4, 2
  store i32 %v1_100056d4, i32* @r3, align 4
  %v2_100056d8 = add i32 %v3_100056cc, %v0_100056d8
  %v1_100056dc = add i32 %v0_100056dc, -1
  %v2_100056dc = icmp eq i32 %v1_100056dc, 0
  br i1 %v2_100056dc, label %dec_label_pc_100056e0.loopexit, label %dec_label_pc_100056cc

dec_label_pc_100056e0.loopexit:                   ; preds = %dec_label_pc_100056cc
  %tmp11 = mul i32 %v1_100056bc, -2
  %tmp10 = add i32 %v1_100056b8, %tmp11
  br label %dec_label_pc_100056e0

dec_label_pc_100056e0:                            ; preds = %dec_label_pc_100056e0.loopexit, %dec_label_pc_100056ac
  %v0_100056ec = phi i32 [ 0, %dec_label_pc_100056ac ], [ %v2_100056d8, %dec_label_pc_100056e0.loopexit ]
  %v0_100056e0 = phi i32 [ %arg1, %dec_label_pc_100056ac ], [ %tmp10, %dec_label_pc_100056e0.loopexit ]
  %v3_100056e0 = icmp eq i32 %v0_100056e0, 1
  br i1 %v3_100056e0, label %dec_label_pc_100056e8, label %dec_label_pc_100056f0

dec_label_pc_100056e8:                            ; preds = %dec_label_pc_100056e0
  %v0_100056e8 = load i32, i32* @r3, align 4
  %v1_100056e8 = add i32 %v0_100056e8, 1
  %v2_100056e8 = inttoptr i32 %v1_100056e8 to i8*
  %v3_100056e8 = load i8, i8* %v2_100056e8, align 1
  %v4_100056e8 = zext i8 %v3_100056e8 to i32
  %v2_100056ec = add i32 %v4_100056e8, %v0_100056ec
  br label %dec_label_pc_100056f0

dec_label_pc_100056f0:                            ; preds = %dec_label_pc_100056e0, %dec_label_pc_100056e8
  %v0_100056f0 = phi i32 [ %v0_100056ec, %dec_label_pc_100056e0 ], [ %v2_100056ec, %dec_label_pc_100056e8 ]
  %v1_100056f0 = urem i32 %v0_100056f0, 65536
  %v1_100056f4 = udiv i32 %v0_100056f0, 65536
  %v2_100056f8 = add nuw nsw i32 %v1_100056f0, %v1_100056f4
  %v1_100056fc = udiv i32 %v2_100056f8, 65536
  %v2_10005700 = add nuw nsw i32 %v1_100056fc, %v2_100056f8
  %v1_10005704 = urem i32 %v2_10005700, 65536
  %v1_10005708 = xor i32 %v1_10005704, 65535
  ret i32 %v1_10005708

; uselistorder directives
  uselistorder i32 %v2_100056f8, { 1, 0 }
  uselistorder i32 %v0_100056ec, { 1, 0 }
  uselistorder i32 %v1_100056dc, { 1, 0 }
  uselistorder i32 %v1_100056d4, { 1, 0 }
  uselistorder label %dec_label_pc_100056f0, { 1, 0 }
}

define i32 @function_10005710(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10005710:
  %r0.global-to-local = alloca i32, align 4
  %v1_10005714 = add i32 %arg1, 12
  %v2_10005714 = inttoptr i32 %v1_10005714 to i32*
  %v3_10005714 = load i32, i32* %v2_10005714, align 4
  %v1_10005718 = add i32 %arg1, 16
  %v2_10005718 = inttoptr i32 %v1_10005718 to i32*
  %v3_10005718 = load i32, i32* %v2_10005718, align 4
  %tmp = icmp slt i32 %arg3, 2
  br i1 %tmp, label %dec_label_pc_10005754, label %dec_label_pc_10005720

dec_label_pc_10005720:                            ; preds = %dec_label_pc_10005710
  %v1_10005720 = add i32 %arg3, -2
  %v1_10005728 = icmp slt i32 %v1_10005720, 0
  %v1_1000572c = udiv i32 %v1_10005720, 2
  %v1_10005730 = add nuw i32 %v1_1000572c, 1
  br i1 %v1_10005728, label %dec_label_pc_100057bc, label %dec_label_pc_1000573c.preheader

dec_label_pc_1000573c.preheader:                  ; preds = %dec_label_pc_100057bc, %dec_label_pc_10005720
  %v0_100057504 = phi i32 [ 1, %dec_label_pc_100057bc ], [ %v1_10005730, %dec_label_pc_10005720 ]
  %v0_1000573c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1000573c

dec_label_pc_1000573c:                            ; preds = %dec_label_pc_1000573c.preheader, %dec_label_pc_1000573c
  %v0_10005750 = phi i32 [ %v0_100057504, %dec_label_pc_1000573c.preheader ], [ %v1_10005750, %dec_label_pc_1000573c ]
  %v0_1000574c = phi i32 [ 0, %dec_label_pc_1000573c.preheader ], [ %v2_1000574c, %dec_label_pc_1000573c ]
  %v0_10005744 = phi i32 [ %v0_1000573c.pre, %dec_label_pc_1000573c.preheader ], [ %v1_10005744, %dec_label_pc_1000573c ]
  %v1_1000573c = inttoptr i32 %v0_10005744 to i16*
  %v2_1000573c = load i16, i16* %v1_1000573c, align 2
  %v3_1000573c = zext i16 %v2_1000573c to i32
  store i32 %v3_1000573c, i32* %r0.global-to-local, align 4
  %v1_10005744 = add i32 %v0_10005744, 2
  %v2_1000574c = add i32 %v3_1000573c, %v0_1000574c
  %v1_10005750 = add i32 %v0_10005750, -1
  %v2_10005750 = icmp eq i32 %v1_10005750, 0
  br i1 %v2_10005750, label %dec_label_pc_10005754.loopexit, label %dec_label_pc_1000573c

dec_label_pc_10005754.loopexit:                   ; preds = %dec_label_pc_1000573c
  %tmp14 = mul i32 %v0_100057504, -2
  %tmp13 = add i32 %tmp14, %arg3
  %v3_10005748 = icmp eq i32 %tmp13, 1
  br i1 %v3_10005748, label %dec_label_pc_100057a8, label %dec_label_pc_10005758

dec_label_pc_10005754:                            ; preds = %dec_label_pc_10005710
  %v3_10005710 = icmp eq i32 %arg3, 1
  br i1 %v3_10005710, label %dec_label_pc_10005754.dec_label_pc_100057a8_crit_edge, label %dec_label_pc_10005758

dec_label_pc_10005754.dec_label_pc_100057a8_crit_edge: ; preds = %dec_label_pc_10005754
  %v0_100057a8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_100057a8

dec_label_pc_10005758:                            ; preds = %dec_label_pc_10005754.loopexit, %dec_label_pc_10005754, %dec_label_pc_100057a8
  %v0_10005770 = phi i32 [ 0, %dec_label_pc_10005754 ], [ %v2_100057ac, %dec_label_pc_100057a8 ], [ %v2_1000574c, %dec_label_pc_10005754.loopexit ]
  %v1_10005758 = urem i32 %v3_10005714, 65536
  %v1_1000575c = udiv i32 %v3_10005714, 65536
  %v2_10005760 = add nuw nsw i32 %v1_10005758, %v1_1000575c
  store i32 %v2_10005760, i32* %r0.global-to-local, align 4
  %v1_10005764 = urem i32 %v3_10005718, 65536
  %v1_10005768 = add i32 %arg1, 9
  %v2_10005768 = inttoptr i32 %v1_10005768 to i8*
  %v3_10005768 = load i8, i8* %v2_10005768, align 1
  %v4_10005768 = zext i8 %v3_10005768 to i32
  %v1_1000576c = udiv i32 %v3_10005718, 65536
  %v2_10005770 = add i32 %v0_10005770, %v1_1000576c
  %v2_10005778 = add i32 %v2_10005770, %v4_10005768
  %v2_10005774 = add i32 %v2_10005760, %arg2
  %v2_1000577c = add i32 %v2_10005774, %v1_10005764
  %v2_10005780 = add i32 %v2_1000577c, %v2_10005778
  store i32 %v2_10005780, i32* %r0.global-to-local, align 4
  %v1_10005784 = call i32 @__asm_rlwinm.(i32 %v2_10005780, i32 16, i32 16, i32 31)
  %v4_10005784 = icmp eq i32 %v1_10005784, 0
  br i1 %v4_10005784, label %dec_label_pc_1000579c, label %dec_label_pc_1000578c

dec_label_pc_1000578c:                            ; preds = %dec_label_pc_10005758, %dec_label_pc_1000578c
  %v1_10005790 = phi i32 [ %v1_10005794, %dec_label_pc_1000578c ], [ %v1_10005784, %dec_label_pc_10005758 ]
  %v0_1000578c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000578c = urem i32 %v0_1000578c, 65536
  %v2_10005790 = add i32 %v1_1000578c, %v1_10005790
  store i32 %v2_10005790, i32* %r0.global-to-local, align 4
  %v1_10005794 = call i32 @__asm_rlwinm.(i32 %v2_10005790, i32 16, i32 16, i32 31)
  %v4_10005794 = icmp eq i32 %v1_10005794, 0
  br i1 %v4_10005794, label %dec_label_pc_1000579c, label %dec_label_pc_1000578c

dec_label_pc_1000579c:                            ; preds = %dec_label_pc_1000578c, %dec_label_pc_10005758
  %v0_1000579c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000579c = urem i32 %v0_1000579c, 65536
  %v1_100057a0 = xor i32 %v1_1000579c, 65535
  ret i32 %v1_100057a0

dec_label_pc_100057a8:                            ; preds = %dec_label_pc_10005754.dec_label_pc_100057a8_crit_edge, %dec_label_pc_10005754.loopexit
  %v0_100057a8 = phi i32 [ %v1_10005744, %dec_label_pc_10005754.loopexit ], [ %v0_100057a8.pre, %dec_label_pc_10005754.dec_label_pc_100057a8_crit_edge ]
  %v0_100057ac10 = phi i32 [ %v2_1000574c, %dec_label_pc_10005754.loopexit ], [ 0, %dec_label_pc_10005754.dec_label_pc_100057a8_crit_edge ]
  %v1_100057a8 = inttoptr i32 %v0_100057a8 to i8*
  %v2_100057a8 = load i8, i8* %v1_100057a8, align 1
  %v3_100057a8 = zext i8 %v2_100057a8 to i32
  store i32 %v3_100057a8, i32* %r0.global-to-local, align 4
  %v2_100057ac = add i32 %v3_100057a8, %v0_100057ac10
  br label %dec_label_pc_10005758

dec_label_pc_100057bc:                            ; preds = %dec_label_pc_10005720
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000573c.preheader

; uselistorder directives
  uselistorder i32 %v1_10005794, { 1, 0 }
  uselistorder i32 %v1_10005750, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7 }
  uselistorder i32 %arg3, { 3, 0, 2, 1 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000578c, { 1, 0 }
  uselistorder label %dec_label_pc_10005758, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000573c, { 1, 0 }
}

define i32 @function_100057c8(i32 %arg1) local_unnamed_addr {
dec_label_pc_100057c8:
  %v3_100057dc = load i32, i32* @global_var_1001e194.81, align 4
  store i32 268457956, i32* @lr, align 4
  %v2_100057e0 = call i32 @function_1000aaac(i32 %v3_100057dc, i32 9)
  ret i32 %v2_100057e0
}

define i32 @function_100057f4(i32 %arg1) local_unnamed_addr {
dec_label_pc_100057f4:
  %r26.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-8792 = alloca i32, align 4
  %stack_var_-8760 = alloca i8, align 1
  %stack_var_-8776 = alloca i8, align 1
  %stack_var_-4151 = alloca i32, align 4
  %stack_var_-8247 = alloca i32, align 4
  %v0_10005804 = load i32, i32* @r27, align 4
  %v2_10005808 = ptrtoint i32* %stack_var_-8247 to i32
  store i32 %v2_10005808, i32* @r27, align 4
  %v2_10005810 = ptrtoint i32* %stack_var_-4151 to i32
  %v0_10005814 = load i32, i32* @r29, align 4
  store i32 %arg1, i32* @r29, align 4
  %v0_10005824 = load i32, i32* @r25, align 4
  %v2_10005828 = ptrtoint i8* %stack_var_-8776 to i32
  %v0_1000582c = load i32, i32* @r30, align 4
  %v2_10005830 = ptrtoint i8* %stack_var_-8760 to i32
  store i32 %v2_10005830, i32* @r30, align 4
  %v0_10005834 = load i32, i32* @r31, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  %v0_1000583c = load i32, i32* @r23, align 4
  %v0_10005844 = load i32, i32* @r28, align 4
  store i32 268458060, i32* @lr, align 4
  %v3_10005848 = call i32 @function_1000b22c(i32 %v2_10005808, i32 0, i32 4096)
  store i32 268458076, i32* @lr, align 4
  %v3_10005858 = call i32 @function_1000b22c(i32 %v2_10005810, i32 0, i32 4096)
  store i32 268458092, i32* @lr, align 4
  %v3_10005868 = call i32 @function_1000b22c(i32 %v2_10005830, i32 0, i32 513)
  %v0_10005874 = load i32, i32* @r29, align 4
  %v0_10005878 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10005878, i32* %stack_var_-8792, align 4
  %v3_10005888 = trunc i32 %v0_10005874 to i8
  %v4_10005888 = call i32 @function_1000a660(i8 %v3_10005888, i32 16, i32 %v2_10005828)
  store i32 268458132, i32* @lr, align 4
  %v2_10005890 = call i32 @function_1000a100(i8* nonnull %stack_var_-8776)
  %v3_10005894 = icmp eq i32 %v2_10005890, 2
  br i1 %v3_10005894, label %dec_label_pc_10005dc0, label %dec_label_pc_1000589c

dec_label_pc_1000589c:                            ; preds = %dec_label_pc_100057f4, %dec_label_pc_10005dc0
  store i32 0, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100058a8.82 to i32), i32* @lr, align 4
  %v1_100058a4 = call i32 @function_10009880(i32 6)
  store i32 ptrtoint ([3 x i8]* @global_var_100058b0.83 to i32), i32* @lr, align 4
  %v1_100058ac = call i32 @function_10009880(i32 7)
  store i32 268458168, i32* @lr, align 4
  %v1_100058b4 = call i32 @function_10009880(i32 9)
  store i32 268458188, i32* @lr, align 4
  %v3_100058c8 = call i32 @function_1000aaf4(i32 ptrtoint ([14 x i8]* @global_var_1000d438.84 to i32), i32 0)
  %v3_100058cc = icmp eq i32 %v3_100058c8, -1
  store i32 %v3_100058c8, i32* @r28, align 4
  br i1 %v3_100058cc, label %dec_label_pc_10005d14, label %dec_label_pc_100058d8

dec_label_pc_100058d8:                            ; preds = %dec_label_pc_1000589c
  %v2_100058d8 = ptrtoint i32* %stack_var_-8792 to i32
  store i32 %v2_100058d8, i32* %r26.global-to-local, align 4
  store i32 268458220, i32* @lr, align 4
  %v4_100058e889 = call i32 @function_1000a360(i8* nonnull %stack_var_-8760, i32 512, i32 %v3_100058c8)
  %v3_100058ec92 = icmp eq i32 %v4_100058e889, 0
  br i1 %v3_100058ec92, label %dec_label_pc_10005a94.loopexit, label %dec_label_pc_100058f4

dec_label_pc_100058f4:                            ; preds = %dec_label_pc_100058d8, %dec_label_pc_100058dc.backedge
  %v3_100058f4 = load i8, i8* %stack_var_-8760, align 1
  %v3_100058f8 = icmp eq i8 %v3_100058f4, 0
  br i1 %v3_100058f8, label %dec_label_pc_100058dc.backedge, label %dec_label_pc_10005900

dec_label_pc_100058dc.backedge:                   ; preds = %dec_label_pc_10005914, %dec_label_pc_100058f4, %dec_label_pc_10005984, %dec_label_pc_10005a1c, %dec_label_pc_10005a68
  %v0_100058e4.pre = load i32, i32* @r28, align 4
  store i32 268458220, i32* @lr, align 4
  %v4_100058e8 = call i32 @function_1000a360(i8* nonnull %stack_var_-8760, i32 512, i32 %v0_100058e4.pre)
  %v3_100058ec = icmp eq i32 %v4_100058e8, 0
  br i1 %v3_100058ec, label %dec_label_pc_10005a94.loopexit, label %dec_label_pc_100058f4

dec_label_pc_10005900:                            ; preds = %dec_label_pc_100058f4
  %v3_10005900 = icmp eq i8 %v3_100058f4, 58
  store i32 3, i32* @r31, align 4
  br i1 %v3_10005900, label %dec_label_pc_10005934, label %dec_label_pc_10005910

dec_label_pc_10005910:                            ; preds = %dec_label_pc_10005900
  %v1_10005918.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10005914

dec_label_pc_10005914:                            ; preds = %dec_label_pc_10005928, %dec_label_pc_10005910
  %v0_10005914 = phi i32 [ %v1_10005914, %dec_label_pc_10005928 ], [ 0, %dec_label_pc_10005910 ]
  %v1_10005914 = add i32 %v0_10005914, 1
  %v2_10005918 = add i32 %v1_10005914, %v1_10005918.pre
  %v3_10005918 = inttoptr i32 %v2_10005918 to i8*
  %v4_10005918 = load i8, i8* %v3_10005918, align 1
  %v3_1000591c = icmp eq i8 %v4_10005918, 0
  br i1 %v3_1000591c, label %dec_label_pc_100058dc.backedge, label %dec_label_pc_10005928

dec_label_pc_10005928:                            ; preds = %dec_label_pc_10005914
  %v3_10005920 = icmp eq i8 %v4_10005918, 58
  br i1 %v3_10005920, label %dec_label_pc_1000592c, label %dec_label_pc_10005914

dec_label_pc_1000592c:                            ; preds = %dec_label_pc_10005928
  %v1_1000592c = add i32 %v0_10005914, 4
  store i32 %v1_1000592c, i32* @r31, align 4
  %v1_10005930 = add i32 %v0_10005914, 3
  br label %dec_label_pc_10005934

dec_label_pc_10005934:                            ; preds = %dec_label_pc_10005900, %dec_label_pc_1000592c
  %v1_1000598c = phi i32 [ 2, %dec_label_pc_10005900 ], [ %v1_10005930, %dec_label_pc_1000592c ]
  %v0_10005934 = load i32, i32* %r26.global-to-local, align 4
  %v2_10005934 = add i32 %v0_10005934, %v1_1000598c
  %v1_1000593c = add i32 %v2_10005934, 32
  %v2_1000593c = inttoptr i32 %v1_1000593c to i8*
  %v3_1000593c = load i8, i8* %v2_1000593c, align 1
  %v3_10005940 = icmp eq i8 %v3_1000593c, 0
  br i1 %v3_10005940, label %dec_label_pc_10005984, label %dec_label_pc_10005948

dec_label_pc_10005948:                            ; preds = %dec_label_pc_10005934
  %v3_10005948 = icmp eq i8 %v3_1000593c, 32
  %v1_1000594c = add i32 %v1_1000598c, 1
  store i32 %v1_1000594c, i32* @r31, align 4
  br i1 %v3_10005948, label %dec_label_pc_10005984, label %dec_label_pc_10005954

dec_label_pc_10005954:                            ; preds = %dec_label_pc_10005948
  %v0_1000595c = load i32, i32* @r30, align 4
  %v2_1000595c = add i32 %v0_1000595c, %v1_1000594c
  br label %dec_label_pc_10005968

dec_label_pc_10005968:                            ; preds = %dec_label_pc_10005968, %dec_label_pc_10005954
  %v0_1000596c = phi i32 [ %v1_1000596c, %dec_label_pc_10005968 ], [ %v1_1000598c, %dec_label_pc_10005954 ]
  %v0_10005970 = phi i32 [ %v1_10005970, %dec_label_pc_10005968 ], [ %v2_1000595c, %dec_label_pc_10005954 ]
  %v1_10005968 = inttoptr i32 %v0_10005970 to i8*
  %v2_10005968 = load i8, i8* %v1_10005968, align 1
  %v1_1000596c = add i32 %v0_1000596c, 1
  %v1_10005970 = add i32 %v0_10005970, 1
  %tmp60 = or i8 %v2_10005968, 32
  %tmp61 = icmp eq i8 %tmp60, 32
  br i1 %tmp61, label %dec_label_pc_10005980, label %dec_label_pc_10005968

dec_label_pc_10005980:                            ; preds = %dec_label_pc_10005968
  %v1_10005980 = add i32 %v0_1000596c, 2
  store i32 %v1_10005980, i32* @r31, align 4
  br label %dec_label_pc_10005984

dec_label_pc_10005984:                            ; preds = %dec_label_pc_10005948, %dec_label_pc_10005934, %dec_label_pc_10005980
  %v1_10005984 = phi i32 [ %v1_1000598c, %dec_label_pc_10005948 ], [ %v1_1000598c, %dec_label_pc_10005934 ], [ %v1_1000596c, %dec_label_pc_10005980 ]
  %v2_10005984 = add i32 %v1_10005984, %v0_10005934
  %v0_1000598c = load i32, i32* @r30, align 4
  %v2_1000598c = add i32 %v0_1000598c, %v1_1000598c
  store i32 %v2_1000598c, i32* @r29, align 4
  %v3_10005990 = add i32 %v2_10005984, 32
  %v4_10005990 = inttoptr i32 %v3_10005990 to i8*
  store i8 0, i8* %v4_10005990, align 1
  %v0_10005994 = load i32, i32* @r29, align 4
  store i32 268458396, i32* @lr, align 4
  %v1_10005998 = inttoptr i32 %v0_10005994 to i8*
  %v2_10005998 = call i32 @function_1000a100(i8* %v1_10005998)
  %v0_100059a4 = load i32, i32* @r29, align 4
  %v3_100059a8 = inttoptr i32 %v0_100059a4 to i8*
  %v4_100059a8 = call i32 @function_1000a4b0(i8* %v3_100059a8, i32 %v2_10005998, i32 %v2_10005828)
  %v3_100059b0 = icmp eq i32 %v4_100059a8, -1
  br i1 %v3_100059b0, label %dec_label_pc_100058dc.backedge, label %dec_label_pc_100059bc.preheader

dec_label_pc_100059bc.preheader:                  ; preds = %dec_label_pc_10005984
  %v0_100059bc.pre = load i32, i32* @r31, align 4
  %v0_100059c4.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_100059bc.outer

dec_label_pc_100059bc.outer:                      ; preds = %dec_label_pc_10005d64, %dec_label_pc_100059bc.preheader
  %v0_100059d828.ph = phi i32 [ %v1_10005d4c, %dec_label_pc_10005d64 ], [ 0, %dec_label_pc_100059bc.preheader ]
  %v0_100059bc.ph = phi i32 [ %v1_10005a7077, %dec_label_pc_10005d64 ], [ %v0_100059bc.pre, %dec_label_pc_100059bc.preheader ]
  %v0_10005a1c.ph = phi i32 [ 1, %dec_label_pc_10005d64 ], [ 0, %dec_label_pc_100059bc.preheader ]
  br label %dec_label_pc_100059bc

dec_label_pc_100059bc:                            ; preds = %dec_label_pc_100059bc.outer, %dec_label_pc_10005d54
  %v0_100059d828 = phi i32 [ %v1_10005d4c, %dec_label_pc_10005d54 ], [ %v0_100059d828.ph, %dec_label_pc_100059bc.outer ]
  %v0_100059bc = phi i32 [ %v1_10005a7077, %dec_label_pc_10005d54 ], [ %v0_100059bc.ph, %dec_label_pc_100059bc.outer ]
  %v1_100059bc = add i32 %v0_100059bc, 1
  %v2_100059c4 = add i32 %v1_100059bc, %v0_100059c4.pre
  %v1_100059f068 = inttoptr i32 %v2_100059c4 to i8*
  %v2_100059f069 = load i8, i8* %v1_100059f068, align 1
  store i32 %v1_100059bc, i32* @r31, align 4
  %v3_100059f872 = icmp eq i8 %v2_100059f069, 0
  br i1 %v3_100059f872, label %dec_label_pc_10005a1c, label %dec_label_pc_10005a08

dec_label_pc_100059cc:                            ; preds = %dec_label_pc_10005a08
  %v3_100059fc80 = icmp eq i8 %v3_100059fc80.in, 9
  br i1 %v3_100059fc80, label %dec_label_pc_10005a0c, label %dec_label_pc_100059d8

dec_label_pc_100059d8:                            ; preds = %dec_label_pc_100059cc
  %v3_100059cc = icmp eq i32 %v0_100059cc76, 1
  br i1 %v3_100059cc, label %dec_label_pc_10005d4c, label %dec_label_pc_100059e0

dec_label_pc_100059e0:                            ; preds = %dec_label_pc_100059d8, %dec_label_pc_10005d4c
  %v0_100059e0 = phi i32 [ %v1_10005d4c, %dec_label_pc_10005d4c ], [ %v0_10005a0c75, %dec_label_pc_100059d8 ]
  %v2_100059e0 = icmp sgt i32 %v0_100059e0, 6
  br i1 %v2_100059e0, label %dec_label_pc_10005a1c, label %dec_label_pc_100059ec

dec_label_pc_100059ec:                            ; preds = %dec_label_pc_10005a0c, %dec_label_pc_100059e0
  %v0_100059d827 = phi i32 [ %v0_10005a0c75, %dec_label_pc_10005a0c ], [ %v0_100059e0, %dec_label_pc_100059e0 ]
  %v0_100059cc25 = phi i32 [ 1, %dec_label_pc_10005a0c ], [ 0, %dec_label_pc_100059e0 ]
  %v0_100059f022 = add i32 %v0_10005a1479, 1
  %v1_100059ec = add i32 %v1_10005a7077, 1
  %v1_100059f0 = inttoptr i32 %v0_100059f022 to i8*
  %v2_100059f0 = load i8, i8* %v1_100059f0, align 1
  store i32 %v1_100059ec, i32* @r31, align 4
  %v3_100059f8 = icmp eq i8 %v2_100059f0, 0
  br i1 %v3_100059f8, label %dec_label_pc_10005a1c, label %dec_label_pc_10005a08

dec_label_pc_10005a08:                            ; preds = %dec_label_pc_100059bc, %dec_label_pc_100059ec
  %v3_100059fc80.in = phi i8 [ %v2_100059f0, %dec_label_pc_100059ec ], [ %v2_100059f069, %dec_label_pc_100059bc ]
  %v3_10005a0081.in = phi i8 [ %v2_100059f0, %dec_label_pc_100059ec ], [ %v2_100059f069, %dec_label_pc_100059bc ]
  %v0_10005a1479 = phi i32 [ %v0_100059f022, %dec_label_pc_100059ec ], [ %v2_100059c4, %dec_label_pc_100059bc ]
  %v1_10005a7077 = phi i32 [ %v1_100059ec, %dec_label_pc_100059ec ], [ %v1_100059bc, %dec_label_pc_100059bc ]
  %v0_100059cc76 = phi i32 [ %v0_100059cc25, %dec_label_pc_100059ec ], [ 0, %dec_label_pc_100059bc ]
  %v0_10005a0c75 = phi i32 [ %v0_100059d827, %dec_label_pc_100059ec ], [ %v0_100059d828, %dec_label_pc_100059bc ]
  %v3_10005a0081 = icmp eq i8 %v3_10005a0081.in, 32
  br i1 %v3_10005a0081, label %dec_label_pc_10005a0c, label %dec_label_pc_100059cc

dec_label_pc_10005a0c:                            ; preds = %dec_label_pc_10005a08, %dec_label_pc_100059cc
  %tmp62 = icmp slt i32 %v0_10005a0c75, 7
  br i1 %tmp62, label %dec_label_pc_100059ec, label %dec_label_pc_10005a1c

dec_label_pc_10005a1c:                            ; preds = %dec_label_pc_100059ec, %dec_label_pc_100059e0, %dec_label_pc_10005a0c, %dec_label_pc_100059bc
  %v1_10005a70.lcssa = phi i32 [ %v1_100059bc, %dec_label_pc_100059bc ], [ %v1_10005a7077, %dec_label_pc_10005a0c ], [ %v1_10005a7077, %dec_label_pc_100059e0 ], [ %v1_100059ec, %dec_label_pc_100059ec ]
  %v3_10005a1c = icmp eq i32 %v0_10005a1c.ph, 0
  br i1 %v3_10005a1c, label %dec_label_pc_100058dc.backedge, label %dec_label_pc_10005a28

dec_label_pc_10005a28:                            ; preds = %dec_label_pc_10005a1c
  %v0_10005a28 = load i32, i32* %r26.global-to-local, align 4
  %v2_10005a28 = add i32 %v0_10005a28, %v1_10005a70.lcssa
  %v1_10005a2c = add i32 %v2_10005a28, 32
  %v2_10005a2c = inttoptr i32 %v1_10005a2c to i8*
  %v3_10005a2c = load i8, i8* %v2_10005a2c, align 1
  %v3_10005a30 = icmp eq i8 %v3_10005a2c, 0
  br i1 %v3_10005a30, label %dec_label_pc_10005a68, label %dec_label_pc_10005a38

dec_label_pc_10005a38:                            ; preds = %dec_label_pc_10005a28
  %v3_10005a38 = icmp eq i8 %v3_10005a2c, 32
  br i1 %v3_10005a38, label %dec_label_pc_10005a68, label %dec_label_pc_10005a40

dec_label_pc_10005a40:                            ; preds = %dec_label_pc_10005a38
  %v1_10005a40 = add i32 %v1_10005a70.lcssa, 1
  %v2_10005a44 = add i32 %v1_10005a40, %v0_100059c4.pre
  br label %dec_label_pc_10005a50

dec_label_pc_10005a50:                            ; preds = %dec_label_pc_10005a50, %dec_label_pc_10005a40
  %v0_10005a54 = phi i32 [ %v1_10005a54, %dec_label_pc_10005a50 ], [ %v1_10005a70.lcssa, %dec_label_pc_10005a40 ]
  %v0_10005a58 = phi i32 [ %v1_10005a58, %dec_label_pc_10005a50 ], [ %v2_10005a44, %dec_label_pc_10005a40 ]
  %v1_10005a50 = inttoptr i32 %v0_10005a58 to i8*
  %v2_10005a50 = load i8, i8* %v1_10005a50, align 1
  %v1_10005a54 = add i32 %v0_10005a54, 1
  %v1_10005a58 = add i32 %v0_10005a58, 1
  %tmp63 = or i8 %v2_10005a50, 32
  %tmp64 = icmp eq i8 %tmp63, 32
  br i1 %tmp64, label %dec_label_pc_10005a68, label %dec_label_pc_10005a50

dec_label_pc_10005a68:                            ; preds = %dec_label_pc_10005a50, %dec_label_pc_10005a38, %dec_label_pc_10005a28
  %v1_10005a68 = phi i32 [ %v1_10005a70.lcssa, %dec_label_pc_10005a38 ], [ %v1_10005a70.lcssa, %dec_label_pc_10005a28 ], [ %v1_10005a54, %dec_label_pc_10005a50 ]
  %v2_10005a68 = add i32 %v1_10005a68, %v0_10005a28
  %v2_10005a70 = add i32 %v1_10005a70.lcssa, %v0_100059c4.pre
  store i32 %v2_10005a70, i32* @r31, align 4
  %v3_10005a74 = add i32 %v2_10005a68, 32
  %v4_10005a74 = inttoptr i32 %v3_10005a74 to i8*
  store i8 0, i8* %v4_10005a74, align 1
  %v0_10005a78 = load i32, i32* @r31, align 4
  store i32 268458624, i32* @lr, align 4
  %v1_10005a7c = inttoptr i32 %v0_10005a78 to i8*
  %v2_10005a7c = call i32 @function_1000a100(i8* %v1_10005a7c)
  %v2_10005a80 = icmp sgt i32 %v2_10005a7c, 15
  br i1 %v2_10005a80, label %dec_label_pc_100058dc.backedge, label %dec_label_pc_10005a88

dec_label_pc_10005a88:                            ; preds = %dec_label_pc_10005a68
  %v0_10005a88 = load i32, i32* @r31, align 4
  store i32 %v2_100058d8, i32* @r3, align 4
  %v2_10005a90 = bitcast i32* %stack_var_-8792 to i8*
  %v3_10005a90 = call i32 @function_1000a128(i8* %v2_10005a90, i32 %v0_10005a88)
  br label %dec_label_pc_10005a94

dec_label_pc_10005a94.loopexit:                   ; preds = %dec_label_pc_100058dc.backedge, %dec_label_pc_100058d8
  %.pre = bitcast i32* %stack_var_-8792 to i8*
  br label %dec_label_pc_10005a94

dec_label_pc_10005a94:                            ; preds = %dec_label_pc_10005a94.loopexit, %dec_label_pc_10005a88
  %v1_10005aa0.pre-phi = phi i8* [ %.pre, %dec_label_pc_10005a94.loopexit ], [ %v2_10005a90, %dec_label_pc_10005a88 ]
  store i32 268458652, i32* @lr, align 4
  %v0_10005a98 = call i32 @function_1000a98c()
  store i32 268458660, i32* @lr, align 4
  %v2_10005aa0 = call i32 @function_1000a100(i8* %v1_10005aa0.pre-phi)
  %v3_10005aa4 = icmp eq i32 %v2_10005aa0, 0
  br i1 %v3_10005aa4, label %dec_label_pc_10005d6c, label %dec_label_pc_10005aac

dec_label_pc_10005aac:                            ; preds = %dec_label_pc_10005a94
  %v3_10005ab4 = call i32 @function_100097cc(i32 6, i32* null)
  store i32 0, i32* %r31.global-to-local, align 4
  store i32 268458688, i32* @lr, align 4
  %v1_10005abc = call i32 @function_1000aed8(i32 %v3_10005ab4)
  store i32 %v1_10005abc, i32* @r23, align 4
  %v3_10005ac0 = icmp eq i32 %v1_10005abc, 0
  br i1 %v3_10005ac0, label %dec_label_pc_10005cf4, label %dec_label_pc_10005ac8

dec_label_pc_10005ac8:                            ; preds = %dec_label_pc_10005aac
  store i32 0, i32* @r28, align 4
  store i32 268458708, i32* @lr, align 4
  %v1_10005ad07 = inttoptr i32 %v1_10005abc to i32*
  %v2_10005ad08 = call i32 @function_1000afe8(i32* %v1_10005ad07)
  %v3_10005ad411 = icmp eq i32 %v2_10005ad08, 0
  br i1 %v3_10005ad411, label %dec_label_pc_10005ce8, label %dec_label_pc_10005adc.preheader.lr.ph

dec_label_pc_10005adc.preheader.lr.ph:            ; preds = %dec_label_pc_10005ac8
  %v2_10005b10 = bitcast i32* %stack_var_-8247 to i8*
  %v1_10005c80 = bitcast i32* %stack_var_-4151 to i8*
  br label %dec_label_pc_10005adc.preheader

dec_label_pc_10005acc.loopexit:                   ; preds = %dec_label_pc_10005ae4, %dec_label_pc_10005afc, %dec_label_pc_10005b64
  %v0_10005acc = load i32, i32* @r23, align 4
  store i32 268458708, i32* @lr, align 4
  %v1_10005ad0 = inttoptr i32 %v0_10005acc to i32*
  %v2_10005ad0 = call i32 @function_1000afe8(i32* %v1_10005ad0)
  %v3_10005ad4 = icmp eq i32 %v2_10005ad0, 0
  br i1 %v3_10005ad4, label %dec_label_pc_10005ce8, label %dec_label_pc_10005adc.preheader

dec_label_pc_10005adc.preheader:                  ; preds = %dec_label_pc_10005adc.preheader.lr.ph, %dec_label_pc_10005acc.loopexit
  %v0_10005ae435 = phi i32 [ %v2_10005ad08, %dec_label_pc_10005adc.preheader.lr.ph ], [ %v2_10005ad0, %dec_label_pc_10005acc.loopexit ]
  br label %dec_label_pc_10005adc

dec_label_pc_10005adc:                            ; preds = %dec_label_pc_10005adc.preheader, %dec_label_pc_10005cd0
  %v0_10005ae4 = phi i32 [ %v0_10005ae435, %dec_label_pc_10005adc.preheader ], [ %v2_10005cdc, %dec_label_pc_10005cd0 ]
  %v0_10005adc = load i32, i32* @r28, align 4
  %v3_10005adc = icmp eq i32 %v0_10005adc, 0
  br i1 %v3_10005adc, label %dec_label_pc_10005ae4, label %dec_label_pc_10005ce8

dec_label_pc_10005ae4:                            ; preds = %dec_label_pc_10005adc
  %v1_10005ae4 = add i32 %v0_10005ae4, 11
  %v2_10005ae4 = inttoptr i32 %v1_10005ae4 to i8*
  %v3_10005ae4 = load i8, i8* %v2_10005ae4, align 1
  %v4_10005ae4 = zext i8 %v3_10005ae4 to i32
  store i32 %v1_10005ae4, i32* @r30, align 4
  %v1_10005aec = add nuw nsw i32 %v4_10005ae4, 208
  %v1_10005af0 = urem i32 %v1_10005aec, 256
  %v2_10005af4 = icmp ugt i32 %v1_10005af0, 9
  br i1 %v2_10005af4, label %dec_label_pc_10005acc.loopexit, label %dec_label_pc_10005afc

dec_label_pc_10005afc:                            ; preds = %dec_label_pc_10005ae4
  %v3_10005b04 = call i32 @function_100097cc(i32 6, i32* null)
  store i32 %v2_10005808, i32* @r3, align 4
  %v3_10005b10 = call i32 @function_1000a128(i8* %v2_10005b10, i32 %v3_10005b04)
  store i32 268458780, i32* @lr, align 4
  %v2_10005b18 = call i32 @function_1000a100(i8* %v2_10005b10)
  %v0_10005b1c = load i32, i32* @r30, align 4
  %v0_10005b20 = load i32, i32* @r27, align 4
  %v2_10005b20 = add i32 %v0_10005b20, %v2_10005b18
  store i32 %v2_10005b20, i32* @r3, align 4
  %v2_10005b24 = inttoptr i32 %v2_10005b20 to i8*
  %v3_10005b24 = call i32 @function_1000a128(i8* %v2_10005b24, i32 %v0_10005b1c)
  store i32 268458800, i32* @lr, align 4
  %v2_10005b2c = call i32 @function_1000a100(i8* %v2_10005b10)
  %v3_10005b3c = call i32 @function_100097cc(i32 7, i32* null)
  %v0_10005b44 = load i32, i32* @r27, align 4
  %v2_10005b44 = add i32 %v2_10005b2c, %v0_10005b44
  store i32 %v2_10005b44, i32* @r3, align 4
  %v2_10005b48 = inttoptr i32 %v2_10005b44 to i8*
  %v3_10005b48 = call i32 @function_1000a128(i8* %v2_10005b48, i32 %v3_10005b3c)
  store i32 4096, i32* @r5, align 4
  store i32 268458844, i32* @lr, align 4
  %v3_10005b58 = call i32 @function_1000ac0c(i32 %v2_10005808, i32 %v2_10005810, i32 4096)
  %v3_10005b5c = icmp eq i32 %v3_10005b58, -1
  br i1 %v3_10005b5c, label %dec_label_pc_10005acc.loopexit, label %dec_label_pc_10005b64

dec_label_pc_10005b64:                            ; preds = %dec_label_pc_10005afc
  %v3_10005b6c = call i32 @function_100097cc(i32 6, i32* null)
  store i32 %v2_10005808, i32* @r3, align 4
  %v3_10005b78 = call i32 @function_1000a128(i8* %v2_10005b10, i32 %v3_10005b6c)
  store i32 268458884, i32* @lr, align 4
  %v2_10005b80 = call i32 @function_1000a100(i8* %v2_10005b10)
  %v0_10005b84 = load i32, i32* @r30, align 4
  %v0_10005b88 = load i32, i32* @r27, align 4
  %v2_10005b88 = add i32 %v0_10005b88, %v2_10005b80
  store i32 %v2_10005b88, i32* @r3, align 4
  %v2_10005b8c = inttoptr i32 %v2_10005b88 to i8*
  %v3_10005b8c = call i32 @function_1000a128(i8* %v2_10005b8c, i32 %v0_10005b84)
  store i32 268458904, i32* @lr, align 4
  %v2_10005b94 = call i32 @function_1000a100(i8* %v2_10005b10)
  %v3_10005ba4 = call i32 @function_100097cc(i32 9, i32* null)
  %v0_10005bac = load i32, i32* @r27, align 4
  %v2_10005bac = add i32 %v2_10005b94, %v0_10005bac
  store i32 %v2_10005bac, i32* @r3, align 4
  %v2_10005bb0 = inttoptr i32 %v2_10005bac to i8*
  %v3_10005bb0 = call i32 @function_1000a128(i8* %v2_10005bb0, i32 %v3_10005ba4)
  store i32 268458940, i32* @lr, align 4
  %v1_10005bb8 = call i32 @function_1000aed8(i32 %v2_10005808)
  store i32 %v1_10005bb8, i32* @r25, align 4
  %v3_10005bbc = icmp eq i32 %v1_10005bb8, 0
  br i1 %v3_10005bbc, label %dec_label_pc_10005acc.loopexit, label %dec_label_pc_10005bc4

dec_label_pc_10005bc4.loopexit:                   ; preds = %dec_label_pc_10005be4, %dec_label_pc_10005c80
  %v0_10005bc4.pre = load i32, i32* @r25, align 4
  br label %dec_label_pc_10005bc4

dec_label_pc_10005bc4:                            ; preds = %dec_label_pc_10005b64, %dec_label_pc_10005bc4.loopexit
  %v0_10005bc4 = phi i32 [ %v0_10005bc4.pre, %dec_label_pc_10005bc4.loopexit ], [ %v1_10005bb8, %dec_label_pc_10005b64 ]
  store i32 268458956, i32* @lr, align 4
  %v1_10005bc8 = inttoptr i32 %v0_10005bc4 to i32*
  %v2_10005bc8 = call i32 @function_1000afe8(i32* %v1_10005bc8)
  store i32 4096, i32* @r4, align 4
  store i32 %v2_10005bc8, i32* @r31, align 4
  %v3_10005bd0 = icmp eq i32 %v2_10005bc8, 0
  %v0_10005bd4 = load i32, i32* @r28, align 4
  store i32 %v2_10005810, i32* @r3, align 4
  %v3_10005bd4.not = icmp ne i32 %v0_10005bd4, 0
  %brmerge = or i1 %v3_10005bd0, %v3_10005bd4.not
  br i1 %brmerge, label %dec_label_pc_10005cd0, label %dec_label_pc_10005be4

dec_label_pc_10005be4:                            ; preds = %dec_label_pc_10005bc4
  store i32 268458984, i32* @lr, align 4
  %v0_10005be4 = call i32 @function_1000a1a8()
  %v3_10005bf0 = call i32 @function_100097cc(i32 6, i32* null)
  store i32 %v2_10005808, i32* @r3, align 4
  %v3_10005bfc = call i32 @function_1000a128(i8* %v2_10005b10, i32 %v3_10005bf0)
  store i32 268459016, i32* @lr, align 4
  %v2_10005c04 = call i32 @function_1000a100(i8* %v2_10005b10)
  %v0_10005c08 = load i32, i32* @r30, align 4
  %v0_10005c0c = load i32, i32* @r27, align 4
  %v2_10005c0c = add i32 %v0_10005c0c, %v2_10005c04
  store i32 %v2_10005c0c, i32* @r3, align 4
  %v2_10005c10 = inttoptr i32 %v2_10005c0c to i8*
  %v3_10005c10 = call i32 @function_1000a128(i8* %v2_10005c10, i32 %v0_10005c08)
  store i32 268459036, i32* @lr, align 4
  %v2_10005c18 = call i32 @function_1000a100(i8* %v2_10005b10)
  %v3_10005c28 = call i32 @function_100097cc(i32 9, i32* null)
  %v0_10005c30 = load i32, i32* @r27, align 4
  %v2_10005c30 = add i32 %v2_10005c18, %v0_10005c30
  store i32 %v2_10005c30, i32* @r3, align 4
  %v2_10005c34 = inttoptr i32 %v2_10005c30 to i8*
  %v3_10005c34 = call i32 @function_1000a128(i8* %v2_10005c34, i32 %v3_10005c28)
  store i32 268459072, i32* @lr, align 4
  %v2_10005c3c = call i32 @function_1000a100(i8* %v2_10005b10)
  %v0_10005c48 = load i32, i32* @r27, align 4
  %v2_10005c48 = add i32 %v0_10005c48, %v2_10005c3c
  store i32 %v2_10005c48, i32* @r3, align 4
  %v2_10005c4c = inttoptr i32 %v2_10005c48 to i8*
  %v3_10005c4c = call i32 @function_1000a128(i8* %v2_10005c4c, i32 ptrtoint (i32* @global_var_1000d3e0.8 to i32))
  store i32 268459096, i32* @lr, align 4
  %v2_10005c54 = call i32 @function_1000a100(i8* %v2_10005b10)
  %v0_10005c58 = load i32, i32* @r31, align 4
  %v1_10005c58 = add i32 %v0_10005c58, 11
  %v0_10005c5c = load i32, i32* @r27, align 4
  %v2_10005c5c = add i32 %v0_10005c5c, %v2_10005c54
  store i32 %v2_10005c5c, i32* @r3, align 4
  %v2_10005c60 = inttoptr i32 %v2_10005c5c to i8*
  %v3_10005c60 = call i32 @function_1000a128(i8* %v2_10005c60, i32 %v1_10005c58)
  store i32 268459124, i32* @lr, align 4
  %v3_10005c70 = call i32 @function_1000ac0c(i32 %v2_10005808, i32 %v2_10005810, i32 4096)
  %v3_10005c74 = icmp eq i32 %v3_10005c70, -1
  br i1 %v3_10005c74, label %dec_label_pc_10005bc4.loopexit, label %dec_label_pc_10005c80

dec_label_pc_10005c80:                            ; preds = %dec_label_pc_10005be4
  store i32 268459140, i32* @lr, align 4
  %v2_10005c80 = call i32 @function_1000a100(i8* %v1_10005c80)
  %v4_10005c90 = call i32 @function_1000a4b0(i8* %v1_10005c80, i32 %v2_10005c80, i32 %v2_100058d8)
  %v3_10005c98 = icmp eq i32 %v4_10005c90, -1
  %v0_10005c9c = load i32, i32* @r30, align 4
  store i32 %v0_10005c9c, i32* @r3, align 4
  br i1 %v3_10005c98, label %dec_label_pc_10005bc4.loopexit, label %dec_label_pc_10005ca4

dec_label_pc_10005ca4:                            ; preds = %dec_label_pc_10005c80
  store i32 268459176, i32* @lr, align 4
  %v2_10005ca4 = call i32 @function_1000a228(i32 %v0_10005c9c, i32 10)
  store i32 268459184, i32* @lr, align 4
  %v2_10005cac = call i32 @function_1000aaac(i32 %v2_10005ca4, i32 9)
  %v0_10005cb0 = load i32, i32* @r25, align 4
  store i32 268459192, i32* @lr, align 4
  %v1_10005cb4 = inttoptr i32 %v0_10005cb0 to i32*
  %v2_10005cb4 = call i32 @function_1000afe8(i32* %v1_10005cb4)
  store i32 1, i32* @r28, align 4
  store i32 %v2_10005cb4, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10005cd0

dec_label_pc_10005cd0:                            ; preds = %dec_label_pc_10005bc4, %dec_label_pc_10005ca4
  %v0_10005cd0 = load i32, i32* @r25, align 4
  store i32 268459224, i32* @lr, align 4
  %v1_10005cd4 = inttoptr i32 %v0_10005cd0 to i32*
  %v2_10005cd4 = call i32 @function_1000ae34(i32* %v1_10005cd4)
  %v0_10005cd8 = load i32, i32* @r23, align 4
  store i32 268459232, i32* @lr, align 4
  %v1_10005cdc = inttoptr i32 %v0_10005cd8 to i32*
  %v2_10005cdc = call i32 @function_1000afe8(i32* %v1_10005cdc)
  %v3_10005ce0 = icmp eq i32 %v2_10005cdc, 0
  br i1 %v3_10005ce0, label %dec_label_pc_10005ce8, label %dec_label_pc_10005adc

dec_label_pc_10005ce8:                            ; preds = %dec_label_pc_10005acc.loopexit, %dec_label_pc_10005cd0, %dec_label_pc_10005adc, %dec_label_pc_10005ac8
  %v0_10005ce8 = load i32, i32* @r23, align 4
  %v0_10005cec = load i32, i32* @r28, align 4
  %v1_10005cec = urem i32 %v0_10005cec, 256
  store i32 %v1_10005cec, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005cf4.86 to i32), i32* @lr, align 4
  %v1_10005cf0 = inttoptr i32 %v0_10005ce8 to i32*
  %v2_10005cf0 = call i32 @function_1000ae34(i32* %v1_10005cf0)
  br label %dec_label_pc_10005cf4

dec_label_pc_10005cf4:                            ; preds = %dec_label_pc_10005aac, %dec_label_pc_10005ce8
  store i32 ptrtoint ([3 x i8]* @global_var_10005cfc.87 to i32), i32* @lr, align 4
  %v1_10005cf8 = call i32 @function_1000c280(i32 1)
  store i32 ptrtoint ([3 x i8]* @global_var_10005d04.88 to i32), i32* @lr, align 4
  %v1_10005d00 = call i32 @function_100097f4(i32 6)
  store i32 ptrtoint ([3 x i8]* @global_var_10005d0c.89 to i32), i32* @lr, align 4
  %v1_10005d08 = call i32 @function_100097f4(i32 7)
  store i32 268459284, i32* @lr, align 4
  %v1_10005d10 = call i32 @function_100097f4(i32 9)
  br label %dec_label_pc_10005d14

dec_label_pc_10005d14:                            ; preds = %dec_label_pc_1000589c, %dec_label_pc_10005cf4
  %v0_10005d18 = load i32, i32* @r31, align 4
  store i32 %v0_1000583c, i32* @r23, align 4
  store i32 %v0_10005824, i32* @r25, align 4
  store i32 %v0_10005804, i32* @r27, align 4
  store i32 %v0_10005844, i32* @r28, align 4
  store i32 %v0_10005814, i32* @r29, align 4
  store i32 %v0_1000582c, i32* @r30, align 4
  store i32 %v0_10005834, i32* @r31, align 4
  ret i32 %v0_10005d18

dec_label_pc_10005d4c:                            ; preds = %dec_label_pc_100059d8
  %v3_100059d8 = icmp eq i32 %v0_10005a0c75, 0
  %v1_10005d4c = add i32 %v0_10005a0c75, 1
  br i1 %v3_100059d8, label %dec_label_pc_10005d54, label %dec_label_pc_100059e0

dec_label_pc_10005d54:                            ; preds = %dec_label_pc_10005d4c
  %v0_10005d54 = load i32, i32* %r26.global-to-local, align 4
  %v2_10005d54 = add i32 %v0_10005d54, %v1_10005a7077
  %v1_10005d58 = add i32 %v2_10005d54, 33
  %v2_10005d58 = inttoptr i32 %v1_10005d58 to i8*
  %v3_10005d58 = load i8, i8* %v2_10005d58, align 1
  %v3_10005d5c = icmp eq i8 %v3_10005d58, 65
  br i1 %v3_10005d5c, label %dec_label_pc_10005d64, label %dec_label_pc_100059bc

dec_label_pc_10005d64:                            ; preds = %dec_label_pc_10005d54
  br label %dec_label_pc_100059bc.outer

dec_label_pc_10005d6c:                            ; preds = %dec_label_pc_10005a94
  store i32 0, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005d78.90 to i32), i32* @lr, align 4
  %v1_10005d74 = call i32 @function_100097f4(i32 6)
  store i32 ptrtoint ([3 x i8]* @global_var_10005d80.91 to i32), i32* @lr, align 4
  %v1_10005d7c = call i32 @function_100097f4(i32 7)
  store i32 268459400, i32* @lr, align 4
  %v1_10005d84 = call i32 @function_100097f4(i32 9)
  %v0_10005d8c = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_1000583c, i32* @r23, align 4
  store i32 %v0_10005824, i32* @r25, align 4
  store i32 %v0_10005804, i32* @r27, align 4
  store i32 %v0_10005844, i32* @r28, align 4
  store i32 %v0_10005814, i32* @r29, align 4
  store i32 %v0_1000582c, i32* @r30, align 4
  store i32 %v0_10005834, i32* @r31, align 4
  ret i32 %v0_10005d8c

dec_label_pc_10005dc0:                            ; preds = %dec_label_pc_100057f4
  store i8 48, i8* %stack_var_-8776, align 1
  br label %dec_label_pc_1000589c

; uselistorder directives
  uselistorder i32 %v2_10005cdc, { 1, 0 }
  uselistorder i32 %v1_10005a70.lcssa, { 5, 3, 2, 1, 0, 4 }
  uselistorder i32 %v0_10005a0c75, { 2, 0, 4, 1, 3 }
  uselistorder i32 %v1_10005a7077, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_100059f022, { 1, 0 }
  uselistorder i32 %v1_1000598c, { 0, 2, 3, 4, 5, 1 }
  uselistorder i32 %v2_100058d8, { 1, 0, 2 }
  uselistorder i32 %v2_10005828, { 1, 0 }
  uselistorder i32 %v2_10005808, { 1, 2, 3, 4, 5, 6, 0, 7 }
  uselistorder i8* %stack_var_-8776, { 2, 0, 1 }
  uselistorder i8* %stack_var_-8760, { 1, 3, 0, 2 }
  uselistorder i32* %stack_var_-8792, { 0, 1, 3, 2 }
  uselistorder i32 (i32, i32)* @function_1000a228, { 4, 3, 2, 1, 0 }
  uselistorder i32 268458708, { 1, 0 }
  uselistorder i8 58, { 1, 0 }
  uselistorder i32 (i8*, i32, i32)* @function_1000a360, { 1, 0 }
  uselistorder i32 268458220, { 1, 0 }
  uselistorder label %dec_label_pc_10005d14, { 1, 0 }
  uselistorder label %dec_label_pc_10005cf4, { 1, 0 }
  uselistorder label %dec_label_pc_10005ce8, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_10005cd0, { 1, 0 }
  uselistorder label %dec_label_pc_10005bc4, { 1, 0 }
  uselistorder label %dec_label_pc_10005bc4.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_10005adc, { 1, 0 }
  uselistorder label %dec_label_pc_10005adc.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10005acc.loopexit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10005a1c, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_10005a08, { 1, 0 }
  uselistorder label %dec_label_pc_100059e0, { 1, 0 }
  uselistorder label %dec_label_pc_100059bc, { 1, 0 }
  uselistorder label %dec_label_pc_10005984, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10005934, { 1, 0 }
  uselistorder label %dec_label_pc_100058dc.backedge, { 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_100058f4, { 1, 0 }
  uselistorder label %dec_label_pc_1000589c, { 1, 0 }
}

define i32 @function_10005de4(i32 %arg1) local_unnamed_addr {
dec_label_pc_10005de4:
  %r11.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %stack_var_-8440 = alloca i32, align 4
  %stack_var_-8456 = alloca i32, align 4
  %stack_var_-8444 = alloca i32, align 4
  %stack_var_-8448 = alloca i32, align 4
  %stack_var_-8452 = alloca i32, align 4
  %stack_var_-8276 = alloca i32, align 4
  %stack_var_-8340 = alloca i32, align 4
  %stack_var_-8404 = alloca i32, align 4
  %stack_var_-8420 = alloca i32, align 4
  %stack_var_-4180 = alloca i32, align 4
  %stack_var_-8436 = alloca i32, align 4
  %v0_10005df0 = load i32, i32* @r30, align 4
  %v0_10005e0c = load i32, i32* @r22, align 4
  %v0_10005e10 = load i32, i32* @r23, align 4
  %v0_10005e20 = load i32, i32* @r27, align 4
  %v0_10005e24 = load i32, i32* @r28, align 4
  %v0_10005e28 = load i32, i32* @r29, align 4
  %v0_10005e2c = load i32, i32* @r31, align 4
  store i32 268459572, i32* @lr, align 4
  %v0_10005e30 = call i32 @function_1000ad5c()
  store i32 %v0_10005e30, i32* @r30, align 4
  store i32 268459580, i32* @lr, align 4
  %v0_10005e38 = call i32 @function_1000a9d4()
  store i32 %v0_10005e38, i32* @global_var_1001e194.81, align 4
  %tmp85 = icmp slt i32 %v0_10005e38, 1
  br i1 %tmp85, label %dec_label_pc_10005e98, label %dec_label_pc_10005e4c

dec_label_pc_10005e4c:                            ; preds = %dec_label_pc_10006040, %dec_label_pc_10005f38, %dec_label_pc_10005e98, %dec_label_pc_10005de4
  %v0_10005e94 = phi i32 [ -1, %dec_label_pc_10005f38 ], [ -1, %dec_label_pc_10005e98 ], [ %v0_10005e38, %dec_label_pc_10005de4 ], [ 0, %dec_label_pc_10006040 ]
  store i32 %v0_10005e0c, i32* @r22, align 4
  store i32 %v0_10005e10, i32* @r23, align 4
  store i32 %v0_10005e20, i32* @r27, align 4
  store i32 %v0_10005e24, i32* %r28.global-to-local, align 4
  store i32 %v0_10005e28, i32* @r29, align 4
  store i32 %v0_10005df0, i32* @r30, align 4
  store i32 %v0_10005e2c, i32* @r31, align 4
  ret i32 %v0_10005e94

dec_label_pc_10005e98:                            ; preds = %dec_label_pc_10005de4
  %v3_10005e98 = icmp eq i32 %v0_10005e38, -1
  br i1 %v3_10005e98, label %dec_label_pc_10005e4c, label %dec_label_pc_10005ea0

dec_label_pc_10005ea0:                            ; preds = %dec_label_pc_10005e98
  store i32 0, i32* @r28, align 4
  store i32 2, i32* %stack_var_-8436, align 4
  store i32 ptrtoint (i32* @global_var_10005eb8.92 to i32), i32* @lr, align 4
  %v1_10005eb4 = call i32 @function_100057f4(i32 23)
  store i32 268459728, i32* @lr, align 4
  %v3_10005ecc = call i32 @function_1000b758(i32 2, i32 1, i32 0)
  %v3_10005ed0 = icmp eq i32 %v3_10005ecc, -1
  store i32 %v3_10005ecc, i32* @r31, align 4
  br i1 %v3_10005ed0, label %dec_label_pc_10005ef4, label %dec_label_pc_10005edc

dec_label_pc_10005edc:                            ; preds = %dec_label_pc_10005ea0
  %v2_10005edc = ptrtoint i32* %stack_var_-8436 to i32
  store i32 268459752, i32* @lr, align 4
  %v3_10005ee4 = call i32 @function_1000b524(i32 %v2_10005edc, i32 16, i32 16)
  %v0_10005ee8 = load i32, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005ef4.93 to i32), i32* @lr, align 4
  %v2_10005ef0 = call i32 @function_1000b5fc(i32 %v0_10005ee8, i32 1)
  br label %dec_label_pc_10005ef4

dec_label_pc_10005ef4:                            ; preds = %dec_label_pc_10005ea0, %dec_label_pc_10005edc
  store i32 ptrtoint (i32* @global_var_10005efc.94 to i32), i32* @lr, align 4
  %v1_10005ef8 = call i32 @function_100057f4(i32 22)
  store i32 268459796, i32* @lr, align 4
  %v3_10005f10 = call i32 @function_1000b758(i32 2, i32 1, i32 0)
  %v3_10005f14 = icmp eq i32 %v3_10005f10, -1
  store i32 %v3_10005f10, i32* @r31, align 4
  br i1 %v3_10005f14, label %dec_label_pc_10005f38, label %dec_label_pc_10005f20

dec_label_pc_10005f20:                            ; preds = %dec_label_pc_10005ef4
  %v2_10005f20 = ptrtoint i32* %stack_var_-8436 to i32
  store i32 268459820, i32* @lr, align 4
  %v3_10005f28 = call i32 @function_1000b524(i32 %v2_10005f20, i32 16, i32 16)
  %v0_10005f2c = load i32, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005f38.95 to i32), i32* @lr, align 4
  %v2_10005f34 = call i32 @function_1000b5fc(i32 %v0_10005f2c, i32 1)
  br label %dec_label_pc_10005f38

dec_label_pc_10005f38:                            ; preds = %dec_label_pc_10005ef4, %dec_label_pc_10005f20
  store i32 268459844, i32* @lr, align 4
  %v1_10005f40 = call i32 @function_1000c280(i32 5)
  store i32 4096, i32* @r3, align 4
  store i32 268459852, i32* @lr, align 4
  %v0_10005f48 = call i32 @function_1000b98c()
  store i32 %v0_10005f48, i32* %r11.global-to-local, align 4
  %v0_10005f58 = load i32, i32* @r28, align 4
  %v1_10005f58 = trunc i32 %v0_10005f58 to i8
  %v3_10005f58 = inttoptr i32 %v0_10005f48 to i8*
  store i8 %v1_10005f58, i8* %v3_10005f58, align 1
  %v2_10005f5c = ptrtoint i32* %stack_var_-4180 to i32
  store i32 %v2_10005f5c, i32* %r21.global-to-local, align 4
  %v0_10005f60 = load i32, i32* @r28, align 4
  store i32 %v0_10005f60, i32* @global_var_1001e18c.96, align 4
  %v0_10005f64 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10005f64, i32* @global_var_1001e190.97, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005f6c.98 to i32), i32* @lr, align 4
  %v1_10005f68 = call i32 @function_10009880(i32 6)
  store i32 268459892, i32* @lr, align 4
  %v1_10005f70 = call i32 @function_10009880(i32 7)
  %v3_10005f7c = call i32 @function_100097cc(i32 6, i32* null)
  store i32 %v2_10005f5c, i32* @r3, align 4
  %v2_10005f88 = bitcast i32* %stack_var_-4180 to i8*
  %v3_10005f88 = call i32 @function_1000a128(i8* %v2_10005f88, i32 %v3_10005f7c)
  %v0_10005f8c = load i32, i32* %r21.global-to-local, align 4
  %v2_10005f8c = add i32 %v0_10005f8c, %v3_10005f88
  store i32 %v2_10005f8c, i32* %r29.global-to-local, align 4
  store i32 268459924, i32* @lr, align 4
  %v0_10005f90 = call i32 @function_1000aa1c()
  %v2_10005f94 = ptrtoint i32* %stack_var_-8420 to i32
  %v3_10005f9c = trunc i32 %v0_10005f90 to i8
  %v4_10005f9c = call i32 @function_1000a660(i8 %v3_10005f9c, i32 10, i32 %v2_10005f94)
  store i32 %v2_10005f8c, i32* @r3, align 4
  %v2_10005fa8 = inttoptr i32 %v2_10005f8c to i8*
  %v3_10005fa8 = call i32 @function_1000a128(i8* %v2_10005fa8, i32 %v4_10005f9c)
  %v0_10005fb0 = load i32, i32* %r29.global-to-local, align 4
  %v2_10005fb0 = add i32 %v0_10005fb0, %v3_10005fa8
  store i32 %v2_10005fb0, i32* %r29.global-to-local, align 4
  %v3_10005fb8 = call i32 @function_100097cc(i32 7, i32* null)
  store i32 %v2_10005fb0, i32* @r3, align 4
  %v2_10005fc4 = inttoptr i32 %v2_10005fb0 to i8*
  %v3_10005fc4 = call i32 @function_1000a128(i8* %v2_10005fc4, i32 %v3_10005fb8)
  store i32 %v3_10005fc4, i32* @r31, align 4
  store i32 268459996, i32* @lr, align 4
  %v2_10005fd8 = call i32 @function_1000aaf4(i32 %v2_10005f5c, i32 0)
  %v3_10005fdc = icmp eq i32 %v2_10005fd8, -1
  br i1 %v3_10005fdc, label %dec_label_pc_10005e4c, label %dec_label_pc_10005fe4

dec_label_pc_10005fe4:                            ; preds = %dec_label_pc_10005f38
  store i32 ptrtoint ([3 x i8]* @global_var_10005fe8.99 to i32), i32* @lr, align 4
  %v0_10005fe4 = call i32 @function_1000a98c()
  store i32 ptrtoint ([3 x i8]* @global_var_10005ff0.100 to i32), i32* @lr, align 4
  %v1_10005fec = call i32 @function_100097f4(i32 6)
  store i32 268460024, i32* @lr, align 4
  %v1_10005ff4 = call i32 @function_100097f4(i32 7)
  %v3_10005ff8 = load i32, i32* @global_var_1001e190.97, align 4
  store i32 268460040, i32* @lr, align 4
  %v3_10006004 = call i32 @function_1000ac0c(i32 %v2_10005f5c, i32 %v3_10005ff8, i32 4095)
  %v3_10006008 = icmp eq i32 %v3_10006004, -1
  br i1 %v3_10006008, label %dec_label_pc_10006018, label %dec_label_pc_10006010

dec_label_pc_10006010:                            ; preds = %dec_label_pc_10005fe4
  %v3_10006010 = load i32, i32* @global_var_1001e190.97, align 4
  %v0_10006014 = load i32, i32* @r28, align 4
  %v3_10006014 = trunc i32 %v0_10006014 to i8
  %v4_10006014 = add i32 %v3_10006010, %v3_10006004
  %v5_10006014 = inttoptr i32 %v4_10006014 to i8*
  store i8 %v3_10006014, i8* %v5_10006014, align 1
  br label %dec_label_pc_10006018

dec_label_pc_10006018:                            ; preds = %dec_label_pc_10005fe4, %dec_label_pc_10006010
  %v0_10006018 = load i32, i32* %r29.global-to-local, align 4
  %v1_10006018 = load i32, i32* @r31, align 4
  %v2_10006018 = add i32 %v1_10006018, %v0_10006018
  store i32 %v2_10005f5c, i32* @r3, align 4
  %v0_10006020 = load i32, i32* %r21.global-to-local, align 4
  %v2_10006020 = sub i32 %v2_10006018, %v0_10006020
  store i32 %v2_10006020, i32* @r4, align 4
  %v0_10006024 = load i32, i32* @r30, align 4
  store i32 %v0_10006024, i32* %r29.global-to-local, align 4
  store i32 268460076, i32* @lr, align 4
  %v0_10006028 = call i32 @function_1000a1a8()
  store i32 400, i32* %r28.global-to-local, align 4
  store i32 0, i32* @r23, align 4
  %v2_10006034 = ptrtoint i32* %stack_var_-8404 to i32
  store i32 %v2_10006034, i32* @r22, align 4
  %v2_10006038 = ptrtoint i32* %stack_var_-8340 to i32
  store i32 %v2_10006038, i32* %r20.global-to-local, align 4
  %v2_1000603c = ptrtoint i32* %stack_var_-8276 to i32
  %v2_1000610c = bitcast i32* %stack_var_-8404 to i8*
  %v2_10006150 = bitcast i32* %stack_var_-8340 to i8*
  %v3_100061d8 = bitcast i32* %stack_var_-8276 to i8*
  br label %dec_label_pc_10006040

dec_label_pc_10006040:                            ; preds = %dec_label_pc_100060d0, %dec_label_pc_10006018
  store i32 268460104, i32* @lr, align 4
  %v1_10006044 = call i32 @function_10009880(i32 6)
  %v3_10006050 = call i32 @function_100097cc(i32 6, i32* null)
  store i32 268460120, i32* @lr, align 4
  %v1_10006054 = call i32 @function_1000aed8(i32 %v3_10006050)
  store i32 %v1_10006054, i32* @r27, align 4
  %v3_10006058 = icmp eq i32 %v1_10006054, 0
  br i1 %v3_10006058, label %dec_label_pc_10005e4c, label %dec_label_pc_10006060

dec_label_pc_10006060:                            ; preds = %dec_label_pc_10006040
  store i32 268460136, i32* @lr, align 4
  %v1_10006064 = call i32 @function_100097f4(i32 6)
  %v0_1000606813 = load i32, i32* @r27, align 4
  store i32 268460144, i32* @lr, align 4
  %v1_1000606c14 = inttoptr i32 %v0_1000606813 to i32*
  %v2_1000606c15 = call i32 @function_1000afe8(i32* %v1_1000606c14)
  %v3_1000607018 = icmp eq i32 %v2_1000606c15, 0
  br i1 %v3_1000607018, label %dec_label_pc_100060d0, label %dec_label_pc_10006078.preheader

dec_label_pc_10006078.preheader:                  ; preds = %dec_label_pc_10006060, %dec_label_pc_10006068.backedge
  %v0_1000607821 = phi i32 [ %v2_1000606c, %dec_label_pc_10006068.backedge ], [ %v2_1000606c15, %dec_label_pc_10006060 ]
  br label %dec_label_pc_10006078

dec_label_pc_10006078:                            ; preds = %dec_label_pc_10006078.preheader, %dec_label_pc_100060bc
  %v0_1000608c = phi i32 [ %v0_1000607821, %dec_label_pc_10006078.preheader ], [ %v2_100060c4, %dec_label_pc_100060bc ]
  %v1_10006078 = add i32 %v0_1000608c, 11
  %v2_10006078 = inttoptr i32 %v1_10006078 to i8*
  %v3_10006078 = load i8, i8* %v2_10006078, align 1
  %v4_10006078 = zext i8 %v3_10006078 to i32
  %v1_1000607c = add nuw nsw i32 %v4_10006078, 208
  %v1_10006080 = urem i32 %v1_1000607c, 256
  %v2_10006084 = icmp ugt i32 %v1_10006080, 9
  br i1 %v2_10006084, label %dec_label_pc_10006068.backedge, label %dec_label_pc_1000608c

dec_label_pc_1000608c:                            ; preds = %dec_label_pc_10006078
  %v0_10006090 = load i32, i32* @r23, align 4
  %v1_10006090 = add i32 %v0_10006090, 1
  store i32 %v1_10006090, i32* @r23, align 4
  store i32 268460188, i32* @lr, align 4
  %v3_10006098 = call i32 @function_1000c034(i8* %v2_10006078, i32 %v1_10006080)
  %v0_1000609c = load i32, i32* @r28, align 4
  %v2_1000609c = icmp slt i32 %v0_1000609c, %v3_10006098
  store i32 %v3_10006098, i32* %r30.global-to-local, align 4
  br i1 %v2_1000609c, label %dec_label_pc_100060dc, label %dec_label_pc_100060a8

dec_label_pc_100060a8:                            ; preds = %dec_label_pc_1000608c
  store i32 268460208, i32* @lr, align 4
  %v0_100060ac = call i32 @function_1000ad5c()
  %v0_100060b0 = load i32, i32* @r29, align 4
  %v2_100060b0 = sub i32 %v0_100060ac, %v0_100060b0
  %tmp86 = icmp slt i32 %v2_100060b0, 601
  br i1 %tmp86, label %dec_label_pc_10006238, label %dec_label_pc_100060bc

dec_label_pc_100060bc:                            ; preds = %dec_label_pc_100060a8
  %v0_100060bc = load i32, i32* @r27, align 4
  store i32 400, i32* %r28.global-to-local, align 4
  store i32 268460232, i32* @lr, align 4
  %v1_100060c4 = inttoptr i32 %v0_100060bc to i32*
  %v2_100060c4 = call i32 @function_1000afe8(i32* %v1_100060c4)
  %v3_100060c8 = icmp eq i32 %v2_100060c4, 0
  br i1 %v3_100060c8, label %dec_label_pc_100060d0, label %dec_label_pc_10006078

dec_label_pc_100060d0:                            ; preds = %dec_label_pc_10006068.backedge, %dec_label_pc_100060bc, %dec_label_pc_10006060
  %v0_100060d0 = load i32, i32* @r27, align 4
  store i32 268460248, i32* @lr, align 4
  %v1_100060d4 = inttoptr i32 %v0_100060d0 to i32*
  %v2_100060d4 = call i32 @function_1000ae34(i32* %v1_100060d4)
  br label %dec_label_pc_10006040

dec_label_pc_100060dc:                            ; preds = %dec_label_pc_1000608c
  store i32 268460260, i32* @lr, align 4
  %v0_100060e0 = call i32 @function_1000ad5c()
  store i32 %v0_100060e0, i32* %r19.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100060f0.102 to i32), i32* @lr, align 4
  %v1_100060ec = call i32 @function_10009880(i32 6)
  store i32 268460280, i32* @lr, align 4
  %v1_100060f4 = call i32 @function_10009880(i32 7)
  %v3_10006100 = call i32 @function_100097cc(i32 6, i32* null)
  store i32 %v2_10006034, i32* @r3, align 4
  %v3_1000610c = call i32 @function_1000a128(i8* %v2_1000610c, i32 %v3_10006100)
  %v0_10006110 = load i32, i32* @r31, align 4
  %v0_10006114 = load i32, i32* @r22, align 4
  %v2_10006114 = add i32 %v0_10006114, %v3_1000610c
  store i32 %v2_10006114, i32* %r28.global-to-local, align 4
  store i32 %v2_10006114, i32* @r3, align 4
  %v2_1000611c = inttoptr i32 %v2_10006114 to i8*
  %v3_1000611c = call i32 @function_1000a128(i8* %v2_1000611c, i32 %v0_10006110)
  store i32 %v3_1000611c, i32* %r29.global-to-local, align 4
  %v3_1000612c = call i32 @function_100097cc(i32 7, i32* null)
  %v2_10006134 = add i32 %v3_1000611c, %v2_10006114
  store i32 %v2_10006134, i32* @r3, align 4
  %v2_10006138 = inttoptr i32 %v2_10006134 to i8*
  %v3_10006138 = call i32 @function_1000a128(i8* %v2_10006138, i32 %v3_1000612c)
  %v3_10006144 = call i32 @function_100097cc(i32 6, i32* null)
  store i32 %v2_10006038, i32* @r3, align 4
  %v3_10006150 = call i32 @function_1000a128(i8* %v2_10006150, i32 %v3_10006144)
  %v0_10006154 = load i32, i32* @r31, align 4
  %v0_10006158 = load i32, i32* %r20.global-to-local, align 4
  %v2_10006158 = add i32 %v0_10006158, %v3_10006150
  store i32 %v2_10006158, i32* %r28.global-to-local, align 4
  store i32 %v2_10006158, i32* @r3, align 4
  %v2_10006160 = inttoptr i32 %v2_10006158 to i8*
  %v3_10006160 = call i32 @function_1000a128(i8* %v2_10006160, i32 %v0_10006154)
  store i32 %v3_10006160, i32* %r29.global-to-local, align 4
  %v3_10006170 = call i32 @function_100097cc(i32 11, i32* null)
  %v2_10006178 = add i32 %v3_10006160, %v2_10006158
  store i32 %v2_10006178, i32* @r3, align 4
  %v2_1000617c = inttoptr i32 %v2_10006178 to i8*
  %v3_1000617c = call i32 @function_1000a128(i8* %v2_1000617c, i32 %v3_10006170)
  store i32 ptrtoint ([3 x i8]* @global_var_10006188.104 to i32), i32* @lr, align 4
  %v1_10006184 = call i32 @function_100097f4(i32 6)
  store i32 268460432, i32* @lr, align 4
  %v1_1000618c = call i32 @function_100097f4(i32 7)
  store i32 4095, i32* @r5, align 4
  store i32 268460448, i32* @lr, align 4
  %v3_1000619c = call i32 @function_1000ac0c(i32 %v2_10006034, i32 %v2_1000603c, i32 4095)
  %v3_100061a0 = icmp eq i32 %v3_1000619c, -1
  store i32 %v3_1000619c, i32* %r29.global-to-local, align 4
  br i1 %v3_100061a0, label %dec_label_pc_1000628c, label %dec_label_pc_100061ac

dec_label_pc_100061ac:                            ; preds = %dec_label_pc_100060dc
  %v0_100061ac = load i32, i32* @r1, align 4
  %v2_100061ac = add i32 %v0_100061ac, %v3_1000619c
  %v3_100061b4 = add i32 %v2_100061ac, 188
  %v4_100061b4 = inttoptr i32 %v3_100061b4 to i8*
  store i8 0, i8* %v4_100061b4, align 1
  store i32 268460480, i32* @lr, align 4
  %v1_100061bc = call i32 @function_10009880(i32 10)
  %v3_100061c8 = call i32 @function_100097cc(i32 10, i32* null)
  %v0_100061cc = load i32, i32* %r29.global-to-local, align 4
  %v1_100061cc = add i32 %v0_100061cc, -1
  %v4_100061d8 = call i32 @function_1000a4b0(i8* %v3_100061d8, i32 %v1_100061cc, i32 %v3_100061c8)
  %v3_100061dc = icmp eq i32 %v4_100061d8, -1
  br i1 %v3_100061dc, label %dec_label_pc_100061f8, label %dec_label_pc_100061e4

dec_label_pc_100061e4:                            ; preds = %dec_label_pc_100061ac
  store i32 268460524, i32* @lr, align 4
  %v1_100061e8 = call i32 @function_1000ada4(i32 %v2_1000603c)
  %v0_100061ec = load i32, i32* %r30.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100061f8.105 to i32), i32* @lr, align 4
  %v2_100061f4 = call i32 @function_1000aaac(i32 %v0_100061ec, i32 9)
  br label %dec_label_pc_100061f8

dec_label_pc_100061f8:                            ; preds = %dec_label_pc_100061ac, %dec_label_pc_100061e4
  store i32 ptrtoint (i32* @global_var_10006200.106 to i32), i32* @lr, align 4
  %v1_100061fc = call i32 @function_100097f4(i32 10)
  store i32 268460548, i32* @lr, align 4
  %v0_10006200 = call i32 @function_1000aa1c()
  %v0_10006204 = load i32, i32* %r30.global-to-local, align 4
  %v4_10006204 = icmp eq i32 %v0_10006204, %v0_10006200
  br i1 %v4_10006204, label %dec_label_pc_1000622c, label %dec_label_pc_1000620c

dec_label_pc_1000620c:                            ; preds = %dec_label_pc_100061f8
  store i32 268460560, i32* @lr, align 4
  %v0_1000620c = call i32 @function_1000aa64()
  %v0_10006210 = load i32, i32* %r30.global-to-local, align 4
  %v4_10006210 = icmp eq i32 %v0_10006210, %v0_1000620c
  br i1 %v4_10006210, label %dec_label_pc_1000622c, label %dec_label_pc_10006218

dec_label_pc_10006218:                            ; preds = %dec_label_pc_1000620c
  %v3_10006218 = load i32, i32* @global_var_1001e190.97, align 4
  %v3_10006220 = call i32 @function_1000a55c(i8* %v3_100061d8, i32 %v3_10006218)
  %v3_10006224 = icmp eq i32 %v3_10006220, 0
  br i1 %v3_10006224, label %dec_label_pc_10006268, label %dec_label_pc_10006218.dec_label_pc_1000622c_crit_edge

dec_label_pc_10006218.dec_label_pc_1000622c_crit_edge: ; preds = %dec_label_pc_10006218
  %v0_1000622c.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000622c

dec_label_pc_1000622c:                            ; preds = %dec_label_pc_10006218.dec_label_pc_1000622c_crit_edge, %dec_label_pc_1000620c, %dec_label_pc_100061f8
  %v0_1000622c = phi i32 [ %v0_1000622c.pre, %dec_label_pc_10006218.dec_label_pc_1000622c_crit_edge ], [ %v0_1000620c, %dec_label_pc_1000620c ], [ %v0_10006200, %dec_label_pc_100061f8 ]
  store i32 %v0_1000622c, i32* %r28.global-to-local, align 4
  %v0_10006230 = load i32, i32* %r19.global-to-local, align 4
  store i32 %v0_10006230, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10006068.backedge

dec_label_pc_10006068.backedge:                   ; preds = %dec_label_pc_10006078, %dec_label_pc_1000622c, %dec_label_pc_1000625c, %dec_label_pc_100064cc, %dec_label_pc_10006238, %dec_label_pc_10006240
  %v0_10006068 = load i32, i32* @r27, align 4
  store i32 268460144, i32* @lr, align 4
  %v1_1000606c = inttoptr i32 %v0_10006068 to i32*
  %v2_1000606c = call i32 @function_1000afe8(i32* %v1_1000606c)
  %v3_10006070 = icmp eq i32 %v2_1000606c, 0
  br i1 %v3_10006070, label %dec_label_pc_100060d0, label %dec_label_pc_10006078.preheader

dec_label_pc_10006238:                            ; preds = %dec_label_pc_100060a8
  %v0_10006238 = load i32, i32* %r30.global-to-local, align 4
  %tmp87 = icmp slt i32 %v0_10006238, 401
  br i1 %tmp87, label %dec_label_pc_10006068.backedge, label %dec_label_pc_10006240

dec_label_pc_10006240:                            ; preds = %dec_label_pc_10006238
  %v0_10006248 = load i32, i32* @r23, align 4
  %v1_1000624c = urem i32 %v0_10006248, 10
  %v4_10006254 = icmp eq i32 %v1_1000624c, 0
  br i1 %v4_10006254, label %dec_label_pc_1000625c, label %dec_label_pc_10006068.backedge

dec_label_pc_1000625c:                            ; preds = %dec_label_pc_10006240
  store i32 268460644, i32* @lr, align 4
  %v1_10006260 = call i32 @function_1000c280(i32 1)
  br label %dec_label_pc_10006068.backedge

dec_label_pc_10006268:                            ; preds = %dec_label_pc_10006218
  store i32 268460664, i32* @lr, align 4
  %v2_10006274 = call i32 @function_1000aaf4(i32 %v2_1000603c, i32 0)
  %v3_10006278 = icmp eq i32 %v2_10006274, -1
  store i32 %v2_10006274, i32* @r31, align 4
  br i1 %v3_10006278, label %dec_label_pc_10006528, label %dec_label_pc_10006284

dec_label_pc_10006284:                            ; preds = %dec_label_pc_10006268, %dec_label_pc_10006528
  store i32 268460684, i32* @lr, align 4
  %v0_10006288 = call i32 @function_1000a98c()
  br label %dec_label_pc_1000628c

dec_label_pc_1000628c:                            ; preds = %dec_label_pc_100060dc, %dec_label_pc_10006284
  store i32 268460700, i32* @lr, align 4
  %v2_10006298 = call i32 @function_1000aaf4(i32 %v2_10006034, i32 0)
  %v3_1000629c = icmp eq i32 %v2_10006298, -1
  store i32 %v2_10006298, i32* %r24.global-to-local, align 4
  br i1 %v3_1000629c, label %dec_label_pc_100064cc, label %dec_label_pc_100062a8

dec_label_pc_100062a8:                            ; preds = %dec_label_pc_1000628c
  store i32 ptrtoint ([3 x i8]* @global_var_100062b0.107 to i32), i32* @lr, align 4
  %v1_100062ac = call i32 @function_10009880(i32 12)
  store i32 ptrtoint ([3 x i8]* @global_var_100062b8.108 to i32), i32* @lr, align 4
  %v1_100062b4 = call i32 @function_10009880(i32 13)
  store i32 ptrtoint ([3 x i8]* @global_var_100062c0.109 to i32), i32* @lr, align 4
  %v1_100062bc = call i32 @function_10009880(i32 14)
  store i32 ptrtoint ([3 x i8]* @global_var_100062c8.110 to i32), i32* @lr, align 4
  %v1_100062c4 = call i32 @function_10009880(i32 15)
  store i32 268460752, i32* @lr, align 4
  %v1_100062cc = call i32 @function_10009880(i32 16)
  %v3_100062d8 = call i32 @function_100097cc(i32 12, i32* nonnull %stack_var_-8452)
  store i32 %v3_100062d8, i32* @r31, align 4
  %v3_100062e8 = call i32 @function_100097cc(i32 13, i32* nonnull %stack_var_-8448)
  store i32 %v3_100062e8, i32* %r29.global-to-local, align 4
  %v3_100062f8 = call i32 @function_100097cc(i32 14, i32* nonnull %stack_var_-8444)
  store i32 %v3_100062f8, i32* %r28.global-to-local, align 4
  %v3_10006308 = call i32 @function_100097cc(i32 15, i32* nonnull %stack_var_-8456)
  store i32 %v3_10006308, i32* %r26.global-to-local, align 4
  %v3_10006318 = call i32 @function_100097cc(i32 16, i32* nonnull %stack_var_-8440)
  store i32 %v3_10006318, i32* %r25.global-to-local, align 4
  %v0_1000632094 = load i32, i32* %r24.global-to-local, align 4
  store i32 268460848, i32* @lr, align 4
  %v3_1000632c95 = call i32 @function_1000abc4(i32 %v0_1000632094, i32 %v2_10005f5c, i32 4096)
  %tmp8897 = icmp slt i32 %v3_1000632c95, 1
  br i1 %tmp8897, label %dec_label_pc_10006538, label %dec_label_pc_10006338

dec_label_pc_10006338:                            ; preds = %dec_label_pc_100062a8, %dec_label_pc_10006320.backedge
  %v3_1000632c98 = phi i32 [ %v3_1000632c, %dec_label_pc_10006320.backedge ], [ %v3_1000632c95, %dec_label_pc_100062a8 ]
  %v3_1000633099.in = phi i32 [ %v3_1000632c, %dec_label_pc_10006320.backedge ], [ %v3_1000632c95, %dec_label_pc_100062a8 ]
  %v3_1000633099 = icmp eq i32 %v3_1000633099.in, 0
  %v3_10006338 = load i32, i32* %stack_var_-8452, align 4
  %v2_1000633c = icmp slt i32 %v3_1000632c98, %v3_10006338
  br i1 %v2_1000633c, label %dec_label_pc_1000637c, label %dec_label_pc_10006344

dec_label_pc_10006344:                            ; preds = %dec_label_pc_10006338
  store i32 0, i32* %r11.global-to-local, align 4
  %v0_10006358.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10006358

dec_label_pc_10006358:                            ; preds = %dec_label_pc_10006344, %dec_label_pc_10006374
  %v0_10006378 = phi i32 [ %v3_1000632c98, %dec_label_pc_10006344 ], [ %v1_10006378, %dec_label_pc_10006374 ]
  %v0_10006374 = phi i32 [ %v2_10005f5c, %dec_label_pc_10006344 ], [ %v1_10006374, %dec_label_pc_10006374 ]
  %v1_10006358 = phi i32 [ 0, %dec_label_pc_10006344 ], [ %v1_1000635825, %dec_label_pc_10006374 ]
  %v2_10006358 = add i32 %v1_10006358, %v0_10006358.pre
  %v3_10006358 = inttoptr i32 %v2_10006358 to i8*
  %v4_10006358 = load i8, i8* %v3_10006358, align 1
  %v1_1000635c = add i32 %v1_10006358, 1
  store i32 %v1_1000635c, i32* %r11.global-to-local, align 4
  %v1_10006360 = inttoptr i32 %v0_10006374 to i8*
  %v2_10006360 = load i8, i8* %v1_10006360, align 1
  %v4_10006368 = icmp eq i8 %v2_10006360, %v4_10006358
  br i1 %v4_10006368, label %dec_label_pc_1000648c, label %dec_label_pc_10006370

dec_label_pc_10006370:                            ; preds = %dec_label_pc_10006358
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10006374

dec_label_pc_10006374:                            ; preds = %dec_label_pc_1000648c, %dec_label_pc_10006370
  %v1_1000635825 = phi i32 [ %v1_1000635c, %dec_label_pc_1000648c ], [ 0, %dec_label_pc_10006370 ]
  %v1_10006374 = add i32 %v0_10006374, 1
  %v1_10006378 = add i32 %v0_10006378, -1
  %v2_10006378 = icmp eq i32 %v1_10006378, 0
  br i1 %v2_10006378, label %dec_label_pc_1000637c, label %dec_label_pc_10006358

dec_label_pc_1000637c:                            ; preds = %dec_label_pc_10006374, %dec_label_pc_10006338
  %v3_1000637c = load i32, i32* %stack_var_-8448, align 4
  %v2_10006380 = icmp slt i32 %v3_1000632c98, %v3_1000637c
  br i1 %v2_10006380, label %dec_label_pc_100063c0, label %dec_label_pc_10006388

dec_label_pc_10006388:                            ; preds = %dec_label_pc_1000637c
  store i32 0, i32* %r11.global-to-local, align 4
  br i1 %v3_1000633099, label %dec_label_pc_100063c0, label %dec_label_pc_1000639c.preheader

dec_label_pc_1000639c.preheader:                  ; preds = %dec_label_pc_10006388
  %v0_1000639c.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000639c

dec_label_pc_1000639c:                            ; preds = %dec_label_pc_1000639c.preheader, %dec_label_pc_100063bc
  %v0_100063bc = phi i32 [ %v3_1000632c98, %dec_label_pc_1000639c.preheader ], [ %v1_100063bc, %dec_label_pc_100063bc ]
  %storemerge.in = phi i32 [ %v2_10005f5c, %dec_label_pc_1000639c.preheader ], [ %storemerge, %dec_label_pc_100063bc ]
  %v1_1000639c = phi i32 [ 0, %dec_label_pc_1000639c.preheader ], [ %v1_1000639c31, %dec_label_pc_100063bc ]
  %v2_1000639c = add i32 %v1_1000639c, %v0_1000639c.pre
  %v3_1000639c = inttoptr i32 %v2_1000639c to i8*
  %v4_1000639c = load i8, i8* %v3_1000639c, align 1
  %v1_100063a0 = add i32 %v1_1000639c, 1
  store i32 %v1_100063a0, i32* %r11.global-to-local, align 4
  %v1_100063a4 = inttoptr i32 %storemerge.in to i8*
  %v2_100063a4 = load i8, i8* %v1_100063a4, align 1
  %v4_100063ac = icmp eq i8 %v2_100063a4, %v4_1000639c
  br i1 %v4_100063ac, label %dec_label_pc_100064f8, label %dec_label_pc_100063b4

dec_label_pc_100063b4:                            ; preds = %dec_label_pc_1000639c
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100063bc

dec_label_pc_100063bc:                            ; preds = %dec_label_pc_100064f8, %dec_label_pc_100063b4
  %v1_1000639c31 = phi i32 [ %v1_100063a0, %dec_label_pc_100064f8 ], [ 0, %dec_label_pc_100063b4 ]
  %storemerge = add i32 %storemerge.in, 1
  %v1_100063bc = add i32 %v0_100063bc, -1
  %v2_100063bc = icmp eq i32 %v1_100063bc, 0
  br i1 %v2_100063bc, label %dec_label_pc_100063c0, label %dec_label_pc_1000639c

dec_label_pc_100063c0:                            ; preds = %dec_label_pc_100063bc, %dec_label_pc_10006388, %dec_label_pc_1000637c
  %v3_100063c0 = load i32, i32* %stack_var_-8444, align 4
  %v2_100063c4 = icmp slt i32 %v3_1000632c98, %v3_100063c0
  br i1 %v2_100063c4, label %dec_label_pc_10006404, label %dec_label_pc_100063cc

dec_label_pc_100063cc:                            ; preds = %dec_label_pc_100063c0
  store i32 0, i32* %r11.global-to-local, align 4
  br i1 %v3_1000633099, label %dec_label_pc_10006404, label %dec_label_pc_100063e0.preheader

dec_label_pc_100063e0.preheader:                  ; preds = %dec_label_pc_100063cc
  %v0_100063e0.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_100063e0

dec_label_pc_100063e0:                            ; preds = %dec_label_pc_100063e0.preheader, %dec_label_pc_10006400
  %v0_10006400 = phi i32 [ %v3_1000632c98, %dec_label_pc_100063e0.preheader ], [ %v1_10006400, %dec_label_pc_10006400 ]
  %storemerge3.in = phi i32 [ %v2_10005f5c, %dec_label_pc_100063e0.preheader ], [ %storemerge3, %dec_label_pc_10006400 ]
  %v1_100063e0 = phi i32 [ 0, %dec_label_pc_100063e0.preheader ], [ %v1_100063e037, %dec_label_pc_10006400 ]
  %v2_100063e0 = add i32 %v1_100063e0, %v0_100063e0.pre
  %v3_100063e0 = inttoptr i32 %v2_100063e0 to i8*
  %v4_100063e0 = load i8, i8* %v3_100063e0, align 1
  %v1_100063e4 = add i32 %v1_100063e0, 1
  store i32 %v1_100063e4, i32* %r11.global-to-local, align 4
  %v1_100063e8 = inttoptr i32 %storemerge3.in to i8*
  %v2_100063e8 = load i8, i8* %v1_100063e8, align 1
  %v4_100063f0 = icmp eq i8 %v2_100063e8, %v4_100063e0
  br i1 %v4_100063f0, label %dec_label_pc_10006504, label %dec_label_pc_100063f8

dec_label_pc_100063f8:                            ; preds = %dec_label_pc_100063e0
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10006400

dec_label_pc_10006400:                            ; preds = %dec_label_pc_10006504, %dec_label_pc_100063f8
  %v1_100063e037 = phi i32 [ %v1_100063e4, %dec_label_pc_10006504 ], [ 0, %dec_label_pc_100063f8 ]
  %storemerge3 = add i32 %storemerge3.in, 1
  %v1_10006400 = add i32 %v0_10006400, -1
  %v2_10006400 = icmp eq i32 %v1_10006400, 0
  br i1 %v2_10006400, label %dec_label_pc_10006404, label %dec_label_pc_100063e0

dec_label_pc_10006404:                            ; preds = %dec_label_pc_10006400, %dec_label_pc_100063cc, %dec_label_pc_100063c0
  %v3_10006404 = load i32, i32* %stack_var_-8456, align 4
  %v2_10006408 = icmp slt i32 %v3_1000632c98, %v3_10006404
  br i1 %v2_10006408, label %dec_label_pc_10006448, label %dec_label_pc_10006410

dec_label_pc_10006410:                            ; preds = %dec_label_pc_10006404
  store i32 0, i32* %r11.global-to-local, align 4
  br i1 %v3_1000633099, label %dec_label_pc_10006448, label %dec_label_pc_10006424.preheader

dec_label_pc_10006424.preheader:                  ; preds = %dec_label_pc_10006410
  %v0_10006424.pre = load i32, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10006424

dec_label_pc_10006424:                            ; preds = %dec_label_pc_10006424.preheader, %dec_label_pc_10006444
  %v0_10006444 = phi i32 [ %v3_1000632c98, %dec_label_pc_10006424.preheader ], [ %v1_10006444, %dec_label_pc_10006444 ]
  %storemerge4.in = phi i32 [ %v2_10005f5c, %dec_label_pc_10006424.preheader ], [ %storemerge4, %dec_label_pc_10006444 ]
  %v1_10006424 = phi i32 [ 0, %dec_label_pc_10006424.preheader ], [ %v1_1000642443, %dec_label_pc_10006444 ]
  %v2_10006424 = add i32 %v1_10006424, %v0_10006424.pre
  %v3_10006424 = inttoptr i32 %v2_10006424 to i8*
  %v4_10006424 = load i8, i8* %v3_10006424, align 1
  %v1_10006428 = add i32 %v1_10006424, 1
  store i32 %v1_10006428, i32* %r11.global-to-local, align 4
  %v1_1000642c = inttoptr i32 %storemerge4.in to i8*
  %v2_1000642c = load i8, i8* %v1_1000642c, align 1
  %v4_10006434 = icmp eq i8 %v2_1000642c, %v4_10006424
  br i1 %v4_10006434, label %dec_label_pc_10006510, label %dec_label_pc_1000643c

dec_label_pc_1000643c:                            ; preds = %dec_label_pc_10006424
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10006444

dec_label_pc_10006444:                            ; preds = %dec_label_pc_10006510, %dec_label_pc_1000643c
  %v1_1000642443 = phi i32 [ %v1_10006428, %dec_label_pc_10006510 ], [ 0, %dec_label_pc_1000643c ]
  %storemerge4 = add i32 %storemerge4.in, 1
  %v1_10006444 = add i32 %v0_10006444, -1
  %v2_10006444 = icmp eq i32 %v1_10006444, 0
  br i1 %v2_10006444, label %dec_label_pc_10006448, label %dec_label_pc_10006424

dec_label_pc_10006448:                            ; preds = %dec_label_pc_10006444, %dec_label_pc_10006410, %dec_label_pc_10006404
  %v3_10006448 = load i32, i32* %stack_var_-8440, align 4
  %v2_1000644c = icmp slt i32 %v3_1000632c98, %v3_10006448
  br i1 %v2_1000644c, label %dec_label_pc_10006320.backedge, label %dec_label_pc_10006454

dec_label_pc_10006454:                            ; preds = %dec_label_pc_10006448
  store i32 0, i32* %r11.global-to-local, align 4
  br i1 %v3_1000633099, label %dec_label_pc_10006320.backedge, label %dec_label_pc_10006468.lr.ph

dec_label_pc_10006320.backedge:                   ; preds = %dec_label_pc_10006464.backedge, %dec_label_pc_10006454, %dec_label_pc_10006448
  %v0_10006320 = load i32, i32* %r24.global-to-local, align 4
  store i32 268460848, i32* @lr, align 4
  %v3_1000632c = call i32 @function_1000abc4(i32 %v0_10006320, i32 %v2_10005f5c, i32 4096)
  %tmp88 = icmp slt i32 %v3_1000632c, 1
  br i1 %tmp88, label %dec_label_pc_10006538, label %dec_label_pc_10006338

dec_label_pc_10006468.lr.ph:                      ; preds = %dec_label_pc_10006454
  %v0_10006468.pre = load i32, i32* %r25.global-to-local, align 4
  br label %dec_label_pc_10006468

dec_label_pc_10006468:                            ; preds = %dec_label_pc_10006468.lr.ph, %dec_label_pc_10006464.backedge
  %v0_10006464 = phi i32 [ %v3_1000632c98, %dec_label_pc_10006468.lr.ph ], [ %v1_10006464, %dec_label_pc_10006464.backedge ]
  %storemerge19.in = phi i32 [ %v2_10005f5c, %dec_label_pc_10006468.lr.ph ], [ %storemerge19, %dec_label_pc_10006464.backedge ]
  %v1_10006468 = phi i32 [ 0, %dec_label_pc_10006468.lr.ph ], [ %v1_1000646849, %dec_label_pc_10006464.backedge ]
  %v2_10006468 = add i32 %v1_10006468, %v0_10006468.pre
  %v3_10006468 = inttoptr i32 %v2_10006468 to i8*
  %v4_10006468 = load i8, i8* %v3_10006468, align 1
  %v1_1000646c = add i32 %v1_10006468, 1
  store i32 %v1_1000646c, i32* %r11.global-to-local, align 4
  %v1_10006470 = inttoptr i32 %storemerge19.in to i8*
  %v2_10006470 = load i8, i8* %v1_10006470, align 1
  %v4_10006478 = icmp eq i8 %v2_10006470, %v4_10006468
  br i1 %v4_10006478, label %dec_label_pc_1000651c, label %dec_label_pc_10006480

dec_label_pc_10006480:                            ; preds = %dec_label_pc_10006468
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10006464.backedge

dec_label_pc_10006464.backedge:                   ; preds = %dec_label_pc_1000651c, %dec_label_pc_10006480
  %v1_1000646849 = phi i32 [ 0, %dec_label_pc_10006480 ], [ %v1_1000646c, %dec_label_pc_1000651c ]
  %storemerge19 = add i32 %storemerge19.in, 1
  %v1_10006464 = add i32 %v0_10006464, -1
  %v2_10006464 = icmp eq i32 %v1_10006464, 0
  br i1 %v2_10006464, label %dec_label_pc_10006320.backedge, label %dec_label_pc_10006468

dec_label_pc_1000648c:                            ; preds = %dec_label_pc_10006358
  %v4_10006364 = icmp eq i32 %v3_10006338, %v1_1000635c
  br i1 %v4_10006364, label %dec_label_pc_10006490, label %dec_label_pc_10006374

dec_label_pc_10006490:                            ; preds = %dec_label_pc_1000648c, %dec_label_pc_100064f8, %dec_label_pc_10006504, %dec_label_pc_10006510, %dec_label_pc_1000651c
  store i32 ptrtoint ([3 x i8]* @global_var_10006498.111 to i32), i32* @lr, align 4
  %v1_10006494 = call i32 @function_100097f4(i32 12)
  store i32 ptrtoint ([3 x i8]* @global_var_100064a0.112 to i32), i32* @lr, align 4
  %v1_1000649c = call i32 @function_100097f4(i32 13)
  store i32 ptrtoint ([3 x i8]* @global_var_100064a8.113 to i32), i32* @lr, align 4
  %v1_100064a4 = call i32 @function_100097f4(i32 14)
  store i32 ptrtoint ([3 x i8]* @global_var_100064b0.114 to i32), i32* @lr, align 4
  %v1_100064ac = call i32 @function_100097f4(i32 15)
  store i32 268461240, i32* @lr, align 4
  %v1_100064b4 = call i32 @function_100097f4(i32 16)
  store i32 268461248, i32* @lr, align 4
  %v0_100064bc = call i32 @function_1000a98c()
  %v0_100064c0 = load i32, i32* %r30.global-to-local, align 4
  store i32 268461260, i32* @lr, align 4
  %v2_100064c8 = call i32 @function_1000aaac(i32 %v0_100064c0, i32 9)
  br label %dec_label_pc_100064cc

dec_label_pc_100064cc:                            ; preds = %dec_label_pc_1000628c, %dec_label_pc_10006538, %dec_label_pc_10006490
  store i32 64, i32* @r4, align 4
  store i32 %v2_10006034, i32* @r3, align 4
  store i32 268461272, i32* @lr, align 4
  %v0_100064d4 = call i32 @function_1000a1a8()
  store i32 %v2_10006038, i32* @r3, align 4
  store i32 64, i32* @r4, align 4
  %v0_100064e0 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_100064e0, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100064e8.115 to i32), i32* @lr, align 4
  %v0_100064e4 = call i32 @function_1000a1a8()
  store i32 268461296, i32* @lr, align 4
  %v1_100064ec = call i32 @function_1000c280(i32 1)
  %v0_100064f0 = load i32, i32* %r19.global-to-local, align 4
  store i32 %v0_100064f0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10006068.backedge

dec_label_pc_100064f8:                            ; preds = %dec_label_pc_1000639c
  %v4_100063a8 = icmp eq i32 %v3_1000637c, %v1_100063a0
  br i1 %v4_100063a8, label %dec_label_pc_10006490, label %dec_label_pc_100063bc

dec_label_pc_10006504:                            ; preds = %dec_label_pc_100063e0
  %v4_100063ec = icmp eq i32 %v3_100063c0, %v1_100063e4
  br i1 %v4_100063ec, label %dec_label_pc_10006490, label %dec_label_pc_10006400

dec_label_pc_10006510:                            ; preds = %dec_label_pc_10006424
  %v4_10006430 = icmp eq i32 %v3_10006404, %v1_10006428
  br i1 %v4_10006430, label %dec_label_pc_10006490, label %dec_label_pc_10006444

dec_label_pc_1000651c:                            ; preds = %dec_label_pc_10006468
  %v4_10006474 = icmp eq i32 %v3_10006448, %v1_1000646c
  br i1 %v4_10006474, label %dec_label_pc_10006490, label %dec_label_pc_10006464.backedge

dec_label_pc_10006528:                            ; preds = %dec_label_pc_10006268
  %v0_10006528 = load i32, i32* %r30.global-to-local, align 4
  store i32 268461364, i32* @lr, align 4
  %v2_10006530 = call i32 @function_1000aaac(i32 %v0_10006528, i32 9)
  br label %dec_label_pc_10006284

dec_label_pc_10006538:                            ; preds = %dec_label_pc_10006320.backedge, %dec_label_pc_100062a8
  store i32 ptrtoint ([3 x i8]* @global_var_10006540.116 to i32), i32* @lr, align 4
  %v1_1000653c = call i32 @function_100097f4(i32 12)
  store i32 ptrtoint ([3 x i8]* @global_var_10006548.117 to i32), i32* @lr, align 4
  %v1_10006544 = call i32 @function_100097f4(i32 13)
  store i32 ptrtoint ([3 x i8]* @global_var_10006550.118 to i32), i32* @lr, align 4
  %v1_1000654c = call i32 @function_100097f4(i32 14)
  store i32 ptrtoint ([3 x i8]* @global_var_10006558.119 to i32), i32* @lr, align 4
  %v1_10006554 = call i32 @function_100097f4(i32 15)
  store i32 268461408, i32* @lr, align 4
  %v1_1000655c = call i32 @function_100097f4(i32 16)
  store i32 268461416, i32* @lr, align 4
  %v0_10006564 = call i32 @function_1000a98c()
  br label %dec_label_pc_100064cc

; uselistorder directives
  uselistorder i32 %v1_10006464, { 1, 0 }
  uselistorder i32 %v1_1000646c, { 1, 0, 2 }
  uselistorder i32 %v1_10006468, { 1, 0 }
  uselistorder i32 %v3_1000632c, { 2, 1, 0 }
  uselistorder i32 %v1_10006444, { 1, 0 }
  uselistorder i32 %v1_10006424, { 1, 0 }
  uselistorder i32 %v1_10006400, { 1, 0 }
  uselistorder i32 %v1_100063e0, { 1, 0 }
  uselistorder i32 %v1_100063bc, { 1, 0 }
  uselistorder i32 %v1_1000639c, { 1, 0 }
  uselistorder i32 %v1_10006378, { 1, 0 }
  uselistorder i32 %v1_10006358, { 1, 0 }
  uselistorder i1 %v3_1000633099, { 0, 3, 2, 1 }
  uselistorder i32 %v3_1000632c98, { 9, 1, 8, 4, 7, 2, 6, 0, 5, 3 }
  uselistorder i32 %v2_1000606c, { 1, 0 }
  uselistorder i32 %v2_100060c4, { 1, 0 }
  uselistorder i32 %v1_10006080, { 1, 0 }
  uselistorder i32 %v2_1000603c, { 1, 0, 2 }
  uselistorder i32 %v2_10005fb0, { 1, 0, 2 }
  uselistorder i32 %v2_10005f8c, { 1, 0, 2 }
  uselistorder i32 %v2_10005f5c, { 1, 6, 2, 3, 4, 5, 0, 7, 8, 9, 10, 11 }
  uselistorder i32 %v0_10005e38, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-8436, { 1, 2, 0 }
  uselistorder i32* %stack_var_-8452, { 1, 0 }
  uselistorder i32* %stack_var_-8448, { 1, 0 }
  uselistorder i32* %stack_var_-8444, { 1, 0 }
  uselistorder i32* %stack_var_-8456, { 1, 0 }
  uselistorder i32* %stack_var_-8440, { 1, 0 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 2, 3, 7, 4, 5, 6, 8 }
  uselistorder i32* %r24.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2, 4, 3, 5, 7, 6, 8, 10, 9, 11, 13, 12, 14, 15, 16 }
  uselistorder i32 268460848, { 1, 0 }
  uselistorder i32 (i32*)* @function_1000afe8, { 3, 2, 0, 4, 5, 6, 7, 1 }
  uselistorder i32 268460144, { 1, 0 }
  uselistorder i32 (i32)* @function_1000aed8, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_1000ac0c, { 3, 2, 1, 0 }
  uselistorder i32 4095, { 0, 2, 1 }
  uselistorder label %dec_label_pc_100064cc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10006490, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10006468, { 1, 0 }
  uselistorder label %dec_label_pc_10006424, { 1, 0 }
  uselistorder label %dec_label_pc_100063e0, { 1, 0 }
  uselistorder label %dec_label_pc_1000639c, { 1, 0 }
  uselistorder label %dec_label_pc_10006358, { 1, 0 }
  uselistorder label %dec_label_pc_10006338, { 1, 0 }
  uselistorder label %dec_label_pc_1000628c, { 1, 0 }
  uselistorder label %dec_label_pc_10006284, { 1, 0 }
  uselistorder label %dec_label_pc_10006068.backedge, { 3, 2, 5, 4, 1, 0 }
  uselistorder label %dec_label_pc_100061f8, { 1, 0 }
  uselistorder label %dec_label_pc_10006078, { 1, 0 }
  uselistorder label %dec_label_pc_10006078.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10006018, { 1, 0 }
  uselistorder label %dec_label_pc_10005f38, { 1, 0 }
  uselistorder label %dec_label_pc_10005ef4, { 1, 0 }
}

define i32 @function_1000656c() local_unnamed_addr {
dec_label_pc_1000656c:
  store i32 268461932, i32* @global_var_1001e168.120, align 4
  %v0_1000657c = load i32, i32* @r3, align 4
  ret i32 %v0_1000657c
}

define i32 @function_10006580() local_unnamed_addr {
dec_label_pc_10006580:
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  store i32 0, i32* @r27, align 4
  %v0_100065a8 = load i32, i32* @r30, align 4
  store i32 268566528, i32* @r28, align 4
  %v0_100065b0 = load i32, i32* @r31, align 4
  store i32 268566528, i32* @r31, align 4
  %v2_100065bc = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_100065bc, i32* @r30, align 4
  store i32 1, i32* %stack_var_-56, align 4
  store i32 268461512, i32* @lr, align 4
  %v3_100065c4 = call i32 @function_1000b758(i32 2, i32 1, i32 0)
  %v3_100065c8 = icmp eq i32 %v3_100065c4, -1
  store i32 %v3_100065c4, i32* @global_var_1001e160.121, align 4
  br i1 %v3_100065c8, label %dec_label_pc_10006678, label %dec_label_pc_100065e4

dec_label_pc_100065e4:                            ; preds = %dec_label_pc_10006580
  %v2_100065cc = ptrtoint i32* %stack_var_-56 to i32
  store i32 268461544, i32* @lr, align 4
  %v5_100065e4 = call i32 @function_1000b71c(i32 %v3_100065c4, i32 1, i32 2, i32 %v2_100065cc, i32 4)
  %v3_100065e8 = load i32, i32* @global_var_1001e160.121, align 4
  store i32 3, i32* @r4, align 4
  store i32 268461568, i32* @lr, align 4
  %v2_100065fc = call i32 @function_1000a85c(i32 %v3_100065e8)
  store i32 4, i32* @r4, align 4
  store i32 268461588, i32* @lr, align 4
  %v2_10006610 = call i32 @function_1000a85c(i32 %v3_100065e8)
  %v3_10006614 = load i8, i8* @global_var_1001e020.122, align 1
  %v3_1000661c = icmp eq i8 %v3_10006614, 0
  br i1 %v3_1000661c, label %dec_label_pc_1000669c, label %dec_label_pc_10006628

dec_label_pc_10006628:                            ; preds = %dec_label_pc_100065e4
  store i32 2, i32* %stack_var_-52, align 4
  %v0_1000663c = call i32 @function_1000b0a8()
  %v0_10006640 = load i32, i32* @r27, align 4
  %v2_10006640 = inttoptr i32 %v0_1000663c to i32*
  store i32 %v0_10006640, i32* %v2_10006640, align 4
  store i32 %v0_1000663c, i32* @r29, align 4
  %v3_10006650 = load i32, i32* @global_var_1001e160.121, align 4
  store i32 268461656, i32* @lr, align 4
  %v3_10006654 = call i32 @function_1000b524(i32 %v3_10006650, i32 %v2_100065bc, i32 16)
  %v3_1000665c = icmp eq i32 %v3_10006654, -1
  br i1 %v3_1000665c, label %dec_label_pc_100066e4, label %dec_label_pc_10006668

dec_label_pc_10006668:                            ; preds = %dec_label_pc_1000669c, %dec_label_pc_10006628
  %v3_10006670 = load i32, i32* @global_var_1001e160.121, align 4
  store i32 268461688, i32* @lr, align 4
  %v2_10006674 = call i32 @function_1000b5fc(i32 %v3_10006670, i32 1)
  br label %dec_label_pc_10006678

dec_label_pc_10006678:                            ; preds = %dec_label_pc_10006580, %dec_label_pc_10006668
  %v0_10006698 = phi i32 [ -1, %dec_label_pc_10006580 ], [ %v2_10006674, %dec_label_pc_10006668 ]
  store i32 %v0_100065a8, i32* @r30, align 4
  store i32 %v0_100065b0, i32* @r31, align 4
  ret i32 %v0_10006698

dec_label_pc_1000669c:                            ; preds = %dec_label_pc_100065e4
  store i32 2, i32* %stack_var_-52, align 4
  %v0_100066b8 = call i32 @function_1000b0a8()
  %v0_100066bc = load i32, i32* @r27, align 4
  %v2_100066bc = inttoptr i32 %v0_100066b8 to i32*
  store i32 %v0_100066bc, i32* %v2_100066bc, align 4
  store i32 %v0_100066b8, i32* @r29, align 4
  %v3_100066cc = load i32, i32* @global_var_1001e160.121, align 4
  store i32 268461780, i32* @lr, align 4
  %v3_100066d0 = call i32 @function_1000b524(i32 %v3_100066cc, i32 %v2_100065bc, i32 16)
  %v3_100066d8 = icmp eq i32 %v3_100066d0, -1
  br i1 %v3_100066d8, label %dec_label_pc_100066e4, label %dec_label_pc_10006668

dec_label_pc_100066e4:                            ; preds = %dec_label_pc_1000669c, %dec_label_pc_10006628
  %v0_100066e4 = load i32, i32* @r29, align 4
  %v1_100066e4 = inttoptr i32 %v0_100066e4 to i32*
  %v2_100066e4 = load i32, i32* %v1_100066e4, align 4
  %v3_100066e8 = load i32, i32* @global_var_1001e160.121, align 4
  store i32 %v3_100066e8, i32* @r3, align 4
  %v3_100066ec = icmp eq i32 %v2_100066e4, 99
  br i1 %v3_100066ec, label %dec_label_pc_10006754, label %dec_label_pc_100066f4

dec_label_pc_100066f4:                            ; preds = %dec_label_pc_10006754, %dec_label_pc_100066e4, %dec_label_pc_10006760
  store i32 2, i32* %stack_var_-52, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006710.123 to i32), i32* @lr, align 4
  %v0_1000670c = call i32 @function_1000b558()
  store i32 268461848, i32* @lr, align 4
  %v1_10006714 = call i32 @function_1000c280(i32 5)
  store i32 ptrtoint ([3 x i8]* @global_var_10006720.124 to i32), i32* @lr, align 4
  %v0_1000671c = call i32 @function_1000a98c()
  store i32 268461868, i32* @lr, align 4
  %v1_10006728 = call i32 @function_100057f4(i32 48101)
  store i32 268461872, i32* @lr, align 4
  %v0_1000672c = call i32 @function_10006580()
  store i32 %v0_100065a8, i32* @r30, align 4
  store i32 %v0_100065b0, i32* @r31, align 4
  ret i32 %v0_1000672c

dec_label_pc_10006754:                            ; preds = %dec_label_pc_100066e4
  %v3_10006754 = load i8, i8* @global_var_1001e020.122, align 1
  %v3_10006758 = icmp eq i8 %v3_10006754, 0
  br i1 %v3_10006758, label %dec_label_pc_100066f4, label %dec_label_pc_10006760

dec_label_pc_10006760:                            ; preds = %dec_label_pc_10006754
  %v0_10006764 = load i32, i32* @r27, align 4
  %v1_10006764 = trunc i32 %v0_10006764 to i8
  store i8 %v1_10006764, i8* @global_var_1001e020.122, align 1
  br label %dec_label_pc_100066f4

; uselistorder directives
  uselistorder i32 %v2_100065bc, { 1, 0, 2 }
  uselistorder i32* %stack_var_-56, { 1, 0 }
  uselistorder i32 (i32)* @function_100057f4, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_1000b5fc, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_1000b524, { 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_1001e020.122, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100066f4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10006678, { 1, 0 }
}

define i32 @function_1000676c() local_unnamed_addr {
dec_label_pc_1000676c:
  %r28.global-to-local = alloca i32, align 4
  store i32 268461964, i32* @lr, align 4
  %v1_10006788 = call i32 @function_10009880(i32 3)
  %v3_10006794 = call i32 @function_100097cc(i32 3, i32* null)
  store i32 268461980, i32* @lr, align 4
  %v1_10006798 = call i32 @function_100075b8(i32 %v3_10006794)
  store i32 %v1_10006798, i32* @r31, align 4
  store i32 268461992, i32* @lr, align 4
  %v1_100067a4 = call i32 @function_100097f4(i32 3)
  %v0_100067a8 = load i32, i32* @r31, align 4
  %v3_100067a8 = icmp eq i32 %v0_100067a8, 0
  br i1 %v3_100067a8, label %dec_label_pc_1000680c, label %dec_label_pc_100067b0

dec_label_pc_100067b0:                            ; preds = %dec_label_pc_1000676c
  %v1_100067b0 = add i32 %v0_100067a8, 4
  %v2_100067b0 = inttoptr i32 %v1_100067b0 to i32*
  %v3_100067b0 = load i32, i32* %v2_100067b0, align 4
  store i32 %v3_100067b0, i32* %r28.global-to-local, align 4
  %v0_100067b4 = call i32 @function_1000723c()
  %v0_100067b8 = load i32, i32* @r31, align 4
  %v1_100067b8 = inttoptr i32 %v0_100067b8 to i8*
  %v2_100067b8 = load i8, i8* %v1_100067b8, align 1
  %v3_100067b8 = zext i8 %v2_100067b8 to i32
  %v2_100067c4 = urem i32 %v0_100067b4, %v3_100067b8
  %v1_100067d8 = mul nuw nsw i32 %v2_100067c4, 4
  %v1_100067dc = load i32, i32* %r28.global-to-local, align 4
  %v2_100067dc = add i32 %v1_100067dc, %v1_100067d8
  %v3_100067dc = inttoptr i32 %v2_100067dc to i32*
  %v4_100067dc = load i32, i32* %v3_100067dc, align 4
  store i32 %v4_100067dc, i32* @global_var_1001e280.127, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100067e8.128 to i32), i32* @lr, align 4
  %v1_100067e4 = call i32 @function_10007574(i32 %v0_100067b8)
  store i32 ptrtoint ([3 x i8]* @global_var_100067f0.129 to i32), i32* @lr, align 4
  %v1_100067ec = call i32 @function_10009880(i32 4)
  %v3_100067f8 = call i32 @function_100097cc(i32 4, i32* null)
  %v4_100067f8 = inttoptr i32 %v3_100067f8 to i16*
  %v3_100067fc = load i16, i16* %v4_100067f8, align 2
  store i16 %v3_100067fc, i16* bitcast (i32* @global_var_1001e27e.130 to i16*), align 4
  store i32 268462092, i32* @lr, align 4
  %v1_10006808 = call i32 @function_100097f4(i32 4)
  br label %dec_label_pc_1000680c

dec_label_pc_1000680c:                            ; preds = %dec_label_pc_1000676c, %dec_label_pc_100067b0
  %v0_10006824 = phi i32 [ %v1_100067a4, %dec_label_pc_1000676c ], [ %v1_10006808, %dec_label_pc_100067b0 ]
  ret i32 %v0_10006824

; uselistorder directives
  uselistorder label %dec_label_pc_1000680c, { 1, 0 }
}

define i32 @function_10006828(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_10006828:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %tmp35 = call i8 @__decompiler_undefined_function_2()
  %tmp36 = call i32 @__decompiler_undefined_function_0()
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %tmp38 = call i32 @__decompiler_undefined_function_0()
  %tmp39 = call i32 @__decompiler_undefined_function_0()
  %tmp40 = call i32 @__decompiler_undefined_function_0()
  %tmp41 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-1620 = alloca i32, align 4
  %stack_var_-1644 = alloca i32, align 4
  %stack_var_-1100 = alloca i32, align 4
  %stack_var_-1640 = alloca i32, align 4
  %stack_var_-1484 = alloca i32, align 4
  %stack_var_-1228 = alloca i32, align 4
  %stack_var_-1652 = alloca i32, align 4
  %stack_var_-1554 = alloca i32, align 4
  %stack_var_-1586 = alloca i32, align 4
  %stack_var_-1604 = alloca i8*, align 4
  %stack_var_-1632 = alloca i8, align 1
  %stack_var_-1520 = alloca i32, align 4
  %stack_var_-1656 = alloca i16, align 2
  %stack_var_-1648 = alloca i32, align 4
  %stack_var_-1356 = alloca i32, align 4
  %v0_10006828 = load i32, i32* @lr, align 4
  store i32 %v0_10006828, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r30, align 4
  %v0_1000683c = load i32, i32* @r29, align 4
  %v2_10006840 = ptrtoint i32* %stack_var_-1356 to i32
  store i32 %v2_10006840, i32* %r29.global-to-local, align 4
  %v2_10006844 = load i32, i32* %arg2, align 4
  store i32 %tmp, i32* @r31, align 4
  store i32 268462216, i32* @lr, align 4
  %v1_10006884 = call i32 @function_1000ada4(i32 %v2_10006844)
  store i32 268462224, i32* @lr, align 4
  %v1_1000688c = call i32 @function_1000b808(i32 %v2_10006840)
  store i32 %v2_10006840, i32* @r3, align 4
  store i32 268462236, i32* @lr, align 4
  %v2_10006898 = call i32 @function_1000b7bc(i32 %v2_10006840, i32 2)
  store i32 0, i32* @r5, align 4
  store i32 268462252, i32* @lr, align 4
  %v3_100068a8 = call i32 @function_1000ace4(i32 0, i32 %v2_10006840, i32 0)
  store i32 268462264, i32* @lr, align 4
  %v2_100068b4 = call i32 @function_1000b834(i32 17, i32 1)
  store i32 268462280, i32* @lr, align 4
  %v2_100068c4 = call i32 @function_1000b834(i32 5, i32 268461420)
  store i32 268462300, i32* @lr, align 4
  %v3_100068d8 = call i32 @function_1000aaf4(i32 ptrtoint ([14 x i8]* @global_var_1000d448.131 to i32), i32 2)
  %v3_100068dc = icmp eq i32 %v3_100068d8, -1
  store i32 %v3_100068d8, i32* @r29, align 4
  br i1 %v3_100068dc, label %dec_label_pc_10006cc8, label %dec_label_pc_100068e8

dec_label_pc_100068e8:                            ; preds = %dec_label_pc_10006cc8, %dec_label_pc_10006828
  %v0_100068f4 = phi i32 [ %v3_10006cd8, %dec_label_pc_10006cc8 ], [ %v3_100068d8, %dec_label_pc_10006828 ]
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_100068f8 = ptrtoint i32* %stack_var_-1648 to i32
  store i32 %v2_100068f8, i32* %r5.global-to-local, align 4
  store i32 1, i32* %stack_var_-1648, align 4
  store i32 268462344, i32* @lr, align 4
  %v3_10006904 = call i32 @function_1000a774(i32 %v0_100068f4, i32 -2147199228, i32 %v2_100068f8)
  store i32 268462352, i32* @lr, align 4
  %v0_1000690c = call i32 @function_1000a98c()
  br label %dec_label_pc_10006910

dec_label_pc_10006910:                            ; preds = %dec_label_pc_10006cc8, %dec_label_pc_100068e8
  store i32 268566528, i32* @r24, align 4
  store i32 268566528, i32* @r22, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006924.132 to i32), i32* @lr, align 4
  %v1_10006920 = call i32 @function_1000a944(i32 ptrtoint (i32* @global_var_1000d3e0.8 to i32))
  %v2_10006924 = ptrtoint i16* %stack_var_-1656 to i32
  store i32 %v2_10006924, i32* @r26, align 4
  store i32 268462380, i32* @lr, align 4
  %v1_10006928 = call i32 @function_1000a404(i32 %v1_10006920)
  store i32 791543808, i32* @r29, align 4
  store i32 29184, i32* @r28, align 4
  store i32 80, i32* %r0.global-to-local, align 4
  store i16 80, i16* bitcast (i32* @global_var_1001e27e.130 to i16*), align 4
  store i32 1105119797, i32* @global_var_1001e280.127, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  store i8* inttoptr (i32 791543808 to i8*), i8** %stack_var_-1604, align 4
  store i32 ptrtoint (i32* @global_var_1000d478.138 to i32), i32* @r4, align 4
  store i32 36, i32* @r5, align 4
  store i32 %v1_10006928, i32* @global_var_1001e180.71, align 4
  %v2_10006988 = ptrtoint i32* %stack_var_-1520 to i32
  store i32 %v2_10006988, i32* @r3, align 4
  store i16 2, i16* bitcast (i32* @global_var_1001e27c.126 to i16*), align 4
  %v0_10006990 = load i32, i32* @r31, align 4
  %v1_10006990 = inttoptr i32 %v0_10006990 to i32*
  %v2_10006990 = load i32, i32* %v1_10006990, align 4
  store i32 %v2_10006990, i32* @r27, align 4
  store i32 268462488, i32* @lr, align 4
  %v0_10006994 = call i32 @function_1000b0ec()
  %v3_1000699c = load i32, i32* %stack_var_-1520, align 4
  store i32 %tmp37, i32* %r9.global-to-local, align 4
  %v2_100069a4 = add i32 %tmp37, %tmp36
  %v2_100069ac = add i32 %v2_100069a4, %tmp38
  %v2_100069b4 = add i32 %v2_100069ac, %tmp39
  %v2_100069bc = add i32 %v2_100069b4, %tmp40
  %v2_100069c4 = add i32 %v2_100069bc, %tmp41
  %v2_100069c8 = add i32 %v2_100069c4, %v3_1000699c
  store i32 %v2_100069c8, i32* %r0.global-to-local, align 4
  %v3_100069cc = icmp eq i32 %v2_100069c8, 0
  br i1 %v3_100069cc, label %dec_label_pc_10006b88, label %dec_label_pc_100069d4

dec_label_pc_100069d4:                            ; preds = %dec_label_pc_10006910
  %v3_100069d4 = load i8*, i8** %stack_var_-1604, align 4
  %v4_100069d4 = ptrtoint i8* %v3_100069d4 to i32
  store i32 %v4_100069d4, i32* %r9.global-to-local, align 4
  %v0_100069d8 = load i32, i32* @r27, align 4
  %v4_100069dc = zext i8 %tmp35 to i32
  store i32 %v4_100069dc, i32* %r0.global-to-local, align 4
  store i32 %v2_10006924, i32* @r26, align 4
  %v2_100069e8 = ptrtoint i8* %stack_var_-1632 to i32
  store i32 %v2_100069e8, i32* @r28, align 4
  store i8 %tmp35, i8* %stack_var_-1632, align 1
  store i32 ptrtoint (i32* @global_var_100069f4.139 to i32), i32* @lr, align 4
  %v1_100069f0 = inttoptr i32 %v0_100069d8 to i8*
  %v2_100069f0 = call i32 @function_1000a100(i8* %v1_100069f0)
  store i32 100, i32* %r9.global-to-local, align 4
  %v2_100069fc = srem i32 2, %v2_100069f0
  %v0_10006a08 = load i32, i32* @r27, align 4
  store i32 %v2_100069fc, i32* %r0.global-to-local, align 4
  %v2_10006a10 = add i32 %v0_10006a08, %v2_100069fc
  %v3_10006a10 = inttoptr i32 %v2_10006a10 to i8*
  %v4_10006a10 = load i8, i8* %v3_10006a10, align 1
  %v5_10006a10 = zext i8 %v4_10006a10 to i32
  store i32 %v5_10006a10, i32* %r29.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10006a20.140 to i32), i32* @lr, align 4
  %v1_10006a1c = inttoptr i32 %v0_10006a08 to i8*
  %v2_10006a1c = call i32 @function_1000a100(i8* %v1_10006a1c)
  %v0_10006a30 = load i32, i32* %r29.global-to-local, align 4
  %v1_10006a30 = sub i32 -82, %v0_10006a30
  %v1_10006a34 = urem i32 %v1_10006a30, 256
  store i32 %v1_10006a34, i32* %r29.global-to-local, align 4
  %v2_10006a28 = srem i32 4, %v2_10006a1c
  %v0_10006a3c = load i32, i32* @r27, align 4
  store i32 %v2_10006a28, i32* %r0.global-to-local, align 4
  %v2_10006a44 = add i32 %v0_10006a3c, %v2_10006a28
  %v3_10006a44 = inttoptr i32 %v2_10006a44 to i8*
  %v4_10006a44 = load i8, i8* %v3_10006a44, align 1
  %v5_10006a44 = zext i8 %v4_10006a44 to i32
  %v1_10006a4c = sub nuw nsw i32 -1, %v5_10006a44
  store i32 %v1_10006a4c, i32* %r9.global-to-local, align 4
  %v2_10006a54 = add nsw i32 %v1_10006a34, %v1_10006a4c
  store i32 %v2_10006a54, i32* %r29.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10006a5c.141 to i32), i32* @lr, align 4
  %v1_10006a58 = inttoptr i32 %v0_10006a3c to i8*
  %v2_10006a58 = call i32 @function_1000a100(i8* %v1_10006a58)
  %v0_10006a6c = load i32, i32* %r29.global-to-local, align 4
  %v1_10006a6c = urem i32 %v0_10006a6c, 256
  store i32 %v1_10006a6c, i32* %r29.global-to-local, align 4
  %v2_10006a64 = srem i32 6, %v2_10006a58
  %v0_10006a74 = load i32, i32* @r27, align 4
  store i32 %v2_10006a64, i32* %r0.global-to-local, align 4
  %v2_10006a7c = add i32 %v0_10006a74, %v2_10006a64
  %v3_10006a7c = inttoptr i32 %v2_10006a7c to i8*
  %v4_10006a7c = load i8, i8* %v3_10006a7c, align 1
  %v5_10006a7c = zext i8 %v4_10006a7c to i32
  %v1_10006a84 = sub nuw nsw i32 -1, %v5_10006a7c
  store i32 %v1_10006a84, i32* %r9.global-to-local, align 4
  %v2_10006a8c = add nsw i32 %v1_10006a6c, %v1_10006a84
  store i32 %v2_10006a8c, i32* %r29.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10006a94.142 to i32), i32* @lr, align 4
  %v1_10006a90 = inttoptr i32 %v0_10006a74 to i8*
  %v2_10006a90 = call i32 @function_1000a100(i8* %v1_10006a90)
  %v0_10006aa4 = load i32, i32* %r29.global-to-local, align 4
  %v1_10006aa4 = urem i32 %v0_10006aa4, 256
  store i32 %v1_10006aa4, i32* %r29.global-to-local, align 4
  %v2_10006a9c = srem i32 8, %v2_10006a90
  %v0_10006aac = load i32, i32* @r27, align 4
  store i32 %v2_10006a9c, i32* %r0.global-to-local, align 4
  %v2_10006ab4 = add i32 %v0_10006aac, %v2_10006a9c
  %v3_10006ab4 = inttoptr i32 %v2_10006ab4 to i8*
  %v4_10006ab4 = load i8, i8* %v3_10006ab4, align 1
  %v5_10006ab4 = zext i8 %v4_10006ab4 to i32
  %v1_10006abc = sub nuw nsw i32 -1, %v5_10006ab4
  store i32 %v1_10006abc, i32* %r9.global-to-local, align 4
  %v2_10006ac4 = add nsw i32 %v1_10006aa4, %v1_10006abc
  store i32 %v2_10006ac4, i32* %r29.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10006acc.143 to i32), i32* @lr, align 4
  %v1_10006ac8 = inttoptr i32 %v0_10006aac to i8*
  %v2_10006ac8 = call i32 @function_1000a100(i8* %v1_10006ac8)
  %v0_10006adc = load i32, i32* %r29.global-to-local, align 4
  %v1_10006adc = urem i32 %v0_10006adc, 256
  store i32 %v1_10006adc, i32* %r29.global-to-local, align 4
  %v2_10006ad4 = srem i32 10, %v2_10006ac8
  %v0_10006ae4 = load i32, i32* @r27, align 4
  store i32 %v2_10006ad4, i32* %r0.global-to-local, align 4
  %v2_10006aec = add i32 %v0_10006ae4, %v2_10006ad4
  %v3_10006aec = inttoptr i32 %v2_10006aec to i8*
  %v4_10006aec = load i8, i8* %v3_10006aec, align 1
  %v5_10006aec = zext i8 %v4_10006aec to i32
  %v1_10006af4 = sub nuw nsw i32 -1, %v5_10006aec
  store i32 %v1_10006af4, i32* %r9.global-to-local, align 4
  %v2_10006afc = add nsw i32 %v1_10006adc, %v1_10006af4
  store i32 %v2_10006afc, i32* %r29.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10006b04.144 to i32), i32* @lr, align 4
  %v1_10006b00 = inttoptr i32 %v0_10006ae4 to i8*
  %v2_10006b00 = call i32 @function_1000a100(i8* %v1_10006b00)
  %v0_10006b08 = load i32, i32* %r29.global-to-local, align 4
  %v1_10006b08 = urem i32 %v0_10006b08, 256
  store i32 %v1_10006b08, i32* %r29.global-to-local, align 4
  %v2_10006b0c = srem i32 12, %v2_10006b00
  store i32 %v2_10006b0c, i32* %r0.global-to-local, align 4
  %v0_10006b20 = load i32, i32* @r27, align 4
  %v2_10006b20 = add i32 %v0_10006b20, %v2_10006b0c
  %v3_10006b20 = inttoptr i32 %v2_10006b20 to i8*
  %v4_10006b20 = load i8, i8* %v3_10006b20, align 1
  %v5_10006b20 = zext i8 %v4_10006b20 to i32
  %v1_10006b24 = sub nuw nsw i32 -1, %v5_10006b20
  store i32 %v1_10006b24, i32* %r9.global-to-local, align 4
  %v2_10006b28 = add i32 %v0_10006b08, %v1_10006b24
  %v1_10006b2c = urem i32 %v2_10006b28, 256
  %v1_10006b34 = urem i32 %v1_10006b2c, 9
  store i32 %v1_10006b34, i32* %r29.global-to-local, align 4
  %v1_10006b40 = call i32 @__asm_rlwinm(i32 %v1_10006b34, i32 2, i32 22, i32 29)
  %v1_10006b44 = load i32, i32* @r26, align 4
  %v2_10006b44 = add i32 %v1_10006b44, %v1_10006b40
  store i32 %v2_10006b44, i32* %r29.global-to-local, align 4
  %v1_10006b48 = add i32 %v2_10006b44, 136
  %v2_10006b48 = inttoptr i32 %v1_10006b48 to i32*
  %v3_10006b48 = load i32, i32* %v2_10006b48, align 4
  store i32 %v3_10006b48, i32* %r29.global-to-local, align 4
  store i32 %v3_10006b48, i32* %ctr.global-to-local, align 4
  call void @__pseudo_call(i32 %v3_10006b48)
  %v0_10006b58 = load i32, i32* @r27, align 4
  %v2_10006b5c = inttoptr i32 %v0_10006b58 to i8*
  %v3_10006b5c = call i32 @function_1000a55c(i8* %v2_10006b5c, i32 %v2_100069e8)
  store i32 18, i32* @r4, align 4
  store i32 %v3_10006b5c, i32* %r29.global-to-local, align 4
  %v2_10006b68 = ptrtoint i8** %stack_var_-1604 to i32
  store i32 %v2_10006b68, i32* @r3, align 4
  store i32 268462960, i32* @lr, align 4
  %v0_10006b6c = call i32 @function_1000a1a8()
  %v0_10006b70 = load i32, i32* %r29.global-to-local, align 4
  %v1_10006b70 = urem i32 %v0_10006b70, 256
  store i32 %v1_10006b70, i32* @r29, align 4
  store i32 %v2_100069e8, i32* @r3, align 4
  store i32 12, i32* @r4, align 4
  store i32 268462976, i32* @lr, align 4
  %v0_10006b7c = call i32 @function_1000a1a8()
  %v0_10006b80 = load i32, i32* @r29, align 4
  %v3_10006b80 = icmp eq i32 %v0_10006b80, 0
  br i1 %v3_10006b80, label %dec_label_pc_10006b88, label %dec_label_pc_10006cec

dec_label_pc_10006b88:                            ; preds = %dec_label_pc_100069d4, %dec_label_pc_10006910
  %v2_10006b88 = ptrtoint i32* %stack_var_-1586 to i32
  store i32 %v2_10006b88, i32* @r25, align 4
  store i32 ptrtoint (i32* @global_var_10006b90.145 to i32), i32* @lr, align 4
  %v0_10006b8c = call i32 @function_10006580()
  store i32 268462996, i32* @lr, align 4
  %v1_10006b90 = call i32 @function_1000728c(i32 %v0_10006b8c)
  store i32 %v2_10006b88, i32* @r3, align 4
  store i32 32, i32* @r4, align 4
  store i32 268463008, i32* @lr, align 4
  %v0_10006b9c = call i32 @function_1000a1a8()
  %v0_10006ba0 = load i32, i32* @r30, align 4
  %v3_10006ba0 = icmp eq i32 %v0_10006ba0, 2
  br i1 %v3_10006ba0, label %dec_label_pc_10006d14, label %dec_label_pc_10006ba8

dec_label_pc_10006ba8:                            ; preds = %dec_label_pc_10006cec, %dec_label_pc_10006d14, %dec_label_pc_10006b88, %dec_label_pc_10006d24
  %v0_10006ba8 = call i32 @function_1000723c()
  %v2_10006bac = ptrtoint i32* %stack_var_-1554 to i32
  store i32 %v2_10006bac, i32* @r28, align 4
  %v1_10006bb0 = call i32 @__asm_rlwinm(i32 %v0_10006ba8, i32 2, i32 28, i32 29)
  store i32 0, i32* @r27, align 4
  %v1_10006bb8 = add i32 %v1_10006bb0, 12
  %v0_10006bc4 = load i32, i32* @r26, align 4
  %v2_10006bc4 = add i32 %v0_10006bc4, %v1_10006bb8
  store i32 %v2_10006bc4, i32* @r29, align 4
  store i32 268463052, i32* @lr, align 4
  %v2_10006bc8 = bitcast i32* %stack_var_-1554 to i8*
  %v3_10006bc8 = call i32 @function_100072fc(i8* %v2_10006bc8, i32 %v1_10006bb8)
  %v0_10006bcc = load i32, i32* @r31, align 4
  %v1_10006bcc = inttoptr i32 %v0_10006bcc to i32*
  %v2_10006bcc = load i32, i32* %v1_10006bcc, align 4
  store i32 %v2_10006bcc, i32* @r3, align 4
  %v0_10006bd0 = load i32, i32* @r27, align 4
  %v1_10006bd0 = trunc i32 %v0_10006bd0 to i8
  %v2_10006bd0 = load i32, i32* @r29, align 4
  %v3_10006bd0 = add i32 %v2_10006bd0, 102
  %v4_10006bd0 = inttoptr i32 %v3_10006bd0 to i8*
  store i8 %v1_10006bd0, i8* %v4_10006bd0, align 1
  %v2_10006bd8 = inttoptr i32 %v2_10006bcc to i8*
  %v3_10006bd8 = call i32 @function_1000a128(i8* %v2_10006bd8, i32 %v2_10006bac)
  %v0_10006bdc = call i32 @function_1000723c()
  %v1_10006bdc = sext i32 %v0_10006bdc to i64
  %v5_10006bec = mul nuw nsw i64 %v1_10006bdc, 2863311531
  %v1_10006bf45 = udiv i64 %v5_10006bec, 17179869184
  %v1_10006bf4 = trunc i64 %v1_10006bf45 to i32
  %v1_10006bf8 = mul i32 %v1_10006bf4, 6
  store i32 %v1_10006bf8, i32* %r0.global-to-local, align 4
  %v2_10006bfc = sub i32 %v0_10006bdc, %v1_10006bf8
  %v1_10006c00 = mul i32 %v2_10006bfc, 4
  %v1_10006c04 = add i32 %v1_10006c00, 12
  %v0_10006c0c = load i32, i32* @r26, align 4
  %v2_10006c0c = add i32 %v1_10006c04, %v0_10006c0c
  store i32 %v2_10006c0c, i32* @r29, align 4
  store i32 268463124, i32* @lr, align 4
  %v3_10006c10 = call i32 @function_100072fc(i8* %v2_10006bc8, i32 %v1_10006c04)
  %v0_10006c14 = load i32, i32* @r27, align 4
  %v1_10006c14 = trunc i32 %v0_10006c14 to i8
  %v2_10006c14 = load i32, i32* @r29, align 4
  %v3_10006c14 = add i32 %v2_10006c14, 102
  %v4_10006c14 = inttoptr i32 %v3_10006c14 to i8*
  store i8 %v1_10006c14, i8* %v4_10006c14, align 1
  store i32 ptrtoint ([3 x i8]* @global_var_10006c28.148 to i32), i32* @lr, align 4
  %v2_10006c24 = call i32 @function_1000ab7c(i32 15, i32 %v2_10006bac)
  store i32 268463152, i32* @lr, align 4
  %v1_10006c2c = call i32 @function_10009880(i32 2)
  %v3_10006c38 = call i32 @function_100097cc(i32 2, i32* nonnull %stack_var_-1652)
  %v3_10006c3c = load i32, i32* %stack_var_-1652, align 4
  store i32 %v3_10006c3c, i32* %r5.global-to-local, align 4
  store i32 268463180, i32* @lr, align 4
  %v3_10006c48 = call i32 @function_1000adec(i32 1, i32 %v3_10006c38, i32 %v3_10006c3c)
  store i32 1, i32* %r5.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006c60.150 to i32), i32* @lr, align 4
  %v3_10006c5c = call i32 @function_1000adec(i32 1, i32 ptrtoint (i32* @global_var_1000d46c.149 to i32), i32 1)
  store i32 ptrtoint (i32* @global_var_10006c68.151 to i32), i32* @lr, align 4
  %v1_10006c64 = call i32 @function_100097f4(i32 2)
  store i32 268463212, i32* @lr, align 4
  %v0_10006c68 = call i32 @function_1000a9d4()
  %tmp80 = icmp slt i32 %v0_10006c68, 1
  br i1 %tmp80, label %dec_label_pc_10006d4c, label %dec_label_pc_10006c74

dec_label_pc_10006c74:                            ; preds = %dec_label_pc_10006ba8
  store i32 %v0_10006828, i32* %r0.global-to-local, align 4
  store i32 %v0_1000683c, i32* %r29.global-to-local, align 4
  ret i32 0

dec_label_pc_10006cc8:                            ; preds = %dec_label_pc_10006828
  store i32 268463324, i32* @lr, align 4
  %v3_10006cd8 = call i32 @function_1000aaf4(i32 ptrtoint ([19 x i8]* @global_var_1000d458.152 to i32), i32 2)
  %v3_10006cdc = icmp eq i32 %v3_10006cd8, -1
  store i32 %v3_10006cd8, i32* @r29, align 4
  br i1 %v3_10006cdc, label %dec_label_pc_10006910, label %dec_label_pc_100068e8

dec_label_pc_10006cec:                            ; preds = %dec_label_pc_100069d4
  %v2_10006cf0 = ptrtoint i32* %stack_var_-1586 to i32
  store i32 %v2_10006cf0, i32* @r25, align 4
  store i32 268463352, i32* @lr, align 4
  %v1_10006cf4 = call i32 @function_1000b78c(i32 5)
  store i32 ptrtoint (i32* @global_var_10006cfc.153 to i32), i32* @lr, align 4
  %v0_10006cf8 = call i32 @function_10006580()
  store i32 268463360, i32* @lr, align 4
  %v1_10006cfc = call i32 @function_1000728c(i32 %v0_10006cf8)
  store i32 %v2_10006cf0, i32* @r3, align 4
  store i32 32, i32* @r4, align 4
  store i32 268463372, i32* @lr, align 4
  %v0_10006d08 = call i32 @function_1000a1a8()
  %v0_10006d0c = load i32, i32* @r30, align 4
  %v3_10006d0c = icmp eq i32 %v0_10006d0c, 2
  br i1 %v3_10006d0c, label %dec_label_pc_10006d14, label %dec_label_pc_10006ba8

dec_label_pc_10006d14:                            ; preds = %dec_label_pc_10006cec, %dec_label_pc_10006b88
  %v0_10006d14 = load i32, i32* @r31, align 4
  %v1_10006d14 = add i32 %v0_10006d14, 4
  %v2_10006d14 = inttoptr i32 %v1_10006d14 to i32*
  %v3_10006d14 = load i32, i32* %v2_10006d14, align 4
  store i32 268463388, i32* @lr, align 4
  %v1_10006d18 = inttoptr i32 %v3_10006d14 to i8*
  %v2_10006d18 = call i32 @function_1000a100(i8* %v1_10006d18)
  %v2_10006d1c = icmp sgt i32 %v2_10006d18, 31
  br i1 %v2_10006d1c, label %dec_label_pc_10006ba8, label %dec_label_pc_10006d24

dec_label_pc_10006d24:                            ; preds = %dec_label_pc_10006d14
  %v0_10006d24 = load i32, i32* @r31, align 4
  %v1_10006d24 = add i32 %v0_10006d24, 4
  %v2_10006d24 = inttoptr i32 %v1_10006d24 to i32*
  %v3_10006d24 = load i32, i32* %v2_10006d24, align 4
  %v1_10006d28 = ptrtoint i32* %stack_var_-1586 to i32
  store i32 %v1_10006d28, i32* @r3, align 4
  %v2_10006d2c = bitcast i32* %stack_var_-1586 to i8*
  %v3_10006d2c = call i32 @function_1000a128(i8* %v2_10006d2c, i32 %v3_10006d24)
  %v0_10006d30 = load i32, i32* @r31, align 4
  %v1_10006d30 = add i32 %v0_10006d30, 4
  %v2_10006d30 = inttoptr i32 %v1_10006d30 to i32*
  %v3_10006d30 = load i32, i32* %v2_10006d30, align 4
  store i32 %v3_10006d30, i32* %r29.global-to-local, align 4
  store i32 268463420, i32* @lr, align 4
  %v1_10006d38 = inttoptr i32 %v3_10006d30 to i8*
  %v2_10006d38 = call i32 @function_1000a100(i8* %v1_10006d38)
  store i32 %v2_10006d38, i32* @r4, align 4
  %v0_10006d40 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10006d40, i32* @r3, align 4
  store i32 268463432, i32* @lr, align 4
  %v0_10006d44 = call i32 @function_1000a1a8()
  br label %dec_label_pc_10006ba8

dec_label_pc_10006d4c:                            ; preds = %dec_label_pc_10006ba8
  store i32 268463440, i32* @lr, align 4
  %v1_10006d4c = call i32 @function_1000ac9c(i32 %v0_10006c68)
  store i32 0, i32* @r20, align 4
  store i32 %v1_10006d4c, i32* @r18, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006d60.154 to i32), i32* @lr, align 4
  %v0_10006d5c = call i32 @function_1000a98c()
  store i32 ptrtoint ([3 x i8]* @global_var_10006d68.155 to i32), i32* @lr, align 4
  %v0_10006d64 = call i32 @function_1000a98c()
  store i32 ptrtoint ([3 x i8]* @global_var_10006d70.156 to i32), i32* @lr, align 4
  %v0_10006d6c = call i32 @function_1000a98c()
  %v2_10006d70 = ptrtoint i32* %stack_var_-1648 to i32
  store i32 268463480, i32* @lr, align 4
  %v1_10006d74 = call i32 @function_100023e0(i32 %v0_10006d6c)
  %v2_10006d78 = ptrtoint i32* %stack_var_-1228 to i32
  store i32 %v2_10006d78, i32* @r29, align 4
  store i32 268463488, i32* @lr, align 4
  %v1_10006d7c = call i32 @function_10005de4(i32 %v1_10006d74)
  %v2_10006d80 = ptrtoint i32* %stack_var_-1484 to i32
  store i32 %v2_10006d80, i32* @r28, align 4
  store i32 268463496, i32* @lr, align 4
  %v0_10006d84 = call i32 @function_10007d98()
  store i32 268566528, i32* @r27, align 4
  %v2_10006d94 = ptrtoint i32* %stack_var_-1640 to i32
  store i32 %v2_10006d94, i32* @r16, align 4
  %v2_10006fec = ptrtoint i32* %stack_var_-1100 to i32
  %v2_100070e4 = ptrtoint i32* %stack_var_-1644 to i32
  %v1_1000716c = ptrtoint i32* %stack_var_-1586 to i32
  %v1_10007170 = bitcast i32* %stack_var_-1586 to i8*
  %v2_10007140 = ptrtoint i32* %stack_var_-1620 to i32
  br label %dec_label_pc_10006d98

dec_label_pc_10006d98:                            ; preds = %dec_label_pc_100071d8, %dec_label_pc_100071fc, %dec_label_pc_100071cc, %dec_label_pc_1000716c, %dec_label_pc_10006f70, %dec_label_pc_10006f60, %dec_label_pc_10006e50, %dec_label_pc_10007230, %dec_label_pc_100071e4, %dec_label_pc_100071b8, %dec_label_pc_10007100, %dec_label_pc_10007024, %dec_label_pc_10006f24, %dec_label_pc_10006d4c
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10006da882 = load i32, i32* @r29, align 4
  %v4_10006da884 = inttoptr i32 %v2_10006da882 to i32*
  store i32 0, i32* %v4_10006da884, align 4
  %v0_10006dac85 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006dac86 = add i32 %v0_10006dac85, 4
  store i32 %v1_10006dac86, i32* %r9.global-to-local, align 4
  %v0_10006db087 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006db088 = add i32 %v0_10006db087, -1
  store i32 %v1_10006db088, i32* %ctr.global-to-local, align 4
  %v2_10006db089 = icmp eq i32 %v1_10006db088, 0
  br i1 %v2_10006db089, label %dec_label_pc_10006db4, label %dec_label_pc_10006da8.dec_label_pc_10006da8_crit_edge

dec_label_pc_10006da8.dec_label_pc_10006da8_crit_edge: ; preds = %dec_label_pc_10006d98, %dec_label_pc_10006da8.dec_label_pc_10006da8_crit_edge
  %v1_10006dac90 = phi i32 [ %v1_10006dac, %dec_label_pc_10006da8.dec_label_pc_10006da8_crit_edge ], [ %v1_10006dac86, %dec_label_pc_10006d98 ]
  %v0_10006da8.pre = load i32, i32* %r0.global-to-local, align 4
  %v2_10006da8 = load i32, i32* @r29, align 4
  %v3_10006da8 = add i32 %v2_10006da8, %v1_10006dac90
  %v4_10006da8 = inttoptr i32 %v3_10006da8 to i32*
  store i32 %v0_10006da8.pre, i32* %v4_10006da8, align 4
  %v0_10006dac = load i32, i32* %r9.global-to-local, align 4
  %v1_10006dac = add i32 %v0_10006dac, 4
  store i32 %v1_10006dac, i32* %r9.global-to-local, align 4
  %v0_10006db0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006db0 = add i32 %v0_10006db0, -1
  store i32 %v1_10006db0, i32* %ctr.global-to-local, align 4
  %v2_10006db0 = icmp eq i32 %v1_10006db0, 0
  br i1 %v2_10006db0, label %dec_label_pc_10006db4, label %dec_label_pc_10006da8.dec_label_pc_10006da8_crit_edge

dec_label_pc_10006db4:                            ; preds = %dec_label_pc_10006da8.dec_label_pc_10006da8_crit_edge, %dec_label_pc_10006d98
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10006dc491 = load i32, i32* @r28, align 4
  %v4_10006dc493 = inttoptr i32 %v2_10006dc491 to i32*
  store i32 0, i32* %v4_10006dc493, align 4
  %v0_10006dc894 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006dc895 = add i32 %v0_10006dc894, 4
  store i32 %v1_10006dc895, i32* %r9.global-to-local, align 4
  %v0_10006dcc96 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006dcc97 = add i32 %v0_10006dcc96, -1
  store i32 %v1_10006dcc97, i32* %ctr.global-to-local, align 4
  %v2_10006dcc98 = icmp eq i32 %v1_10006dcc97, 0
  br i1 %v2_10006dcc98, label %dec_label_pc_10006dd0, label %dec_label_pc_10006dc4.dec_label_pc_10006dc4_crit_edge

dec_label_pc_10006dc4.dec_label_pc_10006dc4_crit_edge: ; preds = %dec_label_pc_10006db4, %dec_label_pc_10006dc4.dec_label_pc_10006dc4_crit_edge
  %v1_10006dc899 = phi i32 [ %v1_10006dc8, %dec_label_pc_10006dc4.dec_label_pc_10006dc4_crit_edge ], [ %v1_10006dc895, %dec_label_pc_10006db4 ]
  %v0_10006dc4.pre = load i32, i32* %r0.global-to-local, align 4
  %v2_10006dc4 = load i32, i32* @r28, align 4
  %v3_10006dc4 = add i32 %v2_10006dc4, %v1_10006dc899
  %v4_10006dc4 = inttoptr i32 %v3_10006dc4 to i32*
  store i32 %v0_10006dc4.pre, i32* %v4_10006dc4, align 4
  %v0_10006dc8 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006dc8 = add i32 %v0_10006dc8, 4
  store i32 %v1_10006dc8, i32* %r9.global-to-local, align 4
  %v0_10006dcc = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006dcc = add i32 %v0_10006dcc, -1
  store i32 %v1_10006dcc, i32* %ctr.global-to-local, align 4
  %v2_10006dcc = icmp eq i32 %v1_10006dcc, 0
  br i1 %v2_10006dcc, label %dec_label_pc_10006dd0, label %dec_label_pc_10006dc4.dec_label_pc_10006dc4_crit_edge

dec_label_pc_10006dd0:                            ; preds = %dec_label_pc_10006dc4.dec_label_pc_10006dc4_crit_edge, %dec_label_pc_10006db4
  %v3_10006dd0 = load i32, i32* @global_var_1001e160.121, align 4
  %v3_10006dd4 = icmp eq i32 %v3_10006dd0, -1
  br i1 %v3_10006dd4, label %dec_label_pc_10006dfc, label %dec_label_pc_10006ddc

dec_label_pc_10006ddc:                            ; preds = %dec_label_pc_10006dd0
  %v1_10006ddc = call i32 @__asm_rlwinm(i32 %v3_10006dd0, i32 29, i32 3, i32 29)
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10006de4 = load i32, i32* @r26, align 4
  %v2_10006de4 = add i32 %v1_10006de4, %v1_10006ddc
  %v1_10006de8 = urem i32 %v3_10006dd0, 32
  %v1_10006dec = add i32 %v2_10006de4, 428
  %v2_10006dec = inttoptr i32 %v1_10006dec to i32*
  %v3_10006dec = load i32, i32* %v2_10006dec, align 4
  %v3_10006df0 = shl i32 1, %v1_10006de8
  store i32 %v3_10006df0, i32* %r0.global-to-local, align 4
  %v2_10006df4 = or i32 %v3_10006dec, %v3_10006df0
  store i32 %v2_10006df4, i32* %r9.global-to-local, align 4
  store i32 %v2_10006df4, i32* %v2_10006dec, align 4
  br label %dec_label_pc_10006dfc

dec_label_pc_10006dfc:                            ; preds = %dec_label_pc_10006dd0, %dec_label_pc_10006ddc
  %v3_10006dfc = load i32, i32* @global_var_1001e164.157, align 4
  store i32 %v3_10006dfc, i32* %r0.global-to-local, align 4
  store i32 268566528, i32* @r30, align 4
  %v3_10006e04 = icmp eq i32 %v3_10006dfc, -1
  br i1 %v3_10006e04, label %dec_label_pc_1000703c, label %dec_label_pc_10006e0c

dec_label_pc_10006e0c:                            ; preds = %dec_label_pc_1000703c, %dec_label_pc_10006dfc, %dec_label_pc_10007098
  %v3_10006f38 = phi i32 [ -1, %dec_label_pc_1000703c ], [ %v3_10006dfc, %dec_label_pc_10006dfc ], [ %v3_10006f38.pre, %dec_label_pc_10007098 ]
  %v3_10006e0c = load i8, i8* @global_var_1001e198.158, align 1
  %v3_10006e10 = icmp eq i8 %v3_10006e0c, 0
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10006f40 = call i32 @__asm_rlwinm(i32 %v3_10006f38, i32 29, i32 3, i32 29)
  %v1_10006f44 = urem i32 %v3_10006f38, 32
  %v1_10006f48 = load i32, i32* @r26, align 4
  %v2_10006f48 = add i32 %v1_10006f48, %v1_10006f40
  %v0_10006f4c = load i32, i32* %r0.global-to-local, align 4
  %v3_10006f4c = shl i32 %v0_10006f4c, %v1_10006f44
  store i32 %v3_10006f4c, i32* %r0.global-to-local, align 4
  br i1 %v3_10006e10, label %dec_label_pc_10006f38, label %dec_label_pc_10006e18

dec_label_pc_10006e18:                            ; preds = %dec_label_pc_10006e0c
  %v1_10006e30 = add i32 %v2_10006f48, 172
  %v2_10006e30 = inttoptr i32 %v1_10006e30 to i32*
  %v3_10006e30 = load i32, i32* %v2_10006e30, align 4
  %v2_10006e34 = or i32 %v3_10006e30, %v3_10006f4c
  store i32 %v2_10006e34, i32* %r9.global-to-local, align 4
  store i32 %v2_10006e34, i32* %v2_10006e30, align 4
  br label %dec_label_pc_10006e3c

dec_label_pc_10006e3c:                            ; preds = %dec_label_pc_10006f38, %dec_label_pc_10006e18
  %v3_10006e3c = load i32, i32* @global_var_1001e164.157, align 4
  store i32 %v3_10006e3c, i32* %r0.global-to-local, align 4
  %v3_10006e40 = load i32, i32* @global_var_1001e160.121, align 4
  %v2_10006e44 = icmp slt i32 %v3_10006e40, %v3_10006e3c
  br i1 %v2_10006e44, label %dec_label_pc_10006e4c, label %dec_label_pc_10006e50

dec_label_pc_10006e4c:                            ; preds = %dec_label_pc_10006e3c
  br label %dec_label_pc_10006e50

dec_label_pc_10006e50:                            ; preds = %dec_label_pc_10006e3c, %dec_label_pc_10006e4c
  %v0_10006e58 = phi i32 [ %v3_10006e40, %dec_label_pc_10006e3c ], [ %v3_10006e3c, %dec_label_pc_10006e4c ]
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r9.global-to-local, align 4
  %v1_10006e58 = add i32 %v0_10006e58, 1
  store i32 %v2_10006d80, i32* %r5.global-to-local, align 4
  store i32 10, i32* %stack_var_-1640, align 4
  store i32 268463736, i32* @lr, align 4
  %v5_10006e74 = call i32 @function_1000ac54(i32 %v1_10006e58, i32 %v2_10006d78, i32 %v2_10006d80, i32 0, i32 %v2_10006d94)
  %v6_10006e74 = trunc i32 %v5_10006e74 to i16
  %v4_10006e78 = icmp eq i16 %v6_10006e74, -1
  br i1 %v4_10006e78, label %dec_label_pc_10006d98, label %dec_label_pc_10006e80

dec_label_pc_10006e80:                            ; preds = %dec_label_pc_10006e50
  %v4_10006e80 = icmp eq i16 %v6_10006e74, 0
  br i1 %v4_10006e80, label %dec_label_pc_10006e88, label %dec_label_pc_10006eb4

dec_label_pc_10006e88:                            ; preds = %dec_label_pc_10006e80
  %v0_10006e8c = load i32, i32* @r20, align 4
  store i16 0, i16* %stack_var_-1656, align 2
  %v2_10006e9c = srem i32 %v0_10006e8c, 6
  %v1_10006ea0 = sub i32 %v0_10006e8c, %v2_10006e9c
  store i32 %v1_10006ea0, i32* %r9.global-to-local, align 4
  store i32 %v2_10006e9c, i32* %r0.global-to-local, align 4
  %v1_10006ea8 = add i32 %v0_10006e8c, 1
  store i32 %v1_10006ea8, i32* @r20, align 4
  %v3_10006eac = icmp eq i32 %v2_10006e9c, 0
  br i1 %v3_10006eac, label %dec_label_pc_100070b4, label %dec_label_pc_10006eb4

dec_label_pc_10006eb4:                            ; preds = %dec_label_pc_10006e80, %dec_label_pc_10006e88, %dec_label_pc_100070b4
  %v3_10006eb4 = load i32, i32* @global_var_1001e160.121, align 4
  %v3_10006eb8 = icmp eq i32 %v3_10006eb4, -1
  br i1 %v3_10006eb8, label %dec_label_pc_10006edc, label %dec_label_pc_10006ec0

dec_label_pc_10006ec0:                            ; preds = %dec_label_pc_10006eb4
  %v1_10006ec0 = call i32 @__asm_rlwinm(i32 %v3_10006eb4, i32 29, i32 3, i32 29)
  %v1_10006ec4 = urem i32 %v3_10006eb4, 32
  %v1_10006ec8 = load i32, i32* @r26, align 4
  %v2_10006ec8 = add i32 %v1_10006ec8, %v1_10006ec0
  store i32 %v2_10006ec8, i32* %r9.global-to-local, align 4
  %v1_10006ecc = add i32 %v2_10006ec8, 428
  %v2_10006ecc = inttoptr i32 %v1_10006ecc to i32*
  %v3_10006ecc = load i32, i32* %v2_10006ecc, align 4
  %v3_10006ed0 = lshr i32 %v3_10006ecc, %v1_10006ec4
  store i32 %v3_10006ed0, i32* %r0.global-to-local, align 4
  %v1_10006ed4 = urem i32 %v3_10006ed0, 2
  store i32 %v1_10006ed4, i32* %r9.global-to-local, align 4
  %v3_10006ed4 = icmp eq i32 %v1_10006ed4, 0
  br i1 %v3_10006ed4, label %dec_label_pc_10006edc, label %dec_label_pc_10007138

dec_label_pc_10006edc:                            ; preds = %dec_label_pc_10006ec0, %dec_label_pc_10006eb4
  %v3_10006edc = load i8, i8* @global_var_1001e198.158, align 1
  %v4_10006edc = zext i8 %v3_10006edc to i32
  store i32 %v4_10006edc, i32* @r31, align 4
  %v3_10006ee0 = icmp eq i8 %v3_10006edc, 0
  %v3_10006f60 = load i32, i32* @global_var_1001e164.157, align 4
  br i1 %v3_10006ee0, label %dec_label_pc_10006f60, label %dec_label_pc_10006ee8

dec_label_pc_10006ee8:                            ; preds = %dec_label_pc_10006edc
  store i32 268566528, i32* @r31, align 4
  %v1_10006ef0 = call i32 @__asm_rlwinm(i32 %v3_10006f60, i32 29, i32 3, i32 29)
  %v1_10006ef4 = urem i32 %v3_10006f60, 32
  %v1_10006ef8 = load i32, i32* @r26, align 4
  %v2_10006ef8 = add i32 %v1_10006ef8, %v1_10006ef0
  store i32 %v2_10006ef8, i32* %r9.global-to-local, align 4
  %v1_10006efc = add i32 %v2_10006ef8, 172
  %v2_10006efc = inttoptr i32 %v1_10006efc to i32*
  %v3_10006efc = load i32, i32* %v2_10006efc, align 4
  %v3_10006f00 = lshr i32 %v3_10006efc, %v1_10006ef4
  store i32 %v3_10006f00, i32* %r0.global-to-local, align 4
  %v1_10006f08 = urem i32 %v3_10006f00, 2
  %v3_10006f08 = icmp eq i32 %v1_10006f08, 0
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i8 0, i8* @global_var_1001e198.158, align 1
  br i1 %v3_10006f08, label %dec_label_pc_10006f18, label %dec_label_pc_100070d0

dec_label_pc_10006f18:                            ; preds = %dec_label_pc_10006ee8
  %v3_10006f18 = icmp eq i32 %v3_10006f60, -1
  br i1 %v3_10006f18, label %dec_label_pc_10006f24, label %dec_label_pc_10006f20

dec_label_pc_10006f20:                            ; preds = %dec_label_pc_10006f18
  store i32 ptrtoint (i32* @global_var_10006f24.159 to i32), i32* @lr, align 4
  %v0_10006f20 = call i32 @function_1000a98c()
  br label %dec_label_pc_10006f24

dec_label_pc_10006f24:                            ; preds = %dec_label_pc_10006f18, %dec_label_pc_10006f20
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @global_var_1001e164.157, align 4
  store i32 268463924, i32* @lr, align 4
  %v1_10006f30 = call i32 @function_1000c280(i32 1)
  br label %dec_label_pc_10006d98

dec_label_pc_10006f38:                            ; preds = %dec_label_pc_10006e0c
  %v1_10006f50 = add i32 %v2_10006f48, 428
  %v2_10006f50 = inttoptr i32 %v1_10006f50 to i32*
  %v3_10006f50 = load i32, i32* %v2_10006f50, align 4
  %v2_10006f54 = or i32 %v3_10006f50, %v3_10006f4c
  store i32 %v2_10006f54, i32* %r9.global-to-local, align 4
  store i32 %v2_10006f54, i32* %v2_10006f50, align 4
  br label %dec_label_pc_10006e3c

dec_label_pc_10006f60:                            ; preds = %dec_label_pc_10006edc
  store i32 268566528, i32* @r30, align 4
  %v3_10006f68 = icmp eq i32 %v3_10006f60, -1
  br i1 %v3_10006f68, label %dec_label_pc_10006d98, label %dec_label_pc_10006f70

dec_label_pc_10006f70:                            ; preds = %dec_label_pc_10006f60
  %v1_10006f70 = call i32 @__asm_rlwinm(i32 %v3_10006f60, i32 29, i32 3, i32 29)
  %v1_10006f74 = urem i32 %v3_10006f60, 32
  %v1_10006f78 = load i32, i32* @r26, align 4
  %v2_10006f78 = add i32 %v1_10006f78, %v1_10006f70
  store i32 %v2_10006f78, i32* %r9.global-to-local, align 4
  %v1_10006f7c = add i32 %v2_10006f78, 428
  %v2_10006f7c = inttoptr i32 %v1_10006f7c to i32*
  %v3_10006f7c = load i32, i32* %v2_10006f7c, align 4
  %v3_10006f80 = lshr i32 %v3_10006f7c, %v1_10006f74
  store i32 %v3_10006f80, i32* %r0.global-to-local, align 4
  %v1_10006f84 = urem i32 %v3_10006f80, 2
  store i32 %v1_10006f84, i32* %r9.global-to-local, align 4
  %v3_10006f84 = icmp eq i32 %v1_10006f84, 0
  br i1 %v3_10006f84, label %dec_label_pc_10006d98, label %dec_label_pc_10006f8c

dec_label_pc_10006f8c:                            ; preds = %dec_label_pc_10006f70
  %v0_10006f8c = call i32 @function_1000b0a8()
  %v0_10006f94 = load i32, i32* @r31, align 4
  %v2_10006f94 = inttoptr i32 %v0_10006f8c to i32*
  store i32 %v0_10006f94, i32* %v2_10006f94, align 4
  store i32 %v0_10006f8c, i32* @r23, align 4
  store i32 2, i32* %r5.global-to-local, align 4
  %v3_10006fa4 = load i32, i32* @global_var_1001e164.157, align 4
  store i32 268464044, i32* @lr, align 4
  %v4_10006fa8 = call i32 @function_1000b62c(i32 %v3_10006fa4, i32 %v2_10006924, i32 2, i32 16386)
  %v3_10006fac = icmp eq i32 %v4_10006fa8, -1
  br i1 %v3_10006fac, label %dec_label_pc_100071cc, label %dec_label_pc_10006fb4

dec_label_pc_10006fb4:                            ; preds = %dec_label_pc_10006f8c
  %v3_10006fb4 = icmp eq i32 %v4_10006fa8, 0
  br i1 %v3_10006fb4, label %dec_label_pc_10007014, label %dec_label_pc_10006fbc

dec_label_pc_10006fbc:                            ; preds = %dec_label_pc_10006fb4
  %v3_10006fbc = load i16, i16* %stack_var_-1656, align 2
  %v4_10006fbc = sext i16 %v3_10006fbc to i32
  store i32 %v4_10006fbc, i32* %r5.global-to-local, align 4
  %v1_10006fc0 = urem i32 %v4_10006fbc, 65536
  store i32 %v1_10006fc0, i32* %r0.global-to-local, align 4
  %v3_10006fc4 = icmp eq i32 %v1_10006fc0, 0
  br i1 %v3_10006fc4, label %dec_label_pc_100071e4, label %dec_label_pc_10006fcc

dec_label_pc_10006fcc:                            ; preds = %dec_label_pc_10006fbc
  %tmp81 = icmp ult i32 %v1_10006fc0, 1025
  br i1 %tmp81, label %dec_label_pc_10006fe8, label %dec_label_pc_10006fd4

dec_label_pc_10006fd4:                            ; preds = %dec_label_pc_10006fcc
  store i32 ptrtoint (i32* @global_var_10006fdc.160 to i32), i32* @lr, align 4
  %v0_10006fd8 = call i32 @function_1000a98c()
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @global_var_1001e164.157, align 4
  %v3_10006fe4 = load i16, i16* %stack_var_-1656, align 2
  %v4_10006fe4 = sext i16 %v3_10006fe4 to i32
  store i32 %v4_10006fe4, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10006fe8

dec_label_pc_10006fe8:                            ; preds = %dec_label_pc_10006fcc, %dec_label_pc_10006fd4
  %v0_10006fe8 = load i32, i32* @r31, align 4
  %v1_10006fe8 = load i32, i32* @r23, align 4
  %v2_10006fe8 = inttoptr i32 %v1_10006fe8 to i32*
  store i32 %v0_10006fe8, i32* %v2_10006fe8, align 4
  store i32 %v2_10006fec, i32* @r31, align 4
  %v0_10006ff0 = load i32, i32* %r5.global-to-local, align 4
  %v1_10006ff0 = urem i32 %v0_10006ff0, 65536
  store i32 %v1_10006ff0, i32* %r5.global-to-local, align 4
  %v3_10006ff8 = load i32, i32* @global_var_1001e164.157, align 4
  store i32 268464132, i32* @lr, align 4
  %v4_10007000 = call i32 @function_1000b62c(i32 %v3_10006ff8, i32 %v2_10006fec, i32 %v1_10006ff0, i32 16386)
  %v3_10007004 = icmp eq i32 %v4_10007000, -1
  br i1 %v3_10007004, label %dec_label_pc_100071cc, label %dec_label_pc_1000700c

dec_label_pc_1000700c:                            ; preds = %dec_label_pc_10006fe8
  %v3_1000700c = icmp eq i32 %v4_10007000, 0
  br i1 %v3_1000700c, label %dec_label_pc_10007014, label %dec_label_pc_100071fc

dec_label_pc_10007014:                            ; preds = %dec_label_pc_100071d8, %dec_label_pc_1000700c, %dec_label_pc_10006fb4
  %v3_10007014 = load i32, i32* @global_var_1001e164.157, align 4
  %v3_10007018 = icmp eq i32 %v3_10007014, -1
  br i1 %v3_10007018, label %dec_label_pc_10007024, label %dec_label_pc_10007020

dec_label_pc_10007020:                            ; preds = %dec_label_pc_10007014
  store i32 ptrtoint (i32* @global_var_10007024.161 to i32), i32* @lr, align 4
  %v0_10007020 = call i32 @function_1000a98c()
  br label %dec_label_pc_10007024

dec_label_pc_10007024:                            ; preds = %dec_label_pc_10007014, %dec_label_pc_10007020
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 -1, i32* @global_var_1001e164.157, align 4
  store i32 268464184, i32* @lr, align 4
  %v1_10007034 = call i32 @function_1000c280(i32 1)
  br label %dec_label_pc_10006d98

dec_label_pc_1000703c:                            ; preds = %dec_label_pc_10006dfc
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 268464204, i32* @lr, align 4
  %v3_10007048 = call i32 @function_1000b758(i32 2, i32 1, i32 0)
  %v3_1000704c = icmp eq i32 %v3_10007048, -1
  store i32 %v3_10007048, i32* @r31, align 4
  store i32 %v3_10007048, i32* @global_var_1001e164.157, align 4
  br i1 %v3_1000704c, label %dec_label_pc_10006e0c, label %dec_label_pc_1000705c

dec_label_pc_1000705c:                            ; preds = %dec_label_pc_1000703c
  store i32 3, i32* @r4, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 268464236, i32* @lr, align 4
  %v1_10007068 = call i32 @function_1000a85c(i32 3)
  store i32 4, i32* @r4, align 4
  %v1_10007070 = or i32 %v1_10007068, 2048
  store i32 %v1_10007070, i32* %r5.global-to-local, align 4
  %v0_10007074 = load i32, i32* @r31, align 4
  store i32 268464256, i32* @lr, align 4
  %v2_1000707c = call i32 @function_1000a85c(i32 %v0_10007074)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10007084 = load i32, i32* @global_var_1001e168.120, align 4
  store i32 %v3_10007084, i32* %r0.global-to-local, align 4
  %v3_10007088 = icmp eq i32 %v3_10007084, 0
  br i1 %v3_10007088, label %dec_label_pc_10007098, label %dec_label_pc_10007090

dec_label_pc_10007090:                            ; preds = %dec_label_pc_1000705c
  store i32 %v3_10007084, i32* %ctr.global-to-local, align 4
  store i32 268464280, i32* @lr, align 4
  %v2_10007094 = call i32 @function_1000a404(i32 %v2_1000707c)
  br label %dec_label_pc_10007098

dec_label_pc_10007098:                            ; preds = %dec_label_pc_1000705c, %dec_label_pc_10007090
  %v3_10007098 = load i32, i32* @global_var_1001e164.157, align 4
  store i32 %v3_10007098, i32* @r3, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r5.global-to-local, align 4
  store i8 1, i8* @global_var_1001e198.158, align 1
  store i32 268464304, i32* @lr, align 4
  %v0_100070ac = call i32 @function_1000b558()
  %v3_10006f38.pre = load i32, i32* @global_var_1001e164.157, align 4
  br label %dec_label_pc_10006e0c

dec_label_pc_100070b4:                            ; preds = %dec_label_pc_10006e88
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_100070bc = load i32, i32* @global_var_1001e164.157, align 4
  store i32 2, i32* %r5.global-to-local, align 4
  store i32 268464332, i32* @lr, align 4
  %v4_100070c8 = call i32 @function_1000b6a4(i32 %v3_100070bc, i32 %v2_10006924, i32 2, i32 16384)
  br label %dec_label_pc_10006eb4

dec_label_pc_100070d0:                            ; preds = %dec_label_pc_10006ee8
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 0, i32* %stack_var_-1648, align 4
  store i32 4, i32* %stack_var_-1644, align 4
  store i32 268464372, i32* @lr, align 4
  %v5_100070f0 = call i32 @function_1000b5c0(i32 1, i32 4, i32 %v2_10006d70, i32 %v2_100070e4, i32 4)
  %v3_100070f4 = load i32, i32* %stack_var_-1648, align 4
  store i32 %v3_100070f4, i32* %r0.global-to-local, align 4
  %v3_100070f8 = icmp eq i32 %v3_100070f4, 0
  br i1 %v3_100070f8, label %dec_label_pc_1000716c, label %dec_label_pc_10007100

dec_label_pc_10007100:                            ; preds = %dec_label_pc_100070d0
  store i32 ptrtoint (i32* @global_var_10007108.162 to i32), i32* @lr, align 4
  %v0_10007104 = call i32 @function_1000a98c()
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @global_var_1001e164.157, align 4
  %v0_10007110 = call i32 @function_1000723c()
  %v1_10007110 = sext i32 %v0_10007110 to i64
  %v5_1000711c = mul nuw nsw i64 %v1_10007110, 3435973837
  %v1_100071207 = udiv i64 %v5_1000711c, 34359738368
  %v1_10007120 = trunc i64 %v1_100071207 to i32
  %v1_10007124 = mul i32 %v1_10007120, 10
  store i32 %v1_10007124, i32* %r0.global-to-local, align 4
  %v3_10007128 = sub i32 %v0_10007110, %v1_10007124
  %v1_1000712c = add i32 %v3_10007128, 1
  store i32 268464436, i32* @lr, align 4
  %v1_10007130 = call i32 @function_1000c280(i32 %v1_1000712c)
  br label %dec_label_pc_10006d98

dec_label_pc_10007138:                            ; preds = %dec_label_pc_10006ec0
  store i32 16, i32* %r0.global-to-local, align 4
  store i32 %v2_10006d70, i32* %r5.global-to-local, align 4
  store i32 16, i32* %stack_var_-1648, align 4
  store i32 ptrtoint (i32* @global_var_1000714c.164 to i32), i32* @lr, align 4
  %v3_10007148 = call i32 @function_1000b4f0(i32 %v2_10007140, i32 %v2_10006d70, i32 %v1_10006ed4)
  store i32 268464464, i32* @lr, align 4
  %v1_1000714c = call i32 @function_10007ad4(i32 %v3_10007148)
  store i32 268464468, i32* @lr, align 4
  %v1_10007150 = call i32 @function_100057c8(i32 %v1_1000714c)
  store i32 ptrtoint ([3 x i8]* @global_var_10007158.165 to i32), i32* @lr, align 4
  %v1_10007154 = call i32 @function_10002140(i32 %v1_10007150)
  %v0_10007158 = load i32, i32* @r18, align 4
  %v1_10007158 = sub i32 0, %v0_10007158
  store i32 ptrtoint ([3 x i8]* @global_var_10007164.166 to i32), i32* @lr, align 4
  %v2_10007160 = call i32 @function_1000aaac(i32 %v1_10007158, i32 9)
  %v0_10007168 = call i32 @function_1000c1fc()
  br label %dec_label_pc_1000716c

dec_label_pc_1000716c:                            ; preds = %dec_label_pc_100070d0, %dec_label_pc_10007138
  store i32 268464500, i32* @lr, align 4
  %v2_10007170 = call i32 @function_1000a100(i8* %v1_10007170)
  %v3_10007170 = trunc i32 %v2_10007170 to i16
  store i16 %v3_10007170, i16* %stack_var_-1656, align 2
  store i32 268464508, i32* @lr, align 4
  %v2_10007178 = call i32 @function_1000a404(i32 %v2_10007170)
  store i32 %v2_10007178, i32* @global_var_1001e180.71, align 4
  %v0_10007184 = load i32, i32* @r31, align 4
  %v1_10007184 = add i32 %v0_10007184, -7836
  %v2_10007184 = inttoptr i32 %v1_10007184 to i32*
  %v3_10007184 = load i32, i32* %v2_10007184, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 268464536, i32* @lr, align 4
  %v4_10007194 = call i32 @function_1000b6a4(i32 %v3_10007184, i32 ptrtoint (i32* @global_var_1000d470.167 to i32), i32 4, i32 16384)
  %v0_10007198 = load i32, i32* @r31, align 4
  %v1_10007198 = add i32 %v0_10007198, -7836
  %v2_10007198 = inttoptr i32 %v1_10007198 to i32*
  %v3_10007198 = load i32, i32* %v2_10007198, align 4
  store i32 1, i32* %r5.global-to-local, align 4
  store i32 268464556, i32* @lr, align 4
  %v4_100071a8 = call i32 @function_1000b6a4(i32 %v3_10007198, i32 %v2_10006924, i32 1, i32 16384)
  %v3_100071ac = load i16, i16* %stack_var_-1656, align 2
  %v4_100071ac = sext i16 %v3_100071ac to i32
  store i32 %v4_100071ac, i32* %r5.global-to-local, align 4
  %v3_100071b0 = icmp eq i16 %v3_100071ac, 0
  br i1 %v3_100071b0, label %dec_label_pc_10006d98, label %dec_label_pc_100071b8

dec_label_pc_100071b8:                            ; preds = %dec_label_pc_1000716c
  %v0_100071b8 = load i32, i32* @r31, align 4
  %v1_100071b8 = add i32 %v0_100071b8, -7836
  %v2_100071b8 = inttoptr i32 %v1_100071b8 to i32*
  %v3_100071b8 = load i32, i32* %v2_100071b8, align 4
  store i32 268464584, i32* @lr, align 4
  %v4_100071c4 = call i32 @function_1000b6a4(i32 %v3_100071b8, i32 %v1_1000716c, i32 %v4_100071ac, i32 16384)
  br label %dec_label_pc_10006d98

dec_label_pc_100071cc:                            ; preds = %dec_label_pc_10006fe8, %dec_label_pc_10006f8c
  %v0_100071cc = load i32, i32* @r23, align 4
  %v1_100071cc = inttoptr i32 %v0_100071cc to i32*
  %v2_100071cc = load i32, i32* %v1_100071cc, align 4
  %v3_100071d0 = icmp eq i32 %v2_100071cc, 11
  br i1 %v3_100071d0, label %dec_label_pc_10006d98, label %dec_label_pc_100071d8

dec_label_pc_100071d8:                            ; preds = %dec_label_pc_100071cc
  %v3_100071d8 = icmp eq i32 %v2_100071cc, 4
  br i1 %v3_100071d8, label %dec_label_pc_10006d98, label %dec_label_pc_10007014

dec_label_pc_100071e4:                            ; preds = %dec_label_pc_10006fbc
  %v3_100071e4 = load i32, i32* @global_var_1001e164.157, align 4
  store i32 2, i32* %r5.global-to-local, align 4
  store i32 268464632, i32* @lr, align 4
  %v4_100071f4 = call i32 @function_1000b62c(i32 %v3_100071e4, i32 %v2_10006924, i32 2, i32 16384)
  br label %dec_label_pc_10006d98

dec_label_pc_100071fc:                            ; preds = %dec_label_pc_1000700c
  %v3_100071fc = load i32, i32* @global_var_1001e164.157, align 4
  store i32 2, i32* %r5.global-to-local, align 4
  store i32 268464656, i32* @lr, align 4
  %v4_1000720c = call i32 @function_1000b62c(i32 %v3_100071fc, i32 %v2_10006924, i32 2, i32 16384)
  %v3_10007210 = load i32, i32* @global_var_1001e164.157, align 4
  %v3_10007214 = load i16, i16* %stack_var_-1656, align 2
  %v4_10007214 = sext i16 %v3_10007214 to i32
  store i32 %v4_10007214, i32* %r5.global-to-local, align 4
  store i32 268464676, i32* @lr, align 4
  %v4_10007220 = call i32 @function_1000b62c(i32 %v3_10007210, i32 %v2_10006fec, i32 %v4_10007214, i32 16384)
  %v3_10007224 = load i16, i16* %stack_var_-1656, align 2
  %v3_10007228 = icmp eq i16 %v3_10007224, 0
  br i1 %v3_10007228, label %dec_label_pc_10006d98, label %dec_label_pc_10007230

dec_label_pc_10007230:                            ; preds = %dec_label_pc_100071fc
  %v4_10007224 = sext i16 %v3_10007224 to i32
  store i32 268464696, i32* @lr, align 4
  %v2_10007234 = call i32 @function_10001eac(i32 %v2_10006fec, i32 %v4_10007224)
  br label %dec_label_pc_10006d98

; uselistorder directives
  uselistorder i16 %v3_10007224, { 1, 0 }
  uselistorder i32 %v3_10007048, { 1, 0, 2 }
  uselistorder i32 %v1_10006ff0, { 1, 0 }
  uselistorder i32 %v1_10006fc0, { 2, 1, 0 }
  uselistorder i32 %v1_10006f84, { 1, 0 }
  uselistorder i32 %v3_10006f60, { 0, 2, 5, 3, 1, 4 }
  uselistorder i32 %v1_10006ed4, { 2, 1, 0 }
  uselistorder i32 %v2_10006e9c, { 1, 0, 2 }
  uselistorder i32 %v0_10006e8c, { 2, 0, 1 }
  uselistorder i32 %v2_10006f48, { 1, 0 }
  uselistorder i32 %v1_10006dcc, { 1, 0 }
  uselistorder i32 %v1_10006dc8, { 1, 0 }
  uselistorder i32 %v1_10006db0, { 1, 0 }
  uselistorder i32 %v1_10006dac, { 1, 0 }
  uselistorder i32 %v2_10006d70, { 2, 1, 0 }
  uselistorder i32 %v3_10006cd8, { 1, 2, 0 }
  uselistorder i32 %v1_10006c04, { 1, 0 }
  uselistorder i32 %v1_10006bb8, { 1, 0 }
  uselistorder i32 %v1_10006b34, { 1, 0 }
  uselistorder i32 %v1_10006b24, { 1, 0 }
  uselistorder i32 %v0_10006b08, { 1, 0 }
  uselistorder i32 %v1_10006af4, { 1, 0 }
  uselistorder i32 %v0_10006ae4, { 1, 0 }
  uselistorder i32 %v1_10006adc, { 1, 0 }
  uselistorder i32 %v1_10006abc, { 1, 0 }
  uselistorder i32 %v0_10006aac, { 1, 0 }
  uselistorder i32 %v1_10006aa4, { 1, 0 }
  uselistorder i32 %v1_10006a84, { 1, 0 }
  uselistorder i32 %v0_10006a74, { 1, 0 }
  uselistorder i32 %v1_10006a6c, { 1, 0 }
  uselistorder i32 %v1_10006a4c, { 1, 0 }
  uselistorder i32 %v0_10006a3c, { 1, 0 }
  uselistorder i32 %v1_10006a34, { 1, 0 }
  uselistorder i32 %v0_10006a08, { 1, 0 }
  uselistorder i32 %v2_10006924, { 4, 5, 3, 1, 0, 2, 6 }
  uselistorder i32 %v2_10006840, { 0, 2, 1, 3, 4 }
  uselistorder i32* %stack_var_-1648, { 0, 1, 2, 4, 3, 5 }
  uselistorder i16* %stack_var_-1656, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* %stack_var_-1632, { 1, 0 }
  uselistorder i8** %stack_var_-1604, { 0, 2, 1 }
  uselistorder i32* %stack_var_-1586, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* %stack_var_-1652, { 1, 0 }
  uselistorder i8 %tmp35, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 32, 33, 16, 17, 18, 30, 31, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 14, 16, 17, 18, 19, 20, 21 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 16, 17, 18, 19, 11, 12, 13, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39 }
  uselistorder i32* %ctr.global-to-local, { 0, 1, 10, 11, 2, 3, 4, 8, 9, 5, 6, 7 }
  uselistorder i32 16386, { 1, 0, 2 }
  uselistorder i8* @global_var_1001e198.158, { 3, 2, 1, 0 }
  uselistorder i32* @global_var_1001e164.157, { 1, 2, 3, 4, 5, 0, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15, 16 }
  uselistorder i32 ()* @function_10007d98, { 2, 1, 0 }
  uselistorder i32 (i32)* @function_100097f4, { 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_1000adec, { 1, 0 }
  uselistorder i32 (i32)* @function_10009880, { 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i8*, i32)* @function_1000a128, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 57, 58, 59, 61, 60, 24, 25, 26, 27, 51, 52, 53, 54, 55, 56, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50 }
  uselistorder i32 ()* @function_10006580, { 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1000d3e0.8 to i32), { 1, 2, 0 }
  uselistorder i32 (i32, i32)* @function_1000b834, { 1, 0 }
  uselistorder i32 (i32)* @function_1000ada4, { 1, 0 }
  uselistorder label %dec_label_pc_1000716c, { 1, 0 }
  uselistorder label %dec_label_pc_10007098, { 1, 0 }
  uselistorder label %dec_label_pc_10007024, { 1, 0 }
  uselistorder label %dec_label_pc_10006fe8, { 1, 0 }
  uselistorder label %dec_label_pc_10006f24, { 1, 0 }
  uselistorder label %dec_label_pc_10006eb4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10006e50, { 1, 0 }
  uselistorder label %dec_label_pc_10006e0c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10006dfc, { 1, 0 }
  uselistorder label %dec_label_pc_10006dc4.dec_label_pc_10006dc4_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10006da8.dec_label_pc_10006da8_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10006d98, { 7, 1, 8, 0, 2, 9, 3, 10, 11, 4, 5, 12, 6, 13 }
  uselistorder label %dec_label_pc_10006ba8, { 3, 1, 0, 2 }
}

define i32 @function_1000723c() local_unnamed_addr {
dec_label_pc_1000723c:
  %v3_10007244 = load i32, i32* @global_var_1001e238.168, align 4
  %v3_1000724c = load i32, i32* @global_var_1001e22c.169, align 4
  %v1_10007254 = udiv i32 %v3_10007244, 524288
  %v3_10007258 = load i32, i32* @global_var_1001e234.170, align 4
  %v1_1000725c = mul i32 %v3_1000724c, 2048
  %v2_10007260 = xor i32 %v1_10007254, %v3_10007244
  %v2_10007264 = xor i32 %v1_1000725c, %v3_1000724c
  %v3_10007268 = load i32, i32* @global_var_1001e230.171, align 4
  %v2_1000726c = xor i32 %v2_10007260, %v2_10007264
  %v1_10007270 = udiv i32 %v2_10007264, 256
  %v2_10007274 = xor i32 %v2_1000726c, %v1_10007270
  store i32 %v3_10007268, i32* @global_var_1001e22c.169, align 4
  store i32 %v3_10007258, i32* @global_var_1001e230.171, align 4
  store i32 %v3_10007244, i32* @global_var_1001e234.170, align 4
  store i32 %v2_10007274, i32* @global_var_1001e238.168, align 4
  ret i32 %v2_10007274

; uselistorder directives
  uselistorder i32 %v2_10007274, { 1, 0 }
  uselistorder i32 %v3_1000724c, { 1, 0 }
  uselistorder i32 %v3_10007244, { 2, 1, 0 }
}

define i32 @function_1000728c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000728c:
  store i32 268464812, i32* @lr, align 4
  %v0_100072a8 = call i32 @function_1000ad5c()
  store i32 %v0_100072a8, i32* @global_var_1001e22c.169, align 4
  store i32 268464824, i32* @lr, align 4
  %v0_100072b4 = call i32 @function_1000aa1c()
  store i32 268464832, i32* @lr, align 4
  %v0_100072bc = call i32 @function_1000aa64()
  %v2_100072c0 = xor i32 %v0_100072b4, %v0_100072bc
  store i32 %v2_100072c0, i32* @global_var_1001e230.171, align 4
  store i32 268464844, i32* @lr, align 4
  %v1_100072c8 = call i32 @function_1000b0b4(i32 %v0_100072bc)
  %v3_100072cc = load i32, i32* @global_var_1001e230.171, align 4
  %v2_100072dc = xor i32 %v3_100072cc, %v1_100072c8
  store i32 %v2_100072dc, i32* @global_var_1001e238.168, align 4
  store i32 %v1_100072c8, i32* @global_var_1001e234.170, align 4
  ret i32 %v1_100072c8

; uselistorder directives
  uselistorder i32 %v1_100072c8, { 2, 1, 0 }
  uselistorder i32 %v0_100072bc, { 1, 0 }
  uselistorder i32 ()* @function_1000aa64, { 1, 2, 0 }
}

define i32 @function_100072fc(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100072fc:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_gt.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r12.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %stack_var_-88 = alloca i32, align 4
  store i32 33, i32* @r5, align 4
  store i32 %arg2, i32* %r30.global-to-local, align 4
  store i32 ptrtoint ([33 x i8]* @global_var_1000d4b0.172 to i32), i32* @r4, align 4
  store i32 %tmp, i32* %r31.global-to-local, align 4
  %v2_10007320 = ptrtoint i32* %stack_var_-88 to i32
  store i32 %v2_10007320, i32* @r3, align 4
  store i32 268464964, i32* @lr, align 4
  %v0_10007340 = call i32 @function_1000b0ec()
  store i32 %v0_10007340, i32* %r3.global-to-local, align 4
  %v0_10007344 = load i32, i32* %r30.global-to-local, align 4
  %v1_10007344 = icmp slt i32 %v0_10007344, 0
  %v2_10007344 = icmp sgt i32 %v0_10007344, 0
  %v3_10007344 = icmp eq i32 %v0_10007344, 0
  store i1 %v1_10007344, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10007344, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10007344, i1* %cr7_eq.global-to-local, align 1
  %tmp20 = icmp slt i32 %v0_10007344, 1
  br i1 %tmp20, label %dec_label_pc_10007438, label %dec_label_pc_1000734c

dec_label_pc_1000734c:                            ; preds = %dec_label_pc_100072fc
  %v3_10007360 = load i32, i32* @global_var_1001e238.168, align 4
  store i32 %v3_10007360, i32* %r4.global-to-local, align 4
  %v3_10007364 = load i32, i32* @global_var_1001e234.170, align 4
  store i32 %v3_10007364, i32* %r29.global-to-local, align 4
  store i32 1041204193, i32* %r28.global-to-local, align 4
  %v3_1000736c = load i32, i32* @global_var_1001e230.171, align 4
  store i32 %v3_1000736c, i32* %r12.global-to-local, align 4
  %v3_10007370 = load i32, i32* @global_var_1001e22c.169, align 4
  store i32 %v3_10007370, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100073d8

dec_label_pc_10007378:                            ; preds = %dec_label_pc_100073d8
  %v2_10007378 = call i32 @__asm_rlwinm(i32 %v2_100073f8, i32 29, i32 27, i32 31)
  %v2_1000737c = call i32 @__asm_rlwinm(i32 %v2_100073f8, i32 21, i32 27, i32 31)
  store i32 %v2_1000737c, i32* %r9.global-to-local, align 4
  %v0_10007380 = load i32, i32* %r30.global-to-local, align 4
  %v1_10007380 = add i32 %v0_10007380, -4
  store i32 %v1_10007380, i32* %r30.global-to-local, align 4
  %v0_10007384 = load i32, i32* @r1, align 4
  %v2_10007384 = add i32 %v0_10007384, %v2_10007378
  store i32 %v2_10007384, i32* %r11.global-to-local, align 4
  %v2_10007388 = add i32 %v0_10007384, %v2_1000737c
  store i32 %v2_10007388, i32* %r6.global-to-local, align 4
  %v2_1000738c = call i32 @__asm_rlwinm(i32 %v2_100073f8, i32 13, i32 27, i32 31)
  %v2_10007390 = udiv i32 %v2_100073f0, 134217728
  store i32 %v2_10007390, i32* %r9.global-to-local, align 4
  %v0_10007394 = load i32, i32* %r30.global-to-local, align 4
  %v1_10007394 = icmp slt i32 %v0_10007394, 0
  %v2_10007394 = icmp sgt i32 %v0_10007394, 0
  %v3_10007394 = icmp eq i32 %v0_10007394, 0
  store i1 %v1_10007394, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10007394, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10007394, i1* %cr7_eq.global-to-local, align 1
  %v0_10007398 = load i32, i32* @r1, align 4
  %v2_10007398 = add i32 %v0_10007398, %v2_1000738c
  store i32 %v2_10007398, i32* %r10.global-to-local, align 4
  %v2_1000739c = add i32 %v0_10007398, %v2_10007390
  %v0_100073a0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100073a0 = add i32 %v0_100073a0, 8
  %v2_100073a0 = inttoptr i32 %v1_100073a0 to i8*
  %v3_100073a0 = load i8, i8* %v2_100073a0, align 1
  %v1_100073a4 = add i32 %v2_10007398, 8
  %v2_100073a4 = inttoptr i32 %v1_100073a4 to i8*
  %v3_100073a4 = load i8, i8* %v2_100073a4, align 1
  %v4_100073a4 = zext i8 %v3_100073a4 to i32
  store i32 %v4_100073a4, i32* %r7.global-to-local, align 4
  %v0_100073a8 = load i32, i32* %r12.global-to-local, align 4
  store i32 %v0_100073a8, i32* %r10.global-to-local, align 4
  %v0_100073ac = load i32, i32* %r6.global-to-local, align 4
  %v1_100073ac = add i32 %v0_100073ac, 8
  %v2_100073ac = inttoptr i32 %v1_100073ac to i8*
  %v3_100073ac = load i8, i8* %v2_100073ac, align 1
  %v4_100073ac = zext i8 %v3_100073ac to i32
  store i32 %v4_100073ac, i32* %r9.global-to-local, align 4
  %v1_100073b0 = add i32 %v2_1000739c, 8
  %v2_100073b0 = inttoptr i32 %v1_100073b0 to i8*
  %v3_100073b0 = load i8, i8* %v2_100073b0, align 1
  %v4_100073b0 = zext i8 %v3_100073b0 to i32
  store i32 %v4_100073b0, i32* %r11.global-to-local, align 4
  %v2_100073b4 = load i32, i32* %r31.global-to-local, align 4
  %v3_100073b4 = inttoptr i32 %v2_100073b4 to i8*
  store i8 %v3_100073a0, i8* %v3_100073b4, align 1
  %v0_100073b8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100073b8 = trunc i32 %v0_100073b8 to i8
  %v2_100073b8 = load i32, i32* %r31.global-to-local, align 4
  %v3_100073b8 = add i32 %v2_100073b8, 1
  %v4_100073b8 = inttoptr i32 %v3_100073b8 to i8*
  store i8 %v1_100073b8, i8* %v4_100073b8, align 1
  %v0_100073bc = load i32, i32* %r31.global-to-local, align 4
  %v1_100073bc = add i32 %v0_100073bc, 4
  store i32 %v1_100073bc, i32* %r31.global-to-local, align 4
  %v0_100073c0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100073c0 = trunc i32 %v0_100073c0 to i8
  %v2_100073c0 = load i32, i32* %r3.global-to-local, align 4
  %v3_100073c0 = add i32 %v2_100073c0, 2
  %v4_100073c0 = inttoptr i32 %v3_100073c0 to i8*
  store i8 %v1_100073c0, i8* %v4_100073c0, align 1
  %v0_100073c4 = load i32, i32* %r7.global-to-local, align 4
  %v1_100073c4 = trunc i32 %v0_100073c4 to i8
  %v2_100073c4 = load i32, i32* %r3.global-to-local, align 4
  %v3_100073c4 = add i32 %v2_100073c4, 1
  %v4_100073c4 = inttoptr i32 %v3_100073c4 to i8*
  store i8 %v1_100073c4, i8* %v4_100073c4, align 1
  %v0_100073c8 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_100073c8 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_100073c8 = or i1 %v0_100073c8, %v1_100073c8
  br i1 %v2_100073c8, label %dec_label_pc_10007428, label %dec_label_pc_100073cc

dec_label_pc_100073cc:                            ; preds = %dec_label_pc_10007400, %dec_label_pc_10007378
  %v0_100073cc = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_100073cc, i32* %r12.global-to-local, align 4
  %v0_100073d0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_100073d0, i32* %r29.global-to-local, align 4
  store i32 %v2_100073f8, i32* %r4.global-to-local, align 4
  %v0_100073d8.pre = load i32, i32* %r30.global-to-local, align 4
  %v0_100073dc.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100073d8

dec_label_pc_100073d8:                            ; preds = %dec_label_pc_1000734c, %dec_label_pc_100073cc
  %v0_1000740c = phi i32 [ %v3_1000736c, %dec_label_pc_1000734c ], [ %v0_100073cc, %dec_label_pc_100073cc ]
  %v0_100073e0 = phi i32 [ %v3_10007360, %dec_label_pc_1000734c ], [ %v2_100073f8, %dec_label_pc_100073cc ]
  %v0_100073dc = phi i32 [ %v3_10007370, %dec_label_pc_1000734c ], [ %v0_100073dc.pre, %dec_label_pc_100073cc ]
  %v0_10007404 = phi i32 [ %v0_10007344, %dec_label_pc_1000734c ], [ %v0_100073d8.pre, %dec_label_pc_100073cc ]
  %v1_100073d8 = icmp ult i32 %v0_10007404, 3
  %v2_100073d8 = icmp ugt i32 %v0_10007404, 3
  %v3_100073d8 = icmp eq i32 %v0_10007404, 3
  store i1 %v1_100073d8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100073d8, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100073d8, i1* %cr7_eq.global-to-local, align 1
  %v1_100073dc = mul i32 %v0_100073dc, 2048
  %v1_100073e0 = udiv i32 %v0_100073e0, 524288
  %v2_100073e4 = xor i32 %v1_100073dc, %v0_100073dc
  %v2_100073e8 = xor i32 %v1_100073e0, %v0_100073e0
  %v0_100073ec = load i32, i32* %r31.global-to-local, align 4
  %v1_100073ec = add i32 %v0_100073ec, 1
  store i32 %v1_100073ec, i32* %r3.global-to-local, align 4
  %v2_100073f0 = xor i32 %v2_100073e8, %v2_100073e4
  %v1_100073f4 = udiv i32 %v2_100073e4, 256
  store i32 %v1_100073f4, i32* %r9.global-to-local, align 4
  %v2_100073f8 = xor i32 %v1_100073f4, %v2_100073f0
  br i1 %v2_100073d8, label %dec_label_pc_10007378, label %dec_label_pc_10007400

dec_label_pc_10007400:                            ; preds = %dec_label_pc_100073d8
  %v3_100073f8 = sext i32 %v2_100073f8 to i64
  %v2_10007400 = load i32, i32* %r28.global-to-local, align 4
  %v4_10007400 = zext i32 %v2_10007400 to i64
  %v5_10007400 = mul nuw nsw i64 %v4_10007400, %v3_100073f8
  %v1_10007404 = add i32 %v0_10007404, -1
  store i32 %v1_10007404, i32* %r30.global-to-local, align 4
  %v1_10007408 = icmp slt i32 %v1_10007404, 0
  %v2_10007408 = icmp sgt i32 %v1_10007404, 0
  %v3_10007408 = icmp eq i32 %v1_10007404, 0
  store i1 %v1_10007408, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10007408, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10007408, i1* %cr7_eq.global-to-local, align 1
  store i32 %v0_1000740c, i32* %r10.global-to-local, align 4
  %v1_100074106 = udiv i64 %v5_10007400, 34359738368
  %v1_10007410 = trunc i64 %v1_100074106 to i32
  %tmp21 = mul i32 %v1_10007410, -33
  %v3_10007418 = add i32 %tmp21, %v2_100073f8
  %v1_1000741c = trunc i32 %v3_10007418 to i8
  %v3_1000741c = inttoptr i32 %v0_100073ec to i8*
  store i8 %v1_1000741c, i8* %v3_1000741c, align 1
  %v0_10007420 = load i32, i32* %r31.global-to-local, align 4
  %v1_10007420 = add i32 %v0_10007420, 1
  store i32 %v1_10007420, i32* %r31.global-to-local, align 4
  %v0_10007424 = load i1, i1* %cr7_gt.global-to-local, align 1
  br i1 %v0_10007424, label %dec_label_pc_100073cc, label %dec_label_pc_10007428

dec_label_pc_10007428:                            ; preds = %dec_label_pc_10007400, %dec_label_pc_10007378
  store i32 %v2_100073f8, i32* @global_var_1001e238.168, align 4
  %v0_1000742c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1000742c, i32* @global_var_1001e234.170, align 4
  %v0_10007430 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10007430, i32* @global_var_1001e230.171, align 4
  %v0_10007434 = load i32, i32* %r12.global-to-local, align 4
  store i32 %v0_10007434, i32* @global_var_1001e22c.169, align 4
  %v0_10007464.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10007438

dec_label_pc_10007438:                            ; preds = %dec_label_pc_100072fc, %dec_label_pc_10007428
  %v0_10007464 = phi i32 [ %v0_10007340, %dec_label_pc_100072fc ], [ %v0_10007464.pre, %dec_label_pc_10007428 ]
  ret i32 %v0_10007464

; uselistorder directives
  uselistorder i32 %v1_10007404, { 2, 1, 0, 3 }
  uselistorder i32 %v2_100073f8, { 0, 1, 7, 5, 4, 3, 6, 2 }
  uselistorder i32 %v1_100073f4, { 1, 0 }
  uselistorder i32 %v2_100073f0, { 1, 0 }
  uselistorder i32 %v0_10007404, { 0, 3, 2, 1 }
  uselistorder i32 %v0_100073dc, { 1, 0 }
  uselistorder i32 %v0_100073e0, { 1, 0 }
  uselistorder i32 %v2_10007390, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 4, 0, 1, 2, 3 }
  uselistorder i32* %r4.global-to-local, { 2, 1, 3, 4, 0 }
  uselistorder i32* %r31.global-to-local, { 0, 2, 6, 1, 3, 4, 5, 7 }
  uselistorder i32* %r30.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 1, 2, 5, 0 }
  uselistorder i32* %r29.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r12.global-to-local, { 1, 0, 2, 3 }
  uselistorder i1* %cr7_lt.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i1* %cr7_gt.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder label %dec_label_pc_10007438, { 1, 0 }
  uselistorder label %dec_label_pc_100073d8, { 1, 0 }
}

define i32 @function_10007468() local_unnamed_addr {
dec_label_pc_10007468:
  %r0.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %v0_10007468 = load i32, i32* @r4, align 4
  %tmp19 = icmp slt i32 %v0_10007468, 1
  br i1 %tmp19, label %dec_label_pc_10007468.dec_label_pc_1000751c_crit_edge, label %dec_label_pc_10007480

dec_label_pc_10007468.dec_label_pc_1000751c_crit_edge: ; preds = %dec_label_pc_10007468
  %v0_1000752c.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000751c

dec_label_pc_10007480:                            ; preds = %dec_label_pc_10007468
  %v3_10007490 = load i32, i32* @global_var_1001e238.168, align 4
  store i32 %v3_10007490, i32* %r7.global-to-local, align 4
  %v3_10007494 = load i32, i32* @global_var_1001e234.170, align 4
  store i32 %v3_10007494, i32* %r5.global-to-local, align 4
  %v3_10007498 = load i32, i32* @global_var_1001e230.171, align 4
  store i32 %v3_10007498, i32* %r6.global-to-local, align 4
  %v3_1000749c = load i32, i32* @global_var_1001e22c.169, align 4
  br label %dec_label_pc_100074c8

dec_label_pc_100074a4:                            ; preds = %dec_label_pc_100074c8
  %v1_100074a4 = load i32, i32* @r3, align 4
  %v2_100074a4 = inttoptr i32 %v1_100074a4 to i32*
  store i32 %v2_100074ec, i32* %v2_100074a4, align 4
  %v0_100074a8 = load i32, i32* @r4, align 4
  %v1_100074a8 = add i32 %v0_100074a8, -4
  store i32 %v1_100074a8, i32* @r4, align 4
  %v0_100074ac = load i32, i32* @r3, align 4
  %v1_100074ac = add i32 %v0_100074ac, 4
  br label %dec_label_pc_100074b0

dec_label_pc_100074b0:                            ; preds = %dec_label_pc_10007500, %dec_label_pc_100074a4
  %v0_100074b0 = phi i32 [ %v0_100074b0.pr, %dec_label_pc_10007500 ], [ %v1_100074a8, %dec_label_pc_100074a4 ]
  %storemerge = phi i32 [ %v1_10007504, %dec_label_pc_10007500 ], [ %v1_100074ac, %dec_label_pc_100074a4 ]
  store i32 %storemerge, i32* @r3, align 4
  %v0_100074b4 = load i32, i32* %r6.global-to-local, align 4
  %tmp20 = icmp slt i32 %v0_100074b0, 1
  br i1 %tmp20, label %dec_label_pc_1000750c, label %dec_label_pc_100074bc

dec_label_pc_100074bc:                            ; preds = %dec_label_pc_100074b0
  %v0_100074bc = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_100074bc, i32* %r6.global-to-local, align 4
  %v0_100074c0 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_100074c0, i32* %r5.global-to-local, align 4
  %v0_100074c4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_100074c4, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_100074c8

dec_label_pc_100074c8:                            ; preds = %dec_label_pc_10007480, %dec_label_pc_100074bc
  %v0_10007568 = phi i32 [ %v3_10007498, %dec_label_pc_10007480 ], [ %v0_100074bc, %dec_label_pc_100074bc ]
  %v0_1000754c = phi i32 [ %v3_10007494, %dec_label_pc_10007480 ], [ %v0_100074c0, %dec_label_pc_100074bc ]
  %v0_10007550 = phi i32 [ %v3_10007490, %dec_label_pc_10007480 ], [ %v0_100074c4, %dec_label_pc_100074bc ]
  %v0_10007530 = phi i32 [ %v3_1000749c, %dec_label_pc_10007480 ], [ %v0_100074b4, %dec_label_pc_100074bc ]
  %v0_100074f8 = phi i32 [ %v0_10007468, %dec_label_pc_10007480 ], [ %v0_100074b0, %dec_label_pc_100074bc ]
  %v2_100074c8 = icmp sgt i32 %v0_100074f8, 3
  %v1_100074cc = mul i32 %v0_10007530, 2048
  %v1_100074d0 = udiv i32 %v0_10007550, 524288
  %v2_100074d4 = xor i32 %v1_100074cc, %v0_10007530
  %v2_100074d8 = xor i32 %v1_100074d0, %v0_10007550
  %v2_100074e0 = xor i32 %v2_100074d8, %v2_100074d4
  %v1_100074e4 = udiv i32 %v2_100074d4, 256
  %v2_100074ec = xor i32 %v2_100074e0, %v1_100074e4
  store i32 %v2_100074ec, i32* %r0.global-to-local, align 4
  br i1 %v2_100074c8, label %dec_label_pc_100074a4, label %dec_label_pc_100074f4

dec_label_pc_100074f4:                            ; preds = %dec_label_pc_100074c8
  %v3_100074dc = icmp eq i32 %v0_100074f8, 1
  store i32 %v2_100074ec, i32* %r0.global-to-local, align 4
  %v1_100074f8 = add i32 %v0_100074f8, -2
  store i32 %v1_100074f8, i32* @r4, align 4
  br i1 %v3_100074dc, label %dec_label_pc_10007530, label %dec_label_pc_10007500

dec_label_pc_10007500:                            ; preds = %dec_label_pc_100074f4
  %v1_10007500 = trunc i32 %v2_100074ec to i16
  %v2_10007500 = load i32, i32* @r3, align 4
  %v3_10007500 = inttoptr i32 %v2_10007500 to i16*
  store i16 %v1_10007500, i16* %v3_10007500, align 2
  %v0_10007504 = load i32, i32* @r3, align 4
  %v1_10007504 = add i32 %v0_10007504, 2
  %v0_100074b0.pr = load i32, i32* @r4, align 4
  br label %dec_label_pc_100074b0

dec_label_pc_1000750c:                            ; preds = %dec_label_pc_100074b0
  %v0_1000750c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1000750c, i32* @global_var_1001e238.168, align 4
  %v0_10007510 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_10007510, i32* @global_var_1001e234.170, align 4
  %v0_10007514 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_10007514, i32* @global_var_1001e230.171, align 4
  store i32 %v0_100074b4, i32* @global_var_1001e22c.169, align 4
  br label %dec_label_pc_1000751c

dec_label_pc_1000751c:                            ; preds = %dec_label_pc_10007468.dec_label_pc_1000751c_crit_edge, %dec_label_pc_1000750c
  %v0_1000752c = phi i32 [ %v0_1000752c.pre, %dec_label_pc_10007468.dec_label_pc_1000751c_crit_edge ], [ %storemerge, %dec_label_pc_1000750c ]
  ret i32 %v0_1000752c

dec_label_pc_10007530:                            ; preds = %dec_label_pc_100074f4
  store i32 %v2_100074ec, i32* %r0.global-to-local, align 4
  store i32 %v0_1000754c, i32* @global_var_1001e230.171, align 4
  store i32 %v0_10007550, i32* @global_var_1001e234.170, align 4
  store i32 %v2_100074ec, i32* @global_var_1001e238.168, align 4
  store i32 %v0_10007568, i32* @global_var_1001e22c.169, align 4
  %v1_1000756c = trunc i32 %v2_100074ec to i8
  %v2_1000756c = load i32, i32* @r3, align 4
  %v3_1000756c = inttoptr i32 %v2_1000756c to i8*
  store i8 %v1_1000756c, i8* %v3_1000756c, align 1
  %v0_10007570 = load i32, i32* @r3, align 4
  ret i32 %v0_10007570

; uselistorder directives
  uselistorder i32 %v2_100074ec, { 2, 1, 0, 3, 4, 6, 5 }
  uselistorder i32 %v0_10007530, { 1, 0 }
  uselistorder i32 %v0_10007550, { 1, 2, 0 }
  uselistorder i32 %v0_10007468, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 1, 4, 2 }
  uselistorder label %dec_label_pc_1000751c, { 1, 0 }
  uselistorder label %dec_label_pc_100074c8, { 1, 0 }
}

define i32 @function_10007574(i32 %arg1) local_unnamed_addr {
dec_label_pc_10007574:
  store i32 %arg1, i32* @r31, align 4
  %v3_10007580 = icmp eq i32 %arg1, 0
  br i1 %v3_10007580, label %dec_label_pc_100075a4, label %dec_label_pc_1000758c

dec_label_pc_1000758c:                            ; preds = %dec_label_pc_10007574
  %v1_1000758c = add i32 %arg1, 4
  %v2_1000758c = inttoptr i32 %v1_1000758c to i32*
  %v3_1000758c = load i32, i32* %v2_1000758c, align 4
  store i32 %v3_1000758c, i32* @r3, align 4
  %v3_10007590 = icmp eq i32 %v3_1000758c, 0
  br i1 %v3_10007590, label %dec_label_pc_1000759c, label %dec_label_pc_10007598

dec_label_pc_10007598:                            ; preds = %dec_label_pc_1000758c
  store i32 268465564, i32* @lr, align 4
  %v0_10007598 = call i32 @function_1000bb54()
  %v0_1000759c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000759c

dec_label_pc_1000759c:                            ; preds = %dec_label_pc_1000758c, %dec_label_pc_10007598
  %v0_1000759c = phi i32 [ %arg1, %dec_label_pc_1000758c ], [ %v0_1000759c.pre, %dec_label_pc_10007598 ]
  store i32 %v0_1000759c, i32* @r3, align 4
  store i32 268465572, i32* @lr, align 4
  %v0_100075a0 = call i32 @function_1000bb54()
  br label %dec_label_pc_100075a4

dec_label_pc_100075a4:                            ; preds = %dec_label_pc_10007574, %dec_label_pc_1000759c
  %v0_100075b4 = phi i32 [ 0, %dec_label_pc_10007574 ], [ %v0_100075a0, %dec_label_pc_1000759c ]
  ret i32 %v0_100075b4

; uselistorder directives
  uselistorder i32 %arg1, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_100075a4, { 1, 0 }
  uselistorder label %dec_label_pc_1000759c, { 1, 0 }
}

define i32 @function_100075b8(i32 %arg1) local_unnamed_addr {
dec_label_pc_100075b8:
  %cr4_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp60 = call i16 @__decompiler_undefined_function_1()
  %stack_var_-4308 = alloca i32, align 4
  %stack_var_-4312 = alloca i32, align 4
  %stack_var_-2096 = alloca i32, align 4
  %stack_var_-2108 = alloca i16, align 2
  %stack_var_-4284 = alloca i32, align 4
  %stack_var_-4300 = alloca i32, align 4
  %stack_var_-4143 = alloca i32, align 4
  %stack_var_-4144 = alloca i32, align 4
  %stack_var_-4156 = alloca i32, align 4
  %v0_100075bc = load i32, i32* @lr, align 4
  store i32 %v0_100075bc, i32* %r0.global-to-local, align 4
  %v0_100075c0 = call i32 @__asm_mfcr()
  %v0_100075c8 = load i32, i32* @r29, align 4
  store i32 %v0_100075c0, i32* @r29, align 4
  %v2_100075dc = ptrtoint i32* %stack_var_-4156 to i32
  %v2_100075e4 = ptrtoint i32* %stack_var_-4144 to i32
  store i32 %v2_100075e4, i32* %r26.global-to-local, align 4
  %v0_100075e8 = load i32, i32* %r0.global-to-local, align 4
  %v0_10007608 = load i32, i32* @r28, align 4
  store i32 268465688, i32* @lr, align 4
  %v2_10007614 = call i32 @function_1000bae4(i32 1, i32 8)
  store i32 %v2_10007614, i32* %r25.global-to-local, align 4
  %v0_1000761c = load i32, i32* @r29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007624.173 to i32), i32* @lr, align 4
  %v1_10007620 = inttoptr i32 %v0_1000761c to i8*
  %v2_10007620 = call i32 @function_1000a100(i8* %v1_10007620)
  %v2_10007624 = ptrtoint i32* %stack_var_-4143 to i32
  store i32 %v2_10007624, i32* %r10.global-to-local, align 4
  %v1_10007628 = add i32 %v2_10007620, 1
  store i32 %v2_100075e4, i32* %r7.global-to-local, align 4
  %v1_10007634 = add i32 %v2_10007620, 2
  store i32 %v1_10007634, i32* %ctr.global-to-local, align 4
  %tmp94 = icmp sgt i32 %v1_10007628, -1
  br i1 %tmp94, label %dec_label_pc_1000765c.preheader, label %dec_label_pc_1000765c.preheader.thread

dec_label_pc_1000765c.preheader:                  ; preds = %dec_label_pc_100075b8
  %v3_10007630 = icmp eq i32 %v1_10007628, 0
  %v1_1000765c13 = or i32 %v2_10007624, 1
  store i32 %v1_1000765c13, i32* %r11.global-to-local, align 4
  store i32 %v1_10007628, i32* %ctr.global-to-local, align 4
  br i1 %v3_10007630, label %dec_label_pc_1000768c, label %dec_label_pc_10007664.lr.ph

dec_label_pc_10007664.lr.ph:                      ; preds = %dec_label_pc_1000765c.preheader
  %v0_10007664.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10007664

dec_label_pc_10007648:                            ; preds = %dec_label_pc_10007674
  %v3_10007648 = inttoptr i32 %v2_10007648 to i8*
  store i8 %v2_10007664, i8* %v3_10007648, align 1
  %v0_1000764c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000764c = urem i32 %v0_1000764c, 256
  %v0_10007650 = load i32, i32* %r10.global-to-local, align 4
  %v1_10007650 = add i32 %v0_10007650, 1
  store i32 %v1_10007650, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10007654

dec_label_pc_10007654:                            ; preds = %dec_label_pc_1000767c, %dec_label_pc_10007648
  %v0_10007658 = phi i32 [ %v0_10007658.pre, %dec_label_pc_1000767c ], [ %v1_10007650, %dec_label_pc_10007648 ]
  %v0_1000767420 = phi i32 [ 0, %dec_label_pc_1000767c ], [ %v1_1000764c, %dec_label_pc_10007648 ]
  %v0_10007654 = load i32, i32* @r29, align 4
  %v1_10007654 = add i32 %v0_10007654, 1
  store i32 %v1_10007654, i32* @r29, align 4
  store i32 %v0_10007658, i32* %r10.global-to-local, align 4
  %v1_1000765c = add i32 %v0_10007658, 1
  store i32 %v1_1000765c, i32* %r11.global-to-local, align 4
  %v0_10007660 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10007660 = add i32 %v0_10007660, -1
  store i32 %v1_10007660, i32* %ctr.global-to-local, align 4
  %v2_10007660 = icmp eq i32 %v1_10007660, 0
  br i1 %v2_10007660, label %dec_label_pc_1000768c, label %dec_label_pc_10007664

dec_label_pc_10007664:                            ; preds = %dec_label_pc_10007664.lr.ph, %dec_label_pc_10007654
  %v2_10007648 = phi i32 [ %v2_10007624, %dec_label_pc_10007664.lr.ph ], [ %v0_10007658, %dec_label_pc_10007654 ]
  %v0_1000767c = phi i32 [ 0, %dec_label_pc_10007664.lr.ph ], [ %v0_1000767420, %dec_label_pc_10007654 ]
  %v0_10007664 = phi i32 [ %v0_10007664.pre, %dec_label_pc_10007664.lr.ph ], [ %v1_10007654, %dec_label_pc_10007654 ]
  %v1_10007664 = inttoptr i32 %v0_10007664 to i8*
  %v2_10007664 = load i8, i8* %v1_10007664, align 1
  %v3_10007664 = zext i8 %v2_10007664 to i32
  store i32 %v3_10007664, i32* %r0.global-to-local, align 4
  %v3_10007668 = icmp eq i8 %v2_10007664, 46
  br i1 %v3_10007668, label %dec_label_pc_1000767c, label %dec_label_pc_10007674

dec_label_pc_10007674:                            ; preds = %dec_label_pc_10007664
  %v3_1000766c = icmp eq i8 %v2_10007664, 0
  %v1_10007674 = add nsw i32 %v0_1000767c, 1
  store i32 %v1_10007674, i32* %r9.global-to-local, align 4
  br i1 %v3_1000766c, label %dec_label_pc_1000767c, label %dec_label_pc_10007648

dec_label_pc_1000767c:                            ; preds = %dec_label_pc_10007674, %dec_label_pc_10007664
  %v1_1000767c = trunc i32 %v0_1000767c to i8
  %v2_1000767c = load i32, i32* %r7.global-to-local, align 4
  %v3_1000767c = inttoptr i32 %v2_1000767c to i8*
  store i8 %v1_1000767c, i8* %v3_1000767c, align 1
  %v0_10007680 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_10007680, i32* %r7.global-to-local, align 4
  %v0_10007658.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10007654

dec_label_pc_1000768c:                            ; preds = %dec_label_pc_10007654, %dec_label_pc_1000765c.preheader.thread, %dec_label_pc_1000765c.preheader
  %v2_10007694 = phi i32 [ %v2_10007624, %dec_label_pc_1000765c.preheader ], [ %v2_10007624, %dec_label_pc_1000765c.preheader.thread ], [ %v0_10007658, %dec_label_pc_10007654 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_10007694 = inttoptr i32 %v2_10007694 to i8*
  store i8 0, i8* %v3_10007694, align 1
  %v2_10007698 = ptrtoint i32* %stack_var_-4300 to i32
  store i32 -1, i32* @r30, align 4
  store i32 1, i32* %r27.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100076a8.174 to i32), i32* @lr, align 4
  %v1_100076a4 = bitcast i32* %stack_var_-4144 to i8*
  %v2_100076a4 = call i32 @function_1000a100(i8* %v1_100076a4)
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_100076ac = load i32, i32* %r26.global-to-local, align 4
  %v2_100076ac = add i32 %v0_100076ac, %v2_100076a4
  store i32 %v2_100076ac, i32* %r29.global-to-local, align 4
  %v0_100076b8 = load i32, i32* @r30, align 4
  %v3_100076b8 = icmp eq i32 %v0_100076b8, -1
  store i1 %v3_100076b8, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %stack_var_-4300, align 4
  %v2_100076c0 = ptrtoint i32* %stack_var_-4284 to i32
  store i32 %v2_100076c0, i32* @r31, align 4
  %v2_100076c8 = ptrtoint i16* %stack_var_-2108 to i32
  store i32 %v2_100076c8, i32* %r19.global-to-local, align 4
  store i32 268465876, i32* @lr, align 4
  %v2_100076d0 = call i32 @function_1000a100(i8* %v1_100076a4)
  %v1_100076d4 = add i32 %v2_100076d0, 17
  store i32 %v1_100076d4, i32* %r23.global-to-local, align 4
  %v0_100076d8 = call i32 @function_1000723c()
  %v1_100076d8 = sext i32 %v0_100076d8 to i64
  store i32 16, i32* @r4, align 4
  %v5_100076ec = mul nuw nsw i64 %v1_100076d8, 2147516417
  store i32 %v2_10007698, i32* @r3, align 4
  %v2_100076f4 = ptrtoint i32* %stack_var_-2096 to i32
  store i32 %v2_100076f4, i32* %r20.global-to-local, align 4
  %v1_100076f82 = udiv i64 %v5_100076ec, 140737488355328
  %v1_100076f8 = trunc i64 %v1_100076f82 to i32
  store i32 %v1_100076f8, i32* %r0.global-to-local, align 4
  %v2_100076fc = add i32 %v1_100076f8, %v0_100076d8
  store i32 %v2_100076fc, i32* %r9.global-to-local, align 4
  %v1_10007700 = urem i32 %v2_100076fc, 65536
  store i32 %v1_10007700, i32* %r22.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007708.176 to i32), i32* @lr, align 4
  %v0_10007704 = call i32 @function_1000a1a8()
  store i32 2, i32* %stack_var_-4300, align 4
  store i32 1, i32* %r10.global-to-local, align 4
  store i32 134744072, i32* %r11.global-to-local, align 4
  %v0_1000771c = load i32, i32* %r29.global-to-local, align 4
  store i32 53, i32* %r9.global-to-local, align 4
  store i32 256, i32* %r0.global-to-local, align 4
  %v0_10007734 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10007734, i32* %stack_var_-4156, align 4
  %v3_1000773c = add i32 %v0_1000771c, 3
  %v4_1000773c = inttoptr i32 %v3_1000773c to i16*
  store i16 1, i16* %v4_1000773c, align 2
  %v0_10007740 = load i32, i32* %r10.global-to-local, align 4
  %v1_10007740 = trunc i32 %v0_10007740 to i16
  %v2_10007740 = load i32, i32* %r29.global-to-local, align 4
  %v3_10007740 = add i32 %v2_10007740, 1
  %v4_10007740 = inttoptr i32 %v3_10007740 to i16*
  store i16 %v1_10007740, i16* %v4_10007740, align 2
  %v2_100077e4 = ptrtoint i32* %stack_var_-4312 to i32
  %v2_10007818 = ptrtoint i32* %stack_var_-4308 to i32
  %v1_10007908 = bitcast i32* %stack_var_-2096 to i8*
  %v4_10007920 = zext i16 %tmp60 to i32
  %v3_10007924 = icmp eq i16 %tmp60, 0
  br label %dec_label_pc_10007744

dec_label_pc_10007744:                            ; preds = %dec_label_pc_10007884, %dec_label_pc_1000768c
  %v0_10007744 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10007744, label %dec_label_pc_10007750, label %dec_label_pc_10007748

dec_label_pc_10007748:                            ; preds = %dec_label_pc_10007744
  store i32 ptrtoint ([3 x i8]* @global_var_10007750.177 to i32), i32* @lr, align 4
  %v0_1000774c = call i32 @function_1000a98c()
  br label %dec_label_pc_10007750

dec_label_pc_10007750:                            ; preds = %dec_label_pc_10007744, %dec_label_pc_10007748
  store i32 268466016, i32* @lr, align 4
  %v3_1000775c = call i32 @function_1000b758(i32 2, i32 2, i32 0)
  store i32 %v3_1000775c, i32* @r3, align 4
  %v3_10007760 = icmp eq i32 %v3_1000775c, -1
  store i1 %v3_10007760, i1* %cr4_eq.global-to-local, align 1
  store i32 %v3_1000775c, i32* @r30, align 4
  br i1 %v3_10007760, label %dec_label_pc_1000788c, label %dec_label_pc_1000776c

dec_label_pc_1000776c:                            ; preds = %dec_label_pc_10007750
  store i32 268466040, i32* @lr, align 4
  %v0_10007774 = call i32 @function_1000b558()
  %v3_10007778 = icmp eq i32 %v0_10007774, -1
  br i1 %v3_10007778, label %dec_label_pc_1000788c, label %dec_label_pc_10007780

dec_label_pc_10007780:                            ; preds = %dec_label_pc_1000776c
  %v0_10007780 = load i32, i32* @r30, align 4
  %v0_10007788 = load i32, i32* %r23.global-to-local, align 4
  store i32 268466068, i32* @lr, align 4
  %v4_10007790 = call i32 @function_1000b6a4(i32 %v0_10007780, i32 %v2_100075dc, i32 %v0_10007788, i32 16384)
  %v3_10007794 = icmp eq i32 %v4_10007790, -1
  br i1 %v3_10007794, label %dec_label_pc_1000788c, label %dec_label_pc_1000779c

dec_label_pc_1000779c:                            ; preds = %dec_label_pc_10007780
  %v0_1000779c = load i32, i32* @r30, align 4
  store i32 %v0_1000779c, i32* @r4, align 4
  store i32 268466096, i32* @lr, align 4
  %v2_100077ac = call i32 @function_1000a85c(i32 3)
  %v0_100077b0 = load i32, i32* @r30, align 4
  store i32 %v0_100077b0, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_100077c4.178 to i32), i32* @lr, align 4
  %v2_100077c0 = call i32 @function_1000a85c(i32 4)
  store i32 32, i32* %r0.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_100077d4141 = load i32, i32* @r31, align 4
  %v4_100077d4143 = inttoptr i32 %v2_100077d4141 to i32*
  store i32 0, i32* %v4_100077d4143, align 4
  %v0_100077d8144 = load i32, i32* %r9.global-to-local, align 4
  %v1_100077d8145 = add i32 %v0_100077d8144, 4
  store i32 %v1_100077d8145, i32* %r9.global-to-local, align 4
  %v0_100077dc146 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100077dc147 = add i32 %v0_100077dc146, -1
  store i32 %v1_100077dc147, i32* %ctr.global-to-local, align 4
  %v2_100077dc148 = icmp eq i32 %v1_100077dc147, 0
  br i1 %v2_100077dc148, label %dec_label_pc_100077e0, label %dec_label_pc_100077d4.dec_label_pc_100077d4_crit_edge

dec_label_pc_100077d4.dec_label_pc_100077d4_crit_edge: ; preds = %dec_label_pc_1000779c, %dec_label_pc_100077d4.dec_label_pc_100077d4_crit_edge
  %v1_100077d8149 = phi i32 [ %v1_100077d8, %dec_label_pc_100077d4.dec_label_pc_100077d4_crit_edge ], [ %v1_100077d8145, %dec_label_pc_1000779c ]
  %v0_100077d4.pre = load i32, i32* %r11.global-to-local, align 4
  %v2_100077d4 = load i32, i32* @r31, align 4
  %v3_100077d4 = add i32 %v2_100077d4, %v1_100077d8149
  %v4_100077d4 = inttoptr i32 %v3_100077d4 to i32*
  store i32 %v0_100077d4.pre, i32* %v4_100077d4, align 4
  %v0_100077d8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100077d8 = add i32 %v0_100077d8, 4
  store i32 %v1_100077d8, i32* %r9.global-to-local, align 4
  %v0_100077dc = load i32, i32* %ctr.global-to-local, align 4
  %v1_100077dc = add i32 %v0_100077dc, -1
  store i32 %v1_100077dc, i32* %ctr.global-to-local, align 4
  %v2_100077dc = icmp eq i32 %v1_100077dc, 0
  br i1 %v2_100077dc, label %dec_label_pc_100077e0, label %dec_label_pc_100077d4.dec_label_pc_100077d4_crit_edge

dec_label_pc_100077e0:                            ; preds = %dec_label_pc_100077d4.dec_label_pc_100077d4_crit_edge, %dec_label_pc_1000779c
  %v0_100077e0 = load i32, i32* @r30, align 4
  %v1_100077e0 = call i32 @__asm_rlwinm(i32 %v0_100077e0, i32 29, i32 3, i32 29)
  store i32 %v1_100077e0, i32* %r9.global-to-local, align 4
  store i32 %v2_100077e4, i32* %r0.global-to-local, align 4
  %v2_100077e8 = add i32 %v1_100077e0, %v2_100077e4
  store i32 %v2_100077e8, i32* %r29.global-to-local, align 4
  %v0_100077ec = load i32, i32* @r30, align 4
  %v1_100077ec = urem i32 %v0_100077ec, 32
  store i32 %v1_100077ec, i32* %r28.global-to-local, align 4
  %v1_100077f0 = add i32 %v2_100077e8, 28
  %v2_100077f0 = inttoptr i32 %v1_100077f0 to i32*
  %v3_100077f0 = load i32, i32* %v2_100077f0, align 4
  %v3_100077f8 = shl i32 1, %v1_100077ec
  %v1_100077fc = add i32 %v0_100077ec, 1
  %v2_10007800 = or i32 %v3_100077f8, %v3_100077f0
  store i32 %v2_10007800, i32* %r9.global-to-local, align 4
  store i32 %v2_10007800, i32* %v2_100077f0, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  store i32 %v2_10007818, i32* %r7.global-to-local, align 4
  store i32 5, i32* %stack_var_-4308, align 4
  store i32 268466216, i32* @lr, align 4
  %v5_10007824 = call i32 @function_1000ac54(i32 %v1_100077fc, i32 %v2_100076c0, i32 0, i32 0, i32 %v2_10007818)
  %v3_10007828 = icmp eq i32 %v5_10007824, -1
  br i1 %v3_10007828, label %dec_label_pc_1000789c, label %dec_label_pc_10007830

dec_label_pc_10007830:                            ; preds = %dec_label_pc_100077e0
  %v3_10007830 = icmp eq i32 %v5_10007824, 0
  br i1 %v3_10007830, label %dec_label_pc_1000787c, label %dec_label_pc_10007838

dec_label_pc_10007838:                            ; preds = %dec_label_pc_10007830
  %v0_10007838 = load i32, i32* %r29.global-to-local, align 4
  %v1_10007838 = add i32 %v0_10007838, 28
  %v2_10007838 = inttoptr i32 %v1_10007838 to i32*
  %v3_10007838 = load i32, i32* %v2_10007838, align 4
  %v1_1000783c = load i32, i32* %r28.global-to-local, align 4
  %v2_1000783c = urem i32 %v1_1000783c, 32
  %v3_1000783c = sub i32 0, %v1_1000783c
  %v4_1000783c = urem i32 %v3_1000783c, 32
  %v5_1000783c = shl i32 %v3_10007838, %v4_1000783c
  %v6_1000783c = xor i32 %v4_1000783c, 31
  %v7_1000783c = lshr i32 %v3_10007838, %v6_1000783c
  %v8_1000783c = udiv i32 %v7_1000783c, 2
  %v9_1000783c = or i32 %v8_1000783c, %v5_1000783c
  %v10_1000783c = and i32 %v1_1000783c, 32
  %v11_1000783c = icmp ne i32 %v10_1000783c, 0
  %v12_1000783c = lshr i32 -1, %v2_1000783c
  %v13_1000783c = select i1 %v11_1000783c, i32 0, i32 %v12_1000783c
  %v14_1000783c = and i32 %v9_1000783c, %v13_1000783c
  %v15_1000783c = ashr i32 %v3_10007838, 31
  %v16_1000783c = sub i32 -1, %v13_1000783c
  %v17_1000783c = and i32 %v15_1000783c, %v16_1000783c
  %v18_1000783c = or i32 %v14_1000783c, %v17_1000783c
  store i32 %v18_1000783c, i32* %r0.global-to-local, align 4
  %v1_10007840 = urem i32 %v18_1000783c, 2
  store i32 %v1_10007840, i32* %r9.global-to-local, align 4
  %v3_10007840 = icmp eq i32 %v1_10007840, 0
  br i1 %v3_10007840, label %dec_label_pc_1000789c, label %dec_label_pc_10007848

dec_label_pc_10007848:                            ; preds = %dec_label_pc_10007838
  store i32 0, i32* %r7.global-to-local, align 4
  %v0_1000785c = load i32, i32* @r30, align 4
  store i32 268466276, i32* @lr, align 4
  %v6_10007860 = call i32 @function_1000b664(i32 %v0_1000785c, i32 %v2_100076c8, i32 2048, i32 16384, i32 0, i32 0)
  store i32 %v6_10007860, i32* %r29.global-to-local, align 4
  %v0_10007868 = load i32, i32* %r26.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007870.179 to i32), i32* @lr, align 4
  %v1_1000786c = inttoptr i32 %v0_10007868 to i8*
  %v2_1000786c = call i32 @function_1000a100(i8* %v1_1000786c)
  %v1_10007870 = add i32 %v2_1000786c, 17
  %v2_10007874 = icmp ult i32 %v6_10007860, %v1_10007870
  br i1 %v2_10007874, label %dec_label_pc_1000787c, label %dec_label_pc_10007900

dec_label_pc_1000787c:                            ; preds = %dec_label_pc_10007900, %dec_label_pc_10007848, %dec_label_pc_10007920, %dec_label_pc_10007830
  %v0_1000787c = load i32, i32* %r27.global-to-local, align 4
  %v3_1000787c = icmp eq i32 %v0_1000787c, 5
  br i1 %v3_1000787c, label %dec_label_pc_1000789c, label %dec_label_pc_10007884

dec_label_pc_10007884:                            ; preds = %dec_label_pc_1000788c, %dec_label_pc_1000787c
  %v0_10007884 = phi i32 [ %v0_10007894, %dec_label_pc_1000788c ], [ %v0_1000787c, %dec_label_pc_1000787c ]
  %v1_10007884 = add i32 %v0_10007884, 1
  store i32 %v1_10007884, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10007744

dec_label_pc_1000788c:                            ; preds = %dec_label_pc_10007780, %dec_label_pc_1000776c, %dec_label_pc_10007750
  store i32 268466324, i32* @lr, align 4
  %v1_10007890 = call i32 @function_1000c280(i32 1)
  %v0_10007894 = load i32, i32* %r27.global-to-local, align 4
  %v3_10007894 = icmp eq i32 %v0_10007894, 5
  br i1 %v3_10007894, label %dec_label_pc_1000789c, label %dec_label_pc_10007884

dec_label_pc_1000789c:                            ; preds = %dec_label_pc_1000788c, %dec_label_pc_1000787c, %dec_label_pc_10007838, %dec_label_pc_100077e0, %dec_label_pc_1000792c.backedge, %dec_label_pc_1000792c.preheader
  store i32 268466340, i32* @lr, align 4
  %v0_100078a0 = call i32 @function_1000a98c()
  %v0_100078a4 = load i32, i32* %r25.global-to-local, align 4
  %v1_100078a4 = inttoptr i32 %v0_100078a4 to i8*
  %v2_100078a4 = load i8, i8* %v1_100078a4, align 1
  %v3_100078a4 = zext i8 %v2_100078a4 to i32
  store i32 %v3_100078a4, i32* %r0.global-to-local, align 4
  %v3_100078a8 = icmp eq i8 %v2_100078a4, 0
  br i1 %v3_100078a8, label %dec_label_pc_10007a18, label %dec_label_pc_100078b0

dec_label_pc_100078b0:                            ; preds = %dec_label_pc_1000789c, %dec_label_pc_10007a28
  %v0_100078b4 = phi i32 [ %v0_100078a4, %dec_label_pc_1000789c ], [ 0, %dec_label_pc_10007a28 ]
  store i32 %v0_100075e8, i32* %r0.global-to-local, align 4
  %v1_100078c8 = call %0 @__asm_mtcrf(i32 8, i32 %v0_100075c0)
  store i32 %v0_10007608, i32* %r28.global-to-local, align 4
  store i32 %v0_100075c8, i32* %r29.global-to-local, align 4
  ret i32 %v0_100078b4

dec_label_pc_10007900:                            ; preds = %dec_label_pc_10007848
  store i32 %v2_100076f4, i32* %r26.global-to-local, align 4
  store i32 268466444, i32* @lr, align 4
  %v2_10007908 = call i32 @function_1000a100(i8* %v1_10007908)
  %v3_1000790c = load i16, i16* %stack_var_-2108, align 2
  %v4_1000790c = sext i16 %v3_1000790c to i32
  store i32 %v4_1000790c, i32* %r0.global-to-local, align 4
  %v0_10007910 = load i32, i32* %r20.global-to-local, align 4
  %v1_10007914 = load i32, i32* %r22.global-to-local, align 4
  %v4_10007914 = icmp eq i32 %v4_1000790c, %v1_10007914
  %v2_10007910 = add i32 %v2_10007908, 5
  %v1_10007918 = add i32 %v2_10007910, %v0_10007910
  br i1 %v4_10007914, label %dec_label_pc_10007920, label %dec_label_pc_1000787c

dec_label_pc_10007920:                            ; preds = %dec_label_pc_10007900
  store i32 %v4_10007920, i32* %r28.global-to-local, align 4
  br i1 %v3_10007924, label %dec_label_pc_1000787c, label %dec_label_pc_1000792c.preheader

dec_label_pc_1000792c.preheader:                  ; preds = %dec_label_pc_10007920
  %v1_1000792c8 = add nsw i32 %v4_10007920, -1
  store i32 %v1_1000792c8, i32* %r0.global-to-local, align 4
  %v1_100079349 = urem i32 %v1_1000792c8, 65536
  store i32 %v1_100079349, i32* %r28.global-to-local, align 4
  store i32 65535, i32* %r9.global-to-local, align 4
  %v4_1000793c11 = icmp eq i32 %v1_100079349, 65535
  br i1 %v4_1000793c11, label %dec_label_pc_1000789c, label %dec_label_pc_10007944

dec_label_pc_10007944:                            ; preds = %dec_label_pc_1000792c.preheader, %dec_label_pc_1000792c.backedge
  %v0_1000792c49 = phi i32 [ %v1_10007934, %dec_label_pc_1000792c.backedge ], [ %v1_100079349, %dec_label_pc_1000792c.preheader ]
  %v0_100079a0 = phi i32 [ %storemerge, %dec_label_pc_1000792c.backedge ], [ %v1_10007918, %dec_label_pc_1000792c.preheader ]
  store i32 %v0_100079a0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 1, i32* %r10.global-to-local, align 4
  %v1_10007950110 = inttoptr i32 %v0_100079a0 to i8*
  %v2_10007950111 = load i8, i8* %v1_10007950110, align 1
  %v3_10007950112 = zext i8 %v2_10007950111 to i32
  store i32 %v3_10007950112, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  %v3_10007958114 = icmp eq i8 %v2_10007950111, 0
  br i1 %v3_10007958114, label %dec_label_pc_1000799c, label %dec_label_pc_10007968.preheader

dec_label_pc_10007968.preheader:                  ; preds = %dec_label_pc_10007944, %dec_label_pc_10007a38
  %v2_10007950120 = phi i8 [ %v2_10007950, %dec_label_pc_10007a38 ], [ %v2_10007950111, %dec_label_pc_10007944 ]
  %v3_10007960123.in = phi i8 [ %v2_10007950, %dec_label_pc_10007a38 ], [ %v2_10007950111, %dec_label_pc_10007944 ]
  %v1_1000795c122.in = phi i32 [ %v3_10007950, %dec_label_pc_10007a38 ], [ %v3_10007950112, %dec_label_pc_10007944 ]
  %v1_10007954121 = phi i32 [ %v1_10007954, %dec_label_pc_10007a38 ], [ 1, %dec_label_pc_10007944 ]
  %v0_10007950119 = phi i32 [ %v1_10007a3c, %dec_label_pc_10007a38 ], [ %v0_100079a0, %dec_label_pc_10007944 ]
  %v0_10007954118 = phi i32 [ %v0_1000795428, %dec_label_pc_10007a38 ], [ 0, %dec_label_pc_10007944 ]
  %v0_1000799c117 = phi i32 [ %v2_10007a38, %dec_label_pc_10007a38 ], [ 1, %dec_label_pc_10007944 ]
  br label %dec_label_pc_10007968

dec_label_pc_10007968:                            ; preds = %dec_label_pc_10007968.preheader, %dec_label_pc_1000796c
  %v1_10007a38 = phi i32 [ 0, %dec_label_pc_1000796c ], [ %v1_10007954121, %dec_label_pc_10007968.preheader ]
  %v0_10007978.in = phi i32 [ %v3_10007988, %dec_label_pc_1000796c ], [ %v1_1000795c122.in, %dec_label_pc_10007968.preheader ]
  %v0_10007a3c = phi i32 [ %v2_10007984, %dec_label_pc_1000796c ], [ %v0_10007950119, %dec_label_pc_10007968.preheader ]
  %v0_10007968.in = phi i8 [ %v2_10007988, %dec_label_pc_1000796c ], [ %v3_10007960123.in, %dec_label_pc_10007968.preheader ]
  %v1_10007968.in = phi i8 [ %v2_10007988, %dec_label_pc_1000796c ], [ %v2_10007950120, %dec_label_pc_10007968.preheader ]
  %v0_1000795428 = phi i32 [ 1, %dec_label_pc_1000796c ], [ %v0_10007954118, %dec_label_pc_10007968.preheader ]
  %v0_10007968 = icmp eq i8 %v0_10007968.in, -65
  %v1_10007968 = icmp ult i8 %v1_10007968.in, -65
  %v2_10007968 = or i1 %v0_10007968, %v1_10007968
  br i1 %v2_10007968, label %dec_label_pc_10007a38, label %dec_label_pc_1000796c

dec_label_pc_1000796c:                            ; preds = %dec_label_pc_10007968
  %v0_10007978 = mul nuw nsw i32 %v0_10007978.in, 256
  %v1_1000796c = add i32 %v0_10007a3c, 1
  %v2_1000796c = inttoptr i32 %v1_1000796c to i8*
  %v3_1000796c = load i8, i8* %v2_1000796c, align 1
  %v4_1000796c = zext i8 %v3_1000796c to i32
  store i32 1, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_10007978 = or i32 %v4_1000796c, -49152
  %v1_10007980 = add nsw i32 %v2_10007978, %v0_10007978
  %v0_10007984 = load i32, i32* %r19.global-to-local, align 4
  %v2_10007984 = add i32 %v1_10007980, %v0_10007984
  store i32 %v2_10007984, i32* %r9.global-to-local, align 4
  %v1_10007988 = inttoptr i32 %v2_10007984 to i8*
  %v2_10007988 = load i8, i8* %v1_10007988, align 1
  %v3_10007988 = zext i8 %v2_10007988 to i32
  store i32 %v3_10007988, i32* %r0.global-to-local, align 4
  %v3_1000798c = icmp eq i8 %v2_10007988, 0
  br i1 %v3_1000798c, label %dec_label_pc_1000799c, label %dec_label_pc_10007968

dec_label_pc_1000799c:                            ; preds = %dec_label_pc_10007944, %dec_label_pc_10007a38, %dec_label_pc_1000796c
  %v0_1000799c103 = phi i32 [ %v0_1000799c117, %dec_label_pc_1000796c ], [ 1, %dec_label_pc_10007944 ], [ %v2_10007a38, %dec_label_pc_10007a38 ]
  %v1_1000799c = phi i32 [ 1, %dec_label_pc_1000796c ], [ 0, %dec_label_pc_10007944 ], [ %v0_1000795428, %dec_label_pc_10007a38 ]
  %v2_1000799c = add i32 %v1_1000799c, %v0_1000799c103
  store i32 %v2_1000799c, i32* %r10.global-to-local, align 4
  %v2_100079a0 = add i32 %v2_1000799c, %v0_100079a0
  %v3_100079a0 = inttoptr i32 %v2_100079a0 to i16*
  %v4_100079a0 = load i16, i16* %v3_100079a0, align 2
  %v5_100079a0 = zext i16 %v4_100079a0 to i32
  store i32 %v5_100079a0, i32* %r0.global-to-local, align 4
  %v1_100079a8 = add i32 %v2_100079a0, 10
  store i32 %v1_100079a8, i32* @r29, align 4
  %v3_100079ac = icmp eq i16 %v4_100079a0, 1
  br i1 %v3_100079ac, label %dec_label_pc_10007a50, label %dec_label_pc_100079b4

dec_label_pc_100079b4:                            ; preds = %dec_label_pc_10007a50, %dec_label_pc_1000799c
  store i32 %v1_100079a8, i32* %r9.global-to-local, align 4
  %v1_100079c0125 = inttoptr i32 %v1_100079a8 to i8*
  %v2_100079c0126 = load i8, i8* %v1_100079c0125, align 1
  %v3_100079c0127 = zext i8 %v2_100079c0126 to i32
  store i32 %v3_100079c0127, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  %v3_100079c8129 = icmp eq i8 %v2_100079c0126, 0
  %v1_100079cc130 = mul nuw nsw i32 %v3_100079c0127, 256
  store i32 %v1_100079cc130, i32* %r10.global-to-local, align 4
  br i1 %v3_100079c8129, label %dec_label_pc_10007a0c, label %dec_label_pc_100079d8.preheader

dec_label_pc_100079d8.preheader:                  ; preds = %dec_label_pc_100079b4, %dec_label_pc_10007a44
  %v2_100079c0135 = phi i8 [ %v2_100079c0, %dec_label_pc_10007a44 ], [ %v2_100079c0126, %dec_label_pc_100079b4 ]
  %v3_100079d0138.in = phi i8 [ %v2_100079c0, %dec_label_pc_10007a44 ], [ %v2_100079c0126, %dec_label_pc_100079b4 ]
  %v1_100079cc137 = phi i32 [ %v1_100079cc, %dec_label_pc_10007a44 ], [ %v1_100079cc130, %dec_label_pc_100079b4 ]
  %v1_100079c4136 = phi i32 [ %v1_100079c4, %dec_label_pc_10007a44 ], [ 1, %dec_label_pc_100079b4 ]
  %v0_100079c0134 = phi i32 [ %v1_10007a48, %dec_label_pc_10007a44 ], [ %v1_100079a8, %dec_label_pc_100079b4 ]
  %v0_100079c4133 = phi i32 [ %v0_100079c438, %dec_label_pc_10007a44 ], [ 0, %dec_label_pc_100079b4 ]
  %v0_10007a0c132 = phi i32 [ %v2_10007a44, %dec_label_pc_10007a44 ], [ 1, %dec_label_pc_100079b4 ]
  br label %dec_label_pc_100079d8

dec_label_pc_100079d8:                            ; preds = %dec_label_pc_100079d8.preheader, %dec_label_pc_100079dc
  %v1_10007a44 = phi i32 [ 0, %dec_label_pc_100079dc ], [ %v1_100079c4136, %dec_label_pc_100079d8.preheader ]
  %v0_100079e8 = phi i32 [ %v1_10007a00, %dec_label_pc_100079dc ], [ %v1_100079cc137, %dec_label_pc_100079d8.preheader ]
  %v0_10007a48 = phi i32 [ %v2_100079f4, %dec_label_pc_100079dc ], [ %v0_100079c0134, %dec_label_pc_100079d8.preheader ]
  %v0_100079d8.in = phi i8 [ %v2_100079f8, %dec_label_pc_100079dc ], [ %v3_100079d0138.in, %dec_label_pc_100079d8.preheader ]
  %v1_100079d8.in = phi i8 [ %v2_100079f8, %dec_label_pc_100079dc ], [ %v2_100079c0135, %dec_label_pc_100079d8.preheader ]
  %v0_100079c438 = phi i32 [ 1, %dec_label_pc_100079dc ], [ %v0_100079c4133, %dec_label_pc_100079d8.preheader ]
  %v0_100079d8 = icmp eq i8 %v0_100079d8.in, -65
  %v1_100079d8 = icmp ult i8 %v1_100079d8.in, -65
  %v2_100079d8 = or i1 %v0_100079d8, %v1_100079d8
  br i1 %v2_100079d8, label %dec_label_pc_10007a44, label %dec_label_pc_100079dc

dec_label_pc_100079dc:                            ; preds = %dec_label_pc_100079d8
  %v1_100079dc = add i32 %v0_10007a48, 1
  %v2_100079dc = inttoptr i32 %v1_100079dc to i8*
  %v3_100079dc = load i8, i8* %v2_100079dc, align 1
  %v4_100079dc = zext i8 %v3_100079dc to i32
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_100079e8 = or i32 %v4_100079dc, -49152
  %v1_100079f0 = add nsw i32 %v2_100079e8, %v0_100079e8
  %v0_100079f4 = load i32, i32* %r19.global-to-local, align 4
  %v2_100079f4 = add i32 %v1_100079f0, %v0_100079f4
  store i32 %v2_100079f4, i32* %r9.global-to-local, align 4
  %v1_100079f8 = inttoptr i32 %v2_100079f4 to i8*
  %v2_100079f8 = load i8, i8* %v1_100079f8, align 1
  %v3_100079f8 = zext i8 %v2_100079f8 to i32
  store i32 %v3_100079f8, i32* %r0.global-to-local, align 4
  %v3_100079fc = icmp eq i8 %v2_100079f8, 0
  %v1_10007a00 = mul nuw nsw i32 %v3_100079f8, 256
  store i32 %v1_10007a00, i32* %r10.global-to-local, align 4
  br i1 %v3_100079fc, label %dec_label_pc_10007a0c, label %dec_label_pc_100079d8

dec_label_pc_10007a0c:                            ; preds = %dec_label_pc_100079b4, %dec_label_pc_10007a44, %dec_label_pc_100079dc
  %v0_10007a0c109 = phi i32 [ %v0_10007a0c132, %dec_label_pc_100079dc ], [ 1, %dec_label_pc_100079b4 ], [ %v2_10007a44, %dec_label_pc_10007a44 ]
  %v1_10007a0c = phi i32 [ 1, %dec_label_pc_100079dc ], [ 0, %dec_label_pc_100079b4 ], [ %v0_100079c438, %dec_label_pc_10007a44 ]
  %v2_10007a0c = add i32 %v1_10007a0c, %v0_10007a0c109
  %v2_10007a10 = add i32 %v2_10007a0c, %v1_100079a8
  br label %dec_label_pc_1000792c.backedge

dec_label_pc_1000792c.backedge:                   ; preds = %dec_label_pc_10007a0c, %dec_label_pc_10007abc
  %v0_1000792c = phi i32 [ %v0_1000792c49, %dec_label_pc_10007a0c ], [ %v0_1000792c.pre, %dec_label_pc_10007abc ]
  %storemerge = phi i32 [ %v2_10007a10, %dec_label_pc_10007a0c ], [ %v2_10007ac0, %dec_label_pc_10007abc ]
  %v1_1000792c = add i32 %v0_1000792c, -1
  store i32 %v1_1000792c, i32* %r0.global-to-local, align 4
  %v1_10007934 = urem i32 %v1_1000792c, 65536
  store i32 %v1_10007934, i32* %r28.global-to-local, align 4
  store i32 65535, i32* %r9.global-to-local, align 4
  %v4_1000793c = icmp eq i32 %v1_10007934, 65535
  br i1 %v4_1000793c, label %dec_label_pc_1000789c, label %dec_label_pc_10007944

dec_label_pc_10007a18:                            ; preds = %dec_label_pc_1000789c
  %v1_10007a18 = add i32 %v0_100078a4, 4
  %v2_10007a18 = inttoptr i32 %v1_10007a18 to i32*
  %v3_10007a18 = load i32, i32* %v2_10007a18, align 4
  store i32 %v3_10007a18, i32* @r3, align 4
  %v3_10007a1c = icmp eq i32 %v3_10007a18, 0
  br i1 %v3_10007a1c, label %dec_label_pc_10007a28, label %dec_label_pc_10007a24

dec_label_pc_10007a24:                            ; preds = %dec_label_pc_10007a18
  store i32 268466728, i32* @lr, align 4
  %v0_10007a24 = call i32 @function_1000bb54()
  %v0_10007a28.pre = load i32, i32* %r25.global-to-local, align 4
  br label %dec_label_pc_10007a28

dec_label_pc_10007a28:                            ; preds = %dec_label_pc_10007a18, %dec_label_pc_10007a24
  %v0_10007a28 = phi i32 [ %v0_100078a4, %dec_label_pc_10007a18 ], [ %v0_10007a28.pre, %dec_label_pc_10007a24 ]
  store i32 %v0_10007a28, i32* @r3, align 4
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 268466740, i32* @lr, align 4
  %v0_10007a30 = call i32 @function_1000bb54()
  br label %dec_label_pc_100078b0

dec_label_pc_10007a38:                            ; preds = %dec_label_pc_10007968
  %v2_10007a38 = add i32 %v1_10007a38, %v0_1000799c117
  store i32 %v2_10007a38, i32* %r10.global-to-local, align 4
  %v1_10007a3c = add i32 %v0_10007a3c, 1
  store i32 %v1_10007a3c, i32* %r9.global-to-local, align 4
  %v1_10007950 = inttoptr i32 %v1_10007a3c to i8*
  %v2_10007950 = load i8, i8* %v1_10007950, align 1
  %v3_10007950 = zext i8 %v2_10007950 to i32
  store i32 %v3_10007950, i32* %r0.global-to-local, align 4
  %v1_10007954 = xor i32 %v0_1000795428, 1
  store i32 %v1_10007954, i32* %r11.global-to-local, align 4
  %v3_10007958 = icmp eq i8 %v2_10007950, 0
  br i1 %v3_10007958, label %dec_label_pc_1000799c, label %dec_label_pc_10007968.preheader

dec_label_pc_10007a44:                            ; preds = %dec_label_pc_100079d8
  %v2_10007a44 = add i32 %v1_10007a44, %v0_10007a0c132
  %v1_10007a48 = add i32 %v0_10007a48, 1
  store i32 %v1_10007a48, i32* %r9.global-to-local, align 4
  %v1_100079c0 = inttoptr i32 %v1_10007a48 to i8*
  %v2_100079c0 = load i8, i8* %v1_100079c0, align 1
  %v3_100079c0 = zext i8 %v2_100079c0 to i32
  store i32 %v3_100079c0, i32* %r0.global-to-local, align 4
  %v1_100079c4 = xor i32 %v0_100079c438, 1
  store i32 %v1_100079c4, i32* %r11.global-to-local, align 4
  %v3_100079c8 = icmp eq i8 %v2_100079c0, 0
  %v1_100079cc = mul nuw nsw i32 %v3_100079c0, 256
  store i32 %v1_100079cc, i32* %r10.global-to-local, align 4
  br i1 %v3_100079c8, label %dec_label_pc_10007a0c, label %dec_label_pc_100079d8.preheader

dec_label_pc_10007a50:                            ; preds = %dec_label_pc_1000799c
  %v1_10007a50 = add i32 %v2_100079a0, 2
  %v2_10007a50 = inttoptr i32 %v1_10007a50 to i16*
  %v3_10007a50 = load i16, i16* %v2_10007a50, align 2
  %v4_10007a50 = zext i16 %v3_10007a50 to i32
  store i32 %v4_10007a50, i32* %r0.global-to-local, align 4
  %v3_10007a54 = icmp eq i16 %v3_10007a50, 1
  br i1 %v3_10007a54, label %dec_label_pc_10007a5c, label %dec_label_pc_100079b4

dec_label_pc_10007a5c:                            ; preds = %dec_label_pc_10007a50
  %v1_10007a5c = add i32 %v2_100079a0, 8
  %v2_10007a5c = inttoptr i32 %v1_10007a5c to i16*
  %v3_10007a5c = load i16, i16* %v2_10007a5c, align 2
  %v4_10007a5c = zext i16 %v3_10007a5c to i32
  store i32 %v4_10007a5c, i32* %r0.global-to-local, align 4
  %v3_10007a60 = icmp eq i16 %v3_10007a5c, 4
  br i1 %v3_10007a60, label %dec_label_pc_10007a68, label %dec_label_pc_10007abc

dec_label_pc_10007a68:                            ; preds = %dec_label_pc_10007a5c
  %v2_10007a68 = inttoptr i32 %v1_100079a8 to i8*
  %v3_10007a68 = load i8, i8* %v2_10007a68, align 1
  %v4_10007a68 = zext i8 %v3_10007a68 to i32
  store i32 %v4_10007a68, i32* %r0.global-to-local, align 4
  store i32 %v4_10007a68, i32* %stack_var_-4312, align 4
  %v1_10007a70 = add i32 %v2_100079a0, 11
  %v2_10007a70 = inttoptr i32 %v1_10007a70 to i8*
  %v3_10007a70 = load i8, i8* %v2_10007a70, align 1
  %v4_10007a70 = zext i8 %v3_10007a70 to i32
  store i32 %v4_10007a70, i32* %r9.global-to-local, align 4
  %v1_10007a78 = add i32 %v2_100079a0, 12
  %v2_10007a78 = inttoptr i32 %v1_10007a78 to i8*
  %v3_10007a78 = load i8, i8* %v2_10007a78, align 1
  %v4_10007a78 = zext i8 %v3_10007a78 to i32
  store i32 %v4_10007a78, i32* %r0.global-to-local, align 4
  %v1_10007a80 = add i32 %v2_100079a0, 13
  %v2_10007a80 = inttoptr i32 %v1_10007a80 to i8*
  %v3_10007a80 = load i8, i8* %v2_10007a80, align 1
  %v4_10007a80 = zext i8 %v3_10007a80 to i32
  store i32 %v4_10007a80, i32* %r9.global-to-local, align 4
  %v0_10007a88 = load i32, i32* %r25.global-to-local, align 4
  %v1_10007a88 = inttoptr i32 %v0_10007a88 to i8*
  %v2_10007a88 = load i8, i8* %v1_10007a88, align 1
  %v3_10007a88 = zext i8 %v2_10007a88 to i32
  %v1_10007a8c = add i32 %v0_10007a88, 4
  %v2_10007a8c = inttoptr i32 %v1_10007a8c to i32*
  %v3_10007a8c = load i32, i32* %v2_10007a8c, align 4
  %v1_10007a90 = mul nuw nsw i32 %v3_10007a88, 4
  %v1_10007a94 = add nuw nsw i32 %v1_10007a90, 4
  store i32 268466844, i32* @lr, align 4
  %v3_10007a98 = sext i8 %v3_10007a80 to i32
  %v4_10007a98 = call i32 @function_1000bc54(i32 %v3_10007a8c, i32 %v1_10007a94, i32 %v3_10007a98)
  %v0_10007a9c = load i32, i32* %r25.global-to-local, align 4
  %v1_10007a9c = inttoptr i32 %v0_10007a9c to i8*
  %v2_10007a9c = load i8, i8* %v1_10007a9c, align 1
  %v3_10007a9c = zext i8 %v2_10007a9c to i32
  %v3_10007aa0 = load i32, i32* %stack_var_-4312, align 4
  store i32 %v3_10007aa0, i32* %r0.global-to-local, align 4
  %v1_10007aa4 = add nuw nsw i32 %v3_10007a9c, 1
  store i32 %v1_10007aa4, i32* %r11.global-to-local, align 4
  %v1_10007aa8 = mul nuw nsw i32 %v3_10007a9c, 4
  store i32 %v1_10007aa8, i32* %r9.global-to-local, align 4
  %v3_10007aac = add i32 %v1_10007aa8, %v4_10007a98
  %v4_10007aac = inttoptr i32 %v3_10007aac to i32*
  store i32 %v3_10007aa0, i32* %v4_10007aac, align 4
  %v0_10007ab0 = load i32, i32* %r11.global-to-local, align 4
  %v1_10007ab0 = trunc i32 %v0_10007ab0 to i8
  %v2_10007ab0 = load i32, i32* %r25.global-to-local, align 4
  %v3_10007ab0 = inttoptr i32 %v2_10007ab0 to i8*
  store i8 %v1_10007ab0, i8* %v3_10007ab0, align 1
  %v1_10007ab4 = load i32, i32* %r25.global-to-local, align 4
  %v2_10007ab4 = add i32 %v1_10007ab4, 4
  %v3_10007ab4 = inttoptr i32 %v2_10007ab4 to i32*
  store i32 %v4_10007a98, i32* %v3_10007ab4, align 4
  %v0_10007ab8 = load i32, i32* @r31, align 4
  %v1_10007ab8 = add i32 %v0_10007ab8, 8
  %v2_10007ab8 = inttoptr i32 %v1_10007ab8 to i16*
  %v3_10007ab8 = load i16, i16* %v2_10007ab8, align 2
  %v4_10007ab8 = zext i16 %v3_10007ab8 to i32
  store i32 %v4_10007ab8, i32* %r0.global-to-local, align 4
  %v0_10007ac0.pre = load i32, i32* @r29, align 4
  %v0_1000792c.pre.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10007abc

dec_label_pc_10007abc:                            ; preds = %dec_label_pc_10007a5c, %dec_label_pc_10007a68
  %v0_1000792c.pre = phi i32 [ %v0_1000792c49, %dec_label_pc_10007a5c ], [ %v0_1000792c.pre.pre, %dec_label_pc_10007a68 ]
  %v0_10007ac0 = phi i32 [ %v1_100079a8, %dec_label_pc_10007a5c ], [ %v0_10007ac0.pre, %dec_label_pc_10007a68 ]
  %v0_10007abc = phi i32 [ %v4_10007a5c, %dec_label_pc_10007a5c ], [ %v4_10007ab8, %dec_label_pc_10007a68 ]
  store i32 %v0_10007abc, i32* %r0.global-to-local, align 4
  %v2_10007ac0 = add i32 %v0_10007abc, %v0_10007ac0
  br label %dec_label_pc_1000792c.backedge

dec_label_pc_1000765c.preheader.thread:           ; preds = %dec_label_pc_100075b8
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_1000765c1355 = or i32 %v2_10007624, 1
  store i32 %v1_1000765c1355, i32* %r11.global-to-local, align 4
  store i32 0, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000768c

; uselistorder directives
  uselistorder i32 %v1_10007aa8, { 1, 0 }
  uselistorder i32 %v4_10007a98, { 1, 0 }
  uselistorder i32 %v1_100079c4, { 1, 0 }
  uselistorder i8 %v2_100079c0, { 2, 3, 1, 0 }
  uselistorder i32 %v1_10007a48, { 1, 2, 0 }
  uselistorder i32 %v2_10007a44, { 1, 0 }
  uselistorder i32 %v1_10007954, { 1, 0 }
  uselistorder i32 %v3_10007950, { 1, 0 }
  uselistorder i8 %v2_10007950, { 2, 3, 1, 0 }
  uselistorder i32 %v1_10007a3c, { 1, 2, 0 }
  uselistorder i32 %v2_10007a38, { 2, 1, 0 }
  uselistorder i32 %v1_10007934, { 1, 0, 2 }
  uselistorder i8 %v2_100079f8, { 2, 3, 0, 1 }
  uselistorder i32 %v2_100079f4, { 1, 2, 0 }
  uselistorder i32 %v0_100079c438, { 2, 0, 1 }
  uselistorder i32 %v0_10007a0c132, { 1, 0 }
  uselistorder i32 %v1_100079cc130, { 1, 0 }
  uselistorder i32 %v1_100079a8, { 3, 4, 2, 0, 1, 5, 6 }
  uselistorder i32 %v3_10007988, { 1, 0 }
  uselistorder i8 %v2_10007988, { 2, 3, 0, 1 }
  uselistorder i32 %v2_10007984, { 1, 2, 0 }
  uselistorder i32 %v0_1000795428, { 2, 0, 1 }
  uselistorder i32 %v0_1000799c117, { 1, 0 }
  uselistorder i32 %v0_100079a0, { 2, 0, 1, 3 }
  uselistorder i32 %v1_100079349, { 2, 1, 0 }
  uselistorder i32 %v0_100078a4, { 1, 2, 0, 3 }
  uselistorder i32 %v0_10007894, { 1, 0 }
  uselistorder i32 %v1_10007840, { 1, 0 }
  uselistorder i32 %v4_1000783c, { 1, 0 }
  uselistorder i32 %v1_1000783c, { 1, 2, 0 }
  uselistorder i32 %v3_10007838, { 2, 1, 0 }
  uselistorder i32 %v1_100077ec, { 1, 0 }
  uselistorder i32 %v0_100077ec, { 1, 0 }
  uselistorder i32 %v1_100077dc, { 1, 0 }
  uselistorder i32 %v1_100077d8, { 1, 0 }
  uselistorder i8 %v2_10007664, { 1, 2, 3, 0 }
  uselistorder i32 %v1_10007660, { 1, 0 }
  uselistorder i32 %v0_10007658, { 0, 3, 2, 1 }
  uselistorder i32 %v1_10007628, { 0, 2, 1 }
  uselistorder i32 %v2_10007624, { 2, 0, 1, 4, 3, 5 }
  uselistorder i32 %v0_100075c0, { 1, 0 }
  uselistorder i16* %stack_var_-2108, { 1, 0 }
  uselistorder i16 %tmp60, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 5, 9, 6, 7, 8, 10, 0, 11, 12, 16, 13, 21, 22, 14, 15, 17, 18, 20, 19 }
  uselistorder i32* %r28.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r27.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r25.global-to-local, { 1, 2, 4, 3, 0, 6, 5, 7 }
  uselistorder i32* %r11.global-to-local, { 15, 0, 1, 3, 5, 2, 12, 4, 11, 6, 7, 8, 13, 10, 9, 14 }
  uselistorder i32* %r10.global-to-local, { 2, 0, 1, 11, 3, 4, 5, 6, 8, 7, 9, 10 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 12, 13, 8, 29, 10, 11, 28, 30, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder i32* %ctr.global-to-local, { 9, 0, 5, 6, 1, 2, 3, 7, 8, 4 }
  uselistorder i8 -65, { 2, 0, 3, 1 }
  uselistorder i32 65535, { 48, 49, 18, 19, 50, 51, 9, 8, 7, 52, 53, 21, 22, 23, 10, 11, 54, 24, 55, 25, 56, 0, 12, 57, 58, 26, 27, 28, 59, 60, 61, 62, 63, 64, 29, 30, 1, 13, 65, 66, 31, 32, 33, 34, 2, 14, 67, 68, 35, 36, 37, 38, 39, 69, 15, 40, 41, 3, 16, 70, 71, 5, 42, 43, 44, 4, 17, 72, 73, 6, 45, 46, 47, 20, 74 }
  uselistorder i32 (i32)* @function_1000c280, { 7, 10, 9, 8, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 2048, { 3, 0, 1, 2, 5, 4, 6 }
  uselistorder i16 1, { 2, 3, 0, 1, 4 }
  uselistorder i32 53, { 1, 0 }
  uselistorder label %dec_label_pc_10007abc, { 1, 0 }
  uselistorder label %dec_label_pc_10007a28, { 1, 0 }
  uselistorder label %dec_label_pc_1000792c.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_10007a0c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_100079d8, { 1, 0 }
  uselistorder label %dec_label_pc_100079d8.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1000799c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10007968, { 1, 0 }
  uselistorder label %dec_label_pc_10007968.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10007944, { 1, 0 }
  uselistorder label %dec_label_pc_100078b0, { 1, 0 }
  uselistorder label %dec_label_pc_1000789c, { 4, 5, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_1000787c, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_100077d4.dec_label_pc_100077d4_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10007750, { 1, 0 }
  uselistorder label %dec_label_pc_1000768c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10007664, { 1, 0 }
}

define i32 @function_10007ad4(i32 %arg1) local_unnamed_addr {
dec_label_pc_10007ad4:
  %v3_10007ae8 = load i32, i32* @global_var_1001e1b4.180, align 4
  store i32 268466928, i32* @lr, align 4
  %v2_10007aec = call i32 @function_1000aaac(i32 %v3_10007ae8, i32 9)
  ret i32 %v2_10007aec
}

define i32 @function_10007b00() local_unnamed_addr {
dec_label_pc_10007b00:
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10007b08 = load i32, i32* @r31, align 4
  %v0_10007b0c = load i32, i32* @r3, align 4
  store i32 %v0_10007b0c, i32* @r31, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  %v1_10007b1c = add i32 %v0_10007b0c, 4
  %v2_10007b1c = inttoptr i32 %v1_10007b1c to i32*
  %v3_10007b1c = load i32, i32* %v2_10007b1c, align 4
  %v3_10007b24 = icmp eq i32 %v3_10007b1c, -1
  br i1 %v3_10007b24, label %dec_label_pc_10007b3c, label %dec_label_pc_10007b38

dec_label_pc_10007b38:                            ; preds = %dec_label_pc_10007b00
  store i32 268467004, i32* @lr, align 4
  %v0_10007b38 = call i32 @function_1000a98c()
  br label %dec_label_pc_10007b3c

dec_label_pc_10007b3c:                            ; preds = %dec_label_pc_10007b00, %dec_label_pc_10007b38
  store i32 268467020, i32* @lr, align 4
  %v3_10007b48 = call i32 @function_1000b758(i32 2, i32 1, i32 0)
  store i32 256, i32* @r4, align 4
  %v0_10007b54 = load i32, i32* @r31, align 4
  %v1_10007b54 = add i32 %v0_10007b54, 28
  store i32 %v1_10007b54, i32* @r3, align 4
  %v3_10007b58 = icmp eq i32 %v3_10007b48, -1
  %v2_10007b5c = add i32 %v0_10007b54, 4
  %v3_10007b5c = inttoptr i32 %v2_10007b5c to i32*
  store i32 %v3_10007b48, i32* %v3_10007b5c, align 4
  br i1 %v3_10007b58, label %dec_label_pc_10007b3c.dec_label_pc_10007bd4_crit_edge, label %dec_label_pc_10007b64

dec_label_pc_10007b3c.dec_label_pc_10007bd4_crit_edge: ; preds = %dec_label_pc_10007b3c
  %v0_10007be8.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10007bd4

dec_label_pc_10007b64:                            ; preds = %dec_label_pc_10007b3c
  %v0_10007b64 = load i32, i32* %r29.global-to-local, align 4
  %v1_10007b64 = load i32, i32* @r31, align 4
  %v2_10007b64 = add i32 %v1_10007b64, 24
  %v3_10007b64 = inttoptr i32 %v2_10007b64 to i32*
  store i32 %v0_10007b64, i32* %v3_10007b64, align 4
  store i32 268467052, i32* @lr, align 4
  %v0_10007b68 = call i32 @function_1000a1a8()
  %v0_10007b6c = load i32, i32* @r31, align 4
  %v1_10007b6c = add i32 %v0_10007b6c, 4
  %v2_10007b6c = inttoptr i32 %v1_10007b6c to i32*
  %v3_10007b6c = load i32, i32* %v2_10007b6c, align 4
  store i32 %v3_10007b6c, i32* %r29.global-to-local, align 4
  store i32 3, i32* @r4, align 4
  store i32 268467076, i32* @lr, align 4
  %v2_10007b80 = call i32 @function_1000a85c(i32 %v3_10007b6c)
  store i32 4, i32* @r4, align 4
  store i32 268467096, i32* @lr, align 4
  %v2_10007b94 = call i32 @function_1000a85c(i32 %v3_10007b6c)
  %v3_10007b9c = load i32, i32* @global_var_1001e1a8.181, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  %v0_10007ba4 = load i32, i32* @r31, align 4
  %v2_10007bac = add i32 %v0_10007ba4, 8
  %v3_10007bac = inttoptr i32 %v2_10007bac to i32*
  store i32 %v3_10007b9c, i32* %v3_10007bac, align 4
  %v0_10007bb4 = load i32, i32* %r9.global-to-local, align 4
  %v1_10007bb4 = load i32, i32* @r31, align 4
  %v2_10007bb4 = add i32 %v1_10007bb4, 12
  %v3_10007bb4 = inttoptr i32 %v2_10007bb4 to i32*
  store i32 %v0_10007bb4, i32* %v3_10007bb4, align 4
  %v0_10007bbc = load i32, i32* @r31, align 4
  %v1_10007bbc = add i32 %v0_10007bbc, 4
  %v2_10007bbc = inttoptr i32 %v1_10007bbc to i32*
  %v3_10007bbc = load i32, i32* %v2_10007bbc, align 4
  store i32 %v3_10007bbc, i32* @r3, align 4
  %v1_10007bc0 = add i32 %v0_10007bbc, 16
  %v2_10007bc0 = inttoptr i32 %v1_10007bc0 to i32*
  %v3_10007bc0 = load i32, i32* %v2_10007bc0, align 4
  store i32 %v3_10007bc0, i32* %r9.global-to-local, align 4
  store i32 268467156, i32* @lr, align 4
  %v0_10007bd0 = call i32 @function_1000b558()
  br label %dec_label_pc_10007bd4

dec_label_pc_10007bd4:                            ; preds = %dec_label_pc_10007b3c.dec_label_pc_10007bd4_crit_edge, %dec_label_pc_10007b64
  %v0_10007be8 = phi i32 [ %v0_10007be8.pre, %dec_label_pc_10007b3c.dec_label_pc_10007bd4_crit_edge ], [ %v0_10007bd0, %dec_label_pc_10007b64 ]
  store i32 %v0_10007b08, i32* @r31, align 4
  ret i32 %v0_10007be8

; uselistorder directives
  uselistorder i32 ()* @function_1000a1a8, { 6, 11, 16, 15, 14, 13, 12, 10, 9, 8, 7, 0, 5, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_10007bd4, { 1, 0 }
  uselistorder label %dec_label_pc_10007b3c, { 1, 0 }
}

define i32 @function_10007bec(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10007bec:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10007bf0 = load i32, i32* @lr, align 4
  store i32 %v0_10007bf0, i32* %r0.global-to-local, align 4
  %v3_10007bfc = load i32, i32* @global_var_1001e19c.182, align 4
  %v1_10007c08 = mul i32 %v3_10007bfc, 16
  store i32 %v1_10007c08, i32* %r9.global-to-local, align 4
  %v0_10007c0c = load i32, i32* @r28, align 4
  %v3_10007c14 = load i32, i32* @global_var_1001e1a0.183, align 4
  store i32 %arg2, i32* %r23.global-to-local, align 4
  %v1_10007c20 = add i32 %v1_10007c08, 16
  %v0_10007c38 = load i32, i32* @r29, align 4
  %v0_10007c3c = load i32, i32* @r30, align 4
  store i32 268467272, i32* @lr, align 4
  %v3_10007c44 = call i32 @function_1000bc54(i32 %v3_10007c14, i32 %v1_10007c20, i32 %v1_10007c08)
  store i32 %v3_10007c44, i32* %r25.global-to-local, align 4
  %v0_10007c4c = load i32, i32* @r28, align 4
  store i32 %v3_10007c44, i32* @global_var_1001e1a0.183, align 4
  %v3_10007c54 = load i32, i32* @global_var_1001e19c.182, align 4
  store i32 %v3_10007c54, i32* %r24.global-to-local, align 4
  store i32 268467292, i32* @lr, align 4
  %v1_10007c58 = inttoptr i32 %v0_10007c4c to i8*
  %v2_10007c58 = call i32 @function_1000a100(i8* %v1_10007c58)
  %sext = mul i32 %v2_10007c58, 16777216
  %v1_10007c5c = sdiv i32 %sext, 16777216
  %v2_10007c5c = add nsw i32 %v1_10007c5c, 1
  store i32 %v2_10007c5c, i32* @r29, align 4
  store i32 %v1_10007c5c, i32* @r30, align 4
  store i32 %v2_10007c5c, i32* @r3, align 4
  store i32 268467308, i32* @lr, align 4
  %v0_10007c68 = call i32 @function_1000b98c()
  %v0_10007c6c = load i32, i32* @r28, align 4
  %v0_10007c70 = load i32, i32* @r29, align 4
  store i32 %v0_10007c68, i32* %r31.global-to-local, align 4
  store i32 268467324, i32* @lr, align 4
  %v3_10007c78 = call i32 @function_1000a184(i32 %v0_10007c6c, i32 %v0_10007c70, i32 %v0_10007c70)
  %v0_10007c7c = load i32, i32* @r30, align 4
  %tmp21 = icmp slt i32 %v0_10007c7c, 1
  %extract.t6 = trunc i32 %v0_10007c7c to i8
  br i1 %tmp21, label %dec_label_pc_10007ca0, label %dec_label_pc_10007c84

dec_label_pc_10007c84:                            ; preds = %dec_label_pc_10007bec
  store i32 %v0_10007c7c, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10007c8c

dec_label_pc_10007c8c:                            ; preds = %dec_label_pc_10007c8c, %dec_label_pc_10007c84
  %v1_10007c94 = phi i32 [ %v1_10007c98, %dec_label_pc_10007c8c ], [ 0, %dec_label_pc_10007c84 ]
  %v1_10007c8c = load i32, i32* %r31.global-to-local, align 4
  %v2_10007c8c = add i32 %v1_10007c8c, %v1_10007c94
  %v3_10007c8c = inttoptr i32 %v2_10007c8c to i8*
  %v4_10007c8c = load i8, i8* %v3_10007c8c, align 1
  %v5_10007c8c = zext i8 %v4_10007c8c to i32
  %v1_10007c90 = xor i32 %v5_10007c8c, 34
  store i32 %v1_10007c90, i32* %r0.global-to-local, align 4
  %v3_10007c94 = trunc i32 %v1_10007c90 to i8
  store i8 %v3_10007c94, i8* %v3_10007c8c, align 1
  %v0_10007c98 = load i32, i32* %r9.global-to-local, align 4
  %v1_10007c98 = add i32 %v0_10007c98, 1
  store i32 %v1_10007c98, i32* %r9.global-to-local, align 4
  %v0_10007c9c = load i32, i32* %ctr.global-to-local, align 4
  %v1_10007c9c = add i32 %v0_10007c9c, -1
  store i32 %v1_10007c9c, i32* %ctr.global-to-local, align 4
  %v2_10007c9c = icmp eq i32 %v1_10007c9c, 0
  br i1 %v2_10007c9c, label %dec_label_pc_10007ca0.loopexit, label %dec_label_pc_10007c8c

dec_label_pc_10007ca0.loopexit:                   ; preds = %dec_label_pc_10007c8c
  %v0_10007cb8.pre = load i32, i32* @r30, align 4
  %extract.t = trunc i32 %v0_10007cb8.pre to i8
  br label %dec_label_pc_10007ca0

dec_label_pc_10007ca0:                            ; preds = %dec_label_pc_10007ca0.loopexit, %dec_label_pc_10007bec
  %v0_10007cb8.off0 = phi i8 [ %extract.t, %dec_label_pc_10007ca0.loopexit ], [ %extract.t6, %dec_label_pc_10007bec ]
  %v3_10007ca0 = load i32, i32* @global_var_1001e19c.182, align 4
  %v0_10007ca4 = load i32, i32* %r23.global-to-local, align 4
  %v3_10007ca8 = load i32, i32* @global_var_1001e1a0.183, align 4
  %v1_10007cac = mul i32 %v3_10007ca0, 16
  %v2_10007cb0 = add i32 %v3_10007ca8, %v1_10007cac
  store i32 %v2_10007cb0, i32* %r9.global-to-local, align 4
  %v0_10007cb4 = load i32, i32* %r24.global-to-local, align 4
  %v1_10007cb4 = mul i32 %v0_10007cb4, 16
  store i32 %v1_10007cb4, i32* %r0.global-to-local, align 4
  %v3_10007cb8 = add i32 %v2_10007cb0, 12
  %v4_10007cb8 = inttoptr i32 %v3_10007cb8 to i8*
  store i8 %v0_10007cb8.off0, i8* %v4_10007cb8, align 1
  %v0_10007cbc = load i32, i32* %r31.global-to-local, align 4
  %v1_10007cbc = load i32, i32* %r25.global-to-local, align 4
  %v2_10007cbc = load i32, i32* %r0.global-to-local, align 4
  %v3_10007cbc = add i32 %v2_10007cbc, %v1_10007cbc
  %v4_10007cbc = inttoptr i32 %v3_10007cbc to i32*
  store i32 %v0_10007cbc, i32* %v4_10007cbc, align 4
  %v3_10007cc0 = load i32, i32* @global_var_1001e19c.182, align 4
  store i32 %v3_10007cc0, i32* @r30, align 4
  %v3_10007cc4 = load i32, i32* @global_var_1001e1a0.183, align 4
  store i32 %v3_10007cc4, i32* %r25.global-to-local, align 4
  store i32 268467404, i32* @lr, align 4
  %v1_10007cc8 = inttoptr i32 %v0_10007ca4 to i8*
  %v2_10007cc8 = call i32 @function_1000a100(i8* %v1_10007cc8)
  %sext1 = mul i32 %v2_10007cc8, 16777216
  %v1_10007ccc = sdiv i32 %sext1, 16777216
  %v2_10007ccc = add nsw i32 %v1_10007ccc, 1
  store i32 %v2_10007ccc, i32* @r29, align 4
  store i32 %v1_10007ccc, i32* @r28, align 4
  store i32 %v2_10007ccc, i32* @r3, align 4
  store i32 268467420, i32* @lr, align 4
  %v0_10007cd8 = call i32 @function_1000b98c()
  %v0_10007cdc = load i32, i32* %r23.global-to-local, align 4
  %v0_10007ce0 = load i32, i32* @r29, align 4
  store i32 %v0_10007cd8, i32* %r31.global-to-local, align 4
  store i32 268467436, i32* @lr, align 4
  %v3_10007ce8 = call i32 @function_1000a184(i32 %v0_10007cdc, i32 %v0_10007ce0, i32 %v0_10007ce0)
  %v0_10007cec = load i32, i32* @r28, align 4
  %tmp22 = icmp slt i32 %v0_10007cec, 1
  %extract.t8 = trunc i32 %v0_10007cec to i8
  br i1 %tmp22, label %dec_label_pc_10007d10, label %dec_label_pc_10007cf4

dec_label_pc_10007cf4:                            ; preds = %dec_label_pc_10007ca0
  store i32 %v0_10007cec, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10007cfc

dec_label_pc_10007cfc:                            ; preds = %dec_label_pc_10007cfc, %dec_label_pc_10007cf4
  %v1_10007d04 = phi i32 [ %v1_10007d08, %dec_label_pc_10007cfc ], [ 0, %dec_label_pc_10007cf4 ]
  %v1_10007cfc = load i32, i32* %r31.global-to-local, align 4
  %v2_10007cfc = add i32 %v1_10007cfc, %v1_10007d04
  %v3_10007cfc = inttoptr i32 %v2_10007cfc to i8*
  %v4_10007cfc = load i8, i8* %v3_10007cfc, align 1
  %v5_10007cfc = zext i8 %v4_10007cfc to i32
  %v1_10007d00 = xor i32 %v5_10007cfc, 34
  store i32 %v1_10007d00, i32* %r0.global-to-local, align 4
  %v3_10007d04 = trunc i32 %v1_10007d00 to i8
  store i8 %v3_10007d04, i8* %v3_10007cfc, align 1
  %v0_10007d08 = load i32, i32* %r9.global-to-local, align 4
  %v1_10007d08 = add i32 %v0_10007d08, 1
  store i32 %v1_10007d08, i32* %r9.global-to-local, align 4
  %v0_10007d0c = load i32, i32* %ctr.global-to-local, align 4
  %v1_10007d0c = add i32 %v0_10007d0c, -1
  store i32 %v1_10007d0c, i32* %ctr.global-to-local, align 4
  %v2_10007d0c = icmp eq i32 %v1_10007d0c, 0
  br i1 %v2_10007d0c, label %dec_label_pc_10007d10.loopexit, label %dec_label_pc_10007cfc

dec_label_pc_10007d10.loopexit:                   ; preds = %dec_label_pc_10007cfc
  %v0_10007d24.pre = load i32, i32* @r28, align 4
  %extract.t7 = trunc i32 %v0_10007d24.pre to i8
  br label %dec_label_pc_10007d10

dec_label_pc_10007d10:                            ; preds = %dec_label_pc_10007d10.loopexit, %dec_label_pc_10007ca0
  %v0_10007d24.off0 = phi i8 [ %extract.t7, %dec_label_pc_10007d10.loopexit ], [ %extract.t8, %dec_label_pc_10007ca0 ]
  %v3_10007d10 = load i32, i32* @global_var_1001e19c.182, align 4
  %v3_10007d18 = load i32, i32* @global_var_1001e1a0.183, align 4
  %v1_10007d1c = mul i32 %v3_10007d10, 16
  %v2_10007d20 = or i32 %v1_10007d1c, 13
  %v3_10007d24 = add i32 %v2_10007d20, %v3_10007d18
  %v4_10007d24 = inttoptr i32 %v3_10007d24 to i8*
  store i8 %v0_10007d24.off0, i8* %v4_10007d24, align 1
  %v0_10007d28 = load i32, i32* @r30, align 4
  %v1_10007d28 = mul i32 %v0_10007d28, 16
  %v1_10007d2c = load i32, i32* %r25.global-to-local, align 4
  %v2_10007d2c = add i32 %v1_10007d2c, %v1_10007d28
  store i32 %v2_10007d2c, i32* %r9.global-to-local, align 4
  %v3_10007d30 = load i32, i32* @global_var_1001e19c.182, align 4
  %v3_10007d34 = load i32, i32* @global_var_1001e1a0.183, align 4
  %v1_10007d38 = mul i32 %v3_10007d30, 16
  %v3_10007d3c = load i16, i16* @global_var_1001e1a4.184, align 2
  %v4_10007d3c = zext i16 %v3_10007d3c to i32
  store i32 %v4_10007d3c, i32* %r7.global-to-local, align 4
  %v2_10007d40 = add i32 %v3_10007d34, %v1_10007d38
  store i32 %v2_10007d40, i32* %r11.global-to-local, align 4
  store i32 %v0_10007bf0, i32* %r0.global-to-local, align 4
  %v1_10007d48 = add i32 %v3_10007d30, 1
  store i32 %v1_10007d48, i32* %r10.global-to-local, align 4
  store i32 ptrtoint (i16* @global_var_1001e1a4.184 to i32), i32* %r8.global-to-local, align 4
  %v0_10007d50 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007d50 = add i32 %v2_10007d2c, 4
  %v3_10007d50 = inttoptr i32 %v2_10007d50 to i32*
  store i32 %v0_10007d50, i32* %v3_10007d50, align 4
  %v0_10007d58 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_10007d58, i32* @global_var_1001e19c.182, align 4
  store i32 %v0_10007c0c, i32* @r28, align 4
  store i32 %v0_10007c38, i32* @r29, align 4
  store i32 %v0_10007c3c, i32* @r30, align 4
  %v0_10007d88 = load i32, i32* %r8.global-to-local, align 4
  %v1_10007d88 = trunc i32 %v0_10007d88 to i16
  %v2_10007d88 = load i32, i32* %r11.global-to-local, align 4
  %v3_10007d88 = add i32 %v2_10007d88, 10
  %v4_10007d88 = inttoptr i32 %v3_10007d88 to i16*
  store i16 %v1_10007d88, i16* %v4_10007d88, align 2
  %v0_10007d8c = load i32, i32* %r7.global-to-local, align 4
  %v1_10007d8c = trunc i32 %v0_10007d8c to i16
  %v2_10007d8c = load i32, i32* %r11.global-to-local, align 4
  %v3_10007d8c = add i32 %v2_10007d8c, 8
  %v4_10007d8c = inttoptr i32 %v3_10007d8c to i16*
  store i16 %v1_10007d8c, i16* %v4_10007d8c, align 2
  %v0_10007d90 = load i32, i32* %r8.global-to-local, align 4
  %v1_10007d90 = trunc i32 %v0_10007d90 to i16
  store i16 %v1_10007d90, i16* @global_var_1001e1a4.184, align 2
  ret i32 %v3_10007ce8

; uselistorder directives
  uselistorder i32 %v3_10007d30, { 1, 0 }
  uselistorder i32 %v1_10007d0c, { 1, 0 }
  uselistorder i32 %v1_10007d08, { 1, 0 }
  uselistorder i32 %v0_10007cec, { 1, 0, 2 }
  uselistorder i32 %v1_10007c9c, { 1, 0 }
  uselistorder i32 %v1_10007c98, { 1, 0 }
  uselistorder i32 %v0_10007c7c, { 1, 0, 2 }
  uselistorder i32 %v1_10007c08, { 2, 1, 0 }
  uselistorder i32* %r23.global-to-local, { 1, 0, 2 }
  uselistorder i32 (i8*)* @function_1000a100, { 28, 29, 9, 10, 11, 12, 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 76, 77, 78, 81, 82, 79, 80, 83, 84, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 70, 71, 72, 73, 74, 75, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69 }
  uselistorder i32 (i32, i32, i32)* @function_1000bc54, { 0, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
}

define i32 @function_10007d98() local_unnamed_addr {
dec_label_pc_10007d98:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp59 = call i32 @__decompiler_undefined_function_0()
  %tmp60 = call i32 @__decompiler_undefined_function_0()
  %tmp61 = call i32 @__decompiler_undefined_function_0()
  %tmp62 = call i16 @__decompiler_undefined_function_1()
  %tmp63 = call i8 @__decompiler_undefined_function_2()
  %tmp64 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-1904 = alloca i32, align 4
  %stack_var_-1896 = alloca i32, align 4
  %stack_var_-1892 = alloca i32, align 4
  %stack_var_-1728 = alloca i32, align 4
  %stack_var_-1856 = alloca i32, align 4
  %stack_var_-1912 = alloca i32, align 4
  %stack_var_-1600 = alloca i32, align 4
  %stack_var_-1872 = alloca i32, align 4
  %stack_var_-1580 = alloca i16, align 2
  %stack_var_-1900 = alloca i64, align 8
  %v0_10007d98 = load i32, i32* @lr, align 4
  store i32 %v0_10007d98, i32* %r0.global-to-local, align 4
  %v0_10007dc0 = load i32, i32* @r22, align 4
  %v0_10007dc4 = load i32, i32* @r23, align 4
  %v0_10007dc8 = load i32, i32* @r24, align 4
  %v0_10007dcc = load i32, i32* @r25, align 4
  %v0_10007dd0 = load i32, i32* @r26, align 4
  %v0_10007dd8 = load i32, i32* @r28, align 4
  %v0_10007ddc = load i32, i32* @r29, align 4
  %v0_10007de4 = load i32, i32* @r31, align 4
  store i32 268467696, i32* @lr, align 4
  %v0_10007dec = call i32 @function_1000a9d4()
  store i32 %v0_10007dec, i32* %r3.global-to-local, align 4
  %v1_10007df0 = icmp slt i32 %v0_10007dec, 0
  %v3_10007df0 = icmp eq i32 %v0_10007dec, 0
  store i1 %v1_10007df0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007df0, i1* %cr7_eq.global-to-local, align 1
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v0_10007dec, i32* @global_var_1001e1b4.180, align 4
  %tmp105 = icmp slt i32 %v0_10007dec, 1
  br i1 %tmp105, label %dec_label_pc_10007e58, label %dec_label_pc_10007e00

dec_label_pc_10007e00:                            ; preds = %dec_label_pc_10007e58, %dec_label_pc_10007d98
  store i32 %v0_10007d98, i32* %r0.global-to-local, align 4
  store i32 %v0_10007dc0, i32* @r22, align 4
  store i32 %v0_10007dc4, i32* @r23, align 4
  store i32 %v0_10007dc8, i32* @r24, align 4
  store i32 %v0_10007dcc, i32* @r25, align 4
  store i32 %v0_10007dd0, i32* @r26, align 4
  store i32 %v0_10007dd8, i32* @r28, align 4
  store i32 %v0_10007ddc, i32* @r29, align 4
  store i32 %v0_10007de4, i32* @r31, align 4
  ret i32 %v0_10007dec

dec_label_pc_10007e58:                            ; preds = %dec_label_pc_10007d98
  %v1_10007e58 = icmp slt i32 %v0_10007dec, -1
  %v3_10007e58 = icmp eq i32 %v0_10007dec, -1
  store i1 %v1_10007e58, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007e58, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007e58, label %dec_label_pc_10007e00, label %dec_label_pc_10007e60

dec_label_pc_10007e60:                            ; preds = %dec_label_pc_10007e58
  store i32 268467812, i32* @lr, align 4
  %v1_10007e60 = call i32 @function_1000a404(i32 %v0_10007dec)
  store i32 %v1_10007e60, i32* %r3.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v1_10007e60, i32* @global_var_1001e180.71, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007e70.185 to i32), i32* @lr, align 4
  %v1_10007e6c = call i32 @function_1000728c(i32 %v1_10007e60)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268467836, i32* @lr, align 4
  %v0_10007e78 = call i32 @function_1000ad5c()
  store i32 288, i32* %r4.global-to-local, align 4
  store i32 %v0_10007e78, i32* @global_var_1001e1a8.181, align 4
  store i32 128, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007e8c.186 to i32), i32* @lr, align 4
  %v2_10007e88 = call i32 @function_1000bae4(i32 128, i32 288)
  store i32 %v2_10007e88, i32* %r3.global-to-local, align 4
  store i64 0, i64* %stack_var_-1900, align 8
  store i32 128, i32* %r0.global-to-local, align 4
  store i32 128, i32* %ctr.global-to-local, align 4
  store i32 %v2_10007e88, i32* @global_var_1001e1ac.187, align 4
  store i32 %v2_10007e88, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 -1, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_10007eb8 = add i32 %v2_10007e88, 4
  store i32 %v1_10007eb8, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10007ebc

dec_label_pc_10007ebc:                            ; preds = %dec_label_pc_10007ebc.dec_label_pc_10007ebc_crit_edge, %dec_label_pc_10007e60
  %v1_10007ed0 = phi i32 [ %v1_10007ed8, %dec_label_pc_10007ebc.dec_label_pc_10007ebc_crit_edge ], [ %v1_10007eb8, %dec_label_pc_10007e60 ]
  %v0_10007ed0 = phi i32 [ %v0_10007ed0.pre, %dec_label_pc_10007ebc.dec_label_pc_10007ebc_crit_edge ], [ -1, %dec_label_pc_10007e60 ]
  %v1_10007ecc = phi i32 [ %v1_10007ecc.pre, %dec_label_pc_10007ebc.dec_label_pc_10007ebc_crit_edge ], [ %v2_10007e88, %dec_label_pc_10007e60 ]
  %v0_10007ec8 = phi i32 [ %v0_10007edc, %dec_label_pc_10007ebc.dec_label_pc_10007ebc_crit_edge ], [ 0, %dec_label_pc_10007e60 ]
  %v1_10007ebc = mul i32 %v0_10007ec8, 256
  store i32 %v1_10007ebc, i32* %r0.global-to-local, align 4
  %v2_10007ec4 = mul i32 %v0_10007ec8, 288
  %v1_10007ec8 = add i32 %v0_10007ec8, 1
  store i32 %v1_10007ec8, i32* %r10.global-to-local, align 4
  %v2_10007ecc = add i32 %v2_10007ec4, %v1_10007ecc
  store i32 %v2_10007ecc, i32* %r9.global-to-local, align 4
  %v2_10007ed0 = inttoptr i32 %v1_10007ed0 to i32*
  store i32 %v0_10007ed0, i32* %v2_10007ed0, align 4
  %v0_10007ed4 = load i32, i32* %r7.global-to-local, align 4
  %v1_10007ed4 = load i32, i32* %r9.global-to-local, align 4
  %v2_10007ed4 = add i32 %v1_10007ed4, 12
  %v3_10007ed4 = inttoptr i32 %v2_10007ed4 to i32*
  store i32 %v0_10007ed4, i32* %v3_10007ed4, align 4
  %v0_10007ed8 = load i32, i32* %r11.global-to-local, align 4
  %v1_10007ed8 = add i32 %v0_10007ed8, 288
  store i32 %v1_10007ed8, i32* %r11.global-to-local, align 4
  %v0_10007edc = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_10007edc, i32* %r9.global-to-local, align 4
  %v0_10007ee0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10007ee0 = add i32 %v0_10007ee0, -1
  store i32 %v1_10007ee0, i32* %ctr.global-to-local, align 4
  %v2_10007ee0 = icmp eq i32 %v1_10007ee0, 0
  br i1 %v2_10007ee0, label %dec_label_pc_10007ee4, label %dec_label_pc_10007ebc.dec_label_pc_10007ebc_crit_edge

dec_label_pc_10007ebc.dec_label_pc_10007ebc_crit_edge: ; preds = %dec_label_pc_10007ebc
  %v1_10007ecc.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_10007ed0.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10007ebc

dec_label_pc_10007ee4:                            ; preds = %dec_label_pc_10007ebc
  store i32 128, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r4.global-to-local, align 4
  store i64 128, i64* %stack_var_-1900, align 8
  store i32 268467964, i32* @lr, align 4
  %v3_10007ef8 = call i32 @function_1000b758(i32 2, i32 3, i32 6)
  store i32 %v3_10007ef8, i32* %r3.global-to-local, align 4
  %v1_10007efc = icmp slt i32 %v3_10007ef8, -1
  %v3_10007efc = icmp eq i32 %v3_10007ef8, -1
  store i1 %v1_10007efc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007efc, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10007ef8, i32* @r29, align 4
  store i32 %v3_10007ef8, i32* @global_var_1001e1b0.188, align 4
  br i1 %v3_10007efc, label %dec_label_pc_10008b60, label %dec_label_pc_10007f10

dec_label_pc_10007f10:                            ; preds = %dec_label_pc_10007ee4
  store i32 3, i32* @r4, align 4
  store i32 268468000, i32* @lr, align 4
  %v1_10007f1c = call i32 @function_1000a85c(i32 3)
  store i32 4, i32* @r4, align 4
  %v0_10007f28 = load i32, i32* @r29, align 4
  store i32 %v0_10007f28, i32* %r3.global-to-local, align 4
  store i32 268468020, i32* @lr, align 4
  %v2_10007f30 = call i32 @function_1000a85c(i32 %v0_10007f28)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10007f38 = load i32, i32* @global_var_1001e1b0.188, align 4
  store i32 %v3_10007f38, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_10007f48 = ptrtoint i64* %stack_var_-1900 to i32
  store i32 %v2_10007f48, i32* %r6.global-to-local, align 4
  store i32 4, i32* %r7.global-to-local, align 4
  store i64 1, i64* %stack_var_-1900, align 8
  store i32 268468056, i32* @lr, align 4
  %v5_10007f54 = call i32 @function_1000b71c(i32 %v3_10007f38, i32 0, i32 3, i32 %v2_10007f48, i32 4)
  store i32 %v5_10007f54, i32* %r3.global-to-local, align 4
  %v1_10007f58 = icmp slt i32 %v5_10007f54, 0
  %v3_10007f58 = icmp eq i32 %v5_10007f54, 0
  store i1 %v1_10007f58, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007f58, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007f58, label %dec_label_pc_10007f60, label %dec_label_pc_100097a0

dec_label_pc_10007f60:                            ; preds = %dec_label_pc_10007f10, %dec_label_pc_10007f60
  %v0_10007f60 = call i32 @function_1000723c()
  store i32 %v0_10007f60, i32* %r3.global-to-local, align 4
  %v1_10007f64 = urem i32 %v0_10007f60, 65536
  store i32 %v1_10007f64, i32* @r16, align 4
  %v1_10007f68 = icmp ult i32 %v1_10007f64, 1023
  %v3_10007f68 = icmp eq i32 %v1_10007f64, 1023
  store i1 %v1_10007f68, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007f68, i1* %cr7_eq.global-to-local, align 1
  %tmp106 = icmp ult i32 %v1_10007f64, 1024
  br i1 %tmp106, label %dec_label_pc_10007f60, label %dec_label_pc_10007f70

dec_label_pc_10007f70:                            ; preds = %dec_label_pc_10007f60
  store i32 268566528, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r29.global-to-local, align 4
  %v3_10007f78 = load i32, i32* @global_var_1001e23c.189, align 4
  store i32 %v3_10007f78, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001e23c.189 to i32), i32* @r30, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_10007f88 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10007f88, i32* %r0.global-to-local, align 4
  store i32 268500992, i32* %r28.global-to-local, align 4
  %v1_10007f90 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10007f90, i32* %r0.global-to-local, align 4
  store i32 40, i32* %r9.global-to-local, align 4
  store i32 %v1_10007f90, i32* @global_var_1001e23c.189, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1000d63c.191 to i32), i32* @r28, align 4
  store i16 40, i16* bitcast (i32* @global_var_1001e23e.192 to i16*), align 4
  %v0_10007fa4 = call i32 @function_1000723c()
  %v1_10007fa4 = trunc i32 %v0_10007fa4 to i16
  store i32 %v0_10007fa4, i32* %r3.global-to-local, align 4
  %v3_10007fa8 = load i32, i32* @global_var_1001e25c.193, align 4
  store i32 %v3_10007fa8, i32* %r11.global-to-local, align 4
  store i32 64, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r9.global-to-local, align 4
  store i8 64, i8* bitcast (i32* @global_var_1001e244.194 to i8*), align 4
  %v1_10007fb8 = call i32 @__asm_rlwimi(i32 5, i32 28, i32 0, i32 3)
  store i32 %v1_10007fb8, i32* %r11.global-to-local, align 4
  store i32 23, i32* %r0.global-to-local, align 4
  %v0_10007fc0 = load i32, i32* %r9.global-to-local, align 4
  %v1_10007fc0 = trunc i32 %v0_10007fc0 to i8
  store i8 %v1_10007fc0, i8* bitcast (i32* @global_var_1001e245.195 to i8*), align 4
  store i16 %v1_10007fa4, i16* bitcast (i32* @global_var_1001e240.196 to i16*), align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1000d654.197 to i32), i32* @r27, align 4
  store i32 %v1_10007fb8, i32* @global_var_1001e25c.193, align 4
  store i16 23, i16* @global_var_1001e252.198, align 2
  store i32 ptrtoint (i32* @global_var_1000d65c.199 to i32), i32* @r26, align 4
  %v0_10007fe0 = load i32, i32* @r16, align 4
  %v1_10007fe0 = trunc i32 %v0_10007fe0 to i16
  store i16 %v1_10007fe0, i16* bitcast (i32* @global_var_1001e250.190 to i16*), align 4
  store i32 268500992, i32* %r25.global-to-local, align 4
  %v0_10007fe8 = call i32 @function_1000723c()
  %v1_10007fe8 = trunc i32 %v0_10007fe8 to i16
  store i16 %v1_10007fe8, i16* bitcast (i32* @global_var_1001e25e.200 to i16*), align 4
  store i32 ptrtoint (i32* @global_var_1000d644.201 to i32), i32* %r4.global-to-local, align 4
  %v0_10007ff8 = load i32, i32* @r28, align 4
  store i32 %v0_10007ff8, i32* %r3.global-to-local, align 4
  %v3_10008000 = load i32, i32* @global_var_1001e25c.193, align 4
  store i32 ptrtoint (i32* @global_var_1000d680.202 to i32), i32* @r25, align 4
  %v1_10008010 = or i32 %v3_10008000, 131072
  store i32 %v1_10008010, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000d688.203 to i32), i32* @r24, align 4
  store i32 %v1_10008010, i32* @global_var_1001e25c.193, align 4
  store i32 ptrtoint (i32* @global_var_1000d3f8.204 to i32), i32* @r29, align 4
  store i32 268468268, i32* @lr, align 4
  %v4_10008028 = call i32 @function_10007bec(i32 %v0_10007ff8, i32 ptrtoint (i32* @global_var_1000d644.201 to i32), i32 10)
  store i32 ptrtoint ([6 x i8]* @global_var_1000d64c.205 to i32), i32* %r4.global-to-local, align 4
  %v0_10008034 = load i32, i32* @r28, align 4
  store i32 %v0_10008034, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1000d4d4.206 to i32), i32* @r23, align 4
  store i32 268468292, i32* @lr, align 4
  %v5_10008040 = call i32 @function_10007bec(i32 %v0_10008034, i32 ptrtoint ([6 x i8]* @global_var_1000d64c.205 to i32), i32 9)
  %v0_10008048 = load i32, i32* @r28, align 4
  store i32 %v0_10008048, i32* %r3.global-to-local, align 4
  %v0_1000804c = load i32, i32* @r27, align 4
  store i32 %v0_1000804c, i32* %r4.global-to-local, align 4
  store i32 268468308, i32* @lr, align 4
  %v5_10008050 = call i32 @function_10007bec(i32 %v0_10008048, i32 %v0_1000804c, i32 8)
  %v0_10008054 = load i32, i32* @r27, align 4
  store i32 %v0_10008054, i32* %r3.global-to-local, align 4
  store i32 %v0_10008054, i32* %r4.global-to-local, align 4
  store i32 268468324, i32* @lr, align 4
  %v5_10008060 = call i32 @function_10007bec(i32 %v0_10008054, i32 %v0_10008054, i32 7)
  %v0_10008064 = load i32, i32* @r28, align 4
  store i32 %v0_10008064, i32* %r3.global-to-local, align 4
  %v0_10008068 = load i32, i32* @r26, align 4
  store i32 %v0_10008068, i32* %r4.global-to-local, align 4
  store i32 268468340, i32* @lr, align 4
  %v4_10008070 = call i32 @function_10007bec(i32 %v0_10008064, i32 %v0_10008068, i32 6)
  store i32 ptrtoint ([8 x i8]* @global_var_1000d664.207 to i32), i32* %r4.global-to-local, align 4
  %v0_1000807c = load i32, i32* @r28, align 4
  store i32 %v0_1000807c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1000d4e0.208 to i32), i32* @r22, align 4
  store i32 268468364, i32* @lr, align 4
  %v5_10008088 = call i32 @function_10007bec(i32 %v0_1000807c, i32 ptrtoint ([8 x i8]* @global_var_1000d664.207 to i32), i32 5)
  store i32 ptrtoint ([8 x i8]* @global_var_1000d66c.209 to i32), i32* %r4.global-to-local, align 4
  %v0_10008094 = load i32, i32* @r28, align 4
  store i32 %v0_10008094, i32* %r3.global-to-local, align 4
  store i32 268500992, i32* %r21.global-to-local, align 4
  store i32 268468388, i32* @lr, align 4
  %v5_100080a0 = call i32 @function_10007bec(i32 %v0_10008094, i32 ptrtoint ([8 x i8]* @global_var_1000d66c.209 to i32), i32 5)
  store i32 ptrtoint ([9 x i8]* @global_var_1000d674.210 to i32), i32* %r4.global-to-local, align 4
  %v0_100080ac = load i32, i32* @r28, align 4
  store i32 %v0_100080ac, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1000d4e8.211 to i32), i32* %r21.global-to-local, align 4
  store i32 268468412, i32* @lr, align 4
  %v5_100080b8 = call i32 @function_10007bec(i32 %v0_100080ac, i32 ptrtoint ([9 x i8]* @global_var_1000d674.210 to i32), i32 5)
  %v0_100080bc = load i32, i32* @r28, align 4
  store i32 %v0_100080bc, i32* %r3.global-to-local, align 4
  %v0_100080c0 = load i32, i32* @r25, align 4
  store i32 %v0_100080c0, i32* %r4.global-to-local, align 4
  store i32 268468428, i32* @lr, align 4
  %v4_100080c8 = call i32 @function_10007bec(i32 %v0_100080bc, i32 %v0_100080c0, i32 5)
  %v0_100080cc = load i32, i32* @r28, align 4
  store i32 %v0_100080cc, i32* %r3.global-to-local, align 4
  %v0_100080d0 = load i32, i32* @r24, align 4
  store i32 %v0_100080d0, i32* %r4.global-to-local, align 4
  store i32 268468444, i32* @lr, align 4
  %v4_100080d8 = call i32 @function_10007bec(i32 %v0_100080cc, i32 %v0_100080d0, i32 5)
  store i32 ptrtoint ([8 x i8]* @global_var_1000d690.212 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1000d690.212 to i32), i32* %r4.global-to-local, align 4
  store i32 268500992, i32* %r20.global-to-local, align 4
  store i32 268468468, i32* @lr, align 4
  %v4_100080f0 = call i32 @function_10007bec(i32 ptrtoint ([8 x i8]* @global_var_1000d690.212 to i32), i32 5, i32 5)
  %v0_100080f4 = load i32, i32* @r29, align 4
  store i32 %v0_100080f4, i32* %r4.global-to-local, align 4
  %v0_100080f8 = load i32, i32* @r28, align 4
  store i32 %v0_100080f8, i32* %r3.global-to-local, align 4
  store i32 268468484, i32* @lr, align 4
  %v4_10008100 = call i32 @function_10007bec(i32 %v0_100080f8, i32 %v0_100080f4, i32 4)
  %v0_10008108 = load i32, i32* @r27, align 4
  store i32 %v0_10008108, i32* %r3.global-to-local, align 4
  %v0_1000810c = load i32, i32* @r23, align 4
  store i32 %v0_1000810c, i32* %r4.global-to-local, align 4
  store i32 268468500, i32* @lr, align 4
  %v5_10008110 = call i32 @function_10007bec(i32 %v0_10008108, i32 %v0_1000810c, i32 4)
  %v0_10008114 = load i32, i32* @r28, align 4
  store i32 %v0_10008114, i32* %r3.global-to-local, align 4
  store i32 %v0_10008114, i32* %r4.global-to-local, align 4
  store i32 268468516, i32* @lr, align 4
  %v5_10008120 = call i32 @function_10007bec(i32 %v0_10008114, i32 %v0_10008114, i32 4)
  %v0_10008124 = load i32, i32* @r28, align 4
  store i32 %v0_10008124, i32* %r3.global-to-local, align 4
  %v0_10008128 = load i32, i32* @r22, align 4
  store i32 %v0_10008128, i32* %r4.global-to-local, align 4
  store i32 268468532, i32* @lr, align 4
  %sext = mul i32 %v0_10008128, 16777216
  %v3_10008130 = sdiv i32 %sext, 16777216
  %v5_10008130 = call i32 @function_10007bec(i32 %v0_10008124, i32 %v3_10008130, i32 4)
  %v0_10008138 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10008138, i32* %r3.global-to-local, align 4
  store i32 %v0_10008138, i32* %r4.global-to-local, align 4
  store i32 268468548, i32* @lr, align 4
  %v5_10008140 = call i32 @function_10007bec(i32 %v0_10008138, i32 %v0_10008138, i32 3)
  store i32 ptrtoint ([5 x i8]* @global_var_1000d4f0.213 to i32), i32* %r20.global-to-local, align 4
  %v0_10008148 = load i32, i32* @r29, align 4
  store i32 %v0_10008148, i32* %r4.global-to-local, align 4
  %v0_1000814c = load i32, i32* @r27, align 4
  store i32 %v0_1000814c, i32* %r3.global-to-local, align 4
  store i32 268500992, i32* @r29, align 4
  store i32 268468572, i32* @lr, align 4
  %v4_10008158 = call i32 @function_10007bec(i32 %v0_1000814c, i32 %v0_10008148, i32 3)
  %v0_1000815c = load i32, i32* @r28, align 4
  store i32 %v0_1000815c, i32* %r3.global-to-local, align 4
  %v0_10008160 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10008160, i32* %r4.global-to-local, align 4
  store i32 268468588, i32* @lr, align 4
  %v5_10008168 = call i32 @function_10007bec(i32 %v0_1000815c, i32 %v0_10008160, i32 3)
  store i32 ptrtoint (i32* @global_var_1000d504.214 to i32), i32* @r29, align 4
  store i32 ptrtoint (i32* @global_var_1000d4f8.215 to i32), i32* %r4.global-to-local, align 4
  %v0_10008178 = load i32, i32* @r27, align 4
  store i32 %v0_10008178, i32* %r3.global-to-local, align 4
  store i32 268468612, i32* @lr, align 4
  %v4_10008180 = call i32 @function_10007bec(i32 %v0_10008178, i32 ptrtoint (i32* @global_var_1000d4f8.215 to i32), i32 3)
  %v0_10008184 = load i32, i32* @r29, align 4
  store i32 %v0_10008184, i32* %r4.global-to-local, align 4
  %v0_10008188 = load i32, i32* @r28, align 4
  store i32 %v0_10008188, i32* %r3.global-to-local, align 4
  store i32 268468628, i32* @lr, align 4
  %v4_10008190 = call i32 @function_10007bec(i32 %v0_10008188, i32 %v0_10008184, i32 3)
  store i32 ptrtoint ([9 x i8]* @global_var_1000d50c.216 to i32), i32* %r4.global-to-local, align 4
  %v0_100081a0 = load i32, i32* @r27, align 4
  store i32 %v0_100081a0, i32* %r3.global-to-local, align 4
  store i32 268500992, i32* %r19.global-to-local, align 4
  store i32 268468652, i32* @lr, align 4
  %v5_100081a8 = call i32 @function_10007bec(i32 %v0_100081a0, i32 ptrtoint ([9 x i8]* @global_var_1000d50c.216 to i32), i32 3)
  store i32 ptrtoint (i32* @global_var_1000d518.217 to i32), i32* %r19.global-to-local, align 4
  %v0_100081b0 = load i32, i32* @r29, align 4
  store i32 %v0_100081b0, i32* %r4.global-to-local, align 4
  %v0_100081b4 = load i32, i32* @r27, align 4
  store i32 %v0_100081b4, i32* %r3.global-to-local, align 4
  store i32 268500992, i32* %r18.global-to-local, align 4
  store i32 268468676, i32* @lr, align 4
  %v4_100081c0 = call i32 @function_10007bec(i32 %v0_100081b4, i32 %v0_100081b0, i32 2)
  %v0_100081c8 = load i32, i32* @r28, align 4
  store i32 %v0_100081c8, i32* %r3.global-to-local, align 4
  %v0_100081cc = load i32, i32* %r19.global-to-local, align 4
  store i32 %v0_100081cc, i32* %r4.global-to-local, align 4
  store i32 268468692, i32* @lr, align 4
  %v4_100081d0 = call i32 @function_10007bec(i32 %v0_100081c8, i32 %v0_100081cc, i32 2)
  store i32 ptrtoint (i32* @global_var_1000d520.218 to i32), i32* %r18.global-to-local, align 4
  %v0_100081d8 = load i32, i32* @r28, align 4
  store i32 %v0_100081d8, i32* %r3.global-to-local, align 4
  %v0_100081dc = load i32, i32* @r23, align 4
  store i32 %v0_100081dc, i32* %r4.global-to-local, align 4
  store i32 268500992, i32* %r17.global-to-local, align 4
  store i32 268468716, i32* @lr, align 4
  %v5_100081e8 = call i32 @function_10007bec(i32 %v0_100081d8, i32 %v0_100081dc, i32 2)
  %v0_100081ec = load i32, i32* @r28, align 4
  store i32 %v0_100081ec, i32* %r3.global-to-local, align 4
  %v0_100081f0 = load i32, i32* %r18.global-to-local, align 4
  store i32 %v0_100081f0, i32* %r4.global-to-local, align 4
  store i32 268468732, i32* @lr, align 4
  %v4_100081f8 = call i32 @function_10007bec(i32 %v0_100081ec, i32 %v0_100081f0, i32 2)
  store i32 ptrtoint (i32* @global_var_1000d528.219 to i32), i32* %r4.global-to-local, align 4
  %v0_10008204 = load i32, i32* @r28, align 4
  store i32 %v0_10008204, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1000d540.220 to i32), i32* %r17.global-to-local, align 4
  store i32 268468756, i32* @lr, align 4
  %v4_10008210 = call i32 @function_10007bec(i32 %v0_10008204, i32 ptrtoint (i32* @global_var_1000d528.219 to i32), i32 1)
  store i32 ptrtoint ([14 x i8]* @global_var_1000d530.221 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1000d540.220 to i32), i32* %r4.global-to-local, align 4
  store i32 268500992, i32* @r29, align 4
  store i32 268468780, i32* @lr, align 4
  %v5_10008228 = call i32 @function_10007bec(i32 ptrtoint ([14 x i8]* @global_var_1000d530.221 to i32), i32 ptrtoint ([7 x i8]* @global_var_1000d540.220 to i32), i32 1)
  store i32 ptrtoint ([8 x i8]* @global_var_1000d548.222 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1000d548.222 to i32), i32* %r4.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1000d55c.223 to i32), i32* @r29, align 4
  store i32 268468804, i32* @lr, align 4
  %v4_10008240 = call i32 @function_10007bec(i32 ptrtoint ([8 x i8]* @global_var_1000d548.222 to i32), i32 1, i32 1)
  store i32 ptrtoint ([11 x i8]* @global_var_1000d550.224 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_1000d550.224 to i32), i32* %r4.global-to-local, align 4
  store i32 268468828, i32* @lr, align 4
  %v4_10008258 = call i32 @function_10007bec(i32 ptrtoint ([11 x i8]* @global_var_1000d550.224 to i32), i32 1, i32 1)
  %v0_1000825c = load i32, i32* @r29, align 4
  store i32 %v0_1000825c, i32* %r3.global-to-local, align 4
  store i32 %v0_1000825c, i32* %r4.global-to-local, align 4
  store i32 268468844, i32* @lr, align 4
  %v5_10008268 = call i32 @function_10007bec(i32 %v0_1000825c, i32 %v0_1000825c, i32 1)
  %v0_1000826c = load i32, i32* @r29, align 4
  store i32 %v0_1000826c, i32* %r3.global-to-local, align 4
  %v0_10008270 = load i32, i32* @r22, align 4
  store i32 %v0_10008270, i32* %r4.global-to-local, align 4
  store i32 268468860, i32* @lr, align 4
  %sext6 = mul i32 %v0_10008270, 16777216
  %v3_10008278 = sdiv i32 %sext6, 16777216
  %v5_10008278 = call i32 @function_10007bec(i32 %v0_1000826c, i32 %v3_10008278, i32 1)
  %v0_1000827c = load i32, i32* @r29, align 4
  store i32 %v0_1000827c, i32* %r3.global-to-local, align 4
  %v0_10008280 = load i32, i32* @r22, align 4
  store i32 %v0_10008280, i32* %r4.global-to-local, align 4
  store i32 268468876, i32* @lr, align 4
  %sext7 = mul i32 %v0_10008280, 16777216
  %v3_10008288 = sdiv i32 %sext7, 16777216
  %v5_10008288 = call i32 @function_10007bec(i32 %v0_1000827c, i32 %v3_10008288, i32 1)
  store i32 ptrtoint (i32* @global_var_1000d564.225 to i32), i32* %r3.global-to-local, align 4
  %v0_10008294 = load i32, i32* @r23, align 4
  store i32 %v0_10008294, i32* %r4.global-to-local, align 4
  store i32 268500992, i32* @r29, align 4
  store i32 268468900, i32* @lr, align 4
  %v4_100082a0 = call i32 @function_10007bec(i32 ptrtoint (i32* @global_var_1000d564.225 to i32), i32 %v0_10008294, i32 1)
  store i32 ptrtoint ([14 x i8]* @global_var_1000d56c.226 to i32), i32* %r3.global-to-local, align 4
  %v0_100082b0 = load i32, i32* %r18.global-to-local, align 4
  store i32 %v0_100082b0, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000d5c4.227 to i32), i32* @r29, align 4
  store i32 268468924, i32* @lr, align 4
  %v4_100082b8 = call i32 @function_10007bec(i32 ptrtoint ([14 x i8]* @global_var_1000d56c.226 to i32), i32 %v0_100082b0, i32 1)
  %v0_100082bc = load i32, i32* %r19.global-to-local, align 4
  store i32 %v0_100082bc, i32* %r3.global-to-local, align 4
  store i32 %v0_100082bc, i32* %r4.global-to-local, align 4
  store i32 268468940, i32* @lr, align 4
  %v3_100082c8 = call i32 @function_10007bec(i32 %v0_100082bc, i32 %v0_100082bc, i32 1)
  %v0_100082cc = load i32, i32* @r26, align 4
  store i32 %v0_100082cc, i32* %r3.global-to-local, align 4
  store i32 %v0_100082cc, i32* %r4.global-to-local, align 4
  store i32 268468956, i32* @lr, align 4
  %v3_100082d8 = call i32 @function_10007bec(i32 %v0_100082cc, i32 %v0_100082cc, i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1000d57c.228 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1000d57c.228 to i32), i32* %r4.global-to-local, align 4
  store i32 268468976, i32* @lr, align 4
  %v4_100082ec = call i32 @function_10007bec(i32 ptrtoint ([5 x i8]* @global_var_1000d57c.228 to i32), i32 1, i32 1)
  store i32 ptrtoint (i32* @global_var_1000d584.229 to i32), i32* %r4.global-to-local, align 4
  %v0_100082f8 = load i32, i32* @r28, align 4
  store i32 %v0_100082f8, i32* %r3.global-to-local, align 4
  store i32 268468996, i32* @lr, align 4
  %v4_10008300 = call i32 @function_10007bec(i32 %v0_100082f8, i32 ptrtoint (i32* @global_var_1000d584.229 to i32), i32 1)
  store i32 ptrtoint (i32* @global_var_1000d58c.230 to i32), i32* %r4.global-to-local, align 4
  %v0_1000830c = load i32, i32* @r28, align 4
  store i32 %v0_1000830c, i32* %r3.global-to-local, align 4
  store i32 268469016, i32* @lr, align 4
  %v4_10008314 = call i32 @function_10007bec(i32 %v0_1000830c, i32 ptrtoint (i32* @global_var_1000d58c.230 to i32), i32 1)
  store i32 ptrtoint (i32* @global_var_1000d594.231 to i32), i32* %r4.global-to-local, align 4
  %v0_10008320 = load i32, i32* @r28, align 4
  store i32 %v0_10008320, i32* %r3.global-to-local, align 4
  store i32 268469036, i32* @lr, align 4
  %v4_10008328 = call i32 @function_10007bec(i32 %v0_10008320, i32 ptrtoint (i32* @global_var_1000d594.231 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_1000d59c.232 to i32), i32* %r4.global-to-local, align 4
  %v0_10008334 = load i32, i32* @r28, align 4
  store i32 %v0_10008334, i32* %r3.global-to-local, align 4
  store i32 268469056, i32* @lr, align 4
  %v5_1000833c = call i32 @function_10007bec(i32 %v0_10008334, i32 ptrtoint ([6 x i8]* @global_var_1000d59c.232 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1000d5a4.233 to i32), i32* %r4.global-to-local, align 4
  %v0_10008348 = load i32, i32* @r28, align 4
  store i32 %v0_10008348, i32* %r3.global-to-local, align 4
  store i32 268469076, i32* @lr, align 4
  %v5_10008350 = call i32 @function_10007bec(i32 %v0_10008348, i32 ptrtoint ([5 x i8]* @global_var_1000d5a4.233 to i32), i32 4)
  store i32 ptrtoint ([6 x i8]* @global_var_1000d5ac.234 to i32), i32* %r4.global-to-local, align 4
  %v0_1000835c = load i32, i32* @r28, align 4
  store i32 %v0_1000835c, i32* %r3.global-to-local, align 4
  store i32 268469096, i32* @lr, align 4
  %v5_10008364 = call i32 @function_10007bec(i32 %v0_1000835c, i32 ptrtoint ([6 x i8]* @global_var_1000d5ac.234 to i32), i32 1)
  store i32 ptrtoint (i32* @global_var_1000d5b4.235 to i32), i32* %r4.global-to-local, align 4
  %v0_10008370 = load i32, i32* @r28, align 4
  store i32 %v0_10008370, i32* %r3.global-to-local, align 4
  store i32 268469116, i32* @lr, align 4
  %v4_10008378 = call i32 @function_10007bec(i32 %v0_10008370, i32 ptrtoint (i32* @global_var_1000d5b4.235 to i32), i32 1)
  %v0_1000837c = load i32, i32* @r28, align 4
  store i32 %v0_1000837c, i32* %r3.global-to-local, align 4
  %v0_10008380 = load i32, i32* @r29, align 4
  store i32 %v0_10008380, i32* %r4.global-to-local, align 4
  store i32 268469132, i32* @lr, align 4
  %v4_10008388 = call i32 @function_10007bec(i32 %v0_1000837c, i32 %v0_10008380, i32 1)
  store i32 ptrtoint ([7 x i8]* @global_var_1000d5d4.236 to i32), i32* %r4.global-to-local, align 4
  %v0_10008394 = load i32, i32* @r28, align 4
  store i32 %v0_10008394, i32* %r3.global-to-local, align 4
  store i32 268469152, i32* @lr, align 4
  %v5_1000839c = call i32 @function_10007bec(i32 %v0_10008394, i32 ptrtoint ([7 x i8]* @global_var_1000d5d4.236 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1000d5dc.237 to i32), i32* %r4.global-to-local, align 4
  %v0_100083a8 = load i32, i32* @r28, align 4
  store i32 %v0_100083a8, i32* %r3.global-to-local, align 4
  store i32 268469172, i32* @lr, align 4
  %v5_100083b0 = call i32 @function_10007bec(i32 %v0_100083a8, i32 ptrtoint ([5 x i8]* @global_var_1000d5dc.237 to i32), i32 1)
  store i32 ptrtoint ([9 x i8]* @global_var_1000d5e4.238 to i32), i32* %r4.global-to-local, align 4
  %v0_100083c0 = load i32, i32* @r28, align 4
  store i32 %v0_100083c0, i32* %r3.global-to-local, align 4
  store i32 268469192, i32* @lr, align 4
  %v5_100083c4 = call i32 @function_10007bec(i32 %v0_100083c0, i32 ptrtoint ([9 x i8]* @global_var_1000d5e4.238 to i32), i32 1)
  %v0_100083c8 = load i32, i32* @r28, align 4
  store i32 %v0_100083c8, i32* %r3.global-to-local, align 4
  %v0_100083cc = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_100083cc, i32* %r4.global-to-local, align 4
  store i32 268469208, i32* @lr, align 4
  %v5_100083d4 = call i32 @function_10007bec(i32 %v0_100083c8, i32 %v0_100083cc, i32 1)
  store i32 ptrtoint ([8 x i8]* @global_var_1000d5f0.239 to i32), i32* %r4.global-to-local, align 4
  %v0_100083e0 = load i32, i32* @r28, align 4
  store i32 %v0_100083e0, i32* %r3.global-to-local, align 4
  store i32 268469228, i32* @lr, align 4
  %v5_100083e8 = call i32 @function_10007bec(i32 %v0_100083e0, i32 ptrtoint ([8 x i8]* @global_var_1000d5f0.239 to i32), i32 1)
  %v0_100083f0 = load i32, i32* @r28, align 4
  store i32 %v0_100083f0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000d5f8.240 to i32), i32* %r4.global-to-local, align 4
  store i32 268469248, i32* @lr, align 4
  %v4_100083fc = call i32 @function_10007bec(i32 %v0_100083f0, i32 ptrtoint (i32* @global_var_1000d5f8.240 to i32), i32 1)
  store i32 ptrtoint (i32* @global_var_1000d604.241 to i32), i32* %r4.global-to-local, align 4
  %v0_1000840c = load i32, i32* @r27, align 4
  store i32 %v0_1000840c, i32* %r3.global-to-local, align 4
  store i32 268469268, i32* @lr, align 4
  %v4_10008410 = call i32 @function_10007bec(i32 %v0_1000840c, i32 ptrtoint (i32* @global_var_1000d604.241 to i32), i32 1)
  %v0_10008414 = load i32, i32* @r27, align 4
  store i32 %v0_10008414, i32* %r3.global-to-local, align 4
  %v0_10008418 = load i32, i32* %r18.global-to-local, align 4
  store i32 %v0_10008418, i32* %r4.global-to-local, align 4
  store i32 268469284, i32* @lr, align 4
  %v4_10008420 = call i32 @function_10007bec(i32 %v0_10008414, i32 %v0_10008418, i32 1)
  %v0_10008424 = load i32, i32* @r27, align 4
  store i32 %v0_10008424, i32* %r3.global-to-local, align 4
  %v0_10008428 = load i32, i32* @r22, align 4
  store i32 %v0_10008428, i32* %r4.global-to-local, align 4
  store i32 268469300, i32* @lr, align 4
  %sext8 = mul i32 %v0_10008428, 16777216
  %v3_10008430 = sdiv i32 %sext8, 16777216
  %v5_10008430 = call i32 @function_10007bec(i32 %v0_10008424, i32 %v3_10008430, i32 1)
  %v0_10008434 = load i32, i32* @r27, align 4
  store i32 %v0_10008434, i32* %r3.global-to-local, align 4
  %v0_10008438 = load i32, i32* @r24, align 4
  store i32 %v0_10008438, i32* %r4.global-to-local, align 4
  store i32 268469316, i32* @lr, align 4
  %v4_10008440 = call i32 @function_10007bec(i32 %v0_10008434, i32 %v0_10008438, i32 1)
  %v0_10008444 = load i32, i32* @r27, align 4
  store i32 %v0_10008444, i32* %r3.global-to-local, align 4
  %v0_10008448 = load i32, i32* @r25, align 4
  store i32 %v0_10008448, i32* %r4.global-to-local, align 4
  store i32 268469332, i32* @lr, align 4
  %v4_10008450 = call i32 @function_10007bec(i32 %v0_10008444, i32 %v0_10008448, i32 1)
  %v0_10008454 = load i32, i32* @r27, align 4
  store i32 %v0_10008454, i32* %r3.global-to-local, align 4
  %v0_10008458 = load i32, i32* @r29, align 4
  store i32 %v0_10008458, i32* %r4.global-to-local, align 4
  store i32 268469348, i32* @lr, align 4
  %v4_10008460 = call i32 @function_10007bec(i32 %v0_10008454, i32 %v0_10008458, i32 1)
  store i32 ptrtoint (i32* @global_var_1000d60c.242 to i32), i32* %r4.global-to-local, align 4
  %v0_10008470 = load i32, i32* @r27, align 4
  store i32 %v0_10008470, i32* %r3.global-to-local, align 4
  store i32 268469368, i32* @lr, align 4
  %v4_10008474 = call i32 @function_10007bec(i32 %v0_10008470, i32 ptrtoint (i32* @global_var_1000d60c.242 to i32), i32 1)
  %v0_10008478 = load i32, i32* @r27, align 4
  store i32 %v0_10008478, i32* %r3.global-to-local, align 4
  %v0_1000847c = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_1000847c, i32* %r4.global-to-local, align 4
  store i32 268469384, i32* @lr, align 4
  %v5_10008484 = call i32 @function_10007bec(i32 %v0_10008478, i32 %v0_1000847c, i32 1)
  %v0_10008488 = load i32, i32* @r27, align 4
  store i32 %v0_10008488, i32* %r3.global-to-local, align 4
  %v0_1000848c = load i32, i32* %r17.global-to-local, align 4
  store i32 %v0_1000848c, i32* %r4.global-to-local, align 4
  store i32 268469400, i32* @lr, align 4
  %v5_10008494 = call i32 @function_10007bec(i32 %v0_10008488, i32 %v0_1000848c, i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1000d678.243 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1000d678.243 to i32), i32* %r4.global-to-local, align 4
  store i32 268469420, i32* @lr, align 4
  %v4_100084a8 = call i32 @function_10007bec(i32 ptrtoint ([5 x i8]* @global_var_1000d678.243 to i32), i32 1, i32 1)
  store i32 ptrtoint ([7 x i8]* @global_var_1000d614.244 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1000d61c.245 to i32), i32* %r4.global-to-local, align 4
  store i32 268469444, i32* @lr, align 4
  %v5_100084c0 = call i32 @function_10007bec(i32 ptrtoint ([7 x i8]* @global_var_1000d614.244 to i32), i32 ptrtoint ([7 x i8]* @global_var_1000d61c.245 to i32), i32 1)
  store i32 %v5_100084c0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100084c4

dec_label_pc_100084c4:                            ; preds = %dec_label_pc_100089a4, %dec_label_pc_10007f70
  %v3_100084c4 = load i32, i32* @global_var_1001e1a8.181, align 4
  store i32 %v3_100084c4, i32* @r29, align 4
  %v0_100084c8 = load i32, i32* %r21.global-to-local, align 4
  %v2_100084c8 = icmp slt i32 %v0_100084c8, %v3_100084c4
  %v4_100084c8 = icmp eq i32 %v0_100084c8, %v3_100084c4
  store i1 %v2_100084c8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100084c8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100084c8, label %dec_label_pc_100086c0, label %dec_label_pc_100084d0

dec_label_pc_100084d0:                            ; preds = %dec_label_pc_100084c4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_100084d4 = ptrtoint i32* %stack_var_-1872 to i32
  store i32 %v2_100084d4, i32* @r26, align 4
  store i64 0, i64* %stack_var_-1900, align 8
  store i32 0, i32* @r28, align 4
  store i32 0, i32* @r27, align 4
  br label %dec_label_pc_100084e4

dec_label_pc_100084e4:                            ; preds = %dec_label_pc_100085ec.dec_label_pc_100084e4_crit_edge, %dec_label_pc_100084d0
  %v0_100084e4 = phi i32 [ %v0_100084e4.pre, %dec_label_pc_100085ec.dec_label_pc_100084e4_crit_edge ], [ 0, %dec_label_pc_100084d0 ]
  store i32 %v0_100084e4, i32* %stack_var_-1872, align 4
  %v0_100084f4 = call i32 @function_1000723c()
  %v1_100084f4 = trunc i32 %v0_100084f4 to i16
  store i32 %v0_100084f4, i32* %r3.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i16 %v1_100084f4, i16* bitcast (i32* @global_var_1001e240.196 to i16*), align 4
  %v3_10008500 = load i32, i32* @global_var_1001e180.71, align 4
  store i32 %v3_10008500, i32* %r0.global-to-local, align 4
  store i32 %v3_10008500, i32* @global_var_1001e248.246, align 4
  br label %dec_label_pc_10008508.preheader

dec_label_pc_10008508.preheader:                  ; preds = %dec_label_pc_100084e4, %dec_label_pc_10008b68
  br label %dec_label_pc_10008508

dec_label_pc_10008508:                            ; preds = %dec_label_pc_10008bb0, %dec_label_pc_10008b9c, %dec_label_pc_10008b90, %dec_label_pc_10008b7c, %dec_label_pc_100085e4, %dec_label_pc_100085dc, %dec_label_pc_100085d4, %dec_label_pc_100085cc, %dec_label_pc_100085c4, %dec_label_pc_100085bc, %dec_label_pc_100085b4, %dec_label_pc_100085ac, %dec_label_pc_100085a4, %dec_label_pc_1000859c, %dec_label_pc_10008594, %dec_label_pc_10008584, %dec_label_pc_1000857c, %dec_label_pc_1000854c, %dec_label_pc_10008544, %dec_label_pc_10008534, %dec_label_pc_1000852c, %dec_label_pc_10008524, %dec_label_pc_10008508, %dec_label_pc_10008508.preheader
  %v0_10008508 = call i32 @function_1000723c()
  store i32 %v0_10008508, i32* %r3.global-to-local, align 4
  %v1_1000850c = urem i32 %v0_10008508, 256
  store i32 %v1_1000850c, i32* %r11.global-to-local, align 4
  %v1_10008510 = udiv i32 %v0_10008508, 16777216
  store i32 %v1_10008510, i32* %r10.global-to-local, align 4
  %v1_10008514 = icmp ult i32 %v1_1000850c, 127
  %v3_10008514 = icmp eq i32 %v1_1000850c, 127
  store i1 %v1_10008514, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008514, i1* %cr7_eq.global-to-local, align 1
  %v1_10008518 = call i32 @__asm_rlwinm(i32 %v0_10008508, i32 24, i32 24, i32 31)
  store i32 %v1_10008518, i32* @r9, align 4
  %v1_1000851c = call i32 @__asm_rlwinm(i32 %v0_10008508, i32 16, i32 24, i32 31)
  store i32 %v1_1000851c, i32* %r3.global-to-local, align 4
  %v0_10008520 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10008520, label %dec_label_pc_10008508, label %dec_label_pc_10008524

dec_label_pc_10008524:                            ; preds = %dec_label_pc_10008508
  %v0_10008524 = load i32, i32* %r11.global-to-local, align 4
  %v1_10008524 = icmp slt i32 %v0_10008524, 0
  %v3_10008524 = icmp eq i32 %v0_10008524, 0
  store i1 %v1_10008524, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008524, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008524, label %dec_label_pc_10008508, label %dec_label_pc_1000852c

dec_label_pc_1000852c:                            ; preds = %dec_label_pc_10008524
  %v1_1000852c = icmp slt i32 %v0_10008524, 3
  %v3_1000852c = icmp eq i32 %v0_10008524, 3
  store i1 %v1_1000852c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000852c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000852c, label %dec_label_pc_10008508, label %dec_label_pc_10008534

dec_label_pc_10008534:                            ; preds = %dec_label_pc_1000852c
  %v1_10008534 = add i32 %v0_10008524, 241
  %v1_10008538 = urem i32 %v1_10008534, 256
  store i32 %v1_10008538, i32* %r0.global-to-local, align 4
  %v1_1000853c = icmp eq i32 %v1_10008538, 0
  %v3_1000853c = icmp eq i32 %v1_10008538, 1
  store i1 %v1_1000853c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000853c, i1* %cr7_eq.global-to-local, align 1
  %tmp107 = or i32 %v1_10008538, 1
  %tmp108 = icmp eq i32 %tmp107, 1
  br i1 %tmp108, label %dec_label_pc_10008508, label %dec_label_pc_10008544

dec_label_pc_10008544:                            ; preds = %dec_label_pc_10008534
  %v1_10008544 = icmp slt i32 %v0_10008524, 56
  %v3_10008544 = icmp eq i32 %v0_10008524, 56
  store i1 %v1_10008544, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008544, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008544, label %dec_label_pc_10008508, label %dec_label_pc_1000854c

dec_label_pc_1000854c:                            ; preds = %dec_label_pc_10008544
  %v1_1000854c = icmp slt i32 %v0_10008524, 10
  %v3_1000854c = icmp eq i32 %v0_10008524, 10
  store i1 %v1_1000854c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000854c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000854c, label %dec_label_pc_10008508, label %dec_label_pc_10008554

dec_label_pc_10008554:                            ; preds = %dec_label_pc_1000854c
  %v1_10008554 = icmp slt i32 %v0_10008524, 192
  %v3_10008554 = icmp eq i32 %v0_10008524, 192
  store i1 %v1_10008554, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008554, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008554, label %dec_label_pc_10008b68, label %dec_label_pc_1000855c

dec_label_pc_1000855c:                            ; preds = %dec_label_pc_10008554
  %v1_1000855c = icmp slt i32 %v0_10008524, 172
  %v3_1000855c = icmp eq i32 %v0_10008524, 172
  store i1 %v1_1000855c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000855c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000855c, label %dec_label_pc_10008b74, label %dec_label_pc_10008564

dec_label_pc_10008564:                            ; preds = %dec_label_pc_1000855c
  %v1_10008564 = icmp slt i32 %v0_10008524, 100
  %v3_10008564 = icmp eq i32 %v0_10008524, 100
  store i1 %v1_10008564, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008564, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008564, label %dec_label_pc_10008b88, label %dec_label_pc_1000856c

dec_label_pc_1000856c:                            ; preds = %dec_label_pc_10008564
  %v1_1000856c = icmp slt i32 %v0_10008524, 169
  %v3_1000856c = icmp eq i32 %v0_10008524, 169
  store i1 %v1_1000856c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000856c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000856c, label %dec_label_pc_10008b9c, label %dec_label_pc_10008574

dec_label_pc_10008574:                            ; preds = %dec_label_pc_1000856c
  %v1_10008574 = icmp slt i32 %v0_10008524, 198
  %v3_10008574 = icmp eq i32 %v0_10008524, 198
  store i1 %v1_10008574, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008574, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008574, label %dec_label_pc_10008ba8, label %dec_label_pc_1000857c

dec_label_pc_1000857c:                            ; preds = %dec_label_pc_10008574
  %v1_1000857c = icmp ult i32 %v0_10008524, 223
  %v2_1000857c = icmp ugt i32 %v0_10008524, 223
  %v3_1000857c = icmp eq i32 %v0_10008524, 223
  store i1 %v1_1000857c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000857c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1000857c, label %dec_label_pc_10008508, label %dec_label_pc_10008584

dec_label_pc_10008584:                            ; preds = %dec_label_pc_1000857c
  %v1_10008584 = add i32 %v0_10008524, 250
  %v1_10008588 = urem i32 %v1_10008584, 256
  store i32 %v1_10008588, i32* %r0.global-to-local, align 4
  %v1_1000858c = icmp eq i32 %v1_10008588, 0
  %v3_1000858c = icmp eq i32 %v1_10008588, 1
  store i1 %v1_1000858c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000858c, i1* %cr7_eq.global-to-local, align 1
  %tmp109 = or i32 %v1_10008588, 1
  %tmp110 = icmp eq i32 %tmp109, 1
  br i1 %tmp110, label %dec_label_pc_10008508, label %dec_label_pc_10008594

dec_label_pc_10008594:                            ; preds = %dec_label_pc_10008584
  %v1_10008594 = icmp slt i32 %v0_10008524, 11
  %v3_10008594 = icmp eq i32 %v0_10008524, 11
  store i1 %v1_10008594, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008594, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008594, label %dec_label_pc_10008508, label %dec_label_pc_1000859c

dec_label_pc_1000859c:                            ; preds = %dec_label_pc_10008594
  %v1_1000859c = icmp slt i32 %v0_10008524, 21
  %v3_1000859c = icmp eq i32 %v0_10008524, 21
  store i1 %v1_1000859c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000859c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000859c, label %dec_label_pc_10008508, label %dec_label_pc_100085a4

dec_label_pc_100085a4:                            ; preds = %dec_label_pc_1000859c
  %v1_100085a4 = icmp slt i32 %v0_10008524, 22
  %v3_100085a4 = icmp eq i32 %v0_10008524, 22
  store i1 %v1_100085a4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100085a4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100085a4, label %dec_label_pc_10008508, label %dec_label_pc_100085ac

dec_label_pc_100085ac:                            ; preds = %dec_label_pc_100085a4
  %v1_100085ac = icmp slt i32 %v0_10008524, 26
  %v3_100085ac = icmp eq i32 %v0_10008524, 26
  store i1 %v1_100085ac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100085ac, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100085ac, label %dec_label_pc_10008508, label %dec_label_pc_100085b4

dec_label_pc_100085b4:                            ; preds = %dec_label_pc_100085ac
  %v1_100085b4 = icmp slt i32 %v0_10008524, 28
  %v3_100085b4 = icmp eq i32 %v0_10008524, 28
  store i1 %v1_100085b4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100085b4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100085b4, label %dec_label_pc_10008508, label %dec_label_pc_100085bc

dec_label_pc_100085bc:                            ; preds = %dec_label_pc_100085b4
  %v1_100085bc = icmp slt i32 %v0_10008524, 29
  %v3_100085bc = icmp eq i32 %v0_10008524, 29
  store i1 %v1_100085bc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100085bc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100085bc, label %dec_label_pc_10008508, label %dec_label_pc_100085c4

dec_label_pc_100085c4:                            ; preds = %dec_label_pc_100085bc
  %v1_100085c4 = icmp slt i32 %v0_10008524, 30
  %v3_100085c4 = icmp eq i32 %v0_10008524, 30
  store i1 %v1_100085c4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100085c4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100085c4, label %dec_label_pc_10008508, label %dec_label_pc_100085cc

dec_label_pc_100085cc:                            ; preds = %dec_label_pc_100085c4
  %v1_100085cc = icmp slt i32 %v0_10008524, 33
  %v3_100085cc = icmp eq i32 %v0_10008524, 33
  store i1 %v1_100085cc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100085cc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100085cc, label %dec_label_pc_10008508, label %dec_label_pc_100085d4

dec_label_pc_100085d4:                            ; preds = %dec_label_pc_100085cc
  %v1_100085d4 = icmp slt i32 %v0_10008524, 55
  %v3_100085d4 = icmp eq i32 %v0_10008524, 55
  store i1 %v1_100085d4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100085d4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100085d4, label %dec_label_pc_10008508, label %dec_label_pc_100085dc

dec_label_pc_100085dc:                            ; preds = %dec_label_pc_100085d4
  %v1_100085dc = icmp slt i32 %v0_10008524, 214
  %v3_100085dc = icmp eq i32 %v0_10008524, 214
  store i1 %v1_100085dc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100085dc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100085dc, label %dec_label_pc_10008508, label %dec_label_pc_100085e4

dec_label_pc_100085e4:                            ; preds = %dec_label_pc_100085dc
  %v1_100085e4 = icmp slt i32 %v0_10008524, 215
  %v3_100085e4 = icmp eq i32 %v0_10008524, 215
  store i1 %v1_100085e4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100085e4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100085e4, label %dec_label_pc_10008508, label %dec_label_pc_100085e4.dec_label_pc_100085ec.loopexit_crit_edge

dec_label_pc_100085e4.dec_label_pc_100085ec.loopexit_crit_edge: ; preds = %dec_label_pc_100085e4
  %v0_100085f0.pre.pre = load i32, i32* @r9, align 4
  br label %dec_label_pc_100085ec

dec_label_pc_100085ec:                            ; preds = %dec_label_pc_10008bb0, %dec_label_pc_10008b9c, %dec_label_pc_10008b90, %dec_label_pc_10008b7c, %dec_label_pc_10008ba8, %dec_label_pc_10008b88, %dec_label_pc_10008b74, %dec_label_pc_100085e4.dec_label_pc_100085ec.loopexit_crit_edge, %dec_label_pc_10008b68.dec_label_pc_100085ec_crit_edge
  %v0_100085f8 = phi i32 [ %v0_100085f822, %dec_label_pc_10008b68.dec_label_pc_100085ec_crit_edge ], [ %v1_1000851c, %dec_label_pc_100085e4.dec_label_pc_100085ec.loopexit_crit_edge ], [ %v1_1000851c, %dec_label_pc_10008b74 ], [ %v1_1000851c, %dec_label_pc_10008b88 ], [ %v1_1000851c, %dec_label_pc_10008ba8 ], [ %v1_1000851c, %dec_label_pc_10008b7c ], [ %v1_1000851c, %dec_label_pc_10008b90 ], [ %v1_1000851c, %dec_label_pc_10008b9c ], [ %v1_1000851c, %dec_label_pc_10008bb0 ]
  %v0_100085f0 = phi i32 [ %v0_10008b68, %dec_label_pc_10008b68.dec_label_pc_100085ec_crit_edge ], [ %v0_100085f0.pre.pre, %dec_label_pc_100085e4.dec_label_pc_100085ec.loopexit_crit_edge ], [ %v0_10008b74, %dec_label_pc_10008b74 ], [ %v0_10008b88, %dec_label_pc_10008b88 ], [ %v0_10008ba8, %dec_label_pc_10008ba8 ], [ %v0_10008b74, %dec_label_pc_10008b7c ], [ %v0_10008b88, %dec_label_pc_10008b90 ], [ %v0_10008b9c, %dec_label_pc_10008b9c ], [ %v0_10008ba8, %dec_label_pc_10008bb0 ]
  %v0_100085ec = phi i32 [ %v0_100085ec.pre, %dec_label_pc_10008b68.dec_label_pc_100085ec_crit_edge ], [ %v0_10008524, %dec_label_pc_100085e4.dec_label_pc_100085ec.loopexit_crit_edge ], [ 172, %dec_label_pc_10008b74 ], [ 100, %dec_label_pc_10008b88 ], [ 198, %dec_label_pc_10008ba8 ], [ 172, %dec_label_pc_10008b7c ], [ 100, %dec_label_pc_10008b90 ], [ 169, %dec_label_pc_10008b9c ], [ 198, %dec_label_pc_10008bb0 ]
  %v1_100085ec = mul i32 %v0_100085ec, 16777216
  %v1_100085f0 = mul i32 %v0_100085f0, 65536
  %v2_100085f4 = or i32 %v1_100085ec, %v1_100085f0
  %v1_100085f8 = mul i32 %v0_100085f8, 256
  %v1_100085fc = load i32, i32* %r10.global-to-local, align 4
  %v2_100085fc = or i32 %v2_100085f4, %v1_100085fc
  store i32 %v2_100085fc, i32* %r0.global-to-local, align 4
  %v0_10008600 = load i32, i32* @r30, align 4
  store i32 %v0_10008600, i32* @r3, align 4
  %v2_10008604 = or i32 %v2_100085fc, %v1_100085f8
  store i32 %v2_10008604, i32* %r9.global-to-local, align 4
  store i32 20, i32* %r4.global-to-local, align 4
  store i32 %v2_10008604, i32* @global_var_1001e24c.248, align 4
  %v0_10008610 = load i32, i32* @r27, align 4
  %v1_10008610 = trunc i32 %v0_10008610 to i16
  store i16 %v1_10008610, i16* bitcast (i32* @global_var_1001e246.249 to i16*), align 4
  %v2_10008614 = call i32 @function_100056ac(i32 %v0_10008600, i32 20)
  %v3_10008614 = trunc i32 %v2_10008614 to i16
  %v3_10008618 = load i64, i64* %stack_var_-1900, align 8
  %v4_10008618 = trunc i64 %v3_10008618 to i32
  store i32 %v4_10008618, i32* %r9.global-to-local, align 4
  store i16 %v3_10008614, i16* bitcast (i32* @global_var_1001e246.249 to i16*), align 4
  %v4_10008628 = mul nsw i64 %v3_10008618, 1717986919
  %v5_10008628 = udiv i64 %v4_10008628, 4294967296
  %v6_10008628 = trunc i64 %v5_10008628 to i32
  %tmp = icmp slt i32 %v4_10008618, 0
  %v1_1000862c = zext i1 %tmp to i32
  %v2_1000862c = ashr i32 %v4_10008618, 31
  %v3_1000862c = and i32 %v2_1000862c, -2
  %v4_1000862c = or i32 %v3_1000862c, %v1_1000862c
  store i32 %v4_1000862c, i32* %r11.global-to-local, align 4
  %v1_1000863051 = udiv i64 %v4_10008628, 17179869184
  %v1_10008630 = trunc i64 %v1_1000863051 to i32
  %v2_10008630 = ashr i32 %v6_10008628, 31
  %v3_10008630 = and i32 %v2_10008630, -1073741824
  %v4_10008630 = or i32 %v3_10008630, %v1_10008630
  %v2_10008634 = sub nsw i32 %v4_10008630, %v4_1000862c
  %v1_10008638 = mul i32 %v2_10008634, 10
  %v2_1000863c = icmp slt i32 %v4_10008618, %v1_10008638
  %v4_1000863c = icmp eq i32 %v4_10008618, %v1_10008638
  store i1 %v2_1000863c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000863c, i1* %cr7_eq.global-to-local, align 1
  %.5 = select i1 %v4_1000863c, i16 2323, i16 23
  store i16 %.5, i16* @global_var_1001e252.198, align 2
  %v3_1000864c = load i32, i32* @global_var_1001e24c.248, align 4
  store i32 %v3_1000864c, i32* %r0.global-to-local, align 4
  %v0_10008650 = load i32, i32* @r31, align 4
  store i32 %v0_10008650, i32* @r4, align 4
  %v0_10008654 = load i32, i32* @r27, align 4
  %v1_10008654 = trunc i32 %v0_10008654 to i16
  store i16 %v1_10008654, i16* bitcast (i32* @global_var_1001e260.250 to i16*), align 4
  store i32 %v3_1000864c, i32* @global_var_1001e254.251, align 4
  store i32 20, i32* %r6.global-to-local, align 4
  %v0_10008664 = load i32, i32* @r30, align 4
  store i32 %v0_10008664, i32* %r3.global-to-local, align 4
  %v4_10008668 = call i32 @function_10005710(i32 %v0_10008664, i32 %v0_10008650, i32 20, i32 20)
  %v5_10008668 = trunc i32 %v4_10008668 to i16
  store i32 268566528, i32* %r10.global-to-local, align 4
  store i16 %v5_10008668, i16* bitcast (i32* @global_var_1001e260.250 to i16*), align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_10008678 = load i32, i32* @global_var_1001e24c.248, align 4
  store i32 %v3_10008678, i32* %r9.global-to-local, align 4
  %v0_1000867c = load i32, i32* @r30, align 4
  store i32 %v0_1000867c, i32* %r4.global-to-local, align 4
  %v3_10008680 = load i16, i16* @global_var_1001e252.198, align 2
  %v4_10008680 = zext i16 %v3_10008680 to i32
  store i32 %v4_10008680, i32* %r11.global-to-local, align 4
  %v3_10008688 = load i32, i32* @global_var_1001e1b0.188, align 4
  store i32 %v3_10008688, i32* %r3.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_10008690 = load i32, i32* @r26, align 4
  store i32 %v0_10008690, i32* %r7.global-to-local, align 4
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 2, i32* %stack_var_-1872, align 4
  store i32 268469928, i32* @lr, align 4
  %v6_100086a4 = call i32 @function_1000b6dc(i32 %v3_10008688, i32 %v0_1000867c, i32 40, i32 16384, i32 %v0_10008690, i32 16)
  store i32 %v6_100086a4, i32* %r3.global-to-local, align 4
  %v3_100086a8 = load i64, i64* %stack_var_-1900, align 8
  %v4_100086a8 = trunc i64 %v3_100086a8 to i32
  %v1_100086ac = add i32 %v4_100086a8, 1
  store i32 %v1_100086ac, i32* %r9.global-to-local, align 4
  %v1_100086b0 = icmp slt i32 %v1_100086ac, 159
  %v3_100086b0 = icmp eq i32 %v1_100086ac, 159
  store i1 %v1_100086b0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100086b0, i1* %cr7_eq.global-to-local, align 1
  %v5_100086b4 = sext i32 %v1_100086ac to i64
  store i64 %v5_100086b4, i64* %stack_var_-1900, align 8
  %tmp111 = icmp slt i32 %v1_100086ac, 160
  br i1 %tmp111, label %dec_label_pc_100085ec.dec_label_pc_100084e4_crit_edge, label %dec_label_pc_100086bc

dec_label_pc_100085ec.dec_label_pc_100084e4_crit_edge: ; preds = %dec_label_pc_100085ec
  %v0_100084e4.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_100084e4

dec_label_pc_100086bc:                            ; preds = %dec_label_pc_100085ec
  %v0_100086bc = load i32, i32* @r29, align 4
  store i32 %v0_100086bc, i32* %r21.global-to-local, align 4
  br label %dec_label_pc_100086c0

dec_label_pc_100086c0:                            ; preds = %dec_label_pc_100084c4, %dec_label_pc_100086bc
  %v0_100086c0 = call i32 @function_1000b0a8()
  store i32 %v0_100086c0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r29, align 4
  store i32 %v0_100086c0, i32* %r22.global-to-local, align 4
  %v2_100086d8 = ptrtoint i32* %stack_var_-1600 to i32
  %v4_10008724 = zext i8 %tmp63 to i32
  %v1_10008728 = icmp ult i8 %tmp63, 6
  %v3_10008728 = icmp eq i8 %tmp63, 6
  %v4_10008748 = zext i16 %tmp62 to i32
  %v1_10008758 = and i32 %tmp61, 131072
  %v3_10008758 = icmp eq i32 %v1_10008758, 0
  %v1_10008780 = add i32 %tmp60, -1
  %v2_10008784 = icmp slt i32 %v1_10008780, %tmp59
  %v4_10008784 = icmp eq i32 %v1_10008780, %tmp59
  %v1_10008760 = and i32 %tmp61, 1048576
  %v3_10008760 = icmp eq i32 %v1_10008760, 0
  %v1_10008768 = and i32 %tmp61, 262144
  %v3_10008768 = icmp eq i32 %v1_10008768, 0
  %v1_10008770 = and i32 %tmp61, 65536
  %v3_10008770 = icmp eq i32 %v1_10008770, 0
  br label %dec_label_pc_100086cc

dec_label_pc_100086cc:                            ; preds = %dec_label_pc_10008778, %dec_label_pc_10008770, %dec_label_pc_10008768, %dec_label_pc_10008748, %dec_label_pc_10008740, %dec_label_pc_10008724, %dec_label_pc_10008710, %dec_label_pc_10008760, %dec_label_pc_10008754, %dec_label_pc_10008708, %dec_label_pc_100086c0
  %v1_100086d4 = phi i32 [ %v0_100086c0, %dec_label_pc_100086c0 ], [ %v0_100086fc, %dec_label_pc_10008708 ], [ %v0_100086fc, %dec_label_pc_10008754 ], [ %v0_100086fc, %dec_label_pc_10008760 ], [ %v0_100086fc, %dec_label_pc_10008710 ], [ %v0_100086fc, %dec_label_pc_10008724 ], [ %v0_100086fc, %dec_label_pc_10008740 ], [ %v0_100086fc, %dec_label_pc_10008748 ], [ %v0_100086fc, %dec_label_pc_10008768 ], [ %v0_100086fc, %dec_label_pc_10008770 ], [ %v0_100086fc, %dec_label_pc_10008778 ]
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v2_100086d4 = inttoptr i32 %v1_100086d4 to i32*
  store i32 0, i32* %v2_100086d4, align 4
  store i32 %v2_100086d8, i32* %r4.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v3_100086e4 = load i32, i32* @global_var_1001e1b0.188, align 4
  store i32 %v3_100086e4, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 268470004, i32* @lr, align 4
  %v6_100086f0 = call i32 @function_1000b664(i32 %v3_100086e4, i32 %v2_100086d8, i32 1514, i32 16384, i32 0, i32 0)
  store i32 %v6_100086f0, i32* %r3.global-to-local, align 4
  %tmp112 = icmp slt i32 %v6_100086f0, 1
  br i1 %tmp112, label %dec_label_pc_1000881c, label %dec_label_pc_100086fc

dec_label_pc_100086fc:                            ; preds = %dec_label_pc_100086cc, %dec_label_pc_100087e0
  %v0_10008708 = phi i32 [ %v6_10008810, %dec_label_pc_100087e0 ], [ %v6_100086f0, %dec_label_pc_100086cc ]
  %v0_100086fc = load i32, i32* %r22.global-to-local, align 4
  %v1_100086fc = inttoptr i32 %v0_100086fc to i32*
  %v2_100086fc = load i32, i32* %v1_100086fc, align 4
  store i32 %v2_100086fc, i32* %r0.global-to-local, align 4
  %v1_10008700 = icmp slt i32 %v2_100086fc, 11
  %v3_10008700 = icmp eq i32 %v2_100086fc, 11
  store i1 %v1_10008700, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008700, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008700, label %dec_label_pc_1000881c, label %dec_label_pc_10008708

dec_label_pc_10008708:                            ; preds = %dec_label_pc_100086fc
  %v1_10008708 = icmp ult i32 %v0_10008708, 39
  %v3_10008708 = icmp eq i32 %v0_10008708, 39
  store i1 %v1_10008708, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008708, i1* %cr7_eq.global-to-local, align 1
  %tmp113 = icmp ult i32 %v0_10008708, 40
  br i1 %tmp113, label %dec_label_pc_100086cc, label %dec_label_pc_10008710

dec_label_pc_10008710:                            ; preds = %dec_label_pc_10008708
  %v3_10008714 = load i32, i32* @global_var_1001e180.71, align 4
  store i32 %v3_10008714, i32* %r0.global-to-local, align 4
  store i32 %tmp64, i32* %r9.global-to-local, align 4
  %v2_1000871c = icmp slt i32 %tmp64, %v3_10008714
  %v4_1000871c = icmp eq i32 %tmp64, %v3_10008714
  store i1 %v2_1000871c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000871c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_1000871c, label %dec_label_pc_10008724, label %dec_label_pc_100086cc

dec_label_pc_10008724:                            ; preds = %dec_label_pc_10008710
  store i32 %v4_10008724, i32* %r0.global-to-local, align 4
  store i1 %v1_10008728, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008728, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008728, label %dec_label_pc_10008730, label %dec_label_pc_100086cc

dec_label_pc_10008730:                            ; preds = %dec_label_pc_10008724
  %v2_10008730 = load i16, i16* %stack_var_-1580, align 2
  %v3_10008730 = sext i16 %v2_10008730 to i32
  store i32 %v3_10008730, i32* %r8.global-to-local, align 4
  %v1_10008734 = urem i32 %v3_10008730, 65536
  store i32 %v1_10008734, i32* %r0.global-to-local, align 4
  %v1_10008738 = icmp ult i32 %v1_10008734, 23
  %v3_10008738 = icmp eq i32 %v1_10008734, 23
  store i1 %v1_10008738, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008738, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008738, label %dec_label_pc_10008748, label %dec_label_pc_10008740

dec_label_pc_10008740:                            ; preds = %dec_label_pc_10008730
  %v1_10008740 = icmp ult i32 %v1_10008734, 2323
  %v3_10008740 = icmp eq i32 %v1_10008734, 2323
  store i1 %v1_10008740, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008740, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008740, label %dec_label_pc_10008748, label %dec_label_pc_100086cc

dec_label_pc_10008748:                            ; preds = %dec_label_pc_10008740, %dec_label_pc_10008730
  store i32 %v4_10008748, i32* %r0.global-to-local, align 4
  %v1_1000874c = load i32, i32* @r16, align 4
  %v2_1000874c = icmp slt i32 %v4_10008748, %v1_1000874c
  %v4_1000874c = icmp eq i32 %v4_10008748, %v1_1000874c
  store i1 %v2_1000874c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000874c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_1000874c, label %dec_label_pc_10008754, label %dec_label_pc_100086cc

dec_label_pc_10008754:                            ; preds = %dec_label_pc_10008748
  store i32 %tmp61, i32* %r0.global-to-local, align 4
  store i32 %v1_10008758, i32* %r10.global-to-local, align 4
  br i1 %v3_10008758, label %dec_label_pc_100086cc, label %dec_label_pc_10008760

dec_label_pc_10008760:                            ; preds = %dec_label_pc_10008754
  store i32 %v1_10008760, i32* %r11.global-to-local, align 4
  br i1 %v3_10008760, label %dec_label_pc_100086cc, label %dec_label_pc_10008768

dec_label_pc_10008768:                            ; preds = %dec_label_pc_10008760
  store i32 %v1_10008768, i32* %r9.global-to-local, align 4
  br i1 %v3_10008768, label %dec_label_pc_10008770, label %dec_label_pc_100086cc

dec_label_pc_10008770:                            ; preds = %dec_label_pc_10008768
  store i32 %v1_10008770, i32* %r10.global-to-local, align 4
  br i1 %v3_10008770, label %dec_label_pc_10008778, label %dec_label_pc_100086cc

dec_label_pc_10008778:                            ; preds = %dec_label_pc_10008770
  store i32 %tmp60, i32* %r9.global-to-local, align 4
  store i32 %tmp59, i32* %r0.global-to-local, align 4
  store i32 %v1_10008780, i32* %r10.global-to-local, align 4
  store i1 %v2_10008784, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10008784, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10008784, label %dec_label_pc_1000878c, label %dec_label_pc_100086cc

dec_label_pc_1000878c:                            ; preds = %dec_label_pc_10008778
  %v0_1000878c = load i32, i32* @r29, align 4
  %v1_1000878c = icmp slt i32 %v0_1000878c, 127
  %v2_1000878c = icmp sgt i32 %v0_1000878c, 127
  %v3_1000878c = icmp eq i32 %v0_1000878c, 127
  store i1 %v1_1000878c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000878c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1000878c, label %dec_label_pc_1000881c, label %dec_label_pc_10008794

dec_label_pc_10008794:                            ; preds = %dec_label_pc_1000878c
  %v3_1000879c = load i32, i32* @global_var_1001e1ac.187, align 4
  store i32 %v3_1000879c, i32* %r11.global-to-local, align 4
  %v1_100087a0 = mul i32 %v0_1000878c, 256
  store i32 %v1_100087a0, i32* %r9.global-to-local, align 4
  %v2_100087a4 = mul i32 %v0_1000878c, 288
  store i32 %v2_100087a4, i32* %r0.global-to-local, align 4
  %v2_100087a8 = add i32 %v3_1000879c, %v2_100087a4
  store i32 %v2_100087a8, i32* @r3, align 4
  %v1_100087ac = add i32 %v2_100087a8, 12
  %v2_100087ac = inttoptr i32 %v1_100087ac to i32*
  %v3_100087ac = load i32, i32* %v2_100087ac, align 4
  store i32 %v3_100087ac, i32* %r9.global-to-local, align 4
  %v1_100087b0 = icmp slt i32 %v3_100087ac, 0
  %v3_100087b0 = icmp eq i32 %v3_100087ac, 0
  store i1 %v1_100087b0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100087b0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100087b0, label %dec_label_pc_100087e0, label %dec_label_pc_100087b8

dec_label_pc_100087b8:                            ; preds = %dec_label_pc_10008794
  %v1_100087b8 = sub i32 128, %v0_1000878c
  store i32 %v1_100087b8, i32* %r11.global-to-local, align 4
  %v1_100087bc = add i32 %v2_100087a8, 288
  store i32 %v1_100087bc, i32* %r9.global-to-local, align 4
  store i32 %v1_100087b8, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_100087c4

dec_label_pc_100087c4:                            ; preds = %dec_label_pc_100087cc, %dec_label_pc_100087b8
  %v0_100087cc = phi i32 [ %v1_100087d4, %dec_label_pc_100087cc ], [ %v1_100087bc, %dec_label_pc_100087b8 ]
  %v0_100087c8 = phi i32 [ %v1_100087c8, %dec_label_pc_100087cc ], [ %v1_100087b8, %dec_label_pc_100087b8 ]
  %v0_100087c4 = phi i32 [ %v1_100087c4, %dec_label_pc_100087cc ], [ %v0_1000878c, %dec_label_pc_100087b8 ]
  %v1_100087c4 = add i32 %v0_100087c4, 1
  store i32 %v1_100087c4, i32* @r29, align 4
  %v1_100087c8 = add i32 %v0_100087c8, -1
  store i32 %v1_100087c8, i32* %ctr.global-to-local, align 4
  %v2_100087c8 = icmp eq i32 %v1_100087c8, 0
  br i1 %v2_100087c8, label %dec_label_pc_1000881c, label %dec_label_pc_100087cc

dec_label_pc_100087cc:                            ; preds = %dec_label_pc_100087c4
  %v1_100087cc = add i32 %v0_100087cc, 12
  %v2_100087cc = inttoptr i32 %v1_100087cc to i32*
  %v3_100087cc = load i32, i32* %v2_100087cc, align 4
  store i32 %v3_100087cc, i32* %r0.global-to-local, align 4
  store i32 %v0_100087cc, i32* @r3, align 4
  %v1_100087d4 = add i32 %v0_100087cc, 288
  store i32 %v1_100087d4, i32* %r9.global-to-local, align 4
  %v1_100087d8 = icmp slt i32 %v3_100087cc, 0
  %v3_100087d8 = icmp eq i32 %v3_100087cc, 0
  store i1 %v1_100087d8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100087d8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100087d8, label %dec_label_pc_100087e0, label %dec_label_pc_100087c4

dec_label_pc_100087e0:                            ; preds = %dec_label_pc_100087cc, %dec_label_pc_10008794
  %v1_100087e0 = phi i32 [ %v2_100087a8, %dec_label_pc_10008794 ], [ %v0_100087cc, %dec_label_pc_100087cc ]
  %v2_100087e0 = add i32 %v1_100087e0, 16
  %v3_100087e0 = inttoptr i32 %v2_100087e0 to i32*
  store i32 %tmp59, i32* %v3_100087e0, align 4
  %v0_100087e4 = load i32, i32* %r8.global-to-local, align 4
  %v1_100087e4 = trunc i32 %v0_100087e4 to i16
  %v2_100087e4 = load i32, i32* @r3, align 4
  %v3_100087e4 = add i32 %v2_100087e4, 20
  %v4_100087e4 = inttoptr i32 %v3_100087e4 to i16*
  store i16 %v1_100087e4, i16* %v4_100087e4, align 2
  store i32 ptrtoint (i32* @global_var_100087ec.252 to i32), i32* @lr, align 4
  %v0_100087e8 = call i32 @function_10007b00()
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_100087f0 = load i32, i32* %r22.global-to-local, align 4
  %v2_100087f0 = inttoptr i32 %v1_100087f0 to i32*
  store i32 0, i32* %v2_100087f0, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v2_100086d8, i32* %r4.global-to-local, align 4
  %v3_10008800 = load i32, i32* @global_var_1001e1b0.188, align 4
  store i32 %v3_10008800, i32* %r3.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 268470292, i32* @lr, align 4
  %v6_10008810 = call i32 @function_1000b664(i32 %v3_10008800, i32 %v2_100086d8, i32 1514, i32 16384, i32 0, i32 0)
  store i32 %v6_10008810, i32* %r3.global-to-local, align 4
  %v2_10008814 = icmp sgt i32 %v6_10008810, 0
  br i1 %v2_10008814, label %dec_label_pc_100086fc, label %dec_label_pc_1000881c

dec_label_pc_1000881c:                            ; preds = %dec_label_pc_100086cc, %dec_label_pc_100087e0, %dec_label_pc_1000878c, %dec_label_pc_100086fc, %dec_label_pc_100087c4
  store i32 32, i32* %r10.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 64, i32* %r11.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v2_10008834145 = load i32, i32* @r1, align 4
  %v3_10008834146 = add i32 %v2_10008834145, 64
  %v4_10008834147 = inttoptr i32 %v3_10008834146 to i32*
  store i32 0, i32* %v4_10008834147, align 4
  %v0_10008838148 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008838149 = add i32 %v0_10008838148, -1
  store i32 %v1_10008838149, i32* %ctr.global-to-local, align 4
  %v2_10008838150 = icmp eq i32 %v1_10008838149, 0
  br i1 %v2_10008838150, label %dec_label_pc_1000883c, label %dec_label_pc_1000882c.dec_label_pc_1000882c_crit_edge

dec_label_pc_1000882c.dec_label_pc_1000882c_crit_edge: ; preds = %dec_label_pc_1000881c, %dec_label_pc_1000882c.dec_label_pc_1000882c_crit_edge
  %v0_1000882c.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_10008834.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_1000882c = add i32 %v0_1000882c.pre, 64
  store i32 %v1_1000882c, i32* %r11.global-to-local, align 4
  %v1_10008830 = add i32 %v0_1000882c.pre, 4
  store i32 %v1_10008830, i32* %r9.global-to-local, align 4
  %v2_10008834 = load i32, i32* @r1, align 4
  %v3_10008834 = add i32 %v2_10008834, %v1_1000882c
  %v4_10008834 = inttoptr i32 %v3_10008834 to i32*
  store i32 %v0_10008834.pre, i32* %v4_10008834, align 4
  %v0_10008838 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008838 = add i32 %v0_10008838, -1
  store i32 %v1_10008838, i32* %ctr.global-to-local, align 4
  %v2_10008838 = icmp eq i32 %v1_10008838, 0
  br i1 %v2_10008838, label %dec_label_pc_1000883c, label %dec_label_pc_1000882c.dec_label_pc_1000882c_crit_edge

dec_label_pc_1000883c:                            ; preds = %dec_label_pc_1000882c.dec_label_pc_1000882c_crit_edge, %dec_label_pc_1000881c
  store i32 32, i32* %r10.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 192, i32* %r11.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v2_10008854139 = load i32, i32* @r1, align 4
  %v3_10008854140 = add i32 %v2_10008854139, 192
  %v4_10008854141 = inttoptr i32 %v3_10008854140 to i32*
  store i32 0, i32* %v4_10008854141, align 4
  %v0_10008858142 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008858143 = add i32 %v0_10008858142, -1
  store i32 %v1_10008858143, i32* %ctr.global-to-local, align 4
  %v2_10008858144 = icmp eq i32 %v1_10008858143, 0
  br i1 %v2_10008858144, label %dec_label_pc_1000885c, label %dec_label_pc_1000884c.dec_label_pc_1000884c_crit_edge

dec_label_pc_1000884c.dec_label_pc_1000884c_crit_edge: ; preds = %dec_label_pc_1000883c, %dec_label_pc_1000884c.dec_label_pc_1000884c_crit_edge
  %v0_1000884c.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_10008854.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_1000884c = add i32 %v0_1000884c.pre, 192
  store i32 %v1_1000884c, i32* %r11.global-to-local, align 4
  %v1_10008850 = add i32 %v0_1000884c.pre, 4
  store i32 %v1_10008850, i32* %r9.global-to-local, align 4
  %v2_10008854 = load i32, i32* @r1, align 4
  %v3_10008854 = add i32 %v2_10008854, %v1_1000884c
  %v4_10008854 = inttoptr i32 %v3_10008854 to i32*
  store i32 %v0_10008854.pre, i32* %v4_10008854, align 4
  %v0_10008858 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008858 = add i32 %v0_10008858, -1
  store i32 %v1_10008858, i32* %ctr.global-to-local, align 4
  %v2_10008858 = icmp eq i32 %v1_10008858, 0
  br i1 %v2_10008858, label %dec_label_pc_1000885c, label %dec_label_pc_1000884c.dec_label_pc_1000884c_crit_edge

dec_label_pc_1000885c:                            ; preds = %dec_label_pc_1000884c.dec_label_pc_1000884c_crit_edge, %dec_label_pc_1000883c
  %v0_1000885c = load i32, i32* %r0.global-to-local, align 4
  %v5_1000885c = sext i32 %v0_1000885c to i64
  store i64 %v5_1000885c, i64* %stack_var_-1900, align 8
  store i32 0, i32* @r27, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  store i32 0, i32* %r25.global-to-local, align 4
  %v2_10008bdc = ptrtoint i32* %stack_var_-1912 to i32
  br label %dec_label_pc_100088c8

dec_label_pc_10008878:                            ; preds = %dec_label_pc_100088f0
  %v1_10008878 = icmp slt i32 %v3_100088e4, 1
  store i1 %v1_10008878, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100088e8, i1* %cr7_eq.global-to-local, align 1
  %v1_10008bd8 = add i32 %v2_100088e0, 4
  %v2_10008bd8 = inttoptr i32 %v1_10008bd8 to i32*
  %v3_10008bd8 = load i32, i32* %v2_10008bd8, align 4
  store i32 %v3_10008bd8, i32* %r3.global-to-local, align 4
  br i1 %v3_100088e8, label %dec_label_pc_10008bd8, label %dec_label_pc_10008880

dec_label_pc_10008880:                            ; preds = %dec_label_pc_10008878
  store i32 %v2_10008bdc, i32* %r9.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %sext9 = mul i32 %v3_10008bd8, 65536
  %v1_1000888c = sdiv i32 %sext9, 65536
  %v2_1000888c = call i32 @__asm_rlwinm(i32 %v1_1000888c, i32 29, i32 3, i32 29)
  %v0_10008890 = load i32, i32* @r27, align 4
  %v3_10008890 = icmp slt i32 %v0_10008890, %v1_1000888c
  %v5_10008890 = icmp eq i32 %v0_10008890, %v1_1000888c
  store i1 %v3_10008890, i1* %cr7_lt.global-to-local, align 1
  store i1 %v5_10008890, i1* %cr7_eq.global-to-local, align 1
  %v1_10008894 = load i32, i32* %r9.global-to-local, align 4
  %v2_10008894 = add i32 %v1_10008894, %v2_1000888c
  store i32 %v2_10008894, i32* %r11.global-to-local, align 4
  %v2_10008898 = urem i32 %v3_10008bd8, 32
  store i32 %v2_10008898, i32* %r10.global-to-local, align 4
  %v1_1000889c = add i32 %v2_10008894, 56
  %v2_1000889c = inttoptr i32 %v1_1000889c to i32*
  %v3_1000889c = load i32, i32* %v2_1000889c, align 4
  %v0_100088a0 = load i32, i32* %r0.global-to-local, align 4
  %v3_100088a0 = shl i32 %v0_100088a0, %v2_10008898
  store i32 %v3_100088a0, i32* %r0.global-to-local, align 4
  %v2_100088a4 = or i32 %v3_100088a0, %v3_1000889c
  store i32 %v2_100088a4, i32* %r9.global-to-local, align 4
  store i32 %v2_100088a4, i32* %v2_1000889c, align 4
  br i1 %v3_10008890, label %dec_label_pc_100088b0, label %dec_label_pc_100088b4

dec_label_pc_100088b0:                            ; preds = %dec_label_pc_10008880
  store i32 %v1_1000888c, i32* @r27, align 4
  br label %dec_label_pc_100088b4

dec_label_pc_100088b4:                            ; preds = %dec_label_pc_10008bd8, %dec_label_pc_10008880, %dec_label_pc_10008bc8, %dec_label_pc_10008c0c, %dec_label_pc_10008c04, %dec_label_pc_100088b0
  %v3_100088b4 = load i64, i64* %stack_var_-1900, align 8
  %v4_100088b4 = trunc i64 %v3_100088b4 to i32
  store i32 %v4_100088b4, i32* %r9.global-to-local, align 4
  %v1_100088b8 = add i32 %v4_100088b4, 1
  store i32 %v1_100088b8, i32* %r0.global-to-local, align 4
  %v1_100088bc = icmp slt i32 %v1_100088b8, 127
  %v2_100088bc = icmp sgt i32 %v1_100088b8, 127
  %v3_100088bc = icmp eq i32 %v1_100088b8, 127
  store i1 %v1_100088bc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100088bc, i1* %cr7_eq.global-to-local, align 1
  %v5_100088c0 = sext i32 %v1_100088b8 to i64
  store i64 %v5_100088c0, i64* %stack_var_-1900, align 8
  br i1 %v2_100088bc, label %dec_label_pc_10008954, label %dec_label_pc_100088c8

dec_label_pc_100088c8:                            ; preds = %dec_label_pc_10008938, %dec_label_pc_100088b4, %dec_label_pc_1000885c
  %v0_100088cc = phi i32 [ 0, %dec_label_pc_1000885c ], [ %v1_100088b8, %dec_label_pc_100088b4 ], [ %v1_10008944, %dec_label_pc_10008938 ]
  store i32 268566528, i32* %r10.global-to-local, align 4
  %v3_100088d0 = load i32, i32* @global_var_1001e1ac.187, align 4
  store i32 %v3_100088d0, i32* %r9.global-to-local, align 4
  %v2_100088d8 = mul i32 %v0_100088cc, 288
  store i32 %v2_100088d8, i32* %r0.global-to-local, align 4
  store i32 30, i32* %r11.global-to-local, align 4
  %v2_100088e0 = add i32 %v3_100088d0, %v2_100088d8
  store i32 %v2_100088e0, i32* @r29, align 4
  %v1_100088e4 = add i32 %v2_100088e0, 12
  %v2_100088e4 = inttoptr i32 %v1_100088e4 to i32*
  %v3_100088e4 = load i32, i32* %v2_100088e4, align 4
  store i32 %v3_100088e4, i32* %r10.global-to-local, align 4
  %v1_100088e8 = icmp eq i32 %v3_100088e4, 0
  %v3_100088e8 = icmp eq i32 %v3_100088e4, 1
  store i1 %v1_100088e8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100088e8, i1* %cr7_eq.global-to-local, align 1
  %tmp115 = or i32 %v3_100088e4, 1
  %tmp116 = icmp eq i32 %tmp115, 1
  br i1 %tmp116, label %dec_label_pc_10008bc8, label %dec_label_pc_100088f0

dec_label_pc_100088f0:                            ; preds = %dec_label_pc_100088c8, %dec_label_pc_10008bd0
  %v1_100088fc = phi i32 [ 30, %dec_label_pc_100088c8 ], [ 5, %dec_label_pc_10008bd0 ]
  %v3_100088f0 = load i32, i32* @global_var_1001e1a8.181, align 4
  store i32 %v3_100088f0, i32* %r0.global-to-local, align 4
  %v1_100088f4 = add i32 %v2_100088e0, 8
  %v2_100088f4 = inttoptr i32 %v1_100088f4 to i32*
  %v3_100088f4 = load i32, i32* %v2_100088f4, align 4
  store i32 %v3_100088f4, i32* %r9.global-to-local, align 4
  %v2_100088f8 = sub i32 %v3_100088f0, %v3_100088f4
  store i32 %v2_100088f8, i32* %r0.global-to-local, align 4
  %v2_100088fc = icmp ult i32 %v2_100088f8, %v1_100088fc
  %v3_100088fc = icmp ugt i32 %v2_100088f8, %v1_100088fc
  %v4_100088fc = icmp eq i32 %v2_100088f8, %v1_100088fc
  store i1 %v2_100088fc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100088fc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100088fc, label %dec_label_pc_10008904, label %dec_label_pc_10008878

dec_label_pc_10008904:                            ; preds = %dec_label_pc_100088f0
  %v1_10008904 = add i32 %v2_100088e0, 4
  %v2_10008904 = inttoptr i32 %v1_10008904 to i32*
  %v3_10008904 = load i32, i32* %v2_10008904, align 4
  store i32 %v3_10008904, i32* %r3.global-to-local, align 4
  store i32 268470540, i32* @lr, align 4
  %v0_10008908 = call i32 @function_1000a98c()
  store i32 %v0_10008908, i32* %r3.global-to-local, align 4
  %v0_1000890c = load i32, i32* @r29, align 4
  %v1_1000890c = add i32 %v0_1000890c, 12
  %v2_1000890c = inttoptr i32 %v1_1000890c to i32*
  %v3_1000890c = load i32, i32* %v2_1000890c, align 4
  store i32 %v3_1000890c, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  %v1_10008914 = icmp ult i32 %v3_1000890c, 2
  %v3_10008914 = icmp eq i32 %v3_1000890c, 2
  store i1 %v1_10008914, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008914, i1* %cr7_eq.global-to-local, align 1
  %v2_10008918 = add i32 %v0_1000890c, 4
  %v3_10008918 = inttoptr i32 %v2_10008918 to i32*
  store i32 -1, i32* %v3_10008918, align 4
  %tmp117 = icmp ult i32 %v3_1000890c, 3
  br i1 %tmp117, label %dec_label_pc_10008c0c, label %dec_label_pc_10008920

dec_label_pc_10008920:                            ; preds = %dec_label_pc_10008904
  %v0_10008920 = load i32, i32* @r29, align 4
  %v1_10008920 = add i32 %v0_10008920, 284
  %v2_10008920 = inttoptr i32 %v1_10008920 to i8*
  %v3_10008920 = load i8, i8* %v2_10008920, align 1
  %v4_10008920 = zext i8 %v3_10008920 to i32
  %v1_10008924 = add nuw nsw i32 %v4_10008920, 1
  %v1_10008928 = urem i32 %v1_10008924, 256
  store i32 %v1_10008928, i32* %r9.global-to-local, align 4
  %v1_1000892c = icmp ult i32 %v1_10008928, 10
  %v3_1000892c = icmp eq i32 %v1_10008928, 10
  store i1 %v1_1000892c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000892c, i1* %cr7_eq.global-to-local, align 1
  %v1_10008930 = trunc i32 %v1_10008924 to i8
  store i8 %v1_10008930, i8* %v2_10008920, align 1
  %v0_10008934 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10008934, label %dec_label_pc_10008c0c, label %dec_label_pc_10008938

dec_label_pc_10008938:                            ; preds = %dec_label_pc_10008920
  %v0_10008938 = load i32, i32* @r29, align 4
  store i32 %v0_10008938, i32* @r3, align 4
  store i32 268470592, i32* @lr, align 4
  %v0_1000893c = call i32 @function_10007b00()
  store i32 %v0_1000893c, i32* %r3.global-to-local, align 4
  %v3_10008940 = load i64, i64* %stack_var_-1900, align 8
  %v4_10008940 = trunc i64 %v3_10008940 to i32
  store i32 %v4_10008940, i32* %r9.global-to-local, align 4
  %v1_10008944 = add i32 %v4_10008940, 1
  store i32 %v1_10008944, i32* %r0.global-to-local, align 4
  %v1_10008948 = icmp slt i32 %v1_10008944, 127
  %v3_10008948 = icmp eq i32 %v1_10008944, 127
  store i1 %v1_10008948, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008948, i1* %cr7_eq.global-to-local, align 1
  %v5_1000894c = sext i32 %v1_10008944 to i64
  store i64 %v5_1000894c, i64* %stack_var_-1900, align 8
  %tmp118 = icmp slt i32 %v1_10008944, 128
  br i1 %tmp118, label %dec_label_pc_100088c8, label %dec_label_pc_10008954

dec_label_pc_10008954:                            ; preds = %dec_label_pc_10008938, %dec_label_pc_100088b4
  %v0_10008954 = load i32, i32* @r27, align 4
  %v1_10008954 = load i32, i32* %r28.global-to-local, align 4
  %v2_10008954 = icmp slt i32 %v0_10008954, %v1_10008954
  %v4_10008954 = icmp eq i32 %v0_10008954, %v1_10008954
  store i1 %v2_10008954, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10008954, i1* %cr7_eq.global-to-local, align 1
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v0_10008954, i32* %r3.global-to-local, align 4
  store i32 1, i32* %stack_var_-1892, align 4
  br i1 %v2_10008954, label %dec_label_pc_10008970, label %dec_label_pc_10008974

dec_label_pc_10008970:                            ; preds = %dec_label_pc_10008954
  store i32 %v1_10008954, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10008974

dec_label_pc_10008974:                            ; preds = %dec_label_pc_10008954, %dec_label_pc_10008970
  %v0_10008984 = phi i32 [ %v0_10008954, %dec_label_pc_10008954 ], [ %v1_10008954, %dec_label_pc_10008970 ]
  %v2_10008974 = ptrtoint i32* %stack_var_-1856 to i32
  store i32 %v2_10008974, i32* %r4.global-to-local, align 4
  %v2_10008978 = ptrtoint i32* %stack_var_-1728 to i32
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_10008980 = ptrtoint i32* %stack_var_-1892 to i32
  store i32 %v2_10008980, i32* %r7.global-to-local, align 4
  %v1_10008984 = add i32 %v0_10008984, 1
  store i32 %v1_10008984, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000898c.253 to i32), i32* @lr, align 4
  %v5_10008988 = call i32 @function_1000ac54(i32 %v1_10008984, i32 %v2_10008974, i32 %v2_10008978, i32 0, i32 %v2_10008980)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10008994.254 to i32), i32* @lr, align 4
  %v0_10008990 = call i32 @function_1000ad5c()
  store i32 %v0_10008990, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_10008990, i32* @global_var_1001e1a8.181, align 4
  %v0_1000899c = load i32, i32* %r29.global-to-local, align 4
  %v5_1000899c = sext i32 %v0_1000899c to i64
  store i64 %v5_1000899c, i64* %stack_var_-1900, align 8
  %v2_100095c4 = ptrtoint i32* %stack_var_-1904 to i32
  %v2_100095c8 = ptrtoint i32* %stack_var_-1896 to i32
  br label %dec_label_pc_100089b8

dec_label_pc_100089a4:                            ; preds = %dec_label_pc_10008a1c, %dec_label_pc_100094ac, %dec_label_pc_100089fc, %dec_label_pc_100089b8, %dec_label_pc_100097b0, %dec_label_pc_10009674, %dec_label_pc_100094e0
  %v3_100089a4 = load i64, i64* %stack_var_-1900, align 8
  %v4_100089a4 = trunc i64 %v3_100089a4 to i32
  store i32 %v4_100089a4, i32* %r9.global-to-local, align 4
  %v1_100089a8 = add i32 %v4_100089a4, 1
  store i32 %v1_100089a8, i32* %r0.global-to-local, align 4
  %v1_100089ac = icmp slt i32 %v1_100089a8, 127
  %v2_100089ac = icmp sgt i32 %v1_100089a8, 127
  %v3_100089ac = icmp eq i32 %v1_100089a8, 127
  store i1 %v1_100089ac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100089ac, i1* %cr7_eq.global-to-local, align 1
  %v5_100089b0 = sext i32 %v1_100089a8 to i64
  store i64 %v5_100089b0, i64* %stack_var_-1900, align 8
  br i1 %v2_100089ac, label %dec_label_pc_100084c4, label %dec_label_pc_100089b8

dec_label_pc_100089b8:                            ; preds = %dec_label_pc_100089a4, %dec_label_pc_10008974
  %v0_100089bc = phi i32 [ %v1_100089a8, %dec_label_pc_100089a4 ], [ 0, %dec_label_pc_10008974 ]
  store i32 268566528, i32* %r10.global-to-local, align 4
  %v1_100089bc = mul i32 %v0_100089bc, 256
  store i32 %v1_100089bc, i32* %r11.global-to-local, align 4
  %v3_100089c0 = load i32, i32* @global_var_1001e1ac.187, align 4
  store i32 %v3_100089c0, i32* %r9.global-to-local, align 4
  %v2_100089c8 = mul i32 %v0_100089bc, 288
  store i32 %v2_100089c8, i32* %r0.global-to-local, align 4
  %v2_100089cc = add i32 %v3_100089c0, %v2_100089c8
  store i32 %v2_100089cc, i32* @r28, align 4
  %v1_100089d0 = add i32 %v2_100089cc, 4
  %v2_100089d0 = inttoptr i32 %v1_100089d0 to i32*
  %v3_100089d0 = load i32, i32* %v2_100089d0, align 4
  store i32 %v3_100089d0, i32* %r3.global-to-local, align 4
  %v1_100089d4 = icmp slt i32 %v3_100089d0, -1
  %v3_100089d4 = icmp eq i32 %v3_100089d0, -1
  store i1 %v1_100089d4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100089d4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100089d4, label %dec_label_pc_100089a4, label %dec_label_pc_100089dc

dec_label_pc_100089dc:                            ; preds = %dec_label_pc_100089b8
  store i32 %v2_10008bdc, i32* %r11.global-to-local, align 4
  %v1_100089e0 = call i32 @__asm_rlwinm(i32 %v3_100089d0, i32 29, i32 3, i32 29)
  %v1_100089e4 = load i32, i32* %r11.global-to-local, align 4
  %v2_100089e4 = add i32 %v1_100089e4, %v1_100089e0
  store i32 %v2_100089e4, i32* %r9.global-to-local, align 4
  %v0_100089e8 = load i32, i32* %r3.global-to-local, align 4
  %v1_100089e8 = urem i32 %v0_100089e8, 32
  store i32 %v1_100089e8, i32* %r11.global-to-local, align 4
  %v1_100089ec = add i32 %v2_100089e4, 184
  %v2_100089ec = inttoptr i32 %v1_100089ec to i32*
  %v3_100089ec = load i32, i32* %v2_100089ec, align 4
  %v3_100089f0 = lshr i32 %v3_100089ec, %v1_100089e8
  store i32 %v3_100089f0, i32* %r0.global-to-local, align 4
  %v1_100089f4 = urem i32 %v3_100089f0, 2
  store i32 %v1_100089f4, i32* %r9.global-to-local, align 4
  %v3_100089f4 = icmp eq i32 %v1_100089f4, 0
  br i1 %v3_100089f4, label %dec_label_pc_100089fc, label %dec_label_pc_100095b4

dec_label_pc_100089fc:                            ; preds = %dec_label_pc_100089dc, %dec_label_pc_1000964c
  %v0_10008a00 = phi i32 [ %v0_100089e8, %dec_label_pc_100089dc ], [ %v0_10008a00.pre, %dec_label_pc_1000964c ]
  store i32 %v2_10008bdc, i32* %r0.global-to-local, align 4
  %v1_10008a00 = call i32 @__asm_rlwinm(i32 %v0_10008a00, i32 29, i32 3, i32 29)
  %v1_10008a04 = load i32, i32* %r0.global-to-local, align 4
  %v2_10008a04 = add i32 %v1_10008a04, %v1_10008a00
  store i32 %v2_10008a04, i32* %r9.global-to-local, align 4
  %v0_10008a08 = load i32, i32* %r3.global-to-local, align 4
  %v1_10008a08 = urem i32 %v0_10008a08, 32
  store i32 %v1_10008a08, i32* %r11.global-to-local, align 4
  %v1_10008a0c = add i32 %v2_10008a04, 56
  %v2_10008a0c = inttoptr i32 %v1_10008a0c to i32*
  %v3_10008a0c = load i32, i32* %v2_10008a0c, align 4
  %v3_10008a10 = lshr i32 %v3_10008a0c, %v1_10008a08
  store i32 %v3_10008a10, i32* %r0.global-to-local, align 4
  %v1_10008a14 = urem i32 %v3_10008a10, 2
  store i32 %v1_10008a14, i32* %r9.global-to-local, align 4
  %v3_10008a14 = icmp eq i32 %v1_10008a14, 0
  br i1 %v3_10008a14, label %dec_label_pc_100089a4, label %dec_label_pc_10008a1c.preheader

dec_label_pc_10008a1c.preheader:                  ; preds = %dec_label_pc_100089fc
  %v0_10008a1c.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10008a1c

dec_label_pc_10008a1c:                            ; preds = %dec_label_pc_10008a1c.preheader, %dec_label_pc_10008a88
  %v0_10009504 = phi i32 [ %v0_10008a1c.pre, %dec_label_pc_10008a1c.preheader ], [ %v0_10008a9c, %dec_label_pc_10008a88 ]
  %v1_10008a1c = add i32 %v0_10009504, 12
  %v2_10008a1c = inttoptr i32 %v1_10008a1c to i32*
  %v3_10008a1c = load i32, i32* %v2_10008a1c, align 4
  store i32 %v3_10008a1c, i32* %r10.global-to-local, align 4
  %v1_10008a20 = icmp slt i32 %v3_10008a1c, 0
  %v3_10008a20 = icmp eq i32 %v3_10008a1c, 0
  store i1 %v1_10008a20, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008a20, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008a20, label %dec_label_pc_100089a4, label %dec_label_pc_10008a28

dec_label_pc_10008a28:                            ; preds = %dec_label_pc_10008a1c
  %v1_10008a28 = add i32 %v0_10009504, 24
  %v2_10008a28 = inttoptr i32 %v1_10008a28 to i32*
  %v3_10008a28 = load i32, i32* %v2_10008a28, align 4
  store i32 %v3_10008a28, i32* %r0.global-to-local, align 4
  %v1_10008a2c = add i32 %v0_10009504, 28
  store i32 %v1_10008a2c, i32* %r24.global-to-local, align 4
  %v1_10008a30 = icmp slt i32 %v3_10008a28, 256
  %v3_10008a30 = icmp eq i32 %v3_10008a28, 256
  store i1 %v1_10008a30, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008a30, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008a30, label %dec_label_pc_10009504, label %dec_label_pc_10008a38

dec_label_pc_10008a38:                            ; preds = %dec_label_pc_10008a28, %dec_label_pc_10009504
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v1_10008a40 = load i32, i32* %r22.global-to-local, align 4
  %v2_10008a40 = inttoptr i32 %v1_10008a40 to i32*
  store i32 0, i32* %v2_10008a40, align 4
  %v0_10008a44 = load i32, i32* @r28, align 4
  %v1_10008a44 = add i32 %v0_10008a44, 24
  %v2_10008a44 = inttoptr i32 %v1_10008a44 to i32*
  %v3_10008a44 = load i32, i32* %v2_10008a44, align 4
  %v1_10008a48 = add i32 %v0_10008a44, 4
  %v2_10008a48 = inttoptr i32 %v1_10008a48 to i32*
  %v3_10008a48 = load i32, i32* %v2_10008a48, align 4
  store i32 %v3_10008a48, i32* %r3.global-to-local, align 4
  %v0_10008a4c = load i32, i32* %r24.global-to-local, align 4
  %v2_10008a4c = add i32 %v0_10008a4c, %v3_10008a44
  store i32 %v2_10008a4c, i32* @r29, align 4
  %v1_10008a50 = sub i32 256, %v3_10008a44
  store i32 %v2_10008a4c, i32* %r4.global-to-local, align 4
  store i32 268470876, i32* @lr, align 4
  %v4_10008a58 = call i32 @function_1000b62c(i32 %v3_10008a48, i32 %v2_10008a4c, i32 %v1_10008a50, i32 16384)
  store i32 %v4_10008a58, i32* %r3.global-to-local, align 4
  %tmp120 = icmp slt i32 %v4_10008a58, 1
  br i1 %tmp120, label %dec_label_pc_100094a0, label %dec_label_pc_10008a64

dec_label_pc_10008a64:                            ; preds = %dec_label_pc_10008a38
  store i32 %v4_10008a58, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 65, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10008a70

dec_label_pc_10008a70:                            ; preds = %dec_label_pc_10008a80, %dec_label_pc_10008a64
  %v0_10008a8447 = phi i32 [ %v1_10008a84, %dec_label_pc_10008a80 ], [ %v4_10008a58, %dec_label_pc_10008a64 ]
  %v1_10008a7c = phi i32 [ %v1_10008a80, %dec_label_pc_10008a80 ], [ 0, %dec_label_pc_10008a64 ]
  %v1_10008a70 = load i32, i32* @r29, align 4
  %v2_10008a70 = add i32 %v1_10008a70, %v1_10008a7c
  %v3_10008a70 = inttoptr i32 %v2_10008a70 to i8*
  %v4_10008a70 = load i8, i8* %v3_10008a70, align 1
  %v5_10008a70 = zext i8 %v4_10008a70 to i32
  store i32 %v5_10008a70, i32* %r0.global-to-local, align 4
  %v3_10008a74 = icmp eq i8 %v4_10008a70, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008a74, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008a74, label %dec_label_pc_10008a7c, label %dec_label_pc_10008a80

dec_label_pc_10008a7c:                            ; preds = %dec_label_pc_10008a70
  %v0_10008a7c = load i32, i32* %r11.global-to-local, align 4
  %v3_10008a7c = trunc i32 %v0_10008a7c to i8
  store i8 %v3_10008a7c, i8* %v3_10008a70, align 1
  %v0_10008a80.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_10008a84.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10008a80

dec_label_pc_10008a80:                            ; preds = %dec_label_pc_10008a70, %dec_label_pc_10008a7c
  %v0_10008a84 = phi i32 [ %v0_10008a8447, %dec_label_pc_10008a70 ], [ %v0_10008a84.pre, %dec_label_pc_10008a7c ]
  %v0_10008a80 = phi i32 [ %v1_10008a7c, %dec_label_pc_10008a70 ], [ %v0_10008a80.pre, %dec_label_pc_10008a7c ]
  %v1_10008a80 = add i32 %v0_10008a80, 1
  store i32 %v1_10008a80, i32* %r9.global-to-local, align 4
  %v1_10008a84 = add i32 %v0_10008a84, -1
  store i32 %v1_10008a84, i32* %ctr.global-to-local, align 4
  %v2_10008a84 = icmp eq i32 %v1_10008a84, 0
  br i1 %v2_10008a84, label %dec_label_pc_10008a88, label %dec_label_pc_10008a70

dec_label_pc_10008a88:                            ; preds = %dec_label_pc_10008a80, %dec_label_pc_100094a4
  %v0_10008a88 = load i32, i32* @r28, align 4
  %v1_10008a88 = add i32 %v0_10008a88, 24
  %v2_10008a88 = inttoptr i32 %v1_10008a88 to i32*
  %v3_10008a88 = load i32, i32* %v2_10008a88, align 4
  %v3_10008a8c = load i32, i32* @global_var_1001e1a8.181, align 4
  store i32 %v3_10008a8c, i32* %r0.global-to-local, align 4
  %v2_10008a90 = add i32 %v3_10008a88, %v4_10008a58
  store i32 %v2_10008a90, i32* %r4.global-to-local, align 4
  store i32 %v2_10008a90, i32* %v2_10008a88, align 4
  %v0_10008a98 = load i32, i32* %r0.global-to-local, align 4
  %v1_10008a98 = load i32, i32* @r28, align 4
  %v2_10008a98 = add i32 %v1_10008a98, 8
  %v3_10008a98 = inttoptr i32 %v2_10008a98 to i32*
  store i32 %v0_10008a98, i32* %v3_10008a98, align 4
  %v0_10008a9c = load i32, i32* @r28, align 4
  %v1_10008a9c = add i32 %v0_10008a9c, 12
  %v2_10008a9c = inttoptr i32 %v1_10008a9c to i32*
  %v3_10008a9c = load i32, i32* %v2_10008a9c, align 4
  store i32 %v3_10008a9c, i32* %r10.global-to-local, align 4
  %v1_10008aa0 = icmp ult i32 %v3_10008a9c, 10
  %v2_10008aa0 = icmp ugt i32 %v3_10008a9c, 10
  %v3_10008aa0 = icmp eq i32 %v3_10008a9c, 10
  store i1 %v1_10008aa0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008aa0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10008aa0, label %dec_label_pc_10008a1c, label %dec_label_pc_10008aa8

dec_label_pc_10008aa8:                            ; preds = %dec_label_pc_10008a88
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v1_10008aac = mul i32 %v3_10008a9c, 4
  store i32 %v1_10008aac, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000d698.247 to i32), i32* %r11.global-to-local, align 4
  %v2_10008ab4 = add i32 %v1_10008aac, ptrtoint (i32* @global_var_1000d698.247 to i32)
  %v3_10008ab4 = inttoptr i32 %v2_10008ab4 to i32*
  %v4_10008ab4 = load i32, i32* %v3_10008ab4, align 4
  %v2_10008ab8 = add i32 %v4_10008ab4, ptrtoint (i32* @global_var_1000d698.247 to i32)
  store i32 %v2_10008ab8, i32* %r9.global-to-local, align 4
  store i32 %v2_10008ab8, i32* %ctr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v2_10008ab8)
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v2_100095c8, i32* %r4.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_10008ad4 = load i32, i32* @r26, align 4
  store i32 %v0_10008ad4, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-1896, align 4
  store i32 268471008, i32* @lr, align 4
  %v4_10008adc = call i32 @function_1000b6a4(i32 %v0_10008ad4, i32 %v2_100095c8, i32 1, i32 16384)
  store i32 16384, i32* %r6.global-to-local, align 4
  store i32 %v2_100095c4, i32* %r4.global-to-local, align 4
  %v0_10008aec = load i32, i32* @r26, align 4
  store i32 %v0_10008aec, i32* %r3.global-to-local, align 4
  store i32 268471028, i32* @lr, align 4
  %v4_10008af0 = call i32 @function_1000b6a4(i32 %v0_10008aec, i32 %v2_100095c4, i32 4, i32 16384)
  store i32 %v2_10008bdc, i32* %r4.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_10008b00 = load i32, i32* @r26, align 4
  store i32 %v0_10008b00, i32* %r3.global-to-local, align 4
  store i32 268471048, i32* @lr, align 4
  %v4_10008b04 = call i32 @function_1000b6a4(i32 %v0_10008b00, i32 %v2_10008bdc, i32 2, i32 16384)
  store i32 ptrtoint (i8* @global_var_1000d4e0.208 to i32), i32* %r4.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_10008b14 = load i32, i32* @r26, align 4
  store i32 %v0_10008b14, i32* %r3.global-to-local, align 4
  store i32 268471068, i32* @lr, align 4
  %v5_10008b18 = call i32 @function_1000b6a4(i32 %v0_10008b14, i32 sext (i8 ptrtoint (i8* @global_var_1000d4e0.208 to i8) to i32), i32 1, i32 16384)
  store i32 1380143441, i32* %r4.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_10008b28 = load i32, i32* @r26, align 4
  store i32 %v0_10008b28, i32* %r3.global-to-local, align 4
  store i32 268471088, i32* @lr, align 4
  %v6_10008b2c = call i32 @function_1000b6a4(i32 %v0_10008b28, i32 1380143441, i32 19, i32 16384)
  store i32 ptrtoint (i8* @global_var_1000d4e1.255 to i32), i32* %r4.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_10008b3c = load i32, i32* @r26, align 4
  store i32 %v0_10008b3c, i32* %r3.global-to-local, align 4
  store i32 268471108, i32* @lr, align 4
  %v5_10008b40 = call i32 @function_1000b6a4(i32 %v0_10008b3c, i32 sext (i8 ptrtoint (i8* @global_var_1000d4e1.255 to i8) to i32), i32 1, i32 16384)
  store i32 1431130182, i32* %r4.global-to-local, align 4
  %v0_10008b4c = load i32, i32* @r26, align 4
  store i32 %v0_10008b4c, i32* %r3.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  store i32 268471128, i32* @lr, align 4
  %v6_10008b54 = call i32 @function_1000b6a4(i32 %v0_10008b4c, i32 1431130182, i32 16, i32 16384)
  %v0_10008b58 = load i32, i32* @r26, align 4
  store i32 %v0_10008b58, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008b60.257 to i32), i32* @lr, align 4
  %v0_10008b5c = call i32 @function_1000a98c()
  store i32 %v0_10008b5c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10008b60

dec_label_pc_10008b60:                            ; preds = %dec_label_pc_10007ee4, %dec_label_pc_100097a0, %dec_label_pc_10008aa8
  %v0_10008b64 = call i32 @function_1000c1fc()
  store i32 %v0_10008b64, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10008b68

dec_label_pc_10008b68:                            ; preds = %dec_label_pc_10008554, %dec_label_pc_10008b60
  %v0_100085f822 = phi i32 [ %v0_10008b64, %dec_label_pc_10008b60 ], [ %v1_1000851c, %dec_label_pc_10008554 ]
  %v0_10008b68 = load i32, i32* @r9, align 4
  %v1_10008b68 = icmp slt i32 %v0_10008b68, 168
  %v3_10008b68 = icmp eq i32 %v0_10008b68, 168
  store i1 %v1_10008b68, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008b68, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008b68, label %dec_label_pc_10008508.preheader, label %dec_label_pc_10008b68.dec_label_pc_100085ec_crit_edge

dec_label_pc_10008b68.dec_label_pc_100085ec_crit_edge: ; preds = %dec_label_pc_10008b68
  %v0_100085ec.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100085ec

dec_label_pc_10008b74:                            ; preds = %dec_label_pc_1000855c
  %v0_10008b74 = load i32, i32* @r9, align 4
  %v1_10008b74 = icmp ult i32 %v0_10008b74, 15
  %v3_10008b74 = icmp eq i32 %v0_10008b74, 15
  store i1 %v1_10008b74, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008b74, i1* %cr7_eq.global-to-local, align 1
  %tmp121 = icmp ult i32 %v0_10008b74, 16
  br i1 %tmp121, label %dec_label_pc_100085ec, label %dec_label_pc_10008b7c

dec_label_pc_10008b7c:                            ; preds = %dec_label_pc_10008b74
  %v1_10008b7c = icmp ult i32 %v0_10008b74, 31
  %v3_10008b7c = icmp eq i32 %v0_10008b74, 31
  store i1 %v1_10008b7c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008b7c, i1* %cr7_eq.global-to-local, align 1
  %tmp122 = icmp ult i32 %v0_10008b74, 32
  br i1 %tmp122, label %dec_label_pc_10008508, label %dec_label_pc_100085ec

dec_label_pc_10008b88:                            ; preds = %dec_label_pc_10008564
  %v0_10008b88 = load i32, i32* @r9, align 4
  %v1_10008b88 = icmp ult i32 %v0_10008b88, 63
  %v3_10008b88 = icmp eq i32 %v0_10008b88, 63
  store i1 %v1_10008b88, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008b88, i1* %cr7_eq.global-to-local, align 1
  %tmp123 = icmp ult i32 %v0_10008b88, 64
  br i1 %tmp123, label %dec_label_pc_100085ec, label %dec_label_pc_10008b90

dec_label_pc_10008b90:                            ; preds = %dec_label_pc_10008b88
  %v1_10008b90 = icmp ult i32 %v0_10008b88, 126
  %v3_10008b90 = icmp eq i32 %v0_10008b88, 126
  store i1 %v1_10008b90, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008b90, i1* %cr7_eq.global-to-local, align 1
  %tmp124 = icmp ult i32 %v0_10008b88, 127
  br i1 %tmp124, label %dec_label_pc_10008508, label %dec_label_pc_100085ec

dec_label_pc_10008b9c:                            ; preds = %dec_label_pc_1000856c
  %v0_10008b9c = load i32, i32* @r9, align 4
  %v1_10008b9c = icmp slt i32 %v0_10008b9c, 255
  %v3_10008b9c = icmp eq i32 %v0_10008b9c, 255
  store i1 %v1_10008b9c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008b9c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008b9c, label %dec_label_pc_10008508, label %dec_label_pc_100085ec

dec_label_pc_10008ba8:                            ; preds = %dec_label_pc_10008574
  %v0_10008ba8 = load i32, i32* @r9, align 4
  %v1_10008ba8 = icmp ult i32 %v0_10008ba8, 17
  %v3_10008ba8 = icmp eq i32 %v0_10008ba8, 17
  store i1 %v1_10008ba8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008ba8, i1* %cr7_eq.global-to-local, align 1
  %tmp125 = icmp ult i32 %v0_10008ba8, 18
  br i1 %tmp125, label %dec_label_pc_100085ec, label %dec_label_pc_10008bb0

dec_label_pc_10008bb0:                            ; preds = %dec_label_pc_10008ba8
  %v1_10008bb0 = icmp eq i32 %v0_10008ba8, 18
  %v3_10008bb0 = icmp eq i32 %v0_10008ba8, 19
  store i1 %v1_10008bb0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008bb0, i1* %cr7_eq.global-to-local, align 1
  %tmp126 = icmp ult i32 %v0_10008ba8, 20
  br i1 %tmp126, label %dec_label_pc_10008508, label %dec_label_pc_100085ec

dec_label_pc_10008bc8:                            ; preds = %dec_label_pc_100088c8
  %v1_10008bc8 = icmp slt i32 %v3_100088e4, 0
  store i1 %v1_10008bc8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v1_100088e8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_100088e8, label %dec_label_pc_100088b4, label %dec_label_pc_10008bd0

dec_label_pc_10008bd0:                            ; preds = %dec_label_pc_10008bc8
  store i32 5, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100088f0

dec_label_pc_10008bd8:                            ; preds = %dec_label_pc_10008878
  store i32 %v2_10008bdc, i32* %r0.global-to-local, align 4
  %v1_10008be0 = call i32 @__asm_rlwinm(i32 %v3_10008bd8, i32 29, i32 3, i32 29)
  %v0_10008be4 = load i32, i32* %r28.global-to-local, align 4
  %v2_10008be4 = icmp slt i32 %v0_10008be4, %v3_10008bd8
  %v4_10008be4 = icmp eq i32 %v0_10008be4, %v3_10008bd8
  store i1 %v2_10008be4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10008be4, i1* %cr7_eq.global-to-local, align 1
  %v1_10008be8 = load i32, i32* %r0.global-to-local, align 4
  %v2_10008be8 = add i32 %v1_10008be8, %v1_10008be0
  store i32 %v2_10008be8, i32* %r11.global-to-local, align 4
  %v1_10008bec = urem i32 %v3_10008bd8, 32
  store i32 %v1_10008bec, i32* %r0.global-to-local, align 4
  %v1_10008bf0 = add i32 %v2_10008be8, 184
  %v2_10008bf0 = inttoptr i32 %v1_10008bf0 to i32*
  %v3_10008bf0 = load i32, i32* %v2_10008bf0, align 4
  %v0_10008bf4 = load i32, i32* %r10.global-to-local, align 4
  %v3_10008bf4 = shl i32 %v0_10008bf4, %v1_10008bec
  store i32 %v3_10008bf4, i32* %r0.global-to-local, align 4
  %v2_10008bf8 = or i32 %v3_10008bf4, %v3_10008bf0
  store i32 %v2_10008bf8, i32* %r9.global-to-local, align 4
  store i32 %v2_10008bf8, i32* %v2_10008bf0, align 4
  br i1 %v2_10008be4, label %dec_label_pc_10008c04, label %dec_label_pc_100088b4

dec_label_pc_10008c04:                            ; preds = %dec_label_pc_10008bd8
  store i32 %v3_10008bd8, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_100088b4

dec_label_pc_10008c0c:                            ; preds = %dec_label_pc_10008920, %dec_label_pc_10008904
  %v0_10008c0c = load i32, i32* %r25.global-to-local, align 4
  %v1_10008c0c = load i32, i32* @r29, align 4
  %v2_10008c0c = add i32 %v1_10008c0c, 12
  %v3_10008c0c = inttoptr i32 %v2_10008c0c to i32*
  store i32 %v0_10008c0c, i32* %v3_10008c0c, align 4
  %v0_10008c10 = load i32, i32* @r26, align 4
  %v1_10008c10 = trunc i32 %v0_10008c10 to i8
  %v2_10008c10 = load i32, i32* @r29, align 4
  %v3_10008c10 = add i32 %v2_10008c10, 284
  %v4_10008c10 = inttoptr i32 %v3_10008c10 to i8*
  store i8 %v1_10008c10, i8* %v4_10008c10, align 1
  br label %dec_label_pc_100088b4

dec_label_pc_100094a0:                            ; preds = %dec_label_pc_10008a38
  %v3_10008a5c = icmp eq i32 %v4_10008a58, 0
  br i1 %v3_10008a5c, label %dec_label_pc_10009794, label %dec_label_pc_100094a4

dec_label_pc_100094a4:                            ; preds = %dec_label_pc_100094a0
  %v1_100094a4 = icmp slt i32 %v4_10008a58, -1
  %v3_100094a4 = icmp eq i32 %v4_10008a58, -1
  store i1 %v1_100094a4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100094a4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100094a4, label %dec_label_pc_100094ac, label %dec_label_pc_10008a88

dec_label_pc_100094ac:                            ; preds = %dec_label_pc_100094a4
  %v0_100094ac = load i32, i32* %r22.global-to-local, align 4
  %v1_100094ac = inttoptr i32 %v0_100094ac to i32*
  %v2_100094ac = load i32, i32* %v1_100094ac, align 4
  store i32 %v2_100094ac, i32* %r0.global-to-local, align 4
  %v1_100094b0 = icmp slt i32 %v2_100094ac, 11
  %v3_100094b0 = icmp eq i32 %v2_100094ac, 11
  store i1 %v1_100094b0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100094b0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100094b0, label %dec_label_pc_100089a4, label %dec_label_pc_100094b8

dec_label_pc_100094b8:                            ; preds = %dec_label_pc_100094ac, %dec_label_pc_10009794
  %v0_100094b8 = load i32, i32* @r28, align 4
  %v1_100094b8 = add i32 %v0_100094b8, 4
  %v2_100094b8 = inttoptr i32 %v1_100094b8 to i32*
  %v3_100094b8 = load i32, i32* %v2_100094b8, align 4
  store i32 %v3_100094b8, i32* %r3.global-to-local, align 4
  store i32 268473536, i32* @lr, align 4
  %v0_100094bc = call i32 @function_1000a98c()
  store i32 %v0_100094bc, i32* %r3.global-to-local, align 4
  %v0_100094c0 = load i32, i32* @r28, align 4
  %v1_100094c0 = add i32 %v0_100094c0, 284
  %v2_100094c0 = inttoptr i32 %v1_100094c0 to i8*
  %v3_100094c0 = load i8, i8* %v2_100094c0, align 1
  %v4_100094c0 = zext i8 %v3_100094c0 to i32
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_100094c8 = add nuw nsw i32 %v4_100094c0, 1
  store i32 %v1_100094c8, i32* %r9.global-to-local, align 4
  %v2_100094cc = add i32 %v0_100094c0, 4
  %v3_100094cc = inttoptr i32 %v2_100094cc to i32*
  store i32 -1, i32* %v3_100094cc, align 4
  %v0_100094d0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100094d0 = urem i32 %v0_100094d0, 256
  store i32 %v1_100094d0, i32* %r9.global-to-local, align 4
  %v1_100094d4 = icmp ult i32 %v1_100094d0, 9
  %v3_100094d4 = icmp eq i32 %v1_100094d0, 9
  store i1 %v1_100094d4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100094d4, i1* %cr7_eq.global-to-local, align 1
  %v1_100094d8 = trunc i32 %v0_100094d0 to i8
  %v2_100094d8 = load i32, i32* @r28, align 4
  %v3_100094d8 = add i32 %v2_100094d8, 284
  %v4_100094d8 = inttoptr i32 %v3_100094d8 to i8*
  store i8 %v1_100094d8, i8* %v4_100094d8, align 1
  %v0_100094dc = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_100094dc = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_100094dc = or i1 %v0_100094dc, %v1_100094dc
  br i1 %v2_100094dc, label %dec_label_pc_100097b0, label %dec_label_pc_100094e0

dec_label_pc_100094e0:                            ; preds = %dec_label_pc_100094b8
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_100094e8 = load i32, i32* @r28, align 4
  %v2_100094e8 = add i32 %v1_100094e8, 12
  %v3_100094e8 = inttoptr i32 %v2_100094e8 to i32*
  store i32 0, i32* %v3_100094e8, align 4
  %v0_100094ec = load i32, i32* %r0.global-to-local, align 4
  %v1_100094ec = trunc i32 %v0_100094ec to i8
  %v2_100094ec = load i32, i32* @r28, align 4
  %v3_100094ec = add i32 %v2_100094ec, 284
  %v4_100094ec = inttoptr i32 %v3_100094ec to i8*
  store i8 %v1_100094ec, i8* %v4_100094ec, align 1
  br label %dec_label_pc_100089a4

dec_label_pc_10009504:                            ; preds = %dec_label_pc_10008a28
  %v1_10009504 = add i32 %v0_10009504, 92
  store i32 %v1_10009504, i32* %r4.global-to-local, align 4
  store i32 %v1_10008a2c, i32* %r3.global-to-local, align 4
  store i32 268473620, i32* @lr, align 4
  %v3_10009510 = call i32 @function_1000b188(i32 %v1_10008a2c, i32 %v1_10009504, i32 192)
  store i32 %v3_10009510, i32* %r3.global-to-local, align 4
  %v0_10009514 = load i32, i32* @r28, align 4
  %v1_10009514 = add i32 %v0_10009514, 24
  %v2_10009514 = inttoptr i32 %v1_10009514 to i32*
  %v3_10009514 = load i32, i32* %v2_10009514, align 4
  store i32 %v3_10009514, i32* %r9.global-to-local, align 4
  %v1_10009518 = add i32 %v3_10009514, -64
  store i32 %v1_10009518, i32* %r4.global-to-local, align 4
  store i32 %v1_10009518, i32* %v2_10009514, align 4
  br label %dec_label_pc_10008a38

dec_label_pc_100095b4:                            ; preds = %dec_label_pc_100089dc
  store i32 4, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 1, i32* %r4.global-to-local, align 4
  store i32 %v2_100095c4, i32* %r6.global-to-local, align 4
  store i32 %v2_100095c8, i32* %r7.global-to-local, align 4
  store i32 4, i32* %stack_var_-1896, align 4
  store i32 0, i32* %stack_var_-1904, align 4
  store i32 268473816, i32* @lr, align 4
  %v5_100095d4 = call i32 @function_1000b5c0(i32 1, i32 4, i32 %v2_100095c4, i32 %v2_100095c8, i32 %v1_100089f4)
  store i32 %v5_100095d4, i32* %r3.global-to-local, align 4
  %v3_100095d8 = load i32, i32* %stack_var_-1904, align 4
  store i32 %v3_100095d8, i32* %r0.global-to-local, align 4
  %v2_100095dc = or i32 %v3_100095d8, %v5_100095d4
  store i32 %v2_100095dc, i32* %r9.global-to-local, align 4
  %v5_100095dc = icmp eq i32 %v2_100095dc, 0
  br i1 %v5_100095dc, label %dec_label_pc_100095e4, label %dec_label_pc_10009674

dec_label_pc_100095e4:                            ; preds = %dec_label_pc_100095b4
  store i32 2, i32* %r10.global-to-local, align 4
  %v1_100095e8 = load i32, i32* @r28, align 4
  %v2_100095e8 = add i32 %v1_100095e8, 12
  %v3_100095e8 = inttoptr i32 %v2_100095e8 to i32*
  store i32 2, i32* %v3_100095e8, align 4
  %v0_100095ec = call i32 @function_1000723c()
  %v3_100095f4 = load i16, i16* @global_var_1001e1a4.184, align 2
  %v4_100095f4 = zext i16 %v3_100095f4 to i32
  store i32 %v4_100095f4, i32* %r11.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_100095fc = load i32, i32* @global_var_1001e19c.182, align 4
  store i32 %v3_100095fc, i32* %r10.global-to-local, align 4
  %v1_10009604 = icmp slt i32 %v3_100095fc, 0
  %v3_10009604 = icmp eq i32 %v3_100095fc, 0
  store i1 %v1_10009604, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009604, i1* %cr7_eq.global-to-local, align 1
  %v2_10009600 = urem i32 %v0_100095ec, %v4_100095f4
  %v2_10009608 = sub i32 %v0_100095ec, %v2_10009600
  store i32 %v2_10009608, i32* %r0.global-to-local, align 4
  store i32 %v2_10009600, i32* %r3.global-to-local, align 4
  %tmp128 = icmp slt i32 %v3_100095fc, 1
  br i1 %tmp128, label %dec_label_pc_10009764, label %dec_label_pc_10009618

dec_label_pc_10009618:                            ; preds = %dec_label_pc_100095e4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v3_100095fc, i32* %ctr.global-to-local, align 4
  %v3_10009620 = load i32, i32* @global_var_1001e1a0.183, align 4
  store i32 %v3_10009620, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10009630

dec_label_pc_10009628:                            ; preds = %dec_label_pc_10009640, %dec_label_pc_10009630
  %v4_1000964414 = phi i1 [ %v4_10009644, %dec_label_pc_10009640 ], [ %v4_10009638, %dec_label_pc_10009630 ]
  %v2_1000964412 = phi i1 [ %v2_10009644, %dec_label_pc_10009640 ], [ %v2_10009638, %dec_label_pc_10009630 ]
  %v1_10009628 = add i32 %v0_10009628, 16
  store i32 %v1_10009628, i32* %r0.global-to-local, align 4
  %v1_1000962c = add i32 %v0_1000962c, -1
  store i32 %v1_1000962c, i32* %ctr.global-to-local, align 4
  %v2_1000962c = icmp eq i32 %v1_1000962c, 0
  br i1 %v2_1000962c, label %dec_label_pc_10009764.loopexit, label %dec_label_pc_10009630

dec_label_pc_10009630:                            ; preds = %dec_label_pc_10009628, %dec_label_pc_10009618
  %v0_1000962c = phi i32 [ %v1_1000962c, %dec_label_pc_10009628 ], [ %v3_100095fc, %dec_label_pc_10009618 ]
  %v0_10009628 = phi i32 [ %v1_10009628, %dec_label_pc_10009628 ], [ %v3_10009620, %dec_label_pc_10009618 ]
  store i32 %v0_10009628, i32* %r9.global-to-local, align 4
  %v1_10009634 = add i32 %v0_10009628, 8
  %v2_10009634 = inttoptr i32 %v1_10009634 to i16*
  %v3_10009634 = load i16, i16* %v2_10009634, align 2
  %v4_10009634 = zext i16 %v3_10009634 to i32
  store i32 %v4_10009634, i32* %r0.global-to-local, align 4
  %v2_10009638 = icmp ult i32 %v4_10009634, %v2_10009600
  %v3_10009638 = icmp ugt i32 %v4_10009634, %v2_10009600
  %v4_10009638 = icmp eq i32 %v4_10009634, %v2_10009600
  br i1 %v3_10009638, label %dec_label_pc_10009628, label %dec_label_pc_10009640

dec_label_pc_10009640:                            ; preds = %dec_label_pc_10009630
  %v1_10009640 = add i32 %v0_10009628, 10
  %v2_10009640 = inttoptr i32 %v1_10009640 to i16*
  %v3_10009640 = load i16, i16* %v2_10009640, align 2
  %v4_10009640 = zext i16 %v3_10009640 to i32
  store i32 %v4_10009640, i32* %r0.global-to-local, align 4
  %v2_10009644 = icmp ult i32 %v4_10009640, %v2_10009600
  %v3_10009644 = icmp ugt i32 %v4_10009640, %v2_10009600
  %v4_10009644 = icmp eq i32 %v4_10009640, %v2_10009600
  br i1 %v3_10009644, label %dec_label_pc_1000964c.loopexit, label %dec_label_pc_10009628

dec_label_pc_1000964c.loopexit:                   ; preds = %dec_label_pc_10009640
  store i1 %v2_10009644, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10009644, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_1000964c

dec_label_pc_1000964c:                            ; preds = %dec_label_pc_1000964c.loopexit, %dec_label_pc_10009764
  %v0_10009654 = phi i32 [ %v0_10009628, %dec_label_pc_1000964c.loopexit ], [ 0, %dec_label_pc_10009764 ]
  %v0_1000964c = load i32, i32* @r28, align 4
  %v1_1000964c = add i32 %v0_1000964c, 4
  %v2_1000964c = inttoptr i32 %v1_1000964c to i32*
  %v3_1000964c = load i32, i32* %v2_1000964c, align 4
  store i32 %v3_1000964c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_10009654 = inttoptr i32 %v0_1000964c to i32*
  store i32 %v0_10009654, i32* %v2_10009654, align 4
  %v0_10009658 = load i32, i32* %r4.global-to-local, align 4
  %v1_10009658 = load i32, i32* @r28, align 4
  %v2_10009658 = add i32 %v1_10009658, 24
  %v3_10009658 = inttoptr i32 %v2_10009658 to i32*
  store i32 %v0_10009658, i32* %v3_10009658, align 4
  %v0_10008a00.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100089fc

dec_label_pc_10009674:                            ; preds = %dec_label_pc_100095b4
  %v0_10009674 = load i32, i32* @r28, align 4
  %v1_10009674 = add i32 %v0_10009674, 4
  %v2_10009674 = inttoptr i32 %v1_10009674 to i32*
  %v3_10009674 = load i32, i32* %v2_10009674, align 4
  store i32 %v3_10009674, i32* %r3.global-to-local, align 4
  store i32 268473980, i32* @lr, align 4
  %v0_10009678 = call i32 @function_1000a98c()
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_10009684 = load i32, i32* @r28, align 4
  %v2_10009684 = add i32 %v1_10009684, 4
  %v3_10009684 = inttoptr i32 %v2_10009684 to i32*
  store i32 -1, i32* %v3_10009684, align 4
  %v0_10009688 = load i32, i32* %r10.global-to-local, align 4
  %v1_10009688 = load i32, i32* @r28, align 4
  %v2_10009688 = add i32 %v1_10009688, 12
  %v3_10009688 = inttoptr i32 %v2_10009688 to i32*
  store i32 %v0_10009688, i32* %v3_10009688, align 4
  %v0_1000968c = load i32, i32* %r29.global-to-local, align 4
  %v1_1000968c = trunc i32 %v0_1000968c to i8
  %v2_1000968c = load i32, i32* @r28, align 4
  %v3_1000968c = add i32 %v2_1000968c, 284
  %v4_1000968c = inttoptr i32 %v3_1000968c to i8*
  store i8 %v1_1000968c, i8* %v4_1000968c, align 1
  br label %dec_label_pc_100089a4

dec_label_pc_10009764.loopexit:                   ; preds = %dec_label_pc_10009628
  store i1 %v2_1000964412, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000964414, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_10009764

dec_label_pc_10009764:                            ; preds = %dec_label_pc_10009764.loopexit, %dec_label_pc_100095e4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000964c

dec_label_pc_10009794:                            ; preds = %dec_label_pc_100094a0
  store i32 104, i32* %r0.global-to-local, align 4
  %v1_10009798 = load i32, i32* %r22.global-to-local, align 4
  %v2_10009798 = inttoptr i32 %v1_10009798 to i32*
  store i32 104, i32* %v2_10009798, align 4
  br label %dec_label_pc_100094b8

dec_label_pc_100097a0:                            ; preds = %dec_label_pc_10007f10
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_100097a4 = load i32, i32* @global_var_1001e1b0.188, align 4
  store i32 %v3_100097a4, i32* %r3.global-to-local, align 4
  store i32 268474284, i32* @lr, align 4
  %v0_100097a8 = call i32 @function_1000a98c()
  store i32 %v0_100097a8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10008b60

dec_label_pc_100097b0:                            ; preds = %dec_label_pc_100094b8
  %v0_100097b0 = load i32, i32* @r28, align 4
  store i32 %v0_100097b0, i32* @r3, align 4
  store i32 268474296, i32* @lr, align 4
  %v0_100097b4 = call i32 @function_10007b00()
  store i32 %v0_100097b4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100089a4

; uselistorder directives
  uselistorder i32 %v4_10009640, { 2, 1, 0, 3 }
  uselistorder i32 %v4_10009634, { 2, 1, 0, 3 }
  uselistorder i32 %v0_10009628, { 0, 2, 4, 3, 1 }
  uselistorder i32 %v1_1000962c, { 0, 2, 1 }
  uselistorder i32 %v2_10009600, { 3, 2, 1, 6, 5, 4, 0, 7 }
  uselistorder i32 %v3_100095fc, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32 %v1_100094d0, { 1, 2, 0 }
  uselistorder i32 %v0_100094d0, { 1, 0 }
  uselistorder i32 %v2_100094ac, { 1, 0, 2 }
  uselistorder i32 %v1_10008bec, { 1, 0 }
  uselistorder i32 %v0_10008ba8, { 4, 3, 2, 5, 6, 7, 0, 1 }
  uselistorder i32 %v0_10008b9c, { 1, 2, 0 }
  uselistorder i32 %v0_10008b88, { 4, 3, 2, 5, 6, 7, 1, 0 }
  uselistorder i32 %v0_10008b74, { 4, 3, 2, 5, 6, 7, 0, 1 }
  uselistorder i32 %v0_10008b68, { 1, 2, 0 }
  uselistorder i32 %v1_10008aac, { 1, 0 }
  uselistorder i32 %v3_10008a9c, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v0_10008a9c, { 1, 0 }
  uselistorder i32 %v1_10008a84, { 2, 1, 0 }
  uselistorder i32 %v1_10008a80, { 1, 0 }
  uselistorder i32 %v1_10008a7c, { 1, 0 }
  uselistorder i32 %v4_10008a58, { 4, 3, 6, 0, 1, 2, 5, 7 }
  uselistorder i32 %v2_10008a4c, { 1, 0, 2 }
  uselistorder i32 %v3_10008a44, { 1, 0 }
  uselistorder i32 %v1_10008a2c, { 1, 0, 2 }
  uselistorder i32 %v3_10008a28, { 1, 0, 2 }
  uselistorder i32 %v3_10008a1c, { 1, 0, 2 }
  uselistorder i32 %v0_10009504, { 0, 2, 1, 3 }
  uselistorder i32 %v1_10008a14, { 1, 0 }
  uselistorder i32 %v1_10008a08, { 1, 0 }
  uselistorder i32 %v1_100089f4, { 2, 1, 0 }
  uselistorder i32 %v1_100089e8, { 1, 0 }
  uselistorder i32 %v0_100089e8, { 1, 0 }
  uselistorder i32 %v3_100089d0, { 0, 2, 1, 3 }
  uselistorder i32 %v0_100089bc, { 1, 0 }
  uselistorder i32 %v1_100089a8, { 1, 0, 4, 3, 2, 5 }
  uselistorder i32 %v2_100095c8, { 2, 3, 1, 0 }
  uselistorder i32 %v2_100095c4, { 2, 3, 1, 0 }
  uselistorder i32 %v1_10008944, { 2, 1, 4, 3, 5, 0 }
  uselistorder i32 %v1_10008928, { 1, 2, 0 }
  uselistorder i32 %v1_10008924, { 1, 0 }
  uselistorder i32 %v3_1000890c, { 0, 2, 1, 3 }
  uselistorder i32 %v2_100088f8, { 2, 1, 0, 3 }
  uselistorder i32 %v1_100088fc, { 2, 1, 0 }
  uselistorder i1 %v3_100088e8, { 2, 0, 1 }
  uselistorder i1 %v1_100088e8, { 1, 0, 2 }
  uselistorder i32 %v3_100088e4, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v2_100088e0, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v1_100088b8, { 0, 1, 4, 3, 2, 5 }
  uselistorder i32 %v2_10008898, { 1, 0 }
  uselistorder i32 %v3_10008bd8, { 5, 0, 4, 3, 6, 2, 1, 7 }
  uselistorder i32 %v2_10008bdc, { 5, 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_10008858, { 1, 0 }
  uselistorder i32 %v1_10008838, { 1, 0 }
  uselistorder i32 %v6_10008810, { 1, 2, 0 }
  uselistorder i32 %v1_100087d4, { 1, 0 }
  uselistorder i32 %v3_100087cc, { 1, 0, 2 }
  uselistorder i32 %v1_100087c8, { 2, 1, 0 }
  uselistorder i32 %v1_100087c4, { 1, 0 }
  uselistorder i32 %v0_100087cc, { 0, 3, 2, 1 }
  uselistorder i32 %v3_100087ac, { 1, 0, 2 }
  uselistorder i32 %v0_1000878c, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 %v1_10008734, { 3, 4, 1, 2, 0 }
  uselistorder i32 %v3_10008714, { 1, 0, 2 }
  uselistorder i32 %v2_100086fc, { 1, 0, 2 }
  uselistorder i32 %v0_100086fc, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_10008708, { 2, 1, 0 }
  uselistorder i32 %v1_10008770, { 1, 0 }
  uselistorder i32 %v1_10008768, { 1, 0 }
  uselistorder i32 %v1_10008760, { 1, 0 }
  uselistorder i32 %v1_10008780, { 2, 1, 0 }
  uselistorder i32 %v1_10008758, { 1, 0 }
  uselistorder i32 %v4_10008748, { 1, 0, 2 }
  uselistorder i32 %v2_100086d8, { 0, 2, 1, 3 }
  uselistorder i32 %v1_100086ac, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_10008638, { 1, 0 }
  uselistorder i32 %v4_10008618, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v1_10008588, { 3, 1, 2, 0 }
  uselistorder i32 %v1_10008538, { 3, 1, 2, 0 }
  uselistorder i32 %v0_10008524, { 0, 2, 1, 4, 3, 6, 5, 8, 7, 10, 9, 12, 11, 14, 13, 16, 15, 18, 17, 20, 19, 22, 21, 23, 26, 25, 24, 28, 27, 30, 29, 32, 31, 34, 33, 36, 35, 38, 37, 40, 39, 41, 43, 42, 44, 45 }
  uselistorder i32 %v1_1000850c, { 1, 2, 0 }
  uselistorder i32 %v0_10008508, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_100084f4, { 1, 0 }
  uselistorder i32 %v3_100084c4, { 1, 0, 2 }
  uselistorder i32 %v0_100082cc, { 1, 0, 2, 3 }
  uselistorder i32 %v0_100082bc, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10007fa4, { 1, 0 }
  uselistorder i32 %v1_10007f64, { 3, 1, 2, 0 }
  uselistorder i32 %v5_10007f54, { 1, 0, 2 }
  uselistorder i32 %v3_10007ef8, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_10007ee0, { 1, 0 }
  uselistorder i32 %v0_10007edc, { 1, 0 }
  uselistorder i32 %v1_10007ed8, { 1, 0 }
  uselistorder i32 %v0_10007ec8, { 1, 2, 0 }
  uselistorder i32 %v2_10007e88, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v0_10007dec, { 5, 4, 3, 2, 0, 1, 7, 6, 8 }
  uselistorder i64* %stack_var_-1900, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 0, 2, 1 }
  uselistorder i32* %stack_var_-1892, { 1, 0 }
  uselistorder i32 %tmp64, { 1, 2, 0 }
  uselistorder i8 %tmp63, { 2, 1, 0 }
  uselistorder i32 %tmp61, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r9.global-to-local, { 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 12, 13, 15, 14, 16, 17, 18, 19, 20, 21, 23, 22, 24, 25, 26, 31, 32, 27, 28, 29, 30, 34, 33, 0, 36, 35, 1, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 59, 56, 57, 58, 60, 61 }
  uselistorder i32* %r6.global-to-local, { 7, 0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i32* %r4.global-to-local, { 7, 8, 9, 10, 11, 0, 1, 2, 3, 4, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 61, 63, 64, 65, 66, 67, 68, 70, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83 }
  uselistorder i32* %r3.global-to-local, { 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 0, 1, 2, 3, 4, 5, 6, 7, 8, 25, 26, 27, 28, 29, 30, 32, 31, 34, 33, 35, 36, 37, 23, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 53, 55, 56, 57, 58, 60, 59, 61, 62, 64, 63, 65, 66, 68, 67, 69, 70, 71, 72, 73, 74, 75, 76, 78, 77, 79, 80, 81, 83, 82, 84, 85, 86, 88, 87, 89, 90, 91, 92, 93, 95, 94, 96, 97, 99, 98, 100, 101, 102, 104, 103, 105, 106, 107, 109, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123 }
  uselistorder i32* %r11.global-to-local, { 2, 3, 4, 27, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15, 0, 16, 1, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 2, 3, 4, 9, 5, 6, 7, 10, 11, 8, 12, 13, 14, 15, 16, 17, 19, 18, 20, 21, 22 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 38, 15, 16, 17, 18, 20, 19, 21, 22, 23, 24, 26, 25, 27, 28, 29, 30, 35, 36, 37, 31, 32, 33, 34, 39, 41, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74 }
  uselistorder i32* %ctr.global-to-local, { 2, 3, 4, 5, 6, 7, 9, 8, 0, 10, 11, 13, 12, 1, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i1* %cr7_lt.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21, 23, 24, 25, 26, 30, 31, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74 }
  uselistorder i1* %cr7_eq.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21, 23, 24, 25, 26, 27, 31, 32, 28, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76 }
  uselistorder i16* @global_var_1001e1a4.184, { 2, 1, 3, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_1000b5c0, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_1000b6a4, { 14, 13, 12, 11, 10, 9, 8, 3, 7, 6, 5, 4, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_1000b62c, { 5, 10, 9, 8, 7, 6, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_1000ac54, { 1, 2, 3, 0 }
  uselistorder i32 ()* @function_10007b00, { 2, 1, 0 }
  uselistorder i32 2323, { 1, 0 }
  uselistorder i32 39, { 4, 5, 0, 6, 1, 7, 2, 8, 3, 9 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_1000b664, { 1, 0, 3, 2 }
  uselistorder i8 6, { 3, 4, 5, 6, 7, 8, 0, 1, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_1000b6dc, { 2, 8, 7, 0, 6, 5, 4, 3, 1 }
  uselistorder i32 16384, { 10, 36, 9, 37, 8, 38, 7, 39, 0, 40, 1, 41, 2, 42, 3, 54, 4, 55, 5, 56, 6, 57, 11, 27, 30, 31, 29, 32, 33, 34, 28, 12, 43, 13, 44, 45, 46, 14, 16, 15, 17, 47, 18, 48, 20, 49, 19, 21, 50, 51, 22, 52, 53, 35, 23, 24, 25, 26 }
  uselistorder i32 (i32, i32, i32, i32)* @function_10005710, { 2, 8, 7, 0, 6, 5, 4, 3, 1 }
  uselistorder i32 (i32, i32)* @function_100056ac, { 3, 10, 9, 0, 8, 7, 6, 5, 4, 2, 1 }
  uselistorder i32 198, { 1, 0, 2, 3 }
  uselistorder i32 100, { 0, 1, 3, 4, 2 }
  uselistorder i32 172, { 1, 0, 6, 7, 4, 5, 8, 9, 2, 3 }
  uselistorder i32 192, { 2, 3, 0, 1, 4, 5 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_1000d540.220 to i32), { 1, 0, 2 }
  uselistorder i32 ptrtoint (i8* @global_var_1000d4e0.208 to i32), { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_10007bec, { 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i16* @global_var_1001e252.198, { 2, 0, 1 }
  uselistorder i8 64, { 10, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* @r16, { 1, 2, 3, 0, 4 }
  uselistorder i32 65536, { 1, 0, 2, 69, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15, 18, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68 }
  uselistorder i32 ()* @function_1000723c, { 21, 20, 19, 18, 17, 16, 66, 69, 68, 67, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 6, 5, 4, 3, 2, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 15, 14, 13, 12, 11, 10, 9, 8, 7, 22, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_1000b71c, { 2, 10, 9, 8, 1, 7, 6, 5, 4, 3, 0 }
  uselistorder i32 288, { 0, 1, 5, 6, 2, 7, 3, 4, 8 }
  uselistorder i32 ()* @function_1000ad5c, { 6, 5, 4, 11, 10, 9, 8, 7, 3, 0, 2, 1 }
  uselistorder i32 (i32)* @function_1000728c, { 0, 2, 1 }
  uselistorder i32 (i32)* @function_1000a404, { 0, 2, 3, 1 }
  uselistorder i32 ()* @function_1000a9d4, { 2, 4, 3, 1, 0 }
  uselistorder i32* @r24, { 6, 7, 8, 9, 10, 1, 3, 4, 2, 5, 0, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder label %dec_label_pc_1000964c, { 1, 0 }
  uselistorder label %dec_label_pc_100094b8, { 1, 0 }
  uselistorder label %dec_label_pc_10008b68, { 1, 0 }
  uselistorder label %dec_label_pc_10008b60, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10008a88, { 1, 0 }
  uselistorder label %dec_label_pc_10008a80, { 1, 0 }
  uselistorder label %dec_label_pc_10008a38, { 1, 0 }
  uselistorder label %dec_label_pc_10008a1c, { 1, 0 }
  uselistorder label %dec_label_pc_100089fc, { 1, 0 }
  uselistorder label %dec_label_pc_100089a4, { 4, 5, 6, 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10008974, { 1, 0 }
  uselistorder label %dec_label_pc_100088f0, { 1, 0 }
  uselistorder label %dec_label_pc_100088b4, { 3, 4, 0, 2, 5, 1 }
  uselistorder label %dec_label_pc_1000884c.dec_label_pc_1000884c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000882c.dec_label_pc_1000882c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000881c, { 1, 4, 2, 3, 0 }
  uselistorder label %dec_label_pc_100086fc, { 1, 0 }
  uselistorder label %dec_label_pc_100086cc, { 0, 1, 2, 7, 8, 3, 4, 5, 6, 9, 10 }
  uselistorder label %dec_label_pc_100086c0, { 1, 0 }
  uselistorder label %dec_label_pc_100085ec, { 0, 4, 1, 2, 5, 3, 6, 8, 7 }
  uselistorder label %dec_label_pc_10008508.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10007f60, { 1, 0 }
}

define i32 @function_100097cc(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_100097cc:
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v3_100097cc = icmp eq i32* %arg2, null
  %v1_100097d4 = mul i32 %arg1, 8
  store i32 %v1_100097d4, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001e28c.278 to i32), i32* %r9.global-to-local, align 4
  br i1 %v3_100097cc, label %dec_label_pc_100097ec, label %dec_label_pc_100097e4

dec_label_pc_100097e4:                            ; preds = %dec_label_pc_100097cc
  %v1_100097e4 = add i32 %v1_100097d4, add (i32 ptrtoint (i32* @global_var_1001e28c.278 to i32), i32 4)
  %v2_100097e4 = inttoptr i32 %v1_100097e4 to i16*
  %v3_100097e4 = load i16, i16* %v2_100097e4, align 4
  %v4_100097e4 = zext i16 %v3_100097e4 to i32
  store i32 %v4_100097e4, i32* %arg2, align 4
  %v0_100097ec.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_100097ec.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100097ec

dec_label_pc_100097ec:                            ; preds = %dec_label_pc_100097cc, %dec_label_pc_100097e4
  %v1_100097ec = phi i32 [ ptrtoint (i32* @global_var_1001e28c.278 to i32), %dec_label_pc_100097cc ], [ %v1_100097ec.pre, %dec_label_pc_100097e4 ]
  %v0_100097ec = phi i32 [ %v1_100097d4, %dec_label_pc_100097cc ], [ %v0_100097ec.pre, %dec_label_pc_100097e4 ]
  %v2_100097ec = add i32 %v0_100097ec, %v1_100097ec
  %v3_100097ec = inttoptr i32 %v2_100097ec to i32*
  %v4_100097ec = load i32, i32* %v3_100097ec, align 4
  store i32 %v4_100097ec, i32* %r3.global-to-local, align 4
  ret i32 %v4_100097ec

; uselistorder directives
  uselistorder i32 %v1_100097d4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100097ec, { 1, 0 }
}

define i32 @function_100097f4(i32 %arg1) local_unnamed_addr {
dec_label_pc_100097f4:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %r10.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %v1_100097f8 = mul i32 %arg1, 8
  %v2_10009800 = add i32 %v1_100097f8, ptrtoint (i32* @global_var_1001e28c.278 to i32)
  %v1_10009808 = add i32 %v1_100097f8, add (i32 ptrtoint (i32* @global_var_1001e28c.278 to i32), i32 4)
  %v2_10009808 = inttoptr i32 %v1_10009808 to i16*
  %v3_10009808 = load i16, i16* %v2_10009808, align 4
  %v3_1000980c = icmp eq i16 %v3_10009808, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000980c, i1* %cr7_eq.global-to-local, align 1
  %v3_10009810 = load i32, i32* @global_var_1001e16c.279, align 4
  %v1_10009814 = udiv i32 %v3_10009810, 16777216
  store i32 %v1_10009814, i32* @r5, align 4
  %v1_10009818 = urem i32 %v3_10009810, 256
  store i32 %v1_10009818, i32* %r6.global-to-local, align 4
  %v1_1000981c = call i32 @__asm_rlwinm(i32 %v3_10009810, i32 24, i32 24, i32 31)
  %v1_10009820 = call i32 @__asm_rlwinm(i32 %v3_10009810, i32 16, i32 24, i32 31)
  %v0_10009824 = load i32, i32* @lr, align 4
  %v1_10009824 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v2_10009824 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v3_10009824 = or i1 %v1_10009824, %v2_10009824
  call void @__pseudo_cond_branch(i1 %v3_10009824, i32 %v0_10009824)
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_1000982c = inttoptr i32 %v2_10009800 to i32*
  br label %dec_label_pc_1000982c

dec_label_pc_1000982c:                            ; preds = %dec_label_pc_1000982c, %dec_label_pc_100097f4
  %v1_10009838 = phi i32 [ %v1_1000986c, %dec_label_pc_1000982c ], [ 0, %dec_label_pc_100097f4 ]
  %v2_1000982c = load i32, i32* %v1_1000982c, align 4
  %v2_10009830 = add i32 %v2_1000982c, %v1_10009838
  %v3_10009830 = inttoptr i32 %v2_10009830 to i8*
  %v4_10009830 = load i8, i8* %v3_10009830, align 1
  %v5_10009830 = zext i8 %v4_10009830 to i32
  %v0_10009834 = load i32, i32* %r6.global-to-local, align 4
  %v2_10009834 = xor i32 %v0_10009834, %v5_10009830
  %v3_10009838 = trunc i32 %v2_10009834 to i8
  store i8 %v3_10009838, i8* %v3_10009830, align 1
  %v2_1000983c = load i32, i32* %v1_1000982c, align 4
  %v0_10009840 = load i32, i32* %r10.global-to-local, align 4
  %v2_10009840 = add i32 %v0_10009840, %v2_1000983c
  %v3_10009840 = inttoptr i32 %v2_10009840 to i8*
  %v4_10009840 = load i8, i8* %v3_10009840, align 1
  %v5_10009840 = zext i8 %v4_10009840 to i32
  %v2_10009844 = xor i32 %v5_10009840, %v1_1000981c
  %v3_10009848 = trunc i32 %v2_10009844 to i8
  store i8 %v3_10009848, i8* %v3_10009840, align 1
  %v2_1000984c = load i32, i32* %v1_1000982c, align 4
  %v0_10009850 = load i32, i32* %r10.global-to-local, align 4
  %v2_10009850 = add i32 %v0_10009850, %v2_1000984c
  %v3_10009850 = inttoptr i32 %v2_10009850 to i8*
  %v4_10009850 = load i8, i8* %v3_10009850, align 1
  %v5_10009850 = zext i8 %v4_10009850 to i32
  %v2_10009854 = xor i32 %v5_10009850, %v1_10009820
  %v3_10009858 = trunc i32 %v2_10009854 to i8
  store i8 %v3_10009858, i8* %v3_10009850, align 1
  %v2_1000985c = load i32, i32* %v1_1000982c, align 4
  %v0_10009860 = load i32, i32* %r10.global-to-local, align 4
  %v2_10009860 = add i32 %v0_10009860, %v2_1000985c
  %v3_10009860 = inttoptr i32 %v2_10009860 to i8*
  %v4_10009860 = load i8, i8* %v3_10009860, align 1
  %v5_10009860 = zext i8 %v4_10009860 to i32
  %v0_10009864 = load i32, i32* @r5, align 4
  %v2_10009864 = xor i32 %v0_10009864, %v5_10009860
  %v3_10009868 = trunc i32 %v2_10009864 to i8
  store i8 %v3_10009868, i8* %v3_10009860, align 1
  %v0_1000986c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000986c = add i32 %v0_1000986c, 1
  store i32 %v1_1000986c, i32* %r10.global-to-local, align 4
  %v3_10009870 = load i16, i16* %v2_10009808, align 4
  %v4_10009870 = zext i16 %v3_10009870 to i32
  %v2_10009874 = icmp slt i32 %v4_10009870, %v1_1000986c
  %v3_10009874 = icmp sgt i32 %v4_10009870, %v1_1000986c
  %v4_10009874 = icmp eq i32 %v4_10009870, %v1_1000986c
  store i1 %v2_10009874, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10009874, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10009874, label %dec_label_pc_1000982c, label %dec_label_pc_1000987c

dec_label_pc_1000987c:                            ; preds = %dec_label_pc_1000982c
  ret i32 %v2_10009800

; uselistorder directives
  uselistorder i32 %v4_10009870, { 2, 1, 0 }
  uselistorder i32 %v1_1000986c, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v3_10009810, { 2, 3, 1, 0 }
  uselistorder i32 %v1_100097f8, { 1, 0 }
}

define i32 @function_10009880(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009880:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %r10.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %v1_10009884 = mul i32 %arg1, 8
  %v2_1000988c = add i32 %v1_10009884, ptrtoint (i32* @global_var_1001e28c.278 to i32)
  %v1_10009894 = add i32 %v1_10009884, add (i32 ptrtoint (i32* @global_var_1001e28c.278 to i32), i32 4)
  %v2_10009894 = inttoptr i32 %v1_10009894 to i16*
  %v3_10009894 = load i16, i16* %v2_10009894, align 4
  %v3_10009898 = icmp eq i16 %v3_10009894, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009898, i1* %cr7_eq.global-to-local, align 1
  %v3_1000989c = load i32, i32* @global_var_1001e16c.279, align 4
  %v1_100098a0 = udiv i32 %v3_1000989c, 16777216
  store i32 %v1_100098a0, i32* @r5, align 4
  %v1_100098a4 = urem i32 %v3_1000989c, 256
  store i32 %v1_100098a4, i32* %r6.global-to-local, align 4
  %v1_100098a8 = call i32 @__asm_rlwinm(i32 %v3_1000989c, i32 24, i32 24, i32 31)
  %v1_100098ac = call i32 @__asm_rlwinm(i32 %v3_1000989c, i32 16, i32 24, i32 31)
  %v0_100098b0 = load i32, i32* @lr, align 4
  %v1_100098b0 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v2_100098b0 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v3_100098b0 = or i1 %v1_100098b0, %v2_100098b0
  call void @__pseudo_cond_branch(i1 %v3_100098b0, i32 %v0_100098b0)
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_100098b8 = inttoptr i32 %v2_1000988c to i32*
  br label %dec_label_pc_100098b8

dec_label_pc_100098b8:                            ; preds = %dec_label_pc_100098b8, %dec_label_pc_10009880
  %v1_100098c4 = phi i32 [ %v1_100098f8, %dec_label_pc_100098b8 ], [ 0, %dec_label_pc_10009880 ]
  %v2_100098b8 = load i32, i32* %v1_100098b8, align 4
  %v2_100098bc = add i32 %v2_100098b8, %v1_100098c4
  %v3_100098bc = inttoptr i32 %v2_100098bc to i8*
  %v4_100098bc = load i8, i8* %v3_100098bc, align 1
  %v5_100098bc = zext i8 %v4_100098bc to i32
  %v0_100098c0 = load i32, i32* %r6.global-to-local, align 4
  %v2_100098c0 = xor i32 %v0_100098c0, %v5_100098bc
  %v3_100098c4 = trunc i32 %v2_100098c0 to i8
  store i8 %v3_100098c4, i8* %v3_100098bc, align 1
  %v2_100098c8 = load i32, i32* %v1_100098b8, align 4
  %v0_100098cc = load i32, i32* %r10.global-to-local, align 4
  %v2_100098cc = add i32 %v0_100098cc, %v2_100098c8
  %v3_100098cc = inttoptr i32 %v2_100098cc to i8*
  %v4_100098cc = load i8, i8* %v3_100098cc, align 1
  %v5_100098cc = zext i8 %v4_100098cc to i32
  %v2_100098d0 = xor i32 %v5_100098cc, %v1_100098a8
  %v3_100098d4 = trunc i32 %v2_100098d0 to i8
  store i8 %v3_100098d4, i8* %v3_100098cc, align 1
  %v2_100098d8 = load i32, i32* %v1_100098b8, align 4
  %v0_100098dc = load i32, i32* %r10.global-to-local, align 4
  %v2_100098dc = add i32 %v0_100098dc, %v2_100098d8
  %v3_100098dc = inttoptr i32 %v2_100098dc to i8*
  %v4_100098dc = load i8, i8* %v3_100098dc, align 1
  %v5_100098dc = zext i8 %v4_100098dc to i32
  %v2_100098e0 = xor i32 %v5_100098dc, %v1_100098ac
  %v3_100098e4 = trunc i32 %v2_100098e0 to i8
  store i8 %v3_100098e4, i8* %v3_100098dc, align 1
  %v2_100098e8 = load i32, i32* %v1_100098b8, align 4
  %v0_100098ec = load i32, i32* %r10.global-to-local, align 4
  %v2_100098ec = add i32 %v0_100098ec, %v2_100098e8
  %v3_100098ec = inttoptr i32 %v2_100098ec to i8*
  %v4_100098ec = load i8, i8* %v3_100098ec, align 1
  %v5_100098ec = zext i8 %v4_100098ec to i32
  %v0_100098f0 = load i32, i32* @r5, align 4
  %v2_100098f0 = xor i32 %v0_100098f0, %v5_100098ec
  %v3_100098f4 = trunc i32 %v2_100098f0 to i8
  store i8 %v3_100098f4, i8* %v3_100098ec, align 1
  %v0_100098f8 = load i32, i32* %r10.global-to-local, align 4
  %v1_100098f8 = add i32 %v0_100098f8, 1
  store i32 %v1_100098f8, i32* %r10.global-to-local, align 4
  %v3_100098fc = load i16, i16* %v2_10009894, align 4
  %v4_100098fc = zext i16 %v3_100098fc to i32
  %v2_10009900 = icmp slt i32 %v4_100098fc, %v1_100098f8
  %v3_10009900 = icmp sgt i32 %v4_100098fc, %v1_100098f8
  %v4_10009900 = icmp eq i32 %v4_100098fc, %v1_100098f8
  store i1 %v2_10009900, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10009900, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10009900, label %dec_label_pc_100098b8, label %dec_label_pc_10009908

dec_label_pc_10009908:                            ; preds = %dec_label_pc_100098b8
  ret i32 %v2_1000988c

; uselistorder directives
  uselistorder i32 %v4_100098fc, { 2, 1, 0 }
  uselistorder i32 %v1_100098f8, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v3_1000989c, { 2, 3, 1, 0 }
  uselistorder i32 %v1_10009884, { 1, 0 }
  uselistorder i32 16777216, { 0, 1, 2, 3, 8, 4, 9, 5, 10, 6, 11, 7, 13, 12, 15, 14 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_1001e28c.278 to i32), i32 4), { 1, 2, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1001e28c.278 to i32), { 1, 3, 0, 2, 4 }
}

define i32 @function_1000990c() local_unnamed_addr {
dec_label_pc_1000990c:
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  store i32 10, i32* @r3, align 4
  store i32 18, i32* %r20.global-to-local, align 4
  store i32 19, i32* %r21.global-to-local, align 4
  store i32 16, i32* %r22.global-to-local, align 4
  store i32 11, i32* %r23.global-to-local, align 4
  store i32 9, i32* %r24.global-to-local, align 4
  store i32 8, i32* %r25.global-to-local, align 4
  store i32 10, i32* %r26.global-to-local, align 4
  store i32 2, i32* %r27.global-to-local, align 4
  store i32 268474728, i32* @lr, align 4
  %v0_10009964 = call i32 @function_1000b98c()
  store i32 %v0_10009964, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009984.281 to i32), i32* @lr, align 4
  %v4_10009980 = call i32 @function_1000a184(i32 ptrtoint ([11 x i8]* @global_var_1000d6e0.280 to i32), i32 10, i32 10)
  store i32 2, i32* @r3, align 4
  %v0_10009988 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009988, i32* @global_var_1001e2a4.282, align 4
  %v0_1000998c = load i32, i32* %r26.global-to-local, align 4
  %v1_1000998c = trunc i32 %v0_1000998c to i16
  store i16 %v1_1000998c, i16* bitcast (i32* @global_var_1001e2a8.283 to i16*), align 4
  store i32 268474772, i32* @lr, align 4
  %v0_10009990 = call i32 @function_1000b98c()
  store i32 %v0_10009990, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100099a8.285 to i32), i32* @lr, align 4
  %v4_100099a4 = call i32 @function_1000a184(i32 ptrtoint ([3 x i8]* @global_var_1000d6d4.284 to i32), i32 2, i32 2)
  store i32 18, i32* @r3, align 4
  %v0_100099ac = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100099ac, i32* @global_var_1001e2ac.286, align 4
  %v0_100099b0 = load i32, i32* %r27.global-to-local, align 4
  %v1_100099b0 = trunc i32 %v0_100099b0 to i16
  store i16 %v1_100099b0, i16* bitcast (i32* @global_var_1001e2b0.287 to i16*), align 4
  store i32 268474808, i32* @lr, align 4
  %v0_100099b4 = call i32 @function_1000b98c()
  store i32 %v0_100099b4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100099cc.289 to i32), i32* @lr, align 4
  %v4_100099c8 = call i32 @function_1000a184(i32 ptrtoint ([19 x i8]* @global_var_1000d6d8.288 to i32), i32 18, i32 18)
  store i32 2, i32* @r3, align 4
  %v0_100099d0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100099d0, i32* @global_var_1001e31c.290, align 4
  %v0_100099d4 = load i32, i32* %r20.global-to-local, align 4
  %v1_100099d4 = trunc i32 %v0_100099d4 to i16
  store i16 %v1_100099d4, i16* bitcast (i32* @global_var_1001e320.291 to i16*), align 4
  store i32 268474844, i32* @lr, align 4
  %v0_100099d8 = call i32 @function_1000b98c()
  store i32 %v0_100099d8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100099f0.293 to i32), i32* @lr, align 4
  %v3_100099ec = call i32 @function_1000a184(i32 ptrtoint (i32* @global_var_1000d6ec.292 to i32), i32 2, i32 2)
  store i32 15, i32* @r3, align 4
  %v0_100099f4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100099f4, i32* @global_var_1001e324.294, align 4
  %v0_100099f8 = load i32, i32* %r27.global-to-local, align 4
  %v1_100099f8 = trunc i32 %v0_100099f8 to i16
  store i16 %v1_100099f8, i16* bitcast (i32* @global_var_1001e328.295 to i16*), align 4
  store i32 268474880, i32* @lr, align 4
  %v0_100099fc = call i32 @function_1000b98c()
  store i32 %v0_100099fc, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10009a14.297 to i32), i32* @lr, align 4
  %v3_10009a10 = call i32 @function_1000a184(i32 ptrtoint (i32* @global_var_1000d6f0.296 to i32), i32 15, i32 15)
  store i32 29, i32* @r3, align 4
  store i16 15, i16* bitcast (i32* @global_var_1001e2a0.298 to i16*), align 4
  %v0_10009a20 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009a20, i32* @global_var_1001e29c.299, align 4
  store i32 268474920, i32* @lr, align 4
  %v0_10009a24 = call i32 @function_1000b98c()
  store i32 %v0_10009a24, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10009a3c.301 to i32), i32* @lr, align 4
  %v3_10009a38 = call i32 @function_1000a184(i32 ptrtoint (i32* @global_var_1000d700.300 to i32), i32 29, i32 29)
  store i32 7, i32* @r3, align 4
  store i16 29, i16* bitcast (i32* @global_var_1001e2b8.302 to i16*), align 4
  %v0_10009a48 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009a48, i32* @global_var_1001e2b4.303, align 4
  store i32 268474960, i32* @lr, align 4
  %v0_10009a4c = call i32 @function_1000b98c()
  store i32 7, i32* %r27.global-to-local, align 4
  store i32 %v0_10009a4c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009a68.305 to i32), i32* @lr, align 4
  %v4_10009a64 = call i32 @function_1000a184(i32 ptrtoint ([8 x i8]* @global_var_1000d720.304 to i32), i32 7, i32 7)
  store i32 5, i32* @r3, align 4
  %v0_10009a6c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009a6c, i32* @global_var_1001e2bc.306, align 4
  %v0_10009a70 = load i32, i32* %r27.global-to-local, align 4
  %v1_10009a70 = trunc i32 %v0_10009a70 to i16
  store i16 %v1_10009a70, i16* bitcast (i32* @global_var_1001e2c0.307 to i16*), align 4
  store i32 268475000, i32* @lr, align 4
  %v0_10009a74 = call i32 @function_1000b98c()
  store i32 %v0_10009a74, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10009a8c.309 to i32), i32* @lr, align 4
  %v4_10009a88 = call i32 @function_1000a184(i32 ptrtoint ([6 x i8]* @global_var_1000d728.308 to i32), i32 5, i32 5)
  store i32 11, i32* @r3, align 4
  store i16 5, i16* bitcast (i32* @global_var_1001e2c8.310 to i16*), align 4
  %v0_10009a98 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009a98, i32* @global_var_1001e2c4.311, align 4
  store i32 268475040, i32* @lr, align 4
  %v0_10009a9c = call i32 @function_1000b98c()
  store i32 %v0_10009a9c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009ab4.313 to i32), i32* @lr, align 4
  %v3_10009ab0 = call i32 @function_1000a184(i32 ptrtoint (i32* @global_var_1000d730.312 to i32), i32 11, i32 11)
  store i32 4, i32* @r3, align 4
  %v0_10009ab8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009ab8, i32* @global_var_1001e2cc.314, align 4
  %v0_10009abc = load i32, i32* %r23.global-to-local, align 4
  %v1_10009abc = trunc i32 %v0_10009abc to i16
  store i16 %v1_10009abc, i16* bitcast (i32* @global_var_1001e2d0.315 to i16*), align 4
  store i32 268475076, i32* @lr, align 4
  %v0_10009ac0 = call i32 @function_1000b98c()
  store i32 %v0_10009ac0, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10009ad8.317 to i32), i32* @lr, align 4
  %v4_10009ad4 = call i32 @function_1000a184(i32 ptrtoint ([5 x i8]* @global_var_1000d73c.316 to i32), i32 4, i32 4)
  store i32 7, i32* @r3, align 4
  store i16 4, i16* bitcast (i32* @global_var_1001e2d8.318 to i16*), align 4
  %v0_10009ae4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009ae4, i32* @global_var_1001e2d4.319, align 4
  store i32 268475116, i32* @lr, align 4
  %v0_10009ae8 = call i32 @function_1000b98c()
  store i32 %v0_10009ae8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009b00.321 to i32), i32* @lr, align 4
  %v4_10009afc = call i32 @function_1000a184(i32 ptrtoint ([8 x i8]* @global_var_1000d744.320 to i32), i32 7, i32 7)
  store i32 8, i32* @r3, align 4
  %v0_10009b04 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009b04, i32* @global_var_1001e2dc.322, align 4
  %v0_10009b08 = load i32, i32* %r27.global-to-local, align 4
  %v1_10009b08 = trunc i32 %v0_10009b08 to i16
  store i16 %v1_10009b08, i16* bitcast (i32* @global_var_1001e2e0.323 to i16*), align 4
  store i32 268475152, i32* @lr, align 4
  %v0_10009b0c = call i32 @function_1000b98c()
  store i32 %v0_10009b0c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009b24.325 to i32), i32* @lr, align 4
  %v4_10009b20 = call i32 @function_1000a184(i32 ptrtoint ([9 x i8]* @global_var_1000d74c.324 to i32), i32 8, i32 8)
  store i32 13, i32* @r3, align 4
  %v0_10009b28 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009b28, i32* @global_var_1001e2e4.326, align 4
  %v0_10009b2c = load i32, i32* %r25.global-to-local, align 4
  %v1_10009b2c = trunc i32 %v0_10009b2c to i16
  store i16 %v1_10009b2c, i16* bitcast (i32* @global_var_1001e2e8.327 to i16*), align 4
  store i32 268475188, i32* @lr, align 4
  %v0_10009b30 = call i32 @function_1000b98c()
  store i32 %v0_10009b30, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10009b48.329 to i32), i32* @lr, align 4
  %v3_10009b44 = call i32 @function_1000a184(i32 ptrtoint (i32* @global_var_1000d758.328 to i32), i32 13, i32 13)
  store i32 10, i32* @r3, align 4
  store i16 13, i16* bitcast (i32* @global_var_1001e2f0.330 to i16*), align 4
  %v0_10009b54 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009b54, i32* @global_var_1001e2ec.331, align 4
  store i32 268475228, i32* @lr, align 4
  %v0_10009b58 = call i32 @function_1000b98c()
  store i32 %v0_10009b58, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009b70.333 to i32), i32* @lr, align 4
  %v4_10009b6c = call i32 @function_1000a184(i32 ptrtoint ([11 x i8]* @global_var_1000d768.332 to i32), i32 10, i32 10)
  store i32 10, i32* @r3, align 4
  %v0_10009b74 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009b74, i32* @global_var_1001e2f4.334, align 4
  %v0_10009b78 = load i32, i32* %r26.global-to-local, align 4
  %v1_10009b78 = trunc i32 %v0_10009b78 to i16
  store i16 %v1_10009b78, i16* bitcast (i32* @global_var_1001e2f8.335 to i16*), align 4
  store i32 268475264, i32* @lr, align 4
  %v0_10009b7c = call i32 @function_1000b98c()
  store i32 %v0_10009b7c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009b94.337 to i32), i32* @lr, align 4
  %v4_10009b90 = call i32 @function_1000a184(i32 ptrtoint ([11 x i8]* @global_var_1000d774.336 to i32), i32 10, i32 10)
  store i32 33, i32* @r3, align 4
  %v0_10009b98 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009b98, i32* @global_var_1001e2fc.338, align 4
  %v0_10009b9c = load i32, i32* %r26.global-to-local, align 4
  %v1_10009b9c = trunc i32 %v0_10009b9c to i16
  store i16 %v1_10009b9c, i16* bitcast (i32* @global_var_1001e300.339 to i16*), align 4
  store i32 268475300, i32* @lr, align 4
  %v0_10009ba0 = call i32 @function_1000b98c()
  store i32 %v0_10009ba0, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10009bb8.341 to i32), i32* @lr, align 4
  %v3_10009bb4 = call i32 @function_1000a184(i32 ptrtoint (i32* @global_var_1000d780.340 to i32), i32 33, i32 33)
  store i32 8, i32* @r3, align 4
  store i16 33, i16* bitcast (i32* @global_var_1001e308.342 to i16*), align 4
  %v0_10009bc4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009bc4, i32* @global_var_1001e304.343, align 4
  store i32 268475340, i32* @lr, align 4
  %v0_10009bc8 = call i32 @function_1000b98c()
  store i32 %v0_10009bc8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009be0.345 to i32), i32* @lr, align 4
  %v4_10009bdc = call i32 @function_1000a184(i32 ptrtoint ([9 x i8]* @global_var_1000d7a4.344 to i32), i32 8, i32 8)
  store i32 11, i32* @r3, align 4
  %v0_10009be4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009be4, i32* @global_var_1001e30c.346, align 4
  %v0_10009be8 = load i32, i32* %r25.global-to-local, align 4
  %v1_10009be8 = trunc i32 %v0_10009be8 to i16
  store i16 %v1_10009be8, i16* bitcast (i32* @global_var_1001e310.347 to i16*), align 4
  store i32 268475376, i32* @lr, align 4
  %v0_10009bec = call i32 @function_1000b98c()
  store i32 %v0_10009bec, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009c04.349 to i32), i32* @lr, align 4
  %v4_10009c00 = call i32 @function_1000a184(i32 ptrtoint ([12 x i8]* @global_var_1000d7b0.348 to i32), i32 11, i32 11)
  store i32 6, i32* @r3, align 4
  %v0_10009c08 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009c08, i32* @global_var_1001e314.350, align 4
  %v0_10009c0c = load i32, i32* %r23.global-to-local, align 4
  %v1_10009c0c = trunc i32 %v0_10009c0c to i16
  store i16 %v1_10009c0c, i16* bitcast (i32* @global_var_1001e318.351 to i16*), align 4
  store i32 268475412, i32* @lr, align 4
  %v0_10009c10 = call i32 @function_1000b98c()
  store i32 %v0_10009c10, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10009c28.353 to i32), i32* @lr, align 4
  %v4_10009c24 = call i32 @function_1000a184(i32 ptrtoint ([7 x i8]* @global_var_1000d7bc.352 to i32), i32 6, i32 6)
  store i32 7, i32* @r3, align 4
  store i16 6, i16* bitcast (i32* @global_var_1001e330.354 to i16*), align 4
  %v0_10009c34 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009c34, i32* @global_var_1001e32c.355, align 4
  store i32 268475452, i32* @lr, align 4
  %v0_10009c38 = call i32 @function_1000b98c()
  store i32 %v0_10009c38, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009c50.357 to i32), i32* @lr, align 4
  %v4_10009c4c = call i32 @function_1000a184(i32 ptrtoint ([8 x i8]* @global_var_1000d7c4.356 to i32), i32 7, i32 7)
  store i32 7, i32* @r3, align 4
  %v0_10009c54 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009c54, i32* @global_var_1001e334.358, align 4
  %v0_10009c58 = load i32, i32* %r27.global-to-local, align 4
  %v1_10009c58 = trunc i32 %v0_10009c58 to i16
  store i16 %v1_10009c58, i16* bitcast (i32* @global_var_1001e338.359 to i16*), align 4
  store i32 268475488, i32* @lr, align 4
  %v0_10009c5c = call i32 @function_1000b98c()
  store i32 %v0_10009c5c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009c74.361 to i32), i32* @lr, align 4
  %v4_10009c70 = call i32 @function_1000a184(i32 ptrtoint ([8 x i8]* @global_var_1000d7cc.360 to i32), i32 7, i32 7)
  store i32 3, i32* @r3, align 4
  %v0_10009c78 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009c78, i32* @global_var_1001e33c.362, align 4
  %v0_10009c7c = load i32, i32* %r27.global-to-local, align 4
  %v1_10009c7c = trunc i32 %v0_10009c7c to i16
  store i16 %v1_10009c7c, i16* bitcast (i32* @global_var_1001e340.363 to i16*), align 4
  store i32 268475524, i32* @lr, align 4
  %v0_10009c80 = call i32 @function_1000b98c()
  store i32 %v0_10009c80, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10009c98.365 to i32), i32* @lr, align 4
  %v4_10009c94 = call i32 @function_1000a184(i32 ptrtoint ([4 x i8]* @global_var_1000d7d4.364 to i32), i32 3, i32 3)
  store i32 19, i32* @r3, align 4
  store i16 3, i16* bitcast (i32* @global_var_1001e348.366 to i16*), align 4
  %v0_10009ca4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009ca4, i32* @global_var_1001e344.367, align 4
  store i32 268475564, i32* @lr, align 4
  %v0_10009ca8 = call i32 @function_1000b98c()
  store i32 %v0_10009ca8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009cc0.369 to i32), i32* @lr, align 4
  %v3_10009cbc = call i32 @function_1000a184(i32 ptrtoint (i32* @global_var_1000d7d8.368 to i32), i32 19, i32 19)
  store i32 24, i32* @r3, align 4
  %v0_10009cc4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009cc4, i32* @global_var_1001e34c.370, align 4
  store i32 12, i32* %r27.global-to-local, align 4
  %v0_10009ccc = load i32, i32* %r21.global-to-local, align 4
  %v1_10009ccc = trunc i32 %v0_10009ccc to i16
  store i16 %v1_10009ccc, i16* bitcast (i32* @global_var_1001e350.371 to i16*), align 4
  store i32 268475604, i32* @lr, align 4
  %v0_10009cd0 = call i32 @function_1000b98c()
  store i32 %v0_10009cd0, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10009ce8.373 to i32), i32* @lr, align 4
  %v3_10009ce4 = call i32 @function_1000a184(i32 ptrtoint (i32* @global_var_1000d7ec.372 to i32), i32 24, i32 24)
  store i32 9, i32* @r3, align 4
  store i16 24, i16* bitcast (i32* @global_var_1001e358.374 to i16*), align 4
  %v0_10009cf4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009cf4, i32* @global_var_1001e354.375, align 4
  store i32 268475644, i32* @lr, align 4
  %v0_10009cf8 = call i32 @function_1000b98c()
  store i32 %v0_10009cf8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009d10.377 to i32), i32* @lr, align 4
  %v4_10009d0c = call i32 @function_1000a184(i32 ptrtoint ([10 x i8]* @global_var_1000d808.376 to i32), i32 9, i32 9)
  store i32 16, i32* @r3, align 4
  %v0_10009d14 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009d14, i32* @global_var_1001e35c.378, align 4
  %v0_10009d18 = load i32, i32* %r24.global-to-local, align 4
  %v1_10009d18 = trunc i32 %v0_10009d18 to i16
  store i16 %v1_10009d18, i16* bitcast (i32* @global_var_1001e360.379 to i16*), align 4
  store i32 268475680, i32* @lr, align 4
  %v0_10009d1c = call i32 @function_1000b98c()
  store i32 %v0_10009d1c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009d34.381 to i32), i32* @lr, align 4
  %v3_10009d30 = call i32 @function_1000a184(i32 ptrtoint (i32* @global_var_1000d814.380 to i32), i32 16, i32 16)
  store i32 22, i32* @r3, align 4
  %v0_10009d38 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009d38, i32* @global_var_1001e364.382, align 4
  %v0_10009d3c = load i32, i32* %r22.global-to-local, align 4
  %v1_10009d3c = trunc i32 %v0_10009d3c to i16
  store i16 %v1_10009d3c, i16* bitcast (i32* @global_var_1001e368.383 to i16*), align 4
  store i32 268475716, i32* @lr, align 4
  %v0_10009d40 = call i32 @function_1000b98c()
  store i32 %v0_10009d40, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10009d58.385 to i32), i32* @lr, align 4
  %v3_10009d54 = call i32 @function_1000a184(i32 ptrtoint (i32* @global_var_1000d828.384 to i32), i32 22, i32 22)
  store i32 21, i32* @r3, align 4
  store i16 22, i16* bitcast (i32* @global_var_1001e370.386 to i16*), align 4
  %v0_10009d64 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009d64, i32* @global_var_1001e36c.387, align 4
  store i32 268475756, i32* @lr, align 4
  %v0_10009d68 = call i32 @function_1000b98c()
  store i32 %v0_10009d68, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10009d80.389 to i32), i32* @lr, align 4
  %v3_10009d7c = call i32 @function_1000a184(i32 ptrtoint (i32* @global_var_1000d840.388 to i32), i32 21, i32 21)
  store i32 17, i32* @r3, align 4
  store i16 21, i16* bitcast (i32* @global_var_1001e378.390 to i16*), align 4
  %v0_10009d8c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009d8c, i32* @global_var_1001e374.391, align 4
  store i32 268475796, i32* @lr, align 4
  %v0_10009d90 = call i32 @function_1000b98c()
  store i32 %v0_10009d90, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10009da8.393 to i32), i32* @lr, align 4
  %v4_10009da4 = call i32 @function_1000a184(i32 ptrtoint ([18 x i8]* @global_var_1000d858.392 to i32), i32 17, i32 17)
  store i32 12, i32* @r3, align 4
  store i16 17, i16* bitcast (i32* @global_var_1001e380.394 to i16*), align 4
  %v0_10009db4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009db4, i32* @global_var_1001e37c.395, align 4
  store i32 268475836, i32* @lr, align 4
  %v0_10009db8 = call i32 @function_1000b98c()
  store i32 %v0_10009db8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009dd0.397 to i32), i32* @lr, align 4
  %v3_10009dcc = call i32 @function_1000a184(i32 ptrtoint (i32* @global_var_1000d86c.396 to i32), i32 12, i32 12)
  store i32 23, i32* @r3, align 4
  %v0_10009dd4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009dd4, i32* @global_var_1001e384.398, align 4
  %v0_10009dd8 = load i32, i32* %r27.global-to-local, align 4
  %v1_10009dd8 = trunc i32 %v0_10009dd8 to i16
  store i16 %v1_10009dd8, i16* bitcast (i32* @global_var_1001e388.399 to i16*), align 4
  store i32 268475872, i32* @lr, align 4
  %v0_10009ddc = call i32 @function_1000b98c()
  store i32 %v0_10009ddc, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10009df4.401 to i32), i32* @lr, align 4
  %v3_10009df0 = call i32 @function_1000a184(i32 ptrtoint (i32* @global_var_1000d87c.400 to i32), i32 23, i32 23)
  store i32 83, i32* @r3, align 4
  store i16 23, i16* bitcast (i32* @global_var_1001e390.402 to i16*), align 4
  %v0_10009e00 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009e00, i32* @global_var_1001e38c.403, align 4
  store i32 268475912, i32* @lr, align 4
  %v0_10009e04 = call i32 @function_1000b98c()
  store i32 %v0_10009e04, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10009e1c.405 to i32), i32* @lr, align 4
  %v3_10009e18 = call i32 @function_1000a184(i32 ptrtoint (i32* @global_var_1000d894.404 to i32), i32 83, i32 83)
  store i32 32, i32* @r3, align 4
  store i16 83, i16* bitcast (i32* @global_var_1001e398.406 to i16*), align 4
  %v0_10009e28 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009e28, i32* @global_var_1001e394.407, align 4
  store i32 268475952, i32* @lr, align 4
  %v0_10009e2c = call i32 @function_1000b98c()
  store i32 %v0_10009e2c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10009e44.409 to i32), i32* @lr, align 4
  %v3_10009e40 = call i32 @function_1000a184(i32 ptrtoint (i32* @global_var_1000d8e8.408 to i32), i32 32, i32 32)
  store i32 48, i32* @r3, align 4
  store i16 32, i16* bitcast (i32* @global_var_1001e3a0.410 to i16*), align 4
  %v0_10009e50 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009e50, i32* @global_var_1001e39c.411, align 4
  store i32 268475992, i32* @lr, align 4
  %v0_10009e54 = call i32 @function_1000b98c()
  store i32 %v0_10009e54, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10009e6c.413 to i32), i32* @lr, align 4
  %v3_10009e68 = call i32 @function_1000a184(i32 ptrtoint (i32* @global_var_1000d90c.412 to i32), i32 48, i32 48)
  store i32 12, i32* @r3, align 4
  store i16 48, i16* bitcast (i32* @global_var_1001e3a8.414 to i16*), align 4
  %v0_10009e78 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009e78, i32* @global_var_1001e3a4.415, align 4
  store i32 268476032, i32* @lr, align 4
  %v0_10009e7c = call i32 @function_1000b98c()
  store i32 %v0_10009e7c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009e94.417 to i32), i32* @lr, align 4
  %v3_10009e90 = call i32 @function_1000a184(i32 ptrtoint (i32* @global_var_1000d940.416 to i32), i32 12, i32 12)
  store i32 9, i32* @r3, align 4
  %v0_10009e98 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009e98, i32* @global_var_1001e3ac.418, align 4
  %v0_10009e9c = load i32, i32* %r27.global-to-local, align 4
  %v1_10009e9c = trunc i32 %v0_10009e9c to i16
  store i16 %v1_10009e9c, i16* bitcast (i32* @global_var_1001e3b0.419 to i16*), align 4
  store i32 268476068, i32* @lr, align 4
  %v0_10009ea0 = call i32 @function_1000b98c()
  store i32 %v0_10009ea0, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009eb8.421 to i32), i32* @lr, align 4
  %v3_10009eb4 = call i32 @function_1000a184(i32 ptrtoint (i32* @global_var_1000d950.420 to i32), i32 9, i32 9)
  store i32 10, i32* @r3, align 4
  %v0_10009ebc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009ebc, i32* @global_var_1001e3b4.422, align 4
  %v0_10009ec0 = load i32, i32* %r24.global-to-local, align 4
  %v1_10009ec0 = trunc i32 %v0_10009ec0 to i16
  store i16 %v1_10009ec0, i16* bitcast (i32* @global_var_1001e3b8.423 to i16*), align 4
  store i32 268476104, i32* @lr, align 4
  %v0_10009ec4 = call i32 @function_1000b98c()
  store i32 %v0_10009ec4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009edc.425 to i32), i32* @lr, align 4
  %v3_10009ed8 = call i32 @function_1000a184(i32 ptrtoint (i32* @global_var_1000d95c.424 to i32), i32 10, i32 10)
  store i32 12, i32* @r3, align 4
  %v0_10009ee0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009ee0, i32* @global_var_1001e3bc.426, align 4
  %v0_10009ee4 = load i32, i32* %r26.global-to-local, align 4
  %v1_10009ee4 = trunc i32 %v0_10009ee4 to i16
  store i16 %v1_10009ee4, i16* bitcast (i32* @global_var_1001e3c0.427 to i16*), align 4
  store i32 268476140, i32* @lr, align 4
  %v0_10009ee8 = call i32 @function_1000b98c()
  store i32 %v0_10009ee8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009f00.429 to i32), i32* @lr, align 4
  %v3_10009efc = call i32 @function_1000a184(i32 ptrtoint (i32* @global_var_1000d968.428 to i32), i32 12, i32 12)
  store i32 16, i32* @r3, align 4
  %v0_10009f04 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009f04, i32* @global_var_1001e3c4.430, align 4
  %v0_10009f08 = load i32, i32* %r27.global-to-local, align 4
  %v1_10009f08 = trunc i32 %v0_10009f08 to i16
  store i16 %v1_10009f08, i16* bitcast (i32* @global_var_1001e3c8.431 to i16*), align 4
  store i32 268476176, i32* @lr, align 4
  %v0_10009f0c = call i32 @function_1000b98c()
  store i32 %v0_10009f0c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009f24.433 to i32), i32* @lr, align 4
  %v3_10009f20 = call i32 @function_1000a184(i32 ptrtoint (i32* @global_var_1000d978.432 to i32), i32 16, i32 16)
  store i32 19, i32* @r3, align 4
  %v0_10009f28 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009f28, i32* @global_var_1001e3cc.434, align 4
  %v0_10009f2c = load i32, i32* %r22.global-to-local, align 4
  %v1_10009f2c = trunc i32 %v0_10009f2c to i16
  store i16 %v1_10009f2c, i16* bitcast (i32* @global_var_1001e3d0.435 to i16*), align 4
  store i32 268476212, i32* @lr, align 4
  %v0_10009f30 = call i32 @function_1000b98c()
  store i32 %v0_10009f30, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009f48.437 to i32), i32* @lr, align 4
  %v3_10009f44 = call i32 @function_1000a184(i32 ptrtoint (i32* @global_var_1000d98c.436 to i32), i32 19, i32 19)
  store i32 8, i32* @r3, align 4
  %v0_10009f4c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009f4c, i32* @global_var_1001e3d4.438, align 4
  %v0_10009f50 = load i32, i32* %r21.global-to-local, align 4
  %v1_10009f50 = trunc i32 %v0_10009f50 to i16
  store i16 %v1_10009f50, i16* bitcast (i32* @global_var_1001e3d8.439 to i16*), align 4
  store i32 268476248, i32* @lr, align 4
  %v0_10009f54 = call i32 @function_1000b98c()
  store i32 %v0_10009f54, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009f6c.441 to i32), i32* @lr, align 4
  %v4_10009f68 = call i32 @function_1000a184(i32 ptrtoint ([9 x i8]* @global_var_1000d9a0.440 to i32), i32 8, i32 8)
  store i32 11, i32* @r3, align 4
  %v0_10009f70 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009f70, i32* @global_var_1001e3dc.442, align 4
  %v0_10009f74 = load i32, i32* %r25.global-to-local, align 4
  %v1_10009f74 = trunc i32 %v0_10009f74 to i16
  store i16 %v1_10009f74, i16* bitcast (i32* @global_var_1001e3e0.443 to i16*), align 4
  store i32 268476284, i32* @lr, align 4
  %v0_10009f78 = call i32 @function_1000b98c()
  store i32 %v0_10009f78, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009f90.445 to i32), i32* @lr, align 4
  %v3_10009f8c = call i32 @function_1000a184(i32 ptrtoint (i32* @global_var_1000d888.444 to i32), i32 11, i32 11)
  store i32 12, i32* @r3, align 4
  %v0_10009f94 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009f94, i32* @global_var_1001e3e4.446, align 4
  %v0_10009f98 = load i32, i32* %r23.global-to-local, align 4
  %v1_10009f98 = trunc i32 %v0_10009f98 to i16
  store i16 %v1_10009f98, i16* bitcast (i32* @global_var_1001e3e8.447 to i16*), align 4
  store i32 268476320, i32* @lr, align 4
  %v0_10009f9c = call i32 @function_1000b98c()
  store i32 %v0_10009f9c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009fb4.449 to i32), i32* @lr, align 4
  %v3_10009fb0 = call i32 @function_1000a184(i32 ptrtoint (i32* @global_var_1000d9ac.448 to i32), i32 12, i32 12)
  store i32 18, i32* @r3, align 4
  %v0_10009fb8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009fb8, i32* @global_var_1001e3ec.450, align 4
  %v0_10009fbc = load i32, i32* %r27.global-to-local, align 4
  %v1_10009fbc = trunc i32 %v0_10009fbc to i16
  store i16 %v1_10009fbc, i16* bitcast (i32* @global_var_1001e3f0.451 to i16*), align 4
  store i32 268476356, i32* @lr, align 4
  %v0_10009fc0 = call i32 @function_1000b98c()
  store i32 %v0_10009fc0, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009fd8.453 to i32), i32* @lr, align 4
  %v3_10009fd4 = call i32 @function_1000a184(i32 ptrtoint (i32* @global_var_1000d9bc.452 to i32), i32 18, i32 18)
  store i32 25, i32* @r3, align 4
  %v0_10009fdc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10009fdc, i32* @global_var_1001e3f4.454, align 4
  store i32 111, i32* %r27.global-to-local, align 4
  %v0_10009fe4 = load i32, i32* %r20.global-to-local, align 4
  %v1_10009fe4 = trunc i32 %v0_10009fe4 to i16
  store i16 %v1_10009fe4, i16* bitcast (i32* @global_var_1001e3f8.455 to i16*), align 4
  store i32 268476396, i32* @lr, align 4
  %v0_10009fe8 = call i32 @function_1000b98c()
  store i32 %v0_10009fe8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000a000.457 to i32), i32* @lr, align 4
  %v3_10009ffc = call i32 @function_1000a184(i32 ptrtoint (i32* @global_var_1000d9d0.456 to i32), i32 25, i32 25)
  store i32 111, i32* @r3, align 4
  store i16 25, i16* bitcast (i32* @global_var_1001e400.458 to i16*), align 4
  %v0_1000a00c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000a00c, i32* @global_var_1001e3fc.459, align 4
  store i32 268476436, i32* @lr, align 4
  %v0_1000a010 = call i32 @function_1000b98c()
  store i32 %v0_1000a010, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000a028.461 to i32), i32* @lr, align 4
  %v3_1000a024 = call i32 @function_1000a184(i32 ptrtoint (i32* @global_var_1000d9ec.460 to i32), i32 111, i32 111)
  store i32 111, i32* @r3, align 4
  %v0_1000a02c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000a02c, i32* @global_var_1001e404.462, align 4
  %v0_1000a030 = load i32, i32* %r27.global-to-local, align 4
  %v1_1000a030 = trunc i32 %v0_1000a030 to i16
  store i16 %v1_1000a030, i16* bitcast (i32* @global_var_1001e408.463 to i16*), align 4
  store i32 268476472, i32* @lr, align 4
  %v0_1000a034 = call i32 @function_1000b98c()
  store i32 %v0_1000a034, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000a04c.465 to i32), i32* @lr, align 4
  %v3_1000a048 = call i32 @function_1000a184(i32 ptrtoint (i32* @global_var_1000da5c.464 to i32), i32 111, i32 111)
  store i32 110, i32* @r3, align 4
  %v0_1000a050 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000a050, i32* @global_var_1001e40c.466, align 4
  %v0_1000a054 = load i32, i32* %r27.global-to-local, align 4
  %v1_1000a054 = trunc i32 %v0_1000a054 to i16
  store i16 %v1_1000a054, i16* bitcast (i32* @global_var_1001e410.467 to i16*), align 4
  store i32 268476508, i32* @lr, align 4
  %v0_1000a058 = call i32 @function_1000b98c()
  store i32 %v0_1000a058, i32* %r28.global-to-local, align 4
  store i32 110, i32* %r27.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000a074.469 to i32), i32* @lr, align 4
  %v3_1000a070 = call i32 @function_1000a184(i32 ptrtoint (i32* @global_var_1000dacc.468 to i32), i32 110, i32 110)
  store i32 110, i32* @r3, align 4
  %v0_1000a078 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000a078, i32* @global_var_1001e414.470, align 4
  store i16 110, i16* bitcast (i32* @global_var_1001e418.471 to i16*), align 4
  store i32 268476548, i32* @lr, align 4
  %v0_1000a080 = call i32 @function_1000b98c()
  store i32 %v0_1000a080, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000a098.473 to i32), i32* @lr, align 4
  %v3_1000a094 = call i32 @function_1000a184(i32 ptrtoint (i32* @global_var_1000db3c.472 to i32), i32 110, i32 110)
  store i32 117, i32* @r3, align 4
  %v0_1000a09c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000a09c, i32* @global_var_1001e41c.474, align 4
  %v0_1000a0a0 = load i32, i32* %r27.global-to-local, align 4
  %v1_1000a0a0 = trunc i32 %v0_1000a0a0 to i16
  store i16 %v1_1000a0a0, i16* bitcast (i32* @global_var_1001e420.475 to i16*), align 4
  store i32 268476584, i32* @lr, align 4
  %v0_1000a0a4 = call i32 @function_1000b98c()
  store i32 %v0_1000a0a4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000a0bc.477 to i32), i32* @lr, align 4
  %v3_1000a0b8 = call i32 @function_1000a184(i32 ptrtoint (i32* @global_var_1000dbac.476 to i32), i32 117, i32 117)
  store i16 117, i16* bitcast (i32* @global_var_1001e428.478 to i16*), align 4
  %v0_1000a0c8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000a0c8, i32* @global_var_1001e424.479, align 4
  ret i32 %v3_1000a0b8

; uselistorder directives
  uselistorder i32 110, { 2, 3, 4, 1, 0, 5, 6 }
  uselistorder i32 111, { 0, 1, 4, 2, 3, 5, 6 }
  uselistorder i16 23, { 2, 1, 0 }
  uselistorder i32 21, { 1, 2, 3, 8, 9, 4, 5, 6, 7, 0 }
  uselistorder i32 33, { 0, 1, 5, 8, 9, 7, 6, 2, 10, 3, 11, 4, 12 }
  uselistorder i32 (i32, i32, i32)* @function_1000a184, { 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 6, 5, 9, 8, 7, 3, 2, 1, 0, 4 }
}

define i32 @function_1000a100(i8* %arg1) local_unnamed_addr {
dec_label_pc_1000a100:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_1000a100 = load i8, i8* %arg1, align 1
  %v3_1000a10c = icmp eq i8 %v3_1000a100, 0
  %v0_1000a110 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000a10c, i32 %v0_1000a110)
  br label %dec_label_pc_1000a114

dec_label_pc_1000a114:                            ; preds = %dec_label_pc_1000a114, %dec_label_pc_1000a100
  %v0_1000a114 = phi i32 [ %v1_1000a114, %dec_label_pc_1000a114 ], [ 0, %dec_label_pc_1000a100 ]
  %v1_1000a114 = add i32 %v0_1000a114, 1
  %v2_1000a118 = add i32 %v1_1000a114, %tmp
  %v3_1000a118 = inttoptr i32 %v2_1000a118 to i8*
  %v4_1000a118 = load i8, i8* %v3_1000a118, align 1
  %v3_1000a11c = icmp eq i8 %v4_1000a118, 0
  br i1 %v3_1000a11c, label %dec_label_pc_1000a124, label %dec_label_pc_1000a114

dec_label_pc_1000a124:                            ; preds = %dec_label_pc_1000a114
  ret i32 %v1_1000a114
}

define i32 @function_1000a128(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a128:
  %ctr.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v2_1000a128 = load i8, i8* %arg1, align 1
  %v3_1000a12c = icmp eq i8 %v2_1000a128, 0
  br i1 %v3_1000a12c, label %dec_label_pc_1000a178, label %dec_label_pc_1000a134

dec_label_pc_1000a134:                            ; preds = %dec_label_pc_1000a128
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000a138

dec_label_pc_1000a138:                            ; preds = %dec_label_pc_1000a138, %dec_label_pc_1000a134
  %v0_1000a138 = phi i32 [ %v1_1000a138, %dec_label_pc_1000a138 ], [ 0, %dec_label_pc_1000a134 ]
  %v1_1000a138 = add i32 %v0_1000a138, 1
  store i32 %v1_1000a138, i32* %r9.global-to-local, align 4
  %v2_1000a13c = add i32 %v1_1000a138, %tmp
  %v3_1000a13c = inttoptr i32 %v2_1000a13c to i8*
  %v4_1000a13c = load i8, i8* %v3_1000a13c, align 1
  %v3_1000a140 = icmp eq i8 %v4_1000a13c, 0
  br i1 %v3_1000a140, label %dec_label_pc_1000a148, label %dec_label_pc_1000a138

dec_label_pc_1000a148:                            ; preds = %dec_label_pc_1000a138
  %v3_1000a148 = icmp eq i32 %v1_1000a138, -1
  br i1 %v3_1000a148, label %dec_label_pc_1000a170, label %dec_label_pc_1000a150

dec_label_pc_1000a150:                            ; preds = %dec_label_pc_1000a148
  %phitmp = add i32 %v0_1000a138, 2
  br label %dec_label_pc_1000a154

dec_label_pc_1000a154:                            ; preds = %dec_label_pc_1000a178, %dec_label_pc_1000a150
  %v0_1000a154 = phi i32 [ 1, %dec_label_pc_1000a178 ], [ %phitmp, %dec_label_pc_1000a150 ]
  store i32 %v0_1000a154, i32* %ctr.global-to-local, align 4
  %v2_1000a164.pre = load i32, i32* @r3, align 4
  %v2_1000a15c8 = load i8, i8* %arg1, align 1
  %v1_1000a16010 = add i32 %tmp, 1
  store i32 %v1_1000a16010, i32* %r4.global-to-local, align 4
  %v3_1000a16411 = inttoptr i32 %v2_1000a164.pre to i8*
  store i8 %v2_1000a15c8, i8* %v3_1000a16411, align 1
  %v0_1000a16812 = load i32, i32* @r3, align 4
  %v1_1000a16813 = add i32 %v0_1000a16812, 1
  store i32 %v1_1000a16813, i32* %r3.global-to-local, align 4
  %v0_1000a16c14 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a16c15 = add i32 %v0_1000a16c14, -1
  store i32 %v1_1000a16c15, i32* %ctr.global-to-local, align 4
  %v2_1000a16c16 = icmp eq i32 %v1_1000a16c15, 0
  br i1 %v2_1000a16c16, label %dec_label_pc_1000a170.loopexit, label %dec_label_pc_1000a15c.dec_label_pc_1000a15c_crit_edge

dec_label_pc_1000a15c.dec_label_pc_1000a15c_crit_edge: ; preds = %dec_label_pc_1000a154, %dec_label_pc_1000a15c.dec_label_pc_1000a15c_crit_edge
  %v1_1000a16817 = phi i32 [ %v1_1000a168, %dec_label_pc_1000a15c.dec_label_pc_1000a15c_crit_edge ], [ %v1_1000a16813, %dec_label_pc_1000a154 ]
  %v0_1000a15c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1000a15c = inttoptr i32 %v0_1000a15c.pre to i8*
  %v2_1000a15c = load i8, i8* %v1_1000a15c, align 1
  %v1_1000a160 = add i32 %v0_1000a15c.pre, 1
  store i32 %v1_1000a160, i32* %r4.global-to-local, align 4
  %v3_1000a164 = inttoptr i32 %v1_1000a16817 to i8*
  store i8 %v2_1000a15c, i8* %v3_1000a164, align 1
  %v0_1000a168 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000a168 = add i32 %v0_1000a168, 1
  store i32 %v1_1000a168, i32* %r3.global-to-local, align 4
  %v0_1000a16c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a16c = add i32 %v0_1000a16c, -1
  store i32 %v1_1000a16c, i32* %ctr.global-to-local, align 4
  %v2_1000a16c = icmp eq i32 %v1_1000a16c, 0
  br i1 %v2_1000a16c, label %dec_label_pc_1000a170.loopexit, label %dec_label_pc_1000a15c.dec_label_pc_1000a15c_crit_edge

dec_label_pc_1000a170.loopexit:                   ; preds = %dec_label_pc_1000a15c.dec_label_pc_1000a15c_crit_edge, %dec_label_pc_1000a154
  %v0_1000a170.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000a170

dec_label_pc_1000a170:                            ; preds = %dec_label_pc_1000a170.loopexit, %dec_label_pc_1000a148
  %v0_1000a170 = phi i32 [ %v0_1000a170.pre, %dec_label_pc_1000a170.loopexit ], [ -1, %dec_label_pc_1000a148 ]
  store i32 %v0_1000a170, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000a170

dec_label_pc_1000a178:                            ; preds = %dec_label_pc_1000a128
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000a154

; uselistorder directives
  uselistorder i32 %v0_1000a170, { 1, 0 }
  uselistorder i32 %v1_1000a16c, { 1, 0 }
  uselistorder i32 %v1_1000a168, { 1, 0 }
  uselistorder i32 %v1_1000a138, { 0, 1, 3, 2 }
  uselistorder i32* %r4.global-to-local, { 3, 2, 1, 0 }
  uselistorder i32* %r3.global-to-local, { 3, 2, 1, 0 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_1000a15c.dec_label_pc_1000a15c_crit_edge, { 1, 0 }
}

define i32 @function_1000a184(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000a184:
  %ctr.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v3_1000a184 = icmp eq i32 %arg3, 0
  store i32 %arg3, i32* %ctr.global-to-local, align 4
  %v0_1000a18c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000a184, i32 %v0_1000a18c)
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000a194

dec_label_pc_1000a194:                            ; preds = %dec_label_pc_1000a194, %dec_label_pc_1000a184
  %v0_1000a194 = phi i32 [ %v1_1000a19c, %dec_label_pc_1000a194 ], [ 0, %dec_label_pc_1000a184 ]
  %v2_1000a194 = add i32 %v0_1000a194, %arg2
  %v3_1000a194 = inttoptr i32 %v2_1000a194 to i8*
  %v4_1000a194 = load i8, i8* %v3_1000a194, align 1
  %v4_1000a198 = add i32 %v0_1000a194, %arg1
  %v5_1000a198 = inttoptr i32 %v4_1000a198 to i8*
  store i8 %v4_1000a194, i8* %v5_1000a198, align 1
  %v0_1000a19c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a19c = add i32 %v0_1000a19c, 1
  store i32 %v1_1000a19c, i32* %r9.global-to-local, align 4
  %v0_1000a1a0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a1a0 = add i32 %v0_1000a1a0, -1
  store i32 %v1_1000a1a0, i32* %ctr.global-to-local, align 4
  %v2_1000a1a0 = icmp eq i32 %v1_1000a1a0, 0
  br i1 %v2_1000a1a0, label %dec_label_pc_1000a1a4, label %dec_label_pc_1000a194

dec_label_pc_1000a1a4:                            ; preds = %dec_label_pc_1000a194
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_1000a1a0, { 1, 0 }
  uselistorder i32 %v1_1000a19c, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1000a1a8() local_unnamed_addr {
dec_label_pc_1000a1a8:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_1000a1a8 = load i32, i32* @r4, align 4
  store i32 %v0_1000a1a8, i32* %r0.global-to-local, align 4
  %v3_1000a1a8 = icmp eq i32 %v0_1000a1a8, 0
  store i32 %v0_1000a1a8, i32* %ctr.global-to-local, align 4
  %v0_1000a1b0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000a1a8, i32 %v0_1000a1b0)
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1000a1bc3 = load i32, i32* @r3, align 4
  %v5_1000a1bc4 = inttoptr i32 %v2_1000a1bc3 to i8*
  store i8 0, i8* %v5_1000a1bc4, align 1
  %v0_1000a1c05 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a1c06 = add i32 %v0_1000a1c05, 1
  store i32 %v1_1000a1c06, i32* %r9.global-to-local, align 4
  %v0_1000a1c47 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a1c48 = add i32 %v0_1000a1c47, -1
  store i32 %v1_1000a1c48, i32* %ctr.global-to-local, align 4
  %v2_1000a1c49 = icmp eq i32 %v1_1000a1c48, 0
  br i1 %v2_1000a1c49, label %dec_label_pc_1000a1c8, label %dec_label_pc_1000a1bc.dec_label_pc_1000a1bc_crit_edge

dec_label_pc_1000a1bc.dec_label_pc_1000a1bc_crit_edge: ; preds = %dec_label_pc_1000a1a8, %dec_label_pc_1000a1bc.dec_label_pc_1000a1bc_crit_edge
  %v1_1000a1c010 = phi i32 [ %v1_1000a1c0, %dec_label_pc_1000a1bc.dec_label_pc_1000a1bc_crit_edge ], [ %v1_1000a1c06, %dec_label_pc_1000a1a8 ]
  %v0_1000a1bc.pre = load i32, i32* %r0.global-to-local, align 4
  %extract.t = trunc i32 %v0_1000a1bc.pre to i8
  %v2_1000a1bc = load i32, i32* @r3, align 4
  %v4_1000a1bc = add i32 %v2_1000a1bc, %v1_1000a1c010
  %v5_1000a1bc = inttoptr i32 %v4_1000a1bc to i8*
  store i8 %extract.t, i8* %v5_1000a1bc, align 1
  %v0_1000a1c0 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a1c0 = add i32 %v0_1000a1c0, 1
  store i32 %v1_1000a1c0, i32* %r9.global-to-local, align 4
  %v0_1000a1c4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a1c4 = add i32 %v0_1000a1c4, -1
  store i32 %v1_1000a1c4, i32* %ctr.global-to-local, align 4
  %v2_1000a1c4 = icmp eq i32 %v1_1000a1c4, 0
  br i1 %v2_1000a1c4, label %dec_label_pc_1000a1c8, label %dec_label_pc_1000a1bc.dec_label_pc_1000a1bc_crit_edge

dec_label_pc_1000a1c8:                            ; preds = %dec_label_pc_1000a1bc.dec_label_pc_1000a1bc_crit_edge, %dec_label_pc_1000a1a8
  %v0_1000a1c8 = load i32, i32* @r3, align 4
  ret i32 %v0_1000a1c8

; uselistorder directives
  uselistorder i32 %v1_1000a1c4, { 1, 0 }
  uselistorder i32 %v1_1000a1c0, { 1, 0 }
  uselistorder i32 %v0_1000a1a8, { 0, 2, 1 }
  uselistorder i32* %r9.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_1000a1bc.dec_label_pc_1000a1bc_crit_edge, { 1, 0 }
}

define i32 @function_1000a1cc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000a1cc:
  %v3_1000a1cc = icmp sgt i32 %arg4, %arg2
  br i1 %v3_1000a1cc, label %dec_label_pc_1000a1d8, label %dec_label_pc_1000a1e0

dec_label_pc_1000a1d8:                            ; preds = %dec_label_pc_1000a1fc, %dec_label_pc_1000a1cc, %dec_label_pc_1000a1e0
  ret i32 -1

dec_label_pc_1000a1e0:                            ; preds = %dec_label_pc_1000a1cc
  %tmp = icmp slt i32 %arg2, 1
  br i1 %tmp, label %dec_label_pc_1000a1d8, label %dec_label_pc_1000a1e8

dec_label_pc_1000a1e8:                            ; preds = %dec_label_pc_1000a1e0
  br label %dec_label_pc_1000a204

dec_label_pc_1000a1f8:                            ; preds = %dec_label_pc_1000a204
  br label %dec_label_pc_1000a1fc

dec_label_pc_1000a1fc:                            ; preds = %dec_label_pc_1000a21c, %dec_label_pc_1000a1f8
  %v0_1000a2041 = phi i32 [ %v1_1000a208, %dec_label_pc_1000a21c ], [ 0, %dec_label_pc_1000a1f8 ]
  %v1_1000a1fc = add i32 %v0_1000a220, 1
  %v1_1000a200 = add i32 %v0_1000a200, -1
  %v2_1000a200 = icmp eq i32 %v1_1000a200, 0
  br i1 %v2_1000a200, label %dec_label_pc_1000a1d8, label %dec_label_pc_1000a204

dec_label_pc_1000a204:                            ; preds = %dec_label_pc_1000a1fc, %dec_label_pc_1000a1e8
  %v0_1000a200 = phi i32 [ %v1_1000a200, %dec_label_pc_1000a1fc ], [ %arg2, %dec_label_pc_1000a1e8 ]
  %v0_1000a220 = phi i32 [ %v1_1000a1fc, %dec_label_pc_1000a1fc ], [ 0, %dec_label_pc_1000a1e8 ]
  %v0_1000a204 = phi i32 [ %v0_1000a2041, %dec_label_pc_1000a1fc ], [ 0, %dec_label_pc_1000a1e8 ]
  %v2_1000a204 = add i32 %v0_1000a204, %arg3
  %v3_1000a204 = inttoptr i32 %v2_1000a204 to i8*
  %v4_1000a204 = load i8, i8* %v3_1000a204, align 1
  %v1_1000a208 = add i32 %v0_1000a204, 1
  %v2_1000a20c = add i32 %v0_1000a220, %arg1
  %v3_1000a20c = inttoptr i32 %v2_1000a20c to i8*
  %v4_1000a20c = load i8, i8* %v3_1000a20c, align 1
  %v4_1000a214 = icmp eq i8 %v4_1000a20c, %v4_1000a204
  br i1 %v4_1000a214, label %dec_label_pc_1000a21c, label %dec_label_pc_1000a1f8

dec_label_pc_1000a21c:                            ; preds = %dec_label_pc_1000a204
  %v4_1000a210 = icmp eq i32 %v1_1000a208, %arg4
  br i1 %v4_1000a210, label %dec_label_pc_1000a220, label %dec_label_pc_1000a1fc

dec_label_pc_1000a220:                            ; preds = %dec_label_pc_1000a21c
  %v1_1000a220 = add i32 %v0_1000a220, 1
  ret i32 %v1_1000a220

; uselistorder directives
  uselistorder i32 %v0_1000a204, { 1, 0 }
  uselistorder label %dec_label_pc_1000a1d8, { 0, 2, 1 }
}

define i32 @function_1000a228(i32 %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %r5.global-to-local = alloca i32, align 4
  %v0_1000a228.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000a228

dec_label_pc_1000a228:                            ; preds = %dec_label_pc_1000a244, %dec_label_pc_1000a228, %bb
  %v0_1000a228 = phi i32 [ %v0_1000a228.pre, %bb ], [ %v1_1000a22c, %dec_label_pc_1000a228 ], [ %v1_1000a22c, %dec_label_pc_1000a244 ]
  %v1_1000a228 = inttoptr i32 %v0_1000a228 to i8*
  %v2_1000a228 = load i8, i8* %v1_1000a228, align 1
  %v1_1000a22c = add i32 %v0_1000a228, 1
  %v3_1000a238 = icmp eq i8 %v2_1000a228, 32
  br i1 %v3_1000a238, label %dec_label_pc_1000a228, label %dec_label_pc_1000a244

dec_label_pc_1000a244:                            ; preds = %dec_label_pc_1000a228
  %v2_1000a228.off = add i8 %v2_1000a228, -9
  %tmp = icmp ult i8 %v2_1000a228.off, 2
  br i1 %tmp, label %dec_label_pc_1000a228, label %dec_label_pc_1000a250

dec_label_pc_1000a250:                            ; preds = %dec_label_pc_1000a244
  %v3_1000a250 = icmp eq i8 %v2_1000a228, 45
  br i1 %v3_1000a250, label %dec_label_pc_1000a2fc, label %dec_label_pc_1000a258

dec_label_pc_1000a258:                            ; preds = %dec_label_pc_1000a250
  %v3_1000a258 = icmp eq i8 %v2_1000a228, 43
  br i1 %v3_1000a258, label %dec_label_pc_1000a354, label %dec_label_pc_1000a260

dec_label_pc_1000a260:                            ; preds = %dec_label_pc_1000a258, %dec_label_pc_1000a354
  %v0_1000a2f026 = phi i32 [ %v1_1000a22c, %dec_label_pc_1000a258 ], [ %v1_1000a358, %dec_label_pc_1000a354 ]
  %v0_1000a2805.in = phi i8 [ %v2_1000a228, %dec_label_pc_1000a258 ], [ %v2_1000a354, %dec_label_pc_1000a354 ]
  br label %dec_label_pc_1000a26c

dec_label_pc_1000a26c:                            ; preds = %dec_label_pc_1000a2fc, %dec_label_pc_1000a260
  %v0_1000a2f025 = phi i32 [ %v1_1000a304, %dec_label_pc_1000a2fc ], [ %v0_1000a2f026, %dec_label_pc_1000a260 ]
  %v0_1000a2804.in = phi i8 [ %v2_1000a2fc, %dec_label_pc_1000a2fc ], [ %v0_1000a2805.in, %dec_label_pc_1000a260 ]
  %v0_1000a344 = phi i32 [ 1, %dec_label_pc_1000a2fc ], [ 0, %dec_label_pc_1000a260 ]
  %v1_1000a27c = phi i32 [ -2147483648, %dec_label_pc_1000a2fc ], [ 2147483647, %dec_label_pc_1000a260 ]
  %v2_1000a26c = udiv i32 %v1_1000a27c, %arg1
  store i32 0, i32* %r5.global-to-local, align 4
  %v2_1000a278 = mul i32 %v2_1000a26c, %arg1
  %v2_1000a27c = sub i32 %v1_1000a27c, %v2_1000a278
  br label %dec_label_pc_1000a280

dec_label_pc_1000a280:                            ; preds = %dec_label_pc_1000a2f0, %dec_label_pc_1000a26c
  %v0_1000a2f0 = phi i32 [ %v1_1000a2f4, %dec_label_pc_1000a2f0 ], [ %v0_1000a2f025, %dec_label_pc_1000a26c ]
  %v0_1000a2e4 = phi i32 [ %v0_1000a2dc17, %dec_label_pc_1000a2f0 ], [ 0, %dec_label_pc_1000a26c ]
  %v0_1000a2d4 = phi i32 [ %v0_1000a33411, %dec_label_pc_1000a2f0 ], [ 0, %dec_label_pc_1000a26c ]
  %v0_1000a2cc = phi i32 [ %v0_1000a3289, %dec_label_pc_1000a2f0 ], [ 0, %dec_label_pc_1000a26c ]
  %v1_1000a2c0.in = phi i8 [ %v2_1000a2f0, %dec_label_pc_1000a2f0 ], [ %v0_1000a2804.in, %dec_label_pc_1000a26c ]
  %v1_1000a2c0 = zext i8 %v1_1000a2c0.in to i32
  %v1_1000a284 = add nsw i32 %v1_1000a2c0, -48
  %fold = add nuw nsw i32 %v1_1000a2c0, 208
  %v1_1000a28c = urem i32 %fold, 256
  %tmp27 = icmp ult i32 %v1_1000a28c, 10
  br i1 %tmp27, label %dec_label_pc_1000a2c4, label %dec_label_pc_1000a298

dec_label_pc_1000a298:                            ; preds = %dec_label_pc_1000a280
  %v1_1000a298 = add nuw nsw i32 %v1_1000a2c0, 191
  %v1_1000a29c = urem i32 %v1_1000a298, 256
  %tmp28 = icmp ult i32 %v1_1000a29c, 26
  br i1 %tmp28, label %dec_label_pc_1000a2c0, label %dec_label_pc_1000a2ac

dec_label_pc_1000a2ac:                            ; preds = %dec_label_pc_1000a298
  %v1_1000a2ac = add nuw nsw i32 %v1_1000a2c0, 159
  %v1_1000a2b0 = urem i32 %v1_1000a2ac, 256
  %v2_1000a2b4 = icmp ugt i32 %v1_1000a2b0, 25
  br i1 %v2_1000a2b4, label %dec_label_pc_1000a328, label %dec_label_pc_1000a2bc

dec_label_pc_1000a2bc:                            ; preds = %dec_label_pc_1000a2ac
  br label %dec_label_pc_1000a2c0

dec_label_pc_1000a2c0:                            ; preds = %dec_label_pc_1000a298, %dec_label_pc_1000a2bc
  %v0_1000a2c0 = phi i32 [ 55, %dec_label_pc_1000a298 ], [ 87, %dec_label_pc_1000a2bc ]
  %v2_1000a2c0 = sub nsw i32 %v1_1000a2c0, %v0_1000a2c0
  br label %dec_label_pc_1000a2c4

dec_label_pc_1000a2c4:                            ; preds = %dec_label_pc_1000a280, %dec_label_pc_1000a2c0
  %v1_1000a2ec = phi i32 [ %v1_1000a284, %dec_label_pc_1000a280 ], [ %v2_1000a2c0, %dec_label_pc_1000a2c0 ]
  %v2_1000a2c4 = icmp slt i32 %v1_1000a2ec, %arg1
  br i1 %v2_1000a2c4, label %dec_label_pc_1000a2cc, label %dec_label_pc_1000a328

dec_label_pc_1000a2cc:                            ; preds = %dec_label_pc_1000a2c4
  %v1_1000a2cc = icmp slt i32 %v0_1000a2cc, 0
  br i1 %v1_1000a2cc, label %dec_label_pc_1000a310, label %dec_label_pc_1000a2d4

dec_label_pc_1000a2d4:                            ; preds = %dec_label_pc_1000a2cc
  %v3_1000a2d4 = icmp ugt i32 %v0_1000a2d4, %v2_1000a26c
  br i1 %v3_1000a2d4, label %dec_label_pc_1000a310, label %dec_label_pc_1000a2dc

dec_label_pc_1000a2dc:                            ; preds = %dec_label_pc_1000a2d4
  %v4_1000a2dc = icmp eq i32 %v0_1000a2e4, %v2_1000a26c
  br i1 %v4_1000a2dc, label %dec_label_pc_1000a318, label %dec_label_pc_1000a2e4

dec_label_pc_1000a2e4:                            ; preds = %dec_label_pc_1000a318, %dec_label_pc_1000a2dc
  %v2_1000a2e4 = mul i32 %v0_1000a2e4, %arg1
  %v2_1000a2ec = add i32 %v1_1000a2ec, %v2_1000a2e4
  store i32 %v2_1000a2ec, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000a2f0

dec_label_pc_1000a2f0:                            ; preds = %dec_label_pc_1000a318, %dec_label_pc_1000a310, %dec_label_pc_1000a2e4
  %v0_1000a2dc17 = phi i32 [ %v2_1000a26c, %dec_label_pc_1000a318 ], [ %v0_1000a2e4, %dec_label_pc_1000a310 ], [ %v2_1000a2ec, %dec_label_pc_1000a2e4 ]
  %v0_1000a33411 = phi i32 [ %v2_1000a26c, %dec_label_pc_1000a318 ], [ %v0_1000a2d4, %dec_label_pc_1000a310 ], [ %v2_1000a2ec, %dec_label_pc_1000a2e4 ]
  %v0_1000a3289 = phi i32 [ -1, %dec_label_pc_1000a318 ], [ -1, %dec_label_pc_1000a310 ], [ 1, %dec_label_pc_1000a2e4 ]
  %v1_1000a2f0 = inttoptr i32 %v0_1000a2f0 to i8*
  %v2_1000a2f0 = load i8, i8* %v1_1000a2f0, align 1
  %v1_1000a2f4 = add i32 %v0_1000a2f0, 1
  br label %dec_label_pc_1000a280

dec_label_pc_1000a2fc:                            ; preds = %dec_label_pc_1000a250
  %v1_1000a2fc = inttoptr i32 %v1_1000a22c to i8*
  %v2_1000a2fc = load i8, i8* %v1_1000a2fc, align 1
  %v1_1000a304 = add i32 %v0_1000a228, 2
  br label %dec_label_pc_1000a26c

dec_label_pc_1000a310:                            ; preds = %dec_label_pc_1000a2d4, %dec_label_pc_1000a2cc
  br label %dec_label_pc_1000a2f0

dec_label_pc_1000a318:                            ; preds = %dec_label_pc_1000a2dc
  %v3_1000a318 = icmp sgt i32 %v1_1000a2ec, %v2_1000a27c
  br i1 %v3_1000a318, label %dec_label_pc_1000a2f0, label %dec_label_pc_1000a2e4

dec_label_pc_1000a328:                            ; preds = %dec_label_pc_1000a2c4, %dec_label_pc_1000a2ac
  %v1_1000a328 = icmp slt i32 %v0_1000a2cc, 0
  br i1 %v1_1000a328, label %dec_label_pc_1000a344, label %dec_label_pc_1000a330

dec_label_pc_1000a330:                            ; preds = %dec_label_pc_1000a328
  %v3_1000a330 = icmp eq i32 %v0_1000a344, 0
  %v0_1000a338 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000a330, i32 %v0_1000a338)
  %v0_1000a33c = load i32, i32* %r5.global-to-local, align 4
  %v1_1000a33c = sub i32 0, %v0_1000a33c
  ret i32 %v1_1000a33c

dec_label_pc_1000a344:                            ; preds = %dec_label_pc_1000a328
  %v1_1000a344 = xor i32 %v0_1000a344, 1
  %v2_1000a34c = sub nuw i32 -2147483648, %v1_1000a344
  ret i32 %v2_1000a34c

dec_label_pc_1000a354:                            ; preds = %dec_label_pc_1000a258
  %v1_1000a354 = inttoptr i32 %v1_1000a22c to i8*
  %v2_1000a354 = load i8, i8* %v1_1000a354, align 1
  %v1_1000a358 = add i32 %v0_1000a228, 2
  br label %dec_label_pc_1000a260

; uselistorder directives
  uselistorder i32 %v2_1000a2ec, { 1, 0, 2 }
  uselistorder i32 %v1_1000a2ec, { 1, 0, 2 }
  uselistorder i32 %v1_1000a2c0, { 2, 4, 3, 0, 1 }
  uselistorder i32 %v0_1000a2e4, { 2, 0, 1 }
  uselistorder i32 %v0_1000a2f0, { 1, 0 }
  uselistorder i32 %v2_1000a26c, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v1_1000a22c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_1000a228, { 1, 0, 3, 2 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32 159, { 0, 2, 3, 1 }
  uselistorder i32 208, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 -2147483648, { 1, 0 }
  uselistorder i8 2, { 0, 3, 1, 2 }
  uselistorder i8 32, { 10, 2, 3, 4, 0, 5, 6, 7, 1, 8, 11, 12, 13, 14, 15, 9, 16, 17, 18, 19, 20, 21 }
  uselistorder i32 %arg1, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1000a2c4, { 1, 0 }
  uselistorder label %dec_label_pc_1000a2c0, { 1, 0 }
  uselistorder label %dec_label_pc_1000a260, { 1, 0 }
}

define i32 @function_1000a360(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000a360:
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r27.global-to-local, align 4
  store i32 %arg2, i32* %r28.global-to-local, align 4
  store i32 %arg3, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  %v0_1000a38c = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  br label %dec_label_pc_1000a394

dec_label_pc_1000a394:                            ; preds = %dec_label_pc_1000a3c0.dec_label_pc_1000a394_crit_edge, %dec_label_pc_1000a360
  %v0_1000a398 = phi i32 [ %v0_1000a398.pre, %dec_label_pc_1000a3c0.dec_label_pc_1000a394_crit_edge ], [ %arg3, %dec_label_pc_1000a360 ]
  %v0_1000a394 = phi i32 [ %v1_1000a3ac, %dec_label_pc_1000a3c0.dec_label_pc_1000a394_crit_edge ], [ %tmp, %dec_label_pc_1000a360 ]
  store i32 1, i32* @r5, align 4
  store i32 268477348, i32* @lr, align 4
  %v4_1000a3a0 = call i32 @function_1000abc4(i32 %v0_1000a398, i32 %v0_1000a394, i32 1)
  %v0_1000a3a4 = load i32, i32* @r31, align 4
  %v3_1000a3a8 = icmp eq i32 %v4_1000a3a0, 1
  %v1_1000a3ac = add i32 %v0_1000a3a4, 1
  store i32 %v1_1000a3ac, i32* @r31, align 4
  %v0_1000a3b4 = load i32, i32* %r30.global-to-local, align 4
  br i1 %v3_1000a3a8, label %dec_label_pc_1000a3b4, label %dec_label_pc_1000a3cc

dec_label_pc_1000a3b4:                            ; preds = %dec_label_pc_1000a394
  %v1_1000a3b4 = add i32 %v0_1000a3b4, 1
  store i32 %v1_1000a3b4, i32* %r30.global-to-local, align 4
  %v0_1000a3b8 = load i32, i32* %r28.global-to-local, align 4
  %v3_1000a3b8 = icmp sgt i32 %v0_1000a3b8, %v1_1000a3b4
  br i1 %v3_1000a3b8, label %dec_label_pc_1000a3c0, label %dec_label_pc_1000a3cc

dec_label_pc_1000a3c0:                            ; preds = %dec_label_pc_1000a3b4
  %v1_1000a3c0 = inttoptr i32 %v0_1000a3a4 to i8*
  %v2_1000a3c0 = load i8, i8* %v1_1000a3c0, align 1
  %v3_1000a3c4 = icmp eq i8 %v2_1000a3c0, 10
  br i1 %v3_1000a3c4, label %dec_label_pc_1000a3cc, label %dec_label_pc_1000a3c0.dec_label_pc_1000a394_crit_edge

dec_label_pc_1000a3c0.dec_label_pc_1000a394_crit_edge: ; preds = %dec_label_pc_1000a3c0
  %v0_1000a398.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000a394

dec_label_pc_1000a3cc:                            ; preds = %dec_label_pc_1000a394, %dec_label_pc_1000a3c0, %dec_label_pc_1000a3b4
  %v1_1000a3d4 = phi i32 [ %v1_1000a3b4, %dec_label_pc_1000a3c0 ], [ %v1_1000a3b4, %dec_label_pc_1000a3b4 ], [ %v0_1000a3b4, %dec_label_pc_1000a394 ]
  %tmp12 = icmp slt i32 %v1_1000a3d4, 0
  %v1_1000a3cc = zext i1 %tmp12 to i32
  %v2_1000a3cc = ashr i32 %v1_1000a3d4, 31
  %v3_1000a3cc = and i32 %v2_1000a3cc, -2
  %v4_1000a3cc = or i32 %v3_1000a3cc, %v1_1000a3cc
  %v2_1000a3d4 = xor i32 %v4_1000a3cc, %v1_1000a3d4
  %v2_1000a3dc = sub i32 %v4_1000a3cc, %v2_1000a3d4
  %tmp13 = icmp slt i32 %v2_1000a3dc, 0
  %v1_1000a3e4 = zext i1 %tmp13 to i32
  %v2_1000a3e4 = ashr i32 %v2_1000a3dc, 31
  %v3_1000a3e4 = and i32 %v2_1000a3e4, -2
  %v4_1000a3e4 = or i32 %v3_1000a3e4, %v1_1000a3e4
  %v0_1000a3ec = load i32, i32* %r27.global-to-local, align 4
  %v2_1000a3ec = and i32 %v4_1000a3e4, %v0_1000a3ec
  store i32 %v0_1000a38c, i32* @r31, align 4
  ret i32 %v2_1000a3ec

; uselistorder directives
  uselistorder i32 %v2_1000a3dc, { 1, 0 }
  uselistorder i32 %v4_1000a3cc, { 1, 0 }
  uselistorder i32 %v1_1000a3d4, { 1, 2, 0 }
  uselistorder i32 %v1_1000a3ac, { 1, 0 }
  uselistorder i8 10, { 6, 7, 8, 0, 1, 2, 3, 4, 5 }
  uselistorder i32 (i32, i32, i32)* @function_1000abc4, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_1000a3cc, { 1, 2, 0 }
}

define i32 @function_1000a404(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a404:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v0_1000a41c = load i32, i32* @r31, align 4
  store i32 16, i32* %stack_var_-40, align 4
  %v0_1000a424 = call i32 @function_1000b0a8()
  %v2_1000a430 = inttoptr i32 %v0_1000a424 to i32*
  store i32 0, i32* %v2_1000a430, align 4
  store i32 268477504, i32* @lr, align 4
  %v3_1000a43c = call i32 @function_1000b758(i32 2, i32 2, i32 0)
  store i32 %v3_1000a43c, i32* @r3, align 4
  %v3_1000a444 = icmp eq i32 %v3_1000a43c, -1
  store i32 %v3_1000a43c, i32* @r31, align 4
  br i1 %v3_1000a444, label %dec_label_pc_1000a494, label %dec_label_pc_1000a460

dec_label_pc_1000a460:                            ; preds = %dec_label_pc_1000a404
  %v2_1000a410 = ptrtoint i32* %stack_var_-36 to i32
  store i32 2, i32* %stack_var_-36, align 4
  store i32 268477560, i32* @lr, align 4
  %v0_1000a474 = call i32 @function_1000b558()
  %v2_1000a47c = ptrtoint i32* %stack_var_-40 to i32
  %v0_1000a480 = load i32, i32* @r31, align 4
  store i32 268477576, i32* @lr, align 4
  %v3_1000a484 = call i32 @function_1000b58c(i32 %v0_1000a480, i32 %v2_1000a410, i32 %v2_1000a47c)
  store i32 268477584, i32* @lr, align 4
  %v0_1000a48c = call i32 @function_1000a98c()
  br label %dec_label_pc_1000a494

dec_label_pc_1000a494:                            ; preds = %dec_label_pc_1000a404, %dec_label_pc_1000a460
  %v0_1000a494 = phi i32 [ 0, %dec_label_pc_1000a404 ], [ 134744072, %dec_label_pc_1000a460 ]
  store i32 %v0_1000a41c, i32* @r31, align 4
  ret i32 %v0_1000a494

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32 ()* @function_1000b558, { 2, 1, 7, 8, 6, 5, 4, 3, 0 }
  uselistorder i32 (i32, i32, i32)* @function_1000b758, { 4, 2, 3, 18, 19, 17, 16, 15, 14, 13, 1, 12, 11, 10, 9, 8, 7, 6, 5, 0 }
  uselistorder label %dec_label_pc_1000a494, { 1, 0 }
}

define i32 @function_1000a4b0(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000a4b0:
  %tmp = inttoptr i32 %arg3 to i8*
  store i32 %arg3, i32* @r5, align 4
  %tmp16 = ptrtoint i8* %arg1 to i32
  %v3_1000a4b0 = load i8, i8* %tmp, align 1
  %v3_1000a4bc = icmp eq i8 %v3_1000a4b0, 0
  br i1 %v3_1000a4bc, label %dec_label_pc_1000a4d4, label %dec_label_pc_1000a4c4

dec_label_pc_1000a4c4:                            ; preds = %dec_label_pc_1000a4b0, %dec_label_pc_1000a4c4
  %v0_1000a4c4 = phi i32 [ %v1_1000a4c4, %dec_label_pc_1000a4c4 ], [ 0, %dec_label_pc_1000a4b0 ]
  %v1_1000a4c4 = add i32 %v0_1000a4c4, 1
  %v3_1000a4c8 = add i32 %v1_1000a4c4, %arg3
  %v4_1000a4c8 = inttoptr i32 %v3_1000a4c8 to i8*
  %v5_1000a4c8 = load i8, i8* %v4_1000a4c8, align 1
  %v3_1000a4cc = icmp eq i8 %v5_1000a4c8, 0
  br i1 %v3_1000a4cc, label %dec_label_pc_1000a4d4, label %dec_label_pc_1000a4c4

dec_label_pc_1000a4d4:                            ; preds = %dec_label_pc_1000a4c4, %dec_label_pc_1000a4b0
  %v0_1000a50411 = phi i32 [ 0, %dec_label_pc_1000a4b0 ], [ %v1_1000a4c4, %dec_label_pc_1000a4c4 ]
  %v1_1000a4d4 = icmp slt i32 %arg2, 0
  %v1_1000a4d8 = add i32 %arg2, 1
  br i1 %v1_1000a4d4, label %dec_label_pc_1000a550, label %dec_label_pc_1000a4ec

dec_label_pc_1000a4ec:                            ; preds = %dec_label_pc_1000a4d4, %dec_label_pc_1000a550, %dec_label_pc_1000a544
  %v2_1000a4f88 = phi i32 [ %v1_1000a4fc, %dec_label_pc_1000a544 ], [ 0, %dec_label_pc_1000a550 ], [ 0, %dec_label_pc_1000a4d4 ]
  %v0_1000a4f06 = phi i32 [ %v1_1000a4f4, %dec_label_pc_1000a544 ], [ %tmp16, %dec_label_pc_1000a550 ], [ %tmp16, %dec_label_pc_1000a4d4 ]
  %v0_1000a4ec = phi i32 [ %v0_1000a538, %dec_label_pc_1000a544 ], [ 1, %dec_label_pc_1000a550 ], [ %v1_1000a4d8, %dec_label_pc_1000a4d4 ]
  %v1_1000a4ec = add i32 %v0_1000a4ec, -1
  %v2_1000a4ec = icmp eq i32 %v1_1000a4ec, 0
  br i1 %v2_1000a4ec, label %dec_label_pc_1000a53c, label %dec_label_pc_1000a4f0

dec_label_pc_1000a4f0:                            ; preds = %dec_label_pc_1000a4ec, %dec_label_pc_1000a534
  %v2_1000a4f8 = phi i32 [ 0, %dec_label_pc_1000a534 ], [ %v2_1000a4f88, %dec_label_pc_1000a4ec ]
  %v0_1000a4f0 = phi i32 [ %v1_1000a4f4, %dec_label_pc_1000a534 ], [ %v0_1000a4f06, %dec_label_pc_1000a4ec ]
  %v0_1000a538 = phi i32 [ %v1_1000a538, %dec_label_pc_1000a534 ], [ %v1_1000a4ec, %dec_label_pc_1000a4ec ]
  %v1_1000a4f0 = inttoptr i32 %v0_1000a4f0 to i8*
  %v2_1000a4f0 = load i8, i8* %v1_1000a4f0, align 1
  %v3_1000a4f0 = zext i8 %v2_1000a4f0 to i32
  %v1_1000a4f4 = add i32 %v0_1000a4f0, 1
  %v3_1000a4f8 = add i32 %v2_1000a4f8, %arg3
  %v4_1000a4f8 = inttoptr i32 %v3_1000a4f8 to i8*
  %v5_1000a4f8 = load i8, i8* %v4_1000a4f8, align 1
  %v6_1000a4f8 = zext i8 %v5_1000a4f8 to i32
  %v1_1000a4fc = add i32 %v2_1000a4f8, 1
  %v1_1000a500 = add nuw nsw i32 %v3_1000a4f0, 191
  %v1_1000a508 = urem i32 %v1_1000a500, 256
  %v2_1000a50c = icmp ugt i32 %v1_1000a508, 25
  %v1_1000a510 = add nuw nsw i32 %v6_1000a4f8, 191
  %v1_1000a514 = urem i32 %v1_1000a510, 256
  %v2_1000a518 = icmp ugt i32 %v1_1000a514, 25
  br i1 %v2_1000a50c, label %dec_label_pc_1000a524, label %dec_label_pc_1000a520

dec_label_pc_1000a520:                            ; preds = %dec_label_pc_1000a4f0
  %v1_1000a520 = or i32 %v3_1000a4f0, 96
  br i1 %v2_1000a518, label %dec_label_pc_1000a52c, label %dec_label_pc_1000a528

dec_label_pc_1000a524:                            ; preds = %dec_label_pc_1000a4f0
  br i1 %v2_1000a518, label %dec_label_pc_1000a52c, label %dec_label_pc_1000a528

dec_label_pc_1000a528:                            ; preds = %dec_label_pc_1000a520, %dec_label_pc_1000a524
  %v0_1000a52c13 = phi i32 [ %v1_1000a520, %dec_label_pc_1000a520 ], [ %v3_1000a4f0, %dec_label_pc_1000a524 ]
  %v1_1000a528 = or i32 %v6_1000a4f8, 96
  br label %dec_label_pc_1000a52c

dec_label_pc_1000a52c:                            ; preds = %dec_label_pc_1000a520, %dec_label_pc_1000a524, %dec_label_pc_1000a528
  %v1_1000a52c = phi i32 [ %v6_1000a4f8, %dec_label_pc_1000a520 ], [ %v6_1000a4f8, %dec_label_pc_1000a524 ], [ %v1_1000a528, %dec_label_pc_1000a528 ]
  %v0_1000a52c = phi i32 [ %v1_1000a520, %dec_label_pc_1000a520 ], [ %v3_1000a4f0, %dec_label_pc_1000a524 ], [ %v0_1000a52c13, %dec_label_pc_1000a528 ]
  %v4_1000a52c = icmp eq i32 %v0_1000a52c, %v1_1000a52c
  br i1 %v4_1000a52c, label %dec_label_pc_1000a544, label %dec_label_pc_1000a534

dec_label_pc_1000a534:                            ; preds = %dec_label_pc_1000a52c
  %v1_1000a538 = add i32 %v0_1000a538, -1
  %v2_1000a538 = icmp eq i32 %v1_1000a538, 0
  br i1 %v2_1000a538, label %dec_label_pc_1000a53c, label %dec_label_pc_1000a4f0

dec_label_pc_1000a53c:                            ; preds = %dec_label_pc_1000a4ec, %dec_label_pc_1000a534
  ret i32 -1

dec_label_pc_1000a544:                            ; preds = %dec_label_pc_1000a52c
  %v4_1000a504.le = icmp eq i32 %v0_1000a50411, %v1_1000a4fc
  br i1 %v4_1000a504.le, label %dec_label_pc_1000a548, label %dec_label_pc_1000a4ec

dec_label_pc_1000a548:                            ; preds = %dec_label_pc_1000a544
  %v2_1000a548 = sub i32 %v1_1000a4f4, %tmp16
  ret i32 %v2_1000a548

dec_label_pc_1000a550:                            ; preds = %dec_label_pc_1000a4d4
  br label %dec_label_pc_1000a4ec

; uselistorder directives
  uselistorder i32 %v1_1000a538, { 1, 0 }
  uselistorder i32 %v1_1000a520, { 1, 0 }
  uselistorder i1 %v2_1000a518, { 1, 0 }
  uselistorder i32 %v1_1000a4fc, { 1, 0 }
  uselistorder i32 %v3_1000a4f0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1000a538, { 1, 0 }
  uselistorder i32 %v0_1000a4f0, { 1, 0 }
  uselistorder i32 %v2_1000a4f8, { 1, 0 }
  uselistorder i32 %tmp16, { 2, 0, 1 }
  uselistorder i32 25, { 8, 9, 10, 4, 5, 7, 0, 1, 6, 2, 3, 11, 12, 13 }
  uselistorder i32 191, { 1, 0, 2 }
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_1000a53c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a52c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000a528, { 1, 0 }
  uselistorder label %dec_label_pc_1000a4f0, { 1, 0 }
  uselistorder label %dec_label_pc_1000a4ec, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000a4c4, { 1, 0 }
}

define i32 @function_1000a55c(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a55c:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_1000a55c = load i8, i8* %arg1, align 1
  %v3_1000a564 = icmp eq i8 %v2_1000a55c, 0
  br i1 %v3_1000a564, label %dec_label_pc_1000a57c, label %dec_label_pc_1000a56c

dec_label_pc_1000a56c:                            ; preds = %dec_label_pc_1000a55c, %dec_label_pc_1000a56c
  %v0_1000a56c = phi i32 [ %v1_1000a56c, %dec_label_pc_1000a56c ], [ 0, %dec_label_pc_1000a55c ]
  %v1_1000a56c = add i32 %v0_1000a56c, 1
  %v2_1000a570 = add i32 %v1_1000a56c, %tmp
  %v3_1000a570 = inttoptr i32 %v2_1000a570 to i8*
  %v4_1000a570 = load i8, i8* %v3_1000a570, align 1
  %v3_1000a574 = icmp eq i8 %v4_1000a570, 0
  br i1 %v3_1000a574, label %dec_label_pc_1000a57c, label %dec_label_pc_1000a56c

dec_label_pc_1000a57c:                            ; preds = %dec_label_pc_1000a56c, %dec_label_pc_1000a55c
  %v0_1000a59c = phi i32 [ 0, %dec_label_pc_1000a55c ], [ %v1_1000a56c, %dec_label_pc_1000a56c ]
  %v1_1000a57c = inttoptr i32 %arg2 to i8*
  %v2_1000a57c = load i8, i8* %v1_1000a57c, align 1
  %v3_1000a584 = icmp eq i8 %v2_1000a57c, 0
  br i1 %v3_1000a584, label %dec_label_pc_1000a59c, label %dec_label_pc_1000a58c

dec_label_pc_1000a58c:                            ; preds = %dec_label_pc_1000a57c, %dec_label_pc_1000a58c
  %v0_1000a58c = phi i32 [ %v1_1000a58c, %dec_label_pc_1000a58c ], [ 0, %dec_label_pc_1000a57c ]
  %v1_1000a58c = add i32 %v0_1000a58c, 1
  %v2_1000a590 = add i32 %v1_1000a58c, %arg2
  %v3_1000a590 = inttoptr i32 %v2_1000a590 to i8*
  %v4_1000a590 = load i8, i8* %v3_1000a590, align 1
  %v3_1000a594 = icmp eq i8 %v4_1000a590, 0
  br i1 %v3_1000a594, label %dec_label_pc_1000a59c, label %dec_label_pc_1000a58c

dec_label_pc_1000a59c:                            ; preds = %dec_label_pc_1000a58c, %dec_label_pc_1000a57c
  %v0_1000a5a0 = phi i32 [ 0, %dec_label_pc_1000a57c ], [ %v1_1000a58c, %dec_label_pc_1000a58c ]
  %v4_1000a59c = icmp eq i32 %v0_1000a59c, %v0_1000a5a0
  br i1 %v4_1000a59c, label %dec_label_pc_1000a5b4, label %dec_label_pc_1000a5ac

dec_label_pc_1000a5ac:                            ; preds = %dec_label_pc_1000a5b8, %dec_label_pc_1000a59c
  ret i32 0

dec_label_pc_1000a5b4:                            ; preds = %dec_label_pc_1000a59c
  %v2_1000a5b4 = icmp eq i32 %v0_1000a59c, 0
  br i1 %v2_1000a5b4, label %dec_label_pc_1000a5d4, label %dec_label_pc_1000a5b8

dec_label_pc_1000a5b8:                            ; preds = %dec_label_pc_1000a5b4, %dec_label_pc_1000a5d0
  %v0_1000a5d0 = phi i32 [ %v1_1000a5d0, %dec_label_pc_1000a5d0 ], [ %v0_1000a59c, %dec_label_pc_1000a5b4 ]
  %v0_1000a5c0 = phi i32 [ %v1_1000a5c4, %dec_label_pc_1000a5d0 ], [ %arg2, %dec_label_pc_1000a5b4 ]
  %v0_1000a5b8 = phi i32 [ %v1_1000a5bc, %dec_label_pc_1000a5d0 ], [ %tmp, %dec_label_pc_1000a5b4 ]
  %v1_1000a5b8 = inttoptr i32 %v0_1000a5b8 to i8*
  %v2_1000a5b8 = load i8, i8* %v1_1000a5b8, align 1
  %v1_1000a5c0 = inttoptr i32 %v0_1000a5c0 to i8*
  %v2_1000a5c0 = load i8, i8* %v1_1000a5c0, align 1
  %v4_1000a5c8 = icmp eq i8 %v2_1000a5b8, %v2_1000a5c0
  br i1 %v4_1000a5c8, label %dec_label_pc_1000a5d0, label %dec_label_pc_1000a5ac

dec_label_pc_1000a5d0:                            ; preds = %dec_label_pc_1000a5b8
  %v1_1000a5c4 = add i32 %v0_1000a5c0, 1
  %v1_1000a5bc = add i32 %v0_1000a5b8, 1
  %v1_1000a5d0 = add i32 %v0_1000a5d0, -1
  %v2_1000a5d0 = icmp eq i32 %v1_1000a5d0, 0
  br i1 %v2_1000a5d0, label %dec_label_pc_1000a5d4, label %dec_label_pc_1000a5b8

dec_label_pc_1000a5d4:                            ; preds = %dec_label_pc_1000a5d0, %dec_label_pc_1000a5b4
  ret i32 1

; uselistorder directives
  uselistorder i32 %v1_1000a5d0, { 1, 0 }
  uselistorder i32 %v0_1000a5b8, { 1, 0 }
  uselistorder i32 %v0_1000a5c0, { 1, 0 }
  uselistorder label %dec_label_pc_1000a5b8, { 1, 0 }
  uselistorder label %dec_label_pc_1000a58c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a56c, { 1, 0 }
}

define i32 @function_1000a5dc(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000a5dc:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_1000a5dc = load i8, i8* %arg1, align 1
  %v3_1000a5e4 = icmp eq i8 %v2_1000a5dc, 0
  br i1 %v3_1000a5e4, label %dec_label_pc_1000a5fc, label %dec_label_pc_1000a5ec

dec_label_pc_1000a5ec:                            ; preds = %dec_label_pc_1000a5dc, %dec_label_pc_1000a5ec
  %v0_1000a5ec = phi i32 [ %v1_1000a5ec, %dec_label_pc_1000a5ec ], [ 0, %dec_label_pc_1000a5dc ]
  %v1_1000a5ec = add i32 %v0_1000a5ec, 1
  %v2_1000a5f0 = add i32 %v1_1000a5ec, %tmp
  %v3_1000a5f0 = inttoptr i32 %v2_1000a5f0 to i8*
  %v4_1000a5f0 = load i8, i8* %v3_1000a5f0, align 1
  %v3_1000a5f4 = icmp eq i8 %v4_1000a5f0, 0
  br i1 %v3_1000a5f4, label %dec_label_pc_1000a5fc, label %dec_label_pc_1000a5ec

dec_label_pc_1000a5fc:                            ; preds = %dec_label_pc_1000a5ec, %dec_label_pc_1000a5dc
  %v1_1000a61c = phi i32 [ 0, %dec_label_pc_1000a5dc ], [ %v1_1000a5ec, %dec_label_pc_1000a5ec ]
  %v1_1000a5fc = inttoptr i32 %arg2 to i8*
  %v2_1000a5fc = load i8, i8* %v1_1000a5fc, align 1
  %v3_1000a604 = icmp eq i8 %v2_1000a5fc, 0
  br i1 %v3_1000a604, label %dec_label_pc_1000a61c, label %dec_label_pc_1000a60c

dec_label_pc_1000a60c:                            ; preds = %dec_label_pc_1000a5fc, %dec_label_pc_1000a60c
  %v0_1000a60c = phi i32 [ %v1_1000a60c, %dec_label_pc_1000a60c ], [ 0, %dec_label_pc_1000a5fc ]
  %v1_1000a60c = add i32 %v0_1000a60c, 1
  %v2_1000a610 = add i32 %v1_1000a60c, %arg2
  %v3_1000a610 = inttoptr i32 %v2_1000a610 to i8*
  %v4_1000a610 = load i8, i8* %v3_1000a610, align 1
  %v3_1000a614 = icmp eq i8 %v4_1000a610, 0
  br i1 %v3_1000a614, label %dec_label_pc_1000a61c, label %dec_label_pc_1000a60c

dec_label_pc_1000a61c:                            ; preds = %dec_label_pc_1000a60c, %dec_label_pc_1000a5fc
  %v1_1000a624 = phi i32 [ 0, %dec_label_pc_1000a5fc ], [ %v1_1000a60c, %dec_label_pc_1000a60c ]
  %v3_1000a61c = icmp slt i32 %v1_1000a61c, %arg3
  br i1 %v3_1000a61c, label %dec_label_pc_1000a650, label %dec_label_pc_1000a624

dec_label_pc_1000a624:                            ; preds = %dec_label_pc_1000a61c
  %v3_1000a624 = icmp slt i32 %v1_1000a624, %arg3
  %v1_1000a628 = add i32 %arg3, 1
  br i1 %v3_1000a624, label %dec_label_pc_1000a650, label %dec_label_pc_1000a634

dec_label_pc_1000a634:                            ; preds = %dec_label_pc_1000a624, %dec_label_pc_1000a638
  %v0_1000a640 = phi i32 [ %v1_1000a644, %dec_label_pc_1000a638 ], [ %arg2, %dec_label_pc_1000a624 ]
  %v0_1000a638 = phi i32 [ %v1_1000a63c, %dec_label_pc_1000a638 ], [ %tmp, %dec_label_pc_1000a624 ]
  %v0_1000a634 = phi i32 [ %v1_1000a634, %dec_label_pc_1000a638 ], [ %v1_1000a628, %dec_label_pc_1000a624 ]
  %v1_1000a634 = add i32 %v0_1000a634, -1
  %v2_1000a634 = icmp eq i32 %v1_1000a634, 0
  br i1 %v2_1000a634, label %dec_label_pc_1000a658, label %dec_label_pc_1000a638

dec_label_pc_1000a638:                            ; preds = %dec_label_pc_1000a634
  %v1_1000a638 = inttoptr i32 %v0_1000a638 to i8*
  %v2_1000a638 = load i8, i8* %v1_1000a638, align 1
  %v1_1000a63c = add i32 %v0_1000a638, 1
  %v1_1000a640 = inttoptr i32 %v0_1000a640 to i8*
  %v2_1000a640 = load i8, i8* %v1_1000a640, align 1
  %v1_1000a644 = add i32 %v0_1000a640, 1
  %v4_1000a648 = icmp eq i8 %v2_1000a638, %v2_1000a640
  br i1 %v4_1000a648, label %dec_label_pc_1000a634, label %dec_label_pc_1000a650

dec_label_pc_1000a650:                            ; preds = %dec_label_pc_1000a638, %dec_label_pc_1000a624, %dec_label_pc_1000a61c
  ret i32 0

dec_label_pc_1000a658:                            ; preds = %dec_label_pc_1000a634
  ret i32 1

; uselistorder directives
  uselistorder i32 %v1_1000a634, { 1, 0 }
  uselistorder i32 %v0_1000a638, { 1, 0 }
  uselistorder i32 %v0_1000a640, { 1, 0 }
  uselistorder i32 %arg3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a634, { 1, 0 }
  uselistorder label %dec_label_pc_1000a60c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a5ec, { 1, 0 }
}

define i32 @function_1000a660(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000a660:
  %cr6_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg3 to i8*
  store i32 %arg3, i32* @r5, align 4
  %tmp17 = sext i8 %arg1 to i32
  store i32 %tmp17, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1000a660 = icmp eq i32 %arg3, 0
  %v4_1000a664 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_1000a664, i32* %stack_var_-64, align 4
  %v5_1000a664 = ptrtoint i32* %stack_var_-64 to i32
  br i1 %v4_1000a660, label %dec_label_pc_1000a680, label %dec_label_pc_1000a66c

dec_label_pc_1000a66c:                            ; preds = %dec_label_pc_1000a660
  %v0_1000a66c = load i32, i32* %r3.global-to-local, align 4
  %v3_1000a66c = icmp eq i32 %v0_1000a66c, 0
  store i1 %v3_1000a66c, i1* %cr6_eq.global-to-local, align 1
  br i1 %v3_1000a66c, label %dec_label_pc_1000a674, label %dec_label_pc_1000a68c

dec_label_pc_1000a674:                            ; preds = %dec_label_pc_1000a66c
  store i32 48, i32* %r0.global-to-local, align 4
  %v4_1000a678 = add i32 %arg3, 1
  %v5_1000a678 = inttoptr i32 %v4_1000a678 to i8*
  store i8 0, i8* %v5_1000a678, align 1
  %v0_1000a67c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000a67c = trunc i32 %v0_1000a67c to i8
  store i8 %v1_1000a67c, i8* %tmp, align 1
  br label %dec_label_pc_1000a680

dec_label_pc_1000a680:                            ; preds = %dec_label_pc_1000a660, %dec_label_pc_1000a70c, %dec_label_pc_1000a674
  store i32 %arg3, i32* %r3.global-to-local, align 4
  ret i32 %arg3

dec_label_pc_1000a68c:                            ; preds = %dec_label_pc_1000a66c
  %v2_1000a66c = icmp sgt i32 %v0_1000a66c, 0
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_1000a68c.not = icmp ne i32 %arg2, 10
  %brmerge = or i1 %v2_1000a66c, %v3_1000a68c.not
  br i1 %brmerge, label %dec_label_pc_1000a6a0, label %dec_label_pc_1000a754

dec_label_pc_1000a6a0:                            ; preds = %dec_label_pc_1000a68c, %dec_label_pc_1000a754
  %v0_1000a6a42 = phi i32 [ %v0_1000a66c, %dec_label_pc_1000a68c ], [ %v1_1000a754, %dec_label_pc_1000a754 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_1000a68c ], [ 1, %dec_label_pc_1000a754 ]
  store i32 %storemerge, i32* %r8.global-to-local, align 4
  store i32 32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000a6a4

dec_label_pc_1000a6a4:                            ; preds = %dec_label_pc_1000a6d0.dec_label_pc_1000a6a4_crit_edge, %dec_label_pc_1000a6a0
  %v1_1000a6a8 = phi i32 [ %v1_1000a6a8.pre, %dec_label_pc_1000a6d0.dec_label_pc_1000a6a4_crit_edge ], [ 32, %dec_label_pc_1000a6a0 ]
  %v0_1000a6a8 = phi i32 [ %v0_1000a6a8.pre, %dec_label_pc_1000a6d0.dec_label_pc_1000a6a4_crit_edge ], [ %v5_1000a664, %dec_label_pc_1000a6a0 ]
  %v1_1000a6b8 = phi i32 [ %v0_1000a6a4.pre, %dec_label_pc_1000a6d0.dec_label_pc_1000a6a4_crit_edge ], [ %v0_1000a6a42, %dec_label_pc_1000a6a0 ]
  %v2_1000a6a4 = udiv i32 %v1_1000a6b8, %arg2
  %v2_1000a6a8 = add i32 %v0_1000a6a8, %v1_1000a6a8
  store i32 %v2_1000a6a8, i32* %r11.global-to-local, align 4
  %v1_1000a6ac = add i32 %v1_1000a6a8, -1
  store i32 %v1_1000a6ac, i32* %r10.global-to-local, align 4
  %v2_1000a6b0 = mul i32 %v2_1000a6a4, %arg2
  %v3_1000a6b4 = icmp ult i32 %v1_1000a6b8, %arg2
  store i1 %v3_1000a6b4, i1* %cr6_eq.global-to-local, align 1
  %v2_1000a6b8 = sub i32 %v1_1000a6b8, %v2_1000a6b0
  store i32 %v2_1000a6b8, i32* %r9.global-to-local, align 4
  store i32 %v2_1000a6a4, i32* %r3.global-to-local, align 4
  %tmp22 = icmp slt i32 %v2_1000a6b8, 10
  %storemerge15.v = select i1 %tmp22, i32 48, i32 55
  %storemerge15 = add i32 %storemerge15.v, %v2_1000a6b8
  %v0_1000a6d0.off0 = trunc i32 %storemerge15 to i8
  store i32 %storemerge15, i32* %r0.global-to-local, align 4
  %v3_1000a6d0 = add i32 %v2_1000a6a8, 8
  %v4_1000a6d0 = inttoptr i32 %v3_1000a6d0 to i8*
  store i8 %v0_1000a6d0.off0, i8* %v4_1000a6d0, align 1
  %v0_1000a6d4 = load i1, i1* %cr6_eq.global-to-local, align 1
  br i1 %v0_1000a6d4, label %dec_label_pc_1000a6d8, label %dec_label_pc_1000a6d0.dec_label_pc_1000a6a4_crit_edge

dec_label_pc_1000a6d0.dec_label_pc_1000a6a4_crit_edge: ; preds = %dec_label_pc_1000a6a4
  %v0_1000a6a4.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_1000a6a8.pre = load i32, i32* @r1, align 4
  %v1_1000a6a8.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000a6a4

dec_label_pc_1000a6d8:                            ; preds = %dec_label_pc_1000a6a4
  %v0_1000a6d8 = load i32, i32* %r8.global-to-local, align 4
  %v3_1000a6d8 = icmp eq i32 %v0_1000a6d8, 0
  br i1 %v3_1000a6d8, label %dec_label_pc_1000a6e0, label %dec_label_pc_1000a740

dec_label_pc_1000a6e0:                            ; preds = %dec_label_pc_1000a6d8
  %v0_1000a6e0 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a6e0 = add i32 %v0_1000a6e0, 1
  store i32 %v1_1000a6e0, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000a6e4

dec_label_pc_1000a6e4:                            ; preds = %dec_label_pc_1000a740, %dec_label_pc_1000a6e0
  %v1_1000a6ec = phi i32 [ %v1_1000a6e8.pre, %dec_label_pc_1000a740 ], [ %v1_1000a6e0, %dec_label_pc_1000a6e0 ]
  %v2_1000a6e4 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1000a6e4, i32* %r9.global-to-local, align 4
  %v2_1000a6e8 = add i32 %v1_1000a6ec, %v2_1000a6e4
  %v3_1000a6e8 = inttoptr i32 %v2_1000a6e8 to i8*
  %v4_1000a6e8 = load i8, i8* %v3_1000a6e8, align 1
  %v5_1000a6e8 = zext i8 %v4_1000a6e8 to i32
  store i32 %v5_1000a6e8, i32* %r0.global-to-local, align 4
  store i32 %v2_1000a6e8, i32* %r9.global-to-local, align 4
  %v3_1000a6f0 = icmp eq i8 %v4_1000a6e8, 0
  br i1 %v3_1000a6f0, label %dec_label_pc_1000a768, label %dec_label_pc_1000a6f8

dec_label_pc_1000a6f8:                            ; preds = %dec_label_pc_1000a6e4
  store i32 0, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000a6fc

dec_label_pc_1000a6fc:                            ; preds = %dec_label_pc_1000a6fc, %dec_label_pc_1000a6f8
  %v0_1000a6fc = phi i32 [ %v1_1000a6fc, %dec_label_pc_1000a6fc ], [ 0, %dec_label_pc_1000a6f8 ]
  %v1_1000a6fc = add i32 %v0_1000a6fc, 1
  store i32 %v1_1000a6fc, i32* %r10.global-to-local, align 4
  %v2_1000a700 = add i32 %v1_1000a6fc, %v2_1000a6e8
  %v3_1000a700 = inttoptr i32 %v2_1000a700 to i8*
  %v4_1000a700 = load i8, i8* %v3_1000a700, align 1
  %v5_1000a700 = zext i8 %v4_1000a700 to i32
  store i32 %v5_1000a700, i32* %r0.global-to-local, align 4
  %v3_1000a704 = icmp eq i8 %v4_1000a700, 0
  br i1 %v3_1000a704, label %dec_label_pc_1000a70c, label %dec_label_pc_1000a6fc

dec_label_pc_1000a70c:                            ; preds = %dec_label_pc_1000a6fc
  %v3_1000a70c = icmp eq i32 %v1_1000a6fc, -1
  br i1 %v3_1000a70c, label %dec_label_pc_1000a680, label %dec_label_pc_1000a714

dec_label_pc_1000a714:                            ; preds = %dec_label_pc_1000a70c
  store i32 %arg3, i32* %r11.global-to-local, align 4
  %phitmp = add i32 %v0_1000a6fc, 2
  br label %dec_label_pc_1000a718

dec_label_pc_1000a718:                            ; preds = %dec_label_pc_1000a768, %dec_label_pc_1000a714
  %v0_1000a718 = phi i32 [ 1, %dec_label_pc_1000a768 ], [ %phitmp, %dec_label_pc_1000a714 ]
  store i32 %v0_1000a718, i32* %r10.global-to-local, align 4
  store i32 %v0_1000a718, i32* %ctr.global-to-local, align 4
  %v2_1000a72024 = load i8, i8* %v3_1000a6e8, align 1
  %v3_1000a72025 = zext i8 %v2_1000a72024 to i32
  store i32 %v3_1000a72025, i32* %r0.global-to-local, align 4
  %v1_1000a72426 = add i32 %v2_1000a6e8, 1
  store i32 %v1_1000a72426, i32* %r9.global-to-local, align 4
  store i8 %v2_1000a72024, i8* %tmp, align 1
  %v0_1000a72c28 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a72c29 = add i32 %v0_1000a72c28, 1
  store i32 %v1_1000a72c29, i32* %r11.global-to-local, align 4
  %v0_1000a73030 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a73031 = add i32 %v0_1000a73030, -1
  store i32 %v1_1000a73031, i32* %ctr.global-to-local, align 4
  %v2_1000a73032 = icmp eq i32 %v1_1000a73031, 0
  br i1 %v2_1000a73032, label %dec_label_pc_1000a734, label %dec_label_pc_1000a720.dec_label_pc_1000a720_crit_edge

dec_label_pc_1000a720.dec_label_pc_1000a720_crit_edge: ; preds = %dec_label_pc_1000a718, %dec_label_pc_1000a720.dec_label_pc_1000a720_crit_edge
  %v1_1000a72c33 = phi i32 [ %v1_1000a72c, %dec_label_pc_1000a720.dec_label_pc_1000a720_crit_edge ], [ %v1_1000a72c29, %dec_label_pc_1000a718 ]
  %v0_1000a720.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a720 = inttoptr i32 %v0_1000a720.pre to i8*
  %v2_1000a720 = load i8, i8* %v1_1000a720, align 1
  %v3_1000a720 = zext i8 %v2_1000a720 to i32
  store i32 %v3_1000a720, i32* %r0.global-to-local, align 4
  %v1_1000a724 = add i32 %v0_1000a720.pre, 1
  store i32 %v1_1000a724, i32* %r9.global-to-local, align 4
  %v3_1000a728 = inttoptr i32 %v1_1000a72c33 to i8*
  store i8 %v2_1000a720, i8* %v3_1000a728, align 1
  %v0_1000a72c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a72c = add i32 %v0_1000a72c, 1
  store i32 %v1_1000a72c, i32* %r11.global-to-local, align 4
  %v0_1000a730 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a730 = add i32 %v0_1000a730, -1
  store i32 %v1_1000a730, i32* %ctr.global-to-local, align 4
  %v2_1000a730 = icmp eq i32 %v1_1000a730, 0
  br i1 %v2_1000a730, label %dec_label_pc_1000a734, label %dec_label_pc_1000a720.dec_label_pc_1000a720_crit_edge

dec_label_pc_1000a734:                            ; preds = %dec_label_pc_1000a720.dec_label_pc_1000a720_crit_edge, %dec_label_pc_1000a718
  store i32 %arg3, i32* %r3.global-to-local, align 4
  ret i32 %arg3

dec_label_pc_1000a740:                            ; preds = %dec_label_pc_1000a6d8
  %v0_1000a740.pre = load i32, i32* @r1, align 4
  %v1_1000a740.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_1000a740 = add i32 %v1_1000a740.pre, %v0_1000a740.pre
  store i32 %v2_1000a740, i32* %r9.global-to-local, align 4
  store i32 45, i32* %r0.global-to-local, align 4
  %v3_1000a748 = add i32 %v2_1000a740, 8
  %v4_1000a748 = inttoptr i32 %v3_1000a748 to i8*
  store i8 45, i8* %v4_1000a748, align 1
  %v1_1000a6e8.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000a6e4

dec_label_pc_1000a754:                            ; preds = %dec_label_pc_1000a68c
  %v1_1000a754 = sub i32 0, %v0_1000a66c
  store i32 %v1_1000a754, i32* %r3.global-to-local, align 4
  store i32 32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000a6a0

dec_label_pc_1000a768:                            ; preds = %dec_label_pc_1000a6e4
  store i32 %arg3, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000a718

; uselistorder directives
  uselistorder i32 %v1_1000a754, { 1, 0 }
  uselistorder i32 %v1_1000a730, { 1, 0 }
  uselistorder i32 %v1_1000a72c, { 1, 0 }
  uselistorder i32 %v0_1000a718, { 1, 0 }
  uselistorder i32 %v1_1000a6fc, { 0, 1, 3, 2 }
  uselistorder i32 %v2_1000a6a4, { 1, 0 }
  uselistorder i32 %v1_1000a6b8, { 1, 0, 2 }
  uselistorder i32 %v1_1000a6a8, { 1, 0 }
  uselistorder i32 %v0_1000a66c, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 2, 4, 3, 0, 5, 6, 1 }
  uselistorder i32* %r3.global-to-local, { 5, 6, 2, 3, 4, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 2, 4, 3, 0, 5, 6, 1 }
  uselistorder i32* %r10.global-to-local, { 6, 7, 0, 3, 8, 9, 11, 10, 2, 1, 4, 5 }
  uselistorder i32* %r0.global-to-local, { 5, 6, 0, 7, 8, 1, 2, 3, 4 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder i32 45, { 3, 2, 0, 4, 1, 5 }
  uselistorder i32 %arg3, { 1, 4, 5, 6, 2, 3, 0, 7, 9, 8 }
  uselistorder i32 %arg2, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_1000a720.dec_label_pc_1000a720_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000a6a0, { 1, 0 }
  uselistorder label %dec_label_pc_1000a680, { 1, 2, 0 }
}

define i32 @function_1000a774(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000a774:
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-32 = alloca i32, align 4
  %v4_1000a784 = icmp eq i32 %arg2, -2143521772
  %v2_1000a798 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1000a798, i32* %stack_var_-32, align 4
  br i1 %v4_1000a784, label %dec_label_pc_1000a7f8, label %dec_label_pc_1000a7b8

dec_label_pc_1000a7b8:                            ; preds = %dec_label_pc_1000a774
  %v3_1000a7b8 = icmp ugt i32 %arg2, -2143521772
  br i1 %v3_1000a7b8, label %dec_label_pc_1000a7d0, label %dec_label_pc_1000a7c0

dec_label_pc_1000a7c0:                            ; preds = %dec_label_pc_1000a7b8
  %v3_1000a7c4 = icmp eq i32 %arg2, 1077703699
  br i1 %v3_1000a7c4, label %dec_label_pc_1000a7ec, label %dec_label_pc_1000a818

dec_label_pc_1000a7d0:                            ; preds = %dec_label_pc_1000a7b8
  %v1_1000a7d0 = xor i32 %arg2, -2143551488
  %v3_1000a7d4 = icmp eq i32 %v1_1000a7d0, 29717
  br i1 %v3_1000a7d4, label %dec_label_pc_1000a808, label %dec_label_pc_1000a7dc

dec_label_pc_1000a7dc:                            ; preds = %dec_label_pc_1000a7d0
  %v3_1000a7e0 = icmp eq i32 %v1_1000a7d0, 29718
  br i1 %v3_1000a7e0, label %dec_label_pc_1000a810, label %dec_label_pc_1000a818

dec_label_pc_1000a7ec:                            ; preds = %dec_label_pc_1000a7c0
  store i32 ptrtoint (i32* @global_var_1000a7f4.481 to i32), i32* @lr, align 4
  %v2_1000a7f0 = inttoptr i32 %arg3 to i32*
  %v3_1000a7f0 = call i32 @function_1000b2bc(i32* %v2_1000a7f0, i32 %arg1)
  br label %dec_label_pc_1000a800

dec_label_pc_1000a7f8:                            ; preds = %dec_label_pc_1000a774
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_1000a7fc

dec_label_pc_1000a7fc:                            ; preds = %dec_label_pc_1000a810, %dec_label_pc_1000a808, %dec_label_pc_1000a7f8
  store i32 268478464, i32* @lr, align 4
  %v0_1000a7fc = call i32 @function_1000b358()
  br label %dec_label_pc_1000a800

dec_label_pc_1000a800:                            ; preds = %dec_label_pc_1000a7ec, %dec_label_pc_1000a7fc
  %storemerge = phi i32 [ %v0_1000a7fc, %dec_label_pc_1000a7fc ], [ %v3_1000a7f0, %dec_label_pc_1000a7ec ]
  store i32 %storemerge, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000a844

dec_label_pc_1000a808:                            ; preds = %dec_label_pc_1000a7d0
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_1000a7fc

dec_label_pc_1000a810:                            ; preds = %dec_label_pc_1000a7dc
  store i32 2, i32* @r4, align 4
  br label %dec_label_pc_1000a7fc

dec_label_pc_1000a818:                            ; preds = %dec_label_pc_1000a7dc, %dec_label_pc_1000a7c0
  %v0_1000a828 = call i32 @__asm_mfcr()
  %v1_1000a82c = and i32 %v0_1000a828, 268435456
  %v3_1000a82c = icmp eq i32 %v1_1000a82c, 0
  store i32 %v0_1000a828, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a82c, label %dec_label_pc_1000a844, label %dec_label_pc_1000a838

dec_label_pc_1000a838:                            ; preds = %dec_label_pc_1000a818
  %v0_1000a838 = call i32 @function_1000b0a8()
  %v0_1000a83c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a83c = inttoptr i32 %v0_1000a838 to i32*
  store i32 %v0_1000a83c, i32* %v2_1000a83c, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000a844

dec_label_pc_1000a844:                            ; preds = %dec_label_pc_1000a818, %dec_label_pc_1000a800, %dec_label_pc_1000a838
  %v0_1000a848 = phi i32 [ %v0_1000a828, %dec_label_pc_1000a818 ], [ %storemerge, %dec_label_pc_1000a800 ], [ -1, %dec_label_pc_1000a838 ]
  ret i32 %v0_1000a848

; uselistorder directives
  uselistorder i32 %arg2, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000a844, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a800, { 1, 0 }
}

define i32 @function_1000a85c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a85c:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_1000a870 = load i32, i32* @r4, align 4
  %v1_1000a870 = add i32 %v0_1000a870, -12
  %v2_1000a874 = icmp ugt i32 %v1_1000a870, 2
  %v2_1000a87c = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1000a87c, i32* %stack_var_-32, align 4
  br i1 %v2_1000a874, label %dec_label_pc_1000a8a8, label %dec_label_pc_1000a898

dec_label_pc_1000a898:                            ; preds = %dec_label_pc_1000a85c
  store i32 268478624, i32* @lr, align 4
  %v2_1000a89c = call i32 @function_1000a8e0(i32 3)
  store i32 %v2_1000a89c, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000a8c8

dec_label_pc_1000a8a8:                            ; preds = %dec_label_pc_1000a85c
  %v0_1000a8ac = call i32 @__asm_mfcr()
  %v1_1000a8b0 = and i32 %v0_1000a8ac, 268435456
  %v3_1000a8b0 = icmp eq i32 %v1_1000a8b0, 0
  store i32 %v0_1000a8ac, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a8b0, label %dec_label_pc_1000a8c8, label %dec_label_pc_1000a8bc

dec_label_pc_1000a8bc:                            ; preds = %dec_label_pc_1000a8a8
  %v0_1000a8bc = call i32 @function_1000b0a8()
  %v0_1000a8c0 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a8c0 = inttoptr i32 %v0_1000a8bc to i32*
  store i32 %v0_1000a8c0, i32* %v2_1000a8c0, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000a8c8

dec_label_pc_1000a8c8:                            ; preds = %dec_label_pc_1000a8a8, %dec_label_pc_1000a898, %dec_label_pc_1000a8bc
  %v0_1000a8cc = phi i32 [ %v0_1000a8ac, %dec_label_pc_1000a8a8 ], [ %v2_1000a89c, %dec_label_pc_1000a898 ], [ -1, %dec_label_pc_1000a8bc ]
  ret i32 %v0_1000a8cc

; uselistorder directives
  uselistorder label %dec_label_pc_1000a8c8, { 2, 0, 1 }
}

define i32 @function_1000a8e0(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a8e0:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_1000a8f8 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1000a8f8, i32* %stack_var_-32, align 4
  %v0_1000a914 = call i32 @__asm_mfcr()
  %v1_1000a918 = and i32 %v0_1000a914, 268435456
  %v3_1000a918 = icmp eq i32 %v1_1000a918, 0
  store i32 %v0_1000a914, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a918, label %dec_label_pc_1000a930, label %dec_label_pc_1000a924

dec_label_pc_1000a924:                            ; preds = %dec_label_pc_1000a8e0
  %v0_1000a924 = call i32 @function_1000b0a8()
  %v0_1000a928 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a928 = inttoptr i32 %v0_1000a924 to i32*
  store i32 %v0_1000a928, i32* %v2_1000a928, align 4
  br label %dec_label_pc_1000a930

dec_label_pc_1000a930:                            ; preds = %dec_label_pc_1000a8e0, %dec_label_pc_1000a924
  %v0_1000a940 = phi i32 [ %v0_1000a914, %dec_label_pc_1000a8e0 ], [ -1, %dec_label_pc_1000a924 ]
  ret i32 %v0_1000a940

; uselistorder directives
  uselistorder label %dec_label_pc_1000a930, { 1, 0 }
}

define i32 @function_1000a944(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a944:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000a95c = call i32 @__asm_mfcr()
  %v1_1000a960 = and i32 %v0_1000a95c, 268435456
  %v3_1000a960 = icmp eq i32 %v1_1000a960, 0
  store i32 %v0_1000a95c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a960, label %dec_label_pc_1000a978, label %dec_label_pc_1000a96c

dec_label_pc_1000a96c:                            ; preds = %dec_label_pc_1000a944
  %v0_1000a96c = call i32 @function_1000b0a8()
  %v0_1000a970 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a970 = inttoptr i32 %v0_1000a96c to i32*
  store i32 %v0_1000a970, i32* %v2_1000a970, align 4
  br label %dec_label_pc_1000a978

dec_label_pc_1000a978:                            ; preds = %dec_label_pc_1000a944, %dec_label_pc_1000a96c
  %v0_1000a988 = phi i32 [ %v0_1000a95c, %dec_label_pc_1000a944 ], [ -1, %dec_label_pc_1000a96c ]
  ret i32 %v0_1000a988

; uselistorder directives
  uselistorder label %dec_label_pc_1000a978, { 1, 0 }
}

define i32 @function_1000a98c() local_unnamed_addr {
dec_label_pc_1000a98c:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000a9a4 = call i32 @__asm_mfcr()
  %v1_1000a9a8 = and i32 %v0_1000a9a4, 268435456
  %v3_1000a9a8 = icmp eq i32 %v1_1000a9a8, 0
  store i32 %v0_1000a9a4, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a9a8, label %dec_label_pc_1000a9c0, label %dec_label_pc_1000a9b4

dec_label_pc_1000a9b4:                            ; preds = %dec_label_pc_1000a98c
  %v0_1000a9b4 = call i32 @function_1000b0a8()
  %v0_1000a9b8 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a9b8 = inttoptr i32 %v0_1000a9b4 to i32*
  store i32 %v0_1000a9b8, i32* %v2_1000a9b8, align 4
  br label %dec_label_pc_1000a9c0

dec_label_pc_1000a9c0:                            ; preds = %dec_label_pc_1000a98c, %dec_label_pc_1000a9b4
  %v0_1000a9d0 = phi i32 [ %v0_1000a9a4, %dec_label_pc_1000a98c ], [ -1, %dec_label_pc_1000a9b4 ]
  ret i32 %v0_1000a9d0

; uselistorder directives
  uselistorder label %dec_label_pc_1000a9c0, { 1, 0 }
}

define i32 @function_1000a9d4() local_unnamed_addr {
dec_label_pc_1000a9d4:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000a9ec = call i32 @__asm_mfcr()
  %v1_1000a9f0 = and i32 %v0_1000a9ec, 268435456
  %v3_1000a9f0 = icmp eq i32 %v1_1000a9f0, 0
  store i32 %v0_1000a9ec, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a9f0, label %dec_label_pc_1000aa08, label %dec_label_pc_1000a9fc

dec_label_pc_1000a9fc:                            ; preds = %dec_label_pc_1000a9d4
  %v0_1000a9fc = call i32 @function_1000b0a8()
  %v0_1000aa00 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000aa00 = inttoptr i32 %v0_1000a9fc to i32*
  store i32 %v0_1000aa00, i32* %v2_1000aa00, align 4
  br label %dec_label_pc_1000aa08

dec_label_pc_1000aa08:                            ; preds = %dec_label_pc_1000a9d4, %dec_label_pc_1000a9fc
  %v0_1000aa18 = phi i32 [ %v0_1000a9ec, %dec_label_pc_1000a9d4 ], [ -1, %dec_label_pc_1000a9fc ]
  ret i32 %v0_1000aa18

; uselistorder directives
  uselistorder label %dec_label_pc_1000aa08, { 1, 0 }
}

define i32 @function_1000aa1c() local_unnamed_addr {
dec_label_pc_1000aa1c:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000aa34 = call i32 @__asm_mfcr()
  %v1_1000aa38 = and i32 %v0_1000aa34, 268435456
  %v3_1000aa38 = icmp eq i32 %v1_1000aa38, 0
  store i32 %v0_1000aa34, i32* %r31.global-to-local, align 4
  br i1 %v3_1000aa38, label %dec_label_pc_1000aa50, label %dec_label_pc_1000aa44

dec_label_pc_1000aa44:                            ; preds = %dec_label_pc_1000aa1c
  %v0_1000aa44 = call i32 @function_1000b0a8()
  %v0_1000aa48 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000aa48 = inttoptr i32 %v0_1000aa44 to i32*
  store i32 %v0_1000aa48, i32* %v2_1000aa48, align 4
  br label %dec_label_pc_1000aa50

dec_label_pc_1000aa50:                            ; preds = %dec_label_pc_1000aa1c, %dec_label_pc_1000aa44
  %v0_1000aa60 = phi i32 [ %v0_1000aa34, %dec_label_pc_1000aa1c ], [ -1, %dec_label_pc_1000aa44 ]
  ret i32 %v0_1000aa60

; uselistorder directives
  uselistorder label %dec_label_pc_1000aa50, { 1, 0 }
}

define i32 @function_1000aa64() local_unnamed_addr {
dec_label_pc_1000aa64:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000aa7c = call i32 @__asm_mfcr()
  %v1_1000aa80 = and i32 %v0_1000aa7c, 268435456
  %v3_1000aa80 = icmp eq i32 %v1_1000aa80, 0
  store i32 %v0_1000aa7c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000aa80, label %dec_label_pc_1000aa98, label %dec_label_pc_1000aa8c

dec_label_pc_1000aa8c:                            ; preds = %dec_label_pc_1000aa64
  %v0_1000aa8c = call i32 @function_1000b0a8()
  %v0_1000aa90 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000aa90 = inttoptr i32 %v0_1000aa8c to i32*
  store i32 %v0_1000aa90, i32* %v2_1000aa90, align 4
  br label %dec_label_pc_1000aa98

dec_label_pc_1000aa98:                            ; preds = %dec_label_pc_1000aa64, %dec_label_pc_1000aa8c
  %v0_1000aaa8 = phi i32 [ %v0_1000aa7c, %dec_label_pc_1000aa64 ], [ -1, %dec_label_pc_1000aa8c ]
  ret i32 %v0_1000aaa8

; uselistorder directives
  uselistorder label %dec_label_pc_1000aa98, { 1, 0 }
}

define i32 @function_1000aaac(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000aaac:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000aac4 = call i32 @__asm_mfcr()
  %v1_1000aac8 = and i32 %v0_1000aac4, 268435456
  %v3_1000aac8 = icmp eq i32 %v1_1000aac8, 0
  store i32 %v0_1000aac4, i32* %r31.global-to-local, align 4
  br i1 %v3_1000aac8, label %dec_label_pc_1000aae0, label %dec_label_pc_1000aad4

dec_label_pc_1000aad4:                            ; preds = %dec_label_pc_1000aaac
  %v0_1000aad4 = call i32 @function_1000b0a8()
  %v0_1000aad8 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000aad8 = inttoptr i32 %v0_1000aad4 to i32*
  store i32 %v0_1000aad8, i32* %v2_1000aad8, align 4
  br label %dec_label_pc_1000aae0

dec_label_pc_1000aae0:                            ; preds = %dec_label_pc_1000aaac, %dec_label_pc_1000aad4
  %v0_1000aaf0 = phi i32 [ %v0_1000aac4, %dec_label_pc_1000aaac ], [ -1, %dec_label_pc_1000aad4 ]
  ret i32 %v0_1000aaf0

; uselistorder directives
  uselistorder label %dec_label_pc_1000aae0, { 1, 0 }
}

define i32 @function_1000aaf4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000aaf4:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v1_1000ab08 = and i32 %arg2, 64
  %v3_1000ab08 = icmp eq i32 %v1_1000ab08, 0
  br i1 %v3_1000ab08, label %dec_label_pc_1000ab34, label %dec_label_pc_1000ab18

dec_label_pc_1000ab18:                            ; preds = %dec_label_pc_1000aaf4
  %v2_1000ab20 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1000ab20, i32* %stack_var_-32, align 4
  %v0_1000ab30 = load i32, i32* @r5, align 4
  br label %dec_label_pc_1000ab34

dec_label_pc_1000ab34:                            ; preds = %dec_label_pc_1000aaf4, %dec_label_pc_1000ab18
  %v0_1000ab34 = phi i32 [ 0, %dec_label_pc_1000aaf4 ], [ %v0_1000ab30, %dec_label_pc_1000ab18 ]
  store i32 %v0_1000ab34, i32* @r5, align 4
  %v0_1000ab3c = call i32 @__asm_mfcr()
  %v1_1000ab40 = and i32 %v0_1000ab3c, 268435456
  %v3_1000ab40 = icmp eq i32 %v1_1000ab40, 0
  store i32 %v0_1000ab3c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000ab40, label %dec_label_pc_1000ab58, label %dec_label_pc_1000ab4c

dec_label_pc_1000ab4c:                            ; preds = %dec_label_pc_1000ab34
  %v0_1000ab4c = call i32 @function_1000b0a8()
  %v0_1000ab50 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ab50 = inttoptr i32 %v0_1000ab4c to i32*
  store i32 %v0_1000ab50, i32* %v2_1000ab50, align 4
  br label %dec_label_pc_1000ab58

dec_label_pc_1000ab58:                            ; preds = %dec_label_pc_1000ab34, %dec_label_pc_1000ab4c
  %v0_1000ab68 = phi i32 [ %v0_1000ab3c, %dec_label_pc_1000ab34 ], [ -1, %dec_label_pc_1000ab4c ]
  ret i32 %v0_1000ab68

; uselistorder directives
  uselistorder label %dec_label_pc_1000ab58, { 1, 0 }
  uselistorder label %dec_label_pc_1000ab34, { 1, 0 }
}

define i32 @function_1000ab6c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000ab6c:
  store i32 %arg1, i32* @r5, align 4
  %v2_1000ab78 = call i32 @function_1000aaf4(i32 577, i32 577)
  ret i32 %v2_1000ab78
}

define i32 @function_1000ab7c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000ab7c:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000ab94 = call i32 @__asm_mfcr()
  %v1_1000ab98 = and i32 %v0_1000ab94, 268435456
  %v3_1000ab98 = icmp eq i32 %v1_1000ab98, 0
  store i32 %v0_1000ab94, i32* %r31.global-to-local, align 4
  br i1 %v3_1000ab98, label %dec_label_pc_1000abb0, label %dec_label_pc_1000aba4

dec_label_pc_1000aba4:                            ; preds = %dec_label_pc_1000ab7c
  %v0_1000aba4 = call i32 @function_1000b0a8()
  %v0_1000aba8 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000aba8 = inttoptr i32 %v0_1000aba4 to i32*
  store i32 %v0_1000aba8, i32* %v2_1000aba8, align 4
  br label %dec_label_pc_1000abb0

dec_label_pc_1000abb0:                            ; preds = %dec_label_pc_1000ab7c, %dec_label_pc_1000aba4
  %v0_1000abc0 = phi i32 [ %v0_1000ab94, %dec_label_pc_1000ab7c ], [ -1, %dec_label_pc_1000aba4 ]
  ret i32 %v0_1000abc0

; uselistorder directives
  uselistorder label %dec_label_pc_1000abb0, { 1, 0 }
}

define i32 @function_1000abc4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000abc4:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000abdc = call i32 @__asm_mfcr()
  %v1_1000abe0 = and i32 %v0_1000abdc, 268435456
  %v3_1000abe0 = icmp eq i32 %v1_1000abe0, 0
  store i32 %v0_1000abdc, i32* %r31.global-to-local, align 4
  br i1 %v3_1000abe0, label %dec_label_pc_1000abf8, label %dec_label_pc_1000abec

dec_label_pc_1000abec:                            ; preds = %dec_label_pc_1000abc4
  %v0_1000abec = call i32 @function_1000b0a8()
  %v0_1000abf0 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000abf0 = inttoptr i32 %v0_1000abec to i32*
  store i32 %v0_1000abf0, i32* %v2_1000abf0, align 4
  br label %dec_label_pc_1000abf8

dec_label_pc_1000abf8:                            ; preds = %dec_label_pc_1000abc4, %dec_label_pc_1000abec
  %v0_1000ac08 = phi i32 [ %v0_1000abdc, %dec_label_pc_1000abc4 ], [ -1, %dec_label_pc_1000abec ]
  ret i32 %v0_1000ac08

; uselistorder directives
  uselistorder label %dec_label_pc_1000abf8, { 1, 0 }
}

define i32 @function_1000ac0c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000ac0c:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000ac24 = call i32 @__asm_mfcr()
  %v1_1000ac28 = and i32 %v0_1000ac24, 268435456
  %v3_1000ac28 = icmp eq i32 %v1_1000ac28, 0
  store i32 %v0_1000ac24, i32* %r31.global-to-local, align 4
  br i1 %v3_1000ac28, label %dec_label_pc_1000ac40, label %dec_label_pc_1000ac34

dec_label_pc_1000ac34:                            ; preds = %dec_label_pc_1000ac0c
  %v0_1000ac34 = call i32 @function_1000b0a8()
  %v0_1000ac38 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ac38 = inttoptr i32 %v0_1000ac34 to i32*
  store i32 %v0_1000ac38, i32* %v2_1000ac38, align 4
  br label %dec_label_pc_1000ac40

dec_label_pc_1000ac40:                            ; preds = %dec_label_pc_1000ac0c, %dec_label_pc_1000ac34
  %v0_1000ac50 = phi i32 [ %v0_1000ac24, %dec_label_pc_1000ac0c ], [ -1, %dec_label_pc_1000ac34 ]
  ret i32 %v0_1000ac50

; uselistorder directives
  uselistorder label %dec_label_pc_1000ac40, { 1, 0 }
}

define i32 @function_1000ac54(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1000ac54:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000ac6c = call i32 @__asm_mfcr()
  %v1_1000ac70 = and i32 %v0_1000ac6c, 268435456
  %v3_1000ac70 = icmp eq i32 %v1_1000ac70, 0
  store i32 %v0_1000ac6c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000ac70, label %dec_label_pc_1000ac88, label %dec_label_pc_1000ac7c

dec_label_pc_1000ac7c:                            ; preds = %dec_label_pc_1000ac54
  %v0_1000ac7c = call i32 @function_1000b0a8()
  %v0_1000ac80 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ac80 = inttoptr i32 %v0_1000ac7c to i32*
  store i32 %v0_1000ac80, i32* %v2_1000ac80, align 4
  br label %dec_label_pc_1000ac88

dec_label_pc_1000ac88:                            ; preds = %dec_label_pc_1000ac54, %dec_label_pc_1000ac7c
  %v0_1000ac98 = phi i32 [ %v0_1000ac6c, %dec_label_pc_1000ac54 ], [ -1, %dec_label_pc_1000ac7c ]
  ret i32 %v0_1000ac98

; uselistorder directives
  uselistorder label %dec_label_pc_1000ac88, { 1, 0 }
}

define i32 @function_1000ac9c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000ac9c:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000acb4 = call i32 @__asm_mfcr()
  %v1_1000acb8 = and i32 %v0_1000acb4, 268435456
  %v3_1000acb8 = icmp eq i32 %v1_1000acb8, 0
  store i32 %v0_1000acb4, i32* %r31.global-to-local, align 4
  br i1 %v3_1000acb8, label %dec_label_pc_1000acd0, label %dec_label_pc_1000acc4

dec_label_pc_1000acc4:                            ; preds = %dec_label_pc_1000ac9c
  %v0_1000acc4 = call i32 @function_1000b0a8()
  %v0_1000acc8 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000acc8 = inttoptr i32 %v0_1000acc4 to i32*
  store i32 %v0_1000acc8, i32* %v2_1000acc8, align 4
  br label %dec_label_pc_1000acd0

dec_label_pc_1000acd0:                            ; preds = %dec_label_pc_1000ac9c, %dec_label_pc_1000acc4
  %v0_1000ace0 = phi i32 [ %v0_1000acb4, %dec_label_pc_1000ac9c ], [ -1, %dec_label_pc_1000acc4 ]
  ret i32 %v0_1000ace0

; uselistorder directives
  uselistorder label %dec_label_pc_1000acd0, { 1, 0 }
}

define i32 @function_1000ace4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000ace4:
  %r31.global-to-local = alloca i32, align 4
  %v3_1000ace4 = icmp eq i32 %arg2, 0
  br i1 %v3_1000ace4, label %dec_label_pc_1000ad24, label %dec_label_pc_1000ad0c

dec_label_pc_1000ad0c:                            ; preds = %dec_label_pc_1000ace4
  store i32 -1, i32* %r31.global-to-local, align 4
  %tmp5 = icmp ult i32 %arg1, 3
  br i1 %tmp5, label %dec_label_pc_1000ad24, label %dec_label_pc_1000ad14

dec_label_pc_1000ad14:                            ; preds = %dec_label_pc_1000ad0c
  %v0_1000ad14 = call i32 @function_1000b0a8()
  %v2_1000ad1c = inttoptr i32 %v0_1000ad14 to i32*
  store i32 22, i32* %v2_1000ad1c, align 4
  %v0_1000ad48.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000ad44

dec_label_pc_1000ad24:                            ; preds = %dec_label_pc_1000ad0c, %dec_label_pc_1000ace4
  %v0_1000ad28 = call i32 @__asm_mfcr()
  %v1_1000ad2c = and i32 %v0_1000ad28, 268435456
  %v3_1000ad2c = icmp eq i32 %v1_1000ad2c, 0
  store i32 %v0_1000ad28, i32* %r31.global-to-local, align 4
  br i1 %v3_1000ad2c, label %dec_label_pc_1000ad44, label %dec_label_pc_1000ad38

dec_label_pc_1000ad38:                            ; preds = %dec_label_pc_1000ad24
  %v0_1000ad38 = call i32 @function_1000b0a8()
  %v0_1000ad3c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ad3c = inttoptr i32 %v0_1000ad38 to i32*
  store i32 %v0_1000ad3c, i32* %v2_1000ad3c, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000ad44

dec_label_pc_1000ad44:                            ; preds = %dec_label_pc_1000ad24, %dec_label_pc_1000ad14, %dec_label_pc_1000ad38
  %v0_1000ad48 = phi i32 [ %v0_1000ad28, %dec_label_pc_1000ad24 ], [ %v0_1000ad48.pre, %dec_label_pc_1000ad14 ], [ -1, %dec_label_pc_1000ad38 ]
  ret i32 %v0_1000ad48

; uselistorder directives
  uselistorder label %dec_label_pc_1000ad44, { 2, 0, 1 }
}

define i32 @function_1000ad5c() local_unnamed_addr {
dec_label_pc_1000ad5c:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000ad74 = call i32 @__asm_mfcr()
  %v1_1000ad78 = and i32 %v0_1000ad74, 268435456
  %v3_1000ad78 = icmp eq i32 %v1_1000ad78, 0
  store i32 %v0_1000ad74, i32* %r31.global-to-local, align 4
  br i1 %v3_1000ad78, label %dec_label_pc_1000ad90, label %dec_label_pc_1000ad84

dec_label_pc_1000ad84:                            ; preds = %dec_label_pc_1000ad5c
  %v0_1000ad84 = call i32 @function_1000b0a8()
  %v0_1000ad88 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ad88 = inttoptr i32 %v0_1000ad84 to i32*
  store i32 %v0_1000ad88, i32* %v2_1000ad88, align 4
  br label %dec_label_pc_1000ad90

dec_label_pc_1000ad90:                            ; preds = %dec_label_pc_1000ad5c, %dec_label_pc_1000ad84
  %v0_1000ada0 = phi i32 [ %v0_1000ad74, %dec_label_pc_1000ad5c ], [ -1, %dec_label_pc_1000ad84 ]
  ret i32 %v0_1000ada0

; uselistorder directives
  uselistorder label %dec_label_pc_1000ad90, { 1, 0 }
}

define i32 @function_1000ada4(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000ada4:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000adbc = call i32 @__asm_mfcr()
  %v1_1000adc0 = and i32 %v0_1000adbc, 268435456
  %v3_1000adc0 = icmp eq i32 %v1_1000adc0, 0
  store i32 %v0_1000adbc, i32* %r31.global-to-local, align 4
  br i1 %v3_1000adc0, label %dec_label_pc_1000add8, label %dec_label_pc_1000adcc

dec_label_pc_1000adcc:                            ; preds = %dec_label_pc_1000ada4
  %v0_1000adcc = call i32 @function_1000b0a8()
  %v0_1000add0 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000add0 = inttoptr i32 %v0_1000adcc to i32*
  store i32 %v0_1000add0, i32* %v2_1000add0, align 4
  br label %dec_label_pc_1000add8

dec_label_pc_1000add8:                            ; preds = %dec_label_pc_1000ada4, %dec_label_pc_1000adcc
  %v0_1000ade8 = phi i32 [ %v0_1000adbc, %dec_label_pc_1000ada4 ], [ -1, %dec_label_pc_1000adcc ]
  ret i32 %v0_1000ade8

; uselistorder directives
  uselistorder label %dec_label_pc_1000add8, { 1, 0 }
}

define i32 @function_1000adec(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000adec:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000ae04 = call i32 @__asm_mfcr()
  %v1_1000ae08 = and i32 %v0_1000ae04, 268435456
  %v3_1000ae08 = icmp eq i32 %v1_1000ae08, 0
  store i32 %v0_1000ae04, i32* %r31.global-to-local, align 4
  br i1 %v3_1000ae08, label %dec_label_pc_1000ae20, label %dec_label_pc_1000ae14

dec_label_pc_1000ae14:                            ; preds = %dec_label_pc_1000adec
  %v0_1000ae14 = call i32 @function_1000b0a8()
  %v0_1000ae18 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ae18 = inttoptr i32 %v0_1000ae14 to i32*
  store i32 %v0_1000ae18, i32* %v2_1000ae18, align 4
  br label %dec_label_pc_1000ae20

dec_label_pc_1000ae20:                            ; preds = %dec_label_pc_1000adec, %dec_label_pc_1000ae14
  %v0_1000ae30 = phi i32 [ %v0_1000ae04, %dec_label_pc_1000adec ], [ -1, %dec_label_pc_1000ae14 ]
  ret i32 %v0_1000ae30

; uselistorder directives
  uselistorder label %dec_label_pc_1000ae20, { 1, 0 }
}

define i32 @function_1000ae34(i32* %arg1) local_unnamed_addr {
dec_label_pc_1000ae34:
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_1000ae50 = ptrtoint i32* %stack_var_-40 to i32
  %v2_1000ae58 = load i32, i32* %arg1, align 4
  store i32 %v2_1000ae50, i32* @r3, align 4
  %v3_1000ae64 = icmp eq i32 %v2_1000ae58, -1
  br i1 %v3_1000ae64, label %dec_label_pc_1000ae6c, label %dec_label_pc_1000ae80

dec_label_pc_1000ae6c:                            ; preds = %dec_label_pc_1000ae34
  %v0_1000ae6c = call i32 @function_1000b0a8()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_1000ae78 = inttoptr i32 %v0_1000ae6c to i32*
  store i32 9, i32* %v2_1000ae78, align 4
  %v0_1000aec4.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000aec0

dec_label_pc_1000ae80:                            ; preds = %dec_label_pc_1000ae34
  %v3_1000ae80 = call i32 @function_1000c4f0(i32 %v2_1000ae50, i32 ptrtoint ([3 x i8]* @global_var_1000c4e8.483 to i32))
  %v0_1000ae88 = call i32 @function_1000c4e8()
  %v0_1000ae90 = load i32, i32* @r31, align 4
  %v1_1000ae90 = inttoptr i32 %v0_1000ae90 to i32*
  %v2_1000ae90 = load i32, i32* %v1_1000ae90, align 4
  store i32 %v2_1000ae90, i32* @r29, align 4
  store i32 -1, i32* %v1_1000ae90, align 4
  store i32 %v2_1000ae50, i32* @r3, align 4
  %v2_1000aea0 = call i32 @function_1000c4f0(i32 %v2_1000ae50, i32 1)
  %v0_1000aea4 = load i32, i32* @r31, align 4
  %v1_1000aea4 = add i32 %v0_1000aea4, 12
  %v2_1000aea4 = inttoptr i32 %v1_1000aea4 to i32*
  %v3_1000aea4 = load i32, i32* %v2_1000aea4, align 4
  store i32 %v3_1000aea4, i32* @r3, align 4
  store i32 268480172, i32* @lr, align 4
  %v0_1000aea8 = call i32 @function_1000bb54()
  %v0_1000aeac = load i32, i32* @r31, align 4
  store i32 %v0_1000aeac, i32* @r3, align 4
  store i32 268480180, i32* @lr, align 4
  %v0_1000aeb0 = call i32 @function_1000bb54()
  store i32 268480188, i32* @lr, align 4
  %v0_1000aeb8 = call i32 @function_1000a98c()
  store i32 %v0_1000aeb8, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000aec0

dec_label_pc_1000aec0:                            ; preds = %dec_label_pc_1000ae6c, %dec_label_pc_1000ae80
  %v0_1000aec4 = phi i32 [ %v0_1000aec4.pre, %dec_label_pc_1000ae6c ], [ %v0_1000aeb8, %dec_label_pc_1000ae80 ]
  ret i32 %v0_1000aec4

; uselistorder directives
  uselistorder i32 %v2_1000ae50, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1000aec0, { 1, 0 }
}

define i32 @function_1000aed8(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000aed8:
  %r0.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-120 = alloca i32, align 4
  %v0_1000aed8 = load i32, i32* @lr, align 4
  store i32 %v0_1000aed8, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 268480248, i32* @lr, align 4
  %v2_1000aef4 = call i32 @function_1000aaf4(i32 18432, i32 18432)
  %v1_1000aef8 = icmp slt i32 %v2_1000aef4, 0
  br i1 %v1_1000aef8, label %dec_label_pc_1000afd0, label %dec_label_pc_1000af00

dec_label_pc_1000af00:                            ; preds = %dec_label_pc_1000aed8
  %v2_1000af00 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_1000af00, i32* @r4, align 4
  store i32 268480264, i32* @lr, align 4
  %v1_1000af04 = call i32 @function_1000c8c4(i32 %v2_1000af00)
  %v1_1000af08 = icmp slt i32 %v1_1000af04, 0
  br i1 %v1_1000af08, label %dec_label_pc_1000af2c, label %dec_label_pc_1000af10

dec_label_pc_1000af10:                            ; preds = %dec_label_pc_1000af00
  %v0_1000af10 = load i32, i32* @r29, align 4
  store i32 2, i32* @r4, align 4
  store i32 268480292, i32* @lr, align 4
  %v2_1000af20 = call i32 @function_1000a85c(i32 %v0_1000af10)
  %tmp5 = icmp sgt i32 %v2_1000af20, -1
  br i1 %tmp5, label %dec_label_pc_1000af4c, label %dec_label_pc_1000af2c

dec_label_pc_1000af2c:                            ; preds = %dec_label_pc_1000af10, %dec_label_pc_1000af00
  %v0_1000af2c = call i32 @function_1000b0a8()
  store i32 0, i32* @r31, align 4
  store i32 %v0_1000af2c, i32* @r28, align 4
  %v1_1000af3c = inttoptr i32 %v0_1000af2c to i32*
  %v2_1000af3c = load i32, i32* %v1_1000af3c, align 4
  store i32 268480324, i32* @lr, align 4
  %v0_1000af40 = call i32 @function_1000a98c()
  %v1_1000af44 = load i32, i32* @r28, align 4
  %v2_1000af44 = inttoptr i32 %v1_1000af44 to i32*
  store i32 %v2_1000af3c, i32* %v2_1000af44, align 4
  br label %dec_label_pc_1000afd0

dec_label_pc_1000af4c:                            ; preds = %dec_label_pc_1000af10
  store i32 48, i32* @r3, align 4
  store i32 268480340, i32* @lr, align 4
  %v0_1000af50 = call i32 @function_1000b98c()
  store i32 %v0_1000af50, i32* %r31.global-to-local, align 4
  %v3_1000af54 = icmp eq i32 %v0_1000af50, 0
  br i1 %v3_1000af54, label %dec_label_pc_1000afa8, label %dec_label_pc_1000af5c

dec_label_pc_1000af5c:                            ; preds = %dec_label_pc_1000af4c
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1000af60 = load i32, i32* @r29, align 4
  %v2_1000af60 = inttoptr i32 %v0_1000af50 to i32*
  store i32 %v0_1000af60, i32* %v2_1000af60, align 4
  %v0_1000af64 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000af64 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000af64 = add i32 %v1_1000af64, 4
  %v3_1000af64 = inttoptr i32 %v2_1000af64 to i32*
  store i32 %v0_1000af64, i32* %v3_1000af64, align 4
  %v0_1000af68 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000af68 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000af68 = add i32 %v1_1000af68, 16
  %v3_1000af68 = inttoptr i32 %v2_1000af68 to i32*
  store i32 %v0_1000af68, i32* %v3_1000af68, align 4
  %v0_1000af6c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000af6c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000af6c = add i32 %v1_1000af6c, 8
  %v3_1000af6c = inttoptr i32 %v2_1000af6c to i32*
  store i32 %v0_1000af6c, i32* %v3_1000af6c, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v2_1000af74 = icmp ugt i32 %tmp, 511
  %v1_1000af78 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000af78 = add i32 %v1_1000af78, 20
  %v3_1000af78 = inttoptr i32 %v2_1000af78 to i32*
  store i32 %tmp, i32* %v3_1000af78, align 4
  br i1 %v2_1000af74, label %dec_label_pc_1000af88, label %dec_label_pc_1000af80

dec_label_pc_1000af80:                            ; preds = %dec_label_pc_1000af5c
  store i32 512, i32* %r0.global-to-local, align 4
  %v1_1000af84 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000af84 = add i32 %v1_1000af84, 20
  %v3_1000af84 = inttoptr i32 %v2_1000af84 to i32*
  store i32 512, i32* %v3_1000af84, align 4
  br label %dec_label_pc_1000af88

dec_label_pc_1000af88:                            ; preds = %dec_label_pc_1000af5c, %dec_label_pc_1000af80
  %v0_1000af88 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000af88 = add i32 %v0_1000af88, 20
  %v2_1000af88 = inttoptr i32 %v1_1000af88 to i32*
  %v3_1000af88 = load i32, i32* %v2_1000af88, align 4
  store i32 268480404, i32* @lr, align 4
  %v2_1000af90 = call i32 @function_1000bae4(i32 1, i32 %v3_1000af88)
  %v3_1000af94 = icmp eq i32 %v2_1000af90, 0
  %v1_1000af98 = load i32, i32* @r31, align 4
  %v2_1000af98 = add i32 %v1_1000af98, 12
  %v3_1000af98 = inttoptr i32 %v2_1000af98 to i32*
  store i32 %v2_1000af90, i32* %v3_1000af98, align 4
  br i1 %v3_1000af94, label %dec_label_pc_1000afa0, label %dec_label_pc_1000afc4

dec_label_pc_1000afa0:                            ; preds = %dec_label_pc_1000af88
  %v0_1000afa0 = load i32, i32* @r31, align 4
  store i32 %v0_1000afa0, i32* @r3, align 4
  store i32 268480424, i32* @lr, align 4
  %v0_1000afa4 = call i32 @function_1000bb54()
  br label %dec_label_pc_1000afa8

dec_label_pc_1000afa8:                            ; preds = %dec_label_pc_1000af4c, %dec_label_pc_1000afa0
  store i32 0, i32* @r31, align 4
  store i32 ptrtoint (i32* @global_var_1000afb4.486 to i32), i32* @lr, align 4
  %v0_1000afb0 = call i32 @function_1000a98c()
  %v0_1000afb4 = call i32 @function_1000b0a8()
  store i32 12, i32* %r0.global-to-local, align 4
  %v2_1000afbc = inttoptr i32 %v0_1000afb4 to i32*
  store i32 12, i32* %v2_1000afbc, align 4
  br label %dec_label_pc_1000afd0

dec_label_pc_1000afc4:                            ; preds = %dec_label_pc_1000af88
  %v0_1000afcc = call i32 @function_1000c4e8()
  br label %dec_label_pc_1000afd0

dec_label_pc_1000afd0:                            ; preds = %dec_label_pc_1000aed8, %dec_label_pc_1000afa8, %dec_label_pc_1000af2c, %dec_label_pc_1000afc4
  store i32 %v0_1000aed8, i32* %r0.global-to-local, align 4
  %v0_1000afd4 = load i32, i32* @r31, align 4
  ret i32 %v0_1000afd4

; uselistorder directives
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7, 8 }
  uselistorder i32 (i32, i32)* @function_1000bae4, { 36, 7, 37, 35, 34, 33, 32, 2, 1, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 3, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 6, 5, 4, 0 }
  uselistorder i32 512, { 6, 8, 7, 0, 1, 2, 3, 4, 5 }
  uselistorder i32 ()* @function_1000a98c, { 26, 25, 24, 12, 11, 10, 9, 42, 8, 7, 33, 32, 41, 40, 39, 38, 37, 36, 35, 34, 31, 30, 29, 28, 27, 23, 22, 21, 20, 6, 19, 18, 17, 16, 15, 14, 13, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 18432, { 1, 0 }
  uselistorder label %dec_label_pc_1000afd0, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1000afa8, { 1, 0 }
  uselistorder label %dec_label_pc_1000af88, { 1, 0 }
}

define i32 @function_1000afe8(i32* %arg1) local_unnamed_addr {
dec_label_pc_1000afe8:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  %v0_1000afec = load i32, i32* @lr, align 4
  store i32 %v0_1000afec, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_1000b004 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000b004, i32* @r3, align 4
  %v3_1000b010 = call i32 @function_1000c4f0(i32 %v2_1000b004, i32 ptrtoint ([3 x i8]* @global_var_1000c4e8.483 to i32))
  %v0_1000b018 = call i32 @function_1000c4e8()
  br label %dec_label_pc_1000b01c

dec_label_pc_1000b01c:                            ; preds = %dec_label_pc_1000b058, %dec_label_pc_1000afe8
  %v0_1000b01c = load i32, i32* @r31, align 4
  %v1_1000b01c = add i32 %v0_1000b01c, 4
  %v2_1000b01c = inttoptr i32 %v1_1000b01c to i32*
  %v3_1000b01c = load i32, i32* %v2_1000b01c, align 4
  store i32 %v3_1000b01c, i32* %r0.global-to-local, align 4
  %v1_1000b020 = add i32 %v0_1000b01c, 8
  %v2_1000b020 = inttoptr i32 %v1_1000b020 to i32*
  %v3_1000b020 = load i32, i32* %v2_1000b020, align 4
  store i32 %v3_1000b020, i32* %r9.global-to-local, align 4
  %v3_1000b024 = icmp ugt i32 %v3_1000b020, %v3_1000b01c
  br i1 %v3_1000b024, label %dec_label_pc_1000b058, label %dec_label_pc_1000b02c

dec_label_pc_1000b02c:                            ; preds = %dec_label_pc_1000b01c
  %v1_1000b02c = inttoptr i32 %v0_1000b01c to i32*
  %v2_1000b02c = load i32, i32* %v1_1000b02c, align 4
  store i32 %v2_1000b02c, i32* @r3, align 4
  %v1_1000b030 = add i32 %v0_1000b01c, 12
  %v2_1000b030 = inttoptr i32 %v1_1000b030 to i32*
  %v3_1000b030 = load i32, i32* %v2_1000b030, align 4
  %v1_1000b034 = add i32 %v0_1000b01c, 20
  %v2_1000b034 = inttoptr i32 %v1_1000b034 to i32*
  %v3_1000b034 = load i32, i32* %v2_1000b034, align 4
  store i32 %v3_1000b034, i32* @r5, align 4
  store i32 268480572, i32* @lr, align 4
  %v4_1000b038 = inttoptr i32 %v2_1000b02c to i32*
  %v5_1000b038 = call i32 @function_1000c938(i32* %v4_1000b038, i32 %v3_1000b030, i32 %v3_1000b034, i32 %v3_1000b020)
  %v2_1000b03c = icmp sgt i32 %v5_1000b038, 0
  br i1 %v2_1000b03c, label %dec_label_pc_1000b04c, label %dec_label_pc_1000b044

dec_label_pc_1000b044:                            ; preds = %dec_label_pc_1000b02c
  store i32 0, i32* @r29, align 4
  br label %dec_label_pc_1000b084

dec_label_pc_1000b04c:                            ; preds = %dec_label_pc_1000b02c
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1000b050 = load i32, i32* @r31, align 4
  %v2_1000b050 = add i32 %v1_1000b050, 8
  %v3_1000b050 = inttoptr i32 %v2_1000b050 to i32*
  store i32 %v5_1000b038, i32* %v3_1000b050, align 4
  %v0_1000b054 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000b054 = load i32, i32* @r31, align 4
  %v2_1000b054 = add i32 %v1_1000b054, 4
  %v3_1000b054 = inttoptr i32 %v2_1000b054 to i32*
  store i32 %v0_1000b054, i32* %v3_1000b054, align 4
  %v0_1000b058.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000b058

dec_label_pc_1000b058:                            ; preds = %dec_label_pc_1000b01c, %dec_label_pc_1000b04c
  %v1_1000b06c = phi i32 [ %v0_1000b01c, %dec_label_pc_1000b01c ], [ %v0_1000b058.pre, %dec_label_pc_1000b04c ]
  %v1_1000b058 = add i32 %v1_1000b06c, 4
  %v2_1000b058 = inttoptr i32 %v1_1000b058 to i32*
  %v3_1000b058 = load i32, i32* %v2_1000b058, align 4
  store i32 %v3_1000b058, i32* %r9.global-to-local, align 4
  %v1_1000b05c = add i32 %v1_1000b06c, 12
  %v2_1000b05c = inttoptr i32 %v1_1000b05c to i32*
  %v3_1000b05c = load i32, i32* %v2_1000b05c, align 4
  store i32 %v3_1000b05c, i32* %r11.global-to-local, align 4
  %v2_1000b060 = add i32 %v3_1000b05c, %v3_1000b058
  store i32 %v2_1000b060, i32* @r29, align 4
  %v1_1000b064 = add i32 %v2_1000b060, 8
  %v2_1000b064 = inttoptr i32 %v1_1000b064 to i16*
  %v3_1000b064 = load i16, i16* %v2_1000b064, align 2
  %v4_1000b064 = zext i16 %v3_1000b064 to i32
  %v2_1000b068 = add i32 %v4_1000b064, %v3_1000b058
  store i32 %v2_1000b068, i32* %r0.global-to-local, align 4
  store i32 %v2_1000b068, i32* %v2_1000b058, align 4
  %v0_1000b070 = load i32, i32* @r29, align 4
  %v1_1000b070 = add i32 %v0_1000b070, 4
  %v2_1000b070 = inttoptr i32 %v1_1000b070 to i32*
  %v3_1000b070 = load i32, i32* %v2_1000b070, align 4
  store i32 %v3_1000b070, i32* %r0.global-to-local, align 4
  %v1_1000b074 = load i32, i32* @r31, align 4
  %v2_1000b074 = add i32 %v1_1000b074, 16
  %v3_1000b074 = inttoptr i32 %v2_1000b074 to i32*
  store i32 %v3_1000b070, i32* %v3_1000b074, align 4
  %v0_1000b078 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b078 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000b078 = add i32 %v1_1000b078, %v0_1000b078
  %v3_1000b078 = inttoptr i32 %v2_1000b078 to i32*
  %v4_1000b078 = load i32, i32* %v3_1000b078, align 4
  store i32 %v4_1000b078, i32* %r0.global-to-local, align 4
  %v3_1000b07c = icmp eq i32 %v4_1000b078, 0
  br i1 %v3_1000b07c, label %dec_label_pc_1000b01c, label %dec_label_pc_1000b084

dec_label_pc_1000b084:                            ; preds = %dec_label_pc_1000b058, %dec_label_pc_1000b044
  store i32 %v2_1000b004, i32* @r3, align 4
  %v2_1000b08c = call i32 @function_1000c4f0(i32 %v2_1000b004, i32 1)
  store i32 %v0_1000afec, i32* %r0.global-to-local, align 4
  %v0_1000b094 = load i32, i32* @r29, align 4
  ret i32 %v0_1000b094

; uselistorder directives
  uselistorder i32 %v1_1000b06c, { 1, 0 }
  uselistorder i32 %v0_1000b01c, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %v2_1000b004, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1000b058, { 1, 0 }
}

define i32 @function_1000b0a8() local_unnamed_addr {
dec_label_pc_1000b0a8:
  ret i32 ptrtoint (i32* @global_var_1001e1d8.488 to i32)
}

define i32 @function_1000b0b4(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b0b4:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %v2_1000b0bc = ptrtoint i32* %stack_var_-24 to i32
  store i32 268480712, i32* @lr, align 4
  %v1_1000b0c4 = call i32 @function_1000cd78(i32 %v2_1000b0bc)
  %v3_1000b0cc = load i32, i32* %stack_var_-24, align 4
  %v2_1000b0d0 = add i32 %v3_1000b0cc, %tmp
  %v1_1000b0d8 = mul i32 %v2_1000b0d0, 10000
  %v1_1000b0e4 = and i32 %v1_1000b0d8, 2147483632
  ret i32 %v1_1000b0e4
}

define i32 @function_1000b0ec() local_unnamed_addr {
dec_label_pc_1000b0ec:
  %ctr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_1000b0ec = load i32, i32* @r5, align 4
  %v1_1000b0ec = call i32 @__asm_rlwinm.(i32 %v0_1000b0ec, i32 29, i32 3, i32 31)
  store i32 %v1_1000b0ec, i32* %r9.global-to-local, align 4
  %v4_1000b0ec = icmp eq i32 %v1_1000b0ec, 0
  %v0_1000b0f0 = load i32, i32* @r4, align 4
  %v1_1000b0f0 = add i32 %v0_1000b0f0, -4
  store i32 %v1_1000b0f0, i32* %r4.global-to-local, align 4
  %v0_1000b0f4 = load i32, i32* @r3, align 4
  %v1_1000b0f4 = add i32 %v0_1000b0f4, -4
  store i32 %v1_1000b0f4, i32* @r11, align 4
  br i1 %v4_1000b0ec, label %dec_label_pc_1000b11c, label %dec_label_pc_1000b0fc

dec_label_pc_1000b0fc:                            ; preds = %dec_label_pc_1000b0ec
  %v1_1000b0fc = urem i32 %v1_1000b0f4, 4
  %v3_1000b0fc = icmp eq i32 %v1_1000b0fc, 0
  br i1 %v3_1000b0fc, label %dec_label_pc_1000b104, label %dec_label_pc_1000b158

dec_label_pc_1000b104:                            ; preds = %dec_label_pc_1000b178.dec_label_pc_1000b104_crit_edge, %dec_label_pc_1000b0fc
  %v1_1000b110.pre = phi i32 [ %v1_1000b0f4, %dec_label_pc_1000b0fc ], [ %v1_1000b110.pre.pre, %dec_label_pc_1000b178.dec_label_pc_1000b104_crit_edge ]
  %v0_1000b104 = phi i32 [ %v1_1000b0ec, %dec_label_pc_1000b0fc ], [ %v1_1000b178, %dec_label_pc_1000b178.dec_label_pc_1000b104_crit_edge ]
  %.0 = phi i32 [ undef, %dec_label_pc_1000b0fc ], [ %v2_1000b160, %dec_label_pc_1000b178.dec_label_pc_1000b104_crit_edge ]
  store i32 %v0_1000b104, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000b108

dec_label_pc_1000b108:                            ; preds = %dec_label_pc_1000b108, %dec_label_pc_1000b104
  %v1_1000b110 = phi i32 [ %v2_1000b114, %dec_label_pc_1000b108 ], [ %v1_1000b110.pre, %dec_label_pc_1000b104 ]
  %v0_1000b108 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000b108 = add i32 %v0_1000b108, 4
  %v2_1000b108 = inttoptr i32 %v1_1000b108 to i32*
  %v3_1000b108 = load i32, i32* %v2_1000b108, align 4
  %v1_1000b10c = add i32 %v0_1000b108, 8
  %v2_1000b10c = inttoptr i32 %v1_1000b10c to i32*
  %v3_1000b10c = load i32, i32* %v2_1000b10c, align 4
  store i32 %v3_1000b10c, i32* %r9.global-to-local, align 4
  store i32 %v1_1000b10c, i32* %r4.global-to-local, align 4
  %v2_1000b110 = add i32 %v1_1000b110, 4
  %v3_1000b110 = inttoptr i32 %v2_1000b110 to i32*
  store i32 %v3_1000b108, i32* %v3_1000b110, align 4
  %v0_1000b114 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b114 = load i32, i32* @r11, align 4
  %v2_1000b114 = add i32 %v1_1000b114, 8
  %v3_1000b114 = inttoptr i32 %v2_1000b114 to i32*
  store i32 %v0_1000b114, i32* %v3_1000b114, align 4
  store i32 %v2_1000b114, i32* @r11, align 4
  %v0_1000b118 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b118 = add i32 %v0_1000b118, -1
  store i32 %v1_1000b118, i32* %ctr.global-to-local, align 4
  %v2_1000b118 = icmp eq i32 %v1_1000b118, 0
  br i1 %v2_1000b118, label %dec_label_pc_1000b11c, label %dec_label_pc_1000b108

dec_label_pc_1000b11c:                            ; preds = %dec_label_pc_1000b108, %dec_label_pc_1000b178, %dec_label_pc_1000b0ec
  %.1 = phi i32 [ undef, %dec_label_pc_1000b0ec ], [ %v2_1000b160, %dec_label_pc_1000b178 ], [ %.0, %dec_label_pc_1000b108 ]
  %v1_1000b11c = urem i32 %.1, 8
  store i32 %v1_1000b11c, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_1000b11c, 4
  br i1 %tmp, label %dec_label_pc_1000b134, label %dec_label_pc_1000b128

dec_label_pc_1000b128:                            ; preds = %dec_label_pc_1000b11c
  %v0_1000b128 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000b128 = add i32 %v0_1000b128, 4
  %v2_1000b128 = inttoptr i32 %v1_1000b128 to i32*
  %v3_1000b128 = load i32, i32* %v2_1000b128, align 4
  store i32 %v1_1000b128, i32* %r4.global-to-local, align 4
  %v1_1000b12c = add nsw i32 %v1_1000b11c, -4
  store i32 %v1_1000b12c, i32* @r5, align 4
  %v1_1000b130 = load i32, i32* @r11, align 4
  %v2_1000b130 = add i32 %v1_1000b130, 4
  %v3_1000b130 = inttoptr i32 %v2_1000b130 to i32*
  store i32 %v3_1000b128, i32* %v3_1000b130, align 4
  store i32 %v2_1000b130, i32* @r11, align 4
  %v0_1000b134.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1000b134

dec_label_pc_1000b134:                            ; preds = %dec_label_pc_1000b11c, %dec_label_pc_1000b128
  %v0_1000b134 = phi i32 [ %v1_1000b11c, %dec_label_pc_1000b11c ], [ %v0_1000b134.pre, %dec_label_pc_1000b128 ]
  %v3_1000b134 = icmp eq i32 %v0_1000b134, 0
  %v0_1000b138 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000b134, i32 %v0_1000b138)
  %v0_1000b13c = load i32, i32* @r5, align 4
  store i32 %v0_1000b13c, i32* %ctr.global-to-local, align 4
  %v0_1000b140 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000b140 = add i32 %v0_1000b140, 3
  store i32 %v1_1000b140, i32* %r4.global-to-local, align 4
  %v0_1000b144 = load i32, i32* @r11, align 4
  %v1_1000b144 = add i32 %v0_1000b144, 3
  store i32 %v1_1000b144, i32* %r9.global-to-local, align 4
  %v1_1000b1489 = add i32 %v0_1000b140, 4
  %v2_1000b14810 = inttoptr i32 %v1_1000b1489 to i8*
  %v3_1000b14811 = load i8, i8* %v2_1000b14810, align 1
  store i32 %v1_1000b1489, i32* %r4.global-to-local, align 4
  %v3_1000b14c13 = add i32 %v0_1000b144, 4
  %v4_1000b14c14 = inttoptr i32 %v3_1000b14c13 to i8*
  store i8 %v3_1000b14811, i8* %v4_1000b14c14, align 1
  store i32 %v3_1000b14c13, i32* %r9.global-to-local, align 4
  %v0_1000b15015 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b15016 = add i32 %v0_1000b15015, -1
  store i32 %v1_1000b15016, i32* %ctr.global-to-local, align 4
  %v2_1000b15017 = icmp eq i32 %v1_1000b15016, 0
  br i1 %v2_1000b15017, label %dec_label_pc_1000b184, label %dec_label_pc_1000b148.dec_label_pc_1000b148_crit_edge

dec_label_pc_1000b148.dec_label_pc_1000b148_crit_edge: ; preds = %dec_label_pc_1000b134, %dec_label_pc_1000b148.dec_label_pc_1000b148_crit_edge
  %v3_1000b14c18 = phi i32 [ %v3_1000b14c, %dec_label_pc_1000b148.dec_label_pc_1000b148_crit_edge ], [ %v3_1000b14c13, %dec_label_pc_1000b134 ]
  %v0_1000b148.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1000b148 = add i32 %v0_1000b148.pre, 1
  %v2_1000b148 = inttoptr i32 %v1_1000b148 to i8*
  %v3_1000b148 = load i8, i8* %v2_1000b148, align 1
  store i32 %v1_1000b148, i32* %r4.global-to-local, align 4
  %v3_1000b14c = add i32 %v3_1000b14c18, 1
  %v4_1000b14c = inttoptr i32 %v3_1000b14c to i8*
  store i8 %v3_1000b148, i8* %v4_1000b14c, align 1
  store i32 %v3_1000b14c, i32* %r9.global-to-local, align 4
  %v0_1000b150 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b150 = add i32 %v0_1000b150, -1
  store i32 %v1_1000b150, i32* %ctr.global-to-local, align 4
  %v2_1000b150 = icmp eq i32 %v1_1000b150, 0
  br i1 %v2_1000b150, label %dec_label_pc_1000b184, label %dec_label_pc_1000b148.dec_label_pc_1000b148_crit_edge

dec_label_pc_1000b158:                            ; preds = %dec_label_pc_1000b0fc
  %v1_1000b158 = sub nsw i32 4, %v1_1000b0fc
  store i32 %v1_1000b158, i32* %ctr.global-to-local, align 4
  %v1_1000b160 = load i32, i32* @r5, align 4
  %v2_1000b160 = sub i32 %v1_1000b160, %v1_1000b158
  br label %dec_label_pc_1000b164

dec_label_pc_1000b164:                            ; preds = %dec_label_pc_1000b164.dec_label_pc_1000b164_crit_edge, %dec_label_pc_1000b158
  %v2_1000b16c = phi i32 [ %v1_1000b170, %dec_label_pc_1000b164.dec_label_pc_1000b164_crit_edge ], [ %v1_1000b0f4, %dec_label_pc_1000b158 ]
  %v0_1000b164 = phi i32 [ %v0_1000b164.pre, %dec_label_pc_1000b164.dec_label_pc_1000b164_crit_edge ], [ %v1_1000b0f0, %dec_label_pc_1000b158 ]
  %v1_1000b164 = add i32 %v0_1000b164, 4
  %v2_1000b164 = inttoptr i32 %v1_1000b164 to i8*
  %v3_1000b164 = load i8, i8* %v2_1000b164, align 1
  %v1_1000b168 = add i32 %v0_1000b164, 1
  store i32 %v1_1000b168, i32* %r4.global-to-local, align 4
  %v3_1000b16c = add i32 %v2_1000b16c, 4
  %v4_1000b16c = inttoptr i32 %v3_1000b16c to i8*
  store i8 %v3_1000b164, i8* %v4_1000b16c, align 1
  %v0_1000b170 = load i32, i32* @r11, align 4
  %v1_1000b170 = add i32 %v0_1000b170, 1
  store i32 %v1_1000b170, i32* @r11, align 4
  %v0_1000b174 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b174 = add i32 %v0_1000b174, -1
  store i32 %v1_1000b174, i32* %ctr.global-to-local, align 4
  %v2_1000b174 = icmp eq i32 %v1_1000b174, 0
  br i1 %v2_1000b174, label %dec_label_pc_1000b178, label %dec_label_pc_1000b164.dec_label_pc_1000b164_crit_edge

dec_label_pc_1000b164.dec_label_pc_1000b164_crit_edge: ; preds = %dec_label_pc_1000b164
  %v0_1000b164.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000b164

dec_label_pc_1000b178:                            ; preds = %dec_label_pc_1000b164
  %v1_1000b178 = call i32 @__asm_rlwinm.(i32 %v2_1000b160, i32 29, i32 3, i32 31)
  store i32 %v1_1000b178, i32* %r9.global-to-local, align 4
  %v4_1000b178 = icmp eq i32 %v1_1000b178, 0
  br i1 %v4_1000b178, label %dec_label_pc_1000b11c, label %dec_label_pc_1000b178.dec_label_pc_1000b104_crit_edge

dec_label_pc_1000b178.dec_label_pc_1000b104_crit_edge: ; preds = %dec_label_pc_1000b178
  %v1_1000b110.pre.pre = load i32, i32* @r11, align 4
  br label %dec_label_pc_1000b104

dec_label_pc_1000b184:                            ; preds = %dec_label_pc_1000b148.dec_label_pc_1000b148_crit_edge, %dec_label_pc_1000b134
  %v0_1000b184 = load i32, i32* @r3, align 4
  ret i32 %v0_1000b184

; uselistorder directives
  uselistorder i32 %v1_1000b178, { 1, 2, 0 }
  uselistorder i32 %v1_1000b174, { 1, 0 }
  uselistorder i32 %v1_1000b170, { 1, 0 }
  uselistorder i32 %v0_1000b164, { 1, 0 }
  uselistorder i32 %v2_1000b160, { 2, 1, 0 }
  uselistorder i32 %v1_1000b150, { 1, 0 }
  uselistorder i32 %v3_1000b14c, { 1, 2, 0 }
  uselistorder i32 %v1_1000b11c, { 3, 2, 1, 0 }
  uselistorder i32 %v1_1000b118, { 1, 0 }
  uselistorder i32 %v2_1000b114, { 1, 2, 0 }
  uselistorder i32 %v1_1000b0fc, { 1, 0 }
  uselistorder i32 %v1_1000b0f4, { 2, 1, 0, 3 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 4, 3, 0, 5, 8, 6, 10, 7, 9, 11 }
  uselistorder i32* %ctr.global-to-local, { 1, 2, 3, 5, 4, 0, 6, 7, 8, 9, 10 }
  uselistorder label %dec_label_pc_1000b148.dec_label_pc_1000b148_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000b134, { 1, 0 }
  uselistorder label %dec_label_pc_1000b11c, { 1, 0, 2 }
}

define i32 @function_1000b188(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000b188:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  %v2_1000b188 = icmp ult i32 %arg2, %arg1
  store i32 %arg1, i32* %r8.global-to-local, align 4
  store i32 %arg3, i32* @r11, align 4
  br i1 %v2_1000b188, label %dec_label_pc_1000b19c, label %dec_label_pc_1000b198

dec_label_pc_1000b198:                            ; preds = %dec_label_pc_1000b188
  %v0_1000b198 = call i32 @function_1000b0ec()
  store i32 %v0_1000b198, i32* @r3, align 4
  br label %dec_label_pc_1000b19c

dec_label_pc_1000b19c:                            ; preds = %dec_label_pc_1000b188, %dec_label_pc_1000b198
  %v1_1000b19c = call i32 @__asm_rlwinm.(i32 %arg3, i32 29, i32 3, i32 31)
  store i32 %v1_1000b19c, i32* %r9.global-to-local, align 4
  %v4_1000b19c = icmp eq i32 %v1_1000b19c, 0
  %v2_1000b1a0 = add i32 %arg3, %arg2
  store i32 %v2_1000b1a0, i32* %r4.global-to-local, align 4
  %v0_1000b1a4 = load i32, i32* @r3, align 4
  %v2_1000b1a4 = add i32 %v0_1000b1a4, %arg3
  store i32 %v2_1000b1a4, i32* %r10.global-to-local, align 4
  br i1 %v4_1000b19c, label %dec_label_pc_1000b1cc, label %dec_label_pc_1000b1ac

dec_label_pc_1000b1ac:                            ; preds = %dec_label_pc_1000b19c
  %v1_1000b1ac = urem i32 %v2_1000b1a4, 4
  %v3_1000b1ac = icmp eq i32 %v1_1000b1ac, 0
  br i1 %v3_1000b1ac, label %dec_label_pc_1000b1b4, label %dec_label_pc_1000b200

dec_label_pc_1000b1b4:                            ; preds = %dec_label_pc_1000b218.dec_label_pc_1000b1b4_crit_edge, %dec_label_pc_1000b1ac
  %v1_1000b1c0.pre = phi i32 [ %v1_1000b1c0.pre.pre, %dec_label_pc_1000b218.dec_label_pc_1000b1b4_crit_edge ], [ %v2_1000b1a4, %dec_label_pc_1000b1ac ]
  %v0_1000b1b4 = phi i32 [ %v1_1000b218, %dec_label_pc_1000b218.dec_label_pc_1000b1b4_crit_edge ], [ %v1_1000b19c, %dec_label_pc_1000b1ac ]
  store i32 %v0_1000b1b4, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000b1b8

dec_label_pc_1000b1b8:                            ; preds = %dec_label_pc_1000b1b8, %dec_label_pc_1000b1b4
  %v1_1000b1c0 = phi i32 [ %v2_1000b1c4, %dec_label_pc_1000b1b8 ], [ %v1_1000b1c0.pre, %dec_label_pc_1000b1b4 ]
  %v0_1000b1b8 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000b1b8 = add i32 %v0_1000b1b8, -4
  %v2_1000b1b8 = inttoptr i32 %v1_1000b1b8 to i32*
  %v3_1000b1b8 = load i32, i32* %v2_1000b1b8, align 4
  %v1_1000b1bc = add i32 %v0_1000b1b8, -8
  %v2_1000b1bc = inttoptr i32 %v1_1000b1bc to i32*
  %v3_1000b1bc = load i32, i32* %v2_1000b1bc, align 4
  store i32 %v3_1000b1bc, i32* %r9.global-to-local, align 4
  store i32 %v1_1000b1bc, i32* %r4.global-to-local, align 4
  %v2_1000b1c0 = add i32 %v1_1000b1c0, -4
  %v3_1000b1c0 = inttoptr i32 %v2_1000b1c0 to i32*
  store i32 %v3_1000b1b8, i32* %v3_1000b1c0, align 4
  %v0_1000b1c4 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b1c4 = load i32, i32* %r10.global-to-local, align 4
  %v2_1000b1c4 = add i32 %v1_1000b1c4, -8
  %v3_1000b1c4 = inttoptr i32 %v2_1000b1c4 to i32*
  store i32 %v0_1000b1c4, i32* %v3_1000b1c4, align 4
  store i32 %v2_1000b1c4, i32* %r10.global-to-local, align 4
  %v0_1000b1c8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b1c8 = add i32 %v0_1000b1c8, -1
  store i32 %v1_1000b1c8, i32* %ctr.global-to-local, align 4
  %v2_1000b1c8 = icmp eq i32 %v1_1000b1c8, 0
  br i1 %v2_1000b1c8, label %dec_label_pc_1000b1cc, label %dec_label_pc_1000b1b8

dec_label_pc_1000b1cc:                            ; preds = %dec_label_pc_1000b1b8, %dec_label_pc_1000b218, %dec_label_pc_1000b19c
  %v0_1000b1cc = load i32, i32* @r11, align 4
  %v1_1000b1cc = urem i32 %v0_1000b1cc, 8
  store i32 %v1_1000b1cc, i32* %r5.global-to-local, align 4
  %tmp = icmp ult i32 %v1_1000b1cc, 4
  br i1 %tmp, label %dec_label_pc_1000b1e4, label %dec_label_pc_1000b1d8

dec_label_pc_1000b1d8:                            ; preds = %dec_label_pc_1000b1cc
  %v0_1000b1d8 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000b1d8 = add i32 %v0_1000b1d8, -4
  %v2_1000b1d8 = inttoptr i32 %v1_1000b1d8 to i32*
  %v3_1000b1d8 = load i32, i32* %v2_1000b1d8, align 4
  store i32 %v1_1000b1d8, i32* %r4.global-to-local, align 4
  %v1_1000b1dc = add nsw i32 %v1_1000b1cc, -4
  store i32 %v1_1000b1dc, i32* %r5.global-to-local, align 4
  %v1_1000b1e0 = load i32, i32* %r10.global-to-local, align 4
  %v2_1000b1e0 = add i32 %v1_1000b1e0, -4
  %v3_1000b1e0 = inttoptr i32 %v2_1000b1e0 to i32*
  store i32 %v3_1000b1d8, i32* %v3_1000b1e0, align 4
  store i32 %v2_1000b1e0, i32* %r10.global-to-local, align 4
  %v0_1000b1e4.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000b1e4

dec_label_pc_1000b1e4:                            ; preds = %dec_label_pc_1000b1cc, %dec_label_pc_1000b1d8
  %v0_1000b1ec = phi i32 [ %v1_1000b1cc, %dec_label_pc_1000b1cc ], [ %v0_1000b1e4.pre, %dec_label_pc_1000b1d8 ]
  %v3_1000b1e4 = icmp eq i32 %v0_1000b1ec, 0
  br i1 %v3_1000b1e4, label %dec_label_pc_1000b224, label %dec_label_pc_1000b1ec

dec_label_pc_1000b1ec:                            ; preds = %dec_label_pc_1000b1e4
  store i32 %v0_1000b1ec, i32* %ctr.global-to-local, align 4
  %v2_1000b1f4.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000b1f0

dec_label_pc_1000b1f0:                            ; preds = %dec_label_pc_1000b1f0, %dec_label_pc_1000b1ec
  %v2_1000b1f4 = phi i32 [ %v3_1000b1f4, %dec_label_pc_1000b1f0 ], [ %v2_1000b1f4.pre, %dec_label_pc_1000b1ec ]
  %v0_1000b1f0 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000b1f0 = add i32 %v0_1000b1f0, -1
  %v2_1000b1f0 = inttoptr i32 %v1_1000b1f0 to i8*
  %v3_1000b1f0 = load i8, i8* %v2_1000b1f0, align 1
  store i32 %v1_1000b1f0, i32* %r4.global-to-local, align 4
  %v3_1000b1f4 = add i32 %v2_1000b1f4, -1
  %v4_1000b1f4 = inttoptr i32 %v3_1000b1f4 to i8*
  store i8 %v3_1000b1f0, i8* %v4_1000b1f4, align 1
  store i32 %v3_1000b1f4, i32* %r10.global-to-local, align 4
  %v0_1000b1f8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b1f8 = add i32 %v0_1000b1f8, -1
  store i32 %v1_1000b1f8, i32* %ctr.global-to-local, align 4
  %v2_1000b1f8 = icmp eq i32 %v1_1000b1f8, 0
  br i1 %v2_1000b1f8, label %dec_label_pc_1000b224, label %dec_label_pc_1000b1f0

dec_label_pc_1000b200:                            ; preds = %dec_label_pc_1000b1ac
  %v1_1000b200 = sub nsw i32 4, %v1_1000b1ac
  store i32 %v1_1000b200, i32* %ctr.global-to-local, align 4
  %v2_1000b208 = sub i32 %arg3, %v1_1000b200
  store i32 %v2_1000b208, i32* @r11, align 4
  %v1_1000b20c8 = add i32 %v2_1000b1a0, -1
  %v2_1000b20c9 = inttoptr i32 %v1_1000b20c8 to i8*
  %v3_1000b20c10 = load i8, i8* %v2_1000b20c9, align 1
  store i32 %v1_1000b20c8, i32* %r4.global-to-local, align 4
  %v3_1000b21012 = add i32 %v2_1000b1a4, -1
  %v4_1000b21013 = inttoptr i32 %v3_1000b21012 to i8*
  store i8 %v3_1000b20c10, i8* %v4_1000b21013, align 1
  store i32 %v3_1000b21012, i32* %r10.global-to-local, align 4
  %v0_1000b21414 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b21415 = add i32 %v0_1000b21414, -1
  store i32 %v1_1000b21415, i32* %ctr.global-to-local, align 4
  %v2_1000b21416 = icmp eq i32 %v1_1000b21415, 0
  br i1 %v2_1000b21416, label %dec_label_pc_1000b218, label %dec_label_pc_1000b20c.dec_label_pc_1000b20c_crit_edge

dec_label_pc_1000b20c.dec_label_pc_1000b20c_crit_edge: ; preds = %dec_label_pc_1000b200, %dec_label_pc_1000b20c.dec_label_pc_1000b20c_crit_edge
  %v3_1000b21017 = phi i32 [ %v3_1000b210, %dec_label_pc_1000b20c.dec_label_pc_1000b20c_crit_edge ], [ %v3_1000b21012, %dec_label_pc_1000b200 ]
  %v0_1000b20c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1000b20c = add i32 %v0_1000b20c.pre, -1
  %v2_1000b20c = inttoptr i32 %v1_1000b20c to i8*
  %v3_1000b20c = load i8, i8* %v2_1000b20c, align 1
  store i32 %v1_1000b20c, i32* %r4.global-to-local, align 4
  %v3_1000b210 = add i32 %v3_1000b21017, -1
  %v4_1000b210 = inttoptr i32 %v3_1000b210 to i8*
  store i8 %v3_1000b20c, i8* %v4_1000b210, align 1
  store i32 %v3_1000b210, i32* %r10.global-to-local, align 4
  %v0_1000b214 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b214 = add i32 %v0_1000b214, -1
  store i32 %v1_1000b214, i32* %ctr.global-to-local, align 4
  %v2_1000b214 = icmp eq i32 %v1_1000b214, 0
  br i1 %v2_1000b214, label %dec_label_pc_1000b218, label %dec_label_pc_1000b20c.dec_label_pc_1000b20c_crit_edge

dec_label_pc_1000b218:                            ; preds = %dec_label_pc_1000b20c.dec_label_pc_1000b20c_crit_edge, %dec_label_pc_1000b200
  %v0_1000b218 = load i32, i32* @r11, align 4
  %v1_1000b218 = call i32 @__asm_rlwinm.(i32 %v0_1000b218, i32 29, i32 3, i32 31)
  store i32 %v1_1000b218, i32* %r9.global-to-local, align 4
  %v4_1000b218 = icmp eq i32 %v1_1000b218, 0
  br i1 %v4_1000b218, label %dec_label_pc_1000b1cc, label %dec_label_pc_1000b218.dec_label_pc_1000b1b4_crit_edge

dec_label_pc_1000b218.dec_label_pc_1000b1b4_crit_edge: ; preds = %dec_label_pc_1000b218
  %v1_1000b1c0.pre.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000b1b4

dec_label_pc_1000b224:                            ; preds = %dec_label_pc_1000b1f0, %dec_label_pc_1000b1e4
  %v0_1000b224 = load i32, i32* %r8.global-to-local, align 4
  ret i32 %v0_1000b224

; uselistorder directives
  uselistorder i32 %v1_1000b218, { 1, 2, 0 }
  uselistorder i32 %v1_1000b214, { 1, 0 }
  uselistorder i32 %v3_1000b210, { 1, 2, 0 }
  uselistorder i32 %v1_1000b1f8, { 1, 0 }
  uselistorder i32 %v3_1000b1f4, { 1, 2, 0 }
  uselistorder i32 %v1_1000b1cc, { 3, 2, 1, 0 }
  uselistorder i32 %v1_1000b1c8, { 1, 0 }
  uselistorder i32 %v2_1000b1c4, { 1, 2, 0 }
  uselistorder i32 %v1_1000b1ac, { 1, 0 }
  uselistorder i32 %v2_1000b1a4, { 1, 2, 0, 3 }
  uselistorder i32* %r4.global-to-local, { 2, 1, 0, 3, 6, 4, 8, 5, 7, 9 }
  uselistorder i32* %r10.global-to-local, { 1, 2, 0, 3, 6, 4, 7, 5, 8, 9 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32* @r11, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32 %arg3, { 2, 0, 1, 4, 3, 5 }
  uselistorder label %dec_label_pc_1000b20c.dec_label_pc_1000b20c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000b1e4, { 1, 0 }
  uselistorder label %dec_label_pc_1000b1cc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000b19c, { 1, 0 }
}

define i32 @function_1000b22c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000b22c:
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v1_1000b22c = call i32 @__asm_rlwinm.(i32 %arg3, i32 29, i32 3, i32 31)
  store i32 %v1_1000b22c, i32* %r9.global-to-local, align 4
  %v4_1000b22c = icmp eq i32 %v1_1000b22c, 0
  %v1_1000b234 = add i32 %arg1, -4
  store i32 %v1_1000b234, i32* %r11.global-to-local, align 4
  %v1_1000b238 = call i32 @__asm_rlwimi(i32 %arg2, i32 8, i32 16, i32 23)
  %v1_1000b23c = call i32 @__asm_rlwimi(i32 %v1_1000b238, i32 16, i32 0, i32 15)
  %v2_1000b23c = trunc i32 %v1_1000b23c to i8
  br i1 %v4_1000b22c, label %dec_label_pc_1000b264, label %dec_label_pc_1000b244

dec_label_pc_1000b244:                            ; preds = %dec_label_pc_1000b22c
  %v0_1000b244 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b244 = urem i32 %v0_1000b244, 4
  %v3_1000b244 = icmp eq i32 %v1_1000b244, 0
  br i1 %v3_1000b244, label %dec_label_pc_1000b244.dec_label_pc_1000b24c_crit_edge, label %dec_label_pc_1000b294

dec_label_pc_1000b244.dec_label_pc_1000b24c_crit_edge: ; preds = %dec_label_pc_1000b244
  %v0_1000b24c.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000b24c

dec_label_pc_1000b24c:                            ; preds = %dec_label_pc_1000b2ac.dec_label_pc_1000b24c_crit_edge, %dec_label_pc_1000b244.dec_label_pc_1000b24c_crit_edge
  %v0_1000b250.pre = phi i32 [ %v0_1000b244, %dec_label_pc_1000b244.dec_label_pc_1000b24c_crit_edge ], [ %v0_1000b250.pre.pre, %dec_label_pc_1000b2ac.dec_label_pc_1000b24c_crit_edge ]
  %v0_1000b24c = phi i32 [ %v0_1000b24c.pre, %dec_label_pc_1000b244.dec_label_pc_1000b24c_crit_edge ], [ %v1_1000b2ac, %dec_label_pc_1000b2ac.dec_label_pc_1000b24c_crit_edge ]
  store i32 %v0_1000b24c, i32* %ctr.global-to-local, align 4
  %v1_1000b254 = sext i8 %v2_1000b23c to i32
  br label %dec_label_pc_1000b250

dec_label_pc_1000b250:                            ; preds = %dec_label_pc_1000b250, %dec_label_pc_1000b24c
  %v0_1000b250 = phi i32 [ %v1_1000b25c, %dec_label_pc_1000b250 ], [ %v0_1000b250.pre, %dec_label_pc_1000b24c ]
  %v1_1000b250 = add i32 %v0_1000b250, 4
  store i32 %v1_1000b250, i32* %r9.global-to-local, align 4
  %v4_1000b254 = inttoptr i32 %v1_1000b250 to i32*
  store i32 %v1_1000b254, i32* %v4_1000b254, align 4
  %v2_1000b258 = load i32, i32* %r9.global-to-local, align 4
  %v3_1000b258 = add i32 %v2_1000b258, 4
  %v4_1000b258 = inttoptr i32 %v3_1000b258 to i32*
  store i32 %v1_1000b254, i32* %v4_1000b258, align 4
  %v0_1000b25c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b25c = add i32 %v0_1000b25c, 4
  store i32 %v1_1000b25c, i32* %r11.global-to-local, align 4
  %v0_1000b260 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b260 = add i32 %v0_1000b260, -1
  store i32 %v1_1000b260, i32* %ctr.global-to-local, align 4
  %v2_1000b260 = icmp eq i32 %v1_1000b260, 0
  br i1 %v2_1000b260, label %dec_label_pc_1000b264, label %dec_label_pc_1000b250

dec_label_pc_1000b264:                            ; preds = %dec_label_pc_1000b250, %dec_label_pc_1000b2ac, %dec_label_pc_1000b22c
  %v0_1000b264 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000b264 = urem i32 %v0_1000b264, 8
  store i32 %v1_1000b264, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_1000b264, 4
  br i1 %tmp, label %dec_label_pc_1000b278, label %dec_label_pc_1000b270

dec_label_pc_1000b270:                            ; preds = %dec_label_pc_1000b264
  %v1_1000b270 = sext i8 %v2_1000b23c to i32
  %v2_1000b270 = load i32, i32* %r11.global-to-local, align 4
  %v3_1000b270 = add i32 %v2_1000b270, 4
  %v4_1000b270 = inttoptr i32 %v3_1000b270 to i32*
  store i32 %v1_1000b270, i32* %v4_1000b270, align 4
  store i32 %v3_1000b270, i32* %r11.global-to-local, align 4
  %v0_1000b274 = load i32, i32* @r5, align 4
  %v1_1000b274 = add i32 %v0_1000b274, -4
  store i32 %v1_1000b274, i32* @r5, align 4
  br label %dec_label_pc_1000b278

dec_label_pc_1000b278:                            ; preds = %dec_label_pc_1000b264, %dec_label_pc_1000b270
  %v0_1000b278 = phi i32 [ %v1_1000b264, %dec_label_pc_1000b264 ], [ %v1_1000b274, %dec_label_pc_1000b270 ]
  %v3_1000b278 = icmp eq i32 %v0_1000b278, 0
  %v0_1000b27c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000b278, i32 %v0_1000b27c)
  %v0_1000b280 = load i32, i32* @r5, align 4
  store i32 %v0_1000b280, i32* %ctr.global-to-local, align 4
  %v0_1000b284 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b284 = add i32 %v0_1000b284, 3
  store i32 %v1_1000b284, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000b288

dec_label_pc_1000b288:                            ; preds = %dec_label_pc_1000b288, %dec_label_pc_1000b278
  %v3_1000b288 = phi i32 [ %v4_1000b288, %dec_label_pc_1000b288 ], [ %v1_1000b284, %dec_label_pc_1000b278 ]
  %v4_1000b288 = add i32 %v3_1000b288, 1
  %v5_1000b288 = inttoptr i32 %v4_1000b288 to i8*
  store i8 %v2_1000b23c, i8* %v5_1000b288, align 1
  store i32 %v4_1000b288, i32* %r9.global-to-local, align 4
  %v0_1000b28c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b28c = add i32 %v0_1000b28c, -1
  store i32 %v1_1000b28c, i32* %ctr.global-to-local, align 4
  %v2_1000b28c = icmp eq i32 %v1_1000b28c, 0
  br i1 %v2_1000b28c, label %dec_label_pc_1000b2b8, label %dec_label_pc_1000b288

dec_label_pc_1000b294:                            ; preds = %dec_label_pc_1000b244
  %v1_1000b294 = sub nsw i32 4, %v1_1000b244
  store i32 %v1_1000b294, i32* %ctr.global-to-local, align 4
  %v1_1000b29c = load i32, i32* %r5.global-to-local, align 4
  %v2_1000b29c = sub i32 %v1_1000b29c, %v1_1000b294
  store i32 %v2_1000b29c, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000b2a0

dec_label_pc_1000b2a0:                            ; preds = %dec_label_pc_1000b2a0, %dec_label_pc_1000b294
  %v3_1000b2a0 = phi i32 [ %v1_1000b2a4, %dec_label_pc_1000b2a0 ], [ %v0_1000b244, %dec_label_pc_1000b294 ]
  %v4_1000b2a0 = add i32 %v3_1000b2a0, 4
  %v5_1000b2a0 = inttoptr i32 %v4_1000b2a0 to i8*
  store i8 %v2_1000b23c, i8* %v5_1000b2a0, align 1
  %v0_1000b2a4 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b2a4 = add i32 %v0_1000b2a4, 1
  store i32 %v1_1000b2a4, i32* %r11.global-to-local, align 4
  %v0_1000b2a8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b2a8 = add i32 %v0_1000b2a8, -1
  store i32 %v1_1000b2a8, i32* %ctr.global-to-local, align 4
  %v2_1000b2a8 = icmp eq i32 %v1_1000b2a8, 0
  br i1 %v2_1000b2a8, label %dec_label_pc_1000b2ac, label %dec_label_pc_1000b2a0

dec_label_pc_1000b2ac:                            ; preds = %dec_label_pc_1000b2a0
  %v0_1000b2ac = load i32, i32* %r5.global-to-local, align 4
  %v1_1000b2ac = call i32 @__asm_rlwinm.(i32 %v0_1000b2ac, i32 29, i32 3, i32 31)
  store i32 %v1_1000b2ac, i32* %r9.global-to-local, align 4
  %v4_1000b2ac = icmp eq i32 %v1_1000b2ac, 0
  br i1 %v4_1000b2ac, label %dec_label_pc_1000b264, label %dec_label_pc_1000b2ac.dec_label_pc_1000b24c_crit_edge

dec_label_pc_1000b2ac.dec_label_pc_1000b24c_crit_edge: ; preds = %dec_label_pc_1000b2ac
  %v0_1000b250.pre.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000b24c

dec_label_pc_1000b2b8:                            ; preds = %dec_label_pc_1000b288
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_1000b2ac, { 1, 2, 0 }
  uselistorder i32 %v1_1000b2a8, { 1, 0 }
  uselistorder i32 %v1_1000b2a4, { 1, 0 }
  uselistorder i32 %v1_1000b28c, { 1, 0 }
  uselistorder i32 %v4_1000b288, { 1, 2, 0 }
  uselistorder i32 %v1_1000b264, { 2, 1, 0 }
  uselistorder i32 %v1_1000b260, { 1, 0 }
  uselistorder i32 %v1_1000b25c, { 1, 0 }
  uselistorder i32 %v1_1000b244, { 1, 0 }
  uselistorder i32 %v0_1000b244, { 2, 1, 0 }
  uselistorder i8 %v2_1000b23c, { 1, 3, 2, 0 }
  uselistorder i32* %r5.global-to-local, { 2, 4, 0, 3, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 4, 5, 2, 6, 3, 7, 8 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwimi, { 46, 47, 43, 44, 45, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42 }
  uselistorder label %dec_label_pc_1000b278, { 1, 0 }
  uselistorder label %dec_label_pc_1000b264, { 1, 0, 2 }
}

define i32 @function_1000b2bc(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000b2bc:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i8 @__decompiler_undefined_function_2()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_1000b2c0 = load i32, i32* @lr, align 4
  store i32 %v0_1000b2c0, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_1000b2d0 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268481252, i32* @lr, align 4
  %v3_1000b2e0 = call i32 @function_1000a774(i32 1076655123, i32 %v2_1000b2d0, i32 %v2_1000b2d0)
  %v2_1000b2e4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000b2e4, i32* @r4, align 4
  store i32 %v3_1000b2e0, i32* @r30, align 4
  %v3_1000b2e8 = icmp eq i32 %v3_1000b2e0, 0
  %v0_1000b2f0 = load i32, i32* @r31, align 4
  br i1 %v3_1000b2e8, label %dec_label_pc_1000b2f8, label %dec_label_pc_1000b340

dec_label_pc_1000b2f8:                            ; preds = %dec_label_pc_1000b2bc
  %v1_1000b2f0 = add i32 %v0_1000b2f0, 17
  %v3_1000b310 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_1000b310, i32* %r0.global-to-local, align 4
  %v2_1000b314 = add i32 %v0_1000b2f0, 4
  %v3_1000b314 = inttoptr i32 %v2_1000b314 to i32*
  store i32 %tmp7, i32* %v3_1000b314, align 4
  %v0_1000b318 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000b318 = load i32, i32* @r31, align 4
  %v2_1000b318 = inttoptr i32 %v1_1000b318 to i32*
  store i32 %v0_1000b318, i32* %v2_1000b318, align 4
  %v0_1000b31c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b31c = load i32, i32* @r31, align 4
  %v2_1000b31c = add i32 %v1_1000b31c, 8
  %v3_1000b31c = inttoptr i32 %v2_1000b31c to i32*
  store i32 %v0_1000b31c, i32* %v3_1000b31c, align 4
  %v0_1000b320 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b320 = load i32, i32* @r31, align 4
  %v2_1000b320 = add i32 %v1_1000b320, 12
  %v3_1000b320 = inttoptr i32 %v2_1000b320 to i32*
  store i32 %v0_1000b320, i32* %v3_1000b320, align 4
  %v3_1000b324 = load i32, i32* @r31, align 4
  %v4_1000b324 = add i32 %v3_1000b324, 16
  %v5_1000b324 = inttoptr i32 %v4_1000b324 to i8*
  store i8 %tmp4, i8* %v5_1000b324, align 1
  %v1_1000b328 = load i32, i32* @r31, align 4
  %v2_1000b328 = add i32 %v1_1000b328, 52
  %v3_1000b328 = inttoptr i32 %v2_1000b328 to i32*
  store i32 %tmp3, i32* %v3_1000b328, align 4
  %v1_1000b32c = load i32, i32* @r31, align 4
  %v2_1000b32c = add i32 %v1_1000b32c, 56
  %v3_1000b32c = inttoptr i32 %v2_1000b32c to i32*
  store i32 %tmp2, i32* %v3_1000b32c, align 4
  store i32 268481332, i32* @lr, align 4
  %v6_1000b330 = sext i8 %tmp4 to i32
  %v8_1000b330 = call i32 @function_1000cf3c(i32 %v1_1000b2f0, i32 %v2_1000b2e4, i32 19, i32 %tmp2, i32 %tmp3, i32 %v6_1000b330, i32 %tmp7)
  store i32 268481344, i32* @lr, align 4
  %v3_1000b33c = call i32 @function_1000b22c(i32 %v8_1000b330, i32 0, i32 13)
  %v0_1000b344.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000b340

dec_label_pc_1000b340:                            ; preds = %dec_label_pc_1000b2bc, %dec_label_pc_1000b2f8
  %v0_1000b344 = phi i32 [ %v3_1000b2e0, %dec_label_pc_1000b2bc ], [ %v0_1000b344.pre, %dec_label_pc_1000b2f8 ]
  store i32 %v0_1000b2c0, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000b344

; uselistorder directives
  uselistorder i32 %v2_1000b2d0, { 1, 0 }
  uselistorder i32 %tmp7, { 1, 0 }
  uselistorder i32 13, { 5, 6, 7, 12, 0, 1, 13, 8, 9, 10, 11, 14, 15, 2, 16, 17, 3, 18, 19, 4 }
  uselistorder label %dec_label_pc_1000b340, { 1, 0 }
}

define i32 @function_1000b358() local_unnamed_addr {
dec_label_pc_1000b358:
  %r27.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_1000b358 = load i32, i32* @r4, align 4
  %v3_1000b358 = icmp eq i32 %v0_1000b358, 1
  %v0_1000b368 = load i32, i32* @r3, align 4
  store i32 %v0_1000b368, i32* %r27.global-to-local, align 4
  %v0_1000b370 = load i32, i32* @r5, align 4
  store i32 %v0_1000b370, i32* @r31, align 4
  br i1 %v3_1000b358, label %dec_label_pc_1000b394, label %dec_label_pc_1000b378

dec_label_pc_1000b378:                            ; preds = %dec_label_pc_1000b358
  %v3_1000b378 = icmp eq i32 %v0_1000b358, 2
  br i1 %v3_1000b378, label %dec_label_pc_1000b3b4, label %dec_label_pc_1000b380

dec_label_pc_1000b380:                            ; preds = %dec_label_pc_1000b378
  %v3_1000b380 = icmp eq i32 %v0_1000b358, 0
  store i32 -2144570348, i32* @r30, align 4
  br i1 %v3_1000b380, label %dec_label_pc_1000b3bc, label %dec_label_pc_1000b3a0

dec_label_pc_1000b394:                            ; preds = %dec_label_pc_1000b358
  store i32 -2144570347, i32* @r30, align 4
  br label %dec_label_pc_1000b3bc

dec_label_pc_1000b3a0:                            ; preds = %dec_label_pc_1000b380
  %v0_1000b3a0 = call i32 @function_1000b0a8()
  store i32 -1, i32* @r28, align 4
  %v2_1000b3ac = inttoptr i32 %v0_1000b3a0 to i32*
  store i32 22, i32* %v2_1000b3ac, align 4
  br label %dec_label_pc_1000b4a4

dec_label_pc_1000b3b4:                            ; preds = %dec_label_pc_1000b378
  store i32 -2144570346, i32* @r30, align 4
  br label %dec_label_pc_1000b3bc

dec_label_pc_1000b3bc:                            ; preds = %dec_label_pc_1000b380, %dec_label_pc_1000b394, %dec_label_pc_1000b3b4
  %v1_1000b3bc = inttoptr i32 %v0_1000b370 to i32*
  %v2_1000b3bc = load i32, i32* %v1_1000b3bc, align 4
  store i32 19, i32* @r5, align 4
  %v1_1000b3c4 = add i32 %v0_1000b370, 4
  %v2_1000b3c4 = inttoptr i32 %v1_1000b3c4 to i32*
  %v3_1000b3c4 = load i32, i32* %v2_1000b3c4, align 4
  store i32 %v3_1000b3c4, i32* %r9.global-to-local, align 4
  %v1_1000b3c8 = add i32 %v0_1000b370, 17
  store i32 %v1_1000b3c8, i32* @r4, align 4
  %v1_1000b3cc = add i32 %v0_1000b370, 8
  %v2_1000b3cc = inttoptr i32 %v1_1000b3cc to i32*
  %v3_1000b3cc = load i32, i32* %v2_1000b3cc, align 4
  %v2_1000b3d0 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1000b3d0, i32* @r3, align 4
  %v2_1000b3d8 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_1000b3bc, i32* %stack_var_-72, align 4
  store i32 268481544, i32* @lr, align 4
  %v0_1000b404 = call i32 @function_1000b0ec()
  %v0_1000b408 = load i32, i32* %r27.global-to-local, align 4
  %v0_1000b40c = load i32, i32* @r30, align 4
  store i32 268481564, i32* @lr, align 4
  %v3_1000b418 = call i32 @function_1000a774(i32 %v0_1000b408, i32 %v0_1000b40c, i32 %v2_1000b3d8)
  store i32 %v3_1000b418, i32* @r28, align 4
  %v3_1000b41c = icmp eq i32 %v3_1000b418, 0
  br i1 %v3_1000b41c, label %dec_label_pc_1000b424, label %dec_label_pc_1000b4a4

dec_label_pc_1000b424:                            ; preds = %dec_label_pc_1000b3bc
  %v0_1000b424 = load i32, i32* @r30, align 4
  %v3_1000b428 = icmp eq i32 %v0_1000b424, -2144570348
  br i1 %v3_1000b428, label %dec_label_pc_1000b430, label %dec_label_pc_1000b4a0

dec_label_pc_1000b430:                            ; preds = %dec_label_pc_1000b424
  %v0_1000b430 = call i32 @function_1000b0a8()
  store i32 %v0_1000b430, i32* @r29, align 4
  %v0_1000b440 = load i32, i32* %r27.global-to-local, align 4
  %v1_1000b448 = inttoptr i32 %v0_1000b430 to i32*
  %v2_1000b448 = load i32, i32* %v1_1000b448, align 4
  store i32 %v2_1000b448, i32* @r30, align 4
  store i32 268481620, i32* @lr, align 4
  %v3_1000b450 = call i32 @function_1000a774(i32 %v0_1000b440, i32 1076655123, i32 %v2_1000b3d8)
  %v3_1000b454 = icmp eq i32 %v3_1000b450, 0
  br i1 %v3_1000b454, label %dec_label_pc_1000b464, label %dec_label_pc_1000b45c

dec_label_pc_1000b45c:                            ; preds = %dec_label_pc_1000b430
  %v0_1000b45c = load i32, i32* @r30, align 4
  %v1_1000b45c = load i32, i32* @r29, align 4
  %v2_1000b45c = inttoptr i32 %v1_1000b45c to i32*
  store i32 %v0_1000b45c, i32* %v2_1000b45c, align 4
  br label %dec_label_pc_1000b4a4

dec_label_pc_1000b464:                            ; preds = %dec_label_pc_1000b430
  %v0_1000b464 = load i32, i32* @r31, align 4
  %v1_1000b464 = add i32 %v0_1000b464, 8
  %v2_1000b464 = inttoptr i32 %v1_1000b464 to i32*
  %v3_1000b464 = load i32, i32* %v2_1000b464, align 4
  %v1_1000b46c = call i32 @__asm_rlwinm(i32 %v3_1000b464, i32 0, i32 19, i32 20)
  %v1_1000b470 = call i32 @__asm_rlwinm(i32 %v3_1000b3cc, i32 0, i32 19, i32 20)
  store i32 %v1_1000b470, i32* %r9.global-to-local, align 4
  %v4_1000b474 = icmp eq i32 %v1_1000b46c, %v1_1000b470
  br i1 %v4_1000b474, label %dec_label_pc_1000b47c, label %dec_label_pc_1000b490

dec_label_pc_1000b47c:                            ; preds = %dec_label_pc_1000b464
  %v1_1000b47c = and i32 %v3_1000b464, 768
  store i32 %v1_1000b47c, i32* %r9.global-to-local, align 4
  %v3_1000b47c = icmp eq i32 %v1_1000b47c, 0
  br i1 %v3_1000b47c, label %dec_label_pc_1000b4a0, label %dec_label_pc_1000b484

dec_label_pc_1000b484:                            ; preds = %dec_label_pc_1000b47c
  %v1_1000b484 = call i32 @__asm_rlwinm(i32 %v3_1000b3cc, i32 0, i32 22, i32 23)
  %v0_1000b488 = load i32, i32* %r9.global-to-local, align 4
  %v4_1000b488 = icmp eq i32 %v0_1000b488, %v1_1000b484
  br i1 %v4_1000b488, label %dec_label_pc_1000b4a0, label %dec_label_pc_1000b490

dec_label_pc_1000b490:                            ; preds = %dec_label_pc_1000b464, %dec_label_pc_1000b484
  store i32 -1, i32* @r28, align 4
  %v1_1000b498 = load i32, i32* @r29, align 4
  %v2_1000b498 = inttoptr i32 %v1_1000b498 to i32*
  store i32 22, i32* %v2_1000b498, align 4
  br label %dec_label_pc_1000b4a4

dec_label_pc_1000b4a0:                            ; preds = %dec_label_pc_1000b424, %dec_label_pc_1000b484, %dec_label_pc_1000b47c
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_1000b4a4

dec_label_pc_1000b4a4:                            ; preds = %dec_label_pc_1000b3bc, %dec_label_pc_1000b490, %dec_label_pc_1000b45c, %dec_label_pc_1000b3a0, %dec_label_pc_1000b4a0
  %v0_1000b4a8 = load i32, i32* @r28, align 4
  ret i32 %v0_1000b4a8

; uselistorder directives
  uselistorder i32 %v0_1000b370, { 1, 0, 3, 2, 4 }
  uselistorder i32 768, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_1000a774, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1000b4a4, { 4, 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_1000b4a0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000b490, { 1, 0 }
  uselistorder label %dec_label_pc_1000b3bc, { 2, 1, 0 }
}

define i32 @function_1000b4bc(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b4bc:
  %stack_var_-24 = alloca i32, align 4
  %v2_1000b4c4 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1000b4c4, i32* @r4, align 4
  store i32 268481744, i32* @lr, align 4
  %v1_1000b4cc = bitcast i32* %stack_var_-24 to i8*
  %v2_1000b4cc = call i32 @function_1000cf70(i8* %v1_1000b4cc)
  %v3_1000b4d0 = icmp eq i32 %v2_1000b4cc, 0
  br i1 %v3_1000b4d0, label %dec_label_pc_1000b4e0, label %dec_label_pc_1000b4dc

dec_label_pc_1000b4dc:                            ; preds = %dec_label_pc_1000b4bc
  %v3_1000b4dc = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1000b4e0

dec_label_pc_1000b4e0:                            ; preds = %dec_label_pc_1000b4bc, %dec_label_pc_1000b4dc
  %v0_1000b4ec = phi i32 [ -1, %dec_label_pc_1000b4bc ], [ %v3_1000b4dc, %dec_label_pc_1000b4dc ]
  ret i32 %v0_1000b4ec

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000b4e0, { 1, 0 }
}

define i32 @function_1000b4f0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000b4f0:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000b504 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268481812, i32* @lr, align 4
  %v2_1000b510 = call i32 @function_1000c840(i32 5, i32 %v2_1000b504)
  ret i32 %v2_1000b510

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_1000b524(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000b524:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000b538 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268481864, i32* @lr, align 4
  %v2_1000b544 = call i32 @function_1000c840(i32 2, i32 %v2_1000b538)
  ret i32 %v2_1000b544

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_1000b558() local_unnamed_addr {
dec_label_pc_1000b558:
  %stack_var_-24 = alloca i32, align 4
  %v0_1000b560 = load i32, i32* @r3, align 4
  store i32 %v0_1000b560, i32* %stack_var_-24, align 4
  %v2_1000b56c = ptrtoint i32* %stack_var_-24 to i32
  store i32 268481916, i32* @lr, align 4
  %v2_1000b578 = call i32 @function_1000c840(i32 3, i32 %v2_1000b56c)
  ret i32 %v2_1000b578

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_1000b58c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000b58c:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000b5a0 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268481968, i32* @lr, align 4
  %v2_1000b5ac = call i32 @function_1000c840(i32 6, i32 %v2_1000b5a0)
  ret i32 %v2_1000b5ac

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_1000b5c0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1000b5c0:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1000b5d4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268482028, i32* @lr, align 4
  %v2_1000b5e8 = call i32 @function_1000c840(i32 15, i32 %v2_1000b5d4)
  ret i32 %v2_1000b5e8

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32 15, { 0, 21, 4, 5, 11, 19, 20, 6, 7, 8, 9, 10, 12, 13, 14, 1, 15, 16, 2, 17, 18, 3 }
}

define i32 @function_1000b5fc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000b5fc:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000b610 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268482076, i32* @lr, align 4
  %v2_1000b618 = call i32 @function_1000c840(i32 4, i32 %v2_1000b610)
  ret i32 %v2_1000b618

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_1000b62c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000b62c:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000b640 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268482132, i32* @lr, align 4
  %v2_1000b650 = call i32 @function_1000c840(i32 10, i32 %v2_1000b640)
  ret i32 %v2_1000b650

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_1000b664(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1000b664:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1000b678 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268482196, i32* @lr, align 4
  %v2_1000b690 = call i32 @function_1000c840(i32 12, i32 %v2_1000b678)
  ret i32 %v2_1000b690

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_1000b6a4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000b6a4:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000b6b8 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268482252, i32* @lr, align 4
  %v2_1000b6c8 = call i32 @function_1000c840(i32 9, i32 %v2_1000b6b8)
  ret i32 %v2_1000b6c8

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 9, { 2, 6, 7, 8, 38, 9, 10, 39, 40, 57, 58, 11, 3, 12, 0, 13, 14, 15, 41, 16, 17, 18, 19, 20, 42, 21, 4, 59, 43, 44, 45, 5, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 35, 36, 33, 34, 31, 32, 29, 30, 27, 28, 25, 26, 23, 24, 22, 37, 1, 60, 61, 62, 63, 64, 65, 66, 67, 68 }
}

define i32 @function_1000b6dc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1000b6dc:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1000b6f0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268482316, i32* @lr, align 4
  %v2_1000b708 = call i32 @function_1000c840(i32 11, i32 %v2_1000b6f0)
  ret i32 %v2_1000b708

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_1000b71c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1000b71c:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1000b730 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268482376, i32* @lr, align 4
  %v2_1000b744 = call i32 @function_1000c840(i32 14, i32 %v2_1000b730)
  ret i32 %v2_1000b744

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_1000b758(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000b758:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000b76c = ptrtoint i32* %stack_var_-24 to i32
  store i32 268482428, i32* @lr, align 4
  %v2_1000b778 = call i32 @function_1000c840(i32 1, i32 %v2_1000b76c)
  ret i32 %v2_1000b778

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_1000c840, { 5, 4, 8, 3, 7, 2, 10, 1, 6, 0, 9, 11 }
}

define i32 @function_1000b78c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b78c:
  %v0_1000b78c = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 268482468, i32* @lr, align 4
  %v0_1000b7a0 = call i32 @function_1000aa1c()
  %v0_1000b7a8 = load i32, i32* @r29, align 4
  store i32 %v0_1000b78c, i32* @lr, align 4
  %v2_1000b7b8 = call i32 @function_1000aaac(i32 %v0_1000b7a0, i32 %v0_1000b7a8)
  ret i32 %v2_1000b7b8

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_1000aaac, { 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @function_1000aa1c, { 0, 1, 3, 2 }
}

define i32 @function_1000b7bc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000b7bc:
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  %arg1.off = add i32 %arg1, -1
  %tmp4 = icmp ult i32 %arg1.off, 64
  br i1 %tmp4, label %dec_label_pc_1000b7ec, label %dec_label_pc_1000b7d8

dec_label_pc_1000b7d8:                            ; preds = %dec_label_pc_1000b7bc
  %v0_1000b7d8 = call i32 @function_1000b0a8()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_1000b7e4 = inttoptr i32 %v0_1000b7d8 to i32*
  store i32 22, i32* %v2_1000b7e4, align 4
  %v0_1000b7f8.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000b7f4

dec_label_pc_1000b7ec:                            ; preds = %dec_label_pc_1000b7bc
  %v0_1000b7ec = call i32 @function_1000b93c()
  store i32 %v0_1000b7ec, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000b7f4

dec_label_pc_1000b7f4:                            ; preds = %dec_label_pc_1000b7d8, %dec_label_pc_1000b7ec
  %v0_1000b7f8 = phi i32 [ %v0_1000b7f8.pre, %dec_label_pc_1000b7d8 ], [ %v0_1000b7ec, %dec_label_pc_1000b7ec ]
  ret i32 %v0_1000b7f8

; uselistorder directives
  uselistorder label %dec_label_pc_1000b7f4, { 1, 0 }
}

define i32 @function_1000b808(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b808:
  store i32 268482592, i32* @lr, align 4
  %v3_1000b81c = call i32 @function_1000b22c(i32 0, i32 128, i32 128)
  ret i32 0
}

define i32 @function_1000b834(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000b834:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v3_1000b834 = icmp eq i32 %arg2, -1
  store i32 %arg1, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b834, label %dec_label_pc_1000b860, label %dec_label_pc_1000b850

dec_label_pc_1000b850:                            ; preds = %dec_label_pc_1000b834
  %tmp20 = icmp slt i32 %arg1, 1
  br i1 %tmp20, label %dec_label_pc_1000b860, label %dec_label_pc_1000b858

dec_label_pc_1000b858:                            ; preds = %dec_label_pc_1000b850
  %tmp21 = icmp slt i32 %arg1, 65
  br i1 %tmp21, label %dec_label_pc_1000b890.lr.ph, label %dec_label_pc_1000b860

dec_label_pc_1000b860:                            ; preds = %dec_label_pc_1000b858, %dec_label_pc_1000b850, %dec_label_pc_1000b834
  %v0_1000b860 = call i32 @function_1000b0a8()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_1000b86c = inttoptr i32 %v0_1000b860 to i32*
  store i32 22, i32* %v2_1000b86c, align 4
  %v0_1000b900.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000b8fc

dec_label_pc_1000b890.lr.ph:                      ; preds = %dec_label_pc_1000b858
  %v2_1000b880 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_1000b880, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-296, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_1000b89022 = add i32 %v2_1000b880, 128
  %v3_1000b89023 = inttoptr i32 %v2_1000b89022 to i32*
  store i32 0, i32* %v3_1000b89023, align 4
  %v0_1000b89424 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b89425 = add i32 %v0_1000b89424, -1
  store i32 %v1_1000b89425, i32* %r11.global-to-local, align 4
  %v1_1000b89826 = mul i32 %v1_1000b89425, 4
  %v1_1000b89c27 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000b89c28 = add i32 %v1_1000b89c27, %v1_1000b89826
  store i32 %v2_1000b89c28, i32* %r9.global-to-local, align 4
  %v0_1000b8a029 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b8a030 = add i32 %v0_1000b8a029, -1
  store i32 %v1_1000b8a030, i32* %ctr.global-to-local, align 4
  %v2_1000b8a031 = icmp eq i32 %v1_1000b8a030, 0
  br i1 %v2_1000b8a031, label %dec_label_pc_1000b8a4, label %dec_label_pc_1000b890.dec_label_pc_1000b890_crit_edge

dec_label_pc_1000b890.dec_label_pc_1000b890_crit_edge: ; preds = %dec_label_pc_1000b890.lr.ph, %dec_label_pc_1000b890.dec_label_pc_1000b890_crit_edge
  %v2_1000b89c32 = phi i32 [ %v2_1000b89c, %dec_label_pc_1000b890.dec_label_pc_1000b890_crit_edge ], [ %v2_1000b89c28, %dec_label_pc_1000b890.lr.ph ]
  %v0_1000b890.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_1000b890 = add i32 %v2_1000b89c32, 4
  %v3_1000b890 = inttoptr i32 %v2_1000b890 to i32*
  store i32 %v0_1000b890.pre, i32* %v3_1000b890, align 4
  %v0_1000b894 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b894 = add i32 %v0_1000b894, -1
  store i32 %v1_1000b894, i32* %r11.global-to-local, align 4
  %v1_1000b898 = mul i32 %v1_1000b894, 4
  %v1_1000b89c = load i32, i32* %r8.global-to-local, align 4
  %v2_1000b89c = add i32 %v1_1000b89c, %v1_1000b898
  store i32 %v2_1000b89c, i32* %r9.global-to-local, align 4
  %v0_1000b8a0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b8a0 = add i32 %v0_1000b8a0, -1
  store i32 %v1_1000b8a0, i32* %ctr.global-to-local, align 4
  %v2_1000b8a0 = icmp eq i32 %v1_1000b8a0, 0
  br i1 %v2_1000b8a0, label %dec_label_pc_1000b8a4, label %dec_label_pc_1000b890.dec_label_pc_1000b890_crit_edge

dec_label_pc_1000b8a4:                            ; preds = %dec_label_pc_1000b890.dec_label_pc_1000b890_crit_edge, %dec_label_pc_1000b890.lr.ph
  %v0_1000b8a8.pre = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b8a4 = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v2_1000b8a4, i32* @r3, align 4
  store i32 %v0_1000b8a8.pre, i32* @r4, align 4
  %v0_1000b8ac = call i32 @function_1000b93c()
  %v1_1000b8b0 = icmp slt i32 %v0_1000b8ac, 0
  br i1 %v1_1000b8b0, label %dec_label_pc_1000b8f8, label %dec_label_pc_1000b8b8

dec_label_pc_1000b8b8:                            ; preds = %dec_label_pc_1000b8a4
  %v0_1000b8bc = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b8c4 = call i32 @function_1000b914(i32 ptrtoint (i32* @global_var_1001e42c.491 to i32), i32 %v0_1000b8bc)
  %v2_1000b8d0 = ptrtoint i32* %stack_var_-156 to i32
  store i32 268482792, i32* @lr, align 4
  %v4_1000b8e4 = call i32 @function_1000d030(i32 %v0_1000b8bc, i32* nonnull %stack_var_-296, i32 %v2_1000b8d0)
  %v1_1000b8e8 = icmp slt i32 %v4_1000b8e4, 0
  br i1 %v1_1000b8e8, label %dec_label_pc_1000b8f8, label %dec_label_pc_1000b8f0

dec_label_pc_1000b8f0:                            ; preds = %dec_label_pc_1000b8b8
  %v3_1000b8f0 = load i32, i32* %stack_var_-156, align 4
  store i32 %v3_1000b8f0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000b8fc

dec_label_pc_1000b8f8:                            ; preds = %dec_label_pc_1000b8b8, %dec_label_pc_1000b8a4
  store i32 -1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000b8fc

dec_label_pc_1000b8fc:                            ; preds = %dec_label_pc_1000b8f0, %dec_label_pc_1000b860, %dec_label_pc_1000b8f8
  %v0_1000b900 = phi i32 [ %v3_1000b8f0, %dec_label_pc_1000b8f0 ], [ %v0_1000b900.pre, %dec_label_pc_1000b860 ], [ -1, %dec_label_pc_1000b8f8 ]
  ret i32 %v0_1000b900

; uselistorder directives
  uselistorder i32 %v1_1000b8a0, { 1, 0 }
  uselistorder i32 %v2_1000b89c, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 5, 3, 4 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000b8fc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000b890.dec_label_pc_1000b890_crit_edge, { 1, 0 }
}

define i32 @function_1000b914(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000b914:
  %v1_1000b914 = add i32 %arg2, -1
  %v1_1000b918 = call i32 @__asm_rlwinm(i32 %v1_1000b914, i32 29, i32 3, i32 29)
  %v1_1000b91c = urem i32 %v1_1000b914, 32
  %v2_1000b920 = add i32 %v1_1000b918, %arg1
  %v3_1000b920 = inttoptr i32 %v2_1000b920 to i32*
  %v4_1000b920 = load i32, i32* %v3_1000b920, align 4
  %v3_1000b928 = shl i32 1, %v1_1000b91c
  %v2_1000b92c = and i32 %v4_1000b920, %v3_1000b928
  %v2_1000b930 = icmp ne i32 %v2_1000b92c, 0
  %v5_1000b934 = zext i1 %v2_1000b930 to i32
  ret i32 %v5_1000b934
}

define i32 @function_1000b93c() local_unnamed_addr {
dec_label_pc_1000b93c:
  %r0.global-to-local = alloca i32, align 4
  %v0_1000b93c = load i32, i32* @r4, align 4
  %v1_1000b93c = add i32 %v0_1000b93c, -1
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_1000b944 = call i32 @__asm_rlwinm(i32 %v1_1000b93c, i32 29, i32 3, i32 29)
  %v1_1000b948 = urem i32 %v1_1000b93c, 32
  %v1_1000b94c = load i32, i32* @r3, align 4
  %v2_1000b94c = add i32 %v1_1000b94c, %v1_1000b944
  %v3_1000b94c = inttoptr i32 %v2_1000b94c to i32*
  %v4_1000b94c = load i32, i32* %v3_1000b94c, align 4
  %v0_1000b950 = load i32, i32* %r0.global-to-local, align 4
  %v3_1000b950 = shl i32 %v0_1000b950, %v1_1000b948
  store i32 %v3_1000b950, i32* %r0.global-to-local, align 4
  %v2_1000b954 = or i32 %v3_1000b950, %v4_1000b94c
  store i32 %v2_1000b954, i32* %v3_1000b94c, align 4
  ret i32 0
}

define i32 @function_1000b964(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000b964:
  %v1_1000b964 = add i32 %arg2, -1
  %v1_1000b96c = call i32 @__asm_rlwinm(i32 %v1_1000b964, i32 29, i32 3, i32 29)
  %v1_1000b970 = urem i32 %v1_1000b964, 32
  %v2_1000b974 = add i32 %v1_1000b96c, %arg1
  %v3_1000b974 = inttoptr i32 %v2_1000b974 to i32*
  %v4_1000b974 = load i32, i32* %v3_1000b974, align 4
  %v3_1000b978 = shl i32 -2, %v1_1000b970
  %v4_1000b978 = sub nsw i32 32, %v1_1000b970
  %v5_1000b978 = lshr i32 -2, %v4_1000b978
  %v6_1000b978 = or i32 %v5_1000b978, %v3_1000b978
  %v2_1000b97c = and i32 %v6_1000b978, %v4_1000b974
  store i32 %v2_1000b97c, i32* %v3_1000b974, align 4
  ret i32 0
}

define i32 @function_1000b98c() local_unnamed_addr {
dec_label_pc_1000b98c:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_1000b98c = load i32, i32* @r3, align 4
  %v3_1000b98c = icmp eq i32 %v0_1000b98c, 0
  br i1 %v3_1000b98c, label %dec_label_pc_1000b9a4, label %dec_label_pc_1000b9a8

dec_label_pc_1000b9a4:                            ; preds = %dec_label_pc_1000b98c
  br label %dec_label_pc_1000b9a8

dec_label_pc_1000b9a8:                            ; preds = %dec_label_pc_1000b98c, %dec_label_pc_1000b9a4
  %v0_1000b9b8 = phi i32 [ 1, %dec_label_pc_1000b9a4 ], [ %v0_1000b98c, %dec_label_pc_1000b98c ]
  %v3_1000b9ac = icmp ugt i32 %v0_1000b9b8, -8
  br i1 %v3_1000b9ac, label %dec_label_pc_1000babc, label %dec_label_pc_1000b9b4

dec_label_pc_1000b9b4:                            ; preds = %dec_label_pc_1000b9a8
  %v1_1000b9b8 = add i32 %v0_1000b9b8, 4
  store i32 ptrtoint (i32* @global_var_1001e264.492 to i32), i32* @r29, align 4
  store i32 %v1_1000b9b8, i32* %stack_var_-40, align 4
  %v0_1000b9c8 = call i32 @function_1000c4e8()
  %v2_1000b9d0 = ptrtoint i32* %stack_var_-40 to i32
  %v3_1000b9d8 = call i32 @function_1000bd84(i32* inttoptr (i32 268558704 to i32*), i32 %v2_1000b9d0)
  store i32 %v3_1000b9d8, i32* %r31.global-to-local, align 4
  %v0_1000b9e4 = call i32 @function_1000c4e8()
  %v3_1000b9e8 = icmp eq i32 %v3_1000b9d8, 0
  br i1 %v3_1000b9e8, label %dec_label_pc_1000b9f0, label %dec_label_pc_1000baa0.thread

dec_label_pc_1000baa0.thread:                     ; preds = %dec_label_pc_1000b9b4
  br label %dec_label_pc_1000bab4

dec_label_pc_1000b9f0:                            ; preds = %dec_label_pc_1000b9b4
  %v3_1000b9f4 = load i32, i32* @global_var_1001e1c8.495, align 4
  store i32 %v3_1000b9f4, i32* %r31.global-to-local, align 4
  %v3_1000b9f8 = load i32, i32* %stack_var_-40, align 4
  %v2_1000b9fc = icmp ult i32 %v3_1000b9f8, %v3_1000b9f4
  br i1 %v2_1000b9fc, label %dec_label_pc_1000ba14, label %dec_label_pc_1000ba04

dec_label_pc_1000ba04:                            ; preds = %dec_label_pc_1000b9f0
  %v1_1000ba08 = sub i32 0, %v3_1000b9f4
  %v2_1000ba04 = add i32 %v3_1000b9f4, -1
  %v1_1000ba0c = add i32 %v2_1000ba04, %v3_1000b9f8
  %v2_1000ba10 = and i32 %v1_1000ba0c, %v1_1000ba08
  store i32 %v2_1000ba10, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000ba14

dec_label_pc_1000ba14:                            ; preds = %dec_label_pc_1000b9f0, %dec_label_pc_1000ba04
  %v0_1000ba20 = call i32 @function_1000c4e8()
  %v0_1000ba24 = load i32, i32* %r31.global-to-local, align 4
  store i32 268483116, i32* @lr, align 4
  %v1_1000ba28 = call i32 @function_1000cd08(i32 %v0_1000ba24)
  %v3_1000ba2c = icmp eq i32 %v1_1000ba28, -1
  br i1 %v3_1000ba2c, label %dec_label_pc_1000ba4c, label %dec_label_pc_1000ba34

dec_label_pc_1000ba34:                            ; preds = %dec_label_pc_1000ba14
  %v1_1000ba34 = add i32 %v1_1000ba28, 3
  %v1_1000ba38 = call i32 @__asm_rlwinm(i32 %v1_1000ba34, i32 0, i32 0, i32 29)
  store i32 %v1_1000ba38, i32* @r30, align 4
  %v4_1000ba3c = icmp eq i32 %v1_1000ba38, %v1_1000ba28
  br i1 %v4_1000ba3c, label %dec_label_pc_1000ba4c, label %dec_label_pc_1000ba44

dec_label_pc_1000ba44:                            ; preds = %dec_label_pc_1000ba34
  %v2_1000ba44 = sub i32 %v1_1000ba38, %v1_1000ba28
  store i32 268483148, i32* @lr, align 4
  %v1_1000ba48 = call i32 @function_1000cd08(i32 %v2_1000ba44)
  br label %dec_label_pc_1000ba4c

dec_label_pc_1000ba4c:                            ; preds = %dec_label_pc_1000ba34, %dec_label_pc_1000ba14, %dec_label_pc_1000ba44
  %v0_1000ba54 = call i32 @function_1000c4e8()
  %v0_1000ba58 = load i32, i32* @r30, align 4
  %v3_1000ba58 = icmp eq i32 %v0_1000ba58, -1
  br i1 %v3_1000ba58, label %dec_label_pc_1000babc, label %dec_label_pc_1000baa0

dec_label_pc_1000baa0:                            ; preds = %dec_label_pc_1000ba4c
  store i32 ptrtoint (i32* @global_var_1001e264.492 to i32), i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_1001e170 to i32), i32* @r29, align 4
  %v0_1000ba74 = call i32 @function_1000c4e8()
  %v0_1000ba78 = load i32, i32* @r31, align 4
  %v0_1000ba7c = load i32, i32* @r30, align 4
  %v0_1000ba80 = load i32, i32* @r29, align 4
  store i32 268483208, i32* @lr, align 4
  %v3_1000ba84 = inttoptr i32 %v0_1000ba80 to i32*
  %v4_1000ba84 = call i32 @function_1000bf08(i32* %v3_1000ba84, i32 %v0_1000ba7c, i32 %v0_1000ba78)
  %v0_1000ba88 = load i32, i32* @r29, align 4
  %v2_1000ba90 = inttoptr i32 %v0_1000ba88 to i32*
  %v3_1000ba90 = call i32 @function_1000bd84(i32* %v2_1000ba90, i32 %v2_1000b9d0)
  store i32 %v3_1000ba90, i32* %r31.global-to-local, align 4
  %v0_1000ba9c = call i32 @function_1000c4e8()
  %v3_1000baa0 = icmp eq i32 %v3_1000ba90, 0
  br i1 %v3_1000baa0, label %dec_label_pc_1000bab4.thread, label %dec_label_pc_1000bab4

dec_label_pc_1000bab4.thread:                     ; preds = %dec_label_pc_1000baa0
  br label %dec_label_pc_1000babc

dec_label_pc_1000bab4:                            ; preds = %dec_label_pc_1000baa0, %dec_label_pc_1000baa0.thread
  %v0_1000bab4.pr6 = phi i32 [ %v3_1000b9d8, %dec_label_pc_1000baa0.thread ], [ %v3_1000ba90, %dec_label_pc_1000baa0 ]
  %v3_1000baa8 = load i32, i32* %stack_var_-40, align 4
  %v2_1000baac = inttoptr i32 %v0_1000bab4.pr6 to i32*
  store i32 %v3_1000baa8, i32* %v2_1000baac, align 4
  %v0_1000bab0 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000bab0 = add i32 %v0_1000bab0, 4
  store i32 %v1_1000bab0, i32* @r31, align 4
  %v3_1000bab4 = icmp eq i32 %v1_1000bab0, 0
  br i1 %v3_1000bab4, label %dec_label_pc_1000babc, label %dec_label_pc_1000bacc

dec_label_pc_1000babc:                            ; preds = %dec_label_pc_1000bab4.thread, %dec_label_pc_1000bab4, %dec_label_pc_1000ba4c, %dec_label_pc_1000b9a8
  %v0_1000babc = call i32 @function_1000b0a8()
  %v2_1000bac4 = inttoptr i32 %v0_1000babc to i32*
  store i32 12, i32* %v2_1000bac4, align 4
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_1000bacc

dec_label_pc_1000bacc:                            ; preds = %dec_label_pc_1000bab4, %dec_label_pc_1000babc
  %v0_1000bad0 = phi i32 [ %v1_1000bab0, %dec_label_pc_1000bab4 ], [ 0, %dec_label_pc_1000babc ]
  ret i32 %v0_1000bad0

; uselistorder directives
  uselistorder i32 %v1_1000bab0, { 1, 0, 2 }
  uselistorder i32 %v1_1000ba38, { 1, 0, 2 }
  uselistorder i32 %v1_1000ba28, { 2, 0, 1, 3 }
  uselistorder i32 %v3_1000b9f4, { 1, 0, 2, 3 }
  uselistorder i32 %v3_1000b9d8, { 1, 0, 2 }
  uselistorder i32* %stack_var_-40, { 0, 1, 3, 2 }
  uselistorder i32* %r31.global-to-local, { 4, 0, 2, 1, 3, 5 }
  uselistorder label %dec_label_pc_1000bacc, { 1, 0 }
  uselistorder label %dec_label_pc_1000babc, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1000ba4c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000ba14, { 1, 0 }
  uselistorder label %dec_label_pc_1000b9a8, { 1, 0 }
}

define i32 @function_1000bae4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000bae4:
  %v3_1000bae4 = icmp eq i32 %arg1, 0
  %v2_1000baf4 = mul i32 %arg2, %arg1
  store i32 %v2_1000baf4, i32* @r31, align 4
  br i1 %v3_1000bae4, label %dec_label_pc_1000bb20, label %dec_label_pc_1000bb00

dec_label_pc_1000bb00:                            ; preds = %dec_label_pc_1000bae4
  %v2_1000bb00 = udiv i32 %v2_1000baf4, %arg1
  store i32 0, i32* @r30, align 4
  %v4_1000bb08 = icmp eq i32 %v2_1000bb00, %arg2
  br i1 %v4_1000bb08, label %dec_label_pc_1000bb20, label %dec_label_pc_1000bb10

dec_label_pc_1000bb10:                            ; preds = %dec_label_pc_1000bb00
  %v0_1000bb10 = call i32 @function_1000b0a8()
  %v2_1000bb18 = inttoptr i32 %v0_1000bb10 to i32*
  store i32 12, i32* %v2_1000bb18, align 4
  br label %dec_label_pc_1000bb3c

dec_label_pc_1000bb20:                            ; preds = %dec_label_pc_1000bb00, %dec_label_pc_1000bae4
  store i32 %v2_1000baf4, i32* @r3, align 4
  store i32 268483368, i32* @lr, align 4
  %v0_1000bb24 = call i32 @function_1000b98c()
  %v0_1000bb28 = load i32, i32* @r31, align 4
  store i32 %v0_1000bb24, i32* @r30, align 4
  %v3_1000bb2c = icmp eq i32 %v0_1000bb24, 0
  br i1 %v3_1000bb2c, label %dec_label_pc_1000bb3c, label %dec_label_pc_1000bb38

dec_label_pc_1000bb38:                            ; preds = %dec_label_pc_1000bb20
  store i32 268483388, i32* @lr, align 4
  %v3_1000bb38 = call i32 @function_1000b22c(i32 0, i32 %v0_1000bb28, i32 %v0_1000bb28)
  br label %dec_label_pc_1000bb3c

dec_label_pc_1000bb3c:                            ; preds = %dec_label_pc_1000bb20, %dec_label_pc_1000bb10, %dec_label_pc_1000bb38
  %v0_1000bb40 = load i32, i32* @r30, align 4
  ret i32 %v0_1000bb40

; uselistorder directives
  uselistorder i32 %v0_1000bb28, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000bb3c, { 2, 0, 1 }
}

define i32 @function_1000bb54() local_unnamed_addr {
dec_label_pc_1000bb54:
  %v0_1000bb54 = load i32, i32* @r3, align 4
  %v3_1000bb54 = icmp eq i32 %v0_1000bb54, 0
  br i1 %v3_1000bb54, label %dec_label_pc_1000bc40, label %dec_label_pc_1000bb6c

dec_label_pc_1000bb6c:                            ; preds = %dec_label_pc_1000bb54
  %v1_1000bb70 = add i32 %v0_1000bb54, -4
  %v2_1000bb70 = inttoptr i32 %v1_1000bb70 to i32*
  %v3_1000bb70 = load i32, i32* %v2_1000bb70, align 4
  store i32 %v3_1000bb70, i32* @r28, align 4
  store i32 268566528, i32* @r26, align 4
  %v0_1000bb84 = call i32 @function_1000c4e8()
  %v0_1000bb8c = load i32, i32* @r28, align 4
  store i32 268483480, i32* @lr, align 4
  %v4_1000bb94 = call i32 @function_1000bf08(i32* nonnull @global_var_1001e170, i32 %v1_1000bb70, i32 %v0_1000bb8c)
  %v3_1000bb9c = load i32, i32* @global_var_1001e1c8.495, align 4
  store i32 %v4_1000bb94, i32* @r29, align 4
  %v1_1000bba4 = inttoptr i32 %v4_1000bb94 to i32*
  %v2_1000bba4 = load i32, i32* %v1_1000bba4, align 4
  store i32 %v2_1000bba4, i32* @r27, align 4
  %v1_1000bba8 = mul i32 %v3_1000bb9c, 8
  %v2_1000bbac = icmp ult i32 %v2_1000bba4, %v1_1000bba8
  br i1 %v2_1000bbac, label %dec_label_pc_1000bbe0, label %dec_label_pc_1000bbb4

dec_label_pc_1000bbb4:                            ; preds = %dec_label_pc_1000bb6c
  store i32 ptrtoint (i32* @global_var_1001e4ac.496 to i32), i32* @r28, align 4
  %v0_1000bbc4 = call i32 @function_1000c4e8()
  store i32 268483536, i32* @lr, align 4
  %v1_1000bbcc = call i32 @function_1000cd08(i32 0)
  %v0_1000bbd0 = load i32, i32* @r31, align 4
  %v4_1000bbd0 = icmp eq i32 %v0_1000bbd0, %v1_1000bbcc
  br i1 %v4_1000bbd0, label %dec_label_pc_1000bbe8, label %dec_label_pc_1000bbd8

dec_label_pc_1000bbd8:                            ; preds = %dec_label_pc_1000bbb4
  %v0_1000bbdc = call i32 @function_1000c4e8()
  br label %dec_label_pc_1000bbe0

dec_label_pc_1000bbe0:                            ; preds = %dec_label_pc_1000bb6c, %dec_label_pc_1000bbd8
  br label %dec_label_pc_1000bc3c

dec_label_pc_1000bbe8:                            ; preds = %dec_label_pc_1000bbb4
  %v0_1000bbe8 = load i32, i32* @r29, align 4
  %v1_1000bbe8 = add i32 %v0_1000bbe8, 4
  %v2_1000bbe8 = inttoptr i32 %v1_1000bbe8 to i32*
  %v3_1000bbe8 = load i32, i32* %v2_1000bbe8, align 4
  %v3_1000bbec = icmp eq i32 %v3_1000bbe8, 0
  br i1 %v3_1000bbec, label %dec_label_pc_1000bbfc, label %dec_label_pc_1000bbf4

dec_label_pc_1000bbf4:                            ; preds = %dec_label_pc_1000bbe8
  %v1_1000bbf4 = add i32 %v0_1000bbe8, 8
  %v2_1000bbf4 = inttoptr i32 %v1_1000bbf4 to i32*
  %v3_1000bbf4 = load i32, i32* %v2_1000bbf4, align 4
  %v2_1000bbf8 = add i32 %v3_1000bbe8, 8
  %v3_1000bbf8 = inttoptr i32 %v2_1000bbf8 to i32*
  store i32 %v3_1000bbf4, i32* %v3_1000bbf8, align 4
  %v0_1000bbfc.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000bbfc

dec_label_pc_1000bbfc:                            ; preds = %dec_label_pc_1000bbe8, %dec_label_pc_1000bbf4
  %v0_1000bbfc = phi i32 [ %v0_1000bbe8, %dec_label_pc_1000bbe8 ], [ %v0_1000bbfc.pre, %dec_label_pc_1000bbf4 ]
  %v1_1000bbfc = add i32 %v0_1000bbfc, 8
  %v2_1000bbfc = inttoptr i32 %v1_1000bbfc to i32*
  %v3_1000bbfc = load i32, i32* %v2_1000bbfc, align 4
  %v1_1000bc00 = add i32 %v0_1000bbfc, 4
  %v2_1000bc00 = inttoptr i32 %v1_1000bc00 to i32*
  %v3_1000bc00 = load i32, i32* %v2_1000bc00, align 4
  %v3_1000bc04 = icmp eq i32 %v3_1000bbfc, 0
  br i1 %v3_1000bc04, label %dec_label_pc_1000bc14, label %dec_label_pc_1000bc0c

dec_label_pc_1000bc0c:                            ; preds = %dec_label_pc_1000bbfc
  %v2_1000bc0c = add i32 %v3_1000bbfc, 4
  %v3_1000bc0c = inttoptr i32 %v2_1000bc0c to i32*
  store i32 %v3_1000bc00, i32* %v3_1000bc0c, align 4
  br label %dec_label_pc_1000bc18

dec_label_pc_1000bc14:                            ; preds = %dec_label_pc_1000bbfc
  store i32 %v3_1000bc00, i32* @global_var_1001e170, align 4
  br label %dec_label_pc_1000bc18

dec_label_pc_1000bc18:                            ; preds = %dec_label_pc_1000bc0c, %dec_label_pc_1000bc14
  %v0_1000bc20 = call i32 @function_1000c4e8()
  %v0_1000bc24 = load i32, i32* @r27, align 4
  %v1_1000bc24 = load i32, i32* @r29, align 4
  %v0_1000bc2c = load i32, i32* @r31, align 4
  %v2_1000bc24 = sub i32 12, %v0_1000bc24
  %v1_1000bc28 = add i32 %v2_1000bc24, %v1_1000bc24
  %v2_1000bc2c = sub i32 %v1_1000bc28, %v0_1000bc2c
  store i32 268483636, i32* @lr, align 4
  %v1_1000bc30 = call i32 @function_1000cd08(i32 %v2_1000bc2c)
  br label %dec_label_pc_1000bc3c

dec_label_pc_1000bc3c:                            ; preds = %dec_label_pc_1000bbe0, %dec_label_pc_1000bc18
  %v0_1000bc3c = call i32 @function_1000c4e8()
  br label %dec_label_pc_1000bc40

dec_label_pc_1000bc40:                            ; preds = %dec_label_pc_1000bb54, %dec_label_pc_1000bc3c
  %.0 = phi i32 [ undef, %dec_label_pc_1000bb54 ], [ %v0_1000bc3c, %dec_label_pc_1000bc3c ]
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v0_1000bbfc, { 1, 0 }
  uselistorder i32 undef, { 0, 2, 1, 3 }
  uselistorder i32 (i32)* @function_1000cd08, { 3, 2, 1, 0 }
  uselistorder i32* @r26, { 33, 24, 0, 1, 2, 3, 4, 5, 6, 7, 25, 26, 27, 28, 29, 30, 31, 32, 8, 10, 11, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 34, 35, 36, 37, 38, 39 }
  uselistorder label %dec_label_pc_1000bc40, { 1, 0 }
  uselistorder label %dec_label_pc_1000bc3c, { 1, 0 }
  uselistorder label %dec_label_pc_1000bc18, { 1, 0 }
  uselistorder label %dec_label_pc_1000bbfc, { 1, 0 }
  uselistorder label %dec_label_pc_1000bbe0, { 1, 0 }
}

define i32 @function_1000bc54(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000bc54:
  %r27.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %v3_1000bc54 = icmp eq i32 %arg2, 0
  store i32 %arg1, i32* @r28, align 4
  br i1 %v3_1000bc54, label %dec_label_pc_1000bc70, label %dec_label_pc_1000bc7c

dec_label_pc_1000bc70:                            ; preds = %dec_label_pc_1000bc54
  store i32 ptrtoint ([3 x i8]* @global_var_1000bc74.500 to i32), i32* @lr, align 4
  %v0_1000bc70 = call i32 @function_1000bb54()
  br label %dec_label_pc_1000bc88

dec_label_pc_1000bc7c:                            ; preds = %dec_label_pc_1000bc54
  %v3_1000bc7c = icmp eq i32 %arg1, 0
  br i1 %v3_1000bc7c, label %dec_label_pc_1000bc88, label %dec_label_pc_1000bc94

dec_label_pc_1000bc88:                            ; preds = %dec_label_pc_1000bc7c, %dec_label_pc_1000bc70
  %storemerge = phi i32 [ 0, %dec_label_pc_1000bc70 ], [ %arg2, %dec_label_pc_1000bc7c ]
  store i32 %storemerge, i32* @r3, align 4
  store i32 268483724, i32* @lr, align 4
  %v0_1000bc88 = call i32 @function_1000b98c()
  store i32 %v0_1000bc88, i32* @r28, align 4
  br label %dec_label_pc_1000bd6c

dec_label_pc_1000bc94:                            ; preds = %dec_label_pc_1000bc7c
  %v1_1000bc94 = add i32 %arg2, 7
  %v1_1000bc98 = add i32 %arg1, -4
  store i32 %v1_1000bc98, i32* %r27.global-to-local, align 4
  %v1_1000bc9c = call i32 @__asm_rlwinm(i32 %v1_1000bc94, i32 0, i32 0, i32 29)
  store i32 %v1_1000bc9c, i32* @r31, align 4
  %v2_1000bca0 = inttoptr i32 %v1_1000bc98 to i32*
  %v3_1000bca0 = load i32, i32* %v2_1000bca0, align 4
  store i32 %v3_1000bca0, i32* @r30, align 4
  %v2_1000bca4 = icmp ugt i32 %v1_1000bc9c, 11
  br i1 %v2_1000bca4, label %dec_label_pc_1000bcb0, label %dec_label_pc_1000bcac

dec_label_pc_1000bcac:                            ; preds = %dec_label_pc_1000bc94
  store i32 12, i32* @r31, align 4
  br label %dec_label_pc_1000bcb0

dec_label_pc_1000bcb0:                            ; preds = %dec_label_pc_1000bc94, %dec_label_pc_1000bcac
  %v0_1000bd30 = phi i32 [ %v1_1000bc9c, %dec_label_pc_1000bc94 ], [ 12, %dec_label_pc_1000bcac ]
  %v3_1000bcb0 = icmp ugt i32 %v0_1000bd30, %v3_1000bca0
  br i1 %v3_1000bcb0, label %dec_label_pc_1000bcb8, label %dec_label_pc_1000bd30

dec_label_pc_1000bcb8:                            ; preds = %dec_label_pc_1000bcb0
  store i32 ptrtoint (i32* @global_var_1001e264.492 to i32), i32* @r29, align 4
  %v0_1000bcc4 = call i32 @function_1000c4e8()
  %v0_1000bccc = load i32, i32* %r27.global-to-local, align 4
  %v1_1000bccc = load i32, i32* @r30, align 4
  %v2_1000bccc = add i32 %v1_1000bccc, %v0_1000bccc
  %v1_1000bcd0 = load i32, i32* @r31, align 4
  %v2_1000bcd0 = sub i32 %v1_1000bcd0, %v1_1000bccc
  %v4_1000bcd8 = call i32 @function_1000be24(i32* nonnull @global_var_1001e170, i32 %v2_1000bccc, i32 %v2_1000bcd0)
  store i32 %v4_1000bcd8, i32* %r27.global-to-local, align 4
  %v0_1000bce4 = call i32 @function_1000c4e8()
  %v3_1000bce8 = icmp eq i32 %v4_1000bcd8, 0
  br i1 %v3_1000bce8, label %dec_label_pc_1000bcfc, label %dec_label_pc_1000bcf0

dec_label_pc_1000bcf0:                            ; preds = %dec_label_pc_1000bcb8
  %v0_1000bcf0 = load i32, i32* @r30, align 4
  %v2_1000bcf0 = add i32 %v0_1000bcf0, %v4_1000bcd8
  %v1_1000bcf4 = load i32, i32* @r28, align 4
  %v2_1000bcf4 = add i32 %v1_1000bcf4, -4
  %v3_1000bcf4 = inttoptr i32 %v2_1000bcf4 to i32*
  store i32 %v2_1000bcf0, i32* %v3_1000bcf4, align 4
  br label %dec_label_pc_1000bd6c

dec_label_pc_1000bcfc:                            ; preds = %dec_label_pc_1000bcb8
  %v0_1000bcfc = load i32, i32* @r31, align 4
  %v1_1000bcfc = add i32 %v0_1000bcfc, -4
  store i32 %v1_1000bcfc, i32* @r3, align 4
  store i32 268483844, i32* @lr, align 4
  %v0_1000bd00 = call i32 @function_1000b98c()
  store i32 %v0_1000bd00, i32* @r3, align 4
  store i32 %v0_1000bd00, i32* @r31, align 4
  %v3_1000bd04 = icmp eq i32 %v0_1000bd00, 0
  br i1 %v3_1000bd04, label %dec_label_pc_1000bd0c, label %dec_label_pc_1000bd14

dec_label_pc_1000bd0c:                            ; preds = %dec_label_pc_1000bcfc
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_1000bd6c

dec_label_pc_1000bd14:                            ; preds = %dec_label_pc_1000bcfc
  %v0_1000bd14 = load i32, i32* @r28, align 4
  store i32 %v0_1000bd14, i32* @r4, align 4
  %v0_1000bd18 = load i32, i32* @r30, align 4
  %v1_1000bd18 = add i32 %v0_1000bd18, -4
  store i32 %v1_1000bd18, i32* @r5, align 4
  store i32 268483872, i32* @lr, align 4
  %v0_1000bd1c = call i32 @function_1000b0ec()
  %v0_1000bd20 = load i32, i32* @r28, align 4
  store i32 %v0_1000bd20, i32* @r3, align 4
  store i32 268483880, i32* @lr, align 4
  %v0_1000bd24 = call i32 @function_1000bb54()
  %v0_1000bd28 = load i32, i32* @r31, align 4
  store i32 %v0_1000bd28, i32* @r28, align 4
  br label %dec_label_pc_1000bd6c

dec_label_pc_1000bd30:                            ; preds = %dec_label_pc_1000bcb0
  %v1_1000bd30 = add i32 %v0_1000bd30, 28
  %v3_1000bd34 = icmp ugt i32 %v1_1000bd30, %v3_1000bca0
  br i1 %v3_1000bd34, label %dec_label_pc_1000bd6c, label %dec_label_pc_1000bd3c

dec_label_pc_1000bd3c:                            ; preds = %dec_label_pc_1000bd30
  store i32 ptrtoint (i32* @global_var_1001e264.492 to i32), i32* @r29, align 4
  %v0_1000bd48 = call i32 @function_1000c4e8()
  %v0_1000bd50 = load i32, i32* %r27.global-to-local, align 4
  %v1_1000bd50 = load i32, i32* @r31, align 4
  %v2_1000bd50 = add i32 %v1_1000bd50, %v0_1000bd50
  %v1_1000bd54 = load i32, i32* @r30, align 4
  %v2_1000bd54 = sub i32 %v1_1000bd54, %v1_1000bd50
  store i32 268483936, i32* @lr, align 4
  %v4_1000bd5c = call i32 @function_1000bf08(i32* nonnull @global_var_1001e170, i32 %v2_1000bd50, i32 %v2_1000bd54)
  %v0_1000bd64 = call i32 @function_1000c4e8()
  %v0_1000bd68 = load i32, i32* @r31, align 4
  %v1_1000bd68 = load i32, i32* @r28, align 4
  %v2_1000bd68 = add i32 %v1_1000bd68, -4
  %v3_1000bd68 = inttoptr i32 %v2_1000bd68 to i32*
  store i32 %v0_1000bd68, i32* %v3_1000bd68, align 4
  br label %dec_label_pc_1000bd6c

dec_label_pc_1000bd6c:                            ; preds = %dec_label_pc_1000bd30, %dec_label_pc_1000bd14, %dec_label_pc_1000bd0c, %dec_label_pc_1000bcf0, %dec_label_pc_1000bc88, %dec_label_pc_1000bd3c
  %v0_1000bd70 = load i32, i32* @r28, align 4
  ret i32 %v0_1000bd70

; uselistorder directives
  uselistorder i32 %v1_1000bd50, { 1, 0 }
  uselistorder i32 %v4_1000bcd8, { 1, 0, 2 }
  uselistorder i32 %v1_1000bccc, { 1, 0 }
  uselistorder i32* %r27.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* @global_var_1001e170, { 0, 1, 3, 2, 4 }
  uselistorder i32 ()* @function_1000b98c, { 4, 3, 0, 6, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 2, 1, 7, 5 }
  uselistorder i32 ()* @function_1000bb54, { 4, 3, 7, 6, 5, 11, 10, 9, 8, 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 2, 0 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1000bd6c, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_1000bcb0, { 1, 0 }
}

define i32 @function_1000bd84(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000bd84:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v1_1000bd84 = inttoptr i32 %arg2 to i32*
  %v2_1000bd84 = load i32, i32* %v1_1000bd84, align 4
  %v1_1000bd88 = add i32 %v2_1000bd84, 3
  store i32 %v1_1000bd88, i32* %r9.global-to-local, align 4
  %v1_1000bd8c = call i32 @__asm_rlwinm(i32 %v1_1000bd88, i32 0, i32 0, i32 29)
  %v2_1000bd90 = icmp ugt i32 %v1_1000bd8c, 11
  br i1 %v2_1000bd90, label %dec_label_pc_1000be14.preheader, label %dec_label_pc_1000bd98

dec_label_pc_1000bd98:                            ; preds = %dec_label_pc_1000bd84
  br label %dec_label_pc_1000be14.preheader

dec_label_pc_1000be14.preheader:                  ; preds = %dec_label_pc_1000bd84, %dec_label_pc_1000bd98
  %storemerge20 = phi i32 [ 12, %dec_label_pc_1000bd98 ], [ %v1_1000bd8c, %dec_label_pc_1000bd84 ]
  %v0_1000bdf8 = phi i32 [ 12, %dec_label_pc_1000bd98 ], [ %v1_1000bd8c, %dec_label_pc_1000bd84 ]
  store i32 %storemerge20, i32* %r11.global-to-local, align 4
  %storemerge2 = load i32, i32* %arg1, align 4
  store i32 %storemerge2, i32* %r9.global-to-local, align 4
  %v3_1000be145 = icmp eq i32 %storemerge2, 0
  br i1 %v3_1000be145, label %dec_label_pc_1000be1c, label %dec_label_pc_1000bda4

dec_label_pc_1000bda4:                            ; preds = %dec_label_pc_1000be14.preheader, %dec_label_pc_1000be10
  %v0_1000be10 = phi i32 [ %storemerge, %dec_label_pc_1000be10 ], [ %storemerge2, %dec_label_pc_1000be14.preheader ]
  %v1_1000bda4 = inttoptr i32 %v0_1000be10 to i32*
  %v2_1000bda4 = load i32, i32* %v1_1000bda4, align 4
  store i32 %v2_1000bda4, i32* %r10.global-to-local, align 4
  %v2_1000bda8 = icmp ult i32 %v2_1000bda4, %v0_1000bdf8
  br i1 %v2_1000bda8, label %dec_label_pc_1000be10, label %dec_label_pc_1000bdb0

dec_label_pc_1000bdb0:                            ; preds = %dec_label_pc_1000bda4
  %v1_1000bdb0 = add i32 %v0_1000bdf8, 44
  %v2_1000bdb4 = icmp ult i32 %v2_1000bda4, %v1_1000bdb0
  br i1 %v2_1000bdb4, label %dec_label_pc_1000bdbc, label %dec_label_pc_1000bdf8

dec_label_pc_1000bdbc:                            ; preds = %dec_label_pc_1000bdb0
  %v1_1000bdbc = add i32 %v0_1000be10, 4
  %v2_1000bdbc = inttoptr i32 %v1_1000bdbc to i32*
  %v3_1000bdbc = load i32, i32* %v2_1000bdbc, align 4
  store i32 %v3_1000bdbc, i32* %r11.global-to-local, align 4
  %v3_1000bdc0 = icmp eq i32 %v3_1000bdbc, 0
  br i1 %v3_1000bdc0, label %dec_label_pc_1000bdd0, label %dec_label_pc_1000bdc8

dec_label_pc_1000bdc8:                            ; preds = %dec_label_pc_1000bdbc
  %v1_1000bdc8 = add i32 %v0_1000be10, 8
  %v2_1000bdc8 = inttoptr i32 %v1_1000bdc8 to i32*
  %v3_1000bdc8 = load i32, i32* %v2_1000bdc8, align 4
  %v2_1000bdcc = add i32 %v3_1000bdbc, 8
  %v3_1000bdcc = inttoptr i32 %v2_1000bdcc to i32*
  store i32 %v3_1000bdc8, i32* %v3_1000bdcc, align 4
  %v0_1000bdd0.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_1000bdec.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000bdd0

dec_label_pc_1000bdd0:                            ; preds = %dec_label_pc_1000bdbc, %dec_label_pc_1000bdc8
  %v0_1000bdec = phi i32 [ %v2_1000bda4, %dec_label_pc_1000bdbc ], [ %v0_1000bdec.pre, %dec_label_pc_1000bdc8 ]
  %v0_1000bdd0 = phi i32 [ %v0_1000be10, %dec_label_pc_1000bdbc ], [ %v0_1000bdd0.pre, %dec_label_pc_1000bdc8 ]
  %v1_1000bdd0 = add i32 %v0_1000bdd0, 8
  %v2_1000bdd0 = inttoptr i32 %v1_1000bdd0 to i32*
  %v3_1000bdd0 = load i32, i32* %v2_1000bdd0, align 4
  %v1_1000bdd4 = add i32 %v0_1000bdd0, 4
  %v2_1000bdd4 = inttoptr i32 %v1_1000bdd4 to i32*
  %v3_1000bdd4 = load i32, i32* %v2_1000bdd4, align 4
  %v3_1000bdd8 = icmp eq i32 %v3_1000bdd0, 0
  store i32 %v0_1000bdec, i32* %r11.global-to-local, align 4
  br i1 %v3_1000bdd8, label %dec_label_pc_1000bdec, label %dec_label_pc_1000bde0

dec_label_pc_1000bde0:                            ; preds = %dec_label_pc_1000bdd0
  %v2_1000bde4 = add i32 %v3_1000bdd0, 4
  %v3_1000bde4 = inttoptr i32 %v2_1000bde4 to i32*
  store i32 %v3_1000bdd4, i32* %v3_1000bde4, align 4
  br label %dec_label_pc_1000be00

dec_label_pc_1000bdec:                            ; preds = %dec_label_pc_1000bdd0
  store i32 %v3_1000bdd4, i32* %arg1, align 4
  br label %dec_label_pc_1000be00

dec_label_pc_1000bdf8:                            ; preds = %dec_label_pc_1000bdb0
  %v2_1000bdf8 = sub i32 %v2_1000bda4, %v0_1000bdf8
  store i32 %v2_1000bdf8, i32* %v1_1000bda4, align 4
  br label %dec_label_pc_1000be00

dec_label_pc_1000be00:                            ; preds = %dec_label_pc_1000bdec, %dec_label_pc_1000bde0, %dec_label_pc_1000bdf8
  %v0_1000be00 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000be00 = load i32, i32* %r9.global-to-local, align 4
  %v2_1000be00 = sub i32 %v1_1000be00, %v0_1000be00
  store i32 %v2_1000be00, i32* %r9.global-to-local, align 4
  %v0_1000be04 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000be04, i32* %v1_1000bd84, align 4
  %v0_1000be08 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000be08 = add i32 %v0_1000be08, 12
  ret i32 %v1_1000be08

dec_label_pc_1000be10:                            ; preds = %dec_label_pc_1000bda4
  %v1_1000be10 = add i32 %v0_1000be10, 4
  %storemerge.in = inttoptr i32 %v1_1000be10 to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v3_1000be14 = icmp eq i32 %storemerge, 0
  br i1 %v3_1000be14, label %dec_label_pc_1000be14.dec_label_pc_1000be1c_crit_edge, label %dec_label_pc_1000bda4

dec_label_pc_1000be14.dec_label_pc_1000be1c_crit_edge: ; preds = %dec_label_pc_1000be10
  br label %dec_label_pc_1000be1c

dec_label_pc_1000be1c:                            ; preds = %dec_label_pc_1000be14.dec_label_pc_1000be1c_crit_edge, %dec_label_pc_1000be14.preheader
  ret i32 0

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_1000bdd0, { 1, 0 }
  uselistorder i32 %v2_1000bda4, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_1000be10, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_1000bdf8, { 1, 2, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 4, 5, 1, 2, 3, 6 }
  uselistorder i32* %r11.global-to-local, { 3, 1, 2, 0 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2 }
  uselistorder i32* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1000be00, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000bdd0, { 1, 0 }
  uselistorder label %dec_label_pc_1000bda4, { 1, 0 }
  uselistorder label %dec_label_pc_1000be14.preheader, { 1, 0 }
}

define i32 @function_1000be24(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000be24:
  %r11.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_1000be24 = load i32, i32* %arg1, align 4
  store i32 %v2_1000be24, i32* %r11.global-to-local, align 4
  store i32 %tmp, i32* %r8.global-to-local, align 4
  %v1_1000be2c = add i32 %arg3, 3
  %v3_1000beb03 = icmp eq i32 %v2_1000be24, 0
  br i1 %v3_1000beb03, label %dec_label_pc_1000beb8, label %dec_label_pc_1000be34

dec_label_pc_1000be34:                            ; preds = %dec_label_pc_1000be24, %dec_label_pc_1000beac
  %v0_1000beac = phi i32 [ %v3_1000beac, %dec_label_pc_1000beac ], [ %v2_1000be24, %dec_label_pc_1000be24 ]
  %v1_1000be34 = inttoptr i32 %v0_1000beac to i32*
  %v2_1000be34 = load i32, i32* %v1_1000be34, align 4
  %v2_1000be38 = sub i32 %v0_1000beac, %v2_1000be34
  %v1_1000be3c = add i32 %v2_1000be38, 12
  %v3_1000be40 = icmp ugt i32 %v1_1000be3c, %arg2
  br i1 %v3_1000be40, label %dec_label_pc_1000beac, label %dec_label_pc_1000be48

dec_label_pc_1000be48:                            ; preds = %dec_label_pc_1000be34
  %v4_1000be40 = icmp eq i32 %v1_1000be3c, %arg2
  br i1 %v4_1000be40, label %dec_label_pc_1000be50, label %dec_label_pc_1000beb8

dec_label_pc_1000be50:                            ; preds = %dec_label_pc_1000be48
  %v1_1000be50 = call i32 @__asm_rlwinm(i32 %v1_1000be2c, i32 0, i32 0, i32 29)
  %v2_1000be54 = icmp ult i32 %v2_1000be34, %v1_1000be50
  br i1 %v2_1000be54, label %dec_label_pc_1000beb8, label %dec_label_pc_1000be5c

dec_label_pc_1000be5c:                            ; preds = %dec_label_pc_1000be50
  %v1_1000be5c = add i32 %v1_1000be50, 44
  %v2_1000be60 = icmp ult i32 %v2_1000be34, %v1_1000be5c
  br i1 %v2_1000be60, label %dec_label_pc_1000be68, label %dec_label_pc_1000be9c

dec_label_pc_1000be68:                            ; preds = %dec_label_pc_1000be5c
  %v0_1000be68 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000be68 = add i32 %v0_1000be68, 4
  %v2_1000be68 = inttoptr i32 %v1_1000be68 to i32*
  %v3_1000be68 = load i32, i32* %v2_1000be68, align 4
  %v3_1000be6c = icmp eq i32 %v3_1000be68, 0
  br i1 %v3_1000be6c, label %dec_label_pc_1000be7c, label %dec_label_pc_1000be74

dec_label_pc_1000be74:                            ; preds = %dec_label_pc_1000be68
  %v1_1000be74 = add i32 %v0_1000be68, 8
  %v2_1000be74 = inttoptr i32 %v1_1000be74 to i32*
  %v3_1000be74 = load i32, i32* %v2_1000be74, align 4
  %v2_1000be78 = add i32 %v3_1000be68, 8
  %v3_1000be78 = inttoptr i32 %v2_1000be78 to i32*
  store i32 %v3_1000be74, i32* %v3_1000be78, align 4
  %v0_1000be7c.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000be7c

dec_label_pc_1000be7c:                            ; preds = %dec_label_pc_1000be68, %dec_label_pc_1000be74
  %v0_1000be7c = phi i32 [ %v0_1000be68, %dec_label_pc_1000be68 ], [ %v0_1000be7c.pre, %dec_label_pc_1000be74 ]
  %v1_1000be7c = add i32 %v0_1000be7c, 8
  %v2_1000be7c = inttoptr i32 %v1_1000be7c to i32*
  %v3_1000be7c = load i32, i32* %v2_1000be7c, align 4
  %v1_1000be80 = add i32 %v0_1000be7c, 4
  %v2_1000be80 = inttoptr i32 %v1_1000be80 to i32*
  %v3_1000be80 = load i32, i32* %v2_1000be80, align 4
  %v3_1000be84 = icmp eq i32 %v3_1000be7c, 0
  br i1 %v3_1000be84, label %dec_label_pc_1000be94, label %dec_label_pc_1000be8c

dec_label_pc_1000be8c:                            ; preds = %dec_label_pc_1000be7c
  %v2_1000be8c = add i32 %v3_1000be7c, 4
  %v3_1000be8c = inttoptr i32 %v2_1000be8c to i32*
  store i32 %v3_1000be80, i32* %v3_1000be8c, align 4
  ret i32 %v2_1000be34

dec_label_pc_1000be94:                            ; preds = %dec_label_pc_1000be7c
  %v1_1000be94 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000be94 = inttoptr i32 %v1_1000be94 to i32*
  store i32 %v3_1000be80, i32* %v2_1000be94, align 4
  ret i32 %v2_1000be34

dec_label_pc_1000be9c:                            ; preds = %dec_label_pc_1000be5c
  %v2_1000be9c = sub i32 %v2_1000be34, %v1_1000be50
  %v1_1000bea4 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000bea4 = inttoptr i32 %v1_1000bea4 to i32*
  store i32 %v2_1000be9c, i32* %v2_1000bea4, align 4
  ret i32 %v1_1000be50

dec_label_pc_1000beac:                            ; preds = %dec_label_pc_1000be34
  %v1_1000beac = add i32 %v0_1000beac, 4
  %v2_1000beac = inttoptr i32 %v1_1000beac to i32*
  %v3_1000beac = load i32, i32* %v2_1000beac, align 4
  store i32 %v3_1000beac, i32* %r11.global-to-local, align 4
  %v3_1000beb0 = icmp eq i32 %v3_1000beac, 0
  br i1 %v3_1000beb0, label %dec_label_pc_1000beb0.dec_label_pc_1000beb8.loopexit_crit_edge, label %dec_label_pc_1000be34

dec_label_pc_1000beb0.dec_label_pc_1000beb8.loopexit_crit_edge: ; preds = %dec_label_pc_1000beac
  br label %dec_label_pc_1000beb8

dec_label_pc_1000beb8:                            ; preds = %dec_label_pc_1000be24, %dec_label_pc_1000beb0.dec_label_pc_1000beb8.loopexit_crit_edge, %dec_label_pc_1000be48, %dec_label_pc_1000be50
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_1000beac, { 1, 2, 0 }
  uselistorder i32 %v0_1000be7c, { 1, 0 }
  uselistorder i32 %v1_1000be50, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1000be34, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_1000beac, { 0, 2, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32 29, { 24, 36, 25, 37, 4, 5, 52, 53, 50, 51, 56, 57, 38, 39, 54, 55, 0, 1, 6, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 19, 20, 21, 7, 8, 11, 12, 13, 14, 9, 10, 15, 16, 17, 18, 2, 22, 3, 23, 40, 41, 42, 43, 46, 47, 44, 45, 48, 49 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_1000beb8, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_1000be7c, { 1, 0 }
  uselistorder label %dec_label_pc_1000be34, { 1, 0 }
}

define i32 @function_1000bec0(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000bec0:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_1000bec0 = icmp eq i32 %arg3, 0
  %v2_1000bec4 = add i32 %arg2, 4
  %v3_1000bec4 = inttoptr i32 %v2_1000bec4 to i32*
  store i32 %arg4, i32* %v3_1000bec4, align 4
  %v2_1000bec8 = add i32 %arg2, 8
  %v3_1000bec8 = inttoptr i32 %v2_1000bec8 to i32*
  store i32 %arg3, i32* %v3_1000bec8, align 4
  br i1 %v3_1000bec0, label %dec_label_pc_1000bed8, label %dec_label_pc_1000bed0

dec_label_pc_1000bed0:                            ; preds = %dec_label_pc_1000bec0
  %v2_1000bed0 = add i32 %arg3, 4
  %v3_1000bed0 = inttoptr i32 %v2_1000bed0 to i32*
  store i32 %arg2, i32* %v3_1000bed0, align 4
  br label %dec_label_pc_1000bedc

dec_label_pc_1000bed8:                            ; preds = %dec_label_pc_1000bec0
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_1000bedc

dec_label_pc_1000bedc:                            ; preds = %dec_label_pc_1000bed0, %dec_label_pc_1000bed8
  %v3_1000bedc = icmp eq i32 %arg4, 0
  %v0_1000bee0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000bedc, i32 %v0_1000bee0)
  %v2_1000bee4 = add i32 %arg4, 8
  %v3_1000bee4 = inttoptr i32 %v2_1000bee4 to i32*
  store i32 %arg2, i32* %v3_1000bee4, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg4, { 2, 1, 0 }
  uselistorder i32 %arg3, { 1, 0, 2 }
  uselistorder i32 %arg2, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_1000bedc, { 1, 0 }
}

define i32 @function_1000beec(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000beec:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_1000beec = icmp eq i32 %arg3, 0
  br i1 %v3_1000beec, label %dec_label_pc_1000befc, label %dec_label_pc_1000bef4

dec_label_pc_1000bef4:                            ; preds = %dec_label_pc_1000beec
  %v2_1000bef4 = add i32 %arg3, 4
  %v3_1000bef4 = inttoptr i32 %v2_1000bef4 to i32*
  store i32 %arg2, i32* %v3_1000bef4, align 4
  br label %dec_label_pc_1000bf00

dec_label_pc_1000befc:                            ; preds = %dec_label_pc_1000beec
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_1000bf00

dec_label_pc_1000bf00:                            ; preds = %dec_label_pc_1000bef4, %dec_label_pc_1000befc
  %v2_1000bf00 = add i32 %arg2, 8
  %v3_1000bf00 = inttoptr i32 %v2_1000bf00 to i32*
  store i32 %arg3, i32* %v3_1000bf00, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000bf00, { 1, 0 }
}

define i32 @function_1000bf08(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000bf08:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_1000bf20 = load i32, i32* %arg1, align 4
  store i32 %v2_1000bf20, i32* @r31, align 4
  %v2_1000bf24 = add i32 %arg3, %arg2
  store i32 %v2_1000bf24, i32* %r3.global-to-local, align 4
  %v3_1000bf387 = icmp eq i32 %v2_1000bf20, 0
  %v1_1000bf3c8 = add i32 %v2_1000bf20, 12
  %tmp69 = icmp uge i32 %v1_1000bf3c8, %arg2
  %or.cond10 = or i1 %v3_1000bf387, %tmp69
  br i1 %or.cond10, label %dec_label_pc_1000bf48, label %dec_label_pc_1000bf30

dec_label_pc_1000bf30:                            ; preds = %dec_label_pc_1000bf08, %dec_label_pc_1000bf30
  %v0_1000bf9011 = phi i32 [ %v3_1000bf34, %dec_label_pc_1000bf30 ], [ %v2_1000bf20, %dec_label_pc_1000bf08 ]
  store i32 %v0_1000bf9011, i32* %r11.global-to-local, align 4
  %v1_1000bf34 = add i32 %v0_1000bf9011, 4
  %v2_1000bf34 = inttoptr i32 %v1_1000bf34 to i32*
  %v3_1000bf34 = load i32, i32* %v2_1000bf34, align 4
  store i32 %v3_1000bf34, i32* @r31, align 4
  %v3_1000bf38 = icmp eq i32 %v3_1000bf34, 0
  %v1_1000bf3c = add i32 %v3_1000bf34, 12
  %tmp6 = icmp uge i32 %v1_1000bf3c, %arg2
  %or.cond = or i1 %v3_1000bf38, %tmp6
  br i1 %or.cond, label %dec_label_pc_1000bf48, label %dec_label_pc_1000bf30

dec_label_pc_1000bf48:                            ; preds = %dec_label_pc_1000bf30, %dec_label_pc_1000bf08
  %v0_1000bf84.lcssa = phi i32 [ 0, %dec_label_pc_1000bf08 ], [ %v0_1000bf9011, %dec_label_pc_1000bf30 ]
  %v0_1000bf90.lcssa = phi i32 [ %v2_1000bf20, %dec_label_pc_1000bf08 ], [ %v3_1000bf34, %dec_label_pc_1000bf30 ]
  %v3_1000bf38.lcssa = phi i1 [ %v3_1000bf387, %dec_label_pc_1000bf08 ], [ %v3_1000bf38, %dec_label_pc_1000bf30 ]
  br i1 %v3_1000bf38.lcssa, label %dec_label_pc_1000c000, label %dec_label_pc_1000bf50

dec_label_pc_1000bf50:                            ; preds = %dec_label_pc_1000bf48
  %v1_1000bf50 = inttoptr i32 %v0_1000bf90.lcssa to i32*
  %v2_1000bf50 = load i32, i32* %v1_1000bf50, align 4
  %v2_1000bf54 = sub i32 %v0_1000bf90.lcssa, %v2_1000bf50
  %v1_1000bf58 = add i32 %v2_1000bf54, 12
  %v3_1000bf5c = icmp ugt i32 %v1_1000bf58, %v2_1000bf24
  br i1 %v3_1000bf5c, label %dec_label_pc_1000c000, label %dec_label_pc_1000bf64

dec_label_pc_1000bf64:                            ; preds = %dec_label_pc_1000bf50
  %v4_1000bf5c = icmp eq i32 %v1_1000bf58, %v2_1000bf24
  %v2_1000bf68 = add i32 %v2_1000bf50, %arg3
  store i32 %v2_1000bf68, i32* @r29, align 4
  br i1 %v4_1000bf5c, label %dec_label_pc_1000bf70, label %dec_label_pc_1000bfa0

dec_label_pc_1000bf70:                            ; preds = %dec_label_pc_1000bf64
  %v3_1000bf70 = icmp eq i32 %v0_1000bf84.lcssa, 0
  br i1 %v3_1000bf70, label %dec_label_pc_1000bff4, label %dec_label_pc_1000bf78

dec_label_pc_1000bf78:                            ; preds = %dec_label_pc_1000bf70
  %v1_1000bf78 = add i32 %v0_1000bf84.lcssa, 12
  %v4_1000bf7c = icmp eq i32 %v1_1000bf78, %arg2
  br i1 %v4_1000bf7c, label %dec_label_pc_1000bf84, label %dec_label_pc_1000bff4

dec_label_pc_1000bf84:                            ; preds = %dec_label_pc_1000bf78
  %v1_1000bf84 = inttoptr i32 %v0_1000bf84.lcssa to i32*
  %v2_1000bf84 = load i32, i32* %v1_1000bf84, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v1_1000bf8c = add i32 %v0_1000bf84.lcssa, 8
  %v2_1000bf8c = inttoptr i32 %v1_1000bf8c to i32*
  %v3_1000bf8c = load i32, i32* %v2_1000bf8c, align 4
  %v2_1000bf94 = add i32 %v2_1000bf84, %v2_1000bf68
  store i32 %v2_1000bf94, i32* @r29, align 4
  %v5_1000bf98 = call i32 @function_1000beec(i32* %arg1, i32 %v0_1000bf90.lcssa, i32 %v3_1000bf8c, i32 %v2_1000bf24)
  store i32 %v5_1000bf98, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000bff4

dec_label_pc_1000bfa0:                            ; preds = %dec_label_pc_1000bf64
  %v1_1000bfa0 = add i32 %v0_1000bf90.lcssa, 4
  %v2_1000bfa0 = inttoptr i32 %v1_1000bfa0 to i32*
  %v3_1000bfa0 = load i32, i32* %v2_1000bfa0, align 4
  %v3_1000bfa4 = icmp eq i32 %v3_1000bfa0, 0
  br i1 %v3_1000bfa4, label %dec_label_pc_1000bfdc, label %dec_label_pc_1000bfac

dec_label_pc_1000bfac:                            ; preds = %dec_label_pc_1000bfa0
  %v1_1000bfac = inttoptr i32 %v3_1000bfa0 to i32*
  %v2_1000bfac = load i32, i32* %v1_1000bfac, align 4
  %v2_1000bfb0 = sub i32 %v3_1000bfa0, %v2_1000bfac
  %v1_1000bfb4 = add i32 %v2_1000bfb0, 12
  %v4_1000bfb8 = icmp eq i32 %v2_1000bf24, %v1_1000bfb4
  br i1 %v4_1000bfb8, label %dec_label_pc_1000bfc0, label %dec_label_pc_1000bfdc

dec_label_pc_1000bfc0:                            ; preds = %dec_label_pc_1000bfac
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_1000bfcc = add i32 %v2_1000bfac, %v2_1000bf68
  store i32 %v2_1000bfcc, i32* @r29, align 4
  store i32 %v3_1000bfa0, i32* @r31, align 4
  %v5_1000bfd4 = call i32 @function_1000beec(i32* %arg1, i32 %v3_1000bfa0, i32 %v0_1000bf84.lcssa, i32 %v2_1000bf24)
  store i32 %v5_1000bfd4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000bff4

dec_label_pc_1000bfdc:                            ; preds = %dec_label_pc_1000bfac, %dec_label_pc_1000bfa0
  %v2_1000bfdc = add i32 %v0_1000bf90.lcssa, %arg3
  store i32 %v2_1000bfdc, i32* @r31, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 268484596, i32* @lr, align 4
  %v5_1000bff0 = call i32 @function_1000bec0(i32* %arg1, i32 %v2_1000bfdc, i32 %v0_1000bf84.lcssa, i32 %v3_1000bfa0)
  store i32 %v5_1000bff0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000bff4

dec_label_pc_1000bff4:                            ; preds = %dec_label_pc_1000bf78, %dec_label_pc_1000bf70, %dec_label_pc_1000bfc0, %dec_label_pc_1000bf84, %dec_label_pc_1000bfdc
  %v0_1000bff4 = load i32, i32* @r31, align 4
  store i32 %v0_1000bff4, i32* @r30, align 4
  %v0_1000bff8 = load i32, i32* @r29, align 4
  %v2_1000bff8 = inttoptr i32 %v0_1000bff4 to i32*
  store i32 %v0_1000bff8, i32* %v2_1000bff8, align 4
  br label %dec_label_pc_1000c01c

dec_label_pc_1000c000:                            ; preds = %dec_label_pc_1000bf50, %dec_label_pc_1000bf48
  %v2_1000c000 = add i32 %v2_1000bf24, -12
  %v3_1000c000 = inttoptr i32 %v2_1000c000 to i32*
  store i32 %arg3, i32* %v3_1000c000, align 4
  %v0_1000c004 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000c004 = add i32 %v0_1000c004, -12
  store i32 %v1_1000c004, i32* @r30, align 4
  %v0_1000c008 = load i32, i32* %r11.global-to-local, align 4
  %v0_1000c00c = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_1000c00c, i32* %r3.global-to-local, align 4
  %v0_1000c010 = load i32, i32* @r31, align 4
  store i32 268484636, i32* @lr, align 4
  %v4_1000c018 = inttoptr i32 %v0_1000c00c to i32*
  %v5_1000c018 = call i32 @function_1000bec0(i32* %v4_1000c018, i32 %v1_1000c004, i32 %v0_1000c008, i32 %v0_1000c010)
  store i32 %v5_1000c018, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000c01c

dec_label_pc_1000c01c:                            ; preds = %dec_label_pc_1000bff4, %dec_label_pc_1000c000
  %v0_1000c020 = load i32, i32* @r30, align 4
  store i32 %v0_1000c020, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000c020

; uselistorder directives
  uselistorder i32 %v3_1000bfa0, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v1_1000bf58, { 1, 0 }
  uselistorder i32 %v0_1000bf90.lcssa, { 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_1000bf84.lcssa, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %v3_1000bf34, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v2_1000bf24, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %tmp, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 10, 5, 6, 7, 8, 1, 9, 11, 0 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2 }
  uselistorder i32 %arg3, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 3, 2, 0, 1 }
  uselistorder i32* %arg1, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_1000c01c, { 1, 0 }
  uselistorder label %dec_label_pc_1000bff4, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_1000bf30, { 1, 0 }
}

define i32 @function_1000c034(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000c034:
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 10, i32* %r30.global-to-local, align 4
  store i32 1, i32* %r26.global-to-local, align 4
  store i32 %tmp, i32* %r31.global-to-local, align 4
  %v3_1000c06c = load i32, i32* bitcast (i32** @global_var_1001e17c.503 to i32*), align 4
  %v2_1000c07827 = load i8, i8* %arg1, align 1
  %v3_1000c07828 = zext i8 %v2_1000c07827 to i32
  %v1_1000c07c29 = mul nuw nsw i32 %v3_1000c07828, 2
  %v2_1000c08030 = add i32 %v1_1000c07c29, %v3_1000c06c
  %v3_1000c08031 = inttoptr i32 %v2_1000c08030 to i16*
  %v4_1000c08032 = load i16, i16* %v3_1000c08031, align 2
  %v1_1000c08434 = and i16 %v4_1000c08032, 32
  %v3_1000c08435 = icmp eq i16 %v1_1000c08434, 0
  br i1 %v3_1000c08435, label %dec_label_pc_1000c08c, label %dec_label_pc_1000c074

dec_label_pc_1000c074:                            ; preds = %dec_label_pc_1000c034, %dec_label_pc_1000c074
  %v0_1000c0ac36 = phi i32 [ %v1_1000c074, %dec_label_pc_1000c074 ], [ %tmp, %dec_label_pc_1000c034 ]
  %v1_1000c074 = add i32 %v0_1000c0ac36, 1
  store i32 %v1_1000c074, i32* %r31.global-to-local, align 4
  %v1_1000c078 = inttoptr i32 %v1_1000c074 to i8*
  %v2_1000c078 = load i8, i8* %v1_1000c078, align 1
  %v3_1000c078 = zext i8 %v2_1000c078 to i32
  %v1_1000c07c = mul nuw nsw i32 %v3_1000c078, 2
  %v2_1000c080 = add i32 %v1_1000c07c, %v3_1000c06c
  %v3_1000c080 = inttoptr i32 %v2_1000c080 to i16*
  %v4_1000c080 = load i16, i16* %v3_1000c080, align 2
  %v1_1000c084 = and i16 %v4_1000c080, 32
  %v3_1000c084 = icmp eq i16 %v1_1000c084, 0
  br i1 %v3_1000c084, label %dec_label_pc_1000c08c, label %dec_label_pc_1000c074

dec_label_pc_1000c08c:                            ; preds = %dec_label_pc_1000c074, %dec_label_pc_1000c034
  %v0_1000c0ac.lcssa = phi i32 [ %tmp, %dec_label_pc_1000c034 ], [ %v1_1000c074, %dec_label_pc_1000c074 ]
  %v2_1000c078.lcssa = phi i8 [ %v2_1000c07827, %dec_label_pc_1000c034 ], [ %v2_1000c078, %dec_label_pc_1000c074 ]
  %v3_1000c08c = icmp eq i8 %v2_1000c078.lcssa, 43
  br i1 %v3_1000c08c, label %dec_label_pc_1000c0ac, label %dec_label_pc_1000c094

dec_label_pc_1000c094:                            ; preds = %dec_label_pc_1000c08c
  %v3_1000c094 = icmp eq i8 %v2_1000c078.lcssa, 45
  store i32 0, i32* @r28, align 4
  br i1 %v3_1000c094, label %dec_label_pc_1000c0ac, label %dec_label_pc_1000c0b0

dec_label_pc_1000c0ac:                            ; preds = %dec_label_pc_1000c08c, %dec_label_pc_1000c094
  %storemerge = phi i32 [ 1, %dec_label_pc_1000c094 ], [ 0, %dec_label_pc_1000c08c ]
  store i32 %storemerge, i32* @r28, align 4
  %v1_1000c0ac = add i32 %v0_1000c0ac.lcssa, 1
  store i32 %v1_1000c0ac, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000c0b0

dec_label_pc_1000c0b0:                            ; preds = %dec_label_pc_1000c094, %dec_label_pc_1000c0ac
  %v1_1000c0b0 = call i32 @__asm_rlwinm.(i32 10, i32 0, i32 28, i32 26)
  %v4_1000c0b0 = icmp eq i32 %v1_1000c0b0, 0
  br i1 %v4_1000c0b0, label %dec_label_pc_1000c0bc, label %dec_label_pc_1000c0b0.dec_label_pc_1000c0f8_crit_edge

dec_label_pc_1000c0b0.dec_label_pc_1000c0f8_crit_edge: ; preds = %dec_label_pc_1000c0b0
  %v0_1000c0f8.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000c0f8

dec_label_pc_1000c0bc:                            ; preds = %dec_label_pc_1000c0b0
  %v0_1000c0bc = load i32, i32* %r31.global-to-local, align 4
  %v1_1000c0bc = inttoptr i32 %v0_1000c0bc to i8*
  %v2_1000c0bc = load i8, i8* %v1_1000c0bc, align 1
  %v0_1000c0c0 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000c0c0 = add i32 %v0_1000c0c0, 10
  store i32 %v1_1000c0c0, i32* %r30.global-to-local, align 4
  %v3_1000c0c4 = icmp eq i8 %v2_1000c0bc, 48
  br i1 %v3_1000c0c4, label %dec_label_pc_1000c0cc, label %dec_label_pc_1000c0ec

dec_label_pc_1000c0cc:                            ; preds = %dec_label_pc_1000c0bc
  %v1_1000c0cc = add i32 %v0_1000c0bc, 1
  %v2_1000c0cc = inttoptr i32 %v1_1000c0cc to i8*
  %v3_1000c0cc = load i8, i8* %v2_1000c0cc, align 1
  %v4_1000c0cc = zext i8 %v3_1000c0cc to i32
  store i32 %v1_1000c0cc, i32* %r31.global-to-local, align 4
  %v1_1000c0d0 = add i32 %v0_1000c0c0, 8
  store i32 %v1_1000c0d0, i32* %r30.global-to-local, align 4
  %v1_1000c0d4 = or i32 %v4_1000c0cc, 32
  %v3_1000c0dc = icmp eq i32 %v1_1000c0d4, 120
  br i1 %v3_1000c0dc, label %dec_label_pc_1000c0e4, label %dec_label_pc_1000c0ec

dec_label_pc_1000c0e4:                            ; preds = %dec_label_pc_1000c0cc
  %v1_1000c0e4 = mul i32 %v1_1000c0d0, 2
  store i32 %v1_1000c0e4, i32* %r30.global-to-local, align 4
  %v1_1000c0e8 = add i32 %v0_1000c0bc, 2
  store i32 %v1_1000c0e8, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000c0ec

dec_label_pc_1000c0ec:                            ; preds = %dec_label_pc_1000c0cc, %dec_label_pc_1000c0bc, %dec_label_pc_1000c0e4
  %v0_1000c1a015 = phi i32 [ %v1_1000c0cc, %dec_label_pc_1000c0e4 ], [ %tmp, %dec_label_pc_1000c0bc ], [ %v1_1000c0cc, %dec_label_pc_1000c0cc ]
  %v0_1000c0ec = phi i32 [ %v1_1000c0e4, %dec_label_pc_1000c0e4 ], [ %v1_1000c0c0, %dec_label_pc_1000c0bc ], [ %v1_1000c0d0, %dec_label_pc_1000c0cc ]
  %tmp22 = icmp slt i32 %v0_1000c0ec, 17
  br i1 %tmp22, label %dec_label_pc_1000c0f8, label %dec_label_pc_1000c0f4

dec_label_pc_1000c0f4:                            ; preds = %dec_label_pc_1000c0ec
  store i32 16, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000c0f8

dec_label_pc_1000c0f8:                            ; preds = %dec_label_pc_1000c0b0.dec_label_pc_1000c0f8_crit_edge, %dec_label_pc_1000c0ec, %dec_label_pc_1000c0f4
  %v0_1000c1a014 = phi i32 [ %tmp, %dec_label_pc_1000c0b0.dec_label_pc_1000c0f8_crit_edge ], [ %v0_1000c1a015, %dec_label_pc_1000c0ec ], [ %v0_1000c1a015, %dec_label_pc_1000c0f4 ]
  %v1_1000c10c = phi i32 [ %v0_1000c0f8.pre, %dec_label_pc_1000c0b0.dec_label_pc_1000c0f8_crit_edge ], [ %v0_1000c0ec, %dec_label_pc_1000c0ec ], [ 16, %dec_label_pc_1000c0f4 ]
  %v1_1000c0f8 = add i32 %v1_1000c10c, -2
  store i32 0, i32* %r8.global-to-local, align 4
  %v2_1000c100 = icmp ugt i32 %v1_1000c0f8, 34
  br i1 %v2_1000c100, label %dec_label_pc_1000c198, label %dec_label_pc_1000c108

dec_label_pc_1000c108:                            ; preds = %dec_label_pc_1000c0f8
  %v2_1000c10c = udiv i32 -1, %v1_1000c10c
  store i32 %v2_1000c10c, i32* @r29, align 4
  %v2_1000c110 = mul i32 %v2_1000c10c, %v1_1000c10c
  %v1_1000c114 = sub i32 -1, %v2_1000c110
  %v1_1000c118 = urem i32 %v1_1000c114, 256
  store i32 %v1_1000c118, i32* @r27, align 4
  %v0_1000c124.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000c124

dec_label_pc_1000c120:                            ; preds = %dec_label_pc_1000c18c, %dec_label_pc_1000c174
  %v1_1000c128.pre = phi i32 [ %v1_1000c12c, %dec_label_pc_1000c18c ], [ %v1_1000c128.pre.pre, %dec_label_pc_1000c174 ]
  %v0_1000c128.pre = phi i32 [ %v2_1000c190, %dec_label_pc_1000c18c ], [ %v0_1000c128.pre.pre, %dec_label_pc_1000c174 ]
  %v0_1000c120 = phi i32 [ %v1_1000c130, %dec_label_pc_1000c18c ], [ %v0_1000c120.pre, %dec_label_pc_1000c174 ]
  br label %dec_label_pc_1000c124

dec_label_pc_1000c124:                            ; preds = %dec_label_pc_1000c108, %dec_label_pc_1000c120
  %v0_1000c1a012 = phi i32 [ %v0_1000c1a014, %dec_label_pc_1000c108 ], [ %v0_1000c120, %dec_label_pc_1000c120 ]
  %v0_1000c130 = phi i32 [ %v0_1000c124.pre, %dec_label_pc_1000c108 ], [ %v0_1000c120, %dec_label_pc_1000c120 ]
  %v1_1000c12c = phi i32 [ %v2_1000c10c, %dec_label_pc_1000c108 ], [ %v1_1000c128.pre, %dec_label_pc_1000c120 ]
  %v0_1000c18c = phi i32 [ 0, %dec_label_pc_1000c108 ], [ %v0_1000c128.pre, %dec_label_pc_1000c120 ]
  %v1_1000c124 = inttoptr i32 %v0_1000c130 to i8*
  %v2_1000c124 = load i8, i8* %v1_1000c124, align 1
  %v3_1000c124 = zext i8 %v2_1000c124 to i32
  %v3_1000c128 = icmp ugt i32 %v0_1000c18c, %v1_1000c12c
  %v1_1000c130 = add i32 %v0_1000c130, 1
  store i32 %v1_1000c130, i32* %r31.global-to-local, align 4
  %v1_1000c134 = add nsw i32 %v3_1000c124, -48
  %v1_1000c138 = or i32 %v3_1000c124, 32
  %v1_1000c13c = urem i32 %v1_1000c134, 256
  %tmp23 = icmp ult i32 %v1_1000c13c, 10
  br i1 %tmp23, label %dec_label_pc_1000c15c, label %dec_label_pc_1000c14c

dec_label_pc_1000c14c:                            ; preds = %dec_label_pc_1000c124
  %tmp24 = icmp ult i32 %v1_1000c138, 97
  br i1 %tmp24, label %dec_label_pc_1000c15c, label %dec_label_pc_1000c158

dec_label_pc_1000c158:                            ; preds = %dec_label_pc_1000c14c
  %v1_1000c14c = add nsw i32 %v1_1000c138, -87
  %v1_1000c158 = urem i32 %v1_1000c14c, 256
  br label %dec_label_pc_1000c15c

dec_label_pc_1000c15c:                            ; preds = %dec_label_pc_1000c14c, %dec_label_pc_1000c124, %dec_label_pc_1000c158
  %v1_1000c190 = phi i32 [ 40, %dec_label_pc_1000c14c ], [ %v1_1000c13c, %dec_label_pc_1000c124 ], [ %v1_1000c158, %dec_label_pc_1000c158 ]
  %v1_1000c15c = load i32, i32* %r30.global-to-local, align 4
  %v2_1000c15c = icmp slt i32 %v1_1000c190, %v1_1000c15c
  br i1 %v2_1000c15c, label %dec_label_pc_1000c164, label %dec_label_pc_1000c198

dec_label_pc_1000c164:                            ; preds = %dec_label_pc_1000c15c
  br i1 %v3_1000c128, label %dec_label_pc_1000c174, label %dec_label_pc_1000c168

dec_label_pc_1000c168:                            ; preds = %dec_label_pc_1000c164
  %v1_1000c168 = load i32, i32* @r27, align 4
  %v0_1000c16c.not = icmp ne i32 %v0_1000c18c, %v1_1000c12c
  %tmp25 = icmp ule i32 %v1_1000c190, %v1_1000c168
  %or.cond = or i1 %tmp25, %v0_1000c16c.not
  br i1 %or.cond, label %dec_label_pc_1000c18c, label %dec_label_pc_1000c174

dec_label_pc_1000c174:                            ; preds = %dec_label_pc_1000c168, %dec_label_pc_1000c164
  %v0_1000c174 = call i32 @function_1000b0a8()
  %v0_1000c178 = load i32, i32* @r28, align 4
  %v1_1000c178 = load i32, i32* %r26.global-to-local, align 4
  %v2_1000c178 = and i32 %v1_1000c178, %v0_1000c178
  store i32 %v2_1000c178, i32* @r28, align 4
  store i32 -1, i32* %r8.global-to-local, align 4
  %v2_1000c184 = inttoptr i32 %v0_1000c174 to i32*
  store i32 34, i32* %v2_1000c184, align 4
  %v0_1000c120.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_1000c128.pre.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_1000c128.pre.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000c120

dec_label_pc_1000c18c:                            ; preds = %dec_label_pc_1000c168
  %v2_1000c18c = mul i32 %v1_1000c15c, %v0_1000c18c
  %v2_1000c190 = add i32 %v2_1000c18c, %v1_1000c190
  store i32 %v2_1000c190, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000c120

dec_label_pc_1000c198:                            ; preds = %dec_label_pc_1000c15c, %dec_label_pc_1000c0f8
  %v0_1000c1a0 = phi i32 [ %v0_1000c1a014, %dec_label_pc_1000c0f8 ], [ %v0_1000c1a012, %dec_label_pc_1000c15c ]
  %v0_1000c198 = load i32, i32* %r25.global-to-local, align 4
  %v3_1000c198 = icmp eq i32 %v0_1000c198, 0
  br i1 %v3_1000c198, label %dec_label_pc_1000c1a4, label %dec_label_pc_1000c1a0

dec_label_pc_1000c1a0:                            ; preds = %dec_label_pc_1000c198
  %v2_1000c1a0 = inttoptr i32 %v0_1000c198 to i32*
  store i32 %v0_1000c1a0, i32* %v2_1000c1a0, align 4
  br label %dec_label_pc_1000c1a4

dec_label_pc_1000c1a4:                            ; preds = %dec_label_pc_1000c198, %dec_label_pc_1000c1a0
  %v0_1000c1a4 = load i32, i32* %r26.global-to-local, align 4
  %v3_1000c1a4 = icmp eq i32 %v0_1000c1a4, 0
  %v0_1000c1a8 = load i32, i32* @r28, align 4
  %v1_1000c1a8 = sub i32 0, %v0_1000c1a8
  %tmp40 = lshr i32 %v1_1000c1a8, 31
  %tmp41 = add nuw i32 %tmp40, 2147483647
  store i32 %tmp41, i32* @r31, align 4
  %v0_1000c1e8.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v3_1000c1a4, label %dec_label_pc_1000c1d8, label %dec_label_pc_1000c1c0

dec_label_pc_1000c1c0:                            ; preds = %dec_label_pc_1000c1a4
  %v3_1000c1c0 = icmp ugt i32 %v0_1000c1e8.pre.pre, %tmp41
  br i1 %v3_1000c1c0, label %dec_label_pc_1000c1c8, label %dec_label_pc_1000c1d8

dec_label_pc_1000c1c8:                            ; preds = %dec_label_pc_1000c1c0
  %v0_1000c1c8 = call i32 @function_1000b0a8()
  %v2_1000c1d0 = inttoptr i32 %v0_1000c1c8 to i32*
  store i32 34, i32* %v2_1000c1d0, align 4
  %v0_1000c1d4 = load i32, i32* @r31, align 4
  store i32 %v0_1000c1d4, i32* %r8.global-to-local, align 4
  %v0_1000c1d8.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1000c1d8

dec_label_pc_1000c1d8:                            ; preds = %dec_label_pc_1000c1a4, %dec_label_pc_1000c1c0, %dec_label_pc_1000c1c8
  %v0_1000c1e8.pre = phi i32 [ %v0_1000c1e8.pre.pre, %dec_label_pc_1000c1c0 ], [ %v0_1000c1d4, %dec_label_pc_1000c1c8 ], [ %v0_1000c1e8.pre.pre, %dec_label_pc_1000c1a4 ]
  %v0_1000c1d8 = phi i32 [ %v0_1000c1a8, %dec_label_pc_1000c1c0 ], [ %v0_1000c1d8.pre, %dec_label_pc_1000c1c8 ], [ %v0_1000c1a8, %dec_label_pc_1000c1a4 ]
  %v3_1000c1d8 = icmp eq i32 %v0_1000c1d8, 0
  br i1 %v3_1000c1d8, label %dec_label_pc_1000c1e4, label %dec_label_pc_1000c1e0

dec_label_pc_1000c1e0:                            ; preds = %dec_label_pc_1000c1d8
  %v1_1000c1e0 = sub i32 0, %v0_1000c1e8.pre
  store i32 %v1_1000c1e0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000c1e4

dec_label_pc_1000c1e4:                            ; preds = %dec_label_pc_1000c1d8, %dec_label_pc_1000c1e0
  %v0_1000c1e8 = phi i32 [ %v1_1000c1e0, %dec_label_pc_1000c1e0 ], [ %v0_1000c1e8.pre, %dec_label_pc_1000c1d8 ]
  ret i32 %v0_1000c1e8

; uselistorder directives
  uselistorder i32 %v0_1000c1e8.pre, { 1, 0 }
  uselistorder i32 %v0_1000c1e8.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v2_1000c190, { 1, 0 }
  uselistorder i32 %v1_1000c13c, { 1, 0 }
  uselistorder i32 %v1_1000c138, { 1, 0 }
  uselistorder i32 %v1_1000c130, { 1, 0 }
  uselistorder i32 %v3_1000c124, { 1, 0 }
  uselistorder i32 %v0_1000c18c, { 1, 0, 2 }
  uselistorder i32 %v1_1000c12c, { 0, 2, 1 }
  uselistorder i32 %v0_1000c120, { 1, 0 }
  uselistorder i32 %v2_1000c10c, { 1, 0, 2 }
  uselistorder i32 %v1_1000c0e4, { 1, 0 }
  uselistorder i32 %v1_1000c0d0, { 1, 0, 2 }
  uselistorder i8 %v2_1000c078.lcssa, { 1, 0 }
  uselistorder i32 %v1_1000c074, { 0, 2, 3, 1 }
  uselistorder i32 %v3_1000c06c, { 1, 0 }
  uselistorder i32 %tmp, { 3, 2, 0, 1, 4 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 5, 2, 3, 4, 6 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 7, 2, 3, 6, 4, 5, 8 }
  uselistorder i32* %r30.global-to-local, { 4, 1, 0, 2, 3, 5, 6, 7 }
  uselistorder i32 34, { 0, 1, 5, 6, 7, 2, 8, 3, 9, 4, 10 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm., { 0, 7, 8, 3, 4, 5, 6, 1, 2 }
  uselistorder i32 26, { 1, 0, 2, 3 }
  uselistorder i8 45, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000c1e4, { 1, 0 }
  uselistorder label %dec_label_pc_1000c1d8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000c1a4, { 1, 0 }
  uselistorder label %dec_label_pc_1000c15c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000c124, { 1, 0 }
  uselistorder label %dec_label_pc_1000c0f8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000c0ec, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000c0b0, { 1, 0 }
  uselistorder label %dec_label_pc_1000c0ac, { 1, 0 }
  uselistorder label %dec_label_pc_1000c074, { 1, 0 }
}

define i32 @function_1000c1fc() local_unnamed_addr {
dec_label_pc_1000c1fc:
  %stack_var_-40 = alloca i32, align 4
  %v2_1000c214 = ptrtoint i32* %stack_var_-40 to i32
  %v0_1000c220 = load i32, i32* @r3, align 4
  store i32 %v0_1000c220, i32* @r31, align 4
  store i32 %v2_1000c214, i32* @r3, align 4
  %v3_1000c22c = call i32 @function_1000c4f0(i32 %v2_1000c214, i32 ptrtoint ([3 x i8]* @global_var_1000c4e8.483 to i32))
  %v0_1000c234 = call i32 @function_1000c4e8()
  %v3_1000c23c = load i32, i32* @global_var_1001e1bc.506, align 4
  %v3_1000c240 = icmp eq i32 %v3_1000c23c, 0
  br i1 %v3_1000c240, label %dec_label_pc_1000c254, label %dec_label_pc_1000c248

dec_label_pc_1000c248:                            ; preds = %dec_label_pc_1000c1fc
  %v0_1000c248 = load i32, i32* @r31, align 4
  %v3_1000c250 = call i32 @unknown_0(i32 %v0_1000c248, i32 268566528)
  br label %dec_label_pc_1000c254

dec_label_pc_1000c254:                            ; preds = %dec_label_pc_1000c1fc, %dec_label_pc_1000c248
  store i32 %v2_1000c214, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v2_1000c25c = call i32 @function_1000c4f0(i32 %v2_1000c214, i32 1)
  store i32 %v2_1000c25c, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000c264.508 to i32), i32* @lr, align 4
  %v1_1000c260 = call i32 @function_1000c454(i32 %v2_1000c25c)
  %v0_1000c278 = load i32, i32* @r31, align 4
  %v1_1000c27c = call i32 @function_1000c888(i32 %v0_1000c278)
  ret i32 %v1_1000c27c

; uselistorder directives
  uselistorder i32 %v2_1000c214, { 1, 0, 3, 2 }
  uselistorder i32 (i32, i32)* @function_1000c4f0, { 1, 0, 5, 4, 3, 2 }
  uselistorder label %dec_label_pc_1000c254, { 1, 0 }
}

define i32 @function_1000c280(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000c280:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-432 = alloca i32, align 4
  %stack_var_-440 = alloca i32, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  %v3_1000c280 = icmp eq i32 %arg1, 0
  br i1 %v3_1000c280, label %dec_label_pc_1000c434, label %dec_label_pc_1000c2b0.lr.ph

dec_label_pc_1000c2b0.lr.ph:                      ; preds = %dec_label_pc_1000c280
  %v2_1000c2a4 = ptrtoint i32* %stack_var_-440 to i32
  store i32 %v2_1000c2a4, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_1000c2b042 = add i32 %v2_1000c2a4, 132
  %v3_1000c2b043 = inttoptr i32 %v2_1000c2b042 to i32*
  store i32 0, i32* %v3_1000c2b043, align 4
  %v0_1000c2b444 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000c2b445 = add i32 %v0_1000c2b444, -1
  store i32 %v1_1000c2b445, i32* %r11.global-to-local, align 4
  %v1_1000c2b846 = mul i32 %v1_1000c2b445, 4
  %v1_1000c2bc47 = load i32, i32* %r7.global-to-local, align 4
  %v2_1000c2bc48 = add i32 %v1_1000c2bc47, %v1_1000c2b846
  %v0_1000c2c049 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000c2c050 = add i32 %v0_1000c2c049, -1
  store i32 %v1_1000c2c050, i32* %ctr.global-to-local, align 4
  %v2_1000c2c051 = icmp eq i32 %v1_1000c2c050, 0
  br i1 %v2_1000c2c051, label %dec_label_pc_1000c2c4, label %dec_label_pc_1000c2b0.dec_label_pc_1000c2b0_crit_edge

dec_label_pc_1000c2b0.dec_label_pc_1000c2b0_crit_edge: ; preds = %dec_label_pc_1000c2b0.lr.ph, %dec_label_pc_1000c2b0.dec_label_pc_1000c2b0_crit_edge
  %v2_1000c2bc52 = phi i32 [ %v2_1000c2bc, %dec_label_pc_1000c2b0.dec_label_pc_1000c2b0_crit_edge ], [ %v2_1000c2bc48, %dec_label_pc_1000c2b0.lr.ph ]
  %v0_1000c2b0.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_1000c2b0 = add i32 %v2_1000c2bc52, 8
  %v3_1000c2b0 = inttoptr i32 %v2_1000c2b0 to i32*
  store i32 %v0_1000c2b0.pre, i32* %v3_1000c2b0, align 4
  %v0_1000c2b4 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000c2b4 = add i32 %v0_1000c2b4, -1
  store i32 %v1_1000c2b4, i32* %r11.global-to-local, align 4
  %v1_1000c2b8 = mul i32 %v1_1000c2b4, 4
  %v1_1000c2bc = load i32, i32* %r7.global-to-local, align 4
  %v2_1000c2bc = add i32 %v1_1000c2bc, %v1_1000c2b8
  %v0_1000c2c0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000c2c0 = add i32 %v0_1000c2c0, -1
  store i32 %v1_1000c2c0, i32* %ctr.global-to-local, align 4
  %v2_1000c2c0 = icmp eq i32 %v1_1000c2c0, 0
  br i1 %v2_1000c2c0, label %dec_label_pc_1000c2c4, label %dec_label_pc_1000c2b0.dec_label_pc_1000c2b0_crit_edge

dec_label_pc_1000c2c4:                            ; preds = %dec_label_pc_1000c2b0.dec_label_pc_1000c2b0_crit_edge, %dec_label_pc_1000c2b0.lr.ph
  %v0_1000c2d8.pre = load i32, i32* %r8.global-to-local, align 4
  %v2_1000c2c4 = ptrtoint i32* %stack_var_-432 to i32
  store i32 %v2_1000c2c4, i32* @r29, align 4
  store i32 %v2_1000c2c4, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  store i32 %v0_1000c2d8.pre, i32* %stack_var_-440, align 4
  %v0_1000c2dc = call i32 @function_1000b93c()
  store i32 %v0_1000c2dc, i32* %r3.global-to-local, align 4
  %v1_1000c2e0 = icmp slt i32 %v0_1000c2dc, 0
  br i1 %v1_1000c2e0, label %dec_label_pc_1000c43c, label %dec_label_pc_1000c2e8

dec_label_pc_1000c2e8:                            ; preds = %dec_label_pc_1000c2c4
  %v2_1000c2e8 = ptrtoint i32* %stack_var_-304 to i32
  store i32 %v2_1000c2e8, i32* @r31, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268485372, i32* @lr, align 4
  %v3_1000c2f8 = call i32 @function_1000ace4(i32 0, i32 %v2_1000c2c4, i32 %v2_1000c2e8)
  store i32 %v3_1000c2f8, i32* %r3.global-to-local, align 4
  %v3_1000c2fc = icmp eq i32 %v3_1000c2f8, 0
  br i1 %v3_1000c2fc, label %dec_label_pc_1000c304, label %dec_label_pc_1000c43c

dec_label_pc_1000c304:                            ; preds = %dec_label_pc_1000c2e8
  store i32 %v2_1000c2e8, i32* %r3.global-to-local, align 4
  %v2_1000c30c = call i32 @function_1000b914(i32 %v2_1000c2e8, i32 17)
  store i32 %v2_1000c30c, i32* %r3.global-to-local, align 4
  %v3_1000c310 = icmp eq i32 %v2_1000c30c, 0
  br i1 %v3_1000c310, label %dec_label_pc_1000c330.lr.ph, label %dec_label_pc_1000c3fc

dec_label_pc_1000c330.lr.ph:                      ; preds = %dec_label_pc_1000c304
  store i32 %v2_1000c2a4, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %v3_1000c2b043, align 4
  %v0_1000c33433 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000c33434 = add i32 %v0_1000c33433, -1
  store i32 %v1_1000c33434, i32* %r11.global-to-local, align 4
  %v1_1000c33835 = mul i32 %v1_1000c33434, 4
  %v1_1000c33c36 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000c33c37 = add i32 %v1_1000c33c36, %v1_1000c33835
  %v0_1000c34038 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000c34039 = add i32 %v0_1000c34038, -1
  store i32 %v1_1000c34039, i32* %ctr.global-to-local, align 4
  %v2_1000c34040 = icmp eq i32 %v1_1000c34039, 0
  br i1 %v2_1000c34040, label %dec_label_pc_1000c344, label %dec_label_pc_1000c330.dec_label_pc_1000c330_crit_edge

dec_label_pc_1000c330.dec_label_pc_1000c330_crit_edge: ; preds = %dec_label_pc_1000c330.lr.ph, %dec_label_pc_1000c330.dec_label_pc_1000c330_crit_edge
  %v2_1000c33c41 = phi i32 [ %v2_1000c33c, %dec_label_pc_1000c330.dec_label_pc_1000c330_crit_edge ], [ %v2_1000c33c37, %dec_label_pc_1000c330.lr.ph ]
  %v0_1000c330.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_1000c330 = add i32 %v2_1000c33c41, 8
  %v3_1000c330 = inttoptr i32 %v2_1000c330 to i32*
  store i32 %v0_1000c330.pre, i32* %v3_1000c330, align 4
  %v0_1000c334 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000c334 = add i32 %v0_1000c334, -1
  store i32 %v1_1000c334, i32* %r11.global-to-local, align 4
  %v1_1000c338 = mul i32 %v1_1000c334, 4
  %v1_1000c33c = load i32, i32* %r8.global-to-local, align 4
  %v2_1000c33c = add i32 %v1_1000c33c, %v1_1000c338
  %v0_1000c340 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000c340 = add i32 %v0_1000c340, -1
  store i32 %v1_1000c340, i32* %ctr.global-to-local, align 4
  %v2_1000c340 = icmp eq i32 %v1_1000c340, 0
  br i1 %v2_1000c340, label %dec_label_pc_1000c344, label %dec_label_pc_1000c330.dec_label_pc_1000c330_crit_edge

dec_label_pc_1000c344:                            ; preds = %dec_label_pc_1000c330.dec_label_pc_1000c330_crit_edge, %dec_label_pc_1000c330.lr.ph
  store i32 %v2_1000c2c4, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  %v0_1000c34c = call i32 @function_1000b93c()
  store i32 %v0_1000c34c, i32* %r3.global-to-local, align 4
  %v1_1000c350 = icmp slt i32 %v0_1000c34c, 0
  br i1 %v1_1000c350, label %dec_label_pc_1000c43c, label %dec_label_pc_1000c358

dec_label_pc_1000c358:                            ; preds = %dec_label_pc_1000c344
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_1000c360 = ptrtoint i32* %stack_var_-176 to i32
  store i32 268485480, i32* @lr, align 4
  %v4_1000c364 = call i32 @function_1000d030(i32 17, i32* null, i32 %v2_1000c360)
  store i32 %v4_1000c364, i32* %r3.global-to-local, align 4
  %tmp30 = icmp sgt i32 %v4_1000c364, -1
  br i1 %tmp30, label %dec_label_pc_1000c398, label %dec_label_pc_1000c370

dec_label_pc_1000c370:                            ; preds = %dec_label_pc_1000c358
  %v0_1000c370 = call i32 @function_1000b0a8()
  store i32 %v0_1000c370, i32* %r3.global-to-local, align 4
  %v1_1000c378 = inttoptr i32 %v0_1000c370 to i32*
  %v2_1000c378 = load i32, i32* %v1_1000c378, align 4
  store i32 %v2_1000c378, i32* @r28, align 4
  store i32 %v0_1000c370, i32* @r29, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268485516, i32* @lr, align 4
  %v3_1000c388 = call i32 @function_1000ace4(i32 2, i32 %v2_1000c2e8, i32 0)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_1000c390 = load i32, i32* @r28, align 4
  %v1_1000c390 = load i32, i32* @r29, align 4
  %v2_1000c390 = inttoptr i32 %v1_1000c390 to i32*
  store i32 %v0_1000c390, i32* %v2_1000c390, align 4
  %v0_1000c450.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000c440

dec_label_pc_1000c398:                            ; preds = %dec_label_pc_1000c358
  %v3_1000c398 = load i32, i32* %stack_var_-176, align 4
  store i32 %v2_1000c2e8, i32* @r28, align 4
  %v3_1000c3a4 = icmp eq i32 %v3_1000c398, 1
  br i1 %v3_1000c3a4, label %dec_label_pc_1000c3ac, label %dec_label_pc_1000c3e0

dec_label_pc_1000c3ac:                            ; preds = %dec_label_pc_1000c398
  store i32 %v2_1000c2a4, i32* %r3.global-to-local, align 4
  store i32 268485560, i32* @lr, align 4
  %v2_1000c3b4 = call i32 @function_1000ccc0(i32 %v2_1000c2a4, i32 %v2_1000c2a4)
  store i32 %v2_1000c3b4, i32* %r3.global-to-local, align 4
  store i32 %v2_1000c3b4, i32* @r31, align 4
  %v0_1000c3bc = call i32 @function_1000b0a8()
  store i32 %v0_1000c3bc, i32* %r3.global-to-local, align 4
  store i32 %v0_1000c3bc, i32* @r29, align 4
  %v1_1000c3cc = inttoptr i32 %v0_1000c3bc to i32*
  %v2_1000c3cc = load i32, i32* %v1_1000c3cc, align 4
  store i32 %v2_1000c3cc, i32* @r28, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268485592, i32* @lr, align 4
  %v3_1000c3d4 = call i32 @function_1000ace4(i32 2, i32 %v2_1000c2e8, i32 0)
  store i32 %v3_1000c3d4, i32* %r3.global-to-local, align 4
  %v0_1000c3d8 = load i32, i32* @r28, align 4
  %v1_1000c3d8 = load i32, i32* @r29, align 4
  %v2_1000c3d8 = inttoptr i32 %v1_1000c3d8 to i32*
  store i32 %v0_1000c3d8, i32* %v2_1000c3d8, align 4
  %v0_1000c408.pr = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000c408

dec_label_pc_1000c3e0:                            ; preds = %dec_label_pc_1000c398
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268485616, i32* @lr, align 4
  %v3_1000c3ec = call i32 @function_1000ace4(i32 2, i32 %v2_1000c2e8, i32 0)
  br label %dec_label_pc_1000c3fc

dec_label_pc_1000c3fc:                            ; preds = %dec_label_pc_1000c304, %dec_label_pc_1000c3e0
  store i32 %v2_1000c2a4, i32* %r3.global-to-local, align 4
  store i32 268485636, i32* @lr, align 4
  %v2_1000c400 = call i32 @function_1000ccc0(i32 %v2_1000c2a4, i32 %v2_1000c2a4)
  store i32 %v2_1000c400, i32* %r3.global-to-local, align 4
  store i32 %v2_1000c400, i32* @r31, align 4
  br label %dec_label_pc_1000c408

dec_label_pc_1000c408:                            ; preds = %dec_label_pc_1000c3ac, %dec_label_pc_1000c3fc
  %v0_1000c408 = phi i32 [ %v0_1000c408.pr, %dec_label_pc_1000c3ac ], [ %v2_1000c400, %dec_label_pc_1000c3fc ]
  %v3_1000c408 = icmp eq i32 %v0_1000c408, 0
  br i1 %v3_1000c408, label %dec_label_pc_1000c434, label %dec_label_pc_1000c410

dec_label_pc_1000c410:                            ; preds = %dec_label_pc_1000c408
  %v3_1000c420 = load i32, i32* %stack_var_-440, align 4
  %v0_1000c424 = call i32 @__asm_mfcr()
  store i32 %v0_1000c424, i32* %r3.global-to-local, align 4
  %v1_1000c428 = call i32 @__asm_rlwinm(i32 %v0_1000c424, i32 30, i32 31, i32 31)
  %v2_1000c42c = add i32 %v3_1000c420, %v1_1000c428
  store i32 %v2_1000c42c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000c440

dec_label_pc_1000c434:                            ; preds = %dec_label_pc_1000c408, %dec_label_pc_1000c280
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000c440

dec_label_pc_1000c43c:                            ; preds = %dec_label_pc_1000c2e8, %dec_label_pc_1000c344, %dec_label_pc_1000c2c4
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000c440

dec_label_pc_1000c440:                            ; preds = %dec_label_pc_1000c434, %dec_label_pc_1000c410, %dec_label_pc_1000c370, %dec_label_pc_1000c43c
  %v0_1000c450 = phi i32 [ 0, %dec_label_pc_1000c434 ], [ %v2_1000c42c, %dec_label_pc_1000c410 ], [ %v0_1000c450.pre, %dec_label_pc_1000c370 ], [ -1, %dec_label_pc_1000c43c ]
  ret i32 %v0_1000c450

; uselistorder directives
  uselistorder i32 %v1_1000c340, { 1, 0 }
  uselistorder i32 %v2_1000c2e8, { 2, 1, 3, 0, 5, 4, 6, 7 }
  uselistorder i32 %v1_1000c2c0, { 1, 0 }
  uselistorder i32 %v2_1000c2a4, { 2, 1, 3, 6, 5, 4, 7, 0, 8 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 6, 8, 7, 2, 9, 1, 10, 11, 12, 13, 14, 15, 17, 18, 16, 19, 3, 20, 21, 4, 22, 23, 24, 5, 0 }
  uselistorder i32* %r11.global-to-local, { 7, 6, 0, 2, 3, 9, 8, 1, 4, 5 }
  uselistorder i32* %ctr.global-to-local, { 7, 6, 0, 2, 3, 9, 8, 1, 4, 5 }
  uselistorder i32 (i32, i32)* @function_1000ccc0, { 1, 0 }
  uselistorder i32 17, { 2, 29, 30, 3, 31, 4, 14, 15, 5, 6, 13, 27, 28, 16, 17, 7, 8, 18, 9, 19, 20, 21, 10, 11, 12, 22, 0, 23, 1, 24, 25, 26 }
  uselistorder label %dec_label_pc_1000c440, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000c43c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000c408, { 1, 0 }
  uselistorder label %dec_label_pc_1000c3fc, { 1, 0 }
  uselistorder label %dec_label_pc_1000c330.dec_label_pc_1000c330_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000c2b0.dec_label_pc_1000c2b0_crit_edge, { 1, 0 }
}

define i32 @function_1000c454(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000c4a4:
  %v3_1000c4a8 = load i32, i32* @global_var_1001e1cc.510, align 4
  %v3_1000c4ac = icmp eq i32 %v3_1000c4a8, 0
  br i1 %v3_1000c4ac, label %dec_label_pc_1000c4bc, label %dec_label_pc_1000c4b4

dec_label_pc_1000c4b4:                            ; preds = %dec_label_pc_1000c4a4
  %v2_1000c4b8 = load i32, i32* @r4, align 4
  %v3_1000c4b8 = call i32 @unknown_0(i32 268566528, i32 %v2_1000c4b8)
  store i32 %v3_1000c4b8, i32* @r3, align 4
  br label %dec_label_pc_1000c4bc

dec_label_pc_1000c4bc:                            ; preds = %dec_label_pc_1000c4a4, %dec_label_pc_1000c4b4
  %v3_1000c4c0 = load i32, i32* @global_var_1001e1d0.511, align 4
  %v3_1000c4c4 = icmp eq i32 %v3_1000c4c0, 0
  br i1 %v3_1000c4c4, label %dec_label_pc_1000c4bc.dec_label_pc_1000c4d4_crit_edge, label %dec_label_pc_1000c4cc

dec_label_pc_1000c4bc.dec_label_pc_1000c4d4_crit_edge: ; preds = %dec_label_pc_1000c4bc
  %v0_1000c4e4.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000c4d4

dec_label_pc_1000c4cc:                            ; preds = %dec_label_pc_1000c4bc
  %v2_1000c4d0 = load i32, i32* @r4, align 4
  %v3_1000c4d0 = call i32 @unknown_0(i32 268566528, i32 %v2_1000c4d0)
  br label %dec_label_pc_1000c4d4

dec_label_pc_1000c4d4:                            ; preds = %dec_label_pc_1000c4bc.dec_label_pc_1000c4d4_crit_edge, %dec_label_pc_1000c4cc
  %v0_1000c4e4 = phi i32 [ %v0_1000c4e4.pre, %dec_label_pc_1000c4bc.dec_label_pc_1000c4d4_crit_edge ], [ %v3_1000c4d0, %dec_label_pc_1000c4cc ]
  ret i32 %v0_1000c4e4

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000c4d4, { 1, 0 }
  uselistorder label %dec_label_pc_1000c4bc, { 1, 0 }
}

define i32 @function_1000c4e8() local_unnamed_addr {
dec_label_pc_1000c4e8:
  ret i32 0
}

define i32 @function_1000c4f0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000c4f0:
  %v0_1000c4f0 = load i32, i32* @r3, align 4
  ret i32 %v0_1000c4f0
}

define i32 @function_1000c4f4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000c4f4:
  store i32 %arg2, i32* @r30, align 4
  store i32 1, i32* @r4, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 268485912, i32* @lr, align 4
  %v1_1000c514 = call i32 @function_1000a85c(i32 1)
  %v3_1000c518 = icmp eq i32 %v1_1000c514, -1
  br i1 %v3_1000c518, label %dec_label_pc_1000c520, label %dec_label_pc_1000c540

dec_label_pc_1000c520:                            ; preds = %dec_label_pc_1000c4f4
  %v0_1000c524 = load i32, i32* @r30, align 4
  store i32 268485940, i32* @lr, align 4
  %v3_1000c530 = call i32 @function_1000aaf4(i32 ptrtoint ([10 x i8]* @global_var_1000dc24.512 to i32), i32 %v0_1000c524)
  %v1_1000c534 = load i32, i32* @r31, align 4
  %v4_1000c534 = icmp eq i32 %v3_1000c530, %v1_1000c534
  br i1 %v4_1000c534, label %dec_label_pc_1000c540, label %dec_label_pc_1000c53c

dec_label_pc_1000c53c:                            ; preds = %dec_label_pc_1000c520
  %v1_1000c53c = call i32 @function_1000d0f4(i32 %v3_1000c530)
  br label %dec_label_pc_1000c540

dec_label_pc_1000c540:                            ; preds = %dec_label_pc_1000c4f4, %dec_label_pc_1000c520, %dec_label_pc_1000c53c
  %v0_1000c550 = phi i32 [ %v1_1000c514, %dec_label_pc_1000c4f4 ], [ %v3_1000c530, %dec_label_pc_1000c520 ], [ %v1_1000c53c, %dec_label_pc_1000c53c ]
  ret i32 %v0_1000c550

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_1000aaf4, { 0, 3, 9, 8, 7, 6, 5, 4, 2, 1 }
  uselistorder i32 (i32)* @function_1000a85c, { 0, 9, 4, 3, 6, 5, 13, 12, 15, 14, 11, 10, 8, 7, 2, 1 }
  uselistorder label %dec_label_pc_1000c540, { 2, 1, 0 }
}

define i32 @function_1000c554(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000c554:
  %v3_1000c574 = load i32, i32* @global_var_1001e1d4.513, align 4
  %v3_1000c578 = icmp eq i32 %v3_1000c574, 0
  br i1 %v3_1000c578, label %dec_label_pc_1000c59c, label %dec_label_pc_1000c5c0

dec_label_pc_1000c59c:                            ; preds = %dec_label_pc_1000c554
  store i32 1, i32* @global_var_1001e1d4.513, align 4
  store i32 4096, i32* @global_var_1001e1c8.495, align 4
  br label %dec_label_pc_1000c5c0

dec_label_pc_1000c5c0:                            ; preds = %dec_label_pc_1000c59c, %dec_label_pc_1000c554
  %v0_1000c5d0 = load i32, i32* @r3, align 4
  ret i32 %v0_1000c5d0
}

define i32 @function_1000c5d4(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1000c5d4:
  %r25.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  %tmp25 = call i32 @__decompiler_undefined_function_0()
  %tmp26 = call i32 @__decompiler_undefined_function_0()
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  store i32 %tmp, i32* @r30, align 4
  %v1_1000c5ec = mul i32 %arg2, 4
  %v2_1000c5f0 = add i32 %tmp, %v1_1000c5ec
  %v0_1000c5f4 = load i32, i32* @r9, align 4
  store i32 %v0_1000c5f4, i32* @global_var_1001e1c0.515, align 4
  %v1_1000c5f8 = add i32 %v2_1000c5f0, 4
  store i32 268566528, i32* %r29.global-to-local, align 4
  store i32 %v1_1000c5f8, i32* @global_var_1001e1c4.516, align 4
  store i32 %arg6, i32* @global_var_1001e1d0.511, align 4
  store i32 %arg1, i32* %r25.global-to-local, align 4
  store i32 %arg4, i32* %r28.global-to-local, align 4
  %v2_1000c618 = load i32, i32* %arg3, align 4
  store i32 %arg5, i32* %r27.global-to-local, align 4
  %v4_1000c620 = icmp eq i32 %v1_1000c5f8, %v2_1000c618
  br i1 %v4_1000c620, label %dec_label_pc_1000c628, label %dec_label_pc_1000c62c

dec_label_pc_1000c628:                            ; preds = %dec_label_pc_1000c5d4
  store i32 %v2_1000c5f0, i32* @global_var_1001e1c4.516, align 4
  br label %dec_label_pc_1000c62c

dec_label_pc_1000c62c:                            ; preds = %dec_label_pc_1000c5d4, %dec_label_pc_1000c628
  %v2_1000c62c = ptrtoint i32* %stack_var_-168 to i32
  store i32 268486204, i32* @lr, align 4
  %v3_1000c638 = call i32 @function_1000b22c(i32 %v2_1000c62c, i32 0, i32 120)
  %storemerge.pre = load i32, i32* @global_var_1001e1c4.516, align 4
  br label %dec_label_pc_1000c648

dec_label_pc_1000c648:                            ; preds = %dec_label_pc_1000c648, %dec_label_pc_1000c62c
  %storemerge = phi i32 [ %storemerge.pre, %dec_label_pc_1000c62c ], [ %v1_1000c64c, %dec_label_pc_1000c648 ]
  %v1_1000c648 = inttoptr i32 %storemerge to i32*
  %v2_1000c648 = load i32, i32* %v1_1000c648, align 4
  %v1_1000c64c = add i32 %storemerge, 4
  %v3_1000c650 = icmp eq i32 %v2_1000c648, 0
  br i1 %v3_1000c650, label %dec_label_pc_1000c658, label %dec_label_pc_1000c648

dec_label_pc_1000c658:                            ; preds = %dec_label_pc_1000c648
  store i32 %v1_1000c64c, i32* %r29.global-to-local, align 4
  %v1_1000c68412 = inttoptr i32 %v1_1000c64c to i32*
  %v2_1000c68413 = load i32, i32* %v1_1000c68412, align 4
  %v3_1000c68816 = icmp eq i32 %v2_1000c68413, 0
  br i1 %v3_1000c68816, label %dec_label_pc_1000c690, label %dec_label_pc_1000c660

dec_label_pc_1000c660:                            ; preds = %dec_label_pc_1000c658, %dec_label_pc_1000c680
  %v0_1000c674 = phi i32 [ %v1_1000c680, %dec_label_pc_1000c680 ], [ %v1_1000c64c, %dec_label_pc_1000c658 ]
  %v0_1000c668 = phi i32 [ %v2_1000c684, %dec_label_pc_1000c680 ], [ %v2_1000c68413, %dec_label_pc_1000c658 ]
  %v2_1000c660 = icmp ugt i32 %v0_1000c668, 14
  br i1 %v2_1000c660, label %dec_label_pc_1000c680, label %dec_label_pc_1000c668

dec_label_pc_1000c668:                            ; preds = %dec_label_pc_1000c660
  %v1_1000c668 = mul i32 %v0_1000c668, 8
  %v2_1000c670 = add i32 %v1_1000c668, %v2_1000c62c
  store i32 %v2_1000c670, i32* @r3, align 4
  store i32 %v0_1000c674, i32* @r4, align 4
  store i32 8, i32* @r5, align 4
  store i32 268486272, i32* @lr, align 4
  %v0_1000c67c = call i32 @function_1000b0ec()
  %v0_1000c680.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000c680

dec_label_pc_1000c680:                            ; preds = %dec_label_pc_1000c660, %dec_label_pc_1000c668
  %v0_1000c680 = phi i32 [ %v0_1000c674, %dec_label_pc_1000c660 ], [ %v0_1000c680.pre, %dec_label_pc_1000c668 ]
  %v1_1000c680 = add i32 %v0_1000c680, 8
  store i32 %v1_1000c680, i32* %r29.global-to-local, align 4
  %v1_1000c684 = inttoptr i32 %v1_1000c680 to i32*
  %v2_1000c684 = load i32, i32* %v1_1000c684, align 4
  %v3_1000c688 = icmp eq i32 %v2_1000c684, 0
  br i1 %v3_1000c688, label %dec_label_pc_1000c690, label %dec_label_pc_1000c660

dec_label_pc_1000c690:                            ; preds = %dec_label_pc_1000c680, %dec_label_pc_1000c658
  %v1_1000c694 = call i32 @function_1000d244(i32 %v2_1000c62c)
  store i32 %v1_1000c694, i32* @r3, align 4
  store i32 268486300, i32* @lr, align 4
  %v1_1000c698 = call i32 @function_1000c554(i32 %v1_1000c694)
  %v3_1000c6a0 = icmp eq i32 %tmp27, 0
  br i1 %v3_1000c6a0, label %dec_label_pc_1000c6a8, label %dec_label_pc_1000c6ac

dec_label_pc_1000c6a8:                            ; preds = %dec_label_pc_1000c690
  br label %dec_label_pc_1000c6ac

dec_label_pc_1000c6ac:                            ; preds = %dec_label_pc_1000c690, %dec_label_pc_1000c6a8
  %v0_1000c6b4 = phi i32 [ %tmp27, %dec_label_pc_1000c690 ], [ 4096, %dec_label_pc_1000c6a8 ]
  store i32 %v0_1000c6b4, i32* @global_var_1001e1c8.495, align 4
  %v3_1000c6b8 = icmp eq i32 %tmp26, -1
  br i1 %v3_1000c6b8, label %dec_label_pc_1000c6c0, label %dec_label_pc_1000c6f4

dec_label_pc_1000c6c0:                            ; preds = %dec_label_pc_1000c6ac
  store i32 268486340, i32* @lr, align 4
  %v1_1000c6c0 = call i32 @function_1000cbf8(i32 268566528)
  store i32 %v1_1000c6c0, i32* %r29.global-to-local, align 4
  store i32 268486348, i32* @lr, align 4
  %v0_1000c6c8 = call i32 @function_1000cb68()
  %v4_1000c6cc = icmp eq i32 %v1_1000c6c0, %v0_1000c6c8
  br i1 %v4_1000c6cc, label %dec_label_pc_1000c6d4, label %dec_label_pc_1000c710

dec_label_pc_1000c6d4:                            ; preds = %dec_label_pc_1000c6c0
  store i32 268486360, i32* @lr, align 4
  %v1_1000c6d4 = call i32 @function_1000cbb0(i32 %v0_1000c6c8)
  store i32 %v1_1000c6d4, i32* %r29.global-to-local, align 4
  store i32 268486368, i32* @lr, align 4
  %v0_1000c6dc = call i32 @function_1000cb20()
  %v4_1000c6e0 = icmp eq i32 %v1_1000c6d4, %v0_1000c6dc
  br i1 %v4_1000c6e0, label %dec_label_pc_1000c6e8.thread, label %dec_label_pc_1000c710

dec_label_pc_1000c6e8.thread:                     ; preds = %dec_label_pc_1000c6d4
  br label %dec_label_pc_1000c740

dec_label_pc_1000c6f4:                            ; preds = %dec_label_pc_1000c6ac
  %v4_1000c6f8 = icmp eq i32 %tmp26, %tmp25
  br i1 %v4_1000c6f8, label %dec_label_pc_1000c700, label %dec_label_pc_1000c710

dec_label_pc_1000c700:                            ; preds = %dec_label_pc_1000c6f4
  br label %dec_label_pc_1000c710

dec_label_pc_1000c710:                            ; preds = %dec_label_pc_1000c700, %dec_label_pc_1000c6f4, %dec_label_pc_1000c6d4, %dec_label_pc_1000c6c0
  store i32 268486432, i32* @lr, align 4
  %v2_1000c71c = call i32 @function_1000c4f4(i32 0, i32 32768)
  store i32 268486448, i32* @lr, align 4
  %v2_1000c72c = call i32 @function_1000c4f4(i32 1, i32 32770)
  store i32 268486464, i32* @lr, align 4
  %v2_1000c73c = call i32 @function_1000c4f4(i32 2, i32 32770)
  br label %dec_label_pc_1000c740

dec_label_pc_1000c740:                            ; preds = %dec_label_pc_1000c6e8.thread, %dec_label_pc_1000c710
  %v0_1000c74c = load i32, i32* @r30, align 4
  %v1_1000c74c = inttoptr i32 %v0_1000c74c to i32*
  %v2_1000c74c = load i32, i32* %v1_1000c74c, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v2_1000c74c, i32* inttoptr (i32 268558708 to i32*), align 4
  %v0_1000c76c = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_1000c76c, i32* @global_var_1001e1cc.510, align 4
  br i1 false, label %dec_label_pc_1000c774, label %dec_label_pc_1000c7ec

dec_label_pc_1000c774:                            ; preds = %dec_label_pc_1000c740, %dec_label_pc_1000c774
  br i1 undef, label %dec_label_pc_1000c774, label %dec_label_pc_1000c7ec

dec_label_pc_1000c7ec:                            ; preds = %dec_label_pc_1000c774, %dec_label_pc_1000c740
  %v0_1000c798 = load i32, i32* %r28.global-to-local, align 4
  call void @__pseudo_call(i32 %v0_1000c798)
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_1000c7fc = call i32 @function_1000b0a8()
  %v2_1000c804 = inttoptr i32 %v0_1000c7fc to i32*
  store i32 0, i32* %v2_1000c804, align 4
  %v0_1000c830 = load i32, i32* %r25.global-to-local, align 4
  call void @__pseudo_call(i32 %v0_1000c830)
  %v0_1000c83c = call i32 @function_1000c1fc()
  ret i32 %v0_1000c83c

; uselistorder directives
  uselistorder i32 %v2_1000c684, { 1, 0 }
  uselistorder i32 %v1_1000c680, { 2, 1, 0 }
  uselistorder i32 %v1_1000c64c, { 0, 2, 1, 3 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v2_1000c62c, { 1, 0, 2 }
  uselistorder i32* %r29.global-to-local, { 1, 2, 3, 4, 6, 5, 0, 7 }
  uselistorder i32 ()* @function_1000c1fc, { 0, 2, 3, 1 }
  uselistorder i1 false, { 0, 6, 7, 8, 2, 3, 9, 10, 11, 12, 15, 13, 14, 4, 5, 1 }
  uselistorder i32 (i32, i32)* @function_1000c4f4, { 2, 1, 0 }
  uselistorder i32 4096, { 1, 3, 4, 0, 8, 5, 9, 6, 10, 7, 2 }
  uselistorder i32 14, { 18, 0, 4, 5, 6, 7, 8, 9, 1, 10, 11, 12, 2, 13, 14, 15, 16, 17, 3 }
  uselistorder i32* @r9, { 7, 1, 2, 3, 4, 5, 0, 6 }
  uselistorder label %dec_label_pc_1000c774, { 1, 0 }
  uselistorder label %dec_label_pc_1000c740, { 1, 0 }
  uselistorder label %dec_label_pc_1000c6ac, { 1, 0 }
  uselistorder label %dec_label_pc_1000c680, { 1, 0 }
  uselistorder label %dec_label_pc_1000c660, { 1, 0 }
  uselistorder label %dec_label_pc_1000c62c, { 1, 0 }
}

define i32 @function_1000c840(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000c840:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c858 = call i32 @__asm_mfcr()
  %v1_1000c85c = and i32 %v0_1000c858, 268435456
  %v3_1000c85c = icmp eq i32 %v1_1000c85c, 0
  store i32 %v0_1000c858, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c85c, label %dec_label_pc_1000c874, label %dec_label_pc_1000c868

dec_label_pc_1000c868:                            ; preds = %dec_label_pc_1000c840
  %v0_1000c868 = call i32 @function_1000b0a8()
  %v0_1000c86c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c86c = inttoptr i32 %v0_1000c868 to i32*
  store i32 %v0_1000c86c, i32* %v2_1000c86c, align 4
  br label %dec_label_pc_1000c874

dec_label_pc_1000c874:                            ; preds = %dec_label_pc_1000c840, %dec_label_pc_1000c868
  %v0_1000c884 = phi i32 [ %v0_1000c858, %dec_label_pc_1000c840 ], [ -1, %dec_label_pc_1000c868 ]
  ret i32 %v0_1000c884

; uselistorder directives
  uselistorder label %dec_label_pc_1000c874, { 1, 0 }
}

define i32 @function_1000c888(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000c888:
  %r31.global-to-local = alloca i32, align 4
  br label %dec_label_pc_1000c89c

dec_label_pc_1000c89c:                            ; preds = %dec_label_pc_1000c89c.backedge, %dec_label_pc_1000c888
  %v0_1000c8a8 = call i32 @__asm_mfcr()
  %v1_1000c8ac = and i32 %v0_1000c8a8, 268435456
  %v3_1000c8ac = icmp eq i32 %v1_1000c8ac, 0
  store i32 %v0_1000c8a8, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c8ac, label %dec_label_pc_1000c89c.backedge, label %dec_label_pc_1000c8b8

dec_label_pc_1000c8b8:                            ; preds = %dec_label_pc_1000c89c
  %v0_1000c8b8 = call i32 @function_1000b0a8()
  %v0_1000c8bc = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c8bc = inttoptr i32 %v0_1000c8b8 to i32*
  store i32 %v0_1000c8bc, i32* %v2_1000c8bc, align 4
  br label %dec_label_pc_1000c89c.backedge

dec_label_pc_1000c89c.backedge:                   ; preds = %dec_label_pc_1000c8b8, %dec_label_pc_1000c89c
  br label %dec_label_pc_1000c89c
}

define i32 @function_1000c8c4(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000c8c4:
  %stack_var_-104 = alloca i32, align 4
  %v2_1000c8d0 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_1000c8d0, i32* @r29, align 4
  %v0_1000c8d8 = load i32, i32* @r4, align 4
  store i32 %v0_1000c8d8, i32* @r30, align 4
  %v0_1000c8e8 = call i32 @__asm_mfcr()
  %v1_1000c8ec = and i32 %v0_1000c8e8, 268435456
  %v3_1000c8ec = icmp eq i32 %v1_1000c8ec, 0
  store i32 -1, i32* @r28, align 4
  store i32 %v0_1000c8e8, i32* @r31, align 4
  br i1 %v3_1000c8ec, label %dec_label_pc_1000c908, label %dec_label_pc_1000c8fc

dec_label_pc_1000c8fc:                            ; preds = %dec_label_pc_1000c8c4
  %v0_1000c8fc = call i32 @function_1000b0a8()
  %v0_1000c900 = load i32, i32* @r31, align 4
  %v2_1000c900 = inttoptr i32 %v0_1000c8fc to i32*
  store i32 %v0_1000c900, i32* %v2_1000c900, align 4
  br label %dec_label_pc_1000c920

dec_label_pc_1000c908:                            ; preds = %dec_label_pc_1000c8c4
  %v3_1000c908 = icmp eq i32 %v0_1000c8e8, 0
  store i32 %v0_1000c8e8, i32* @r28, align 4
  br i1 %v3_1000c908, label %dec_label_pc_1000c91c, label %dec_label_pc_1000c920

dec_label_pc_1000c91c:                            ; preds = %dec_label_pc_1000c908
  %v0_1000c910 = load i32, i32* @r30, align 4
  store i32 268486944, i32* @lr, align 4
  %v4_1000c91c = call i32 @function_1000ce8c(i32* nonnull %stack_var_-104, i32 %v0_1000c910, i32 0)
  br label %dec_label_pc_1000c920

dec_label_pc_1000c920:                            ; preds = %dec_label_pc_1000c908, %dec_label_pc_1000c8fc, %dec_label_pc_1000c91c
  %v0_1000c924 = load i32, i32* @r28, align 4
  ret i32 %v0_1000c924

; uselistorder directives
  uselistorder i32 %v0_1000c8e8, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1000c920, { 2, 0, 1 }
}

define i32 @function_1000c938(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000c938:
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r4, align 4
  %v0_1000c94c = call i32 @function_1000c9c8()
  store i32 %v0_1000c94c, i32* @r30, align 4
  %tmp18 = icmp slt i32 %v0_1000c94c, 1
  br i1 %tmp18, label %dec_label_pc_1000c9b0, label %dec_label_pc_1000c958

dec_label_pc_1000c958:                            ; preds = %dec_label_pc_1000c938
  %v0_1000c958 = load i32, i32* @r31, align 4
  %v2_1000c958 = add i32 %v0_1000c958, %v0_1000c94c
  store i32 %v2_1000c958, i32* %r29.global-to-local, align 4
  %v2_1000c9a03 = icmp ult i32 %v0_1000c958, %v2_1000c958
  br i1 %v2_1000c9a03, label %dec_label_pc_1000c960, label %dec_label_pc_1000c9b0

dec_label_pc_1000c960:                            ; preds = %dec_label_pc_1000c958, %dec_label_pc_1000c960
  %v1_1000c970 = phi i32 [ %v2_1000c99c, %dec_label_pc_1000c960 ], [ %v0_1000c958, %dec_label_pc_1000c958 ]
  %v1_1000c9a410.in = phi i32 [ %v2_1000c99c, %dec_label_pc_1000c960 ], [ %v0_1000c958, %dec_label_pc_1000c958 ]
  %v1_1000c9a811.in = phi i32 [ %v2_1000c99c, %dec_label_pc_1000c960 ], [ %v0_1000c958, %dec_label_pc_1000c958 ]
  %v1_1000c9a410 = add i32 %v1_1000c9a410.in, 11
  %v1_1000c9a811 = add i32 %v1_1000c9a811.in, 19
  %v1_1000c960 = add i32 %v1_1000c970, 4
  %v2_1000c960 = inttoptr i32 %v1_1000c960 to i32*
  %v3_1000c960 = load i32, i32* %v2_1000c960, align 4
  store i32 %v3_1000c960, i32* %r11.global-to-local, align 4
  %v1_1000c964 = add i32 %v1_1000c970, 12
  %v2_1000c964 = inttoptr i32 %v1_1000c964 to i32*
  %v3_1000c964 = load i32, i32* %v2_1000c964, align 4
  %v1_1000c968 = add i32 %v1_1000c970, 16
  %v2_1000c968 = inttoptr i32 %v1_1000c968 to i16*
  %v3_1000c968 = load i16, i16* %v2_1000c968, align 2
  %v4_1000c968 = zext i16 %v3_1000c968 to i32
  store i32 %v4_1000c968, i32* %r5.global-to-local, align 4
  %v1_1000c96c = add i32 %v1_1000c970, 18
  %v2_1000c96c = inttoptr i32 %v1_1000c96c to i8*
  %v3_1000c96c = load i8, i8* %v2_1000c96c, align 1
  %v4_1000c96c = zext i8 %v3_1000c96c to i32
  store i32 %v4_1000c96c, i32* %r9.global-to-local, align 4
  store i32 %v3_1000c964, i32* %v2_1000c960, align 4
  %v0_1000c974 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000c974 = load i32, i32* @r31, align 4
  %v2_1000c974 = inttoptr i32 %v1_1000c974 to i32*
  store i32 %v0_1000c974, i32* %v2_1000c974, align 4
  %v0_1000c978 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c978 = trunc i32 %v0_1000c978 to i8
  %v2_1000c978 = load i32, i32* @r31, align 4
  %v3_1000c978 = add i32 %v2_1000c978, 10
  %v4_1000c978 = inttoptr i32 %v3_1000c978 to i8*
  store i8 %v1_1000c978, i8* %v4_1000c978, align 1
  %v0_1000c97c = load i32, i32* %r5.global-to-local, align 4
  %v1_1000c97c = trunc i32 %v0_1000c97c to i16
  %v2_1000c97c = load i32, i32* @r31, align 4
  %v3_1000c97c = add i32 %v2_1000c97c, 8
  %v4_1000c97c = inttoptr i32 %v3_1000c97c to i16*
  store i16 %v1_1000c97c, i16* %v4_1000c97c, align 2
  %v0_1000c980 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000c980 = add i32 %v0_1000c980, -19
  store i32 %v1_1000c980, i32* %r5.global-to-local, align 4
  store i32 268487048, i32* @lr, align 4
  %v3_1000c984 = call i32 @function_1000b188(i32 %v1_1000c9a410, i32 %v1_1000c9a811, i32 %v1_1000c980)
  %v0_1000c988 = load i32, i32* @r31, align 4
  %v1_1000c988 = add i32 %v0_1000c988, 8
  %v2_1000c988 = inttoptr i32 %v1_1000c988 to i16*
  %v3_1000c988 = load i16, i16* %v2_1000c988, align 2
  %v4_1000c988 = zext i16 %v3_1000c988 to i32
  store i32 %v4_1000c988, i32* %r5.global-to-local, align 4
  store i32 268487064, i32* @lr, align 4
  %v3_1000c994 = call i32 @function_1000b188(i32 %v0_1000c988, i32 %v0_1000c988, i32 %v4_1000c988)
  %v0_1000c998 = load i32, i32* @r31, align 4
  %v1_1000c998 = add i32 %v0_1000c998, 8
  %v2_1000c998 = inttoptr i32 %v1_1000c998 to i16*
  %v3_1000c998 = load i16, i16* %v2_1000c998, align 2
  %v4_1000c998 = zext i16 %v3_1000c998 to i32
  %v2_1000c99c = add i32 %v4_1000c998, %v0_1000c998
  store i32 %v2_1000c99c, i32* @r31, align 4
  %v1_1000c9a0 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000c9a0 = icmp ult i32 %v2_1000c99c, %v1_1000c9a0
  br i1 %v2_1000c9a0, label %dec_label_pc_1000c960, label %dec_label_pc_1000c9a0.dec_label_pc_1000c9b0.loopexit_crit_edge

dec_label_pc_1000c9a0.dec_label_pc_1000c9b0.loopexit_crit_edge: ; preds = %dec_label_pc_1000c960
  %v0_1000c9b4.pre.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000c9b0

dec_label_pc_1000c9b0:                            ; preds = %dec_label_pc_1000c958, %dec_label_pc_1000c9a0.dec_label_pc_1000c9b0.loopexit_crit_edge, %dec_label_pc_1000c938
  %v0_1000c9b4 = phi i32 [ %v0_1000c94c, %dec_label_pc_1000c938 ], [ %v0_1000c9b4.pre.pre, %dec_label_pc_1000c9a0.dec_label_pc_1000c9b0.loopexit_crit_edge ], [ %v0_1000c94c, %dec_label_pc_1000c958 ]
  ret i32 %v0_1000c9b4

; uselistorder directives
  uselistorder i32 %v2_1000c99c, { 3, 4, 2, 0, 1 }
  uselistorder i32 %v0_1000c988, { 1, 0, 2 }
  uselistorder i32 %v1_1000c970, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1000c958, { 1, 0, 2, 4, 3 }
  uselistorder i32 %v0_1000c94c, { 1, 2, 0, 3, 4 }
  uselistorder i32 (i32, i32, i32)* @function_1000b188, { 7, 6, 5, 0, 4, 3, 2, 1 }
  uselistorder i32 11, { 0, 37, 30, 2, 8, 9, 16, 10, 11, 17, 12, 13, 18, 19, 31, 32, 33, 34, 35, 36, 1, 20, 14, 21, 22, 23, 24, 25, 3, 26, 27, 4, 28, 29, 15, 5, 6, 38, 39, 40, 41, 42, 43, 7 }
  uselistorder label %dec_label_pc_1000c9b0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000c960, { 1, 0 }
}

define i32 @function_1000c9c8() local_unnamed_addr {
dec_label_pc_1000c9c8:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1000c9cc = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_1000c9cc, i32* %stack_var_-48, align 4
  %v5_1000c9cc = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v4_1000c9cc, i32* %r9.global-to-local, align 4
  %v0_1000c9d8 = load i32, i32* @r5, align 4
  %v1_1000c9d8 = add i32 %v0_1000c9d8, 30
  %v1_1000c9dc = call i32 @__asm_rlwinm(i32 %v1_1000c9d8, i32 0, i32 0, i32 27)
  store i32 %v5_1000c9cc, i32* @r31, align 4
  %v1_1000c9ec = load i32, i32* @r1, align 4
  %v3_1000c9ec = sub i32 %v1_1000c9ec, %v1_1000c9dc
  %v4_1000c9ec = inttoptr i32 %v3_1000c9ec to i32*
  store i32 %v4_1000c9cc, i32* %v4_1000c9ec, align 4
  %v0_1000c9f0 = load i32, i32* @r4, align 4
  store i32 %v0_1000c9f0, i32* @r28, align 4
  %v0_1000c9f4 = load i32, i32* @r5, align 4
  store i32 %v0_1000c9f4, i32* @r23, align 4
  %v0_1000c9f8 = load i32, i32* @r3, align 4
  store i32 %v0_1000c9f8, i32* @r22, align 4
  %v1_1000c9fc = add i32 %v3_1000c9ec, 23
  %v1_1000ca00 = call i32 @__asm_rlwinm(i32 %v1_1000c9fc, i32 0, i32 0, i32 27)
  store i32 %v1_1000ca00, i32* @r27, align 4
  store i32 %v1_1000ca00, i32* %r4.global-to-local, align 4
  %v0_1000ca10 = call i32 @__asm_mfcr()
  %v1_1000ca14 = and i32 %v0_1000ca10, 268435456
  store i32 %v1_1000ca14, i32* %r9.global-to-local, align 4
  %v3_1000ca14 = icmp eq i32 %v1_1000ca14, 0
  store i32 %v0_1000ca10, i32* %r30.global-to-local, align 4
  br i1 %v3_1000ca14, label %dec_label_pc_1000ca2c, label %dec_label_pc_1000ca20

dec_label_pc_1000ca20:                            ; preds = %dec_label_pc_1000c9c8
  %v0_1000ca20 = call i32 @function_1000b0a8()
  %v0_1000ca24 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000ca24 = inttoptr i32 %v0_1000ca20 to i32*
  store i32 %v0_1000ca24, i32* %v2_1000ca24, align 4
  br label %dec_label_pc_1000ca38

dec_label_pc_1000ca2c:                            ; preds = %dec_label_pc_1000c9c8
  %v3_1000ca2c = icmp eq i32 %v0_1000ca10, -1
  store i32 %v0_1000ca10, i32* %r24.global-to-local, align 4
  br i1 %v3_1000ca2c, label %dec_label_pc_1000ca38, label %dec_label_pc_1000ca40

dec_label_pc_1000ca38:                            ; preds = %dec_label_pc_1000ca2c, %dec_label_pc_1000ca20
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000cb04

dec_label_pc_1000ca40:                            ; preds = %dec_label_pc_1000ca2c
  %v0_1000ca40 = load i32, i32* @r28, align 4
  store i32 %v0_1000ca40, i32* %r29.global-to-local, align 4
  store i32 %v1_1000ca00, i32* %r30.global-to-local, align 4
  store i32 -1, i32* @r25, align 4
  store i32 -1, i32* %r26.global-to-local, align 4
  %v2_1000cae812 = add i32 %v0_1000ca10, %v1_1000ca00
  %v1_1000caec13 = load i32, i32* @r23, align 4
  %v2_1000caec14 = add i32 %v1_1000caec13, %v0_1000ca40
  store i32 %v2_1000caec14, i32* %r10.global-to-local, align 4
  %v2_1000caf015 = icmp ult i32 %v1_1000ca00, %v2_1000cae812
  %v1_1000caf418 = add i32 %v0_1000ca40, 19
  store i32 %v1_1000caf418, i32* @r3, align 4
  %v1_1000caf819 = add i32 %v1_1000ca00, 19
  store i32 %v1_1000caf819, i32* @r4, align 4
  br i1 %v2_1000caf015, label %dec_label_pc_1000ca54, label %dec_label_pc_1000cb00

dec_label_pc_1000ca54:                            ; preds = %dec_label_pc_1000ca40, %dec_label_pc_1000ca9c
  %v0_1000ca5420 = phi i32 [ %v2_1000cae4, %dec_label_pc_1000ca9c ], [ %v1_1000ca00, %dec_label_pc_1000ca40 ]
  %v1_1000ca54 = add i32 %v0_1000ca5420, 16
  %v2_1000ca54 = inttoptr i32 %v1_1000ca54 to i16*
  %v3_1000ca54 = load i16, i16* %v2_1000ca54, align 2
  %v4_1000ca54 = zext i16 %v3_1000ca54 to i32
  %v1_1000ca58 = add nuw nsw i32 %v4_1000ca54, 7
  store i32 %v1_1000ca58, i32* %r9.global-to-local, align 4
  %v1_1000ca5c = call i32 @__asm_rlwinm(i32 %v1_1000ca58, i32 0, i32 0, i32 28)
  %v0_1000ca60 = load i32, i32* %r29.global-to-local, align 4
  %v3_1000ca60 = add i32 %v1_1000ca5c, %v0_1000ca60
  store i32 %v3_1000ca60, i32* %r11.global-to-local, align 4
  %v1_1000ca64 = load i32, i32* %r10.global-to-local, align 4
  %v3_1000ca64 = icmp ugt i32 %v3_1000ca60, %v1_1000ca64
  br i1 %v3_1000ca64, label %dec_label_pc_1000ca6c, label %dec_label_pc_1000ca9c

dec_label_pc_1000ca6c:                            ; preds = %dec_label_pc_1000ca54
  %v0_1000ca6c = load i32, i32* @r22, align 4
  %v0_1000ca70 = load i32, i32* @r25, align 4
  %v0_1000ca74 = load i32, i32* %r26.global-to-local, align 4
  store i32 268487296, i32* @lr, align 4
  %v4_1000ca7c = call i32 @function_1000cc40(i32 %v0_1000ca6c, i32 %v0_1000ca70, i32 %v0_1000ca74, i32 0)
  %v0_1000ca80 = load i32, i32* %r29.global-to-local, align 4
  %v1_1000ca80 = load i32, i32* @r28, align 4
  %v4_1000ca80 = icmp eq i32 %v0_1000ca80, %v1_1000ca80
  br i1 %v4_1000ca80, label %dec_label_pc_1000ca88, label %dec_label_pc_1000cb00

dec_label_pc_1000ca88:                            ; preds = %dec_label_pc_1000ca6c
  %v0_1000ca88 = call i32 @function_1000b0a8()
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_1000ca94 = inttoptr i32 %v0_1000ca88 to i32*
  store i32 22, i32* %v2_1000ca94, align 4
  %v0_1000cb08.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000cb04

dec_label_pc_1000ca9c:                            ; preds = %dec_label_pc_1000ca54
  %v2_1000ca5c = trunc i32 %v1_1000ca5c to i16
  %v0_1000ca9c = load i32, i32* %r30.global-to-local, align 4
  %v1_1000ca9c = inttoptr i32 %v0_1000ca9c to i32*
  %v2_1000ca9c = load i32, i32* %v1_1000ca9c, align 4
  store i32 %v2_1000ca9c, i32* %r9.global-to-local, align 4
  %v1_1000caa0 = add i32 %v0_1000ca9c, 4
  %v2_1000caa0 = inttoptr i32 %v1_1000caa0 to i32*
  %v3_1000caa0 = load i32, i32* %v2_1000caa0, align 4
  store i32 %v3_1000caa0, i32* %r10.global-to-local, align 4
  %v1_1000caa4 = add i32 %v0_1000ca9c, 8
  %v2_1000caa4 = inttoptr i32 %v1_1000caa4 to i32*
  %v3_1000caa4 = load i32, i32* %v2_1000caa4, align 4
  store i32 %v3_1000caa4, i32* @r25, align 4
  %v1_1000caa8 = add i32 %v0_1000ca9c, 12
  %v2_1000caa8 = inttoptr i32 %v1_1000caa8 to i32*
  %v3_1000caa8 = load i32, i32* %v2_1000caa8, align 4
  store i32 %v3_1000caa8, i32* %r26.global-to-local, align 4
  %v2_1000caac = inttoptr i32 %v0_1000ca60 to i32*
  store i32 %v2_1000ca9c, i32* %v2_1000caac, align 4
  %v0_1000cab0 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000cab0 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000cab0 = add i32 %v1_1000cab0, 4
  %v3_1000cab0 = inttoptr i32 %v2_1000cab0 to i32*
  store i32 %v0_1000cab0, i32* %v3_1000cab0, align 4
  %v0_1000cab4 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000cab4 = add i32 %v0_1000cab4, 8
  %v2_1000cab4 = inttoptr i32 %v1_1000cab4 to i32*
  %v3_1000cab4 = load i32, i32* %v2_1000cab4, align 4
  store i32 %v3_1000cab4, i32* %r9.global-to-local, align 4
  %v1_1000cab8 = add i32 %v0_1000cab4, 12
  %v2_1000cab8 = inttoptr i32 %v1_1000cab8 to i32*
  %v3_1000cab8 = load i32, i32* %v2_1000cab8, align 4
  store i32 %v3_1000cab8, i32* %r10.global-to-local, align 4
  %v3_1000cabc = load i32, i32* %r29.global-to-local, align 4
  %v4_1000cabc = add i32 %v3_1000cabc, 16
  %v5_1000cabc = inttoptr i32 %v4_1000cabc to i16*
  store i16 %v2_1000ca5c, i16* %v5_1000cabc, align 2
  %v0_1000cac0 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000cac0 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000cac0 = add i32 %v1_1000cac0, 8
  %v3_1000cac0 = inttoptr i32 %v2_1000cac0 to i32*
  store i32 %v0_1000cac0, i32* %v3_1000cac0, align 4
  %v0_1000cac4 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000cac4 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000cac4 = add i32 %v1_1000cac4, 12
  %v3_1000cac4 = inttoptr i32 %v2_1000cac4 to i32*
  store i32 %v0_1000cac4, i32* %v3_1000cac4, align 4
  %v0_1000cac8 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000cac8 = add i32 %v0_1000cac8, 18
  %v2_1000cac8 = inttoptr i32 %v1_1000cac8 to i8*
  %v3_1000cac8 = load i8, i8* %v2_1000cac8, align 1
  %v2_1000cacc = load i32, i32* %r29.global-to-local, align 4
  %v3_1000cacc = add i32 %v2_1000cacc, 18
  %v4_1000cacc = inttoptr i32 %v3_1000cacc to i8*
  store i8 %v3_1000cac8, i8* %v4_1000cacc, align 1
  %v0_1000cad0 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000cad0, i32* %r29.global-to-local, align 4
  %v0_1000cad4 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000cad4 = add i32 %v0_1000cad4, 16
  %v2_1000cad4 = inttoptr i32 %v1_1000cad4 to i16*
  %v3_1000cad4 = load i16, i16* %v2_1000cad4, align 2
  %v4_1000cad4 = zext i16 %v3_1000cad4 to i32
  %v1_1000cad8 = add nsw i32 %v4_1000cad4, -19
  store i32 %v1_1000cad8, i32* @r5, align 4
  store i32 268487392, i32* @lr, align 4
  %v0_1000cadc = call i32 @function_1000b0ec()
  %v0_1000cae0 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000cae0 = add i32 %v0_1000cae0, 16
  %v2_1000cae0 = inttoptr i32 %v1_1000cae0 to i16*
  %v3_1000cae0 = load i16, i16* %v2_1000cae0, align 2
  %v4_1000cae0 = zext i16 %v3_1000cae0 to i32
  %v2_1000cae4 = add i32 %v4_1000cae0, %v0_1000cae0
  store i32 %v2_1000cae4, i32* %r30.global-to-local, align 4
  %v1_1000cae8.pre = load i32, i32* %r24.global-to-local, align 4
  %v0_1000caec.pre = load i32, i32* @r28, align 4
  %v0_1000caf4.pre = load i32, i32* %r29.global-to-local, align 4
  %v2_1000cae8 = add i32 %v1_1000cae8.pre, %v1_1000ca00
  %v1_1000caec = load i32, i32* @r23, align 4
  %v2_1000caec = add i32 %v1_1000caec, %v0_1000caec.pre
  store i32 %v2_1000caec, i32* %r10.global-to-local, align 4
  %v2_1000caf0 = icmp ult i32 %v2_1000cae4, %v2_1000cae8
  %v1_1000caf4 = add i32 %v0_1000caf4.pre, 19
  store i32 %v1_1000caf4, i32* @r3, align 4
  %v1_1000caf8 = add i32 %v2_1000cae4, 19
  store i32 %v1_1000caf8, i32* @r4, align 4
  br i1 %v2_1000caf0, label %dec_label_pc_1000ca54, label %dec_label_pc_1000cb00

dec_label_pc_1000cb00:                            ; preds = %dec_label_pc_1000ca40, %dec_label_pc_1000ca9c, %dec_label_pc_1000ca6c
  %v1_1000cb00 = phi i32 [ %v0_1000ca80, %dec_label_pc_1000ca6c ], [ %v0_1000ca40, %dec_label_pc_1000ca40 ], [ %v0_1000caf4.pre, %dec_label_pc_1000ca9c ]
  %v0_1000cb00 = phi i32 [ %v1_1000ca80, %dec_label_pc_1000ca6c ], [ %v0_1000ca40, %dec_label_pc_1000ca40 ], [ %v0_1000caec.pre, %dec_label_pc_1000ca9c ]
  %v2_1000cb00 = sub i32 %v1_1000cb00, %v0_1000cb00
  store i32 %v2_1000cb00, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000cb04

dec_label_pc_1000cb04:                            ; preds = %dec_label_pc_1000ca88, %dec_label_pc_1000ca38, %dec_label_pc_1000cb00
  %v0_1000cb08 = phi i32 [ %v0_1000cb08.pre, %dec_label_pc_1000ca88 ], [ -1, %dec_label_pc_1000ca38 ], [ %v2_1000cb00, %dec_label_pc_1000cb00 ]
  %v0_1000cb04 = load i32, i32* @r1, align 4
  %v1_1000cb04 = inttoptr i32 %v0_1000cb04 to i32*
  %v2_1000cb04 = load i32, i32* %v1_1000cb04, align 4
  store i32 %v2_1000cb04, i32* %r11.global-to-local, align 4
  ret i32 %v0_1000cb08

; uselistorder directives
  uselistorder i32 %v2_1000cae4, { 2, 1, 3, 0 }
  uselistorder i32 %v0_1000ca9c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1000ca5c, { 1, 0 }
  uselistorder i32 %v0_1000ca10, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v1_1000ca00, { 4, 0, 1, 2, 3, 5, 6, 7 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32* %r30.global-to-local, { 0, 4, 1, 2, 3, 5, 6, 7, 8 }
  uselistorder i32* %r29.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9 }
  uselistorder i32* %r10.global-to-local, { 4, 0, 1, 2, 3, 5, 6 }
  uselistorder i32 18, { 12, 13, 14, 3, 4, 8, 5, 6, 9, 10, 0, 7, 11, 15, 16, 1, 17, 2, 18 }
  uselistorder i32 22, { 1, 2, 3, 4, 11, 5, 6, 7, 8, 10, 13, 14, 12, 9, 0 }
  uselistorder i32 7, { 37, 51, 13, 14, 32, 15, 16, 33, 17, 18, 34, 2, 1, 35, 36, 3, 52, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0, 28, 38, 4, 39, 5, 40, 41, 42, 6, 7, 43, 8, 44, 9, 45, 29, 46, 47, 10, 48, 49, 11, 50, 30, 53, 31, 54, 55, 12 }
  uselistorder i32 19, { 17, 18, 1, 2, 0, 14, 15, 16, 4, 7, 8, 11, 9, 10, 12, 13, 22, 3, 19, 20, 21, 5, 6 }
  uselistorder i32* @r25, { 3, 4, 5, 16, 17, 18, 19, 20, 1, 2, 6, 7, 8, 9, 0, 10, 11, 12, 13, 14, 15, 21 }
  uselistorder i32* @r27, { 27, 19, 20, 66, 67, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23, 21, 22, 1, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 0, 40, 41, 68, 69, 70, 71, 72, 73, 74, 75, 76 }
  uselistorder i32 23, { 6, 5, 9, 0, 1, 4, 7, 2, 8, 3 }
  uselistorder i32* @r22, { 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 1, 2, 3, 4, 14 }
  uselistorder i32* @r23, { 10, 0, 11, 19, 20, 21, 22, 23, 24, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 25 }
  uselistorder i32* @r1, { 9, 10, 4, 5, 13, 1, 14, 0, 11, 12, 8, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 6, 40, 7, 41, 32, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 2, 72, 3, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm, { 12, 13, 14, 37, 18, 26, 19, 27, 0, 39, 38, 1, 2, 3, 28, 29, 30, 31, 20, 21, 22, 23, 24, 25, 11, 15, 16, 17, 4, 6, 7, 5, 8, 9, 10, 32, 33, 35, 34, 36, 40 }
  uselistorder i32 27, { 1, 2, 3, 4, 5, 6, 0, 7, 8 }
  uselistorder i32 30, { 4, 15, 0, 8, 9, 10, 1, 5, 2, 6, 3, 7, 11, 12, 13, 14 }
  uselistorder label %dec_label_pc_1000cb04, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000cb00, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000ca54, { 1, 0 }
}

define i32 @function_1000cb20() local_unnamed_addr {
dec_label_pc_1000cb20:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000cb38 = call i32 @__asm_mfcr()
  %v1_1000cb3c = and i32 %v0_1000cb38, 268435456
  %v3_1000cb3c = icmp eq i32 %v1_1000cb3c, 0
  store i32 %v0_1000cb38, i32* %r31.global-to-local, align 4
  br i1 %v3_1000cb3c, label %dec_label_pc_1000cb54, label %dec_label_pc_1000cb48

dec_label_pc_1000cb48:                            ; preds = %dec_label_pc_1000cb20
  %v0_1000cb48 = call i32 @function_1000b0a8()
  %v0_1000cb4c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000cb4c = inttoptr i32 %v0_1000cb48 to i32*
  store i32 %v0_1000cb4c, i32* %v2_1000cb4c, align 4
  br label %dec_label_pc_1000cb54

dec_label_pc_1000cb54:                            ; preds = %dec_label_pc_1000cb20, %dec_label_pc_1000cb48
  %v0_1000cb64 = phi i32 [ %v0_1000cb38, %dec_label_pc_1000cb20 ], [ -1, %dec_label_pc_1000cb48 ]
  ret i32 %v0_1000cb64

; uselistorder directives
  uselistorder label %dec_label_pc_1000cb54, { 1, 0 }
}

define i32 @function_1000cb68() local_unnamed_addr {
dec_label_pc_1000cb68:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000cb80 = call i32 @__asm_mfcr()
  %v1_1000cb84 = and i32 %v0_1000cb80, 268435456
  %v3_1000cb84 = icmp eq i32 %v1_1000cb84, 0
  store i32 %v0_1000cb80, i32* %r31.global-to-local, align 4
  br i1 %v3_1000cb84, label %dec_label_pc_1000cb9c, label %dec_label_pc_1000cb90

dec_label_pc_1000cb90:                            ; preds = %dec_label_pc_1000cb68
  %v0_1000cb90 = call i32 @function_1000b0a8()
  %v0_1000cb94 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000cb94 = inttoptr i32 %v0_1000cb90 to i32*
  store i32 %v0_1000cb94, i32* %v2_1000cb94, align 4
  br label %dec_label_pc_1000cb9c

dec_label_pc_1000cb9c:                            ; preds = %dec_label_pc_1000cb68, %dec_label_pc_1000cb90
  %v0_1000cbac = phi i32 [ %v0_1000cb80, %dec_label_pc_1000cb68 ], [ -1, %dec_label_pc_1000cb90 ]
  ret i32 %v0_1000cbac

; uselistorder directives
  uselistorder label %dec_label_pc_1000cb9c, { 1, 0 }
}

define i32 @function_1000cbb0(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000cbb0:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000cbc8 = call i32 @__asm_mfcr()
  %v1_1000cbcc = and i32 %v0_1000cbc8, 268435456
  %v3_1000cbcc = icmp eq i32 %v1_1000cbcc, 0
  store i32 %v0_1000cbc8, i32* %r31.global-to-local, align 4
  br i1 %v3_1000cbcc, label %dec_label_pc_1000cbe4, label %dec_label_pc_1000cbd8

dec_label_pc_1000cbd8:                            ; preds = %dec_label_pc_1000cbb0
  %v0_1000cbd8 = call i32 @function_1000b0a8()
  %v0_1000cbdc = load i32, i32* %r31.global-to-local, align 4
  %v2_1000cbdc = inttoptr i32 %v0_1000cbd8 to i32*
  store i32 %v0_1000cbdc, i32* %v2_1000cbdc, align 4
  br label %dec_label_pc_1000cbe4

dec_label_pc_1000cbe4:                            ; preds = %dec_label_pc_1000cbb0, %dec_label_pc_1000cbd8
  %v0_1000cbf4 = phi i32 [ %v0_1000cbc8, %dec_label_pc_1000cbb0 ], [ -1, %dec_label_pc_1000cbd8 ]
  ret i32 %v0_1000cbf4

; uselistorder directives
  uselistorder label %dec_label_pc_1000cbe4, { 1, 0 }
}

define i32 @function_1000cbf8(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000cbf8:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000cc10 = call i32 @__asm_mfcr()
  %v1_1000cc14 = and i32 %v0_1000cc10, 268435456
  %v3_1000cc14 = icmp eq i32 %v1_1000cc14, 0
  store i32 %v0_1000cc10, i32* %r31.global-to-local, align 4
  br i1 %v3_1000cc14, label %dec_label_pc_1000cc2c, label %dec_label_pc_1000cc20

dec_label_pc_1000cc20:                            ; preds = %dec_label_pc_1000cbf8
  %v0_1000cc20 = call i32 @function_1000b0a8()
  %v0_1000cc24 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000cc24 = inttoptr i32 %v0_1000cc20 to i32*
  store i32 %v0_1000cc24, i32* %v2_1000cc24, align 4
  br label %dec_label_pc_1000cc2c

dec_label_pc_1000cc2c:                            ; preds = %dec_label_pc_1000cbf8, %dec_label_pc_1000cc20
  %v0_1000cc3c = phi i32 [ %v0_1000cc10, %dec_label_pc_1000cbf8 ], [ -1, %dec_label_pc_1000cc20 ]
  ret i32 %v0_1000cc3c

; uselistorder directives
  uselistorder label %dec_label_pc_1000cc2c, { 1, 0 }
}

define i32 @function_1000cc40(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000cc40:
  %r0.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_1000cc40 = load i32, i32* @lr, align 4
  store i32 140, i32* %r0.global-to-local, align 4
  %v0_1000cc6c = call i32 @__asm_mfcr()
  %v1_1000cc70 = and i32 %v0_1000cc6c, 268435456
  %v3_1000cc70 = icmp eq i32 %v1_1000cc70, 0
  store i32 %v0_1000cc6c, i32* %r31.global-to-local, align 4
  store i32 %v0_1000cc6c, i32* %r0.global-to-local, align 4
  br i1 %v3_1000cc70, label %dec_label_pc_1000cc94, label %dec_label_pc_1000cc84

dec_label_pc_1000cc84:                            ; preds = %dec_label_pc_1000cc40
  %v0_1000cc84 = call i32 @function_1000b0a8()
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_1000cc8c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000cc8c = inttoptr i32 %v0_1000cc84 to i32*
  store i32 %v0_1000cc8c, i32* %v2_1000cc8c, align 4
  %v0_1000cc98.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000cc98

dec_label_pc_1000cc94:                            ; preds = %dec_label_pc_1000cc40
  %v3_1000cc7c = icmp eq i32 %v0_1000cc6c, 0
  br i1 %v3_1000cc7c, label %dec_label_pc_1000cca4, label %dec_label_pc_1000cc98

dec_label_pc_1000cc98:                            ; preds = %dec_label_pc_1000cc94, %dec_label_pc_1000cc84
  %v0_1000cc98 = phi i32 [ %v0_1000cc6c, %dec_label_pc_1000cc94 ], [ %v0_1000cc98.pre, %dec_label_pc_1000cc84 ]
  %tmp = icmp slt i32 %v0_1000cc98, 0
  %v1_1000cc9c = zext i1 %tmp to i32
  %v2_1000cc9c = ashr i32 %v0_1000cc98, 31
  %v3_1000cc9c = and i32 %v2_1000cc9c, -2
  %v4_1000cc9c = or i32 %v3_1000cc9c, %v1_1000cc9c
  br label %dec_label_pc_1000ccac

dec_label_pc_1000cca4:                            ; preds = %dec_label_pc_1000cc94
  %v3_1000cca4 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1000ccac

dec_label_pc_1000ccac:                            ; preds = %dec_label_pc_1000cc98, %dec_label_pc_1000cca4
  %v0_1000ccbc = phi i32 [ %v4_1000cc9c, %dec_label_pc_1000cc98 ], [ %v3_1000cca4, %dec_label_pc_1000cca4 ]
  store i32 %v0_1000cc40, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000ccbc

; uselistorder directives
  uselistorder i32 %v0_1000cc98, { 1, 0 }
  uselistorder i32 %v0_1000cc6c, { 0, 3, 2, 1, 4 }
  uselistorder i32 -2, { 7, 6, 1, 0, 8, 9, 12, 10, 2, 11, 3, 13, 4, 5, 14, 15, 16, 17, 18, 19 }
  uselistorder label %dec_label_pc_1000ccac, { 1, 0 }
}

define i32 @function_1000ccc0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000ccc0:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000ccd8 = call i32 @__asm_mfcr()
  %v1_1000ccdc = and i32 %v0_1000ccd8, 268435456
  %v3_1000ccdc = icmp eq i32 %v1_1000ccdc, 0
  store i32 %v0_1000ccd8, i32* %r31.global-to-local, align 4
  br i1 %v3_1000ccdc, label %dec_label_pc_1000ccf4, label %dec_label_pc_1000cce8

dec_label_pc_1000cce8:                            ; preds = %dec_label_pc_1000ccc0
  %v0_1000cce8 = call i32 @function_1000b0a8()
  %v0_1000ccec = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ccec = inttoptr i32 %v0_1000cce8 to i32*
  store i32 %v0_1000ccec, i32* %v2_1000ccec, align 4
  br label %dec_label_pc_1000ccf4

dec_label_pc_1000ccf4:                            ; preds = %dec_label_pc_1000ccc0, %dec_label_pc_1000cce8
  %v0_1000cd04 = phi i32 [ %v0_1000ccd8, %dec_label_pc_1000ccc0 ], [ -1, %dec_label_pc_1000cce8 ]
  ret i32 %v0_1000cd04

; uselistorder directives
  uselistorder label %dec_label_pc_1000ccf4, { 1, 0 }
}

define i32 @function_1000cd08(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000cd08:
  store i32 %arg1, i32* @r30, align 4
  %v3_1000cd24 = load i32, i32* @global_var_1001e1ec.521, align 4
  %v3_1000cd28 = icmp eq i32 %v3_1000cd24, 0
  br i1 %v3_1000cd28, label %dec_label_pc_1000cd30, label %dec_label_pc_1000cd3c

dec_label_pc_1000cd30:                            ; preds = %dec_label_pc_1000cd08
  store i32 268487988, i32* @lr, align 4
  %v1_1000cd30 = call i32 @function_1000d260(i32 0)
  %v1_1000cd34 = icmp slt i32 %v1_1000cd30, 0
  br i1 %v1_1000cd34, label %dec_label_pc_1000cd5c, label %dec_label_pc_1000cd30.dec_label_pc_1000cd3c_crit_edge

dec_label_pc_1000cd30.dec_label_pc_1000cd3c_crit_edge: ; preds = %dec_label_pc_1000cd30
  %v0_1000cd3c.pre = load i32, i32* @r30, align 4
  %v3_1000cd40.pre = load i32, i32* @global_var_1001e1ec.521, align 4
  br label %dec_label_pc_1000cd3c

dec_label_pc_1000cd3c:                            ; preds = %dec_label_pc_1000cd30.dec_label_pc_1000cd3c_crit_edge, %dec_label_pc_1000cd08
  %v3_1000cd40 = phi i32 [ %v3_1000cd40.pre, %dec_label_pc_1000cd30.dec_label_pc_1000cd3c_crit_edge ], [ %v3_1000cd24, %dec_label_pc_1000cd08 ]
  %v1_1000cd48 = phi i32 [ %v0_1000cd3c.pre, %dec_label_pc_1000cd30.dec_label_pc_1000cd3c_crit_edge ], [ %arg1, %dec_label_pc_1000cd08 ]
  %v3_1000cd3c = icmp eq i32 %v1_1000cd48, 0
  store i32 %v3_1000cd40, i32* @r31, align 4
  br i1 %v3_1000cd3c, label %dec_label_pc_1000cd60, label %dec_label_pc_1000cd50

dec_label_pc_1000cd50:                            ; preds = %dec_label_pc_1000cd3c
  %v2_1000cd48 = add i32 %v1_1000cd48, %v3_1000cd40
  store i32 268488020, i32* @lr, align 4
  %v1_1000cd50 = call i32 @function_1000d260(i32 %v2_1000cd48)
  %tmp6 = icmp sgt i32 %v1_1000cd50, -1
  br i1 %tmp6, label %dec_label_pc_1000cd50.dec_label_pc_1000cd60_crit_edge, label %dec_label_pc_1000cd5c

dec_label_pc_1000cd50.dec_label_pc_1000cd60_crit_edge: ; preds = %dec_label_pc_1000cd50
  %v0_1000cd64.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000cd60

dec_label_pc_1000cd5c:                            ; preds = %dec_label_pc_1000cd50, %dec_label_pc_1000cd30
  store i32 -1, i32* @r31, align 4
  br label %dec_label_pc_1000cd60

dec_label_pc_1000cd60:                            ; preds = %dec_label_pc_1000cd50.dec_label_pc_1000cd60_crit_edge, %dec_label_pc_1000cd3c, %dec_label_pc_1000cd5c
  %v0_1000cd64 = phi i32 [ %v0_1000cd64.pre, %dec_label_pc_1000cd50.dec_label_pc_1000cd60_crit_edge ], [ %v3_1000cd40, %dec_label_pc_1000cd3c ], [ -1, %dec_label_pc_1000cd5c ]
  ret i32 %v0_1000cd64

; uselistorder directives
  uselistorder i32 %v3_1000cd40, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_1000d260, { 1, 0 }
  uselistorder label %dec_label_pc_1000cd60, { 2, 0, 1 }
}

define i32 @function_1000cd78(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000cd78:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000cd90 = call i32 @__asm_mfcr()
  %v1_1000cd94 = and i32 %v0_1000cd90, 268435456
  %v3_1000cd94 = icmp eq i32 %v1_1000cd94, 0
  store i32 %v0_1000cd90, i32* %r31.global-to-local, align 4
  br i1 %v3_1000cd94, label %dec_label_pc_1000cdac, label %dec_label_pc_1000cda0

dec_label_pc_1000cda0:                            ; preds = %dec_label_pc_1000cd78
  %v0_1000cda0 = call i32 @function_1000b0a8()
  %v0_1000cda4 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000cda4 = inttoptr i32 %v0_1000cda0 to i32*
  store i32 %v0_1000cda4, i32* %v2_1000cda4, align 4
  br label %dec_label_pc_1000cdac

dec_label_pc_1000cdac:                            ; preds = %dec_label_pc_1000cd78, %dec_label_pc_1000cda0
  %v0_1000cdbc = phi i32 [ %v0_1000cd90, %dec_label_pc_1000cd78 ], [ -1, %dec_label_pc_1000cda0 ]
  ret i32 %v0_1000cdbc

; uselistorder directives
  uselistorder label %dec_label_pc_1000cdac, { 1, 0 }
}

define i32 @function_1000cdc0(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000cdc0:
  %r10.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* %r28.global-to-local, align 4
  store i32 268488168, i32* @lr, align 4
  %v3_1000cde4 = call i32 @function_1000b22c(i32 %arg2, i32 0, i32 104)
  %v2_1000cde8 = load i32, i32* %arg1, align 4
  %v1_1000cdec = add i32 %tmp, 4
  %v2_1000cdec = inttoptr i32 %v1_1000cdec to i32*
  %v3_1000cdec = load i32, i32* %v2_1000cdec, align 4
  store i32 %v3_1000cdec, i32* %r10.global-to-local, align 4
  %v1_1000cdf0 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000cdf0 = inttoptr i32 %v1_1000cdf0 to i32*
  store i32 %v2_1000cde8, i32* %v2_1000cdf0, align 4
  %v0_1000cdf4 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000cdf4 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000cdf4 = add i32 %v1_1000cdf4, 4
  %v3_1000cdf4 = inttoptr i32 %v2_1000cdf4 to i32*
  store i32 %v0_1000cdf4, i32* %v3_1000cdf4, align 4
  %v0_1000cdf8 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000cdf8 = add i32 %v0_1000cdf8, 8
  %v2_1000cdf8 = inttoptr i32 %v1_1000cdf8 to i32*
  %v3_1000cdf8 = load i32, i32* %v2_1000cdf8, align 4
  %v1_1000cdfc = add i32 %v0_1000cdf8, 12
  %v2_1000cdfc = inttoptr i32 %v1_1000cdfc to i32*
  %v3_1000cdfc = load i32, i32* %v2_1000cdfc, align 4
  store i32 %v3_1000cdfc, i32* %r10.global-to-local, align 4
  %v1_1000ce00 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000ce00 = add i32 %v1_1000ce00, 8
  %v3_1000ce00 = inttoptr i32 %v2_1000ce00 to i32*
  store i32 %v3_1000cdf8, i32* %v3_1000ce00, align 4
  %v0_1000ce04 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000ce04 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000ce04 = add i32 %v1_1000ce04, 12
  %v3_1000ce04 = inttoptr i32 %v2_1000ce04 to i32*
  store i32 %v0_1000ce04, i32* %v3_1000ce04, align 4
  %v0_1000ce08 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000ce08 = add i32 %v0_1000ce08, 16
  %v2_1000ce08 = inttoptr i32 %v1_1000ce08 to i32*
  %v3_1000ce08 = load i32, i32* %v2_1000ce08, align 4
  %v1_1000ce0c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000ce0c = add i32 %v1_1000ce0c, 16
  %v3_1000ce0c = inttoptr i32 %v2_1000ce0c to i32*
  store i32 %v3_1000ce08, i32* %v3_1000ce0c, align 4
  %v0_1000ce10 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000ce10 = add i32 %v0_1000ce10, 20
  %v2_1000ce10 = inttoptr i32 %v1_1000ce10 to i32*
  %v3_1000ce10 = load i32, i32* %v2_1000ce10, align 4
  %v1_1000ce14 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000ce14 = add i32 %v1_1000ce14, 20
  %v3_1000ce14 = inttoptr i32 %v2_1000ce14 to i32*
  store i32 %v3_1000ce10, i32* %v3_1000ce14, align 4
  %v0_1000ce18 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000ce18 = add i32 %v0_1000ce18, 24
  %v2_1000ce18 = inttoptr i32 %v1_1000ce18 to i32*
  %v3_1000ce18 = load i32, i32* %v2_1000ce18, align 4
  %v1_1000ce1c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000ce1c = add i32 %v1_1000ce1c, 24
  %v3_1000ce1c = inttoptr i32 %v2_1000ce1c to i32*
  store i32 %v3_1000ce18, i32* %v3_1000ce1c, align 4
  %v0_1000ce20 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000ce20 = add i32 %v0_1000ce20, 28
  %v2_1000ce20 = inttoptr i32 %v1_1000ce20 to i32*
  %v3_1000ce20 = load i32, i32* %v2_1000ce20, align 4
  %v1_1000ce24 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000ce24 = add i32 %v1_1000ce24, 28
  %v3_1000ce24 = inttoptr i32 %v2_1000ce24 to i32*
  store i32 %v3_1000ce20, i32* %v3_1000ce24, align 4
  %v0_1000ce28 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000ce28 = add i32 %v0_1000ce28, 32
  %v2_1000ce28 = inttoptr i32 %v1_1000ce28 to i32*
  %v3_1000ce28 = load i32, i32* %v2_1000ce28, align 4
  %v1_1000ce2c = add i32 %v0_1000ce28, 36
  %v2_1000ce2c = inttoptr i32 %v1_1000ce2c to i32*
  %v3_1000ce2c = load i32, i32* %v2_1000ce2c, align 4
  store i32 %v3_1000ce2c, i32* %r10.global-to-local, align 4
  %v1_1000ce30 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000ce30 = add i32 %v1_1000ce30, 32
  %v3_1000ce30 = inttoptr i32 %v2_1000ce30 to i32*
  store i32 %v3_1000ce28, i32* %v3_1000ce30, align 4
  %v0_1000ce34 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000ce34 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000ce34 = add i32 %v1_1000ce34, 36
  %v3_1000ce34 = inttoptr i32 %v2_1000ce34 to i32*
  store i32 %v0_1000ce34, i32* %v3_1000ce34, align 4
  %v0_1000ce38 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000ce38 = add i32 %v0_1000ce38, 48
  %v2_1000ce38 = inttoptr i32 %v1_1000ce38 to i32*
  %v3_1000ce38 = load i32, i32* %v2_1000ce38, align 4
  %v1_1000ce3c = add i32 %v0_1000ce38, 52
  %v2_1000ce3c = inttoptr i32 %v1_1000ce3c to i32*
  %v3_1000ce3c = load i32, i32* %v2_1000ce3c, align 4
  store i32 %v3_1000ce3c, i32* %r10.global-to-local, align 4
  %v1_1000ce40 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000ce40 = add i32 %v1_1000ce40, 48
  %v3_1000ce40 = inttoptr i32 %v2_1000ce40 to i32*
  store i32 %v3_1000ce38, i32* %v3_1000ce40, align 4
  %v0_1000ce44 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000ce44 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000ce44 = add i32 %v1_1000ce44, 52
  %v3_1000ce44 = inttoptr i32 %v2_1000ce44 to i32*
  store i32 %v0_1000ce44, i32* %v3_1000ce44, align 4
  %v0_1000ce48 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000ce48 = add i32 %v0_1000ce48, 56
  %v2_1000ce48 = inttoptr i32 %v1_1000ce48 to i32*
  %v3_1000ce48 = load i32, i32* %v2_1000ce48, align 4
  %v1_1000ce4c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000ce4c = add i32 %v1_1000ce4c, 56
  %v3_1000ce4c = inttoptr i32 %v2_1000ce4c to i32*
  store i32 %v3_1000ce48, i32* %v3_1000ce4c, align 4
  %v0_1000ce50 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000ce50 = add i32 %v0_1000ce50, 64
  %v2_1000ce50 = inttoptr i32 %v1_1000ce50 to i32*
  %v3_1000ce50 = load i32, i32* %v2_1000ce50, align 4
  %v1_1000ce54 = add i32 %v0_1000ce50, 68
  %v2_1000ce54 = inttoptr i32 %v1_1000ce54 to i32*
  %v3_1000ce54 = load i32, i32* %v2_1000ce54, align 4
  store i32 %v3_1000ce54, i32* %r10.global-to-local, align 4
  %v1_1000ce58 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000ce58 = add i32 %v1_1000ce58, 64
  %v3_1000ce58 = inttoptr i32 %v2_1000ce58 to i32*
  store i32 %v3_1000ce50, i32* %v3_1000ce58, align 4
  %v0_1000ce5c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000ce5c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000ce5c = add i32 %v1_1000ce5c, 68
  %v3_1000ce5c = inttoptr i32 %v2_1000ce5c to i32*
  store i32 %v0_1000ce5c, i32* %v3_1000ce5c, align 4
  %v0_1000ce60 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000ce60 = add i32 %v0_1000ce60, 72
  %v2_1000ce60 = inttoptr i32 %v1_1000ce60 to i32*
  %v3_1000ce60 = load i32, i32* %v2_1000ce60, align 4
  %v1_1000ce64 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000ce64 = add i32 %v1_1000ce64, 72
  %v3_1000ce64 = inttoptr i32 %v2_1000ce64 to i32*
  store i32 %v3_1000ce60, i32* %v3_1000ce64, align 4
  %v0_1000ce68 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000ce68 = add i32 %v0_1000ce68, 80
  %v2_1000ce68 = inttoptr i32 %v1_1000ce68 to i32*
  %v3_1000ce68 = load i32, i32* %v2_1000ce68, align 4
  %v1_1000ce6c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000ce6c = add i32 %v1_1000ce6c, 80
  %v3_1000ce6c = inttoptr i32 %v2_1000ce6c to i32*
  store i32 %v3_1000ce68, i32* %v3_1000ce6c, align 4
  %v0_1000ce70 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000ce70 = add i32 %v0_1000ce70, 88
  %v2_1000ce70 = inttoptr i32 %v1_1000ce70 to i32*
  %v3_1000ce70 = load i32, i32* %v2_1000ce70, align 4
  %v1_1000ce74 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000ce74 = add i32 %v1_1000ce74, 88
  %v3_1000ce74 = inttoptr i32 %v2_1000ce74 to i32*
  store i32 %v3_1000ce70, i32* %v3_1000ce74, align 4
  ret i32 %v3_1000cde4

; uselistorder directives
  uselistorder i32* %r28.global-to-local, { 0, 1, 2, 3, 4, 10, 5, 6, 7, 8, 9, 11, 12 }
  uselistorder i32 80, { 1, 2, 3, 0 }
  uselistorder i32 104, { 0, 1, 4, 3, 5, 2, 6 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_1000ce8c(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000ce8c:
  %r0.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_1000ce90 = load i32, i32* @lr, align 4
  store i32 %v0_1000ce90, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %tmp, i32* @r28, align 4
  store i32 268488372, i32* @lr, align 4
  %v3_1000ceb0 = call i32 @function_1000b22c(i32 %arg2, i32 0, i32 88)
  %v0_1000ceb4 = load i32, i32* @r28, align 4
  %v1_1000ceb4 = inttoptr i32 %v0_1000ceb4 to i32*
  %v2_1000ceb4 = load i32, i32* %v1_1000ceb4, align 4
  store i32 %v2_1000ceb4, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v1_1000cebc = load i32, i32* @r29, align 4
  %v2_1000cebc = add i32 %v1_1000cebc, 4
  %v3_1000cebc = inttoptr i32 %v2_1000cebc to i32*
  store i32 %v2_1000ceb4, i32* %v3_1000cebc, align 4
  %v0_1000cec0 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000cec0 = load i32, i32* @r29, align 4
  %v2_1000cec0 = inttoptr i32 %v1_1000cec0 to i32*
  store i32 %v0_1000cec0, i32* %v2_1000cec0, align 4
  %v0_1000cec4 = load i32, i32* @r28, align 4
  %v1_1000cec4 = add i32 %v0_1000cec4, 4
  %v2_1000cec4 = inttoptr i32 %v1_1000cec4 to i32*
  %v3_1000cec4 = load i32, i32* %v2_1000cec4, align 4
  store i32 %v3_1000cec4, i32* %r0.global-to-local, align 4
  %v1_1000cec8 = load i32, i32* @r29, align 4
  %v2_1000cec8 = add i32 %v1_1000cec8, 12
  %v3_1000cec8 = inttoptr i32 %v2_1000cec8 to i32*
  store i32 %v3_1000cec4, i32* %v3_1000cec8, align 4
  %v0_1000cecc = load i32, i32* @r28, align 4
  %v1_1000cecc = add i32 %v0_1000cecc, 8
  %v2_1000cecc = inttoptr i32 %v1_1000cecc to i32*
  %v3_1000cecc = load i32, i32* %v2_1000cecc, align 4
  store i32 %v3_1000cecc, i32* %r0.global-to-local, align 4
  %v1_1000ced0 = load i32, i32* @r29, align 4
  %v2_1000ced0 = add i32 %v1_1000ced0, 16
  %v3_1000ced0 = inttoptr i32 %v2_1000ced0 to i32*
  store i32 %v3_1000cecc, i32* %v3_1000ced0, align 4
  %v0_1000ced4 = load i32, i32* @r28, align 4
  %v1_1000ced4 = add i32 %v0_1000ced4, 12
  %v2_1000ced4 = inttoptr i32 %v1_1000ced4 to i16*
  %v3_1000ced4 = load i16, i16* %v2_1000ced4, align 2
  %v4_1000ced4 = zext i16 %v3_1000ced4 to i32
  store i32 %v4_1000ced4, i32* %r0.global-to-local, align 4
  %v1_1000ced8 = load i32, i32* @r29, align 4
  %v2_1000ced8 = add i32 %v1_1000ced8, 20
  %v3_1000ced8 = inttoptr i32 %v2_1000ced8 to i32*
  store i32 %v4_1000ced4, i32* %v3_1000ced8, align 4
  %v0_1000cedc = load i32, i32* @r28, align 4
  %v1_1000cedc = add i32 %v0_1000cedc, 16
  %v2_1000cedc = inttoptr i32 %v1_1000cedc to i32*
  %v3_1000cedc = load i32, i32* %v2_1000cedc, align 4
  store i32 %v3_1000cedc, i32* %r0.global-to-local, align 4
  %v1_1000cee0 = load i32, i32* @r29, align 4
  %v2_1000cee0 = add i32 %v1_1000cee0, 24
  %v3_1000cee0 = inttoptr i32 %v2_1000cee0 to i32*
  store i32 %v3_1000cedc, i32* %v3_1000cee0, align 4
  %v0_1000cee4 = load i32, i32* @r28, align 4
  %v1_1000cee4 = add i32 %v0_1000cee4, 20
  %v2_1000cee4 = inttoptr i32 %v1_1000cee4 to i32*
  %v3_1000cee4 = load i32, i32* %v2_1000cee4, align 4
  store i32 %v3_1000cee4, i32* %r0.global-to-local, align 4
  %v1_1000cee8 = load i32, i32* @r29, align 4
  %v2_1000cee8 = add i32 %v1_1000cee8, 28
  %v3_1000cee8 = inttoptr i32 %v2_1000cee8 to i32*
  store i32 %v3_1000cee4, i32* %v3_1000cee8, align 4
  %v0_1000ceec = load i32, i32* @r28, align 4
  %v1_1000ceec = add i32 %v0_1000ceec, 24
  %v2_1000ceec = inttoptr i32 %v1_1000ceec to i32*
  %v3_1000ceec = load i32, i32* %v2_1000ceec, align 4
  store i32 %v3_1000ceec, i32* %r0.global-to-local, align 4
  %v0_1000cef0 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000cef0 = load i32, i32* @r29, align 4
  %v2_1000cef0 = add i32 %v1_1000cef0, 32
  %v3_1000cef0 = inttoptr i32 %v2_1000cef0 to i32*
  store i32 %v0_1000cef0, i32* %v3_1000cef0, align 4
  %v0_1000cef4 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000cef4 = load i32, i32* @r29, align 4
  %v2_1000cef4 = add i32 %v1_1000cef4, 36
  %v3_1000cef4 = inttoptr i32 %v2_1000cef4 to i32*
  store i32 %v0_1000cef4, i32* %v3_1000cef4, align 4
  %v0_1000cef8 = load i32, i32* @r28, align 4
  %v1_1000cef8 = add i32 %v0_1000cef8, 28
  %v2_1000cef8 = inttoptr i32 %v1_1000cef8 to i32*
  %v3_1000cef8 = load i32, i32* %v2_1000cef8, align 4
  store i32 %v3_1000cef8, i32* %r0.global-to-local, align 4
  %v1_1000cefc = load i32, i32* @r29, align 4
  %v2_1000cefc = add i32 %v1_1000cefc, 44
  %v3_1000cefc = inttoptr i32 %v2_1000cefc to i32*
  store i32 %v3_1000cef8, i32* %v3_1000cefc, align 4
  %v0_1000cf00 = load i32, i32* @r28, align 4
  %v1_1000cf00 = add i32 %v0_1000cf00, 32
  %v2_1000cf00 = inttoptr i32 %v1_1000cf00 to i32*
  %v3_1000cf00 = load i32, i32* %v2_1000cf00, align 4
  store i32 %v3_1000cf00, i32* %r0.global-to-local, align 4
  %v1_1000cf04 = load i32, i32* @r29, align 4
  %v2_1000cf04 = add i32 %v1_1000cf04, 48
  %v3_1000cf04 = inttoptr i32 %v2_1000cf04 to i32*
  store i32 %v3_1000cf00, i32* %v3_1000cf04, align 4
  %v0_1000cf08 = load i32, i32* @r28, align 4
  %v1_1000cf08 = add i32 %v0_1000cf08, 36
  %v2_1000cf08 = inttoptr i32 %v1_1000cf08 to i32*
  %v3_1000cf08 = load i32, i32* %v2_1000cf08, align 4
  store i32 %v3_1000cf08, i32* %r0.global-to-local, align 4
  %v1_1000cf0c = load i32, i32* @r29, align 4
  %v2_1000cf0c = add i32 %v1_1000cf0c, 52
  %v3_1000cf0c = inttoptr i32 %v2_1000cf0c to i32*
  store i32 %v3_1000cf08, i32* %v3_1000cf0c, align 4
  %v0_1000cf10 = load i32, i32* @r28, align 4
  %v1_1000cf10 = add i32 %v0_1000cf10, 40
  %v2_1000cf10 = inttoptr i32 %v1_1000cf10 to i32*
  %v3_1000cf10 = load i32, i32* %v2_1000cf10, align 4
  store i32 %v3_1000cf10, i32* %r0.global-to-local, align 4
  %v1_1000cf14 = load i32, i32* @r29, align 4
  %v2_1000cf14 = add i32 %v1_1000cf14, 56
  %v3_1000cf14 = inttoptr i32 %v2_1000cf14 to i32*
  store i32 %v3_1000cf10, i32* %v3_1000cf14, align 4
  %v0_1000cf18 = load i32, i32* @r28, align 4
  %v1_1000cf18 = add i32 %v0_1000cf18, 48
  %v2_1000cf18 = inttoptr i32 %v1_1000cf18 to i32*
  %v3_1000cf18 = load i32, i32* %v2_1000cf18, align 4
  store i32 %v3_1000cf18, i32* %r0.global-to-local, align 4
  %v1_1000cf1c = load i32, i32* @r29, align 4
  %v2_1000cf1c = add i32 %v1_1000cf1c, 64
  %v3_1000cf1c = inttoptr i32 %v2_1000cf1c to i32*
  store i32 %v3_1000cf18, i32* %v3_1000cf1c, align 4
  %v0_1000cf20 = load i32, i32* @r28, align 4
  %v1_1000cf20 = add i32 %v0_1000cf20, 56
  %v2_1000cf20 = inttoptr i32 %v1_1000cf20 to i32*
  %v3_1000cf20 = load i32, i32* %v2_1000cf20, align 4
  %v1_1000cf24 = load i32, i32* @r29, align 4
  %v2_1000cf24 = add i32 %v1_1000cf24, 72
  %v3_1000cf24 = inttoptr i32 %v2_1000cf24 to i32*
  store i32 %v3_1000cf20, i32* %v3_1000cf24, align 4
  store i32 %v0_1000ce90, i32* %r0.global-to-local, align 4
  ret i32 %v3_1000ceb0

; uselistorder directives
  uselistorder i32 72, { 2, 0, 1 }
  uselistorder i32 64, { 16, 12, 13, 2, 20, 11, 18, 0, 1, 19, 14, 15, 3, 4, 17, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 56, { 3, 4, 0, 1, 2, 13, 14, 15, 16, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32 40, { 9, 0, 4, 1, 21, 10, 3, 2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 6, 22, 7, 23, 5, 24, 25, 8, 26 }
  uselistorder i32 52, { 4, 1, 2, 3, 5, 6, 0, 7 }
  uselistorder i32 48, { 6, 7, 3, 4, 8, 0, 10, 1, 2, 5, 9 }
  uselistorder i32 36, { 6, 7, 3, 4, 5, 1, 8, 2, 9, 10, 11, 12, 13, 0, 14 }
  uselistorder i32 24, { 7, 8, 4, 5, 1, 2, 6, 70, 71, 72, 73, 74, 75, 59, 60, 61, 62, 63, 65, 66, 67, 68, 64, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 69, 3, 76, 77, 78, 0 }
  uselistorder i32 20, { 19, 20, 15, 16, 17, 18, 21, 22, 23, 24, 6, 76, 0, 1, 77, 2, 78, 25, 7, 26, 27, 28, 29, 30, 8, 31, 32, 33, 34, 35, 36, 37, 38, 9, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 10, 49, 50, 51, 52, 53, 54, 55, 56, 11, 57, 58, 59, 60, 61, 62, 12, 63, 64, 65, 66, 67, 68, 69, 70, 3, 13, 71, 72, 73, 4, 14, 74, 75, 79, 80, 81, 82, 83, 84, 5 }
  uselistorder i32 16, { 65, 66, 55, 56, 67, 68, 69, 70, 71, 17, 64, 60, 154, 155, 72, 73, 37, 38, 39, 57, 40, 41, 58, 59, 144, 145, 132, 42, 19, 134, 20, 135, 141, 15, 0, 16, 1, 2, 142, 3, 133, 63, 43, 61, 62, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 21, 136, 137, 138, 139, 140, 4, 22, 74, 5, 6, 75, 76, 77, 23, 78, 79, 80, 81, 82, 83, 84, 24, 85, 86, 87, 26, 88, 25, 89, 90, 28, 91, 92, 7, 93, 94, 95, 27, 96, 97, 30, 98, 99, 100, 101, 102, 29, 34, 103, 104, 105, 8, 106, 107, 9, 10, 18, 109, 108, 31, 33, 32, 110, 111, 11, 112, 35, 113, 114, 115, 12, 116, 119, 120, 117, 118, 121, 122, 13, 123, 36, 124, 125, 126, 14, 127, 130, 131, 128, 129, 143, 54, 146, 147, 148, 149, 150, 151, 152, 153 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_1000cf3c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_1000cf3c:
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  store i32 %arg1, i32* @r28, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 268488536, i32* @lr, align 4
  %v0_1000cf54 = call i32 @function_1000b0ec()
  %v0_1000cf5c = load i32, i32* @r28, align 4
  %v1_1000cf5c = load i32, i32* @r29, align 4
  %v2_1000cf5c = add i32 %v1_1000cf5c, %v0_1000cf5c
  ret i32 %v2_1000cf5c

; uselistorder directives
  uselistorder i32* @r28, { 11, 12, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 1, 49, 50, 51, 52, 53, 54, 312, 313, 314, 315, 316, 2, 25, 26, 27, 10, 28, 215, 216, 217, 218, 219, 220, 221, 222, 223, 285, 286, 287, 298, 13, 14, 15, 16, 17, 55, 56, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 4, 242, 3, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 281, 282, 283, 284, 275, 5, 276, 277, 278, 279, 280, 6, 23, 18, 0, 19, 20, 21, 22, 24, 29, 30, 31, 32, 33, 34, 57, 58, 59, 60, 61, 62, 63, 7, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 290, 288, 289, 291, 292, 9, 293, 294, 295, 296, 297, 8, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311 }
}

define i32 @function_1000cf70(i8* %arg1) local_unnamed_addr {
dec_label_pc_1000cf70:
  %r5.global-to-local = alloca i32, align 4
  %v3_1000cf70 = icmp eq i8* %arg1, null
  br i1 %v3_1000cf70, label %dec_label_pc_1000d028, label %dec_label_pc_1000cf78

dec_label_pc_1000cf78:                            ; preds = %dec_label_pc_1000cf70
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_1000cf8c.pre = load i32, i32* bitcast (i32** @global_var_1001e17c.503 to i32*), align 4
  br label %dec_label_pc_1000cf88

dec_label_pc_1000cf88:                            ; preds = %dec_label_pc_1000cf78, %dec_label_pc_1000d000
  %v0_1000d000 = phi i32 [ 0, %dec_label_pc_1000cf78 ], [ %v2_1000d008, %dec_label_pc_1000d000 ]
  %v0_1000d004 = phi i32 [ 1, %dec_label_pc_1000cf78 ], [ %v1_1000d004, %dec_label_pc_1000d000 ]
  %v0_1000cf88 = phi i32 [ %tmp, %dec_label_pc_1000cf78 ], [ %v0_1000cf883, %dec_label_pc_1000d000 ]
  %v1_1000cf88 = inttoptr i32 %v0_1000cf88 to i8*
  %v2_1000cf88 = load i8, i8* %v1_1000cf88, align 1
  %v3_1000cf88 = zext i8 %v2_1000cf88 to i32
  %v1_1000cf90 = mul nuw nsw i32 %v3_1000cf88, 2
  %v2_1000cf94 = add i32 %v1_1000cf90, %v3_1000cf8c.pre
  %v3_1000cf94 = inttoptr i32 %v2_1000cf94 to i16*
  %v4_1000cf94 = load i16, i16* %v3_1000cf94, align 2
  %v1_1000cf98 = and i16 %v4_1000cf94, 8
  %v3_1000cf98 = icmp eq i16 %v1_1000cf98, 0
  br i1 %v3_1000cf98, label %dec_label_pc_1000d028, label %dec_label_pc_1000cfa0

dec_label_pc_1000cfa0:                            ; preds = %dec_label_pc_1000cf88
  br label %dec_label_pc_1000cfb8

dec_label_pc_1000cfa8:                            ; preds = %dec_label_pc_1000cfb8
  %v1_1000cfbc = mul i32 %v1_1000d008, 10
  %v2_1000cfc4 = add i32 %v3_1000cfb8, %v1_1000cfbc
  %v1_1000cfa8 = add i32 %v2_1000cfc4, -48
  %v1_1000cfac = add i32 %v0_1000cff0, 1
  %v2_1000cfb0 = icmp sgt i32 %v1_1000cfa8, 255
  br i1 %v2_1000cfb0, label %dec_label_pc_1000d028, label %dec_label_pc_1000cfb8

dec_label_pc_1000cfb8:                            ; preds = %dec_label_pc_1000cfa8, %dec_label_pc_1000cfa0
  %v1_1000d008 = phi i32 [ %v1_1000cfa8, %dec_label_pc_1000cfa8 ], [ 0, %dec_label_pc_1000cfa0 ]
  %v0_1000cff0 = phi i32 [ %v1_1000cfac, %dec_label_pc_1000cfa8 ], [ %v0_1000cf88, %dec_label_pc_1000cfa0 ]
  %v1_1000cfb8 = inttoptr i32 %v0_1000cff0 to i8*
  %v2_1000cfb8 = load i8, i8* %v1_1000cfb8, align 1
  %v3_1000cfb8 = zext i8 %v2_1000cfb8 to i32
  %v1_1000cfc0 = mul nuw nsw i32 %v3_1000cfb8, 2
  %v2_1000cfc8 = add i32 %v1_1000cfc0, %v3_1000cf8c.pre
  %v3_1000cfc8 = inttoptr i32 %v2_1000cfc8 to i16*
  %v4_1000cfc8 = load i16, i16* %v3_1000cfc8, align 2
  %v5_1000cfc8 = zext i16 %v4_1000cfc8 to i32
  %v1_1000cfcc = and i32 %v5_1000cfc8, 8
  %v3_1000cfcc = icmp eq i32 %v1_1000cfcc, 0
  br i1 %v3_1000cfcc, label %dec_label_pc_1000cfd4, label %dec_label_pc_1000cfa8

dec_label_pc_1000cfd4:                            ; preds = %dec_label_pc_1000cfb8
  %v2_1000cfd4 = icmp sgt i32 %v0_1000d004, 3
  br i1 %v2_1000cfd4, label %dec_label_pc_1000cfec, label %dec_label_pc_1000cfdc

dec_label_pc_1000cfdc:                            ; preds = %dec_label_pc_1000cfd4
  %v3_1000cfdc = icmp eq i8 %v2_1000cfb8, 46
  br i1 %v3_1000cfdc, label %dec_label_pc_1000cfe4, label %dec_label_pc_1000d028

dec_label_pc_1000cfe4:                            ; preds = %dec_label_pc_1000cfdc
  %v1_1000cfe4 = add i32 %v0_1000cff0, 1
  br label %dec_label_pc_1000d000

dec_label_pc_1000cfec:                            ; preds = %dec_label_pc_1000cfd4
  %v3_1000cfec = icmp eq i8 %v2_1000cfb8, 0
  %v1_1000cff0 = add i32 %v0_1000cff0, 1
  br i1 %v3_1000cfec, label %dec_label_pc_1000d000, label %dec_label_pc_1000cff8

dec_label_pc_1000cff8:                            ; preds = %dec_label_pc_1000cfec
  %v1_1000cff8 = and i32 %v5_1000cfc8, 32
  %v3_1000cff8 = icmp eq i32 %v1_1000cff8, 0
  br i1 %v3_1000cff8, label %dec_label_pc_1000d028, label %dec_label_pc_1000d000

dec_label_pc_1000d000:                            ; preds = %dec_label_pc_1000cff8, %dec_label_pc_1000cfec, %dec_label_pc_1000cfe4
  %v0_1000cf883 = phi i32 [ %v1_1000cff0, %dec_label_pc_1000cff8 ], [ %v1_1000cff0, %dec_label_pc_1000cfec ], [ %v1_1000cfe4, %dec_label_pc_1000cfe4 ]
  %v1_1000d000 = mul i32 %v0_1000d000, 256
  %v1_1000d004 = add nuw nsw i32 %v0_1000d004, 1
  %v2_1000d008 = or i32 %v1_1000d008, %v1_1000d000
  store i32 %v2_1000d008, i32* %r5.global-to-local, align 4
  %tmp10 = icmp slt i32 %v1_1000d004, 5
  br i1 %tmp10, label %dec_label_pc_1000cf88, label %dec_label_pc_1000d014

dec_label_pc_1000d014:                            ; preds = %dec_label_pc_1000d000
  %v0_1000d014 = load i32, i32* @r4, align 4
  %v3_1000d014 = icmp eq i32 %v0_1000d014, 0
  %v0_1000d01c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000d014, i32 %v0_1000d01c)
  %v0_1000d020 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000d020 = load i32, i32* @r4, align 4
  %v2_1000d020 = inttoptr i32 %v1_1000d020 to i32*
  store i32 %v0_1000d020, i32* %v2_1000d020, align 4
  ret i32 1

dec_label_pc_1000d028:                            ; preds = %dec_label_pc_1000cfdc, %dec_label_pc_1000cff8, %dec_label_pc_1000cf88, %dec_label_pc_1000cfa8, %dec_label_pc_1000cf70
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_1000d008, { 1, 0 }
  uselistorder i32 %v1_1000d004, { 1, 0 }
  uselistorder i32 %v0_1000cff0, { 0, 1, 3, 2 }
  uselistorder i32 5, { 20, 3, 21, 22, 40, 58, 1, 23, 24, 25, 26, 27, 28, 29, 4, 5, 59, 0, 41, 42, 2, 43, 30, 31, 32, 33, 34, 44, 6, 8, 45, 7, 46, 11, 47, 10, 48, 9, 35, 49, 12, 14, 50, 36, 51, 13, 37, 52, 15, 38, 53, 17, 54, 16, 39, 55, 19, 56, 18, 57, 60, 61, 62, 63, 64 }
  uselistorder i8 0, { 4, 12, 13, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0, 24, 25, 26, 27, 28, 30, 32, 29, 1, 31, 2, 33, 34, 5, 9, 35, 36, 37, 38, 39, 40, 41, 42, 3, 43, 44, 45, 46, 6, 47, 48, 49, 50, 52, 53, 54, 55, 51, 58, 66, 67, 59, 60, 61, 62, 56, 57, 11, 63, 64, 65, 10, 7, 68, 69, 70, 71, 72, 73, 74 }
  uselistorder i8 46, { 1, 2, 3, 0 }
  uselistorder i32 8, { 105, 54, 42, 43, 55, 56, 57, 58, 59, 60, 176, 179, 11, 174, 175, 13, 123, 122, 120, 121, 106, 107, 108, 124, 125, 126, 114, 115, 116, 3, 48, 49, 50, 4, 180, 5, 6, 177, 178, 61, 62, 63, 64, 127, 128, 32, 33, 44, 34, 35, 45, 36, 37, 46, 47, 7, 8, 9, 109, 110, 111, 17, 113, 112, 51, 52, 53, 18, 65, 66, 67, 68, 12, 69, 19, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 38, 82, 83, 84, 85, 86, 87, 88, 89, 90, 14, 91, 92, 93, 94, 15, 20, 95, 21, 96, 22, 97, 23, 98, 24, 99, 25, 100, 26, 101, 27, 102, 28, 103, 29, 104, 0, 1, 10, 117, 118, 39, 119, 2, 129, 130, 131, 132, 40, 133, 134, 135, 136, 137, 138, 41, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 145, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 30, 169, 16, 170, 171, 172, 173, 31 }
  uselistorder i32 -48, { 1, 0, 2 }
  uselistorder i32 10, { 72, 40, 15, 39, 3, 4, 7, 6, 0, 16, 17, 18, 31, 19, 20, 32, 21, 22, 33, 9, 8, 34, 35, 73, 74, 75, 76, 77, 23, 78, 79, 80, 10, 81, 38, 36, 5, 37, 2, 1, 24, 25, 26, 27, 11, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 28, 82, 83, 84, 85, 29, 86, 30, 13, 87, 14, 88 }
  uselistorder i16 0, { 0, 1, 2, 4, 5, 6, 7, 8, 3, 9, 10, 11 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1000d028, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_1000cf88, { 1, 0 }
}

define i32 @function_1000d030(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000d030:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-172 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_1000d034 = load i32, i32* @lr, align 4
  store i32 %v0_1000d034, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_1000d040 = icmp eq i32* %arg2, null
  store i32 %arg3, i32* @r30, align 4
  store i32 %arg1, i32* @r29, align 4
  %v1_1000d050 = add i32 %tmp, 4
  store i32 %v1_1000d050, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  %v2_1000d058 = ptrtoint i32* %stack_var_-300 to i32
  store i32 %v2_1000d058, i32* @r3, align 4
  br i1 %v3_1000d040, label %dec_label_pc_1000d080, label %dec_label_pc_1000d060

dec_label_pc_1000d060:                            ; preds = %dec_label_pc_1000d030
  %v2_1000d060 = load i32, i32* %arg2, align 4
  store i32 %v2_1000d060, i32* %r0.global-to-local, align 4
  store i32 268488812, i32* @lr, align 4
  %v0_1000d068 = call i32 @function_1000b0ec()
  %v0_1000d06c = load i32, i32* @r31, align 4
  %v1_1000d06c = add i32 %v0_1000d06c, 132
  %v2_1000d06c = inttoptr i32 %v1_1000d06c to i32*
  %v3_1000d06c = load i32, i32* %v2_1000d06c, align 4
  store i32 %v3_1000d06c, i32* %r0.global-to-local, align 4
  %v1_1000d078 = add i32 %v0_1000d06c, 136
  %v2_1000d078 = inttoptr i32 %v1_1000d078 to i32*
  %v3_1000d078 = load i32, i32* %v2_1000d078, align 4
  store i32 %v3_1000d078, i32* %r0.global-to-local, align 4
  %v0_1000d080.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000d080

dec_label_pc_1000d080:                            ; preds = %dec_label_pc_1000d030, %dec_label_pc_1000d060
  %v0_1000d080 = phi i32 [ %arg3, %dec_label_pc_1000d030 ], [ %v0_1000d080.pre, %dec_label_pc_1000d060 ]
  %v3_1000d080 = icmp eq i32 %v0_1000d080, 0
  %v2_1000d098 = ptrtoint i32* %stack_var_-172 to i32
  %.v2_1000d098 = select i1 %v3_1000d080, i32 0, i32 %v2_1000d098
  store i32 %.v2_1000d098, i32* @r5, align 4
  store i32 268488864, i32* @lr, align 4
  %v0_1000d09c = call i32 @function_1000d294()
  %v0_1000d0a0 = load i32, i32* @r30, align 4
  %v3_1000d0a0 = icmp eq i32 %v0_1000d0a0, 0
  store i32 %v0_1000d09c, i32* @r31, align 4
  br i1 %v3_1000d0a0, label %dec_label_pc_1000d0dc, label %dec_label_pc_1000d0b0

dec_label_pc_1000d0b0:                            ; preds = %dec_label_pc_1000d080
  %v1_1000d0a8 = icmp slt i32 %v0_1000d09c, 0
  %v1_1000d0b0 = add i32 %v0_1000d0a0, 4
  store i32 %v1_1000d0b0, i32* @r3, align 4
  %v2_1000d0b4 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_1000d0b4, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  br i1 %v1_1000d0a8, label %dec_label_pc_1000d0dc, label %dec_label_pc_1000d0c0

dec_label_pc_1000d0c0:                            ; preds = %dec_label_pc_1000d0b0
  %v3_1000d0c0 = load i32, i32* %stack_var_-172, align 4
  store i32 %v3_1000d0c0, i32* %r0.global-to-local, align 4
  %v2_1000d0c4 = inttoptr i32 %v0_1000d0a0 to i32*
  store i32 %v3_1000d0c0, i32* %v2_1000d0c4, align 4
  store i32 268488908, i32* @lr, align 4
  %v0_1000d0c8 = call i32 @function_1000b0ec()
  %v1_1000d0d4 = load i32, i32* @r30, align 4
  %v2_1000d0d4 = add i32 %v1_1000d0d4, 136
  %v3_1000d0d4 = inttoptr i32 %v2_1000d0d4 to i32*
  %v0_1000d0d8 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000d0d8 = load i32, i32* @r30, align 4
  %v2_1000d0d8 = add i32 %v1_1000d0d8, 132
  %v3_1000d0d8 = inttoptr i32 %v2_1000d0d8 to i32*
  store i32 %v0_1000d0d8, i32* %v3_1000d0d8, align 4
  %v0_1000d0e0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000d0dc

dec_label_pc_1000d0dc:                            ; preds = %dec_label_pc_1000d0b0, %dec_label_pc_1000d080, %dec_label_pc_1000d0c0
  %v0_1000d0e0 = phi i32 [ %v0_1000d09c, %dec_label_pc_1000d0b0 ], [ %v0_1000d09c, %dec_label_pc_1000d080 ], [ %v0_1000d0e0.pre, %dec_label_pc_1000d0c0 ]
  store i32 %v0_1000d034, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000d0e0

; uselistorder directives
  uselistorder i32 %v0_1000d09c, { 0, 1, 3, 2 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 4, 5, 6, 2 }
  uselistorder i32 136, { 1, 2, 0 }
  uselistorder i32 ()* @function_1000b0ec, { 2, 1, 8, 5, 0, 3, 7, 9, 4, 6 }
  uselistorder i32* @r5, { 25, 0, 26, 2, 13, 14, 15, 34, 20, 8, 9, 35, 36, 37, 38, 6, 29, 30, 1, 31, 32, 33, 16, 7, 27, 28, 3, 5, 4, 17, 21, 22, 23, 24, 19, 10, 11, 12, 18 }
  uselistorder i32 128, { 20, 21, 2, 8, 9, 7, 16, 17, 10, 18, 11, 19, 12, 14, 13, 15, 3, 0, 1, 4, 5, 6 }
  uselistorder i32* @r30, { 209, 210, 211, 0, 212, 1, 130, 2, 37, 38, 39, 213, 216, 214, 215, 131, 132, 133, 108, 109, 110, 111, 112, 134, 135, 139, 136, 137, 138, 7, 8, 9, 10, 11, 12, 13, 3, 14, 113, 114, 115, 122, 116, 117, 118, 4, 119, 120, 121, 20, 21, 22, 23, 24, 25, 26, 27, 28, 15, 16, 17, 18, 19, 29, 30, 31, 32, 33, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 5, 47, 48, 6, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 123, 125, 126, 124, 127, 128, 129, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 184, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 204, 207, 208 }
  uselistorder i32* null, { 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 44, 31, 32, 45, 33, 34, 35, 36, 2, 37, 38, 39, 40, 3, 41, 42, 4, 43, 5, 26, 27, 28, 29, 30 }
  uselistorder i32* @r31, { 2, 315, 316, 317, 253, 3, 254, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 324, 325, 318, 15, 319, 320, 321, 322, 323, 53, 54, 255, 256, 257, 258, 259, 260, 218, 219, 220, 221, 222, 223, 224, 225, 243, 244, 261, 265, 262, 263, 264, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 77, 4, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 226, 227, 228, 229, 92, 93, 94, 95, 96, 239, 240, 241, 230, 231, 232, 233, 234, 235, 236, 237, 238, 42, 43, 0, 44, 5, 45, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 46, 47, 48, 49, 50, 51, 52, 6, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 97, 98, 99, 100, 101, 102, 103, 104, 105, 1, 7, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 242, 8, 245, 246, 247, 248, 249, 250, 251, 252, 13, 266, 267, 268, 269, 9, 273, 274, 275, 276, 270, 271, 272, 277, 278, 279, 280, 281, 282, 283, 284, 14, 285, 286, 11, 287, 288, 289, 290, 291, 293, 10, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 12, 308, 309, 310, 311, 312, 313, 314 }
  uselistorder label %dec_label_pc_1000d0dc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000d080, { 1, 0 }
}

define i32 @function_1000d0f4(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000d128.lr.ph:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v0_1000d10c = call i32 @function_1000c4e8()
  %v2_1000d114 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_1000d114, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 31, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v3_1000d12c33 = add i32 %v2_1000d114, 124
  %v4_1000d12c34 = inttoptr i32 %v3_1000d12c33 to i32*
  store i32 0, i32* %v4_1000d12c34, align 4
  %v0_1000d13035 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000d13036 = add i32 %v0_1000d13035, -1
  store i32 %v1_1000d13036, i32* %r9.global-to-local, align 4
  %v0_1000d13437 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000d13438 = add i32 %v0_1000d13437, -1
  store i32 %v1_1000d13438, i32* %ctr.global-to-local, align 4
  %v2_1000d13439 = icmp eq i32 %v1_1000d13438, 0
  br i1 %v2_1000d13439, label %dec_label_pc_1000d138, label %dec_label_pc_1000d128.dec_label_pc_1000d128_crit_edge

dec_label_pc_1000d128.dec_label_pc_1000d128_crit_edge: ; preds = %dec_label_pc_1000d128.lr.ph, %dec_label_pc_1000d128.dec_label_pc_1000d128_crit_edge
  %v1_1000d13040 = phi i32 [ %v1_1000d130, %dec_label_pc_1000d128.dec_label_pc_1000d128_crit_edge ], [ %v1_1000d13036, %dec_label_pc_1000d128.lr.ph ]
  %v0_1000d12c.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_1000d12c.pre = load i32, i32* %r29.global-to-local, align 4
  %v1_1000d128 = mul i32 %v1_1000d13040, 4
  %v3_1000d12c = add i32 %v1_1000d128, %v1_1000d12c.pre
  %v4_1000d12c = inttoptr i32 %v3_1000d12c to i32*
  store i32 %v0_1000d12c.pre, i32* %v4_1000d12c, align 4
  %v0_1000d130 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000d130 = add i32 %v0_1000d130, -1
  store i32 %v1_1000d130, i32* %r9.global-to-local, align 4
  %v0_1000d134 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000d134 = add i32 %v0_1000d134, -1
  store i32 %v1_1000d134, i32* %ctr.global-to-local, align 4
  %v2_1000d134 = icmp eq i32 %v1_1000d134, 0
  br i1 %v2_1000d134, label %dec_label_pc_1000d138, label %dec_label_pc_1000d128.dec_label_pc_1000d128_crit_edge

dec_label_pc_1000d138:                            ; preds = %dec_label_pc_1000d128.dec_label_pc_1000d128_crit_edge, %dec_label_pc_1000d128.lr.ph
  store i32 %v2_1000d114, i32* @r3, align 4
  store i32 6, i32* @r4, align 4
  %v0_1000d140 = call i32 @function_1000b93c()
  %v3_1000d144 = icmp eq i32 %v0_1000d140, 0
  br i1 %v3_1000d144, label %dec_label_pc_1000d14c, label %dec_label_pc_1000d15c

dec_label_pc_1000d14c:                            ; preds = %dec_label_pc_1000d138
  store i32 268489052, i32* @lr, align 4
  %v3_1000d158 = call i32 @function_1000ace4(i32 1, i32 %v2_1000d114, i32 0)
  br label %dec_label_pc_1000d15c

dec_label_pc_1000d15c:                            ; preds = %dec_label_pc_1000d138, %dec_label_pc_1000d14c
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_1000d160 = load i32, i32* @global_var_1001e1e0.524, align 4
  %v3_1000d164 = icmp eq i32 %v3_1000d160, 0
  br i1 %v3_1000d164, label %dec_label_pc_1000d16c, label %dec_label_pc_1000d194

dec_label_pc_1000d16c:                            ; preds = %dec_label_pc_1000d15c
  store i32 1, i32* @global_var_1001e1e0.524, align 4
  br label %dec_label_pc_1000d174

dec_label_pc_1000d174:                            ; preds = %dec_label_pc_1000d1f0, %dec_label_pc_1000d16c
  store i32 ptrtoint (i32* @global_var_1001e148.522 to i32), i32* %r29.global-to-local, align 4
  %v0_1000d180 = call i32 @function_1000c4e8()
  store i32 268489100, i32* @lr, align 4
  %v1_1000d188 = call i32 @function_1000b78c(i32 6)
  %v0_1000d190 = call i32 @function_1000c4e8()
  %v3_1000d198.pre = load i32, i32* @global_var_1001e1e0.524, align 4
  br label %dec_label_pc_1000d194

dec_label_pc_1000d194:                            ; preds = %dec_label_pc_1000d15c, %dec_label_pc_1000d174
  %v0_1000d20c = phi i32 [ %v3_1000d160, %dec_label_pc_1000d15c ], [ %v3_1000d198.pre, %dec_label_pc_1000d174 ]
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_1000d19c = icmp eq i32 %v0_1000d20c, 1
  br i1 %v3_1000d19c, label %dec_label_pc_1000d1dc.lr.ph, label %dec_label_pc_1000d20c

dec_label_pc_1000d1dc.lr.ph:                      ; preds = %dec_label_pc_1000d194
  %v2_1000d1a8 = ptrtoint i32* %stack_var_-168 to i32
  store i32 2, i32* @global_var_1001e1e0.524, align 4
  store i32 ptrtoint (i32* @global_var_1000d1bc.526 to i32), i32* @lr, align 4
  %v3_1000d1b8 = call i32 @function_1000b22c(i32 %v2_1000d1a8, i32 0, i32 140)
  store i32 %v2_1000d114, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  store i32 0, i32* %stack_var_-168, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 %v3_1000d12c33, i32* %r9.global-to-local, align 4
  %v2_1000d1e425 = add i32 %v2_1000d114, 256
  %v3_1000d1e426 = inttoptr i32 %v2_1000d1e425 to i32*
  store i32 -1, i32* %v3_1000d1e426, align 4
  %v0_1000d1e827 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000d1e828 = add i32 %v0_1000d1e827, -1
  store i32 %v1_1000d1e828, i32* %r11.global-to-local, align 4
  %v0_1000d1ec29 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000d1ec30 = add i32 %v0_1000d1ec29, -1
  store i32 %v1_1000d1ec30, i32* %ctr.global-to-local, align 4
  %v2_1000d1ec31 = icmp eq i32 %v1_1000d1ec30, 0
  br i1 %v2_1000d1ec31, label %dec_label_pc_1000d1f0, label %dec_label_pc_1000d1dc.dec_label_pc_1000d1dc_crit_edge

dec_label_pc_1000d1dc.dec_label_pc_1000d1dc_crit_edge: ; preds = %dec_label_pc_1000d1dc.lr.ph, %dec_label_pc_1000d1dc.dec_label_pc_1000d1dc_crit_edge
  %v1_1000d1e832 = phi i32 [ %v1_1000d1e8, %dec_label_pc_1000d1dc.dec_label_pc_1000d1dc_crit_edge ], [ %v1_1000d1e828, %dec_label_pc_1000d1dc.lr.ph ]
  %v1_1000d1e0.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_1000d1e4.pre = load i32, i32* %r10.global-to-local, align 4
  %v1_1000d1dc = mul i32 %v1_1000d1e832, 4
  %v2_1000d1e0 = add i32 %v1_1000d1dc, %v1_1000d1e0.pre
  store i32 %v2_1000d1e0, i32* %r9.global-to-local, align 4
  %v2_1000d1e4 = add i32 %v2_1000d1e0, 132
  %v3_1000d1e4 = inttoptr i32 %v2_1000d1e4 to i32*
  store i32 %v0_1000d1e4.pre, i32* %v3_1000d1e4, align 4
  %v0_1000d1e8 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000d1e8 = add i32 %v0_1000d1e8, -1
  store i32 %v1_1000d1e8, i32* %r11.global-to-local, align 4
  %v0_1000d1ec = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000d1ec = add i32 %v0_1000d1ec, -1
  store i32 %v1_1000d1ec, i32* %ctr.global-to-local, align 4
  %v2_1000d1ec = icmp eq i32 %v1_1000d1ec, 0
  br i1 %v2_1000d1ec, label %dec_label_pc_1000d1f0, label %dec_label_pc_1000d1dc.dec_label_pc_1000d1dc_crit_edge

dec_label_pc_1000d1f0:                            ; preds = %dec_label_pc_1000d1dc.dec_label_pc_1000d1dc_crit_edge, %dec_label_pc_1000d1dc.lr.ph
  store i32 268489224, i32* @lr, align 4
  %v4_1000d204 = call i32 @function_1000d030(i32 6, i32* nonnull %stack_var_-168, i32 0)
  br label %dec_label_pc_1000d174

dec_label_pc_1000d20c:                            ; preds = %dec_label_pc_1000d194
  %v3_1000d20c = icmp eq i32 %v0_1000d20c, 2
  br i1 %v3_1000d20c, label %dec_label_pc_1000d214, label %dec_label_pc_1000d220

dec_label_pc_1000d214:                            ; preds = %dec_label_pc_1000d20c
  store i32 3, i32* @global_var_1001e1e0.524, align 4
  br label %dec_label_pc_1000d220

dec_label_pc_1000d220:                            ; preds = %dec_label_pc_1000d20c, %dec_label_pc_1000d214
  %v3_1000d220 = phi i32 [ %v0_1000d20c, %dec_label_pc_1000d20c ], [ 3, %dec_label_pc_1000d214 ]
  %v1_1000d228 = icmp ne i32 %v3_1000d220, 3
  call void @__pseudo_cond_branch(i1 %v1_1000d228, i32 268489276)
  store i32 4, i32* @global_var_1001e1e0.524, align 4
  %v1_1000d238 = call i32 @function_1000c888(i32 127)
  ret i32 %v1_1000d238

; uselistorder directives
  uselistorder i32 %v1_1000d1ec, { 1, 0 }
  uselistorder i32 %v1_1000d1e8, { 1, 0 }
  uselistorder i32 %v1_1000d134, { 1, 0 }
  uselistorder i32 %v1_1000d130, { 1, 0 }
  uselistorder i32 %v2_1000d114, { 0, 2, 3, 4, 1, 5 }
  uselistorder i32* %r9.global-to-local, { 4, 0, 5, 6, 8, 7, 1, 2, 3 }
  uselistorder i32* %r11.global-to-local, { 4, 3, 2, 0, 1, 5, 6 }
  uselistorder i32* %ctr.global-to-local, { 7, 6, 0, 2, 3, 9, 8, 1, 4, 5 }
  uselistorder i32 (i32)* @function_1000c888, { 1, 0 }
  uselistorder i32 127, { 0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 2, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i32 3, { 0, 6, 31, 86, 87, 99, 100, 52, 111, 110, 8, 116, 117, 118, 101, 102, 112, 113, 114, 115, 1, 7, 32, 33, 53, 88, 89, 90, 2, 91, 93, 94, 9, 34, 35, 10, 36, 37, 95, 96, 11, 38, 97, 12, 98, 92, 60, 39, 3, 82, 63, 64, 65, 40, 54, 55, 57, 58, 56, 59, 41, 42, 13, 61, 4, 62, 66, 15, 43, 5, 14, 67, 17, 68, 44, 16, 69, 70, 71, 18, 45, 19, 72, 73, 74, 20, 46, 21, 75, 76, 23, 47, 22, 77, 78, 48, 79, 24, 25, 26, 80, 81, 27, 49, 28, 83, 84, 29, 50, 30, 85, 103, 104, 105, 107, 106, 108, 51, 109 }
  uselistorder i32 (i32, i32*, i32)* @function_1000d030, { 1, 2, 0 }
  uselistorder i32 132, { 1, 2, 3, 0 }
  uselistorder i32 256, { 76, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 82, 83, 84, 13, 14, 15, 16, 17, 18, 19, 20, 85, 21, 22, 23, 0, 80, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 81, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 78, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 86, 87, 88, 75, 79 }
  uselistorder i32 (i32, i32, i32)* @function_1000b22c, { 1, 7, 10, 0, 3, 9, 8, 6, 5, 4, 2 }
  uselistorder i32 2, { 221, 41, 0, 1, 66, 67, 222, 68, 223, 69, 224, 29, 2, 3, 4, 42, 125, 137, 225, 126, 30, 70, 43, 71, 32, 31, 33, 72, 73, 122, 74, 75, 123, 124, 76, 209, 44, 5, 6, 210, 211, 39, 212, 77, 45, 46, 78, 47, 215, 79, 136, 8, 7, 81, 80, 82, 34, 199, 139, 86, 127, 85, 128, 84, 129, 83, 48, 130, 9, 10, 11, 131, 87, 88, 89, 90, 132, 133, 134, 28, 135, 91, 92, 94, 93, 95, 50, 49, 96, 97, 98, 35, 40, 138, 213, 12, 36, 214, 13, 140, 141, 142, 143, 144, 145, 146, 99, 147, 148, 51, 149, 150, 151, 152, 153, 101, 154, 100, 155, 156, 157, 158, 159, 160, 161, 162, 102, 163, 52, 103, 104, 164, 165, 105, 106, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 14, 15, 16, 17, 18, 19, 107, 176, 53, 177, 178, 179, 180, 181, 20, 21, 22, 23, 24, 25, 108, 182, 54, 183, 184, 185, 186, 187, 188, 109, 189, 110, 190, 55, 191, 192, 193, 195, 196, 197, 194, 111, 198, 56, 200, 201, 202, 112, 113, 204, 205, 206, 203, 114, 207, 57, 208, 37, 216, 116, 58, 217, 59, 60, 117, 61, 38, 62, 118, 63, 119, 64, 120, 65, 121, 218, 26, 27, 219, 115, 220 }
  uselistorder i32* @global_var_1001e1e0.524, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 268566528, { 39, 40, 0, 41, 2, 1, 3, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 4, 20, 5, 21, 22, 23, 37 }
  uselistorder i32 (i32, i32, i32)* @function_1000ace4, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 ()* @function_1000b93c, { 2, 1, 0, 4, 3 }
  uselistorder i32* @r4, { 81, 82, 83, 62, 63, 32, 1, 33, 7, 34, 91, 89, 5, 4, 84, 86, 87, 65, 85, 9, 6, 64, 10, 11, 12, 8, 90, 35, 36, 88, 13, 14, 15, 72, 69, 70, 71, 66, 67, 68, 24, 25, 26, 3, 56, 57, 58, 59, 38, 16, 17, 18, 19, 20, 21, 22, 23, 27, 28, 29, 30, 31, 37, 0, 2, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 60, 61, 73, 74, 75, 76, 77, 78, 79, 80 }
  uselistorder i32 6, { 13, 14, 71, 2, 15, 16, 39, 17, 68, 3, 0, 40, 1, 18, 19, 20, 21, 22, 23, 24, 25, 26, 4, 27, 28, 29, 30, 31, 32, 41, 33, 42, 43, 44, 5, 45, 46, 47, 6, 48, 49, 50, 51, 7, 8, 52, 53, 54, 34, 9, 55, 56, 35, 10, 57, 36, 58, 59, 60, 61, 37, 11, 62, 63, 64, 65, 66, 38, 12, 67, 69, 70 }
  uselistorder i32 4, { 145, 0, 1, 391, 392, 193, 194, 169, 170, 195, 196, 197, 400, 407, 2, 3, 4, 5, 6, 353, 355, 354, 351, 352, 312, 313, 314, 315, 356, 357, 358, 359, 340, 341, 342, 360, 361, 7, 172, 8, 79, 173, 174, 401, 402, 403, 146, 404, 405, 406, 9, 362, 147, 10, 393, 394, 395, 66, 67, 396, 397, 148, 398, 399, 11, 198, 199, 200, 201, 202, 149, 150, 171, 151, 316, 317, 318, 86, 78, 319, 320, 321, 80, 12, 323, 324, 325, 326, 322, 327, 69, 328, 68, 152, 81, 82, 83, 153, 84, 335, 336, 85, 337, 338, 339, 334, 329, 330, 331, 332, 333, 185, 13, 186, 14, 187, 188, 189, 70, 154, 190, 277, 203, 175, 155, 176, 88, 87, 89, 177, 178, 179, 180, 71, 181, 72, 182, 183, 184, 15, 75, 156, 157, 158, 16, 191, 192, 90, 76, 204, 205, 206, 17, 207, 208, 209, 210, 96, 211, 212, 18, 19, 95, 94, 213, 214, 20, 91, 93, 92, 215, 216, 21, 217, 218, 102, 219, 22, 23, 220, 101, 100, 221, 97, 222, 99, 98, 223, 224, 225, 109, 24, 25, 226, 227, 26, 228, 229, 230, 108, 27, 28, 104, 103, 231, 105, 107, 106, 232, 233, 234, 235, 236, 237, 159, 111, 110, 238, 239, 29, 240, 241, 242, 112, 243, 244, 30, 31, 114, 113, 245, 115, 117, 116, 246, 247, 32, 248, 249, 123, 250, 251, 33, 34, 122, 121, 252, 118, 120, 119, 253, 254, 255, 256, 35, 257, 258, 259, 260, 160, 261, 36, 262, 263, 37, 264, 126, 125, 265, 124, 161, 266, 267, 268, 269, 38, 271, 272, 162, 273, 274, 275, 132, 276, 39, 40, 163, 270, 131, 130, 127, 129, 128, 278, 279, 280, 281, 282, 164, 165, 41, 284, 285, 166, 286, 287, 288, 138, 289, 42, 43, 167, 283, 137, 136, 133, 135, 134, 44, 290, 291, 45, 46, 292, 293, 47, 48, 294, 295, 49, 50, 296, 297, 51, 52, 298, 299, 53, 300, 54, 301, 302, 55, 56, 303, 304, 57, 58, 305, 306, 59, 60, 307, 308, 61, 62, 309, 310, 63, 363, 311, 343, 344, 345, 346, 347, 348, 77, 349, 64, 350, 364, 365, 366, 367, 368, 369, 139, 370, 371, 372, 373, 374, 375, 140, 376, 377, 378, 141, 142, 379, 380, 143, 381, 382, 144, 383, 384, 385, 73, 386, 74, 65, 387, 388, 389, 390, 168 }
  uselistorder i32 32, { 24, 25, 58, 49, 50, 39, 40, 20, 21, 47, 48, 41, 0, 1, 2, 22, 61, 23, 62, 26, 27, 42, 3, 28, 4, 5, 6, 29, 59, 30, 60, 45, 7, 8, 9, 31, 46, 10, 11, 12, 13, 14, 32, 33, 43, 44, 51, 52, 53, 54, 55, 56, 57, 63, 64, 65, 66, 67, 15, 16, 34, 68, 35, 69, 36, 70, 17, 18, 19, 71, 72, 37, 38 }
  uselistorder i32 31, { 1, 2, 13, 36, 37, 3, 4, 0, 5, 40, 41, 30, 31, 38, 39, 14, 15, 32, 33, 34, 35, 22, 23, 26, 27, 28, 29, 11, 12, 16, 17, 18, 10, 24, 25, 6, 19, 7, 20, 8, 21, 9 }
  uselistorder i32 ()* @function_1000c4e8, { 3, 2, 1, 0, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 21, 20, 19 }
  uselistorder label %dec_label_pc_1000d220, { 1, 0 }
  uselistorder label %dec_label_pc_1000d1dc.dec_label_pc_1000d1dc_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000d194, { 1, 0 }
  uselistorder label %dec_label_pc_1000d15c, { 1, 0 }
  uselistorder label %dec_label_pc_1000d128.dec_label_pc_1000d128_crit_edge, { 1, 0 }
}

define i32 @function_1000d244(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000d244:
  %v1_1000d244 = add i32 %arg1, 28
  %v2_1000d244 = inttoptr i32 %v1_1000d244 to i32*
  %v3_1000d244 = load i32, i32* %v2_1000d244, align 4
  store i32 %v3_1000d244, i32* @global_var_1001e1e4.527, align 4
  %v1_1000d254 = add i32 %arg1, 44
  %v2_1000d254 = inttoptr i32 %v1_1000d254 to i32*
  %v3_1000d254 = load i32, i32* %v2_1000d254, align 4
  store i32 %v3_1000d254, i32* @global_var_1001e1e8.528, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 44, { 17, 5, 10, 11, 6, 7, 8, 9, 2, 12, 3, 13, 14, 15, 0, 1, 4, 16 }
  uselistorder i32 28, { 44, 8, 9, 2, 3, 10, 7, 34, 35, 37, 38, 39, 40, 36, 5, 6, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 0, 30, 31, 32, 1, 33, 41, 42, 43 }
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @function_1000d260(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000d260:
  store i32 %arg1, i32* @global_var_1001e1ec.521, align 4
  %v0_1000d288 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 true, i32 %v0_1000d288)
  %v1_1000d290 = call i32 @function_1000d2dc(i32 12)
  ret i32 %v1_1000d290

; uselistorder directives
  uselistorder i32 12, { 15, 42, 43, 31, 32, 44, 45, 46, 47, 105, 106, 107, 108, 6, 89, 109, 0, 1, 9, 90, 5, 16, 17, 10, 38, 48, 49, 18, 50, 51, 52, 19, 20, 33, 21, 22, 34, 23, 24, 35, 25, 26, 36, 37, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 104, 103, 99, 8, 39, 40, 41, 7, 27, 28, 29, 30, 102, 53, 11, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 12, 66, 67, 68, 69, 70, 71, 72, 13, 73, 74, 75, 76, 77, 78, 79, 80, 81, 14, 82, 83, 84, 85, 86, 87, 88, 2, 3, 4, 110, 111, 112 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 2, 10, 0, 3, 12, 11, 4, 5, 1, 6, 7, 8, 9 }
  uselistorder i1 true, { 1, 0 }
  uselistorder i32* @global_var_1001e1ec.521, { 1, 0, 2 }
}

define i32 @function_1000d294() local_unnamed_addr {
dec_label_pc_1000d294:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000d2ac = call i32 @__asm_mfcr()
  %v1_1000d2b0 = and i32 %v0_1000d2ac, 268435456
  %v3_1000d2b0 = icmp eq i32 %v1_1000d2b0, 0
  store i32 %v0_1000d2ac, i32* %r31.global-to-local, align 4
  br i1 %v3_1000d2b0, label %dec_label_pc_1000d2c8, label %dec_label_pc_1000d2bc

dec_label_pc_1000d2bc:                            ; preds = %dec_label_pc_1000d294
  %v0_1000d2bc = call i32 @function_1000b0a8()
  %v0_1000d2c0 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000d2c0 = inttoptr i32 %v0_1000d2bc to i32*
  store i32 %v0_1000d2c0, i32* %v2_1000d2c0, align 4
  br label %dec_label_pc_1000d2c8

dec_label_pc_1000d2c8:                            ; preds = %dec_label_pc_1000d294, %dec_label_pc_1000d2bc
  %v0_1000d2d8 = phi i32 [ %v0_1000d2ac, %dec_label_pc_1000d294 ], [ -1, %dec_label_pc_1000d2bc ]
  ret i32 %v0_1000d2d8

; uselistorder directives
  uselistorder i32 268435456, { 42, 36, 45, 31, 46, 47, 48, 49, 32, 33, 50, 51, 25, 30, 39, 52, 26, 40, 34, 35, 27, 53, 43, 37, 44, 38, 41, 28, 54, 55, 29, 2, 0, 1, 5, 3, 4, 8, 6, 7, 9, 10, 13, 11, 12, 16, 14, 15, 17, 20, 18, 19, 23, 21, 22, 24 }
  uselistorder i32 ()* @__asm_mfcr, { 14, 22, 11, 40, 10, 9, 8, 7, 39, 38, 6, 5, 4, 47, 41, 18, 3, 46, 17, 37, 36, 45, 2, 13, 20, 12, 19, 16, 44, 1, 0, 43, 42, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 21, 15 }
  uselistorder label %dec_label_pc_1000d2c8, { 1, 0 }
}

define i32 @function_1000d2dc(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000d2dc:
  store i32 %arg1, i32* @r29, align 4
  %v0_1000d2f0 = call i32 @function_1000b0a8()
  %v0_1000d2f4 = load i32, i32* @r29, align 4
  %v2_1000d2f4 = inttoptr i32 %v0_1000d2f0 to i32*
  store i32 %v0_1000d2f4, i32* %v2_1000d2f4, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 ()* @function_1000b0a8, { 25, 17, 31, 14, 40, 13, 12, 11, 10, 39, 38, 37, 9, 8, 3, 7, 6, 43, 42, 23, 24, 55, 54, 53, 52, 36, 35, 34, 51, 41, 20, 5, 4, 50, 19, 33, 32, 49, 2, 16, 27, 15, 26, 18, 48, 1, 0, 47, 30, 29, 46, 45, 44, 28, 22, 21 }
  uselistorder i32* @r29, { 299, 300, 312, 13, 14, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 313, 314, 315, 316, 317, 1, 39, 301, 302, 303, 304, 235, 236, 286, 2, 287, 288, 305, 306, 307, 308, 310, 311, 15, 16, 17, 60, 61, 62, 63, 64, 65, 66, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 271, 272, 273, 274, 275, 265, 266, 267, 268, 269, 270, 3, 30, 31, 32, 4, 33, 34, 35, 18, 0, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 36, 37, 38, 40, 41, 42, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 75, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 5, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 6, 152, 7, 153, 8, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 9, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 10, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 11, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 290, 289, 291, 292, 293, 12, 294, 295, 296, 297, 298, 309 }
}

define i32 @function_1000d310(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000d310:
  %r31.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1001e000.509 to i32), i32* %r31.global-to-local, align 4
  %v3_1000d32c = load i32, i32* @global_var_1001e000.509, align 4
  %v3_1000d330 = icmp eq i32 %v3_1000d32c, -1
  br i1 %v3_1000d330, label %dec_label_pc_1000d34c, label %dec_label_pc_1000d338

dec_label_pc_1000d338:                            ; preds = %dec_label_pc_1000d310, %dec_label_pc_1000d338
  %v0_1000d338 = phi i32 [ %v3_1000d340, %dec_label_pc_1000d338 ], [ %v3_1000d32c, %dec_label_pc_1000d310 ]
  call void @__pseudo_call(i32 %v0_1000d338)
  %v0_1000d340 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000d340 = add i32 %v0_1000d340, -4
  %v2_1000d340 = inttoptr i32 %v1_1000d340 to i32*
  %v3_1000d340 = load i32, i32* %v2_1000d340, align 4
  store i32 %v1_1000d340, i32* %r31.global-to-local, align 4
  %v3_1000d344 = icmp eq i32 %v3_1000d340, -1
  br i1 %v3_1000d344, label %dec_label_pc_1000d34c, label %dec_label_pc_1000d338

dec_label_pc_1000d34c:                            ; preds = %dec_label_pc_1000d338, %dec_label_pc_1000d310
  %v0_1000d35c = load i32, i32* @r3, align 4
  ret i32 %v0_1000d35c

; uselistorder directives
  uselistorder i32 %v3_1000d340, { 1, 0 }
  uselistorder i32 -4, { 0, 3, 4, 5, 6, 7, 8, 17, 18, 9, 10, 11, 12, 13, 14, 15, 16, 2, 1 }
  uselistorder void (i32)* @__pseudo_call, { 1, 4, 5, 2, 3, 0 }
  uselistorder i32 -1, { 154, 155, 0, 44, 102, 362, 16, 17, 18, 363, 103, 364, 14, 15, 45, 46, 267, 85, 47, 202, 48, 49, 50, 51, 52, 203, 204, 205, 206, 207, 208, 53, 375, 373, 54, 365, 366, 86, 104, 367, 21, 22, 105, 372, 19, 20, 191, 3, 87, 268, 269, 39, 156, 371, 368, 55, 157, 106, 158, 23, 24, 159, 160, 161, 42, 56, 162, 163, 107, 108, 109, 110, 270, 271, 25, 26, 27, 111, 272, 273, 112, 113, 114, 28, 115, 88, 84, 209, 210, 57, 58, 59, 60, 369, 370, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 374, 75, 164, 116, 29, 274, 275, 117, 118, 1, 119, 120, 247, 76, 77, 121, 2, 122, 30, 123, 78, 124, 31, 276, 89, 248, 125, 90, 249, 250, 251, 126, 252, 253, 79, 254, 127, 33, 128, 32, 129, 257, 258, 259, 130, 80, 260, 261, 262, 131, 132, 255, 256, 180, 83, 4, 181, 182, 133, 34, 183, 184, 185, 186, 187, 134, 43, 216, 93, 165, 166, 91, 167, 168, 169, 92, 170, 171, 172, 94, 173, 174, 175, 81, 176, 177, 135, 35, 136, 36, 178, 5, 6, 7, 8, 9, 179, 188, 82, 189, 190, 137, 138, 139, 140, 141, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 40, 41, 211, 212, 213, 214, 215, 142, 143, 144, 217, 218, 145, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 10, 241, 11, 242, 243, 12, 244, 13, 245, 246, 146, 147, 263, 148, 264, 149, 150, 265, 266, 151, 277, 278, 96, 95, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 98, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 97, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 152, 37, 153, 38, 361, 99, 100, 101 }
  uselistorder i32 1, { 79, 506, 1147, 657, 658, 776, 775, 114, 110, 113, 112, 109, 111, 779, 778, 777, 17, 0, 1014, 1015, 1016, 1017, 566, 18, 24, 25, 27, 28, 26, 300, 264, 780, 80, 81, 355, 257, 507, 508, 782, 781, 462, 461, 463, 459, 458, 460, 457, 464, 659, 437, 438, 440, 439, 783, 177, 71, 660, 784, 32, 30, 29, 31, 661, 597, 1151, 1148, 788, 787, 786, 785, 502, 500, 497, 501, 499, 498, 662, 1150, 789, 921, 922, 923, 656, 924, 567, 33, 34, 36, 35, 37, 84, 85, 86, 38, 39, 9, 10, 8, 263, 545, 790, 492, 1149, 505, 663, 664, 793, 792, 791, 75, 73, 74, 76, 72, 77, 260, 598, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 890, 808, 807, 455, 456, 810, 809, 12, 11, 13, 1156, 1157, 343, 341, 344, 342, 270, 271, 266, 269, 268, 267, 1152, 1153, 1154, 1155, 512, 511, 510, 811, 665, 812, 15, 14, 16, 666, 813, 258, 259, 599, 814, 50, 91, 299, 503, 465, 82, 118, 108, 262, 78, 815, 83, 327, 468, 504, 491, 509, 441, 816, 261, 817, 265, 891, 818, 328, 1059, 1060, 536, 537, 549, 1061, 1062, 544, 1063, 821, 820, 819, 48, 42, 45, 46, 49, 47, 44, 43, 1, 1064, 1065, 1066, 1067, 1068, 2, 1070, 1069, 1071, 1072, 1073, 1074, 526, 1075, 1076, 823, 822, 932, 933, 934, 667, 935, 19, 20, 21, 22, 1077, 1078, 569, 568, 1079, 119, 1080, 1082, 1081, 668, 1083, 538, 515, 514, 513, 1049, 115, 116, 1084, 1085, 539, 540, 550, 1086, 90, 87, 89, 88, 1087, 516, 517, 518, 519, 520, 521, 522, 523, 524, 1088, 323, 326, 325, 324, 1089, 319, 322, 321, 320, 6, 7, 551, 615, 1018, 1019, 614, 613, 600, 1020, 669, 1021, 1022, 670, 1023, 1024, 1025, 671, 672, 1029, 1026, 1027, 1028, 1031, 673, 1032, 674, 675, 1040, 676, 677, 1041, 601, 678, 679, 602, 603, 680, 681, 682, 683, 604, 684, 685, 686, 687, 605, 606, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 607, 608, 609, 610, 611, 701, 702, 703, 704, 612, 705, 1047, 1048, 586, 766, 767, 831, 830, 829, 828, 827, 826, 825, 824, 486, 483, 482, 481, 485, 489, 478, 477, 476, 469, 470, 475, 474, 473, 472, 471, 479, 480, 490, 484, 488, 487, 1042, 1043, 706, 1044, 1045, 707, 1046, 453, 444, 447, 449, 451, 450, 452, 446, 445, 454, 448, 1030, 708, 466, 467, 548, 901, 902, 906, 903, 909, 904, 527, 528, 905, 546, 529, 530, 541, 531, 532, 907, 908, 547, 533, 534, 542, 910, 709, 911, 912, 710, 913, 914, 915, 918, 919, 916, 917, 552, 920, 616, 839, 838, 837, 836, 835, 768, 834, 833, 832, 104, 100, 98, 92, 99, 102, 101, 95, 93, 94, 96, 105, 103, 107, 106, 97, 1005, 711, 553, 496, 494, 495, 493, 948, 951, 949, 950, 712, 840, 59, 56, 57, 64, 69, 70, 68, 63, 62, 61, 58, 60, 67, 66, 65, 618, 892, 893, 617, 894, 713, 714, 715, 896, 897, 895, 570, 898, 716, 717, 718, 899, 719, 587, 900, 720, 852, 851, 770, 850, 769, 773, 849, 848, 847, 846, 845, 844, 843, 842, 841, 54, 51, 52, 53, 55, 525, 721, 620, 619, 571, 854, 853, 722, 577, 925, 726, 723, 926, 724, 927, 725, 928, 929, 930, 543, 727, 931, 728, 729, 730, 731, 588, 865, 864, 863, 862, 861, 860, 859, 858, 857, 856, 855, 349, 351, 354, 345, 346, 347, 352, 350, 348, 353, 936, 732, 937, 938, 939, 940, 941, 4, 572, 942, 943, 3, 944, 945, 946, 947, 868, 867, 771, 772, 866, 443, 442, 1033, 1036, 1034, 573, 1035, 117, 1037, 1038, 1039, 733, 734, 952, 953, 954, 955, 956, 957, 960, 958, 959, 961, 962, 963, 735, 964, 554, 589, 965, 966, 967, 574, 968, 969, 871, 870, 869, 131, 120, 129, 121, 136, 145, 135, 143, 138, 139, 140, 141, 130, 142, 144, 125, 126, 146, 147, 148, 133, 132, 149, 134, 137, 128, 127, 124, 123, 122, 970, 971, 972, 736, 555, 590, 973, 873, 872, 275, 273, 284, 292, 293, 286, 294, 288, 279, 297, 289, 285, 295, 296, 287, 290, 281, 291, 278, 277, 276, 272, 274, 298, 283, 282, 280, 974, 975, 737, 976, 977, 978, 738, 739, 591, 979, 621, 622, 874, 190, 198, 187, 201, 203, 183, 184, 182, 204, 191, 194, 195, 196, 199, 180, 181, 197, 202, 178, 179, 189, 188, 200, 193, 192, 185, 186, 980, 625, 981, 982, 623, 983, 740, 741, 624, 875, 316, 307, 305, 317, 315, 318, 309, 312, 313, 314, 308, 311, 310, 306, 984, 985, 986, 987, 742, 556, 592, 988, 626, 627, 876, 243, 238, 232, 241, 252, 234, 233, 255, 239, 253, 254, 249, 250, 251, 247, 248, 244, 245, 242, 240, 246, 231, 256, 237, 236, 235, 230, 989, 990, 991, 743, 557, 593, 992, 628, 629, 630, 877, 214, 211, 215, 225, 205, 207, 217, 216, 228, 218, 212, 226, 227, 222, 223, 224, 220, 213, 221, 219, 229, 210, 209, 208, 206, 993, 994, 995, 996, 744, 558, 594, 997, 631, 632, 633, 634, 635, 881, 880, 879, 878, 395, 390, 399, 405, 388, 392, 402, 393, 403, 400, 404, 406, 407, 408, 396, 391, 389, 409, 401, 394, 398, 397, 387, 998, 999, 1000, 1002, 1003, 1001, 559, 595, 1004, 636, 637, 638, 882, 165, 152, 163, 172, 151, 150, 167, 175, 170, 168, 161, 153, 169, 173, 174, 157, 158, 166, 164, 171, 154, 176, 162, 160, 159, 155, 156, 1006, 1007, 1008, 1010, 1011, 1009, 560, 596, 1012, 639, 640, 641, 887, 886, 885, 884, 883, 431, 411, 420, 433, 430, 410, 423, 424, 429, 425, 419, 412, 421, 436, 427, 428, 415, 416, 422, 426, 432, 434, 435, 418, 417, 413, 414, 5, 642, 643, 644, 645, 646, 647, 648, 649, 1013, 650, 651, 303, 302, 301, 304, 561, 41, 562, 23, 1050, 745, 1054, 746, 1055, 1051, 1052, 1053, 1056, 1057, 332, 336, 340, 329, 339, 330, 335, 334, 333, 331, 338, 337, 1058, 747, 563, 40, 1090, 1091, 652, 1092, 1093, 575, 1094, 1095, 535, 578, 752, 579, 580, 751, 581, 755, 582, 1096, 653, 583, 753, 584, 585, 754, 576, 1097, 1098, 750, 1099, 1100, 1101, 1102, 1103, 1104, 763, 764, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 749, 1114, 1115, 1116, 1117, 1118, 1119, 756, 757, 758, 1120, 1121, 1122, 1123, 1124, 1125, 759, 1126, 1127, 1128, 1129, 760, 1130, 1131, 1132, 1133, 761, 1134, 762, 1135, 1136, 1137, 564, 748, 654, 1138, 1139, 565, 1140, 1141, 1142, 765, 1143, 1144, 1145, 1146, 655, 889, 888, 378, 384, 369, 360, 383, 375, 377, 376, 370, 371, 361, 373, 374, 362, 372, 363, 364, 365, 366, 367, 368, 379, 386, 385, 357, 382, 381, 380, 359, 358, 356, 774 }
  uselistorder label %dec_label_pc_1000d338, { 1, 0 }
}

define i32 @function_1000d360() local_unnamed_addr {
dec_label_pc_1000d360:
  %v0_1000d378 = load i32, i32* @r3, align 4
  ret i32 %v0_1000d378

; uselistorder directives
  uselistorder i32* @r3, { 11, 12, 243, 244, 245, 13, 115, 0, 116, 32, 253, 18, 17, 3, 25, 246, 248, 31, 249, 250, 251, 169, 29, 170, 9, 15, 184, 189, 188, 247, 83, 190, 84, 85, 191, 26, 19, 20, 252, 117, 118, 119, 120, 121, 122, 123, 124, 125, 14, 30, 4, 21, 192, 1, 2, 5, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 171, 172, 176, 177, 178, 181, 182, 183, 173, 6, 174, 175, 96, 97, 28, 98, 99, 100, 16, 161, 162, 163, 10, 164, 165, 7, 140, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 101, 22, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 179, 180, 8, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 166, 167, 168, 193, 185, 186, 187, 194, 195, 196, 197, 199, 200, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 24, 23, 27 }
}

define i32 @function_1000d37c() local_unnamed_addr {
entry:
  store i32 268489612, i32* @lr, align 4
  %v0_1000d388 = call i32 @function_100000b8()
  ret i32 %v0_1000d388

; uselistorder directives
  uselistorder i32 0, { 1107, 238, 1108, 40, 239, 169, 1111, 240, 1112, 1113, 38, 39, 1114, 1115, 1116, 70, 1117, 0, 743, 744, 745, 89, 88, 746, 571, 241, 242, 750, 877, 878, 170, 879, 1118, 17, 572, 573, 1119, 1120, 1121, 1122, 243, 574, 575, 576, 577, 578, 579, 580, 90, 581, 582, 1123, 1124, 244, 1142, 1143, 245, 1148, 1157, 162, 1158, 246, 1149, 1, 1125, 1126, 91, 1127, 1128, 247, 171, 248, 1129, 1130, 43, 44, 1131, 1132, 1133, 249, 1136, 1137, 1138, 41, 42, 1139, 1140, 1141, 540, 541, 542, 543, 544, 92, 545, 546, 547, 236, 548, 93, 882, 884, 21, 885, 45, 886, 883, 880, 881, 2, 755, 751, 752, 753, 754, 163, 3, 889, 887, 888, 164, 890, 891, 756, 757, 758, 759, 760, 250, 761, 762, 856, 857, 251, 858, 172, 892, 901, 902, 94, 893, 894, 895, 896, 897, 898, 899, 900, 4, 5, 468, 476, 477, 478, 46, 47, 479, 6, 252, 747, 480, 481, 482, 483, 484, 485, 486, 487, 253, 488, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 903, 904, 48, 905, 906, 907, 908, 909, 1150, 1151, 1152, 49, 1153, 1154, 1155, 1156, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 489, 549, 910, 1134, 1135, 490, 911, 595, 612, 491, 1144, 95, 1145, 1109, 873, 1110, 874, 912, 492, 1146, 1147, 493, 494, 913, 914, 915, 50, 96, 916, 917, 237, 918, 920, 919, 168, 7, 921, 74, 22, 75, 23, 922, 923, 8, 76, 24, 77, 25, 924, 78, 925, 26, 27, 926, 79, 28, 97, 254, 255, 18, 19, 596, 927, 928, 929, 930, 101, 99, 98, 931, 100, 103, 102, 932, 104, 933, 51, 934, 935, 936, 859, 105, 860, 861, 937, 938, 52, 106, 939, 9, 107, 940, 108, 941, 763, 764, 765, 112, 766, 767, 768, 769, 159, 770, 256, 771, 772, 776, 773, 110, 475, 774, 111, 775, 257, 777, 778, 779, 780, 781, 113, 782, 783, 173, 784, 785, 469, 80, 786, 787, 788, 789, 790, 791, 55, 56, 792, 793, 53, 54, 794, 795, 174, 175, 796, 797, 258, 798, 800, 801, 802, 803, 804, 176, 177, 809, 810, 259, 811, 805, 806, 807, 808, 812, 20, 470, 471, 818, 819, 109, 820, 821, 822, 827, 828, 829, 830, 178, 831, 832, 114, 833, 834, 835, 836, 837, 838, 823, 115, 824, 825, 116, 826, 260, 799, 83, 520, 521, 29, 261, 81, 30, 31, 262, 82, 32, 522, 10, 182, 181, 523, 524, 525, 526, 527, 528, 180, 179, 529, 57, 58, 530, 531, 263, 117, 532, 533, 118, 534, 119, 535, 120, 536, 537, 613, 614, 615, 616, 617, 618, 619, 620, 621, 495, 496, 160, 497, 498, 499, 264, 500, 501, 502, 503, 504, 505, 506, 507, 183, 508, 509, 59, 60, 510, 511, 512, 61, 62, 513, 514, 515, 11, 516, 517, 518, 265, 266, 519, 538, 184, 539, 551, 122, 550, 121, 552, 553, 124, 554, 123, 555, 556, 126, 557, 125, 558, 559, 128, 560, 127, 561, 562, 130, 563, 129, 564, 12, 267, 268, 16, 567, 565, 566, 165, 568, 569, 185, 269, 270, 570, 33, 597, 608, 598, 13, 599, 600, 601, 602, 166, 603, 604, 605, 606, 607, 34, 131, 69, 68, 132, 609, 63, 273, 610, 271, 272, 186, 611, 85, 813, 814, 84, 815, 133, 816, 86, 817, 134, 622, 623, 274, 624, 625, 136, 135, 626, 275, 627, 628, 629, 630, 631, 632, 633, 137, 634, 635, 636, 187, 637, 638, 276, 639, 71, 72, 640, 138, 641, 642, 643, 277, 188, 189, 190, 191, 139, 644, 278, 645, 646, 647, 648, 279, 649, 650, 651, 193, 192, 652, 280, 653, 654, 655, 656, 657, 140, 658, 281, 659, 660, 661, 662, 663, 282, 664, 665, 666, 194, 195, 196, 197, 144, 143, 667, 668, 35, 142, 141, 669, 670, 671, 36, 672, 673, 674, 675, 145, 198, 676, 146, 677, 283, 678, 679, 680, 284, 681, 682, 683, 684, 285, 685, 686, 687, 199, 200, 201, 202, 203, 204, 205, 206, 688, 689, 147, 690, 691, 286, 692, 693, 694, 695, 696, 697, 287, 698, 699, 700, 215, 207, 208, 209, 210, 211, 212, 213, 214, 148, 701, 702, 288, 703, 704, 705, 706, 709, 710, 289, 708, 707, 290, 711, 712, 713, 216, 217, 218, 219, 220, 221, 222, 714, 149, 715, 291, 716, 717, 718, 719, 720, 721, 722, 723, 724, 292, 725, 726, 727, 223, 224, 225, 226, 728, 150, 729, 293, 730, 731, 732, 733, 734, 735, 736, 737, 738, 294, 739, 740, 741, 227, 228, 229, 230, 742, 942, 943, 748, 749, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 151, 853, 295, 854, 855, 862, 73, 863, 864, 296, 865, 866, 867, 868, 869, 870, 871, 872, 875, 37, 876, 944, 299, 949, 950, 951, 952, 946, 947, 948, 945, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 300, 969, 970, 971, 972, 297, 973, 974, 167, 975, 976, 87, 152, 977, 978, 979, 980, 981, 982, 983, 984, 154, 985, 986, 987, 988, 989, 990, 1003, 1004, 1005, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1006, 303, 1007, 1008, 1009, 1010, 1011, 153, 1012, 1013, 1014, 1015, 298, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 301, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 302, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 157, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 155, 1073, 1075, 1074, 1076, 1077, 1078, 1079, 1080, 231, 156, 1081, 1082, 1083, 1084, 232, 1085, 304, 305, 1086, 1087, 1088, 1089, 1090, 64, 65, 1091, 1092, 66, 67, 1093, 1094, 161, 1095, 158, 1096, 1097, 1098, 306, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 233, 1106, 234, 235, 1167, 1168, 1169, 15, 14, 472, 473, 474, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192 }
  uselistorder i32* @lr, { 7, 747, 890, 891, 895, 896, 897, 898, 899, 900, 598, 117, 319, 320, 8, 748, 749, 321, 322, 323, 324, 325, 326, 909, 910, 914, 915, 916, 917, 918, 919, 921, 923, 911, 913, 901, 902, 903, 904, 905, 906, 907, 908, 750, 752, 751, 601, 602, 603, 604, 605, 606, 730, 731, 732, 753, 757, 754, 755, 756, 118, 119, 892, 893, 894, 758, 759, 607, 760, 608, 761, 250, 762, 609, 763, 446, 120, 599, 121, 122, 123, 124, 125, 126, 127, 922, 920, 610, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 912, 128, 129, 611, 612, 613, 614, 341, 764, 765, 733, 766, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 767, 768, 615, 616, 617, 618, 619, 620, 109, 110, 111, 112, 113, 114, 115, 116, 621, 622, 623, 624, 625, 626, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 705, 706, 707, 708, 709, 710, 711, 716, 717, 718, 719, 697, 698, 699, 700, 701, 702, 703, 704, 627, 628, 629, 630, 631, 632, 130, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 385, 712, 713, 714, 715, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 0, 269, 270, 271, 272, 273, 274, 275, 276, 277, 294, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 2, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 3, 370, 371, 372, 373, 374, 375, 1, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 449, 450, 451, 448, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 769, 600, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 770, 771, 772, 773, 776, 777, 778, 779, 774, 775, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 795, 794, 4, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 5, 6 }
}

declare i32 @__asm_rlwinm(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwinm.(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwimi(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_mfcr() local_unnamed_addr

declare %0 @__asm_mtcrf(i32, i32) local_unnamed_addr

declare i32 @unknown_0(i32, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i16 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8 @__decompiler_undefined_function_2() local_unnamed_addr

declare i8* @__decompiler_undefined_function_3() local_unnamed_addr

declare i64 @__decompiler_undefined_function_4() local_unnamed_addr
